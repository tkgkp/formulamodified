:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !tte_wyk_dgrp.fml
:: Utworzony: 04.03.2016
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły czynności TTE_WYK_DGRP - Generowanie raportu produkcji
::======================================================================================================================


\action_zparn_generate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Generowanie dokumentu raportującego - akcja z menu okna wertowania partii (tabela ZPARN)
::       Umożliwia wygenerowanie dokumentu raportującego do zaznaczonych partii
::----------------------------------------------------------------------------------------------------------------------
_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:='TTE_WYK_DGRP';
_args.UIDREF:=ZL.uidref();
_args.AKCJA:='ZPARN_GENERUJ';
_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
_args.PROC_START:='T';
_args.CONTEXT:=obj_new('ZLGD','TAB_PART','ZGP');
_args.CONTEXT.ZLGD:=null();
_args.CONTEXT.ZGP:=null();
_args.CONTEXT.TAB_PART:=exec('ref_table','#table');

_grp_act:=ZPARN.sel_size();
_sel:=ZPARN.sel_aget();


ZPARN.cntx_psh();
ZPARN.prefix();
{? _grp_act>0
|| {? _sel.first()
   || {!
      |? {? ZPARN.seek(_sel.REF,)
:: NUCO - weryfikacja czy uzupełniono termin ważności
         || {? ZPARN.TW<>date(0,0,0) & ZPARN.TW>date()
            || _args.CONTEXT.TAB_PART.add(ZPARN.ref())
            || _msg:='Niepoprawnie uzupełniono terminu ważności dla partii %1.\nGenerowanie raportu dla tej partii zostało anulowane.'@@[ZPARN.SYM];
               FUN.emsg(_msg)
            ?}
         ?};
         _sel.next()
      !}
   ?}
||
:: NUCO - weryfikacja czy uzupełniono termin ważności
   {? ZPARN.TW<>date(0,0,0) & ZPARN.TW>date()
   || _args.CONTEXT.TAB_PART.add(ZPARN.ref())
   || _msg:='Niepoprawnie uzupełniono terminu ważności dla partii %1.\nGenerowanie raportu dla tej partii zostało anulowane.'@@[ZPARN.SYM];
      FUN.emsg(_msg)
   ?}
?};

ZPARN.cntx_pop();
ZPARN.sel_adel();

{? _args.CONTEXT.TAB_PART.tab.size()>0
|| exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'ZL',ZL.ref());
   exec('mp_run','#b__box',_args)
?}


\action_prodrej_generate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Generowanie dokumentu raportującego - akcja z menu okna wertowania PROD_REJ
::       Umożliwia wygenerowanie dokumentu raportującego do pozycji przewodnika
::----------------------------------------------------------------------------------------------------------------------
_can_continue:=1;

{? PROD_REJ.ZGP=null()
|| _msg:='Akcja dotyczy wyłącznie wykonań powiązanych z przewodnikiem zlecenia'@;
   FUN.emsg(_msg);
   _can_continue:=0
?};
:: NUCO - zmian - dodatkowa kontrola uzupełnienia terminó dla partii wyrobu
PROD_REJ.ZL();
{? _can_continue & sql('select * from ZPARN where ZPARN.ZGH=:_a and ZPARN.TW is null',PROD_REJ.ZGH).size()>0
|| {? ZL.KTM().TWD=0
   || _msg:='Nie uzupełniono terminu ważności dla partii związanych z operacją.\nGenerowanie raportu zostało anulowane.'@;
      FUN.emsg(_msg);
      _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   _args:=exec('mp_run_a','#b__box');
   _args.ACT_UID:='TTE_WYK_DGRP';
   _args.UIDREF:=ZL.uidref();
   _args.AKCJA:='ZGP_GENERUJ';
   _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
   _args.PROC_START:='T';
   _args.CONTEXT:=obj_new('ZLGD','TAB_PART','ZGP');
   _args.CONTEXT.ZLGD:=null();
   _args.CONTEXT.ZGP:=PROD_REJ.ZGP;
   _args.CONTEXT.TAB_PART:=exec('ref_table','#table');
   exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'ZL',ZL.ref());

   exec('mp_run','#b__box',_args)
?};
~~




\edit_cecha
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Wyświetlenie okienka z cechą
::   WE: _a - obj_new() - tablica argumentów wszystkich funkcji gendok_, wynik działania exec('gendok_args','!tte_wyk_dgrp')
::       [_b] - ZL.ref - zlecenie lub bieżący rekord
::       [_c] - ZPARN.ref - partia
::   WY: DK_C.ref lub null jeżeli zrezygnowano z redakcji
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_args:=_a;
_ref:=null();
{? var_pres('_b')=type_of(ZL.ref())
|| _ref:=_b
?};
_zparn:=null();
{? var_pres('_c')=type_of(ZPARN.ref())
|| _zparn:=_c
?};

_result:=null();
_can_continue:=1;

:: NUCO - obsługa generowania raportów bez dodatkowych pytań o partie i atrybuty
_dialog:=1;

M_ATR.cntx_psh();
DK.cntx_psh();
ZL.cntx_psh();
{? _ref<>null()
|| ZL.prefix();
   {? ZL.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   _party:=exec('zlec_party','zl_common',ZL.ref());

:: Pytam się o cechę wyłącznie jeżeli zlecenie którego dotyczy generacja ma więcej niż jeden atrybut - dla atrybutów
:: Tylko z partią, cecha utworzy się automatycznie w gendok_core
   ZL.KTM().M_ATR();
   _buf_matr:=exec('buffer','mat_atr');
   _buf_matr.get_matr();

   {? ZL.DK_C<>null()
   || ZL.DK_C();
      _buf_matr.get_dkc()
   ?};

   {? _args.DK_C<>null()
   || DK_C.cntx_psh(); DK_C.prefix();
      {? DK_C.seek(_args.DK_C)
      || _buf_matr.get_dkc()
      ?};
      DK_C.cntx_pop()
   ?};
   {? _zparn<>null()
   || _buf_matr.set_part(_zparn);
:: NUCO - jeżeli z_parn jest różny od null sprawdzam czy ma przypisane DK_C, jeśli tak to uzupełniam wartościami wszystkie
::
      _zparn_dkc:=exec('FindAndGet','#table',ZPARN,_zparn,,"DK_C",null);
      {? _zparn_dkc<>null()
      || DK_C.cntx_psh(); DK_C.prefix();
         {? DK_C.seek(_zparn_dkc)
         || _zparn_matr:=exec('buffer','mat_atr');
            _zparn_matr.get_dkc();
            _buf_matr.merge(_zparn_matr);
            _dialog:=0
         ?};
         DK_C.cntx_pop()
      ?}
   ?};
:: Koniec zmiany
   {? _buf_matr.count()>0 & ZL.MG().TYP*'DOST'>0
   ||
      {? _buf_matr.all_set()=0
      ||
::       Daję komunikat informacyjny
         _msg:='Ponieważ zlecenie %1 posiada przypisaną cechę lub jest partiowane,\n'
               'wymagane jest określenie wartości atrybutów dla cechy dokumentu raportującego produkt zlecenia.'@[ZL.SYM];
:: NUCO - obsługa generowania raportów bez dodatkowych pytań o partie i atrybuty
         {? _dialog
         || FUN.info(_msg)
         ?};
::       Tworzę cechę
         DK.blank();
         DK.M:=ZL.KTM;

         ATR.ZPARN_DK:=_zparn;
         _dk_c:=exec('matr_rp','mat_atr',ZL.ref());
         {? _dk_c<>null()
         || _args.DK_C:=_dk_c;
            _result:=_dk_c
         ?}
      ||
::       Zakładam ceche, lub zwracam istniejącą
         _result:=exec('m_atr_sprdod','mat_atr',_buf_matr.WAR01
                                               ,_buf_matr.WAR02
                                               ,_buf_matr.WAR03
                                               ,_buf_matr.WAR04
                                               ,_buf_matr.WAR05
                                               ,_buf_matr.WAR06
                                               ,_buf_matr.WAR07
                                               ,_buf_matr.WAR08
                                               ,_buf_matr.WAR09
                                               ,_buf_matr.WAR10
                                               ,_buf_matr.M_ATR
                                               ,_zparn
                                               )


      ?}
   ?}
?};
ZL.cntx_pop();
DK.cntx_pop();
M_ATR.cntx_pop();
_result

