:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !hbn_prz_kart.fml
:: Utworzony: 05.08.2020
:: Autor: AFI
::======================================================================================================================
:: Zawartość: Obsługa czynności utworzenia przelewów z dowolnej kartoteki
::======================================================================================================================


\bank_transfer_crt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [20.42]
:: OPIS: Tworzy przelewy z dowolnej kartoteki
::   WE: _a - czy wyświetlać dialogi
::       _b - Czy wtyczka jest uruchamiana z procesu/akcji [1/0]
::   WY: wynik przetwarzania, 1 - jeżeli ok, 0 - w przypadku błędów
::----------------------------------------------------------------------------------------------------------------------
_dialog:=_a;
_result:=obj_new('STATUS','DESC');
_result.STATUS:=1;
_result.DESC:='';
pbcn:=0;

{? Plugin.runnable('HBN_PB')
|| {? Plugin.run('HBN_PB',_b) & var_pres('PB_TMP')>0
   || KH.cntx_psh();
      KH.prefix();
      PB.use('pbxxxx'); PB_OP.use('popxxxx');
      PB.cntx_psh();
      {? PB_TMP.first()
      || {!
         |? PB.index('PB_S');
            PB.prefix();
            PB.blank();
            {? KH.seek(PB_TMP.KH)
            || {? PB_TMP.RW=''
               || exec('khdane','rozrach_przel')
               || PB.RW:=PB_TMP.RW;
                  B.cntx_psh();
                  B.index('BANK');
                  B.prefix(PB_TMP.NBW_NB,PB_TMP.NBW_NUME);
                  {? B.first() || PB.NBW:=B.ref() ?};
                  B.cntx_pop();

                  KRAJE.cntx_psh();
                  KRAJE.index('KRAJE');
                  KRAJE.prefix(PB_TMP.KRAJ_BAN);
                  {? KRAJE.first() || PB.KRAJ_BAN:=KRAJE.ref() ?};
                  KRAJE.prefix(PB_TMP.KRAJ_KH);
                  {? KRAJE.first() || PB.KRAJ_KH:=KRAJE.ref() ?};
                  KRAJE.cntx_pop();
:WW: Z pola typu STRING wyciągnięto refa tabeli KH przy pomocy proc. FindAndGet
                  _ref:=exec('FindAndGet','#table',KH,PB_TMP.KH,,"ref",null());
:WW: Przypisano do pola złączeniowego KH refa rekordu DOKUM.KH
                  PB.KH:=_ref;
                  PB.SWIFT:=PB_TMP.SWIFT;
                  PB.STR:=PB_TMP.STR;
                  PB.W:=PB_TMP.W;
                  PB.M:=PB_TMP.M;
                  PB.UL:=PB_TMP.UL;
:WW: Przypisano do tabeli PB dodatkowe pola KP
                  PB.KP:=PB_TMP.KP
               ?};
               {? var_pres('_res')>0 || obj_del(_res) ?};
               _res:=~~;
               _res:=exec('check','blp','B',KH.SNIP,date());
               {? var_pres('_res')>0
               || {? _res.RES=200
                  || PB.ID_S_VAT:=_res.ID_REQ;
                     PB.S_VAT:=_res.ACTIVE;
                     PB.S_VAT_D:=_res.DATA
                  || PB.ID_S_VAT:='';
                     PB.S_VAT:='';
:WW: Pole S_VAT_D jest typu DATE, a nie STRING
                        PB.S_VAT_D:=date(0,0,0);
                     _result.DESC:=_res.OPIS+'\nNie udało się znaleźć informacji o aktywności rachunku bankowego.'@
                  ?}
               || _result.DESC:='Nie udało się znaleźć informacji\no aktywności rachunku bankowego.'@
               ?}
            || _result.STATUS:=0;
               _result.DESC:='Brak kontrahenta.'@
            ?};
            {? _result.STATUS=1
            || PB.KD:=PB_TMP.KD;
               PB.AN:=PB_TMP.AN;
               PB.SYM:=PB_TMP.SYM;
               PB.F_VAT:=PB_TMP.F_VAT;
               PB.SYM_ROK:=PB_TMP.SYM_ROK;
               PB.SYM_ZEW:=PB_TMP.SYM_ZEW;
               PB.RD:=PB_TMP.RD;
               B.cntx_psh();
               B.index('BANK');
               B.prefix(PB_TMP.NBD_NB,PB_TMP.NBD_NUME);
               {? B.first() || PB.NBD:=B.ref() ?};
               B.cntx_pop();
               PB.DP:={? PB_TMP.DP=date(0,0,0) || date() || PB_TMP.DP ?};
               PB.USER_GEN:=exec('usr_zar','dok_fks');
               PB.DZ:={? PB_TMP.DZ=date(0,0,0) || date() || PB_TMP.DZ ?};
               PB.TYT:=PB_TMP.TYT;
               PB.KW:=PB_TMP.KW;
               ODD.cntx_psh();
               ODD.prefix();
               {? ODD.seek(PB_TMP.ODD) || PB.ODD:=ODD.ref() ?};
               ODD.cntx_pop();
               {? FINFO.NAROD().SLU<>null
               || SLO.index('SL');
                  SLO.prefix(FINFO.NAROD().SLU,PB_TMP.WAL_KOD);
                  {? SLO.first()
                  || PB.WAL:=SLO.ref()
                  || _result.DESC+='Nie udało się znaleźć waluty.'@
                  ?}
               ?};
            {? PB_TMP.RODZ='K'
:WW:przypisanie 'K'
            || PB.RODZ:=PB_TMP.RODZ
:WW:przypisanie 'W'
            || PB.RODZ:=PB_TMP.RODZ;
                  SLO.cntx_psh();
                  SLO.prefix();
:WW: Z pola typu STRING wyciągnięto refa tabeli SLO przy pomocy proc. FindAndGet
               _ref:=exec('FindAndGet','#table',SLO,PB_TMP.RODZZAGR,,"ref",null());
:WW: Wczytuje podany rekord do bufora
               {? SLO.seek(_ref) ||
               PB.RODZZAGR:=SLO.ref ?};
                  SLO.cntx_pop();
                  TYPYTRAN.cntx_psh();
                  TYPYTRAN.prefix();
:WW: Z pola typu STRING wyciągnięto refa tabeli TYPYTRAN przy pomocy proc. FindAndGet
               _ref1:=exec('FindAndGet','#table',TYPYTRAN,PB_TMP.KOD_STAT,,"ref",null());
:WW: Z pola typu STRING wyciągnięto refa tabeli TYPYTRAN przy pomocy proc. FindAndGet
               _ref2:=exec('FindAndGet','#table',TYPYTRAN,PB_TMP.TRYB_POS,,"ref",null());
:WW: Wczytuje podany rekord do bufora
               {? TYPYTRAN.seek(_ref1) || PB.KOD_STAT:=TYPYTRAN.ref() ?};
:WW: Wczytuje podany rekord do bufora
               {? TYPYTRAN.seek(_ref2) || PB.TRYB_POS:=TYPYTRAN.ref() ?};
                  TYPYTRAN.cntx_pop();
                  PB.OPISZ:=PB_TMP.OPISZ
               ?};
               {? PB_TMP.SP = 'T'
               || PB.SP:='T';
                  PB.SP_V:=PB_TMP.SP_V;
                  PB.KHNIP:=PB_TMP.KHNIP;
                  PB.NRFAK:=PB_TMP.NRFAK
               ?};
               PB.SP_WYM:=PB_TMP.SP_WYM;
               PB.WSK_S:=PB_TMP.WSK_S;
               PB.SRC_REF:=PB_TMP.SRC_REF;

               {? PB.add()
               || pbcn+=1;
                  {? var_pres('PB_OP_TMP')>0
                  || PB_OP_TMP.cntx_psh();
                     PB_OP_TMP.prefix(PB_TMP.SRC_REF);
                     PB_OP.cntx_psh();
                     {? PB_OP_TMP.first()
                     || {!
                        |? PB_OP.blank();
                           PB_OP.PB:=PB.ref();
                           {? FINFO.NAROD().SLU<>null
                           || SLO.index('SL');
                              SLO.prefix(FINFO.NAROD().SLU,PB_OP_TMP.WAL_KOD);
                              {? SLO.first()
                              || PB_OP.WAL:=SLO.ref()
                              || _result.DESC+='Nie udało się znaleźć waluty dla powiązanego rozrachunku.'@
                              ?}
                           ?};
                           ODD.cntx_psh();
                           ODD.prefix();
                           {? ODD.seek(PB_OP_TMP.ODD) || PB.ODD:=ODD.ref() ?};
                           ODD.cntx_pop();
                           PB_OP.DP:=PB_OP_TMP.DP;
                           PB_OP.AN:=PB_OP_TMP.AN;
                           PB_OP.SYM:=PB_OP_TMP.SYM;
                           PB_OP.SYM_ZEW:=PB_OP_TMP.SYM_ZEW;
                           PB_OP.SYM_ROK:=PB_OP_TMP.SYM_ROK;
                           PB_OP.K:=PB_OP_TMP.KW;
                           PB_OP.TYT:=PB_OP_TMP.TYT;
                           PB_OP.add();
                           PB_OP_TMP.next()
                        !}
                     ?};
                     PB_OP.cntx_pop();
                     PB_OP_TMP.cntx_pop()
                  ?}
               ?};
               PB_TMP.next()
            ?}
         !};
         _result.DESC:='Liczba wygenerowanych przelewów: %1'@[$pbcn];
         pbcnp:=pbcn:=0
      ?};
      KH.cntx_pop();
      PB.cntx_pop()
   || _result.STATUS:=0;
      _result.DESC:='W tabeli PB_TMP brak rekordów na bazie których mają zostać utworzone przelewy elektroniczne'
   ?}
|| _result.STATUS:=0;
   _result.DESC:='Wtyczka HBN_PB jest niepoprawnie skonfigurowana. Brak wypełnionego pola formuła'
?};
_result


