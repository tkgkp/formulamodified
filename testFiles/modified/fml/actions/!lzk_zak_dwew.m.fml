:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lzk_zak_dwew.fml
:: Utworzony: 15.06.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Rejestracja dokumentu wewnętrznego
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
:: NUCO dodana obsługa tworzenia dokumentów wewnętrznych z obiegów analogicznie do dokumentów zakupu
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ,LZK,TARD
::# parses=exec('parses','!lzk_zak_dwew')
::# kind=WE,   symbol=TYPYSP,    type=_TYPYSP,  name=Typ dokumentu zakupu,    required=N, fml_val="exec('typysp','!lzk_zak_dwew')"
::# kind=WE,   symbol=ZAK,       type=_FAKS,    name=Dokument zakupu,         required=N, keyref=T
::NUCO
::# kind=WE, symbol=EDOKUM, type=_EDOKUM, name=Dokument w obiegu,              required=N
::# kind=WY,   symbol=ZAK,       type=_FAKS,    name=Dokument zakupu,         required=N
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
_context:=params_get().context;

exec('init_zak','lzk');

:: Przepisanie portu wejściowego ZAK na wyjściowy ZAK
{? var_press('ZAK',_in)=type_of(null()) & _in.ZAK
   & (var_press('ZAK',_out)<>type_of(null()) | _out.ZAK=null())
|| _out.ZAK:=_in.ZAK;
   _mp.save(,_out)
?};

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_area_zws_khr:=_mp.pathArea('ZWS_KHR');
_area_lzk_zak:=_mp.pathArea('LZK_ZAK');
_area_zbl_dok:=_mp.pathArea('ZBL_DOK');
_area:=_area_zws_khr | _area_lzk_zak | _area_zbl_dok;
_proc:=_mp.pathProc();
_todo:=_mp.pathTodo() | _mp.pathArea() & ~_area;
_grupa:=_mp.isGroup();
_autoakc:=exec('autoAkc','#b__box',_mp,200080,'LZK_ZAK_EZAK');
::NUCO
{? _area & (var_pres('ZAK',_out)<>type_of(null()) | _out.ZAK=null())
|| _out.ZAK:=FAKS.ref();
   _mp.save(,_out)
?};

{? _todo
:: Ustawienie kontekstu wg instancji elementu w procesie
|| {? var_pres('ZAK',_out)=type_of(null()) & _out.ZAK
   || 1
   |? ~_mp.isMicro()
   || _akcja:='START_TODO'
   || _mp.error('Brak parametru wyjściowego ZAK.')
   ?}
?};

:: Sprawdzenie uprawnień
{? params_exec('permissions_chk','lzk','!lzk_zak_dwew')=0 || return() ?};

:: Wyzwalacz, który po dodaniu nagłówka dokumentu:
:: - add: dodaje rekord kluczowy nagłówka dokumentu
::   del: usuwa rekord kluczowy nagłówka dokumentu
:: - add: zapisuje parametr wyjściowy ZAK = wskazanie na nagłówek korekty
::   del: zapisuje parametr wyjściowy ZAK = null
_mp.trigRef('FAKS',,1,,exec('kind_out','#b_port'),'ZAK');

_typysp_t:={? var_pres('TYPYSP',_in)=type_of(null())
           || exec('FindAndGet','#table',TYPYSP,_in.TYPYSP,,"TYPYSP.T")
           || ''
           ?};
::NUCO
_edokum:={? var_pres('EDOKUM',_in)=type_of(null()) || _in.EDOKUM || null() ?};
_zafakt:=var_pres('ZAK',_out)=type_of(null()) & _out.ZAK;

_addzak:=_akcja='Dołącz' | _proc | _akcja='START_TODO';

{? _addzak & ~_zafakt & _edokum<>null()
|| _ctrl:=exec('ctrlEDOKUM','faktury_nag',_edokum,'Z','F');
   {? ~_ctrl
   || _mp.error('Niepoprawny parametr EDOKUM - typ dokumentu w obiegu niezgodny z czynnością.'@@)
   |? _ctrl=-1
   || _mp.done()
   |? _ctrl=2
   || FUN.info('Dokument w obiegu nie został zaakceptowany.'@);
      _mp.cancel()
   || params_set('out',_out,'mp',_mp,'akcja',_akcja);
      _faks:=params_exec('GenWgEDOKUM','faktury_nag',_edokum,'Z','F',_typysp_t)
   ?}
|? _addzak
:: Obsługa Dołącz - dołącz w oknie obszaru i start procesu z pulpitu
|| _typysp_t:=
      {? var_pres('TYPYSP',_in)=type_of(null())
      || exec('FindAndGet','#table',TYPYSP,_in.TYPYSP,,"TYPYSP.T")
      || ''
      ?};
   BEER.WYSTFAKS:=null;
   HELP.WMAG:=0;

:: Parametr 'akcja' wykorzystywany w formułach przycisków 'Pozycje', 'Zakończ'
   params_set('out',_out,'mp',_mp,'akcja',_akcja,'context',_context);
   exec('wystinne','faktury_nag','E',,,,,,,,,_typysp_t);

:: Podczytanie parametrów wyjściowych
   _outa:=_mp.load(exec('kind_out','#b_port'));
   {? var_pres('ZAK',_outa)<>type_of(~~) & _outa.ZAK
:: Dodano dokument
   ||
::    Ustawienie się na dodanym dokumencie w widoku obszaru
      params_exec('seek_dok','faktury_wspolne',_area_lzk_zak,_outa.ZAK)
:: Wycofanie czynności bo nie dodano dokumentu
   || _mp.cancel()
   ?}

|? _akcja='Kopiuj'
|| params_set(params_get());
   exec('kopiuj','faktury_nag1');

:: Podczytanie parametrów wyjściowych
   _outa:=_mp.load(exec('kind_out','#b_port'));
   {? var_pres('ZAK',_outa)<>type_of(~~) & _outa.ZAK
:: Dodano dokument
   || ~~
:: Wycofanie czynności bo nie dodano dokumentu
   || _mp.cancel()
   ?}

|? _akcja='Businesslink'
||
   {? ~_mp.isMicro()
   ||
::    Przepisanie portu wejściowego FAKS na wyjściowy ZAK
      {? var_pres('ZAK',_in)=type_of(null()) & _in.ZAK
            &
         (var_pres('ZAK',_out)<>type_of(null()) | _out.ZAK=null())
      ||
         _out.ZAK:=_in.ZAK;
         _mp.save(,_out)
      ?};
      _mp.keep()
   ?}

|? _akcja='Popraw'
   | _todo
|| {? var_pres('ZAK',_out)=type_of(null())
:: Uruchomione w procesie
   || FAKS.cntx_psh();
      FAKS.use(ref_name(_out.ZAK));
      FAKS.cntx_psh();
      FAKS.prefix();
      {? FAKS.seek(_out.ZAK)
      || {? FAKS.STAT_REJ<>'N'
         || _mp.done()
         || exec('faks_win_edit_set','faktury_nag');

            params_set('out',_out,'mp',_mp,'akcja',_akcja);
            exec('fak_pop','faktury_nag')
         ?}
      ?};
      FAKS.cntx_pop();
      FAKS.cntx_pop()
   |? _mp.isMicro()
:: Uruchomione poza procesem
   || {? ~_todo
      || params_set('out',_out,'mp',_mp,'akcja',_akcja);
         exec('fak_pop','faktury_nag')
      |? _akcja='Zakończ_wer'
      || {? exec('faks_zakoncz','faktury_nag',,_autoakc) || _mp.done() ?}
      || _mp.cancel()
      ?}
   |? _todo
:: Uruchomione zadanie z listy todo i brak _out.FAKS wtedy zadanie wycofujemy
   || _mp.cancel()
   ?}

|? _akcja='Usuń'
|| {? var_pres('ZAK',_out)=type_of(null())
:: Uruchomione w procesie
   || _faks:=null();
      FAKS.cntx_psh();
      {? ~_area_lzk_zak || FAKS.prefix() ?};
      {? FAKS.seek(_out.ZAK)
      ||
         exec('usun_fak','faktury_nag',{? _grupa || 2 || 1 ?});

         {? ~FAKS.seek(_out.ZAK)
::       Wycofuję instancję jeśli nie znaleziono dokumentu
         || _mp.cancel()
         ?};
         _faks:=FAKS.ref()
      ?};
      FAKS.cntx_pop();
::    Ustawienie się na kolejnym dokumencie w widoku obszaru
      {? _area_lzk_zak || {? _faks || FAKS.seek(_faks) ?} ?}
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      exec('usun_fak','faktury_nag',{? _grupa || 2 || 1 ?});

      _mp.done()
   ?}

|? _akcja='Zakończ_wer' & _area_lzk_zak
|| {? exec('faks_zakoncz','faktury_nag',_grupa,,_autoakc) || _mp.done() ?}

|| _mp.error('Nieobsługiwana ścieżka.')
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_out:=_mp.load(exec('kind_out','#b_port'));

{? var_pres('ZAK',_out)=type_of(null()) & _out.ZAK
|| 'Zakończ rejestrację dokumentu wewnętrznego: %1'@@[exec('record','#to_string',_out.ZAK)]
|| _in:=_mp.load(exec('kind_in','#b_port'));
::NUCO dodanie obłsugi dokumentu wewnętrznego z obiegów
   {? var_pres('EDOKUM',_in)=type_of(null()) & _in.EDOKUM
   || 'Zarejestruj dokument wewnętrzny wg dokumentu w obiegu: %1'@@ [exec('record','#to_string',_in.EDOKUM)]
   |? var_pres('ZAK',_in)=type_of(null()) & _in.ZAK
   || 'Zakończ rejestrację dokumentu wewnętrznego: %1'@@[exec('record','#to_string',_in.ZAK)]
   || 'Zarejestruj dokument wewnętrzny'@@
   ?}
?}


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: Formuła ustala PARSES
::   WE: UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;

{? var_pres('EDOKUM',_in)=type_of(null()) & _in.EDOKUM
|| EDOKUM.cntx_psh();
   EDOKUM.use(ref_name(_in.EDOKUM));
   EDOKUM.prefix();
   {? EDOKUM.seek(_in.EDOKUM)
   ||
::      __PARSES.setVal('OddzialLogProd',FAKZ.ODDZ);
      _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:='LSP';
      _args.AR:=EDOKUM.DW~1;
      _args.AM:=EDOKUM.DW~2;
      __PARSES.setVal('OkresRok',_args)
   ?};
   EDOKUM.cntx_pop()
?};

1