:!UTF-8
\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# properties=LOOP
::# permissions=ODDZ,LMG
::# parses=exec('parses_nd','lmg')
::# access=exec('sprUprMag','%todo')
::# kind=WE,  symbol=TYPYDOK, type=_TYPYDOK, name=Typ dokumentu magazynowego,         required=N, fml_val="exec('typydok','!lmg_mag_dkop')", fml_exp="exec('typydok_export','magdok_nag',_a)"
::# kind=WE,  symbol=ND,      type=_ND,      name=Dokument magazynowy,                required=T
::# kind=WE,  symbol=LK,      type=NUMBER,   name=Liczba kopi,                        required=N
::# kind=WE,  symbol=GRP_KEY, type=STRING,   name=Identyfikator generacji dokumentów, required=N
::# kind=WE,  symbol=WDOST,   type=STRING,   name=Kopiowanie dostaw,                  required=N fml_val="exec('wybdost','!lmg_mag_dkop')"
::# kind=WEW, symbol=ND,      type=_ND,      name=Dokument magazynowy,                required=N
::# kind=WY,  symbol=ND,      type=_ND,      name=Dokument magazynowy,                required=N
::# kind=WY,  symbol=GRP_KEY, type=STRING,   name=Identyfikator generacji dokumentów, required=N

_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

_context:=params_get().context;

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_proces:=_mp.pathProc();

{? _proces
:: Sprawdzenie parametrów pracy dla czynności startowej
|| {? ST.AR=0 | ST.ODDZ_KOD='' | ST.MAG=null() || FUN.info('Ustaw parametry pracy.'@); _wyn:=0; return() ?}
?};

_nd_ref:={? var_pres('ND',_in)=type_of(~~) || null() || _in.ND ?};
_auto:=_akcja<>'Kopiuj' & _mp.isAutoRun() & var_pres('TYPYDOK',_in)=type_of(null()) & _in.TYPYDOK<>null();

:: Sprawdzenie uprawnień
{? params_exec('permissions_chk','lmg')=0 || return() ?};

:: Wyzwalacz, który po dodaniu nagłówka dokumentu:
:: - add: dodaje rekord kluczowy nagłówka dokumentu
::   del: usuwa rekord kluczowy nagłówka dokumentu
:: - add: zapisuje parametr wyjściowy ND = wskazanie na nagłówek dokumentu
::   del: zapisuje parametr wyjściowy ND = null
_mp.trigRef('ND',,1,,exec('kind_internal','#b_port'),'ND');

{? ~(var_pres('ND',_in)=type_of(null()) & _in.ND)
|| _mp.error('Brak wymaganego parametru ND.')
|? exec('FindAndGet','#table',ND,_in.ND,,"MAG().PAL",'')='T'
|| _mp.error('W magazynie z obsługą palet kopiowanie niedostępne.')
|? (_lk:=exec('get','#params',600600,1); _lk=0)
|| FUN.info('Kopiowanie niedostępne. Należy określić maksymalną ilość kopii (parametr 600600).'@);
   _mp.cancel()
||
   _continue:=0;
   _nd_kopia:='';

   {? _mp.loop()=0
:: pierwsze wywołanie
   || ND.cntx_psh();
      ND.prefix();
      {? ~ND.seek(_in.ND)
      || _mp.error('Nie dokumentu magazynowego.')
      ||
         {? _akcja='Kopiuj'
            | _auto
            | _mp.pathTodo()
         || {? _auto
            || HELP.TYP:={? var_pres('TYPYDOK',_in)=type_of(null()) & _in.TYPYDOK<>null()
                         || _in.TYPYDOK
                         || ND.TYP
                         ?};
               HELP.D:=date();
               _inn:=exec('FindInSet','#table','INN','INN',HELP.D,ND.MAG,,,,null());
               _innti:={? _inn<>null() || exec('FindAndGet','#table',INN,_inn,,"TI",time(0,0,0)) || time(0,0,0) ?};
               HELP.T:={? _innti<>time(0,0,0) || _innti+1 || time(0,0,0) ?};
               HELP.LK:={? var_pres('LK',_in)=type_of(0) & _in.LK>0
                        || _in.LK
                        || 1
                        ?};
               HELP.KH:={? HELP.TYP().Z='T' || ND.KH || null() ?};
               HELP.WDOST:={? var_pres('WDOST',_in)=type_of('') & ';tnTN'*_in.WDOST>1
                           || {? ~(ST.MAG().TYP*'DOST') | HELP.TYP=null() | HELP.TYP().P='T'
                               | (ST.MAG().TYP*'DOST' & HELP.TYP().P<>'T' & ((';FL'*HELP.TYP().AFIFO)>1))
                               | HELP.LK>1
                              || 'N'
                              || _in.WDOST
                              ?}
                           || 'N'
                           ?}
            ?};
            _lk:={? var_pres('LK',_in)=type_of(0) || _in.LK || 1 ?};
            {? _auto
             | exec('par_kop','!lmg_mag_dkop',{? var_pres('TYPYDOK',_in)=type_of(null()) || _in.TYPYDOK || null() ?}
                ,_lk
                ,{? var_pres('WDOST',_in)=type_of('') & ';tnTN'*_in.WDOST>1
                 || {? ~(ST.MAG().TYP*'DOST') | HELP.TYP=null() | HELP.TYP().P='T'
                     | (ST.MAG().TYP*'DOST' & HELP.TYP().P<>'T' & ((';FL'*HELP.TYP().AFIFO)>1))
                     | _lk>1
                    || 'N'
                    || _in.WDOST
                    ?}
                 || 'N'
                 ?})
            ||
:: NUCO - w trybie auto wylaczenie pytan
               exec('kop_dok1','!lmg_mag_dkop',ND.ref(),HELP.TYP,0,HELP.D,HELP.T);

               _internal:=_mp.load(exec('kind_internal','#b_port'));
               _continue:={? var_pres('ND',_internal)=type_of(null()) & _internal.ND || 1 || -1 ?};
               {? _continue=1 || _nd_kopia:=exec('FindAndGet','#table',ND,_internal.ND,,"GRP_KEY",'') ?}
            || _continue:=-1;
               _mp.cancel()
            ?}
         || _mp.error('Nieobsługiwana ścieżka.')
         ?}
      ?};
      ND.cntx_pop()
:: wywołanie w pętli
   || _continue:=var_pres('GRP_KEY',_in)=type_of('') & _in.GRP_KEY<>'';
      {? _continue || _nd_kopia:=_in.GRP_KEY ?}
   ?};

   {? _continue=-1
:: Wycofano się z wystawiania realizacji
   || 1
   |? _continue=1 & _nd_kopia<>''
:: Zapisanie parametru wyjściowego ND, wykluczenie kolejnej realizacji z pętli, zakończenie czynności
   || ND.cntx_psh();
      ND.use(ref_name(_in.ND));
      ND.prefix();
      _grp_key:=_nd_kopia-1;
      _grp_key_on:=_grp_key+'1';
      _grp_key_off:=_grp_key+'0';
      {? _grp_key<>''
      || ND.index('GRP_KEY');
         ND.prefix(_grp_key_on);
         {? ND.first()
         || ND.cntx_psh();
            ND.prefix();
            ND.GRP_KEY:=_grp_key_off;
            do();
            ND.put();
            _mp.save(exec('kind_out','#b_port'),'ND',ND.ref());
            _mp.save(exec('kind_out','#b_port'),'GRP_KEY',_nd_kopia);
            end();
            ND.cntx_pop();
            {? ND.first()
::          kontynuacja pętli
            || _mp.loop_continue()
            ?}
         ?}
      ?};
      ND.cntx_pop();
      _mp.done()
   || _mp.error('Brak oczekiwanego parametru GRP_KEY.')
   ?}
?}


