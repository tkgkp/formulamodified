:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ppl_pll_nals.fml
:: Utworzony: 30.12.2015
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Obsługa czynności PPL_PLL_NALS - Naliczenie listy płac
::======================================================================================================================


\zasadnicza
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: Formuła oblicza płacę zasadniczą z uwzględnieniem nieobecności.
::   WE:
::   WY:
::  OLD: \zasad/newzasad.fml
::----------------------------------------------------------------------------------------------------------------------
: formułki pomocnicze: fill_tb, fill_tb1, set_cal
: wypełnienie tablicy roboczej
fill_tb:="
   {? var_pres('_f')<>type_of(null)
   || _f:=null
   ?};
   _exit:=0;
   {? finish>0
   || {! _i:=1..finish
      |? ~_exit
      |! {? miesiac[_i]=_b & ref[_i]=_c & ref_N[_i]=_f & __RUB.sys_attr(nieokod[_i],15,date(O.R,O.M,0))
         || _exit:=1;
            {? __RUB.sys_attr(nieokod[_i],151,date(O.R,O.M,0))
            || dnik[_i]+=_d
            || dnir[_i]+=_e;
               dnikr[_i]+=_d
            ?}
         ?}
      !}
   ?};
   _exit
";
: wypełnienie tablicy roboczej
fill_tb1:="
   miesiac[finish]:=_a;
   nieokod[finish]:=kod_nie;
   {? __RUB.sys_attr(kod_nie,151,date(O.R,O.M,0))
   || dnik[finish]:=_c;
      dnir[finish]:=0;
      dnikr[finish]:=0
   || dnir[finish]:=_b;
      dnik[finish]:=0;
      dnikr[finish]:=_c
   ?};
   stawka1[finish]:=sta[1];
   stawka2[finish]:=sta[2];
   stawka3[finish]:=sta[3];
   stawka4[finish]:=sta[4];
   ref[finish]:=href;
   ref_N[finish]:=_d;
   godz_nom[finish]:=_e
";
: ustawienie kalendarza pracownika
set_cal:="
   {? P.KAL<>null
   || __KAL.set_cal(P.KAL,_a);
      jest_cal:=1
   ?}
";
: powołanie tablic roboczych
make_tb:="
  {? var_pres('miesiac')>100  || obj_del(miesiac) ?};  miesiac:=obj_new(rozmiar);
  {? var_pres('nieokod')>100  || obj_del(nieokod) ?};  nieokod:=obj_new(rozmiar);
  {? var_pres('dnir')>100     || obj_del(dnir) ?};     dnir:=obj_new(rozmiar);
  {? var_pres('dnik')>100     || obj_del(dnik) ?};     dnik:=obj_new(rozmiar);
  {? var_pres('dnikr')>100    || obj_del(dnikr) ?};    dnikr:=obj_new(rozmiar);
  {? var_pres('stawka1')>100  || obj_del(stawka1) ?};  stawka1:=obj_new(rozmiar);
  {? var_pres('stawka2')>100  || obj_del(stawka2) ?};  stawka2:=obj_new(rozmiar);
  {? var_pres('stawka3')>100  || obj_del(stawka3) ?};  stawka3:=obj_new(rozmiar);
  {? var_pres('stawka4')>100  || obj_del(stawka4) ?};  stawka4:=obj_new(rozmiar);
  {? var_pres('ref')>100      || obj_del(ref) ?};      ref:=obj_new(rozmiar);
  {? var_pres('ref_N')>100    || obj_del(ref_N) ?};    ref_N:=obj_new(rozmiar);
  {? var_pres('godz_nom')>100 || obj_del(godz_nom) ?}; godz_nom:=obj_new(rozmiar);
  dekltab:=1
";
: zmienna ZUS - usunięcie korekt
exec('usun_kor','korekty_zus',1);

: nieobecności rozliczane kalendarzowo
:04,05,06,07,08,09,10,16,17,18,19,20,23
kodkal:=151;
: w dniach roboczych
:01,02,03,14,15,21
kodrob:=152;

href:=dekltab:=finish:=exit:=kod_nie:=jest_cal:=OZ_KODDEL:=OZ_ODDEL:=0;
: zmienna okreslająca rozmiar tablicy roboczej
rozmiar:=60;

: początek miesiąca
_data1:=date(O.R,O.M,1);
: koniec miesiąca
_data2:=date(O.R,O.M,0);
::ustawienie kalendarza pracownika w poprawka ER/WRT/XP/12.51/2212/0028
::Pracownik z indywidualnym kalendarzem przy braku ustawienia kalendarza pracownika możliwe złe
::wyliczenia płacy zasadniczej w funkcji newzasad.fml\zasad _mcrob:=exec(,'licz_go',_data1,_data2,1)
set_cal(_data1~1);
: godziny robocze
_mcrob:=exec('nominal','godziny',_data1,_data2,1);

: tablica przechowująca aktualne wynagrodzenie
{? var_pres('AktuWyn')<100
|| AktuWyn:=obj_new(4)
?};
: tablica przechowująca sumę potrąceń
{? var_pres('SumaPot')<100
|| SumaPot:=obj_new(4)
?};
: tablica pomocnicza
{? var_pres('sta')<100
|| sta:=obj_new(4)
?};
: tablica pomocnicza
{? var_pres('sta_pom')<100
|| sta_pom:=obj_new(4)
?};
{! _i:=1..4
|! AktuWyn[_i]:=SumaPot[_i]:=sta[_i]:=sta_pom[_i]:=0
!};

ust_dwyn:="
   {? N.OD>_a & _c=date(0,0,0)
   || dzie_wyn:=_a
   |? _c<>date(0,0,0) & N.OD<>_c+1
   || dzie_wyn:=N.OD-1
   |? N.DO+1=_b
   || dzie_wyn:=_b
   |? dzie_wyn=_b & N.DO=_b
   || dzie_wyn:=#0
   ?}
";

AktuMC:=$_data1-3;
H_ODDE.cntx_psh();
H_ODDE.use('h_oddet');
H_ODDE.index('HOD');

N.cntx_psh;
N.index('NIEOLSOD');
N.prefix('N',P.ref(),VAR.NAZWALIS);

H.cntx_psh();
H.index('_HISTKOD');
H.prefix(P.ref(),'Z');

:: Dla pracowników rozliczanych z godzin za pomocą Harmonogramów
:: kalendarz zamieniamy na standardowy
{? _data1<P.DZA & P.DZA<=_data2 & (__KAL.grafik(_data2)='T' | __KAL.p_kin(_data2)='T')
|| __KAL.set_cal('standard',_data1~1)
?};
{? P.DZ<_data2 & P.DZ>=_data1 & (__KAL.grafik(_data1)='T' | __KAL.p_kin(_data1)='T')
|| __KAL.set_cal('standard',_data1~1)
?};
{? _mcrob=0
|| _zero_g:=1;
   RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
        'Brak danych odnośnie zaplanowanych godzin roboczych dla pracownika w miesiącu: '@+_data1$8+'.',
        'Należy upewnić się czy dane w kalendarzu pracownika są prawidłowe.'@,
        'Przyjęto kalendarz nominalny "standard".'@);
   __KAL.set_cal('standard',_data1~1);
   _mcrob:=exec('nominal','godziny',_data1,_data2,1)
|| _zero_g:=0
?};

{? H.last()
|| {? H.find_le(_data1)
   || {!
      |? {? H.KODDEL='T'
         || OZ_KODDEL:=1
         ?};
         {? H.ODDEL='T'
         || OZ_ODDEL:=1
         ?};
         H.next() & H.OD<=_data2
      !}
   ?}
?};

{? H.last()
|| exec('mc_placa_newzasad','lista_licz',_data1,_data2,_mcrob);
   AktuWyn[1]+=sta_pom[1];
   AktuWyn[2]+=sta_pom[2];
   AktuWyn[3]+=sta_pom[3];
   AktuWyn[4]+=sta_pom[4]
|| RAPLS.msg(
      P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
      'Brak danych w przebiegu zatrudnienia.'@
   );
   exit:=1
?};
{? ~_zero_g || set_cal(_data1~1) ?};
{? var_pres('pom')>100 || obj_del(pom) ?};
dzie_wyn:=pom:=date(0,0,0);

{? N.first() & ~exit
||
:  Ewentualne rozbicie nieobecności dla zmiany wymiaru podczas jej trwania oraz zmiany dodatków
   exec('zm_umo','!ppl_pll_nals',0,1);
   exec('zm_umo','!ppl_pll_nals',0);
   N.first();
   make_tb();
   _filln:="
      N.NR:=__KAL.w_days(N.OD,N.DO);
      N.NK:=N.DO-N.OD+1
   ";
   {!
   |? _stop:=0;
      {? P.DZ<>date(0,0,0)
      || {? P.DZ<N.DO
         || N.DO:=P.DZ;
            _filln();
            {? N.DO<N.OD
            || _stop:=1
            ?}
         ?}
      ?};
      {? N.DO<P.DZA
      || _stop:=1
      || {? N.OD<P.DZA
         || N.OD:=P.DZA;
            _filln()
         ?};
         {? N.DO<N.OD
         || _stop:=1
         ?}
      ?};
      kod_nie:=N.NB().RN;
      {? __RUB.sys_attr(kod_nie,15,N.OD) & ~_stop & ~exit
      || _nie_od:=N.OD;
         _nie_do:=N.DO;
         _mc_kon:=date(N.OD~1,N.OD~2,0);
::       Przy braku kalendarza w bieżącym miesiącu a mamy nieobecności
::       z poprzednich miesięcy trzeba ustawić odpowiedni kalendarz pracownika
::       ponieważ mamy ustalony __KAL.set_cal('standard',_data1~1) i ustawiona zmienna _zero_g=1
         {? _zero_g=1 & _nie_do<_data1 || set_cal(_data1~1) ?};
         {? H.last()
         || H.find_le(N.OD);
            _hsx:=exec('hsx','lista_licz',N.OD,N.OD);
            sta[1]:=_hsx.S1;
            sta[2]:=_hsx.S2;
            sta[3]:=_hsx.S3;
            sta[4]:=_hsx.S4;
            obj_del(_hsx);
            &_hsx;
            href:=H.ref();
            N.POTR1:=N.POTR2:=N.POTR3:=N.POTR4:=0;
            N.put();
            {? _mc_kon<_nie_do
            || {!
               |? _mc_kon<_nie_do
               |! N.OD:=_nie_od;
                  N.DO:=_mc_kon;
                  _nie_od:=_mc_kon+1;
:                 w buforze znajdują się rozpisane nieobecności
                  {? ~__RUB.sys_attr(N.NB,1318,N.OD)
                  || ust_dwyn(_data1,_data2,pom)
                  ?};
                  exec('zprzesz','!ppl_pll_nals',N.OD,N.DO,,N.ref());
                  _mc_kon:=date(_nie_od~1,_nie_od~2,0);
                  {? _mc_kon>=_nie_do
                  || _mc_kon:=_nie_do;
                     exec('zprzesz','!ppl_pll_nals',_nie_od,_nie_do,,N.ref());
                     _mc_kon:=date(9999,1,1)
                  ?}
               !}
            || {? ~__RUB.sys_attr(N.NB,1318,N.OD)
               || ust_dwyn(_data1,_data2,pom)
               ?};
               exec('zprzesz','!ppl_pll_nals',N.OD,N.DO,,N.ref())
            ?}
         ?};
         pom:=N.DO;
::       Mamy ustawiony kalendarz pracownika ale _zero_g=1 czyli trzeba przywrócić
::       nominalny kalendarz "standard"
         {? _zero_g=1 & _nie_do<_data1 || __KAL.set_cal('standard',_data1~1) ?}
      ?};
      N.next() & ~exit
   !}
?};

: sumowanie nieobecności z przebiegu zatrudnienia
{? ~exit
|| exec('nieohist','!ppl_pll_nals')
?};
{? finish & ~exit
|| _Mcstring:='';
   _liczmc:=0;
   {! _i:=1..finish
   |! {? (_Mcstring*miesiac[_i])=0
      || _Mcstring+=miesiac[_i];
         _liczmc+=1
      ?}
   !};
   {? _liczmc>0
   || {? var_pres('wm')>100
      || obj_del(wm)
      ?};
      wm:=obj_new(4);
      {? var_pres('potracen')>100
      || obj_del(potracen)
      ?};
      potracen:=obj_new(4);
      {! _i:=1.._liczmc
      |! {! _s:=1..4
         |! wm[_s]:=potracen[_s]:=sta_pom[_s]:=0
         !};
         _mc:=((_i-1)*7)-(_i*7+_Mcstring);
:        wyciagniecie daty z napisu
         _data1:=date(#(4+_mc),#(_mc+2),1);
         _data2:=date(#(4+_mc),#(_mc+2),0);
:        dni kalendarzowe
         _mckal:=(_data2-_data1)+1;
         _mckal-=exec('dnpzazw','nieobecnosc',_data1,_data2,'dk');
         _mcrob:=exec('nominal','godziny',_data1,_data2,1);
         {? _mc=AktuMC
            || wm[1]+=AktuWyn[1];
               wm[2]+=AktuWyn[2];
               wm[3]+=AktuWyn[3];
               wm[4]+=AktuWyn[4]
            || H.last();
               exec('mc_placa_newzasad','lista_licz',_data1,_data2,_mcrob);
               wm[1]+=sta_pom[1];
               wm[2]+=sta_pom[2];
               wm[3]+=sta_pom[3];
               wm[4]+=sta_pom[4]
         ?};
         _dnikal:=_dnirob:=_dnikalrob:=0;
         {! _z:=1..finish
         |! {? miesiac[_z]=_mc
            || _dnikal+=dnik[_z];
               _dnirob+=dnir[_z];
               _dnikalrob+=dnikr[_z]
            ?}
         !};
         H.cntx_psh();
         H.index('_HISTKOD');
         H.prefix(P.ref,'Z');
         _PAR_240:=PAR_SKID.get(240)='T';
         _wsk_proc:=1;
         {! _z:=1..finish
         |! _n_potr:={? ref_N[_z] || N.seek(ref_N[_z]) ?};
            {? _n_potr & __RUB.sys_attr(N.NB,1318,N.OD)
            || _wsk_proc:=__RUB.sys_val(1318,N.OD)
            || _wsk_proc:=1
            ?};
            {? __RUB.sys_attr(nieokod[_z],kodkal,date(O.R,O.M,0)) & miesiac[_z]=_mc
            || 'potrącenia kalendarzowe';
               {? H.find_le(_data2)
               || {? -(1+H.CP().S)<>'f'
                  || {? _PAR_240
                     || _kw:=(stawka1[_z]/30$2)*dnik[_z]
                     || _kw:=(stawka1[_z]/30)*dnik[_z]
                     ?};
                     potracen[1]+=_kw;
                     {? _n_potr
                     || N.POTR1+=_kw
                     ?}
                  ?};
                  {? -(1+H.CP().S)<>'f'
                  || {? _PAR_240
                     || _kw:=(stawka4[_z]/30$2)*dnik[_z]
                     || _kw:=(stawka4[_z]/30)*dnik[_z]
                     ?};
                     potracen[4]+=_kw;
                     {? _n_potr
                     || N.POTR4+=_kw
                     ?}
                  ?}
               ?};

               {? _PAR_240
               || _kw:=(stawka2[_z]/30$2)*dnik[_z]
               || _kw:=(stawka2[_z]/30)*dnik[_z]
               ?};
               potracen[2]+=_kw;
               {? _n_potr
               || N.POTR2+=_kw
               ?};

               {? _PAR_240
               || _kw:=(stawka3[_z]/30$2)*dnik[_z]
               || _kw:=(stawka3[_z]/30)*dnik[_z]
               ?};
               potracen[3]+=_kw;
               {? _n_potr
               || N.POTR3+=_kw
               ?};
::             specyficzna sytuacja - rozliczamy luty w innym miesiącu, gdzie luty w całosci jest nieobecnością
::             oraz częsciowo rozliczony w innym miesiacy
               {? _n_potr & N.DO~2=2 &
                  date(N.OD~1,N.OD~2,1)<>date(O.R,O.M,1) &
                  N.DO=date(N.DO~1,N.DO~2,0) & N.OD>date(N.OD~1,N.OD~2,1)
               || {? exec('korekta_luty','!ppl_pll_nals')
                  || ile_dni:=date(N.OD~1,N.OD~2,0)-date(N.OD~1,N.OD~2,1)+1;
                     ile_dni:=30-ile_dni;
                     {? -(1+H.CP().S)<>'f'
                     || {? _PAR_240
                        || _kw:=(stawka1[_z]/30$2)*ile_dni
                        || _kw:=(stawka1[_z]/30)*ile_dni
                        ?};
                        potracen[1]+=_kw;
                        N.POTR1+=_kw;

                        {? _PAR_240
                        || _kw:=(stawka4[_z]/30$2)*ile_dni
                        || _kw:=(stawka4[_z]/30)*ile_dni
                        ?};
                        potracen[4]+=_kw;
                        N.POTR4+=_kw
                     ?};
                     {? _PAR_240
                     || _kw:=(stawka2[_z]/30$2)*ile_dni
                     || _kw:=(stawka2[_z]/30)*ile_dni
                     ?};
                     potracen[2]+=_kw;
                     N.POTR2+=_kw;
                     {? _PAR_240
                     || _kw:=(stawka3[_z]/30$2)*ile_dni
                     || _kw:=(stawka3[_z]/30)*ile_dni
                     ?};
                     potracen[3]+=_kw;
                     N.POTR3+=_kw;
                     &ile_dni
                  ?}
               ?};
               {? _n_potr
               || N.put()
               ?}
            |? miesiac[_z]=_mc & godz_nom[_z]
            || 'potracenia robocze';
               {? H.find_le(_data2)
               || {? -(1+H.CP().S)<>'f'
                  || {? _PAR_240
                     || _kw:=(stawka1[_z]/godz_nom[_z]*_wsk_proc$2)*dnir[_z]
                     || _kw:=(stawka1[_z]/godz_nom[_z]*_wsk_proc)*dnir[_z]
                     ?};
                     potracen[1]+=_kw;
                     {? _n_potr
                     || N.POTR1+=_kw
                     ?};

                     {? _PAR_240
                     || _kw:=(stawka4[_z]/godz_nom[_z]*_wsk_proc$2)*dnir[_z]
                     || _kw:=(stawka4[_z]/godz_nom[_z]*_wsk_proc)*dnir[_z]
                     ?};
                     potracen[4]+=_kw;
                     {? _n_potr
                     || N.POTR4+=_kw
                     ?}
                  ?}
               ?};
               {? _PAR_240
               || _kw:=(stawka2[_z]/godz_nom[_z]*_wsk_proc$2)*dnir[_z]
               || _kw:=(stawka2[_z]/godz_nom[_z]*_wsk_proc)*dnir[_z]
               ?};
               potracen[2]+=_kw;
               {? _n_potr
               || N.POTR2+=_kw
               ?};
               {? _PAR_240
               || _kw:=(stawka3[_z]/godz_nom[_z]*_wsk_proc$2)*dnir[_z]
               || _kw:=(stawka3[_z]/godz_nom[_z]*_wsk_proc)*dnir[_z]
               ?};
               potracen[3]+=_kw;
               {? _n_potr
               || N.POTR3+=_kw;
                  N.put()
               ?}
            ?}
         !};
         H.cntx_pop();

        {? var_pres('_tab_pr')>100 || obj_del(_tab_pr) ?};
         _tab_pr:=exec('dane_pracownika','pracownik',,_data1,_data2,1);
         _DG:=sql('select sum(DG) DG from :_a',_tab_pr).DG;
         _d_listy:=date(O.R,O.M,1);
         {? _tab_pr.first
         || {!
            |? {? _d_listy<date(#('20'+(2+(1-_tab_pr.N_LT))),#(2+(3-_tab_pr.N_LT)),1)
               || _tab_pr.del(,1)=2
               || _tab_pr.next
               ?}
            !}
         ?};
:: ER/WRT/XP/23.25/2312/0024 - ER/WRT/XP/22.26/2311/0033 - Siła wyższa w jedynym dniu zatrudnienia w mcu
:: nie jest wyliczana płaca zasadnicza
         _NG_SW:=sql('select sum(NG) NG from :_a where NB in (:_b)',_tab_pr,__RUB.sys_sql(1318)).NG;
         _NK_SW:=sql('select sum(NK) NK from :_a where NB in (:_b)',_tab_pr,__RUB.sys_sql(1318)).NK;
:: ER/WRT/XP/23.25/2311/0087 - ER/WRT/XP/22.26/2311/0035 - Błędne naliczenie potrącenia za nieobecność -
:: miesiąc 31 dni i ustawiony atrybut 153
:: Kopia błędu spisowego: ER/WRT/XP/12.51/2304/0016
         {? var_pres('_tab_nie')>100 || obj_del(_tab_nie) ?};
         _tab_nie:=sql('select sum(NG) NG, sum(NK) NK from :_a where NB in (:_b)',_tab_pr,__RUB.sys_sql(15));
         _NG:=_tab_nie.NG;
         _NK:=_tab_nie.NK;
         _r_153:=__RUB.sys_sql(153);
         {? +_r_153
         || {? var_pres('_tab_NR')>100 || obj_del(_tab_NR) ?};
            _tab_NR:=sql('select sum(NR) NR, sum(NG) NG from :_a where NB in (:_b)',_tab_pr,_r_153);
            _NR_DEL:=_tab_NR.NR;
            _NG_DEL:=_tab_NR.NG;
:: ER/WRT/XP/23.25/2311/0087 - ER/WRT/XP/22.26/2311/0035 - Błędne naliczenie potrącenia za nieobecność -
:: miesiąc 31 dni i ustawiony atrybut 153
:: Kopia błędu spisowego: ER/WRT/XP/12.51/2304/0016
:: Jeżeli nieobecność trwa cały mc kalendarzowy to nie ma pensji i zerowane są _NG_DEL, _NR_DEL
            {? _mckal=_NK || _NG_DEL:=_NR_DEL:=0 ?};
            obj_del(_tab_NR); &_tab_NR
         || _NG_DEL:=_NR_DEL:=0
         ?};
         _NG-=(_NG_DEL+_NG_SW);
         {? var_pres('potr')>100
         || obj_del(potr)
         ?};
         potr:=obj_new(4);
         {! _z:=1..4
         |! potr[_z]:=0
         !};
         {? var_pres('wyn_dzie')>100 || obj_del(wyn_dzie) ?};
         wyn_dzie:=obj_new(4);
         {! _z:=1..4 |! wyn_dzie[_z]:=0 !};
         {! _s:=1..4
         |! {? (_dnikal+_dnikalrob-_NK_SW)=30 & _mckal=31 & dzie_wyn<>date(0,0,0)
            || {? potracen[_s]$2<>wm[_s]
               || exec('potr_ustaw','!ppl_pll_nals',_s,_data1,potracen[_s]-wm[_s]);
                  potracen[_s]:=wm[_s]
               ?};
               _wsk_proc:=1;
               {? _s=1
               || exec('wyn_dzienne','!ppl_pll_nals',dzie_wyn,_mcrob);
                  {? sql('select NG from :_a where NB in (:_b) and D = :_c',_tab_pr,__RUB.sys_sql(1318),dzie_wyn~3).NG
                  || _wsk_proc:=__RUB.sys_val(1318,dzie_wyn)
                  ?}
               ?};
               potracen[_s]-=(wyn_dzie[_s]*_wsk_proc);
               exec('potr_ustaw','!ppl_pll_nals',_s,_data1,wyn_dzie[_s])
            |? _mc<>AktuMC
            || _wsk_proc:=1;
               {? _s=1
               || _dzie_wyn:=exec('potr_pop_mc','!ppl_pll_nals',_data1,_data2,_mcrob);
                  {? _dzie_wyn<>date(0,0,0)
                  || exec('wyn_dzienne','!ppl_pll_nals',_dzie_wyn,_mcrob);
                     {? sql('select NG from :_a where NB in (:_b) and D = :_c',
                           _tab_pr,__RUB.sys_sql(1318),_dzie_wyn~3).NG
                     || _wsk_proc:=0
                     ?}
                  ?};
                  &_dzie_wyn
               ?};
               potracen[_s]-=(wyn_dzie[_s]*_wsk_proc);
               exec('potr_ustaw','!ppl_pll_nals',_s,_data1,wyn_dzie[_s]);
               _po_mc:=wm[_s]-potr[_s];
               {? _po_mc<0
               || _po_mc:=0
               ?};
               {? potracen[_s]$2>_po_mc | _DG<=_NG
               || exec('potr_ustaw','!ppl_pll_nals',_s,_data1,potracen[_s]-_po_mc);
                  potracen[_s]:=_po_mc
               ?};
               &_po_mc

            |? _dnikal=_mckal | _dnikal=30 | (_dnikal+_dnikalrob-_NK_SW=_mckal) | _DG<=_NG
            || exec('potr_ustaw','!ppl_pll_nals',_s,_data1,potracen[_s]-wm[_s]);
               potracen[_s]:=wm[_s]
            |? _dnirob-_NG_DEL-_NG_SW=_mcrob
            || exec('potr_ustaw','!ppl_pll_nals',_s,_data1,potracen[_s]-wm[_s]);
               potracen[_s]:=wm[_s]
            |? potracen[_s]$2>wm[_s]
            || exec('potr_ustaw','!ppl_pll_nals',_s,_data1,potracen[_s]-wm[_s]);
               potracen[_s]:=wm[_s]
            ?};
            {? potracen[_s]$2<>0
::          || exec('kor_zap_kor_zus','lista_licz',_data1,potracen[_s]$2)
::nuco
            || exec('kor_zap_kor_zus','lista_licz',_data1,potracen[_s]$2+{? _s=1
                                                                         || (potracen[_s]*FUNKCJE.S(75,,,,((O.R*12+O.M)-((_data1~1)*12+_data1~2)))/100)$2
                                                                         || 0
                                                                         ?}
                   )
            ?}
         !};
         obj_del(potr);
         &potr;
         {! _s:=1..4
         |! SumaPot[_s]+=potracen[_s]
         !}
      !};
      obj_del(wm); &wm;
      obj_del(potracen); &potracen;
      obj_del(wyn_dzie); &wyn_dzie;
      &_dnirob;
      &_dnikal
   ?}
?};
{? dekltab
|| obj_del(miesiac);  &miesiac;
   obj_del(nieokod);  &nieokod;
   obj_del(dnir);     &dnir;
   obj_del(dnik);     &dnik;
   obj_del(dnikr);    &dnikr;
   obj_del(stawka1);  &stawka1;
   obj_del(stawka2);  &stawka2;
   obj_del(stawka3);  &stawka3;
   obj_del(stawka4);  &stawka4;
   obj_del(ref);      &ref;
   obj_del(ref_N);    &ref_N;
   obj_del(godz_nom); &godz_nom
?};
_z:=0;
{! _ind:=4..14
|! DoList.c[_ind]:=0
!};
{? N.first()
|| {? var_pres('ref_kor')>100
   || obj_del(ref_kor)
   ?};
   ref_kor:=obj_new(N.size());
   _s:=0;
   _jest_kor:=0;
   {!
   |? _s+=1;
      ref_kor[_s]:={? N.N_KOR || _jest_kor:=1; N.N_KOR ?};
      N.next()
   !};
   {? _jest_kor
   || {! _s:=1..obj_len(ref_kor)
      |! {! _ind:=1..obj_len(ref_kor)
         |! {? _ind<>_s & ref_kor[_s]=ref_kor[_ind]
            || ref_kor[_ind]:=0
            ?}
         !}
      !}
   ?};
   {? ~_jest_kor
   || obj_del(ref_kor);
      &ref_kor
   ?};
   &_jest_kor
?};

:: Informacja o wykonanym potrąceniu dla nieobecności, które nie mają wprowadzonej nominalnej liczby godzin
{? N.first
|| _zero_NG:=0;
   {!
   |? {? N.NG=0 & N.POTR1+N.POTR2+N.POTR3+N.POTR4
      || _zero_NG+=1
      ?};
      N.next
   !};
   {? _zero_NG & PAR_SKID.get(298)='N'
   || _sc:={? _zero_NG=1 || 'ć' || 'ci' ?};
      RAPLS.msg(
         P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
         'Znaleziono nieobecnoś'+_sc+' z wyliczonym potrąceniem oraz wartością zerową'@,
         'w przypisanej liczbie nominalnych godzin roboczych przypadających w czasie nieobecności.'@,
         'Należy zweryfikować poprawność danych oraz wyliczeń.'@
      )
   ?}
?};

: nieobecności wycofane
N.index('NIEOBWYC');
N.prefix('T',P.ref(),'W',O.ref());
{? N.first()
|| _wref_kor:=obj_new(N.size());
   _s:=1;
   {!
   |? _wref_kor[_s]:=#N.ref();
      _s+=1;
      N.next()
   !}
?};

N.clear();
{? {? var_pres('ref_kor')>100
   || _korekta:=ref_kor;
      1
   |? var_pres('_wref_kor')>100
   || _korekta:=_wref_kor;
      1
   || 0
   ?}
|| {!
   |? {! _s:=1..obj_len(_korekta)
      |! {? N.seek(_korekta[_s],)
         || DoList.c[4]+=N.POTR1; DoList.c[5]+=N.POTR2; DoList.c[6]+=N.POTR3; DoList.c[10]+=N.POTR4;
            {? N.POTR1+N.POTR2+N.POTR3+N.POTR4>0
::          || exec('kor_zap_kor_zus','lista_licz',N.OD,-(N.POTR1+N.POTR2+N.POTR3+N.POTR4))
::nuco
            || exec('kor_zap_kor_zus','lista_licz',N.OD,-(N.POTR1+N.POTR2+N.POTR3+N.POTR4+(N.POTR1*FUNKCJE.S(75,,,,((O.R*12+O.M)-((N.OD~1)*12+N.OD~2)))/100)$2))
            ?};
            {? __RUB.sys_attr(N.NB,121,N.OD)
            || DoList.c[8]-=N.WART;
:              wprowadzenie zapisu korekt KCH dla wynagrodzenia chorobowego
               exec('kor_kch_nieo','!ppl_pll_nals',N.ref,N.WART,N.OD~1,N.OD~2,N.STD)
            |? __RUB.sys_attr(N.NB,122,N.OD)
            || {? __RUB.sys_attr(N.NB,1227,N.OD)
               || DoList.c[11]-=N.WART
               || DoList.c[9]-=N.WART
               ?}
            |? __RUB.sys_attr(N.NB,113,N.OD) | __RUB.sys_attr(N.NB,1312,N.OD)
            || DoList.c[7]-=N.WART
            |? __RUB.sys_attr(N.NB,1314,N.OD)
            || DoList.c[12]-=N.WART
            |? __RUB.sys_attr(N.NB,1318,N.OD)
            || DoList.c[13]-=N.WART
            |? __RUB.sys_attr(N.NB,1171,N.OD)
            || DoList.c[14]-=N.WART
            ?}
         ?}
      !};
      {? var_pres('_wref_kor')>100 & var_pres('ref_kor')>100
      || &_korekta;
         _korekta:=_wref_kor;
         &_wref_kor;
         &ref_kor;
         1
      ?}
   !}
?};

{? var_pres('ref_kor')>100
|| &ref_kor
?};
{! _s:=1..3
|! {? exit
   || DoList.c[_s]:=0
   || DoList.c[_s]:=AktuWyn[_s]-SumaPot[_s]$2;
      _z+=AktuWyn[_s]-SumaPot[_s]$2
   ?}
!};
:: Oddelegowania zagraniczne dla umy
{? O.F<>'F'
|| {? exit | ~OZ_ODDEL
   || FUNKCJE.LK(7158,,,1)
   || _oddelegowanie:=AktuWyn[4]-SumaPot[4]$2;
      {? OZ_KODDEL
      || _oddelegowanie:=exec('h_odde_prop','oddelegowanie',_oddelegowanie,,date(O.R,O.M,1),date(O.R,O.M,0),4)
      ?};
      FUNKCJE.LK(7158,,_oddelegowanie);
      _z+=_oddelegowanie$2
   ?}
?};
obj_del(AktuWyn); &AktuWyn;
obj_del(SumaPot); &SumaPot;
obj_del(sta);     &sta;
obj_del(sta_pom); &sta_pom;
N.cntx_pop();
H.cntx_pop();
H_ODDE.cntx_pop();
&dzie_wyn; &ust_dwyn; &pom;
&kodkal; &kodrob; &href; &kod_nie;
&finish; &rozmiar; &exit;
&fill_tb; &fill_tb1;
&set_cal; &jest_cal; &OZ_KODDEL; &OZ_ODDEL;
&AktuMC; &make_tb; &dekltab;
_z


\plf_nadg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS
:: OPIS: Rozliczenie godzin
::   WE: _a - 'f' - pracownicy rozliczani na podstawie stawki godzinowej
::          - 'u' - pracownicy rozliczani na podstawie stawki miesiecznej
::  OLD: \plf_nadg/plf_nadg.fml
::----------------------------------------------------------------------------------------------------------------------
:: Usuniecie skladnikow  z bufora listy
{? _a='f'
|| FUNKCJE.LK(100,,,1);
:: Oddelegowania zagraniczne
   FUNKCJE.LK(7158,,,1)
?};

_tab_rub:=__RUB.sys_rub(101111,date(O.R,O.M,0));
{? _tab_rub.first()
|| {!
   |? FUNKCJE.LK(_tab_rub.RN,,,1);
      _tab_rub.next()
   !}
:: jeżeli brak atrybutu
|| _fun_LK:="{! _ind:=_a.._b |! FUNKCJE.LK(_ind,,,1) !}";
   FUNKCJE.LK(48,,,1);
   _fun_LK(54,58);
      _fun_LK(63,69);
   _fun_LK(120,123);
   _fun_LK(125,126);
   FUNKCJE.LK(7001,,,1);
   FUNKCJE.LK(7006,,,1);
   _fun_LK(7008,7011);
   _fun_LK(7015,7016);
   _fun_LK(7026,7029);
   _fun_LK(7035,7038);
   _fun_LK(7040,7041);
   _fun_LK(7050,7059);
   _fun_LK(7224,7225);
:: praca zdalna
   _zdal_rub:=__RUB.sys_rub(816,date(O.R,O.M,1));
   {? _zdal_rub.first()
   || {!
      |? FUNKCJE.LK(_zdal_rub.RN,,,1);
         _zdal_rub.next()
      !}
   ?}
?};
_rub_zm:=__RUB.sys_rub(101112,date(O.R,O.M,0)).first;

A_OKRP.cntx_psh;
A_OKRP.index('A_OKRDP');
A_OKRP.prefix(P.ref);

G.cntx_psh();
G.use('godz'+$O.R);
G.index('MSCDKW');
G.prefix(P.ref,O.M,'G');
H.cntx_psh;
H.index('_HISTKOD');
H.prefix(P.ref(),'Z');
H_ODDE.cntx_psh();
H_ODDE.index('HOD');
R_GODZ.cntx_psh();
R_GODZ.use('rzg_'+$O.R);
exec('usu_roz','roz_godz');

:: Usunięcie premii okresowych automatycznych dla przekroczeń średniotygodniowych.
exec('usu_prem_auto_godz','skladniki_okresowe');

:: dodanie bufora dla premii okresowych zwiazanych z przekroczeniami sredniotygodniowymi
_tab_okr:=exec('prem_buff','!ppl_pll_nals');
{? G.first() & H.last()
|| _mc_gd:='';
   _zm_wym:=_norma:=0;
   VAR_DEL.delete('sta_pom');
   sta_pom:=obj_new(4);
   {!
   |? {? |G.LT=''
      || G.LT:=VAR.NAZWALIS;
         G.put ()
      ?};
      {? G.LT=VAR.NAZWALIS
      || _okrr:=O.R;
         _okrm:=O.M;
         _okr:=0;
         _okr_od:=#0;
         _okr_do:=#0;
         {? A_OKRP.find_le(G.D) & G.D<=A_OKRP.DO
         || _okrr:=A_OKRP.DO~1;
            _okrm:=A_OKRP.DO~2;
            _okr_od:=A_OKRP.OD;
            _okr_do:=A_OKRP.DO;
            _okr:=1
         ?};
         {? _mc_gd<>6+G.D$0
         || _mc_gd:=6+G.D$0;
            exec('kal_list','personel');
            _norma:=exec('norma_zmiana','godziny',date(G.D~1,G.D~2,1),date(G.D~1,G.D~2,0));
            {? _norma
            || _godz:=exec('nominal','godziny',date(G.D~1,G.D~2,1),date(G.D~1,G.D~2,0),1,1,,1)
            || _godz:=exec('nominal','godziny',date(G.D~1,G.D~2,1),date(G.D~1,G.D~2,0),1,,,1)
            ?};
            _wym:=exec('ust_wym','pracownik',date(_okrr,_okrm,0));
            {? _norma
            || _godz_ro:=exec('nominal','godziny',date(G.D~1,G.D~2,1),date(G.D~1,G.D~2,0),1,1,,1)
            || _godz_ro:=__KAL.w_hours(date(_okrr,_okrm,1),date(_okrr,_okrm,0))*_wym
            ?};
            {? _godz_ro>0 & H.find_le(date(_okrr,_okrm,0))
            || _hsx:=exec('hsx','lista_licz',date(_okrr,_okrm,0));
               _OS1:=_hsx.S1;
               _OS2:=_hsx.S2;
               _OS3:=_hsx.S3;
               obj_del(_hsx);
               &_hsx
            || _OS1:=_OS2:=_OS3:=0
            ?};
            exec('kal_prac','personel',G.D~1);
            {? _godz=0 | _godz_ro=0
            || RAPLS.msg(
                  P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                  'Brak informacji o kalendarzu listy płac.'@,
                  exec('retry_msg','lista_licz')
                )
            || _zm_wym:=exec('czy_zmiana_wym','!ppl_pll_nals',G.D);
               {? _zm_wym
               || {! _ind:=1.. obj_len(sta_pom)
                  |! sta_pom[_ind]:=0
                  !};
                  exec('mc_placa_newzasad','lista_licz',date(G.D~1,G.D~2,1),date(G.D~1,G.D~2,0),_godz,1);
                  H.index('_HISTKOD');
                  H.prefix(P.ref(),'Z')
               ?}
            ?}
         ?};
         {? _godz>0 & H.find_le(G.D)
         || _kod:=G.K().RN;
            H_ODDE.prefix(H.ref());
            {? H_ODDE.find_le(G.D) & H_ODDE.O_DO>=G.D
            || _kraj:=H_ODDE.KRAJ
            || _kraj:=null()
            ?};
            _hsx:=exec('hsx','lista_licz',G.D);
            _S1:=_hsx.S1;

::NUCO
            _S1+=(_hsx.S1*FUNKCJE.S(75)/100)$2;

            _S2:=_hsx.S2;
            _S3:=_hsx.S3;
            _S4:=_hsx.S4;
            obj_del(_hsx);
            &_hsx;
::          ewentualne godziny akordowe wprowadzone w Kadry i place
            {? _kod=7010
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val)
            ?};

::          Placa zasadnicza dla pracownikow rozliczanych godzinowo
::          Wraz z wynagrodzeniem za dopelnienie do wymiaru pracy w swieta i wolne
{? (_kod=48 | _kod=54 | _kod=63 | _kod=65 | _kod=67)
            || {? O.KRAJE<>_kraj & (O.KRAJE<>null() | O.B_ODD='T')
::                lista niezgodna z krajem oddelegowania lub lista bez kraju pomijająca oddelegowania
               || G.LT:='';
                  G.put()
               || _sum:=G.G+FUNKCJE.LK(_kod,G.KK);
                  FUNKCJE.LK(_kod,G.KK,_sum);
                  {? _a='f'
                  || {? _S4 & _kod=54 & (_kraj=O.KRAJE | (O.KRAJE=null() & O.B_ODD='N'))
::                   oddelegowania zagraniczne
                     || _Sx:=_S4;
                        _ZasRub:=7158
::                   zwykła zasadnicza
                     || _Sx:=_S1;
                        _ZasRub:=100
                     ?};
                     _val:=_Sx*G.G$2;
                     G.WAR:=_val;
                     G.put(1);
::                   zapisujemy rozliczenie
                     exec('wyplata','roz_godz','W',_val,_ZasRub);
                     _val+=FUNKCJE.LK(_ZasRub,G.KK);
::                   dodajemy reczne wyrownania
                     _val+=exec('dod_w','roz_godz',_ZasRub);
                     FUNKCJE.LK(_ZasRub,G.KK,_val)
                  ?}
               ?}
            ?};
::          Zmiana wyliczenia nominalnej placy zasadniczej dla wyliczenia nadgodzin
::          w sytuacji zmiany wymiaru zatrudnienia.
            {? _zm_wym & (( _rub_zm & __RUB.sys_attr(_kod,101112,date(O.R,O.M,0))) |
                  (~_rub_zm & ( _kod=55 | _kod=56 | _kod=64 | _kod=68 | _kod=69 | _kod=58 | _kod=66 |
                  _kod=7008 | _kod=7009  | _kod=7015 | _kod=7016)))
            || _S1:=sta_pom[1];
               _S2:=sta_pom[2];
               _S3:=sta_pom[3]
            ?};
::          Godziny nadliczbowe 50% i 100%
            {? _kod=55 | _kod=56 | _kod=7008 | _kod=7009  | _kod=7015 | _kod=7016
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               _val:=_val1:=0;
               {? _a='f'
               || {? _kod=7015 | _kod=7016 || _val:=0 || _val:=_S1*G.G$2+(_S2+_S3)/_godz$2*G.G$2 ?};
                  _val1:=_S1*G.G$2
               |? _a='u'
               || _val:=((_S1+_S2+_S3)/_godz)$2*G.G$2;
                  _val1:=(_S1/_godz)$2*G.G$2
               ?};
               {?_val
               ||
::                Wyliczenie stawki minimalnej dla jednej godziny
                  _minimum:=exec('minkraj_komornik','lista_licz',G.D,,1,G.D)$2;
::                Wyrownanie do minimalnego zatrudnienia
                  _minimum:=_minimum*G.G$2;
                  {? _val<_minimum
                  || _val:=_minimum
                  ?}
               ?};
               _val1:=
                  {? _kod=55 | _kod=7008  | _kod=7015
                  || 0.5
                  || 1
                  ?}*_val1$2;
               {? _kod=7008 | _kod=7009
               || _val:=_val*0.6$2;
                  _val1:=_val1*0.6$2
               ?};
               G.WAR:=_val+_val1;
               G.put(1);

               {? _val
               || exec('wyplata','roz_godz','W',_val,120)
               ?};
               {? _val1
               || exec('wyplata','roz_godz','D',_val1,121)
               ?};
               _val1+=exec('dod_w','roz_godz',121);

               _val1+=FUNKCJE.LK(121,G.KK);
               FUNKCJE.LK(121,G.KK,_val1);

               _val+=FUNKCJE.LK(120,G.KK);
               FUNKCJE.LK(120,G.KK,_val)
            ?};

::          Liczba godzin dop. do etatu
            {? _kod=64 | _kod=68 | _kod=69
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               _val:=_val1:=0;
               exec('kal_prac','personel',G.D~1);
               {? _a='f'
                  || _val:=_S1*G.G$2+(_S2+_S3)/_godz$2*G.G$2;
                     _val1:=_S1*G.G$2
                  |? _a='u'
                  || _val:=((_S1+_S2+_S3)/_godz)$2*G.G$2;
                     _val1:=(_S1/_godz)$2*G.G$2
                  ?};
                  _val1:=
                     {? _kod=69 || 1
                     |? _kod=68 || 0.5
                     |? _kod=64 & __KAL.h_days(G.D,G.D) || 1
                     || 0
                     ?}*_val1$2;
                  G.WAR:=_val+_val1;
                  G.put(1);

                  {? _val
                  || exec('wyplata','roz_godz','W',_val,125)
                  ?};
                  {? _val1
                  || exec('wyplata','roz_godz','D',_val1,126)
                  ?};
                  _val1+=exec('dod_w','roz_godz',126);

                  _val1+=FUNKCJE.LK(126,G.KK);
                  FUNKCJE.LK(126,G.KK,_val1);
                  _val+=exec('dod_w','roz_godz',125);
                  _val+=FUNKCJE.LK(125,G.KK);
                  FUNKCJE.LK(125,G.KK,_val)
            ?};

::          Godziny nocne
            {? _kod=57
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               _nk:=exec('ust_nk','lista_licz',G.D,'NK');
               _pdgn:=20;
               _pr_noc:=exec('ust_nk','lista_licz',G.D,'PDGN');
               {? _pr_noc & _pr_noc>_pdgn
               || _pdgn:=_pr_noc
               ?};
               _pdgn:=_pdgn/100;

::             ustawienie kalendarza z listy plac
               exec('kal_list','personel');
               _godz_nr:=__KAL.w_hours(date(G.D~1,G.D~2,1),date(G.D~1,G.D~2,0));
               exec('kal_prac','personel',G.D~1);

               _val:=((_nk/_godz_nr)$2*_pdgn$2)*G.G$2;
               G.WAR:=_val;
               G.put(1);

               exec('wyplata','roz_godz','W',_val,122);
               _val+=exec('dod_w','roz_godz',122);

               _val+=FUNKCJE.LK(122,G.KK);
               FUNKCJE.LK(122,G.KK,_val)
            ?};

::: sprawdzenie daty od ktorej zostaje zmieniony sposob realizacji dodatku za przekroczenia sredniotygodniowe
            _66_ok:=G.D>=exec('ustal_date_sred','godziny');

::          Godziny w dni wolne
::          Dla zapisow z kwalifikacji godzin dwa skladniki wynagrodzenie 65 oraz dodatek 66

            {? _kod=66 | _kod=58
::  okres jednomiesieczny - skladniki wchodzace do wyliczenia dodatku za urlop
:: wynagrodzenie i dodatek
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               _val:=_val1:=0;
               {? _a='f'
               || {? _kod=58
                  || _val:=_S1*G.G$2+(_S2+_S3)/_godz$2*G.G$2;
                     _val1:=G.G*_S1$2
                  || {? _okr
                     || _val1:=G.G*_OS1$2
                     || _val1:=G.G*_S1$2
                     ?}
                  ?}
               || {? _kod=58
                  || _val:=((_S1+_S2+_S3)/_godz)$2*G.G$2;
                     _val1:=(_S1/_godz)$2*G.G$2
                  || {? _okr
                     || _val:=((_OS1+_OS2+_OS3)/_godz_ro)$2*G.G$2;
                        _val1:=(_OS1/_godz_ro)$2*G.G$2
                     || _val:=((_S1+_S2+_S3)/_godz)$2*G.G$2;
                        _val1:=(_S1/_godz)$2*G.G$2
                     ?}
                  ?}
               ?};
               G.WAR:=_val+_val1;
               G.put(1);

               {? _val  || exec('wyplata','roz_godz','W',_val,123) ?};
               {? _val1  || exec('wyplata','roz_godz','D',_val1,123) ?};
               _val+=_val1;
               _val+=exec('dod_w','roz_godz',123);
               _val+=FUNKCJE.LK(123,G.KK);
               FUNKCJE.LK(123,G.KK,_val)
: dodatek
            |? _kod=7027
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               {? _okr
               || {? _a='f'
                  || _val:=G.G*_OS1$2
                  || _val:=(_OS1/_godz_ro)$2*G.G$2
                  ?}
               || {? _a='f'
                  || _val:=G.G*_S1$2
                  || _val:=(_S1/_godz)$2*G.G$2
                  ?}
               ?};
               G.WAR:=_val;
               G.put(1);

                exec('wyplata','roz_godz','D',_val,7054);
               _val+=exec('dod_w','roz_godz',7054);
               _val+=FUNKCJE.LK(7054,G.KK);
               FUNKCJE.LK(7054,G.KK,_val)
: dodatek i wynagrodzenie
            |? _kod=7036
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               _val:=_val1:=0;
               {? _okr
               || {? _a='f'
                  || _val1:=G.G*_OS1$2
                  || _val:=((_OS1+_OS2+_OS3)/_godz_ro)$2*G.G$2;
                     _val1:=(_OS1/_godz_ro)$2*G.G$2
                  ?}
               || {? _a='f'
                  || _val1:=G.G*_S1$2
                  || _val:=((_S1+_S2+_S3)/_godz)$2*G.G$2;
                     _val1:=(_S1/_godz)$2*G.G$2
                  ?}
               ?};
               G.WAR:=_val+_val1;
               G.put(1);

               {? _val  || exec('wyplata','roz_godz','W',_val,7040) ?};
               {? _val1  || exec('wyplata','roz_godz','D',_val1,7040) ?};
               _val+=_val1;
               _val+=exec('dod_w','roz_godz',7040);
               _val+=FUNKCJE.LK(7040,G.KK);
               FUNKCJE.LK(7040,G.KK,_val)
:: wynagrodzenie i dodatek
            |? _kod=7028
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               _val:=_val1:=0;
               {? _okr
               || {? _a='f'
                  || _val1:=G.G*_OS1$2
                  || _val:=((_OS1+_OS2+_OS3)/_godz_ro)$2*G.G$2;
                     _val1:=(_OS1/_godz_ro)$2*G.G$2
                  ?}
               || {? _a='f'
                  || _val1:=G.G*_S1$2
                  || _val:=((_S1+_S2+_S3)/_godz)$2*G.G$2;
                     _val1:=(_S1/_godz)$2*G.G$2
                  ?}
               ?};
               G.WAR:=_val+_val1;
               G.put(1);

               {? _val  || exec('wyplata','roz_godz','W',_val,7050) ?};
               {? _val1  || exec('wyplata','roz_godz','D',_val1,7050) ?};
               _val+=_val1;
               _val+=exec('dod_w','roz_godz',7050);
               _val+=FUNKCJE.LK(7050,G.KK);
               FUNKCJE.LK(7050,G.KK,_val)
: wynagrodzenie
            |? _kod=7037
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               {? _a='u'
               || {? _okr
                  || _val:=((_OS1+_OS2+_OS3)/_godz_ro)$2*G.G$2
                  || _val:=((_S1+_S2+_S3)/_godz)$2*G.G$2
                  ?};
                  {? _val
                  ||
::                   Wyliczenie stawki minimalnej dla jednej godziny
                     _minimum:=exec('minkraj_komornik','lista_licz',G.D,,1,G.D)$2;
::                   Wyrownanie do minimalnego zatrudnienia
                     _minimum:=_minimum*G.G$2;
                     {? _val<_minimum || _val:=_minimum ?}
                  ?};
                  G.WAR:=_val;
                  G.put(1);

                  exec('wyplata','roz_godz','W',_val,7052);
                  _val+=exec('dod_w','roz_godz',7052);
                  _val+=FUNKCJE.LK(7052,G.KK);
                  FUNKCJE.LK(7052,G.KK,_val)
               ?}
            |? _kod=7056
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               {? _a='u'
               || {? _okr
                  || _val:=((_OS1+_OS2+_OS3)/_godz_ro)$2*G.G$2
                  || _val:=((_S1+_S2+_S3)/_godz)$2*G.G$2
                  ?};
                  G.WAR:=_val;
                  G.put(1);

                  exec('wyplata','roz_godz','W',_val,7058);
                  _val+=exec('dod_w','roz_godz',7058);
                  _val+=FUNKCJE.LK(7058,G.KK);
                  FUNKCJE.LK(7058,G.KK,_val)
               ?}
::  okres wielomiesięczny składniki nie wchodzące do wyliczenia dodatku za urlop // wprowadzenie do premii okresowych
:: wynagrodzenie i dodatek
            |? _kod=7011 & _okr
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               _val:=_val1:=0;
               {? _a='f'
               || _val1:=G.G*_OS1$2
               || _val:=((_OS1+_OS2+_OS3)/_godz_ro)$2*G.G$2;
                  _val1:=(_OS1/_godz_ro)$2*G.G$2
               ?};
               G.WAR:=_val+_val1;
               G.put(1);

               {? _val  || exec('wyplata','roz_godz','W',_val,7006) ?};
               {? _val1  || exec('wyplata','roz_godz','D',_val1,7006) ?};
               _val+=_val1;
               _val+=exec('dod_w','roz_godz',7006);
               {? _66_ok
               || _tab_okr.REF:=#P.ref();
                  _tab_okr.R:=7006;
                  _tab_okr.KWN:=_val;
                  _tab_okr.KWB:=_val;
                  _tab_okr.KWI:=_val;
                  _tab_okr.DP:=O.D;
                  _tab_okr.OD:=_okr_od;
                  _tab_okr.DO:=_okr_do;
                  _tab_okr.BZ:='N';
                  _tab_okr.add()
               ?};
               _val+=FUNKCJE.LK(7006,G.KK);
               FUNKCJE.LK(7006,G.KK,_val)

:: dodatek
            |? _kod=7026 & _okr
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               {? _a='f'
               || _val:=G.G*_OS1$2
               || _val:=(_OS1/_godz_ro)$2*G.G$2
               ?};
               G.WAR:=_val;
               G.put(1);

               exec('wyplata','roz_godz','D',_val,7055);
               _val+=exec('dod_w','roz_godz',7055);
               {? _66_ok
               || _tab_okr.REF:=#P.ref();
                  _tab_okr.R:=7055;
                  _tab_okr.KWN:=_val;
                  _tab_okr.KWB:=_val;
                  _tab_okr.KWI:=_val;
                  _tab_okr.DP:=O.D;
                  _tab_okr.OD:=_okr_od;
                  _tab_okr.DO:=_okr_do;
                  _tab_okr.BZ:='N';
                  _tab_okr.add()
               ?};
               _val+=FUNKCJE.LK(7055,G.KK);
               FUNKCJE.LK(7055,G.KK,_val)

:: wynagrodzenie
            |? _kod=7038 & _okr
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               {? _a='u'
               || _val:=((_OS1+_OS2+_OS3)/_godz_ro)$2*G.G$2;
                  G.WAR:=_val;
                  G.put(1);

                  exec('wyplata','roz_godz','W',_val,7053);
                  _val+=exec('dod_w','roz_godz',7053);
                  {? _66_ok
                  || _tab_okr.REF:=#P.ref();
                     _tab_okr.R:=7053;
                     _tab_okr.KWN:=_val;
                     _tab_okr.KWB:=_val;
                     _tab_okr.KWI:=_val;
                     _tab_okr.DP:=O.D;
                     _tab_okr.OD:=_okr_od;
                     _tab_okr.DO:=_okr_do;
                     _tab_okr.BZ:='N';
                     _tab_okr.add()
                  ?};
                  _val+=FUNKCJE.LK(7053,G.KK);
                  FUNKCJE.LK(7053,G.KK,_val)
               ?}
            |? _kod=7057 & _okr
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               {? _a='u'
               || _val:=((_OS1+_OS2+_OS3)/_godz_ro)$2*G.G$2;
               G.WAR:=_val;
               G.put(1);

               exec('wyplata','roz_godz','W',_val,7059);
               _val+=exec('dod_w','roz_godz',7059);
                  {? _66_ok
                  || _tab_okr.REF:=#P.ref();
                        _tab_okr.R:=7059;
                     _tab_okr.KWN:=_val;
                     _tab_okr.KWB:=_val;
                     _tab_okr.KWI:=_val;
                     _tab_okr.DP:=O.D;
                     _tab_okr.OD:=_okr_od;
                     _tab_okr.DO:=_okr_do;
                     _tab_okr.BZ:='N';
                     _tab_okr.add()
                  ?};
                  _val+=FUNKCJE.LK(7059,G.KK);
                  FUNKCJE.LK(7059,G.KK,_val)
               ?}
:: wynagrodzenie i dodatek
            |? _kod=7035 & _okr
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               _val:=_val1:=0;
               {? _a='f'
               || _val1:=G.G*_OS1$2
               || _val:=((_OS1+_OS2+_OS3)/_godz_ro)$2*G.G$2;
                  _val1:=(_OS1/_godz_ro)$2*G.G$2
               ?};
               G.WAR:=_val+_val1;
               G.put(1);

               {? _val  || exec('wyplata','roz_godz','W',_val,7041) ?};
               {? _val1  || exec('wyplata','roz_godz','D',_val1,7041) ?};
               _val+=_val1;
               _val+=exec('dod_w','roz_godz',7041);

               {? _66_ok
               || _tab_okr.REF:=#P.ref();
                  _tab_okr.R:=7041;
                  _tab_okr.KWN:=_val;
                  _tab_okr.KWB:=_val;
                  _tab_okr.KWI:=_val;
                  _tab_okr.DP:=O.D;
                  _tab_okr.OD:=_okr_od;
                  _tab_okr.DO:=_okr_do;
                  _tab_okr.BZ:='N';
                  _tab_okr.add()
               ?};
               _val+=FUNKCJE.LK(7041,G.KK);
               FUNKCJE.LK(7041,G.KK,_val)

:: wynagrodzenie i dodatek
            |? _kod=7029 & _okr
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               _val:=_val1:=0;
               {? _a='f'
               || _val1:=G.G*_OS1$2
               || _val:=((_OS1+_OS2+_OS3)/_godz_ro)$2*G.G$2;
                  _val1:=(_OS1/_godz_ro)$2*G.G$2
               ?};
               G.WAR:=_val+_val1;
               G.put(1);

               {? _val  || exec('wyplata','roz_godz','W',_val,7051) ?};
               {? _val1  || exec('wyplata','roz_godz','D',_val1,7051) ?};
               _val+=_val1;
               _val+=exec('dod_w','roz_godz',7051);
               {? _66_ok
               || _tab_okr.REF:=#P.ref();
                  _tab_okr.R:=7051;
                  _tab_okr.KWN:=_val;
                  _tab_okr.KWB:=_val;
                  _tab_okr.KWI:=_val;
                  _tab_okr.DP:=O.D;
                  _tab_okr.OD:=_okr_od;
                  _tab_okr.DO:=_okr_do;
                  _tab_okr.BZ:='N';
                  _tab_okr.add()
               ?};
               _val+=FUNKCJE.LK(7051,G.KK);
               FUNKCJE.LK(7051,G.KK,_val)

            ?};

::          Liczba godzin uprawniajacych do korzystania z praw autorskich.
::          Podstawa jest wylacznie stawka zasadnicza.
            {? _kod=7001
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val);
               {? _a='f'
               || _val:=_S1*G.G$2
               |? _a='u'
               || _val:=_S1/_godz$2*G.G$2
               ?};
               exec('wyplata','roz_godz','W',_val,7002)
            ?};

::          ewentualne godziny pracy poza siedzibą
            {? __RUB.sys_attr(_kod,816,G.D)
            || _val:=G.G+FUNKCJE.LK(_kod,G.KK);
               FUNKCJE.LK(_kod,G.KK,_val)
            ?};

            params_set('a',_a,'S1',_S1,'S2',_S2,'S3',_S3,'kod',_kod,'OS1',_OS1,'OS2',_OS2,'OS3',_OS3,'okr_do',_okr_do,
               'godz_ro',_godz_ro,'godz',_godz,'tab_okr',_tab_okr,'ok_66',_66_ok,'okr',_okr,'okr_od',_okr_od);
::          Wtyczka do obsługi niestandardowego wyliczenia godzin
            Plugin.run('PPL_PLL_NALS_ROZGODZ')
         ?}
      ?};
      G.next()
   !};
   VAR_DEL.delete('sta_pom')
?};
exec('wpr_prem_sredt','skladniki_okresowe',_tab_okr);

:: Dodanie wartości pracy zdalnej stałej
{? exec('is_pzd01','ppsf')
|| exec('ppsf_rozlicz','ppsf')
?};

H_ODDE.cntx_pop();
H.cntx_pop();
A_OKRP.cntx_pop;
G.cntx_pop();
R_GODZ.cntx_pop();

1


\urlop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: Wynagrodzenie za urlop, podstawa prawna Rozp. Min. Pracy z 16 grudnia 2003.
::   WE: [_a] INTEGER = 1 - Wyliczenie dla zwolnienia ze świadczenia pracy.
::                      2 - Wyliczenie dla dopełnienia do wymiaru - wigilia.
::   WY:
::  OLD: \urlop/urlop.fml
::----------------------------------------------------------------------------------------------------------------------
: wynagrodzenie za urlop, podstawa prawna Rozp. Min. Pracy z 16 grudnia 2003
: zwolnienie ze świadczenia pracy
_zwoln:={? var_pres('_a')=type_of(0) || _a ?};

__KORZ:=0;
Finish:=0;
_Suma_NP:=_Suma:=Suma_MD:=Suma_OK:=_Suma_SW:=_licz_mc:=_akord:=0;
_kolejny:=0;
_ile_mc:={? exec('Nalezy','grupprac','UR_EK_12',P.ref(),date(O.R,O.M,0)) || 12 || 3 ?};
exec('dekl_tab_urlop','!ppl_pll_nals');
_przeszer:=date(O.R,O.M,0);
_cal:=P.KAL;

A_OKRP.cntx_psh;
A_OKRP.index('A_OKRDP');
H.cntx_psh();
N.cntx_psh();
N.index('NIEOBECN');
N.prefix('N',P.ref());
N.index('NIEOBECL');
N.prefix('N',P.ref(),VAR.NAZWALIS);
pom[20]:=exec('ust_nk','lista_licz',date(O.R,O.M,0),'NK');

pom[3]:=(P.DZA~1)*12+P.DZA~2;
_Stop:=s_pom:=(O.R*12+O.M)-pom[3];
{? _Stop>126 || _Stop:=s_pom:=126 ?};

{? N.first()
|| _d_min:=date(N.OD~1,(N.OD~2)-3,0);
:: Zmiana na rubryki z odpowiendim atrybutem
   _tab_r_godz_kal:=__RUB.sys_rub(1011211,date(O.R,O.M,0)).first();
   _tab_r_godz:=__RUB.sys_rub(1011212,date(O.R,O.M,0)).first();
:: _tab_wyn_godz:=__RUB.sys_rub(1011221,date(O.R,O.M,0)).first();
::NUCO
   _tab_wyn_godz:=0;

:: Nie minęły 3 miesiące od wydania orzeczenia o niepełnosprawności
:: Uwzględnienie zmiany kalendarza SPIS: ER/WRT/XP/12.51/1912/0036
   P_INFO.cntx_psh();
   P_INFO.index('OD');
   P_INFO.prefix(exec('firma','ustawienia'),P.OSOBA);
   {? P_INFO.find_le(N.OD)
   || {? P_INFO.STNP_OD<>date(0,0,0) & P_INFO.STNP_OD>_d_min & P_INFO.STNP_OD<N.OD
      || R_WZCZ.cntx_psh;
         R_WZCZ.index('R_WZWND');
         R_WZCZ.prefix(P.name,P.ref,'N','N');
         {? R_WZCZ.first()
         || {? R_WZCZ.find_le(N.OD)
            || _cal:=R_WZCZ.KAL
            ?}
         ?};
         R_WZCZ.cntx_pop()
      ?}
   ?};
   P_INFO.cntx_pop();
   exec('define_wynchor','lista_licz');
   _nsize:=N.size();
   {? var_pres('__PN')<=0
   || __PN:=obj_new(@.CLASS.PNIEO,_nsize)
   || __PN.Delete();
      __PN.Create(_nsize)
   ?};
   &_nsize;
   {!
   |? _kod_nie:=N.NB().RN; _licz_mc:=_czy_licz:=0;
      _IF_SW:=__RUB.sys_attr(_kod_nie,1318,N.OD);
      {? (_zwoln=1 & __RUB.sys_attr(_kod_nie,135,N.OD)) | (_zwoln=2 & __RUB.sys_attr(_kod_nie,1313,N.OD)) | ( ~_zwoln &
         (_kod_nie=KST_PAR.URLOP().RN | _kod_nie=KST_PAR.URL_CHOR().RN | __RUB.sys_attr(_kod_nie,116,N.OD) |
         __RUB.sys_attr(_kod_nie,1113,N.OD) | _IF_SW |
         (__RUB.sys_attr(_kod_nie,131,N.OD) & ~__RUB.sys_attr(_kod_nie,135,N.OD) & ~__RUB.sys_attr(_kod_nie,1313,N.OD) &
         ~__RUB.sys_attr(_kod_nie,1314,N.OD)) ))
      || _Wyp:=(_kod_nie=KST_PAR.URLOP().RN | _kod_nie=KST_PAR.URL_CHOR().RN | __RUB.sys_attr(_kod_nie,135,N.OD)
            | __RUB.sys_attr(_kod_nie,1313,N.OD) | __RUB.sys_attr(_kod_nie,1113,N.OD));
         _Wartosc:=_DniRob:=_Zasad:=_akord:=0;
         Wskaznik:=WskSkl:=null; Podstawa:=0;
:        ustalenie ostatniego przeszeregowania wzgledem daty OD nieobecnosci
         H.index('_HISTKOD');
         H.prefix(P.ref(),'Z');
         _przeszer:=pom[2]:=date(N.OD~1,N.OD~2,0);
         _WY:=P.WY;
         {? H.last()
         || {!
            |? {? H.OD>pom[2]
               || H.prev()
               ?}
            !};
            _hsx:=exec('hsx','lista_licz',pom[2]);
            pom[5].S1:=_hsx.S1;
            pom[5].S2:=_hsx.S2;
            pom[5].S3:=_hsx.S3;
            obj_del(_hsx);
            &_hsx;
            pom[6]:=H.OD;
            pom[15]:=H.ref();
            pom[18]:=H.CP().S;
            _WY:=H.WY;
            {!
            |? _hsx:=exec('hsx','lista_licz',pom[2]);
               _again:=
                  {? pom[5].S1=_hsx.S1 & pom[5].S2=_hsx.S2 & pom[5].S3=_hsx.S3
                  || pom[6]:=H.OD;
                     _WY:=H.WY;
                     H.prev()
                  ?};
               obj_del(_hsx);
               &_hsx;
               _again
            !};
            _przeszer:=pom[6]
         ?};

         {? _Wyp
         || _Start:=exec('start','!ppl_pll_nals');
            _Od:=date(O.R,O.M-_Start,1);
            pom[12]:=N.OD;
            pom[13]:=N.ref();
            _czy_licz:=0;
            N.cntx_psh();
            N.index('NIEOBECN');
            N.prefix('N',P.ref());
            {? N.prev()
            || {? ( N.NB().RN=KST_PAR.URLOP().RN | N.NB().RN=KST_PAR.URL_CHOR().RN)
                  & N.DO = (pom[12]-1) & N.DO~2<>pom[12]~2
                  & date(_przeszer~1,_przeszer~2,1)=date(pom[12]~1,pom[12]~2,1)
               || _czy_licz:=1;
                  _Start:=exec('start','!ppl_pll_nals');
                  _pom:=O.R*12+O.M-_Start;
                  _Data:=_od:=date(_pom%12,_pom%*12,1);
                  _Od:=date(O.R,O.M-_Start,1);
                  exec('zap_nw_wynchor','lista_licz',pom[13],pom[13]);
:                 ustalenie ostatniego przeszeregowania wzgledem daty OD nieobecnosci rozpoczecia urlopu
                  H.index('_HISTKOD');
                  H.prefix(P.ref(),'Z');
                  _przeszer:=pom[2]:=date(N.OD~1,N.OD~2,0);
                  _WY:=P.WY;
                  {? H.last()
                  || {!
                     |? {? H.OD>pom[2]
                        || H.prev()
                        ?}
                     !};
                     _hsx:=exec('hsx','lista_licz',pom[2]);
                     pom[5].S1:=_hsx.S1;
                     pom[5].S2:=_hsx.S2;
                     pom[5].S3:=_hsx.S3;
                     obj_del(_hsx);
                     &_hsx;
                     pom[6]:=H.OD;
                     pom[15]:=H.ref();
                     pom[18]:=H.CP().S;
                     _WY:=H.WY;
                     {!
                     |? _hsx:=exec('hsx','lista_licz',pom[2]);
                        _again:=
                           {? pom[5].S1=_hsx.S1 & pom[5].S2=_hsx.S2 & pom[5].S3=_hsx.S3
                           || pom[6]:=H.OD;
                              _WY:=H.WY;
                              H.prev()
                           ?};
                        obj_del(_hsx);
                        &_hsx;
                        _again
                     !};
                     _przeszer:=pom[6]
                  ?}
               ?}
            ?};
            N.cntx_pop();
            &Data_nie;
            {? ~_czy_licz
            || _czy_licz:=~__PN.Find(_kod_nie,_Od)
            ?}
         || N.cntx_psh();
            _ref:=exec('nw_find_chp','nieobecnosc',N.ref);
            {? _ref
            || N.seek(_ref)
            ?};
            _Start:=(O.R*12+O.M)-((N.OD~1)*12+N.OD~2);
            N.cntx_pop();
            _Od:=date(O.R,O.M-_Start,1);
            _czy_licz:=~__PN.Find(_kod_nie,_Od)
         ?};

         _blokada:=exec('blokada_oblicz','nieobecnosc');
         {? _czy_licz & ~_blokada
         || {! _i:=1..8
            |! godz[_i]:=0
            !};
            {? ~_Wyp
            || _Stop:=_Start
            || _Stop:=s_pom;
               {? _Start<=0
               || _Start:=1
               ?};
               _Stop+=_Start-1;
               {? O.R*12+O.M-_Stop<(P.DZA~1)*12+(P.DZA~2)
               || _Stop:=s_pom
               ?}
            ?};
            {? _Stop>s_pom || _Stop:=s_pom ?};
            pom[14]:=0;
            Finish+=1;
            __PN.NewMc(Finish,{? _Stop<_ile_mc || {? _Stop<=0 || 1 || _Stop ?} || _ile_mc ?});
            _oTrace:=obj_new(@.CLASS.Trace);
:           dla nieobecnosci urlopowych w przypadku ponownego OBLICZ usuwany skladniki SK_CHO
            _kolejny:=1;
            SK_CHO.cntx_psh();
            _maska:='s_ch'+form(N.OD~1,-4,0,'9.');
            {? SK_CHO.name()<>_maska
            || SK_CHO.use(_maska)
            ?};
            SK_CHO.index('SK_CHO');
            SK_CHO.prefix(N.ref());
            {? SK_CHO.first()
            || {!
               |? SK_CHO.del()
               !}
            ?};
            &_maska;
            SK_CHO.cntx_pop();
:           Obsluga sytuacji wyjatkowej:
:           JEZELI
:           - rozliczamy urlop wypoczynkowy lub na zadanie (a nie MD czy okolicznosciowy),
:           - wyplata wynagrodzenia nastepuje z przesunieciem
:             (co moze miec miejsce tylko przy urlopie wypoczynkowym),
:           - przesuniecie eliminuje jedyny miesiac z danymi
:             (_Start>_Stop )
:           TO mimo przesuniecia wezmy pod uwage miesiac, ktory w normalnych warunkach by wypadl.
            {? _Wyp & _Start>_Stop
            || _Start:=_Stop
            ?};

:           Sytuacja szczegolna, nowozatrudniony pracownik w pierwszym miesiacu pracy dostaje wynagrodzenie z
:           przesunieciem wyplaty do nastepnego miesiaca. W drugim miesiacu zatrudnienia wystepuje urlop rozliczony
:           rowniez z przesunieciem wyplaty do nastepnego miesiaca. Nie mozna ustalic wyplaconego wynagrodzenia pomimo
:           ze urlop wystapil w kolejnym miesiacu zatrudnienia. W takim przypadku system ma za zadanie wybrac
:           najblizsze wynagrodzenie. Takim wynagrodzeniem jest w tym przypadku lista z miesiaca zatrudnienia
:           wyplacona w miesiacu urlopu.
            _bez_wyp:=0;
            {? _Wyp & _Start-_Stop+1=1
            || {? ~FUNKCJE.LP(500,,_Start,_Start,1,,1)
               || {? FUNKCJE.L(500,,_Start,_Start)
                  || _bez_wyp:=1
                  || _Start:=_Stop:=0
                  ?}
               ?}
            ?};

            {! _i:=_Start.._Stop
            |? _oTrace.erase();
               _Nieob:=_Praca:=_Kwota:=_odbior:=0;
               _pom:=O.R*12+O.M-_i;
               _Data:=date(_pom%12,_pom%*12,1);
:              początek i koniec miesiaca
               _od:=date(_pom%12,_pom%*12,1);
               _do:=date(_pom%12,_pom%*12,0);

               _wyplata:=0;
               O.cntx_psh();
               LS.cntx_psh();
               O_P.cntx_psh();
:: Dla urlopu okolicznościowego pobieramy zawsze za miesiąc rozliczenia a nie wypłaty
               {? __RUB.sys_attr(_kod_nie,116,N.OD) | __RUB.sys_attr(_kod_nie,1318,N.OD)
               || O_P.index('P_RMK'); _bez_wyp:=1
               || O_P.index('P_RMP')
               ?};
               O_P.prefix('T',P.ref(),_Data~1,_Data~2);
               _first:=1;
               _lpod:=0;
               {? _i & O_P.first()
               || {!
                  |? LS.use(O_P.O().LT);
                     LS.index('PRACNRRU');
                     LS.prefix(P.ref());
                     {? LS.find_key(500)
                     || {? LS.find_key(90) | LS.find_key(91)
                        || _lpod:=1;
                           {? _first
                           || _od:=date(O.R, O.M,1);
                              _do:=date(O.R,O.M,0)
                           ?};
                           _first:=0;
                           {? _od>(_pom:=date(O.R,O.M,1))
                           || _od:=_pom
                           ?};
                           {? _do<(_pom:=date(O.R,O.M,0))
                           || _do:=_pom
                           ?}
                        ?};
                        _wyplata:=1
                     ?};
                     O_P.next()
                  !}
               |? _i=0
               || _wyplata:=1;
                  _lpod:=1
               ?};
               O_P.cntx_pop();
               LS.cntx_pop();
               O.cntx_pop();
               &_pom;

:              nominalna liczba godzin roboczych
               {? _wyplata | _bez_wyp
               || {? _cal
                  || __KAL.set_cal(_cal,_od~1)
                  || __KAL.set_cal('standard',_od~1)
                  ?};
                  pom[16]:=exec('nominal','godziny',_od,_do);
                  _odbior:=(*exec('godz_odb','!ppl_pll_nals',P.ref,_od,_do,'WS')/60)$2
               || pom[16]:=0;
                  pom[14]:=1
               ?};
               &_wyplata;

               {? pom[16]=0 & pom[14]=0
               || RAPLS.msg(
                     P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                     'Brak informacji o kalendarzu pracownika.'@,
                     exec('retry_msg','lista_licz')
                  );
                  pom[14]:=1
               ?};
               {? N.OD~1>2003
               || 'nominalna liczba dni roboczych';
                  _Norma:=pom[16];
                  _Nieob:=exec('licz_nie_urlop','!ppl_pll_nals',_od,_do,1)
               || 'nominalna liczba dni roboczych';
                  _Norma:=__KAL.w_days(_od,_do);
                  _Nieob:=exec('licz_nie_urlop','!ppl_pll_nals',_od,_do)
               ?};
               H.index('_HISTKOD');
               H.prefix(P.ref(),'Z');
               pom[19]:=
                  {? H.find_le(_do)
                  || pom[19]:=H.CP().S
                  || pom[18]
                  ?};

               _G54:=0;
               A_OKRP.prefix(P.ref);
               {? -(1+pom[19])='u' & A_OKRP.find_le(_do) & _do<=A_OKRP.DO
               || {? _i=0
                  || _G54:=FUNKCJE.L(54)+FUNKCJE.LP(54,,0,,1)
                  |? _bez_wyp
                  || _G54:=FUNKCJE.L(54,,_i)
                  || _G54:=FUNKCJE.LP(54,,_i,,1,,1)
                  ?}
               ?};
               {? -(1+pom[19])='u' & _G54=0
               || _Praca:=_Norma-_Nieob-_odbior;
                  _Praca+=_Godz_nad:=
                     {? _i=0
                     || {? _tab_r_godz_kal
                        || FUNKCJE.L_SYS(1011211)+FUNKCJE.LP_SYS(1011211,,,1)
                        || FUNKCJE.L(55,56)+FUNKCJE.L(58)+FUNKCJE.L(64)+FUNKCJE.L(68,69)+FUNKCJE.L(7008,7009)+
                           FUNKCJE.LP(55,56,0,,1)+FUNKCJE.LP(58,,0,,1)+FUNKCJE.LP(64,,0,,1)+
                           FUNKCJE.LP(68,69,0,,1)+FUNKCJE.LP(7008,7009,0,,1)
                        ?}
                     |? _bez_wyp
                     || {? _tab_r_godz_kal
                        || FUNKCJE.L_SYS(1011211,_i)
                        || FUNKCJE.L(55,56,_i)+FUNKCJE.L(58,,_i)+FUNKCJE.L(64,,_i)+
                           FUNKCJE.L(68,69,_i)+FUNKCJE.L(7008,7009,_i)
                        ?}
                     || {? _tab_r_godz_kal
                        || FUNKCJE.LP_SYS(1011211,_i,,1,,,1)
                        || FUNKCJE.LP(55,56,_i,,1,,1)+FUNKCJE.LP(58,,_i,,1,,1)+FUNKCJE.LP(64,,_i,,1,,1)+
                           FUNKCJE.LP(68,69,_i,,1,,1)+FUNKCJE.LP(7008,7009,_i,,1,,1)
                        ?}
                     ?}
               || _Praca:=_Godz_nad:=
                     {? _i=0
                     || {? _tab_r_godz
                        || FUNKCJE.L_SYS(1011212)+FUNKCJE.LP_SYS(1011212,,,1)
                        || FUNKCJE.L(48)+FUNKCJE.L(54,56)+FUNKCJE.L(58)+FUNKCJE.L(63,65)+FUNKCJE.L(67)+
                           FUNKCJE.L(68,69)+FUNKCJE.L(7008,7010)+
                           FUNKCJE.LP(48,,0,,1)+FUNKCJE.LP(54,56,0,,1)+FUNKCJE.LP(58,,0,,1)+FUNKCJE.LP(63,65,0,,1)+
                           FUNKCJE.LP(67,,0,,1)+FUNKCJE.LP(68,69,0,,1)+FUNKCJE.LP(7008,7010,0,,1)
                        ?}
                     |? _bez_wyp
                     || {? _tab_r_godz
                        || FUNKCJE.L_SYS(1011212,_i)
                        || FUNKCJE.L(48,,_i)+FUNKCJE.L(54,56,_i)+FUNKCJE.L(58,,_i)+FUNKCJE.L(63,65,_i)+
                           FUNKCJE.L(67,,_i)+FUNKCJE.L(68,69,_i)+FUNKCJE.L(7008,7010,_i)
                        ?}
                     || {? _tab_r_godz
                        || FUNKCJE.LP_SYS(1011212,_i,,1,,,1)
                        || FUNKCJE.LP(48,,_i,,1,,1)+FUNKCJE.LP(54,56,_i,,1,,1)+FUNKCJE.LP(58,,_i,,1,,1)+
                           FUNKCJE.LP(63,65,_i,,1,,1)+FUNKCJE.LP(67,69,_i,,1,,1)+FUNKCJE.LP(7008,7010,_i,,1,,1)
                        ?}
                     ?};
                  {? _Praca=0
                  || _Praca:=_Norma-_Nieob-_odbior
                  ?}
               ?};

               {? _Nieob<_Norma & pom[16]>0
                  || {? _lpod
                     || _DniRob+=_Praca
                     ?};
:                    ustalenie najnizszej krajowej
                     godz[3]:=
                        {? _i=0
                        || FUNKCJE.L(57)+FUNKCJE.LP(57,,0,,1)
                        |? _bez_wyp
                        || FUNKCJE.L(57,,_i)
                        || FUNKCJE.LP(57,,_i,,1,,1)
                        ?};
                     {? godz[3]
                        || exec('kal_list','personel');
                           _tab:=exec('tab_godz','lista_licz',_Data,1,_i=0 | _bez_wyp);
                           _tab.prefix();
                        _przelicz:=0;
                        {? _tab.first()
                        || {!
                           |? {? pom[20]<>exec('ust_nk','lista_licz',date(_tab.ROK,_tab.MC,0),'NK')
                              || _przelicz:=1;
                                 0
                              || _tab.next()
                              ?}
                           !}
                        ?};
                        exec('kal_prac','personel',O.R);
                        {? _przelicz
                        || {? _tab.first()
                           || _pdgn:=20;
                              _pr_noc:=exec('ust_nk','lista_licz',_do,'PDGN');
                              {? _pr_noc & _pr_noc>_pdgn
                              || _pdgn:=_pr_noc
                              ?};
                              _pdgn:=_pdgn/100;
                              {!
                              |? _lg:=_tab.GODZ;
                                 _st:=(pom[20]/_tab.NOM)$2*_pdgn$2;
                                 _val:=_lg*_st$2;
                                 _opis:=form(_lg,,,'9.')+'*'+form(_st,,,'9.');
                                 _opis+='('+form(_tab.OPIS)+')';
                                 _oTrace.add(122,,_val,'PRZELICZ','E',,,&_opis);
                                 _Wartosc+=_val;
                                 _Kwota+=_val;
                                 _tab.next()
                              !}
                           ?}
                        || _val:=
                              {? _i=0
                              || FUNKCJE.L(122,,,,_oTrace)+FUNKCJE.LP(122,,0,,1,_oTrace)
                              |? _bez_wyp
                              || FUNKCJE.L(122,,_i,,_oTrace)
                              || FUNKCJE.LP(122,,_i,,1,_oTrace,1)
                              ?};
                           _Wartosc+=_val;
                           _Kwota+=_val
                        ?};
                        &_przelicz;
                        &_tab
                     ?};

:: Sprawdzenie czy były nadgodziny z poprzednich miesięcy wystąpienia naliczone w miesiącu badanym.
:: Jeżeli były takie godziny to weryfikacja przeszeregowania będzie odnosiła się do miesiąca wystąpienia nadgodzin.
                     _od_nadg:=_od;
                     {? _Godz_nad
                     || _tab_G:=exec('rozliczone_godziny','godziny',_od~1,_od~2,82,8211);

                        {? _tab_G.first
                        || _od_nadg:=_tab_G.D
                        ?};
                        &_tab_G
                     ?};

                     {? _przeszer>P.DZA & _przeszer>=_od_nadg & date(_przeszer~1,_przeszer~2,1)<=date(N.OD~1,N.OD~2,1)
                     || _tab:=exec('tab_godz','lista_licz',_Data,,_i=0 | _bez_wyp,_WY);
                        _tab.prefix();
                        _st1:=_st2:=_lg:=0;
                        {? _tab.first()
                        || {!
                           |? {? -(1+pom[18])='f'
                              || _st1:=pom[5].S1;
:: NUCO
                                 _st1+=(pom[5].S1*FUNKCJE.S(75)/100)$2;
                                 _st2:=_st1+((pom[5].S2+pom[5].S3)/_tab.NOM$2);

                                 {? _tab.RODZ=1 | _tab.RODZ=2 | _tab.RODZ=10 | _tab.RODZ=11
                                 || _minimum:=exec('minkraj_komornik','lista_licz',date(_tab.ROK,_tab.MC,1),,1)$2;
                                    _st_min:=_minimum;
                                    _minimum:=_minimum*_tab.GODZ$2;
                                    _lg:=_tab.GODZ;
                                    _val:=_lg*_st2$2;
                                    _logst:=form(_st2,,,'9.');
                                    {? _tab.RODZ=10 | _tab.RODZ=11
                                    || _val:=_val*0.6$2;
                                       {? _val<_minimum*0.6$2
                                       || _val:=_minimum*0.6$2;
                                          _logst:=form(&_st_min,,,'9.')+'*0.6'
                                       ?}
                                    || {? _val<_minimum
                                       || _val:=_minimum;
                                          _logst:=form(&_st_min,,,'9.')
                                       ?}
                                    ?};
                                    _opis:=form(_lg,,,'9.')+'*'+&_logst+'('+form(_tab.OPIS)+')';
::                                  _oTrace.add(120,,_val,'PRZELICZ','E',,,&_opis);
:: NUCO
                                    _val:=0;
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=1 | _tab.RODZ=10 | _tab.RODZ=17
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*0.5*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*0.5*'+form(_st1,,,'9.');
                                    {? _tab.RODZ=10
                                    || _val:=_val*0.6$2;
                                       _opis+='*0.6'
                                    ?};
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(121,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=2 | _tab.RODZ=11 | _tab.RODZ=18
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st1,,,'9.');
                                    {? _tab.RODZ=11
                                    || _val:=_val*0.6$2;
                                       _opis+='*0.6'
                                    ?};
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(121,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=4
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st1,,,'9.');
                                    _val+=_lg*_st2$2;
                                    _opis+='+'+form(_lg,,,'9.')+'*'+form(_st2,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(123,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=6
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st1,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(123,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=5 | _tab.RODZ=7 | _tab.RODZ=8
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st2$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st2,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(125,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=5 & _tab.TYP='S'
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st1,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(126,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=7
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*0.5*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*0.5*'+form(_st1,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(126,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=8
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _oTrace.add(126,,_val,'PRZELICZ','E',,,form(_lg,,,'9.')+'*'+form(_st1,,,'9.'));
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=12
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st1,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(126,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=14
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st1,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(7040,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=15
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st1,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(7050,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?}
::                            || _st1:=pom[5].S1/_tab.NOM$2;
::                               _st2:=(pom[5].S1+pom[5].S2+pom[5].S3)/_tab.NOM$2;
:: NUCO
                              || _st1:=(pom[5].S1+(pom[5].S1*FUNKCJE.S(75)/100$2))/_tab.NOM$2;
                                 _st2:=(pom[5].S1+pom[5].S2+pom[5].S3+(pom[5].S1*FUNKCJE.S(75)/100)$2)/_tab.NOM$2;

                                 {? _tab.RODZ=1 | _tab.RODZ=2 | _tab.RODZ=10 | _tab.RODZ=11 | _tab.RODZ=18 |
                                    _tab.RODZ=17
                                 || _minimum:=exec('minkraj_komornik','lista_licz',date(_tab.ROK,_tab.MC,1),,1)$2;
                                    _st_min:=_minimum;
                                    _minimum:=_minimum*_tab.GODZ$2;
                                    _lg:=_tab.GODZ;
                                    _val:=_lg*_st2$2;
                                    _logst:=form(_st2,,,'9.');
                                    {? _tab.RODZ=10 | _tab.RODZ=11
                                    || _val:=_val*0.6$2;
                                       {? _val<_minimum*0.6$2
                                       || _val:=_minimum*0.6$2;
                                          _logst:=form(&_st_min,,,'9.')+'*0.6'
                                       ?}
                                    || {? _val<_minimum
                                       || _val:=_minimum;
                                          _logst:=form(&_st_min,,,'9.')
                                       ?}
                                    ?};
                                    _logst+='('+form(_tab.OPIS)+')';
::                                  _oTrace.add(120,,_val,'PRZELICZ','E',,,form(_lg,,,'9.')+'*'+&_logst);
:: NUCO
                                    _val:=0;
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=1 | _tab.RODZ=10 | _tab.RODZ=17
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*0.5*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*0.5*'+form(_st1,,,'9.');
                                    {? _tab.RODZ=10
                                    || _val:=_val*0.6$2;
                                       _opis+='*0.6'
                                    ?};
                                    _opis+='('+form(_tab.OPIS)+')';
::                                  _oTrace.add(121,,_val,'PRZELICZ','E',,,&_opis);
:: NUCO
                                    _val:=0;
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=2 | _tab.RODZ=11 | _tab.RODZ=18
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st1,,,'9.');
                                    {? _tab.RODZ=11
                                    || _val:=_val*0.6$2;
                                       _opis+='*0.6'
                                    ?};
                                    _opis+='('+form(_tab.OPIS)+')';
::                                  _oTrace.add(121,,_val,'PRZELICZ','E',,,&_opis);
:: NUCO
                                    _val:=0;
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=4 | _tab.RODZ=6
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st1,,,'9.');
                                    _val+=_lg*_st2$2;
                                    _opis+='+'+form(_lg,,,'9.')+'*'+form(_st2,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(123,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=5 & _tab.TYP='S'
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st1,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(126,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=5 | _tab.RODZ=7 | _tab.RODZ=8
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st2$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st2,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(125,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=7
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*0.5*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*0.5*'+form(_st1,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(126,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=8
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st1,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(126,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=12
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st1,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(7054,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=13
                                 || _minimum:=exec('minkraj_komornik','lista_licz',date(_tab.ROK,_tab.MC,1),,1)$2;
                                    _st_min:=_minimum;
                                    _minimum:=_minimum*_tab.GODZ$2;
                                    _lg:=_tab.GODZ;
                                    _val:=_lg*_st2$2;
                                    {? _val<_minimum
                                    || _val:=_minimum;
                                       _opis:=form(_lg,,,'9.')+'*'+form(&_st_min,,,'9.')
                                    || _opis:=form(_lg,,,'9.')+'*'+form(_st2,,,'9.')
                                    ?};
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(7052,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=14
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st1,,,'9.');
                                    _val+=_lg*_st2$2;
                                    _opis+='+'+form(_lg,,,'9.')+'*'+form(_st2,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(7040,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=15
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st1$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st1,,,'9.');
                                    _val+=_lg*_st2$2;
                                    _opis+='+'+form(_lg,,,'9.')+'*'+form(_st2,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(7050,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?};

                                 {? _tab.RODZ=16
                                 || _lg:=_tab.GODZ;
                                    _val:=_lg*_st2$2;
                                    _opis:=form(_lg,,,'9.')+'*'+form(_st2,,,'9.');
                                    _opis+='('+form(_tab.OPIS)+')';
                                    _oTrace.add(7058,,_val,'PRZELICZ','E',,,&_opis);
                                    _Wartosc+=_val;
                                    _Kwota+=_val
                                 ?}
                              ?};
::                            Wtyczka umożliwiajaca przeliczenie wynagrodzenia za godziny niestandardowe
                              params_set('pom',pom,'Data',_Data,'i',_i,'bez_wyp',_bez_wyp,'oTrace',_oTrace,
                                 'WY',_WY,'przeszer',_przeszer,'tab',_tab);
                              _val:=Plugin.run('PPL_PLL_NALS_URLOP');
                              _Wartosc+=_val;
                              _Kwota+=_val;
                              _tab.next()
                           !}
                        ?};
                        &_tab;
                        {? -(1+pom[18])='f'
                        || _lg:=
                              {? _i=0
                              || {? _tab_r_godz
                                 || FUNKCJE.L_SYS(1011213)+FUNKCJE.LP_SYS(1011213,,,1)
                                 || FUNKCJE.L(48)+FUNKCJE.L(54)+FUNKCJE.L(63)+FUNKCJE.L(67)+FUNKCJE.L(65)+
                                    FUNKCJE.LP(48,,0,,1)+FUNKCJE.LP(54,,0,,1)+FUNKCJE.LP(63,,0,,1)+FUNKCJE.LP(67,,0,,1)+
                                    FUNKCJE.LP(65,,0,,1)
                                 ?}
                              |? _bez_wyp
                              || {? _tab_r_godz
                                 || FUNKCJE.L_SYS(1011213,_i)
                                 || FUNKCJE.L(48,,_i)+FUNKCJE.L(54,,_i)+FUNKCJE.L(63,,_i)+FUNKCJE.L(67,,_i)+
                                    FUNKCJE.L(65,,_i)
                                 ?}
                              || {? _tab_r_godz
                                 || FUNKCJE.LP_SYS(1011213,_i,,1,,,1)
                                 || FUNKCJE.LP(48,,_i,,1,,1)+FUNKCJE.LP(54,,_i,,1,,1)+FUNKCJE.LP(63,,_i,,1,,1)+
                                    FUNKCJE.LP(67,,_i,,1,,1)+FUNKCJE.LP(65,,_i,,1,,1)
                                 ?}
                              ?};
                           _st:=
                              {? H.prefix(); H.seek(pom[15])
                              || {? H.CZYWAL='T'
                                 || exec('waluta','lista_licz',1,,,H.S1)
                                 || H.S1
                                 ?}
                              ?};
                           _val:=_lg*_st$2;
                           _oTrace.add(100,,_val,'PRZELICZ','E',,,form(_lg,,,'9.')+'*'+form(_st,,,'9.'));
                           _Zasad+=_val;
                           _Kwota+=_val;
                           _akord+=
                              {? _i=0
                              || FUNKCJE.L(111)+FUNKCJE.LP(111,,0,,1)
                              |? _bez_wyp
                              || FUNKCJE.L(111,,_i)
                              || FUNKCJE.LP(111,,_i,,1,,1)
                              ?};
                           &_st
                        ?};
                        &_st2;
                        &_st1;
                        &_lg;
                        H.cntx_psh();
                        H.index('_HISTKOD');
                        H.prefix(P.ref(),'Z');
                        {? H.find_le(_do)
                        || _hsx:=exec('hsx','lista_licz',_do);
                           _s1:=_hsx.S1;
                           _s2:=_hsx.S2;
                           _s3:=_hsx.S3;
                           obj_del(_hsx);
                           &_hsx;
::                         sprawdzenie zmiany stawki godzinowej dla FIZ w trakcie miesiąca
                           {? -(1+pom[18])='f'
                           || {? H.prev() & H.DO<>date(0,0,0) & H.DO>=_od & H.DO<_do
                              || {? var_pres('_hsx')>100 || obj_del(_hsx) ?};
                                 _hsx:=exec('hsx','lista_licz',_od);
                                 _s1p:=_hsx.S1;
                                 _s2p:=_hsx.S2;
                                 _s3p:=_hsx.S3;
                                 obj_del(_hsx);
                                 &_hsx;
                                 {? _s1p<>_s1 | _s2p<>_s2 | _s3p<>_s3
                                 || _s1:=_s1p;
                                    _s2:=_s2p;
                                    _s3:=_s3p
                                 ?};
                                 &_s1p;
                                 &_s2p;
                                 &_s3p
                              ?}
                           ?}
                        || _s1:=_s2:=_s3:=0
                        ?};
                        H.cntx_pop();
                        {? -(1+pom[18])='u' & -(1+pom[19])='f'
                        || _val:=LICZ.Wylicz(_i,'.URL',,_oTrace,_s1,pom[5].S1/_Norma$2,_s2,pom[5].S2,_s3,pom[5].S3,1);
                           RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                              'Przeliczenie bieżącego miesięcznego wynagrodzenia w miesiącu stawki godzinowej.',
                              'Skontroluj wyliczenia (podstawa urlopu) miesiąc: '+date(_od~1,_od~2,1)$8+'.')
                        |? -(1+pom[18])='f' & -(1+pom[19])='u'
                        || _val:=LICZ.Wylicz(_i,'.URL',,_oTrace,_s1/_Norma$2,pom[5].S1,_s2,pom[5].S2,_s3,pom[5].S3,1);
                           RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                              'Przeliczenie bieżącej stawki godzinowej w miesiącu stałego wynagrodzenia.',
                              'Skontroluj wyliczenia (podstawa urlopu) miesiąc: '+date(_od~1,_od~2,1)$8+'.')
                        || _val:=LICZ.Wylicz(_i,'.URL',,_oTrace,_s1,pom[5].S1,_s2,pom[5].S2,_s3,pom[5].S3,1,_bez_wyp)
                        ?};
                        {? _i=0
                        || _val+=LICZ.Wylicz(,'.URL',,_oTrace,_s1,pom[5].S1,_s2,pom[5].S2,_s3,pom[5].S3,1)
                        ?};
                        &_s3;
                        &_s2;
                        &_s1;
                        _Wartosc+=_val;
                        _Kwota+=_val
                     || _val:=
                           {? _i=0 & _bez_wyp
                           || {? _tab_wyn_godz
                              || FUNKCJE.L_SYS(1011221,,,_oTrace)+FUNKCJE.L_SYS(1011221,0,,_oTrace)
::                            || FUNKCJE.L(120,121,,,_oTrace)+FUNKCJE.L(120,121,0,,_oTrace)+
:: NUCO
                              || FUNKCJE.L(123,,,,_oTrace)+FUNKCJE.L(123,,0,,_oTrace)+
                                 FUNKCJE.L(125,126,,,_oTrace)+FUNKCJE.L(125,126,0,,_oTrace)+
                                 FUNKCJE.L(7040,7040,,,_oTrace)+FUNKCJE.L(7040,7040,0,,_oTrace)+
                                 FUNKCJE.L(7050,7050,,,_oTrace)+FUNKCJE.L(7050,7050,0,,_oTrace)+
                                 FUNKCJE.L(7052,7052,,,_oTrace)+FUNKCJE.L(7052,7052,0,,_oTrace)+
                                 FUNKCJE.L(7054,7054,,,_oTrace)+FUNKCJE.L(7054,7054,0,,_oTrace)+
                                 FUNKCJE.L(7058,7058,,,_oTrace)+FUNKCJE.L(7058,7058,0,,_oTrace)
                              ?}+
                              LICZ.Wylicz(,'.URL',,_oTrace,,,,,,,1,_bez_wyp)
                           |? _i=0
                           || {? _tab_wyn_godz
                              || FUNKCJE.L_SYS(1011221,,,_oTrace)+FUNKCJE.LP_SYS(1011221,0,,1,_oTrace)
::                            || FUNKCJE.L(120,121,,,_oTrace)+FUNKCJE.LP(120,121,0,,1,_oTrace)+
:: NUCO
                              || FUNKCJE.L(123,,,,_oTrace)+FUNKCJE.LP(123,,0,,1,_oTrace)+
                                 FUNKCJE.L(125,126,,,_oTrace)+FUNKCJE.LP(125,126,0,,1,_oTrace)+
                                 FUNKCJE.L(7040,7040,,,_oTrace)+FUNKCJE.LP(7040,7040,0,,1,_oTrace)+
                                 FUNKCJE.L(7050,7050,,,_oTrace)+FUNKCJE.LP(7050,7050,0,,1,_oTrace)+
                                 FUNKCJE.L(7052,7052,,,_oTrace)+FUNKCJE.LP(7052,7052,0,,1,_oTrace)+
                                 FUNKCJE.L(7054,7054,,,_oTrace)+FUNKCJE.LP(7054,7054,0,,1,_oTrace)+
                                 FUNKCJE.L(7058,7058,,,_oTrace)+FUNKCJE.LP(7058,7058,0,,1,_oTrace)
                              ?}+
                              LICZ.Wylicz(,'.URL',,_oTrace,,,,,,,1,_bez_wyp)
                           |? _bez_wyp
                           || {? _tab_wyn_godz
                              || FUNKCJE.L_SYS(1011221,_i,,_oTrace)
::                            || FUNKCJE.L(120,121,_i,,_oTrace)+
:: NUCO
                              || FUNKCJE.L(123,,_i,,_oTrace)+
                                 FUNKCJE.L(125,126,_i,,_oTrace)+
                                 FUNKCJE.L(7040,7040,_i,,_oTrace)+
                                 FUNKCJE.L(7050,7050,_i,,_oTrace)+
                                 FUNKCJE.L(7052,7052,_i,,_oTrace)+
                                 FUNKCJE.L(7054,7054,_i,,_oTrace)+
                                 FUNKCJE.L(7058,7058,_i,,_oTrace)
                              ?}
                           || {? _tab_wyn_godz
                              || FUNKCJE.LP_SYS(1011221,_i,,1,_oTrace,,1)
::                            || FUNKCJE.LP(120,121,_i,,1,_oTrace,1)+
:: NUCO
                              || FUNKCJE.LP(123,,_i,,1,_oTrace,1)+
                                 FUNKCJE.LP(125,126,_i,,1,_oTrace,1)+
                                 FUNKCJE.LP(7040,7040,_i,,1,_oTrace,1)+
                                 FUNKCJE.LP(7050,7050,_i,,1,_oTrace,1)+
                                 FUNKCJE.LP(7052,7052,_i,,1,_oTrace,1)+
                                 FUNKCJE.LP(7054,7054,_i,,1,_oTrace,1)+
                                 FUNKCJE.LP(7058,7058,_i,,1,_oTrace,1)
                              ?}
                           ?}+LICZ.Wylicz(_i,'.URL',,_oTrace,,,,,,,1,_bez_wyp);
                        _Wartosc+=_val;
                        _Kwota+=_val;
                        {? -(1+pom[19])='f'
                        || _val:=
                              {? _i=0
                              || FUNKCJE.L(100,,,,_oTrace)+FUNKCJE.LP(100,,0,,1,_oTrace)
                              |? _bez_wyp
                              || FUNKCJE.L(100,,_i,,_oTrace)
                              || FUNKCJE.LP(100,,_i,,1,_oTrace,1)
                              ?};
                           _Zasad+=_val;
                           _Kwota+=_val;
                           _akord+=
                              {? _i=0
                              || FUNKCJE.L(111)+FUNKCJE.LP(111,,0,,1)
                              |? _bez_wyp
                              || FUNKCJE.L(111,,_i)
                              |? FUNKCJE.L(111,,_i)
                              || FUNKCJE.LP(111,,_i,,1,,1)
                              ?}
                        ?}
                     ?};
:                    zapisanie do tablicy
                     {? ~_licz_mc & ~_lpod & _Kwota
                     || _lpod:=1;
                        _DniRob+=_Praca
                     ?};
                     {? _lpod | _Kwota
                     || _licz_mc+=1;
                        __PN.PutMc(Finish,_licz_mc,_Kwota,
                           {? _lpod || _Norma ?},
                           {? _lpod || _Praca ?},
                           0,'T',_Data,'A',_oTrace
                        )
                     ?}
               ?};
               _licz_mc<_ile_mc
            !};
            obj_del(_oTrace);
            &_oTrace;
            __PN.Zapisz(Finish);
            {? _DniRob>0
            || _Std:=(_Wartosc+_Zasad)/_DniRob$2
            || _Std:=0
            ?};
            {? (_Zasad>0 | _akord>0) & _DniRob>0
            || 1
            |? -(1+pom[18])='f'
            || {? N.OD~1>2003
               || {? N.NG>0
                  || _Zasad:=FUNKCJE.L(91);
                     _Std+=_Zasad
                  ?}
               || {? N.NR>0
                  || _Zasad:=(FUNKCJE.L(91)*N.NG)/N.NR$2;
                     _Std+=_Zasad
                  ?}
               ?}
            ?};
            nbp:=exec('nw_find_chp','nieobecnosc',N.ref);
            nbp:={? nbp || nbp || N.ref ?};
            __PN.Put(Finish,N.NB().RN,N.OD,_Od,date(0,0,0),_Std,nbp);
            exec('zap_tab','lista_licz',nbp);
            &nbp;
            {? N.OD~1>2003
            || {? __RUB.sys_attr(_kod_nie,1161,N.OD)
               || Suma_OK+=(N.WART:=_Std*N.NG)
               |? __RUB.sys_attr(_kod_nie,1162,N.OD)
               || Suma_MD+=(N.WART:=_Std*N.NG)
               |? __RUB.sys_attr(_kod_nie,1311,N.OD)
               || _Suma_NP+=(N.WART:=_Std*N.NG)
               |? _IF_SW
               || _Suma_SW+=(N.WART:=_Std*N.NG*N.PROC/100$2)
               || _Suma+=(N.WART:=_Std*N.NG)
               ?}
            || _Suma+=(N.WART:=_Std*N.NR)
            ?};
            {? ~_IF_SW
            || N.POTR1:=N.POTR2:=N.POTR3:=N.POTR4:=0
            ?};
            N.put()
         |? _czy_licz & N.WART
         || {? __RUB.sys_attr(_kod_nie,1161,N.OD)
            || Suma_OK+=N.WART
            |? __RUB.sys_attr(_kod_nie,1162,N.OD)
            || Suma_MD+=N.WART
            |? __RUB.sys_attr(_kod_nie,1311,N.OD)
            || _Suma_NP+=N.WART
            |? _IF_SW
            || _Suma_SW+=N.WART
            || _Suma+=N.WART
            ?}
         || {? _blokada
            || _Std:=0
            || _Std:=__PN.Pod(Finish);
:           Dla nieobecnosci urlopowych w przypadku ponownego OBLICZ usuwany skladniki SK_CHO
               {? _kolejny=1
               || SK_CHO.cntx_psh();
                  _maska:='s_ch'+form(N.OD~1,-4,0,'9.');
                  {? SK_CHO.name()<>_maska || SK_CHO.use(_maska) ?};
                  SK_CHO.index('SK_CHO');
                  SK_CHO.prefix(N.ref());
                  {? SK_CHO.first() || {! |? SK_CHO.del() !} ?};
                  &_maska;
                  SK_CHO.cntx_pop()
               ?};
               _wskaznik:=__PN.Wsk(Finish);
               exec('zap_tab','lista_licz',_wskaznik,1);
               exec('sk_cho_zapisz','skladniki_okresowe',_wskaznik);
               &_wskaznik
            ?};

            {? N.OD~1>2003
            || {? __RUB.sys_attr(_kod_nie,1161,N.OD)
               || Suma_OK+=(N.WART:=_Std*N.NG)
               |? __RUB.sys_attr(_kod_nie,1162,N.OD)
               || Suma_MD+=(N.WART:=_Std*N.NG)
               |? __RUB.sys_attr(_kod_nie,1311,N.OD)
               || _Suma_NP+=(N.WART:=_Std*N.NG)
               |? _IF_SW
               || _Suma_SW+=(N.WART:=_Std*N.NG*N.PROC/100$2)
               || _Suma+=(N.WART:=_Std*N.NG)
               ?}
            || _Suma+=(N.WART:=_Std*N.NR)
            ?};
            {? ~_IF_SW
            || N.POTR1:=N.POTR2:=N.POTR3:=N.POTR4:=0
            ?};
            N.put()
         ?};
         VAR_DEL.delete('Data_nie','Wskaznik','Podstawa','WskSkl')
      ?};
      N.next()
   !};
   __PN.Delete()
?};
A_OKRP.cntx_pop();
H.cntx_pop();
N.cntx_pop();

obj_del(godz);
obj_del(pom);

&__KORZ;
&Finish;
&s_pom;
&_licz_mc;
&_przeszer;
: poprawka do ER/WRT/XP/12.41/1707/0043 - wykonanie warunkowe
{? ~_zwoln
|| FUNKCJE.LK_SYS(424,,Suma_OK$2);
   FUNKCJE.LK_SYS(425,,Suma_MD$2);
   FUNKCJE.LK_SYS(426,,_Suma_NP$2);
   FUNKCJE.LK_SYS(4551,,_Suma_SW$2)
?};
&Suma_OK;
&Suma_MD;
_Suma$2

