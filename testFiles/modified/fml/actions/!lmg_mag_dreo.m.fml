:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lmg_mag_dreo.fml
:: Utworzony: 20.01.2016
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Czynność LMG_MAG_DREO - Rejestracja reorganizacji
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# properties=SERVICE
::# permissions=ODDZ,LMG
::# parses=exec('parses_dk_ln','lmg')
::# kind=WE, symbol=ND,      type=_ND,      name=Dokument magazynowy,           required=N
::# kind=WE, symbol=EANN,    type=_EANN,    name=Operacja mobilna,              required=N,     keyref=T
::# kind=WE, symbol=DK_LN,   type=_DK_LN,   name=Reorganizacja,                 required=N,     keyref=T
::# kind=WE, symbol=MG,      type=_MG,      name=Magazyn dla operacji,          required=N,   fml_val="exec('mg','!lmg_mag_dreo')", fml_exp="exec('mg_export','magdok_wspolne',_a)"
::# kind=WE, symbol=OKR,     type=NUMBER,   name=O ile przesunąć datę,          required=N
::# kind=WE, symbol=CZYTW,   type=STRING,   name=Czy uzupełniać terminy ważn.,  required=N,   fml_val="exec('answer2str','params',,,'Czy uzupełniać terminy ważności?')"
::# kind=WE, symbol=FORM,    type=STRING,   name=Formuła,                       required=N
::# kind=WY, symbol=DK_LN,   type=_DK_LN,   name=Reorganizacja,                 required=N,     keyref=T
::# kind=WY, symbol=RESULT,  type=STRING,   name=Rezultat działania,            required=N
::# kind=WY, symbol=GEN_OPE, type=STRING,   name=Grupa operacji,                required=N


_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

_context:=params_get().context;
_service:=_mp.isService();
_proces:=_mp.pathProc();

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_autoakc:=exec('autoAkc','#b__box',_mp,600380,'LMG_MAG_AREO');

{? _proces & ~_service
:: Sprawdzenie parametrów pracy dla czynności startowej
|| {? ST.AR=0 | ST.ODDZ_KOD='' | ST.MAG=null()
   || FUN.info('Ustaw parametry pracy.'@);
      _wyn:=0;
      return()
   |? ST.MAG().SL<>'T'
   || FUN.emsg('W parametrach pracy ustawiono magazyn bez obsługi wymiarów.\n'
               'Niemożliwa rejestracja reorganizacji w magazynie %1.'@[ST.MAG().SYM]);
      _wyn:=0;
      return()
   ?}
?};

{? var_pres('RESULT',_out)<>type_of('') || _out.RESULT:='OK'; _mp.save('OUT','RESULT','OK') ?};

_nd_ref:={? var_pres('ND',_in)=type_of(~~) || null() || _in.ND ?};
_eann:={? var_pres('EANN',_in)=type_of(~~) || null() || _in.EANN ?};
_dk_ln_ref:={? var_pres('DK_LN',_in)=type_of(~~) || null() || _in.DK_LN ?};
{? _dk_ln_ref<>null() || _out.DK_LN:=_dk_ln_ref; _mp.save('OUT','DK_LN',_dk_ln_ref) ?};

_uzuptw:={? var_pres('CZYTW',_in)=type_of(~~) || 'N' || _in.CZYTW ?}='T';

_auto:=(_nd_ref<>null() | _eann<>null() | _dk_ln_ref<>null()) & _mp.isAutoRun();

{? var_pres('FORM',_in)=type_of('') & _in.FORM<>''
|| _akcja:='FORM'
|? _mp.pathTodo()
:: Ustawienie kontekstu wg instancji elementu w procesie
|| {? var_pres('DK_LN',_out)=type_of(null()) & _out.DK_LN
   || 1
   |? _akcja='AUT_REO'
   || 1
   |? ~_mp.isMicro()
   || {? _nd_ref<>null()
      || _akcja:='START_ND'
      |? _eann<>null()
      || _akcja:='START_EANN'
      || _akcja:='START_TODO'
      ?}
   || _mp.error('Brak parametru wyjściowego DK_LN.')
   ?}
?};

:: Wyzwalacz, który po dodaniu nagłówka dokumentu:
:: - add: dodaje rekord kluczowy nagłówka dokumentu
::   del: usuwa rekord kluczowy nagłówka dokumentu
:: - add: zapisuje parametr wyjściowy ND = wskazanie na nagłówek dokumentu
::   del: zapisuje parametr wyjściowy ND = null
_mp.trigRef('DK_LN',,1,,exec('kind_out','#b_port'),'DK_LN');

{? _akcja='FORM'
|| {? var_pres('OKR',_in)<>type_of(0) | _in.OKR<0 || _in.OKR:=0 ?};
   {? ~(var_pres('MG',_in)=type_of(null()) & _in.MG<>null())
   &  ~(var_pres('ND',_in)=type_of(null()) & _in.ND<>null())
   || _mp.error('Brak parametru wejściowego MG lub ND.'@);return() ?};
   ($_in.FORM)(_in,_out,_mp)
|? _akcja='AUT_REO'
|| {? var_pres('OKR',_in)<>type_of(0) | _in.OKR<0 || _in.OKR:=0 ?};
   {? ~(var_pres('MG',_in)=type_of(null()) & _in.MG<>null())
   &  ~(var_pres('ND',_in)=type_of(null()) & _in.ND<>null())
   || _mp.error('Brak parametru wejściowego MG lub ND.'@);return() ?};
   exec('gen_aut_reo','!lmg_mag_dreo',_in,_out,_mp,_autoakc)
|? _service & _eann=null()
||
:: Pętla serwisowa
   {? var_pres('OKR',_in)<>type_of(0) | _in.OKR<0 || _in.OKR:=0 ?};
   _mp.save('IN',_in);

   _continue:=0;
   _gen_ope:='';
   _ctrl:=1;

   {? _mp.loop()=0
   || EANN.cntx_psh();
      EANN.prefix();
      params_set('mp',_mp,'in',_in);
      _gen_ope:=exec('autoOper','!lmg_mag_dreo');
      EANN.cntx_pop()
   ?};
   _mp.done()

|? var_pres('DK_LN',_out)=type_of(null()) & _eann=null()
 & (exec('FindAndGet','#table',DK_LN,_out.DK_LN,,"DK_LN.AKC",'')<>'N' |
    exec('FindAndGet','#table',DK_LN,_out.DK_LN,,"DK_LN.STAT_REJ",'')='Z')
|| _mp.done()
::NUCO - zablokowanie przejścia przez tą ścieżkę akcji serwisowych
|? ~_service & (_akcja='Dołącz'
   | _mp.pathProc()
   | _akcja='START_TODO')
:: Obsługa Dołącz - dołącz w oknie obszaru i start procesu z pulpitu
||
:: Parametr 'akcja' wykorzystywany w formułach przycisków 'Pozycje', 'Zakończ'
   params_set('out',_out,'mp',_mp,'akcja',_akcja);
   params_exec('adddk_ln','magdok_wymiary');

:: Podczytanie parametrów wyjściowych
   _outa:=_mp.load(exec('kind_out','#b_port'));
   {? var_pres('DK_LN',_outa)<>type_of(~~) & _outa.DK_LN
:: Dodano dokument
   ||
::    Ustawienie się na dodanym dokumencie w widoku obszaru
      {? _mp.pathArea() || DK_LN.seek(_outa.DK_LN) ?}
:: Wycofanie czynności bo nie dodano dokumentu
   || _mp.cancel()
   ?}

|? ((_auto | _service) & _eann<>null())
   | (_akcja='Generuj_wg_ope' & _mp.pathArea())
   | (_akcja='START_EANN')
|| _nocomm:=_auto | _service;
   EANN.cntx_psh();
   {? _service & _eann<>null() || exec('openean','open_tab',ref_name(_eann)+3) ?};
   EANN.prefix();
   {? EANN.seek(_eann)
   || _oddz:=1+(ref_name(_eann)+3);
      _data:=(EANN.DATA);
      _rok:=form((_data~1)-2000,,0,'99');
      ST.ODDZ:=_oddz;
      ST.AR:=_data~1;
      ST.AM:=_data~2;
      _msk:=0;
      _stEANN:={? (EANN.name()+2)='__' & EANN.TYP='R' & EANN.STAN='+' & (EANN.IS_R='T' | EANN.IS_M='T')
               || 'Z'
               || EANN.STAN
               ?};

      {? _stEANN='+'
      || {? ~_nocomm || FUN.info('Operacja reorganizacji zrealizowana.'@) ?};
         _out.RESULT:='BŁĄD';
         _mp.save(,_out);
         _mp.done()
      |? _stEANN='A'
      || {? ~_nocomm || FUN.info('Operacja reorganizacji anulowana.'@) ?};
         _out.RESULT:='BŁĄD';
         _mp.save(,_out);
         _mp.done()
      || _stmag:=ST.MAG;
         ST.MAG:=ND.MAG;
         {? _service & DK_LN.name()<>(_oddz+_rok)
         || _msk:=1;
            exec('mag_psh','open_tab');
            exec('mag_open','open_tab',_oddz,_rok)
         ?};
         params_set('out',_out,'mp',_mp,'akcja',_akcja);
         _dk_ln:=params_exec('realeann_reo','magazyn_mob',~_service,{? _auto | _service || 1 || 0 ?},_uzuptw);
:: NUCO - jeśli DL_LN nie zawiera pozycji to go usuwam i zwracam wartość null - nie utworzono dokumentu
         {? DK_LN.count()=0
         || {? DK_LN.del(1)
            || _dk_ln:=null()
            ?}
         ?};
         {? _dk_ln<>null()
         || {? _auto | _service
            || params_set('out',_out,'mp',_mp,'akcja',_akcja);
               params_exec('dk_ln_zakoncz_end','magdok_wspolne',1,_autoakc)
            ?};
            _out.DK_LN:=_dk_ln;
            _mp.save(,_out);
            {? (';ZT'*exec('FindAndGet','#table',DK_LN,_dk_ln,,"STAT_REJ",'N'))>1
            || _mp.done()
            |? _service
            || _mp.done()
:: NUCO - automatyczna reorganizacja w serwisie
::            || _out.RESULT:='BŁĄD';
::               _mp.save(,_out);
::               _mp.done()
            ?}
         |? _dk_ln=null() & _service
         || _out.DK_LN:=null();
            _mp.save(,_out);
            _mp.done()
         ?};
         {? _msk || exec('mag_pop','open_tab') ?};
         ST.MAG:=_stmag
      ?}
   ?};
   EANN.cntx_pop()

|? (_auto & _nd_ref<>null())
   | (_akcja='Generuj_wg_mag' & _mp.pathArea())
   | (_akcja='START_ND')
|| ND.cntx_psh();
   ND.prefix();
   {? ND.seek(_nd_ref)
   || _stmag:=ST.MAG;
      ST.MAG:=ND.MAG;
      params_set('out',_out,'mp',_mp,'akcja',_akcja);
      _dk_ln:=params_exec('genreorg','magdok_wymiary',1,{? _auto || 1 || 0 ?},1,_mp.pathTodo());
      {? _dk_ln<>null()
      || {? _auto
         || params_set('out',_out,'mp',_mp,'akcja',_akcja);
            params_exec('dk_ln_zakoncz_end','magdok_wspolne',1,_autoakc)
         ?};
         _out.DK_LN:=_dk_ln;
         _mp.save(,_out);
         {? (';ZT'*exec('FindAndGet','#table',DK_LN,_dk_ln,,"STAT_REJ",'N'))>1 || _mp.done() ?}
      ?};
      ST.MAG:=_stmag
   ?};
   ND.cntx_pop()

|? _akcja='Popraw'
||
   exec('datadkln','magdok_wymiary');
   _mp.descTodo()

|? _akcja='Pozycje'
|| params_set('out',_out,'mp',_mp,'akcja',_akcja);
   params_exec('pozreorg','magdok_wymiary');
   _mp.descTodo()

|? _mp.pathTodo() | (_dk_ln_ref<>null() & _akcja<>'Zakończ_wer')
|| {? var_pres('DK_LN',_out)=type_of(null())
   || DK_LN.cntx_psh();
      DK_LN.prefix();
      {? DK_LN.seek(_out.DK_LN)
      || ST.MAG:=DK_LN.MG;
         {? _dk_ln_ref<>null() & (_auto | _mp.pathTodo())
         || params_set('out',_out,'mp',_mp,'akcja',_akcja);
            params_exec('dk_ln_zakoncz_end','magdok_wspolne',1,_autoakc)
         |? _dk_ln_ref=null()
         || params_set('out',_out,'mp',_mp,'akcja',_akcja);
            params_exec('pozreorg','magdok_wymiary');
            _mp.descTodo()
         ?};
         {? (';ZT'*exec('FindAndGet','#table',DK_LN,_out.DK_LN,,"STAT_REJ",'N'))>1 || _mp.done() ?}
      ?};
      DK_LN.cntx_pop()
   ?}

|? _akcja='Usuń'
|| {? var_pres('DK_LN',_out)=type_of(null())
:: Uruchomione w procesie
   || _dk_ln:=null();
      DK_LN.cntx_psh();
      _rec:=exec('rec_after_del','#table',DK_LN);
      DK_LN.prefix();
      {? DK_LN.seek(_out.DK_LN)
      ||
         _wyn:=exec('deldk_ln','magdok_wymiary');

         {? ~DK_LN.seek(_out.DK_LN)
::       Wycofuję instancję jeśli nie znaleziono dokumentu
         || _mp.cancel()
         ?};
         _dk_ln:=DK_LN.ref()
      ?};
      DK_LN.cntx_pop();
      {? _wyn=1 & _rec<>null() || DK_LN.seek(_rec) ?};
::    Ustawienie się na kolejnym dokumencie w widoku obszaru
      {? _mp.pathArea() || {? _dk_ln || DK_LN.seek(_dk_ln) ?} ?}
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      exec('deldk_ln','magdok_wymiary',0);

      _mp.done()
   ?}

|? _akcja='Zakończ_wer' & _mp.pathArea()
|| params_set('out',_out,'mp',_mp,'akcja',_akcja);
   params_exec('dk_ln_zakoncz_end','magdok_wspolne',,_autoakc)

|? _akcja='Zakończ_poz'
|| params_set('out',_out,'mp',_mp,'akcja',_akcja);
   params_exec('dk_ln_zakoncz_end','magdok_wspolne',,_autoakc)

|| _mp.error('Nieobsługiwana ścieżka.')
?}
