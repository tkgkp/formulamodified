:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: q%plan_dostaw.fml
:: Utworzony: 21.12.2020
:: Autor: TP
:: Systemy:
::======================================================================================================================
:: Zawartość: Dodatkowe formuły planu dostaw
::======================================================================================================================


:: formuły dla dokumentów - dostawa wewnętrzna w przyjęciu dla dokumentów magazynowych


\mp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Formula bufora planu dostaw - dokumenty magazynowe MP
::       Stan magazynowy w niezaakceptowanych dokumentach przesuniecia miedzymagazynowego
::       Dotyczy tylko dokumentów MP - dla przesunięć magazynowych
::   WE: _a - PD_BUF_D.KOD
::  OLD:
::----------------------------------------------------------------------------------------------------------------------
:: triggery wl.
{? PD_Z.PAR='T'
||
   DK.trig_a('add',$("exec('mp_aadd','q%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   DK.trig_a('put',$("exec('mp_aput','q%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   DK.trig_b('del',$("exec('mp_bdel','q%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wyl.
|? PD_Z.PAR='N'
||
   DK.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   DK.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   DK.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('mp_init','q%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('mp_display','q%plan_dostaw',PD_BUF.REF)
?}


\mp_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: trig_a add - dokument MP
::   WE: _a - PD_BUF_D.KOD
::  OLD:
::----------------------------------------------------------------------------------------------------------------------
{? DK.PLUS='T' & DK.Z<>'T' & DK.N().NDSQL<>''
|| exec('pd_buf_add','plan_dostaw',
      DK.N().D,
      DK.N().T,
      _a,
      DK.N().ODDZ,
      DK.N().MAG,
      DK.M,
      DK.DK_C,
      DK.IL,
      1,
      $DK.ref()
   )
?};
~~


\mp_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: trig_a put - produkt zlecenia
::   WE: _a - PD_BUF_D.KOD
::  OLD:
::----------------------------------------------------------------------------------------------------------------------
{? DK.PLUS='T'
|| ND.cntx_psh();
   ND.use(ref_name(DK.N));
   {? DK.N().NDSQL<>''
   || {? DK.Z='T' & bfld('Z')='N'
      || exec('pd_buf_del','plan_dostaw',_a,$DK.ref())
      |? DK.IL<>bfld('IL') |
         DK.M<>bfld('M') |
         DK.DK_C<>bfld('DK_C') |
         (DK.Z='N' & bfld('Z')='T')
      || exec('pd_buf_add','plan_dostaw',
            DK.N().D,
            DK.N().T,
            _a,
            DK.N().ODDZ,
            DK.N().MAG,
            DK.M,
            DK.DK_C,
            DK.IL,
            1,
            $DK.ref()
         )
      ?}
   ?};
   ND.cntx_pop()
?};
~~


\mp_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: trig_b del - usuwa pozycje zleceniea
::   WE: _a - PD_BUF_D.KOD
::  OLD:
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$DK.ref())


\mp_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: formula startowa - magazyn przyjmie niezaakceptowane
::   WE: _a - PD_BUF_D.KOD
::  OLD:
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

_tab:=sql('select ND.D, ND.T, ND.ODDZ,ND.MAG, DK.M, DK.DK_C, DK.IL, DK.REFERENCE as REF
             from @DK join @ND
            where ND.NDSQL<>\'\' and ND.Z=\'N\' and DK.PLUS=\'T\''
         );
_loop:=_tab.first();
{!
|? _loop
|! _mag:=exec('FindAndGet','#table',MG,_tab.MAG,,"MG.ref",null);
   _m:=exec('FindAndGet','#table',M,_tab.M,,"M.ref",null);
   _dk_c:=exec('FindAndGet','#table',MG,_tab.DK_C,,"DK_C.ref",null);

   exec('pd_buf_add','plan_dostaw',
            _tab.D,
            _tab.T,
            _a,
            _tab.ODDZ,
            _mag,
            _m,
            _dk_c,
            _tab.IL,
            1,
            _tab.REF
         );
   _loop:=_tab.next()
!};
~~


\mp_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: wyświetla informacje dotyczące zapisu w PD_BUF - magazyn przyjmie (niezaakceptowane)
::   WE: _a - $DK.ref()
::  OLD:
::----------------------------------------------------------------------------------------------------------------------
{? _a<>''
|| exec('mag_psh','open_tab');
   exec('open','open_tab',1+((8+_a)+3) ,(8+_a)+2);
            DK.clear();
            {? DK.seek(_a)
            || DK.win_edit('GRED1');
               DK.display()
            ?};
   exec('mag_pop','open_tab')
?};
~~


\mp_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: formuly planu dostaw - mp
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \zl/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='MP - materiał w przyjęciu';
_args.LEG_KOD:='PDA#01#02#ZL';
_args.T:="exec('mp_t','q%plan_dostaw',_a,_b)";
_args.K:="exec('mp_k','q%plan_dostaw',_a,_b)";
:: _args.I:="exec('mp_i','q%plan_dostaw',_a,_b)";
_args.S:="exec('mp_s','q%plan_dostaw',_a,_b)";
_args.V:="exec('mp_v','q%plan_dostaw',_a,_b)";
:: _args.P:="exec('mp_p','q%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\mp_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: magazyn przyjmie - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zl_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\mp_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: magazyn przyjmie - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zl_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\mp_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: magazyn przyjmie - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zl_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\mp_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: magazyn przyjmie - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD:
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;
_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         _nd:=exec('FindAndGet','#table', DK, PD_BUF.REF,,"DK.N",null);
         {? _nd<>null
         || _opis+=exec('FindAndGet','#table', ND, _nd,,"ND.SYM",'')
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='P';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('mp_pl','q%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILP:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I';
         _params1.DEF:=0;
         _params.ICO:=exec('mp_pl','q%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop();
~~


\mp_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: magazyn przyjmie - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zl_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('mp_display','q%plan_dostaw',cur_tab(1,1).REF)


:: formuły planu dostaw: CECHY MATERIAŁÓW


\brak_pl_ogolny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - brak stanu
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \brak/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Cecha stanu - brak';
_args.LEG_KOD:='PDA#01#01#BRAK';
_args.K:="exec('brak_k','%plan_dostaw',_a,_b)";
_args.I:="exec('brak_i','%plan_dostaw',_a,_b)";
:: _args.C1:="exec('brak_c1','%plan_dostaw',_a,_b)";
_args.C2:="exec('brak_c2','%plan_dostaw',_a,_b)";
:: _args.C3:="exec('brak_c3','%plan_dostaw',_a,_b)";
_args.STAT:="exec('brak_stat','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\zlim_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TP [NUCO_TEST]
:: OPIS: Wylicza ilość rezerwacji tymczasowych dla potrzeb ustalenia aktualnej ilości na limicie surowców nielimitowanych
::   WE: wywoływane w kontekście rekordu ZLIM
::   WY: Ilość zarezerwowana tymczasowo (na ekioskach) do wskazanego limitu
::----------------------------------------------------------------------------------------------------------------------
_il_rez:=0;
_zgp:=ZLIM.ZGP;
_m:=ZLIM.KTM;
_mg:=ZLIM.MG;

REZ.cntx_psh();
REZ.use('rezzw__');
_il_rez:=sql('select sum(REZ.ILR) as IL from REZ where REZ.MG=:_a and REZ.REFSQL=:_b and REZ.M=:_c',_mg, _zgp, _m).IL;
REZ.cntx_pop();

_il_rez

