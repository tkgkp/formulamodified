:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: q%event.fml
:: Utworzony: 07.03.2015
:: Autor: TP
::======================================================================================================================
:: Zawartość: Formuły dla zdarzeń warunkowych NUCO
::======================================================================================================================


\czy_rekord_usuniety
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Sprawdza, czy dpowiedni rekord zostałusunięty. (poprzez analizaę $ref() )
::       Do zastosowania w zdarzeniu warunkowym pośrednim, np. po bramie sterowanej zdarzeniami,
::       w celu zabezpieczenie procesu przed usuniętym rekordem.
::       TP [20.14]
::       Przykładowe wywołanie:
::          params_exec('czy_rekord_usuniety','q%event',_a.p01, _a.p02)
::   WE: _a - refSQL [STRING]
::       _b - akronim bazy danych [STRING]
::   WY: 0 - wskazany rekord nadal jest w bazie
::       1 - wskazany rekord został usunięty
::----------------------------------------------------------------------------------------------------------------------

{? var_press('_a')=type_of('') & var_press('_b')=type_of('')
|| {? _a<>'' & _b<>''
   || _sql:='select '+_b+'.REFERENCE from @'+_b+' where '+_b+'.REFERENCE=\':_a\'';
      _tab:=sql(_sql,_a);
      {? _tab.first()
      || _result:=0
      || _result:=1
      ?}
   || _result:=0
   ?}
|| _result:=0
?};

_result


\zamDELorARCHorZRE
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Sprawdza czy dane zamówienie sprzedaży lub wewnętrzne nie zostało przypadkiem w tym czasie
::       usunięte lub zarchiwizowane lub zrealizowane całkowicie
::       Formuła do zastosowania w zdarzeniu warunkowym - przykładowe wywołanie (p01 jest portem typu _ZK_N):
::          exec('zamDELorARCH','%event',_a.p01)
::   WE: _a - ZK_N.ref()
::   WY: 1 - usunięto zamówienie
::       2 - zarchiwizowano zamówienie lub anulowano
::       3 - zamówienie zrealizowane całkowicie
::       0 - zamówienie istnieje
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null())
|| _zk_n:=_a
||
:: Jeżeli w _a przekazane ~~ to znak że zamówienie usunięto i można puścić te zdarzenia dalej
:: bo one prowadzą do zakończenia procesów
   return(1)
?};

_res:=0;
{? _zk_n=null() | exec('FindAndGet','#table',ZK_N,_zk_n,,,null())=null()
|| _res:=1
|? exec('FindAndGet','#table',ZK_N,_zk_n,,"(name()+2)<>'__' | STAT_REJ='A'",0)
|| _res:=2
|? exec('FindAndGet','#table',ZK_N,_zk_n,,"ZK_N.STAN='ZRE'",0)
|| _res:=3
?};
_res


\czy_zlecenie_zamkniete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Oczekiwanie na zamknięcie zlecenia - obsługa zdarzenia warunkowego pośredniego
::       Formuła do zastosowania w zdarzeniu warunkowym - przykładowe wywołanie (p01 jest portem typu $_ZL):
::          exec('czy_zlecenie_zamkniete','q%event',_a.p01)
::   WE: _a - ZL.idadd_value
::   WY: 0 - zlecenie jeszcze nie zamknięte
::       1 - zlecenie jest zamknięte
::       STRING - komunikat błędu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
{? var_press('_a')=type_of('')
|| {? sql('select ZL.STAN from @ZL where ZL.IDADD=\':_a\' and ZL.STAN=\'Z\'',_a).first()
   || _result:=1
   ?}
?};

_result


\czy_idadd_usuniety
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Sprawdza, czy dpowiedni rekord zostałusunięty. (poprzez analizaę IDADD )
::       Do zastosowania w zdarzeniu warunkowym pośrednim, np. po bramie sterowanej zdarzeniami,
::       w celu zabezpieczenie procesu przed usuniętym rekordem.
::       TP [20.14]
::       Przykładowe wywołanie:
::          params_exec('czy_rekord_usuniety','q%event',_a.p01, _a.p02)
::   WE: _a - IDADD [STRING]
::       _b - akronim bazy danych [STRING]
::   WY: 0 - wskazany rekord nadal jest w bazie
::       1 - wskazany rekord został usunięty
::----------------------------------------------------------------------------------------------------------------------
_result:=0;

{? var_press('_a')=type_of('') & var_press('_b')=type_of('')
|| {? _a<>'' & _b<>''
   || _idadd:=_b+'.'+($(_b+'.idadd_acr()'))();
      {? _idadd<>(_b+'.')
      || _sql:='select '+_idadd+' from @'+_b+' where '+_idadd+'=\':_a\'';
         _tab:=sql(_sql,_a);
         {? ~_tab.first()
         || _result:=1
         ?}
      ?}
   ?}
?};

_result


\czy_odrzucony
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TP [NUCO]
:: OPIS: Sprawdza czy EDOKUM jest w statusie odrzucony i nie ma zadań dla użytkowników
::   WE: _a - EDOKUM.ref,
::       _b - B_PREL.uidref,(STRING)
::   WY: 0 - są zadania ze statusem innym niż odrzucony, 1 - bez zadań, lub wszystkie mają status odrzucony
::----------------------------------------------------------------------------------------------------------------------
_resulut:=sql('select * from @EDOKOS where EDOKUM=:_a and B_PREL=\':_b\' and STATUS<>\'O\'',_a,_b).size()=0;

_resulut


\dostDELorARCH
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TP [NUCO_2226]
:: OPIS: Sprawdza czy zamówienie dostawy zostało usunięte bądź zarchiwizowane.
::       Formuła do zastosowania w zdarzeniu warunkowym - przykładowe wywołanie (p01 jest portem typu _ZD_NAG):
::          exec('dostDELorARCH','q%event',_a.p01)
::   WE:  _a - ZD_NAG.ref()
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null())
|| _zd_nag:=_a
||
:: Jeżeli w _a przekazane ~~ to znak że zamówienie usunięto i można puścić te zdarzenia dalej
:: bo one prowadzą do zakończenia procesów
   return(1)
?};

:: Zamówienie przeniesiono do archiwum lub nie można go odnaleźć więc puszczam dalej
exec('FindAndGet','#table',ZD_NAG,_zd_nag,,"(name()+2)='__'",1)


\czyNDakcept
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TP [NUCO_2226]
:: OPIS: Formuła ma sprawdza czy dokument magazynowy został zaakceptowany w innym procesie jeśli tak to idzie dalej aby
::       zakończyć proces. Jeśli dokument został usunięty formuła również idzie dalej:
::       exec('czyNDakcept','q%event',_a.p01)
::   WE: _a - ND.ref()
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null())
|| _nd:=_a
||
:: Jeżeli w _a przekazane ~~ to znak że dokument usunięto i można puścić te zdarzenia dalej
:: bo one prowadzą do zakończenia procesów
   return(1)
?};

:: Zamówienie przeniesiono do archiwum lub nie można go odnaleźć więc puszczam dalej
exec('FindAndGet','#table',ND,_nd,,"@.ND.STAT_REJ='T'",1)