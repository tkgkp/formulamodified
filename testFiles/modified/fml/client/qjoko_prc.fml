:!UTF-8


\prc
::----------------------------------------------------------------------------------------------------------------------
::  UTW:
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_mag_sym:=',';
ODDZ.first();
{? ST.ODDZ='' || ST.ODDZ:=ODDZ.KOD ?};

SM.cntx_psh();
ZD_POZ.cntx_psh();
ZDP_POZ.cntx_psh();
ZD_NAG.cntx_psh();
ZDP_NAG.cntx_psh();
ZK_P.cntx_psh();
ZK_N.cntx_psh();

ZD_POZ.use('zdpozw__');
ZDP_POZ.use('zdptpw__');
ZD_NAG.use('zdnagw__');
ZDP_NAG.use('zdptnw__');
ZK_P.use('zkpozw__');
ZK_N.use('zknagw__');

{? SM.use('stm__' + ODDZ.KOD + 'zb') & _tab.first()
|| _tab_zk:=sql('
      select
         M.KTM, SUM(ZK_P.ILP) as Z
      from
         ZK_P
         join M using (ZK_P.M,M.reference)
         left join ZK_N using (ZK_P.N,ZK_N.reference)
         left join TYPYZAM using (ZK_N.T,TYPYZAM.reference)
      where
         M.KTM in (select KTM from :_a) and ZK_P.A=\'A\' and ZK_P.TOP=1 and TYPYZAM.R=\'Z\'
      group by
         M.KTM
      order by
         1,1',
      _tab);
   _mag_sym+='FSU,KMO,KSU,MAP,MASW,MAT,MMO,MSU,NPU,POL1,POL2,POL3,POL4,SUR,SUR2,SUR4,TOW,WOB,WYR,ZAO,ZWP';
   _mag_sym+=',';
   SM.index(SM.ndx_tmp('',1,'M','KTM',,'M','KTM',));
   {!
   |? SM.prefix(_tab.KTM,_tab.KTM);
      {? SM.first()
      || {!
         |? {? _mag_sym*(',%1,'[SM.MAG().SYM])
            || _tab.STAN+=(SM.SD+SM.S_O+SM.S_N+exec('rezerwacje_tymczasowe','qjoko_prc',SM.MAG,SM.M));
               _tab.NIEZGODNE+=(SM.S_O+SM.S_N);
               {? var_pres('_il_p')>100 || obj_del(_il_p) ?};
               _il_p:=exec('il_p','qjoko_prc',SM.M,SM.MAG);
               _tab.W_PRZYJ+=_il_p.in;
               _tab.W_WYDAN+=SM.W+=_il_p.out;
               1
            ?};
            SM.next()
         !}
      ?};

      {? _tab_zk.find_key(_tab.KTM,_tab.KTM)
      || _tab.ZAM_SPZ:=_tab_zk.Z
      ?};
      _tab.put();
      _tab.next()
   !};
   SM.ndx_drop()
?};

M.cntx_psh();
M.clear();
M.index('MATKTM');
{? _tab.first()
|| {!
   |? M.prefix();
      {? M.find_key(_tab.KTM,_tab.KTM)
      || _tab.ZAMOWION:=exec('il_zam_bez_akce','qjoko');
         _tab.W_DRODZE:=exec('w_dr_m','qjoko',M.ref);
         _tab.W_DRODZP:=exec('w_dr_mp','qjoko',M.ref);
         _tab.put()
      ?};
      _tab.next()
   !}
?};
M.cntx_pop();
SM.ndx_drop();
SM.cntx_pop();

ZK_N.cntx_pop();
ZK_P.cntx_pop();
ZD_POZ.cntx_pop();
ZDP_POZ.cntx_pop();
ZD_NAG.cntx_pop();
ZDP_NAG.cntx_pop();

_tab.clear();
_tab.first();
~~


\prca
::----------------------------------------------------------------------------------------------------------------------
::  UTW:
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab := _a;
ZD_POZ.cntx_psh();
ZDP_POZ.cntx_psh();
ZD_NAG.cntx_psh();
ZDP_NAG.cntx_psh();
ZD_POZ.use('zdpozw__');
ZDP_POZ.use('zdptpw__');
ZD_NAG.use('zdnagw__');
ZDP_NAG.use('zdptnw__');
SM.cntx_psh();
ODDZ.first();
{? ST.ODDZ='' || ODDZ.KOD ?};
SM.use('stm__' + ODDZ.KOD + 'zb');
_ndx := SM.ndx_tmp('', 1,'MAG','SYM',0, 'M', 'KTM',0);
SM.index( _ndx );
{?  _tab.first()
||
   {!|?

      _tab.WYR2_DOS:=0;
      _tab.WYR2_PRZ:=0;

      _tab.WYR1_DOS:=0;
      _tab.WYR1_DRO:=0;
      _tab.WYR1_DRP:=0;

      _tab.ZAO2_DOS:=0;
      _tab.ZAO2_PRZ:=0;

      _tab.ZAO1_DOS:=0;
      _tab.ZAO1_DRO:=0;
      _tab.ZAO1_DRP:=0;

      _tab.SUR2_DOS:=0;
      _tab.SUR2_PRZ:=0;

      _tab.SUR1_DOS:=0;
      _tab.SUR1_DRO:=0;
      _tab.SUR1_DRP:=0;

      _tab.POL2_DOS:=0;
      _tab.POL2_PRZ:=0;

      _tab.POL1_DOS:=0;
      _tab.POL1_DRO:=0;
      _tab.POL1_DRP:=0;

      SM.prefix('WYR2',_tab.KTM);
      {? SM.first()   || {!|?   _tab.WYR2_DOS+=SM.SD; _tab.WYR2_PRZ+=SM.WP; SM.next() !} ?};

      SM.prefix('WYR1',_tab.KTM);
      {? SM.first()   || {!|?   _tab.WYR1_DOS+=SM.SD; _tab.WYR1_DRO+=(exec('mw_dr_m','qjoko',SM.M,SM.MAG));
                                                      _tab.WYR1_DRP+=(exec('mw_dr_mp','qjoko',SM.M,SM.MAG));
                                                      SM.next() !} ?};

      SM.prefix('ZAO2',_tab.KTM );
      {? SM.first()   || {!|?   _tab.ZAO2_DOS+=SM.SD; _tab.ZAO2_PRZ+=SM.WP; SM.next() !} ?};

      SM.prefix('ZAO1',_tab.KTM);
      {? SM.first()   || {!|?   _tab.ZAO1_DOS+=SM.SD; _tab.ZAO1_DRO+=(exec('mw_dr_m','qjoko',SM.M,SM.MAG));
                                                      _tab.ZAO1_DRP+=(exec('mw_dr_mp','qjoko',SM.M,SM.MAG));
                                                     SM.next() !} ?};

      SM.prefix('SUR2',_tab.KTM );
      {? SM.first()   || {!|?   _tab.SUR2_DOS+=SM.SD; _tab.SUR2_PRZ+=SM.WP; SM.next() !} ?};

      SM.prefix('SUR1',_tab.KTM );
      {? SM.first()   || {!|?   _tab.SUR1_DOS+=SM.SD; _tab.SUR1_DRO+=(exec('mw_dr_m','qjoko',SM.M,SM.MAG));
                                                      _tab.SUR1_DRP+=(exec('mw_dr_mp','qjoko',SM.M,SM.MAG));
                                                     SM.next() !} ?};

      SM.prefix('POL2',_tab.KTM );
      {? SM.first()   || {!|?   _tab.POL2_DOS+=SM.SD; _tab.POL2_PRZ+=SM.WP; SM.next() !} ?};

      SM.prefix('POL1',_tab.KTM );
      {? SM.first()   || {!|?   _tab.POL1_DOS+=SM.SD; _tab.POL1_DRO+=(exec('mw_dr_m','qjoko',SM.M,SM.MAG));
                                                      _tab.POL1_DRP+=(exec('mw_dr_mp','qjoko',SM.M,SM.MAG));
                                                     SM.next() !} ?};


       _tab.put;

      _tab.next()
   !}
?};
{? _tab.first ||
  {!|? {? _tab.WYR2_DOS=0 &
          _tab.WYR2_PRZ=0 &
          _tab.WYR1_DOS=0 &
          _tab.WYR1_DRO=0 &
          _tab.WYR1_DRP=0 &
          _tab.ZAO2_DOS=0 &
          _tab.ZAO2_PRZ=0 &
          _tab.ZAO1_DOS=0 &
          _tab.ZAO1_DRO=0 &
          _tab.ZAO1_DRP=0 &
          _tab.SUR2_DOS=0 &
          _tab.SUR2_PRZ=0 &
          _tab.SUR1_DOS=0 &
          _tab.SUR1_DRO=0 &
          _tab.SUR1_DRP=0 &
          _tab.POL2_DOS=0 &
          _tab.POL2_PRZ=0 &
          _tab.POL1_DOS=0 &
          _tab.POL1_DRO=0 &
          _tab.POL1_DRP=0
          || _tab.del
          || _tab.next ?} !}
?};
SM.ndx_drop(&_ndx);
SM.cntx_pop();

ZD_POZ.cntx_pop();
ZDP_POZ.cntx_pop();
ZD_NAG.cntx_pop();
ZDP_NAG.cntx_pop();
_tab.clear();
_tab.first();
_tab.win_sel(_tab.mk_sel(,,1));
_tab.select();
~~


\il_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Albercik 2017
:: OPIS: wylicza ilość w przyjęciu
::   WE: _a - M.ref
::       _b - MG.ref
::   WY: _il_wp.in, _il_wp.out
::----------------------------------------------------------------------------------------------------------------------
_ktm:=_a;
_mag:=_b;
_il_wp:=obj_new('in','out');
{! _ii:=1 .. obj_len(_il_wp)
|! _il_wp[_ii]:=0
!};

DK.cntx_psh();
ND.cntx_psh();
OKR.cntx_psh;
OKR.index('MC');
OKR.prefix(1);
{? OKR.first()
|| {!
   |? _oddzial:={? ST.ODDZ='' || 'w' || ST.ODDZ ?};
      DK.use('dokma'+_oddzial+($OKR.ROK+2));
      ND.use('nagdo'+_oddzial+($OKR.ROK+2));

::      DK.index('DOKPLUS');
::      DK.prefix(_mag,_ktm,'T','N');
      DK.index('DOKMAT');
      DK.prefix('N',_ktm,_mag);
      {? DK.first()
      || {!
         |? {? (DK.N().TYP().Z='T' & DK.PLUS='T') | TYPYDOK.T='MP'
            || _il_wp.in+=DK.IL
            |? DK.N().TYP().T='MW'
            || _il_wp.out+=DK.IL
            ?};
            DK.next()
         !}
      ?};
      OKR.next()
   !}
?};
OKR.cntx_pop();
DK.cntx_pop();
ND.cntx_pop();
_il_wp


\rezerwacje_tymczasowe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [Merit NUCO]
:: OPIS: Rezewacje tymczasowe materiału w magazynie.
::   WE: _a [REFERENCE] - wskazanie na magazyn.
::       _b [REFERENCE] - wskazanie na materiał.
::   WY: _result [REAL] - ilość materiału w magazynie zarezerwowana tymczasowo.
:: MOD: Sitek - ograniczenie rezerwacji tylko do typu 'T'
::----------------------------------------------------------------------------------------------------------------------
_mat:=_a;
_mag:=_b;
_result:=0;

REZ.cntx_psh();
REZ.use('%1%2__'[REZ.name()-3,ST.ODDZ]);
REZ.index('MG_M_T');
REZ.prefix(_a,_b,'T');

{? REZ.first() & REZ.TYP='T'
|| {!
   |? _result+=REZ.ILR;
      REZ.next()
   !}
?};

REZ.cntx_pop();
_result



\prc_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TP [NUCO_TEST]
:: OPIS: Optymalizacja procedury prc z pliku qjoko_prc.fml
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_mag_sym:=',';
ODDZ.first();
{? ST.ODDZ='' || ST.ODDZ:=ODDZ.KOD ?};

SM.cntx_psh();
ZD_POZ.cntx_psh();
ZDP_POZ.cntx_psh();
ZD_NAG.cntx_psh();
ZDP_NAG.cntx_psh();
ZK_P.cntx_psh();
ZK_N.cntx_psh();
REZ.cntx_psh();
M.cntx_psh();
M.index('MATKTM'); M.prefix();

REZ.use('%1%2__'[REZ.name()-3,ST.ODDZ]);
ZD_POZ.use('zdpozw__');
ZDP_POZ.use('zdptpw__');
ZD_NAG.use('zdnagw__');
ZDP_NAG.use('zdptnw__');
ZK_P.use('zkpozw__');
ZK_N.use('zknagw__');

{? SM.use('stm__' + ODDZ.KOD + 'zb') & _tab.first()
|| _tab_zk:=sql('
      select
         M.KTM, SUM(ZK_P.ILP) as Z
      from
         ZK_P
         join M using (ZK_P.M,M.reference)
         left join ZK_N using (ZK_P.N,ZK_N.reference)
         left join TYPYZAM using (ZK_N.T,TYPYZAM.reference)
      where
         M.KTM in (select KTM from :_a) and ZK_P.A=\'A\' and ZK_P.TOP=1 and TYPYZAM.R=\'Z\'
      group by
         M.KTM
      order by
         1,1',
      _tab);
::   _mag_sym+='FSU,KMO,KSU,MAP,MASW,MAT,MMO,MSU,NPU,POL1,POL2,POL3,POL4,SUR,SUR2,SUR4,TOW,WOB,WYR,ZAO,ZWP';
::   _mag_sym+=',';
::  Baza ze zagregowanymi stanami dla magazynów nie X
   _stany:=sql('select M.KTM,
                       sum(SM.SD+SM.S_O+SM.S_N) as S_S,
                       sum(SM.S) as S,
                       sum(SM.S_O+SM.S_N) as S_NO,
                       sum(SM.W) as W
                  from SM join M join MG
                 where MG.SYM not like \'X%\'
              group by M.KTM
              order by 1,1');
::  Baza ze zagreogowanymi rezerwacjami
::  MOD: Sitek - tylko rezerwacje typu T
   _rezerw:=sql('select M.KTM,
                        sum(REZ.ILR) as SILR
                   from REZ join M join MG
                  where MG.SYM not like \'X%\'
                  and REZ.TYP like \'T\'
               group by M.KTM
               order by 1,1');
   _zamowiono:=sql('select M.KTM,
                           sum(ZD_POZ.IL-ZD_POZ.IL_ZRE) as ZAM
                           from ZD_POZ join ZD_NAG using(ZD_POZ.ZD_NAG,ZD_NAG.REFERENCE)
                                       join M using (ZD_POZ.M,M.REFERENCE)
                           where ZD_NAG.STAN in (\'O\',\'N\')
                           group by M.KTM
                           order by 1,1');
   _wdrodze:=sql('select M.KTM,
                         sum(ZD_POZ.IL_POZ) as ZAM
                         from ZD_POZ join ZD_NAG using(ZD_POZ.ZD_NAG,ZD_NAG.REFERENCE)
                                     join M using (ZD_POZ.M,M.REFERENCE)
                         where ZD_NAG.STAN in (\'A\',\'C\')
                         group by M.KTM
                         order by 1,1');
   _wprzyj:=sql('select M.KTM,
                        sum(DK.IL) as SIL
                        from @DK join @ND using (DK.N,ND.REFERENCE)
                                 join TYPYDOK using (ND.TYP, TYPYDOK.REFERENCE)
                                 join M using(DK.M,M.REFERENCE)
                        where DK.Z=\'N\' and (( TYPYDOK.Z=\'T\' and DK.PLUS=\'T\') or TYPYDOK.T=\'MP\')
                        group by M.KTM
                        order by 1,1');
   _wwydaniu:=sql('select M.KTM,
                        sum(DK.IL) as SIL
                        from @DK join @ND using (DK.N,ND.REFERENCE)
                                 join TYPYDOK using (ND.TYP, TYPYDOK.REFERENCE)
                                 join M using(DK.M,M.REFERENCE)
                        where DK.Z=\'N\' and TYPYDOK.T=\'MW\'
                        group by M.KTM
                        order by 1,1');
   {!
   |? M.find_key(_tab.KTM,_tab.KTM);
      {? _stany.find_key(_tab.KTM,_tab.KTM)
      || _tab.STAN:=_stany.S_S;
         _tab.NIEZGODNE:=_stany.S_NO;
         _tab.W_WYDAN:=_stany.W
      ?};
      {? _rezerw.find_key(_tab.KTM,_tab.KTM)
      || _tab.STAN+=_rezerw.SILR
      ?};
      {? _tab_zk.find_key(_tab.KTM,_tab.KTM)
      || _tab.ZAM_SPZ:=_tab_zk.Z
      ?};
      {? _wprzyj.find_key(_tab.KTM,_tab.KTM)
      || _tab.W_PRZYJ:=_wprzyj.SIL
      ?};
      {? _wwydaniu.find_key(_tab.KTM,_tab.KTM)
      || _tab.W_WYDAN+=_wwydaniu.SIL
      ?};
      {? _zamowiono.find_key(_tab.KTM,_tab.KTM)
      || _tab.ZAMOWION:=_zamowiono.ZAM
      ?};
      {? _wdrodze.find_key(_tab.KTM,_tab.KTM)
      || _tab.W_DRODZE:=_wdrodze.ZAM
      ?};
      _tab.W_DRODZP:=exec('w_dr_mp','qjoko',M.ref);

      _tab.put();
      _tab.next()
   !}
?};

M.cntx_pop();
SM.ndx_drop();
SM.cntx_pop();
REZ.cntx_pop();
ZK_N.cntx_pop();
ZK_P.cntx_pop();
ZD_POZ.cntx_pop();
ZDP_POZ.cntx_pop();
ZD_NAG.cntx_pop();
ZDP_NAG.cntx_pop();

_tab.clear();
_tab.first();
~~