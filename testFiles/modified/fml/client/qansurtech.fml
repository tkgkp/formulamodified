:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: Nowy1.fml
:: Utworzony: 13.10.2022
:: Autor: PeKa
:: Systemy:
::======================================================================================================================
:: Zawartość: Analiza surowcow
::======================================================================================================================

\zkp_analiza_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Analiza dostępności materiałów w czasie - akcja 'po' dla tabeli ZK_P
::  OLD: \zkp_analiza_a/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
~~


\zkp_analiza_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Analiza dostępności materiałów w czasie - akcja 'przed grupą' dla tabeli ZK_P
::  OLD: \zkp_analiza_bg/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('is_pdbuf','plan_dostaw')
|| exec('env_create','plan_dostaw')
|| 0
?}


\zkp_analiza_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Analiza dostępności materiałów w czasie - akcja 'po grupie' dla tabeli ZK_P
::  OLD: \zkp_analiza_ag/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('an_select','plan_dostaw');
exec('env_delete','plan_dostaw')


\zkp_analizas_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Analiza dostępności surowców w czasie - akcja 'przed' dla tabeli ZK_P;
::       analizie podlegają tylko surowce produktów w ilości nie zleconej
::----------------------------------------------------------------------------------------------------------------------
{? ZK_P.sel_size()=0
|| exec('env_create','tech_structure',1);
   _can_continue:=exec('edit_params','tech_structure',0,0,1)
|| return()
?};
_env:=__ENV_STR;
::  Rozpoczynam pętle
_exit:=1;
{!
|?
   {? var_pres('TAB',_env.STRUCT)>0 || _env.STRUCT.TAB.erase() ?};
   {? var_pres('ELEMENT',_env.STRUCT)>0 || _env.STRUCT.ELEMENT.erase() ?};
   {? var_pres('TAB',_env.CHECK) > 0 || _env.CHECK.TAB.erase() ?};

   {? _can_continue>0 & ZK_P.M().RODZ='U'
   || _env.KOMM.add('%1 — pozycje usługowe nie są analizowane.'@[exec('record','#to_string',ZK_P.ref())])
   |? _can_continue>0 & ZK_P.ILP>0
   ||
      {? var_pres('_args') > 0 || obj_del(_args) ?};
      _args:=exec('add_a','tech_structure');
      _args.M:=ZK_P.M;
      _args.IL:=ZK_P.ILP;
      _args.DW:=ZK_P.PL_DATA;
      _args.TW:=ZK_P.PL_TIME;
      _tktl:=exec('dflt_ktl','tech_prod',ZK_P.M,1,1);
      _added:=0;
      {? (var_pres('TAB_ZAM',_env.CHECK)) >0 & _env.CHECK.TAB_ZAM.find_tab(,'TMAT',,'=',$ZK_P.ref())
      || _tktl:=exec('FindAndGet','#table',TKTL,_env.CHECK.TAB_ZAM.KTLW,,,null())
      ||
         {? _tktl=null()
         || {? ZK_P.M().R<>'S' &  ZK_P.M().R<>'H'
            || exec('tktl_chck_add','tech_structure',$_tktl,$ZK_P.ref(),'Brak karty domyślnej'@,ZK_P.M().N,'','',$ZK_P.M,,
               M.KTM,ZK_P.N().SYM+' poz. '+ $ZK_P.POZ);
               _added:=1
            ?}
         |? ~exec('tktl_act','tech_head',,$_tktl)
         || exec('tktl_chck_add','tech_structure',$_tktl,$ZK_P.ref(),'Karta domyślna nieaktualna'@,ZK_P.M().N,
            exec('FindAndGet','#table',TKTL,_tktl,,'NRK','N'),exec('FindAndGet','#table',TKTL,_tktl,,'WER','N')
            ,$ZK_P.M,,M.KTM,ZK_P.N().SYM+' poz. '+ $ZK_P.POZ);
            _added:=1
         ?}
      ?};
      _args.TKTL:=_tktl;
      _args.SRC_REF:=$ZK_P.ref();
      exec('add','tech_structure',_args);
      {? _added=0 || exec('expand','tech_structure',_args.ref) ?}
   || _env.KOMM.add('%1 — cała ilość została zrealizowana.'@[exec('record','#to_string',ZK_P.ref())])
   ?};

:: Wyświetlam tabelę z problemami i uzupełniam tabelę zamienników
   _ok:=1;
   {? _env.CHECK.TAB.size()>0
   || _env.CHECK.TAB.win_sel(_env.CHECK.WERA);
      _ok:=exec('tktl_chck_sel','tech_structure');
      {? _ok=0 || _exit:=0 ?}
   || _exit:=0
   ?};
_exit
!};
::Koniec petli

{? ZK_P.sel_size()=0 & _can_continue>0 & _ok
|| exec('cumulate','tech_structure');
:: Ddatkowa akcja i menu do okienka struktura wyrobu - Tabelaryczna struktura wyrobu
   _wers:=_env.STRUCT.WERS;
   _tab:=_env.STRUCT.TAB;
   _tab.win_act(_wers,,'Formuła','Struktura wyro&bu'@@,,'Struktura wyrobu w formie tabeli - do 3 poziomu'@,
      "params_exec('zkp_struktura','qansurtech')",,,0,,,'B');
   exec('select','tech_structure')
?};
~~


\zkp_analizas_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Analiza dostępności surowców w czasie - akcja 'po' dla tabeli ZK_P
::----------------------------------------------------------------------------------------------------------------------
~~


\zkp_analizas_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Analiza dostępności surowców w czasie - akcja 'przed grupą' dla tabeli ZK_P
::----------------------------------------------------------------------------------------------------------------------
exec('env_create','tech_structure',1);
exec('edit_params','tech_structure',0,0,1);
_can_continue:=1;
_env:=__ENV_STR;
::  Rozpoczynam pętle
_exit:=1;
{!
|?
   {? var_pres('TAB',_env.STRUCT)>0 || _env.STRUCT.TAB.erase() ?};
   {? var_pres('ELEMENT',_env.STRUCT)>0 || _env.STRUCT.ELEMENT.erase() ?};
   {? var_pres('TAB',_env.CHECK)>0 || _env.CHECK.TAB.erase() ?};

   {? _can_continue>0
   ||
      {? var_pres('_selected')>0 || obj_del(_selected) ?};
      _selected:=ZK_P.sel_aget();
      {? _selected.first()
      || {!
         |? ZK_P.cntx_psh();
            ZK_P.prefix();
            {? ZK_P.seek(_selected.REF) & ZK_P.M().RODZ='U'
            || _env.KOMM.add('%1 — pozycje usługowe nie są analizowane.'@[exec('record','#to_string',ZK_P.ref())])
            |? ZK_P.seek(_selected.REF) & ZK_P.ILP>0
            ||
               {? var_pres('_args') > 0 || obj_del(_args) ?};
               _args:=exec('add_a','tech_structure');
               _args.M:=ZK_P.M;
               _args.IL:=ZK_P.ILP;
               _args.DW:=ZK_P.PL_DATA;
               _args.TW:=ZK_P.PL_TIME;
               _tktl:=exec('dflt_ktl','tech_prod',ZK_P.M,1,1);
               _added:=0;
               {? (var_pres('TAB_ZAM',_env.CHECK)) >0 & _env.CHECK.TAB_ZAM.find_tab(,'TMAT',,'=',$ZK_P.ref())
               || _tktl:=exec('FindAndGet','#table',TKTL,_env.CHECK.TAB_ZAM.KTLW,,,null())
               ||
                  {? _tktl=null()
                  || {? ZK_P.M().R<>'S' &  ZK_P.M().R<>'H'
                     || exec('tktl_chck_add','tech_structure',$_tktl,$ZK_P.ref(),'Brak karty domyślnej'@,ZK_P.M().N,'','',$ZK_P.M,,
                        M.KTM,ZK_P.N().SYM+' poz. '+ $ZK_P.POZ);
                        _added:=1
                     ?}
                  |? ~exec('tktl_act','tech_head',,$_tktl)
                  || exec('tktl_chck_add','tech_structure',$_tktl,$ZK_P.ref(),'Karta domyślna nieaktualna'@,ZK_P.M().N,
                     exec('FindAndGet','#table',TKTL,_tktl,,'NRK','N'),exec('FindAndGet','#table',TKTL,_tktl,,'WER','N')
                     ,$ZK_P.M,,M.KTM,ZK_P.N().SYM+' poz. '+ $ZK_P.POZ);
                     _added:=1
                  ?}
               ?};
               _args.TKTL:=_tktl;
               _args.SRC_REF:=$ZK_P.ref();
               exec('add','tech_structure',_args);
               {? _added=0 || exec('expand','tech_structure',_args.ref) ?}
            || _env.KOMM.add('%1 — cała ilość została zrealizowana.'@[exec('record','#to_string',ZK_P.ref())])
            ?};
            ZK_P.cntx_pop();
            _selected.next()
         !}
      ?}
   ?};

:: Wyświetlam tabelę z problemami i uzupełniam tabelę zamienników
   _ok:=1;
   {? _env.CHECK.TAB.size()>0
   || _env.CHECK.TAB.win_sel(_env.CHECK.WERA);
      _ok:=exec('tktl_chck_sel','tech_structure');
      {? _ok=0 || _exit:=0 ?}
   || _exit:=0
   ?};
_exit
!};
::Koniec petli
{? _ok
|| exec('cumulate','tech_structure');
:: Ddatkowa akcja i menu do okienka struktura wyrobu - Tabelaryczna struktura wyrobu
   _wers:=_env.STRUCT.WERS;
   _tab:=_env.STRUCT.TAB;
   _tab.win_act(_wers,,'Formuła','Struktura wyro&bu'@@,,'Struktura wyrobu w formie tabeli - do 3 poziomu'@,
      "params_exec('zkp_struktura','qansurtech')",,,0,,,'B');

   exec('select','tech_structure')
?};
~~


\zkp_analizas_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Analiza dostępności surowców w czasie - akcja 'po grupie' dla tabeli ZK_P
::----------------------------------------------------------------------------------------------------------------------
~~


\import_ofp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PeKa
:: OPIS: Import pozycji ofert sprzedazy z pliku csv
::----------------------------------------------------------------------------------------------------------------------
{? OFE.STAT_REJ<>'T' || 1  || FUN.info('Import możliwy dla oferty bez akceptacji.'); return(1) ?};
VAR_DEL.delete('__p','IMPORT');
_plik:=_wyn:='';

__p:=tab_tmp(1
             ,'KTM'   ,'STRING[50]' ,'INDEKS'
             ,'IL'    ,'REAL'       ,'ILOŚĆ'
            );

_win:=__p.mk_sel('Dane do importu','P',1,,,,,,'U','T');
__p.win_sel(_win);
__p.win_act(_win, ,'Usuń',,,,,,,1);
__p.win_act(_win, ,'Szukaj');

OFE.cntx_psh;
OFP.cntx_psh;


_odp:=FUN.ask('Czy rozpocząć import?');

{? _odp
|| _plik:=myDIALOG.OpenFile('Plik importu (*.csv)|*.csv|Wszystkie pliki (*.*)|*.*','','')
?};

{? _plik<>''
||
   IMPORT:=obj_new(@.CLASS.IMPORT);
   _file:=IMPORT.open('@'+_plik, ';', 0);
   {? _file
   ||
      {!
      |?
         _jest:=IMPORT.get();
         {? _jest
         ||
            __p.blank();
            {? IMPORT.fld(1)<>'[KTM]'
            ||
               __p.KTM:=STR.gsub(IMPORT.fld(1),' ','');
               __p.IL:=#(STR.gsub(STR.gsub(IMPORT.fld(2),',','.'),' ',''));
               __p.add(1)
            ?}
         ?};
         _jest<>0
      !}
   ?};
   obj_del(IMPORT);
   {? __p.first
   ||
:: podglad danych przed importem
::      __p.select();
      {!
      |? {? _mat:=exec('FindInSet','#table','M','MATKTM',__p.KTM,__p.KTM); _mat<>null
         ||
            OFP.blank();
            OFP.OFE:=OFE.ref();
            OFP.M:=_mat;
            OFP.IL:=__p.IL;
            OFP.clear;
            OFP.add(1)
         ?};
         _next:=__p.next;
         {? _next=0
         ||
            _wyn:='Import danych zakończony.'
         ?};
         _next
      !}
   || _wyn:='Plik nie zawiera danych, które można zaimportować.\nImport danych niemożliwy.'
   ?}
|| _wyn:='Nie wskazano pliku do importu.\nImport danych niemożliwy.'
?};
OFE.cntx_pop;
OFP.cntx_pop;
{? _wyn<>'' || FUN.emsg(_wyn) ?};
1


\import_zkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PeKa
:: OPIS: Import pozycji zamowien z pliku csv
::----------------------------------------------------------------------------------------------------------------------
{? ZK_N.STAT_REJ<>'T' || 1  || FUN.info('Import możliwy dla zamówienia bez akcetacji.'); return(1) ?};
VAR_DEL.delete('__p','IMPORT');
_plik:=_wyn:='';

__p:=tab_tmp(1
             ,'KTM'   ,'STRING[50]' ,'INDEKS'
             ,'IL'    ,'REAL'       ,'ILOŚĆ'
            );

_win:=__p.mk_sel('Dane do importu','P',1,,,,,,'U','T');
__p.win_sel(_win);
__p.win_act(_win, ,'Usuń',,,,,,,1);
__p.win_act(_win, ,'Szukaj');

ZK_N.cntx_psh;
ZK_P.cntx_psh;


_odp:=FUN.ask('Czy rozpocząć import?');

{? _odp
|| _plik:=myDIALOG.OpenFile('Plik importu (*.csv)|*.csv|Wszystkie pliki (*.*)|*.*','','')
?};

{? _plik<>''
||
   IMPORT:=obj_new(@.CLASS.IMPORT);
   _file:=IMPORT.open('@'+_plik, ';', 0);
   {? _file
   ||
      {!
      |?
         _jest:=IMPORT.get();
         {? _jest
         ||
            __p.blank();
            {? IMPORT.fld(1)<>'[KTM]'
            ||
               __p.KTM:=STR.gsub(IMPORT.fld(1),' ','');
               __p.IL:=#(STR.gsub(STR.gsub(IMPORT.fld(2),',','.'),' ',''));
               __p.add(1)
            ?}
         ?};
         _jest<>0
      !}
   ?};
   obj_del(IMPORT);
   {? __p.first
   ||
      VAR_DEL.delete('__matakt');
      __matakt:=tab_tmp(2 ,'REF','STRING[16]',''
                          ,'NRK','INTEGER',''
                          ,'ILR','REAL',''
                          ,'ZKP','STRING[16]',''
                          ,'ZKN','STRING[16]','');
:: podglad danych przed importem
::      __p.select();
      {!
      |? {? _mat:=exec('FindInSet','#table','M','MATKTM',__p.KTM,__p.KTM); _mat<>null
         || BEER.TYP:='Z';
            ZK_P.blank();
            ZK_P.N:=ZK_N.ref();
            ZK_P.US:=ZK_N.US;
            ZK_P.M:=_mat;
            ZK_P.DP:=ZK_N.DP;
            ZK_P.SV:=exec('m_vat','material',ZK_P.M,ZK_P.N().KH,,ZK_N.DP~1,ZK_N.DP~2);
            ZK_P.IL2:=ZK_P.ILZ:=ZK_P.ILP:=__p.IL;
::            ZK_P.CENA:=__p.CENA;
            ZK_P.ILBEZ:=ZK_P.ILP;
            ZK_P.JM:=ZK_P.J2:=ZK_P.M().J;
            ZK_P.WS2:=1;
            ZK_P.T2:='G';
            ZK_P.DOST:=0;
            ZK_P.REZ:=0;
            ZK_P.A:='A';
            ZK_P.RMAG:=ZK_P.MG:=ZK_P.N().MG;
            ZK_P.ZBB:=ZK_P.CZYBEZ:='T';
            ZK_P.KH:=ZK_P.N().KH;
            ZK_P.KH_ODB:=ZK_P.N().ODB;
            exec('war_pozz','zamsiw_poz');
            {? ZK_P.clear; ZK_P.add(1)
            || ZK_P.NR:=exec('blnr_kol','zamsiw_poz',ZK_P.M);
               exec('admatzkp','rezerwacje',$ZK_P.M,ZK_P.NR,ZK_P.ILP,$ZK_P.N,$ZK_P.ref());
               exec('war_pozz','zamsiw_poz');
               ZK_P.put(1);
               exec('inf_dod','fakso',0,'zkpoz')
            ?}
         ?};
         _next:=__p.next;
         _next
      !}
   || _wyn:='Plik nie zawiera danych, które można zaimportować.\nImport danych niemożliwy.'
   ?}
|| _wyn:='Nie wskazano pliku do importu.\nImport danych niemożliwy.'
?};
ZK_P.cntx_pop;
ZK_N.cntx_pop;
{? _wyn<>'' || FUN.emsg(_wyn) ?};
1


\ofp_analiza_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Analiza dostępności materiałów w czasie - akcja 'po' dla tabeli OFP
::  OLD: \zkp_analiza_a/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
~~


\ofp_analiza_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Analiza dostępności materiałów w czasie - akcja 'po grupie' dla tabeli OFP
::  OLD: \zkp_analiza_ag/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('an_select','plan_dostaw');
exec('env_delete','plan_dostaw')


\ofp_analiza_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Analiza dostępności materiałów w czasie - akcja 'przed grupą' dla tabeli OFP
::  OLD: \zkp_analiza_bg/zk2.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('is_pdbuf','plan_dostaw')
|| exec('env_create','plan_dostaw')
|| 0
?}


\ofp_analizas_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Analiza dostępności surowców w czasie - akcja 'po' dla tabeli OFP
::----------------------------------------------------------------------------------------------------------------------
~~


\ofp_analizas_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Analiza dostępności surowców w czasie - akcja 'po grupie' dla tabeli OFP
::----------------------------------------------------------------------------------------------------------------------
~~


\ofp_analizas_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Analiza dostępności surowców w czasie - akcja 'przed' dla tabeli OFP;
::       analizie podlegają tylko surowce produktów w ilości nie zleconej
::----------------------------------------------------------------------------------------------------------------------
{? OFP.sel_size()=0
|| exec('env_create','tech_structure',1);
   _can_continue:=exec('edit_params','tech_structure',0,0,1)
|| return()
?};
_env:=__ENV_STR;
::  Rozpoczynam pętle
_exit:=1;
{!
|?
   {? var_pres('TAB',_env.STRUCT)>0 || _env.STRUCT.TAB.erase() ?};
   {? var_pres('ELEMENT',_env.STRUCT)>0 || _env.STRUCT.ELEMENT.erase() ?};
   {? var_pres('TAB',_env.CHECK) > 0 || _env.CHECK.TAB.erase() ?};

   {? _can_continue>0 & OFP.M().RODZ='U'
   || _env.KOMM.add('%1 — pozycje usługowe nie są analizowane.'@[exec('record','#to_string',OFP.ref())])
   |? _can_continue>0 & OFP.IL>0
   ||
      {? var_pres('_args') > 0 || obj_del(_args) ?};
      _args:=exec('add_a','tech_structure');
      _args.M:=OFP.M;
      _args.IL:=OFP.IL;
      _args.DW:=OFP.OFE().DR;
      _args.TW:=time(0,0,0);
      _tktl:=exec('dflt_ktl','tech_prod',OFP.M,1,1);
      _added:=0;
      {? (var_pres('TAB_ZAM',_env.CHECK)) >0 & _env.CHECK.TAB_ZAM.find_tab(,'TMAT',,'=',$OFP.ref())
      || _tktl:=exec('FindAndGet','#table',TKTL,_env.CHECK.TAB_ZAM.KTLW,,,null())
      ||
         {? _tktl=null()
         || {? OFP.M().R<>'S' &  OFP.M().R<>'H'
            || exec('tktl_chck_add','tech_structure',$_tktl,$OFP.ref(),'Brak karty domyślnej'@,OFP.M().N,'','',$OFP.M,,M.KTM);
               _added:=1
            ?}
         |? ~exec('tktl_act','tech_head',,$_tktl)
         || exec('tktl_chck_add','tech_structure',$_tktl,$OFP.ref(),'Karta domyślna nieaktualna'@,OFP.M().N,
            exec('FindAndGet','#table',TKTL,_tktl,,'NRK','N'),exec('FindAndGet','#table',TKTL,_tktl,,'WER','N')
            ,$OFP.M,,M.KTM);
            _added:=1
         ?}
      ?};
      _args.TKTL:=_tktl;
      _args.SRC_REF:=$OFP.ref();
      exec('add','tech_structure',_args);
      {? _added=0 || exec('expand','tech_structure',_args.ref) ?}
   || _env.KOMM.add('%1 — cała ilość została zrealizowana.'@[exec('record','#to_string',OFP.ref())])
   ?};

:: Wyświetlam tabelę z problemami i uzupełniam tabelę zamienników
   _ok:=1;
   {? _env.CHECK.TAB.size()>0
   || _env.CHECK.TAB.win_sel(_env.CHECK.WERA);
      _ok:=exec('tktl_chck_sel','tech_structure');
      {? _ok=0 || _exit:=0 ?}
   || _exit:=0
   ?};
_exit
!};
::Koniec petli

{? OFP.sel_size()=0 & _can_continue>0 & _ok
|| exec('cumulate','tech_structure');
   exec('select','tech_structure')
?};
~~


\ofp_analizas_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Analiza dostępności surowców w czasie - akcja 'przed grupą' dla tabeli OFP
::----------------------------------------------------------------------------------------------------------------------
exec('env_create','tech_structure',1);
exec('edit_params','tech_structure',0,0,1);
_can_continue:=1;
_env:=__ENV_STR;
::  Rozpoczynam pętle
_exit:=1;
{!
|?
   {? var_pres('TAB',_env.STRUCT)>0 || _env.STRUCT.TAB.erase() ?};
   {? var_pres('ELEMENT',_env.STRUCT)>0 || _env.STRUCT.ELEMENT.erase() ?};
   {? var_pres('TAB',_env.CHECK)>0 || _env.CHECK.TAB.erase() ?};

   {? _can_continue>0
   ||
      {? var_pres('_selected')>0 || obj_del(_selected) ?};
      _selected:=OFP.sel_aget();
      {? _selected.first()
      || {!
         |? OFP.cntx_psh();
            OFP.prefix();
            {? OFP.seek(_selected.REF) & OFP.M().RODZ='U'
            || _env.KOMM.add('%1 — pozycje usługowe nie są analizowane.'@[exec('record','#to_string',OFP.ref())])
            |? OFP.seek(_selected.REF) & OFP.IL>0
            ||
               {? var_pres('_args') > 0 || obj_del(_args) ?};
               _args:=exec('add_a','tech_structure');
               _args.M:=OFP.M;
               _args.IL:=OFP.IL;
               _args.DW:=OFP.OFE().DR;
               _args.TW:=time(0,0,0);
               _tktl:=exec('dflt_ktl','tech_prod',OFP.M,1,1);
               _added:=0;
               {? (var_pres('TAB_ZAM',_env.CHECK)) >0 & _env.CHECK.TAB_ZAM.find_tab(,'TMAT',,'=',$OFP.ref())
               || _tktl:=exec('FindAndGet','#table',TKTL,_env.CHECK.TAB_ZAM.KTLW,,,null())
               ||
                  {? _tktl=null()
                  || {? OFP.M().R<>'S' &  OFP.M().R<>'H'
                     || exec('tktl_chck_add','tech_structure',$_tktl,$OFP.ref(),'Brak karty domyślnej'@,OFP.M().N,'','',$OFP.M,,M.KTM);
                        _added:=1
                     ?}
                  |? ~exec('tktl_act','tech_head',,$_tktl)
                  || exec('tktl_chck_add','tech_structure',$_tktl,$OFP.ref(),'Karta domyślna nieaktualna'@,OFP.M().N,
                     exec('FindAndGet','#table',TKTL,_tktl,,'NRK','N'),exec('FindAndGet','#table',TKTL,_tktl,,'WER','N')
                     ,$OFP.M,,M.KTM);
                     _added:=1
                  ?}
               ?};
               _args.TKTL:=_tktl;
               _args.SRC_REF:=$OFP.ref();
               exec('add','tech_structure',_args);
               {? _added=0 || exec('expand','tech_structure',_args.ref) ?}
            || _env.KOMM.add('%1 — cała ilość została zrealizowana.'@[exec('record','#to_string',OFP.ref())])
            ?};
            OFP.cntx_pop();
            _selected.next()
         !}
      ?}
   ?};

:: Wyświetlam tabelę z problemami i uzupełniam tabelę zamienników
   _ok:=1;
   {? _env.CHECK.TAB.size()>0
   || _env.CHECK.TAB.win_sel(_env.CHECK.WERA);
      _ok:=exec('tktl_chck_sel','tech_structure');
      {? _ok=0 || _exit:=0 ?}
   || _exit:=0
   ?};
_exit
!};
::Koniec petli
{? _ok
|| exec('cumulate','tech_structure');
   exec('select','tech_structure')
?};
~~


\zkp_struktura
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TP [NUCO_2226]
:: OPIS: Tabela ze strukturą kart surowcową wyrobu - bez drzewa
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=@.__ENV_STR;

_poziom:=FUN.choice('Wybierz poziom zagłębienia struktury wyrobu',3,'I','II','III','IV');


{? _poziom>0
|| _tab0:=sql('select
         :_a.M_KTM       as M_KTM,
         :_a.M_N         as M_N,
         :_a.IL          as IL,
         :_a.JM          as JM,
         :_a.DW          as DW,
         :_a.SRC         as SRC,
         ZK_P.DT         as DT,
         REFERENCE_NUM(:_a.REFERENCE) as REF
      from :_a join @ZK_P using(:_a.SRC_REF,ZK_P.REFERENCE)
      where :_a.PARENT=0'
      ,_env.STRUCT.TAB);

   _tab1:=sql(' select
         :_b.SRC         as SRC,
         :_b.M_KTM       as M_KTM,
         :_b.M_N         as M_N,
         :_b.IL          as IL,
         :_b.JM          as JM,
         :_b.DW          as DW,
         :_a.M_KTM       as M_KTM1,
         :_a.M_N         as M_N1,
         :_a.IL          as IL1,
         :_a.JM          as JM1,
         :_a.DW          as DW1,
         :_b.REF        as REF,
         :_b.DT         as DT,
         REFERENCE_NUM(:_a.REFERENCE) as REF1
      from :_b left join :_a using (:_a.PARENT,:_b.REF)'
      ,_env.STRUCT.TAB,_tab0);
   {? _tab1.first()
   || {!
      |? {? _tab1.REF1=0
         || _tab1.REF1:=9999;
            _tab1.put()
         ?};
         _tab1.next()
      !}
   ?};
   {? _poziom>1
   || _tab2:=sql(' select
            :_b.SRC         as SRC,
            :_b.M_KTM       as M_KTM,
            :_b.M_N         as M_N,
            :_b.IL          as IL,
            :_b.JM          as JM,
            :_b.DW          as DW,
            :_b.M_KTM1       as M_KTM1,
            :_b.M_N1         as M_N1,
            :_b.IL1          as IL1,
            :_b.JM1          as JM1,
            :_b.DW1          as DW1,
            :_a.M_KTM       as M_KTM2,
            :_a.M_N         as M_N2,
            :_a.IL          as IL2,
            :_a.JM          as JM2,
            :_a.DW          as DW2,
            :_b.REF        as REF,
            :_b.REF1        as REF1,
            :_b.DT         as DT,
            REFERENCE_NUM(:_a.REFERENCE) as REF2
         from :_b left join :_a using (:_a.PARENT,:_b.REF1)
         order by SRC, M_KTM,M_KTM1,M_KTM2'
         ,_env.STRUCT.TAB,_tab1);
      {? _tab2.first()
      || {!
         |? {? _tab2.REF2=0
            || _tab2.REF2:=9999;
               _tab2.put()
            ?};
            _tab2.next()
         !}
      ?};
      {? _poziom>2
      || _tab3:=sql(' select
                     :_b.SRC         as SRC,
                     :_b.M_KTM       as M_KTM,
                     :_b.M_N         as M_N,
                     :_b.IL          as IL,
                     :_b.JM          as JM,
                     :_b.DW          as DW,
                     :_b.M_KTM1       as M_KTM1,
                     :_b.M_N1         as M_N1,
                     :_b.IL1          as IL1,
                     :_b.JM1          as JM1,
                     :_b.DW1          as DW1,
                     :_b.M_KTM2       as M_KTM2,
                     :_b.M_N2         as M_N2,
                     :_b.IL2          as IL2,
                     :_b.JM2          as JM2,
                     :_b.DW2          as DW2,
                     :_a.M_KTM       as M_KTM3,
                     :_a.M_N         as M_N3,
                     :_a.IL          as IL3,
                     :_a.JM          as JM3,
                     :_a.DW          as DW3,
                     :_b.REF        as REF,
                     :_b.REF1        as REF1,
                     :_b.REF2        as REF2,
                     :_b.DT         as DT,
                     REFERENCE_NUM(:_a.REFERENCE) as REF3
                  from :_b left join :_a using (:_a.PARENT,:_b.REF2)
                  order by SRC, M_KTM,M_KTM1,M_KTM2'
         ,_env.STRUCT.TAB,_tab2);
         {? _tab3.first()
         || {!
            |? {? _tab3.REF3=0
               || _tab3.REF3:=9999;
                  _tab3.put()
               ?};
               _tab3.next()
            !}
         ?};
         {? _poziom>3
         || _tab4:=sql(' select
                        :_b.SRC         as SRC,
                        :_b.M_KTM       as M_KTM,
                        :_b.M_N         as M_N,
                        :_b.IL          as IL,
                        :_b.JM          as JM,
                        :_b.DW          as DW,
                        :_b.M_KTM1       as M_KTM1,
                        :_b.M_N1         as M_N1,
                        :_b.IL1          as IL1,
                        :_b.JM1          as JM1,
                        :_b.DW1          as DW1,
                        :_b.M_KTM2       as M_KTM2,
                        :_b.M_N2         as M_N2,
                        :_b.IL2          as IL2,
                        :_b.JM2          as JM2,
                        :_b.DW2          as DW2,
                        :_b.M_KTM3       as M_KTM3,
                        :_b.M_N3         as M_N3,
                        :_b.IL3          as IL3,
                        :_b.JM3          as JM3,
                        :_b.DW3          as DW3,
                        :_a.M_KTM       as M_KTM4,
                        :_a.M_N         as M_N4,
                        :_a.IL          as IL4,
                        :_a.JM          as JM4,
                        :_a.DW          as DW4,
                        :_b.DT         as DT,
                        REFERENCE_NUM(:_a.REFERENCE) as REF4
                     from :_b left join :_a using (:_a.PARENT,:_b.REF3)
                     order by SRC, M_KTM,M_KTM1,M_KTM2,M_KTM3'
            ,_env.STRUCT.TAB,_tab3);
            {? _tab4.first()
            || {!
               |? {? _tab4.REF4=0
                  || _tab4.REF4:=9999;
                     _tab4.put()
                  ?};
                  _tab4.next()
               !}
            ?};

            {? _poziom>4
            || _tab5:=sql(' select
                           :_b.SRC         as SRC,
                           :_b.M_KTM       as M_KTM,
                           :_b.M_N         as M_N,
                           :_b.IL          as IL,
                           :_b.JM          as JM,
                           :_b.DW          as DW,
                           :_b.M_KTM1       as M_KTM1,
                           :_b.M_N1         as M_N1,
                           :_b.IL1          as IL1,
                           :_b.JM1          as JM1,
                           :_b.DW1          as DW1,
                           :_b.M_KTM2       as M_KTM2,
                           :_b.M_N2         as M_N2,
                           :_b.IL2          as IL2,
                           :_b.JM2          as JM2,
                           :_b.DW2          as DW2,
                           :_b.M_KTM3       as M_KTM3,
                           :_b.M_N3         as M_N3,
                           :_b.IL3          as IL3,
                           :_b.JM3          as JM3,
                           :_b.DW3          as DW3,
                           :_b.M_KTM4       as M_KTM4,
                           :_b.M_N4         as M_N4,
                           :_b.IL4          as IL4,
                           :_b.JM4          as JM4,
                           :_b.DW4          as DW4,
                           :_a.M_KTM       as M_KTM5,
                           :_a.M_N         as M_N5,
                           :_a.IL          as IL5,
                           :_a.JM          as JM5,
                           :_a.DW          as DW5
                           :_b.DT         as DT,
                        from :_b left join :_a using (:_a.PARENT,:_b.REF4)
                        order by SRC, M_KTM,M_KTM1,M_KTM2,M_KTM3,M_KTM4'
               ,_env.STRUCT.TAB,_tab4);
               _tab:=_tab5
            || _tab:=_tab4
            ?}
         || _tab:=_tab3
         ?}
      || _tab:=_tab2
      ?}
   || _tab:=_tab1
   ?};
   _sWin:=_tab.mk_sel('','P',,'#_tab_swin',,,,,'U','T',,,,'maximized');
   _tab.win_sel(_sWin);
   _tab.win_fld(_sWin,,'SRC'     ,          ,          ,10,  , ,'Źródło',,'SRC',,1);
   _tab.win_fld(_sWin,,'DW'     ,          ,          , 10,  , ,'Data wym.',,'DW',,1);
   _tab.win_fld(_sWin,,'DT'     ,          ,          , 10,  , ,'Termin rea.',,'DT',,1);
   _tab.win_fld(_sWin,,'M_KTM'   ,          ,          , 10,  , ,'Produkt - KTM',,'M_KTM',,1);
   _tab.win_fld(_sWin,,'M_N'     ,          ,          ,15,  , ,'Produkt - Nazwa',,'M_N',,1);
   _tab.win_fld(_sWin,,'IL'      ,          ,          , 6, 3, ,'Ilość prod.',,'IL',,1);
   _tab.win_fld(_sWin,,'JM'      ,          ,          , 5,  , ,'JM',,'JM',,1);
   _tab.win_fld(_sWin,,'M_KTM1'  ,          ,          , 10,  , ,'Sur I - KTM',,'M_KTM1',,1);
   _tab.win_fld(_sWin,,'M_N1'    ,          ,          ,15,  , ,'Sur I - Nazwa',,'M_N1',,1);
   _tab.win_fld(_sWin,,'IL1'     ,          ,          , 6, 3, ,'Ilość sur I',,'IL1',,1);
   _tab.win_fld(_sWin,,'JM1'     ,          ,          , 3,  , ,'JM',,'JM1',,1);
   _tab.win_act(_sWin, ,'Kolejność' );
   _tab.win_act(_sWin, ,'Szukaj');
   {? _poziom>1
   || _tab.win_fld(_sWin,,'M_KTM2'  ,          ,          , 10,  , ,'Sur II - KTM',,'M_KTM2',,1);
      _tab.win_fld(_sWin,,'M_N2' ,          ,             ,10,  , ,'Sur II Nazwa',,'M_N2',,1);
      _tab.win_fld(_sWin,,'IL2'     ,          ,          , 6, 3, ,'Ilość sur II',,'IL2',,1);
      _tab.win_fld(_sWin,,'JM2'     ,          ,          , 3,  , ,'JM',,'JM2',,1);
::      _tab.win_fld(_sWin,,'DW2'     ,          ,          , 10,  , ,'Data wymagalności',,'DW2',,1);
      {? _poziom>2
      || _tab.win_fld(_sWin,,'M_KTM3'  ,          ,          , 10,  , ,'Sur III - KTM',,'M_KTM3',,1);
         _tab.win_fld(_sWin,,'M_N3' ,          ,             ,10,  , ,'Sur III Nazwa',,'M_N3',,1);
         _tab.win_fld(_sWin,,'IL3'     ,          ,          , 6, 3, ,'Ilość sur III',,'IL3',,1);
         _tab.win_fld(_sWin,,'JM3'     ,          ,          , 3,  , ,'JM',,'JM3',,1);
::      _tab.win_fld(_sWin,,'DW3'     ,          ,          , 10,  , ,'Data wymagalności',,'DW3',,1);
         {? _poziom>3
         || _tab.win_fld(_sWin,,'M_KTM4'  ,          ,          , 10,  , ,'Sur IV - KTM',,'M_KTM4',,1);
            _tab.win_fld(_sWin,,'M_N4' ,          ,             ,10,  , ,'Sur IV Nazwa',,'M_N4',,1);
            _tab.win_fld(_sWin,,'IL4'     ,          ,          , 6, 3, ,'Ilość sur IV',,'IL4',,1);
            _tab.win_fld(_sWin,,'JM4'     ,          ,          , 3,  , ,'JM',,'JM4',,1);
            {? _poziom>4
            || _tab.win_fld(_sWin,,'M_KTM5'  ,          ,          , 10,  , ,'Sur V - KTM',,'M_KTM5',,1);
               _tab.win_fld(_sWin,,'M_N5' ,          ,             ,10,  , ,'Sur V Nazwa',,'M_N5',,1);
               _tab.win_fld(_sWin,,'IL5'     ,          ,          , 6, 3, ,'Ilość sur V',,'IL5',,1);
               _tab.win_fld(_sWin,,'JM5'     ,          ,          , 3,  , ,'JM',,'JM5',,1)
            ?}
         ?}
      ?}
   ?};

   _tab.select()
?};
~~


\ofe_analizas_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PeKa [NUCO_22.26]
:: OPIS: Analiza dostępności surowców w czasie - akcja 'przed' dla tabeli OFE;
::----------------------------------------------------------------------------------------------------------------------
{? OFE.sel_size()=0
|| exec('env_create','tech_structure',1);
   _can_continue:=exec('edit_params','tech_structure',0,0,1)
|| return()
?};
_env:=__ENV_STR;
::  Rozpoczynam pętle
_exit:=1;
{!
|?
   {? var_pres('TAB',_env.STRUCT)>0 || _env.STRUCT.TAB.erase() ?};
   {? var_pres('ELEMENT',_env.STRUCT)>0 || _env.STRUCT.ELEMENT.erase() ?};
   {? var_pres('TAB',_env.CHECK) > 0 || _env.CHECK.TAB.erase() ?};

   {? _can_continue>0
   || {? var_pres('_args') > 0 || obj_del(_args) ?};
      _args:=exec('add_a','tech_structure');
      OFP.cntx_psh();
      OFP.index('OFE_P');
      OFP.prefix(OFE.ref());
      {? OFP.first()
      || {!
         |? {? OFP.M().RODZ='U'
            || _env.KOMM.add('%1 — pozycje usługowe nie są analizowane.'@[exec('record','#to_string',OFP.ref())])
            |? OFP.IL>0
            || _args.M:=OFP.M;
               _args.IL:=OFP.IL;
               _args.DW:=OFP.OFE().DR;
               _args.TW:=time(0,0,0);
               _tktl:=exec('dflt_ktl','tech_prod',OFP.M,1,1);
               _added:=0;
               {? (var_pres('TAB_ZAM',_env.CHECK)) >0 & _env.CHECK.TAB_ZAM.find_tab(,'TMAT',,'=',$OFP.ref())
               || _tktl:=exec('FindAndGet','#table',TKTL,_env.CHECK.TAB_ZAM.KTLW,,,null())
               ||
                  {? _tktl=null()
                  || {? OFP.M().R<>'S' &  OFP.M().R<>'H'
                     || exec('tktl_chck_add','tech_structure',$_tktl,$OFP.ref(),'Brak karty domyślnej'@,OFP.M().N,'','',$OFP.M,,M.KTM);
                        _added:=1
                     ?}
                  |? ~exec('tktl_act','tech_head',,$_tktl)
                  || exec('tktl_chck_add','tech_structure',$_tktl,$OFP.ref(),'Karta domyślna nieaktualna'@,OFP.M().N,
                     exec('FindAndGet','#table',TKTL,_tktl,,'NRK','N'),exec('FindAndGet','#table',TKTL,_tktl,,'WER','N')
                     ,$OFP.M,,M.KTM);
                     _added:=1
                  ?}
               ?};
               _args.TKTL:=_tktl;
               _args.SRC_REF:=$OFP.ref();
               exec('add','tech_structure',_args);
               {? _added=0 || exec('expand','tech_structure',_args.ref) ?}
            || _env.KOMM.add('%1 — cała ilość została zrealizowana.'@[exec('record','#to_string',OFP.ref())])
            ?};
            OFP.next()
         !}
      ?};
      OFP.cntx_pop()
   ?};
:: Wyświetlam tabelę z problemami i uzupełniam tabelę zamienników
   _ok:=1;
   {? _env.CHECK.TAB.size()>0
   || _env.CHECK.TAB.win_sel(_env.CHECK.WERA);
      _ok:=exec('tktl_chck_sel','tech_structure');
      {? _ok=0 || _exit:=0 ?}
   || _exit:=0
   ?};
_exit
!};
::Koniec petli

{? OFP.sel_size()=0 & _can_continue>0 & _ok
|| exec('cumulate','tech_structure');
   exec('select','tech_structure')
?};
~~


\ofe_analizas_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PeKa [NUCO_22.26]
:: OPIS: Analiza dostępności surowców w czasie - akcja 'przed grupą' dla tabeli OFE
::----------------------------------------------------------------------------------------------------------------------
exec('env_create','tech_structure',1);
exec('edit_params','tech_structure',0,0,1);
_can_continue:=1;
_env:=__ENV_STR;
::  Rozpoczynam pętle
_exit:=1;
{!
|?
   {? var_pres('TAB',_env.STRUCT)>0 || _env.STRUCT.TAB.erase() ?};
   {? var_pres('ELEMENT',_env.STRUCT)>0 || _env.STRUCT.ELEMENT.erase() ?};
   {? var_pres('TAB',_env.CHECK)>0 || _env.CHECK.TAB.erase() ?};

   {? _can_continue>0
   ||
      {? var_pres('_selected')>0 || obj_del(_selected) ?};
      _selected:=OFE.sel_aget();
      {? _selected.first()
      || OFE.cntx_psh;
         {!
         |? {? var_pres('_args') > 0 || obj_del(_args) ?};
            _args:=exec('add_a','tech_structure');
            OFP.cntx_psh();
            OFP.index('OFE_P');
            OFP.prefix(_selected.REF);
            {? OFP.first()
            || {!
               |? {? OFP.M().RODZ='U'
                  || _env.KOMM.add('%1 — pozycje usługowe nie są analizowane.'@[exec('record','#to_string',OFP.ref())])
                  |?  OFP.IL>0
                  || _args.M:=OFP.M;
                     _args.IL:=OFP.IL;
                     _args.DW:=OFP.OFE().DR;
                     _args.TW:=time(0,0,0);
                     _tktl:=exec('dflt_ktl','tech_prod',OFP.M,1,1);
                     _added:=0;
                     {? (var_pres('TAB_ZAM',_env.CHECK)) >0 & _env.CHECK.TAB_ZAM.find_tab(,'TMAT',,'=',$OFP.ref())
                     || _tktl:=exec('FindAndGet','#table',TKTL,_env.CHECK.TAB_ZAM.KTLW,,,null())
                     ||
                        {? _tktl=null()
                        || {? OFP.M().R<>'S' &  OFP.M().R<>'H'
                           || exec('tktl_chck_add','tech_structure',$_tktl,$OFP.ref(),'Brak karty domyślnej'@,OFP.M().N,'','',$OFP.M,,M.KTM);
                              _added:=1
                           ?}
                        |? ~exec('tktl_act','tech_head',,$_tktl)
                        || exec('tktl_chck_add','tech_structure',$_tktl,$OFP.ref(),'Karta domyślna nieaktualna'@,OFP.M().N,
                           exec('FindAndGet','#table',TKTL,_tktl,,'NRK','N'),exec('FindAndGet','#table',TKTL,_tktl,,'WER','N')
                           ,$OFP.M,,M.KTM);
                           _added:=1
                        ?}
                     ?};
                     _args.TKTL:=_tktl;
                     _args.SRC_REF:=$OFP.ref();
                     exec('add','tech_structure',_args);
                     {? _added=0 || exec('expand','tech_structure',_args.ref) ?}
                  || _env.KOMM.add('%1 — cała ilość została zrealizowana.'@[exec('record','#to_string',OFP.ref())])
                  ?};
               OFP.next
               !}
            ?};
            OFP.cntx_pop();
            _selected.next()
         !}
      ?}
   ?};

:: Wyświetlam tabelę z problemami i uzupełniam tabelę zamienników
   _ok:=1;
   {? _env.CHECK.TAB.size()>0
   || _env.CHECK.TAB.win_sel(_env.CHECK.WERA);
      _ok:=exec('tktl_chck_sel','tech_structure');
      {? _ok=0 || _exit:=0 ?}
   || _exit:=0
   ?};
_exit
!};
::Koniec petli
{? _ok
|| exec('cumulate','tech_structure');
   exec('select','tech_structure')
?};
~~