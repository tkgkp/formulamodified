:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: q%gate.fml
:: Utworzony: 07.03.2015
:: Autor: TS
::======================================================================================================================
:: Zawartość: Przykładowe formuły warunków na bramach NUCO
::======================================================================================================================

\czy_zlecenie_zaakceptowane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Sprawdza czy zlecenie jest zaakceptowane (otwarte)
::       Formuła do użycia na bramie zbierającej złożonej, przykładowe wywołanie:
::          params_exec('czy_zlecenie_zaakceptowane','%gate',params_get().in.p01)
::       albo na bramie rozgałęziającej OR lub XOR, przykładowe wywołanie:
::          params_exec('czy_zlecenie_zaakceptowane','%gate',_a.ZL)
::   WE: _a - ZL.ref()
::   WY: 0 - zlecenie nie zaakceptowane
::       1 - zlecenie zaakceptowane
::       ~~ - nie podano parametru złączeniowego _a
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) | var_pres('_a')=type_of('')
|| _zl:=_a
|| return()
?};
{? var_pres('_a')=type_of('')
|| _usuniety:=exec('czy_rekord_usuniety','q%event',_a,'ZL')
|| _usuniety:=0
?};

exec('FindAndGet','#table',ZL,_zl,,"STAN",'')='O' | _usuniety


\czy_zk_p_ma_zlec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TP [NUCO_DEV]
:: OPIS: Sprawdzenie czy do podanego ZK_P utworzono już jakieś zlecenia.
::   WE:  _a - ZK_P.ref
::        _b - czy wywołać z dialogiem 1 - tak, 0 - nie (domyślnie)
::   WY:  1 - są zlecenia, 0 - nie ma zleceń, -1 - błąd wywołania
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<>7 || return(-1) || _zk_p:=_a?};
{? var_press('_b')<>type_of(0) || _dialog:=0 || {? _b>0 || _dialog:=1 || _dialog:=0 ?} ?};
_wynik:=0;

ZLZAM.cntx_psh();
ZLZAM.index('ZMZL');
ZLZAM.prefix($_zkp);
{? ZLZAM.first()
|| {!
   |?
::                Sprawdzenie czy ZK_P ma juz utworzone zlecenie, jesli tak, to nalezy planowac zlecenie
      {? ZLZAM.ZL<>null()
      || _wynik:=1;
         _txt:='Dla pozycji zamówienia wygenerowano już zlecenie [%1]. Należy zaplanować to zlecenie.'@
               [ZLZAM.ZL().SYM];
         {? _dialog
         || FUN.emsg(_txt)
         ?}
      ?};
      ~_wynik & ZLZAM.next()
   !}
|| _wynik:=0
?};
ZLZAM.cntx_pop();
_wynik


\czy_pierwszy_przewodnik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TP [NUCO_DEV]
:: OPIS:  Sprawdza czy w przekazanym parametrze znajduje się przewodnik nr. 1
::   WE: _a - ZGH.ref
::   WY:  1 - przewodnik z nr. 1/ 0 - inny przewodnik
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<>7 || return(-1) ?};

_wynik:=0;

_zgh:=sql('select ZLEC, NRPRZ from ZGH where ZGH.REFERENCE=:_a',_a);

_nrprz:=sql('select ZLEC,min(NRPRZ) as NRPRZP from ZGH where ZGH.ZLEC=\':_a\' group by ZLEC',_zgh.ZLEC).NRPRZP;

{? _nrprz=_zgh.NRPRZ
|| _wynik:=1
?};

_wynik


\czy_polfabrykaty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TP [NUCO]
:: OPIS: Sprawdza czy dla domyślnej karty materiału z ZK_P technologia zawiera półfabrykaty
::   WE: _a - ZK_P.ref()
::   WY: 1 - są półfabrykaty, 0 - nie ma półfabrykatów
::----------------------------------------------------------------------------------------------------------------------

{? var_press('_a')<>7 || return(-1) ?};
_wynik:=0;

_material:=exec('FindAndGet','#table',ZK_P,_a,,"ZK_P.M",null());

{? _material<>null()
||  _tktlw:=sql('select SLO.KOD, TKTLW.IDADD, TKTLW.DEFAULT, TKTLW.TKTL
                  from TKTLW join TKTL join SLO using(TKTL.JORG,SLO.REFERENCE)
                 where TKTLW.KTM=:_a
              order by TKTLW.DEFAULT, TKTLW.IDADD
                ', _material);
   {? _tktlw.last()
   || _tktl:=exec('FindAndGet','#table',TKTL,_tktlw.TKTL,,"TKTL.ref()",null());
      {? _tktl<>null()
      || _wynik:=exec('czy_pf','tech_mater',_tktl)
      ?}
   ?}
?};

_wynik


\czy_ZK_N_na_todo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TP [NUCO_TEST]
:: OPIS: Sprawdzenie czy termin realizacji ZK_N mieści się w zakresie liczby dni (parametr 999201)
::       Dodatkowe sprawdzenie czy zamówienie jest kierowane do wydziału produkcyjnego czy do magazynu głównego
::   WE: _a  -ZK_N.ref()
::      [_b] - 0 lub brak argumentu - nie kontroluj czy do magazynu czy do wydziału (na magazyn i na wydział)
::             1 - tylko na magazyn
::             2 - tylko na wydział produkcyjny
::   WY: 1 - zamówienie do realizacji, 0 - jeszcze nie
::----------------------------------------------------------------------------------------------------------------------
_mag_wyd:={? _<2 || 0 || _b ?};
_res:=0;
_zakres_dni:=exec('get_w','#params',999201,type_of(0));
_data_do:=date()+_zakres_dni;
{? _a<>null()
||  _termin_realizacji:=exec('FindAndGet','#table',ZK_N,_a,,"ZK_N.PL_DATA",null());
    {? _termin_realizacji<=_data_do
    || _res:=1
    ?}
?};
{? _res & _mag_wyd>0
|| _czy_wyd:=exec('FindAndGet','#table',ZK_N,_a,,"ZK_N.MG().W='T'",0);
   {? _mag_wyd=1 & _czy_wyd
   || _res:=0
   |? _mag_wyd=2 & ~_czy_wyd
   || _res:=0
   ?}
?};
_res


\czy_dok_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TP [NUCO_TEST]
:: OPIS:  Sprawdzam w czynności serwisowej czy powstał dokument powiązany do dokumentu magazynowego (na dowolnym wejściu)
::   WE:
::   WY: ND.ref lub null - dla braku dokumentu
::----------------------------------------------------------------------------------------------------------------------

_mp:=params_get().mp;
_nd:=null();

_in:=_mp.load(exec('kind_in','#b_port'));

{? var_pres('p01',_in)<>type_of(~~) & _in.p01<>null()
|| _nd:=_in.p01
|? var_pres('p02',_in)<>type_of(~~) & _in.p02<>null()
|| _nd:=_in.p02
|? var_pres('p03',_in)<>type_of(~~) & _in.p03<>null()
|| _nd:=_in.p03
?};

_nd

