:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: plan_dostaw.fml [17.00]
:: Utworzony: 2015-01-20
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Formuły do obsługi planu dostaw - wspólne
::======================================================================================================================
:: DRO_TODO_AWI: (plan dostaw): ZGŁOSZONE Darkowi - TWB do danych demo dodać
:: DRO_TODO_AWI: (plan dostaw): OK - Lista magazynów dodać akcję usuń a nie tylko przez dołącz
:: DRO_TODO_AWI: (plan dostaw): DZIAŁA ZGODNIE Z OCZEKIWANIEM - Sprawdzić wymaganie magazynu do analiz jeśli podano magazyn do przesunięć
:: DRO_TODO_AWI: (plan dostaw): OK - Przesunięcia weryfikacja wyliczenia dostępnego stanu do przesunięć
:: DRO_TODO_AWI: (plan dostaw): OK - Nie odświeża się panel zamówień po wygenrowaniu zamówień z panelu koszyk planu dostaw


\pda_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: argument funkcji: exec('pda','plan_dostaw'),
::       exec('stan','plan_dostaw'), exec('uzup','plan_dostaw')
::       , exec('cechy1','plan_dostaw'), exec('cechy2','plan_dostaw')
::       , exec('core','plan_dostaw')
::  OLD: \pda_a/pd_a.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=obj_new('TYP','PAR','M','TM_STAMP','DK','TK','DISP','PD_P','PD_P_ODS','PD_K','ODSW','DEF','IL','DW','TW'
   ,'IL_DOST','UZUP_ST','SKIP','skip_chk','skip_add','skip_del','INSERT','insert_add','PD_D'
   ,'STAT','STAT_MG','STAT_DA','STAT_IL','ILP','ILR','STAN','MG'
   ,'SEL', 'VER_TYP','VER_DATA'
   ,'PD_D_ZN','MAG_Z');
:: typ - PD_D.TYP
_args.TYP:='';
:: parametr
_args.PAR:='';
:: Material - M.ref()
_args.M:=null();
:: tm_stamp - czas uruchomienia analizy
_args.TM_STAMP:=0;
:: data koncowa analizy
_args.DK:=date(0,0,0);
:: czas koncowy analizy
_args.TK:=time(0,0,0);
:: 0-nie wyswietlac szczegolow, 1-wyswietlac
_args.DISP:=0;
:: PD_P.ref()
_args.PD_P:=null();
:: 0-nie aktualizowac statusu pozycji planu, 1-aktualizowac
_args.PD_P_ODS:=0;
:: PD_K.ref()
_args.PD_K:=PD_K.ref();
:: 0-naliczac szczegoly po raz pierwszy, 1-usunac szczegoly i naliczyc ponownie
_args.ODSW:=0;
:: 0-w kontekscie analizy, 1-w kontekscie definiowania
_args.DEF:=0;
:: Ilosc wymagana
_args.IL:=0;
:: data wymagana
_args.DW:=date(0,0,0);
:: czas wymagany
_args.TW:=time(0,0,0);
:: ilość dostępna na wymagany termin
_args.IL_DOST:=0;
:: 0-nie uruchamiaj formul uzupelnienia stanu, 1-uruchamiaj formuly uzupelnienia stanu
_args.UZUP_ST:=0;
:: lista wykluczonych pozycji z analizy
_args.SKIP:=tab_tmp(1,'REF','STRING[16]','Reference wykluczonego zapisu');
_args.skip_chk:="~.SKIP.find_key(_a)";
_args.skip_add:="{? ~.SKIP.find_key(_a) || .SKIP.REF:=_a; .SKIP.add() ?}";
_args.skip_del:="{? .SKIP.find_key(_a) || .SKIP.del() ?}";
:: lista dodawanych tymczasowo pozycji z analizy
_args.INSERT:=tab_tmp(3,
   'REF','STRING[16]','Reference dodawanego zapisu',
   'D','DATE','Data',
   'T','TIME','Czas',
   'IL','REAL','Ilość'
);
_args.insert_add:="
   {? ~.INSERT.find_key(_a,_b,_c)
   || .INSERT.REF:=_a;
      .INSERT.D:=_b;
      .INSERT.T:=_c;
      .INSERT.IL:=_d;
      .INSERT.add()
   ?}
";
:: kod formuly uzupelnienia stanu
_args.PD_D:='';
:: stan pozycji dostawy
_args.STAT:='';
_args.STAT_MG:=0;
_args.STAT_DA:=date(0,0,0);
_args.STAT_IL:=0;
_args.ILP:=0;
_args.ILR:=0;
_args.STAN:=0;
_args.MG:='';
:: zaznaczone pozycje planu
_args.SEL:=~~;
:: typ wersji
_args.VER_TYP:=exec('pda_ver_typ_default','plan_dostaw');
:: data wersji
_args.VER_DATA:=date(0,0,0);
:: NUCO - doatkowy argument - analiza wg. konkretnego zestawu formuł
_args.PD_D_ZN:='';
:: NUCO - doatkowy argument - analiza wg. konkretnych magazynów 'SUR1,SUR2,MMO'
_args.MAG_Z:='';
:: zwraca tablice
_args


\pda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: analiza zapotrzebowania
::   WE: _a - argument - wynik formuły exec('pda_a','plan_dostaw')
::   WY: obj_new('DOSTEPNY','NA_KIEDY','IL')
::  OLD: \pda/pd_a.fml
::----------------------------------------------------------------------------------------------------------------------
_paramsa:=_a;

_wyn:=obj_new('DOSTEPNY','NA_KIEDY','IL','IL_DOST');
_wyn.DOSTEPNY:=0; _wyn.NA_KIEDY:=date(0,0,0); _wyn.IL:=0; _wyn.IL_DOST:=0;

:: Walidacja argumentu - M musi być określone
{? _paramsa.M=null() || return() ?};
M.clear();
:: Ustawiony bufor tabeli M
{? ~M.seek(_paramsa.M) || return() ?};

_atr:=M.M_ATR<>null();

_czysc:="
   VAR_DEL.delete('__pda')
";

:: uzupełnienie tabeli szczegółów
{? _paramsa.PD_P_ODS & _paramsa.PD_P
|| PD_P.get();
   PD_P.TMSTAMPA:=_paramsa.TM_STAMP;
   PD_P.REFRESH:={? PD_P.TMSTAMPA<PD_P.TMSTAMPB || 'T' || 'N' ?};
   PD_P.put()
?};

:: powołanie zmiennych
{? _paramsa.ODSW
:: aktualizacja danych
||
   _Tab1:=__pda.TAB1;
   _Tab2:=__pda.TAB2;
   _Tab3:=__pda.TAB3;
   _Tab1t:=exec('pda_tab1_wsk','plan_dostaw','TAB');
   _Tab1.NDX1:=exec('pda_tab1_wsk','plan_dostaw','NDX1');
   _Tab1.NDX2:=exec('pda_tab1_wsk','plan_dostaw','NDX2');
   _Tab2t:=exec('pda_tab2_wsk','plan_dostaw','TAB');
   _Tab2.NDX1:=exec('pda_tab2_wsk','plan_dostaw','NDX1');
   _Tab2.NDX2:=exec('pda_tab2_wsk','plan_dostaw','NDX2');
   _Tab2.NDX3:=exec('pda_tab2_wsk','plan_dostaw','NDX3');
   _Tab3t:=exec('pda_tab3_wsk','plan_dostaw','TAB');
   _Tab3.NDX1:=exec('pda_tab3_wsk','plan_dostaw','NDX1');
   _Tab3.NDX2:=exec('pda_tab3_wsk','plan_dostaw','NDX2');
   _Stany_tab:=exec('pda_stany_wsk','plan_dostaw','TAB');

   _Tab1t.prefix();
   _loop:=_Tab1t.first(); {! |? _loop |! _Tab1t.TREE:=0; _loop:=_Tab1t.put() & _Tab1t.next() !};
   {? _Tab1t.first() || {! |? _Tab1t.del() !} ?};
   _Tab2t.prefix(); {? _Tab2t.first() || {! |? _Tab2t.del() !} ?};
   _Tab3t.prefix(); {? _Tab3t.first() || {! |? _Tab3t.del() !} ?};
   _Stany_tab.prefix(); {? _Stany_tab.first() || {! |? _Stany_tab.del() !} ?}
:: pierwsze pobranie danych
||
   _czysc();
:: __pda - przestrzeń nazw
:: TAB1 - stany w podziale na dni
:: TAB2 - szczegółowy zapis stanów
:: TAB3 - cechy stanu
:: WER_GR - okno grupowe
:: NUCO - dodanie analizy wg magazynów - parametr z pda_a (MAG_Z)
   __pda:=exec('pda_env','plan_dostaw',_paramsa);
   __pda.MAG_Z:=_paramsa.MAG_Z;
   _Tab1:=__pda.TAB1:=obj_new('TAB','NDX1','NDX2','WER1','WER2','WER3','D');
   _Tab2:=__pda.TAB2:=obj_new('TAB','NDX1','NDX2','NDX3','NDX4','NDX5','WER1','WER2','WER3','GOTO_PROBLEM');
   _Tab3:=__pda.TAB3:=obj_new('TAB','NDX1','NDX2','WER1');
   __pda.STANY:=exec('stany_env','plan_dostaw');
:: tabela analizy zapotrzebowania
   _Tab1t:=_Tab1.TAB:=exec('tab1','plan_dostaw');
   _Tab1.NDX1:=_Tab1t.index('?'); 'kolejnosc: T, TREE, D, DK_C';
   _Tab1.NDX2:=_Tab1t.ndx_tmp(,,'T',,,'TREE',,,'D',,,'MG',,);
   _Tab2t:=_Tab2.TAB:=exec('tab2','plan_dostaw');
   _Tab2.NDX1:=_Tab2t.index('?'); 'kolejnosc: MG, D, T, PRZY_ROZ';
   _Tab2.NDX2:=_Tab2t.ndx_tmp(,,'D',,,'T',,,'PRZY_ROZ',,);
   _Tab2.NDX3:=_Tab2t.ndx_tmp(,,'PROBLEM',,,'D',,,'T',,);
   _Tab2.NDX4:=_Tab2t.ndx_tmp(,,'DKC_SYM',,,'D',,,'T',,,'PRZY_ROZ',,);
   _Tab2.NDX5:=_Tab2t.ndx_tmp(,,'D',,,'T',,,'PRZY_ROZ',,,'STAN_D',,);
   _Tab3t:=_Tab3.TAB:=exec('tab3','plan_dostaw');
   _Tab3.NDX1:=_Tab3t.index('?'); 'kolejnosc: REF,TYPSTAN,KOD,SORT';
   _Tab3.NDX2:=_Tab3t.ndx_tmp(,,'REF',,,'TYPSTAN',,,'SORT',,)
?};

:: pobranie danych wg formuł planu dostaw
exec('stan','plan_dostaw',_paramsa);
exec('tab2_insert','plan_dostaw',_paramsa);
exec('tab2_stan','plan_dostaw',1); exec('cechy1','plan_dostaw',_paramsa);
exec('tab2_stan','plan_dostaw',2); exec('cechy2','plan_dostaw',_paramsa);
{? _atr || exec('tab2_stan','plan_dostaw',3); exec('cechy3','plan_dostaw',_paramsa) ?};
exec('tab1_stan','plan_dostaw',_paramsa);
exec('stany_oblicz','plan_dostaw',_paramsa);

:: wyświetlenie szczegółów
{? _paramsa.DISP
||
:: formuły pól tabeli analizy zapotrzebowania
   exec('pda_tab_fld_fml','plan_dostaw');
:: okna tabeli analizy zapotrzebowania
   _Tab1.WER1:=exec('tab1_wer1','plan_dostaw');
   _Tab1.WER2:=exec('tab1_wer2','plan_dostaw');
   _Tab1.WER3:=exec('tab1_wer3','plan_dostaw');
   _Tab2.WER1:=exec('tab2_wer1','plan_dostaw',_paramsa);
   _Tab2.WER2:=exec('tab2_wer2','plan_dostaw',_paramsa);
   _Tab2.WER3:=exec('tab2_wer3','plan_dostaw',_paramsa);
   _Tab3.WER1:=exec('tab3_wer1','plan_dostaw');
:: okno grupowe
   _fb:="
      _options:=exec('set_options_a','#desktop');
      _options.FOCUS_RET:=1;
      exec('load','#desktop','pd_wykres','pd_wykres.dsk',_options,,,,,0);
      _Tab:=exec('pda_tab2_wsk','plan_dostaw','TAB');
      _ndx:=exec('pda_tab2_wsk','plan_dostaw','NDX2');
      _Tab.index(_ndx);
      _Tab.first();
      __pda.TAB1.D:=_Tab.D;
      _wer1:=exec('pda_tab2_wsk','plan_dostaw','WER1');
      _wer2:=exec('pda_tab2_wsk','plan_dostaw','WER2');
      _wer3:=exec('pda_tab2_wsk','plan_dostaw','WER3');
      grp_disp(_Tab,_wer1);
      grp_disp(_Tab,_wer2);
      {? M.M_ATR<>null() || grp_disp(_Tab,_wer3) ?}
   ";
   _wer:=__pda.WER_GR:=_Tab1t.grp_make('Szczegóły pozycji: %1 — %2'@[M.KTM,M.N],_fb
      ,'#erqhbcvaop'+{? _paramsa.PD_P || 'qeih' || 'null' ?});

:: wg dat
   _far:="
      _Tab:=exec('pda_tab1_wsk','plan_dostaw','TAB');
      __pda.TAB1.D:=_Tab.D
   ";
   _fb:="
      _Tab:=exec('pda_tab1_wsk','plan_dostaw','TAB');
      _ndx:=exec('pda_tab1_wsk','plan_dostaw','NDX1');
      _Tab.index(_ndx);
      _Tab.prefix('1');
      _Tab.find_key(0,__pda.TAB1.D)
   ";
   _Tab1t.grp_sel(_wer,,_Tab1.WER1.WER,'Wg daty'@,_far,,,,_fb,,,,'maximized_with_title');

   _Tab1t.tab_splt(_wer,,'vertical','szczegoly1');

:: wykres
   _ctr:=exec('create','#desktop',_Tab1t,'pd_wykres',_wer,,,'Wykres');
::   ,'[icon: xwin16.png:125]Wykres');

   _Tab1t.tab_splt(_wer,'szczegoly1','horizontal','zapisy1');

   _far:={? _paramsa.PD_P || "exec('tab2_btn_opt','plan_dostaw')" || "" ?};
   _fb:="
      _Tab:=exec('pda_tab2_wsk','plan_dostaw','TAB');
      _ndx:=exec('pda_tab2_wsk','plan_dostaw','NDX2');
      _Tab.index(_ndx)
   ";
   _fb+={? _paramsa.PD_P || "; exec('tab2_btn_opt','plan_dostaw')" || "" ?};
   _fb:=$_fb;
   _Tab1t.grp_sel(_wer,_Tab2t,_Tab2.WER2.WER,,_far,,,,_fb,,,,'maximized_with_title');

:: wg magazynów
   _far:="
      _Tab:=exec('pda_tab1_wsk','plan_dostaw','TAB');
      __pda.TAB1.D:=_Tab.D
   ";
   _fb:="
      _Tab:=exec('pda_tab1_wsk','plan_dostaw','TAB');
      _ndx:=exec('pda_tab1_wsk','plan_dostaw','NDX2');
      _Tab.index(_ndx);
      _Tab.prefix('2');
      _Tab.find_key(0,__pda.TAB1.D)
   ";
   _Tab1t.grp_sel(_wer,,_Tab1.WER2.WER,'Wg magazynów'@,_far,,,,_fb,,,,'maximized_with_title');

   _Tab1t.tab_splt(_wer,,'vertical','zapisy2');

   _far:={? _paramsa.PD_P || "exec('tab2_btn_opt','plan_dostaw')" || "" ?};
   _fb:="
      _Tab:=exec('pda_tab2_wsk','plan_dostaw','TAB');
      _ndx:=exec('pda_tab2_wsk','plan_dostaw','NDX1');
      _Tab.index(_ndx)
   ";
   _fb+={? _paramsa.PD_P || "; exec('tab2_btn_opt','plan_dostaw')" || "" ?};
   _fb:=$_fb;
   _Tab1t.grp_sel(_wer,_Tab2t,_Tab2.WER1.WER,,_far,,,,_fb,,,,'maximized_with_title');

:: wg atrybutów
   {? _atr
   || _far:="
         _Tab:=exec('pda_tab1_wsk','plan_dostaw','TAB');
         __pda.TAB1.D:=_Tab.D
      ";
      _fb:="
         _Tab:=exec('pda_tab1_wsk','plan_dostaw','TAB');
         _ndx:=exec('pda_tab1_wsk','plan_dostaw','NDX1');
         _Tab.index(_ndx);
         _Tab.prefix('3');
         _Tab.find_key(0,__pda.TAB1.D)
      ";
      _Tab1t.grp_sel(_wer,,_Tab1.WER3.WER,'Wg atrybutów'@,_far,,,,_fb,,,,'maximized_with_title');

      _Tab1t.tab_splt(_wer,,'horizontal','zapisy3',15);

      _far:={? _paramsa.PD_P || "exec('tab2_btn_opt','plan_dostaw')" || "" ?};
      _fb:="
         _Tab:=exec('pda_tab2_wsk','plan_dostaw','TAB');
         _ndx:=exec('pda_tab2_wsk','plan_dostaw','NDX4');
         _Tab.index(_ndx)
      ";
      _fb+={? _paramsa.PD_P || "; exec('tab2_btn_opt','plan_dostaw')" || "" ?};
      _fb:=$_fb;
      _Tab1t.grp_sel(_wer,_Tab2t,_Tab2.WER3.WER,,_far,,,,_fb,,,,'maximized_with_title')
   ?};

   _Tab1t.win_sel(_wer);
   _Tab1t.select();

   _Tab1t.win_sel();
   _Tab1t.win_del(_wer);
   _Tab1t.win_del(_Tab1.WER1.WER);
   _Tab2t.win_del(_Tab2.WER1.WER);
   _Tab2t.win_del(_Tab2.WER2.WER)
?};

:: aktualizacja statusu
{? _paramsa.PD_P_ODS & _paramsa.PD_P
||
:: stan pozycji planu dostaw
   _params:=exec('pda_a','qplan_dostaw');
   _params.M:=PD_P.M;
   _params.DK:=PD_P.PD_N().DK;
   _params.TK:=PD_N.TK;
   exec('stat','%plan_dostaw',_params);

   PD_P.get();
   PD_P.STAT:=_params.STAT;
   PD_P.STAT_MG:=_params.STAT_MG;
   PD_P.STAT_DA:=_params.STAT_DA;
   PD_P.STAT_IL:=_params.STAT_IL;
   PD_P.ILP:=_params.ILP;
   PD_P.ILR:=_params.ILR;
   PD_P.STAN:=_params.STAN;
   PD_P.put()
?};

:: wynik
_Tab1t.cntx_psh();
_Tab1t.index(exec('pda_tab1_wsk','plan_dostaw','NDX1'));
_Tab1t.prefix('1');
_date:={? _paramsa.DW<date() || date() || _paramsa.DW ?};
{? _Tab1t.last()
||
   {? _Tab1t.D<_date || _date:=_Tab1t.D ?};
   {? _Tab1t.find_key(0,_date)
   || _wyn.DOSTEPNY:=_paramsa.IL<=_Tab1t.STAN;
      _wyn.IL_DOST:=_Tab1t.STAN;
      {? _wyn.DOSTEPNY
      || _wyn.NA_KIEDY:=_Tab1t.D;
         _wyn.IL:=_Tab1t.STAN
      |? _paramsa.IL
      || _loop:=_Tab1t.next();
         {!
         |?
            _loop:=
               {? _paramsa.IL<=_Tab1t.STAN
               || _wyn.NA_KIEDY:=_Tab1t.D;
                  _wyn.IL:=_Tab1t.STAN;
                  0
               || _Tab1t.next()
               ?}
         !}
      ?}
   ?}
?};
_Tab1t.cntx_pop();

:: uzupełnienie stanu
{? _paramsa.UZUP_ST
||
   exec('uzup','plan_dostaw',_paramsa,0);
   {? _paramsa.PD_P_ODS & _paramsa.PD_P
   ||
      _uzup_st:=_paramsa.UZUP_ST;
      _disp:=_paramsa.DISP;
      _paramsa.UZUP_ST:=0;
      _paramsa.DISP:=0;
      exec('pda','qplan_dostaw',_paramsa);
      _paramsa.UZUP_ST:=_uzup_st;
      _paramsa.DISP:=_disp
   ?}
?};

{? _paramsa.ODSW=0 || _czysc() ?};

_wyn


\env_create
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Tworzy środowisko dla analiz
::   WY: 0 / 1 (czy udało się utworzyć środowisko)
::  OLD: \env_create/pd_ap.fml
::----------------------------------------------------------------------------------------------------------------------
exec('env_delete','plan_dostaw');

__ENV_AN:=obj_new('IL','DOKL','DATE','TIME','TAB','NDX_LP','NDX_MAIN','WER','RED','SKIP','INSERT','USED');

:: Analizowana ilość (np. dla technologii)
__ENV_AN.IL:=0;
__ENV_AN.DOKL:=ST.DOKL;

:: Data i godzina (np. gdy nie ma na źródłowych zapisach - karta technologiczna, przepis planistyczny)
__ENV_AN.DATE:=date();
__ENV_AN.TIME:=time();

:: lista pozycji wykluczonych z analizy
__ENV_AN.SKIP:=tab_tmp(1,
   'TAB','INTEGER','Reference rekordu analizy',
   'REF','STRING[16]','Reference wykluczonego zapisu'
);

:: lista pozycji dodanych do analizy
__ENV_AN.INSERT:=tab_tmp(4,
   'TAB','INTEGER','Reference rekordu analizy',
   'REF','STRING[16]','Reference dodanego zapisu',
   'D','DATE','Data',
   'T','TIME','Czas',
   'IL','REAL','Ilość'
);

:: lista użytych materiałów, które należy uwzględnić w kolejnych pozycjach analiz
__ENV_AN.USED:=tab_tmp(3,
   'M','STRING[16]','$M.ref()',
   'D','DATE','Data',
   'T','TIME','Czas',
   'IL','REAL','Ilość'
);

:: Tabela
:: NUCO - dodanie pól do analizy - aby analiza była zgodna ze szczegółami po naciśnięciu przycisku SZCZEGÓŁY
__ENV_AN.TAB:=tab_tmp(4,
   'KTM','STRING[50]','Indeks materiału'@,
   'DW','DATE','Wymagana dostępność — data'@,
   'TW','TIME','Wymagana dostępność — godzina'@,
   'XW','REAL','Wymagana dostępność — tm_stamp'@,
   'LP','INTEGER','Lp.'@,
   'M','INTEGER','#M.ref()',
   'N','STRING[100]','Nazwa materiału'@,
   'DOKL','INTEGER','Dokładność'@,
   'IL','REAL','Ilość'@,
   'JM','STRING[10]','jm'@,
   'DOSTEPNY','INTEGER','Dostępny na wymagany termin'@,
   'IL_DOST','REAL','Ilość dostępna na wymagany termin'@,
   'DM','DATE','Możliwa dostępność — data'@,
   'TM','TIME','Możliwa dostępność — godzina'@,
   'XM','REAL','Możliwa dostępność — tm_stamp'@,
   'DD','DATE','Możliwa dostawa — data'@,
   'TD','TIME','Możliwa dostawa — godzina'@,
   'XD','REAL','Możliwa dostawa — tm_stamp'@,
   'PD_D_ZN','STRING[100]','Zestaw formuł do obliczeń'@,
   'MAG_Z','STRING[100]','Magazyny do obliczeń'@,
   'OPIS','STRING[200]','Opis pozycji'@,
   'ZASOB','STRING[100]','Zasób'@,
   'ZMIANA','STRING[20]','Zmiana prod.'@,
   'IL_ALL','REAL','Ilość dostępna na wymagany termin (analizowane magazyny)'@,
   'IL_ZAM','REAL','Ilość dozamówienia wew.'@
);
_tab:=__ENV_AN.TAB;
__ENV_AN.NDX_MAIN:=_tab.index('?');
__ENV_AN.NDX_LP:=_tab.ndx_tmp(,,'LP',,);

_tab.fld_attr('DOKL',2);
_tab.fld_attr('XW',2);
_tab.fld_attr('XM',2);
_tab.fld_attr('XD',2);
_fd:="
   'out_prec='+
   {? (2+cur_kwin())='e_'
   || $cur_tab(1,1).DOKL
   || $ST.DOKL
   ?}
";
_tab.fld_fml('IL','DISPLAY_FORMAT',_fd);
_tab.fld_fml('IL_DOST','DISPLAY_FORMAT',_fd);
_fbd:="
   {? cur_tab(1,1).XW<SYSLOG.tm_stamp()
   || exec('flddisp','color','PD_AP#XW#01')
   || ~~
   ?}
";
_tab.fld_fml('DW','BEFORE_DISPLAY',_fbd);
_tab.fld_fml('TW','BEFORE_DISPLAY',_fbd);

:: Okno wertowania
_wer:=__ENV_AN.WER:=_tab.mk_sel('Analiza dostępności materiałów w czasie'@,,,'#analizadostep',1,1,,,'U');
_tab.win_fld(_wer,,'KTM',,,20,,,'Indeks'@);
_tab.win_fld(_wer,,'N',,,30,,,'Nazwa'@);
_tab.win_fld(_wer,,'IL',,,-15,ST.DOKL,,'Ilość'@);
_tab.win_fld(_wer,,'JM',,,5,,,'jm'@);
_tab.win_fld(_wer,,'DW',,,-10,,,'Data wymagana'@,,'Wymagana dostępność — data'@);
_tab.win_fld(_wer,,'TW',,,-8,,,'Czas wymagany'@,,'Wymagana dostępność — godzina'@);
_tab.win_fld(_wer,,'DOSTEPNY',,,-3,,,'Ok'@,,'Oznacza, czy surowiec jest dostępny na wymagany termin'@,2,,"1","0");
_tab.win_fld(_wer,,'IL_DOST',,,-15,ST.DOKL,,'St. wydziału'@,,'Stan na wydziale'@);
_tab.win_fld(_wer,,'IL_ALL',,,-15,ST.DOKL,,'St. poza wydzłem'@,,'Stan na magazynach poza wydziałem'@);
_tab.win_fld(_wer,,'IL_ZAM',,,-15,ST.DOKL,,'Do zam.'@,,'Ilość do zamówienia'@);

::_tab.win_fld(_wer,,'DM',,,-10,,,'Data dostępności'@,,'Możliwa dostępność — data'@);
::_tab.win_fld(_wer,,'TM',,,-8,,,'Czas dostępności'@,,'Możliwa dostępność — godzina'@);
::_tab.win_fld(_wer,,'DD',,,-10,,,'Data dostawy'@,,'Możliwa dostawa — data'@);
::_tab.win_fld(_wer,,'TD',,,-8,,,'Czas dostawy'@,,'Możliwa dostawa — godzina'@);

:: akcje
_fb:="exec('an_szczegoly','qplan_dostaw')";
_tab.win_act(_wer,,'Formuła','Szcz&egóły'@@,,,_fb,,,,,,'E');
_fb:="sel_exit();1";
_tab.win_act(_wer,,'Formuła','&Odśwież'@@,,,_fb,,,,,,'O');
_fb:="exec('bilans_s','qbilans_sur',0)";
_tab.win_act(_wer,,'Formuła','&Bilansuj pozycje'@@,,,_fb,,,,,,'B');
_fb:="exec('bilans_s','qbilans_sur',1)";
_tab.win_act(_wer,,'Formuła','Bilansuj z &agregacją'@@,,,_fb,,,,,,'A');
_fb:="_ref_m:=exec('FindInSet','#table','M','MATKTM',cur_tab().KTM,cur_tab().KTM);
      exec('info_zam','magazyn_stan','wszystkie magazyny';5,_ref_m)
      ";
_tab.win_act(_wer,,'Formuła','Szczegóły &materiału'@@,,,_fb,,,,,,'M');

_fb:="exec('zest_sur_wyd','qbilans_sur',cur_tab())";
_tab.win_act(_wer,,'Formuła','Surowce na stanie &wydziału'@@,,,_fb,,,,,,'W');

_fb:="exec('zest_sur_wym','qbilans_sur',cur_tab())";
_tab.win_act(_wer,,'Formuła','Su&rowce wymagane na wydziale'@@,,,_fb,,,,,,'R');

:: Kolory - krytyczny jak nie ma stanu lub ilość zamawiana jest większa od stanu,
::          ostrzeżenie jek ilość wymagana jest większa od stanu
_fb:="{? cur_tab().IL_ZAM>cur_tab().IL_ALL
      || {? var_pres('Color')>0 || Color.fnd_kol('PD_AP#01#03') || '' ?}
      |? cur_tab().IL_ZAM>0 & cur_tab().IL_ZAM<cur_tab().IL_ALL
      || {? var_pres('Color')>0 || Color.fnd_kol('PD_AP#01#02') || '' ?}
      || ~~
      ?}";
_tab.win_act(_wer,,'Rekord',,,,_fb);

:: _fb:="exec('legenda','color','PD_AP#01','@PD_AP#XW')";
:: _tab.win_act(_wer,,'Formuła','&Legenda'@@,,,_fb,,,,,,'L');
:: _fb:="exec('pd_ap_brek','plan_dostaw')";
:: _tab.win_act(_wer,,'Rekord',,,,_fb);

:: przyciski
_btn:=_tab.win_btn(_wer,'text='+'Szcz&egóły analizy'@,'menu:E',,,,,,'noempty');
_tab.btn_sopt(_wer,_btn,'tooltip='+'Analiza dostępności materiału w czasie'@);
_btn4:=_tab.win_btn(_wer,'text='+'Szczegóły &materiału'@,'menu:M',,,,,,'noempty');
_tab.btn_sopt(_wer,_btn4,'tooltip='+'Szczegółowe informacje o materiale'@);
_btn3:=_tab.win_btn(_wer,'text='+'&Odśwież'@,'menu:O',,,,,,'noempty');
_tab.btn_sopt(_wer,_btn3,'tooltip='+'Ponowne przeliczenie analizy'@);
_btn2:=_tab.win_btn(_wer,'text='+'&Bilansuj pozycje'@,'menu:B',,,,,,'noempty');
_tab.btn_sopt(_wer,_btn2,'tooltip='+'Utworzenie zamówień wewnętrznych dla pozycji analizy'@);
_btn1:=_tab.win_btn(_wer,'text='+'Bilansuj z &agregacją'@,'menu:A',,,,,,'noempty');
_tab.btn_sopt(_wer,_btn1,'tooltip='+'Agregacja pozycji analizy i utworzenie zamówień wewnętrznych'@);
_btn5:=_tab.win_btn(_wer,'text='+'Surowce na stanie &wydziału'@,'menu:W',,,,,,'noempty');
_tab.btn_sopt(_wer,_btn5,'tooltip='+'Zestawienie surowców będących na stanie analizowanego wydziału'@);
_btn6:=_tab.win_btn(_wer,'text='+'Su&rowce wymagane na wydziale'@,'menu:R',,,,,,'noempty');
_tab.btn_sopt(_wer,_btn6,'tooltip='+'Zestawienie surowców wymaganych na analizowanym wydziale'@);

:: Okno redakcyjne
_red:=__ENV_AN.RED:=_tab.mk_edit('Analiza dla materiału'@,,'#analizadostmat');
_tab.win_esep(_red,'Materiał'@);
_tab.win_efld(_red,,'KTM',,,,,,'Indeks'@);
_tab.win_efld(_red,,'N',,,,,,'Nazwa'@);
_tab.win_esep(_red,'Dostępność'@);
_tab.win_efld(_red,,'IL',,,13);
_tab.win_efld(_red,AH,'H');
_tab.win_efld(_red,,'DW');
_tab.win_efld(_red,,'TW');
_tab.win_efld(_red,AH,'H');
_tab.win_efld(_red,,'DOSTEPNY',,,3,,,'Dostępny'@,,,'check-box','check_label="%1"'['Surowiec jest dostępny'@],"1","0");
_tab.win_efld(_red,,'IL_DOST',,,13);
_tab.win_efld(_red,AH,'H');
_tab.win_efld(_red,,'DM');
_tab.win_efld(_red,,'TM');
_tab.win_efld(_red,AH,'H');
_tab.win_efld(_red,,'DD');
_tab.win_efld(_red,,'TD');

_tab.win_sel(_wer);
_tab.win_edit(_red);
1


\an_szczegoly
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Wyświetlenie szczegółów dla pozycji analizy
::  OLD: \an_szczegoly/pd_ap.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=__ENV_AN.TAB;
_skip:=__ENV_AN.SKIP;
_insert:=__ENV_AN.INSERT;

M.cntx_psh();
M.clear();
{? M.seek(_tab.M,)
||
   _args:=exec('pda_a','qplan_dostaw');
   _args.M:=M.ref();
   _args.TM_STAMP:=SYSLOG.tm_stamp();
   _args.DK:=_tab.DW+1;
   _args.TK:=time(6,0,0);
   _args.IL:=_tab.IL;
   _args.DW:=_tab.DW;
   _args.TW:=_tab.TW;
::   NUCO - dodatkowe parametry analiz - zestaw formuł , zestaw magazynów.
   _args.PD_D_ZN:=_tab.PD_D_ZN;
   _args.MAG_Z:=_tab.MAG_Z;

   _skip.prefix(_tab.ref());
   {? _skip.first()
   || {!
      |? _args.skip_add(_skip.REF);
         _skip.next()
      !}
   ?};
   _insert.prefix(_tab.ref());
   {? _insert.first()
   || {!
      |? _args.insert_add(_insert.REF,_insert.D,_insert.T,_insert.IL);
         _insert.next()
      !}
   ?};
   _args.DISP:=1;
   exec('pda','qplan_dostaw',_args)
?};
M.cntx_pop();
~~


\an_add_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Argument funkcji exec('an_add','plan_dostaw')
::   WY: _args
::  OLD: \an_add_a/pd_ap.fml
::----------------------------------------------------------------------------------------------------------------------
:: NUCO - dodanie dodatkowych parametrów do analiyz (zestaw formuł oraz z magazynów)
_args:=obj_new('M','IL','DW','TW','DOSTEPNY','IL_DOST','DM','TM','SKIP','skip_chk','skip_add','skip_del'
   ,'INSERT','insert_add','PD_D_ZN','MAG_Z','OPIS','IL_ALL', 'ZASOB', 'ZMIANA'
);

:: Materiał - #M.ref()
_args.M:=null();
:: Ilość
_args.IL:=0;
:: Data wymagana
_args.DW:=date(0,0,0);
:: Godzina wymagana
_args.TW:=time(0,0,0);
:: Czy dostępny
_args.DOSTEPNY:=0;
:: Ilość dostępna na wymagany termin
_args.IL_DOST:=0;
:: Data możliwa
_args.DM:=date(0,0,0);
:: Godzina możliwa
_args.TM:=time(0,0,0);
:: lista pozycji wykluczonych z analizy
_args.SKIP:=tab_tmp(1,'REF','STRING[16]','Reference wykluczonego zapisu');
_args.skip_chk:="~.SKIP.find_key(_a)";
_args.skip_add:="{? ~.SKIP.find_key(_a) || .SKIP.REF:=_a; .SKIP.add() ?}";
_args.skip_del:="{? .SKIP.find_key(_a) || .SKIP.del() ?}";
:: lista dodawanych tymczasowo pozycji z analizy
_args.INSERT:=tab_tmp(3,
   'REF','STRING[16]','Reference dodawanego zapisu',
   'D','DATE','Data',
   'T','TIME','Czas',
   'IL','REAL','Ilość'
);
_args.insert_add:="
   {? ~.INSERT.find_key(_a,_b,_c)
   || .INSERT.REF:=_a;
      .INSERT.D:=_b;
      .INSERT.T:=_c;
      .INSERT.IL:=_d;
      .INSERT.add()
   ?}
";
:: NUCO - dodatkowe pola do analizy PD_D_ZN - zestaw formuł i MAG_Z - magazyny do analizy, OPIS - opis pozycji analizy
::        IL_ALL - ilość na magazynach z których możliwe jest przesunięcie, ZASOB - kod i nazwa zasobu
_args.PD_D_ZN:='';
_args.MAG_Z:='';
_args.OPIS:='';
_args.IL_ALL:=0;
_args.ZASOB:='';
_args.ZMIANA:='';

:: Zwracamy tablicę
_args


\an_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Dodanie wpisu do tabeli z analizą
::   WE: _a - argument - wynik formuly exec('an_add_a','plan_dostaw')
::   WY: wynik add()
::  OLD: \an_add/pd_ap.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=_a;

M.cntx_psh();
M.clear();
{? M.seek(_args.M)
||
   _skip_add:="
      __ENV_AN.SKIP.TAB:=_a;
      __ENV_AN.SKIP.REF:=_b;
      __ENV_AN.SKIP.add()
   ";
   _insert_add:="
      __ENV_AN.INSERT.TAB:=_a;
      __ENV_AN.INSERT.REF:=_b;
      __ENV_AN.INSERT.D:=_c;
      __ENV_AN.INSERT.T:=_d;
      __ENV_AN.INSERT.IL:=_e;
      __ENV_AN.INSERT.add()
   ";

   _tab:=__ENV_AN.TAB;
   _tab.cntx_psh();
   _tab.index(__ENV_AN.NDX_LP);
   _tab.prefix();
   {? _tab.last() || _lp:=_tab.LP+1 || _lp:=1 ?};
   _tab.cntx_pop();

   _tab.LP:=_lp;
   _tab.M:=#_args.M;
   _tab.KTM:=M.KTM;
   _tab.N:=M.N;
   _tab.DOKL:=M.DOKL;
   _tab.IL:=_args.IL;
   _tab.JM:=M.J().KOD;
   _tab.DW:=_args.DW;
   _tab.TW:=_args.TW;
   _tab.XW:=exec('create','#tm_stamp',_tab.DW,_tab.TW);
   _tab.DOSTEPNY:=_args.DOSTEPNY;
   _tab.IL_DOST:=_args.IL_DOST;
   _tab.DM:=_args.DM;
   _tab.TM:=_args.TM;
   _tab.XM:=exec('create','#tm_stamp',_tab.DM,_tab.TM);
::   _dt:=exec('mdost_first','plan_dostaw',M.ref(),_tab.DW);
::   _tab.DD:=_dt.DATE;
::   _tab.TD:=_dt.TIME;
   _tab.DD:=date(0,0,0);
   _tab.TD:=time(0,0,0);

::   NUCO - dodatkowe parametry analizy - zestaw formuł oraz zestaw magazynów
   _tab.PD_D_ZN:=_args.PD_D_ZN;
   _tab.MAG_Z:=_args.MAG_Z;
   _tab.OPIS:=_args.OPIS;
   _tab.IL_ALL:=_args.IL_ALL;
   _tab.ZASOB:=_args.ZASOB;
   _tab.ZMIANA:=_args.ZMIANA;
   _tab.IL_ZAM:={? _tab.IL_DOST>=_tab.IL
                || 0
                || {? _tab.IL_DOST>0
                   || _tab.IL-_tab.IL_DOST
                   || _tab.IL
                   ?}
                ?};

::   obj_del(_dt);
   _tab.XD:=exec('create','#tm_stamp',_tab.DD,_tab.TD);
   _res:=_tab.add();
   {? _res
   || {? _args.SKIP.first()
      || {!
         |? _skip_add(_tab.ref(),_args.SKIP.REF);
            _args.SKIP.next()
         !}
      ?};
      {? _args.INSERT.first()
      || {!
         |? _insert_add(
               _tab.ref(),
               _args.INSERT.REF,
               _args.INSERT.D,
               _args.INSERT.T,
               _args.INSERT.IL
            );
            _args.INSERT.next()
         !}
      ?}
   ?}
||
   _res:=0
?};
M.cntx_pop();
_res


\pd_buf_zastosuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Czy stosować PD_BUF w analizie?
::   WE: _a - MG.ref()
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_mg:={? var_pres('_a')=type_of(null()) || _a || PD_BUF.MG ?};
_wyn:=1;
:: NUCO - analiza magazynów wg. zmiennej z __pda.MAG_Z jeśli został założona, jeśli nie - standardowe działanie funkcji
{? var_press('__pda')>0 & var_press('MAG_Z',__pda)>0 & __pda.MAG_Z<>''
|| _mg_sym:=exec('FindAndGet','#table',MG,_mg,,"MG.SYM",'');
   {? _mg_sym<>''
   || _mg_sym:=','+_mg_sym+',';
      _wyn:=(__pda.MAG_Z*_mg_sym)>0
   || _wyn:=1
   ?}
||
:: Magazyny
   PD_MG.cntx_psh();
   PD_MG.index('UNIK');
   PD_MG.prefix('N',PD_N.ref(),null());
   _mg_wym:=PD_MG.first();
   {? _mg_wym
   ||
      {? _mg=null() || _wyn:=0
      |? ~PD_MG.find_key(_mg) || _wyn:=0
      ?}
   ?};
   PD_MG.cntx_pop()
?};
_wyn


\grupuj_koszyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TP [NUCO_2226]
:: OPIS: Grupowanie zleceń w koszyku planu dostaw wg dat
::   WE: _a - PD_N.ref,
::       _b - PD_P.ref,
::       _c - rodzaj grupowania ['T' - tygodniowo, 'M' - miesięcznie, 'K' - kwartalnie, 'D' - dowolny odstęp dniowy]
::       [_d] - w przypadku jeśli _c = 'D' należy podać odstęp dniowy co ile mają być grupowane zamówienia
::       [_e] - 0 - bez komunikatów, 1 -(domyślnie) z komunikatami
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ref_pd_n:=_a;
_ref_pd_p:=_b;
_data_od:=date();
_podzial:=_c;
_liczba_dni:=0;
_kom:=1;
_result:=1;
_msg:='';
{? _podzial='D' & _>=4  || _liczba_dni:=_d ?};
{? _>=5 || _kom:=_e ?};

:: przygotowanie tabeli koszyka
::_tab:=sql('select PD_K.REFERENCE as REF,
::                  PD_K.DZ,
::                  PD_K.DZ as N_DZ,
::                  PD_K.DD,
::                  PD_K.DD as N_DD
::             from PD_K
::            where PD_K.PD_N=:_a and PD_K.PD_P=:_b and PD_K.DZ>to_date(:_c)
::            order by DZ', _ref_pd_n, _ref_pd_p, _data_od);
_tab:=sql('select PD_K.REFERENCE as REF,
                  PD_K.DZ,
                  PD_K.DZ as N_DZ,
                  PD_K.DD,
                  PD_K.DD as N_DD
             from PD_K
            where PD_K.PD_N=:_a and PD_K.PD_P=:_b
            order by DZ,DD', _ref_pd_n, _ref_pd_p);
{? _tab.first()
||
:: Układanie okresami
   {? _podzial='T' | _podzial='M' | _podzial='K'
   || _data:=_tab.DZ;
      _data_dostawy:=_tab.DD;
      _f_okres:="{? _a='T'
                 || exec('NumberOfWeek','#datetime',_b)
                 |? _a='M'
                 || _b~2
                 |? _a='K'
                 || exec('kwartal','#datetime',_b~2)
                 || 0
                 ?}";
      _okres:=_f_okres(_podzial,_data);
      {!
      |? {? _okres<>_f_okres(_podzial,_tab.DZ)
         || _data:=_tab.DZ;
            _data_dostawy:=_tab.DD;
            _okres:=_f_okres(_podzial,_data)
         ?};
         {? _tab.DZ>=_data
         || _tab.N_DZ:=_data;
            _tab.N_DD:=_data_dostawy;
            _tab.put()
         ?};
         _tab.next()
      !}
:: Układanie dowolnym okresem
   |? _podzial='D' & _liczba_dni>1
   || _data:=_tab.DZ;
      _data_dostawy:=_tab.DD;
      _okres:=_tab.DZ+_liczba_dni;
      {!
      |? {? _okres<_tab.DZ
         || _data:=_tab.DZ;
            _data_dostawy:=_tab.DD;
            _okres:=_tab.DZ+_liczba_dni
         ?};
         {? _tab.DZ>=_data
         || _tab.N_DZ:=_data;
            _tab.N_DD:=_data_dostawy;
            _tab.put()
         ?};
         _tab.next()
      !}
:: Błąd w danych nie da się układać
   || _msg:='Błędne parametry wywołania funkcji podziału';
      _result:=0
   ?}
|| _msg:='Brak pozycji koszyka do grupowania';
   _result:=0
?};

:: Zmiana dat w pozycjach koszyka zgodnie z tabelką tymczasową
{? _result & _tab.first()
|| {!
   |? {? _tab.DZ<>_tab.N_DZ | _tab.DD<>_tab.N_DD
      || _args:=obj_new('DZ','DD');
         _args.DZ:=_tab.N_DZ;
         _args.DD:=_tab.N_DD;
         exec('FindAndGet','#table',PD_K,_tab.REF,,"PD_K.DZ:=_b.DZ; PD_K.DD:=_b.DD; PD_K.put()",0,_args);
         &_args
      ?};
      _tab.next()
   !}
?};

{? _result=0 & _kom & _msg<>''
|| FUN.error(_msg)
?};

_result


\icon_zd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PeKa [NUCO_22.26]
:: OPIS: Formula szuka zapisow z bufora w celu okreslenia czy nie mamy zamowienia na coś, co nie ma zapotrzebowania
::       efektem tego jest ikona na pozycji planu dostawy
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: weryfikacja czy sa jakies zapotrzebowania
{? PD_P.PD_N().DK<>date(0,0,0)
|| QNUCOZ.PX:=sql('select sum(PD_BUF.IL) as PX from PD_BUF where PD_BUF.M=:_a and PD_BUF.KOD=\'PX_SUR\'
                  and PD_BUF.D<to_date(:_b)',PD_P.M,PD_P.PD_N().DK).PX
|| QNUCOZ.PX:=sql('select sum(PD_BUF.IL) as PX from PD_BUF where PD_BUF.M=:_a and PD_BUF.KOD=\'PX_SUR\'',PD_P.M).PX
?};

_zlim:=sql('select sum(PD_BUF.IL) as ZLIM
                           from PD_BUF
                           where PD_BUF.M=:_a and
                           (PD_BUF.KOD=\'ZLIM_N\' or PD_BUF.KOD=\'ZLIM_T\')  order by 1',PD_P.M).ZLIM;
_zkpl:=sql('select ZK_P.REFERENCE as ZKPREF from ZK_P where ZK_P.M=:_a and ZK_P.M_ZLIM<>\'\' order by 1',PD_P.M);
_zwew:=sql('select REF as BUFREF, IL from PD_BUF where PD_BUF.M=:_a and PD_BUF.KOD=\'ZAM_WEW\' order by 1',PD_P.M);
_zlimzkp:=sql('select sum(:_a.IL) as ZLIMZKP from :_a join :_b using(:_a.BUFREF, :_b.ZKPREF)',_zwew,_zkpl).ZLIMZKP;
QNUCOZ.ZLIM:=_zlim+_zlimzkp;

:: weryfikacja czy mamy jakies zamowienia lub potwierdzenia
QNUCOZ.ZD:=sql('select sum(PD_BUF.IL) as ZD from PD_BUF where PD_BUF.M=:_a and PD_BUF.KOD=\'ZD\'',PD_P.M).ZD;
QNUCOZ.ZDP:=sql('select sum(PD_BUF.IL) as ZDP from PD_BUF where PD_BUF.M=:_a and PD_BUF.KOD=\'ZDP\'',PD_P.M).ZDP;

_rozchody:=QNUCOZ.PX+QNUCOZ.ZLIM;
_przychody:=QNUCOZ.ZD+QNUCOZ.ZDP;

_wyn:={? _rozchody=0 & _przychody>0 || '|button-error' || '' ?};
_wyn


\ilptw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PeKa [NUCO_22.26]
:: OPIS: Formula okresla jaka ilosc powinna zostac potwierdzona jesli wystepuja braki a mamy zamowienie dostawy
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: weryfikacja czy sa jakies zapotrzebowania z uwzglednieniem daty konca analizy
_dk:=PD_P.PD_N().DK;
{? _dk<>date(0,0,0)
||
   _px:=sql('select sum(PD_BUF.IL) as PX from PD_BUF where PD_BUF.M=:_a and PD_BUF.KOD=\'PX_SUR\'
                  and PD_BUF.D<to_date(:_b)',PD_P.M,_dk).PX;
   _zlim:=sql('select sum(PD_BUF.IL) as ZLIM
                           from PD_BUF
                           where PD_BUF.M=:_a
                           and (PD_BUF.KOD=\'ZLIM_N\' or PD_BUF.KOD=\'ZLIM_T\')
                           and PD_BUF.D<to_date(:_b) order by 1',PD_P.M,_dk).ZLIM;
   _mp:=sql('select sum(PD_BUF.IL) as MP from PD_BUF where PD_BUF.M=:_a
                           and PD_BUF.KOD=\'MP\'
                           and PD_BUF.D<to_date(:_b)',PD_P.M,_dk).MP;
   _zkpl:=sql('select ZK_P.REFERENCE as ZKPREF from ZK_P where ZK_P.M=:_a and ZK_P.M_ZLIM<>\'\'order by 1',PD_P.M);
   _zwew:=sql('select REF as BUFREF, IL from PD_BUF where PD_BUF.M=:_a
                           and PD_BUF.KOD=\'ZAM_WEW\'
                           and PD_BUF.D<to_date(:_b) order by 1',PD_P.M,_dk);
   _zlimzkp:=sql('select sum(:_a.IL) as ZLIMZKP from :_a join :_b using(:_a.BUFREF, :_b.ZKPREF)',_zwew,_zkpl).ZLIMZKP
||
   _px:=sql('select sum(PD_BUF.IL) as PX from PD_BUF where PD_BUF.M=:_a and PD_BUF.KOD=\'PX_SUR\'',PD_P.M).PX;
   _zlim:=sql('select sum(PD_BUF.IL) as ZLIM
                           from PD_BUF
                           where PD_BUF.M=:_a and
                           (PD_BUF.KOD=\'ZLIM_N\' or PD_BUF.KOD=\'ZLIM_T\')  order by 1',PD_P.M).ZLIM;
   _zkpl:=sql('select ZK_P.REFERENCE as ZKPREF from ZK_P where ZK_P.M=:_a and ZK_P.M_ZLIM<>\'\' order by 1',PD_P.M);
   _zwew:=sql('select REF as BUFREF, IL from PD_BUF where PD_BUF.M=:_a and PD_BUF.KOD=\'ZAM_WEW\' order by 1',PD_P.M);
   _zlimzkp:=sql('select sum(:_a.IL) as ZLIMZKP from :_a join :_b using(:_a.BUFREF, :_b.ZKPREF)',_zwew,_zkpl).ZLIMZKP;
   _mp:=sql('select sum(PD_BUF.IL) as MP from PD_BUF where PD_BUF.M=:_a and PD_BUF.KOD=\'MP\'',PD_P.M).MP
?};

_rozchody:=_zlim+_zlimzkp+_px;

:: weryfikacja czy mamy jakies zamowienia lub potwierdzenia
_zd:=sql('select sum(PD_BUF.IL) as ZD from PD_BUF where PD_BUF.M=:_a and PD_BUF.KOD=\'ZD\'',PD_P.M).ZD;
_zdp:=sql('select sum(PD_BUF.IL) as ZDP from PD_BUF where PD_BUF.M=:_a and PD_BUF.KOD=\'ZDP\'',PD_P.M).ZDP;

:: jesli wynik daje ikone to dodatkowo wyliczam kolumne ile wywowolac (czyli wykonać potwierdzenie do zamówienia)
{? PD_P.STAT_IL>0 & PD_P.STAN>0 & _zd>0
|| _sc:=sql('select sum(PD_BUF.IL) as SC from PD_BUF where PD_BUF.M=:_a and PD_BUF.KOD=\'SC\'',PD_P.M).SC;
   QNUCOZ.ILPTW:=_sc+_mp+_zdp-_rozchody;
   {? QNUCOZ.ILPTW<0 || QNUCOZ.ILPTW:=QNUCOZ.ILPTW*-1 ?};
   {? QNUCOZ.ILPTW<0 || QNUCOZ.ILPTW:=0 ?}
|? PD_P.STAT_IL>0 & PD_P.STAN<0 & _zd>0
|| QNUCOZ.ILPTW:=_zd
|| QNUCOZ.ILPTW:=0
?};
:: poza ustawieniem wartosci zmiennej dodatkowo kolorowana komorka
_wyn:={? QNUCOZ.ILPTW=0
      || ''
      |? PD_P.STAN>0 & QNUCOZ.ILPTW>0
      || '0:0:0,255:183:107'
      |? PD_P.STAN<0 & QNUCOZ.ILPTW>0
      || '0:0:0,200:200:255'
      ?};
_wyn

