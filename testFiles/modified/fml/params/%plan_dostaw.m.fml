:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: %plan_dostaw.fml
:: Utworzony: 18.05.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: formuły planu dostaw
::======================================================================================================================


:: formuły planu dostaw: BUFOR
\pxsur_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do planu strategicznego - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pxsur_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PX_SUR.cntx_psh(); PX_SUR.clear();
PX_POZ.cntx_psh(); PX_POZ.clear();
PX_OBJ.cntx_psh();
PD_BUF.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
::----------------------------------------------------------------------------------------------------------------------
::  MOD: PeKa [06.04.2023]
:: OPIS: Dodano dodatkowa informacje o indeksie i ilosci
::----------------------------------------------------------------------------------------------------------------------
         _opis:='';
         {? PX_SUR.seek(PD_BUF.REF)
         || {? PX_POZ.seek(PX_SUR.PX_POZ)
            || M.cntx_psh;
               KH.cntx_psh;
               _opis:=PX_POZ.PX_OBJ().SYMBOL+', Indeks:'+PX_OBJ.M().KTM+', Ilość: '+$PX_OBJ.IL_PLAN+', Kontrahent: '+PX_OBJ.KH().SKR;
               M.cntx_pop;
               KH.cntx_pop
            ?}
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:={? PD_BUF.WSP=-1 || 'R' || 'P' ?};
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('pxsur_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         {? PD_BUF.WSP=-1 || _params.ILR:=PD_BUF.IL; _params.ILP:=0 || _params.ILR:=0; _params.ILP:=PD_BUF.IL ?};
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('pxsur_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop();
PX_SUR.cntx_pop();
PX_POZ.cntx_pop();
PX_OBJ.cntx_pop();
~~


\wewr_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia wewnetrzne (rozchod) - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \wewr_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');

:: NUCO - analiza dla zleceń w planie strategicznym
{? (var_press('PD_D_ZN',_paramsb)>0 & _paramsb.PD_D_ZN='BILANS PRODUKCJI') | var_pres('q_analiza_zlec')>0
|| _bp:=1
|| _bp:=0
?};

PD_BUF.cntx_psh(); ZK_N.cntx_psh(); ZK_P.cntx_psh(); ZL.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK)
   ||
      {? _paramsb.skip_chk(PD_BUF.REF) & exec('pd_buf_zastosuj','plan_dostaw')
         & {? _bp
           || exec('FindAndGet','#table',ZK_P,PD_BUF.REF,,"ZL().STAN='O' & ZL().PLAN_PO='T'",1)
           || 1
           ?}
      ||
:: PeKa - NUCO - dodanie informacji o stanie zlecenia
         _opis:='';
         ZK_P.use(8+PD_BUF.REF);
         ZK_P.prefix();
         {? ZK_P.seek(PD_BUF.REF)
         ||
            ZK_N.use(ref_name(ZK_P.N));
            _zkn_sym:=ZK_P.N().SYM;
            _zkn:=exec('zkn_pierwotny','%plan_dostaw',ZK_P.ref());
            {? _zkn<>'' & _zkn<>_zkn_sym || _zkn:=', z zam. '+_zkn || '' ?};
            _zl:={? ZK_P.ZL || ', zlec.: '+ZK_P.ZL().SYM+' ~ '+'Stan zlecenia: '+ZL.STAN || '' ?};
            _opis:=_zkn_sym+' poz.'+$ZK_P.POZ+_zl+_zkn
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='R';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('wewr_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILR:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('wewr_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); ZK_N.cntx_pop(); ZK_P.cntx_pop(); ZL.cntx_pop()


\zlimn_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do zlecenia (surowce nielimitowane) - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zlimn_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

:: NUCO dla dla potrzeb bilansowania magazynów produkcyjnych pomijamy zlecenia nieotwarte
{? (var_press('PD_D_ZN',_paramsb)>0 & _paramsb.PD_D_ZN='BILANS PRODUKCJI') | var_pres('q_analiza_zlec')>0
|| _bp:=1
|| _bp:=0
?};

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); ZLIM.cntx_psh(); ZL.cntx_psh(); GROP.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|! {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK)
   ||
      {? _paramsb.skip_chk(PD_BUF.REF) & exec('pd_buf_zastosuj','plan_dostaw')
         & {? _bp
           || exec('FindAndGet','#table',ZLIM,PD_BUF.REF,,"ZLEC().STAN='O' & ZLEC().PLAN_PO='T'",1)
           || 1
           ?}
      ||
         _opis:=exec('FindAndGet','#table',ZLIM,PD_BUF.REF,,
            "{? GROP<>null() || GROP().KOD+' '+@.GROP.OPIS || ZLEC().SYM+' '+ZL.OPIS+' ~ '+'Stan zlecenia: '+ZL.STAN ?}",'')+
            {? PD_BUF.WSP=-1 || ' - surowiec' || ' - odpad/koprodukt' ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:={? PD_BUF.WSP=-1 || 'R' || 'P' ?};
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('zlimn_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         {? PD_BUF.WSP=-1 || _params.ILR:=PD_BUF.IL || _params.ILP:=PD_BUF.IL ?};
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('zlimn_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); ZLIM.cntx_pop(); ZL.cntx_pop(); GROP.cntx_pop()


\zlimt_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do zlecenia (surowce limitowane) - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zlimt_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

:: NUCO dla dla potrzeb bilansowania magazynów produkcyjnych pomijamy zlecenia nieotwarte
{? (var_press('PD_D_ZN',_paramsb)>0 & _paramsb.PD_D_ZN='BILANS PRODUKCJI') | var_pres('q_analiza_zlec')>0
|| _bp:=1
|| _bp:=0
?};

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); ZLIM.cntx_psh(); ZL.cntx_psh(); GROP.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK)
   ||
      {? _paramsb.skip_chk(PD_BUF.REF) & exec('pd_buf_zastosuj','plan_dostaw')
         & {? _bp
           || exec('FindAndGet','#table',ZLIM,PD_BUF.REF,,"ZLEC().STAN='O' & ZLEC().PLAN_PO='T'",1)
           || 1
           ?}
      ||
         _opis:=exec('FindAndGet','#table',ZLIM,PD_BUF.REF,,
            "{? GROP<>null() || GROP().KOD+' '+@.GROP.OPIS || ZLEC().SYM+' '+ZL.OPIS+' ~ '+'Stan zlecenia: '+ZL.STAN ?}",'')+
            {? PD_BUF.WSP=-1 || ' - surowiec' || ' - odpad/koprodukt' ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:={? PD_BUF.WSP=-1 || 'R' || 'P' ?};
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('zlimt_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         {? PD_BUF.WSP=-1 || _params.ILR:=PD_BUF.IL; _params.ILP:=0 || _params.ILR:=0; _params.ILP:=PD_BUF.IL ?};
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('zlimt_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); ZLIM.cntx_pop(); ZL.cntx_pop(); GROP.cntx_pop()


:: formuły planu dostaw: CECHY MATERIAŁÓW


\uzu_brak_ui
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: uzupelnienie brakow - formula uzupelnienia stanow - inicjujaca
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \uzu_brak_ui/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;
_pytaj:=1;
::----------------------------------------------------------------------------------------------------------------------
::  MOD: PeKa [07.04.2023]
:: OPIS: podpowiadam odnaleziony typ zamowienia dostawcy
{? PD_P.sel_size()=0
|| {? PD_P.KH<>null()
   || _zam:=sql('select ZD_NAG.T, max(ZD_NAG.DATA) from @ZD_NAG where ZD_NAG.KH=:_a and ZD_NAG.R>2022 group by T,DATA',PD_P.KH).T;
      {? _zam<>''
      || BEER.TYPYZAM:=exec('FindAndGet','#table',TYPYZAM,_zam,,,null());
         {? BEER.TYPYZAM<>null || _pytaj:=0 ?}
      ?}
   ?}
:: opcja grupowa - jesli wszystkie zaznaczone rekordy maja ten sam typ to podpowiadam, jesli nie std dzialanie
||
   PD_P.cntx_psh;
   _Sel:=PD_P.sel_aget();
   {? _Sel.first() & PD_P.seek(_Sel.REF,) & PD_P.KH<>null()
   ||
:: dla pierwszego zaznaczonego rekordu sprawdzam tym zamowienia - kolejne musza miec takie same
      _typ:=sql('select ZD_NAG.T, max(ZD_NAG.DATA) from @ZD_NAG where ZD_NAG.KH=:_a and ZD_NAG.R>2022 group by T,DATA',PD_P.KH).T;
      {? _typ<>'' || BEER.TYPYZAM:=exec('FindAndGet','#table',TYPYZAM,_typ,,,null()) || _pytaj:=1 ?};
:: petla po reszcie zazaczonych
      {!
      |? {? PD_P.seek(_Sel.REF,) & PD_P.KH<>null()
         || _zam:=sql('select ZD_NAG.T, max(ZD_NAG.DATA) from @ZD_NAG where ZD_NAG.KH=:_a and ZD_NAG.R>2022 group by T,DATA',PD_P.KH).T;
            {? _zam<>'' & _zam=$BEER.TYPYZAM
            || _pytaj:=0
            || _pytaj:=1
            ?}
         || _pytaj:=1
         ?};
         _pytaj=0 & _Sel.next()
      !}
   || _pytaj:=1
   ?};
   PD_P.cntx_pop
?};
::----------------------------------------------------------------------------------------------------------------------
{? _pytaj & PD_Z.TYPYZAM<>null() || BEER.TYPYZAM:=PD_Z.TYPYZAM; _pytaj:=0 ?};

:: wybor typu zamowienia
{? _pytaj || exec('wyb_zam','zamowienia','PD') ?};
{? BEER.TYPYZAM | BEER.TYPYZAMW
||
   _ts:=exec('ts_d','plan_dostaw');
   _tcs:=exec('tcs_brak','plan_dostaw');
:: PD_POW - usunięcie zapisów z wcześniejszej analaizy
   exec('pd_pow_del','plan_dostaw',PD_P.PD_N,PD_P.ref(),_ts,_tcs,_paramsb.SEL);
   1
?}


\uzu_brak_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: uzupelnienie brakow - formula uzupelnienia stanow
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \uzu_brak_u/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_Tab:=exec('pda_tab2_wsk','plan_dostaw','TAB');
_ndx:=exec('pda_tab2_wsk','plan_dostaw','NDX2');
_stany_env:=exec('pda_stany_wsk','plan_dostaw','ENV');
_params:=exec('pd_k_add_a','plan_dostaw');
_wal:=exec('bl_wal','ustawienia');
_date:=date();
_sectbeg:=1;
_one_pd_k:=1;
_one_pd_k_d:=date(0,0,0);
_one_pd_k_plus:=0;
_max_plus:=0;

MG.cntx_psh();
:: \pd_k_zmg_be/plan_dostaw.fml - ustawia filtr tabeli MG na magazyny do przesunięć,
:: kolejne formuły nie mogą go unieważnić, w przeciwnym przypadku formułę trzeb przesunąć bezpośrednio
:: przed wywołanie MG.f_find(_z_mg,)
_mm:=BEER.TYPYZAMW & exec('pd_k_zmg_be','plan_dostaw','W');

_ts:=exec('ts_d','plan_dostaw');
_tcs:=exec('tcs_brak','plan_dostaw');

_ok:=1;
::----------------------------------------------------------------------------------------------------------------------
::  MOD: PeKa [15.05.2023]
:: OPIS: Obsluga wywolania - odpowiedni komentarz
_wywolaj:=1;
{? PD_P.STAT_IL>0 & PD_P.STAN>0
|| _wywolaj:=0
?};
:: wykorzystanie lead time
_lt:=exec('get_w','#params',999302)='T';
:: czy istnieie zamowienie kontraktowe z data 9999/01/01
_kontr:=0;
::----------------------------------------------------------------------------------------------------------------------

_Tab.cntx_psh();
_Tab.index(_ndx);
_Tab.prefix();

{? _one_pd_k=0 & _Tab.last() & _Tab.STAN_D<0
||
   _max_plus:=-_Tab.STAN_D

|? _one_pd_k=1 & _Tab.last() & _Tab.STAN_D<0
||
::----------------------------------------------------------------------------------------------------------------------
::  MOD: PeKa [20.05.2023]
:: OPIS: ustalenie czy jest kontrakt
   _kontr:={? date(9999,1,1)=_Tab.D & _Tab.STAN_D<0 || 1 ?};
::----------------------------------------------------------------------------------------------------------------------
   _one_pd_k_d:=_Tab.D;
   _one_pd_k_plus:=-_Tab.STAN_D;
   _tab_ref:=_Tab.REF;
   _tab_mg:=_Tab.MG;
   _tab_pd_d_kod:=_Tab.PD_D_KOD;
   _loop:=_Tab.first();
   {!
   |? _loop
   |!
      _loop:=
         {? _Tab.D>=date() & _Tab.STAN_D<0
         || _one_pd_k_d:=_Tab.D;
            _tab_ref:=_Tab.REF;
            _tab_mg:=_Tab.MG;
            _tab_pd_d_kod:=_Tab.PD_D_KOD;
            0
         || _Tab.next()
         ?}
   !};
::----------------------------------------------------------------------------------------------------------------------
::  MOD: PeKa [19.05.2023]
:: OPIS: jesli pierwszy brak jest data dzisiejsza to planowana data jest na data biezaca
   {? PD_P.STAT_DA<=date() & _one_pd_k_d>=PD_P.STAT_DA
   || _one_pd_k_d:=date()
   ?};
::----------------------------------------------------------------------------------------------------------------------
   _dd_wstepna:=exec('autil_date','plan_dostaw',_one_pd_k_d,0);
   _il:=_one_pd_k_plus;
   _dost:=exec('dost','ceny_mat',PD_P.M,_dd_wstepna,_wal,1,_il);
   _params.PD_N:=PD_N.ref();
   _params.PD_P:=PD_P.ref();
::----------------------------------------------------------------------------------------------------------------------
::  MOD: PeKa [19.05.2023]
:: OPIS: Czy uwzgledniac lead time
   {? _lt=0
   || _dost.ILDNI:=0
   ?};
::----------------------------------------------------------------------------------------------------------------------
   _params.DZ:=exec('autil_date','plan_dostaw',_dd_wstepna,_dost.ILDNI);
   _params.DD:=
      {? (_dd_wstepna-_params.DZ)<_dost.ILDNI
      || exec('autil_date','plan_dostaw',_params.DZ+_dost.ILDNI,0,1)
      || _dd_wstepna
      ?};
   _one_pd_k_d:=_params.DD;
   _continue:=1;
   _pd_pow_ref1:=_tab_ref;
   _pd_pow_opis:='';
   _params.KH:=_dost.KH;
   _params.MG:=exec('autil_mg4dost','plan_dostaw',_tab_pd_d_kod,_tab_ref,_tab_mg);
   {? _params.MG=null()
   ||
      {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
      __kom.add('Brak uprawnionego magazynu. Uzupełnienie braków przerwane.'@);
      __kom.add(' Należy sprawdzić funkcję autil_mg4dost w pliku plan_dostaw.fml czy obsługuje formułę:'
         ' %1.'@[_tab_pd_d_kod]);
      _ok:=0
   ?};
   {? _ok
   ||
:: dodanie do koszyka
      _params.Z_MG:=null();
      _params.M:=PD_P.M;
      _params.DK_C:=null();
      _params.IL:=_il;
      _params.WAL:=_dost.WAL;
      {? _params.WAL=INFO.NAROD
      ||
         _params.CWAL:=0;
         _params.KRS:=0;
         _params.CENA:=_dost.CENA
      ||
         _params.CWAL:=_dost.CENA;
         _params.KRS:=0;
         _params.CENA:=0
      ?};
      _params.TYPYZAM:=BEER.TYPYZAM;
      _pd_k:=exec('pd_k_add','plan_dostaw',_params);
      {? _pd_k
      ||
:: uzupełnienie PD_POW
         _pd_pow_ref2:=$_pd_k;
         _pd_pow_opis:='Dodano do koszyka: %2 %3 [%4;%5;%6]. Planowana data dostawy w dniu %1'@[_params.DD$1,form(PD_K.IL),PD_K.JM().KOD,
            date()$1,time()$1,_pdd_kod];
         {? _sectbeg || __kom.sect_beg(PD_P.M().KTM+' - '+M.N); _sectbeg:=0 ?};
         __kom.add(_pd_pow_opis,7);
::----------------------------------------------------------------------------------------------------------------------
::  MOD: PeKa [20.05.2023]
:: OPIS: dodatkowa informacja w komentarzu - jesli mimo zamowienia kontraktowego z analizy wynika stan ujemy
         {? _kontr
         || __kom.add('UWAGA - dla pozycji dodatkowo należy przyspieszyć dostawę na dzień %1'[_params.DD$1],7)
         ?};
::----------------------------------------------------------------------------------------------------------------------
         exec('pd_pow_add','plan_dostaw',_params.PD_N,_params.PD_P,_ts,_tcs,_pd_pow_ref1,_pd_pow_ref2,
            _pd_pow_opis);
:: aktualizacja stanu magazynu do przesunięć
         _stany_env.aktualizuj_stan(_tab_mg,'',_params.DD,_params.IL);
:: aktualizacja stanu dostępnego
         _stany_env.aktualizuj_stan_dostepny($_pd_k,_params.DD,_params.IL)
      ?}
   ?};
   obj_del(_dost)
?};
::
:: analiza stanów
::
_plus:=0;
_loop:=_Tab.first() & _wywolaj;
{!
|? _loop
|!
   {? _one_pd_k & _one_pd_k_d<>date(0,0,0) & _Tab.D>=_one_pd_k_d || _plus:=_one_pd_k_plus ?};
   _anal:=_Tab.STAN_D+_plus<0;
   _Tab.cntx_psh();
   _next:=_Tab.next();
   _anal:=_anal & _next & _Tab.D>_date;
   _Tab.cntx_pop();
:: dostawy
   {? BEER.TYPYZAM
         &
      _Tab.STAN_D+_plus<0 & (_Tab.D>=_date | _next=0 | _anal)
   ||
      _dd_wstepna:=exec('autil_date','plan_dostaw',_Tab.D,0);
      _il:=-_Tab.STAN_D-_plus;
      {? _il>_max_plus || _il:=_max_plus ?};
      _dost:=exec('dost','ceny_mat',PD_P.M,_dd_wstepna,_wal,1,_il);
      _params.PD_N:=PD_N.ref();
      _params.PD_P:=PD_P.ref();
      _params.DZ:=exec('autil_date','plan_dostaw',_dd_wstepna,_dost.ILDNI);
      _params.DD:=
         {? (_dd_wstepna-_params.DZ)<_dost.ILDNI
         || exec('autil_date','plan_dostaw',_params.DZ+_dost.ILDNI,0,1)
         || _dd_wstepna
         ?};
      _continue:=1;
      _pd_pow_ref1:=_Tab.REF;
      _pd_pow_opis:='';
      {? _continue>0
      ||
:: sprawdzenie czy jest stan dostępny w wymaganej dacie lub przyszłości
:: jeśli jest stan dostępny nie będzie tworzony zapis w koszyku
         _stan_dostepny:=_stany_env.stan_dostepny();
         {? _stan_dostepny.D<>date(0,0,0)
         ||
:: uzupełnienie PD_POW
            _pd_pow_ref2:=_stan_dostepny.REF;
            _pd_pow_opis:=
               {? _stan_dostepny.D=_params.DD
               ||
                  'Stan będzie dostępny w dniu %1.[%2;%3;%4]'@[
                     form(_stan_dostepny.D),date()$1,time()$1,_pdd_kod]
               ||
                  'Stan będzie dostępny w dniu %1 przy czym możliwa jest dostawa na dzień %2.[%3;%4;%5]'@[
                     form(_stan_dostepny.D),form(_params.DD),date()$1,time()$1,_pdd_kod]
               ?};
::            {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
::            __kom.add(_pd_pow_opis,7);
            exec('pd_pow_add','plan_dostaw',_params.PD_N,_params.PD_P,_ts,_tcs,_pd_pow_ref1,_pd_pow_ref2,_pd_pow_opis);
            _continue:=0
         ?};
         obj_del(_stan_dostepny)
      ?};
      {? _continue>0 & _il>0 & _one_pd_k=0
      ||
         _params.KH:=_dost.KH;
         _params.MG:=exec('autil_mg4dost','plan_dostaw',_Tab.PD_D_KOD,_Tab.REF,_Tab.MG);
         {? _params.MG=null()
         ||
            {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
            __kom.add('Brak uprawnionego magazynu. Uzupełnienie braków przerwane.'@);
            __kom.add(' Należy sprawdzić funkcję autil_mg4dost w pliku plan_dostaw.fml czy obsługuje formułę:'
               ' %1.'@[_Tab.PD_D_KOD]);
            _ok:=0
         ?};
         {? _ok
         ||
:: dodanie do koszyka
            _params.Z_MG:=null();
            _params.M:=PD_P.M;
            _params.DK_C:=null();
            _params.IL:=_il; _plus+=_params.IL; _max_plus-=_params.IL;
            _params.WAL:=_dost.WAL;
            {? _params.WAL=INFO.NAROD
            ||
               _params.CWAL:=0;
               _params.KRS:=0;
               _params.CENA:=_dost.CENA
            ||
               _params.CWAL:=_dost.CENA;
               _params.KRS:=0;
               _params.CENA:=0
            ?};
            _params.TYPYZAM:=BEER.TYPYZAM;
            _pd_k:=exec('pd_k_add','plan_dostaw',_params);
            {? _pd_k
            ||
:: uzupełnienie PD_POW
               _pd_pow_ref2:=$_pd_k;
               _pd_pow_opis:='Dodano do koszyka: %2 %3 [%4;%5;%6]. Planowa dada dostawy w dniu %1 '@[_params.DD$1,form(PD_K.IL),PD_K.JM().KOD,
                  date()$1,time()$1,_pdd_kod];
               {? _sectbeg || __kom.sect_beg(PD_P.M().KTM+' - '+M.N); _sectbeg:=0 ?};
               __kom.add(_pd_pow_opis,7);
               exec('pd_pow_add','plan_dostaw',_params.PD_N,_params.PD_P,_ts,_tcs,_pd_pow_ref1,_pd_pow_ref2,
                  _pd_pow_opis);
:: aktualizacja stanu magazynu do przesunięć
               _stany_env.aktualizuj_stan(_Tab.MG,'',_params.DD,_params.IL);
:: aktualizacja stanu dostępnego
               _stany_env.aktualizuj_stan_dostepny($_pd_k,_params.DD,_params.IL)
            ?}
         ?}
      ?};
      &_dost
   ?};
:: przesunięcia
   {? _mm & _Tab.MG<>''
   ||
      _dd:={? _Tab.D<_date || _date || _Tab.D ?};
      _mg:=_Tab.MG;
      _mg_stan:=_stany_env.pobierz_stan(_mg,'',_dd);
      {? _mg_stan<0
      ||
         PD_MG.cntx_psh();
         {? exec('get','#params',600400,2)='N'
         ||
            _oddz:=exec('FindInSet','#table','MG','MAGAZYNY',_mg,,"MG.ODDZ",1,,'');
            PD_MG.index('ODDZ_MM');
            PD_MG.prefix(_oddz,PD_N.ref(),null(),'T')
         ||
            PD_MG.index('MM');
            PD_MG.prefix(PD_N.ref(),null(),'T')
         ?};
         _loop:=PD_MG.first();
         {!
         |? _loop
         |!
            _z_mg:=PD_MG.MG().SYM;
            {? MG.f_find(_z_mg,) & _mg<>_z_mg
            ||
               _z_mg_stan:=_stany_env.pobierz_stan(_z_mg,'',_dd);
               {? _z_mg_stan>0
               ||
:: magazyn do przesunięć ma ilość do przesunięcia
                  _params.PD_N:=PD_N.ref();
                  _params.PD_P:=PD_P.ref();
                  _params.DD:=_params.DZ:=_dd;
                  _params.MG:=exec('autil_mg4dost','plan_dostaw',_Tab.PD_D_KOD,_Tab.REF,_Tab.MG);
                  {? _params.MG=null()
                  ||
                     {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
                     __kom.add('Brak uprawnionego magazynu. Uzupełnienie braków przerwane.'@);
                     __kom.add('Należy sprawdzić funkcję autil_mg4dost w pliku plan_dostaw.fml czy obsługuje formułę'
                        ': %1.'@[_Tab.PD_D_KOD]);
                     _ok:=0
                  ?};

                  _params.Z_MG:=PD_MG.MG;
                  _params.M:=PD_P.M;
                  _params.DK_C:=null();
                  _params.IL:={? -_mg_stan<_z_mg_stan || -_mg_stan || _z_mg_stan ?};
:: aktualizacja stanu magazynu do przesunięć
                  _stany_env.aktualizuj_stan(_z_mg,'',_dd,-_params.IL);
                  _stany_env.aktualizuj_stan(_mg,'',_dd,_params.IL);
                  _params.TYPYZAM:=BEER.TYPYZAMW;
                  {? _params.TYPYZAM & _ok & _params.IL>0 & exec('pd_k_add','plan_dostaw',_params)
                  ||
                     {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
                     __kom.add('Przesunięto %1 %2 z magazynu %3 do magazynu %4.'@[form(PD_K.IL),PD_K.JM().KOD,
                        _z_mg,_mg]);
                     _mg_stan+=_params.IL
                  ?}
               ?}
            ?};
            _loop:=_mg_stan<0 & PD_MG.next()
         !};
         PD_MG.cntx_pop()
      ?}
   ?};
   _loop:=_ok & _Tab.next()
!};
:: komentarz dla wywolan
{? _wywolaj=0
|| _pd_pow_opis:='Dla pozycji należy spróbować przyspieszyć dostawę.';
   {? _sectbeg || __kom.sect_beg(PD_P.M().KTM+' - '+M.N); _sectbeg:=0 ?};
   __kom.add(_pd_pow_opis,7)
?};
{? _mm || MG.f_clear() ?};
{? _sectbeg=0 || __kom.sect_end() ?};
MG.cntx_pop();
_Tab.cntx_pop();
1


