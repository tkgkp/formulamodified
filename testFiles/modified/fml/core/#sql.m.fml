:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #sql.fml [17.00]
:: Utworzony: 17.12.2014
:: Autor: AK
::======================================================================================================================
:: Zawartość: Obsługa zapytań SQL
::======================================================================================================================


\sql_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: tworzy tymczasowe okno select()
::   WE: _a - Akronim tabeli
::       _b - Czy select?
::       _c - Tytuł
::       _d - Czy dodać w menu funkcję POZYCJE
::       _e - Czy dodać w menu funkcję Rozwiń/Zwiń
::       _f - Czy wywołane przez funkcję ROZWIŃ/ZWIŃ, w konsekwencji czy pomijać kolumnę LP i menu Kolejność
::       _g - Parametry podsum dla wydruku
::UWAGI: Jeśli _grp_ver:=0 okienka grupowe nie będą użyte
::  OLD: \sql_sel/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_e:=0;
{? _>=1 || {? type_of(_a)<>2 || _a:='TAB_SQLR' ?} || _a:='TAB_SQLR' ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>2 || _c:=TAB_SQL.NAZ ?} || _c:=TAB_SQL.NAZ ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};
{? _>=6 || {? type_of(_f)<>1 || _f:=0 ?} || _f:=0 ?};
{? _>=7 || {? type_of(_g)<>2 || _g:='' ?} || _g:='' ?};

:: [MZ] czy okienka grupowe
_grp_ver:=1;
:: Czy są kolumny liczbowe z podsumowaniami
_kolumny:=exec('chk_ntxt','#sql');

_tab:=_a;
_msg:='';

_x_tab:=($(_tab))();
:: [MZ] podstawowe mk_sel
:: NUCO
_sel_acr:=_x_tab.mk_sel(_c,,0,,,,,,'U','U',,,,,,'on');

:: [MZ] ustalenie szerokości kolumn
exec('width1','#sql',_tab);

:: [MZ] okienko dla podsum - wersja z grp_sel
{? _grp_ver & _kolumny
||
:: [MZ] zakłada drugą tabelę dla podsum - tylko dla wersji z grp_sel
   _sum:='S'+_tab;
   {? var_pres(_sum)>=100 || obj_del(($(_sum))()) ?};

   _str_wdt:=0;
   _tab_def:=_sum+':=tab_tmp(';
   {! _i:=1.._x_tab.fld_num()
   |!
      _fld_acr:=_x_tab.fld_acr(_i);
      _fld_name:=_x_tab.fld_name(_i);
      _typ:=type_of(_x_tab[_i]);
      _fld_typ:=
         {? MS.fld_real(_tab,_fld_acr)
         ||
            _tab_def+=',\''+_fld_acr+'\',\'REAL\',\''+_fld_name+'\''
         ||
            {? _typ=1 || _str_wdt:=10; '+=X_len[_i]';'INTEGER'
            |? _typ=2 || _str_wdt:=10; '+=X_len[_i]';'STRING['+$X_len[_i]+']'
            |? _typ=4 || _str_wdt:=10; '+=X_len[_i]';'DATE'
            |? _typ=5 || _str_wdt:=10; '+=X_len[_i]';'TIME'
            ?}
         ?}
   !};
   {? _str_wdt
   ||
::    [MZ] zostały wyszukane początkowe kolumny, też zostaną dodane - ale tylko jeden raz
      _tab_def+=',\'STR\',\'STRING['+$_str_wdt+']\',';
      _str_wdt:=0
   ?};
   _tab_def+=')';
   ($_tab_def)();
   &_tab_def
||
   _sum:=_tab
?};

_s_tab:=($(_sum))();
:: [mz] mk_sel dla okienka podsum
{? _kolumny
|| _sum_acr:=_s_tab.mk_sel(,,0)
?};

:: [mz] dodajemy rekord z podsumami
{? _kolumny
|| exec('add_sum','#sql',_tab,_sum,_f,_grp_ver)
?};

:: [mz] dodanie opisu dla wolnego pola podsum
{? _grp_ver & _kolumny
||
   {? _s_tab.first()
   ||
      _s_tab.STR:='SUMA:';
      _s_tab.put()
   ?}
?};

:: [mz] ustalenie szerokości kolumn dla podsum + korekta szerokości
{? _kolumny
|| exec('width2','#sql',_tab,_sum,_f,1)
?};

:: [mz] win_fld - tworzenie okien wertowania
:: _str_wdt - szerokość kolumny z tekstem SUMA
_str_wdt:=-1;
_no_rec:=1;
_mk_sum:='
   _a.win_fld(_b,,\'STR\',,,_c,,,,1,,,1);
   {? _d || _a.win_act(_b,0,\'Rekord\',,,,\"\'0:0:0,220:220:220\'\") ?}' ;
_fld_from:={? _f || 2 || 1 ?};
_fld_to:=_x_tab.fld_num()-1;
TAB_SQLP.cntx_psh(); X_TABFLD.cntx_psh();
_ind:=TAB_SQLP.ndx_tmp(,1,'SQL',,,'NR_KOL',,);
TAB_SQLP.index(_ind);
_tf_ndx:=X_TABFLD.ndx_tmp(,,'ACR',,);
X_TABFLD.index(_tf_ndx);
{! _i:=_fld_from.._fld_to
|!
   _fld_acr:=_x_tab.fld_acr(_i);
   _fld_name:=_x_tab.fld_name(_i);

   _width:=X_len[_i];
   _prec:=exec('prec','#sql',_fld_acr);
   {? _fld_name='x_x' || _fld_name:='ROZ' ?};
   {? ~_x_tab.win_fld(_sel_acr,,_fld_acr,,,_width,_prec,,_fld_name,,,,1)
   || _msg+=_fld_name+', '
   ?};
   X_TABFLD.prefix(_fld_acr);
   {? X_TABFLD.first()
   ||
      TAB_SQLP.prefix(TAB_SQL.FILENAME,X_TABFLD.NR_KOL);
      {? TAB_SQLP.first() || _x_tab.fld_fml(_fld_acr,'BEFORE_DISPLAY',$TAB_SQLP.HID) ?}
   ?};

   {? _grp_ver & _kolumny
   ||
::    mk_sel dla podsum
      {? MS.fld_real(_tab,_fld_acr)
      ||
::       dla połączonych kolumn (typu 2)
         {? _str_wdt
         ||
            ($_mk_sum)(_s_tab,_sum_acr,_str_wdt,_no_rec);
            _no_rec:=0;
            _str_wdt:=0
         ?};
         _s_tab.win_fld(_sum_acr,,_fld_acr,,,_width,_prec,,_fld_name,1,,,1);
         X_TABFLD.prefix(_fld_acr);
         {? X_TABFLD.first()
         ||
            TAB_SQLP.prefix(TAB_SQL.FILENAME,X_TABFLD.NR_KOL);
            {? TAB_SQLP.first() || _s_tab.fld_fml(_fld_acr,'BEFORE_DISPLAY',$TAB_SQLP.HID) ?}
         ?}
      ||
         _str_wdt+=X_len[_i]+1
      ?}
   ?}
!};
:: gdy brak kolumn typu 1 - podsumy
{? _str_wdt>0 & _grp_ver || ($_mk_sum)(_s_tab,_sum_acr,_str_wdt,_no_rec) ?};
TAB_SQLP.ndx_drop(_ind);
X_TABFLD.ndx_drop(_tf_ndx);
TAB_SQLP.cntx_pop(); X_TABFLD.cntx_pop();
&_fld_from;
&_fld_to;
&_str_wdt;

:: [mz] win_act
{? _d || ($(_tab+'.win_act(\''+_sel_acr+'\',0,\'Formuła\',\'Pozycje\'@@,,\'Wyświetla okienko z podgrupami\'@,,'+
   '\"exec(\'drill_poz\',\'#sql\')\",1)'))() ?};
($(_tab+'.win_act(\''+_sel_acr+'\',0,\'Formuła\',\'Druku&j\'@@,,\'Wydruk zawartości bieżącego okienka\'@,,'+
   '\"exec(\'prn_tab\',\'#sql\',\''+_tab+'\',\''+_sum+'\','+$_f+',\''+_g+'\',\''+_c+'\')\",,,,,,,\'icon=print\')'))();
{? ~_f
||
   {? _grp_ver
   || ($(_tab+'.win_act(\''+_sel_acr+'\',,\'Kolejność\',,,,,'+
         '\"exec(\'f_sqlnrw\',\'#sql\',\''+_tab+'\','+$_grp_ver+')\",)'))()
   || ($(_tab+'.win_act(\''+_sel_acr+'\',,\'Kolejność\',,,,'+
         '\"exec(\'del_sum\',\'#sql\',\''+_tab+'\')\",'+
         '\"exec(\'f_sqlnrw\',\'#sql\',\''+_tab+'\','+$_grp_ver+');'+
         'exec(\'add_sum\',\'#sql\',\''+_tab+'\',\''+_sum+'\','+$_f+','+$_grp_ver+')\",)'))()
   ?}
?};
($(_tab+'.win_act(\''+_sel_acr+'\',,\'Szukaj\',,,,,,)'))();
($(_tab+'.win_act(\''+_sel_acr+'\',0,\'Wyświetl\',,,,\"exec(\'disp\',\'#sql\')\")'))();

{? +_msg || echo('Pominięte kolumny: %1 Przekroczona szerokość'@[_msg-2]) ?};

{? _b
||
   _mark:=0;
   {? _f
   ||
      _ref:=exec('mark','#sql',_tab);
      _mark:=_x_tab.seek(_ref)
   ?};
   _x_tab.win_sel(_sel_acr);
   _x_tab.hdr_sel(TAB_SQL.NAZ);
   _x_tab.select(,_mark,30)
?};
1


\drill_down
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Ustala parametry grupowania na podstawie pól TAB_TMP
::  OLD: \drill_down/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:='TAB_SQLR';

($(_tab+'.cntx_psh()'))();

:: [MZ] tabela z polami wyniku zapytania
{? var_pres('X_TABFLD')>100 || obj_del(X_TABFLD) ?};
X_TABFLD:=tab_tmp(
    ,'ACR','STRING[8]','Akronim'@
    ,'NAME','STRING[50]','Nazwa'@
    ,'TYP','INTEGER','Typ'@
    ,'PREC','INTEGER','Dokladnosc'@
    ,'NR_KOL','INTEGER','Nr kolumny'@
);

_ile:=($(_tab+'.fld_num()'))();
{! _i:=1.._ile-1
|!
   X_TABFLD.ACR:=($(_tab+'.fld_acr('+$_i+')'))();
   X_TABFLD.NAME:=($(_tab+'.fld_name('+$_i+')'))();
   X_TABFLD.TYP:=type_of(($(_tab+'.'+X_TABFLD.ACR))());
   X_TABFLD.PREC:={? MS.fld_real(_tab,X_TABFLD.ACR)=1 || 2 || 0 ?};
   X_TABFLD.NR_KOL:=_i;
   {? X_TABFLD.ACR<>'LP' || X_TABFLD.add() ?}
!};
:: NUCO
_tf_acr:=X_TABFLD.mk_sel('Pola tabeli'@,,0,,,,,,'U','U');
X_TABFLD.win_fld(_tf_acr,,'ACR',,,8);
X_TABFLD.win_fld(_tf_acr,,'NAME',,,30);
X_TABFLD.win_fld(_tf_acr,,'TYP',,,3);
X_TABFLD.win_act(_tf_acr,,'Formuła','Wybierz'@@,,,,"sel_exit()",1,,,,'W');
X_TABFLD.win_act(_tf_acr,,'Rekord',,,,"X_TABFLD.TYP=1");
X_TABFLD.win_sel(_tf_acr);
_tf_ndx:=X_TABFLD.ndx_tmp(,,'TYP',,1);
X_TABFLD.index(_tf_ndx);

exec('drill_ini','#sql');

X_DRILL.index(D_ED_NDX);
_ok:=1;
:: [PJ] jeśli podano nazwę pliku z domyślnymi parametrami grupowania to wczytać
{? TAB_SQL.DOM_GRUP<>''
|| exec('drill_read','#sql', TAB_SQL.DOM_GRUP)
?};
X_DRILL.select();
($(_tab+'.cntx_pop()'))();
exec('clear','#sql')


\drill_read
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ, PJ [8.70]
:: OPIS: Wczytuje zapisane w pliku *.sqg parametry grupowania. Założono, że w *.pth jest zdefiniowana ścieżka do *.sqg
::   WE: _a - Nazwa zestawu, opcjonalny, jeśli podano to od razu wczytuje ten zestaw
::  OLD: \drill_read/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
:: sprawdzenie czy można zapisać zestaw parametrów (pola nie są ustalane dynamicznie)
{? exec('czy_param','#sql') || return(0) ?};

exec('drill_open','#sql');
{? Z_DRILL.size()=0
|| {? _>0 & _a<>''
   || FUN.error('Brak zapamiętanych zestawów z parametrami dla tego zapytania.\n'
       'Nie można wczytać podanego zestawu...'@);
      return(0)
   ?}
?};
{? var_pres('X_FILES')>100 || obj_del(X_FILES) ?};
X_FILES:=sql('select ZESTAW, ZESTAW as OLD from :_a where TYP=1 order by ZESTAW',Z_DRILL);
::NUCO
_acr:=X_FILES.mk_sel('Wybierz parametry grupowania'@,,0,,,,,,'U','U');
X_FILES.win_fld(_acr,,'ZESTAW',,,60,,0);
X_FILES.win_act(_acr,,'Formuła','Wybierz'@@,,'Wczytuje bieżący zestaw parametrów'@,,"sel_exit",1,,,,'W');
X_FILES.win_act(_acr,,'Formuła','Usuń'@@,,'Usunięcie bieżącego zestawu parametrów'@,,
   "{? FUN.ask('Usunąć zestaw parametrów grupowania?'@) || exec('drill_del','#sql',X_FILES.ZESTAW,1) ?}",,,,,'U');
X_FILES.win_act(_acr,,'Popraw',,,'Zmiana nazwy zestawu parametrów'@,,"exec('chg_name','#sql')");
X_FILES.win_sel(_acr);

{? (_>0 & _a<>'')
|| _name:=_a;
   _dalej:=1
|? X_FILES.select()
|| _name:=X_FILES.ZESTAW;
   _dalej:=1
|| _dalej:=0
?};

{? _dalej
|| exec('drill_gen','#sql',_name)
?};
1


\f3_domgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formuła na "F3" pola DOM_GRUP zmiennej PAR_SQL
::  OLD: \f3_domgr/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_sql','#sql')
||
   {? ~exec('czy_param','#sql')
   || exec('drill_open','#sql');
      {? var_pres('X_FILES')>100 || obj_del(X_FILES) ?};
      X_FILES:=sql('select ZESTAW, ZESTAW as OLD from :_a where TYP=1 order by ZESTAW',Z_DRILL);
::NUCO      
      _acr:=X_FILES.mk_sel('Wybierz parametry grupowania'@,,0,,,,,,'U','U');
      X_FILES.win_fld(_acr,,'ZESTAW',,,60,,0);

      X_FILES.win_act(_acr,0,'Formuła','Wybierz'@@,,'Ustaw zestaw jako domyślny'@,,"sel_exit",1,,,,'W');
      X_FILES.win_act(_acr,1,'Formuła','Dołącz'@@,,'Definiowanie nowego zestawu kryteriów grupowania'@,,
         "exec('drill_ed','#sql',1)",,,,,'D');
      X_FILES.win_act(_acr,0,'Formuła','Dołącz'@@,,'Definiowanie nowego zestawu kryteriów grupowania'@,,
         "exec('drill_ed','#sql',1)",,,,,'D');
      X_FILES.win_act(_acr,0,'Formuła','Usuń'@@,,'Usunięcie bieżącego zestawu'@,,
         "{? FUN.ask('Usunąć zestaw parametrów grupowania?'@) || exec('drill_del','#sql',X_FILES.ZESTAW,1) ?}",,,,,'U');
      X_FILES.win_act(_acr,0,'Formuła','Edytuj zestaw'@@,,'Modyfikacja parametrów grupowania'@,,
         "exec('drill_ed','#sql',2,X_FILES.ZESTAW)",,,,,'E');
      X_FILES.win_act(_acr,0,'Popraw',,,'Zmiana nazwy zestawu'@,,"exec('chg_name','#sql')");
      X_FILES.win_sel(_acr);

      {? X_FILES.select
      || PAR_SQL.DOM_GRUP:=TAB_SQL.DOM_GRUP:=X_FILES.ZESTAW
      || ~~
      ?}
   ?}
|| FUN.info('Brak pliku z zapytaniem SQL!\n'
     'Nie można zdefiniować parametrów grupowania\n'
     'przed utworzeniem zapytania SQL.'@)
?}


\drill_ed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formuła do edycji zdefiniowanego zestawu parametrów z poziomu definicji zapytania sql lub definiowania
::       nowego zestawu
::   WE: _a - Tryb pracy
::          1 - dodawanie,
::          2 - edycja
::       _b - Nazwa zestawu do edycji
::  OLD: \drill_ed/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('czy_sql','#sql') || return(0) ?};
_prfx:='!'+(-BPMN.SYM_DOM)+'_';
_fname:=_prfx+TAB_SQL.FILENAME;
{? _=2 & _a=2 ||_name:=_b ?};
_sql:='';
_file:=fopen(__FileLayer.real_name(_fname,'sql'),'ur',1);
{? _file
|| _dalej:=1;
    {! |?
        _line:=fread(_file);
        {? _line <> '\n'
            || {? 7+_line<>':!UTF-8' || _sql+=_line + ' ' ?}
            || _dalej:=0
            ?};
        _dalej
   !};
   fclose(_file);
   _ok:=1
|| _ok:=0
?};

:: wielkość liter na duże
_sql:=~(-_sql);

:: funkcja wycina znak z podanego łańcucha _a o numerze _b
mid:="1+(_a + (+_a - _b + 1))";

:: wycinanie fragmentów między /* i */
_loop:=1; _pocz:=''; _kon:='';
{! |?
   _poz:=_sql * '/*';
   _pozk:=_sql * '*/';
   {? _poz > 0 & _pozk > 0
   || _pocz:=(_poz - 1) + _sql;
      _kon:=_sql + ((+_sql) - (_pozk+1));
      _sql:=_pocz + ' ' + _kon;
      _loop:=1
   || _loop:=0
   ?};
   _loop
!};
&_loop; &_pozk; &_pocz; &_kon;

:: analiza zapytania sql i zastąpienie warunku warunkiem pustym bez sortowania, jeśli zapytanie
:: nie ma warunków, pusty jest dodawany, klauzule group by i having są zachowywane
_poz:=_sql * 'GROUP BY';
{? _poz=0
|| _poz:=_sql * 'WHERE';
   _ord:=_sql * 'ORDER BY';
   {? _poz <> 0
   || _sql:=(_poz-1)+_sql
   || {? _ord <> 0 || _sql:=(_ord-1)+_sql ?}
   ?};
   &_ord;
   _sql:=_sql + ' WHERE 0=1'
|| _poz1:=_sql * 'WHERE';
   {? _poz1 <> 0
   || _sql1:=_sql;
      _sql:=(_poz1-1) + _sql;
      _sql1:=_sql1 + (+_sql1 - _poz + 1);
      _sql:=_sql + ' WHERE 0=1 ' + _sql1;
      &_sql1
   ?};
   &_poz1
?};

:: wycina znaki @ z zapytania
_psql:='';
{! _i:=1..(+_sql)
|! _char:=mid(_sql,_i);
    {? _char <> '@' || _psql+=_char ?}
!};
_sql:=_psql;

_msg:=no_msg(1);
TAB_SQLR:=psql(_sql);
no_msg(_msg);
&_msg;

:: jeśli błąd to wykonuje oryginalne, nieuproszczone zapytanie
:: ponieważ istnieje możliwość, że błąd jest wynikiem zastosowanych uproszczeń

{? sql_err(1) <> ''
|| FUN.info('Podczas testowego uruchamiania zapytania SQL wystąpił błąd:\n\n %1.\n\n'
      'Jeśli zapytanie SQL w pliku tekstowym jest poprawne, błąd spowodowany jest\n'
      'przez mechanizm testowego trybu uruchamiania. W takim przypadku można zdefiniować\n'
      'i zapisać parametry grupowania podczas uruchamiania właściwego zapytania SQL'@[sql_err(1)]);
   return(0)
?};

_tab:='TAB_SQLR';

($(_tab+'.cntx_psh()'))();

:: [MZ] tabela z polami wyniku zapytania
{? var_pres('X_TABFLD')>100 || obj_del(X_TABFLD) ?};
X_TABFLD:=tab_tmp(
    ,'ACR','STRING[8]','Akronim'@
    ,'NAME','STRING[50]','Nazwa'@
    ,'TYP','INTEGER','Typ'@
    ,'PREC','INTEGER','Dokladnosc'@
    ,'NR_KOL','INTEGER','Nr kolumny'@
);

_ile:=($(_tab+'.fld_num()'))();
{! _i:=1.._ile-1
|!
   X_TABFLD.ACR:=($(_tab+'.fld_acr('+$_i+')'))();
   X_TABFLD.NAME:=($(_tab+'.fld_name('+$_i+')'))();
   X_TABFLD.TYP:=type_of(($(_tab+'.'+X_TABFLD.ACR))());
   X_TABFLD.PREC:={? MS.fld_real(_tab,X_TABFLD.ACR)=1 || 2 || 0 ?};
   X_TABFLD.NR_KOL:=_i;
   {? X_TABFLD.ACR<>'LP' || X_TABFLD.add() ?}
!};
:: NUC
_tf_acr:=X_TABFLD.mk_sel('Pola tabeli'@,,0,,,,,,'U','U');
X_TABFLD.win_fld(_tf_acr,,'ACR',,,8);
X_TABFLD.win_fld(_tf_acr,,'NAME',,,30);
X_TABFLD.win_fld(_tf_acr,,'TYP',,,3);
X_TABFLD.win_act(_tf_acr,,'Formuła','Wybierz'@@,,,,"sel_exit()",1,,,,'W');
X_TABFLD.win_act(_tf_acr,,'Rekord',,,,"X_TABFLD.TYP=1");
X_TABFLD.win_sel(_tf_acr);
_tf_ndx:=X_TABFLD.ndx_tmp(,,'TYP',,1);
X_TABFLD.index(_tf_ndx);

exec('drill_ini','#sql',_a);
X_DRILL.index(D_ED_NDX);
:: wczytanie zestawu do edycji
{? _a=2
|| exec('drill_gen','#sql',_name)
?};
:: edytor X_DRILL na ekran
X_DRILL.select();
($(_tab+'.cntx_pop()'))();
X_DRILL.ndx_drop();
VAR_DEL.delete('X_DRILL', 'X_len', 'X_TABFLD', 'X_PRN','TAB_SQLR')


