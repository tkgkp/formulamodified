:!UTF-8
::(c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: po_wyk.fml [17.00]
:: Utworzony: 2016-01-12
:: Autor: WH
::======================================================================================================================
:: Zawartość: Rejestracja wykonań do planu operacyjnego (planu zasobów)
::======================================================================================================================


\update_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Aktualizacja tabel PROD_REJ, PROD_NXT
::       na podstawie zmian w tabelach PL_OPER, PL_NEXT, PL_OZ, PL_WYK, ZL, PL_OGR, GROP (obsluga triggerow)
::   WE: _a - rodzaj triggera: 'add', 'put', 'del'
::       _b - tabela: PL_OPER, PL_NEXT, PL_OZ, PL_WYK, ZL, PL_OGR, GROP
::   WY: wynik sterujacy dla triggera, czyli ~~ albo 0/1
::  OLD: \update_4rej/pl_wyk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _b=PL_OPER
||
   {? _a='add'
   ||
::    Dla PL_OPER bez PL_OZow (kooperacja) dodanie PROD_REJ
      Cntx.psh(PROD_REJ,PL_OZ,PL_PART,ZGP);

      PL_OZ.index('PL_OPER');
      PL_OZ.prefix(PL_OPER.ref());
      {?
         exec('pl_oper_koop','po_plan')
      ||
         PROD_REJ.clear();
         PROD_REJ.blank(1);
         PROD_REJ.STARTD:=PL_OPER.STARTD;
         PROD_REJ.STARTT:=PL_OPER.STARTT;
:: [areKc] - Ustalenie zmiany wykonującej pozycję z przewodnika.
         PROD_REJ.QZMIANA:=exec('zmiana','zl_common',PROD_REJ.STARTT);
         PROD_REJ.ENDD:=PL_OPER.ENDD;
         PROD_REJ.ENDT:=PL_OPER.ENDT;
         PROD_REJ.PRIORITY:='N';
         PROD_REJ.SRODZ:='PL';
         PROD_REJ.SOURCE:=$PL_OPER.ref();
         PROD_REJ.PL_OPER:=PL_OPER.ref();
         PROD_REJ.PL_OGR:=null();
         PROD_REJ.GROP:=null();
         PROD_REJ.PL_OZ:=null();
         exec('fields_4rej','po_wyk');
         PROD_REJ.RP:='N';
         {? PL_OPER.ZGP<>null()
         ||
            PL_OPER.ZGP();
            PROD_REJ.KONTROLA:=ZGP.KONTROLA;
            PROD_REJ.KJ_BAD:=ZGP.KJ_BAD;
            PROD_REJ.WYD:=exec('wyd','zl_guide');
            {? ZGP.DOK<>null
            || PROD_REJ.RP:='T'
            ?}
         ||
            PROD_REJ.KONTROLA:='N';
            PROD_REJ.KJ_BAD:='N';
            PROD_REJ.WYD:=null()
         ?};

::       Zlecenie albo zamowienie
         PL_OPER.PL_PART();
         {? PL_PART.ZL<>null()
         ||
            PROD_REJ.ZL:=PL_PART.ZL
         |? PL_PART.ZK_P<>null()
         ||
            PROD_REJ.ZK_P:=PL_PART.ZK_P;
            PROD_REJ.ZK_N:=PL_PART.ZK_P().N
         ?};

         PROD_REJ.M:=PL_PART.M;
         PROD_REJ.JM:=PL_PART.M().J;
         PROD_REJ.RES_SYM:='{KOOPERACJA}';
         PROD_REJ.RES_NAZ:='Kooperacja';
         PROD_REJ.ILC:=PL_OPER.ILOSC;
         PROD_REJ.ILW:=PL_OPER.IL_WYK;
         PROD_REJ.IL:=PL_OPER.ILOSC-PL_OPER.IL_WYK-PL_OPER.DEK_IL;
         PROD_REJ.START:='N';
         PROD_REJ.OK:='N';
         PROD_REJ.POTW:='N';
         PROD_REJ.PROBLEM:=PL_OPER.PROBLEM;
         PROD_REJ.PROBKLAS:=PL_OPER.PROBKLAS;
         PROD_REJ.PRAC:='N';
         PROD_REJ.BRYG:='N';
         PROD_REJ.KOOP:='T';

         {? PROD_REJ.ZL<>null()
         ||
            PROD_REJ.ZL();
            PROD_REJ.A:={? 1+ZL.STAN='O' || 'T' || 'N' ?}
         |? PROD_REJ.ZK_P<>null()
         ||
            PROD_REJ.A:='T'
         ||
            PROD_REJ.A:='N'
         ?};

         PROD_REJ.DOREJ:='T';
         PROD_REJ.add(1)
      ?};

      Cntx.pop(PROD_REJ,PL_OZ,PL_PART,ZGP);
      ~~
   |? _a='put'
   ||
::    Zawsze aktualizacja
      Cntx.psh(PROD_REJ,PL_OZ,PL_NEXT);

      PROD_REJ.index('PL_OPER');
      PROD_REJ.prefix('PL',PL_OPER.ref());
      {? PROD_REJ.first()
      ||
         PROD_REJ.STARTD:=PL_OPER.STARTD;
         PROD_REJ.STARTT:=PL_OPER.STARTT;
:: [areKc] - Ustalenie zmiany wykonującej pozycję z przewodnika.
         PROD_REJ.QZMIANA:=exec('zmiana','zl_common',PROD_REJ.STARTT);
         PROD_REJ.ENDD:=PL_OPER.ENDD;
         PROD_REJ.ENDT:=PL_OPER.ENDT;
         exec('fields_4rej','po_wyk');
         {? PL_OPER.ZGP<>null()
         ||
            PL_OPER.ZGP();
            PROD_REJ.KONTROLA:=ZGP.KONTROLA;
            PROD_REJ.KJ_BAD:=ZGP.KJ_BAD;
            PROD_REJ.WYD:=exec('wyd','zl_guide')
         ||
            PROD_REJ.KONTROLA:='N';
            PROD_REJ.KJ_BAD:='N';
            PROD_REJ.WYD:=null()
         ?};

         PROD_REJ.ILC:=PL_OPER.ILOSC;
         PROD_REJ.ILW:=PL_OPER.IL_WYK;
         PROD_REJ.IL:=PL_OPER.ILOSC-PL_OPER.IL_WYK-PL_OPER.DEK_IL;
         {? PROD_REJ.IL<=0 || PROD_REJ.IL:=0; PROD_REJ.OK:='T' || PROD_REJ.OK:='N' ?};
         PROD_REJ.PROBLEM:=PL_OPER.PROBLEM;
         PROD_REJ.PROBKLAS:=PL_OPER.PROBKLAS;
         PROD_REJ.put(1);

:: - Aktualizacja znacznika 'do rejestracji' PROD_REJ.DOREJ na nastepnych operacjach
         PROD_REJ.cntx_psh();
         PL_NEXT.index('PL_OPER');
         PL_NEXT.prefix(PL_OPER.ref());
         {? PL_NEXT.first()
         || PROD_REJ.prefix('PL',PL_NEXT.NEXT);
            {? PROD_REJ.first()
            || {!
               |?
                  _il:=exec('il_pop','po_wyk',PROD_REJ.ref());
                  {? _il.IL_POP>PROD_REJ.ILW | ~_il.MAX || PROD_REJ.DOREJ:='T' || PROD_REJ.DOREJ:='N' ?};
                  PROD_REJ.put();
                  obj_del(_il);

                  PROD_REJ.next()
               !}
            ?}
         ?};
         PROD_REJ.cntx_pop();

::    - Aktualizacja ilosci i znacznikow na powiazanych PROD_REJ z PL_OZ powiazanych z danym PL_OPER
::       biezacy PROD_REJ, zeby go drugi raz nie aktualizowac
         _prod_rej:=PROD_REJ.ref();
::       pola do przeniesienia
         _ilc:=PROD_REJ.ILC;
         _ilw:=PROD_REJ.ILW;
         _il:=PROD_REJ.IL;
         _ok:=PROD_REJ.OK;

         PL_OZ.index('PL_OPER');
         PL_OZ.prefix(PL_OPER.ref());
         {? PL_OZ.first()
         || {!
            |? PROD_REJ.index('PL_OZ');
               PROD_REJ.prefix('PL',PL_OZ.ref());
               {? PROD_REJ.first()
               || {!
                  |?
                     {? PROD_REJ.ref()<>_prod_rej
                     || PROD_REJ.ILC:=_ilc;
                        PROD_REJ.ILW:=_ilw;
                        PROD_REJ.IL:=_il;
                        {? PROD_REJ.IL<0 || PROD_REJ.IL:=0 ?};
                        PROD_REJ.OK:=_ok;
                        PROD_REJ.put()
                     ?};
                     PROD_REJ.next()
                  !}
               ?};
               PL_OZ.next()
            !}
         ?}
      ?};

      Cntx.pop(PROD_REJ,PL_OZ,PL_NEXT);
      ~~
   |? _a='del'
   ||
::    Dla PL_OPER bez PL_OZow (kooperacja) usuniecie PROD_REJ, dla tych z PL_OZami powinny byc juz usuniete
      Cntx.psh(PROD_REJ);

      PROD_REJ.index('PL_OPER');
      PROD_REJ.prefix('PL',PL_OPER.ref());
      {? PROD_REJ.first()
      ||
         PROD_NXT.index('PROD_REJ');
         PROD_NXT.prefix(PROD_REJ.ref());
         {? PROD_NXT.first() || {! |? PROD_NXT.del() !} ?};

         PROD_NXT.index('NEXT');
         PROD_NXT.prefix(PROD_REJ.ref());
         {? PROD_NXT.first() || {! |? PROD_NXT.del() !} ?};

         PROD_REJ.del()
      ?};
      _res:=~PROD_REJ.first();

      Cntx.pop(PROD_REJ);
      _res
   ||
      ~~
   ?}
|? _b=PL_NEXT
||
   {? _a='add'
   ||
::    Po dodaniu nastepnika dolaczany jest zapis PROD_NXT
      Cntx.psh(PROD_REJ,PROD_NXT);
      Cntx.clr(PROD_NXT);

      {? PL_NEXT.PL_OGR<>null()
      ||
         PROD_REJ.index('PL_OGR');
         PROD_REJ.prefix('PL',PL_NEXT.PL_OGR);
         {? PROD_REJ.first()
         || PROD_NXT.blank(1);
            PROD_NXT.PROD_REJ:=PROD_REJ.ref();

            PROD_REJ.index('PL_OPER');
            PROD_REJ.prefix('PL',PL_NEXT.NEXT);
            {? PROD_REJ.first()
            || _has_wyk:=exec('has_wyk_plogr','po_wyk',PL_NEXT.PL_OGR);
               {? _has_wyk=0
               || PROD_REJ.DOREJ:='N';
                  PROD_REJ.put(1)
               ?};
               PROD_NXT.NEXT:=PROD_REJ.ref();
               PROD_NXT.add(1)
            ?}
         ?};
         PROD_REJ.prefix('PX',PL_NEXT.PL_OGR);
         {? PROD_REJ.first()
         || PROD_NXT.blank(1);
            PROD_NXT.PROD_REJ:=PROD_REJ.ref();

            PROD_REJ.index('PL_OPER');
            PROD_REJ.prefix('PX',PL_NEXT.NEXT);
            {? PROD_REJ.first()
            || _has_wyk:=exec('has_wyk_plogr','po_wyk',PL_NEXT.PL_OGR);
               {? _has_wyk=0
               || PROD_REJ.DOREJ:='N';
                  PROD_REJ.put(1)
               ?};
               PROD_REJ.put(1);
               PROD_NXT.NEXT:=PROD_REJ.ref();
               PROD_NXT.add(1)
            ?}
         ?}
      |? PL_NEXT.PL_OPER<>null()
      ||
         PROD_REJ.index('PL_OPER');
         PROD_REJ.prefix('PL',PL_NEXT.PL_OPER);
         {? PROD_REJ.first()
         || PROD_NXT.blank(1);
            PROD_NXT.PROD_REJ:=PROD_REJ.ref();
            {? PL_NEXT.NEXT_OGR<>null()
            ||
               PROD_REJ.index('PL_OGR');
               PROD_REJ.prefix('PL',PL_NEXT.NEXT_OGR);
               {? PROD_REJ.first()
               || _has_wyk:=exec('has_wyk_ploper','po_wyk',PL_NEXT.PL_OPER);
                  {? _has_wyk=0
                  || PROD_REJ.DOREJ:='N';
                     PROD_REJ.put(1)
                  ?};
                  PROD_NXT.NEXT:=PROD_REJ.ref();
                  PROD_NXT.add(1)
               ?}
            |? PL_NEXT.NEXT<>null()
            ||
               PROD_REJ.index('PL_OPER');
               PROD_REJ.prefix('PL',PL_NEXT.NEXT);
               {? PROD_REJ.first()
               || _has_wyk:=exec('has_wyk_ploper','po_wyk',PL_NEXT.PL_OPER);
                  {? _has_wyk=0
                  || PROD_REJ.DOREJ:='N';
                     PROD_REJ.put(1)
                  ?};
                  PROD_NXT.NEXT:=PROD_REJ.ref();
                  PROD_NXT.add(1)
               ?}
            ?}
         ?};
         PROD_REJ.prefix('PX',PL_NEXT.PL_OPER);
         {? PROD_REJ.first()
         || PROD_NXT.blank(1);
            PROD_NXT.PROD_REJ:=PROD_REJ.ref();
            {? PL_NEXT.NEXT_OGR<>null()
            ||
               PROD_REJ.index('PL_OGR');
               PROD_REJ.prefix('PX',PL_NEXT.NEXT_OGR);
               {? PROD_REJ.first()
               || _has_wyk:=exec('has_wyk_ploper','po_wyk',PL_NEXT.PL_OPER);
                  {? _has_wyk=0
                  || PROD_REJ.DOREJ:='N';
                     PROD_REJ.put(1)
                  ?};
                  PROD_NXT.NEXT:=PROD_REJ.ref();
                  PROD_NXT.add(1)
               ?}
            |? PL_NEXT.NEXT<>null()
            ||
               PROD_REJ.index('PL_OPER');
               PROD_REJ.prefix('PX',PL_NEXT.NEXT);
               {? PROD_REJ.first()
               || _has_wyk:=exec('has_wyk_ploper','po_wyk',PL_NEXT.NEXT);
                  {? _has_wyk=0
                  || PROD_REJ.DOREJ:='N';
                     PROD_REJ.put(1)
                  ?};
                  PROD_NXT.NEXT:=PROD_REJ.ref();
                  PROD_NXT.add(1)
               ?}
            ?}
         ?}
      ?};

      Cntx.pop(PROD_REJ,PROD_NXT);
      ~~
   |? _a='del'
   ||
::    Przed usunieciem nastepnika usuwany jest zapis PROD_NXT
      Cntx.psh(PROD_REJ,PROD_NXT);

      _res:=1;
      PROD_REJ.index('PL_OPER');
      PROD_REJ.prefix('ZL',PL_NEXT.PL_OPER);
      {? PROD_REJ.first()
      ||
         PROD_NXT.index('PROD_REJ');
         PROD_NXT.prefix(PROD_REJ.ref());
         {? PROD_NXT.first()
         || {! |? PROD_NXT.del() !}
         ?};
         _res1:=~PROD_NXT.first();

         PROD_NXT.index('NEXT');
         PROD_NXT.prefix(PROD_REJ.ref());
         {? PROD_NXT.first()
         || {! |? PROD_NXT.del() !}
         ?};
         _res2:=~PROD_NXT.first();

         _res:=_res1*_res2
      ?};

      Cntx.pop(PROD_REJ,PROD_NXT);
      _res
   ||
      ~~
   ?}
|? _b=PL_OZ
||
   {? _a='add'
   ||
::    Dodanie PL_OZ = nowy PROD_REJ
::    Uwaga: wazna jest sekwencja pol ze wzgledu na podczytywanie relacji (optymalizacja kodu)
      Cntx.psh(PROD_REJ,PL_OPER,PL_PART,ZL);

      PROD_REJ.clear();
      PROD_REJ.blank(1);
      PROD_REJ.STARTD:=PL_OZ.PL_OPER().STARTD;
      PROD_REJ.STARTT:=PL_OPER.STARTT;
:: [areKc] - Ustalenie zmiany wykonującej pozycję z przewodnika.
      PROD_REJ.QZMIANA:=exec('zmiana','zl_common',PROD_REJ.STARTT);
      PROD_REJ.ENDD:=PL_OPER.ENDD;
      PROD_REJ.ENDT:=PL_OPER.ENDT;
      PROD_REJ.PRIORITY:='N';
      PROD_REJ.SRODZ:='PL';
      PROD_REJ.SOURCE:=$PL_OZ.ref();
      PROD_REJ.PL_OPER:=PL_OPER.ref();
      PROD_REJ.PL_OGR:=null();
      PROD_REJ.GROP:=null();
      PROD_REJ.PL_OZ:=PL_OZ.ref();
      exec('fields_4rej','po_wyk');
      PL_OPER.ZGP();
      PROD_REJ.KONTROLA:=ZGP.KONTROLA;
      PROD_REJ.KJ_BAD:=ZGP.KJ_BAD;
      PROD_REJ.RP:='N';
      {? ZGP.DOK<>null
      || PROD_REJ.RP:='T'
      ?};
      PL_OZ.PL_RES();
      PROD_REJ.WYD:=exec('szukaj_ud_skl','schemat','PODZORG',PL_RES.WYD);

      PROD_REJ.ZL:=PL_OPER.PL_PART().ZL;
      PROD_REJ.M:=PL_PART.M;
      PROD_REJ.JM:=PL_PART.M().J;
      PROD_REJ.RES_SYM:=PL_RES.SYM;
      PROD_REJ.RES_NAZ:=PL_RES.NAZ;
      PROD_REJ.ILC:=PL_OPER.ILOSC;
      PROD_REJ.ILW:=PL_OPER.IL_WYK;
      PROD_REJ.IL:=PL_OPER.ILOSC-PL_OPER.IL_WYK;
      PROD_REJ.START:='N';
      PROD_REJ.OK:='N';
      PROD_REJ.POTW:='N';
      PROD_REJ.PROBLEM:=PL_OPER.PROBLEM;
      PROD_REJ.PROBKLAS:=PL_OPER.PROBKLAS;
      PROD_REJ.PRAC:='N';
      PROD_REJ.BRYG:='N';
      PROD_REJ.KOOP:='N';

      {? PROD_REJ.ZL<>null()
      ||
         PROD_REJ.ZL();
         PROD_REJ.A:={? 1+ZL.STAN='O' || 'T' || 'N' ?}
      |? PROD_REJ.ZK_P<>null()
      ||
         PROD_REJ.A:='T'
      ||
         PROD_REJ.A:='N'
      ?};

      PROD_REJ.DOREJ:='T';
      PROD_REJ.add(1);

      Cntx.pop(PROD_REJ,PL_OPER,PL_PART,ZL);
      ~~
   |? _a='put'
   ||
::    Modyfikacja PL_OZ - zmiana zasobu i zmiana znacznikow czasowych
      Cntx.psh(PROD_REJ);

      PROD_REJ.index('PL_OZ');
      PROD_REJ.prefix('PL',PL_OZ.ref());
      {? PROD_REJ.first()
      ||
         PROD_REJ.STARTD:=PL_OZ.PL_OPER().STARTD;
         PROD_REJ.STARTT:=PL_OPER.STARTT;
:: [areKc] - Ustalenie zmiany wykonującej pozycję z przewodnika.
         PROD_REJ.QZMIANA:=exec('zmiana','zl_common',PROD_REJ.STARTT);
         PROD_REJ.ENDD:=PL_OPER.ENDD;
         PROD_REJ.ENDT:=PL_OPER.ENDT;
         PROD_REJ.RES_SYM:=PL_OZ.PL_RES().SYM;
         PROD_REJ.RES_NAZ:=PL_RES.NAZ;
         PROD_REJ.PROBLEM:=PL_OPER.PROBLEM;
         PROD_REJ.put(1)
      ?};

      Cntx.pop(PROD_REJ);
      ~~
   |? _a='del'
   ||
::    Usuniecie PL_OZ = usuniecie PROD_REJ
      Cntx.psh(PROD_REJ);

      PROD_REJ.index('PL_OZ');
      PROD_REJ.prefix('PL',PL_OZ.ref());
      {? PROD_REJ.first()
      || {!
         |?
            PROD_NXT.index('PROD_REJ');
            PROD_NXT.prefix(PROD_REJ.ref());
            {? PROD_NXT.first() || {! |? PROD_NXT.del() !} ?};

            PROD_NXT.index('NEXT');
            PROD_NXT.prefix(PROD_REJ.ref());
            {? PROD_NXT.first() || {! |? PROD_NXT.del() !} ?};

            _can_continue:=PROD_REJ.del(,1);

            PROD_REJ.first() & _can_continue>0
         !}
      ?};
      _res:=~PROD_REJ.first();

      Cntx.pop(PROD_REJ);
      _res
   ||
      ~~
   ?}
|? _b=PL_WYK
||
:: modyfikacje PL_WYK wplywaja na znacznik PROD_REJ.START
   {? _a='add' | _a='put' || _pl_oz:=PL_WYK.PL_OZ; _pl_ogr:=PL_WYK.PL_OGR; _pl_oper:=PL_WYK.PL_OPER
   |? _a='del' || _pl_oz:=bfld('PL_OZ'); _pl_ogr:=PL_WYK.PL_OGR; _pl_oper:=PL_WYK.PL_OPER
               || return()
   ?};

   Cntx.psh(PROD_REJ,PROD_NXT,PL_WYK);

   _start:=0;

   {? _pl_oz<>null()
   ||
::    Pojedyncza operacja
::    Operacja wystartowana - jezeli ostatnia zarejestrowana nie ma daty zakonczenia
::    Operacja do potwierdzenia - jezeli ktorakolwiek rejestracja nie jest potwierdzona
      _start:='N';
      _potw:='N';
      PL_WYK.index('PL_OZ');
      PL_WYK.prefix(_pl_oz);
      {? PL_WYK.first()
      || _potw:='T';
         {!
         |? {? PL_WYK.ENDD=null() || _start:='T' ?};
            {? PL_WYK.POTW='N' || _potw:='N' ?};
            PL_WYK.next()
         !}
      ?};

      PROD_REJ.index('PL_OZ');
      PROD_REJ.prefix('PL',_pl_oz);
      {? PROD_REJ.first()
      ||
         PROD_REJ.START:=_start;
         PROD_REJ.POTW:=_potw;
         _il:=exec('il_pop','po_wyk',PROD_REJ.ref());
         {? _il.IL_POP>PROD_REJ.ILW | ~_il.MAX || PROD_REJ.DOREJ:='T' || PROD_REJ.DOREJ:='N' ?};
         obj_del(_il);

         {? PROD_REJ.put()
         ||
            _prod_rej:=PROD_REJ.ref();
            PROD_REJ.cntx_psh();
            PROD_REJ.clear();

            PROD_NXT.index('PROD_REJ');
            PROD_NXT.prefix(_prod_rej);
            {? PROD_NXT.first()
            || {!
               |?
                  PROD_NXT.cntx_psh();
                  PROD_NXT.NEXT();
                  _il:=exec('il_pop','po_wyk',PROD_REJ.ref());
                  {? _il.IL_POP>PROD_REJ.ILW | ~_il.MAX
                  || PROD_REJ.DOREJ:='T'; PROD_REJ.put()
                  || PROD_REJ.DOREJ:='N'; PROD_REJ.put()
                  ?};
                  obj_del(_il);
                  PROD_NXT.cntx_pop();

                  PROD_NXT.next()
               !}
            ?};

            PROD_NXT.index('NEXT');
            PROD_NXT.prefix(_prod_rej);
            {? PROD_NXT.first()
            || {!
               |?
                  PROD_NXT.cntx_psh();
                  PROD_NXT.PROD_REJ();
                  _il:=exec('il_pop','po_wyk',PROD_REJ.ref());
                  {? _il.IL_POP>PROD_REJ.ILW | ~_il.MAX
                  || PROD_REJ.DOREJ:='T'; PROD_REJ.put()
                  || PROD_REJ.DOREJ:='N'; PROD_REJ.put()
                  ?};
                  obj_del(_il);
                  PROD_NXT.cntx_pop();

                  PROD_NXT.next()
               !}
            ?};

            PROD_REJ.cntx_pop();
            ~~
         ?}
      ?};
      ~~

   |? _pl_oper<>null()
   ||
::    Kooperacja (brak PL_OZ)
::    Operacja wystartowana - jezeli ostatnia zarejestrowana nie ma daty zakonczenia
      _start:='N';
      PL_WYK.index('PL_OPER');
      PL_WYK.prefix(_pl_oper);
      {? PL_WYK.first()
      || {!
         |? {? PL_WYK.ENDD=null() || _start:='T' ?};
            PL_WYK.next()
         !}
      ?};

      PROD_REJ.index('PL_OPER');
      PROD_REJ.prefix('PL',_pl_oper);
      {? PROD_REJ.first()
      ||
         PROD_REJ.START:=_start;
         _il:=exec('il_pop','po_wyk',PROD_REJ.ref());
         {? _il.IL_POP>PROD_REJ.ILW | ~_il.MAX || PROD_REJ.DOREJ:='T' || PROD_REJ.DOREJ:='N' ?};
         obj_del(_il);

         {? PROD_REJ.put()
         ||
            _prod_rej:=PROD_REJ.ref();
            PROD_REJ.cntx_psh();
            PROD_REJ.clear();

            PROD_NXT.index('PROD_REJ');
            PROD_NXT.prefix(_prod_rej);
            {? PROD_NXT.first()
            || {!
               |?
                  PROD_NXT.cntx_psh();
                  PROD_NXT.NEXT();
                  _il:=exec('il_pop','po_wyk',PROD_REJ.ref());
                  {? _il.IL_POP>PROD_REJ.ILW | ~_il.MAX
                  || PROD_REJ.DOREJ:='T'; PROD_REJ.put()
                  || PROD_REJ.DOREJ:='N'; PROD_REJ.put()
                  ?};
                  obj_del(_il);
                  PROD_NXT.cntx_pop();

                  PROD_NXT.next()
               !}
            ?};

            PROD_NXT.index('NEXT');
            PROD_NXT.prefix(_prod_rej);
            {? PROD_NXT.first()
            || {!
               |?
                  PROD_NXT.cntx_psh();
                  PROD_NXT.PROD_REJ();
                  _il:=exec('il_pop','po_wyk',PROD_REJ.ref());
                  {? _il.IL_POP>PROD_REJ.ILW | ~_il.MAX
                  || PROD_REJ.DOREJ:='T'; PROD_REJ.put()
                  || PROD_REJ.DOREJ:='N'; PROD_REJ.put()
                  ?};
                  obj_del(_il);
                  PROD_NXT.cntx_pop();

                  PROD_NXT.next()
               !}
            ?};

            PROD_REJ.cntx_pop();
            ~~
         ?}
      ?};
      ~~

   |? _pl_ogr<>null()
   ||
::    Grupa operacji
::    Operacja wystartowana - jezeli ostatnia zarejestrowana nie ma daty zakonczenia
::    Operacja do potwierdzenia - jezeli ktorakolwiek rejestracja nie jest potwierdzona
      _start:='N';
      _potw:='N';
      PL_WYK.index('PL_OGR');
      PL_WYK.prefix(_pl_ogr);
      {? PL_WYK.first()
      || _potw:='T';
         {!
         |? {? PL_WYK.ENDD=null() || _start:='T' ?};
            {? PL_WYK.POTW='N' || _potw:='N' ?};
            PL_WYK.next()
         !}
      ?};

      PROD_REJ.index('PL_OGR');
      PROD_REJ.prefix('PL',_pl_ogr);
      {? PROD_REJ.first()
      ||
         PROD_REJ.START:=_start;
         PROD_REJ.POTW:=_potw;
         _il:=exec('il_pop','po_wyk',PROD_REJ.ref());
         {? _il.IL_POP>PROD_REJ.ILW | ~_il.MAX || PROD_REJ.DOREJ:='T' || PROD_REJ.DOREJ:='N' ?};
         obj_del(_il);

         {? PROD_REJ.put()
         ||
            _prod_rej:=PROD_REJ.ref();
            PROD_REJ.cntx_psh();
            PROD_REJ.clear();

            PROD_NXT.index('PROD_REJ');
            PROD_NXT.prefix(_prod_rej);
            {? PROD_NXT.first()
            || {!
               |?
                  PROD_NXT.cntx_psh();
                  PROD_NXT.NEXT();
                  _il:=exec('il_pop','po_wyk',PROD_REJ.ref());
                  {? _il.IL_POP>PROD_REJ.ILW | ~_il.MAX
                  || PROD_REJ.DOREJ:='T'; PROD_REJ.put()
                  || PROD_REJ.DOREJ:='N'; PROD_REJ.put()
                  ?};
                  obj_del(_il);
                  PROD_NXT.cntx_pop();

                  PROD_NXT.next()
               !}
            ?};

            PROD_NXT.index('NEXT');
            PROD_NXT.prefix(_prod_rej);
            {? PROD_NXT.first()
            || {!
               |?
                  PROD_NXT.cntx_psh();
                  PROD_NXT.PROD_REJ();
                  _il:=exec('il_pop','po_wyk',PROD_REJ.ref());
                  {? _il.IL_POP>PROD_REJ.ILW | ~_il.MAX
                  || PROD_REJ.DOREJ:='T'; PROD_REJ.put()
                  || PROD_REJ.DOREJ:='N'; PROD_REJ.put()
                  ?};
                  obj_del(_il);
                  PROD_NXT.cntx_pop();

                  PROD_NXT.next()
               !}
            ?};

            PROD_REJ.cntx_pop();
            ~~
         ?}
      ?};
      ~~

   ?};

   Cntx.pop(PROD_REJ,PROD_NXT,PL_WYK);
   ~~
|? _b=ZL
||
::  modyfikacja stanu zlecenia = zmiana aktywnosci odpowiednich PROD_REJ
   {? _a='put'
   || Cntx.psh(PROD_REJ);

      PROD_REJ.index('ZL');
      PROD_REJ.prefix('PL',ZL.ref());
      {? PROD_REJ.first()
      || {!
         |?
            PROD_REJ.A:={? 1+ZL.STAN='O' || 'T' || 'N' ?};
            PROD_REJ.put();
            PROD_REJ.next()
         !}
      ?};

      Cntx.pop(PROD_REJ)
   ?};
   ~~
|? _b=PL_OGR
||
   {? _a='add'
   ||
::    Dodanie PL_OGR = nowy PROD_REJ
::    Uwaga: wazna jest sekwencja pol ze wzgledu na podczytywanie relacji (optymalizacja kodu)
      Cntx.psh(PROD_REJ,PL_OGR,GROP);

      PROD_REJ.clear();
      PROD_REJ.blank(1);
      PROD_REJ.STARTD:=PL_OGR.STARTD;
      PROD_REJ.STARTT:=PL_OGR.STARTT;
:: [areKc] - Ustalenie zmiany wykonującej pozycję z przewodnika.
      PROD_REJ.QZMIANA:=exec('zmiana','zl_common',PROD_REJ.STARTT);
      PROD_REJ.ENDD:=PL_OGR.ENDD;
      PROD_REJ.ENDT:=PL_OGR.ENDT;
      PROD_REJ.PRIORITY:='N';
      PROD_REJ.SRODZ:='PL';
      PROD_REJ.SOURCE:=$PL_OGR.ref();
      PROD_REJ.PL_OPER:=null();
      PROD_REJ.PL_OGR:=PL_OGR.ref();
      PROD_REJ.GROP:=PL_OGR.GROP;
      PROD_REJ.PL_OZ:=null();
      exec('fields_4rej','po_wyk');
      PROD_REJ.ZL:=null();
      PROD_REJ.M:=null();
      PROD_REJ.JM:=null();
      PROD_REJ.RES_SYM:=PL_OGR.PL_RES().SYM;
      PROD_REJ.RES_NAZ:=PL_RES.NAZ;
      PROD_REJ.WYD:=exec('szukaj_ud_skl','schemat','PODZORG',PL_RES.WYD);
      PROD_REJ.ILC:=PL_OGR.ILOSC;
      PROD_REJ.ILW:=0;
      PROD_REJ.IL:=PL_OGR.ILOSC;
      PROD_REJ.START:='N';
      PROD_REJ.OK:='N';
      PROD_REJ.POTW:='N';
      PROD_REJ.PROBLEM:='N';
      PROD_REJ.PRAC:='N';
      PROD_REJ.BRYG:='N';
      PROD_REJ.KOOP:='N';
      PROD_REJ.RP:='N';
      PROD_REJ.A:={? PL_OGR.GROP().AKC='T' & GROP.STATUS='O' || 'T' || 'N' ?};
      PROD_REJ.DOREJ:='T';
      PROD_REJ.KONTROLA:='N';
      PROD_REJ.KJ_BAD:='N';
      PROD_REJ.add(1);

      Cntx.pop(PROD_REJ,PL_OGR,GROP);
      ~~
   |? _a='put'
   ||
::    Modyfikacja PL_OGR - zawsze aktualizacja
      Cntx.psh(PROD_REJ,PL_NEXT);

      PROD_REJ.index('PL_OGR');
      PROD_REJ.prefix('PL',PL_OGR.ref());
      {? PROD_REJ.first()
      ||
         PROD_REJ.STARTD:=PL_OGR.STARTD;
         PROD_REJ.STARTT:=PL_OGR.STARTT;
:: [areKc] - Ustalenie zmiany wykonującej pozycję z przewodnika.
         PROD_REJ.QZMIANA:=exec('zmiana','zl_common',PROD_REJ.STARTT);
         PROD_REJ.ENDD:=PL_OGR.ENDD;
         PROD_REJ.ENDT:=PL_OGR.ENDT;
         exec('fields_4rej','po_wyk');
         PROD_REJ.RES_SYM:=PL_OGR.PL_RES().SYM;
         PROD_REJ.RES_NAZ:=PL_RES.NAZ;
         PROD_REJ.WYD:=exec('szukaj_ud_skl','schemat','PODZORG',PL_RES.WYD);
         PROD_REJ.A:={? PL_OGR.GROP().AKC='T' & GROP.STATUS='O' || 'T' || 'N' ?};
         PROD_REJ.ILC:=PL_OGR.ILOSC;
         PROD_REJ.ILW:=PL_OGR.IL_WYK;
         PROD_REJ.IL:=PL_OGR.ILOSC-PL_OGR.IL_WYK;
         {? PROD_REJ.IL<=0 || PROD_REJ.IL:=0; PROD_REJ.OK:='T' || PROD_REJ.OK:='N' ?};
         PROD_REJ.put(1);

:: - Aktualizacja znacznika 'do rejestracji' PROD_REJ.DOREJ dla kolejnych operacji
         PL_NEXT.index('PL_OGR');
         PL_NEXT.prefix(PL_OGR.ref());
         {? PL_NEXT.first()
         || PROD_REJ.index('PL_OPER');
            PROD_REJ.prefix('PL',PL_NEXT.NEXT);
            {? PROD_REJ.first()
            || {!
               |? _il:=exec('il_pop','po_wyk',PROD_REJ.ref());
                  {? _il.IL_POP>PROD_REJ.ILW | ~_il.MAX || PROD_REJ.DOREJ:='T' || PROD_REJ.DOREJ:='N' ?};
                  PROD_REJ.put();
                  obj_del(_il);

                  PROD_REJ.next()
               !}
            ?}
         ?}
      ?};

      Cntx.pop(PROD_REJ,PL_NEXT);
      ~~
   |? _a='del'
   ||
::    Usuniecie PL_OGR = usuniecie PROD_REJ
      Cntx.psh(PROD_REJ);

      PROD_REJ.index('PL_OGR');
      PROD_REJ.prefix('PL',PL_OGR.ref());
      {? PROD_REJ.first()
      ||
         PROD_NXT.index('PROD_REJ');
         PROD_NXT.prefix(PROD_REJ.ref());
         {? PROD_NXT.first() || {! |? PROD_NXT.del() !} ?};

         PROD_NXT.index('NEXT');
         PROD_NXT.prefix(PROD_REJ.ref());
         {? PROD_NXT.first() || {! |? PROD_NXT.del() !} ?};

         PROD_REJ.del()
      ?};
      _res:=~PROD_REJ.first();

      Cntx.pop(PROD_REJ);
      _res
   ||
      ~~
   ?}
|? _b=GROP
||
::  modyfikacja stanu grupy operacji = zmiana aktywnosci odpowiednich PROD_REJ
   {? _a='put'
   || Cntx.psh(PROD_REJ);

      PROD_REJ.index('GROP');
      PROD_REJ.prefix('PL',GROP.ref());
      {? PROD_REJ.first()
      || {!
         |? PROD_REJ.A:={? GROP.STATUS='O' & GROP.AKC='T' || 'T' || 'N' ?};
            PROD_REJ.put();
            PROD_REJ.next()
         !}
      ?};

      Cntx.pop(PROD_REJ)
   ?};
   ~~
||
   ~~
?}


\load_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Ładuje dane do tabeli do rejestracji wykonań - plan operacyjny
::       Funkcja służy tylko do zainicjowania danych - na bieżąco działają triggery
::   WE: [_a] - czy pytać o wykonanie funkcji
::       [_b] - PL_PART.ref() - przewodnik planistyczny dla którego uruchomić odwarzanie PROD_REJ
::  OLD: \load_4rej/pl_wyk.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _dialog:=_a || _dialog:=1 ?};

{? _dialog
||
   {? ~FUN.ask('Czy zainicjować ponownie tabelę do rejestracji produkcji dla planu operacyjnego?'@)
   || return('')
   ?}
?};
_plpart:=null();
{? var_pres('_b')=type_of(PL_PART.ref())
|| _plpart:=_b
?};

exec('del_4rej','po_wyk');

Cntx.psh(PROD_REJ,PROD_NXT,PL_OZ,PL_OPER,PL_OGR,PL_PART,ZL,PL_NEXT);
Cntx.clr(PROD_REJ,PROD_NXT,PL_OZ,PL_OPER,PL_OGR,PL_PART,ZL);

:: Obsługa dla operacji pojedynczych na zasobach oraz dla operacji bez zasobów (np. kooperacja)
{? _plpart<>null()
|| PL_OPER.index('PL_PART');
   PL_OPER.prefix(_plpart)
|| PL_OPER.index('STARTD');
   PL_OPER.prefix()
?};
{? PL_OPER.first()
|| {!
   |? PL_OZ.index('PL_OPER');
      PL_OZ.prefix(PL_OPER.ref());
      {? PL_OZ.first()
      ||
::       Jeżeli są PL_OZy, czyli operacja zaplanowana na zasobach (dalej sekcja bez PL_OZów, czyli dla kooperacji)
         {!
         |?
::          Uwaga: ważna jest sekwencja pól ze względu na podczytywanie relacji (optymalizacja kodu)
            PROD_REJ.blank(1);
            PROD_REJ.STARTD:=PL_OPER.STARTD;
            PROD_REJ.STARTT:=PL_OPER.STARTT;
:: [areKc] - Ustalenie zmiany wykonującej pozycję z przewodnika.
            PROD_REJ.QZMIANA:=exec('zmiana','zl_common',PROD_REJ.STARTT);
            PROD_REJ.ENDD:=PL_OPER.ENDD;
            PROD_REJ.ENDT:=PL_OPER.ENDT;
            PROD_REJ.PRIORITY:='N';
            PROD_REJ.SRODZ:='PL';
            PROD_REJ.SOURCE:=$PL_OZ.ref();
            PROD_REJ.PL_OPER:=PL_OPER.ref();
            PROD_REJ.PL_OGR:=null();
            PROD_REJ.GROP:=null();
            PROD_REJ.PL_OZ:=PL_OZ.ref();
            exec('fields_4rej','po_wyk');
            PL_OPER.ZGP();
            PROD_REJ.KONTROLA:=ZGP.KONTROLA;
            PROD_REJ.KJ_BAD:=ZGP.KJ_BAD;
            PROD_REJ.RP:='N';
            {? ZGP.DOK<>null
            || PROD_REJ.RP:='T'
            ?};
            PL_OZ.PL_RES();
            PROD_REJ.WYD:=exec('szukaj_ud_skl','schemat','PODZORG',PL_RES.WYD);

::          Zlecenie albo zamówienie
            PL_OPER.PL_PART();
            {? PL_PART.ZL<>null()
            || PROD_REJ.ZL:=PL_PART.ZL
            |? PL_PART.ZK_P<>null()
            || ZK_P.use(ref_name(PL_PART.ZK_P));
               PROD_REJ.ZK_P:=PL_PART.ZK_P;
               ZK_N.use(ref_name(PL_PART.ZK_P().N));
               PROD_REJ.ZK_N:=PL_PART.ZK_P().N
            ?};

            PROD_REJ.M:=PL_PART.M;
            PROD_REJ.JM:=PL_PART.M().J;
            PROD_REJ.RES_SYM:=PL_RES.SYM;
            PROD_REJ.RES_NAZ:=PL_RES.NAZ;
            PROD_REJ.IL:=PL_OPER.ILOSC-PL_OPER.IL_WYK;
            {? PROD_REJ.IL<0 || PROD_REJ.IL:=0 ?};
            PROD_REJ.ILW:=PL_OPER.IL_WYK;
            PROD_REJ.ILC:=PL_OPER.ILOSC;

::          Operacja wystartowana - jezeli ostatnia zarejestrowana nie ma daty zakonczenia
::          Operacja do potwierdzenia - jezeli ktorakolwiek rejestracja nie jest potwierdzona
            PROD_REJ.START:='N';
            PROD_REJ.POTW:='N';
            PL_WYK.index('PL_OZ');
            PL_WYK.prefix(PL_OZ.ref());
            {? PL_WYK.first()
            || PROD_REJ.POTW:='T';
               {!
               |? {? PL_WYK.ENDD=null() || PROD_REJ.START:='T' ?};
                  {? PL_WYK.POTW<>'T' || PROD_REJ.POTW:='N' ?};
                  PL_WYK.next()
               !}
            ?};

            PROD_REJ.OK:={? PROD_REJ.ILW>=PROD_REJ.ILC || 'T' || 'N' ?};
            PROD_REJ.PROBLEM:=PL_OPER.PROBLEM;
            PROD_REJ.PRAC:='N';
            PROD_REJ.BRYG:='N';
            PROD_REJ.KOOP:='N';

            {? PROD_REJ.ZL<>null()
            || PROD_REJ.ZL();
               PROD_REJ.A:={? ZL.STAN='O' || 'T' || 'N' ?};
               PROD_REJ.DOREJ:='N'
            |? PROD_REJ.ZK_P<>null()
            || PROD_REJ.A:='T';
               PROD_REJ.DOREJ:='N'
            || PROD_REJ.A:='N';
               PROD_REJ.DOREJ:='N'
            ?};

            {? PROD_REJ.add(1)
            || _prod_rej:=PROD_REJ.ref();
               PROD_REJ.cntx_psh();

::             Następniki operacji
               PL_NEXT.index('PL_OPER');
               PL_NEXT.prefix(PL_OPER.ref());
               {? PL_NEXT.first()
               || {!
                  |? PROD_NXT.blank(1);
                     PROD_NXT.PROD_REJ:=_prod_rej;
                     {? PL_NEXT.NEXT<>null()
                     ||
::                      następna jest PL_OPER
                        PROD_REJ.index('PL_OPER');
                        PROD_REJ.prefix('PL',PL_NEXT.NEXT);
                        {? PROD_REJ.first()
                        || PROD_NXT.NEXT:=PROD_REJ.ref();
                           PROD_NXT.add(1)
                        ?}
                     |? PL_NEXT.NEXT_OGR<>null()
                     ||
::                      następna jest PL_OGR
                        PROD_REJ.index('PL_OGR');
                        PROD_REJ.prefix('PL',PL_NEXT.NEXT_OGR);
                        {? PROD_REJ.first()
                        || PROD_NXT.NEXT:=PROD_REJ.ref();
                           PROD_NXT.add(1)
                        ?}
                     ?};
                     PL_NEXT.next()
                  !}
               ?};

::             Poprzedniki operacji
               PL_NEXT.index('NEXT');
               PL_NEXT.prefix(PL_OPER.ref());
               {? PL_NEXT.first()
               || {!
                  |? PROD_NXT.blank(1);
                     PROD_NXT.NEXT:=_prod_rej;
                     {? PL_NEXT.PL_OPER<>null()
                     ||
::                      poprzednia jest PL_OPER
                        PROD_REJ.index('PL_OPER');
                        PROD_REJ.prefix('PL',PL_NEXT.PL_OPER);
                        {? PROD_REJ.first()
                        || PROD_NXT.PROD_REJ:=PROD_REJ.ref();
                           PROD_NXT.add(1)
                        ?}
                     |? PL_NEXT.PL_OGR<>null()
                     ||
::                      poprzednia jest PL_OGR
                        PROD_REJ.index('PL_OGR');
                        PROD_REJ.prefix('PL',PL_NEXT.PL_OGR);
                        {? PROD_REJ.first()
                        || PROD_NXT.PROD_REJ:=PROD_REJ.ref();
                           PROD_NXT.add(1)
                        ?}
                     ?};
                     PL_NEXT.next()
                  !}
               ?};
               PROD_REJ.cntx_pop()
            ?};
            PL_OZ.next()
         !}
      ||
::       Brak PL_OZ, czyli kooperacja albo inna operacja w planie, ale bez obciążeń zasobów (nie dotyczy zamówienia)
::       Uwaga: ważna jest sekwencja pól ze względu na podczytywanie relacji (optymalizacja kodu)
         PROD_REJ.blank(1);
         PROD_REJ.STARTD:=PL_OPER.STARTD;
         PROD_REJ.STARTT:=PL_OPER.STARTT;
:: [areKc] - Ustalenie zmiany wykonującej pozycję z przewodnika.
         PROD_REJ.QZMIANA:=exec('zmiana','zl_common',PROD_REJ.STARTT);
         PROD_REJ.ENDD:=PL_OPER.ENDD;
         PROD_REJ.ENDT:=PL_OPER.ENDT;
         PROD_REJ.PRIORITY:='N';
         PROD_REJ.SRODZ:='PL';
         PROD_REJ.SOURCE:=$PL_OPER.ref();
         PROD_REJ.PL_OPER:=PL_OPER.ref();
         PROD_REJ.PL_OGR:=null();
         PROD_REJ.GROP:=null();
         PROD_REJ.PL_OZ:=null();
         exec('fields_4rej','po_wyk');
         PROD_REJ.RP:='N';
         {? PL_OPER.ZGP<>null()
         || PL_OPER.ZGP();
            PROD_REJ.KONTROLA:=ZGP.KONTROLA;
            PROD_REJ.KJ_BAD:=ZGP.KJ_BAD;
            PROD_REJ.WYD:=exec('wyd','zl_guide');
            {? ZGP.DOK<>null
            || PROD_REJ.RP:='T'
            ?}
         || PROD_REJ.KONTROLA:='N';
            PROD_REJ.KJ_BAD:='N';
            PROD_REJ.WYD:=null()
         ?};
         PROD_REJ.ZL:=PL_OPER.PL_PART().ZL;
         PROD_REJ.M:=PL_PART.M;
         PROD_REJ.JM:=PL_PART.M().J;
         PROD_REJ.RES_SYM:='{KOOPERACJA}';
         PROD_REJ.RES_NAZ:='Kooperacja';
         PROD_REJ.IL:=PL_OPER.ILOSC-PL_OPER.IL_WYK;
         {? PROD_REJ.IL<0 || PROD_REJ.IL:=0 ?};
         PROD_REJ.ILW:=PL_OPER.IL_WYK;
         PROD_REJ.ILC:=PL_OPER.ILOSC;

::       Operacja wystartowana - jezeli ostatnia zarejestrowana nie ma daty zakonczenia
::       Operacja do potwierdzenia - jezeli ktorakolwiek rejestracja nie jest potwierdzona
         PROD_REJ.START:='N';
         PROD_REJ.POTW:='N';
         PL_WYK.index('PL_OZ');
         PL_WYK.prefix(PL_OZ.ref());
         {? PL_WYK.first()
         || PROD_REJ.POTW:='T';
            {!
            |? {? PL_WYK.ENDD=null() || PROD_REJ.START:='T' ?};
               {? PL_WYK.POTW<>'T' || PROD_REJ.POTW:='N' ?};
               PL_WYK.next()
            !}
         ?};

         PROD_REJ.OK:={? PROD_REJ.ILW>=PROD_REJ.ILC || 'T' || 'N' ?};
         PROD_REJ.PROBLEM:=PL_OPER.PROBLEM;
         PROD_REJ.PRAC:='N';
         PROD_REJ.BRYG:='N';
         PROD_REJ.KOOP:='T';
::       Podczytanie zlecenia
         PROD_REJ.ZL();
         PROD_REJ.A:={? ZL.STAN='O' || 'T' || 'N' ?};
         PROD_REJ.DOREJ:='N';
         {? PROD_REJ.add(1)
         ||
            _prod_rej:=PROD_REJ.ref();
            PROD_REJ.cntx_psh();

::          Nastepniki operacji
            PL_NEXT.index('PL_OPER');
            PL_NEXT.prefix(PL_OPER.ref());
            {? PL_NEXT.first()
            || {!
               |? PROD_NXT.blank(1);
                  PROD_NXT.PROD_REJ:=_prod_rej;
                  {? PL_NEXT.NEXT<>null()
                  ||
::                   nastepna jest PL_OPER
                     PROD_REJ.index('PL_OPER');
                     PROD_REJ.prefix('PL',PL_NEXT.NEXT);
                     {? PROD_REJ.first()
                     || PROD_NXT.NEXT:=PROD_REJ.ref();
                        PROD_NXT.add(1)
                     ?}
                  |? PL_NEXT.NEXT_OGR<>null()
                  ||
::                   nastepna jest PL_OGR
                     PROD_REJ.index('PL_OGR');
                     PROD_REJ.prefix('PL',PL_NEXT.NEXT_OGR);
                     {? PROD_REJ.first()
                     || PROD_NXT.NEXT:=PROD_REJ.ref();
                        PROD_NXT.add(1)
                     ?}
                  ?};
                  PL_NEXT.next()
               !}
            ?};

::          Poprzedniki operacji
            PL_NEXT.index('NEXT');
            PL_NEXT.prefix(PL_OPER.ref());
            {? PL_NEXT.first()
            || {!
               |? PROD_NXT.blank(1);
                  PROD_NXT.NEXT:=_prod_rej;
                  {? PL_NEXT.PL_OPER<>null()
                  ||
::                   poprzednia jest PL_OPER
                     PROD_REJ.index('PL_OPER');
                     PROD_REJ.prefix('PL',PL_NEXT.PL_OPER);
                     {? PROD_REJ.first()
                     || PROD_NXT.PROD_REJ:=PROD_REJ.ref();
                        PROD_NXT.add(1)
                     ?}
                  |? PL_NEXT.PL_OGR<>null()
                  ||
::                   poprzednia jest PL_OGR
                     PROD_REJ.index('PL_OGR');
                     PROD_REJ.prefix('PL',PL_NEXT.PL_OGR);
                     {? PROD_REJ.first()
                     || PROD_NXT.PROD_REJ:=PROD_REJ.ref();
                        PROD_NXT.add(1)
                     ?}
                  ?};
                  PL_NEXT.next()
               !}
            ?};
            PROD_REJ.cntx_pop()
         ?}
      ?};
      PL_OPER.next()
   !}
?};

:: Obsługa dla operacji grupowych na zasobach
PL_OGR.index('TM_START');
PL_OGR.prefix();
{? PL_OGR.first()
|| {!
   |?
::    Uwaga: ważna jest sekwencja pól ze względu na podczytywanie relacji (optymalizacja kodu)
      PROD_REJ.blank(1);
      PROD_REJ.STARTD:=PL_OGR.STARTD;
      PROD_REJ.STARTT:=PL_OGR.STARTT;
      PROD_REJ.ENDD:=PL_OGR.ENDD;
      PROD_REJ.ENDT:=PL_OGR.ENDT;
      PROD_REJ.PRIORITY:='N';
      PROD_REJ.SRODZ:='PL';
      PROD_REJ.SOURCE:=$PL_OGR.ref();
      PROD_REJ.PL_OPER:=null();
      PROD_REJ.PL_OGR:=PL_OGR.ref();
      PROD_REJ.GROP:=PL_OGR.GROP;
      PROD_REJ.PL_OZ:=null();
      exec('fields_4rej','po_wyk');

::    Operacja grupowa nie dotyczy bezposrednio zlecenia
      PROD_REJ.ZL:=null();

::    Operacja grupowa nie dotyczy bezposrednio produktu
      PROD_REJ.M:=null();
      PROD_REJ.JM:=null();

      PROD_REJ.RES_SYM:=PL_OGR.PL_RES().SYM;
      PROD_REJ.RES_NAZ:=PL_RES.NAZ;
      PROD_REJ.WYD:=exec('szukaj_ud_skl','schemat','PODZORG',PL_RES.WYD);
      PROD_REJ.IL:=PL_OGR.ILOSC-PL_OGR.IL_WYK;
      {? PROD_REJ.IL<0 || PROD_REJ.IL:=0 ?};
      PROD_REJ.ILW:=PL_OGR.IL_WYK;
      PROD_REJ.ILC:=PL_OGR.ILOSC;

::    Operacja wystartowana - jezeli ostatnia zarejestrowana nie ma daty zakonczenia
::    Operacja do potwierdzenia - jezeli ktorakolwiek rejestracja nie jest potwierdzona
      PROD_REJ.START:='N';
      PROD_REJ.POTW:='N';
      PL_WYK.index('PL_OGR');
      PL_WYK.prefix(PL_OGR.ref());
      {? PL_WYK.first()
      || PROD_REJ.POTW:='T';
         {!
         |? {? PL_WYK.ENDD=null() || PROD_REJ.START:='T' ?};
            {? PL_WYK.POTW<>'T' || PROD_REJ.POTW:='N' ?};
            PL_WYK.next()
         !}
      ?};

      PROD_REJ.OK:={? PROD_REJ.ILW>=PROD_REJ.ILC || 'T' || 'N' ?};
      PROD_REJ.PROBLEM:='N';
      PROD_REJ.PRAC:='N';
      PROD_REJ.BRYG:='N';
      PROD_REJ.KOOP:='N';
      PROD_REJ.KONTROLA:='N';
      PROD_REJ.KJ_BAD:='N';
      PROD_REJ.RP:='N';

::    Aktywne sa zaakceptowane grupy
      PROD_REJ.A:={? PROD_REJ.GROP().AKC='T' & GROP.STATUS='O' || 'T' || 'N' ?};

::    Czy do rejestracji, zalezy potem czy ma poprzednika
      PROD_REJ.DOREJ:='N';

      {? PROD_REJ.add(1)
      ||
         _prod_rej:=PROD_REJ.ref();
         PROD_REJ.cntx_psh();

::       Nastepniki operacji
         PL_NEXT.index('PL_OGR');
         PL_NEXT.prefix(PL_OGR.ref());
         {? PL_NEXT.first()
         || {!
            |? PROD_NXT.blank(1);
               PROD_NXT.PROD_REJ:=_prod_rej;
               {? PL_NEXT.NEXT<>null()
               ||
::                nastepna jest PL_OPER
                  PROD_REJ.index('PL_OPER');
                  PROD_REJ.prefix('PL',PL_NEXT.NEXT);
                  {? PROD_REJ.first()
                  || PROD_NXT.NEXT:=PROD_REJ.ref();
                     PROD_NXT.add(1)
                  ?}
               ||
::                nastepna jest PL_OGR
                  PROD_REJ.index('PL_OGR');
                  PROD_REJ.prefix('PL',PL_NEXT.NEXT_OGR);
                  {? PROD_REJ.first()
                  || PROD_NXT.NEXT:=PROD_REJ.ref();
                     PROD_NXT.add(1)
                  ?}
               ?};
               PL_NEXT.next()
            !}
         ?};

::       Poprzedniki operacji
         PL_NEXT.index('NEXT_OGR');
         PL_NEXT.prefix(PL_OGR.ref());
         {? PL_NEXT.first()
         || {!
            |?
               PROD_NXT.blank(1);
               PROD_NXT.NEXT:=_prod_rej;
               {? PL_NEXT.PL_OPER<>null()
               ||
::                poprzednia jest PL_OPER
                  PROD_REJ.index('PL_OPER');
                  PROD_REJ.prefix('PL',PL_NEXT.PL_OPER);
                  {? PROD_REJ.first()
                  || PROD_NXT.PROD_REJ:=PROD_REJ.ref();
                     PROD_NXT.add(1)
                  ?}
               ||
::                poprzednia jest PL_OGR
                  PROD_REJ.index('PL_OGR');
                  PROD_REJ.prefix('PL',PL_NEXT.PL_OGR);
                  {? PROD_REJ.first()
                  || PROD_NXT.PROD_REJ:=PROD_REJ.ref();
                     PROD_NXT.add(1)
                  ?}
               ?};
               PL_NEXT.next()
            !}
         ?};

         PROD_REJ.cntx_pop()
      ?};

      PL_OGR.next()
   !}
?};

:: Ustalenie stanu do rejestracji dla poszczegolnych operacji
PROD_REJ.index('PL_OPER');
PROD_REJ.prefix('PL');
{? PROD_REJ.first()
|| {!
   |? _il:=exec('il_pop','po_wyk',PROD_REJ.ref());
      {? _il.IL_POP>PROD_REJ.ILW | ~_il.MAX || PROD_REJ.DOREJ:='T'; PROD_REJ.put() ?};
      obj_del(_il);

      PROD_REJ.next()
   !}
?};

Cntx.pop(PROD_REJ,PROD_NXT,PL_OZ,PL_OPER,PL_OGR,PL_PART,ZL,PL_NEXT);
{? _dialog || FUN.info('Zainicjowano tabelę do rejestracji produkcji dla planu operacyjnego.'@) ?};
''