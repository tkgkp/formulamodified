:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: px_wyk.fml [12.10]
:: Utworzony: 2011-07-30
:: Autor: TS
::======================================================================================================================
:: Zawartość: Obsługa rejestracji wykonania planu w planie strategicznym (wielowymiarowym planie pojemnościowym)
::======================================================================================================================


\update_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Aktualizacja tabel PROD_REJ i PROD_NXT na podstawie zmian w tabelach PX_POZ, PX_WYK (obsluga triggerow)
::   WE: _a - rodzaj triggera: 'add', 'put', 'del'
::       _b - tabela: PX_POZ, PX_WYK
::   WY: wynik sterujacy dla triggera, czyli ~~ albo 0/1
::----------------------------------------------------------------------------------------------------------------------
{? _b=PX_POZ
|| {? _a='add'
   ||
::    Pozycje "rodzą" się ze statusem normalnym, więc dodajemy wszystkie nowe z wersji głównej planu
::    z pominięceim pozycji z planu operacyjnego
      {? PX_POZ.PX_VER=exec('get_mainversion','px_ver') & PX_POZ.PL_OPER=null() & PX_POZ.PL_OGR=null() & PX_POZ.PX_OBJ().REM_ZGL=null()
      ||
         Cntx.psh(PROD_REJ,PROD_NXT,PX_CUP,PX_OBJ,PL_OPER,ZGP,GROP,GROPS);
         Cntx.clr(PROD_REJ,PROD_NXT);

         _stat:=exec('statusy','px_poz');

         PROD_REJ.blank(1);
         PROD_REJ.STARTD:=exec('tm_stamp2date','#tm_stamp',PX_POZ.TM_START);
         PROD_REJ.STARTT:=exec('tm_stamp2time','#tm_stamp',PX_POZ.TM_START);
         PROD_REJ.ENDD:=exec('tm_stamp2date','#tm_stamp',PX_POZ.TM_END);
         PROD_REJ.ENDT:=exec('tm_stamp2time','#tm_stamp',PX_POZ.TM_END);
:: [areKc] - Ustalenie zmiany wykonującej pozycję z przewodnika.
         PROD_REJ.QZMIANA:=exec('zmiana','zl_common',PROD_REJ.STARTT);         
         exec('fields_4rej','px_wyk');
         PROD_REJ.PRIORITY:='N';
         PROD_REJ.SRODZ:='PX';
         PROD_REJ.SOURCE:=$PX_POZ.ref();
         PROD_REJ.PX_POZ:=PX_POZ.ref();
         PROD_REJ.PL_OPER:=PX_POZ.PL_OPER;
         PROD_REJ.PL_OGR:=PX_POZ.PL_OGR;
         PROD_REJ.ZL:=PX_POZ.PX_OBJ().ZL;
         PROD_REJ.M:=PX_OBJ.M;
         PROD_REJ.GROP:=PX_POZ.PX_GRP().GROPS().GROP;
         PROD_REJ.GROPS:=GROPS.ref();
         PROD_REJ.RES_SYM:=PX_POZ.PX_KONT().SYMBOL;
         PROD_REJ.RES_NAZ:=PX_KONT.NAZWA;
         PROD_REJ.WYD:=exec('szukaj_ud_skl','schemat','PODZORG',PX_KONT.PL_RES().WYD);
         PROD_REJ.KONTROLA:=exec('is_kontrol','px_stage',PX_POZ.PX_STAGE);
         PROD_REJ.KJ_BAD:=exec('is_kj_bad','px_stage',PX_POZ.PX_STAGE);
         PROD_REJ.RP:=exec('is_rp','px_stage',PX_POZ.PX_STAGE);
::       Jeżeli jest wymiar zgodny z JM produktu, to z niego, w przeciwnym wypadku pierwszy wymiar
         _jm:=null();
         _dim:=1;
         {! _it:=1..PX_KONT.IL_WYM
         |! _jm:=PX_KONT.JM1;
            {? ($('PX_KONT.JM'+$_it))()=PROD_REJ.M().J || _dim:=_it; _jm:=PROD_REJ.M().J ?}
         !};
         PROD_REJ.JM:=_jm;
         PROD_REJ.START:='N';
         PROD_REJ.POTW:='N';
         PROD_REJ.PROBLEM:=PX_POZ.PROBLEM;
         PROD_REJ.PROBKLAS:=PX_POZ.PROBKLAS;
         PROD_REJ.PRAC:='N';
         PROD_REJ.BRYG:='N';
         PROD_REJ.KOOP:=PX_POZ.KOOP;
         PROD_REJ.ILC:=($('PX_POZ.CAP_EAT'+$_dim))();
         PROD_REJ.IL:=PROD_REJ.ILC-($('PX_POZ.CAP_WYK'+$_dim))();
         PROD_REJ.ILW:=($('PX_POZ.CAP_WYK'+$_dim))();
         PROD_REJ.A:={? PX_POZ.STATUS=_stat.NORMAL |
                        PX_POZ.STATUS=_stat.WYK1 |
                        PX_POZ.STATUS=_stat.WYK2 |
                        PX_POZ.STATUS=_stat.DELAY
                     || 'T'
                     || 'N'
                     ?};
         PROD_REJ.OK:={? PX_POZ.STATUS=_stat.WYK2 || 'T' || 'N' ?};
         PROD_REJ.DOREJ:={? PX_POZ.STATUS=_stat.NORMAL |
                            PX_POZ.STATUS=_stat.WYK1 |
                            PX_POZ.STATUS=_stat.DELAY
                         || 'T'
                         || 'N'
                         ?};
         {? PROD_REJ.add(1)
         || exec('uzup_prod_nxt','px_wyk');
            exec('uzup_znaczniki','px_wyk',PROD_REJ.ref())
         ?};

         Cntx.pop(PROD_REJ,PROD_NXT,PX_CUP,PX_OBJ,PL_OPER,ZGP,GROP,GROPS)
      ?};
      ~~
   |? _a='put'
   ||
::    Jezeli zmiana dotyczy PX_POZ.UPD_SUR - wywolanie z exec('generuj_ver','px_sur') - pomijamy calosc
      {? bfld('UPD_SUR')<>PX_POZ.UPD_SUR || return() ?};

::    Jezeli zmiana dotyczy PX_POZ.PX_SET - poprawianie powiazan zasobu z zestawem - pomijamy calosc
      {? bfld('PX_SET')<>PX_POZ.PX_SET || return() ?};

::    Jeżeli zmiana dotyczy pozycji z planu operacyjnego - pomijamy całość
      {? bfld('PL_OPER')<>null() | bfld('PL_OGR')<>null() || return() ?};

      Cntx.psh(PROD_REJ,PX_CUP,PX_OBJ,PL_OPER,ZGP);

      _stat:=exec('statusy','px_poz');

      PROD_REJ.index('PX_POZ');
      PROD_REJ.prefix('PX',PX_POZ.ref());
      {? PROD_REJ.first()
      ||
         PROD_REJ.STARTD:=PX_POZ.PX_CUP().STARTD().DATA;
         PROD_REJ.STARTT:=PX_CUP.STARTT;
:: [areKc] - Ustalenie zmiany wykonującej pozycję z przewodnika.
         PROD_REJ.QZMIANA:=exec('zmiana','zl_common',PROD_REJ.STARTT);
         PROD_REJ.ENDD:=PX_CUP.ENDD().DATA;
         PROD_REJ.ENDT:=PX_CUP.ENDT;
         exec('fields_4rej','px_wyk');
         PROD_REJ.ZL:=PX_POZ.PX_OBJ().ZL;
         PROD_REJ.PL_OPER:=PX_POZ.PL_OPER;
         PROD_REJ.PL_OGR:=PX_POZ.PL_OGR;
         PROD_REJ.M:=PX_OBJ.M;
         PROD_REJ.KONTROLA:=exec('is_kontrol','px_stage',PX_POZ.PX_STAGE);
         PROD_REJ.KJ_BAD:=exec('is_kj_bad','px_stage',PX_POZ.PX_STAGE);
::       Jezeli jest wymiar zgodny z JM produktu, to z niego, w przeciwnym wypadku pierwszy wymiar
         _jm:=null();
         _dim:=1;
         {! _it:=1..PX_KONT.IL_WYM
         |! _jm:=PX_KONT.JM1;
            {? ($('PX_KONT.JM'+$_it))()=PROD_REJ.M().J || _dim:=_it; _jm:=PROD_REJ.M().J ?}
         !};
         PROD_REJ.JM:=_jm;
         PROD_REJ.ILC:=($('PX_POZ.CAP_EAT'+$_dim))();
         PROD_REJ.IL:=PROD_REJ.ILC-($('PX_POZ.CAP_WYK'+$_dim))();
         {? PROD_REJ.IL<0 || PROD_REJ.IL:=0 ?};
         PROD_REJ.ILW:=($('PX_POZ.CAP_WYK'+$_dim))();
         PROD_REJ.A:={? PX_POZ.STATUS=_stat.NORMAL |
                        PX_POZ.STATUS=_stat.WYK1 |
                        PX_POZ.STATUS=_stat.WYK2 |
                        PX_POZ.STATUS=_stat.DELAY
                     || 'T'
                     || 'N'
                     ?};
         PROD_REJ.OK:={? PX_POZ.STATUS=_stat.WYK2 || 'T' || 'N' ?};
         PROD_REJ.DOREJ:={? PX_POZ.STATUS=_stat.NORMAL |
                            PX_POZ.STATUS=_stat.WYK1 |
                            PX_POZ.STATUS=_stat.DELAY
                         || 'T'
                         || 'N'
                         ?};
         PROD_REJ.PROBLEM:=PX_POZ.PROBLEM;
         PROD_REJ.PROBKLAS:=PX_POZ.PROBKLAS;
         {? PROD_REJ.put(1)
         || exec('uzup_prod_nxt','px_wyk');
            exec('uzup_znaczniki','px_wyk',PROD_REJ.ref())
         ?}
      ?};

      Cntx.pop(PROD_REJ,PX_CUP,PX_OBJ,PL_OPER,ZGP);
      ~~
   |? _a='del'
   ||
      Cntx.psh(PROD_REJ);

      PROD_REJ.index('PX_POZ');
      PROD_REJ.prefix('PX',PX_POZ.ref());
      {? PROD_REJ.first()
      ||
         PROD_NXT.index('PROD_REJ');
         PROD_NXT.prefix(PROD_REJ.ref());
         {? PROD_NXT.first() || {! |? PROD_NXT.del() !} ?};

         PROD_NXT.index('NEXT');
         PROD_NXT.prefix(PROD_REJ.ref());
         {? PROD_NXT.first() || {! |? PROD_NXT.del() !} ?};

         PROD_REJ.del()
      ?};
      _res:=~PROD_REJ.first();

      Cntx.pop(PROD_REJ);
      _res
   ||
      ~~
   ?}

:: UWAGA: PX_WYK aktualizuje wyłącznie pola PROD_REJ.START
|? _b=PX_WYK
||
   {? _a='add'
   || PROD_REJ.cntx_psh();
      PROD_REJ.index('PX_POZ');
      PROD_REJ.prefix('PX',PX_WYK.PX_POZ);
      {? PROD_REJ.first()
      || {? PX_WYK.ZAK='T' || PROD_REJ.START:='N' || PROD_REJ.START:='T' ?};
         PROD_REJ.put()
      ?};
      PROD_REJ.cntx_pop();
      ~~
   |? _a='put'
   || PROD_REJ.cntx_psh();
      PROD_REJ.index('PX_POZ');
      PROD_REJ.prefix('PX',PX_WYK.PX_POZ);
      {? PROD_REJ.first()
      || {? PX_WYK.ZAK='T' || PROD_REJ.START:='N' || PROD_REJ.START:='T' ?};
         PROD_REJ.put()
      ?};
      PROD_REJ.cntx_pop();
      ~~
   |? _a='del'
   || PROD_REJ.cntx_psh();
      PROD_REJ.index('PX_POZ');
      PROD_REJ.prefix('PX',PX_WYK.PX_POZ);
      {? PROD_REJ.first()
      || PROD_REJ.START:='N';
         PROD_REJ.put()
      ?};
      PROD_REJ.cntx_pop();
      1
   ||
      ~~
   ?}
|| ~~
?}


\load_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Ładuje/aktualizuje dane w tabeli do rejestracji wykonań - plan strategiczny
::       Funkcja służy tylko do zainicjowania danych - na bieżąco działają triggery
::----------------------------------------------------------------------------------------------------------------------
:: Funkcja ładująca dane z planu strategicznego
_add:="
   _status:=_a;

   _stat:=exec('statusy','px_poz');

   PX_POZ.index('VSTATUS');
   PX_POZ.prefix(exec('get_mainversion','px_ver'),_a);
   {? PX_POZ.first()
   || {!
      |? {? PX_POZ.PL_OPER=null() & PX_POZ.PL_OGR=null() & PX_POZ.PX_OBJ().REM_ZGL=null()
         || PROD_REJ.blank(1);
            PROD_REJ.STARTD:=exec('tm_stamp2date','#tm_stamp',PX_POZ.TM_START);
            PROD_REJ.STARTT:=exec('tm_stamp2time','#tm_stamp',PX_POZ.TM_START);
            PROD_REJ.ENDD:=exec('tm_stamp2date','#tm_stamp',PX_POZ.TM_END);
            PROD_REJ.ENDT:=exec('tm_stamp2time','#tm_stamp',PX_POZ.TM_END);
:: [areKc] - Ustalenie zmiany wykonującej pozycję z przewodnika.
            PROD_REJ.QZMIANA:=exec('zmiana','zl_common',PROD_REJ.STARTT);
            exec('fields_4rej','px_wyk');
            PROD_REJ.PRIORITY:='N';
            PROD_REJ.SRODZ:='PX';
            PROD_REJ.SOURCE:=$PX_POZ.ref();
            PROD_REJ.PX_POZ:=PX_POZ.ref();
            PROD_REJ.PL_OPER:=PX_POZ.PL_OPER;
            PROD_REJ.PL_OGR:=PX_POZ.PL_OGR;
            PROD_REJ.ZL:=PX_POZ.PX_OBJ().ZL;
            PROD_REJ.M:=PX_POZ.PX_OBJ().M;
            PROD_REJ.GROP:=PX_POZ.PX_GRP().GROPS().GROP;
            PROD_REJ.GROPS:=GROPS.ref();
            PROD_REJ.RES_SYM:=PX_POZ.PX_KONT().SYMBOL;
            PROD_REJ.RES_NAZ:=PX_KONT.NAZWA;
            PROD_REJ.WYD:=exec('szukaj_ud_skl','schemat','PODZORG',PX_KONT.PL_RES().WYD);
            PROD_REJ.KONTROLA:=exec('is_kontrol','px_stage',PX_POZ.PX_STAGE);
            PROD_REJ.KJ_BAD:=exec('is_kj_bad','px_stage',PX_POZ.PX_STAGE);
            PROD_REJ.RP:=exec('is_rp','px_stage',PX_POZ.PX_STAGE);
::          Jezeli jest wymiar zgodny z JM produktu, to z niego, w przeciwnym wypadku pierwszy wymiar
            _jm:=null();
            _dim:=1;
            {! _it:=1..PX_KONT.IL_WYM
            |! _jm:=PX_KONT.JM1;
               {? ($('PX_KONT.JM'+$_it))()=PROD_REJ.M().J || _dim:=_it; _jm:=PROD_REJ.M().J ?}
            !};
            PROD_REJ.JM:=_jm;
            PROD_REJ.ILC:=($('PX_POZ.CAP_EAT'+$_dim))();
            PROD_REJ.IL:=PROD_REJ.ILC-($('PX_POZ.CAP_WYK'+$_dim))();
            {? PROD_REJ.IL<0 || PROD_REJ.IL:=0 ?};
            PROD_REJ.ILW:=($('PX_POZ.CAP_WYK'+$_dim))();
            PX_WYK.index('ZAK2');
            PX_WYK.prefix('N',PX_POZ.ref());
            {? PX_WYK.first() || _start:='T' || _start:='N' ?};
            PROD_REJ.START:=_start;
            PROD_REJ.OK:={? _status=_stat.WYK2 || 'T' || 'N' ?};
            PROD_REJ.POTW:='N';
            PROD_REJ.PROBLEM:=PX_POZ.PROBLEM;
            PROD_REJ.PROBKLAS:=PX_POZ.PROBKLAS;
            PROD_REJ.PRAC:='N';
            PROD_REJ.BRYG:='N';
            PROD_REJ.KOOP:=PX_POZ.KOOP;
            PROD_REJ.A:='T';
            PROD_REJ.DOREJ:={? _status=_stat.NORMAL | _status=_stat.DELAY | _status=_stat.WYK1 || 'T' || 'N' ?};
            {? PROD_REJ.add(1)
            || exec('uzup_prod_nxt','px_wyk')
            ?}
         ?};
         PX_POZ.next()
      !}
   ?};
   PX_POZ.clear()
";

{? FUN.ask('Czy zainicjować ponownie tabelę do rejestracji produkcji dla planu strategicznego?'@)
||
   exec('del_4rej','px_wyk');

   Cntx.psh(PROD_REJ,PROD_NXT);
   Cntx.clr(PROD_REJ,PROD_NXT);

:: Ladujemy wszystkie pozycje planu strategicznego wg statusow (mozna uzyc nie wszystkie)
   _stat:=exec('statusy','px_poz');
:: - normalne
   _add(_stat.NORMAL);
:: - zablokowane
   _add(_stat.BLK);
:: - opoznione
   _add(_stat.DELAY);
:: - porzucone
   _add(_stat.SKIPPED);
:: - wykonane czesciowo
   _add(_stat.WYK1);
:: - wykonane w calosci
   _add(_stat.WYK2);

:: Uzupelnienie/zmiana znacznikow z uwglednieniem powiazan miedzy operacjami
   PROD_REJ.index('PX_POZ');
   PROD_REJ.prefix('PX');
   {? PROD_REJ.first()
   || {!
      |? exec('uzup_znaczniki','px_wyk',PROD_REJ.ref());
         PROD_REJ.next()
      !}
   ?};

   Cntx.pop(PROD_REJ,PROD_NXT);
   FUN.info('Zainicjowano tabelę do rejestracji produkcji dla planu strategicznego.'@)
?};
''

