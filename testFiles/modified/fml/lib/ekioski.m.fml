:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: ekioski.fml
:: Utworzony: 03.2015
:: Autor: SZP
::======================================================================================================================
:: Zawartość: Obsługa e-kiosków
::======================================================================================================================


\showFld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SZP [12.46]
:: OPIS: Pokazuje pola desktopu 'menu_end'
::   WE: _a = Tpz
::----------------------------------------------------------------------------------------------------------------------
_tpz:=_a;

_srodz:=PROD_REJ.SRODZ;

{? _srodz='PX'
||
   exec('set_visible','#desktop','','ctr_menu_end','btn_register@menu_end',1);
   exec('set_visible','#desktop','','ctr_menu_end','btn_wyr@menu_end',0);
   _il_wym:=PROD_REJ.PX_POZ().PX_KONT().IL_WYM;

   exec('set_visible','#desktop','','ctr_menu_end','fld_val1@menu_end',_il_wym>0);
   exec('set_visible','#desktop','','ctr_menu_end','fld_val2@menu_end',_il_wym>1);
   exec('set_visible','#desktop','','ctr_menu_end','fld_val3@menu_end',_il_wym>2);
   exec('set_visible','#desktop','','ctr_menu_end','fld_val4@menu_end',_il_wym>3);
   exec('set_visible','#desktop','','ctr_menu_end','fld_val5@menu_end',_il_wym>4);

   exec('set_visible','#desktop','','ctr_menu_end','fld_jm1@menu_end',_il_wym>0);
   exec('set_visible','#desktop','','ctr_menu_end','fld_jm2@menu_end',_il_wym>1);
   exec('set_visible','#desktop','','ctr_menu_end','fld_jm3@menu_end',_il_wym>2);
   exec('set_visible','#desktop','','ctr_menu_end','fld_jm4@menu_end',_il_wym>3);
   exec('set_visible','#desktop','','ctr_menu_end','fld_jm5@menu_end',_il_wym>4);

:: Stanowisko
   _data_id:=$SYSLOG.tm_stamp();
:: Ustawiam filtr na stanowiska
   exec('twrkplc_filter_plugin','zasoby',PROD_REJ.ref());
   exec('fetch_data','#desktop',_data_id,'ctr_menu_end',exec('cmb_place','ekioski'),'SYM,COMBO','');
   exec('grab_data','#desktop','','ctr_menu_end','combo_stanowisko@menu_end',_data_id);
   exec('set_visible','#desktop','','ctr_menu_end','combo_stanowisko@menu_end',1);
   ~~

|? _srodz='PL'
|| exec('set_visible','#desktop','','ctr_menu_end','btn_register@menu_end',1);
   exec('set_visible','#desktop','','ctr_menu_end','btn_wyr@menu_end',0);
   {? _tpz='T'
   ||
::      exec('set_visible','#desktop','','ctr_menu_end','fld_time@menu_end',1);
      ~~
   || exec('set_visible','#desktop','','ctr_menu_end','fld_il@menu_end',1);
      exec('set_visible','#desktop','','ctr_menu_end','fld_il_brak@menu_end',1);
      {? Plugin.runnable('EKIOSK_CALC_IL_001')
      || exec('set_visible','#desktop','','ctr_menu_end','btn_calc@menu_end',1)
      ?};
      ~~
   ?};
:: Partia
   {? PROD_REJ.ZL<>null()
   || _party_req:=exec('party_req','zl_wyk',PROD_REJ.ZL);
      {? _party_req>0
      ||
::       Szukam najbliższego zlecenia partiowanego w strukturze
         _party_zl:=exec('party_first','zl_link',PROD_REJ.ZL);
         ZPARN.index('ZL');
         ZPARN.prefix(_party_zl);
         {? ZPARN.first()
         || _data_id:=$SYSLOG.tm_stamp();
            exec('fetch_data','#desktop',_data_id,'ctr_menu_end',exec('cmb_zparn','ekioski'),'SYM,COMBO','');
            exec('grab_data','#desktop','','ctr_menu_end','combo_partia@menu_end',_data_id);
            exec('set_visible','#desktop','','ctr_menu_end','combo_partia@menu_end',1)
         ?}
      ?}
   ?};
:: Stanowisko
   _data_id:=$SYSLOG.tm_stamp();
:: Ustawiam filtr na stanowiska
   exec('twrkplc_filter_plugin','zasoby',PROD_REJ.ref());
   exec('fetch_data','#desktop',_data_id,'ctr_menu_end',exec('cmb_place','ekioski'),'SYM,COMBO','');
   exec('grab_data','#desktop','','ctr_menu_end','combo_stanowisko@menu_end',_data_id);
   exec('set_visible','#desktop','','ctr_menu_end','combo_stanowisko@menu_end',1);

:: Godziny - obecnie zawsze wyłączone
   exec('set_visible','#desktop','','ctr_menu_end','fld_od@menu_end',0);
   exec('set_visible','#desktop','','ctr_menu_end','fld_do@menu_end',0);
   ~~

|? _srodz='ZL'
|| {? VAR1.REJ_WYR='T'
   || exec('set_visible','#desktop','','ctr_menu_end','btn_wyr@menu_end',1);
      exec('set_visible','#desktop','','ctr_menu_end','btn_register@menu_end',0)
   || exec('set_visible','#desktop','','ctr_menu_end','btn_wyr@menu_end',0);
      exec('set_visible','#desktop','','ctr_menu_end','btn_register@menu_end',1);
      _wp:={? PROD_REJ.ZL<>null() || PROD_REJ.ZL().TYP().WP || 'X' ?};
      _fld_name:='Ilość dobra'@;
      {? _wp='P' & _tpz<>'T'
      || exec('set_visible','#desktop','','ctr_menu_end','fld_il@menu_end',1);
         exec('set_visible','#desktop','','ctr_menu_end','fld_il_brak@menu_end',1);
         {? Plugin.runnable('EKIOSK_CALC_IL_001')
         || exec('set_visible','#desktop','','ctr_menu_end','btn_calc@menu_end',1)
         ?}
      |? _wp='W' | (_wp='P' & _tpz='T')
      || {? exec('get','#params',500644)='T'
         || ~~
         || exec('set_visible','#desktop','','ctr_menu_end','fld_time@menu_end',1)
         ?}
      |? PROD_REJ.GROP<>null() & exec('rej_more_than_one_grop','ekioski')
      || exec('set_visible','#desktop','','ctr_menu_end','fld_il@menu_end',1);
         _fld_name:='Ilość uruchomień'@
      ?};
      exec('set_name','#desktop','','ctr_menu_end','fld_il@menu_end',_fld_name);
::    Partia
      {? PROD_REJ.ZGH<>null() & VAR1.REJ_WYR<>'T'
      || _party_req:=exec('party_req','zl_wyk',PROD_REJ.ZL);
         {? _party_req>0
         ||
::          Szukam najbliższego zlecenia partiowanego w strukturze
            _party_zl:=exec('party_first','zl_link',PROD_REJ.ZL);
::          Jeżeli odnalezione zlecenie jest takie samo jak na PROD_REJ to prefixuje partie po nagłówku przewodnika
            {? _party_zl=PROD_REJ.ZL
            || ZPARN.index('ZGH');
               ZPARN.prefix(PROD_REJ.ZGH)
            || ZPARN.index('ZL');
               ZPARN.prefix(_party_zl)
            ?};
            {? ZPARN.first()
            || _data_id:=$SYSLOG.tm_stamp();
               exec('fetch_data','#desktop',_data_id,'ctr_menu_end',exec('cmb_zparn','ekioski'),'SYM,COMBO','');
               exec('grab_data','#desktop','','ctr_menu_end','combo_partia@menu_end',_data_id);
               exec('set_visible','#desktop','','ctr_menu_end','combo_partia@menu_end',1)
            ?}
         ?}
      ?};
::    Stanowisko
      _data_id:=$SYSLOG.tm_stamp();
::    Ustawiam filtr na stanowiska
      exec('twrkplc_filter_plugin','zasoby',PROD_REJ.ref());
      exec('fetch_data','#desktop',_data_id,'ctr_menu_end',exec('cmb_place','ekioski'),'SYM,COMBO','');
      exec('grab_data','#desktop','','ctr_menu_end','combo_stanowisko@menu_end',_data_id);
      exec('set_visible','#desktop','','ctr_menu_end','combo_stanowisko@menu_end',1);
::    Rodzaj braku
      {? PROD_REJ.GROP=null()
      || _data_id:=$SYSLOG.tm_stamp();
         exec('braki_r_filter','braki',PROD_REJ.ZGP);
         exec('fetch_data','#desktop',_data_id,'ctr_menu_end',exec('cmb_braki_r','ekioski'),'SYM,COMBO','');
         exec('grab_data','#desktop','','ctr_menu_end','combo_braki_r@menu_end',_data_id);
         exec('set_visible','#desktop','','ctr_menu_end','combo_braki_r@menu_end',1)
      ?};
:: NUCO - nielimity widoczne tylko dla wydzialow MMO i MSU
      _wyd:=PROD_REJ.WYD().SYMBOL;
::    Surowce (nielimity)
      {? PROD_REJ.ZGP<>null() & (_wyd='MMO' | _wyd='MSU') & (exec('get_user_param','ekioski',8782,type_of(''))='T'
         | exec('chk_nlim_roz','zl_nlimit',PROD_REJ.ZGP,PROD_REJ.ZL))
      || exec('set_visible','#desktop','','ctr_menu_end','btn_surowce@menu_end',1)
      || exec('set_visible','#desktop','','ctr_menu_end','btn_surowce@menu_end',0)
      ?};
::    Surowce (limity)
      {? (PROD_REJ.ZGP<>null() | PROD_REJ.GROP<>null()) & exec('chk_role','#b__box',OPERATOR.USER,'LMG_ZAM_IPRZ')>0
         & (exec('zgp_chk4lim','zl_limit',PROD_REJ.ZGP) | exec('grop_chk4lim','zl_limit',PROD_REJ.GROP))
      || exec('set_visible','#desktop','','ctr_menu_end','btn_surowce_lim@menu_end',1)
      || exec('set_visible','#desktop','','ctr_menu_end','btn_surowce_lim@menu_end',0)
      ?};
::    Rejestrowanie badań
      {? exec('FindAndGet','#table',ZGP,PROD_REJ.ZGP,,"ZGP.BAD_OP<>null()",0)
      || exec('set_visible','#desktop','','ctr_menu_end','btn_bad@menu_end',1)
      || exec('set_visible','#desktop','','ctr_menu_end','btn_bad@menu_end',0)
      ?};
::    Wydruk etykiet
      {? exec('usersLab','ekioski')<>''
      || exec('set_visible','#desktop','','ctr_menu_end','btn_etyk@menu_end',1)
      || exec('set_visible','#desktop','','ctr_menu_end','btn_etyk@menu_end',0)
      ?};
::    Szczegółowa rejestracja w rozbiciu na produkty
      exec('set_visible','#desktop','','ctr_menu_end','btn_wyr@menu_end',0);
      ~~
   ?}

|? VEK.SRODZ=''
|| ~~

?};
~~


\work_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SZP [12.46]
:: OPIS: Rejestruj zakończenie pracy
::   WE: _a tm_stamp końca
::       [_b] - zwracać tylko liczbę dostępnych operacji (bez wyświetlania panelu): 1 - tak, [0] - nie
::       [_c] - tabela z refami rekordów PROD_REJ, wynik funkcji "exec('work_end_tab','ekioski')"
::   WY: 0/1 dla _b=0, liczba operacji dla _b=1
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
eSelect.wyn_OK:=0;
eSelect.tm_end:={? _>0 || {? type_of(_a)<>1 || 0 || _a ?} || 0 ?};
eSelect.prod_rej:=null();
_count_only:={? var_pres('_b')=type_of(0) || _count_only:=_b || 0 ?};
_tab_end:={? var_pres('_c')>100 || _c || ~~ ?};

exec('setFiltr2Rej','ekioski',_tab_end);

{? _count_only
|| {? PROD_REJ.f_active()
   || _count:=PROD_REJ.f_size()
   || _count:=PROD_REJ.size()
   ?};
   return(_count)
?};

USERS.cntx_psh();

eSelect.wer_rej:='EWER_END';
eLevel.up(PROD_REJ,eSelect.wer_rej,'WORK_END',
   "params_exec('display_4rej','prod_rej')","params_exec('filter_4rej','ekioski')"
);

VEK.SRODZ:='';

:: Takie czary, żeby zadziałały tłumaczenia poniżej (teksty MUSZĄ być identyczne)
'WYLOGUJ'@;
_before:="
   exec('load','#desktop','ctr_user_info','ekiosk_user_info.dsk',,,,,,0);
   exec('set_value','#desktop','','ctr_user_info','fld_prac@user_info',VEK.P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE);
   exec('set_value','#desktop','','ctr_user_info','fld_info@user_info',VEK.A_WYD().KOD);
   exec('load','#desktop','ctr_menu_nav','ekiosk_menu_nav.dsk',,,,,,0);
   exec('set_value','#desktop','','ctr_menu_nav','btn_logout@menu_nav','WYLOGUJ'@);
:: filtr
   exec('set_visible','#desktop','','ctr_menu_nav','btn_filter@menu_nav',__develop);
:: info
   exec('set_visible','#desktop','','ctr_menu_nav','btn_info@menu_nav',1);

   _tab:=exec('elements_menuEnd_table','ekioski');
   exec('load','#desktop','ctr_menu_end','ekiosk_menu_end.dsk',,,,,_tab,1);

   exec('hideFld','ekioski');
::   exec('set_value','#desktop','','ctr_menu_end','fld_il@menu_end','');

:: Żeby klawisz ESC działał trzeba aktywować okienko z kontrolką, bo tam jest domyślnie focus
::   exec('set_active_win','#desktop','','ctr_menu_end',2);
   {? exec('upr_problem','zl_wkj')=0
   || exec('set_visible','#desktop','','ctr_menu_end','btn_problem@menu_end',0)
   ?};
:: PeKa - ustawienia dla drukowania etykiet
   exec('etykieta','qekioski');
::   exec('set_visible','#desktop','','ctr_menu_end','1344898265874',0);
::   exec('set_visible','#desktop','','ctr_menu_end','1344898504814',0);
::   exec('set_visible','#desktop','','ctr_menu_end','1344898513004',0);
::   exec('set_visible','#desktop','','ctr_menu_end','1338268492218',0);
::   exec('set_visible','#desktop','','ctr_menu_end','f89gg7dnece4g2nd1efj72eehhd5',0);
::   exec('set_visible','#desktop','','ctr_menu_end','1fkmhfl43hhkbcib76nn5b0cg954f',0);

   grp_disp(PROD_REJ,eSelect.wer_rej,0,1);
::   exec('setFld','ekioski');
   ~~
";

_grp:=USERS.grp_make('Rejestracja wykonania operacji'@,_before,'ekioski003',,,,,,'jterm');
exec('create','#desktop',USERS,'ctr_user_info',_grp,{? VEK.DPI=96 || 2 || 1 ?},eSelect.grp_width);
USERS.grp_splt(_grp,,'horizontal','pozioma_1');
:: -----------------------------------------------
_after_refresh:="
   {? grp_empty(PROD_REJ,eSelect.wer_rej)
   || exec('set_visible','#desktop','','ctr_menu_end','',0)
   || {? eSelect.prod_rej<>PROD_REJ.ref()
      || eSelect.prod_rej:=PROD_REJ.ref();
         VAR1.REJ_WYR:={? exec('zgp_czy_wyr','zl_wyr',PROD_REJ.ZGP)>0 || 'T' || 'N' ?};
         VAR1.BEZ_KAP:='N';
         exec('setFld','ekioski');
         exec('setBtnEnd','ekioski');
         ~~
      ?}
   ?}
";
USERS.grp_sel(_grp,PROD_REJ,eSelect.wer_rej,,_after_refresh,,,{? VEK.DPI=96 || 7 || 6 ?},,,,,'maximized',,1);
USERS.grp_splt(_grp,,'horizontal','pozioma_3',0);
:: -----------------------------------------------
_before:="
   {? grp_empty(PROD_REJ,eSelect.wer_rej)
   || exec('set_visible','#desktop','','ctr_menu_end','',0)
   |? PROD_REJ.get()
   || _txt:='Nie można rejestrować wykonania, zapis blokowany jest'@;
      _locked:=exec('blk_lock','#table','PROD_REJ',PROD_REJ.ref(),,,_txt) &
         {? PROD_REJ.SRODZ='ZL' & PROD_REJ.GROP<>null()
         || exec('blk_lock','#table','GROP',PROD_REJ.GROP) & exec('blk_lock','#table','GROPS',PROD_REJ.GROPS,,,_txt)
         |? PROD_REJ.SRODZ='ZL'
         || exec('blk_lock','#table','ZGP',PROD_REJ.ZGP) & exec('blk_lock','#table','ZGH',PROD_REJ.ZGH,,,_txt)
         |? PROD_REJ.SRODZ='PL'
         || exec('blk_lock','#table','PL_OPER',PROD_REJ.PL_OPER,,,_txt)
         |? PROD_REJ.SRODZ='PX'
         || exec('blk_lock','#table','PX_POZ',PROD_REJ.PX_POZ,,,_txt)
         || 0
         ?};
      _condition:=_locked & (PROD_REJ.PROBLEM='N' | PROD_REJ.PROBKLAS=exec('prob_class_information','zl_wkj'));
::    ilości
      exec('set_enabled','#desktop','','ctr_menu_end','fld_il@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','fld_il_brak@menu_end',_condition);
::    czas
      exec('set_enabled','#desktop','','ctr_menu_end','fld_time@menu_end',_condition);
::    wymiary
      exec('set_enabled','#desktop','','ctr_menu_end','fld_jm1@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','fld_jm2@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','fld_jm3@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','fld_jm4@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','fld_jm5@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','fld_val1@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','fld_val2@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','fld_val3@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','fld_val4@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','fld_val5@menu_end',_condition);
::    godziny
      exec('set_enabled','#desktop','','ctr_menu_end','fld_od@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','fld_do@menu_end',_condition);
::    klawisze
      exec('set_enabled','#desktop','','ctr_menu_end','btn_problem@menu_end',_locked);
      exec('set_enabled','#desktop','','ctr_menu_end','btn_register@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','btn_surowce@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','btn_surowce_lim@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','btn_bad@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','btn_calc@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','btn_etyk@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','combo_stanowisko@menu_end',_condition);
      exec('set_enabled','#desktop','','ctr_menu_end','combo_partia@menu_end',_condition);
      _il_brak:=#gsub(exec('get_value','#desktop','#:ctr_menu_end','ctr_menu_end','fld_il_brak@menu_end'),',','.');
      exec('set_enabled','#desktop','','ctr_menu_end','combo_braki_r@menu_end',_il_brak>0)
   ?}
";
_after:="
   exec('blk_unlock','#table','PROD_REJ',PROD_REJ.ref());
   {? PROD_REJ.SRODZ='ZL' & PROD_REJ.GROP<>null()
   || exec('blk_unlock','#table','GROP',PROD_REJ.GROP);
      exec('blk_unlock','#table','GROPS',PROD_REJ.GROPS)
   |? PROD_REJ.SRODZ='ZL'
   || exec('blk_unlock','#table','ZGP',PROD_REJ.ZGP);
      exec('blk_unlock','#table','ZGH',PROD_REJ.ZGH)
   |? PROD_REJ.SRODZ='PL'
   || exec('blk_unlock','#table','PL_OPER',PROD_REJ.PL_OPER)
   |? PROD_REJ.SRODZ='PX'
   || exec('blk_unlock','#table','PX_POZ',PROD_REJ.PX_POZ)
   ?};
:: ilości
   exec('set_enabled','#desktop','','ctr_menu_end','fld_il@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','fld_il_brak@menu_end',1);
:: czas
   exec('set_enabled','#desktop','','ctr_menu_end','fld_time@menu_end',1);
:: wymiary
   exec('set_enabled','#desktop','','ctr_menu_end','fld_jm1@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','fld_jm2@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','fld_jm3@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','fld_jm4@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','fld_jm5@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','fld_val1@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','fld_val2@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','fld_val3@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','fld_val4@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','fld_val5@menu_end',1);
:: godziny
   exec('set_enabled','#desktop','','ctr_menu_end','fld_do@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','fld_do@menu_end',1);
:: klawisze
   exec('set_enabled','#desktop','','ctr_menu_end','btn_problem@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','btn_register@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','btn_surowce@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','btn_surowce_lim@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','btn_bad@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','btn_etyk@menu_end',1);
   exec('set_enabled','#desktop','','ctr_menu_end','combo_stanowisko@menu_end',1);
   _il_brak:=#gsub(exec('get_value','#desktop','#:ctr_menu_end','ctr_menu_end','fld_il_brak@menu_end'),',','.');
   exec('set_enabled','#desktop','','ctr_menu_end','combo_braki_r@menu_end',_il_brak>0);
   ~~
";
_win1:=exec('create','#desktop',USERS,'ctr_menu_end',_grp,{? VEK.DPI=96 || 16 || 13 ?},eSelect.grp_width,,,,,,,_before,_after);
USERS.grp_splt(_grp,,'horizontal','pozioma_4',0);
:: -----------------------------------------------
_win2:=exec('create','#desktop',USERS,'ctr_menu_nav',_grp,{? VEK.DPI=96 || 3 || 2 ?},eSelect.grp_width);

USERS.win_sel(_grp);

{? VEK.PROD_REJ
|| PROD_REJ.f_seek(VEK.PROD_REJ)
?};

{? USERS.select() & eSelect.wyn_OK=1
|| _wyn:=1;
   exec('filter','prod_rej',1)
?};
USERS.cntx_pop();

::{? exec('upr_kierownik','ekioski')=0 & (eSelect.key_Logout=1 | PROD_REJ.f_size()=0) || sel_exit() ?};
VAR_DEL.delete('__ENV_REJ');

eLevel.down();
_wyn


\cmb_zparn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.02]
:: OPIS: Zwraca tabelę tymczasową elementów do combo-boxa do wyboru partii
::       Kontekst wywołania: Założony prefix/filtr na tabelę ZPARN
::----------------------------------------------------------------------------------------------------------------------
:: NUCO - tuning stadandrdu ;-)
{? ZPARN.f_active()=0
|| _zparn:=sql('
      select
         SYM as SYM,
         SYM || '' ['' || to_string(IL) || ''/WYK:'' as COMBO
      from prefixed_table(ZPARN)
   ')
|| _zparn:=sql('
      select
         SYM as SYM,
         SYM || '' ['' || to_string(IL) || ''/WYK:'' as COMBO
      from ZPARN join filter_of(ZPARN)
   ')
?};
:: NUCO dodatkowe uzupelenie o BATCH CODE
{? _zparn.first()
|| {!
   |? _pd:=sql('select ZPARN.REFERENCE as REF,DK_C.WAR02 as PD from ZPARN left join DK_C using (ZPARN.DK_C,DK_C.reference) where ZPARN.SYM=\':_a\'',_zparn.SYM);
      _wyk:=exec('zgp_il_part','zl_wyk',exec('FindAndGet','#table','ZPARN',_pd.REF,,,null), ZGP.ref());
      _zparn.COMBO+=$_wyk+']';
      {? _pd.PD<>'' || _zparn.COMBO+='[Batch:'+_pd.PD+']' ?};
      &_pd;
      _zparn.put;
      _zparn.next()
   !}
?};
_zparn


\elements_menuEnd_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Tabela elementów tłumaczonych w desktopie ekiosk_menu_end.dsk
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('elements_table','#desktop');

_tab.blank();
_tab.ID_SYS:='fld_il@menu_end';
_tab.NAME:='Ilość dobra'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='fld_il_brak@menu_end';
_tab.NAME:='Ilość braków'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='fld_od@menu_end';
_tab.NAME:='Od'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='fld_do@menu_end';
_tab.NAME:='Do'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='fld_time@menu_end';
_tab.NAME:='Czas'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='combo_partia@menu_end';
_tab.NAME:='Partia'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='combo_stanowisko@menu_end';
_tab.NAME:='Stanowisko'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='combo_braki_r@menu_end';
_tab.NAME:='Rodzaj braku'@;
_tab.add();

{! _it:=1..5
|! _tab.blank();
   _tab.ID_SYS:='fld_val%1@menu_end'[$_it];
   _tab.NAME:='Wymiar %1'@[$_it];
   _tab.add()
!};

_tab.blank();
_tab.ID_SYS:='btn_register@menu_end';
_tab.NAME:='<html><center>'+gsub('Rejestruj\nwykonanie'@,'\n','<br>')+'</html>';
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_problem@menu_end';
_tab.NAME:='PROBLEM'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_surowce@menu_end';
_tab.NAME:='Surowce'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_surowce_lim@menu_end';
_tab.NAME:='Limity'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_calc@menu_end';
::_tab.NAME:='Parametryzowany kalkulator'@;
_tt:=spli_str('KALKULATOR'@);
_name:=''; {! _it:=1.. obj_len(_tt) |! _name+='%1\n'[_tt[_it]] !};
_tab.NAME:='<html>'+gsub(_name,'\n','<br>')+'</html>';
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_bad@menu_end';
_tab.NAME:='<html><center>'+gsub('Rejestruj\nbadanie'@,'\n','<br>')+'</html>';
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_wyr@menu_end';
_tab.NAME:='<html><center>'+gsub('Rejestracja\nszczegółowa'@,'\n','<br>')+'</html>';
_tab.add();

_tab


\surowce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Funkcja Nielimity - wyświetla okno do rozliczenia surowców nielimitowanych
::   WE: _a - miejsce wywołania:
::            [1] - przy rejestracji wykonania produkcji
::            0 - przy starcie operacji
::----------------------------------------------------------------------------------------------------------------------
{? PROD_REJ.f_size()=0 || FUN.info('Brak danych. Funkcja nieaktywna.'@); return() ?};

{? PROD_REJ.SRODZ='PX' || FUN.info('Funkcja niedostępna dla pozycji z planu strategicznego.'@); return() ?};

_zgp:=exec('get_zgp','prod_rej');
_where:={? var_pres('_a')=type_of(0) || _a || 1 ?};

{? ~_zgp
|| FUN.info('Pozycja planu nie jest powiązana z pozycją przewodnika.'@);
   return()
?};
_can_continue:=1;

exec('openmask','zl_common',PROD_REJ.ZL);

:: Tworzę środowisko do rozliczania nielimitów
{? _can_continue>0
|| _create:=1;
   _txt:='';
   {? var_pres('__ENV_REJ')>100 || obj_del(__ENV_REJ) ?};
   {? var_pres('_tab')>100 || obj_del(_tab) ?};
   {? var_pres('_tab2')>100 || obj_del(_tab2) ?};
:: Jeżeli wcześniej uzupełniono rozpiskę, to tworzone środowisko na jej bazie
   exec('rej_mat_fill_tmp','ekioski');
   {?  var_pres('__ENV_REJ')>100
   || _create:=0
   ?};
   {? _create
   || exec('env_rej_mat','zl_wyk',1);
:: PeKa - dodanie kolorowania na polach tabeli __ENV_REJ.TAB_N
      exec('kolor','qekioski');
      _tab:=__ENV_REJ.TAB;
      _tab2:=__ENV_REJ.TAB_N;
      _tab2.cntx_psh();
      _tab2.index(__ENV_REJ.NDX_N);
      __ENV_REJ.ZGP:=_zgp;
      _bryg:=exec('FindAndGet','#table',ZGP,_zgp,,"ZGP.BRYG",'');
      _zlgd:={? _bryg='T'
             || exec('findZlgdZ','ekioski',_zgp,null(),VEK.A_ZLBR,PROD_REJ.GROPS)
             || exec('findZlgdZ','ekioski',_zgp,VEK.P,null(),PROD_REJ.GROPS)
             ?};
      __ENV_REJ.ZLGD:=_zlgd;
::    Sprawdzam czy są zdefiniowane nielimity rozliczane z operacją
      ZLIM.cntx_psh();
      ZLIM.index('ZGP_ROZ');
      ZLIM.prefix(_zgp,'N','T');
      {? ZLIM.first()
      ||
         {!
         |? _tab.KTM:=exec('FindAndGet','#table',M,ZLIM.KTM,,"KTM",'');
            _tab.M:=exec('FindAndGet','#table',M,ZLIM.KTM,,"N",'');
            _tab.JM:=exec('FindAndGet','#table',M,ZLIM.KTM,,"J().KOD",'');
            _tab.MG:=exec('FindAndGet','#table',MG,ZLIM.MG,,"SYM",'');
            _tab.LIL:=ZLIM.LIL;
            _tab.MGREF:=$ZLIM.MG;
            _tab.MREF:=$ZLIM.KTM;
            _tab.TMATREF:=$ZLIM.TMAT;
            _tab.ZLIMREF:=$ZLIM.ref;
            _tab.ZLREF:=$ZLIM.ZLEC;
            _tab.DKCREF:={? ZLIM.DK_C<>null || $ZLIM.DK_C || '' ?};
::          Sprawdzam dostępny stan magazynowy dla podanej pozycji
            {? ZLIM.DK_C<>null()
            || exec('obl_stan','magazyn_stan',ZLIM.KTM,1,ZLIM.MG,,,date(),-2,,,,ZLIM.DK_C)
            || exec('obl_stan','magazyn_stan',ZLIM.KTM,1,ZLIM.MG,,,date(),-2)
            ?};
            _tab.STAN:=BEER.SD;
            _tab.IL:=0;

            {? _tab.add() & ~_tab2.find_key(_tab.MREF)
            ||
::             Przepisuje dane do  tabeli z nagłówkami
               _tab2.KTM:=_tab.KTM;
               _tab2.M:=_tab.M;
               _tab2.LIL:=_tab.LIL;
               _tab2.JM:=_tab.JM;
               _tab2.MREF:=_tab.MREF;
               _tab2.ZLIMREF:=_tab.ZLIMREF;
               _tab2.ZLREF:=_tab.ZLREF;
               _tab2.DKCREF:=_tab.DKCREF;
               _tab2.add()
            ?};
            ZLIM.next()
         !}
      ?};
      ZLIM.cntx_pop();
      _tab2.cntx_pop()
   ?};
   __ENV_REJ.WHERE:=_where;
   {? ~_where & +_txt>0
   || FUN.info(_txt)
   ?}
?};

{? _can_continue
||
   eSelect.sur_n:=null();
   eSelect.sur_p:=null();
   exec('set_var_a','ekioski',_zgp);
   VAR.A_KTL:=PROD_REJ.ZL().TKTL;

   USERS.cntx_psh();

   eLevel.up(__ENV_REJ.TAB,__ENV_REJ.WER,'SUROWCE');

:: Takie czary, żeby zadziałały tłumaczenia poniżej (teksty MUSZĄ być identyczne)
'WYLOGUJ'@;
   _before:="
      exec('load','#desktop','ctr_user_info','ekiosk_user_info2.dsk',,,,,,0);
      exec('set_value','#desktop','','ctr_user_info','fld_prac@user_info',VEK.P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE);
      exec('set_value','#desktop','','ctr_user_info','fld_info@user_info',VEK.A_WYD().KOD);
:: PeKa - licznik pozycji z odpowiednim kolorowaniem - licznik dostepny tylko dla wydzialow MSU i MMO (tam mamy kg)
      _wyd:=PROD_REJ.WYD().SYMBOL;
      {? _wyd='MSU' | _wyd='MMO' || exec('info_pobran','qekioski') ?};
::    Druga linia informacji
      _info2:=exec('second_line','ekioski');
      exec('set_value','#desktop','','ctr_user_info','fld_line2@user_info',_info2);

      exec('load','#desktop','ctr_menu_nav','ekiosk_menu_nav.dsk',,,,,,0);
      exec('set_value','#desktop','','ctr_menu_nav','btn_logout@menu_nav','WYLOGUJ'@);
:: nav
      exec('set_visible','#desktop','','ctr_menu_nav','btn_info@menu_nav',0);
::      exec('set_enabled','#desktop','','ctr_menu_nav','btn_info@menu_nav',__ENV_REJ.TAB.size()>0);
:: PeKa - etkieta nawazki - na kioskach, ktore maja ustawiony parametr wdrozeniowy 9981='T'
      {? exec('get_w','#params',9981,2,OPERATOR.EKIOSK)<>'T'
      || exec('set_visible','#desktop','','ctr_menu_sur','btn_drukuj_nawazke@menu_sur',0);
         exec('set_visible','#desktop','','ctr_menu_sur','fld_il_naw@menu_sur',0)
      ?};
      exec('set_visible','#desktop','','ctr_menu_nav','btn_filter@menu_nav',0);

      _tab:=exec('elements_menuSur_table','ekioski');
      exec('load','#desktop','ctr_menu_sur','ekiosk_menu_sur.dsk',,,,,_tab,1);

::Klawiatura
::      exec('set_visible','#desktop','','ctr_menu_end','keyboard',1);
      __ENV_REJ.TAB.index(__ENV_REJ.NDX);
      __ENV_REJ.TAB_N.first();
      __ENV_REJ.TAB.first();
::    Ustawienie aktywnego okna
      grp_disp(__ENV_REJ.TAB_N,__ENV_REJ.WER_N,1);
      grp_disp(__ENV_REJ.TAB,__ENV_REJ.WER,0);
      eLevel.change(__ENV_REJ.TAB_N,__ENV_REJ.WER_N);
      ~~
   ";

   _grp:=USERS.grp_make('SUROWCE'@,_before,'sur_grp',,,,,,'jterm');
   exec('create','#desktop',USERS,'ctr_user_info',_grp,{? VEK.DPI=96 || 4 || 3 ?},eSelect.grp_width,,,,,,);
   USERS.grp_splt(_grp,,'horizontal','pozioma_1',0);
:: -----------------------------------------------
   _before:="
      grp_disp(__ENV_REJ.TAB,__ENV_REJ.WER,0);
      eLevel.change(__ENV_REJ.TAB_N,__ENV_REJ.WER_N);
      ~~
   ";
:: Takie czary, żeby zadziałały tłumaczenia poniżej (teksty MUSZĄ być identyczne)
   'Surowiec: %1, łączna ilość pobrana: %2 %3'@['','',''];
   _after_refresh:="
::    Ustawienie focusa na polu z ilością
::      win_activate('ctr_menu_sur');
:: PeKa - focus na polu dostawa
      exec('grab_focus','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur');
      {? eSelect.sur_n<>__ENV_REJ.TAB_N.ref()
      || eSelect.sur_n:=__ENV_REJ.TAB_N.ref();
::         exec('set_visible','#desktop','','ctr_menu_sur','btn_register@menu_sur',__ENV_REJ.WHERE);
         exec('set_visible','#desktop','','ctr_menu_sur','btn_accept@menu_sur',~__ENV_REJ.WHERE);
         exec('set_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur','');
:: PeKa - licznik pozycji z odpowiednim kolorowaniem - licznik dostepny tylko dla wydzialow MSU i MMO (tam mamy kg)
         _wyd:=PROD_REJ.WYD().SYMBOL;
         {? _wyd='MSU' | _wyd='MMO' || exec('info_pobran','qekioski') ?};
         grp_disp(__ENV_REJ.TAB,__ENV_REJ.WER,0);
         eLevel.change(__ENV_REJ.TAB_N,__ENV_REJ.WER_N);
::       Trzecia linia informacji (łączna ilość pobrana)
         _info3:='';
         {? __ENV_REJ.TAB_N.size()>0
         || _info3:='Surowiec: %1, łączna ilość pobrana: %2 %3'@[__ENV_REJ.TAB_N.M
                    ,form($exec('FindAndGet','#table',ZLIM,__ENV_REJ.TAB_N.ZLIMREF,,\"ZLIM.IL_RW-ZLIM.IL_ZW\",0)
                    ,,ST.DOKL),__ENV_REJ.TAB_N.JM]
         ?};
         exec('set_value','#desktop','','ctr_user_info','fld_line3@user_info',_info3);
         ~~
      ?}
   ";
   USERS.grp_sel(_grp,__ENV_REJ.TAB_N,__ENV_REJ.WER_N,,_after_refresh,,,{? VEK.DPI=96 || 6 || 5 ?},_before,,,,
                 'maximized_with_title','sur_wer_n',1);
   _before:="
      eLevel.change(__ENV_REJ.TAB,__ENV_REJ.WER)
   ";
   _after_refresh:="
::    Ustawienie focusa na polu z ilością
::      win_activate('ctr_menu_sur');
:: PeKa - focus na polu dostawa
      exec('grab_focus','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur');
      {? eSelect.sur_p<>__ENV_REJ.TAB.ref()
      || eSelect.sur_p:=__ENV_REJ.TAB.ref();
         exec('set_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur','');
         ~~
      ?}
   ";
   USERS.grp_splt(_grp,'pozioma_1','vertical','pionowa_1',0);
   USERS.grp_sel(_grp,__ENV_REJ.TAB,__ENV_REJ.WER,,_after_refresh,,,{? VEK.DPI=96 || 6 || 5 ?},_before,,,,
                 'maximized_with_title','sur_wer_p',0);
   USERS.grp_splt(_grp,,'horizontal','pozioma_4',0);
:: -----------------------------------------------
   exec('create','#desktop',USERS,'ctr_menu_sur',_grp,{? VEK.DPI=96 || 15 || 12 ?},eSelect.grp_width,,,,1);
   USERS.grp_splt(_grp,,'horizontal','pozioma_2',0);
   exec('create','#desktop',USERS,'ctr_menu_nav',_grp,{? VEK.DPI=96 || 3 || 2 ?},eSelect.grp_width);
   USERS.win_sel(_grp);

   USERS.select();
   USERS.cntx_pop();

   eLevel.down()
?};
~~


\btn_sur_save
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Przycisk Zapisz w rozpisce surowców
::----------------------------------------------------------------------------------------------------------------------
{? __ENV_REJ.TYPE || return(exec('btn_surlsave','ekioski')) ?};

_tab:=__ENV_REJ.TAB;


_type:=__ENV_REJ.TYPE;

_il_str:=exec('get_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur');
_il:=exec('str2real','#convert',_il_str);

:: Pole z kodem kreskowym w okienku (z czytnika kodów kreskowych)
_kkod:=exec('get_value','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur');

{? _kkod=''
|| {? _il_str<>''
   || {? _tab.size()=0
      || FUN.info('Brak danych do modyfikacji. Funkcja nieaktywna.'@);
         exec('set_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur','');
         return()
      |? exec('get_user_param','ekioski',8785,type_of(''))<>'T'
      || FUN.info('Nie można wydawać surowca bez wskazania dostawy.'@);
         exec('set_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur','');
         return()
      ?};
      _can_continue:=1;
      _czy_pal:=_tab.KODPAL<>'';
      _ktm:=exec('FindAndGet','#table','M',_tab.MREF,,"M.ref()",null());
      _mg:=exec('FindAndGet','#table','MG',_tab.MGREF,,"MG.ref()",null());
      _dk_c:=exec('FindAndGet','#table','DK_C',_tab.DKCREF,,"DK_C.ref()",null());
      _dokl:=exec('jaka_dok_m','jm',_ktm);
      _il:={? _dokl>0
           || _il$ _dokl
           || ceil(_il)
           ?};
      {? _tab.RSC<>''
      || {? _czy_pal=0
         || _sctab:=exec('sc_tmp_scean','magazyn_stan',null(),_tab.SCEAN)
         || _sctab:=exec('sc_tmp_scean','magazyn_stan',null(),,,,_tab.RSC)
         ?};
         _sctab.prefix()
      || _sctab:=~~
      ?};
::    Sprawdzam dostępny stan magazynowy dla podanej pozycji
      _stan:=exec('rej_mat_chk_stan','zl_common',null(),_tab.ZLIMREF,_tab.MGREF,_tab.ZLREF,_tab.RSC
                                                 ,_tab.EANLREF,'ZGP','T',1,_sctab,,,,_tab.KODPAL);
      {? _il<0
      || FUN.info('Ilość musi być większa od zera'@)
      || _add_empty:=0;
:: PeKa - dodanie dodatkowej informacji do komunikatu o braku identyfikatora
         {? _il>_stan
         || _txt:='UWAGA - nie podano kodu kreskowego dostawy!\n'
                  'Pobranie ilości w magazynie \'%2\' nastąpi od najstarszej dostawy (FIFO).\n\n'
                  'W magazynie \'%2\' nie ma wystarczającej ilości materiału \'%1\'.\n'
                  'Pobierana ilość: %3.\nAktualny stan: %4.\n'
                  'Pobrać maksymalną dostępną ilość na stanie?'@
                  [_tab.M,_tab.MG,form(_il,,ST.DOKL),form(_stan,,ST.DOKL)];
            {? FUN.ask(_txt)
            || _il:=_stan;
               {? _tab.SCEAN<>'' | _tab.KODPAL<>''
               || _add_empty:=1
               ?}
            || _can_continue:=0
            ?}
         |? _il>0
         ||
:: NUCO
            _txt:='UWAGA - nie podano kodu kreskowego dostawy!\n'
                  'Pobranie ilości w magazynie \'%1\' dla materiału \'%2\' nastąpi od najstarszej dostawy w magazynie (FIFO).\n\n'
                  'Pobrać ilość ?'@
                  [_tab.MG,_tab.M];
            {? ~FUN.ask(_txt)
            || _can_continue:=0
            ?}
         ?};
         {? _can_continue>0
         ||
::          Brak błędów, przypisuje magazyn i jego aktualny stan
            __ENV_REJ.GEN:=0;
            _tab.STAN:=_stan;
            _tab.IL:=_il;
            _tab.put();
::          Aktualizuje zapis rozpiski/rezerwację
            exec('rej_mat_update','ekioski');
            {? _add_empty>0
            ||
::             Dodaje dodatkową pozycję do rozpiski (z pustą dostawą i zerową ilością)
               _tab.cntx_psh();
               _tab.SCEAN:='';
               _tab.KODPAL:='';
               _tab.EANLREF:='';
               _tab.IL:=0;
               _tab.RSC:='';
               _tab.RSC_OLD:='';
               _tab.PAL:='';
               _tab.PAL_POZ:='';
::             Przypisuje domyślny magazyn (określony na nielimicie zlecenia)
               _tab.MG:=exec('FindAndGet','#table',ZLIM,_tab.ZLIMREF,,"ZLIM.MG().SYM",'');
               _tab.MGREF:=exec('FindAndGet','#table',ZLIM,_tab.ZLIMREF,,"$ZLIM.MG",'');
               {? _czy_pal=0
               || _tab.index(__ENV_REJ.NDX2);
                  _tab.prefix(_tab.MREF,_tab.MGREF,_tab.SCEAN,_tab.EANLREF)
               || _tab.index(__ENV_REJ.NDX4);
                  _tab.prefix(_tab.MREF,_tab.MGREF,_tab.KODPAL,_tab.EANLREF,_tab.RSC)
               ?};
               {? ~_tab.first()
               || _tab.add()
               ?};
               _tab.cntx_pop()
            ?};
            grp_disp(__ENV_REJ.TAB_N,__ENV_REJ.WER_N,1);
:: PeKa - ustawienie fokusa w polu dostawa
            exec('grab_focus','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur')
         ||
:: PeKa - ustawienie fokusa w polu dostawa
            exec('grab_focus','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur')
         ?}
      ?};
      exec('set_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur','')
   ?}
||
:: Jak wypełnione pole dostawa to zapisuję dostawę z wpisaną ilością
   exec('dostawa_kkod','ekioski')
?};
~~


\dostawa_kkod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.14]
:: OPIS: Funkcja/Zdarzenie po odczytaniu kodu identyfikującego dostawę/paletę
::----------------------------------------------------------------------------------------------------------------------
{? __ENV_REJ.TYPE || return(exec('btn_surlsave','ekioski')) ?};

:: Pole z kodem kreskowym w okienku (z czytnika kodów kreskowych)
_kkod:=exec('get_value','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur');
:: Odczytanie ilości
_ilosc_str:=exec('get_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur');
_ilosc:=exec('str2real','#convert',_ilosc_str);

{? _kkod<>'' & _ilosc>=0 & var_pres('__ENV_REJ')>100
|| _can_continue:=1;
   _tab:=__ENV_REJ.TAB;
   _tab2:=__ENV_REJ.TAB_N;
   _pal:=__ENV_REJ.TAB_P;
   _czy_pal:=_kkod<>'' & exec('kodkINakt','magdok_palety',_kkod)<>null();
   _pal_jedn:=0;
   _info:=1;
   _sctab:=~~;
   {? _czy_pal>0
   ||
::    Zeskanowany kod palety
      _res:=exec('paleta_fill','ekioski1',_kkod,_ilosc);
      {? _pal.first()
      || {? _pal.size()=1
         || _can_continue:=1;
            _pal_jedn:=1
         || _can_continue:=exec('paleta_show','ekioski1');
            _info:=0
         ?}
      ?}
   ||
::    Zeskanowany kod dostawy
:: NUCO ograniczenie stanów tylko do tych które są na magazynie przyprodukcyjnym jeśli jest kontekst zlecenia,
::      jeśli nie to standardowo
      {? VAR.A_ZLEC<>null()
      || _sctab:=exec('sc_tmp_scean','magazyn_stan',VAR.A_ZLEC().MG,_kkod)
      || _sctab:=exec('sc_tmp_scean','magazyn_stan',null,_kkod)
      ?};
      _sctab.prefix()
   ?};
   {? _can_continue>0 & (_czy_pal>0 & _pal.first())  | (_czy_pal=0 & _sctab.first())
   ||
         _ref2:=_tab2.ref();
         _tab2.cntx_psh();
         _tab2.index(__ENV_REJ.NDX_N);
      {? _czy_pal=0
      || _tab.index(__ENV_REJ.NDX2)
      || _tab.index(__ENV_REJ.NDX4)
      ?};
      {!
      |?
         _can_continue:=1;
         {? _czy_pal>0
         || _ilosc:=_pal.IL;
            {? _pal.RSC<>''
            || {? var_pres('_sctab')>100 || obj_del(_sctab) ?};
               _sctab:=exec('sc_tmp_scean','magazyn_stan',null(),,,,_pal.RSC)
            ?}
         ?};
         _mref:={? _czy_pal=0 || _sctab.M || _pal.MREF ?};
         _tab.prefix(_mref);
::       Sprawdzenie czy materiał znajduje się na liście limitów
         {? ~_tab.first()
         || {? _czy_pal=0
         || _p8782:=exec('get_user_param','ekioski',8782,type_of(''));
            _txt:='Dostawa dotyczy materiału %1, który nie znajduje się na liście surowców '
                  'nielimitowanych zlecenia.\n'@
                  [exec('FindAndGet','#table','M',_sctab.M,,"M.N",'')];
            {? _p8782='T'
            || {? _ilosc>0
               ||
                  _txt+='Czy mimo to dodać surowiec do listy?'
                        ' (surowiec zostanie również dodany do zapotrzebowań przewodnika)'@;
                  _can_continue:=FUN.ask(_txt)
               || _txt+='Ilość (norma) surowca musi być określona.'@;
                  FUN.info(_txt);
                  _can_continue:=0
               ?}
            || FUN.info(_txt);
               _can_continue:=0
            ?};
            {? _can_continue>0
            ||
               ZLIM.cntx_psh();
               exec('openmask','zl_common',VAR.A_ZLEC);
               ZLIM.clear();
               ZLIM.blank();
               ZLIM.LIMIT:='N';
               ZLIM.AUTO:='N';
               ZLIM.ZLEC:=VAR.A_ZLEC;
::               ZLIM.ZLDOD:=exec('FindAndGet','#table',ZL,_sur.ZLDOD,ZL.name(),,null());
               ZLIM.TMAT:=null();
               ZLIM.KTM:=exec('FindAndGet','#table',M,_sctab.M,,,null());
               ZLIM.PFAZ:=null();
               ZLIM.WYD:=VAR.A_ZLEC().JORG;
::                Ustalenie magazynu
                  exec('zlim_set_mg','zl_limit1',0);
               ZLIM.LIL:=_ilosc;
               ZLIM.SO:='S';
               ZLIM.NR:=exec('bl_nlrlim','zl_limit');
               ZLIM.PARTIA:='N';
               ZLIM.ZGP:=exec('FindAndGet','#table',ZGP,PROD_REJ.ZGP,,,null());
               _dt:=exec('datetime','zl_limit',ZLIM.ZGP);
               ZLIM.STARTD:=_dt.DATE;
               ZLIM.STARTT:=_dt.TIME;

               ZLIM.ROZ:='T';
:: NUCO
::               ZLIM.DK_C:=exec('FindAndGet','#table',DK_C,_sctab.DK_C,,,null());
               ZLIM.add();

               _tab.blank();
               _tab.LIL:=ZLIM.LIL;
               _tab.MREF:=$ZLIM.KTM;
               _tab.TMATREF:=$ZLIM.TMAT;
               _tab.ZLIMREF:=$ZLIM.ref;
               _tab.ZLREF:=$ZLIM.ZLEC;
               _tab.DKCREF:={? ZLIM.DK_C<>null || $ZLIM.DK_C || '' ?};
               _tab.KTM:=ZLIM.KTM().KTM;
               _tab.M:=ZLIM.KTM().N;
               _tab.JM:=ZLIM.KTM().J().KOD;
               _tab.MGREF:=$ZLIM.MG;
               _tab.MG:=exec('FindAndGet','#table',MG,_tab.MGREF,,"MG.SYM",'');
               ZLIM.cntx_pop();

               {? _tab.add()& ~_tab2.find_key(_tab.MREF,)
               ||
::                Przepisuje dane do  tabeli z nagłówkami
                  _tab2.KTM:=_tab.KTM;
                  _tab2.M:=_tab.M;
                  _tab2.LIL:=_tab.LIL;
                  _tab2.JM:=_tab.JM;
                  _tab2.MREF:=_tab.MREF;
                  _tab2.ZLIMREF:=_tab.ZLIMREF;
                     _tab2.ZLREF:=_tab.ZLREF;
                  {? _tab2.add()
                  || _ref2:=_tab2.ref()
                  ?}
               ?}
            ?}
            || _can_continue:=0
            ?}
         ?};
         {? _can_continue>0
         ||
::          Jak więcej dostaw o tym samym kodzie to sprawdzam czy jest przypisana do wielu magazynów.
            {? _czy_pal=0 & _sctab.size()>1
            || _sctab.prefix(_kkod,_sctab.MAG);
               {? _sctab.size()<>_sctab.size()
               ||
::                Kilka dostaw o tym samym kodzie przypisanych do różnych magazynów.
::                Wybieram dostawę z magazynu przypisanego do nielimitu zlecenia
                  _mg:=exec('FindAndGet','#table','ZLIM',_tab.ZLIMREF,,"ZLIM.MG",null());
                  {? _mg=null()
                  || _can_continue:=0;
                     FUN.info('Nie można przypisać dostawy.\n'
                              'Surowiec \'%1\' nie ma zdefiniowanego magazynu, z którego ma zostać pobrany.'@
                              [exec('FindAndGet','#table','M',_sctab.M,,"M.N",'')])
                  ?};
                  _sctab.prefix(_kkod,$_mg);
                  {? ~_sctab.first()
                  || _can_continue:=0;
                     FUN.info('W magazynie %1 nie znaleziono dostawy o kodzie %2.'@
                              [exec('FindAndGet','#table','MG',_mg,,"MG.SYM",''),_kkod])
                  ?}
               ?}
            ?};
            _lok_dflt:=null();
            _lok:=0;
            {? _can_continue>0 & _czy_pal=0
            ||
::             Sprawdzam czy magazyn paletowy lub ma lokalizacje
               MG.cntx_psh();
               MG.clear();
               {? MG.seek(_sctab.MAG)
               || {? MG.PAL='T'
                  || _can_continue:=0;
                     FUN.info('Nie można przypisać dostawy.\n'
                              'Funkcjonalność niedostępna dla dostaw z magazynów z obsługą palet.'@)
                  |? MG.SL='T'
                  || EANL.cntx_psh();
                     EANL.index('MGDOK');
                     EANL.prefix('T',MG.ref(),'T','N');
                     {? EANL.first()
                     || _lok:=1;
                        EANL.cntx_psh();
                        EANL.clear();
                        _ktm:=exec('FindAndGet','#table','M',_sctab.M,,,null());
                        _lok_dflt:=Plugin.run('EANL_NLIM_001',VEK.INIT_ODD,VEK.A_WYD,VEK.P,MG.ref(),_ktm,_kkod);
                        EANL.cntx_pop();

                        {? ~(type_of(_lok_dflt)=type_of(EANL.ref())  & _lok_dflt<>null()
                           & exec('FindAndGet','#table','EANL',_lok_dflt,,"EANL.AKT='T' & EANL.DOK='T'",0)
                           & exec('FindAndGet','#table','EANL',_lok_dflt,,"$EANL.MG",'')=_sctab.MAG)
                        || {? exec('FindAndGet','#table','EANL',_lok_dflt,,"$EANL.MG",'')<>_sctab.MAG
                           || FUN.info('Lokalizacja %1 nie należy do magazynu %2.\n'
                                       'Zmieniono lokalizację na domyślną %3.'@
                                       [exec('FindAndGet','#table','EANL',_lok_dflt,,"EANL.KOD",'')
                                        ,MG.SYM,MG.EANL().KOD])
                           || FUN.info('Lokalizacja %1 jest nieaktywna bądź nie jest dokiem '
                                       'załadunkowym/wyładunkowym. Zmieniono lokalizację na domyślną %2.'@
                                       [exec('FindAndGet','#table','EANL',_lok_dflt,,"EANL.KOD",''),MG.EANL().KOD])
                           ?};
                           _lok_dflt:=MG.EANL
                        ?}
                     ?};
                     EANL.cntx_pop()
                  ?}
               ?};
               MG.cntx_pop()
            ?};
            _czy_rez:=exec('zlim_il_rez','zl_nlimit',_tab.ZLIMREF);
            {? _czy_pal=0
            || _str_naz:=exec('FindAndGet','#table','M',_sctab.M,,"M.N",'');
               _str_mag:=exec('FindAndGet','#table','MG',_sctab.MAG,,"MG.SYM",'');
               _str_lok:=exec('FindAndGet','#table','EANL',_lok_dflt,,"EANL.KOD",'')
            || _str_naz:=_pal.M;
               _str_mag:=exec('FindAndGet','#table','MG',_pal.MGREF,,"MG.SYM",'');
               _str_lok:=exec('FindAndGet','#table','EANL',_pal.EANLREF,,"EANL.KOD",'')
            ?};
::          Zeskanowana dostawa/paleta bez podania ilości
::          Próba ustalenia ilości na podstawie rezerwacji/dostawy/pozostałej ilości do pobrania
            {? _ilosc=0
            || {? _czy_pal=0
               || _sctab.cntx_psh();
                  {? _sctab.first()
                  || _ktm:=exec('FindAndGet','#table','M',_sctab.M,,,null());
                     _mg:=exec('FindAndGet','#table','MG',_sctab.MAG,,,null());
                     _ilrez:=_ildst:=0;
                     _zlim_left:=exec('FindAndGet','#table',ZLIM,_tab.ZLIMREF,,"ZLIM.LIL-ZLIM.IL_RW+ZLIM.IL_ZW",0);
                     {!
                     |?
                        _ildst+=exec('obl_stsc','magazyn_stan',_sctab.RDK,_sctab.NDK,_mg,_ktm,date(0,0,0));
                        {? _czy_rez>0
                        || _ilrez+=exec('sc_il_rez','zl_nlimit',_sctab.SRDK,_tab.ZLIMREF)
                        ?};
                        _sctab.next()
                     !};
                     _ildst+=_ilrez;
                     {? _ildst>0
                     || _dokl:=exec('jaka_dok_m','jm',exec('FindAndGet','#table','M',_tab.MREF,,,null()));
                        _msg:=
                           'Nie podano ilości pobieranej dla surowca %3.\n'
                           'Czy wyznaczyć ilość na podstawie:\n'
                           '   Dostępnego stanu dostawy: %1\n'
                           '   Pozostałej ilości do pobrania: %2'@[form(_ildst,,_dokl),form(_zlim_left,,_dokl),_tab.KTM]
                           +{? _ilrez>0 || '\n   Ilości zarezerwowanej dla dostawy: %1?\n'@
                            [form(_ilrez,,_dokl)] || '?' ?};
                        {? _ilrez>0
                        || _choice:=FUN.choice(_msg,,'Wg &stanu dostawy'@,'Wg ilości &pozostałej'@,'Wg &rezerwacji'@)
                        || _choice:=FUN.choice(_msg,,'Wg &stanu dostawy'@,'Wg ilości &pozostałej'@)
                        ?};

                        {? _choice=1
                        || _ilosc:=_ildst
                        |? _choice=2
                        || _ilosc:=_zlim_left
                        |? _choice=3
                        || _ilosc:=_ilrez
                        || _ilosc:=-1
                        ?};
                        _ilosc_str:=$_ilosc
                     || _ilosc:=-1;
                        _msg:='Zerowy stan materiału %1 na dostawie %2, magazynie %3'@[_str_naz,_kkod,_str_mag]
                           +{? _lok=0 || '.' || ', lokalizacja %1.'@[_str_lok] ?};
                        FUN.info(_msg)
                     ?}
                  ?};
                  _sctab.cntx_pop()
               |? _pal_jedn>0
               || _ktm:=exec('FindAndGet','#table','M',_pal.MREF,,,null());
                  _mg:=exec('FindAndGet','#table','MG',_pal.MGREF,,,null());
                  _ilpal:=0;
                  _zlim_left:=exec('FindAndGet','#table',ZLIM,_tab.ZLIMREF,,"ZLIM.LIL-ZLIM.IL_RW+ZLIM.IL_ZW",0)
                     -_tab2.IL;
                  {? _zlim_left<0 || _zlim_left:=0 ?};
                  _ilpal:=exec('rej_mat_chk_stan','zl_common',null(),_tab.ZLIMREF,_pal.MGREF,_tab.ZLREF
                     ,_pal.RSC,_pal.EANLREF,'ZGP','T',1,_sctab,,1,,_pal.KODK);
                  _dokl:=exec('jaka_dok_m','jm',exec('FindAndGet','#table','M',_tab.MREF,,,null()));
                  {? _zlim_left>0
                  || {? _ilpal>0
                     ||
::                     _msg:=
::                        'Nie podano ilości pobieranej dla surowca %3.\n'
::                        'Czy wyznaczyć ilość na podstawie:\n'
::                        '   Dostępnego stanu palety: %1\n'
::                        '   Pozostałej ilości do pobrania: %2'@[form(_ilpal,,_dokl),form(_zlim_left,,_dokl),_pal.KTM];
::                     _choice:=FUN.choice(_msg,,'Wg &stanu palety'@,'Wg ilości &pozostałej'@);
::                     {? _choice=1
::                     || _ilosc:=_ilpal
::                     |? _choice=2
::                     || _ilosc:=_zlim_left
::                     || _ilosc:=-1
::                     ?};
                        _ilosc:={? _ilpal>_zlim_left || _zlim_left || _ilpal?};
                        _ilosc_str:=$_ilosc
                     || _ilosc:=-1;
                        _msg:='Zerowy stan materiału %1 na palecie %2, magazynie %3'@[_str_naz,_kkod,_str_mag]
                           +{? _lok=0 || '.' || ', lokalizacja %1.'@[_str_lok] ?};
                         FUN.info(_msg)
                     ?}
                  ?}
               ?}
            ?};

            {? _ilosc<=0
            || _can_continue:=0;
               {? _ilosc=0 & (_czy_pal=0 | _pal_jedn>0) || FUN.info('Ilość musi być określona.'@) ?};
               exec('grab_focus','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur')
            ?};

            {? _can_continue>0
            ||
::             _add: 1 - add, 0 - put, -1 -nie robić nic (jest już taki rekord)
               _add:=0;
               {? _tab.size()>1
               || {? (_czy_pal=0 & _tab.find_key(_sctab.MAG,_kkod,$_lok_dflt,))
                     | (_czy_pal>0 & _tab.find_key(_pal.MGREF,_kkod,_pal.EANLREF,_pal.RSC))
                  || _add:=-1
                  || _add:=1
                  ?}
               || {? (_czy_pal=0 & _tab.SCEAN='') | (_czy_pal>0 & _tab.KODPAL='')
                  || _add:=0
                  || {? (_czy_pal=0 & _tab.MGREF=_sctab.MAG & _tab.SCEAN=_kkod & _tab.EANLREF=$_lok_dflt)
                        | (_czy_pal>0 & _tab.MGREF=_pal.MGREF & _tab.KODPAL=_kkod & _tab.EANLREF=_pal.EANLREF
                          & _tab.RSC=_pal.RSC)
                     || _add:=-1
                     || _add:=1
                     ?}
                  ?}
               ?};
::             Pytanie co zrobić gdy zapis o danej dostawie i lokalizacji już istnieje
               {? _add=-1
               || _txt:='';
::                  {? _tab.EANLREF<>''
::                  || _txt:='Surowiec %1, magazyn %2, lokalizacja %3, dostawa %4 - taki zapis już istnieje.'@
::                              [_tab.KTM,_tab.MG,exec('FindAndGet','#table','EANL',_tab.EANLREF,,"EANL.KOD",'')
::                              ,_tab.SCEAN]
::                  || _txt:='Surowiec %1, magazyn %2, dostawa %3 - taki zapis już istnieje.'@
::                              [_tab.KTM,_tab.MG,_tab.SCEAN]
::                  ?};
                  _txt+='Zapis o podanym kodzie identyfikacyjnym już istnieje.\n'
                        'Nadpisać pobieraną ilość surowca czy dodać do aktualnej wartości?\n'
                        'Ilość aktualna: %1\n'
                        'Ilość po nadpisaniu: %2\n'
                        'Ilość po sumowaniu: %3\n'@
                        [form(_tab.IL,,ST.DOKL),form(_ilosc,,ST.DOKL),form((_tab.IL+_ilosc),,ST.DOKL)];
::                Palety zawsze w trybie nadpisywania
                   _choice:={? _czy_pal=0 | _info>0 || FUN.choice(_txt,,'Nadpisz'@,'Sumuj'@) || 2 ?};
                  {? _choice>0
                 || _add:=0;
                    _info:=0;
                    {? _choice=2
                    || _ilosc+=_tab.IL
                    ?}
                 ?};
::                Zapamiętanie pozycji rekordów
                  {? _tab2.find_key(_tab.MREF)
                  || _ref2:=_tab2.ref()
                  ?}
               ?};

               {? _add>=0
               || _zl:=exec('FindAndGet','#table','ZL',_tab.ZLREF,'zlec_akt',,null());
::                Sprawdzam stan
                  _stan:=0;
                  {? _czy_pal=0
                  || {? _sctab.first()
                     || _stan:=exec('rej_mat_chk_stan','zl_common',null(),_tab.ZLIMREF,_sctab.MAG,_tab.ZLREF
                           ,_sctab.SRDK,$_lok_dflt,'ZGP','T',1,_sctab,,1)
                     ?}
                  || _stan:=exec('rej_mat_chk_stan','zl_common',null(),_tab.ZLIMREF,_pal.MGREF,_tab.ZLREF
                           ,_pal.RSC,_pal.EANLREF,'ZGP','T',1,_sctab,,1,,_kkod)
                     ?};

                  {? _can_continue>0
                  || {? _stan<=0
                     || _ok:=1;
::                      Sprawdzenie, czy błąd dotyczy niezgodnej cechy
                        {? _czy_pal=0
                        || _dk_c:=exec('FindAndGet','#table','DK_C',_sctab.DK_C,,,null());
                           _ok:=exec('dkc_compare','zl_limit',_dk_c,
                                 exec('FindAndGet','#table','ZLIM',_tab.ZLIMREF,,,null()))
                     ?};
                        {? _ok>0
                        || _msg:={? _czy_pal=0
                                 || 'Zerowy stan materiału %1 na dostawie %2, magazynie %3'@[_str_naz,_kkod,_str_mag]
                                 || 'Zerowy stan materiału %1 na palecie %2, magazynie %3'@[_str_naz,_kkod,_str_mag]
                                 ?}+{? _lok=0 || '.' || ', lokalizacja %1.'@[_str_lok] ?};
                           FUN.info(_msg)
                           ?}
                     || _add_empty:=0;
                        {? _ilosc>_stan
                        || _txt:='W magazynie \'%2\' nie ma wystarczającej ilości materiału \'%1\'.\n'
                                 'Pobierana ilość: %3.\nAktualny stan: %4.\n'
                                 'Pobrać maksymalną dostępną ilość na stanie?'@
                                 [_str_naz,_str_mag,form(_ilosc,,ST.DOKL),form(_stan,,ST.DOKL)];
                           {? FUN.ask(_txt)
                           || _ilosc:=_stan;
                              _add_empty:=1
                           || _can_continue:=0
                           ?}
                        ?};
                        {? _can_continue>0
                        || {? _czy_pal=0
                        || _tab.MGREF:=_sctab.MAG;
                              _tab.RSC:=_sctab.SRDK;
                           _tab.EANLREF:=$_lok_dflt;
                           {? _ilosc_str<>''
                           || _tab.IL:=_ilosc
                           ?};
                              _tab.PAL:=_tab.PAL_POZ:=''
                           || _tab.MGREF:=_pal.MGREF;
                              _tab.EANLREF:=_pal.EANLREF;
                              _tab.IL:=_ilosc;
                              _tab.PAL:=_pal.PAL;
                              _tab.PAL_POZ:=_pal.PAL_POZ;
                              _tab.RSC:=_pal.RSC
                           ?};
                           _tab.MG:=exec('FindAndGet','#table','MG',_tab.MGREF,,"MG.SYM",'');
                           _tab.SCEAN:={? _czy_pal=0 || _kkod || '' ?};
                           _tab.KODPAL:={? _czy_pal=0 || '' || _kkod ?};
                           _tab.STAN:=_stan;
                            _res:=0;
                           {? _add>0
                           || _res:=_tab.add();
                              {? _res>0 & _info>0
                              || _msg:=
                                    'Dołączono nową pozycję: surowiec %1, magazyn %2'@[_str_naz,_str_mag]
                                    +{? _tab.EANLREF='' || '' || ', lokalizacja %1'@[_str_lok] ?}
                                    +{? _czy_pal=0 || ', kod dostawy %1.'@[_kkod] || ', kod palety %1.'@[_kkod] ?};
                                 FUN.info(_msg)
                              ?}
                           |? _add=0
                           || _res:=_tab.put();
                              {? _res>0 & _info>0
                              || _msg:=
                                    {? _czy_pal=0
                                    || 'Do surowca %1 przypisano dostawę o kodzie %2'@[_str_naz,_kkod]
                                    || 'Do surowca %1 przypisano paletę o kodzie %2'@[_str_naz,_kkod]
                                    ?}+' z magazynu %1'[_str_mag]
                                    +{? _tab.EANLREF='' || '.' || ', lokalizacja %1.'@[_str_lok] ?};
                                 FUN.info(_msg)
                              ?}
                           ?};
                           {? _res>0
                           ||
::                            Aktualizuje zapis rozpiski/rezerwację
                              exec('rej_mat_update','ekioski');
::                            Zapamiętanie pozycji rekordów
                              {? _tab2.find_key(_tab.MREF)
                              || _ref2:=_tab2.ref()
                              ?}
                           ?};
                           {? _add_empty>0
                           ||
::                            Dodaje dodatkową pozycję do rozpiski (z pustą dostawą i zerową ilością)
                              _tab.cntx_psh();
                              _tab.SCEAN:='';
                              _tab.KODPAL:='';
                              _tab.EANLREF:='';
                              _tab.IL:=0;
                              _tab.RSC:='';
                              _tab.RSC_OLD:='';
                              _tab.PAL:='';
                              _tab.PAL_POZ:='';
::                            Przypisuje domyślny magazyn (określony na nielimicie zlecenia)
                              _tab.MG:=exec('FindAndGet','#table',ZLIM,_tab.ZLIMREF,,"ZLIM.MG().SYM",'');
                              _tab.MGREF:=exec('FindAndGet','#table',ZLIM,_tab.ZLIMREF,,"$ZLIM.MG",'');
                              {? _czy_pal=0
                              || _tab.prefix(_tab.MREF,_tab.MGREF,_tab.SCEAN,_tab.EANLREF)
                              || _tab.prefix(_tab.MREF,_tab.MGREF,_tab.KODPAL,_tab.EANLREF,_tab.RSC)
                              ?};
                              {? ~_tab.first()
                              || _tab.add()
                              ?};
                              _tab.cntx_pop()
                           ?}
                        ?}
                     ?}
                  ?}
               ?}
            ?}
         ?};
         _loop:={? _czy_pal=0 || 0 || _pal.next() ?};
         _loop
      !};
::         _tab.prefix();
      _tab2.cntx_pop();
::       Ustawienie się na odpowiednich rekordach
      {? _tab2.seek(_ref2)
      || grp_disp(__ENV_REJ.TAB_N,__ENV_REJ.WER_N,1)
      ?};
      grp_disp(__ENV_REJ.TAB,__ENV_REJ.WER);
      exec('set_value','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur','');
      exec('set_value','#desktop','','ctr_menu_sur','fld_il_sur@menu_sur','');
:: PeKa - licznik pozycji z odpowiednim kolorowaniem - licznik dostepny tylko dla wydzialow MSU i MMO (tam mamy kg)
      _wyd:=PROD_REJ.WYD().SYMBOL;
      {? _wyd='MSU' | _wyd='MMO' || exec('info_pobran','qekioski') ?};
      exec('grab_focus','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur')
:: PeKa - jak nie ma dostawy to kasuje pola, aby nie dodalo ilosci z przycisku zapisz - dodawalo losowo ilosci
   || exec('set_value','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur','');
      {? _czy_pal=0
      || FUN.info('Nie znaleziono dostawy o podanym kodzie.'@)
      ?};
      exec('grab_focus','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur')
   ?}
|| {? _ilosc<=0
   || FUN.info('Ilość musi być większa od zera.'@);
      exec('set_value','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur','');
:: PeKa - ustawienie fokusa w polu dostawa
      exec('grab_focus','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur')
   ?}
?};
~~


\btn_usun_rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Obsługa przycisk Usuń rezerwacje w rozpisce surowców
::----------------------------------------------------------------------------------------------------------------------
{? __ENV_REJ.TYPE || return(exec('btn_usunlrez','ekioski1')) ?};

_txt:='';
:: _type: 0 - pojedyncza pozycja, wszystkie pozcyje danego surowca, 2 - wszystkie surowce
_type:=0;
_continue:=0;
_act_tab:=~~;
:: określam z jakiego okna został wywołany przycisk i ustalam zakres usuwanych danych
{? var_pres('__ENV_REJ')>100
|| _tab:=__ENV_REJ.TAB;
   _tab2:=__ENV_REJ.TAB_N;

:: Sprawdzam czy są jakies surowce nielimitowane do rozpisania
   {? _tab2.size()<=0
   || FUN.info('Brak danych. Funkcja nieaktywna.'@);
      return()
   ?};

   {? eLevel.cur_tab()=_tab2
   || _txt:='Usunąć rezerwacje do wszystkich surowców czy tylko wybranego (%1 - %2)\n'
            'Wyczyszczone zostaną również pola \'Ilość pobrana\' oraz \'Kod dostawy\' wybranych pozycji.'@
            [_tab.KTM,_tab.M];
      _type:=_continue:=FUN.choice(_txt,,'Usuń wybrane'@,'Usuń wszystkie'@)
   |? eLevel.cur_tab()=_tab
   || _txt:='Usunąć rezerwacje powiązane z wybraną pozycją surowca %1 - %2?\n'
            'Wyczyszczone zostaną również pola \'Ilość pobrana\' oraz \'Kod dostawy\'.'@[_tab.KTM,_tab.M];
      _continue:=FUN.ask(_txt)
   ?};
   {? _continue>0
   || _tab.cntx_psh();
      _tab2.cntx_psh();
      {? _type=0
      ||
::       Czyszczenie danych do pojedynczej pozycji
         _tab.IL:=0;
         exec('rej_mat_update','ekioski');
         _tab.SCEAN:='';
         _tab.KODPAL:='';
         _tab.RSC:='';
         _tab.RSC_OLD:='';
         _tab.EANLREF:='';
         _tab.PAL:='';
         _tab.PAL_POZ:='';
::       Przywracam domyślny magazyn (określony na nielimicie zlecenia)
         _tab.MG:=exec('FindAndGet','#table',ZLIM,_tab.ZLIMREF,,"ZLIM.MG().SYM",'');
         _tab.MGREF:=exec('FindAndGet','#table',ZLIM,_tab.ZLIMREF,,"$ZLIM.MG",'');
         _tab.put();
         _tab.cntx_psh();
         _tab.index(__ENV_REJ.NDX2);
::         _tab.prefix(_tab.MREF,_tab.MGREF,_tab.SCEAN,_tab.EANLREF);
         _tab.prefix(_tab.MREF);
         {? _tab.size()>1
         || _tab.del()
         ?};
         _tab.cntx_pop()
      |? _type=1
      ||
::       Czyszczenie danych wszystkich pozycji danego surowca
         _tab.index(__ENV_REJ.NDX);
         _tab.prefix(_tab2.MREF);
         _first:=0;
         _loop:=0;
         {? _tab.first()
         || {!
            |?
               _tab.IL:=0;
               exec('rej_mat_update','ekioski');
               _tab.SCEAN:='';
               _tab.KODPAL:='';
               _tab.RSC:='';
               _tab.RSC_OLD:='';
               _tab.EANLREF:='';
               _tab.PAL:='';
               _tab.PAL_POZ:='';
::              Przywracam domyślny magazyn (określony na nielimicie zlecenia)
               _tab.MG:=exec('FindAndGet','#table',ZLIM,_tab.ZLIMREF,,"ZLIM.MG().SYM",'');
               _tab.MGREF:=exec('FindAndGet','#table',ZLIM,_tab.ZLIMREF,,"$ZLIM.MG",'');
               _tab.put();
               {? _first=0
               || _first:=1;
                  _loop:=_tab.next()
               || _loop:=_tab.del()
               ?};
               _loop>0 & _tab.size()>1
            !}
         ?}
      |? _type=2
      ||
::       Czyszczenie danych wszystkich surowców
         _tab.index(__ENV_REJ.NDX);
         {? _tab2.first()
         ||
            {!
            |?
               _tab.prefix(_tab2.MREF);
               _first:=0;
               _loop:=0;
               {? _tab.first()
               || {!
                  |?
                     _tab.IL:=0;
                     exec('rej_mat_update','ekioski');
                     _tab.SCEAN:='';
                     _tab.KODPAL:='';
                     _tab.RSC:='';
                     _tab.RSC_OLD:='';
                     _tab.EANLREF:='';
                     _tab.PAL:='';
                     _tab.PAL_POZ:='';
::                   Przywracam domyślny magazyn (określony na nielimicie zlecenia)
                     _tab.MG:=exec('FindAndGet','#table',ZLIM,_tab.ZLIMREF,,"ZLIM.MG().SYM",'');
                     _tab.MGREF:=exec('FindAndGet','#table',ZLIM,_tab.ZLIMREF,,"$ZLIM.MG",'');
                     _tab.put();
                     {? _first=0
                     || _first:=1;
                        _loop:=_tab.next()
                     || _loop:=_tab.del()
                     ?};
                     _loop>0 & _tab.size()>1
                  !}
               ?};
               _tab2.next()
            !}
         ?}
      ?};
      _tab.cntx_pop();
      _tab2.cntx_pop();
      grp_disp(_tab2,__ENV_REJ.WER_N,1);
:: PeKa - ustawienie fokusa w polu dostawa
      exec('grab_focus','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur');
:: PeKa - licznik pozycji z odpowiednim kolorowaniem - licznik dostepny tylko dla wydzialow MSU i MMO (tam mamy kg)
      _wyd:=PROD_REJ.WYD().SYMBOL;
      {? _wyd='MSU' | _wyd='MMO' || exec('info_pobran','qekioski') ?};
::    Przywracam aktywność okienka na okno z pozycjami
      {? _type=0
      || grp_disp(_tab,__ENV_REJ.WER)
      ?}
   ||
:: PeKa - ustawienie fokusa w polu dostawa
      exec('grab_focus','#desktop','','ctr_menu_sur','fld_dostawa@menu_sur')
   ?}
?};
~~


\elements_menuWyr_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Tabela elementów tłumaczonych w desktopie ekiosk_menu_wyr.dsk
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('elements_table','#desktop');

_tab.blank();
_tab.ID_SYS:='fld_il@menu_wyr';
_tab.NAME:='Ilość dobra'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='fld_il_brak@menu_wyr';
_tab.NAME:='Ilość braków'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='fld_time@menu_wyr';
_tab.NAME:='Czas'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='combo_partia@menu_wyr';
_tab.NAME:='Partia'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='combo_stanowisko@menu_wyr';
_tab.NAME:='Stanowisko'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='combo_rodzaj_r@menu_wyr';
_tab.NAME:='Rodzaj braku'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_register@menu_wyr';
_tab.NAME:='<html><center>'+gsub('Rejestruj\nwykonanie'@,'\n','<br>')+'</html>';
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_surowce@menu_wyr';
_tab.NAME:='Surowce'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_surowce_lim@menu_wyr';
_tab.NAME:='Limity'@;
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_calc@menu_wyr';
::_tab.NAME:='Parametryzowany kalkulator'@;
_tt:=spli_str('KALKULATOR'@);
_name:=''; {! _it:=1.. obj_len(_tt) |! _name+='%1\n'[_tt[_it]] !};
_tab.NAME:='<html>'+gsub(_name,'\n','<br>')+'</html>';
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_bad@menu_wyr';
_tab.NAME:='<html><center>'+gsub('Rejestruj\nbadanie'@,'\n','<br>')+'</html>';
_tab.add();

_tab.blank();
_tab.ID_SYS:='btn_save@menu_wyr';
_tab.NAME:='Zapisz'@;
_tab.add();

_tab


\wyr_setFld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Ustawienie wartości pól desktopu 'menu_wyr'
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__ENV_WYR')<100 ||  return() ?};
_env:=__ENV_WYR;

exec('set_visible','#desktop','','ctr_menu_wyr','fld_time@menu_wyr',0);
::Parametryzowany kalkulator
{? Plugin.runnable('EKIOSK_CALC_IL_001')
|| exec('set_visible','#desktop','','ctr_menu_wyr','btn_calc@menu_wyr',1)
|| exec('set_visible','#desktop','','ctr_menu_wyr','btn_calc@menu_wyr',0)
?};
:: Partia
{? PROD_REJ.ZGH<>null()
|| _party_req:=_env.PARTY>0;
   {? _party_req>0
   ||
::    Szukam najbliższego zlecenia partiowanego w strukturze
      _party_zl:=exec('party_first','zl_link',PROD_REJ.ZL);
::    Jeżeli odnalezione zlecenie jest takie samo jak na PROD_REJ to prefixuje partie po nagłówku przewodnika
      {? _party_zl=PROD_REJ.ZL
      || ZPARN.index('ZGH');
         ZPARN.prefix(PROD_REJ.ZGH)
      || ZPARN.index('ZL');
         ZPARN.prefix(_party_zl)
      ?};
      {? ZPARN.first()
      || _data_id:=$SYSLOG.tm_stamp();
         exec('fetch_data','#desktop',_data_id,'ctr_menu_wyr',exec('cmb_zparn','ekioski'),'SYM,COMBO','');
         exec('grab_data','#desktop','','ctr_menu_wyr','combo_partia@menu_wyr',_data_id);
         exec('set_visible','#desktop','','ctr_menu_wyr','combo_partia@menu_wyr',1)
      ?}
   || exec('set_visible','#desktop','','ctr_menu_wyr','combo_partia@menu_wyr',0)
   ?}
|| exec('set_visible','#desktop','','ctr_menu_wyr','combo_partia@menu_wyr',0)
?};
:: Stanowisko
_data_id:=$SYSLOG.tm_stamp();
:: Ustawiam filtr na stanowiska
exec('twrkplc_filter_plugin','zasoby',PROD_REJ.ref());
exec('fetch_data','#desktop',_data_id,'ctr_menu_wyr',exec('cmb_place','ekioski'),'SYM,COMBO','');
{? PROD_REJ.ZGP<>null()
|| exec('grab_data','#desktop','','ctr_menu_wyr','combo_stanowisko@menu_wyr',_data_id,,PROD_REJ.ZGP().PLACE().KOD)
|| exec('grab_data','#desktop','','ctr_menu_wyr','combo_stanowisko@menu_wyr',_data_id)
?};
exec('set_visible','#desktop','','ctr_menu_wyr','combo_stanowisko@menu_wyr',1);
:: Rodzaj braku
_data_id:=$SYSLOG.tm_stamp();
exec('braki_r_filter','braki',PROD_REJ.ZGP);
exec('fetch_data','#desktop',_data_id,'ctr_menu_wyr',exec('cmb_braki_r','ekioski'),'SYM,COMBO','');
exec('grab_data','#desktop','','ctr_menu_wyr','combo_braki_r@menu_wyr',_data_id);
exec('set_visible','#desktop','','ctr_menu_wyr','combo_braki_r@menu_wyr',1);
:: NUCO - nielimity widoczne tylko dla wydzialow MMO i MSU
_wyd:=PROD_REJ.WYD().SYMBOL;
:: Surowce (nielimity)
{? PROD_REJ.ZGP<>null() & (_wyd='MMO' | _wyd='MSU') & (exec('get_user_param','ekioski',8782,type_of(''))='T'
   | exec('chk_nlim_roz','zl_nlimit',PROD_REJ.ZGP,PROD_REJ.ZL))
|| exec('set_visible','#desktop','','ctr_menu_wyr','btn_surowce@menu_wyr',1)
|| exec('set_visible','#desktop','','ctr_menu_wyr','btn_surowce@menu_wyr',0)
?};
:: Surowce (limity)
{? PROD_REJ.ZGP<>null() & exec('chk_role','#b__box',OPERATOR.USER,'LMG_ZAM_IPRZ')>0
   & exec('zgp_chk4lim','zl_limit',PROD_REJ.ZGP)>0
|| exec('set_visible','#desktop','','ctr_menu_wyr','btn_surowce_lim@menu_wyr',1)
|| exec('set_visible','#desktop','','ctr_menu_wyr','btn_surowce_lim@menu_wyr',0)
?};
:: Rejestrowanie badań
{? exec('FindAndGet','#table',ZGP,PROD_REJ.ZGP,,"ZGP.BAD_OP<>null()",0)
|| exec('set_visible','#desktop','','ctr_menu_wyr','btn_bad@menu_wyr',1)
|| exec('set_visible','#desktop','','ctr_menu_wyr','btn_bad@menu_wyr',0)
?};
~~


