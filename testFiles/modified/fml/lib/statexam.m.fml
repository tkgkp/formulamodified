:!UTF-8
::(c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: statexam.fml [12.10]
:: Utworzony: 2010/11/22
:: Autor: jerry
::======================================================================================================================
:: Zawartość: Statusy dostaw, historia statusów, badania dostaw, badania operacji zleceń
::======================================================================================================================


\vstats_afe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: po redakcji pol w okienkach edycyjnych zmiennej VSTATS
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();
_tab:=VSTATS;

_edit:={? _fld='DOST_SYM'|| 0
       |? _fld='M'       || 0
       |? _fld='MGR'     || 0
       |? _fld='C_STS'   || 0
       |? _fld='C_ILDK'  || 0
       |? _fld='C_ILSC'  || 0
       |? _fld='C_ILU'   || 0
       |? _fld='C_ILD'   || 0
       |? _fld='C_ILSC2' || 0
       |? _fld='C_ILU2'  || 0
       |? _fld='C_IL2'   || 0
       |? _fld='C_TW'    || 0

       |? _fld='N_STS'   || {? fld()=null()
                            || FUN.info('Proszę wybrać nowy status.'@); 0
                            |? _tab.N_STS=_tab.C_STS
                            || FUN.info('Proszę wybrać status inny niż obecny.'@); 0
                            || 1
                            ?}

       |? _fld='N_BADH'  || {? fld()=null() || FUN.info('Proszę wybrać badanie.'@); 0 || 1 ?}

       |? _fld='N_IL'    || fld(fld()$VSTATS.M().DOKL);
                            _res:=exec('posjm','statexam');
                            {? ~_res || 0
:: NUCO - zmiana - dopuszczenie możliwości zmiany statusu tylko dla wybranych dostaw
::                            |? _tab.N_IL<0 | (_tab.N_IL=0 & _tab.L_IL<=0)
                            |? _tab.N_IL<0 | (_tab.N_IL=0 & _tab.L_IL<0)
                            || FUN.info('Proszę podać ilość do zmiany.'@); 0
                            |? _tab.N_IL+_tab.L_IL>_tab.C_ILD
                            || {? _tab.N_IL<=_tab.C_ILD
                               || _tab.L_IL:=_tab.C_ILD-_tab.N_IL; exec('vstats_set_efld_opt','statexam'); 1
                               || FUN.info('Ilość do zmiany nie może być większa od dostępnej\n'
                                          '(z uwzględnieniem aktualnych rezerwacji dla indeksu materiałowego).'@); 0
                               ?}
                            || _tab.L_IL:=_tab.C_ILD-_tab.N_IL; exec('vstats_set_efld_opt','statexam'); 1
                            ?}
       |? _fld='N_IL2'   || _res:=exec('posj2','statexam');
                            {? ~_res || 0
                            |? _tab.N_IL2<0 | (_tab.N_IL2=0 & _tab.L_IL2<=0)
                            || FUN.info('Proszę podać ilość do zmiany.'@); 0
                            |? _tab.N_IL2+_tab.L_IL2>_tab.C_IL2
                            || {? _tab.N_IL2<=_tab.C_IL2
                               || _tab.L_IL2:=_tab.C_IL2-_tab.N_IL2; exec('vstats_set_efld_opt','statexam'); 1
                               || FUN.info('Ilość do zmiany nie może być większa od dostępnej\n'
                                          '(z uwzględnieniem aktualnych rezerwacji dla indeksu materiałowego).'@); 0
                               ?}
                            || _tab.L_IL2:=_tab.C_IL2-_tab.N_IL2; exec('vstats_set_efld_opt','statexam'); 1
                            ?}
       |? _fld='N_TW'    || {? _tab.N_TW=date(0,0,0) & _tab.M().CZY_TW='T'
                            || FUN.info('Indeks materiałowy %1 wymaga podania terminu ważności.'@[_tab.M().KTM]);
                               0
                            |? var_pres('__datnag')>0 & __datnag<>date(0,0,0) & _tab.N_TW<__datnag
                            || FUN.info('Termin ważności jest wcześniejszy od daty dokumentu %1.'@[$__datnag]);
                               0
                            || 1
                            ?}

       |? _fld='N_COMM'  || 1
::                          {? form(fld())='' || FUN.ask('Czy pozostawić puste pole komentarza?'@) || 1 ?}
       |? _fld='N_NSC'   || 1

       |? _fld='L_STS'   || {? fld()=null()
                            || FUN.info('Proszę wybrać status dla pozostałej ilości.'@); 0
                            |? _tab.L_STS=_tab.C_STS
                            || FUN.info('Proszę wybrać status inny niż obecny.'@); 0
                            || 1
                            ?}

       |? _fld='L_BADH'  || {? fld()=null() || FUN.info('Proszę wybrać badanie.'@); 0 || 1 ?}

       |? _fld='L_IL'    || fld(fld()$VSTATS.M().DOKL);
                            exec('vstats_set_efld_opt','statexam');
                            {? _tab.L_IL<0 | (_tab.L_IL=0 & _tab.N_IL<=0)
                            || FUN.info('Proszę podać ilość do zmiany'@); 0
                            |? _tab.N_IL+_tab.L_IL>_tab.C_ILD
                            || {? _tab.L_IL<=_tab.C_ILD
                               || _tab.N_IL:=_tab.C_ILD-_tab.L_IL; 1
                               || FUN.info('Ilość do zmiany nie może być większa od dostępnej\n'
                                          '(z uwzględnieniem aktualnych rezerwacji dla indeksu materiałowego).'@); 0
                               ?}
                            || _tab.N_IL:=_tab.C_ILD-_tab.L_IL; 1
                            ?}

       |? _fld='L_COMM'  || 1
::                          {? form(fld())='' || FUN.ask('Czy pozostawić puste pole komentarza?'@) || 1 ?}

       |? _fld='L_NSC'   || 1

       ?};
{? _edit || exec('vstats_calc','statexam',_tab) ?};
_edit


\BADH_akceptuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: Akceptuje badanie
::   WE: _a - BADH.ref() - badanie
::       _b - STRING - nowy stan
::       _c - STRING - wynik P/N
::      [_d] - INTEGER - 0/[1]- czy dla badań operacyjnych uruchamiać kwalifikację dla ZLGD podczas
::                              zatwierdzania finalnego
::      [_e] - STRING - $ZLGD.ref()/$ZGP.ref() - dla badań operacyjnych, pozycja przewodnika z którego pochodzi operacja
::   WY: wynik BADH.put()
::----------------------------------------------------------------------------------------------------------------------
 _badh:={? _>0 & type_of(_a)=type_of(BADH.ref()) || _a   || BADH.ref() ?};
 _nowy:={? _>1 & type_of(_b)=type_of('')         || ~-_b || 'P'        ?};
_wynik:={? _>2 & type_of(_c)=type_of('')         || ~-_c || {? _nowy='Z' || return(0) || '' ?} ?};
_zldg:=1;
{? var_pres('_d')=type_of(0)
|| _zldg:=_d
?};
_ref:={? var_pres('_e')=type_of('a') || _e || '' ?};

{? 'WZ'*_nowy=0 || _nowy:='' ?};

_result:=0;

_tabt:=exec('Tools4Stats','statexam');
_tabt.cntx_psh();
_tabt.clear();

BADH.cntx_psh();
BADH.clear();
{? BADH.seek(_badh)
 & _nowy<>''
|| {? _nowy='W'
   || BADH.MAD_DT:=date();
      BADH.MAD_TM:=time();
      BADH.MAD_USER:=OPERATOR.USER;
      BADH.STAN:='W';
      _result:=BADH.put()

   |? _nowy='Z'
   || BADH.AKC_DT:=date();
      BADH.AKC_TM:=time();
      BADH.AKC_USER:=OPERATOR.USER;
      BADH.STAN:='Z';
      BADH.WYNIK:=_wynik;
      {? BADH.TYP='O'
      || {? _ref*'zguidep' || BADH.POOP:='N' || BADH.POOP:='T' ?}
      ?};
      _result:=BADH.put();
::    teraz poszukamy dostaw, ktore wyslano do tego badania
      _applytab:=1;
      BADH.cntx_psh();
      {? _result=1
      ||
         {? _wynik='P'
         || _stats_N:=BADH.STATS_Z; _stats_L:=BADH.STATS_N
         || _stats_N:=BADH.STATS_N; _stats_L:=BADH.STATS_Z
         ?};

         _tabcon:=exec('BADH_powiazane','statexam',BADH.ref(),0);
         {? _tabcon.first()
         ||
            _tab:=exec('T4S','statexam');
            _pl2mg:=tab_tmp(1,'REF','STRING[16]',''
                      ,'MG','STRING[16]',''
                      ,'MD','STRING[16]',''
                      ,'IL','REAL',''
                      ,'RDK','INTEGER',''
                      ,'NDK','STRING[8]','');

            KOMM.init();
            _T4Sadd:=obj_new(2);
            _ok:=1;
            _add2mg:=0;
            {!
            |?
               {? _tabcon.NDK<>''
               || obj_del(_T4Sadd);
                  {? (_scean:=exec('FindAndGet','#table',DK,_tabcon.RDK,_tabcon.NDK
                               ,"{? M().IDMOB='D' & M().IDZP || SCEAN || '' ?}",''); _scean<>'')
                  || _add2zp:=exec('pobSCEAN2PART','statexam',_pl2mg,_scean
                               ,exec('MaskInt2RefSql','#convert',_tabcon.NDK,_tabcon.RDK))
                  ?};
                  _add2mg:=exec('pobPLUS2MG','statexam',_pl2mg
                            ,exec('MaskInt2RefSql','#convert',_tabcon.NDK,_tabcon.RDK));
                  _T4Sadd:=exec('T4S_add_DK','statexam',_tab,_tabcon.NDK,_tabcon.RDK,'L',,,_add2mg);
                  {? _T4Sadd.Result
                   & _tab.seek(_T4Sadd.Ref)
                  ||
                     _tab.N_STS:=#_stats_N;
                     _tab.N_NBADH:=BADH.name();
                     _tab.N_RBADH:=#BADH.ref();

                     _tab.L_STS:=#_stats_L;
                     _tab.L_NBADH:=BADH.name();
                     _tab.L_RBADH:=#BADH.ref();

                     _tab.put()
                  || _ok:=0
                  ?}
               ?};
               _tabcon.next()
            !};
            _buf:=exec('T4S','statexam');
::          przesunięcia międzymagazynowe
            _pl2mg.prefix();
            {? _pl2mg.first()
            || {!
               |? obj_del(_T4Sadd);
                  _T4Sadd:=exec('T4S_add_DK','statexam',_tab,_pl2mg.NDK,_pl2mg.RDK,'L',,,{? ~_pl2mg.SCEAN || 1 || 2 ?});
                  {? _T4Sadd.Result
                   & _tab.seek(_T4Sadd.Ref)
                  ||
                     {? ~_tab.ONLY_TW
                     ||
                     _tab.N_STS:=#_stats_N;
                     _tab.N_NBADH:=BADH.name();
                     _tab.N_RBADH:=#BADH.ref();

                     _tab.L_STS:=#_stats_L;
                     _tab.L_NBADH:=BADH.name();
                     _tab.L_RBADH:=#BADH.ref();

                        _tab.put(1)
                     || _len:=_buf.fld_num();
                        _buf.blank();
                        {! _ii:=1.._len |! _buf[_ii]:=_tab[_ii] !};
                        _buf.add(1);
                        _tab.del()
                     ?}
                  || _ok:=0
                  ?};
                  _pl2mg.next()
               !}
            ?};
            obj_del(_pl2mg);
            _selkomm:=1;
            {? _ok=0 | _add2mg
            || _selkomm:=KOMM.select('Akceptacja badania - zmiana statusów badanych dostaw.'@,,,,,,,,,,1)
            ?};
            {? _selkomm & _tab.first()
            || _applytab:=0;
               _size:=_tab.size();
               {? _tab.first()
               || {? {? _size=1
                      & exec('T4S_edit','statexam',_tab,'REDNL')
                     || _tab.put(1)

                     |? _size>1
                      & exec('T4S_select','statexam',_tab,'REDNL')
                     || 1
                     ?}
                  || exec('aktSCEAN2TW','statexam',_tab,_buf);
                     _applytab:=exec('T4Szapiszzmiany','statexam',_tab).Result
                  ?};
                  ~~
               ?};
               ~~
            ||
:: [areKc] - Zmiana w historii badania dostawy bez zmiany statusu dla dostawy ze stanem zerowym.
               DK.cntx_psh();
               DK_HS.cntx_psh();
               _dk_hs:=sql('select DK_HS.REFERENCE as REF from @DK_HS where DK_HS.BADH=:_a',BADH.ref()).REF;
               DK_HS.use(form(8+_dk_hs));
               {? DK_HS.seek(_dk_hs)
               || {? DK.name()<>DK_HS.NDK
                  || DK.use(DK_HS.NDK)
                  ?};
                  {? DK.seek(DK_HS.RDK)
                  || exec('DK_HS_new4DK','statexam',
                        DK.ref(),
                        'L',
                        'Zakończono badanie '+BADH.SYM,,
                        DK.STATS,exec('FindAndGet','#table',BADH,#BADH.ref(),BADH.name(),,null())
                     )
                  ?}
               ?};
               DK_HS.cntx_pop();
               DK.cntx_pop()
            ?};
            obj_del(_buf);
            ~~
         ?};
::       Akceptacja badania operacyjnego - uwalnia ilość na ZLGD i puszcza proces dalej do rejestracji
         {? BADH.TYP='O' & _zldg>0
         || _args_zlgd:=obj_new('RESULT','WYNIK');
            _args_zlgd.RESULT:=0;
            _args_zlgd.WYNIK:=_wynik;
            {? _ref*'zlgd'
            || ZLGD.cntx_psh();
               _msk_old:=ZLGD.name();
               _msk_new:=ref_name(_ref);
               {?_msk_old<>_msk_new
               || ZLGD.use(_msk_new)
               ?};
               ZLGD.clear();
               {? ZLGD.seek(_ref)
               || _args_zlgd.RESULT:=exec('zlgd_kwalifik','zl_wyk',_args_zlgd.WYNIK,0)
               ?};
               ZLGD.cntx_pop()
            |? _ref*'zguidep'
            || BADO.win_edit('KWAL');
               BADO.blank();
               _valid:="
                  _res:=1;
                  {? BADO.IL_BRAK<=0
                  || FUN.info('Kwalifikowana liczba braków musi być większa od zera'@);
                     _res:='IL_BRAK'
                  |? BADH.ZGP<>null
                  ||
                     {? exec('get','#params',500631,2)='T'
                     || _pop:=exec('il_pop','zl_guide',BADH.ZGP);
                        ZGP.cntx_psh();
                        ZGP.prefix();
                        BADH.ZGP();
                        {? _pop.FIRST=0
                        || _il:=_pop.IL_POP-ZGP.IL-ZGP.DEK_IL-ZGP.IL_BRAK-ZGP.DEK_BR;
                           {? BADO.IL_BRAK>_il
                           || FUN.info('Wpisana ilość braków jest większa od ilości, którą można jeszcze zarejetrować do operacji.\n'
                                       'Kwalifikowana liczba braków nie może być większa od %1.'@[$_il]);
                              _res:='IL_BRAK'
                           ?}
                        ?};
                        ZGP.cntx_pop()
                     ?}
                  ?};
                  _res
               ";
               {? BADO.edit(_valid)
               || BADO.BADH:=BADH.ref;
                  BADO.ZGP:=BADH.ZGP;
                  BADO.ILP:=BADO.IL_BRAK;
                  BADO.MAD_DT:=date();
                  BADO.MAD_TM:=time();
                  BADO.MAD_USER:=OPERATOR.USER;
                  _args_zlgd.RESULT:=BADO.add()
               ?}
            ?};
            _applytab:=_args_zlgd.RESULT
         ?};
         ~~
      ?};
      BADH.cntx_pop();
      {? _applytab<=0
      || BADH.AKC_DT:=date(0,0,0);
         BADH.AKC_TM:=time(0,0,0);
         BADH.AKC_USER:=null();
         BADH.STAN:='W';
         BADH.WYNIK:='O';
         _result:=BADH.put();
         ~~
      ?};
      ~~
   ?}
?};
BADH.cntx_pop();
_tabt.cntx_pop();
_result


\BADP_WER_bP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: przed popraw w BADP.WER
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_stn:=BADP.BADH().STAN;
{? _stn='P'
|| {? exec('get_par','#parametr',141)<>'T'
   || {? exec('chk_role','#b__box',OPERATOR.USER,'LMG_BAD_DWYK')
      || exec('BADP_WERR_bP','statexam')
      || FUN.info('Brak uprawnień do rejestracji wyników.\nModyfikacja wartości niemożliwa.'@);
         _wyn:=0
      ?}
   || exec('BADP_WERR_bP','statexam')
   ?}

:: [areKc] - Modyfikacja ma na celu umożliwienie wprowadzanie parametrów zaakceptowanego badania.
::|| FUN.info(
::      {? _stn='W'
::      || 'Badania zostały wykonane.\nModyfikacja wartości niemożliwa.'@
::      || 'Badania zostały zaakceptowane.\nModyfikacja wartości niemożliwa.'@
::      ?}
::   );
::   _wyn:=0
|| {? exec('get_par','#parametr',141)='N'
   || {? exec('chk_role','#b__box',OPERATOR.USER,'LMG_BAD_DWYK')
      || _wyn:=FUN.ask('%1\n%2'
               [  {? _stn='W' || 'Badania zostały wykonane.'@ || 'Badania zostały zaakceptowane.'@ ?},
                  'Czy modyfikować wartości parametrów?'@
               ]
            );
         {? _wyn
         || exec('BADP_WERR_bP','statexam')
         ?}
      || FUN.info('Brak uprawnień do rejestracji wyników.\nModyfikacja wartości niemożliwa.'@);
         _wyn:=0
      ?}
   || FUN.info(
         {? _stn='W'
         || 'Badania zostały wykonane.\nModyfikacja wartości niemożliwa.'@
         || 'Badania zostały zaakceptowane.\nModyfikacja wartości niemożliwa.'@
         ?}
      );
   _wyn:=0
   ?}
?};
{? _wyn>0
||
:: Jeżeli parametr składa się z elementów, to wyświetla się ich lista
   {? exec('badp_elem_chk','statexam')
   || exec('badp_elem_sel','statexam');
      _wyn:=0
   ?}
?};
_wyn


\BADP_WER_br
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: przed rekord w BADP.WER
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: [areKc] - Modyfikacja ma na celu umożliwienie wprowadzanie parametrów zaakceptowanego badania.
_branz:=exec('get_par','#parametr',141)='T';
_wbadp:=BADP.win_sel('?');
{? BADP.BADH().STAN<>'P' || _grayed:='Adu:Ad' || _grayed:='' ?};{? BADP.BADH().TYP='O' & BADP.CZY_NAG<>'T' || _grayed:='E'+_grayed ?};
BADP.actions_grayed(_wbadp,_grayed);

{? BADP.BADH().STAN<>'P' | _branz
|| _typ:={? BADP.BADMSEP<>null() || 'M' |? BADP.BADSEP<>null() || 'O' || '' ?};
   {? _typ<>'' & BADP.BADPAR().TYP='W'
   || _log:={? _typ='M'
            || {? BADP.BADMSEP().VALTN='T' || 1 || 0 ?}
            || {? BADP.BADSEP().VALTN='T' || 1 || 0 ?}
            ?};
      _val:={? ~_branz
            || BADP.VALUE
            || {? BADP.WAR='T' || 1 || 0 ?}
            ?};
      {? _log<>_val
      || Color.fnd_kol('BAD#01#05')
      || Color.fnd_kol('BAD#01#01')
      ?}
   |? _typ<>'' & (';RP'*BADP.BADPAR().TYP)>1
   || {? _typ='M'
   || _min:=BADP.BADMSEP().VALLOW;
         _max:=BADP.BADMSEP().VALHIGH
      || _min:=BADP.BADSEP().VALLOW;
         _max:=BADP.BADSEP().VALHIGH
      ?};
      _val:={? ~_branz
            || BADP.VALUE
            || #BADP.WAR
            ?};
      {? _val<_min || Color.fnd_kol('BAD#01#03')
      |? _val>_max || Color.fnd_kol('BAD#01#02')
                   || Color.fnd_kol('BAD#01#01')
      ?}
   || Color.fnd_kol('BAD#01#04')
   ?}
|| ~~
?}


