:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: lista_licz.fml
:: Utworzony: 2016/02/29
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły bibioteczne dla naliczeń listy płac.
::======================================================================================================================


\ekwiwalent_ppl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: Ekwiwalent za urlop, podstawa prawna Rozp. Min. Pracy z 8 stycznia 1997
::   WE: [_a] - typ wywołania ( puste lub 'E' - ekwiwalent; 'N' - nieobecność np. urlop rehabilitacyjny;
::                'P' - sama podstawa np. do nagrody jubileuszowej)
::       [_b] - ref nieobecności dla _a='N'
::       [_c] - data badania dla _a<>'E'
::   WY:
::  OLD: /ekwiwal.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('LICZ')<0
|| exec('dekl','lista_plac')
?};
:: warunek podstawowy jakichkolwiek wyliczeń - określono współczynnik do ekwiwalentu
{? var_pres('_a')=type_of('') || _typ:=_a || _typ:='E' ?};
{? _typ='N'
|| {? var_pres('_c')<>type_of(date()) | var_pres('_b')<>type_of(null)
   || return(0)
   ?};
   {? exec('blokada_oblicz','nieobecnosc')
   || return(N.WART)
   ?};
   _N_ref:=_b;
   _data_badania:=_c
|? _typ='P'
|| {? var_pres('_c')<>type_of(date())
   || return(0)
   ?};
   _data_badania:=_c
|| _data_badania:=P.DZ;
   {? _data_badania>date(O.R,O.M,0) | _data_badania=#0
   || _data_badania:=date(O.R,O.M,0)
   ?}
?};
Finish:=1;
__KORZ:=0;

:: umowa "z ekwiwalentem"
_h_um:=null;
_ex_r:=O.R;
_ex_m:=O.M;
{? _typ='E'
|| H_UM.cntx_psh();
   H_UM.index('LISTA');
   H_UM.prefix(P.ref(),VAR.NAZWALIS);
   {? H_UM.first()
   || _h_um:=H_UM.ref();
:: czy kwoty do wyliczeń zostały zmienione?
      _w0:=exec('ekwiwalent','lista_licz',_h_um,1);
      {? type_of(_w0)=type_of(0)
:: nie wyliczaj ponownie
      || H_UM.cntx_pop();
         return(_w0)
      ?};
      {? H_UM.DO<>date(0,0,0)
      || _ex_r:=H_UM.DO~1;
         _ex_m:=H_UM.DO~2
      ?};
      exec('del_ndx','#table',H_UM_EKW,'UNIQUE',_h_um);
      exec('del_ndx','#table',H_UM_ESK,'UNIQUE',_h_um);
      _data_badania:=H_UM.DO;
:: ustalenie stawki zaszeregowania dla ostatniego przeszeregowania danej umowy
      H.cntx_psh();
      H.index('HISTUM');
      H.prefix(H_UM.ref);
      {? H.last()
      || _stawka_h_um:=exec('hsx','lista_licz',_data_badania,_data_badania,1)
      || _stawka_h_um:=obj_new('S1','S2','S3');
         _stawka_h_um.S1:=_stawka_h_um.S2:=_stawka_h_um.S3:=0
      ?};
      H.cntx_pop()
   ?};
   H_UM.cntx_pop()
|? _typ='N'
|| _blokada:=exec('blokada_oblicz','nieobecnosc')
?};

_EKW:=KST.EKW;
{? _data_badania<>date(0,0,0)
|| exec('czytaj','#stalesys',_data_badania,KST,'EKW')
?};
{? ~KST.EKW
|| RAPLS.msg(
      P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
      'Współczynnik do wyliczenia ekwiwalentu za urlop nie został określony.'@,
      exec('retry_msg','lista_licz')
   );
   return(0)
|| _EKW:=KST.EKW
?};
KST.EKW==_EKW;

_ile_mc:={? exec('Nalezy','grupprac','UR_EK_12',P.ref(),_data_badania) || 12 || 3 ?};
_i:=_l:=_w:=_z:=_k:=_w0:=0;
_wsklnom:=0;

VAR_DEL.delete('d');
d:=obj_new(7);
{! _i:=1..7
|! d[_i]:=0
!};

{? _typ='E' | _typ='N'
:: dla zapisu podstaw
|| {? var_pres('PNIEO',@.CLASS)<=0
   || exec('define_wynchor','lista_licz')
   ?}
?};

:: Zmiana na rubryki z odpowiendim atrybutem
_tab_r_godz:=__RUB.sys_rub(1011212,_data_badania).first;
_tab_wyn_godz:=__RUB.sys_rub(1011221,_data_badania).first();

:: bufory składników zmiennych
_oTrace:=obj_new(@.CLASS.Trace);

{? _typ='E' | _typ='N'
|| {? var_pres('__PN')<=0
   || __PN:=obj_new(@.CLASS.PNIEO,1)
   || __PN.Delete();
      __PN.Create(1)
   ?};
   __PN.NewMc(1,_ile_mc+(_typ='N'))
?};
{? _typ='E'
||
:: bufory kwot nominalnych
   _nTrace:=obj_new(@.CLASS.Trace);
   _PO:=obj_new(@.CLASS.PNIEO,1);
   _PO.NewMc(1,_ile_mc)
|? _typ='N' & N.seek(_N_ref)
|| _maska:='s_ch'+form(N.OD~1,-4,0,'9.');
   {? SK_CHO.name()<>_maska
   || SK_CHO.use(_maska)
   ?};
   SK_CHO.index('SK_CHO');
   SK_CHO.prefix(N.ref());
   {? SK_CHO.first()
   || {!
      |? SK_CHO.del()
      !}
   ?};
   &_maska;
   exec('zap_nw_wynchor','lista_licz',_N_ref,_N_ref)
?};

H.cntx_psh();
H.index('_HISTKOD');
N.cntx_psh();
N.index('NIEOBECL');
N.prefix('N',P.ref(),VAR.NAZWALIS);
_z:=(P.DZA~1)*12+P.DZA~2;
_k:=(O.R*12+O.M)-_z;

: ustalenie miesiąca początkowego
_l:=1;
_list_d:=date(O.R,O.M,1);
_l_pom:=0;
{? _data_badania<>date(0,0,0) & _data_badania<_list_d
|| _l_pom:=_l:=(_list_d~1*12+_list_d~2)-(_data_badania~1*12+_data_badania~2)+1;
   _l_pom-=1
?};
{? _l_pom>126
|| _l_pom:=_l:=126
?};
{? _k>126
|| _k:=126
?};
H.prefix(P.ref(),'Z');
_stawka:=0;
{? _typ='P'
|| _przeszer:=date(O.R,O.M,0)
|| _przeszer:=_data_badania
?};
_WY:=P.WY;
_typ_val:={? _typ='P' || 1 || ~~ ?};
{? H.last()
|| {!
   |? {? H.OD>_przeszer
      || H.prev()
      ?}
   !};
   _umowa:=exec('hsx','lista_licz',_przeszer,_przeszer,_typ_val);
   _od:=H.OD;
   _wy:=H.WY;
   {!
   |? _hsx:=exec('hsx','lista_licz',_przeszer,_przeszer,_typ_val);
      _again:=
         {? _umowa.S1=_hsx.S1 & _umowa.S2=_hsx.S2 & _umowa.S3=_hsx.S3
         || _od:=H.OD;
            _wy:=H.WY;
            H.prev()
         ?};
      obj_del(_hsx);
      &_hsx;
      _again
   !};
   _przeszer:=_od;
   _WY:=_wy
|| _umowa:=obj_new('S1','S2','S3');
   _umowa.S1:=_umowa.S2:=_umowa.S3:=0
?};

{? H.find_le(date(O.R,O.M-_l_pom,0))
|| _wymiar:=H.WY;
   _c_p:=H.CP().S
|| _wymiar:=P.WY;
   _c_p:=P.CP().S
?};

_licznik:=0;

_nk:=exec('ust_nk','lista_licz',_data_badania,'NK');
_godz:=obj_new(8);

:: Sytuacja zatrudnienia i zwolnienia pracownika w tym samym miesiacu, lista z przesunieciem podatkowym
_bez_wyp:=0;
{? _l-_k=0
|| {? ~FUNKCJE.LP(100,,_l,_l,1,,1)
   || {? FUNKCJE.L(100,,_l,_l)
      || _bez_wyp:=1
      || _l:=_k:=0
      ?}
   ?}
?};
_Data:=date(O.R,O.M,1);
{! _i:=_l.._k
|? d[7]:=0;
   _Data:=date(O.R,O.M-_i,1);
:  start i stop
   d[1]:=date(O.R,O.M-_i,1);
   d[2]:=date(O.R,O.M-_i,0);
   _oTrace.erase();
   {? _typ='E'
   || _nTrace.erase()
   ?};
:  Sprawdzenie czy byla wyplata za miesiac obliczany
   _wyplata:=0;
   O.cntx_psh();
   LS.cntx_psh();
   O.index('LISTYPLP');
   O.prefix(exec('ref_firma','ustawienia'),P.F_ZATR().KOD,_Data~1,_Data~2);
   _first:=1;
   _lpod:=0;
   {? _i & O.first()
   || {!
      |? LS.use(O.LT);
         LS.index('PRACNRRU');
         LS.prefix(P.ref());
         {? LS.find_key(500)
         || {? LS.find_key(90) | LS.find_key(91)
            || _lpod:=1;
               {? _first
               || d[1]:=date(O.R, O.M, 1);
                  d[2]:=date(O.R,O.M, 0)
               ?};
               _first:=0;
               {? d[1]>(_pom:=date(O.R,O.M,1))
               || d[1]:=_pom
               ?};
               {? d[2]<(_pom:=date(O.R, O.M, 0))
               || d[2]:=_pom
               ?}
            ?};
            _wyplata:=1
         ?};
         O.next()
      !}
   |? _i=0
   || _wyplata:=1;
      _lpod:=1
   ?};
   LS.cntx_pop();
   O.cntx_pop();

   H.index('_HISTKOD');
   H.prefix(P.ref(),'Z');
   {? H.find_le(d[2])
   || _c_p_i:=H.CP().S
   || _c_p_i:=_c_p
   ?};

   {? _wyplata | _bez_wyp
   || exec('kal_prac','personel',d[1]~1);
      VAR_DEL.delete('dni');
      dni:=obj_new(3);
:     dni[1][_i] - nominał w godzinach
:     dni[2][_i] - nieobecność w godzinach
:     dni[3][_i] - zarejestrowany czas
      {! _lp1:=1 .. obj_len(dni)
      |! dni[_lp1]:=obj_new((d[2]-d[1]+1));
         {! _lp2:=1 .. d[2]-d[1]+1
         |! dni[_lp1][_lp2]:=0
         !}
      !};
      {! _lp2:=1 .. d[2]-d[1]+1
      |! dni[1][_lp2]:=exec('nominal','godziny',d[1]-1+_lp2,d[1]-1+_lp2,,,1)
      !};
      exec('licz_nt_urlop','lista_licz',d[1],d[2],1,dni[2]);
      exec('licz_gt_urlop','lista_licz',d[1],d[2],1,dni[3]);
:     ┌─────────────────────────────────────────────────┐
:     │             dni przepracowane                   │
:     └─────────────────────────────────────────────────┘
      d[3]:=0;
      {! _lp2:=1 .. d[2]-d[1]+1
      |! d[3]+=(dni[1][_lp2]-dni[2][_lp2]>0 | dni[3][_lp2]>0);
         d[6]+=dni[3][_lp2]>0 & ~__KAL.w_days(date(d[1]~1,d[1]~2,1)+(_lp2-1),date(d[1]~1,d[1]~2,1)+(_lp2-1))
      !};
:     ┌─────────────────────────────────────────────────┐
:     │            sumowanie nieobecnosci               │
:     └─────────────────────────────────────────────────┘
      d[7]:=0;
      {! _lp2:=1 .. (d[2]-d[1]+1)
      |! d[7]+=(dni[1][_lp2]<=dni[2][_lp2] & dni[2][_lp2]>0 & dni[3][_lp2]=0)
      !};
      d[7]+=exec('dnpzazw','nieobecnosc',d[1],d[2],'dr')
   || d[3]:=0
   ?};

   _podst:=0;
   _sklnom:=0;

   _godz[3]:=
      {? _i=0
      || {? _typ='P'
         || FUNKCJE.L(57,,0)+FUNKCJE.L(57)
         || FUNKCJE.L(57)
         ?}
      |? _bez_wyp
      || FUNKCJE.L(57,,_i)
      || FUNKCJE.LP(57,,_i,,1,,1)
      ?};
   {? _godz[3]
      || exec('kal_list','personel');
         _tab:=exec('tab_godz','lista_licz',_Data,1,_i=0 | _bez_wyp);
         _tab.prefix();
      _przelicz:=0;
      {? _tab.first()
      || {!
         |? {? _nk<>exec('ust_nk','lista_licz',date(_tab.ROK,_tab.MC,0),'NK')
            || _przelicz:=1;
               0
            || _tab.next()
            ?}
         !}
      ?};
      exec('kal_prac','personel',O.R);
      {? _przelicz
      || {? _tab.first()
         || _pdgn:=20;
            _pr_noc:=exec('ust_nk','lista_licz',d[2],'PDGN');
            {? _pr_noc & _pr_noc>_pdgn
            || _pdgn:=_pr_noc
            ?};
            _pdgn:=_pdgn/100;
            {!
            |? _st:=(_nk/_tab.NOM)$2*_pdgn$2;
               _val:=_tab.GODZ*_st$2;
               _podst+=_val;
               _opis:='%1*%2'[form(_tab.GODZ,,,'9.'),form(_st,,,'9.')];
               _oTrace.add(122,,_val,'PRZELICZ','E',,,_opis);
               _tab.next()
            !}
         ?}
      || _podst+=
            {? _i=0
            || {? _typ='P'
               || FUNKCJE.L(122,,0,,_oTrace)+FUNKCJE.L(122,,,,_oTrace)
               || FUNKCJE.L(122,,,,_oTrace)
               ?}
            |? _bez_wyp
            || FUNKCJE.L(122,,_i,,_oTrace)
            || FUNKCJE.LP(122,,_i,,1,_oTrace,1)
            ?}
      ?};
      &_przelicz;
      &_tab
   ?};

   {? var_pres('_ekw_nom')>100 || obj_del(_ekw_nom) ?};
   _ekw_nom:=__RUB.sys_rub(432,d[2]);

:: Sprawdzenie czy były nadgodziny z poprzednich miesięcy wystąpienia naliczone w miesiącu badanym.
:: Jeżeli były takie godziny to weryfikacja przeszeregowania będzie odnosiła się do miesiąca wystąpienia nadgodzin.
   _od_nadg:=d[1];
   _tab_G:=exec('rozliczone_godziny','godziny',d[1]~1,d[1]~2,82,8211);

   {? _tab_G.first
   || _od_nadg:=_tab_G.D
   ?};
   &_tab_G;

   {? _przeszer>P.DZA & _przeszer>=_od_nadg & date(_przeszer~1,_przeszer~2,1)<=date(_data_badania~1,_data_badania~2,1)
   || _tab:=exec('tab_godz','lista_licz',_Data,,_i=0 | _bez_wyp,_WY);
      _tab.prefix();
      {? _tab.first()
      || _st1:=_umowa.S1;
         _st2:=_umowa.S2+_umowa.S3;
         {!
         |? {? -(1+_c_p_i)='f' & (-(1+_c_p_i)=-(1+_c_p)) | (-(1+_c_p)='f')
            || _val:=0;
               {? _typ='P'
:: NUCO
               || _st1:=FUNKCJE.L(91,,0);
                  _st1+=(FUNKCJE.L(91,,0)*FUNKCJE.S(75,,0)/100)$2;
                  _st2:=FUNKCJE.L(92,94,0)
:: NUCO
               || _st1:=FUNKCJE.L(91);
                  _st1+=(FUNKCJE.L(91)*FUNKCJE.S(75)/100)$2;
                  _st2:=FUNKCJE.L(92,94)
               ?};
               {? _tab.RODZ=1 | _tab.RODZ=2 | _tab.RODZ=10 | _tab.RODZ=11
               || _val+=_tab.GODZ*(_st1+(_st2/_tab.NOM$2))$2;
                  _opis:='%1*(%2+%3/%4)'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_st2,,,'9.'),form(_tab.NOM$2,,,'9.')
                  ];
                  _minimum:=exec('minkraj_komornik','lista_licz',date(_tab.ROK,_tab.MC,1),,1)$2;
                  _min_nom:=_minimum;
                  _minimum:=_minimum*_tab.GODZ$2;
                  {? _tab.RODZ=10 | _tab.RODZ=11
                  || _val:=_val*0.6$2;
                     _opis+='*0.6';
                     {? _val<_minimum*0.6$2
                     || _val:=_minimum*0.6$2;
                        _opis:='%1*%2*0.6'[form(_tab.GODZ,,,'9.'),form(_min_nom,,,'9.')]
                     ?}
                  || {? _val<_minimum
                     || _val:=_minimum;
                        _opis:='%1*%2'[form(_tab.GODZ,,,'9.'),form(_min_nom,,,'9.')]
                     ?}
                  ?};
                  _oTrace.add(120,,_val,'PRZELICZ','E',,,_opis)
               ?};
               {? _tab.RODZ=5 | _tab.RODZ=7 | _tab.RODZ=8
               || _v0:=_tab.GODZ*(_st1+(_st2/_tab.NOM$2))$2;
                  _oTrace.add(125,,_v0,'PRZELICZ','E',,,'%1*(%2+%3/%4)'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_st2,,,'9.'),form(_tab.NOM$2,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=5 & _tab.TYP='S'
               || _v0:=_tab.GODZ*_st1$2;
                  _oTrace.add(126,,_v0,'PRZELICZ','E',,,'%1*%2'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=1 | _tab.RODZ=7 | _tab.RODZ=17
               || _v0:=_tab.GODZ*0.5*_st1$2;
                  _oTrace.add(121,,_v0,'PRZELICZ','E',,,'%1*0.5*%2'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=10
               || _v0:=_tab.GODZ*0.5*_st1*0.6$2;
                  _oTrace.add(121,,_v0,'PRZELICZ','E',,,'%1*0.5*%2*0.6'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=2 | _tab.RODZ=6 | _tab.RODZ=8 | _tab.RODZ=18
               || _v0:=_tab.GODZ*_st1$2;
                  _sk:={? _tab.RODZ=2 | _tab.RODZ=18 || 121 |? _tab.RODZ=6 || 123 |? _tab.RODZ=8 || 125 ?};
                  _oTrace.add(_sk,,_v0,'PRZELICZ','E',,,'%1*%2'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=11
               || _v0:=_tab.GODZ*_st1*0.6$2;
                  _oTrace.add(121,,_v0,'PRZELICZ','E',,,'%1*%2*0.6'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=4
               || _v0:=_tab.GODZ*(_st1+(_st2/_tab.NOM$2))$2+_tab.GODZ*_st1$2;
                  _oTrace.add(123,,_v0,'PRZELICZ','E',,,'%1*(%2+%3/%4)+%1*%2'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_st2,,,'9.'),form(_tab.NOM$2,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               _podst+=_val

            || _val:=0;
               {? _typ='P'
               || _st1:=FUNKCJE.L(90,,0);
:: NUCO
                  _st1+=(FUNKCJE.L(90,,0)*FUNKCJE.S(75,,0)/100$2);
                  _st2:=FUNKCJE.L(92,94,0)
               || _st1:=FUNKCJE.L(90);
:: NUCO
                  _st1+=(FUNKCJE.L(90)*FUNKCJE.S(75)/100$2);
                  _st2:=FUNKCJE.L(92,94)
               ?};
               {? _tab.RODZ=1 | _tab.RODZ=2 | _tab.RODZ=10 | _tab.RODZ=11 | _tab.RODZ=18 | _tab.RODZ=17
               || _val+=(_tab.GODZ*((_st2+_st1)/_tab.NOM$2))$2;
                  _opis:='%1*(%2+%3)/%4'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_st2,,,'9.'),form(_tab.NOM$2,,,'9.')
                  ];
                  _minimum:=exec('minkraj_komornik','lista_licz',date(_tab.ROK,_tab.MC,1),,1)$2;
                  _min_nom:=_minimum;
                  _minimum:=_minimum*_tab.GODZ$2;
                  {? _tab.RODZ=10 | _tab.RODZ=11
                  || _val:=_val*0.6$2;
                     _opis+='*0.6';
                     {? _val<_minimum*0.6$2
                     || _val:=_minimum*0.6$2;
                        _opis:='%1*%2*0.6'[form(_tab.GODZ,,,'9.'),form(_min_nom,,,'9.')]
                     ?}
                  || {? _val<_minimum
                     || _val:=_minimum;
                        _opis:='%1*%2'[form(_tab.GODZ,,,'9.'),form(_min_nom,,,'9.')]
                     ?}
                  ?};
                  _oTrace.add(120,,_val,'PRZELICZ','E',,,_opis)
               ?};
               {? _tab.RODZ=5 | _tab.RODZ=6 | _tab.RODZ=7 | _tab.RODZ=8
               || _v0:=(_tab.GODZ*((_st2+_st1)/_tab.NOM$2))$2;
                  _oTrace.add(125,,_v0,'PRZELICZ','E',,,'%1*(%2+%3)/%4'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_st2,,,'9.'),form(_tab.NOM$2,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=1 | _tab.RODZ=7 | _tab.RODZ=17
               || _v0:=((_tab.GODZ*0.5)*(_st1/_tab.NOM$2))$2;
                  _oTrace.add(121,,_v0,'PRZELICZ','E',,,'%1*0.5*%2/%3'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_tab.NOM$2,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=10
               || _v0:=((_tab.GODZ*0.5)*(_st1/_tab.NOM$2)*0.6)$2;
                  _oTrace.add(121,,_v0,'PRZELICZ','E',,,'%1*0.5*%2/%3*0.6'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_tab.NOM$2,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=2 | _tab.RODZ=6 | _tab.RODZ=8 | _tab.RODZ=18
               || _v0:=(_tab.GODZ*(_st1/_tab.NOM$2))$2;
                  _sk:={? _tab.RODZ=2 | _tab.RODZ=18 || 121 |? _tab.RODZ=6 || 123 |? _tab.RODZ=8 || 125 ?};
                  _oTrace.add(_sk,,_v0,'PRZELICZ','E',,,'%1*%2/%3'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_tab.NOM$2,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=11
               || _v0:=(_tab.GODZ*(_st1/_tab.NOM$2)*0.6)$2;
                  _oTrace.add(121,,_v0,'PRZELICZ','E',,,'%1*%2/%3*0.6'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_tab.NOM$2,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=4
               || _v0:=_tab.GODZ*((_st2+_st1)/_tab.NOM$2)$2+(_tab.GODZ*(_st1/_tab.NOM$2))$2;
                  _oTrace.add(123,,_v0,'PRZELICZ','E',,,'%1*(%2+%3)/%4+%1*%2/%4'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_st2,,,'9.'),form(_tab.NOM$2,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=5 & _tab.TYP='S'
               || _v0:=_tab.GODZ*_st1$2;
                  _oTrace.add(126,,_v0,'PRZELICZ','E',,,'%1*%2'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=13
               || _minimum:=exec('minkraj_komornik','lista_licz',date(_tab.ROK,_tab.MC,1),,1)$2;
                  _st_min:=_minimum;
                  _minimum:=_minimum*_tab.GODZ$2;
                  _v0:=_tab.GODZ*((_st2+_st1)/_tab.NOM$2)$2;
                  {? _v0<_minimum
                  || _v0:=_minimum;
                     _oTrace.add(7052,,_v0,'PRZELICZ','E',,,'%1*%2'[
                     form(_tab.GODZ,,,'9.'),form(&_st_min,,,'9.')])
                  || _oTrace.add(7052,,_v0,'PRZELICZ','E',,,'%1*(%2+%3)/%4'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_st2,,,'9.'),form(_tab.NOM$2,,,'9.')
                     ])
                  ?};
                  _val+=_v0
               ?};
               {? _tab.RODZ=16
               || _v0:=_tab.GODZ*((_st2+_st1)/_tab.NOM$2)$2;
                  _oTrace.add(7058,,_v0,'PRZELICZ','E',,,'%1*(%2+%3)/%4'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_st2,,,'9.'),form(_tab.NOM$2,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=12
               || _v0:=(_tab.GODZ*(_st1/_tab.NOM$2))$2;
                  _oTrace.add(7054,,_v0,'PRZELICZ','E',,,'%1*%2/%3'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_tab.NOM$2,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=14
               || _v0:=(_tab.GODZ*(_st1/_tab.NOM$2))$2;
                  _oTrace.add(7040,,_v0,'PRZELICZ','E',,,'%1*%2/%3'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_tab.NOM$2,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               {? _tab.RODZ=15
               || _v0:=(_tab.GODZ*(_st1/_tab.NOM$2))$2;
                  _oTrace.add(7050,,_v0,'PRZELICZ','E',,,'%1*%2/%3'[
                     form(_tab.GODZ,,,'9.'),form(_st1,,,'9.'),form(_tab.NOM$2,,,'9.')
                  ]);
                  _val+=_v0
               ?};
               _podst+=_val
            ?};
::          Wtyczka umożliwiajaca przeliczenie wynagrodzenia za godziny niestandardowe
            params_set('tab',_tab,'c_p',_c_p,'c_p_i',_c_p_i,'oTrace',_oTrace,'umowa',_umowa);
            _val:=Plugin.run('PPL_PLL_NALS_EKWIWAL');
            _podst+=_val;
            _tab.next
         !}
      ?};
      &_tab;

      {? -(1+_c_p_i)='f' & (-(1+_c_p_i)=-(1+_c_p)) | (-(1+_c_p)='f')
      || {? -(1+_c_p_i)='f' & (-(1+_c_p_i)=-(1+_c_p))
         || _lg:=
               {? _i=0
               || {? _tab_r_godz
                  || {? _typ='P'
                     || FUNKCJE.L_SYS(1011213,0)+FUNKCJE.L_SYS(1011213)
                     || FUNKCJE.L_SYS(1011213)
                     ?}
                  || {? _typ='P'
                     || FUNKCJE.L(48,,0)+FUNKCJE.L(54,,0)+FUNKCJE.L(63,,0)+FUNKCJE.L(67,,0)+FUNKCJE.L(65,,0)+
                        FUNKCJE.L(48)+FUNKCJE.L(54)+FUNKCJE.L(63)+FUNKCJE.L(67)+FUNKCJE.L(65)+
                        FUNKCJE.LP(48,,0,,1)+FUNKCJE.LP(54,,0,,1)+FUNKCJE.LP(63,,0,,1)+FUNKCJE.LP(67,,0,,1)+
                        FUNKCJE.LP(65,,0,,1)
                     || FUNKCJE.L(48)+FUNKCJE.L(54)+FUNKCJE.L(63)+FUNKCJE.L(67)+FUNKCJE.L(65)+
                        FUNKCJE.LP(48,,0,,1)+FUNKCJE.LP(54,,0,,1)+FUNKCJE.LP(63,,0,,1)+FUNKCJE.LP(67,,0,,1)+
                        FUNKCJE.LP(65,,0,,1)
                     ?}
                  ?}
               |? _bez_wyp
               || {? _tab_r_godz
                  || FUNKCJE.L_SYS(1011213,_i)
                  || FUNKCJE.L(48,,_i)+FUNKCJE.L(54,,_i)+FUNKCJE.L(63,,_i)+FUNKCJE.L(67,,_i)+
                     FUNKCJE.L(65,,_i)
                  ?}
               || {? _tab_r_godz
                  || FUNKCJE.LP_SYS(1011213,_i,,1,,,1)
                  || FUNKCJE.LP(48,,_i,,1,,1)+FUNKCJE.LP(54,,_i,,1,,1)+FUNKCJE.LP(63,,_i,,1,,1)+
                     FUNKCJE.LP(67,,_i,,1,,1)+FUNKCJE.LP(65,,_i,,1,,1)
                  ?}
               ?}
         || _Norma:=exec('nominal','godziny',d[1],d[2],,,1); _Nieob:=0;
            {? _Norma=0
            || RAPLS.msg(
                  P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                  'Brak informacji o kalendarzu pracownika.'@,
                  exec('retry_msg','lista_licz')
               )
            ?};
            {? _Norma>0
            || _Nieob+=exec('licz_nie_urlop','!ppl_pll_nals',d[1],d[2],1)
            ?};
            _lg:=_Norma-_Nieob; {? _lg<0 || _lg:=0 ?}
         ?};
         _v0:=(_lg*_umowa.S1)$2;
         {? _v0>0
         || _podst+=_v0;
            _oTrace.add(100,,_v0,'PRZELICZ','E',,,'%1*%2'[
               form(_lg,,,'9.'),form(_umowa.S1,,,'9.')
            ])
         ?}
      ?};
      H.cntx_psh();
      H.index('_HISTKOD');
      H.prefix(P.ref(),'Z');
      {? H.find_le(d[2])
      || _hsx:=exec('hsx','lista_licz',d[2],d[2],_typ_val);
         _s1:=_hsx.S1;
         _s2:=_hsx.S2;
         _s3:=_hsx.S3;
         obj_del(_hsx);
         &_hsx
      || _s1:=_s2:=_s3:=0
      ?};
      H.cntx_pop();
      {? _ekw_nom.first()
      || R.cntx_psh();
         R.prefix();
         {!
         |? {? R.seek(_ekw_nom.R) & R.EKW='T'
            || {? _i=0
               || {? _typ='P'
                  || _sklnom+=FUNKCJE.L(_ekw_nom.RN,,0,,_oTrace)+FUNKCJE.L(_ekw_nom.RN,,,,_oTrace)
                  || _sklnom+=FUNKCJE.L(_ekw_nom.RN,,,,{? _typ='E' || _nTrace || _oTrace ?})
                  ?}
               ?};
               {? _bez_wyp
               || _sklnom+=FUNKCJE.L(_ekw_nom.RN,,_i,,{? _typ='E' || _nTrace || _oTrace ?})
               || _sklnom+=FUNKCJE.LP(_ekw_nom.RN,,_i,,1,{? _typ='E' || _nTrace || _oTrace ?},1)
               ?}
            ?};
            _ekw_nom.next()
         !};
         R.cntx_pop()
      ?};
      _podst+=LICZ.Wylicz(_i,'.EKW',,_oTrace,_s1,_umowa.S1,_s2,_umowa.S2,_s3,_umowa.S3,1,_bez_wyp);
      {? _i=0
      || _podst+=LICZ.Wylicz(,'.EKW',,_oTrace,_s1,_umowa.S1,_s2,_umowa.S2,_s3,_umowa.S3,1)
      ?};
      _podst-=_sklnom
   || _podst+=
         {? _i=0
         || {? _tab_wyn_godz
            || {? _typ='P'
               || FUNKCJE.L_SYS(1011221,0,,_oTrace)+FUNKCJE.L_SYS(1011221,,,_oTrace)
               || FUNKCJE.L_SYS(1011221,,,_oTrace)
               ?}
            || {? _typ='P'
               || FUNKCJE.L(120,121,0,,_oTrace)+FUNKCJE.L(123,,0,,_oTrace)+FUNKCJE.L(125,126,0,,_oTrace)+
                  FUNKCJE.L(7040,7040,0,,_oTrace)+FUNKCJE.L(7050,7050,0,,_oTrace)+FUNKCJE.L(7052,7052,0,,_oTrace)+
                  FUNKCJE.L(7054,7054,0,,_oTrace)+FUNKCJE.L(7058,7058,0,,_oTrace)+
                  FUNKCJE.L(120,121,,,_oTrace)+FUNKCJE.L(123,,,,_oTrace)+FUNKCJE.L(125,126,,,_oTrace)+
                  FUNKCJE.L(7040,7040,,,_oTrace)+FUNKCJE.L(7050,7050,,,_oTrace)+FUNKCJE.L(7052,7052,,,_oTrace)+
                  FUNKCJE.L(7054,7054,,,_oTrace)+FUNKCJE.L(7058,7058,,,_oTrace)
               || FUNKCJE.L(120,121,,,_oTrace)+FUNKCJE.L(123,,,,_oTrace)+FUNKCJE.L(125,126,,,_oTrace)+
                  FUNKCJE.L(7040,7040,,,_oTrace)+FUNKCJE.L(7050,7050,,,_oTrace)+FUNKCJE.L(7052,7052,,,_oTrace)+
                  FUNKCJE.L(7054,7054,,,_oTrace)+FUNKCJE.L(7058,7058,,,_oTrace)
               ?}
            ?}
         |? _bez_wyp
         || {? _tab_wyn_godz
            || FUNKCJE.L_SYS(1011221,_i,,_oTrace)
            || FUNKCJE.L(120,121,_i,,_oTrace)+FUNKCJE.L(123,,_i,,_oTrace)+FUNKCJE.L(125,126,_i,,_oTrace)+
               FUNKCJE.L(7040,7040,_i,,_oTrace)+FUNKCJE.L(7050,7050,_i,,_oTrace)+FUNKCJE.L(7052,7052,_i,,_oTrace)+
               FUNKCJE.L(7054,7054,_i,,_oTrace)+FUNKCJE.L(7058,7058,_i,,_oTrace)
            ?}
         || {? _tab_wyn_godz
            || FUNKCJE.LP_SYS(1011221,_i,,1,_oTrace,,1)
            || FUNKCJE.LP(120,121,_i,,1,_oTrace,1)+FUNKCJE.LP(123,,_i,,1,_oTrace,1)+FUNKCJE.LP(125,126,_i,,1,_oTrace,1)+
               FUNKCJE.LP(7040,7040,_i,,1,_oTrace,1)+FUNKCJE.LP(7050,7050,_i,,1,_oTrace,1)+
               FUNKCJE.LP(7052,7052,_i,,1,_oTrace,1)+FUNKCJE.LP(7054,7054,_i,,1,_oTrace,1)+
               FUNKCJE.LP(7058,7058,_i,,1,_oTrace,1)
            ?}
         ?};
      {? -(1+_c_p_i)='f'
      || _podst+=
            {? _i=0
            || {? _typ='P'
               || FUNKCJE.L(100,,0,,_oTrace)+FUNKCJE.L(100,,,,_oTrace)
               || FUNKCJE.L(100,,,,_oTrace)
               ?}
            |? _bez_wyp
            || FUNKCJE.L(100,,_i,,_oTrace)
            || FUNKCJE.LP(100,,_i,,1,_oTrace,1)
            ?}
      ?};
      _podst+=LICZ.Wylicz(_i,'.EKW',,_oTrace,,,,,,,1,_bez_wyp);
      {? _ekw_nom.first()
      || R.cntx_psh();
         R.prefix();
         {!
         |? {? R.seek(_ekw_nom.R) & R.EKW='T'
            || {? _i=0
               || {? _typ='P'
                  || _sklnom+=FUNKCJE.L(_ekw_nom.RN,,0,,_oTrace)+FUNKCJE.L(_ekw_nom.RN,,,,_oTrace)
                  || _sklnom+=FUNKCJE.L(_ekw_nom.RN,,,,{? _typ='E' || _nTrace || _oTrace ?})
                  ?}
               ?};
               {? _bez_wyp
               || _sklnom+=FUNKCJE.L(_ekw_nom.RN,,_i,,{? _typ='E' || _nTrace || _oTrace ?})
               || _sklnom+=FUNKCJE.LP(_ekw_nom.RN,,_i,,1,{? _typ='E' || _nTrace || _oTrace ?},1)
               ?}
            ?};
            _ekw_nom.next()
         !};
         R.cntx_pop()
      ?};
      {? _i=0
      || _podst+=LICZ.Wylicz(,'.EKW',,_oTrace,,,,,,,1)
      ?};
      _podst-=_sklnom
   ?};

   {? d[3]>0
   || {? ~_licznik & ~_lpod & (_podst+_sklnom) || _lpod:=1 ?};
      {? _lpod
      || d[4]+=d[3];
         d[5]+=d[7]
      ?};

      _wsklnom+=_sklnom;
      {? _lpod | _podst+_sklnom
      || _nd:=__KAL.w_days(d[1],d[2]);
         _licznik+=1;
         {? _typ='E'
         || _PO.PutMc(1,_licznik,_podst,_nd,d[3],0,'T',_Data,'A');
            __PN.PutMc(1,_licznik,_sklnom,_nd,d[3],0,'T',_Data,'A')
         |? _typ='N' & N.seek(_N_ref)
         || __PN.PutMc(1,_licznik,_podst,_nd,d[3],0,'T',_Data,'A',_oTrace)
         ?}
      ?};
      _w+=_podst;
::    zapisz składniki zmienne i nominalne uwzględnione w wyliczeniu podstawy
      {? _typ='E'
      || exec('ekwiwalent_zask','lista_licz',_h_um,'Z',_Data~1,_Data~2,_oTrace);
         exec('ekwiwalent_zask','lista_licz',_h_um,'N',_Data~1,_Data~2,_nTrace)
      ?}
   ?};

:: UWAGA: .Wylicz uwzględnia składniki nominalne, należy je usunąć z H_UM_ESK
   {? _typ='E' & _sklnom<>0 & _ekw_nom.first()
   || H_UM_ESK.cntx_psh();
      H_UM_ESK.index('UNIQUE');
      H_UM_ESK.prefix(_h_um,'Z',_Data~1,_Data~2);
      {!
      |? {!
         |? H_UM_ESK.find_tab(,'SK_KOD',,'=',_ekw_nom.RN)
         |! H_UM_ESK.del()
         !};
         _ekw_nom.next()
      !};
      H_UM_ESK.cntx_pop()
   ?};

   _licznik<_ile_mc
!};
{? _typ='N' & N.seek(_N_ref)
|| _w0:=0;
   _oTrace.erase();
   {? 1+_c_p='U'
   || _w0:=FUNKCJE.L(90,94,,,_oTrace)
   || {? _w=0
      || _w0+=(
         {? _data_badania<>date(0,0,0) & _data_badania<_list_d
         || __KAL.w_hours(date(_data_badania~1,_data_badania~2,1),date(_data_badania~1,_data_badania~2,0))
         || __KAL.w_hours(date(_list_d~1,_list_d~2,0),_list_d)
         ?}*
         FUNKCJE.L(91,,,,_oTrace))
      ?}+(_w0+=FUNKCJE.L(92,94,,,_oTrace))
   ?};
   _oTrace.add(0,'Wsp. do ekwiwalentu',_EKW*_wymiar$2,'WSP_EKW','W',,,'Wartość współczynnika do ekwiwalentu');
   __PN.PutMc(1,_licznik+1,_w0,0,0,0,'T',_data_badania,'A',_oTrace);
   __PN.Put(1,N.NB().RN,N.OD,_Data,date(0,0,0),_w,_N_ref);
   __PN.Pod(Finish);
   __PN.Zapisz(1);
   exec('zap_tab','lista_licz',_N_ref);
   __PN.Delete()
?};
{? _typ='P'
|| _w0:=0;
   H.index('_HISTKOD');
   H.prefix(P.ref(),'Z');
   {? H.find_le(_data_badania)
   || _cp:=H.CP().S;
      _hsx:=exec('hsx','lista_licz',_data_badania,_data_badania,_typ_val);
      _wyn_zas:=_hsx.S1;
      _dodatki:=_hsx.S2+_hsx.S3;
      obj_del(_hsx);
      &_hsx;
      {? 1+_c_p='U'
      || _w0:=_wyn_zas+_dodatki
      || {? _w=0
         || _w0+=(
            {? _data_badania<>date(0,0,0) & _data_badania<_list_d
            || __KAL.w_hours(date(_data_badania~1,_data_badania~2,1),date(_data_badania~1,_data_badania~2,0))
            || __KAL.w_hours(date(_list_d~1,_list_d~2,0),_list_d)
            ?}*
            _wyn_zas)
         ?};
         _w0+=_dodatki
      ?}
   ?}
?};

H.cntx_pop();
N.cntx_pop();

:: zapisz kwoty uwzględnione w wyliczeniu podstawy
{? _typ='E'
|| exec('ekwiwalent_zapo','lista_licz',_h_um,'Z',_PO,_licznik);
   exec('ekwiwalent_zapo','lista_licz',_h_um,'N',__PN,_licznik);
:: zapisz składniki z bieżącego miesiąca uwzględnione w wyliczeniu podstawy
   _oTrace.erase();
   _w0:=0;
   {? _h_um
   ||
::  sumowanie danych o zaszeregowaniu z odpowiedniego przebiegu zatrudnienia
      _s_zasad:=_stawka_h_um.S1;
      _s_dod1:=_stawka_h_um.S2;
      _s_dod2:=_stawka_h_um.S3;
      _s_dod:=_s_dod1+_s_dod2;
      &_stawka_h_um;

      {? 1+_c_p='F'
      || _nr_zasad:=91;
         _nr_dod1:=93;
         _nr_dod2:=94
      || _nr_zasad:=90;
         _nr_dod1:=92;
         _nr_dod2:=94;
         _oTrace.add(_nr_zasad,,_s_zasad,'','E',,,'%1%2'['Nominalna płaca zasadnicza - na dzień: ',$_data_badania])
      ?};
::  wprowadzenie danych do tabeli śledzenia
      _oTrace.add(_nr_dod1,,_s_dod1,'','E',,,'%1%2'['Dodatki angaż - na dzień: ',$_data_badania]);
      _oTrace.add(_nr_dod2,,_s_dod2,'','E',,,'%1%2'['Dodatki angaż - na dzień: ',$_data_badania]);
      &_s_dod1;
      &_s_dod2;
      &_nr_dod1;
      &_nr_dod2
   || _nr_zasad:=90;
      _s_zasad:=FUNKCJE.L(90,91,,,_oTrace);
      _s_dod:=FUNKCJE.L(92,94,,,_oTrace)
   ?};
   {? 1+_c_p='F'
   || {? _w=0
      || _w0+=_wyl_zasad:=(
         {? _data_badania<>date(0,0,0) & _data_badania<_list_d
         || __KAL.w_hours(date(_data_badania~1,_data_badania~2,1),date(_data_badania~1,_data_badania~2,0))
         || __KAL.w_hours(date(_list_d~1,_list_d~2,0),_list_d)
         ?}*_s_zasad);
         _oTrace.add(_nr_zasad,,_wyl_zasad,'','E',,,'%1%2'['Wyliczona płaca zasadnicza - na dzień: ',$_data_badania])
      ?}+(_w0+=_s_dod)
   || _w0+=(_s_zasad+_s_dod)
   ?};
   &_s_zasad;
   &_s_dod;
   &_nr_zasad;
   exec('ekwiwalent_zask','lista_licz',_h_um,'S',_data_badania~1,_data_badania~2,_oTrace);

   _PO.Delete();
   _PO.Create(1);
   _PO.NewMc(1,1);
   _PO.PutMc(1,1,_w0,0,0,0,'T',_data_badania,'A');
:: zapisz kwoty uwzględnione w wyliczeniu podstawy
   exec('ekwiwalent_zapo','lista_licz',_h_um,'S',_PO,1);

:: dla zapisu informacji niezbędnych do wyliczenia ekwiwalentu
   _buf:=exec('ekwiwalent_bpom','lista_licz');
:: ustaw wspólne wartości
   _buf.H_UM:=_h_um;
   _buf.K:='I';
   _buf.R:=_ex_r;
   _buf.M:=_ex_m;
   _buf.LT:=O.LT;

:: odpisz wartości pośrednie
   _buf.zapisz('LMC','Liczba miesięcy',_licznik);
   _buf.zapisz('ED4','Dni przepracowane',d[4]);
   _buf.zapisz('ED5','Dni nieobecności',d[5]);
   _buf.zapisz('ED6','Dni przepracowane',d[6]);
   _buf.zapisz('WSP','Współczynnik do ekw.',_EKW);
   _buf.zapisz('WYM','Wymiar zatrudnienia',_wymiar);
   _buf.zapisz('L72','Dni/godz.niewyk.url.',FUNKCJE.L(72));
   _buf.zapisz('NGK','Dobowa norma godzin',
      {? 2004<=O.R
      || exec('norma','godziny',{? _data_badania<>date(0,0,0) || _data_badania || date(O.R,O.M,0) ?})
      || 1
      ?}
   );
   _PO.Delete();
   __PN.Delete()
?};

_kw_okr:=0;
_lm:=_licznik;
:: Dodanie premii okresowych
{? exec('test_par','parametr',279,'T')
|| PREM_OKR.cntx_psh();
   PREM_OKR.index('PREM_LST');
   PREM_OKR.prefix(P.ref());
   {? PREM_OKR.first()
   || _licznik:=0;
      {? _typ='E'
      || _tab_okr:=tab_tmp(3,
            'ROK','INTEGER','Rok',
            'MC','INTEGER','Miesiąc',
            'D','DATE','Data',
            'RP','STRING[1]','Rodzaj premii',
            'KW','REAL','Kwota',
            'LT','STRING[8]','Lista płac',
            'RN','INTEGER','Numer rubryki',
            'RT','STRING[20]','Opis rubryki',
            'OD','DATE','Data od',
            'DO','DATE','Data do'
         );
         _tab_add:="
            _a.LT:=PREM_OKR.LT;
            _a.ROK:=O.RP;
            _a.MC:=O.MP;
            _a.RP:=PREM_OKR.RP;
            _a.KW:=LS.KW;
            _a.D:=date(O.RP,O.MP,1);
            _a.RN:=LS.RB().RN;
            _a.RT:=LS.RB().RT;
            _a.OD:=PREM_OKR.O_OD;
            _a.DO:=PREM_OKR.O_DO;
            _a.add()"
      |? _typ='N' & N.seek(_N_ref)
      || exec('define_skl_okr','lista_licz')
      ?};
      _dni_okr:=_dni_prac:=0;
      {! _i:=_l.._k
      |? _Data:=date(O.R,O.M-_i,1);
         _od:=_Data;
         _do:=date(O.R,O.M-_i,0);
         _Norma:=__KAL.w_days(_od,_do);
::       W przypadku zatrudnienia w trakcie miesiąca pomniejszamy normę
::       do przepracowania o okres, w którym nie był zatrudniony i nie jest
::       ten czas uzupełniany do pełnego miesiąca
         _Norma-=exec('dnpzazw','nieobecnosc',_od,_do,'dr');
         {? _Norma<0 || _Norma:=0 ?};
         _Nieob:=0;
         {? _Norma>0
         || _Nieob+=exec('licz_nie_urlop','!ppl_pll_nals',_od,_do)
         ?};
         _praca:=_Norma-_Nieob;
         {? _praca<0 || _praca:=0 ?};
         _dni_okr+=_Norma;
         _dni_prac+=_praca;
         O.cntx_psh();
         O_P.cntx_psh();
         O_P.index('P_RMP');
         O_P.prefix('T',P.ref(),_Data~1,_Data~2);
         LS.cntx_psh();
         _licznik+=1;
         _d_okr:=0;
         {? _i & O_P.first()
         || {!
            |? PREM_OKR.prefix(P.ref(),~O_P.O().LT);
               {? PREM_OKR.first()
               || {!
                  |? {? PREM_OKR.RP<>'M' &
                        (PREM_OKR.O_OD~1*12+PREM_OKR.O_OD~2)<(PREM_OKR.O_DO~1*12+PREM_OKR.O_DO~2)
                     || LS.use(O_P.O().LT);
                        LS.index('PRACORUB');
                        LS.prefix(P.ref());
                        {? LS.find_key(PREM_OKR.SKP().R)
                        || _kw_okr+=LS.KW;
                           {? _typ='E'
                           || _tab_add(_tab_okr)
                           |? _typ='N' & N.seek(_N_ref)
                           || __SK_CHO.prefix;
                              __SK_CHO.blank(1);
                              __SK_CHO.REF:=#PREM_OKR.ref();
                              __SK_CHO.R:='P';
                              __SK_CHO.O:=PREM_OKR.RP;
                              __SK_CHO.MC:=PREM_OKR.O_OD;
                              __SK_CHO.OD:=PREM_OKR.O_OD;
                              __SK_CHO.DO:=PREM_OKR.O_DO;
                              __SK_CHO.SKL:=PREM_OKR.SKP().R().RT;
                              __SK_CHO.SKL_NR:=PREM_OKR.SKP().R().RN;
                              __SK_CHO.K_B:=LS.KW$2;
                              __SK_CHO.K_N:=__SK_CHO.K_B;
                              __SK_CHO.LT:=PREM_OKR.LT;
                              __SK_CHO.TYP:='P';
                              __SK_CHO.REF_N:=#_N_ref;
                              __SK_CHO.PRC:=0;
                              __SK_CHO.UWAGI:='';
                              __SK_CHO.OPIS:=$#_N_ref;
                              __SK_CHO.add();
                              __SK_CHO.R:='X';
                              __SK_CHO.add()
                           ?}
                        ?}
                     ?};
                     PREM_OKR.next()
                  !}
               ?};
               O_P.next()
            !}
         ?};
         LS.cntx_pop();
         O.cntx_pop();
         O_P.cntx_pop();
         _licznik<12
      !};
      {? _kw_okr
      || {? _typ='E' & _tab_okr.first()
         || _buf.zapisz('OLM','Liczba miesięcy okr.',_licznik);
            _buf.zapisz('ODP','Dni przeprac. okr.',_dni_prac);
            _buf.zapisz('ODN','Dni nominalne. okr.',_dni_okr);
            _oTrace.erase();
            _d_okr:=_tab_okr.D;
            _kw_okr:=_MC:=_ROK:=0;
            _PO.Delete();
            _PO.Create(1);
            _PO.NewMc(1,_licznik);
            _licznik:=0;
            _ok:=0;
            {!
            |? {!
               |? _oTrace.add(_tab_okr.RN,,_tab_okr.KW,_tab_okr.LT,'E',,,'%1-%2'[
                  form(_tab_okr.OD,,,'9.'),form(_tab_okr.DO,,,'9.')]);
                  _kw_okr+=_tab_okr.KW;
                  _MC:=_tab_okr.MC;
                  _ROK:=_tab_okr.ROK;
                  _ok:=_tab_okr.next();
                  _ok & _d_okr=_tab_okr.D
               !};
               exec('ekwiwalent_zask','lista_licz',_h_um,'O',_ROK,_MC,_oTrace);
               _oTrace.erase();
               _licznik+=1;
               _PO.PutMc(1,_licznik,_kw_okr,0,0,0,'T',_d_okr,'A');
               _kw_okr:=0;
               _d_okr:=_tab_okr.D;
               _ok
            !};
            exec('ekwiwalent_zapo','lista_licz',_h_um,'O',_PO,_licznik);
            _PO.Delete()
         |? _typ='N' & N.seek(_N_ref)
         ||  __SK_CHO.index(__SK_ND4);
             __SK_CHO.prefix(#_N_ref,'X');
             {? __SK_CHO.first
             || {!
                |? {? ~_dni_prac
                   || __SK_CHO.K_B:=__SK_CHO.K_B/_licznik$2
                   || __SK_CHO.K_B:=__SK_CHO.K_B*_dni_okr/_dni_prac/_licznik$2
                   ?};
                   __SK_CHO.K_N:=__SK_CHO.K_B;
                   __SK_CHO.put();
                   __SK_CHO.next()
                !}
             ?};
            exec('sk_cho_zapisz','skladniki_okresowe',1);
            exec('end_prem_skl_okr','lista_licz')
         |? _typ='P'
         || {? ~_dni_prac
            || _kw_okr:=_kw_okr/_licznik$2
         || _kw_okr:=_kw_okr*_dni_okr/_dni_prac/_licznik$2
         ?}
      ?}
      ?}
   ?};
   PREM_OKR.cntx_pop()
?};

_wynik:=
   {? _typ='E'
   || _w:=exec('ekwiwalent','lista_licz',_h_um,0);
      {? type_of(_w)=type_of(0)
      || _w
      ?}
   |? _typ='N'
   || exec('n_aktualizuj_podstawy','nieobecnosc',,,1);
      N.WART
   |? _typ='P'
      || _pod:=0;
      {? _w+_w0 & _lm
      || {? d[4]>0
         || _pod:=_w/d[4]*(d[4]+d[5]-d[6])$2
         ?};
         _pod/=_lm$2
      ?};
      {? _wsklnom>0 & _lm
      || _pod+=(_wsklnom/_lm)$2
      ?};
         _pod+=_kw_okr+_w0;
         _pod$2
   ?};
VAR_DEL.delete('d','dni','Finish');
_wynik

