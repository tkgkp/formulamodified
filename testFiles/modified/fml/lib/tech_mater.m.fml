:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: tech_mater.fml
:: Utworzony: 11.03.2015
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi surowców kart technologicznych, wzorców, technologii zlecenia
::            (biblioteka wspólna dla TTE_TEC, TTE_WTE, TTE_PZL)
::            Obsługa tebel:
::            - TMAT - surowce technologiczne
::            - TCHMAT - zamienniki surowców
::            - TTG - grupy technologiczne
::            - TTGP - pozycje grup technologicznych
::======================================================================================================================


:: UWAGA: komentarze 'Metoda nieaktywna: %1.' są do usunięcia wraz z fragmentami kodu, o ile nie pojawią się wywołania


\tchm_edt
::----------------------------------------------------------------------------------------------------------------------
::  MOD: MKO [8.60]
:: OPIS: Obsługa po Dołącz/Popraw dla TMAT/TCHMAT (wykorzystywana również jako formuła walidacyjna podczas importu)
::   WE: _a - Alias  tabeli
::       [_b] - tryb pracy: [1] - dołącz, 0 - popraw
::       [_c] - czy import przez Excele: [0]/1
::   WY: Wynik działania funkcji chk_rec
::  OLD: \tchm_edt/tex_tmat.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_tab:=_a;
_add:={? var_pres('_b')=type_of(0) || _b || 1 ?};
_import:={? var_pres('_c')=type_of(0) || _c || 0 ?};
{? _import>0
|| VAR.GRUPA:=VAR.GRP_MOD:='N';
   VAR.KOR:=0
?};
{? VAR.KOR & ~_import
|| {? _tab=TMAT
   || _buffer:=exec('buffer_tmat','tech_mater');
      _buffer.get();
      _cmp:=exec('compare','#table',_buffer,params_get().env_mater.buffer_tmat,1,'OD','USER','CAUSE','MOD_TIME')
   || _buffer:=exec('buffer_tchmat','tech_mater');
      _buffer.get();
      _cmp:=exec('compare','#table',_buffer,params_get().env_mater.buffer_tchmat,1,'OD','USER','CAUSE','MOD_TIME')
   ?};

   {? _cmp
   || _msg:='Nic nie zostało zmienione.\nNie można zatwierdzić zmian.'@;
      {? VAR.GRUPA='T'
      || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
      || FUN.emsg(_msg)
      ?};
      return(0)
   ?}
?};

:: NUCO - dodanie kontroli fantomów - tylko na kartach typu PRJ
{? VAR.A_KTL().TYP().TYP<>'PRJ' & (2+_tab.PT().KTM)='F0'
|| FUN.emsg('Surowiec z grupy FNTOMÓW można dodać tylko do karty technologicznej tpu PRJ'@);
   return('KTM')
?};
:: NUCO - koniec zmiany

:: Tak obsługujemy wskaźnik domyślnosci karty półfabrykatowej, może w przyszłości zostanie dorobiony algorytm walidacyjny
:: pozwalający sprawdzić tlanslacje parametrów, teraz jeśli karta ma parametry to nie może mieć znacznika domyślnosci
:: ER/WRT/XP/11.21/1010/0006
{? _import
||
:: Jeśli karta ma parametry to nie może mieć znacznika domyślnosci
   {? _tab.NRK().TYP().PAR='T' & exec('is_param','tech_head',_tab.NRK) & _tab.DFLT_KTL='T'
   || FUN.emsg('Znacznik \'Karty domyślnej\' dla półfabrykatu nie może być aktywny jeżeli '
               'karta technologiczna posiada parametry.'@);
      return('DFLT_KTL')
   ?}
|| {? VAR.A_KTL().TYP().PAR='T' & exec('is_param','tech_head',VAR.A_KTL) & TMAT.DFLT_KTL='T'
|| TMAT.DFLT_KTL:='N';
   {? FUN.ask('Ustawiono znacznik Karty domyślnej dla półfabrykatu, dla karty która posiada parametry'
              '\nmoże to doprowadzić do błędnego działania programu.'
              '\nNależy podać konkretną technologię dla półfabrykatu.\nCzy chcesz powrócić i ją teraz wskazać?'@)
   || return('TRED_KTL')
   ?}
   ?}
?};

:: Sprawdzenie, czy nie powstaną błędy związane z dokładnością półfabrykatu.
{? _tab.KTL<>null()
|| {? _import
   || _xjm:=_tab.NRK().XJM;
      _dokl:=exec('jaka_dok_m','jm',_tab.PT)
|| _xjm:=VAR.A_KTL().XJM;
      _dokl:=exec('jaka_dok_m','jm',VAR.A_T)
   ?};
   {? _dokl=0 & (_tab.WARB/_xjm$_dokl <> _tab.WARB/_xjm)
   || _msg:='Dokładność miary półfabrykatu ustawiona jest na %1 miejsc po przecinku.\n'
                  'Natomiast wprowadzona norma brutto powoduje, że na sztukę produktu przypada %2'
            ' półfabrykatu.\nMoże to spowodować błędy w programie.'@[$_dokl,$(_tab.WARB/_xjm)];
      {? _import
      || FUN.info(_msg)
      || _msg+=' Czy kontynuować?'@;
         {? ~FUN.ask()
      || return('TRED_KTL')
      ?}
   ?}
   ?}
?};

{? _tab.POW='T' & (_tab.DFLT_KTL='T' | _tab.KTL<>null())
|| _msg:='Powierzony surowiec nie może mieć wskazanej technologii.'@;
   {? VAR.GRUPA='T'
   || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
   || FUN.emsg(_msg)
   ?};
   return('POW')
|? _tab=TMAT & _tab.SO='O' & (_tab.DFLT_KTL='T' | _tab.KTL<>null())
|| _msg:='Odpad/koprodukt nie może mieć wskazanej technologii.'@;
   {? VAR.GRUPA='T'
   || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
   || FUN.emsg(_msg)
   ?};
   return('SO')
?};

roundmet(2);
_check:='';

{? ~_import
|| {? _tab.FORMB<>''
   || _tab.WARB:=tpar.calc(_tab.FORMB);
      _tab.WARB:=_tab.WARB $ exec('round_abe','tech_mater',_tab,1)
   ?};
   {? _tab.FORMN<>''
   || _tab.WARN:=tpar.calc(_tab.FORMN);
      _tab.WARN:=_tab.WARN $ exec('round_abe','tech_mater',_tab,1)
   ?};
   {? _tab.DFORMB<>''
   || _tab.DWARB:=tpar.calc(_tab.DFORMB);
      _tab.DWARB:=_tab.DWARB $ exec('round_abe','tech_mater',_tab,0)
   ?};
   {? _tab.DFORMN<>''
   || _tab.DWARN:=tpar.calc(_tab.DFORMN);
      _tab.DWARN:=_tab.DWARN $ exec('round_abe','tech_mater',_tab,0)
   ?}
?};
{? _tab.GRKTM='G'
|| {? _tab.TGRP=null()
   || _msg:='Proszę wypełnić pole \'Grupa\'.'@;
      {? VAR.GRUPA='T'
      || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
      || FUN.emsg(_msg)
      ?};
      _check:='TGRP'
   |? _tab.TGDFLT=null()
   || _msg:='Proszę wypełnić pole \'Indeks\'.'@;
      {? VAR.GRUPA='T'
      || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
      || FUN.emsg(_msg)
      ?};
      _check:='KTM'
   ?}
|| {? _tab.PT=null()
   || _msg:='Proszę wypełnić pole \'Indeks\'.'@;
      {? VAR.GRUPA='T'
      || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
      || FUN.emsg(_msg)
      ?};
      _check:='KTM'
   ?}
?};
{? ~_import & _tab<>TCHMAT
|| {? _tab.SO='O' || _tab.LIMIT:='T' ?}
?};
_ctrl_rodz:=1;
{? ~_import & cur_win(1,1)='REDS'
|| _ctrl_rodz:=0
?};

{? _import
|| _dj:=_tab.NRK().TYP().DJ
|| _dj:=VAR.DJ
?};

{? ~_import & VAR.A_T<>null() & ~exec('sprktm','tech_mater',_tab,VAR.A_T,VAR.GRUPA<>'T',_ctrl_rodz)
|| _check:='KTM'
?};

{? _check='' & _dj='P'
|| _check:={? exec('ae_brutto','tech_mater',_tab,_import) || '' || {? _tab.FORMB<>'' || 'FORMB' || 'WARB' ?} ?}
?};

{? _check='' & _dj='P'
|| _check:={? exec('ae_netto','tech_mater',_tab) || '' || {? _tab.FORMN<>'' || 'FORMN' || 'WARN' ?} ?}
?};

{? _check='' & _dj='D'
|| _check:={? exec('ae_dbrutto','tech_mater',_tab,_import) || '' || {? _tab.DFORMB<>'' || 'DFORMB' || 'DWARB' ?} ?}
?};

{? _check='' & _dj='D'
|| _check:={? exec('ae_dnetto','tech_mater',_tab) || '' || {? _tab.DFORMN<>'' || 'DFORMN' || 'DWARN' ?} ?}
?};

{? _check='' & _dj='D'
|| _ok:=(TKTL.STAT_S='N' | VAR.KOR);
   {? _ok
   || _coef:=_tab.PRZ;
      {? _tab.DJM=null()
      || _msg:='Należy podać jednostkę miary.'@;
         {? VAR.GRUPA='T'
         || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
         || FUN.emsg(_msg)
         ?};
         _check:='DJM'
      |? _coef=0
      || _msg:='Należy podać przelicznik.'@;
         {? VAR.GRUPA='T'
         || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
         || FUN.emsg(_msg)
         ?};
         _check:='PRZ'
      ?};
      {? ~_import
      || _dokl:=exec('round_abe','tech_mater',_tab,1);
      {? _check=''
      || _tab.WARN:=(_tab.DWARN*_coef) $ _dokl;
         _tab.WARB:=(_tab.DWARB*_coef) $ _dokl
      || _tab.WARN:=0;
         _tab.WARB:=0
      ?}
   ?}
   ?}
?};

{? _check=''
|| _txt:=
      {? _tab=TMAT & TMAT.win_edit('?')='REDS'
      || 'ilość'@
      || 'Norma brutto'@
      ?};
   {? _dj='P'
   || {? _tab.WARB=0
      || {? _tab.FORMB='' & _tab.SO='S'
         || FUN.emsg('Proszę wypełnić pole \'%1\'.'@[_txt]);
            _check:='WARB'
         || {? ~_import & FUN.ask('Wartość pola \'%1\' wynosi zero.\nCzy kontynuować?'@[_txt])=0
            ||  _check:={? _tab.FORMB<>'' || 'FORMB' || 'WARB' ?}
            ?}
         ?}
      ?}
   || {? _tab.DWARB=0
      || {? _tab.DFORMB='' & _tab.SO='S'
         || FUN.emsg('Proszę wypełnić pole \'%1\'.'@[_txt]);
            _check:='DWARB'
         || {? ~_import & FUN.ask('Wartość pola \'%1\' wynosi zero.\nCzy kontynuować?'@[_txt])=0
            || _check:={? _tab.DFORMB<>'' || 'DFORMB' || 'DWARB' ?}
            ?}
         ?}
      ?}
   ?}
?};

{? _check='' & _tab=TMAT & _tab.MG<>null()
||
:: W przypadku surowców limitowanych sprawdzenie czy przypisany magazyn paletowy
::(jeżeli tak to wszystkie surowce muszą być z paletowego)
   {? TMAT.LIMIT='T' & TMAT.SO='S'
   || {? exec('chk_mg','tech_mater',_add)=0
      || {? TMAT.MG().PAL='T'
         || _msg:='Surowiec nie może być przypisany do magazynu z obsługą palet.'@
         || _msg:='Surowiec musi być przypisany do magazynu z obsługą palet.'@
         ?};
         {? VAR.GRUPA='T'
         || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
         || FUN.emsg(_msg)
         ?};
         _check:='MG'
      ?}
   ?};

:: Sprawdzam czy magazyn jest typu z obsługą dostaw jeżeli przypięta jest cecha
   {? _check='' & TMAT.DK_C<>null()
   || {? ~(TMAT.MG().TYP*'DOST')
      || _msg:='Surowiec posiada cechę, przypisany magazyn musi być typu: \'%1\''@['DOSTAWY lub DOSTEWI'];
         {? VAR.GRUPA='T'
         || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
         || FUN.emsg(_msg)
         ?};
         _check:='MG'
      ?}
   ?};
:: W przypadku surowców limitowanych sprawdzenie czy przypisany magazyn obsługuje realizację zamówień wewnętrznych
   {? _check='' & TMAT.LIMIT='T' & TMAT.SO='S'
   || {? ~exec('czyMgUprZam','zamsiw_wspolne',TMAT.MG,-1)
      || _msg:='Wybrany magazyn nie jest uprawniony do realizacji zamówień wewnętrznych'@;
         {? VAR.GRUPA='T'
         || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
         || FUN.emsg(_msg)
         ?};
         _check:='MG'
      ?}
   ?}
?};

{? _check='' & _tab=TMAT
||
:: Sprawdzam czy istnieje ten sam surowiec który ma włączone inne 'Ręczne śledzenie dostaw w partii'
:: Nie jest dozwolone istnienie dwóch takich samych surowców z tą własnościa ponieważ
:: podczas rozliczania partii takie same surowce są scalane w jeden zapis
   _mat:=null();
   _my_ref:='';
   {? ~_import & menu_txt()*'P'>0
   || _my_ref:=$TMAT.ref()
   ?};
   _mode_dst:=TMAT.MODE_DST;

   TMAT.cntx_psh();
   M.cntx_psh();
   TMAT.index('NNL');
   TMAT.prefix(TMAT.NRK);
   _mat:=TMAT.PT;

   {? TMAT.first()
   || {!
      |? _msg:='Na liście surowców występuje już ten sam materiał, ale o innym znaczniku: '
               '\'Ręczne śledzenie dostaw w partii\'.'@;
         {? TMAT.PT=_mat & _my_ref<>$TMAT.ref()
         || {? TMAT.MODE_DST<>_mode_dst
            || {? VAR.GRUPA='T'
               || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
               || FUN.emsg(_msg)
               ?};
               _check:='MODE_DST'
            ?}
         ?};
         TMAT.next() & _check=''
      !}
   ?};
   M.cntx_pop();
   TMAT.cntx_pop();
   ~~
?};

:: Dodatkowe kontrole tylko przy modyfikacji zatwierdzonej karty
:: (w innym przypadku kotrola jest podczas zatwierdzania surowców technologii).
{? _check='' & (VAR.KOR | (_tab=TMAT & _import))
|| _mat:=null();
   _my_ref:='';
   {? ~_import & menu_txt()*'P'>0
   || _my_ref:=$TMAT.ref()
   ?};
   _limit:=TMAT.LIMIT;
   _so:=TMAT.SO;

   TMAT.cntx_psh();
   M.cntx_psh();
   TMAT.index('NNL');
   TMAT.prefix(TMAT.NRK);
   _mat:=TMAT.PT;

   {? TMAT.first()
   || {!
      |? {? TMAT.PT=_mat & _my_ref<>$TMAT.ref()
         || {? TMAT.LIMIT<>_limit
            || _msg:='Na liście surowców występuje już ten sam materiał, ale o innym znaczniku: '
                     '\'Jest surowcem limitowanym\'.'@;
               {? VAR.GRUPA='T'
               || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
               || FUN.emsg(_msg)
               ?};
               _check:='LIMIT'
            |? TMAT.SO<>_so
            || _msg:='Na liście surowców występuje już ten sam materiał, ale o innym znaczniku: '
                     '\'Jest odpadem/koproduktem technologicznym\'.'@;
               {? VAR.GRUPA='T'
               || KOMM.add(exec('grp_mod_msg','tech_mater')+_msg)
               || FUN.emsg(_msg)
               ?};
               _check:='SO'
            ?}
         ?};
         TMAT.next() & _check=''
      !}
   ?};
   M.cntx_pop();
   TMAT.cntx_pop();
   ~~
?};

{? _check='' & ~_import & VAR.KOR
|| {? _tab.CAUSE=null()
   || {? VAR.GRUPA='T'
      || KOMM.add(exec('grp_mod_msg','tech_mater')+'Nie podano przyczyny zmiany.'@)
      || FUN.emsg('Podaj przyczynę zmiany.'@)
      ?};
      return('CAUSE')
   ?}
?};

{? _check='' & _tab=TMAT
||
:: Obsługa usług
   _check:=exec('valid_tmat','zl_uslugi')
?};

{? _check='' & _tab=TMAT
||
:: Sprawdzam, czy surowiec przypisany do operacji wariantowej. Dla takiego przypadku nie można dołączać surowców, dla
:: których będzie generowane podzlecenie
   {? _tab.NROP<>null() & (_tab.RKTL<>'' | _tab.DFLT_KTL='T') & _tab.MAG<>'T'
   || _where:=exec('FindAndGet','#table',TOPER,_tab.NROP,,"WHERE",'');
      {? _where<>'W'
      || _check:='MAG';
         FUN.emsg('Surowiec, dla którego ma zostać wygenerowane podzlecenie nie może być przypisany '
                  'do operacji wariantowej, występującej wyłącznie na pierwszym/ostatnim przewodniku zlecenia.'@)
      ?}
   ?}
?};

{? _check='' & ~_import
|| {? ATR.FLAG_ED & ATR.FLAG<>1
   || exec('akcepatr','mat_atr',0,1)
   ?}
?};

_check

\tmattpop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [2010]
:: OPIS: Po akcji popraw dla okna wertowania tabeli TMAT
::  OLD: \tmattpop/tex_tma1.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
:: Aktualizuje dla TMAT pola MODE_DST, NROP na zamiennikach
TCHMAT.cntx_psh();
TCHMAT.index('NSL');
TCHMAT.prefix(VAR.A_KTL,TMAT.ref());
{? TCHMAT.first()
|| {!
   |?
      TCHMAT.MODE_DST:=TMAT.MODE_DST;
::    W przypadku modyfikacji operacji na TMAT, przepisanie na TCHMAT
      TCHMAT.NROP:=TMAT.NROP;
      TCHMAT.put();
      TCHMAT.next()
   !}
?};
TCHMAT.cntx_pop();
{? params_get().env_mater.fields.MAT<>VAR.A_T | params_get().env_mater.fields.KTLMAT<>TMAT.KTL
|| exec('tparpop','tech_param')
?};
:: W przypadku technologii zlecenia usunięcie zlecenia półfabrykatowego albo limitu,
:: gdy zmiana surowca lub usunięcie karty technologicznej
{? params_get().env_mater.fields.MAT<>VAR.A_T & TMAT.NRK().ZL<>null() | (TMAT.KTL=null() & TMAT.DFLT_KTL='N')
||
:: Próbuję usunąć limity
   ZLIM.cntx_psh();
   exec('openmask','zl_common',ZL.ref());
   ZLIM.index('RTMAT');
   ZLIM.prefix($TMAT.ref());
   {? ZLIM.first()
   || {!
      |? ZLIM.cntx_psh(); {? ZLIM.next() || _next:=ZLIM.ref() || _next:=null() ?}; ZLIM.cntx_pop();
         _ok:=exec('ZLIM_del_brut','zl_limit',1,0);
         ZLIM.seek(_next) & _ok>0
      !}
   ?};
   ZLIM.cntx_pop();

   _zl:=exec('is_zl4tmat','zl_link',TMAT.ref());
   {? _zl || exec('zl_usun','zl_head',_zl,,0) ?}
?};
exec('faztchmat','tech_mater');

:: NUCO - uruchomienie aktualizacji karty technologicznej projektowej po zmianie w kartotece surowca
{? VAR.KOR & TMAT.NRK().TYP().TYP='PRJ' & TMAT.NRK().TORW='T' & TMAT.NRK().STAN='T' & TMAT.NRK().ARCH='N'
|| exec('akt_px','qtpp', TMAT.NRK, 'TMAT', $TMAT.ref())
|? VAR.KOR & TMAT.NRK().TYP().TYP='PRD' & TMAT.NRK().TORW='T' & TMAT.NRK().STAN='T' & TMAT.NRK().ARCH='N'
|| exec('akt_px_pro','qtpp', TMAT.NRK, 'TMAT', $TMAT.ref())
?};
~~

\zm_m_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2006]
:: OPIS: Zmiana - usunięcie (dezaktualizacja)/przywrócenie surowca na zatwierdzonej technologii;
::        usuwane (dezaktualizowane) są również zamienniki
::   WE: _a - usuwanie-czy z dialogiem (1/0), przywracanie-czy z dialogiem (3/2)
::      [_b] - data
::      [_c] - przyczyna TTXCAUSE.ref()
::      [_d] - ustawiany znacznik czasowy
::      [_e] - znacznik czasowy przywracanych elementów
::  OLD: \zm_m_usun/tex_tma1.fml
::----------------------------------------------------------------------------------------------------------------------
:: czy tryb przywracania
_przywr:=_a>1;
:: czy z oknem dialogowym
_bDialog:=_a-2*_przywr;

{? var_pres('_b')=type_of(date()) || _dData:=_b || _dData:=date() ?};
{? var_pres('_c')=type_of(null()) || _rCause:=_c || _rCause:=null() ?};
{? var_pres('_d')=type_of(0) || _tmstamp:=_d || _tmstamp:=TKTL.tm_stamp() ?};
{? var_pres('_e')=type_of(0) || _oldstamp:=_e || _oldstamp:=TMAT.MOD_TIME ?};

{? _przywr
||
   {? TMAT.ACT='T'
   || {? _bDialog || FUN.emsg('Element aktywny — nie można go przywracać.'@) ?};
      return()
   |? TMAT.ACT='N' & TMAT.KTL<>null() & TMAT.KTL().ARCH='T'
   || {? _bDialog || FUN.emsg('Karta technologiczna elementu znajduje się w archiwum — nie można go przywracać.'@) ?};
      return()
   ?}
||
   {? TMAT.ACT='N'
   || {? _bDialog || FUN.emsg('Element usunięty — nie można modyfikować.'@) ?};
      return()
   ?}
?};
VAR.KOR:=1;
_win_edit:=TMAT.win_edit('?');

{? _przywr
|| TMAT.win_edit('PRZYWR')
|| TMAT.win_edit('USUN')
?};

{? ~_bDialog
      |
   FUN.ask(
      {? _przywr
      || 'Modyfikacja zatwierdzonej karty technologicznej.'@+'\n\n'+
         'Czy na pewno przywrócić element?'@
      || 'Modyfikacja zatwierdzonej karty technologicznej.'@+'\n\n'+
         'Czy na pewno usunąć (dezaktywować) element?'@
      ?}
   )
|| TTXCAUSE.win_sel('WER');
   TTXCAUSE.actions('WER','','T:d');
   TMAT.OD:=_dData;
   {? _rCause<>null()
   || TMAT.CAUSE:=_rCause
   || TMAT.CAUSE:=exec('ttxcause_default','tech_common')
   ?};
   {? ~_bDialog | TMAT.edit(
         "{? TMAT.CAUSE=null()
          || FUN.info('Podaj przyczynę zmiany.'@);
             'CAUSE'
          || ''
          ?}
         ")
   ||
      {? _bDialog | ~_przywr | TMAT.MOD_TIME=_oldstamp
      || _dData:=TMAT.OD;
         TMAT.ACT:={? _przywr || 'T' || 'N' ?};
::       Sprawdzenie czy po przywróceniu %skład nie przekroczy 100, jeżeli tak to zeruje %skład danego surowca
::         {? _przywr
::         || {? (exec('sum_xjmp','tech_mater',TMAT.NRK)+TMAT.XJMP)>100
::            || TMAT.XJMP:=0;
::               TMAT.DXJMP:=0
::            ?}
::         ?};
         TMAT.USER:=OPERATOR.USER;
         TMAT.MOD_TIME:=_tmstamp;
         {? TMAT.put()
         || _rCause:=TTXCAUSE.ref();
            TCHMAT.index('SL');
            TCHMAT.prefix(TMAT.ref());
            {? TCHMAT.first()
            || {!
               |? exec('zm_c_usun','tech_mater',{? _przywr || 2 || 0 ?},_dData,_rCause,_tmstamp,_oldstamp);
                  TCHMAT.next()
               !}
            ?};
:: NUCO - uruchomienie aktualizacji karty technologicznej projektowej po zmianie w kartotece surowca
            {? TMAT.NRK().TYP().TYP='PRJ' & TMAT.NRK().TORW='T' & TMAT.NRK().STAN='T' & TMAT.NRK().ARCH='N'
            || exec('akt_px','qtpp', TMAT.NRK, 'TMAT', $TMAT.ref())
            |? TMAT.NRK().TYP().TYP='PRD' & TMAT.NRK().TORW='T' & TMAT.NRK().STAN='T' & TMAT.NRK().ARCH='N'
            || exec('akt_px_pro','qtpp', TMAT.NRK, 'TMAT', $TMAT.ref())
            ?}
         ?}
      ?}
   ?}
?};
TMAT.win_edit(_win_edit);
VAR.KOR:=0;
~~


\tmattpar
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Dołącz po w tabeli TMAT. Realizuje następujace funkcje:
::          1. Dołączenie tabeli translacji parametrów do bieżącego surowca
::          2. Ustawienie dodawanego rekordu na ostatniej pozycji w oknie
::          3. Generowanie podzlecenia jeśli został dołączony półfabrykat na technologii zlecenia
::  OLD: \tmattpar/tex_tpar.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

:: NUCO - uruchomienie aktualizacji karty technologicznej projektowej po zmianie w kartotece surowca
{? VAR.KOR & TMAT.NRK().TYP().TYP='PRJ' & TMAT.NRK().TORW='T' & TMAT.NRK().STAN='T' & TMAT.NRK().ARCH='N'
|| exec('akt_px','qtpp', TMAT.NRK, 'TMAT', $TMAT.ref())
|? VAR.KOR & TMAT.NRK().TYP().TYP='PRD' & TMAT.NRK().TORW='T' & TMAT.NRK().STAN='T' & TMAT.NRK().ARCH='N'
|| exec('akt_px_pro','qtpp', TMAT.NRK, 'TMAT', $TMAT.ref())
?};

win_set('cur_row_pos=-1');
{? TMAT.KTL<>null() || exec('trpardol','tech_param') ?}



\whohasme
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [7.53] Uwaga_63
::       AJ PR/WRT/PRODUKCJ/10.20/0015
:: OPIS: "kto mnie ma"
::   WE: _a:
::        - w której technologii użyta jest dana technologia w pozycjach materiałowych?
::          (brak pierwszego param. albo _a=0) praca w kontekście TKTL (VAR.A_KTL)
::        - w której technologii użyty jest dany indeks materiałowy w pozycjach materiałowych?
::          (_a=1) praca w kontekście M albo HELP.REFMAT (ze zleceniami)
::        - w której technologii użyty jest dany indeks materiałowy w pozycjach materiałowych?
::          (_a=2) praca w kontekście M albo HELP.REFMAT (bez zleceń)
::        - w której technologii użyta jest dana technologia w pozycjach materiałowych?
::          (_a=3) bada tylko technologie niearchiwalne, praca w kontekscie TKTL (VAR.A_KTL)
::        - w której technologii użyty jest dany indeks materiałowy w pozycjach materiałowych?
::          (_a=4) praca w kontekście M albo HELP.REFMAT, bez wyświetlania okna wyników
::        - w której technologii użyta jest dana technologia w pozycjach materiałowych?
::          (_a=5) bada tylko technologie niearchiwalne,
::          praca w kontekscie M albo HELP.REFMAT, bez wyswietlania okna wynikow
::        - jak (_a=2) ale wynik przechowany w tabeli __who_t, okno __who_w (_a=6)
::       [_b] - dla _a=6: 1 zwraca strukture - uchwyt tabeli i uchwyt okienka selekcji 0-nie (domyślnie)
::       [_c] - lista akcji, które ukryć
::       [_d] - uwzględnić niepowiązane z technologią limity zlecenia: [0] - nie , 1 - tak (dla _a=6)
::       [_e] - uwzględnić wykorzystanie w zgłoszeniach remontowych: [0] - nie , 1 - tak (dla _a=6)
::   WY: 1 - są powiązania (ważne i badane dla _a=2, _a=3, _a=4, _a=5, _a=6)
::  OLD: \whohasme/tex_tmat.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
_chk_lim:={? var_pres('_d')=type_of(0) || _d || 0 ?};
_chk_rem:={? var_pres('_e')=type_of(0) || _e || 0 ?};
M.cntx_psh(); ZL.cntx_psh();
exec('tktl_cntx_psh','tech_common');
exec('tktl_use','tech_common');
{? HELP.REFMAT<>null() || M.seek(HELP.REFMAT) ?};

_res:=0;
{? _>0
|| {? _a=2 | _a=3 | _a=6 | _a=5
::      _a=1 | _a=2 | _a=3 | _a=4 | _a=5 | _a=6
   || _dalej:=1
   || FUN.error('Błędna wartość parametru formuły \whohasme/tech_mater.'@);
      _dalej:=0
   ?}
|| _dalej:=1
?};
{? _dalej
|| TKTL.cntx_psh(); M.cntx_psh();
   VAR_DEL.delete('TAB1','TAB2','TAB3','__actions');
   __actions:={? var_pres('_c')=type_of('') || _c || '' ?};
   TAB1:=tab_tmp(2,
      'NRK','STRING[50]','Karta technologiczna',
      'WER','STRING[6]','Wersja',
      'TYP','STRING[3]','Typ karty',
      'PKTM','STRING[50]','Indeks produktu',
      'PNAZ','STRING[100]','Nazwa produktu',
      'PJM','STRING[10]','Jednostka miary produktu',
      'OPIS','STRING[60]','Opis',
      'TORW','STRING[1]','Technologia(komplet)/wzorzec/zlecenie(analiza)',
      'TORW_SYM','STRING[20]','Źródło',
      'PFAZ','STRING[10]','Faza produkcji',
      'TMATREF','INTEGER','#TMAT.ref()/#TCHMAT.ref()',
      'TMAT','STRING[16]','$TMAT.ref()/$TCHMAT.ref()',
      'SU','STRING[10]','Sposób użycia',
      'ACT','STRING[1]','Aktywny',
      'WARN','REAL','Norma netto',
      'WARB','REAL','Norma brutto\Ilość',
      'XJMP','REAL','Procentowa zawartość surowca',
      'ZXJM','REAL','Zużycie na serię',
      'ZH','REAL','Zużycie na godzinę',
      'DFLT_KTL','STRING[1]','Technologia domyślna',
      'P_NRK','STRING[50]','Technologia półfabrykatu',
      'P_WER','STRING[6]','Wersja',
      'GR','STRING[1]','Element grupy',
      'ZL_SYM','STRING[20]','Zlecenie',
:: NUCO - sitek - dodanie daty rozpoczęcia zlecenia.
      'ZL_DR','DATE','Data rozpoczęcia zlecenia',
      'ZL_STAN','STRING[1]','Stan zlecenia',
      'KTL_STAN','STRING[1]','Stan karty',
      'KTL_ARCH','STRING[1]','Karta technologiczna archiwalna',
      'STATUS','STRING[20]','Status opisowo (dla karty archiwalna, dla zlecenia stan)',
      'OP_ZL','STRING[60]','Opis zlecenia',
      'IL_SUR','STRING[30]','Łączna ilość surowca do wszystkich przewodników'
   );
   TAB1.fld_attr(,2);
   TAB1.fld_attr('WARN',3);

   TAB1.fld_fml('ZL_STAN','BEFORE_DISPLAY',"{? cur_tab(1,1).ZL_SYM='' || 0 || 1 ?}");
   TAB1.fld_fml('WARN','DISPLAY_FORMAT',"'out_prec=5'");

:: NUCO - procentowy udział surowca w produkcie
   TAB1.fld_attr('XJMP',3);
   TAB1.fld_fml('WARN','DISPLAY_FORMAT',"'out_prec=3'");

:: okna
   _wer1:=TAB1.mk_sel(
      {? _a=0 | _a=3 | _a=5
      || 'Wykorzystanie karty technologicznej w kompletach, kartach, wzorcach, zleceniach'@
      || 'Wykorzystanie surowca w kompletach, kartach, wzorcach, zleceniach'@
      ?},'P',0,'#whohasme_tksl'+$_a,20,10,20,,'U'
   );
::   TAB1.win_fld(_wer1,,'TORW',,,-2,,1,'Technologia/wzorzec/zlecenie'@,,'Technologia/wzorzec/zlecenie(analiza)'@);
   TAB1.win_fld(_wer1,,'TORW_SYM',,,12,,,'Źródło'@);
   TAB1.win_fld(_wer1,,'STATUS',,,-10,,,'Status'@);
   TAB1.win_fld(_wer1,,'NRK',,,-20,,,'Komplet / karta / wzorzec / zlecenie'@+{? _chk_rem>0 || ' / zgłoszenie'@ || ''?});
   TAB1.win_fld(_wer1,,'WER',,,6,,,'Wersja'@);
:: NUCO - sitek - dodanie daty rozpoczęcia zlecenia.
   TAB1.win_fld(_wer1,,'ZL_DR',,,-2,,,'Data rozpoczęcia zlecenia'@);
:: NUCO - PeKa - dodanie indeksu do okna
   TAB1.win_fld(_wer1,,'PKTM',,,20,,,'Indeks produktu'@);
   TAB1.win_fld(_wer1,,'PNAZ',,,50,,,'Nazwa produktu'@+{? _chk_rem>0 || ' / zasobu'@ || '' ?});
   TAB1.win_fld(_wer1,,'PJM',,,5,,,'jm'@);
:: NUCO - WW - dodanie opisu zlecenia, łącznej ilości surowca do wszystkich przewodników zlecenia
   TAB1.win_fld(_wer1,,'OP_ZL',,,15,,,'Opis zlecenia'@);
   TAB1.win_fld(_wer1,,'IL_SUR',,,8,,,'Suma il. surowca'@);
   TAB1.win_fld(_wer1,VAR,'STRING',,,5,,,'Nr operacji'@,,,,1);
   TAB1.win_fld(_wer1,,'PFAZ',,,-10,,,'Faza produkcji'@);
   TAB1.win_fld(_wer1,,'SU',,,-10,,,'Sposób użycia'@);
   TAB1.win_fld(_wer1,,'GR',,,-3,,,'Element grupy technologicznej'@,,'Element grupy technologicznej'@,2,,"'T'","'N'");
   TAB1.win_fld(_wer1,,'WARB',,,15,4,,'Norma brutto / ilość'@);
   TAB1.win_fld(_wer1,,'DFLT_KTL',,,-3,,,'Technologia domyślna'@,,'Technologia domyślna'@,2,,"'T'","'N'");
   TAB1.win_act(_wer1,,'Formuła','Ustaw &technologię domyślną'@@,,'Ustawia domyślną technologię dla półfabrykatu'@,
      "exec('set_default','tech_mater')",,,1,"exec('set_default_bg','tech_mater')","exec('set_default_ag','tech_mater')"
   );
   task_attach('TTE_TEC_DRTS');
   task_attach('TTE_WTE_DRTS');
   TAB1.win_act(_wer1,,'Kolejność');
   TAB1.win_act(_wer1,,'Formuła','Legenda'@@,,,"exec('legenda','color','__TKTL#01#')",,1);
   TAB1.win_act(_wer1,,'Wyświetl',,,,"
      exec('display','tech_mater')
   ");
   TAB1.win_act(_wer1,0,'Rekord',,,,"
      _actions:={? var_pres('__actions')=type_of('') || __actions || '' ?};
      {? M.R='S' || _actions+='TZ' ?};
      cur_tab(1,1).actions(cur_win(1,1),_actions,,1);
      _grayed:='';
      TOPER.cntx_psh();
      TMAT.cntx_psh();
      TACTTLS.cntx_psh();
      {? cur_tab(1,1).SU='N-P-U'@
      || _tmat:=cur_tab(1,1).TMAT;
         TACTTLS.use(form(8+_tmat));
         TACTTLS.clear();
         {? TACTTLS.seek(_tmat)
         || {? TACTTLS.NROP<>null()
            ||
               TOPER.use(ref_name(TACTTLS.NROP));
               {? TACTTLS.NROP().UNROP<>0
               || VAR.STRING:=exec('get_oper_nr','tech_oper',TACTTLS.NROP().UNROP,'\\\\','n')
               ?}
            || VAR.STRING:='-'
            ?}
         ?}
      |? cur_tab(1,1).SU='Surowiec'@
      || _tmat:=cur_tab(1,1).TMAT;
         {? _tmat*'rmgrm'>0
         || VAR.STRING:=''
         |? _tmat*'zlim'>0
         || ZLIM.cntx_psh();
            ZLIM.use(form(8+_tmat));
            ZLIM.clear();
            {? ZLIM.seek(_tmat)
            || {? ZLIM.ZGP<>null()
               || ZGP.cntx_psh();
                  VAR.STRING:=$ZLIM.ZGP().NRP;
                  ZGP.cntx_pop()
               || VAR.STRING:='-'
               ?}
            ?};
            ZLIM.cntx_pop()
         || TMAT.use(form(8+_tmat));
         TMAT.clear();
            {? TMAT.seek(_tmat)
         || {? TMAT.NROP<>null()
            ||
               TOPER.use(ref_name(TMAT.NROP));
               {? TMAT.NROP().UNROP<>0
               || VAR.STRING:=exec('get_oper_nr','tech_oper',TMAT.NROP().UNROP,'\\\\','n')
               ?}
            || VAR.STRING:='-'
            ?}
         ?}
         ?}
      |? cur_tab(1,1).SU='Zamiennik'@
      || _tchmat:=cur_tab(1,1).TMAT;
         TCHMAT.use(form(8+_tchmat));
         TCHMAT.clear();
         {? TCHMAT.seek(_tchmat)
         || {? TCHMAT.NROP<>null()
            ||
               TOPER.use(ref_name(TCHMAT.NROP));
               {? TCHMAT.NROP().UNROP<>0
               || VAR.STRING:=exec('get_oper_nr','tech_oper',TCHMAT.NROP().UNROP,'\\\\','n')
               ?}
            || VAR.STRING:='-'
            ?}
         ?}
      ?};
      {? cur_tab(1,1).sel_size()<1 & (cur_tab(1,1).TORW<>'T' | cur_tab(1,1).SU='N-P-U')
      || _grayed:='T:T'
      ?};
      cur_tab(1,1).actions_grayed(cur_win(1,1),_grayed);
      TMAT.cntx_pop();
      TACTTLS.cntx_pop();
      TOPER.cntx_pop();
      {? cur_tab(1,1).ACT='N'
      || Color.rekprzed('__TKTL#01#02')
      || ''
      ?}
   ");

   TAB1.win_sel(_wer1);

:: indeksy, prefiksy:
   {? _a=0 | _a=3
   || _tktl:=VAR.A_KTL;
      _tktl_s:=exec('FindAndGet','#table',TKTL,VAR.A_KTL,,"TKTL.NRK+' / '+TKTL.WER",'');
      _default:=exec('FindAndGet','#table',TKTL,VAR.A_KTL,,"TKTL.DEFAULT",'N');
      _ktm:=exec('FindAndGet','#table',TKTL,VAR.A_KTL,,"TKTL.KTM",null());

::      TMAT.index('KTAN');
::      TMAT.prefix(_ktm,'T');
      TMAT.index('PAN');
      TMAT.prefix($VAR.A_KTL,'T');
::      TCHMAT.index('KTAN');
::      TCHMAT.prefix(_ktm,'T');
      TCHMAT.index('PAN');
      TCHMAT.prefix($VAR.A_KTL,'T');
      TAB1.hdr_sel(': '+_tktl_s);
      _qq:=M.ref;
::    przetwarzanie
      {? TMAT.first()
      || {!
         |? {? TMAT.NRK().ARCH='N' & (TMAT.RKTL=$_tktl | (_default='T' & TMAT.DFLT_KTL='T'))
            || TAB1.SU:='Surowiec'@;
               TAB1.GR:={? TMAT.GRKTM='G' || 'T' || 'N' ?};
               TAB1.ACT:=TMAT.ACT;
               TAB1.NRK:=TMAT.NRK().NRK;
               TAB1.WER:=TMAT.NRK().WER;
               TAB1.TYP:=TMAT.NRK().TYP().TYP;
               TAB1.PKTM:=TMAT.NRK().KTM().KTM;
               TAB1.PNAZ:=M.N;
               TAB1.PJM:=M.J().KOD;
               TAB1.OPIS:=TMAT.NRK().OPIS;
               TAB1.TORW:=TMAT.NRK().TORW;
               TAB1.TORW_SYM:=exec('torw_sym','tech_mater',TAB1.TORW,TAB1.TYP);
               {? TMAT.PFAZ<>null() || TAB1.PFAZ:=TMAT.PFAZ().KOD || TAB1.PFAZ:='' ?};
               TAB1.TMATREF:=#TMAT.ref();
               TAB1.TMAT:=$TMAT.ref();
               TAB1.WARN:=TMAT.WARN;
               TAB1.WARB:=TMAT.WARB;
:: NUCO - procentowa zawartość surowca
               TAB1.XJMP:=TMAT.XJMP;
               TAB1.DFLT_KTL:=TMAT.DFLT_KTL;
               {? TMAT.RKTL<>''
               || TAB1.P_NRK:=exec('FindAndGet','#table',TKTL,TMAT.RKTL,,"NRK",'');
                  TAB1.P_WER:=exec('FindAndGet','#table',TKTL,TMAT.RKTL,,"WER",'')
               || TAB1.P_NRK:='';
                  TAB1.P_WER:=''
               ?};
               TAB1.KTL_STAN:=TMAT.NRK().STAN;
               TAB1.KTL_ARCH:=TMAT.NRK().ARCH;
               {? TMAT.NRK().ZL<>null()
               || TAB1.ZL_SYM:=TMAT.NRK().ZL().SYM;
:: NUCO - sitek - dodanie daty rozpoczęcia zlecenia.
                  TAB1.ZL_DR:=TMAT.NRK().ZL().STARTD;
                  TAB1.ZL_STAN:=TMAT.NRK().ZL().STAN
               || TAB1.ZL_SYM:='';
                  TAB1.ZL_DR:=date(0,0,0);
                  TAB1.ZL_STAN:=''
               ?};
               TAB1.STATUS:=exec('status','tech_mater',TAB1.ZL_STAN,TAB1.KTL_STAN,TAB1.TORW);
               TAB1.add()
            ?};
            TMAT.next()
         !}
      ?};
      {? TCHMAT.first()
      || {!
         |? {? TCHMAT.NRK().ARCH='N' & (TCHMAT.RKTL=$_tktl | (_default='T' & TCHMAT.DFLT_KTL='T'))
            || TAB1.SU:='Zamiennik'@;
               TAB1.GR:={? TCHMAT.GRKTM='G' || 'T' || 'N' ?};
               TAB1.ACT:=TCHMAT.ACT;
               TAB1.NRK:=TCHMAT.NRK().NRK;
               TAB1.WER:=TCHMAT.NRK().WER;
               TAB1.TYP:=TCHMAT.NRK().TYP().TYP;
               TAB1.PKTM:=TCHMAT.NRK().KTM().KTM;
               TAB1.PNAZ:=M.N;
               TAB1.PJM:=M.J().KOD;
               TAB1.OPIS:=TCHMAT.NRK().OPIS;
               TAB1.TORW:=TCHMAT.NRK().TORW;
               TAB1.TORW_SYM:=exec('torw_sym','tech_mater',TAB1.TORW,TAB1.TYP);
               {? TCHMAT.SRC().PFAZ<>null() || TAB1.PFAZ:=TCHMAT.SRC().PFAZ().KOD || TAB1.PFAZ:='' ?};
               TAB1.TMATREF:=#TCHMAT.ref();
               TAB1.TMAT:=$TCHMAT.ref();
               TAB1.WARN:=TCHMAT.WARN;
               TAB1.WARB:=TCHMAT.WARB;
:: NUCO - procentowa zawartość surowca
               TAB1.XJMP:=TCHMAT.XJMP;
               TAB1.DFLT_KTL:=TCHMAT.DFLT_KTL;
               {? TCHMAT.RKTL<>''
               || TAB1.P_NRK:=exec('FindAndGet','#table',TKTL,TCHMAT.RKTL,,"NRK",'');
                  TAB1.P_WER:=exec('FindAndGet','#table',TKTL,TCHMAT.RKTL,,"WER",'')
               || TAB1.P_NRK:='';
                  TAB1.P_WER:=''
               ?};
               TAB1.KTL_STAN:=TCHMAT.NRK().STAN;
               TAB1.KTL_ARCH:=TCHMAT.NRK().ARCH;
               {? TCHMAT.NRK().ZL<>null()
               || TAB1.ZL_SYM:=TCHMAT.NRK().ZL().SYM;
:: NUCO - sitek - dodanie daty rozpoczęcia zlecenia.
                  TAB1.ZL_DR:=TCHMAT.NRK().ZL().STARTD;
                  TAB1.ZL_STAN:=TCHMAT.NRK().ZL().STAN
               || TAB1.ZL_SYM:='';
                  TAB1.ZL_DR:=date(0,0,0);
                  TAB1.ZL_STAN:=''
               ?};
               TAB1.STATUS:=exec('status','tech_mater',TAB1.ZL_STAN,TAB1.KTL_STAN,TAB1.TORW);
               TAB1.add()
            ?};
            TCHMAT.next()
         !}
      ?}
   |? _a>0
   || _pt:=M.ref();
      TMAT.index('KTAN');
      TMAT.prefix(_pt,'T');
      TCHMAT.index('KTAN');
      TCHMAT.prefix(_pt,'T');
      TACTTLS.index('KTAN');
      TACTTLS.prefix(_pt,'T');
      TAB1.hdr_sel(': '+M.KTM);

::    przetwarzanie
      {? TMAT.first()
      || {!
         |? {? (_a<>3 & _a<>5) | TMAT.NRK().ARCH='N'
            || TAB1.SU:='Surowiec'@;
               TAB1.GR:='N';
               TAB1.ACT:=TMAT.ACT;
               TAB1.NRK:=TMAT.NRK().NRK;
               TAB1.WER:=TMAT.NRK().WER;
               TAB1.TYP:=TMAT.NRK().TYP().TYP;
               TAB1.PKTM:=TMAT.NRK().KTM().KTM;
               TAB1.PNAZ:=M.N;
               TAB1.PJM:=M.J().KOD;
               TAB1.OPIS:=TMAT.NRK().OPIS;
               TAB1.TORW:=TMAT.NRK().TORW;
               TAB1.TORW_SYM:=exec('torw_sym','tech_mater',TAB1.TORW,TAB1.TYP);
               {? TMAT.PFAZ<>null() || TAB1.PFAZ:=TMAT.PFAZ().KOD || TAB1.PFAZ:='' ?};
               TAB1.TMATREF:=#TMAT.ref();
               TAB1.TMAT:=$TMAT.ref();
               TAB1.WARN:=TMAT.WARN;
               TAB1.WARB:=TMAT.WARB;
:: NUCO - łączna ilość surowca, opis zlecenia
               TAB1.OP_ZL:={? TMAT.NRK().ZL().OPIS<>'' || TMAT.NRK().ZL().OPIS || '-' ?};
               {? TAB1.TORW_SYM='Zlecenie'
               || {? TMAT.NRK().ZL().SYM<>''
                  || _il_sur:=sql('select sum(ZLIM.LIL) as SUM_LIL from @ZLIM
                                   where ZLEC=\':_a\' and KTM=\':_b\' order by 1',$TMAT.NRK().ZL,$_pt);
                     {? _il_sur.first()
                     || TAB1.IL_SUR:=form(_il_sur.SUM_LIL,,4)
                     || TAB1.IL_SUR:='0,0000'
                     ?};
                     &_il_sur
                  || TAB1.IL_SUR:='0,0000'
                  ?}
               || TAB1.IL_SUR:='0,0000'
               ?};
:: NUCO - procentowa zawartość surowca
               TAB1.XJMP:=TMAT.XJMP;
               TAB1.DFLT_KTL:=TMAT.DFLT_KTL;
               {? TMAT.RKTL<>''
               || TAB1.P_NRK:=exec('FindAndGet','#table',TKTL,TMAT.RKTL,,"NRK",'');
                  TAB1.P_WER:=exec('FindAndGet','#table',TKTL,TMAT.RKTL,,"WER",'')
               || TAB1.P_NRK:='';
                  TAB1.P_WER:=''
               ?};
               TAB1.KTL_STAN:=TMAT.NRK().STAN;
               TAB1.KTL_ARCH:=TMAT.NRK().ARCH;
               {? TMAT.NRK().ZL<>null()
               || TAB1.ZL_SYM:=TMAT.NRK().ZL().SYM;
:: NUCO - sitek - dodanie daty rozpoczęcia zlecenia.
               TAB1.ZL_DR:=TMAT.NRK().ZL().STARTD;
                  TAB1.ZL_STAN:=TMAT.NRK().ZL().STAN
               || TAB1.ZL_SYM:='';
                 TAB1.ZL_DR:=date(0,0,0);
                  TAB1.ZL_STAN:=''
               ?};
               TAB1.STATUS:=exec('status','tech_mater',TAB1.ZL_STAN,TAB1.KTL_STAN,TAB1.TORW);
               TAB1.add()
            ?};
            TMAT.next()
         !}
      ?};
      {? TCHMAT.first()
      || {!
         |? {? (_a<>3 & _a<>5) | TCHMAT.NRK().ARCH='N'
            || TAB1.SU:='Zamiennik'@;
               TAB1.GR:='N';
               TAB1.ACT:=TCHMAT.ACT;
               TAB1.NRK:=TCHMAT.NRK().NRK;
               TAB1.WER:=TCHMAT.NRK().WER;
               TAB1.TYP:=TCHMAT.NRK().TYP().TYP;
               TAB1.PKTM:=TCHMAT.NRK().KTM().KTM;
               TAB1.PNAZ:=M.N;
               TAB1.PJM:=M.J().KOD;
               TAB1.OPIS:=TCHMAT.NRK().OPIS;
               TAB1.TORW:=TCHMAT.NRK().TORW;
               TAB1.TORW_SYM:=exec('torw_sym','tech_mater',TAB1.TORW,TAB1.TYP);
               {? TCHMAT.SRC().PFAZ<>null() || TAB1.PFAZ:=TCHMAT.SRC().PFAZ().KOD || TAB1.PFAZ:='' ?};
               TAB1.TMATREF:=#TCHMAT.ref();
               TAB1.TMAT:=$TCHMAT.ref();
               TAB1.WARN:=TCHMAT.WARN;
:: NUCO - procentowa zawartość surowca
               TAB1.XJMP:=TCHMAT.XJMP;
               TAB1.WARB:=TCHMAT.WARB;
               TAB1.DFLT_KTL:=TCHMAT.DFLT_KTL;
               {? TCHMAT.RKTL<>''
               || TAB1.P_NRK:=exec('FindAndGet','#table',TKTL,TCHMAT.RKTL,,"NRK",'');
                  TAB1.P_WER:=exec('FindAndGet','#table',TKTL,TCHMAT.RKTL,,"WER",'')
               || TAB1.P_NRK:='';
                  TAB1.P_WER:=''
               ?};
               TAB1.KTL_STAN:=TCHMAT.NRK().STAN;
               TAB1.KTL_ARCH:=TCHMAT.NRK().ARCH;
               {? TCHMAT.NRK().ZL<>null()
               || TAB1.ZL_SYM:=TCHMAT.NRK().ZL().SYM;
:: NUCO - sitek - dodanie daty rozpoczęcia zlecenia.
                  TAB1.ZL_DR:=TCHMAT.NRK().ZL().STARTD;
                  TAB1.ZL_STAN:=TCHMAT.NRK().ZL().STAN
               || TAB1.ZL_SYM:='';
                  TAB1.ZL_DR:=date(0,0,0);
                  TAB1.ZL_STAN:=''
               ?};
               TAB1.STATUS:=exec('status','tech_mater',TAB1.ZL_STAN,TAB1.KTL_STAN,TAB1.TORW);
               TAB1.add()
            ?};
            TCHMAT.next()
         !}
      ?};
      {? TACTTLS.first()
      || {!
         |? {? (_a<>3 & _a<>5) | TACTTLS.NRK().ARCH='N'
            || TAB1.SU:='N-P-U'@;
               TAB1.GR:='N';
               TAB1.ACT:=TACTTLS.ACT;
               TAB1.NRK:=TACTTLS.NRK().NRK;
               TAB1.WER:=TACTTLS.NRK().WER;
               TAB1.TYP:=TACTTLS.NRK().TYP().TYP;
               TAB1.PKTM:=TACTTLS.NRK().KTM().KTM;
               TAB1.PNAZ:=M.N;
               TAB1.PJM:=M.J().KOD;
               TAB1.OPIS:=TACTTLS.NRK().OPIS;
               TAB1.TORW:=TACTTLS.NRK().TORW;
               TAB1.TORW_SYM:=exec('torw_sym','tech_mater',TAB1.TORW,TAB1.TYP);
               {? TACTTLS.PFAZ<>null() || TAB1.PFAZ:=TACTTLS.PFAZ().KOD || TAB1.PFAZ:='' ?};
               TAB1.TMATREF:=#TACTTLS.ref();
               TAB1.TMAT:=$TACTTLS.ref();
               TAB1.WARB:=TACTTLS.ILE;
               TAB1.WARN:=TACTTLS.ILE;
               TAB1.ZH:=TACTTLS.ZH;
               TAB1.ZXJM:=TACTTLS.ZXJM;
               TAB1.DFLT_KTL:='N';

               TAB1.P_NRK:='';
               TAB1.P_WER:='';

               TAB1.KTL_STAN:=TACTTLS.NRK().STAN;
               TAB1.KTL_ARCH:=TACTTLS.NRK().ARCH;
               {? TACTTLS.NRK().ZL<>null()
               || TAB1.ZL_SYM:=TACTTLS.NRK().ZL().SYM;
:: NUCO - sitek - dodanie daty rozpoczęcia zlecenia.
                  TAB1.ZL_DR:=TACTTLS.NRK().ZL().STARTD;
                  TAB1.ZL_STAN:=TACTTLS.NRK().ZL().STAN
               || TAB1.ZL_SYM:='';
                  TAB1.ZL_DR:=date(0,0,0);
                  TAB1.ZL_STAN:=''
               ?};
               TAB1.STATUS:=exec('status','tech_mater',TAB1.ZL_STAN,TAB1.KTL_STAN,TAB1.TORW);
               TAB1.add()
            ?};
            TACTTLS.next()
         !}
      ?};
      {? _a=6 & _chk_lim>0
      ||
::       Surowce do zleceń bez powiązania z technologią
::       Przetwarzane surowce do zleceń niezamkniętych, niepowiązanych z surowcem technologicznym lub będących korekatmi
         _sql:=
            'select
               M.KTM as KTM,
               M.N as N,
               JM.KOD as JM,
               ZL.OPIS as OPIS,
               PFAZ.KOD as PFAZ,
               ZLIM.LIL as LIL,
               ZL.SYM as ZL_SYM,
               ZL.STAN as ZL_STAN,
               ZLIM.REFERENCE as REF,
               ZLIM.KOR2 as KOR2
            from @ZLIM
               join ZL using (ZLIM.ZLEC, ZL.REFERENCE)
               left join M using (ZL.KTM, M.REFERENCE)
               left join PFAZ using (ZLIM.PFAZ, PFAZ.REFERENCE)
               join JM using (M.J, JM.REFERENCE)
            where
               ZLIM.KTM=:_a
               and ZL.STAN<>\'Z\'
               and (ZLIM.TMAT is null or (ZLIM.KOR2<>0 and ZLIM.KOR=0))
         ';
         {? var_pres('_zlim_tab')>100 || obj_del(_zlim_tab) ?};
         _zlim_tab:=sql(_sql,_pt);
         {? _zlim_tab.first()
         || {!
            |?
               TAB1.SU:='Surowiec'@;
               TAB1.GR:='N';
               TAB1.ACT:='T';
               TAB1.NRK:=_zlim_tab.ZL_SYM;
               TAB1.WER:='';
               TAB1.TYP:='';
               TAB1.PKTM:=_zlim_tab.KTM;
               TAB1.PNAZ:=_zlim_tab.N;
               TAB1.PJM:=_zlim_tab.JM;
               TAB1.OPIS:=_zlim_tab.OPIS;
               TAB1.TORW:='Z';
               TAB1.TORW_SYM:=exec('torw_sym','tech_mater',TAB1.TORW,TAB1.TYP);
               TAB1.PFAZ:=_zlim_tab.PFAZ;
               TAB1.TMAT:=_zlim_tab.REF;
               TAB1.TMATREF:=exec('FindAndGet','#table',ZLIM,TAB1.TMAT,,"#ref",0);
               _ilosc:={? _zlim_tab.KOR2<>0 || exec('sum_il','zl_limit',TAB1.TMAT) || _zlim_tab.LIL ?};
               TAB1.WARN:=_ilosc;
               TAB1.WARB:=_ilosc;
               TAB1.DFLT_KTL:='';
               TAB1.P_NRK:='';
               TAB1.P_WER:='';
               TAB1.KTL_STAN:='';
               TAB1.KTL_ARCH:='';
               TAB1.ZL_SYM:=_zlim_tab.ZL_SYM;
               TAB1.ZL_STAN:=_zlim_tab.ZL_STAN;
               TAB1.STATUS:=exec('status','tech_mater',TAB1.ZL_STAN,TAB1.KTL_STAN,TAB1.TORW);
               TAB1.add();
               _zlim_tab.next()
            !}
         ?}
      ?};
::
      {? _a=6 & _chk_rem>0
      ||
::       Surowce do zgłoszeń remontowych
         {? var_pres('_rem_tab')>100 || obj_del(_rem_tab) ?};
         _rem_tab:=exec('chk_m4rem','material',_pt);
         {? var_pres('_rem_tab')>100 & _rem_tab.first()
         || {!
            |?
               TAB1.SU:='Surowiec'@;
               TAB1.GR:='N';
               TAB1.ACT:='T';
               TAB1.NRK:=_rem_tab.REM_SYM;
               TAB1.WER:='';
               TAB1.TYP:='';
               TAB1.PKTM:=_rem_tab.ZAS_SYM;
               TAB1.PNAZ:=_rem_tab.ZAS_NAZ;
               TAB1.PJM:='';
               TAB1.OPIS:=_rem_tab.TYTUL;
               TAB1.TORW:='R';
               TAB1.TORW_SYM:='Zgłoszenie remontowe'@;
               TAB1.PFAZ:='';
               TAB1.TMAT:=_rem_tab.REF;
               TAB1.TMATREF:=exec('FindAndGet','#table',REM_GRM,TAB1.TMAT,,"#ref",0);
               _ilosc:=_rem_tab.IL;
               TAB1.WARN:=_ilosc;
               TAB1.WARB:=_ilosc;
               TAB1.DFLT_KTL:='';
               TAB1.P_NRK:='';
               TAB1.P_WER:='';
               TAB1.KTL_STAN:='';
               TAB1.KTL_ARCH:='';
               TAB1.ZL_SYM:=_rem_tab.REM_SYM;
               TAB1.ZL_STAN:='';
               TAB1.STATUS:=_rem_tab.REM_STAN;
               TAB1.add();
               _rem_tab.next()
            !}
         ?}
      ?}
   ?};

   {? _a>0 & _a<>3
   || _gr:=sql('select TTGP.GR as TTG from TTGP where TTGP.PT=\':_a\'', $_pt);

      {? type_of(_gr)=type_of(~~)
      || exec('err_sql','#sql');
         TKTL.cntx_pop(); M.cntx_pop();
         exec('tktl_cntx_pop','tech_common');
         ZL.cntx_pop(); M.cntx_pop();
         return(0)
      ?};

      TMAT.index('GN');
      TCHMAT.index('GN');
      {? _gr.first()
      || {!
         |?
            TMAT.prefix(BIT.sqlint(_gr.TTG));
            {? TMAT.first()
            || {!
               |? TAB1.SU:='Surowiec'@;
                  TAB1.GR:='T';
                  TAB1.ACT:=TMAT.ACT;
                  TAB1.NRK:=TMAT.NRK().NRK;
                  TAB1.WER:=TMAT.NRK().WER;
                  TAB1.TYP:=TMAT.NRK().TYP().TYP;
                  TAB1.PKTM:=TMAT.NRK().KTM().KTM;
                  TAB1.PNAZ:=M.N;
                  TAB1.PJM:=M.J().KOD;
                  TAB1.TORW:=TKTL.TORW;
                  TAB1.TORW_SYM:=
                     {? TAB1.TORW='T' & TAB1.TYP=exec('k_res_string','tech_head')
                     || 'Komplet'@
                     |? TAB1.TORW='T'
                     || 'Technologia'@
                     |? TAB1.TORW='W'
                     || 'Wzorzec'@
                     || 'Zlecenie'@
                     ?};
                  {? TMAT.PFAZ<>null() || TAB1.PFAZ:=TMAT.PFAZ().KOD || TAB1.PFAZ:='' ?};
                  TAB1.TMATREF:=#TMAT.ref();
                  TAB1.TMAT:=$TMAT.ref();
                  TAB1.WARN:=TMAT.WARN;
                  TAB1.WARB:=TMAT.WARB;
:: NUCO - łączna ilość surowca, opis zlecenia
                  TAB1.OP_ZL:={? TMAT.NRK().ZL().OPIS<>'' || TMAT.NRK().ZL().OPIS || '-' ?};
                  {? TAB1.TORW_SYM='Zlecenie'
                  || {? TMAT.NRK().ZL().SYM<>''
                     || _il_sur:=sql('select sum(ZLIM.LIL) as SUM_LIL from @ZLIM
                                      where ZLEC=\':_a\' and KTM=\':_b\' order by 1',$TMAT.NRK().ZL,$_pt);
                        {? _il_sur.first()
                        || TAB1.IL_SUR:=form(_il_sur.SUM_LIL,,4)
                        || TAB1.IL_SUR:='0,0000'
                        ?};
                        &_il_sur
                     || TAB1.IL_SUR:='0,0000'
                     ?}
                  || TAB1.IL_SUR:='0,0000'
                  ?};
:: NUCO - procentowa zawartość surowca
                  TAB1.XJMP:=TMAT.XJMP;
                  TAB1.DFLT_KTL:=TMAT.DFLT_KTL;
                  {? TMAT.RKTL<>''
                  || TAB1.P_NRK:=exec('FindAndGet','#table',TKTL,TMAT.RKTL,,"NRK",'');
                     TAB1.P_WER:=exec('FindAndGet','#table',TKTL,TMAT.RKTL,,"WER",'')
                  || TAB1.P_NRK:='';
                     TAB1.P_WER:=''
                  ?};
                  TAB1.add();
                  TMAT.next()
               !}
            ?};
            TCHMAT.prefix(BIT.sqlint(_gr.TTG));
            {? TCHMAT.first()
            || {!
               |? TAB1.SU:='Zamiennik'@;
                  TAB1.GR:='T';
                  TAB1.ACT:=TCHMAT.ACT;
                  TAB1.NRK:=TCHMAT.NRK().NRK;
                  TAB1.WER:=TCHMAT.NRK().WER;
                  TAB1.TYP:=TCHMAT.NRK().TYP().TYP;
                  TAB1.PKTM:=TCHMAT.NRK().KTM().KTM;
                  TAB1.PNAZ:=M.N;
                  TAB1.PJM:=M.J().KOD;
                  TAB1.TORW:=TKTL.TORW;
                  TAB1.TORW_SYM:=
                     {? TAB1.TORW='T' & TAB1.TYP=exec('k_res_string','tech_head')
                     || 'Komplet'@
                     |? TAB1.TORW='T'
                     || 'Technologia'@
                     |? TAB1.TORW='W'
                     || 'Wzorzec'@
                     || 'Zlecenie'@
                     ?};
                  {? TCHMAT.SRC().PFAZ<>null() || TAB1.PFAZ:=TCHMAT.SRC().PFAZ().KOD || TAB1.PFAZ:='' ?};
                  TAB1.TMATREF:=#TCHMAT.ref();
                  TAB1.TMAT:=$TCHMAT.ref();
                  TAB1.WARN:=TCHMAT.WARN;
                  TAB1.WARB:=TCHMAT.WARB;
:: NUCO - procentowa zawartość surowca
                  TAB1.XJMP:=TCHMAT.XJMP;
                  TAB1.DFLT_KTL:=TCHMAT.DFLT_KTL;
                  {? TCHMAT.RKTL<>''
                  || TAB1.P_NRK:=exec('FindAndGet','#table',TKTL,TCHMAT.RKTL,,"NRK",'');
                     TAB1.P_WER:=exec('FindAndGet','#table',TKTL,TCHMAT.RKTL,,"WER",'')
                  || TAB1.P_NRK:='';
                     TAB1.P_WER:=''
                  ?};
                  TAB1.add();
                  TCHMAT.next()
               !}
            ?};
            _gr.next()
         !}
      ?}
   ?};

   {? _a=3
   ||
      {? VAR.GRUPA='T'
      || {? TAB1.first()
         || {!
            |? KOMM.add('Technologia: %1 jest używana w: %2 / %3'@[_tktl_s,TAB1.NRK,TAB1.WER],14);
               TAB1.next()
            !}
         ?}
      || {? TAB1.first()
         ||
            _msg:='Karta jest używana jako karta półfabrykatowa w innych technologiach.\n'
                  'Czy na pewno przesunąć ją do archiwum?\n\n'
                  'Karty na produkty, które używają archiwalnych kart półfabrykatowych nie mogą\n'
                  'być używane do tworzenia zleceń złożonych.'@;
            _choice:=FUN.choice(_msg,,'Szczegóły'@,'Przesuń do archiwum'@);
            {? _choice=1
            || TAB1.select()
            |? _choice=2
            ||
::             Jesli na sile chce przesunac do archiwum to czyszcze tabele powiazan
::             zeby reszta kodu myslala ze brak powiazan
               TAB1.erase()
            ?}
         ?}
      ?}

   |? _a=6
   ||
      {? _b || __who_t:=TAB1 || exec('tab2tab','#table',TAB1,'__who_t') ?};
      {? _b || __who_w:=_wer1 ?}
   |? (_a<>4 & _a<>5)
   ||
      {? TAB1.first()
      || TAB1.select()
      ||
::       Uwaga: w przypadku konieczności wyłączenia komunikatu powołać się na zadanie: 1509100617000000
         FUN.info('Brak powiązań z technologią, wzorcem, zleceniem lub kompletem.'@)
      ?}
   ?};
::   _res:={? _a<>5 || TAB1.first() ?};
   _res:=TAB1.first();
   obj_del(TAB1);
   TMAT.clear();TCHMAT.clear();TACTTLS.clear();
   TKTL.cntx_pop(); M.cntx_pop();
   VAR_DEL.delete('TAB1','TAB2','TAB3','__actions')
?};

M.cntx_pop(); ZL.cntx_pop();
exec('tktl_cntx_pop','tech_common');
_res

