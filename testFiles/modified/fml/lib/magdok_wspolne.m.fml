:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: magdok_wspolne.fml
:: Utworzony: 24.06.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Obsługa dokumentów magazynowych - formuły wspólne
::======================================================================================================================


\ctrl_wym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: kontrola ilosci dla wymiarow podczas akceptacji dokumentu/reorganizacji
::   WE: _a - 0-ND 1-DK_LN
::       _b - [0]/1 - operacja grupowa (dla _a=0)
::   WY: 1-jest OK 0-nie jest dobrze
::  OLD: \ctrl_wym/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_group:={? ~_a & var_pres('_b')=type_of(0) || _b || 0 ?};

_ildkl:=tab_tmp(4,'MAT','STRING[16]',''
         ,'EANL','STRING[16]',''
         ,'TW','DATE',''
         ,'SCEAN','STRING[128]',''
         ,'ILE','REAL',''
::NUCO - pozycja dokumentu magazynowego
         ,'P','INTEGER','');
_wyn:=1;
_data:=date();

{? ~_a
|| DK.cntx_psh();
   DK_L.cntx_psh();
   DK.index('DOKMAG');
   DK.prefix(ND.ref());
   {? DK.first()
   || {? ND.D>_data || _data:=ND.D ?};
      _mag:=DK.N().MAG;
      _aut:=DK.N().MAG().SP_REANL<>'N';
      _ptwmob:=exec('stND2EANN','magazyn_mobi')='A';
      {!
      |? {? DK.M().RODZ='T' & (~_ptwmob | DK.IL=DK.IL_PT)
         || _scean:={? DK.SCEAN='' || 'brak' || DK.SCEAN ?};
            DK_L.index('DK');
            DK_L.prefix(DK.ref(),null());
            {? DK_L.first()
            || {!
               |? _ildkl.clear();
                  {? _ildkl.find_key($DK.M,$DK_L.LOK,DK_L.TW,_scean)
                  || _ildkl.ILE+=DK_L.IL;
                     _ildkl.put(1)
                  || _ildkl.blank();
                     _ildkl.MAT:=$DK.M;
                     _ildkl.EANL:=$DK_L.LOK;
                     _ildkl.TW:=DK_L.TW;
                     _ildkl.SCEAN:=_scean;
                     _ildkl.ILE:=DK_L.IL;
                     _ildkl.add(1)
                  ?};
                  DK_L.next()
               !}
            || _ildkl.clear();
               {? _ildkl.find_key($DK.M,'brak',date(0,0,0),_scean)
               || _ildkl.ILE+=DK.IL;
                  _ildkl.put(1)
               || _ildkl.blank();
                  _ildkl.MAT:=$DK.M;
                  _ildkl.EANL:='brak';
                  _ildkl.TW:=date(0,0,0);
                  _ildkl.SCEAN:=_scean;
                  _ildkl.ILE:=DK.IL;
                  _ildkl.add(1)
               ?}
            ?}
         ?};
         DK.next()
      !}
   ?};
   DK.cntx_pop();
   DK_L.cntx_pop();
   _ildkl.clear();
::NUCO - pozycja dokumentu magazynowego
   _pozDK:=0;
   {? _ildkl.first()
   || {!
      |? _scean:={? _ildkl.SCEAN='brak' || '' || _ildkl.SCEAN ?};
         _stn:={? _ildkl.EANL='brak' & _aut
               || exec('stnilwym','magazyn_stan',_data,_mag,exec('FindAndGet','#table',M,_ildkl.MAT,,,null())
                       ,null(),date(0,0,0),_scean)
               |? _ildkl.EANL='brak' & ~_aut
               || 0
               || exec('stnilwym','magazyn_stan',_data,_mag,exec('FindAndGet','#table',M,_ildkl.MAT,,,null())
                       ,exec('FindAndGet','#table',EANL,_ildkl.EANL,,,null()),_ildkl.TW,_scean)
               ?};
::NUCO - pozycja dokumentu magazynowego
         {? _ildkl.ILE>_stn
         || _pozDK:=_ildkl.P;
            _wyn:=0
         ?};
         _wyn & _ildkl.next()
      !}
   ?};
   {? ~_wyn
   || {? _group
      || _txt:='Wymagana poprawa ilości wg wymiarów na pozycjach dokumentu.'@;
         exec('add_kom','#message',ND.SYM,5,gsub(_txt,'\n',' '))
      || _txt:='Wymagana poprawa ilości wg wymiarów na pozycjach dokumentu. Pozycja: %1'@[$_pozDK];
         exec('add_kom','#message',_txt,2)
      ?}
   ?}
|| DK_L.cntx_psh();
   DK_L.index('DK_LN');
   DK_L.prefix('Z',DK_LN.ref());
   {? DK_L.first()
   || {? DK_LN.D>_data || _data:=DK_LN.D ?};
      _mag:=DK_L.DK_LN().MG;
      _aut:=DK_L.DK_LN().MG().SP_REANL<>'N';
      {!
      |? _scean:={? DK_L.SCEAN='' || 'brak' || DK_L.SCEAN ?};
         _ildkl.clear();
         {? _ildkl.find_key($DK_L.M,$DK_L.LOK,DK_L.TW,_scean)
         || _ildkl.ILE+=DK_L.IL;
            _ildkl.put(1)
         || _ildkl.blank();
            _ildkl.MAT:=$DK_L.M;
            _ildkl.EANL:=$DK_L.LOK;
            _ildkl.TW:=DK_L.TW;
            _ildkl.SCEAN:=_scean;
            _ildkl.ILE:=DK_L.IL;
            _ildkl.add(1)
         ?};
         DK_L.next()
      !}
   ?};
   DK_L.cntx_pop();
   _ildkl.clear();
   {? _ildkl.first()
   || {!
      |? _scean:={? _ildkl.SCEAN='brak' || '' || _ildkl.SCEAN ?};
         _stn:={? _ildkl.EANL='brak' & _aut
               || exec('stnilwym','magazyn_stan',_data,_mag,exec('FindAndGet','#table',M,_ildkl.MAT,,,null())
                       ,null(),date(0,0,0),_scean)
               |? _ildkl.EANL='brak' & ~_aut
               || 0
               || exec('stnilwym','magazyn_stan',_data,_mag,exec('FindAndGet','#table',M,_ildkl.MAT,,,null())
                       ,exec('FindAndGet','#table',EANL,_ildkl.EANL,,,null()),_ildkl.TW,_scean)
               ?};
         {? _ildkl.ILE>_stn || _wyn:=0 ?};
         _wyn & _ildkl.next()
      !}
   ?}
?};
obj_del(_ildkl);
_wyn


\czy_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: ustala czy dokument jest bilansem typu BO - na razie bo symbolu dokumentu
::   WE: TYPYDOK.ref
::  OLD: \czy_bo/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
TYPYDOK.cntx_psh();
TYPYDOK.prefix();
{? TYPYDOK.seek(_a)
||
:: NUCO - TP - Dodanie obsługi dokumentu MBO tak jak BO
   {? TYPYDOK.T='BO' | TYPYDOK.T='MBO'|| _wyn:=1 ?}
?};
TYPYDOK.cntx_pop();
_wyn


\szuk_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: szuka naglowka dla DK
::  OLD: \szuk_n/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ND.prefix();
ND.seek(DK.N);
ND.Z<>'T';
{? DK.M<>null
||
   POMOC.MGR:=DK.M().MGR;
   D_HELP.M:=DK.M().KTM
?};
:: NUCO PeKa - zmienna do wyliczenia stanu po operacji w oknie wszystkie dokumenty od strony stanow magazynowych
{? var_pres('dk_tmp')>0 & dk_tmp.find_key(DK.AR,#DK.ref())
|| QNUCO.SMIL:=dk_tmp.STAN
|| QNUCO.SMIL:=0
?};
:: koniec
exec('rekprzed','color','DK#01')


\his_dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: historia dostawy, zamowienia, faktury
::   WE: [_a] - $FAP.ref() lub $DK.ref() (wolane z tab. SC)
::              bez parametru-wywolane z pozycji dok. magazyn., z parametrem wywolane z pozycji dok. sprzed.
::              lub tabela dostaw
::       [_b] - 0(domyślnie) tryb normalny 1-do wyświetlenia na pozycji
::       [_c] - wskaznie na bieżacy dokument
::  OLD: \his_dost/mag_fun.fml
::  MOD: SITEK - dodanie indeksow i nazw
::----------------------------------------------------------------------------------------------------------------------
:: NUCO PK - rozbudowa o zmienne globalne - brak na miejsca lokalne
VAR_DEL.delete('__ktmdok','__nazdok','__jmdok');
{? var_pres('__hist')>117
|| _otab:=1;
   _ohist:=__hist;
   _ohsel:=__hsel;
   _ohprdk:=__hprdk
|| _otab:=0
?};
VAR_DEL.delete('__thist','__subpoz','__infprod');
__thist:=tab_tmp(1,'REF','STRING[16]','');
_par:=exec('get','#params',600060,1);
_rec:=#cfg_info('formula_recursion');
{? _rec>25 || _rec:=25 ?};
__subpoz:={? _par<=0 || _rec |? _par<=2 || 3 || _par ?};

__infprod:=1;
_pro:=exec('get','#params',600061,2);
{? _pro='N' | (_pro='P' & FUN.ask('Analiza powiązań dostawy z produkcją?'@))
|| __infprod:=0
?};

_set:=0;
_msk:=0;
_par:=(_=1);
_dkthis:={? var_pres('_c')=type_of('') & (+_c) || _c
         |? cur_tab()=SC & SC.PRDK<>SC.SRDK & SC.SRDK<>''
         || exec('FindAndGet','#table',DK,SC.SRDK,,"$ref()",'')
         |? cur_tab()=DK & DK.PRDK<>DK.SRDK & DK.SRDK<>''
         || exec('FindAndGet','#table',DK,DK.SRDK,,"$ref()",'')
         || ''
         ?};
{? var_pres('_a')=type_of('') & (5+_a)='dokma'
|| _msk:=1;
   _par:=0;
   ND.cntx_psh();
   DK.cntx_psh();
   SC.cntx_psh();
   DK.use(form(8+_a));
   DK.prefix();
   {? DK.seek(_a)
   || ND.use(ref_name(DK.N))
   || FUN.info('Nie znaleziono dostawy.'@);
      DK.cntx_pop();
      ND.cntx_pop();
      SC.cntx_pop();
      return(0)
   ?}
|| {? _par & var_pres('_a')<>type_of('') || _set:=1 ?}
?};
_disp:={? var_pres('_b')=type_of(0) || _b || 0 ?};

_act_dks:=DK.actions_grayed('WER_DOK');

DISP.DISP:=1;
{? ~_set
 & {? _par
   || 5+_a='fakpo' & FAP.M().RODZ<>'T'
   || DK.M().RODZ<>'T'
   ?}
|| DISP.DISP:=0;
   FUN.info('Historia dostawy dostępna tylko dla materiału.'@);
   return
?};

VAR_DEL.delete('__nextwin');
__nextwin:=1;
_tt_ndx:=KOLIKO.ndx_tmp(,,'USER',,,'ID',,,'ID',,);
KOLIKO.index(_tt_ndx);
_dpozpoz:=DPOZ.POZ;
DPOZ.POZ:=0;
exec('his_init','magdok_wspolne');
__hprdk:='';

:: poziom zero
{? _par & ~_set
|| {? 5+_a='fakpo'
   ||
      _opis:='Materiał: '@+FAP.M().KTM+' - '+FAP.M().N+';'+' jm: '@+FAP.M().J().KOD;
      __ktmdok:=FAP.M().KTM;
      __nazdok:=FAP.M().N;
      __jmdok:=FAP.M().J().KOD;

      _dk_this:=sql($"select distinct DK.PRDK PRDK, DK.reference DK_REF from @DK where DK.FAP=':_a'",_a);
      _dk_tre1:=sql($"select distinct :_a.PRDK from :_a",_dk_this)
   ||
      1
   ?}
|| {? ~_set
   || __hprdk:=DK.PRDK;
       _stansc:=sql('select cast(sum(S) as STRING_TYPE) as "stan" from @SC where SC.PRDK=\':_a\'',DK.PRDK);
      _opis:='ID: '+DK.SCEAN+' | PD: '@+DK.DK_C().WAR02+' | Akt. stan: '+ _stansc.STAN + ' '@+DK.M().J().KOD+' | Materiał: '@+DK.M().KTM+' - '+DK.M().N;
      __ktmdok:=DK.M().KTM;
      __nazdok:=DK.M().N;
      __jmdok:=DK.M().J().KOD;

      _dk_this:=sql($"select '                ' DK_REF from MG where 1=0");
      _dk_this.DK_REF:=$DK.ref();
      _dk_this.add();

      _dk_tre1:=sql($"select '                ' PRDK from MG where 1=0");
      _dk_tre1.PRDK:=DK.SRDK;
      _dk_tre1.add()
   || _a.clear();
      {? _a.first()
      || _dk_this:=sql($"select '                ' DK_REF from MG where 1=0");
         _dk_tre1:=sql($"select '                ' PRDK from MG where 1=0");
         {!
         |? _dk_this.DK_REF:=_a.REF;
            _dk_this.add();

            _dk_tre1.PRDK:=_a.REF;
            _dk_tre1.add();
            _a.next()
         !}
      ?}
   ?}
?};

:: partie produkcyjne
_dk_tre2:=sql($"select '                ' PRDK,  '                ' PARTIA from MG where 1=0");
_loop:=_dk_tre1.first() & __infprod;
{!
|? _loop
|!
   _Zpars:=sql('
      select distinct
         ZPARS.PARTIA PARTIA
      from
         @ZPARS
      where
         ZPARS.PRDK=\':_a\''
   ,_dk_tre1.PRDK);
   _loop:=_Zpars.first();
   {!
   |? _loop
   |!
      _Rp:=sql('
         select distinct
            DK.PRDK PRDK,
            DK.PARTIA PARTIA
         from
            @DK
            join @ND using(DK.N,ND.REFERENCE)
            join TYPYDOK using(ND.TYP,TYPYDOK.REFERENCE)
         where
            TYPYDOK.WYR=\'T\'
            and
            DK.PARTIA=:_a'
      ,exec('FindAndGet','#table',ZPARN,_Zpars.PARTIA,,,null()));
      _loop:=_Rp.first();
      {!
      |? _loop
      |!
         _dk_tre2.PRDK:=_Rp.PRDK;
         _dk_tre2.PARTIA:=_Rp.PARTIA;
         _loop:=_dk_tre2.add() & _Rp.next()
      !};
      &_Rp;
      _loop:=_Zpars.next()
   !};
   &_Zpars;
   _loop:=_dk_tre1.next()
!};

:: utworzenie listy dostaw
_dk_tree:=sql($"select '                ' PRDK,  '                ' PARTIA from MG where 1=0 order by 1,2");
_loop:=_dk_tre1.first();
{!
|? _loop
|!
   _dk_tree.PRDK:=_dk_tre1.PRDK;
   _loop:=_dk_tree.add() & _dk_tre1.next()
!};
_loop:=_dk_tre2.first();
{!
|? _loop
|!
   _dk_tree.PRDK:=_dk_tre2.PRDK;
   _dk_tree.PARTIA:=_dk_tre2.PARTIA;
   _loop:=_dk_tree.add() & _dk_tre2.next()
!};

:: tworzy tabele __hist dla dokumentow magazynowych
MG.cntx_psh();
ND.cntx_psh();
DK.cntx_psh();
M.cntx_psh();

_prdk:=_partia:='';
_tree_his:=null();
{! _ii:=1..2
|!
_addtree:=0;
{? _dk_tree.first()
||
   {!
   |?
      {? _prdk<>_dk_tree.PRDK
        & {? _ii=1 || _dk_tree.PARTIA='' || _dk_tree.PARTIA<>'' ?}
        & (_dk_tree.PARTIA='' | _partia='')
      || _dokument:={? _dk_tree.PARTIA='' || 'Historia dostawy'@ || 'Historia wg partii'@ ?};
         _typ:='';
         _magazyn:='';
::       _opis <- ustawiony wczesniej
         {? _set
         || _matold:=BEER.M;
            BEER.M:=exec('FindAndGet','#table',DK,_dk_tree.PRDK,,"M",null());
            {? BEER.M<>null()
                   || _opis:='Materiał: '@+BEER.M().KTM+' - '+BEER.M().N+';'+' jm: '@+BEER.M().J().KOD;
                      __ktmdok:=BEER.M().KTM;
                      __nazdok:=BEER.M().N;
                      __jmdok:=BEER.M().J().KOD
                   || _opis:='';
                      __ktmdok:='';
                      __nazdok:='';
                      __jmdok:=''
                   ?};
            BEER.M:=_matold
         ?};
         _plus:='';
         _rodz:='T'+{? _ii=1 || 'D' || 'P' ?};
         _this:=0;
         _dt:=date(0,0,0);
         _da:=date(0,0,0);
         _ta:=time(0,0,0);
         _pow:='';
         _kh:='';
         _dk_ref:='';
         _nd_ref:='';
         _zam_rn:='';
         _fap_ref:='';
         _faks_ref:='';
         _part_ref:='';

         _tree_ref:=exec('hist_add','magdok_wspolne',0,_dokument,_typ,_magazyn,_opis,_plus,_rodz,_this,_dt,_da,_ta
           ,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref);
         _tree_his:=_tree_ref;
         _prdk:=_dk_tree.PRDK
      ?};

      {? _ii=2
        & _dk_tree.PARTIA<>''
        & _tree_his
        & _dk_tree.PARTIA<>_partia
      || _dokument:=exec('FindAndGet','#table',ZPARN,_dk_tree.PARTIA,,"SYM",'');
         _typ:='PARTIA';
         _magazyn:='';
         _opisPar:='Wyrób: %1; jm: %2'@
                    [exec('FindAndGet','#table',ZPARN,_dk_tree.PARTIA,,"ZL().KTM().KTM+' - '+ZL().KTM().N",''),
                     exec('FindAndGet','#table',ZPARN,_dk_tree.PARTIA,,"ZL().KTM().J().KOD",'')];
         __ktmdok:='%1'@[exec('FindAndGet','#table',ZPARN,_dk_tree.PARTIA,,"ZL().KTM().KTM",'')];
         __nazdok:='%1'@[exec('FindAndGet','#table',ZPARN,_dk_tree.PARTIA,,"ZL().KTM().N",'')];
         __jmdok:='%1'@[exec('FindAndGet','#table',ZPARN,_dk_tree.PARTIA,,"ZL().KTM().J().KOD",'')];
         _plus:='';
         _rodz:='X';
         _this:=0;
         _dt:=date(0,0,0);
         _da:=date(0,0,0);
         _ta:=time(0,0,0);
         _pow:='';
         _kh:='';
         _dk_ref:='';
         _nd_ref:='';
         _zam_rn:='';
         _fap_ref:='';
         _faks_ref:='';
         _part_ref:=_dk_tree.PARTIA;
         _zlec:=exec('FindAndGet','#table',ZPARN,_dk_tree.PARTIA,,"ZL().SYM",'');

         _tree_ref:=exec('hist_add','magdok_wspolne',_tree_his,_dokument,_typ,_magazyn,_opisPar,_plus,_rodz
                         ,_this,_dt,_da,_ta,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref,_zlec);
         _partia:=_dk_tree.PARTIA
      ?};

::    DK.PRDK - refsql dokumentu pierwotnego
      {? {? _ii=1 || _dk_tree.PARTIA='' || _dk_tree.PARTIA<>'' ?}
        & _dk_tree.PRDK<>''
      ||
         DK.use(8+_dk_tree.PRDK);
         ND.use('nagdo'+((8+_dk_tree.PRDK)+3));
         DK.clear();
         ND.clear();
         {? DK.seek(_dk_tree.PRDK,8+_dk_tree.PRDK)
         ||
::          tworzy tabele __hist
            exec('his_dokm','magdok_wspolne',DK.N().MAG().SYM,DK.M().KTM,DK.RDK,DK.NDK,_tree_ref,ND.NDSQL,1)
         ?}
      ?};

      _dk_tree.next()
   !}
?}
!};

MG.cntx_pop();
ND.cntx_pop();
DK.cntx_pop();
M.cntx_pop();

:: info o biezacej/powiazanej pozycji DK
_ndx_this:=__hist.ndx_tmp(,,'RODZ',,,'DK_REF',,,'DK_REF',,);
__hist.index(_ndx_this);
{? _dk_this.first()
||
   {!
   |?
      {? _dkthis<>''
      || __hist.prefix('M',_dkthis,_dkthis)
      || __hist.prefix('M',_dk_this.DK_REF,_dk_this.DK_REF)
      ?};
      {? __hist.first() || __hist.THIS:={? _par || 2 || 1 ?}; __hist.put() ?};
      _dk_this.next()
   !}
?};
__hist.ndx_drop(_ndx_this);

:: pozostale elementy na podstawie dokumentow magazynowych
exec('his_zamd','magdok_wspolne');
exec('his_zamk','magdok_wspolne');
exec('his_fakz','magdok_wspolne','Z');
exec('his_fakz','magdok_wspolne','E');
exec('his_faks','magdok_wspolne');
:: info o biezacej pozycji FAP
{? ~_set & _par
||
   _ndx_fap:=__hist.ndx_tmp(,,'RODZ',,,'FAP_REF',,,'FAP_REF',,);
   __hist.index(_ndx_fap);
   __hist.prefix('S',_a,_a);
   {? ~_set
   || __hist.prefix('S',_a,_a);
   {? __hist.first()
   ||
      {!
      |?
         __hist.THIS:=1;
         __hist.put();
         __hist.next()
      !}
      ?}
   || _a.clear();
      {? _a.first()
      || {!
         |? __hist.prefix('S',_a.REF,_a.REF);
            {? __hist.first()
            ||
               {!
               |?
                  __hist.THIS:=1;
                  __hist.put();
                  __hist.next()
               !}
            ?};
            _a.next()
         !}
      ?}
   ?};
   __hist.ndx_drop(_ndx_fap)
?};
VAR_DEL.delete('__thist','__subpoz','__infprod');

_ndx_view:=__hist.ndx_tmp(,,'TREE_REF',,,'D',,,'DA',,,'TA',,,'POW',,1,'PLUS',,1);
__hist.index(_ndx_view);
{? ~_disp
|| __hist.select();
   {? _otab
   || VAR_DEL.delete('__hist','__hsel','__hprdk');
      __hist:=_ohist;
      __hsel:=_ohsel;
      __hprdk:=_ohprdk
   || VAR_DEL.delete('__hist','__hsel','__katalog','__hprdk','__hsub')
   ?};
   {? var_pres('_ndx_view')>0 & var_pres('__hist')>117 || __hist.ndx_drop(_ndx_view) ?};

   KOLIKO.ndx_drop(_tt_ndx);
   DPOZ.POZ:=_dpozpoz;
   VAR_DEL.delete('__nextwin')
?};
DISP.DISP:=0;


DK.actions_grayed('WER_DOK',_act_dks);
{? _msk
|| DK.cntx_pop();
   ND.cntx_pop();
   SC.cntx_pop()
?};
:: NUCO PK - rozbudowa o zmienne globalne - brak na miejsca lokalne
VAR_DEL.delete('__ktmdok','__nazdok','__jmdok');
''


\his_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: init tabeli __hist - historia dostawy, powiazane dokumenty magazynowe
::   WE: _a - nazwa galezi glownej
::       _b - opis
::   WY: tree_ref galezi glownej
::  OLD: \his_init/mag_fun.fml
::  MOD: SITEK - dodanie indeksow i nazw
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__hist','__hsel','__katalog','__hprdk','__hsub');

__hsub:=exec('get','#params',600060,1);
:: drzewko
__hist:=tab_tmp(2
   ,'TREE_REF','TREE_REF','Tree_ref'@
   ,'DOKUMENT','STRING[20]','Dokument'@
   ,'TYP','STRING[8]','Typ'@
   ,'MAGAZYN','STRING[8]','Magazyn'@
   ,'OPIS','STRING[200]','Opis'@
   ,'PLUS','STRING[2]','Plus'@
   ,'RODZ','STRING[2]','Rodzaj dokumentu'@
   ,'THIS','INTEGER','This'@
   ,'D','DATE','Data'@
   ,'DA','DATE','Data akceptacji'@
   ,'TA','TIME','Czas akceptacji'@
   ,'POW','STRING[1]','Powiązany'@
   ,'KH_SKR','STRING[10]','Skrót KH'@
   ,'DATA','STRING[10]','Data'@
   ,'DK_REF','STRING[16]','DK Ref'@
   ,'ND_REF','STRING[16]','ND Ref'@
   ,'ZAM_RN','STRING[16]','Ref nag. realizacji'@
   ,'FAP_REF','STRING[16]','FAP Ref'@
   ,'FAKS_REF','STRING[16]','FAKS Ref'@
   ,'DKC_REF','STRING[16]','DK_C Ref'@
   ,'PART_REF','STRING[16]','PARTIA Ref'@
   ,'ZLEC','STRING[20]','Zlecenie'@
   ,'KTMZDOK','STRING[20]','Indeks'@
   ,'NAZZDOK','STRING[100]','Nazwa indeksu'@
   ,'JMZDOK','STRING[4]','j.m.'@
   ,'IL','REAL','Ilość z dokumentu'@
   ,'PRDK','STRING[16]','dostawa'@
   ,'ROOT','STRING[1]','korzeń'
   ,'POZ','INTEGER','pozycja'
   ,'NRS','INTEGER','poziom zagłębienia'
   ,'SUB','INTEGER','podpoziom');

_icon_dok:="
   {? __katalog()
   ||
      {? __hist.PLUS='NT'
      ||
         {? __hist.tr_state()=1
         || KOLIKO.prefix(app_info('app_user'),'HD#P-','HD#P-')
         || KOLIKO.prefix(app_info('app_user'),'HD#P+','HD#P+')
         ?}
      ||
         {? __hist.tr_state()=1
         || KOLIKO.prefix(app_info('app_user'),'KAT#-','KAT#-')
         || KOLIKO.prefix(app_info('app_user'),'KAT#+','KAT#+')
         ?}
      ?}
   ||
      _pfx:='HD#'+(1+__hist.RODZ);
      KOLIKO.prefix(app_info('app_user'),_pfx,_pfx)
   ?};

   {? KOLIKO.first()
   || _icon:=KOLIKO.ICON;
      _file:=KOLIKO.FILE
   || _icon:=76;
      _file:='xwin16.png'
   ?};

   _file+':'+$_icon
";
_icon_ops:="
   {? 1+__hist.PLUS='T'
   || 'xwin16.png:27'
   |? 1+__hist.PLUS='N'
   || 'xwin16.png:28'
   || ''
   ?}
";
_view:="
   __hist.cntx_psh();
   __hist.clear();
   {? __hist.first()
   ||
      {!
      |?
         {? __hist.RODZ='M' & __hist.PLUS<>'NT' || __hist.tr_set(0,,,1) ?};
         __hist.next()
      !}
   ?};
   __hist.cntx_pop()
";
__katalog:="
   _wyn:=0;
   _hist_ref:=__hist.ref();
   _hist_sub:=__hist.SUB;
   _mag:=__hist.MAGAZYN;
   _plus:={? __hist.PLUS='T' || __hist.FAKS_REF='' & __hist.ZAM_RN='' || 0 ?};
   _ndr:=__hist.ND_REF;
   __hist.cntx_psh();
   _ndx:=__hist.ndx_tmp(,,'TREE_REF',,,'TREE_REF',,);
   __hist.index(_ndx);
   __hist.prefix(_hist_ref,_hist_ref);
   _wyn:=__hist.first();
   _build:=~_wyn & _hist_sub;
   {? ~_build & _wyn & _hist_sub
   || _build:=1;
      {! |? {? __hist.PLUS='T' & __hist.FAKS_REF='' & __hist.ZAM_RN='' || _build:=0; 0 || __hist.next() ?} !}
   ?};
   {? __hsub>2 & _build & _plus
   || VAR_DEL.delete('__thist','__subpoz');
      __thist:=tab_tmp(1,'REF','STRING[16]','');
      __subpoz:=__hist.NRS+1;
      _ktm:=exec('FindAndGet','#table',DK,__hist.DK_REF,,\"M().KTM\",'');
      _rdk:=exec('FindAndGet','#table',DK,__hist.DK_REF,,\"RDK\",'');
      _ndk:=exec('FindAndGet','#table',DK,__hist.DK_REF,,\"NDK\",'');
      exec('his_dokm','magdok_wspolne',_mag,_ktm,_rdk,_ndk,_hist_ref,_ndr,3);
      VAR_DEL.delete('__thist','__subpoz');
      __hist.prefix(_hist_ref,_hist_ref);
      _wyn:=__hist.first()
   ?};
   __hist.ndx_drop(_ndx);
   __hist.cntx_pop();
   _wyn
";
_pow_fml:=$'exec(\'his_pdok\',\'magdok_wspolne\',\"exec(\'pow_prz\',\'magdok_wspolne\')\")';
_act_fml:="
   _act:='';
   {? __hist.TREE_REF=0 || _act+='P' ?};
   {? +__hist.PLUS<>2 || _act+='I' ?};
   {? +__hist.DK_REF=0 || _act+='Z' ?};
   __hist.actions(__hsel,_act,,1);
   exec('rekprzed','color','HD#01')
";
_zalaczniki:="
   {? +__hist.DK_REF
   || DK.cntx_psh();
      DK.use(8+__hist.DK_REF);
      DK.prefix();
      {? DK.seek(__hist.DK_REF)
      || exec('dk_zalacznikidk','dokuml')
      ?};
      DK.cntx_pop()
   ?}
";
:: okienko drzewka
__hsel:=__hist.mk_sel('Historia dostaw'@,'P',,'_his_dost_tree_',,,,1,,,,,,'html_maximized');
__hist.win_fld(__hsel,,'DOKUMENT',,,25,,,'Dokument'@);
__hist.win_fld(__hsel,,'POZ',,,7,,,'Pozycja'@);
__hist.win_fld(__hsel,,'MAGAZYN',,,8,,,'Magazyn'@);
__hist.win_fld(__hsel,,'TYP',,,8,,,'Typ'@);
__hist.win_fld(__hsel,,'KH_SKR',,,10,,,'Kontrahent'@);
__hist.win_fld(__hsel,,'ZLEC',,,20,,,'Zlecenie'@);
__hist.win_fld(__hsel,,'DATA',,,10,,,'Data'@);
__hist.win_fld(__hsel,,'OPIS',,,50,,,'Opis'@);
__hist.win_act(__hsel,,'Formuła','Zwiń/&rozwiń'@@,,,,"exec('zwrw_all','#tree','__hist','TREE_REF')");
__hist.win_act(__hsel,,'Formuła','Pokaż dokument'@@,,,"exec('his_pdok','magdok_wspolne')",,1);
__hist.win_act(__hsel,,'Formuła','Pow&iązany dokument'@@,,,_pow_fml);
__hist.win_act(__hsel,,'Formuła','Załączniki'@@,,,_zalaczniki);
__hist.win_act(__hsel,,'Formuła','&Historia skrócona'@@,,,"exec('his_hakt','magdok_wspolne')");
__hist.win_act(__hsel,,'Formuła','Legenda'@@,,,"exec('his_legn','magdok_wspolne')");
__hist.win_act(__hsel,,'Rekord',,,,_act_fml);
__hist.win_act(__hsel,,'Okienko',,,,_view);
__hist.win_act(__hsel,,'Szukaj');
__hist.win_fml(__hsel,,'DOKUMENT',,'ICON_BEFORE',_icon_dok);
__hist.win_fml(__hsel,,'OPIS',,'ICON_BEFORE',_icon_ops);
__hist.fld_fml('POZ','DISPLAY_FORMAT',"{? (';MSZ'*__hist.RODZ)>1 || 'empty=0' || 'empty=1' ?}");
__hist.tr_fml(__hsel,,"{? _a || 1 || 0 ?}",__katalog);
__hist.win_sel(__hsel);
''


\hist_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: dodaje pozycje tabeli __hist - historia dostawy, powiazane dokumenty magazynowe
::   WE: _a - tree_ref
::       _b - dokument
::       _c - typ
::       _d - magazyn
::       _e - opis
::       _f - plus
::       _g - rodzaj dokumentu
::            (T-tree, M-dok. magazyn., K-zam. klienta, D-zam.dostawy, S-dok. sprzedazy, Z-dok. zakupu, P-partia)
::       _h - this
::       _i - data
::       _j - data akceptacji
::       _k - czas akceptacji
::       _l - powiazany
::       _m - kontrahent skrot
::       _n - $DK.ref
::       _o - $ND.ref
::       _p - refsql powiazanego naglowka realizacji
::       _q - refsql powiazanej pozycji FAP
::       _r - refsql powiazanej faktury FAKS
::       [_s] - refsql powiazanej parti produkcyjnej
::       [_t] - symbol zlecenia produkcyjnego
::       [_u] - ilość z dokumentu
::       [_v] - wskazanie na dostawę
:: NUCO PK - brak miejsca na zmienne lokalne - zmiana na globalne
::       [__ktmdok] - ktm
::       [__matdok] - nazwa
::       [__jmdok] - jm
::  OLD: \hist_add/mag_fun.fml
::  MOD: SITEK - dodanie indeksow i nazw
::----------------------------------------------------------------------------------------------------------------------
_part_ref:={? var_pres('_s')=type_of('') || _s || '' ?};
    _zlec:={? var_pres('_t')=type_of('') || _t || '' ?};
   _ildok:={? var_pres('_u')=type_of(0)  || _u || 0 ?};
    _prdk:={? var_pres('_v')=type_of('') || _v || '' ?};
     _poz:={? var_pres('_w')=type_of(0)  || _w || 0 ?};
 _ktmzdok:={? var_pres('__ktmdok')=type_of('') || __ktmdok || '' ?};
 _nazzdok:={? var_pres('__matdok')=type_of('') || __matdok || '' ?};
  _jmzdok:={? var_pres('__jmdok')=type_of('') || __jmdok || '' ?};

_refhist:=null();
__hist.cntx_psh();
_ndx:=__hist.ndx_tmp(,,'TREE_REF',,,'TREE_REF',,);
__hist.index(_ndx);
__hist.prefix(_a,_a);
{? __hist.first() & __hist.find_tab('first','DOKUMENT',,'=',_b,'DK_REF',,'=',_n,'FAP_REF',,'=',_q)
|| _refhist:=__hist.ref()
?};
__hist.ndx_drop(_ndx);
__hist.prefix();
__hist.TREE_REF:=_a;
__hist.DOKUMENT:=_b;
__hist.TYP:=_c;
__hist.MAGAZYN:=_d;
__hist.OPIS:=_e;
__hist.PLUS:=_f;
__hist.RODZ:=_g;
__hist.THIS:=_h;
__hist.D:=_i;
__hist.DATA:={? _i<>date(0,0,0) || $_i || '' ?};
__hist.DA:=_j;
__hist.TA:=_k;
__hist.POW:=_l;
__hist.KH_SKR:=_m;
__hist.DK_REF:=_n;
__hist.ND_REF:=_o;
__hist.ZAM_RN:=_p;
__hist.FAP_REF:=_q;
__hist.FAKS_REF:=_r;
__hist.PART_REF:=_part_ref;
__hist.ZLEC:=_zlec;
__hist.KTMZDOK:=_ktmzdok;
__hist.NAZZDOK:=_nazzdok;
__hist.JMZDOK:=_jmzdok;
__hist.IL:=_ildok;
__hist.PRDK:=_prdk;
__hist.POZ:=_poz;
__hist.NRS:={? __hist.TREE_REF<>null()
            || exec('FindAndGet','#table',__hist,__hist.TREE_REF,,"NRS",0)+1
            || 0
            ?};
__hist.SUB:=0;
_wyn:={? _refhist<>null()
      || _refhist
      || {? ({? __hist.PLUS='T' || __hist.NRS<__subpoz || __hist.NRS<=__subpoz ?}
            | __hist.FAKS_REF<>'' | __hist.ZAM_RN<>'')
           & __hist.add()
         || __hist.ref()
         || null
         ?}
      ?};
{? __hist.TREE_REF<>null()
|| exec('FindAndGet','#table',__hist,__hist.TREE_REF,,"SUB:=1;put(1)",0)
?};
__hist.cntx_pop();
_wyn


\his_dokm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: generowanie tabeli __hist - historia dostawy, powiazane dokumenty magazynowe
::   WE: _a - magazyn
::       _b - material
::       _c - RDK
::       _d - NDK
::       _e - nadrzedne TREE_REF
::       _f - $ND.ref()
::       _g - 0 - rekurencja, 1 - pierwsze wywołanie, 2 - bez histori kwalifikacji, -1 - 0 ale z ilością poprzednią
::            3 - rekurencja dla gałęzi
::   WY: TREE_REF biezacej galezi
::  OLD: \his_dokm/mag_fun.fml
::  MOD: SITEK - dodanie indeskow i nazw
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_f')<>type_of('') || _f:='' ?};
:: NUCO PK - rozbudowa o zmienne globalne - brak na miejsca lokalne
VAR_DEL.delete('__ktmdok','__nazdok','__jmdok');

_oddz:=1+(_d+3);
_tree_ref:=null;
_hist_ref:=_e;

_noadd:={? _g=3 || _g:=0; 1 || 0 ?};
_infilp:=_g<>0;
{? _g<0 || _g:=0 ?};
_dost_ref:=exec('FindAndGet','#table',DK,_c,_d,"$ref()",'');
{? _dost_ref<>''
|| __thist.clear();
   __thist.prefix(_dost_ref,);
   {? ~__thist.first()
   || __thist.blank();
      __thist.REF:=_dost_ref;
      __thist.add(1)
   ?}
?};

ND.cntx_psh();
DK.cntx_psh();
DK_HS.cntx_psh();
__hist.cntx_psh();
__hist.clear();

_ok:=1;

MG.index('MAGAZYNY');
MG.prefix(_a,_a);
{? MG.first()
|| _mag:=MG.ref()
|| _ok:=0
?};

M.index('MATKTM');
M.prefix(_b,_b);
{? M.first()
|| _mat:=M.ref()
|| _ok:=0
?};

OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? _ok=1 & OKR.first()
||
   {!
   |?
      ND.use('nagdo'+_oddz+($OKR.ROK+2));
      DK.use('dokma'+_oddz+($OKR.ROK+2));
      DK_HS.use('dokhs'+_oddz+($OKR.ROK+2));
      DK.index('DK_SC');
      DK.prefix(_mag,_mat,_c,_d);
      {? DK.first()
      ||
         {!
         |? {? DK.N().Z='T' | (DK.N().TYP().DK='T' & DK.N().TYP().Z='T')
            ||
               _dokument:=DK.N().SYM;
               _typ:=DK.N().TYP().T;
               _magazyn:=DK.N().MAG().SYM;
               _ilz:=0;
               {? _infilp
               ||
                  _ilpp:=0;
                  DK_HS.cntx_psh();
                  DK_HS.index('DK');
                  DK_HS.prefix(DK.ref());
                  {? DK_HS.first() & DK_HS.SRC_SQL<>''
                  || DK_HS.index('DK');
                     DK_HS.prefix(exec('FindAndGet','#table',DK,DK_HS.SRC_SQL,,,null()));
                     {? DK_HS.first() || _ilz+=DK_HS.IL ?}
                  ?};
                  _prdk:=DK.PRDK;
                  {? _prdk<>''
                  || DK.cntx_psh();
                     DK.use(8+_prdk);
                     DK.prefix();
                     {? DK.seek(_prdk)
                     || DK_HS.use('dokhs'+(8+DK.PRDK+3));
                        DK_HS.index('DK');
                        DK_HS.prefix(DK.ref());
                        _loop:=DK_HS.first();
                        {!
                        |? _loop
                        |!
                           {? DK_HS.KIND='N'
                           ||
                              _ilpp:=DK_HS.IL;
                              _loop:=0
                           ||
                              _loop:=DK_HS.next()
                           ?}
                        !}
                     ?};
                     DK.cntx_pop()
                  ?};
                  DK_HS.cntx_pop()
               ?};
               _opis:='Ilość:'+form(DK.IL,15,3)
                  +{? +form(DK.N().O) || ' - '+DK.N().O || '' ?}
                  +{? _infilp & DK.PLUS='T' & ((_ilz<>0 & _ilz<>DK.IL) | (_ilpp<>0 & _ilpp<>DK.IL))
                   || '; Ilość przed podziałem: '+
                      {? _ilz<>0 & _ilz<>_ilpp
                      || form(_ilz,15,3)+{? _ilpp>0 || '  pierwotna: '+form(_ilpp,15,3) || '' ?}
                      || form(_ilpp,15,3)
                      ?}
                   || ''
                   ?};
               __ktmdok:=DK.M().KTM;
               __nazdok:=DK.M().N;
               __jmdok:=DK.M().J().KOD;
               _plus:=DK.PLUS;
               _rodz:='M';
               _this:=0;
               _dt:=DK.N().D;
               _da:=DK.N().DA;
               _ta:=DK.N().TA;
               _pow:=DK.POW;
               _kh:=DK.N().KH().SKR;
               _dk_ref:=$DK.ref();
               _nd_ref:=$DK.N;
               _zam_rn:=DK.ZAM_RN;
               _fap_ref:=DK.FAP;
               _faks_ref:=DK.N().FAKS_REF;
               _part_ref:=$DK.PARTIA;
               _zlec:={? DK.ZL<>null() || DK.ZL().SYM || '' ?};
               _tree_ref:={? _noadd & 0
                          || _hist_ref
                          || exec('hist_add','magdok_wspolne',_hist_ref,_dokument,_typ,_magazyn,_opis,_plus,_rodz,_this
                              ,_dt,_da,_ta,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref
                              ,_faks_ref,_part_ref,_zlec,DK.IL,DK.PRDK,DK.P)
                          ?};
               {? DK.N().NDSQL<>'' | ND.TYP().TD<>''
               ||
                  {? DK.PLUS='N'
                  ||
::                   przesuniecie magazynowe (typu MM) -> szuka MP

                     _qq:=$"
                        select
                           MG.SYM Magazyn,
                           M.KTM Indeks,
                           DK.RDK RDK,
                           DK.NDK NDK,
                           DK.SRDK SRDK
                        from
                           @DK
                           join @ND using (DK.N,ND.reference)
                           join MG using (ND.MAG,MG.reference)
                           join TYPYDOK using (ND.TYP,TYPYDOK.reference)
                           join M using (DK.M,M.reference)
                        where
                           DK.PRDK=':_b'
                           and TYPYDOK.T=':_a'
                           and ND.NDSQL=':_c'
                           and DK.P=:_d
                     ";
::                     {! _xx:=1..1000
::                     |! _mp:=sql(_qq,DK.N().TYP().TD,{? DK.M().SETW='P' || DK.SRDK || DK.PRDK ?},$DK.N,DK.P);
::                        obj_del(_mp)
::                     !};
                     _mp:=sql(_qq,DK.N().TYP().TD,{? DK.M().SETW='P' || DK.SRDK || DK.PRDK ?},$DK.N,DK.P);
::                     {! _xx:=1..1000
::                     |! _mp:=exec('tabFIND','magdok_wspolne',1);
::                        obj_del(_mp)
::                     !};
::                     _mp:=exec('tabFIND','magdok_wspolne',1);

::                info o przesunieciu
                     __hist.cntx_psh();
                     __hist.clear();
                     {? (_mp.clear(); _mp.first()) & __hist.seek(_tree_ref)
                     ||
                        __hist.PLUS:='NT';
                        __hist.put()
                     ?};
                     __hist.cntx_pop();
::                rekurencyjne wywolanie - nowe MAGAZYN, RDK, NDK
                     _mp.clear();
                     {? _mp.first()
                     || {!
                        |? _rdk:=BB.sqlint(_mp.SRDK);
                           _ndk:=8+_mp.SRDK;
                           _ndsql:={? DK.N().NDSQL<>'' || DK.N().NDSQL || '' ?};
                           exec('his_dokm','magdok_wspolne',_mp.MAGAZYN,_mp.INDEKS,_rdk,_ndk,_tree_ref,_ndsql,0);
                           _mp.next()
                        !}
                     ?};
                     &_mp
                  ||
::                   info o przesunieciu
                     __hist.cntx_psh();
                     __hist.clear();
                     {? __hist.seek(_tree_ref)
                     ||
                        __hist.PLUS:='TN';
                        {? __hist.put()
                        ||
                           {? _f<>''
                           ||
                              DK.cntx_psh();
                              DK.use((DK.name()-3)+(8+_f+3));
                              DK.index('DOKMAG');
                              DK.prefix(BB.sqlint(_f),DK.P);
                              {? DK.first()
                              ||
                                 _rdk:=BB.sqlint(DK.SRDK);
                                 _ndk:=8+DK.SRDK;
                                 _mg:=exec('FindAndGet','#table',ND,_f,,"ND.MAG().SYM",'');
                                 _ndsql:=exec('FindAndGet','#table',DK,DK.SRDK,
                                       ,"ND.cntx_psh();ND.use('nagdo'+(name()+3));_rr:=N().NDSQL;ND.cntx_pop();_rr",'');
                                 exec('his_dokm','magdok_wspolne',_mg,_b,_rdk,_ndk,_tree_ref,_ndsql,0)
                              ?};
                              DK.cntx_pop()

                           ?}
                        ?}
                     ?};
                     __hist.cntx_pop()
                  ?}
               ?};
               DK_HS.index('DK');
               DK_HS.prefix(DK.ref());
               _loop:=_g<>2 & DK_HS.first();
               {!
               |? _loop
               |!
                  {? DK_HS.KIND='P'
                  ||
                     exec('his_dokm','magdok_wspolne',_a,_b,DK_HS.SRC_RDK,DK_HS.SRC_NDK,_tree_ref,,-1);
                     _loop:=0
                  ||
                     _loop:=DK_HS.next()
                  ?}
               !};
               {? DK.PLUS='T' & DK.PRDK=DK.SRDK
               || _nd:=DK.N;
                  _prdk:=DK.PRDK;
                  _dkref:=$DK.ref();
                  ND.cntx_psh();
                  DK.cntx_psh();
                  DK.index('PRDK');
                  DK.prefix(_prdk,);
                  {? DK.first()
                  || {!
                     |? {? DK.N=_nd & DK.PRDK<>DK.SRDK & $DK.ref()<>_dkref
                        || exec('his_dokm','magdok_wspolne',DK.N().MAG().SYM,DK.M().KTM,DK.RDK,DK.NDK
                               ,_hist_ref,ND.NDSQL,2)
                        ?};
                        DK.next()
                     !}
                  ?};
                  ND.cntx_pop();
                  DK.cntx_pop()
               ?};
::             partie dla rozchodu lub dostawy wg RP
               {? DK.PLUS='N' & DK.N().TYP().WYR='N' & __infprod
               || _nd:=DK.N;
                  _prdk:=DK.PRDK;
                  _dkref:=$DK.ref();
                  _zparn:=tab_tmp(1,'SQL','STRING[16]','');
                  _rappr:=tab_tmp(1,'PRDK','STRING[16]','','PARTIA','STRING[16]','','ZL','STRING[20]','');
                  _zwwew:=tab_tmp(1,'PRDK','STRING[16]','','PARTIA','STRING[16]','','ZL','STRING[20]','');
                  ZPARS.cntx_psh();
                  ND.cntx_psh();
                  DK.cntx_psh();
                  ZPARS.index('SQLDOK');
                  ZPARS.prefix(_dkref,);
                  {? ZPARS.first()
                  || {!
                     |? {? ZPARS.PARTIA<>null() & (_zparn.prefix($ZPARS.PARTIA); ~_zparn.first())
                        || _zparn.blank();
                           _zparn.SQL:=$ZPARS.PARTIA;
                           _zparn.add(1)
                        ?};
                        ZPARS.next()
                     !}
                  |? DK.ZL<>null()
                  ||
::                   rozchód bez partii szuka RP w gałęziach nadrzędnych
                     ZL.cntx_psh();
                     _zlec:=DK.ZL;
                     _next:=1;
                     {!
                     |? obj_del(_rappr);
                        _rappr:=sql('select distinct
                                   ZL.SYM ZLSYM,
                                   DK.PRDK PRDK,
                                   DK.PARTIA PARTIA,
                                   DK.REFERENCE REF,
                                   ND.SYM NDSYM
                                 from @DK
                                   join @ND using(DK.N,ND.REFERENCE)
                                   join TYPYDOK using(ND.TYP,TYPYDOK.REFERENCE)
                                   join ZL using(DK.ZL,ZL.REFERENCE)
                                 where
                                   DK.ZL=:_a
                                   and TYPYDOK.WYR=\'T\'
                                   and TYPYDOK.P=\'T\'
                                   and ND.Z=\'T\'
                                   and DK.PRDK=DK.REFERENCE
                                   '
                                 ,_zlec);
                        {? _rappr.first()
                        || {!
                           |? {? (__thist.clear(); __thist.prefix(_rappr.REF); __thist.first())
                              || _rappr.del()
                              || _rappr.next()
                              ?}
                           !}
                        ?};
                        {? _rappr.first()
                        || _next:=0
                        || _unrzl:=exec('FindAndGet','#table',ZL,_zlec,,"{? NRPZL=0 || NRNZL || NRPZL ?}",0);
                           {? _unrzl=0
                           || _next:=0
                           || _zlec:=exec('FindInSet','#table','ZL','UNRZL',_unrzl,,,,,null());
                              {? _zlec=null() || _next:=0 ?}
                           ?}
                        ?};
                        _next
                     !};
                     ZL.cntx_pop()
                  ?};
                  {? DK.ZL<>null() & DK.N().TYP().WYR='N'
                  ||
::                   rozchód bez partii szuka RP w gałęziach nadrzędnych
                     ZL.cntx_psh();
                     _zlec:=DK.ZL;
                     _mat:=DK.M;
                     obj_del(_zwwew);
                     _zwwew:=sql('select distinct
                                ZL.SYM ZLSYM,
                                DK.PRDK PRDK,
                                DK.PARTIA PARTIA,
                                DK.REFERENCE REF,
                                ND.SYM NDSYM
                              from @DK
                                join @ND using(DK.N,ND.REFERENCE)
                                join TYPYDOK using(ND.TYP,TYPYDOK.REFERENCE)
                                join ZL using(DK.ZL,ZL.REFERENCE)
                              where
                                DK.ZL=:_a
                                and DK.M=:_b
                                and TYPYDOK.WYR=\'N\'
                                and TYPYDOK.ZLEC=\'T\'
                                and TYPYDOK.Z=\'N\'
                                and TYPYDOK.P=\'T\'
                                and ND.Z=\'T\'
                                '
                              ,_zlec,_mat);
                     {? _zwwew.first()
                     || {!
                        |? {? (__thist.clear(); __thist.prefix(_zwwew.REF); __thist.first())
                           || _zwwew.del()
                           || _zwwew.next()
                           ?}
                        !}
                     ?};
                     ZL.cntx_pop()
                  ?};
                  _refs:=_tree_ref;
                  _zparn.clear();
                  {? _zparn.first()
                  || {!
                     |? _dokument:=exec('FindAndGet','#table',ZPARN,_zparn.SQL,,"SYM",'');
                        _magazyn:='';
                        _opisPar:='Wyrób: %1; jm: %2'@
                          [exec('FindAndGet','#table',ZPARN,_zparn.SQL,,"ZL().KTM().KTM+' - '+ZL().KTM().N",''),
                           exec('FindAndGet','#table',ZPARN,_zparn.SQL,,"ZL().KTM().J().KOD",'')];
                        __ktmdok:='%1'@[exec('FindAndGet','#table',ZPARN,_zparn.SQL,,"ZL().KTM().KTM",'')];
                        __nazdok:='%1'@[exec('FindAndGet','#table',ZPARN,_zparn.SQL,,"ZL().KTM().N",'')];
                        __jmdok:='%1'@[exec('FindAndGet','#table',ZPARN,_zparn.SQL,,"ZL().KTM().J().KOD",'')];
                        _typ:='PARTIA';
                        _plus:='';
                        _rodz:='X';
                        _this:=0;
                        _dt:=date(0,0,0);
                        _da:=date(0,0,0);
                        _ta:=time(0,0,0);
                        _pow:='';
                        _kh:='';
                        _dk_ref:='';
                        _nd_ref:='';
                        _zam_rn:='';
                        _fap_ref:='';
                        _faks_ref:='';
                        _part_ref:=_zparn.SQL;
                        _zlec:=exec('FindAndGet','#table',ZPARN,_zparn.SQL,,"ZL().SYM",'');

                        _tree_ref:=exec('hist_add','magdok_wspolne',_refs,_dokument,_typ,_magazyn,_opisPar,_plus,_rodz
                         ,_this,_dt,_da,_ta,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref,_zlec,,_prdk);
                        _Rp:=sql('select distinct
                                    DK.PRDK PRDK,
                                    DK.PARTIA PARTIA
                                 from @DK
                                   join @ND using(DK.N,ND.REFERENCE)
                                   join TYPYDOK using(ND.TYP,TYPYDOK.REFERENCE)
                                 where
                                   DK.PARTIA=:_a and ND.Z=\'T\' and TYPYDOK.WYR=\'T\''
                             ,exec('FindAndGet','#table',ZPARN,_zparn.SQL,,,null()));
                        _Rp.clear();
                        {? _Rp.first()
                        || {!
                           |? _msk:=form(8+_Rp.PRDK)+3;
                              ND.cntx_psh();
                              DK.cntx_psh();
                              ND.use('nagdo'+_msk);
                              DK.use('dokma'+_msk);
                              DK.prefix();
                              {? DK.seek(_Rp.PRDK)
                              || exec('his_dokm','magdok_wspolne',DK.N().MAG().SYM,DK.M().KTM,DK.RDK,DK.NDK
                                ,_tree_ref,ND.NDSQL,1)
                              ?};
                              ND.cntx_pop();
                              DK.cntx_pop();
                              _Rp.next()
                           !}
                        ?};
                        obj_del(_Rp);
                        _zparn.next()
                     !}
                  ?};
                  _rappr.clear();
                  {? _rappr.first()
                  || {!
                     |? _dokument:=_rappr.NDSYM;
                        _magazyn:='';
                        _opisPar:='Wyrób: %1; jm: %2'@
                          [exec('FindAndGet','#table',DK,_rappr.PRDK,,"M().KTM+' - '+M().N",''),
                           exec('FindAndGet','#table',DK,_rappr.PRDK,,"M().J().KOD",'')];
                        __ktmdok:='%1'@[exec('FindAndGet','#table',DK,_rappr.PRDK,,"M().KTM",'')];
                        __nazdok:='%1'@[exec('FindAndGet','#table',DK,_rappr.PRDK,,"M().N",'')];
                        __jmdok:='%1'@[exec('FindAndGet','#table',DK,_rappr.PRDK,,"M().J().KOD",'')];
                        _typ:='RAPORT';
                        _plus:='';
                        _rodz:='X';
                        _this:=0;
                        _dt:=date(0,0,0);
                        _da:=date(0,0,0);
                        _ta:=time(0,0,0);
                        _pow:='';
                        _kh:='';
                        _dk_ref:='';
                        _nd_ref:='';
                        _zam_rn:='';
                        _fap_ref:='';
                        _faks_ref:='';
                        _part_ref:=_rappr.PARTIA;
                        _zlec:=_rappr.ZLSYM;

                        _tree_ref:=exec('hist_add','magdok_wspolne',_refs,_dokument,_typ,_magazyn,_opisPar,_plus,_rodz
                         ,_this,_dt,_da,_ta,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref,_zlec,,_prdk);
                        _rappr.clear();
                        {? _tree_ref
                        || __thist.clear();
                           __thist.prefix(_rappr.REF,);
                           {? ~__thist.first()
                           || __thist.blank();
                              __thist.REF:=_rappr.REF;
                              __thist.add(1)
                           ?};
                           _msk:=form(8+_rappr.PRDK)+3;
                           ND.cntx_psh();
                           DK.cntx_psh();
                           ND.use('nagdo'+_msk);
                           DK.use('dokma'+_msk);
                           DK.prefix();
                           {? DK.seek(_rappr.PRDK)
                           || exec('his_dokm','magdok_wspolne',DK.N().MAG().SYM,DK.M().KTM,DK.RDK,DK.NDK
                               ,_tree_ref,ND.NDSQL,1)
                           ?};
                           ND.cntx_pop();
                           DK.cntx_pop()
                        ?};
                        _rappr.next()
                     !};
                     {? _rappr.first()
                     || {!
                        |? __thist.clear();
                           __thist.prefix(_rappr.REF,);
                           {? __thist.first()
                           || __thist.del()
                           ?};
                           _rappr.next()
                        !}
                     ?}
                  ?};
                  _zwwew.clear();
                  {? _zwwew.first()
                  || {!
                     |? _dokument:=_zwwew.NDSYM;
                        _magazyn:='';
                        _opisPar:='Wyrób: %1; jm: %2'@
                          [exec('FindAndGet','#table',DK,_zwwew.PRDK,,"M().KTM+' - '+M().N",''),
                           exec('FindAndGet','#table',DK,_zwwew.PRDK,,"M().J().KOD",'')];
                        __ktmdok:='%1'@[exec('FindAndGet','#table',DK,_zwwew.PRDK,,"M().KTM",'')];
                        __nazdok:='%1'@[exec('FindAndGet','#table',DK,_zwwew.PRDK,,"M().N",'')];
                        __jmdok:='%1'@[exec('FindAndGet','#table',DK,_zwwew.PRDK,,"M().J().KOD",'')];
                        _typ:='ZWROT';
                        _plus:='';
                        _rodz:='X';
                        _this:=0;
                        _dt:=date(0,0,0);
                        _da:=date(0,0,0);
                        _ta:=time(0,0,0);
                        _pow:='';
                        _kh:='';
                        _dk_ref:='';
                        _nd_ref:='';
                        _zam_rn:='';
                        _fap_ref:='';
                        _faks_ref:='';
                        _part_ref:=_zwwew.PARTIA;
                        _zlec:=_zwwew.ZLSYM;

                        _tree_ref:=exec('hist_add','magdok_wspolne',_refs,_dokument,_typ,_magazyn,_opisPar,_plus,_rodz
                         ,_this,_dt,_da,_ta,_pow,_kh,_dk_ref,_nd_ref,_zam_rn,_fap_ref,_faks_ref,_part_ref,_zlec,,_prdk);
                        _zwwew.clear();
                        {? _tree_ref
                        || __thist.clear();
                           __thist.prefix(_zwwew.REF,);
                           {? ~__thist.first()
                           || __thist.blank();
                              __thist.REF:=_zwwew.REF;
                              __thist.add(1)
                           ?};
                           _msk:=form(8+_zwwew.PRDK)+3;
                           ND.cntx_psh();
                           DK.cntx_psh();
                           ND.use('nagdo'+_msk);
                           DK.use('dokma'+_msk);
                           DK.prefix();
                           {? DK.seek(_zwwew.PRDK)
                           || exec('his_dokm','magdok_wspolne',DK.N().MAG().SYM,DK.M().KTM,DK.RDK,DK.NDK
                               ,_tree_ref,ND.NDSQL,1)
                           ?};
                           ND.cntx_pop();
                           DK.cntx_pop()
                        ?};
                        _zwwew.next()
                     !};
                     {? _zwwew.first()
                     || {!
                        |? __thist.clear();
                           __thist.prefix(_zwwew.REF,);
                           {? __thist.first()
                           || __thist.del()
                           ?};
                           _zwwew.next()
                        !}
                     ?}
                  ?};
                  obj_del(_zparn);
                  obj_del(_rappr);
                  obj_del(_zwwew);
                  ZPARS.cntx_pop();
                  ND.cntx_pop();
                  DK.cntx_pop()
               ?}
            ?};

            DK.next()
         !}
      ?};
      OKR.next()
   !}
?};
OKR.cntx_pop();

__hist.cntx_pop();
DK_HS.cntx_pop();
DK.cntx_pop();
ND.cntx_pop();
{? _dost_ref<>''
|| __thist.clear();
   __thist.prefix(_dost_ref,);
   {? __thist.first()
   || __thist.del()
   ?}
?};
:: NUCO PK - rozbudowa o zmienne globalne - brak na miejsca lokalne
VAR_DEL.delete('__ktmdok','__nazdok','__jmdok');
_tree_ref


\tab_zokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: tabela dokumentow nie lub zaakceptowanych
::   WE:  _a - data dla ktorej kontrolujemy
::       [_b] - czy kontrolowac dokumenty zaakceptowane powyzej danej daty 2-rowniez niezaakceptowane 3-uzupeln. ceny
::       [_c] - do daty
::       [_d] - INN.ref PRC+
::       [_e] - INN.ref PRC-
::       [_f] - godzina, dla której kontrolujemy
::       [_g] - do godziny - parametr dla _c
::       [_h] - 1-dla pełnej 0-bez znaczenia (domyślnie) - wartość dla _c
::       [_i] - ref sprawdzanej inwentaryzacji
::   WY: tabela danych
::  OLD: \tab_zokr/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>4 || _c:=date(0,0,0) ?} || _c:=date(0,0,0) ?};
{? _>=4 || {? type_of(_d)<>2 || _d:='' ?} || _d:='' ?};
{? _>=5 || {? type_of(_e)<>2 || _e:='' ?} || _e:='' ?};
_tmod:={? var_pres('_f')=type_of(time()) || _f || time(0,0,0) ?};
_tmdo:={? var_pres('_g')=type_of(time()) || _g || time(0,0,0) ?};
_typA:={? var_pres('_h')=type_of(0) || _h || 0 ?};
_innA:={? ~_typA & var_pres('_i')=type_of(null()) || _i || null() ?};

_onlyod:=0;
_onlydo:=0;
{? _c<>date(0,0,0)
|| _onlyod:=_tmod=time(0,0,0);
   _onlydo:=_tmdo=time(0,0,0)
?};

_tab:=tab_tmp(5,'AKC','STRING[1]',''
       ,'DATA','DATE',''
       ,'SYMBOL','STRING[20]',''
       ,'REFN','STRING[16]',''
       ,'GODZ','TIME',''
       ,'MAGAZYN','STRING[20]',''
       ,'TYP','STRING[10]',''
       ,'NR','INTEGER',''
       ,'OKRES','INTEGER',''
       ,'POZ','INTEGER',''
       ,'INDEKS','STRING[50]','');

:: aktualna maska
_okr:=ND.name()+2;
_odd:=1+(ND.name()+3);
_jest:=0;

OKR.cntx_psh();
ND.cntx_psh;
DK.cntx_psh;

OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first()
|| {!
   |?
      exec('mag_open','open_tab',_odd,($OKR.ROK+2));

      {? _c<>date(0,0,0)
      ||
::       sprawdzenie wg dat

::       dokumenty magazynowe z danego magazynu
         ND.index('NAGDT');
         ND.prefix(ST.MAG);
         {? ND.first()
         || {!
            |? {? {? _onlyod
                  || ND.D>_a
                  || (ND.D>_a) | (ND.D=_a & {? _typA
                                            || ND.T>_tmod
                                            || {? _tmod<>time(0,0,0) & ND.T=time(0,0,0)
                                               || 0
                                               || ND.T>_tmod
                                               ?}
                                            ?})
                  ?}
                & {? _onlydo
                  || ND.D<=_c
                  || (ND.D<_c) | (ND.D=_c & {? _typA
                                            || ND.T<=_tmdo
                                            || {? _tmod<>time(0,0,0) & ND.T=time(0,0,0)
                                               || 0
                                               || ND.T<=_tmdo
                                               ?}
                                            ?})
                  ?}
               || _add:=1;
                  {? ~_typA & _innA<>null() & _tmod<>time(0,0,0)
                  || _add:=0;
                     DK.index('DOKMAG');
                     DK.prefix(ND.ref());
                     {? DK.first()
                     || {!
                        |? _add:=exec('FindInSet','#table','INP','KOD',DK.M,_innA,,,,null())<>null();
                           ~_add & DK.next()
                        !}
                     ?}
                  ?};
                  _tab.clear();
                  _tab.blank();
                  _tab.AKC:=ND.Z;
                  _tab.DATA:=ND.D;
                  _tab.GODZ:=ND.T;
                  _tab.SYMBOL:=ND.SYM;
                  _tab.MAGAZYN:=ND.MAG().SYM;
                  _tab.TYP:=ND.TYP().T;
                  _tab.NR:=ND.NR;
                  _tab.OKRES:=ND.AM;
                  _tab.REFN:=$ND.ref();
                  {? _add || _tab.add() ?}
               ?};
               ND.next()
            !}
         ?};
::       dokumenty magazynowe z drugiego magazynu
         ND.index('NAGMM');
         ND.prefix(ST.MAG);
         {? ND.first()
         || {!
            |? {? {? _onlyod
                  || ND.D>_a
                  || (ND.D>_a) | (ND.D=_a & {? _typA
                                            || ND.T>_tmod
                                            || {? _tmod<>time(0,0,0) & ND.T=time(0,0,0)
                                               || 0
                                               || ND.T>_tmod
                                               ?}
                                            ?})
                  ?}
                & {? _onlydo
                  || ND.D<=_c
                  || (ND.D<_c) | (ND.D=_c & {? _typA
                                            || ND.T<=_tmdo
                                            || {? _tmod<>time(0,0,0) & ND.T=time(0,0,0)
                                               || 0
                                               || ND.T<=_tmdo
                                               ?}
                                            ?})
                  ?}
               || _add:=1;
                  {? ~_typA & _innA<>null() & _tmod<>time(0,0,0)
                  || _add:=0;
                     DK.index('DOKMAG');
                     DK.prefix(ND.ref());
                     {? DK.first()
                     || {!
                        |? _add:=exec('FindInSet','#table','INP','KOD',DK.M,_innA,,,,null())<>null();
                           ~_add & DK.next()
                        !}
                     ?}
                  ?};
                  _tab.clear();
                  _tab.blank();
                  _tab.AKC:=ND.Z;
                  _tab.DATA:=ND.D;
                  _tab.GODZ:=ND.T;
                  _tab.SYMBOL:=ND.SYM;
                  _tab.MAGAZYN:=ND.MAG().SYM;
                  _tab.TYP:=ND.TYP().T;
                  _tab.NR:=ND.NR;
                  _tab.OKRES:=ND.AM;
                  _tab.REFN:=$ND.ref();
                  {?_add || _tab.add() ?}
               ?};
               ND.next()
            !}
         ?}
      |? _b>3
      ||
::       dokumenty magazynowe z danego magazynu
         ND.index('NAGDT');
         ND.prefix(ST.MAG,'N');
         {? ND.first()
         || {!
            |? {? (_b=4 & ND.INN='T' & ND.TYP().INW='I')
                  | (_b=5 & (ND.INN='T' & ND.TYP().INW='E' & ND.TYP().P='T' & (_d='' | _d<>$ND.ref)
                    | ND.INN='T' & ND.TYP().INW='E' & ND.TYP().P='N' & (_e='' | _e<>$ND.ref)))
               || _tab.clear();
                  _tab.blank();
                  _tab.AKC:=ND.Z;
                  _tab.DATA:=ND.D;
                  _tab.GODZ:=ND.T;
                  _tab.SYMBOL:=ND.SYM;
                  _tab.MAGAZYN:=ND.MAG().SYM;
                  _tab.TYP:=ND.TYP().T;
                  _tab.NR:=ND.NR;
                  _tab.OKRES:=ND.AM;
                  _tab.REFN:=$ND.ref();
                  _jest:=_tab.add()
               ?};
               ~_jest & ND.next()
            !}
         ?}
      |? _b<>3
      ||
::       dokumenty magazynowe z danego magazynu
         ND.index('NAGDT');
         {? _b || ND.prefix(ST.MAG) || ND.prefix(ST.MAG,'N') ?};
         {? ND.first()
         || {!
            |? {? ((ND.Z='N' & (ND.D<_a | (ND.D=_a & (_tmod=time(0,0,0) | ND.T=time(0,0,0) | ND.T<=_tmod))))
                   | {? _b=2
                     || ND.Z='T' & (ND.D>_a | (ND.D=_a & _tmod<>time(0,0,0) & ND.T>_tmod))
                     |? _b=1
                     || ND.D>_a | (ND.D=_a & _tmod<>time(0,0,0) & ND.T>_tmod)
                     || 0
                     ?})
                  &  {? _b<>2 | (ND.INN='T' & ND.TYP().INW='I')
                     || 1
                     || ((ND.INN='T' & ND.TYP().INW='I' & ND.TYP().P='T') & (_d='' | _d<>$ND.ref)
                        | (ND.INN='T' & ND.TYP().INW='I' & ND.TYP().P='N') & (_e='' | _e<>$ND.ref))
                     ?}
               || _tab.clear();
                  _tab.blank();
                  _tab.AKC:=ND.Z;
                  _tab.DATA:=ND.D;
                  _tab.GODZ:=ND.T;
                  _tab.SYMBOL:=ND.SYM;
                  _tab.MAGAZYN:=ND.MAG().SYM;
                  _tab.TYP:=ND.TYP().T;
                  _tab.NR:=ND.NR;
                  _tab.OKRES:=ND.AM;
                  _tab.REFN:=$ND.ref();
                  _tab.add()
               ?};
               ND.next()
            !}
         ?};
::       dokumenty magazynowe z drugiego magazynu
         ND.index('NAGMM');
         {? _b || ND.prefix(ST.MAG) || ND.prefix(ST.MAG,'N') ?};
         {? ND.first()
         || {!
            |? {? ((ND.Z='N' & (ND.D<_a | (ND.D=_a & (_tmod=time(0,0,0) | ND.T=time(0,0,0) | ND.T<=_tmod))))
                   | {? _b=2
                     || ND.Z='T' & (ND.D>_a | (ND.D=_a & _tmod<>time(0,0,0) & ND.T>_tmod))
                     |? _b=1
                     || ND.D>_a | (ND.D=_a & _tmod<>time(0,0,0) & ND.T>_tmod)
                     || 0
                     ?})
                  &  {? _b<>2 | ~(ND.INN='T' & ND.TYP().INW='E')
                     || 1
                     || ((ND.INN='T' & ND.TYP().INW='I' & ND.TYP().P='T') & (_d='' | _d<>$ND.ref)
                        | (ND.INN='T' & ND.TYP().INW='I' & ND.TYP().P='N') & (_e='' | _e<>$ND.ref))
                     ?}
               || _tab.clear();
                  _tab.blank();
                  _tab.AKC:=ND.Z;
                  _tab.DATA:=ND.D;
                  _tab.GODZ:=ND.T;
                  _tab.SYMBOL:=ND.SYM;
                  _tab.MAGAZYN:=ND.MAG().SYM;
                  _tab.TYP:=ND.TYP().T;
                  _tab.NR:=ND.NR;
                  _tab.OKRES:=ND.AM;
                  _tab.REFN:=$ND.ref();
                  _tab.add()
               ?};
               ND.next()
            !}
         ?}
      ||
::       sprawdzenie uzupelnienia cen
         ND.index('NAGDT');
         ND.prefix(ST.MAG,'T');
::----------------------------------------------------------------------------------------------------------------------
::  MOD: PeKa [04.11.2022]
:: OPIS: Łatka do akceptacji inwetaryzacji z magazynu ZAO ( zastawnowić się nad zmianą magazynu na ilościowy)
::----------------------------------------------------------------------------------------------------------------------
         {? ND.first() & ND.MAG().IL<>'T' & ND.MAG().SYM<>'ZAO' & ND.MAG().SYM<>'MAP'
         || _ndxdk:=DK.ndx_tmp('',0,'N',,,'M','RODZ',,'C',,);
            {!
            |? {? (ND.D<_a) | (ND.D=_a & (_tmod=time(0,0,0) | ND.T=time(0,0,0) | ND.T<=_tmod)) & ND.MAG().IL<>'T'
               || DK.index(_ndxdk);
                  DK.prefix(ND.ref(),'T',0);
                  {? DK.first()
                  || {!
                     |? _tab.clear();
                        _tab.blank();
                        _tab.AKC:=ND.Z;
                        _tab.DATA:=ND.D;
                        _tab.GODZ:=ND.T;
                        _tab.SYMBOL:=ND.SYM;
                        _tab.MAGAZYN:=ND.MAG().SYM;
                        _tab.TYP:=ND.TYP().T;
                        _tab.NR:=ND.NR;
                        _tab.OKRES:=ND.AM;
                        _tab.REFN:=$ND.ref();
                        _tab.POZ:=DK.P;
                        _tab.INDEKS:=DK.M().KTM;
                        _tab.add();
                        DK.next()
                     !}
                  ?}
               ?};
               ND.next()
            !};
            DK.ndx_drop(_ndxdk)
         ?}
      ?};
      ~_jest & OKR.next()
   !}
?};
exec('mag_open','open_tab',_odd,_okr);
OKR.cntx_pop();
ND.cntx_pop;
DK.cntx_pop;

:: faktury typu G
REZ.cntx_psh();
FAP.cntx_psh();
FAKS.cntx_psh();
{? _b<4 & _c<>date(0,0,0)
|| REZ.index('NRK');
   REZ.prefix('F');
   {? REZ.first()
   || {!
      |? _reffap:=ref_name(REZ.FAP);

         {? REZ.MG=ST.MAG & _reffap<>''
         || exec('fak_open','open_tab',_odd,form(8+_reffap)+2);
            {? REZ.FAP().FAKS().D>_a & REZ.FAP().FAKS().D<_c & REZ.FAP().FAKS().WHERE='G' & REZ.FAP().FAKS().AKC='N'
            || _tab.clear();
               {? ~_tab.find_key('N',REZ.FAP().FAKS().D,REZ.FAP().FAKS().SYM,$REZ.FAP().FAKS)
               || _tab.clear();
                  _tab.blank();
                  _tab.AKC:=REZ.FAP().FAKS().AKC;
                  _tab.DATA:=REZ.FAP().FAKS().D;
                  _tab.SYMBOL:=REZ.FAP().FAKS().SYM;
                  _tab.MAGAZYN:=REZ.MG().SYM;
                  _tab.TYP:=REZ.FAP().FAKS().T().T;
                  _tab.NR:=REZ.FAP().FAKS().NR;
                  _tab.OKRES:=REZ.FAP().FAKS().AM;
                  _tab.REFN:=$REZ.FAP().FAKS;
                  _tab.add()
               ?}
            ?}
         ?};
         REZ.next()
      !}
   ?}
|? _b<4 & _b<>3
|| REZ.index('NRK');
   REZ.prefix('F');
   {? REZ.first()
   || {!
      |? _reffap:=ref_name(REZ.FAP);

         {? REZ.MG=ST.MAG & _reffap<>''
         || exec('fak_open','open_tab',_odd,form(8+_reffap)+2);
            {? (_b | _b=0 & REZ.FAP().FAKS().D<=_a) & REZ.FAP().FAKS().WHERE='G' & REZ.FAP().FAKS().AKC='N'
            || _tab.clear();
               {? ~_tab.find_key('N',REZ.FAP().FAKS().D,REZ.FAP().FAKS().SYM,$REZ.FAP().FAKS)
               || _tab.clear();
                  _tab.blank();
                  _tab.AKC:=REZ.FAP().FAKS().AKC;
                  _tab.DATA:=REZ.FAP().FAKS().D;
                  _tab.SYMBOL:=REZ.FAP().FAKS().SYM;
                  _tab.MAGAZYN:=REZ.MG().SYM;
                  _tab.TYP:=REZ.FAP().FAKS().T().T;
                  _tab.NR:=REZ.FAP().FAKS().NR;
                  _tab.OKRES:=REZ.FAP().FAKS().AM;
                  _tab.REFN:=$REZ.FAP().FAKS;
                  _tab.add()
               ?}
            ?}
         ?};
         REZ.next()
      !}
   ?}
?};
{? _b<4 || exec('fak_open','open_tab',_odd,_okr) ?};
REZ.cntx_pop;
FAP.cntx_pop;
FAKS.cntx_pop;
_tab


\ctrlWycen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.02]
:: OPIS: Sprawdza czy dla pozycji:
::        - cena jest rózna od zera
::        - dana dostawa jest składowa i brak cen zerowych
::   WY: 1-wyceniona 0-nie wszystkie składowe zostały wycenione
:: UWAGA. kontekst wywołania aktualne DK
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
exec('mag_psh','open_tab');
{? DK.C=0
|| _res:=0
|? DK.PRDK<>''
  & (_nag:=exec('FindAndGet','#table',DK,DK.PRDK,,"$N",''))<>''
  & exec('FindAndGet','#table',ND,_nag,,"TYP().DN='K'",0)
|| _sklsql:=DK.PRDK;
   OKR.cntx_psh();
:: przebieg pierwszy zbiera wydania wg SKLSQL dla danego materiału
   _odrok:=2000+(#(form(8+_sklsql)+2));
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.find_key(_odrok)
   || {!
      |? exec('mag_open','open_tab',ST.ODDZ,form(OKR.ROK-2000,-2,0,'99'));
         DK.index('SKLSQL');
         DK.prefix(_sklsql,);
         {? DK.first()
         || {!
            |? _res:=DK.C<>0;
               _res & DK.next()
            !}
         ?};
         _res & OKR.next()
      !}
   ?};
   OKR.cntx_pop()
?};
:: jp 20210914
:: zmiana warunku dla pozycji z ceną zerowa dla kodu pochodzącego - dostawa pierwotna z magazynu oznaczonego jako nieksięgowany
_ksg:={? DK.C=0 & (2+DK.M().KTM='03' | 2+DK.M().KTM='05' )
      || 1
      || 0
      ?};
{? _ksg=1 & _res=0
|| _res:=1
?};
:: jp 20210914
exec('mag_pop','open_tab');
_res


