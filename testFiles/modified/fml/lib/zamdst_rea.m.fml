:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zamdst_rea.fml
:: Utworzony: 06.07.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Obsługa zamówień dostaw - realizacje zamówień
::======================================================================================================================


\rea_zadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: realizacja dla zamowienia - tworzy drzewko w podziale na magazyny - widok przyszlej realizacji
::   WE: [_a] - potwierdzenie zamówień dostaw - ZDP_NAG.ref(), domyslnie null()
::       [_b] - dyspozycja w magazynie - TR_NZL.ref(), domyslnie null()
::       [_c] - 1-tryb dodania do listy, 0(domyślnie)-nie
::       [_d] - pozycja do realizacji
::  OLD: \rea_zadd/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
exec('openzd_psh','open_tab');

_zdp_nag:={? var_pres('_a')<>type_of(null()) || null() || _a ?};
_tr_nzl:={? var_pres('_b')<>type_of(null()) || null() || _b ?};
_add_lst:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_zd_poz:={? var_pres('_d')=type_of(null()) || _d || null() ?};

BEER.UIDDOK:='';

ZD_NAG.get();
POMOC.ZD_NAG:=ZD_NAG.ref();
POMOC.ZDP_NAG:=_zdp_nag;
POMOC.TR_NZL:=_tr_nzl;

{? ZD_NAG.r_lock(1,1,1)
||
   _wyn:=0;
   {? ~_add_lst
   || VAR_DEL.delete('__rea_tab','__rea_sel','__mg_list','__rea_wym');
   __rea_wym:=tab_tmp(2,'REA','STRING[16]',''
    ,'DKC','STRING[16]',''
    ,'LOK','STRING[16]',''
    ,'TRM','DATE',''
    ,'PAL','STRING[16]',''
    ,'ILE','REAL',''
       ,'SCEAN','STRING[128]','')
   ?};
   {? POMOC.ZDP_NAG=null() & POMOC.TR_NZL=null()
   || _qq:=$"
         select
            case when M.RODZ='U' then '' else MG.SYM end as Magazyn,
            ZD_NAG.SYM as Sym,
            ZD_POZ.POZ as Poz,
            ZD_NAG.SYM||' poz. '||ZD_POZ.POZ as Opis,
            M.KTM as Indeks,
            M.N as Nazwa,
            JM.KOD as JM,
            JM.KOD as J2,
            ZD_POZ.IL as IL,
            ZD_POZ.IL_POZ as IL_POZ,
            ZD_POZ.IL as IL_REA,
            ZD_POZ.IL2 as IL2,
            ZD_POZ.CENA as Cena,
            ZD_POZ.CENA as Cena1,
            SLO.KOD as WAL,
            ZD_POZ.CWAL as CWAL,
            ' ' as Stan,
            M.N as Info,
            'N' as UPR_MG,
            'N' as ZAM_OKR,
            SPACE(16) as ZDPP_REF,
            ZD_POZ.reference as ZD_POZ,
            ZD_NAG.reference as ZD_NAG,
            MG.reference as MG_REF,
            M.reference as M_REF,
            MG.TYP MGTYP,
            'x' as X,
            'Z' as RODZ,
            MG.IL CZYIL,
            ZD_NAG.T as TYP_REF,
            M.DOKL as DOKL,
            M.DOKL_C as DOKL_C,
            '                              ' as PAL,
            ZD_NAG.DATA as TW,
            M.CZY_TW as CZY_TW,
            SPACE(50) as ZD_P_SYM,
            SPACE(16) as ZDPP_REF,
            SPACE(16) as TR_REF,
            M.RODZ TOWAR,
            ZD_NAG.JMZ JMZ,
            ZKON.SYM KONTRAKT
         from
            ZD_POZ
            join ZD_NAG using (ZD_POZ.ZD_NAG,ZD_NAG.reference)
            left join MG using (ZD_POZ.MG,MG.reference)
            join M using (ZD_POZ.M,M.reference)
            join JM using (ZD_POZ.JM,JM.reference)
            left join SLO using (ZD_POZ.WAL,SLO.reference)
            left join ZKON using (ZD_NAG.ZKON,ZKON.reference)
         where
            ZD_POZ.ZD_NAG=:_a and ZD_POZ.END=0 and (:_b='' or ZD_POZ.REFERENCE=:_b)
         order by
            1,2,3,4,5
      ";
      BEER.JMZ:=ZD_NAG.JMZ;
      {? ~_add_lst
      || __rea_tab:=sql(_qq,ZD_NAG.ref(),null())
      || _buf:=sql(_qq,ZD_NAG.ref(),_zd_poz)
      ?}
   |? POMOC.ZDP_NAG<>null() & POMOC.TR_NZL=null()
   || _qq:=$"
         select
            case when M.RODZ='U' then '' else MG.SYM end as Magazyn,
            ZD_NAG.SYM as Sym,
            ZD_POZ.POZ as Poz,
            ZD_NAG.SYM||' poz. '||ZD_POZ.POZ as Opis,
            M.KTM as Indeks,
            M.N as Nazwa,
            JM.KOD as JM,
            JM.KOD as J2,
            ZDP_POZ.IL as IL,
            ZDP_POZ.IL as IL_POZ,
            ZDP_POZ.IL as IL_REA,
            ZD_POZ.IL2 as IL2,
            ZDP_POZ.CENA as Cena,
            SLO.KOD as WAL,
            ZDP_POZ.CWAL as CWAL,
            ' ' as Stan,
            M.N as Info,
            'N' as UPR_MG,
            'N' as ZAM_OKR,
            ZDP_POZ.ZD_POZ as ZD_POZ,
            ZD_NAG.reference as ZD_NAG,
            MG.reference as MG_REF,
            M.reference as M_REF,
            MG.TYP as MGTYP,
            'x' as X,
            'P' as RODZ,
            MG.IL CZYIL,
            ZD_NAG.T as TYP_REF,
            M.DOKL as DOKL,
            M.DOKL_C as DOKL_C,
            '                              ' as PAL,
            ZD_NAG.DATA as TW,
            M.CZY_TW as CZY_TW,
            SPACE(50) as ZD_P_SYM,
            ZDP_POZ.reference as ZDPP_REF,
            SPACE(16) as TR_REF,
            M.RODZ TOWAR,
            ZD_NAG.JMZ JMZ,
            ZKON.SYM KONTRAKT
         from
            ZDP_POZ
            join ZD_POZ using (ZDP_POZ.ZD_POZ,ZD_POZ.reference)
            join ZD_NAG using (ZD_POZ.ZD_NAG,ZD_NAG.reference)
            left join MG using (ZD_POZ.MG,MG.reference)
            join M using (ZD_POZ.M,M.reference)
            join JM using (ZD_POZ.JM,JM.reference)
            left join SLO using (ZD_POZ.WAL,SLO.reference)
            left join ZKON using (ZDP_POZ.ZKON,ZKON.reference)
         where
            ZDP_POZ.ZDP_NAG=:_a and to_date(:_b)>=ZD_NAG.DATA and ZDP_POZ.END=0 and ZD_POZ.END=0
            and (:_c='' or ZDP_POZ.REFERENCE=:_c)
         order by
            1,2,3,4
      ";
      {? ~_add_lst
      || __rea_tab:=sql(_qq,POMOC.ZDP_NAG,date(ST.AR,ST.AM,0),null())
      || _buf:=sql(_qq,POMOC.ZDP_NAG,date(ST.AR,ST.AM,0),_zd_poz)
      ?}
   |? POMOC.ZDP_NAG=null() & POMOC.TR_NZL<>null()
   || _tt:=sql(
         'select '
         '  substr(TR_ZL.POZ_REF,33,16) POZ_REF, '
         '  substr(TR_ZL.DOK_REF,33,16) DOK_REF, '
         '  case when TR_ZL.ZIL>0 then TR_ZL.ZIL else TR_ZL.IL end as IL, '
         '  TR_ZL.REFERENCE as TR_REF '
         'from '
         '  TR_ZL '
         'where '
         '  TR_ZL.TR_NZL=:_a and TR_ZL.IL>0 '
         'order by '
         '  2,1',POMOC.TR_NZL);

      _qq:=$"
         select
            case when M.RODZ='U' then '' else MG.SYM end as Magazyn,
            ZD_NAG.SYM as Sym,
            ZD_POZ.POZ as Poz,
            ZD_NAG.SYM||' poz. '||ZD_POZ.POZ as Opis,
            M.KTM as Indeks,
            M.N as Nazwa,
            JM.KOD as JM,
            JM.KOD as J2,
            :_a.IL as IL,
            ZD_POZ.IL_POZ as IL_POZ,
            :_a.IL as IL_REA,
            ZD_POZ.IL2 as IL2,
            ZD_POZ.CENA as Cena,
            ZD_POZ.CENA as Cena1,
            SLO.KOD as WAL,
            ZD_POZ.CWAL as CWAL,
            ' ' as Stan,
            M.N as Info,
            'N' as UPR_MG,
            'N' as ZAM_OKR,
            SPACE(16) as ZDPP_REF,
            ZD_POZ.reference as ZD_POZ,
            ZD_NAG.reference as ZD_NAG,
            MG.reference as MG_REF,
            M.reference as M_REF,
            MG.TYP MGTYP,
            'x' as X,
            'D' as RODZ,
            MG.IL CZYIL,
            ZD_NAG.T as TYP_REF,
            M.DOKL as DOKL,
            M.DOKL_C as DOKL_C,
            '                              ' as PAL,
            ZD_NAG.DATA as TW,
            M.CZY_TW as CZY_TW,
            SPACE(50) as ZD_P_SYM,
            SPACE(16) as ZDPP_REF,
            :_a.TR_REF as TR_REF,
            M.RODZ TOWAR,
            ZD_NAG.JMZ JMZ,
            ZKON.SYM KONTRAKT
         from
            :_a
            join ZD_POZ using (:_a.POZ_REF,ZD_POZ.reference)
            join ZD_NAG using (:_a.DOK_REF,ZD_NAG.reference)
            left join MG using (ZD_POZ.MG,MG.reference)
            join M using (ZD_POZ.M,M.reference)
            join JM using (ZD_POZ.JM,JM.reference)
            left join SLO using (ZD_POZ.WAL,SLO.reference)
            left join ZKON using (ZD_NAG.ZKON,ZKON.reference)
         order by
            1,2,3,4,5
      ";
      __rea_tab:=sql(_qq,_tt);
      obj_del(_tt)
   |? POMOC.ZDP_NAG<>null() & POMOC.TR_NZL<>null()
   || _tt:=sql(
         'select '
         '  substr(TR_ZL.POZ_REF,33,16) POZ_REF, '
         '  substr(TR_ZL.DOK_REF,33,16) DOK_REF, '
         '  case when TR_ZL.ZIL>0 then TR_ZL.ZIL else TR_ZL.IL end as IL, '
         '  TR_ZL.REFERENCE as TR_REF '
         'from '
         '  TR_ZL '
         'where '
         '  TR_ZL.TR_NZL=:_a and TR_ZL.IL>0 '
         'order by '
         '  2,1',POMOC.TR_NZL);

      _qq:=$"
         select
            case when M.RODZ='U' then '' else MG.SYM end as Magazyn,
            ZD_NAG.SYM as Sym,
            ZD_POZ.POZ as Poz,
            ZD_NAG.SYM||' poz. '||ZD_POZ.POZ as Opis,
            M.KTM as Indeks,
            M.N as Nazwa,
            JM.KOD as JM,
            JM.KOD as J2,
            ZDP_POZ.IL as IL,
            ZDP_POZ.IL as IL_POZ,
            :_a.IL as IL_REA,
            ZDP_POZ.CENA as Cena,
            SLO.KOD as WAL,
            ZDP_POZ.CWAL as CWAL,
            ' ' as Stan,
            M.N as Info,
            'N' as UPR_MG,
            'N' as ZAM_OKR,
            ZDP_POZ.ZD_POZ as ZD_POZ,
            ZD_NAG.reference as ZD_NAG,
            MG.reference as MG_REF,
            M.reference as M_REF,
            MG.TYP as MGTYP,
            'x' as X,
            'D' as RODZ,
            MG.IL CZYIL,
            ZD_NAG.T as TYP_REF,
            M.DOKL as DOKL,
            M.DOKL_C as DOKL_C,
            '                              ' as PAL,
            ZD_NAG.DATA as TW,
            M.CZY_TW as CZY_TW,
            SPACE(50) as ZD_P_SYM,
            ZDP_POZ.reference as ZDPP_REF,
            :_a.TR_REF as TR_REF,
            M.RODZ TOWAR,
            ZD_NAG.JMZ JMZ,
            ZKON.SYM KONTRAKT
         from
            :_a
            join ZDP_POZ using(:_a.POZ_REF,ZDP_POZ.reference)
            join ZD_POZ using (ZDP_POZ.ZD_POZ,ZD_POZ.reference)
            join ZD_NAG using (ZD_POZ.ZD_NAG,ZD_NAG.reference)
            left join MG using (ZD_POZ.MG,MG.reference)
            join M using (ZD_POZ.M,M.reference)
            join JM using (ZD_POZ.JM,JM.reference)
            left join SLO using (ZD_POZ.WAL,SLO.reference)
            left join ZKON using (ZDP_POZ.ZKON,ZKON.reference)
         where ZDP_POZ.END=0 and ZD_POZ.END=0
         order by
            1,2,3,4,5
      ";
      __rea_tab:=sql(_qq,_tt);
      obj_del(_tt)
   ?};
   BEER.JMZ:=POMOC.ZD_NAG().JMZ;

:: oblicza ilosc pozostala do realizacji
   _Tab:={? ~_add_lst || __rea_tab || _buf ?};
   {? POMOC.ZDP_NAG<>null()
   || {? _Tab.first()
      || {!
         |? _jmz:=_Tab.JMZ & exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"JM<>J2 & WS2<>1",0);
            _jmg:=exec('FindAndGet','#table',M,_Tab.M_REF,,"J2",null());
            {? _jmg=null() & _jmz
            || _ws2:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"WS2",1);
               _dokl_m:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"M().DOKL",3);
               _dokl_c:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"M().DOKL_C",3);
               _Tab.IL:=_Tab.IL/_ws2 $_dokl_m;
               _Tab.JM:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"M().J().KOD",_Tab.JM);
               _Tab.CENA:=_Tab.CENA*_ws2 $ _dokl_c
            ?};
            {? _Tab.CZY_TW='T' & (_twd:=exec('FindAndGet','#table',M,_Tab.M_REF,,"TWD",0); _twd>0)
            || _Tab.TW:=date()+_twd
            || _Tab.TW:=date(0,0,0)
            ?};
            _Tab.IL_POZ:=_Tab.IL-exec('obl_rea','zamdst_rea',_Tab.ZDPP_REF);
            _Tab.CZY_TW:={? _Tab.CZY_TW='T' || '<' || '' ?};
            {? _Tab.IL_POZ>0
            || _Tab.IL_REA:=_Tab.IL_POZ
            || _Tab.X:='-'
            ?};
            _Tab.PAL:='';
            _Tab.ZD_P_SYM:='%1 z dnia %2'@[POMOC.ZDP_NAG().SYM,$POMOC.ZDP_NAG().D_WYS];
            _Tab.put();
            _Tab.next()
         !};

         _Tab.first();
         {!
         |?
            {? _Tab.X='-' || _Tab.del() || _Tab.next() ?}
         !}
      ?}
   ||
      {? _Tab.first()
      || {!
         |? _jmz:=_Tab.JMZ & exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"JM<>J2 & WS2<>1",0);
            _jmg:=exec('FindAndGet','#table',M,_Tab.M_REF,,"J2",null());
            exec('roz_ptw','zamdst_ptw',_Tab.ZD_POZ,$_Tab.ref());
            {? _jmg=null() & _jmz
            || _ws2:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"WS2",1);
               _dokl_m:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"M().DOKL",3);
               _dokl_c:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"M().DOKL_C",3);
               _Tab.IL_POZ:=_Tab.IL_POZ/_ws2 $_dokl_m;
               _Tab.JM:=exec('FindAndGet','#table',ZD_POZ,_Tab.ZD_POZ,,"M().J().KOD",_Tab.JM);
               _Tab.CENA:=_Tab.CENA*_ws2 $ _dokl_c
            ?};
            _Tab.IL_POZ:=_Tab.IL_POZ-(__zdp_sum.IL_PTW-__zdp_sum.IL_REA);

::         __rea_tab.IL_POZ:=__rea_tab.IL_POZ;
            {? _Tab.CZY_TW='T' & (_twd:=exec('FindAndGet','#table',M,_Tab.M_REF,,"TWD",0); _twd>0)
            || _Tab.TW:=date()+_twd
            || _Tab.TW:=date(0,0,0)
            ?};
            _Tab.CZY_TW:={? _Tab.CZY_TW='T' || '<' || '' ?};
            {? _Tab.IL_POZ>0
            || {? _Tab.RODZ<>'D' || _Tab.IL_REA:=_Tab.IL_POZ ?}
            || _Tab.X:='-'
            ?};
            _stan:='X';
            _info:='System nie odnalazł aktywnego zamówienia.';
            ZD_NAG.cntx_psh();
            ZD_POZ.cntx_psh();
            ZD_POZ.clear();
            {? 8+_Tab.ZD_POZ=ZD_POZ.name() & ZD_POZ.seek(_Tab.ZD_POZ,8+_Tab.ZD_POZ)
            ||
               _stan:=ZD_POZ.ZD_NAG().STAN;
               _info:=POM.STAN
            ?};
            ZD_POZ.cntx_pop();
            ZD_NAG.cntx_pop();
            _Tab.STAN:=_stan;
            _Tab.INFO:='Zamówienie: '+_info;
            {? _Tab.TOWAR='U'
            ||
               _Tab.UPR_MG:='T'
            |? _Tab.MAGAZYN<>''
            ||
               {? _Tab.ZAM_OKR='T'
               || _Tab.INFO:='magazyn jest ZAMKNIĘTY'
               ?};
               {? exec('upr_mg','zamdst_rea',_Tab.MAGAZYN)
               ||
                  _Tab.UPR_MG:='T'
               ||
                  _Tab.UPR_MG:='N';
                  _Tab.INFO:='BRAK uprawnień do magazynu'
               ?}
            ?};
            _Tab.PAL:='';
            _Tab.IL:=_Tab.IL $_Tab.DOKL;
            _Tab.IL_POZ:=_Tab.IL_POZ $_Tab.DOKL;
            _Tab.IL_REA:=_Tab.IL_REA $_Tab.DOKL;
:: NUCO [PK] - dla magazynu MAP cena na dokument magazynowy zerowana - magazyn prowadzony ilosciowo
            {? _Tab.MAGAZYN='MAP'
            || _Tab.CENA:=_Tab.CWAL:=0
            || _Tab.CENA:=_Tab.CENA $_Tab.DOKL_C;
               _Tab.CWAL:=_Tab.CWAL $_Tab.DOKL_C
            ?};
            _Tab.put();
            _Tab.next()
         !};
::    dodanie pozycji z potwierdzeń do realizacji
         {? var_pres('__zdp_roz')>100
         || _Tab.cntx_psh();
            __zdp_roz.clear();
            {? __zdp_roz.first()
            || {!
               |? {? __zdp_roz.REA_TAB<>'' & (_Tab.clear(); _Tab.seek(__zdp_roz.REA_TAB))
                  || {? _Tab.RODZ<>'D'
                     || _Tab.IL_REA:=_Tab.IL_POZ:=__zdp_roz.IL_PTW-__zdp_roz.IL_REA
                     || _Tab.IL_POZ:=__zdp_roz.IL_PTW-__zdp_roz.IL_REA
                     ?};
                     _Tab.X:='x';
                     _Tab.ZD_P_SYM:=__zdp_roz.OPIS;
                     _Tab.ZDPP_REF:=__zdp_roz.ZD_P_POZ;
                     {? __zdp_roz.CENA<>0 || _Tab.CENA:=__zdp_roz.CENA ?};
                     {? __zdp_roz.CWAL<>0 || _Tab.CWAL:=__zdp_roz.CWAL ?};
                     {? __zdp_roz.KONTRAKT<>'' || _Tab.KONTRAKT:=__zdp_roz.KONTRAKT ?};
                     _Tab.add(1)
                  ?};
                  __zdp_roz.next()
               !}
            ?};
            _Tab.cntx_pop()
         ?};
         VAR_DEL.delete('__zdp_roz');

         _Tab.first();
         {!
         |?
            {? _Tab.X='-' || _Tab.del() || _Tab.next() ?}
         !}
      ?}
   ?};
:: rozpisanie wg TR_ZL o ile istnieją
   {? POMOC.TR_NZL<>null() & __rea_tab.first()
   || TR_ZL.cntx_psh();
      TR_ZLM.cntx_psh();
      {!
      |?
         {? __rea_tab.TR_REF<>'' & (TR_ZL.prefix(); TR_ZL.seek(__rea_tab.TR_REF))
         || _iledowym:={? exec('FindAndGet','#table',MG,__rea_tab.MG_REF,,"SL='T'",0) || __rea_tab.IL_REA || 0 ?};
            TR_ZLM.index('TR_ZL');
            TR_ZLM.prefix(TR_ZL.ref());
            {? TR_ZLM.first()
            || {? TR_ZLM.PAL<>null()
               || __rea_tab.PAL:=TR_ZLM.PAL().KODK;
                  __rea_tab.put(1)
               ?};
               {!
            |? __rea_wym.blank();
               __rea_wym.REA:=$__rea_tab.ref();
               __rea_wym.LOK:=$TR_ZLM.LOK;
               __rea_wym.DKC:={? TR_ZLM.DK_C=null() || 'xxx' || $TR_ZLM.DK_C ?};
               __rea_wym.TRM:=TR_ZLM.TW;
               __rea_wym.PAL:=$TR_ZLM.PAL;
               __rea_wym.ILE:=TR_ZLM.IL;
               __rea_wym.SCEAN:=TR_ZLM.SCEAN;
               __rea_wym.add(1);
                  {? TR_ZLM.LOK<>null() || _iledowym-=TR_ZLM.IL ?};
               TR_ZLM.next()
            !}
         ?};
            {? _iledowym>0 & TR_ZL.TR_NZL().EANL<>null()
            || __rea_wym.blank();
               __rea_wym.REA:=$__rea_tab.ref();
               __rea_wym.LOK:=$TR_ZL.TR_NZL().EANL;
               __rea_wym.ILE:=_iledowym;
               __rea_wym.add(1)
            ?}
         ?};
         __rea_tab.next()
      !};
      TR_ZL.cntx_pop();
      TR_ZLM.cntx_pop()
   ?};
:: sprawdza czy potwierdzenia nie sa blokowane (moga byc wlasnie edytowane lub realizowane)
   _unlock:=1;
   {? _Tab.first()
   ||
      ZDP_NAG.cntx_psh();
      ZDP_POZ.cntx_psh();
      {!
      |?
::       pozycje potwierdzen powiazane z pozycjami zamowien (tylko w biezacej masce - archiwalne nie moga byc edytowane)
         ZDP_POZ.index('ZD_POZ');
         ZDP_POZ.prefix(_Tab.ZD_POZ,_Tab.ZD_POZ);
         {? ZDP_POZ.first()
         ||
            {!
            |?
               {? ZDP_NAG.seek(ZDP_POZ.ZDP_NAG)
               ||
                  {? ~ZDP_NAG.r_lock(1,1,1)
                  ||
                     {? FUN.ask('Dokument obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@)
                     || ZDP_NAG.r_lock(1,,1)
                     ?};
                     _unlock:=0
                  ?};
                  ZDP_NAG.r_unlock()
               ||
                  _unlock:=0
               ?};
               _unlock=1 & ZDP_POZ.next()
            !}
         ?};
         _unlock=1 & _Tab.next()
      !};
      ZDP_NAG.cntx_pop();
      ZDP_POZ.cntx_pop()
   ?};
   {? _add_lst & (_buf.prefix(); _buf.first())
   || _num:=__rea_tab.fld_num();
      {!
      |? __rea_tab.cntx_psh();
         _ndx:=__rea_tab.ndx_tmp(,,'ZD_POZ',,);
         __rea_tab.index(_ndx);
         __rea_tab.prefix(_buf.ZD_POZ,);
         _add:=~__rea_tab.first() | ~__rea_tab.find_tab('first','ZDPP_REF',,'=',_buf.ZDPP_REF);
         __rea_tab.ndx_drop(_ndx);
         __rea_tab.cntx_pop();
         {? _add
         || __rea_tab.prefix();
            __rea_tab.blank();
            {! _ii:=1.._num |! __rea_tab[_ii]:=_buf[_ii] !};
            __rea_tab.add(1);
            _oki:=0;
            __mg_list.clear();
            __mg_list.prefix(__rea_tab.MAGAZYN,);
            {? __mg_list.first()
            || _oki:=1
            || __mg_list.blank();
               __mg_list.MAGAZYN:=__rea_tab.MAGAZYN;
               __mg_list.TOWAR:=__rea_tab.TOWAR;
               {? __mg_list.add(1) || _oki:=1 ?}
            ?};
            {? _oki & HELP.WAL<>exec('bl_nwal_mg','ustawienia')
            || __rea_tab.CENA:=
                  {? __rea_tab.CWAL
                  || __rea_tab.CWAL
                  |?  HELP.WAL<>null
                  || _dokl_c:=ZD_RP.ZD_POZ().M().DOKL_C;
                     {? __nd_krs>0
                     || _walj:=exec('FindInSet','#table','WAL','WAL_SYM',HELP.WAL().KOD,,"WAL.J",,,1);
                        (__rea_tab.CENA/__nd_krs*_walj)$exec('FindInSet','#table','M','MATKTM',__rea_tab.INDEKS,__rea_tab.INDEKS,"M.DOKL_C",,,ST.DOKL_C)
                     ?}
                  ?};
               __rea_tab.put()
            ?}
         ?};
         _buf.next()
      !}
   ?};
   {? _unlock=1 & ~_add_lst
   ||
::    utworzenie drzewka
      exec('rea_mk','zamdst_rea');
      {? _tr_nzl<>null() & BEER.UIDDOK<>''
      || exec('copyKoszt','transport_koszt',_tr_nzl,BEER.UIDDOK);
         exec('realDYSPdok','transport',_tr_nzl,BEER.UIDDOK)
      ?}
   |? ~_add_lst
   ||
      FUN.info('Realizacja zamówienia niemożliwa.'@)
   || _res:=_unlock=1
   ?}
||
   {? FUN.ask('Dokument obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@)
   || ZD_NAG.r_lock(1,,1)
   ?}
?};
ZD_NAG.r_unlock();
POMOC.ZD_NAG:=null;
exec('openzd_pop','open_tab');
_res


\rea_mk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: tworzy drzewko w podziale na magazyny - widok przyszlej realizacji
::       na podstawie __rea_tab utworzonej z potwierdzenia lub z zamowienia
::  OLD: \rea_mk/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;

:: parametry realizacji
VAR_DEL.delete('__nd_wal','__nd_swal','__nd_krs','__nd_dtk','__nd_kk','__nd_fzak','__nd_o'
   ,'__nd_kpw','__nd_wd','__nd_r_ak','__nd_r_po','__nd_sc','__nd_rtk','__nd_ntk','__nd_dla','__ilplus'
   ,'__filtrz','__winflt');

_tryb:={? POMOC.ZDP_NAG=null() || 0 || 1 ?};
_istr:=POMOC.TR_NZL<>null();

__filtrz:=tab_tmp(2,'SYM','STRING[20]','Symbol zamówienia'
           ,'ZDN','STRING[16]','ref SQL-owy'
           ,'DAT','DATE','Data przyjęcia'
           ,'TRM','DATE','Termin realizacji'
           ,'WYB','INTEGER','czy wbrano');
_filtrsel:=__winflt:=__filtrz.mk_sel('Zamówienia do realizacji dla %1 - %2'@[ZD_NAG.KH().KOD,ZD_NAG.KH().NAZ]
                      ,'P',,'#winiddfiltr',,,,,'U');
__filtrz.win_fld(_filtrsel,,'SYM',,,-18,,1,'Symbol'@);
__filtrz.win_fld(_filtrsel,,'DAT',,,10,,1,'Przyjęto'@);
__filtrz.win_fld(_filtrsel,,'TRM',,,10,,1,'Termin'@);
__filtrz.win_act(_filtrsel,0,'Formuła','Do &realizacji'@@,,'Przeniesienie zamówienia do realizacji'@,
                          ,"exec('add_zamr','zamdst_rea',1)",1,1,"exec('add_zamr','zamdst_rea',1)",,'R');
__filtrz.win_act(_filtrsel,0,'Rekord',,,,"exec('rekprzed','color','ZFIL#01')");
__filtrz.win_act(_filtrsel,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','ZFIL#01')",,,,,,'L');
__filtrz.win_act(_filtrsel,0,'Wyświetl',,,,"exec('dispzd_nag','zamdst_rea')");
__filtrz.win_btn(_filtrsel,'text=%1, panel=right, align=begin'['Do &realizacji'@],'menu:R',,,,,,'noempty');
__filtrz.win_sel(_filtrsel);

__nd_sc:=obj_new(7);
__ilplus:=(';ZR'*exec('get','#params',600803,2))>1;
_wgTR_NZL:=0;

{? ~__rea_tab.first()
||
   {? (';CT'*ZD_NAG.POTW)>1
   || FUN.info('Pozycje zamówienia zostały potwierdzone.\n'
               'Wystawione potwierdzenia zamówień dostaw nie zostały zaakceptowane lub przeniesiono je do archiwum.\n'
               'Aktualnie brak możliwości realizacji zamówienia dostaw %1.'@[ZD_NAG.SYM])
   || FUN.info('Brak pozycji do realizacji zamówienia dostaw %1.'@[ZD_NAG.SYM])
   ?};
   _ok:=0
|| _wgTR_NZL:=__rea_tab.RODZ='D'
?};

{? _ok=1
||
   {? ~_istr
   || exec('sprzdnkh','zamdst_rea',ZD_NAG.KH,ZD_NAG.T
       ,{? ZD_NAG.MG<>null() & ZD_NAG.MG().PAL='T' || ZD_NAG.MG || null() ?})
   || __filtrz.clear;
      __filtrz.blank();
      __filtrz.SYM:=ZD_NAG.SYM;
      __filtrz.DAT:=ZD_NAG.DATA;
      __filtrz.TRM:=ZD_NAG.DTPREAL;
      __filtrz.ZDN:=$ZD_NAG.ref();
      {? POMOC.ZD_NAG=ZD_NAG.ref() || __filtrz.WYB:=1 ?};
      __filtrz.add(1)
   ?};

   _p_lock:=POMOC.LOCK;
   _b_mw:=BEER.MW;
   _b_ww:=BEER.WW;
   _b_lw:=BEER.LW;

   POMOC.LOCK:='';
   BEER.MW:='M';
   exec('ustaw_ww','eurusd','M');
   exec('ust_lw','eurusd',0);

   DPOZ.SCKRSZM:=1;
   __cel:=exec('czycelny','zamdst_rea',ZD_NAG.ref());
   ND.clear();
   ND.blank(1);
   ND.D:=date;
   {? ND.D~1<>ST.AR | ND.D~2<>ST.AM || ND.D:=date(ST.AR,ST.AM,0) ?};
:: NUCO - Zmiana związana z ustalaniem waluty na dokumencie realizacji zamwienia
::        Dodatkwo wyliczenie i ustalenie krsu
   _brak_upr_cs:=exec('upr_cs','ceny')=0;
   ND.WAL:={? ZD_NAG.WAL<>null
              || ZD_NAG.WAL
              || exec('bl_wal','ustawienia')
              ?};
   {? _brak_upr_cs
   || ND.NSWAL:=ZD_NAG.SWAL;
      ND.KRS:=ZD_NAG.KRS;
      ND.DTK:=ZD_NAG.DTK
   ?};
:: Koniec zmiany
   ND.SWAL:=2;
   ND.NWAL:=exec('bl_nwal','ustawienia');
   {? ZD_NAG.MG<>null() || ND.MAG:=ZD_NAG.MG ?};
   {? __cel='S' || ND.SCWAL:=INFO.NAROD; ND.SCSWAL:=2 ?};
:: w celu pominiecia kontroli wypelnienia pol do intrastat
   ND.IST_TYP:={? exec('prog','intrastat',ND.D,'P')='N' || '' || 'P' ?};

   _win_red_nd:='ZD_REA';
   _win_red:=ND.mk_edit('Parametry realizacji'@,,'asjdfiwefadfg'+(-__cel));
   ND.win_etab(_win_red,'Dane podstawowe'@);
   ND.win_ewin(_win_red,,_win_red_nd);
   ND.win_etab(_win_red,'Dane do Intrastat'@);
   ND.win_ewin(_win_red,,'INTRA');
   {? __cel='S'
   || ND.win_etab(_win_red,'Dane składu celnego'@);
      ND.win_ewin(_win_red,,'ZD_SKLAD')
   ?};
   exec('ok_esc','#window',ND,_win_red);

   exec('set_efld_opt','magdok_nag',_win_red_nd);
   ND.win_edit(_win_red);
   {? _brak_upr_cs | ND.edit("
         _wyn:='';
         _it:=ND.IST_TYP; ND.IST_TYP:='';
         _wal:=exec('spr_ww','eurusd',0) & ND.WAL<>INFO.NAROD;
         {? _wal & ND.KRS=0
         || FUN.info('Wypełnij kurs na zakładce: Dane podstawowe.'@); _wyn:='KRS'
         |? _wal & ND.DTK=date(0,0,0)
         || FUN.info('Wypełnij datę kursu na zakładce: Dane podstawowe.'@); _wyn:='DTK'
         |? __cel='S' & ND.SCWAL=INFO.NAROD
         || FUN.info('Zmień walutę na inną niż narodowa na zakładce: Dane składu celnego.'@); _wyn:='SCWAL'
         |? __cel='S' & ND.SCKRS=0
         || FUN.info('Wypełnij kurs na zakładce: Dane składu celnego.'@); _wyn:='SCKRS'
         |? __cel='S' & ND.SCDTK=date(0,0,0)
         || FUN.info('Wypełnij datę kursu na zakładce: Dane składu celnego.'@); _wyn:='SCDTK'
         ?};
         ND.IST_TYP:=_it;
         _wyn
      ")
   ||
      HELP.WAL:=ND.WAL;
      __nd_wal:=ND.WAL;
      __nd_swal:=ND.SWAL;
      __nd_krs:=ND.KRS;
      __nd_dtk:=ND.DTK;
      __nd_rtk:=ND.RTK;
      __nd_ntk:=ND.NTK;
      __nd_btk:=ND.BTK;
      __nd_kk:=ND.KK;
      __nd_fzak:=ND.FZAK;
      __nd_o:=ND.O;
      __nd_kpw:=ND.KPW;
      __nd_wd:=ND.WD;
      __nd_r_ak:=ND.RTRANSAK;
      __nd_r_po:=ND.RTRANSPO;
      __nd_sc[1]:=ND.SCWAL;
      __nd_sc[2]:=ND.SCKRS;
      __nd_sc[3]:=ND.SCDTK;
      __nd_sc[4]:=ND.SCPOZ;
      __nd_sc[5]:=ND.SCPOW;
      __nd_sc[6]:=ND.SCSAD;
      __nd_sc[7]:=ND.SCNRR;
      __nd_dla:=ND.DLAKH
   ||
      _ok:=0
   ?};
   DPOZ.SCKRSZM:=0;

   POMOC.LOCK:=_p_lock;
   BEER.MW:=_b_mw;
   BEER.WW:=_b_ww;
   BEER.LW:=_b_lw
?};

{? _ok=1
||
:: kontrola zamkniecia magazynow
   {!
   |?
      MG.cntx_psh();
      MG.clear();
      {? MG.seek(__rea_tab.MG_REF) & exec('czy_z_ok','okresy',1,0,ST.AR,ST.AM,MG.ref())=0
      || __rea_tab.ZAM_OKR:='T'
      ?};
      MG.cntx_pop();
      __rea_tab.next()
   !};
   __rea_tab.first();
:: grupowanie tabeli wg MG
   _qq:=$"
      select distinct
         :_a.MAGAZYN as Magazyn,
         :_a.TOWAR as TOWAR
      from
         :_a
      order by 1
   ";
   __mg_list:=sql(_qq,__rea_tab);
:: przypisanie tree_ref-a, ustalenie ceny w wybranej walucie
   {? __mg_list.first()
   ||
      __rea_tab.cntx_psh();
      _ndx:=__rea_tab.ndx_tmp(,,'X',,,'MAGAZYN',,);
      __rea_tab.index(_ndx);
      {!
      |?
            __rea_tab.cntx_psh();
            __rea_tab.prefix('x',__mg_list.MAGAZYN);
            {? __rea_tab.first()
            ||
               {!
               |?
                  {? HELP.WAL<>exec('bl_nwal_mg','ustawienia')
                  || __rea_tab.CENA:=
                        {? __rea_tab.CWAL
                        || __rea_tab.CWAL
                        |?  HELP.WAL<>null
                        || _dokl_c:=ZD_RP.ZD_POZ().M().DOKL_C;
                           {? __nd_krs>0
                           || _walj:=exec('FindInSet','#table','WAL','WAL_SYM',HELP.WAL().KOD,,"WAL.J",,,1);
                              (__rea_tab.CENA/__nd_krs*_walj)$exec('FindInSet','#table','M','MATKTM',__rea_tab.INDEKS,__rea_tab.INDEKS,"M.DOKL_C",,,ST.DOKL_C)
                           ?}
                        ?}
                  ?};
                  __rea_tab.put();
                  __rea_tab.next()
               !}
            ?};
         __rea_tab.cntx_pop();
         __mg_list.next()
      !};
      __rea_tab.ndx_drop(_ndx);
      __rea_tab.cntx_pop()
   ?};
:: okienko
   _ico_opis:="
         {? __rea_tab.IL_REA>0
         ||
            _p3020:={? __ilplus || 'T' || exec('get','#params',3020,2,OPERATOR.USER) ?};
            {? ({? _p3020='T' || 'Z' || '' ?}+'ACO')*__rea_tab.STAN>0 & (__rea_tab.MAGAZYN<>'' | __rea_tab.TOWAR='U')
                  & __rea_tab.UPR_MG='T' & __rea_tab.ZAM_OKR='N'
                  & (__rea_tab.CENA>0 | (__rea_tab.CENA=0 & 'DFL'*(1+__rea_tab.MGTYP)))
            || 'xwin16.png:38'
            || 'xwin16.png:81'
            ?}
         ||
            'xwin16.png:110'
         ?}
   ";

   _nopop:=_wgTR_NZL;
   __rea_sel:=__rea_tab.mk_sel('Pozycje do realizacji'@,'P',,'__rea_tab__',1,,,,'U',,,,,'maximized','','on');
   __rea_tab.win_fld(__rea_sel,,'OPIS',,,22,,1,'Zamówienie do realizacji'@);
   __rea_tab.win_fld(__rea_sel,,'ZD_P_SYM',,,9,,1,'Potwierdzenie'@);
   __rea_tab.win_fld(__rea_sel,,'KONTRAKT',,,9,,1,'Kontrakt'@);
   __rea_tab.win_fld(__rea_sel,,'MAGAZYN',,,8,,1,'Magazyn'@);
   __rea_tab.win_fld(__rea_sel,,'INDEKS',,,10,,1,'Indeks'@);
   __rea_tab.win_fld(__rea_sel,,'NAZWA',,,10,,1,'Nazwa'@);
   __rea_tab.win_fld(__rea_sel,,'JM',,,8,,1,'jm'@);
   __rea_tab.win_fld(__rea_sel,,'IL_POZ',,,-13,3,1,'Pozostało do realizacji'@);
   __rea_tab.win_fld(__rea_sel,,'IL_REA',,,-12,3,_nopop,'Ilość do realizacji'@);
   __rea_tab.win_fld(__rea_sel,,'CENA',,,-11,ST.DOKL_C,_nopop,'Cena realizacji'@);
   __rea_tab.win_fld(__rea_sel,HELP,'WAL','KOD',,3,,_nopop,'Waluta'@);
   __rea_tab.win_fld(__rea_sel,,'INFO',,,-17,,1,'Informacja dodatkowa'@);
   __rea_tab.win_fld(__rea_sel,,'PAL',,,10,,,'Paleta'@);
   __rea_tab.win_fld(__rea_sel,,'TW',,,10,,,'Termin ważności'@);
   __rea_tab.win_fld(__rea_sel,,'CZY_TW',,'Wymagany termin ważności'@,-2,,1,'Wymagany termin'@);
   {? ~_nopop || __rea_tab.win_act(__rea_sel,,'Popraw',,,,,,1) ?};
   {? ~_wgTR_NZL
   || __rea_tab.win_act(__rea_sel,,'Formuła','&Wypełnij'@@,,,,"exec('rea_mark','zamdst_rea',1)",,1,"sel_nchk()",,'W');
      __rea_tab.win_act(__rea_sel,,'Formuła','&Zeruj'@@,,,,"exec('rea_mark','zamdst_rea',0)",,1,"sel_nchk()",,'Z')
   ?};
   __rea_tab.win_act(__rea_sel,,'Formuła','Prz&ypisz paletę'@@,,,,"exec('adzd_pal','zamdst_rea')",,1,
      "exec('adzd_pal','zamdst_rea')",,'Y');
   __rea_tab.win_act(__rea_sel,,'Formuła','&Akceptuj'@@,,,"exec('rea_wio','zamdst_rea')",,,,,,'A');
   {? ~_wgTR_NZL
   || __rea_tab.win_act(__rea_sel,,'Formuła','Zmień &magazyn'@@,,,"exec('rmg_pop','zamdst_rea')",,,,,,'M')
   ?};
   __rea_tab.win_act(__rea_sel,,'Formuła','Pokaż &dokument'@@,,,"exec('rea_zpoz','zamdst_rea')",,,,,,'D');
   __rea_tab.win_act(__rea_sel,,'Formuła','Pokaż d&ostawy'@@,,,"exec('rea_dost','zamdst_rea')",,,,,,'O');
   {? ~_wgTR_NZL
   || __rea_tab.win_act(__rea_sel,0,'Formuła','Usuń z &realizacji'@@,,'Usunięcie zamówienia z realizacji'@,
                             ,"exec('del_zamr','zamdst_rea',1)",0,1,"exec('del_zamr','zamdst_rea',1)",,'R')
   ?};
   __rea_tab.win_act(__rea_sel,,'Formuła','&Legenda'@@,,,"exec('legenda','color','DOS#01')",,,,,,'L');
   __rea_tab.win_act(__rea_sel,,'Kolejność');
   __rea_tab.win_act(__rea_sel,,'Szukaj');
   __rea_tab.win_act(__rea_sel,,'Rekord',,,,"exec('rea_rek','zamdst_rea')","exec('rea_aepp','zamdst_rea')");
   __rea_tab.win_act(__rea_sel,,'Wyświetl',,,,"exec('disp_poz','zamdst_rea',__rea_tab.ZD_POZ)");
   __rea_tab.win_fml(__rea_sel,,'OPIS',,'ICON_BEFORE',_ico_opis);
   __rea_tab.win_sel(__rea_sel);

   __rea_tab.fld_fml('IL_POZ','EDIT_FORMAT'
    ,"'in_prec='+{? (2+cur_kwin())='e_' || $__rea_tab.DOKL || $ST.DOKL ?}");
   __rea_tab.fld_fml('IL_POZ','DISPLAY_FORMAT'
    ,"'out_prec='+{? (2+cur_kwin())='e_' || $__rea_tab.DOKL || $ST.DOKL ?}");
   __rea_tab.fld_fml('IL_REA','EDIT_FORMAT'
    ,"'in_prec='+{? (2+cur_kwin())='e_' || $__rea_tab.DOKL || $ST.DOKL ?}");
   __rea_tab.fld_fml('IL_REA','DISPLAY_FORMAT'
    ,"'out_prec='+{? (2+cur_kwin())='e_' || $__rea_tab.DOKL || $ST.DOKL ?}");
   __rea_tab.fld_fml('CENA','EDIT_FORMAT'
    ,"'in_prec='+{? (2+cur_kwin())='e_' || $__rea_tab.DOKL_C || $ST.DOKL_C ?}");
   __rea_tab.fld_fml('CENA','DISPLAY_FORMAT'
    ,"'out_prec='+{? (2+cur_kwin())='e_' || $__rea_tab.DOKL_C || $ST.DOKL_C ?}");

   __rea_tab.fld_fml('PAL','BEFORE_EDIT',"exec('przd_pal','zamdst_rea')");
   __rea_tab.fld_fml('PAL','F3',"exec('f3zd_pal','zamdst_rea')");
   __rea_tab.fld_fml('PAL','AFTER_EDIT',"exec('pozd_pal','zamdst_rea')");
   __rea_tab.fld_fml('TW','BEFORE_EDIT',"exec('przd_tw','zamdst_rea')");
   {? exec('upr_cm','ceny')=0 | exec('upr_cz','ceny')=0
   ||
      _ff:="0";
      __rea_tab.fld_fml('CENA','BEFORE_DISPLAY',_ff);
      __rea_tab.fld_fml('CENA','BEFORE_EDIT',_ff)
   ||
      __rea_tab.fld_fml('CENA','BEFORE_EDIT',"~(__rea_tab.CZYIL='T')")
   ?};

   __rea_tab.fld_fml('CENA','DISPLAY_FORMAT',"{? __rea_tab.CZYIL='T' || 'empty=1' || 'empty=0' ?}");
   __rea_tab.fld_fml('TW','DISPLAY_FORMAT',"{? ~exec('przd_tw','zamdst_rea')|| 'empty=1' || 'empty=0' ?}");

   {? ~_tryb
   || _winsel:=__zkrwi1:=__rea_tab.grp_make('Realizacja'@,,'#realgrpzad');
      __rea_tab.grp_sel(_winsel,__rea_tab,__rea_sel,,"exec('odsw_inf','zamdst_rea')",,,20,,,,,'maximized_with_title');
      __rea_tab.grp_splt(_winsel,,'horizontal','rez');
      __rea_tab.grp_sel(_winsel,__filtrz,_filtrsel,,"exec('odsw_poz','zamdst_rea')",,,8,"",,,,'maximized_with_title');
      __rea_tab.grp_splt(_winsel,'rez','vertical','mag');
      __rea_tab.grp_sel(_winsel,ZD_POZ,'WER_REA',,,,,8,"",,,,'maximized_with_title');
      __rea_tab.win_sel(_winsel);
      __rea_tab.dnd_sel(__rea_sel,,'records.#winiddfiltr',"exec('add_zamr','zamdst_rea')");
      __filtrz.dnd_sel(_filtrsel,,'records.__rea_tab__',"exec('del_zamr','zamdst_rea')")
   |? _tryb=1
   || _winsel:=__zkrwi1:=__rea_tab.grp_make('Realizacja'@,,'#realgrppad');
      __rea_tab.grp_sel(_winsel,__rea_tab,__rea_sel,,"exec('odswppoz','zamdst_rea')",,,20,,,,,'maximized_with_title');
      __rea_tab.grp_splt(_winsel,,'horizontal','rez');
      __rea_tab.grp_sel(_winsel,ZDP_POZ,'WER_REA',,"",,,8,"",,,,'maximized_with_title');
      __rea_tab.win_sel(_winsel);
      __rea_tab.dnd_sel(__rea_sel,,'records.#winiddfiltr',"exec('add_zamr','zamdst_rea')");
      __filtrz.dnd_sel(_filtrsel,,'records.__rea_tab__',"exec('del_zamr','zamdst_rea')")
   ?};
   {? _tryb
   || _kh:=POMOC.ZDP_NAG().KH;
      ZDP_POZ.index('REA');
      ZDP_POZ.prefix();
      ZDP_POZ.f_clear();
      ZDP_POZ.f_set('ZDP_NAG(D_WYS),ZDP_NAG(SYM),ZD_P_POZ'
         ,'join @ZDP_NAG'
         ,'\"ZDP_NAG\".STAT_REJ=\'T\' and ZDP_POZ.END=0 and \"ZDP_NAG\".KH=:_a and \"ZDP_NAG\".STAN in (\'R\',\'C\')'
         ,_kh);
      {? ZDP_POZ.f_first()
      || {!
         |? exec('obl_ptw','zamdst_ptw',ZDP_POZ.ZD_POZ,1);
            {? (ZDP_POZ.ZD_POZ*'__')=7 & __zdp_sum.IL_PTW>__zdp_sum.IL_REA
            || ZDP_POZ.f_next()
            || ZDP_POZ.f_del()
            ?}
         !};
         ZDP_POZ.f_first()
      ?}
   ?};
   __rea_tab.select();
   {? _tryb || ZDP_POZ.f_clear() ?};
   POMOC.LOCK:=_p_lock
?};
''


\rea_wio
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: realizacja zamowienia dostaw
::  OLD: \rea_wio/zd.fml
::----------------------------------------------------------------------------------------------------------------------
:: kontrola czy mozna realizowac
_stan:=_mag:=_cena:=_upr:=_okr:=_mx:=_pal:=_tw:=1;
_msg:='';
__rea_tab.cntx_psh();
_p3020:={? __ilplus || 'T' || exec('get','#params',3020,2,OPERATOR.USER) ?};
{? __rea_tab.first()
||
   {!
   |?
      exec('rea_rek','zamdst_rea');
      {? __rea_tab.IL_REA>0
      ||
         {? ({? _p3020='T' || 'Z' || '' ?}+'ACO')*__rea_tab.STAN=0 || _stan:=0 ?};
         {? (__rea_tab.MAGAZYN='' & __rea_tab.TOWAR='T') || _mag:=0 ?};
         {? ~(__rea_tab.CENA>0 | (__rea_tab.CENA=0 & 'DFL'*(1+__rea_tab.MGTYP))) || _cena:=0 ?};
         {? __rea_tab.MAGAZYN<>''
         ||
            {? __rea_tab.UPR_MG<>'T'
            || _upr:=0
            || {? __rea_tab.ZAM_OKR='T' || _okr:=0 ?}
            ?}
         ?};
         _mx:=exec('mx_brak','material',exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,,null()),
                exec('FindAndGet','#table','M',__rea_tab.M_REF,,,null()));
         {? exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,"PAL",'')='T' & __rea_tab.PAL='' || _pal:=0 ?};
         {? _tw & exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,"PAL",'')='T'
           & exec('FindAndGet','#table','M',__rea_tab.M_REF,,"CZY_TW",'')='T'
           & __rea_tab.TW=date(0,0,0)
         || _tw:=0
         ?};
         {? _tw & exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,"SL",'')='T'
           & exec('FindAndGet','#table','M',__rea_tab.M_REF,,"CZY_TW",'')='T'
           & __rea_tab.TW=date(0,0,0)
         || _tw:=0
         ?};
         {? _tw & exec('FindAndGet','#table','MG',__rea_tab.MG_REF,,"SL",'')='N'
           & exec('FindAndGet','#table','M',__rea_tab.M_REF,,"CZY_TW",'')='T'
           & exec('FindAndGet','#table','M',__rea_tab.M_REF,,"SETW",'')<>'W'
           & __rea_tab.TW=date(0,0,0)
         || _tw:=0
         ?}
      ?};
      __rea_tab.next()
   !}
?};
__rea_tab.cntx_pop();
{? _stan=0 || _msg+='Zamówieniom z pozycjami do realizacji należy nadać stan [Do realizacji].\n'@ ?};
{? _mag=0 || _msg+='Pozycjom do realizacji należy przypisać magazyn do realizacji.\n'@ ?};
{? _cena=0 || _msg+='Pozycjom do realizacji należy przypisać cenę.\n'@+
               'Dotyczy pozycji związanych z magazynami typu CEN ŚREDNICH i CEN EWIDENCYJNYCH.\n'@ ?};
{? _upr=0 || _msg+='Brak uprawnień do wszystkich magazynów przypisanych pozycjom do realizacji.\n'@ ?};
{? _okr=0 || _msg+='Magazyny przypisane do realizacji muszą mieć otwarty okres obrachunkowy.\n'@ ?};
{? _pal=0 || _msg+='Dla magazynów z obsługą palet należy podać palety.\n'@ ?};
:: NUCO - zablokowano ze względu na konieczność uzupełniania na dokumencie (w tym miejscu nie jest to konieczne)
:: {? _tw=0 || _msg+='Wybrano indeksy materiałowe wymagające określenia terminu ważności.\n'@ ?};
{? _tw=0; 0 || _msg+='Wybrano indeksy materiałowe wymagające określenia terminu ważności.\n'@ ?};
{? _msg<>''
||
   FUN.info(_msg+'\nRealizacja niemożliwa.'@)
|? _mx=1 | FUN.ask('Istnieje materiał nieprzypisany do magazynu.\nCzy przypisać indeksy do magazynu?'@)
||
   sel_exit();

:: grupowanie tabeli wg MG
   VAR_DEL.delete('__rea_dok');
   _qd:=$"
      select distinct
         case when :_a.TOWAR='T' then :_a.MAGAZYN else '- USŁUGI -' end as Magazyn,
         max('        ') as Typ,
         CURRENT_DATE as Data,
         :_a.MG_REF as MG_REF,
         max(TYPYZAM.TYPYDOK) as TYP_REF,
         :_a.RODZ as RODZ,
         CURRENT_TIME as Godz
      from
         :_a
         left join TYPYZAM using (:_a.TYP_REF,TYPYZAM.reference)
      where
         :_a.IL_REA>0
      group by
         :_a.MAGAZYN, CURRENT_DATE, CURRENT_TIME, :_a.MG_REF, :_a.RODZ, :_a.TOWAR
      order by 1
   ";
   __rea_dok:=sql(_qd,__rea_tab);

   __rea_dok.fld_fml('TYP','PATTERN',"exec('upper1','#blank')");

:: sprawdza czy dla magazynu nie wystepuje kilka domyslnych typow dokumentow
   _qt:=$"
      select distinct
         :_a.TYP_REF as TYP_REF
      from
         :_a
      where
         :_a.IL_REA>0
         and :_a.MG_REF=':_b'
   ";

:: uzupelnia domyslny typ dokumentu do realizacji
   {? __rea_dok.first()
   ||
      {!
      |? _mag:=exec('FindAndGet','#table','MG',__rea_dok.MG_REF,,,null());
         {? __rea_dok.MAGAZYN<>'- USŁUGI -' & _mag<>null()
         || __rea_dok.GODZ:=exec('spr_dttm','magazyn_inw',_mag,__rea_dok.DATA,1)
         || __rea_dok.GODZ:=time(0,0,0)
         ?};
         __rea_dok.put(1);
         {? __rea_dok.MAGAZYN='- USŁUGI -'
         || __rea_dok.TYP:='n.d.';
            __rea_dok.put(1)
         || _typ_ref:=null;
            _typ:='';
            VAR_DEL.delete('__rea_typ');
            __rea_typ:=sql(_qt,__rea_tab,__rea_dok.MG_REF);
::       sprawdza czy dla magazynu nie wystepuje kilka domyslnych typow dokumentow - wg zamowien
            _loop:=__rea_typ.first();
            {!
            |? _loop
            |!
               TYPYZAM.prefix();
               {? TYPYZAM.seek(__rea_typ.TYP_REF)
               ||
                  {? _typ_ref=null | _typ_ref=TYPYZAM.TYPYDOK
                  ||
                  _typ_ref:=TYPYZAM.TYPYDOK;
                  _typ:=TYPYZAM.TYPYDOK().T
                  ||
                     _typ_ref:=null;
                     _typ:=''
               ?}
            ?};
               _loop:=_typ_ref & __rea_typ.next()
            !};

            _ok:=0;
            MG.cntx_psh();
            MG.clear();
            {? MG.seek(__rea_dok.MG_REF)
            ||
               _ref_mg:=MG.ref();
               T2MG.index('T');
               T2MG.prefix(MG.ref());
               {? T2MG.first()
               ||
                  T2MG.prefix(MG.ref(),_typ_ref);
                  _ok:=T2MG.first()
               ||
                  _ok:=1
               ?}
            ?};
            MG.cntx_pop();

::       sprawdza czy uzytkownik ma uprawnienia do dodmyslnego dokumentu
            _p1001:=exec('get','#params',1001,2,OPERATOR.USER);
            {? _ok=1 & _p1001<>'' & _p1001*(_typ+' ')=0 || _ok:=0 ?};

            {? _ok=1
            ||
               __rea_dok.TYP:=_typ;
               __rea_dok.TYP_REF:=$_typ_ref
            ||
               __rea_dok.TYP:='';
               __rea_dok.TYP_REF:=''
            ?};

            {? __rea_dok.DATA~1<>ST.AR | __rea_dok.DATA~2<>ST.AM
            || __rea_dok.DATA:={? __rea_dok.TYP=''
                                 | exec('spr_datn','magdok_wspolne',_ref_mg,date(ST.AR,ST.AM,0)
                                    ,exec('FindInSet','#table','TYPYDOK','TYP',__rea_dok.TYP,__rea_dok.TYP),0,,0)
                               || date(ST.AR,ST.AM,0)
                               || date(0,0,0)
                               ?}
            ?};

            __rea_dok.put()
         ?};
         __rea_dok.next()
      !}
   ?};

   _akc_fml:="
      _ok:=1;
      __rea_dok.cntx_psh();
      {? __rea_dok.first()
      ||
         {!
         |? {? __rea_dok.DATA=date(0,0,0) | form(__rea_dok.TYP)='' || _ok:=0 ?};
            {? _ok>0 || _ok:=exec('spr_inwe','zamdst_rea',__rea_dok.MG_REF,__rea_dok.DATA,__rea_dok.GODZ) ?};
:: NUCO - Zmiana weryfikacji - bez godziny
            {? _ok>0 || _ok:=exec('spr_prze','zamdst_rea',__rea_dok.MG_REF,__rea_dok.DATA) ?};
            {? _ok>0 || _ok:=exec('sprpozzd','zamdst_rea',__rea_dok.MAGAZYN,__rea_dok.DATA,__rea_dok.GODZ); {? ~_ok || _ok:=-4 ?} ?};
            _ok=1 & __rea_dok.next()
         !}
      ?};
      __rea_dok.cntx_pop();
      {? _ok=0
      || FUN.info('Należy określić datę realizacji oraz typ dokumentu realizacji dla wszystkich magazynów.'@)
      |? _ok=-5
      || FUN.info('W magazynie do realizacji jest otwarty arkusz inwentaryzacyjny\n'
                  '(Inwentaryzacja pełna).\n'
                  'Niemożliwe utworzenie dokumentu w tym magazynie.'@)
      |? _ok=-1
      || FUN.info('W magazynie do realizacji jest otwarty arkusz inwentaryzacyjny\n'
                  '(zawierający indeksy materiałowe realizowane zamówieniem).\n'@+
                  'Należy zmienić datę lub godzinę dokumentu na większą.'@)
      |? _ok=-3
      || FUN.info('W magazynie do realizacji jest otwarty arkusz przeceny\n'
                  '(zawierający indeksy materiałowe realizowane zamówieniem).\n'
                  'Data dokumentu jest mniejsza lub równa dacie przeceny.\n'@+
                  'Należy zmienić datę dokumentu na większą.'@)
      |? _ok=-2
      || FUN.info('W magazynie do realizacji jest zamknięty arkusz przeceny\n'
                  '(zawierający indeksy materiałowe realizowane zamówieniem).\n'
                  'Data dokumentu jest mniejsza lub równa dacie przeceny.\n'@+
                  'Należy zmienić datę dokumentu na większą.'@)
      ?};
::    kontrola dla wybranego typu dokumetu
      {? _ok=1
      ||
         TYPYDOK.index('TYP');
         TYPYDOK.prefix(__rea_dok.TYP,__rea_dok.TYP);
         {? TYPYDOK.first() & TYPYDOK.WK='T' & __nd_kk=null
         ||
            {? __nd_kk=null || __nd_kk:=TYPYDOK.KK ?};
            {? TYPYDOK.WK='T' & __nd_kk=null
            ||
               FUN.info('Typ %1 wymaga podania konta.\n'
                        'Należy wypełnić konto w parametrach realizacji\n'
                        'lub zmienić typ magazynowego dokumentu realizacji.'@[__rea_dok.TYP]);
               _ok:=0
            ?}
         ?}
      ?};
      {? _ok=1 || sel_exit() ?}
   ";

   _rea_sel:=__rea_dok.mk_sel('Dokumenty realizacji'@,'P',,'__rea_dok__',,10);
   __rea_dok.win_fld(_rea_sel,,'MAGAZYN',,,10,,1,'Magazyn'@);
   __rea_dok.win_fld(_rea_sel,,'DATA',,,-11,,,'Data realizacji'@);
   __rea_dok.win_fld(_rea_sel,,'GODZ',,,-8,,,'Czas realizacji'@);
   __rea_dok.win_fld(_rea_sel,,'TYP',,,-12,,,'Typ dokumentu'@);
   __rea_dok.win_act(_rea_sel,,'Popraw',,,,,,1);
   __rea_dok.win_act(_rea_sel,,'Formuła','&Akceptuj'@@,,,_akc_fml,,,,,,'A');
   __rea_dok.win_act(_rea_sel,,'Kolejność');
   __rea_dok.win_act(_rea_sel,,'Szukaj');
   __rea_dok.win_sel(_rea_sel);
   __rea_dok.fld_fml('TYP','F3',"exec('ae_popop','zamdst_rea',,1)");
   __rea_dok.fld_fml('TYP','BEFORE_EDIT',"exec('be_popop','zamdst_rea',__rea_dok.TYP,1)");
   __rea_dok.fld_fml('TYP','AFTER_EDIT',"exec('ae_popop','zamdst_rea',__rea_dok.TYP,1)");
   __rea_dok.fld_fml('DATA','AFTER_EDIT',"exec('ae_popop','zamdst_rea',__rea_dok.TYP,1)");
   __rea_dok.fld_fml('GODZ','AFTER_EDIT',"exec('ae_popop','zamdst_rea',__rea_dok.TYP,1)");
   {? __rea_dok.first()
   ||
      {? __rea_dok.select()
      ||
         _grp_key:=tm_stamp();
         __rea_dok.first();
         {!
         |?
            exec('rea_dok','zamdst_rea',_grp_key);
            __rea_dok.next()
         !}
      ||
         FUN.info('Zrezygnowano z realizacji.'@)
      ?}
   ||
      FUN.info('Nie wybrano pozycji do realizacji.'@)
   ?}
?};
''

