:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zl_common.fml
:: Utworzony: 22.06.2015
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi wspólnych elementów na zleceniu
::            Plik biblioteczny - wspólna obsługa dla czynności obszaru roboczego TTE_PZL
::======================================================================================================================


\zl_analizas_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Analiza dostępności surowców w czasie - akcja 'przed' dla tabeli ZL
::       analizie podlegają tylko surowce produktów w ilości nie zleconej
::----------------------------------------------------------------------------------------------------------------------
{? ZL.sel_size()>0 || return() ?};

ZL.cntx_psh();

{? ZL.RODZAJ='N' & exec('subzlec_exist','zl_link',ZL.ref())=0
|| FUN.info('Zlecenie niezależne %1 bez podzleceń nie podlega analizie.'@[ZL.SYM]);
   _can_continue:=0
|| exec('env_create','tech_structure',1);
:: NUCO - dodano mozliwosc wybrania terminu wymagalnosci
   _can_continue:=exec('edit_params','tech_structure',,1,1);
   q_analiza_zlec:=1
?};
_env:=__ENV_STR;
::  Rozpoczynam pętle
_exit:=1;
{!
|?
   {? var_pres('TAB',__ENV_STR.STRUCT)>0 || __ENV_STR.STRUCT.TAB.erase() ?};
   {? var_pres('TAB',__ENV_STR.SELECTED)>0 || __ENV_STR.SELECTED.TAB.erase() ?};
   {? var_pres('ELEMENT',__ENV_STR.STRUCT)>0 || __ENV_STR.STRUCT.ELEMENT.erase() ?};
   {? var_pres('TAB',__ENV_STR.CHECK) > 0 || _env.CHECK.TAB.erase() ?};

   {? _can_continue>0
   || {? var_pres('_tab')>0 || obj_del(_tab) ?};
      _tab:=_env.SELECTED.TAB;
::    Zlecenie niezależne zamieniane na jego elementy (bezwarunkowo)
      {? ZL.RODZAJ='N'
      || ZL.cntx_psh();
         ZL.prefix();
         ZL.index('NRNZL');
         ZL.prefix(ZL.UNRZL);
         {? ZL.first()
         || {!
            |? _tab.REF:=#ZL.ref();
               _tab.OMIT:='N';
               _tab.add();
               ZL.next()
            !}
         ?};
         ZL.cntx_pop()

::    Zlecenie złożone zamieniane na montażowe (o ile już są podzlecenia)
      |? ZL.RODZAJ='Z' & exec('subzlec_exist','zl_link',ZL.ref())>0
      || ZL.cntx_psh();
         ZL.prefix();
         ZL.index('NRNZL');
         ZL.prefix(ZL.UNRZL,1);
         {? ZL.first()
         || {!
            |? {? ZL.TREE_TYP='M'
               || _tab.REF:=#ZL.ref();
                  _tab.OMIT:='N';
                  _tab.add()
               ?};
               ZL.next()
            !}
         ?};
         ZL.cntx_pop()

      || _tab.REF:=#ZL.ref();
         _tab.OMIT:='N';
         _tab.add()
      ?};
      exec('zl_analizas_core','zl_common')
   ?};
:: Wyświetlam tabelę z problemami i uzupełniam tabelę zamienników
   _ok:=1;
   {? _env.CHECK.TAB.size()>0
   || _env.CHECK.TAB.win_sel(_env.CHECK.WERA);
      _ok:=exec('tktl_chck_sel','tech_structure');
      {? _ok=0 || _exit:=0 ?}
   || _exit:=0
   ?};
   _exit
!};
:: Koniec petli

{? _ok
|| exec('cumulate','tech_structure');
   exec('select','tech_structure')
?};
ZL.cntx_pop();

:: NUCO - usunięcie zmiennej sterującej
VAR_DEL.delete('q_analiza_zlec');
~~


\zl_analizas_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Analiza dostępności surowców w czasie - akcja 'przed grupą' dla tabeli ZL
::----------------------------------------------------------------------------------------------------------------------
exec('env_create','tech_structure',1);
:: NUCO - dodano mozliwosc wybrania terminu wymagalnosci
{? exec('edit_params','tech_structure',0,1,1)
||  _env:=__ENV_STR;
::  Rozpoczynam pętle
   _exit:=1;
   {!
   |?
      {? var_press('TAB',__ENV_STR.STRUCT)>0 || __ENV_STR.STRUCT.TAB.erase  ?};
      {? var_press('TAB',__ENV_STR.SELECTED)>0 || __ENV_STR.SELECTED.TAB.erase  ?};
      {? var_press('ELEMENT',__ENV_STR.STRUCT)>0 || __ENV_STR.STRUCT.ELEMENT.erase() ?};
      {? var_press('TAB',__ENV_STR.CHECK) > 0 || _env.CHECK.TAB.erase ?};
      {? var_press('_tab')>0 || obj_del(_tab) ?};
      {? var_press('_selected')>0 || obj_del(_selected) ?};

::       zaznaczone rekordy przeładowuję do tabeli _tab
      _tab:=_env.SELECTED.TAB;
      _selected:=ZL.sel_aget();
      {? _selected.first()
      || {!
         |? ZL.cntx_psh();
            ZL.prefix();
            {? ZL.seek(_selected.REF,)
            ||
::          Zlecenie niezależne zamieniane na jego elementy (bezwarunkowo)
               {? ZL.RODZAJ='N'
               || ZL.cntx_psh();
                  ZL.prefix();
                  ZL.index('NRNZL');
                  ZL.prefix(ZL.UNRZL);
                  {? ZL.first()
                  || {!
                     |? _tab.cntx_psh();
                        _tab.prefix(#ZL.ref());
                        {? ~_tab.first()
                        || _tab.REF:=#ZL.ref();
                           _tab.OMIT:='N';
                           _tab.add()
                        ?};
                        _tab.cntx_pop();
                        ZL.next()
                     !}
                  ?};
                  ZL.cntx_pop()

::          Zlecenie złożone zamieniane na montażowe (o ile już są podzlecenia)
               |? ZL.RODZAJ='Z' & exec('subzlec_exist','zl_link',ZL.ref())>0
               || ZL.cntx_psh();
                  ZL.prefix();
                  ZL.index('NRNZL');
                  ZL.prefix(ZL.UNRZL,1);
                  {? ZL.first()
                  || {!
                     |? {? ZL.TREE_TYP='M'
                        || _tab.cntx_psh();
                           _tab.prefix(#ZL.ref());
                           {? ~_tab.first()
                           || _tab.REF:=#ZL.ref();
                              _tab.OMIT:='N';
                              _tab.add()
                           ?};
                           _tab.cntx_pop()
                        ?};
                        ZL.next()
                     !}
                  ?};
                  ZL.cntx_pop()

               || _tab.cntx_psh();
                  _tab.prefix(#ZL.ref());
                  {? ~_tab.first()
                  || _tab.REF:=#ZL.ref();
                     _tab.OMIT:='N';
                     _tab.add()
                  ?};
                  _tab.cntx_pop()
               ?}
            ?};
            ZL.cntx_pop();
            _selected.next()
         !}
      ?};
::    Eliminacja zleceń
      ZL.cntx_psh();
      {? _tab.first()
      || {!
         |? {? ZL.seek(_tab.REF,)
            ||
::          Wyłączam zlecenie złożone niezależne
               {? ZL.RODZAJ='N'
               || _env.KOMM.add('Zlecenie niezależne %1 nie podlega analizie.'@[ZL.SYM]);
                  _tab.OMIT:='T';
                  _tab.put()
::          Wyłączam zlecenie nadrzędne jeżeli ma zlecenie montażowe (dokładnie: ma podzlecenia)
::            |? ZL.RODZAJ='Z' & exec('subzlec_exist','zl_link',ZL.ref())>0
::            || _env.KOMM.add('Zlecenie nadrzędne %1 ma zlecenie montażowe.'@[ZL.SYM]);
::               _tab.OMIT:='T';
::               _tab.put()
               ?}
            ?};
            _tab.next()
         !}
      ?};
      ZL.cntx_pop();
      exec('zl_analizas_core','zl_common');
::     Wyświetlam tabelę z problemami i uzupełniam tabelę zamienników
      _ok:=1;
      {? _env.CHECK.TAB.size()>0
      || _env.CHECK.TAB.win_sel(_env.CHECK.WERA);
         _ok:=exec('tktl_chck_sel','tech_structure');
         {? _ok=0 || _exit:=0 ?}
      || _exit:=0
      ?};
   _exit
   !};
::   Koniec petli

{? _ok
|| exec('cumulate','tech_structure');
   exec('select','tech_structure')
?};
1
|| 0
?}



