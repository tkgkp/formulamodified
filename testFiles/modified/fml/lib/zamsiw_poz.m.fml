:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: zamsiw_poz.fml
:: Utworzony: 12.05.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Obsługa zamówień sprzedaży/wewnętrznych - pozycje zamówień
::======================================================================================================================


\po_ilz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji ilosci zamawianej
::  OLD: \po_ilz/zk.fml
:: MOD: [sitek] dodanie, jesli ilosc na zleceniu przy zmniejszaniu ilosci wieksza, symbolu zlecenia
::----------------------------------------------------------------------------------------------------------------------
_dokl:=exec('jaka_dok_m','jm',ZK_P.M);
ZK_P.ILZ:=ZK_P.ILZ$_dokl;
&_dokl;

_zkn:=ZK_P.N;
_poz:=ZK_P.POZ;
_ilerez:=0;
_rezdst:=0;
_ilebez:=0;

:: ile na powiazanych zleceniach
_ilzl:=0;
{? -menu_txt()='popraw'
||
:: NUCO
   ZL.cntx_psh();
   ZLZAM.index('ZMZL');
   ZLZAM.prefix($ZK_P.ref());
   {? ZLZAM.first()
   ||
:: NUCO - zablokowałem modyfikacje bo nie pozwala na zmianę w pozycji zamówienia przy wyprodukowaniu większej
::        ilości niż na zamówieniu
      {!
      |? {? 0 & ZLZAM.ZL().PLAN_PO='T' & ZLZAM.ZL().ILDOK>0
         || _ilzl+=ZLZAM.ZL().ILDOK
         || _ilzl+=ZLZAM.ILZL
         ?};
:: MOD: [sitek]
       _zl_ref:=ZLZAM.ZL;
         ZLZAM.next()
      !}
   ?};
   ZL.cntx_pop
?};

:: ile w powiazanym planie
_ilpx:=0;
{? -menu_txt()='popraw'
|| PX_OBJ.index('ZK_P');
   PX_OBJ.prefix(ZK_P.name(),ZK_P.ref());
   {? PX_OBJ.first()
   || _ilpx+=PX_OBJ.IL_PLAN
   ?}
?};
_par:=exec('get','#params',3016,2,OPERATOR.USER)='T';
{? _par & ~BEER.DOL & BEER.PRILZ<>ZK_P.ILZ || BEER.DOL:=-1 ?};

{? BEER.DOL>0
|| _buf:=exec('ile_rezd','rezerwacje',_zkn,_poz);
   _ilerez:=_buf[2];
   _rezdst:=_buf[4]<>0;
   obj_del(_buf)
|? BEER.DOL<0
|| _buf:=exec('ile_reze','rezerwacje',ZK_P.ref());
   _ilerez:=_buf[2];
   _rezdst:=_buf[4]<>0;
   _ilebez:=_ilerez-_buf[4];
   obj_del(_buf)
|? ~BEER.DOL
|| _ilerez:=ZK_P.DOR
?};

_ilr:={? var_pres('__ZKP_ILR')=type_of(0) || __ZKP_ILR || 0 ?};

{? ZK_P.ILZ-_ilr<0
||
   FUN.info('Ilość zamówiona %1 jest mniejsza od ilości zrealizowanej %2.'@[form(ZK_P.ILZ),form(_ilr)]);
   _wyn:=0
:: sprawdzamy czy ilosc zadeklarowana jest mozliwa do rezerwacji
|? ZK_P.ILZ<ZK_P.IL_ZT
|| FUN.info('Ilość zamówiona nie może być mniejsza od ilości\n'
            'aktualnie zadysponowanej do transportu: %1 %2.'@[$ZK_P.IL_ZT,ZK_P.JM().KOD]);
   ZK_P.ILZ:=ZK_P.IL_ZT;
   _wyn:=0
|? BEER.DOL & (~BEER.RDOST | (_ilerez>0 & _ilerez>ZK_P.ILZ & BEER.DOL=-1 & _ilebez>=_ilerez-ZK_P.ILZ))
|| _wyn:={? ZK_P.ILZ>0 || 1 || FUN.info('Niewypełnione pole: Ilość.'@); 0 ?}
|? _ilerez>0 & _ilerez>ZK_P.ILZ
|| FUN.info('Wprowadzono rezerwacje bezwarunkowe dla danej pozycji zamówienia.\n'
            'Nie można zmniejszyć ilości.'@);
   _wyn:=0
|? ZK_P.M<>null & ZK_P.M().RODZ='U'
|| _wyn:=1
|? (BEER.DOL=0 | (BEER.DOL=2 & BEER.RDOST)) & ZK_P.DOST & ZK_P.ILZ<(_ilewg_d:=exec('sprwgdst','zamsiw_poz',ZK_P.N,ZK_P.POZ))
|| FUN.info('Wg dostaw została zarezerwowana większa ilość od ilości zamawianej.\n'
            'Ilość zarezerwowana wg dostaw: %1.\n'
            'Ilość zamawiana: %2.\n\n'
            'Ilość zamawiana powinna być większa lub równa ilości zarezerwowanej wg dostaw.'@
            [form(_ilewg_d,15,ZK_P.M().DOKL),form(ZK_P.ILZ,15,ZK_P.M().DOKL)]);
    _wyn:=0
:: MOD [sitek]
|? _ilzl>0 & ZK_P.ILZ<_ilzl
||   _zl:=exec('FindAndGet','#table',ZL,_zl_ref,,'SYM','');
   FUN.info('Ilość zamawiana nie może być mniejsza od ilości zleconej do produkcji: '@
    +form(_ilzl,,ZK_P.M().DOKL)+' '+M.J().KOD+'.\nZlecenie: '+_zl);
   _wyn:=0
|? _ilpx>0 & ZK_P.ILZ<_ilpx
|| FUN.info('Ilość zamawiana nie może być mniejsza od ilości zaplanowanej do produkcji: '@
    +form(_ilpx,,ZK_P.M().DOKL)+' '+M.J().KOD+'.');
   _wyn:=0
|| _dilz:=ZK_P.ILZ;
   _pilz:=BEER.ILZ;
:: roznica ilosci
   _rilz:=ZK_P.ILZ-BEER.ILZ;
:: ref pozycji zamowienia
   _refp:=ZK_P.ref;
   _mat:=ZK_P.M;
   {? _rilz<=0 | ~ZK_P.REZ
   ||
::    zmniejszyc ilosc na zamowieniu mozna zawsze
      _wyn:=1
   ||
::    wg zasady pozostalo wolne na stanie lub ostatnie zamowienie wg kolejki
::    sprawdzamy czy nie jest to stania pozycja wg kolejki
      _wyn:=0;
      ZK_P.cntx_psh();
      ZK_P.index('NR');
      ZK_P.prefix('A',1,_mat);
      {? ZK_P.last()
      || {!|?
            {? ZK_P.REZ
            || {? _refp=ZK_P.ref() || _wyn:=1 || _wyn:=0 ?}; 0
            || ZK_P.prev()
            ?}
         !}
      ?};
      ZK_P.cntx_pop();

      {? ~_wyn
      ||
::       nie jest to ostatnia pozycja wg kolejki
         ZK_P.cntx_psh();
         {? ZK_P.RMAG<>null
         || exec('obl_stan','magazyn_stan',ZK_P.M,1,ZK_P.RMAG)
         || exec('obl_stan','magazyn_stan',ZK_P.M,{? ZK_P.RODZ='Z' || 2 || 9 ?})
         ?};
         ZK_P.cntx_pop();
         {? BEER.SD>=_rilz
         || _wyn:=1
         || FUN.info('Uwaga. Obecnie można zarezerwować ilość: '@+form(BEER.SD,10,ZK_P.M().DOKL)+'.');
            _wyn:=1
         ?}
      || ZK_P.cntx_psh();
         exec('obl_stan','magazyn_stan',ZK_P.M,{? ZK_P.RODZ='Z' || 2 || 9 ?});
         ZK_P.cntx_pop();
::       jezeli ostatnia pozycja to mozna poprawiac
         _wyn:=1
      ?}
   ?}
?};
{? _wyn
|| ZK_P.ILP:=ZK_P.ILZ-_ilr;
   _mjs:=ATR.MJS;
   ATR.MJS:='ZK_P';
   exec('aktzil2','zamsiw_poz');
   BEER.IL22:=ZK_P.IL2;
   ATR.MJS:=_mjs
?};
{? _wyn || exec('war_pozz','zamsiw_poz') ?};
{? _wyn
||
:: zapamietuje poprzednia ilosc
   _czy_pal:=(ZK_P.N().MG<>null & ZK_P.N().MG().PAL='T');
   _zmien:={? BEER.DOL || BEER.PRILZ=ZK_P.DOR || BEER.PRILZ<>ZK_P.DOR ?};
   _mniej:=BEER.DOL & ZK_P.REZ & ZK_P.DOR<>ZK_P.ILZ & (~_rezdst | BEER.DOL=-1);
   BEER.PRILZ:=ZK_P.ILZ;
   {? ZK_P.REZ & (BEER.DOL | _czy_pal)
   || {? _zmien & (~_ilerez | BEER.DOL<0 | (BEER.DOL>0 & _par & ZK_P.ILZ>ZK_P.DOR)) || ZK_P.DOR:=ZK_P.ILZ ?};
      {? _zmien & _czy_pal
      || _ilz:=ZK_P.ILZ;
         ZK_P.REZ:=0;
         exec('po_rerez','zamsiw_poz',_mniej);
         ZK_P.REZ:=1;
         ZK_P.DOR:=ZK_P.ILZ
      ?};
      exec('po_rerez','zamsiw_poz',_mniej)
   || win_disp
   ?}
?};
_wyn


\pop_pozy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: poprawia pozycje na zamowieniu
::   WE: [_a] - INTEGER - 0/1 - czy okno wywołane od strony planu strategicznego
::   WY: 0 / 1
::  OLD: \pop_pozy/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_px_plan:=0;
{? var_pres('_a')=type_of(0)
|| _px_plan:=_a
?};
:: czy przypadkiem pozycja nie zamknięta
{? ZK_P.END || FUN.info('Pozycja zamknięta do realizacji\nModyfikacja niemożliwa.'@); return(0) ?};

POMOC.RODZ:='T';
BEER.OKZKP:=1;
ATR.MJS:='ZK_P';
_oldmg:=ZK_P.RMAG;

{? ZK_P.ZD_POZ<>''
||
   exec('zdp_info','zamsiw_poz');
   FUN.info('Pozycja powiązana z dostawą dedykowaną %1.'@[ZK_Z.ZDP_INFO])
?};

BEER.MENU_PTH+='P';
_wyn:=1;

:: _pop_rea - poprawa realizowanej pozycji =0-niedostępna, =1-dostępna
_pop_rea:=0;

{? ZK_N.T().R='Z' & exec('get','#params',3010,2,OPERATOR.USER)='T'
||
:: ile na powiazanych zleceniach
   _ilzl:=0;
   ZLZAM.index('ZMZL');
   ZLZAM.prefix($ZK_P.ref());
   {? ZLZAM.first()
   ||
      {!
      |?
         _ilzl+=ZLZAM.ILZL;
         ZLZAM.next()
      !}
   ?};

:: ile w powiazanym planie
   _ilpx:=0;
   PX_OBJ.index('ZK_P');
   PX_OBJ.prefix(ZK_P.name(),ZK_P.ref());
   {? PX_OBJ.first()
   || _ilpx+=PX_OBJ.IL_PLAN
   ?};

:: ile zarezerwowano
   _ilr:=ZK_P.ILRB+ZK_P.ILRW+ZK_P.ILRD;

   _pop_rea:=(_ilzl+_ilpx+_ilr)=0
?};

:: ile zrealizowano
VAR_DEL.delete('__ZKP_ILR');
__ZKP_ILR:=ZK_P.ILZ-ZK_P.ILP;

D_HELP.M_ZKP:={? ZK_P.M<>null || ZK_P.M().KTM || '' ?};
_prilz:=BEER.PRILZ;
BEER.PRILZ:=ZK_P.ILZ;
{? (ZK_P.M().RODZ='T' | ZK_P.M=null()) & (ZK_P.ILZ=ZK_P.ILP & ZK_P.ILP<>0 | _pop_rea)
|| _prrez:=ZK_P.REZ;
   BEER.ZAMUPR:=exec('jakieupr','zamsiw_wspolne',ZK_P.RODZ='W');
   exec('oneuprzk','zamsiw_wspolne',BEER.ZK_N,BEER.ZAMUPR);
   {? ZK_P.N().MG<>null
   || ZK_P.RMAG:=ZK_P.N().MG;
      ZK_P.put(1)
   ?};
   BEER.DOL:=0;
   BEER.ILZ:=ZK_P.ILZ;
   BEER.REZ:=ZK_P.REZ;
   BEER.DOST:=ZK_P.DOST;
   BEER.JM:=ZK_P.M().J;
   BEER.IL22:=ZK_P.IL2;
:: przeliczniki jednostek
   exec('ustazprz','zamsiw_poz',ZK_P.M,ZK_P.M().J);

   ZK_P.get();
   _term:=ZK_P.DT;
:: NUCO - weryfikacja zmiany terminu wewnętrznego
   _pl_data:=ZK_P.PL_DATA;
   _dan:=obj_new(8);
   _dan[1]:=ZK_P.ref();  _dan[2]:=ZK_P.ILP;  _dan[3]:=ZK_P.ILZ;    _dan[4]:=ZK_P.SR;
   _dan[5]:=ZK_P.CENA; _dan[6]:=ZK_P.CWAL; _dan[7]:=ZK_P.M().VAT().KOD; _dan[8]:=ZK_P.M;
   _rmag:=ZK_P.RMAG; _ilewgd:=0;
   {? (_ilewgd:=exec('sprwgdst','zamsiw_poz',ZK_P.N,ZK_P.POZ))>0 || ZK_P.REZ:=1; ZK_P.DOST:=1; ZK_P.put(1) ?};
   ATR.M_ATR:=ZK_P.M().M_ATR;
   ATR.UZUP:='';
   BEER.RDOST:=_ilewgd>0;
   BEER.RDST:=_ilewgd;
   BEER.RAUT:=ZK_P.SR-BEER.RDST;
   _bylrez:=ZK_P.REZ;
   _win_red:=_win_red0:='';
   ZK_P.cntx_psh();
   {? var_pres('PxSelect')>100 | _px_plan>0
   ||
      _px_plan:=1;
::    W planie strategicznym dostepna tylko mozliwosc poprawiania daty
      ZK_P.win_edit('REDDT')
   |? __ZKP_ILR
   ||
      ZK_P.win_edit('POPREA1')
   ||
      _win_red0:='RED'+ZK_P.RODZ;
      _win_red:=exec('zkp_win_edit','zamsiw_poz');
      ZK_P.win_edit(_win_red);
      exec('zkp_btnseopt_rezer','zamsiw_poz','state=grayed');
      {? ~exec('samgdost','mat_atr')
      || ZK_P.btn_eopt(_win_red,'ATRYB','state=grayed')
      || ZK_P.btn_eopt(_win_red,'ATRYB','state=normal')
      ?}
   ?};
   _magdst:={? ZK_P.RMAG<>null() || (1+ZK_P.RMAG().TYP)='D' || exec('samgdost','mat_atr') ?};
   {? _magdst
   || ATR.MJS:='ZK_P';
      ATR.M_ATR:=ZK_P.M().M_ATR
   || ATR.MJS:='M_ATR';
      M_ATR.blank(0);
      ATR.M_ATR:=null()
   ?};
   ATR.FLAG_ED:=_magdst & ATR.CZY_ATR & ATR.M_ATR().EDIT & ~exec('czysarez','rezerwacje');
   ATR.FLAG:={? ATR.FLAG_ED & ZK_P.M().M_ATR<>null() || 2 || 0 ?};
   {? ATR.FLAG_ED || {? ZK_P.M().M_ATR<>null() || ATR.FLAG_ED:=2 ?} ?};
   {? ZK_P.DK_C<>null() & ZK_P.DK_C().M_ATR<>null()
   || ZK_P.DK_C().M_ATR().SYM;
      {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():=($('ZK_P.DK_C().WAR'+form(_i,-2,,'99')))() !}
   || {! _i:=1..10 |! ($('ATR.WAR'+form(_i,-2,,'99')))():='' !}
   ?};
   exec('set_efld_opt','mat_atr','ZK_P');
   exec('set_efld_opt','zamsiw_poz');
   POMOC.MGRZ:=ZK_P.M().MGR;
   POMOC.MGR:=ZK_P.M().MGR;
   {? POMOC.MGR<>null()
   || MGR.seek(POMOC.MGR)
   ?};
   BEER.ORD:=exec('ordIL','jm',ZK_P.M,0);
   {? __ZKP_ILR
   || {? ~BEER.ORD || ZK_P.efld_opt('POPREA1','editable=0',,'ILZ') || ZK_P.efld_opt('POPREA1','editable=1',,'ILZ') ?}
   || {? ~BEER.ORD || ZK_P.efld_opt(_win_red,'editable=0',,'ILZ') || ZK_P.efld_opt(_win_red,'editable=1',,'ILZ') ?}
   ?};
   {? ZK_P.edit("exec('chk_pozy','zamsiw_poz')")
   || _mat:=ZK_P.M;
      _rez:=ZK_P.REZ; _prrez:=ZK_P.REZ;
      {? ZK_P.RMAG=null & ZK_P.ILR=0 & ~ZK_P.ONLY || ZK_P.MG:=null ?};
      {? ZK_P.M().RODZ='T'
      || _zmien:=ZK_P.DT<>_term;
         {? _zmien || ZK_P.DODT:=ZK_P.DT ?};
         ZK_P.put(1);
         {? _zmien
         || REZ.index('ZK_P');
            REZ.prefix(ZK_P.ref());
            {? REZ.first()
            || {!
               |? {? (REZ.RODZ='B' | REZ.AUTO) & REZ.DODT=_term
                  || REZ.DODT:=REZ.ZK_P().DT;
                     REZ.put(1)
                  ?};
                  REZ.next()
               !}
            ?}
         ?};
         _zkp:=tab_tmp(1,'MAT','STRING[16]','','ZKP','STRING[16]','');
         _zkp.blank(); _zkp.MAT:=$ZK_P.M; _zkp.ZKP:=$ZK_P.ref(); _zkp.add(1);
         {? ZK_P.REZ
         || {? ~_bylrez
            || exec('pop_rezy','rezerwacje',ZK_P.ref(),ZK_P.ILZ);
               exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,ZK_P.ILZ,$ZK_P.N,_zkp)
            || exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,fabs(ZK_P.ILZ-BEER.ILZ),$ZK_P.N,_zkp)
            ?}
         || exec('update','rezerwacje','ZK_P',ZK_P.ref(),ZK_P.RMAG,ZK_P.M,0);
            exec('aktu_rez','rezerwacje',ZK_P.M,ZK_P.NR,BEER.ILZ,$ZK_P.N,_zkp);
            {? _dan[8]<>_mat
            || exec('aktu_zam_sm','magazyn_stan',_dan[8]);
               exec('aktu_zam_sm','magazyn_stan',_mat,ZK_P.RMAG)
            ?}
         ?};
:: NUCO - aktualizacja zleceń jeśli są powiązane z pozycją zamówienia
         {? _term<>ZK_P.DT | _pl_data<>ZK_P.PL_DATA
         || exec('akt_plan_zl','qprodukcja',ZK_P.ref(),0)
         ?};
:: koniec zmiany

         obj_del(_zkp)
      || {? ZK_P.RMAG<>null & ZK_P.RMAG().U='T' & ZK_P.ILP>0 || 'T' || 'N' ?};
         ZK_P.put(1)
      ?};
      exec('war_zam','zamsiw_nag',ZK_P.N,_dan);
      exec('aktu_stu','zamsiw_wspolne',_mat,1,1);
      exec('modiRekD','reklamacje',ZK_P.uidref(),ZK_P.M,ZK_P.ILZ);
      {? ZK_N.MG<>null & ZK_N.MG().PAL='T' || exec('ctrl_pal','zamsiw_palety') ?};

::    Produkcja - jesli dostepny modul planow strategicznych to po udanej
::    edycji pozycji zamowienia aktualizuje obiekt planowania
      {? exec('tpp_lic','tpp')='T'
      || exec('zkp2obj','px_obj')
      ?};
      {? ZK_P.RMAG<>_oldmg || exec('aktu_zam_sm','magazyn_stan',ZK_P.M,ZK_P.RMAG) ?}
   ||
      {? _px_plan
      || _wyn:=0
      ?};
::    nacisnieto klawisz ESC przywracamy poprzedniego RMAG-a
      {? _rmag<>ZK_P.RMAG
      || _nag:=ZK_P.N;
         _poz:=ZK_P.POZ;
         ZK_P.cntx_psh();
         ZK_P.index('NAG');
         ZK_P.prefix(_nag,_poz);
         {? ZK_P.first()
         || {!
            |? ZK_P.RMAG:=_rmag;
               ZK_P.MG:=_rmag;
               {? ~(ZK_P.MG().TYP*'DOST') || ZK_P.DOST:=0 ?};
               ZK_P.ONLY:=_rmag<>null;
               ZK_P.put(1);
               ZK_P.next()
            !}
         ?};
         ZK_P.cntx_pop()
      ?};
      {? ZK_P.DOST || ZK_P.get(); ZK_P.DOST:=0; ZK_P.REZ:=_prrez; ZK_P.put(1) ?}
   ?};
   ZK_P.cntx_pop();
   obj_del(_dan);
   {? _win_red<>'' & _win_red<>_win_red0
   || ZK_P.win_edit(_win_red0);
      ZK_P.win_edel(_win_red)
   ?};
   {? BEER.MENU_PTH='ZZYDP' | BEER.MENU_PTH='ZZTYDP'
   || grp_disp(M,'WER_ZAM');
      grp_disp(__smmag,__okn)
   ?};
   MG.f_clear();
   JM.f_clear();
   JM.win_dict('WER')
|? ZK_P.M().RODZ='U' & ZK_P.ILZ=ZK_P.ILP
||
   BEER.ILZ:=ZK_P.ILZ;
   POMOC.RODZ:='U';
   ZK_P.get();
   _dan:=obj_new(8);
   _dan[1]:=ZK_P.ref();  _dan[2]:=ZK_P.ILP;  _dan[3]:=ZK_P.ILZ;    _dan[4]:=ZK_P.SR;
   _dan[5]:=ZK_P.CENA; _dan[6]:=ZK_P.CWAL; _dan[7]:=ZK_P.M().VAT().KOD; _dan[8]:=ZK_P.M;
   {? BEER.TYPYZAM().R='W'
   || _win_red0:='REDUW'
   || _win_red0:='REDU'
   ?};
   _win_red:=exec('zkp_win_edit','zamsiw_poz',_win_red0);
   ZK_P.win_edit(_win_red);
   {? BEER.TYPYZAM().R<>'W'
   || ZK_P.efld_opt(_win_red,'mark=1',BEER,'SMG')
   ?};
   {? ZK_P.edit("exec('chk_pozy_usl','zamsiw_poz')")
   || {? ZK_P.MG<>null || ZK_P.RMAG:=ZK_P.MG ?};
      ZK_P.put(1);
      exec('war_zam','zamsiw_nag',ZK_P.N,_dan);
      exec('aktznzkp','zamsiw_poz',ZK_P.ref(),1);
      exec('aktznzkn','zamsiw_nag',ZK_P.N,1)
   ?};
   obj_del(_dan);
   {? _win_red<>_win_red0
   || ZK_P.win_edit(_win_red0);
      ZK_P.win_edel(_win_red)
   ?};
   ZK_P.efld_opt('REDU','mark=0',BEER,'SMG');
   POMOC.RODZ:='T'
|? ZK_P.M().RODZ='T' & ZK_P.ILP>0
||
   ZK_P.win_edit('POPREA');
   {? ZK_P.edit("exec('chk_pozy','zamsiw_poz')")
   || ZK_P.put(1);
      _wyn:=1
   || _wyn:=0
   ?}
|? ZK_P.M().RODZ='U' & ZK_P.ILP>0
||
   FUN.info('Pozycja już realizowana, modyfikacja niemożliwa.'@);
   _wyn:=0
|? ZK_P.ILP=0
||
   FUN.info('Pozycja została zrealizowana.\nPoprawianie pozycji niemożliwe.'@);
   _wyn:=0
||
   _wyn:=0
?};
BEER.MENU_PTH-=1;
VAR_DEL.delete('__ZKP_ILR');
BEER.PRILZ:=_prilz;
_wyn

