:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: prod_rej.fml [12.30]
:: Utworzony: 2012-01-19
:: Autor: TS
::======================================================================================================================
:: Zawartość: Obsługa rejestracji wykonania produkcji do planów i zleceń (tabele PROD_REJ, PROD_NXT)
::            Obsługa rejestracji problemów (tabela EK_PROB)
::======================================================================================================================


\filter_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Obsługa przycisku 'Filtr' w oknie rejestracji wykonań - opcje 'select' i 'grp'
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('Filter');
Filter:=obj_new(
   'PR_DATA',
   'PR_ODD',
   'PR_ODT',
   'PR_DOD',
   'PR_DOT',
   'PR_WYD',
   'PR_A_WYD',
   'PR_OPIS',
   'PR_RESS',
   'PR_RESN',
   'PR_MKTM',
   'PR_MN',
   'PR_M',
   'PR_L_PX',
   'PR_L_PL',
   'PR_L_ZL',
   'PR_OK',
   'PR_POTW',
   'PR_START',
   'PR_PROB',
   'PR_PRAC',
   'PR_BRYG',
   'PR_KH',
   'PR_P',
   'PR_ZLBR',
   'PR_A',
   'PR_DOREJ',
   'PR_KOOP',
   'PR_GROP',
   'PR_RP',
   'PR_KONT',
   'PR_OSOBA',
   'QZMIANA'
);

{! _it:=1..obj_len(Filter)
|! _tmp:=exec('revert','#string',!Filter[_it]);
   _pos:=_tmp*'.';
   _acr:=!Filter[_it]+_pos;
   Filter[_it]:=($('FILTER'+_acr))()
!};

:: Dodatkowe ustawienia
exec('ustaw_okna','kontrahent');
_p_naz:=VAR1.P_NAZ;

FILTER.win_edit('RED_PR');
{? FILTER.edit()
||
   REF.OSOBA:=FILTER.PR_OSOBA;
   exec('filter','prod_rej');
   grp_edisp(FILTER,'RED_PREJ')
||
   {! _it:=1..obj_len(Filter)
   |! _tmp:=exec('revert','#string',!Filter[_it]);
      _pos:=_tmp*'.';
      _acr:=!Filter[_it]+_pos;
      ($('FILTER'+_acr))():=Filter[_it]
   !};
   VAR1.P_NAZ:=_p_naz
?};

VAR_DEL.delete('Filter');
~~


\filter
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Tworzenie filtra dla rejestracji wykonań
::       UWAGA: przy dużej ilości rekordów może być stosowne zmienienie na index/prefix,
::              ale nie będzie np. możliwości filtrowania bez względu na rejestr liter
::              i wg dowolnego ciągu znaków czy zakresu dat
::----------------------------------------------------------------------------------------------------------------------
_where:='';

{? FILTER.PR_DATA<>date(0,0,0)
|| _where+='PROD_REJ.STARTD=to_date(\''+$FILTER.PR_DATA+'\') and '
?};

{? FILTER.PR_RESS<>''
|| _where+='(PROD_REJ.RES_SYM=\''+FILTER.PR_RESS+'\') and '
?};

{? FILTER.PR_A_WYD<>null()
|| _where+='(PROD_REJ.WYD=\''+$exec('szukaj_ud_skl','schemat','PODZORG',FILTER.PR_A_WYD().KOD)+'\') and '
?};

{? FILTER.PR_KH<>null()
|| _where+='(PROD_REJ.KH=\''+$FILTER.PR_KH+'\') and '
?};

{? FILTER.PR_GKTL<>null()
|| _where+='(PROD_REJ.GKTL=\''+$FILTER.PR_GKTL+'\') and '
?};

_where+='(';
{? FILTER.PR_L_PX='T' || _where+='PROD_REJ.SRODZ=\'PX\'' || _where+='1=2' ?};
_where+=' or ';
{? FILTER.PR_L_PL='T' & exec('get','#params',500621)='P' || _where+='PROD_REJ.SRODZ=\'PL\'' || _where+='1=2' ?};
_where+=' or ';
{? FILTER.PR_L_ZL='T' & exec('get','#params',500621)='Z' || _where+='PROD_REJ.SRODZ=\'ZL\'' || _where+='1=2' ?};
_where+=')';

{? FILTER.PR_ODD<>date(0,0,0) & FILTER.PR_DOD=date(0,0,0)
|| _tm_od:=exec('create','#tm_stamp',FILTER.PR_ODD,FILTER.PR_ODT);
   _where+=' and PROD_REJ.TM_START>='+$_tm_od
|? FILTER.PR_ODD=date(0,0,0) & FILTER.PR_DOD<>date(0,0,0)
|| _tm_do:=exec('create','#tm_stamp',FILTER.PR_DOD,FILTER.PR_DOT);
   _where+=' and PROD_REJ.TM_START<='+$_tm_do
|? FILTER.PR_ODD<>date(0,0,0) & FILTER.PR_DOD<>date(0,0,0)
|| _tm_od:=exec('create','#tm_stamp',FILTER.PR_ODD,FILTER.PR_ODT);
   _tm_do:=exec('create','#tm_stamp',FILTER.PR_DOD,FILTER.PR_DOT);
   _where+=' and PROD_REJ.TM_START>='+$_tm_od+' and PROD_REJ.TM_START<='+$_tm_do
?};

{? FILTER.PR_START='T'
|| _where+=' and PROD_REJ.START=\'T\''
|? FILTER.PR_START='N'
|| _where+=' and PROD_REJ.START=\'N\''
?};

{? FILTER.PR_OK='T'
|| _where+=' and PROD_REJ.OK=\'T\''
|? FILTER.PR_OK='N'
|| _where+=' and PROD_REJ.OK=\'N\''
?};

{? FILTER.PR_POTW='T'
|| _where+=' and PROD_REJ.POTW=\'T\''
|? FILTER.PR_POTW='N'
|| _where+=' and PROD_REJ.POTW=\'N\''
?};

{? FILTER.PR_PROB='T'
|| _where+=' and PROD_REJ.PROBLEM=\'T\''
|? FILTER.PR_PROB='N'
|| _where+=' and PROD_REJ.PROBLEM=\'N\''
?};

{? FILTER.PR_PRAC='T'
|| _where+=' and PROD_REJ.PRAC=\'T\''
|? FILTER.PR_PRAC='N'
|| _where+=' and PROD_REJ.PRAC=\'N\''
?};

{? FILTER.PR_BRYG='T'
|| _where+=' and PROD_REJ.BRYG=\'T\''
|? FILTER.PR_BRYG='N'
|| _where+=' and PROD_REJ.BRYG=\'N\''
?};

{? FILTER.PR_KOOP='T'
|| _where+=' and PROD_REJ.KOOP=\'T\''
|? FILTER.PR_KOOP='N'
|| _where+=' and PROD_REJ.KOOP=\'N\''
?};

{? FILTER.PR_GROP='T'
|| _where+=' and not(PROD_REJ.PL_OGR is null and PROD_REJ.GROP is null)'
|? FILTER.PR_GROP='N'
|| _where+=' and (PROD_REJ.PL_OGR is null and PROD_REJ.GROP is null)'
?};

{? FILTER.PR_KONT='T'
|| _where+=' and (PROD_REJ.KONTROLA=\'T\')'
|? FILTER.PR_KONT='N'
|| _where+=' and (PROD_REJ.KONTROLA=\'N\')'
?};

{? FILTER.PR_A='T'
|| _where+=' and PROD_REJ.A=\'T\''
|? FILTER.PR_A='N'
|| _where+=' and PROD_REJ.A=\'N\''
?};
{? FILTER.PR_DOREJ='T'
|| _where+=' and PROD_REJ.DOREJ=\'T\''
|? FILTER.PR_DOREJ='N'
|| _where+=' and PROD_REJ.DOREJ=\'N\''
?};

{? FILTER.PR_RP='T'
|| _where+=' and PROD_REJ.RP=\'T\''
|? FILTER.PR_RP='N'
|| _where+=' and PROD_REJ.RP=\'N\''
?};

{? FILTER.PR_P<>null() & FILTER.PR_ZLBR=null()
|| _where+=' and KAP.P='''+$FILTER.PR_P+''''
|? FILTER.PR_ZLBR<>null() & FILTER.PR_P=null()
|| _where+=' and KAP.B='''+$FILTER.PR_ZLBR+''''
|? FILTER.PR_ZLBR<>null() & FILTER.PR_P<>null()
|| _where+=' and (KAP.P='''+$FILTER.PR_P+'''';
   _where+=' or KAP.B='''+$FILTER.PR_ZLBR+''')'
?};

:: [areKc] - dodanie warunku do filtra - zmiana rozpoczynająca wykonanie pozycji przewodnika.
{? FILTER.QZMIANA='1'
|| _where+=' and PROD_REJ.QZMIANA=\'1\''
|? FILTER.QZMIANA='2'
|| _where+=' and PROD_REJ.QZMIANA=\'2\''
|? FILTER.QZMIANA='3'
|| _where+=' and PROD_REJ.QZMIANA=\'3\''
?};

:: NUCO - dodanie filtrowania tylko tych przewodników które zaplanowane są operacyjnie
_where+=' and ((ZL.PLAN_PO=\'T\' and ZGP.STARTD is not null) or (select count(*) from ZWAR where ZWAR.ZL=ZL.REFERENCE and ZWAR.KIND=\'ZO\')>0)';


ODDZ.cntx_psh();
ODDZ.prefix();
{? ODDZ.size()>1
|| _where+=' and (PROD_REJ.ZL is NULL and GROP.ODDZ='''+ST.ODDZ_KOD+''' or ZL.ODDZ='''+ST.ODDZ_KOD+''')'
?};
ODDZ.cntx_pop();

:: Pominięcie operacji wykorzystanych w grupach operacji (tylko dla ekiosków)
{? VEK.TERM='T'
|| _where+=' and (GROPP.ZGP is null)'
?};

{? ProdRej.WHERE<>'' || _where+=' and '+ProdRej.WHERE ?};

PROD_REJ.clear();
PROD_REJ.f_set(
   {? ProdRej.SORT<>'' || ProdRej.SORT || 'OPER,TM_END' ?},
   {? FILTER.PR_P<>null() | FILTER.PR_ZLBR<>null()
   || 'left join ZGP '
      'left join @KAP '
      'left join ZL using(PROD_REJ.ZL,ZL.REFERENCE) '
      'left join GROPP using(GROPP.ZGP,ZGP.REFERENCE) '
      'left join GROP using(PROD_REJ.GROP,GROP.REFERENCE) '
   || 'left join ZGP '
      'left join ZL using(PROD_REJ.ZL,ZL.REFERENCE) '
      'left join GROPP using(GROPP.ZGP,ZGP.REFERENCE) '
      'left join GROP using(PROD_REJ.GROP,GROP.REFERENCE) '
   ?}+
   ProdRej.JOIN,
   _where,
   ProdRej.TAB
);
:: Ustawienie od razu na pierwszy rekord
::PROD_REJ.f_first();
~~


\bre_4rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Faktyczna obsługa 'rekord przed' w oknie rejestracji wykonań (PROD_REJ) - opcje 'select' i 'grp'
::   WY: Kod miejsca kolorowania
::----------------------------------------------------------------------------------------------------------------------
:: Wyznaczenie ilości maksymalnej możliwej do zarejestrowania
exec('vprodrej_fill','prod_rej');
:: Wyznaczenie wartości zmiennej VAR1.TPZ (dla kart pracy)
ZGP.cntx_psh();
VAR1.TPZ:=PROD_REJ.ZGP().TPZ;
VAR.A_ZLEC:=PROD_REJ.ZGP().ZL;
ZGP.cntx_pop();
:: Kolorowanie
{? PROD_REJ.PROBLEM='T' & PROD_REJ.PROBKLAS=exec('prob_class_suspensing','zl_wkj')
|| 'PROD_REJ#01#03'
|? PROD_REJ.PROBLEM='T' & PROD_REJ.PROBKLAS=exec('prob_class_information','zl_wkj')
|| 'PROD_REJ#01#05'
|? PROD_REJ.PROBLEM='T' & PROD_REJ.PROBKLAS=exec('prob_class_blocking','zl_wkj')
|| 'PROD_REJ#01#06'
:: NUCO - zmiana priorytetu kolorowania - kolorowanie ze jest ok, tylko jesli nie ma rozpoczetych operacji
|? PROD_REJ.START='T'
|| 'PROD_REJ#01#01'
|? PROD_REJ.OK='T'
|| 'PROD_REJ#01#02'
|? PROD_REJ.A='N'
|| 'PROD_REJ#01#04'
|| ''
?}


\grayed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.20]
:: OPIS: Stan akcji w oknie rejestracji wykonań - wyszarzenie akcji w zależności od zadanych parametrów
::   WE: [_a] - akronim okna wertowania
::  OLD: \btn_state/prod_rej.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') || _wer:=_a || _wer:=cur_win(1,1) ?};

_grayed:=':';

:: Tablica funkcji dostępnych w poszczególnych obszarach oraz dla pustej dziedziny
VAR_DEL.delete('__Tab');
__Tab:=obj_new('ZL','PL','PX','EMPTY');
{! _it:=1..4
|! __Tab[_it]:=obj_new(
      'NAWIG',
      'FILTER',
      'START',
      'STOP',
      'WYKON',
      'XWYKON',
      'PROB',
      'XPROB',
      'DOC',
      'MAT',
      'PRAC',
      'BRYG',
      'REJ',
      'POTW',
      'XPOTW',
      'NPU',
      'SEND',
      'LIMITY',
      'NIELIMITY',
      'SUROWCE',
      'PARTIE',
      'GENDOK',
      'PLANGROP'
   )
!};
__Tab.ZL.NAWIG:=1;  __Tab.PL.NAWIG:=1;  __Tab.PX.NAWIG:=1;  __Tab.EMPTY.NAWIG:=1;
__Tab.ZL.FILTER:=1; __Tab.PL.FILTER:=1; __Tab.PX.FILTER:=1; __Tab.EMPTY.FILTER:=1;
__Tab.ZL.START:=0;  __Tab.PL.START:=1;  __Tab.PX.START:=0;  __Tab.EMPTY.START:=0;
__Tab.ZL.STOP:=0;   __Tab.PL.STOP:=1;   __Tab.PX.STOP:=0;   __Tab.EMPTY.STOP:=0;
__Tab.ZL.WYKON:=1;  __Tab.PL.WYKON:=1;  __Tab.PX.WYKON:=1;  __Tab.EMPTY.WYKON:=0;
__Tab.ZL.XWYKON:=0; __Tab.PL.XWYKON:=1; __Tab.PX.XWYKON:=0; __Tab.EMPTY.XWYKON:=0;
__Tab.ZL.PROB:=1;   __Tab.PL.PROB:=1;   __Tab.PX.PROB:=0;   __Tab.EMPTY.PROB:=0;
__Tab.ZL.XPROB:=1;  __Tab.PL.XPROB:=1;  __Tab.PX.XPROB:=0;  __Tab.EMPTY.XPROB:=0;
__Tab.ZL.DOC:=1;    __Tab.PL.DOC:=1;    __Tab.PX.DOC:=0;    __Tab.EMPTY.DOC:=0;
__Tab.ZL.MAT:=1;    __Tab.PL.MAT:=1;    __Tab.PX.MAT:=0;    __Tab.EMPTY.MAT:=0;
__Tab.ZL.PRAC:=1;   __Tab.PL.PRAC:=0;   __Tab.PX.PRAC:=0;   __Tab.EMPTY.PRAC:=0;
__Tab.ZL.BRYG:=1;   __Tab.PL.BRYG:=0;   __Tab.PX.BRYG:=0;   __Tab.EMPTY.BRYG:=0;
__Tab.ZL.REJ:=1;    __Tab.PL.REJ:=1;    __Tab.PX.REJ:=1;    __Tab.EMPTY.REJ:=0;
__Tab.ZL.POTW:=1;   __Tab.PL.POTW:=1;   __Tab.PX.POTW:=0;   __Tab.EMPTY.POTW:=0;
__Tab.ZL.XPOTW:=1;  __Tab.PL.XPOTW:=1;  __Tab.PX.XPOTW:=0;  __Tab.EMPTY.XPOTW:=0;
__Tab.ZL.NPU:=1;    __Tab.PL.NPU:=1;    __Tab.PX.NPU:=0;    __Tab.EMPTY.NPU:=0;
__Tab.ZL.SEND:=1;   __Tab.PL.SEND:=1;   __Tab.PX.SEND:=1;   __Tab.EMPTY.SEND:=1;

__Tab.ZL.LIMITY:=1;   __Tab.PL.LIMITY:=1;   __Tab.PX.LIMITY:=0;   __Tab.EMPTY.LIMITY:=0;
__Tab.ZL.SUROWCE:=1;  __Tab.PL.SUROWCE:=1;  __Tab.PX.SUROWCE:=0;  __Tab.EMPTY.SUROWCE:=0;
__Tab.ZL.NIELIMITY:=1;__Tab.PL.NIELIMITY:=1;__Tab.PX.NIELIMITY:=0;__Tab.EMPTY.NIELIMITY:=0;
__Tab.ZL.PARTIE:=1;   __Tab.PL.PARTIE:=1;   __Tab.PX.PARTIE:=0;   __Tab.EMPTY.PARTIE:=0;
__Tab.ZL.GENDOK:=1;   __Tab.PL.GENDOK:=0;   __Tab.PX.GENDOK:=0;   __Tab.EMPTY.GENDOK:=0;
__Tab.ZL.PLANGROP:=1; __Tab.PL.PLANGROP:=0; __Tab.PX.PLANGROP:=0; __Tab.EMPTY.PLANGROP:=0;

_fun:=($('__Tab.'+{? PROD_REJ.SRODZ='' || 'EMPTY' || PROD_REJ.SRODZ ?}))();

{? _fun.NAWIG
|| {? ~ProdRej.F_NAWIG
   || _grayed:='WN'+_grayed+'WN'
   ?}
|| _grayed:='WN'+_grayed+'WN'
?};

{? _fun.FILTER
|| {? ~ProdRej.F_FILTER
   || _grayed:='F'+_grayed+'F'
   ?}
|| _grayed:='F'+_grayed+'F'
?};

{? _fun.START
|| {? ~ProdRej.F_START
   || _grayed:='T'+_grayed
   ?}
|| _grayed:='T'+_grayed
?};

{? _fun.STOP
|| {? ~ProdRej.F_STOP
   || _grayed:='C'+_grayed
   ?}
|| _grayed:='C'+_grayed
?};

{? _fun.WYKON
|| {? ~ProdRej.F_WYKON
   || _grayed:='O'+_grayed
   ?}
|| _grayed:='O'+_grayed
?};

{? _fun.XWYKON
|| {? ~ProdRej.F_XWYKON
   || _grayed:='Y'+_grayed
   ?}
|| _grayed:='Y'+_grayed
?};

{? _fun.PROB
|| {? ~ProdRej.F_PROB
::   | PROD_REJ.PROBLEM='T'
   || _grayed:='M(Z)'+_grayed
   ?}
|| _grayed:='M(Z)'+_grayed
?};

{? _fun.XPROB
|| {? ~ProdRej.F_XPROB | PROD_REJ.PROBLEM='N'
   || _grayed:='M(R)'+_grayed
   ?}
|| _grayed:='M(R)'+_grayed
?};

{? _fun.DOC
|| {? ~ProdRej.F_DOC
   || _grayed:='D(D)'+_grayed
   ?}
|| _grayed:='D(D)'+_grayed
?};

{? _fun.MAT
|| {? ~ProdRej.F_MAT | PROD_REJ.GROP<>null()
   || _grayed:='D(M)'+_grayed
   ?}
|| _grayed:='D(M)'+_grayed
?};

{? _fun.NPU
|| {? ~ProdRej.F_NPU | PROD_REJ.GROP<>null()
   || _grayed:='D(N)'+_grayed
   ?}
|| _grayed:='D(N)'+_grayed
?};

{? _fun.PRAC
|| {? ~ProdRej.F_PRAC | PROD_REJ.ZGP().BRYG='T' | PROD_REJ.KOOP='T' | PROD_REJ.GROP<>null()
   || _grayed:='P'+_grayed
   ?}
|| _grayed:='P'+_grayed
?};

{? _fun.BRYG
|| {? ~ProdRej.F_BRYG | PROD_REJ.ZGP().BRYG='N' | PROD_REJ.KOOP='T' | PROD_REJ.GROP<>null()
   || _grayed:='B'+_grayed
   ?}
|| _grayed:='B'+_grayed
?};

{? _fun.REJ
|| {? ~ProdRej.F_REJ
   || _grayed:='R(S)'+_grayed
   ?}
|| _grayed:='R(S)'+_grayed
?};

{? _fun.POTW
|| {? ~ProdRej.F_POTW | PROD_REJ.GROP=null() | PROD_REJ.POTW='T'
   || _grayed:='I'+_grayed
   ?}
|| _grayed:='I'+_grayed
?};

{? _fun.XPOTW
|| {? ~ProdRej.F_XPOTW | PROD_REJ.GROP=null() | PROD_REJ.POTW='N'
   || _grayed:='U'+_grayed
   ?}
|| _grayed:='U'+_grayed
?};

{? _fun.SEND
|| {? ~ProdRej.F_SEND
   || _grayed:='Ł'+_grayed+'Ł'
   ?}
|| _grayed:='Ł'+_grayed+'Ł'
?};
:: NUCO - wylaczenie przycisku limity jesli jest wiecej niż jedna partia do pozycji przewodnika
{? _fun.LIMITY
|| {? PROD_REJ.GROP<>null() | sql('select SYM from ZPARN where ZGH=:_a',ZGP.NRPRZ).size>1
   || _grayed:='D(Y)D(B)'+_grayed
   ?}
|| _grayed:='D(Y)D(B)'+_grayed
?};

{? _fun.NIELIMITY
|| {? PROD_REJ.GROP<>null()
   || _grayed:='D(W)'+_grayed
   ?}
|| _grayed:='D(W)'+_grayed
?};

{? _fun.SUROWCE
|| {? PROD_REJ.GROP<>null()
   || _grayed:='D(B)'+_grayed
   ?}
|| _grayed:='D(B)'+_grayed
?};

{? _fun.PARTIE
|| {? exec('zl_party_menu','zl_partie',PROD_REJ.ZL)=0 | PROD_REJ.GROP<>null()
   || _grayed:='D(T)'+_grayed
   ?}
|| _grayed:='D(T)'+_grayed
?};

{? _fun.GENDOK & PROD_REJ.ZGP<>null()
|| _warsztat:=exec('czy_zlec_warszt','ekioski',PROD_REJ.ZGP);
   {? _warsztat='T'
   || _grayed:='R(AD)'+_grayed
   ?}
|| _grayed:='R(AD)'+_grayed
?};

{? _fun.PLANGROP
|| {? PROD_REJ.GROP=null()
   || _grayed:='R(G)'+_grayed
   ?}
|| _grayed:='R(G)'+_grayed
?};
:: akcja Etykieta
{? ~exec('isDEFetyk','magazyn_mobi','PROD_REJ')
|| _grayed:='Q'+_grayed
?};
:: Akcja Zmiana sposobu rejestracji
{? PROD_REJ.KOOP='T' | PROD_REJ.GROP<>null()
|| _grayed:='R(P)'+_grayed
?};

VAR_DEL.delete('__Tab');

PROD_REJ.actions_grayed(_wer,_grayed);
~~

