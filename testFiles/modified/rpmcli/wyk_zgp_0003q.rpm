:!UTF-8
{TITLE:0.1.NUCO. Wydruk kartek produkcyjnych przewodnika - wersja grupowa}
{PRINTER: INFO.W_PRN,,,,,'i','b',,,,,,1,PAR_WYDR.MLEFT,PAR_WYDR.MTOP,PAR_WYDR.MRIGHT,PAR_WYDR.MBOT,0,1}
{BEGIN:
  ZGH.cntx_psh();
  ZGP.cntx_psh();
  PRN := obj_new(@.CLASS.PRINT, 6);
  PRN.s_frame();
  drukuj:=1;
  kreska :='─';
  ramka:='│';
  opcja:=0;
  temp:=0;
  tabulator:=0;
  waslbar:=0;
  "---Pozioma wspolrzedna lewej czesci tabeli. Jest uzalezniona od sposobu";
  "---przyciagania tabeli na stronie. Jest wyliczana przez formule 'prleft'";
  "---umieszczona za definicja wiersza wydruku.";
  left:=0;
  width:=135;
  pop:='';
  nas:='';
  czy_sur:=1;
  czy_po:=1;
  zmiana:='';
  stanowisko:='';
  zl_nad:='';
  "Tabela z danymi do wydruku";
  kartki:=PROD_REJ.sel_aget();
  PROD_REJ.sel_del();
  {? kartki.size()=0
  || kartki.REF:=#PROD_REJ.ref;
     kartki.DBMASK:='prod_rej';
     kartki.add()
  ?};
  "-----------------------------------------------";
  "U W A G A!   TUTAJ KONFIGURUJ SZEROKOSC KOLUMN.";
  "- - - - - - - - - - - - - - - - - - - - - - - -";
  "---Szerokosc wydruku.";
  prnwidth:=135;
  ilosc:=0
}
{END:
  ZGH.cntx_pop();
  ZGP.cntx_pop();
  obj_del(PRN);
  &drukuj;
  &kreska;
  &opcja;
  &temp;
  &waslbar;
  &left;
  &width;
  &nas;
  &pop;
  &prnwidth;
  &ramka;
  &ilosc;
  &czy_sur;
  &czy_po;
  &tabulator;
  &zl_nad;
  VAR_DEL.delete('kartki','stanowisko','zmiana');
  VAR_DEL.delete('surowce');
  VAR_DEL.delete('etapy')
}

{DEFINEFONT: 'fa=Inter,75,Q,,0,0'}
{DEFINEFONT: 'fab=Inter Semi Bold,75,Q,,0,0'}
{DEFINEFONT: 'fat=Inter Thin,75,Q,,0,0'}
{FONT: 'fa'}
{font:={? PAR_WYDR.FONTKRES*'39'>0 || 'a';'e' || 'm'?};~~}
{DEFINEFONT: 'kod=Inter,120,E,,0,0'}
{"------------------------------------------------------------------------"; ~~}
{"---Zbior funkcji wykorzystywanych w biezacej definicji wydruku.         "; ~~}
{MACRO: 'functions'}
  {"--- B R A K   F U N K C J I   W Y D R U K U.                          "; ~~}
{MACRO-}
{"------------------------------------------------------------------------"; ~~}
{"---Sekcja akcji inicjalizujacych.                                       "; ~~}
{MACRO: 'miscelaneous'}
  {"--- B R A K   A K C J I   I N I C J A L I Z U J A C Y C H.            "; ~~}
{MACRO-}
{"------------------------------------------------------------------------"; ~~}
{"---Deklaracja funkcji wydruku.                                          "; ~~}
{SUBSTITUTE: 'functions'}
{"------------------------------------------------------------------------"; ~~}
{"---Wykonanie akcji inicjalizujacych.                                    "; ~~}
{SUBSTITUTE: 'miscelaneous'}
{"------------------------------------------------------------------------"; ~~}
{"---Okresl przyciaganie: 1 - do lewej, 2 - wysrodkowanie, 3 - do prawej. "; ~~}
{left:=exec('prleft','#print',1,width,prnwidth+4); ~~}
{"------------------------------------------------------------------------"; ~~}
{"---Drukuje kartke produkcyjna dla biezacej pozycji przewodnika zlecenia."; ~~}
{"---Do wydruku ramek zostal wykorzystany obiekt PRN klasy PRINT."; ~~}
{MACRO: 'prnkart'}
{ENTIRE}

{ZGH.cntx_psh();
{? ZGP.NRPRZ().ZLEC().NRNZL<>0
|| _zl_nad_ref:=exec('top_level','zl_link', ZGP.NRPRZ().ZLEC);
   {? _zl_nad_ref<>ZGP.NRPRZ().ZLEC
   || zl_nad:=exec('FindAndGet','#table',ZL,_zl_nad_ref,,"' ('+SYM+')'",'')
   || zl_nad:=''
   ?}
?}
;~~}
  {FONT: 'kod'}{<{left} ZGP.NRPRZ().ZLEC().JORG().KOD}{FONT: 'fa'}{'  data: '+form(ZGP.STARTD)+', zm. ' + form(PROD_REJ.QZMIANA)}{FONT: 'kod'}{<{left+65} ZGP.PLACE().KOD}
  {FONT: 'fa'}{<{left}PRN.bartab*(prnwidth)}
  {FONT: 'kod'}{<{left}' OPERACJA: '}{form(ZGP.OPIS)}{FONT:'fa'}
  {FONT: 'fa'}{<{left+28}ZGP.NRZLP().NRPRZ+'-'+form(ZGP.NRP,,0,'9')+zl_nad+' (nr: '+form(#ZGP.ref(),-7,,'99')+')'}{FONT:'fa'}{<{prnwidth-25}' '}{BARCODE: form(#ZGP.ref(),-7,,'99'); 25; 2}
  {<{left+28}'Ilość do wykonania: '}{FONT: 'fab'}{' %1 %2'@[form(ZGP.ILOSC,,ZGP.NRZLP().ZLEC().KTM().DOKL),M.J().KOD]}{FONT: 'fa'}{' z %1 %2'@[form(ZGP.NRZLP().ZLEC().IL,,ZGP.NRZLP().ZLEC().KTM().DOKL),M.J().KOD]}
  {FONT: 'fa'}{<{left+28} ZGP.NRZLP().ZLEC().OPIS}
  {FONT: 'kod'}{<{left}' PRODUKT: '}{FONT: 'fab'}{ZGH.ZLEC().KTM().KTM + ' - ' + ((prnwidth-(+(ZL.KTM().KTM)+5))+M.N)}

  {FONT: 'fa'}{REP: exec('memo2rep','phr_druk',ZGP,'OPISMEMO',ZGP.ref(),left+2,prnwidth-5)}

  {IF: exec('tpz_ref','zl_guide',ZGP.ref())<>null}
  {FONT: 'kod'}{<{left}' OPERACJA TPZ: '}{FONT: 'fa'}{'(nr: '+form(#exec('tpz_ref','zl_guide',ZGP.ref()),-7,,'99')+')'}{<{prnwidth-40}' '}{BARCODE: form(#exec('tpz_ref','zl_guide',ZGP.ref()),-7,,'99'); 25; 2}

  {FI}
  {IF: czy_sur=0}
       {FONT: 'fat'}{<{left} '-'*(prnwidth+7)}{FONT: 'fa'}
  {FI}
  {zmiana:=PROD_REJ.QZMIANA;stanowisko:=ZGP.PLACE().KOD;~~}
{ZGH.cntx_pop();~~}
{ENTIRE-}
{MACRO-}
{MACRO: 'prnsur'}
{ENTIRE}
  {<{left+5} form(surowce.LP,2)+'. '+surowce.KTM+'-'+((prnwidth-30-(+(surowce.KTM)+5))+surowce.N)}{FONT: 'fab'}{<{prnwidth-40}'Pobrano: '}
  {<{left+10} 'Ilość planowana:'}{FONT: 'fab'}{' %1 %2'@[ form(ilosc$4,,4,'9'), surowce.JM]}{FONT: 'fa'}{<{prnwidth-(30+tabulator)}' '}{BARCODE: surowce.KODK;25;1}

{ENTIRE-}
{MACRO-}
{"========================================================================"; ~~}
{"=========================== POCZATEK WYDRUKU ==========================="; ~~}
{"========================================================================"; ~~}
{"---Glowna petla.                                                        "; ~~}
{" Sprawdzenie czy przewodnik jest w planie operacyjnym"; ~~}
{{? ZGP.ZL().PLAN_PO<>'T'
 || {? exec('get_w','#params',9985,2,OPERATOR.USER)<>'T'
    || FUN.error('Przewodnik nie został umieszczony w planie operacyjnym !!!\n'+
                 'Wydruk kartek produkcyjnych nie jest możliwy, skontaktuj się z planistą.');
       czy_po:=0
    || czy_po:=1
    ?}
 ?};
~~}
{IF: ~czy_po}{EXIT}{FI}
{czy_sur:=FUN.ask('Czy na kartakach drukować surowce do operaji?'); ~~}
{FOR: kartki}
{DO}
{ 'Ustawienie odpowiednigo kontekstu ZGP';
  {? PROD_REJ.seek(kartki.REF,kartki.DBMASK)
  || {? ZGP.seek(PROD_REJ.ZGP)
     || {? ZGP.TPZ='T'
        || drukuj:=0
        || drukuj:=1
        ?}
     || drukuj:=0
     ?}
  || drukuj:=0
  ?};
~~}
{IF: drukuj}
  {IF: (zmiana<>''&zmiana<>PROD_REJ.QZMIANA)|(stanowisko<>''&stanowisko<>ZGP.PLACE().KOD);0}
  {PAGE}
  {FI}
  {SUBSTITUTE: 'prnkart'}
  {IF: czy_sur}
  {'lista surowców - tabele tymczasowa - wyliczenia surowców na etapy';
  {? type_of('surowce')>0 || VAR_DEL.delete('surowce') ?};
  {? type_of('etapy')>0 || VAR_DEL.delete('etapy') ?};
  etap:=0;
  etapy:=sql('select ZLIM.NR as NRETAPU from ZLIM where 1=0');
  {! _i:=1..5 |! etapy.NRETAPU:=_i; etapy.add() !};
  surowce:=sql('select TMAT.LP,
                       M.KTM,
                       M.N,
                       M.KODK,
                       JM.KOD as JM,
                       TMAT.QILE01,
                       TMAT.QILE02,
                       TMAT.QILE03,
                       TMAT.QILE04,
                       TMAT.QILE05,
                       TMAT.QILE01 as IL01,
                       TMAT.QILE02 as IL02,
                       TMAT.QILE03 as IL03,
                       TMAT.QILE04 as IL04,
                       TMAT.QILE05 as IL05,
                       0 as ETAP,
                       TMAT.WARB as NORMA,
                       ZLIM.LIL,
                       (select sum(ZLIMS.LIL) from @ZLIM as ZLIMS where ZLIMS.ZGP=ZLIM.ZGP and ZLIMS.KOR=ZLIM.NR and ZLIMS.KOR<>0) as ILK,
                       ZLIM.LIL as IL
                 from @ZLIM join M using(ZLIM.KTM,M.REFERENCE)
                           left join @TMAT using(ZLIM.TMAT,TMAT.REFERENCE)
                           join JM using(M.J,JM.REFERENCE)
                where ZLIM.ZGP=:_a and ZLIM.SO=\'S\' and ZLIM.KOR=0
                order by LP
               ',ZGP.ref());
  'Uzupełnienie ilości wg. etapów';
  {? surowce.first()
  || {!|? surowce.IL:=surowce.LIL+surowce.ILK; surowce.put(); surowce.next() !};
     surowce.first();
     {!
     |? {? surowce.IL=surowce.QILE01 | (surowce.QILE01+surowce.QILE02+surowce.QILE03+surowce.QILE04+surowce.QILE05)=0
        || surowce.IL01:=surowce.IL;
           etap:=surowce.ETAP:=1;
           surowce.put()
        |? (surowce.QILE01+surowce.QILE02+surowce.QILE03+surowce.QILE04+surowce.QILE05)>0
        || {? surowce.QILE01>0 & surowce.NORMA>0
           || surowce.IL01:=((surowce.QILE01/surowce.NORMA)*surowce.IL)$4;
              etap:=surowce.ETAP:=1;
              surowce.put()
           ?};
           {? surowce.QILE02>0 & surowce.NORMA>0
           || surowce.IL02:=((surowce.QILE02/surowce.NORMA)*surowce.IL)$4;
              etap:=surowce.ETAP:=2;
              surowce.put()
           ?};
           {? surowce.QILE03>0 & surowce.NORMA>0
           || surowce.IL03:=((surowce.QILE03/surowce.NORMA)*surowce.IL)$4;
              etap:=surowce.ETAP:=3;
              surowce.put()
           ?};
           {? surowce.QILE04>0 & surowce.NORMA>0
           || surowce.IL04:=((surowce.QILE04/surowce.NORMA)*surowce.IL)$4;
              etap:=surowce.ETAP:=4;
              surowce.put()
           ?};
           {? surowce.QILE05>0 & surowce.NORMA>0
           || surowce.IL05:=((surowce.QILE05/surowce.NORMA)*surowce.IL)$4;
              etap:=surowce.ETAP:=5;
              surowce.put()
           ?}
        ?};
        surowce.next()
     !}
  ?};
  ~~}
  {IF: surowce.first()}
     {FOR: etapy}
     {DO}
       {temp:=1; ~~}
       {FOR: surowce}
       {DO}
          {ilosc:=($('surowce.IL0'+$etapy.NRETAPU))(); ~~}
          {IF: ilosc>0}
            {IF: temp}
          {FONT: 'kod'}{<{left}' LISTA SUROWCÓW '}{FONT: 'fa'}{' (etap %1)'@[$etapy.NRETAPU]}{FONT: 'fa'}
            {temp:=0;~~}
            {FI}
            {SUBSTITUTE: 'prnsur'}
            {tabulator+=25;{? tabulator>76 ||tabulator:=0?};~~}
         {FI}
       {OD}
       {tabulator:=0;~~}
     {OD}
     {FONT: 'fat'}{<{left} '-'*(prnwidth+7)}{FONT: 'fa'}
   {ELSE}
     {FONT: 'fat'}{<{left} '-'*(prnwidth+7)}{FONT: 'fa'}
   {FI}
   {FI}
{FI}
{OD}
