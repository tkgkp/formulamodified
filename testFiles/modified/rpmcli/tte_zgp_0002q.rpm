:!UTF-8
{TITLE:0.1.NUCO. Wydruk kartek produkcyjnych przewodnika}
{PRINTER: INFO.W_PRN,,,,,'i','b',,,,,,1,PAR_WYDR.MLEFT,PAR_WYDR.MTOP,PAR_WYDR.MRIGHT,PAR_WYDR.MBOT,0,1}
{BEGIN:
  ZGH.cntx_psh();
  ZGP.cntx_psh();
  PRN := obj_new(@.CLASS.PRINT, 6);
  PRN.s_frame();
  kreska :='─';
  ramka:='│';
  opcja:=0;
  temp:=0;
  waslbar:=0;
  "---Pozioma wspolrzedna lewej czesci tabeli. Jest uzalezniona od sposobu";
  "---przyciagania tabeli na stronie. Jest wyliczana przez formule 'prleft'";
  "---umieszczona za definicja wiersza wydruku.";
  left:=0;
  width:=115;
  pop:='';
  nas:='';
  zl_nad:='';
  czy_sur:=1;
  czy_po:=1;
  "-----------------------------------------------";
  "U W A G A!   TUTAJ KONFIGURUJ SZEROKOSC KOLUMN.";
  "- - - - - - - - - - - - - - - - - - - - - - - -";
  "---Szerokosc wydruku.";
  prnwidth:=115;
  "---Szerokosci poszczegolnych kolumn.";
  lpwd:=3;      "Lp.";
  inwd:=30;     "Imie i nazwisko";
  ilwd:=5;      "Ilosc wykonana";
  sg1wd:=8;     "Podpis 1";
  dtwd:=9;      "Data";
  sg2wd:=10;    "Podpis 2";
  "---Liczba pozycji kartki produkcyjnej.";
  pozcount:=2;
  ilosc:=0
}
{END:
  ZGH.cntx_pop();
  ZGP.cntx_pop();
  obj_del(PRN);
  &kreska;
  &opcja;
  &temp;
  &waslbar;
  &left;
  &width;
  &nas;
  &pop;
  &prnwidth;
  &ramka;
  &lpwd;
  &inwd;
  &ilwd;
  &sg1wd;
  &dtwd;
  &sg2wd;
  &pozcount;
  &ilosc;
  &czy_sur;
  &czy_po;
  &zl_nad;
  VAR_DEL.delete('surowce');
  VAR_DEL.delete('etapy')
}

{DEFINEFONT: 'fa=CourierNew,120,m,8'}
{FONT: 'fa'}
{font:={? PAR_WYDR.FONTKRES*'39'>0 || 'a';'e' || 'm'?};~~}
{DEFINEFONT: 'kod=Courier New,160,x,8'}
{"------------------------------------------------------------------------"; ~~}
{"---Zbior funkcji wykorzystywanych w biezacej definicji wydruku.         "; ~~}
{MACRO: 'functions'}
  {"--- B R A K   F U N K C J I   W Y D R U K U.                          "; ~~}
{MACRO-}
{"------------------------------------------------------------------------"; ~~}
{"---Sekcja akcji inicjalizujacych.                                       "; ~~}
{MACRO: 'miscelaneous'}
  {"--- B R A K   A K C J I   I N I C J A L I Z U J A C Y C H.            "; ~~}
{MACRO-}
{"------------------------------------------------------------------------"; ~~}
{"---Deklaracja funkcji wydruku.                                          "; ~~}
{SUBSTITUTE: 'functions'}
{"------------------------------------------------------------------------"; ~~}
{"---Wykonanie akcji inicjalizujacych.                                    "; ~~}
{SUBSTITUTE: 'miscelaneous'}
{"------------------------------------------------------------------------"; ~~}
{"---Okresl przyciaganie: 1 - do lewej, 2 - wysrodkowanie, 3 - do prawej. "; ~~}
{left:=exec('prleft','#print',1,width,prnwidth+4); ~~}
{"------------------------------------------------------------------------"; ~~}
{"---Drukuje kartke produkcyjna dla biezacej pozycji przewodnika zlecenia."; ~~}
{"---Do wydruku ramek zostal wykorzystany obiekt PRN klasy PRINT."; ~~}
{MACRO: 'prnkart'}
{ENTIRE}

{ZGH.cntx_psh();
{? ZGP.NRPRZ().ZLEC().NRNZL<>0
|| _zl_nad_ref:=exec('top_level','zl_link', ZGP.NRPRZ().ZLEC);
   {? _zl_nad_ref<>ZGP.NRPRZ().ZLEC
   || zl_nad:=exec('FindAndGet','#table',ZL,_zl_nad_ref,,"' ('+SYM+')'",'')
   || zl_nad:=''
   ?}
?};
~~}
  {<{left}PRN.bartab*(prnwidth)}
  {FONT: 'kod'}{<{left}' Kartka produkcyjna nr: '}{FONT: 'fa'}{ZGP.NRZLP().NRPRZ+'-'+form(ZGP.NRP,,0,'9')+'(nr: '+form(#ZGP.ref(),-7,,'99')+')'}{<{prnwidth-35}' '}{BARCODE: form(#ZGP.ref(),-7,,'99'); 25; 2}
  {<{left+5}' Zlecenie: %1%3 z dnia: %2'@[ZGP.NRZLP().ZLEC().SYM, $ZGP.NRZLP().STARTD, zl_nad]}
  {<{left}PRN.bartab*(prnwidth)}
  {FONT: 'kod'}{<{left}' Produkt:'}{FONT: 'fa'}{ZGH.ZLEC().KTM().KTM + ' - ' + ((prnwidth-(+(ZL.KTM().KTM)+5))+M.N)}
  {<{left+5}' Ilość do wykonania: %1 %2'@[form(ZGH.ILNPRZ,,ZL.KTM().DOKL),M.J().KOD]}
  {<{left} PRN.bartab*prnwidth}
  {FONT: 'kod'}{<{left}' Opis czynności: '}{FONT: 'fa'}{ZGP.OPIS}
  {REP: exec('memo2rep','phr_druk',ZGP,'OPISMEMO',ZGP.ref(),left+10,prnwidth-10)}
  {<{left} PRN.bartab*prnwidth}
  {IF: exec('tpz_ref','zl_guide',ZGP.ref())<>null}
  {FONT: 'kod'}{<{left}' Operacji TPZ nr: '}{FONT: 'fa'}{form(#exec('tpz_ref','zl_guide',ZGP.ref()),-7,,'99')}{<{prnwidth-33}' '}{BARCODE: form(#exec('tpz_ref','zl_guide',ZGP.ref()),-7,,'99'); 25; 2}

  {<{left} PRN.bartab*prnwidth}
  {FI}
{ZGH.cntx_pop();~~}
{ENTIRE-}
{MACRO-}
{MACRO: 'prnsur'}
{ENTIRE}
  {<{left+5} surowce.KTM+'-'+((prnwidth-30-(+(surowce.KTM)+5))+surowce.N)}{<{prnwidth-30}' '}{BARCODE: surowce.KODK;25;1}
  {<{left+10} 'Ilość planowana: %1 %2'@[ form(ilosc$4,,4,'9'), surowce.JM]}{<{prnwidth-40}'Ilość pobrana: '}
{ENTIRE-}
{MACRO-}
{"========================================================================"; ~~}
{"=========================== POCZATEK WYDRUKU ==========================="; ~~}
{"========================================================================"; ~~}
{" Sprawdzenie czy przewodnik jest w planie operacyjnym"; ~~}
{{? ZGP.ZL().PLAN_PO<>'T'
 || {? exec('get_w','#params',9985,2,OPERATOR.USER)<>'T'
    || FUN.error('Przewodnik nie został umieszczony w planie operacyjnym !!!\n'+
                 'Wydruk kartek produkcyjnych nie jest możliwy, skontaktuj się z planistą.');
       czy_po:=0
    || czy_po:=1
    ?}
 ?};
~~}
{IF: ~czy_po}{EXIT}{FI}
{czy_sur:=FUN.ask('Czy na kartakach drukować surowce do operaji?'); ~~}
{"---Glowna petla.                                                        "; ~~}
{FOR: 'ZGP'}
  {INDEX: 'NRPP'}
  {PREFIX: ZGH.ref()}
{DO}
{IF: ZGP.TPZ='N'}
  {SUBSTITUTE: 'prnkart'}
  {IF: czy_sur}
  {'lista surowców - tabele tymczasowa - wyliczenia surowców na etapy';
  {? type_of('surowce')>0 || VAR_DEL.delete('surowce') ?};
  {? type_of('etapy')>0 || VAR_DEL.delete('etapy') ?};
  etap:=0;
  etapy:=sql('select ZLIM.NR as NRETAPU from ZLIM where 1=0');
  {! _i:=1..5 |! etapy.NRETAPU:=_i; etapy.add() !};
  surowce:=sql('select ZLIM.NR,
                       M.KTM,
                       M.N,
                       M.KODK,
                       JM.KOD as JM,
                       ZLIM.LIL as IL,
                       TMAT.WARB as NORMA,
                       TMAT.QILE01,
                       TMAT.QILE02,
                       TMAT.QILE03,
                       TMAT.QILE04,
                       TMAT.QILE05,
                       TMAT.QILE01 as IL01,
                       TMAT.QILE02 as IL02,
                       TMAT.QILE03 as IL03,
                       TMAT.QILE04 as IL04,
                       TMAT.QILE05 as IL05,
                       0 as ETAP
                 from @ZLIM join M using(ZLIM.KTM,M.REFERENCE)
                           join @TMAT using(ZLIM.TMAT,TMAT.REFERENCE)
                           join JM using(M.J,JM.REFERENCE)
                where ZLIM.ZGP=:_a and ZLIM.SO=\'S\'
               ',ZGP.ref());
  'Uzupełnienie ilości wg. etapów';
  {? surowce.first()
  || {!
     |? {? surowce.IL=surowce.QILE01 | (surowce.QILE01+surowce.QILE02+surowce.QILE03+surowce.QILE04+surowce.QILE05)=0
        || surowce.IL01:=surowce.IL;
           etap:=surowce.ETAP:=1;
           surowce.put()
        |? (surowce.QILE01+surowce.QILE02+surowce.QILE03+surowce.QILE04+surowce.QILE05)>0
        || {? surowce.QILE01>0 & surowce.NORMA>0
           || surowce.IL01:=((surowce.QILE01/surowce.NORMA)*surowce.IL)$4;
              etap:=surowce.ETAP:=1;
              surowce.put()
           ?};
           {? surowce.QILE02>0 & surowce.NORMA>0
           || surowce.IL02:=((surowce.QILE02/surowce.NORMA)*surowce.IL)$4;
              etap:=surowce.ETAP:=2;
              surowce.put()
           ?};
           {? surowce.QILE03>0 & surowce.NORMA>0
           || surowce.IL03:=((surowce.QILE03/surowce.NORMA)*surowce.IL)$4;
              etap:=surowce.ETAP:=3;
              surowce.put()
           ?};
           {? surowce.QILE04>0 & surowce.NORMA>0
           || surowce.IL04:=((surowce.QILE04/surowce.NORMA)*surowce.IL)$4;
              etap:=surowce.ETAP:=4;
              surowce.put()
           ?};
           {? surowce.QILE05>0 & surowce.NORMA>0
           || surowce.IL05:=((surowce.QILE05/surowce.NORMA)*surowce.IL)$4;
              etap:=surowce.ETAP:=5;
              surowce.put()
           ?}
        ?};
        surowce.next()
     !}
  ?};
  ~~}
  {IF: surowce.first()}
     {FOR: etapy}
     {DO}
       {temp:=1; ~~}
       {FOR: surowce}
       {DO}
          {ilosc:=($('surowce.IL0'+$etapy.NRETAPU))(); ~~}
          {IF: ilosc>0}
            {IF: temp}

          {FONT: 'kod'}{<{left}' Lista surowców etapu %1'@[$etapy.NRETAPU]}{FONT: 'fa'}
          {<{left} PRN.bartab*(prnwidth)}
            {temp:=0;~~}
            {FI}
            {SUBSTITUTE: 'prnsur'}
         {FI}
       {OD}
     {OD}
   {FI}
   {FI}
   {<{left} PRN.bartab*(prnwidth)}
   {<{left}' Zarejestrował                 Ilość dobra           Ilość braków              Data           Podpis'}


   {<1 '─ '*(width%2)}
{FI}
{OD}
