:!UTF-8
{BEGIN:
   PAR_WYDR.TITLE:='';
   VAR_DEL.delete('Zatr','cnt','lmt','Text','Textbr','__CALL','__USED','__TPAR','__PALL','HSTR','ok','enable',
      'czy_szablon','czy_paperless');
   P.cntx_psh();
   H.cntx_psh();
   O.cntx_psh();
   LS.cntx_psh();
   Text:=exec('uprawnieniawrap','pkd','Przebiegu zatrudnienia','PKD_EZK_PPZA','PKD_EZK_RPZA');
   {? +Text
   || FUN.emsg('Brak wymaganych uprawnień do przeglądania informacji o:%1'[Text])
   || Zatr:=Textbr:='';
      cnt:=lmt:=ok:=0;
      czy_szablon:=(exec('rep_set','rap_zew','PXX_ZASWZATR',1)='T');
      H.index('_HISTKOD');
      O.index('LISTYPLA');

      __TPAR:=tab_tmp(1,
         'DWZ','DATE','Data wystawienia',
         'NETTO','INTEGER','Wykazywać kwotę netto?',
         'BRUTTO','INTEGER','Wykazywać kwotę brutto?',
         'OTWARTE', 'STRING[1]','Uwzględniać listy otwarte?',
         'TID','STRING[1]','Typ identyfikatora na zaświadczeniu',
         'UCP','INTEGER','Uwzględniać dane z umów cywilno-prawnych?',
         'OBC','STRING[1]','Wykazywać obciążenia (zajęcia)?',
         'TYPOO', 'STRING[1]', 'Okres odniesienia:',
         'OOR','INTEGER','Okres odniesienia - rok',
         'OOM','INTEGER','Okres odniesienia - miesiąc',
         'LMCY','INTEGER','Liczba miesięcy wstecz',
         'CEL','STRING[150]','Cel wydania zaświadczenia',
         'STATUS','STRING[1]','Upadłość/Likwidacja/Postępowanie naprawcze',
         'START','DATE','Start',
         'INFO','STRING[150]','Informacje o pracowniku'
      );

      enable:="
         _TAB:={? var_pres('_a')=type_of(P) || _a || cur_tab() ?};
         _we:={? var_pres('_b')=type_of('') || _b || _TAB.win_edit('?') ?};
         _sval:=$(_TAB.NETTO | _TAB.BRUTTO);
         _TAB.efld_opt(_we,'enable=%1' [_sval],,'UCP');
         _TAB.efld_opt(_we,'enable=%1' [_sval],,'OBC');
         _TAB.efld_opt(_we,'enable=%1,mark=%1' [_sval],,'OOR');
         _TAB.efld_opt(_we,'enable=%1,mark=%1' [_sval],,'OOM');
         _TAB.efld_opt(_we,'enable=%1,mark=%1' [_sval],,'LMCY');
         ~~
      ";
      __TPAR.fld_fml('NETTO','AFTER_EDIT',enable);
      __TPAR.fld_fml('BRUTTO','AFTER_EDIT',enable);

      __TPAR.fld_fml('OTWARTE','BLANK',"'T'");
      _ws:=__TPAR.mk_edit('Parametry wydruku zaświadczenia',,'#zaswzatr');
      __TPAR.win_esep(_ws,'Parametry wydruku');
      __TPAR.win_efld(_ws,,'INFO',,,80,,1,'Pracownik',,'Informacje o pracowniku');
      __TPAR.win_efld(_ws,AH,'H',,,,,1,'');
      __TPAR.win_efld(_ws,,'DWZ',,,,,,);
      __TPAR.win_efld(_ws,AH,'H',,,,,1,'');
      __TPAR.win_efld(_ws,,'NETTO',,,,,,,,,'check-box',,"1","0");
      __TPAR.win_efld(_ws,,'BRUTTO',,,,,,,,,'check-box',,"1","0");
      __TPAR.win_efld(_ws,,'OTWARTE',,,,,,,,'Po zaznaczeniu, w obliczeniach średniego wynagrodzenia uwzględniane będą również otwarte listy płac','check-box',,"'T'","'N'");
      __TPAR.win_efld(_ws,,'UCP',,,,,,,,,'check-box',,"1","0");
      __TPAR.win_efld(_ws,AH,'H',,,,,1,'');
      __TPAR.win_efld(_ws,,'OBC',,,,,,,,,'radio-buttons',,
         'Nie',"'N'",
         'tak, prezentowana będzie Informacja',"'I'",
         'tak, prezentowana będzie Kwota',"'K'"
      );
      __TPAR.win_efld(_ws,AH,'H',,,,,1,'');
      __TPAR.win_efld(_ws,,'TID',,,,,,,,,'radio-buttons',,
         'brak',"'N'",
         'PESEL',"'P'",
         'dowód osobisty',"'D'",
         'paszport',"'S'"
      );
      __TPAR.win_efld(_ws,AH,'H',,,,,1,'');
      __TPAR.win_efld(_ws,,'TYPOO',,,,,,,,,'radio-buttons',,'Kosztowy',"'K'",'Podatkowy',"'P'");
      __TPAR.win_efld(_ws,,'OOR',,,5,0,,'   Rok',,'Okres odniesienia - Rok');
      __TPAR.win_efld(_ws,,'OOM',,,2,0,,'   Miesiąc',,'Okres odniesienia - miesiąc');
      __TPAR.win_efld(_ws,,'LMCY',,,3,0,,'Średnie wynagrodzenie z (m-cy)',,'Liczba miesięcy wstecz');
      __TPAR.win_efld(_ws,AH,'H',,,,,1,'');
      __TPAR.win_efld(_ws,,'STATUS',,,,,,'Status zakładu pracy:',,,'radio-buttons',,
         'zakład pracy znajduje się w stanie Upadłości',"'U'",
         'zakład pracy znajduje się w okresie Likwidacji',"'L'",
         'zakład pracy jest objęty postępowaniem Naprawczym',"'N'",
         'żadne z powyższych (informacja drukowana)',"'X'",
         'nie będzie umieszczony w zaświadczeniu',"'-'"
      );
      __TPAR.win_efld(_ws,AH,'H',,,,,1,'');
      __TPAR.win_efld(_ws,,'CEL',,,80,,,'Cel wydania');

      __TPAR.efld_opt(_ws,'mark=1',,'DWZ');
      exec('ok_esc','#window',__TPAR,_ws);
      __TPAR.win_edit(_ws);
      __PALL:=exec('dostepne_p','schemat',dziedzina,'Z');
      __PALL.index(__PALL.ndx_tmp(,,'OSOBA',,));

      HSTR:=obj_new(@.CLASS.STRING);
      _par:=params_get();
      _paperless:=var_pres('_par')>100 & var_pres('PEP',_par)>0 & var_pres('active',_par.PEP)>0 & _par.PEP.active;
      _args:=exec('wybierz_args','pracownik');
      {? _paperless
      || _args.WIELU:=~_paperless;
         _args.SQL_FROM:=" JOIN OSOBA using(P.OSOBA, OSOBA.REFERENCE)"+
                         " JOIN USERS using(USERS.OSOBA, OSOBA.REFERENCE)"+
                         " JOIN USERSF using(USERSF.USERS, USERS.REFERENCE)";
         _args.SQL_WHERE:=''+"P.PORTAL='T' and USERSF.PORTAL2='T'";
         czy_paperless:=0;
         {? ~czy_szablon & exec('rep_set','rap_zew','zaswzatr')<>'T' & _par.PEP.fml_after=""
         || czy_paperless:=1
         ?}
      ?};
      {? _paperless & _par.PEP.P
      || params_set('P',exec('wybierz_silent','pracownik',_par.PEP.P).P,'paperless',_paperless,'par',_par)
      || params_set('P',exec('wybierz_parses','pracownik',dziedzina,_args).P,'paperless',_paperless,'par',_par)
      ?};
      Text:={? ~params_get(1).P.first() || 'Nie wybrano pracownika' || '' ?};
      __xr_ins:=exec('new_ins','rap_zew','PXX_ZASWZATR')
   ?}
}
{END:
   P.cntx_pop();
   H.cntx_pop();
   O.cntx_pop();
   LS.cntx_pop();
   {? var_pres('__xr_ins')=type_of(null()) || exec('del_ins','rap_zew',&__xr_ins) ?};
   VAR_DEL.delete('Zatr','cnt','lmt','Text','Textbr','__CALL','__USED','__TPAR','__PALL','HSTR','dziedzina','__xr_ins',
      'enable','czy_szablon','czy_paperless');
   VAR_DEL.delete('ok')
}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{EXIT: +Text}
{EXIT: ~__xr_ins}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{MACRO: 'licz'}
{  __TPAR.blank();
   __TPAR.INFO:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' nr teczki '+|P.T;
   __TPAR.DWZ:=date();
   __TPAR.NETTO:=1;
   __TPAR.TID:='P';
   __TPAR.OBC:='N';
   _dt:=date(__TPAR.DWZ~1,__TPAR.DWZ~2,1)-1;
   __TPAR.OOR:=_dt~1;
   __TPAR.OOM:=_dt~2;
   __TPAR.LMCY:=3;
   __TPAR.STATUS:='-';
   __TPAR.CEL:='Zaświadczenie wydaje się na wniosek w/w.';
   enable(__TPAR,__TPAR.win_edit('?'));
   {? czy_szablon | __TPAR.edit(
         "  _tab:=cur_tab();
            {? _tab.DWZ=date(0,0,0)
            || FUN.emsg('Podanie daty wystawienia jest obowiązkowe.');
               _tab.DWZ:=date();
               'DWZ'
            |? _tab.DWZ>date()
            || FUN.emsg('Data wystawienia nie może przypadać w przyszłości.');
               'DWZ'
            |? _tab.NETTO | _tab.BRUTTO
            || {? __RUB.sys_sql(6411,_tab.DWZ)='' | __RUB.sys_sql(642,_tab.DWZ)=''
               || FUN.emsg('Na dzień %1 r. brak atrybutów (6411 i/lub 642) dotyczących składników.'[_tab.DWZ$4]+'\n'+
                           'Uzupełnij parametry i spróbuj ponownie.'
                  );
                  'DWZ'
               |? _tab.OBC<>'N' & __RUB.sys_sql(643,_tab.DWZ)=''
               || FUN.emsg('Na dzień %1 r. brak atrybutu (643) dotyczącego obciążeń.'[_tab.DWZ$4]+'\n'+
                           'Uzupełnij parametry i spróbuj ponownie.');
                  'OBC'
               |? _tab.OOR<1900 | _tab.OOR>9999
               || FUN.emsg('Proszę podać poprawną wartość w polu \"Rok\" w sekcji \"Okres odniesienia\".');
                  'OOR'
               |? _tab.OOM<1 | _tab.OOM>12
               || FUN.emsg('Proszę podać poprawną wartość w polu \"Miesiąc\" w sekcji \"Okres odniesienia\".');
                  'OOM'
               |? _tab.LMCY=0
               || FUN.emsg('Podanie liczby miesięcy wstecz jest obowiązkowe.');
                  'LMCY'
               |? P.DZA>date(_tab.OOR,_tab.OOM-_tab.LMCY+1,1)
               || {? date(P.DZA~1,P.DZA~2,1)=date(_tab.OOR,_tab.OOM-_tab.LMCY+1,1)
                  || {? FUN.ask('Pierwszy miesiąc zatrudnienia %1 jest niepełny.'[P.DZA$8]+'\n'+
                                'Czy uwzględniać w zaświadczeniu?')
                     || ''
                     || 'LMCY'
                     ?}
                  || FUN.emsg('Podana liczba miesięcy wykracza poza datę\nzatrudnienia pracownika (%1 r.).' [P.DZA$6]);
                     'LMCY'
                  ?}
               |? date(_tab.DWZ~1,_tab.DWZ~2,1)<date(_tab.OOR,_tab.OOM,1)
               || FUN.emsg('Okres odniesienia nie może przypadać w przyszłości,\n'
                           'w stosunku do daty wystawienia zaświadczenia.');
                  'OOM'
               |? P.DZ<>date(0,0,0) & P.DZ<date(_tab.OOR,_tab.OOM,1) &
                  FUN.ask(
                     'Data zwolnienia (%1 r.) przypada po okresie odniesienia (%2 r.).\n'
                     'Czy na pewno chcesz kontynuować?' [P.DZ$6,date(_tab.OOR,_tab.OOM,1)$8]
                  )=0
               || 'OOR'
               |? _tab.CEL*'!!'
               || FUN.emsg('Użycie dwóch wykrzykników nie jest dozwolone.');
                  'CEL'
               || ''
               ?}
            || ''
            ?}
         "
      )
   || ok:=1;
      {? __TPAR.TYPOO = 'K' || O.index('LISTYPLA') || O.index('LISTYPLP') ?};
      _skl:=obj_new('BruttoP','BruttoM','Narzuty','Obciazenia');
      {! _lp:=1..obj_len(_skl)
      |! _skl[_lp]:=obj_new('KW','R');
         _skl[_lp].KW:=0
      !};
      _lmcy:=0;
      {? __TPAR.NETTO | __TPAR.BRUTTO
      || _skl.BruttoP.R:=__RUB.sys_rub(6411,__TPAR.DWZ);
         _skl.BruttoM.R:=__RUB.sys_rub(6412,__TPAR.DWZ);
         {? __TPAR.NETTO || _skl.Narzuty.R:=__RUB.sys_rub(642,__TPAR.DWZ) ?};
         {? __TPAR.OBC<>'N' || _skl.Obciazenia.R:=__RUB.sys_rub(643,__TPAR.DWZ) ?};
         {! _mx:=1..__TPAR.LMCY
         |! _dt:=date(__TPAR.OOR,__TPAR.OOM-_mx+1,1);
            O.prefix(exec('ref_firma','ustawienia'),__F_ZATR.O,_dt~1,_dt~2);
            _dO:=O.first();
            {!
            |? _dO
            |! {? {? __TPAR.OTWARTE='T' || 1 || O.Z='T' ?}
               || LS.use(-O.LT);
                  LS.index('PRACNRRU');
                  {! _nrt:=1..obj_len(_skl)
                  |! {? type_of(_skl[_nrt].R)>100 & _skl[_nrt].R.first()
                     || {!
                        |? LS.prefix(P.ref(),_skl[_nrt].R.RN);
                           {? LS.first() || {! |? _skl[_nrt].KW+=LS.KW; LS.next() !} ?};
                           _skl[_nrt].R.next()
                        !}
                     ?}
                  !}
               ?};
               _dO:=O.next()
            !};
            {? __TPAR.UCP
            || P.cntx_psh();
               __PALL.prefix($P.OSOBA);
               _dprz:=__PALL.first();
               {!
               |? _dprz
               |! {? P.seek(__PALL.REF)
                  ||
                     O.prefix(exec('ref_firma','ustawienia'),'Z',_dt~1,_dt~2);
                     _dO:=O.first();
                     _par258:=PAR_SKID.get(258);
                     _ucp_par:=0;
                     {? _par258='T' || _ucp_par:=1 ?};
                     {!
                     |? _dO
                     |! {? {? ~_ucp_par || 1 || {? __TPAR.OTWARTE='T' || 1 || O.Z='T' ?} ?}
                        || LS.use(-O.LT);
                        LS.index('PRACNRRU');
                        {! _nrt:=1..obj_len(_skl)
                        |! {? type_of(_skl[_nrt].R)>100 & _skl[_nrt].R.first()
                           || {!
                              |? LS.prefix(P.ref(),_skl[_nrt].R.RN);
                                 {? LS.first() || {! |? _skl[_nrt].KW+=LS.KW; LS.next() !} ?};
                                 _skl[_nrt].R.next()
                              !}
                           ?}
                        !}
                      ?};
                        _dO:=O.next()
                     !}
                  ?};
                  _dprz:=__PALL.next()
               !};
               P.cntx_pop()
            ?};

            _lmcy+=1
         !}
      ?};
      _brutto:=_skl.BruttoP.KW-_skl.BruttoM.KW;
      _netto:=_brutto-_skl.Narzuty.KW;
      cnt+=1;
      _umowa:=_rodz_um:='';
      H.prefix(P.ref,'Z');
      {? H.last()
      || H.UMOWA();
         _umowa:=exec('zaswumpr_rodzaj','szablon_rek',H,2,1,1);
            _rodz_um:=RU.K
      ?};
      exec('ins_par','rap_zew',__xr_ins,cnt,
         'F_NAZWA',  KST.NAZWA,
         'MIEJSCE',  PAR_WYDR.MIEJSC,
         'DATA',     __TPAR.DWZ$4+'r.',
         'F_ULICA',  exec('ulica','stalesys'),
         'F_POCZTA', exec('poczta','stalesys'),
         'F_REGON',  KST.REG,
         'F_NIP',    KST.NIP
      );
      'szukamy adresu zamieszkania, jesli nie ma to staly';
      {? var_pres('_kod')>100 || obj_del(_kod) ?};
      _kod:=obj_new(2);
      _kod[1]:='C';
      _kod[2]:='S';
      _licz:=0;
      _exit:=0;
      {!
      |? _licz+=1;
         {? exec('szukaj','osoba',_kod[_licz]) || _exit:=1 ?};
         ~_exit & _licz<obj_len(_kod)
      !};
      {? ~_exit || _licz:=2 ?};
      exec('ins_par','rap_zew',__xr_ins,cnt,
         'NAZWISKO', P.OSOBA().NAZWISKO,
         'IMIE',     OSOBA.PIERWSZE,
         'DRUGIEIM', OSOBA.DRUGIE,
         'PLEC',     OSOBA.PLEC,
         'ADRES',    exec('adres','osoba',_kod[_licz]),
         'IDENT',    {? __TPAR.TID='N'
                     || ''
                     |? __TPAR.TID='P'
                     || _ident:=P.OSOBA().PESEL; {? +_ident || 'PESEL: '+_ident || '' ?}
                     |? __TPAR.TID='D'
                     || _ident:=P.OSOBA().DOWOD; {? +_ident || 'dowód osobisty: '+_ident || '' ?}
                     |? __TPAR.TID='S'
                     || _ident:=P.OSOBA().PASZPORT; {? +_ident || 'paszport: '+_ident || '' ?}
                     || ''
                     ?},
         'ZATRUDN',  P.ZA,
         'D_ZATR',   {? P.DZA<>date(0,0,0) || P.DZA$6+' r.' || '' ?},
         'RODZ_UM',  _rodz_um,
         'UMOWA',    _umowa,
         'D_ZWOL',   {? P.DZ<>date(0,0,0) || P.DZ$6+' r.' || '' ?},
         'ZWOL',     exec('uspkod','personel',P)
      );
      exec('ins_par','rap_zew',__xr_ins,cnt,
         'RODZAJ',   {? __TPAR.NETTO & __TPAR.BRUTTO || 'netto i brutto'
                     |? __TPAR.NETTO || 'netto'
                     |? __TPAR.BRUTTO || 'brutto'
                     || ''
                     ?},
         'SREDNIA',  {? _lmcy || form(_netto/_lmcy$2,,2) || '' ?},
         'SLOW_SR',  {? _lmcy || STR.kwota_sł(_netto/_lmcy$2) || '' ?},
         'SRED_BR',  {? _lmcy || form(_brutto/_lmcy$2,,2) || '' ?},
         'SLOW_SRB', {? _lmcy || STR.kwota_sł(_brutto/_lmcy$2) || '' ?}
      );
      exec('ins_par','rap_zew',__xr_ins,cnt,
         'OBC_TYP',  {? (__TPAR.NETTO | __TPAR.BRUTTO) & _brutto || __TPAR.OBC || 'N' ?},
         'OBC_KW',   {? _lmcy || form(_skl.Obciazenia.KW/_lmcy$2,,2) || '' ?},
         'OBC_SL',   {? _lmcy || STR.kwota_sł(_skl.Obciazenia.KW/_lmcy$2) || '' ?},
         'SLOW_UZ',  {? __TPAR.UCP || '(z uwzględnieniem umów cywilno-prawnych)' || '' ?},
         'MSC_OD',   date(__TPAR.OOR,__TPAR.OOM,0)$6+' r.',
         'MSC_DO',   _dxt:=date(__TPAR.OOR,__TPAR.OOM-__TPAR.LMCY+1,1);
                     {? P.DZA>_dxt || P.DZA || _dxt ?}$6+' r.',
         'STATUS',   {? __TPAR.STATUS='-'
                     || ''
                     || 'Zakład pracy '+
                        {? __TPAR.STATUS='U' || 'znajduje się w stanie upadłości'
                        |? __TPAR.STATUS='L' || 'znajduje się w okresie likwidacji'
                        |? __TPAR.STATUS='N' || 'jest objęty postępowaniem naprawczym'
                        || 'nie znajduje się w stanie upadłości ani w okresie likwidacji '+
                           'ani nie jest objęty postępowaniem naprawczym'
                        ?}+'.'
                     ?},
         'CEL',      __TPAR.CEL
      )
   || ok:=0
   ?}; ~~
}
{  {? ok
   || exec('ins_par','rap_zew',__xr_ins,cnt,
           'F_LOGO',{? PAR_WYDR.LOGO || exec('tmp_cp_logo','img_blob') || '' ?},
           'CZY_ZAP',{? params_get().paperless || '1' || '' ?}
       )
   ?};
   ~~
}
{MACRO-}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{FOR: params_get().P} {DO}
   {IF: var_pres('czy_paperless')>0 & czy_paperless}
      {IF: P.seek(params_get().P.SQL,,1)}
         {ok:=1;~~}
      {FI}
   {ELSE}
      {IF: P.seek(params_get().P.SQL,,1)}
         {SUBSTITUTE: 'licz'}
      {FI}
   {FI}
      {EXIT: ~ok}
   {OD}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{EXIT: ~((var_pres('czy_paperless')>0 & czy_paperless) | exec('ready','rap_zew',__xr_ins))}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{IF: exec('rep_set','rap_zew','PXX_ZASWZATR',1)='T'}
   {FOR: params_get().P} {DO}
      {IF: P.seek(params_get().P.SQL,,1)}{
         P;
         _paperless:=params_get().paperless;
         _exe:={? _paperless || 2 || 3 ?};
         _file:=exec('wypelnij','szablon','PXX_ZASWZATR',,,_exe,,_paperless);
         {? _paperless & var_pres('_file')>0 & var_pres('INFO',_file)>0 & var_pres('STATUS',_file)>0 & _file.STATUS=1
         || exec('add_file_and_run','paperless_grp',
               P.ref(),_file.INFO,'Inne','Zaświadczenie o zatrudnieniu i zarobkach')
         ?};
         ~~
      }{FI}
      {EXIT: ~ok}
   {OD}
   {EXIT}
{FI}
{IF: exec('rep_set','rap_zew','zaswzatr')='T'}
   { exec('use_tmp','rap_zew','zaswzatr');
     {? params_get().paperless
     || exec('add_file_and_run','paperless_grp',
           P.ref(),'@!Tmp\\macrotmp.doc','Inne','Zaświadczenie o zatrudnieniu i zarobkach')
     ?};
   ~~ }
   {EXIT}
{ELSE}
   {IF: params_get().paperless & params_get().par.PEP.fml_after=""}
      { params_get().par.PEP.P:=P.ref();
        params_get().par.PEP.fml_after:="
            _pep:=obj_new('active','fml_after','P');
            _pep.active:=1;
            _pep.fml_after:=\"1\";
            _pep.P:=_a;
            {? var_pres('_params')>100
            || exec('obj_ntab_set','#array',_params,'PEP',_pep)
            || _params:=obj_new('PEP');
               _params.PEP:=_pep
            ?};
            params_set(_params);
            _name:='@'+tmp_dir()+exec('sep','#file')+'pkd_zaswzatrudnienie_%1'[$P.tm_stamp()]+'.pdf';
            rep_exec('pkd_zaswzatrudnienie',,0,_name,1,,1);
            exec('add_file_and_run','paperless_grp',
            _pep.P,_name,'Inne','Zaświadczenie o zatrudnieniu i zarobkach')";
      ~~ }
      {EXIT}
   {ELSE}
   { __CALL:=proc_exec('zatr@zasw',#__xr_ins); ~~ }
   {INCLUDE: p_zaswzatmq.rpi}
{FI}
{FI}