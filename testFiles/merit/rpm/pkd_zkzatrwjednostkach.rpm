:!UTF-8
{TITLE:Zatrudnienie w jednostkach organizacyjnych}
{PRINTER: exec('prt','param_wydr','v',KST),,,,,'Q','C',,,,,,1,
          PAR_WYDR.MLEFT,PAR_WYDR.MTOP,PAR_WYDR.MRIGHT,PAR_WYDR.MBOT,0,1,,'enable'}
{BEGIN:
   PAR_WYDR.TITLE:='Zatrudnienie w jednostkach organizacyjnych'@;
   VAR_DEL.delete('par','prn1','vp','lmt','rsep','tab');
   par:=obj_new(8);

   par[7]:=exec('par_wydr_ddp','pkd',
      PAR_WYDR.TITLE,
      "  {? cur_tab().OD=#0
         || FUN.emsg('Proszę podać datę kontroli'@); 0
         || 1
         ?}
      ",
      date(),'Data kontroli'@,"1"
   );
   {? par[7].size()
   ||
      'szerokości kolumn';
      par[8]:=obj_new(8);
      par[8][1]:=5; 'liczba porządkująca';
      par[8][2]:=17; 'symbol jednostki org.';
      par[8][3]:=6; 'zatrudnieni w jednostce org.';
      par[8][4]:=10; 'wystąpienia wymiaru w jednostce org.';
      par[8][5]:=1; 'bloki raportu';
      par[8][6]:=0; 'maksymalna szerokość';
      par[8][7]:=0; 'zliczanie pomocnicze';

      _P:=exec('wybierz_parses','pracownik','PKD').P;

      tab:=sql('select distinct ROW_NUMBER() OVER (ORDER BY 2) as LICZBA,'+
            {? var_pres('MAC',H)>0 || 'H.RWY' || 'H.WY' ?}+' WYMIAR '+
                  'from P join H using(P.REFERENCE,H.P) join UD_SKL using(H.WYDZIAL,UD_SKL.REFERENCE) join H_ZM '
                  'where P.REFERENCE in (select :_a.SQL from :_a) and H_ZM.KZ=\'Z\' and '
                        'H.OD<=to_date(:_b) and (H.DO is null or to_date(:_b)<=H.DO)',
             _P,par[7].OD
      );

      par[3]:=sql('select UD_SKL.SYMBOL WYDZIAL, H.RWY WYMIAR, 1 LICZBA '
                  'from P join H using(P.REFERENCE,H.P) join UD_SKL using(H.WYDZIAL,UD_SKL.REFERENCE) join H_ZM '
                  'where P.REFERENCE in (select :_a.SQL from :_a) and H_ZM.KZ=\'Z\' and '
                        'H.OD<=to_date(:_b) and (H.DO is null or to_date(:_b)<=H.DO)',
             _P,par[7].OD
      );

      exec('object','#pivot');
      (par[2]:=obj_new(@.CLASS.PIVOT,par[3],'WYMIAR','sum','LICZBA')).
      grpfld('WYDZIAL').count(1).dosum(1).make();

      par[4]:=lmt:=rsep:=0;
      par[5]:=vp:=1;
      prn1:={? rep_export()|| 'par[1]' || 'par[1][1]' ?}
   ?}
}
{END:
   VAR_DEL.delete('par','prn1','vp','lmt','rsep','tab')
}
{FONT: 'T8G'}
{SPACE: 'C'}
{EXIT: ~par[7].size()}
{EXIT: ~par[2].valid()}
{  _cc:=par[2].fld_num();
   _cc-=(_cc%32);
   _bpc:=_lpc:=0;

   _wd:=par[8];
   'maksymalna szerokość';
   _wd[6]:=charleft();
   'wyliczenie liczby kolumn w pierwszym bloku wydruku';
   _fpc:=floor((_wd[6]-_wd[1]-_wd[2]-_wd[3]-10)/(_wd[4]+3));
   'czy wydruk powinien być podzielony na bloki?';
   '(liczba kolumn danych większa od wyliczonej)';
   {? _fpc<(_cc-3)
   || 'kolumny danych na kolejnych stronach';
      _bpc:=floor((_wd[6]-_wd[1]-4)/(_wd[4]+3));
      _lpc:=(_cc-_fpc-3)%*_bpc;
      _wd[5]+=(_cc-_fpc-_lpc-3)%_bpc;
      _wd[5]+=(_lpc<>0)
   || _fpc:=_cc-3
   ?};

   par[1]:={? ~rep_export() || obj_new(_wd[5]) ||  obj_new(@.CLASS.PRINT,1+tab.size()) ?};
   {? ~rep_export() || par[6]:=obj_new(_wd[5]) ?};

   _off:=0;
   {? ~rep_export()
   || {! _ii:=1.._wd[5]
      |! _bcc:={? _ii=_wd[5] & _ii>1 || {? _lpc || _lpc || _bpc ?}
               |? _ii=1 || _fpc
               || _bpc
               ?};

         par[1][_ii]:=obj_new(@.CLASS.PRINT,_bcc+{? _ii=1 || 2 ?}+1);
         par[1][_ii].add("$#par[2].OUT.ref()",_wd[1],'Lp.',1,,,,,',,\'9.\'');
         {? _ii=1
         || par[1][_ii].add("par[2].OUT.WYDZIAL",_wd[2],'Jednostka organizacyjna'@);
            par[1][_ii].add("par[2].OUT.PQ_COUNT",_wd[3],'Liczba'@,1)
         ?};

         {! _ij:=_off+3.._off+_bcc+2
         |! par[1][_ii].add($('par[2].fld_val('+$_ij+')'),_wd[4],par[2].fld_name(_ij),1)
         !};
         par[6][_ii]:=obj_new(@.CLASS.PRINT,_bcc+(_ii=1)+1);
         par[6][_ii].add("'Razem'@",_wd[1]+{? _ii=1 || _wd[2]+3 ?});
         {? _ii=1 || par[6][_ii].add("par[2].SUM.PQ_COUNT",_wd[3],'',1) ?};
         {! _ij:=_off+2.._off+_bcc+1
         |! par[6][_ii].add($('par[2].sfld_val('+$_ij+')'),_wd[4],'',1)
         !};

         par[1][_ii].s_frame();
         par[6][_ii].s_frame();
         _off+=_bcc
      !}
   || par[1].add("par[2].OUT.WYDZIAL",50,'Jednostka org.'@);
      {? tab.first()
      || {!
         |? _m:=tab.LICZBA+2;
            par[1].add($('par[2].fld_val('+$_m+')'),20,par[2].fld_name(_m),1,,,,,,',0,\'1,\'');
            tab.next()
         !}
      ?};
      par[1].s_frame()
   ?};

   {? par[2].OUT.first ()
   || par[4]:=par[2].OUT.ref()
   ?}; ~~
}
{COMMENT}OLD: zk_wym.rpm{COMMENT-}
{COMMENT}OLD: skid_pw.rpi{COMMENT-}
{INCLUDE: wsp_pw.rpi}
{COMMENT}
══════════════════════════════════════════════════════════════════════════════

   K O N F I G U R A C J A   -   N A G Ł Ó W E K,   S T O P K A

{COMMENT-}
{HEADER}
{SUBSTITUTE: 'HEAD'}
{FONT: 'T8G'}
{SPACE: 'C'}
{IF: #par[2].OUT.ref()=1}
   {LINE}
   {<{lmt+1}'Parametry sprawozdania'@}
   {<{lmt+1}'Data kontroli:'@} {par[7].OD$1}
{FI}
{FONT: 'T8GB'}
{SPACE: 'C'}
{LINE}
{SUBSTITUTE: 'TABHEAD'}
{HEADER-}
{FOOTER: 0}
{FONT: 'T8G'}
{SPACE: 'C'}
{SUBSTITUTE: 'LINIAF'}
{FOOTER-}
{IF: ~rep_export()}
   {SUBSTITUTE: 'FOOT'}
{FI}
{COMMENT}
══════════════════════════════════════════════════════════════════════════════

   Z A W A R T O Ś Ć   W Y D R U K U

{COMMENT-}
{FONT: 'T8G'}
{SPACE: 'C'}
{IF: ~rep_export()}
{WHILE: (par[8][7]+=1)<=par[8][5]}{DO}
   {  prn1:='par[1]['+$par[8][7]+']';
      lmt:=int({? par[8][5]=1 | (par[8][7]>1 & par[8][7]<par[8][5])
               || (charleft()-($prn1)().width())*0.5
               |? par[8][7]=1
               || charleft()-($prn1)().width()
               ?}); ~~
   }
{IF: par[2].OUT.seek(par[4])}
{SUBSTITUTE: 'LINIA0'}
{FI}
{WHILE: (par[8][8]:=par[2].OUT.next()) & lineleft()<>1}{DO}
{SUBSTITUTE: 'LINIA0'}
{OD}
{IF: lineleft()=1}
   {  {? par[8][8] & par[8][7]=par[8][5]
      || par[4]:=par[2].OUT.ref();
         par[8][7]:=0
      ?};~~
   }
   {PAGE}
{FI}
{IF: ~par[8][8]}
   { prn1:='par[6]['+$par[8][7]+']'; ~~ }
   {REP: '{<{lmt+1}}'+par[1][par[8][7]].jbar(par[6][par[8][7]])}
{SUBSTITUTE: 'LINIA0'}
   {PAGE}
{FI}
{OD}
{ELSE}
{IF: par[2].OUT.seek(par[4])}
{SUBSTITUTE: 'LINIA0'}
{FI}
{WHILE: (par[8][8]:=par[2].OUT.next()) & lineleft()<>1}{DO}
{SUBSTITUTE: 'LINIA0'}
{OD}
{IF: lineleft()=1}
   {  {? par[8][8] & par[8][7]=par[8][5]
      || par[4]:=par[2].OUT.ref();
         par[8][7]:=0
      ?};~~
   }
   {PAGE}
{FI}
{FI}