:!UTF-8
{BEGIN:
   VAR_DEL.delete('par','suma','tresc','Wym','HistDat','DataDo','lmt','Text');

   tresc:='Pzus_eme';
   PAR_WYDR.TITLE:='Zaświadczenie dla celów emerytalnych'@;

   par:=obj_new(16);
   suma:=obj_new(5);
   par[15]:=1;

   N.cntx_psh;
   H.cntx_psh;
   P.cntx_psh();

   EMER_REN.cntx_psh();

   _upr:=exec('uprawnieniawrap','pkd',
              'Naliczonych składnikach płacowych'@,
              'PPL_PLL_RSKP',
              'PPL_PLL_PSKP'
             );

   {? +_upr
   || FUN.emsg('Brak wymaganych uprawnień do przeglądania informacji o:%1'@[_upr])
   |? ~(+__RUB.sys_sql(661))
   || FUN.emsg('Brak zdefiniowanych atrybutów składników płacowych do wykonania sprawozdania.\n'
          'Uzupełnij atrybut 661 - Składniki przychodu do zaświadczenia.'@)
   || par[1]:=tab_tmp(,'ROK','INTEGER','Rok',
         'MC_OD','INTEGER','Miesiąc początkowy',
         'MC_DO','INTEGER','Miesiąc końcowy',
         'DATA','DATE','Data wydruku');

      _red:=par[1].mk_edit('Parametry wydruku'@,,'pzus_eme_red');
      par[1].win_esep(_red,'Okres pobrania danych'@);
      par[1].win_efld(_red,,'ROK',,,4,,,'Rok'@,,'Rok pobrania danych do zaświadczenia.');
      par[1].win_efld(_red,,'MC_OD',,,2,,,'Miesiąc początkowy'@,,'Miesiąc początkowy pobrania danych do zaświadczenia.');
      par[1].win_efld(_red,,'MC_DO',,,2,,,'Miesiąc końcowy'@,,'Miesiąc końcowy pobrania danych do zaświadczenia.');
      par[1].win_esep(_red,'Informacje dodatkowe'@);
      par[1].win_efld(_red,,'DATA',,,10,,,'Data wydruku'@,,'Data wydruku zaświadczenia.');

      par[1].efld_opt(_red,'mark=1',,'ROK');
      par[1].efld_opt(_red,'mark=1',,'MC_OD');
      par[1].efld_opt(_red,'mark=1',,'MC_DO');
      par[1].efld_opt(_red,'mark=1',,'DATA');

      exec('ok_esc','#window',par[1],_red);
      par[1].win_edit(_red);
      par[1].DATA:=date();
      par[1].ROK:=date~1;
      par[1].MC_OD:=1;
      par[1].MC_DO:=12;
      {? par[1].edit("{? cur_tab.ROK<1900
                      || FUN.emsg('Rok nie może być wcześniejszy niż 1900.'@);
                         'ROK'
                      |? cur_tab.ROK>date~1
                      || FUN.emsg('Rok nie może być późniejszy niż rok bieżący.'@);
                         'ROK'
                      |? cur_tab.MC_OD<1
                      || FUN.emsg('Miesiąc początkowy nie może być mniejszy od 1.'@);
                         'MC_OD'
                      |? cur_tab.MC_OD>12
                      || FUN.emsg('Miesiąc początkowy nie może być większy od 12.'@);
                         'MC_OD'
                      |? cur_tab.MC_OD>cur_tab.MC_DO
                      || FUN.emsg('Miesiąc początkowy nie może być większy od miesiąc końcowy.'@);
                         'MC_OD'
                      |? cur_tab.MC_DO<1
                      || FUN.emsg('Miesiąc końcowy nie może być mniejszy od 1.'@);
                         'MC_DO'
                      |? cur_tab.MC_DO>12
                      || FUN.emsg('Miesiąc końcowy nie może być większy od 12.'@);
                         'MC_DO'
                      |? cur_tab.DATA=date(0,0,0)
                      || FUN.emsg('Data wydruku musi być podana.'@);
                         'DATA'
                      || 1
                      ?}"
         )
      || par[1].add()
      ?};

      {? par[1].first()
      || par[3]:=date(par[1].ROK,par[1].MC_OD,1);
         par[4]:=date(par[1].ROK,par[1].MC_DO,0);

         par[2]:=tab_tmp(3,'TYP','STRING[1]',,'OD','DATE',,'DO','DATE',,'RT','STRING[40]',);

         params_set('P',exec('wybierz_parses','pracownik','PPL').P);

         par[6]:=obj_new(@.CLASS.PRINT,6);
         par[6].add("par[7]",5,'Mc',1);
         par[6].add("par[8]",14,'Przychód 2)',1,,,,,'13,2');
         par[6].add("par[9]",14,'Wynagrodzenie za chorobę 3)*)',1,,,,,'13,2');
         par[6].add("par[10]",14,'R A Z E M        4) [2+3]',1,,,,,'13,2');
         par[6].add("par[11]",14,'Składki na ub. społeczne 5)',1,,,,,'13,2');
         par[6].add("par[12]",14,'Dochód             6)       [4-5]',1,,,,,'13,2');
         par[6].s_frame();

         par[15]:=0;
         par[16]:=obj_new('P','K');
         par[16].P:=par[16].K:=date(0,0,0)

      ?}
   ?};
 Wym:=0;
 HistDat:=date(0,0,0);
 DataDo:=date(0,0,0);
 lmt:=0;
 Text:='';
 par[14]:=0;
~~ }
{END:

  N.cntx_pop;
  H.cntx_pop;
  P.cntx_pop();
  EMER_REN.cntx_pop();
  VAR_DEL.delete('par','suma','tresc','Wym','HistDat','DataDo','lmt','Text')
}
{EXIT:par[15]}
{  echo('Trwa pobieranie danych z list płac...'@);

   _sql:='select P.IP as IP,
               sum(case when R.RN in('+__RUB.sys_sql(661)+') then LS.KW else 0 end) as PRZYCHOD,'+
               {? +__RUB.sys_sql(411)
               || 'sum(case when R.RN in('+__RUB.sys_sql(411)+') then LS.KW else 0 end) as WYNCHOR,'
               || '0 as WYNCHOR,'
               ?}+
               {? +__RUB.sys_sql(662)
               || 'sum(case when R.RN in('+__RUB.sys_sql(662)+') then LS.KW else 0 end) as MINUS,'
               || '0 as MINUS,'
               ?}+
               {? +__RUB.sys_sql(663)
               || 'sum(case when R.RN in('+__RUB.sys_sql(663)+') then LS.KW else 0 end) as CHOROBA,'
               || '0 as CHOROBA,'
               ?}+'
               sum(case when R.RN in('+__RUB.sys_sql(5711)+') then LS.KW else 0 end) as SK_ZUS,
               sum(case when R.RN in('+__RUB.sys_sql(572)+') then LS.KW else 0 end) as SK_CH,
               O.MU as M
         from  P join @LS using(LS.P,P.REFERENCE) join R join O
         where (LS.REFERENCE like \'l'+(($(par[1].ROK-1))+2)+'%\' or LS.REFERENCE like \'l'+(($par[1].ROK)+2)+'%\')
               and P.REFERENCE in (select :_a.SQL from :_a) and O.RU=:_b and O.MU>=:_c and O.MU<=:_d
         group by P.IP, O.MU
         order by IP, M';

   par[5]:=sql(_sql,params_get().P,par[1].ROK,par[1].MC_OD,par[1].MC_DO);
   echo();
~~}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{MACRO:tresc}
{IF:par[14]}
{PAGE}
{FI}
{par[14]:=1;Wym:=0;~~}

{FONT:'m'}{SPACE:'c'}{>110 {? +PAR_WYDR.MIEJSC || PAR_WYDR.MIEJSC || '' ?}+', dn.'}{par[1].DATA}



{SPACE:'b'}
{>120'..................................'}

{>120'..................................'}

{>120'..................................'}

{IF:EMER_REN.prefix(exec('ref_firma','ustawienia'),P.OSOBA);EMER_REN.last()}
{>120EMER_REN.NRE}
{ELSE}
{>120'..................................'}
{FI}





{FONT:'f'}
{<1>80'Zaświadczenie dla celów emerytalnych/rentowych'}


{FONT:'i'}
{
   Text:=
      'Zaświadcza się, że Pan'+{? P.OSOBA().PLEC='K' || 'i' || '' ?}+' '+
      P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' ur. '+$P.OSOBA().UR_DATA+' PESEL '+P.OSOBA().PESEL+', '+
      {? {? __F_ZATR.O='P'
         || P.ZA='T'
         || par[16].K=date(0,0,0) | par[16].K=date(9999,1,1)
         ?}
      || 'jest'
      || 'był'+{? P.OSOBA().PLEC='K' || 'a' || '' ?}
      ?}+
      ' zatrudnion'+{? P.OSOBA().PLEC='K' || 'a' || 'y' ?}+' w '+KST.NAZWA+
      ' od dnia '+$par[16].P+' '+
      {? ~(par[16].K=date(0,0,0) | par[16].K=date(9999,1,1)) || 'do dnia '+$par[16].K || '' ?}+
      ' na podstawie umowy'+{? __F_ZATR.O='P' || ' o pracę w wymiarze:' || ' cywilnoprawnej w okresie:' ?};
   STR.split(Text);
   ~~
}
{WHILE: +(Text:=STR.line(par[6].width()-5))}
{DO}
{<5Text}
{OD}
{IF:__F_ZATR.O='Z'}
{FOR:par[2]}{PREFIX:'U'}
{DO}
   {<5}od {par[2].OD
   } do {IF: par[2].DO=date(9999,1,1) | par[2].DO~2=0 | par[2].DO~3=0}czas nieokreślony{ELSE}{par[2].DO}{FI}
{OD}
{ELSE}
{FOR: H}
{INDEX: '_HISTKOD'}
{FROM: P.ref,'Z'}
{TO: P.ref,'Z'}
{DO}
{FIRST}{ DataDo:=date(0,0,0); ~~ }{FIRST-}
{IF: Wym<>H.RWY}{ HistDat:=H.OD; DataDo:=H.DO; Wym:=H.RWY; ~~ }{ELSE}{ DataDo:=H.DO; ~~ }{FI}
{TOTAL: {? H.RWY=1 || '- pełny etat' || '- '+($H.RWY)+' etatu' ?}}
{<5}w okresie od {HistDat} do {{? DataDo=date(0,0,0) || 'nadal' || DataDo ?}} {grp_fld}
{OD}
{FI}
{'uzupełnienie informacji o nieobecnościach i urlopach';
_nazwa:="{? __RUB.sys_attr(N.NB,121)
         || 'wynagrodzenie za chorobę'
         |? __RUB.sys_attr(N.NB,1221)
         || 'zasiłek chorobowy'
         |? __RUB.sys_attr(N.NB,1222)
         || 'świadczenie rehabilitacyjne'
         |? __RUB.sys_attr(N.NB,1225)
         || 'zasiłek opiekuńczy'
         |? __RUB.sys_attr(N.NB,1227)
         || 'zasiłek macierzyński'
         |? __RUB.sys_attr(N.NB,1321)
         || 'nieobecność nieusprawiedliwiona'
         |? __RUB.sys_attr(N.NB,131)
         || 'nieobecność usprawiedliwiona'
         |? __RUB.sys_attr(N.NB,1322)
         || 'nieobecność usprawiedliwiona bezpłatna'
         || N.NB().RT
         ?}";
 N.index('NIEOBECN');
 N.prefix('N',P.ref);
 H.index('_HISTKOD');
 {? N.find_le(par[4])
 || {!
    |? {? (__RUB.sys_attr(N.NB,12) | __RUB.sys_attr(N.NB,131)|__RUB.sys_attr(N.NB,132)) & N.OD>=par[3] & N.DO<=par[4]
       || par[2].TYP:='N';
          par[2].OD:=N.OD;
          par[2].DO:=N.DO;
          par[2].RT:=_nazwa();
          par[2].add()
       ?};
       {? __RUB.sys_attr(N.NB,112) & N.OD>=par[3] & N.DO<=par[4]
       || par[2].TYP:='B';
          par[2].OD:=N.OD;
          par[2].DO:=N.DO;
          par[2].RT:='Urlop bezpłatny';
          par[2].add()
       ?};
       {? __RUB.sys_attr(N.NB,114) & N.OD>=par[3] & N.DO<=par[4]
       || par[2].TYP:='W';
          par[2].OD:=N.OD;
          par[2].DO:=N.DO;
          par[2].RT:='Urlop wychowawczy';
          par[2].add()
       ?};
       N.prev() & N.OD>=par[3]
    !}
 ?};
 'optymalizacja zapisów w tabeli par[2]';
 {? par[2].first()
 || _typ:=par[2].RT;
    _do:=par[2].DO;
    _od:=par[2].OD;
    {? par[2].next()
    || {!
       |? {? _typ=par[2].RT & _do+1=par[2].OD
          || par[2].OD:=_od;
             {? par[2].put()
             || {? par[2].prev()
                || par[2].del()
                ?}
             ?}
          ?};
          _typ:=par[2].RT;
          _do:=par[2].DO;
          _od:=par[2].OD;
          par[2].next
       !}
    ?}
 ?};
 ~~}

{Text:='W okresie zatrudnienia od '+{? par[3]<par[16].P || $par[16].P || $par[3] ?};
 Text+=' do '+{? par[4]>par[16].K & par[16].K<>date(0,0,0) || $par[16].K || $par[4] ?};
 Text+=' Pan'+{? P.OSOBA().PLEC='K' || 'i' || '' ?}+' '+P.OSOBA().NAZWISKO+' '+P.OSOBA().PIERWSZE;
 {? par[2].prefix('N');par[2].first
 || Text+=' korzystał'+{? P.OSOBA().PLEC='K' || 'a' || '' ?}+' ze zwolnień lekarskich wykazanych w załączniku.'
 || Text+=' nie korzystał'+{? P.OSOBA().PLEC='K' || 'a' || '' ?}+' ze zwolnień lekarskich ani świadczeń rehabilitacyjnych.'
 ?};
 STR.split(Text);~~}
{WHILE: +(Text:=STR.line(par[6].width()-5))}
{DO}
{<5}{Text}
{OD}
{FOR:par[2]}{PREFIX:'W'}
{DO}
{FIRST}

{<5}Korzystał{{? P.OSOBA().PLEC='K' || 'a' || '' ?}} z urlopu wychowawczego w dniach:
{FIRST-}
    od {par[2].OD} do {par[2].DO}
{OD}
{IF:par[2].prefix('B');par[2].first}
{FOR:par[2]}{PREFIX:'B'}
{DO}
{FIRST}

{<5}Korzystał{{? P.OSOBA().PLEC='K' || 'a' || '' ?}} z urlopu bezpłatnego w dniach:
{FIRST-}
    od {par[2].OD} do {par[2].DO}
{OD}
{ELSE}

{<5}Nie korzystał{{? P.OSOBA().PLEC='K' || 'a' || '' ?}} z urlopu bezpłatnego.
{FI}

{FONT:'i'}
{<5}Wynagrodzenia za okres od {{? par[3]<par[16].P || par[16].P || par[3] ?}
   } do {{? par[4]>par[16].K & par[16].K<>date(0,0,0) || par[16].K || par[4]?}} wyniosło odpowiednio:
{FONT:'j'}{SPACE:'c'}
{par[13]:=par[1].MC_OD;
 {! _i:=1..5 |! suma[_i]:=0 !};
~~}
{par[6].ini_head(); ~~}
{REP: par[6].fhbar(lmt)}
{WHILE: par[6].h_next()}
{DO}
   {REP: par[6].h_fmline(lmt)}
{OD}
{WHILE:par[13]<=par[1].MC_DO}
{DO}
{IF:par[5].prefix(P.IP,par[13]);par[5].first()}
{par[7]:=par[5].M;
 par[8]:=par[5].PRZYCHOD-par[5].MINUS-par[5].WYNCHOR;
 par[9]:=par[5].CHOROBA;
 par[10]:=par[8]+par[9];
 par[11]:=par[5].SK_ZUS+par[5].SK_CH;
 par[12]:=par[10]-par[11];
 {! _i:=1..5 |! suma[_i]+=par[_i+7] !};
~~}
{par[6].ini_line();~~}
{REP: par[6].fbar(lmt)}
{REP: par[6].fline(lmt)}
{FI}
{par[13]+=1;~~}
{OD}
{IF:suma[1]}
{par[7]:='Razem';
 par[8]:=suma[1];
 par[9]:=suma[2];
 par[10]:=suma[3];
 par[11]:=suma[4];
 par[12]:=suma[5];
~~}
{par[6].ini_line();~~}
{REP: par[6].fbar(lmt)}
{REP: par[6].fline(lmt)}
{FI}
{REP: par[6].flbar(lmt)}
{FONT:'q'}{SPACE:'d'}
{<7}(*)Wynagrodzenie za chorobę, zasiłki chorobowe, opiekuńcze, świadczenia rehabilitacyjne
{MARGIN:0}

{FONT:'i'}{SPACE:'b'}


{ENTIRE}

{<5}Kopia do wiadomości: {P.OSOBA().NAZWISKO} {P.OSOBA().PIERWSZE}
{IF: exec('szukaj','osoba')}
                      {<26}{exec('ulica','osoba')}
                      {<26 }{OS_ADRES.KOD} {OS_ADRES.POCZTA}
{FI}
{ENTIRE-}
{IF:par[2].prefix('N');par[2].first()}
{PAGE}

{FONT:'m'}{SPACE:'c'}{>110 {? +PAR_WYDR.MIEJSC || PAR_WYDR.MIEJSC || '' ?}+', dn.'}{par[1].DATA}




{FONT:'J'}{SPACE:'C'}
{<5>80'Załącznik do zaświadczenia dla celów emerytalnych/rentowych'}
{<5>80 P.OSOBA().NAZWISKO+' '+P.OSOBA().PIERWSZE}
{FONT:'I'}{SPACE:'C'}

{<5}Zwolnienia lekarskie i inne nieobecności:

{FOR:par[2]}{PREFIX:'N'}
 {DO}
{<5}od {par[2].OD} do {par[2].DO} - {par[2].RT}
{OD}
{FI}
{MACRO-}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{ lmt:=int((charleft()-par[6].width())/2); ~~ }
{FOR: params_get().P}{DO}
   {IF: P.seek(params_get().P.SQL,,1)}
      {IF: par[5].prefix(P.IP);par[5].first()}
         {
            par[2].prefix();
            par[2].erase();
            {? __F_ZATR.O='Z'
            || _d0:=date(0,0,0);
               par[16].P:=par[16].K:=_d0;

               ZC.cntx_psh();
               ZC.index('ZLECDAT');
               ZC.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
               {? ZC.first()
               || {!
                  |? {? ZC.DU<=par[4] & (ZC.DW>=par[3] | ZC.DW=date(9999,1,1) | ZC.DW~2=0 | ZC.DW~3=0)
                     || par[2].TYP:='U';
                        par[2].OD:=ZC.DU;
                        par[2].DO:=ZC.DW;
                        par[2].add();
                        {? par[16].P=_d0 | ZC.DU<par[16].P
                        || par[16].P:=ZC.DU
                        ?};
                        {? par[16].K<ZC.DW
                        || par[16].K:=ZC.DW
                        ?}
                     ?};
                     ZC.next() & ZC.DU<=par[4]
                  !}
               ?};
               ZC.cntx_pop()

            || par[16].P:=P.DZA;
               par[16].K:=P.DZ
            ?};
            ~~
         }
         {IF: par[16].P<=par[4] & (par[16].K=date(0,0,0) | par[16].K>=par[3])}
            {SUBSTITUTE: tresc}
         {FI}
      {FI}
   {FI}
{OD}