:!UTF-8
{TITLE:Rozliczenie nieobecności}
{PRINTER: exec('prt','param_wydr','v',KST),,,,,'M','B',,,,,,1,
          PAR_WYDR.MLEFT,PAR_WYDR.MTOP,PAR_WYDR.MRIGHT,PAR_WYDR.MBOT,0,1,,'enable'}
{BEGIN:
   VAR_DEL.delete('par','tresc');
   tresc:='rozl_nie';
   PAR_WYDR.TITLE:='Rozliczenie nieobecności'@;

   par:=obj_new(10);
   P.cntx_psh();
   TZ.cntx_psh();
   NW.cntx_psh();
   NW.index('CHW');
   par[5]:=par[4]:=0;
   _upr:=exec('uprawnieniawrap','pkd','nieobecnościach'@,'PKD_EZK_OPNN','PKD_EZK_ORNN');
   {? +_upr
   || FUN.emsg('Brak wymaganych uprawnień do przeglądania informacji o:%1'@[_upr])
   || par[3]:=exec('pkd_wnieobecn','personel',,tresc,PAR_WYDR.TITLE,0);
      {? par[5]:=par[3].size()
      || {? par[3].KOD || par[7]:=par[3].memo_txt(,1,'LISTA') || par[7]:='' ?};
         par[8]:=null();

         par[1]:=obj_new(@.CLASS.PRINT,{? rep_export() || 11 || 6 ?});

        {? rep_export()
        || par[1].add("P.OSOBA().NAZWISKO",30,'Nazwisko'@);
           par[1].add("P.OSOBA().PIERWSZE+' '+P.OSOBA().DRUGIE",41,'Imiona');
           par[1].add("P.T",9,'Nr teczki'@);
           par[1].add("TZ.N().NB().RT+' od '@+N.OD$1+' do '@+N.DO$1",100,'Nieobecność'@);
           par[1].add("form(N.POD,,2,'9,')+
              {? par[10] || ' (w tym składniki okresowe %1)'@[form(par[10],,2,'9.')] || '' ?}
              ",100,'Podstawa wymiaru'@,1)
         ?};
         par[1].add("TZ.M~1",4,'Rok'@,1,,,,,'4,,\'99\'');
         par[1].add("TZ.M~2",4,'Mc'@,1,,,,,'2,,\'99\'');
         par[1].add("TZ.PR",12,'Przepracował'@,1);
         par[1].add("TZ.NO",12,'Powinien przepracować'@,1);
         par[1].add("TZ.KW",15,'Wynagrodzenie'@,1,,,,,'15,2');
         par[1].add(
            "  {? TZ.W='T' || 'm-c zakwalifikowany'@
               |? TZ.W='N' || 'm-c pominięty'@
               |? TZ.W='P' || 'm-c pobrany'@
               || ''
               ?}
            ",20,'Opis'@
         );
         par[1].s_frame();


         par[2]:=obj_new(@.CLASS.PRINT,1);
         {? ~rep_export()
         || par[2].add("
                  {? par[9]=1 || P.OSOBA().NAZWISKO+' '+ OSOBA.PIERWSZE+' '+ OSOBA.DRUGIE+ ' (Nr teczki: %1)'@[|P.T]
                  |? par[9]=2 || N.NB().RT+' od '@+N.OD$1+' do '@+N.DO$1
                  |? par[9]=3 || 'Podstawa wymiaru '@+form(N.POD,,2,'9,')+
                     {? par[10] || ' (w tym składniki okresowe %1)'@[form(par[10],,2,'9.')] || '' ?}
                  || ''
                  ?}
               ",par[1].width()-4,'Nieobecność'@
            );
            par[2].s_frame()
         ?};

         par[9]:=par[10]:=0;
         par[6]:=1;

         params_set('P',exec('wybierz_parses','pracownik','PKD').P)
      ?}
   ?}
}
{END:
   VAR_DEL.delete('par','tresc');
   P.cntx_pop();
   TZ.cntx_pop();
   NW.cntx_pop()
}
{COMMENT}OLD: wnieoroz.rpm{COMMENT-}
{COMMENT}OLD: skid_pw.rpi{COMMENT-}
{COMMENT}OLD: std_prac.rpi{COMMENT-}
{EXIT: ~par[5]}
{EXIT: ~params_get().P.first()}
{INCLUDE: wsp_pw.rpi}
{COMMENT}
══════════════════════════════════════════════════════════════════════════════

   K O N F I G U R A C J A   -   N A G Ł Ó W E K,   S T O P K A

{COMMENT-}
{HEADER}
{SUBSTITUTE: 'HEAD'}
{FONT: 'T8'}
{SPACE: 'B'}
{IF: par[6]}
   {IF: rep_export()}
      {FONT: 'T8G'}
      {SPACE: 'C'}
   {FI}
   {LINE}
   { par[6]:=0; ~~ }
   {<{lmt+1}'Parametry sprawozdania'@}
   {<{lmt+1}'Uwzględniane kody'@}: {
      {? +par[7] || STR.gsub(1-par[7]-1,',',', ') || 'brak ograniczeń'@ ?}}
   {<{lmt+1}'Zakres dat: od %1 do %2'@[par[3].OD$1,par[3].DO$1]}
{FI}
{HEADER-}
{IF: ~rep_export()}
   {SUBSTITUTE: 'FOOT'}
{FI}
{COMMENT}
══════════════════════════════════════════════════════════════════════════════

   M A K R O D E F I N I C J E

{COMMENT-}
{MACRO: 'nieo_dane'}
{IF: {? +par[7] || par[7]*(','+$N.NB().RN+',') || 1 ?}}
   {  par[9]:=par[10]:=0;
      N.cntx_psh();
      NW.prefix(N.ref());
      par[8]:={? NW.first()
              || TZ.use('tabz'+(4+$NW.CHW().OD));
                 par[10]:=exec('dod_do_pd_skl_okr','lista_licz',0,,#N.ref())$2;
                 N.ref()
              || null()
              ?};
      par[4]+=1;
      N.cntx_pop();
      ~~
   }
   {ENTIRE}
   {FOR: TZ}{INDEX: 'ZASTAB'}{PREFIX:'E',par[8]}{DO}
   {FIRST}
      {LINE}
      {FONT: 'T8B'}
      {SPACE: 'B'}
      {REP: par[2].fhbar(lmt)}
      {WHILE: (par[9]+=1)<=3}{DO}
         {IF: {? (__RUB.sys_attr(N.NB,116,N.OD)
                 |
                 ((','+$KST_PAR.URLOP().RN+','+$KST_PAR.URL_CHOR().RN+',')*(','+$N.NB().RN+',')))
                 |
                 __RUB.sys_attr(N.NB,131,N.OD)
                 |
                 __RUB.sys_attr(N.NB,1113,N.OD)
              || par[9]<>3
              || 1
              ?}}
            {par[2].ini_line()}
            {WHILE: par[2].next()}{DO}
               {REP: par[2].fline(lmt)}
            {OD}
         {FI}
      {OD}
      {REP: '{<{lmt+1}}'+par[2].fjbar(par[1])}
      {FONT: 'T8'}
      {SPACE: 'B'}
      {IF: ~rep_export()}{par[1].ini_head()}{FI}
      {WHILE: par[1].h_next()}{DO}
         {REP: par[1].h_fmline(lmt)}
      {OD}
      {REP: par[1].fbar(lmt)}
   {FIRST-}
      {par[1].ini_line()}
      {WHILE: par[1].next()}{DO}
         {REP: par[1].fline(lmt)}
      {OD}
   {OD}
   {IF: par[9]}
      {REP: par[1].flbar(lmt)}
   {FI}
   {ENTIRE-}
{FI}
{MACRO-}
{COMMENT}

   Przeglądaj kartotekę nieobecności w podanym lub pełnym zakresie dat.
   Pełny zakres - wszystkie nieobecności, ograniczony zakres - od daty
   do daty, od 'początku' kartoteki do daty lub od daty do 'końca'.

{COMMENT-}
{MACRO: tresc}
{REP: '{FOR: N}{INDEX: \'NIEOBECN\'}'+
      {? ~par[3].OKR
         || '{PREFIX: \'N\',P.ref()}'
         || '{FROM: \'N\',P.ref()'+{? par[3].OD=#0 || '' || ',par[3].OD' ?}+'}'+
            '{TO: \'N\',P.ref()'+{? par[3].DO=#0 || '' || ',par[3].DO' ?}+'}'
      ?}+'{DO}{SUBSTITUTE: \'nieo_dane\'}{OD}'}
{MACRO-}
{COMMENT}
══════════════════════════════════════════════════════════════════════════════

   Z A W A R T O Ś Ć   W Y D R U K U

{COMMENT-}
{FONT: 'T8'}
{SPACE: 'B'}
{  lmt:=int((charleft()-par[1].width())/2);
   par[2].setcolor(color);
   ~~
}
{IF: rep_export()}{par[1].ini_head()}{FI}
{FOR: params_get().P}{DO}
   {IF: P.seek(params_get().P.SQL,,1)}
      {SUBSTITUTE: tresc}
   {FI}
{OD}