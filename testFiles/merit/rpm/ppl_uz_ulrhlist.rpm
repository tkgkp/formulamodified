:!UTF-8
{TITLE:Lista wypłat zleceniobiorców (paski)}
{PRINTER: exec('prt','param_wydr','h',KST),,,,,'M','C',,,,,,1,5,5,5,5,0,0}
{BEGIN: 'prolog';
   VAR_DEL.delete('par','max','col','row','kwota','nom','Banknoty','LPrac','LWydz','__param','__okredit','__edit','__SKL');
   PAR_WYDR.TITLE:='Lista wypłat zleceniobiorców (paski)'@;
   FUNKCJE.TBEGIN();
   Banknoty:=" form(Nominal[_a],10,2)+':'+
               form(Tbank[_a],10)+'  '+(10*'─')+
               form(Nominal[_a]*Tbank[_a],12,2)
             ";
   LISTA.Update();
   max:=FUNKCJE.TCOLUMNS()*36;
   nom:=FUNKCJE.NOMINAL(200);
   FUNKCJE.TFREE();
   col:=row:=0;
   kwota:=0;
   LPrac:=LWydz:=0;
   par:=obj_new(7);
   par[2]:=VAR.JESTLIST;
   VAR.JESTLIST:=1;
   par[7]:=0;
   P.cntx_psh();
   ZC.cntx_psh();
   ZC.clear;
   RH.cntx_psh();
   RH.clear();
   UD_SKL.cntx_psh();
   UD_SKL.clear();
   _upr:=exec('uprawnieniawrap','pkd',
               'Rachunkach zleceniobiorców'@,
               'PPL_ZLC_RRAC',
               'PPL_ZLC_PRAC'
             );
   {? +_upr
   || FUN.emsg('Brak wymaganych uprawnień do przeglądania informacji o:%1'@[_upr])
   |? LISTA.__Fatal
   || FUN.info(
        'Słownik rubryk płacowych nie jest sparametryzowany poprawnie.'@+'\n'+
        'Ostatnia rubryka (w kolejności obliczeń) powinna być klasy T lub G.'@+'\n'+
        'Tworzenie wydruków list płac, zestawień zbiorczych, itp. nie będzie możliwe.'@+'\n'+
        'Należy uzupełnić lub poprawić definicje rubryk płacowych.'@)
   || __SKL:=exec('plaski_ud_def','schemat',,'PPL','PODZORG',exec('ref_firma','ustawienia'));
      _key:=__SKL.index('?');
      __SKL.index(__SKL.ndx_tmp(,,'INT_REF',,));

      __param:=tab_tmp(1,'TYP','INTEGER','Sposób przygotowania wydruku'@,
                         'RMUA','INTEGER','Informacje ubezpieczeniowe (ZUS RMUA)',
                         'OD','DATE','Początek okresu',
                         'DO','DATE','Koniec okresu');
      __param.RMUA:=0;
      __param.OD:=date(O.R,O.M,1);
      __param.DO:=date(O.R,O.M,0);
      __param.add();

      __edit:=__param.mk_edit(PAR_WYDR.TITLE,0,'ppl_uz_ulrhlist');
      __param.win_esep(__edit,'Sposób przygotowania wydruku '@);
      __param.win_efld(__edit,,'TYP',,,,,,'Sposób podziału danych'@,,,'radio-buttons',,
                               'Cały zakład '@,"0",
                               'wybrana Jednostka '@,"1",
                               'wybrani Zleceniobiorcy '@,"2"
                      );
      __param.win_efld(__edit,,'OD',,,11,,,'Początek okresu'@);
      __param.win_efld(__edit,,'DO',,,11,,,'Koniec okresu'@);

      __param.win_efld(__edit,,'RMUA',,,,,,'ZUS RMUA'@,,,'check-box',
                       'check_label="%1"' ['Drukować informacje ubezpieczeniowe?'@],"1","0");
      __param.efld_opt(__edit,'mark=1',,'OD');
      __param.efld_opt(__edit,'mark=1',,'DO');
      __param.win_edit(__edit);
      exec('ok_esc','#window',__param,__edit);
      __param.win_edit(__edit);
      {? par[7]:=__param.edit(
         " {? (_chk:=__CHK.record(__param,,'OD','DO'))<>''
           || return(_chk)
           |? __param.DO<__param.OD
           || FUN.emsg(
                 '\"%1\" nie może być wcześniejsza niż \"%2\".'@
                 [MS.name(__param,'DO'),MS.name(__param,'OD')]
              );
              return('OD')
           |? __param.OD~1=O.R & __param.OD~2=O.M & __param.DO~2=O.M & __param.DO~1=O.R
           || 1
           || FUN.emsg('Wymagana wartość podanej daty w ramach miesiąca wybranej listy.'@); 'OD'
           ?}
         ")
      || par[1]:=__param.TYP;
         par[3]:=__param.RMUA;

         {? par[1]=2
         || _TMP:=exec('wybierz_parses','pracownik','PPL').P
         || _TMP:=''
         ?};

         __P:=sql(
            'select '
            '  0 WYDZIAL, '
            '  OSOBA.NAZWISKO, '
            '  OSOBA.PIERWSZE, '
            '  P.REFERENCE P, '
            '  RH.REFERENCE RH, '
            '  0 MBREF, '
            '  0 RHREF '
            'from '
            '  RH join '
            '  ZC using(RH.ZLE,ZC.REFERENCE) join '
            '  OSOBA using(ZC.OSOBA,OSOBA.REFERENCE) join '
            '  P using(ZC.P,P.REFERENCE) '
            'where '
            '  RH.FIRMA=:_d and '+
            {? par[1]=2
            || 'P.REFERENCE in (select :_e.SQL from :_e) and '
            || ''
            ?}+
            '  RH.O=:_a and '
            '  RH.DWY between to_date(:_b) and to_date(:_c) '
            'order by 2',
            O.ref(),__param.OD,__param.DO,exec('ref_firma','ustawienia'),_TMP
         );
         {? var_pres('__P')=type_of(SYSLOG)
         || {? __P.first()
            || {!
               |? {? RH.seek(__P.RH) & (_wyd:=RH.ZLE().WYDZIAL; __SKL.find_key(#_wyd))
                  || __P.RHREF:=RH.ref();
                     __P.MBREF:=RH.ZLE().P;
                     __P.WYDZIAL:=_wyd;
                     __P.put
                  ?};
                  __P.next
               !}
            ?};
            __NDX:=__P.ndx_tmp(,,
                  'WYDZIAL',,0,
                  'NAZWISKO',,0,
                  'PIERWSZE',,0
               );
            __P.index(__NDX)
         ?}
      ?};
      __SKL.index(_key)
   ?}
}
{END: 'epilog';
   VAR.JESTLIST:=par[2];
   {? var_pres('__P')=type_of(SYSLOG)
   || __P.ndx_drop(&__NDX);
      obj_del(__P)
   ?};
   FUNKCJE.TEND();
   FUNKCJE.NOMINAL();
   VAR_DEL.delete('par','max','col','row','kwota','nom','Banknoty','LPrac','LWydz','__param','__okredit','__edit','__SKL');
   UD_SKL.cntx_pop();
   P.cntx_pop();
   RH.cntx_pop();
   ZC.cntx_pop();
   echo
}
{COMMENT}OLD: rhlist.rpm{COMMENT-}
{COMMENT}OLD: std_info.rpi{COMMENT-}
{COMMENT}OLD: skid_pw.rpi{COMMENT-}
{COMMENT}OLD: oddzial.rpi{COMMENT-}
{EXIT: LISTA.__Fatal}
{EXIT: ~par[7]}
{INCLUDE: wsp_pw.rpi}
{HEADER}
  {>{max}KST.MIASTO+', dn. '@+$date}
  {<3>{max}STR.split(KST.NAZWA);STR.line(max-10)}
  {IF: STR.next()}{<3>{max}STR.line(max-10)}{FI}
  {<3>{max}'W Y D R U K   L I S T Y   W Y P Ł A T'@}
  {<3>{max}'Lista płac '@+VAR.NAZWALIS+' ('+date(O.R,O.M,1)$8+') '+'nr '@+$O.N+'. Rachunki z listy wypłacone pomiędzy '@
  }{__param.OD$1+' a '+__param.DO$1+'.'}

{HEADER-}
{FOOTER:0 }
{max*'─'}
{>{max}'str. '+$page}
{FOOTER-}
{COMMENT}

   Makrodefinicje do formatowania składników wypłaty zleceniobiorcy i zbiorówek
   oddziałów i zakładu. __nazwa(20 znaków)__kwota(12 znaków)

{COMMENT-}
{MACRO: 'prac'}{
   '  '+(_a:=form(FUNKCJE.TZLEC(col,row,2),20))+
   '  '+{? +(|_a) & FUNKCJE.TZLEC(col,row,1)
           || form(FUNKCJE.TZLEC(col,row,3),12,2)
           || 12*' '
        ?}
}{MACRO-}
{MACRO: 'wydz'}{
   '  '+(_a:=form(FUNKCJE.TWYDZ(col,row,2),20))+
   '  '+{? +(|_a) & FUNKCJE.TWYDZ(col,row,1)
           || form(FUNKCJE.TWYDZ(col,row,3),12,2)
           || 12*' '
        ?}
}{MACRO-}
{MACRO: 'zakl'}{
   '  '+(_a:=form(FUNKCJE.TZAKL(col,row,2),20))+
   '  '+{? +(|_a) & FUNKCJE.TZAKL(col,row,1)
           || form(FUNKCJE.TZAKL(col,row,3),12,2)
           || 12*' '
        ?}
}{MACRO-}
{MACRO: 'zleceniobiorca'}
{FOR: __P}{INDEX: __NDX}{PREFIX: #UD_SKL.ref}
{DO}
{IF: par[4]()}
{  echo('Lista: '@+RH.ZLE().P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.DRUGIE);
   FUNKCJE.TZLEC(LS.name);
   col:=row:=1;
   ~~
}
{COMMENT}

   S K Ł A D N I K I   W Y P Ł A T Y   Z L E C E N I O B I O R C Y

{COMMENT-}
{ENTIRE}
{IF: FUNKCJE.TROWS('Prac')}
{ LPrac+=1; LWydz+=1; max*'─'}

{form(LPrac,-5,,'9.')} ({form(LWydz,-5,,'9.')})  {P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.DRUGIE}    {'Rachunek wypłacony dnia'@} {RH.DWY}    {'Rachunek do umowy nr'@} {|RH.ZLE().NU} {'z dnia'@} {$ZC.DZ}
{IF: RH.ZLE().CZYWAL='T' & RH.ZAS<>'T'}
{'Kwota rachunku w walucie'@} {,2RH.WAL} {ZC.WAL().KOD}    {'Kurs z dnia'@} {dzien:=RH.DWY-1; {! |? {? ~__KAL.w_days(dzien,dzien) || dzien-=1; 1 ?} !}; dzien}: {ZC.WAL(); exec('waluta_miara','lista_licz',SLO.KOD)} {SLO.KOD} = {exec('waluta_kurs','lista_licz',ZC.ZWAL,&dzien,ZC.WAL)} PLN
{FI}

{WHILE: row<=FUNKCJE.TROWS('Prac')}{DO}
{WHILE: col<=FUNKCJE.TCOLUMNS()}{DO}{SUBSTITUTE: 'prac'}{ col+=1; ~~ }{OD}
{ col:=1; row+=1; ~~ }
{OD}
{ col:=1; row:=0; ~~ }
{FUNKCJE.TCOLUMNS()*('  '+(34*'═'))}
{WHILE: col<=FUNKCJE.TCOLUMNS()}{DO}{SUBSTITUTE: 'prac'}{ col+=1; ~~ }{OD}
{  FUNKCJE.TBANK(kwota:=FUNKCJE.TPRAC(FUNKCJE.TCOLUMNS(),0,3)); ~~ }
{FI}
{IF: par[3]}

{'Informacje ubezpieczeniowe (RMUA):'@}
{INCLUDE: p_zlermua.rpi}

{FI}
{ENTIRE-}
{FI}
{OD}
{MACRO-}
{MACRO: 'oddzial'}
{COMMENT}

   S K Ł A D N I K I   Z B I O R Ó W K I   O D D Z I A L U

{COMMENT-}
{ col:=row:=1; ~~ }
{IF: FUNKCJE.TROWS('Wydz')}
{IF: PAR_SKID.get(193)='T'}{IF: lineleft}{PAGE}{FI}{FI}
{ENTIRE}
{max*'─'}

  {'Zbiorówka jednostki organizacyjnej: '@}{UD_SKL.SYMBOL}  {UD_SKL.OPIS}
  {'Lista płac  '@}{VAR.NAZWALIS+' ('+date(O.R,O.M,1)$8+')'}
  {'Razem rachunków: '@}{LWydz}

{WHILE: row<=FUNKCJE.TROWS('Wydz')}{DO}
{WHILE: col<=FUNKCJE.TCOLUMNS()}{DO}{SUBSTITUTE: 'wydz'}{ col+=1; ~~ }{OD}
{ col:=1; row+=1; ~~ }
{OD}
{ col:=1; row:=0; ~~ }
{FUNKCJE.TCOLUMNS()*('  '+(34*'═'))}
{WHILE: col<=FUNKCJE.TCOLUMNS()}{DO}{SUBSTITUTE: 'wydz'}{ col+=1; ~~ }{OD}
{ENTIRE-}
{IF: PAR_SKID.get(193)='T'}{IF: lineleft}{PAGE}{FI}{FI}
{FI}
{MACRO-}
{COMMENT}

   Przeglądaj wszystkie jednostki, i dla każdej z nich przeglądaj kartotekę
   osobową. Dla każdego z nich pobieraj składniki wypłaty. Jeżeli są jakieś,
   to drukuj pasek "wypłaty" zleceniobiorcy.

{COMMENT-}
{IF: ~par[1]}
{  {? ~exec('no_limit','schemat','PPL',0)
   || FUN.emsg(
         '\nBrak praw dostępu do wszystkich jednostek przedsiębiorstwa.'@+
         '\n(wyduk zostanie przygotowany tylko dla dostępnych jednostek)\n'@
      )
   ?};
   ~~
}
{FOR: __SKL}
{DO}
{IF: UD_SKL.seek(__SKL.SQL_REF)}
{ FUNKCJE.TWYDZ();
  LWydz:=0;
  par[4]:="RH.seek(__P.RHREF,RH.name)";
 ~~
}
{SUBSTITUTE: 'zleceniobiorca'}
{SUBSTITUTE: 'oddzial'}
{FI}
{OD}
{COMMENT}

   S K Ł A D N I K I   Z B I O R Ó W K I   Z A K Ł A D U

{COMMENT-}
{ENTIRE}
{ col:=row:=1; ~~ }
{IF: FUNKCJE.TROWS('Zakl')}
{max*'─'}

  {'Zbiorówka zakładu: '@}{KST.NAZWA}   {'Razem rachunków: '@}{LPrac}

{WHILE: row<=FUNKCJE.TROWS('Zakl')}{DO}
{WHILE: col<=FUNKCJE.TCOLUMNS()}{DO}{SUBSTITUTE: 'zakl'}{ col+=1; ~~ }{OD}
{ col:=1; row+=1; ~~ }
{OD}
{ col:=1; row:=0; ~~ }
{FUNKCJE.TCOLUMNS()*('  '+(34*'═'))}
{WHILE: col<=FUNKCJE.TCOLUMNS()}{DO}{SUBSTITUTE: 'zakl'}{ col+=1; ~~ }{OD}
{ kwota:=FUNKCJE.TZAKL(FUNKCJE.TCOLUMNS(),0,3); ~~ }

{SPACE:'c'}
{>{max-50}'Nominały:'@}
{WHILE: nom>0}{DO}
{IF: Tbank[nom]}{>{max}Banknoty(nom)}{FI}
{ nom -= 1; ~~ }
{OD}
{>{max}(12*'═')}
{>{max}form(kwota,12,2)}
{SPACE:'@'}


{SPACE:'c'}
{>{max}'Sprawdzono pod względem merytorycznym: '@+(20*'_')}
{SPACE:'@'}
Zatwierdzono do wypłaty: {,2kwota} zł
słownie: #{STR.kwota_sł(kwota)}#

{SPACE:'c'}
{<1>{max}'Główny księgowy: '@+(20*'_')}{>{max}'Osoba zatwierdzająca: '@+(20*'_')}
{SPACE:'@'}
{FI}
{ENTIRE-}
{COMMENT}

   Koniec wydruku całości

{COMMENT-}
{ELIF: par[1]=1}
{ wyb:='';
   UD_SKL.cntx_psh;
   UD_SKL.index('SYMBOL');
~~}
{WHILE: wyb:=exec('ud_def_sel_dlg','schemat',,,'PPL',2,wyb,,1); wyb<>''}
{DO}
{ UD_SKL.prefix(UD_TYP.ref,wyb,); UD_SKL.first;
  FUNKCJE.TWYDZ(); LWydz:=0;
  par[4]:="RH.seek(__P.RHREF,RH.name)";
~~}
{SUBSTITUTE: 'zleceniobiorca'}
{SUBSTITUTE: 'oddzial'}
{OD}
{ &wyb; UD_SKL.cntx_pop;
~~}
{COMMENT}

   Koniec wydruku wybranych oddziałów

{COMMENT-}
{ELSE}
{FOR: __SKL}
{DO}
{IF: UD_SKL.seek(__SKL.SQL_REF)}
{ par[4]:="RH.seek(__P.RHREF,RH.name)"; ~~}
   {SUBSTITUTE: 'zleceniobiorca'}
{FI}
{OD}
{FI}
{COMMENT}

   Koniec wydruku wybranych zleceniobiorców

{COMMENT-}