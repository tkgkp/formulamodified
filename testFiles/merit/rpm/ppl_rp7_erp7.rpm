:!UTF-8
{TITLE:Zaświadczenie o zatrudnieniu i wynagrodzeniu ERP-7}
{PRINTER: exec('prt','param_wydr','v',KST),,,,,'Q','C',,,,,,1,
          PAR_WYDR.MLEFT,{? PAR_WYDR.MTOP>5 || 5 || PAR_WYDR.MTOP ?},
          PAR_WYDR.MRIGHT,{? PAR_WYDR.MBOT>5 || 5 || PAR_WYDR.MBOT ?},0,1}
{BEGIN:
   VAR_DEL.delete('__limit','__kwlim','__rok','size','z','maxline','kody','opis','druk','cil','par');
   VAR_DEL.delete('__PMD','__PMH','skl','kol','__RPD','licz','dprac','__dbadania','__zm_str','__n_str');
   cil:=obj_new('TITLE','T8','T8B','T8G','T10B');
   par:=obj_new(11);
   suma:=0;
   test:=0;
   pim:=dim:=text:='';
   kody:=obj_new(3);
   kody[1]:='Z'; kody[2]:='N'; kody[3]:='W';
   opis:=obj_new(3);
   __limit:='';
   __kwlim:=0;
   __rok:=date~1;
   P_INFO.cntx_psh();
   P.cntx_psh();
   OSOBA.cntx_psh();
   __dbadania:=date(1991,11,15);
   __PMD:=obj_new(@.CLASS.PRINT,8);
   kol:=obj_new(8);
   __PMD.add("{? ~skl.EMPTY || skl.ROK || %255 ?}",4,'',1,,,,,',0,\'9.\'');
   __PMD.add("{? ~skl.EMPTY || skl.STZM || '' ?}",14,'',1,,,,,',2,\'9.\'');
   __PMD.add("{? ~skl.EMPTY || skl.ZAS || '' ?}",14,'',1,,,,,',2,\'9.\'');
   __PMD.add("{? ~skl.EMPTY || skl.SW || '' ?}",14,'',1,,,,,',2,\'9.\'');
   __PMD.add("{? ~skl.EMPTY || skl.OB || '' ?}",21,'',1,,,,,',2,\'9.\'');
   __PMD.add("{? ~skl.EMPTY || skl.PRZ || '' ?}",14,'',1,,,,,',2,\'9.\'');
   __PMD.add("{? ~skl.EMPTY || skl.INN || '' ?}",14,'kwota',1,,,,,',2,\'9.\'');
   __PMD.add("{? ~skl.EMPTY || skl.INFO || '' ?}",14,'rodzaj');
   __PMD.s_frame();

   __PMH:=obj_new(@.CLASS.PRINT,7);
   __PMH.add("''",__PMD.LEN[1],11*((__PMD.LEN[1]*' ')+%255)+'Rok',,%255);
   _txt:='Kwoty stałych i zmiennych składników wynagrodzenia/ uposażenia – należnych za dany rok kalendarzowy, które ';
   _txt+='stanowiły podstawę wymiaru składek na ubezpieczenie społeczne/ ubezpieczenia emerytalne i rentowe';
   __PMH.add("''",__PMD.LEN[2],3*((__PMD.LEN[2]*' ')+%255)+gsub(_txt,' ',%255),,%255);
   _txt:='Kwoty świadczeń należnych za dany rok kalendarzowy (wynagrodzenia za czas niezdolności do pracy, zasiłków: ';
   _txt+='chorobowego, opiekuńczego, macierzyńskiego)';
   __PMH.add("''",__PMD.LEN[3],5*((__PMD.LEN[3]*' ')+%255)+gsub(_txt,' ',%255),,%255);
   _txt:='Kwoty świadczeń – należnych za dany rok kalendarzowy (świadczenia rehabilitacyjnego/ zasiłku/ świadczenia/ ';
   _txt+='dodatku – wyrównawczego)';
   __PMH.add("''",__PMD.LEN[4],6*((__PMD.LEN[3]*' ')+%255)+gsub(_txt,' ',%255),,%255);
   _txt:='Kwoty składników wynagrodzenia – należnych za dany rok kalendarzowy, wypłaconych obok wynagrodzenia za czas ';
   _txt+='niezdolności do pracy, zasiłku chorobowego, macierzyńskiego, opiekuńczego, świadczenia rehabilitacyjnego, ';
   _txt+='które w okresie pobierania ww. świadczeń nie stanowiły podstawy wymiaru składek na ubezpieczenie społeczne/ ';
   _txt+='ubezpieczenia emerytalne i rentowe';
   __PMH.add("''",__PMD.LEN[5],_txt);
   _txt:='Kwoty przychodu należnego za dany rok kalendarzowy, który nie stanowił podstawy wymiaru składek na ';
   _txt+='ubezpieczenia emerytalne i rentowe, a stanowił podstawę wymiaru składek na ubezpieczenie wypadkowe (dotyczy ';
   _txt+='lat po 1998 r.)';
   __PMH.add("''",__PMD.LEN[6],_txt);
   _txt:='Kwoty innych wypłaconych należności, które nie zostały wykazane w kolumnach 2–6 i ich rodzaj – o ile są one ';
   _txt+='wliczane do podstawy wymiaru świadczeń';
   __PMH.add("''",__PMD.LEN[7]+3+__PMD.LEN[8],8*(((__PMD.LEN[7]+3+__PMD.LEN[8])*' ')+%255)+gsub(_txt,' ',%255),,%255);
   __PMH.s_frame();

   __RPD:=obj_new(@.CLASS.PRINT,8);
   __RPD.add("{? ~skl.EMPTY || skl.ROK || %255 ?}",8,'Rok',1,,,,,',0,\'9.\'');
   __RPD.add("{? ~skl.EMPTY || skl.INFO || '' ?}",18,'Miesiąc',1,,,,,',2,\'9.\'');
   __RPD.add("{? skl.next() & ~skl.EMPTY || skl.ROK || %255 ?}",8,'Rok',1,,,,,',0,\'9.\'');
   __RPD.add("{? ~skl.EMPTY || skl.INFO || '' ?}",18,'Miesiąc',1,,,,,',2,\'9.\'');
   __RPD.add("{? skl.next() & ~skl.EMPTY || skl.ROK || %255 ?}",8,'Rok',1,,,,,',0,\'9.\'');
   __RPD.add("{? ~skl.EMPTY || skl.INFO || '' ?}",18,'Miesiąc',1,,,,,',2,\'9.\'');
   __RPD.add("{? skl.next() & ~skl.EMPTY || skl.ROK || %255 ?}",8,'Rok',1,,,,,',0,\'9.\'');
   __RPD.add("{? ~skl.EMPTY || skl.INFO || '' ?}",18,'Miesiąc',1,,,,,',2,\'9.\'');
   __RPD.s_frame();

   skl:=tab_tmp(5
      ,'PREFIX','STRING[10]','Tabela'
      ,'ROK','INTEGER','Rok'
      ,'OD','DATE','Od daty'
      ,'DO','DATE','Do daty'
      ,'INFO','STRING[80]','Dane opisowe'
      ,'STZM','REAL','Kol 2'
      ,'ZAS','REAL','Kol 3'
      ,'SW','REAL','Kol 4'
      ,'OB','REAL','Kol 5'
      ,'PRZ','REAL','Kol 6'
      ,'INN','REAL','Kol 7'
      ,'EMPTY','INTEGER','Pusta?'
      ,'MEMO','SYS_MEMO','Dane memo'
      ,'LIMIT','REAL','Limit'
   );
   dprac:=tab_tmp(1
      ,'OSOBA','STRING[80]','Dane osobowe'
      ,'DOKTOZ','STRING[255]','Dokument tożsamości'
      ,'NKP','STRING[80]','Numer Konta Płatnika (NKP)'
      ,'NWCP','STRING[120]','Niepełny wymiar czasu pracy'
      ,'UNWD','STRING[120]','Urlop na wychowanie dzieci'
      ,'DIU','SYS_MEMO','Dodatkowe informacje/uwagi'
      ,'ID','SYS_MEMO','Informacja o dokumentach'
      ,'ZALB','SYS_MEMO','Bezpłatny - załącznik'
      ,'ZALW','SYS_MEMO','Wychowawczy - załącznik'
      ,'ZALD','SYS_MEMO','Wychowawczy - dzieci'
      ,'ZALN','SYS_MEMO','Niezdolność - Załącznik'
      ,'ZALC','SYS_MEMO','Chorobowe - Załącznik'
      ,'ZALR','SYS_MEMO','Rehebilitacja - Załącznik'
      );
   _runtime:=user(11);
   _we:=dprac.mk_edit('Zaświadczenie ZUS ERP-7',,'#zus_erp7dprac');
   dprac.win_efld(_we,AH,'H',,,,,,        'Dane osoby ubezpieczonej');
   dprac.win_efld(_we,,'OSOBA',,,60,,1,   'Osoba');
   dprac.win_efld(_we,,'DOKTOZ',,,60,,,   'Dokument tożsamości',,
      'Rodzaj, seria i numer dokumentu potwierdzającego tożsamość'
   );
   dprac.win_esep(_we);
   dprac.win_efld(_we,AH,'H',,,,,,        'Dane płatnika składek');
   dprac.win_efld(_we,,'NKP',,,60,,,      'Numer Konta Płatnika (NKP)');
   dprac.win_esep(_we);
   dprac.win_efld(_we,AH,'H',,,,,,        'Informacje o pracowniku');
   dprac.win_efld(_we,,'NWCP',,,60,,,     'Niepełny wymiar czasu pracy');
   dprac.win_efld(_we,,'ZALW',,,60,-3,,   'Urlop na wychowanie dzieci');
   dprac.win_efld(_we,,'ZALD',,,60,-3,,   'Imiona i daty urodzin dzieci');
   dprac.win_esep(_we);
   dprac.win_efld(_we,,'DIU',,,60,-5,,    'Dodatkowe informacje/uwagi');
   dprac.win_efld(_we,,'ID',,,60,-3,,     'Informacja o dokumentach');
   dprac.win_ebtn(_we,'text=&OK, btn_label_align=center, panel=bottom, align=end',"'key:F2'");
   dprac.win_ebtn(_we,'text=&Anuluj, btn_label_align=center, panel=bottom, align=end',"'key:Esc'");
   dprac.win_edit(_we);
   __zm_str:=__n_str:=0
}
{END:
   OSOBA.cntx_pop();
   P.cntx_pop();
   P_INFO.cntx_pop();
   &suma;
   &test;
   &text;
   &pim;
   &dim;
   VAR_DEL.delete('__limit','__kwlim','__rok','size','z','maxline','kody','opis','druk','cil','par');
   VAR_DEL.delete('__PMD','__PMH','skl','kol','__RPD','licz','dprac','__dbadania','__zm_str','__n_str')
}
{INCLUDE: wsp_pw.rpi}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{FONT: 'TITLE'}{ cil.TITLE:=charleft(); ~~}
{FONT: 'T8'}{ cil.T8:=charleft(); ~~}
{FONT: 'T8B'}{ cil.T8B:=charleft(); ~~}
{FONT: 'T8G'}{ cil.T8G:=charleft(); ~~}
{FONT: 'T10B'}{ cil.T10B:=charleft(); ~~}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{MACRO: 'text_out'}
{COMMENT}
   par[1] - Kolumna lewego marginesu.
   par[2] - Kolumna prawego marginesu.
   par[3] - Tekst.
            Znak %255 jest traktowany jak twarda spacja
   Uwaga: makro zmienia zawartość par[3].
{COMMENT-}
{JUSTIFY}
{ STR.split(par[3]); ~~ }
{WHILE: +(par[3]:=STR.line(par[2]-par[1]))}
{DO}
{REP:
   {? +STR.spl_str
   || '{<{par[1]}>{par[2]}'
   || '{CENTER}{<{par[1]}'
   ?}+' gsub(par[3],%255,%32)}'
}
{OD}
{MACRO-}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{MACRO: 'kratki'}
{COMMENT}
   par[1] - wyrownanie w znakach ramki do lewej
   par[2] - font ramki
   par[3] - font tekstu
   par[4] - tekst w ramce
   par[5] - czy pomijac ramke gorna / dolna? lista skladajaca sie ze znakow 'gd'
   par[6] - tekst przed ramka
   par[7] - czy znak oddzielania tekstu w ramce, brak '' oznacza pipe|, ' ' oznacza brak |
   par[8] - odstep od poczatku DIRECT - line
   par[9] - liczba wierszy
   par[10] - ilosc znakow w ramce
   par[11] - 1 czy dopelniac spacjami

Uwaga:
   Podczas przygotowania tekstu do wydruku zamieniane są znaki \n i \t na spacje.
   Dodatkowo, w ramach obejścia błędu systemowego, usuwamy znak o kodzie 13 (CR).
{COMMENT-}
{REP:
   {? var_pres('[5]',@.par)<>type_of('')
   || par[5]:=''
   ?};
   _co:=obj_new(3);
   _na:=obj_new(obj_len(_co));
   _co[1]:='\n'; _co[2]:='\t'; _co[3]:=%13;
   _na[1]:=' ';  _na[2]:=' ';  _na[3]:='';
   par[4]:=gsub(par[4],_co,_na);
   par[6]:=gsub(par[6],_co,_na);
   par[11]:={? var_pres('[11]',@.par)=type_of(0) & par[11]=1 || 1 || 0 ?};
   _ramki:="1+((_a-1)-'┌┬┐├┼┤└┴┘│─ ')";
   _poczatek:={? var_pres('[10]',@.par)=type_of(0) || par[10] || +par[4] ?};
   _line:={? var_pres('[8]',@.par)=type_of(0) || '{line('+$par[8]+');~~}\n' || '' ?};
   _zn:=%255+%255;
   _noPipe:={? var_pres('[7]',@.par)=type_of('') & par[7]=' ' || '' || ' '+_ramki(10)+' ' ?};
   {? +_noPipe
   || _ret:='';
      {! _licz:=1..+par[4] |!
         _ret+=' '+(1+((_licz-1)-par[4]))+' '+_ramki(10)
      !};
      _ret:=_ret-1;
      par[4]:=_ret
   ?};
   par[10]:={? var_pres('[10]',@.par)=type_of(0) || par[10] || +par[4] ?};
   _liniiRamka:=0;
   _liniiPrzed:=0;
   _txtRamka:=_txtPrzed:='';
   {? +|par[4]
   || {? +_noPipe
      || _txtRamka:=par[4]
      || _text:=par[4];
         {? par[11] || STR.split(_text,';') || STR.split(_text) ?};
         {! |? +STR.spl_str |!
            _ramka:=form(STR.line(par[10]));
            {? par[11] || _ramka:=gsub(_ramka,';',' ') ?};
            _txtRamka+=_ramka;
            {? par[11] || _txtRamka+=(' '*(par[10]-(+_ramka))) ?};
            _txtRamka+=_zn;
            _liniiRamka+=1
         !};
         _txtRamka:=_txtRamka-2
      ?}
   ?};
   {? +par[6]
   || _text:=par[6];
      STR.split(_text);
      _licz:=0;
      {! |? +STR.spl_str |!
         _txtPrzed+=STR.line(par[1]-4);
         _txtPrzed+=_zn;
         _liniiPrzed+=1
      !};
      _txtPrzed:=_txtPrzed-2
   ?};
   _ile:={? _liniiPrzed>_liniiRamka || _liniiPrzed || _liniiRamka?};
   _maxWierszy:={? var_pres('[9]',@.par)=type_of(0) & par[9]>0 || par[9] || _ile ?};
   {? _maxWierszy<1 || _maxWierszy:=1 ?};
   _wierszy:=obj_new(_maxWierszy);
   {! _licz:=1.._maxWierszy |!
      _wierszy[_licz]:=obj_new(2);
      _wierszy[_licz][1]:=_wierszy[_licz][2]:=''
   !};
   _wiersz:="(((frac(_a/2)>0)+_a)/2)-(((frac(_b/2)>0)+_b)/2)+1";
   _txtRamka:=spli_str(_txtRamka,_zn);
   _txtPrzed:=spli_str(_txtPrzed,_zn);
   _liczRamka:=_liczPrzed:=0;
   {! _licz:=1.._maxWierszy |!
      {? _licz>=_wiersz(_maxWierszy,obj_len(_txtRamka)) & _liczRamka<obj_len(_txtRamka)
      || _liczRamka+=1;
         _uzu:=par[10]-(+_txtRamka[_liczRamka]);
         {? +_noPipe || _uzu-=2 ?};
         _wierszy[_licz][2]:=_txtRamka[_liczRamka]+(_uzu*' ')
      || _uzu:=par[10];
         {? +_noPipe || _uzu-=2 ?};
         _wierszy[_licz][2]:=(_uzu*' ')
      ?};
      {? _licz>=_wiersz(_maxWierszy,obj_len(_txtPrzed)) & _liczPrzed<obj_len(_txtPrzed)
      || _liczPrzed+=1;
         _wierszy[_licz][1]:=_txtPrzed[_liczPrzed]
      ?}
   !};
   _gora:='{FONT: \''+par[3]+'\'}\n'+'{<'+$par[1]+'}'+'{FONT: \''+par[2]+'\'}'+_ramki(1);
   _gora+=
      {? +_noPipe
      || (_ramki(11)+_ramki(11)+_ramki(11)+_ramki(2))*(_poczatek-1)+(_ramki(11)+_ramki(11)+_ramki(11))
      || (_ramki(11)*par[10])
      ?};
   _gora+=_ramki(3)+'\n';
   _srodek:='';
   {! _licz:=1.._maxWierszy |!
      _srodek+='{>'+$(par[1]-2)+'\''+_wierszy[_licz][1]+'\'}';
      _srodek+='{<'+$par[1]+'}'+_ramki(10)+_wierszy[_licz][2]+_ramki(10)+'\n'
   !};
   _dol:='{FONT: \''+par[3]+'\'}'+'{<'+$par[1]+'}'+'{FONT: \''+par[2]+'\'}'+_ramki(7);
   _dol+=
      {? +_noPipe
      || (_ramki(11)+_ramki(11)+_ramki(11)+_ramki(8))*(_poczatek-1)+(_ramki(11)+_ramki(11)+_ramki(11))
      || _ramki(11)*par[10]
      ?};
   _dol+=_ramki(9)+'\n';
   _line+
   {? par[5]*'g' || '' || _gora ?}+
   '{FONT: \''+par[3]+'\'}'+
   gsub(_srodek,_ramki(10),'{FONT: \''+par[2]+'\'}'+_ramki(10)+'{FONT: \''+par[3]+'\'}')+
   {? par[5]*'d' || '' || _dol ?}
}
{SUBSTITUTE: 'zero_par'}
{MACRO-}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{MACRO: 'zero_par'}{
   {! _licz:=1..obj_len(par)
   |! {? ($('var_pres(\'['+$_licz+']\',par)'))()>100 || obj_del(par[_licz]) ?};
      par[_licz]:=~~
   !};
   {? __zm_str=1
   || par[3]:=__PMD;
      __zm_str:=-1
   ?};
   ~~
}
{MACRO-}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{MACRO: 'h_start'}
   {HEADER}
      {COMMENT}
      {SUBSTITUTE: 'zero_par'}
      {par[1]:=1; par[2]:=cil.T8B; ~~}
      {COMMENT-}
      {FONT: 'TITLE'}{SPACE: 'A'}{>{charleft}'ERP-7'}
      {FONT: 'T8B'}{SPACE: 'C'}
      {<2 ('─'*(cil.T8B-1))}
   {HEADER-}
{MACRO-}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{MACRO: 'tak_nie'}
{COMMENT}
   par[1] - wyrownanie w znakach tekstu do lewej
   par[2] - font ramki
   par[3] - font tekstu
   par[4] - tekst w ramce
   par[5] - tu nie uzywany
   par[6] - teks przed ramka
   par[7] - wyrownanie w znakach ramki do lewej
   par[8] - tu nie używany
{COMMENT-}
   {REP: '{FONT: \''+par[2]+'\'}'}
   {REP: '{<{'+$par[7]+'}}┌───┐   {<{'+$(par[7]+20)+'}}┌───┐'}
   {REP: '{<{'+$par[1]+'}\''+par[6]+'\'}{<'+$par[7]+'}{FONT: \''+par[2]+'\'}│{FONT: \''+par[3]+'\'}{\''+
         {? 1+par[4]='T' || ' X ' || '   ' ?}+'\'}{FONT: \''+par[2]+'\'}{\'│\'}{FONT: \''+par[3]+'\'}{\' TAK\'}{<'+
         $(par[7]+20)+'}{FONT: \''+par[2]+'\'}│{FONT: \''+par[3]+'\'}{\''+{? 1+par[4]='N' || ' X ' || '   ' ?}+
         '\'}{FONT: \''+par[2]+'\'}{\'│\'}{FONT: \''+par[3]+'\'}{\' NIE\'}'
   }
   {REP: '{FONT: \''+par[2]+'\'}{<{'+$par[7]+'}}└───┘   {<{'+$(par[7]+20)+'}}└───┘'}
   {SUBSTITUTE: 'zero_par'}
{MACRO-}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{MACRO: 'skl'}
   {FONT: 'T8'}{SPACE: 'C'}
   { lmt:=(cil.T8-par[2].width())%2; ~~}
   {SUBSTITUTE: prn1:='par[2]'; 'TABHEAD'}
   { par[3].setcolor(color); par[3].ini_head(); ~~}
   {WHILE: par[3].h_next()}
   {DO}
      {REP: par[3].h_fmline(lmt)}
   {OD}
   {REP: par[3].fjbar(par[2],lmt)}
   { {! _lp:=1..par[2].nstr |! kol[_lp]:=$_lp; kol[_lp]==par[2].HEAD[_lp] !}; par[2].ini_head(); ~~}
   {WHILE: par[2].h_next()}
   {DO}
      {REP: par[2].h_fmline(lmt)}
   {OD}
   { {! _lp:=1..par[2].nstr |! kol[_lp]==par[2].HEAD[_lp] !}; ~~}
   { vp:=1; __zm_str:=1; __n_str:=0; ~~}
   {FOR: skl}
   {PREFIX: par[1]}
   {DO}
      {IF: vp}
         {par[3].setcolor(color); ~~}
         {REP: par[2].fjbar(par[3],lmt)}
         {par[3].setcolor('255:255:255'); vp:=0; ~~}
      {ELSE}
      {IF: __n_str}
         { __n_str:=0; ~~}
      {ELSE}
         {REP: par[3].fbar(lmt)}
      {FI}
      {FI}
      {par[3].ini_line(); ~~}
      {WHILE: par[3].next()}
      {DO}
         {REP: par[3].fline(lmt)}
      {OD}
         {IF: lineleft & lineleft<=4}
         {FONT: 'T8'}{SPACE: 'C'}
         { __n_str:=1; ~~}
         {REP: par[3].flbar(lmt)}
         {PAGE}
         {REP: par[3].fhbar(lmt)}
         {FI}
      {OD}
   {REP: par[3].flbar(lmt)}
   { {! _licz:=2..3
     |! {? ($('var_pres(\'['+$_licz+']\',par)'))()>100 || obj_del(par[_licz]) ?}
     !};
     __zm_str:=0; ~~}
   {SUBSTITUTE: 'zero_par'}
   {SPACE: 'B'}
{MACRO-}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{MACRO: 'skl_1'}
   {FONT: 'T8'}{SPACE: 'C'}
   { lmt:=(cil.T8-par[3].width())%2; ~~}
   {SUBSTITUTE: prn1:='par[3]'; 'TABHEAD'}
   { par[3].setcolor(color); par[3].ini_head(); ~~}
   { vp:=1; licz:=4; ~~}
   {FOR: skl}
   {PREFIX: par[1]}
   {DO}
      {IF: licz=4}
         {IF: vp}
            {par[3].setcolor(color); ~~}
            {REP: par[3].fbar(lmt)}
            {par[3].setcolor('255:255:255'); vp:=0; ~~}
         {ELSE}
            {REP: par[3].fbar(lmt)}
         {FI}
         {par[3].ini_line(); ~~}
         {WHILE: par[3].next()}
         {DO}
            {REP: par[3].fline(lmt)}
         {OD}
      {FI}
      {
      licz-=1;
      {? licz=0 || licz:=4 ?};
      ~~}
   {OD}
   {REP: par[3].flbar(lmt)}
   { obj_del(par[3]); ~~}
   {SUBSTITUTE: 'zero_par'}
   {SPACE: 'B'}
{MACRO-}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{MACRO: 'nagl_zal'}
{FONT: 'n'}
{ test:=1; ~~ }
{<1>130'Załącznik do zaświadczenia o zatrudnieniu i wynagrodzeniu'}
{<1>130 RP7_OS.NAZWISKO+' '+RP7_OS.PIERWSZE+' '+RP7_OS.DRUGIE+
   ', Pesel: '+RP7_OS.PESEL+', Data urodzenia: '+RP7_OS.UR_DATA$4}
{FONT: 'm'}
{MACRO-}
{COMMENT}-----------------------------------------------------------------------------------------------------{COMMENT-}
{FONT: 'q'}
{SPACE: 'c'}
{COMMENT}
   Na razie wydruk wywoływany jest wyłącznie dla bieżącego rekordu tabeli RP7_OS.
{COMMENT-}
{ __zm_str:=0; ~~}
{INCLUDE: ppl_rp7_erp7.rpi}