:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #b_event.fml
:: Utworzony: 18.12.2014 [17.00]
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Formuły do obsługi tabeli B_EVENT (elementy typu zdarzenie)
::======================================================================================================================


\buffer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca obiekt nazwany - bufor tabeli B_EVENT
::   WY: obj_new()
::----------------------------------------------------------------------------------------------------------------------
exec('B_EVENT','#buffer')


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Funkcja dodająca wpis do tabeli B_EVENT
::   WE: _a   - [STRING]    - typ zdarzenia
::       _b   - [STRING]    - rodzaj zdarzenia
::       [_c] - [STRING]    - kategoria zdarzenia
::       [_d] - [STRING]    - symbol zdarzenia
::   WY:        [REFERENCE] - wskazanie na dodany rekord (lub już istniejący)
::----------------------------------------------------------------------------------------------------------------------
    _type:={? var_pres('_a')=type_of('') || -(_a) || return() ?};
    _kind:={? var_pres('_b')=type_of('') || -(_b) || return() ?};
_category:={? var_pres('_c')=type_of('') || -(_c) || ''       ?};
  _symbol:={? var_pres('_d')=type_of('') || _d    || ''       ?};

{? _type=exec('type_start','#b_event') || _category:=exec('category_catch','#b_event')
|? _type=exec('type_end','#b_event')   || _category:=exec('category_throw','#b_event')
|? _category=''                        || return() ?};

_res:=null();
B_EVENT.cntx_psh();
B_EVENT.index('TYP');
_b_chain:=exec('add','#b_chain','B_EVENT','Zdarzenie');
{? _b_chain<>null()
|| _b_ele:=exec('add','#b_ele',_b_chain,_symbol,'B_EVENT');
   {? _b_ele<>null()
   || B_EVENT.prefix();
      B_EVENT.blank(1);
      B_EVENT.B_ELE:=_b_ele;
      B_EVENT.TYPE:=_type;
      B_EVENT.KIND:=_kind;
      B_EVENT.CATEGORY:=_category;
      {? B_EVENT.find_rec()
      || _res:=B_EVENT.ref()
      || B_EVENT.SYMBOL:=_symbol;
         {? B_EVENT.add()
         || _res:=B_EVENT.ref()
         ?}
      ?};
::    Dodanie portów wejściowych zdarzenia wysłania komunikatu
      {? _res<>null() & _category=exec('category_throw','#b_event') & _kind=exec('kind_message','#b_event')
      ||
::       zidentyfikuj typ danych 'STRING'
         B_TYPE.index('SYMBOL');
         B_TYPE.prefix('STRING',);
         {? B_TYPE.first() || _b_type_string:=B_TYPE.ref() || _b_type_string:=null() ?};
::       zidentyfikuj typ danych 'MEMO'
         B_TYPE.index('SYMBOL');
         B_TYPE.prefix('MEMO',);
         {? B_TYPE.first() || _b_type_sysmemo:=B_TYPE.ref() || _b_type_sysmemo:=null() ?};
::       zidentyfikuj typ danych 'BLOB'
         B_TYPE.index('SYMBOL');
         B_TYPE.prefix('BLOB',);
         {? B_TYPE.first() || _b_type_blob:=B_TYPE.ref() || _b_type_blob:=null() ?};

         {? _b_type_string<>null() & _b_type_sysmemo<>null() & _b_type_blob<>null()
         || _b_port:=exec('buffer','#b_port');
            _b_port.B_ELE:=_b_ele;
            _b_port.KIND:=exec('kind_in','#b_port');
            _b_port.B_PREL:=null();
            _b_port.REQUIRED:='N';
            _b_port.ACTIVE:='T';
            _b_port.KEYREF:='N';
            _b_port.C_EVENT:='N';

            _b_port.B_TYPE:=_b_type_string;
            _b_port.FML_VAL:='';

            _b_port.SYMBOL:='SUB';
            _b_port.NAME:='Temat';
            {? exec('put','#b_port',_b_port)=null() || exec('add','#b_port',_b_port) ?};

            _b_port.FML_VAL:='exec(\'edit_email\',\'#mailbox\',_a,_b)';

            _b_port.SYMBOL:='SENDER';
            _b_port.NAME:='Nadawca';
            {? exec('put','#b_port',_b_port)=null() || exec('add','#b_port',_b_port) ?};
            _b_port.SYMBOL:='FROM';
            _b_port.NAME:='Autor';
            {? exec('put','#b_port',_b_port)=null() || exec('add','#b_port',_b_port) ?};
            _b_port.SYMBOL:='REPLYTO';
            _b_port.NAME:='Odpowiedz do';
            {? exec('put','#b_port',_b_port)=null() || exec('add','#b_port',_b_port) ?};

            _b_port.FML_VAL:='exec(\'template_param\',\'#mailbox\',_a,_b)';
            _b_port.SYMBOL:='TEMPLATE';
            _b_port.NAME:='Wzorzec wiadomości';
            {? exec('put','#b_port',_b_port)=null() || exec('add','#b_port',_b_port) ?};

            _b_port.B_TYPE:=_b_type_sysmemo;
            _b_port.FML_VAL:='';

            _b_port.SYMBOL:='BODYT';
            _b_port.NAME:='Treść w formacie tekstowym';
            {? exec('put','#b_port',_b_port)=null() || exec('add','#b_port',_b_port) ?};
            _b_port.SYMBOL:='BODYH';
            _b_port.NAME:='Treść w formacie HTML';
            {? exec('put','#b_port',_b_port)=null() || exec('add','#b_port',_b_port) ?};

            _b_port.FML_VAL:='exec(\'edit_email_list\',\'#mailbox\',_a,_b)';

            _b_port.SYMBOL:='TO';
            _b_port.NAME:='Do';
            {? exec('put','#b_port',_b_port)=null() || exec('add','#b_port',_b_port) ?};
            _b_port.SYMBOL:='CC';
            _b_port.NAME:='Do wiadomości';
            {? exec('put','#b_port',_b_port)=null() || exec('add','#b_port',_b_port) ?};
            _b_port.SYMBOL:='BCC';
            _b_port.NAME:='Ukryte do wiadomości';
            {? exec('put','#b_port',_b_port)=null() || exec('add','#b_port',_b_port) ?};

            _b_port.FML_VAL:='exec(\'head_tags_param\',\'#b_msg\',_a,_b)';
            _b_port.SYMBOL:='HEADTAGS';
            _b_port.NAME:='Tagi do nagłówka wiadomości';
            {? exec('put','#b_port',_b_port)=null() || exec('add','#b_port',_b_port) ?};

            _b_port.B_TYPE:=_b_type_blob;
            _b_port.FML_VAL:='';

            _b_port.SYMBOL:='FILE_A';
            _b_port.NAME:='Załączniki dołączone';
            {? exec('put','#b_port',_b_port)=null() || exec('add','#b_port',_b_port) ?};
            _b_port.SYMBOL:='FILE_E';
            _b_port.NAME:='Załączniki osadzone';
            {? exec('put','#b_port',_b_port)=null() || exec('add','#b_port',_b_port) ?}

         ?}
      ?}
   ?}
?};
B_EVENT.cntx_pop();
_res


\fill_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Funkcja wypełnia tabelę B_EVENT danymi
::----------------------------------------------------------------------------------------------------------------------
:: Zdarzenia startowe
exec('add','#b_event',
   exec('type_start','#b_event'),
   exec('kind_none','#b_event'),,
   'Zdarzenie startowe - nieokreślone'
);
exec('add','#b_event',
   exec('type_start','#b_event'),
   exec('kind_condition','#b_event'),,
   'Zdarzenie startowe - warunkowe'
);
exec('add','#b_event',
   exec('type_start','#b_event'),
   exec('kind_timer','#b_event'),,
   'Zdarzenie startowe - czasowe'
);
::exec('add','#b_event',
::   exec('type_start','#b_event'),
::   exec('kind_message','#b_event'),,
::   'Zdarzenie startowe - komunikat'
::);
exec('add','#b_event',
   exec('type_start','#b_event'),
   exec('kind_signal','#b_event'),,
   'Zdarzenie startowe - sygnał'
);

:: Zdarzenia pośrednie
exec('add','#b_event',
   exec('type_intermed','#b_event'),
   exec('kind_timer','#b_event'),
   exec('category_catch','#b_event'),
   'Zdarzenie pośrednie - czasowe'
);
exec('add','#b_event',
   exec('type_intermed','#b_event'),
   exec('kind_condition','#b_event'),
   exec('category_catch','#b_event'),
   'Zdarzenie pośrednie - warunkowe'
);
::exec('add','#b_event',
::   exec('type_intermed','#b_event'),
::   exec('kind_message','#b_event'),
::   exec('category_catch','#b_event'),
::   'Zdarzenie pośrednie - komunikat przychodzący'
::);
exec('add','#b_event',
   exec('type_intermed','#b_event'),
   exec('kind_signal','#b_event'),
   exec('category_catch','#b_event'),
   'Zdarzenie pośrednie - sygnał przychodzący'
);
exec('add','#b_event',
   exec('type_intermed','#b_event'),
   exec('kind_none','#b_event'),
   exec('category_throw','#b_event'),
   'Zdarzenie pośrednie - nieokreślone'
);
exec('add','#b_event',
   exec('type_intermed','#b_event'),
   exec('kind_message','#b_event'),
   exec('category_throw','#b_event'),
   'Zdarzenie pośrednie - komunikat wychodzący'
);
exec('add','#b_event',
   exec('type_intermed','#b_event'),
   exec('kind_signal','#b_event'),
   exec('category_throw','#b_event'),
   'Zdarzenie pośrednie - sygnał wychodzący'
);

:: Zdarzenia końcowe
exec('add','#b_event',
   exec('type_end','#b_event'),
   exec('kind_none','#b_event'),,
   'Zdarzenie końcowe - nieokreślone'
);
::exec('add','#b_event',
::   exec('type_end','#b_event'),
::   exec('kind_terminate','#b_event'),,
::   'Zdarzenie końcowe - przerwanie'
::);
exec('add','#b_event',
   exec('type_end','#b_event'),
   exec('kind_message','#b_event'),,
   'Zdarzenie końcowe - komunikat wychodzący'
);
exec('add','#b_event',
   exec('type_end','#b_event'),
   exec('kind_signal','#b_event'),,
   'Zdarzenie końcowe - sygnał'
);
~~


\is_event
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Sprawdza, czy element jest zdarzeniem o określonych cechach (typ, rodzaj, kategoria)
::   WE: _a - B_ELE.ref()
::       [_b] - typ
::       [_c] - rodzaj
::       [_d] - kategoria
::   WY: -1 - element nie jest zdarzeniem
::       0 - element jest zdarzeniem ale niewłaściwego typu, rodzaju i kategorii
::       1 - element jest zdarzeniem wlaściwego typu, rodzaju i kategorii
::----------------------------------------------------------------------------------------------------------------------
_b_ele:=_a;
{? var_pres('_b')=type_of('') || _type:=_b || _type:='' ?};
{? var_pres('_c')=type_of('') || _kind:=_c || _kind:='' ?};
{? var_pres('_d')=type_of('') || _category:=_d || _category:='' ?};

_res:=1;

B_EVENT.cntx_psh();
B_EVENT.index('ELEMENT');
B_EVENT.prefix(_b_ele);
{? B_EVENT.first()
|| {? _type='' | B_EVENT.TYPE=_type
   || _res*=1
   || _res*=0
   ?};
   {? _kind='' | B_EVENT.KIND=_kind
   || _res*=1
   || _res*=0
   ?};
   {? _category='' | B_EVENT.CATEGORY=_category
   || _res*=1
   || _res*=0
   ?}
|| _res:=-1
?};
B_EVENT.cntx_pop();

_res


\type_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Typ zdarzenia - startowe
::----------------------------------------------------------------------------------------------------------------------
'startowe'


\type_intermed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Typ zdarzenia - pośrednie
::----------------------------------------------------------------------------------------------------------------------
'pośrednie'


\type_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Typ zdarzenia - końcowe
::----------------------------------------------------------------------------------------------------------------------
'końcowe'


\category_throw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Kategoria zdarzenia - rzucające
::----------------------------------------------------------------------------------------------------------------------
'rzucające'


\category_catch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Kategoria zdarzenia - przechwytujące
::----------------------------------------------------------------------------------------------------------------------
'przechwytujące'


\kind_terminate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rodzaj zdarzenia - przerwanie
::----------------------------------------------------------------------------------------------------------------------
'przerwanie'


\kind_signal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rodzaj zdarzenia - sygnał
::----------------------------------------------------------------------------------------------------------------------
'sygnał'


\kind_message
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rodzaj zdarzenia - komunikat
::----------------------------------------------------------------------------------------------------------------------
'komunikat'


\kind_condition
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rodzaj zdarzenia - warunkowe
::----------------------------------------------------------------------------------------------------------------------
'warunkowe'


\kind_timer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rodzaj zdarzenia - czasowe
::----------------------------------------------------------------------------------------------------------------------
'czasowe'


\kind_none
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rodzaj zdarzenia - nieokreślone
::----------------------------------------------------------------------------------------------------------------------
'nieokreślone'


\icon_repair
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Naprawia ikonkę na zdarzeniach startowych nieokreślonych we wszystkich aktywnych procesach jeżeli
::       nie jest podana i za zdarzeniem startowym znajduje się czynność która ma tę ikonkę
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
B_CONN.cntx_psh();
B_CONN.index('FROM');
B_PROC.cntx_psh();
B_PROC.index('FIRMA');
B_PROC.prefix();
B_PREL.cntx_psh();
B_PREL.index('PROC');
B_ACTION.cntx_psh();
B_ACTION.index('B_ELE');
{? B_PROC.first()
|| {!
   |? {? B_PROC.MICRO<>'T'
      ||
         B_PREL.prefix(B_PROC.ref(),'B_EVENT');
         {? B_PREL.first()
         || {!
            |?
               {? exec('is_event','#b_event',B_PREL.B_ELE,exec('type_start','#b_event'),exec('kind_none','#b_event'))
               ||
                  _icon:='';
::                Stoję na zdarzeniu startowym nieokreślonym
                  {? B_PREL.ICONFILE=''
                  ||
::                   Iteruję po następnikach zdarzenia i szukam pierwszej czynności z ikonką
                     B_CONN.prefix(B_PROC.ref(),B_PREL.ref());
                     {? B_CONN.first()
                     || {!
                        |? B_PREL.cntx_psh();
                           {? B_CONN.TO().CLASS='B_ACTION'
                           || B_ACTION.prefix(B_PREL.B_ELE);
                              {? B_ACTION.first()
                              || {? B_ACTION.ICON<>''
                                 ||
::                                  Znalazłem ikonkę
                                    _icon:=B_ACTION.ICON
                                 ?}
                              ?}
                           ?};
                           B_PREL.cntx_pop();
                           B_CONN.next() & _icon=''
                        !}
                     ?};

                     {? _icon<>''
                     || B_PREL.ICONFILE:=_icon;
                        B_PREL.put()
                     ?}
                  ?}
               ?};
               B_PREL.next()
            !}
         ?}
      ?};
      B_PROC.next()
   !}
?};
B_ACTION.cntx_pop();
B_PREL.cntx_pop();
B_PROC.cntx_pop();
B_CONN.cntx_pop();
~~

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:09 cbc3a331ab701746eed3ff3a8b9408414e1cc991cb89cb5876123a5b851819554ed4b169f396840d8087bbcacb72cb77013aba83fa75f976e0d80e4164e067f02def6251be069cae4274c4f86a8508cff8aa038ae47d13c43be45586f9832ed8ca2761386f9dbf2d6564598dfd9b92042a8163b60347cf31e2bbe0ad739f508b
