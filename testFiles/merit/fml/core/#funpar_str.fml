:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #funpar.fml [17.00]
:: Utworzony: 2014/12/03
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Funkcje parametryzacji
::======================================================================================================================


\dekl_fp_pom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Deklaruje klasę ułatwiającą zarządzanie strukturą parametryzacji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('FP_POM',@.CLASS)>0
|| return
?};

obj_decl('FP_POM',
   obj_fld('BUF',~~),
   obj_fld('UPGD_ERR',0),

:  inicjalizacja obiektu
   obj_meth('__init',"
      exec('dekl_fp_buf','#funpar_str');
      .BUF:=obj_new(@.CLASS.FP_BUF,FP_FIR.FIRMA)
   "),

:  Dodaje wiele definicji funkcji parametryzacji typu czynność
:  WE:
:     _a - czynność
:     ...
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('def_acts',"
      {! _arg:=1.._
      |! .def_act(_[_arg])
      !};
      return(.)
   "),

: ----------------------------------------------------------------------------------------------------------------------

:  Dodaje definicję funkcji parametryzacji typu czynność
:  (postać uproszczona)
:  WE:
:     _a - czynność
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('def_act',"
      .def_act(_a,_a)
   ",type_of(''),-1),

:  Dodaje definicję funkcji parametryzacji typu czynność
:  (postać uproszczona)
:  WE:
:     _a - identyfikator
:     _b - czynność
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('def_act',"
      .def_act('T',_a,_b,'N')
   ",type_of(''),type_of(''),-1),

:  Dodaje definicję funkcji parametryzacji typu czynność
:  (postać uproszczona)
:  WE:
:     _a - identyfikator
:     _b - czynność
:     _c - grupa kapitałowa
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('def_act',"
      .def_act('T',_a,_b,_c)
   ",type_of(''),type_of(''),type_of(''),-1),

:  Dodaje definicję funkcji parametryzacji typu czynność
:  (postać pełna)
:  WE:
:     _a - zapis systemowy
:     _b - identyfikator
:     _c - czynność
:     _d - grupa kapitałowa
:     [_e] - zestaw danych
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('def_act',"
      .def_ini(_b,_a,_d);
      FP_DEF.B_ACTION:=.find_act(_c);
      {? FP_DEF.B_ACTION=null
      || return(.)
      ?};
      _wiele:=(var_pres('_e')=type_of('') | var_pres('_e')=type_of($''));
      FP_DEF.WIELE:={? _wiele || 'T' || 'N' ?};
      .def_store();
      {? _wiele
      || _txt:=''+_e;
         {? .form_err(_txt)
         || FUN.error('%1\n'
               'Ze względu na stabilność systemu formuła nie zostanie zapisana.\n'
               'Należy poprawić konfigurację zawartą w bibliotece programu.\n'@[.form_msg(FP_DEF.NAZWA,_txt)])
         || FP_DEF.memo_set(_txt,'ZESTAW');
            FP_DEF.memo_put(,'ZESTAW');
            exec('fp_def_fir','#funpar_str')
         ?}
      ?};
      return(.)
   ",type_of(''),type_of(''),type_of(''),type_of('')),

: ----------------------------------------------------------------------------------------------------------------------

:  Dodaje definicję funkcji parametryzacji typu formuła
:  (postać uproszczona)
:  WY:
:     _a - identyfikator
:     _b - nazwa
:     _c - formuła (string)
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('def_fml',"
      .def_fml('T',_a,_b,$_c,'N')
   ",type_of(''),type_of(''),type_of(''),-1),

:  Dodaje definicję funkcji parametryzacji typu formuła
:  (postać uproszczona)
:  WY:
:     _a - identyfikator
:     _b - nazwa
:     _c - formuła (formuła)
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('def_fml',"
      .def_fml('T',_a,_b,_c,'N')
   ",type_of(''),type_of(''),type_of(""),-1),

:  Dodaje definicję funkcji parametryzacji typu formuła
:  (postać uproszczona)
:  WE:
:     _a - identyfikator
:     _b - nazwa
:     _c - formuła (string)
:     _d - grupa kapitałowa
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('def_fml',"
      .def_fml('T',_a,_b,$_c,_d)
   ",type_of(''),type_of(''),type_of(''),type_of(''),-1),

:  Dodaje definicję funkcji parametryzacji typu formuła
:  (postać uproszczona)
:  WE:
:     _a - identyfikator
:     _b - nazwa
:     _c - formuła (formuła)
:     _d - grupa kapitałowa
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('def_fml',"
      .def_fml('T',_a,_b,_c,_d)
   ",type_of(''),type_of(''),type_of(""),type_of(''),-1),

:  Dodaje definicję funkcji parametryzacji typu formuła
:  (postać pełna)
:  WE:
:     _a - zapis systemowy
:     _b - identyfikator
:     _c - nazwa
:     _d - formuła (formuła)
:     _e - grupa kapitałowa
:     [_f] - zestaw danych
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('def_fml',"
      .def_ini(_b,_a,_e);
      FP_DEF.NAZWA:=_c;
      _wiele:=(var_pres('_f')=type_of('') | var_pres('_f')=type_of($''));
      FP_DEF.WIELE:={? _wiele || 'T' || 'N' ?};
      .def_store();
      FP_DEF.memo_set(''+_d,'FORMULA');
      FP_DEF.memo_put(,'FORMULA');
      {? _wiele
      || _txt:=''+_f;
         {? .form_err(_txt)
         || FUN.error('%1\n'
               'Ze względu na stabilność systemu formuła nie zostanie zapisana.\n'
               'Należy poprawić konfigurację zawartą w bibliotece programu.\n'@[.form_msg(FP_DEF.NAZWA,_txt)])
         || FP_DEF.memo_set(_txt,'ZESTAW');
            FP_DEF.memo_put(,'ZESTAW');
            exec('fp_def_fir','#funpar_str')
         ?}
      ?};
      return(.)
   ",type_of(''),type_of(''),type_of(''),type_of(""),type_of('')),

: ----------------------------------------------------------------------------------------------------------------------

:  Dodaje definicję funkcji parametryzacji (dostępnej dla użytkownika) typu formuła
:  (postać uproszczona)
:  WY:
:     _a - identyfikator
:     _b - nazwa
:     _c - formuła (string)
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('usr_fml',"
      .usr_fml('T',_a,_b,$_c,'N')
   ",type_of(''),type_of(''),type_of(''),-1),

:  Dodaje definicję funkcji parametryzacji (dostępnej dla użytkownika) typu formuła
:  (postać uproszczona)
:  WY:
:     _a - identyfikator
:     _b - nazwa
:     _c - formuła (formuła)
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('usr_fml',"
      .usr_fml('T',_a,_b,_c,'N')
   ",type_of(''),type_of(''),type_of(""),-1),

:  Dodaje definicję funkcji parametryzacji (dostępnej dla użytkownika) typu formuła
:  (postać uproszczona)
:  WE:
:     _a - identyfikator
:     _b - nazwa
:     _c - formuła (string)
:     _d - grupa kapitałowa
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('usr_fml',"
      .usr_fml('T',_a,_b,$_c,_d)
   ",type_of(''),type_of(''),type_of(''),type_of(''),-1),

:  Dodaje definicję funkcji parametryzacji (dostępnej dla użytkownika) typu formuła
:  (postać uproszczona)
:  WE:
:     _a - identyfikator
:     _b - nazwa
:     _c - formuła (formuła)
:     _d - grupa kapitałowa
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('usr_fml',"
      .usr_fml('T',_a,_b,_c,_d)
   ",type_of(''),type_of(''),type_of(""),type_of(''),-1),

:  Dodaje definicję funkcji parametryzacji (dostępnej dla użytkownika) typu formuła
:  (postać pełna)
:  WE:
:     _a - zapis systemowy
:     _b - identyfikator
:     _c - nazwa
:     _d - formuła (formuła)
:     _e - grupa kapitałowa
:     [_f] - zestaw danych
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('usr_fml',"
      .def_ini(_b,_a,_e,'T');
      FP_DEF.NAZWA:=_c;
      _wiele:=(var_pres('_f')=type_of('') | var_pres('_f')=type_of($''));
      FP_DEF.WIELE:={? _wiele || 'T' || 'N' ?};
      .def_store();
      FP_DEF.memo_set(''+_d,'FORMULA');
      FP_DEF.memo_put(,'FORMULA');
      {? _wiele
      || _txt:=''+_f;
         {? .form_err(_txt)
         || FUN.error('%1\n'
               'Ze względu na stabilność systemu formuła nie zostanie zapisana.\n'
               'Należy poprawić konfigurację zawartą w bibliotece programu.\n'@[.form_msg(FP_DEF.NAZWA,_txt)])
         || FP_DEF.memo_set(_txt,'ZESTAW');
            FP_DEF.memo_put(,'ZESTAW');
            exec('fp_def_fir','#funpar_str')
         ?}
      ?};
      return(.)
   ",type_of(''),type_of(''),type_of(''),type_of(""),type_of('')),

: ----------------------------------------------------------------------------------------------------------------------

:  Ustala początkowe wartości pól w definicji funkcji parametryzacji
:  WE:
:     _a - identyfikator
:     _b - zapis systemowy
:     _c - grupa kapitałowa
:     _d - funkcja użytkownika? [domyślnie: 'N']
:  WY:
:     typ pusty
   obj_meth('def_ini',".def_ini(_a,_b,_c,'N')",type_of(''),type_of(''),type_of(''),-1),

   obj_meth('def_ini',"
      FP_DEF.blank;
      FP_DEF.ID:=_a;
      FP_DEF.SYSTEM:=_b;
      FP_DEF.GRUPA:=_c;
      FP_DEF.DOSTEP:=_d;
      FP_DEF.STATS:='N';
      ~~
   ",type_of(''),type_of(''),type_of(''),type_of(''),-1),

: ----------------------------------------------------------------------------------------------------------------------

:  Zapisuje rekord do tabeli FP_DEF ze sprawdzeniem unikalności kluczy
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('def_store',"
      FP_DEF.index('ID');
      FP_DEF.prefix;
      _buf:=obj_new(@.CLASS.BUFFER,'FP_DEF');
      {? FP_DEF.find_key(FP_DEF.SYSTEM,FP_DEF.ID,) & ~_buf.is_equal()
      || _buf.restore();
         FP_DEF.put
      || FP_DEF.add
      ?};
      return(.)
   ",-1),

: ----------------------------------------------------------------------------------------------------------------------

:  Umieszcza na pierwszym poziomie struktury funkcję parametryzacji
:  WE:
:     _a - identyfikator funkcji parametryzacji
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('str_def',"
      .str_def('T','',_a,_a)
   ",type_of(''),-1),

:  Tworzy węzeł właściwy dla funkcji parametryzacji i umieszcza go w
:  odpowiednim miejscu w strukturze
:  WE:
:     _a - identyfikator zapisu nadrzędnego
:     _b - identyfikator funkcji parametryzacji
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('str_def',"
      .str_def('T',_a,_b,_b)
   ",type_of(''),type_of(''),-1),

:  Tworzy węzeł właściwy dla funkcji parametryzacji i umieszcza go w
:  odpowiednim miejscu w strukturze
:  WE:
:     _a - identyfikator zapisu nadrzędnego
:     _b - identyfikator tworzonego węzła
:     _c - identyfikator funkcji parametryzacji
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('str_def',"
      .str_def('T',_a,_b,_c)
   ",type_of(''),type_of(''),type_of(''),-1),

:  Tworzy węzeł właściwy dla funkcji parametryzacji i umieszcza go w
:  odpowiednim miejscu w strukturze
:  WE:
:     _a - zapis systemowy
:     _b - identyfikator zapisu nadrzędnego
:     _c - identyfikator tworzonego węzła
:     _d - identyfikator funkcji parametryzacji
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('str_def',"
      .str_ini(_a,_b,_c);
      FP_STR.FP_DEF:=.find_def(_d);
      {? FP_STR.FP_DEF=null
      || return(.)
      ?};
      .str_store()
   ",type_of(''),type_of(''),type_of(''),type_of(''),-1),

: ----------------------------------------------------------------------------------------------------------------------

:  Umieszcza na pierwszym poziomie struktury obszar funkcjonalny
:  WE:
:     _a - identyfikator obszaru funkcjonalnego
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('str_dom',"
      .str_dom('T','',_a,_a)
   ",type_of(''),-1),

:  Tworzy węzeł właściwy dla obszaru funkcjonalnego i umieszcza go w
:  odpowiednim miejscu w strukturze
:  WE:
:     _a - identyfikator zapisu nadrzędnego
:     _b - identyfikator obszaru funkcjonalnego
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('str_dom',"
      .str_dom('T',_a,_b,_b)
   ",type_of(''),type_of(''),-1),

:  Tworzy węzeł właściwy dla obszaru funkcjonalnego i umieszcza go w
:  odpowiednim miejscu w strukturze
:  WE:
:     _a - identyfikator zapisu nadrzędnego
:     _b - identyfikator tworzonego węzła
:     _c - identyfikator obszaru funkcjonalnego
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('str_dom',"
      .str_dom('T',_a,_b,_c)
   ",type_of(''),type_of(''),type_of(''),-1),

:  Tworzy węzeł właściwy dla obszaru funkcjonalnego i umieszcza go w
:  odpowiednim miejscu w strukturze
:  WE:
:     _a - zapis systemowy
:     _b - identyfikator zapisu nadrzędnego
:     _c - identyfikator tworzonego węzła
:     _d - identyfikator obszaru funkcjonalnego
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('str_dom',"
      .str_ini(_a,_b,_c);
      FP_STR.B_DOMAIN:=.find_dom(_d);
      {? FP_STR.B_DOMAIN<>null
      || .str_store()
      ?};
      (.)
   ",type_of(''),type_of(''),type_of(''),type_of(''),-1),

: ----------------------------------------------------------------------------------------------------------------------

:  Umieszcza na pierwszym poziomie struktury folder grupujący
:  WE:
:     _a - identyfikator tworzonego węzła
:     _b - nazwa folderu grupującego
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('str_grp',"
      .str_grp('T','',_a,_b)
   ",type_of(''),type_of(''),-1),

:  Tworzy folder grupujący i umieszcza go w odpowiednim miejscu w strukturze
:  WE:
:     _a - identyfikator zapisu nadrzędnego
:     _b - identyfikator tworzonego węzła
:     _c - nazwa folderu grupującego
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('str_grp',"
      .str_grp('T',_a,_b,_c)
   ",type_of(''),type_of(''),type_of(''),-1),

:  Tworzy folder grupujący i umieszcza go w odpowiednim miejscu w strukturze
:  WE:
:     _a - zapis systemowy
:     _b - identyfikator zapisu nadrzędnego
:     _c - identyfikator tworzonego węzła
:     _d - nazwa folderu grupującego
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('str_grp',"
      .str_ini(_a,_b,_c);
      FP_STR.NAZWA:=_d;
      .str_store()
   ",type_of(''),type_of(''),type_of(''),type_of(''),-1),

: ----------------------------------------------------------------------------------------------------------------------

:  Ustala początkowe wartości pól w strukturze elementów
:  WE:
:     _a - zapis systemowy
:     _b - identyfikator zapisu nadrzędnego
:     _c - identyfikator tworzonego węzła
:  WY:
:     typ pusty
   obj_meth('str_ini',"
      FP_STR.blank;
      FP_STR.ID:=_c;
      FP_STR.SYSTEM:=_a;
      FP_STR.DOSTEP:='T';
      FP_STR.POMIN:='N';
      {? |_b<>''
      || FP_STR.FP_STR:=.find_str(_b)
      ?};
      ~~
   ",type_of(''),type_of(''),type_of(''),-1),

:  Dodaje rekord do tabeli FP_STR ze sprawdzeniem unikalności kluczy
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('str_store',"
      FP_STR.index('ID');
      FP_STR.prefix;
      _buf:=obj_new(@.CLASS.BUFFER,'FP_STR');
      {? FP_STR.find_key(FP_STR.ID,) & ~_buf.is_equal()
      || _numer:=FP_STR.NUMER;
         _buf.restore();
         FP_STR.NUMER:=_numer;
         FP_STR.put
      || FP_STR.add
      ?};
      return(.)
   ",-1),

:  Wyszukuje definicję funkcji
:  WE:
:     _a - identyfikator
:  WY:
:     wskazanie na rekord w tabeli FP_DEF lub null, jeśli nie znaleziono
:     zapisu właściwego dla podanego identyfikatora (klucz ID)
   obj_meth('find_def',"
      _ret:=null;
      FP_DEF.cntx_psh;
      FP_DEF.index('ID');
      FP_DEF.prefix;
      {? ~FP_DEF.find_key('T',_a,)
      || .upgd_err('Nie znaleziono funkcji o kodzie \"%1\".'@[_a])
      || _ret:=FP_DEF.ref
      ?};
      FP_DEF.cntx_pop;
      _ret
   ",type_of(''),-1),

:  Wyszukuje element struktury
:  WE:
:     _a - identyfikator
:  WY:
:     wskazanie na rekord w tabeli FP_STR lub null, jeśli nie znaleziono
:     zapisu właściwego dla podanego identyfikatora (klucz ID)
   obj_meth('find_str',"
      _ret:=null;
      FP_STR.cntx_psh;
      FP_STR.index('ID');
      FP_STR.prefix;
      {? ~FP_STR.find_key(_a,)
      || .upgd_err('Nie znaleziono elementu o kodzie \"%1\".'@[_a])
      || _ret:=FP_STR.ref
      ?};
      FP_STR.cntx_pop;
      _ret
   ",type_of(''),-1),

:  Dodaje wersję parametryzacji
:  WE:
:     _a - identyfikator
:     _b - data emisji
:     _c - krótki opis
:     [_d] - zapis systemowy (domyślnie 'T')
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('wer_par',"
      FP_WER.clear;
      FP_WER.index('SYMBOL');
      {? ~FP_WER.find_key(_a,)
      || FP_WER.blank(1);
         FP_WER.DATA:=_b;
         FP_WER.SYMBOL:=_a;
         FP_WER.OPIS:=_c;
         FP_WER.SYSTEM:={? var_pres('_d')=type_of('') || _d || 'T' ?};
         FP_WER.add
      ?};
      return(.)
   ",type_of(''),type_of(date),type_of('')),

:  Wyszukuje wersję parametryzacji
:  WE:
:     _a - identyfikator
:  WY:
:     wskazanie na rekord w tabeli FP_WER lub null, jeśli nie znaleziono
:     zapisu właściwego dla podanego identyfikatora (klucz SYMBOL)
   obj_meth('find_wer',"
      _ret:=null;
      FP_WER.cntx_psh;
      FP_WER.index('SYMBOL');
      FP_WER.prefix;
      {? ~FP_WER.find_key(_a,)
      || .upgd_err('Nie znaleziono wersji o kodzie \"%1\".'@[_a])
      || _ret:=FP_WER.ref
      ?};
      FP_WER.cntx_pop;
      _ret
   ",type_of(''),-1),

:  Dodaje informacje o aktualizacji
:  WE:
:     _a - symbol wersji
:     _b - symbol funkcji
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('akt_wer',"
      _wer:=.find_wer(_a);
      {? _wer=null
      || return(.)
      ?};

      FP_AKT.clear;
      {? _b='*'
      || FP_DEF.cntx_psh;
         FP_DEF.clear;
         _loop:=FP_DEF.first;
         {!
         |? _loop
         |! {? FP_DEF.DOSTEP<>'T'
            || FP_AKT.blank(1);
               FP_AKT.FP_DEF:=FP_DEF.ref;
               {? ~FP_AKT.find_rec
               || FP_AKT.FP_WER:=_wer;
                  FP_AKT.add
               ?}
            ?};
            _loop:=FP_DEF.next
         !};
         FP_DEF.cntx_pop
      || FP_AKT.blank(1);
         FP_AKT.FP_WER:=_wer;
         FP_AKT.FP_DEF:=.find_def(_b);
         {? FP_AKT.FP_DEF<>null
         || {? ~FP_AKT.find_rec
            || FP_AKT.add
            ?}
         ?}
      ?};
      return(.)
   ",type_of(''),type_of('')),

:  Dodaje informacje o aktualizacji dla wszystkich zdefiniowanych funkcji
:  jeśli istnieją już jakieś zapisy działanie metody jest puste
:  WE:
:     _a - symbol wersji
:  WY:
:     wskazanie na obiekt umożliwiające wywołania w łańcuchu
   obj_meth('akt_ini',"
      FP_AKT.clear;
      {? FP_AKT.size
      || return(.)
      ?};
      _wer:=.find_wer(_a);
      {? _wer=null
      || return(.)
      ?};
      FP_DEF.clear;
      FP_DEF.index('ID');
      _loop:=FP_DEF.first;
      {!
      |? _loop
      |! FP_AKT.blank(1);
         FP_AKT.FP_WER:=_wer;
         FP_AKT.FP_DEF:=FP_DEF.ref;
         FP_AKT.add;
         _loop:=FP_DEF.next
      !};
      return(.)
   ",type_of('')),

:  Wyszukuje czynność
:  WE:
:     _a - identyfikator
:  WY:
:     wskazanie na rekord w tabeli B_ACTION lub null, jeśli nie znaleziono
:     zapisu właściwego dla podanego identyfikatora (klucz UNIK)
   obj_meth('find_act',"
      _ret:=null;
      B_ACTION.cntx_psh;
      B_ACTION.index('UNIK');
      B_ACTION.prefix;
      {? ~B_ACTION.find_key(_a,)
      || .upgd_err('Nie znaleziono czynności o kodzie \"%1\".'@[_a])
      || _ret:=B_ACTION.ref
      ?};
      B_ACTION.cntx_pop;
      _ret
   ",type_of(''),-1),

:  Wyszukuje obszar
:  WE:
:     _a - identyfikator
:  WY:
:     wskazanie na rekord w tabeli B_DOMAIN lub null, jeśli nie znaleziono
:     zapisu właściwego dla podanego identyfikatora (klucz SYMBOL)
   obj_meth('find_dom',"
      _ret:=null;
      B_DOMAIN.cntx_psh;
      B_DOMAIN.index('SYMBOL');
      B_DOMAIN.prefix;
      {? ~B_DOMAIN.find_key(_a,)
      || .upgd_err('Nie znaleziono obszaru o kodzie \"%1\".'@[_a])
      || _ret:=B_DOMAIN.ref
      ?};
      B_DOMAIN.cntx_pop;
      _ret
   ",type_of(''),-1),

:  Uzupełnia konfigurację
   obj_meth('batch',"exec('batch','#funpar_str')",-1),

   obj_meth('form_chk',"
      FP_DEF.cntx_psh;
      FP_DEF.clear;
      FP_DEF.index('NAZWA');
      _loop:=FP_DEF.first;
      {!
      |? _loop
      |! {? FP_DEF.WIELE='T'
         || _txt:=FP_DEF.memo_txt(,1,'ZESTAW');
            {? .form_err(_txt)
            || FUN.error('\n'
                  'Ze względu na stabilność systemu formuła zostanie usunięta.\n\n'
                  'Należy poprawić konfigurację zawartą w bibliotece programu\n'
                  'lub w przypadku funkcji niedefiniowanej automatycznie należy\n'
                  'wprowadzić treść bezbłędnie działającej formuły a następnie\n'
                  'ponownie uruchomić funkcję parametryzacji.'@[.form_msg(FP_DEF.NAZWA,_txt)]);
               FP_DEF.memo_set('','ZESTAW');
               FP_DEF.memo_put(,'ZESTAW')
            ?}
         ?};
         _loop:=FP_DEF.next
      !};
      FP_DEF.cntx_pop;
      return(.)
   ",-1),

   obj_meth('form_err',"
      .BUF.TAB.erase;
      _old:=no_msg(1);
      on_error(2);
      ($_a)(.BUF);
      no_msg(_old);
      _err:=in_error;
      on_error;
      _err
   ",type_of('')),

   obj_meth('form_msg',"
      'Formuła funkcji wielokrotnej parametryzacji zawiera błędy.\n\n'+
      'Funkcja: '+_a+'\n'+
      'Formuła: '+_b+'\n'
   ",type_of(''),type_of('')),

   obj_meth('upgd_err',"
      {? var_pres('__UPG')>100 & __UPG.ctrl_run()<>0
      || __UPG.msg(_a)
      |? exec('runtime_dro','#system')
      || FUN.emsg(_a)
      ?};
      .UPGD_ERR+=1;
      ~~
   ",type_of(''))
)


\batch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Kod metody batch
::----------------------------------------------------------------------------------------------------------------------
FP_WYK.cntx_psh;
FP_WYK.index('FP_WYK');
FP_WYK.clear;
FP_INS.cntx_psh;
FP_INS.index('FP_DEF');
FP_AKT.cntx_psh;
FP_AKT.index('DATA');
FP_DEF.cntx_psh;
FP_DEF.index('NAZWA');
FP_DEF.prefix;

_loop:=FP_DEF.first;
{!
|? {? FP_DEF.DOSTEP='N'
   || FP_AKT.prefix(FP_DEF.ref);
:     najnowsza wersja parametryzacji
      {? FP_AKT.last
      || FP_INS.prefix(FP_DEF.ref);
:        uzupełnij brakujące wykonania
:        dla powstających instancji
         _loop:=FP_INS.first;
         {!
         |? _loop
         |! {? ~FP_WYK.find_key(FP_AKT.ref,FP_INS.ref)
            || FP_WYK.blank;
               FP_WYK.FP_AKT:=FP_AKT.ref;
               FP_WYK.FP_INS:=FP_INS.ref;
               FP_WYK.add
            ?};
            _loop:=FP_INS.next
         !}
      ?}
   ?};
   _loop:=FP_DEF.next
!};

FP_DEF.cntx_pop;
FP_AKT.cntx_pop;
FP_INS.cntx_pop;
FP_WYK.cntx_pop;
~~


\dekl_fp_buf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [17.00]
:: OPIS: Deklaruje klasę pomocniczą do pobierania danych dla wielu instancji konfiguracji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('FP_BUF',@.CLASS)>0
|| return
?};

obj_decl('FP_BUF',

   obj_fld('TAB',~~),
   obj_fld('FIRMA',~~),
   obj_fld('SORT',0),

:  inicjalizacja obiektu
:  WE:
:     _a - wskazanie na firmę
   obj_meth('__init',"
      .TAB:=tab_tmp(3,
         'TABELA','STRING[8]','Tabela',
         'MASKA','STRING[8]','Zbiór',
         'REKORD','INTEGER','Rekord',
         'NAZWA','STRING[200]','Nazwa',
         'KLUCZ','STRING[50]','Klucz'
      );
      .FIRMA:=_b
   ",type_of(null)),

:  "zapamiętuje" informacje o wielokrotnej parametryzacji
:  WE:
:     _a - alias do tabeli, której rekord jest "właścicielem" parametryzacji
:     _b - tekst reprezentujący w nawigatorze dodany rekord
   obj_meth('add',"
      .add(2-!_a,_a.name,#_a.ref,_b)
   ",type_of(SYSLOG),type_of(''),-1),

:  "zapamiętuje" informacje o wielokrotnej parametryzacji
:  WE:
:     _a - alias do tabeli, której rekord jest "właścicielem" parametryzacji
:     _b - tekst reprezentujący w nawigatorze dodany rekord
   obj_meth('add',"
      .add('none','none',_a,_b)
   ",type_of(0),type_of(''),-1),

:  "zapamiętuje" informacje o wielokrotnej parametryzacji
:  WE:
:     _a - akronim tabeli
:     _b - nazwa zbioru
:     _c - numer rekordu
:     _d - reprezentacja tekstowa
   obj_meth('add',"
      {? ~.TAB.find_key(_a,_b,_c)
      || .TAB.blank(1);
         .TAB.TABELA:=_a;
         .TAB.MASKA:=_b;
         .TAB.REKORD:=_c;
         .TAB.NAZWA:=_d;
         .TAB.KLUCZ:=_d;
         .TAB.add
      ?}
   ",type_of(''),type_of(''),type_of(0),type_of(''),-1),

:  ustawia sortowanie wyniku w porządku rosnącym
   obj_meth('sort_asc',".SORT:=0",-1),

:  ustawia sortowanie wyniku w porządku malejącym
   obj_meth('sort_desc',".SORT:=1",-1),

:  umieszcza w buforze zawartość tabeli FP_INS
:  WE:
:     _a - wskazanie na rekord w tabeli FP_FIR
   obj_meth('load',"
      FP_INS.cntx_psh;
      FP_INS.index('UNIQUE');
      FP_INS.prefix(_a);
      _loop:=FP_INS.first;
      {!
      |? _loop
      |! .add(FP_INS.TABELA,FP_INS.MASKA,FP_INS.REKORD,FP_INS.NAZWA);
         _loop:=FP_INS.next
      !};
      FP_INS.cntx_pop
   ",type_of(null)),

:  umieszcza w tabeli FP_INS informacje o "właścicielach" parametryzacji
:  WE:
:     _a - wskazanie na rekord w tabeli FP_FIR
   obj_meth('copy',"
      .TAB.index(.TAB.ndx_tmp(,,'KLUCZ',,.SORT));
      FP_INS.cntx_psh();
      FP_INS.index('UNIQUE');
      FP_INS.prefix(_a);
      _loop:=.TAB.first;
      _numer:=1;
      {!
      |? _loop
      |! {? ~FP_INS.find_key(.TAB.TABELA,.TAB.MASKA,.TAB.REKORD)
         || FP_INS.blank(1);
            FP_INS.FP_FIR:=_a;
            FP_INS.NUMER:=_numer;
            FP_INS.TABELA:=.TAB.TABELA;
            FP_INS.MASKA:=.TAB.MASKA;
            FP_INS.REKORD:=.TAB.REKORD;
            FP_INS.NAZWA:=.TAB.NAZWA;
            FP_INS.add()
         |? FP_INS.NUMER<>_numer
         || FP_INS.NUMER:=_numer;
            FP_INS.put()
         ?};
         _numer+=1;
         _loop:=.TAB.next()
      !};
      FP_INS.cntx_pop()
   ",type_of(null))
)


\fp_akt_ck
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła przed zapisem wywoływana z wyzwalaczy dołącz i popraw przed tabeli FP_AKT sprawdzająca poprawność
::----------------------------------------------------------------------------------------------------------------------
__CHK.validate(FP_AKT,
   "_a.record(_b,,'FP_DEF','FP_WER')"
)


\fp_akt_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed dołączeniem rekordu tabeli FP_AKT
::----------------------------------------------------------------------------------------------------------------------
exec('fp_akt_ck','#funpar_str')


\fp_akt_aa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po dołączeniu rekordu tabeli FP_AKT
::----------------------------------------------------------------------------------------------------------------------
exec('fp_akt_wyk','#funpar_str');
~~


\fp_akt_bp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed poprawieniem rekordu tabeli FP_AKT
::----------------------------------------------------------------------------------------------------------------------
exec('fp_akt_ck','#funpar_str')


\fp_akt_ap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po poprawieniu rekordu tabeli FP_AKT
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_akt_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed usunięciem rekordu tabeli FP_AKT
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',FP_WYK,'FP_WYK',FP_AKT.ref)


\fp_akt_ad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po usunięciu rekordu tabeli FP_AKT
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_akt_wyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Ustala zawartość tabeli FP_WYK dla bieżącego zapisu w tabeli FP_AKT
::----------------------------------------------------------------------------------------------------------------------
FP_WYK.cntx_psh;
FP_WYK.index('FP_WYK');
FP_WYK.prefix(FP_AKT.ref);
FP_INS.cntx_psh;
FP_INS.index('FP_DEF');
FP_INS.prefix(FP_AKT.FP_DEF);

_loop:=FP_INS.first;
{!
|? _loop
|! {? ~FP_WYK.find_key(FP_INS.ref)
   || FP_WYK.blank(1);
      FP_WYK.FP_AKT:=FP_AKT.ref;
      FP_WYK.FP_INS:=FP_INS.ref;
      FP_WYK.STATUS:='N';
      FP_WYK.add
   ?};
   _loop:=FP_INS.next
!};

FP_INS.cntx_pop;
FP_WYK.cntx_pop;
~~


\fp_def_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła przed zapisem wywoływana z wyzwalaczy dołącz i popraw przed tabeli FP_DEF ustalająca wartości pól
::----------------------------------------------------------------------------------------------------------------------
FP_DEF.RODZAJ:=
   {? FP_DEF.B_ACTION<>null
   || FP_DEF.NAZWA:=FP_DEF.B_ACTION().NAME;
      'C'
   || 'F'
   ?};
1


\fp_def_ck
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła przed zapisem wywoływana z wyzwalaczy dołącz i popraw przed tabeli FP_DEF sprawdzająca poprawność
::----------------------------------------------------------------------------------------------------------------------
__CHK.validate(FP_DEF,
   "_a.record(_b,,'ID','SYSTEM','RODZAJ','GRUPA','WIELE','DOSTEP','STATS')",
   "_a.in_set(_b,'RODZAJ',,'C','F')",
   "_a.record(_b,,{? FP_DEF.RODZAJ='C' || 'B_ACTION' || 'NAZWA' ?})",
   "_a.in_set(_b,'SYSTEM',,'T','N')",
   "_a.in_set(_b,'GRUPA',,'T','N')",
   "_a.in_set(_b,'WIELE',,'T','N')",
   "_a.in_set(_b,'DOSTEP',,'T','N')",
   "_a.in_set(_b,'STATS',,'T','N')"
)


\fp_def_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed dołączeniem rekordu tabeli FP_DEF
::----------------------------------------------------------------------------------------------------------------------
exec('fp_def_bw','#funpar_str');
exec('fp_def_ck','#funpar_str')


\fp_def_aa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po dołączeniu rekordu tabeli FP_DEF
::----------------------------------------------------------------------------------------------------------------------
exec('fp_def_fir','#funpar_str');
~~


\fp_def_bp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed poprawieniem rekordu tabeli FP_DEF
::----------------------------------------------------------------------------------------------------------------------
exec('fp_def_bw','#funpar_str');
exec('fp_def_ck','#funpar_str')


\fp_def_ap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po poprawieniu rekordu tabeli FP_DEF
::----------------------------------------------------------------------------------------------------------------------
exec('fp_def_akt','#funpar_str');
exec('fp_def_fir','#funpar_str');

{? FP_DEF.NAZWA<>bfld('NAZWA')
|| FP_STR.cntx_psh;
   FP_STR.index('FP_DEF');
   FP_STR.prefix(FP_DEF.ref);
   _loop:=FP_STR.first;
   {!
   |? _loop
   |! FP_STR.NAZWA:=FP_DEF.NAZWA;
      FP_STR.put;
      _loop:=FP_STR.next
   !};
   FP_STR.cntx_pop;
   FP_WID.cntx_psh;
   FP_WID.index('FP_DEF');
   FP_WID.prefix(FP_DEF.ref);
   _loop:=FP_WID.first;
   {!
   |? _loop
   |! FP_WID.NAZWA:=FP_DEF.NAZWA;
      FP_WID.put;
      _loop:=FP_WID.next
   !};
   FP_WID.cntx_pop
?};
~~


\fp_def_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed usunięciem rekordu tabeli FP_DEF
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',FP_AKT,'DATA',FP_DEF.ref) &
exec('del_tmp','#table',FP_WYK,'FP_DEF',FP_DEF.ref) &
exec('del_ndx','#table',FP_FIR,'UNIQUE',FP_DEF.ref) &
exec('del_ndx','#table',FP_STR,'FP_DEF',FP_DEF.ref) &
exec('del_ndx','#table',FP_WID,'FP_DEF',FP_DEF.ref)


\fp_def_ad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po usunięciu rekordu tabeli FP_DEF
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_def_fir
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Ustala zawartość tabeli FP_FIR dla bieżącego zapisu w tabeli FP_DEF
::----------------------------------------------------------------------------------------------------------------------
FP_FIR.cntx_psh;
FP_FIR.index('UNIQUE');
FP_FIR.prefix(FP_DEF.ref);

{? FP_FIR.first
|| {!
   |? {? FP_DEF.DOSTEP='N'
         &
         {? FP_DEF.GRUPA='N'
         || FP_FIR.FIRMA<>null
         || FP_FIR.FIRMA=null
         ?}
      || FP_FIR.next
      || FP_FIR.del
      ?}
   !}
?};

{? FP_DEF.DOSTEP='N'
|| {? FP_DEF.GRUPA='N'
   || FIRMA.cntx_psh;
      FIRMA.index('SYMBOL2');
:     FIRMA.prefix('S');
      _loop:=FIRMA.first;
      {!
      |? _loop
      |! {? FP_FIR.find_key(FIRMA.ref)
         || exec('fp_fir_ins','#funpar_str')
         || FP_FIR.blank(1);
            FP_FIR.FP_DEF:=FP_DEF.ref;
            FP_FIR.FIRMA:=FIRMA.ref;
            FP_FIR.POMIN:='N';
            FP_FIR.add
         ?};
         _loop:=FIRMA.next
      !};
      FIRMA.cntx_pop
   || {? FP_FIR.first
      || exec('fp_fir_ins','#funpar_str')
      || FP_FIR.blank(1);
         FP_FIR.FP_DEF:=FP_DEF.ref;
         FP_FIR.FIRMA:=null;
         FP_FIR.POMIN:='N';
         FP_FIR.add
      ?}
   ?}
?};

FP_FIR.cntx_pop;
~~


\fp_def_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Ustala zawartość tabeli FP_AKT dla bieżącego zapisu w tabeli FP_DEF
::----------------------------------------------------------------------------------------------------------------------
{? bfld('DOSTEP')='N' & FP_DEF.DOSTEP='T'
|| FP_AKT.cntx_psh();
   FP_AKT.index('FP_AKT');
   FP_AKT.prefix(FP_DEF.ref());
   {? FP_AKT.first()
   || {! |? FP_AKT.del() !}
   ?};
   FP_AKT.cntx_pop()
?};
~~


\fp_fir_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła przed zapisem wywoływana z wyzwalaczy dołącz i popraw przed tabeli FP_FIR ustalająca wartości pól
::----------------------------------------------------------------------------------------------------------------------
{? FP_FIR.STATUS='' || FP_FIR.STATUS:='N' ?};
{? FP_FIR.POMIN='' || FP_FIR.POMIN:='N' ?};
1


\fp_fir_ck
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła przed zapisem wywoływana z wyzwalaczy dołącz i popraw przed tabeli FP_FIR sprawdzająca poprawność
::----------------------------------------------------------------------------------------------------------------------
__CHK.validate(FP_FIR,
   "_a.record(_b,,'FP_DEF','STATUS','POMIN')",
   "{? _b.FP_DEF().GRUPA<>'T' || _a.record(_b,,'FIRMA') || 1 ?}",
   "_a.in_set(_b,'STATUS',,'T','N','?')",
   "_a.in_set(_b,'POMIN',,'T','N')"
)


\fp_fir_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza przed dołączeniem rekordu tabeli FP_FIR
::----------------------------------------------------------------------------------------------------------------------
exec('fp_fir_bw','#funpar_str');
exec('fp_fir_ck','#funpar_str')


\fp_fir_aa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza po dołączeniu rekordu tabeli FP_FIR
::----------------------------------------------------------------------------------------------------------------------
exec('fp_fir_ins','#funpar_str');
~~


\fp_fir_bp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza przed poprawieniem rekordu tabeli FP_FIR
::----------------------------------------------------------------------------------------------------------------------
exec('fp_fir_bw','#funpar_str');
exec('fp_fir_ck','#funpar_str')


\fp_fir_ap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza po poprawieniu rekordu tabeli FP_FIR
::----------------------------------------------------------------------------------------------------------------------
exec('fp_fir_ins','#funpar_str');

{? FP_FIR.POMIN<>bfld('POMIN')
|| FP_INS.cntx_psh;
   FP_INS.index('NUMER');
   FP_INS.prefix(FP_FIR.ref);
   _loop:=FP_INS.first;
   {!
   |? _loop
   |! FP_INS.STATUS:={? FP_FIR.POMIN='T' || 'P' || 'N' ?};
      FP_INS.put;
      _loop:=FP_INS.next
   !};
   FP_INS.cntx_pop
?};

~~


\fp_fir_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza przed usunięciem rekordu tabeli FP_FIR
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',FP_INS,'NUMER',FP_FIR.ref) &
exec('fp_his_del','#funpar_str',FP_FIR)


\fp_fir_ad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza po usunięciu rekordu tabeli FP_FIR
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_fir_ins
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Ustala zawartość tabeli FP_INS dla bieżącego zapisu w tabeli FP_FIR
::----------------------------------------------------------------------------------------------------------------------
FP_INS.cntx_psh;
FP_INS.index('NUMER');
FP_INS.prefix(FP_FIR.ref);

FP_FIR.FP_DEF();

{? FP_INS.first
|| {!
   |? {? {? FP_DEF.WIELE='N'
         || FP_INS.REKORD<=0
         || FP_INS.REKORD>0
         ?}
      || FP_INS.next
      || FP_INS.del
      ?}
   !}
?};

{? FP_DEF.WIELE='T'
|| exec('dekl_fp_buf','#funpar_str');
   _buf:=obj_new(@.CLASS.FP_BUF,FP_FIR.FIRMA);
   _buf.load(FP_FIR.ref);
   ($FP_DEF.memo_txt(,1,'ZESTAW'))(_buf);
   _buf.copy(FP_FIR.ref);
   obj_del(_buf)
|| {? ~FP_INS.first
   || FP_INS.blank(1);
      FP_INS.FP_FIR:=FP_FIR.ref;
      FP_INS.NUMER:=1;
      FP_INS.add
   ?}
?};

FP_INS.cntx_pop;
~~


\fp_his_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Dodaje zapis do tabeli FP_HIS
::   WE: _a - alias do tabeli
::----------------------------------------------------------------------------------------------------------------------
FP_HIS.clear;
FP_HIS.blank(1);

FP_HIS.TABELA:=!_a;
FP_HIS.MASKA:=_a.name;
FP_HIS.REKORD:=#_a.ref;
FP_HIS.STATUS:=
   {? _a=FP_WYK || _a.STATUS
   |? _a=FP_FIR || _a.POMIN
   |? _a=FP_STR || _a.POMIN
   || return
   ?};
FP_HIS.KTO:=_a.KTO;
FP_HIS.DATA:=_a.DATA;
FP_HIS.CZAS:=_a.CZAS;
{? FP_HIS.add
|| FP_HIS.memo_set(_a.memo_txt(,1,'NOTA'),'NOTA');
   FP_HIS.memo_put(,'NOTA')
?};

~~


\fp_his_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Usuwa zapisy z tabeli FP_HIS
::   WE: _a - alias do tabeli
::----------------------------------------------------------------------------------------------------------------------
FP_HIS.index('FP_HIS');
FP_HIS.prefix(!_a,_a.name,_a.ref);

{? FP_HIS.first
|| {! |? FP_HIS.del !}
?};

1


\fp_ins_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła przed zapisem wywoływana z wyzwalaczy dołącz i popraw przed tabeli FP_INS ustalająca wartości pól
::----------------------------------------------------------------------------------------------------------------------
{? FP_INS.STATUS='' || FP_INS.STATUS:='N' ?};
1


\fp_ins_ck
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła przed zapisem wywoływana z wyzwalaczy dołącz i popraw przed tabeli FP_INS sprawdzająca poprawność
::----------------------------------------------------------------------------------------------------------------------
__CHK.validate(FP_INS,
   "_a.record(_b,,'FP_FIR','STATUS')",
   "_a.in_set(_b,'STATUS',,'T','N','?','P')"
)


\fp_ins_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed dołączeniem rekordu tabeli FP_INS
::----------------------------------------------------------------------------------------------------------------------
exec('fp_ins_bw','#funpar_str');
exec('fp_ins_ck','#funpar_str')


\fp_ins_aa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po dołączeniu rekordu tabeli FP_INS
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_ins_bp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed poprawieniem rekordu tabeli FP_INS
::----------------------------------------------------------------------------------------------------------------------
exec('fp_ins_bw','#funpar_str');
exec('fp_ins_ck','#funpar_str')


\fp_ins_ap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po poprawieniu rekordu tabeli FP_INS
::----------------------------------------------------------------------------------------------------------------------
{? FP_INS.STATUS<>bfld('STATUS') & (FP_INS.STATUS='P' | bfld('STATUS')='P')
|| {? FP_WYK.f_active
   || FP_WYK.f_set(,,'FP_INS=:_a',FP_INS.ref);
      _loop:=FP_WYK.f_first;
      {!
      |? _loop
      |! {? FP_WYK.FP_INS=FP_INS.ref
         || FP_WYK.STATUS:=FP_INS.STATUS;
            FP_WYK.put
         ?};
         _loop:=FP_WYK.next
      !}
   || FP_WYK.cntx_psh;
      FP_WYK.clear;
      FP_WYK.f_set(,,'FP_INS=:_a',FP_INS.ref);
      _loop:=FP_WYK.f_first;
      {!
      |? _loop
      |! FP_WYK.STATUS:=FP_INS.STATUS;
         FP_WYK.put;
         _loop:=FP_WYK.next
      !};
      FP_WYK.f_clear;
      FP_WYK.cntx_pop
   ?}
?};
~~


\fp_ins_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed usunięciem rekordu tabeli FP_INS
::----------------------------------------------------------------------------------------------------------------------
exec('del_tmp','#table',FP_WYK,'FP_INS',FP_INS.ref)


\fp_ins_ad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po usunięciu rekordu tabeli FP_INS
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_str_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła przed zapisem wywoływana z wyzwalaczy dołącz i popraw przed tabeli FP_STR ustalająca wartości pól
::----------------------------------------------------------------------------------------------------------------------
{? FP_STR.FP_DEF<>null
|| FP_STR.NAZWA:=FP_STR.FP_DEF().NAZWA;
   FP_STR.RODZAJ:='F'
|? FP_STR.RODZAJ=''
|| {? FP_STR.B_DOMAIN<>null
   || FP_STR.NAZWA:=FP_STR.B_DOMAIN().NAME;
      FP_STR.RODZAJ:='O'
   || FP_STR.RODZAJ:='G'
   ?}
|? FP_STR.RODZAJ='O'
|| FP_STR.NAZWA:=FP_STR.B_DOMAIN().NAME
?};

{? FP_STR.DOSTEP=''
|| {? FP_STR.B_DOMAIN<>null
   || {? exec('lic','#b_domain',FP_STR.B_DOMAIN)
      || FP_STR.DOSTEP:='T'
      || FP_STR.DOSTEP:='N'
      ?}
   || FP_STR.DOSTEP:='T'
   ?}
?};

{? FP_STR.POMIN='' || FP_STR.POMIN:='N' ?};

{? FP_STR.B_DOMAIN=null & FP_STR.FP_STR
|| _domain:=null;
   FP_STR.cntx_psh;
   {!
   |? FP_STR.seek(FP_STR.FP_STR,) & _domain=null
   |! _domain:=FP_STR.B_DOMAIN
   !};
   FP_STR.cntx_pop;
   FP_STR.B_DOMAIN:=_domain
?};

1


\fp_str_ck
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła przed zapisem wywoływana z wyzwalaczy dołącz i popraw przed tabeli FP_STR sprawdzająca poprawność
::----------------------------------------------------------------------------------------------------------------------
__CHK.validate(FP_STR,
   "_a.record(_b,,'ID','SYSTEM','RODZAJ','NAZWA','DOSTEP','POMIN')",
   "_a.in_set(_b,'SYSTEM',,'T','N')",
   "_a.in_set(_b,'RODZAJ',,'F','O','G')",
   "_a.in_set(_b,'DOSTEP',,'T','N')",
   "_a.in_set(_b,'POMIN',,'T','N')"
)


\fp_str_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed dołączeniem rekordu tabeli FP_STR
::----------------------------------------------------------------------------------------------------------------------
exec('fp_str_bw','#funpar_str');

_numer:=0;
FP_STR.cntx_psh;
FP_STR.index('FP_STR');
FP_STR.prefix(FP_STR.FP_STR);
{? FP_STR.last
|| _numer:=FP_STR.NUMER
?};
FP_STR.cntx_pop;
FP_STR.NUMER:=_numer;
FP_STR.NUMER+=1;

exec('fp_str_ck','#funpar_str')


\fp_str_aa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po dołączeniu rekordu tabeli FP_STR
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_str_bp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed poprawieniem rekordu tabeli FP_STR
::----------------------------------------------------------------------------------------------------------------------
exec('fp_str_bw','#funpar_str');
exec('fp_str_ck','#funpar_str')


\fp_str_ap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po poprawieniu rekordu tabeli FP_STR
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_str_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed usunięciem rekordu tabeli FP_STR
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',FP_STR,'FP_STR',#FP_STR.ref) &
exec('del_ndx','#table',FP_WID,'FP_STR',#FP_STR.ref) &
exec('fp_his_del','#funpar_str',FP_STR)


\fp_str_ad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po usunięciu rekordu tabeli FP_STR
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_wer_ck
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła przed zapisem wywoływana z wyzwalaczy dołącz i popraw przed tabeli FP_WER sprawdzająca poprawność
::----------------------------------------------------------------------------------------------------------------------
__CHK.validate(FP_WER,
   "_a.record(_b,,'DATA','SYMBOL','OPIS','SYSTEM')",
   "_a.in_set(_b,'SYSTEM',,'T','N')"
)


\fp_wer_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed dołączeniem rekordu tabeli FP_WER
::----------------------------------------------------------------------------------------------------------------------
exec('fp_wer_ck','#funpar_str')


\fp_wer_aa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po dołączeniu rekordu tabeli FP_WER
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_wer_bp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed poprawieniem rekordu tabeli FP_WER
::----------------------------------------------------------------------------------------------------------------------
exec('fp_wer_ck','#funpar_str')


\fp_wer_ap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po poprawieniu rekordu tabeli FP_WER
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_wer_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed usunięciem rekordu tabeli FP_WER
::----------------------------------------------------------------------------------------------------------------------
exec('del_tmp','#table',FP_AKT,'FP_WER',FP_WER.ref)


\fp_wer_ad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po usunięciu rekordu tabeli FP_WER
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_wyk_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła przed zapisem wywoływana z wyzwalaczy dołącz i popraw przed tabeli FP_WYK ustalająca wartości pól
::----------------------------------------------------------------------------------------------------------------------
{? FP_WYK.STATUS='' || FP_WYK.STATUS:='N' ?};
FP_WYK.FP_WER:=FP_WYK.FP_AKT().FP_WER;
FP_WYK.FIRMA:=FP_WYK.FP_INS().FP_FIR().FIRMA;
FP_WYK.FP_DEF:=FP_WYK.FP_INS().FP_FIR().FP_DEF;
{? FP_WYK.FP_INS().FP_FIR().FP_DEF().B_ACTION<>null
|| FP_WYK.B_DOMAIN:=FP_INS.FP_FIR().FP_DEF().B_ACTION().B_DOMAIN
?};
1


\fp_wyk_ck
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła przed zapisem wywoływana z wyzwalaczy dołącz i popraw przed tabeli FP_WYK sprawdzająca poprawność
::----------------------------------------------------------------------------------------------------------------------
__CHK.validate(FP_WYK,
   "_a.record(_b,,'FP_AKT','FP_INS','STATUS')",
   "_a.in_set(_b,'STATUS',,'?','T','N','Z','P')"
)


\fp_wyk_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed dołączeniem rekordu tabeli FP_WYK
::----------------------------------------------------------------------------------------------------------------------
exec('fp_wyk_bw','#funpar_str');
exec('fp_wyk_ck','#funpar_str')


\fp_wyk_aa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po dołączeniu rekordu tabeli FP_WYK
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_wyk_bp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed poprawieniem rekordu tabeli FP_WYK
::----------------------------------------------------------------------------------------------------------------------
exec('fp_wyk_bw','#funpar_str');
exec('fp_wyk_ck','#funpar_str')


\fp_wyk_ap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po poprawieniu rekordu tabeli FP_WYK
::----------------------------------------------------------------------------------------------------------------------
{? FP_WYK.STATUS<>bfld('STATUS') & FP_WYK.STATUS<>'Z'
|| FP_INS.cntx_psh;
   FP_INS.prefix;
   FP_WYK.FP_INS();
   FP_INS.STATUS:=FP_WYK.STATUS;
   FP_INS.put;
   FP_INS.cntx_pop
?};

~~


\fp_wyk_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz przed usunięciem rekordu tabeli FP_WYK
::----------------------------------------------------------------------------------------------------------------------
exec('fp_his_del','#funpar_str',FP_WYK)


\fp_wyk_ad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyzwalacz po usunięciu rekordu tabeli FP_WYK
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_wid_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wyzwalacz przed dołączeniem rekordu tabeli FP_WID
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
1


\fp_wid_aa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wyzwalacz po dołączeniu rekordu tabeli FP_WID
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_wid_bp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wyzwalacz przed poprawieniem rekordu tabeli FP_WID
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
1


\fp_wid_ap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wyzwalacz po poprawieniu rekordu tabeli FP_WID
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\fp_wid_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wyzwalacz przed usunięciem rekordu tabeli FP_WID
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
1


\fp_wid_ad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wyzwalacz po usunięciu rekordu tabeli FP_WID
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_user:=bfld('USERS');
_parent:=bfld('FP_WID');
_nr:=bfld('NUMER');

: Funkcje do przenumerowania kolejnych elementów drzewa.
_frenum:="
   _user:=_a; _parent:=_b; _nr:=_c;
   FP_WID.prefix(_user,_parent);
   {? FP_WID.find_ge(_nr) || {! |? FP_WID.NUMER:=_nr; _nr+=FP_WID.put(); FP_WID.next() !} ?}
";


FP_WID.cntx_psh();
FP_WID.index('NUMER');
{? _parent
:  Usunięto liść.
|| FP_WID.prefix();
   {? ~FP_WID.find_key(_user,_parent) & FP_WID.seek(_parent,) & FP_WID.NUMER
:     Jeżeli był ostani na gałęzi - usuwamy gałąź (z wyjątkiem gałęzi NUMER 0 - "Ustawienia osobiste").
   || FP_WID.del()

   || _frenum(_user,_parent,_nr)
   ?}

:  Usunięto gałąź - trzeba przenumerować następne.
|| _frenum(_user,0,_nr)
?};
FP_WID.cntx_pop();
~~

:Sign Version 2.0 jowisz:1045 2023/09/29 10:29:49 93d5ab99dfd5b7d4d28018c3841090d0f509e3dd3c82d9a4fbfeff65300e11f9bfdbb1efa536b9fdea387f82fa69a59b7fb20832c54e486bf7e9629a10e0fc92acd7a5e06bed512f74137620519cd2c2d866b2710c2f501ab8322b2aef5289eb8ab60d32db2db8fe9e52b32b750fdf51bdf1e036e881205720afa040e321c37a
