:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #icon.fml [17.00]
:: Utworzony: 17.12.2014
:: Autor: AK
::======================================================================================================================
:: Zawartość: Uniwersalne formuły dotyczące obsługi ikon
::======================================================================================================================


\nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Zwraca numer dla ikony
::   WE: _a - ikona w formacie 'nazwapliku:numer'
::----------------------------------------------------------------------------------------------------------------------
_pos:=_a*':';
#(_pos-_a)


\file
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Zwraca nazwę pliku dla ikony
::   WE: _a - ikona w formacie 'nazwapliku:numer'
::----------------------------------------------------------------------------------------------------------------------
_pos:=_a*':';
(_pos-1)+_a


\pusta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: 'pusta' ikona
::  OLD: \empty/ikony.fml
::  TAG: <IKONA>
::----------------------------------------------------------------------------------------------------------------------
'xwin16.png:110'


\ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.00]
:: OPIS: Ikona dla przycisku OK
::  TAG: <IKONA>
::----------------------------------------------------------------------------------------------------------------------
'xwin16.png:13'


\anuluj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.00]
:: OPIS: Ikona dla przycisku Anuluj
::  TAG: <IKONA>
::----------------------------------------------------------------------------------------------------------------------
'xwin16.png:14'


\zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.00]
:: OPIS: Ikona dla przycisku Zakończ
::  TAG: <IKONA>
::----------------------------------------------------------------------------------------------------------------------
'xwin16.png:23'


\ico_selall
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: Wyświetla wszystkie ikony z wszystkich dostępnych plików bmp
::   WE:  _a - nazwa ikony, na której ma sie ustwić kursor
::       [_b] - wyświetlać globalne (domyślnie 1)
::       [_c] - wyświetlać lokalne (domyślnie 0)
::   WY: STRING nazwa ikony
::  OLD: \ico_selall/libfml.fml
::----------------------------------------------------------------------------------------------------------------------
_curico:={? _>0 & type_of(_a)=type_of('') || _a || '' ?};
_iGlobal:={? _>1 & type_of(_b)=type_of(1) || _b || 1  ?};
_iLocal:={? _>2 & type_of(_c)=type_of(1)  || _c || 0  ?};
_icotypes:={? _>3 & type_of(_d)=type_of('') || -_d || '.png' ?};
_result:='';
_bmaps:=exec('ico_get_bmplst','#icon',_iGlobal,_iLocal,_icotypes);
{? _bmaps.first()
|| _tab:=exec('ico_createtab','#icon');
   _ftab:=exec('ico_createftab','#icon');
   {!
   |? _ftab.LP+=1;
      _ftab.FILENAME:=_bmaps.FILENAME;
      _ftab.FDESNAME:='';
      _ftab.add();
      _bmaps.next()
   !};
   exec('ico_add2tab','#icon',_tab,_ftab,_iGlobal,_iLocal);
   {? _tab.first()
   || {? _curico<>''
      || _tmp:=_curico;
         _curico:='';
         {!
         |? {? _tab.SYM=_tmp || _curico:=_tmp ?};
            _curico='' & _tab.next()
         !}
      ?};
      {? _tab.select(,_curico<>'',10)
      || _result:=_tab.SYM
      ?}
   ?}
|| FUN.emsg('Brak ikon typu: *%1'@[_icotypes])
?};
_result


\ico_get_bmplst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: tworzy i ładuje tabele liste bitmap z ikonami
::  OLD: \ico_get_bmplst/libfml.fml
::----------------------------------------------------------------------------------------------------------------------
_iGlobal:={? _>0 & type_of(_a)=type_of(1) || _a || 1 ?};
 _iLocal:={? _>1 & type_of(_b)=type_of(1) || _b || 0 ?};

_icotypes:={?_>2 & type_of(_c)=type_of('') || -_c || '.png' ?};

_tab:=tab_tmp(2
             ,'FILENAME','STRING[64]','Nazwa pliku'
             ,'ILEIKON' ,'INTEGER'   ,'Liczba ikon'
             ,'GLOBAL'  ,'STRING[1]' ,'Globalny'
             );
{? _icotypes*'.bmp'
||
   _bitmaps:=files('*.bmp');
   {? _bitmaps.first()
   ||
      _next:=1;
      {!
      |? _fname:=_bitmaps.FILENAME;
         _ileicon:=0;
         _tab.FILENAME:=_bitmaps.FILENAME;
::       sprawdzenie ile ikon mamy w danym pliku
         _tab.ILEIKON:=exec('ico_get_numbmp','#icon',_bitmaps.FILENAME);
         {? _tab.ILEIKON
         || _tab.GLOBAL:={? pth_dir(_bitmaps.FILENAME)=pth_dir('.bmp') || 'N' || 'T' ?};
            _tab.add()
         ?};
         _bitmaps.next()
      !}
   ?};
   obj_del(_bitmaps)
?};
{? _icotypes*'.png'
||
   _bitmaps:=files('*.png');
   {? _bitmaps.first()
   ||
      _next:=1;
      {!
      |? _fname:=_bitmaps.FILENAME;
         _ileicon:=0;
         _tab.FILENAME:=_bitmaps.FILENAME;
::       sprawdzenie ile ikon mamy w danym pliku
         _tab.ILEIKON:=exec('ico_get_numpng','#icon',_bitmaps.FILENAME);
         {? _tab.ILEIKON
         || _tab.GLOBAL:={? pth_dir(_bitmaps.FILENAME)=pth_dir('.png') || 'N' || 'T' ?};
            _tab.add()
         ?};
         _bitmaps.next()
      !}
   ?};
   obj_del(_bitmaps)
?};
_tab


\ico_createtab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: tworzy tabele dla ikon
::   WY: wskazanie do tabeli
::  OLD: \ico_createtab/libfml.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1
             ,'FNAME' ,'STRING[20]' ,'Plik'
             ,'NR'    ,'INTEGER'    ,'Numer'
             ,'SYM'   ,'STRING[20]' ,'Symbol'
             ,'NAZ'   ,'STRING[100]','Opis'
             ,'GLOBAL','STRING[1]'  ,'Globalny'
             );
_win_sel:=_tab.mk_sel('Ikony'@,'P',,'#libfmlselicons',,,,,'U');

_tab.win_fld(_win_sel,,'SYM'   ,,,15,3,,'Symbol'@);
_tab.win_fld(_win_sel,,'NAZ'   ,,,20,,,'Ikona/Opis'@);
_tab.win_fld(_win_sel,,'GLOBAL',,, 3,,,'Globalny'@,,,2,,"'T'","'N'");
_tab.win_act(_win_sel,,'Formuła','&Wybierz'@@,,'Wybór beżącego zapisu ze słownika'@,$'sel_exit()',,1,,,,'W');
_tab.win_act(_win_sel,,'Szukaj');
_tab.win_act(_win_sel,,'Kolejność');
_tab.win_act(_win_sel,,'Wyświetl',,,,"cur_tab.edit();0");
_tab.win_sel(_win_sel);
_tab.win_fml(_win_sel,, 'NAZ',,'ICON_BEFORE',$'cur_tab.SYM');
_edit:=_tab.mk_edit('Ikona'@);
_tab.win_edit(_edit);
_tab.win_efld(_edit,,'SYM',,,16,,0,'Symbol'@);
_tab.win_efld(_edit,,'NAZ',,,40,,1,'Nazwa'@);

_tab


\ico_createftab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: tworzy tabele dla parametrów do ikon
::   WY: wskazanie do tabeli
::  OLD: \ico_createftab/libfml.fml
::----------------------------------------------------------------------------------------------------------------------
_ftab:=tab_tmp(1
              ,'LP','INTEGER','Lp'
              ,'FILENAME','STRING[60]','Plik'
              ,'FDESNAME','STRING[60]','Plik'
              );
_ftab


\ico_add2tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: dodaje ikony z pliku do tabeli
::   WE: TABLE _a - wskazanie do tabeli (ico_createtab/libfml)
::       TABLE _b - wskazanie do tabeli z nazwami plików (ico_createftab/libfml)
::       [_c] - dodawać globalne (domyślnie 1)
::       [_d] - dodawać lokalne (domyślnie 0)
::   WY: ~~
::  OLD: \ico_add2tab/libfml.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_ftab:=_b;
_iGlobal:={? _>2 & type_of(_c)=type_of(1) || _c || 1 ?};
 _iLocal:={? _>3 & type_of(_d)=type_of(1) || _d || 0 ?};
{? _ftab.first()
|| {!
   |?
      _file:=_ftab.FILENAME;
      _ileico:={? -(_file+4)='.bmp' || exec('ico_get_numbmp','#icon',_file)
               |? -(_file+4)='.png' || exec('ico_get_numpng','#icon',_file)
                                    || 0
               ?};
               {! _ico:=1.._ileico
               |! _tab.FNAME:=_file;
                  _tab.NAZ:='';
                  _tab.SYM:=_file+':'+$_ico;
                  _tab.add()
               !};
   _ftab.next()
   !}
?};
~~


\ico_get_numbmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: Zwraca liczbe ikon w pliku bmp
::   WE: STRING nazwa_pliku (bitmapy)
::   WY: liczba ikon w pliku
::  OLD: \ico_get_numbmp/libfml.fml
::----------------------------------------------------------------------------------------------------------------------
:: nazwa pliku
_fname:=_a;
:: szerokość ikony
_ico_w:=16;
:: wysokość ikony
_ico_h:=16;
:: wynik - liczba ikon w pliku
_result:=0;

:: formuła pobierająca podwójne słowo z pliku
_get_dw:="
          _result:=0;
          _dword:=obj_new(4);
          {! _byte:=4//-1..1 |! _dword[_byte]:=fread(_a) !};
          {! _byte:=1..4     |! _result:=_result*256+_dword[_byte] !};
          _result
         ";

{? fexists(_fname,1)
|| _fbmp:=fopen(_fname,'br',1);
   {? _fbmp
   ||
::    sprawdzamy szerokość
      fseek(_fbmp,18);
::    czytamy szerokość
      _dw_width:=_get_dw(_fbmp);
::    czytamy wysokość
      _dw_heigh:=_get_dw(_fbmp);
      fclose(_fbmp);
::    sprawdzamy czy szerokość pliku jest zgodna z szerokościa ikony
::    sprawdzamy czy wysokość pliku dzieli się bez reszty przez wysokość ikony
      {? _dw_width=_ico_w
      & _dw_heigh%*_ico_h=0
      || _result:=_dw_heigh/_ico_h
      ?}
   ?}
?};
_result


\ico_get_numpng
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: Zwraca liczbę ikon w pliku png
::   WE: STRING nazwa_pliku (png)
::   WY: liczba ikon w pliku
::  OLD: \ico_get_numpng/libfml.fml
::----------------------------------------------------------------------------------------------------------------------
:: nazwa pliku
_fname:=_a;
:: szerokosc ikony
_ico_w:=16;
:: wysokosc ikony
_ico_h:=16;
:: wynik - liczba ikon w pliku
_result:=0;

:: formuła pobierająca podwójne słowo z pliku
_get_dw:="
          _result:=0;
          _dword:=obj_new(4);
          {! _byte:=1..4 |! _dword[_byte]:=fread(_a) !};
          {! _byte:=1..4 |! _result:=_result*256+_dword[_byte] !};
          _result
         ";

{? fexists(_fname,1)
|| _fbmp:=fopen(_fname,'br',1);
   {? _fbmp
   ||
::    sprawdzamy szerokosc
      fseek(_fbmp,16);
::    czytamy szerokosc
      _dw_width:=_get_dw(_fbmp);
::    czytamy wysokosc
      _dw_heigh:=_get_dw(_fbmp);
      fclose(_fbmp);
::    sprawdzamy czy szerokość pliku jest zgodna z szerokoscia ikony
::    sprawdzamy czy wysokość pliku dzieli sie bez reszty przez wysokość ikony
      {? _dw_width=_ico_w
      & _dw_heigh%*_ico_h=0
      || _result:=_dw_heigh/_ico_h
      ?}
   ?}
?};
_result


\ico_chk_fbmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: wyświetla wszystkie dostępne pliki z ikonami i pozwala na wybranie ikony
::   WE: ---
::   WY: STRING ikona
::  OLD: \ico_chk_fbmp/libfml.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:='';
_fname:=exec('ico_sel_bmplst','#icon');
{? _fname<>''
|| _wynik:=exec('ico_tab_sel','#icon',_fname)
?};
_wynik


\ico_tab_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: wyświetla ikony z pliku bmp i zwraca wybrana
::   WE: [_a] - nazwa pliku .bmp (domyślnie xwin16.png)
::       [_b] - plik opisu ikonek (domyślnie merit_opis.bmo)
::       [_c] - aktualny wybór (domyslnie '')
::   WY: STRING zapis wybranej ikony lub tekst pusty
::  OLD: \ico_tab_sel/libfml.fml
::----------------------------------------------------------------------------------------------------------------------
 _file:={? _>0 & type_of(_a)=2 || _a || 'xwin16.png' ?};
_fopis:={? _>1 & type_of(_b)=2 || _b || 'merit.bmo' ?};

_tab:=exec('ico_createtab','#icon');
_ftab:=exec('ico_createftab','#icon');
_ftab.FILENAME:=_file;
_ftab.FDESNAME:=_fopis;
_ftab.add();
exec('ico_add2tab','#icon',_tab,_ftab);
{? _tab.select()>0
|| _tab.SYM
|| ''
?}


\ico_sel_bmplst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: Wyświetla do wyboru bitmapy z ikonkami
::   WY: nazwa pliku bmp
::  OLD: \ico_sel_bmplst/libfml.fml
::----------------------------------------------------------------------------------------------------------------------
_icotypes:={? _>0 & type_of(_a)=type_of('') || -_a || '.png' ?};
_wynik:='';
_tab:=exec('ico_get_bmplst','#icon',,,_icotypes);
{? _tab.first()
|| _size:=_tab.size();
   _win:=_tab.mk_sel('Zestawy ikon'@,,,'#selecticonbmp',1,,{? _size>30 || 30 || _size ?});
   _tab.win_sel(_win);
   _tab.win_fld(_win,,'FILENAME',,,30);
   _tab.win_fld(_win,,'ILEIKON' ,,, 4);
   _tab.win_act(_win,,'Formuła','&Wybierz'@@,,'Wybór zestawu'@,"sel_exit()",,1,,,,'W');
   _tab.win_act(_win,,'Kolejność');
   _tab.win_act(_win,,'Rekord',,,,"{? cur_tab(1,1).GLOBAL='T' || 1 || ~~ ?}");
   {? _tab.select()
   || _wynik:=_tab.FILENAME
   ?}
?};
_wynik


\ico_selall_ask
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.30]
:: OPIS: Wyświetla pytanie - które ikony wyświetlić (png/bmp)
::  OLD: \ico_selall_ask/libfml.fml
::----------------------------------------------------------------------------------------------------------------------
_choice:=choice('Które pliki ikon brać pod uwagę?'@,'Wyświetlenie wszystkich ikon'@,'ASK',,,
   ,'1. *.bmp'
   ,'2. *.png'
   ,'3. *.ttf'
);
_icotype:='';
{? _choice=0 || _icotype:='.bmp'
|? _choice=1 || _icotype:='.png'
|? _choice=2 || exec('ico_selttf','#icon')
?};
{? _icotype<>''
|| exec('ico_selall','#icon',,1,1,_icotype)
?}


\ikona_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła "Przed redagowaniem" dla pola z ikoną.
::  OLD: \bnftt_ikona_be/portal_benefity.fml
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
Icon.before_edit()


\ikona_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "F3 - przed" dla pola z ikoną.
::  OLD: \bnftt_ikona_ae/portal_benefity.fml
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
Icon.f3()


\ikona_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła "Po redagowaniu" dla pola z ikoną.
::  OLD: \bnftt_ikona_ae/portal_benefity.fml
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
Icon.after_edit()


\decl_icon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR,TS [20.42]
:: OPIS: Deklaracja obiektu ICONCLASS do obsługi dodatkowych ikon z opisami
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ICONCLASS',@.CLASS)<0
|| obj_decl('ICONCLASS',
      obj_fld('prfx','absui-icon--'),
      obj_fld('img',''),
      obj_fld('stm',''),
      obj_fld('list',''),
      obj_fld('TAB',~~),
      obj_meth('__init',"
         .img:='%1.png'[.prfx-2];
         .stm:='@system';
         .list:='%1.dfg'[.prfx-2];
         .TAB:=tab_tmp(1,'NAME','STRING[64]','Nazwa ikony'@);
         {? fexists(.list,1)=1
::       Import pewnie byłby szybszy, ale jest zabroniony w transakcji.
         || _fh:=fopen(.list,'ur',1,,1,1);
            {? _fh.is_open()
            || {!
               |? (_name:=_fh.fread())<>'\n'
               |! .TAB.NAME:=_name;
                  .TAB.add()
               !}
            ?};
            obj_del(_fh)
         ?};
         _ws:=.TAB.mk_sel('Ikony'@,,,,,,,,'U');
         .TAB.win_fld(_ws,,'NAME',,,,,,'Ikona'@,,'Nazwa ikony'@);
         .TAB.win_act(_ws,,'Formuła','Wybierz'@@,,,\"sel_exit()\",,1,,,,'W');
         .TAB.win_sel(_ws);
         .TAB.win_fml(_ws,,'NAME',,'ICON_BEFORE',$(\"'\"+.stm+\"|'+(12-$cur_tab(1,1).NAME)\"));
         ~~
      "),
      obj_meth('before_edit',"
::======================================================================================================================
:: OPIS: do zastosowania w formule "przed redagowaniem" w polu z ikoną
::======================================================================================================================
         {? fld()=''
         || fld(.prfx)
         ?};
         1
      "),
      obj_meth('f3',"
::======================================================================================================================
:: OPIS: do zastosowania w formule "F3" w polu z ikoną
::======================================================================================================================
         {? fld()=''
         || .TAB.first()
         || .TAB.find_key(fld())
         ?};
         {? .TAB.select(,1,5)
         || .TAB.NAME
         ?}
      "),
      obj_meth('after_edit',"
::======================================================================================================================
:: OPIS: do zastosowania w formule "po redagowaniu" w polu z ikoną
::======================================================================================================================
         {? fld()=.prfx
         || fld('')
         ?};
         {? fld()=''
         || 1
         |? .TAB.find_key(fld())
         || fld(.TAB.NAME);
            1
         || __CHK.err_fld(cur_tab(1,1),cur_afld(),1);
            0
         ?}
      "),
      obj_meth('icon_before',"
::======================================================================================================================
:: OPIS: do zastosowania w formułach "przed ikona" w oknach wertowania i redagowania
::   WE: _a - symbol ikony
::======================================================================================================================
         {? _a<>'' & .TAB.find_key(_a,)
         || '%1|%2'[.stm,(12-.TAB.NAME)]
         || exec('pusta','#icon')
         ?}
      ",type_of(''))
   );
   ~~
?}


\ico_selttf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Wyświetla aplikacyjne i systemowe ikony TTF.
::   WE: [_a] - STRING - nazwa ikony, na której ma sie ustwić kursor
::       [_b] - STRING - 'S','A' - rodzaj ikon które wyświetlać, jeżeli nie podane to wszystkie
::       [_c] - INTEGER - 0/[1] - czy możliwa zmiana koloru ikony
::   WY: STRING nazwa ikony
::----------------------------------------------------------------------------------------------------------------------
_curico:='';
{? var_pres('_a')=type_of('')
|| _curico:=_a
?};
_type:='';
{? var_pres('_b')=type_of('')
|| _type:=_b
?};
_can_change_color:=1;
{? var_pres('_c')=type_of(0)
|| _can_change_color:=_c
?};

_sep:=exec('sep','#file',1);
{? _type='S'
|| _icon:=obj_new('S')
|? _type='A'
|| _icon:=obj_new('A')
|| _icon:=obj_new('S','A')
?};
{! _lp:=1 .. obj_len(_icon)
|! _icon[_lp]:=obj_new('type','base','ttf','var','pth','dir')
!};

_font_system:='Lumen-Icon-Font';
_font_app:=cfg_info('app_icon_font_name');

:: Ikony systemowe
{? var_pres('S',_icon)>=0
||
   _icon.S.type:='S';
   _icon.S.base:=_font_system;
   _icon.S.ttf:='%1.ttf' [_icon.S.base];
   _icon.S.var:='%1.variables' [_icon.S.base];
   _icon.S.pth:=0;
   _icon.S.dir:='%2%1%3%1' [_sep,exe_dir(1),'fonts']
?};

:: Ikony aplikacyjne
{? var_pres('A',_icon)>=0
|| _icon.A.type:='A';
   _icon.A.base:=_font_app;
   _icon.A.ttf:='%1.ttf' [_icon.A.base];
   _icon.A.var:='%1.variables' [_icon.A.base];
   _icon.A.pth:=1;
   _icon.A.dir:=''
?};

_ICON:=obj_new('TAB','code','color');
_ICON.TAB:=tab_tmp(2
   ,'TYPE','STRING[1]','Typ'@
   ,'NAME','STRING[60]','Nazwa'@
   ,'CODE','STRING[5]','Kod'@
   ,'COLOR','STRING[11]','Kolor'@
   ,'CODEN','STRING[80]','Nazwa'@
   ,'CODEC','STRING[80]','Kod'@
   ,'LEN','INTEGER','Długość nazwy'@
);
_ICON.code:="
   _prfx:={? .TAB.TYPE='S' || '@system' || '' ?};
   .TAB.CODEN:='%1|%2,%3'[_prfx,.TAB.NAME,.TAB.COLOR];
   .TAB.CODEC:='%1:%2,%3'[_prfx,.TAB.CODE,.TAB.COLOR]
";
_ICON.color:='';

_ret:='';
{! _lp:=1 .. obj_len(_icon)
|? _ret=''
|! {? _fn:={? _icon[_lp].pth || '' || _icon[_lp].dir ?}+_icon[_lp].ttf;
      ~fexists(_fn,_icon[_lp].pth)
   || _ret:='Brak dostępu do pliku [%1].'@[_fn]
   |? _fn:={? _icon[_lp].pth || '' || _icon[_lp].dir ?}+_icon[_lp].var;
      ~fexists(_fn,_icon[_lp].pth)
   || _ret:='Brak dostępu do pliku [%1].'@[_fn]
   || _fh:=fopen(_fn,'ur',_icon[_lp].pth,1,1,1);
      {? _fh.is_open()
      || {!
         |? (_linia:=_fh.fread())<>'\n'
         |! _p1:=_linia*'--';
            {? _p1
            || _n1:=(1+_p1)-_linia;
               _p2:=_n1*':';
               {? _p2
               || _ICON.TAB.blank();
                  _ICON.TAB.TYPE:=_icon[_lp].type;
                  _ICON.TAB.NAME:=(_p2-1)+_n1;
                  _ICON.TAB.CODE:=2-form(_p2-_n1)-2;
                  _ICON.TAB.LEN:=+_ICON.TAB.NAME;
                  _ICON.TAB.COLOR:='0:0:0';
                  _ICON.code();
                  _ICON.TAB.add()
               ?}
            ?}
         !};
         _fh.fclose()
      || _ret:='Próba otwarcia do odczytu pliki [%1] nie powiodła się.'@[_fn]
      ?};
      obj_del(_fh)
   ?}
!};
{? _ret<>''
|| return(_ret)
?};

_ws:=_ICON.TAB.mk_sel('Dostępne ikony (TTF)'@,,,'#ttf',,,,,'U');
_ICON.TAB.win_fld(_ws,,'TYPE',,,,,,,,'Typ ikon: A - aplikacyjne / S - systemowe'@);
_ICON.TAB.win_fld(_ws,,'NAME',,,40,,,,,'Nazwa ikony'@);
_ICON.TAB.win_fml(_ws,,'NAME',,'ICON_BEFORE',"cur_tab(1,1).CODEN");
_ICON.TAB.win_fld(_ws,,'CODE',,,8,,,,,'Kod ikony'@);
_ICON.TAB.win_fld(_ws,,'LEN',,,,,,,,'Długość nazwy'@);
_ICON.TAB.win_act(_ws,,'Formuła','&Wybierz'@@,,'Wybór beżącego zapisu ze słownika'@,$'sel_exit()',,1,,,,'W');
{? _can_change_color>0
|| _ICON.TAB.win_act(_ws,,'Formuła','Ustaw kolo&r'@@,,'Ustawienie koloru ikony'@
      ," _ICON:=params_get().ICON;
         {? _ICON.TAB.sel_size()
         || _ICON.TAB.COLOR:=_ICON.color;
            _ICON.code();
            _ICON.TAB.put()
         |? (_ret:=dlg_color(_ICON.TAB.COLOR))<>''
         || _ICON.TAB.COLOR:=_ret;
            _ICON.code();
            _ICON.TAB.put()
         ?}
      ",,
      ,1
      ," _ICON:=params_get().ICON;
         _ICON.color:='';
         {? (_ret:=dlg_color(_ICON.TAB.COLOR))<>''
         || _ICON.color:=_ret;
            1
         ?}
      "
      ,"params_get().ICON.color:=''"
      ,'R'
   )
?};
_ICON.TAB.win_act(_ws,,'Szukaj');
_ICON.TAB.win_act(_ws,,'Kolejność');
_ICON.TAB.win_sel(_ws);

_szer:=60;
_we:=_ICON.TAB.mk_edit('Ikona (TTF)'@,,'#ttf');
_ICON.TAB.win_esep(_we,'Dane podstawowe'@);
_ICON.TAB.win_efld(_we,,'TYPE',,,,,,,,'Źródło ikon'@,'radio-buttons',
   ,'Ikona systemowa [%1.ttf]'@[_font_system],"'S'"
   ,'Ikona aplikacyjna [%1.ttf]'@[_font_app],"'A'"
);
_ICON.TAB.win_efld(_we,,'NAME',,,_szer,,,,,'Nazwa czcionki'@);
_ICON.TAB.win_efld(_we,,'CODE',,,12,,,,,'Kod czcionki'@);
_ICON.TAB.win_efml(_we,,'CODE',,'ICON_BEFORE',"cur_tab(1,1).CODEC");
_ICON.TAB.win_efld(_we,,'COLOR',,,12,,,,,'Bieżący kolor'@);
_ICON.TAB.win_esep(_we,'Wykorzystanie ikony w aplikacji'@);
_ICON.TAB.win_efld(_we,,'CODEN',,,_szer,,,'Po nazwie'@,,'Wykorzystanie po nazwie'@);
_ICON.TAB.win_efld(_we,,'CODEC',,,_szer,,,'Po kodzie znaku',,'Wykorzystanie po kodzie znaku'@);
_ICON.TAB.win_edit(_we);

_ICON.TAB.fld_fml('COLOR','BEFORE_DISPLAY',"'%1'[fld()]");

params_set('ICON',_ICON);

_ndx2:=_ICON.TAB.ndx_tmp(,,'TYPE',,,'NAME',,);
_view:=null;
{? _curico<>''
||
   {? _curico*'@system|'>0
   || _type:='S';
      _curico:=gsub(_curico,'@system|','')
   || _type:='A';
      _curico:=gsub(_curico,'|','')
   ?};

   _ICON.TAB.cntx_psh();
   _ICON.TAB.index(_ndx2);
   _ICON.TAB.prefix(_type,_curico);
   {? _ICON.TAB.first()
   || _view:=_ICON.TAB.ref()
   ?};
   _ICON.TAB.cntx_pop()
?};
_ICON.TAB.prefix();
{? _view<>null()
|| _ICON.TAB.seek(_view)
|| _ICON.TAB.first()
?};
{? _ICON.TAB.select(,_curico<>'',10)
|| {? _ICON.TAB.CODEN*',0:0:0'>0
   || _ret:=gsub(_ICON.TAB.CODEN,',0:0:0','')
   || _ret:=_ICON.TAB.CODEN
   ?}
?};
_ICON.TAB.ndx_drop(_ndx2);
_ret

:Sign Version 2.0 jowisz:1048 2023/06/23 14:13:35 c16945b848daaa1a821e1317c94f6ea9a3a45deff496d2848bbe83b02a7263136547b79b4837a088f80b3eaa5d45a75d8f2304799dd356bf56a4c0e04097932577675061cbc3734a699a820fc1b688ff731df6139adcb498358bbc77dc1aa4b50b80204c7d573a0a7a557499e3fd6e99eee3824743358ba1ec1e2a0d08d246d3
