:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #firma.fml
:: Utworzony: 2015.01.22
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Funkcje odpowiedzialne za obsługę firm.
::======================================================================================================================


\firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.10]
:: OPIS: Ustalenie firmy, jeśli zapis o podanym symbolu nie został odnaleziony w tabeli FIRMA, to tworzony jest nowy.
::   WE: _a - symbol firmy
:: UWAGA! Poprawność argumentu wywołania nie jest weryfikowana.
::  OLD: \firma/system.fml
::----------------------------------------------------------------------------------------------------------------------
__Firma:=_a;
REF.WFIRM:=0;
FIRMA.clear;
FIRMA.index('SYMBOL');
{? FIRMA.find_key(_a,_a)
|| REF.S_FIRMA:=REF.FIRMA:=FIRMA.ref()
|| FIRMA.index('OPIS');
   _n:=0;
   {!
   |? FIRMA.find_key('Firma '+_a+' '+$_n,)
   |! _n+=1
   !};

   FIRMA.index('SYMBOL');
   FIRMA.blank;
   FIRMA.SYMBOL:=__Firma;
   FIRMA.OPIS:='Firma '+_a+{? _n || ' '+$_n || '' ?};
   {? FIRMA.SYMBOL='000'
   || FIRMA.TYP:='C'
   ?};
   FIRMA.EWID:={? FIRMA.TYP='S' | FIRMA.TYP='W' || 'T' || 'N' ?};
   FIRMA.APP_IDEN:=app_info('app_ident');
   {? FIRMA.add(1)
   || REF.S_FIRMA:=REF.FIRMA:=FIRMA.ref();
::    dodaje zapis dla potrzeb szybkich transferów
      exec('addFVerUpgrade','#upgrade',FIRMA.ref())
   ?}
?};
{? REF.FIRMA<>null
|| REF.INFO:=REF.FIRMA().SYMBOL+'INFO';
   REF.INFOROR:=REF.FIRMA().SYMBOL+'ROR';
   RACHBANK.FIRMA:={? exec('get','#parametr',63)='T' || REF.FIRMA || null ?};
   ~~
?};
FIRMA.index('EWID');
FIRMA.prefix();
_Fsize:=FIRMA.size();
FIRMA.index('SYMBOL2');
FIRMA.prefix();
{? FIRMA.find_key('C')
|| REF.GRUPA:=FIRMA.ref
|| REF.GRUPA:=null
?};
{? REF.WFIRM | _Fsize>1
|| {? ~REF.WFIRM || REF.WFIRM:=1 ?}
?};

REF.FIRMA


\firma_test
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.10]
:: OPIS: Sprawdzenie, czy firma jest poprawnie ustalona.
::   WY: wskazanie na rekord w tabeli FIRMA
::  OLD: \firma_test/system.fml
::----------------------------------------------------------------------------------------------------------------------
FIRMA.cntx_psh();

_symbol:=exec('firma_symbol','#firma');

{? _symbol='000'
||
:  pozostaw bez zmian
   FIRMA.cntx_pop();
   return(REF.FIRMA)

|? REF.FIRMA=null() | REF.FIRMA().SYMBOL<>_symbol
:  czy ustawiony jest poprawny kontekst pracy?
||
:  przeprowadź próbę ustalenia poprawnego kontekstu i ponowną weryfikację
   {? exec('firma','#firma',_symbol)=null() | REF.FIRMA().SYMBOL<>_symbol
   ||
:     to nie powinno mieć miejsca - kontekst firmy nadal błędny pomimo próby jego odtworzenia
      {? FUN.ask('Wystąpił błąd podczas ustalania kontekstu firmy.\nCzy zakończyć działanie programu?'@)
      || break
      ?}
   ||
:     to też nie powinno mieć miejsca - kontekst firmy powinien być cały czas poprawny
      FUN.info('Ustalono kontekst pracy dla firmy %1.'@[REF.FIRMA().SYMBOL])
   ?}
?};

FIRMA.cntx_pop();

REF.FIRMA


\firma_symbol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.10]
:: OPIS: Ustala symbol firmy na podstawie app_info lub symbol '001' gdy się nie uda
::   WY: symbol firmy
::  OLD: \firma_symbol/system.fml
::----------------------------------------------------------------------------------------------------------------------
_ap:=AppList.my.tab;
_ap.index(AppList.my.ndx_app);
_ap.prefix(app_info('app_ident'),);
{? _ap.first()
|| _result:={? +_ap.APP_PAR1<>3 || '001' || _ap.APP_PAR1 ?}
|| _result:='001'
?};
_result


\firmy_user_list
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: Ustala listę firm do których są uprawnienia dla bieżącego użytkownika
::----------------------------------------------------------------------------------------------------------------------
{? sec_superuser()>0
||
   _app_lst:=sql('
      select
         FIRMA.SYMBOL,
         FIRMA.OPIS,
         FIRMA.REFERENCE as REF,
         FIRMA.GRP_IDEN,
         FIRMA.APP_IDEN
      from FIRMA
      where (FIRMA.TYP=\'S\' or SYMBOL=\'000\') and FIRMA.A<>\'N\' and FIRMA.Z=\'N\'
      order by SYMBOL'
   )
||
   _app_lst:=sql('
      select distinct
         FIRMA.SYMBOL,
         FIRMA.OPIS,
         FIRMA.REFERENCE as REF,
         FIRMA.GRP_IDEN,
         FIRMA.APP_IDEN
      from B_USRROL join FIRMA join USERS
      where
         USERS.AKT=\'T\' and (USERS.JTERM=\'T\' or USERS.CAS=\'T\') and USERS.KOD=\':_a\'
         and (FIRMA.TYP=\'S\' or FIRMA.SYMBOL=\'000\') and FIRMA.A<>\'N\' and FIRMA.Z=\'N\'
         order by APP_IDEN, SYMBOL',
      exec('operatorKod','#users')
   )
?};
{? _app_lst.first() & do_state()=0
||
:: Putować firmę można tylko poza transakcją, żeby nie blokować całego systemu
   {!
   |? _cluster:=exec('firma_reload_params','#firma',_app_lst.SYMBOL,_app_lst.APP_IDEN);
      {? _cluster.found
      ||
         _app_lst.GRP_IDEN:=_cluster.grp_iden;
         _app_lst.APP_IDEN:=_cluster.app_iden;
         _app_lst.put();
         do();
         FIRMA.cntx_psh();
         FIRMA.index('SYMBOL');
         FIRMA.prefix(_app_lst.SYMBOL,);
         _dash:='---';
         {? FIRMA.first()
         || {? (_cluster.app_iden<>FIRMA.APP_IDEN) | (_dash<>FIRMA.GRP_IDEN)
            || FIRMA.APP_IDEN:=_cluster.app_iden;
               FIRMA.GRP_IDEN:='---';
               FIRMA.put(1)
            ?}
         ?};
         FIRMA.cntx_pop();
         end()
      ?};
      obj_del(_cluster);
      _app_lst.next()
   !}
?};
_ind:=_app_lst.ndx_tmp(,,'APP_IDEN',,,'SYMBOL',,);
_app_lst.index(_ind);
_app_lst


\firmy_user_www
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Ustala listę firm do których są uprawnienia dla bieżącego użytkownika - webterm
::----------------------------------------------------------------------------------------------------------------------
_app_lst:=sql('
   select distinct
      FIRMA.SYMBOL,
      FIRMA.OPIS,
      FIRMA.REFERENCE as REF,
      FIRMA.GRP_IDEN,
      FIRMA.APP_IDEN
   from B_USRROL join FIRMA join USERS
   where
      USERS.AKT=\'T\' and USERS.PORTAL=\'T\' and USERS.KOD=\':_a\'
      and (FIRMA.TYP=\'S\' or FIRMA.SYMBOL=\'000\') and FIRMA.A<>\'N\' and FIRMA.Z=\'N\'
      order by APP_IDEN, SYMBOL',
   exec('operatorKod','#users')
);
{? _app_lst.first()
|| {!
   |? _cluster:=exec('firma_reload_params','#firma',_app_lst.SYMBOL,_app_lst.APP_IDEN);
      {? _cluster.found
      || _app_lst.GRP_IDEN:=_cluster.grp_iden;
         _app_lst.APP_IDEN:=_cluster.app_iden;
         _app_lst.put()
      ?};
      obj_del(_cluster);
      _app_lst.next()
   !}
?};
_app_lst


\firmy_odtw_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: Odświeża pole app_ident w tabeli firm
::       bazuje na parametrze app_par1 (cluster.cfg) w którym powinien być zawarty kod firmy
::----------------------------------------------------------------------------------------------------------------------
{? do_state()=0
||
:: Putować firmę można tylko poza transakcją, żeby nie blokować całego systemu
   _cluster:=AppList.all.tab;
   _cluster.index(AppList.all.ndx_par1_app_pth);
   FIRMA.cntx_psh();
   FIRMA.index('SYMBOL');
   FIRMA.prefix();
   {? FIRMA.first()
   || {!
      |? {? FIRMA.TYP='S' | FIRMA.SYMBOL='000'
         || _cluster.prefix(FIRMA.SYMBOL,app_info('app_ident'),);
            {? _cluster.first()
            || FIRMA.APP_IDEN:=_cluster.APP_IDEN;
               FIRMA.put()
            ?}
         ?};
         FIRMA.next()
      !}
   ?};
   FIRMA.cntx_pop()
?};
~~


\firmy_ustaw_url
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: Wyświetla okno firm oraz umożliwia:
::       - ustawienie adresu portalu firmy
::       - modyfikację opisu
::       - aktywację i dezaktywację firmy
::----------------------------------------------------------------------------------------------------------------------
FIRMA.cntx_psh();
FIRMA.win_sel('URL');
FIRMA.win_edit('URL');
FIRMA.f_set('SYMBOL',,'"FIRMA"."TYP"=\'C\' or "FIRMA"."TYP"=\'S\'');
{? exec('interm','#system')
|| _hid_act:='DWC'
|| _hid_act:=''
?};
{? exec('is_act','#b__box','ZWS_PAR_FIRM')=0
|| _hid_act+='DG'
?};
FIRMPAR.index('KOD');
FIRMA.select(,,,_hid_act);
FIRMA.f_clear();
FIRMA.cntx_pop();
''


\firma__url
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: Zwraca URL webterm dla Firmy na podstawie parametrów
::   WE: _a - identyfikator aplikacji APP_IDEN
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
FIRMA.cntx_psh();
FIRMA.index('GRUP');
:: dodać index i zastosować prefix po porawce spis
FIRMA.prefix();
{? FIRMA.first
||
   {!
   |?
      {? FIRMA.APP_IDEN=_a
      ||
         _wyn:=FIRMA.URL
      ?};
      FIRMA.next & _wyn=''
   !}
?};
FIRMA.cntx_pop();
_wyn


\firma_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: Zwraca ref dla Firmy na podstawie parametrów
::   WE: _a - identyfikator aplikacji APP_IDEN
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null();
FIRMA.cntx_psh();
FIRMA.index('GRUP');
:: dodać index i zastosować prefix po porawce spis
FIRMA.prefix();
{? FIRMA.first
||
   {!
   |?
      {? FIRMA.APP_IDEN=_a
      ||
         _wyn:=FIRMA.ref()
      ?};
      FIRMA.next & _wyn=null
   !}
?};
FIRMA.cntx_pop();
_wyn


\be_firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [12.10]
:: OPIS: Przed redakcją REF.FIRMA
::  OLD: \be_firma/skid_kns.fml
::----------------------------------------------------------------------------------------------------------------------
REF.S_FIRMA=REF.GRUPA


\from_sym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca firmę na podstawie jej symbolu
::   WE: _a - symbol
::----------------------------------------------------------------------------------------------------------------------
FIRMA.cntx_psh();
FIRMA.index('SYMBOL'); FIRMA.prefix(_a,);
_ref:={? FIRMA.first() || FIRMA.ref() || null ?};
FIRMA.cntx_pop();
_ref


\firma_dodaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Akcja Dodaj w oknie z firmami
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='ZWS_PAR_FIRM';
_params.AKCJA:='Dołącz';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID);
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\prepare_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Pierwszy etap zakładania nowej firmy - przygotowanie danych
::   WE: _a - [STRING] xml z konfiguracją
::   WY: _xml
::----------------------------------------------------------------------------------------------------------------------
_xml:=_a;
_xml:=exec('firm_res_refr','#firma',_xml);
FIRMA.cntx_psh();
_params:=exec('xml2param','#firma',_xml);
_res:=exec('get_elem','#firma',_xml,'WYNIK');
{? _res='OK'
|| _res:=''
|| _res+='\n'
?};
{? _params.first
|| FIRMA.f_clear();
   FIRMA.index('SYMBOL');
   FIRMA.find_key(_params.SYMBOL,);
   {? ~(_res*'Błąd')
   || _current:='[W trakcie] Dodanie i zatrzymanie kolejek nowej firmy.';
      exec('save_res','#firma',,_params,_res+'\n'+_current);
      _res+=exec('queue_add_stop','#firma',FIRMA.ref);
      _xml:=exec('save_res','#firma',,_params,_res)
   ?};
   {? ~(_res*'Błąd')
   || _current:='[W trakcie] Tworzenie struktury katalogów i plików.';
      exec('save_res','#firma',,_params,_res+'\n'+_current);
      _res+=exec('struktura_katalogow_plikow','#firma',_params);
      _xml:=exec('save_res','#firma',,_params,_res)
   ?};
   {? ~(_res*'Błąd')
   || {? _params.DATA=0
      || _current:='[W trakcie] Eksport danych z firmy wzorcowej.';
         exec('save_res','#firma',,_params,_res+'\n'+_current);
         _exp:=exec('export_excel','#firma',_params.PATTERN,_params.SYMBOL);
         {? _exp=1
         || _res+='OK. Wyeksportowano dane z firmy wzorcowej.\n'
         || _res+='Błąd. Błąd przy eksporcie danych z firmy wzorcowej.\n'
         ?}
      |? _params.ROLE_PAT=0
      || _current:='[W trakcie] Eksport ról i uprawnień z firmy wzorcowej.';
         exec('save_res','#firma',,_params,_res+'\n'+_current);
         _exp:=exec('export_excel','#firma',_params.PATTERN,_params.SYMBOL,'users.xlsx');
         {? _exp=1
         || _res+='OK. Wyeksportowano role i uprawnienia z firmy wzorcowej.\n'
         || _res+='Błąd. Błąd przy eksporcie ról i uprawnień z firmy wzorcowej.\n'
         ?}
      ?};
      _xml:=exec('save_res','#firma',,_params,_res)
   ?};

   FIRMPAR.index('KOD');
   FIRMPAR.prefix(_params.SYMBOL,);
   {? FIRMPAR.first()
   || FIRMPAR.prefix();
      {? _res*'Błąd'
      || FIRMPAR.KOD:=_params.SYMBOL+'_error'
      || FIRMPAR.KOD:=_params.SYMBOL+'_to_do'
      ?};
      FIRMPAR.put
   ?}
?};
FIRMA.cntx_pop();
_xml


\firma_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PS] [17.00]
:: OPIS: Akcja Popraw w okienku z firmami
::----------------------------------------------------------------------------------------------------------------------
_url_prev:=FIRMA.URL;
{? FIRMA.edit("chk_rec('OPIS','APP_IDEN')")
|| {? FIRMA.put()
   || {? exec('lic','#b_domain','POR') & FIRMA.URL<>_url_prev
      || exec('setRCPLink','portal_engine',FIRMA.ref());
         exec('setExtraLink','portal_engine',FIRMA.ref())
      ?}
   ?}
?}


\ref_firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.10]
:: OPIS: Wskazanie na firme
::  OLD: \ref_firma/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
REF.FIRMA


\firma_rkprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Rekord przed w tabeli FIRMA
::   WE: _a - czy rekord, dla którego wywołana jest formuła, jest ostatnim odrysowywanym rekordem
::----------------------------------------------------------------------------------------------------------------------
_grayed:='';
FIRMPAR.prefix(FIRMA.SYMBOL);
{? ~(FIRMPAR.first & FIRMPAR.size=1)
|| _grayed+='G'
?};
{? _a
|| {? FIRMA.A='N' || _grayed+='T' || _grayed+='A' ?}
?};
FIRMA.actions_grayed(cur_win(1,1),_grayed);
~~


\firma_aktywuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Aktywacja firmy
::----------------------------------------------------------------------------------------------------------------------
{? FIRMA.A='N'
|| _cluster:=AppList.all.tab;
   _cluster.index(AppList.all.ndx_par1_app_pth);
   _cluster.prefix(FIRMA.SYMBOL,FIRMA.APP_IDEN,);
   {? _cluster.first()
   || _choice:=FUN.ask('Czy aktywować wskazaną firmę?'@)
   || _choice:=FUN.ask('Czy aktywować wskazaną firmę?'@+'\n\n'+
                       'Uwaga. Firma nie jest zdefiniowana w aktualnym pliku %1.'@['cluster.cfg'])
   ?};
   {? _choice
   || FIRMA.A:='T';
      _addver:=0;
      {? FIRMA.Z='n' || _addver:=1; FIRMA.Z:='N' ?};
      {? FIRMA.put()
      || {? _addver || exec('addFVerUpgrade','#upgrade',FIRMA.ref()) ?};
         exec('actdeactReal','#upgrade',FIRMA.ref())
      ?}
   ?}
?};
~~


\firma_deaktywuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Dezaktywacja firmy
::----------------------------------------------------------------------------------------------------------------------
{? FIRMA.A='T'
|| {? FIRMA.ref()=REF.FIRMA
   || FUN.info('Nie można dezaktywować bieżącej firmy.'@)
   || _cluster:=AppList.all.tab;
      _cluster.index(AppList.all.ndx_par1_app_pth);
      _cluster.prefix(FIRMA.SYMBOL,FIRMA.APP_IDEN,);
      {? _cluster.first()
      || _choice:=FUN.ask('Czy dezaktywować wskazaną firmę?'@+'\n\n'+
                          'Uwaga. Firma jest zdefiniowana w aktualnym pliku %1.'@['cluster.cfg'])
      || _choice:=FUN.ask('Czy dezaktywować wskazaną firmę?'@)
      ?};
      {? _choice
      || FIRMA.A:='N';
         {? FIRMA.put() || exec('actdeactReal','#upgrade',FIRMA.ref()) ?}
      ?}
   ?}
?};
~~


\firma_spr_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.22]
:: OPIS: Sprawdzenie czy istnieje identyfikator grupy wpisany w firma w cluster.cfg
::   WY: 1 - został odnaleziony idetyfikator grupy, 0 - nie odnaleziono
::----------------------------------------------------------------------------------------------------------------------
_result:=0;

FIRMA.index('GRUP');
_cluster:=AppList.all.tab;
_cluster.index(AppList.all.ndx_par1_app_pth);
_cluster.prefix(REF.FIRMA().SYMBOL,app_info('app_ident'),app_info('pth_name'));
{? _cluster.first()
||
   {!
   |?
      {? FIRMA.first() & _cluster.APP_IDEN=FIRMA.APP_IDEN & REF.FIRMA().SYMBOL=FIRMA.SYMBOL
      || _result:=1
      ?};
      _cluster.next() & _result=0
   !}
?};
_result


\firma_reload_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [19.02]
:: OPIS: Sprawdzenie identyfikatora grupy wpisany w firma w cluster.cfg
::   WE: _a - symbol firmy czyli FIRMA.SYMBOL
::       _b - symbol aplikacji w cluster.cfg czyli FIRMA.APP_IDEN
::   WY: obiekt ze statusem wyszukiwania oraz identyfikatorem aplikacji i grupy w cluster.cfg
::----------------------------------------------------------------------------------------------------------------------
_symbol:=_a;
_app_iden:=_b;
_params:=obj_new('found','app_iden','grp_iden');
_params.found:=0;

_cluster:=AppList.all.tab;

:: najpierw wyszukiwanie w bieżącej grupie...
_cluster.index(AppList.all.ndx_par1_grp);
_cluster.prefix();
{? _cluster.find_key(_symbol,app_info('cluster_group'),)
|| _params.found:=1;
   _params.app_iden:=_cluster.APP_IDEN;
   _params.grp_iden:=_cluster.GRP_IDEN

:: ...a jeśli nie ma w niej firmy to w całym cluster.cfg - najpierw z dokładnością do zapamiętanego APP_IDEN
|| _cluster.index(AppList.all.ndx_par1_app_pth);
   _cluster.prefix();
   {? _cluster.find_key(_symbol,_app_iden,)
   || _params.found:=1;
      _params.app_iden:=_cluster.APP_IDEN;
      _params.grp_iden:=_cluster.GRP_IDEN

:: ...a dopiero na koniec z dokładnością tylko do nazwy aplikacji (z reguły naprawa po zmianie w strukturze cluster.cfg)
   || {? _cluster.find_key(_symbol,)
      || _params.found:=1;
         _params.app_iden:=_cluster.APP_IDEN;
         _params.grp_iden:=_cluster.GRP_IDEN
      ?}
   ?}
?};
_params


\firma_obrazy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [19.22]
:: OPIS: Redagowanie obrazów firmy.
::----------------------------------------------------------------------------------------------------------------------
IMG_BLOB.cntx_psh();
IMG_BLOB.win_sel('GRP_F2');
IMG_BLOB.select();
IMG_BLOB.cntx_pop();
~~


\firma_outlook
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [20.14]
:: OPIS: Dodatek do aplikacji MS Outlook dla firmy.
::----------------------------------------------------------------------------------------------------------------------
MSO.cntx_psh();
MSO.win_sel('GRP_WER');
MSO.win_edit('RED');
MSO.select();
MSO.cntx_pop();
~~


\mso_pobierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [20.14]
:: OPIS: Obsługa akcji pobierz - dodatek do aplikacji MS Outlook dla firmy.
::----------------------------------------------------------------------------------------------------------------------
exec('bl_save','#blob',MSO,'MSO_P')


\mso_wer_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [20.14]
:: OPIS: Formuła na okno przed dla okienka WER tabeli MSO.
::----------------------------------------------------------------------------------------------------------------------
{? _a='FIRMA'
|| MSO.fld_fml('TYP','BLANK',"'N'");
   MSO.fld_fml('FIRMA','BLANK',"FIRMA.ref()");
   MSO.index('FIRMA');
   MSO.prefix('N',FIRMA.ref())
|| MSO.fld_fml('TYP','BLANK',"'T'");
   MSO.index('FIRMA');
   MSO.prefix('T')
?};
~~


\mso_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [20.14]
:: OPIS: Formuła na edycję rekodru tabeli MSO (blank/dołącz - po/popraw - po)
::----------------------------------------------------------------------------------------------------------------------
{? ~_a
|| MSO.blank();
   1
|| _file:=MSO.bl_info('MSO_P','NAME');
   _wersja:=(14-_file)-4;
   MSO.MSO_W:=_wersja;
   MSO.put();
   return(0)
?}


\mso_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [20.14]
:: OPIS: Formuła na "Rekord - po" w okienku WER tabeli MSO.
::----------------------------------------------------------------------------------------------------------------------
{? _chk:=chk_rec('MSO_P')<>''
|| 0
|| 1
?}


\firma_sym_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Wartość początkowa pola SYMBOL tabeli FIRMA
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FIRMA.cntx_psh();
FIRMA.index('SYMBOL');
FIRMA.prefix();
{? FIRMA.last
|| _res:=form(#FIRMA.SYMBOL+1,-3)
|| _res:='001'
?};
FIRMA.cntx_pop();
_res


\firma_opis_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Wartość początkowa pola OPIS tabeli FIRMA
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Firma '+FIRMA.SYMBOL


\firma_id_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Wartość początkowa pola APP_IDEN tabeli FIRMA
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'merit'+FIRMA.SYMBOL


\struktura_katalogow_plikow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: tworzy strukturę katalogów i plików dla nowej firmy
::   WE: _a - tabela z parametrami
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=_a;
_patt_firm:=_a.PATTERN;
_pth_cluster:=_a.CLUSTER;
_res:='';
::   pth\f00x.pth\
_sep:=exec('sep','#file',2);
_spli:=spli_str(pth_dir(),_sep);
_pth_cat:=pth_dir()-(+_spli[obj_len(_spli)]+1);
{? fmkdir(_pth_cat,'f'+FIRMA.SYMBOL+'.pth')=''
|| _res+='Błąd przy zakładaniu katalogu pth\f00x.pth dla nowej firmy.\n'
?};
_rewrite:=" _pth_prev:=_a;
            _pth_act:=_b;
            _patt_firm:=_c;
            _act_sym:=_d;
            _conv:=iconv('UTF-8');
            _file_in:=fopen(_pth_prev,'r',0);
            _file_out:=fopen(_pth_act,'Uw',0);
            {? _file_in & _file_out
            || {!
               |? {? sys_name(2)='U_LINUX'
                  || _wiersz:=fread(_file_in)
                  || (_wiersz:=_conv.from(fread(_file_in)))
                  ?};
                  _wiersz<>'\n'
               |!
                  fwrite(_file_out,gsub(_wiersz,_patt_firm,_act_sym))
               !};
               fclose(_file_in);
               fclose(_file_out);
               _wynik:=1
            || _wynik:=0
            ?};
            _wynik";
_pth_pth:=_pth_cat+_sep+'f'+_patt_firm+'.pth'+_sep;
{? fexists(_pth_pth+'merit.pth')=1
|| _rewrite(_pth_pth+'merit.pth',_pth_cat+_sep+'f'+FIRMA.SYMBOL+'.pth'+_sep+'merit.pth',_patt_firm,FIRMA.SYMBOL)
?};
{? fexists(_pth_pth+'meritfa.pti')=1
|| _rewrite(_pth_pth+'meritfa.pti',_pth_cat+_sep+'f'+FIRMA.SYMBOL+'.pth'+_sep+'meritfa.pti',_patt_firm,FIRMA.SYMBOL)
?};
{? fexists(_pth_pth+'meritfb.pti')=1
|| _rewrite(_pth_pth+'meritfb.pti',_pth_cat+_sep+'f'+FIRMA.SYMBOL+'.pth'+_sep+'meritfb.pti',_patt_firm,FIRMA.SYMBOL)
?};
::    systems.itg
_pth_itg:=_pth_cat+_sep+'all'+_sep+'systems.itg';
{? _itg:=fopen(_pth_itg,'ur',0)
|| _itg_content:='';
   {! |? (_itg_line:=fread(_itg)) <> '\n'
   |!
      {? _itg_line<>''
      || _itg_content+=_itg_line+'\r\n'
      ?}
   !};
   fclose(_itg);
   {? fcopy(_pth_itg,_pth_itg+'.new',0,0,1)=0
   || _res+='Błąd tworzeniu pliku systems.itg.new.\n'
   ?}
||
   _res+='Błąd przy otwarciu pliku systems.itg.\n'
?};
{? _itg:=fopen(_pth_cat+_sep+'all'+_sep+'systems.itg.new','Uw!',0)
||
   _itg_content+='../f'+FIRMA.SYMBOL+'.pth/merit.pth';
   fwrite(_itg,_itg_content);
   fclose(_itg)
|| _res+='Błąd przy edycji pliku systems.itg.\n'
?};
::    work\f00x
_res_work:=1;
_fdir_work:=fdir(_pth_cat-3+'work'+_sep+'f'+_patt_firm);
{? type_of(_fdir_work)=118 & _fdir_work.first
|| {? fmkdir(_pth_cat-3+'work','f'+FIRMA.SYMBOL)=''
   || _res_work:=0
   ?};
   {! |?
      {? _fdir_work.TYPE='d'
      || {? fmkdir(_pth_cat-3+'work'+_sep+'f'+FIRMA.SYMBOL,_fdir_work.NAME)=''
         || _res_work:=0
         ?}
      ?};
      _fdir_work.next
   !}
?};
{? _res_work=0
|| _res+='Błąd przy zakładaniu katalogu work\f00x dla nowej firmy.\n'
?};
_img:=fdir(_pth_cat-3+'work'+_sep+'f'+_patt_firm+_sep+'img');
{?  type_of(_img)=118 & _img.first()
|| {! |?
      fcopy(_img.DIR+_sep+_img.NAME,_pth_cat-3+'work'+_sep+'f'+FIRMA.SYMBOL+_sep+'img'+_sep+_img.NAME,0,0,1);
      _img.next
   !}
?};
::   dane\f00x.mdb
{? fmkdir(_pth_cat-3+'dane','f'+FIRMA.SYMBOL+'.mdb')=''
|| _res+='Błąd przy zakładaniu katalogu dane\f00x.mdb dla nowej firmy.\n'
?};
::   modified\sql\f00x
{? fmkdir(_pth_cat-3+'modified'+_sep+'sql','f'+FIRMA.SYMBOL)=''
|| _res+='Błąd przy zakładaniu katalogu modified\sql\f00x dla nowej firmy.\n'
?};
:: cluster.cfg
{? _res=''
|| _res:='OK. Dla nowej firmy założono nowe foldery i pliki w katalogach: dane, modified, pth, work.\n';
   _res+=exec('cluster_conv','#firma',_pth_cluster);
   {? ~(_res*'Błąd')
   || {? fcopy(_pth_itg+'.new',_pth_itg,0,0,1)=0
      || _res+='Błąd zapisu nowego pliku systems.itg.\n'
      ?};
      ferase(_pth_itg+'.new')
   ?}
?};
_res


\param_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: tabela z parametrami
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
tab_tmp(1,
                     'BI_PROC','STRING[48]','BI_PROC.uidref',
                     'SYMBOL','STRING[4]','Symbol',
                     'WYNIK','SYS_MEMO','Wynik',
                     'EMAIL_RE','STRING[100]','E-mail gdzie wysłać wynik',
                     'BACKUP','STRING[1]','Kopia danych przed dodaniem firmy',
                     'PATTERN','STRING[4]','Kod firmy wzorcowej',
                     'ROLE_PAT','INTEGER','Skąd importować role i uprawnienia'@,
                     'DATA','INTEGER','Skąd importować dane'@,
                     'DATA_PTH','STRING[255]','Ścieżka do danych'@,
                     'DATA_FIR','STRING[4]','Symbol firmy z której wyeksportowano dane'@,
                     'CLUSTER','STRING[255]','Ścieżka do cluster.cfg',
                     'MACROCFG','STRING[255]','Ścieżka do macro.cfg',
                     'OPIS','STRING[80]','Opis',
                     'URL','STRING[255]','Adres WebTerm',
                     'APP_IDEN','STRING[30]','Identyfikator aplikacji',
                     'URL_MWA','STRING[255]','Adres MacroWebApi',
                     'EMAILDOM','STRING[40]','Domena poczty elektronicznej',
                        'ROK','INTEGER','Rok'@,
                     'MSTART','INTEGER','Miesiąc początkowy'@,
                     'LOKR','INTEGER','Liczba okresów'@,
                     'FKS','INTEGER','Okresy finansowe'@,
                     'CTR','INTEGER','Okresy dla controllingu'@,
                     'OBG','INTEGER','Okresy dla obiegów'@,
                     'FST','INTEGER','Okresy dla środków trwałych',
                     'KAS','INTEGER','Okresy dla kasy'@,
                     'LMG','INTEGER','Okresy dla magazynów'@,
                     'LSP','INTEGER','Okresy dla sprzedaży'@,
                     'LZK','INTEGER','Okresy dla zakupów'@,
                     'LUM','INTEGER','Okresy dla umów',
                     'PLAN_GR','INTEGER','Grupowy plan kont',
                       'NAZWA','STRING[150]','Nazwa pełna'@,
                     'SKROT','STRING[31]','Nazwa skrócona'@,
                     'WIELKOSC','STRING[20]','Wielkość'@,
                     'WOJEWODZ','STRING[20]','Województwo'@,
                     'POWIAT','STRING[30]','Powiat'@,
                     'GMINA','STRING[30]','Gmina'@,
                     'GMGUS','STRING[7]','Kod GUS'@,
                     'MIASTO','STRING[30]','Miasto'@,
                     'KMIASTO','STRING[30]','Miasto koresp.'@,
                     'KOD','STRING[6]','Kod'@,
                     'KKOD','STRING[6]','Kod koresp.'@,
                     'POCZTA','STRING[30]','Urząd pocztowy'@,
                     'KPOCZTA','STRING[30]','Urząd pocztowy koresp.'@,
                     'ULICA','STRING[150]','Ulica'@,
                     'KULICA','STRING[150]','Ulica koresp.'@,
                     'DOM','STRING[8]','Dom'@,
                     'KDOM','STRING[8]','Dom koresp.'@,
                     'LOKAL','STRING[8]','Lokal'@,
                     'KLOKAL','STRING[8]','Lokal koresp.'@,
                     'TEL','STRING[30]','Telefon'@,
                     'KTEL','STRING[20]','Telefon koresp.'@,
                     'FAX','STRING[30]','Fax'@,
                     'KFAX','STRING[20]','Fax koresp.'@,
                     'EMAIL','STRING[100]','e-Mail'@,
                     'KEMAIL','STRING[100]','e-mail koresp.'@,
                     'REG','STRING[20]','REGON'@,
                        'NIP','STRING[20]','NIP'@,
                     'NKP','STRING[20]','NKP'@,
                     'NUSP','STRING[10]','NUSP'@,
                     'DREJ','DATE','Data rejestracji'@,
                     'OREJ','STRING[80]','Organ rejestrujący'@,
                     'NREJ','STRING[20]','Nr w rejestrze'@,
                     'REJ','STRING[30]','Nazwa rejestru'@,
                     'DRD','DATE','Data rozp. działaln.'@,
                     'ODDZ_ZUS','INTEGER','Oddział ZUS'@,
                     'US','INTEGER','Urząd skarbowy'@,
                     'PKD','STRING[20]','PKD'@,
                     'PFRON','STRING[20]','PFRON'@,
                     'FDZIAL','STRING[100]','Forma prawna działalności'@,
                     'FWLASN','STRING[100]','Forma własności'@,
                        'KRAJ','INTEGER','Kraj'@,
                     'PODNAZ','STRING[30]','Nazwisko'@,
                     'PODIME','STRING[20]','Imię'@,
                     'PODURDAT','DATE','Data urodzenia'@,
                     'PODFIZ','INTEGER','Czy płatnik osoba fizyczna'@,
                     'GLN','STRING[13]','GLN'@,
                     'BDO','STRING[20]','Nr rejestrowy BDO'@,
                     'DKON','DATE','Data zak. dział.'@,
                     'US_JPK','INTEGER','Urząd skarbowy do JPK'@,
                     'EORI','STRING[20]','Economic Operators  Registration and Identification'@,
                     'STATUS_P','STRING[255]','Status podatnika'@,
                     'OSS','STRING[50]','Numer VAT OSS'@,
                     'IOSS','STRING[50]','Numer VAT IOSS'@,
                     'KKRAJ','INTEGER','Kraj'@,
                     'KGLN','STRING[13]','GLN'@
       )


\odbcdsn_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: tabela z danymi DSN
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
tab_tmp(1,'NAME','STRING[100]','Nazwa DSN',
          'DRIVER','STRING[100]','Sterownik',
          'DSNTYPE','STRING[10]','Typ [User/System]',
          'PLATFORM','STRING[20]','Wersja',
          'PROPERTY','STRING[255]','Parametry')


\dsn_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: tabela do przechowywania połączeń odbc
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
tab_tmp(1,'DRIVER','STRING[50]','Sterownik',
          'PLATFORM','STRING[50]','Wersja sterownika',
          'NAME','STRING[50]','Nazwa źródła danych',
          'UID','STRING[50]','Użytkownik',
          'PWD','STRING[50]','Hasło',
          'LDAP','INTEGER','Uwierzytelnianie Active Directory',
          'ASNAME','STRING[50]','Identyfikator aplikacji',
          'ASGROUP','STRING[50]','Grupa',
          'ASADDRES','STRING[50]','Adres serwera',
          'ASPORT','STRING[50]','Port',
          'ASCERTUS','INTEGER','Certyfikat SSL',
          'ASCERTPT','STRING[200]','Certyfikat SSL ścieżka')


\firma_conf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: parametryzacja zakładania nowej firmy, formuła wykonywana w czynności ZWS_PAR_FIRM
::   WE: [_a] - [STRING] - symbol nowej firmy w przypadku ponownej konfiguracji
::   WY: xml/''
:: ~OST: INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
FIRMA.cntx_psh();
{? var_pres('_a')=type_of('')
|| _retry:=1;
   _symbol:=_a
|| _retry:=0
?};
params_set('retry',_retry);
_sep:=exec('sep','#file',2);
{? _retry
|| FIRMPAR.index('KOD');
   FIRMPAR.prefix(_symbol);
   {? FIRMPAR.first()
   || FIRMPAR.memo_get();
      _xml:=FIRMPAR.memo_txt()
   ?}
|| _xml:=''
?};
_view:=obj_new('tab','win_red');
KST.cntx_psh();
XINFO.cntx_psh();
:: wartości początkowe parametrów
{? _retry
|| exec('bl_okr','#firma',exec('param_tab','#firma'));
   _view.tab:=exec('xml2param','#firma',_xml);
   _xml:='';
   _filtr:=0
|| _view.tab:=exec('param_tab','#firma');
   _user:=exec('operatorKod','#users');
   USERS.cntx_psh(); USERS.index('USR_AKOD');
   USERS.prefix('T',_user,_user);
   {? USERS.first()
   || _view.tab.EMAIL_RE:=USERS.EMAIL
   ?};
   USERS.cntx_pop();
   _view.tab.BI_PROC:=BI_PROC.uidref;
   _view.tab.DATA:=0;
   _view.tab.ROLE_PAT:=0;
   _view.tab.BACKUP:='T';
   {? FIRMA.f_active()
   || FIRMA.f_clear();
      _filtr:=1
   || _filtr:=0
   ?};
   FIRMA.cntx_psh();
   FIRMA.index('SYMBOL2');
   FIRMA.prefix('S');
   FIRMA.first();
   _view.tab.DATA_FIR:=_view.tab.PATTERN:=FIRMA.SYMBOL;
   FIRMPAR.index('KOD');
   FIRMPAR.prefix();
   {? FIRMPAR.last()
   || FIRMPAR.memo_get();
      _xml_txt:=FIRMPAR.memo_txt();
      _params:=exec('xml2param','#firma',_xml_txt);
      _view.tab.CLUSTER:=_params.CLUSTER;
      _view.tab.MACROCFG:=_params.MACROCFG
   || _view.tab.CLUSTER:=pth_dir('cluster.cfg')+_sep+'cluster.cfg';
      _view.tab.MACROCFG:=pth_dir('macro.cfg')+_sep+'macro.cfg'
   ?};
   FIRMA.SYMBOL:=exec('firma_sym_bl','#firma');
   _view.tab.SYMBOL:=FIRMA.SYMBOL;
   _view.tab.OPIS:=exec('firma_opis_bl','#firma');
   _view.tab.URL:=FIRMA.URL;
   _view.tab.APP_IDEN:=exec('firma_id_bl','#firma');
   _view.tab.URL_MWA:=FIRMA.URL_MWA;
   _view.tab.EMAILDOM:=FIRMA.EMAILDOM;
   FIRMA.cntx_pop;
   exec('bl_okr','#firma',_view.tab)
?};
exec('param_win','#firma',_view);
_ref_firm:=REF.FIRMA;
REF.FIRMA:=null;
{? _retry
|| _view.tab.efld_opt(_view.win_red,'editable=grayed',_view.tab,'SYMBOL');
   _view.tab.efld_opt(_view.win_red,'editable=grayed',_view.tab,'OPIS');
   _view.tab.efld_opt(_view.win_red,'editable=grayed',_view.tab,'APP_IDEN')
?};
_kst_fml:=KST.fld_fml('POWIAT','AFTER_EDIT',"cur_tab().POWIAT:=KST.POWIAT");
exec('ustaw_obszary','!zws_par_aokr');
exec('ustaw_obszary1','!zws_par_aokr');
_view.tab.win_edit(_view.win_red);
_chk:="_res:='';
       _retry:=params_get().retry;
       _sep:=exec('sep','#file',2);
       {? (cur_tab().DATA=1 | cur_tab().ROLE_PAT=2) & cur_tab().DATA_PTH=''
       || _res:='DATA_PTH'
       |? fexists(cur_tab().CLUSTER)=0
       || FUN.emsg('Brak pliku '+cur_tab().CLUSTER+'.');
          _res:='CLUSTER'
       |? fexists(cur_tab().CLUSTER)=1 & cur_tab().CLUSTER=pth_dir('cluster.cfg')+_sep+'cluster.cfg'
       || {? _f:=fopen(cur_tab().CLUSTER,'r',0)
          || _empty:=1;
             {! |?
               _line:=fread(_f);
               {? _line*'[!Groups]' & 1+_line<>'#'
               || _empty:=0
               ?};
               _line<>'\n' & _empty=1
             !};
             {? _empty
             || FUN.emsg('Wskazany plik cluster.cfg jest błędny.'@);
                _res:='CLUSTER'
             ?}
          ?};
          &_f
       |? sys_name(2)='U_LINUX' & cfg_info('synchr_num')<>'0' & fexists(cur_tab().MACROCFG)=0
       || FUN.emsg('Brak pliku '+cur_tab().MACROCFG+'.');
          _res:='MACROCFG'
       |? sys_name(2)='U_LINUX' & cfg_info('synchr_num')<>'0' & fexists(cur_tab().MACROCFG)=1
       || {? _f:=fopen(cur_tab().MACROCFG,'r',0)
          || _correct:=1;
             {! |?
               _line:=fread(_f);
               {? _line*'synchr_num' & 1+_line<>';'
               || {? gsub(_line,' ','')='synchr_num='+cfg_info('synchr_num')
                  || _correct:=1
                  || _correct:=0
                  ?}
               ?};
               _line<>'\n' & _correct=1
             !};
             {? _correct=0
             || FUN.emsg('Wskazany plik macro.cfg nie jest plikiem wczytanym przez serwer.'@);
                _res:='MACROCFG'
             ?}
          ?};
          &_f
       ?};
       {? _res=''
       || FIRMA.cntx_psh();
          FIRMA.prefix();
          {? cur_tab().SYMBOL='' | ~_retry & FIRMA.find_tab('first','SYMBOL',,'=',cur_tab().SYMBOL)
          || FUN.emsg('Pole \"Symbol\" musi być unikalne.'@);
             _res:='SYMBOL'
          |? cur_tab().OPIS='' | ~_retry & FIRMA.find_tab('first','OPIS',,'=',cur_tab().OPIS)
          || FUN.emsg('Pole \"Opis\" musi być unikalne.'@);
             _res:='OPIS'
          |? cur_tab().APP_IDEN=''
             | ~_retry
               & FIRMA.find_tab('first','APP_IDEN',,'=',cur_tab().APP_IDEN,'GRP_IDEN',,'=',app_info('cluster_group'))
          || FUN.emsg('Pole \"Identyfikator aplikacji\" musi być unikalne w ramach grupy.'@);
             _res:='APP_IDEN'
          |? cur_tab().FKS=0 & cur_tab().CTR=0 & cur_tab().OBG=0 & cur_tab().FST=0 & cur_tab().KAS=0 & cur_tab().LMG=0
             & cur_tab().LSP=0 & cur_tab().LZK=0 & cur_tab().LUM=0
          || FUN.emsg('Należy wybrać co najmniej jedną dziedzinę.'@);
             _res:='FKS'
          ?};
          FIRMA.cntx_pop()
       ?};
       _res";
{? _view.tab.edit(_chk)
|| _view.tab.ROK:=PAR_OKR.ROK;
   _view.tab.MSTART:=PAR_OKR.MSTART;
   _view.tab.LOKR:=PAR_OKR.LOKR;
::   przepisanie parametrów z tabeli KST
   {! _i:=1..KST.fld_num()
   |! {? var_pres(KST.fld_acr(_i),_view.tab)>0
      || _fld_num:=exec('acr_no','#table',_view.tab,KST.fld_acr(_i));
         _view.tab[_fld_num]:=KST[_i]
      ?}
   !};
   _view.tab.WIELKOSC:=XINFO.WIELKOSC;
   FIRMA.index('SYMBOL');
   _res:='';
   {? _retry
   ||   'poprawa istniejącej firmy';
      {? FIRMA.find_key(_view.tab.SYMBOL,)
      || FIRMA.OPIS:=_view.tab.OPIS;
         FIRMA.URL:=_view.tab.URL;
         FIRMA.URL_MWA:=_view.tab.URL_MWA;
         FIRMA.EMAILDOM:=_view.tab.EMAILDOM;
         _res+=exec('backup','#firma',_view.tab);
         {? _res*'Błąd'
         || FUN.emsg(_res)
         || FIRMA.put
         ?}
      ?}
   ||   'dodanie firmy do tabeli';
      FIRMA.find_key(_view.tab.PATTERN,);
      FIRMA.A:='N';
      FIRMA.SYMBOL:=_view.tab.SYMBOL;
      FIRMA.APP_IDEN:=_view.tab.APP_IDEN;
      FIRMA.GRP_IDEN:=app_info('cluster_group');
      FIRMA.OPIS:=_view.tab.OPIS;
      FIRMA.URL:=_view.tab.URL;
      FIRMA.URL_MWA:=_view.tab.URL_MWA;
      FIRMA.EMAILDOM:=_view.tab.EMAILDOM;
      echo('Wykonywanie kopi zapasowej. Proszę czekać...'@);
      _res+=exec('backup','#firma',_view.tab);
      echo();
      {? _res*'Błąd'
      || FUN.emsg(_res)
      || FIRMA.add()
      ?}
   ?};
   {? _res*'Błąd'
   || REF.FIRMA:=_ref_firm;
      KST.fld_fml('POWIAT','AFTER_EDIT',_kst_fml);
      KST.cntx_pop();
      XINFO.cntx_pop();
      FIRMA.cntx_pop();
      {? _filtr
      || FIRMA.f_set('SYMBOL',,'"FIRMA"."TYP"=\'C\' or "FIRMA"."TYP"=\'S\'')
      ?};
      return('')
   ?};
   {? _view.tab.DATA=1 | _view.tab.ROLE_PAT=2
   || {? 1+_view.tab.DATA_PTH='@'
      || _at:='@';
         _sep_loc:=exec('sep','#file',0)
      || _at:='';
         _sep_loc:=exec('sep','#file',2)
      ?};
      _files_cat:=pth_dir('server')-3+'f'+_view.tab.SYMBOL+_sep+'files';
      _path:=_files_cat+_sep+'dane_import';
      {? _retry
      ||
::         fork_hide(exec('firm_by_sym','#firma',_view.tab.SYMBOL),'del_dane_import','#firma')
         _fdir:=exec('dir_sys','%transfer',_path);
         {? _fdir.first
         || _n:=1;
            {! |?
               progress(_n/_fdir.size()*100,'Usuwanie poprzednich plików'@,'Usuwanie poprzednich plików'@);
               {? _fdir.TYPE='f'
               || ferase(_path+_sep+_fdir.NAME,0)
               ?};
               _n+=1;
               _fdir.next()
            !}
         ?};
         &_fdir
      ?};
      exec('create_catalog','%transfer',_path);
      _fdir:=exec('dir_sys','%transfer',_view.tab.DATA_PTH);
      {? _fdir.first
      || _n:=1;
         {! |?
            progress(_n/_fdir.size()*100,'Kopiowanie plików'@,'Kopiowanie plików'@);
            {? _fdir.TYPE='f'
            || fcopy(_at+_fdir.DIR+_sep_loc+_fdir.NAME,_path+_sep+_fdir.NAME,0,0,1)
            ?};
            _n+=1;
            _fdir.next()
         !};
         prgs_clr()
      ?}
   ?};
   {? _retry
   || _view.tab.put
   || _view.tab.add
   ?};
   _xml:=exec('save_res','#firma',_view.tab.SYMBOL,_view.tab,_res)
?};
REF.FIRMA:=_ref_firm;
KST.fld_fml('POWIAT','AFTER_EDIT',_kst_fml);
KST.cntx_pop();
XINFO.cntx_pop();
FIRMA.cntx_pop();
{? _filtr
|| FIRMA.f_set('SYMBOL',,'"FIRMA"."TYP"=\'C\' or "FIRMA"."TYP"=\'S\'')
?};
_xml


\param_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: definicja okna z parametrami
::   WE:
::   WY:
:: ~OST: INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
_view:=_a;
_view.win_red:=_view.tab.mk_edit('Zakładanie nowej firmy'@,0);
_view.tab.win_etab(_view.win_red,'Parametry ogólne'@);
_view.tab.win_esep(_view.win_red,'Parametry ogólne'@);
_view.tab.win_efld(_view.win_red,_view.tab,'EMAIL_RE',,,80,0,0,'',0,
                   'Po zakończeniu działania na dany adres zostanie wysłany mail z zestawieniem'@,,'');
_view.tab.win_efld(_view.win_red,_view.tab,'BACKUP',,,,,0,'',,,'check-box','left_label=1',"'T'","'N'");
_view.tab.win_efld(_view.win_red,_view.tab,'PATTERN',,,,,0,,,,0,'F3_button=1');
_view.tab.fld_fml('PATTERN','F3',"
                                    FIRMA.cntx_psh();
                                    FIRMA.index('SYMBOL2');
                                    FIRMA.prefix('S');
                                    FIRMA.f_clear();
                                    FIRMA.first();
                                    FIRMA.find_key(cur_tab.PATTERN,);
                                    FIRMA.win_sel('WYB');
                                    FIRMA.hdr_sel(' - Wybierz firmę źródłową'@);
                                    {? FIRMA.select(,1)
                                    || {? cur_tab().PATTERN=cur_tab().DATA_FIR
                                       || cur_tab().DATA_FIR:=cur_tab().PATTERN:=FIRMA.SYMBOL
                                       || cur_tab().PATTERN:=FIRMA.SYMBOL
                                       ?}
                                    ?};
                                    FIRMA.cntx_pop()");
_view.tab.fld_fml('PATTERN','AFTER_EDIT',"
                                          FIRMA.cntx_psh();
                                          FIRMA.index('SYMBOL2');
                                          FIRMA.prefix('S');
                                          FIRMA.f_clear();
                                          FIRMA.first();
                                          {? FIRMA.find_key(cur_tab.PATTERN,)
                                          || cur_tab().URL:=FIRMA.URL;
                                             cur_tab().URL_MWA:=FIRMA.URL_MWA;
                                             cur_tab().EMAILDOM:=FIRMA.EMAILDOM;
                                             _ret:=1
                                          || FUN.info('Brak firmy o podanym symbolu.'@);
                                             _ret:=0
                                          ?};
                                          FIRMA.cntx_pop();
                                          _ret");
_view.tab.win_efld(_view.win_red,_view.tab,'ROLE_PAT',,,3,0,0,'Import ról i uprawnień'@,0,''@,
   'radio-buttons','left_label=1','Ze wskazanej firmy',"exec('num_0_','#blank')",
   'Z danych wzorcowych',"exec('num_1_','#blank')",'Z podanej ścieżki',"exec('num_2_','#blank')");
_view.tab.fld_fml('ROLE_PAT','AFTER_EDIT',"{? cur_tab().ROLE_PAT=2
                                           || cur_tab().efld_opt(cur_win(),'editable=1',cur_tab(),'DATA_PTH');
                                              cur_tab().efld_opt(cur_win(),'editable=1',cur_tab(),'DATA_FIR')
                                           || {? cur_tab().DATA=0
                                             || cur_tab().efld_opt(cur_win(),'editable=grayed',cur_tab(),'DATA_PTH');
                                                cur_tab().efld_opt(cur_win(),'editable=grayed',cur_tab(),'DATA_FIR');
                                                cur_tab().DATA_FIR:=cur_tab().PATTERN
                                             ?}
                                           ?};1");
_view.tab.win_efld(_view.win_red,_view.tab,'DATA',,,3,0,0,'Import danych'@,0,''@,
   'radio-buttons','left_label=1','Ze wskazanej firmy',"exec('num_0_','#blank')",
   'Z podanej ścieżki',"exec('num_1_','#blank')");
_view.tab.fld_fml('DATA','AFTER_EDIT',"{? cur_tab().DATA<>0
                                       || cur_tab().efld_opt(cur_win(),'editable=1',cur_tab(),'DATA_PTH');
                                          cur_tab().efld_opt(cur_win(),'editable=1',cur_tab(),'DATA_FIR')
                                       || {? cur_tab().ROLE_PAT<>2
                                          || cur_tab().efld_opt(cur_win(),'editable=grayed',cur_tab(),'DATA_PTH');
                                             cur_tab().efld_opt(cur_win(),'editable=grayed',cur_tab(),'DATA_FIR');
                                             cur_tab().DATA_FIR:=cur_tab().PATTERN
                                          ?}
                                       ?};1");

_view.tab.fld_fml('DATA_PTH','F3',"_path:=exec('filechooser','#file','Wskaż folder z danymi do importu'@,0,,,0,
'DIRECTORIES_ONLY');
                                    {? _path<>'' || cur_tab().DATA_PTH:='@'+_path ?}");


 _view.tab.fld_fml('DATA_PTH','AFTER_EDIT',"{? cur_tab().DATA_PTH='' | fexists(cur_tab().DATA_PTH)=2
                                           || _res:=1
                                           || FUN.emsg('Brak folderu '+cur_tab().DATA_PTH);
                                              _res:=0
                                           ?};
                                           _res");
_view.tab.win_efld(_view.win_red,_view.tab,'DATA_PTH',,,80,,,,0,,,'F3_button=1');
_view.tab.efld_opt(_view.win_red,'editable='+{? _view.tab.DATA=1 | _view.tab.ROLE_PAT=2 || '1' || 'grayed' ?},
                   _view.tab,'DATA_PTH');
_view.tab.win_efld(_view.win_red,_view.tab,'DATA_FIR',,,4,,,,0);
_view.tab.efld_opt(_view.win_red,'editable=grayed',_view.tab,'DATA_FIR');
_local:=exec('server','#system').address='localhost';
{? _local
|| _view.tab.fld_fml('CLUSTER','F3',"
         _path:=exec('filechooser','#file','Wskaż plik cluster.cfg'@,0,'cfg',,0,'FILES_ONLY');
                                    {? _path<>'' || cur_tab().CLUSTER:=_path ?}")
?};
 _view.tab.fld_fml('CLUSTER','AFTER_EDIT',"{? -cur_tab().CLUSTER*'cluster.cfg'=0
                                           || FUN.emsg('Wskaż ścieżkę do pliku cluster.cfg'@);
                                              _res:=0
                                           |? fexists(cur_tab().CLUSTER)=1
                                           || _res:=1
                                           || FUN.emsg('Brak pliku '+cur_tab().CLUSTER+'.');
                                              _res:=0
                                           ?};
                                           _res");
_view.tab.win_efld(_view.win_red,_view.tab,'CLUSTER',,,80,,,,0,,,{? _local || 'F3_button=1' || '' ?});
{? sys_name(2)='U_LINUX' & cfg_info('synchr_num')<>'0'
|| _view.tab.fld_fml('MACROCFG','AFTER_EDIT',"{? -cur_tab().MACROCFG*'macro.cfg'=0
                                           || FUN.emsg('Wskaż ścieżkę do pliku macro.cfg'@);
                                              _res:=0
                                           |? fexists(cur_tab().MACROCFG)=1
                                           || _res:=1
                                           || FUN.emsg('Brak pliku '+cur_tab().MACROCFG+'.');
                                              _res:=0
                                           ?};
                                           _res");
   _view.tab.win_efld(_view.win_red,_view.tab,'MACROCFG',,,80,,,,0)
?};
_view.tab.win_esep(_view.win_red,'Parametry nowej firmy'@);
_view.tab.win_efld(_view.win_red,_view.tab,'SYMBOL',,,9,0,0,'',0,'',,'');
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'SYMBOL');
_view.tab.win_efld(_view.win_red,_view.tab,'OPIS',,,80,0,0,'',0,'',,'');
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'OPIS','');
_view.tab.win_efld(_view.win_red,_view.tab,'APP_IDEN',,,80,0,0,'',0,'',,'');
_view.tab.win_efld(_view.win_red,_view.tab,'URL',,,80,0,0,'',0,'',,'');
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'APP_IDEN','');
_view.tab.win_efld(_view.win_red,_view.tab,'URL_MWA',,,80,0,0,'',0,'',,'');
_view.tab.win_efld(_view.win_red,_view.tab,'EMAILDOM',,,80,0,0,'',0,'Nazwa domeny poczty elektronicznej'@,,'');
_view.tab.win_etab(_view.win_red,'Okresy pracy'@);
_view.tab.win_esep(_view.win_red,'Okresy pracy'@);
_view.tab.win_efld(_view.win_red,PAR_OKR,'ROK',,,11,0,0,'Rok'@,0,'Rok do założenia w obszarach'@,,'');
_view.tab.win_efld(_view.win_red,PAR_OKR,'MSTART',,,11,0,0,'Miesiąc startowy'@,0,'Miesiąc startowy'@,,'');
_view.tab.win_efld(_view.win_red,PAR_OKR,'LOKR',,,11,0,0,'Liczba okresów'@,0,'Liczba okresów obrachunkowych'@,,'');
   _view.tab.win_esep(_view.win_red,'Dziedziny'@);
_view.tab.win_efld(_view.win_red,_view.tab,'FKS',,,3,0,0,'Finanse'@,0,'Okresy finansowe'@,
   'check-box','left_label=0',"exec('num_1_','#blank')","exec('num_0_','#blank')");
_view.tab.fld_fml('FKS','BEFORE_DISPLAY',"exec('be_bd_obsz','!zws_par_aokr')");
_view.tab.win_efld(_view.win_red,_view.tab,'CTR',,,3,0,0,'Controlling'@,0,'Okresy dla controllingu'@,
   'check-box','left_label=0',"exec('num_1_','#blank')","exec('num_0_','#blank')");
   _view.tab.fld_fml('CTR','BEFORE_DISPLAY',"exec('be_bd_obsz','!zws_par_aokr')");
_view.tab.win_efld(_view.win_red,_view.tab,'OBG',,,3,0,0,'Obiegi'@,0,'Okresy dla obiegów'@,
   'check-box','left_label=0',"exec('num_1_','#blank')","exec('num_0_','#blank')");
   _view.tab.fld_fml('OBG','BEFORE_DISPLAY',"exec('be_bd_obsz','!zws_par_aokr')");
_view.tab.win_efld(_view.win_red,_view.tab,'FST',,,3,0,0,'Środki trwałe'@,0,'Okresy dla środków trwałych'@,
   'check-box','left_label=0',"exec('num_1_','#blank')","exec('num_0_','#blank')");
   _view.tab.fld_fml('FST','BEFORE_DISPLAY',"exec('be_bd_obsz','!zws_par_aokr')");
_view.tab.win_efld(_view.win_red,_view.tab,'KAS',,,3,0,0,'Kasa'@,0,'Okresy dla kasy'@,
   'check-box','left_label=0',"exec('num_1_','#blank')","exec('num_0_','#blank')");
   _view.tab.fld_fml('KAS','BEFORE_DISPLAY',"exec('be_bd_obsz','!zws_par_aokr')");
_view.tab.win_efld(_view.win_red,_view.tab,'LMG',,,3,0,0,'Magazyny'@,0,'Okresy dla magazynów'@,
   'check-box','left_label=0',"exec('num_1_','#blank')","exec('num_0_','#blank')");
   _view.tab.fld_fml('LMG','BEFORE_DISPLAY',"exec('be_bd_obsz','!zws_par_aokr')");
_view.tab.win_efld(_view.win_red,_view.tab,'LSP',,,3,0,0,'Sprzedaż'@,0,'Okresy dla sprzedaży'@,
   'check-box','left_label=0',"exec('num_1_','#blank')","exec('num_0_','#blank')");
   _view.tab.fld_fml('LSP','BEFORE_DISPLAY',"exec('be_bd_obsz','!zws_par_aokr')");
_view.tab.win_efld(_view.win_red,_view.tab,'LZK',,,3,0,0,'Zakupy'@,0,'Okresy dla zakupów'@,
   'check-box','left_label=0',"exec('num_1_','#blank')","exec('num_0_','#blank')");
   _view.tab.fld_fml('LZK','BEFORE_DISPLAY',"exec('be_bd_obsz','!zws_par_aokr')");
_view.tab.win_efld(_view.win_red,_view.tab,'LUM',,,3,0,0,'Umowy'@,0,'Okresy dla umów'@,
   'check-box','left_label=0',"exec('num_1_','#blank')","exec('num_0_','#blank')");
   _view.tab.fld_fml('LUM','BEFORE_DISPLAY',"exec('be_bd_obsz','!zws_par_aokr')");
_view.tab.win_esep(_view.win_red,'Plan kont'@);
_view.tab.win_efld(_view.win_red,_view.tab,'PLAN_GR',,,3,0,0,'Plan kont jak dla grupy '@,0,,
   'check-box','left_label=0',"exec('num_1_','#blank')","exec('num_0_','#blank')");
_view.tab.win_etab(_view.win_red,'Dane firmy'@);
_view.tab.win_esep(_view.win_red,'Przedsiębiorstwo'@);
_view.tab.win_efld(_view.win_red,KST,'NAZWA',,,49,0,0,'Nazwa pełna'@,0,'Pełna nazwa licencjobiorcy'@,,'');
_view.tab.win_efld(_view.win_red,KST,'SKROT',,,49,0,0,'Nazwa skrócona'@,0,'Skrócona nazwa licencjobiorcy'@,,'');
_view.tab.win_efld(_view.win_red,XINFO,'WIELKOSC',,,46,0,0,'Wielkość'@,0,'Wielkość przedsiębiorstwa licencjobiorcy'@,,
'F3_button=1,');
_view.tab.win_esep(_view.win_red,'Adres siedziby'@);
_view.tab.win_efld(_view.win_red,KST,'KRAJ','KODISO','KODISO','3,7,7',0,0,'Kraj'@,0,'Kod ISO kraju licencjobiorcy'@,,
'add_to_dict=yes,');
_view.tab.win_efld(_view.win_red,KST,'KRAJ','NAZ','*',40,0,1,'',1,'Nazwa kraju licencjobiorcy'@,,'add_to_dict=yes,');
_view.tab.win_efld(_view.win_red,KST,'WOJEWODZ',,,46,0,0,'',0,'Nazwa województwa'@,,'F3_button=1,');
_view.tab.win_efld(_view.win_red,KST,'POWIAT',,,46,0,0,'',0,'Nazwa powiatu'@,,'F3_button=1,');
_view.tab.win_efld(_view.win_red,KST,'GMINA',,,46,0,0,'',0,'Nazwa gminy'@,,'F3_button=1,');
_view.tab.win_efld(_view.win_red,KST,'MIASTO',,,46,0,0,'',0,'Miasto'@,,'F3_button=1,');
_view.tab.win_efld(_view.win_red,KST,'ULICA',,,49,0,0,'',0,'Ulica'@,,'');
_view.tab.win_efld(_view.win_red,KST,'DOM',,,23,0,0,'Dom'@,0,'Dom'@,,'');
_view.tab.win_efld(_view.win_red,KST,'LOKAL',,,23,0,0,'Lokal'@,,'Lokal'@);
_view.tab.win_esep(_view.win_red,'Poczta'@);
_view.tab.win_efld(_view.win_red,KST,'KOD',,,49,0,0,'Kod'@,0,'Kod pocztowy'@,,'');
_view.tab.win_efld(_view.win_red,KST,'POCZTA',,,49,0,0,'Urząd'@,0,'Urząd pocztowy'@,,'');
_view.tab.win_esep(_view.win_red,'Kontakt'@);
_view.tab.win_efld(_view.win_red,KST,'TEL',,,49,0,0,'',0,'Telefon'@,,'');
_view.tab.win_efld(_view.win_red,KST,'FAX',,,49,0,0,'Telefon 2'@,0,'Telefon 2'@,,'');
_view.tab.win_efld(_view.win_red,KST,'EMAIL',,,49,0,0,'E-mail'@,0,'Adres e-mail licencjobiorcy'@,,'');
_view.tab.win_etab(_view.win_red,'Dane rozszerzone'@);
_view.tab.win_esep(_view.win_red,'Identyfikacja'@);
_view.tab.win_efld(_view.win_red,KST,'NIP',,,44,0,0,'',0,'NIP'@,,'');
_view.tab.win_efld(_view.win_red,KST,'REG',,,44,0,0,' REGON'@,0,'REGON'@,,'');
_view.tab.win_efld(_view.win_red,KST,'NUSP',,,44,0,0,'',0,'Numer ubezpieczenia społecznego płatnika (nadany przez ZUS)'@
,,'');
_view.tab.win_efld(_view.win_red,KST,'NKP',,,44,0,0,'',0,'NKP'@,,'');
_view.tab.win_efld(_view.win_red,KST,'PKD',,,44,0,0,'',0,'PKD'@,,'');
_view.tab.win_efld(_view.win_red,KST,'PFRON',,,44,0,0,'',0,'PFRON'@,,'');
_view.tab.win_efld(_view.win_red,KST,'GMGUS',,,44,0,0,'Kod GUS gminy'@,0,'Kod GUS gminy'@,,'');
_view.tab.win_efld(_view.win_red,KST,'US','NU','URZSKNAZ',41,0,0,'Urząd skarbowy'@,0,'Nazwa Urzędu Skarbowego'@,,
'add_to_dict=yes,');
_view.tab.win_efld(_view.win_red,KST,'US_JPK','NU','URZSKNAZ',41,0,0,'Urząd skarbowy JPK_V7'@,0,
'Nazwa urzędu skarbowego używanego w plikach JPK_V7'@,,'add_to_dict=yes,');
_view.tab.win_efld(_view.win_red,KST,'ODDZ_ZUS','NAZWA','ADRES',41,0,0,'Oddział ZUS'@,0,'Nazwa Oddziału ZUS'@,,
'add_to_dict=yes,');
_view.tab.win_efld(_view.win_red,KST,'GLN',,,44,0,0,'',0,'Global Location Number'@,,'');
_view.tab.win_efld(_view.win_red,KST,'BDO',,,44,0,0,'Numer rejestrowy BDO'@,0,'',,'');
_view.tab.win_efld(_view.win_red,KST,'EORI',,,44,0,0,'EORI'@,0,'',,'');
_view.tab.win_efld(_view.win_red,KST,'STATUS_P',,,41,0,0,'',0,'',,'F3_button=1,');
_view.tab.win_efld(_view.win_red,KST,'OSS',,,44,0,0,'',0,'',,'');
_view.tab.win_efld(_view.win_red,KST,'IOSS',,,44,0,0,'',0,'',,'');
_view.tab.win_esep(_view.win_red,'Dane płatnika będącego osobą fizyczną'@);
_view.tab.win_efld(_view.win_red,KST,'PODFIZ',,,3,0,0,'Płatnik jest osobą fizyczną'@,0,'Rodzaj płatnika'@,
'check-box','left_label=1,check_label="%1"'['Tak, płatnik jest osobą fizyczną'@],"exec('num_1_','#blank')",
"exec('num_0_','#blank')");
_view.tab.win_efld(_view.win_red,KST,'PODNAZ',,,44,0,0,'Nazwisko'@,0,'Nazwisko płatnika'@,,'');
_view.tab.win_efld(_view.win_red,KST,'PODIME',,,18,0,0,'Imię'@,0,'Imię płatnika'@,,'');
_view.tab.win_efld(_view.win_red,KST,'PODURDAT',,,10,0,0,'Data urodzenia'@,0,'Data urodzenia płatnika'@,,'');
_view.tab.win_ecol(_view.win_red,'50%');
_view.tab.win_esep(_view.win_red,'Rejestracja'@);
_view.tab.win_efld(_view.win_red,KST,'DREJ',,,10,0,0,'',0,'Data rejestracji'@,,'');
_view.tab.win_efld(_view.win_red,KST,'OREJ',,,43,0,0,'',0,'Organ rejestrujący'@,,'');
_view.tab.win_efld(_view.win_red,KST,'REJ',,,43,0,0,'',0,'Nazwa rejestru'@,,'');
_view.tab.win_efld(_view.win_red,KST,'NREJ',,,43,0,0,'Numer w rejestrze'@,0,'Nr w rejestrze VAT'@,,'');
_view.tab.win_efld(_view.win_red,KST,'DRD',,,10,0,0,'Rozpoczęcie działalności'@,0,'Data rozpoczęcia działalności'@,,'');
_view.tab.win_efld(_view.win_red,KST,'DKON',,,10,0,0,'Koniec działalności'@,0,'',,'');
_view.tab.win_efld(_view.win_red,KST,'FDZIAL',,,43,0,0,'Forma prawna działalności'@,0,'Forma prawna działalności'@,,'');
_view.tab.win_efld(_view.win_red,KST,'FWLASN',,,43,0,0,'',0,'Forma własności'@,,'');
_view.tab.win_etab(_view.win_red,'Korespondencja'@);
_view.tab.win_esep(_view.win_red,'Adres'@);
_view.tab.win_efld(_view.win_red,KST,'KKRAJ','KODISO','KODISO','3,7,7',0,0,'Kraj'@,0,'',,'add_to_dict=yes,');
_view.tab.win_efld(_view.win_red,KST,'KKRAJ','NAZ','*',45,0,1,'',1,'',,'add_to_dict=yes,');
_view.tab.win_efld(_view.win_red,KST,'KMIASTO',,,51,0,0,'Miasto'@,0,'Miasto - adres do korespondencji'@,,'F3_button=1');
_view.tab.win_efld(_view.win_red,KST,'KULICA',,,54,0,0,'Ulica'@,0,'Ulica - adres do korespondencji'@,,'');
_view.tab.win_efld(_view.win_red,KST,'KDOM',,,21,0,0,'Dom'@,0,'Dom - adres do korespondencji'@,,'');
_view.tab.win_efld(_view.win_red,KST,'KLOKAL',,,32,0,0,'Lokal'@,,'Lokal - adres do korespondencji'@);
_view.tab.win_esep(_view.win_red,'Poczta'@);
_view.tab.win_efld(_view.win_red,KST,'KKOD',,,54,0,0,'Kod'@,0,'Kod pocztowy - adres do korespondencji'@,,'');
_view.tab.win_efld(_view.win_red,KST,'KPOCZTA',,,54,0,0,'Urząd'@,0,'Urząd pocztowy - adres do korespondencji'@,,'');
_view.tab.win_esep(_view.win_red,'Dane kontaktowe'@);
_view.tab.win_efld(_view.win_red,KST,'KTEL',,,54,0,0,'Telefon'@,0,'Telefon - adres do korespondencji'@,,'');
_view.tab.win_efld(_view.win_red,KST,'KFAX',,,54,0,0,'Telefon 2'@,0,'Telefon 2 - adres do korespondencji'@,,'');
_view.tab.win_efld(_view.win_red,KST,'KEMAIL',,,54,0,0,'E-mail'@,0,'Adres e-mail - adres do korespondencji'@,,'');
_view.tab.win_esep(_view.win_red,'Identyfikacja'@);
_view.tab.win_efld(_view.win_red,KST,'KGLN',,,54,0,0,'',0,'',,'');
::_btn3:=_view.tab.win_ebtn(_view.win_red,'text="%1",panel=bottom,align=begin,edit=1'['NIP-y UE'@],
::      "exec('nipy','nipyue','INFO')");
::_view.tab.btn_eopt(_view.win_red,_btn3,'tooltip="%1"'['NIP-y UE licencjobiorcy'@]);
::_btn4:=_view.tab.win_ebtn(_view.win_red,'text="%1",panel=bottom,align=begin,edit=1'
::      ['Rachunki bankowe'@],"exec('banrach','rachunki')");
_btn1:=_view.tab.win_ebtn(_view.win_red,
           'text="%1",btn_label_align=center,panel=bottom,align=end,edit=1'['Dodaj nową firmę'@@],'key:F2');
_view.tab.btn_eopt(_view.win_red,_btn1,'tooltip="%1"'['Zatwierdzenie okienka'@]);
_btn2:=_view.tab.win_ebtn(_view.win_red,
         'text="%1",btn_label_align=center,panel=bottom,align=end,edit=1'['Anuluj'@@],'key:Esc');
_view.tab.btn_eopt(_view.win_red,_btn2,'tooltip="%1"'['Zamknięcie okienka'@]);
~~


\backup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Wykonanie backupu podczas zakładania nowej firmy
::   WE: _a  - [TABLE] tabela z parametrami
::   WY: _res
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
{? _tab.BACKUP='T'
|| {? ~fexists(pth_dir('sysblob')-4+'backups')
   || fmkdir(pth_dir('sysblob')-4,'backups')
   ?};
   {? sys_name(2)='U_LINUX' & cfg_info('synchr_num')<>'0'
   || _cfg:=_tab.MACROCFG-(1++exec('file_from_path','#file',_tab.MACROCFG));
      _backup:=exec('backup','zws',,,_cfg,1).STATUS
   || _backup:=exec('backup','zws',,,'',1).STATUS

   ?};
   {? _backup
   || _res:='OK. Wykonano kopię danych.\n'
   || _res:='Błąd. Niepowodzenie wykonania kopii danych.\n'
   ?}
|| _res:=''
?};
_res


\cluster_conv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: _a - ścieżka do cluster.cfg
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_pth_cluster_in:=_a;
_res:='';
_conv:=iconv('UTF-8');
::sprawdzenie czy nie ma już zapisów w cluster.cfg
_comp:='['+FIRMA.APP_IDEN+']';
_cluster_in:=fopen(_pth_cluster_in,'r',0);
{? _cluster_in
|| {!
   |? {? sys_name(2)='U_LINUX'
      || _wiersz:=fread(_cluster_in)
      || (_wiersz:=_conv.from(fread(_cluster_in)))
      ?};
      {? _wiersz*_comp
      || _res+='OK. W pliku cluster.cfg znajdują się już zapisy dla nowej firmy.\n'
      ?};
      _wiersz<>'\n' & _res=''
   !};
   fclose(_cluster_in)
|| _res+='Błąd. Błąd otwarcia pliku: '+_pth_cluster_in+'.\n'
?};
{? _res<>''
|| return(_res)
?};

::  kopia pliku cluster.cfg
fcopy(_pth_cluster_in,_pth_cluster_in-4+'_'+gsub($date(),'/','')+gsub(form(time(),,3),':','')+'.cfg.bak',0,0,);
_cluster_in:=fopen(_pth_cluster_in,'r',0);
_pth_cluster_out:=_pth_cluster_in+'.new';
_cluster_out:=fopen(_pth_cluster_out,'Uw',0);
{? ~_cluster_out
|| _res+='Błąd. Błąd otwarcia pliku: '+_pth_cluster_out+'.\n'
?};
{? _res*'Błąd'
|| return(_res)
?};
_line:=0;
_row_f00x_add:=0;
_group:=0;
{? _cluster_in
|| {!
   |? {? sys_name(2)='U_LINUX'
      || _wiersz:=fread(_cluster_in)
      || (_wiersz:=_conv.from(fread(_cluster_in)))
      ?};
      _line+=1;
::          dopisywanie gdy jest tag ### Grupy ###
      {? _wiersz*'######### Grupy ############' & _row_f00x_add=0
      || exec('dopisz_firme','#firma',_cluster_out);
         exec('dopisz_kolejki','#firma',_cluster_out);
         _row_f00x_add:=_line
      ?};
::          dopisywanie gdy nie ma tagu ### Grupy ###
      {? _wiersz*'[!Groups]' & 1+_wiersz<>'#' & _row_f00x_add=0
      || exec('dopisz_firme','#firma',_cluster_out);
         exec('dopisz_kolejki','#firma',_cluster_out);
         _row_f00x_add:=_line
      ?};
::      przepisanie wiersza
      {? _wiersz<>'\n' || fwrite(_cluster_out,_wiersz) ?};
::        dopisanie grupy
      {? _wiersz*'[!Groups]' & 1+_wiersz<>'#'
      || {! |?
            {? sys_name(2)='U_LINUX'
            || _wiersz:=fread(_cluster_in)
            || (_wiersz:=_conv.from(fread(_cluster_in)))
            ?};
            {? (_wiersz='\n' | _wiersz*'[%') & _group=0
            || _line+=1;
               fwrite(_cluster_out,app_info('cluster_group')+'='+FIRMA.APP_IDEN+';'
                                                   +'event'+FIRMA.SYMBOL+';'
                                                   +'task'+FIRMA.SYMBOL+';'
                                                   +'mail'+FIRMA.SYMBOL+';'
                                                   +'blink'+FIRMA.SYMBOL);
               {? _wiersz*'[%'
               || fwrite(_cluster_out,'\n'+_wiersz)
               ?};
               _group:=1
            || fwrite(_cluster_out,_wiersz)
            ?};
            _wiersz<>'\n'
         !}
      ?};
      _wiersz<>'\n'
   !};
   fclose(_cluster_in);
   fclose(_cluster_out);
   {? _row_f00x_add & _group
   || _res+='OK. Uzupełniono plik cluster.cfg o nową firmę.\n'
   || _res+='Błąd. W pliku cluster.cfg nie odnaleziono sekcji grupy do dodania firmy.\n'
   ?}
|| _res+='Błąd otwarcia pliku cluster.cfg.\n'
?};
{? 2+_res='OK'
|| {? fcopy(_pth_cluster_out,_pth_cluster_out-4,0,0,1)
   || ferase(_pth_cluster_out)
   || _res+='UWAGA. Nie udało się zamienić pliku cluster.cfg na nowy.\n'
      +'Plik "'+_pth_cluster_out+'" należy zamienić z dotychczasowym plikiem cluster.cfg.\n'
   ?}
?};
_res


\dopisz_firme
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Dopisuje do nowego cluster.cfg sekcję z nową firmą
::   WE: _a - uchwyt do pliku cluster.cfg
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cluster_out:=_a;
_sep:=exec('sep','#file',2);
_spli:=spli_str(pth_dir(),_sep);
fwrite(_cluster_out,'\r\n['+FIRMA.APP_IDEN+']');
fwrite(_cluster_out,'name=merit');
fwrite(_cluster_out,'path='+pth_dir()-(+_spli[obj_len(_spli)]+1) + _sep + 'f'+FIRMA.SYMBOL+'.pth');
fwrite(_cluster_out,'caption='+FIRMA.OPIS);
fwrite(_cluster_out,'app_par1='+FIRMA.SYMBOL)


\dopisz_kolejki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Dopisuje do nowego cluster.cfg sekcję z kolejkami nowej firmy
::   WE: _a - uchwyt do pliku cluster.cfg
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cluster_out:=_a;
_sep:=exec('sep','#file',2);
_spli:=spli_str(pth_dir(),_sep);
fwrite(_cluster_out,'\r\n[event'+FIRMA.SYMBOL+']');
fwrite(_cluster_out,'name=merit');
fwrite(_cluster_out,'path='+pth_dir()-(+_spli[obj_len(_spli)]+1) + _sep + 'f'+FIRMA.SYMBOL+'.pth');
fwrite(_cluster_out,'hidden=1');
fwrite(_cluster_out,'cgi_html=cgi_event.htm');
fwrite(_cluster_out,'cgi_output=merit_event.log');
fwrite(_cluster_out,'app_par1='+FIRMA.SYMBOL);
fwrite(_cluster_out,'cgi_group='+app_info('cluster_group'));
fwrite(_cluster_out,'');
fwrite(_cluster_out,'[task'+FIRMA.SYMBOL+']');
fwrite(_cluster_out,'name=merit');
fwrite(_cluster_out,'path='+pth_dir()-(+_spli[obj_len(_spli)]+1) + _sep + 'f'+FIRMA.SYMBOL+'.pth');
fwrite(_cluster_out,'hidden=1');
fwrite(_cluster_out,'cgi_html=cgi_task.htm');
fwrite(_cluster_out,'cgi_output=merit_task.log');
fwrite(_cluster_out,'app_par1='+FIRMA.SYMBOL);
fwrite(_cluster_out,'cgi_group='+app_info('cluster_group'));
fwrite(_cluster_out,'');
fwrite(_cluster_out,'[mail'+FIRMA.SYMBOL+']');
fwrite(_cluster_out,'name=merit');
fwrite(_cluster_out,'path='+pth_dir()-(+_spli[obj_len(_spli)]+1) + _sep + 'f'+FIRMA.SYMBOL+'.pth');
fwrite(_cluster_out,'hidden=1');
fwrite(_cluster_out,'cgi_html=cgi_mail.htm');
fwrite(_cluster_out,'cgi_output=merit_mail.log');
fwrite(_cluster_out,'app_par1='+FIRMA.SYMBOL);
fwrite(_cluster_out,'cgi_group='+app_info('cluster_group'));
fwrite(_cluster_out,'');
fwrite(_cluster_out,'[blink'+FIRMA.SYMBOL+']');
fwrite(_cluster_out,'name=merit');
fwrite(_cluster_out,'path='+pth_dir()-(+_spli[obj_len(_spli)]+1) + _sep + 'f'+FIRMA.SYMBOL+'.pth');
fwrite(_cluster_out,'hidden=1');
fwrite(_cluster_out,'cgi_html=cgi_blink.htm');
fwrite(_cluster_out,'cgi_output=merit_blink.log');
fwrite(_cluster_out,'app_par1='+FIRMA.SYMBOL);
fwrite(_cluster_out,'cgi_group='+app_info('cluster_group')+'\r\n')


\queue_add_stop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Dodanie i zatrzymanie kolejek nowej firmy
::   WE: _a - FIRMA.ref
::   WY: [STRING] - wynik
::----------------------------------------------------------------------------------------------------------------------
::exec('start_proces','b_proces',0);
_ref_firm:=_a;
_res:='';
B_WORKER.cntx_psh();
:: inicjowanie standardowych kolejek przetwarzania dla firmy
B_WORKER.index('KOD');
B_WORKER.prefix(_ref_firm);
{? ~B_WORKER.size()
||
::   przed dodaniem trzeba ustawić __F_ref - jest używane w blank B_WORKER.FIRMA
   {? var_pres('__F_ref')<>-1
   || _restore:=__F_ref
   ?};
   __F_ref:=_ref_firm;
   B_WORKER.cntx_psh();
   exec('init','#b_worker');
   B_WORKER.cntx_pop();
::   przywracam stan __F_ref
   {? var_pres('_restore')<>-1
   || __F_ref:=_restore
   || &__F_ref
   ?};
   {? B_WORKER.size()
   || _res+='OK. Dodano kolejki nowej firmy.\n'
   || _res+='Błąd. Nie dodano kolejek nowej firmy.\n'
   ?}
?};
:: zatrzymanie kolejek nowej firmy
_queue_stop:=B_WORKER.size();
{? B_WORKER.first()
|| {! |?
      B_WORKER.ENABLED:='N';
      {? B_WORKER.put || _queue_stop-=1 ?};
      B_WORKER.next
   !}
?};
B_WORKER.cntx_pop();
{? _queue_stop=0
|| _res+='OK. Zatrzymano kolejki nowej firmy.\n'
|| _res+='Błąd. Nie zatrzymano kolejek nowej firmy.\n'
?};
_res


\queue_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Uruchomienie kolejek nowej firmy
::   WE: _a - FIRMA.ref
::   WY: [STRING] - wynik
::----------------------------------------------------------------------------------------------------------------------
_ref_firm:=_a;
_res:='';
B_WORKER.cntx_psh();
:: inicjowanie standardowych kolejek przetwarzania dla firmy
B_WORKER.index('KOD');
B_WORKER.prefix(_ref_firm);
_queue_stop:=B_WORKER.size();
{? B_WORKER.first()
|| {! |?
      B_WORKER.ENABLED:='T';
      B_WORKER.STOP:='T';
      {? B_WORKER.put || _queue_stop-=1 ?};
      B_WORKER.next
   !}
?};
B_WORKER.cntx_pop();
{? _queue_stop=0
|| _res+='OK. Uruchomiono kolejki nowej firmy.\n'
|| _res+='Błąd. Nie uruchomiono kolejek nowej firmy.\n'
?};
_res


\odbc_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JD [23.25]
:: OPIS: Dodawanie nowego źródła odbc
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Gdzie dodać nowe żródło danych?'@,,'Serwer'@,'Cienki klient'@);
{? _choice=1
|| exec('odbc_f3','#firma',1,0)
|? _choice=2
|| exec('odbc_f3','#firma',0,0)
|| ''
?}


\webserver_inst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JD [23.25]
:: OPIS: Instalacja webservera dla wybranej firmy
::   WE:
::   WY:
:: ~OST: INENVGET,INFCOPY,INFEXISTS,INFILECHOOSER,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_msg:='Funkcja umożliwia dodanie firmy do plików konfiguracyjnych webserwera.\nGdzie zainstalowany jest webserwer?'@;
_choice:=FUN.choice(_msg,,'Serwer'@,'Cienki klient'@);
_view:=obj_new('tab','win_red');
_view.tab:=tab_tmp(1,'DSN','STRING[50]','Nazwa źródła danych ODBC',
                     'SERVTYPE','STRING[2]','[A] WebAPI, [T] Webterm',
                     'SERWER','STRING[1]','Serwer/Cienki klient',
                     'PATTERN','STRING[4]','Kod firmy',
::                     'ZIP','STRING[255]','Ścieżka do paczki webservera (*.zip/*.tgz)',
                     'WEBSERW','STRING[195]','Ścieżka do folderu instalacji');

_view.tab.PATTERN:=FIRMA.SYMBOL;
_view.tab.DSN:='';
_view.tab.SERVTYPE:='A';
_view.tab.SERWER:='';
_view.tab.WEBSERW:='';
{? _choice=1
|| _view.tab.SERWER:='T';
   _on_server:=1
|? _choice=2
|| _view.tab.SERWER:='N';
   _on_server:=0
|| return(0)
?};
_sep:={? _view.tab.SERWER='T'
      || exec('sep','#file',2)
      || exec('sep','#file',0)
      ?};
_exe_dir:=exe_dir({? _view.tab.SERWER='T' || 1 || 0 ?});
{? fexists(_exe_dir-+exec('file_from_path','#file',_exe_dir)+_sep+'webserver')=2
|| _view.tab.WEBSERW:=_exe_dir-+exec('file_from_path','#file',_exe_dir)+_sep+'webserver'
?};
_odbc_tab:=exec('odbcdsn_tab','#firma');
{? sys_name({? _on_server || 2 || 0 ?})='WINDOWS'
|| exec('get_win_dsn','#firma',_odbc_tab,_on_server,'All')
|| exec('get_lin_dsn','#firma',_odbc_tab,_on_server)
?};
{? _odbc_tab.find_tab('first','PROPERTY',,'like','%ASNAME='+FIRMA.APP_IDEN+'%')
|| _view.tab.DSN:=_odbc_tab.NAME
?};
VAR_DEL.delete('_odbc_tab');
_view.win_red:=_view.tab.mk_edit('Instalacja MacroWebSERVER'@,0);
_view.tab.win_esep(_view.win_red,'WebSERVER - Firma '@+FIRMA.SYMBOL);
_view.tab.win_efld(_view.win_red,_view.tab,'SERVTYPE',,,,,0,'Który webserwer skonfigurować:'@,,,'radio-buttons',
                  'left_label=1','MacroWebAPI'@,"'A'",'webTerm'@,"'T'",'MacroWebAPI + webTerm'@,"'AT'");
_view.tab.win_efld(_view.win_red,_view.tab,'DSN',,,,,0,,,,0,'F3_button=1');
_view.tab.fld_fml('DSN','F3',"exec('odbc_f3','#firma',{? cur_tab().SERWER='T' || 1 || 0 ?},1)");
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'DSN');
::_view.tab.win_efld(_view.win_red,_view.tab,'ZIP',,,'50,50,195',,0,,,,0,'F3_button=1');
::_view.tab.fld_fml('ZIP','F3',
::              "_path:=exec('filechooser','#file','Wskaż paczkę instalacyjną webservera'@,0,'zip;tgz',,0,'FILES_ONLY');
::               {? _path<>'' || cur_tab().ZIP:=_path ?}");
::_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'ZIP');
::_view.tab.fld_fml('ZIP','AFTER_EDIT'," {? -cur_tab().ZIP*'.zip'=0 & -cur_tab().ZIP*'.tgz'=0
::                                       || FUN.emsg('Wskaż ścieżkę do paczki *.zip/*.tgz'@);
::                                          _res:=0
::                                       |? fexists('@'+cur_tab().ZIP)=1
::                                       || _res:=1
::                                       || FUN.emsg('Brak pliku '+cur_tab().ZIP+'.');
::                                          _res:=0
::                                       ?};
::                                       _res");
_view.tab.win_efld(_view.win_red,_view.tab,'WEBSERW',,,'50,50,195',,0,,,,0,'F3_button=1');
_view.tab.fld_fml('WEBSERW','F3',"
      _path:=exec('webserver_path','#firma',{? cur_tab().SERWER='T' || 1 || 0 ?});
      {? _path<>'' || cur_tab().WEBSERW:=_path ?}");
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'WEBSERW');
_view.tab.fld_fml('WEBSERW','AFTER_EDIT',"{? cur_tab().WEBSERW<>''
                                          || {? fexists( {? cur_tab().SERWER='T' || '' || '@' ?} + cur_tab().WEBSERW)=2
                                             || _res:=1
                                             || FUN.emsg('Brak katalogu '+cur_tab().WEBSERW+'.');
                                                _res:=0
                                             ?}
                                          || _res:=1
                                          ?};
                                           _res");
_btn_ok:=_view.tab.win_ebtn(_view.win_red,
               'text="%1",btn_label_align=center,panel=bottom,align=end,edit=1'['OK'@@],'key:F2');
_view.tab.btn_eopt(_view.win_red,_btn_ok,'tooltip="%1"'['Zatwierdzenie okienka'@]);
_btn_cancel:=_view.tab.win_ebtn(_view.win_red,
           'text="%1",btn_label_align=center,panel=bottom,align=end,edit=1'['Anuluj'@@],'key:Esc');
_view.tab.btn_eopt(_view.win_red,_btn_cancel,'tooltip="%1"'['Zamknięcie okienka'@]);
_view.tab.win_edit(_view.win_red);
{? _view.tab.edit("chk_rec()")
|| _view.tab.add;
   _at:={? _view.tab.SERWER='T' || '' || '@' ?};
::   wersja z instalacją webserwera zakomentowana
::   _fname:=exec('file_from_path','#file',_view.tab.ZIP);
::   {? sys_name({? _on_server || 2 || 0 ?})='WINDOWS'
::   || _unpack:=funpack(_view.tab.ZIP+3,'@'+_view.tab.ZIP,{? _view.tab.SERWER='T' || '' || '@' ?} + _view.tab.WEBSERW)
::   || fcopy('@'+_view.tab.ZIP, exe_dir(1)+'/'+_fname ,0,0,1);
::      system(_at+'sh -c \"tar -xvzf '+ exe_dir(1)+'/'+_fname +' -C  '+_view.tab.WEBSERW+'"');
:::      komenda nie zawsze zwraca 0 więc sprawdzamy czy jest plik startup.bat
::      _unpack:=fexists(_at+_view.tab.WEBSERW+'/bin/startup.sh')=1;
::      ferase(exe_dir(1)+'/'+_fname,0)
::   ?};
::   {? _unpack
::   ||
:      przed uruchomieniem czasami trzeba ustawić czy webserwer dla merit czy xpertis
::      _res_b:=exec('webserver_config_before','#firma',{? _view.tab.SERWER='T' || 1 || 0 ?},_view.tab.WEBSERW,
::               _view.tab.DSN);
::      {? _res_b<>''
::      || FUN.emsg(_res_b);
::         return(~~)
::      ?};
::      {? sys_name({? _on_server || 2 || 0 ?})='WINDOWS'
::      || {? fexists(_at+_view.tab.WEBSERW+'/bin/startup.bat')=1
::         || system(_at+envget('@COMSPEC')+' /c "cd '+_view.tab.WEBSERW+'/bin && start startup.bat',0)
::         || FUN.emsg('Po rozpakowaniu paczki nie odnaleziono skryptu uruchamiającego startup.bat.'@);
::            return(~~)
::         ?}
::      || {? fexists(_at+_view.tab.WEBSERW+'/bin/startup.sh')=1
::         || system(_at+'sh -c " cd '+_view.tab.WEBSERW+'/bin && sh startup.sh"',0)
::         || FUN.emsg('Po rozpakowaniu paczki nie odnaleziono skryptu uruchamiającego startup.sh.'@);
::            return(~~)
::         ?}
::      ?};
::      _i:=0;
::      progress(_i,'Został wywołany skrypt uruchamiający serwer. Proszę czekać...'@,'Uruchamienie serwera'@);
::      {! |?
::         delay(1);
::         _check_files:=exec('webserver_check_files','#firma',{? _view.tab.SERWER='T' || 1 || 0 ?},_view.tab.WEBSERW,
::                        _view.tab.SERVTYPE*'T'>0,_view.tab.SERVTYPE*'A'>0);
::         _msg:='Został wywołany skrypt uruchamiający serwer. Proszę czekać...\n';
::         {? _check_files<>''
::         || _msg+='Oczekiwanie na utworzenie plików:\n'+gsub(_check_files,'Nie znaleziono pliku ','')
::         ?};
::         progress( _i/180*100,_msg,'Uruchamienie serwera'@);
::         _i+=1;
::         _check_files<>'' & _i<180
::      !};
::     {? _check_files=''
::     || delay(10);
::        prgs_clr();
::        {? sys_name({? _on_server || 2 || 0 ?})='WINDOWS'
::        || system(_at+envget('@COMSPEC')+' /c "cd '+_view.tab.WEBSERW+'/bin && start shutdown.bat',0)
::        || system(_at+'sh -c " cd '+_view.tab.WEBSERW+'/bin && sh shutdown.sh"',0)
::        ?}
::     || prgs_clr();
::        FUN.emsg(_check_files);
::        return(~~)
::     ?};
      _res:=exec('webserver_config','#firma',{? _view.tab.SERWER='T' || 1 || 0 ?},_view.tab.WEBSERW,_view.tab.DSN,
            _view.tab.SERVTYPE*'T'>0,_view.tab.SERVTYPE*'A'>0);
      {? _res=''
      || FUN.info('Konfiguracja zakończona powodzeniem. Zmiany będą widoczne po restarcie webserwera.'@)
      || ~~
      ?}
::   ||  FUN.emsg('Błąd podczas rozpakowywania pliku '@+_view.tab.ZIP)
::   ?}
?};
~~


\webserver_path
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JD [23.25]
:: OPIS: Wybieranie ścieżki do wypakowania webserwera
::   WE: _a [1/0] - instalacja na serwerze (1) czy na cienkim klientcie (0)
::   WY: _path - ścieżka do folderu gdzie wypakowany będzie webserwer
:: ~OST: INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
_path:='';
_on_server:=_a;
{? _on_server=0
|| ctr_set('!application', 'filechooser','reset');
   ctr_set('!application', 'filechooser', 'setFileSelectionMode','DIRECTORIES_ONLY');
   ctr_set('!application', 'filechooser', 'setDialogTitle', 'Wybór katalogu');
   _ret:=ctr_call('!application', 'filechooser','showOpenDialog');
   {? _ret
   || _path:=ctr_call('!application', 'filechooser','getSelectedFile')
   ?}
|| FUN.info('Proszę o ręczne wpisanie ścieżki do webserver-a.'@)
?};
_path


\webserver_check_files
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JD [23.25]
:: OPIS: Sprawdza czy istnieją pliki konfiguracyjne webserwera
::   WE: _a [1/0] - instalacja na serwerze (1) czy na cienkim kliencie (0)
::       _b - ścieżka do katalogu webserwera
::       _c [0/1] - webterm
::       _d [0/1] - macrowebapi
::   WY: _res, pusty string lub komunikaty o błędach
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_on_server:=_a;
_path:=_b;
_webterm:=_c;
_webapi:=_d;
{? ~_on_server || _path:='@'+_path ?};
{? _webterm
|| {? fexists(_path+'/webterm/mbase.xml')<>1
   || _res+='Nie znaleziono pliku mbase.xml\n'
   ?};
   {? fexists(_path+'/webterm/webterm.properties')<>1
   || _res+='Nie znaleziono pliku webterm.properties\n'
   ?}
?};
{? _webapi
|| {? fexists(_path+'/macrowebapi/mbase-merit.xml')<>1
   || _res+='Nie znaleziono pliku mbase-merit.xml\n'
   ?};
   {? fexists(_path+'/macrowebapi/application-merit.properties')<>1
   || _res+='Nie znaleziono pliku application-merit.properties\n'
   ?}
?};
_res


\webserver_config_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS:  Konfiguracja pliku /conf/context.xml przed uruchomieniem serwera
::   WE:  _a [1/0] - instalacja na serwerze (1) czy na cienkim klientcie (0)
::        _b - ścieżka do katalogu webserwera
::        _c - nazwa źródła danych odbc
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_on_server:=_a;
_path:=_b;
_odbc_name:=_c;
_wiersz:='';
{? ~_on_server || _path:='@'+_path ?};
_pth_context_in:=_path+'/conf/context.xml';
_pth_context_out:=_pth_context_in+'.new';
_context:=fopen(_pth_context_in,'ur',,);
{? _context
|| _context_out:=fopen(_pth_context_out,'uw',0);
   {? _context_out
   || _name:=0;
      _url:=0;
      {! |? (_wiersz:=fread(_context))<>'\n'
      |! fwrite(_context_out,gsub(gsub(_wiersz,'merit001',_odbc_name),'mbase:jdbc:odbc:xpertis','mbase:jdbc:odbc:'
                                                                                                      +_odbc_name))
      !};
      fclose(_context_out)
   || _res+='Błąd edycji context.xml\n'
   ?};
   fclose(_context)
|| _res+='Błąd podczas otwierania pliku context.xml\n'
?};
{? _res=''
|| fcopy(_pth_context_in,_pth_context_in+'.old',0,0,1);
   fcopy(_pth_context_out,_pth_context_in,0,0,1);
   ferase(_pth_context_out)
|| ferase(_pth_context_out)
?};
_res


\webserver_config
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JD [23.25]
:: OPIS: Konfigurowanie plików webserwera
::   WE:  _a [1/0] - instalacja na serwerze (1) czy na cienkim klientcie (0)
::        _b - ścieżka do katalogu webserwera
::        _c - nazwa źródła danych odbc
::        _d [0/1] - webterm
::        _e [0/1] - macrowebapi
::   WY: _res, pusty string lub komunikaty o błędach
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_on_server:=_a;
_path:=_b;
_odbc_name:=_c;
_webterm:=_d;
_webapi:=_e;
_wiersz:='';
{? ~_on_server || _path:='@'+_path ?};
{? _webterm
|| _pth_mbase_in:=_path+'/webterm/mbase.xml';
   _pth_mbase_out:=_pth_mbase_in+'.new';
   _mbase:=fopen(_pth_mbase_in,'ur',,);
   _pth_webterm_prop_in:=_path+'/webterm/webterm.properties';
   _pth_webterm_prop_out:=_pth_webterm_prop_in+'.new';
   _webterm_prop:=fopen(_path+'/webterm/webterm.properties','ur',,)
?};
{? _webapi
|| _pth_mbase_merit_in:=_path+'/macrowebapi/mbase-merit.xml';
   _pth_mbase_merit_out:=_pth_mbase_merit_in+'.new';
   _mbase_merit:=fopen(_pth_mbase_merit_in,'ur',,);
   _pth_app_merit_prop_in:=_path+'/macrowebapi/application-merit.properties';
   _pth_app_merit_prop_out:=_pth_app_merit_prop_in+'.new';
   _app_merit_prop:=fopen(_pth_app_merit_prop_in,'ur',,)
?};
{? _webterm
|| {? _mbase
   || _mbase_out:=fopen(_pth_mbase_out,'uw',0);
      {? _mbase_out
      || _name:=0;
         _url:=0;
         {! |? (_wiersz:=fread(_mbase))<>'\n'
         |! {? _wiersz='<mbase>'
            || fwrite(_mbase_out,_wiersz);
               fwrite(_mbase_out,'');
               fwrite(_mbase_out,'\t<connection>');
               fwrite(_mbase_out,'\t\t<name>mbase:jdbc:odbc:%1</name>'[_odbc_name]);
               fwrite(_mbase_out,'\t\t<url>jdbc:mbase:%1</url>'[_odbc_name]);
               fwrite(_mbase_out,'\t\t<max>15</max>');
               fwrite(_mbase_out,'\t\t<init>2</init>');
               fwrite(_mbase_out,'\t\t<lease-time>300</lease-time>');
               fwrite(_mbase_out,'\t</connection>')
            || fwrite(_mbase_out,_wiersz)
            ?}

         !};
         fclose(_mbase_out)
      || _res+='Błąd edycji mbase.xml\n'
      ?};
      fclose(_mbase)
   || _res+='Błąd podczas otwierania pliku mbase.xml\n'
   ?};
   {? _webterm_prop
   || _webterm_prop_out:=fopen(_pth_webterm_prop_out,'uw',0);
      {? _webterm_prop_out
      || {! |? (_wiersz:=fread(_webterm_prop))<>'\n' |!
            {? _wiersz*'app_list' & 1+_wiersz<>'#'
            || fwrite(_webterm_prop_out,_wiersz+','+_odbc_name)
            || fwrite(_webterm_prop_out,_wiersz)
            ?}
         !};
         fclose(_webterm_prop_out)
      || _res+='Błąd edycji webterm.properties\n'
      ?};
      fclose(_webterm_prop)
   || _res+='Błąd podczas otwierania pliku webterm.properties\n'
   ?}
?};
{? _webapi
|| {? _mbase_merit
   || _mbase_merit_out:=fopen(_pth_mbase_merit_out,'uw',0);
      {? _mbase_merit_out
      || _name:=0;
         _url:=0;
         {! |? (_wiersz:=fread(_mbase_merit))<>'\n'
         |! {? _wiersz='<mbase>'
            || fwrite(_mbase_merit_out,_wiersz);
               fwrite(_mbase_merit_out,'');
               fwrite(_mbase_merit_out,'\t<connection>');
               fwrite(_mbase_merit_out,'\t\t<name>mbase:jdbc:odbc:%1</name>'[_odbc_name]);
               fwrite(_mbase_merit_out,'\t\t<url>jdbc:mbase:%1</url>'[_odbc_name]);
               fwrite(_mbase_merit_out,'\t\t<max>15</max>');
               fwrite(_mbase_merit_out,'\t\t<init>2</init>');
               fwrite(_mbase_merit_out,'\t\t<lease-time>300</lease-time>');
               fwrite(_mbase_merit_out,'\t</connection>')
            || fwrite(_mbase_merit_out,_wiersz)
            ?}
         !};
         fclose(_mbase_merit_out)
      || _res+='Błąd edycji mbase-merit.xml\n'
      ?};
      fclose(_mbase_merit)
   || _res+='Błąd podczas otwierania pliku mbase-merit.xml\n'
   ?};
   {? _app_merit_prop
   || _app_merit_prop_out:=fopen(_pth_app_merit_prop_out,'uw',0);
      {? _app_merit_prop_out
      || {! |? (_wiersz:=fread(_app_merit_prop))<>'\n' |!
            {? _wiersz*'macrowebapi.applications' & 1+_wiersz<>'#'
            || fwrite(_app_merit_prop_out,_wiersz+',%1'[_odbc_name])
            || fwrite(_app_merit_prop_out,_wiersz)
            ?}
         !};
         fclose(_app_merit_prop_out)
      || _res+='Błąd edycji mbase-merit.xml\n'
      ?};
      fclose(_app_merit_prop)
   || _res+='Błąd podczas otwierania pliku application-merit.properties\n'
   ?}
?};
{? _res=''
|| {? _webterm
   || fcopy(_pth_mbase_in,_pth_mbase_in+'.old',0,0,1);
      fcopy(_pth_mbase_out,_pth_mbase_in,0,0,1);
      ferase(_pth_mbase_out);
      fcopy(_pth_webterm_prop_in,_pth_webterm_prop_in+'.old',0,0,1);
      fcopy(_pth_webterm_prop_out,_pth_webterm_prop_in,0,0,1);
      ferase(_pth_webterm_prop_out)
   ?};
   {? _webapi
   || fcopy(_pth_mbase_merit_in,_pth_mbase_merit_in+'.old',0,0,1);
      fcopy(_pth_mbase_merit_out,_pth_mbase_merit_in,0,0,1);
      ferase(_pth_mbase_merit_out);
      fcopy(_pth_app_merit_prop_in,_pth_app_merit_prop_in+'.old',0,0,1);
      fcopy(_pth_app_merit_prop_out,_pth_app_merit_prop_in,0,0,1);
      ferase(_pth_app_merit_prop_out)
   ?}
|| {? _webterm
   || ferase(_pth_mbase_out);
      ferase(_pth_webterm_prop_out)
   ?};
   {? _webapi
   || ferase(_pth_mbase_merit_out);
      ferase(_pth_app_merit_prop_out)
   ?}
?};
_res


\odbc_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Wybór połączenia odbc
::   WE: _a [1/0] - instalacja na serwerze (1) czy na cienkim klientcie (0)
::      [_b] - czy dodać akcję Wybierz
::   WY:
:: ~OST: INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_on_server:=_a;
_view:=obj_new('tab','win_wer');
_view.tab:=exec('odbcdsn_tab','#firma');
_view.win_wer:=_view.tab.mk_sel('Wybór ODBC'@,'N',,,,,,0,'U',,,,,'normal');
_view.tab.win_fld(_view.win_wer,_view.tab,'NAME',,,20);
_view.tab.win_fld(_view.win_wer,_view.tab,'DRIVER',,,20);
_view.tab.win_fld(_view.win_wer,_view.tab,'PLATFORM',,,20);
_view.tab.win_fld(_view.win_wer,_view.tab,'DSNTYPE',,,20);
_view.tab.win_fld(_view.win_wer,_view.tab,'PROPERTY',,,100);
{? var_pres('_b')=type_of(1) & _b
|| _view.tab.win_act(_view.win_wer,0,'Formuła','Wybierz'@,,,,"sel_exit()",1,,,,'W')
?};
params_set('on_server',_on_server,'tab',_view.tab);
_view.tab.win_act(_view.win_wer,0,'Formuła','Dołącz'@,,,,"
         exec('odbc_add','#firma',params_get().on_server,params_get().tab)",,,,,'D');
_view.tab.win_act(_view.win_wer,1,'Formuła','Dołącz'@,,,,"
         exec('odbc_add','#firma',params_get().on_server,params_get().tab)",,,,,'D');
_view.tab.win_act(_view.win_wer,0,'Formuła','Edytuj'@,,,,"
         exec('odbc_edit','#firma',params_get().on_server,params_get().tab)",,,,,'E');
_view.tab.win_act(_view.win_wer,0,'Formuła','Usuń'@,,,,"
         exec('odbc_delete','#firma',cur_tab,params_get().on_server,1,1)",,,,,'U');
_view.tab.win_act(_view.win_wer,0,'Formuła','Test ODBC'@,,,,"
         _on_server:=params_get().on_server;
         {? sys_name({? _on_server || 2 || 0 ?})='WINDOWS'
         || _res:=exec('test_odbc_win','#firma',cur_tab().NAME,,_on_server)
         || _res:=exec('test_odbc_lin','#firma',cur_tab().NAME,_on_server)
         ?};
         {? _res
         || FUN.info('Połączenie udane.'@)
         || FUN.emsg('Połączenie nieudane.'@)
         ?}",,,,,'T');
::    dodanie rekordów do tabeli
{? sys_name({? _on_server || 2 || 0 ?})='WINDOWS'
|| exec('get_win_dsn','#firma',_view.tab,_on_server,'All')
|| exec('get_lin_dsn','#firma',_view.tab,_on_server)
?};
_view.tab.win_sel(_view.win_wer);
{? _view.tab.select()
|| _res:=_view.tab.NAME
?};
_res


\odbc_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JD [23.25]
:: OPIS: Edytowanie istniejącego źródła danych ODBC
::   WE: _a [1/0] - instalacja na serwerze (1) czy na cienkim klientcie (0)
::       _b [TABLE] - tabela zgodna z \odbcdsn_tab/#firma z ustawionym buforem
::   WY:
:: ~OST: INFILECHOOSER,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_on_server:=_a;
_dsn_list:=_b;
_sys_name:=sys_name({? _on_server || 2 || 0 ?});
_at:={? _on_server || '' || '@' ?};
{? _dsn_list.DSNTYPE='System' & (_on_server=0
                                 | _sys_name='WINDOWS'& exec('proc_own','#firma')*'SYSTEM'
                                 | exec('whoami','#firma',_on_server)<>'root'
                                )
|| FUN.info('Nie można poprawić połączenia systemowego.'@);
   return()
?};
_view:=obj_new('tab','win_red');
_drivers:=exec('odbc_drivers','#firma',_on_server);
_view.tab:=exec('dsn_tab','#firma');
{? _drivers.tab.find_tab('first','NAME',,'=',_dsn_list.DRIVER,'PLATFORM',,'like',
                                    {? _dsn_list.PLATFORM*'64' || '%64%' || '%32%' ?})
|| _view.tab.DRIVER:=_drivers.tab.NAME;
   _view.tab.PLATFORM:=_drivers.tab.PLATFORM
?};
_view.tab.NAME:=_dsn_list.NAME;
_properties:=_dsn_list.PROPERTY;
_properties:=STR.sub(_properties,'SCARD','<>SCARD');
_properties:=STR.sub(_properties,'LDAPLOGIN','<>LDAPLOGIN');
_properties:=STR.sub(_properties,'AS','<>AS');
_properties:=STR.sub(_properties,'ASCERTUSE','<>ASCERTUSE');
_properties:=STR.sub(_properties,'ASCERTPTH','<>ASCERTPTH');
_properties:=STR.sub(_properties,'ASNAME','<>ASNAME');
_properties:=STR.sub(_properties,'ASGROUP','<>ASGROUP');
_properties:=STR.sub(_properties,'ASADDRESS','<>ASADDRESS');
_properties:=STR.sub(_properties,'ASPORT','<>ASPORT');
_properties:=spli_str(_properties,'<>');
{! _ii:=1..obj_len(_properties) |!
   {? _properties[_ii]*'LDAPLOGIN='
   || _view.tab.LDAP:=#(_properties[_ii]*'='-_properties[_ii])
   |? _properties[_ii]*'ASCERTUSE='
   || _view.tab.ASCERTUS:=#(_properties[_ii]*'='-_properties[_ii])
   |? _properties[_ii]*'ASCERTPTH='
   || _view.tab.ASCERTPT:=_properties[_ii]*'='-_properties[_ii];
      {? _view.tab.ASCERTPT+1=' ' || _view.tab.ASCERTPT:=_view.tab.ASCERTPT-1 ?}
   |? _properties[_ii]*'ASNAME='
   || _view.tab.ASNAME:=_properties[_ii]*'='-_properties[_ii];
      {? _view.tab.ASNAME+1=' ' || _view.tab.ASNAME:=_view.tab.ASNAME-1 ?}
   |? _properties[_ii]*'ASGROUP='
   || _view.tab.ASGROUP:=(_properties[_ii]*'='-_properties[_ii]);
      {? _view.tab.ASGROUP+1=' ' || _view.tab.ASGROUP:=_view.tab.ASGROUP-1 ?}
   |? _properties[_ii]*'ASADDRESS='
   || _view.tab.ASADDRES:=(_properties[_ii]*'='-_properties[_ii]);
      {? _view.tab.ASADDRES+1=' ' || _view.tab.ASADDRES:=_view.tab.ASADDRES-1 ?}
   |? _properties[_ii]*'ASPORT='
   || _view.tab.ASPORT:=(_properties[_ii]*'='-_properties[_ii]);
      {? _view.tab.ASPORT+1=' ' || _view.tab.ASPORT:=_view.tab.ASPORT-1 ?}
   ?}
!};
::    okienko
exec('odbc_win','#firma',_view,_drivers,_on_server);
params_set('drivers',_drivers,'on_server',_on_server);
{? _view.tab.edit("_chk:=__CHK.record(cur_tab(),,'DRIVER','NAME','UID','PWD','ASNAME','ASGROUP',
                              'ASADDRES','ASPORT');
                   {? _chk<>'' & cur_tab().ASCERTUS=1 || _chk:=__CHK.record(cur_tab(),,'ASCERTPT') ?};
                   _chk")
|| {? sys_name({? _on_server || 2 || 0 ?})='WINDOWS'
   || {? exec('test_odbc_win','#firma',,_view.tab,_on_server)=0
      || FUN.emsg('Próba połączenia nieudana.'@);
         return(0)
      ?};
      _cmd:=_at+'powershell.exe -WindowStyle hidden "Remove-OdbcDsn -Name %1 -DsnType "User""'[_dsn_list.NAME];
      {? system(_cmd,1)=0
      || exec('add_win_dsn','#firma',_view.tab,_on_server)
      ?}
   || _serv_dir:=exe_dir(1);
      _lin_usr:=exec('whoami','#firma',_on_server);
      {? _lin_usr='root'
      || _sh:='odbcinst -u -s -l -n %1'[_dsn_list.NAME]
      || _sh:='odbcinst -u -s -h -n %1'[_dsn_list.NAME]
      ?};
      {? system(_sh,1)=0
      || exec('add_lin_dsn','#firma',_view.tab,_on_server,1,1)
      || FUN.emsg('Bład dodawania źródła odbc.'@)
      ?}
   ?}
?}


\odbc_delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JD [23.25]
:: OPIS: Usuwanie istniejącego źródła danych ODBC
::   WE: _a - tabela z ustawionym rekordem
::       _b [1/0] - instalacja na serwerze (1) czy na cienkim klientcie (0)
::       _c [1/0] - czy wyświetlać komunikaty
::       _d [1/0] - czy odświerzać zawartość tabeli
::   WY:
:: ~OST: INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_dsn_tab:=_a;
_dsn_name:=_dsn_tab.NAME;
_on_server:=_b;
_show:=_c;
_refresh:=_d;
_refresh_tab:={? _refresh || cur_tab ||  exec('odbcdsn_tab','#firma') ?};
_at:={? _on_server || '' || '@' ?};
_res:=0;
{? sys_name({? _on_server || 2 || 0 ?})='WINDOWS'
|| _cmd:=_at+'powershell.exe -WindowStyle hidden "Remove-OdbcDsn -Name %1 -DsnType "%2""'[_dsn_name,_dsn_tab.DSNTYPE];
   {? system(_cmd,1)=0
   ||
      {? _refresh_tab.first()
      || {! |? _refresh_tab.del(1) !}
      ?};
      exec('get_win_dsn','#firma',_refresh_tab,_on_server,'All');
      {? _dsn_tab.find_key(_dsn_name,)=0
      || {? _show || FUN.info('Usunięto źródło danych odbc o nazwie %1.'@[_dsn_name]) ?};
         _res:=1
      || {? _show || FUN.info('Błąd usuwania źródła danych odbc.'@) ?}
      ?}
   || {? _show || FUN.emsg('Błąd usuwania źródła danych odbc.'@) ?}
   ?}
|| _lin_usr:=exec('whoami','#firma',_on_server);
   {? _lin_usr='root'
   || _sh:='odbcinst -u -s -l -n %1'[_dsn_name]
   || _sh:='odbcinst -u -s -h -n %1'[_dsn_name]
   ?};
   {? system(_sh)=0
   || {? _refresh_tab.first()
      || {! |? _refresh_tab.del(1) !}
      ?};
      exec('get_lin_dsn','#firma',_refresh_tab,_on_server);
      {? _dsn_tab.find_key(_dsn_name,)=0
      || {? _show || FUN.info('Usunięto źródło danych odbc o nazwie %1.'@[_dsn_name]) ?};
         _res:=1
      || {? _show || FUN.info('Błąd usuwania źródła danych odbc.'@) ?}
      ?}
   ?}
?}


\odbc_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Akcja dołącz w widoku połączeń odbc
::   WE: _a [1/0] - instalacja na serwerze
::       _b - tabela z źródłami odbc
::       _c [1/0] - czy odświerzać zawartość tabeli
::   WY:
:: ~OST: INFILECHOOSER,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_on_server:=_a;
{? var_pres('_b')=type_of(SYSLOG)
|| _dsn_list:=_b;
   _dsn_names:=':';
   {? _dsn_list.first()
   || {! |?
      _dsn_names+=_dsn_list.NAME+':';
      _dsn_list.next()
      !}
   ?}
|| _dsn_names:=''
?};

_view:=obj_new('tab','win_red');
_drivers:=exec('odbc_drivers','#firma',_on_server);
_view.tab:=exec('dsn_tab','#firma');
::SCARD=0  0 - brak bezpiecznego zab., 1-zaznaczone bezpieczne zab. 2-zaznaczone bezp. zab. i karta
::LDAPLOGIN=0  ActiveDirectory
::AS=1  serwer aplikacji
::ASCERTUSE=0  ssl cert
::ASNAME=0merit1
::ASGROUP=firma
::ASADDRESS=localhost
::ASPORT=5580
::    wartości początkowwe
{? _drivers.tab.find_key('MacroBASE_'+gsub(run_info('version'),'.','_'))
|| _view.tab.DRIVER:=_drivers.tab.NAME;
   _view.tab.PLATFORM:=_drivers.tab.PLATFORM
?};
_view.tab.NAME:='merit'+FIRMA.SYMBOL;
_view.tab.ASNAME:=FIRMA.APP_IDEN;
_view.tab.ASGROUP:=app_info('cluster_group');
_view.tab.ASADDRES:=exec('server','#system').address;
_view.tab.ASPORT:=exec('server','#system').port;
_view.tab.ASCERTUS:=0;
::    okienko
exec('odbc_win','#firma',_view,_drivers,_on_server);
params_set('drivers',_drivers,'dsn_names',_dsn_names,'on_server',_on_server);
{? _view.tab.edit("_chk:=__CHK.record(cur_tab(),,'DRIVER','NAME','UID','PWD','ASNAME','ASGROUP',
                              'ASADDRES','ASPORT');
                   {? _chk<>'' & cur_tab().ASCERTUS=1 || _chk:=__CHK.record(cur_tab(),,'ASCERTPT') ?};
                   {? _chk<>'' & params_get().dsn_names*':%1:'[cur_tab.NAME]
                   || FUN.emsg('Źródło danych o nazwie %1 juz istnieje.'[cur_tab.NAME]);
                      return('NAME')
                   ?};_chk")
|| {? sys_name({? _on_server || 2 || 0 ?})='WINDOWS'
   || exec('add_win_dsn','#firma',_view.tab,_on_server)
   || exec('add_lin_dsn','#firma',_view.tab,_on_server,1,1)
   ?}
?}


\odbc_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: tworzy okno redagowania połączenia odbc
::   WE: _a - _view
::       _b - _drivers - tabela
::       _c - _on_server
::   WY:
:: ~OST: INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
_view:=_a;
_drivers:=_b;
_on_server:=_c;

_view.win_red:=_view.tab.mk_edit('Dodawanie połączenia ODBC'@,,,,,'normal');
_view.tab.win_efld(_view.win_red,_view.tab,'DRIVER',,,,,,,,,,'F3_button=1');
_view.tab.fld_fml('DRIVER','F3',"_view:=params_get().drivers;
                                 _view.tab.win_sel(_view.win_wer);
                                 {? _view.tab.select()
                                 || fld():=_view.tab.NAME+';'+_view.tab.PLATFORM;
                                    _view.tab.PLATFORM:=''
                                 ?};fld()");
_view.tab.fld_fml('DRIVER','AFTER_EDIT',"_drivers:=params_get().drivers;
                             {? fld()=''
                             || cur_tab.PLATFORM:=''
                             || {? cur_tab.PLATFORM='' | fld()*';'
                                || {? fld()*';'
                                   || _spli:=spli_str(fld(),';');
                                      {? _drivers.tab.find_tab('first','NAME',,'=',_spli[1],'PLATFORM',,'=',_spli[2])
                                      || fld():=_drivers.tab.NAME;
                                         cur_tab.PLATFORM:=_drivers.tab.PLATFORM
                                      ?}
                                   || {? _drivers.tab.find_tab('first','NAME',,':*',fld())
                                      || fld():=_drivers.tab.NAME;
                                         cur_tab.PLATFORM:=_drivers.tab.PLATFORM
                                      ?}
                                   ?}
                                || {? _drivers.tab.find_tab('first','NAME',,'=',fld(),'PLATFORM',,'=',cur_tab.PLATFORM)
                                   || fld():=_drivers.tab.NAME;
                                      cur_tab.PLATFORM:=_drivers.tab.PLATFORM
                                   ?}
                                ?}
                             ?}
                                         ");
_view.tab.win_efld(_view.win_red,_view.tab,'PLATFORM',,,,,1,,1,,,);
_view.tab.win_efld(_view.win_red,_view.tab,'NAME');
_view.tab.win_efld(_view.win_red,_view.tab,'UID');
_view.tab.win_efld(_view.win_red,_view.tab,'PWD',,,,,,,,,'password');
_view.tab.win_efld(_view.win_red,_view.tab,'LDAP',,,,,,,,,'check-box','left_label=1',"1","0");
_view.tab.win_efld(_view.win_red,_view.tab,'ASNAME');
_view.tab.win_efld(_view.win_red,_view.tab,'ASGROUP');
_view.tab.win_efld(_view.win_red,_view.tab,'ASADDRES');
_view.tab.win_efld(_view.win_red,_view.tab,'ASPORT');
_view.tab.win_efld(_view.win_red,_view.tab,'ASCERTUS',,,,,,,,,'check-box','left_label=1',"1","0");
_certpth_enable:="cur_tab().efld_opt(cur_win(),{? cur_tab().ASCERTUS=1 || 'enable=1   ' || 'enable=0' ?},,'ASCERTPT')";
_view.tab.fld_fml('ASCERTUS','AFTER_EDIT',_certpth_enable);
_f3:=exec('server','#system').address='localhost';
_view.tab.win_efld(_view.win_red,_view.tab,'ASCERTPT',,,50,,,,,,,
                  {? _f3 || 'F3_button=1' || '' ?});
_view.tab.fld_fml('ASCERTUS','BEFORE_DISPLAY',_certpth_enable);
{? _f3
|| _view.tab.fld_fml('ASCERTPT','F3',"_path:=exec('filechooser','#file','Wskaż plik certyfikatu (*der,*cer,*crt)'@,0,
                                    'der;cer;crt',,0,'FILES_ONLY');
                                    {? _path<>'' || cur_tab().ASCERTPT:=_path ?}")
?};
_view.tab.fld_fml('ASCERTPT','AFTER_EDIT',"{? cur_tab().ASCERTPT='' | fexists(cur_tab().ASCERTPT)<>0
                                           || _res:=1
                                           || FUN.emsg('Brak pliku '+cur_tab().ASCERTPT+'.');
                                              _res:=0
                                           ?};
                                           _res");
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'DRIVER');
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'PLATFORM');
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'NAME');
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'UID');
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'PWD');
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'ASNAME');
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'ASGROUP');
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'ASADDRES');
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'ASPORT');
_view.tab.efld_opt(_view.win_red,'mark=1',_view.tab,'ASCERTPT');
_btn_test:=_view.tab.win_ebtn(_view.win_red,'text="%1",icon="|flask-arrows-left-right",panel=bottom,align=begin'
   ['Test połączenia'@@],"{? cur_tab().ASCERTUS=1
                         || _chk:=__CHK.record(cur_tab(),,'DRIVER','NAME','UID','PWD','ASNAME','ASGROUP',
                              'ASADDRES','ASPORT','ASCERTPT')
                         || _chk:=__CHK.record(cur_tab(),,'DRIVER','NAME','UID','PWD','ASNAME','ASGROUP',
                              'ASADDRES','ASPORT')
                         ?};
                         {? _chk=''
                         || _on_server:=params_get().on_server;
                            {? sys_name({? _on_server || 2 || 0 ?})='WINDOWS'
                            || _res:=exec('test_odbc_win','#firma',,cur_tab(),_on_server)
                            || exec('add_lin_dsn','#firma',cur_tab(),_on_server,0,0);
                               _res:=exec('test_odbc_lin','#firma',cur_tab().NAME,_on_server);
                               exec('odbc_delete','#firma',cur_tab,_on_server,0,0)
                            ?};
                            {? _res
                            || FUN.info('Połączenie udane.'@)
                            || FUN.emsg('Połączenie nieudane.'@)
                            ?}
                         ?};''");
_btn_ok:=_view.tab.win_ebtn(_view.win_red,
               'text="%1",btn_label_align=center,panel=bottom,align=end,edit=1'['OK'@@],'key:F2');
_btn_cancel:=_view.tab.win_ebtn(_view.win_red,
           'text="%1",btn_label_align=center,panel=bottom,align=end,edit=1'['Anuluj'@@],'key:Esc');
_view.tab.win_edit(_view.win_red)


\odbc_drivers
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: tworzy tabelę i okno wertowania z wyborem sterownika ODBC
::   WE: _a - _on_server
::   WY:
:: ~OST: INFOPEN,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_on_server:=_a;
_at:={? _on_server || '' || '@' ?};
_workdir:={? _on_server
          || exec('workdir','%transfer')
          || tmp_dir()
          ?};
_sep:={? _on_server
      || exec('sep','#file',2)
      || exec('sep','#file',0)
      ?};
_view:=obj_new('tab','win_wer');
_view.tab:=tab_tmp(2,'NAME','STRING[50]','Nazwa sterownika',
                 'PLATFORM','STRING[10]','Wersja');

_view.win_wer:=_view.tab.mk_sel('Wybór ODBC'@,'N',,,,,,0,'U');
_view.tab.win_fld(_view.win_wer,_view.tab,'NAME',,,20);
_view.tab.win_fld(_view.win_wer,_view.tab,'PLATFORM',,,20);
_view.tab.win_act(_view.win_wer,0,'Formuła','Wybierz'@,,,,"sel_exit()",1,,,,'W');
::    dodanie rekordów do tabeli
{? sys_name({? _on_server || 2 || 0 ?})='WINDOWS'
|| system(_at+'powershell.exe -WindowStyle hidden "Get-OdbcDriver -Name "MacroBASE*"'
         +'| Export-Csv -Delimiter \';\' -Path "'+_workdir+_sep+'drivers.csv" -NoTypeInformation',1);
   _view.tab.import(_at+_workdir+_sep+'drivers.csv',,0,,'UTF-8,header,nopth',,
                     'NAME',,3,,
                     'PLATFORM',,4,);
   ferase(_at+_workdir+_sep+'drivers.csv')
|| _odbcinst:=fopen('/etc/odbcinst.ini','ur');
   {? _odbcinst
   || _view.tab.cntx_psh();
      {! |? (_wiersz:=fread(_odbcinst)) <> '\n'
      |! {? 1+_wiersz='['
         ||
            _view.tab.NAME:=1-_wiersz-1;
            _view.tab.PLATFORM:='32/64-bit';
            _view.tab.add()
         ?}
      !};
      _view.tab.cntx_pop();
      fclose(_odbcinst)
   ?}
?};
_view


\get_win_dsn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: pobiera zapisane połączenia dsn z windowsa
::   WE: _a [TABLE] - tabela do której zapisać wyniki {exec('odbcdsn_tab','#firma')}
::       _b [INTEGER] - [1]* z serwera, [0] - z cienkiego klienta
::       _c [STRING] - DsnType ['All' * /'System'/'User']
::   WY:
:: ~OST: INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_odbc_tab:=_a;
_on_server:=_b;
_dsntype:=_c;
_workdir:={? _on_server
          || exec('workdir','%transfer')
          || tmp_dir()
          ?};
_sep:={? _on_server
      || exec('sep','#file',2)
      || exec('sep','#file',0)
      ?};
_at:={? _on_server || '' || '@' ?};
system(_at+'powershell.exe -WindowStyle hidden "Get-OdbcDsn -DriverName "MacroBASE*" -DsnType "'+_dsntype+'"'
          +'| Export-Csv -Delimiter \';\' -Path "'+_workdir+_sep+'dsn.csv" -NoTypeInformation',1);
_odbc_tab.import(_at+_workdir+_sep+'dsn.csv',,0,,'UTF-8,header,nopth',,
                  'PROPERTY',,2,,
                  'DRIVER',,3,,
                  'DSNTYPE',,4,,
                  'NAME',,6,,
                  'PLATFORM',,7,);
ferase(_at+_workdir+_sep+'dsn.csv')


\get_lin_dsn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: pobiera zapisane połączenia dsn z linux'a
::   WE: _a [TABLE] - tabela do której zapisać wyniki {exec('odbcdsn_tab','#firma')}
::       _b [INTEGER] - [1]* z serwera, [0] - z cienkiego klienta
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_odbc_tab:=_a;
_on_server:=_b;
_lin_usr:=exec('whoami','#firma',_on_server);
{? _lin_usr='root'
|| _loop:=1
|| _loop:=2
?};
{! _i:=1.._loop |!
   {? _i=1
   || _odbc_ini_path:='/etc/odbc.ini'
   || _odbc_ini_path:='/home/%1/.odbc.ini'[_lin_usr]
   ?};
   _odbc_ini:=fopen(_odbc_ini_path,'r',0);
   {? _odbc_ini
   || _odbc_tab.cntx_psh();
      {! |? (_wiersz:=fread(_odbc_ini)) <> '\n'
      |! {? 1+_wiersz='['
         || _name:=1-_wiersz-1;
            {? _odbc_tab.find_tab('first','NAME',,'=',_name)
            || _put:=1
            || _put:=0
            ?};
            _odbc_tab.NAME:=_name;
            _prop:='';
            {! |? (_wiersz:=fread(_odbc_ini)) <> '' & _wiersz<>'\n'
            |!
               {? _wiersz*'DRIVER='
               || _odbc_tab.DRIVER:=(_wiersz*'=')-_wiersz
               |? _wiersz*'UID='=0 & _wiersz*'PWD='=0 & _wiersz*'UTF8X3='=0 & _wiersz*'ASCERTPTH='=0
               || _prop+=_wiersz+' '
               ?}
            !};
            {? _odbc_ini_path='/etc/odbc.ini'
            || _odbc_tab.DSNTYPE:='System'
            || _odbc_tab.DSNTYPE:='User'
            ?};
            _odbc_tab.PLATFORM:='32/64-bit';
            _odbc_tab.PROPERTY:=_prop;
            _odbc_tab.add()
         ?}
      !};
      _odbc_tab.cntx_pop();
      fclose(_odbc_ini)
   ?}
!}


\add_win_dsn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: dodanie połączenia dsn windows
::   WE: _a [TABLE] - tabela z parametrami zgodna z \dsn_tab/#firma
::       _b [1/0] - na serwerze [1], na cienkim klientcie [0]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_dsn_tab:=_a;
_on_server:=_b;
_reg_type:='';
_proc_own_string:='';
{? _on_server
|| _at:=''
|| _at:='@'
?};
{? _on_server
|| _proc_own_string:=exec('proc_own','#firma')
?};
_cmd:=_at+'powershell.exe -WindowStyle hidden "Add-OdbcDsn -Name "'+_dsn_tab.NAME
   +'" -Platform "'+_dsn_tab.PLATFORM+'" -DsnType "" -DriverName "'+_dsn_tab.DRIVER+'" '
   +'-SetPropertyValue @("""AS=1""","""ASADDRESS='+_dsn_tab.ASADDRES+'""","""ASCERTUSE='+$_dsn_tab.ASCERTUS
   +{? _dsn_tab.ASCERTUS || '""","""ASCERTPTH='+_dsn_tab.ASCERTPT || '' ?}
   +'""","""ASGROUP='+_dsn_tab.ASGROUP+'""","""ASNAME='+_dsn_tab.ASNAME
   +'""","""ASPORT='+_dsn_tab.ASPORT+'""","""LDAPLOGIN='+$_dsn_tab.LDAP+'""","""SCARD=0""")"';
{? _on_server=0
|| 'gdy na cienkim klientcie to w ciemno próba dodania systemowego odbc, jeśli się nie uda to odbc uzytkownika';
   _cmd:=gsub(_cmd,'-DsnType ""','-DsnType "System"');
   {? system(_cmd,1)=0
   || _reg_type:='HKEY_LOCAL_MACHINE';
      _add_res:=1
   || _cmd:=gsub(_cmd,'-DsnType "System"','-DsnType "User"');
      _reg_type:='HKEY_CURRENT_USER';
      _add_res:=~system(_cmd,1)
   ?}
|? _proc_own_string*'SYSTEM'
|| _cmd:=gsub(_cmd,'-DsnType ""','-DsnType "System"');
   _reg_type:='HKEY_LOCAL_MACHINE';
   _add_res:=~system(_cmd,1)
|| _cmd:=gsub(_cmd,'-DsnType ""','-DsnType "User"');
   _reg_type:='HKEY_CURRENT_USER';
   _add_res:=~system(_cmd,1)
?};
{? _add_res
   & system(_at+'reg add '+_reg_type+'\\Software\\ODBC\\ODBC.INI\\'+_dsn_tab.NAME+' /v PWD /d '+_dsn_tab.PWD
   +' /f /reg:'+{? _dsn_tab.PLATFORM*'64' || '64' || '32' ?},1)=0
   & system(_at+'reg add '+_reg_type+'\\Software\\ODBC\\ODBC.INI\\'+_dsn_tab.NAME+' /v UID /d '+_dsn_tab.UID
   +' /f /reg:'+{? _dsn_tab.PLATFORM*'64' || '64' || '32' ?},1)=0
||
   {? cur_tab.first()
   || {! |? cur_tab.del(1) !}
   ?};
   exec('get_win_dsn','#firma',cur_tab,_on_server,'All');
   cur_tab().find_key(_dsn_tab.NAME,);
   FUN.info('Dodano ODBC o nazwie "'@+_dsn_tab.NAME+'".')
|| FUN.emsg('Nieudana próba dodania ODBC.'@)
?}


\add_lin_dsn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: dodanie połączenia dsn linux
::   WE: _a [TABLE] - tabela z parametrami zgodna z \dsn_tab/#firma
::       _b [1/0] - na serwerze [1], na cienkim klientcie [0]
::       _c [1/0] - czy wyświetlać komunikaty
::       _d [1/0] - czy odświerzać zawartość tabeli
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_dsn_tab:=_a;
_on_server:=_b;
_show:=_c;
_refresh:=_d;
_res:=0;
_at:={? _on_server || '' || '@' ?};
_as_dsn_path:=exe_dir(1)+'/as_dsn.ini';
_as_dsn_out_path:=_as_dsn_path+'.new';
_as_dsn_out:=fopen(_as_dsn_out_path,'Uw',0);
_wiersz:='';
_lin_usr:=exec('whoami','#firma',_on_server);
_serv_dir:=exe_dir(1);
fwrite(_as_dsn_out,'DSN_NAME='+_dsn_tab.NAME);
fwrite(_as_dsn_out,'USER_DSN='+{? _lin_usr='root' || '0' || '1' ?});
fwrite(_as_dsn_out,'USER_NAME='+_dsn_tab.UID);
fwrite(_as_dsn_out,'USER_PWD='+_dsn_tab.PWD);
fwrite(_as_dsn_out,'LDAPLOGIN='+_dsn_tab.LDAP);
fwrite(_as_dsn_out,'ASNAME='+_dsn_tab.ASNAME);
fwrite(_as_dsn_out,'ASGROUP='+_dsn_tab.ASGROUP);
fwrite(_as_dsn_out,'ASADDRESS='+_dsn_tab.ASADDRES);
fwrite(_as_dsn_out,'ASPORT='+_dsn_tab.ASPORT);
fwrite(_as_dsn_out,'ASCERTPTH='+_dsn_tab.ASCERTPT);
fwrite(_as_dsn_out,'UTF8X3=');
fwrite(_as_dsn_out,'DRIVER_NAME='+_dsn_tab.DRIVER);
fwrite(_as_dsn_out,'AS=1');
fclose(_as_dsn_out);
_sh:=_at+'sh -c " %1/install_dsn.sh %1/as_dsn.ini.new" '[_serv_dir];
{? system(_sh)=0
|| _res:=1;
   {? cur_tab.first()
   || {! |? cur_tab.del(1) !}
   ?};
   exec('get_lin_dsn','#firma',{? _refresh || cur_tab || exec('odbcdsn_tab','#firma') ?} ,_on_server);
   {? _refresh || cur_tab.find_key(_dsn_tab.NAME,) ?};
   ferase(_as_dsn_out_path);
   {? _show || FUN.info('Dodano źródło danych ODBC o nazwie "'@+_dsn_tab.NAME+'".') ?}
|| {? _show || FUN.emsg('Nieudana próba dodania nowego źródła danych ODBC.'@) ?}
?};
_res


\test_odbc_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: test połączenia odbc. Wymagany jeden z dwóch parametrów
::   WE: [_a] - [STRING] nazwa zapisanego odbc
::       [_b] - [TABLE] tabela z polami
::       _c - [1/0] czy na serwerze
::   WY: 1/0
:: ~OST: INSYSTEM
::----------------------------------------------------------------------------------------------------------------------
{? _c=1
|| _at:=''
|| _at:='@'
?};
{? var_pres('_a')=type_of('')
|| _dsn:=_a;
   system(_at+'powershell.exe -WindowStyle hidden "$connection = New-Object -TypeName System.Data.Odbc.OdbcConnection '
      +'-ArgumentList "DSN='+_dsn+'" ;$connection.Open()" ',1)=0
|| _tab:=_b;
   _cmd:=_at+'Cmd /c "powershell.exe -WindowStyle hidden "'+
   '$connectionString = """DRIVER='+_tab.DRIVER+';UID='+_tab.UID+';PWD='+_tab.PWD+';AS=1;PTH=;ASNAME='+_tab.ASNAME
         +';ASGROUP='+_tab.ASGROUP+';ASADDRESS='+_tab.ASADDRES+';ASPORT='+_tab.ASPORT+';ASCERTUSE='+$_tab.ASCERTUS
         +';ASCERTPTH='+_tab.ASCERTPT+';TPWD=0""";'+
   '$connection = New-Object -TypeName System.Data.Odbc.OdbcConnection -ArgumentList $connectionString;'+
   '$connection.Open() " "';
   system(_cmd,1)=0
?}


\test_odbc_lin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: test połączenia odbc. Wymagany jeden z dwóch parametrów
::   WE: _a - [STRING] nazwa zapisanego odbc
::       _b - [1/0] czy na serwerze
::   WY:
:: ~OST: INSYSTEM
::----------------------------------------------------------------------------------------------------------------------
_dsn:=_a;
{? _b=1
|| _at:=''
|| _at:='@'
?};
system(_at+'isql '+_dsn,1)=0


\proc_own
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: znajduje uprawnienia do procesu mblaunch.exe
::   WE:
::   WY: [STRING]
::----------------------------------------------------------------------------------------------------------------------
_proc_own_string:='';
{? system(envget('COMSPEC')+ ' /c  tasklist /FI "IMAGENAME eq mblaunch.exe" /V /FO CSV > '
      +exe_dir(1)+'\\proc_own.txt ',1)=0
|| _proc_own:=fopen(exe_dir(1)+'\\proc_own.txt','r',0);
   {? _proc_own
   ||
      {! |? (_wiersz:=fread(_proc_own))<>'\n'
      |! _proc_own_string+=_wiersz
      !};
      fclose(_proc_own)
   ?};
   ferase(exe_dir(1)+'\\proc_own.txt')
?};
_proc_own_string


\whoami
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: zwraca nazwę użytkownika który uruchomił serwer/cienkiego klienta. tylko dla Linux!
::   WE: [_a] - [1]* - serwer, [0] - cienki klient
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_at:={? _a || '' || '@' ?};
_lin_usr:='';
_serv_dir:=exe_dir(1);
_sh:=_at+'sh -c " whoami > %1/user.txt "'[_serv_dir];
system(_sh);
_user_txt:=fopen(_serv_dir+'/user.txt','r',0);
_lin_usr:=fread(_user_txt);
fclose(_user_txt);
ferase(_serv_dir+'/user.txt');
_lin_usr


\export_excel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: eksport danych wzorcowych
::   WE: _a - [STRING] - kod firmy wzorcowej
::       _b - [STRING] - kod firmy nowej
::       _c - [STRING] - identyfikatory imex do których ograniczyć działanie
::   WY:
:: ~OST: INFORK
::----------------------------------------------------------------------------------------------------------------------
_pattern:=_a;
_symbol:=_b;
_app_ident:=exec('firm_by_sym','#firma',_pattern);
{? _app_ident=''
|| return(0)
?};
_firm:=_b;
_filter:=~~;
{? var_pres('_c')=type_of('')
|| _filter:=_c
?};
_sep:=exec('sep','#file',2);
_files_cat:=pth_dir('server')-3+'f'+_symbol+_sep+'files';
fmkdir(_files_cat,'dane_import');
_path:=_files_cat+_sep+'dane_import';

FIRMA.cntx_psh();
{? REF.FIRMA().SYMBOL=_pattern
|| _fork:=0
|| _fork:=1
?};
FIRMA.cntx_pop();
{? _fork
|| fork_hide(_app_ident,'export_fork','#firma',_path,_filter)
|| exec('export_init','#excel_imex',,0,,,1,_filter,_path,1)
?};
{? fdir(_path,1,0).size || 1 || 0 ?}


\export_fork
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: eksport danych wzorcowych, formuła uruchamiana na firmie wzorcowej jeśli jest ona inna niż uruchomiona
::   WE: _a - STRING - ścieżka katalogu zapisu dla danych wzorcowych
::      [_b]- [STRING] - identyfikatory imex do których ograniczyć działanie
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_dir:=_a;
_filter:=~~;
{? var_pres('_b')=type_of('')
|| _filter:=_b
?};
exec('start_proces','b_proces',0);
exec('export_init','#excel_imex',,0,,,1,_filter,_dir,1)


\okr_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Dodanie okresów do dziedzin
::   WE: _a - tabela z parametrami dodawanej firmy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_res:='';
exec('init','!zws_par_aokr');
exec('ustal_licencje','!zws_par_aokr');
PAR_OKR.FKS:=_tab.FKS;
PAR_OKR.OBG:=_tab.OBG;
PAR_OKR.KAS:=_tab.KAS;
PAR_OKR.CTR:=_tab.CTR;
PAR_OKR.FST:=_tab.FST;
PAR_OKR.LSP:=_tab.LSP;
PAR_OKR.LZK:=_tab.LZK;
PAR_OKR.LMG:=_tab.LMG;
PAR_OKR.LUM:=_tab.LUM;
PAR_OKR.LOKR:=_tab.LOKR;
PAR_OKR.MSTART:=_tab.MSTART;
PAR_OKR.ROK:=_tab.ROK;
{? PAR_OKR.FKS || exec('fin_rok','!zws_par_aokr','FKS',PAR_OKR.ROK,PAR_OKR.MSTART,PAR_OKR.LOKR) ?};
{? PAR_OKR.CTR || exec('fin_rok','!zws_par_aokr','CTR',PAR_OKR.ROK,PAR_OKR.MSTART,PAR_OKR.LOKR) ?};
{? PAR_OKR.FST
|| _firma:=REF.FIRMA().SYMBOL;
   SRSR.cntx_psh(); SRST.cntx_psh();
   SRSR.use('srsrr'+_firma); SRST.use('srstr'+_firma);
   {? SRSR.lock(2,1) & SRST.lock(2,1)
   || exec('fin_rok','!zws_par_aokr','FST',PAR_OKR.ROK,PAR_OKR.MSTART,PAR_OKR.LOKR)
   || _res+=('Dołączenie nowego roku dla dziedziny środki trwałe niemożliwe.\n'
               'Przed tą operacją należy wstrzymać wszystkie prace w obszarze kartoteka środków.\n'@)
   ?};
   SRSR.unlock(); SRST.unlock();
   SRSR.cntx_pop(); SRST.cntx_pop()
?};
{? PAR_OKR.KAS || exec('fin_rok','!zws_par_aokr','KAS',PAR_OKR.ROK,PAR_OKR.MSTART,PAR_OKR.LOKR) ?};
{? PAR_OKR.OBG || exec('fin_rok','!zws_par_aokr','OBG',PAR_OKR.ROK,PAR_OKR.MSTART,PAR_OKR.LOKR) ?};
{? PAR_OKR.LMG || exec('log_rok','!zws_par_aokr','LMG') ?};
{? PAR_OKR.LSP || exec('log_rok','!zws_par_aokr','LSP') ?};
{? PAR_OKR.LZK || exec('log_rok','!zws_par_aokr','LZK') ?};
{? PAR_OKR.LUM || exec('log_rok','!zws_par_aokr','LUM') ?};
_res


\okro_f_g_automa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Automatycznie przypisywanie okresów firm do okresu grupy kapitałowej
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
FIRMA.cntx_psh();
ROK_F.cntx_psh();
FIRMA.index('SYMBOL');
FIRMA.prefix('000');
{? FIRMA.first
|| ROK_F.index('ROKPOCZ');
   ROK_F.prefix(FIRMA.ref(),date(,1,1));
   {? ROK_F.last()
   || _res:=exec('okro_f_g_automa', 'konsolidacja',1)
   || _res:=0
   ?}
?};
ROK_F.cntx_pop();
FIRMA.cntx_pop();
_res


\bl_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Ustawienie wartości początkowych dla parametrów
::   WE: _a - tabela z parametrami
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
firma0:=(REF.S_FIRMA().SYMBOL='000');
exec('init','!zws_par_aokr');
exec('ustal_licencje','!zws_par_aokr');
edfks:=edfst:=edctr:=edobg:=edkas:=edlmg:=edlsp:=edlzk:=edlum:=0;
_tab.FKS:=0;
_tab.OBG:=0;
_tab.KAS:=0;
_tab.CTR:=0;
_tab.FST=0;
_tab.LSP=0;
_tab.LZK=0;
_tab.LMG=0;
_tab.LUM=0;
PAR_OKR.LOKR:=12;
PAR_OKR.MSTART:=1;
PAR_OKR.ROK:=date()~1;
_tab.PLAN_GR:=0;
KST.blank();
XINFO.blank();
~~


\firm_by_sym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Zwraca FIRMA.APP_IDEN dla firmy o kodzie z parametru _a
::   WE: _a [STRING] - symbol firmy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_pattern:=_a;
_app_ident:='';
FIRMA.cntx_psh();
FIRMA.index('SYMBOL');
FIRMA.prefix();
FIRMA.f_clear();
FIRMA.first();
{? FIRMA.find_key(_pattern,)
|| _app_ident:=FIRMA.APP_IDEN
|| FUN.info('Brak firmy o symbolu '+_pattern+'.'@);
   _app_ident:=''
?};
FIRMA.cntx_pop();
_app_ident


\save_res
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Zapis parametrów dodawania nowej firmy
::   WE: [_a] - kod który identyfikuje rekord w FIRMPAR
::       [_b] - tabela z parametrami
::       [_c] - wynik
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('')
|| _kod:=_a
|| _kod:=''
?};
{? var_pres('_b')=type_of(KH)
|| _params:=_b
|| _params:=exec('param_tab','#firma');
   _params.add
?};
{? var_pres('_c')=type_of('')
|| _res:=_c
|| _res:=''
?};
_params.memo_set(_res,'WYNIK');
_params.memo_put();
exec('xml_t_decl','#xml_t');
_xml:=obj_new(@.CLASS.XML_T);
_xml.reset();
_root:=_xml.addElement('parametry',,,'');
{! _i:=1.._params.fld_num()
|!
   {? var_pres(_params.fld_acr(_i),_params)=var_pres('DESC',FIRMPAR)
   || _xml.addElement(_params.fld_acr(_i),_params.memo_txt(,1,_params.fld_acr(_i)),_root)
   || _xml.addElement(_params.fld_acr(_i),_params[_i],_root)
   ?};
   _xml.addAttr('Opis',_params.fld_name(_i))
!};
_xml.XML.first;
_xml_txt:=_xml.XML.xml_twrite(,,,'indentation=1');
{? _kod=''
|| _kod:=exec('get_elem','#firma',_xml_txt,'SYMBOL')
?};
FIRMPAR.cntx_psh;
FIRMPAR.index('KOD');
FIRMPAR.prefix(_kod,);
{? FIRMPAR.first()
|| _add:=0
|| _add:=1;
   FIRMPAR.KOD:=_kod
?};
FIRMPAR.WARTOSC:=_xml_txt;
{? _add
|| FIRMPAR.add()
|| FIRMPAR.put()
?};
FIRMPAR.memo_set(_xml_txt,'DESC');
FIRMPAR.memo_put();
_res:=FIRMPAR.memo_txt();
FIRMPAR.cntx_pop;
_res


\if_con_firm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Warunek elementu oczekującego na kontynuację procesu ZWS_FIRM_NEW. Sprawdza czy zakończyło się importowanie
::       danych do nowej firmy
::   WE: _a - xml z parametrami
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_xml_txt:=_a;
{? type_of(_xml_txt)<>type_of('') | _xml_txt=''
|| return('Błędny parametr')
?};
_kod:=exec('get_elem','#firma',_xml_txt,'SYMBOL');
FIRMPAR.cntx_psh;
FIRMPAR.index('KOD');
FIRMPAR.prefix(_kod);
{? FIRMPAR.first
|| {? FIRMPAR.size<>1
   || _res:='Nie odnaleziono lub brak parametrów w tabeli FIRMPAR dla firmy '+_kod+'.'
   |? FIRMPAR.KOD=(_kod+'_error')
   || _res:=1
::   || _res:='Błąd podczas konfiguracji nowej firmy.\n\n'+exec('get_elem','#firma',_xml_txt,'WYNIK')
   |? FIRMPAR.KOD=(_kod+'_end_ok')
   || _res:=1
   || _res:=0
   ?}
|| _res:='Nie odnaleziono rekordu z ustawionymi parametrami w tabeli FIRMPAR.'
?};
FIRMPAR.cntx_pop;
_res


\con_firm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Kontynuacja zakładania nowej firmy po restarcie serwera
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FIRMPAR.index('KOD');
_sym:=exec('firma_symbol','#firma');
FIRMPAR.prefix(_sym+'_to_do',);
{? _sym<>'' & app_info('app_ident')=('task'+_sym) & FIRMPAR.first()
|| 'sprawdzam czy jakis rekord jest zablokowany (przetwarzany)';
   {? ~FIRMPAR.lock(1,1)
   || {!
      |? delay(60);
         FIRMPAR.lock(1,1)=0
      !}
   ?};
::   pozostawiam blokadę tylko jednego rekordu
   FIRMPAR.r_lock(1,1);
   FIRMPAR.unlock();
   FIRMPAR.prefix(_sym);
   FIRMPAR.KOD:=_sym+'_start';
   FIRMPAR.put;
   FIRMPAR.memo_get();
   _xml_txt:=FIRMPAR.memo_txt();
   _params:=exec('xml2param','#firma',_xml_txt);
   _sep:=exec('sep','#file',2);
   _res:=exec('get_elem','#firma',_xml_txt,'WYNIK');
   ferase('procesy_import.log');
   _logs:=spli_str('excelspliter.log;TAB_HIST.log',';');
   _log_type:=spli_str('_num;_rest;_users',';');
   {! _i:=1..obj_len(_log_type)
   |! ferase(_logs[1]-4+_log_type[_i]+'.log');
      ferase(_logs[2]-4+_log_type[_i]+'.log')
   !};
   {? ~(_res*'Błąd')
   || _app_ident:=exec('firm_by_sym','#firma',_params.SYMBOL);
      {? _app_ident=''
      || _res+='Błąd. Nie odnaleziono firmy o kodzie '+_app_ident+'.\n';
                exec('save_res','#firma',FIRMPAR.KOD,_params,_res)
      ?};
      _ref:=REF.FIRMA;
      REF.FIRMA:=exec('firma_ref','#firma',_params.APP_IDEN);
      {? _params.ROLE_PAT=0 | _params.ROLE_PAT=2
      || _path:=pth_dir('merit.zip')+_sep+'dane_import'
      |? _params.ROLE_PAT=1
      || _path:=pth_dir('tran_dir.tra')+_sep+'usersimp'
      ?};
      exec('environment','#firma');
      {? _path<>''
      || _current:='[W trakcie] Import pliku users.xlsx.';
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
         _res_imp:={? _params.DATA=1
                   || exec('import_init','#excel_imex',~~,,1,,0,0,'users.xlsx',_path,2,1,_params.DATA_FIR)
                   || exec('import_init','#excel_imex',~~,,1,,0,0,'users.xlsx',_path,2,1,_params.PATTERN)
                   ?};
         {! _i:=1..obj_len(_logs)
         |! {? fexists(_logs[_i],1)
            || fcopy(_logs[_i],_logs[_i]-4+'_users.log',1,1,1);
               ferase(_logs[_i],1)
            ?}
         !}
      || _res_imp:=0
      ?};
      {? _res_imp=1
      || _res+='\nOK. Zaimportowano plik users.xlsx.\n'
      || _res+='\nBłąd. Błąd przy imporcie pliku users.xlsx.\n'
      ?};
      _res+=exec('read_KOMM','#firma');
      exec('save_res','#firma',FIRMPAR.KOD,_params,_res);
::      utworzenie lat i powiązanie okresów z okresami grupy
      {? ~(_res*'Błąd')
      || _current:='[W trakcie] Dodanie okresów pracy.';
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
         exec('okr_add','#firma',_params);
         {? _params.PLAN_GR
         || _current:='[W trakcie] Przypisanie okresów firmy do okresu grupy kapitałowej.';
            exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
            {? exec('okro_f_g_automa','#firma')
            || _res+='OK. Automatycznie przypisano okresy firmy do okresu grupy kapitałowej\n'
            || _res+='Błąd. Błąd automatycznego przypisywania okresów firmy do okresu grupy kapitałowej\n'
            ?};
            exec('save_res','#firma',FIRMPAR.KOD,_params,_res)
         ?}
      ?};
      {? ~(_res*'Błąd') & _params.PLAN_GR
      || _current:='[W trakcie] Kopiowanie planu kont grupy.';
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
         ROK_F.index('ROKPOCZ'); ROK_F.prefix(exec('firma_ref','#firma',_app_ident),date(,1,1));
         {? ROK_F.last()
         || ROK_F.PLAN_GR:='T';
            ROK_F.put;
            {? exec('am_rok','konsolidacja')=1
            || _res+='OK. Skopiowano plan kont grupy.\n'
            || _res+='Błąd. Błąd podczas kopiowania planu kont grupy.\n'
            ?}
         || _res+='Błąd. Błąd podczas kopiowania planu kont grupy. Brak roku bilansowego.\n'
         ?};
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res)
      ?};
::      import pozostałych danych
      {? ~(_res*'Błąd')
      || _current:='[W trakcie] Import pozostałych danych.';
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
         'jeszcze raz odświeżenie parametrów po imporcie użytkowników';
         exec('upgrade_usr','#params');
         exec('upgrade_apl','#params');
         _path:=pth_dir('merit.zip')+_sep+'dane_import';
         ferase(_path+exec('sep','#file',0)+'okresy.xlsx');
         ferase(_path+exec('sep','#file',0)+'users.xlsx');
         ferase(_path+exec('sep','#file',0)+'licencjobiorca.xlsx');
         _res_imp_rest:={? _params.DATA=1
                        || _result:=exec('import_init','#excel_imex',~~,,1,,1,0,,_path,2,1,_params.DATA_FIR)=1;
                           _komm_proc:=XLS_PROC_KOMM;
                           _result
                        || exec('import_init','#excel_imex',~~,,1,,0,0,,_path,2,1,_params.PATTERN)=1
                        ?};
         {? _res_imp_rest
         || _res+='OK. Zaimportowano pozostałe dane.\n'
         || _res+='Błąd. Błąd importu pozostałych danych.\n'
         ?};
         _res+=exec('read_KOMM','#firma');
         {! _i:=1..obj_len(_logs)
         |! {? fexists(_logs[_i],1)
            || fcopy(_logs[_i],_logs[_i]-4+'_rest.log',1,1,1);
               ferase(_logs[_i],1)
            ?}
         !};
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res)
      ?};
::      Dane licencjobiorcy
      {? ~(_res*'Błąd')
      || _current:='[W trakcie] Zapis danych licencjobiorcy.';
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
         do();
         _kst_err:='';
         exec('czytaj','#stalesys',,KST);
         exec('czytaj','#stalesys',,XINFO);
::      przepisanie parametrów zapisanych przy konfiguracji do zmiennej KST
         _kst_fld:='';
         {! _i:=1.. _params.fld_num()
         |! {? var_pres(_params.fld_acr(_i),KST)>-1
            || _kst_fld+=_params.fld_acr(_i)+',';
               {? var_pres(_params.fld_acr(_i),KST)=26 & _params[_i]<>0
::               jeśli złączenie
               || ($('KST.'+_params.fld_acr(_i)+'().cntx_psh()'))();
                  ($('KST.'+_params.fld_acr(_i)+'().prefix()'))();
                  {? ($('KST.'+_params.fld_acr(_i)+'().seek('+$_params[_i]+')'))()
                  || KST[exec('acr_no','#table',KST,_params.fld_acr(_i))]:=($('KST.'+_params.fld_acr(_i)+'().ref'))()
                  || undo();
                     {? _kst_err=''
                     || _kst_err+=_params.fld_name(_i)
                     || _kst_err+=', '+_params.fld_name(_i)
                     ?}
                  ?};
                  ($('KST.'+_params.fld_acr(_i)+'().cntx_pop()'))()
               || KST[exec('acr_no','#table',KST,_params.fld_acr(_i))]:=_params[_i]
               ?}
            ?}
         !};
         _kst_fld:=_kst_fld-1;
         _kst_spli:=spli_str(_kst_fld,',');
         {! _i:=1..obj_len(_kst_spli)
         |!  _od:=exec('zapisz','#stalesys',1,KST,_kst_spli[_i])
         !};
         XINFO.WIELKOSC:=_params.WIELKOSC;
         exec('zapisz','#stalesys',1,XINFO,'WIELKOSC');
         _res_kst:=do_state();
         end;
         {? _res_kst=1
         || _res+='OK. Zapisano dane licencjobiorcy.\n'
         || _res+='Błąd. Błąd zapisu danych licencjobiorcy.\n';
            {? _kst_err<>''
            || _res+='Nie uzupełniono wartości pól:\t'+_kst_err
            ?}
         ?};
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res)
      ?};
::      konfiguracja parametrów dla firmy
      {? ~(_res*'Błąd')
      || _current:='[W trakcie] Aktualiacja zawartości parametryzatora.';
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
         {? exec('aktualizuj','funpar',0)
         || _res+='OK. Zaktualizowano zawartość parametryzatora.\n'
         || _res+='Błąd. Błąd aktualizacji zawartości parametryzatora.\n'
         ?};
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res)
      ?};
      {? ~(_res*'Błąd')
      || _current:='[W trakcie] Dodanie firmy w schemacie podziałów organizacyjnycych PODZORG.';
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
         REF.FIRMA:=exec('firma_ref','#firma',_params.APP_IDEN);
         {? exec('PODZORG','#firma')=null
         || _res+='Błąd. Błąd dodania firmy w schemacie podziałów organizacyjnycych PODZORG.\n'
         || _res+='OK. Dodano firmę w schemacie podziałów organizacyjnycych PODZORG.\n'
         ?};
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res)
      ?};
::      Procesy
      {? ~(_res*'Błąd')
      || _current:='[W trakcie] Import procesów.';
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
         {? _params.DATA=0
         || FIRMA.cntx_psh();
            FIRMA.index('SYMBOL');
            {? FIRMA.find_key(_params.PATTERN,)
            || REF.FIRMA:=exec('firma_ref','#firma',_params.APP_IDEN);
               exec('copy_from_firm','#b_proc',FIRMA.ref,0,1,1,1);
               {? KOMM.TAB.find_tab('first','MESSAGE',,'=','Błędy')
                  & KOMM.TAB.find_tab('first','MESSAGE',,'=','Ostrzeżenia')
               ||  _res+='Uwaga. Podczas importu procesów wystąpiły błędy i ostrzeżenia. Dodano je w załączniku.\n'
               |? KOMM.TAB.find_tab('first','MESSAGE',,'=','Błędy')
               ||  _res+='Uwaga. Podczas importu procesów wystąpiły błędy. Dodano je w załączniku.\n'
               |? KOMM.TAB.find_tab('first','MESSAGE',,'=','Ostrzeżenia')
               ||  _res+='Uwaga. Podczas importu procesów wystąpiły ostrzeżenia. Dodano je w załączniku.\n'
               || _res+='OK. Zaimportowano procesy.\n'
               ?}
            || _res+='Błąd. Błąd importu procesów. Nie znaleziono firmy wzorcowej\n'
            ?};
            {? (_res*'Błąd') | (_res*'Uwaga')
            || KOMM.save('procesy_import.log')
            ?};
            FIRMA.cntx_pop()
         || {? _komm_proc.TAB.size>0
            ||  _res+='Uwaga. Podczas importu procesów wystąpiły komunikaty. Dodano je w załączniku.\n';
                _komm_proc.save('procesy_import.log')
            || _res+='OK. Zaimportowano procesy.\n'
            ?}
         ?};
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res)
      ?};
::      import parametrów numeracji dokumentów
      {? ~(_res*'Błąd')
      || _current:='[W trakcie] Import parametrów numeracji dokumentów.';
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
         _fun:=obj_new(1);
         _fun[1]:='ZWS_PAR_DOK_NUM';
          _res_imp_num:={? _params.DATA=1
                        || exec('import_init','#excel_imex',_fun,,1,,0,0,,_path,2,1,_params.DATA_FIR)=1
                        || exec('import_init','#excel_imex',_fun,,1,,0,0,,_path,2,1,_params.PATTERN)=1
                        ?};
         {? _res_imp_num
         || _res+='OK. Zaimportowano parametry numeracji dokumentów.\n'
         || _res+='Błąd. Błąd importu parametrów numeracji dokumentów.\n'
         ?};
         _res+=exec('read_KOMM','#firma');
         {! _i:=1..obj_len(_logs)
         |! {? fexists(_logs[_i],1)
            || fcopy(_logs[_i],_logs[_i]-4+'_num.log',1,1,1);
               ferase(_logs[_i],1)
            ?}
         !};
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res)
      ?};
      REF.FIRMA:=_ref;
::      połączenie raportów xls
      _current:='[W trakcie] Generowanie raportów importów.';
      exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
      _tab_hist:=exec('tab_hist','#firma');
      {! _i:=1..obj_len(_log_type)
      |! _file:=_logs[2]-4+_log_type[_i]+'.log';
         {? fexists(_file,1)
         || exec('import_messages','#excel_imex',_tab_hist,_file);
            ferase(_file,1)
         ?}
      !};
      {? _tab_hist.size()
      || VAR_DEL.delete('__TableImpHist');
         __TableImpHist:=_tab_hist;
         _funpar:=obj_new(1);
         _funpar[1]:='ZWS_IMP_HIST';
         exec('export_init','#excel_imex',_funpar,0,,,,,pth_dir('.log'),1);
         VAR_DEL.delete('__TableImpHist')
      ?};
      {? ~(_res*'Błąd')
      || exec('del_catal','%transfer',_path)
      ?};
      exec('save_res','#firma',FIRMPAR.KOD,_params,_res);
      ~~
   ?};
   FIRMPAR.r_unlock();
::      aktywacja nowej firmy
   {? ~(_res*'Błąd')
   ||
::      czekam i sprawdzam czy rozpoczeły się ewentualne importy w innych firmach
      delay(80);
      {? ~FIRMPAR.lock(1)
      || _current:='[W trakcie] Oczekiwanie na zakończenie konfiguracji innej firmy.';
         exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
         {!
         |? delay(60);
            FIRMPAR.lock(1)=0
         !}
      ?};
      FIRMPAR.unlock();
      _current:='[W trakcie] Aktywacja nowej firmy.';
      exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
      FIRMA.cntx_psh();
      FIRMA.prefix();
      {? FIRMA.seek(exec('firma_ref','#firma',_params.APP_IDEN))
      || FIRMA.A:='T';
         {? FIRMA.put
         || _res+='OK. Aktywowano nową firmę.\n'
         || _res+='Błąd. Błąd podczas aktywacji nowej firmy.\n'
         ?};
         exec('addFVerUpgrade','#upgrade',FIRMA.ref());
         exec('actdeactReal','#upgrade',FIRMA.ref())
      ?};
      FIRMA.cntx_pop;
      exec('save_res','#firma',FIRMPAR.KOD,_params,_res)
   ?};
::      zadania potransferowe
   {? ~(_res*'Błąd')
   || _current:='[W trakcie] Dodanie zadań potransferowych.';
      exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
      _res+=exec('tasks_new_firm','#firma',_params);
      exec('save_res','#firma',FIRMPAR.KOD,_params,_res)
   ?};
::      uruchomienie kolejek
   {? ~(_res*'Błąd')
   || _current:='[W trakcie] Uchomienie kolejek nowej firmy.';
      exec('save_res','#firma',FIRMPAR.KOD,_params,_res+'\n'+_current);
      _res+=exec('queue_start','#firma',exec('firma_ref','#firma',_params.APP_IDEN));
      exec('save_res','#firma',FIRMPAR.KOD,_params,_res)
   ?};
   {? _res*'Błąd'
   || FIRMPAR.KOD:=_sym+'_error'
   || FIRMPAR.KOD:=_sym+'_end_ok'
   ?};
   FIRMPAR.put()
?}


\xml2param
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Konwersja xml z parametrami na tabelę
::   WE: _a - xml
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('param_tab','#firma');
_xml_txt:=_a;
{! _i:=1.._params.fld_num()
|! {? var_pres(_params.fld_acr(_i),_params)=var_pres('DESC',FIRMPAR)
   || _params.memo_set(exec('get_elem','#firma',_xml_txt,_params.fld_acr(_i)),_params.fld_acr(_i))
   |? type_of(_params[_i])=type_of(1)
   || _params[_i]:=#exec('get_elem','#firma',_xml_txt,_params.fld_acr(_i))
   |? type_of(_params[_i])=type_of('')
   || _params[_i]:=exec('get_elem','#firma',_xml_txt,_params.fld_acr(_i))
   |? type_of(_params[_i])=type_of(date())
   || _data_str:=exec('get_elem','#firma',_xml_txt,_params.fld_acr(_i));
      _params[_i]:=date(#(4+_data_str),#(2+(5-_data_str)),#(_data_str+2))
   ?}
!};
_params.add();
_params.memo_put();
_params


\get_elem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: wyszukuje i zwraca treść elementu xml
::   WE: _a - [STRING] xml z elementami
::       _b - [STRING] nazwa elementu
::   WY: [STRING] - wartość elementu xml
::----------------------------------------------------------------------------------------------------------------------
_wynik:='';
_tab:=xml_tparse(_a);
{? _tab.find_tab(,'NAME',,'=',_b,'TYPE',,'=','E')
|| {? _tab.VTRUNC='N'
   || _wynik:=_tab.VAL
   || _file:=fopen(_tab.BVAL,'ur');
      {? _file
      || {? (_wiersz:=fread(_file))<>'\n'
         || {! |? _wynik+=_wiersz;
               {? (_wiersz:=fread(_file))<>'\n'
               || _wynik+='\n';1
               || 0
               ?}
            !}
         ?};
         fclose(_file)
      ?}
   ?}
?};
_wynik


\PODZORG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: dodanie firmy w schemacie podziałów organizacyjnycych PODZORG
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? REF.FIRMA
|| _fir:=REF.FIRMA
|| return(null)
?};

UD_TYP.clear();
UD_TYP.index('SYMBOL');
{? ~UD_TYP.find_key('PODZORG','PODZORG')
|| UD_TYP.blank();
   UD_TYP.SYMBOL:='PODZORG';
   UD_TYP.OPIS:='Jednostki organizacyjne';
   UD_TYP.POZIOM:='T';
   UD_TYP.OCHRONA:='T';
   UD_TYP.SYSTEM:='T';
   {? ~UD_TYP.add(1)
   || return(null)
   ?}
?};
_typ:=UD_TYP.ref();

UD_FIR.clear();
UD_FIR.index('UD_TYP');
UD_FIR.prefix(_fir);
{? UD_FIR.find_key(_typ)
|| return(UD_FIR.ref())
?};

_skl:=null;
_sym:=FIRMA.SYMBOL;
UD_SKL.index('SYMBOL');
UD_SKL.prefix(_typ);
{? ~UD_SKL.find_key(_sym,_sym)
|| UD_SKL.blank(1);
   UD_SKL.UD_TYP:=_typ;
   UD_SKL.SYMBOL:=_sym;
   UD_SKL.OPIS:=FIRMA.OPIS;
   UD_SKL.LISTA:='T';
   UD_SKL.AKTYWNY:='T';
   {? ~UD_SKL.add(1)
   || return(null)
   || _skl:=UD_SKL.ref
   ?}
|| _skl:=UD_SKL.ref
?};

UD_FIR.blank(1);
UD_FIR.FIRMA:=_fir;
UD_FIR.UD_SKL:=_skl;
{? ~UD_FIR.add(1)
|| return(null)
?};

UD_FIR.ref


\send_res_mail
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Wysyłka maila z wynikiem zakładania nowej firmy, na koniec usunięcie załączników
::   WE: _a - [STRING] aktualny wynik
::       _b - [STRING] stare parametry w xml, przed importem danych do nowej firmy
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_res:=_a;
_xml_txt:=_b;
_sep:=exec('sep','#file',2);
{? _xml_txt<>''
|| _params:=exec('xml2param','#firma',_xml_txt);
   _out:=0;
   exec('MAIL','#object');
   _args:=exec('add_email_a','#mailbox');
   _mails:=gsub(_params.EMAIL_RE,';',',');
   {? _mails*','
   || _tmp:=spli_str(_mails,',');
      _tab_rcv:=tab_tmp(,'ADDRESS','STRING[255]','Adres email');
      {! _i:=1..obj_len(_tmp)
      |! _tab_rcv.ADDRESS:=_tmp[_i];
         _tab_rcv.add()
      !};
      _args.RCV:=_tab_rcv
   || _args.RCV:=_mails
   ?};
   _args.FROM:=exec('get','#params',700002,2);
   {? _res*'Błąd'
   || _args.SUB:='[BŁĄD] Proces zakładania nowej firmy %1 zakończony niepowodzeniem.'@[_params.SYMBOL]
   || _args.SUB:='[OK] Proces zakładania nowej firmy %1 zakończony powodzeniem.'@[_params.SYMBOL]
   ?};
   _args.BODYT:='\t'+_args.SUB+'\n\n'+_res;
   _args.TEMPLATE:='template_error.htm';
::   załączniki
   _logs_list:='procesy_import.log,excelspliter_num.log,excelspliter_rest.log,excelspliter_users.log,proces.log'
                 +',_komunikaty.xlsx';
   _logs:=spli_str(_logs_list,',');
   _attach:=tab_tmp(1,'ATTACH','STRING[255]','Załączniki');
   {! _i:=1..obj_len(_logs)
   |! _pth:=gsub(pth_dir('.log')+_sep+_logs[_i],exec('firma_symbol','#firma'),_params.SYMBOL);
      {? fexists(_pth)=1
      || _attach.ATTACH:=_pth;
         _attach.add
      ?}
   !};
   {? _attach.size()
   || _args.ATTACH:=_attach
   ?};
:: Generowany mail "techniczny"
   _args.TRYB:='X';
   _args.SUB_PREFIX:=0;
   {? exec('add_email','#mailbox',_args)
   || _out:=exec('em_send_one','#mailbox',_args.REFERENCE)
   ?};
::   usunięcie załączników
   {! _i:=1..obj_len(_logs)
   |! _pth:=gsub(pth_dir('.log')+_sep+_logs[_i],exec('firma_symbol','#firma'),_params.SYMBOL);
      {? fexists(_pth)=1
      || ferase(_pth,0)
      ?}
   !};
   _out
|| 0
?}


\show_on_todo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Wyświetlenie informacji o zakończeniu przygotowywania danych dla nowej firmy
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_xml_txt:=_a;
{? type_of(_xml_txt)=type_of('')
|| _res:=exec('get_elem','#firma',_xml_txt,'WYNIK');
   _sym:=exec('get_elem','#firma',_xml_txt,'SYMBOL');
   _msg:='Przygotowywanie danych dla nowej firmy %1 zakończone powodzeniem:\n'[_sym]+_res
            +'\n\nBy kontynuować proces wymagany jest restart serwera.'@;
   FUN.info(_msg)
?}


\firm_res_refr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Przechwycenie wyniku dodawania nowej firmy
::   WE: _a - [STRING] stare parametry w xml, przed importem danych do nowej firmy
::   WY: _b - [STRING] nowe parametry w xml, po imporcie danych do nowej firmy
::----------------------------------------------------------------------------------------------------------------------
_old_xml:=_a;
_new_xml:='';
_kod:=exec('get_elem','#firma',_old_xml,'SYMBOL');
FIRMPAR.index('KOD');
FIRMPAR.prefix(_kod);
{? FIRMPAR.first()
|| FIRMPAR.memo_get();
   _new_xml:=FIRMPAR.memo_txt()
?};
_new_xml


\add_firm_res
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Przechwycenie wyniku dodawania nowej firmy
::   WE: _a - [STRING] stare parametry w xml, przed importem danych do nowej firmy
::   WY:      [STRING] wynik po imporcie danych do nowej firmy
::----------------------------------------------------------------------------------------------------------------------
_old_xml:=_a;
_new_xml:='';
_kod:=exec('get_elem','#firma',_old_xml,'SYMBOL');
FIRMPAR.index('KOD');
FIRMPAR.prefix(_kod);
{? FIRMPAR.first()
|| FIRMPAR.memo_get();
   _new_xml:=FIRMPAR.memo_txt()
?};
exec('get_elem','#firma',_new_xml,'WYNIK')


\environment
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Deklaacja obiektów wymaganych do importu eksportu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('VAR_DEL','#object');
__develop:=exec('is_develop','#var');
exec(,'#libfml');
exec(,'class');
exec(,'_declall');
exec('__CHK','#object');
exec('STR','#object');
exec('BIT','#object');
exec('MS','#object'); MS.conv:='UTF-8';
exec('PROGRESS','#object');
exec('FUN','#object');
exec('KOMM','#object');
exec('__FileLayer','#object');
exec('Plugin','#object');
exec('open_all_tabele','open_tab');
OPERATOR.USER:=exec('users','#users',exec('operatorKod','#users'));
exec('dane','dane_startowe');
exec('upgrade_usr','#params')


\show_instance
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Podgląd instancji nowej firmy
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FIRMPAR.memo_get();
_xml_txt:=FIRMPAR.memo_txt();
_params:=exec('xml2param','#firma',_xml_txt);

_wynik:=tab_tmp(1,'STATUS','STRING[100]','Status',
                  'DETAILS','SYS_MEMO','Szczegóły',
                  'BI_PROC','STRING[48]','BI_PROC.uidref');
_refresh:=" _wynik:=params_get().wynik;
            FIRMPAR.get();
            FIRMPAR.memo_get();
            _xml_txt:=FIRMPAR.memo_txt();
            _params:=exec('xml2param','#firma',_xml_txt);
            _wynik.BI_PROC:=_params.BI_PROC;
            _wynik.STATUS:=_params.SYMBOL + {? FIRMPAR.KOD*'_start'
                                            || ' rozpoczęto import danych'
                                            |? FIRMPAR.KOD*'_error'
                                            || ' import danych zakończony błędem'
                                            |? FIRMPAR.KOD*'_end_ok'
                                            || ' import danych zakończony sukcesem'
                                            |? FIRMPAR.KOD*'_to_do'
                                            || ' oczekiwanie na restart serwera lub rozpoczęcie importu'
                                            || ''
                                            ?};
            _params.memo_get;
            _details:='Wynik:\n'+_params.memo_txt+'\n\nParametry:\n';
            {! _i:=2.._params.fld_num()
            |! {? var_pres(_params.fld_acr(_i),_params)=var_pres('DESC',FIRMPAR)
               || ~~
               |? type_of(_params[_i])=type_of(1)
               || _details+=_params.fld_name(_i)+' = \"'+$_params[_i]+'\"\n'
               |? type_of(_params[_i])=type_of('')
               || _details+=_params.fld_name(_i)+' = \"'+_params[_i]+'\"\n'
               |? type_of(_params[_i])=type_of(date())
               || _details+=_params.fld_name(_i)+' = \"'+$_params[_i]+'\"\n'
               ?}
            !};
            _wynik.memo_set(_details);
            ''";
params_set('wynik',_wynik);
_refresh();
_win_red:=_wynik.mk_edit('Zakładanie nowej firmy - status przetwarzania'@,0);
_wynik.win_efld(_win_red,_wynik,'STATUS',,,80,0,0,,0);
_wynik.win_efld(_win_red,_wynik,'DETAILS',,,80,-25,0,,,,,);
:podgląd procesu
_rule_proc:="
   BI_PROC.prefix();
   {? BI_PROC.seek(params_get().wynik.BI_PROC)
   || exec('select4biproc_alt','#b_design',BI_PROC.ref)
   || FUN.info('Nie odnaleziono instancji procesu.'@)
   ?};''";
_btn1:=_wynik.win_ebtn(_win_red,'text="%1",btn_label_align=center,panel=bottom,align=begin,edit=1'['Podgląd procesu'@@]
                       ,_rule_proc);
_btn_refresh:=_wynik.win_ebtn(_win_red,'text="%1",btn_label_align=center,panel=bottom,align=begin,edit=1'['Odśwież'@@]
                       ,_refresh);
:: dodanie przycisku _btn_retry tylko gdy błąd przetwarzania
{? FIRMPAR.KOD*'_start' & FIRMPAR.r_lock(1,1)
|| FIRMPAR.r_unlock();
   _rety_rule:="
           FIRMPAR.KOD:=gsub(FIRMPAR.KOD,'_start','_to_do');
           {? FIRMPAR.put()
           || FUN.info('Zresetowano status przetwarzania firmy.\n'
                      +'Należy wykonać restart serwera, by rozpocząć ponowne przetwarzanie.'@)
           || FUN.info('Nieudana poprawa statusu.'@)
           ?};'key:Esc'";
   _btn_retry:=_wynik.win_ebtn(_win_red,'text="%1",btn_label_align=center,panel=bottom,align=end,edit=1'
                               ['Resetuj przetwarzanie'@@],_rety_rule)
?};
_btn_close:=_wynik.win_ebtn(_win_red,
         'text="%1",btn_label_align=center,panel=bottom,align=end,edit=1'['Zamknij'@@],'key:Esc');
_wynik.btn_eopt(_win_red,_btn_close,'tooltip="%1"'['Zamknięcie okienka'@]);
_wynik.win_edit(_win_red);
_wynik.edit()


\tab_hist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: zwraca pustą tabelę TAB_HIST
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env_hist:=obj_new('TRANSACTIONS','NDX_HIST1','NDX_HIST2','NDX_HIST3','NDX_HIST4','NDX_HIST5','NDX_HIST6','NDX_HIST7');
exec('tab_hist','#excel_imex',_env_hist,0,1)


\read_KOMM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: odczytuje KOMM_msg.log
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? _file:=fopen('KOMM_msg.log','ur',1,0)
|| {!
   |? _line:=fread(_file);
      _res+=_line+'\n';
      _line<>'\n'
   !};
   fclose(_file);
   ferase('KOMM_msg.log',1)
?};
_res


\retry_todo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: zadanie na TODO z decyzją czy ponowić zakładanie nowej firmy
::   WE: _a - [STRING] xml
::   WY: 0/1/2 - [2] - ponowić proces, [1] - nie ponawiać procesu, [0] - anulowanie bierzącej czynności
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('')
|| _xml_txt:=_a
|| return(0)
?};
_xml_txt:=exec('firm_res_refr','#firma',_xml_txt);
::_sep:=exec('sep','#file',2);
{? _xml_txt<>''
|| _params:=exec('xml2param','#firma',_xml_txt);
   _res:=exec('get_elem','#firma',_xml_txt,'WYNIK');
   _result:=FUN.choice('Podczas działania procesu zakładania nowej firmy wystąpiły problemy.\n'@
             +'Wynik procesu:\n'@
             +_res+'\n\n'
             +'Czy wznowić zakładanie nowej firmy?',,'Wznów proces','Zakończ proces'@);
::   wznowienie
   {? _result=1
   || FIRMPAR.cntx_psh();
      _sym:=exec('get_elem','#firma',_xml_txt,'SYMBOL');
      FIRMPAR.prefix(_sym);
      FIRMPAR.first();
      FIRMPAR.KOD:=_sym;
      FIRMPAR.put();
      FIRMPAR.cntx_pop();
      {? exec('firma_conf','#firma',_params.SYMBOL)=''
      || _result:=0
      ?}
   ?}
|| 1
?};
_result


\task_state
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [RR.xx]
:: OPIS: Zwraca tabelę ze stanem wykonania zadań automatycznych i manualnych firmy z parametru _a
::   WE: _a - symbol firmy
::   WY: tabela ze stanami zadań
::----------------------------------------------------------------------------------------------------------------------
_sql:='select FIRMA.SYMBOL as FSYMBOL,UPG_TASK.AUTO,UPG_TASK.SYSTEM,UPG_HEAD.VERSION,UPG_TASK.LP,UPG_REAL.STAN,
              UPG_REAL.INFRES,UPG_TASK.SYMBOL,UPG_REAL.DISABLED
       from UPG_REAL
       left join UPG_TASK using(UPG_TASK.REFERENCE,UPG_REAL.UPG_TASK)
       left join FIRMA using(FIRMA.REFERENCE,UPG_REAL.FIRMA)
       left join UPG_HEAD using(UPG_HEAD.REFERENCE,UPG_TASK.UPG_HEAD)
       where FIRMA.SYMBOL=\'%1\' and UPG_REAL.STAN=\'T\'
       order by UPG_TASK.AUTO,UPG_TASK.SYSTEM,UPG_HEAD.VERSION,UPG_TASK.LP
        '[_a];
sql(_sql)


\tasks_new_firm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [RR.xx]
:: OPIS: Dodaje i ustawia wynik zadań potransferowych jako przeniesiony z firmy źródłowej
::   WE: _a - tabela z parametrami
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=_a;
exec('__UPG','#object');
{? exec('init','#upgrade')=0
|| _res:='OK. Dodano zadania potransferowe.\n'
|| _res:='Błąd. Błąd podczas dodawania zadań potransferowych.\n'
?};
:: ustawienie statusów
{? _params.DATA=0
|| _task_state:=exec('task_state','#firma',_params.PATTERN);
   _refLogN:=exec('FindInSet','#table','UPG_LOG','END','N');
   _refLogX:=exec('FindInSet','#table','UPG_LOG','END','X');
   _arun:=_refLogN<>null() | _refLogX<>null();
   UPG_REAL.cntx_psh();
   UPG_VER.cntx_psh();
   UPG_REAL.index('S1');
   UPG_REAL.prefix(exec('firma_ref','#firma',_params.APP_IDEN));
   {? UPG_REAL.first()
   || {? _arun || exec('end_upgrade','zws') ?};
      _put:=_err:=0;
      _err_msg:='';
      {!
      |? {? _task_state.find_tab('first','SYMBOL',,'=',UPG_REAL.UPG_TASK().SYMBOL,
                                         'VERSION',,'=',UPG_REAL.UPG_TASK().UPG_HEAD().VERSION)
         || UPG_REAL.STAN:='T';
            UPG_REAL.INFRES:=_task_state.INFRES;
            UPG_REAL.DATA:=date();
            UPG_REAL.CZAS:=time();
            UPG_REAL.USERS:=OPERATOR.USER;
            {? UPG_REAL.put(1)
            || _put+=1;
               __UPG.REAL:=UPG_REAL.ref();
               __UPG.msg('Nie wykonane - wynik przeniesiony z firmy %1 podczas zakładania nowej.'[_params.PATTERN])
            || _err+=1;
               _err_msg+=UPG_REAL.UPG_TASK().SYMBOL+' v.'+UPG_REAL.UPG_TASK().UPG_HEAD().VERSION+','
            ?}
         ?};
         UPG_REAL.next()
      !};
      {? _err=0
      || _res+='OK. Przeniesiono statusy zadań potransferowych. Liczba przeniesionych statusów: %1.\n'[$_put]
      || _res+='Błąd. Błąd podczas przenoszenia statusów zadań potransferowych.\n
                Liczba przeniesionych statusów zadań potransferowych: %1.\n
                Liczba nieprzeniesionych statusów zadań potransferowych: %2. (%3)\n'[$_put,$_err,_err_msg]
      ?}
   ?};
   UPG_REAL.cntx_pop();
   UPG_VER.cntx_pop()
?};
::   aktualizacja głównego statusu (UPG_TASK.STAN)
__UPG.act_task();
_res

:Sign Version 2.0 jowisz:1045 2023/10/17 13:55:44 3ecff4230a09afa89fe60eb0ec0668316157b1af40d82902af1d845ef2b4279126491249a375b408f012312e7b233f67c53774f44727d634259e120d86e3863c5353e6156fbb207d5ed376fbaf434117457b3390b928e71d2fde40759b42bb46c87a3ae6cef91eca1a9a02e976f6a03404515e0afb4665bcc365fa2091632c49
