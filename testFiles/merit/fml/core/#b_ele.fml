:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #b_ele.fml
:: Utworzony: 18.12.2014 [17.00]
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Formuły do obsługi tabeli B_ELE
::======================================================================================================================


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Funkcja dodająca wpis do tabeli B_ELE
::   WE: _a - [REFERENCE] - wskazanie na B_CHAIN (klasę elementu)
::       _b - [STRING]    - symbol elementu
::   WY:      [REFERENCE] - wksazanie na dodany element lub null
::----------------------------------------------------------------------------------------------------------------------
_b_chain:={? var_pres('_a')=type_of(null) || _a || return(null) ?};
 _symbol:={? var_pres('_b')=type_of('')   || _b || return(null) ?};
_res:=null();
B_ELE.cntx_psh();
B_ELE.index('CHAINSYM');
B_ELE.prefix(_b_chain,_symbol,);
{? B_ELE.first()
|| _res:=B_ELE.ref()
|| B_ELE.B_CHAIN:=_b_chain;
   B_ELE.SYMBOL:=_symbol;
   B_ELE.CLASS:=exec('FindAndGet','#table',B_CHAIN,#_b_chain,ref_name(_b_chain),"TABLE",'');
   {? B_ELE.add()
   || _res:=B_ELE.ref()
   ?}
?};
B_ELE.cntx_pop();
_res


\delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Kasuje podany rekord tabeli B_ELE (wykonywane w transakcji!!!)
::   WE: _a - B_ELE.ref()
::   WY: >0 -wyczyszczone,
::       <=0 -niewyczyszczone
::  TAG: <PUBLICZNA><DEL>
::UWAGA: Parametry bez [] są wymagane, formula może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
:: jeżeli transakcja została zerwana, to nie ma sensu przetwarzać formuły
{? do_state()=2 || return(-100) ?};

_ref:=_a;

_result:=0;
_can_continue:=1;

:: sprawdzam, czy to w tej formule będę zakładał transakcję, czy już jest założona
_mydo:=do_state()=0;
{? _mydo || do() ?};
B_ELE.cntx_psh(); B_ELE.clear();
{? B_ELE.seek(_ref)
|| {? exec('clean','#b_ele',_ref)>0
   || {? B_ELE.del(,1)>0
      || _result:=1
      || undo();
         _result:=-3
      ?}
   || _result:=-2
   ?}
|| _result:=0
?};

{? _result<0
|| undo()
?};

B_ELE.cntx_pop();
{? _mydo || end() ?};
_result


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Czyści powiązania do rekordu tabeli B_ELE
::   WE: _a - B_ELE.ref()
::   WY: >0  -wyczyszczone,
::       <=0 -niewyczyszczone
::  TAG: <PRYWATNA><CLEAN>
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
{? do_state()=2 || return(-100) ?};

_ref:=_a;

_result:=0;
_can_continue:=1;

_mydo:=do_state()=0;
{? _mydo || do() ?};
:: --- powiązania do ---

:: --- wszystkie powiazania usuniete? ---

{? _can_continue>0
|| _result:=1
|| undo()
?};

{? _mydo || end() ?};

_result


\after_rfr_ele
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PRIVATE
::  UTW: TMR [17.00]
:: OPIS: Po odswieżeniu w tabeli B_ELE
::   WE: _a - env - środowisko designera - wynik działania exec('env','#b_ele')
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
{? _env.TAB_ELE.CLASS='B_ACTION'
||
   tab_show(,'dolny');
   grp_disp(B_PORT,_env.WIN_IN);
   grp_disp(B_PORT,_env.WIN_INT);
   grp_disp(B_PORT,_env.WIN_OUT)
||
   tab_hide(,1,'dolny')
?};
~~


\before_in
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Przed wyświetleniem okienka tabeli B_PORT w zakładce (dla elementów wejściowych)
::   WE: _a - env - środowisko designera - wynik działania exec('env','#b_ele')
::----------------------------------------------------------------------------------------------------------------------
B_PORT.index('UNIK');
B_PORT.prefix(B_ELE.ref(),null(),null(),exec('kind_in','#b_port'),)


\before_int
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Przed wyświetleniem okienka tabeli B_PORT w zakładce (dla elementów wewnętrznych)
::   WE: _a - env - środowisko designera - wynik działania exec('env','#b_ele')
::----------------------------------------------------------------------------------------------------------------------
B_PORT.index('UNIK');
B_PORT.prefix(B_ELE.ref(),null(),null(),exec('kind_internal','#b_port'),)


\before_out
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Przed wyświetleniem okienka tabeli B_PORT w zakładce (dla elementów wyjściowych)
::   WE: _a - env - środowisko designera - wynik działania exec('env','#b_ele')
::----------------------------------------------------------------------------------------------------------------------
B_PORT.index('UNIK');
B_PORT.prefix(B_ELE.ref(),null(),null(),exec('kind_out','#b_port'),)


\icon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Ikona dla elementu procesu
::   WE: _a - B_ELE.ref()
::----------------------------------------------------------------------------------------------------------------------
_b_ele:=_a;

_result:='';

B_ELE.cntx_psh();
B_ELE.clear();
{? B_ELE.seek(_b_ele)
||
   {? B_ELE.CLASS='B_LANE'
   || _result:='xwin16.png:154'
   |? B_ELE.CLASS='B_ACTION'
   || _result:='xwin16.png:30'
   |? B_ELE.CLASS='B_GATE'
   || {? exec('is_gate','#b_gate',B_ELE.ref(),,exec('kind_merge','#b_gate'))>0
      || _result:='xwin16.png:152'
      |? exec('is_gate','#b_gate',B_ELE.ref(),,exec('kind_split','#b_gate'))>0
      || _result:='xwin16.png:151'
      || _result:='xwin16.png:150'
      ?}
   |? B_ELE.CLASS='B_EVENT'
   || {? exec('is_event','#b_event',B_ELE.ref(),exec('type_start','#b_event'))>0
      || _result:='xwin16.png:147'
      |? exec('is_event','#b_event',B_ELE.ref(),exec('type_end','#b_event'))>0
      || _result:='xwin16.png:148'
      |? exec('is_event','#b_event',B_ELE.ref(),exec('type_intermed','#b_event'))>0
      || _result:='xwin16.png:149'
      || _result:='xwin16.png:147'
      ?}
   |? B_ELE.CLASS='B_CONN'
   || _result:='xwin16.png:153'
   || _result:=''
   ?}
|| _result:=''
?};
B_ELE.cntx_pop();

_result


\valid_grp_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Sprawdzenie elementów - przed akcja grupowa
::----------------------------------------------------------------------------------------------------------------------
KOMM.init(,,'Sprawdzenie konfiguracji elementów'@);
VAR.GRUPA:='T';
1


\valid_grp_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Sprawdzenie elementów - po akcji grupowej
::----------------------------------------------------------------------------------------------------------------------
VAR.GRUPA:='N';
KOMM.select(,,,,'Szczegóły'@);
~~


\valid_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Sprawdza pojedynczy element, czy jest poprawnie skonfigurowany
::       Formuła sprawdza tylko elementy bedące czynnosciami
::   WY: 0 / 1 - jezeli ok, to (1)
::       Dodatkowo niepoprawnie skonfigurowana czynność dostaje znacznik B_ACTION.PROBLEM:='T'
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

{? B_ELE.B_CHAIN().TABLE='B_ACTION'
||
   B_ACTION.cntx_psh();
   B_ACTION.index('B_ELE');
   B_ACTION.prefix(B_ELE.ref());
   {? B_ACTION.first()
   || _result:=exec('valid_one','#b_action',1)
   || {? VAR.GRUPA<>'T'
      || FUN.error('Brak powiązania elementu z czynnością.'@)
      || KOMM.add('Brak powiązania elementu %1 z czynnością.'@[B_ELE.SYMBOL],'xwin16.png:14')
      ?}
   ?};
   B_ACTION.cntx_pop()
|| {? VAR.GRUPA<>'T' || FUN.info('Element nie jest czynnością.'@) ?}
?};

_result


\win_port
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PRIVATE
::  UTW: TMR [17.00]
:: OPIS: Tworzy okno tymczasowe zawierajace widok portów
::   WE: _a - env - środowisko designera - wynik działania exec('env','#b_design')
::       _b - określa czy okienko dla parametrów wejściowych, wewnętrznych czy wyjściowych
::   WY: STRING - uchwyt do okna
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_rodzaj:=_b;
_tab:=_env.TAB_PORT;

_title:='';

_wer:=_tab.mk_sel(_title,'P',0,_env.wid_in,1,1,);
_tab.win_fld(_wer,,'SYMBOL',,,15,,,'Symbol'@,0);
_tab.win_fld(_wer,,'NAME',,,50,,,'Nazwa'@,0);
_tab.win_fld(_wer,,'B_TYPE','SYMBOL',,30,,,'Typ danych'@,0);
_tab.win_fld(_wer,,'REQUIRED',,,10,,,'Wymagany'@,0,,2,,"'T'","'N'");
_tab.win_fld(_wer,,'ACTIVE',,,10,,,'Aktywny'@,0,,2,,"'T'","'N'");

_tab.win_act(_wer,,'Kolejność');
::_add_before:=" B_PORT.blank(1);
::               B_PORT.B_ELE:=B_ELE.ref();
::               B_PORT.KIND:='" + {? _rodzaj='WE' || 'IN' || 'OUT' ?} + "'";
::
::_add_before:=$_add_before;
::
::_add_after:="  B_PORT.win_edit('RED');
::               {? B_PORT.edit()
::               || _buffer:=exec('buffer','#b_port');
::                  _buffer.get();
::                  _buffer.SYMBOL:=~-_buffer.SYMBOL;
::                  exec('add','#b_port',_buffer)
::               ?}";
::
::_put_after:="  B_PORT.win_edit('RED');
::               {? B_PORT.edit()
::               || _buffer:=exec('buffer','#b_port');
::                  _buffer.get();
::                  _buffer.SYMBOL:=~-_buffer.SYMBOL;
::                  exec('put','#b_port',_buffer)
::               ?}";
::
::_tab.win_act(_wer,0,'Formuła','Dołącz',,,_add_before,_add_after);
::_tab.win_act(_wer,1,'Formuła','Dołącz',,,_add_before,_add_after);
::_tab.win_act(_wer,,'Formuła','Popraw',,,,_put_after);
::_tab.win_act(_wer,,'Usuń','Usuń');
_tab.win_sel(_wer);
_wer

:Sign Version 2.0 jowisz:1028 2019/10/14 09:21:13 ae8af48a0a3c34311c5535c930b5e1fb434d97b51c4f122141029f453fdcc0f5c3fca225db59f17dce683d265d4ee29f15181d8728697bbff89d48d3748e808981e443ec182973a8c4653a7c9a86b0c8fe3551bbf0456f4869798f2b581de89579bfa0fbc6703e765bd9a661e52465de060b0f88799429cd3c79c4cdaf16c571
