:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #regex.fml
:: Utworzony: 26.03.2022
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Definicja klasy wspomagającej wyszukiwanie wzorców (wyrażeń regularnych) w tekście.
::======================================================================================================================


\re_decl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Definicja klasy RE.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Przy powtórnym wywołaniu deklaracji klasy RE - zakończ.
{? var_pres('RE',@.CLASS)>0
|| return()
?};

obj_decl('RE'


:: Pola prywatne  ------------------------------------------------------------------------------------------------------


:: Tablica elementów nazwanych do obsługi wyników wyszukiwania (tworzona podczas inicjalizacji obiektu).
   ,obj_fld('RESULT',~~)


:: Tabela do obsługi wyszukiwania w plikach (tworzona podczas inicjalizacji obiektu).
   ,obj_fld('BUF',~~)


:: Metody publiczne  ---------------------------------------------------------------------------------------------------


   ,obj_meth('__init'
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Metoda inicjująca obiekt - utworzenie kilku struktur złożonych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
   ," _a.RESULT:=obj_new('TAB','ws','we','hdr');
      _a.RESULT.TAB:=tab_tmp(1
         ,'LP','INTEGER','Lp.'@
         ,'POS','INTEGER','Pozycja'@
         ,'LEN','INTEGER','Długość'@
         ,'RESULT','SYS_MEMO','Wynik'@
::       Rodzaj grup:
::          '-' - Brak grup;
::          'I' - Grupy indeksowane;
::          'N' - Grupy nazwane.
         ,'GRFLAG','STRING[1]','Rodzaj grup'@
         ,'GRTXT','SYS_MEMO','Grupy'@
      );
      _a.RESULT.ws:=_a.RESULT.TAB.mk_sel('Dopasowania'@);
      _a.RESULT.TAB.win_fld(_a.RESULT.ws,,'LP',,,-5,,,,,'Liczba porządkowa'@);
      _a.RESULT.TAB.win_fld(_a.RESULT.ws,,'POS',,,-5,,,,,'Pozycja, od której znalezione zostało dopasowanie wzorca'@);
      _a.RESULT.TAB.win_fld(_a.RESULT.ws,,'LEN',,,-5,,,,,'Długość dopasowanego tekstu'@);
      _a.RESULT.TAB.win_fld(_a.RESULT.ws,,'RESULT',,,80,,,,,'Dopasowany tekst'@);
      _a.RESULT.TAB.win_fld(_a.RESULT.ws,,'GRFLAG',,,,,,,,'Grupy w dopasowaniu [-/I/N]'@,2,,""'T'"",""'N'"");
      _a.RESULT.we:=_a.RESULT.TAB.mk_edit('Dopasowanie'@);
      _a.RESULT.TAB.win_esep(_a.RESULT.we,'Dane podstawowe'@);
      _a.RESULT.TAB.win_efld(_a.RESULT.we,,'LP',,,,,,,,'Liczba porządkowa'@);
      _a.RESULT.TAB.win_efld(_a.RESULT.we,,'POS',,,,,,,,'Pozycja, od której znalezione zostało dopasowanie wzorca'@);
      _a.RESULT.TAB.win_efld(_a.RESULT.we,,'LEN',,,,,,,,'Długość dopasowanego tekstu'@);
      _a.RESULT.TAB.win_efld(_a.RESULT.we,,'RESULT',,,80,-3,,,,'Dopasowany tekst'@);
      _a.RESULT.TAB.win_efld(_a.RESULT.we,,'GRTXT',,,80,-7,,,,'Dopasowane grupy'@);

      _a.BUF:=tab_tmp(1
         ,'LP','INTEGER','Lp.'@
         ,'TEXT','SYS_MEMO','Treść'@
      );
      _a.BUF.add();
      ~~
   ")


   ,obj_meth('findall'
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Metoda wyszukująca wszystkie podciągi pasujące do wzorca.
::   WE: _a [STRING/FILE] - Przeszukiwany tekst lub uchwyt do pliku otwartego do czytania (ur).
::       _b [STRING]      - Poszukiwany wzorzec (wyrażenie regularne).
::   WY: Liczba znalezionych dopasowań.
::----------------------------------------------------------------------------------------------------------------------
   ," _text:=_a;
      _pattern:=_b;

      .RESULT.TAB.erase();

      _match:=obj_new(1);
      _lp:=0;
      _index:=0;
      {!
      |? obj_del(_match);
         _match:=regex_match(_text,_pattern,_index);
         _match.pos>0
      |! .RESULT.TAB.blank();
         .RESULT.TAB.LP:=_lp+1;
         .RESULT.TAB.POS:=_match.pos;
         .RESULT.TAB.LEN:=_match.len;
         .RESULT.TAB.memo_set(_match.len+((_match.pos-1)-_text),'RESULT');
         {? type_of(_match.groups)>100
         || .RESULT.TAB.GRFLAG:={? obj_ntab(_match.groups) || 'N' || 'I' ?};
            .RESULT.TAB.memo_set(json_obj(_match.groups),'GRTXT')
         || .RESULT.TAB.GRFLAG:='-';
            .RESULT.TAB.memo_set(,'GRTXT')
         ?};
         {? .RESULT.TAB.add() & .RESULT.TAB.memo_put(,'RESULT') & .RESULT.TAB.memo_put(,'GRTXT')
         || _lp+=1;
            _index:=_match.pos+_match.len
         ?}
      !};

      .first();

      _lp
   ",type_of(''),type_of(''),-1)


   ,obj_meth('findall'
   ,"  _fh:=_a;
      _pattern:=_b;

      {? (.BUF.first() | .BUF.add()) & .BUF.memo_put(_fh,'TEXT')
      || .findall(.BUF.memo_txt(,1,'TEXT'),_pattern)
      ?}
   ",type_of(@.CLASS.FILE_T),type_of(''),-1)


:: Metody ustalające położenie bieżącego rekordu w tabeli wyników.
   ,obj_meth('first',".RESULT.TAB.first()")
   ,obj_meth('next',".RESULT.TAB.next()")
   ,obj_meth('last',".RESULT.TAB.last()")


   ,obj_meth('pos'
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Metoda zwraca pozycję znalezionego dopasowania dla bieżącego lub wskazanego wyniku.
::   WE: [_a] [NUMBER] - Numer wyniku.
::   WY: Pozycja lub 0, jeżeli wynik nie został znaleziony.
::----------------------------------------------------------------------------------------------------------------------
   ," {? .RESULT.TAB.find_key(_a)
      || .pos()
      || 0
      ?}
   ",type_of(0),-1)


   ,obj_meth('pos'
   ," {? .RESULT.TAB.get()
      || .RESULT.TAB.POS
      || 0
      ?}
   ",-1)


   ,obj_meth('len'
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Metoda zwraca długość znalezionego dopasowania dla bieżącego lub wskazanego wyniku.
::   WE: [_a] [NUMBER] - Numer wyniku.
::   WY: Długość lub 0, jeżeli wynik nie został znaleziony.
::----------------------------------------------------------------------------------------------------------------------
   ," {? .RESULT.TAB.find_key(_a)
      || .len()
      || 0
      ?}
   ",type_of(0),-1)


   ,obj_meth('len'
   ," {? .RESULT.TAB.get()
      || .RESULT.TAB.LEN
      || 0
      ?}
   ",-1)


   ,obj_meth('text'
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Metoda zwraca tekst znalezionego dopasowania dla bieżącego lub wskazanego wyniku.
::   WE: [_a] [NUMBER] - Numer wyniku.
::   WY: Tekst lub '', jeżeli wynik nie został znaleziony.
::----------------------------------------------------------------------------------------------------------------------
   ," {? .RESULT.TAB.find_key(_a)
      || .text()
      || ''
      ?}
   ",type_of(0),-1)


   ,obj_meth('text'
   ," {? .RESULT.TAB.get()
      || .RESULT.TAB.memo_txt(0,1,'RESULT')
      || ''
      ?}
   ",-1)


   ,obj_meth('group'
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Metoda zwraca tablicę z dopasowaniami kolejnych grup we wzorcu dla bieżącego lub wskazanego wyniku.
::   WE: [_a] [NUMBER] - Numer wyniku.
::   WY: Tablica lub ~~, jeżeli wynik nie został znaleziony.
::----------------------------------------------------------------------------------------------------------------------
   ," {? .RESULT.TAB.find_key(_a)
      || .group()
      || ~~
      ?}
   ",type_of(0),-1)


   ,obj_meth('group'
   ," {? .RESULT.TAB.get() & .RESULT.TAB.GRFLAG<>'-'
      || json_parse(.RESULT.TAB.memo_txt(0,1,'GRTXT'))
      || ~~
      ?}
   ",-1)


   ,obj_meth('show'
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Metoda prezentuje aktualne wyniki dopasowań.
::   WE: [_a] [STRING] - Tekst doklejany do tytułów prezentowanych okien.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
   ," .RESULT.hdr:={? _a='' || '' || ' - %1'[_a] ?};
      .RESULT.TAB.cntx_psh();
      .RESULT.TAB.prefix();
      .RESULT.TAB.win_sel(.RESULT.ws);
      .RESULT.TAB.win_edit(.RESULT.we);
      .RESULT.TAB.hdr_sel(.RESULT.hdr);
      .RESULT.TAB.select();
      .RESULT.TAB.cntx_pop();
      ~~
   ",type_of(''),-1)


   ,obj_meth('show',".show('')",-1)
)


\demo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Formuła demonstracyjna.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('VAR_DEL','#object');
exec('KOMM','#object');
exec('FUN','#object');

exec('re_decl','#regex');
_re:=obj_new(@.CLASS.RE);

:: Iteracja po wynikach - podejście indeksowe.
_odp:='';
_text:='12-34509-87644-555';
_pattern:='\\d{2}-\\d{3}';
_count:=_re.findall(_text,_pattern);
{! _lp:=1 .. _count
|! _odp+='\nPozycja: %1 | Długość: %2 | Dopasowanie: [%3]'[$_re.pos(_lp),$_re.len(_lp),_re.text(_lp)]
!};
FUN.info('Iteracja po wynikach - podejście indeksowe\nTekst: %1\nWzorzec: %2%3'[_text,_pattern,_odp]);

:: Iteracja po wynikach - podejście sekwencyjne.
_odp:='';
_text:=
   '95-200 Pabianice\n'
   '00-001 Warszawa\n'
   '58-500 Jelenia Góra\n'
   '98-220 Zduńska Wola\n';
_pattern:='\\d{2}-\\d{3}';
{? _re.findall(_text,_pattern)
|| {!
   |? _odp+='\nPozycja: %1 | Długość: %2 | Dopasowanie: [%3]'[$_re.pos(),$_re.len(),_re.text()];
      _re.next()
   !}
?};
FUN.info('Iteracja po wynikach - podejście sekwencyjne\nTekst:\n%1Wzorzec: %2%3'[_text,_pattern,_odp]);

: Obsługa grup bez nazw
_odp:='';
_odp:='';
_text:=
   '95-200 Pabianice\n'
   '00-001 Warszawa\n'
   '58-500 Jelenia Góra\n'
   '98-220 Zduńska Wola\n';
_pattern:='(?m)^(\\d{2}-\\d{3})\\s*(\\w* *\\w*)\\r?$';
{? _re.findall(_text,_pattern)
|| {!
   |? _group:=_re.group();
      _odp+=
         '\n'
         '\nPozycja: %1 | Długość: %2 | Dopasowanie: [%3]'
         '\nGrupa 1: [%4] | Grupa 2: [%5]'
         [$_re.pos(),$_re.len(),_re.text(),_group[1],_group[2]];
      obj_del(_group);
      _re.next()
   !}
?};
FUN.info('Obsługa grup bez nazw\nTekst:\n%1Wzorzec: %2%3'[_text,_pattern,_odp]);
_re.show('Obsługa grup bez nazw');

: Obsługa grup z nazwami
_odp:='';
_odp:='';
_text:=
   '95-200 Pabianice\n'
   '00-001 Warszawa\n'
   '58-500 Jelenia Góra\n'
   '98-220 Zduńska Wola\n';
_pattern:='(?m)^(?\'kod\'\\d{2}-\\d{3})\\s*(?\'miasto\'\\w* *\\w*)\\r?$';
{? _re.findall(_text,_pattern)
|| {!
   |? _group:=_re.group();
      _odp+=
         '\n'
         '\nPozycja: %1 | Długość: %2 | Dopasowanie: [%3]'
         '\nKod: [%4] | Miasto: [%5]'
         [$_re.pos(),$_re.len(),_re.text(),_group.kod,_group.miasto];
      obj_del(_group);
      _re.next()
   !}
?};
FUN.info('Obsługa grup bez nazw\nTekst:\n%1Wzorzec: %2%3'[_text,_pattern,_odp]);
_re.show('Obsługa grup z nazwami');

: Wyszukiwanie w pliku.
_odp:='';
_fn:='%1.fml'[form_stack(0).file];
_fh:=fopen(_fn,'ur',1,1,1,1);
{? _fh.is_open()
|| _pattern:='(?m)^\\\\(\\w*)';
   {? _re.findall(_fh,_pattern)
   || {!
      |? _group:=_re.group();
         _odp+='\n%1'[_group[1]];
         obj_del(_group);
         _re.next()
      !}
   ?};
   FUN.info('Wyszukiwanie w pliku %1\nWzorzec: %2\nFormuły w pliku:%3'[_fn,_pattern,_odp]);
   _fh.fclose()
?};
obj_del(_fh);
_re.show('Wyszukiwanie formuł w pliku %1'[_fn]);
~~

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:10 480bbb26cf036601a91c063911b1ce4e606071251ddfabf9ace6e5a8c0005b1441cd2dfedf02ec3edb354d5e5a492eb8d9f2a7a28539b54b043c0037a2ee017064ee755e28f78d6957f38d77328f8acec48848c5351ca9585f9b60799f0bbd03b5c9b75184d640ff35bd09183c05a1a6dca9233455c845d77c2de6654a7f5d2b
