:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #word.fml [12.41]
:: Utworzony: 11.08.2015
:: Autor: TMR
::======================================================================================================================
:: Zawartość: Definicja klasy pozwalającej na tworzenie dokumentów Word-owych z ewentualnym wykorzystaniem wcześniej
::            przygotowanego szablonu.
::
:: Znane ograniczenia:
::    * Przekreślenie tekstu (strike) dostępne jest tylko w stylach definiowanych. Ustawienie przekreślenia na tekście,
::      który będzie zamieniany - nie zadziała (przekreślenie zostanie usunięte).
::
:: Historia zmian:
:: 2017.03.03 RWR & TMR
::    * Zmiana nazw metod:
::          AddCStyl    ->    AddCellStyle
::          Style       ->    SetStyle
::          Paragraf    ->    AddParagraph
::
::    * Nowe metody
::          CopyStyle(style,[id])
::             Metoda pozwala utworzyć nowy styl na podstawie istniejącego.
::          PageBreak(text,[typ])
::             Metoda pozwala wstawić podział strony przed, po lub zamiast wyszukanego text-u.
::             Parametr [typ] przyjmuje wartość 'before' [domyślnie], 'after', 'replace'.
::          DelParagraph(text)
::             Metoda pozwala na usuwanie całego paragrafu, w którym znajduje się przekazany text.
::
::    * Rezygnacja z konieczności przypisywania obiektu do zmiennej globalnej.
::    * Definicje paragrafów (metoda AddParagraph()) oraz definicje zamiany tekstów (metoda Replace()) są obecnie
::      przechowywane w polach typu SYS_MEMO, a nie jak dotychczas w STRING[255].
::    * Rezygnacja z formuły tworzącej nowy styl. W związku z nowymi funkcjami, możliwe stało się zrezygnowanie z
::      obsługi styli poprzez zmienne globalne. Funkcjonalność formuły \newStyle/word.fml została przeniesiona do metody
::      NewStyle().
::    * W metodach:
::          AddCellStyle(row,col,style)
::          AddParagraph(text,style)
::          Replace(oldText,newText,style,from,to)
::          SetStyle(style)
::          TabStyle(style)
::      parametr style może być również tablicą stylu.
::    * Metoda Replace(oldText,newText,style,from,to) ma teraz dwa nowe parametry from i to, dzięki którym
::      można określić zakres, w jakim należy zastąpić stary tekst nowym. Przykładowo jeżeli podamy from=2 i to=3
::      to stary tekst zostanie zastąpiony nowym od 2 do 3 wystąpienia w dokumencie.
::    * Metoda Template obsługuje warstwy plików szablonów:
::          warstwa standardowa *.doc, *.dotx,
::          warstwa modyfikacji *.m.doc, *.m.dotx
::      Podczas wywołania metody Template podajemy tak jak dotychczas nazwę szablonu. Metoda będzie sama sprawdzała
::      czy istnieje plik szablonu w warstwie modyfikacji i jeżeli tak, to będzie on brany do utworzenia pliku word.
::
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.30]
:: OPIS: Deklaracja klas WORD
:: ~OST: INTMPDIR, INFOPEN, INTXTEDITVIEW, INFCOPY, INCLIEXEC, INFERASE, INSYSEXEC
::----------------------------------------------------------------------------------------------------------------------
_typ:='WORD';

_dev:=__develop;
{? _dev
|| _cl_name:=@.Class.get_name(_typ)
|| _cl_name:=_typ
?};
{? var_pres(_cl_name,@.CLASS)<=0
||
   obj_decl(_cl_name,
:: --POLA--
    obj_fld('this'      ,'wskazanie na siebie'                                                  ; null() ),
    obj_fld('ver'       ,'wersja silnika'                                                       ; 0 ),
    obj_fld('devMsg'    ,'komunikaty developerskie'                                             ; 0 ),
    obj_fld('FType'     ,'typ pliku - WORD'                                                     ; _typ ),
    obj_fld('exFName'   ,'nazwa pliku word-a'                                                   ; '' ),
    obj_fld('fileName'  ,'nazwa pliku wynikowego'                                               ; '' ),
    obj_fld('ctrlName'  ,'nazwa kontrolki'                                                      ; '' ),
    obj_fld('tabCEF'    ,'tabela z nazwani plików worda utworzonych od powołania obiektu'       ; null() ),
    obj_fld('cfxFName'  ,'nazwa pliku konfiguracyjnego'                                         ; '' ),
    obj_fld('cfxFullN'  ,'nazwa pliku konfiguracyjnego wraz z pełną ścieżką'                    ; '' ),
    obj_fld('exTName'   ,'nazwa pliku szablonu do tworzenia pliku worda'                        ; '' ),
    obj_fld('exTFullN'  ,'nazwa pliku szablonu wraz z pełną ścieżką'                            ; '' ),
    obj_fld('exTPth'    ,'ścieżka pliku szablonu wyszukana na podstawie pth'                    ; 0 ),
    obj_fld('exTCopy'   ,'czy kopiować plik szablonu na końcówkę do katalogu tmp_dir()'         ; 1 ),
    obj_fld('libFName'  ,'nazwa pliku biblioteki do tworzenia plikow Worda'                     ; '' ),
    obj_fld('MSG'       ,'czy wyswietlac komunikaty'                                            ; 1 ),
    obj_fld('jTerm'     ,'czy uruchomione z jTerma'                                             ; 0 ),
    obj_fld('inTerm'    ,'czy uruchomione z inTerma'                                            ; 0 ),
    obj_fld('sysJTerm'  ,'nazwa systemu operacyjnego końcówki'                                  ; sys_name(0) ),
    obj_fld('sysAS'     ,'nazwa systemu operacyjnego serwera aplikacji'                         ; sys_name(1) ),
    obj_fld('dirSep'    ,'separator katalogów'                                                  ; '\\' ),
    obj_fld('dirSepK'   ,'separator katalogów na końcówce'                                      ; '\\' ),
    obj_fld('procName'  ,'nazwa procedury wbudowanej pobierającej dane do eksportu'             ; '' ),
    obj_fld('sId'       ,'rozpoczęcie identyfikatora'                                           ; '' ),
    obj_fld('eId'       ,'zakończenie identyfikatora'                                           ; '' ),
    obj_fld('PAR'       ,'parametry procedury wbudowanej '                                      ; null() ),
    obj_fld('TABPLACE'  ,'id tabeli w pliku szablonu. Miejsce gdzie będzie tworzona nowa tabela'; '' ),
::  zamiennie możemy użyć wskazania do istniejącej tabeli. Poniżej należy określić
::  3 parametry,na podstawie których będą dodawane wiersze do istniejącej tabeli
    obj_fld('tabNr'     ,'numer tabeli, do której będziemy wstawiać dane'                       ; -1 ),
    obj_fld('tabRowNr'  ,'numer wiersza tabeli, od którego będziemy wstawiać dane'              ; -1 ),
    obj_fld('tabRowAs'  ,'numer wiersza tabeli, który służył będzie jako wzorzec'               ; -1 ),
    obj_fld('CELLSTYL'  ,'tabela z adresami komórek z przypisanymi własnymi stylami'            ; '' ),
    obj_fld('STYLE'     ,'aktualnie ustawiony styl'                                             ; '' ),
    obj_fld('TABSTYLE'  ,'id stylu dla tabeli '                                                 ; '' ),
    obj_fld('RUNTAB'    ,'tabela potrzebna do wyświetlenia worda'                               ; null() ),
    obj_fld('TAB'       ,'tabela do exportu'                                                    ; null() ),
    obj_fld('TAB_FLDS'  ,'pola tabeli do exportu widoczne'                                      ; null() ),
    obj_fld('TAB_FLDH'  ,'pola tabeli do exportu ukryte'                                        ; null() ),
    obj_fld('PARAGRAF'  ,'tabela paragrafy'                                                     ; null() ),
    obj_fld('DELPARAG'  ,'tabela paragrafy - usuwanie'                                          ; null() ),
    obj_fld('PBREAK'    ,'tabela nowych stron / łamania stron'                                  ; null() ),
    obj_fld('REPLACE'   ,'tabela zamiany tekstów'                                               ; null() ),
    obj_fld('REPTAB'    ,'tabela zamiany tekstów w tabelach'                                    ; null() ),
    obj_fld('TABIDS'    ,'tabela do przechowywania ids'                                         ; null() ),
    obj_fld('IMAGES'    ,'tabela do przechowywania obrazków'                                    ; null() ),
    obj_fld('tabTitle'  ,'tytuł tabeli'                                                         ; '' ),
    obj_fld('header'    ,'czy naglówek tabeli'                                                  ; 0 ),
    obj_fld('headAcr'   ,'czy nazwy nagłówka tabeli z akronimu czy opisu kolumny'               ; 0 ),
    obj_fld('Xutf8'     ,'czy mamy UTF-8?'                                                      ; 0 ),
    obj_fld('styles'    ,'obiekt przechowujący style wykorzystywane w wordzie'                  ; 0 ),
    obj_fld('stylTmp'   ,'obiekt pomocniczy do dekodowania styli'                               ; 0 ),
    obj_fld('delETabs'  ,'czy usuwać puste tabele z utworzonego worda'                          ; 0 ),
    obj_fld('autoSize'  ,'włączenie/wyłączenie automatycznego dopasowania szerokości komorek '  ; 1 ),
    obj_fld('mjdbc'     ,'ścieżka do pliku mjdbc wraz z nazwą pliku '                           ; ''),
    obj_fld('showPrg'   ,'włączenie/wyłączenie pokazywania progress-a'                          ; 1 ),
:: --KONSTRUKTOR/DESTRUKTOR--
   obj_meth('__init','inicjalizacja obiektu';
            "_a.this:=_a;
            .ver:=user(11);
            .Xutf8:=.ver>'11';
            .ctrlName:={? .ver>='20.32'
                       || 'excel_export_poi_5'
                       |? .ver>='18.02'
                       || 'excel_export_1802'
                       || 'excel_export'
                       ?};
            .libFName:=.ctrlName+'.jar';
            {? .sysAS <> 'WINDOWS'
            || .dirSep:='/'
            ?};
            {? .sysJTerm <> 'WINDOWS'
            || .dirSepK:='/'
            ?};
            .init_PAR();
            .initFLDS();
            .initFLDH();
            .initCEF();
            .inPARAGR();
            .inREPLAC();
            .inREPTAB();
            .inPBREAK();
            .inStyles();
            .inCSTYL();
            .inRUNTAB();
            .inIMAGES();
            .mjdbc:=exe_dir(1)+.dirSep+'mjdbc.jar';
            .jTerm:=(~-cli_ver()='JTERM');
            .inTerm:=exec('interm','#system');
            {? .inTerm | .jTerm || .procName:='JSON' ?};
::          tymczasowe przypisanie tabeli - żeby dało się utworzyć plik worda bez jawnego wskazywania tabeli
            .SetTab(.PAR);
::          powołanie niezbędnych obiektów
            exec('__FileLayer','#object');
             1"),

:: --METODY-PRYWATNE (umownie)--
   obj_meth('init_PAR','inicjacja tabeli tymczasowej do przechowywania parametrów procedur';"
            {? _tab:=.PAR; var_pres('_tab')>100
            || obj_del(.PAR); .PAR:=null();
               obj_del(_tab); _tab:=null()
            ?};
            _tab:=tab_tmp(1,'KEY','INTEGER','','VAL'  ,'STRING[255]'   ,'Parametr procedury');
            {? type_of(_tab)=type_of(SYSLOG)
            || .PAR:=_tab
            ?}
            ",-1),

   obj_meth('inPARAGR','inicjacja tabeli tymczasowej do przechowywania parametrów procedur';"
            {? _tab:=.PARAGRAF; var_pres('_tab')>100
            || obj_del(.PARAGRAF); .PARAGRAF:=null();
               obj_del(_tab); _tab:=null()
            ?};
            _tab:=tab_tmp(1,'KEY','INTEGER','','VAL','SYS_MEMO','','ID','STRING[255]','');
            {? type_of(_tab)=type_of(SYSLOG)
            || .PARAGRAF:=_tab
            ?};
            {? _tab2:=.DELPARAG; var_pres('_tab2')>100
            || obj_del(.DELPARAG); .DELPARAG:=null();
               obj_del(_tab2); _tab2:=null()
            ?};
            _tab2:=tab_tmp(1,'KEY','INTEGER','','VAL','SYS_MEMO','');
            {? type_of(_tab2)=type_of(SYSLOG)
            || .DELPARAG:=_tab2
            ?}
            ",-1),

   obj_meth('inPBREAK','inicjacja tabeli tymczasowej do przechowywania miejsc wstawienia nowych stron';"
            {? _tab:=.PBREAK; var_pres('_tab')>100
            || obj_del(.PBREAK); .PBREAK:=null();
               obj_del(_tab); _tab:=null()
            ?};
            _tab:=tab_tmp(1,'KEY','INTEGER','','VAL','SYS_MEMO','','TYP','STRING[255]','');
            {? type_of(_tab)=type_of(SYSLOG)
            || .PBREAK:=_tab
            ?}
            ",-1),

   obj_meth('inREPLAC','inicjacja tabeli tymczasowej do przechowywania miejsc, które mamy zamienić';"
            {? _tab:=.REPLACE; var_pres('_tab')>100
            || obj_del(.REPLACE); .REPLACE:=null();
               obj_del(_tab); _tab:=null()
            ?};
            _tab:=tab_tmp(1,
               'KEY','INTEGER','',
               'FROM','INTEGER','',
               'TO','INTEGER','',
               'OLD','SYS_MEMO','',
               'OLD_HASH','STRING[40]','',
               'NEW','SYS_MEMO','Zamiana tekstu',
               'NEW_HASH','STRING[40]','',
               'ID','STRING[255]',''

            );
            {? type_of(_tab)=type_of(SYSLOG)
            || .REPLACE:=_tab
            ?}
            ",-1),

   obj_meth('inREPTAB','inicjacja tabeli tymczasowej do przechowywania miejsc, które mamy zamienić w tabelach';"
            {? _tab:=.REPTAB; var_pres('_tab')>100
            || obj_del(.REPTAB); .REPTAB:=null();
               obj_del(_tab); _tab:=null()
            ?};
            _tab:=tab_tmp(3,
               'TAB_NR','INTEGER','',
               'ORG_NR','INTEGER','',
               'ROW_NR','INTEGER','',
               'FROM','INTEGER','',
               'TO','INTEGER','',
               'OLD','SYS_MEMO','',
               'NEW','SYS_MEMO','Zamiana tekstu',
               'ID','STRING[255]',''
            );
            {? type_of(_tab)=type_of(SYSLOG)
            || .REPTAB:=_tab
            ?}
            ",-1),

   obj_meth('inRUNTAB','inicjacja tabeli tymczasowej do przechowywania pliku wynikowego';"
            {? _tab:=.RUNTAB; var_pres('_tab')>100
            || obj_del(.RUNTAB); .RUNTAB:=null();
               obj_del(_tab); _tab:=null()
            ?};
            _tab:=tab_tmp(,'NAME','STRING[255]',''
                          ,'PLIK','BLOBRAW','Plik'
                          ,'SIZE','INTEGER','Rozmiar');

            {? type_of(_tab)=type_of(SYSLOG)
            || .RUNTAB:=_tab
            ?}
            ",-1),

   obj_meth('inIMAGES','inicjacja tabeli tymczasowej do przechowywania obrazków w postaci base64';"
            {? _tab:=.IMAGES; var_pres('_tab')>100
            || obj_del(.IMAGES); .IMAGES:=null();
               obj_del(_tab); _tab:=null()
            ?};
            _tab:=tab_tmp(1,
               'KEY','INTEGER','',
               'IMG_ACT','STRING[3]','akcja związana z obrazkiem del/add/put',
               'WIDTH','INTEGER','szerokość obrazka',
               'HEIGHT','INTEGER','wysokość obrazka',
               'TAB_NR','INTEGER','tabela, w której ma być dokonana zamiana',
               'ROW_NR','INTEGER','wiersz, w którym ma być dokonana zmiana',
               'IMG','SYS_MEMO','identyfikator do zamiany na obrazek',
               'FILE','SYS_MEMO','pełna ścieżka do pliku z obrazkiem lub plik w postaci base64'
            );
            {? type_of(_tab)=type_of(SYSLOG)
            || .IMAGES:=_tab
            ?}
            ",-1),

   obj_meth('initFLDS','inicjacja tabeli tymczasowej do przechowywania akronimów pól do pokazania';"
            {? _tab:=.TAB_FLDS; var_pres('_tab')>100
            || obj_del(.TAB_FLDS); .TAB_FLDS:=null();
               obj_del(_tab); _tab:=null()
            ?};
            _tab:=tab_tmp(1,'KEY','INTEGER','','VAL','STRING[255]','Akronimy pól tabeli');
            {? type_of(_tab)=type_of(SYSLOG)
            || .TAB_FLDS:=_tab
            ?}
            ",-1),

   obj_meth('initFLDH','inicjacja tabeli tymczasowej do przechowywania akronimów pól do ukrycia';"
            {? _tab:=.TAB_FLDH; var_pres('_tab')>100
            || obj_del(.TAB_FLDH); .TAB_FLDH:=null();
               obj_del(_tab); _tab:=null()
            ?};
            _tab:=tab_tmp(1,'KEY','INTEGER','','VAL','STRING[255]','Akronimy pól tabeli');
            {? type_of(_tab)=type_of(SYSLOG)
            || .TAB_FLDH:=_tab
            ?}
            ",-1),

   obj_meth('initCEF','inicjacja tabeli tymczasowej do przechowywania nazw utworzonych plików';"
            {? _tab:=.tabCEF; var_pres('_tab')>100
            || obj_del(.tabCEF); .tabCEF:=null();
               obj_del(_tab); _tab:=null()
            ?};
            _tab:=tab_tmp(1,'NAME','STRING[255]','Nazwy utworzonych plików');
            {? type_of(_tab)=type_of(SYSLOG)
            || .tabCEF:=_tab
            ?}
            ",-1),

   obj_meth('inCSTYL','inicjacja tabeli tymczasowej do przechowywania adresów komórek z przypisanymi stylami';"
            {? _tab:=.CELLSTYL; var_pres('_tab')>100
            || obj_del(.CELLSTYL); .CELLSTYL:=null();
               obj_del(_tab); _tab:=null()
            ?};
            _tab:=tab_tmp(1,'ROW','INTEGER','','COL','INTEGER','','ID','STRING[255]','');
            {? type_of(_tab)=type_of(SYSLOG)
            || .CELLSTYL:=_tab
            ?}
            ",-1),

   obj_meth('inStyles','inicjacja obiektu do przechowywania styli';"
            {? type_of(.styles)>100
            || obj_del(.styles)
            ?}
            ",-1),

   obj_meth('encStyle','zamiana obiektu stylu na napis';"
      _arr:=_a;
      _prfx:={? var_pres('_b')=type_of('') || _b+'.' || '' ?};

      _ret:='';
      {? obj_ntab(_arr)
      || _names:=obj_ntab_names(_arr);
         {! _lp:=1 .. obj_len(_names)
         |! {? obj_ntab(_a[_lp])
            || _ret+=.encStyle(_a[_lp],{? _prfx='' || '@.' || _prfx ?}+_names[_lp])
            |? _a[_lp]<>~~
            || _ret+=_prfx+_names[_lp]+':'+$_a[_lp]+';'
            ?}
         !}
      ?};
      _ret
   ",type_of(obj_new('id'))),

   obj_meth('encStyle','zamiana obiektu stylu na napis';"
      {? obj_ntab(.styles)
      || .encStyle(.styles)-1
      || ''
      ?}
   ",-1),

   obj_meth('CreateCF'    ,'tworzy plik ustawień';"
            _mode:={? .Xutf8 || 'Uw' || 'w' ?};
            {? .cfxFName=''
            || {? .jTerm & .MSG
               || FUN.error('Brak nazwy pliku konfiguracyjnego.'@)
               ?};
               return(0)
            ?};
            {? +.procName
            || _file:=fopen(.cfxFName,_mode,1)
            || _file:=fopen('@!Tmp\\\\' + .cfxFName,_mode,0)
            ?};
            {? _file
            || {? +.procName
               || _line:='excelName=' + pth_dir(.exFName) + .dirSep + .exFName
               || _line:='excelName=' + tmp_dir() + .dirSepK + .exFName
               ?};
               fwrite(_file,_line);
               _line:='devMsg=' + {? .devMsg || 'true' || 'false' ?};
               fwrite(_file,_line);
               _line:='mjdbc='+ {? +.mjdbc || 'true' || 'false' ?};
               fwrite(_file,_line);
               _line:='header=' + {? .header || 'true' || 'false' ?};
               fwrite(_file,_line);
               _line:='headAcr=' + {? .headAcr || 'true' || 'false' ?};
               fwrite(_file,_line);
               _line:='autoSize=' + {? .autoSize || 'true' || 'false' ?};
               fwrite(_file,_line);
               _line:='delETabs=' + {? .delETabs || 'true' || 'false' ?};
               fwrite(_file,_line);
               _line:='title=' + .tabTitle;
               fwrite(_file,_line);
               _line:='fld2Hide='+.GetFLDH();
               fwrite(_file,_line);
               _line:='tabPlace='+.TABPLACE;
               fwrite(_file,_line);
               _line:='tabNr='+$.tabNr;
               fwrite(_file,_line);
               _line:='tabRowNr='+$.tabRowNr;
               fwrite(_file,_line);
               _line:='tabRowAs='+$.tabRowAs;
               fwrite(_file,_line);
               _line:='tabStyle='+.TABSTYLE;
               fwrite(_file,_line);
               _line:='styles='+.encStyle();
               fwrite(_file,_line);
               _line:='cellStyles='+.GetCSTYL();
               fwrite(_file,_line);
               {? +.procName
               || _line:='procName=' + .procName;
                  fwrite(_file,_line);
                  {? .procName<>'JSON'
                  || _line:='odbc=jdbc:' + {? +.mjdbc || 'mbase:' || 'odbc:' ?} + odbc_dsn(1);
                     fwrite(_file,_line);
                     .PAR.prefix();
                     {? .PAR.first()
                     || {!
                        |? _line:='param='+.PAR.VAL;
                            fwrite(_file,_line);
                           .PAR.next()
                        !}
                     ?}
                  ?};
                  _line:='sId=' + .sId;
                  fwrite(_file,_line);
                  _line:='eId=' + .eId;
                  fwrite(_file,_line)
               ?};
               {? .exTName<>''
               || {? +.procName
                  || _line:='szablon=' + .exTFullN
                  || _line:='szablon=' + tmp_dir() + .dirSepK + .exTName
                  ?};
                  fwrite(_file,_line)
               ?};
               fclose(_file);
               1
            || {? .jTerm & .MSG
               || FUN.error('Nie udało się utworzyć pliku konfiguracyjnego.'@)
               ?};
               0
            ?}
            ",-1),

    obj_meth('copy2Tmp','kopiuje szablon do katalogu tmp_dir ';"
            {? ~.jTerm
            || _cfxFile:=fexists(.cfxFName,1);
               {? _cfxFile=1
               || ferase(.cfxFName,1)
               ?};
               return('')
            ?};
            {? .exTName<>''
            || _pth2Tmp:='@'+tmp_dir()+.dirSepK+.exTName;
               {? .exTCopy &
                  ~fcopy({? .exTPth || .exTName || .exTFullN ?},_pth2Tmp,.exTPth,0,1) & ~fexists(_pth2Tmp,0)
               || {? .jTerm & .MSG
                  || FUN.error('Nie udało się skopiować pliku szablonu do katalogu tymczasowego.'@)
                  ?};
                  return('')
               ?};
               {? ~fexists(_pth2Tmp,0)
               || FUN.error('Nie znaleziono pliku szablonu w katalogu tymczasowym %1.'@[tmp_dir()])
               ?}
            || return('')
            ?};
            ~~
            ",-1),

    obj_meth('toJSON','tworzy JSONa z danymi';"
            _res:=0;
            _mode:={? .Xutf8 || 'Uw' || 'w' ?};

::          paragrafy
            .PARAGRAF.cntx_psh();
            .PARAGRAF.prefix();
            {? .PARAGRAF.first()
            || _fName:=gsub(.cfxFName,'.cfx','_paragraf_json.cfx');
               _file:=fopen(_fName,_mode,1,,1);
               {? _file.is_open()
               || {? .PARAGRAF.json_records(_file,'KEY',,'VAL',,'ID',)
                  || _res+=.Add2CEF(_fName)
                  ?};
                  fclose(&_file)
               ?}
            ?};
            .PARAGRAF.cntx_pop();

::          zamiany zwykłe
            .REPLACE.cntx_psh();
            .REPLACE.prefix();
            {? .REPLACE.first()
            || _fName:=gsub(.cfxFName,'.cfx','_replace_json.cfx');
               _file:=fopen(_fName,_mode,1,,1);
               {? _file.is_open()
               || {? .REPLACE.json_records(_file,'KEY',,'FROM',,'TO',,'OLD',,'NEW',,'ID',)
                  || _res+=.Add2CEF(_fName)
                  ?};
                  fclose(&_file)
               ?}
            ?};
            .REPLACE.cntx_pop();

::          zamiany w tabelach
            .REPTAB.cntx_psh();
            .REPTAB.prefix();
            {? .REPTAB.first()
            || _fName:=gsub(.cfxFName,'.cfx','_reptab_json.cfx');
               _file:=fopen(_fName,_mode,1,,1);
               {? _file.is_open()
               || {? .REPTAB.json_records(_file,'TAB_NR',,'ORG_NR',,'ROW_NR',,'FROM',,'TO',,'OLD',,'NEW',,'ID',)
                  || _res+=.Add2CEF(_fName)
                  ?};
                  fclose(&_file)
               ?}
            ?};
            .REPTAB.cntx_pop();

::          page break
            .PBREAK.cntx_psh();
            .PBREAK.prefix();
            {? .PBREAK.first()
            || _fName:=gsub(.cfxFName,'.cfx','_pbreak_json.cfx');
               _file:=fopen(_fName,_mode,1,,1);
               {? _file.is_open()
               || {? .PBREAK.json_records(_file,'VAL',,'TYP',)
                  || _res+=.Add2CEF(_fName)
                  ?};
                  fclose(&_file)
               ?}
            ?};
            .PBREAK.cntx_pop();

::          usuwanie paragrafów
            .DELPARAG.cntx_psh();
            .DELPARAG.prefix();
            {? .DELPARAG.first()
            || _fName:=gsub(.cfxFName,'.cfx','_delpar_json.cfx');
               _file:=fopen(_fName,_mode,1,,1);
               {? _file.is_open()
               || {? .DELPARAG.json_records(_file,'VAL',)
                  || _res+=.Add2CEF(_fName)
                  ?};
                  fclose(&_file)
               ?}
            ?};
            .DELPARAG.cntx_pop();

::          dodawanie/zamiana obrazków
            .IMAGES.cntx_psh();
            .IMAGES.prefix();
            {? .IMAGES.first()
            || _fName:=gsub(.cfxFName,'.cfx','_images_json.cfx');
               _file:=fopen(_fName,_mode,1,,1);
               {? _file.is_open()
               || {? .IMAGES.json_records(_file,'KEY',,'IMG_ACT',,'WIDTH',,'HEIGHT',,'IMG',,'FILE',,'TAB_NR',,'ROW_NR',)
                  || _res+=.Add2CEF(_fName)
                  ?};
                  fclose(&_file)
               ?}
            ?};
            .IMAGES.cntx_pop();

::          dane ze wskazanej tabeli
            {? var_pres('TAB',(.))=118
            || .TAB.cntx_psh();
               {? .TAB.first()
               || _fName:=gsub(.cfxFName,'.cfx','_tab_json.cfx');
                  _file:=fopen(_fName,_mode,1,,1);
                  {? _file.is_open()
                  || _flds:=.GetFLDS();
                     _getLp:=\"
                        _lp:=0;
                        _obj:=spli_str(_a,',');
                        {! _ind:=1 .. obj_len(_obj)
                        |? ~_lp
                        |! {? _obj[_ind]='\\\\'%1\\\\''[_b] || _lp:=_ind ?}
                        !};
                        _lp
                     \";
                     _fldh:=.GetFLDH();
::                przekazujemy tylko te pola, które są w strukturze tabeli uwzględniając ustawienie pól do pokazania
::                oraz pól do ukrycia
                     _fld:='';
::                zapamiętujemy listę kolumn
                     _COLS:=tab_tmp(1,'LP','INTEGER','LP',
                                      'ACR','STRING[255]','Akronim kolumny',
                                      'NAME','STRING[255]','Nazwa kolumny');
                     {! _nr:=1 .. .TAB.fld_num()
                     |! _acr:=.TAB.fld_acr(_nr);
                        _name:=.TAB.fld_name(_nr);
                        {? (_flds='' | _flds*_acr) & (_fldh='' | ~(_fldh*_acr))
                        || _fld+=',\\'%1\\','[_acr];
                           _COLS.LP:={? _flds<>'' || _getLp(_flds,_acr) || _COLS.size()+1?};
                           _COLS.ACR:=_acr;
                           _COLS.NAME:=_name;
                           _COLS.add()
                        ?}
                     !};
                     {? _COLS.first()
                     || _lp:=0;
                        {!
                        |? _lp+=1;
                           _COLS.LP:=_lp;
                           _COLS.put(1);
                           _COLS.next()
                        !}
                     ?};
                     _fml:='.TAB.json_records(_a,'\'REFERENCE\'','+_fld+')';
                     {? ($_fml)(_file)
                     || _res+=.Add2CEF(_fName)
                     ?};
                     fclose(&_file);

::                zapisujemy nazwy kolumn, które będziemy odczytywać w javie
                     {? _COLS.size()>0
                     || _fName:=gsub(.cfxFName,'.cfx','_tabcols_json.cfx');
                        _file:=fopen(_fName,_mode,1,,1);
                        {? _file.is_open()
                        || _COLS.json_records(_file,'ACR',,'NAME',);
                           _res+=.Add2CEF(_fName);
                           fclose(&_file)
                        ?}
                     ?}
                  ?}
               ?};
               .TAB.cntx_pop()
            ?};

            _res
            ",-1),

    obj_meth('CreateXF','tworzy plik worda';"
            _error:='';
            _pth:=_a;
            {? .cfxFName='' || _error+='Brak nazwy pliku konfiguracyjnego. ' ?};
            {? .exFName=''  || _error+='Brak nazwy pliku worda. ' ?};
            {? +_error
            || {? (.jTerm | .inTerm) & .MSG
               || FUN.error(_error)
               ?};
               return('')
            ?};
            .cfxFullN:=pth_dir(.cfxFName) + .dirSep + .cfxFName;
            {? +.procName
            || _showProgress:=.showPrg & .procName='JSON';
               {? _showProgress
               || progress(,'Trwa generowanie pliku \\'%1\\'.'@[.exFName]+
                            '\nProszę czekać...'@,
                            'Generowanie pliku'@,1)
               ?};
               {? .procName='JSON' || .toJSON() ?};
               _wordPath:=pth_dir(.exFName);
               _jar:=pth_dir(.libFName) + .dirSep + .libFName;
               _cmd:='';
               _word:='word';
               _utf8:={? .Xutf8 || 'true' || 'false' ?};

               _main_class:='pl.macrologic.export2excel.Main';
               _classpath:='%1'[_jar];
               _param:=obj_new('encoding','classpath', 'main_class','param1','param2','param3');
               _param.encoding:='-Dfile.encoding=utf-8';
               _param.classpath:='-Djava.class.path=%1'[_classpath];

               _param.main_class:=_main_class;
               _param.param1:=.cfxFullN;
               _param.param2:=_utf8;
               _param.param3:=_word;
               _result:=jexec(_wordPath,'runOnAppServer=1,wait=1,stderr=program_err.log,stdout=program_out.log',_param);
               _cmd:='ok';

::               _main_class:=' pl.macrologic.export2excel.Main ';
::               {? .sysAS = 'WINDOWS'
::               || _mjrun:=exe_dir(1) + .dirSep +'mjrun.exe';
::                  _classpath:=' -classpath .;\"' + _jar + '\";\"' + .mjdbc + '\"';
::                  _cmd:='cmd /C \"cd ' + '\"' + _wordPath + '\"' + ' & ' + '\"' + _mjrun + '\"' +
::                        ' -wait -java %1 %2 %3 %4'
::                        [_classpath + _main_class + .cfxFullN,_utf8,_word,'\"']
::               ||
::
::                  _mjrun:=exe_dir(1) + .dirSep + 'MacroJRUN -wait';
::                  _classpath:=' -classpath .:\\\"' + _jar + '\\\":\\\"' + .mjdbc + '\\\"';
::                  _classpath:=' -classpath %3.:%1:%2%3'[_jar,.mjdbc,'\\\\\"'];
::
::                  _cmd:='sh -c \"cd ' + _wordPath + ';' + _mjrun + ' -java %1 %2 %3 %4'
::                        [_classpath + _main_class + .cfxFullN,_utf8,_word,'\"']
::

::                  _classpath:='%3.:%1:%2%3'[_jar,.mjdbc,'\\\\\"'];

::                  _result:=jexec(_wordPath,'runOnAppServer=1,wait=1,stderr=program_err.log,stdout=program_out.log',
::                                '-Djava.class.path=%1'[_classpath], _main_class,'%1 %2 %3'[.cfxFullN,_utf8,_word])
::               ?};
               {? +_cmd
               ||
::                  _result:=system(_cmd,1);
                  {? _showProgress || prgs_clr() ?}
               ||
                  {? _showProgress || prgs_clr() ?};
                  return('')
               ?}
            ||
::             niestety dla wywolan spoza jTerm-a nie ma mozliwosci przekazania danych przez kontrolke :-(
               .copy2Tmp();

               _win_acr:=.PAR.mk_ctr('','my_ctrl',0,0,30,3);
               .PAR.win_cctr(_win_acr,'ctrl_id','pl.macrologic.export2excel.Table:'+.ctrlName);
               .PAR.win_ctr(_win_acr);

               _flds:=.GetFLDS();
               _cfxFN:=gsub(tmp_dir()+.dirSepK+.cfxFName,'\\\\','\\\\\\\\');

               params_set(
                  'this',(.)
               );

               _rule:=
                  '_par:=params_get(); '+
                  {? var_pres('TAB',.)=type_of(SYSLOG)
                  || 'ctr_tab(''TAB_data'',,''ctrl_id'','''',_par.this.TAB'+{? _flds='' || '' || ','+_flds ?}+'); '
                  || ''
                  ?}+
                  'ctr_call(,''ctrl_id'',''createWord'',''TAB_data'','''+_cfxFN+''','''+$.Xutf8+'''); '

                  'ctr_call(,''ctrl_id'',''getIds'','''+.sId+''','''+.eId+'''); '

                  '_PARAGRAF:=_par.this.PARAGRAF; '
                  '{? _PARAGRAF.first() '
                  '|| {! '
                     '|? ctr_call(,''ctrl_id'',''addParagraph'',_PARAGRAF.memo_txt(0,1,''VAL''),_PARAGRAF.ID); '
                        '_PARAGRAF.next() '
                     '!} '
                  '?}; '

                  '_REPLACE:=_par.this.REPLACE; '
                  '{? _REPLACE.first() '
                  '|| {! '
                     '|? ctr_call(,''ctrl_id'',''replaceText'','
                           '_REPLACE.memo_txt(0,1,''OLD''),_REPLACE.memo_txt(0,1,''NEW''),'
                           '_REPLACE.ID,$_REPLACE.FROM,$_REPLACE.TO'
                        '); '
                       ' _REPLACE.next() '
                     '!} '
                  '?}; '

                  '_REPTAB:=_par.this.REPTAB; '
::                  'exec(''select'',''#table'',_REPTAB); '
                  '_tabIndex:=sql(''select distinct TAB_NR, ROW_NR, ORG_NR from :_a order by TAB_NR,ORG_NR,ROW_NR'',_REPTAB);'
::                  'exec(''select'',''#table'',_tabIndex,,,,''TAB_NR,ROW_NR,ORG_NR'');'
                  '{? _tabIndex.first()'
                  '|| {! '
                     '|? _tabNr:=_tabIndex.TAB_NR; '
                        '_rowNr:=_tabIndex.ROW_NR; '
                        '_orgNr:=_tabIndex.ORG_NR; '
                        '_REPTAB.prefix(_tabNr,_orgNr,_rowNr); '
                        '{? _REPTAB.first() '
                        '|| {! '
                           '|? ctr_call(,''ctrl_id'',''replaceText'','
                                 '_REPTAB.memo_txt(0,1,''OLD''),_REPTAB.memo_txt(0,1,''NEW''),'
                                 '_REPTAB.ID,$_REPTAB.FROM,$_REPTAB.TO'
                              '); '
                             ' _REPTAB.next() '
                           '!} '
                        '?}; '
                        '{? _tabIndex.next()'
                        '|| {? _tabNr=_tabIndex.TAB_NR & _orgNr=_tabIndex.ORG_NR & _rowNr<>_tabIndex.ROW_NR '
                           '|| ctr_call(,''ctrl_id'',''copyRow'',_tabNr,_tabIndex.ROW_NR,_tabIndex.ORG_NR) '
                           '?}; 1 '
                        '?}'
                     '!} '
                  '?}; '

                  '_PBREAK:=_par.this.PBREAK;'
                  '{? _PBREAK.first() '
                  '|| {! '
                     '|? ctr_call(,''ctrl_id'',''addPageBreak'',_PBREAK.memo_txt(0,1,''VAL''),_PBREAK.TYP); '
                        '_PBREAK.next() '
                     '!} '
                  '?}; '

                  '_DELPARAG:=_par.this.DELPARAG;'
                  '{? _DELPARAG.first() '
                  '|| {! '
                     '|? ctr_call(,''ctrl_id'',''delParagraph'',_DELPARAG.memo_txt(0,1,''VAL'')); '
                        '_DELPARAG.next() '
                     '!} '
                  '?}; '
                  'ctr_call(,''ctrl_id'',''saveWord''); '
                  'sel_exit()';

               .PAR.control(,'modal=false, pack=false',$_rule);
               .inREPLAC();
               .inREPTAB();

               {? var_pres('TAB',.)>100 || obj_del(.TAB) ?}
            ?};
::          sprawdz czy nie został plik .cfx co oznaczało by bledy
            {? +.procName
            || _cfxFile:=fopen(.cfxFName,'br',1)
            || _cfxFile:=fopen('@'+tmp_dir()+.dirSepK+.cfxFName,'br',0)
            ?};
            {? _cfxFile
            || {? _size:=fgetsize(_cfxFile)
               || _answer:=0;
                  {? _size > 4194304
                  || FUN.info(
                        'Podczas exportu danych do worda wystąpiły błędy.\n'
                        'Rozmiar pliku jest zbyt duży aby go wyświetlić.'@
                     )
                  || _answer:=FUN.ask(
                        'Podczas exportu danych do worda wystąpiły błędy.\n'
                        'Czy chcesz je wyświetlić?'@
                     )
                  ?};
                  {? _answer
                  || {? +.procName
                     || txt_view(.cfxFName,1,1)
                     || txt_view('@'+tmp_dir()+.dirSepK+.cfxFName,0,1)
                     ?}
                  ?}
               ?};
               fclose(_cfxFile)
            ?};
            {? +.procName
            || _wordFile:=fopen(.exFName,'br',1)
            || _wordFile:=fopen('@'+tmp_dir()+.dirSepK+.exFName,'br',0)
            ?};
            {? _wordFile
            || fclose(_wordFile);
               {? +.procName=0
               || {? ~fcopy('@'+tmp_dir()+.dirSepK+.exFName,.exFName,0,1,1)
                  || {? .jTerm & .MSG
                     || FUN.error('Nie udało się skopiować pliku szablonu z katalogu tymczasowego.'@)
                     ?};
                     return('')
                  ?}
               ?};
::             dodaj plik do listy utworzonych plików od czasu utworzenia obiektu
               .Add2CEF(.exFName);
               {? _pth
               || pth_dir(.exFName) + .dirSep + .exFName
               || .exFName
               ?}
            || ''
            ?}
            ",type_of(0),-1),

   obj_meth('GetSyCol',"
::          funkcja dekodująca numer kolumny na symbol kolumny - w wersji 97-2003 max liczba kolumn to 256
            _zn:='';
            _adr:=spli_str('A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z',',');
            _liczba:=floor(_a);
            {? _liczba < 1 | _liczba > 256
            || {? .jTerm & .MSG
               || FUN.error('Błędna wartość argumentu. Poprawne wartości mieszczą sie w zaokresie od 1 do 256.'@)
               ?}
            || _first:=_liczba%26;
               _second:=_liczba%*26;
               _zn:={?_first || _adr[_first] ||'' ?} + {?_second || _adr[_second] || '' ?}
            ?};
            _zn
            ",type_of(0),-1),

   obj_meth('ErasePar','usuwanie parametrów procedury';"
            .PAR.erase()
            ",-1),

   obj_meth('ErasePos','usuwanie parametrów pozycji wklejania danych';"
            .STYLE:='';
            .TABSTYLE:='';
            .CELLSTYL.erase();
            .PARAGRAF.erase()
            ",-1),

   obj_meth('NewName','ustawia nową nazwę tworzonego pliku word i pliku cfg';"
::          ze względu na ograniczenie maks. długość nazwy pliku to 64 znaki
::          min. liczbę znaków rezerwujemy na tm_stampa + '~_' + '.docx'
            _ts:=$SYSLOG.tm_stamp();
            _min:='~_%1.docx'[_ts];
            _max:=64-(+_min);
            _fileName:={? var_pres('fileName',.)>0 & +.fileName || .fileName || '' ?};
            {? +_fileName>_max
            || _fileName:=((_max+_fileName)-3)+'...'
            ?};
            {? +_fileName || _fileName+='_' ?};
            _nazwa:='~%1%2'[_fileName,_ts];
            _nazwa:=gsub(_nazwa,' ','_');
::          usuwamy ogonki z nazwy pliku wynikowego (wymaga tego jexec())
            _nazwa:=STR.maz2nop(_nazwa);
            .cfxFName:=_nazwa+'.cfx';
            .exFName:=_nazwa+'.docx';
            ~~
            ",-1),

   obj_meth('GetFLDS','pobiera string z akronimami pól do pokazania';"
            _akr:='';
            .TAB_FLDS.prefix();
            {? .TAB_FLDS.first()
            || {!
               |? _akr+=\"'\"+.TAB_FLDS.VAL+\"'\" +\",\";
                  .TAB_FLDS.next()
               !};
               _akr:=_akr-1
            ?};
            _akr
            ",-1),

   obj_meth('GetFLDH','pobiera string z akronimami pól do ukrycia';"
            _akr:='';
            .TAB_FLDH.prefix();
            {? .TAB_FLDH.first()
            || {!
               |? _akr+=\"'\"+.TAB_FLDH.VAL+\"'\" +\",\";
                  .TAB_FLDH.next()
               !};
               _akr:=_akr-1
            ?};
            _akr
            ",-1),

   obj_meth('GetCSTYL','pobiera string z akronimami pól do ukrycia';"
            _akr:='';
            .CELLSTYL.prefix();
            {? .CELLSTYL.first()
            || {!
               |? _akr+=
                     $.CELLSTYL.ROW+\",\"+$.CELLSTYL.COL+\":\"+.CELLSTYL.ID+\";\";
                  .CELLSTYL.next()
               !};
               _akr:=_akr-1
            ?};
            _akr
            ",-1),

   obj_meth('GetFText','pobiera tekst z pliku';"
            _text:='';
            _cfxFile:=fopen(.cfxFName,'r',1);
            {? _cfxFile
            ||
               {! |? (_wiersz:=fread(_cfxFile)) <> '\n' |!
                  _text+=_wiersz + '\n'
               !};
               fclose(_cfxFile)
            ?};
            _text
            ",type_of('')),

   obj_meth('Add2CEF','dodawanie do tabeli tabCEF nazwy utworzonego pliku';"
            .tabCEF.prefix();
            .tabCEF.blank();
            .tabCEF.NAME:=_a;
            .tabCEF.add()
            ",type_of(''),-1),

   obj_meth('Open','otwiera plik worda do edycji';"
            _tryb:={? (_a<>1) & (_a<>2) & (_a<>3) || _a:=1 || _a ?};

::          dla inTerma sprawdzamy czy mamy włączony inDevice
            {? .inTerm & exec('cli_functions','#system')=0
            || FUN.emsg(exec('indevice_nacc_msg','#system')+'\n'+'Przerwano przygotowanie raportu.'@);
               return(0)
            ?};

            {? .inTerm | .procName='JSON'
            || fcopy(.exFName,'@'+tmp_dir()+.dirSepK+.exFName,1,0,1)
            ?};
            _doc:=tmp_dir()+.dirSepK+.exFName;
            {? cli_exec(_doc)
            || _ret:=0;
               _again:=_tryb=2;
               _count:=14;
               {!
               |? _again
               |! _txt:='Oczekiwanie na wykonanie polecenia systemowego.\n'
                        'Przerwanie oczekiwania spowoduje odesłanie redagowanego pliku \"%1\"\n'
                        'na serwer aplikacji i kontynuowanie aplikacji.'@[.exFName];
                  _prg:=-1;
                  _loop:=0;
                  {!
                  |? _prg<0 & _loop<_count
                  |! delay(,500);
                     _loop+=1;
                     _prg:=progress(,_txt,,1,,,,'Przerwij oczekiwanie')
                  !};
                  _count:=6;
                  {? _prg>=0
                  || _again:=~FUN.ask('Czy na pewno chcesz przerwać oczekiwanie na zakończenie redagowania pliku: %1?'@
                                      [.exFName])
                  || _fh:=fopen('@'+_doc,'b',0,0,1);
                     {? _fh.is_open()
                     || _fh.fclose();
                        _ret:=1;
                        _again:=0
                     ?};
                     obj_del(_fh)
                  ?}
               !};
               prgs_clr();
               _ret
            ?}
            ",type_of(0),-1),

:: --METODY-PUBLICZNE (zaleca się używania tylko tych metod)------------------------------------------------------------

   obj_meth('SetProc','ustawia nazwę procedury wbudowanej';"
            _error:='';
            {? +_a
            || {? (_a*'@')<>0 | _a='JSON'
               || {? var_pres('TAB',.) > 100 || obj_del(.TAB) ?};
                  .TAB:=null();
                  .TAB_FLDS.erase();
                  .TAB_FLDH.erase();
                  .procName:=_a;
                  .tabTitle:='';
                  .ErasePos();
                  .ErasePar()
               ||
                  _error:='Błędna wartość parametru.\nNależy podać procedurę w postaci: nazwa_proc@plik'
               ?}
            || _error:='Błędna wartość argumentu.\nBrak nazwy procedury wbudowanej.'
            ?};
            {? +_error & .jTerm & .MSG
            || FUN.error(_error)
            ?}
            ", type_of(''),-1),

   obj_meth('AddParam','dodawanie do tabeli PAR wartości parametru procedury';"
            .PAR.prefix();
            _key:=.PAR.size()+1;
            .PAR.blank();
            .PAR.KEY:=_key;
            .PAR.VAL:=_a;
            .PAR.add()
            ",type_of(''),-1),

   obj_meth('Replace','zamienia stary tekst na nowy';"
            _errMsg:='WORD.Replace() - [%1]\n'@[_a];
            _error:=0;
            {? _d<0 | _e<0
            || _error:=1;
               _errMsg+='Parametry _d oraz _e nie mogą być mniejsze od zera.'@
            |? _d=0 & _e>0
            || _error:=1;
               _errMsg+='Parametr _d nie został określony.'@
            |? _e>0 & _e<_d
            || _error:=1;
               _errMsg+='Parametr _e nie może być mniejszy od parametru _d.'@
            ?};
            {? _error
            || FUN.emsg(_errMsg);
               return(0)
            ?};
            {? _f>=0 & _g>=0 & _h>=0
            || .REPTAB.prefix();
               .REPTAB.blank();
               .REPTAB.TAB_NR:=_f;
               .REPTAB.ROW_NR:=_g;
               .REPTAB.ORG_NR:=_h;
               .REPTAB.memo_set(_a,'OLD');
               .REPTAB.memo_set(_b,'NEW');
               .REPTAB.ID:=_c;
               .REPTAB.FROM:=_d;
               .REPTAB.TO:=_e;
               .REPTAB.add() & .REPTAB.memo_put(,'OLD') & .REPTAB.memo_put(,'NEW')
            ||
               .REPLACE.prefix();
               _old_hash:=hash(_a);
               _new_hash:=hash(_b);
               {? ~.REPLACE.find_tab(,'OLD_HASH',,'=',_old_hash,
                                      'NEW_HASH',,'=',_new_hash,
                                      'ID',,'=',_c,
                                      'FROM',,'=',_d,
                                      'TO',,'=',_e)
               || _key:=.REPLACE.size()+1;
                  .REPLACE.blank();
                  .REPLACE.KEY:=_key;
                  .REPLACE.OLD_HASH:=_old_hash;
                  .REPLACE.NEW_HASH:=_new_hash;
                  .REPLACE.memo_set(_a,'OLD');
                  .REPLACE.memo_set(_b,'NEW');
                  .REPLACE.ID:=_c;
                  .REPLACE.FROM:=_d;
                  .REPLACE.TO:=_e;
                  .REPLACE.add() & .REPLACE.memo_put(,'OLD') & .REPLACE.memo_put(,'NEW')
               ?}
            ?}
            ",type_of(''),type_of(''),type_of(''),type_of(0),type_of(0),type_of(0),type_of(0),type_of(0),-1),

   obj_meth('Replace','zamienia stary tekst na nowy';"
            .Replace(_a,_b,.STYLE,0,0,_f,_g,_h)
            ",type_of(''),type_of(''),type_of(~~),type_of(~~),type_of(~~),type_of(0),type_of(0),type_of(0),-1),

   obj_meth('Replace','zamienia stary tekst na nowy';"
            .Replace(_a,_b,.STYLE,_d,_e,-1,-1,-1)
            ",type_of(''),type_of(''),type_of(~~),type_of(0),type_of(0),-1),

   obj_meth('Replace','zamienia stary tekst na nowy';"
            .Replace(_a,_b,.STYLE,_d,0,-1,-1,-1)
            ",type_of(''),type_of(''),type_of(~~),type_of(0),-1),

   obj_meth('Replace','zamienia stary tekst na nowy';"
            .Replace(_a,_b,_c,0,0,-1,-1,-1)
            ",type_of(''),type_of(''),type_of(''),-1),

   obj_meth('Replace','zamienia stary tekst na nowy';"
            .Replace(_a,_b,.STYLE,0,0,-1,-1,-1)
            ",type_of(''),type_of(''),-1),

   obj_meth('Replace','zamienia stary tekst na nowy';"
            .Replace(_a,_b,_c.id,0,0,-1,-1,-1)
            ",type_of(''),type_of(''),type_of(obj_new('id')),-1),
   obj_meth('Replace','zamienia stary tekst na nowy';"
            .Replace(_a,_b,_c.id,_d,0,-1,-1,-1)
            ",type_of(''),type_of(''),type_of(obj_new('id')),type_of(0),-1),
   obj_meth('Replace','zamienia stary tekst na nowy';"
            .Replace(_a,_b,_c.id,_d,_e,-1,-1,-1)
            ",type_of(''),type_of(''),type_of(obj_new('id')),type_of(0),type_of(0),-1),

   obj_meth('AddParagraph','dodawanie do tabeli PARAGRF wartości tekstowego paragrafu';"
            .PARAGRAF.prefix();
            _key:=.PARAGRAF.size()+1;
            .PARAGRAF.blank();
            .PARAGRAF.KEY:=_key;
            .PARAGRAF.memo_set(_a,'VAL');
            .PARAGRAF.ID:=_b;
            .PARAGRAF.add() & .PARAGRAF.memo_put(,'VAL')
            ",type_of(''),type_of(''),-1),

   obj_meth('AddParagraph','dodawanie do tabeli PARAGRF wartości tekstowego paragrafu';"
            .AddParagraph(_a,.STYLE)
            ",type_of(''),-1),

   obj_meth('AddParagraph','dodawanie do tabeli PARAGRF wartości tekstowego paragrafu';"
            .AddParagraph(_a,_b.id)
            ",type_of(''),type_of(obj_new('id')),-1),

   obj_meth('DelParagraph','dodawanie do tabeli DELPARAG wartości tekstowego paragrafu, który należy usunąć';"
            .DELPARAG.prefix();
            _key:=.DELPARAG.size()+1;
            .DELPARAG.blank();
            .DELPARAG.KEY:=_key;
            .DELPARAG.memo_set(_a,'VAL');
            .DELPARAG.add() & .DELPARAG.memo_put(,'VAL')
            ",type_of(''),-1),

   obj_meth('PageBreak','dodawanie do tabeli PBREAK informacji o miejcu wstawienia podziału strony';"
            _typ:=-~_b;
            {? _typ='after' | _typ='before' | _typ='replace'
            || .PBREAK.prefix();
               _key:=.PBREAK.size()+1;
               .PBREAK.blank();
               .PBREAK.KEY:=_key;
               .PBREAK.memo_set(_a,'VAL');
               .PBREAK.TYP:=_typ;
               .PBREAK.add() & .PBREAK.memo_put(,'VAL')
            || FUN.emsg('WORD.PBreak() - [%1]\n'@[_a]+
                        'Błędna wartość parametru _b\n'
                        'Dozwolone wartości parametru _b: before, after, replace'@)
            ?}
            ",type_of(''),type_of(''),-1),

   obj_meth('PageBreak','dodawanie do tabeli PBREAK informacji o miejcu wstawienia podziału strony';"
            .PageBreak(_a,'before')
            ",type_of(''),-1),

   obj_meth('NewStyle',"
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Metoda tworzy tablicę z elementami nazwanymi opisującą styl.
::   WE: [_a] [STRING] - Identyfikator stylu.
::   WY: Tablica.
::----------------------------------------------------------------------------------------------------------------------
      _style:=obj_new('id','align','spacing','font','border','tborder','talign');
      _style.id:=_a;

::    --- < czcionka >
      _style.font:=obj_new('family','size','color','bold','italic','u_line','strike');
::    wartości domyślne
      _style.font.family:='Times New Roman';
      _style.font.size:=12;
::    kolor musi być w formacie rgbString (szestnastkowy opis koloru RRGGBB)
      _style.font.color:='000000';
::    dopuszczalne wartości: 'true', 'false'
      _style.font.bold:='false';
      _style.font.italic:='false';
      _style.font.u_line:='false';
      _style.font.strike:='false';

::    --- < wyrównanie paragrafu>
      _style.align:=obj_new('horizont','vertical');
::    dopuszczalne wartości: 'left','center','right','both'
      _style.align.horizont:='left';
::    dopuszczalne wartości: 'top','center','bottom','auto'
      _style.align.vertical:='auto';

::    --- < odstępy paragrafu>
      _style.spacing:=obj_new('before','after','linerule','line');
::    Odstępy podaje się w specyficznych jednostkach.
::    Dla odstępów przed paragrafem i po paragrafie zakłada się, że jednemu punktowi odpowiada jednostka 20.
::    Jeżeli więc chcemy, uzyskać odstęp 6 pkt, to wartość należy ustawić na 6*20=120;
::    Jeżeli linerule='auto', to odstęp interlinia (line) należy podawać w 'liniach', przy czym przyjmuje się, że
::    pojedynczemu odstępowi odpowiada wartość 240.
::    Dla pozostałych wartości linerule ('at_least','exact') odstęp podawany jest w punktach, przy czym zakłada się, że
::    jednemu punktowi odpowiada jednostka 20.

::    wartości domyślne
      _style.spacing.before:=0;
      _style.spacing.after:=8*20;
      _style.spacing.linerule:='auto';
      _style.spacing.line:=240;

::    --- < obramowanie paragrafu>
      _style.border:=obj_new('left','top','right','bottom');
::    dopuszczalne wartości dla pola type: 'normal, double, none'
::    kolor nie jest jeszcze obsługiwany
      _style.border.left:=obj_new('type','color');
      _style.border.top:=obj_new('type','color');
      _style.border.right:=obj_new('type','color');
      _style.border.bottom:=obj_new('type','color');

::    wartości domyślne
      _style.border.left.type:='none';
      _style.border.right.type:='none';
      _style.border.top.type:='none';
      _style.border.bottom.type:='none';

::    --- < wyrównanie komórek tabeli>
::    dopuszczalne wartości: 'top','center','bottom'
      _style.talign:='center';

::    --- < obramowanie tabeli>
      _style.tborder:=obj_new('left','top','right','bottom','insideH','insideV');
::    dopuszczalne wartości dla pola type: 'normal, double, none'
::    kolor nie jest jeszcze obsługiwany
      _style.tborder.left:=obj_new('type','color');
      _style.tborder.top:=obj_new('type','color');
      _style.tborder.right:=obj_new('type','color');
      _style.tborder.bottom:=obj_new('type','color');
::    obramowanie wewnętrzne tabeli (całej) poziome i pionowe
      _style.tborder.insideH:=obj_new('type','color');
      _style.tborder.insideV:=obj_new('type','color');

::    wartości domyślne
      _style.tborder.left.type:='normal';
      _style.tborder.right.type:='normal';
      _style.tborder.top.type:='normal';
      _style.tborder.bottom.type:='normal';
      _style.tborder.insideH.type:='normal';
      _style.tborder.insideV.type:='normal';

      _style
   ",type_of(''),-1
   ),

   obj_meth('NewStyle',"
      .NewStyle('S'+$SYSLOG.tm_stamp())
   ",-1),


   obj_meth('AddStyle',"
      _style:=_a;
      {? obj_ntab(_style) & var_pres('id',_style)=type_of('')
      || {? obj_ntab(.styles)
         || _ok:=1;
            {! _lp:=1 .. obj_len(.styles)
            |? _ok:=.styles[_lp].id<>_style.id
            !};
            {? _ok
            || _new:=obj_ntab_add(.styles,_style.id);
               ($('_a.'+_style.id+':=_b'))(_new,_style);
               obj_del(.styles);
               .styles:=_new
            ?}
         || .styles:=obj_new(_style.id);
            ($('_a.'+_style.id+':=_b'))(.styles,_style)
         ?}
      ?}
   ",type_of(obj_new('id')),-1),


   obj_meth('CopyStyle',"
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Metoda tworzy nowy styl na podstawie podanego.
::   WE:  _a  [ARRAY]  - Tablica z istniejącym stylem.
::       [_b] [STRING] - Identyfikator nowego stylu.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
      _copy:=\"
         _copy:=_a;
         _adest:=_b;
         _afrom:=_c;
         _names:=obj_ntab_names(_adest);
         {! _lp:=1 .. obj_len(_names)
         |! {? obj_ntab(_adest[_lp])
            || _copy(_copy,_adest[_lp],($('_a.'+_names[_lp]))(_afrom))
            |? _names[_lp]<>'id'
            || ($('_a.%1:=_b.%1' [_names[_lp]]))(_adest,_afrom)
            ?}
         !}
      \";
      _style:=.NewStyle(_b);
      _copy(_copy,_style,_a);
      _style
   ",type_of(obj_new('id')),type_of(''),-1),

   obj_meth('CopyStyle',"
      .CopyStyle(_a,'S'+$SYSLOG.tm_stamp())
   ",type_of(obj_new('id')),-1),


   obj_meth('AddCellStyle','dodaje styl do komórki';"
      .AddCellStyle(_a,_b,_c.id)
   ",type_of(0),type_of(0),type_of(obj_new('id')),-1),

   obj_meth('AddCellStyle','dodaje styl do komórki';"
            .CELLSTYL.prefix();
            .CELLSTYL.blank(1);
            .CELLSTYL.ROW:=_a;
            .CELLSTYL.COL:=_b;
            .CELLSTYL.ID:=_c;
            .CELLSTYL.add()
            ",type_of(0),type_of(0),type_of(''),-1),

::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.14]
:: OPIS: Metoda Template służy do wskazywania pliku szablonu, który będzie użyty podczas tworzenia pliku worda
::       Obsługuje warstwy plików szablonów:
::          warstwa standardowa *.doc, *.dotx,
::          warstwa modyfikacji *.m.doc, *.m.dotx
::   WE: _a [STRING] - nazwa pliku szablonu
::       _b [NUMBER] - czy nazwa pliku zgodna z pth
::       _c [NUMBER] - czy kopiować plik szablonu do katalogu tymczasowego końcówki (do tmp_dir)
::                     parametr ma znaczenie jeżeli szabon nie jest wyszukiwany zgodnie z pth
::          UWAGA!!! - do poprawnego działania mechanizmu zawsze wymagane jest umieszczenie szablonu w katalogu tmp_dir
::          Można to wyłączyć trzecim parametrem, jeżeli samemu zapewniło się skopiowanie szblonu do katalogu tmp_dir
::   WY:
::----------------------------------------------------------------------------------------------------------------------
   obj_meth('Template','ustawia  nazwę szablonu do tworzenia pliku worda';"
            {? _b=1
            || .exTPth:=1;
               .exTCopy:=1;
               .exTName:=__FileLayer.real_name(_a);
               .exTFullN:=pth_dir(_a) + .dirSep + _a
            || .exTPth:=0;
               .exTFullN:=_a;
               .exTCopy:=_c;
               _dirSep:={? _a*.dirSepK || .dirSepK || .dirSep ?};
               _obj:=spli_str(_a,_dirSep);
               _size:=obj_len(_obj);
               {? _size>0
               || .exTName:=_obj[_size]
               ?}
            ?};
            ~~
            ",type_of(''),type_of(0),type_of(0),-1),

   obj_meth('Template','ustawia  nazwę szablonu do tworzenia pliku worda';"
            .Template(_a,_b,1);
            ~~
            ",type_of(''),type_of(0),-1),

   obj_meth('Template','ustawia  nazwę szablonu do tworzenia pliku worda';"
            .Template(_a,1,1);
            ~~
            ",type_of(''),-1),

   obj_meth('GetIds','pobiera identyfikatory z szablonu';"
            _error:='';
            .sId:={? var_pres('_a')=type_of('') || _a || '<' ?};
            .eId:={? var_pres('_b')=type_of('') || _b || '>' ?};
            {? var_pres('TABIDS',.)>100 || obj_del(.TABIDS) ?};
            .NewName();
            {? ~.CreateCF()  || return(~~) ?};
            {? .cfxFName='' || _error+='Brak nazwy pliku konfiguracyjnego. ' ?};
            {? .exFName=''  || _error+='Brak nazwy pliku worda. ' ?};
            {? +_error
            || {? .jTerm & .MSG
               || FUN.error(_error)
               ?};
               return('')
            ?};
            .cfxFullN:=pth_dir(.cfxFName) + .dirSep + .cfxFName;
            {? +.procName
            || _showProgress:=.showPrg & .procName='JSON';
               {? _showProgress
               || progress(,'Trwa przetwarzanie pliku szablonu \\'%1\\'.'@[.exFName]+
                            '\nProszę czekać...'@,
                            'Generowanie pliku'@,1)
               ?};

               {? .procName='JSON' || .toJSON() ?};
               _wordPath:=pth_dir(.exFName);
               _jar:=pth_dir(.libFName) + .dirSep + .libFName;
               _cmd:='';
               _word:='word';
               _getIds:='getIds';
               _utf8:={? .Xutf8 || 'true' || 'false' ?};
::               _main_class:=' pl.macrologic.export2excel.Main ';
::               {? .sysAS = 'WINDOWS'
::               || _mjrun:=exe_dir(1) + .dirSep +'mjrun.exe';
::                  _classpath:=' -classpath .;' + _jar + ';' + .mjdbc;
::                  _cmd:='cmd /C \"cd ' + '\"' + _wordPath + '\"' + ' & ' + '\"' + _mjrun + '\"' +
::                        ' -wait -java %1 %2 %3 %4 %5'
::                        [_classpath + _main_class + .cfxFullN,_utf8,_word,_getIds,'\"']
::               ||
::                  _mjrun:=exe_dir(1) + .dirSep + 'MacroJRUN -wait';
::                  _classpath:=' -classpath .:' + _jar + ':' + .mjdbc;
::                  _cmd:='sh -c \"cd ' + _wordPath + ';' + _mjrun + ' -java %1 %2 %3 %4 %5'
::                        [_classpath + _main_class + .cfxFullN,_utf8,_word,_getIds,'\"']
::               ?};
               _main_class:='pl.macrologic.export2excel.Main';
               _classpath:='%1'[_jar];
               _param:=obj_new('classpath', 'main_class','param1','param2','param3','param4');
               _param.classpath:='-Djava.class.path=%1'[_classpath];
               _param.main_class:=_main_class;
               _param.param1:=.cfxFullN;
               _param.param2:=_utf8;
               _param.param3:=_word;
               _param.param4:=_getIds;
               _result:=jexec(_wordPath,'runOnAppServer=1,wait=1,stderr=program_err.log,stdout=program_out.log',_param);
               _cmd:='ok';
               {? +_cmd
               ||
::                  _result:=system(_cmd,1);
                  {? _showProgress || prgs_clr() ?}
               ||
                  {? _showProgress || prgs_clr() ?};
                  return('')
               ?}
            ||
               .copy2Tmp();

               _win_acr:=.PAR.mk_ctr('','my_ctrl',0,0,30,3);
               .PAR.win_cctr(_win_acr,'ctrl_id','pl.macrologic.export2excel.Table:'+.ctrlName);
               .PAR.win_ctr(_win_acr);

               _flds:=.GetFLDS();
               _cfxFN:=gsub(tmp_dir()+.dirSepK+.cfxFName,'\\\\','\\\\\\\\');

               params_set(
                  'this',(.)
               );

               _rule:=
                  '_par:=params_get(); '+
                  {? var_pres('TAB',.)=type_of(SYSLOG)
                  || 'ctr_tab(''TAB_data'',,''ctrl_id'','''',_par.this.TAB'+{? _flds='' || '' || ','+_flds ?}+'); '
                  || ''
                  ?}+
                  'ctr_call(,''ctrl_id'',''createWord'',''TAB_data'','''+_cfxFN+''','''+$.Xutf8+'''); '

                  '_par.this.TABIDS:=ctr_call(,''ctrl_id'',''getIds'','''+.sId+''','''+.eId+'''); '

                  'sel_exit()';

               .PAR.control(,'modal=false, pack=false',$_rule)
            ?};
::          sprawdz czy nie został plik .cfx co oznaczało by bledy
            {? +.procName
            || _cfxFile:=fopen(.cfxFName,'br',1)
            || _cfxFile:=fopen('@'+tmp_dir()+.dirSepK+.cfxFName,'br',0)
            ?};
            {? _cfxFile
            || {? _size:=fgetsize(_cfxFile)
               || _answer:=0;
                  {? _size > 4194304
                  || FUN.info(
                        'Podczas exportu danych do worda wystąpiły błędy.\n'
                        'Rozmiar pliku jest zbyt duży aby go wyświetlić.'@
                     )
                  || _answer:=FUN.ask(
                        'Podczas exportu danych do worda wystąpiły błędy.\n'
                        'Czy chcesz je wyświetlić?'@
                     )
                  ?};
                  {? _answer
                  || {? +.procName
                     || txt_view(.cfxFName,1,1)
                     || txt_view('@'+tmp_dir()+.dirSepK+.cfxFName,0,1)
                     ?}
                  ?}
               ?};
               fclose(_cfxFile)
            ?};
            {? .procName='JSON'
            || .TABIDS:=tab_tmp(4,
                  'IN_TABLE','INTEGER','Czy w tabeli?',
                  'TABLE_NR','INTEGER','Numer tabeli',
                  'ROW_NR','INTEGER','Numer wiersza',
                  'COL_NR','INTEGER','Numer komórki',
                  'ID','STRING[255]','Identyfikator etykiety'
               );
               .Add2CEF(.cfxFName);
               _fName:=gsub(.cfxFName,'.cfx','_ids_json.cfx');
               .Add2CEF(_fName);
               exec('file2tab','#json',.TABIDS,_fName,1)
            ?};
            .TABIDS
            ",type_of(''),type_of(''),-1),

   obj_meth('Header','włączenie tworzenia w pliku worda naglówka eksportowanej tabeli';"
            .Header(_a,1)
            ",type_of(0),-1),

   obj_meth('Header','włączenie tworzenia w pliku worda naglówka eksportowanej tabeli';"
            {? _a<> 0 & _a<>1
            || {? .jTerm & .MSG
               || FUN.error('Błędna wartość argumentu _a.\n'
                            '(0) - wyłącza nagłówek.\n'
                            '(1) - włącza nagłówek.'@)
               ?}
            || .header:=_a
            ?};
            {? _b<> 0 & _b<>1
            || {? .jTerm & .MSG
               || FUN.error('Błędna wartość argumentu _b.\n'
                            '(0) - nagłówek na podstawie nazwy pola.\n'
                            '(1) - nagłówek na podstawie akronimu pola.'@)
               ?}
            || .headAcr:=_b
            ?}
            ",type_of(0),type_of(0),-1),

   obj_meth('Title','ustawia tytuł eksportowanej tabeli';"
            .tabTitle:=_a
            ",type_of(''),-1),

    obj_meth('AutoSize','włącza automatyczne doposowanie szerokosci kolumn';"
            {? (_a<>0)&(_a<>1) || _a:=0 ?};
            .autoSize:=_a;
            ~~
            ",type_of(0),-1),

   obj_meth('SetMsg','włącza/wyłącza komunikaty';"
            {? (_a <> 0) & (_a <> 1)
            || {? .jTerm & .MSG
               || FUN.error('Błędna wartość argumentu.\n(0) - wyłącza komunikaty.\n(1) - włącza komunikaty.'@)
               ?}
            || .MSG:=_a
            ?}
            ", type_of(0),-1),

   obj_meth('SetTab','ustawia nazwę tabeli';"
            {? var_pres('TAB',.) > 100 || obj_del(.TAB) ?};
            .TAB:=_a;
            .TAB_FLDS.erase();
            .TAB_FLDH.erase();
            {? ~.inTerm & ~.jTerm
            || .procName:=''
            |? (.inTerm & .procName<>'JSON')
            || .procName:='JSON'
            ?};
            .tabTitle:='';
            .ErasePos();
            .ErasePar()
            ", type_of(SYSLOG),-1),

   obj_meth('SetTab','ustawia nazwę tabeli oraz pola tabeli';"
            .SetTab(_a);
            .TabFldS(_b)
            ", type_of(SYSLOG),type_of(''),-1),

   obj_meth('TabPlace','ustawia miejsce wstawienia tabeli';"
            .TABPLACE:=_a
            ",type_of(''),-1),

::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Metoda określająca miejsce wstawienia danych do istniejącej w szablonie tabeli.
::       Jeżeli będzie wskazany identyfikator miejsca wstawiania tabeli (TabPlace) to ustawienia poniższe nie będą
::       miały znaczenia!.
::   WE:  _a  [INTEGER] - Numer tabeli w pliku szablonu. Numeracja zaczyna się od 0.
::        _b  [INTEGER] - Numer wiersza tabeli, poniżej którego będziemy wstawiać dane. Numeracja zaczyna się od 0.
::       [_c] [INTEGER] - Numer wiersza tabeli, który posłuży jako wiersz wzorcowy jeśli chodzi o rozkład komórek.
::----------------------------------------------------------------------------------------------------------------------
   obj_meth('TabIns','ustawia miejsce wstawienia danych do istniejącej tabeli';"
      .TabIns(_a,_b,_b)
   ",type_of(0),type_of(0),-1),

   obj_meth('TabIns','ustawia miejsce wstawienia danych do istniejącej tabeli';"
      .tabNr:=_a;
      .tabRowNr:=_b;
      .tabRowAs:=_c
   ",type_of(0),type_of(0),type_of(0),-1),

   obj_meth('TabStyle','ustawia styl dla tabeli';"
      .TabStyle(_a.id)
   ",type_of(obj_new('id')),-1),

   obj_meth('TabStyle','ustawia styl dla tabeli';"
            .TABSTYLE:=_a
            ",type_of(''),-1),

   obj_meth('SetStyle','ustawia style';"
      .STYLE:=_a
   ",type_of(''),-1),

   obj_meth('SetStyle','ustawia style';"
      .SetStyle(_a.id)
   ",type_of(obj_new('id')),-1),

   obj_meth('SetStyle','ustawia style';"
      .SetStyle('')
   ",-1),

   obj_meth('TabFldS','ustawia akronim przekazywanego pola';"
            _spltab:=spli_str(_a,',');
            _max:=obj_len(_spltab);
            {! _ind:=1 .. _max
            |! {? _spltab[_ind] <> ''
               || .TAB_FLDS.prefix();
                  _key:=.TAB_FLDS.size()+1;
                  .TAB_FLDS.blank(1);
                  .TAB_FLDS.KEY:=_key;
                  .TAB_FLDS.VAL:=_spltab[_ind];
                  .TAB_FLDS.add()
               ?}
            !}
            ", type_of(''),-1),

   obj_meth('TabFldH','ustawia akronim przekazywanego pola do ukrycia';"
            _spltab:=spli_str(_a,',');
            _max:=obj_len(_spltab);
            {! _ind:=1 .. _max
            |! {? _spltab[_ind] <> ''
               || .TAB_FLDH.prefix();
                  _key:=.TAB_FLDH.size()+1;
                  .TAB_FLDH.blank(1);
                  .TAB_FLDH.KEY:=_key;
                  .TAB_FLDH.VAL:=_spltab[_ind];
                  .TAB_FLDH.add()
               ?}
            !}
            ", type_of(''),-1),

   obj_meth('Create','tworzy plik worda i zwraca nazwę utworzonego pliku';"
::            sprawdz czy ustawiona jest nazwa procedury lub tabela
            {? (.procName='') & (type_of(.TAB)=type_of(null))
            || {? .jTerm & .MSG
               || FUN.error('Brak źródła danych do exportu.'@)
               ?};
               return(0)
            ?};

            _pth:={? var_pres('_a')=type_of(0) || _a || 0 ?};
            .NewName();
            {? .CreateCF()
            || .CreateXF(_pth)
            ?}
            ",type_of(0),-1),

   obj_meth('Create','tworzy plik worda i zwraca nazwę utworzonego pliku';"
            .Create(0)
            ",-1),

   obj_meth('Run','tworzy plik worda i wyświetla go. Domyślnie z czekaniem na zakończenie i usuwaniem po zakończeniu';"
             .Run(2,1)
            ",-1),

   obj_meth('Run','tworzy plik worda i wyświetla go. Domyślnie z usuwaniem po zakończeniu';"
            .Run(_a,1)
            ",type_of(0),-1),

   obj_meth('Run','tworzy plik worda i wyświetla go';"
            {? (_a<>0) & (_a<>1) & (_a<>2) & (_a<>3) || _a:=0 ?};
            .Create();
            _exFile:=fopen(.exFName,'r',1);
            {? _exFile
            || fclose(_exFile);
               {? _a=0
::                uruchomienie pliku dostępnego na serwerze
               || {? .inTerm
                  || dlg_save(.exFName,1)
                  || sys_exec(.exFName,'Otwieranie pliku...',_a)
                  ?}
               || .Open(_a)
               ?};
::             usuwamy pliki jeżeli parametr _b na to pozwala i jeżeli nie otwieramy bez czekania
               {? _b=1 & (_a=1 | _a=2)
               || .DelFiles(.exFName,_a=1);
                  {? _a=1 || ''
                  |? _a=2 || .exFName
                  ?}
               || .exFName
               ?}
            || {? .jTerm & .MSG
               || FUN.error('Nie udało się utworzyć pliku worda.'@)
               ?};
               ''
            ?}
            ",type_of(0),type_of(0),-1),

   obj_meth('DelETabs','usuwa puste tabele w utworzonym wordzie ';"
            .delETabs:={? var_pres('_a')=type_of(0) || _a || 0 ?}
            ",type_of(0),-1),

:: Należy pamiętać, że nie jesteśmy w stanie usunąć plików utworzonych w katalogu:
:: %APPDATA%\macroBASE\jMacroBASE\%ASADDRESS%_%ASPORT%\%ASGROUP%\%ASNAME%\ - nie mamy tam dostępu
   obj_meth('DelFiles','usuwa pliki worda utworzone od powstania obiektu';"
            _fname:={? var_pres('_a')=type_of('') || _a || '' ?};
              _tmp:={? var_pres('_b')=type_of(0)  || _b || 1  ?};
            _inTermMsg:=1;
            {? .tabCEF.first()
            || {!
               |? _deleted:=0;
                  {? (_fname='' | .tabCEF.NAME*_fname)
                  || {? _tmp
::                      usuń też pliki z katalogu tymczasowego na końcówce
                     || {? .inTerm & exec('cli_functions','#system')=0
                        || {? _inTermMsg
                           || FUN.emsg('Próba usunięcia plików tymczasowych z katalogu użytkownika się nie powiodła.'
                                       '\n%1'[exec('indevice_nacc_msg','#system')]);
                              _inTermMsg:=0
                           ?}
                        || _deleted+=ferase('@'+tmp_dir()+.dirSepK+.tabCEF.NAME,0)
                        ?}
                     ?};
                     _deleted+=ferase(.tabCEF.NAME,1)
                  ?};
                  {? _deleted
                  || .tabCEF.del(,1)=2
                  || .tabCEF.next()
                  ?}
               !}
            ?}
            ",type_of(''),type_of(0),-1),

   obj_meth('DelFiles','usuwa pliki worda utworzone od powstania obiektu';"
            .DelFiles(_a,1)
            ",type_of(''),-1),

   obj_meth('DelFiles','usuwa pliki worda utworzone od powstania obiektu';"
            .DelFiles('',1)
            ",-1),

   obj_meth('ReplaceImg','Wstawia obrazek w miejsce wskazanego identyfikatora';"
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [23.25]
:: OPIS: Wstawia obrazek w miejsce wskazanego identyfikatora
::   WE: _a [STRING] - identyfikator, który będzie zamieniany na obrazek
::       _b [STRING] - pełna ścieżka do pliku
::       _c [STRING] - akcja związana z obrazkiem przypisanym do identyfikatora del/add/put
::       _d [NUMBER] - szerokość
::       _e [NUMBER] - wysokość
::   WY:
::----------------------------------------------------------------------------------------------------------------------
            _errMsg:='WORD.ReplaceImg() - parametry wywołania:';
            _errMsg+='\n_a [identyfikator obrazka]: %1'[_a];
            _errMsg+='\n_b [ścieżka do pliku]: %1'[_b];
            _errMsg+='\n_c [akcja]: %1'[_c];
            _errMsg+='\n_d [szerokość obrazka]: %1'[$_d];
            _errMsg+='\n_e [wysokość obrazka]: %1'[$_e];
            _errMsg+='\n\n';
            _error:=0;
            {? _c<>'add' & _c<>'put' & _c<>'del'
            || _error:=1;
               _errMsg+='Parametr _c musi przyjmować jedną z wartości add/put/del.'@
            ?};
            {? _d=0 | _e=0 | (_c='add' & (_d<0 | _e<0))
            || _error:=1;
               _errMsg+='Dodawany obrazek: %1 \nmusi mieć podane '
                        'parametry _d i _e większe od 0.'@[_b]+'\n\n'+
                        'Wskazany plik zostanie pominięty podczas generowania pliku Word.'@
            ?};
            {? _error
            || FUN.emsg(_errMsg);
               return(0)
            ?};

            .IMAGES.prefix();
            _key:=.IMAGES.size()+1;
            .IMAGES.blank();
            .IMAGES.KEY:=_key;
            .IMAGES.memo_set(_a,'IMG');
            .IMAGES.memo_set(_b,'FILE');
            .IMAGES.IMG_ACT:=_c;
            .IMAGES.WIDTH:=_d;
            .IMAGES.HEIGHT:=_e;
            .IMAGES.TAB_NR:=_f;
            .IMAGES.ROW_NR:=_g;

            _res:=.IMAGES.add() & .IMAGES.memo_put(,'IMG') & .IMAGES.memo_put(,'FILE');
::          na wszelki wypadek zamieniamy identyfikatory na te same, w celu uporządkowania run-ów
            {? _res || .Replace(_a,_a) ?};
            _res

            ",type_of(''),type_of(''),type_of(''),type_of(0),type_of(0),type_of(0),type_of(0),-1),

   obj_meth('ReplaceImg','Wstawia obrazek w miejsce wskazanego identyfikatora';"
            .ReplaceImg(_a,_b,_c,_d,_e,-1,-1)
            ",type_of(''),type_of(''),type_of(''),type_of(0),type_of(0),-1),

   obj_meth('ReplaceImg','Wstawia obrazek w miejsce wskazanego identyfikatora';"
            .ReplaceImg(_a,_b,_c,-1,-1,-1,-1)
            ",type_of(''),type_of(''),type_of(''),-1)

           )
?};
{? _dev
|| @.Class.setclass(_typ,_cl_name)
?};
~~


\example
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Przykład działania metod klasy.
::       UWAGA: W celu poprawnego działania obiektu z przekazywaniem tabeli do exportu (metoda .SetTab),
::              należy utworzony obiekt klasy WORD przypisać do zmiennej globalnej.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('init','#word');
_dev:=__develop;
{? _dev
|| _word:=obj_new(@.Class.WORD)
|| _word:=obj_new(@.CLASS.WORD)
?};

_word.devMsg:=0;

_dotx:='pkd_skierbae.dotx';
::_dotx:='pkd_skierbae_small.dotx';
{? ~(_szablon:=fexists(_dotx,1))
|| FUN.info('Brak pliku szablonu: %1\nUruchamiam przykład z prostym tworzeniem dokumentu.'@
            [pth_dir(_dotx)+'/'+_dotx])
?};

:: tworzymy i dodajemy style, które później będziemy wykorzystywać w wordzie
_style1:=_word.NewStyle();
::   _style1.font.family:='Arial';
_style1.font.size:=9;
_style1.font.color:='FF122d';
_style1.align.horizont:='left';
_style1.align.vertical:='bottom';

::   _style1.border.left.type:='none';
::   _style1.border.right.type:='none';
::   _style1.border.top.type:='none';
::   _style1.border.bottom.type:='none';


_style1.tborder.left.type:='none';
_style1.tborder.right.type:='none';
_style1.tborder.top.type:='none';
_style1.tborder.bottom.type:='none';
:   _style1.tborder.insideH.type:='none';
_style1.tborder.insideV.type:='none';
_style1.talign:='top';

:: dodanie stylu do tabeli zdefiniwanych styli
_word.AddStyle(_style1);

_style2:=_word.NewStyle();
_style2.font.size:=13;
_style2.font.color:='00FF00';

:: dopuszczalne wartości: 'left','center','right','both'
_style2.align.horizont:='right';
::dopuszczalne wartości: 'top','center','bottom','auto'
_style2.align.vertical:='top';
_word.AddStyle(_style2);

_style3:=_word.NewStyle();
_style3.font.size:=5;
_style3.font.color:='FF00FF';
_style3.align.horizont:='center';
_style3.align.vertical:='center';
_style3.talign:='bottom';

_word.AddStyle(_style3);

_style4:=_word.NewStyle();
_style4.font.size:=7;
:   _style4.font.color:='FF00FF';
:   _style4.align.horizont:='center';
:   _style4.align.vertical:='center';
:   _style4.talign:='bottom';
:   _style1.tborder.left.type:='none';
::   _style4.tborder.right.type:='none';
::   _style4.tborder.top.type:='none';
::   _style4.tborder.bottom.type:='none';
::   _style4.tborder.insideH.type:='normal';
::   _style4.tborder.insideV.type:='none';

_word.AddStyle(_style4);

{? ~_szablon
:: jeżeli nie wskazaliśmy szablonu to tworzymy go sami ze wskazaniem gdzie będziemy chcieli umieścić tabelę
|| _word.AddParagraph('<TAB_CZYNNIKI>');
   _wordName:=_word.Create()
?};

:: dziedzina przekazanej tabeli musi byc w trakcie wywolywania taka jaka chcemy wyeksportowac
_tab:=exec('tabela_example','#word');
:: wskazanie tabeli - czyści style tabeli
_word.SetTab(_tab);
:: ustawienie stylu dla przekazywanej tabeli
_word.TabStyle(_style1.id);
:: różne stylowanie poszczególnych komórek tabeli
{? _tab.first()
|| _row:=0;
   {!
   |? {? _row=0
      || _word.AddCellStyle(_row,0,_style4.id);
         _word.AddCellStyle(_row,1,_style4.id);
         _word.AddCellStyle(_row,2,_style4.id)
      |? _row=2
      || _word.AddCellStyle(_row,0,_style2.id);
         _word.AddCellStyle(_row,1,_style2.id);
         _word.AddCellStyle(_row,2,_style3.id)
      || _word.AddCellStyle(_row,1,_style3.id)
      ?};
      _row+=1;
      _tab.next()
   !}
?};
:: mozemy okreslic ktore kolumny beda przekazywane do worda, kolejnosc jest wazna i bedzie zachowana
_word.TabFldS('LP,GRUPA,CZYNNIK');

:: wskazujemy napis będący miejscem w szablonie gdzie mamy wstawić tabelę
_word.TabPlace('<TAB_CZYNNIKI>');

:: ustawienie aktualnego stylu dla paragrafów
_word.SetStyle(_style1.id);
:: można wskazać dla każdego paragrafu osobny styl
_word.AddParagraph('Mój nowy pierwszy paragraf',_style3.id);

_word.SetStyle(_style1.id);
_word.AddParagraph('A to zupełnie inny paragraf','');

{? _szablon
||
   _word.Template(_dotx,1);
:: usuwamy ustawiony styl i pozostawiamy domyślne formatowanie w szablonie w miejscach zamiany tekstu
   _word.SetStyle('');
   _word.Replace('<Nazwa_firmy>','Macrologic S.A.');
   _word.Replace('<Ulica_firmy>','Kłopotowskiego 22');
   _word.Replace('<Miasto_firmy>','03-717 Warszawa');
   _word.Replace('<Regon_firmy>','012205939');
   _word.Replace('<NIP_firmy>','5220002825');
   _word.Replace('<NKP_firmy>','');

   _word.Replace('<Miejsce_wystawienia>','Pcim Dolny');
   _word.Replace('<Data_wystawienia>',$date);
   _word.Replace('<Rodzaj_badania>','wstępne');
   _word.Replace('<Adres>','42-210 Ładna 3');
   _word.Replace('<PESEL>','7612240033');

   _word.Replace('<Stanowisko>','Brygadzista');
   _word.Replace('<Stanowisko_opis>','Opis stanowiska');
   _word.Replace('<Nazwisko>','Kowalski');
   _word.Replace('<Imie>','Jan');
   _word.Replace('<Pana_Pania>','Pana');
   _word.Replace('<zamieszkalego>','zamieszkałego');
   _word.Replace('<zatrudnionego>','zatrudnionego');
   _word.Replace('<Liczba_czynnikow>',$_tab.size());


   _tabIds:=_word.GetIds('<','>');
   _tabIds.cntx_psh();
   _ndx:=_tabIds.ndx_tmp('',1,'IN_TABLE',,0,'TABLE_NR',,0,'ROW_NR',,0);
   _tabIds.index(_ndx);
   _tabIds.prefix(1);
   {? _tabIds.first()
   ||  _tabNr:=_tabIds.TABLE_NR;
      _rowOrg:=_rowNr:=_tabIds.ROW_NR;

      OSOBA.prefix();
      {? OSOBA.first()
      || {!
         |? _colNr:=0;
            _tabIds.cntx_psh();
            _tabIds.prefix(1,_tabNr,_rowOrg);
            {? _tabIds.first()
            || {!
               |? _id:=_tabIds.ID;
                  _colNr+=1;
                  _word.Replace(_id,'%1 %2.%3'[OSOBA.NAZWISKO,$_colNr,$_rowNr],,,,_tabNr,_rowNr,_rowOrg);
                  _tabIds.next()
               !}
            ?};
            _tabIds.cntx_pop();
            _rowNr+=1;
            OSOBA.next()
         !}
      ?}
   ?};
   _tabIds.cntx_pop();
   _tabIds.ndx_drop(_ndx);

   {? var_pres('REPTAB',_word)>100
   || exec('select','#table',_word.REPTAB,,,,'ID[30],IN_TABLE,TABLE_NR,ROW_NR,COL_NR')
   ?};

   _wordName:=_word.Create();
::   _wordName:='';
   {? _wordName<>''
   ||
      _word.SetTab(_tab);
      _word.TabFldS('LP,GRUPA,CZYNNIK');
:: wskazujemy napis będący miejscem w szablonie gdzie mamy wstawić tabelę, jeśli program nie znajdzie tego miejsca, to
:: pominie wstawianie tabeli
      _word.TabPlace('TAB_INNA');
      _word.Template(_wordName,1)
   ?}
|| _word.Template(_wordName,1)
?};
_word.Run(2,0);


{? _szablon & _wordName<>''
||
::---teraz dopiero usuwamy pierwszy plik tymczasowy
   _word.DelFiles(_wordName)
?};
~~


\tabela_example
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Przykładowa tabela tymczasowa
::   WY: tabela
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(3,
:: 'POLE','TYP','Nazwa w oknie',
    'NR','INTEGER','Numer'
   ,'LP','STRING[10]','Numer'
   ,'GRUPA','STRING[100]','Grupa czynników'
   ,'CZYNNIK','STRING[255]','Czynnik'
   ,'L_CZ','INTEGER','Liczba czynników w rekordzie'
);
_nr:=0;

::------- CZYNNIKI FIZYCZNE -------------
_nr+=1;
_tab.blank(1);
_tab.NR:=_nr;
_tab.LP:='I.';
_tab.GRUPA:='Czynniki fizyczne:';

:: tutaj należy pobrać wszystkie czynniki fizyczne i dodać je w pętli
_tab.CZYNNIK:='Pierwszy czynnik fizyczny';
_tab.L_CZ:=1;
_tab.add();

_nr+=1;
_tab.blank(1);
_tab.NR:=_nr;
_tab.CZYNNIK:='Drugi czynnik fizyczny, trzeci czynnik psychofizyczny';
_tab.L_CZ:=2;
_tab.add();

:: pusty wiersz
_nr+=1;
_tab.blank(1);
_tab.NR:=_nr;
_tab.add();

::------- PYŁY -------------
_nr+=1;
_tab.blank(1);
_tab.NR:=_nr;
_tab.LP:='II.';
_tab.GRUPA:='Pyły:';

:: tutaj należy pobrać wszystkie czynn
_tab.CZYNNIK:='Pierwszy pył';
_tab.L_CZ:=1;
_tab.add();

_nr+=1;
_tab.blank(1);
_tab.NR:=_nr;
_tab.CZYNNIK:='Drugi pył';
_tab.L_CZ:=1;
_tab.add();

:: pusty wiersz
_nr+=1;
_tab.blank(1);
_tab.NR:=_nr;
_tab.add();

::------- CZYNNIKI CHEMICZNE -------------
_nr+=1;
_tab.blank(1);
_tab.NR:=_nr;
_tab.LP:='III.';
_tab.GRUPA:='Czynniki chemiczne:';
_tab.CZYNNIK:='';
_tab.add();

:: pusty wiersz
_nr+=1;
_tab.blank(1);
_tab.NR:=_nr;
_tab.add();

::------- CZYNNIKI BIOLOGICZNE -------------
_nr+=1;
_tab.blank(1);
_tab.NR:=_nr;
_tab.LP:='IV.';
_tab.GRUPA:='Czynniki biologiczne:';
_tab.CZYNNIK:='';
_tab.add();

:: pusty wiersz
_nr+=1;
_tab.blank(1);
_tab.NR:=_nr;
_tab.add();

::------- INNE CZYNNIKI W TYM NIEBEZPIECZNE -------------
_nr+=1;
_tab.blank(1);
_tab.NR:=_nr;
_tab.LP:='V.';
_tab.GRUPA:='Inne czynniki, w tym niebezpieczne:';
_tab.CZYNNIK:='Kierowanie samochodem kat. B';
_tab.L_CZ:=1;
_tab.add();

_nr+=1;
_tab.blank(1);
_tab.NR:=_nr;
_tab.CZYNNIK:=
   'Praca przy monitorze ekranowym powyżej 4 godzin, albo i więcej żeby zobaczyć jak to będzie wyglądać w wordzie';
_tab.L_CZ:=1;
_tab.add();

_tab


\example2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.41]
:: OPIS: Przykład 2 - zamiana identyfikatorów z ich odczytaniem z szablonu
::   WE:
::   WY:
:: ~OST: INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
exec('init','#word');
_dev:=__develop;
{? _dev
|| _word:=obj_new(@.Class.WORD)
|| _word:=obj_new(@.CLASS.WORD)
?};

:: wskazanie szablonu wydruku
_dotx:='pkd_skierbae.dotx';
::_dotx:='@%1/pkd_skierbae.dotx'[tmp_dir()];
_pth:=1;
{? ~(_szablon:=fexists(_dotx,_pth))
|| FUN.info('Brak pliku szablonu: %1.'@[pth_dir(_dotx)+'/'+_dotx]);
   return()
?};

:: czy kopiować plik szablonu do katalogu tmp_dir() - ma tylko znaczenie jeżeli _pth=0
_copy2Tmp:=0;

:: wskazujemy szablon zgodnie z pth
_word.Template(_dotx,_pth,_copy2Tmp);

_word.SetProc('JSON');
:: pobieramy identyfikatory z szablonu, przekazując znak rozpoczęcia i zakończenia identyfikatora
_tabIds:=_word.GetIds('<','>');

:: usuwamy puste tabele
_word.DelETabs(1);

exec('select','#table',_tabIds,,,,'ID[30],IN_TABLE,TABLE_NR,ROW_NR,COL_NR');

::debug;
_tabIds.cntx_psh();
_ndx:=_tabIds.ndx_tmp('',1
::         czy identyfikator jest umieszczony w tabeli? (0/1)
         ,'IN_TABLE',,0
::         numer tabeli, z której pochodzi identyfikator (pierwszy element ma index 0)
         ,'TABLE_NR',,0
::         numer wiersza w którym jest umieszczony identyfikator (pierwszy element ma index 0)
         ,'ROW_NR',,0);
_tabIds.index(_ndx);

:: prefiksujemy się na identyfikatory nie występujące w tabelach
_tabIds.prefix(0);

:: zamieniamy identyfikatory na rzeczywiste dane
{? _tabIds.first()
|| {!
   |? _id:=_tabIds.ID;
::     TODO: tu idzie logika zamieniania identyfikatorów nie występujących w tabelach
      {? OSOBA.first()
      || _word.Replace(_id,'%1'[OSOBA.NAZWISKO])
      ?};
      _tabIds.next()
   !}
?};

:: prefiksujemy się na identyfikatory występujące w tabelach
_tabIds.prefix(1);
{? _tabIds.first()
|| _tabNr:=-1;
   _rowOrg:=_rowNr:=-1;
   {!
   |? {? _tabNr<>_tabIds.TABLE_NR | _rowOrg<>_tabIds.ROW_NR
      ||
::  zapamiętujemy numer tabeli oraz numer wiersza, od którego będziemy dodawać nowe rekordy z danymi
         _tabNr:=_tabIds.TABLE_NR;
         _rowOrg:=_rowNr:=_tabIds.ROW_NR;

:: prefiksujemy się na identyfikatory występujące we wskazanym wierszu tabeli występującej w szablonie
         _tabIds.cntx_psh();
         _tabIds.prefix(1,_tabNr,_rowOrg);
         {? _tabIds.first()
         || _colNr:=0;
            {!
            |? _colNr+=1;
::       pobieramy identyfikator w komórce tabeli
               _id:=_tabIds.ID;
::       TODO: tu idzie logika zamieniania identyfikatorów występujących w tabelach
               {? 4+_id='<COL'
               || OSOBA.prefix();
                  {? OSOBA.first()
                  || _rowNr:=_rowOrg;
                     _loop:=1;
::                     _word.Replace(_id,'%1 %2.%3'[OSOBA.NAZWISKO,$_colNr,$_rowNr],,,,_tabNr,_rowNr)
                     {!
                     |? _word.Replace(_id,'%2.%3 %1'[OSOBA.NAZWISKO,$_colNr,$_rowNr],,,,_tabNr,_rowNr,_rowOrg);
                        _rowNr+=1;
                        _loop+=1;
                        _loop<6 & OSOBA.next()
                     !}
                  ?}
               |? _id*'<TOWAR'
               || _text:='';
                  _rowNr:=_rowOrg;
                  {? OSOBA.first()
                  || {!
                     |? _text:={? _id*'NAZWA'  || '%1'[OSOBA.NAZWISKO]
                               |? _id*'NETTO'  || $#date
                               |? _id*'TOWAR_BRUTTO' || $(#date*1.23)
                               || ''
                               ?};
                        _word.Replace(_id,'%1'[_text],,,,_tabNr,_rowNr,_rowOrg);
                        _rowNr+=1;
                        OSOBA.next()
                     !}
                  || _word.Replace(_id,'%1'[_text],,,,_tabNr,_rowNr,_rowOrg)
                  ?}
               |? _id*'<RAZEM'
               || _text:='';
                  _rowNr:=_rowOrg;
                  {? OSOBA.first()
                  || {!
                     |? _text:='Baaardzo duża suma: %1'[$_rowNr];
                        _word.Replace(_id,'%1'[_text],,,,_tabNr,_rowNr+OSOBA.size(),_rowOrg);
                        _rowNr+=1;
                        OSOBA.next()
                     !}
                  || _word.Replace(_id,'%1'[_text],,,,_tabNr,_rowNr+OSOBA.size(),_rowOrg)
                  ?}
               |? _id*'<ET>'
               || _word.Replace(_id,'',,,,_tabNr,_rowNr,_rowOrg)
               ?};
               _tabIds.next()
            !}
         ?};
         _tabIds.cntx_pop()
      ?};
      _tabIds.next()
   !}
?};
_tabIds.cntx_pop();
_tabIds.ndx_drop(_ndx);

_wordName:=_word.Run(0)


\example3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS:
::   WE: _a -
::       _b -
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('init','#word');
_dev:=__develop;
{? _dev
|| _word:=obj_new(@.Class.WORD)
|| _word:=obj_new(@.CLASS.WORD)
?};

_tabPlace:='<TAB>';
::_word.devMsg:=1;
_word.AddParagraph(_tabPlace);
_w1:=_word.Create();
{? +_w1
||
   _tab:=tab_tmp(,
      'POLE1','STRING[8]','Nazwa pola 1',
      'POLE2','INTEGER','Nazwa pola 2'
   );
   _tab.POLE1:='Napis';
   _tab.POLE2:=12;
   _tab.add();
::   _word.SetTab(_tab,'POLE1,POLE2');
   OSOBA.cntx_psh();
   OSOBA.prefix();
   _word.SetTab(OSOBA,'PIERWSZE,NAZWISKO');
   _word.Header(1,1);
   OSOBA.cntx_pop();

::   _word.TabFldH('POLE1');
   _word.TabPlace(_tabPlace);
   _word.Template(_w1,1);
::   _word.Replace(_tabPlace,'Nowe');
::   _word.AddParagraph('Nowy paragraf');
   _word.Run(0);

   _word.DelFiles('', 0)
?}


\example4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Utworzenie Word-a przez procedurę
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('init','#word');
_dev:=__develop;
{? _dev
|| _word:=obj_new(@.Class.WORD)
|| _word:=obj_new(@.CLASS.WORD)
?};
_dotx:='pkd_skierbae.dotx';
_tabPlace:='<TAB>';
::_word.devMsg:=1;

_word.SetProc('JSON');
_word.Template(_dotx,1);
_IDS:=_word.GetIds('[',']');

:: do testów trzeba wskazać własny plik z obrazkiem
_file:='/home/tomek/dane/emisje/RRxx/work/all/kotek.gif';

:: możemy zamienić identyfikator na obrazek
_word.ReplaceImg('[OBRAZEK_1]',_file,'put');
_word.ReplaceImg('[PIESEK]',_file,'put');

:: możemy usunąć obrazek powiązany z identyfikatorem
_word.ReplaceImg('[OBRAZEK_2]',_file,'del');

:: możemy dodać obrazek w miejsce identyfikatora
_word.ReplaceImg('[NOWY_KOTEK]',_file,'add',20,10);

:: poniższego identyfikatora nie ma w szablonie więc nic się nie powinno zadziać
_word.ReplaceImg('[BRAK_IDENT]',_file,'add',30,20);

_word.AddParagraph(_tabPlace);
_word.AddParagraph('ala Ma kota a kot ma alę'
'ala Ma kota a kot ma alę dfsfdsafdfddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaagadfgadgdagadgfadgfagdaga'
'ala Ma kota a kot ma alę dfsfdsafdfddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaagadfgadgdagadgfadgfagdaga'
'ala Ma kota a kot ma alę dfsfdsafdfddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaagadfgadgdagadgfadgfagdaga'
'ala Ma kota a kot ma alę dfsfdsafdfddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaagadfgadgdagadgfadgfagdaga'
'ala Ma kota a kot ma alę dfsfdsafdfddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaagadfgadgdagadgfadgfagdaga'
'ala Ma kota a kot ma alę dfsfdsafdfddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaagadfgadgdagadgfadgfagdaga'
'ala Ma kota a kot ma alę dfsfdsafdfddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaagadfgadgdagadgfadgfagdaga'
'ala Ma kota a kot ma alę dfsfdsafdfddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaagadfgadgdagadgfadgfagdaga'
'ala Ma kota a kot ma alę dfsfdsafdfddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaagadfgadgdagadgfadgfagdaga'
'ala Ma kota a kot ma alę dfsfdsafdfddaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaagadfgadgdagadgfadgfagdaga'
);
_word.AddParagraph('do usunięcia');
_word.Replace(_tabPlace,'Nowe');
_word.DelParagraph('do usunięcia');
_word.AddParagraph('przed page break');
_word.AddParagraph('po page break');
_word.PageBreak('po page break');
_word.Run(0);
::debug();
_word.DelFiles('',0)


\param
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [23.25]
:: OPIS:
::   WE: _a -
::       _b -
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_param:=obj_new('jar','encoding','param','classpath');
_param.classpath:='ąćęłńóśżźĄĆĘŁŃÓĄŚŹ';
_param.encoding:='-Dfile.encoding=utf-8';
_param.jar:='-jar';
_file:='param.jar';
_jar:=pth_dir(_file) + exec('sep','#file',1) + _file;
_param.param:=_jar;
jexec(,'runOnAppServer=1, wait=1, stderr=err.txt',_param)


:Sign Version 2.0 jowisz:1045 2023/09/21 14:19:17 94c4cabae76fe8a8f726c2176fd12f9e7ee8fd1e1e18ec7a6c00363d27ce68ce98ef80403a7cfb00be8c2424f60c58512a5bbbd26aee38ccc58174b19c4c5824a11b460e848ca4f571eedd7fdfce673127004c563e01bee4d6186c6b2b24118f7514eb9f1be722ce2ab3ee5228ffb85a72944a25656ac7bee52c37ab00a3c32a
