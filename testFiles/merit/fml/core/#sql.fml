:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #sql.fml [17.00]
:: Utworzony: 17.12.2014
:: Autor: AK
::======================================================================================================================
:: Zawartość: Obsługa zapytań SQL
::======================================================================================================================


\sql_adm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.60]
:: OPIS: Wyświetla okienko wertowania zapytań SQL z możliwością edycji
::   WE: [_a] - Symbol dziedziny
::       [_b] - tryb pracy: 0-z aplikacji, 1/2-poczatek/koniec eksportu/importu do excela
::  OLD: \sql_adm/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? var_press('_b')<=0 || _b:=0 ?};

:: ustawienie domeny na podstawie parametru
{? _a<>''
||
   _domain:=BPMN.SYM_DOM;
   BPMN.SYM_DOM:=_a
?};
_prfx:='!'+(-BPMN.SYM_DOM)+'_';
_flock:=_prfx+'_l_o_c_k.sqx';
__SQL_RO:=0;
{? _b=0 | _b=1 & var_press('SqlExpC')<=0
|| SqlExpC:=0;
   {? fexists(_flock,1)
   || _f:=fopen(_flock,'r',1);
      _kto:=fread(_f);
      fclose(_f);
      _ask:={? _b=1
            || 1
            || FUN.choice('Zestawienia SQL są obecnie edytowane przez użytkownika:\n\n%1'
                '\n\nJednoczesna edycja może spowodować utratę niektórych danych.\n'@[_kto],,
                'Kontynuować z edycją'@,'Wyświetlić tylko do odczytu'@)
            ?};
      {? _ask=1
      || ferase(_flock,1);
         _lock:=fopen(_flock,'w',1,1,1);
         {? _lock.is_open()
         || _lock.fwrite(userdata()+', od: '+date()$1+' '+time()$3);
            Crc:=hash(_lock);
            _lock.fclose()
         ?}
      |? _ask=2
      || __SQL_RO:=1
      |? _ask=0
      || return()
      ?}
   || _lock:=fopen(_flock,'w',1,1,1);
      {? _lock.is_open()
      || _lock.fwrite(userdata()+', od: '+date()$1+' '+time()$3);
         Crc:=hash(_lock);
         _lock.fclose()
      ?}
   ?};
   exec('cr_tab','#sql',_b);
   _ind:=TAB_SQL.ndx_tmp(,1,'FILENAME',,,'FILENAME',,);
   {? _b=0
   || _indk:=TAB_SQLK.ndx_tmp(,1,'FILENAME',,,'FILENAME',,,'NR',,);
      TAB_SQLK.index(_indk)
   ?}
?};
{? _b=0
|| exec('cr_win','#sql');
   TAB_SQL.hdr_sel();
   TAB_SQL.select()
|? _b=1
|| SqlExpC+=1
|? _b=2
|| SqlExpC-=1
?};
{? _b=0 | _b=2 & SqlExpC<=0
|| {? __SQL_RO=0 & (_b=0 | var_press('SaveSql')>0) || exec('save_sql','#sql') ?};
:: przywrocenie zapamiętanej domeny
   {? _a<>''
   ||
      BPMN.SYM_DOM:=_domain
   ?};

   {? __SQL_RO=0 & fexists(_flock,1)
   || _test:=fopen(_flock,'r',1,1,1);
      {? _test.is_open()
      || _crc2:=hash(_test);
         _test.fclose()
      ?};
      {? Crc=_crc2
      || ferase(_flock,1)
      || FUN.info('Uwaga. Inny użytkownik uruchomił jednocześnie moduł edycji zapytań.'@)
      ?}
   ?};
   {? var_pres('sql_nr')>=0 || &sql_nr ?}; obj_del(TAB_SQL); obj_del(TAB_SQLP);
   VAR_DEL.delete('SqlVar','Crc','SaveSql','SqlExpC','TAB_SQL1','TAB_SQL2','TAB_OBSZ','Z_DRILL')
?}


\chk_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Sprawdza poprawność wypełnienia pól
::   WE: _a - tryb pracy (a-add, e-edit)
::  OLD: \chk_sql/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_v:='';
{? TAB_SQL.NAZ=''
|| FUN.info('Nie podano nazwy zapytania SQL.'@); _v:='NAZ'
|| _v_naz:=TAB_SQL.NAZ;
   _v_ref:=TAB_SQL.ref();
   TAB_SQL.cntx_psh();
   TAB_SQL.prefix(TAB_SQL.OBSZAR,_v_naz);
   {? TAB_SQL.first()
   || {! |?
         {? TAB_SQL.NAZ=_v_naz & (_a='a' | (_a='e' & TAB_SQL.ref()<>_v_ref))
         || FUN.info('Podana nazwa zapytania jest już używana\nw obszarze %1.'@[TAB_SQL.OBSZAR]);
            _v:='NAZ'
         ?};
         ~+_v & TAB_SQL.next()
      !}
   ?};
   TAB_SQL.cntx_pop();
   {? ~+_v
   || {? TAB_SQL.FILENAME=''
      || FUN.info('Nie podano nazwy pliku z zapytaniem SQL.'@);
         _v:='FILENAME'
      || _v_fn:=TAB_SQL.FILENAME;
         _v_ref:=TAB_SQL.ref();
         TAB_SQL.cntx_psh();
         _inds:=TAB_SQL.ndx_tmp(,1,'FILENAME',,,'FILENAME',,);
         TAB_SQL.index(_inds); TAB_SQL.prefix(_v_fn,_v_fn);
         {? (_a='a' & TAB_SQL.first()) | (_a='e' & TAB_SQL.first() & TAB_SQL.ref()<>_v_ref)
         || FUN.info('Podana nazwa pliku jest już używana.'@);
            _v:='FILENAME'
         ?};
         TAB_SQL.ndx_drop(_inds);
         TAB_SQL.cntx_pop()
      ?}
   ?}
?};
{? _v='' & exec('valid_formula','#field',TAB_SQL.BSQL,,'Formuła przed')=0 || _v:='BSQL' ?};
{? _v='' & exec('valid_formula','#field',TAB_SQL.ASQL,,'Formuła po')=0 || _v:='ASQL' ?};
{? _v='' & exec('valid_formula','#field',TAB_SQL.RSQL,,'Rekord po')=0 || _v:='RSQL' ?};
{? _v=''
|| {? TAB_SQL.DRILL='t' | TAB_SQL.DRILL='n' || TAB_SQL.DRILL:=~(-TAB_SQL.DRILL) ?};
   {? TAB_SQL.DRILL<>'T' & TAB_SQL.DRILL<>'N'
   || FUN.info('Parametr Analiza drill-down może przyjmować\n wartość T (Tak) lub N (Nie).'@);
      _v:='DRILL'
   || {? TAB_SQL.DRILL='N' & PAR_SQL.DOM_GRUP<>'' || PAR_SQL.DOM_GRUP:=TAB_SQL.DOM_GRUP:='' ?}
   ?}
?};
_v


\ed_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Wyświetla okienko edytowania zapytań SQL
::  OLD: \ed_zap/skid_sql.fml
:: ~OST: INFCOPY,INFOPEN,INTXTEDITVIEW
::----------------------------------------------------------------------------------------------------------------------
{? exec('cli_functions','#system')=0
|| FUN.emsg(exec('indevice_nacc_msg','#system'));
   return()
?};

_prfx:='!'+(-BPMN.SYM_DOM)+'_'+TAB_SQL.FILENAME;
_mod:=__FileLayer.layer(_prfx,'sql')='m';
_fn:=__FileLayer.real_name(_prfx,'sql');
{? var_pres('__SQL_RO') <=0 | __SQL_RO=0
|| {? _mod
   || {? txt_edit(_fn,1)
      || __FileLayer.del_same(_prfx,'sql',1)
      ?}
   |? fcopy(_fn,'@!Tmp/'+_fn,1,0,1)
   || _file:=fopen('@!Tmp/'+_fn,'r',0,,1);
      {? _file.is_open()
      || _hash:=hash(_file);
         _file.fclose();
         &_file;
         {? TAB_SQL.STD='T'
         ||
            txt_view('@!Tmp/'+_fn,0)
         ||
            {? txt_edit('@!Tmp/'+_fn,0)
            || _file:=fopen('@!Tmp/'+_fn,'r',0,,1);
               {? _file.is_open()
               || _hash2:=hash(_file);
                  _file.fclose();
                  {? _hash<>_hash2
                  || fcopy('@!Tmp/'+_fn,_prfx+'.m.sql',0,1,1)
                  ?}
               ?}
            ?}
         ?}
      ?}
   ?}
|| txt_view(_fn,1)
?}


\get_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Zwraca treść zapytania SQL
::----------------------------------------------------------------------------------------------------------------------
_txt:='';
_prfx:='!'+(-BPMN.SYM_DOM)+'_'+TAB_SQL.FILENAME;
_mod:=__FileLayer.layer(_prfx,'sql')='m';
_fn:=__FileLayer.real_name(_prfx,'sql');
_file:=_fn;
{? _file<>''
|| _f:=fopen(_file,'ur',1,,1);
   {? _f.is_open()
   || {!
      |? _line:=fread(_f);
         {? _line<>'\n'
         || _txt+=_line+'\r\n';
            1
         ?}
      !};
      _f.fclose()
   ?}
?};
_txt


\set_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Zapisuje zapytanie sql do pliku
::   WE: _a - treść zapytania
::----------------------------------------------------------------------------------------------------------------------
_prfx:='!'+(-BPMN.SYM_DOM)+'_'+TAB_SQL.FILENAME;
_mod:=__FileLayer.layer(_prfx,'sql')='m';
_fn:=__FileLayer.real_name(_prfx,'sql');
_file:='';
_sql:=exec('get_sql','#sql');
_sql:=gsub(_sql,'\r','');
_sql:=exec('trim','#sql',_sql);
_sql2:=gsub(_a,'\r','');
_sql2:=exec('trim','#sql',_sql2);
{? _sql<>_sql2
|| {? _mod
   || _file:=_fn
   || _file:=_prfx+'.m.sql'
   ?};
   {? _file<>''
   || _f:=fopen(_file,'uw!',1);
      {? _f
      || fwrite(_f,_a);
         fclose(_f)
      ?}
   ?}
?}


\m_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Wyświetla okienko wertowania zapytań SQL do wyboru, wykonuje zapytanie SQL, tworzy okienka do prezentacji
::       i wyświetla wynik zapytania SQL
::   WE: _a - Identyfikator czynności wywołującej. Parametr obowiązkowy, jego poprawność nie jest sprawdzana.
::       _b - Nazwa definicji
::  OLD: \m_sql/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_uid:=_a;
_obslog:=_b;

_dom:=BPMN.SYM_DOM;
BPMN.SYM_DOM:=3+_uid;

_params:=params_get();
_rap_id:={? var_pres('_params')>100 & var_pres('RAP_ID',_params)=type_of('') || _params.RAP_ID || '' ?};

VAR_DEL.delete('__ident');
exec('cr_tab','#sql');
_indk:=TAB_SQLK.ndx_tmp(,1,'FILENAME',,,'FILENAME',,,'NR',,);
TAB_SQLK.index(_indk);

{? _rap_id<>''
|| TAB_SQL.prefix(_obslog,_rap_id,)
|| TAB_SQL.prefix(_obslog,)
?};

_dl:=TAB_SQL.size()+1;
{? _dl<9 || _dl:=9 |? _dl>30 || _dl:=30 ?};
_wsql:=TAB_SQL.mk_sel('Zapytania SQL'@,,,,,,_dl,,'U','U');
TAB_SQL.win_fld(_wsql,,'NAZ',,,,,,,1);
TAB_SQL.win_act(_wsql,0,'Formuła','Wybierz'@@,,,,"sel_exit()",1,,,,'W');
TAB_SQL.win_act(_wsql,0,'Rekord',,,,"{? TAB_SQL.DRILL='T' || exec('findtmp','#color') || '' ?}");
TAB_SQL.win_act(_wsql,0,'Formuła','&Legenda'@@,,'Opis znaczenia kolorów wierszy'@,,
                 "exec('legenda','color','$%1'['Zapytania z możliwością grupowania (drill-down)'@])",,,,,'L');
_cfg:=',btn_label_align=center,panel=right,align=begin';
_btnOK:=TAB_SQL.win_btn(_wsql,'text='+'&Wybierz'@+_cfg,'menu:W');
_btnan:=TAB_SQL.win_btn(_wsql,'text='+'&Anuluj'@+_cfg,'key:Esc');
TAB_SQL.btn_opt(_btnOK,'default=1,tooltip="%1"'['Wybierz zapytanie do wykonania'@]);
TAB_SQL.btn_opt(_btnan,'tooltip='+exec('help_red_esc','#window','A'));

_ret:=1;
_ret:=TAB_SQL.first();
{? _ret
|| TAB_SQL.win_sel(_wsql);
   _v_poz:=1;
   {!
   |? {? _rap_id<>''
      || _v_poz-=1; _v_poz>=0
      || _v_poz:=TAB_SQL.select(,1,_v_poz)
      ?}
   |!
      VAR_DEL.delete(
         '__PAR1S','__PAR2S','__PAR3S','__PAR4S','__PAR5S','__PAR6S','__PAR7S','__PAR8S','__PAR9S','__PAR10S');
      {? ((TAB_SQL.BSQL<>'' & ($(TAB_SQL.BSQL))()) | TAB_SQL.BSQL='')
         & exec('chk_file','#sql') & exec('red_par','#sql')
      || p_sql:=obj_new(10); w_sql:=obj_new(10);
         {! _i:=1..10 |! p_sql[_i]:=''''''; w_sql[_i]:='''''' !};
         _i:=1;
         {? TAB_SQLK.prefix(@.TAB_SQL.FILENAME,@.TAB_SQL.FILENAME);
            TAB_SQLK.first()
         || {! |?
               {? TAB_SQLK.NAZ<>''
               || {? TAB_SQLK.RODZ='F'
                  || w_sql[_i]:=TAB_SQLK.DV; p_sql[_i]:='($(w_sql['+$_i+']))()'
                  |? TAB_SQLK.RODZ='I' | TAB_SQLK.RODZ='R'
                  || p_sql[_i]:='gsub(($(\'$PAR_SQL.PAR'+$_i+TAB_SQLK.RODZ+'\'))(),\',\',\'.\')'
                  |? TAB_SQLK.RODZ='S'
                  || _acr:='__PAR'+$_i+TAB_SQLK.RODZ;
                     {? ($('var_pres('''+ _acr +''')'))()=2
                     || p_sql[_i]:='($(\''+_acr+'\'))()'
                     || p_sql[_i]:='exec(\'par_str\',\'#sql\',($(\'PAR_SQL.PAR'+$_i+TAB_SQLK.RODZ+'\'))())'
                     ?}
                  |? TAB_SQLK.RODZ='D'
                  || p_sql[_i]:='($(\'PAR_SQL.PAR'+$_i+TAB_SQLK.RODZ+'\'))()'
                  ?}
               ?};
               _i+=1;
               TAB_SQLK.next()
            !}
         ?};
         ($('TAB_SQLR:=psql_exe(\'!'+(-BPMN.SYM_DOM)+'_\'+TAB_SQL.FILENAME,'+p_sql[1]+','+p_sql[2]+','
            +p_sql[3]+','+p_sql[4]+','+p_sql[5]+','+p_sql[6]+','+p_sql[7]+','
            +p_sql[8]+','+p_sql[9]+','+p_sql[10]+')'))();
         obj_del(p_sql); obj_del(w_sql);
         VAR_DEL.delete(
            '__PAR1S','__PAR2S','__PAR3S','__PAR4S','__PAR5S','__PAR6S','__PAR7S','__PAR8S','__PAR9S','__PAR10S');
         {? type_of(TAB_SQLR)>100 & TAB_SQLR.first()
         || {? TAB_SQLR.fld_acr(1)='LP' & type_of(TAB_SQLR.LP)=1
            || _indp:=TAB_SQLP.ndx_tmp(,1,'SQL',,,'SQL',,,'NR_KOL',,);
               _i:=1;
               {! |? TAB_SQLR.LP:=_i; TAB_SQLR.put(); _i+=1; TAB_SQLR.next() !};
               TAB_SQLR.first();
               v_i:=1;
               _l:=0;
               esql:=TAB_SQLR.mk_edit('Rekord zapytania'@,0);
               {! _i:=1..TAB_SQLR.fld_num()-1 |!
                  TAB_SQLP.index(_indp);
                  ($('TAB_SQLP.prefix(\''+$TAB_SQL.FILENAME+'\',\''+$TAB_SQL.FILENAME+'\','+$_i+')'))();
                  {? TAB_SQLP.first()
                  || _v_p:=$TAB_SQLP.PREC;
                     _hid:={? TAB_SQLP.HID<>'' & ($TAB_SQLP.HID)()=0 || "0" || "*" ?};
                     TAB_SQLR.fld_fml(TAB_SQLR.fld_acr(_i),'BEFORE_DISPLAY',_hid)
                  || {? MS.fld_real(TAB_SQLR,TAB_SQLR.fld_acr(_i))
                     || _v_p:='2'
                     || _v_p:=''
                     ?}
                  ?};
                  ($('TAB_SQLR.win_efld(esql,,TAB_SQLR.fld_acr('+$_i+'),,,,'
                     +_v_p+',,,,'+'TAB_SQLR.fld_name('+$_i+'))'))()
               !};
               TAB_SQLR.win_edit(esql);
               &esql;
::             identyfikator okienka - 15 znaków
               __ident:=15+hash(TAB_SQL.FILENAME+$v_i);
               wsqlr1:=TAB_SQLR.mk_sel(TAB_SQL.NAZ+' ('+$v_i+')',,,__ident,1,,,,'U',,,,,'html_maximized');
               _l:=+$TAB_SQLR.size(); {? _l<4 || _l:=4 ?};
               TAB_SQLR.win_fld(wsqlr1,KA,'AKCJA',,,_l,,,'LP'@);
               _l+=7;
               TAB_SQLR.win_act(wsqlr1,0,'Formuła','Druku&j'@@,,,,"exec('sql_prt','#sql')",1,,,,'J'
                        ,,'target=window,icon=print');
               TAB_SQLR.win_act(wsqlr1,0,'Formuła','Eksportuj'@@,,,,"exec('sql_exp','#sql')",,,,,'E');
               TAB_SQLR.win_act(wsqlr1,0,'Kolejność',,,,, "exec('f_sqlnrz','#sql')");
               {? TAB_SQL.RSQL<>''
               || TAB_SQLR.win_act(wsqlr1,0,'Formuła','&Legenda'@@,,,,
                  $('exec(\'legenda\',\'color\',\'$'+exec('legenda','#sql')+'\')')
                  ,,,,,'L')
               ?};
               TAB_SQLR.win_act(wsqlr1,0,'Rekord',,,,"KA.AKCJA:=TAB_SQLR.LP; ($(TAB_SQL.RSQL))()");
               {! _i:=2..TAB_SQLR.fld_num()-1 |!
                  _acr:=TAB_SQLR.fld_acr(_i);
                  _fld_skip:={? 1+_acr='F' & +_acr=8
                             || {! |? (_acr:=1-_acr)>'' & '0123456789'*(1+_acr) !};
                             _acr=''
                             ?};
                  {? ~_fld_skip
                  || TAB_SQLP.index(_indp);
                     ($('TAB_SQLP.prefix(\''+$TAB_SQL.FILENAME+'\',\''+$TAB_SQL.FILENAME+'\','+$_i+')'))();
                     {? TAB_SQLP.first()
                     || _v_p:=$TAB_SQLP.PREC;
                           {? TAB_SQLP.SZER=0
                           || _v_len:=exec('fld_len','#sql','TAB_SQLR',_i);
                              {? +TAB_SQLR.fld_name(_i)>_v_len || _v_len:=+TAB_SQLR.fld_name(_i) ?}
                           || {? +TAB_SQLR.fld_name(_i)>TAB_SQLP.SZER
                              || _v_len:=+TAB_SQLR.fld_name(_i)
                              || _v_len:=TAB_SQLP.SZER
                              ?}
                           ?}
                     || _v_p:=''; _v_len:=exec('fld_len','#sql','TAB_SQLR',_i)
                     ?};
                     {? _v_len>40 || _v_len:=40 ?};
                     {? 250-_l<=_v_len
                     || ($('TAB_SQLR.win_act(wsqlr'+$v_i+',0,\'Formuła\','
                           +'\'Następne\'@,,,,"exec(\'fld_next\',\'#sql\','
                           +$v_i+')")'))();
                        v_i+=1;
                        __ident:=15+hash(TAB_SQL.FILENAME+$v_i);
                        ($('wsqlr'+$v_i+':='+
                           'TAB_SQLR.mk_sel(\''+TAB_SQL.NAZ+($('\' (\'+$v_i+\')\''))()+'\',,,\''+__ident+'\',1)'))();
                        _l:=+$TAB_SQLR.size(); {? _l<4 || _l:=4 ?};
                        ($('TAB_SQLR.win_fld(wsqlr'+$v_i+',KA,\'AKCJA\',,,'+$-_l+',,,'
                           +'\'LP\')'))();
                        ($('TAB_SQLR.win_act(wsqlr'+$v_i+',0,\'Formuła\','
                           +'\'Wydruk\'@,,,,"exec(\'sql_prt\',\'#sql\')",1)'))();
                        ($('TAB_SQLR.win_act(wsqlr'+$v_i+',0,\'Formuła\','
                           +'\'Eksport\'@,,,,"exec(\'sql_exp\',\'#sql\')")'))();
                        ($('TAB_SQLR.win_act(wsqlr'+$v_i+',0,\'Wyświetl\',,,,,'
                           +'"exec(\'sql_dsp\',\'#sql\')")'))();
                        ($('TAB_SQLR.win_act(wsqlr'+$v_i+',0,\'Formuła\','
                           +'\'Poprzednie\'@,,,,"exec(\'fld_prev\',\'#sql\','
                           +$v_i+')")'))();
                        ($('TAB_SQLR.win_act(wsqlr'+$v_i+',0,\'Rekord\',,,,"KA.AKCJA:=TAB_SQLR.LP; '
                           +'($(TAB_SQL.RSQL))()")'))();
                        _l+=7
                     ?};
                     ($('TAB_SQLR.win_fld(wsqlr'+$v_i+',,TAB_SQLR.fld_acr('+$_i
                        +'),,,'+$-_v_len+','+_v_p+',,,,TAB_SQLR.fld_name('+$_i
                        +'),,1)'))();
                     _l+=_v_len+1
                  ?}
               !};
               TAB_SQLR.fld_attr(,2);
               TAB_SQLR.win_sel(wsqlr1);
               _v_i_max:=v_i; _v:=v_i:=1;
               {? ((TAB_SQL.ASQL<>'' & ($(TAB_SQL.ASQL))()) | TAB_SQL.ASQL='')
               ||
::                Jeśli TAB_SQL.DRILL=T to wariant z drill-down, w innym przypadku wariant zwykły.
                  {? -TAB_SQL.DRILL='t'
                  || {? FUN.ask('Wybrane zapytanie posiada możliwość grupowania (analizy drill-down)\nCzy uruchomić z grupowaniem?'@)=1
                     || exec('drill_down','#sql')
                     || {! |?
                           _v:=TAB_SQLR.select(0,1,_v);
                           ($('TAB_SQLR.win_sel(wsqlr'+$v_i+')'))();
                           _v
                        !}
                     ?}
                  || {! |?
                        _v:=TAB_SQLR.select(0,1,_v);
                        ($('TAB_SQLR.win_sel(wsqlr'+$v_i+')'))();
                        _v
                     !}
                  ?}
               ?}
            || FUN.info('Brak pola LP w zapytaniu SQL po słowie select.'@)
            ?}
         |? type_of(TAB_SQLR)<100
         || FUN.info('Brak rekordów spełniających kryteria\n z powodu przerwania wykonywania zapytania SQL.'@)
         || FUN.info('Brak rekordów spełniających kryteria.'@)
         ?};
         {? type_of(TAB_SQLR)>100 || obj_del(TAB_SQLR); &TAB_SQLR ?}
      ?}
   !}
|| FUN.info('Brak zdefiniowanych zapytań SQL.'@)
?};
{? var_pres('v_i')>=0 || &v_i ?};
{? var_pres('_v_i_max')>0
|| {! _i:=1.._v_i_max |!
      {? var_pres('wsqlr'+$_i)>=0 || ($('&wsqlr'+$_i))() ?}
   !}
?};
VAR_DEL.delete('TAB_SQL','TAB_SQLP','TAB_SQLK','__ident');
_ret


\cr_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Tworzy tabele tymczasowe dla zapytań SQL.
::       [_b] - tryb pracy: [0]-z aplikacji, 1-poczatek eksportu/importu do excela
::  OLD: \cr_tab/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=0 ?};
exec('clr_obj','#sql');

_prfx:='!'+(-BPMN.SYM_DOM)+'_';
SqlVar:=obj_new('msql','mpar','mwar','msqg','crc','filename','ext','dro');
SqlVar.msql:={? __FileLayer.layer(_prfx+'list_sql','sql')='m' || '.m' || '' ?};
SqlVar.mpar:={? __FileLayer.layer(_prfx+'list_par','sql')='m' || '.m' || '' ?};
SqlVar.mwar:={? __FileLayer.layer(_prfx+'list_war','sql')='m' || '.m' || '' ?};
SqlVar.ext:="
   {? _a='sql'
   || .msql
   |? _a='par'
   || .mpar
   |? _a='war'
   || .mwar
   |? _a='sqg'
   || .msqg
   || ''
   ?}
";

TAB_SQL:=tab_tmp(2,
   'OBSZAR','STRING[20]','Obszar funkcjonalny'@,
   'NAZ','STRING[75]','Nazwa zapytania'@,
   'FILENAME','STRING[25]','Nazwa pliku SQL'@,
   'BSQL','STRING[128]','Formuła przed'@,
   'ASQL','STRING[128]','Formuła po'@,
   'RSQL','STRING[128]','Rekord przed'@,
   'DRILL','STRING[1]','Drill?'@,
   'DOM_GRUP','STRING[50]','Domyślne grupowanie'@,
   'UIDREF','STRING[48]','Id rekordu',
   'STD','STRING[1]','Standard?'@);
TAB_SQL1:=TAB_SQL.index('?');
TAB_SQL2:=TAB_SQL.ndx_tmp('',1,'FILENAME',,0);
_f:=fopen(_prfx+'list_sql'+SqlVar.ext('sql')+'.sql','ur',1);
{? _f
|| {? fread(_f)<>'\n'
   || {!
      |? (_l:=fread(_f))<>'\n'
      |! _i:=_l*'@'; TAB_SQL.OBSZAR:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.NAZ:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.FILENAME:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.BSQL:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.ASQL:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.RSQL:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.DRILL:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.DOM_GRUP:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.STD:=(_i-1)+_l;
         {? TAB_SQL.DRILL='t' || TAB_SQL.DRILL:='T' ?};
         {? TAB_SQL.DRILL='n' || TAB_SQL.DRILL:='N' ?};
         {? TAB_SQL.DRILL <> 'T' & TAB_SQL.DRILL <> 'N' || TAB_SQL.DRILL:='N' ?};
         {? TAB_SQL.STD='t' || TAB_SQL.STD:='T' ?};
         {? TAB_SQL.STD='n' || TAB_SQL.STD:='N' ?};
         {? TAB_SQL.STD <> 'T' & TAB_SQL.STD <> 'N' || TAB_SQL.STD:='N' ?};
         TAB_SQL.UIDREF:=$SYSLOG.tm_stamp();
         {? TAB_SQL.STD='N' || TAB_SQL.add() ?}
      !}
   ?};
   fclose(_f)
?};

_f:=fopen(_prfx+'list_sql'+'.sql','ur',1);
{? _f
|| {? fread(_f)<>'\n'
   || {!
      |? (_l:=fread(_f))<>'\n'
      |! _i:=_l*'@'; TAB_SQL.OBSZAR:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.NAZ:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.FILENAME:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.BSQL:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.ASQL:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.RSQL:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.DRILL:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.DOM_GRUP:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQL.STD:=(_i-1)+_l;
         {? TAB_SQL.DRILL='t' || TAB_SQL.DRILL:='T' ?};
         {? TAB_SQL.DRILL='n' || TAB_SQL.DRILL:='N' ?};
         {? TAB_SQL.DRILL <> 'T' & TAB_SQL.DRILL <> 'N' || TAB_SQL.DRILL:='N' ?};
         {? TAB_SQL.STD='t' || TAB_SQL.STD:='T' ?};
         {? TAB_SQL.STD='n' || TAB_SQL.STD:='N' ?};
         {? TAB_SQL.STD <> 'T' & TAB_SQL.STD <> 'N' || TAB_SQL.STD:='N' ?};
         TAB_SQL.UIDREF:=$SYSLOG.tm_stamp();
         {? TAB_SQL.STD='T'
         ||
            TAB_SQL.cntx_psh();
            TAB_SQL.index(TAB_SQL2);
            TAB_SQL.prefix(TAB_SQL.FILENAME,);
            {? TAB_SQL.first()
            ||
               TAB_SQL.del()
            ?};
            TAB_SQL.cntx_pop();
            TAB_SQL.add()
         ?}
      !}
   ?};
   fclose(_f)
?};

TAB_SQLK:=tab_tmp(2,'FILENAME','STRING[25]','Nazwa pliku SQL'@,
   'NR','INTEGER','Numer parametru'@,
   'NAZ','STRING[60]','Nazwa parametru'@,
   'RODZ','STRING[1]','Rodzaj parametru'@,
   'DL_PR','INTEGER','Długość/precyzja'@,
   'WZ','STRING[128]','Wzorzec'@,
   'DV','STRING[128]','Wartość początkowa'@,
   'BD','STRING[128]','Przed wyświetleniem'@,
   'BE','STRING[128]','Przed redagowaniem'@,
   'F3','STRING[128]','Klawisz F3'@,
   'AE','STRING[128]','Po redagowaniu'@,
   'UIDREF','STRING[48]','Id rekordu'@);
_f:=fopen(_prfx+'list_par'+SqlVar.ext('par')+'.sql','ur',1);
{? _f
|| {? fread(_f)<>'\n'
   || {!
      |? (_l:=fread(_f))<>'\n'
      |! _i:=_l*'@'; TAB_SQLK.FILENAME:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLK.NR:=#((_i-1)+_l);
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLK.NAZ:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLK.RODZ:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLK.DL_PR:=#((_i-1)+_l);
         _l:=fread(_f); _i:=_l*'@'; _l:=_i-_l; _i:=_l*'@'; _l:=_i-_l;
         _i:=_l*'@'; _i:=_l*'@'; TAB_SQLK.WZ:=(_i-1)+_l;
         _l:=fread(_f); _i:=_l*'@'; _l:=_i-_l; _i:=_l*'@'; _l:=_i-_l;
         _i:=_l*'@'; _i:=_l*'@'; TAB_SQLK.DV:=(_i-1)+_l;
         _l:=fread(_f); _i:=_l*'@'; _l:=_i-_l; _i:=_l*'@'; _l:=_i-_l;
         _i:=_l*'@'; _i:=_l*'@'; TAB_SQLK.BD:=(_i-1)+_l;
         _l:=fread(_f); _i:=_l*'@'; _l:=_i-_l; _i:=_l*'@'; _l:=_i-_l;
         _i:=_l*'@'; _i:=_l*'@'; TAB_SQLK.BE:=(_i-1)+_l;
         _l:=fread(_f); _i:=_l*'@'; _l:=_i-_l; _i:=_l*'@'; _l:=_i-_l;
         _i:=_l*'@'; _i:=_l*'@'; TAB_SQLK.F3:=(_i-1)+_l;
         _l:=fread(_f); _i:=_l*'@'; _l:=_i-_l; _i:=_l*'@'; _l:=_i-_l;
         _i:=_l*'@'; _i:=_l*'@'; TAB_SQLK.AE:=(_i-1)+_l;
         TAB_SQLK.UIDREF:=$SYSLOG.tm_stamp();
         TAB_SQL.cntx_psh();
         TAB_SQL.index(TAB_SQL2);
         TAB_SQL.prefix(TAB_SQLK.FILENAME,);
         {? TAB_SQL.first() & TAB_SQL.STD='N'|| TAB_SQLK.add() ?};
         TAB_SQL.cntx_pop()
      !}
   ?};
   fclose(_f)
?};
_f:=fopen(_prfx+'list_par'+'.sql','ur',1);
{? _f
|| {? fread(_f)<>'\n'
   || {!
      |? (_l:=fread(_f))<>'\n'
      |! _i:=_l*'@'; TAB_SQLK.FILENAME:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLK.NR:=#((_i-1)+_l);
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLK.NAZ:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLK.RODZ:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLK.DL_PR:=#((_i-1)+_l);
         _l:=fread(_f); _i:=_l*'@'; _l:=_i-_l; _i:=_l*'@'; _l:=_i-_l;
         _i:=_l*'@'; _i:=_l*'@'; TAB_SQLK.WZ:=(_i-1)+_l;
         _l:=fread(_f); _i:=_l*'@'; _l:=_i-_l; _i:=_l*'@'; _l:=_i-_l;
         _i:=_l*'@'; _i:=_l*'@'; TAB_SQLK.DV:=(_i-1)+_l;
         _l:=fread(_f); _i:=_l*'@'; _l:=_i-_l; _i:=_l*'@'; _l:=_i-_l;
         _i:=_l*'@'; _i:=_l*'@'; TAB_SQLK.BD:=(_i-1)+_l;
         _l:=fread(_f); _i:=_l*'@'; _l:=_i-_l; _i:=_l*'@'; _l:=_i-_l;
         _i:=_l*'@'; _i:=_l*'@'; TAB_SQLK.BE:=(_i-1)+_l;
         _l:=fread(_f); _i:=_l*'@'; _l:=_i-_l; _i:=_l*'@'; _l:=_i-_l;
         _i:=_l*'@'; _i:=_l*'@'; TAB_SQLK.F3:=(_i-1)+_l;
         _l:=fread(_f); _i:=_l*'@'; _l:=_i-_l; _i:=_l*'@'; _l:=_i-_l;
         _i:=_l*'@'; _i:=_l*'@'; TAB_SQLK.AE:=(_i-1)+_l;
         TAB_SQLK.UIDREF:=$SYSLOG.tm_stamp();
         TAB_SQL.cntx_psh();
         TAB_SQL.index(TAB_SQL2);
         TAB_SQL.prefix(TAB_SQLK.FILENAME,);
         {? TAB_SQL.first() & TAB_SQL.STD='T'|| TAB_SQLK.add() ?};
         TAB_SQL.cntx_pop()
      !}
   ?};
   fclose(_f)
?};
TAB_SQLP:=tab_tmp(2,
   'SQL','STRING[25]','Nazwa pliku zapyt.'@,
   'NR_KOL','INTEGER','Nr kolumny'@,
   'PREC','INTEGER','Dokładność'@,
   'SZER','INTEGER','Szerokość'@,
   'SUM','STRING[1]','Sumować'@,
   'HID','STRING[100]','Ukryć wartość'@,
   'UIDREF','STRING[48]','Id rekordu'@);
_f:=fopen(_prfx+'list_war'+SqlVar.ext('war')+'.sql','ur',1);
{? _f
|| {? fread(_f)<>'\n'
   || {!
      |? (_l:=fread(_f))<>'\n'
      |! _i:=_l*'@'; TAB_SQLP.SQL:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLP.NR_KOL:=#((_i-1)+_l);
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLP.PREC:=#((_i-1)+_l);
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLP.SZER:=#((_i-1)+_l);
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLP.SUM:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLP.HID:=(_i-1)+_l;
         TAB_SQLP.UIDREF:=$SYSLOG.tm_stamp();
         TAB_SQL.cntx_psh();
         TAB_SQL.index(TAB_SQL2);
         TAB_SQL.prefix(TAB_SQLP.SQL,);
         {? TAB_SQL.first() & TAB_SQL.STD='N'|| TAB_SQLP.add() ?};
         TAB_SQL.cntx_pop()
      !}
   ?};
   fclose(_f)
?};
_f:=fopen(_prfx+'list_war'+'.sql','ur',1);
{? _f
|| {? fread(_f)<>'\n'
   || {!
      |? (_l:=fread(_f))<>'\n'
      |! _i:=_l*'@'; TAB_SQLP.SQL:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLP.NR_KOL:=#((_i-1)+_l);
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLP.PREC:=#((_i-1)+_l);
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLP.SZER:=#((_i-1)+_l);
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLP.SUM:=(_i-1)+_l;
         _l:=_i-_l; _i:=_l*'@'; TAB_SQLP.HID:=(_i-1)+_l;
         TAB_SQLP.UIDREF:=$SYSLOG.tm_stamp();
         TAB_SQL.cntx_psh();
         TAB_SQL.index(TAB_SQL2);
         TAB_SQL.prefix(TAB_SQLP.SQL,);
         {? TAB_SQL.first() & TAB_SQL.STD='T'|| TAB_SQLP.add() ?};
         TAB_SQL.cntx_pop()
      !}
   ?};
   fclose(_f)
?};
{? _a=1
|| exec('drill_tab','#sql',1);
   {? TAB_SQL.first()
   || {!
      |? {? TAB_SQL.DRILL='T'
         || exec('drill_sql','#sql',1)
         ?};
         TAB_SQL.next()
      !}
   ?}
?}


\ed_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
::  ZMD: KS [2021]
:: OPIS: Wyświetla okienko edycji parametrów zapytań SQL
::  OLD: \ed_par/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_wsql:=TAB_SQLK.mk_sel('Parametry zapytania SQL'@,,,'dalepdpkojdwyda',,,,,'U','U');
TAB_SQLK.win_fld(_wsql,,'NR',,,3,,1,'Lp.'@);
TAB_SQLK.win_fld(_wsql,,'NAZ',,,,,1,,,'Nazwa parametru'@);
TAB_SQLK.win_fld(_wsql,,'RODZ',,,,,1,'Rodzaj'@,,'Rodzaj parametru'@);
TAB_SQLK.win_fld(_wsql,,'DL_PR',,,7,,1,'Dług./dokł.'@,,'Długość/dokładność parametru'@);
{? var_pres('__SQL_RO')<=0 | __SQL_RO=0
||
   _dolacz:="_nr:=params_exec('NewOrder','#table','TAB_SQLK','NR',TAB_SQLK.index('?'),TAB_SQL.FILENAME);
   TAB_SQLK.blank();TAB_SQLK.FILENAME:=TAB_SQL.FILENAME; TAB_SQLK.NR:=_nr;
   {? TAB_SQLK.edit(\"exec('chk_par','#sql')\")
   || {? TAB_SQLK.add()
      || SqlVar.mpar:='.m';
         exec('save_par','#sql')
      ?}
   ?}";

   TAB_SQLK.dnd_sel(_wsql,,'records.dalepdpkojdwyda', "TAB_SQLK.cntx_psh();
      _ref:=dnd_info('dest_record');
      {? TAB_SQLK.seek(_ref)
      || exec('zmien_lp','#dragdrop','NR',TAB_SQLK.index('?'));
         SqlVar.mpar:='.m'
      ?};
      TAB_SQLK.cntx_pop()
");
   TAB_SQLK.win_act(_wsql,,'Menu','Przesuń&'@@,,,,,,,,,'Ń');

   _fbu:="
      exec('zmien_lpa','#dragdrop','NR',TAB_SQLK.index('?'),,,'U')
   ";
   TAB_SQLK.win_act(_wsql,,'Formuła','W &górę'@@,'#Ń',,_fbu,,,1,_dolacz,,'G');

   _fbd:="
      exec('zmien_lpa','#dragdrop','NR',TAB_SQLK.index('?'),,,'D')
   ";
   TAB_SQLK.win_act(_wsql,,'Formuła','W &dół'@@,'#Ń',,_fbd,,,1,_dolacz,,'D');

   _fbn:="
      exec('zmien_lpa','#dragdrop','NR',TAB_SQLK.index('?'),,,'N')
   ";
   TAB_SQLK.win_act(_wsql,,'Formuła','Do &numeru'@@,'#Ń',,_fbn,,,1,_dolacz,,'N');

   TAB_SQLK.win_act(_wsql,1,'Formuła','Dołącz'@@,,,_dolacz,,1,,,,'D');
   TAB_SQLK.win_act(_wsql,0,'Formuła','Dołącz'@@,,,_dolacz,,0,,,,'D');
   TAB_SQLK.win_btn(_wsql,'text=%1,panel=right,align=begin'['Dołącz'@],'menu:D');

   TAB_SQLK.win_act(_wsql,0,'Popraw',,,,"SqlVar.crc:=TAB_SQLK.crc();1","{? SqlVar.crc<>TAB_SQLK.crc() || SqlVar.mpar:='.m' ?};exec('save_par','#sql')");
   TAB_SQLK.win_btn(_wsql,'text=%1,panel=right,align=begin'['Popraw'@],'menu:P');

   TAB_SQLK.win_act(_wsql,0,'Formuła','Usuń'@@,,'Usunięcie bieżącego zapisu'@,,"exec('del_par','#sql')",,,,,'U');
   TAB_SQLK.win_btn(_wsql,'text=%1,panel=right,align=begin'['Usuń'@],'menu:U')
?};

TAB_SQLK.win_act(_wsql,0,'Rekord',,,,,"exec('chk_par','#sql')");

_esql:=TAB_SQLK.mk_edit('Parametry zapytania SQL'@,0);
TAB_SQLK.win_esep(_esql,'Parametr zapytania SQL'@);
TAB_SQLK.win_efld(_esql,,'NAZ',,,128,,,'Nazwa parametru'@);
TAB_SQLK.efld_opt(_esql,'mark=1',,'NAZ');
TAB_SQLK.win_efld(_esql,,'RODZ',,,,,,'Rodzaj parametru'@,,,'radio-buttons',,
   'String',"'S'",
   'Real',"'R'",
   'Integer',"'I'",
   'Date',"'D'",
   'Formuła',"'F'"
);
TAB_SQLK.win_efld(_esql,,'DL_PR',,,5,,,'Długość/dokładność'@);
TAB_SQLK.win_esep(_esql,'Formuły parametru'@);
TAB_SQLK.win_efld(_esql,,'WZ',,,,,,'Wzorzec'@);
TAB_SQLK.win_efld(_esql,,'DV',,,,,,'Wartość początkowa'@);
TAB_SQLK.win_efld(_esql,,'BD',,,,,,'Przed wyświetleniem'@);
TAB_SQLK.win_efld(_esql,,'BE',,,,,,'Przed redagowaniem'@);
TAB_SQLK.win_efld(_esql,,'F3',,,,,,'Klawisz F3'@);
TAB_SQLK.win_efld(_esql,,'AE',,,,,,'Po redagowaniu'@);
TAB_SQLK.win_ebtn(_esql,'text=%1, icon=xwin16.png:13, btn_label_align=center, panel=bottom, align=end'['&OK'@],"'key:F2'");
TAB_SQLK.win_ebtn(_esql,'text=%1, icon=xwin16.png:14, btn_label_align=center, panel=bottom, align=end'['&Anuluj'@],'key:Esc');
TAB_SQLK.win_sel(_wsql); TAB_SQLK.win_edit(_esql);
TAB_SQLK.fld_fml('RODZ','AFTER_EDIT',"
   _enable:='SR'*TAB_SQLK.RODZ>0;
   TAB_SQLK.efld_opt(TAB_SQLK.win_edit('?'),'enable='+$_enable,TAB_SQLK,'DL_PR');
   {? ~_enable
   || TAB_SQLK.DL_PR:=0
   ?};
   1
");
TAB_SQLK.prefix(TAB_SQL.FILENAME,TAB_SQL.FILENAME);
TAB_SQLK.select()


\red_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Wyświetla okienko redagowania parametrów zapytań SQL
::  OLD: \red_par/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_v:=0;
{! _i:=1..10
|!
   _f:='PAR_SQL.PAR'+$_i+'D:=date(0,0,0)'; ($(_f))();
   _f:='PAR_SQL.PAR'+$_i+'DK:=date(0,0,0)'; ($(_f))();
   _f:='PAR_SQL.PAR'+$_i+'I:=PAR_SQL.PAR'+$_i+'R:=0'; ($(_f))();
   _f:='PAR_SQL.PAR'+$_i+'S:=\'\''; ($(_f))();
   _f:='PAR_SQL.PAR'+$_i+'T:=time(0,0,0)'; ($(_f))()
!};
TAB_SQLK.prefix(TAB_SQL.FILENAME,TAB_SQL.FILENAME);
{? TAB_SQLK.first()
||
   _ext:=obj_new(10);
   {! _i:=1..10 |! _ext[_i]:='' !};

   _esql:=TAB_SQLK.mk_edit('Parametry zapytania SQL'@,0);
   TAB_SQLK.win_esep(_esql,'Ograniczenia:'@);
   {!
   |?
      {? TAB_SQLK.NAZ<>''
      ||
         {? TAB_SQLK.RODZ<>'F'
         ||
            {? TAB_SQLK.RODZ='D' & TAB_SQLK.F3='' || _ext[TAB_SQLK.NR]:='K' ?};
            TAB_SQLK.win_efld(_esql,PAR_SQL,'PAR'+$TAB_SQLK.NR+TAB_SQLK.RODZ+_ext[TAB_SQLK.NR],,
               ,{? TAB_SQLK.DL_PR<>0 & TAB_SQLK.RODZ='S'
                || {? TAB_SQLK.DL_PR=1 || 2 || TAB_SQLK.DL_PR ?}
                |? TAB_SQLK.RODZ='R'
                || 16
                ?}
               ,{? TAB_SQLK.DL_PR<>0 & TAB_SQLK.RODZ='R' || TAB_SQLK.DL_PR ?},,TAB_SQLK.NAZ,,,,{? TAB_SQLK.F3<>'' || 'F3_button=1'|| 'F3_button=0'?});
            _f:=($(TAB_SQLK.DV))();
            {? _f<>~~
            ||
               ($('PAR_SQL.PAR'+$TAB_SQLK.NR+TAB_SQLK.RODZ+':=_a'))(_f);
               {? _ext[TAB_SQLK.NR]<>''
               || ($('PAR_SQL.PAR'+$TAB_SQLK.NR+TAB_SQLK.RODZ+_ext[TAB_SQLK.NR]+
                     ':=PAR_SQL.PAR'+$TAB_SQLK.NR+TAB_SQLK.RODZ))()
               ?}
            ?};
            _v:=1
         ?}
      ?};
      TAB_SQLK.next()
   !};
   _btnok:=TAB_SQLK.win_ebtn(_esql,'text=%1,btn_label_align=center, panel=bottom, align=end'['&OK'@],"'key:F2'");
   _btnan:=TAB_SQLK.win_ebtn(_esql,'text=%1,btn_label_align=center, panel=bottom, align=end'['&Anuluj'@],'key:Esc');
   TAB_SQLK.btn_eopt(_esql,_btnok,'tooltip='+exec('help_red_ok','#window','P'));
   TAB_SQLK.btn_eopt(_esql,_btnan,'tooltip='+exec('help_red_esc','#window','A'));
   TAB_SQLK.win_edit(_esql);

   {? _v
   ||
      {? TAB_SQLK.edit()
      ||
         {! _i:=1..10
         |!
            {? _ext[_i]<>''
            || ($('PAR_SQL.PAR'+$_i+'D:=PAR_SQL.PAR'+$_i+'D'+_ext[_i]))()
            ?}
         !};
         1
      ||
         0
      ?}
   ||
      1
   ?}
||
   1
?}


\fld_next
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Przejście do następnego okienka
::  OLD: \fld_next/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
v_i+=1;
sel_exit()


\fld_prev
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Przejście do poprzedniego okienka
::  OLD: \fld_prev/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
v_i-=1;
sel_exit()


\sql_prt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Uruchamia wydruk
::  OLD: \sql_prt/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','','wsp_sql',,,,,,,,'W')


\fld_len
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Ustala szerokość kolumny
::  OLD: \fld_len/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_v_akr:=($(_a+'.fld_acr('+$_b+')'))();
{? ($('type_of('+_a+'.'+_v_akr+')=1'))()
|| _v:=14
|? ($('type_of('+_a+'.'+_v_akr+')=2'))()
|| _v:=($('MS.fld_len('+_a+',\''+_v_akr+'\')'))();
   ($(_a+'.cntx_psh()'))();
   _v:=($('{? '+_a+'.first() || _v:=0; {! |? {? +'+_a+'.'+($(_a+'.fld_acr('
      +$_b+')'))()+' > _v || _v:=+'+_a+'.'+($(_a+'.fld_acr('+$_b
      +')'))()+' ?}; '+_a+'.next() !} ?}; _v'))();
   ($(_a+'.cntx_pop()'))();
   {? _v=0 || _v:=8 ?}
|? ($('type_of('+_a+'.'+_v_akr+')=4'))()
|| _v:=10
|? ($('type_of('+_a+'.'+_v_akr+')=5'))()
|| _v:=8
|| _v:=0
?};
{? _v & +_v_akr>_v || _v:=+_v_akr ?}; _v


\sql_dsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Wyświetla okienko redakcyjne (na spację)
::  OLD: \sql_dsp/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_SQLR.display()


\ed_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Wyświetla okienko selekcyjne wartości dla kolumn SQL
::  OLD: \ed_war/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_ind:=TAB_SQLP.ndx_tmp(,1,'SQL',,,'SQL',,);
TAB_SQLP.index(_ind);
TAB_SQLP.prefix(TAB_SQL.FILENAME,TAB_SQL.FILENAME);
TAB_SQLP.select();
exec('save_war','#sql')


\add_prc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Dołącza opis dokładności dla kolumn
::  OLD: \add_prc/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_SQLP.blank();
TAB_SQLP.SQL:=TAB_SQL.FILENAME; TAB_SQLP.SUM:='N';
{? TAB_SQLP.edit("exec('chk_wart','#sql','a')")
|| TAB_SQLP.add();
   SqlVar.mwar:='.m';
   1
?}


\cr_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Tworzy okienka dla tabeli tymczasowej
::  OLD: \cr_win/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_wsql:=TAB_SQL.mk_sel('Definicje zapytań SQL'@,,,'dalepdpkkkfjhab',,,,,'U','U');
TAB_SQL.win_fld(_wsql,,'OBSZAR',,,,,1,,,'Obszar funkcjonalny zapytania'@);
TAB_SQL.win_fld(_wsql,,'NAZ',,,40,,,,,'Nazwa zapytania'@);
TAB_SQL.win_fld(_wsql,,'FILENAME',,,,,,'Nazwa pliku'@,,'Nazwa pliku (bez rozszerzenia)'@);
TAB_SQL.win_fld(_wsql,,'DRILL',,,3,,,,,'Analiza drill-down?'@,2,,"'T'","'N'");
TAB_SQL.win_fld(_wsql,,'DOM_GRUP',,,25,,,,,'Domyślne grupowanie'@);
TAB_SQL.win_fld(_wsql,,'STD',,,3,,,,,'Standard?'@,2,,"'T'","'N'");
TAB_SQL.win_act(_wsql,1,'Rekord',,,,,"exec('chk_sql','#sql','e')");
{? var_pres('__SQL_RO')<=0 | __SQL_RO=0
|| TAB_SQL.win_act(_wsql,1,'Formuła','Dołącz'@@,,,,"exec('add_sql','#sql')",1,,,,'D');
   TAB_SQL.win_act(_wsql,0,'Formuła','Dołącz'@@,,,,"exec('add_sql','#sql')",1,,,,'D');
   TAB_SQL.win_btn(_wsql,'text=%1,panel=right,align=begin'['Dołącz'@],'menu:D');
   TAB_SQL.win_act(_wsql,0,'Popraw',,,,"exec('edit_sql','#sql')","exec('ae_sql','#sql')");
   TAB_SQL.win_btn(_wsql,'text=%1,panel=right,align=begin'['Popraw'@],'menu:P');
   TAB_SQL.win_act(_wsql,0,'Formuła','Usuń'@@,,,,"exec('del_sql','#sql')",,,,,'U');
   TAB_SQL.win_btn(_wsql,'text=%1,panel=right,align=begin'['Usuń'@],'menu:U',,,0,);
   TAB_SQL.win_act(_wsql,0,'Formuła','K&opiuj'@@,,,"exec('sql_kopiuj','#sql')",,,,,,'O');
   TAB_SQL.win_btn(_wsql,'text=%1,panel=right,align=begin'['K&opiuj'@],'menu:O')
?};
TAB_SQL.win_act(_wsql,0,'Wyświetl',,,,"PAR_SQL.DOM_GRUP:=TAB_SQL.DOM_GRUP; TAB_SQL.display()");
TAB_SQL.win_act(_wsql,0,'Formuła','Pa&rametry'@@,,,,"exec('ed_par','#sql')",,,,,'R');
TAB_SQL.win_act(_wsql,0,'Formuła','Zapytanie SQL'@@,,,,"exec('ed_zap','#sql')",,,,,'Z');
TAB_SQL.win_act(_wsql,0,'Formuła','Wartości'@@,,,,"exec('ed_war','#sql')",,,,,'W');
TAB_SQL.win_act(_wsql,0,'Rekord',,,,"exec('act','#sql')","exec('chk_sql','#sql','e')");
TAB_SQL.win_sel(_wsql);

_esql:=TAB_SQL.mk_edit('Definicja zapytania SQL'@,0);
TAB_SQL.win_esep(_esql,'Dane podstawowe'@);
TAB_SQL.win_efld(_esql,,'OBSZAR',,,50,,1,'Obszar funkcjonalny'@,,'Obszar funkcjonalny'@);
TAB_SQL.efld_opt(_esql,'mark=1',,'OBSZAR');
TAB_SQL.win_efld(_esql,,'NAZ',,,50,,,'Nazwa zapytania'@,,'Nazwa zapytania'@);
TAB_SQL.efld_opt(_esql,'mark=1',,'NAZ');
TAB_SQL.win_efld(_esql,,'FILENAME',,,50,,,'Nazwa pliku'@,,'Nazwa pliku'@);
TAB_SQL.efld_opt(_esql,'mark=1',,'FILENAME');
TAB_SQL.win_efld(_esql,,'BSQL',,,50,,,'Formuła przed'@,,'Formuła przed wykonaniem zapytania'@);
TAB_SQL.win_efld(_esql,,'ASQL',,,50,,,'Formuła po'@,,'Formuła po wykonaniu zapytania'@);
TAB_SQL.win_efld(_esql,,'RSQL',,,50,,,'Rekord przed'@);
TAB_SQL.win_efld(_esql,PAR_SQL,'DOM_GRUP',,,47,,,'Domyślne grupowanie'@,,'Domyślne grupowanie'@,,'F3_button=1');

TAB_SQL.win_efld(_esql,,'DRILL',,,2,,,'Analiza drill-down?'@,,'Dostępna analiza dril-down'@,'check-box',,"'T'","'N'");
TAB_SQL.win_ebtn(_esql,'text=%1, icon=xwin16.png:13, btn_label_align=center, panel=bottom, align=end'['&OK'@],"'key:F2'");
TAB_SQL.win_ebtn(_esql,'text=%1, icon=xwin16.png:14, btn_label_align=center, panel=bottom, align=end'['&Anuluj'@],'key:Esc');
TAB_SQL.win_edit(_esql);

_wsqlp:=TAB_SQLP.mk_sel('Wartości dla kolumn'@,,,'dalepkdasefjhab',,,,,'U','U');
TAB_SQLP.win_fld(_wsqlp,,'NR_KOL',,,,,,,,'Nr kolumny'@);
TAB_SQLP.win_fld(_wsqlp,,'PREC',,,,,,,,'Dokładność'@);
TAB_SQLP.win_fld(_wsqlp,,'SZER',,,,,,,,'Szerokość'@);
TAB_SQLP.win_fld(_wsqlp,,'SUM',,,,,,,,'Sumować'@,2,,"'T'","'N'");
TAB_SQLP.win_fld(_wsqlp,,'HID',,,15,,,,,'Ukryć wartość'@);
{? var_pres('__SQL_RO')<=0 | __SQL_RO=0
||
   TAB_SQLP.win_act(_wsqlp,1,'Formuła','Dołącz'@@,,'Dołączanie nowego zapisu'@,,"exec('add_prc','#sql')",1,,,,'D');
   TAB_SQLP.win_act(_wsqlp,0,'Formuła','Dołącz'@@,,'Dołączanie nowego zapisu'@,,"exec('add_prc','#sql')",1,,,,'D');
   TAB_SQLP.win_btn(_wsqlp,'text=%1,panel=right,align=begin'['Dołącz'@],'menu:D');
   TAB_SQLP.win_act(_wsqlp,0,'Popraw',,,,"SqlVar.crc:=TAB_SQLP.crc();1","{? SqlVar.crc<>TAB_SQLP.crc()|| SqlVar.mwar:='.m' ?}");
   TAB_SQLP.win_btn(_wsqlp,'text=%1,panel=right,align=begin'['Popraw'@],'menu:P');
   TAB_SQLP.win_act(_wsqlp,0,'Usuń',,,,,"SqlVar.mwar:='.m'");
   TAB_SQLP.win_btn(_wsqlp,'text=%1,panel=right,align=begin'['Usuń'@],'menu:U')
?};
TAB_SQLP.win_act(_wsqlp,0,'Rekord',,,,,"exec('chk_wart','#sql','e')");
TAB_SQLP.win_sel(_wsqlp);
_esqlp:=TAB_SQLP.mk_edit('Dokładność (zaokrąglenia) dla kolumn'@,0);
TAB_SQLP.win_esep(_esqlp,'Parametry kolumny'@);
TAB_SQLP.win_efld(_esqlp,,'NR_KOL',,,30,,,'Nr kolumny'@);
TAB_SQLP.efld_opt(_esqlp,'mark=1',,'NR_KOL');
TAB_SQLP.win_efld(_esqlp,,'PREC',,,30,,,'Dokładność'@);
TAB_SQLP.win_efld(_esqlp,,'SZER',,,30,,,'Szerokość'@);
TAB_SQLP.win_efld(_esqlp,,'HID',,,30,,,'Ukryć wartość'@);
TAB_SQLP.win_efld(_esqlp,,'SUM',,,30,,,'Sumować'@,,,'check-box',,"'T'","'N'");
TAB_SQLP.win_ebtn(_esqlp,'text=%1, icon=xwin16.png:13, btn_label_align=center, panel=bottom, align=end'['&OK'@],"'key:F2'");
TAB_SQLP.win_ebtn(_esqlp,'text=%1, icon=xwin16.png:14, btn_label_align=center, panel=bottom, align=end'['&Anuluj'@],'key:Esc');
TAB_SQLP.win_edit(_esqlp)


\save_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Zapisuje do pliku tekstowego wartości dla kolumn zapytania
::  OLD: \save_war/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_prfx:='!'+(-BPMN.SYM_DOM)+'_';
_fn:=_prfx+'list_war';
_f:=fopen(_fn+SqlVar.ext('war')+'.sql','uw',1);
TAB_SQLP.prefix();
{? _f
|| fwrite(_f,':!UTF-8');
   {? TAB_SQLP.first()
   || {!
      |?
         TAB_SQL.cntx_psh();
         TAB_SQL.index(TAB_SQL2);
         TAB_SQL.prefix(TAB_SQLP.SQL,);
         {? TAB_SQL.first() & TAB_SQL.STD='N' || _write:=1 || _write:=0 ?};
         TAB_SQL.cntx_pop();
         {? _write
         ||
            fwrite(_f,
            TAB_SQLP.SQL+'@'+$TAB_SQLP.NR_KOL+'@'+$TAB_SQLP.PREC+'@'+$TAB_SQLP.SZER+'@'+TAB_SQLP.SUM+'@'+TAB_SQLP.HID+'@')
         ?};
         TAB_SQLP.next()
      !}
   ?};
   fclose(_f)
?};
_f:=fopen(_fn+'.sql','uw',1);
TAB_SQLP.prefix();
{? _f
|| fwrite(_f,':!UTF-8');
   {? TAB_SQLP.first()
   || {!
      |?
         TAB_SQL.cntx_psh();
         TAB_SQL.index(TAB_SQL2);
         TAB_SQL.prefix(TAB_SQLP.SQL,);
         {? TAB_SQL.first() & TAB_SQL.STD='T' || _write:=1 || _write:=0 ?};
         TAB_SQL.cntx_pop();
         {? _write
         ||
            fwrite(_f,
            TAB_SQLP.SQL+'@'+$TAB_SQLP.NR_KOL+'@'+$TAB_SQLP.PREC+'@'+$TAB_SQLP.SZER+'@'+TAB_SQLP.SUM+'@'+TAB_SQLP.HID+'@')
         ?};
         TAB_SQLP.next()
      !}
   ?};
   fclose(_f);
   {? SqlVar.mwar<>'' & __FileLayer.del_same(_fn,'sql',1)
   || SqlVar.mwar:=''
   ?}
?}


\save_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Zapisuje do pliku tekstowego listę zapytań SQL
::  OLD: \save_sql/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_prfx:='!'+(-BPMN.SYM_DOM)+'_';
_fn:=_prfx+'list_sql';
_f:=fopen(_fn+SqlVar.ext('sql')+'.sql','uw',1);
{? _f
|| {? TAB_SQL.first()
   || fwrite(_f,':!UTF-8');
      {!
      |? {? TAB_SQL.STD='N'
         ||
            fwrite(_f,TAB_SQL.OBSZAR+'@'+TAB_SQL.NAZ+'@'+TAB_SQL.FILENAME+'@'+TAB_SQL.BSQL+'@'+TAB_SQL.ASQL+'@'+
                      TAB_SQL.RSQL+'@'+TAB_SQL.DRILL+'@'+TAB_SQL.DOM_GRUP+'@'+TAB_SQL.STD+'@')
         ?};
         TAB_SQL.next()
      !}
   ?};
   fclose(_f)
?};
::standard
_f:=fopen(_fn+'.sql','uw',1);
{? _f
|| {? TAB_SQL.first()
   || fwrite(_f,':!UTF-8');
      {!
      |? {? TAB_SQL.STD='T'
         ||
            fwrite(_f,TAB_SQL.OBSZAR+'@'+TAB_SQL.NAZ+'@'+TAB_SQL.FILENAME+'@'+TAB_SQL.BSQL+'@'+TAB_SQL.ASQL+'@'+
                      TAB_SQL.RSQL+'@'+TAB_SQL.DRILL+'@'+TAB_SQL.DOM_GRUP+'@'+TAB_SQL.STD+'@')
         ?};
         TAB_SQL.next()
      !}
   ?};
   fclose(_f);
   {? SqlVar.msql<>'' & __FileLayer.del_same(_fn,'sql',1)
   || SqlVar.msql:=''
   ?}
?}


\clr_obj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Usuwa istniejące obiekty
::  OLD: \clr_obj/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TAB_SQL')>0 || obj_del(TAB_SQL)
|? var_pres('TAB_SQL')=0 || &TAB_SQL
?};
{? var_pres('TAB_SQLP')>0 || obj_del(TAB_SQLP)
|? var_pres('TAB_SQLP')=0 || &TAB_SQLP
?};
{? var_pres('TAB_SQLK')>0 || obj_del(TAB_SQLK)
|? var_pres('TAB_SQLK')=0 || &TAB_SQLK
?};
{? var_pres('TAB_SQLR')>0 || obj_del(TAB_SQLR)
|? var_pres('TAB_SQLR')=0 || &TAB_SQLR
?};
{? var_pres('p_sql')>0 || obj_del(p_sql) ?};
{? var_pres('w_sql')>0 || obj_del(w_sql) ?};
{? var_pres('v')>0 || obj_del(v) ?};
VAR_DEL.delete('SqlVar')


\chk_file
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Sprawdza istnienie pliku z zapytaniem *.sql
::  OLD: \chk_file/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_v:=__FileLayer.real_name('!'+(-BPMN.SYM_DOM)+'_'+TAB_SQL.FILENAME,'sql');
{? _f:=fopen(_v,'ur',1)
|| fclose(_f); 1
|| FUN.info('Nie znaleziono pliku \'%1\' z zapytaniem SQL.'@[_v]); 0
?}


\ed_prc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Dołącza rekordy do tabeli TAB_SQLP.
::  OLD: \ed_prc/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? TAB_SQLP.edit("exec('chk_wart','#sql')")
|| TAB_SQLP.put()
?}


\chk_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Sprawdza poprawność wypełnienia pól wartości
::   WE: _a: tryb pracy (a-add, e-edit)
::  OLD: \chk_wart/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_v:='';
_v_ref:=TAB_SQLP.ref(); _v_kol:=TAB_SQLP.NR_KOL;
TAB_SQLP.cntx_psh();
_indp:=TAB_SQLP.ndx_tmp(,1,'SQL',,,'SQL',,,'NR_KOL',,);
TAB_SQLP.index(_indp); TAB_SQLP.prefix(TAB_SQLP.SQL,TAB_SQLP.SQL,_v_kol);
{? (_a='a' & TAB_SQLP.first())
   | (_a='e' & TAB_SQLP.first() & TAB_SQLP.ref()<>_v_ref)
|| FUN.info('Istnieje już rekord dla podanej kolumny.'@); _v:='NR_KOL'
?};
TAB_SQLP.cntx_pop();
{? ~+_v & TAB_SQLP.NR_KOL<1
|| FUN.info('Nr kolumny nie może być mniejszy od 1.'@); _v:='NR_KOL'
?};
{? ~+_v & TAB_SQLP.PREC<0
|| FUN.info('Dokładność nie może być mniejsza od 0.'@); _v:='PREC'
?};
{? ~+_v & TAB_SQLP.SZER<0
|| FUN.info('Szerokość kolumny nie może być ujemna.'@);
   _v:='SZER'
?};
{? ~+_v & TAB_SQLP.SZER>40
|| FUN.info('Dopuszczalna szerokość kolumny to 40 znaków.'@);
   _v:='SZER'
?};
TAB_SQLP.SUM:=~-TAB_SQLP.SUM;
{? ~+_v & TAB_SQLP.SUM<>'T' & TAB_SQLP.SUM<>'N'
|| FUN.info('Dopuszczalne wartości dla pola Sumować to: T lub N.'@);
   _v:='SUM'
?};
TAB_SQLP.ndx_drop(_indp);
_v


\sql_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Eksport wyniku zapytania do pliku tekstowego
::  OLD: \sql_exp/skid_sql.fml
:: ~OST: INEXPORT,INFEXISTS,INPTHDIR
::----------------------------------------------------------------------------------------------------------------------
{? exec('cli_functions','#system')=0
|| FUN.emsg(exec('indevice_nacc_msg','#system'));
   return(0)
?};
undefine();
define('EXP_FILE','export','Nazwa pliku'@,,12);
def_btn('text=%1,icon=xwin16.png:13'['OK'@],"'key:F2'");
def_btn('text=%1,icon=xwin16.png:14'['Anuluj'@],"'key:Esc'");
{? def_edit("{? DEFINE.EXP_FILE='' || FUN.info('Podaj nazwę pliku.'@);0 || 1 ?}",'Eksport do pliku tekstowego'@)
|| {? ~(fexists('@'+DEFINE.EXP_FILE+'.txt') &
      ~FUN.ask('Plik \'%1.txt\' istnieje już w katalogu\n%2\nCzy chcesz nadpisać?'@[DEFINE.EXP_FILE,pth_dir('@')]))
   || TAB_SQLR.cntx_psh();
      {? TAB_SQLR.first()
      || {? sys_name(0)='WINDOWS' || MS.conv:='utf-8' ?};
         MS.export('@'+DEFINE.EXP_FILE+'.txt',TAB_SQLR);
         MS.conv:='Mazovia';
         FUN.info('Plik \'%1.txt\' został zapisany w katalogu\n%2'@[DEFINE.EXP_FILE,pth_dir('@')])
      ?};
      TAB_SQLR.cntx_pop()
   ?}
?};
undefine()


\add_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Dołącza definicję zapytania SQL
::  OLD: \add_sql/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
obsz:='';
_ext:='.m';
exec('cr_obsz','sql');
_wobsz:=TAB_OBSZ.mk_sel('Obszary funkcjonalne'@,'N',1,,,,,,'U');
TAB_OBSZ.win_act(_wobsz,0,'Formuła','Wybierz'@@,,,"obsz:=TAB_OBSZ.OBSZ; sel_exit()",,1,,,,'W');
TAB_OBSZ.win_btn(_wobsz,'text=%1,panel=right,align=begin'['Wybierz'@],'menu:W');
TAB_OBSZ.win_btn(_wobsz,'text=%1,panel=right,align=begin'['Anuluj'@],'key:Esc');
TAB_OBSZ.win_sel(_wobsz);
{? TAB_OBSZ.select()
|| TAB_SQL.blank(); TAB_SQL.OBSZAR:=obsz;
   TAB_SQL.DRILL:='N'; PAR_SQL.DOM_GRUP:='';
   _ok:=1;
   {! |?
      {? TAB_SQL.edit("exec('chk_sql','#sql','a')")
      || _fn:='!'+(-BPMN.SYM_DOM)+'_'+TAB_SQL.FILENAME;
         {? fexists(_fn+_ext+'.sql',1)=0
         || _f:=fopen(_fn+_ext+'.sql','uw',1);
            {? _f
            || fwrite(_f,':!UTF-8');
               fclose(_f);
               _ok:=1
            || FUN.info('Nie udało się utworzyć pliku: !(%1)_%2.sql'@[-BPMN.SYM_DOM,TAB_SQL.FILENAME+_ext]);
               _ok:=0
            ?}
         || {? FUN.ask('Plik: !(%1)_%2.m.sql już istnieje. Nadpisać?'@[-BPMN.SYM_DOM,TAB_SQL.FILENAME+_ext]) || _ok:=1  || _ok:=0 ?}
         ?}
      || _ok:=-1
      ?};
      _ok=0
   !};
   {? _ok=1
   || SqlVar.msql:='.m';
      TAB_SQL.DOM_GRUP:=PAR_SQL.DOM_GRUP;
      TAB_SQL.STD:='N';
      TAB_SQL.add();
      exec('save_sql','#sql')
   ?}
?};
obj_del(TAB_OBSZ); &obsz; 1


\chk_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Sprawdza poprawność wypełnienia pól parametrów def. zapytania
::   WE: [_a] - typ operacji: 1-dołącz, 0-popraw
::  OLD: \chk_par/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=1+menu_txt()<>'P' ?};
_v:='';
{? TAB_SQLK.NAZ=''
|| FUN.info('Nie podano nazwy parametru.'@); _v:='NAZ'
|| TAB_SQLK.RODZ:=~-TAB_SQLK.RODZ;
   {? TAB_SQLK.RODZ='' | (TAB_SQLK.RODZ<>'F' & TAB_SQLK.RODZ<>'S'
      & TAB_SQLK.RODZ<>'I' & TAB_SQLK.RODZ<>'R' & TAB_SQLK.RODZ<>'D')
   || FUN.info('Wprowadzono nieprawidłowy rodzaj parametru. Dozwolone wartości:\n S - STRING\, I - INTEGER, R - REAL, D - DATE, F - FORMULA.'@); _v:='RODZ'
   || {? TAB_SQLK.DL_PR<>0 & TAB_SQLK.RODZ<>'S' & TAB_SQLK.RODZ<>'R'
      || FUN.info('Długość/dokładność można podać tylko dla parametru rodzaju \'S\' lub \'R\'.'@);_v:='DL_PR'
      || {? (TAB_SQLK.DL_PR<0 | TAB_SQLK.DL_PR>50) & TAB_SQLK.RODZ='S'
         || FUN.info('Długość musi zawierać się w przedziale 0-50 znaków.'@); _v:='DL_PR'
         |? (TAB_SQLK.DL_PR<0 | TAB_SQLK.DL_PR>6) & TAB_SQLK.RODZ='R'
         || FUN.info('Dokładność musi zawierać się w przedziale 0-6 znaków.'@); _v:='DL_PR'
         ?}
      ?}
   ?}
?};
{? _v='' & _a & TAB_SQLK.size()=10
|| FUN.info('Można zdefiniować maksymalnie 10 parametrów dla zapytania SQL.'@); _v:='NAZ'
?};
{? _v='' & exec('valid_formula','#field',TAB_SQLK.WZ,,'Wzorzec')=0 || _v:='WZ' ?};
{? _v='' & exec('valid_formula','#field',TAB_SQLK.DV,,'Wartość początkowa')=0 || _v:='DV' ?};
{? _v='' & exec('valid_formula','#field',TAB_SQLK.BD,,'Przed wyświetleniem')=0 || _v:='BD' ?};
{? _v='' & exec('valid_formula','#field',TAB_SQLK.BE,,'Przed redagowaniem')=0 || _v:='BE' ?};
{? _v='' & exec('valid_formula','#field',TAB_SQLK.F3,,'Klawisz F3')=0 || _v:='F3' ?};
{? _v='' & exec('valid_formula','#field',TAB_SQLK.AE,,'Po redagowaniu')=0 || _v:='AE' ?};
{? _v='' & var_pres('sql_nr')>0
|| TAB_SQLK.cntx_psh();
   {? TAB_SQLK.last() & TAB_SQLK.size()>=sql_nr
   || _i:=TAB_SQLK.size()+1; {! |? TAB_SQLK.NR:=_i; _i-=1; TAB_SQLK.put(); TAB_SQLK.prev(); _i>sql_nr !}
   ?};
   TAB_SQLK.cntx_pop(); TAB_SQLK.NR:=sql_nr; TAB_SQLK.FILENAME:=TAB_SQL.FILENAME;
   &sql_nr
?}; _v


\edit_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Edycja nagłówka zapytania
::  OLD: \edit_sql/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
obsz:='';
PAR_SQL.DOM_GRUP:=TAB_SQL.DOM_GRUP;
exec('cr_obsz','sql');
_wobsz:=TAB_OBSZ.mk_sel('Obszary funkcjonalne'@,'N',1,,,,,,'U');
TAB_OBSZ.win_act(_wobsz,0,'Formuła','Wybierz'@@,,,"obsz:=TAB_OBSZ.OBSZ; sel_exit()",,1,,,,'W');
TAB_OBSZ.win_btn(_wobsz,'text=%1,panel=right,align=begin'['Wybierz'@],'menu:W');
TAB_OBSZ.win_btn(_wobsz,'text=%1,panel=right,align=begin'['Anuluj'@],'key:Esc');
TAB_OBSZ.win_sel(_wobsz);
TAB_OBSZ.find_key(TAB_SQL.OBSZAR);
{? TAB_OBSZ.select(,1)
|| SqlVar.crc:=TAB_SQL.crc();
   SqlVar.filename:=TAB_SQL.FILENAME;
   TAB_SQL.OBSZAR:=obsz;
   obj_del(TAB_OBSZ);
   &obsz;
   1
|| obj_del(TAB_OBSZ); &obsz; 0
?}


\ae_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Po akcji popraw dla nagłówka zapytań sql
::----------------------------------------------------------------------------------------------------------------------
{? TAB_SQL.crc()<>SqlVar.crc
|| SqlVar.msql:='.m'
?};
{? TAB_SQL.FILENAME<>SqlVar.filename
|| _prfx:='!'+(-BPMN.SYM_DOM)+'_';
   _fsql:=__FileLayer.real_name(_prfx+SqlVar.filename,'sql');
   _layer:=__FileLayer.layer(_prfx+SqlVar.filename,'sql');
   {? fcopy(_fsql,_prfx+TAB_SQL.FILENAME+SqlVar.ext('sql')+'.sql',1,1,1) & _layer<>'s'
   || ferase(_fsql,1)
   ?};
   TAB_SQL.cntx_psh();
   TAB_SQLK.cntx_psh();
   _ind:=TAB_SQLK.ndx_tmp(,1,'FILENAME',,,'FILENAME',,);
   TAB_SQLK.index(_ind); TAB_SQLK.prefix(SqlVar.filename,SqlVar.filename);
   {? TAB_SQLK.first()
   || {! |?
         TAB_SQLK.cntx_psh(); TAB_SQLK.prefix();
         TAB_SQLK.FILENAME:=TAB_SQL.FILENAME; TAB_SQLK.put();
         TAB_SQLK.cntx_pop();
         TAB_SQLK.first()
      !}
   ?};
   TAB_SQLK.ndx_drop(_ind);
   TAB_SQLK.cntx_pop();
   TAB_SQLP.cntx_psh();
   _indp:=TAB_SQLP.ndx_tmp(,1,'SQL',,,'SQL',,);
   TAB_SQLP.index(_indp); TAB_SQLP.prefix(SqlVar.filename,SqlVar.filename);
   {? TAB_SQLP.first()
   || {! |?
         TAB_SQLP.cntx_psh(); TAB_SQLP.prefix();
         TAB_SQLP.SQL:=TAB_SQL.FILENAME; TAB_SQLP.put();
         TAB_SQLP.cntx_pop();
         TAB_SQLP.first()
      !}
   ?};
   TAB_SQLP.ndx_drop(_indp);
   TAB_SQLP.cntx_pop();
   exec('save_war','#sql');
   exec('save_par','#sql');
   exec('save_sql','#sql');
   TAB_SQL.cntx_pop();
   __FileLayer.del_same(_prfx+TAB_SQL.FILENAME,'sql',1);
   _fsqg:=__FileLayer.real_name(_prfx+SqlVar.filename,'sqg');
   _layer:=__FileLayer.real_name(_prfx+SqlVar.filename,'sqg');
   {? fcopy(_fsqg,_prfx+TAB_SQL.FILENAME+SqlVar.ext('sql')+'.sqg',1,1,1) & _layer<>'s'
   || ferase(_fsqg,1)
   ?};
   __FileLayer.del_same(_prfx+TAB_SQL.FILENAME,'sqg',1)
?}


\del_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Usuwa nagłówki zapytań i wartości dla zapytania
::  OLD: \del_sql/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć bieżący wiersz?'@)
|| TAB_SQLP.cntx_psh(); TAB_SQLK.cntx_psh();
   _ind:=TAB_SQLP.ndx_tmp(,1,'SQL',,,'SQL',,);
   TAB_SQLP.index(_ind); TAB_SQLP.prefix(TAB_SQL.FILENAME,TAB_SQL.FILENAME);
   {? TAB_SQLP.first()
   || SqlVar.mwar:='.m';
      {! |? TAB_SQLP.del() !}
   ?};
   exec('save_war','#sql'); TAB_SQLP.ndx_drop(_ind);
   _ind:=TAB_SQLK.ndx_tmp(,1,'FILENAME',,,'FILENAME',,);
   TAB_SQLK.index(_ind); TAB_SQLK.prefix(TAB_SQL.FILENAME,TAB_SQL.FILENAME);
   {? TAB_SQLK.first()
   || SqlVar.mpar:='.m';
      {! |? TAB_SQLK.del() !}
   ?};
   exec('save_par','#sql');
   _ext:='.m';
   ferase('!'+(-BPMN.SYM_DOM)+'_'+TAB_SQL.FILENAME+_ext+'.sql',1);
   TAB_SQLK.ndx_drop(_ind); TAB_SQL.del();
   TAB_SQL.cntx_psh();
   SqlVar.msql:='.m';
   exec('save_sql','#sql');
   TAB_SQL.cntx_pop();
   TAB_SQLP.cntx_pop(); TAB_SQLK.cntx_pop()
?}


\f_sqlnrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA, AFL [8.50]
:: OPIS: Przenumerowanie Lp po zmianie kolejności (w zapytaniach)
::  OLD: \f_sqlnr/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
echo('Proszę czekać'@);
_suma:=0;
TAB_SQLR.cntx_psh();
_v:=TAB_SQLR.size()+1;
{? TAB_SQLR.first()
|| _i:=1;
   {!
   |? {? TAB_SQLR.next() || _ref:=TAB_SQLR.ref(); TAB_SQLR.prev() || _ref:=null ?};
      TAB_SQLR.LP+=_v; _i+=TAB_SQLR.put();
      {? _ref<>null || TAB_SQLR.seek(_ref) ?};
      _i<_v
   !}
?};
_v:=0;
{? TAB_SQLR.first()
|| {!
   |? {? TAB_SQLR.F0000001<>-1
      || TAB_SQLR.LP:=(_v+=1)
      || _suma:=1;
         TAB_SQLR.LP:=TAB_SQLR.size()
      ?};
      TAB_SQLR.put();
      TAB_SQLR.next()
   !}
?};
TAB_SQLR.cntx_pop();
{? _suma
|| TAB_SQLR.ndx_drop(); _ind:=TAB_SQLR.ndx_tmp(,1,'LP',,); TAB_SQLR.index(_ind)
?};
echo('')


\save_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [8.50]
:: OPIS: Zapisuje do pliku tekstowego parametry zapytania
::  OLD: \save_par/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_prfx:='!'+(-BPMN.SYM_DOM)+'_';
_fname:=_prfx+'list_par';
_f:=fopen(_fname+SqlVar.ext('par')+'.sql','uw',1); _fn:='';
TAB_SQLK.cntx_psh();
TAB_SQLK.prefix();
{?  _f
|| {? TAB_SQLK.first()
   || fwrite(_f,':!UTF-8');
      {!
      |? {? TAB_SQLK.FILENAME<>_fn || _i:=1; _fn:=TAB_SQLK.FILENAME ?};
         TAB_SQL.cntx_psh();
         TAB_SQL.index(TAB_SQL2);
         TAB_SQL.prefix(TAB_SQLK.FILENAME,);
         {? TAB_SQL.first() & TAB_SQL.STD='N' || _write:=1 || _write:=0 ?};
         TAB_SQL.cntx_pop();

         {? TAB_SQLK.NAZ<>'' & _write
         || fwrite(_f,TAB_SQLK.FILENAME+'@'+$_i+'@'+TAB_SQLK.NAZ+'@'+TAB_SQLK.RODZ+'@'+$TAB_SQLK.DL_PR+'@');
            fwrite(_f,TAB_SQLK.FILENAME+'@'+$_i+'@'+TAB_SQLK.WZ+'@');
            fwrite(_f,TAB_SQLK.FILENAME+'@'+$_i+'@'+TAB_SQLK.DV+'@');
            fwrite(_f,TAB_SQLK.FILENAME+'@'+$_i+'@'+TAB_SQLK.BD+'@');
            fwrite(_f,TAB_SQLK.FILENAME+'@'+$_i+'@'+TAB_SQLK.BE+'@');
            fwrite(_f,TAB_SQLK.FILENAME+'@'+$_i+'@'+TAB_SQLK.F3+'@');
            fwrite(_f,TAB_SQLK.FILENAME+'@'+$_i+'@'+TAB_SQLK.AE+'@')
         ?};
         _i+=1;
         TAB_SQLK.next()
      !}
   ?};
   fclose(_f)
?};
:: standard
_f:=fopen(_fname+'.sql','uw',1); _fn:='';
{?  _f
|| {? TAB_SQLK.first()
   || fwrite(_f,':!UTF-8');
      {!
      |? {? TAB_SQLK.FILENAME<>_fn || _i:=1; _fn:=TAB_SQLK.FILENAME ?};
         TAB_SQL.cntx_psh();
         TAB_SQL.index(TAB_SQL2);
         TAB_SQL.prefix(TAB_SQLK.FILENAME,);
         {? TAB_SQL.first() & TAB_SQL.STD='T' || _write:=1 || _write:=0 ?};
         TAB_SQL.cntx_pop();

         {? TAB_SQLK.NAZ<>'' & _write
         || fwrite(_f,TAB_SQLK.FILENAME+'@'+$_i+'@'+TAB_SQLK.NAZ+'@'+TAB_SQLK.RODZ+'@'+$TAB_SQLK.DL_PR+'@');
            fwrite(_f,TAB_SQLK.FILENAME+'@'+$_i+'@'+TAB_SQLK.WZ+'@');
            fwrite(_f,TAB_SQLK.FILENAME+'@'+$_i+'@'+TAB_SQLK.DV+'@');
            fwrite(_f,TAB_SQLK.FILENAME+'@'+$_i+'@'+TAB_SQLK.BD+'@');
            fwrite(_f,TAB_SQLK.FILENAME+'@'+$_i+'@'+TAB_SQLK.BE+'@');
            fwrite(_f,TAB_SQLK.FILENAME+'@'+$_i+'@'+TAB_SQLK.F3+'@');
            fwrite(_f,TAB_SQLK.FILENAME+'@'+$_i+'@'+TAB_SQLK.AE+'@')
         ?};
         _i+=1;
         TAB_SQLK.next()
      !}
   ?};
   fclose(_f);
   {? SqlVar.mpar<>'' & __FileLayer.del_same(_fname,'sql',1)
   || SqlVar.mpar:=''
   ?}
?};
TAB_SQLK.cntx_pop()


\sql_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Formuła uruchamia funkcje obsługi pól parametrów dla SQL
::   WE: _a: oznaczenie funkcji:
::          'WZ' - wzorzec
::          'DV' - wartość początkowa
::          'BD' - przed wyświetlaniem
::          'BE' - przed redakcją
::          'F3' - klawisz F3
::          'AE' - po redakcji
::       _b: nr parametru
::       _c: parametr przekazywany do formuły "Po redagowaniu" przez runtime -
::           wykorzystywany przy obsłudze edycji konta.
::  OLD: \sql_fun/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_SQLK.prefix(TAB_SQL.FILENAME,TAB_SQL.FILENAME,_b);
{? TAB_SQLK.first()
|| _f:=($('TAB_SQLK.'+_a))();
   {? _a='WZ' & _f=''
   || ''
   || {? _>2 || ($(_f))(_c) || ($(_f))() ?}
   ?}
?}


\sqlr_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Tworzy rekord podsumowania dla zapytania SQL.
::  OLD: \sqlr_sum/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_v:=0;
s:=obj_new(TAB_SQLR.fld_num()-1);
p:=obj_new(TAB_SQLR.fld_num()-1);
{! _i:=1..TAB_SQLR.fld_num()-1 |! s[_i]:=''; p[_i]:=2 !};
{? TAB_SQLP.prefix(TAB_SQL.FILENAME,TAB_SQL.FILENAME); TAB_SQLP.first()
|| {! |?
      {? TAB_SQLP.SUM='T' & TAB_SQLP.NR_KOL<=TAB_SQLR.fld_num()-1
         & type_of(($('TAB_SQLR.'+($('TAB_SQLR.fld_acr('
         +$TAB_SQLP.NR_KOL+')'))()))())=1
      || _v:=1; s[TAB_SQLP.NR_KOL]:=0; p[TAB_SQLP.NR_KOL]:=TAB_SQLP.PREC
      ?};
      TAB_SQLP.next()
   !}
?};
{? _v & TAB_SQLR.first()
|| {! |?
      {! _i:=2..TAB_SQLR.fld_num()-1 |!
         {? type_of(s[_i])=1
         || s[_i]+=(($('TAB_SQLR.'+($('TAB_SQLR.fld_acr('+$_i+')'))()))())$p[_i]
         ?}
      !};
      TAB_SQLR.next()
   !};
   TAB_SQLR.blank();
   {! _i:=2..TAB_SQLR.fld_num()-1 |!
      {? type_of(s[_i])=1
      || ($('TAB_SQLR.'+($('TAB_SQLR.fld_acr('+$_i+')'))()+':=s['+$_i+']'))()
      ?}
   !};
   TAB_SQLR.LP:=TAB_SQLR.size(); TAB_SQLR.F0000001:=-1; TAB_SQLR.add();
   exec('f_sqlnrz','#sql'); TAB_SQLR.first()
?};
obj_del(s); obj_del(p); 1


\rb_sqlrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Rekord przed dla wyniku zapytania SQL dla podsumowania.
::  OLD: \rb_sqlrs/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? TAB_SQLR.F0000001=-1 || exec('findtmp','#color') || 0 ?}


\del_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Usuwa parametr zestawienia.
::  OLD: \del_par/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy usunąć bieżący wiersz?'@)
|| _nr:=TAB_SQLK.NR;
   TAB_SQLK.del();
   TAB_SQLK.cntx_psh();
   {? TAB_SQLK.last()
   || _i:=2*TAB_SQLK.size()+1; {! |? TAB_SQLK.NR:=_i; TAB_SQLK.put(); _i-=1; TAB_SQLK.prev() !}
   ?};
   {? TAB_SQLK.last()
   || _i:=TAB_SQLK.size(); {! |? TAB_SQLK.NR:=_i; TAB_SQLK.put(); _i-=1; TAB_SQLK.last() & TAB_SQLK.NR>TAB_SQLK.size() !}
   ?};
   TAB_SQLK.cntx_pop();
   SqlVar.mpar:='.m';
   exec('save_par','#sql')
?}; 1


\dod_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [8.70]
:: OPIS: Metoda dodaje zapytanie zdefiniowane wydrukiem uniwersalnym do definiowalnych kartotek SKIDA
::  OLD: \dod_sql/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
exec('cr_tab','#sql');
_indk:=TAB_SQLK.ndx_tmp(,1,'FILENAME',,,'FILENAME',,,'NR',,);
TAB_SQLK.index(_indk);
exec('cr_win','#sql',1);
_zap:=exec('add_sql','#sql');
{? _zap
|| _col:=_a;
   _from:=_b;
   _where:=_c;
   {? +_col
   || _val:='select 0 LP, '+_col+'\nfrom '+_from;
      {? +_where || _val+='\nwhere '+_where ?};
      _val+=' order by 2';
      _prfx:='!'+(-BPMN.SYM_DOM)+'_';
      _name:=_prfx+TAB_SQL.FILENAME+'.m.sql';
      {? _f:=fopen(_name,'uw',1)
      || fwrite(_f,':!UTF-8');
         fwrite(_f,_val);
         fclose(_f)
      || FUN.info('Nie można otworzyć pliku: %1 do pisania.'@[_name])
      ?}
   || FUN.info('Brak argumentów klauzuli SELECT.\nPlik wynikowy nie zapisany.'@)
   ?}
?};
exec('save_sql','#sql')


\sql_kopiuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: Kopiowanie definicji zapytania
::  OLD: \sql_kopiuj/skid_sql.fml
::----------------------------------------------------------------------------------------------------------------------
_fname:=TAB_SQL.FILENAME;
_red1:=TAB_SQL.win_edit('?');

_red2:=TAB_SQL.mk_edit('Kopiowanie definicji zapytania SQL'@,0);
TAB_SQL.win_efld(_red2,,'NAZ',,,50,,,'Nazwa zapytania'@);
TAB_SQL.efld_opt(_red2,'mark=1',TAB_SQL,'NAZ');
TAB_SQL.win_efld(_red2,,'FILENAME',,,50,,,'Nazwa pliku'@);
TAB_SQL.efld_opt(_red2,'mark=1',TAB_SQL,'FILENAME');
TAB_SQL.win_ebtn(_red2,'text=%1, icon=xwin16.png:13, btn_label_align=center, panel=bottom, align=end'['&OK'@],"'key:F2'");
TAB_SQL.win_ebtn(_red2,'text=%1, icon=xwin16.png:14, btn_label_align=center, panel=bottom, align=end'['&Anuluj'@],'key:Esc');
TAB_SQL.win_edit(_red2);

{? TAB_SQL.edit("exec('chk_sql','#sql','a')")
||
   TAB_SQL.STD:='N';
   {? TAB_SQL.add
   || SqlVar.msql:='.m';
      _file:=__FileLayer.real_name('!'+(-BPMN.SYM_DOM)+'_'+_fname,'sql');
      _fileg:=__FileLayer.real_name('!'+(-BPMN.SYM_DOM)+'_'+_fname,'sqg');
      _file2:='!'+(-BPMN.SYM_DOM)+'_'+TAB_SQL.FILENAME;
      _ext:='.m';
      {? fexists(_file,1) || fcopy(_file,_file2+_ext+'.sql',1,1,1) ?};
      {? fexists(_fileg,1) || fcopy(_fileg,_file2+_ext+'.sqg',1,1,1) ?};
      TAB_SQLK.prefix(_fname,_fname);
      {? TAB_SQLK.first
      || SqlVar.mpar:='.m';
         {!
         |?
            TAB_SQLK.cntx_psh;
            TAB_SQLK.prefix;
            TAB_SQLK.FILENAME:=TAB_SQL.FILENAME;
            TAB_SQLK.add;
            TAB_SQLK.cntx_pop;
            TAB_SQLK.next
         !}
      ?};
      _ind:=TAB_SQLP.ndx_tmp(,1,'SQL',,,'SQL',,);
      TAB_SQLP.index(_ind);
      TAB_SQLP.prefix(_fname,_fname);
      {? TAB_SQLP.first
      || SqlVar.mwar:='.m';
         {!
         |?
            TAB_SQLP.cntx_psh;
            TAB_SQLP.prefix;
            TAB_SQLP.SQL:=TAB_SQL.FILENAME;
            TAB_SQLP.add;
            TAB_SQLP.cntx_pop;
            TAB_SQLP.next
         !}
      ?}
   ?};
   TAB_SQL.cntx_psh;
   exec('save_sql','#sql');
   exec('save_par','#sql');
   exec('save_war','#sql');
   TAB_SQL.cntx_pop
?};

TAB_SQL.win_edit(_red1)


\sql_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: tworzy tymczasowe okno select()
::   WE: _a - Akronim tabeli
::       _b - Czy select?
::       _c - Tytuł
::       _d - Czy dodać w menu funkcję POZYCJE
::       _e - Czy dodać w menu funkcję Rozwiń/Zwiń
::       _f - Czy wywołane przez funkcję ROZWIŃ/ZWIŃ, w konsekwencji czy pomijać kolumnę LP i menu Kolejność
::       _g - Parametry podsum dla wydruku
::UWAGI: Jeśli _grp_ver:=0 okienka grupowe nie będą użyte
::  OLD: \sql_sel/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_e:=0;
{? _>=1 || {? type_of(_a)<>2 || _a:='TAB_SQLR' ?} || _a:='TAB_SQLR' ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? _>=3 || {? type_of(_c)<>2 || _c:=TAB_SQL.NAZ ?} || _c:=TAB_SQL.NAZ ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
{? _>=5 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};
{? _>=6 || {? type_of(_f)<>1 || _f:=0 ?} || _f:=0 ?};
{? _>=7 || {? type_of(_g)<>2 || _g:='' ?} || _g:='' ?};

:: [MZ] czy okienka grupowe
_grp_ver:=1;
:: Czy są kolumny liczbowe z podsumowaniami
_kolumny:=exec('chk_ntxt','#sql');

_tab:=_a;
_msg:='';

_x_tab:=($(_tab))();
:: [MZ] podstawowe mk_sel
_sel_acr:=_x_tab.mk_sel(_c,,0,,,,,,,,,,,,,'on');

:: [MZ] ustalenie szerokości kolumn
exec('width1','#sql',_tab);

:: [MZ] okienko dla podsum - wersja z grp_sel
{? _grp_ver & _kolumny
||
:: [MZ] zakłada drugą tabelę dla podsum - tylko dla wersji z grp_sel
   _sum:='S'+_tab;
   {? var_pres(_sum)>=100 || obj_del(($(_sum))()) ?};

   _str_wdt:=0;
   _tab_def:=_sum+':=tab_tmp(';
   {! _i:=1.._x_tab.fld_num()
   |!
      _fld_acr:=_x_tab.fld_acr(_i);
      _fld_name:=_x_tab.fld_name(_i);
      _typ:=type_of(_x_tab[_i]);
      _fld_typ:=
         {? MS.fld_real(_tab,_fld_acr)
         ||
            _tab_def+=',\''+_fld_acr+'\',\'REAL\',\''+_fld_name+'\''
         ||
            {? _typ=1 || _str_wdt:=10; '+=X_len[_i]';'INTEGER'
            |? _typ=2 || _str_wdt:=10; '+=X_len[_i]';'STRING['+$X_len[_i]+']'
            |? _typ=4 || _str_wdt:=10; '+=X_len[_i]';'DATE'
            |? _typ=5 || _str_wdt:=10; '+=X_len[_i]';'TIME'
            ?}
         ?}
   !};
   {? _str_wdt
   ||
::    [MZ] zostały wyszukane początkowe kolumny, też zostaną dodane - ale tylko jeden raz
      _tab_def+=',\'STR\',\'STRING['+$_str_wdt+']\',';
      _str_wdt:=0
   ?};
   _tab_def+=')';
   ($_tab_def)();
   &_tab_def
||
   _sum:=_tab
?};

_s_tab:=($(_sum))();
:: [mz] mk_sel dla okienka podsum
{? _kolumny
|| _sum_acr:=_s_tab.mk_sel(,,0)
?};

:: [mz] dodajemy rekord z podsumami
{? _kolumny
|| exec('add_sum','#sql',_tab,_sum,_f,_grp_ver)
?};

:: [mz] dodanie opisu dla wolnego pola podsum
{? _grp_ver & _kolumny
||
   {? _s_tab.first()
   ||
      _s_tab.STR:='SUMA:';
      _s_tab.put()
   ?}
?};

:: [mz] ustalenie szerokości kolumn dla podsum + korekta szerokości
{? _kolumny
|| exec('width2','#sql',_tab,_sum,_f,1)
?};

:: [mz] win_fld - tworzenie okien wertowania
:: _str_wdt - szerokość kolumny z tekstem SUMA
_str_wdt:=-1;
_no_rec:=1;
_mk_sum:='
   _a.win_fld(_b,,\'STR\',,,_c,,,,1,,,1);
   {? _d || _a.win_act(_b,0,\'Rekord\',,,,\"\'0:0:0,220:220:220\'\") ?}' ;
_fld_from:={? _f || 2 || 1 ?};
_fld_to:=_x_tab.fld_num()-1;
TAB_SQLP.cntx_psh(); X_TABFLD.cntx_psh();
_ind:=TAB_SQLP.ndx_tmp(,1,'SQL',,,'NR_KOL',,);
TAB_SQLP.index(_ind);
_tf_ndx:=X_TABFLD.ndx_tmp(,,'ACR',,);
X_TABFLD.index(_tf_ndx);
{! _i:=_fld_from.._fld_to
|!
   _fld_acr:=_x_tab.fld_acr(_i);
   _fld_name:=_x_tab.fld_name(_i);

   _width:=X_len[_i];
   _prec:=exec('prec','#sql',_fld_acr);
   {? _fld_name='x_x' || _fld_name:='ROZ' ?};
   {? ~_x_tab.win_fld(_sel_acr,,_fld_acr,,,_width,_prec,,_fld_name,,,,1)
   || _msg+=_fld_name+', '
   ?};
   X_TABFLD.prefix(_fld_acr);
   {? X_TABFLD.first()
   ||
      TAB_SQLP.prefix(TAB_SQL.FILENAME,X_TABFLD.NR_KOL);
      {? TAB_SQLP.first() || _x_tab.fld_fml(_fld_acr,'BEFORE_DISPLAY',$TAB_SQLP.HID) ?}
   ?};

   {? _grp_ver & _kolumny
   ||
::    mk_sel dla podsum
      {? MS.fld_real(_tab,_fld_acr)
      ||
::       dla połączonych kolumn (typu 2)
         {? _str_wdt
         ||
            ($_mk_sum)(_s_tab,_sum_acr,_str_wdt,_no_rec);
            _no_rec:=0;
            _str_wdt:=0
         ?};
         _s_tab.win_fld(_sum_acr,,_fld_acr,,,_width,_prec,,_fld_name,1,,,1);
         X_TABFLD.prefix(_fld_acr);
         {? X_TABFLD.first()
         ||
            TAB_SQLP.prefix(TAB_SQL.FILENAME,X_TABFLD.NR_KOL);
            {? TAB_SQLP.first() || _s_tab.fld_fml(_fld_acr,'BEFORE_DISPLAY',$TAB_SQLP.HID) ?}
         ?}
      ||
         _str_wdt+=X_len[_i]+1
      ?}
   ?}
!};
:: gdy brak kolumn typu 1 - podsumy
{? _str_wdt>0 & _grp_ver || ($_mk_sum)(_s_tab,_sum_acr,_str_wdt,_no_rec) ?};
TAB_SQLP.ndx_drop(_ind);
X_TABFLD.ndx_drop(_tf_ndx);
TAB_SQLP.cntx_pop(); X_TABFLD.cntx_pop();
&_fld_from;
&_fld_to;
&_str_wdt;

:: [mz] win_act
{? _d || ($(_tab+'.win_act(\''+_sel_acr+'\',0,\'Formuła\',\'Pozycje\'@@,,\'Wyświetla okienko z podgrupami\'@,,'+
   '\"exec(\'drill_poz\',\'#sql\')\",1)'))() ?};
($(_tab+'.win_act(\''+_sel_acr+'\',0,\'Formuła\',\'Druku&j\'@@,,\'Wydruk zawartości bieżącego okienka\'@,,'+
   '\"exec(\'prn_tab\',\'#sql\',\''+_tab+'\',\''+_sum+'\','+$_f+',\''+_g+'\',\''+_c+'\')\",,,,,,,\'icon=print\')'))();

{? ~_f
||
   {? _grp_ver
   || ($(_tab+'.win_act(\''+_sel_acr+'\',,\'Kolejność\',,,,,'+
         '\"exec(\'f_sqlnrw\',\'#sql\',\''+_tab+'\','+$_grp_ver+')\",)'))()
   || ($(_tab+'.win_act(\''+_sel_acr+'\',,\'Kolejność\',,,,'+
         '\"exec(\'del_sum\',\'#sql\',\''+_tab+'\')\",'+
         '\"exec(\'f_sqlnrw\',\'#sql\',\''+_tab+'\','+$_grp_ver+');'+
         'exec(\'add_sum\',\'#sql\',\''+_tab+'\',\''+_sum+'\','+$_f+','+$_grp_ver+')\",)'))()
   ?}
?};
($(_tab+'.win_act(\''+_sel_acr+'\',,\'Szukaj\',,,,,,)'))();
($(_tab+'.win_act(\''+_sel_acr+'\',0,\'Wyświetl\',,,,\"exec(\'disp\',\'#sql\')\")'))();

{? +_msg || echo('Pominięte kolumny: %1 Przekroczona szerokość'@[_msg-2]) ?};

{? _b
||
   _mark:=0;
   {? _f
   ||
      _ref:=exec('mark','#sql',_tab);
      _mark:=_x_tab.seek(_ref)
   ?};
   _x_tab.win_sel(_sel_acr);
   _x_tab.hdr_sel(TAB_SQL.NAZ);
   _x_tab.select(,_mark,30)
?};
1


\del_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS:
::   WE:
::  OLD: \del_sum/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='TAB_SQLR' ?} || _a:='TAB_SQLR' ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
{? ~_b
||
   _tab:=_a;
   _x_tab:=($(_tab))();
   _x_tab.cntx_psh();
   _x_tab.clear();
   _ndx:=_x_tab.ndx_tmp(,,'X_X',,);
   _x_tab.index(_ndx);
   _x_tab.prefix('=');
   {? _x_tab.first()
   || _x_tab.del()
   ?};
   _x_tab.ndx_drop(_ndx);
   _x_tab.cntx_pop()
|| 1
?}


\f_sqlnrw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA, AFL, MZ [8.50]
:: OPIS: Przenumerowanie Lp po zmianie kolejności (w wyniku)
::   WE: _a - ACR tabeli
::       _b - Czy wersja z okienkami grupowymi
::  OLD: \f_sqlnr/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='TAB_SQLR' ?} || _a:='TAB_SQLR' ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
_x_tab:=($(_a))();
{| _x_tab
|!
   cntx_psh(); _v:=size()+1;
   {? first() || {! |? LP+=_v; put(); next() !} ?}; _v:=0;
   {? first()
   || {! |? {? F0000001<>-1 || LP:=(_v+=1) || LP:=size() ?}; put(); next() !}
   ?};
   cntx_pop();
:: [MZ] ustawianie indeksu wg LP tylko dla wersji bez okienek grupowych
   {? ~_b
   ||
      ndx_drop();
      _ind:=ndx_tmp(,1,'LP',,);
      index(_ind)
   ?}
|}


\add_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Tworzy tymczasowe okno select()
::   WE: _a - Akronim tabeli z wynikiem
::       _b - Akronim tabeli do której dodana zostanie suma
::       _c - Czy wywołane przez funkcję ROZWIŃ/ZWIŃ
::       _d - Czy wersja z okienkami grupowymi
::  OLD: \add_sum/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='TAB_SQLR' ?} || _a:='TAB_SQLR' ?};
{? _>=2 || {? type_of(_b)<>2 || _b:='TAB_SQLR' ?} || _b:='TAB_SQLR' ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};

_tab:=_a;
_x_tab:=($(_tab))();

_sum:=_b;
_s_tab:=($(_sum))();

_s_tab.cntx_psh();
_s_tab.clear();

:: [MZ] szuka ostatniego rekordu dla wersji bez grp_sel
{? ~_d
||
   _x_tab.cntx_psh();
   _x_tab.clear();
   _nr:=0;
   _ndx:=_x_tab.ndx_tmp(,,'LP',,);
   _x_tab.index(_ndx);
   {? _x_tab.last()
   || _nr:=_x_tab.LP+1
   ?};
   _x_tab.ndx_drop(_ndx);
  _x_tab.cntx_pop()
?};

_s_tab.blank();
:: [MZ] pętla wykonuje się wg ilości pól tabeli wynikowej
{! _i:=1.._x_tab.fld_num()-1
|!
   _fld_acr:=_x_tab.fld_acr(_i);
   _typ:=type_of(_x_tab[_i]);

   {? _typ=1
   ||
::    [MZ] tu sprawdzenie czy pole typu REAL
      {? MS.fld_real(_tab,_fld_acr)
      ||
         _prec:=exec('prec','#sql',_fld_acr);
         {? _c
         || _fld_sum:=sql('select sum(round(:_a.'+_fld_acr+', :_b)) as SUMA '+
               'from :_a where X_X<>\'  +\' and X_X<>\'* -\'',($_tab)(),_prec).SUMA
         || _fld_sum:=sql('select sum(round(:_a.'+_fld_acr+', :_b)) as SUMA from :_a',($_tab)(),_prec).SUMA
         ?};
         ($(_sum+'.'+_fld_acr+':=_a'))(_fld_sum)
      ?}
   |? _typ=2 & ~_d
   ||
::    [MZ] po funkcji Rozwiń/Zwiń sortowanie jest wg pola X_X
::    aby podsumy znalazły się na dole trzeba było dalekiego kodu ASCII
::    SPACJA sprzed %205 potrzebna jest dla znaku informującego czy dany rekord ma być wyświetlany
      _txt:={? _c || ' '+%205 || '=' ?};
      ($(_sum+'.'+_fld_acr+':=_a'))(_txt)
   |? _typ=4 & ~_d
   || ($(_sum+'.'+_fld_acr+':=date(0,0,0)'))()
   |? _typ=5 & ~_d
   || ($(_sum+'.'+_fld_acr+':=time(0,0,0)'))()
   ?}
!};
{? ~_d || _x_tab.LP:=_nr ?};
_s_tab.add();
_s_tab.cntx_pop()


\disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Akcja dla wyświetl: tworzy okienko redagowania dla bieżącego rekordu
::  OLD: \disp/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_win_red:=cur_tab.mk_edit('',0);
{! _i:=3..cur_tab.fld_num-1
|!
   cur_tab.win_efld(_win_red,,cur_tab.fld_acr(_i),,,,exec('prec','#sql',cur_tab.fld_acr(_i)))
!};
cur_tab.win_edit(_win_red);
cur_tab.display()


\mark
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Zwraca ref() rekordu do zaznaczenia w generowanym oknie
::   WE: _a - Akronim tabeli
::  OLD: \mark/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='TAB_SQLR' ?} || _a:='TAB_SQLR' ?};

_tab:=_a;
_x_tab:=($(_tab))();

_x_tab.cntx_psh();
_x_tab.clear();
_x_tab.first();
_ref:=_x_tab.ref();

_x_ndx:=_tab+'.ndx_tmp(\'\',,\'X_X\',,,';
{! _i:=1..obj_len(X_chk_fld)
|!
   _x_ndx+='\''+X_chk_fld[_i]+'\',,,'
!};
_x_ndx:=_x_ndx-1+')';
_ndx:=($_x_ndx)();
_x_tab.index(_ndx);

_x_pfx:=_tab+'.prefix(\'  +\',';
{! _i:=1..obj_len(X_chk_fld)
|!
   _val:=($('cur_tab.'+X_chk_fld[_i]))();
   _x_pfx+='\' '+_val+'\','
!};
_x_pfx:=_x_pfx-1+')';
($_x_pfx)();

{? _x_tab.first()
||
   _ref:=_x_tab.ref();
   _mark:=1
?};

_x_tab.ndx_drop(_ndx);
_x_tab.cntx_pop();
_ref


\prec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Dokładnośćć wg X_DRILL
::   WE: _a - Akronim pola do ustalenia dokładnośćci
::  OLD: \prec/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_prec:=2;
{? var_pres('X_DRILL')>=100
||
   X_DRILL.cntx_psh();
   X_DRILL.index(D_AA_NDX);
   X_DRILL.prefix(_a,_a);
   {? X_DRILL.first()
   || _prec:=X_DRILL.PREC
   || _prec:={? _a<>'LP' || 2 || 0 ?}
   ?};
   X_DRILL.cntx_pop()
?};
_prec


\width1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ, MKZ [8.70]
:: OPIS: Ustalenie szerokości kolumn - szuka najszerszych pól we wszystkich rekordach
::   WE: _a - Akronim tabeli wynikowej
::  OLD: \width1/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='TAB_SQLR' ?} || _a:='TAB_SQLR' ?};

:: [MZ] szerokość kolumn na podstawie wszystkich rekordów
{? var_pres('X_len')>=100 || obj_del(X_len) ?};
X_len:=obj_new(($(_a+'.fld_num'))());
{! _i:=1..obj_len(X_len) |! X_len[_i]:=0 !};
_x_tab:=($(_a))();
_x_tab.cntx_psh();
{? _x_tab.first()
||
   {!|?
      {! _i:=1..obj_len(X_len)
      |!
         _typ:=type_of(_x_tab[_i]);
         {? _typ=1
         ||
            _width:=(+form(_x_tab[_i],,exec('prec','#sql',_x_tab.fld_acr(_i))));
            {? _width>X_len[_i] || X_len[_i]:=_width ?};
::          szerokość pola z liczbą porządkową
            {? _x_tab.fld_acr(_i)='LP'
            || _size:=+($(_x_tab.size)); X_len[_i]:={? _size >= 3 || _size || 3 ?}
            ?}
         |? _typ=2 || {? X_len[_i]<+_x_tab[_i] || X_len[_i]:=+_x_tab[_i] ?}
         |? _typ=4 || X_len[_i]:=10
         |? _typ=5 || X_len[_i]:=5
         ?}
      !};
      _x_tab.next()
   !}
?};
_x_tab.cntx_pop()


\width2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ, MKZ [8.70]
:: OPIS: Ustalenie szerokości kolumn podsum + dodatkowa korekta szerokości
::   WE: _a - Akronim tabeli z wynikiem
::       _b - Akronim tabeli podsum
::       _c - Czy wywołane przez funkcję Rozwiń/Zwiń
::       _d - Czy zwężać jeśli suma szerokości kolumn > 125 (1 - tak, 0 - nie)
::  OLD: \width2/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='TAB_SQLR' ?} || _a:='TAB_SQLR' ?};
{? _>=2 || {? type_of(_b)<>2 || _b:='TAB_SQLR' ?} || _b:='TAB_SQLR' ?};
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};
{? _>=4 || {? type_of(_d)<>1 || _d:=1 ?} || _d:=1 ?};

_x_tab:=($(_a))();
_sum:=_b;
_s_tab:=($(_b))();

_x_tab.cntx_psh();

:: [MZ] szerokość kolumn dla typu REAL na podstawie rekordu z podsumami
_s_tab.cntx_psh();
{? _a=_b
||
:: [MZ] jeśli _tab i _sum to ta sama tabela szuka rekordu X_X='=' - podsumy
   _s_ndx:=_s_tab.ndx_tmp('',,'X_X',,,'X_X',,);
   _s_tab.index(_s_ndx);
   {?  _c || _s_tab.prefix(' '+%205,' '+%205) || _s_tab.prefix('=','=') ?}
?};
:: koryguje szerokość pola z podsuma, aby wyświetlać pełną wartość podsumy
{? _s_tab.first()
||
   {! _i:=1..obj_len(X_len)
   |!
      _fld_acr:=_x_tab.fld_acr(_i);
      {? MS.fld_real(_a,_fld_acr)
      ||
         _width:=(+form(($(_sum+'.'+_fld_acr))(),,exec('prec','#sql',_fld_acr)));
         {? _width>X_len[_i] || X_len[_i]:=_width ?}
      ?}
   !}
?};
_s_tab.cntx_pop();

:: [MZ] jeśli szerokość kolumny jest mniejsza od długości nazwy kolumny to szerokość kolumny = długość nazwy
:: dodatkowo pętla sumuje szerokość kolumn (po zmianie długości)
_sum_len:=0;
{! _i:=1..obj_len(X_len)
|!
   {? X_len[_i]<+_x_tab.fld_name(_i) || X_len[_i]:=+_x_tab.fld_name(_i) ?};
   _sum_len+=X_len[_i]
!};

:: [MZ] jeśli przekroczona została wartość 125 znaków wszystkie kolumny zostają zwężone do długości nazwy pola
:: [PJ] jeśli po zwężeniu zostaje miejsce do wykorzystania kolumny są nieco rozszerzane
{? _d=1
|| {? _sum_len>(125-obj_len(X_len))
   || _x_lenp:=obj_new(obj_len(X_len));
      {! _i:=1..obj_len(X_len)
      |! _x_lenp[_i]:=X_len[_i]
      !};

      _sum_zm:=0;

       {! _i:=1..obj_len(X_len)
      |!
         X_len[_i]:=+_x_tab.fld_name(_i);
         _sum_zm+=X_len[_i]
      !};

      {? _sum_zm < (125-obj_len(X_len))
      || _loop_m:=1;
           {! |?
              _i:=0;
              _loop:=1;

              {! |?
                 _i+=1;

                 {? X_len[_i] < _x_lenp[_i]
                 || X_len[_i]+=1
                 ?};

                 _sum_zm:=0;

                 {! _j:=1..obj_len(X_len)
               |! _sum_zm+=X_len[_j]
               !};

                 {? _sum_zm >= (125-obj_len(X_len)) || _loop_m:=0 ?};
                 {? _i=obj_len(X_len) || _loop:=0 ?};
                _loop & _loop_m
              !};
              _loop_m
           !}
      ?}
   ?}
?};

_x_tab.cntx_pop()


\drill_root
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: Dodaje główną gałąź drzewka
::  OLD: \drill_root/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
X_DRILL.blank();
X_DRILL.NAME:='Pola grupujące';
X_DRILL.POZIOM:=0;
X_DRILL.add();
_tree_grp:=X_DRILL.ref();

X_DRILL.blank();
X_DRILL.NAME:='Pola sumowane';
X_DRILL.POZIOM:=1000000000;
X_DRILL.add();
_tree_sum:=X_DRILL.ref();

X_DRILL.first()


\drill_down
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Ustala parametry grupowania na podstawie pól TAB_TMP
::  OLD: \drill_down/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:='TAB_SQLR';

($(_tab+'.cntx_psh()'))();

:: [MZ] tabela z polami wyniku zapytania
{? var_pres('X_TABFLD')>100 || obj_del(X_TABFLD) ?};
X_TABFLD:=tab_tmp(
    ,'ACR','STRING[8]','Akronim'@
    ,'NAME','STRING[50]','Nazwa'@
    ,'TYP','INTEGER','Typ'@
    ,'PREC','INTEGER','Dokladnosc'@
    ,'NR_KOL','INTEGER','Nr kolumny'@
);

_ile:=($(_tab+'.fld_num()'))();
{! _i:=1.._ile-1
|!
   X_TABFLD.ACR:=($(_tab+'.fld_acr('+$_i+')'))();
   X_TABFLD.NAME:=($(_tab+'.fld_name('+$_i+')'))();
   X_TABFLD.TYP:=type_of(($(_tab+'.'+X_TABFLD.ACR))());
   X_TABFLD.PREC:={? MS.fld_real(_tab,X_TABFLD.ACR)=1 || 2 || 0 ?};
   X_TABFLD.NR_KOL:=_i;
   {? X_TABFLD.ACR<>'LP' || X_TABFLD.add() ?}
!};
_tf_acr:=X_TABFLD.mk_sel('Pola tabeli'@,,0);
X_TABFLD.win_fld(_tf_acr,,'ACR',,,8);
X_TABFLD.win_fld(_tf_acr,,'NAME',,,30);
X_TABFLD.win_fld(_tf_acr,,'TYP',,,3);
X_TABFLD.win_act(_tf_acr,,'Formuła','Wybierz'@@,,,,"sel_exit()",1,,,,'W');
X_TABFLD.win_act(_tf_acr,,'Rekord',,,,"X_TABFLD.TYP=1");
X_TABFLD.win_sel(_tf_acr);
_tf_ndx:=X_TABFLD.ndx_tmp(,,'TYP',,1);
X_TABFLD.index(_tf_ndx);

exec('drill_ini','#sql');

X_DRILL.index(D_ED_NDX);
_ok:=1;
:: [PJ] jeśli podano nazwę pliku z domyślnymi parametrami grupowania to wczytać
{? TAB_SQL.DOM_GRUP<>''
|| exec('drill_read','#sql', TAB_SQL.DOM_GRUP)
?};
X_DRILL.select();
($(_tab+'.cntx_pop()'))();
exec('clear','#sql')


\drill_ini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: Okienko dla X_DRILL, indeksy
::   WE: [_a] - Miejsce wywołania 0-zapytanie (domyślne) / 1,2-definicje
::  OLD: \drill_ini/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
:: tabelka parametrów
{? var_pres('X_DRILL')>100 || obj_del(X_DRILL) ?};
X_DRILL:=tab_tmp(
    ,'TREE_REF','TREE_REF','TREE_REF'@
    ,'POZIOM','INTEGER','Poziom'@
    ,'POZ','INTEGER','Kolumna'@
    ,'ACR','STRING[8]','Akronim'@
    ,'NAME','STRING[20]','Nazwa'@
    ,'OPIS','STRING[50]','Opis'@
    ,'PREC','INTEGER','Dokładność'@
    ,'TYP','INTEGER','Typ'@
    ,'V_POZ','STRING[10]','Nr kolumny'@
    ,'V_PREC','STRING[10]','Dokładność'@
);
::indeksy dla tabeli X_DRILL
D_TP_NDX:=X_DRILL.ndx_tmp(,,'TYP',,,'POZIOM',,,'POZ',,);
D_TO_NDX:=X_DRILL.ndx_tmp(,,'TYP',,,'POZ',,);
D_PP_NDX:=X_DRILL.ndx_tmp(,,'POZIOM',,,'POZ',,);
D_AA_NDX:=X_DRILL.ndx_tmp(,,'ACR',,,'ACR',,);
D_ED_NDX:=X_DRILL.ndx_tmp(,,'TREE_REF',,,'POZIOM',,,'POZ',,);

:: root
exec('drill_root','#sql');

_ico_name:="
   {? X_DRILL.TREE_REF=0
   ||
      {? X_DRILL.tr_state()=1
      || 'xwin16.png:75'
      || 'xwin16.png:74'
      ?}
   ||
      {? X_DRILL.TYP=2
      || 'xwin16.png:76'
      || 'xwin16.png:46'
      ?}
   ?}
";

_katalog:="
   _wyn:=0;
   _tree_ref:=X_DRILL.ref();
   X_DRILL.cntx_psh();
   _ndx:=X_DRILL.ndx_tmp(,,'TREE_REF',,,'TREE_REF',,);
   X_DRILL.index(_ndx);
   X_DRILL.prefix(_tree_ref,_tree_ref);
   _wyn:=X_DRILL.first();
   X_DRILL.ndx_drop(_ndx);
   X_DRILL.cntx_pop();
   _wyn
";

_dd_acr:=X_DRILL.mk_sel('Parametry grupowania'@,'N',0,'__drill_down__',,,,1);

_ddrek_fml:='
   _act:=\'\';
   {? X_DRILL.TREE_REF=0 || _act+=\'uLPK\' ?};
   {? X_DRILL.TYP=2 || _act+=\'K\' ?};
   X_DRILL.actions(\''+_dd_acr+'\',_act,,1);
   \'\'
';

X_DRILL.win_fld(_dd_acr,,'NAME',,,25,,1);
X_DRILL.win_fld(_dd_acr,,'V_POZ',,,10,,1);
X_DRILL.win_fld(_dd_acr,,'V_PREC',,,10,,1);
{? _a=0
||
   X_DRILL.win_act(_dd_acr,0,'Formuła','Wykonaj'@@,,'Uruchamianie zapytania'@,,"exec('drill_go','#sql')",1,,,,'W')
?};
X_DRILL.win_act(_dd_acr,1,'Formuła','Dołącz'@@,,'Dołączanie parametru grupowania'@,,"exec('drill_add','#sql')",1,,,,'D');
X_DRILL.win_act(_dd_acr,0,'Formuła','Dołącz'@@,,'Dołączanie parametru grupowania'@,,"exec('drill_add','#sql')",0,,,,'D');
X_DRILL.win_act(_dd_acr,,'Usuń',,,'Usuwanie parametru grupowania'@,,"exec('drill_upd','#sql')");
X_DRILL.win_act(_dd_acr,0,'Formuła','W &lewo/do góry'@@,,'Przestawienie poziomu grupowania'@,
   ,"exec('drill_mv','#sql',1)",,,,,'L');
X_DRILL.win_act(_dd_acr,0,'Formuła','W &prawo/w dół'@@,,'Przestawienie poziomu grupowania'@,
   ,"exec('drill_mv','#sql',0)",,,,,'P');
X_DRILL.win_act(_dd_acr,0,'Formuła','Do&kładność'@@,,'Ustawienie poziomu dokładności'@,,"exec('drill_prec','#sql')",,,,,'K');
{? _a=0
||
   X_DRILL.win_act(_dd_acr,1,'Formuła','Wczy&taj'@@,,'Wczytanie z pliku parametrów grupowania'@,
      ,"exec('drill_read','#sql')",,,,,'T');
   X_DRILL.win_act(_dd_acr,0,'Formuła','Wczy&taj'@@,,'Wczytanie z pliku parametrów grupowania'@,
      ,"exec('drill_read','#sql')",,,,,'T');
   X_DRILL.win_act(_dd_acr,0,'Formuła','Zapi&sz jako'@@,,'Zapisywanie parametrów grupowania do pliku'@,
      ,"exec('drill_write','#sql')",,,,,'S')
|? _a=1
||
   X_DRILL.win_act(_dd_acr,0,'Formuła','Zapi&sz i zamknij'@@,,'Zapisywanie parametrów grupowania'@,
      ,"{? exec('drill_write','#sql',1) || exec('drill_open','#sql'); sel_exit ?}",,,,,'S')
|? _a=2
||
   X_DRILL.win_act(_dd_acr,0,'Formuła','Zapi&sz i zamknij'@@,,'Zapisywanie parametrów grupowania'@,
      ,"exec('drill_write','#sql',2); exec('drill_open','#sql'); sel_exit",,,,,'S')
?};
X_DRILL.win_act(_dd_acr,0,'Formuła','Czyść'@@,,'Funkcja usuwa wszystkie zdefiniowane poziomy grupowania'@,,"
      {? FUN.ask('Wyczyścić warunki grupowania?'@) || X_DRILL.clear();X_DRILL.erase();exec('drill_root','#sql') ?}
   ",,,,,'C');
X_DRILL.win_act(_dd_acr,,'Rekord',,,,$_ddrek_fml);
X_DRILL.win_fml(_dd_acr,,'NAME',,'ICON_BEFORE',_ico_name);
X_DRILL.tr_fml(_dd_acr,,"{? _a || 1 || 0 ?}",_katalog);
X_DRILL.win_sel(_dd_acr);
''


\drill_go
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Uruchomienie drill
::  OLD: \drill_go/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('chk_tekst','#sql') & exec('chk_lev','#sql')
||
   X_DRILL.cntx_psh();
   X_DRILL.index(D_TP_NDX);
   X_DRILL.prefix(2,1);
   {? X_DRILL.last()
   ||
      exec('drill_one','#sql',X_DRILL.POZIOM)
   ?};
   X_DRILL.cntx_pop()
?}


\chk_lev
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Sprawdza ciągłość poziomów
::  OLD: \chk_lev/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0; _p:=1;
X_DRILL.cntx_psh();
X_DRILL.index(D_TP_NDX);
X_DRILL.prefix(2);
{? X_DRILL.first()
|| {? X_DRILL.POZIOM=1
   || _ok:=1;
      {!
      |?
         {? _ok
         || {? _p<>X_DRILL.POZIOM || _p+=1 ?};
            _ok:={? _p=X_DRILL.POZIOM || 1 || 0 ?}
         ?};
         X_DRILL.next() & _ok
      !}
   ?}
?};
X_DRILL.cntx_pop();
{? ~_ok & _p=0
|| FUN.info('W definicji kryteriów grupowania brak poziomu %1.\n'
            'Należy uzupełnić kryteria lub przesunąć poziomy.'@[$_p],'Uwaga - niepełne dane'@)
|? ~_ok & _p>0
||  FUN.info('W definicji kryteriów grupowania poziom %1 \n'
            'występuje wielokrotnie, należy usunąć\n lub przesunąć poziomy.'@[$_p], 'Uwaga - niejednoznaczne dane'@)
?};
_ok


\chk_tekst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Sprawdza czy zdefiniowano choć jeden poziom grupowania (wiersz innego typu od REAL)
::  OLD: \chk_tekst/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
X_DRILL.cntx_psh();
X_DRILL.index(D_TP_NDX);
X_DRILL.prefix(2);
{? X_DRILL.size()=0
||
   FUN.info('Nieprawidłowe parametry grupowania.\nSystem wymaga co najmniej jednego parametru tekstowego.'@);
   _wy:=0
||
   _wy:=1
?};
X_DRILL.cntx_pop();
_wy


\drill_read
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ, PJ [8.70]
:: OPIS: Wczytuje zapisane w pliku *.sqg parametry grupowania. Założono, że w *.pth jest zdefiniowana ścieżka do *.sqg
::   WE: _a - Nazwa zestawu, opcjonalny, jeśli podano to od razu wczytuje ten zestaw
::  OLD: \drill_read/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
:: sprawdzenie czy można zapisać zestaw parametrów (pola nie są ustalane dynamicznie)
{? exec('czy_param','#sql') || return(0) ?};

exec('drill_open','#sql');
{? Z_DRILL.size()=0
|| {? _>0 & _a<>''
   || FUN.error('Brak zapamiętanych zestawów z parametrami dla tego zapytania.\n'
       'Nie można wczytać podanego zestawu...'@);
      return(0)
   ?}
?};
{? var_pres('X_FILES')>100 || obj_del(X_FILES) ?};
X_FILES:=sql('select ZESTAW, ZESTAW as OLD from :_a where TYP=1 order by ZESTAW',Z_DRILL);
_acr:=X_FILES.mk_sel('Wybierz parametry grupowania'@,,0);
X_FILES.win_fld(_acr,,'ZESTAW',,,60,,0);
X_FILES.win_act(_acr,,'Formuła','Wybierz'@@,,'Wczytuje bieżący zestaw parametrów'@,,"sel_exit",1,,,,'W');
X_FILES.win_act(_acr,,'Formuła','Usuń'@@,,'Usunięcie bieżącego zestawu parametrów'@,,
   "{? FUN.ask('Usunąć zestaw parametrów grupowania?'@) || exec('drill_del','#sql',X_FILES.ZESTAW,1) ?}",,,,,'U');
X_FILES.win_act(_acr,,'Popraw',,,'Zmiana nazwy zestawu parametrów'@,,"exec('chg_name','#sql')");
X_FILES.win_sel(_acr);

{? (_>0 & _a<>'')
|| _name:=_a;
   _dalej:=1
|? X_FILES.select()
|| _name:=X_FILES.ZESTAW;
   _dalej:=1
|| _dalej:=0
?};

{? _dalej
|| exec('drill_gen','#sql',_name)
?};
1


\drill_gen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: Generuje drzewko X_DRILL u
::   WE: _a - Nazwa zestawu
::  OLD: \drill_gen/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
X_DRILL.clear();
X_DRILL.erase();
exec('drill_root','#sql');
Z_DRILL.prefix(2,_a,_a);
_fld_count:=7;
_fld:=obj_new(_fld_count);
_sep:='|';
{? Z_DRILL.first()
||
   X_TABFLD.cntx_psh();
   _tf_acr:=X_TABFLD.ndx_tmp(,,'ACR',,);
   X_TABFLD.index(_tf_acr);

   {!
   |?
      _wline:=_line:=Z_DRILL.PARAMETR;
      {! _i:=1.._fld_count
      |! _poz:=_line*_sep;
         _fld[_i]:=(_poz-1)+_line;
         _line:=_poz-_line
      !};

      X_DRILL.POZIOM:=#_fld[1];
      X_DRILL.POZ:=#_fld[2];
      X_DRILL.ACR:=_fld[3];
      _pomin:=1;
      X_TABFLD.first();
      {!
      |?
          {? X_TABFLD.ACR=X_DRILL.ACR
          || _pomin:=0
          ?};
          _pomin & X_TABFLD.next()
      !};
      X_DRILL.NAME:=_fld[4];
      X_DRILL.OPIS:=_fld[5];
      X_DRILL.PREC:=#_fld[6];
      X_DRILL.TYP:=#_fld[7];

      X_DRILL.V_POZ:=$X_DRILL.POZ;
      X_DRILL.V_PREC:={? X_DRILL.TYP=2 || '' || $X_DRILL.PREC ?};

::    ustawia tree_ref
      _tree_ref:=null;
      _poziom:=X_DRILL.POZIOM;
      X_DRILL.cntx_psh();
      X_DRILL.index(D_TP_NDX);
      X_DRILL.prefix(X_DRILL.TYP);
      {? X_DRILL.last()
     ||
         {? X_DRILL.POZIOM=_poziom
         || _tree_ref:=X_DRILL.TREE_REF
         || _tree_ref:=X_DRILL.ref()
         ?}
      ||
         X_DRILL.prefix(0,{? X_DRILL.TYP=2 || 0 || _poziom ?});
         {? X_DRILL.first()
         || _tree_ref:=X_DRILL.ref()
         ?}
      ?};
      X_DRILL.cntx_pop();
      X_DRILL.TREE_REF:=_tree_ref;

      {? _pomin=0
      || X_DRILL.add()
      || FUN.info('Podczas wczytywania domyślnych parametrów\n'
            'grupowania wystąpił błąd:\n'
            'pole %1 nie występuje obecnie\n'
            'w zapytaniu SQL i zostanie pominięte.'@[X_DRILL.ACR], 'Uwaga - nieaktualne parametry grupowania'@)
      ?};
      Z_DRILL.next()
   !};

   X_TABFLD.ndx_drop(_tf_acr);
   X_TABFLD.cntx_pop();

   X_DRILL.first();
   X_DRILL.hdr_sel();
   X_DRILL.hdr_sel(' [' + _a + ']')
?};
obj_del(_fld)


\chg_name
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Zmienia nazwę zestawu z parametrami grupowania
::  OLD: \chg_name/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? X_FILES.ZESTAW=X_FILES.OLD
|| _ok:=0
|| _ok:=1
?};
{? _ok
|| Z_DRILL.prefix(1,X_FILES.ZESTAW,X_FILES.ZESTAW);
   {? Z_DRILL.first
   || FUN.info('Zestaw parametrów o nazwie:\n%1'
         '\njuż istnieje! Należy podać inną nazwę.'@[X_FILES.ZESTAW], 'Uwaga'@);
      X_FILES.ZESTAW:=X_FILES.OLD;
      X_FILES.put;
      _ok:=0
   ?}
?};
{? _ok
|| Z_DRILL.prefix;
   {? Z_DRILL.find_key(1,X_FILES.OLD)
   || Z_DRILL.ZESTAW:=X_FILES.ZESTAW;
      Z_DRILL.put
   ?};
   Z_DRILL.prefix(2,X_FILES.OLD,X_FILES.OLD);
   {? Z_DRILL.first
   || {! |?
          Z_DRILL.cntx_psh;
         Z_DRILL.prefix;
         Z_DRILL.ZESTAW:=X_FILES.ZESTAW;
         Z_DRILL.put;
         Z_DRILL.cntx_pop;
         Z_DRILL.first
      !}
   ?};
   SqlVar.msqg:='.m';
   exec('drill_save','#sql');
   X_FILES.OLD:=X_FILES.ZESTAW;
   X_FILES.put
?};
Z_DRILL.prefix;
_ok


\drill_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Tworzy tabelę dla drilldown
::   WE: [_a] - tryb pracy: [0]-dla jednego zapytania 1-dla wielu zapytań
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=0 ?};
{? var_pres('Z_DRILL')>100
|| {? Z_W_NDX <> '' || Z_DRILL.ndx_drop(Z_W_NDX) ?};
   {? Z_T_NDX <> '' || Z_DRILL.ndx_drop(Z_T_NDX) ?}
?};
VAR_DEL.delete('Z_DRILL');
_tab:='tab_tmp(3,'+
      '\'TYP\',\'INTEGER\',\'Typ wiersza\'@,'+
      {? _a=1
      || '\'FILENAME\',\'STRING[25]\',\'Plik zapytania\'@,'
      || ''
      ?}+
      '\'ZESTAW\',\'STRING[50]\',\'Zestaw parametrów\'@,'+
      '\'PARAMETR\',\'STRING[250]\',\'Definicja parametru\'@,'+
      '\'W\',\'INTEGER\',\'Nr wiersza\'@,'+
      '\'UIDREF\',\'STRING[48]\',\'ID Rekordu\')';
Z_DRILL:=($_tab)();
Z_W_NDX:={? _a=0
         || Z_DRILL.ndx_tmp(,1,'W',,0)
         || Z_DRILL.ndx_tmp(,1,'FILENAME',,0,'W',,0)
         ?};
Z_T_NDX:={? _a=0
         || Z_DRILL.ndx_tmp(,1,'TYP',,0,'ZESTAW',,0,'ZESTAW',,0)
         || Z_DRILL.ndx_tmp(,1,'FILENAME',,0,'W',,0)
         ?};
Z_DRILL.index(Z_T_NDX);
Z_DRILL


\drill_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Uzupełnia informacje o drilldown do tabeli tymczasowej (Z_DRILL) dla danego zapytania SQL
::   WE: [_a] - tryb pracy: [0]-dla jednego zapytania 1-dla wielu zapytań
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')<=0 || _a:=0 ?};
_prfx:='!'+(-BPMN.SYM_DOM)+'_'+TAB_SQL.FILENAME;
SqlVar.msqg:={? __FileLayer.layer(_prfx,'sqg')='m' || '.m' || '' ?};
_file:=fopen(_prfx+SqlVar.ext('sqg')+'.sqg','ur',1);
_zestaw:='';
_wiersz:=0;
{? _file
|| {!
   |? _line:=fread(_file);
      _dalej:=_line <> '\n';
      {? _dalej & 7+_line<>':!UTF-8'
      || _wiersz+=1;
         {? 1+_line='['
         || _line:=(_line + (+_line - 1));
            {? _line+1=']' || _line:=(+_line - 1) + _line ?};
            Z_DRILL.TYP:=1;
            Z_DRILL.ZESTAW:=_line;
            Z_DRILL.PARAMETR:='';
            Z_DRILL.W:=_wiersz;
            _zestaw:=_line
         || Z_DRILL.TYP:=2;
            Z_DRILL.ZESTAW:=_zestaw;
            Z_DRILL.PARAMETR:=_line;
            Z_DRILL.W:=_wiersz
         ?};
         {? _a=1 & var_press('FILENAME',Z_DRILL)>0
         || Z_DRILL.FILENAME:=TAB_SQL.FILENAME
         ?};
         Z_DRILL.UIDREF:=$SYSLOG.tm_stamp();
         Z_DRILL.add()
      ?};
      _dalej
   !};
   fclose(_file);
   _wy:=1
|| _wy:=0
?};
_wy


\drill_open
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Wczytuje do bazy tymczasowej parametry grupowania
::  OLD: \drill_open/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
exec('drill_tab','#sql');
exec('drill_sql','#sql')


\drill_write
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: zapisuje nowy zestaw parametrów grupowania w bazie X_DRILL i pliku *.sqg
::   WE: _a - Jeśli jest _a i jest równe 1 to dodaje także nazwę zestawu do X_FILES
::       jeśli _a = 2 to zapis pod starą nazwą bez pytania
::  OLD: \drill_write/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
:: sprawdzenie czy można zapisać zestaw parametrów (pola nie są ustalane dynamicznie
{? exec('czy_param','#sql') || return(0) ?};
{? var_pres('_a')<>type_of(0) || _a:=0 ?};

_zapis:=0; _ok:=0;
{? _=0 | _a=1
|| undefine();

   X_DRILL.cntx_psh();
   X_DRILL.index(D_TP_NDX);
   X_DRILL.prefix(2);
   _nazwa:='';
   {? X_DRILL.first()
   || {!
      |?
         _nazwa+=X_DRILL.ACR;
         {? X_DRILL.next()
         || _dalej:=1;
            _nazwa+=','
         || _dalej:=0
         ?};
         _dalej
      !}
   || _nazwa:='Parametry z dnia: '+form(date,,2)
   ?};
   X_DRILL.cntx_pop();

   define('FNAME',_nazwa,'Nazwa zestawu: '@,'Nazwa zestawu, w którym będą zapisane parametry grupowania'@,50,50);
   def_btn('text='+'&OK'@+',icon=xwin16.png:13',"'key:F2'");
   def_btn('text='+'&Anuluj'@+',icon=xwin16.png:14',"'key:Esc'");
   {? def_edit("DEFINE.FNAME<>''",'Zapis parametrów grupowania'@)
   || _zestaw:=DEFINE.FNAME;
      _zapis:=1
   || _zapis:=0
    ?}
|| _zestaw:=X_FILES.ZESTAW;
   _zapis:=1
?};

{? _zapis=1
|| exec('drill_open','#sql');
   Z_DRILL.prefix(1,_zestaw,_zestaw);
   {? Z_DRILL.first()
   || {? _>0 & _a=2
      || _ok:=1
      || _ok:=FUN.ask('Zestaw: %1 już istnieje.\nZastąpić?'@[_zestaw])
      ?};
      {? _ok || exec('drill_del','#sql',_zestaw,0) ?}
   || _ok:=1
   ?};
   Z_DRILL.prefix();
   {? _ok
   || _sep:='|';

      Z_DRILL.cntx_psh();
      Z_DRILL.index(Z_W_NDX);
      Z_DRILL.prefix();
      {? Z_DRILL.last()
      || _wiersz:=Z_DRILL.W+1
      || _wiersz:=1
      ?};
      Z_DRILL.cntx_pop();

      Z_DRILL.TYP:=1;
      Z_DRILL.ZESTAW:=_zestaw;
      Z_DRILL.PARAMETR:='';
      Z_DRILL.W:=_wiersz;
      Z_DRILL.add();

      {? _>0 & _a=1
      || X_FILES.ZESTAW:=_zestaw;
         X_FILES.OLD:=_zestaw;
         X_FILES.add()
      ?};

      X_DRILL.cntx_psh();
      X_DRILL.index(D_PP_NDX);
      X_DRILL.prefix();
      {? X_DRILL.first()
      || {!
         |?
            {? X_DRILL.POZ<>0
            ||
               _line:=$X_DRILL.POZIOM;
               _line+=_sep;
               _line+=$X_DRILL.POZ;
               _line+=_sep;
               _line+=X_DRILL.ACR;
               _line+=_sep;
               _line+=X_DRILL.NAME;
               _line+=_sep;
               _line+=X_DRILL.OPIS;
               _line+=_sep;
               _line+=$X_DRILL.PREC;
               _line+=_sep;
               _line+=$X_DRILL.TYP;
               _line+=_sep;
               Z_DRILL.TYP:=2;
               Z_DRILL.ZESTAW:=_zestaw;
               Z_DRILL.PARAMETR:=_line;
               _wiersz+=1;
               Z_DRILL.W:=_wiersz;
               Z_DRILL.add()
            ?};
            X_DRILL.next()
         !};
         SqlVar.msqg:='.m';
         exec('drill_save','#sql')
      ?};
      X_DRILL.cntx_pop()
   ?}
?};
{? _=0 | _a=1  || undefine() ?};
X_DRILL.first();
_ok


\drill_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Dodaje kolejną pozycję parametrów grupowania
::  OLD: \drill_add/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_loop:=1;
_poziom:=0;
_poz:=0;
_tree_ref:=X_DRILL.ref();
_typ:={? X_DRILL.TREE_REF<>0 || X_DRILL.TYP || {? X_DRILL.POZIOM=0 || 2 || 1 ?} ?};
X_TABFLD.index(X_TABFLD.ndx_tmp(,,'TYP',,));
X_TABFLD.prefix(_typ);
X_TABFLD.first();
{!
|?
   win_disp();
   {? X_TABFLD.select(,1)
   ||
::    [PJ] Sprawdzenie czy pola już nie dodano do parametrów
      X_DRILL.cntx_psh();
      X_DRILL.index(D_AA_NDX);
      X_DRILL.prefix(X_TABFLD.ACR,X_TABFLD.ACR);
      {? X_DRILL.first()
      ||
         FUN.info('Wskazane pole (%1) dodano już do kryteriów grupowania.'@[X_TABFLD.ACR]);
         _wy:=0
      ||
         _wy:=1
      ?};
      X_DRILL.cntx_pop();

      {? _wy=1
      ||
::       [MZ] ustawia nr kolumny - X_DRILL.POZ
         X_DRILL.cntx_psh();
         X_DRILL.index(D_TO_NDX);

::       ustala ostatni nr kolumny dla TYP=2
         X_DRILL.prefix(2);
         {? X_DRILL.last()
         || _poz:=X_DRILL.POZ
         ?};

::       ustala TREE_REF wg typu
         X_DRILL.prefix(X_TABFLD.TYP);
         {? X_TABFLD.TYP<>1
         ||
            {? X_DRILL.last()
            || _poziom:=X_DRILL.POZIOM; _tree_ref:=X_DRILL.ref()
            ?};

::          [MZ] przenumerowanie pola POZ (kolumna) dla wszystkich rekordów, po dodaniu parametru typu 2
            X_DRILL.cntx_psh();
            X_DRILL.clear();
            X_new_poz:=_poz+1;
            X_DRILL.for_each("
                  {? X_DRILL.POZ>=X_new_poz
                  ||
                     X_DRILL.POZ+=1;
                     X_DRILL.V_POZ:=$X_DRILL.POZ;
                     X_DRILL.put()
                  ?}
               ",0);
            &X_new_poz;
            X_DRILL.cntx_pop()
         ||
            {? X_DRILL.last()
            ||
               {? X_DRILL.POZ>0 || _poz:=X_DRILL.POZ ?};
               _tree_ref:=X_DRILL.TREE_REF
            ?}
         ?};
         X_DRILL.cntx_pop();

::       dodaje X_DRILL
         X_DRILL.TREE_REF:=_tree_ref;
         X_DRILL.POZ:=_poz+1;
::       [MZ] dla pozycji do sumowania POZIOM=1000000000
         X_DRILL.POZIOM:={? X_TABFLD.TYP<>1 || _poziom+1 || 1000000000 ?};
         X_DRILL.V_POZ:=$X_DRILL.POZ;
::       [MZ] reszta już prawie normalnie
         X_DRILL.ACR:=X_TABFLD.ACR;
         X_DRILL.NAME:=X_TABFLD.NAME;
         {? X_TABFLD.TYP<>1
         || X_DRILL.OPIS:=X_DRILL.POZIOM*'  '+' > '+X_TABFLD.NAME
         || X_DRILL.OPIS:=10*' '+'SUMA='+X_TABFLD.NAME
         ?};
         X_DRILL.TYP:=X_TABFLD.TYP;
         X_DRILL.PREC:=X_TABFLD.PREC;
         X_DRILL.V_PREC:={? X_DRILL.TYP=2 || '' || $X_DRILL.PREC ?};
         X_DRILL.add()
      ?}
   ||
      _loop:=0
   ?};
   _loop
!};
''


\drill_mv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Przesuwa w Lewo/górę w Prawo/dół - ustalenie kolejki i poziomów drill_down
::   WE: _a = 1 - w Lewo/górę, = 2 - w Prawo/dół
::  OLD: \drill_mv/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
_typ:=X_DRILL.TYP;
_cur_ref:=X_DRILL.ref();
_new_ref:=_cur_ref;
_cur_poz:=X_DRILL.POZIOM;
_new_poz:=_cur_poz;
_cur_kol:=X_DRILL.POZ;
_new_kol:=_cur_kol;

X_DRILL.cntx_psh();
X_DRILL.index(D_TP_NDX);
X_DRILL.prefix(_typ);
{? _a=1
||
   {? X_DRILL.prev()
   ||
      _new_poz:=X_DRILL.POZIOM;
      {? X_DRILL.POZIOM=_cur_poz
      ||
         _new_kol:=X_DRILL.POZ;
         X_DRILL.POZ:=_cur_kol;
         X_DRILL.V_POZ:=$X_DRILL.POZ;
         X_DRILL.put()
      ?}
   ||
::    pozycja początkowa
      _ok:=0
   ?}
||
   {? X_DRILL.next()
   ||
::    jeśli pierwsza kolumna nie jest jedyna na danym poziomie można przesunąć niżej
      {? _cur_kol=1
      ||
         X_DRILL.cntx_psh();
         X_DRILL.index(D_TP_NDX);
         X_DRILL.prefix(_typ,_cur_poz);
         {? X_DRILL.size()=1
         || _ok:=0
         ?};
         X_DRILL.cntx_pop()
      ?};
      {? _ok=1
      ||
         _new_poz:=X_DRILL.POZIOM;
         {? X_DRILL.POZIOM=_cur_poz
         ||
            _new_kol:=X_DRILL.POZ;
            X_DRILL.POZ:=_cur_kol;
            X_DRILL.V_POZ:=$X_DRILL.POZ;
            X_DRILL.put()
         ?}
      ?}
   ||
::    pozycja ostatnia
::    jeśli nie jest jedyna na danym poziomie można zamienić na poziom niżej
      X_DRILL.cntx_psh();
      X_DRILL.index(D_TP_NDX);
      X_DRILL.prefix(_typ,_cur_poz);
      {? X_DRILL.size()>1 & X_DRILL.TYP<>1
      || _new_poz:=_cur_poz+1
      || _ok:=0
      ?};
      X_DRILL.cntx_pop()
   ?}
?};
X_DRILL.cntx_pop();

{? _ok=1
||
   X_DRILL.POZIOM:=_new_poz;
   X_DRILL.POZ:=_new_kol;
   X_DRILL.V_POZ:=$X_DRILL.POZ;
   X_DRILL.put();
   exec('drill_upd','#sql')
?};
''


\drill_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: Aktualizacja poziomów drzewka X_DRILL
::  OLD: \drill_upd/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
X_DRILL.cntx_psh();
X_DRILL.index(D_TP_NDX);
X_DRILL.prefix(0,0);
{? X_DRILL.first()
||
   _ref:=X_DRILL.ref();
   _tree:=X_DRILL.TREE_REF;
   _poziom:=X_DRILL.POZIOM;
   _iter:=0;
   X_DRILL.prefix(2);
   {? X_DRILL.first()
   ||
::    zerowanie TREE_REF, utworzenie tablicy poziomów
      _tpoz:=obj_new(X_DRILL.size());
      _poz_new:=1;
      _poz_poprz:=1;
      _iter:=0;
      {!
      |?
         _iter+=1;
         {? X_DRILL.POZIOM>_poz_poprz || _poz_new+=1 ?};
         _poz_poprz:=X_DRILL.POZIOM;
         _tpoz[_iter]:=_poz_new;
         X_DRILL.TREE_REF:=0;
         X_DRILL.put();
         X_DRILL.next()
      !};
::    nowe poziomy, kolumny
      _iter:=0;
      {? X_DRILL.first()
      ||
         {!
         |?
            _iter+=1;
            X_DRILL.POZIOM:=_tpoz[_iter];
            X_DRILL.POZ:=_iter;
            X_DRILL.V_POZ:=$X_DRILL.POZ;
            X_DRILL.put();
            X_DRILL.next()
         !}
      ?};
      obj_del(_tpoz);
::    nowe relacje
      {? X_DRILL.first()
      ||
         {!
         |?
            {? X_DRILL.POZIOM<>_poziom
            || X_DRILL.TREE_REF:=_ref
            || X_DRILL.TREE_REF:=_tree
            ?};
            X_DRILL.put();

            _ref:=X_DRILL.ref();
            _tree:=X_DRILL.TREE_REF;
            _poziom:=X_DRILL.POZIOM;

            X_DRILL.next()
         !}
      ?}
   ?};
:: kolumny dla pól z podsumami
   X_DRILL.cntx_psh();
   X_DRILL.prefix(1);
   {? X_DRILL.first()
   ||
      {!
      |?
         _iter+=1;
         X_DRILL.POZ:=_iter;
         X_DRILL.V_POZ:=$X_DRILL.POZ;
         X_DRILL.put();
         X_DRILL.next()
      !}
   ?};
   X_DRILL.cntx_pop()
?};
X_DRILL.cntx_pop();
''


\drill_prec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Edycja precyzji wyświetlania pól typu REAL
::  OLD: \drill_prec/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? X_DRILL.TYP=1
||
   _acr_edi:=X_DRILL.mk_edit('Parametry grupowania'@,0);
   X_DRILL.win_efld(_acr_edi,,'PREC',,,4);
   X_DRILL.win_ebtn(_acr_edi,'text=%1, icon=xwin16.png:13, btn_label_align=center, panel=bottom, align=end'['&OK'@],"'key:F2'");
   X_DRILL.win_ebtn(_acr_edi,'text=%1, icon=xwin16.png:14, btn_label_align=center, panel=bottom, align=end'['&Anuluj'@],'key:Esc');
   X_DRILL.win_edit(_acr_edi);
   {? X_DRILL.edit("
      {? X_DRILL.PREC>=0 & X_DRILL.PREC<=6
      || 1
      || FUN.info('Nieprawidłowa wartość parametru\n (dopuszczalny zakres: 0 - 6)'@); 0
      ?}")
   ||
      X_DRILL.V_PREC:=$X_DRILL.PREC;
      X_DRILL.put()
   ?}
||
   FUN.info('Ustalanie dokładności ma znaczenie tylko dla pól liczbowych.'@)
?};
1


\drill_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Funkcja POZYCJE - otwiera kolejny POZIOM wg X_DRILL
::  OLD: \drill_poz/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_cur_pm:=X_DRILL.POZIOM;
X_DRILL.cntx_psh();
X_DRILL.index(D_TP_NDX);
X_DRILL.prefix(2,_cur_pm+1);
X_DRILL.last();
exec('drill_one','#sql',X_DRILL.POZIOM);
X_DRILL.cntx_pop()


\drill_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Tworzy kolejne zapytanie wg kolejki drill_down
::   WE: _a - Poziom operacji
::  OLD: \drill_one/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
X_DRILL.cntx_psh();
X_DRILL.index(D_TP_NDX);
:: [MZ] sprawdza czy są kolejne poziomy
X_DRILL.prefix(2,_a+1);
_czy_poz:=_czy_roz:=X_DRILL.first();
X_DRILL.prefix(2);

:: [MZ] utworzenie zapytania
_select:='select 0 as LP';
_select+=',\''+{? _czy_poz || '+  ' || '   ' ?}+'\' as x_x,';
_where:=' where 1=1';
_group:=' group by 0,\''+{? _czy_poz || '+  ' || '   ' ?}+'\',';
_opis:='';

{? X_DRILL.first()
||
:: [MZ] dodane są 2 kolumny więcej niż w param. grup. (LP, X_X)
   _i:=2;
   _go:=1;
   {!
   |? X_DRILL.POZIOM<=_a & _go
   |!
      _i+=1;
      {? X_DRILL.NAME * ' ' | X_DRILL.NAME * '.'> 0
      || _name:='"'+X_DRILL.NAME+'"'
      || _name:=X_DRILL.NAME
      ?};
      _select+=' :_a.'+X_DRILL.ACR+' as ' + _name + ',';
      {? X_DRILL.POZIOM<_a
      ||
         _val:=($('cur_tab.'+cur_tab.fld_acr(_i)))();
         _val:=gsub(_val,'\'','\'\'');
         _where+=' and :_a.'+X_DRILL.ACR+'=\''+_val+'\''
      ?};
      _group+=' :_a.'+X_DRILL.ACR+',';
      _opis+=' '+X_DRILL.NAME+',';
      _go:=X_DRILL.next()
   !}
?};

:: [MZ] sum wg pozycji do grupowania
X_DRILL.index(D_TO_NDX);
X_DRILL.prefix(1);
{? X_DRILL.first()
||
   {!
   |?
      {? X_DRILL.NAME*' '>0
      || _name:='"' + X_DRILL.NAME + '"'
      || _name:=X_DRILL.NAME
     ?};
      _select+=' sum(:_a.'+X_DRILL.ACR+') as '+_name+',';
      X_DRILL.next()
   !}
?};

X_DRILL.cntx_pop();
::

:: [MZ] wykonanie zapytania
_qq:=(_select-1)+' from :_a '+_where+(_group-1);

_tab:='X_DR'+$_a;
{? var_pres(_tab)>100 || obj_del(($_tab)()) ?};
($(_tab+':=sql(_a,TAB_SQLR)'))(_qq);

:: [MZ] numeracja LP
{? ($(_tab+'.first'))()
||
   _lp:=0;
   {!
   |?
      _lp+=1;
      ($(_tab+'.LP:=_a'))(_lp);
      ($(_tab+'.put'))();
      ($(_tab+'.next'))()
   !}
?};

:: mk_sel
exec('sql_sel','#sql',_tab,1,'Grupa: '+(_opis-1),_czy_poz,_czy_roz);
{? var_pres(_tab)>100 || obj_del(($_tab)()) ?};
1


\prn_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [8.70]
:: OPIS: Drukowanie tabeli  - wydruk uniwersalny skid_uni.rpm [MKZ]
::   WE: _a - Tabela
::       _b - Akronim tabeli podsum
::       _c - Czy wywołane przez funkcję Rozwiń/Zwiń
::       _d - Param podsum
::       _e - Tytuł
::  OLD: \prn_tab/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a; _x_tab:=($(_a))(); _sql:='select ';
{? var_pres('X_PRN')>100 || obj_del(X_PRN) ?};

X_PRN:=sql('select * from :_a '+
   'where X_X<>\'=\' and X_X<>\' '+%205+'\' and X_X<>\'  +\' and substr(X_X,1,1)<>\'*\' order by LP',($_tab)());

_ktore:='';

{! _i:=1.._x_tab.fld_num()
|!
    _acr:=_x_tab.fld_acr(_i);
    {? _acr='X_X'
    || _ktore:=$_i+';'
    || _ff:=_x_tab.fld_fml(_acr,'*BEFORE_DISPLAY');
       {? _ff<>""
       ||
          _bd:=(_ff)();
          {? type_of(_bd)=1 & _bd=0 || _ktore:=$_i+';' ?}
       ?}
    ?}
!};

exec('width1','#sql',_tab);
exec('width2','#sql',_tab,_b,_c, 0);
{? var_pres('UNI_M', @.CLASS)> 0 || obj_del(UNI_M) ?};
exec('start','uniwers');

UNI_M.n_init();
UNI_M.DD_OGR.erase();
{? var_pres('UNIMARIO')>=1 || UNIMARIO.erase() ?};
UNIMARIO.clear;

_ile:=($(_tab+'.fld_num()'))();
{! _i:=1.._ile-1
|!
   UNIMARIO.ACR:=($(_tab+'.fld_acr('+$_i+')'))();
   UNIMARIO.NAZ:=($(_tab+'.fld_name('+$_i+')'))();
   UNIMARIO.DLO:=X_len[_i];
   UNIMARIO.NUM:=_i+1;
   UNIMARIO.DOKL:=exec('prec','#sql',UNIMARIO.ACR);
   UNIMARIO.add()
!};

PARAM_W.TAB_POL:='1;2;'+$_ktore +';'+$_x_tab.fld_num+';';
PARAM_W.TAB_TMP:=_tab;
PARAM_W.TAB_SUM:=_d;
t_sumk:='';
PARAM_W.TAB_TYT:=TAB_SQL.NAZ +' (' + _e + ')';
exec('rep_exec','#b_report','','wsp_uni',,,,,,,,'W');
VAR_DEL.delete('t_sumk')


\hid_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: Sprawdzenie czy pole _a ma być ukryte zgodnie z definicją wartości zapytania definiowalnego
::   WE: _a - Akronim pola
::   WY: 0 - ukryte
::       1 - nie ukryte
::  OLD: \hid_fld/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;

{! _ii:=1..TAB_SQLR.fld_num()
|!
   TAB_SQLP.cntx_psh();
   _indp:=TAB_SQLP.ndx_tmp(,1,'SQL',,,'NR_KOL',,);
   {? TAB_SQLR.fld_acr(_ii)=_a
   ||
      TAB_SQLP.index(_indp);
      TAB_SQLP.prefix(TAB_SQL.FILENAME,_ii);
      _hid:=TAB_SQLP.first();
      _wyn:=_hid=0 | (TAB_SQLP.HID='' | ($TAB_SQLP.HID)())
   ?};
   TAB_SQLP.ndx_drop(_indp);
   TAB_SQLP.cntx_pop()
!};

_wyn


\be_domgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formuła "Przed redagowaniem" pola DOM_GRUP zmiennej PAR_SQL
::  OLD: \be_domgr/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~(-TAB_SQL.DRILL)='T'
|| 1
|| 0
?}


\f3_domgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formuła na "F3" pola DOM_GRUP zmiennej PAR_SQL
::  OLD: \f3_domgr/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_sql','#sql')
||
   {? ~exec('czy_param','#sql')
   || exec('drill_open','#sql');
      {? var_pres('X_FILES')>100 || obj_del(X_FILES) ?};
      X_FILES:=sql('select ZESTAW, ZESTAW as OLD from :_a where TYP=1 order by ZESTAW',Z_DRILL);
      _acr:=X_FILES.mk_sel('Wybierz parametry grupowania'@,,0);
      X_FILES.win_fld(_acr,,'ZESTAW',,,60,,0);

      X_FILES.win_act(_acr,0,'Formuła','Wybierz'@@,,'Ustaw zestaw jako domyślny'@,,"sel_exit",1,,,,'W');
      X_FILES.win_act(_acr,1,'Formuła','Dołącz'@@,,'Definiowanie nowego zestawu kryteriów grupowania'@,,
         "exec('drill_ed','#sql',1)",,,,,'D');
      X_FILES.win_act(_acr,0,'Formuła','Dołącz'@@,,'Definiowanie nowego zestawu kryteriów grupowania'@,,
         "exec('drill_ed','#sql',1)",,,,,'D');
      X_FILES.win_act(_acr,0,'Formuła','Usuń'@@,,'Usunięcie bieżącego zestawu'@,,
         "{? FUN.ask('Usunąć zestaw parametrów grupowania?'@) || exec('drill_del','#sql',X_FILES.ZESTAW,1) ?}",,,,,'U');
      X_FILES.win_act(_acr,0,'Formuła','Edytuj zestaw'@@,,'Modyfikacja parametrów grupowania'@,,
         "exec('drill_ed','#sql',2,X_FILES.ZESTAW)",,,,,'E');
      X_FILES.win_act(_acr,0,'Popraw',,,'Zmiana nazwy zestawu'@,,"exec('chg_name','#sql')");
      X_FILES.win_sel(_acr);

      {? X_FILES.select
      || PAR_SQL.DOM_GRUP:=TAB_SQL.DOM_GRUP:=X_FILES.ZESTAW
      || ~~
      ?}
   ?}
|| FUN.info('Brak pliku z zapytaniem SQL!\n'
     'Nie można zdefiniować parametrów grupowania\n'
     'przed utworzeniem zapytania SQL.'@)
?}


\ae_domgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formuła "Po redagowaniu" pola DOM_GRUP zmiennej PAR_SQL
::  OLD: \ae_domgr/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
:: sprawdzenie czy plik istnieje
exec('drill_open','#sql');
{? PAR_SQL.DOM_GRUP=''
|| TAB_SQL.DOM_GRUP:=PAR_SQL.DOM_GRUP; _wy:=1
|| Z_DRILL.index(Z_T_NDX);
    {? Z_DRILL.find_key(1,PAR_SQL.DOM_GRUP,PAR_SQL.DOM_GRUP)
    || _wy:=1
    || _wy:=0
    ?};
   {? _wy
   || TAB_SQL.DOM_GRUP:=PAR_SQL.DOM_GRUP
   || FUN.info('Brak zestawu o nazwie:\n%1.\n'
         'Należy wskazać poprawny zestaw lub pozostawić niewypełnione pole.'@[PAR_SQL.DOM_GRUP])
   ?}
?};
_wy


\clear
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formuła usuwa zmienne obiektowe powołane do zapytań grupujących
::  OLD: \clear/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
X_DRILL.ndx_drop();
{? var_pres('Z_W_NDX') > 0 & Z_W_NDX <> '' || Z_DRILL.ndx_drop(Z_W_NDX) ?};
{? var_pres('Z_T_NDX') > 0 & Z_T_NDX <> '' || Z_DRILL.ndx_drop(Z_T_NDX) ?};
VAR_DEL.delete('X_DRILL', 'X_FILES', 'X_len', 'X_TABFLD', 'X_PRN', 'D_TP_NDX', 'D_TO_NDX',
               'D_PP_NDX', 'D_AA_NDX', 'D_ED_NDX', 'Z_W_NDX', 'Z_T_NDX', 'Z_DRILL')


\chk_ntxt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Sprawdza czy zdefiniowano choć jedną kolumnę do sumowań (wiersz innego typu niz tekstowy)
::   WY: 1 - tak są kolumny do sumowań
::       0 - nie, nie ma takich kolumn
::  OLD: \chk_ntxt/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
X_DRILL.cntx_psh;
X_DRILL.clear;
_ile:=X_DRILL.size;
X_DRILL.index(D_TP_NDX);
X_DRILL.prefix(2);
{? X_DRILL.size=_ile
|| _wy:=0
|| _wy:=1
?};
X_DRILL.cntx_pop;
_wy


\drill_save
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Zapis parametrów grupowania z bazy tymczasowej Z_DRILL do pliku tekstowego
::  OLD: \drill_save/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_fn:='!'+(-BPMN.SYM_DOM)+'_'+TAB_SQL.FILENAME;
_fn2:=_fn+SqlVar.ext('sqg')+'.sqg';
Z_DRILL.cntx_psh();
Z_DRILL.index(Z_W_NDX);
{? var_press('FILENAME',Z_DRILL)>0
|| Z_DRILL.prefix(TAB_SQL.FILENAME,)
|| Z_DRILL.prefix()
?};
{? Z_DRILL.first()
|| _file:=fopen(_fn2,'uw',1);
   {? _file
   || {!
      |? _line:={? Z_DRILL.TYP=1 || '['+Z_DRILL.ZESTAW+']' || Z_DRILL.PARAMETR ?};
         fwrite(_file,_line);
         Z_DRILL.next()
      !};
      fclose(_file)
   ?}
|? fexists(_fn2,1)
|| ferase(_fn2,1)
?};
Z_DRILL.cntx_pop();
{? SqlVar.msqg<>'' & __FileLayer.del_same(_fn,'sqg',1)
|| SqlVar.msqg:=''
?}


\drill_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Usuwa podany zestaw parametrów grupowania z tabeli Z_DRILL i zapisuje od nowa wszystkie zestawy z Z_DRILL
::       do pliku tekstowego
::   WE: _a - Nazwa zestawu do usunięcia
::       _b - Jeśli _b = 1 to usuwa z X_FILES
::  OLD: \drill_del/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
:: usunięcie rekordu z nagłówkiem zestawu
Z_DRILL.prefix();
{? Z_DRILL.find_key(1,_a,_a)
|| Z_DRILL.del()
?};
:: usunięcie rekordu z parametrami zestawu
Z_DRILL.prefix(2,_a,_a);
{? Z_DRILL.first
|| {! |?
      Z_DRILL.del;
      Z_DRILL.first
   !}
?};
{? _b=1
|| X_FILES.del
?};
Z_DRILL.prefix();
SqlVar.msqg:='.m';
exec('drill_save','#sql')


\drill_ed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formuła do edycji zdefiniowanego zestawu parametrów z poziomu definicji zapytania sql lub definiowania
::       nowego zestawu
::   WE: _a - Tryb pracy
::          1 - dodawanie,
::          2 - edycja
::       _b - Nazwa zestawu do edycji
::  OLD: \drill_ed/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('czy_sql','#sql') || return(0) ?};
_prfx:='!'+(-BPMN.SYM_DOM)+'_';
_fname:=_prfx+TAB_SQL.FILENAME;
{? _=2 & _a=2 ||_name:=_b ?};
_sql:='';
_file:=fopen(__FileLayer.real_name(_fname,'sql'),'ur',1);
{? _file
|| _dalej:=1;
    {! |?
        _line:=fread(_file);
        {? _line <> '\n'
            || {? 7+_line<>':!UTF-8' || _sql+=_line + ' ' ?}
            || _dalej:=0
            ?};
        _dalej
   !};
   fclose(_file);
   _ok:=1
|| _ok:=0
?};

:: wielkość liter na duże
_sql:=~(-_sql);

:: funkcja wycina znak z podanego łańcucha _a o numerze _b
mid:="1+(_a + (+_a - _b + 1))";

:: wycinanie fragmentów między /* i */
_loop:=1; _pocz:=''; _kon:='';
{! |?
   _poz:=_sql * '/*';
   _pozk:=_sql * '*/';
   {? _poz > 0 & _pozk > 0
   || _pocz:=(_poz - 1) + _sql;
      _kon:=_sql + ((+_sql) - (_pozk+1));
      _sql:=_pocz + ' ' + _kon;
      _loop:=1
   || _loop:=0
   ?};
   _loop
!};
&_loop; &_pozk; &_pocz; &_kon;

:: analiza zapytania sql i zastąpienie warunku warunkiem pustym bez sortowania, jeśli zapytanie
:: nie ma warunków, pusty jest dodawany, klauzule group by i having są zachowywane
_poz:=_sql * 'GROUP BY';
{? _poz=0
|| _poz:=_sql * 'WHERE';
   _ord:=_sql * 'ORDER BY';
   {? _poz <> 0
   || _sql:=(_poz-1)+_sql
   || {? _ord <> 0 || _sql:=(_ord-1)+_sql ?}
   ?};
   &_ord;
   _sql:=_sql + ' WHERE 0=1'
|| _poz1:=_sql * 'WHERE';
   {? _poz1 <> 0
   || _sql1:=_sql;
      _sql:=(_poz1-1) + _sql;
      _sql1:=_sql1 + (+_sql1 - _poz + 1);
      _sql:=_sql + ' WHERE 0=1 ' + _sql1;
      &_sql1
   ?};
   &_poz1
?};

:: wycina znaki @ z zapytania
_psql:='';
{! _i:=1..(+_sql)
|! _char:=mid(_sql,_i);
    {? _char <> '@' || _psql+=_char ?}
!};
_sql:=_psql;

_msg:=no_msg(1);
TAB_SQLR:=psql(_sql);
no_msg(_msg);
&_msg;

:: jeśli błąd to wykonuje oryginalne, nieuproszczone zapytanie
:: ponieważ istnieje możliwość, że błąd jest wynikiem zastosowanych uproszczeń

{? sql_err(1) <> ''
|| FUN.info('Podczas testowego uruchamiania zapytania SQL wystąpił błąd:\n\n %1.\n\n'
      'Jeśli zapytanie SQL w pliku tekstowym jest poprawne, błąd spowodowany jest\n'
      'przez mechanizm testowego trybu uruchamiania. W takim przypadku można zdefiniować\n'
      'i zapisać parametry grupowania podczas uruchamiania właściwego zapytania SQL'@[sql_err(1)]);
   return(0)
?};

_tab:='TAB_SQLR';

($(_tab+'.cntx_psh()'))();

:: [MZ] tabela z polami wyniku zapytania
{? var_pres('X_TABFLD')>100 || obj_del(X_TABFLD) ?};
X_TABFLD:=tab_tmp(
    ,'ACR','STRING[8]','Akronim'@
    ,'NAME','STRING[50]','Nazwa'@
    ,'TYP','INTEGER','Typ'@
    ,'PREC','INTEGER','Dokladnosc'@
    ,'NR_KOL','INTEGER','Nr kolumny'@
);

_ile:=($(_tab+'.fld_num()'))();
{! _i:=1.._ile-1
|!
   X_TABFLD.ACR:=($(_tab+'.fld_acr('+$_i+')'))();
   X_TABFLD.NAME:=($(_tab+'.fld_name('+$_i+')'))();
   X_TABFLD.TYP:=type_of(($(_tab+'.'+X_TABFLD.ACR))());
   X_TABFLD.PREC:={? MS.fld_real(_tab,X_TABFLD.ACR)=1 || 2 || 0 ?};
   X_TABFLD.NR_KOL:=_i;
   {? X_TABFLD.ACR<>'LP' || X_TABFLD.add() ?}
!};
_tf_acr:=X_TABFLD.mk_sel('Pola tabeli'@,,0);
X_TABFLD.win_fld(_tf_acr,,'ACR',,,8);
X_TABFLD.win_fld(_tf_acr,,'NAME',,,30);
X_TABFLD.win_fld(_tf_acr,,'TYP',,,3);
X_TABFLD.win_act(_tf_acr,,'Formuła','Wybierz'@@,,,,"sel_exit()",1,,,,'W');
X_TABFLD.win_act(_tf_acr,,'Rekord',,,,"X_TABFLD.TYP=1");
X_TABFLD.win_sel(_tf_acr);
_tf_ndx:=X_TABFLD.ndx_tmp(,,'TYP',,1);
X_TABFLD.index(_tf_ndx);

exec('drill_ini','#sql',_a);
X_DRILL.index(D_ED_NDX);
:: wczytanie zestawu do edycji
{? _a=2
|| exec('drill_gen','#sql',_name)
?};
:: edytor X_DRILL na ekran
X_DRILL.select();
($(_tab+'.cntx_pop()'))();
X_DRILL.ndx_drop();
VAR_DEL.delete('X_DRILL', 'X_len', 'X_TABFLD', 'X_PRN','TAB_SQLR')


\czy_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formuła sprawdza czy jest plik z zapytaniem SQL i czy nie jest pusty
::   WY: 1 - jest plik i nie jest pusty
::       0 - nie ma pliku lub jest pusty
::  OLD: \czy_sql/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
_prfx:='!'+(-BPMN.SYM_DOM)+'_';
_fname:=_prfx+TAB_SQL.FILENAME;
_sql:='';
_file:=fopen(__FileLayer.real_name(_fname,'sql'),'ur',1);
{? _file
|| _dalej:=1;
    {! |?
        _line:=fread(_file);
            {? 7+_line<>':!UTF-8'
            || {? _line <> '\n' || _sql+=_line + ' ' || _dalej:=0 ?}
            ?};
        _dalej
   !};
   fclose(_file);
   {? |_sql='' || _ok:=0 || _ok:=1 ?}
|| _ok:=0
?};
_ok


\czy_param
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formuła sprawdza czy w zapytaniu sql są parametry między SELECT a FROM
::   WY: 1 - są parametry
::       0 - nie ma parametrów
::  OLD: \czy_param/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
_prfx:='!'+(-BPMN.SYM_DOM)+'_';
_fname:=_prfx+TAB_SQL.FILENAME;
_sql:='';
_file:=fopen(__FileLayer.real_name(_fname,'sql'),'ur',1);
{? _file
|| _dalej:=1;
    {! |?
        _line:=fread(_file);
        {? _line <> '\n'
            || {? 7+_line<>':!UTF-8' || _sql+=_line + ' ' ?}
            || _dalej:=0
            ?};
        _dalej
   !};
   fclose(_file);
   _ok:=1
|| _ok:=0
?};

{? _ok
||
:: wycinanie fragmentów między /* i */
   _loop:=1; _pocz:=''; _kon:='';
   {! |?
      _poz:=_sql * '/*';
      _pozk:=_sql * '*/';
      {? _poz > 0 & _pozk > 0
      || _pocz:=(_poz - 1) + _sql;
         _kon:=_sql + ((+_sql) - (_pozk+1));
         _sql:=_pocz + ' ' + _kon;
         _loop:=1
      || _loop:=0
      ?};
      _loop
   !};
   &_loop; &_pozk; &_pocz; &_kon;

    _poz:=_sql * 'select'; _poz+=5;
   _len:=+_sql;
   _sql:=_sql+(_len - _poz);
   _poz:=_sql * 'from'; _poz-=1;
   _sql:=_poz+_sql;

   _find:=0;
   _tab:=obj_new(10);
   _tab[1]:='_a'; _tab[2]:='_b';
   _tab[3]:='_c'; _tab[4]:='_d';
   _tab[5]:='_e'; _tab[6]:='_f';
   _tab[7]:='_g'; _tab[8]:='_h';
   _tab[9]:='_i'; _tab[10]:='_j';
   _alf:='aąbcćdeęfghijklłmnńoópqrsśtuwyzźżAĄBCĆDEĘFGHIJKlŁMNŃOÓPQRSŚTUWYZŹŻ0123456789';
   {! _i:=1..10 |?
      _poz:=_sql*_tab[_i];
      {? _poz>0
      || _znak1:=exec('mid','#string',_sql,(_poz-1),1);
         {? _alf*_znak1=0 || _find+=1 ?};
         _znak2:=exec('mid','#string',_sql,(_poz+2),1);
         {? _alf*_znak2=0 || _find+=1 ?};
         {? _find=2 || _find:=1 || _find:=0 ?}
      ?}
   !};
   {? _find
   || FUN.error('Dla zapytań z polami definiowanymi dynamicznie\n'
         'poprzez parametry zapytania SQL nie można\n'
         'zapisać i wczytać zestawów parametrów grupowania.'@);
      1
   || 0
   ?}
|| 0
?}


\zwykle
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [8.70]
:: OPIS: Formuła wyświetla zwykły wynik zapytania bez grupowania
::  OLD: \zwykle/skid_sqq.fml
::----------------------------------------------------------------------------------------------------------------------
{! |?
   _v:=TAB_SQLR.select(0,1,_v);
   ($('TAB_SQLR.win_sel(wsqlr'+$v_i+')'))();
   _v
!}


\err_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2006]
:: OPIS: Komunikat błędu lub przerwania zapytania SQL
::  OLD: \err_sql/lib_prod.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.error('Błąd lub przerwanie zapytania SQL.'@);
~~


\err_psql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2010]
:: OPIS: Komunikat błędu lub przerwania zapytania SQL
::  OLD: \err_psql/lib_prod.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.error('Brak uprawnień, błąd lub przerwanie zapytania SQL.'@);
~~


\str_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: zamienia string na postac sql potrzebna do zapytania we frazie like
::   WE: _a - string wejsciowy
::   WY: string wyjsciowy
::  OLD: \str_sql/skid_app.fml
::----------------------------------------------------------------------------------------------------------------------
{? +_a || _a:=STR.gsub(_a,'?','_') ?}; {? _a+1='_' || {! |? _a:=_a-1; _a+1='_' !} ?};
_a+='%'


\par_str
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Formuła dla parametru typu STRING
::   WE: _a - wartość
::----------------------------------------------------------------------------------------------------------------------
{? _a='' || _a:='*' ?};
gsub(gsub(_a,'?','_'),'*','%')


\legenda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodaje opis do legendy
::----------------------------------------------------------------------------------------------------------------------
_wyn:=($TAB_SQL.RSQL)(1);
{? type_of(_wyn)=type_of('') & _wyn<>'' & _wyn*':'=0
|| _wyn
|| 'Podsumowanie'
?}


\trim
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.02]
:: OPIS: Usuwa końcowe znaki końca linii
::   WE: _a - tekst
::----------------------------------------------------------------------------------------------------------------------
{!
|? {? _a+1='\n'
   || _a:=_a-1;
      1
   ?}
!};
_a


\act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [20.42]
:: OPIS: Wyłącza akcję
::----------------------------------------------------------------------------------------------------------------------
_sel:=TAB_SQL.win_sel('?');
{? TAB_SQL.STD='T'
||
   _wyn:=TAB_SQL.actions_grayed(_sel,'pRW:')
||
   TAB_SQL.actions_grayed(_sel)
?}

:Sign Version 2.0 jowisz:1045 2023/10/18 11:55:04 46c4d880b81e86e9d621f6952e7dd7d4f02ed71d2e21fce998929ee2ecc1c9618927bba18c7e4cb66ee21cacd10ee7ded753c13d059bf0acc50b4577b775127f9734528a48c69cb3c96f2fd20707fb0ce8c3d51fb3de77685263245f869920e61e89837b04dab15db51974d468641c3275f7d1a049ec6f88f73e1faa8f996fe0
