:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: Nowy1.fml
:: Utworzony: 30.10.2019
:: Autor: AWI
:: Systemy:
::======================================================================================================================
:: Zawartość: Zewnętrzne identyfikatory rekordów
::======================================================================================================================


\add_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Dodaje zewnętrzny identyfikator
::   WE: _a - kod definicji
::       _b - rekord ($TAB.ref() lub TAB.uidref())
::       _c - identyfikator rekordu
::       [_d] - opis rekordu
::       [_e] - nowy identyfikator rekordu
::   WY: null/SYNC_ID.ref
::----------------------------------------------------------------------------------------------------------------------
:: przykład użycia
:: exec('add_id','#sync_id','PORTAL_M','material00000001','id_portalu_mat01')
:: exec('add_id','#sync_id','PORTAL_M','material00000002','id_portalu_mat01')
:: exec('add_id','#sync_id','PORTAL_KH',':2019/01/09 13:50:08 U#0GlN9FAk$kontr   00000001','id_portalu_kontr01')
:: exec('add_id','#sync_id','PORTAL_KH',':2019/01/09 13:50:08 U#0GlN9FAk$kontr   00000001','id_portalu_kontr02')
{? var_pres('_d')<>type_of('') || _d:='' ?};
{? var_pres('_e')<>type_of('') || _e:='' ?};
{? (_par:='_a'; var_pres('_a')<>type_of(''))
      |
   (_par:='_b'; var_pres('_b')<>type_of(''))
      |
   (_par:='_c'; var_pres('_c')<>type_of(''))
      |
   (_par:='_d'; var_pres('_d')<>type_of(''))
      |
   (_par:='_e'; var_pres('_e')<>type_of(''))
||
   FUN.info('Błędny typ parametru %1.'@[_par]);
   return(null())
?};
{? (_par:='_a'; _war:='niepusty ciąg znaków o długości do 30 znaków'; _a='' | +_a>30)
      |
   (_par:='_b'; _war:='$TAB.ref() lub TAB.uidref()'; _b='' | type_of(ref_tab(_b))=type_of(~~))
      |
   (_par:='_c'; _war:='niepusty ciąg znaków o długości do 255 znaków'; _c='' | +_c>255)
      |
   (_par:='_d'; _war:='ciąg znaków o maksymalnej długości 100 znaków'; +_d>100)
||
   FUN.info('Błędna wartość parametru.\nParametr %1 może przyjmować wartości: %2.'@[_par,_war]);
   return(null())
?};
_kod:=_a;
_rek:=_b;
_id:=_new_id:=_c;
{? _e<>'' || _new_id:=_e ?};
_opis:=_d;
{? exec('FindAndGet','#table',ref_tab(_rek),_rek,,,null())=null()
||
   FUN.info('Brak rekordu w systemie: \'%1\'.'@[_rek]);
   return(null())
?};

_result:=null();

_tabela:='';
_maska:='';
_maskaid:='';
SYNC_IDD.cntx_psh();
SYNC_IDD.index('KOD');
SYNC_IDD.prefix(_kod,);
{? ~SYNC_IDD.first()
||
   FUN.info('Błędny kod definicji: %1.'@[_kod])

|? SYNC_IDD.TABELA<>2-!ref_tab(_rek)
||
   FUN.info('Wysyłany rekord [%1] nie jest związany z tabelą %2 [%3].'@[_rek,SYNC_IDD.TABELA,_kod])

||
   _system:=SYNC_IDD.SYSTEM;
   _tabela:=SYNC_IDD.TABELA;
   _firma:={? SYNC_IDD.UZUFIRMA='T' || exec('FindAndGet','#table',FIRMA,REF.FIRMA,,"SYMBOL",'') || '' ?};
   _maska:=ref_name(_rek);
   SYNC_IDM.cntx_psh();
   SYNC_IDM.index('KOD');
   SYNC_IDM.prefix(_kod,_firma,_tabela,_maska);
   {? SYNC_IDM.first()
   ||
      _maskaid:=SYNC_IDM.MASKA_ID
   ||
      SYNC_IDM.blank();
      SYNC_IDM.FIRMA:=_firma;
      SYNC_IDM.TABELA:=_tabela;
      SYNC_IDM.MASKA:=_maska;
      SYNC_IDM.SYSTEM:=_system;
      SYNC_IDM.KOD:=_kod;
      {!
      |?
         _maskaid:=exec('maska_id','#sync_id');
         SYNC_IDM.cntx_psh();
         SYNC_IDM.index('MASKA_ID');
         SYNC_IDM.prefix(_maskaid,);
         _add:=~SYNC_IDM.first();
         SYNC_IDM.cntx_pop();
         {? _add
         ||
            SYNC_IDM.MASKA_ID:=_maskaid;
            SYNC_IDM.add()=0
         ||
            0
         ?}
      !}
   ?};
   SYNC_IDM.cntx_pop();
   {? _maskaid<>''
   ||
      SYNC_ID.cntx_psh();
      SYNC_ID.use(_maskaid);
      SYNC_ID.cntx_psh();
      SYNC_ID.index('UNIK');
      SYNC_ID.prefix(_rek,_opis,_id,);
      {? SYNC_ID.first()
      ||
         {? _id<>_new_id
         ||
            SYNC_ID.prefix();
            SYNC_ID.ID:=_new_id;
            SYNC_ID.put()
         ?};
         _result:=SYNC_ID.ref()
      ||
         SYNC_ID.prefix();
         SYNC_ID.SYSTEM:=_system;
         SYNC_ID.KOD:=_kod;
         SYNC_ID.REK:=_rek;
         SYNC_ID.OPIS:=_opis;
         SYNC_ID.ID:=_id;
         {? SYNC_ID.add()
         ||
            _result:=SYNC_ID.ref()
         ?}
      ?};
      SYNC_ID.cntx_pop();
      SYNC_ID.cntx_pop()
   ?}
?};
SYNC_IDD.cntx_pop();

_result


\get_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Zwraca identyfikator odpowiadający rekordowi _b
::   WE:  _a  [STRING] - kod definicji
::        _b  [STRING] - rekord ($TAB.ref() lub TAB.uidref())
::       [_c] [STRING] - opis rekordu
::       [_d] [NUMBER] - sprawdzać dla grupy kapitałowej:
::                         0 - nie (tylko dla bieżącej) [domyślnie]
::                         1 - tak (sprawdzać dla wszystkich firm)
::   WY: ~~ lub tabela identyfikatorów rekordu
::----------------------------------------------------------------------------------------------------------------------
:: przykład użycia
:: exec('get_id','#sync_id','PORTAL_M','material00000001')
{? var_pres('_c')<>type_of('') || _c:='' ?};
{? var_pres('_d')<>type_of(0) || _d:=0 ?};
{? (_par:='_a'; var_pres('_a')<>type_of(''))
      |
   (_par:='_b'; var_pres('_b')<>type_of(''))
      |
   (_par:='_c'; var_pres('_c')<>type_of(''))
      |
   (_par:='_d'; var_pres('_d')<>type_of(0))
||
   FUN.info('Błędny typ parametru %1.'@[_par]);
   return(~~)
?};
{? (_par:='_a'; _war:='niepusty ciąg znaków o długości do 30 znaków'; _a='' | +_a>30)
      |
   (_par:='_b'; _war:='$TAB.ref() lub TAB.uidref()'; _b='' | type_of(ref_tab(_b))=type_of(~~))
      |
   (_par:='_c'; _war:='ciąg znaków o maksymalnej długości 100 znaków'; +_c>100)
||
   FUN.info('Błędna wartość parametru.\nParametr %1 może przyjmować wartości: %2.'@[_par,_war]);
   return(~~)
?};
_kod:=_a;
_rek:=_b;
_opis:=_c;
_grupa:=_d;

_result:=tab_tmp(2
   ,'ID','STRING[255]','Identyfikator rekordu'
   ,'FIRMA','STRING[4]','Symbol firmy'
   ,'OPIS','STRING[100]','Opis'
);

SYNC_IDD.cntx_psh();
SYNC_IDD.index('KOD');
SYNC_IDD.prefix(_kod,);
{? SYNC_IDD.first()
|| FIRMA.cntx_psh();
   FIRMA.index('SYMBOL');
   FIRMA.prefix();
   SYNC_IDM.cntx_psh();
   SYNC_IDM.index('KOD');
   SYNC_ID.cntx_psh();

   _system:=SYNC_IDD.SYSTEM;
   _tabela:=SYNC_IDD.TABELA;
   _maska:=ref_name(_rek);
   _firma:={? SYNC_IDD.UZUFIRMA='T' & {? _grupa || FIRMA.first() || FIRMA.seek(REF.FIRMA) ?} || FIRMA.SYMBOL || '' ?};
   {!
   |? SYNC_IDM.prefix(_kod,_firma,_tabela,_maska);
      {? SYNC_IDM.first()
      || SYNC_ID.use(SYNC_IDM.MASKA_ID);
         SYNC_ID.index('REK');
         {? _opis=''
         || SYNC_ID.prefix(_rek,)
         || SYNC_ID.prefix(_rek,_opis,)
         ?};
         _loop:=SYNC_ID.first();
         {!
         |? _loop
         |! {? ~_result.find_key(SYNC_ID.ID,SYNC_IDM.FIRMA,)
            || _result.ID:=SYNC_ID.ID;
               _result.OPIS:=SYNC_ID.OPIS;
               _result.FIRMA:=SYNC_IDM.FIRMA;
               _result.add()
            ?};
            _loop:=SYNC_ID.next()
         !}
      ?};
      {? SYNC_IDD.UZUFIRMA='T' & _grupa & FIRMA.next()
      || _firma:=FIRMA.SYMBOL;
         1
      ?}
   !};

   SYNC_ID.cntx_pop();
   SYNC_IDM.cntx_pop();
   FIRMA.cntx_pop()
?};
SYNC_IDD.cntx_pop();

_result


\get_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Zwraca rekordy odpowiadający identyfikatorowi
::   WE: _a - kod definicji
::       _b - identyfikator rekordu
::   WY: ~~ lub tabela rekordów
::----------------------------------------------------------------------------------------------------------------------
:: przykład użycia
:: exec('get_rek','#sync_id','PORTAL_KH','id_portalu_kontr02')
{? (_par:='_a'; var_pres('_a')<>type_of(''))
      |
   (_par:='_b'; var_pres('_b')<>type_of(''))
||
   FUN.info('Błędny typ parametru %1.'@[_par]);
   return(~~)
?};
{? (_par:='_a'; _war:='niepusty ciąg znaków o długości do 30 znaków'; _a='' | +_a>30)
      |
   (_par:='_b'; _war:='niepusty ciąg znaków o długości do 255 znaków'; _b='' | +_b>255)
||
   FUN.info('Błędna wartość parametru.\nParametr %1 może przyjmować wartości: %2.'@[_par,_war]);
   return(~~)
?};
_kod:=_a;
_id:=_b;

_result:=tab_tmp(1
   ,'REK','STRING[48]','Rekord'
   ,'OPIS','STRING[255]','Opis rekordu');

SYNC_IDD.cntx_psh();
SYNC_IDD.index('KOD');
SYNC_IDD.prefix(_kod,);
{? SYNC_IDD.first()
||
   _system:=SYNC_IDD.SYSTEM;
   _tabela:=SYNC_IDD.TABELA;
   _firma:={? SYNC_IDD.UZUFIRMA='T' || exec('FindAndGet','#table',FIRMA,REF.FIRMA,,"SYMBOL",'') || '' ?};
   SYNC_ID.cntx_psh();
   SYNC_IDM.cntx_psh();
   SYNC_IDM.index('KOD');
   SYNC_IDM.prefix(_kod,_firma,_tabela);
   _loop:=SYNC_IDM.first();
   {!
   |? _loop
   |!
      SYNC_ID.use(SYNC_IDM.MASKA_ID);
      SYNC_ID.cntx_psh();
      SYNC_ID.index('ID');
      SYNC_ID.prefix(_id);
      _loop:=SYNC_ID.first();
      {!
      |? _loop
      |!
         {? ~_result.find_key(SYNC_ID.REK,)
         ||
            _result.REK:=SYNC_ID.REK;
            _result.OPIS:=SYNC_ID.OPIS;
            _result.add()
         ?};
         _loop:=SYNC_ID.next()
      !};
      SYNC_ID.cntx_pop();
      _loop:=SYNC_IDM.next()
   !};
   SYNC_IDM.cntx_pop();
   SYNC_ID.cntx_pop()
?};
SYNC_IDD.cntx_pop();

_result


\del_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Usuwa zapisy dotyczące zewnętrznego identyfikatora _b z masek definicji _a
::   WE: _a - kod definicji
::       _b - identyfikator rekordu
::   WY: 0 - nie powiodło się usunięcie zapisów
::       1 - usunięto zapisy
::----------------------------------------------------------------------------------------------------------------------
:: przykład użycia
:: exec('del_id','#sync_id','PORTAL_M','id_portalu_kontr01')
{? var_pres('_d')<>type_of('') || _d:='' ?};
{? (_par:='_a'; var_pres('_a')<>type_of(''))
      |
   (_par:='_b'; var_pres('_b')<>type_of(''))
||
   FUN.info('Błędny typ parametru %1.'@[_par]);
   return(0)
?};
{? (_par:='_a'; _war:='niepusty ciąg znaków o długości do 30 znaków'; _a='' | +_a>30)
      |
   (_par:='_b'; _war:='niepusty ciąg znaków o długości do 255 znaków'; _b='' | +_b>255)
||
   FUN.info('Błędna wartość parametru.\nParametr %1 może przyjmować wartości: %2.'@[_par,_war]);
   return(0)
?};
_kod:=_a;
_id:=_b;

_result:=0;

SYNC_IDD.cntx_psh();
SYNC_IDD.index('KOD');
SYNC_IDD.prefix(_kod,);
{? ~SYNC_IDD.first()
||
   FUN.info('Błędny kod definicji: %1.'@[_kod])
||
   _del:=1;
   _system:=SYNC_IDD.SYSTEM;
   _tabela:=SYNC_IDD.TABELA;
   _firma:={? SYNC_IDD.UZUFIRMA='T' || exec('FindAndGet','#table',FIRMA,REF.FIRMA,,"SYMBOL",'') || '' ?};
   SYNC_ID.cntx_psh();
   SYNC_IDM.cntx_psh();
   SYNC_IDM.index('KOD');
   SYNC_IDM.prefix(_kod,_firma,_tabela);
   _loop:=SYNC_IDM.first();
   {!
   |? _loop
   |!
      SYNC_ID.use(SYNC_IDM.MASKA_ID);
      SYNC_ID.cntx_psh();
      SYNC_ID.index('ID');
      SYNC_ID.prefix(_id,);
      _loop:=SYNC_ID.first();
      {!
      |? _loop
      |!
         _del:=SYNC_ID.del(1,1);
         _loop:=_del=2
      !};
      SYNC_ID.cntx_pop();
      _loop:=_del=1 & SYNC_IDM.next()
   !};
   SYNC_IDM.cntx_pop();
   SYNC_ID.cntx_pop();
   {? _del=1 || _result:=1 ?}
?};
SYNC_IDD.cntx_pop();

_result


\del_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Usuwa zapisy dotyczące rekordu _b o opisie _c z masek definicji _a
::   WE: _a - kod definicji
::       _b - rekord ($TAB.ref() lub TAB.uidref())
::       [_c] - opis rekordu
::   WY: 0 - nie powiodło się usunięcie zapisów
::       1 - usunięto zapisy
::----------------------------------------------------------------------------------------------------------------------
:: przykład użycia
:: exec('get_id','#sync_id','PORTAL_M','material00000001')
{? var_pres('_c')<>type_of('') || _c:='' ?};
{? (_par:='_a'; var_pres('_a')<>type_of(''))
      |
   (_par:='_b'; var_pres('_b')<>type_of(''))
      |
   (_par:='_c'; var_pres('_c')<>type_of(''))
||
   FUN.info('Błędny typ parametru %1.'@[_par]);
   return(~~)
?};
{? (_par:='_a'; _war:='niepusty ciąg znaków o długości do 30 znaków'; _a='' | +_a>30)
      |
   (_par:='_b'; _war:='$TAB.ref() lub TAB.uidref()'; _b='' | type_of(ref_tab(_b))=type_of(~~))
      |
   (_par:='_c'; _war:='ciąg znaków o maksymalnej długości 100 znaków'; +_c>100)
||
   FUN.info('Błędna wartość parametru.\nParametr %1 może przyjmować wartości: %2.'@[_par,_war]);
   return(~~)
?};
_kod:=_a;
_rek:=_b;
_opis:=_c;

_result:=0;

SYNC_IDD.cntx_psh();
SYNC_IDD.index('KOD');
SYNC_IDD.prefix(_kod,);
{? ~SYNC_IDD.first()
||
   FUN.info('Błędny kod definicji: %1.'@[_kod])
||
   _del:=1;
   _system:=SYNC_IDD.SYSTEM;
   _tabela:=SYNC_IDD.TABELA;
   _firma:={? SYNC_IDD.UZUFIRMA='T' || exec('FindAndGet','#table',FIRMA,REF.FIRMA,,"SYMBOL",'') || '' ?};
   _maska:=ref_name(_rek);
   SYNC_ID.cntx_psh();
   SYNC_IDM.cntx_psh();
   SYNC_IDM.index('KOD');
   SYNC_IDM.prefix(_kod,_firma,_tabela,_maska);
   {? SYNC_IDM.first()
   ||
      SYNC_ID.use(SYNC_IDM.MASKA_ID);
      SYNC_ID.cntx_psh();
      SYNC_ID.index('REK');
      {? _opis=''
      || SYNC_ID.prefix(_rek,)
      || SYNC_ID.prefix(_rek,_opis,)
      ?};
      _loop:=SYNC_ID.first();
      {!
      |? _loop
      |!
         _del:=SYNC_ID.del(1,1);
         _loop:=_del=2
      !};
      SYNC_ID.cntx_pop()
   ?};
   SYNC_IDM.cntx_pop();
   SYNC_ID.cntx_pop();
   {? _del=1 || _result:=1 ?}
?};
SYNC_IDD.cntx_pop();

_result


\def_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Parametry funkucji add_def
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_atr:=obj_new('SYSTEM','KOD','OPIS','TABELA','UZUFIRMA');
_atr.SYSTEM:='';
_atr.KOD:='';
_atr.OPIS:='';
_atr.TABELA:='';
_atr.UZUFIRMA:='N';
_atr


\add_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Dodaje definicję identyfikatorów rekordów
::   WE: _a - exec('def_a','#sync_id')
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? (_par:='_a'; var_pres(_par)<>type_of(obj_new('obj')))
      |
   (_par:='SYSTEM'; var_pres(_par,_a)<>type_of(''))
      |
   (_par:='KOD'; var_pres(_par,_a)<>type_of(''))
      |
   (_par:='OPIS'; var_pres(_par,_a)<>type_of(''))
      |
   (_par:='TABELA'; var_pres(_par,_a)<>type_of(''))
      |
   (_par:='UZUFIRMA'; var_pres(_par,_a)<>type_of(''))
||
   {? _par='_a'
   || FUN.info('Błędny typ parametru _a'@)
   || FUN.info('Błędny typ parametru _a.%1.'@[_par])
   ?};
   return(0)
?};
_obj:=_a;
{? (_par:='SYSTEM'; _war:='ciąg znaków o długości do 20 znaków'; +_obj.SYSTEM>20)
      |
   (_par:='KOD'; _war:='niepusty ciąg znaków o długości do 30 znaków'; _obj.KOD='' | +_obj.KOD>30)
      |
   (_par:='OPIS'; _war:='ciąg znaków o długości do 255 znaków'; +_obj.OPIS>255)
      |
   (_par:='TABELA'; _war:='akronim istniejącej tabeli'; var_pres(~-_obj.TABELA)<>type_of(FIRMA))
      |
   (_par:='UZUFIRMA'; _war:='T, N'; (~-_obj.UZUFIRMA)<>'N' & (~-_obj.UZUFIRMA)<>'T')
||
   FUN.info('Błędna wartość parametru.\nParametr _a.%1 może przyjmować wartości: %2.'@[_par,_war]);
   return(0)
?};
_result:=0;
_kod:=~-_obj.KOD;
SYNC_IDD.cntx_psh();
SYNC_IDD.index('KOD');
SYNC_IDD.prefix(_kod,);
_put:=SYNC_IDD.first();
{? _put=0 | SYNC_IDD.r_lock(1,1,1)
||
   SYNC_IDD.SYSTEM:=_obj.SYSTEM;
   SYNC_IDD.KOD:=_kod;
   SYNC_IDD.OPIS:=_obj.OPIS;
   SYNC_IDD.TABELA:=~-_obj.TABELA;
   SYNC_IDD.UZUFIRMA:=~-_obj.UZUFIRMA;
   {? exec('sync_idd_check','#sync_id')=''
   ||
      _result:={? _put || SYNC_IDD.put() || SYNC_IDD.add() ?}
   ?};
   {? _put || SYNC_IDD.r_unlock() ?}
?};
SYNC_IDD.cntx_pop();
_result


\def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Definicja zewnętrznych identyfikatorów rekordów
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SYNC_IDD.cntx_psh();
SYNC_IDD.index('KOD');
SYNC_IDD.prefix();
SYNC_IDD.win_patt('SZUK');
SYNC_IDD.win_edit('RED');
SYNC_IDD.win_sel('WER');
SYNC_IDD.select();
SYNC_IDD.cntx_pop()


\sync_id_sel4def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Wyświetla identyfikatory rekordów dla bieżącej definicji
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('sync_id_sel','#sync_id',SYNC_IDD.KOD)


\sync_id_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Wyświetla identyfikatory rekordów
::   WE: [_a] - SYNC_IDD.KOD
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_syncidd:={? var_pres('_a')=type_of('') || _a || '' ?};

SYNC_ID.cntx_psh();
SYNC_IDM.cntx_psh();
SYNC_IDM.index('KOD');
{? _syncidd=''
|| SYNC_IDM.prefix()
|| SYNC_IDM.prefix(_syncidd,)
?};
{? SYNC_IDM.first()=0
||
   FUN.info('Brak identyfikatorów rekordów.'@)
||
   _grp:=SYNC_IDM.grp_make('Identyfikatory rekordów'@,,'sync_id');
   _far:="
      {? SYNC_IDM.sel_size()=0
            &
         {? SYNC_IDM.f_active() || SYNC_IDM.f_get() || SYNC_IDM.get() ?}
      ||
         tab_show(1,'id');
         SYNC_ID.use(SYNC_IDM.MASKA_ID);
         SYNC_ID.index('REK');
         SYNC_ID.prefix();
         SYNC_ID.first();
         grp_disp(SYNC_ID,'WER')
      ||
         tab_hide(1,,'id')
      ?}
   ";
   SYNC_IDM.grp_sel(_grp,,'WER',,_far,,,,,,,,'maximized_with_title');
   SYNC_IDM.grp_splt(_grp,,'horizontal','id',10);
   SYNC_IDM.grp_sel(_grp,SYNC_ID,'WER','Identyfikatory rekordów'@,,,,,,,,,'maximized');
   SYNC_IDM.win_sel(_grp);
   SYNC_IDM.select()
?};
SYNC_IDM.cntx_pop();
SYNC_ID.cntx_pop()


\sync_id_check
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Rekord po tabeli SYNC_ID
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=__CHK.record(SYNC_ID,,'REK','ID');

{? _result=''
||
   SYNC_ID.SYSTEM:=SYNC_IDM.SYSTEM;
   SYNC_ID.KOD:=SYNC_IDM.KOD
?};

_result


\sync_idd_brek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Przed rekord tabeli SYNC_IDD
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
||
   SYNC_IDM.cntx_psh();
   SYNC_IDM.index('KOD');
   SYNC_IDM.prefix(SYNC_IDD.KOD);
   _grayed:='';
   {? SYNC_IDM.first() || _grayed:='P' ?};
   SYNC_IDM.cntx_pop();
   SYNC_IDD.actions_grayed('WER',_grayed)
?};
~~


\sync_idd_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Definicja identyfiaktorów rekordów - Popraw
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('FindInSet','#table','SYNC_IDM','KOD',SYNC_IDD.KOD,,,1,,null())=null()
||
   1
||
   FUN.info('Dodano identyfikatory rekordu.\nFunkcja niedostępna.'@);
   0
?}


\sync_id_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Usuwa identyfikatory rekordów defnicji _a w zakresie _b
::   WE: _a - kod definicji
::       _b - zakres 1-wyszystkie, 2-usuniętych rekordów
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_kod:=_a;
_zakr:=_b;
SYNC_ID.cntx_psh();
SYNC_IDM.cntx_psh();
SYNC_IDM.index('KOD');
SYNC_IDM.prefix(_kod,);
_loop:=SYNC_IDM.first();
{!
|? _loop
|!
   _del:=0;
   {? SYNC_ID.use(SYNC_IDM.MASKA_ID)
   ||
      SYNC_ID.cntx_psh();
      {? _zakr=1
      ||
         _del:=SYNC_ID.erase()

      |? _zakr=2
      ||
         SYNC_ID.prefix();
         _loop:=SYNC_ID.first();
         {!
         |? _loop
         |!
            _tab:=ref_tab(SYNC_ID.REK);
            _loop:=
               {? var_pres('_tab')<>type_of(~~)
                     &
                  exec('FindAndGet','#table',_tab,SYNC_ID.REK,,,null())=null()
               ||
                  SYNC_ID.del()
               ||
                  SYNC_ID.next()
               ?};
            obj_del(_tab)
         !}
      ?};
      SYNC_ID.cntx_pop()
   ?};
   _loop:={? _del || SYNC_IDM.del() || SYNC_IDM.next() ?}
!};
SYNC_IDM.cntx_pop();
SYNC_ID.cntx_pop()


\sync_idd_usun_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Usuwa identyfikatory dla
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Wybierz zakres identyfikatorów rekordów do usunięcia.'@,,'Wszystkie'@,'Usuniętych rekordów'@);
{? _choice>0
||
   exec('sync_id_del','#sync_id',SYNC_IDD.KOD,_choice)
?}


\sync_idd_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Definicja identyfiaktorów rekordów - Usuń
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Sel:=SYNC_IDD.sel_aget();
{? ~_Sel.first() || _Sel.REF:=#SYNC_IDD.ref(); _Sel.add() ?};

_del:=0;
{? _Sel.first() & _Sel.next()
||
   _del:=FUN.ask('Usunąć zaznaczone pozycje?\n\n'
      'UWAGA!\nUsunięte zostaną identyfikatory rekordów dotyczące usuwanych pozycji.'@)

|? _Sel.first()
||
   _del:=FUN.ask('Usunąć zaznaczoną pozycję?\n\n'
      'UWAGA!\nUsunięte zostaną identyfikatory rekordów dotyczące usuwanej pozycji.'@)
?};
{? _del
||
   _loop:=_Sel.first();
   {!
   |? _loop
   |!
      _cont:=1;
      {? SYNC_IDD.seek(_Sel.REF,)
      ||
         SYNC_IDM.index('KOD');
         SYNC_IDM.prefix(SYNC_IDD.KOD,);
         _loop:=SYNC_IDM.first();
         {!
         |? _loop
         |!
            SYNC_ID.use(SYNC_IDM.MASKA_ID);
            {? SYNC_ID.erase()
            ||
               _cont:=SYNC_IDM.del(1,1)>0
            ||
               _cont:=0
            ?};
            _loop:=_cont & SYNC_IDM.next()
         !};
         {? _cont || SYNC_IDD.del() ?}
      ?};
      _loop:=_Sel.next()
   !}
?};
SYNC_IDD.sel_adel();
0


\sync_idd_check
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Sprawdza poprawność wypełnienia rekordu tabeli SYNC_IDD
::   WE:
::   WY: '' lub akronime pola
::----------------------------------------------------------------------------------------------------------------------
_result:=__CHK.record(SYNC_IDD,,'KOD','TABELA');

{? _result=''
      &
   var_pres(SYNC_IDD.TABELA)<>type_of(FIRMA)
||
   FUN.info('W systemie Merit brak tabeli o akronimie %1 .'@[SYNC_IDD.TABELA]);
   _result:='TABELA'
?};

_result


\sync_idm_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Maski identyfikatorów rekrodów - Usuń
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Sel:=SYNC_IDM.sel_aget();
{? ~_Sel.first() || _Sel.REF:=#SYNC_IDM.ref(); _Sel.add() ?};

_del:=0;
{? _Sel.first() & _Sel.next()
||
   _del:=FUN.ask('Usunąć zaznaczone pozycje?\n\n'
      'UWAGA!\nUsunięte zostaną identyfikatory rekordów dotyczące usuwanych pozycji.'@)

|? _Sel.first()
||
   _del:=FUN.ask('Usunąć zaznaczoną pozycję?\n\n'
      'UWAGA!\nUsunięte zostaną identyfikatory rekordów dotyczące usuwanej pozycji.'@)
?};
{? _del
||
   _loop:=_Sel.first();
   {!
   |? _loop
   |!
      {? SYNC_IDM.seek(_Sel.REF,)
      ||
         SYNC_ID.use(SYNC_IDM.MASKA_ID);
         {? SYNC_ID.erase()
         ||
            SYNC_IDM.del()
         ?}
      ?};
      _loop:=_Sel.next()
   !}
?};
SYNC_IDM.sel_adel();
0


\maska_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Generuje losową maskę tabeli SYNC_ID
::   WE:
::   WY: maska tabeli SYNC_ID
::----------------------------------------------------------------------------------------------------------------------
_str:='abcdefghijklmnopqrstuvwxyz_0123456789';
_dl:=38;
_los:="{! |? _res:=int(_a*rand); _res=0 !}; _res";
'id'+
(_los(_dl)+_str+1)+
(_los(_dl)+_str+1)+
(_los(_dl)+_str+1)+
(_los(_dl)+_str+1)+
(_los(_dl)+_str+1)+
(_los(_dl)+_str+1)


\test
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14]
:: OPIS: Formuła testowa
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_atr:=exec('def_a','#sync_id');
:: M
_atr.SYSTEM:='PORTAL';
_atr.KOD:='PORTAL_M';
_atr.OPIS:='Kartoteka materiałowa';
_atr.TABELA:='M';
_atr.UZUFIRMA:='N';
:: dodanie definicji
exec('add_def','#sync_id',_atr);
:: dodanie identyfikatorów
exec('add_id','#sync_id','PORTAL_M','material00000001','id_portalu_mat01');
exec('add_id','#sync_id','PORTAL_M','material00000002','id_portalu_mat01');
:: KH
_atr.SYSTEM:='PORTAL';
_atr.KOD:='PORTAL_KH';
_atr.OPIS:='Kartoteka kontrahenta';
_atr.TABELA:='KH';
_atr.UZUFIRMA:='T';
:: dodanie definicji
exec('add_def','#sync_id',_atr);
:: dodanie identyfikatorów
exec('add_id','#sync_id','PORTAL_KH',':2019/01/09 13:50:08 U#0GlN9FAk$kontr   00000001','id_portalu_kontr01');
exec('add_id','#sync_id','PORTAL_KH',':2019/01/09 13:50:08 U#0GlN9FAk$kontr   00000001','id_portalu_kontr02');
:: get_id/get_rek
_res:=
exec('get_id','#sync_id','PORTAL_M','material00000001');
:exec('get_id','#sync_id','PORTAL_M','material00000002');
:exec('get_id','#sync_id','PORTAL_KH',':2019/01/09 13:50:08 U#0GlN9FAk$kontr   00000001');
:exec('get_rek','#sync_id','PORTAL_M','id_portalu_mat01');
:exec('get_rek','#sync_id','PORTAL_KH','id_portalu_kontr01');
:exec('get_rek','#sync_id','PORTAL_KH','id_portalu_kontr02');
_prn:='';
_loop:=_res.first();
{!
|? _loop
|!
   {? _prn<>'' || _prn+='|' ?};
   _prn+={? var_pres('ID',_res)>0 || _res.ID || _res.REK ?};
   _loop:=_res.next()
!};
_prn


\change_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Podmienia jeden rekord na drugi dla podanej definicji
::   WE: _a - kod definicji
::       _b - rekord źródłowy (TAB.uidref)
::       _c - rekord docelowy (TAB.uidref)
::   WY: 1-sukces, 0-porażka
::----------------------------------------------------------------------------------------------------------------------
:: przykład użycia
:: exec('change_rek','#sync_id','PORTAL_M','material00000001','material00000002')

_kod:=_a;
_src:=_b;
_dest:=_c;

_ok:=0;
_tab_id:=exec('get_id','#sync_id',_kod,_src);
{? var_pres('_tab_id')>0
|| {? _tab_id.first()
   || {!
      |? _ref:=exec('add_id','#sync_id',_kod,_dest,_tab_id.ID);
         {? _ref
         || _ok:=exec('del_rek','#sync_id',_kod,_src);
            {? ~_ok
            || exec('del_rek','#sync_id',_kod,_dest)
            ?}
         ?};
         _ok & _tab_id.next()
      !}
   ?}
?};
_ok


\sync_idm_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Usuwa maski identyfikatorów rekordów kodu _a, opcjonalnie dla firmy _b
::   WE: _a - kod definicji
::       [_b] - kod firmy
::   WY: 0/1 - wynik usunięcia
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || return(0) ?};
{? var_pres('_b')=type_of('') || _firma:=_b || _firma:='' ?};

SYNC_IDM.cntx_psh();
SYNC_IDM.index('SYSTEM');
{? _firma='' || SYNC_IDM.prefix(_a,) || SYNC_IDM.prefix(_a,_firma,) ?};
_loop:=SYNC_IDM.first();
{!
|? _loop
|!
   _loop:=SYNC_ID.use(SYNC_IDM.MASKA_ID) & SYNC_ID.erase() & SYNC_IDM.del()
!};
_result:=SYNC_IDM.first()=0;
SYNC_IDM.cntx_pop();
_result


\opis_uzyty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła sprawdza, czy dla podanego kodu definicji istnieje identyfikator, którego opis spełnia kryteria opisane
::       parametrami _b i [_c].
::   WE:  _a  [STRING] - Kod definicji.
::        _b  [STRING] - Opis.
::       [_c] [STRING] - Tryb dopasowania opisu (parametru _b w polu SYNC_ID.OPIS):
::                         '='   - _b jest dokładnie SYNC_ID.OPIS [domyślnie];
::                         '*'   - _b występuje w dowolnym miejscu SYNC_ID.OPIS;
::                         '^'   - _b jest początkiem SYNC_ID.OPIS;
::                         '$'   - _b jest końcem SYNC_ID.OPIS;
::   WY: 0  - Wysyłka na portal nie miała miejsca.
::       1  - Istnieją rekordy wysłane na portal.
::       ~~ - Brak lub nieprawidłowy parametr wywołania.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & _a<>''
|| _kod:=_a
|| _stack:=form_stack();
   FUN.error(
      'Brak, nieprawidłowy typ lub nieprawidłowa wartość parametru "%1".'@ ['KOD']+
      '\n(\\%1/%2.fml)' [_stack.name,_stack.file]
   );
   return()
?};
{? var_pres('_b')=type_of('') & _b<>''
|| _opis:=_b
|| _stack:=form_stack();
   FUN.error(
      'Brak, nieprawidłowy typ lub nieprawidłowa wartość parametru "%1".'@ ['OPIS']+
      '\n(\\%1/%2.fml)' [_stack.name,_stack.file]
   );
   return()
?};
_tryb:={? var_pres('_c')=type_of('') & ',=,*,^,$,'*',%1,' [_c] || _c || '=' ?};

_result:=0;
SYNC_IDD.cntx_psh();
SYNC_IDD.index('KOD');
SYNC_IDD.prefix(_kod,);
{? SYNC_IDD.first()
|| _dl:=+_opis;
   _firma:={? SYNC_IDD.UZUFIRMA='T' || exec('FindAndGet','#table',FIRMA,REF.FIRMA,,"SYMBOL",'') || '' ?};
   SYNC_IDM.cntx_psh();
   SYNC_IDM.index('KOD');
   SYNC_IDM.prefix(_kod,_firma,SYNC_IDD.TABELA,);
   {? SYNC_IDM.first()
   || SYNC_ID.cntx_psh();
      {!
      |? SYNC_ID.use(SYNC_IDM.MASKA_ID);
         SYNC_ID.index('OPIS');
         {? _tryb='='
         || SYNC_ID.prefix(_opis,)
         |? _tryb='^'
         || SYNC_ID.prefix(_opis)
         || SYNC_ID.prefix()
         ?};
         {? SYNC_ID.first()
         || {!
            |? _result:=
                  {? _tryb='=' | _tryb='^'
                  || 1
                  |? _tryb='*'
                  || SYNC_ID.OPIS*_opis>0
                  |? _tryb='$'
                  || SYNC_ID.OPIS+_dl=_opis
                  ?};
               _result=0 & SYNC_ID.next()
            !}
         ?};
         _result=0 & SYNC_IDM.next()
      !};
      SYNC_ID.cntx_pop()
   ?};
   SYNC_IDM.cntx_pop()
?};
SYNC_IDD.cntx_pop();
_result


\get_ids_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.14]
:: OPIS: Zwraca tabelę tymczasową z identyfikatorami odpowiadający podanemu kodowi definicji
::   WE: _a [STRING] - kod definicji
::   WY: _TAB [TABLE] - tabela identyfikatorów lub ~~ w przypadku błędu
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | ~+_a
|| return()
|| _kod:=_a
?};

:: Pobieranie maski identyfikatorów:
_maska:='';
SYNC_IDM.cntx_psh();
SYNC_IDM.index('KOD');
SYNC_IDM.prefix(_kod);
{? SYNC_IDM.first()
|| _maska:=SYNC_IDM.MASKA_ID
?};
SYNC_IDM.cntx_pop();
{? ~+_maska || return() ?};

:: Ustawienie odpowiedniej maski, zapytanie pobierające rekordy wysłane na portal:
SYNC_ID.cntx_psh();
SYNC_ID.use(_maska);
_TAB:=sql('select REK, OPIS, substring(REK from 2 for 31) as UIDREF from SYNC_ID');
SYNC_ID.cntx_pop();

_TAB


\firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Zwraca firmę dla pary _a, _b
::   WE: _a [STRING] - kod definicji
::       _b [STRING] - identyfikator rekordu
::   WY: ~~ - brak identyfikatora,
::       '' - identyfikator ogólny,
::       symbol firmy - identyfikator powiązany z firmą
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || FUN.info('Nieprawidłowy parametr _a'@); return() ?};
{? var_pres('_b')<>type_of('') || FUN.info('Nieprawidłowy parametr _b'@); return() ?};
_wyn:=~~;
SYNC_ID.cntx_psh();
SYNC_IDM.cntx_psh();
SYNC_IDM.index('KOD');
SYNC_IDM.prefix(_a,);
_loop:=SYNC_IDM.first();
{!
|? _loop
|!
   SYNC_ID.use(SYNC_IDM.MASKA_ID);
   SYNC_ID.cntx_psh();
   SYNC_ID.index('ID');
   SYNC_ID.prefix(_b);
   {? SYNC_ID.first() || _wyn:=SYNC_IDM.FIRMA ?};
   SYNC_ID.cntx_pop();
   _loop:=_wyn=~~ & SYNC_IDM.next()
!};
SYNC_IDM.cntx_pop();
SYNC_ID.cntx_pop();
_wyn


\isSynced
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [23.25]
:: OPIS: Sprawdza czy przekazany rekord tabeli jest juz zsynchronizowany z portalem.
::   WE: _a [STRING] - kod przeznaczenia danych
::       _b [STRING] - kod identyfikatora rekordów
::       _c [STRING] - uidref sprawdzanego rekordu
::   WY: obiekt _result z polami:
::                   .ok       - czy rekord był wysłany na portal
::                   .syncTime - czas ostatniej synchronizacji rekordu
::                   .status   - [0] brak informacji
::                               [1] rekord zsynchronizowany i aktualny
::                               [2] rekord był wysłany kiedyś na portal ale obecnie jest nowszy w ERPie
::                               [3] nowy rekord, spełniający kryteria wysłania na Portal HR
::----------------------------------------------------------------------------------------------------------------------
_result:=obj_new('ok','syncTime','status','icon');
_result.ok:=0;
_result.syncTime:='';
_result.status:=0;
_result.icon:=exec('pusta','#icon');

    _pd:={? var_pres('_a')=type_of('')            || _a || return(_result) ?};
    _id:={? var_pres('_b')=type_of('')            || _b || return(_result) ?};
_uidref:={? var_pres('_c')=type_of('') & (+_c=48) || _c || return(_result) ?};

_tab:=exec('get_id','#sync_id',_id,_uidref);
_result.ok:=var_pres('_tab')>100 & _tab.size()>0;

{? _result.ok
|| {? var_pres('ID',_tab)>0
   || _obj:=spli_str(_tab.ID,'|');
      {? obj_len(_obj)>1
      || _result.syncTime:=_obj[2];
         _TAB:=ref_tab(_uidref);
         {? var_pres('IDPUT',_TAB)>0
         || _result.status:={? exec('idtime2iso8601','#convert',_TAB.IDPUT)>_result.syncTime || 2 || 1 ?}
         ?}
      ?}
   ?}
||
   _TAB:=ref_tab(_uidref);
   _TAB_ACR:=2-!_TAB;
   _tab_new:=proc_exe('new_sync@synchro',_pd,1,_TAB_ACR);
   _ndx:=_tab_new.ndx_tmp(,,'ACR',,,'REF',,);
   _tab_new.index(_ndx);
   _tab_new.prefix(_TAB_ACR,(_uidref+16));
   {? _tab_new.first()
   || _result.status:=3
   ?};
   _tab_new.ndx_drop(_ndx)
?};
_result.icon:={? _result.status=1
              || 'xwin16.png:1'
              |? _result.status=2
              || 'xwin16.png:33'
              |? _result.status=3
              || 'xwin16.png:184'
              || exec('pusta','#icon')
              ?};
_result


\isAny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [23.25]
:: OPIS: Zwraca informacje czy jakiś rekord był już synchronizowany z portalem
::   WE: _a - kod definicji
::----------------------------------------------------------------------------------------------------------------------
:: przykład użycia
:: exec('isAny','#sync_id','PORTAL_M')

_result:=0;
{? var_pres('_a')<>type_of('')
|| FUN.info('Błędny typ parametru %1.'@[_par]);
   return(-1)
?};
_kod:=_a;
SYNC_IDD.cntx_psh();
SYNC_IDD.index('KOD');
SYNC_IDD.prefix(_kod,);
{? SYNC_IDD.first()
|| FIRMA.cntx_psh();
   FIRMA.index('SYMBOL');
   FIRMA.prefix();
   SYNC_IDM.cntx_psh();
   SYNC_IDM.index('KOD');
   SYNC_ID.cntx_psh();
   _system:=SYNC_IDD.SYSTEM;
   _tabela:=SYNC_IDD.TABELA;
   _firma:={? SYNC_IDD.UZUFIRMA='T' & FIRMA.seek(REF.FIRMA) || FIRMA.SYMBOL || '' ?};
   SYNC_IDM.prefix(_kod,_firma,_tabela,);
   {? SYNC_IDM.first()
   || {!
      |? SYNC_ID.use(SYNC_IDM.MASKA_ID);
         SYNC_ID.prefix();
         _result:=SYNC_ID.first();
         _result<>1 & SYNC_IDM.next()
      !}
   ?};
   SYNC_ID.cntx_pop();
   SYNC_IDM.cntx_pop();
   FIRMA.cntx_pop()
?};
SYNC_IDD.cntx_pop();

_result

:Sign Version 2.0 jowisz:1045 2023/09/21 13:51:26 3b88916bf9f46d2a80c9406353c46007594c64ee4e054c41dac5a2e050fe07202ebf8043feb4e323b61b76aef3b06fc3d307bff6e67394a15bd418e3f8e99a17f3b7350434fdf900d9970eb47bcd455eda7ee48e82b1bb1cee88fd4829915f105828ef8f3dcb63c92c5c0143fb9dd858aac54ebd18f352d205413eaa8afa021a
