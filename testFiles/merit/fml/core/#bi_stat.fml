:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #bi_stat.fml [17.00]
:: Utworzony: 16.09.2013
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Statusy instancji
::======================================================================================================================


\buffer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca obiekt nazwany - bufor tabeli BI_STAT
::   WY: obj_new()
::----------------------------------------------------------------------------------------------------------------------
exec('BI_STAT','#buffer')


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Funkcja dodająca wpis do tabeli BI_STAT
::   WE: _a - obj_new - tablica nazwana bedaca buforem tabeli exec('buffer','#bi_stat')
::   WY:      [REFERENCE]  - wskazanie na dodany rekord (lub już istniejący)
::----------------------------------------------------------------------------------------------------------------------
_buffer:={? var_pres('_a')>100 || _a || return(null) ?};

_res:=0;
BI_STAT.cntx_psh();
BI_STAT.index('SYMBOL');
BI_STAT.prefix(_buffer.SYMBOL,);
{? BI_STAT.first()
|| _buffer.get();
   _res:=1
|| BI_STAT.blank(1);
   _buffer.set();
   {? BI_STAT.add()
   || _buffer.get();
      _res:=1
   ?}
?};
BI_STAT.cntx_pop();
_res


\stat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Jeśli _a='txt' zwraca _b, jeśli _a<>'txt' zwraca BI_STAT.ref
::   WE: _a - typ wyniku
::       _b - status
::----------------------------------------------------------------------------------------------------------------------
_txt:=_b;

{? _a='symbol'
|| _wyn:=_txt
|? _a='name'
|| BI_STAT.cntx_psh();
   BI_STAT.index('SYMBOL');
   BI_STAT.prefix(_txt,);
   _wyn:=
      {? BI_STAT.first()
      || BI_STAT.NAME
      || ''
      ?};
   BI_STAT.cntx_pop()
|| BI_STAT.cntx_psh();
   BI_STAT.index('SYMBOL');
   BI_STAT.prefix(_txt,);
   _wyn:=
      {? BI_STAT.first()
      || BI_STAT.ref()
      || null()
      ?};
   BI_STAT.cntx_pop()
?};

_wyn


\stat_list
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dodaje statusy w BI_STAT
::----------------------------------------------------------------------------------------------------------------------
_buffer:=exec('buffer','#bi_stat');

'Oczekujący'@@;
_buffer.SYMBOL:=exec('OCZEKUJACY','#bi_stat','symbol');
_buffer.NAME:='Oczekujący';
exec('add','#bi_stat',_buffer);

'Oczekująca'@@;
_buffer.SYMBOL:=exec('OCZEKUJACA','#bi_stat','symbol');
_buffer.NAME:='Oczekująca';
exec('add','#bi_stat',_buffer);

'Uruchomiony'@@;
_buffer.SYMBOL:=exec('URUCHOMIONY','#bi_stat','symbol');
_buffer.NAME:='Uruchomiony';
exec('add','#bi_stat',_buffer);

'Uruchomiona'@@;
_buffer.SYMBOL:=exec('URUCHOMIONA','#bi_stat','symbol');
_buffer.NAME:='Uruchomiona';
exec('add','#bi_stat',_buffer);

'Zakończony'@@;
_buffer.SYMBOL:=exec('ZAKONCZONY','#bi_stat','symbol');
_buffer.NAME:='Zakończony';
exec('add','#bi_stat',_buffer);

'Zakończona'@@;
_buffer.SYMBOL:=exec('ZAKONCZONA','#bi_stat','symbol');
_buffer.NAME:='Zakończona';
exec('add','#bi_stat',_buffer);

'Zawieszony'@@;
_buffer.SYMBOL:=exec('ZAWIESZONY','#bi_stat','symbol');
_buffer.NAME:='Zawieszony';
exec('add','#bi_stat',_buffer);

'Zawieszona'@@;
_buffer.SYMBOL:=exec('ZAWIESZONA','#bi_stat','symbol');
_buffer.NAME:='Zawieszona';
exec('add','#bi_stat',_buffer);

'Wisząca'@@;
_buffer.SYMBOL:=exec('WISZACA','#bi_stat','symbol');
_buffer.NAME:='Wisząca';
exec('add','#bi_stat',_buffer);

'Zakończona awaryjnie'@@;
_buffer.SYMBOL:=exec('AWARYJNA','#bi_stat','symbol');
_buffer.NAME:='Zakończona awaryjnie';
exec('add','#bi_stat',_buffer);

'Zakończony awaryjnie'@@;
_buffer.SYMBOL:=exec('AWARYJNIE','#bi_stat','symbol');
_buffer.NAME:='Zakończony awaryjnie';
exec('add','#bi_stat',_buffer);

'Anulowana'@@;
_buffer.SYMBOL:=exec('ANULOWANA','#bi_stat','symbol');
_buffer.NAME:='Anulowana';
exec('add','#bi_stat',_buffer);

'Wolne'@@;
_buffer.SYMBOL:=exec('TODO_WOLNE','#bi_stat','symbol');
_buffer.NAME:='Wolne';
exec('add','#bi_stat',_buffer);

'Przydzielone'@@;
_buffer.SYMBOL:=exec('TODO_MOJE','#bi_stat','symbol');
_buffer.NAME:='Przydzielone';
exec('add','#bi_stat',_buffer);

'Wykonane'@@;
_buffer.SYMBOL:=exec('TODO_WYKONANE','#bi_stat','symbol');
_buffer.NAME:='Wykonane';
exec('add','#bi_stat',_buffer);

'Wykonał inny użytkownik'@@;
_buffer.SYMBOL:=exec('TODO_WYK_INNY','#bi_stat','symbol');
_buffer.NAME:='Wykonał inny użytkownik';
exec('add','#bi_stat',_buffer);

'Wykonane automatycznie'@@;
_buffer.SYMBOL:=exec('TODO_WYK_AUTO','#bi_stat','symbol');
_buffer.NAME:='Wykonane automatycznie';
exec('add','#bi_stat',_buffer);

'Brak uprawnień'@@;
_buffer.SYMBOL:=exec('TODO_BRAK_UPR','#bi_stat','symbol');
_buffer.NAME:='Brak uprawnień';
exec('add','#bi_stat',_buffer);

'Zgłoszenie problemu'@@;
_buffer.SYMBOL:=exec('TODO_ERROR','#bi_stat','symbol');
_buffer.NAME:='Zgłoszenie problemu';
exec('add','#bi_stat',_buffer);

'Przerwane'@@;
_buffer.SYMBOL:=exec('TODO_BREAK','#bi_stat','symbol');
_buffer.NAME:='Przerwane';
exec('add','#bi_stat',_buffer);

'Przywrócone'@@;
_buffer.SYMBOL:=exec('RETURN','#bi_stat','symbol');
_buffer.NAME:='Przywrócone';
exec('add','#bi_stat',_buffer);

'Do weryfikacji'@@;
_buffer.SYMBOL:=exec('VERIFI','#bi_stat','symbol');
_buffer.NAME:='Do weryfikacji';
exec('add','#bi_stat',_buffer);

'Weryfikowany ponownie'@@;
_buffer.SYMBOL:=exec('VERIFI_AGAIN','#bi_stat','symbol');
_buffer.NAME:='Weryfikowany ponownie';
exec('add','#bi_stat',_buffer);

'Brak wymaganego param. wej.'@@;
_buffer.SYMBOL:=exec('BRAK_WEJ','#bi_stat','symbol');
_buffer.NAME:='Brak wymaganego param. wej.';
exec('add','#bi_stat',_buffer);

'Do usunięcia'@@;
_buffer.SYMBOL:=exec('FL_CANCEL','#bi_stat','symbol');
_buffer.NAME:='Do usunięcia';
exec('add','#bi_stat',_buffer);

'Do zakończenia'@@;
_buffer.SYMBOL:=exec('FL_DONE','#bi_stat','symbol');
_buffer.NAME:='Do zakończenia';
exec('add','#bi_stat',_buffer);

'Zgłoszono błąd'@@;
_buffer.SYMBOL:=exec('FL_ERROR','#bi_stat','symbol');
_buffer.NAME:='Zgłoszono błąd';
exec('add','#bi_stat',_buffer);

'Zachować instancję'@@;
_buffer.SYMBOL:=exec('FL_KEEP','#bi_stat','symbol');
_buffer.NAME:='Zachować instancję';
exec('add','#bi_stat',_buffer);

'Błąd'@@;
_buffer.SYMBOL:=exec('BLAD','#bi_stat','symbol');
_buffer.NAME:='Błąd';
exec('add','#bi_stat',_buffer);

'Czynność nie jest dostępna'@@;
_buffer.SYMBOL:=exec('NO_ACTION','#bi_stat','symbol');
_buffer.NAME:='Czynność nie jest dostępna';
exec('add','#bi_stat',_buffer)


\OCZEKUJACY
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu OCZEKUJACY
::   WE: _a - ='txt' zwraca 'OCZEKUJACY', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'OCZEKUJACY')


\OCZEKUJACA
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu OCZEKUJACA
::   WE: _a - ='txt' zwraca 'OCZEKUJACA', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'OCZEKUJACA')


\URUCHOMIONY
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu URUCHOMIONY
::   WE: _a - ='txt' zwraca 'URUCHOMIONY', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'URUCHOMIONY')


\URUCHOMIONA
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu URUCHOMIONA
::   WE: _a - ='txt' zwraca 'URUCHOMIONA', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'URUCHOMIONA')


\ZAKONCZONY
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu ZAKONCZONY
::   WE: _a - ='txt' zwraca 'ZAKONCZONY', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'ZAKONCZONY')


\ZAKONCZONA
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu ZAKONCZONA
::   WE: _a - ='txt' zwraca 'ZAKONCZONA', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'ZAKONCZONA')


\TODO_WOLNE
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu TODO_WOLNE
::   WE: _a - ='txt' zwraca 'TODO_WOLNE', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'TODO_WOLNE')


\TODO_MOJE
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu TODO_MOJE
::   WE: _a - ='txt' zwraca 'TODO_MOJE', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'TODO_MOJE')


\TODO_WYKONANE
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu TODO_WYKONANE
::   WE: _a - ='txt' zwraca 'TODO_WYKONANE', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'TODO_WYKONANE')


\TODO_WYK_INNY
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu TODO_WYK_INNY
::   WE: _a - ='txt' zwraca 'TODO_WYK_INNY', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'TODO_WYK_INNY')


\TODO_WYK_AUTO
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu TODO_WYK_AUTO
::   WE: _a - ='txt' zwraca 'TODO_WYK_AUTO', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'TODO_WYK_AUTO')


\TODO_BRAK_UPR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu TODO_WYK_AUTO
::   WE: _a - ='txt' zwraca 'TODO_WYK_AUTO', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'TODO_BRAK_UPR')


\ZAWIESZONY
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu ZAWIESZONY
::   WE: _a - ='txt' zwraca 'ZAWIESZONY', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'ZAWIESZONY')


\ZAWIESZONA
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu ZAWIESZONA
::   WE: _a - ='txt' zwraca 'ZAWIESZONA', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'ZAWIESZONA')


\WISZACA
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu WISZACA
::   WE: _a - ='txt' zwraca 'WISZACA', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'WISZACA')


\AWARYJNIE
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu AWARYJNIE
::   WE: _a - ='txt' zwraca 'AWARYJNIE', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'AWARYJNIE')


\AWARYJNA
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu AWARYJNA
::   WE: _a - ='txt' zwraca 'AWARYJNA', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'AWARYJNA')


\TODO_ERROR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu TODO_ERROR
::   WE: _a - ='txt' zwraca 'TODO_ERROR', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'TODO_ERROR')


\TODO_BREAK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu TODO_BREAK
::   WE: _a - ='txt' zwraca 'TODO_BREAK', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'TODO_BREAK')


\RETURN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu RETURN
::   WE: _a - ='txt' zwraca 'RETURN', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'RETURN')


\VERIFI
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu VERIFI
::   WE: _a - ='txt' zwraca 'VERIFI', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'VERIFI')


\VERIFI_AGAIN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu VERIFI_AGAIN
::   WE: _a - ='txt' zwraca 'VERIFI_AGAIN', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'VERIFI_AGAIN')


\BRAK_WEJ
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu BRAK_WEJ
::   WE: _a - ='txt' zwraca 'BRAK_WEJ', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'BRAK_WEJ')


\FL_CANCEL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu FL_CANCEL
::   WE: _a - ='txt' zwraca 'FL_CANCEL', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'FL_CANCEL')


\FL_DONE
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu DO_ZAKONCZENIA
::   WE: _a - ='txt' zwraca 'DO_ZAKONCZENIA', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'FL_DONE')


\FL_ERROR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu FL_ERROR
::   WE: _a - ='txt' zwraca 'FL_ERROR', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'FL_ERROR')


\FL_KEEP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu FL_KEEP
::   WE: _a - ='txt' zwraca 'FL_KEEP', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'FL_KEEP')


\BLAD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu BLAD
::   WE: _a - ='txt' zwraca 'BLAD', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'BLAD')


\on_esc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła pozwala wybrać sposób zachowania czynności po rezygnacji (ESC).
::       Formuła może być wykorzystywana jako argument atrybutu 'fml_val' parametru czynności.
::   WE: [_a] [STRING] -  Wartość początkowa w oknie, wartość na której będzie ustawiony kursor.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:=tab_tmp(1,
   'WART','STRING[6]','Kod'@,
   'OPIS','SYS_MEMO','Opis'@
);
_add:="
   _a.blank();
   _a.WART:=_b;
   _a.memo_set(_c,'OPIS');
   _a.add() & _a.memo_put(,'OPIS')
";
_add(_TAB,'DONE','Czynność zostanie zakończona, a parametry wyjściowe przyjmą wartości puste.');
_add(_TAB,'KEEP','Czynność zostanie odłożona na listę zadań aby użytkownik mógł do niej wrócić.');
_add(_TAB,'CANCEL',
   'Jeśli czynność jest pierwszą w procesie to po zakończeniu formuły głównej instancja czynności zostanie usunięta. '
   'Jeśli czynność jest kolejną w procesie to otrzyma status oczekująca i pozostanie na liście zadań - '
   'czyli tak jak dla KEEP.'
);
_add(_TAB,'ERROR','Czynność zostanie zakończona a proces zatrzymywany z ustawioną flagą błędu.');

_jest:=var_pres('_a')=type_of('') & _TAB.find_key(_a,);
{? _jest
|| _ret:=_TAB.WART
?};

_ws:=_TAB.mk_sel('Sposób działania przy rezygnacji'@,,,,,,6,,'U');
_TAB.win_fld(_ws,,'WART',,,,,,,,'Kod sposobu zachowania czynności'@);
_TAB.win_fld(_ws,,'OPIS',,,80,,,,,'Opis sposobu zachowania czynności'@);
_TAB.win_act(_ws,,'Formuła','Wybierz'@@,,,"sel_exit()",,1,,,,'W');
_TAB.win_act(_ws,,'Szukaj');
_TAB.win_act(_ws,,'Kolejność');
_TAB.win_sel(_ws);
_we:=_TAB.mk_edit('Sposób działania przy rezygnacji'@);
_TAB.win_esep(_we,'Dane podstawowe'@);
_TAB.win_efld(_we,,'WART',,,80);
_TAB.win_efld(_we,,'OPIS',,,80,-4);
_TAB.win_edit(_we);
{? _TAB.select(,1,-1)
|| _ret:=_TAB.WART
|? ~_jest
|| _ret:=''
?};
_ret


\ANULOWANA
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca BI_STAT.ref dla statusu ANULOWANA
::   WE: _a - ='txt' zwraca 'ANULOWANA', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'ANULOWANA')


\bistat_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: Zwraca listę statusów. W razie potrzeby buduje nową listę
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__Status')< 100
||
::   'OCZEKUJACY',,'WISZACA','BRAK_WEJ',

   __Status:=obj_new(
   'TODO_ERROR','TODO_MOJE','TODO_WOLNE',
   'TODO_WYKONANE','TODO_WYK_INNY','TODO_WYK_AUTO','TODO_BRAK_UPR','TODO_BREAK',
   'VERIFI','VERIFI_AGAIN','RETURN',
   'URUCHOMIONY','URUCHOMIONA','ZAKONCZONA','OCZEKUJACA','ANULOWANA','AWARYJNA','ZAKONCZONY','AWARYJNIE',
   'BLAD','ZAWIESZONY','ZAWIESZONA','NO_ACTION',
   'FL_CANCEL','FL_DONE','FL_ERROR','FL_KEEP'
   );

   __Status.TODO_ERROR:=exec('TODO_ERROR','#bi_stat');
   __Status.TODO_MOJE:=exec('TODO_MOJE','#bi_stat');
   __Status.TODO_WOLNE:=exec('TODO_WOLNE','#bi_stat');
   __Status.TODO_WYKONANE:=exec('TODO_WYKONANE','#bi_stat');
   __Status.TODO_WYK_INNY:=exec('TODO_WYK_INNY','#bi_stat');
   __Status.TODO_WYK_AUTO:=exec('TODO_WYK_AUTO','#bi_stat');
:: status TODO_BRAK_UPR obecnie nie wykorzystywany
   __Status.TODO_BRAK_UPR:=exec('TODO_BRAK_UPR','#bi_stat');
   __Status.TODO_BREAK:=exec('TODO_BREAK','#bi_stat');

   __Status.VERIFI:=exec('VERIFI','#bi_stat');
   __Status.VERIFI_AGAIN:=exec('VERIFI_AGAIN','#bi_stat');
   __Status.URUCHOMIONA:=exec('URUCHOMIONA','#bi_stat');
   __Status.URUCHOMIONY:=exec('URUCHOMIONY','#bi_stat');
   __Status.ZAKONCZONA:=exec('ZAKONCZONA','#bi_stat');
   __Status.OCZEKUJACA:=exec('OCZEKUJACA','#bi_stat');
   __Status.ANULOWANA:=exec('ANULOWANA','#bi_stat');
   __Status.AWARYJNA:=exec('AWARYJNA','#bi_stat');
   __Status.ZAKONCZONY:=exec('ZAKONCZONY','#bi_stat');
   __Status.AWARYJNIE:=exec('AWARYJNIE','#bi_stat');
   __Status.BLAD:=exec('BLAD','#bi_stat');
   __Status.ZAWIESZONY:=exec('ZAWIESZONY','#bi_stat');
   __Status.ZAWIESZONA:=exec('ZAWIESZONA','#bi_stat');
   __Status.NO_ACTION:=exec('NO_ACTION','#bi_stat');

   __Status.FL_CANCEL:=exec('FL_CANCEL','#bi_stat');
   __Status.FL_DONE:=exec('FL_DONE','#bi_stat');
   __Status.FL_ERROR:=exec('FL_ERROR','#bi_stat');
   __Status.FL_KEEP:=exec('FL_KEEP','#bi_stat');
   __Status.RETURN:=exec('RETURN','#bi_stat');
   ~~
?};
__Status


\NO_ACTION
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Zwraca BI_STAT.ref dla statusu NO_ACTION
::   WE: _a - ='txt' zwraca 'BLAD', <>'txt' zwraca BI_STAT.ref
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('string') || _a:='ref' ?};
exec('stat','#bi_stat',_a,'NO_ACTION')


\translate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: Tłumaczy statusy
::   WE: _a - język
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_lang:=_a;

_set:='bi_stat';

TRANSTMP.index(TRANSTMP_NDX);
TRANSTMP.prefix(_lang,_set);
{? ~TRANSTMP.first()
||
   BI_STAT.cntx_psh();
   BI_STAT.prefix();
   _loop:=BI_STAT.first();
   {!
   |? _loop
   |!
      TRANSTMP.LANG:=_lang;
      TRANSTMP.SET:=_set;
      TRANSTMP.ITEM:=$BI_STAT.ref();
      TRANSTMP.TRAN:=translate(($('\''+BI_STAT.NAME+'\''+'@@'))(),0);
      TRANSTMP.add(1);
      _loop:=BI_STAT.next()
   !};
   BI_STAT.cntx_pop()
?}

:Sign Version 2.0 jowisz:1048 2020/10/16 15:20:22 1e44ef4ee99d7e0f5a557173e99067f5f799cf64adff708c2a85c36932fe49bc8debb77b48683044c0eba512ee99190bd48edd205178bfbeaa9332b1b56d800b232954892fd05674851c43d52cf8e5c5ff4b24028f1f541a66c753eefe3b2d3e1dff9d2ec8111bf463d8fcd7c00d06fabfdbd759476d5a75dbadae978f2cabb7
