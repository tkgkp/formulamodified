:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #b_stats.fml
:: Utworzony: 12.07.2016
:: Autor: WH
::======================================================================================================================
:: Zawartość: Formuły do obsługi statystyk wykorzystania elementów mechanizmów procesowości
::======================================================================================================================


\add_usehis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Dodaje do tabeli B_USEHIS jeden rekord lub aktualizuję istniejący
::   WE: _a - USERS.ref - użytkownik uruchamiający
::       _b - obj_new - bufor B_ACTION - czynność która jest uruchamiana
::       _c - INTEGER - 0/1 - czy uruchomione jako microproces?
::       [_d] - REAL - tm_stamp uruchomienia, jeśli nie podany to aktualny
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_user:=_a;
_buf_act:=_b;
_micro:=_c;

_tm_start:=SYSLOG.tm_stamp();
_startd:=date();
{? var_pres('_d')=type_of(0)
|| _tm_start:=_d;
   _startd:=exec('tm_stamp2date','#tm_stamp',_tm_start)
?};

_result:=0;
_can_continue:=1;

USERS.cntx_psh();
USERS.prefix();
:: Otwieram aktualną maskę
_rok:=($(_startd~1))+2;
_miesiac:=form(_startd~2,-2);
_mask:='b_uh'+_rok+_miesiac;
B_USEHIS.use(_mask);

{? USERS.seek(_user)
||
   B_USEHIS.cntx_psh();
   B_USEHIS.index('USER');
   B_USEHIS.prefix(REF.FIRMA,USERS.GUID,_buf_act.UID,_startd);
   {? B_USEHIS.first()
   ||
      {? B_USEHIS.r_lock(1,0,0)
      ||
::       Jest rekord - aktualizuje liczniki
         {? _micro>0
         || B_USEHIS.COUNT_NP+=1
         || B_USEHIS.COUNT_PR+=1
         ?};
         B_USEHIS.COUNTER+=1;
         _can_continue:=B_USEHIS.put();
         B_USEHIS.r_unlock()
      ?}
   ||
::    Nie ma rekordu - zakładam nowy
      B_USEHIS.blank();
      B_USEHIS.FIRMA:=REF.FIRMA;
      B_USEHIS.USR_KOD:=USERS.KOD;
      B_USEHIS.USR_GUID:=USERS.GUID;
      B_USEHIS.USR_DANE:=USERS.DANE;
      B_USEHIS.ACT_UID:=_buf_act.UID;
      B_USEHIS.ACT_NAME:=_buf_act.NAME;
      B_USEHIS.DATE:=_startd;
      B_USEHIS.TM_STAMP:=_tm_start;
      {? _micro>0
      || B_USEHIS.COUNT_NP:=1
      || B_USEHIS.COUNT_PR:=1
      ?};
      B_USEHIS.COUNTER:=1;
      _can_continue:=B_USEHIS.add()
   ?};
   B_USEHIS.cntx_pop();
   ~~
?};
USERS.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\clear_stats
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Czyści rekordy B_USEHIS we wszystkich maskach dla wszystkich użytkowników i wszystkich czynności
::   WE: [_a] - STRING - UID czynności dla której wyczyścić statystyki
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_act_uid:='';
{? var_pres('_a')=type_of('')
|| _act_uid:=_a
?};

_result:=0;
_can_continue:=1;

B_USEHIS.cntx_psh();
_args:=obj_new('ACT_UID');
_args.ACT_UID:=_act_uid;

_fml:="
   _result:=0;
   _can_continue:=1;
   _args:=_b;

   B_USEHIS.cntx_psh();
   {? _args.ACT_UID<>''
   || B_USEHIS.index('ACTION');
      B_USEHIS.prefix(REF.FIRMA,_args.ACT_UID)
   || B_USEHIS.index('USER');
      B_USEHIS.prefix(REF.FIRMA)
   ?};

   {? B_USEHIS.first()
   || {!
      |?
         _can_continue:=B_USEHIS.del(,1);
         B_USEHIS.first() & _can_continue>0
      !}
   ?};
   B_USEHIS.cntx_pop();
   {? _can_continue>0
   || _result:=1
   ?};
   _result
";

_can_continue:=exec('for_each_mask','#table',B_USEHIS,_fml,,,_args,1);

B_USEHIS.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\env
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Środowisko modułu statystyk
::   WY: obj_new()
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
::UWAGA: _fld, i _mth to formułki pomocnicze, zeby wygodniej tworzyć tablicę i komentować poszczególne jej elementy
::       powiedzmy, że to będzie pole
         _fld:="31+form(_a)";
::       powiedzmy, że to będzie metoda
         _mth:="31+form(_a)";

_env:=obj_new(
   _fld('MODE','Tryb wyświetlania: USER - od strony użytkownika, ACTION_ALL - od strony czynności')

   ,_fld('TM_START','Zakres od pobieranych statystyk ')
   ,_fld('TM_END','Zakres do pobieranych statystyk')

   ,_fld('USER','Użytkownik dla którego pobierać statystyki')
   ,_fld('USR_GUID','Użytkownik dla którego pobierać statystyki')
   ,_fld('USR_KOD','Użytkownik dla którego pobierać statystyki')
   ,_fld('USR_DANE','Użytkownik dla którego pobierać statystyki')

   ,_fld('B_ACTION','Czynnność dla której pobierać statystyki')
   ,_fld('ACT_UID','Czynnność dla której pobierać statystyki')
   ,_fld('ACT_NAME','Czynnność dla której pobierać statystyki')

   ,_fld('SEL_ACT','Zaznaczona czynnośc')
   ,_fld('SEL_DATE','Zaznaczona data')
   ,_fld('SEL_PROC','Zaznaczony proces')
   ,_fld('SEL_PREL','Zaznaczony element procesu')
   ,_fld('SEL_BIPREL','Zaznaczona instancha elementu procesu')

   ,_fld('CHART_COLOR','Kolor słupków na wykresie')
   ,_fld('CHART_COLOR_OVER','Kolor słupków na wykresie przekraczających normę')
   ,_fld('CHART_COLOR_UNDER','Kolor słupków na wykresie poniżej normy')

   ,_fld('PLAN_MODE','Tryb ustalania normy dla akcji grupowej')

   ,_fld('F_ACT_SIZE','Rozmiar dziedziny filtra tabeli .TAB_ACTIONS')
   ,_fld('F_ACT_FIRST','Ref pierwszego rekordu w filtrze tabeli .TAB_ACTIONS')

   ,_fld('F_PROC_ACTIVE','Czy filtr aktywny w tabeli .TAB_PROC')
   ,_fld('F_PROC_SIZE','Rozmiar dziedziny filtra tabeli .TAB_PROC')
   ,_fld('F_PROC_FIRST','Ref pierwszego rekordu w filtrze tabeli .TAB_PROC')

   ,_fld('F_PREL_ACTIVE','Czy filtr aktywny w tabeli .TAB_PREL')
   ,_fld('F_PREL_SIZE','Rozmiar dziedziny filtra tabeli .TAB_PREL')
   ,_fld('F_PREL_FIRST','Ref pierwszego rekordu w filtrze tabeli .TAB_PREL')

   ,_fld('F_BIPREL_ACTIVE','Czy filtr aktywny w tabeli .TAB_BIPREL')
   ,_fld('F_BIPREL_SIZE','Rozmiar dziedziny filtra tabeli .TAB_BIPREL')
   ,_fld('F_BIPREL_FIRST','Ref pierwszego rekordu w filtrze tabeli .TAB_BIPREL')

   ,_fld('MAX_ACTIONS','Ile maksymalnie czynności ładować')
   ,_fld('MAX_USERS','Ile maksymalnie użytkowników dla czynności ładować')

   ,_fld('MAX_PROCESSES','Ile maksymalnie procesów ładować')
   ,_fld('MAX_PRELS','Ile maksymalnie elementów procesu ładować')
   ,_fld('MAX_DEVIATION','Procent odchyłki od średniej poniżej której nie wczytuję instancji')

   ,_fld('SAME_DAY','Powoduje że są przetwarzane tylko instancje startujące i kończące się tego samego dnia')
   ,_fld('DAYS','Nazwy dni tygodnia')

   ,_fld('JM_VALS','Jednostki miary - wartości')
   ,_fld('JM_NAMES','Jednostki miary - nazwy')

   ,_fld('DOKL','Dokładność zaokrąglania wartości')
   ,_fld('DISABLE_PREL','Do wyłączania okienek jak górne okno ma pustą dziedzinę')
   ,_fld('DISABLE_BIPREL','Do wyłączania okienek jak górne okno ma pustą dziedzinę')

:: tabele tymczasowe
   ,_fld('TAB_DATY','Tabelka tymczasowa z datami')
   ,_fld('TAB_ACTIONS','Tabelka tymczasowa z czynnościami')
   ,_fld('TAB_USERS','Tabelka tymczasowa z użytkownikami')
   ,_fld('TAB_USR_COLORS','Tabelka tymczasowa z kolorami użytkowników')
   ,_fld('TAB_PROC','Tabelka tymczasowa z procesami')
   ,_fld('TAB_PREL','Tabelka tymczasowa z elementami procesów')
   ,_fld('TAB_BIPREL','Tabelka tymczasowa z instancjami elementów')
   ,_fld('TAB_PROC_DUR','Tabelka tymczasowa z czasami trwania instancji procesów')
   ,_fld('TAB_PROC_MED','Tabelka tymczasowa z medianami procesów')
   ,_fld('TAB_PREL_DUR','Tabelka tymczasowa z czasami trwania instancji elementów')
   ,_fld('TAB_PREL_MED','Tabelka tymczasowa z medianami elementów')

   ,_fld('TAB_JM','Tabelka tymczasowa z datami')

:: indeksy tabel
   ,_fld('NDX_ACT_UID','Indeks tabeli tymczasowej .TAB_ACTIONS')
   ,_fld('NDX_ACT_COUNT','Indeks tabeli tymczasowej .TAB_ACTIONS')

   ,_fld('NDX_USR_DATE','Indeks tabeli tymczasowej .TAB_USERS')
   ,_fld('NDX_USR_UID','Indeks tabeli tymczasowej .TAB_USERS')
   ,_fld('NDX_USR_USER','Indeks tabeli tymczasowej .TAB_USERS')
   ,_fld('NDX_USR_COUNT','Indeks tabeli tymczasowej .TAB_USERS')

   ,_fld('NDX_DATY_DATE','Indeks tabeli tymczasowej .TAB_DATY')
   ,_fld('NDX_DATY_UID','Indeks tabeli tymczasowej .TAB_DATY')
   ,_fld('NDX_DATY_COUNT','Indeks tabeli tymczasowej .TAB_DATY')

   ,_fld('NDX_PROC_REF','Indeks tabeli tymczasowej .TAB_PROC')
   ,_fld('NDX_PROC_DUR','Indeks tabeli tymczasowej .TAB_PROC')
   ,_fld('NDX_PROC_CHART','Indeks tabeli tymczasowej .TAB_PROC')
   ,_fld('NDX_BIPREL_REF','Indeks tabeli tymczasowej .TAB_BIPREL')
   ,_fld('NDX_BIPREL_DUR','Indeks tabeli tymczasowej .TAB_BIPREL')
   ,_fld('NDX_BIPREL_PREL','Indeks tabeli tymczasowej .TAB_BIPREL')
   ,_fld('NDX_BIPREL_CHART','Indeks tabeli tymczasowej .TAB_BIPREL')
   ,_fld('NDX_PREL_REF','Indeks tabeli tymczasowej .TAB_PREL')
   ,_fld('NDX_PREL_DUR','Indeks tabeli tymczasowej .TAB_PREL')
   ,_fld('NDX_PREL_CHART','Indeks tabeli tymczasowej .TAB_PREL')
   ,_fld('NDX_PROC_DUR_MED1','Indeks tabeli tymczasowej .TAB_PROC_DUR')
   ,_fld('NDX_PROC_DUR_MED2','Indeks tabeli tymczasowej .TAB_PROC_DUR')
   ,_fld('NDX_PROC_DUR_MED3','Indeks tabeli tymczasowej .TAB_PROC_DUR')
   ,_fld('NDX_PROC_DUR_MED4','Indeks tabeli tymczasowej .TAB_PROC_DUR')
   ,_fld('NDX_PROC_DUR_MED5','Indeks tabeli tymczasowej .TAB_PROC_DUR')
   ,_fld('NDX_PREL_DUR_MED1','Indeks tabeli tymczasowej .TAB_PREL_DUR')
   ,_fld('NDX_PREL_DUR_MED2','Indeks tabeli tymczasowej .TAB_PREL_DUR')
   ,_fld('NDX_PREL_DUR_MED3','Indeks tabeli tymczasowej .TAB_PREL_DUR')

   ,_fld('NDX_JM_SYM','Indeks tabeli tymczasowej .TAB_JM')
   ,_fld('NDX_JM_VAL','Indeks tabeli tymczasowej .TAB_JM')

:: Okna
   ,_fld('WIN_MAIN','Główne okno grupowe')
   ,_fld('WIN_DATY','Okno wertowania dat')
   ,_fld('WIN_ACTIONS','Okno wertowania wszystkich czynności')
   ,_fld('WIN_USERS','Okno wertowania użytkowników')
   ,_fld('WIN_PREL','Okno wertowania elementów procesu')
   ,_fld('WIN_PROC','Okno wertowania wszystkich procesów')
   ,_fld('WIN_BIPROC','Okno wertowania instancji')
   ,_fld('WIN_BIPREL','Okno wertowania instancji elementów')

:: Identyfikatory okien
   ,_fld('wid_main','Identyfikator okna')
   ,_fld('wid_main2','Identyfikator okna')
   ,_fld('wid_daty','Identyfikator okna')
   ,_fld('wid_users','Identyfikator okna')
   ,_fld('wid_actions','Identyfikator okna')
   ,_fld('wid_proc','Identyfikator okna')
   ,_fld('wid_prel','Identyfikator okna')
   ,_fld('wid_biprel','Identyfikator okna')

:: Identyfikatory kontrolek
   ,_fld('ctr_id_all','Identyfikator kontrolki')
   ,_fld('ctr_id_act','Identyfikator kontrolki')
   ,_fld('ctr_id_inst','Identyfikator kontrolki')
   ,_fld('ctr_id_inst_act','Identyfikator kontrolki')
   ,_fld('ctr_id_btn','Identyfikator kontrolki')
   ,_fld('ctr_id_btn2','Identyfikator kontrolki')
   ,_fld('ctr_chart_all','Identyfikator elementu kontrolki')
   ,_fld('ctr_chart_act','Identyfikator elementu kontrolki')
   ,_fld('ctr_chart_inst','Identyfikator elementu kontrolki')
   ,_fld('ctr_chart_inst_act','Identyfikator elementu kontrolki')
   ,_fld('ctr_title_all','Identyfikator elementu kontrolki')
   ,_fld('ctr_title_inst','Identyfikator elementu kontrolki')
   ,_fld('ctr_title_inst_act','Identyfikator elementu kontrolki')
   ,_fld('ctr_title_act','Identyfikator elementu kontrolki')
   ,_fld('ctr_field_max_act','Identyfikator elementu kontrolki')
   ,_fld('ctr_field_max_usr','Identyfikator elementu kontrolki')

   ,_fld('tit_main','Tytuł głównego okienka')
   ,_fld('tit_biproc','Tytuł okna z instancjami')

:: metody
   ,_mth('select','uruchamia wertowanie okna')
   ,_mth('clear','czyści zmienne')
   ,_mth('load','ładuje dane')
   ,_mth('reload','przeładowuje zawartość okna')
);
_env.MODE:='ACTION';
_env.TM_START:=0;
_env.TM_END:=0;
_env.PLAN_MODE:=0;

_env.SAME_DAY:=0;
_env.USER:=null();
_env.USR_GUID:='';
_env.USR_KOD:='';
_env.USR_DANE:='';

_env.DAYS:=obj_new(7);
_env.DAYS[1]:='Pn'@;
_env.DAYS[2]:='Wt'@;
_env.DAYS[3]:='Śr'@;
_env.DAYS[4]:='Czw'@;
_env.DAYS[5]:='Pt'@;
_env.DAYS[6]:='Sb'@;
_env.DAYS[7]:='Nd'@;

_env.DOKL:=4;

_env.TAB_JM:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'SYMBOL','STRING[8]','Nazwa pola 1',
   'VALUE','REAL','Wartość'
);

_jm_symbols:=exec('jm_symbols','#b_stats');
_jm_values:=exec('jm_values','#b_stats');

_env.TAB_JM.blank();
_env.TAB_JM.SYMBOL:=_jm_symbols[1];
_env.TAB_JM.VALUE:=_jm_values[1];
_env.TAB_JM.add();

_env.TAB_JM.SYMBOL:=_jm_symbols[2];
_env.TAB_JM.VALUE:=_jm_values[2];
_env.TAB_JM.add();

_env.TAB_JM.SYMBOL:=_jm_symbols[3];
_env.TAB_JM.VALUE:=_jm_values[3];
_env.TAB_JM.add();

_env.TAB_JM.SYMBOL:=_jm_symbols[4];
_env.TAB_JM.VALUE:=_jm_values[4];
_env.TAB_JM.add();

_env.TAB_PROC_DUR:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'BI_PROC','STRING[16]','Ref BI_PROCa',
   'UID','STRING[100]','Unikalny identyfikator instancji',
   'B_PROC','STRING[16]','Ref B_PROCa',
   'DUR_RAW','REAL','Czas trwania w tm_stamp',
   'DATA','DATE','Data utworzenia',
   'TIME','TIME','Czas utworzenia',
   'DUR_JM','REAL','Czas trwania w wybranej jednostce',
   'JM','STRING[10]','Jednostka miary średniego czasu trwania',
   'CHARTUID','STRING[100]','Identyfikator kolumny dla wykresu',
   'CHARTVAL','REAL','Wartość kolumny dla wykresu',
   'KOLOR','STRING[11]','Kolor dla wykresu',
   'TOOLTIP','STRING[255]','Dymek dla wykresu',
   'CHARTTYP','INTEGER','Typ elementu na wykresie 0 słupek, 1 linia'
);

_env.TAB_PREL_DUR:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'BI_PREL','STRING[16]','Ref BI_PRELa',
   'UID','STRING[100]','Unikalny identyfikator instancji',
   'B_PREL','STRING[16]','Ref B_PRELa',
   'DUR_RAW','REAL','Czas trwania w tm_stamp' ,
   'DUR_JM','REAL','Czas trwania w wybranej jednostce'
);
_env.TAB_PROC_MED:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'B_PROC','STRING[16]','Ref B_PROCa',
   'MED_RAW','REAL','Mediana czasu trwania procesu w tm_stamp',
   'MED_JM','REAL','Mediana czasu trwania procesu w wybranej jednostce'
);
_env.TAB_PREL_MED:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'B_PREL','STRING[16]','Ref B_PRELa',
   'MED_RAW','REAL','Mediana czasu trwania elementu w tm_stamp',
   'MED_JM','REAL','Mediana czasu trwania procesu w wybranej jednostce'
);


_env.MAX_ACTIONS:=0;
_env.MAX_USERS:=0;

_env.SEL_ACT:='';
_env.SEL_DATE:=date();
_env.SEL_PROC:='';
_env.SEL_PREL:='';
_env.SEL_BIPREL:='';

_env.CHART_COLOR:='77:90:98';
_env.CHART_COLOR_OVER:=Color.fnd_kol('B_STATS#01#02')-1;
_env.CHART_COLOR_UNDER:=Color.fnd_kol('B_STATS#01#01')-1;

_env.B_ACTION:=null();

_env.ACT_UID:='';
_env.ACT_NAME:='';

_env.TAB_DATY:=~~;
_env.TAB_ACTIONS:=~~;
_env.TAB_USERS:=~~;
_env.TAB_USR_COLORS:=~~;

_env.NDX_ACT_UID:=~~;
_env.NDX_ACT_COUNT:=~~;
_env.NDX_USR_DATE:=~~;
_env.NDX_USR_UID:=~~;
_env.NDX_USR_COUNT:=~~;
_env.NDX_DATY_DATE:=~~;
_env.NDX_DATY_UID:=~~;
_env.NDX_DATY_COUNT:=~~;
_env.NDX_PROC_REF:=~~;
_env.NDX_PROC_DUR:=~~;
_env.NDX_BIPREL_REF:=~~;
_env.NDX_BIPREL_DUR:=~~;
_env.NDX_BIPREL_PREL:=~~;
_env.NDX_PREL_REF:=~~;
_env.NDX_PREL_DUR:=~~;

_env.WIN_MAIN:='';
_env.WIN_DATY:='';
_env.WIN_USERS:='';
_env.WIN_ACTIONS:='';
_env.WIN_PREL:='';
_env.WIN_BIPREL:='';
_env.WIN_PROC:='';
_env.WIN_BIPROC:='';

_env.wid_main:='#b_use_main_usr';
_env.wid_main2:='#b_use_main_prc';
_env.wid_daty:='#b_use_role';
_env.wid_users:='#b_use_users';
_env.wid_actions:='#b_use_act_all';
_env.wid_proc:='#b_use_proc';
_env.wid_prel:='#b_use_prel';
_env.wid_biprel:='#b_use_biprel';

_env.ctr_id_all:='b_usehist_all';
_env.ctr_id_act:='b_usehist_act';
_env.ctr_id_inst:='b_usehist_inst';
_env.ctr_id_inst_act:='b_usehist_i_ac';
_env.ctr_id_btn:='b_usehist_btn';
_env.ctr_id_btn2:='b_usehist_btn2';
_env.ctr_chart_all:='2ib5hmj93fga1bn9n3e73m0chj3g3';
_env.ctr_chart_act:='kh4139j8381n53edm1lkj64dfl84';
_env.ctr_chart_inst:='kh4139j8381n53edm1lkj64dfl84';
_env.ctr_chart_inst_act:='1fja996a5c4dhhd5g3927a5mb77fb';

_env.ctr_field_max_act:='max_act';
_env.ctr_field_max_usr:='max_usr';

_env.ctr_title_all:='1fl7b938a96fhnk40ljmdm2i8l799';
_env.ctr_title_act:='43kh02mjm97nhf8eg64m3dlca3l8';
_env.ctr_title_inst:='43kh02mjm97nhf8eg64m3dlca3l8';
_env.ctr_title_inst_act:='272nn2j53lbh4kmil494cc0nm3ai8';

_env.tit_main:='Statystyki czynności';

_env.clear:="

:: _a - INTEGER - [0]/1 - czy robić grp_disp głównego okna?
   _grp_disp:=0;
   {? var_pres('_a')=type_of(0)
   || _grp_disp:=_a
   ?};

   params_set(params_get());
   .WIN_MAIN:='';

   {? var_pres('TAB_DATY',.)>100
   || .TAB_DATY.erase()
   ?};
   {? var_pres('TAB_ACTIONS',.)>100
   || .TAB_ACTIONS.erase()
   ?};
   {? var_pres('TAB_USERS',.)>100
   || .TAB_USERS.erase()
   ?};
   {? var_pres('TAB_PREL',.)>100
   || .TAB_PREL.erase()
   ?};
   {? var_pres('TAB_PROC',.)>100
   || .TAB_PROC.erase()
   ?};
   {? var_pres('TAB_BIPREL',.)>100
   || .TAB_BIPREL.erase()
   ?};
::   {? var_pres('TAB_USR_COLORS',.)>100
::   || .TAB_USR_COLORS.erase()
::   ?};
   {? var_pres('TAB_PROC_MED',.)>100
   || .TAB_PROC_MED.erase()
   ?};
   {? var_pres('TAB_PREL_MED',.)>100
   || .TAB_PREL_MED.erase()
   ?};
   {? var_pres('TAB_PROC_DUR',.)>100
   || .TAB_PROC_DUR.erase()
   ?};
   {? var_pres('TAB_PREL_DUR',.)>100
   || .TAB_PREL_DUR.erase()
   ?};

   {? _grp_disp>0
   || {? .MODE='ACTION_ALL'
      || grp_disp(.TAB_ACTIONS,.WIN_ACTIONS);
         ~~
      |? .MODE='PROC_ALL'
      || grp_disp(.TAB_PROC,.WIN_PROC);
         ~~
      ?}
   ?};
   .SEL_ACT:='';
   .SEL_PROC:='';
   .SEL_PREL:='';
   .SEL_DATE:=date(0,0,0);
   .F_ACT_SIZE:=0;
   .F_ACT_FIRST:=null();
   .F_PROC_ACTIVE:=0;
   .F_PROC_SIZE:=0;
   .F_PROC_FIRST:=null();
   .F_PREL_ACTIVE:=0;
   .F_PREL_SIZE:=0;
   .F_PREL_FIRST:=null();
   .F_BIPREL_ACTIVE:=0;
   .F_BIPREL_SIZE:=0;
   .F_BIPREL_FIRST:=null();
   ~~
";

_env.load:="
   params_set(params_get());
   {? .MODE='ACTION_ALL'
   ||
::    Ładujemy dane
      exec('load_actions','#b_stats',.);
       ~~
   |? .MODE='USER'
   ||
::    Ładujemy dane
      ~~
   |? .MODE='PROC_ALL'
   ||
::    Ładujemy dane
      exec('load_procesy','#b_stats',.);
      ~~
   ?};
   ~~
";
:: Czary, żeby skaner tłumaczeń to złapał, nie usuwać
'Statystyki użycia czynności'@;
'Analiza wydajności procesów'@;

_env.select:="
   params_set(params_get());
   B_ROLE.cntx_psh();
   B_ACTION.cntx_psh();
   USERS.cntx_psh();
   params_set(params_get());

:: Tworzymy tabele tymczasowe
   exec('tab_daty','#b_stats',.);
   .TAB_ACTIONS:=exec('tab_actions','#b_stats',.);
   .TAB_USERS:=exec('tab_users','#b_stats',.);
   .TAB_USR_COLORS:=exec('tab_usr_colors','#b_stats',.);

   exec('tab_prel','#b_stats',.);
   .TAB_PROC:=exec('tab_proc','#b_stats',.);
   .TAB_BIPREL:=exec('tab_biprel','#b_stats',.);

:: Tworzę indeksy tabel tymczasowych
   exec('tab_ndx','#b_stats',.);

   _result:=0;
   {!
   |?
      .reload();

      {? .MODE='ACTION_ALL'
      ||
         .tit_main:='Statystyki użycia czynności'@;

::       Tworzymy okna składowe

         .WIN_USERS:=exec('win_users','#b_stats',.,.wid_users);
         .WIN_DATY:=exec('win_daty','#b_stats',.,.wid_daty);
         .WIN_ACTIONS:=exec('win_actions','#b_stats',.,.wid_actions,.TAB_ACTIONS);

::       Tworzymy okno główne
         .WIN_MAIN:=exec('grp_make_act_all','#b_stats',.);

::       Pokazujemy okno
         _result:=.TAB_ACTIONS.select();
         ~~
      |? .MODE='USER'
      ||
         ~~
      |? .MODE='PROC_ALL'
      ||
         .tit_main:='Analiza wydajności procesów'@;

::       Tworzymy okna składowe

         .WIN_BIPREL:=exec('win_biprel','#b_stats',.,.wid_biprel);
         .WIN_PREL:=exec('win_prel','#b_stats',.,.wid_prel);
         .WIN_PROC:=exec('win_proc','#b_stats',.,.wid_proc,.TAB_PROC);

::       Tworzymy okno główne
         .WIN_MAIN:=exec('grp_make_proc_all','#b_stats',.);

::       Pokazujemy okno
         _result:=.TAB_PROC.select();
         ~~

      ?};
      .clear();
      _result<>0
   !};

   B_ACTION.cntx_pop();
   USERS.cntx_pop();
   B_ROLE.cntx_pop();
   _result
";

_env.reload:="
   params_set(params_get());
:: _a - INTEGER - [0]/1 - czy robić grp_disp głównego okna?
   _grp_disp:=0;
   {? var_pres('_a')=type_of(0)
   || _grp_disp:=_a
   ?};

   exec('jm_init','#b_stats');

   .clear(_grp_disp);
   .load();

   {? _grp_disp>0
   || {? .MODE='ACTION_ALL'
      || {? .TAB_ACTIONS.f_active()>0
         || .TAB_ACTIONS.f_rfresh()
         ?};
         grp_disp(.TAB_ACTIONS,.WIN_ACTIONS,1);
         exec('refresh_chart_all','#b_stats');
         exec('refresh_chart_act','#b_stats');

         exec('set_active_win','#desktop','',.ctr_id_all,3);
         ~~
      |? .MODE='USER'
      ||
         ~~
      |? .MODE='PROC_ALL'
      ||
         {? .TAB_PROC.f_active()>0
         || .TAB_PROC.f_rfresh()
         ?};
         grp_disp(.TAB_PROC,.WIN_PROC,1);
         exec('refresh_chart_all','#b_stats');
         exec('refresh_chart_act','#b_stats');

         exec('set_active_win','#desktop','',.ctr_id_all,3);
         ~~
      ?}
   ?};
   ~~
";
_env


\stats_act_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Wyświetla statystyki dla wszystkich czynności w podanym zakresie czasu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:='';
_can_continue:=1;

B_ACTION.cntx_psh();
B_ACTION.prefix();
:: Pytanie o zakres pobierania informacji
_zakres:=exec('define_zakres','#b_history','Z','Statystyka użycia'@);
{? _zakres.TM_START>0 | _zakres.TM_END>0
||
   _env:=exec('env','#b_stats');
   params_set('env',_env);
   _env.MODE:='ACTION_ALL';
   _env.TM_START:=_zakres.TM_START;
   _env.TM_END:=_zakres.TM_END;
   _env.select()
?};
B_ACTION.cntx_pop();
win_activate('<');
_result


\zakres_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Akcja zakres w oknie
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

:: Pytanie o zakres pobierania informacji
_what:='???';
_ctr:='';
{? _env.MODE='ACTION_ALL'
|| _what:='Statystyka użycia czynności'@;
   _ctr:=_env.ctr_id_btn
|? _env.MODE='PROC_ALL'
|| _what:='Analiza wydajności procesów'@;
   _ctr:=_env.ctr_id_btn2
?};
_zakres:=exec('define_zakres','#b_history',BPMN.ZAK_KIND,_what,BPMN.ZAK_DATA,BPMN.ZAK_OD,BPMN.ZAK_DO);
{? _zakres.TM_START>0 | _zakres.TM_END>0
|| exec('set_enabled','#desktop','',_ctr,'',0);
   _env.TM_START:=_zakres.TM_START;
   _env.TM_END:=_zakres.TM_END;
   exec('refresh_data','#b_stats');
   exec('chart_title_main','#b_stats');
   exec('set_enabled','#desktop','',_ctr,'',1);
   ~~
?};
~~


\stats_proc_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Wyświetla statystyki dla wszystkich procesów w podanym zakresie czasu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------

_result:='';
_can_continue:=1;

B_ACTION.cntx_psh();
B_ACTION.prefix();
:: Pytanie o zakres pobierania informacji
_zakres:=exec('define_zakres','#b_history','Z','Statystyka użycia'@);
{? _zakres.TM_START>0 | _zakres.TM_END>0
||
   _env:=exec('env','#b_stats');
   params_set('env',_env);
   _env.MODE:='PROC_ALL';
   _env.TM_START:=_zakres.TM_START;
   _env.TM_END:=_zakres.TM_END;
   _env.select()
?};
B_ACTION.cntx_pop();
_result


\tab_daty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy tabelkę dat w zakresie czasu
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_env.TAB_DATY:=tab_tmp(2,
:: 'POLE','TYP','Nazwa w oknie',
   'ACT_UID','STRING[12]','Symbol czynności',
   'DATE','DATE','Data',
   'SYMBOL','STRING[20]','Symbol',
   'COUNTER','REAL','Licznik',
   'COUNT_NP','REAL','Licznik nieprocesowy',
   'COUNT_PR','REAL','Licznik procesowy'
);
~~


\tab_actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy tabelkę czynności w zakresie czasu
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_result:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'ACT_UID','STRING[12]','Symbol czynności',
   'ACT_NAME','STRING[40]','Nazwa czynności',
   'COUNTER','REAL','Licznik',
   'COUNT_NP','REAL','Licznik nieprocesowy',
   'COUNT_PR','REAL','Licznik procesowy',
   'KOLOR','STRING[11]','Kolor dla wykresu',
   'TOOLTIP','STRING[255]','Dymek dla wykresu',
   'FILTER','INTEGER','Czy znajduje się w dziedzinie filtra',
   'CHARTUID','STRING[100]','Identyfikator kolumny dla wykresu',
   'CHARTVAL','REAL','Wartość kolumny dla wykresu'
);
_result


\tab_users
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy tabelkę użytkowników w zakresie czasu
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: tab_tmp
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_result:=tab_tmp(3,
   'ACT_UID','STRING[12]','Unikalny identyfikator czynności',
   'DATE','DATE','Data',
   'USR_GUID','IDTIME','Unikalny identyfikator użytkownika',
   'USR_KOD','STRING[10]','Kod użytkownika',
   'USR_DANE','STRING[50]','Dane użytkownika',
   'ACT_NAME','STRING[30]','Nazwa czynności',
   'COUNTER','REAL','Licznik',
   'COUNT_NP','REAL','Licznik nieprocesowy',
   'COUNT_PR','REAL','Licznik procesowy',
   'KOLOR','STRING[11]','Kolor dla wykresu',
   'COLORCOL','STRING[5]','Kolumna wyświetlająca kolor',
   'TOOLTIP','STRING[255]','Dymek dla wykresu',
   'FILTER','INTEGER','Czy znajduje się w dziedzinie filtra',
   'DATE_STR','STRING[20]','Data w postaci stringa',
   'CHARTUID','STRING[100]','Identyfikator kolumny dla wykresu',
   'CHARTVAL','REAL','Wartość kolumny dla wykresu'
);
_result


\tab_usr_colors
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy tabelkę kolorów dla użytkowników
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: tab_tmp
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_result:=tab_tmp(1,
   'USR_GUID','IDTIME','Unikalny identyfikator użytkownika',
   'KOLOR','STRING[11]','Kolor dla wykresu'
);
_result


\win_users
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy okno wertowania użytkowników w zakresie czasu
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::       _b - STRING - identyfikator okna
::   WY: STRING - uchwyt do okna
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_env:=_a;
_wid:=_b;

_tab:=_env.TAB_USERS;

_title:='Użytkownicy';

_wer:=_tab.mk_sel(_title,'P',0,_wid,1,1,,,'U');

_tab.win_fld(_wer,,'USR_KOD'  ,,,10,,,'Użytkownik'@,0);
_tab.win_fld(_wer,,'USR_DANE' ,,,40,,,'Dane użytkownika'@,0);

_tab.fld_attr('KOLOR',2);
_tab.fld_attr('TOOLTIP',2);

_tab.win_fld(_wer,,'COLORCOL',,,5,,,'Kolor'@);
_fml:="
   _result:='';
   {? cur_tab(1,1).KOLOR<>''
   || _result:=cur_tab(1,1).KOLOR+','+cur_tab(1,1).KOLOR
   ?}
";
_tab.fld_fml('COLORCOL','BEFORE_DISPLAY',_fml);

_tab.win_fld(_wer,,'COUNTER'  ,,,10,0,,'Liczba uruchomień'@,0);

::_fb:="exec('legenda','color','@B_STATS#01')";
::_tab.win_act(_wer,,'Formuła','Legenda'@,,,_fb);

_tab.win_act(_wer,,'Kolejność');
::_tab.win_act(_wer,,'Rekord',,,,"exec('colorizer','#b_stats')");

_tab.win_sel(_wer);
_wer


\win_daty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy okno wertowania dat w zakresie czasu
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::       _b - STRING - identyfikator okna
::   WY: STRING - uchwyt do okna
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_env:=_a;
_wid:=_b;

_tab:=_env.TAB_DATY;

_title:='Dni użycia czynności';

_wer:=_tab.mk_sel(_title,'P',0,_wid,1,1,,,'U');

_tab.win_fld(_wer,,'SYMBOL' ,,,15,,,'Symbol'@,0);
_tab.win_fld(_wer,,'COUNTER',,,10,0,,'Liczba uruchomień'@,0);

::_fb:="exec('legenda','color','@B_STATS#01')";
::_tab.win_act(_wer,,'Formuła','Legenda'@,,,_fb);

_tab.win_act(_wer,,'Kolejność');
::_tab.win_act(_wer,,'Rekord',,,,"exec('colorizer','#b_stats')");

_tab.win_sel(_wer);
_wer


\win_actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy okno wertowania czynności w zakresie czasu
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::       _b - STRING - identyfikator okna
::       _c - tab_tmp - tabelka której utworzyć okno
::   WY: STRING - uchwyt do okna
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_wid:=_b;
_tab:=_c;

_title:='Czynności w okresie %1 - %2'@[exec('to_string','#tm_stamp',_env.TM_START,1),exec('to_string','#tm_stamp',_env.TM_END,1)];

_wer:=_tab.mk_sel(_title,'P',0,_wid,1,1,,,'U');

_tab.win_fld(_wer,,'ACT_UID' ,,,12,,,'Symbol czynności'@,0);
_tab.win_fld(_wer,,'ACT_NAME',,,30,,,'Nazwa czynności'@,0);
_tab.win_fld(_wer,,'COUNTER' ,,,10,0,,'Liczba uruchomień'@,0);
_tab.win_fld(_wer,,'COUNT_PR' ,,,-10,0,,'Uruchomień procesowych'@,0);
_tab.win_fld(_wer,,'COUNT_NP' ,,,-10,0,,'Uruchomień nieprocesowych'@,0);

_tab.fld_attr('KOLOR',2);
_tab.fld_attr('TOOLTIP',2);
_tab.fld_attr('FILTER',2);

_fb:="
      params_set(params_get());
      _env:=params_get().env;
      _tab:=_env.TAB_ACTIONS;

      _can_continue:=1;
      _grp:=0;
      {? _tab.sel_size()>0
      || _grp:=1
      ?};

      {? _grp=0
      || _can_continue:=FUN.ask('Usunąć statystyki dla czynności: %1 %2?'@[_tab.ACT_UID,_tab.ACT_NAME])
      ?};

      {? _can_continue>0
      || exec('clear_stats','#b_stats',_tab.ACT_UID)
      ?};

      {? _can_continue>0 & _grp=0
      || _env.reload(1)
      ?};
      1
";
_grp1:="
   _result:=0;

   params_set(params_get());
   sel_nchk();
   _env:=params_get().env;
   _tab:=_env.TAB_ACTIONS;
   {? FUN.ask('Zaznaczone czynności: %1, czy usunąć dla nich statystyki?'@[$_tab.sel_size()])
   || KOMM.init(250,,'Usuwanie statytstyk czynności');
      _result:=1
   ?};
   _result
";

_grp2:="
   KOMM.select();
   params_set(params_get());
   _env:=params_get().env;
   _env.reload(1);
   ~~
";
_tab.win_act(_wer,0,'Formuła','&Usuń statystyki'@@,,,_fb,,,1,_grp1,_grp2,'U');

{? __develop>0
||
::   _fb:="
::      params_set(params_get());
::      _env:=params_get().env;
::      {? FUN.ask('Inicjalizować dane demo?'@)>0
::      || exec('demo','#b_stats',_env.USER);
::         _env.reload(1)
::      ?};
::      1
::   ";
::   _tab.win_act(_wer,0,'Formuła','&Demo'@@,,,_fb,,1,,,,'D');
::   _tab.win_act(_wer,1,'Formuła','&Demo'@@,,,_fb,,1,,,,'D');

   _fb:="
      params_set(params_get());
      _env:=params_get().env;
      {? FUN.ask('Czyścić statystyki?'@)>0
      || exec('clear_stats','#b_stats');
         _env.reload(1)
      ?};
      1
   ";
   _tab.win_act(_wer,0,'Menu','&Funkcje'@@,,,,,,,,,'F');
   _tab.win_act(_wer,1,'Menu','&Funkcje'@@,,,,,,,,,'F');
   _tab.win_act(_wer,0,'Formuła','&Czyść wszystkie statystyki'@@,'#F',,_fb,,,,,,'C');
   _tab.win_act(_wer,1,'Formuła','&Czyść wszystkie statystyki'@@,'#F',,_fb,,,,,,'C');
   ~~
?};




::_fb:="exec('legenda','color','@B_STATS#01')";
::_tab.win_act(_wer,,'Formuła','Legenda'@,,,_fb);

_tab.win_act(_wer,,'Kolejność',,,,,"params_exec('refresh_chart_all','#b_stats')");
::_tab.win_act(_wer,,'Rekord',,,,"exec('colorizer','#b_stats')");

_tab.win_sel(_wer);
_wer


\colorizer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Akcja Rekord przed w oknach statystyk
::   WY: STRING
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_result:='';
_result


\grp_make_act_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy okno grupowe
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=_env.TAB_ACTIONS;
{? _env.WIN_MAIN=''
||
:: Czary, żeby skaner tłumaczeń to złapał, nie usuwać
   'Wykres wykorzystania wszystkich czynności w okresie %1 - %2'@['',''];
   _grpbefor:="

         params_set(params_get());
         _env:=params_get().env;

         grp_disp(_env.TAB_ACTIONS,_env.WIN_ACTIONS,1);

         _opt:=exec('set_options_a','#desktop');
         _opt.FOCUS_RET:=1;
         exec('load','#desktop',_env.ctr_id_all,'#'+_env.ctr_id_all+'.dsk',_opt,,,,,0);
         exec('load','#desktop',_env.ctr_id_act,'#'+_env.ctr_id_act+'.dsk',_opt,,,,,0);
         exec('load','#desktop',_env.ctr_id_btn,'#'+_env.ctr_id_btn+'.dsk',_opt,,,,exec('elements_table_btn_act','#b_stats'));

         exec('chart_title_main','#b_stats');

         exec('set_active_win','#desktop','',_env.ctr_id_all,4);
         ~~
      ";
:: Okno główne - czynności

   _grp:=_tab.grp_make(_env.tit_main,_grpbefor,_env.wid_main,1,1,,,,'jterm');

   exec('create','#desktop',_tab,_env.ctr_id_btn,_grp,2);

   _tab.grp_splt(_grp,,'horizontal','bottom1');

   exec('create','#desktop',_tab,_env.ctr_id_all,_grp,10);

   _tab.grp_splt(_grp,'bottom1','horizontal','bottom2');

   exec('create','#desktop',_tab,_env.ctr_id_act,_grp,10);

   _tab.grp_splt(_grp,'bottom2','horizontal','bottom3');


   _before:="
      params_set(params_get());
      _env:=params_get().env;
      ~~
   ";
   _tab.grp_sel(_grp,_env.TAB_ACTIONS,_env.WIN_ACTIONS,,"params_set(params_get());exec('after_rfr_actions','#b_stats')",,,5,_before,,,,'maximized_with_title');

:: Okno dat
   _tab.grp_splt(_grp,'bottom3','vertical','center');
   _before:="
      params_set(params_get());
      _env:=params_get().env;
      ~~
   ";
   _tab.grp_sel(_grp,_env.TAB_DATY,_env.WIN_DATY,,"params_set(params_get());exec('after_rfr_daty','#b_stats')",,,5,_before,,,,'maximized_with_title');


:: Okno użytkowników
   _tab.grp_splt(_grp,'center','vertical','prawy');
   _before:="
      params_set(params_get());
      _env:=params_get().env;

      _env.TAB_USERS.index(_env.NDX_USR_DATE);
      _env.TAB_USERS.prefix(_env.SEL_ACT,_env.SEL_DATE);
      ~~
   ";
   _tab.grp_sel(_grp,_env.TAB_USERS,_env.WIN_USERS,,,,,5,_before,,,,'maximized_with_title');

   _tab.win_sel(_grp);
   _env.WIN_MAIN:=_grp;
   ~~
?};
~~


\grp_make_proc_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy okno grupowe
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=_env.TAB_PROC;
{? _env.WIN_MAIN=''
||
   _grpbefor:="

         params_set(params_get());
         _env:=params_get().env;

         grp_disp(_env.TAB_PROC,_env.WIN_PROC,1);

         _opt:=exec('set_options_a','#desktop');
         _opt.FOCUS_RET:=1;
         exec('load','#desktop',_env.ctr_id_all,'#'+_env.ctr_id_all+'.dsk',_opt,,,,,0);
         exec('load','#desktop',_env.ctr_id_inst_act,'#'+_env.ctr_id_inst_act+'.dsk',_opt,,,,,0);
         exec('load','#desktop',_env.ctr_id_act,'#'+_env.ctr_id_act+'.dsk',_opt,,,,,0);
         exec('load','#desktop',_env.ctr_id_btn2,'#'+_env.ctr_id_btn2+'.dsk',_opt,,,,exec('elements_table_btn_proc','#b_stats'));

         exec('chart_title_main','#b_stats');
::         exec('set_value','#desktop','',_env.ctr_id_btn2,'6d4e57bncha7ahm0381il5in27k7',_env.TAB_JM.SYMBOL);
         exec('set_active_win','#desktop','',_env.ctr_id_all,4);
         ~~
      ";
:: Okno główne - procesy
   _grp:=_tab.grp_make(_env.tit_main,_grpbefor,_env.wid_main2,1,1,,,,'jterm');

:: Przyciski
   exec('create','#desktop',_tab,_env.ctr_id_btn2,_grp,2);

:: Wykres procesów
   _tab.grp_splt(_grp,,'horizontal','wykres1');
   exec('create','#desktop',_tab,_env.ctr_id_all,_grp,10,70);

:: Okno procesów
   _tab.grp_splt(_grp,'wykres1','vertical','tabelka1');
    _before:="
      params_set(params_get());
      _env:=params_get().env;
      ~~
   ";
   _tab.grp_sel(_grp,_env.TAB_PROC,_env.WIN_PROC,,"params_set(params_get());exec('after_rfr_proc','#b_stats')",,,5,_before,,,,'maximized_with_title');

:: Wykres elementów procesu
   _tab.grp_splt(_grp,'wykres1','horizontal','wykres2');
   exec('create','#desktop',_tab,_env.ctr_id_act,_grp,10,70);

:: Wykres instancji elementów procesu
   _tab.grp_splt(_grp,'wykres2','horizontal','wykres3');
   exec('create','#desktop',_tab,_env.ctr_id_inst_act,_grp,8,70);

:: Wykres instancji procesów
::   _tab.grp_splt(_grp,'wykres3','horizontal','wykres4');
::   exec('create','#desktop',_tab,_env.ctr_id_inst,_grp,8,100);

:: Okno elementów
   _tab.grp_splt(_grp,'tabelka1','horizontal','tabelka2',11);
   _before:="
      params_set(params_get());
      _env:=params_get().env;
      _env.DISABLE_PREL
   ";
   _tab.grp_sel(_grp,_env.TAB_PREL,_env.WIN_PREL,,"params_set(params_get());exec('after_rfr_prel','#b_stats')",,,5,_before,,,,'maximized_with_title');


:: Okno instancji
   _tab.grp_splt(_grp,'tabelka2','horizontal','tabelka3',11);
   _before:="
      params_set(params_get());
      _env:=params_get().env;
::      _env.TAB_BIPREL.index(_env.NDX_BIP);
::      _env.TAB_BIPREL.prefix(_env.SEL_PROC,_env.SEL_PREL);
      _env.DISABLE_BIPREL
   ";
   _tab.grp_sel(_grp,_env.TAB_BIPREL,_env.WIN_BIPREL,,"params_exec('after_rfr_biprel','#b_stats')",,,5,_before,,,,'maximized_with_title');

   _tab.win_sel(_grp);
   _env.WIN_MAIN:=_grp;
   ~~
?};
~~


\after_rfr_actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Formuła po odświeżeniu w tabeli .TAB_ACTIONS
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_tab:=cur_tab(1,1);

_filter_changed:=0;
{? _tab.f_active()>0
||
   _f_size:=_tab.f_size();
   {? _f_size>0
   || _tab.cntx_psh();
::    Sprawdzam czy się zmienił filtr i jeśli tak to odświeżam górny wykres
      {? _f_size<>_env.F_ACT_SIZE
      || _env.F_ACT_SIZE:=_f_size;
         _filter_changed:=1
      ?};
      {? _tab.f_first()
      || {? _env.F_ACT_FIRST<>_tab.ref()
         || _filter_changed:=1;
            _env.F_ACT_FIRST:=_tab.ref()
         ?}
      || {? _env.F_ACT_FIRST<>null()
         || _filter_changed:=1;
            _env.F_ACT_FIRST:=null()
         ?}
      ?};
      _tab.cntx_pop();
      ~~
   ||
      {? _env.F_ACT_SIZE>0
      || _filter_changed:=1
      ?};
      _env.F_ACT_SIZE:=0
   ?}
|| {? _env.F_ACT_SIZE>0
   || _filter_changed:=1
   ?};
   _env.F_ACT_SIZE:=0
?};

{? _filter_changed>0
||
:: Zmienił się filtr lub indeks tabeli .TAB_ACTIONS więc odświeżam górny wykres
   exec('refresh_chart_all','#b_stats')
?};

{? _env.SEL_ACT<>_tab.ACT_UID
||
   _env.SEL_ACT:=_tab.ACT_UID;
   {? _env.SEL_ACT<>''
   || _env.TAB_DATY.prefix(_env.SEL_ACT)
   || _env.TAB_DATY.prefix('??????????????????????????????',)
   ?};


::   exec('refresh_element','#desktop','',_env.ctr_id_act,_env.ctr_chart_act);

:: ustawiam tytył dolnego wykresu
   _title:='Wykres wykorzystania czynności: %1 - %2'@[_tab.ACT_UID,_tab.ACT_NAME];
   exec('set_value','#desktop','',_env.ctr_id_act,_env.ctr_title_act,_title);

:: Ustawiam zaznaczenie na górnym wykresie
   exec('set_value','#desktop','',_env.ctr_id_all,_env.ctr_chart_all,_tab.CHARTUID);

:: Ustawiam tytuł okienka z datami
   _env.TAB_DATY.hdr_sel('');
   _env.TAB_DATY.hdr_sel(': '+_tab.ACT_UID);

   grp_disp(_env.TAB_DATY,_env.WIN_DATY,1);

:: Odświeżam dolny wykres
   exec('refresh_chart_act','#b_stats');
   ~~
?};
~~


\after_rfr_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Formuła po odświeżeniu w tabeli .TAB_PROC
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_tab:=cur_tab(1,1);

{? grp_empty(_tab,cur_win(1,1))
|| _env.DISABLE_PREL:='#disable';
   _env.SEL_PROC:='xxxx';
   _tab.blank(1);
   exec('set_visible','#desktop','',_env.ctr_id_all,_env.ctr_title_all,0);
   exec('set_visible','#desktop','',_env.ctr_id_all,_env.ctr_chart_all,0);
   exec('set_visible','#desktop','',_env.ctr_id_all,'more@chart',0);
   ~~
|| _env.DISABLE_PREL:='';
   exec('set_visible','#desktop','',_env.ctr_id_all,_env.ctr_title_all,1);
   exec('set_visible','#desktop','',_env.ctr_id_all,_env.ctr_chart_all,1);
   exec('set_visible','#desktop','',_env.ctr_id_all,'more@chart',1);
   ~~
?};

_filter_changed:=exec('filter_changed','#b_stats',_tab,'F_PROC_SIZE','F_PROC_FIRST','F_PROC_ACTIVE');

{? _filter_changed>0
||
:: Zmienił się filtr lub indeks tabeli .TAB_ACTIONS więc odświeżam górny wykres
   exec('refresh_chart_all','#b_stats')
?};
{? _env.SEL_PROC<>_tab.PROC_REF
||
   _env.SEL_PROC:=_tab.PROC_REF;
   {? _env.SEL_PROC<>''
   || _env.TAB_PREL.prefix(_env.SEL_PROC);
      _title:='Wykres średniego czasu trwania elementów procesu: %1 - %2 wersja: %3'@[_tab.SYMBOL,_tab.NAME,_tab.VER];
      exec('set_value','#desktop','',_env.ctr_id_act,_env.ctr_title_act,_title);
::    Ustawiam zaznaczenie na górnym wykresie
      exec('set_value','#desktop','',_env.ctr_id_all,_env.ctr_chart_all,_tab.CHARTUID);

::    Ustawiam tytuł okienka z datami
      _env.TAB_PREL.hdr_sel('');
      _env.TAB_PREL.hdr_sel(': '+_tab.SYMBOL);
      ~~
   || _env.TAB_PREL.prefix('??????????????????????????????',)
   ?};

   grp_disp(_env.TAB_PREL,_env.WIN_PREL,1);

:: Odświeżam dolny wykres
   exec('refresh_chart_act','#b_stats');
   ~~
?};
~~


\after_rfr_daty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Formuła po odświeżeniu w tabeli .TAB_DATY
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_tab:=cur_tab(1,1);
_env.SEL_DATE:=_tab.DATE;

exec('set_value','#desktop','',_env.ctr_id_act,_env.ctr_chart_act,_tab.SYMBOL);

:: Ustawiam tytuł dla tabeli .TAB_USERS
_env.TAB_USERS.hdr_sel('');
_env.TAB_USERS.hdr_sel(' czynności: %1 w dniu: %2'@[_tab.ACT_UID,_tab.SYMBOL]);

_env.TAB_USERS.prefix(_tab.ACT_UID,_tab.DATE);
grp_disp(_env.TAB_USERS,_env.WIN_USERS);
~~


\after_rfr_prel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Formuła po odświeżeniu w tabeli .TAB_PREL
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_tab:=cur_tab(1,1);

{? grp_empty(_tab,cur_win(1,1))
|| _env.DISABLE_BIPREL:='#disable';
   _env.SEL_PREL:='xxxx';
   _tab.blank(1);
   exec('set_visible','#desktop','',_env.ctr_id_act,_env.ctr_title_act,0);
   exec('set_visible','#desktop','',_env.ctr_id_act,_env.ctr_chart_act,0);
   exec('set_visible','#desktop','',_env.ctr_id_act,'more@chart',0);
   ~~
|| _env.DISABLE_BIPREL:='';
   exec('set_visible','#desktop','',_env.ctr_id_act,_env.ctr_title_act,1);
   exec('set_visible','#desktop','',_env.ctr_id_act,_env.ctr_chart_act,1);
   exec('set_visible','#desktop','',_env.ctr_id_act,'more@chart',1);
   ~~
?};

_filter_changed:=exec('filter_changed','#b_stats',_tab,'F_PREL_SIZE','F_PREL_FIRST','F_PREL_ACTIVE');

{? _filter_changed>0
||
:: Zmienił się filtr lub indeks tabeli .TAB_PREL więc odświeżam górny wykres
   exec('refresh_chart_act','#b_stats')
?};

{? _env.SEL_PREL<>_tab.PREL_REF
||
   _env.SEL_PREL:=_tab.PREL_REF;

   {? _env.SEL_PREL<>''
   ||
      exec('set_visible','#desktop','',_env.ctr_id_inst_act,_env.ctr_title_inst_act,1);
      exec('set_value','#desktop','',_env.ctr_id_act,_env.ctr_chart_act,_tab.CHARTUID);
::    Ustawiam tytuł dla tabeli .TAB_BIPREL
      _env.TAB_BIPREL.hdr_sel('');
      _env.TAB_BIPREL.hdr_sel(' : %1'[_tab.SYMBOL]);

      _env.TAB_BIPREL.prefix(_tab.PREL_REF,0);
      _title:='Wykres czasu trwania instancji elementu: %1'@[_tab.SYMBOL];
      exec('set_value','#desktop','',_env.ctr_id_inst_act,_env.ctr_title_inst_act,_title)
   || exec('set_visible','#desktop','',_env.ctr_id_inst_act,_env.ctr_title_inst_act,0);
      _env.TAB_BIPREL.prefix('xxxxxxxxxxxxxx',0)
   ?};
   grp_disp(_env.TAB_BIPREL,_env.WIN_BIPREL,1);
   exec('refresh_chart_inst_act','#b_stats')
?};
~~


\after_rfr_biprel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Formuła po odświeżeniu w tabeli .TAB_BIPREL
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_tab:=cur_tab(1,1);

{? grp_empty(_tab,cur_win(1,1))
|| _tab.blank(1);
   exec('set_visible','#desktop','',_env.ctr_id_inst_act,_env.ctr_title_inst_act,0);
   exec('set_visible','#desktop','',_env.ctr_id_inst_act,_env.ctr_chart_inst_act,0);
   exec('set_visible','#desktop','',_env.ctr_id_inst_act,'more@chart',0);
   ~~
|| _env.DISABLE_BIPREL:='';
   exec('set_visible','#desktop','',_env.ctr_id_inst_act,_env.ctr_title_inst_act,1);
   exec('set_visible','#desktop','',_env.ctr_id_inst_act,_env.ctr_chart_inst_act,1);
   exec('set_visible','#desktop','',_env.ctr_id_inst_act,'more@chart',1);
   ~~
?};

_filter_changed:=exec('filter_changed','#b_stats',_tab,'F_BIPREL_SIZE','F_BIPREL_FIRST','F_BIPREL_ACTIVE');

{? _filter_changed>0
||
:: Zmienił się filtr lub indeks tabeli .TAB_BIPREL więc odświeżam górny wykres
   exec('refresh_chart_inst_act','#b_stats')
?};

{? _env.SEL_BIPREL<>_tab.BIP_REF
||
   _env.SEL_BIPREL:=_tab.BIP_REF;
   exec('set_value','#desktop','',_env.ctr_id_inst_act,_env.ctr_chart_inst_act,_tab.CHARTUID);
   ~~
?};
~~


\demo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS:
::   WE:
::   WY:
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_startd:=exec('tm_stamp2date','#tm_stamp',_env.TM_START);
_endd:=exec('tm_stamp2date','#tm_stamp',_env.TM_END);

_cur_date:=_startd;
_continue_daty:=1;

_ile_losowan:=100000;

B_ACTION.cntx_psh();
B_ACTION.prefix();
USERS.cntx_psh();
USERS.prefix();
_buf_action:=exec('B_ACTION','#buffer');
{!
|?
:: Lecimy po zakresie czasowym

   {! _it_act:=1.._ile_losowan
   |?
::    Losuje czynność
      _ref_act:=rand()*B_ACTION.size();
      _b_action:=null();

      {? B_ACTION.seek(_ref_act,)
      || _b_action:=B_ACTION.ref();
         _buf_action.get()
      ?};
      {? _b_action<>null()
      ||
::       Losuję użytkownika
         _ref_user:=rand()*USERS.size();
         {? USERS.seek(_ref_user,)
         ||
            _godz:=rand()*24;
            _micro:={? rand()>0.5 || 1 || 0 ?};
            _tm_stamp:=exec('create','#tm_stamp',_cur_date,time(_godz,0,0));
            exec('add_usehis','#b_stats',USERS.ref(),_buf_action,_micro,_tm_stamp)
         ?}
      ?}
   !};
  _cur_date:=_cur_date+1;
  {? _cur_date>_endd
  || _continue_daty:=0
  ?};
  _continue_daty>0
!};
B_ACTION.cntx_pop();
USERS.cntx_pop();
~~


\load_actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Ładuje zawartość okna dla wszystkich czynności
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

:: Wymyślam maskę startową i końcową
_mask_start:='';
{? _env.TM_START>0
|| _startd:=exec('tm_stamp2date','#tm_stamp',_env.TM_START);
   _mask_start:=4+B_USEHIS.name()+(($(_startd~1))+2)+form(_startd~2,-2)
?};
_endd:=exec('tm_stamp2date','#tm_stamp',_env.TM_END);
_mask_end:=4+B_USEHIS.name()+(($(_endd~1))+2)+form(_endd~2,-2);
_fml:="
   exec('mask_load_usehist','#b_stats',_a,_b)
";
exec('for_each_mask','#table',B_USEHIS,_fml,_mask_start,_mask_end,_env,1);

exec('filter_max_actions','#b_stats',_env);

_env.TAB_ACTIONS.index(_env.NDX_ACT_COUNT);
_env.TAB_ACTIONS.clear();
_env.TAB_ACTIONS.first();

_env.TAB_DATY.index(_env.NDX_DATY_DATE);
_env.TAB_DATY.clear();
_env.TAB_DATY.first();

_env.TAB_USERS.index(_env.NDX_USR_DATE);
_env.TAB_USERS.clear();
_env.TAB_USERS.first();
~~


\mask_load_usehist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Formuła wywoływana wewnątrz każdej maski tabeli B_USEHIST, ładuje do tabel tymczasowych
::       rekordy ze statystyk użycia
::   WE: _a - alias tabeli
::       _b - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_b;

_result:=0;
_can_continue:=1;

_int_view:=exec('interval','#interval');
_int_view.START:=_env.TM_START;
_int_view.END:=_env.TM_END;

B_USEHIS.cntx_psh();
B_USEHIS.index('TM_STAMP');
B_USEHIS.prefix(REF.FIRMA);

{? B_USEHIS.find_ge(_env.TM_START)
|| _int_rec:=exec('interval','#interval');
   {!
   |?
      _int_rec.START:=B_USEHIS.TM_STAMP;
      _int_rec.END:=B_USEHIS.TM_STAMP;

      {? exec('intervals_chk','#interval',_int_rec,_int_view)>0
      || _can_continue:=exec('usehist2users','#b_stats',_env,1)
      ?};
      B_USEHIS.next() & _can_continue>0
   !}
?};
B_USEHIS.cntx_pop();

{? _can_continue>0
|| _result:=1
?};
_result


\usehist2users
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Dodaje do tabeli .TAB_USERS jeden rekord na podstawie rekordu tabeli B_USEHIS
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::       _b - tab_tmp - tabelka do której dodać
::       _c - ndx_tmp - indeks tabeli którego używać przy sprawdzaniu czy jest już taki rekord
::       _d - ndx_tmp - indeks tabeli którego używać do budowy dymków
::       _e - INTEGER - czy dodawać rekordy do tabel .TAB_ACTIONS i .TAB_DATY
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_update_others:=_b;

_tab:=_env.TAB_USERS;
_ndx_check:=_env.NDX_USR_UID;
_ndx_tooltip:=_env.NDX_USR_USER;

_result:=0;
_can_continue:=1;

_tab.cntx_psh();
_tab.index(_ndx_check);

_can_add:=1;

{? _can_add>0
||
   _tab.prefix(B_USEHIS.ACT_UID,B_USEHIS.DATE,B_USEHIS.USR_GUID);
   {? _tab.first()
   ||
:: Jest już taki rekord więc inkrementuję tylko liczniki
      _tab.COUTER+=B_USEHIS.COUNTER;
      _tab.CHARTVAL:=_tab.COUNTER;
      _tab.COUNT_PR+=B_USEHIS.COUNT_PR;
      _tab.COUNT_NP+=B_USEHIS.COUNT_NP;
      _can_continue:=_tab.put()
   ||
:: Nie ma jeszcze rekordu, zakładam nowy
      _tab.blank();
      _tab.ACT_UID:=B_USEHIS.ACT_UID;
      _tab.ACT_NAME:=B_USEHIS.ACT_NAME;
      _tab.USR_GUID:=B_USEHIS.USR_GUID;
      _tab.USR_KOD:=B_USEHIS.USR_KOD;
      _tab.USR_DANE:=B_USEHIS.USR_DANE;
      _tab.DATE:=B_USEHIS.DATE;
      _tab.DATE_STR:=$B_USEHIS.DATE+' - '+_env.DAYS[B_USEHIS.DATE~4];
      _tab.CHARTUID:=_tab.DATE_STR;
      _tab.COUNTER:=B_USEHIS.COUNTER;
      _tab.CHARTVAL:=_tab.COUNTER;
      _tab.COUNT_PR:=B_USEHIS.COUNT_PR;
      _tab.COUNT_NP:=B_USEHIS.COUNT_NP;
      _tab.KOLOR:=exec('get_usr_color','#b_stats',_env,B_USEHIS.USR_GUID);
      _tab.COLORCOL:='►►►►►';
      _can_continue:=_tab.add()
   ?};

   {? _update_others>0
   ||
      {? _can_continue>0
      || _can_continue:=exec('users2daty','#b_stats',_env)
      ?};
      {? _can_continue>0
      || _can_continue:=exec('users2actions','#b_stats',_env)
      ?}
   ?}
?};
_tab.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\users2daty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Dodaje do tabeli .TAB_DATY rekord na podstawie .TAB_USERS
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_result:=0;
_can_continue:=1;

_tab_users:=_env.TAB_USERS;
_tab:=_env.TAB_DATY;

_tab.cntx_psh();
_tab.index(_env.NDX_DATY_DATE);
_tab.prefix(_tab_users.ACT_UID,_tab_users.DATE);
{? _tab.first()
||
:: Jest już taki rekord więc inkrementuję tylko liczniki
   _tab.COUNTER+=_tab_users.COUNTER;
   _tab.COUNT_PR+=_tab_users.COUNT_PR;
   _tab.COUNT_NP+=_tab_users.COUNT_NP;
   _can_continue:=_tab.put()
||
:: Nie ma jeszcze rekordu, zakładam nowy
   _tab.blank();
   _tab.ACT_UID:=_tab_users.ACT_UID;
   _tab.DATE:=_tab_users.DATE;
   _tab.SYMBOL:=$_tab_users.DATE+' - '+_env.DAYS[_tab_users.DATE~4];
   _tab.COUNTER:=_tab_users.COUNTER;
   _tab.COUNT_PR:=_tab_users.COUNT_PR;
   _tab.COUNT_NP:=_tab_users.COUNT_NP;
   _can_continue:=_tab.add()
?};
_tab.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\users2actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Dodaje do tabeli .TAB_ACTIONS rekord na podstawie .TAB_USERS
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_result:=0;
_can_continue:=1;

_tab_users:=_env.TAB_USERS;
_tab:=_env.TAB_ACTIONS;

_tab.cntx_psh();
_tab.index(_env.NDX_ACT_UID);
_tab.prefix(_tab_users.ACT_UID,);
{? _tab.first()
||
:: Jest już taki rekord więc inkrementuję tylko liczniki
   _tab.COUNTER+=_tab_users.COUNTER;
   _tab.CHARTVAL+=_tab_users.COUNTER;
   _tab.COUNT_PR+=_tab_users.COUNT_PR;
   _tab.COUNT_NP+=_tab_users.COUNT_NP;
   _tab.TOOLTIP:=exec('get_tooltip_all','#b_stats',_env);
   _can_continue:=_tab.put()
||
:: Nie ma jeszcze rekordu, zakładam nowy
   _tab.blank();
   _tab.ACT_UID:=_tab_users.ACT_UID;
   _tab.CHARTUID:=_tab_users.ACT_UID;
   _tab.ACT_NAME:=_tab_users.ACT_NAME;
   _tab.COUNTER:=_tab_users.COUNTER;
   _tab.CHARTVAL:=_tab_users.COUNTER;
   _tab.COUNT_PR:=_tab_users.COUNT_PR;
   _tab.COUNT_NP:=_tab_users.COUNT_NP;
   _tab.TOOLTIP:=exec('get_tooltip_all','#b_stats',_env);
   _tab.KOLOR:=_env.CHART_COLOR;
   _can_continue:=_tab.add()
?};
_tab.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\rebuild
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Czyści tabelki .TAB_ACTIONS i .TAB_DATY i odtwarza je na podstawie aktualnej zawartości .TAB_USERS
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_env.TAB_ACTIONS.erase();
_env.TAB_DATY.erase();

_tab_users:=_env.TAB_USERS;
_tab_users.cntx_psh();
{? _tab_users.f_active()
||
:: Założony filtr
   {? _tab_users.f_first()
   || {!
      |?
         {? _can_continue>0
         || _can_continue:=exec('users2daty','#b_stats',_env)
         ?};
         {? _can_continue>0
         || _can_continue:=exec('users2actions','#b_stats',_env)
         ?};
         _tab_users.f_next() & _can_continue>0
      !}
   ?}
||
:: Nie ma filtra
   {? _tab_users.first()
   || {!
      |?
         {? _can_continue>0
         || _can_continue:=exec('users2daty','#b_stats',_env)
         ?};
         {? _can_continue>0
         || _can_continue:=exec('users2actions','#b_stats',_env)
         ?};
         _tab_users.next() & _can_continue>0
      !}
   ?}
?};
_tab_users.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\chart_all_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zwraca tabelkę zasilającą wykres wszystkich czynności
::   WY: tab_tmp
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

{? _env.MODE='ACTION_ALL'
|| _tab:=_env.TAB_ACTIONS
|? _env.MODE='PROC_ALL'
|| _tab:=_env.TAB_PROC
?};
{? _tab.f_active()>0
||
   _tab.cntx_psh();
   {? _tab.first()
   || {!
      |? _tab.FILTER:=0;
         _tab.put();
         _tab.next()
      !}
   ?};
   _tab.cntx_pop();

   {? _tab.f_size()>0
   ||
      _viewport:=_tab.ref();
      _tab.cntx_psh();
      {? _tab.f_first()
      || {!
         |? _tab.FILTER:=1;
            _tab.put();
            _tab.f_next()
         !}
      ?};
      _tab.cntx_pop();

      _tab.f_seek(#_viewport,);
      ~~
   ?};
   ~~
|| _tab.cntx_psh();
   {? _tab.first()
   || {!
      |? _tab.FILTER:=1;
         _tab.put();
         _tab.next()
      !}
   ?};
   _tab.cntx_pop();
   ~~
?};
_tab


\get_tooltip_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zwraca treść dymka dla wykresu wszystkich czynności
::       Pracuje w kontekście rekordu tabeli .TAB_ACTIONS
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: STRING
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_tab:=_env.TAB_ACTIONS;

_result:='<html>';
_result+='<tr><td>'+'Czynność:'@+'</td><td><b>'+_tab.ACT_UID+'</b></td></tr>';
_result+='<tr><td></td><td><b>'+_tab.ACT_NAME+'</b></td></tr>';
_result+='<tr><td>'+'Wszystkich uruchomień:'@+'</td><td>'+$_tab.COUNTER+'</td></tr>';
_result+='<tr><td>'+'Procesowych:'@+'</td><td>'+$_tab.COUNT_PR+'</td></tr>';
_result+='<tr><td>'+'Nieprocesowych:'@+'</td><td>'+$_tab.COUNT_NP+'</td></tr>';
_result+='</html>';
_result


\get_tooltip_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zwraca treść dymka dla wykresu wszystkich proceów
::       Pracuje w kontekście rekordu tabeli .TAB_PROC
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: STRING
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_tab:=_env.TAB_PROC;

_result:='<html>';
_result+='<tr><td>'+'Proces:'@+'</td><td><b>'+_tab.NAME+' '+'wersja:'@+' '+_tab.VER+'</b></td></tr>';
_result+='<tr><td>'+'Średni czas trwania:'@+'</td><td>'+$_tab.DUR_AVG+' '+_tab.DUR_JM+'</td></tr>';
_result+='<tr><td>'+'Uruchomień:'@+'</td><td>'+$_tab.COUNTER+'</td></tr>';
_result+='<tr><td>'+'Wydajność:'@+'</td><td>'+_tab.DUR_DEVS+'</td></tr>';
_result+='</html>';
_result


\get_tooltip_inst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zwraca treść dymka dla wykresu instancji procesu
::       Pracuje w kontekście rekordu tabeli .TAB_PROC
::   WE: _a - tab_tmp - tabela tymczasowa z której wyciagnąć dane
::   WY: STRING
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;

_result:='<html>';
_result+='<tr><td>'+'Instancja:'@+'</td><td><b>'+_tab.CHARTUID+'</b></td></tr>';
_result+='<tr><td>'+'Czas trwania:'@+'</td><td>'+$_tab.DUR_JM+' '+_tab.JM+'</td></tr>';
{? var_pres('START_ST',_tab)>0
|| _result+='<tr><td>'+'Start:'@+'</td><td>'+_tab.START_ST+'</td></tr>'
?};
_result+='</html>';
_result


\get_tooltip_prel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zwraca treść dymka dla wykresu elementów procesu
::       Pracuje w kontekście rekordu tabeli .TAB_PROC
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: STRING
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_tab:=_env.TAB_PREL;

_result:='<html>';
_result+='<tr><td>'+'Element:'@+'</td><td><b>'+_tab.SYMBOL+'</b></td></tr>';
_result+='<tr><td></td><td><b>'+_tab.CLASS+'</b></td></tr>';
_result+='<tr><td>'+'Średni czas trwania:'@+'</td><td>'+$_tab.DUR_AVG+' '+_tab.DUR_JM+'</td></tr>';
_result+='<tr><td>'+'Uruchomień:'@+'</td><td>'+$_tab.COUNTER+'</td></tr>';
_result+='<tr><td>'+'Wydajność:'@+'</td><td>'+_tab.DUR_DEVS+'</td></tr>';
_result+='</html>';
_result


\chart_act_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zwraca tabelkę zasilającą wykres jednej czynności
::   WY: tab_tmp
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;
::exec('set_active_win','#desktop','',_env.ctr_id_all,3);
{? _env.MODE='ACTION_ALL'
|| _tab:=_env.TAB_USERS
|? _env.MODE='PROC_ALL'
|| _tab:=_env.TAB_PREL
?};
{? _tab.f_active()>0
||
   _tab.cntx_psh();
   {? _tab.first()
   || {!
      |? _tab.FILTER:=0;
         _tab.put();
         _tab.next()
      !}
   ?};
   _tab.cntx_pop();

   {? _tab.f_size()>0
   ||
      _viewport:=_tab.ref();
      _tab.cntx_psh();
      {? _tab.f_first()
      || {!
         |? _tab.FILTER:=1;
            _tab.put();
            _tab.f_next()
         !}
      ?};
      _tab.cntx_pop();

      _tab.f_seek(#_viewport,);
      ~~
   ?};
   ~~
|| _tab.cntx_psh();
   {? _tab.first()
   || {!
      |? _tab.FILTER:=1;
         _tab.put();
         _tab.next()
      !}
   ?};
   _tab.cntx_pop();
   ~~
?};
_tab


\chart_act_prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS:
::   WE:
::   WY:
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;
_tab:=_env.TAB_USERS;
_tab.index(_env.NDX_USR_DATE);
{? _env.SEL_ACT<>''
|| _tab.prefix(_env.SEL_ACT)
|| _tab.prefix('?????????????????????????????????',)
?};

:: Uzupełniam dymki
{? _tab.first()
|| {!
   |? _tab.FILTER:=1;
      _tab.TOOLTIP:=exec('get_tooltip_act','#b_stats',_env);
      _tab.put();
      _tab.next()
   !}
?};
_tab.first();
~~


\chart_inst_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zwraca tabelkę zasilającą wykres instancji jednego procesu
::   WY: tab_tmp
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;
_env.TAB_PROC_DUR


\chart_inst_act_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zwraca tabelkę zasilającą wykres instancji jednej czynności
::   WY: tab_tmp
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;
_tab:=_env.TAB_BIPREL;

{? _tab.f_active()>0
||
   _tab.cntx_psh();
   {? _tab.first()
   || {!
      |? _tab.FILTER:=0;
         _tab.put();
         _tab.next()
      !}
   ?};
   _tab.cntx_pop();

   {? _tab.f_size()>0
   ||
      _viewport:=_tab.ref();
      _tab.cntx_psh();
      {? _tab.f_first()
      || {!
         |? _tab.FILTER:=1;
            _tab.put();
            _tab.f_next()
         !}
      ?};
      _tab.cntx_pop();

      _tab.f_seek(#_viewport,);
      ~~
   ?};
   ~~
|| _tab.cntx_psh();
   {? _tab.first()
   || {!
      |? _tab.FILTER:=1;
         _tab.put();
         _tab.next()
      !}
   ?};
   _tab.cntx_pop();
   ~~
?};
_tab


\chart_inst_prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Prefiksuje tabelkę przed wysłaniem ją na wykres
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_tab:=_env.TAB_PROC_DUR;
_tab.index(_env.NDX_PROC_DUR_MED2);
{? _env.SEL_PROC<>''
|| _tab.prefix(_env.SEL_PROC,)
|| _tab.prefix('?????????????????????????????????',)
?};
_tab.first();
~~


\chart_inst_act_prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Prefiksuje tabelkę przed wysłaniem ją na wykres
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_tab:=_env.TAB_BIPREL;
_tab_prel:=_env.TAB_PREL;
:: Dodaję rekordy techniczne z medianą i średnią na wykres
_tab.cntx_psh();
_tab.prefix(_env.SEL_PREL,1);

:: Najpierw usuwam stare rekordy
{? _tab.first()
|| {!
   |? _can_continue:=_tab.del(,1);
      _tab.first() & _can_continue>0
   !}
?};

:: Tworzę nowe rekordy
_tab.clear();
{? _tab.size()>0
|| _tab.blank();
   _tab.PROC_REF:=_tab_prel.PROC_REF;
   _tab.PREL_UID:=_tab_prel.UID;
   _tab.PREL_REF:=_tab_prel.PREL_REF;
   _tab.JM:=_env.TAB_JM.SYMBOL;
   _tab.CHARTVAL:=_tab_prel.DUR_MED;
   _tab.CHARTUID:='Mediana: '+$(_tab.CHARTVAL)+' '+_env.TAB_JM.SYMBOL;
   _tab.KOLOR:='255:0:0';
   _tab.CHARTTYP:=1;
   _tab.FILTER:=1;
   _tab.add()
?};
_tab.cntx_pop();

::_tab.index(_env.NDX_BIPREL_DUR);
{? _env.SEL_PREL<>''
|| _tab.prefix(_env.SEL_PREL,)
|| _tab.prefix('?????????????????????????????????',)
?};
_tab.first();
~~


\get_tooltip_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zwraca treść dymka dla wykresu jednej czynności
::       Pracuje w kontekście rekordu tabeli .TAB_USERS
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: STRING
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_tab:=_env.TAB_USERS;

_result:='<html>';

_tab.cntx_psh();
_tab.index(_env.NDX_USR_USER);
_tab.prefix(_tab.ACT_UID,_tab.DATE);
_max_users:=20;
_it:=1;
{? _tab.first()
|| {!
   |? _kolor:=exec('dec2hex','#color',_tab.KOLOR);

      _header:='';
      {? _it=1
      || _header:=_tab.DATE_STR+':'
      ?};
      _result+='<tr><td>'+_header+'</td><td><font color='+_kolor+'>'+_tab.USR_KOD+'('+$_tab.COUNTER+')</font></td></tr>';
      _it+=1;
      _tab.next()
   !}
?};
_result+='</html>';

:: Nawijam Tooltip ze wszystkimi użytkownikami dla pierwszego rekordu, bo tylko on będzie wyświetlany
:: na wykresie
{? _tab.first()
|| _tab.TOOLTIP:=_result;
   _tab.put()
?};

_tab.cntx_pop();
_result


\get_usr_color
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zwraca kolor dla użytkownika
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::       _b - IDTIME - identyfikator użytkownika
::   WY: STRING
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_guid:=_b;

_result:='';

_tab:=_env.TAB_USR_COLORS;
_tab.cntx_psh();
_tab.prefix(_guid);
{? _tab.first()
|| _result:=_tab.KOLOR
|| _tab.blank();
   _tab.USR_GUID:=_guid;
   _tab.KOLOR:=exec('kolor_rand','#color');
   _result:=_tab.KOLOR;
   _tab.add()
?};
_tab.cntx_pop();
_result


\refresh_charts
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Odświeża wykresy - formuła wołana z przycisku kontrolki
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

exec('refresh_element','#desktop','',_env.ctr_id_all,_env.ctr_chart_all);
exec('refresh_element','#desktop','',_env.ctr_id_act,_env.ctr_chart_act);
exec('set_value','#desktop','',_env.ctr_id_all,_env.ctr_chart_all,_env.SEL_ACT);
exec('set_value','#desktop','',_env.ctr_id_act,_env.ctr_chart_act,_env.TAB_DATY.SYMBOL);
~~


\refresh_charts_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Odświeża wykresy - formuła wołana z przycisku kontrolki
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

exec('refresh_element','#desktop','',_env.ctr_id_all,_env.ctr_chart_all);
exec('refresh_element','#desktop','',_env.ctr_id_act,_env.ctr_chart_act);
::exec('refresh_element','#desktop','',_env.ctr_id_inst,_env.ctr_chart_inst);
exec('refresh_element','#desktop','',_env.ctr_id_inst_act,_env.ctr_chart_inst_act);
exec('set_value','#desktop','',_env.ctr_id_all,_env.ctr_chart_all,_env.TAB_PROC.CHARTUID);
exec('set_value','#desktop','',_env.ctr_id_act,_env.ctr_chart_act,_env.TAB_PREL.CHARTUID);
exec('set_value','#desktop','',_env.ctr_id_inst_act,_env.ctr_chart_inst_act,_env.TAB_BIPREL.CHARTUID);
~~


\refresh_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Odświeża całe okno - buduje zawartość tabel tymczasowych od zera
::       formuła wołana z przycisku kontrolki
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_can_continue:=1;

{? _env.MODE='ACTION_ALL'
||
   _can_continue:=exec('set_max_actions','#b_stats');
   {? _can_continue>0
   || _can_continue:=exec('set_max_users','#b_stats')
   ?}
|? _env.MODE='PROC_ALL'
||
   _can_continue:=exec('set_max_processes','#b_stats');
   {? _can_continue>0
   || _can_continue:=exec('set_max_prels','#b_stats')
   ?};
   {? _can_continue>0
   || _can_continue:=exec('set_deviation','#b_stats')
   ?}
?};

{? _can_continue>0
|| _env.reload(1)
?};
~~


\click_chart_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Kliknięcie na kolumnę wykresu ze wszystkimi czynnościami
::   WE: _a - STRING - id kolumny wykresu na którą kliknięto
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

{? var_pres('bc_args',params_get())>100
||
:: Jeżeli kliknięcie na wykresie powiekszonym to nic nie robię, wychodzę
   return()
?};

_column:=_a;

_viewref:=null();

{? _env.MODE='ACTION_ALL'
||
   _tab:=_env.TAB_ACTIONS;
   _tab.cntx_psh();
   _tab.index(_env.NDX_ACT_UID);
   _tab.prefix(_column,);
   {? _tab.first()
   || _viewref:=_tab.ref()
   ?};
   _tab.cntx_pop();

   {? _viewref<>null()
   || {? _tab.f_active()>0
      || _tab.f_seek(#_viewref,)
      || _tab.seek(_viewref)
      ?};
      grp_disp(_env.TAB_ACTIONS,_env.WIN_ACTIONS,1)
   ?}
|? _env.MODE='PROC_ALL'
||
   _tab:=_env.TAB_PROC;
   _tab.cntx_psh();
   _tab.index(_env.NDX_PROC_CHART);
   _tab.prefix(_column,);
   {? _tab.first()
   || _viewref:=_tab.ref()
   ?};
   _tab.cntx_pop();

   {? _viewref<>null()
   || {? _tab.f_active()>0
      || _tab.f_seek(#_viewref,)
      || _tab.seek(_viewref)
      ?};
      grp_disp(_env.TAB_PROC,_env.WIN_PROC,1)
   ?}
?};
~~


\click_chart_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Kliknięcie na kolumnę wykresu ze statystykami jednej czynności
::   WE: _a - STRING - id kolumny wykresu na którą kliknięto
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

{? var_pres('bc_args',params_get())>100
||
:: Jeżeli kliknięcie na wykresie powiekszonym to nic nie robię, wychodzę
   return()
?};

_column:=_a;

_viewref:=null();

{? _env.MODE='ACTION_ALL'
||
   _tab:=_env.TAB_DATY;
   _tab.cntx_psh();
   _tab.index(_env.NDX_DATY_UID);
   _tab.prefix(_env.SEL_ACT,_column,);
   {? _tab.first()
   || _viewref:=_tab.ref()
   ?};
   _tab.cntx_pop();

   {? _viewref<>null()
   || _tab.seek(_viewref);
      grp_disp(_env.TAB_DATY,_env.WIN_DATY,1)
   ?}
|? _env.MODE='PROC_ALL'
||
   _tab:=_env.TAB_PREL;
   _tab.cntx_psh();
   _tab.index(_env.NDX_PREL_CHART);
   _tab.prefix(_env.SEL_PROC,_column,);
   {? _tab.first()
   || _viewref:=_tab.ref()
   ?};
   _tab.cntx_pop();

   {? _viewref<>null()
   || _tab.seek(_viewref);
      grp_disp(_env.TAB_PREL,_env.WIN_PREL,1)
   ?}
?};
~~


\click_chart_inst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Kliknięcie na kolumnę wykresu ze statystykami jednej czynności
::   WE: _a - STRING - id kolumny wykresu na którą kliknięto
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_column:=_a;

_viewref:=null();
_tab:=_env.TAB_PROC_DUR;
_tab.cntx_psh();
_tab.index(_env.NDX_PROC_DUR_MED4);
_tab.prefix(_env.SEL_PROC,_column,);
{? _tab.first()
|| _viewref:=_tab.ref()
?};
_tab.cntx_pop();

{? _viewref<>null()
|| _tab.seek(_viewref);
   grp_disp(_env.TAB_PROC_DUR,_env.WIN_BIPROC,1)
?};
~~


\click_chart_biprel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Kliknięcie na kolumnę wykresu ze statystykami jednej czynności
::   WE: _a - STRING - id kolumny wykresu na którą kliknięto
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

{? var_pres('bc_args',params_get())>100
||
:: Jeżeli kliknięcie na wykresie powiekszonym to nic nie robię, wychodzę
   return()
?};

_column:=_a;

_viewref:=null();

_tab:=_env.TAB_BIPREL;
_tab.cntx_psh();
_tab.index(_env.NDX_BIPREL_CHART);
_tab.prefix(_env.SEL_PREL,_column,);
{? _tab.first()
|| _viewref:=_tab.ref()
?};
_tab.cntx_pop();

{? _viewref<>null()
|| _tab.seek(_viewref);
   grp_disp(_env.TAB_BIPREL,_env.WIN_BIPREL,1)
?};
~~


\tab_ndx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy indeksy dla tabel tymczasowych
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_env.NDX_ACT_UID:=_env.TAB_ACTIONS.ndx_tmp(,,'ACT_UID',,,'COUNTER',,);
_env.NDX_ACT_COUNT:=_env.TAB_ACTIONS.ndx_tmp(,,'COUNTER',,1,'ACT_UID',,);

_env.NDX_USR_DATE:=_env.TAB_USERS.ndx_tmp(,,'ACT_UID',,,'DATE',,,'COUNTER',,1,'USR_KOD',,);
_env.NDX_USR_UID:=_env.TAB_USERS.ndx_tmp(,,'ACT_UID',,,'DATE',,,'USR_GUID',,,'COUNTER',,1);
_env.NDX_USR_USER:=_env.TAB_USERS.ndx_tmp(,,'ACT_UID',,,'DATE',,,'USR_KOD',,1,'COUNTER',,1);
_env.NDX_USR_COUNT:=_env.TAB_USERS.ndx_tmp(,,'ACT_UID',,,'COUNTER',,1,'USR_GUID',,);

_env.NDX_DATY_DATE:=_env.TAB_DATY.ndx_tmp(,,'ACT_UID',,,'DATE',,,'COUNTER',,);
_env.NDX_DATY_UID:=_env.TAB_DATY.ndx_tmp(,,'ACT_UID',,,'SYMBOL',,,'COUNTER',,);
_env.NDX_DATY_COUNT:=_env.TAB_DATY.ndx_tmp(,,'ACT_UID',,,'COUNTER',,1);

_env.NDX_PROC_REF:=_env.TAB_PROC.ndx_tmp(,,'PROC_REF',,);
_env.NDX_PROC_DUR:=_env.TAB_PROC.ndx_tmp(,,'DUR_AVG',,1,'SYMBOL',,,'NAME',,,'VER',,);
_env.NDX_PROC_CHART:=_env.TAB_PROC.ndx_tmp(,,'CHARTUID',,);

_env.NDX_BIPREL_REF:=_env.TAB_BIPREL.ndx_tmp(,,'BIP_REF',,);
_env.NDX_BIPREL_PREL:=_env.TAB_BIPREL.ndx_tmp(,,'PREL_REF',,);
_env.NDX_BIPREL_DUR:=_env.TAB_BIPREL.ndx_tmp(,,'PREL_REF',,,'CHARTTYP',,,'DUR_AVG',,1,'STOP',,1);
_env.NDX_BIPREL_CHART:=_env.TAB_BIPREL.ndx_tmp(,,'PREL_REF',,,'CHARTUID',,);

_env.NDX_PREL_REF:=_env.TAB_PREL.ndx_tmp(,,'PREL_REF',,);
_env.NDX_PREL_DUR:=_env.TAB_PREL.ndx_tmp(,,'PROC_REF',,,'DUR_AVG',,1,'SYMBOL',,);
_env.NDX_PREL_CHART:=_env.TAB_PREL.ndx_tmp(,,'PROC_REF',,,'CHARTUID',,);

_env.NDX_PROC_DUR_MED1:=_env.TAB_PROC_DUR.ndx_tmp(,,'BI_PROC',,);
_env.NDX_PROC_DUR_MED2:=_env.TAB_PROC_DUR.ndx_tmp(,,'B_PROC',,,'DUR_RAW',,1);
_env.NDX_PROC_DUR_MED3:=_env.TAB_PROC_DUR.ndx_tmp(,,'UID',,);
_env.NDX_PROC_DUR_MED4:=_env.TAB_PROC_DUR.ndx_tmp(,,'B_PROC',,,'CHARTUID',,);
_env.NDX_PROC_DUR_MED5:=_env.TAB_PROC_DUR.ndx_tmp(,,'B_PROC',,,'CHARTTYP',,,'DUR_RAW',,1);

_env.NDX_PREL_DUR_MED1:=_env.TAB_PREL_DUR.ndx_tmp(,,'BI_PREL',,);
_env.NDX_PREL_DUR_MED2:=_env.TAB_PREL_DUR.ndx_tmp(,,'B_PREL',,,'DUR_RAW',,);
_env.NDX_PREL_DUR_MED3:=_env.TAB_PREL_DUR.ndx_tmp(,,'UID',,);

_env.NDX_JM_SYM:=_env.TAB_JM.ndx_tmp(,,'SYMBOL',,);
_env.NDX_JM_VAL:=_env.TAB_JM.ndx_tmp(,,'VALUE',,);
~~


\set_max_actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Ustawia zmienną _env.MAX_ACTIONS
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_result:=1;
_max:=exec('get_value','#desktop','',_env.ctr_id_btn,'max_act@buttons');
{? _max<>''
||
   _max_num:=#_max;
   {? _max_num<=0
   || FUN.info('Wartość maksimum musi być większa od zera.'@);
      exec('grab_focus','#desktop','',_env.ctr_id_btn,'max_act@buttons');
      _result:=0
   ?};
   _env.MAX_ACTIONS:=_max_num
|| _env.MAX_ACTIONS:=0
?};
_result


\set_max_users
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Ustawia zmienną _env.MAX_USERS
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;
_max:=exec('get_value','#desktop','',_env.ctr_id_btn,'max_usr@buttons');
_result:=1;
{? _max<>''
||
   _max_num:=#_max;

   {? _max_num<=0
   || FUN.info('Wartość maksimum musi być większa od zera.'@);
      exec('grab_focus','#desktop','',_env.ctr_id_btn,'max_usr@buttons');
      _result:=0
   ?};
   _env.MAX_USERS:=_max_num
|| _env.MAX_USERS:=0
?};
_result


\set_max_processes
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Ustawia zmienną _env.MAX_PROCESSES
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_result:=1;
_max:=exec('get_value','#desktop','',_env.ctr_id_btn2,'max_proc@buttons');
{? _max<>''
||
   _max_num:=#_max;
   {? _max_num<=0
   || FUN.info('Wartość maksimum musi być większa od zera.'@);
      exec('grab_focus','#desktop','',_env.ctr_id_btn2,'max_proc@buttons');
      _result:=0
   ?};
   _env.MAX_PROCESSES:=_max_num
|| _env.MAX_PROCESSES:=0
?};
_result


\set_max_prels
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Ustawia zmienną _env.MAX_PRELS
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;
_max:=exec('get_value','#desktop','',_env.ctr_id_btn2,'max_prel@buttons');
_result:=1;
{? _max<>''
||
   _max_num:=#_max;

   {? _max_num<=0
   || FUN.info('Wartość maksimum musi być większa od zera.'@);
      exec('grab_focus','#desktop','',_env.ctr_id_btn2,'max_prel@buttons');
      _result:=0
   ?};
   _env.MAX_PRELS:=_max_num
|| _env.MAX_PRELS:=0
?};
_result


\set_deviation
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Ustawia zmienną _env.MAX_DEVIATION
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;
_max:=exec('get_value','#desktop','',_env.ctr_id_btn2,'deviation@buttons');
_result:=1;
{? _max<>''
||
   _max_num:=#_max;

   {? _max_num<=0
   || FUN.info('Wartość odchylenia od mediany musi być większa od zera.'@);
      exec('grab_focus','#desktop','',_env.ctr_id_btn2,'deviation@buttons');
      _result:=0
   ?};
   _env.MAX_DEVIATION:=_max_num
|| _env.MAX_DEVIATION:=0
?};
_result


\filter_max_actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Ogranicza dziedzinę stosując podane w okna maksima
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_tab:=_env.TAB_ACTIONS;
_can_continue:=1;
_result:=0;

{? _env.MAX_ACTIONS>0
||
   _tab.cntx_psh();
   _tab.index(_env.NDX_ACT_COUNT);
   _tab.prefix();
   _it:=1;
   {? _tab.first()
   || {!
      |? _next:=0;
         _ref_nxt:=null();
         _tab.cntx_psh();
         {? _tab.next()
         || _ref_nxt:=_tab.ref()
         ?};
         _tab.cntx_pop();

         {? _it>_env.MAX_ACTIONS
         || _can_continue:=_tab.del(,1)
         ?};

         {? _ref_nxt<>null()
         || _next:=_tab.seek(_ref_nxt)
         ?};
         _it+=1;
         _next>0 & _can_continue>0
      !}
   ?};
   _tab.cntx_pop();
   ~~
?};

{? _env.MAX_USERS>0
||
   _tab_usr:=_env.TAB_USERS;
   _tab_daty:=_env.TAB_DATY;

   _tab_usr.cntx_psh();
   _tab_daty.cntx_psh();

   _tab_daty.index(_env.NDX_DATY_DATE);
   _tab_usr.index(_env.NDX_USR_DATE);
   {? _tab.first()
   || {!
      |?
         _tab_daty.prefix(_tab.ACT_UID);
         {? _tab_daty.first()
         || {!
            |?
               _it:=1;
               _deleted:=1;
               _tab_usr.prefix(_tab.ACT_UID,_tab_daty.DATE);
               {? _tab_usr.first()
               || {!
                  |? _next:=0;
                     _ref_nxt:=null();
                     _tab_usr.cntx_psh();
                     {? _tab_usr.next()
                     || _ref_nxt:=_tab_usr.ref()
                     ?};
                     _tab_usr.cntx_pop();

                     {? _it>_env.MAX_USERS
                     || _can_continue:=_tab_usr.del(,1);
                        {? _can_continue>0
                        || _deleted:=1
                        ?}
                     ?};

                     {? _ref_nxt<>null()
                     || _next:=_tab_usr.seek(_ref_nxt)
                     ?};
                     _it+=1;
                     _next>0 & _can_continue>0
                  !}
               ?};

::             Jeśli coś usunąłem w użytkownikach to muszę aktualizować ilość uruchomień
               {? _deleted>0
               || _tab_daty.COUNTER:=0;
                  _tab_daty.COUNT_PR:=0;
                  _tab_daty.COUNT_NP:=0;
                  {? _tab_usr.first()
                  || {!
                     |? _tab_daty.COUNTER+=_tab_usr.COUNTER;
                        _tab_daty.COUNT_PR+=_tab_usr.COUNT_PR;
                        _tab_daty.COUNT_NP:=_tab_usr.COUNT_NP;

                        _tab_usr.next()
                     !}
                  ?};
                  _can_continue:=_tab_daty.put()
               ?};
               _tab_daty.next() & _can_continue>0
            !}
         ?};
         _tab.next() & _can_continue>0
      !}
   ?};
   _tab_daty.cntx_pop();
   _tab_usr.cntx_pop();
   ~~

?};

{? _can_continue>0
|| _result:=1
?};
_result


\filter_max_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Ogranicza dziedzinę stosując podane w okna maksima
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_tab:=_env.TAB_PROC;
_can_continue:=1;
_result:=0;

{? _env.MAX_PROCESSES>0
||
   _tab.cntx_psh();
   _tab.index(_env.NDX_PROC_DUR);
   _tab.prefix();
   _it:=1;
   {? _tab.first()
   || {!
      |? _next:=0;
         _ref_nxt:=null();
         _tab.cntx_psh();
         {? _tab.next()
         || _ref_nxt:=_tab.ref()
         ?};
         _tab.cntx_pop();

         {? _it>_env.MAX_PROCESSES
         || _can_continue:=_tab.del(,1)
         ?};

         {? _ref_nxt<>null()
         || _next:=_tab.seek(_ref_nxt)
         ?};
         _it+=1;
         _next>0 & _can_continue>0
      !}
   ?};
   _tab.cntx_pop();
   ~~
?};

{? _env.MAX_PRELS>0
||
   _tab_prel:=_env.TAB_PREL;

   _tab_prel.cntx_psh();

   _tab_prel.index(_env.NDX_PREL_DUR);

   {? _tab.first()
   || {!
      |?
         _it:=1;
         _tab_prel.prefix(_tab.PROC_REF);
         {? _tab_prel.first()
         ||
            {!
            |? _next:=0;
               _ref_nxt:=null();
               _tab_prel.cntx_psh();
               {? _tab_prel.next()
               || _ref_nxt:=_tab_prel.ref()
               ?};
               _tab_prel.cntx_pop();

               {? _it>_env.MAX_PRELS
               || _can_continue:=_tab_prel.del(,1);
                  {? _can_continue>0
                  || _deleted:=1
                  ?}
               ?};

               {? _ref_nxt<>null()
               || _next:=_tab_prel.seek(_ref_nxt)
               ?};
               _it+=1;
               _next>0 & _can_continue>0
            !}
         ?};
         _tab.next() & _can_continue>0
      !}
   ?};
   _tab_prel.cntx_pop();
   ~~
?};

{? _can_continue>0
|| _result:=1
?};
_result


\refresh_chart_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Odświeża dolny wykres bez konieczności wywoływania formuły przez sam wykres (nie ma utraty focusa)
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_data_id:=$SYSLOG.tm_stamp();
exec('fetch_data','#desktop',_data_id,_env.ctr_id_act,exec('chart_act_tab','#b_stats'),'CHARTUID,CHARTVAL,KOLOR,TOOLTIP,FILTER','params_exec(\'chart_act_prefix\',\'#b_stats\')');
exec('grab_data','#desktop','',_env.ctr_id_act,_env.ctr_chart_act,_data_id);
~~


\refresh_chart_inst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Odświeża dolny wykres bez konieczności wywoływania formuły przez sam wykres (nie ma utraty focusa)
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_data_id:=$SYSLOG.tm_stamp();
exec('fetch_data','#desktop',_data_id,_env.ctr_id_inst,exec('chart_inst_tab','#b_stats'),'CHARTUID,CHARTVAL,KOLOR,TOOLTIP,CHARTTYP','params_exec(\'chart_inst_prefix\',\'#b_stats\')');
exec('grab_data','#desktop','',_env.ctr_id_inst,_env.ctr_chart_inst,_data_id);
~~


\refresh_chart_inst_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Odświeża dolny wykres bez konieczności wywoływania formuły przez sam wykres (nie ma utraty focusa)
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_data_id:=$SYSLOG.tm_stamp();
exec('fetch_data','#desktop',_data_id,_env.ctr_id_inst_act,exec('chart_inst_act_tab','#b_stats'),'CHARTUID,CHARTVAL,KOLOR,TOOLTIP,FILTER,CHARTTYP','params_exec(\'chart_inst_act_prefix\',\'#b_stats\')');
exec('grab_data','#desktop','',_env.ctr_id_inst_act,_env.ctr_chart_inst_act,_data_id);
~~


\refresh_chart_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Odświeża górny wykres bez konieczności wywoływania formuły przez sam wykres (nie ma utraty focusa)
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_data_id:=$SYSLOG.tm_stamp();
exec('fetch_data','#desktop',_data_id,_env.ctr_id_all,exec('chart_all_tab','#b_stats'),'CHARTUID,CHARTVAL,KOLOR,TOOLTIP,FILTER','');
exec('grab_data','#desktop','',_env.ctr_id_all,_env.ctr_chart_all,_data_id);
~~


\tab_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy tabelkę procesów w zakresie czasu
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_result:=tab_tmp(2,
:: 'POLE','TYP','Nazwa w oknie',
   'SYMBOL','STRING[100]','Symbol procesu',
   'NAME','STRING[45]','Nazwa procesu',
   'VER','STRING[10]','Wersja',
   'ACT_UID','STRING[45]','Identyfikator dla wykresu',
   'PROC_REF','STRING[16]','Ref SQL procesu',
   'COUNTER','REAL','Licznik',
   'OWNER','STRING[100]','Właściciel procesu',
   'DUR_ALL','REAL','Całkowity czas trwania',
   'DUR_AVG','REAL','Średni czas trwania',
   'DUR_AVGR','REAL','Średni czas trwania (niezaokrąglony)',
   'DUR_MIN','REAL','Minimalny czas trwania',
   'DUR_MAX','REAL','Maksymalny czas trwania',
   'DUR_MED','REAL','Mediana czasu trwania',
   'DUR_MEDR','REAL','Mediana czasu trwania (niezaokrąglona)',
   'DUR_DEV','REAL','Średnie odchylenie od planu (real)',
   'DUR_DEVS','STRING[10]','Średnie odchylenie od planu',
   'DUR_STR','STRING[100]','Czas trwania w postaci stringa',
   'DUR_JM','STRING[10]','Jednostka miary średniego czasu trwania',
   'DUR_NORM','REAL','Norma czasu trwania',
   'DUR_NORR','REAL','Norma czasu trwania (niezaokrąglona)',
   'KOLOR','STRING[11]','Kolor dla wykresu',
   'TOOLTIP','STRING[255]','Dymek dla wykresu',
   'FILTER','INTEGER','Czy znajduje się w dziedzinie filtra',
   'CHARTUID','STRING[100]','Identyfikator kolumny dla wykresu',
   'CHARTVAL','REAL','Wartość kolumny dla wykresu'
);
_result


\tab_prel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy tabelkę elementów procesu
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_env.TAB_PREL:=tab_tmp(2,
:: 'POLE','TYP','Nazwa w oknie',
   'PROC_REF','STRING[16]','SQL ref procesu',
   'PREL_REF','STRING[16]','SQL ref B_PRELa',
   'SYMBOL','STRING[100]','Symbol',
   'CLASS','STRING[30]','Klasa elementu',
   'UID','STRING[15]','Unikalny identyfikator',
   'DUR_ALL','REAL','Całkowity czas trwania',
   'DUR_AVG','REAL','Średni czas trwania',
   'DUR_AVGR','REAL','Średni czas trwania (niezaokrąglony)',
   'DUR_MIN','REAL','Minimalny czas trwania',
   'DUR_MAX','REAL','Maksymalny czas trwania',
   'DUR_MED','REAL','Mediana czasu trwania',
   'DUR_MEDR','REAL','Mediana czasu trwania (niezaokrąglona)',
   'DUR_DEV','REAL','Średnie odchylenie od planu (real)',
   'DUR_DEVS','STRING[10]','Średnie odchylenie od planu',
   'DUR_STR','STRING[100]','Czas trwania w postaci stringa',
   'DUR_JM','STRING[10]','Jednostka miary średniego czasu trwania',
   'DUR_NORM','REAL','Norma czasu trwania',
   'DUR_NORR','REAL','Norma czasu trwania (niezaokrąglona)',
   'COUNTER','REAL','Licznik',
   'KOLOR','STRING[11]','Kolor dla wykresu',
   'FILTER','INTEGER','Czy znajduje się w dziedzinie filtra',
   'TOOLTIP','STRING[255]','Dymek dla wykresu',
   'CHARTUID','STRING[100]','Identyfikator kolumny dla wykresu',
   'CHARTVAL','REAL','Wartość kolumny dla wykresu',
   'CHARTTYP','INTEGER','Typ elementu na wykresie 0 słupek, 1 linia'
);
~~


\tab_biprel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy tabelkę użytkowników w zakresie czasu
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: tab_tmp
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_result:=tab_tmp(3,
   'PROC_REF','STRING[16]','SQL ref procesu',
   'PREL_UID','STRING[15]','Unikalny identyfikator elementu procesu',
   'BIP_REF','STRING[16]','SQLRef BI_PRELa',
   'PREL_REF','STRING[16]','SQLRef B_PRELa',
   'UID','STRING[20]','Unikalny identyfikator',
   'DESCTODO','STRING[255]','Opis na TODO',
   'DUR_ALL','REAL','Całkowity czas trwania',
   'DUR_AVG','REAL','Czas trwania',
   'DUR_AVGR','REAL','Średni czas trwania (niezaokrąglony)',
   'DUR_DEV','REAL','Odchylenie od planu (real)',
   'DUR_DEVS','STRING[10]','Odchylenie od planu',
   'DUR_STR','STRING[100]','Czas trwania w postaci stringa',
   'DUR_JM','REAL','Czas trwania w wybranej jednostce',
   'JM','STRING[10]','Jednostka miary średniego czasu trwania',
   'DUR_NORM','REAL','Norma czasu trwania',
   'DUR_NORR','REAL','Norma czasu trwania (niezaokrąglona)',
   'USR_KOD','STRING[10]','Kod użytkownika',
   'USR_DANE','STRING[50]','Dane użytkownika',
   'START','REAL','Czas rozpoczęcia',
   'STOP','REAL','Czas zakończenia',
   'PL_END','REAL','Planowany termin realizacji',
   'START_ST','STRING[20]','Czas rozpoczęcia w postaci stringa',
   'END_ST','STRING[20]','Czas zakończenia w postaci stringa',
   'TERMIN','STRING[20]','Planowany termin realizacji',
   'CHARTUID','STRING[100]','Identyfikator kolumny dla wykresu',
   'CHARTVAL','REAL','Wartość kolumny dla wykresu',
   'KOLOR','STRING[11]','Kolor dla wykresu',
   'FILTER','INTEGER','Czy znajduje się w dziedzinie filtra',
   'TOOLTIP','STRING[255]','Dymek dla wykresu',
   'CHARTTYP','INTEGER','Typ elementu na wykresie 0 słupek, 1 linia',
   'OUTNUM1','REAL','1 param. wyjściowy - number',
   'OUTNUM2','REAL','2 param. wyjściowy - number',
   'OUTNUM3','REAL','3 param. wyjściowy - number'
);
_result


\win_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy okno wertowania procesów w zakresie czasu
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::       _b - STRING - identyfikator okna
::       _c - tab_tmp - tabelka której utworzyć okno
::   WY: STRING - uchwyt do okna
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_wid:=_b;
_tab:=_c;

_title:='Procesy w okresie %1 - %2'@[exec('to_string','#tm_stamp',_env.TM_START,1),exec('to_string','#tm_stamp',_env.TM_END,1)];

_wer:=_tab.mk_sel(_title,'P',0,_wid,1,1,,,'U');

_tab.win_fld(_wer,,'SYMBOL'  ,,,12,,,'Symbol procesu'@,0);
_tab.win_fld(_wer,,'NAME'    ,,,35,,,'Nazwa procesu'@,0);
_tab.win_fld(_wer,,'VER'     ,,,-5,,,'Wersja'@,0);
_tab.win_fld(_wer,,'DUR_AVG' ,,,-8,_env.DOKL,,'Średni czas trwania'@,0);
_tab.win_fld(_wer,,'DUR_MED' ,,,-8,_env.DOKL,,'Mediana'@,0);
_tab.win_fld(_wer,,'DUR_NORM',,,-8,_env.DOKL,,'Planowany czas trwania'@,0);
_tab.win_fld(_wer,,'DUR_JM'  ,,,5,0,,'jm'@,0);
_tab.win_fld(_wer,,'COUNTER' ,,,-10,0,,'Liczba uruchomień'@,0);

_tab.fld_attr('KOLOR',2);
_tab.fld_attr('TOOLTIP',2);
_tab.fld_attr('FILTER',2);

_fb:="params_exec('plan_action','#b_stats',B_PROC,\"params_exec('refresh_chart_all','#b_stats')\")";
_gr1:="params_exec('plan_action_gr1','#b_stats')";
_gr2:="params_exec('plan_action_gr2','#b_stats')";
_tab.win_act(_wer,,'Formuła','Planuj'@,,,_fb,,,1,_gr1,_gr2);
_tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['&Planuj'@],'menu:P',,,,,,'noempty');

_fml:="
   params_set(params_get());
   _env:=params_get().env;
   _result:='';
   _tab:=cur_tab(1,1);
   {? _tab.DUR_NORM>0
   || {? _tab.DUR_AVG>_tab.DUR_NORM
      ||
::       Przekracza normę, zwracam kolor czerwony
         _result:=_env.CHART_COLOR_OVER+','
      |? _tab.DUR_AVG<=_tab.DUR_NORM
      ||
::       Czas w normie, zwracam kolor zielony
         _result:=_env.CHART_COLOR_UNDER+','
      ?}
   ?};
   _result
";
_tab.fld_fml('DUR_AVG','BEFORE_DISPLAY',_fml);
_fml:="
   params_set(params_get());
   _env:=params_get().env;
   _result:='';
   _tab:=cur_tab(1,1);
   {? _tab.DUR_NORM>0
   || {? _tab.DUR_MED>_tab.DUR_NORM
      ||
::       Przekracza normę, zwracam kolor czerwony
         _result:=_env.CHART_COLOR_OVER+','
      |? _tab.DUR_MED<=_tab.DUR_NORM
      ||
::       Czas w normie, zwracam kolor zielony
         _result:=_env.CHART_COLOR_UNDER+','
      ?}
   ?};
   _result
";
_tab.fld_fml('DUR_MED','BEFORE_DISPLAY',_fml);

_fb:="
   B_PROC.cntx_psh(); B_PROC.prefix();
   {? B_PROC.seek(cur_tab(1,1).PROC_REF)
   || exec('select4proc','#b_design',B_PROC.ref(),0,,0)
   ?};
   B_PROC.cntx_pop();
   ~~
";
_tab.win_act(_wer,,'Formuła','Pod&gląd procesu'@,,,_fb);
_tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['Pod&gląd procesu'@],'menu:G',,,,,,'noempty');

_fb:="
   params_set(params_get);
   _env:=params_get().env;
   B_PROC.cntx_psh();
   B_PROC.prefix();
   {? B_PROC.seek(_env.SEL_PROC)
   || exec('select','#bi_inst',B_PROC.ref())

   ?};
   B_PROC.cntx_pop();
   ~~
";
_tab.win_act(_wer,,'Formuła','&Instancje'@,,,_fb);
_tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['&Instancje'@],'menu:I',,,,,,'noempty');

:: Czary, żeby skaner tłumaczeń to złapał, nie usuwać
'Instancje procesu: %1'@[''];
'Wykres czasu trwania instancji procesu: %1 w okresie %2 - %3'@['','',''];
_fb:="
   params_set(params_get);
   exec('instance_chart','#b_stats');
   ~~
";
_tab.win_act(_wer,,'Formuła','&Wykres instancji'@,,,_fb);
_tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['&Wykres instancji'@],'menu:W',,,,,,'noempty');


::{? __develop>0
::||
::   _fb:="
::      params_set(params_get());
::      _env:=params_get().env;
::      {? FUN.ask('Inicjalizować dane demo?'@)>0
::      || exec('demo','#b_stats',_env.USER);
::         _env.reload(1)
::      ?};
::      1
::   ";
::   _tab.win_act(_wer,0,'Formuła','&Demo'@@,,,_fb,,1,,,,'D');
::   _tab.win_act(_wer,1,'Formuła','&Demo'@@,,,_fb,,1,,,,'D');
::
::   _fb:="
::      params_set(params_get());
::      _env:=params_get().env;
::      {? FUN.ask('Czyścić statystyki?'@)>0
::      || exec('clear_stats','#b_stats');
::         _env.reload(1)
::      ?};
::      1
::   ";
::   _tab.win_act(_wer,0,'Formuła','&Czyść statystyki'@@,,,_fb,,,,,,'C');
::   _tab.win_act(_wer,1,'Formuła','&Czyść statystyki'@@,,,_fb,,,,,,'C');
::   ~~
::?};

_fb:="params_exec('legenda','#b_stats')";
_tab.win_act(_wer,,'Formuła','Legenda'@,,,_fb);
_fb:="
   B_PROC.cntx_psh(); B_PROC.prefix();
   {? B_PROC.seek(cur_tab(1,1).PROC_REF)
   || exec('display','#b_proc')
   ?};
   B_PROC.cntx_pop();
   ~~
";
_tab.win_act(_wer,,'Wyświetl',,,,,_fb);

_tab.win_act(_wer,,'Kolejność',,,,,"params_exec('refresh_chart_all','#b_stats')");
::_tab.win_act(_wer,,'Rekord',,,,"exec('colorizer','#b_stats')");

_tab.win_sel(_wer);
_wer


\win_prel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy okno wertowania dat w zakresie czasu
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::       _b - STRING - identyfikator okna
::   WY: STRING - uchwyt do okna
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_env:=_a;
_wid:=_b;

_tab:=_env.TAB_PREL;

_title:='Elementy procesu';

_wer:=_tab.mk_sel(_title,'P',0,_wid,1,1,,,'U');

_tab.win_fld(_wer,,'SYMBOL'  ,,,47,,,'Symbol'@,0);
_tab.win_fld(_wer,,'CLASS'  ,,,-10,,,'Klasa'@,0);
_tab.win_fld(_wer,,'DUR_AVG' ,,,-8,_env.DOKL,,'Średni czas trwania'@,0);
_tab.win_fld(_wer,,'DUR_MED' ,,,-8,_env.DOKL,,'Mediana'@,0);
_tab.win_fld(_wer,,'DUR_NORM',,,-8,_env.DOKL,,'Planowany czas trwania'@,0);
_tab.win_fld(_wer,,'DUR_JM'  ,,,5,,,'jm'@,0);
_tab.win_fld(_wer,,'COUNTER' ,,,-8,0,,'Liczba uruchomień'@,0);

_fb:="params_exec('plan_action','#b_stats',B_PREL,\"params_exec('refresh_chart_act','#b_stats')\")";
_gr1:="params_exec('plan_action_gr1','#b_stats')";
_gr2:="params_exec('plan_action_gr2','#b_stats')";
_tab.win_act(_wer,,'Formuła','&Planuj'@,,,_fb,,,1,_gr1,_gr2);
_tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['&Planuj'@],'menu:P',,,,,,'noempty');

_fml:="
   params_set(params_get());
   _env:=params_get().env;
   _result:='';
   _tab:=cur_tab(1,1);
   {? _tab.DUR_NORM>0
   || {? _tab.DUR_AVG>_tab.DUR_NORM
      ||
::       Przekracza normę, zwracam kolor czerwony
         _result:=_env.CHART_COLOR_OVER+','
      |? _tab.DUR_AVG<=_tab.DUR_NORM
      ||
::       Czas w normie, zwracam kolor zielony
         _result:=_env.CHART_COLOR_UNDER+','
      ?}
   ?};
   _result
";
_tab.fld_fml('DUR_AVG','BEFORE_DISPLAY',_fml);
_fml:="
   params_set(params_get());
   _env:=params_get().env;
   _result:='';
   _tab:=cur_tab(1,1);
   {? _tab.DUR_NORM>0
   || {? _tab.DUR_MED>_tab.DUR_NORM
      ||
::       Przekracza normę, zwracam kolor czerwony
         _result:=_env.CHART_COLOR_OVER+','
      |? _tab.DUR_MED<=_tab.DUR_NORM
      ||
::       Czas w normie, zwracam kolor zielony
         _result:=_env.CHART_COLOR_UNDER+','
      ?}
   ?};
   _result
";
_tab.fld_fml('DUR_MED','BEFORE_DISPLAY',_fml);

_fb:="
   B_PREL.cntx_psh(); B_PREL.prefix();
   {? B_PREL.seek(cur_tab(1,1).PREL_REF)
   || exec('select4proc','#b_design',B_PREL.B_PROC,0,B_PREL.ref(),0)
   ?};
   B_PREL.cntx_pop();
   ~~
";
_tab.win_act(_wer,,'Formuła','Pokaż w p&rocesie'@,,,_fb);
_tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['Pokaż w p&rocesie'@],'menu:R',,,,,,'noempty');

_fb:="params_exec('legenda','#b_stats')";
_tab.win_act(_wer,,'Formuła','Legenda'@,,,_fb);
::_fb:="
::   B_PREL.cntx_psh(); B_PREL.prefix();
::   {? B_PREL.seek(cur_tab(1,1).PREL_REF)
::   || exec('properties','#b_design',B_PREL.ref(),0)
::   ?};
::   B_PREL.cntx_pop();
::   ~~
::";
::_tab.win_act(_wer,,'Wyświetl',,,,,_fb);
::_tab.win_act(_wer,,'Kolejność');
_tab.win_act(_wer,,'Kolejność',,,,,"params_exec('refresh_chart_act','#b_stats')");
::_tab.win_act(_wer,,'Rekord',,,,"exec('colorizer','#b_stats')");

_tab.win_sel(_wer);
_wer


\win_biprel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy okno wertowania użytkowników w zakresie czasu
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::       _b - STRING - identyfikator okna
::   WY: STRING - uchwyt do okna
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_env:=_a;
_wid:=_b;

_tab:=_env.TAB_BIPREL;

_title:='Instacje elementu';

_wer:=_tab.mk_sel(_title,'P',0,_wid,1,1,,,'U');

_tab.win_fld(_wer,,'DESCTODO' ,,,10,,,'Opis zadania'@,0);
_tab.win_fld(_wer,,'DUR_AVG'  ,,,10,_env.DOKL,,'Czas trwania'@,0);
_tab.win_fld(_wer,,'DUR_NORM' ,,,-8,_env.DOKL,,'Planowany czas trwania'@,0);
_tab.win_fld(_wer,,'JM'       ,,,5,,,'jm'@,0);
_tab.win_fld(_wer,,'USR_KOD'  ,,,-10,,,'Użytkownik'@,0);
_tab.win_fld(_wer,,'USR_DANE' ,,,-10,,,'Dane użytkownika'@,0);
_tab.win_fld(_wer,,'START_ST' ,,,-12,,,'Czas rozpoczęcia'@,0);
_tab.win_fld(_wer,,'END_ST'   ,,,-12,,,'Czas zakończenia'@,0);
_tab.win_fld(_wer,,'TERMIN'   ,,,-12,,,'Wykonaj do'@,0);

_fml:="
   params_set(params_get());
   _env:=params_get().env;
   _result:='';
   _tab:=cur_tab(1,1);
   {? _tab.DUR_NORM>0
   || {? _tab.DUR_AVG>_tab.DUR_NORM
      ||
::       Przekracza normę, zwracam kolor czerwony
         _result:=_env.CHART_COLOR_OVER+','
      |? _tab.DUR_AVG<=_tab.DUR_NORM
      ||
::       Czas w normie, zwracam kolor zielony
         _result:=_env.CHART_COLOR_UNDER+','
      ?}
   ?};
   _result
";
_tab.fld_fml('DUR_AVG','BEFORE_DISPLAY',_fml);

_fb:="
   exec('cntx_psh','#bi_arch');
   _mask:=ref_name(cur_tab(1,1).BIP_REF);
   _mask:=_mask+4;
   exec('open','#bi_arch',_mask);
   BI_PREL.prefix();
   {? BI_PREL.seek(cur_tab(1,1).BIP_REF)
   || exec('select4biproc_alt','#b_design',BI_PREL.BI_PROC,BI_PREL.B_PREL,'bi_proc_todo')

   ?};
   exec('cntx_pop','#bi_arch');
   ~~
";
_tab.win_act(_wer,,'Formuła','&Instancja procesu'@,,,_fb);
_tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['&Instancja procesu'@],'menu:I',,,,,,'noempty');

_fb:="params_exec('legenda','#b_stats')";
_tab.win_act(_wer,,'Formuła','Legenda'@,,,_fb);

_tab.win_act(_wer,,'Kolejność',,,,,"params_exec('refresh_chart_inst_act','#b_stats')");
::_tab.win_act(_wer,,'Rekord',,,,"exec('colorizer','#b_stats')");

_tab.win_sel(_wer);
_wer


\load_procesy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Ładuje zawartość okna dla wszystkich procesów
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_fml:="
   exec('mask_load_procesy','#b_stats',_a,_b)
";

exec('for_each_mask','#table',BI_PROC,_fml,,,_env,1);

exec('filter_max_proc','#b_stats',_env);

_env.TAB_PROC.index(_env.NDX_PROC_DUR);
_env.TAB_PROC.clear();
_env.TAB_PROC.first();

_env.TAB_PREL.index(_env.NDX_PREL_DUR);
_env.TAB_PREL.clear();
_env.TAB_PREL.first();

_env.TAB_BIPREL.index(_env.NDX_BIPREL_DUR);
_env.TAB_BIPREL.clear();
_env.TAB_BIPREL.first();

_env.TAB_PROC_DUR.index(_env.NDX_PROC_DUR_MED2);
_env.TAB_PROC_DUR.clear();
_env.TAB_PROC_DUR.first();
~~


\mask_load_procesy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Formuła wywoływana wewnątrz każdej maski tabeli BI_PROC, ładuje do tabel tymczasowych
::       rekordy ze statystyk użycia
::   WE: _a - alias tabeli
::       _b - env - środowisko działania - wynik działania exec('env','#b_stats')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_b;

_int_view:=exec('interval','#interval');
_int_view.START:=_env.TM_START;
_int_view.END:=_env.TM_END;

BI_PREL.cntx_psh();
BI_PROC.cntx_psh();
BI_PROC.index('STOP');
BI_PROC.prefix(REF.FIRMA,exec('ZAKONCZONY','#bi_stat'));

_tab_proc_med:=_env.TAB_PROC_MED;
_tab_prel_med:=_env.TAB_PREL_MED;
_tab_iproc:=_env.TAB_PROC_DUR;
_tab_iproc.index(_env.NDX_PROC_DUR_MED1);
_tab_iprel:=_env.TAB_PREL_DUR;
_tab_iprel.index(_env.NDX_PREL_DUR_MED1);
_int_rec:=exec('interval','#interval');

_can_continue:=1;

{? BI_PROC.find_ge(_env.TM_START)
||
   {!
   |?
      _start:=BI_PROC.START;
      {? _start=0
      || _start:=BI_PROC.TM_BORN
      ?};
      _int_rec.START:=_start;
      _int_rec.END:=BI_PROC.STOP;

      _can_continue:=1;
      {? _env.SAME_DAY>0
      || _day_start:=exec('tm_stamp2date','#tm_stamp',_int_rec.START);
         _day_stop:=exec('tm_stamp2date','#tm_stamp',_int_rec.END);

         {? _day_start<>_day_stop
         || _can_continue:=0
         ?}
      ?};

      {? _can_continue>0 & exec('intervals_chk','#interval',_int_rec,_int_view)>0
      ||

         _tab_iproc.prefix($BI_PROC.ref());
         {? _tab_iproc.first()=0
         || _tab_iproc.blank();
            _tab_iproc.UID:=BI_PROC.UID;
            _tab_iproc.BI_PROC:=$BI_PROC.ref();
            _tab_iproc.B_PROC:=$BI_PROC.B_PROC;
            _tab_iproc.DUR_RAW:=exec('interval_dur','#interval',_int_rec);
::            _tab_iproc.DUR_RAW:=exec('round','#tm_stamp',_tab_iproc.DUR_RAW,exec('second','#tm_stamp'));
            _tab_iproc.DUR_JM:=(_tab_iproc.DUR_RAW/_env.TAB_JM.VALUE)$_env.DOKL;
            _tab_iproc.JM:=_env.TAB_JM.SYMBOL;
            _tab_iproc.DATA:=BI_PROC.BORN_D;
            _tab_iproc.TIME:=BI_PROC.BORN_T;
            _tab_iproc.CHARTUID:=BI_PROC.CODE;
            _tab_iproc.CHARTVAL:=_tab_iproc.DUR_JM;
            _tab_iproc.KOLOR:=_env.CHART_COLOR;
            _tab_iproc.CHARTTYP:=0;
            _tab_iproc.TOOLTIP:=exec('get_tooltip_inst','#b_stats',_tab_iproc);
            _tab_iproc.add()
         ?};

         _mask:=(4+BI_PREL.name())+(BI_PROC.name()+4);
         BI_PREL.use(_mask);
         BI_PREL.index('BISTATUS');
         BI_PREL.prefix(BI_PROC.ref());
         {? BI_PREL.first()
         || {!
            |?
               _int_rec.START:=BI_PREL.START;
               _int_rec.END:=BI_PREL.STOP;
               _tab_iprel.prefix($BI_PREL.ref());
               {? _tab_iprel.first()=0
               || _tab_iprel.blank();
                  _tab_iprel.BI_PREL:=$BI_PREL.ref();
                  _tab_iprel.B_PREL:=$BI_PREL.B_PREL;
                  _tab_iprel.DUR_RAW:=exec('interval_dur','#interval',_int_rec);
::                  _tab_iprel.DUR_RAW:=exec('round','#tm_stamp',_tab_iprel.DUR_RAW,exec('second','#tm_stamp'));
                  _tab_iprel.DUR_JM:=(_tab_iprel.DUR_RAW/_env.TAB_JM.VALUE)$_env.DOKL;
                  _tab_iprel.add()
               ?};
               BI_PREL.next()
            !}
         ?}
      ?};
      BI_PROC.next()
   !}
?};
_tab_iproc.index(_env.NDX_PROC_DUR_MED2);
_tab_iprel.index(_env.NDX_PREL_DUR_MED2);
_tab_iprel.clear();
_tab_iproc.clear();

{? BI_PROC.find_ge(_env.TM_START)
|| {!
   |?
      _int_rec.START:=BI_PROC.STOP;
      _int_rec.END:=BI_PROC.STOP;

      _can_continue:=1;
      {? _env.SAME_DAY>0
      ||
         _start:=BI_PROC.START;
         {? _start=0
         || _start:=BI_PROC.TM_BORN
         ?};
         _day_start:=exec('tm_stamp2date','#tm_stamp',_start);
         _day_stop:=exec('tm_stamp2date','#tm_stamp',BI_PROC.STOP);

         {? _day_start<>_day_stop
         || _can_continue:=0
         ?}
      ?};

      {? _can_continue>0 & exec('intervals_chk','#interval',_int_rec,_int_view)>0
      ||
         _tab_proc_med.prefix($BI_PROC.B_PROC);
         {? _tab_proc_med.first()=0
         ||
::          Obliczam medianę dla tego procesu
            _tab_iproc.prefix($BI_PROC.B_PROC);
            _size:=_tab_iproc.size();

            _mediana:=0;
            _can_continue:=1;
            {? _size%*2=0
            ||
::             Parzysta liczba elementów, mediana to średnia dwóch środkowych elementów
               _it:=1;
               {? _tab_iproc.first()
               ||
                  {? _tab_iproc.size()>1
                  || {!
                     |? _val1:=0;
                        _val2:=0;
                        {? _it=floor(_size/2)
                        || _can_continue:=0;
                           _val1:=_tab_iproc.DUR_RAW;
                           _tab_iproc.cntx_psh();
                           {? _tab_iproc.next()
                           || _val2:=_tab_iproc.DUR_RAW
                           ?};
                           _tab_iproc.cntx_pop();
                           _mediana:=exec('mean_arithmetic','#math',_val1,_val2);
                           _mediana:=exec('round','#tm_stamp',_mediana,exec('second','#tm_stamp'))
                        ?};
                        _it+=1;
                        _tab_iproc.next() & _can_continue>0
                     !}
                  ||
::                   Tylko jeden element
                     _mediana:=_tab_iproc.DUR_RAW;
                     _mediana:=exec('round','#tm_stamp',_mediana,exec('second','#tm_stamp'))
                  ?}
               ?}
            ||
::             Nieparzysta liczba elementów, mediana to wartość środkowego elementu
               _it:=1;
               {? _tab_iproc.first()
               ||
                  {? _tab_iproc.size()>1
                  ||
                     {!
                     |?
                        {? _it=ceil(_size/2)
                        || _can_continue:=0;
                           _mediana:=_tab_iproc.DUR_RAW;
                           _mediana:=exec('round','#tm_stamp',_mediana,exec('second','#tm_stamp'))
                        ?};
                        _it+=1;
                        _tab_iproc.next() & _can_continue>0
                     !}
                  ||
::                   Tylko jeden element
                     _mediana:=_tab_iproc.DUR_RAW;
                     _mediana:=exec('round','#tm_stamp',_mediana,exec('second','#tm_stamp'))
                  ?}
               ?}
            ?};
            _tab_proc_med.blank();
            _tab_proc_med.B_PROC:=$BI_PROC.B_PROC;
            _tab_proc_med.MED_RAW:=_mediana;
            _tab_proc_med.MED_JM:=(_mediana/_env.TAB_JM.VALUE)$_env.DOKL;
            _tab_proc_med.add();

::          Dodaje na wykres medianę
            _tab_iproc.clear();
            _tab_iproc.blank();
            _tab_iproc.BI_PROC:=$BI_PROC.ref();
            _tab_iproc.B_PROC:=$BI_PROC.B_PROC;
            _tab_iproc.JM:=_env.TAB_JM.SYMBOL;
            _tab_iproc.CHARTVAL:=(_mediana/_env.TAB_JM.VALUE)$_env.DOKL;
            _tab_iproc.CHARTUID:='Mediana: '+$(_tab_iproc.CHARTVAL)+' '+_env.TAB_JM.SYMBOL;
            _tab_iproc.KOLOR:='255:0:0';
            _tab_iproc.CHARTTYP:=1;
            _tab_iproc.add();

            ~~
         ?};
         exec('biproc2proc','#b_stats',_env);
         _mask:=(4+BI_PREL.name())+(BI_PROC.name()+4);
         BI_PREL.use(_mask);
         BI_PREL.index('BISTATUS');
         BI_PREL.prefix(BI_PROC.ref());
         {? BI_PREL.first()
         || {!
            |?

               _tab_prel_med.prefix($BI_PREL.B_PREL);
               {? _tab_prel_med.first()=0
               ||
::                Obliczam medianę dla tego elementu procesu
                  _tab_iprel.prefix($BI_PREL.B_PREL);
                  _size:=_tab_iprel.size();

                  _mediana:=0;
                  _can_continue:=1;
                  {? _size%*2=0
                  ||
::                   Parzysta liczba elementów, mediana to średnia dwóch środkowych elementów
                     _it:=1;
                     {? _tab_iprel.first()
                     ||
                        {? _tab_iprel.size()>1
                        || {!
                           |? _val1:=0;
                              _val2:=0;
                              {? _it=floor(_size/2)
                              || _can_continue:=0;
                                 _val1:=_tab_iprel.DUR_RAW;
                                 _tab_iprel.cntx_psh();
                                 {? _tab_iprel.next()
                                 || _val2:=_tab_iprel.DUR_RAW
                                 ?};
                                 _tab_iprel.cntx_pop();
                                 _mediana:=exec('mean_arithmetic','#math',_val1,_val2);
                                 _mediana:=exec('round','#tm_stamp',_mediana,exec('second','#tm_stamp'))
                              ?};
                              _it+=1;
                              _tab_iprel.next() & _can_continue>0
                           !}
                        ||
::                         Tylko jeden element
                           _mediana:=_tab_iprel.DUR_RAW;
                           _mediana:=exec('round','#tm_stamp',_mediana,exec('second','#tm_stamp'))
                        ?}
                     ?}
                  ||
::                   Nieparzysta liczba elementów, mediana to wartość środkowego elementu
                     _it:=1;
                     {? _tab_iprel.first()
                     ||
                        {? _tab_iprel.size()>1
                        ||
                           {!
                           |?
                              {? _it=ceil(_size/2)
                              || _can_continue:=0;
                                 _mediana:=_tab_iprel.DUR_RAW;
                                 _mediana:=exec('round','#tm_stamp',_mediana,exec('second','#tm_stamp'))
                              ?};
                              _it+=1;
                              _tab_iprel.next() & _can_continue>0
                           !}
                        ||
::                         Tylko jeden element
                           _mediana:=_tab_iprel.DUR_RAW;
                           _mediana:=exec('round','#tm_stamp',_mediana,exec('second','#tm_stamp'))
                        ?}
                     ?}
                  ?};
                  _tab_prel_med.blank();
                  _tab_prel_med.B_PREL:=$BI_PREL.B_PREL;
                  _tab_prel_med.MED_RAW:=_mediana;
                  _tab_prel_med.MED_JM:=(_mediana/_env.TAB_JM.VALUE)$_env.DOKL;
                  _tab_prel_med.add()
               ?};
               exec('biprel2biprel','#b_stats',_env);
               BI_PREL.next()
            !}
         ?}
      ?};
      BI_PROC.next()
   !}
?};
BI_PROC.cntx_pop();
BI_PREL.cntx_pop();
1


\biproc2proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Dodaje do tabeli .TAB_PROC jeden rekord na podstawie BI_PROCa
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_tab:=_env.TAB_PROC;
_result:=0;

{? BI_PROC.START=0
|| return()
?};
{? BI_PROC.STOP=0
|| return()
?};

B_PROC.cntx_psh();
USERS.cntx_psh();
_tab.cntx_psh();
_tab.index(_env.NDX_PROC_REF);
_tab.prefix($BI_PROC.B_PROC);

BI_PROC.B_PROC();
_interval:=exec('interval','#interval');
_start:=BI_PROC.START;
{? _start=0
|| _start:=BI_PROC.TM_BORN
?};
_interval.START:=exec('min','#math',_start,BI_PROC.STOP);
_interval.END:=exec('max','#math',_start,BI_PROC.STOP);
_duration:=exec('interval_dur','#interval',_interval);
_duration:=exec('round','#tm_stamp',_duration,exec('second','#tm_stamp'));

:: Sprawdzam czy została obliczona mediana
_can_continue:=1;
_mediana:=0;
_med_raw:=0;
_env.TAB_PROC_MED.cntx_psh();
_env.TAB_PROC_MED.prefix($B_PROC.ref());
{? _env.TAB_PROC_MED.first()
|| _mediana:=_env.TAB_PROC_MED.MED_JM;
   _med_raw:=_env.TAB_PROC_MED.MED_RAW;

   {? _med_raw>0 & _duration>0
   ||
::    Jest mediana więc obliczam procent odchylenia od mediany
      _dev:=exec('calc_deviation','#b_stats',_env,_duration,_med_raw,2);
      {? _dev<=0
      || _dev*=(-1)
      ?};

      {? _env.MAX_DEVIATION>0 & _dev>_env.MAX_DEVIATION
      ||
::       Procent odchylenia od mediany przekracza podane przez użytkownika maksimum
::       więc tego rekordu w ogóle nie uwzględniam
         _can_continue:=0
      ?}
   || {? _env.MAX_DEVIATION>0
      || _can_continue:=0
      ?}
   ?}
?};
_env.TAB_PROC_MED.cntx_pop();

{? _can_continue>0
||
   {? _tab.first()
   ||
::    Jest rekord - aktualizuję go
      _dur_jm:=(_duration/_env.TAB_JM.VALUE)$_env.DOKL;

      _tab.COUNTER+=1;
      _tab.DUR_ALL+=_duration;
      _tab.DUR_AVGR:=_tab.DUR_ALL/_tab.COUNTER;
      _tab.DUR_AVGR:=exec('round','#tm_stamp',_tab.DUR_AVGR,exec('second','#tm_stamp'));
      _tab.DUR_AVG:=(_tab.DUR_AVGR/_env.TAB_JM.VALUE)$_env.DOKL;
      _tab.CHARTVAL:=_tab.DUR_AVG;
      {? _tab.DUR_MIN>_dur_jm
      || _tab.DUR_MIN:=_dur_jm
      ?};
      {? _tab.DUR_MAX<_dur_jm
      || _tab.DUR_MAX:=_dur_jm
      ?};
      _tab.DUR_DEV:=exec('calc_deviation','#b_stats',_env,_tab.DUR_AVGR,B_PROC.TM_PLAN);
      _tab.DUR_DEVS:=$_tab.DUR_DEV+'%';
      _tab.DUR_STR:=exec('to_string','#tm_stamp',_tab.DUR_AVGR);
      _tab.DUR_JM:=_env.TAB_JM.SYMBOL;
      {? B_PROC.TM_PLAN>0
      || {? _tab.DUR_AVG>_tab.DUR_NORM
         || _tab.KOLOR:=_env.CHART_COLOR_OVER
         |? _tab.DUR_AVG<=_tab.DUR_NORM
         || _tab.KOLOR:=_env.CHART_COLOR_UNDER
         || _tab.KOLOR:=_env.CHART_COLOR
         ?}
      || _tab.KOLOR:=_env.CHART_COLOR
      ?};
      _tab.TOOLTIP:=exec('get_tooltip_proc','#b_stats',_env);
      _result:=_tab.put();
      ~~
   ||
::    Nie ma rekordu - zakładam nowy
      _tab.blank();
      _tab.SYMBOL:=B_PROC.SYMBOL;
      _tab.NAME:=B_PROC.NAME;
      _tab.VER:=B_PROC.VER;
      _tab.PROC_REF:=$B_PROC.ref();
      _tab.COUNTER:=1;
      _tab.OWNER:=B_PROC.OWNER().DANE;
      _tab.CHARTUID:=B_PROC.SYMBOL+' ('+B_PROC.VER+')';

      _tab.DUR_ALL:=_duration;
      _tab.DUR_AVGR:=_duration;
      _tab.DUR_AVG:=(_duration/_env.TAB_JM.VALUE)$_env.DOKL;
      _tab.CHARTVAL:=_tab.DUR_AVG;
      _tab_DUR_MIN:=(_duration/_env.TAB_JM.VALUE)$_env.DOKL;
      _tab_DUR_MAX:=(_duration/_env.TAB_JM.VALUE)$_env.DOKL;

      _tab.DUR_MED:=_mediana;
      _tab.DUR_MEDR:=_med_raw;

      _tab.DUR_DEV:=exec('calc_deviation','#b_stats',_env,_duration,B_PROC.TM_PLAN);
      _tab.DUR_DEVS:=$_tab.DUR_DEV+'%';
      _tab.DUR_STR:=exec('to_string','#tm_stamp',_tab.DUR_AVGR);
      _tab.DUR_JM:=_env.TAB_JM.SYMBOL;
      _tab.DUR_NORM:=(B_PROC.TM_PLAN/_env.TAB_JM.VALUE)$_env.DOKL;
      _tab.DUR_NORR:=B_PROC.TM_PLAN;

      {? B_PROC.TM_PLAN>0
      || {? _tab.DUR_AVG>_tab.DUR_NORM
         || _tab.KOLOR:=_env.CHART_COLOR_OVER
         |? _tab.DUR_AVG<=_tab.DUR_NORM
         || _tab.KOLOR:=_env.CHART_COLOR_UNDER
         || _tab.KOLOR:=_env.CHART_COLOR
         ?}
      || _tab.KOLOR:=_env.CHART_COLOR
      ?};
      _tab.TOOLTIP:=exec('get_tooltip_proc','#b_stats',_env);
      _result:=_tab.add();
      ~~
   ?}
?};
_tab.cntx_pop();
B_PROC.cntx_pop();
USERS.cntx_pop();
~~


\calc_deviation
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Oblicza odchylenie od normy w procentach.
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::       _b - REAL - średni czas trwania/czas trwania
::       _c - REAL - planowany czas trwania
::       [_d] - INTEGER - tryb liczenia:
::                        [1] - 100 to norma, 120, to 20% więcej niż norma, 80 to 20% mniej niż norma
::                         2 - 0 to norma, 20, to 20% więcej niż norma, -20 to 20% mniej niż norma
::   WY: REAL - odchylenie
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_duration:=_b;
_plan:=_c;
_mode:=1;
{? var_pres('_d')=type_of(0)
|| _mode:=_d
?};

{? _mode=1
||
   _result:=100;
   {? _plan>0 & _duration>0
   || _result:=((_plan*100)/_duration)$1
   ?}
|? _mode=2
|| _result:=0;
   {? _plan>0 & _duration>0
   || _result:=(((_duration-_plan)/_plan)*100)$1
   ?}
?};
_result


\biprel2biprel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Dodaje do tabeli .TAB_BIPREL jeden rekord na podstawie aktualnego rekordu tabeli BI_PREL
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;

_tab:=_env.TAB_BIPREL;
_result:=0;

{? BI_PREL.START=0
|| return(0)
?};
{? BI_PREL.STOP=0
|| return(0)
?};

{? BI_PREL.B_PREL().CLASS='B_GATE'
||
   {? B_PREL.GATEKIND=exec('kind_merge','#b_gate')
   ||
::    Bram zbierających nie wczytuję bo zaburząją analizę - brama zbierająca zawsze długo trwa bo czeka aż elementy przed nią dojdą
      return(0)
   ?};
   {? B_PREL.GATETYPE=exec('type_event','#b_gate') |
      B_PREL.GATETYPE=exec('type_and_event','#b_gate') |
      B_PREL.GATETYPE=exec('type_xor_event','#b_gate')
   ||
::    Bram zbierających nie wczytuję bo zaburząją analizę - brama zbierająca zawsze długo trwa bo czeka aż elementy przed nią dojdą
      return(0)
   ?}
?};
BI_PORT.cntx_psh();
B_PREL.cntx_psh();
BI_PROC.cntx_psh();
B_PROC.cntx_psh();
USERS.cntx_psh();
_tab.cntx_psh();
_tab.index(_env.NDX_BIPREL_REF);
_tab.prefix($BI_PREL.ref());

_mask:=(4+BI_PORT.name())+(BI_PREL.name()+4);
BI_PORT.use(_mask);
BI_PORT.index('PRELRODZ');

BI_PREL.B_PREL();
_interval:=exec('interval','#interval');
_start:=BI_PREL.START;
{? _start=0
|| _start:=BI_PREL.TM_BORN
?};
_interval.START:=exec('min','#math',_start,BI_PREL.STOP);
_interval.END:=exec('max','#math',_start,BI_PREL.STOP);
_duration:=exec('interval_dur','#interval',_interval);
_duration:=exec('round','#tm_stamp',_duration,exec('second','#tm_stamp'));

:: Sprawdzam czy została obliczona mediana
_can_continue:=1;

_mediana:=0;
_med_raw:=0;
_env.TAB_PREL_MED.cntx_psh();
_env.TAB_PREL_MED.prefix($B_PREL.ref());
{? _env.TAB_PREL_MED.first()
||
   _mediana:=_env.TAB_PREL_MED.MED_JM;
   _med_raw:=_env.TAB_PREL_MED.MED_RAW;

   {? _med_raw>0 & _duration>0
   ||
::    Jest mediana więc obliczam procent odchylenia od mediany
      _dev:=exec('calc_deviation','#b_stats',_env,_duration,_med_raw,2);
      {? _dev<=0
      || _dev*=(-1)
      ?};

      {? _env.MAX_DEVIATION>0 & _dev>_env.MAX_DEVIATION
      ||
::       Procent odchylenia od mediany przekracza podane przez użytkownika maksimum
::       więc tego rekordu w ogóle nie uwzględniam
         _can_continue:=0
      ?}
   || {? _env.MAX_DEVIATION>0
      || _can_continue:=0
      ?}
   ?}
?};
_env.TAB_PREL_MED.cntx_pop();

{? _can_continue>0
||
   {? _tab.first()=0
   ||
::    Nie ma rekordu - zakładam nowy
      _tab.blank();
      _tab.PROC_REF:=$B_PREL.B_PROC;
      _tab.PREL_UID:=B_PREL.UID;
      _tab.PREL_REF:=$B_PREL.ref();
      _tab.BIP_REF:=$BI_PREL.ref();
      _tab.UID:=BI_PREL.UID;
      _tab.DESCTODO:=BI_PREL.DESC;

      _tab.DUR_ALL:=_duration;
      _tab.DUR_AVGR:=_duration;
      _tab.DUR_AVG:=(_duration/_env.TAB_JM.VALUE)$_env.DOKL;
      _tab.DUR_DEV:=exec('calc_deviation','#b_stats',_env,_duration,B_PREL.TM_PLAN);
      _tab.DUR_DEVS:=$_tab.DUR_DEV+'%';
      _tab.DUR_STR:=exec('to_string','#tm_stamp',_tab.DUR_AVGR);
      _tab.DUR_JM:=_tab.DUR_AVG;
      _tab.DUR_NORM:=(B_PREL.TM_PLAN/_env.TAB_JM.VALUE)$_env.DOKL;
      _tab.DUR_NORR:=B_PREL.TM_PLAN;

      _tab.JM:=_env.TAB_JM.SYMBOL;
      _tab.USR_KOD:=BI_PREL.USERS().KOD;
      _tab.USR_DANE:=USERS.DANE;
      _tab.START:=BI_PREL.START;
      _tab.STOP:=BI_PREL.STOP;
      _tab.PL_END:=BI_PREL.PL_END;

      _tab.START_ST:=19+tm_form(BI_PREL.START);
      _tab.END_ST:=19+tm_form(BI_PREL.STOP);
      {? BI_PREL.PL_END>0
      || _tab.TERMIN:=19+tm_form(BI_PREL.PL_END)
      ?};

      _tab.CHARTUID:=BI_PREL.CODE;
      _tab.CHARTVAL:=_tab.DUR_JM;
      {? B_PREL.TM_PLAN>0
      || {? _tab.DUR_AVG>_tab.DUR_NORM
         || _tab.KOLOR:=_env.CHART_COLOR_OVER
         |? _tab.DUR_AVG<=_tab.DUR_NORM
         || _tab.KOLOR:=_env.CHART_COLOR_UNDER
         || _tab.KOLOR:=_env.CHART_COLOR
         ?}
      || _tab.KOLOR:=_env.CHART_COLOR
      ?};
      _tab.CHARTTYP:=0;
      _tab.TOOLTIP:=exec('get_tooltip_inst','#b_stats',_tab);

      BI_PORT.prefix(BI_PREL.ref(),exec('kind_out','#b_port'));
      _it:=0;
      {? BI_PORT.first()
      ||
         {!
         |? {? BI_PORT.B_PORT().B_TYPE().SYMBOL='NUMBER'
            ||
               _it+=1;
               _rule:='_tab:=_a;_tab.OUTNUM'+$_it+':=_b';
               ($_rule)(_tab,#BI_PORT.VALUE)
            ?};
            BI_PORT.next() & _it<3
         !}
      ?};
      _result:=_tab.add();

      {? _result>0
      || exec('biprel2prel','#b_stats',_env,_duration)
      ?};
      ~~
   ?}
?};

_tab.cntx_pop();
B_PROC.cntx_pop();
USERS.cntx_pop();
BI_PROC.cntx_pop();
B_PREL.cntx_pop();
BI_PORT.cntx_pop();
~~


\biprel2prel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Dodaje do tabeli .TAB_PREL jeden rekord na podstawie rekordu w tabeli .TAB_BIPREL
::   WE: _a - env - środowisko działania - wynik działania exec('env','#b_stats')
::       _b - REAL - czas trwania instancji elementu
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_duration:=_b;

_tab:=_env.TAB_PREL;
_result:=0;

_tab.cntx_psh();
_tab.index(_env.NDX_PREL_REF);
_tab.prefix($B_PREL.ref());

{? _tab.first()
||
:: Jest rekord - aktualizuję go
   _dur_jm:=(_duration/_env.TAB_JM.VALUE)$_env.DOKL;

   _tab.COUNTER+=1;
   _tab.DUR_ALL+=_duration;
   _tab.DUR_AVGR:=_tab.DUR_ALL/_tab.COUNTER;
   _tab.DUR_AVGR:=exec('round','#tm_stamp',_tab.DUR_AVGR,exec('second','#tm_stamp'));
   _tab.DUR_AVG:=(_tab.DUR_AVGR/_env.TAB_JM.VALUE)$_env.DOKL;
   _tab.CHARTVAL:=_tab.DUR_AVG;
   {? _tab.DUR_MIN>_dur_jm
   || _tab.DUR_MIN:=_dur_jm
   ?};
   {? _tab.DUR_MAX<_dur_jm
   || _tab.DUR_MAX:=_dur_jm
   ?};
   _tab.DUR_DEV:=exec('calc_deviation','#b_stats',_env,_tab.DUR_AVGR,B_PREL.TM_PLAN);
   _tab.DUR_DEVS:=$_tab.DUR_DEV+'%';
   _tab.DUR_STR:=exec('to_string','#tm_stamp',_tab.DUR_AVGR);
   {? B_PREL.TM_PLAN>0
   || {? _tab.DUR_AVG>_tab.DUR_NORM
      || _tab.KOLOR:=_env.CHART_COLOR_OVER
      |? _tab.DUR_AVG<=_tab.DUR_NORM
      || _tab.KOLOR:=_env.CHART_COLOR_UNDER
      || _tab.KOLOR:=_env.CHART_COLOR
      ?}
   || _tab.KOLOR:=_env.CHART_COLOR
   ?};
   _tab.TOOLTIP:=exec('get_tooltip_prel','#b_stats',_env);
   _result:=_tab.put();
   ~~
||
:: Nie ma rekordu - zakładam nowy
   _tab.blank();
   _tab.PROC_REF:=$B_PREL.B_PROC;
   _tab.PREL_REF:=$B_PREL.ref();
   {? B_PREL.SYMBOL<>''
   || _tab.SYMBOL:=B_PREL.SYMBOL
   || _tab.SYMBOL:=B_PREL.B_ELE().SYMBOL
   ?};
   _tab.UID:=B_PREL.UID;
   {? B_PREL.CLASS='B_ACTION'
   || _tab.CLASS:='Czynność'@
   |? B_PREL.CLASS='B_EVENT'
   || _tab.CLASS:='Zdarzenie'@
   |? B_PREL.CLASS='B_GATE'
   || _tab.CLASS:='Brama'@
   || _tab.CLASS:=B_PREL.CLASS
   ?};
   _symbol:='';
   {? B_PREL.SYMBOL<>''
   || _symbol:=B_PREL.SYMBOL+' ('+B_PREL.CODE+')'
   || _symbol:=B_PREL.B_ELE().SYMBOL+' ('+B_PREL.CODE+')'
   ?};
   _tab.CHARTUID:=_symbol;

   _tab.DUR_ALL:=_duration;
   _tab.DUR_AVGR:=_duration;
   _tab.DUR_AVG:=(_duration/_env.TAB_JM.VALUE)$_env.DOKL;
   _tab.CHARTVAL:=_tab.DUR_AVG;
   _tab_DUR_MIN:=(_duration/_env.TAB_JM.VALUE)$_env.DOKL;
   _tab_DUR_MAX:=(_duration/_env.TAB_JM.VALUE)$_env.DOKL;
   _tab.DUR_DEV:=exec('calc_deviation','#b_stats',_env,_duration,B_PREL.TM_PLAN);
   _tab.DUR_DEVS:=$_tab.DUR_DEV+'%';
   _tab.DUR_STR:=exec('to_string','#tm_stamp',_tab.DUR_AVGR);
   _tab.DUR_JM:=_env.TAB_JM.SYMBOL;
   _tab.DUR_NORM:=(B_PREL.TM_PLAN/_env.TAB_JM.VALUE)$_env.DOKL;
   _tab.DUR_NORR:=B_PREL.TM_PLAN;
   _tab.COUNTER:=1;

   _env.TAB_PREL_MED.cntx_psh();
   _env.TAB_PREL_MED.prefix($B_PREL.ref());
   {? _env.TAB_PREL_MED.first()
   || _tab.DUR_MED:=_env.TAB_PREL_MED.MED_JM;
      _tab.DUR_MEDR:=_env.TAB_PREL_MED.MED_RAW
   ?};
   _env.TAB_PREL_MED.cntx_pop();

   {? B_PREL.TM_PLAN>0
   || {? _tab.DUR_AVG>_tab.DUR_NORM
      || _tab.KOLOR:=_env.CHART_COLOR_OVER
      |? _tab.DUR_AVG<=_tab.DUR_NORM
      || _tab.KOLOR:=_env.CHART_COLOR_UNDER
      || _tab.KOLOR:=_env.CHART_COLOR
      ?}
   || _tab.KOLOR:=_env.CHART_COLOR
   ?};
   _tab.TOOLTIP:=exec('get_tooltip_prel','#b_stats',_env);
   _result:=_tab.add();
   ~~
?};
_tab.cntx_pop();
~~


\combo_jm_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zasila combobox z jednostkami miary
::   WY: tab_tmp
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;
_env.TAB_JM


\click_combo_jm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Wybranie wartości w comboboxie jednostek miary
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;
_old:=_env.TAB_JM.SYMBOL;
_selected:=exec('get_value','#desktop','',_env.ctr_id_btn2,'combo_jm');
{? _selected<>''
|| _env.TAB_JM.prefix(_selected,);
   {? _env.TAB_JM.first()
   || exec('set','#params',1900,_env.TAB_JM.VALUE,OPERATOR.USER);
      {? _selected<>_old
      || exec('refresh_data','#b_stats')
      ?}
   ?};
   ~~
?};
~~


\click_check_same_day
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.xx]
:: OPIS: Kliknięcie checkboxa że ma brać instancje tylko z jednego dnia
::   WE:
::   WY:
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;

_check:=exec('get_value','#desktop','',_env.ctr_id_btn2,'check_sameday');
{? _check='true'
|| _env.SAME_DAY:=1
|| _env.SAME_DAY:=0
?};
::exec('refresh_data','#b_stats');
~~


\plan_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Ustawia nowy czas planowany dla procesu/elementu procesu
::   WE: _a - tabela której wpisać planowany czas: B_PROC lub B_PREL
::       _b - FORMULA - formuła na odświeżenie wykresu
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_refresh_chart:=_b;
_tab_tmp:=cur_tab(1,1);

params_set(params_get);
_env:=params_get().env;

_result:=0;
_can_continue:=1;

_dialog:=1;
{? _tab_tmp.sel_size()>0
|| _dialog:=0
?};

_tab_tmp.cntx_psh();
_tab.cntx_psh(); _tab.prefix();

_ref:=null();
{? _tab=B_PREL
|| _ref:=_tab_tmp.PREL_REF
|? _tab=B_PROC
|| _ref:=_tab_tmp.PROC_REF
?};

{? _tab.seek(_ref)
|| _mode:=1;
   {? _dialog>0
   || _mode:=FUN.choice('Planowany czas ma zostać wyznaczony na podstawie:'@,,'Czasu średniego'@,'Mediany czasu'@,'Własnego czasu'@)
   || _mode:=_env.PLAN_MODE
   ?};
   _what:=_tab.SYMBOL;
   {? _mode>0
   ||
      IVAL_DEF.cntx_psh(); IVAL_DEF.prefix();
      _int_buf:=exec('buffer','#interval');
      _int_buf.KIND:='G';
      _duration_raw:=0;
      _duration_jm:=0;

      {? _mode=1
      || _duration_raw:=_tab_tmp.DUR_AVGR;
         _duration_jm:=_tab_tmp.DUR_AVG
      |? _mode=2
      || _duration_raw:=_tab_tmp.DUR_MEDR;
         _duration_jm:=_tab_tmp.DUR_MED
      |? _mode=3
      ||
         {? _tab.IVAL_DEF<>null()
         || _tab.IVAL_DEF()
         || IVAL_DEF.blank()
         ?};
         _win:='';

         _fml_med:='
            params_set(params_get);
            _env:=params_get().env;
            IVAL_DEF.KIND:=\'G\';
            IVAL_DEF.TIME:=exec(\'tm_stamp2longtime\',\'#tm_stamp\',%1);
            exec(\'edit_enablator\',\'#interval\');
            win_disp();
            \'\'
         '[$_tab_tmp.DUR_MEDR];
         _fml_med:=$_fml_med;
         _fml_avg:='
            params_set(params_get);
            _env:=params_get().env;
            IVAL_DEF.KIND:=\'G\';
            IVAL_DEF.TIME:=exec(\'tm_stamp2longtime\',\'#tm_stamp\',%1);
            exec(\'edit_enablator\',\'#interval\');
            win_disp();
            \'\'
         '[$_tab_tmp.DUR_AVGR];
         _fml_avg:=$_fml_avg;

         {? _tab=B_PREL
         ||
            _win:=exec('win_edit','#b_action',~~,_win);
            _tab.win_ebtn(_win,'text=%1,panel=bottom,align=begin'['Ze ś&redniej'@],_fml_avg);
            _tab.win_ebtn(_win,'text=%1,panel=bottom,align=begin'['Z &mediany'@],_fml_med);

            exec('ok_esc','#window',_tab,_win);
            _tab.win_edit(_win);
            _valid:="
                     _result:='';
                     {? _result=''
                     ||
::                      Sprawdzam czy nalezy sprawdzic bufor planowanego czasu pracy
                        _plan_diff:=exec('buffer_compare','#interval');
                        {? _plan_diff=0
                        || _result:=exec('validate','#interval')
                        ?}
                     ?};
                     _result
                  ";
            {? _tab.edit(_valid)
            || _buffer:=exec('buffer','#b_prel');
               _buffer.get();
               exec('automat_setter','#b_bpmn',_buffer,B_PREL.AUTOMAT,0);
               _can_continue:=exec('put','#b_prel',_buffer);
               {? _can_continue>0
               ||
::                Aktualizacja planowanego interwału pracy
                  _can_continue:=exec('interval_update','#b_design','B_PREL')
               ?}
            || _can_continue:=0
            ?}
         |? _tab=B_PROC
         ||
            _win:=exec('win_edit','#b_proc',2,0);
            _tab.win_ebtn(_win,'text=%1,panel=bottom,align=begin'['Ze ś&redniej'@],_fml_avg);
            _tab.win_ebtn(_win,'text=%1,panel=bottom,align=begin'['Z &mediany'@],_fml_med);

            exec('ok_esc','#window',_tab,_win);
            _tab.win_edit(_win);
            _valid:="
                     _result:='';
                     {? _result=''
                     ||
::                      Sprawdzam czy nalezy sprawdzic bufor planowanego czasu pracy
                        _plan_diff:=exec('buffer_compare','#interval');
                        {? _plan_diff=0
                        || _result:=exec('validate','#interval')
                        ?}
                     ?};
                     _result
                  ";
            {? _tab.edit(_valid)
            || _can_continue:=_tab.put();
               {? _can_continue>0
               ||
::                Aktualizacja planowanego interwału pracy
                  _can_continue:=exec('interval_update','#b_design','B_PROC')
               ?}
            || _can_continue:=0
            ?}
         ?}
      ?};

      {? (_mode=1 | _mode=2) & _duration_raw>0 & _duration_jm>0
      ||
         _ival_ref:=exec('tm_stamp2interval','#interval',_duration_raw);

         {? _ival_ref<>null()
         || {? IVAL_DEF.seek(_ival_ref)
            ||  _tab.IVAL_DEF:=_ival_ref;
                _tab.TM_PLAN:=IVAL_DEF.TM_STAMP;
               _can_continue:=_tab.put()
            ?}
         ||
::          Coś się wykrzaczyło
            _msg:='Nie powiodło się dodanie nowego czasu planowanego dla elementu procesu: %1'@[_what];
            {? _dialog>0
            || FUN.emsg(_msg)
            || KOMM.add(_msg,2,,1)
            ?}
         ?}
      ?};
      _tab.get();
      {? _can_continue>0 & IVAL_DEF.seek(_tab.IVAL_DEF)
      || _tab_tmp.DUR_NORM:=(IVAL_DEF.TM_STAMP/_env.TAB_JM.VALUE)$_env.DOKL;
         _tab_tmp.DUR_NORR:=IVAL_DEF.TM_STAMP;
         {? _tab_tmp.DUR_AVG>_tab_tmp.DUR_NORM
         || _tab_tmp.KOLOR:=_env.CHART_COLOR_OVER
         |? _tab_tmp.DUR_AVG<=_tab_tmp.DUR_NORM
         || _tab_tmp.KOLOR:=_env.CHART_COLOR_UNDER
         ?};
         _can_continue:=_tab_tmp.put()
      |? _can_continue & _tab.IVAL_DEF=0
      || _tab_tmp.DUR_NORM:=0;
         _tab_tmp.DUR_NORR:=0;
         _tab_tmp.KOLOR:=_env.CHART_COLOR;
         _can_continue:=_tab_tmp.put()
      ?};
      IVAL_DEF.cntx_pop();

      {? _dialog>0 & _refresh_chart<>""
      || _refresh_chart()
      ?}
   ?}
?};
_tab.cntx_pop();
_tab_tmp.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\plan_action_gr1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Ustawia nowy czas planowany dla procesu/elementu procesu - grupa przed
::   WY: 0/1
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

KOMM.init(250,,'Ustalanie nowego czasu planowanego dla procesów'@);
_tab:=cur_tab(1,1);
_env.PLAN_MODE:=FUN.choice('Zaznaczonych rekordów: %1.\nPlanowany czas ma zostać wyznaczony na podstawie:'@[$_tab.sel_size()],,'Czasu średniego'@,'Mediany czasu'@);
_env.PLAN_MODE


\plan_action_gr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Ustawia nowy czas planowany dla procesu/elementu procesu - grupa po
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

KOMM.select();
exec('refresh_charts_proc','#b_stats');
~~


\filter_changed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Sprawdza czy od ostatniego after_refresh zmieniła się zawartość filtra w oknie
::   WE: _a - TAB - tabela której dotyczy
::       _b - STRING - zmienna z rozmiarem filtra
::       _c - STRING - zmienna z refem pierwszego rekordu w filtrze
::       _d - STRING - zmienna czy filtr aktywny
::   WY:
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_tab:=_a;

_get_size:='_env:=params_get().env; _env.'+_b;
_set_size:='_env:=params_get().env; _env.'+_b+':=_a';

_get_first:='_env:=params_get().env; _env.'+_c;
_set_first:='_env:=params_get().env; _env.'+_c+':=_a';

_get_active:='_env:=params_get().env; _env.'+_d;
_set_active:='_env:=params_get().env; _env.'+_d+':=_a';

_filter_changed:=0;
{? _tab.f_active()>0
||
   _f_size:=_tab.f_size();
   {? _f_size>0
   || _tab.cntx_psh();
::    Sprawdzam czy się zmienił filtr i jeśli tak to odświeżam górny wykres
      {? _f_size<>($_get_size)()
      || ($_set_size)(_f_size);
         _filter_changed:=1
      ?};
      {? _tab.f_first()
      || {? ($_get_first)()<>_tab.ref()
         || _filter_changed:=1;
            ($_set_first)(_tab.ref())
         ?}
      || {? ($_get_first)()<>null()
         || _filter_changed:=1;
            ($_set_first)(null())
         ?}
      ?};
      _tab.cntx_pop();
      ~~
   || {? ($_get_size)()>0 | ($_get_active)()=0
      || _filter_changed:=1
      ?};
      ($_set_size)(0)
   ?};
   ($_set_active)(1)
|| {? ($_get_size)()>0 | ($_get_active)()>0
   || _filter_changed:=1
   ?};
   ($_set_size)(0);
   ($_set_active)(0)
?};
_filter_changed


\big_chart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Tworzy duże okno z wykresem
::   WE: _a - tabela do której zostanie przypięte okienko
::       _b - STRING - identyfikator kontrolki
::       _c - STRING - identyfikator elementu z tytułem wykresu
::       _d - STRING - tytuł okienka (górna belka)
::       _e - STRING - tytuł wykresu
::       [_f] - STRING - akronim okienka grupowego do którego dodać wykres (w takim wypadku)
::                       nie jest robiona metoda control() wyświetlająca okno
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_bc_args:=obj_new('TAB'
                  ,'CTR_ID'
                  ,'TITLE_ID'
                  ,'TITLE_WIN'
                  ,'TITLE_CHART');
_bc_args.TAB:=_a;
_bc_args.CTR_ID:=_b;
_bc_args.TITLE_ID:=_c;
_bc_args.TITLE_WIN:=_d;
_bc_args.TITLE_CHART:=_e;

_grp_win:='';
{? var_pres('_f')=type_of('')
|| _grp_win:=_f
?};

params_set('env',_env,'bc_args',_bc_args);

_win_id:='kontrolka1';
_ctr_win:=exec('create','#desktop',_bc_args.TAB,_bc_args.CTR_ID,_grp_win,30,160,_bc_args.TITLE_WIN);
_bc_args.TAB.win_ctr(_ctr_win);

_before:="
   params_set(params_get);
   _bc_args:=params_get().bc_args;
   _opt:=exec('set_options_a','#desktop');
   _opt.FOCUS_RET:=1;
   exec('load','#desktop',_bc_args.CTR_ID,'#'+_bc_args.CTR_ID+'.dsk',_opt,,,,,0);
   exec('set_value','#desktop','',_bc_args.CTR_ID,_bc_args.TITLE_ID,_bc_args.TITLE_CHART);
   exec('set_visible','#desktop','',_bc_args.CTR_ID,'more@chart',0);
   ~~
";
{? _grp_win=''
|| _bc_args.TAB.control(_win_id,'modal=true',_before)
?};
~~


\big_chart_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Powiększenie wykresu procesów
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_okres1:=exec('to_string','#tm_stamp',_env.TM_START,1);
_okres2:=exec('to_string','#tm_stamp',_env.TM_END,1);

{? _env.MODE='ACTION_ALL'
|| _title:='Wykres wykorzystania wszystkich czynności w okresie %1 - %2'@[_okres1,_okres2]
|? _env.MODE='PROC_ALL'
|| _title:='Wykres średniego czasu trwania procesów w okresie %1 - %2'@[_okres1,_okres2]
?};

exec('big_chart','#b_stats',_env.TAB_PROC
                           ,_env.ctr_id_all
                           ,_env.ctr_title_all
                           ,'Analiza wydajności procesów'@
                           ,_title);
~~


\big_chart_prel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Powiększenie wykresu elementów procesu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_what:=exec('record','#to_string',_env.SEL_PROC);


{? _env.MODE='ACTION_ALL'
|| _title:='Wykres wykorzystania czynności: %1 - %2'@[_env.TAB_ACTIONS.ACT_UID,_env.TAB_ACTIONS.ACT_NAME]
|? _env.MODE='PROC_ALL'
|| _title:='Wykres średniego czasu trwania elementu procesu %1'@[_what]
?};

exec('big_chart','#b_stats',_env.TAB_PREL
                           ,_env.ctr_id_act
                           ,_env.ctr_title_act
                           ,'Analiza wydajności procesów'@
                           ,_title);
~~


\big_chart_biprel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Powiększenie wykresu instancji elementów
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_what:=_env.TAB_PREL.SYMBOL;

_title:='Wykres czasu trwania instancji elementu %1'@[_what];

exec('big_chart','#b_stats',_env.TAB_BIPREL
                           ,_env.ctr_id_inst_act
                           ,_env.ctr_title_inst_act
                           ,'Analiza wydajności procesów'@
                           ,_title);
~~


\legenda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Akcja legenda w oknach wertowania
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
_env:=params_get().env;
exec('legenda','color','@B_STATS#01');
_curr_over:=Color.fnd_kol('B_STATS#01#02')-1;
_curr_under:=Color.fnd_kol('B_STATS#01#01')-1;
{? _curr_over<>_env.CHART_COLOR_OVER | _curr_under<>_env.CHART_COLOR_UNDER
|| _env.CHART_COLOR_OVER:=_curr_over;
   _env.CHART_COLOR_UNDER:=_curr_under;
   exec('refresh_data','#b_stats')
?};
~~


\elements_table_btn_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zwraca przetłumaczoną tablicę elementów na panelu przycisków w statystyce czynności
::   WY: tab_tmp
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_elements:=exec('elements_table','#desktop');

_elements.blank();
_elements.ID_SYS:='btn_refresh_all@buttons';
_elements.NAME:='Odśwież dane'@;
_elements.add();

_elements.blank();
_elements.ID_SYS:='btn_zakres@buttons';
_elements.NAME:='Zmień zakres'@;
_elements.add();

_elements.blank();
_elements.ID_SYS:='max_act@buttons';
_elements.NAME:='Max.'@;
_elements.add();

_elements.blank();
_elements.ID_SYS:='max_usr@buttons';
_elements.NAME:='Max.'@;
_elements.add();

_elements.blank();
_elements.ID_SYS:='label_act@buttons';
_elements.NAME:='najpopularniejszych czynności'@;
_elements.add();

_elements.blank();
_elements.ID_SYS:='label_usr@buttons';
_elements.NAME:='najaktywniejszych użytkowników czynności każdego dnia'@;
_elements.add();

_elements


\elements_table_btn_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zwraca przetłumaczoną tablicę elementów na panelu przycisków w analizie wydajności procesów
::   WY: tab_tmp
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_env:=params_get().env;

_elements:=exec('elements_table','#desktop');

_elements.blank();
_elements.ID_SYS:='btn_refresh_all@buttons';
_elements.NAME:='Odśwież dane'@;
_elements.add();

_elements.blank();
_elements.ID_SYS:='btn_zakres@buttons';
_elements.NAME:='Zmień zakres'@;
_elements.add();

_elements.blank();
_elements.ID_SYS:='max_proc@buttons';
_elements.NAME:='Max.'@;
_elements.add();

_elements.blank();
_elements.ID_SYS:='max_prel@buttons';
_elements.NAME:='Max.'@;
_elements.add();

_elements.blank();
_elements.ID_SYS:='label_proc@buttons';
_elements.NAME:='najdłużej trwających procesów'@;
_elements.add();

_elements.blank();
_elements.ID_SYS:='label_prel@buttons';
_elements.NAME:='najdłużej trwających elementów procesu'@;
_elements.add();

_elements.blank();
_elements.ID_SYS:='combo_jm@buttons';
_elements.NAME:='Jednostka miary'@;
_elements.VALUE:=_env.TAB_JM.SYMBOL;
_elements.add();

_elements.blank();
_elements.ID_SYS:='deviation@buttons';
_elements.NAME:='Procent odchylenia od mediany powodujący wykluczenie z analizy'@;
_elements.add();

_elements.blank();
_elements.ID_SYS:='label_dev@buttons';
_elements.NAME:='%';
_elements.add();

_elements.blank();
_elements.ID_SYS:='check_sameday@buttons';
_elements.NAME:='Analizuj tylko instancje, które zaczynają się i kończą tego samego dnia'@;
_elements.add();

_elements


\instance_chart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Akcja - wykres instancji na procesie
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
 params_set(params_get);
_env:=params_get().env;
B_PROC.cntx_psh();
BI_PROC.cntx_psh();
BI_PROC.index('UID');
B_PROC.prefix();
{? B_PROC.seek(_env.SEL_PROC)
||
   _tab:=_env.TAB_PROC_DUR;

   _what:=exec('B_PROC','#to_string');
   _okres1:=exec('to_string','#tm_stamp',_env.TM_START,1);
   _okres2:=exec('to_string','#tm_stamp',_env.TM_END,1);
   _title:='Wykres czasu trwania instancji procesu: %1 w okresie %2 - %3'@[_what,_okres1,_okres2];

   _env.tit_biproc:=_title;
_grpbefor:="
      params_set(params_get);
      _env:=params_get().env;
      _title:=_env.tit_biproc;

      grp_disp(cur_tab(1,1),_env.WIN_BIPROC,1);
      _opt:=exec('set_options_a','#desktop');
      _opt.FOCUS_RET:=1;
      exec('load','#desktop',_env.ctr_id_inst,'#'+_env.ctr_id_inst+'.dsk',_opt,,,,,0);
      exec('set_value','#desktop','',_env.ctr_id_inst,_env.ctr_title_inst,_title);
      exec('set_visible','#desktop','',_env.ctr_id_inst,'more@chart',0);
      ~~
   ";
   _grp:=_tab.grp_make('Instancje procesu: %1'@[_what],_grpbefor,'#b_stats_12dd',1,1);
   exec('create','#desktop',_tab,_env.ctr_id_inst,_grp,20,,'Instancje procesu: %1'@[_what]);
   _tab.grp_splt(_grp,,'horizontal','wykres1');

   _wer:=_tab.mk_sel('Instancje procesu: %1'@[_what],'P',0,'#b_stats_13dd',1,1,,,'U');
   _env.WIN_BIPROC:=_wer;

   _tab.win_fld(_wer,,'CHARTUID',,,12,,,'Kod'@,0);
   _tab.win_fld(_wer,,'DATA'    ,,,20,,,'Data'@,0);
   _tab.win_fld(_wer,,'TIME'    ,,,20,,,'Godzina'@,0);
   _tab.win_fld(_wer,,'DUR_JM'  ,,,5,_env.DOKL,,'Czas trwania'@,0);
   _tab.win_fld(_wer,,'JM'      ,,,5,0,,'jm'@,0);

   _after_refresh:="
      params_set(params_get);
      _env:=params_get().env;
      _tab:=cur_tab(1,1);
      exec('set_value','#desktop','',_env.ctr_id_inst,_env.ctr_chart_inst,_tab.CHARTUID);

      ~~
   ";
   _before:="
      params_set(params_get);
      _env:=params_get().env;
      ~~
   ";
   _fb:="
      _tab:=cur_tab(1,1);
      exec('cntx_psh','#bi_arch');
      _mask:=ref_name(_tab.BI_PROC);
      _mask:=_mask+4;
      exec('open','#bi_arch',_mask);
      BI_PROC.prefix();
      {? BI_PROC.seek(_tab.BI_PROC)
      || exec('select1','#bi_inst',BI_PROC.ref())
      ?};
      exec('cntx_pop','#bi_arch');
      ~~
   ";
   _tab.win_act(_wer,,'Formuła','&Elementy'@,,,_fb);
   _tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['&Elementy'@],'menu:E',,,,,,'noempty');

   _fb:="
      _tab:=cur_tab(1,1);
      exec('cntx_psh','#bi_arch');
      _mask:=ref_name(_tab.BI_PROC);
      _mask:=_mask+4;
      exec('open','#bi_arch',_mask);
      BI_PROC.prefix();
      {? BI_PROC.seek(_tab.BI_PROC)
      || exec('diagram_act','#bi_inst',BI_PROC.ref())
      ?};
      exec('cntx_pop','#bi_arch');
      ~~
   ";
   _tab.win_act(_wer,,'Formuła','Dia&gram przebiegu'@,,,_fb);
   _tab.win_btn(_wer,'text=%1,btn_label_align=center,panel=right,align=begin'['Dia&gram przebiegu'@],'menu:G',,,,,,'noempty');

   _tab.grp_sel(_grp,_tab,_wer,,_after_refresh,,,5,_before,,,,'maximized_with_title');

   _tab.win_sel(_grp);

   _tab.index(_env.NDX_PROC_DUR_MED5);
   {? _env.SEL_PROC<>''
   || _tab.prefix(_env.SEL_PROC,0)
   || _tab.prefix('?????????????????????????????????',)
   ?};
   _tab.first();

   _tab.select();
   ~~
?};
B_PROC.cntx_pop();
BI_PROC.cntx_pop();
~~


\chart_title_main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Aktualizuje tytuł głównego wykresu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
 params_set(params_get);
_env:=params_get().env;

_title:='';
{? _env.MODE='ACTION_ALL'
|| _title:='Wykres wykorzystania wszystkich czynności w okresie %1 - %2'@[exec('to_string','#tm_stamp',_env.TM_START,1),exec('to_string','#tm_stamp',_env.TM_END,1)]
|? _env.MODE='PROC_ALL'
|| _title:='Wykres średniego czasu trwania procesów w okresie %1 - %2'@[exec('to_string','#tm_stamp',_env.TM_START,1),exec('to_string','#tm_stamp',_env.TM_END,1)]
?};
exec('set_value','#desktop','',_env.ctr_id_all,'1fl7b938a96fhnk40ljmdm2i8l799',_title);
~~


\jm_symbols
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zwraca tablicę symboli jednostek miary
::   WY: obj_new
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_jm:=obj_new(4);
_jm[1]:='dni'@;
_jm[2]:='h';
_jm[3]:='minuty'@;
_jm[4]:='sek.'@;
_jm


\jm_values
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Zwraca tablicę wartości jednostek miary
::   WY: obj_new
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_jm:=obj_new(4);
_jm[1]:=exec('day','#tm_stamp');
_jm[2]:=exec('hour','#tm_stamp');
_jm[3]:=exec('minute','#tm_stamp');
_jm[4]:=exec('second','#tm_stamp');
_jm


\jm_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Ustawia domyślną jednostę miary na podstawie zapamiętanego parametru FO
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
 params_set(params_get);
_env:=params_get().env;

_tab:=_env.TAB_JM;

_param:=exec('get','#params',1900,type_of(0),OPERATOR.USER);
{? _param>0
|| _viewref:=null();
   _tab.cntx_psh();
   _tab.index(_env.NDX_JM_VAL);
   _tab.prefix(_param);
   {? _tab.first()
   || _viewref:=_tab.ref()
   ?};
   _tab.cntx_pop();

   {? _viewref<>null()
   || _tab.seek(_viewref)
   ?}
?};
~~

:Sign Version 2.0 jowisz:1045 2023/10/09 13:06:57 c8926721a681c00f81f693c9249a822eb4226ae1d3e91c499933c640a966bd6f5157b0c48d8ad0bfb1e101f64ce94a1ed18608bcc7b2572f2eddd128d1fcff10f11be83ceb9501f8e6e044c43fdc43961b6d4f1e54dc1a66e2a7e7e363fecee7bdd396c2b3658ff459ce6b5affac1cc9b82842209dcea56e3e532a648ae150a9
