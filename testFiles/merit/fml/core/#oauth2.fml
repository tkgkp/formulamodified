:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #oauth2.fml [22.26]
:: Utworzony: 10.01.2022
:: Autor: TS
::======================================================================================================================
:: Zawartość: - OAuth2 w obsłudze poczty elektronicznej
::======================================================================================================================


\oauth_challange
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Uruchamia proces autoryzacji - pobieranie tokenów
::       Kontekst wywołania: rekord tabeli POCZTAM
:: ~OST: INFCOPY,INTMKTMPDIR,INTXTEDITVIEW
::----------------------------------------------------------------------------------------------------------------------
{? POCZTAM.AUTH_KND=exec('auth_oauth2_g','#mailbox')
|| {? exec('client_id','#oauth2_gm')=''
   || FUN.info('Brak danych konfiguracyjnych Google w parametrach programu.'@);
      _choice:=0
   || _choice:=FUN.choice('Obsługa autoryzacji Google'@,,
         'Konfiguruj konto'@,'Odśwież token autoryzacyjny'@,'Ważność tokena auturyzacyjnego'@
      )
   ?};
   {? _choice=1
   ||
      {? exec('interm','#system')
      || FUN.emsg(exec('interm_nacc_msg','#system'));
         return()
      ?};
::    Logowanie do serwisu, pobranie kodu autoryzującego
      _tmpdir:=fmk_tmp_dir(1);
      _can_continue:=1;
      {? type_of(_tmpdir)<>type_of(~~)
      ||
         _filename_log:='sniffer.log';
         _filename_html:='oauth_msg.htm';
         _sep:=exec('sep','#file',0);

         _filepath_log:=_tmpdir.get_path+_sep+_filename_log;
         _filepath_html:=_tmpdir.get_path+_sep+_filename_html;

         {? fcopy(_filename_html,'@'+_filepath_html,1,0,1)=0
         || _can_continue:=0;
            FUN.emsg('Nie powiodło się kopiowanie pliku: %1 na terminal'@[_filename_html])
         ?};

         {? _can_continue>0
         ||
            _obj:=exec('sniffer_decl','#oauth2');

::          Inicjalizacja biblioteki
            _obj.initialize(_filepath_log,_filepath_html);
::          Znalezienie wolnego portu
            _port:=_obj.find_port();
::          Określenie kontekstu pracy
            _context:='/'+$SYSLOG.tm_stamp();
::          Utworzenie adresu przekierowania
            _redirect_uri:='http://localhost:%1%2'[$_port,_context];
            _code:=exec('oauth_code','#oauth2_gm',_obj,_port,_context,_redirect_uri);
            {? type_of(_code)=type_of('') & _code<>''
            ||
::             Użycie kodu autoryzującego w celu odebrania tokena dostępowego (i ew. tokena odświeżającego)
               _oauth_token:=exec('oauth_token','#oauth2_gm',_code,,_redirect_uri);
               {? _oauth_token.OK
               ||
                  _jman:=exec('json_man','__jsonm',_oauth_token.JSON);
::                _jman.view();

::                Zapis tokenów do bieżącego rekordu tabeli POCZTAM
                  _expires_in:=_jman.getValue('expires_in');
                  _acces_token:=_jman.getValue('access_token');
                  _refresh_token:=
                     {? _jman.typeOf('refresh_token',1)=_jman.Const.TYPE.STRING
                     || _jman.getValue('refresh_token')
                     || ''
                     ?};
                  POCZTAM.AUTH_EXP:=utc_get()+_expires_in;
                  POCZTAM.put();
                  POCZTAM.memo_set(_acces_token,'AUTH_TKN');
                  POCZTAM.memo_put(,'AUTH_TKN');
                  {? _refresh_token<>''
                  || POCZTAM.memo_set(_refresh_token,'AUTH_RFR');
                     POCZTAM.memo_put(,'AUTH_RFR')
                  ?};
                  FUN.info(
                     {? _refresh_token<>'' || 'Uzyskano token odświeżający.'@+'\n' || '' ?}+
                     'Uzyskano token autoryzacyjny ważny do %1 %2.'@[$utc_date(POCZTAM.AUTH_EXP),$utc_time(POCZTAM.AUTH_EXP)]
                  )
               || _msg:='Nie udało się pobrać tokena odświeżającego. Konfiguracja konta zakończona niepowodzeniem.'@;
                  _choice:=FUN.choice(_msg,,'Szczegóły...'@,,,,'Zamknij'@);
                  {? _choice=1
                  || exec('display_error','#oauth2',_oauth_token.JSON)
                  ?}
               ?}
            || _msg:='Nie udało się pobrać kodu autoryzującego. Konfiguracja konta zakończona niepowodzeniem.'@;
               _choice:=FUN.choice(_msg,,'Szczegóły...'@,,,,'Zamknij'@);
               {? _choice=1
               || txt_view('@'+_filepath_log,0,0,'UTF-8')
               ?}
            ?};
            _obj.free()
         ?};
         ~~
      || FUN.emsg('Nie powiodło się utworzenie katalogu tymczasowego na końcówce użytkownika.'@)
      ?}
   |? _choice=2
   || exec('token_refresh','#oauth2')
   |? _choice=3
   || FUN.info(
         'Token autoryzacyjny ważny do %1 %2.'@[$utc_date(POCZTAM.AUTH_EXP),$utc_time(POCZTAM.AUTH_EXP)]
      )
   ?}

|? POCZTAM.AUTH_KND=exec('auth_oauth2_m','#mailbox')
|| {? exec('client_id','#oauth2_ms')=''
   || FUN.info('Brak danych konfiguracyjnych Microsoft w parametrach programu.'@);
      _choice:=0
   || _choice:=FUN.choice('Obsługa autoryzacji Microsoft'@,,
         'Konfiguruj konto'@,'Odśwież token autoryzacyjny'@,'Ważność tokena auturyzacyjnego'@
      )
   ?};
   {? _choice=1
   ||
      {? exec('interm','#system')
      || FUN.emsg(exec('interm_nacc_msg','#system'));
         return()
      ?};
::    Logowanie do serwisu, pobranie kodu autoryzującego
      _tmpdir:=fmk_tmp_dir(1);
      _can_continue:=1;
      {? type_of(_tmpdir)<>type_of(~~)
      ||
         _filename_log:='sniffer.log';
         _filename_html:='oauth_msg.htm';
         _sep:=exec('sep','#file',0);

         _filepath_log:=_tmpdir.get_path+_sep+_filename_log;
         _filepath_html:=_tmpdir.get_path+_sep+_filename_html;

         {? fcopy(_filename_html,'@'+_filepath_html,1,0,1)=0
         || _can_continue:=0;
            FUN.emsg('Nie powiodło się kopiowanie pliku: %1 na terminal'@[_filename_html])
         ?};

         {? _can_continue>0
         ||
            _obj:=exec('sniffer_decl','#oauth2');

::          Inicjalizacja biblioteki
            _obj.initialize(_filepath_log,_filepath_html);
::          Znalezienie wolnego portu
            _port:=_obj.find_port();
::          Określenie kontekstu pracy
            _context:='/outlook';
::          Utworzenie adresu przekierowania
            _redirect_uri:='http://localhost:%1%2'[$_port,_context];
            _code:=exec('oauth_code','#oauth2_ms',_obj,_port,_context,_redirect_uri);
            {? type_of(_code)=type_of('') & _code<>''
            ||
::             Użycie kodu autoryzującego w celu odebrania tokena dostępowego (i ew. tokena odświeżającego)
               _oauth_token:=exec('oauth_token','#oauth2_ms',_code,,_redirect_uri);
               {? _oauth_token.OK
               ||
                  _jman:=exec('json_man','__jsonm',_oauth_token.JSON);
::                _jman.view();

::                Zapis tokenów do bieżącego rekordu tabeli POCZTAM
                  _expires_in:=_jman.getValue('expires_in');
                  _acces_token:=_jman.getValue('access_token');
                  _refresh_token:=
                     {? _jman.typeOf('refresh_token',1)=_jman.Const.TYPE.STRING
                     || _jman.getValue('refresh_token')
                     || ''
                     ?};
                  POCZTAM.AUTH_EXP:=utc_get()+_expires_in;
                  POCZTAM.put();
                  POCZTAM.memo_set(_acces_token,'AUTH_TKN');
                  POCZTAM.memo_put(,'AUTH_TKN');
                  {? _refresh_token<>''
                  || POCZTAM.memo_set(_refresh_token,'AUTH_RFR');
                     POCZTAM.memo_put(,'AUTH_RFR')
                  ?};
                  FUN.info(
                     {? _refresh_token=''
                     || 'Nie uzyskano tokena odświeżającego.'@
                     || 'Uzyskano token odświeżający.'@
                     ?}+'\n'+
                     'Uzyskano token autoryzacyjny ważny do %1 %2.'@
                     [$utc_date(POCZTAM.AUTH_EXP),$utc_time(POCZTAM.AUTH_EXP)]
                  )
               || _msg:='Nie udało się pobrać tokena. Konfiguracja konta zakończona niepowodzeniem.'@;
                  _choice:=FUN.choice(_msg,,'Szczegóły...'@,,,,'Zamknij'@);
                  {? _choice=1
                  || exec('display_error','#oauth2',_oauth_token.JSON)
                  ?}
               ?}
            || _msg:='Nie udało się pobrać kodu autoryzującego. Konfiguracja konta zakończona niepowodzeniem.'@;
               _choice:=FUN.choice(_msg,,'Szczegóły...'@,,,,'Zamknij'@);
               {? _choice=1
               || txt_view('@'+_filepath_log,0,0,'UTF-8')
               ?}
            ?};
            _obj.free()
         ?};
         ~~
      || FUN.emsg('Nie powiodło się utworzenie katalogu tymczasowego na końcówce użytkownika.'@)
      ?}
   |? _choice=2
   || exec('token_refresh','#oauth2')
   |? _choice=3
   || FUN.info(
         'Token autoryzacyjny ważny do %1 %2.'@
         [$utc_date(POCZTAM.AUTH_EXP),$utc_time(POCZTAM.AUTH_EXP)]
      )
   ?}

|| FUN.info('Dla autoryzacji \'%1\' żadne dodatkowe akcje nie są wymagane.'@[POCZTAM.AUTH_KND])
?};
~~


\token_refresh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Odświeża token autoryzacyjny
::   WE: [_a] - POCZTAM.ref lub bieżący rekord
::       [_b] - INTEGER - 0/1 - czy wyświetlać dialogi
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
{? var_pres('_a')=type_of(POCZTAM.ref())
|| _ref:=_a
?};
_dialog:=1;
{? var_pres('_b')=type_of(0)
|| _dialog:=_b
?};

_result:=0;
_can_continue:=1;

POCZTAM.cntx_psh();
{? _ref<>null()
|| POCZTAM.prefix();
   {? POCZTAM.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
|| _oauth_token:=~~;
   {? POCZTAM.AUTH_KND=exec('auth_oauth2_g','#mailbox')
   || _oauth_token:=exec('oauth_token','#oauth2_gm',,POCZTAM.memo_txt(,1,'AUTH_RFR'))
   |? POCZTAM.AUTH_KND=exec('auth_oauth2_m','#mailbox')
   || _oauth_token:=exec('oauth_token','#oauth2_ms',,POCZTAM.memo_txt(,1,'AUTH_RFR'))
   ?};
   {? type_of(_oauth_token)>0
   || {? _oauth_token.OK
      ||
         _jman:=exec('json_man','__jsonm',_oauth_token.JSON);
::       Zapis tokenu do bieżącego rekordu tabeli POCZTAM
         _expires_in:=_jman.getValue('expires_in');
         _acces_token:=_jman.getValue('access_token');
         _refresh_token:=
            {? _jman.typeOf('refresh_token',1)=_jman.Const.TYPE.STRING
            || _jman.getValue('refresh_token')
            || ''
            ?};
         {? _acces_token<>''
         ||
            POCZTAM.AUTH_EXP:=utc_get()+_expires_in;
            _can_continue:=POCZTAM.put();
            POCZTAM.memo_set(_acces_token,'AUTH_TKN');
            POCZTAM.memo_put(,'AUTH_TKN');
            {? _refresh_token<>''
            || POCZTAM.memo_set(_refresh_token,'AUTH_RFR');
               POCZTAM.memo_put(,'AUTH_RFR')
            ?};
            {? _dialog>0
            || FUN.info(
                  {? _refresh_token=''
                  || ''
                  || 'Uzyskano token odświeżający.'@
                  ?}+'\n'+
                  'Uzyskano token autoryzacyjny ważny do %1 %2.'@
                  [$utc_date(POCZTAM.AUTH_EXP),$utc_time(POCZTAM.AUTH_EXP)]
               )
            ?}
         || _can_continue:=0
         ?}
      || {? _dialog>0
         || _msg:='Nie udało się pobrać tokena.'@;
            _choice:=FUN.choice(_msg,,'Szczegóły...'@,,,,'Zamknij'@);
            {? _choice=1
            || exec('display_error','#oauth2',_oauth_token.JSON)
            ?}
         ?};
         _can_continue:=0
      ?}
   || _can_continue:=0
   ?}
?};
POCZTAM.cntx_pop();
POCZTAM.get();
{? _can_continue>0
|| _result:=1
?};
_result


\sniffer_decl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Deklaruje obiekt obsługujący jara
::   WY: obj_new
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new(  'LIB_ID'
                ,'CALL_INITIALIZE'
                ,'CALL_FIND_PORT'
                ,'CALL_GET_RESULT'
                ,'CALL_START'
                ,'CALL_STOP'

                ,'initialize'
                ,'find_port'
                ,'get_result'
                ,'start'
                ,'stop'
                ,'free'
                );
_jar_name:='oauth_sniffer.jar';

_obj.LIB_ID:=lib_load(_jar_name,1,0);
{? _obj.LIB_ID=0
|| FUN.emsg('Błąd załadowania biblioteki: %1'@[_jar_name])
||
   _obj.CALL_INITIALIZE:=lib_decl(_obj.LIB_ID,,'void','initialize','String','String');
   _obj.CALL_FIND_PORT:=lib_decl(_obj.LIB_ID,,'int','findPort');
   _obj.CALL_GET_RESULT:=lib_decl(_obj.LIB_ID,,'String','getResult');
   _obj.CALL_START:=lib_decl(_obj.LIB_ID,,'void','start','int','String');
   _obj.CALL_STOP:=lib_decl(_obj.LIB_ID,,'void','stop');

   _obj.initialize:="lib_call(.CALL_INITIALIZE,_a,_b)";
   _obj.find_port:="lib_call(.CALL_FIND_PORT)";
   _obj.get_result:="lib_call(.CALL_GET_RESULT)";
   _obj.start:="lib_call(.CALL_START,_a,_b)";
   _obj.stop:="lib_call(.CALL_STOP)";
   _obj.free:="lib_call(.CALL_STOP);lib_free(.LIB_ID)";
   ~~
?};
_obj


\display_error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Wyświetla szczegóły błędu autoryzacji
::   WE: _a - JSON
::----------------------------------------------------------------------------------------------------------------------
_jman:=exec('json_man','__jsonm',_a);
_jman.view();
~~

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:09 236ce1fc2fe0662cb3abce927731f8d733bead73336f23b0ee97f8accf6201294152d3b42a6bebee03c48c7b55a9839e1c219f531d2c5d062cc898423f426bcfbad4ed9a2786c74463842c6f3f1246533d0583669e611b31366a063ecf2a283f71a14c75e7ac868e08386ce9d3329e61a59feaec5432d008ed883a36f13afae6
