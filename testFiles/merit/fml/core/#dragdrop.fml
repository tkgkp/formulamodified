:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #dragdrop.fml [17.00]
:: Utworzony: 17.12.2014
:: Autor: AK
::======================================================================================================================
:: Zawartość: Uniwersalne formuły obsługujące drag&drop
::======================================================================================================================


\zmien_lp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: zmiana LP poprzez drag&drop
::   WE:  _a  - akronim pola z numerem
::        _b  - indeks z numeracją (założenie że indeks będzie zawierał numerację rosnącą)
::       [_c] - tabela tymczasowa zwracana przez dnd_info('dropped_records')
::       [_d] - tabela, której dotyczy drag&drop (domyslnie cur_tab(1))
::  OLD: \zmien_lp/dragdrop.fml
::----------------------------------------------------------------------------------------------------------------------
:: tabela, która podlega renumeracji
{? var_pres('_d')=type_of(SYSLOG) || _tab_ren:=_d || _tab_ren:=cur_tab(1) ?};

_tab_ren.cntx_psh();
_tab_ren.index(_b);
_poz:=($('_a.'+_a))(_tab_ren);
_ref:=#_tab_ren.ref();

_tab_nr:=tab_tmp(1
            ,'REF','INTEGER','Reference'@
            ,'P','INTEGER','Pozycja'@
            ,'PNEW','INTEGER','Nowa pozycja'@
            ,'NUM','STRING[1]','Czy numerowano'@
         );

:: ustawienie numeracji dla przeciąganych rekordów
_tab:={? var_pres('_c')=type_of(SYSLOG) || _c || dnd_info('dropped_records') ?};

:: przepisanie pozycji do tabeli
_tab_ren.cntx_psh();
_tab_ren.first();

_ile_zaz:=0;
{!
|?
   _tab_nr.blank();
   _tab_nr.REF:=#_tab_ren.ref();
   _tab_nr.P:=($('_a.'+_a))(_tab_ren);
   _tab_nr.NUM:='N';
   _tab_nr.PNEW:=0;
   _tab_nr.add();
   _tab_ren.next()
!};
_ost_nr:=($('_a.'+_a))(_tab_ren);
_tab_ren.cntx_pop();

:: kontrola czy przeciągamy na niezaznaczone rekordy
_tab.cntx_psh();
_tab_ndx:=_tab.ndx_tmp('',,'REF',,);
_tab.index(_tab_ndx);
_rec_zaz:=_tab.find_key(_ref);
_tab.cntx_pop();

{? ~_rec_zaz
||
   {? _tab.first()
   ||
      _lp:=0;
      _new_nr:=0;
      {!
      |?
         {? _tab_nr.find_key(_tab.REF)
         ||
            {? _lp=0
            || _pod:=_tab_nr.P;

               {? _tab.size()>1
               ||
                  _ile_zaz:=-1;
                  _tab_nr.cntx_psh();
                  _tab_nr.index(_tab_nr.ndx_tmp('',,'P',,));
                  _tab_nr.first();
                  {!
                  |?
                     _tab.cntx_psh();
                     _tab.index(_tab_ndx);
                     {? _tab.find_key(_tab_nr.REF) || _ile_zaz+=1 ?};
                     _tab.cntx_pop();
                     _czy_next:=_tab_nr.P <> _poz;
                     _tab_nr.next();
                     _czy_next
                  !};
                  _tab_nr.cntx_pop()
               ?}
            ?};

            {? _poz>=_pod
            ||
               _tab_nr.PNEW:=_poz-_ile_zaz+_lp
            ||
               _tab_nr.PNEW:=_poz+_lp
            ?};

            _tab_nr.put();
            _lp+=1
         ?};
         _tab.next()
      !};

::    ustawienie numeracji dla pozostałych rekordów

      _num:=_tab_nr.ndx_tmp('',,'NUM',,,'P',,);
      _pnew:=_tab_nr.ndx_tmp('',,'PNEW',,,'P',,);
      _tab_nr.index(_num);
      _tab_nr.prefix('N');
      {? _tab_nr.first()
      ||
         {!
         |?
            _nr_new:=0;
            _tab_nr.cntx_psh();
            _tab_nr.index(_pnew);
            _nfind:=0;
            _nr:=_tab_nr.P;
            {? ~_tab_nr.find_key(_nr)
            ||
               _nfind:=1;
               _nr_new:=_tab_nr.P
            ?};

            {? _nfind
            ||
               _tab_nr.prefix(0);
               {? _tab_nr.first()
               ||
                  _tab_nr.clear();
                  _tab_nr.PNEW:=_nr_new;
                  _tab_nr.put()
               ?}
            ?};
            _tab_nr.cntx_pop();
            _tab_nr.cntx_psh();
            _tab_nr.clear();
            _tab_nr.get();
            _tab_nr.NUM:='T';
            _tab_nr.put();
            _tab_nr.cntx_pop();
            _tab_nr.first()
         !}
      ?};
      _tab_nr.prefix();

::    ustawienie nowej numeracji
      do();
      _tab_ren.last();
      {! |? ($('_a.'+_a))(_tab_ren):=($('_a.'+_a))(_tab_ren)+_ost_nr; _tab_ren.put(); _tab_ren.prev() !};
      {? _tab_nr.last()
      ||
         {!
         |?
            {? _tab_nr.PNEW<>0
            || {? _tab_ren.seek(_tab_nr.REF,)
               || ($('_a.'+_a))(_tab_ren):=_tab_nr.PNEW;
                  {? ($('_a.'+_a))(_tab_ren) <=0 || undo ?};
                  _tab_ren.put()
               ?}
            ?};
            _tab_nr.prev()
         !}
      ?};
      end()
   ?}
?};
_tab_ren.cntx_pop();
''


\dnd_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: zwraca wartość informacji w dnd_info
::   WY: STRING - sformatowany tekst zawierający informacje z dnd_info
::  OLD: \dnd_info/libfml.fml
::----------------------------------------------------------------------------------------------------------------------
_form:="form(_a+':',30)+form(_b)";
exec('form','#string','l'
    ,_kind:='table_name';             _form(_kind,dnd_info(_kind))
::    ,_kind:='dropped_records';        _form(_kind,dnd_info(_kind))
    ,_kind:='dest_record';            _form(_kind,$dnd_info(_kind))
    ,_kind:='src_pos_in_window';      _form(_kind,dnd_info(_kind))
    ,_kind:='dest_column_name';       _form(_kind,dnd_info(_kind))
    ,_kind:='dest_column_ndx';        _form(_kind,dnd_info(_kind))
    ,_kind:='dest_field_table';       _form(_kind,dnd_info(_kind).name())
    ,_kind:='dest_field_acronym';     _form(_kind,dnd_info(_kind))
    ,_kind:='dest_field_rel_acronym'; _form(_kind,dnd_info(_kind))
    ,_kind:='source_column_name';     _form(_kind,dnd_info(_kind))
    ,_kind:='source_column_ndx';     _form(_kind,dnd_info(_kind))
    ,_kind:='source_field_table';     _form(_kind,dnd_info(_kind).name())
    ,_kind:='source_field_acronym';     _form(_kind,dnd_info(_kind))
    ,_kind:='source_field_rel_acronym';     _form(_kind,dnd_info(_kind))
::    ,_kind:='';     _form(_kind,dnd_info(_kind))
    )


\get_dnd_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: Zwraca tablicę wynikową dnd_info z wszystkimi możliwymi parametrami
::   WE: --
::   WY: tablica nazwana z następującymi polami
::    .tab_name         -  dnd_info('table_name')
::    .dest.record      -  dnd_info('dest_record')
::    .dest.col_name    -  dnd_info('dest_column_name')
::    .dest.col_ndx     -  dnd_info('dest_column_ndx')
::    .dest.fld_tab     -  dnd_info('dest_field_table')
::    .dest.fld_acr     -  dnd_info('dest_field_acronym')
::    .dest.jfld_acr    -  dnd_info('dest_field_rel_acronym')
::    .source.records   -  dnd_info('dropped_records')
::    .source.col_name  -  dnd_info('source_column_name')
::    .source.col_ndx   -  dnd_info('source_column_ndx')
::    .source.fld_tab   -  dnd_info('source_field_table')
::    .source.fld_acr   -  dnd_info('source_field_acronym')
::    .source.jfld_acr  -  dnd_info('source_field_rel_acronym')
::    .source.posinwin  -  dnd_info('src_pos_in_window')
::  OLD: \get_dnd_info/libfml
::----------------------------------------------------------------------------------------------------------------------
_result:=obj_new('tab_name','drecords','dest','source');

_result.tab_name:=dnd_info('table_name');

_result.dest:=obj_new('record','col_name','col_ndx','fld_tab','fld_acr','jfld_acr');
_result.dest.record:=dnd_info('dest_record');
_result.dest.col_name:=dnd_info('dest_column_name');
_result.dest.col_ndx:=dnd_info('dest_column_ndx');
_result.dest.fld_tab:=dnd_info('dest_field_table');
_result.dest.fld_acr:=dnd_info('dest_field_acronym');
_result.dest.jfld_acr:=dnd_info('dest_field_rel_acronym');

_result.source:=obj_new('records','col_name','col_ndx','fld_tab','fld_acr','jfld_acr','posinwin');
_result.source.records:=dnd_info('dropped_records');
_result.source.col_name:=dnd_info('source_column_name');
_result.source.col_ndx:=dnd_info('source_column_ndx');
_result.source.fld_tab:=dnd_info('source_field_table');
_result.source.fld_acr:=dnd_info('source_field_acronym');
_result.source.jfld_acr:=dnd_info('source_field_rel_acronym');
_result.source.posinwin:=dnd_info('src_pos_in_window');

_result


\zmien_lpa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: zmiana LP poprzez wybór akcji
::   WE:  _a  - akronim pola z numerem
::        _b  - indeks z numeracją (założenie że indeks będzie zawierał numerację rosnącą)
::       [_c] - tabela tymczasowa zwracana przez dnd_info('dropped_records')
::       [_d] - tabela, której dotyczy drag&drop (domyslnie cur_tab(1))
::       [_e] - tryb U-góra D-dół N-przed numerem
::  OLD: \zmien_lp/dragdrop.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_e')=type_of('') & (';UDN'*_e)>1 || _e || '' ?};

:: ograniczenia dla rekordów
_first:=0;
{? _tryb<>''
|| VAR_DEL.delete('__tabren','__minlp','__maxlp');
   __minlp:=__maxlp:=0;
   _tab_ren:={? var_pres('_d')=type_of(FIRMA) || _d || cur_tab(1) ?};
   {? var_pres('_c')=type_of(FIRMA)
   || _tab_ref:=_c
   || _sel:=_tab_ren.sel_aget(); _tab_ren.sel_adel();
      {? _sel.size()
      || _tab_ref:=_sel;
         _tab_ref.index(_tab_ref.ndx_tmp(,,'REF',,))
      || _tab_ref:=tab_tmp(1,'REF','INTEGER','');
         _tab_ref.blank();
         _tab_ref.REF:=#_tab_ren.ref();
         _tab_ref.add(1)
      ?}
   ?};
   _tab_ren.cntx_psh();
   _tab_ren.index(_b);
   {? _tab_ren.first()
   || __minlp:=($('_a.'+_a))(_tab_ren);
      {!
      |? {? (_tab_ref.clear(); _tab_ref.prefix(#_tab_ren.ref()); _tab_ref.first())
         || _first:=($('_a.'+_a))(_tab_ren); 0
         || _tab_ren.next()
         ?}
      !}
   ?};
   {? _tab_ren.last() || __maxlp:=($('_a.'+_a))(_tab_ren) ?};
   _tab_ren.cntx_pop();
   _ok:=0;
   {? _tryb='N'
   || ZAKR.BENR:=0;
      ZAKR.win_edit('RENUM_DO');
      _ok:=ZAKR.edit("{? ZAKR.BENR>=__minlp & ZAKR.BENR<=__maxlp
                      || ''
                      || FUN.info('Należy podać liczbę z zakresu [%1,%2].'@[$__minlp,$__maxlp]);
                         'BENR'
                      ?}")
   || ZAKR.ILNR:=1;
      ZAKR.win_edit('RENUM_O');
      _ok:=ZAKR.edit("{? ZAKR.ILNR>0
                      || 1
                      || FUN.info('Należy podać liczbę większą od zera.'@);
                         'ILNR'
                      ?}")
   ?};
   {? _ok
   ||
::    szuka numeru rekordu na który ma się zmienić
      _lprec:={? _tryb='N' || {? ZAKR.BENR<__minlp || __minlp
                              |? ZAKR.BENR>__maxlp || __maxlp
                              || ZAKR.BENR
                              ?}
              |? _tryb='U' || {? _first-ZAKR.ILNR<__minlp || __minlp || _first-ZAKR.ILNR ?}
              |? _tryb='D' || {? _first+ZAKR.ILNR>__maxlp || __maxlp || _first+ZAKR.ILNR ?}
              || _first
              ?};
      _tab_ren.cntx_psh();
      _ok:=0;
      {? _tab_ren.first() || {! |? {? ($('_a.'+_a))(_tab_ren)=_lprec || _ok:=1;0 || _tab_ren.next() ?} !} ?};
      {? _ok || _tab_ref.prefix(); exec('zmien_lp','#dragdrop',_a,_b,_tab_ref,_tab_ren) ?};
      _tab_ren.cntx_pop()
   ?};
   VAR_DEL.delete('__tabren','__minlp','__maxlp')
?};
~~

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:09 3b4e2e654bc2ee5371a49b7b424a38354be2dd50d4a5e93509f673c17758bb22ae0c0d3a5bb40cd68bf188bda46a1ab52856194e62b917a9dae8d3f2180cbe3503d7a5823a01519dca6273ddb27769b5d441b2599407a8b968ab427c28b41282047f3879ec13944cfaf79e9941f881a2fd033e651bab081031dfc0c98c4d8861
