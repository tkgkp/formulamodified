:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: #object.fml [17.00]
:: Utworzony: 2013/08/20
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły tworzace obiekty
::======================================================================================================================


\BIT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Deklaracja klasy BIT
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_bit');
:: Domyślna instancja obiektu
{? var_pres('BIT')<>type_of(@.CLASS.BIT)
|| BIT:=obj_new(@.CLASS.BIT)
?};
{? var_pres('BB')<>type_of(@.CLASS.BIT)
|| BB:=BIT
?};
BIT


\FUN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Deklaracja klasy FUN_CLASS i powołanie obiektu FUN
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec('fun_decl','#message');
:: Domyślna instancja obiektu
{? var_pres('FUN')<>type_of(@.CLASS.FUN_CLASS)
|| FUN:=obj_new(@.CLASS.FUN_CLASS)
?};
FUN


\KOMM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Deklaracja klasy JCQ i powołanie obiektu KOMM
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec('JCQ_decl','#message');
:: Domyślna instancja obiektu
{? var_pres('KOMM')<>type_of(@.CLASS.JCQ)
|| KOMM:=obj_new(@.CLASS.JCQ)
?};
KOMM


\__CHK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Deklaracja i powołanie obiektu __CHK
::----------------------------------------------------------------------------------------------------------------------
exec('CHECK','#record');
{? var_pres('__CHK')<>type_of(@.CLASS.CHECK)
|| __CHK:=obj_new(@.CLASS.CHECK)
?};
~~


\__WND
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Deklaracja i powołanie obiektu __WND
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec('init','#window');
:: Domyślna instancja obiektu
{? var_pres('__WND')<>type_of(@.CLASS.WINDOW)
|| __WND:=obj_new(@.CLASS.WINDOW)
?};
__WND


\VAR_DEL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Deklaracja i powołanie obiektu VAR_DEL
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec('vd_decl','#var');
:: Domyślna instancja obiektu
{? var_pres('VAR_DEL')<>type_of(@.CLASS.VD_CLASS)
|| VAR_DEL:=obj_new(@.CLASS.VD_CLASS)
?};
VAR_DEL


\MAIL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Deklaracja klasy EMAIL i powołanie obiektu MAIL
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec('declare','#email');
:: Domyślna instancja obiektu
{? var_pres('MAIL')<>type_of(@.CLASS.EMAIL)
|| MAIL:=obj_new(
      @.CLASS.EMAIL,
      exec('get','#params',700001,2)='T',
      exec('get','#params',700003,2),
      exec('get','#params',700007,2)
   );
   exec('set_virt','#mailbox');
   ~~
?};
MAIL


\STR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy STRING i powołanie obiektu STR
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_string');
:: Domyślna instancja obiektu
{? var_pres('STR')<>type_of(@.CLASS.STRING)
|| STR:=obj_new(@.CLASS.STRING)
?};
STR


\MS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy MISC i powołanie obiektu MS
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_misc');
:: Domyślna instancja obiektu
{? var_pres('MS')<>type_of(@.CLASS.MISC)
|| MS:=obj_new(@.CLASS.MISC)
?};
MS


\MBJAR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy JAR i powołanie obiektu MBJAR
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_jar');
:: Domyślna instancja obiektu
{? var_pres('MBJAR')<>type_of(@.CLASS.JAR)
|| MBJAR:=obj_new(@.CLASS.JAR)
?};
MBJAR


\UNIVERS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy UNIVERS i powołanie obiektu UNIVERS
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_univers');
:: Domyślna instancja obiektu
{? var_pres('UNIVERS')<>type_of(@.CLASS.UNIVERS)
|| UNIVERS:=obj_new(@.CLASS.UNIVERS)
?};
UNIVERS


\ML
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy MEMO i powołanie obiektu ML
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_memo');
:: Domyślna instancja obiektu
{? var_pres('ML')<>type_of(@.CLASS.MEMO)
|| ML:=obj_new(@.CLASS.MEMO)
?};
ML


\POPEXP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy POPUP i powołanie obiektu POPEXP
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_popup');
:: Domyślna instancja obiektu
{? var_pres('POPEXP')<>type_of(@.CLASS.POPUP)
|| POPEXP:=obj_new(@.CLASS.POPUP,tab_num)
?};
POPEXP


\PROGRESS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy PROGRES i powołanie obiektu PROGRESS
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_progres');
:: Domyślna instancja obiektu
{? var_pres('PROGRESS')<>type_of(@.CLASS.PROGRES)
|| PROGRESS:=obj_new(@.CLASS.PROGRES,1)
?};
PROGRESS


\ADM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy ADMIN i powołanie obiektu ADM
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_admin');
:: Domyślna instancja obiektu
{? var_pres('ADM')<>type_of(@.CLASS.ADMIN)
|| ADM:=obj_new(@.CLASS.ADMIN)
?};
ADM


\CALC
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy CALCUL i powołanie obiektu CALC
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_calcul');
:: Domyślna instancja obiektu
{? var_pres('CALC')<>type_of(@.CLASS.CACLUL)
|| CALC:=obj_new(@.CLASS.CALCUL)
?};
CALC


\DEB
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy DEBUG i powołanie obiektu DEB
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_debug');
:: Domyślna instancja obiektu
{? var_pres('DEB')<>type_of(@.CLASS.DEBUG)
|| DEB:=obj_new(@.CLASS.DEBUG)
?};
DEB


\IMP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy IMPORT i powołanie obiektu IMP
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_import');
:: Domyślna instancja obiektu
{? var_pres('IMP')<>type_of(@.CLASS.IMPORT)
|| IMP:=obj_new(@.CLASS.IMPORT)
?};
IMP


\TT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy NDXTEST i powołanie obiektu TT
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_ndxtest');
:: Domyślna instancja obiektu
{? var_pres('TT')<>type_of(@.CLASS.NDXTEST)
|| TT:=obj_new(@.CLASS.NDXTEST)
?};
TT


\QUER
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy QUERY i powołanie obiektu QUER
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_query');
:: Domyślna instancja obiektu
{? var_pres('QUER')<>type_of(@.CLASS.QUERY)
|| QUER:=obj_new(@.CLASS.QUERY)
?};
QUER


\QUEUE
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy QUEUE i powołanie obiektu QUEUE
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_queue');
:: Domyślna instancja obiektu
{? var_pres('QUEUE')<>type_of(@.CLASS.QUEUE)
|| QUEUE:=obj_new(@.CLASS.QUEUE)
?};
QUEUE


\REP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy REPORT i powołanie obiektu REP
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_report');
:: Domyślna instancja obiektu
{? var_pres('REP')<>type_of(@.CLASS.REPORT)
|| REP:=obj_new(@.CLASS.REPORT)
?};
REP


\SQL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy SQL i powołanie obiektu SQL
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_sql');
:: Domyślna instancja obiektu
{? var_pres('SQL')<>type_of(@.CLASS.SQL)
|| SQL:=obj_new(@.CLASS.SQL)
?};
SQL


\STOS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy STACK i powołanie obiektu STOS
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_stack');
:: Domyślna instancja obiektu
{? var_pres('STOS')<>type_of(@.CLASS.STACK)
|| STOS:=obj_new(@.CLASS.STACK)
?};
STOS


\TIMER
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy TIMER i powołanie obiektu TIMER
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_timer');
:: Domyślna instancja obiektu
{? var_pres('TIMER')<>type_of(@.CLASS.TIMER)
|| TIMER:=obj_new(@.CLASS.TIMER)
?};
TIMER


\TRS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klasy TRSTAB i powołanie obiektu TRS
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec(,'_trstab');
:: Domyślna instancja obiektu
{? var_pres('TRS')<>type_of(@.CLASS.TRSTAB)
|| TRS:=obj_new(@.CLASS.TRSTAB)
?};
TRS


\decl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [17.00]
:: OPIS: Deklaracja klas, dla których nie da się powołać obiektów na starcie
::----------------------------------------------------------------------------------------------------------------------
exec(,'_blobs');
exec(,'_buffer');
exec(,'_calend');
exec(,'_htmltab');
exec(,'_print');
exec(,'_tab2htm');
~~


\Color
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Deklaracja i powołanie obiektu COLOR
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec('decl_color','#color');
:: Domyślna instancja obiektu
{? var_pres('Color')<>type_of(@.CLASS.COLOR)
|| Color:=obj_new(@.CLASS.COLOR)
?};
Color


\Legend
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Deklaracja klasy LEGEND i powołanie obiektu LEGEND (do obslugi legendy).
::----------------------------------------------------------------------------------------------------------------------
exec('decl_legend','#color');
{? var_pres('Legend')<>type_of(@.CLASS.LEGEND)
|| Legend:=obj_new(@.CLASS.LEGEND)
?};
~~


\Perm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Deklaracja klasy PERM i powołanie obiektu Perm do obslugi uprawnień do danych.
::----------------------------------------------------------------------------------------------------------------------
exec('decl_perm','#b_perm');
{? var_pres('Perm')<>type_of(@.CLASS.PERM)
|| Perm:=obj_new(@.CLASS.PERM)
?};
~~


\AreaTitle
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Deklaracja klasy AREATIT i powołanie obiektu AreaTitle do obslugi tytułu obszaru roboczego.
::----------------------------------------------------------------------------------------------------------------------
exec('decl_areatit','#b_area');
{? var_pres('AreaTitle')<>type_of(@.CLASS.AREATIT)
|| AreaTitle:=obj_new(@.CLASS.AREATIT)
?};
~~


\REPTAB
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Deklaracja klasy REPTAB i powołanie obiektu tej klasy do obslugi tabeli z raportami
::----------------------------------------------------------------------------------------------------------------------
exec('decl_reptab','#b_report');
obj_new(@.CLASS.REPTAB)


\__PARSES
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Deklaracja klasy ParSes i powołanie obiektu tej kalsy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec('parses_decl','#parses');
:: Domyślna instancja obiektu
{? var_pres('__PARSES')<>type_of(@.CLASS.ParSes)
|| __PARSES:=obj_new(@.CLASS.ParSes,exec('operatorUser','#users'))
?};
__PARSES


\__PIVOT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KOD [17.00]
:: OPIS: Deklaracja obiektu umozliwiajacego tworzenie "kwerendy krzyzowej" z zestawu rekordow.
::----------------------------------------------------------------------------------------------------------------------
exec('object','#pivot');
{? var_pres('__PIVOT')<>type_of(@.CLASS.PIVOT)
|| __PIVOT:=obj_new(@.CLASS.PIVOT)
?};
~~


\__UPG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Deklaracja klasy UPGRADE i powołanie obiektu __UPG
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec('declUpgrade','#upgrade');
:: Domyślna instancja obiektu
{? var_pres('__UPG')<>type_of(@.CLASS.UPGRADE)
|| __UPG:=obj_new(@.CLASS.UPGRADE)
?};
__UPG


\__FileLayer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [TS] [17.14]
:: OPIS: Deklaracja klasy FileLayer i powołanie obiektu __FileLayer.
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec('decl_filelayer','#file');
:: Domyślna instancja obiektu
{? var_pres('__FileLayer')<>type_of(@.CLASS.FileLayer)
|| __FileLayer:=obj_new(@.CLASS.FileLayer,0)
?};
__FileLayer


\Xls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Deklaracja klasy XRECLASS i powołanie obiektu Xls.
:: _a [0/1] - czy obiekt ma operować na plikach po stronie serwera (domyślnie 0)
::----------------------------------------------------------------------------------------------------------------------
_serverDir:={? var_pres('_a')=type_of(0) || _a || 0 ?};
:: Deklaracja klasy
exec('xls_reader_decl','#excel');
:: Domyślna instancja obiektu
{? var_pres('Xls')<>type_of(@.CLASS.XRECLASS)
|| Xls:=obj_new(@.CLASS.XRECLASS,_serverDir)
|? var_pres('Xls')=type_of(@.CLASS.XRECLASS) & Xls.SERWER<>_serverDir
|| obj_del(Xls);
   Xls:=obj_new(@.CLASS.XRECLASS,_serverDir)
?};
Xls


\myDIALOG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Deklaracja i powołanie obiektu myDIALOG
::----------------------------------------------------------------------------------------------------------------------
{? cli_ver()='jterm'
||
:: Deklaracja klasy
   exec(,'#dialog');
:: Domyślna instancja obiektu
   {? var_pres('myDIALOG')<>type_of(@.CLASS.DIALOG)
   || myDIALOG:=obj_new(@.CLASS.DIALOG)
   ?};
   myDIALOG
?}


\Plugin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [TS] [18.42]
:: OPIS: Deklaracja klasy Plugins i powołanie obiektu Plugin
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec('decl_plugins','#plugins');
:: Domyślna instancja obiektu
{? var_pres('Plugin')<>type_of(@.CLASS.Plugins)
|| Plugin:=obj_new(@.CLASS.Plugins)
?};
Plugin


\Link
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.02]
:: OPIS: Deklaracja klasy Links u powołanie obiektu Link
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec('decl_links','#link');
:: Domyślna instancja obiektu
{? var_pres('Link')<>type_of(@.CLASS.Links)
|| Link:=obj_new(@.CLASS.Links)
?};
Link


\Icon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Deklaracja i powołanie obiektu Icon
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracja klasy
exec('decl_icon','#icon');
:: Domyślna instancja obiektu
{? var_pres('Icon')<>type_of(@.CLASS.ICONCLASS)
|| Icon:=obj_new(@.CLASS.ICONCLASS)
?};
Icon


\ext_val
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Tworzy tablicę nazwaną wykorzystywaną do zwrócenia wartości z ewentualnym opisem.
::   WE: _a [ANY] - opcjonalny - wartość zwracana
::       _b [STRING] - opcjonalny - opis wartości
::   WY: wskazanie tablicy nazwanej
::       VALUE - wartość zwracana (domyślnie ~~)
::       INFO - opis wartości (domyślnie '')
::----------------------------------------------------------------------------------------------------------------------
_ret:=obj_new('VALUE','INFO');
_ret.VALUE:={? var_pres('_a')>=type_of(~~) || _a || ~~ ?};
_ret.INFO:={? var_pres('_b')=type_of('') || _b || '' ?};
_ret


\ESIGN
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca obiekt do obsługi podpisu i jego weryfikacji
::----------------------------------------------------------------------------------------------------------------------
exec('esign_decl','#esign');
obj_new(@.CLASS.ESIGN)


\RE
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Zwraca obiekt klasy RE wspomagającej wyszukiwanie wzorców (wyrażeń regularnych) w tekście.
::----------------------------------------------------------------------------------------------------------------------
exec('re_decl','#regex');
obj_new(@.CLASS.RE)


\ES
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [23.25]
:: OPIS: Zwraca obiekt klasy ES ElasticSearch
::----------------------------------------------------------------------------------------------------------------------
exec('elastic','elastic_obj');
{? var_pres('Elastic')<>type_of(@.CLASS.ES)
|| Elastic:=obj_new(@.CLASS.ES)
?};
Elastic

:Sign Version 2.0 jowisz:1048 2023/06/23 14:13:35 8566ad6f1c5ad9d0ec64c1d9b7b9bf9edce2e3304dd2457a3fd4bd388d274c87b8fdab874eafdee9c9a3bb2c7dc3f714a9ba98ac515c144cf821b36e7e73a2f8976e381c5c195a84bfaa267a665487e54e3548f8a0a84caec00c9af2344301da4664c29816c9426ea61d6c686c66de2c29b33be3adce10bcbfebf8cf7f5a340c
