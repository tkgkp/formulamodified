:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #b_desktop.fml [17.00]
:: Utworzony: 26.09.2013
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Pulpit procesowości
::======================================================================================================================


\usractTab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Tabela czynności użytkownika
::   WE: _a - obj_new('TAB','WER')
::       _b - B_ACTION.UID
::       [_c] - INTEGER - [0] - ładuje czynności i procesy
::                         1 - ładuje tylko procesy
::                         2 - ładuje tylko procesy nieukryte na pulpicie
::       [_d] - porty wejściowe czynności
::       [_e] - STRING - tryb wypełniania tabelki: 'PULPIT','MP_RUN'
::       [_f] - INTEGER - [0] - parametr w procesie może nie mieć wartości lub wartość zgodną z _params.PORTS_IN (_d)
::                         1 - parametr w procesie musi mieć wartość zgodną z _params.PORTS_IN (_d)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_uid:=_b;
_only_proc:=0;
{? var_pres('_c')=type_of(0)
|| _only_proc:=_c
?};
_portsIn:={? var_pres('_d')=type_of(obj_new('obj')) || _d || ~~ ?};
_fill_mode:='PULPIT';
{? var_pres('_e')=type_of('')
|| _fill_mode:=_e
?};
_ports_adj:={? var_pres('_f')=type_of(0) || _f || 0 ?};

_Tab:=_obj.TAB:=tab_tmp(3
   ,'PROC'     ,'STRING[1]'   ,'Proces [T/N]'
   ,'UID'      ,'STRING[100]' ,'UID'
   ,'VER'      ,'STRING[10]'   ,'Wersja'
   ,'IN'       ,'STRING[100]' ,'Wejście'
   ,'NAME'     ,'STRING[45]'  ,'Nazwa'
   ,'REF'      ,'STRING[16]'  ,'$B_ACTIONS.ref'
   ,'REF_PROC' ,'STRING[16]'  ,'$B_PROC.ref'
   ,'REF_PREL' ,'STRING[16]'  ,'$B_PREL.ref'
   ,'DOMAIN'   ,'STRING[3]'   ,'Dziedzina'
   ,'UID_EXE'  ,'STRING[48]'  ,'UID_EXE'
   ,'ICON'     ,'STRING[60]'  ,'Ikona'
   ,'AH'       ,'STRING[100]' ,'Podpowiedz'
   ,'UID_MOD'  ,'STRING[48]'  ,'UID_MOD'
   ,'DOKUWIKI' ,'STRING[255]' ,'DOKUWIKI'
   );

exec('fill','#b_desktop',_obj,_uid,_fill_mode,_only_proc,_portsIn,_ports_adj);
~~


\fill
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Wypełnia tabelkę Czynności startowe na pulpicie
::   WE: _a - obj_new('TAB','WER')
::       _b - B_ACTION.UID
::       _c - STRING - tryb wypełniania tabelki: 'PULPIT','MP_RUN'
::       [_d] - INTEGER - [0] - ładuje czynności i procesy
::                         1 - ładuje tylko procesy
::                         2 - ładuje tylko procesy nieukryte na pulpicie
::       [_e] - porty wejściowe czynności
::       [_f] - INTEGER - [0] - parametr w procesie może nie mieć wartości lub wartość zgodną z _params.PORTS_IN (_d)
::                         1 - parametr w procesie musi mieć wartość zgodną z _params.PORTS_IN (_d)
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_uid:=_b;
_fill_mode:=_c;

_only_proc:=0;
{? var_pres('_d')=type_of(0)
|| _only_proc:=_d
?};
_portsIn:={? var_pres('_e')>100
          || _e
          || ~~
          ?};
_ope:=exec('operatorUser','#users');
_ports_adj:={? var_pres('_f')=type_of(0) || _f || 0 ?};
_websesid:=+app_info('web_sesid');

:: ustawianie kontekstu firmy dla webterm
{? _websesid
|| REF.MOBILE:='';
   REF.FIRMA:=exec('firma_ref','#firma',app_info('app_ident'))
?};
_firma:=REF.FIRMA;

_b_ele:=null();
{? _uid<>''
|| _b_ele:=exec('FindInSet','#table','B_ACTION','UNIK',_uid,,"B_ACTION.B_ELE",,,null())
?};

_Tab:=_obj.TAB;
_Procla:=~~;
{? _Tab.first() || {! |? _Tab.del() !} ?};

{? exec('interm','#system')=0 & lang_language(1)<>'' & lang_language(1)<>'pl'
|| {? _fill_mode='PULPIT' | _fill_mode='MP_RUN'
   || _Procla:=exec(, '__fmlang','proces.lang',,,lang_language(1))
   ?}
?};
exec('czytaj','#stalesys',,XINFO,'DOKUWIKI','DOKU_INT');
{? exec('interm','#system') & XINFO.DOKU_INT<>''
|| _adr_wi:=-(form(XINFO.DOKU_INT))
|| _adr_wi:=-(form(XINFO.DOKUWIKI))
?};

:: analiza uprawnień do zdefiniowanych procesów
B_ACTROL.cntx_psh();
B_ACTION.cntx_psh();
B_PROC.cntx_psh();
B_CONN.cntx_psh();
B_PREL.cntx_psh();
B_USRROL.cntx_psh();
B_USRROL.index('USER');
B_USRROL.prefix(REF.FIRMA,_ope);
_loop:=B_USRROL.first();
{!
|? _loop
|!
   {? _only_proc=0
   ||
::    analiza micro-procesow
      B_ACTROL.index('MICRO');
      {? _uid=''
      || B_ACTROL.prefix(_firma,B_USRROL.B_ROLE)
      || B_ACTROL.prefix(_firma,B_USRROL.B_ROLE,_uid,'T')
      ?};
      _loop1:=B_ACTROL.first();
      {!
      |? _loop1
      |!
         {? ~_Tab.find_key('N',B_ACTROL.B_ACTION().UID,)
         || B_PREL.index('MICRO');
            B_PREL.prefix('T',B_ACTION.B_ELE);
            {? B_PREL.first()
            ||
               _Tab.blank();
               _Tab.PROC:='N';
               _Tab.UID:=B_ACTION.UID;
               _Tab.NAME:=B_ACTION.NAME;
               _Tab.REF:=$B_ACTION.ref();
               _Tab.REF_PROC:=$B_PREL.B_PROC;
               _Tab.REF_PREL:=$B_PREL.ref();
               {? _websesid=0 & B_ACTION.B_CAN='M'
                  | _websesid & B_ACTION.B_CAN='W'
                  | B_ACTION.B_CAN='B'
               || _Tab.add()
               ?}
            ?}
         ?};
         _loop1:=B_ACTROL.next()
      !}
   ?};
:: analiza procesow
   {? _uid='' | _Tab.first()
:: analiza procesów jeśli nie podano _uid
:: lub jesli podano _uid to z wcześniejszej analizy musi byc zapis w _Tab co oznacza uprawnienia do czynności
   ||
      B_PREL.index('START');
      B_PREL.prefix('T',B_USRROL.B_ROLE,'T','T');
      _loop:=B_PREL.first();
      {!
      |? _loop
      |!
         _b_proc:=B_PREL.B_PROC;
::       Sprawdzenie czy zdarzenie startowe nieokreślone
::       exec('is_event','#b_event',B_PREL.B_ELE,exec('type_start','#b_event'),exec('kind_none','#b_event'))>0
         {? exec('is_event','#b_event',B_PREL.B_ELE,'startowe','nieokreślone')>0
            & (_only_proc=0 | _only_proc=1 | B_PREL.DESKTOP='T')
         ||
            _add:=1;
            _prel_eve:=B_PREL.ref();
            B_PREL.cntx_psh();
            B_ACTION.cntx_psh();
            B_ACTION.index('B_ELE');
            B_ACTION.prefix();
            {? _b_ele
                  &
               B_ACTION.find_key(_b_ele)
            ||
               B_ACTSTA.cntx_psh();
               B_ACTSTA.index('ELE_ACT');
               B_ACTSTA.prefix(_prel_eve,_b_ele);
               _add:=0;
               _loop:=B_ACTSTA.first();
               {!
               |? _loop
               |!
                  _b_can:={? B_ACTION.MANUAL='T' & B_PREL.B_CAN<>'' || B_PREL.B_CAN || B_ACTION.B_CAN ?};
                  {? _websesid=0 & _b_can='M'
                     | _websesid & _b_can='W'
                     | _b_can='B'
                  ||
                     _add:=1;
                     {? var_pres('_portsIn')<>type_of(~~)
::                      Podano porty wejściowe podczas uruchomienia dlatego porównanie z wartościami w definicji procesu
                     || _isPort4Bele:=0;
                        {! _ii:=1..obj_len(_portsIn) |! {? _portsIn[_ii].B_ELE=_b_ele || _isPort4Bele:=_ii ?} !};
                        {? _isPort4Bele
::                         Podano porty wejściowe dla _b_ele
                        || {? _ports_adj=0
                           ||
                              B_VALPRT.cntx_psh();
                              B_VALPRT.index('UNIK');
                              B_VALPRT.prefix(B_ACTSTA.PREL_ACT);
                              _loop:=B_VALPRT.first();
                              {!
                              |? _loop
                              |!
                                 _symbol:=B_VALPRT.B_PORT().SYMBOL;
                                 {? var_pres(_symbol,_portsIn[_isPort4Bele].PORTS)>0
                                 || _ff:='_a.PORTS.'+_symbol;
                                    _val:=($_ff)(_portsIn[_isPort4Bele]);
                                    {? type_of(_val)<>type_of(~~)
                                    || _add:=_val=exec('str2val','#convert',B_VALPRT.FORMULA,1)
                                    ?}
                                 ?};
                                 _loop:=_add=1 & B_VALPRT.next()
                              !};
                              B_VALPRT.cntx_pop()
                           ||
                              B_PORT.cntx_psh();
                              B_PORT.index('UNIK');
                              B_PORT.prefix(_b_ele);
                              _loop:=B_PORT.first();
                              {!
                              |? _loop
                              |!
                                 _symbol:=B_PORT.SYMBOL;
                                 {? var_pres(_symbol,_portsIn[_isPort4Bele].PORTS)>0
                                 ||
                                    _ff:='_a.PORTS.'+_symbol;
                                    _val:=($_ff)(_portsIn[_isPort4Bele]);
                                    {? type_of(_val)<>type_of(~~)
                                    ||
                                       B_VALPRT.cntx_psh();
                                       B_VALPRT.index('UNIK');
                                       B_VALPRT.prefix(B_ACTSTA.PREL_ACT,B_PORT.ref());
                                       _add:=
                                          {? B_VALPRT.first()
                                          ||
                                             _val=exec('str2val','#convert',B_VALPRT.FORMULA,1)
                                          ||
                                             0
                                          ?};
                                       B_VALPRT.cntx_pop()
                                    ?}
                                 ?};
                                 _loop:=_add=1 & B_PORT.next()
                              !};
                              B_PORT.cntx_pop()
                           ?}
                        ?}
                     ?}
                  ?};
                  _loop:=_add & B_ACTSTA.next()
               !};
               B_ACTSTA.cntx_pop()
            ||
               _add:=0;
               B_ACTSTA.cntx_psh();
               B_ACTSTA.index('ELE_ACT');
               B_ACTSTA.prefix(_prel_eve);
               _loop:=B_ACTSTA.first();
               {!
               |? _loop
               |!
                  {? B_ACTION.find_key(B_ACTSTA.PREL_ACT().B_ELE)
                  ||
                     _b_can:={? B_ACTION.MANUAL='T' & B_PREL.B_CAN<>'' || B_PREL.B_CAN || B_ACTION.B_CAN ?};
                     {? (_websesid=0 & _b_can='M')
                        | (_websesid & _b_can='W')
                        | _b_can='B'
                     ||
                        _add:=1
                     ?}
                  ?};
                  _loop:=_b_can='' & B_ACTSTA.next()
               !};
               B_ACTSTA.cntx_pop()
            ?};
            B_ACTION.cntx_pop();
            B_PREL.cntx_pop();

            {? _add
            ||
               _Tab.blank();
               _Tab.PROC:='T';
               _Tab.UID:=B_PREL.B_PROC().SYMBOL;
               _Tab.VER:=B_PROC.VER;
               _Tab.IN:=B_PREL.SYMBOL;
               _Tab.REF_PROC:=$B_PREL.B_PROC;
               _Tab.REF_PREL:=$B_PREL.ref();
               _Tab.DOMAIN:=B_PREL.B_DOMAIN().SYMBOL;
               {? _Tab.DOMAIN=''
               || _Tab.DOMAIN:='ZWS'
               ?};
               {? _fill_mode='PULPIT'
               ||
                  {? var_pres('_Procla')>100
                  || _Tab.NAME:=_Procla.t({? B_PREL.SYMBOL<>'' || gsub(B_PREL.SYMBOL,'\n',' ') || B_PREL.B_PROC().NAME ?});
                     _Tab.AH:='ZDARZENIE:'@+' '+ _Procla.t(B_PREL.B_PROC().SYMBOL)
                  || _Tab.NAME:={? B_PREL.SYMBOL<>'' || gsub(B_PREL.SYMBOL,'\n',' ') || B_PREL.B_PROC().NAME ?};
                     _Tab.AH:='ZDARZENIE:'@+' '+B_PREL.B_PROC().SYMBOL
                  ?};


                  _formula:='exec(\'proMan\',\'#b_proman\',exec(\'FindAndGet\',\'#table\',B_PREL,\''+_Tab.REF_PREL+'\'),\'\',,\'Proc\')';
                  _Tab.UID_EXE:=exec('bdexec_check','#b_desktop',_formula,B_PREL.B_DOMAIN().SYMBOL);

                  {? _websesid
                  || _formula:='exec(\'select_proc_web\',\'#b_design\',\''+_Tab.REF_PROC+'\')'
                  || _formula:='_proc:=exec(\'FindAndGet\',\'#table\',B_PROC,\''+_Tab.REF_PROC+'\');exec(\'select4proc\',\'#b_design\',_proc,0)'
                  ?};
                  _Tab.UID_MOD:=exec('bdexec_check','#b_desktop',_formula);
::                adres serwera dokumentacyjnego + ścieżka
                  _Tab.DOKUWIKI:=exec('get_adres','#help','start',_adr_wi,0)
               |? _fill_mode='MP_RUN'
               || {? var_pres('_Procla')>100
                  || _Tab.NAME:=_Procla.t({? B_PREL.SYMBOL<>'' || gsub(B_PREL.SYMBOL,'\n',' ') || B_PREL.B_PROC().NAME ?})
                  || _Tab.NAME:={? B_PREL.SYMBOL<>'' || gsub(B_PREL.SYMBOL,'\n',' ') || B_PREL.B_PROC().NAME ?}
                  ?}
               ||
                  _Tab.NAME:={? B_PREL.SYMBOL<>'' || gsub(B_PREL.SYMBOL,'\n',' ') || B_PREL.B_PROC().NAME ?}
               ?};

               _Tab.ICON:=B_PREL.ICONFILE;
               _Tab.add()
            ?}
         ?};
         _loop:=B_PREL.next()
      !}
   ?};
   _loop:=B_USRROL.next()
!};
_Tab.first();
B_USRROL.cntx_pop();
B_PREL.cntx_pop();
B_CONN.cntx_pop();
B_PROC.cntx_pop();
B_ACTION.cntx_pop();
B_ACTROL.cntx_pop();
~~


\usersAction
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Tworzy tablice _Tab użytkowników uprawnionych do wykonania czynnosci _a
::   WE: _a - BI_PREL.ref() - ref instancji procesu
::       [_b] - USERS.ref() - ref użytkownika, którego pominąć w wyniku
::       [_c] - USERS.ref() - jeśli podane to uprawnienia będą sprawdzane tylko dla tego użytkownika
::       [_d] - Ścieżka uruchomienia czynności
::       [_e] - USERS.ref() - jeśli podane to uprawnienia będą sprawdzane tylko dla tego użytkownika (zastępowany)
::   WY: _Tab
::----------------------------------------------------------------------------------------------------------------------
_bi_prel:=_a;

_skip_user:=null();
{? var_pres('_b')=type_of(USERS.ref())
|| _skip_user:=_b
?};

_chk_user:=null();
{? var_pres('_c')=type_of(USERS.ref())
|| _chk_user:=_c
?};

_path:={? var_pres('_d')=type_of('') || _d || '' ?};

_chk_user_r:=null();
{? _chk_user & var_pres('_e')=type_of(USERS.ref())
|| _chk_user_r:=_e
?};

_iter:=1; {? _chk_user_r || _iter:=2 ?};

_continue:=1;

_Tab:=exec('tabTmpUsers','#b_desktop');
_b_role:=null();

B_PROC.cntx_psh();
B_PREL.cntx_psh();
BI_PREL.cntx_psh(); {? BI_PREL.name()='' || BI_PREL.use('bi_e____') ?}; BI_PREL.index('UID'); BI_PREL.clear();
BI_PROC.cntx_psh(); {? BI_PROC.name()='' || BI_PROC.use('bi_p____') ?}; BI_PROC.index('UID'); BI_PROC.prefix();
USERS.cntx_psh();

{? BI_PREL.seek(_bi_prel)
||
   _micro:=BI_PREL.BI_PROC().B_PROC().MICRO;
   _class:=BI_PREL.B_PREL().CLASS;

:: ustawianie kontekstu firmy dla webterm
   {? +app_info('web_sesid')
   ||
      REF.FIRMA:=exec('firma_ref','#firma',app_info('app_ident'))
   ?};
   _firma:=REF.FIRMA;

   {! _ii:=1 .. _iter
   |!
      {? _class='B_ACTION'
      ||
         {? _micro='T'
         ||
:: Użytkownicy mikroprocesów
            _b_ele:=BI_PREL.B_PREL().B_ELE;
            _act:=exec('FindInSet','#table','B_ACTION','B_ELE',_b_ele);
::          iteracja po rolach czynnosci
            B_USRROL.cntx_psh();
            B_USRROL.index('UNIK');
            B_ACTROL.cntx_psh();
            B_ACTROL.index('DISP2');
            B_ACTROL.prefix(_firma,_act);
            _loop:=B_ACTROL.first();
            {!
            |? _loop
            |!
::             iteracja po użytkownikach roli
               {? {? _ii=1 || _chk_user<>null() || _chk_user_r<>null() ?}
               || B_USRROL.prefix(_firma,B_ACTROL.B_ROLE,{? _ii=1 || _chk_user || _chk_user_r ?})
               || B_USRROL.prefix(_firma,B_ACTROL.B_ROLE)
               ?};
               _loop1:=B_USRROL.first();
               {!
               |? _loop1
               |!
                  _user:=$B_USRROL.USERS;
                  _usr_kod:=B_USRROL.USERS().KOD;
                  _usr_dane:=USERS.DANE;
                  _usr_log_date:=USERS.LOGIN_D;
                  _usr_log_time:=USERS.LOGIN_T;
                  {? ~_Tab.find_key(_user)
                  ||
                     _can_add:=0;

                     {? (_skip_user=null() | _skip_user<>B_USRROL.USERS) & ~_Tab.find_key(_user)
                      & (_skip_user=null() | exec('FindInSet','#table','BI_TODO','UNIQUE',B_USRROL.USERS,BI_PREL.ref())=null())
                     || _can_add:=1
                     ?};

::                     {? _can_add>0
::                     || B_USRROL.FIRMA()
::                     ?};

                     {? _can_add>0
                     || _Tab.blank();
                        _Tab.USER:=_user;
                        _Tab.KOD:=_usr_kod;
                        _Tab.DANE:=_usr_dane;
                        {? _usr_log_date<>date(0,0,0)
                        || _Tab.LOGIN_D:=$_usr_log_date;
                           _Tab.LOGIN_T:=$_usr_log_time
                        ?};
                        {? _Tab.add()
                        ||
::                      Kończymy sprawdzanie jeśli w parametrach wskazano użytkownika i znaleziono uprawnienie
                           _continue:=_chk_user=null()
                        ?}
                     ?}
                  ?};
                  _loop1:=_continue & B_USRROL.next()
               !};
               _loop:=_continue & B_ACTROL.next()
            !};
            B_ACTROL.cntx_pop();
            B_USRROL.cntx_pop()
         ||
:: Użytkownicy w definicjach procesu (B_PREL.B_ROLE)

            _b_role:=BI_PREL.B_PREL().B_ROLE;
::          iteracja po uzytkownikach roli
            B_USRROL.cntx_psh();
            B_USRROL.index('UNIK');
            {? {? _ii=1 || _chk_user<>null() || _chk_user_r<>null() ?}
            || B_USRROL.prefix(_firma,_b_role,{? _ii=1 || _chk_user || _chk_user_r ?})
            || B_USRROL.prefix(_firma,_b_role)
            ?};
            _loop1:=B_USRROL.first();
            {!
            |? _loop1
            |!
               _user:=$B_USRROL.USERS;
               _usr_kod:=B_USRROL.USERS().KOD;
               _usr_dane:=USERS.DANE;
               _usr_log_date:=USERS.LOGIN_D;
               _usr_log_time:=USERS.LOGIN_T;
               {? ~_Tab.find_key(_user)
               ||
                  _can_add:=0;

                  {? (_skip_user=null() | _skip_user<>B_USRROL.USERS) & ~_Tab.find_key(_user)
                   & (_skip_user=null() | exec('FindInSet','#table','BI_TODO','UNIQUE',B_USRROL.USERS,BI_PREL.ref())=null())
                  || _can_add:=1
                  ?};

::                  {? _can_add>0
::                  || B_USRROL.FIRMA()
::                  ?};

                  {? _can_add>0
                  || _Tab.blank();
                     _Tab.USER:=_user;
                     _Tab.KOD:=_usr_kod;
                     _Tab.DANE:=_usr_dane;
                     {? _usr_log_date<>date(0,0,0)
                     || _Tab.LOGIN_D:=$_usr_log_date;
                        _Tab.LOGIN_T:=$_usr_log_time
                     ?};
::                   _Tab.Z_ZAST='T' - uprawnienie nadane tylko z zastępstwa
                     _Tab.Z_ZAST:={? B_USRROL.ZAST_NAG || 'T' || 'N' ?};
                     {? _Tab.add()
                     ||
::                      Kończymy sprawdzanie jeśli w parametrach wskazano użytkownika i znaleziono uprawnienie
                        _continue:=_chk_user=null()
                     ?}
                  ?}
               ?};
               _loop1:=_continue & B_USRROL.next()
            !};
            B_USRROL.cntx_pop()
         ?}
      ?}
   !};

:: Czynność
   _b_action:=exec('FindInSet','#table','B_ACTION','B_ELE',BI_PREL.B_PREL().B_ELE);
:: Zasępstwa
   exec('zastepstwa','#b_desktop',_Tab,_b_action,_b_role);
   _loop:=_Tab.first();

:: Inicjuje obiekt Menadżera Procesów
   _class:={? __develop || @.Class.cProMan || @.CLASS.cProMan ?};
   _proMan:=obj_new(_class);
   _proMan.setCntx(BI_PREL.ref());
   _proMan.Path:=_path;
:: Ustawienie parametrów
   _ports:=exec('getPorts','#b_port',BI_PREL.B_PREL().B_ELE,'IN',BI_PREL.B_PREL);
   _portsIn:=exec('fillPorts','#bi_port',BI_PREL.ref(),'IN',_ports);

   {? var_pres('_ports')>0 || obj_del(_ports) ?};
   _ports:=exec('getPorts','#b_port',BI_PREL.B_PREL().B_ELE,'OUT',BI_PREL.B_PREL);
   _portsOut:=exec('fillPorts','#bi_port',BI_PREL.ref(),'OUT',_ports);

   {!
   |? _loop
   |!
      _user:=exec('FindAndGet','#table',USERS,_Tab.USER,,,null());
      _user_r:=exec('FindAndGet','#table',USERS,_Tab.USER_R,,,null());

::    Wykonuję formułę sprawdzającą uprawnienia do danych
      {? exec('user_access_fml','#b_proman',_user,,_user_r,_path,_proMan,_portsIn,_portsOut)
      ||
         _loop:=_Tab.next()
      ||
         _loop:=_Tab.del(,1)=2
      ?}
   !};
:: grupowanie userów
   _user_gr:='';
   _loop:=_Tab.first();
   {!
   |? _loop
   |!
      _del:={? _Tab.USER<>_user_gr || 0 || {? _Tab.prev() || _Tab.USER_R:=''; _Tab.put() & _Tab.next() ?} ?};
      _user_gr:=_Tab.USER;
      _loop:={? _del || _Tab.del(,1)=2 || _Tab.next() ?}
   !}
?};
BI_PROC.cntx_pop();
BI_PREL.cntx_pop();
B_PROC.cntx_pop();
B_PREL.cntx_pop();
USERS.cntx_pop();
_Tab


\zastepstwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Ustalenie uprawnionych użytkowników do wykonania czynności _b z uwzględnieniem zastępstw
::   WE: _a - wynik exec('usersAction','#b_desktop') - lista użytkowników uprawnionych do wykonania czynności _b
::       _b - B_ACTION.ref()
::       _c - null/B_ROLE.ref()
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_UsrsAct:=_a;
_b_action:=_b;
_b_role:=_c;

_ope:={? +app_info('web_sesid')
      || exec('user_ident_web','#users')
      || exec('users','#users',app_info('app_user'))
      ?};

:: Tabela zastępstw
_Zastepstwa:=tab_tmp(1
   ,'USER','STRING[16]','Użytkownik'
   ,'ZAST','STRING[16]','Zastępca');
:: Lista zastępców
_zast:='';

:: Ustalenie zastępstw
_loop:=_UsrsAct.first();
{!
|? _loop
|!
   {? _UsrsAct.USER=$_ope
   ||
::    Nie wyznaczamy zastępstwa dla zalogowanego użytkownika
      _Zastepstwa.USER:=_UsrsAct.USER;
      _Zastepstwa.ZAST:=_UsrsAct.USER;
      _Zastepstwa.add()
   ||
::    Wyznaczamy zastępstwo dla pozostałych użytkowników
      _user:=exec('FindAndGet','#table',USERS,_UsrsAct.USER,,,null());
      _Zastepstwa.USER:=_UsrsAct.USER;
      _Zastepstwa.ZAST:=$exec('zastepujacy','#users',,_user,_b_action,,_b_role).USER;
      _Zastepstwa.add()
   ?};
   _loop:=_UsrsAct.next()
!};

:: Sprawdzenie uprawnień zastępców
_loop:=_Zastepstwa.first();
{!
|? _loop
|!
   {? _Zastepstwa.ZAST<>'' & _Zastepstwa.ZAST<>_Zastepstwa.USER & ~_UsrsAct.find_key(_Zastepstwa.ZAST)
   ||
::    Zastępca nie ma uprawnień do wykonania czynności
      _Zastepstwa.ZAST:='';
      _Zastepstwa.put()
   ?};
   _loop:=_Zastepstwa.next()
!};

:: usuwamy użytkowników z uprwanieniami nadanymi tylko z zastępstw
_UsrsAct.cntx_psh();
_loop:=_UsrsAct.first();
{!
|? _loop
|!
   _loop:={? _UsrsAct.Z_ZAST='T' || _UsrsAct.del(,1)=2 || _UsrsAct.next() ?}
!};
_UsrsAct.cntx_pop();

:: Aktualizacja _UsersAct
_UsrsAct.cntx_psh();
_loop:=_Zastepstwa.first();
{!
|? _loop
|!
   _find:=0;
   _UsrsAct.prefix(_Zastepstwa.USER,'',);
   {? _UsrsAct.first()
   ||
      {? _Zastepstwa.ZAST=''
      ||
:: Usunięcie użytkowników:
:: - dla których nie wyznaczono zastępcy w \zastepujacy/#users
:: - dla których zastępca nie ma uprawnień do wykonania czynności
         _UsrsAct.del()
      ||
:: Uzupełnienie danych o zastępstwach
         {? _Zastepstwa.ZAST<>_Zastepstwa.USER
         ||
            _UsrsAct.USER:=_Zastepstwa.ZAST;
            _UsrsAct.KOD:=exec('FindAndGet','#table',USERS,_UsrsAct.USER,,"USERS.KOD",'');
            _UsrsAct.DANE:=exec('FindAndGet','#table',USERS,_UsrsAct.USER,,"USERS.DANE",'')
         ?};
         _UsrsAct.USER_R:=_Zastepstwa.USER;
         _UsrsAct.URKOD:=exec('FindAndGet','#table',USERS,_UsrsAct.USER_R,,"USERS.KOD",'');
         _UsrsAct.URDANE:=exec('FindAndGet','#table',USERS,_UsrsAct.USER_R,,"USERS.DANE",'');
         _UsrsAct.prefix();
         _UsrsAct.put()
      ?}
   ?};
   _loop:=_Zastepstwa.next()
!};
_UsrsAct.cntx_pop()


\isRunAction
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Sprawdza czy dana akcja jest na liście uruchomionych zadań
::   WY: 1-tak 0-nie
::---------------------------------------------------------------------------------------------------------------------

_wyn:=0;
_Tab:=cur_tab(1,1);
_ope:=exec('operatorUser','#users');

{? _Tab.REF_PROC<>''
|| _proc:=exec('FindAndGet','#table',B_PROC,_Tab.REF_PROC,,,null());
   BI_TODO.cntx_psh(); {? BI_TODO.name()='' || BI_TODO.use('bi_t____') ?};
   BI_TODO.index('USERPROC');
   BI_TODO.prefix(_proc,_ope,1);
   _wyn:=BI_TODO.first();
   BI_TODO.cntx_pop()
|| _proc:=exec('FindInSet','#table','B_PROC','',_Tab.UID,_Tab.UID);
   BI_TODO.cntx_psh(); {? BI_TODO.name()='' || BI_TODO.use('bi_t____') ?};
   BI_TODO.index('USERPROC');
   BI_TODO.prefix(_proc,_ope,1);
   {? BI_TODO.first() || {! |? _wyn:=BI_TODO.B_PROC().MICRO='T'; ~_wyn & BI_TODO.next() !} ?};
   BI_TODO.cntx_pop()
?};
_wyn


\tab_title
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Tworzy tabelke z tytułem okienka
::   WE: _a - obj_new('TAB','WER')
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;

_obj.TAB:=tab_tmp(1,
   'NAME','STRING[100]',''
);

_obj.WER:=_obj.TAB.mk_sel('Pulpit'@,,,'b_deskto_title');
_obj.TAB.win_fld(_obj.WER,,'NAME',,,45);
_obj.TAB.blank();
_obj.TAB.NAME:='Firma: '+REF.FIRMA().SYMBOL+' - '+REF.FIRMA().OPIS;
_obj.TAB.add();
~~


\deskWerProc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Okno procesów użytkownika
::   WE: _a - obj_new('TAB','WER')
::  OLD: \deskWerProc/#b_desktop - moj.fml
::----------------------------------------------------------------------------------------------------------------------
_dev:=_a;

_Tab:=_dev.TAB;

{? var_pres('WER',_dev)=type_of(obj_new('a')) || obj_del(_dev.WER) ?};
_dev.WER:=obj_new('AKRONIM','BTN1');

_wer:=_dev.WER.AKRONIM:=_Tab.mk_sel('Procesy'@,,,'aasdfjeoifjjeaf',1,,_Tab.size()+2,,'U');
_Tab.win_fld(_wer,,'UID',,,31,,,'Symbol'@);
_Tab.win_fld(_wer,,'VER',,,10,,,'Wersja'@);
::_Tab.win_fld(_wer,,'IN',,,31,,,'Wejście'@);
_Tab.win_fld(_wer,,'NAME',,,50,,,'Nazwa'@);
_Tab.win_act(_wer,,'Formuła','Uruchom'@@,,,"sel_exit()",,1,,,,'U');
_Tab.win_btn(_wer,'text=%1,panel=right,align=begin'['Uruchom'@],'menu:U',,,,,,'noempty');
_fml:="
   _proc:=exec('FindAndGet','#table',B_PROC,cur_tab(1,1).REF_PROC,,,null());
   exec('select4proc','#b_design',_proc,0)
";
_Tab.win_act(_wer,,'Formuła','Pod&gląd procesu'@@,,,_fml,,,,,,'G');
_Tab.win_btn(_wer,'text=%1,panel=right,align=begin'['Pod&gląd procesu'@],'menu:G',,,,,,'noempty');
_Tab.win_sel(_wer);
~~


\tabTmpUsers
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: Tworzy strukturę tabeli tymczasowej dla uprawnionych usersów
::   WY: tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
tab_tmp(2
   ,'USER','STRING[16]','Ref uzytkownika'
   ,'USER_R','STRING[16]','Zastępowany'
   ,'KOD','STRING[100]','Kod użytkownika'
   ,'DANE','STRING[100]','Dane użytkownika'
   ,'LOGGED','STRING[1]','Zalogowany?'
   ,'LOGIN_D','STRING[11]','Data zalogowania'
   ,'LOGIN_T','STRING[10]','Czas zalogowania'
   ,'URKOD','STRING[100]','Kod użytkownika zastępowanego'
   ,'URDANE','STRING[100]','Dane użytkownika zastępowanego'
   ,'Z_ZAST','STRING[1]','Uprawnienie nadane tylko z zastępstwa')


\bdexec_check
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: Sprawdza czy jest formuła w tabeli i wypełnia tabelę formuł dla pulpitu
::   WE: _a - STRING - formuła
::       [_b] - STRING - domena
::   WY: IDADD
::  OLD: \bdexec_check/#pulpit.fml
::----------------------------------------------------------------------------------------------------------------------
_fml:=_a;
_domain:='';
{? var_pres('_b')=type_of('')
|| _domain:=_b
?};

_wyn:='';
BD_EXEC.index('FORMULA');
BD_EXEC.prefix(_fml,);
{? BD_EXEC.first()
|| {? _domain<>'' & BD_EXEC.DOMAIN<>_domain
   || BD_EXEC.DOMAIN:=_domain;
      BD_EXEC.put()
   ?};
   _wyn:=BD_EXEC.uidref
|| BD_EXEC.blank();
   BD_EXEC.FORMULA:=_fml;
   BD_EXEC.DOMAIN:=_domain;
   {? BD_EXEC.add()
   || _wyn:=BD_EXEC.uidref
   ?}
?};
_wyn


\proc_exec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: uruchamia czynność, raport, obszar roboczy razem z formułą startową
::   WE:  _a  - STRING - BD_EXEC.uidref()
::       [_b] - INTEGER - 0/1 - czy wywołanie procesu w zakładce
::  OLD: \proc_exec/#pulpit.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_bd_exec:={? var_pres('_a')=type_of('') || _a || '' ?};
_proces:=0;
{? var_pres('_b')=type_of(0)
|| _proces:=_b
?};

:: Dla webterm uruchamianego z portalu HR trzeba zostawić ten dziwny kod
_params:=spli_str(_bd_exec,'@');
_len:=obj_len(_params);
_ext:=~~;
{? _len>1
|| _bd_exec:=_params[1];
   _ext:=obj_new(_len-1);
   {! _ind:=1 .. _len-1 |! _ext[_ind]:=_params[_ind+1] !};
   {? type_of(_ext)>0
   || _par:=params_get();
      params_set(exec('obj_ntab_set','#array',_par,'ext',_ext))
   ?}
?};

BD_EXEC.cntx_psh();
BD_EXEC.prefix();
{? BD_EXEC.seek(_bd_exec)
|| exec('start_proces','b_proces');
   {? _proces>0 & +app_info('web_sesid')=0
   || AreaTitle.setArea('#PROC');
      AreaTitle.setTitle()
   ?};
   _ok:=var_press('__PARSES')>0;
   {? _ok
   || {? app_info('web_sesid')<>''
      || exec('firma','#firma',exec('firma_symbol','#firma'));
         __PARSES.setMode('W')
      ?};
      _rodzaj:=__PARSES.getVal('OkresRodzaj').OKRO_R;
      _okres:=__PARSES.getVal('OkresRok');
      {? var_press('_okres')>0 & var_press('OKRO',_okres)>0
      || _okro:=_okres.OKRO
      || _ok:=0
      ?}
   ?};
   {? _ok=0 | exec('is_okres','pulpit',_okro,_bd_exec,_rodzaj)
   ||
::    statystyki użycia
      exec('stat_add','st_common','A_DOMAIN',{? BD_EXEC.DOMAIN='' || 'ZPR' || BD_EXEC.DOMAIN ?});
      ($BD_EXEC.FORMULA)()
   ?}
|| {? app_info('web_sesid')<>''
   || web_msg('Brak formuły o ID: %1 '@[_bd_exec],'BŁĄD')
   || choice('Brak formuły o ID: %1'@[_bd_exec],,'ERROR',1)
   ?}
?};
BD_EXEC.cntx_pop()


\proc_exec_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: OPIS: uruchamia czynność, raport, obszar roboczy bez formuły startowej
::  OLD: \proc_exec_mod/#pulpit.fml
::----------------------------------------------------------------------------------------------------------------------
BD_EXEC.cntx_psh();
BD_EXEC.prefix();
{? BD_EXEC.seek(_a)
||
:: statystyki użycia
   exec('stat_add','st_common','A_DOMAIN',{? BD_EXEC.DOMAIN='' || 'ZPR' || BD_EXEC.DOMAIN ?});
   ($BD_EXEC.FORMULA)()
|| {? cli_ver='jterm'
   || choice('Brak formuły o ID: %1'@[_a],,'ERROR',1)
   || web_msg('Brak formuły o ID: %1 '@[_a],'BŁĄD')
   ?}
?};
BD_EXEC.cntx_pop();
{? app_info('web_sesid')=''
|| exec('AreaTitle','#object');
   AreaTitle.setArea('#PULPIT');
   AreaTitle.setTitle()
?}


\fill_pulpit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: Wczytanie danych. Wczytywane sa wszystkie widoczne aplikacje.
::  OLD: \fill/#pulpit.fml
::----------------------------------------------------------------------------------------------------------------------

_kod:=app_info('app_user');
_web_sesid:=app_info('web_sesid');
USERS.index('USR_AKOD');
USERS.prefix();
OPERATOR.USER:={? USERS.find_key('T',_kod,) || USERS.ref() || null() ?};

:: Wczytanie do tabel pomocniczych dziedzin, czynności, obszarów, raportów i zdarzeń startowych
exec('proenv','#b_proman');
_domain:=__proenv.DOM_LIC;
_domain.cntx_psh();
_obj_event:=obj_new('TAB','WER');
_obj_domarea:=obj_new('TAB','WER');
_obj_report:=obj_new('TAB','WER');

:: Tryb zwracania dostępnych obszarów roboczych:
:: 1 - stary sposób, zwraca wszystkie obszary, również do których nie mam licencji
:: 2 - nowy sposób, zwraca tylko obszary do których mam licencję (szybszy)
_area_lic_mode:=2;

:: przygotowanie danych
exec('usractTab','#b_desktop',_obj_event,'',2);
exec('tab_area','#b_area',_obj_domarea,_area_lic_mode);
exec('tab_report2','#b_report',_obj_report);

_event:=_obj_event.TAB;
_domarea:=_obj_domarea.TAB;
_report:=_obj_report.TAB;

_ndx_dom:=_domain.ndx_tmp(,,'COLOR',,);
_domain.index(_ndx_dom);
_event.index(_event.ndx_tmp(,,'DOMAIN',,,'NAME',,));
_domarea.index(_domarea.ndx_tmp(,,'DOMAIN',,,'NAME',,));
_report.index(_report.ndx_tmp(,,'SYMBOL',,,'NAME',,));

:: Dodanie firm
{? +_web_sesid
|| _app_lst:=exec('firmy_user_www','#firma')
|| _app_lst:=exec('firmy_user_list','#firma');
   {? ~_app_lst.first()
   || FUN.info('Brak uprawnień do firm.'@);
      _domain.cntx_pop();
      break() ?}
?};

_can_continue:=1;
:: Komunikat jeżeli do niczego wg moich ról lub licencji nie mam dostępu
{? _domarea.size()=0
|| _cause:='';
   {? _area_lic_mode=1
   || _cause:='posiadanych ról'@
   |? _area_lic_mode=2
   || _cause:='posiadanych ról lub dostępnych licencji'@
   ?};
   _msg:='Brak uprawnień do obszarów roboczych wynikający z %1.\n\n'
         'Skontaktuj się z administratorem systemu.'@[_cause];
   FUN.info(_msg);
   _can_continue:=0
?};

{? _can_continue>0 & _area_lic_mode=1
||
:: Komunikat jeżeli licencje na wszystko do czego mam dostęp wygasły
   _domarea.cntx_psh();
   _ndx_area:=_domarea.ndx_tmp('',1,'LIC',,);
   _domarea.index(_ndx_area);
   _domarea.prefix(1);
   {? _domarea.size()=0
   || _msg:='Brak uprawnień do obszarów roboczych wynikający z dostępnych licencji.\n\n'
            'Skontaktuj się z administratorem systemu.'@;
      FUN.info(_msg)
   ?};
   _domarea.ndx_drop(_ndx_area);
   &_ndx_area;
   _domarea.cntx_pop()
?};

_fref:=0;
{? _app_lst.first()
||
   {!
   |?
      exec('add_grp', '#b_desktop',_app_lst.OPIS,_app_lst.GRP_IDEN,_app_lst.APP_IDEN);
      {? (app_info('app_ident')=_app_lst.APP_IDEN) & (REF.FIRMA().SYMBOL=_app_lst.SYMBOL)
      || {? _domain.first()
         || {!
            |?
               OBJ_P.TMP.cntx_psh();
               _event.prefix(_domain.SYMBOL);
               _domarea.prefix(_domain.SYMBOL);
               _report.prefix(_domain.SYMBOL);
               _leaves:=_event.first()+_domarea.first()+_report.first();
               {? _leaves
               || exec('add_domain','#b_desktop',_domain);
                  exec('add_event','#b_desktop',_domain.SYMBOL,_event);
                  exec('add_area','#b_desktop',_domain.SYMBOL,_domarea,_web_sesid);
                  exec('add_report','#b_desktop',_domain.SYMBOL,_report)
               ?};
               OBJ_P.TMP.cntx_pop();
               _domain.next()
            !};
            _fref:=#OBJ_P.TMP.ref()
         ?}
      ?};
      _app_lst.next()
   !}
?};
_domain.cntx_pop();
_domain.ndx_drop(_ndx_dom);
_fref


\add_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: Dodanie rekordu opisujacego firme
::   WE: _a - opis grupy GRP_CAPT
::       _b - identyfikator grupy GRP_IDEN
::       _c - identyfikator aplikacji APP_IDEN
::  OLD: \add_grp/#pulpit.fml
::----------------------------------------------------------------------------------------------------------------------
OBJ_P.TMP.blank();
OBJ_P.TMP.PARENT:=0;
:: Nazwa grupy (firmy?)
OBJ_P.TMP.TITLE:=_a;
:: Symbol grupy (firmy?)
OBJ_P.TMP.GR_NAME:=_b;
OBJ_P.TMP.APP_NAME:=_c;
OBJ_P.TMP.ICON:='';
:: Akronim formuły współdzielonej dla przycisku w kontrolce TO-DO
OBJ_P.TMP.INIT_FML:='TODO';
:: Identyfikator rekordu z formułą dla obsługi przycisku w kontrolce TO-DO
OBJ_P.TMP.UID_EXE:='';
OBJ_P.TMP.UID_MOD:='';
OBJ_P.TMP.CMD:=1;
:: OBJ_P.TMP.M_PTH:='';
OBJ_P.TMP.HELP:='';
OBJ_P.TMP.BIG_ICON:='';
_url:=exec('firma__url','#firma',_c);
OBJ_P.TMP.URL:=_url+'/webterm/app/'+_c;
:: OBJ_P.TMP.DELAY:=0;
OBJ_P.TMP.add()


\add_domain
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: Dodanie dziedziny produktowej
::   WE: _a - tabela tymczasowa zawierajaca dziedziny
::  OLD: \add_domain/#pulpit.fml
::----------------------------------------------------------------------------------------------------------------------
_icon:="_ico:=spli_str(_a,':'); {? cli_ver='jterm' || pth_dir(_ico[1])+OBJ_P.PTH+_a || _a ?}";

OBJ_P.TMP.PARENT:=#OBJ_P.TMP.ref();
:: Nazwa dziedziny
OBJ_P.TMP.TITLE:=_a.NAME;
:: Ikony dziedziny
OBJ_P.TMP.ICON:=exec('get_icon','#b_desktop',_a.ICON);
OBJ_P.TMP.BIG_ICON:=gsub(exec('get_icon','#b_desktop',_a.ICON),'b16.','b32.');
:: Kolor dziedziny
OBJ_P.TMP.COLOR:=_a.COLOR;
:: Podpowiedz dla dziedziny
OBJ_P.TMP.HELP:=_a.AH;
OBJ_P.TMP.INIT_FML:='';
{? exec('interm','#system')
|| OBJ_P.TMP.URL:=''
?};
:: dla dziedziny UID_EXE jest identyfkatorem wspomagającym obsługę skrótów w webTermie
OBJ_P.TMP.UID_EXE:=_a.SYMBOL;
OBJ_P.TMP.UID_MOD:='';
OBJ_P.TMP.CMD:=0;
OBJ_P.TMP.add()


\add_event
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: Dodanie zdarzen startowych dla dziedziny
::   WE: _a - symbol dziedziny
:        _b -  alias tabeli zdarzen
::  OLD: \add_event/#pulpit.fml
::----------------------------------------------------------------------------------------------------------------------

OBJ_P.TMP.cntx_psh();
OBJ_P.TMP.PARENT:=#OBJ_P.TMP.ref();
OBJ_P.TMP.TITLE:='Zdarzenia'@;
OBJ_P.TMP.TYPE:='event';
OBJ_P.TMP.add();

_b.prefix(_a);
{? _b.first()
|| {!
   |?
      OBJ_P.TMP.cntx_psh();
      OBJ_P.TMP.PARENT:=#OBJ_P.TMP.ref();
::    Nazwa zdarzenia
      OBJ_P.TMP.TITLE:=_b.NAME;
::    Ikony zdarzenia
      OBJ_P.TMP.ICON:=exec('get_icon','#b_desktop',_b.ICON);
      OBJ_P.TMP.BIG_ICON:=gsub(exec('get_icon','#b_desktop',_b.ICON),'b16.','w32.');
::    Formuła do uruchamiania zdarzeń
      OBJ_P.TMP.INIT_FML:='EVENT';
::    Identyfikator rekordu z formułą startową konkretnego zdarzenia
      OBJ_P.TMP.UID_EXE:=_b.UID_EXE;
      OBJ_P.TMP.UID_MOD:=_b.UID_MOD;
::    Podpowiedz dla zdarzenia
      OBJ_P.TMP.HELP:=_b.AH;
::    Pomoc kontekstowa dla zdarzenia
      OBJ_P.TMP.DOKUWIKI:=_b.DOKUWIKI;
::    Typ elementu: event = czynność udaje zdarzenie startowe
      OBJ_P.TMP.TYPE:='event';
      OBJ_P.TMP.CMD:=7;
      OBJ_P.TMP.add();
      OBJ_P.TMP.cntx_pop();
      _b.next()
   !}
?};
OBJ_P.TMP.cntx_pop()


\add_report
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: Dodanie raportów dla dziedziny
::   WE: _a - symbol dziedziny
::       _b -  alias tabeli raportów
::  OLD: \add_report/#pulpit.fml
::----------------------------------------------------------------------------------------------------------------------
OBJ_P.TMP.cntx_psh();
OBJ_P.TMP.PARENT:=#OBJ_P.TMP.ref();
OBJ_P.TMP.TITLE:='Raporty'@;
OBJ_P.TMP.TYPE:='report';
OBJ_P.TMP.add();

_b.prefix(_a);
{? _b.first()
|| {!
   |?
      OBJ_P.TMP.cntx_psh();
      OBJ_P.TMP.PARENT:=#OBJ_P.TMP.ref();
::    Nazwa raportu
      OBJ_P.TMP.TITLE:=_b.NAME;
::    Ikony raportu
      OBJ_P.TMP.ICON:=exec('get_icon','#b_desktop',_b.ICON);
      OBJ_P.TMP.BIG_ICON:=gsub(exec('get_icon','#b_desktop',_b.ICON),'b16.','w32.');
::    Formuła do uruchamiania raportów
      OBJ_P.TMP.INIT_FML:='REPORT';
      OBJ_P.TMP.UID_EXE:=_b.UID_EXE;
      OBJ_P.TMP.URL:=_b.URL;
      OBJ_P.TMP.DSK_URL:='';

      OBJ_P.TMP.UID_MOD:='';
::    Podpowiedz dla raportu
      OBJ_P.TMP.HELP:=_b.AH;
::    Pomoc kontekstowa dla raportu
      OBJ_P.TMP.DOKUWIKI:=_b.DOKUWIKI;
::    Typ elementu: report = czynność raportujaca
      OBJ_P.TMP.TYPE:='report';
      OBJ_P.TMP.CMD:=7;
      {? _b.B_CAN='Q'
      || OBJ_P.TMP.CMD:=2+((1+2)*1000);
         OBJ_P.TMP.INIT_FML:='TOKEN_QLIK'
      ?};
      OBJ_P.TMP.add();
      {? _b.B_CAN='Q'
      ||
         _split:=spli_str(_b.memo_txt(,1),'\n');
         {! _i:=1..obj_len(_split)
         |! _url:=spli_str(_split[_i],'|');
            {? obj_len(_url)=2
            || OBJ_P.TMP.cntx_psh();
               OBJ_P.TMP.PARENT:=#OBJ_P.TMP.ref();
               OBJ_P.TMP.INIT_FML:='TOKEN_QLIK';
               OBJ_P.TMP.TITLE:=_url[1];
               OBJ_P.TMP.DSK_URL:=_url[2];
               OBJ_P.TMP.TYPE:='';
               OBJ_P.TMP.CMD:=5;
               OBJ_P.TMP.add();
               OBJ_P.TMP.cntx_pop()
            ?};
            obj_del(_url)
         !};
         obj_del(_split)
      ?};
      OBJ_P.TMP.cntx_pop();
      _b.next()
   !}
?};
OBJ_P.TMP.cntx_pop()


\add_area
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: Dodanie obszaru roboczego
::   WE: _a - symbol dziedziny
::       _b - alias tabeli z obszarami w podziale na dziedziny
::       [_c] - STRING - identyfikator sesji webterm (dla optymalizacji)
::  OLD: \add_area/#pulpit.fml
::----------------------------------------------------------------------------------------------------------------------
OBJ_P.TMP.cntx_psh();
OBJ_P.TMP.PARENT:=#OBJ_P.TMP.ref();
OBJ_P.TMP.TITLE:='Obszary'@;
OBJ_P.TMP.TYPE:='area';
OBJ_P.TMP.add();

_web_sesid:='';
{? var_pres('_c')=type_of('')
|| _web_sesid:=_c
|| _web_sesid:=app_info('web_sesid')
?};

_b.prefix(_a);
{? _b.first()
|| {!
   |?
      OBJ_P.TMP.cntx_psh();
      OBJ_P.TMP.PARENT:=#OBJ_P.TMP.ref();
::    Nazwa obszru
      OBJ_P.TMP.TITLE:=_b.NAME;
::    Ikony obszaru
      OBJ_P.TMP.ICON:=exec('get_icon','#b_desktop',_b.ICON);
      OBJ_P.TMP.BIG_ICON:=gsub(exec('get_icon','#b_desktop',_b.ICON),'b16.','w32.');
::    Formuła do uruchamiania obszarów
      OBJ_P.TMP.INIT_FML:='AREA';
::    Identyfikator rekordu z formułą startową konkretnego obszaru
      OBJ_P.TMP.UID_EXE:=_b.UID_EXE;
      OBJ_P.TMP.UID_MOD:='';
::    Podpowiedz dla obszaru
      OBJ_P.TMP.HELP:=_b.AH;
::    Pomoc kontekstowa dla obszaru
      OBJ_P.TMP.DOKUWIKI:=_b.DOKUWIKI;
::    Typ elementu: area = obszar roboczy
      OBJ_P.TMP.TYPE:='area';
::      OBJ_P.TMP.CMD:=1;
      {? exec('interm','#system')
      || OBJ_P.TMP.URL:=''
      ?};
      OBJ_P.TMP.CMD:={? _web_sesid<>'' | exec('interm','#system') || 1 || 7 ?};
      OBJ_P.TMP.add();
      OBJ_P.TMP.cntx_pop();
      _b.next()
   !}
?};
OBJ_P.TMP.cntx_pop()


\get_icon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Przerabia ikonkę na ścieżkę
::   WE: _a - STRING - nazwa ikonki
::   WY: STRING - ścieżka do ikonki, lub jej nazwa jeżeli nie trzeba podawać ścieżki
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:=_a;
{? cli_ver='jterm' & _a*':'>0
|| _ico:=spli_str(_a,':');
   _result:=pth_dir(_ico[1])+OBJ_P.PTH+_a
?};
_result

:Sign Version 2.0 jowisz:1045 2023/08/10 08:47:02 76ce8bd70a9efa2b67bec8ef4b83c3834168871ba775940a08c2578412068601b1d88a5205cbf802f85d44c4d1360ab229f9cebc5f9a03fee6830c59de61c53d74f4f4035c28ce48c2dfaa46e70870416cb6cbb8da43c1793162dcf61691f01f91eb01eccface90a7d765f7a0b6a9822c1e561b6ecd31b49962eac4b2a4d8903
