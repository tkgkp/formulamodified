:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #b_lane.fml [17.00]
:: Utworzony: 04.07.2013
:: Autor: TMR
::======================================================================================================================
:: Zawartość: Formuły do obsługi tabeli B_LANE
::======================================================================================================================

\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Wyświetla tabelę B_LANE
::  TAG: <PUBLICZNA><WERTOWANIE><MODELER><PROCES><TORY>
::----------------------------------------------------------------------------------------------------------------------
B_LANE.cntx_psh();
B_LANE.prefix();
B_LANE.select();
B_LANE.cntx_pop()


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Funkcja dodająca wpis do tabeli B_LANE
::   WE: _a - B_ROLE.ref()
::       [_b] - [STRING]     - typ toru
::   WY:      [REFERENCE]    - wskazanie na dodany rekord (lub już istniejący)
::  TAG: <PUBLICZNA><ADD><MODELER><PROCES><TORY>
::----------------------------------------------------------------------------------------------------------------------
_b_role:=_a;
_typ:=exec('type_role','#b_lane');
{? var_pres('_b')=type_of('')
|| _typ:=_b
?};
_res:=null();
B_LANE.cntx_psh();
B_LANE.index('B_ROLE');
_firma:=exec('FindAndGet','#table',B_ROLE,_b_role,,"FIRMA",null());
B_LANE.prefix(_firma,_b_role,_typ);
{? B_LANE.first()
|| _res:=B_LANE.ref()
|| B_LANE.blank();
   B_LANE.B_ROLE:=_b_role;
   B_LANE.FIRMA:=_firma;
   _b_chain:=exec('add','#b_chain','B_LANE','Tor');
   {? _b_chain<>null()
   || _b_ele:=exec('add','#b_ele',_b_chain,B_LANE.B_ROLE().NAME);
      {? _b_ele<>null()
      || B_LANE.B_ELE:=_b_ele;
         B_LANE.TYPE:=_typ;
         {? B_LANE.add()
         || _res:=B_LANE.ref()
         ?}
      ?}
   ?}
?};
B_LANE.cntx_pop();
_res


\delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Kasuje podany rekord tabeli B_LANE (wykonywane w transakcji!!!)
::   WE: _a - B_LANE.ref()
::   WY: >0 -wyczyszczone,
::       <=0 -niewyczyszczone
::  TAG: <PUBLICZNA><DEL><MODELER><PROCES><TORY>
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
:: jeżeli transakcja została zerwana, to nie ma sensu przetwarzać formuły
{? do_state()=2 || return(-100) ?};

_ref:=_a;

_result:=0;
_can_continue:=1;

:: sprawdzam, czy to w tej formule będę zakładał transakcję, czy już jest założona
_mydo:=do_state()=0;
{? _mydo || do() ?};
B_LANE.cntx_psh(); B_LANE.clear();
B_ROLE.cntx_psh();

_role_name:=B_LANE.B_ROLE().NAME;
{? B_LANE.seek(_ref)
|| {? exec('clean','#b_lane',_ref)>0
   || {? B_LANE.del(,1)>0
      || _result:=1
      || undo();
         _result:=-3
      ?}
   || _result:=-2
   ?}
|| _result:=0
?};

:: Po usunięciu rekordu usuwam także B_ELE
{? _result>0
|| B_ELE.cntx_psh();
   B_ELE.index('CLASSSYM');
   B_ELE.prefix('B_LANE',_role_name);
   {? B_ELE.first()
   || {!
      |?
         _next:=0;
         _ref_nxt:=null();

         B_ELE.cntx_psh();
         {? B_ELE.next()
         || _ref_nxt:=B_ELE.ref()
         ?};
         B_ELE.cntx_pop();

         {? B_ELE.count()=0
         || _can_continue:=exec('delete','#b_ele',B_ELE.ref())
         ?};
         {? _ref_nxt<>null()
         || _next:=B_ELE.seek(_ref_nxt)
         ?};
         _next>0 & _can_continue>0
      !}
   ?};
   B_ELE.cntx_pop()
?};

{? _result<0
|| undo()
?};
B_ROLE.cntx_pop();
B_LANE.cntx_pop();
{? _mydo || end() ?};
_result


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Czyści powiązania do rekordu tabeli B_LANE
::   WE: _a - B_LANE.ref()
::   WY: >0  -wyczyszczone,
::       <=0 -niewyczyszczone
::  TAG: <PRYWATNA><CLEAN><MODELER><PROCES><TORY>
::----------------------------------------------------------------------------------------------------------------------
{? do_state()=2 || return(-100) ?};

_ref:=_a;

_result:=0;
_can_continue:=1;

_mydo:=do_state()=0;
{? _mydo || do() ?};
:: --- powiązania do ---



:: --- wszystkie powiazania usuniete? ---

{? _can_continue>0
|| _result:=1
|| undo()
?};

{? _mydo || end() ?};
_result


\fill_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Funkcja wypełnia tabelę B_LANE danymi
::  TAG: <PUBLICZNA><ADD><MODELER><PROCES><TORY>
::----------------------------------------------------------------------------------------------------------------------
B_ROLE.cntx_psh();
B_ROLE.index('UNIK');
B_ROLE.prefix();
{? B_ROLE.first()
|| {!
   |? exec('add','#b_lane',B_ROLE.ref());
      B_ROLE.next()
   !}
?};
B_ROLE.cntx_pop();
~~


\type_role
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Zwraca typ toru: powiazany z rolą
::   WY: STRING
::  TAG: <PUBLICZNA><MODELER><PROCES><TORY>
::----------------------------------------------------------------------------------------------------------------------
'Tor roli'


\type_normal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Zwraca typ toru: zwykły, nie powiązany
::   WY: STRING
::  TAG: <PUBLICZNA><MODELER><PROCES><TORY>
::----------------------------------------------------------------------------------------------------------------------
'Zwykły'


\get_lane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Zwraca tor powiązany z przekazanym elementem ogólnym (B_ELE)
::   WE: _a - B_ELE.ref()
::   WY: B_LANE.ref() lub null()
::  TAG: <PUBLICZNA><MODELER><PROCES><TORY>
::----------------------------------------------------------------------------------------------------------------------
_b_ele:=_a;

_result:=null();

B_LANE.cntx_psh();
B_LANE.index('B_ELE');
B_LANE.prefix(_b_ele);
{? B_LANE.first()
|| _result:=B_LANE.ref()
?};
B_LANE.cntx_pop();
_result


\dictionary
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Wyświetla słownik torów
::   WE: [_a] - STRING - typ zwracanego wyniku:
::                                              'ref' - B_LANE.ref()
::                                              'sql' - $B_LANE.ref()
::                                              'symbol' - B_LANE.B_ELE().SYMBOL
::                                              'uid_bele'  - B_ELE.uidref()
::       [_b] - STRING - typ toru, jeśli nie podany to domyślnie zwracany przez exec('type_role','#b_lane')
::       [_c] - FIRMA.ref()
::       [_d] - B_LANE.ref() - rekord na którym się ustawić
::   WY: B_LANE.ref lub STRING
::  TAG: <PUBLICZNA><MODELER><PROCES><TORY>
::----------------------------------------------------------------------------------------------------------------------
_res_type:='ref';
{? var_pres('_a')=type_of('')
|| _res_type:=_a
?};
_type:=exec('type_role','#b_lane');
{? var_pres('_b')=type_of('')
|| {? _b<>''
   || _type:=_b
   ?}
?};
_firma:=REF.FIRMA;
{? var_pres('_c')=type_of(null())
|| {? _c<>null()
   || _firma:=_c
   ?}
?};
_view:=null();
{? var_pres('_d')=type_of(B_LANE.ref())
|| _view:=_d
?};

{? _res_type='sql' | _res_type='name' | _res_type='uid'
|| _wyn:=''
|| _wyn:=null()
?};

B_LANE.cntx_psh();
B_ELE.cntx_psh();
B_LANE.index('TYP');
B_LANE.prefix(_firma);
_current:=0;
_pos:=0;
{? _view<>null()
|| _current:=B_LANE.seek(_view);
   {? _current>0
   || _pos:=10
   ?}
|| B_LANE.first()
?};
_win:=exec('wer_dict','#b_lane');
B_LANE.win_sel(_win);
{? B_LANE.select(,_current,_pos)
|| {? _res_type='sql'
   || _wyn:=$B_LANE.ref()
   |? _res_type='symbol'
   || _wyn:=B_LANE.B_ELE().SYMBOL
   |? _res_type='uid_bele'
   || _wyn:=B_LANE.B_ELE().uidref()
   || _wyn:=B_LANE.ref()
   ?}
?};
B_LANE.cntx_pop();
B_ELE.cntx_pop();
_wyn


\wer_dict
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [17.00]
:: OPIS: Tworzy okno słownika torów
::  TAG: <PUBLICZNA><MODELER><PROCES><TORY>
::----------------------------------------------------------------------------------------------------------------------
_wer:=B_LANE.mk_sel('Tory'@,'P',,'#win_b_lane',,,,,'U','T');
B_LANE.win_fld(_wer,,'B_ELE','SYMBOL',,20,,,'Symbol'@);
:B_LANE.win_fld(_wer,,'TYPE',,,10,,,'Typ'@);

B_LANE.win_act(_wer,,'Formuła','Wybierz'@@,,,"sel_exit()",,1,,,,'W');
B_LANE.win_act(_wer,,'Szukaj');
B_LANE.win_act(_wer,,'Kolejność');
_wer

:Sign Version 2.0 jowisz:1048 2023/06/23 14:13:35 00d07daf5c0b6f51346af39cf94b40d3197914e2eb804995f25d71c984779b84b5a25df3ccbd38284107401319f43decc3be029bdef1cf17bdaa7423da33c108e1383b971766c6b82892404a71d8c72891da5c0e1d9f224db766829c0746f0feaac1bb7ef12f0da468c1e98505fe08ade312e161d329a433dcdf9eb72855ed49
