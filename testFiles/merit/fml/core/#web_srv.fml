:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: web_srv.fml [17.00]
:: Utworzony: 2016.04.01
:: Autor: mario
::======================================================================================================================
:: Zawartość: zawiera formuły służace do obsługi aplikacji Pulpit w webTerm
::======================================================================================================================


\start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: Formuła startowa dla Pulpitu w webTermie
::----------------------------------------------------------------------------------------------------------------------
:: odtworzenie ustawień z cluster - założenie że mógł zmienić się cluster.cfg
:: exec('firmy_odtw_grp','#firma');
_app_lst:=exec('firmy_user_www','#firma');
{? _app_lst.first()
|| {? exec('upgrade','#web_srv') || exec('panel','#web_srv') ?}
|| web_msg('Brak uprawnień do firm.'@)
?};
web_title('%1, %2'[exec('nazwa','#system'),'Firma '@+REF.FIRMA().SYMBOL],'all');
~~


\read_left_menu_tree
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: Formuła zwracająca drzewko menu. Zakładamy, że pierwsza grupa jest bieżąca a tabela z drzewkiem to OBJ_P.TMP
::----------------------------------------------------------------------------------------------------------------------
OBJ_P.TMP.erase();
_wyn:=exec('fill_pulpit','#b_desktop');
{? _wyn>0
|| web_ctrl_set_tree(,,'',OBJ_P.TMP,,)
?}


\read_user_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: Formuła zwracająca zapisane dane o skrótach użytkownika.
::   Za pomocą funkcji web_request_get() pobierany jest obiekt z parametrami
::   wywołania przekazanymi z przeglądarki. Wywołanie musi zawierać pole dataId
::   z identyfikatorami zapianych danych oddzielonymi przecinkiem.
::----------------------------------------------------------------------------------------------------------------------
_params:=web_request_get();
_user:=app_info('web_user');

_ids:=spli_str(_params.dataId, ',');
_max:=obj_len(_ids);

{! _ind:=1.._max
|!
   DSKLNK.index('USERID');
   DSKLNK.prefix(_user,_ids[_ind],);
   {? DSKLNK.first
   || _value:=DSKLNK.memo_txt(0,1,'VALUE')
   || _value:=''
   ?};
   web_ctrl_set_obj(,,'',
      'dataId',_ids[_ind],
      'data', _value )
!}


\write_user_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: Formuła zapisująca dane o skrótach użytkownika.
::       Za pomocą funkcji web_request_get() pobierany jest obiekt z parametrami.
::   Parametr 'dataId' powinien zawierać identyfikator a parametr 'value' dane.
::----------------------------------------------------------------------------------------------------------------------
_params:=web_request_get();
_user:=app_info('web_user');
_id:=_params.dataId;

DSKLNK.index('USERID');
DSKLNK.prefix(_user,_id,);
{? DSKLNK.lock(1,1,1)
||
   {? DSKLNK.first || DSKLNK.del ?};
   DSKLNK.USER:=_user;
   DSKLNK.ID:=_id;
   {? DSKLNK.add()
   ||
      DSKLNK.memo_set(_params.value,'VALUE');
      DSKLNK.memo_put(,'VALUE')
   ?};
   DSKLNK.unlock()
?}


\todo_callback
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: Formuła ustawiająca liczniki zadań dla użytkownika. Wywoływana cyklicznie z interwałem ustawianym metodą
::       setTodoTimerInterval
::----------------------------------------------------------------------------------------------------------------------
OPERATOR.USER:=exec('user_ident_web','#users');

_app_lst:=exec('firmy_user_www','#firma');
{? ~_app_lst.first() || return(0) ?};
FIRMA.cntx_psh();
FIRMA.prefix();
{? _app_lst.first()
|| {!
   |?
      FIRMA.seek(_app_lst.REF);
      _sum:=exec('count_todo_group','#bi_todo',FIRMA.ref,,1);
      {? app_info('app_ident')=_app_lst.APP_IDEN
      || web_ctrl_call('!desktop',,'setTodoIntData',_app_lst.GRP_IDEN,_app_lst.APP_IDEN,'own_1',_sum.own_1);
         web_ctrl_call('!desktop',,'setTodoIntData',_app_lst.GRP_IDEN,_app_lst.APP_IDEN,'free_1',_sum.free_1);
         web_ctrl_call('!desktop',,'setTodoIntData',_app_lst.GRP_IDEN,_app_lst.APP_IDEN,'own_2',_sum.own_2);
         web_ctrl_call('!desktop',,'setTodoIntData',_app_lst.GRP_IDEN,_app_lst.APP_IDEN,'free_2',_sum.free_2);
         web_ctrl_call('!desktop',,'setTodoIntData',_app_lst.GRP_IDEN,_app_lst.APP_IDEN,'own_3',_sum.own_3);
         web_ctrl_call('!desktop',,'setTodoIntData',_app_lst.GRP_IDEN,_app_lst.APP_IDEN,'free_3',_sum.free_3);
         web_ctrl_call('!desktop',,'setTodoIntData',_app_lst.GRP_IDEN,_app_lst.APP_IDEN,'own_4',_sum.own_4);
         web_ctrl_call('!desktop',,'setTodoIntData',_app_lst.GRP_IDEN,_app_lst.APP_IDEN,'free_4',_sum.free_4)
      ?};
      web_ctrl_call('!desktop',,'setTodoIntData',_app_lst.GRP_IDEN,_app_lst.APP_IDEN,'own_0',_sum.own_0);
      web_ctrl_call('!desktop',,'setTodoIntData',_app_lst.GRP_IDEN,_app_lst.APP_IDEN,'free_0',_sum.free_0);
      obj_del(_sum);
      _app_lst.next()
   !}
?};
FIRMA.cntx_pop()


\write_user_blob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: Formuła zapisująca dane blob
::       Za pomocą funkcji web_request_get() pobierany jest obiekt z parametrami.
::       Parametr 'dataId' powinien zawierać identyfikator a parametr 'blobPth' ścieżkę do pliku.
::----------------------------------------------------------------------------------------------------------------------
_params:=web_ctrl_req_param();
_user:=app_info('web_user');
_id:=_params.dataId;
_file:=_params.blobPth;

DSKBLOB.index('USERID');
DSKBLOB.prefix(_user,_id,);
{? DSKBLOB.lock(1,1,1)
||
   {? DSKBLOB.first || DSKBLOB.del ?};
   {? _file<>''
   ||
      DSKBLOB.blank();
      DSKBLOB.USER:=_user;
      DSKBLOB.ID:=_id;
      {? DSKBLOB.add() || DSKBLOB.bl_put('FOTO',_file,0,,'userpicture.jpg') ?}
   ?};
   DSKBLOB.unlock()
?}


\get_user_blob_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: Formuła zapisująca dane blob
::       Za pomocą funkcji web_request_get() pobierany jest obiekt z parametrami.
::       Parametr 'dataId' powinien zawierać identyfikator
::----------------------------------------------------------------------------------------------------------------------
_params:=web_ctrl_req_param();
_user:=app_info('web_user');
_id:=_params.dataId;
DSKBLOB.index('USERID');
DSKBLOB.prefix(_user,_id);
{? DSKBLOB.first & SYSBLOB.seek(DSKBLOB.FOTO)
|| web_ctrl_set_obj('=',,'','o','w'+$(SYSBLOB.ref),'n',SYSBLOB.NAME,'bid',SYSBLOB.ID)
?}


\panel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS: Wywolanie kontrolek pulpitu
::----------------------------------------------------------------------------------------------------------------------
web_ctrl_init('!desktop',,'MCL.component.DesktopControl');

web_ctrl_call('!desktop',,'setCtrCallback','CTR_CALLBACK');
_HR_Por:={? +app_info('web_sesid')
         || exec('firma','#firma',exec('firma_symbol','#firma'));
            exec('get_par','#parametr',389,2)='T'
         || 0
         ?};

{? ~_HR_Por
|| web_ctrl_call('!desktop',,'addMenuItem','Zmień hasło'@,'PASSWORD')
?};

web_ctrl_call('!desktop',,'addInternalControl','UserInfo','MCL.dashboard.userinfo.UserInfoControl');
_obj:=exec('user_ident_desktop','#users');
web_ctrl_call('!desktop>UserInfo',,'setTexts',_obj.DANE,_obj.STAN);
web_ctrl_call('!desktop>UserInfo',,'setFmlButton',1,'ustawienia.png','Parametry pracy'@,'UserParam','','');
web_ctrl_call('!desktop>UserInfo',,'setWWWButton',2,'web_ikona.png','Macrologic SA','http://www.macrologic.pl');
web_ctrl_call('!desktop>UserInfo',,'setWWWButton',3,'dokumentacja.png','Pomoc'@,exec('get_adres','#help','proc:pulpit'));

_list_md:=exec('user_list_megad','#users',exec('operatorKod','#users'),'W');
web_ctrl_call('!desktop',,'addInternalControl','todo','MCL.dashboard.todo.TodoControl');

web_ctrl_call('!desktop>todo',,'addTodoItem','Zadania'@,'own_0','free_0','Przydzielone'@,'Wolne'@,'','Więcej'@ );
{? (_list_md-1)*'|'>0
||
   {? _list_md * 'Finanse'
   ||
      web_ctrl_call('!desktop>todo',,'addTodoSmallItem','Ewidencje finansowe'@,'own_1','free_1','21aaaa')
   ?};
   {? _list_md * 'Personel'
   ||
      web_ctrl_call('!desktop>todo',,'addTodoSmallItem','Personel'@,'own_2','free_2','a954a5')
   ?};
   {? _list_md * 'Logistyka i produkcja'
   ||
      web_ctrl_call('!desktop>todo',,'addTodoSmallItem','Logistyka i produkcja'@,'own_3','free_3','389848')
   ?};
   {? _list_md * 'Zarządzanie'
   ||
      web_ctrl_call('!desktop>todo',,'addTodoSmallItem','Zarządzanie'@,'own_4','free_4','f8982a')
   ?}
?};
web_ctrl_call('!desktop',,'setTodoSumKeys','own_0','free_0');
web_ctrl_call('!desktop',,'setTodoTimerInterval','30000');

web_ctrl_call('!desktop',,'addInternalControl','webview','MCL.dashboard.webview.WebViewControl');
web_ctrl_call('!desktop>webview',,'setTitle','Warto wiedzieć'@);
web_ctrl_call('!desktop>webview',,'setUrl','https://wartowiedziec.macrologic.pl/doc?currentuser='+app_info('web_user')+';'+user(7));

web_ctrl_call('!desktop',,'addInternalControl','arealist','MCL.dashboard.menuitemslist.MenuItemsListControl');
web_ctrl_call('!desktop>arealist',,'setType','area');
web_ctrl_call('!desktop',,'addInternalControl','eventlist','MCL.dashboard.menuitemslist.MenuItemsListControl');
web_ctrl_call('!desktop>eventlist',,'setType','event');
web_ctrl_call('!desktop',,'addInternalControl','reportlist','MCL.dashboard.menuitemslist.MenuItemsListControl');
web_ctrl_call('!desktop>reportlist',,'setType','report');
web_ctrl_call('!desktop',,'addInternalControl','usershortcuts','MCL.dashboard.usershortcuts.UserShortcutsControl');

web_ctrl_call('!desktop',,'showDesktop')


\ctr_callback
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DSYS [17.00]
:: OPIS:
::----------------------------------------------------------------------------------------------------------------------
_params:=web_ctrl_req_param();
{? _params.INIT_FML='UserParam'
||
::   web_msg('Parametry pracy użytkownika')
   exec('www_parses','zws')
|? _params.INIT_FML='REPORT'
|| exec('proc_exec','#b_desktop',_params.UID_EXE)
|? _params.INIT_FML='EVENT'
|| {? _params.ACTION_TYPE='modeler'
   || exec('proc_exec_mod','#b_desktop',_params.UID_MOD)
   || exec('proc_exec','#b_desktop',_params.UID_EXE)
   ?}
|? _params.INIT_FML='AREA'
||
   _app:=app_info('app_ident');
   _url:=exec('firma__url','#firma',_app)+'/webterm/app/'+_app;
   web_ctrl_call('!application',,'run',_url,'AREA',_params.UID_EXE,0,_params.COLOR)
|? _params.INIT_FML='PASSWORD'
||
   exec('web_passwd','users')
|| web_msg('ctr_callback: '+_params.INIT_FML)
?}


::======================================================================================================================
::
:: <Formuły związane z obsługą kontrolki webTerm-owej HTML.js>
::
::======================================================================================================================


\HTML_fml_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła służy zdefiniowaniu formuły, która może być później wywołana z kontrloki HTML.js.
::   WE: _a [STRING] - Treść formuły.
::   WY: Identyfikator formuły.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & _a<>''
|| _fml:=_a
|| return('')
?};

_ret:='';

_tcid:=app_info('web_tcid');
_sesid:=app_info('web_sesid');
_tabid:=app_info('web_tabid');

WT_HTML.index('FML');
WT_HTML.prefix(_tcid,_sesid,_tabid,_fml,);
{? WT_HTML.first()
|| _ret:=WT_HTML.IDPUT
|| WT_HTML.blank();
   WT_HTML.TCID:=_tcid;
   WT_HTML.SESID:=_sesid;
   WT_HTML.TABID:=_tabid;
   WT_HTML.FML:=_fml;
   {? WT_HTML.add()
   || _ret:=WT_HTML.IDPUT
   ?}
?};
_ret


\HTML_fml_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Kasowanie danych z "tymczasowej" tabeli formuł.
::   WE: _a [INTEGER] - Tryb pracy (czas wywołania):
::                1 - Start TOMCATA.
::                2 - Zakończenie sesji webTerma.
::   WY: Status operacji: 0/1.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _tryb:=_a
|| return(0)
?};

_tcid:=app_info('web_tcid');
_sesid:=app_info('web_sesid');

WT_HTML.index('FML');
{? _tryb=1
|| WT_HTML.prefix(_tcid,)
|| WT_HTML.prefix(_tcid,_sesid,)
?};
{? WT_HTML.first()
|| {! |? WT_HTML.del() !}
?};

1


\HTML_fml_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: "Most" dla kontrolki webTerm-owej HTML.js. Wykonuje formułę o przekazanym identyfikatorze.
::       Ze względów bezpieczeństwa sytuacje błędne (brak parametru, niepoprawny typ, wartość, ...) nie są
::       sygnalizowane.
::   WE: _a [STRING] - Identyfikator formuły do wykonania.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=web_ctrl_req_param();
{? obj_ntab(_par) & var_pres('formulaId',_par)=type_of('') & +_par.formulaId=31
|| _id:=_par.formulaId
|| return()
?};

exec('env_wt_core','#web_srv');

WT_HTML.index('IDPUT');
WT_HTML.prefix(app_info('web_tcid'),app_info('web_sesid'),app_info('web_tabid'),_id);
{? WT_HTML.first()
|| ($WT_HTML.FML)(_par)
?};
~~


\HTML_click_action
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Formuła zwraca stringową reprezentacje akcji jaka zostanie wykonana po kliknięciu w element html.
::       Domyślnie wykorzystywana jest klasa pomocnicza MCL.ControlUtils wywołująca formuły po stronie MacroBASEa.
::   WE: _a [STRING] - identyfikator formuły, którą chcemy wykonać
::       _b [STRING] - co zwracać:
::                     (A) akcję, którą można podpiąć na kliknięcie [domyślnie]
::                     (F) identyfikator formuły
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_fml:={? var_pres('_a')=type_of('') || _a || ''  ?};
 _co:={? var_pres('_b')=type_of('') || _b || 'A' ?};

_result:='';
{? +_fml
|| _formulaId:=exec('HTML_fml_add','#web_srv',_fml);
   _result:=_formulaId;
   {? _co='A'
   || _result:='MCL.ControlUtils.call_srv_fml(null, \'HTML_fml_run\', {formulaId: \''+_formulaId+'\'});'
   ?}
?};
_result


::======================================================================================================================
::
:: </Formuły związane z obsługą kontrolki webTerm-owej HTML.js>
::
::======================================================================================================================


\env_wt_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [17.00]
:: OPIS: Formuła odpowiedzialna za ustalenie środowiska pracy webTerm-a. Część dotycząca core.
::  OLD: \env_wt_core/#pulpit.fml
::----------------------------------------------------------------------------------------------------------------------
exec('maski','#b_proman');
exec('firma','#firma',exec('firma_symbol','#firma'));
USERS.index('USR_AKOD'); USERS.prefix();
_kod:=app_info('app_user');
OPERATOR.USER:={? USERS.find_key('T',_kod,) & USERS.AKT='T' || USERS.ref() || null() ?};
OPERATOR.USR_KOD:=_kod;
__develop:=exec('is_develop','#var');
ST.MSG:='';
ST.T:='';
BPMN.BLK_USER:='';
BPMN.BLK_TERM:='';
BPMN.MAX_EL:=#exec('get_par','#parametr',503,1);
BPMN.MAX_INS:=#exec('get_par','#parametr',504);
exec('bistat_status','#bi_stat');
REF.MOBILE:='';
1


\upgrade
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Kontrola aktualizacji systemu
::----------------------------------------------------------------------------------------------------------------------
OPERATOR.USER:=exec('user_ident_web','#users');
:: Kontrola aktualizacji systemu
USERS.cntx_psh();
USERS.index('USR_AKOD'); USERS.prefix('T',app_info('web_user'),);
{? USERS.first() || _super:=(USERS.SUPER='T') || _super:=0 ?};
USERS.cntx_pop();

exec('__UPG','#object');
_upgrade:=1;
REF.FIRMA:=exec('firma_ref','#firma',app_info('app_ident'));
_task:=exec('chk_role','#b__box',OPERATOR.USER,'ZWS_UPG_TASK');
{? _super>0 & ~exec('ctrlStruct','#upgrade')
||
:: Aktualizacja zadań potransferowych
   exec('refresh','#upgrade')
?};
_noreal:=exec('noReal','#upgrade');
_autopar:=exec('get_par','#parametr',11);
_czy_upgr:=0;

{? (_ctrl:=__UPG.ctrl_run())<>0 | _noreal
|| _kodus:=__UPG.who_run();
   {? _kodus=''
   || _kus:='\n'
   || _kus:='Prawdopodobnie została ona uruchomiona podczas innej rejestracji w systemie użytkownika: %1.\n\n'@[_kodus]
   ?};
   {? _super<=0 & ~_task
   || {? _kodus=''
      || _kus:='\n'
      || _kus:='Aktualizacja uruchomiona przez użytkownika: %1.\n\n'@[_kodus]
      ?};
      {? _ctrl<>0
      || web_msg('Uruchomiono aktualizację zadań potransferowych.\n'
                  '%1'
                  'Uruchomienie systemu niemożliwe.'@[_kus])
      || web_msg('System wymaga uruchomienia aktualizacji zadań potransferowych.\n\n'
                  'Uwaga. Nie masz uprawnień do wykonywania aktualizacji zadań potransferowych.\n'
                  'Uruchomienie systemu niemożliwe.'@)
      ?};
      return(0)
   |? ~_task
   || {? _ctrl>0
      || web_msg('Uruchomiono aktualizację zadań potransferowych.\n'
                  '%1'
                  'Uwaga. Nie masz uprawnień do wykonywania aktualizacji zadań potransferowych.\n\n'
                  'Uwaga. Aktualizacja jest wymagana - zablokowano dostęp do systemu zwykłym użytkownikom.'@[_kus])
      |? _ctrl<0
      || web_msg('Oczekiwanie na aktualizację zadań potransferowych w innych firmach.\n'
                  '%1'
                  'Uwaga. Nie masz uprawnień do wykonywania aktualizacji zadań potransferowych.\n\n'
                  'Uwaga. Aktualizacja jest wymagana - zablokowano dostęp do systemu zwykłym użytkownikom.'@[_kus])
      |? _autopar='N' | _noreal>=2
      || web_msg('System wymaga uruchomienia aktualizacji zadań potransferowych.\n\n'
                  'Uwaga. Nie masz uprawnień do wykonywania aktualizacji zadań potransferowych.\n\n'
                  'Uwaga. Aktualizacja jest wymagana - zablokowano dostęp do systemu zwykłym użytkownikom.'@)
      ?};
      _upgrade:=0
   || {? ~_czy_upgr
      || {? _ctrl>0
         || web_msg('Uruchomiono aktualizację zadań potransferowych.\n'
                     '%1'
                     'Automatyczna aktualizacja nie zostanie uruchomiona.\n\n'
                     'Uwaga. Aktualizacja jest wymagana - zablokowano dostęp do systemu zwykłym użytkownikom.'@[_kus])
         |? _ctrl<0
         || web_msg('Oczekiwanie na aktualizację zadań potransferowych w innych firmach.\n'
                     '%1'
                     'Automatyczna aktualizacja nie zostanie uruchomiona.\n\n'
                     'Uwaga. Aktualizacja jest wymagana - zablokowano dostęp do systemu zwykłym użytkownikom.'@[_kus])
         |? _autopar='N' | _noreal>=2
         || web_msg('System wymaga uruchomienia aktualizacji zadań potransferowych.\n\n'
                     'Automatyczna aktualizacja nie zostanie uruchomiona.\n\n'
                     'Uwaga. Aktualizacja jest wymagana - zablokowano dostęp do systemu zwykłym użytkownikom.'@)
         ?}
      ?};
      _upgrade:=0
   ?}
?};
_upgrade:=_upgrade & _task & _autopar='T';
{? (_super>0 | _task) & _upgrade
||
:: Aktualizacja zadań potransferowych
   exec('run_upgrade','zws',1)
?};
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:13:35 7cba4c2ccda0b05d5c0ff3949ac78c6dc9cee2740d156e50bc8ea7a4ad6486b4fb4beefea377da49c9ec2bed16beb1d756b3eebdac61ef3cc7d4952ad70b5735f4324a7ed48e5f91d9eccaa6ce1c5dddd393871523f678259ce039b849353d18f01ad3e47186de0f408d3ed728080c30a6890fa9be74c20c2796f7029358b1e9
