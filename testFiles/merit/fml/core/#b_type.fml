:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #b_type.fml
:: Utworzony: 18.12.2014 [17.00]
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Obsługa typów portów (tabela B_TYPE)
::======================================================================================================================


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Funkcja dodająca wpis do tabeli B_TYPE
::   WE: _a - [STRING]     - typ danych
::       _b - [STRING]     - symbol typu
::   WY:      [REFERENCE]  - wskazanie na dodany rekord (lub już istniejący)
::----------------------------------------------------------------------------------------------------------------------
   _typ:={? var_pres('_a')=type_of('') ||   _a || return(null) ?};
_symbol:={? var_pres('_b')=type_of('') || ~-_b || return(null) ?};
_res:=null();
_ndx:=B_TYPE.ndx_tmp(,1,'SYMBOL',,);
B_TYPE.cntx_psh();
B_TYPE.index(_ndx);
B_TYPE.prefix(_symbol,);
{? B_TYPE.first()
|| _res:=B_TYPE.ref()
|| B_TYPE.TYPE:=_typ;
   B_TYPE.SYMBOL:=_symbol;
   {? B_TYPE.add()
   || _res:=B_TYPE.ref()
   ?}
?};
B_TYPE.ndx_drop(_ndx);
B_TYPE.cntx_pop();
_res


\join_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Zwraca tabelę tymczasową typów złączeniowych
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,'ACR','STRING[9]','Akronim');
{! _licznik:=1.. tab_num()
|!
   _tab_acr:=tab_acr(_licznik);
   {? tab_real(_licznik) &
      _tab_acr<>'MEMO' &
      _tab_acr<>'SYSBLOB' &
      _tab_acr<>'SYSLOG' &
      _tab_acr<>'SYSMEMO' &
      _tab_acr<>'SYSSALRT' &
      _tab_acr<>'SYSSULOG' &
      _tab_acr<>'BI_BLOB' &
      _tab_acr<>'BI_BLOP'
   ||
      _tab.ACR:='_'+_tab_acr;
      _tab.add()
   ?}
!};
_tab


\type_joined
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Identyfikator typu złączeniowego
::----------------------------------------------------------------------------------------------------------------------
'złączeniowy'


\type_simple
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Identyfikator typu prostego
::----------------------------------------------------------------------------------------------------------------------
'prosty'


\fill_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Funkcja wypełnia tabelę B_TYPE danymi
::   WE: [_a] - czy wyświetlać raport (domyślnie - 1), czy tylko zwrócić wynik działania (0)
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _display:=_a || _display:=1 ?};
{? _display>0
|| KOMM.init(,,'Uzupełnianie typów danych'@)
?};

:: 1. typy proste
exec('add','#b_type',exec('type_simple','#b_type'),'STRING');
exec('add','#b_type',exec('type_simple','#b_type'),'DATE');
exec('add','#b_type',exec('type_simple','#b_type'),'TIME');
exec('add','#b_type',exec('type_simple','#b_type'),'NUMBER');
exec('add','#b_type',exec('type_simple','#b_type'),'VOID');
exec('add','#b_type',exec('type_simple','#b_type'),'MEMO');
exec('add','#b_type',exec('type_simple','#b_type'),'BLOB');

:: 2. typy złączeniowe
:: 2.1. załadowanie do tabeli tymczasowej typów złączeniowych
_tab:=exec('join_tab','#b_type');
:: 2.2. dodawanie typów do tabeli B_TYPE
{? _tab.first()
|| {!
   |? echo('Trwa uzupełnianie typów danych — dołączanie'@,_tab.ACR);
      exec('add','#b_type',exec('type_joined','#b_type'),_tab.ACR);
      _tab.next()
   !}
?};
:: 2.3. usuwanie nieaktualnych typów z tabeli B_TYPE
B_TYPE.index('TYP');
B_TYPE.prefix(exec('type_joined','#b_type'));
{? B_TYPE.first()
|| {!
   |? echo('Trwa uzupełnianie typów danych — usuwanie'@,B_TYPE.SYMBOL);
      _tab.prefix(B_TYPE.SYMBOL,);
      {? ~_tab.first()
      || {? exec('delete','#b_type',B_TYPE.ref())<=0
         ||
::          Można zbadać szczegółowo wynik delete, aby uszczegółowić komunikat:
            KOMM.add('Nieudane usunięcie typu danych: %1'@[B_TYPE.SYMBOL],'xwin16.png:3')
         ?}
      ?};
      B_TYPE.next()
   !}
?};

echo();
{? _display>0
|| KOMM.select()
?};
~~


\delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Kasuje podany rekord tabeli B_TYPE (wykonywane w transakcji!!!)
::   WE: _a - B_TYPE.ref()
::   WY: >0 -wyczyszczone,
::      <=0 -niewyczyszczone
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
:: jeżeli transakcja została zerwana, to nie ma sensu przetwarzać formuły
{? do_state()=2 || return(-100) ?};
_result:=0;
_ref:=_a;
:: sprawdzam, czy to w tej formule będę zakładał transakcję, czy już jest założona
_mydo:=do_state()=0;
{? _mydo || do() ?};
B_TYPE.cntx_psh(); B_TYPE.clear();
{? B_TYPE.seek(_ref)
|| {? exec('clean','#b_type',_ref)>0
   || {? _msg:=no_msg(1);
         _del:=B_TYPE.del(,1);
         no_msg(_msg);
         _del>0
      || _result:=1
      || undo();
         _result:=-3
      ?}
   || _result:=-2
   ?}
|| _result:=0
?};
B_TYPE.cntx_pop();
{? _result<0
|| undo()
?};

{? _mydo || end() ?};
_result


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Czyści powiązania do rekordu tabeli B_TYPE
::   WE: _a - B_TYPE.ref()
::   WY: >0 -wyczyszczone,
::      <=0 -niewyczyszczone
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::----------------------------------------------------------------------------------------------------------------------
{? do_state()=2 || return(-100) ?};

_ref:=_a;

_result:=1;
_can_continue:=1;

_mydo:=do_state()=0;
{? _mydo || do() ?};
:: --- powiązania do ---

:: 1. Porty
B_PORT.cntx_psh();
B_PORT.index('TYP');
B_PORT.prefix(_ref);
{? B_PORT.first()
|| {!
   |? _can_continue:=exec('delete','#b_port',B_PORT.ref());
      B_PORT.first() & _can_continue>0
   !}
?};

B_PORT.cntx_pop();

{? _can_continue>0
|| _rseult:=1
|| undo()
?};

:: --- wszystkie powiazania usuniete? ---
{? _mydo || end()?};
_result


\type2num
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Zwraca numer typu dla podanej nazwy typu
::   WE: _a [STRING] - nazwa typu
::   WY: [NUMBER] - numer typu
::----------------------------------------------------------------------------------------------------------------------
{? _a='STRING' || 2
|? _a='NUMBER' || 1
|? _a='DATE'   || 4
|? _a='TIME'   || 5
|? _a='MEMO'   || 36
|? _a='BLOB'   || 33
|? _a='VOID'   || 0
|? 1+_a='_'    || 7
               || 0
?}


\num2type
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Zwraca nazwę typu dla podanego numeru typu
::   WE: _a [NUMBER] - numer typu
::   WY: [STRING] - nazwa typu
::----------------------------------------------------------------------------------------------------------------------
{? _a=2  || 'STRING'
|? _a=1  || 'NUMBER'
|? _a=4  || 'DATE'
|? _a=5  || 'TIME'
|? _a=36 || 'MEMO'
|? _a=33 || 'BLOB'
|? _a=0  || 'VOID'
|? _a=7  || 'złączeniowy'
         || 'nieokreślony'
?}

:Sign Version 2.0 jowisz:1028 2019/06/07 15:58:46 6dc2a7552a6275bfa599dfc8f1d5490214146736f3da3c2418624f15edce5daf2b57fc867849c4d7a4cb0661380ecdff8bd88cb8d4109817bedc364f9f2eeea47ffb7cea8b032f65d25010732775839f3aea4e13d01f822326537a32a5337d9e9aa1ead3d6e9be922d34feb2d6701c6e528157411efb066cd8536e6406e010f0
