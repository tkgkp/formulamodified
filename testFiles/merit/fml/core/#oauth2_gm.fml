:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #oauth2_gm.fml [22.26]
:: Utworzony: 10.01.2022
:: Autor: TS
::======================================================================================================================
:: Zawartość: - OAuth2 w obsłudze poczty elektronicznej - Gmail
::======================================================================================================================


\auth_uri
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Uri autoryzacyjny
::----------------------------------------------------------------------------------------------------------------------
'https://accounts.google.com/o/oauth2/auth'


\token_uri
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Uri obsługujący token
::----------------------------------------------------------------------------------------------------------------------
'https://oauth2.googleapis.com/token'


\client_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Client_id
::----------------------------------------------------------------------------------------------------------------------
exec('get','#params',700036)


\client_secret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Client_secret
::----------------------------------------------------------------------------------------------------------------------
exec('get','#params',700037)


\scope
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Zakres autoryzacji
::----------------------------------------------------------------------------------------------------------------------
'https://mail.google.com/'


\is_verbose
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Czy włączone jest logowanie systemowe podczas komunikacji z serwisem OAuth
::----------------------------------------------------------------------------------------------------------------------
1


\oauth_code
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Zwraca kod autoryzacyjny dla aktywnej konfiguracji (albo pusty tekst w przypadku błędu)
::       Wyświetlane jest okno dialogowe w przeglądarce, w przypadku pozytywnej autoryzacji kod autoryzacyjny
::       odsyłany jest na adres zwrotny
::   WE: _a - obj_new - obiekt sniffera
::       _b - INTEGER - port
::       _b - STRING - kontekst dla sniffera
::       _c - STRING - adres przekierowania
::   WY: kod autoryzacyjny / ''
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_port:=_b;
_context:=_c;
_redirect_uri:=_d;

_client_id:=exec('client_id','#oauth2_gm');
_client_secret:=exec('client_secret','#oauth2_gm');
_auth_uri:=exec('auth_uri','#oauth2_gm');
_scope:=exec('scope','#oauth2_gm');

_result:='';

{? _client_id=''
|| FUN.info('Brak danych konfiguracyjnych Google w parametrach programu.'@);
   return(_result)
?};

_request:='';
_request+='?client_id=%1'[_client_id];
_request+='&redirect_uri=%1'[_redirect_uri];
_request+='&scope=%1'[_scope];
_request+='&access_type=%1'['offline'];
_request+='&response_type=code';

:: Obecnie zawsze w trybie przeglądarki wbudowanej
{? 1
||
:: Uruchomienie nasłuchu
   _obj.start(_port,_context);

:: Uruchomienie przeglądarki
   _win_acr:=SYSLOG.mk_ctr('','#ctrl_browser');
   SYSLOG.win_ctr(_win_acr);
   SYSLOG.win_cctr(_win_acr,'ctr_id','@webframe');
   _address:=_auth_uri+_request;
   params_set('request',_address);
:: Włączenie programu przechwytującego wywołanie zwrotne
   SYSLOG.control(,,"ctr_set(,'ctr_id','navigate',params_get().request)");

:: Odczyt wywołania zwrotnego
   _res:=_obj.get_result();

   {? _res<>''
   ||
::    Wydłubanie kodu
      _res:=spli_str(_res,'?')[2];
      _tab:=spli_str(_res,'&');
      {! _it:=1.. obj_len(_tab)
      |!
         {? 5+_tab[_it]='code='
         || _result:=gsub(_tab[_it],'code=','')
         ?}
      !}
   ?};
   _obj.stop();
   ~~
||
:: Włączenie programu przechwytującego wywołanie zwrotne
   exec('browser_launch','#help',_auth_uri+_request);
:: Oczekiwanie na wywołanie zwrotne {! |? !}
   ~~
?};
_result


\oauth_token
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [22.26]
:: OPIS: Zwraca JSON z tokenem (i ew. tokenem odświeżającym) dla aktywnej konfiguracji
::       (albo JSON ze szczegółami błędu)
::   WE: [_a] - STRING - kod autoryzacyjny
::       [_b] - STRING - token odświeżający
::       [_c] - STRING - adres przekierowania
::   WY: obj_new('JSON','OK')
::----------------------------------------------------------------------------------------------------------------------
_client_id:=exec('client_id','#oauth2_gm');
_client_secret:=exec('client_secret','#oauth2_gm');
_token_uri:=exec('token_uri','#oauth2_gm');
_scope:=exec('scope','#oauth2_gm');

_result:=obj_new('JSON','OK');
_result.JSON:=''; _result.OK:=0;

{? _client_id=''
|| _result.JSON:='{"error":"Brak danych konfiguracyjnych Google w parametrach programu."}';
   return(_result)
?};

:: może być tylko jeden parametr
_code:={? var_pres('_a')=type_of('') || _a || '' ?};
_refresh_token:={? var_pres('_b')=type_of('') || _b || '' ?};

_redirect_uri:={? var_pres('_c')=type_of('') || _c || '' ?};

_inet:=inet_get(_token_uri);
{? type_of(_inet)>100
||
   _inet.append_header('Content-Type: application/x-www-form-urlencoded');

   {? exec('is_verbose','#oauth2_gm') || _inet.set_verbose('#oauth_gm.log') ?};

   _request:='';
   _request+='client_id=%1'[_inet.url_encode(_client_id)];
   _request+='&client_secret=%1'[_inet.url_encode(_client_secret)];
   {? _redirect_uri<>''
   || _request+='&redirect_uri=%1'[_inet.url_encode(_redirect_uri)]
   ?};
   _request+='&scope=%1'[_inet.url_encode(_scope)];
   _request+='&grant_type=%1'[_inet.url_encode({? _code<>'' || 'authorization_code' || 'refresh_token' ?})];

   {? _code<>'' || _request+='&code=%1'[_inet.url_encode(_code)] ?};
   _request+='&access_type=%1'['offline'];
   {? _refresh_token<>'' || _request+='&refresh_token=%1'[_inet.url_encode(_refresh_token)] ?};

   _utc_start:=utc_get();
   _status:=_inet.http_post(,_request);
   _utc_stop:=utc_get();

:: Zapis do rejestru zdarzeń - wykonywany obligatoryjnie
   _mwac_log_ref:=exec('mwac_log','#mwac',
      'OAUTH',
      _inet.get_url(),
      'POST',
      _inet.get_status(),
      _utc_start,
      _utc_stop,
      _request,
      _inet.get_data(),
      _inet.get_header(1),
      _inet.get_header(0)
   );
   exec('mwac_log_app','#mwac',_mwac_log_ref,'|OAUTH|GOOGLE|','');

   {? _status=200
   || _result.JSON:=_inet.get_data();
      _result.OK:=1
   || _result.JSON:=_inet.get_data();
      _result.OK:=0
   ?}
?};
_result

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:09 42b68ffd422eb285a9c699625558c97ba259da29bacc314342c4d956a879f8d6ed62c912fbb419813d207f4503011b4f7aecc8dc78faf6271251b7812a58050366794c193d602bc6f909187b21e676e646c329ddd414405ec6fcdb0eef0cbe310eb10546ab9e3c417754554a386f86b470877fd5a32bc21d5b047e2bfe4105a9
