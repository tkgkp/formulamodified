:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: #message.fml [17.00]
:: Utworzony: 17.12.2014
:: Autor: AK
::======================================================================================================================
:: Zawartość: Uniwersalne messages systemu, communiq itp.
::======================================================================================================================


\fun_decl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2008]
:: OPIS: Definicja klasy i powołanie obiektu FUN do skrótowych wywołań funkcji
::  OLD: \fun_decl/skid.fml
::       metody klasy:
::        ask(_a,[_b],[_c],[_d],[_e]) - wywołanie choice w zamian za ask-a,
::                        _a  - STRING    - treść pytania
::                       [_b] - STRING    - opcjonalna zmiana ikony wyświetlanej w oknie (przekazujemy string ikony, np. 'ASK')
::                       [_c] - STRING    - opcjonalnie doklejony tytuł okna (jeżeli poprzedzony '@' to zastępuje tytuł)
::                       [_d] - STRING    - akcje grupowe - opcjonalny identyfikator, dzięki któremu dialog się wyświetli raz
::                                                          a każde kolejne wywołanie zwróci zapamiętaną wartość
::                       [_e] - obj_new   - akcje grupowe - obiekt z polem .group_obj który będzie trzymał zapamiętane wartości
::                                                          domyślnie KOMM
::        emsg(_a,[_b],[_c],[_d]) - wywołuje choice w zamian za msg, ikona EXCLAM
::                        _a - STRING - treść komunikatu
::                       [_b] - STRING opcjonalnie doklejony tytuł okna (jeżeli poprzedzony '@' to zastępuje tytuł)
::                       [_c] - STRING    - akcje grupowe - opcjonalny identyfikator, dzięki któremu dialog się wyświetli raz
::                                                          a każde kolejne wywołanie zwróci zapamiętaną wartość
::                       [_d] - obj_new   - akcje grupowe - obiekt z polem .group_obj który będzie trzymał zapamiętane wartości
::                                                          domyślnie KOMM
::        info(_a,[_b],[_c],[_d]) - wywołuje choice w zamian za msg, ikona INFO
::                        _a  - STRING treść komunikatu
::                       [_b] - STRING - opcjonalnie doklejony tytuł okna (jeżeli poprzedzony '@' to zastępuje tytuł)
::                       [_c] - STRING    - akcje grupowe - opcjonalny identyfikator, dzięki któremu dialog się wyświetli raz
::                                                          a każde kolejne wywołanie zwróci zapamiętaną wartość
::                       [_d] - obj_new   - akcje grupowe - obiekt z polem .group_obj który będzie trzymał zapamiętane wartości
::                                                          domyślnie KOMM
::        error(_a,[_b],[_c],[_d]) - wywołuje choice w zamian za msg, ikona ERROR
::                         _a  - STRING treść komunikatu
::                        [_b] - STRING opcjonalnie doklejony tytuł okna (jeżeli poprzedzony '@' to zastępuje tytuł)
::                        [_c] - STRING    - akcje grupowe - opcjonalny identyfikator, dzięki któremu dialog się wyświetli raz
::                                                           a każde kolejne wywołanie zwróci zapamiętaną wartość
::                        [_d] - obj_new   - akcje grupowe - obiekt z polem .group_obj który będzie trzymał zapamiętane wartości
::                                                           domyślnie KOMM
::        grp_clear(_a,[_b]) - zapomina zapamiętane informacje o tym że dialog już był wyświetlony
::                         _a - STRING    - akcje grupowe - identyfikator zapamiętanych wartości
::                        [_b] - obj_new   - akcje grupowe - obiekt z polem .group_obj który trzyma zapamiętane wartości
::                                                         domyślnie KOMM
::        grp_auto()         - zwraca informację czy ostatnio zawołany dialog używał zapamiętanej wartości, czy faktycznie się
::                             wyświetlił na ekranie: 0 - wyświetlił się, 1 - zwrócił automatycznie zapamiętaną wartość
::
::        choice([_a],[_b],[_c.._f],[_g],[_h],[_i],[_j]) - wywołuje choice wraz z przekazanymi przyciskami, ikona ASK
::                                 _a       - STRING   - komunikat,
::                                 [_b]     - INTEGER  - numer wyróżnionego przycisku - domyślnie ostatni 'Anuluj'
::                                 [_c.._f] - STRING   - możliwe 4 przyciski do przekazania
::                                 [_g]     - STRING   - opcjonalna nazwa dla przycisku 'Anuluj'
::                                 [_h]     - STRING   - opcjonalnie doklejony tytuł okna (jeżeli poprzedzony '@' to zastępuje tytuł)
::                                 [_i]     - STRING   - akcje grupowe - opcjonalny identyfikator, dzięki któremu ask się wyświetli raz
::                                                       a każde kolejne wywołanie zwróci zapamiętaną wartość
::                                 [_j]     - obj_new  - akcje grupowe - obiekt z polem .group_obj który będzie trzymał zapamiętane wartości
::                                                       domyślnie KOMM
::
::                                 zawsze ostatnim przyciskiem będzie 'Anuluj'
::                                 funkcja zwraca 0 dla ESC i przycisku 'Anuluj' bądź numery przycisków przekazanych
::                                 do choice
::        wdrerror(_a,[_b]) - .error, ale wyświetlany tylko dla 'superużytkownika'

::
::       Metody prg_* służą do obsługi paska postępu wraz z szacowanym czasem ukończenia zadania
::                     oraz możliwością przerwania wykonywania zadania
::        prg_start(_a,[_b],[_c],[_d],[_e])
::                WE: _a - rozmiar przetwarzany [INTEGER]
::                    _b - opis (zamiast standardowego) [STRING lub RULE]
::                    _c - opóźnienie prezentacji czasu w sekundach - domyślnie 30 [INTEGER]
::                    _d - krok odświeżania okna w procentach - domyślnie 1, 0 - co każdy obrót [INTEGER]
::                    _e - ukrycie przycisku przerwania [INTEGER]
::                WY: 1/0 - czy powołanie progressa się powiodło
::        prg_next([_a],[_b]) - prezentacja progressa (kolejne kroki)
::                WE: _a - krok paska postępu [REAL]
::                          0 - pozycja paska postępu pozostaje niezmieniona, krok nie będzie zaliczony
::                              (np. gdy tylko zmieniamy opis)
::                    _b - opis (zmiana dotychczasowego opisu na nowy) [STRING lub RULE]
::                         pusty string przywraca komunikat domyślny
::                WY: 1/0 (1 - poprawnie, 0 - przerwanie działania)
::        prg_stop() - zgaszenie progresa
::
:: ~OST: INFCOPY,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
:: Deklaracje klas wykorzystywanych przez obiekty klasy FUN_CLASS:
exec('JCQ_decl','#message');

{? var_pres('FUN_CLASS',@.CLASS)<0
|| obj_decl('FUN_CLASS',
            obj_fld('TYT',exec('nazwa','#system')),
            obj_fld('STANDARD',1),
            obj_fld('GRP_AUTO',0),
            obj_meth('ask'," {? var_pres('_a')<>type_of('') || _a:='' ?};
                             {? var_pres('_b')<>type_of('') || _b:='ASK' ?};
                             {? var_pres('_c')<>type_of('')
                             || _c:=.TYT
                             || {? 1+_c='@' || _c:=1-_c || _c:=.TYT+_c ?}
                             ?};
                             _grp_id:='';
                             {? var_pres('_d')=type_of('')
                             || _grp_id:=_d
                             ?};
                             _grp_id:=form(_grp_id);
                             _komm:=~~;
                             {? var_pres('_e')>100
                             || _komm:=_e
                             |? var_pres('KOMM')=type_of(@.CLASS.JCQ)
                             || _komm:=KOMM
                             ?};

                             _result:=~~;
                             .GRP_AUTO:=0;

                             {? _grp_id<>'' & var_pres('_komm')>100
                             ||
::                              Obsługa akcji grupowej - odczytanie zapamiętanej wartości
                                _group_obj:=_komm.group_obj;
                                {? type_of(_group_obj)>100
                                || {? var_pres(_grp_id,_group_obj)>0
                                   || _saved:=($('_a.'+_grp_id))(_group_obj);
                                      {? type_of(_saved)=type_of(0)
                                      || _result:=_saved;
                                         .GRP_AUTO:=1
                                      ?}
                                   ?}
                                ?}
                             ?};
                             {? type_of(_result)=0
                             ||
                                _a:=exec('podziel_calosc','#string',{? 1+_a=%1 || translate(_a) || _a ?});
                                {? .STANDARD
                                || _result:=~choice(_a,_c,_b,0,1,2,'&Tak'@,'&Nie'@)
                                || _result:=exec('ask','#desktop',_a,_b,_c)
                                ?};
                                {? _grp_id<>'' & var_pres('_komm')>100
                                ||
::                                 Obsługa akcji grupowej - zapamiętanie wartości
                                   {? var_pres('_group_obj')>100
                                   || obj_del(_group_obj)
                                   ?};
                                   _group_obj:=_komm.group_obj;
                                   {? type_of(_group_obj)>100
                                   || _new_obj:=exec('obj_ntab_set','#array',_group_obj,_grp_id,_result);
                                      obj_del(_komm.group_obj);
                                      _komm.group_obj:=_new_obj
                                   || _komm.group_obj:=obj_new(_grp_id);
                                      ($('_a.'+_grp_id+':=_b'))(_komm.group_obj,_result)
                                   ?}
                                ?}
                             ?};
                             _result
                           "),
            obj_meth('emsg',"{? _=0 | _a='' || _a:='Naciśnij dowolny klawisz.'@ ?};
                             _a:=exec('podziel_calosc','#string',{? 1+_a=%1 || translate(_a) || _a ?});
                             _result:=~~;
                             {? cli_ver()='cgi'
                             || h_echo('<p>'+'Uwaga: %1'@[_a]+'\n')
                             |? var_pres('__XLS_VALID')>100
                             || __XLS_VALID.MSG:='Uwaga: %1'@[gsub(_a,'\n',' ')]
                             || {? var_pres('_b')<>type_of('')
                                || _b:=.TYT
                                || {? 1+_b='@' || _b:=1-_b || _b:=.TYT+_b ?}
                                ?};

                                _grp_id:='';
                                {? var_pres('_c')=type_of('')
                                || _grp_id:=_c
                                ?};
                                _grp_id:=form(_grp_id);
                                _komm:=~~;
                                {? var_pres('_d')>100
                                || _komm:=_d
                                |? var_pres('KOMM')=type_of(@.CLASS.JCQ)
                                || _komm:=KOMM
                                ?};

                                _can_continue:=1;

                                {? do_state()=1
                                || _can_continue:=0;
                                   undo(_a);
                                   {? exec('on','#mwapi')
                                   || _wsenv:=exec('wsenv','#mwapi');
                                      _wsenv.add_error(_a)
                                   ?}
                                ?};
                                .GRP_AUTO:=0;
                                {? _can_continue>0 & _grp_id<>'' & var_pres('_komm')>100
                                ||
::                                 Obsługa akcji grupowej - odczytanie zapamiętanej wartości
                                   _group_obj:=_komm.group_obj;
                                   {? type_of(_group_obj)>100
                                   || {? var_pres(_grp_id,_group_obj)>0
                                      || _saved:=($('_a.'+_grp_id))(_group_obj);
                                         {? type_of(_saved)=type_of(0)
                                         || _result:=_saved;
                                            .GRP_AUTO:=1
                                         ?}
                                      ?}
                                   ?}
                                ?};

                                {? _can_continue>0 & type_of(_result)=0
                                || {? .STANDARD
                                   || {? app_info('web_sesid')<>''
                                      || web_msg(_a,_b,'EXCLAM');
                                         _result:=0
                                      |? exec('on','#mwapi')
                                      || _wsenv:=exec('wsenv','#mwapi');
                                         _result:=_wsenv.add_error(_a)
                                      || _result:=choice(_a,_b,'EXCLAM')
                                      ?}
                                   || _result:=exec('emsg','#desktop',_a,_b)
                                   ?};

                                   {? _grp_id<>'' & var_pres('_komm')>100
                                   ||
::                                    Obsługa akcji grupowej - zapamiętanie wartości
                                      {? var_pres('_group_obj')>100
                                      || obj_del(_group_obj)
                                      ?};
                                      _group_obj:=_komm.group_obj;
                                      {? type_of(_group_obj)>100
                                      || _new_obj:=exec('obj_ntab_set','#array',_group_obj,_grp_id,_result);
                                         obj_del(_komm.group_obj);
                                         _komm.group_obj:=_new_obj
                                      || _komm.group_obj:=obj_new(_grp_id);
                                         ($('_a.'+_grp_id+':=_b'))(_komm.group_obj,_result)
                                      ?}
                                   ?}
                                ?}
                             ?};
                             _result
                            "),
            obj_meth('info'," {? _=0 | _a='' || _a:='Naciśnij dowolny klawisz.'@ ?};
                              _a:=exec('podziel_calosc','#string',{? 1+_a=%1 || translate(_a) || _a ?});
                              _result:=~~;
                              {? cli_ver()='cgi'
                              || h_echo('<p>'+'Informacja: %1'@[_a]+'\n')
                              |? var_pres('__XLS_VALID')>100
                              || __XLS_VALID.MSG:='Informacja: %1'@[gsub(_a,'\n',' ')]
                              || {? do_state()=1 || return() ?};

                                 {? var_pres('_b')<>type_of('')
                                 || _b:=.TYT
                                 || {? 1+_b='@' || _b:=1-_b || _b:=.TYT+_b ?}
                                 ?};

                                 _grp_id:='';
                                 {? var_pres('_c')=type_of('')
                                 || _grp_id:=_c
                                 ?};
                                 _grp_id:=form(_grp_id);
                                 _komm:=~~;
                                 {? var_pres('_d')>100
                                 || _komm:=_d
                                 |? var_pres('KOMM')=type_of(@.CLASS.JCQ)
                                 || _komm:=KOMM
                                 ?};
                                 .GRP_AUTO:=0;
                                 {? _grp_id<>'' & var_pres('_komm')>100
                                 ||
::                                  Obsługa akcji grupowej - odczytanie zapamiętanej wartości
                                    _group_obj:=_komm.group_obj;
                                    {? type_of(_group_obj)>100
                                    || {? var_pres(_grp_id,_group_obj)>0
                                       || _saved:=($('_a.'+_grp_id))(_group_obj);
                                          {? type_of(_saved)=type_of(0)
                                          || _result:=_saved;
                                             .GRP_AUTO:=1
                                          ?}
                                       ?}
                                    ?}
                                 ?};
                                 {? type_of(_result)=0
                                 ||
                                    {? .STANDARD
                                    || {? +app_info('web_sesid')
                                       || web_msg(_a,_b,'INFO');
                                          _result:=0
                                       |? exec('on','#mwapi')
                                       || _wsenv:=exec('wsenv','#mwapi');
                                          _result:=_wsenv.add_info(_a)
                                       || _result:=choice(_a,_b,'INFO')
                                       ?}
                                    || _result:=exec('info','#desktop',_a,_b)
                                    ?};

                                    {? _grp_id<>'' & var_pres('_komm')>100
                                    ||
::                                     Obsługa akcji grupowej - zapamiętanie wartości
                                       {? var_pres('_group_obj')>100
                                       || obj_del(_group_obj)
                                       ?};
                                       _group_obj:=_komm.group_obj;
                                       {? type_of(_group_obj)>100
                                       || _new_obj:=exec('obj_ntab_set','#array',_group_obj,_grp_id,_result);
                                          obj_del(_komm.group_obj);
                                          _komm.group_obj:=_new_obj
                                       || _komm.group_obj:=obj_new(_grp_id);
                                          ($('_a.'+_grp_id+':=_b'))(_komm.group_obj,_result)
                                       ?}
                                    ?}
                                 ?}
                              ?};
                              _result
                            "),
            obj_meth('error',"{? _=0 | _a='' || _a:='Naciśnij dowolny klawisz.'@ ?};
                              _a:=exec('podziel_calosc','#string',{? 1+_a=%1 || translate(_a) || _a ?});
                              _result:=~~;
                              {? cli_ver='cgi'
                              || h_echo('<p>'+'Błąd: %1'@[_a]+'\n')
                              |? var_pres('__XLS_VALID')>100
                              || __XLS_VALID.MSG:='Błąd: %1'@[gsub(_a,'\n',' ')]
                              || {? var_pres('_b')<>type_of('')
                                 || _b:=.TYT
                                 || {? 1+_b='@' || _b:=1-_b || _b:=.TYT+_b ?}
                                 ?};

                                 _grp_id:='';
                                 {? var_pres('_c')=type_of('')
                                 || _grp_id:=_c
                                 ?};
                                 _grp_id:=form(_grp_id);
                                 _komm:=~~;
                                 {? var_pres('_d')>100
                                 || _komm:=_d
                                 |? var_pres('KOMM')=type_of(@.CLASS.JCQ)
                                 || _komm:=KOMM
                                 ?};

                                 _can_continue:=1;

                                 {? do_state()=1
                                 || _can_continue:=1;
                                    undo(_a)
                                 ?};
                                 .GRP_AUTO:=0;
                                 {? _can_continue>0 & _grp_id<>'' & var_pres('_komm')>100
                                 ||
::                                  Obsługa akcji grupowej - odczytanie zapamiętanej wartości
                                    _group_obj:=_komm.group_obj;
                                    {? type_of(_group_obj)>100
                                    || {? var_pres(_grp_id,_group_obj)>0
                                       || _saved:=($('_a.'+_grp_id))(_group_obj);
                                          {? type_of(_saved)=type_of(0)
                                          || _result:=_saved;
                                             .GRP_AUTO:=1
                                          ?}
                                       ?}
                                    ?}
                                 ?};

                                 {? _can_continue>0 & type_of(_result)=0
                                 || {? .STANDARD
                                    || {? +app_info('web_sesid')
                                       || web_msg(_a,_b,'ERROR');
                                          _result:=0
                                       || _result:=choice(_a,_b,'ERROR')
                                       ?}
                                    || _result:=exec('error','#desktop',_a,_b)
                                    ?};

                                    {? _grp_id<>'' & var_pres('_komm')>100
                                    ||
::                                     Obsługa akcji grupowej - zapamiętanie wartości
                                       {? var_pres('_group_obj')>100
                                       || obj_del(_group_obj)
                                       ?};
                                       _group_obj:=_komm.group_obj;
                                       {? type_of(_group_obj)>100
                                       || _new_obj:=exec('obj_ntab_set','#array',_group_obj,_grp_id,_result);
                                          obj_del(_komm.group_obj);
                                          _komm.group_obj:=_new_obj
                                       || _komm.group_obj:=obj_new(_grp_id);
                                          ($('_a.'+_grp_id+':=_b'))(_komm.group_obj,_result)
                                       ?}
                                    ?}
                                 ?}
                              ?};
                              _result
                             "),
            obj_meth('choice',"{? _=0 || _a:='Naciśnij dowolny klawisz.'@; _b:=1 ?};
                               {? _=1
                               || _b:=1;
                                  _icon:='ASK'
                               || {? var_pres('_b')=type_of('')
                                   & (_b='ASK' | _b='EXCLAM' | _b='INFO' | _b='ERROR' )
                                  || _icon:=_b;
                                     _b:=1
                                  || _icon:='ASK'
                                  ?}
                               ?};
                               _a:=exec('podziel_calosc','#string',{? 1+_a=%1 || translate(_a) || _a ?},'T');
                               _btn:=0;
                               {! _it:=3..{? _<=6 || _ || 6 ?} |! {? type_of(_[_it])=type_of('') || _btn:=_it-2 ?} !};
                               {? var_pres('_h')<>type_of('')
                               || _h:=.TYT
                               || {? 1+_h='@' || _h:=1-_h || _h:=.TYT+_h ?}
                               ?};

                               _grp_id:='';
                               {? var_pres('_i')=type_of('')
                               || _grp_id:=_i
                               ?};
                               _grp_id:=form(_grp_id);
                               _komm:=~~;
                               {? var_pres('_j')>100
                               || _komm:=_j
                               |? var_pres('KOMM')=type_of(@.CLASS.JCQ)
                               || _komm:=KOMM
                               ?};

                               _result:=~~;
                               .GRP_AUTO:=0;
                               {? _grp_id<>'' & var_pres('_komm')>100
                               ||
::                                Obsługa akcji grupowej - odczytanie zapamiętanej wartości
                                  _group_obj:=_komm.group_obj;
                                  {? type_of(_group_obj)>100
                                  || {? var_pres(_grp_id,_group_obj)>0
                                     || _saved:=($('_a.'+_grp_id))(_group_obj);
                                        {? type_of(_saved)=type_of(0)
                                        || _result:=_saved;
                                           .GRP_AUTO:=1
                                        ?}
                                     ?}
                                  ?}
                               ?};

                               {? type_of(_result)=0
                               ||
                                  {? .STANDARD
                                  || {? _b>(_-1) | _b=~~ || _b:=_-1 ?};
                                     _skl:='choice(_a,_b,\'\''+_icon+'\'\',0,'+$(_b-1)+',';
                                     {? _>2
                                     || {! _i:=3.._btn+2 |! _skl+=',\'\''+gsub(gsub(_[_i],%92,%92*2),%39,2*%39)+'\'\'' !}
                                     ?};
                                     _skl+=',_c)';
                                     {? var_pres('_g')<>type_of('')
                                     || _g:='&Anuluj'@
                                     ?};
                                     _wy:=($_skl)(_a,_h,_g);
                                     {? _wy=_btn
                                     || _result:=0
                                     || _result:=_wy+1
                                     ?}
                                  || {? _b=~~ || _b:=5 ?};
                                     _skl:='exec(\'\'choice\'\',\'\'#desktop\'\',';
                                     _skl+={? var_pres('_a')=type_of('') || '\'\''+gsub(_a,%92,2*%92)+'\'\'' || '' ?}+',';
                                     _skl+={? var_pres('_b')=type_of(0) || $_b || '' ?}+',';
                                     _skl+={? var_pres('_c')=type_of('') || '\'\''+gsub(gsub(_c,%92,2*%92),%39,2*%39)+'\'\'' || '' ?}+',';
                                     _skl+={? var_pres('_d')=type_of('') || '\'\''+gsub(gsub(_d,%92,2*%92),%39,2*%39)+'\'\'' || '' ?}+',';
                                     _skl+={? var_pres('_e')=type_of('') || '\'\''+gsub(gsub(_e,%92,2*%92),%39,2*%39)+'\'\'' || '' ?}+',';
                                     _skl+={? var_pres('_f')=type_of('') || '\'\''+gsub(gsub(_f,%92,2*%92),%39,2*%39)+'\'\'' || '' ?}+',';
                                     _skl+={? var_pres('_g')=type_of('') || '\'\''+gsub(gsub(_g,%92,2*%92),%39,2*%39)+'\'\'' || '' ?}+',';
                                     _skl+={? var_pres('_h')=type_of('') || '\'\''+gsub(gsub(_h,%92,2*%92),%39,2*%39)+'\'\'' || '' ?}+')';
                                     _wy:=($_skl)();
                                     _result:=_wy
                                  ?};

                                  {? _grp_id<>'' & var_pres('_komm')>100
                                  ||
::                                   Obsługa akcji grupowej - zapamiętanie wartości
                                     {? var_pres('_group_obj')>100
                                     || obj_del(_group_obj)
                                     ?};
                                     _group_obj:=_komm.group_obj;
                                     {? type_of(_group_obj)>100
                                     || _new_obj:=exec('obj_ntab_set','#array',_group_obj,_grp_id,_result);
                                        obj_del(_komm.group_obj);
                                        _komm.group_obj:=_new_obj
                                     || _komm.group_obj:=obj_new(_grp_id);
                                        ($('_a.'+_grp_id+':=_b'))(_komm.group_obj,_result)
                                     ?}
                                  ?}
                               ?};
                               _result
                               "),
            obj_meth('grp_clear',"

                                 _grp_id:='';
                                 {? var_pres('_a')=type_of('')
                                 || _grp_id:=_a
                                 ?};
                                 _grp_id:=form(_grp_id);
                                 _komm:=~~;
                                 {? var_pres('_b')>100
                                 || _komm:=_b
                                 |? var_pres('KOMM')=type_of(@.CLASS.JCQ)
                                 || _komm:=KOMM
                                 ?};
                                 .GRP_AUTO:=0;

                                 {? _grp_id<>'' & var_pres('_komm')>100
                                 ||
::                                  Obsługa akcji grupowej - wyczyszczenie wartości
                                    _group_obj:=_komm.group_obj;
                                    {? type_of(_group_obj)>100
                                    || _new_obj:=exec('obj_ntab_set','#array',_group_obj,_grp_id,~~);
                                       obj_del(_komm.group_obj);
                                       _komm.group_obj:=_new_obj
                                    || _komm.group_obj:=obj_new(_grp_id);
                                       ($('_a.'+_grp_id+':=_b'))(_komm.group_obj,~~)
                                    ?}
                                 ?};
                                 ~~
                                "),
            obj_meth('grp_auto',".GRP_AUTO"),

            obj_meth('multichoice',"
::                                  Parametry wejściowe
::                                  [_a] - STRING - tekst pytania
::                                  [_b] - STRING - tekst przycisku ok
::                                  [_c] - STRING - tekst przycisku anuluj
::                                  [_d] - INTEGER - szerokość okna, STRING - 'x,y' gdzie x szerokość na jterm, y - interm
::                                  [_e] - INTEGER - wysokość okna, STRING - 'x,y' gdzie x wysokość na jterm, y - interm
::                                  [_f,_g,_h...] - STRING - kolejne opcje jako checkboxy
                                    _text:='';
                                    {? var_pres('_a')=type_of('')
                                    || _text:={? 1+_a=%1 || translate(_a) || _a ?}
                                    ?};
                                    _btn_ok:='&OK'@;
                                    {? var_pres('_b')=type_of('')
                                    || _btn_ok:=_b
                                    ?};
                                    _btn_cancel:='&Anuluj'@;
                                    {? var_pres('_c')=type_of('')
                                    || _btn_cancel:=_c
                                    ?};

                                    _width:=80;
                                    {? FUN.STANDARD=0
                                    || _width:=96
                                    ?};
                                    {? var_pres('_d')=type_of(0)
                                    || _width:=_d
                                    |? var_pres('_d')=type_of('')
                                    || _width:=_d
                                    ?};

                                    _height:=5;
                                    {? FUN.STANDARD=0
                                    || _height:=15
                                    ?};
                                    _auto_h:=1;
                                    {? var_pres('_e')=type_of(0)
                                    || _auto_h:=0;
                                       _height:=_e
                                    |? var_pres('_e')=type_of('')
                                    || _auto_h:=0;
                                       _height:=_e
                                    ?};
                                    _options_size:=_;
                                    _options_size-=5;

                                    {? _options_size<=0
                                    || _options_size:=0
                                    ?};
                                    {? _options_size>0
                                    || _options:=obj_new(_options_size)
                                    || _options:=~~
                                    ?};

                                    _env:=obj_new('TEXT'
                                                         ,'OPT_SIZE'
                                                         ,'OPT_MAX'
                                                         ,'WIN_ID'
                                                         ,'OPTIONS'
                                                         ,'RESULT'
                                                         ,'BTN_OK'
                                                         ,'BTN_CANCEL'
                                                         ,'INTERM'
                                    );
                                    _env.INTERM:=exec('interm','#system');
                                    _it2:=1;
                                    {? _>5
                                    ||
                                       {! _it:=6.._
                                       |!
                                          _option:=_[_it];
                                          {? _option<>''
                                          ||
                                             {? _option*'='=0
                                             || _msg:='Parametry przekazane do metody muszą mieć format nazwa_parametru=wartość_parametru.'
                                                      'Możliwe nazwy parametrów: text, selected';
                                                FUN.info(_msg);
                                                return()
                                             || _options[_it2]:=_option
                                             ?}
                                          ?};
                                          {? _auto_h>0
                                          || {? _env.INTERM>0
                                             || _height+=2
                                             || _height+=1
                                             ?}
                                          ?};
                                          _it2+=1
                                       !}
                                    ?};

                                    _win_id:='multichoice';
                                    _env.TEXT:=_text;
                                    _env.WIN_ID:=_win_id;
                                    _env.OPT_MAX:=10;
                                    _env.OPT_SIZE:=_options_size;
                                    _env.OPTIONS:=_options;
                                    _env.BTN_OK:=_btn_ok;
                                    _env.BTN_CANCEL:=_btn_cancel;

                                    params_set('multi_env',_env);

::                                  Uzupełniam tablicę wynikową
                                    _result:=obj_new(_options_size+1);
                                    {! _it:=1..obj_len(_result)
                                    |! _result[_it]:=''
                                    !};

                                    _env.RESULT:=_result;

::                                  Tworzę okno kontrolki

                                    _class_name:='';
                                    {? _env.INTERM>0
                                    || _class_name:='org.mcl.czest.xdesk.interm.kontrolki.MultichoiceControl'
                                    ?};
                                    _ctr_id:=exec('create','#desktop',SYSLOG,_win_id,,
                                       _height,_width,.TYT,,
                                       'normal',0,{? FUN.STANDARD || 0 || 4 ?},{? FUN.STANDARD || 0 || 6 ?},,,_class_name
                                    );

                                    SYSLOG.win_ctr(_ctr_id);
                                    _before:=\"
                                       _env:=params_get().multi_env;
                                       _load_options:=exec('set_options_a','#desktop');
                                       _load_options.LOAD_ANI:=0;
                                       _dsk:={? FUN.STANDARD || '#multichoice.dsk' || '#multichoice2.dsk' ?};
                                       _elements:=exec('elements_table','#desktop');
                                       {? _env.INTERM=0
                                       || exec('load','#desktop',_env.WIN_ID,_dsk,_load_options,,,,,0)
                                       ?};
                                       exec('set_value','#desktop','',_env.WIN_ID,'title@pane_text',_env.TEXT,,_elements);
                                       exec('set_value_grp','#desktop','',_env.WIN_ID,'button_ok@pane_buttons',_env.BTN_OK,,_elements);
                                       exec('set_value_grp','#desktop','',_env.WIN_ID,'button_anuluj@pane_buttons',_env.BTN_CANCEL,,_elements);

                                       {? _env.INTERM=0
                                       ||
::                                        Ładowanie ikon
                                          _sep:=exec('sep','#file');
                                          _file:='xwin16.png';
                                          _filepath:=tmp_dir()+_sep+_file;
                                          fcopy(_file,'@'+_filepath,1,0,1);
                                          exec('set_icons','#desktop','',_env.WIN_ID,_filepath)
                                       ?};

                                       _elements.blank();
                                       _elements.ID_SYS:='pane_checkbox';
                                       _elements.VISIBLE:='true';
                                       _elements.add();

                                       _elements.blank();
                                       _elements.ID_SYS:='pane_buttons';
                                       _elements.VISIBLE:='true';
                                       _elements.add();

                                       {? _env.BTN_OK=''
                                       ||
::                                        Jeśli text dla OK pusty to go znikam
                                          _elements.blank();
                                          _elements.ID_SYS:='button_ok@pane_buttons';
                                          _elements.VISIBLE:='false';
                                          _elements.add()
                                       ?};

                                       {! _it:=1.._env.OPT_MAX
                                       |!
                                          _checkbox_id:='checkbox'+$_it+'@pane_checkbox';
                                          _elements.blank();
                                          _elements.ID_SYS:=_checkbox_id;
                                          {? _it<=_env.OPT_SIZE
                                          || _param:=_env.OPTIONS[_it];
                                             {? var_pres('_param_obj')>100
                                             || obj_del(_param_obj)
                                             ?};
                                             _param_obj:=params_exec('multichoice_parse','#message',_param);
                                             _elements.VALUE:='name='+_param_obj.TEXT;
                                             {? _param_obj.SELECTED<>''
                                             || _elements.VALUE+=';value='+_param_obj.SELECTED
                                             ?};
                                             {? _param_obj.KIND='checkbox'
                                             || _elements.VISIBLE:='true'
                                             || _elements.VISIBLE:='false'
                                             ?}
                                          || _elements.VISIBLE:='false'
                                          ?};
                                          _elements.add();


                                          {! _it:=1.._env.OPT_MAX
                                          |! _button_id:='button'+$_it+'@pane_buttons';
                                             _elements.blank();
                                             _elements.ID_SYS:=_button_id;

                                             {? _it<=_env.OPT_SIZE
                                             || _param:=_env.OPTIONS[_it];
                                                {? var_pres('_param_obj')>100
                                                || obj_del(_param_obj)
                                                ?};
                                                _param_obj:=params_exec('multichoice_parse','#message',_param);
                                                _elements.VALUE:=_param_obj.TEXT;
                                                {? _param_obj.KIND='button'
                                                || _elements.VISIBLE:='true'
                                                || _elements.VISIBLE:='false'
                                                ?}
                                             || _elements.VISIBLE:='false'
                                             ?};
                                             _elements.add()
                                          !}
                                       !};

                                       exec('update','#desktop',_elements,_env.WIN_ID);
                                       params_exec('multichoice_update','#message');
                                       1\";

::                                  Pokazuje kontrolkę
                                    SYSLOG.control(_win_id,'modal=false',_before);

                                    _result


            "),


            obj_meth('wdrerror'," {? sec_superuser()>0
                                  || {? _=0 | _a='' || _a:='Naciśnij dowolny klawisz.'@ ?};
                                     {? var_pres('_b')<>type_of('') || _b:='' ?};
                                     _b:=_b+' [DEBUG] ';
                                     .error(_a,_b)
                                  ?}
                                "),
            obj_fld('PRGSepr',time(0,0,0)),
            obj_fld('PRGStSta',time()),
            obj_fld('PRGSsize',0),
            obj_fld('PRGSlicz',0),
            obj_fld('PRGStxt',''),
            obj_fld('PRGSwait',30),
            obj_fld('PRGSstep',0),
            obj_fld('PRGSlast',0),
            obj_fld('PRGShide',0),
            obj_meth('prg_start',"
                                 .prg_stop();
                                 {? ~(var_pres('_a')=type_of(0) & _a>0)
                                 || .info(exec('form','#string','L',
                                       'Nieprawidłowe parametry wywołania:'@,
                                       '_a - liczba rekordów do przetworzenia [INTEGER] (musi być większa od zera)'@,
                                       '_b - opis do okienka (opcjonalnie) [STRING]'@,
                                       '_c - opóźnienie prezentacji czasu w sek. — domyślnie 30'@,
                                       '_d - krok odświeżania w %% — domyślnie 1'@,
                                       '_e - ukrycie przycisku przerwania [INTEGER]'@
                                    ));
                                    return(0)
                                 ?};
                                 .PRGSepr:=time(0,0,0);
                                 .PRGStSta:=time();
                                 .PRGSsize:=_a;
                                 .PRGSlicz:=0;
                                 .PRGStxt:={? (var_pres('_b')=type_of('') & +_b )
                                            | var_pres('_b')=type_of(\"\")
                                           || _b
                                           || 'Trwa odczyt niezbędnych informacji.'@+'\n'
                                           ?};
                                 .PRGSwait:={? var_pres('_c')=type_of(0) & _c>=0 || _c || 30 ?}/60;
                                 .PRGSstep:={? var_pres('_d')=type_of(0) & _d>=0 || {? _d=0 || _d || _d-1 ?} || 1 ?};
                                 .PRGShide:={? var_pres('_e')=type_of(0) & (_e=0 | _e=1) || _e || 0 ?};
                                 .PRGSlast:=0;
                                 1
                                "),
            obj_meth('prg_next',"_krok:={? var_pres('_a')=type_of(0) & _a>=0 || _a || 1 ?};
                                 _refr:=1;
                                 .PRGStxt:={? var_pres('_b')=type_of('')
                                              || {? +_b || _b || 'Trwa odczyt niezbędnych informacji.'@ ?}
                                              |? var_pres('_b')=type_of(\"\")
                                              || _b
                                              || _refr:=0;
                                                 .PRGStxt
                                              ?};
                                 {? .PRGStxt+1<>'\n' || .PRGStxt+='\n' ?};
                                 .PRGSlicz+=_krok;
                                 _tm:=*(time()-.PRGStSta);
                                 _procent:=100*.PRGSlicz/.PRGSsize;
                                 {? _procent>=100
                                 || _procent:=100;
                                    {? _<2 || .PRGStxt:='Proszę czekać na dokończenie zadania.'@+'\n' ?}
                                 ?};
                                 .PRGSepr:={? _tm>.PRGSwait
                                              || *((_tm/.PRGSlicz)*(.PRGSsize-.PRGSlicz))
                                              || time(0,0,0)
                                              ?};
                                 {? _refr=0 & ~(.PRGSlicz=1 | .PRGSstep=0 | _procent-.PRGSlast>=.PRGSstep)
                                 || return(1)
                                 ?};
                                 .PRGSlast:=ceil(_procent);
                                 _Eprgs:={? .PRGSepr<=time(0,0,0)
                                         || ''
                                         || _hh:={? .PRGSepr~1>0 || (('  '+($(.PRGSepr~1)))+2)+' godz. ' || '' ?};
                                            _mm:={? .PRGSepr~2>0 || (('  '+($(.PRGSepr~2)))+2)+' min. ' || '' ?};
                                            _ss:={? ~+_hh || (('  '+($(.PRGSepr~3)))+2)+' sek. ' || '' ?};
                                            _hh+_mm+_ss
                                         ?};
                                 _wyn:=progress(_procent,{? var_pres('PRGStxt',.)<>type_of('')
                                                         || .PRGStxt()
                                                         || .PRGStxt
                                                         ?}+
                                                   {? +_Eprgs
                                                   || '\n'+'Szacowany czas do zakończenia operacji'@+' '+_Eprgs+(5*' ')
                                                   || ''
                                                   ?},
                                                   .TYT+' ('+$ceil(_procent)+'%)',,,,.PRGShide,{? .PRGShide=0 || 'Przerwij'@ || '' ?});
                                 {? _wyn=0
                                 || {? do_state()=0 & ~.ask('Czy na pewno przerwać wykonywanie zadania?'@)
                                    || 1
                                    || 0
                                    ?}
                                 || 1
                                 ?}
                               "),
            obj_meth('prg_stop',"
                                 .PRGSepr:=time(0,0,0);
                                 .PRGStSta:=time();
                                 .PRGSlast:=.PRGSstep:=.PRGSlicz:=.PRGSsize:=0;
                                 .PRGStxt:='';
                                 .PRGSwait:=30;
                                 prgs_clr()
                               ")
           )
?};
~~


\JCQ_decl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JM [2009]
:: OPIS: Deklaracja klas JCQARR, JCQLEV, JCQ
::  OLD: \init/communiq.fml
::======================================================================================================================
:: Klasą JCQ - używana do kolekcji komunikatów do wyświetlenia użytkownikowi
::            obiekt __CQ klasy JCQ
::
::            Tabela tymczasowa w obiekcie jest używana do:
::              a) weryfikacji czy dany rekord 'przetrwał' transakcje
::              b) wyświetlania komunikatów użytkownikowi
::
::            Obiekt powołany na podstawie klasy MUSI BYC podpięty do zmiennej GLOBALNEJ
::
::            PUBLICZNE METODY:
::            .init([msg_size],[msg_num],[wintitle],[msgtitle],[msg_deep],[convert],[msgmode])
::                inicjuje struktury obiektu
::(1)             INTEGER msg_size - maksymalna liczba znaków komunikatu,
::(2)             INTEGER msg_num  - maksymalna liczba komunikatów,
::(3)              STRING wintitle - domyślny tytuł okienka z komunikatami
::(4)              STRING msgtitle - domyślny tutul kolumny komunikatów
::(5)             INTEGER msg_deep - maksymalna liczba zagłębień/poziomów
::(6)             FORMULA convert  - formula konwertująca tekst do zapisu do pliku
::(7)             INTEGER msgmode  - zachowanie obiektu przy wywołaniu metod .msg(),.info(),.error()
::                                  -1 - wyświetla dialog: NIE, dodaje komunikat do listy: NIE
::                                   0 - wyświetla dialog: NIE, dodaje komunikat do listy: TAK
::                                   1 - wyświetla dialog: TAK, dodaje komunikat do listy: NIE
::                                   2 - wyświetla dialog: TAK, dodaje komunikat do listy: TAK
::(8)               STRING sessid  - nazwa sesji, przydatne przy kontroli, czy ostatnio zainicjowano dana sesje
::
::            .add(message,[icon],[color],[muststay],[formula])
::                dodaje komunikat w aktualnej sekcji i zwraca jego pozycje <lp>
::(1)              STRING message  - treść komunikatu/wiadomości/nazwa sekcji
::(2)              STRING icon     - ikona w postaci 'plikikon.bmp:nr' (pamiętać o wymogach plików ikon)
::                 STRING icon     - ikony w postaci 'plikikon.bmp:nrC#iconfile.bmp:nrO' lub 'plikikon.bmp:nrC#nrO'
::                                   nrC - numer ikony dla zwiniętej sekcji
::                                   nrO - numer ikony dla rozwiniętej sekcji
::                INTEGER icon     - numer ikony w pliku xwin16.png (0 = brak ikony)
::                                   ikona wyświetlana przed <message>
::(3)              STRING color    - kolor pozycji
::(4)             INTEGER muststay - message musi być wyświetlony niezależnie od wyniku transakcji
::                                   muststay = 1  - komunikat pojawi się niezależnie od wyniku transakcji
::(5)              STRING formula  - formula do wykonania na danej pozycji po wybraniu akcji <entera> - patrz .select()
::                                   domyślnie formula='sel_exit()'
::
::            .find_msg(message)
::                zwraca lp komunikatu <message> lub 0 gdy nie znaleziono
::
::            .del(message|lp)
::                kasuje komunikat <message> lub komunikat o numerze <lp>
::                UWAGA: jeśli komunikat był sekcja, to zachowanie będzie takie,
::                       jak w przypadku dodania sekcji w zerwanej transakcji!
::
::            .update(lp,[message],[icon],[color],[muststay])
::                aktualizuje podane elementy dla <lp> pozycji
::
::            .chngroot(lp,new_root)
::                change root - 'przepina' korzeń pozycji/sekcji lp do new_root
::
::            .sect_beg(message,[icon],[color],[muststay])
::                otwiera kolejną sekcję/poziom - "piętro niżej"
::                dodane komunikaty pojawia się jako podpunkty sekcji
::                parametry jak w .add()
::
::            .sect_end()
::                zamyka sekcję/poziom - "piętro wyżej"
::                dodane komunikaty pojawia się jako podpunkty sekcji nadrzędnej
::
::            .sect_clr()
::                kasuje układ sekcji
::                dodane komunikaty pojawia się na poziomie 0
::
::            .set_root(message,[icon],[color],[muststay])
::                kasuje układ sekcji, ale...
::                jeśli nie ma na liście komunikatu <message>, to komunikat zostanie dodany na poziomie 0
::                komunikat jest ustawiany jako aktualna sekcja /nie jest ważne na jakim poziomie jest sekcja
::                kolejne komunikaty pojawia się jako podpunkty sekcji ustawionej sekcji
::                parametry jak w .add()
::
::            .select([wintitle],[msgtitle],[win_save],[always],[entera],[rozwiń],[dirico],[maxH],[delsid],[execbs],[buttons],[yesorno])
::                pokazuje okienko komunikatów
::(1)              STRING wintitle - domyślny tytuł okienka z komunikatami
::(2)              STRING msgtitle - domyślny tutul kolumny komunikatów
::(3)             FORMULA win_save - formula na akcji Zapisz w okienku komunikatów
::(4)             INTEGER always   - określa, czy metoda select ma pokazać okno nawet wtedy,
::                                   gdy nie komunikatów do pokazania (1=tak)
::(5)              STRING entera   - nazwa domyślnej akcji wywołującej akcje na pozycji, brak parametru=brak akcji w oknie
::(6)             INTEGER rozwiń   - określa czy sekcje maja być rozwińięte(1) czy zwinięte(0) domyślnie 1
::(7)             INTEGER maxH     - maksymalna wysokość okienka (domyślnie 20)
::(8)             INTEGER delsid   - kasować <sessid> ustalone w .init()
::
::(9)             STRING execbs    - formula do wykonania przed .TAB.select().
::                                   Przykład wykorzystania, to np. dodanie własnych akcji, pol itp.
::                                   Redagując formule dostępne są następujące parametry
::                                   _TAB - wskazanie na tabele komunikatów
::                                   _WER - akronim okienka
::                                   _a_rekb - domyślna formula na rekord przed
::                                   _a_rozw - domyślna formula dla rozwiń/zwiń - gdy występują sekcje;
::                                   _a_zapis- domyślna formula do zapisu komunikatów
::                                   _a_ente0- domyślna formula dla <entera> dla niepustej dziedziny
::                                   _a_ente1- domyślna formula dla <entera> dla pustej dziedziny
::(10)            INTEGER buttons  - czy wyświetlać guziki w oknie 0-nie, 1-tak (domyślnie)
::(11)            INTEGER yesorno  - czy wyświetlać dwa klawisze OK i Anuluj 0-nie (domyślnie), 1-tak(Anuluj wyróżniony)
::
::            .save(file [,mode])
::                zapisuje strukturę komunikatów do pliku
::(1)             STRING file  - zapisuje do pliku o nazwie <file> (ścieżka pobierana z pth) - otwiera->zapisuje->zamyka
::                INTEGER file - zapisuje do pliku o uchwycie <file> - zapisuje
::(2)             STRING mode  - format otwarcia pliku domyślnie 'w', ale dla wersji unicode może być np. 'uw'
::
::            .get_size()
::                podaje liczbę wierszy w tabeli komunikatów
::
::              .msg([message],[msgmode],[always]) - EXCLAM
::             .info([message],[msgmode],[always]) - INFO
::            .error([message],[msgmode],[always]) - ERROR
::              .ask([message],[msgmode],[always]) - ASK - odpowiednik FUN.ask('Pytanie')
::                metody umożliwiające sterowanie wyświetlaniem komunikatów w postaci okienek dialogowych
::                wywoływanych funkcja choice(), zachowanie metod zależne jest od <msgmode>.
::                Tytułem dialogu jest nazwa sekcji.
::
::            .is_inited() - sprawdza czy obiekt został zainicjowany i czy można do niego dodawać komunikaty
::            UWAGA:
::              Klasą uwzględnia prace w transakcjach, pamiętać jednak należy, ze w przypadku zerwania transakcji
::              może zostać zmieniona struktura zależności.
::              Komunikat nie pojawi się jeżeli <muststay> nie był podany, lub był rożny od 1 i:
::              1. komunikat dodany był w trakcie zerwanej transakcji
::              2. sekcja komunikatu była dodana w trakcie zerwanej transakcji
::
::              W przypadku, gdy <muststay> komunikatu był równy 1, ale sekcja nadrzędna nie zostanie wyświetlona,
::              to komunikat zostanie wyświetlony na poziomie 0
::
::              Okienko posiada akcje Rozwiń/zwiń, gdy występują jakieś sekcje/zagnieżdżenia
::              Okienko posiada akcje Zapisz, gdy podano formule win_save
::              Okienko posiada akcje domyślna, która wykonuje sel_exit() jeśli podano jej nazwę w parametrze
::
::
::            PRZYKLAD UZYCIA
::              w formule exec('JCQ_example','#message')
::
:: ~OST: INWINBTN
::----------------------------------------------------------------------------------------------------------------------
exec('BigSpace','#var');
::====================================JCQARR============================================================================
_ver:=user(11); _pos:=_ver*'.'; _ver:=#((_pos-1)+_ver);

{? var_pres('JCQARR', @.CLASS)<=0
|| obj_decl('JCQARR',
:: --POLA--
    obj_fld('this'    ,'wskazanie na siebie'             ;null() ),
:    obj_fld('SIZE'    ,'wymiar tablic'                   ;0      ),
    obj_fld('LP'      ,'lp ostatniej pozycji w tablicach';0      ),
    obj_fld('Space'   ,'przestrzen elementow'            ;null() ),
    obj_fld('PARENT'  ,'wskazanie na roota'              ;1      ),
    obj_fld('MESSAGE' ,'komunikaty'                      ;2      ),
    obj_fld('ICON'    ,'ikony'                           ;3      ),
    obj_fld('COLOR'   ,'kolorowanie pozycji'             ;4      ),
    obj_fld('TABREF'  ,'refy do tabeli tymczasowej'      ;5      ),
    obj_fld('MUSTSTAY','must stay after undo()'          ;6      ),
    obj_fld('FORML'   ,'formula do wykonania na enter'   ;7      ),
:: --KONSTRUKTOR/DESTRUKTOR--
   obj_meth('__init','inicjalizacja obiektu';"_a.this:=_a; {?_>1 & type_of(_b)=1 || _a.init(_b) || 1 ?}"),
:: --METODY-PRYWATNE--
:: --METODY-PUBLICZNE--
   obj_meth('init','inicjalizacja obiektu';"
           .LP:=0;
           {? type_of(.Space)>100 || obj_del(.Space) ?};
           _blank:=obj_new(7);
           _blank[.PARENT  ]:=0 ;
           _blank[.MESSAGE ]:='';
           _blank[.ICON    ]:='';
           _blank[.COLOR   ]:='';
           _blank[.TABREF  ]:=0 ;
           _blank[.MUSTSTAY]:=0 ;
           _blank[.FORML   ]:='';
           .Space:=obj_new(@.CLASS.BigSpace,_a,obj_len(_blank),_blank);
           ~~
           ",1),

   obj_meth('add','dodaje pozycje do .ARR';"
::          (parent,message,icon,color,muststay)
            .LP+=1;

::          Usuwam znaki następnych linii żeby się kwadraty nie pojawiały
            {? _b*'\n'>0
            || _b:=gsub(_b,'\n','')
            ?};
            {? .update(.LP,_a,_b,_c,_d,_e,_f)
            || .LP
            || .LP-=1;
               echo('Przkroczony rozmiar tablicy komunikatów'@,'Błąd'@);
               0
            ?}
         "),
   obj_meth('update','aktualizuje wpisy';"
             __:=1; _lp:=_[__];
             {? _lp>0
              & .Space.decode(_lp)
             || __+=1; {? type_of(_[__])>0 || .Space.setSO(.PARENT  ,_[__]) ?};
                __+=1; {? type_of(_[__])>0 || .Space.setSO(.MESSAGE ,_[__]) ?};
                __+=1; {? type_of(_[__])>0 || .Space.setSO(.ICON    ,_[__]) ?};
                __+=1; {? type_of(_[__])>0 || .Space.setSO(.COLOR   ,_[__]) ?};
::                     .TABREF[_lp]  := - bedzie zapisane na zewnatrz
                __+=1; {? type_of(_[__])>0 || .Space.setSO(.MUSTSTAY,_[__]) ?};
                __+=1; {? type_of(_[__])>0 || .Space.setSO(.FORML   ,_[__]) ?};
                _lp
             ?}
           "),

   obj_meth('find_msg','zwraca .LP komunikatu';"
:: UWAGA: metoda działa wolno dla dużej ilości komunikatów!
             _result:=0;
             _start:=_b;
             {? _start<=0
             || _start:=1
             ?};
             {! _lp:=_start .. .LP
             |? {? .Space.get(.MESSAGE,_lp)=_a || _result:=_lp ?};
                _result=0
             !};
             _result
           ",2),

   obj_meth('size','zwraca wielkosc przestrzeni'; ".Space.XPlSiz"),

   obj_meth('find_ref','zwraca .LP komunikatu gdzie TABREF=_a';"
:: UWAGA: metoda dziala wolno dla duzej ilosci komunikatów!
             _result:=0;
             {! _lp:=1 .. .LP
             |? {? .Space.get(.TABREF,_lp)=_a || _result:=_lp ?};
                _result=0
             !};
             _result
           "),

   obj_meth('get_msg' ,'podaje MESSAGE[_a]';"{?_a>0 & _a<.Space.XPlSiz || .Space.get(.MESSAGE,_a) || '' ?}",1,-1),

   obj_meth('get_ref' ,'podaje TABREF[_a]' ;"{?_a>0 & _a<.Space.XPlSiz || .Space.get(.TABREF ,_a) || 0 ?}",1,-1)
   )
?};


::====================================JCQLEV============================================================================
{? var_pres('JCQLEV',@.CLASS) <= 0
|| obj_decl('JCQLEV',
:: --POLA--
    obj_fld('this'    ,'wskazanie na siebie'                       ; null() ),
    obj_fld('CLMAX'   ,'(wy/roz)miar tablicy LEVELS'               ; 0      ),
    obj_fld('CL'      ,'aktualny poziom zagłębienia'               ; 0      ),
    obj_fld('LEVELS'  ,'tablica rootow dla poszczegolnych poziomow'; null() ),
:: --KONSTRUKTOR/DESTRUKTOR--
   obj_meth('__init'  ,'kontruktor';"_a.this:=_a; {?_>1 & type_of(_b)=1||_a.init(_b)?}; ~~"),
:: --METODY-PRYWATNE--
:: --METODY-PUBLICZNE--
   obj_meth('init'    ,'inicjalizacja obiektu';"
             {?.CLMAX>0|| obj_del(.LEVELS)?};
             .CL:=1;
             .CLMAX:=_a;
             .LEVELS:=obj_new(.CLMAX);
             .LEVELS[1]:=0;
             1
           ",1),

   obj_meth('sect_beg','otwiera sekcje => kolejny poziom wgłąb';"{?.CL<.CLMAX|| .CL+=1;.LEVELS[.CL]:=_a?}",1),

   obj_meth('sect_end','zamyka sekcje => poziom w górę';".LEVELS[.CL]:=0; .CL:={?.CL>1||.CL-1||1?}; .CL>1",-1,-1),

   obj_meth('set_root','ustala na sztywno root dla najwyzszego poziomu';".CL:=1; .LEVELS[.CL]:=_a",1),

   obj_meth('sect_clr','zeruje obiekt';".set_root(0)",-1,-1),

   obj_meth('current' ,'podaje lp aktualnego roota';".LEVELS[.CL]",-1,-1)
   )
?};


::====================================JCQ===============================================================================
{? var_pres('JCQ', @.CLASS) <= 0
|| obj_decl('JCQ',
:: --POLA--
    obj_fld('this'    ,'wskazanie na siebie'  ; null()  ),
    obj_fld('TAB'     ,'wskazanie na tabele'  ; null()  ),
    obj_fld('Futures' ,'Dostepne `fjuczery`'  ; '.BTTN.UTF.WINDEL.'),
    obj_fld('NDX_MSG' ,'index tabeli'         ; ''      ),
    obj_fld('NDX_LP'  ,'indeks po LP'         ; ''      ),
    obj_fld('WINTITLE','tytul okienka'        ; ''      ),
    obj_fld('MSGTITLE','nazwa pola Message'   ; 'Komunikat'),
    obj_fld('ARR'     ,'wskazanie obiekt ARR' ; null()  ),
    obj_fld('LEVEL'   ,'wskazanie na obiekt'  ; null()  ),
    obj_fld('TABisOK' ,'bylismy w transakcji?'; 0),
    obj_fld('TABMSGLN','dlugosc pola MESSAGE' ; 100),
    obj_fld('SAVEFILE','Nazwa pliku dla Akcji <Zapisz> okienka'; '@komunikat.log'),
    obj_fld('SEXISTS' ,'Wystepuja sekcje?'    ; 0),
    obj_fld('DLGTITLE','Tytul okienka dialogowego';exec('nazwa','#system')),
    obj_fld('MSGMODE' ,'Okresla zachowanie dla metod msg(),info(),error()';0),
    obj_fld('ICONFILE','Domyślny plik z ikonami'; 'xwin16.png'),
    obj_fld('group_obj' ,'dla akcji grupowej uniwersalny obiekt z odpowiedziami na pytania'     ; ~~     ),
    obj_fld('SESSID'  ,'Identyfikator ostatnio zainicjowanej sesji';'<jeszcze nie inicjowano>'),
    obj_fld('Xutf8'   ,'czy mamy UTF-8?'      ;_ver=0 | _ver>11),
:: --KONSTRUKTOR/DESTRUKTOR--
   obj_meth('__init', 'konstruktor';"
            _a.this:=_a;
            _a.ARR:=obj_new(@.CLASS.JCQARR);
            _a.LEVEL:=obj_new(@.CLASS.JCQLEV);
            ~~
          "),
:: --METODY-PRYWATNE--
    obj_fld('win_save','Formula do zapisu do pliku w okienku'; ""),
    obj_fld('convert' ,'Formula do konwersji w .save()';"_a"),

   obj_meth('init_TAB','inicjacja TABeli tymczasowej';"
            {? _tab:=.TAB; var_pres('_tab')>100
            || obj_del(.TAB); .TAB:=null();
               obj_del(_tab); _tab:=null()
            ?};

            _tab:=tab_tmp(3
                         ,'PARENT'  ,'TREE_REF'   ,'Rodzic'
                         ,'LP'      ,'INTEGER'    ,'Lp'
                         ,'MESSAGE' ,'STRING[255]','Komunikat'
                         ,'COLOR'   ,'STRING[24]' ,'Kolor'
                         ,'ICONC'   ,'STRING[30]' ,'Ikona zamknięta'
                         ,'ICONO'   ,'STRING[30]' ,'Ikona otwarta'
                         ,'MUSTSTAY','INTEGER'    ,'Niezależnie od transakcji'
                         ,'FORML'   ,'STRING[255]','Formuła na wybór'
                         ,'ROWVALUE','STRING[255]','Wartość wiersza'
                         );
            {? type_of(_tab)=type_of(SYSLOG)
            || .TAB:=_tab;
               .NDX_MSG:=.TAB.index('?');
               .NDX_LP:=.TAB.ndx_tmp('',,'LP',,);
               1
            ?};
            _tab1:=.TAB; var_pres('_tab1')>100
           ",1),

   obj_meth('add_TAB','faktyczne dodawanie do tabeli TAB';"
             _parent:=_a;
             _lp    :=_b;
             _msg   :=_c;
             _icon  :=_d;
             _color :=_e;
             _tran  :=_f;
             _forml :=_g;

             _pos:=_icon*'#';
             _iconC:=(_pos-1)+_icon;
             _iconO:=(_pos  )-_icon;

             .TAB.cntx_psh();
             .TAB.clear();
             .TAB.blank();
             .TAB.PARENT  :=_parent;
             .TAB.LP      :=_lp;
             .TAB.MESSAGE :=_msg;
             .TAB.ICONC   :=_iconC;
             .TAB.ICONO   :=_iconO;
             .TAB.COLOR   :=_color;
             .TAB.MUSTSTAY:=_tran;
             .TAB.FORML   :=_forml;
             _result:={? .TAB.add() || #.TAB.ref() || 0 ?};
             .TAB.cntx_pop();
             _result
          ",1,1),

   obj_meth('transfer','aktualizuje dane w TAB na podstawie .ARR przed wyswietleniem';"
            .SEXISTS:=0;
            .TAB.cntx_psh();
            .TAB.index(.NDX_LP);
            _echoR:=1000;
            _echo:=0;
            {? .ARR.LP > 0
            || _txt_base:=form(.ARR.LP,,,'99');
               {! _lp:=1...ARR.LP
               |! {? _echo=0
                  || echo('Aktualizacja/uporządkowanie komunikatów (%1/%2)'@[$_lp,_txt_base],'Faza %1'@['1/2']);
                     _echo:=_echoR
                  ?};
                  _echo-=1;
                  _tnij:=0;
                  _parent:=.ARR.Space.get(.ARR.PARENT, _lp);
                  {? (_parent>0) & (.ARR.Space.get(.ARR.TABREF, _parent)=0) || _tnij:=1 ?};
                  .ARR.Space.decode(_lp);
                  {? .ARR.Space.getSO(.ARR.MUSTSTAY)=0
                  || .TAB.prefix(_lp);
                     {?~.TAB.first()
                     || _tnij:=1
                     ?}
                  || _tnij:=0
                  ?};
                  {? _tnij || .ARR.Space.setSO(.ARR.TABREF,0) ?}
               !};
               _do_state:=do_state();
               {? _do_state=0
               || .TAB.erase()
               |? _do_state=1
               || _can_continue:=1;
                  .TAB.cntx_psh();
                  .TAB.prefix();
                  {? .TAB.first()
                  || {!
                     |? _can_continue:=.TAB.del(,1);
                        .TAB.first() & _can_continue>0
                     !}
                  ?};
                  .TAB.cntx_pop()
               ?};
               _echo:=0;
               {! _lp:=1...ARR.LP
               |! {? _echo=0
                  || echo('Aktualizacja/uporządkowanie komunikatów (%1/%2)'@[$_lp,_txt_base],'Faza %1'@['2/2']);
                     _echo:=_echoR
                  ?};
                  _echo-=1;
                  _parref:=0;
                  {? .ARR.Space.get(.ARR.TABREF, _lp)>0
                  || _parref:=.ARR.get_ref(.ARR.Space.getSO(.ARR.PARENT,_lp));
                     .ARR.Space.decode(_lp);
                    .ARR.Space.setSO(.ARR.TABREF,.add_TAB(_parref
                                                         ,_lp
                                                         ,.ARR.Space.getSO(.ARR.MESSAGE )
                                                         ,.ARR.Space.getSO(.ARR.ICON    )
                                                         ,.ARR.Space.getSO(.ARR.COLOR   )
                                                         ,.ARR.Space.getSO(.ARR.MUSTSTAY)
                                                         ,.ARR.Space.getSO(.ARR.FORML   )
                                                         )
                                    )
                  ?};
                  {?_parref>0||.SEXISTS:=1?}
               !};
               .TABisOK:=1
            ?};
            echo();
            .TAB.cntx_pop();
            1
           "),

   obj_meth('set_winh','ustawia tytul okienka komunikatow';".WINTITLE:=_a",2),

   obj_meth('set_msgh','ustawia nazwe kolumny komunikatow';".MSGTITLE:=_a",2),

   obj_meth('sbar'    ,'pokazuje tekst w pasku stanu';"echo(_a,_b)",2,2),

   obj_meth('sbar'    ,'pokazuje tekst w pasku stanu';"echo(_a,.ARR.get_msg(.LEVEL.current()))",2),

   obj_meth('tab2line','zwija TAB do jednej linii (rekurencyjnie!!!)';"
           _pref:=_a;
           _lvl:=_b;
           _result:='';
           .TAB.cntx_psh();
           {? .TAB.seek(_pref)
           ||  _result:=(_lvl*'   ')+.TAB.MESSAGE;
               .TAB.prefix(_a);
               {? .TAB.first()
               || {!
                  |? _result+='\n'+.tab2line(.TAB.ref(),_lvl+1);
                     .TAB.next()
                  !}
               ?}
           ?};
           .TAB.cntx_pop();
           _result
           "),

:: --METODY-PUBLICZNE--
:.init([msg_size],[msg_num],[wintitle],[msgtitle],[msg_deep])
   obj_meth('init'    ,'inicjacja obiektu';"
            .TABisOK:=0;
            {? type_of(.group_obj)>100
            || obj_del(.group_obj)
            ?};
            _msg_size:={? _>0 & type_of(_a)=1 || _a || @.CLASS.JCQ.TABMSGLN ?};
             _msg_num:={? _>1 & type_of(_b)=1 || _b || -1 ?};
            _wintitle:={? _>2 & type_of(_c)=2 || _c || @.CLASS.JCQ.WINTITLE ?};
            _msgtitle:={? _>3 & type_of(_d)=2 || _d || @.CLASS.JCQ.MSGTITLE ?};
            _msg_deep:={? _>4 & type_of(_e)=1 || _e || 10 ?};
             _convert:={? _>5 & type_of(_f)=3 || _f || .convert ?};
             _msgmode:={? _>6 & type_of(_g)=1 || _g || 2 ?};
              _sessid:={? _>7 & type_of(_h)=2 || _h || '' ?};
            {? .init_TAB(_msg_size)
            || .TABMSGLN:=_msg_size;
               .ARR.init(_msg_num);
               .LEVEL.init(_msg_deep);
               .set_winh(_wintitle);
               .set_msgh(_msgtitle);
               .convert:=_convert;
               .MSGMODE:=_msgmode;
                .SESSID:=_sessid;
               1
            || 0
            ?}
           "),
: --jeżeli rekord istnieje, zwroci cos innego niz 0 ;)
   obj_meth('find_msg','zwraca .ARR.LP komunikatu';"{? var_pres('_b')<>type_of(0) || _b:=1 ?};.ARR.find_msg(_a,_b)",2),

: --konwersja rożnych metod podawania ikon do jednego zapisu
   obj_meth('convicon','zwraca tekst w postaci filename.ext:xxx#filename.ext:yyy';"
      _icon:=_a;
      {? type_of(_icon)=1
      || _icon:=.ICONFILE+':'+$_a;
         _icon+'#'+_icon
      |? type_of(_icon)=2 & +_icon
      || _icoC:=_icon;
         _icoO:=_icon;
         _pico:=_icon*'#';
         {? _pico
         || _icoC:=(_pico-1)+_icon;
            _icoO:=(_pico  )-_icon;
            1
         ?};
         _iname:={? _icoC*':' || ((_icoC*':')-1)+_icoC || .ICONFILE ?};
         {? _icoC*':'=0 || _icoC:=_iname+':'+_icoC ?};
         {? _icoO*':'=0 || _icoO:=_iname+':'+_icoO ?};
         _icoC+'#'+_icoO
      || '#'
      ?}
   "),

: --dodawanie/usuwanie-elementow/komunikatów/pozycji
   obj_meth('add'     ,'dodaje pozycję';_addpar:="
:           ---- Weryfikacja parametrów (__-numer parametru)----------------
            __+=1; _mesg :={?_>=__ & type_of(_[__])=2 || _[__]  ||~~ ?};
            __+=1; _icon :={?_>=__
                           || {? type_of(_[__])=1 ||.ICONFILE+':'+$_[__]
                              |? type_of(_[__])=2 || _[__]
                                                  || ~~
                              ?}
                           || ~~
                           ?};
            __+=1; _color:={?_>=__ & type_of(_[__])=2 || _[__]   ||~~ ?};
            __+=1; _tran :={?_>=__ & type_of(_[__])=1 || _[__]=1 ||~~ ?};
            __+=1; _forml:={?_>=__ & (type_of(_[__])=3 | type_of(_[__])=2) || form(_[__]) ||~~ ?};
:           ----------------------------------------------------------------
            ";
            $("__:=0;"
            +_addpar+"
            {? _mesg=~~ || _mesg:='' ?};
            {? _icon=~~ || _icon:='' ?};
            {? _color=~~|| _color:=''?};
            {? _tran=~~ || _tran:=0  ?};
            {? _forml=~~|| _forml:='sel_exit()'?};

            _icon:=.convicon(_icon);

            {? .is_inited()
            || .TABisOK:=0;
               _lp:=.ARR.add(.LEVEL.current(),_mesg,_icon,_color,_tran,_forml);
               .sbar(_mesg);
               {?_lp
               || _par:=0;
                  _ref:=.add_TAB(_par, _lp, _mesg, _icon, _color,_tran,_forml);
                  {? _ref>0
                  || .ARR.Space.set(.ARR.TABREF,_lp,_ref); _lp
                  |? _ref=0 & _tran & do_state()=2
                  || .ARR.Space.set(.ARR.TABREF,_lp,0.001); _lp
                  || .ARR.LP-=1;0
                  ?}
               ?}
            || FUN.error('Nie zainicjowany obiekt %1.'
                         '\nmetoda .add(''%2''...) nie może być wykonana.'@[!.this,_mesg]);
               0
            ?}
           ")),

   obj_meth('del','kasuje pozycję';"
           _lp:={?_>0
                || {? type_of(_a)=1 || _a
                   |? type_of(_a)=2 || .find_msg(_a)
                                    || 0
                   ?}
                || 0
                ?};
           {? _lp & _lp <= .ARR.size()
           || .TABisOK:=0;
              .ARR.Space.set(.ARR.TABREF,_lp,0);
              1
           || 0
           ?}
           "),

   obj_meth('update','aktualizuje wpis w ARR';$("
            __:=1; _lp :={?_>=__ & type_of(_[__])=1 & _[__] <= .ARR.LP || _[__] || 0 ?};"+
            _addpar+"
            .TABisOK:=0;
            .ARR.update(_lp,,_mesg,.convicon(_icon),_color,_tran,_forml)
           ")),

   obj_meth('chngroot','zmienia przypisanie do korzenia';"
            __:=1;       _lp:={?_>=__ & type_of(_[__])=1 & _[__] <= .ARR.LP || _[__] || 0 ?};
            __:=2; _new_root:={?_>=__ & type_of(_[__])=1 & _[__] <= .ARR.LP || _[__] || 0 ?};
            .TABisOK:=0;
            .ARR.update(_lp,_new_root,~~,~~,~~,~~,~~,~~,~~,~~,~~,~~,~~,~~,~~,~~)
           "),

:: --elementy zastepcze :)
   obj_meth('msgsrv','obsluga msg,info,error,ask';"
           _msg:={? _a<>'' || _a || 'Naciśnij dowolny klawisz.'@?};
           _typ:=_b;
           _mod:=_c;
           _shw:=_d;
           {? _typ='EXCLAM'|| _ico:= 4; _col:='255:128:0,255:255:255'; _kind:='  ----- %1 -----  '['Uwaga'@]
           |? _typ='INFO'  || _ico:= 7; _col:=''                     ; _kind:='  ----- %1 -----  '['Informacja'@]
           |? _typ='ERROR' || _ico:=14; _col:='128:0:0,255:255:255'  ; _kind:='  ----- %1 -----  '['Błąd'@]
           |? _typ='ASK'   || _ico:=15; _col:=''                     ; _kind:='  ----- %1 -----  '['Pytanie'@]
                           || _ico:= 0; _col:=''                    ; _kind:=''
           ?};

           _result:=0;
           _restxt:='';
::         jeżeli jest wiele linii w komunikacie to rozpiszemy to do kolejnych linii.
           {? _mod=0 | _mod=2
           || _txt:=_msg;
              _pos:=_txt*'\n';
              {? _pos
              || .sect_beg(_kind,_ico,_col,_shw); _ico:=''
              || _kind:=~~
              ?};

              {!
              |? _pos
              |! .add(gsub(_pos+_txt,'\n',''),_ico,_col,_shw);
                 _txt:=(_pos+(+'\n')-1)-_txt;
                 _pos:=_txt*'\n'
              !}
           ?};
           {? _mod=1 | _mod=2
           || {? _typ='ASK'
              || _result:=~choice(_msg,.DLGTITLE,'ASK',0,1,2,'&Tak'@,'&Nie'@);
                 _restxt:={? _result || 'Tak' || 'Nie' ?}
              || {? app_info('web_sesid')<>''
                 || web_msg(_msg,.DLGTITLE,_typ)
                 || choice(_msg,.DLGTITLE,_typ)
                 ?}
              ?}
           ?};

           {? _mod=0 | _mod=2
           || {? _txt<>_msg  || _msg:=_txt ?};
              {? _restxt<>'' || _msg:=_msg+' -> '+_restxt ?};

              .add(_msg,_ico,_col,_shw);
              {? _kind<>~~ || .sect_end() ?}
           ?};
           _result
           "),

   obj_meth('msg',"
           _msg:={? _>0 & type_of(_a)=2 || _a || '' ?};
           _mod:={? _>1 & type_of(_b)=1 || _b || .MSGMODE ?};
           _shw:={? _>2 & type_of(_c)=1 || _c || 0 ?};
           .msgsrv(_a,'EXCLAM',_mod,_shw)
           "),

   obj_meth('info',"
           _msg:={? _>0 & type_of(_a)=2 || _a || '' ?};
           _mod:={? _>1 & type_of(_b)=1 || _b || .MSGMODE ?};
           _shw:={? _>2 & type_of(_c)=1 || _c || 0 ?};
           .msgsrv(_a,'INFO'  ,_mod,_shw)
           "),

   obj_meth('error',"
           _msg:={? _>0 & type_of(_a)=2 || _a || '' ?};
           _mod:={? _>1 & type_of(_b)=1 || _b || .MSGMODE ?};
           _shw:={? _>2 & type_of(_c)=1 || _c || 0 ?};
           .msgsrv(_a,'ERROR' ,_mod,_shw)
           "),

   obj_meth('ask',"
           _msg:={? _>0 & type_of(_a)=2 || _a || '' ?};
           _mod:={? _>1 & type_of(_b)=1 || _b || .MSGMODE ?};
           _shw:={? _>2 & type_of(_c)=1 || _c || 0 ?};
           .msgsrv(_a,'ASK' ,_mod,_shw)
           "),

:: --obsluga-sekcji--
   obj_meth('sect_beg','poczatek sekcji';$("__:=0;"+_addpar+"
            {?.add(_mesg,_icon,_color,_tran, ' ') ||.LEVEL.sect_beg(.ARR.LP)?}
            ")),

   obj_meth('sect_end','koniec sekcji';     ".LEVEL.sect_end();echo()",-1,-1),

   obj_meth('sect_clr','czyszczenie sekcji';".LEVEL.sect_clr()",-1,-1),

   obj_meth('set_root','ustalenie nowej sekcji nadrzednej';$("__:=0;"+_addpar+"
            {? var_pres('_b')<>type_of(0) || _b:=1 ?};
            .sect_clr();
            _lp:=.find_msg(_mesg,_b);
            {? _lp<=0
            || {?.add(_mesg,_icon,_color,_tran)||_lp:=.ARR.LP?}
            ?};
            {? _lp>0 || .LEVEL.sect_beg(_lp)?}
           ")),

   obj_meth('select'  ,'pokazuje okienko wertowania z komunikatami';"
             .set_winh({?_>0 & type_of(_a)=2 || _a || .WINTITLE ?});
             .set_msgh({?_>1 & type_of(_b)=2 || _b || .MSGTITLE ?});
            .win_save:={?_>2 & type_of(_c)=3 || _c || $'' ?};
              _always:={?_>3 & type_of(_d)=1 || _d || 0   ?};
              _entera:={?_>4 & type_of(_e)=2 || _e || ''  ?};
              _rozwin:={?_>5 & type_of(_f)=1 || _f || 1   ?};
                _maxH:={?_>6 & type_of(_g)=1 || _g || -1  ?};
              _delsid:={?_>7 & type_of(_h)=1 || _h || 1   ?};
              _execbs:={?_>8
                       || {? type_of(_i)=type_of('')  || $_i
                          |? type_of(_i)=type_of($'') ||  _i
                                                      || $''
                          ?}
                       || $''
                       ?};
             _buttons:={?_>9 & type_of(_j)=1 || _j || 1   ?} & .Futures*'.BTTN.';
             _yesorno:={?_>10 & type_of(_k)=1 || _k || 0 ?};

             {? type_of(.group_obj)>100
             || obj_del(.group_obj)
             ?};
             _result:=0;
             echo();
             {? _tab:=.TAB; var_pres('_tab')>100
             || {? ~.TABisOK || .transfer() ?};
                {? .TAB.first() | _always
                || .TAB.index(.NDX_MSG);
                   .TAB.clear();
                   _wer:={? _maxH>0
                         || {? _maxH<2 & _buttons || _maxH+=1 ?};
                            .TAB.mk_sel(,'P',,'kyoaskzuwalisct',1,1,_maxH,1)

                         |? _maxH=0
                         || _tabsize:=.TAB.size(); .TAB.first();
                            _maxH:={?_tabsize>20 || 20 || _tabsize+1 ?};
                            {? _maxH<2 & _buttons || _maxH+=1 ?};
                            .TAB.mk_sel(,'P',,'kyoaskzuwalisct',1,1,_maxH,1)

                         || .TAB.mk_sel(,'P',,'kyoaskzuwalisct',1,,,1)
                         ?};
                   {? sec_superuser()=0 || .TAB.fld_attr(,2) ?};
                   .TAB.win_sel(_wer);
                   .TAB.hdr_sel();
                   .TAB.hdr_sel(.WINTITLE);
                   .TAB.win_fld(_wer,,'MESSAGE',,,{? .TABMSGLN<=120 || .TABMSGLN || 120 ?},,,.MSGTITLE,.MSGTITLE='');

                   _fml:=\"_result:='';
                          _tab:=cur_tab(1,1);
                          _tab.cntx_psh();
                          _tab.prefix(_tab.ref());
                          _first:=_tab.first();
                          _tab.cntx_pop();
                          {? _first
                          || _result:={? _tab.tr_state()=1
                                      || {?+_tab.ICONO || _tab.ICONO || 'xwin16.png:75' ?}
                                      || {?+_tab.ICONC || _tab.ICONC || 'xwin16.png:74' ?}
                                      ?}
                          || _result:=_tab.ICONC
                          ?};
                          _result
                         \"+'';
                   .TAB.win_fml(_wer,,'MESSAGE',,'ICON_BEFORE',$_fml);

                   _a_rekb:=$('{| cur_tab(1,1) |! {?COLOR<>''''||COLOR||~~?}|}');
                   _a_rozw:={? .SEXISTS || $('exec(''zwrw_all'',''#tree'',cur_tab(1,1),''PARENT'')') || $'' ?};
                   _a_zapis:={? $.win_save<>'' || $(!.this+'.win_save()') || $'' ?};
                   _a_ente0:={? _entera<>'' || $('{? cur_tab(1,1).FORML<>'''' || ($cur_tab(1,1).FORML)() ?}')  || $'' ?};
                   _a_ente1:={? _entera<>'' || $('sel_exit()') || $'' ?};

                   {? _buttons
                   || {? ~_yesorno
                      || _mark:=1;
                         {? _entera<>''
                         || _mark:=0
                         ?};
                         .TAB.win_act(_wer,0,'Formuła','Ok',,,\"sel_exit()\",,_mark,1,\"sel_exit()\",
                           ,'O',,'target=window');
                         _btn:=.TAB.win_btn(_wer,'text=%1,panel=bottom,align=end'['OK'@],'menu:O');
::                         .TAB.btn_sopt(_wer,_btn,'default=%1'[{? _entera<>'' || '0' || '1' ?}]);
                         ~~
                      || _mark:=1;
                         {? _entera<>''
                         || _mark:=0
                         ?};
                         .TAB.win_act(_wer,0,'Formuła','Ok',,,\"sel_exit()\",,_mark,1,\"sel_exit()\",
                           ,'O',,'target=window');
                         .TAB.win_act(_wer,0,'Formuła','Anuluj',,,\"sel_exit()\",,,1,\"sel_exit()\",
                           ,'A',,'target=window');
                         _btn:=.TAB.win_btn(_wer,'text=%1,panel=bottom,align=end'['&OK'@],'menu:O');
::                         .TAB.btn_sopt(_wer,_btn,'default=0');
                         _btn:=.TAB.win_btn(_wer,'text=%1,panel=bottom,align=end'['&Anuluj'@]
                                 ,'key:Esc');
::                         .TAB.btn_sopt(_wer,_btn,'default=%1'[{? _entera<>'' || '0' || '1' ?}]);
                         ~~
                      ?};
                      ~~
                   ?};

                   {? _execbs<>\"\"
                   || _execbs:=$(\"__:=1;
                                  _TAB:=_[__+=1];
                                  _WER:=_[__+=1];
                                  _a_rekb:=_[__+=1];
                                  _a_rozw:=_[__+=1];
                                  _a_zapis:=_[__+=1];
                                  _a_ente0:=_[__+=1];
                                  _a_ente1:=_[__+=1];
                                 \"
                                 +_execbs
                                 );
                      _execbs('pierwszy parametr nieistotny'
                             ,.TAB
                             ,_wer
                             ,_a_rekb
                             ,_a_rozw
                             ,_a_zapis
                             ,_a_ente0
                             ,_a_ente1
                             )
                   || {? _entera<>''
                      || .TAB.win_act(_wer,1,'Formuła',_entera,,,_a_ente1,,1);
                         .TAB.win_act(_wer,0,'Formuła',_entera,,,_a_ente0,,1)
                      ?};
                      {? .SEXISTS
                      ||.TAB.win_act(_wer,0,'Formuła','Rozwiń/zwiń'@@,,'Rozwijanie / zwijanie drzewa'@,,_a_rozw,,,,
                           ,'R',,'target=window')
                      ?};
                      {? $.win_save<>''
                      || .TAB.win_act(_wer,0,'Formuła','Zapisz'@@,,'Zapisanie do pliku'@,,_a_zapis,,,,,'Z');
                         {? _buttons
                         || .TAB.win_btn(_wer,'text=%1'['Zapisz'@],'menu:Z',,,,,,'noempty');
                            ~~
                         ?};
                         ~~
                      ?};
                      .TAB.win_act(_wer,0,'Rekord',,,,_a_rekb);
                      ~~
                   ?};
                   _rozwfml:=${? _rozwin
                              || '{? _a=-1 || 1 || _a ?}'
                              || '{? _a>0 || 1 || 0 ?}'
                              ?};
                   .TAB.tr_fml(_wer,,_rozwfml);
                   .TAB.win_sel(_wer);
                   _result:=.TAB.select();
                   .TAB.win_sel('');
                   {? _wer<>'' & .Futures*'.WINDEL' || .TAB.win_del(_wer) ?};
                   ~~
                ?}
             || 0
             ?};
             {? _delsid || .SESSID:='' ?};
             .win_save:="""";
             _result
           "),

   obj_meth('save_req','zapisuje rekurencyjnie komunikaty do pliku';"
           _pref:=_a;
           _lvl:=_b;
           _file:=_c;
           .TAB.cntx_psh();
           {? .TAB.seek(_pref)
           || fwrite(_file,.convert((_lvl*'   ')+.TAB.MESSAGE));
              .TAB.prefix(_pref);
              {? .TAB.first()
              || {!
                 |? .save_req(.TAB.ref(),_lvl+1,_file);
                    .TAB.next()
                 !}
              ?}
           ?};
           .TAB.cntx_pop();
           ~~
           "),

   obj_meth('save'    ,'zapisuje komunikaty do pliku ';"
           _close:=0;
           _mode:={?_>1 & type_of(_b)=2 || _b || {? .Xutf8 || 'uw' || 'w' ?} ?};
           _plik:={?_>0
                  || {? type_of(_a)=1
                     || _a
                     |? type_of(_a)=119
                     || _a
                     |? type_of(_a)=2
                     || _close:=1;
                        fopen(_a,_mode,1)
                     ?}
                  ?};

           {? {? type_of(_plik)=119 || _plik.is_open() || _plik ?}
           ||
              {? ~.TABisOK || .transfer() ?};
              .TAB.cntx_psh();
              .TAB.prefix(0);
              {? .TAB.first()
              ||
                 {!
                 |?
                    echo('Zapisywanie sekcji: %1'@[.TAB.MESSAGE],'Proszę czekać'@);
                    .save_req(.TAB.ref(),0,_plik);
                    .TAB.next()
                 !}
              ?};
              .TAB.cntx_pop();
              {? _close || fclose(_plik) ?};
              echo();
              1
           || 0
           ?}
           "),
   obj_meth('get_size','podaje liczbe wierszy w tabeli komunikatow';"
              {? ~.TABisOK || .transfer() ?};
              .TAB.cntx_psh();
              .TAB.first();
              _size:=.TAB.size();
              .TAB.cntx_pop();
              _size
           "),
   obj_meth('empty','zwraca 1 gdy tabela komunikatow jest pusta';".get_size()=0"
           ),

   obj_meth('get_msg','zwraca tresc komunikatu o numerze _a';".ARR.get_msg(_a)"
           ,1
           ),
   obj_meth('is_inited','zwraca 1 gdy obiekt zostal zainicjowany';".LEVEL.CLMAX & .ARR.size()"
           ),
   obj_meth('tab','Udostępnia zawartość tabeli TAB';"
              {? ~.TABisOK || .transfer() ?};
              .TAB
           ")
::-------------------------------------------------------------------------------------KONIEC-JCQ--
           )
?};
1


\JCQ_example
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JM [2009] (2008/02/07 10:54)
:: OPIS: Przykład użycia klasy JCQ
::   WE: _a - ...
::  OLD: \JCQ_example/communiq.fml
:: ~OST: INFOPEN
::----------------------------------------------------------------------------------------------------------------------

:: parametr określajacy czy przyklad ma pokazać zachowanie po zerwaniu transakcji
_trans:=1;

exec('JCQ_decl','#message');
{? var_pres('__cq') > 100 || obj_del(__cq)?};

__cq:=obj_new(@.CLASS.JCQ);


: init() - inicjacja struktur
: maksymalna dlugosc komunikatu - 100
: maksymalna liczba komunikatów -  80
: tytuł okienka komunikatów     - 'Okno komunikatów'
: tytuł kolumny komunikatów     - 'Komunikat'
: maksymalna liczba poziomów    -  20
__cq.init(100,1000,'Okno komunikatów','Komunikat',20,"_a");

__cq.add('To będzie prezentacja JCQ',112,'0:128:0');

__cq.sect_beg('Polecenie sect_beg(''Nazwa sekcji'') spowoduje taki wiersz');
__cq.add('a kolejne wiersze będą już ''z wcięciem''',22);
__cq.sect_beg('Sekcja zawsze ma ikonkę katalogu...');
__cq.add('praktycznie ikonki możemy ustalać jedynie dla pozycji');
__cq.add('musi być jakiś standard');
_sect:=__cq.add('sekcję kończymy poleceniem sect_end(), dzięki czemu...');
__cq.sect_end();
__cq.add('przechodzimy poziom wyżej',21);
__cq.add('kolejne sect_end() i...',95);
__cq.sect_end();
__cq.add('jesteśmy na zerowym poziomie');

__cq.sect_beg('Istnieje też możliwość dodawania kolorów');
__cq.add('Czerwony',,'128:0:0');
__cq.add('Zielony',,'0:128:0');
__cq.add('Niebieski',,'0:0:128');
__cq.sect_end();

_sect2:=__cq.sect_beg('Tutaj dodamy fragment do wykorzystania na końcu przykładu');
__cq.add('dodamy pozycję/komunikat:');
__cq.add('Pamiętaj tą ikonkę, przyda się później',29,'128:128:0');
__cq.add('"Nic na siłę"',112,'0:0:128');
__cq.sect_end();

__cq.select();
__cq.chngroot(_sect2,_sect);
__cq.select();

__cq.add('Teraz zajmiemy się zachowaniem w przypadku transakcji',4);
{? _trans || do()?};
__cq.sect_beg('Transakcja uruchomiona, ale muststay=0 lub brak');
__cq.add('poki transakcja nie zostanie zerwana');
__cq.add('wszystko jest ok',91);
__cq.sect_beg('Dodajemy sekcję');
__cq.add('wszystko gra',91);
__cq.sect_end();
__cq.add('ale jak się zrobi w trakcie undo()...',,'255:0:0,255:255:0',1);
__cq.add('pozostają tylko komunikaty...',,,1);
__cq.add('w których muststay=1',56,,1);
__cq.sect_beg('Nawet jeśli są gdzieś na niższym poziomie');
__cq.add('a ich komunikat nadrzędny nie przetrwał "próby transakcji"');
__cq.add('przechodzą do poziomu zerowego',,'255:0:0,255:255:255',1);
__cq.sect_end();
{? _trans
|| undo();
   end()
?};
__cq.select(,,".save('@!example.log');1",1);

__cq.sect_beg('Istnieje też możliwość usuwania poszczególnych pozycji');
__cq.add('do tego celu używamy polecenia .del([komunikat])');
__cq.add('wykonamy teraz polecenie:');
__cq.add('.del(''Sekcja zawsze ma ikonkę katalogu...'')',,'128:0:255');
__cq.del('Sekcja zawsze ma ikonkę katalogu...');
__cq.add('i sekcji już nie ma... a była');
__cq.sect_end();

{? _trans || do()?};
__cq.sect_beg('Podobnie rzecz się ma w przypadku otwartych sekcji w tanskakcji');
__cq.add('wszystko gra dopoki transakcja nie zostanie zerwana');
{? _trans
|| undo();
   end()
?};
__cq.select(,,".save('@!example.log');1",1);

__cq.sect_beg('Zakładamy sobie podsekcje');
__cq.add('Podajemy komunikaty...');
__cq.add('ale po zerwaniu tansakcji...');
__cq.add('podsekcji sekcji założonej w transakcji, nie uświadczymy');
__cq.sect_end();
__cq.sect_beg('Rozwiązaniem jest dodanie muststay=1',,1);
__cq.add('wtedy sekcja będzie na poziomie 0');
__cq.add('ale będzie',112);
__cq.sect_end();
__cq.sect_end();
__cq.sect_end();

__cq.sect_beg('Czasami jest tak, że rozwijamy się',,1);
__cq.sect_beg('...rozwijamy się...');
__cq.sect_beg('...rozwijamy się...');
__cq.sect_beg('...rozwijamy się...');
__cq.sect_beg('...rozwijamy się...');
__cq.sect_beg('...rozwijamy się...');
__cq.sect_beg('...rozwijamy się...');
__cq.add('...a co gdy chcemy przejść od razu do poziomu 0',15);
__cq.add('wykorzystujemy wtedy metodę .sect_clr()');
__cq.sect_clr();
__cq.add('która przenosi nas od razu na poziom 0');
__cq.add('a kolejne .sect_end() nie powodują błędów');
__cq.add('pod warunkiem, że nie wystąpią <dziko> w kodzie');

__cq.sect_beg('Zdarzają się jednak przypadki, że nie chcemy drzewka');
__cq.add('chcemy dodać element gdzieś nie po kolei...');
__cq.sect_beg('Mamy do dyspozycji metodę .set_root()');
__cq.sect_beg('której efekty moga byc dwojakie');
__cq.add('Sekcja do której chcemy przypisać komunikat nie istnieje');
__cq.add('wtedy program zakłada NOWĄ',55);
__cq.set_root('SEKCJĘ...',55);
__cq.add('a kolejne komunikaty już są w nowej sekcji');
__cq.add('Pamiętać należy, że to jest nowa sekcja!',4);
__cq.add('którą należy zakończyć poleceniem sect_end()');
__cq.sect_end();
__cq.sect_clr();
__cq.add('a teraz powtórzymy zagłębienia sekcji Ctrl+C',56);
__cq.sect_beg('Rozwijamy się...');

__cq.msg('Komunikat z drugim parametrem = 0',0);
__cq.msg('Komunikat z drugim parametrem = 1',1);
__cq.msg('Komunikat z drugim parametrem = 2',2);

__cq.info('Informacja z drugim parametrem = 2',2);
__cq.error('Błąd z drugim parametrem = 2',2);

{? __cq.ask('Czy na ten komunikat jest widoczny?',2)
|| __cq.add('wybrano Tak')
|| __cq.add('wybrano Nie')
?};

{? __cq.ask('Teraz inna próba\n'+'A czy ten komunikat NIE jest widoczny?',2)
|| __cq.add('czyli jest niewidoczny')
|| __cq.add('czyli jest widoczny')
?};

__cq.info('Jeszcze sprawdzimy,\njak się zachowuje informacja. \nCzy tak samo jak ask?',0);
__cq.msg('Jeszcze sprawdzimy,\njak się zachowuje uwaga. \nCzy tak samo jak info?',0);
__cq.error('Jeszcze sprawdzimy,\njak się zachowuje błąd. \nCzy tak samo jak uwaga?',0);

__cq.sect_beg('...rozwijamy się...');
__cq.sect_beg('...rozwijamy się...');
__cq.sect_beg('...rozwijamy się...');
__cq.sect_beg('...rozwijamy się...');
__cq.sect_beg('...rozwijamy się...');
__cq.add('a teraz przełączymy się na sekcję/komunikat');
__cq.add('który został już wcześniej wprowadzony');
__cq.add('a mianowicie skoczymy do komunikatu');
__cq.add('"Nic na siłę"',29,'0:0:128');
__cq.add('do tego celu wykonamy metodę .set_root(''"Nic na siłę"'') i...');
__cq.add('patrzymy wyżej i jest...',12);
__cq.set_root('"Nic na siłę"');
__cq.add('i dodajemy teraz już do tej sekcji');
__cq.add('pamiętać o sect_end()',4);
__cq.add('ale teraz co tam... idzmy na koniec lub dalej, jak kto woli...');
__cq.add('sect_clr() i...',31);
__cq.sect_clr();
__cq.add('Jesteśmy na poziomie 0',31);

__cq.select('Koniec wędrówki','Drzewo komunikatów');
__cq.save('cosik.txt');
_file:=fopen('@d:/jakisplik.trt','a');
{?_file
|| __cq.save(_file);
   fclose(_file)
?};

__cq.init(130,30,,,3);
{?__cq.empty()
|| __cq.add('.empty() informuje nas gdy tabela komunikatów jest pusta')
?};
__cq.add('.get_size() informuje nas, że w tej chwili w tabeli znajduje się...');
__cq.add(form(__cq.get_size())+' wierszy');
__cq.sect_beg('Ciekawostką jest 5 parametr .select()');
__cq.add('okienko zostało wywołane jako: .select(''Jak działa nam .get_size() i empty()?'',,,,''Dalej'',0)');
__cq.add('i pojawiła się nam nowa opcja ''DALEJ''',112);
__cq.add('Dodatkowo, parametr 6-y = 0, spowodował, że sekcje w okienku były zwinięte',7,'104:26:234');
__cq.sect_clr();
__cq.add('Jeśli dodatkowo podamy 7-y parametr = 0, to zamiast ikon folderów, zobaczymy te podane',74);
__cq.add('jak w następnym okienku',34,'0:192:0');

__cq.sect_end();
__cq.select('Jak działa nam .get_size() i empty() ?',,,,'Dalej',0);

__cq.init(100,10,,,3);

__cq.sect_beg('Teraz troszeczkę eksperymentów');
__cq.add('Aktualna godzina',134,,,"msg(form(time()),'Aktualna godzina')");
__cq.add('Aktualna data'   , 16,,,"msg(form(date()),'Aktualna data')");
__cq.add('Zakończenie pracy z okienkiem',134,,);

__cq.sect_end();
__cq.select('JCQ_example w #message.fml',,,,'Wykonaj',0);

__cq.init(100,10,,,3);
__cq.sect_beg('To chyba tyle...','xwin16.png:38');
__cq.sect_beg('w razie pytań lub wątpliwości...',34);

_pos:=__cq.add('e-mail: ',15,'128:192:0');
_del:=__cq.add('zobacz na ostatnim juz okienku');
__cq.sect_end();
__cq.sect_end();

__cq.select('JCQ_example w #message.fml',,,,,,0);

__cq.del(_del);
__cq.update(_pos,'e-mail: Jaroslaw.Matachowski@macrologic.pl','xwin16.png:35');

__cq.select('JCQ_example w #message.fml',,,,'Koniec',0);

obj_del(__cq);
&__cq;
1


\JCQ_benchmark
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.10]
:: OPIS: test wydajnosciowy dla dużej liczby komunikatów
::  OLD: \benchmark/communiq.fml
::----------------------------------------------------------------------------------------------------------------------
_time:=time();
echo('Tworzenie obiektu komunikatów.'@);
__cq:=obj_new(@.CLASS.JCQ);

_siz_a:=100;
_siz_b:=50;
_siz_c:=10;
_siz:=_siz_a*(_siz_b*(_siz_c+1)+1)+1;
echo('Inicjalizacja obiektu dla %1 komunikatów.'@[$_siz]);
__cq.init(255,,,,,"_a");
echo('');
_sum:=0;
{! _rr:=1.._siz_a
|! __cq.sect_beg($_rr+(255*'-'));
   _sum+=1;
   progress(_sum/_siz*100,$_sum+'/'+$_siz);
   {! _ss:=1.._siz_b
   |! __cq.sect_beg($_ss+(255*'.'));
      _sum+=1;
      {! _cc:=1.._siz_c
      |! _sum+=1;
         __cq.add($_cc+(255*'_'))
      !};
      __cq.sect_end()
   !};
   __cq.sect_end()
!};
prgs_clr();
::__cq.select(,,".save('testtest.log','uw');1",1);
__cq.save('jcqbench.log','uw');
obj_del(__cq);
echo();
time()-_time


\ini_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: tworzenie tabeli komunikatow
::   WE: [_a] - tytul okna wertowania
::       [_b] - element grupujacy
::       [_c] - maksymalna liczba komunikatow [PARAMETR WYŁĄCZONY]
::       [_d] - 1-bez konwersji 0(domyslnie)-z konwersja
::       [_e] - maksymalna liczba znakow komunikatu (jezeli 0 to brak ustawienia max liczby znakow - zostaje domyslna)
::  OLD: \ini_kom/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=4 || {? type_of(_d)<>1 || _d:=0 ?} || _d:=0 ?};
_b:={? _>=2 & type_of(_b)=2 || _b || '' ?};
{? _>4 || {? type_of(_e)<>1 || _e:=0 ?} || _e:=0 ?};

VAR_DEL.delete('__kom','__kom_gr','__lp');
__kom:=obj_new(@.CLASS.JCQ);
__kom_on:=0;
__lp:=0;
{? ~_d
|| {? _e>0
   || __kom.init(_e,,_a,'')
   || __kom.init(,,_a,'')
   ?}
|| {? _e>0
   || __kom.init(_e,,_a,'',,"_a")
   || __kom.init(,,_a,'',,"_a")
   ?}
?};
{? _b<>'' || __kom.set_root(_b)?};
1


\end_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wyswietlenie komunikatow
::  OLD: \end_kom/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__kom')>100
||
   {? var_pres('__kom_on')<0 | var_pres('__kom_on')>0 & __kom_on
   ||
      __kom.select(,,,,{? _>0 & type_of(_a)=2 || _a || ''?})
   ?};
   VAR_DEL.delete('__kom','__kom_gr','__kom_on')
?};
1


\add_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: dodanie komunikatu _a dla elementu grupujacego _c do tabeli lub na stos
::   WE: [_a] - komunikat
::       [_b] - ikona (numer)
::       [_c] - element grupujacy
::       [_d] - liczba porzadkowa
::       [_e] - czy zapisywac do tabeli pomimo zalazonej transakcji (1 - zapisuje pomimo transakcji)
::       [_f] - wl wyswietlanie wyniku
::  OLD: \add_kom/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__kom_gr')<>2   || __kom_gr:=''     ?};
_sect:={? _>2 & type_of(_c)=2 || _c || __kom_gr ?};
_tran:={? _>4 & type_of(_e)=1 || _e || 1 ?};
{? var_pres('_f')<>type_of(1) || __kom_on:=1 || {? var_pres('__kom_on')=type_of(1) & __kom_on=0 || __kom_on:=_f ?} ?};

{? var_pres('__kom')>100
||
:: [rr] uwaga dla powstania sekcji na poziomie zerowym nie przekazuje parametru _tran tylko 1
   {? _sect<>'' || __kom.set_root(_sect,,,1) ?};
   __kom.add(_a,_b,,_tran)
?};
''


\multichoice_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Aktualizuje tablicę wynikową dla metody FUN.multichoice
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().multi_env;

{! _it:=1.._env.OPT_SIZE
|! _checkbox_id:='checkbox'+$_it+'@pane_checkbox';
   _value:=exec('get_value','#desktop','',_env.WIN_ID,_checkbox_id);
   {? _value='true'
   ||
      _param:=_env.OPTIONS[_it];
      {? var_pres('_param_obj')>100
      || obj_del(_param_obj)
      ?};
      _param_obj:=params_exec('multichoice_parse','#message',_param);
      _param_obj.SELECTED:='true';
      _env.RESULT[_it+1]:=exec('to_string','#convert',_param_obj);
      ~~
   || _env.RESULT[_it+1]:=''
   ?}
!};
~~


\multichoice_parse
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Przetwarza stringa na obiekt z parametrami
::   WE: _a - STRING - parametr do przetworzenia
::   WY: obj_new - obiekt
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().multi_env;
_param:=_a;

_result:=obj_new('TEXT','SELECTED','KIND');

_result.TEXT:='';
_result.SELECTED:='';
_result.KIND:='checkbox';

{? _param<>'' & _param*';'>0
||
:: Najpierw odzielam parametry
   {? var_pres('_split')>100
   || obj_del(_split)
   ?};
   _split:=spli_str(_param,';');
   {! _it_param:=1..obj_len(_split)
   |!
      _parametr:=_split[_it_param];

      {? _parametr<>''
      || exec('multichoice_decode','#message',_parametr,_result)
      ?}
   !}
||
:: Jest tylko jeden parametr
   exec('multichoice_decode','#message',_param,_result)
?};
_result


\multichoice_decode
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Przypisuje wartości parametrów przekazanemu obiektowi
::   WE: _a - STRING - parametr
::       _b - obj_new - obiekt który wypełnić
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_param:=_a;
_obj:=_b;

{? var_pres('_split')>100
|| obj_del(_split)
?};
_split:=spli_str(_param,'=');
{? obj_len(_split)>1
|| _param_name:=_split[1];
   _param_val:=_split[2];

   {? form(_param_name)='text'
   || _obj.TEXT:=_param_val
   |? form(_param_name)='selected'
   || {? _param_val='T' | _param_val='true'
      || _obj.SELECTED:='true'
      ?}
   |? form(_param_name)='kind'
   || _obj.KIND:=_param_val
   ?}
?};
~~


\err_rec_acc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Treść komunikatu o braku dostępu do wiersza tabeli.
::   WE: _a REFERENCE/INTEGER - wskazanie lub numer wiersza
::       _b [STRING/TABLE] - akronim lub alias tabeli jeśli _a typu INTEGER
::   WY: treść komunikatu
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null)
|| {? _a<>null
   || 'Brak dostępu do wiersza %1 tabeli %2.'@[$ref_num(_a),2-!ref_tab(_a)]
   || 'Brak dostępu do wiersza tabeli.'@
   ?}

|? var_pres('_a')=type_of('')
|| {? type_of(ref_tab(_a))=type_of(SYSLOG)
   || 'Brak dostępu do wiersza %1 tabeli %2.'@[$ref_num(_a),2-!ref_tab(_a)]
   || 'Brak dostępu do wiersza tabeli.'@
   ?}

|? var_pres('_a')=type_of(0)
|| {? _a<>0
   || {? var_pres('_b')=type_of('') & _b<>''
      || 'Brak dostępu do wiersza %1 tabeli %2.'@[$_a,_b]
      |? var_pres('_b')=type_of(SYSLOG)
      || 'Brak dostępu do wiersza %1 tabeli %2.'@[$_a,2-!_b]
      || 'Brak dostępu do wiersza %1 tabeli.'@[$_a]
      ?}
   |? var_pres('_b')=type_of('') & _b<>''
   || 'Brak dostępu do wiersza tabeli %1.'@[_b]
   |? var_pres('_b')=type_of(SYSLOG)
   || 'Brak dostępu do wiersza tabeli %1.'@[2-!_b]
   || 'Brak dostępu do wiersza tabeli.'@
   ?}

|| 'Brak dostępu do wiersza tabeli.'@
?}


\err_rec_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Treść komunikatu o błędzie zapisu wiersza tabeli.
::   WE: _a REFERENCE/INTEGER - wskazanie lub numer wiersza
::       _b [STRING/TABLE] - akronim lub alias tabeli
::   WY: treść komunikatu
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null)
|| {? _a<>null
   || 'Błąd modyfikacji wiersza %1 tabeli %2.'@[$ref_num(_a),2-!ref_tab(_a)]
   || 'Błąd modyfikacji wiersza tabeli.'@
   ?}

|? var_pres('_a')=type_of(0)
|| {? _a<>0
   || {? var_pres('_b')=type_of('') & _b<>''
      || 'Błąd modyfikacji wiersza %1 tabeli %2.'@[$_a,_b]
      |? var_pres('_b')=type_of(SYSLOG)
      || 'Błąd modyfikacji wiersza %1 tabeli %2.'@[$_a,2-!_b]
      || 'Błąd modyfikacji wiersza %1 tabeli.'@[$_a]
      ?}
   |? var_pres('_b')=type_of('') & _b<>''
   || 'Błąd modyfikacji wiersza tabeli %1.'@[_b]
   |? var_pres('_b')=type_of(SYSLOG)
   || 'Błąd modyfikacji wiersza tabeli %1.'@[2-!_b]
   || 'Błąd modyfikacji wiersza tabeli.'@
   ?}

|| 'Błąd modyfikacji wiersza tabeli.'@
?}


\err_not_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [23.25]
:: OPIS: Treść komunikatu o błędnym akronimie tabeli.
::   WE: _a [STRING] - nie akronim tabeli
::   WY: treść komunikatu
::----------------------------------------------------------------------------------------------------------------------
'"%1" nie jest akronimem tabeli.'@[_a]


\err_fml_lang
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [23.25]
:: OPIS: Treść komunikatu o wykryciu błędu w składni formuły.
::   WE: _a [STRING/RULE] - treść formuły
::   WY: treść komunikatu
::----------------------------------------------------------------------------------------------------------------------
'Wykryto błąd składniowy formuły:\n%1'@[''+_a]


\err_fml_exec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [23.25]
:: OPIS: Treść komunikatu o błędzie formuły.
::   WE: _a [STRING/RULE] - treść formuły
::   WY: treść komunikatu
::----------------------------------------------------------------------------------------------------------------------
'Wystąpił błąd wykonania formuły:\n%1'@[''+_a]


\handle_fml_err
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [23.25]
:: OPIS: Obsługa błędu wykonania formuły
::   WE: _a [STRING/RULE] - treść formuły
::   WY: 0/1 - bez błędu/wystąpił błąd
::----------------------------------------------------------------------------------------------------------------------
_err:=1;
{? in_error() || FUN.error(exec('err_fml_lang','#message',_a))
|? errno() || FUN.error(exec('err_fml_exec','#message',_a))
|| _err:=0
?};
:: wyczyść stos błędów
in_error();
errno();
_err

:Sign Version 2.0 jowisz:1048 2023/06/23 14:13:35 29047c9d9ed811fb322c4374e555a9d9aca4cdaa60941b2eb9abbf54aa5f560517184ea57c122f23fb8a325601b1c3c3a40ad39109a8b14995bc713f2b3417dcd74cea41146de93df9bffca187976488849c1a5622e378b56371591456ef697846ebb6383e6116aa0a5507c5aea3d00412ef5b0846a4de1b55a31482e233ccf0
