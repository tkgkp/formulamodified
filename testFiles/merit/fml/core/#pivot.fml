:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku : #pivot.fml
:: Utworzony   : 2003/05/20
:: Autor       : GS
::======================================================================================================================
:: Zawartosc   : Obiekt umozliwiajacy tworzenie "kwerendy krzyzowej" z zestawu rekordow.
::======================================================================================================================


: Deklaracja klasy PIVOT
:
: tworzenie obiektu
:    obj_new(@.CLASS.PIVOT,
:            [zestaw_danych],
:            [kolumna_nagłówków],
:            [funkcja_agregująca],
:            [agregowana_kolumna],
:            [kolumna_grupowania_1],
:            [kolumna_grupowania_n]
:           )
:
: konfiguracja poza konstruktorem
:    zestaw_danych      - SRC:=alias
:    kolumna_nagłówków  - colfld(akronim)
:    funkcja_agregująca - method('sum'|'min'|'max'|'avg')
:    agregowana_kolumna - valfld(akronim)
:    kolumny_grupowania - grpcol(anronim_1,...,akronim_n)
:
: dodatkowe parametry kwerendy
:    kolumna_sumy_wiersza    - total(0|1)
:    kolumna_liczby_rekordów - count(0|1)
:    wiersz_podsumowania     - dosum(0|1)
:
: metody dodatkowe
:    fld_num - liczba pól w buforze
:    fld_acr(numer) - akronim pola w buforze
:    fld_name(numer) - etykieta pola
:    fld_val(numer) - wartość pola
:    sfld_num - liczba pól w wierszu podsumowania
:    sfld_acr(numer) - akronim pola w wierszu podsumowania
:    sfld_val(numer) - wartość pola w wierszu podsumowania
:    valid - sprawdzenie, czy wynik zapytania jest poprawny
:
: wywołanie metody make rozpocznie proces tworzenia zapytania wynikowego
: Uwagi:
: 1. zalecane jest aby zestaw rekordów był wynikiem zapytania SQL
: 2. ponieważ utworzenie zapytania krzyżowego może się nie powieść (np. pusty
:    zestaw danych wejściowych) przed wykorzystaniem wyniku zaleca się prze-
:    prowadzenie testu przy pomocy metoty valid
:
\object
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Definicja klasy PIVOT.
::   WE:
::   WY:
::  OLD: \object/skid_pvt.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('PIVOT',@.CLASS)<=0
|| obj_decl('PIVOT',

   obj_fld('SRC',~~),
   obj_fld('OUT',~~),
   obj_fld('SUM',~~),
   obj_fld('NAME',~~),

   obj_fld('COLFLD',''),
   obj_fld('VALFLD',''),
   obj_fld('GRPFLD',''),
   obj_fld('METHOD','sum'),

   obj_fld('TOTAL',0),
   obj_fld('COUNT',0),

   obj_fld('DOSUM',0),

   obj_meth('__init',"
      {? var_pres('_b')=type_of(SYSLOG) || _a.SRC:=_b ?};
      {? var_pres('_c')=type_of('') || _a.colfld(_c) ?};
      {? var_pres('_d')=type_of('') || _a.method(_d) ?};
      {? var_pres('_e')=type_of('') || _a.valfld(_e) ?};
      {? _>5
      || {! _arg:=6.._ |! _a.GRPFLD+=_[_arg]+',' !};
         _a.GRPFLD:=_a.GRPFLD-1
      ?}"),

   obj_meth('ret',"_a"),

   obj_meth('fld_num',".OUT.fld_num()"),
   obj_meth('sfld_num',".SUM.fld_num()"),

   obj_meth('fld_acr',".OUT.fld_acr(_a)",type_of(0)),
   obj_meth('sfld_acr',".SUM.fld_acr(_a)",type_of(0)),

   obj_meth('fld_name',"
      {? _a>=1 & _a<=.fld_num()
         || {? _a<=obj_len(.NAME) || .NAME[_a] ?}
         || ''
      ?}",
      type_of(0)),

   obj_meth('fld_val',"($('_a.'+.OUT.fld_acr(_a)))(.OUT)",type_of(0)),
   obj_meth('sfld_val',"($('_a.'+.SUM.fld_acr(_a)))(.SUM)",type_of(0)),

   obj_meth('colfld',
      "{? _a<>'' || .COLFLD:=_a ?}; .ret(.)",
      type_of('')),

   obj_meth('valfld',
      "{? _a<>'' || .VALFLD:=_a ?}; .ret(.)",
      type_of('')),

   obj_meth('grpfld',"
      {? _
      || {! _arg:=1.._ |! .GRPFLD+=_[_arg]+',' !};
         .GRPFLD:=.GRPFLD-1
      ?};
      .ret(.)"),

   obj_meth('method',
      "{? ',sum,min,max,avg,count,'*(','+_a+',') || .METHOD:=_a ?}; .ret(.)",
      type_of('')),

   obj_meth('total',".TOTAL:=_a<>0; .ret(.)",type_of(0)),

   obj_meth('count',".COUNT:=_a<>0; .ret(.)",type_of(0)),

   obj_meth('dosum',".DOSUM:=_a<>0; .ret(.)",type_of(0)),

   obj_meth('make',"
      {? .validate() || .prepare() ?};
      .ret(.)"),

   obj_meth('validate',"
      var_pres('SRC',.)=type_of(SYSLOG) &
      var_pres('COLFLD',.)=type_of('') & .COLFLD<>'' &
      var_pres('VALFLD',.)=type_of('') & .VALFLD<>'' &
      var_pres('GRPFLD',.)=type_of('') & .GRPFLD<>'' &
      var_pres('METHOD',.)=type_of('') & .METHOD<>'' &
      var_pres('TOTAL',.)=type_of(0) &
      var_pres('COUNT',.)=type_of(0)"),

   obj_meth('prepare',"exec('make','#pivot',.); .ret(.)"),
   obj_meth('valid',"type_of(.OUT)=type_of(SYSLOG)")
   )
?}


\make
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Rozpoczyna proces tworzenia zapytania wynikowego
::   WE:
::   WY:
::  OLD: \make/skid_pvt.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_col:=sql('select distinct :_b from :_a order by :_b',_a.SRC,_a.COLFLD)).first()
|| {? ',sum,avg,count,'*_a.METHOD=0 || _a.TOTAL:=_a.COUNT:=0 ?};

   _name:=username*'.'-username;

   _file:=obj_new(7);
   _file[1]:='q'+_name+'.m.sql';
   _file[2]:='s'+_name+'.m.sql';
   _file[3]:='g'+_name+'.m.sql';
   _file[7]:=1;

   {! _ii:=1..3
   |! _file[3+_ii]:=fopen(_file[_ii],'w',1);
      _file[7]:=((_file[3+_ii]<>0) & _file[7])
   !};

   {? _file[7]
   || _col_type:=type_of(($('_a.'+_a.COLFLD))(_a.SRC));
      _val_type:=type_of(($('_a.'+_a.VALFLD))(_a.SRC));
      _null_val:={? _val_type=4 || 'null'
                 |? _val_type=2 || '\'\''
                 || '0'
                 ?};
      &_val_type;

      _union:='union all select '+_a.GRPFLD;
      fwrite(_file[5],'select ');
      fwrite(_file[6],'select '+_a.GRPFLD);

      {? _a.TOTAL
      || _union+=', '+_a.VALFLD+' PQ_TOTAL';
         _s:=', sum(PQ_TOTAL) PQ_TOTAL';
         fwrite(_file[5],2-_s);
         fwrite(_file[6],_s)
      ?};

      {? _a.COUNT
      || _union+=', 1 PQ_COUNT';
         _s:=', sum(PQ_COUNT) PQ_COUNT';
         fwrite(_file[5],{? ~_a.TOTAL || 2 ?}-_s);
         fwrite(_file[6],_s)
      ?};

      {! _ii:=1
      |? fwrite(_file[4],{? _ii=1 || 10 ?}-_union);
         fwrite(_file[5],{? _ii<>1 | _a.TOTAL | _a.COUNT || ',' || '' ?}+' sum(PQ_'+$_ii+') PQ_'+$_ii);
         fwrite(_file[6],', '+_a.METHOD+'(PQ_'+$_ii+') PQ_'+$_ii);
         {? _ij:=_ii-1
         || {! _ik:=1.._ij |! fwrite(_file[4],', '+_null_val+' PQ_'+$_ik) !}
         ?};
         fwrite(_file[4],', '+_a.VALFLD+' PQ_'+$_ii);
         {? _ii<_col.size()
         || {! _ij:=(_ii+1).._col.size() |! fwrite(_file[4],', '+_null_val+' PQ_'+$_ij) !}
         ?};
         _cmp_val:=($('_a.'+_a.COLFLD))(_col);
         fwrite(_file[4],
                ' from :_a where '+_a.COLFLD+'='+
                {? _col_type=1 || form(_cmp_val,,,'9.')
                |? _col_type=2 || '\''+_cmp_val+'\''
                |? _col_type=4 || 'to_date(\''+_cmp_val$1+'\')'
                || 'null'
                ?});
         _col.next()
      !};
      fwrite(_file[5],' from :_a');
      fwrite(_file[6],' from :_a group by '+_a.GRPFLD);

      {! _ii:=4..6 |! fclose(_file[_ii]); _file[_ii]:=0 !};

      _a.OUT:=sql_exec(_file[3]-4,sql_exec(_file[1]-4,_a.SRC));
      {? _a.DOSUM || _a.SUM:=sql_exec(_file[2]-4,_a.OUT) ?};

      {! _ii:=1..3 |! ferase(_file[_ii],1) !};

      _col.first();
      _tmp:=_a.GRPFLD;
      {! _grp_len:=1 |? _zn:=_tmp*',' |! _tmp:=_zn-_tmp !};

      {? type_of(_a.NAME)>=100 || obj_del(_a.NAME) ?};
      _a.NAME:=obj_new(_grp_len+_a.TOTAL+_a.COUNT+_col.size());
      {! _ii:=1..obj_len(_a.NAME) |! _a.NAME[_ii]:='' !};

      (_str:=obj_new(@.CLASS.STRING)).split(_a.GRPFLD,',');
      {! _ii:=1 |? (_tmp:=_str.get_word())<>'' |! _a.NAME[_ii]:=form(_tmp) !};
      {? _a.TOTAL || _a.NAME[_grp_len+1]:='Razem'@ ?};
      {? _a.COUNT || _a.NAME[_grp_len+_a.TOTAL+1]:='Liczba'@ ?};
      {! _ii:=_grp_len+_a.TOTAL+_a.COUNT+1
      |? _val:=($('_a.'+_a.COLFLD))(_col);
         _a.NAME[_ii]:={? type_of(_val)=type_of(0) || $_val || form(_val) ?};
         _col.next()
      !}
   ?};

   {! _ii:=4..6
   |! {? _file[_ii] || fclose(_file[_ii]); ferase(_file[_ii-3],1) ?}
   !}
?}

:Sign Version 2.0 jowisz:1028 2019/06/07 15:58:47 e12dc275dea726afc0594aa5cdf71f67a4fa34788dabdd6a4ddf4dad3512af947731209c917cec5b3d8816d65dc8875d3a2c8094a324eccff68ae2ab363c8fa63fdd4305397aeadad06576696e9979c3fe69f1510735c8aeb6db36113bb7df6f773e64efe66d518224fc5487a2e28168323c35d223ced6f8f3fe4236b45ea163
