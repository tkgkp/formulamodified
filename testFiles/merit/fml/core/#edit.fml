:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: #edit.fml
:: Utworzony: 17.03.2015
:: Autor: WH
::======================================================================================================================
:: Zawartość: Uniwersalne formuły ułatwiajace edycję różnych typów danych
::======================================================================================================================


\edit_string
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Redagowanie wartości typu STRING
::   WE: [_a] - STRING - wartość początkowa
::       [_b] - STRING - nazwa parametru
::       [_c] - RULE - formuła walidująca
::       [_d] - RULE - formuła na F3
::       [_e] - INTEGER - 0/[1] - czy redakcja (domyślnie) / tylko pogląd
::   WY: STRING - zredagowana wartość lub ~~ jeśli przerwano redakcję
::  TAG: <PUBLICZNA><REDAKCJA>
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
params_set(params_get());
{? var_pres('_a')=type_of('') || _value:=_a || _value:='' ?};
{? var_pres('_b')=type_of('') || _name:=_b || _name:='' ?};
{? var_pres('_c')=type_of("") || _valid:=_c || _valid:="1" ?};
{? var_pres('_d')=type_of("") || _fml_f3:=_d || _fml_f3:="" ?};
{? var_pres('_e')=type_of(0) || _edit:=_e || _edit:=1 ?};

_tab:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'VAL','STRING[255]','String'@
);
_tab.VAL:=_value;
_red:=_tab.mk_edit(FUN.TYT,0,'#editstringcore');

_label_limit:=60;
_labels:=exec('lines','#string',_name,_label_limit);
_labels.first();

{? _fml_f3<>""
|| _tab.fld_fml('VAL','F3',_fml_f3);
   _tab.win_efld(_red,_tab,'VAL',,,100,0,,_labels.LINE,,,,'F3_button=1')
|| _tab.win_efld(_red,_tab,'VAL',,,100,0,,_labels.LINE)
?};
_tab.efld_opt(_red,'mark=1',,'VAL');

{? _labels.size()>1 & _labels.next()
||
   {!
   |?
::    Dodaje puste etykiety żeby zmieścić cały opis
      _lbl:=_labels.LINE;
      _tab.win_efld(_red,AH,'H',,,,,,_lbl);
      _labels.next()
   !}
?};

exec('ok_esc','#window',_tab,_red);
_tab.win_edit(_red);

{? _edit
|| {? _tab.edit(_valid)
   || _result:=_tab.VAL
   ?}
|| _tab.display()
?};
_result


\edit_number
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Redagowanie wartości typu NUMBER
::   WE: [_a] - NUMBER - wartość początkowa
::       [_b] - STRING - nazwa parametru
::       [_c] - INTEGER - ilość miejsc po przecinku podczas wyświetlania i redagowania, jeśli nie podane to
::                        redagować można ile wlezie, natomiast wyświetlanie zaokrąglone do zera
::       [_d] - REAL - zakres: minimum (wartość musi być większa lub równa)
::       [_e] - REAL - zakres: maksimum (wartość musi być mniejsza lub równa)
::       [_f] - RULE - formuła walidująca (wywoływana po sprawdzeniu zakresu, walidować wartość cur_tab(1,1).VAL)
::       [_g] - STRING - nazwa dodatkowego przycisku z lewej strony
::       [_h] - RULE - formuła na dodatkowy przycisk z lewej strony
::   WY: REAL - zredagowana wartość lub ~~ jeśli przerwano redakcję
::  TAG: <PUBLICZNA><REDAKCJA>
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
{? var_pres('_a')=type_of(0) || _value:=_a || _value:=0.0 ?};
{? var_pres('_b')=type_of('') || _name:=_b || _name:='' ?};
{? var_pres('_c')=type_of(0) || _precision:=_c || _precision:=-1 ?};
{? var_pres('_d')=type_of(0) || _min:=_d || _min:=~~ ?};
{? var_pres('_e')=type_of(0) || _max:=_e || _max:=~~ ?};
{? var_pres('_f')=type_of("") || _valid:=_f || _valid:="1" ?};
{? var_pres('_g')=type_of('') || _lbtn_name:=_g || _lbtn_name:='' ?};
{? var_pres('_h')=type_of("") || _lbtn_fml:=_h || _lbtn_fml:="" ?};

_tab:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'VAL','REAL','Wartość'
);
_tab.VAL:=_value;
_edit:=_tab.mk_edit(FUN.TYT,0,'#editnumbercore');

_label_limit:=60;
_labels:=exec('lines','#string',_name,_label_limit);
_labels.first();

{? _precision>-1
|| _fml:='\'out_prec='+$_precision+'\'';
   _tab.fld_fml('VAL','DISPLAY_FORMAT',$_fml);
   _fml:='\'in_prec='+$_precision+'\'';
   _tab.fld_fml('VAL','EDIT_FORMAT',$_fml);
   _tab.win_efld(_edit,_tab,'VAL',,,20,_precision,,_labels.LINE)
|| _tab.win_efld(_edit,_tab,'VAL',,,20,0,,_labels.LINE)
?};
_tab.efld_opt(_edit, 'mark=1',,'VAL');

{? _labels.size()>1 & _labels.next()
||
   {!
   |?
::    Dodaje puste etykiety żeby zmieścić cały opis
      _lbl:=_labels.LINE;
      _tab.win_efld(_edit,AH,'H',,,,,,_lbl);
      _labels.next()
   !}
?};
{? _lbtn_name<>''
|| _bok:=_tab.win_ebtn(_edit,'text=%1'[_lbtn_name]+',align=begin',_lbtn_fml)
?};
exec('ok_esc','#window',_tab,_edit);

_tab.win_edit(_edit);

:: Takie czary, żeby zadziałały tłumaczenia poniżej (teksty MUSZĄ być identyczne)
'Wartość musi być większa lub równa: %1'@[''];
'Wartość musi być mniejsza lub równa: %1'@[''];

_valid1:="''";
{? type_of(_min)>0 & type_of(_max)>0
|| params_set('min',_min,'max',_max);
   _valid1:="
      _result:='';
      _min:=params_get().min;_max:=params_get().max;
      {? exec('in_interval','#field',_min,_max,cur_tab(1,1),'VAL','"+_name+"')=0 || _result:='VAL' ?};
      _result
   ";
   _valid1:=$_valid1
|? type_of(_min)>0
|| params_set('min',_min);
   _valid1:="
      _result:='';
      _min:=params_get().min;
      {? cur_tab(1,1).VAL<_min
      || FUN.info('Wartość musi być większa lub równa: %1'@[$_min]);
         _result:='VAL'
      ?};
      _result
   "
|? type_of(_max)>0
|| params_set('max',_max);
   _valid1:="
      _result:='';
      _max:=params_get().max;
      {? cur_tab(1,1).VAL>_max
      || FUN.info('Wartość musi być mniejsza lub równa: %1'@[$_max]);
         _result:='VAL'
      ?};
      _result
   "
?};
_valid:=$('
   params_set(params_get());
   _result:=("'+_valid1+'")();
   {? _result=\'\'
   || _result:=("'+_valid+'")()
   ?};
   _result
');

{? _tab.edit(_valid)
|| _result:=_tab.VAL
?};
_result


\edit_date
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Redagowanie wartości typu DATE
::   WE: [_a] - DATE - wartość początkowa
::       [_b] - STRING - nazwa parametru
::       [_c] - RULE - formuła walidująca
::       [_d] - STRING - tytuł okna [FUN.TYT]
::       [_e] - STRING - podpowiedź dla pola przy redagowaniu okna
::   WY: zredagowana wartość
::  TAG: <PUBLICZNA><REDAKCJA>
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
_value:={? var_pres('_a')=type_of(date()) || _a || date(0,0,0) ?};
 _name:={? var_pres('_b')=type_of('')     || _b || ''          ?};
_valid:={? var_pres('_c')=type_of("")     || _c || "1"         ?};
_title:={? var_pres('_d')=type_of('')     || _d || FUN.TYT     ?};
 _help:={? var_pres('_e')=type_of('')     || _e || ''          ?};

_tab:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'VAL','DATE','Data'
);
_tab.VAL:=_value;
_edit:=_tab.mk_edit('|--|'+_title,0,'#editdatecore');

_label_limit:=60;
_labels:=exec('lines','#string',_name,_label_limit);
_labels.first();

_tab.win_efld(_edit,_tab,'VAL',,,,,,_labels.LINE,,_help);
_tab.efld_opt(_edit, 'mark=1',,'VAL');
{? _labels.size()>1 & _labels.next()
||
   {!
   |?
::    Dodaje puste etykiety żeby zmieścić cały opis
      _lbl:=_labels.LINE;
      _tab.win_efld(_edit,AH,'H',,,,,,_lbl,,_help);
      _labels.next()
   !}
?};

exec('ok_esc','#window',_tab,_edit);
_tab.win_edit(_edit);

{? _tab.edit(_valid)
|| _result:=_tab.VAL
?};
_result


\edit_time
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Redagowanie wartości typu TIME
::   WE: [_a] - wartość początkowa
::       [_b] - nazwa parametru
::       [_c] - RULE - formuła walidująca
::       [_d] - STRING - tytuł okna [FUN.TYT]
::   WY: zredagowana wartość
::  TAG: <PUBLICZNA><REDAKCJA>
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
{? var_pres('_a')=type_of(time()) || _value:=_a || _value:=time(0,0,0) ?};
{? var_pres('_b')=type_of('') || _name:=_b || _name:='' ?};
{? var_pres('_c')=type_of("") || _valid:=_c || _valid:="1" ?};
{? var_pres('_d')=type_of('') || _title:=_d || _title:=FUN.TYT ?};

_tab:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'VAL','TIME','String'@
);
_tab.VAL:=_value;
_edit:=_tab.mk_edit('|--|'+_title,0,'#edittimecore');

_label_limit:=60;
_labels:=exec('lines','#string',_name,_label_limit);
_labels.first();

_tab.win_efld(_edit,_tab,'VAL',,,20,0,,_labels.LINE);
_tab.efld_opt(_edit, 'mark=1',,'VAL');

{? _labels.size()>1 & _labels.next()
||
   {!
   |?
::    Dodaje puste etykiety żeby zmieścić cały opis
      _lbl:=_labels.LINE;
      _tab.win_efld(_edit,AH,'H',,,,,,_lbl);
      _labels.next()
   !}
?};

exec('ok_esc','#window',_tab,_edit);
_tab.win_edit(_edit);

{? _tab.edit(_valid)
|| _result:=_tab.VAL
?};
_result


\edit_boolean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Redagowanie wartości STRING w stylu Tak/Nie
::   WE: [_a] - STRING - T/N - wartość początkowa, definiuje który przycisk będzie zaznaczony
::       [_b] - STRING - nazwa parametru
::   WY: zredagowana wartość
::  TAG: <PUBLICZNA><REDAKCJA>
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
{? var_pres('_a')=type_of('') || _value:=_a || _value:='' ?};
{? var_pres('_b')=type_of('') || _name:=_b || _name:='' ?};

{? _name+1='?'
||
:: Jeśli nazwa parametru kończy się pytajnikiem to w dialogu wyświetlam samą nazwę
   _msg:=_name
||
:: Nazwa parametru nie kończy się pytajnikiem więc doklejam tekst 'Wybierz wartość...'
   _msg:='Wybierz wartość parametru \'%1\':'@[_name]
?};

{? _value='T'
|| _choice:=FUN.choice(_msg,1,'Tak'@,'Nie'@)
|? _value='N'
|| _choice:=FUN.choice(_msg,2,'Tak'@,'Nie'@)
|| _choice:=FUN.choice(_msg,,'Tak'@,'Nie'@)
?};
{? _choice=1
|| _result:='T'
|? _choice=2
|| _result:='N'
|| ~~
?};
_result


\edit_formula
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Redagowanie wartości typu FORMULA
::   WE: [_a] - FORMULA - wartość początkowa
::       [_b] - STRING - nazwa parametru
::   WY: zredagowana wartość
::  TAG: <MODELER><PROCES><PARAMETR>
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
{? var_pres('_a')=type_of("") || _value:=_a+'' || _value:='' ?};
{? var_pres('_b')=type_of('') || _name:=_b || _name:='' ?};

_tab:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'VAL','STRING[255]','Formuła'
);
_tab.VAL:=_value;
_edit:=_tab.mk_edit(FUN.TYT,0,'#editfmlcore');

_label_limit:=60;
_labels:=exec('lines','#string',_name,_label_limit);
_labels.first();

_tab.win_efld(_edit,_tab,'VAL',,,100,0,,_labels.LINE);
_tab.efld_opt(_edit, 'mark=1',,'VAL');

{? _labels.size()>1 & _labels.next()
||
   {!
   |?
::    Dodaje puste etykiety żeby zmieścić cały opis
      _lbl:=_labels.LINE;
      _tab.win_efld(_edit,AH,'H',,,,,,_lbl);
      _labels.next()
   !}
?};

exec('ok_esc','#window',_tab,_edit);
_tab.win_edit(_edit);

_valid:="exec('valid_formula','#field',$cur_tab(1,1).VAL)";
{? _tab.edit(_valid)
|| _result:=$_tab.VAL
?};
_result


\edit_email
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Redagowanie wartości typu e-mail
::   WE: [_a] - STRING - wartość początkowa
::       [_b] - STRING - nazwa parametru
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
{? var_pres('_a')=type_of('') || _value:=_a || _value:='' ?};
{? var_pres('_b')=type_of('') || _name:=_b || _name:='' ?};

_valid:="
   {? exec('mail_ok','#email',cur_tab(1,1).VAL)
   || 1
   || FUN.emsg('Niepoprawny adres e-mail.'@); 0
   ?}
";
_result:=exec('edit_string','#edit',_a,_b,_valid);
_result


\edit_memo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.30]
:: OPIS: Redagowanie wartości typu STRING - wariant do obsługi pól wielowierszowych memo
::   WE: [_a] - STRING - wartość początkowa ['']
::       [_b] - STRING - nazwa parametru ['']
::       [_c] - STRING - tytuł okienka edycyjnego [FUN.TYT]
::       [_d] - NUMBER - długość pola memo [100]
::       [_e] - NUMBER - wysokość pola memo [3]
::       [_f] - RULE - formuła walidująca
::       [_g] - INTEGER - 0/[1] - czy zapalać gwiazdkę
::       [_h] - INTEGER - 0/[1] - czy redakcja (domyślnie) / tylko pogląd
::       [_i] - ARRAY - dodatkowe przyciski w postaci tablicy z elementami: NAME, RULE, opcjonalnie OPTIONS
::   WY: STRING - zredagowana wartość lub ~~ jeśli przerwano redakcję
::  TAG: <PUBLICZNA><REDAKCJA>
::  OLD: \ask4memo/libfml.fml
::----------------------------------------------------------------------------------------------------------------------
_fld:=obj_new('startval','label','width','height');

_fld.startval:={? var_pres('_a')=2 || _a || '' ?};
_fld.label:={? var_pres('_b')=2 || _b || '' ?};
_title:={? var_pres('_c')=2 || _c || FUN.TYT ?};
_fld.width:={? var_pres('_d')=1 || _d || 100 ?};
_fld.height:={? var_pres('_e')=1 || _e || 3 ?};
{? exec('interm','#system')
|| {? _fld.height>15
   || _fld.height:=15
   ?}
?};
_valid:={? var_pres('_f')=type_of("") || _f || "1" ?};
_mark:=1;
{? var_pres('_g')=type_of(0)
|| _mark:=_g
?};
_edit:={? var_pres('_h')=type_of(0) || _h || 1 ?};
_buttons:={? var_pres('_i')>100 || _i || ~~ ?};

:: Jeżeli etykieta dłuższa niż 60, to przycinam do 60 bo wybuchnie niżej
_fld.label:=60+_fld.label;

_tab:=tab_tmp(1,'LP','INTEGER','','MEMO','SYS_MEMO',_fld.label);
_tab.memo_set(_fld.startval,'MEMO');

_red:=_tab.mk_edit(_title,,,1);
_tab.win_edit(_red);
_tab.win_efld(_red,,'MEMO',,,_fld.width,-_fld.height,,_fld.label);
{? _mark>0
|| _tab.efld_opt(_red,'mark=1',,'MEMO')
?};
{? type_of(_buttons)>100
|| {! _it:=1.. obj_len(_buttons)
   |! {? _buttons[_it].NAME*'text='>0
      || _btn:=_tab.win_ebtn(_red,_buttons[_it].NAME,_buttons[_it].RULE)
      || _btn:=_tab.win_ebtn(_red,'text=%1,panel=bottom,align=begin,display=%2'[_buttons[_it].NAME,$1],_buttons[_it].RULE)
      ?};
      {? var_pres('OPTIONS',_buttons[_it])=type_of('')
      || _tab.btn_opt(_btn,_buttons[_it].OPTIONS)
      ?}
   !}
?};

{? _edit
|| exec('ok_esc','#window',_tab,_red);
   {? _tab.edit(_valid)
   || _tab.memo_txt(,0,'MEMO')
   || ~~
   ?}
|| _tab.display();
   ~~
?}


\edit_memo_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Udostępnia do edycji pole typu SYS_MEMO wskazanej tabeli.
::   WE:  _a  [TABLE]  - alias tabeli
::        _b  [STRING] - akronim pola
::       [_c] [NUMBER] - czy zapisywać treść notatki?
::                      1 - TAK [domyślnie],
::                      0 - NIE,
::                     -1 - Tylko przeglądanie.
::       [_d] [STRING] - tytuł okna (domyślnie: komentarz tabeli), jeśli okno miałoby mieć tytuł pusty, to przyjęty
::                       zostanie tekst 'Edycja' (zlokalizowany)
::       [_e] [STRING] - separator przed polem (domyślnie: nazwa pola), jeśli tekst separatora miałby być pusty, to
::                       przyjęty zostanie tekst 'Adnotacja' (zlokalizowany)
::       [_f] [STRING] - etykieta pola (domyślnie: '')
::       [_g] [STRING] - podpowiedź dla pola (domyślnie: komentarz pola)
::       [_h] [NUMBER] - szerokość pola (domyślnie: 30)
::       [_i] [NUMBER] - wysokość pola (domyślnie: 5)
::   WY: 0 - jeśli zrezygnowano z edycji lub ewentualny zapis zakończył się błędem
::       1 - zatwierdzono zawartość okienka i ewentualny zapis zakończył się powodzeniem
::----------------------------------------------------------------------------------------------------------------------
_fml:='edit_memo_fld';
_lib:='#edit.fml';

{? var_pres('_a')<>type_of(SYSLOG)
|| FUN.error('Błędny typ argumentu %1 formuły %2 z pliku %3.'@['_a',_fml,_lib]);
   return(0)
|| _TAB:=_a
?};

{? var_pres('_b')<>type_of('')
|| FUN.error('Błędny typ argumentu %1 formuły %2 z pliku %3.'@['_b',_fml,_lib]);
   return(0)

|? _b=''
|| FUN.error('Brak argumentu %1 formuły %2 z pliku %3.'@['_b',_fml,_lib]);
   return(0)

|? var_pres(_b,_TAB)<>36
|| FUN.error(
      'Błędna wartość argumentu %1 formuły %2 z pliku %3.\n'
      'Oczekiwany akronim pola typu %4.'@
      ['_b',_fml,_lib,'SYS_MEMO']
   );
   return(0)

|| _fld:=_b
?};

_mod:={? var_pres('_c')<>type_of(0) || 1 || _c ?};
_title:={? var_pres('_d')=type_of('') || _d || _TAB.comment() ?};
_separator:={? var_pres('_e')=type_of('') || _e || exec('fldLabel','#field',_TAB,_fld) ?};
_label:={? var_pres('_f')=type_of('') || _f || '' ?};
_help:={? var_pres('_g')=type_of('') || _g || exec('fldComment','#field',_TAB,_fld) ?};
_width:={? var_pres('_h')=type_of(0) & _h>0 || _h || 30 ?};
_height:={? var_pres('_i')=type_of(0) & _h>0 || _i || 5 ?};

{? _title=''
|| _title:='Edycja'@
?};
{? _separator=''
|| _separator:='Adnotacje'@
?};

_ret:=0;
_org:=_TAB.win_edit('?');
_wnd:=_TAB.mk_edit(_title,0,'memo_editor',,,'html_maximized');
_TAB.win_esep(_wnd,_separator);
_TAB.win_efld(_wnd,,_fld,,,_width,-_height,,_label,_label='',_help);
exec('ok_esc','#window',_TAB,_wnd,,,,,,,exec('text_red_ok','#window'));
_TAB.win_edit(_wnd);

{? _TAB.memo_get(,_fld,0)
|| {? _mod=-1
   || _TAB.display()
   |? _TAB.edit()
   || _ret:=
         {? _mod
         || _TAB.memo_put(,_fld)
         || 1
         ?}
   ?}
?};

_TAB.win_edit(_org);
_TAB.win_edel(_wnd);

_ret


\edit_email_list
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Redagowanie wartości typu lista e-maili
::   WE: [_a] - TEXT - wartość początkowa
::       [_b] - STRING - nazwa parametru
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
{? var_pres('_a')=type_of('') || _value:=_a || _value:='' ?};
{? var_pres('_b')=type_of('') || _name:=_b || _name:='' ?};

:: Takie czary, żeby zadziałały tłumaczenia poniżej (teksty MUSZĄ być identyczne)
'Na liście znajduje się niepoprawny adres e-mail.'@;

_valid:="
   {? exec('mail_list_ok','#email',cur_tab(1,1).memo_txt(,0,'MEMO'))
   || 1
   || FUN.emsg('Na liście znajduje się niepoprawny adres e-mail.'@); 0
   ?}
";
_result:=exec('edit_memo','#edit',_value,_name,,100,5,_valid);
_result


\env_blob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Środowisko do obsługi załączników kontrolką filelistpanel
::   WY: obj_new - obiekt
::  TAG: <PUBLICZNA>
:: ~OST: INBLEDIT,INBLGET,INFEXISTS,INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
::UWAGA: _fld, i _mth to formułki pomocnicze, żeby wygodniej tworzyć tablice i komentować poszczególne jej elementy
::       powiedzmy, że to bedzie pole
         _fld:="31+form(_a)";
::       powiedzmy, że to bedzie metoda
         _mth:="31+form(_a)";

_env:=obj_new(
::             Pola ogólnego zastosowania które wypada ustawić
               _fld('EDITABLE'        ,'1 - możliwa edycja, 0 - podgląd, -1 brak podglądu')
               ,_fld('BLOB_TITLE'     ,'Czego dotyczą wyświetlone załączniki (tekst czytelny dla użytkownika)')
               ,_fld('VIEWMODE'       ,'Tryb widoku')
               ,_fld('TAB'            ,'Tabela z polem BLOBRAW')
               ,_fld('FIELD'          ,'Akronim pola BLOBRAW')
               ,_fld('BUFFER'         ,'Obiekt bufora tabeli z polem BLOBRAW')
               ,_fld('FML_EDIT'       ,'Formuła obsługująca edycję załącznika (jakieś dodatkowe dialogi itp)')
               ,_fld('FML_FILE'       ,'Formuła wykonywana przed wciągnięciem każdego pliku do bazy')
               ,_fld('FML_ARGS'       ,'Argumenty dla FML_EDIT')
               ,_fld('FML_LOAD'       ,'Formuła zasilająca tabelę TAB_CTRL')
               ,_fld('FML_CAN_DEL'    ,'Formuła sprawdzająca czy można usunąć rekord w tabeli TAB')
               ,_fld('FML_VALID'      ,'Formuła walidująca czy można dodać, poprawić załącznik')
               ,_fld('FML_ACTIONS_INI','Umożliwia zdefiniowanie własnych akcji')
               ,_fld('FML_ACTIONS_RUN','Umożliwia obsługę własnych akcji')
               ,_fld('WIDTH'          ,'Szerokość okienka')
               ,_fld('HEIGHT'         ,'Wysokość okienka')
               ,_fld('ACTIONS'        ,'Dostępne akcje')

::             Pola pomocnicze
               ,_fld('SEPARATOR'      ,'Separator dla katalogów')
               ,_fld('SELECT_STR'     ,'Identyfikator elementu który zaznaczyć [STR_DATA]')

::             identyfikatory okienek
               ,_fld('wid_main'       ,'ID okienka glownego')

::             tytuly okienek
               ,_fld('tit_main'       ,'Tytul okienka glownego')

::             tabele tymczasowe
               ,_fld('TAB_CTRL'       ,'Tabela tymczasowa przesyłana do kontrolki')

::             indeksy tymczasowych tabel
               ,_fld('TAB_CTRL_NDX1'  ,'Index tymczasowy')

::             uchwyty do okien
               ,_fld('WIN_MAIN'       ,'Główne okno grupowe')

::             identyfikatory przycisków i kontrolek
               ,_fld('ctr_id'         ,'Identyfikator kontrolki filelistpanel')

::             METODY
               ,_mth('select'         ,'Wyświetla okno')
               ,_mth('mk_ctr'         ,'Tworzy okno kontrolki')
               ,_mth('init_ctr'       ,'Inicjalizacja kontrolki')
               ,_mth('init_actions'   ,'Ustala akcje w oknie kontrolki')
               ,_mth('actions_grayed' ,'Umożliwia wyszarzanie akcji')
               ,_mth('filltab'        ,'Ładuje tabelę tymczasową przekazaną do kontrolki')
               ,_mth('bridge'         ,'Obsługa wszystkich akcji, dnd z kontrolki')
               ,_mth('update'         ,'Aktualizuje listę plików')
               ,_mth('has_file'       ,'Sprawdza czy plik o podanej nazwie jest już na liście')
               ,_mth('validate'       ,'Uruchamia formułę FML_VALID jeśli została podana')

               ,_mth('act_edit'       ,'Akcja Dołącz i Popraw')
               ,_mth('act_popraw'     ,'Akcja Popraw z prostym okienkiem')
               ,_mth('act_usun'       ,'Akcja Usuń z prostym okienkiem')
               ,_mth('act_open'       ,'Akcja Otwórz')
               ,_mth('act_red'        ,'Akcja Redaguj')
               ,_mth('act_save'       ,'Akcja Zapisz')
               ,_mth('act_view'       ,'Akcja Widok')
               );
_env.EDITABLE:=1;
_env.VIEWMODE:='icons';
_env.BLOB_TITLE:='';
_env.BUFFER:=~~;
_env.FML_EDIT:="";
_env.FML_FILE:="";
_env.FML_CAN_DEL:="";
_env.FML_ACTIONS_INI:="";
_env.FML_ACTIONS_RUN:="";

_env.ACTIONS:=obj_new('DOŁĄCZ','POPRAW','USUŃ','REDAGUJ','OTWÓRZ','ZAPISZ','WIDOK');
_env.ACTIONS.DOŁĄCZ:=1;
_env.ACTIONS.POPRAW:=1;
_env.ACTIONS.USUŃ:=1;
_env.ACTIONS.REDAGUJ:=1;
_env.ACTIONS.OTWÓRZ:=1;
_env.ACTIONS.ZAPISZ:=1;
_env.ACTIONS.WIDOK:=1;

_env.FML_LOAD:="
   _tab_ctrl:=_a;
   _tab:=_b;

   _tab_ctrl.blank();
   _blob_ref:=($('_tab:=_a;_tab.'+.FIELD))(_tab);
   {? _blob_ref<>null()
   ||
      _tab_ctrl.NAME:=_tab.bl_info(.FIELD,'NAME');
      _tab_ctrl.SIZE:=_tab.bl_info(.FIELD,'SIZE');
      _tab_ctrl.MOD_DATE:=$_tab.bl_info(.FIELD,'MODIFY_DATE')+' '+$_tab.bl_info(.FIELD,'MODIFY_TIME')
   || _tab_ctrl.NAME:='brak pliku'
   ?};
   _tab_ctrl.STR_DATA:=_tab.uidref();
   _tab_ctrl.add()
";
_env.FML_VALID:="";
_env.WIDTH:=170;
_env.HEIGHT:=20;
_env.TAB:=~~;
_env.FIELD:='';
_env.SEPARATOR:=exec('sep','#file');
_env.SELECT_STR:='';

_env.wid_main:='#blobedit';
_env.tit_main:='Załączniki';
_env.TAB_CTRL:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
   'NAME','STRING[255]','Nazwa pliku',
   'SIZE','REAL','Rozmiar',
   'MOD_DATE','STRING[16]','Data modyfikacji',
   'INT_DATA','INTEGER','Identyfikator pliku',
   'STR_DATA','STRING[48]','Identyfikator pliku'
);
_env.TAB_CTRL_NDX1:=~~;
_env.WIN_MAIN:='';

_env.ctr_id:='ctr_filelist';

:: Takie czary, żeby zadziałały tłumaczenia poniżej (teksty MUSZĄ być identyczne)
'&Dołącz'@; 'Umożliwia dodanie załącznika'@;
'&Popraw'@; 'Umożliwia edycję zaznaczonego załącznika'@;
'&Usuń'@; 'Umożliwia usunięcie zaznaczonych załączników'@;
'&Redaguj'@; 'Umożliwia redakcję zaznaczonego załącznika'@;
'&OTWÓRZ'@; 'Umożliwia podgląd zaznaczonego załącznika'@;
'&Zapisz'@; 'Umożliwia zapis zaznaczonych załączników'@;
'&Widok'@; 'Umożliwia zmianę widoku'@;
'Nie można wykonać akcji.'@;
'Formuła walidująca musi zwrócić %1.'@[''];
'Dodawanie załączników'@;
'Edycja załączników'@;
'Formuła na edycję musi zwrócić %1.'@[''];
'Załącznik: %1 jest redagowany.'@[''];
'Załącznik nie może być pusty.'@;
'Załącznik'@;
'Załącznik został usunięty.'@;
'Usunąć zaznaczone pliki?'@;
'Usuwanie załączników'@;
'Wybór katalogu'@;
'Zapisywanie załączników'@;
'Plik %1 już istnieje. Czy nadpisać?'@[''];
'Wszystkie'@; 'Tak'@; 'Nie'@;
'Tryb wyświetlania plików:'@; 'Ikony'@; 'Tabela'@;

_env.select:="
   params_set('env_blob',.);
:: Zasilam tablicę która zostanie przesłana do kontrolki
   .filltab();
   .mk_ctr();
   SYSLOG.win_ctr(.WIN_MAIN);
   SYSLOG.control()
";

_env.mk_ctr:="
   .WIN_MAIN:=SYSLOG.mk_ctr(.tit_main,,1,8,.WIDTH,.HEIGHT);
   {? .EDITABLE>0
   || SYSLOG.win_cctr(.WIN_MAIN,.ctr_id,'@filelistpanel','dnd')
   || SYSLOG.win_cctr(.WIN_MAIN,.ctr_id,'@filelistpanel')
   ?};
   SYSLOG.win_cfml(.WIN_MAIN,.ctr_id,'CONTROL_INIT',.init_ctr);
   SYSLOG.win_cfml(.WIN_MAIN,.ctr_id,'CONTROL_CALLBACK',.bridge)
";

_env.init_ctr:="
   params_set(params_get());
   _env:=params_get().env_blob;

:: Ładujemy zawartość tabeli tymczasowej
   _env.update();

:: Dodajemy akcje
   _env.init_actions();

   ctr_call(,_env.ctr_id,'setView',_env.VIEWMODE);
   _tab1:= ctr_call(,_env.ctr_id,'getCurrActionItems');
   ctr_ret(_tab1);
   ~~
";

_env.init_actions:="
   params_set(params_get());
   _env:=params_get().env_blob;
   _interm:=exec('interm','#system');

   ctr_call(,_env.ctr_id,'removeAllActions');
   {? _env.EDITABLE>0
   || {? _env.ACTIONS.DOŁĄCZ>0
      ||
         {? _interm
         || ctr_set(,_env.ctr_id,'addToolbarAction','add',''@,'@system|add-circle','Umożliwia dodanie załącznika'@,0,0)
         || ctr_set(,_env.ctr_id,'addToolbarAction','add','&Dołącz'@,'','Umożliwia dodanie załącznika'@,0,0)
         ?};
         ctr_set(,_env.ctr_id,'addMenuAction','add','&Dołącz'@,0,0)
      ?};
      {? _env.ACTIONS.POPRAW>0
      ||
         {? _interm
         || ctr_set(,_env.ctr_id,'addToolbarAction','popraw',''@,'@system|mode-edit','Umożliwia edycję zaznaczonego załącznika'@,1,0)
         || ctr_set(,_env.ctr_id,'addToolbarAction','popraw','&Popraw'@,'','Umożliwia edycję zaznaczonego załącznika'@,1,0)
         ?};
         ctr_set(,_env.ctr_id,'addMenuAction','popraw','&Popraw'@,1,0)
      ?};
      {? _env.ACTIONS.USUŃ>0
      ||
         {? _interm
         || ctr_set(,_env.ctr_id,'addToolbarAction','del',''@,'@system|delete','Umożliwia usunięcie zaznaczonych załączników'@,2,0)
         || ctr_set(,_env.ctr_id,'addToolbarAction','del','&Usuń'@,'','Umożliwia usunięcie zaznaczonych załączników'@,2,0)
         ?};
         ctr_set(,_env.ctr_id,'addMenuAction','del','&Usuń'@,2,0)
      ?};
      {? _env.ACTIONS.REDAGUJ>0
      || ctr_set(,_env.ctr_id,'addAction','edit','&Redaguj'@,'','Umożliwia redakcję zaznaczonego załącznika'@,1,0)
      ?}
   ?};
   {? _env.EDITABLE>=0
   || {? _env.ACTIONS.OTWÓRZ>0
      || ctr_set(,_env.ctr_id,'addAction','open','&OTWÓRZ'@,'','Umożliwia podgląd zaznaczonego załącznika'@,1,1)
      ?};
      {? _env.ACTIONS.ZAPISZ>0
      || ctr_set(,_env.ctr_id,'addAction','save','&Zapisz'@,'','Umożliwia zapis zaznaczonych załączników'@,2,0)
      ?}
   ?};
   {? _env.FML_ACTIONS_INI<>\"\"
   || _env.FML_ACTIONS_INI()
   ?};
   {? _env.ACTIONS.WIDOK>0
   || ctr_set(,_env.ctr_id,'addToolbarAction','view','&Widok'@,'','Umożliwia zmianę widoku'@,0,0)
   ?};

   ctr_call(,_env.ctr_id,'initToolbar');

   _env.actions_grayed();
   ~~
";

_env.actions_grayed:="

   params_set(params_get());
   _env:=params_get().env_blob;

   _actions:='';
   {? var_pres('_a')=type_of('')
   || _actions:=_a+','
   ?};

   {? _actions=''
   || ctr_set(,_env.ctr_id,'setDndEnabled',_env.EDITABLE);
      {? _env.ACTIONS.DOŁĄCZ>0
      || ctr_set(,_env.ctr_id,'setActionEnabled','add',_env.EDITABLE)
      ?};
      {? _env.ACTIONS.POPRAW>0
      || ctr_set(,_env.ctr_id,'setActionEnabled','popraw',_env.EDITABLE)
      ?};
      {? _env.ACTIONS.USUŃ>0
      || ctr_set(,_env.ctr_id,'setActionEnabled','del',_env.EDITABLE)
      ?};
      {? _env.ACTIONS.REDAGUJ>0
      || ctr_set(,_env.ctr_id,'setActionEnabled','edit',_env.EDITABLE)
      ?};
      {? _env.ACTIONS.OTWÓRZ>0
      || ctr_set(,_env.ctr_id,'setActionEnabled','open',1)
      ?};
      {? _env.ACTIONS.ZAPISZ>0
      || ctr_set(,_env.ctr_id,'setActionEnabled','save',1)
      ?};
      {? _env.ACTIONS.WIDOK>0
      || ctr_set(,_env.ctr_id,'setActionEnabled','view',1)
      ?}
   ||
      ctr_set(,_env.ctr_id,'setDndEnabled',               {? _actions*'D' || 0 || 1 ?});
      {? _env.ACTIONS.DOŁĄCZ>0
      || ctr_set(,_env.ctr_id,'setActionEnabled','add',   {? _actions*'D' || 0 || 1 ?})
      ?};
      {? _env.ACTIONS.POPRAW>0
      || ctr_set(,_env.ctr_id,'setActionEnabled','popraw',{? _actions*'P' || 0 || 1 ?})
      ?};
      {? _env.ACTIONS.USUŃ>0
      || ctr_set(,_env.ctr_id,'setActionEnabled','del',   {? _actions*'U' || 0 || 1 ?})
      ?};
      {? _env.ACTIONS.REDAGUJ>0
      || ctr_set(,_env.ctr_id,'setActionEnabled','edit',  {? _actions*'R' || 0 || 1 ?})
      ?};
      {? _env.ACTIONS.OTWÓRZ>0
      || ctr_set(,_env.ctr_id,'setActionEnabled','open',  {? _actions*'O' || 0 || 1 ?})
      ?};
      {? _env.ACTIONS.ZAPISZ>0
      || ctr_set(,_env.ctr_id,'setActionEnabled','save',  {? _actions*'Z' || 0 || 1 ?})
      ?};
      {? _env.ACTIONS.WIDOK>0
      || ctr_set(,_env.ctr_id,'setActionEnabled','view',  {? _actions*'W' || 0 || 1 ?})
      ?};
      ~~
   ?}
";

_env.filltab:="
   params_set(params_get());
   _result:=0;
   _can_continue:=1;

   _tab:=.TAB;
   _tab_ctrl:=.TAB_CTRL;
   _tab_ctrl.erase();
   _tab.cntx_psh();
   {? _tab.first()
   || {!
      |?
         _can_continue:=.FML_LOAD(_tab_ctrl,_tab);
         _tab.next() & _can_continue>0
      !}
   ?};
   _tab.cntx_pop();
   {? _can_continue>0
   || _result:=1
   ?};
   _result
";

_env.bridge:="
   params_set(params_get());
   _env:=params_get().env_blob;
   _action_id:=ctr_info('action_id');
   {? _action_id='dnd'
   || {? _env.EDITABLE
      || _dropped:=ctr_call(,_env.ctr_id,'getDroppedFiles');
         {? _dropped.size()>0
         || _env.act_edit('Dołącz',,_dropped)
         ?};
         _env.update()
      || FUN.info('Nie można wykonać akcji.'@)
      ?}
   |? _action_id='add'
   || _env.act_edit('Dołącz');
      _env.update()
   |? _action_id='popraw'
   || _selected:=ctr_call(,_env.ctr_id,'getCurrActionItems');
      {? _selected.first()
      || _env.act_edit('Popraw',_selected.STR_DATA)
      ?};
      _env.update()
   |? _action_id='del'
   || _selected:=ctr_call(,_env.ctr_id,'getCurrActionItems');
      _env.act_usun(_selected);
      _env.update()
   |? _action_id='open'
   || _selected:=ctr_call(,_env.ctr_id,'getCurrActionItems');
      {? _selected.first()
      || _env.act_open(_selected.STR_DATA)
      ?}
   |? _action_id='edit'
   || _selected:=ctr_call(,_env.ctr_id,'getCurrActionItems');
      {? _selected.first()
      || _env.act_red(_selected.STR_DATA)
      ?}
   |? _action_id='save'
   || _selected:=ctr_call(,_env.ctr_id,'getCurrActionItems');
      {? _selected.first()
      || _env.act_save(_selected)
      ?}
   |? _action_id='view'
   || _env.act_view()
   || {? _env.FML_ACTIONS_RUN<>\"\"
      || _selected:=ctr_call(,_env.ctr_id,'getCurrActionItems');
         _env.FML_ACTIONS_RUN(_action_id,_selected)
      ?}
   ?};
   ~~
";

_env.update:="
   params_set(params_get());
:: Wypełniam tablicę
   .filltab();

:: Ustawiam szerokość kolumn
   ctr_set(,.ctr_id,'setColumnWidth','NAME',50);
   ctr_set(,.ctr_id,'setColumnWidth','#TYPE',30);

   ctr_tab('files_data','',.ctr_id,'',.TAB_CTRL);
   ctr_call(,.ctr_id,'updateItems','files_data');

:: Zaznaczam ostatnio edytowany element
   {? .SELECT_STR<>''
   || ctr_set(,.ctr_id,'selectItem',0,.SELECT_STR,1);
      .SELECT_STR:=''
   ?};

   ~~
";

_env.has_file:="
   params_set(params_get());

   _filename:=_a;

   _result:=0;
   _tab_ctrl:=.TAB_CTRL;
   _tab_ctrl.cntx_psh();

   {? type_of(.TAB_CTRL_NDX1)=0
   || .TAB_CTRL_NDX1:=_tab_ctrl.ndx_tmp('',1,'NAME',,)
   ?};
   _tab_ctrl.index(.TAB_CTRL_NDX1);
   _tab_ctrl.prefix(_filename,);
   {? _tab_ctrl.first()
   || _result:=1
   ?};
   _tab_ctrl.cntx_pop();
   _result
";

_env.validate:="
   params_set(params_get());
   _filename:=_a;
   _filepath:=_b;
   _dialog:=_c;
   _result:=1;
   {? .FML_VALID<>\"\"
   || _result:=.FML_VALID(.FML_ARGS,.BUFFER,_filename,_filepath,_dialog);
      {? type_of(_result)<>type_of(0)
      || _msg:='Formuła walidująca musi zwrócić %1.'@['0/1'];
         {? do_state()>0
         || undo(_msg)
         || FUN.info(_msg)
         ?}
      ?}
   ?};
   _result
";

_env.act_edit:="
:: _a - STRING - tryb redakcji: 'Dołącz'/'Popraw'
:: [_b] - STRING - dla poprawiania, uidref() poprawianego rekordu
:: [_c] - tab_tmp - tabela upuszczonych rekordów

   params_set(params_get());

   _mode:=_a;

   {? _mode='Dołącz'
   || KOMM.init(250,,'Dodawanie załączników'@)
   |? _mode='Popraw'
   || KOMM.init(250,,'Edycja załączników'@)
   ?};

   _uidref:='';
   {? var_pres('_b')=type_of('')
   || _uidref:=_b
   ?};
   _dropped:=~~;
   {? var_pres('_c')>100
   || _dropped:=_c
   ?};

   _tab:=.TAB;
   _can_continue:=1;
   _result:=0;

:: Separator się różni w zależności od tego czy dodawanie załącznika za pomocą akcji
:: czy za pomocą d'n'd, czy za pomocą d'n'd na intermie
   _separator:=exec('sep','#file');
   _monkey:='';
   {? .FML_EDIT<>\"\"
   ||
::    Jeśli formuła na edycję podana to ją wywołuję przekazując parametry służące do sprawnego
::    wypełnienia bufora tabeli
      _can_continue:=.FML_EDIT(.FML_ARGS,.BUFFER,_mode,_uidref,_dropped);
      {? type_of(_can_continue)<>type_of(0)
      || FUN.info('Formuła na edycję musi zwrócić %1.'@['0/1']);
         return(0)
      ?}
   |? _mode='Popraw'
   ||
::    Jeśli formuła na edycję nie podana, a jest akcja popraw to uruchamiam standardowe poprawianie
      _can_continue:=.act_popraw(_uidref)
   ?};

   {? _can_continue>0 & _mode='Dołącz'
   ||
::    Wyświetlam dialog o plik
      _files:=~~;
      {? type_of(_dropped)>100
      || _files:=_dropped;
         {? exec('interm','#system')>0
         || _separator:='/'
         || _monkey:='@'
         ?}
      ||
         _separator:=exec('sep','#file',1);
         _files:=tab_tmp(1,
            'LP','REAL','Lp.',
            'DIR','STRING[255]','Katalog',
            'FILENAME','STRING[255]','Nazwa pliku'
         );
         _tmp_dir:=fmk_tmp_dir(0);
         {? type_of(_tmp_dir)<>type_of(~~)
         || _pth:=_tmp_dir.get_path();
            {? _pth<>''
            || _uploaded:=dlg_upload(_pth,0,,1);

               {? type_of(_uploaded)=type_of('') & _uploaded<>''
               || _split:=spli_str(_uploaded,'\\n');
                  _len:=obj_len(_split);
                  {! _it:=1.._len
                  |! _filename:=_split[_it];
                     {? _filename<>''
                     || _files.blank();
                        _files.LP:=_files.size()+1;
                        _files.DIR:=_pth;
                        _files.FILENAME:=_filename;
                        _files.add()
                     ?}
                  !}
               ?}
            ?}
         || FUN.emsg('Nie udało się utworzenie katalogu tymczasowego po stronie serwera.'@)
         ?}
      ?};
      {? type_of(_files)>100 & _files.first()
      ||
         _mydo:=do_state()=0;
         {? _mydo || do() ?};
         {!
         |?
            _file:=_files.FILENAME;
            {? _file<>''
            || _filepath:=_monkey+_files.DIR+_separator+_file;
               _can_continue:=.validate(_file,_filepath,1);
               {? _can_continue>0 & .FML_FILE<>\"\"
               ||
::                Jeśli formuła dla każdego pliku podana to ją wywołuję
                  _can_continue:=.FML_FILE(.FML_ARGS,.BUFFER,_file,_filepath);
                  {? type_of(_can_continue)<>type_of(0)
                  || _can_continue:=0
                  ?}
               ?};
               {? _can_continue>0
               ||
                  _tab.cntx_psh();
                  _tab.prefix();
                  {? var_pres('BUFFER',.)>100
                  || .BUFFER.set()
                  ?};
                  _can_continue:=_tab.add();
                  {? _can_continue>0
                  || .SELECT_STR:=_tab.uidref();
                     _can_continue:=_tab.bl_put(.FIELD,_filepath,,,,)
                  ?};
                  _tab.cntx_pop()
               ?}
            ?};
            _files.next()
         !};
         {? _mydo || end() ?}
      || _can_continue:=0
      ?}
   ?};
   KOMM.select();
   {? _can_continue>0
   || _result:=1
   ?};
   _result
";

_env.act_popraw:="
   params_set(params_get());

   _uidref:=_a;

   _can_continue:=1;
   _result:=0;

   _tab:=.TAB;
   _tab.cntx_psh();
   {? _tab.seek(_uidref,ref_name(_uidref),1)
   ||
      _what:='';
      _blob_ref:=($('_tab:=_a;_tab.'+.FIELD))(_tab);
      {? _blob_ref<>null()
      || _what:=_tab.bl_info(.FIELD,'NAME')
      ?};
      {? exec('blk_lock','#table',2-!_tab,_tab.ref(),,1,'Załącznik: %1 jest redagowany.'@[_what])
      ||
         _tmp_dir:=fmk_tmp_dir(0);
         _sep:=exec('sep','#file',1);
         {? type_of(_tmp_dir)<>type_of(~~)
         || _pth:=_tmp_dir.get_path();

            params_set(exec('obj_ntab_set','#array',params_get(),'pth_temp',_pth));
            _fml_f3:=\"
               _result:=0;
               _pth:=params_get().pth_temp;

               {? _pth<>''
               || _result:=dlg_upload(_pth,0)
               ?};
               _result
            \";
            _before:=_tab.bl_info(.FIELD,'NAME');

            _valid:=\"
               _before:=\'\"+_before+\"\';
               params_set(params_get());
               _env:=params_get().env_blob;
               _filepath:=cur_tab(1,1).VAL;
               _filename:=exec('filename','#string',_filepath);
               _result:='';

               {? _filepath=''
               || FUN.emsg('Załącznik nie może być pusty.'@);
                  _result:='VAL'
               ?};
               {? _before<>_filename
               ||
                  {? _result=''
                  || {? _env.validate(_filename,_filepath,0)<=0
                     || _result:='VAL'
                     ?}
                  ?}
               ?};
               _result
            \";
            _valid:=$_valid;

            _filename:=exec('edit_string','#edit',_before,'Załącznik'@,_valid,_fml_f3);
            {? type_of(_filename)>0 & _filename<>'' & _filename<>_before
            || _filepath:=_pth+_sep+_filename;
               {? fexists(_filepath,0)
               || _can_continue:=_tab.bl_put(.FIELD,_filepath,,,,)
               || FUN.emsg('Brak pliku: %1. Redakcja zakończona niepowodzeniem.'@[_filename]);
                  _can_continue:=0
               ?}
            ?}
         || FUN.emsg('Nie udało się utworzenie katalogu tymczasowego po stronie serwera.'@)
         ?};
         exec('blk_unlock','#table',2-!_tab,_tab.ref())
      || _can_continue:=0
      ?}
   || FUN.emsg('Załącznik został usunięty.'@)
   ?};
   _tab.cntx_pop();

   .SELECT_STR:=_uidref;

   {? _can_continue>0
   || _result:=1
   ?};
   _result
";

_env.act_usun:="
   params_set(params_get());

   _selected:=_a;
   _tab:=.TAB;
   _can_continue:=FUN.ask('Usunąć zaznaczone pliki?'@);

   _group:=0;
   {? _selected.size()>1
   || _group:=1
   ?};
   {? _group>0
   || KOMM.init(250,,'Usuwanie załączników'@)
   ?};
   {? _can_continue>0
   || _tab.cntx_psh();
      {? _selected.first()
      || {!
         |? _uidref:=_selected.STR_DATA;
            {? _tab.seek(_uidref,ref_name(_uidref),1)
            ||
               _can_del:=1;
               {? .FML_CAN_DEL<>\"\"
               || _group:=0;
                  {? _selected.size()>1
                  || _group:=1
                  ?};
                  _can_del:=.FML_CAN_DEL(_tab.ref(),_group)
               ?};
               {? _can_del>0
               ||
                  _what:='';
                  _blob_ref:=($('_tab:=_a;_tab.'+.FIELD))(_tab);
                  {? _blob_ref<>null()
                  || _what:=_tab.bl_info(.FIELD,'NAME')
                  ?};
                  {? exec('blk_lock','#table',2-!_tab,_tab.ref(),,1,'Załącznik: %1 jest redagowany.'@[_what],,_group)
                  || exec('blk_unlock','#table',2-!_tab,_tab.ref());
                     _can_continue:=_tab.del(,1)
                  ?}
               ?}
            ?};
            _selected.next() & _can_continue>0
         !}
      ?};
      _tab.cntx_pop()
   ?};
   {? _group>0
   || KOMM.select()
   ?};
   ~~
";

_env.act_open:="
   params_set(params_get());

   _uidref:=_a;

   _tab:=.TAB;
   _tab.cntx_psh();
   {? _tab.seek(_uidref,ref_name(_uidref),1)
   || exec('bl_view','#blob',_tab,.FIELD)
   || FUN.emsg('Załącznik został usunięty.'@)
   ?};
   _tab.cntx_pop();
   ~~
";

_env.act_red:="
   params_set(params_get());

   _uidref:=_a;

   {? exec('cli_functions','#system')=0
   || FUN.emsg(exec('indevice_nacc_msg','#system'));
      return()
   ?};

   _tab:=.TAB;
   _tab.cntx_psh();
   {? _tab.seek(_uidref,ref_name(_uidref),1)
   ||
      _what:='';
      _blob_ref:=($('_tab:=_a;_tab.'+.FIELD))(_tab);
      {? _blob_ref<>null()
      || _what:=_tab.bl_info(.FIELD,'NAME')
      ?};
      {? exec('blk_lock','#table',2-!_tab,_tab.ref(),,1,'Załącznik: %1 jest redagowany.'@[_what])
      || {? _blob_ref<>null()
         || _tab.bl_edit(.FIELD)
         || FUN.emsg('Brak pliku w bazie danych. Załącznik jest pusty.'@)
         ?};
         exec('blk_unlock','#table',2-!_tab,_tab.ref())
      ?}
   || FUN.emsg('Załącznik został usunięty.'@)
   ?};
   _tab.cntx_pop();
   ~~
";

_env.act_save:="
   params_set(params_get());

   _selected:=_a;
   _tab:=.TAB;
   _can_continue:=1;

   _group:=0;
   {? _selected.size()>1
   || _group:=1
   ?};
   _dir_sep:=exec('sep','#file');
   _dir:='';
   {? exec('interm','#system')
   || _dir:='x'
   || _dir:=exec('filechooser','#file','Wybór katalogu'@,,,,,'DIRECTORIES_ONLY',1)
   ?};
   {? _group>0
   || KOMM.init(250,,'Zapisywanie załączników'@)
   ?};

   {? exec('interm','#system')
   ||
::    Interm
      _tab.cntx_psh();
      {? _group=0
      ||
::       Zaznaczono jeden plik
         {? _selected.first()
         || _uidref:=_selected.STR_DATA;
            {? _tab.seek(_uidref,ref_name(_uidref),1)
            ||
               _what:='';
               _blob_ref:=($('_tab:=_a;_tab.'+.FIELD))(_tab);
               {? _blob_ref<>null()
               || _what:=_tab.bl_info(.FIELD,'NAME')
               ?};
               {? exec('blk_lock','#table',2-!_tab,_tab.ref(),,1,'Załącznik: %1 jest redagowany.'@[_what],,_group)
               || {? _blob_ref<>null()
                  || exec('bl_save','#blob',_tab,.FIELD)
                  || FUN.emsg('Brak pliku w bazie danych. Załącznik jest pusty.'@)
                  ?};
                  exec('blk_unlock','#table',2-!_tab,_tab.ref())
               ?}
            ?}
         ?}
      |? _group>0
      ||
::       Zaznaczono wiele plików
         {? _selected.first()
         ||
::          Tworzę katalog tymczasowy na serwerze i tam ściągam wszystkie zaznaczone pliki
            _tmp_dir:=fmk_tmp_dir(0);
            {? type_of(_tmp_dir)<>type_of(~~)
            || _pth:=_tmp_dir.get_path();
               {!
               |?
                  _uidref:=_selected.STR_DATA;
                  {? _tab.seek(_uidref,ref_name(_uidref),1)
                  ||
                     _what:='';
                     _blob_ref:=($('_tab:=_a;_tab.'+.FIELD))(_tab);
                     {? _blob_ref<>null()
                     || _what:=_tab.bl_info(.FIELD,'NAME')
                     ?};
                     {? exec('blk_lock','#table',2-!_tab,_tab.ref(),,1,'Załącznik: %1 jest redagowany.'@[_what],,_group)
                     || {? _blob_ref<>null()
                        || _name:=_tab.bl_info(.FIELD,'NAME');
                           _file:=_pth+exec('sep','#file',2)+_name;
                           _can_continue:=_tab.bl_get(.FIELD,_file,0)
                        || KOMM.add('Brak pliku w bazie danych. Załącznik jest pusty.'@)
                        ?};
                        exec('blk_unlock','#table',2-!_tab,_tab.ref())
                     ?}
                  ?};
                  _selected.next() & _can_continue>0
               !}
            || _can_continue:=0;
               KOMM.add('Nie udało się utworzenie katalogu tymczasowego po stronie serwera.'@,2,,1)
            ?};

            {? _can_continue>0
            || _tmp_dir2:=fmk_tmp_dir(0);
               {? type_of(_tmp_dir2)<>type_of(~~)
               || _pth2:=_tmp_dir2.get_path();
                  {? .BLOB_TITLE<>''
                  || _name:=.BLOB_TITLE+'.zip';
                     _name:=exec('name_cleaner','#file',_name);
                     ~~
                  || _name:='Załączniki'@+'_'+$SYSLOG.tm_stamp()+'.zip'
                  ?};
                  _arch:=_pth2+exec('sep','#file',2)+_name;
                  _can_continue:=fpack_add(_arch,_pth);
                  {? _can_continue>0
                  || dlg_save(_arch,0,_name)
                  ?}
               || _can_continue:=0;
                  KOMM.add('Nie udało się utworzenie katalogu tymczasowego po stronie serwera.'@,2,,1)
               ?}
            ?}
         ?}
      ?};
      _tab.cntx_pop();
      ~~
   ||
::    JTerm
      {? type_of(_dir)>0 & _dir<>''
      || _tab.cntx_psh();
         _overwrite_all:=0;
         {? _selected.first()
         || {!
            |? _uidref:=_selected.STR_DATA;
               {? _tab.seek(_uidref,ref_name(_uidref),1)
               ||
                  _what:='';
                  _blob_ref:=($('_tab:=_a;_tab.'+.FIELD))(_tab);
                  {? _blob_ref<>null()
                  || _what:=_tab.bl_info(.FIELD,'NAME')
                  ?};
                  {? exec('blk_lock','#table',2-!_tab,_tab.ref(),,1,'Załącznik: %1 jest redagowany.'@[_what],,_group)
                  ||
                     {? _blob_ref<>null()
                     ||
                        _file:=_tab.bl_info(.FIELD,'NAME');
                        _save:=1;
                        _exists:=fexists('@'+_dir+_dir_sep+_file,);

                        {? _overwrite_all=0 & _exists
                        || _save:=0;
                           _choice:=FUN.choice('Plik %1 już istnieje. Czy nadpisać?'@[_file],,'Wszystkie'@,'Tak'@,'Nie'@);
                           {? _choice=1
                           || _save:=1;
                              _overwrite_all:=1
                           |? _choice=2
                           || _save:=1
                           ?}
                        ?};
                        {? _save>0
                        || _tab.bl_get(.FIELD,'@'+_dir+_dir_sep+_file)
                        ?}
                     || _msg:='Brak pliku w bazie danych. Załącznik jest pusty'@;
                        {? _group>0
                        || KOMM.add(_msg,2,,1)
                        || FUN.emsg(_msg)
                        ?}
                     ?};
                     exec('blk_unlock','#table',2-!_tab,_tab.ref())
                  ?}
               ?};
               _selected.next() & _can_continue>0
            !}
         ?};
         _tab.cntx_pop()
      ?}
   ?};

   {? _group>0
   || KOMM.select()
   ?};
   ~~
";

_env.act_view:="
   params_set(params_get());

   _choice:=FUN.choice('Tryb wyświetlania plików:'@,,'Ikony'@,'Tabela'@);
   _view:='';
   {? _choice=1
   || _view:='icons'
   |? _choice=2
   || _view:='table'
   ?};
   {? _view<>''
   || ctr_call(,.ctr_id,'setView',_view)
   ?};
   ~~
";
_env


\edit_blob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.28]
:: OPIS: Redagowanie załączników
::   WE: _a - TABLE - tabela która musi zawierać pole typu BLOBRAW, do kontrolki zostaną
::                    wczytane wszystkie załączniki z aktualnej dzieidziny. Tabela MUSI mieć pole typu IDADD
::                    oraz musi się na niej udać funkcja del(,1) (nie może mieć powiązanych rekordów)
::       _b - STRING - akronim pola typu BLOBRAW
::       [_c] - obj_new() - bufor tabeli z polem BLOBRAW, będzie używany podczas edytowania załączników
::                        żeby ustalić ewentualne dodatkowe pola
::       [_d] - FORMULA - formuła na edycję, musi zwrócić 0/1, dostanie następujące argumenty:
::                      argument _a - ANY - argumenty przekazane jako _f
::                      argument _b - obj_new - bufor tabeli przekazany jako _c
::                      argument _c - STRING - 'Dołącz' - dołączanie
::                                    'Popraw' - poprawianie
::                      argument [_d] - dla poprawiania, uidref() poprawianego rekordu
::                      argument [_e] - dla dołączania przez dnd, lista upuszczanych rekordów
::
::                      wewnątrz formuły można za pomocą params_get().env_blob pobrać obiekt środowiska oraz jest dostępny KOMM
::       [_e] - FORMULA - formuła techniczna, wykonywana dla każdego pliku w transakcji, musi zwrócić 0/1, dostanie następujące argumenty:
::                      argument _a - ANY - argumenty przekazane jako _f
::                      argument _b - obj_new - bufor tabeli przekazany jako _c
::                      argument _c - STRING - nazwa pliku
::                      argument _d - STRING - ścieżka do pliku (bez @)
::
::                      wewnątrz formuły można za pomocą params_get().env_blob pobrać obiekt środowiska oraz jest dostępny KOMM
::       [_f] - ANY - argumenty formuły na edycję
::       [_g] - INTEGER - 0/[1] - czy edytowalny?
::       [_h] - STRING - tytuł okienka, domyślnie 'Załączniki'
::       [_i] - STRING - tryb widoku: ['icons'], 'table'
::       [_j] - tab_tmp - tabela tymczasowa zasilająca kontrolkę i wyświetlana w widoku tabelarycznym
::                        domyślnie tabela ma taki schemat i każda przekazana powinna mieć co najmniej takie pola:
::                        pole NAME - STRING[255],
::                        pole SIZE - REAL,
::                        pole MOD_DATE - STRING[25]
::                        pole INT_DATA - INTEGER
::                        pole STR_DATA - STRING[25]
::       [_k] - FORMULA - formuła techniczna, zasilająca tabelę tymczasową _j, ma za zadanie dodać do niej jeden rekord
::                        żeby działało zaznaczanie elementów formuła niech lepiej nie wypełnia pola INT_DATA. Argumenty:
::                        argument _a - tab_tmp - tabela do której rekord dodać
::       [_l] - FORMULA - formuła walidująca czy można dołączyć, poprawić załącznik
::                        argument _a - ANY - argumenty przekazane jako _f
::                        argument _b - obj_new - bufor tabeli przekazany jako _c
::                        argument _c - STRING - nazwa pliku
::                        argument _d - STRING - ścieżka do pliku (bez @)
::                        argument _e - INTEGER - 0 - komunikaty na ekran, 1 - do KOMMa
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_field:=_b;

_buffer:=~~;
{? var_pres('_c')>100
|| _buffer:=_c
?};

_fml_edit:="";
{? var_pres('_d')=type_of("")
|| _fml_edit:=_d
?};
_fml_file:="";
{? var_pres('_e')=type_of("")
|| _fml_file:=_e
?};
_fml_args:=~~;
{? var_pres('_f')>0
|| _fml_args:=_f
?};

_editable:=1;
{? var_pres('_g')=type_of(0)
|| _editable:=_g
?};

_title:='';
{? var_pres('_h')=type_of('')
|| _title:=_h
?};

_viewmode:='icons';
{? var_pres('_i')=type_of('')
|| _viewmode:=_i
?};

_tab_tmp:=~~;
{? var_pres('_j')>100
|| _tab_tmp:=_j
?};
_fml_load:="";
{? var_pres('_k')=type_of("")
|| _fml_load:=_k
?};
_fml_valid:="";
{? var_pres('_l')=type_of("")
|| _fml_valid:=_l
?};


_env:=exec('env_blob','#edit');
_env.EDITABLE:=1;
_env.BUFFER:=_buffer;
_env.FML_EDIT:=_fml_edit;
_env.FML_FILE:=_fml_file;
_env.FML_ARGS:=_fml_args;
_env.TAB:=_tab;
_env.FIELD:=_field;
_env.EDITABLE:=_editable;
{? _title<>''
|| _env.tit_main:=_title
?};
{? _viewmode<>''
|| _env.VIEWMODE:=_viewmode
?};
{? type_of(_tab_tmp)>100
|| obj_del(_env.TAB_CTRL);
   _env.TAB_CTRL:=_tab_tmp
?};
{? _fml_load<>""
|| _env.FML_LOAD:=_fml_load
?};
{? _fml_valid<>""
|| _env.FML_VALID:=_fml_valid
?};

:: Pokazuję kontrolkę
_env.select();
~~


\edit_radiobutton
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.42]
:: OPIS: Redagowanie wartości typu radiobutton
::   WE: [_a] - NUMBER lub STRING - wartość początkowa
::       [_b] - STRING - nazwa parametru
::       [_c] - obj_new() - tablica z nazwami radiobuttonów
::       [_d] - obj_new() - tablica z wartościami dla radiobuttonów
::       [_e] - STRING - nazwa separatora, jeżeli nie podano to brak separatora
::   WY: ANY - zredagowana wartość lub ~~ jeśli przerwano redakcję
::  TAG: <PUBLICZNA><REDAKCJA>
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
params_set(params_get());
_value:=~~;
{? var_pres('_a')=type_of(0) || _value:=_a ?};
{? var_pres('_a')=type_of('') || _value:=_a ?};
{? var_pres('_b')=type_of('') || _name:=_b || _name:='Priorytet' ?};
{? var_pres('_c')>100
|| _names:=_c
|| _names:=obj_new(4);
   _names[1]:='Niski'@;
   _names[2]:='Średni'@;
   _names[3]:='Wysoki'@;
   _names[4]:='Krytyczny'@
?};
{? var_pres('_d')>100
|| _vals:=_d
|| _vals:=obj_new(4);
   _vals[1]:=0;
   _vals[2]:=1;
   _vals[3]:=2;
   _vals[4]:=3
?};
_sep:='';
{? var_pres('_e')=type_of('')
|| _sep:=_e
?};


{? type_of(_vals[1])=type_of(0)
|| _tab:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
      'VAL','REAL','Wartość'
   )
|? type_of(_vals[2])=type_of('')
|| _tab:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
      'VAL','STRING[255]','Wartość'
   )
?};
{? type_of(_tab.VAL)=type_of(_value)
|| _tab.VAL:=_value
?};
_edit:=_tab.mk_edit(FUN.TYT,0,'#editpriorcore');
{? _sep<>''
|| _tab.win_esep(_edit,_sep)
?};

_label_limit:=60;
_labels:=exec('lines','#string',_name,_label_limit);
_labels.first();

params_set('vals',_vals);
_fml:='_tab:=_a;';
_fml+='_edit:=_b;';
_fml+='_labels:=_c;';
_fml+='_names:=_d;';
_fml+='_vals:=_e;';
_fml+='_tab.win_efld(_edit,_tab,\'VAL\',,,100,0,,_labels.LINE,,,\'radio-buttons\',';
{! _it:=1..obj_len(_names)
|! _fml+=',\''+_names[_it]+'\',\"params_get().vals['+$_it+']\"'
!};
_fml+=')';

($_fml)(_tab,_edit,_labels,_names,_vals);
{? _labels.size()>1 & _labels.next()
||
   {!
   |?
::    Dodaje puste etykiety żeby zmieścić cały opis
      _lbl:=_labels.LINE;
      _tab.win_efld(_edit,AH,'H',,,,,,_lbl);
      _labels.next()
   !}
?};

exec('ok_esc','#window',_tab,_edit);
_tab.win_edit(_edit);

{? _tab.edit()
|| _result:=_tab.VAL
?};
_result


\edit_html_blob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Uruchamia edytorek HTMLa który zawartość będzie trzymał w blobie podanej tabeli
::   WE: _a - ANY - akronim lub uchwyt do tabeli
::       _b - STRING - akronim pola typu BLOB w tabeli
::       _c - STRING - identyfikator kontrolki (powinien być w miarę unikalny np 'dokum_edit')
::       [_d] - TABLE.ref() - ref rekordu lub bieżący rekord
::       [_e] - STRING - tytuł okienka
::       [_f] - INTEGER - 0/[1] - czy zawartość ma być edytowalna
::   WY: 0 - porażka, wystąpił błąd
::      -1 - użytkownik zrezygnował z edycji
::       1 - edycja się powiodła
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('')
|| _tab:=($_a)()
|? var_pres('_a')>100
|| _tab:=_a
?};
_field:=_b;
_ctr_id:=_c;

_ref:=null();
{? var_pres('_d')=type_of(SYSLOG.ref())
|| _ref:=_d
?};
_title:='';
{? var_pres('_e')=type_of('')
|| _title:=_e
?};
_editable:=1;
{? var_pres('_f')=type_of(0)
|| _editable:=_f
?};

_result:=0;
_can_continue:=1;

_tab.cntx_psh();
{? _ref<>null()
|| _tab.prefix();
   {? _tab.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   _name:=_tab.bl_info(_field,'NAME');
   _env:=obj_new('REF'
                  ,'ctr_id'
                  ,'FIELD'
                  ,'TAB'
                  ,'FILE_NAME');
   _env.REF:=_tab.ref();
   _env.ctr_id:=_ctr_id;
   _env.FIELD:=_field;
   _env.TAB:=_tab;
   _env.FILE_NAME:=_name;

   params_set('env_blob',_env);

   {? _title=''
   || _title:='Dokument html — %1'@[_name]
   ?};
::   _before:="
::      _env:=params_get().env_html;
::      exec('load','#desktop',_env.ctr_id,'#html_edit_blob.dsk',,,,,,0);
::      exec('set_value','#desktop','',_env.ctr_id,'edytor@desktop','ref='+$_env.REF);
::      ~~
::   ";
::   _close:="
::      _env:=params_get().env_html;
::      _result:=1;
::      _mod:=exec('get_value','#desktop','',_env.ctr_id,'edytor@desktop','mod');
::
::      {? _mod='true'
::      || _msg:='Istnieją niezapisane zmiany w dokumencie. Czy na pewno wyjść z okienka edytora?'@;
::         _choice:=FUN.choice(_msg,,'Zapisz i wyjdź'@,'Wyjdź'@);
::         {? _choice=1
::         || exec('set_value','#desktop','',_env.ctr_id,'edytor@desktop','saveAndRun=sel_exit()');
::            _result:=0
::         |? _choice=2
::         || _result:=1
::         || _result:=0
::         ?}
::      ?};
::      _result
::   ";
::   _grp:=_tab.grp_make(_title,_before,'#html_edt_blob',,,_close,,'normal');
::   _ctr_id:=exec('create','#desktop',_tab,_ctr_id,_grp,30);
::   _tab.win_sel(_grp);
::   _tab.select()

   _filelocal:=exec('tmp_filepath','#file',$SYSLOG.tm_stamp()+'.html',1);
   _can_continue:=_tab.bl_get(_field,_filelocal);
   ~~
?};

{? _can_continue>0
|| _fml_save:="
         _env:=params_get().env_blob;
         _tab:=_env.TAB;
         _field:=_env.FIELD;
         _filename:=_env.FILE_NAME;

         _result:=0;
         _can_continue:=1;

         _sep:=exec('sep','#file');
         _fn:=ctr_info('file_name');
         {? _fn<>''
         || _can_continue:=_tab.bl_put(_field,_fn,0,,_filename);
            {? _can_continue<=0
            || FUN.emsg('Nie udał się zapis pliku: %1 w bazie danych'@[_filename])
            ?}
         ?};
         {? _can_continue>0
         || _result:=1
         ?};
         _result
      ";
      _env_html:=exec('html_core','#edit',SYSLOG
                                    ,_filelocal
                                    ,_ctr_id
                                    ,_title
                                    ,_fml_save
                                    ,_editable);
      _can_continue:=_env_html.RESULT
?};

_tab.cntx_pop();
{? _can_continue>0
|| _result:=1
|? _can_continue:=-1
|| _result:=-1
?};
_result


\edit_html_sysmemo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Uruchamia edytorek HTMLa który zawartość będzie trzymał w polu SYSMEMO podanej tabeli
::   WE: _a - ANY - akronim lub uchwyt do tabeli
::       _b - STRING - akronim pola typu SYSMEMO w tabeli
::       _c - STRING - identyfikator kontrolki (powinien być w miarę unikalny np 'dokum_edit')
::       [_d] - TABLE.ref() - ref rekordu lub bieżący rekord
::       [_e] - STRING - tytuł okienka
::       [_f] - INTEGER - 0/[1] - czy zawartość ma być edytowalna
::       [_g] - RULE - formuła na walidację treści, dostaje w _a treść, jeżeli zwróci 0 to zapis nie będzie przeprowadzony
::       [_h] - READ_BUFFER [0]/1 - odczyt pola SYSMEMO z bufora zamiast z bazy danych
::   WY: 0 - porażka, wystąpił błąd
::      -1 - użytkownik zrezygnował z edycji
::       1 - edycja się powiodła
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('')
|| _tab:=($_a)()
|? var_pres('_a')>100
|| _tab:=_a
?};
_field:=_b;
_ctr_id:=_c;

_ref:=null();
{? var_pres('_d')=type_of(SYSLOG.ref())
|| _ref:=_d
?};
_title:='';
{? var_pres('_e')=type_of('')
|| _title:=_e
?};
_editable:=1;
{? var_pres('_f')=type_of(0)
|| _editable:=_f
?};

_valid_fml:="";
{? var_pres('_g')=type_of("")
|| _valid_fml:=_g
?};

_read_buf:=0;
{? var_pres('_h')=type_of(0)
|| _read_buf:=_h
?};

_result:=0;
_can_continue:=1;

_tab.cntx_psh();
{? _ref<>null()
|| _tab.prefix();
   {? _tab.seek(_ref)
   || _can_continue:=1
   || _can_continue:=0
   ?}
?};

{? _can_continue>0
||
   _env:=obj_new('REF'
                  ,'ctr_id'
                  ,'FIELD'
                  ,'TAB'
                  ,'VALID_FML');
   _env.REF:=_tab.ref();
   _env.ctr_id:=_ctr_id;
   _env.FIELD:=_field;
   _env.TAB:=_tab;
   _env.VALID_FML:=_valid_fml;

   params_set('env_sysmemo',_env);
   {? _title=''
   || _title:='Dokument html'@
   ?};

   _filelocal:=exec('tmp_filepath','#file',$SYSLOG.tm_stamp()+'.html',1);

   _memo:=_tab.memo_txt(,1,_field);
   _tab_tmp:=tab_tmp(1,
         'ID','STRING[1]','aaa',
         'OPIS','SYS_MEMO','Nazwa pola 1',
         'BLOB','BLOBRAW','Blob');
   {? _memo*'<html>'=0 & _memo*'<!DOCTYPE html>'=0
   || _memo:=gsub(_memo,'\n','<br>')
   ?};
   _tab_tmp.blank();
   {? _tab_tmp.add()
   || _tab_tmp.memo_set(_memo);
      _tab_tmp.memo_put(,'OPIS');
      _file_memo:=_tab_tmp.memo_get('r','OPIS',_read_buf);
      {? var_pres('_file_memo')>100 & _file_memo.is_open()
      || _tab_tmp.bl_put('BLOB',_file_memo,0,,'info.txt');
         _can_continue:=_tab_tmp.bl_get('BLOB',_filelocal)
      || _can_continue:=0;
         FUN.emsg('Nie udało się ściągnięcie pliku: %1'@[_filelocal])
      ?}
   || _can_continue:=0
   ?};

   {? _can_continue>0
   ||
      _fml_save:="
         _env:=params_get().env_sysmemo;
         _tab:=_env.TAB;
         _field:=_env.FIELD;
         _can_continue:=1;
         _result:=0;

         _sep:=exec('sep','#file');
         _fn:=ctr_info('file_name');
         {? _fn<>''
         || _file:=fopen(_fn,'ur',0,,1);
            {? _file.is_open()
            ||
               _maxstr:=524172;
               _memo_txt:='';
               _size_txt:=0;
               {!
               |? _line:=_file.fread();
                  {? _line<>'\n'
                  || _size_line:=exec('get_str_size','#string',_line);
                     {? _size_txt+_size_line>_maxstr
                     || FUN.emsg('Przekroczono rozmiar bufora notatnikowego. Zmiany nie zostały zapisane.'@);
                        _can_continue:=0
                     || _memo_txt+=_line+'\n';
                        _size_txt:=exec('get_str_size','#string',_memo_txt)
                     ?}
                  ?};
                  _line<>'\n' & _can_continue>0
               !};
               {? _can_continue>0
               || {? _env.VALID_FML<>\"\"
                  || _can_continue:=_env.VALID_FML(_memo_txt)
                  ?}
               ?};

               {? _can_continue>0
               || _tab.memo_set(_memo_txt,_field)"
      +
            {? _read_buf
            || "
               "
            || ";
                  {? _can_continue
                  || _can_continue:=_tab.memo_put(,_field)
                  ?}
               "
            ?}
      +
              "?};
               _file.fclose()
            || _can_continue:=0
            ?}
         ?};
         {? _can_continue>0
         || _result:=1
         ?};
         _result
      "
      +'';
      _fml_save:=$_fml_save;
      _has_validator:=0;
      {? _valid_fml<>""
      || _has_validator:=1
      ?};
      _env_html:=exec('html_core','#edit',SYSLOG
                                    ,_filelocal
                                    ,_ctr_id
                                    ,_title
                                    ,_fml_save
                                    ,_editable
                                    ,
                                    ,
                                    ,
                                    ,
                                    ,
                                    ,_has_validator);
      _can_continue:=_env_html.RESULT
   ?}
?};
_tab.cntx_pop();
{? _can_continue>0
|| _result:=1
|? _can_continue:=-1
|| _result:=-1
?};
_result


\html_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Uruchamia edytorek HTMLa - jądro funkcji
::   WE: _a - ANY - akronim lub uchwyt do tabeli
::       _b - STRING - ścieżka do pliku z treścią html na terminalu lokalnym
::       _c - STRING - identyfikator kontrolki (powinien być w miarę unikalny np 'dokum_edit')
::       [_d] - STRING - tytuł okienka
::       [_e] - FORMULA - formuła wykonywana przy zapisie
::       [_f] - INTEGER - 0/[1] - czy zawartość ma być edytowalna
::       [_g] - INTEGER - 0/[1] - czy wyświetlać przyciski na dolnej belce
::       [_h] - INTEGER - 0/[1] - czy wyświetlać okno, czy tylko inicjować obsługę (0 dla okien grupowych)
::       [_i] - INTEGER - [160] - szerokość okienka
::       [_j] - INTEGER - 0/[1] - czy przyciski na górnej belce mają być widoczne
::       [_k] - INTEGER - 0/[1] - czy menu ma być widoczne
::       [_l] - INTEGER - [0]/1 - czy jest przekazana formuła na walidację
::   WY: obj_new - obiekt środowiska edytora
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

{? var_pres('_a')=type_of('')
|| _tab:=($_a)()
|? var_pres('_a')>100
|| _tab:=_a
?};
_filepath:=_b;
{? 1+_filepath='@'
|| _filepath:=1-_filepath
?};

_ctr_id:=_c;

_title:='';
{? var_pres('_d')=type_of('')
|| _title:=_d
?};

_fml_save:="";
{? var_pres('_e')=type_of("")
|| _fml_save:=_e
?};
_editable:=1;
{? var_pres('_f')=type_of(0)
|| _editable:=_f
?};
_buttons:=1;
{? var_pres('_g')=type_of(0)
|| _buttons:=_g
?};
_show:=1;
{? var_pres('_h')=type_of(0)
|| _show:=_h
?};

_width:=160;
{? var_pres('_i')=type_of(0) & _i>0
|| _width:=_i
?};

_toolbar:=1;
{? var_pres('_j')=type_of(0)
|| _toolbar:=_j
?};
_menu:=1;
{? var_pres('_k')=type_of(0)
|| _menu:=_k
?};

_has_validator:=0;
{? var_pres('_l')=type_of(0)
|| _has_validator:=_l
?};

_result:=0;
_can_continue:=1;

_env:=obj_new('ctr_id'
               ,'FILEPATH'
               ,'FML_SAVE'
               ,'FML_CONFIG'
               ,'WIN_ACR'
               ,'GRP'
               ,'RESULT'
               ,'CLOSE'
               ,'HAS_VALIDATOR');
_env.ctr_id:=_ctr_id;
_env.RESULT:=1;
_env.FILEPATH:=_filepath;
_env.FML_SAVE:=_fml_save;
_env.WIN_ACR:='';
_env.GRP:='';
_env.HAS_VALIDATOR:=_has_validator;
{? _show>0
|| _env.CLOSE:=1
|| _env.CLOSE:=0
?};
_env.FML_CONFIG:=exec('html_config','#edit',_ctr_id,_filepath,_editable,_buttons,_toolbar,_menu);

{? _can_continue>0
||
   params_set(exec('obj_ntab_set','#array',params_get(),'env_html',_env));
   {? _title=''
   || _title:='Dokument html — %1'@[_filepath]
   ?};

:: tworzymy okno tymczasowe z kontrolką
   _before:="
      params_set(params_get());
      _env_html:=params_get().env_html;
      _env_html.FML_CONFIG();
      1
   ";

   _close:="
      params_set(params_get());
      _env_html:=params_get().env_html;
      ctr_call(,_env_html.ctr_id,'beforeClose')
   ";

   _env.GRP:=_tab.grp_make(_title,_before,'#g_'+_ctr_id,,,_close,,'html_maximized');
   _env.WIN_ACR:=_tab.mk_ctr(_title,'#'+_ctr_id,,,_width,30);
   _tab.win_cctr(_env.WIN_ACR,_ctr_id,'@htmlrichedit');

   _tab.grp_ctr(_env.GRP,,_env.WIN_ACR,,,,,,,,,,,'maximized');
   _tab.win_ctr(_env.WIN_ACR);

   _tab.win_cfml(_env.WIN_ACR,_ctr_id,'CONTROL_CALLBACK',"
      _params:=params_get();
      params_set(_params);
      _can_continue:=1;
      {? var_pres('env_html',_params)>100
      || _env:=params_get().env_html
      || _env:=obj_new('ctr_id'
               ,'FILEPATH'
               ,'FML_SAVE'
               ,'FML_CONFIG'
               ,'WIN_ACR'
               ,'GRP'
               ,'RESULT'
               ,'CLOSE'
               ,'HAS_VALIDATOR');
         _env.HAS_VALIDATOR:=0;
         {? var_pres('__CTH')>100
         || _env.ctr_id:=__CTH.ctr_id;
            _env.FILEPATH:=__CTH.FILEPATH;
            _env.FML_SAVE:=__CTH.FML_SAVE;
            _env.FML_CONFIG:=__CTH.FML_CONFIG;
            _env.WIN_ACR:=__CTH.WIN_ACR;
            _env.GRP:=__CTH.GRP;
            _env.RESULT:=__CTH.RESULT;
            _env.CLOSE:=__CTH.CLOSE
         || _can_continue:=0
         ?}
      ?};

      _result:=0;
      {? _can_continue
      || {? ctr_info('action')='save'
         ||
            _modified:=ctr_call(,_env.ctr_id,'isModified');

::          Jeżeli jest walidator to dokument traktuję zawsze jako zmodyfikowany
::          bo jest ograniczenie systemowe - po zapisie i walidacji negatywnej isModified zwróciłoby
::          wynik 0
            {? _env.HAS_VALIDATOR>0
            || _modified:=1
            ?};

            {? _modified>0
            || _fn:=ctr_info('file_name');
               {? _fn<>''
               || _can_continue:=_env.FML_SAVE(_env)
               || FUN.emsg('Kontrolka edytora zwróciła pustą ścieżkę do zapisanego pliku.'@);
                  _can_continue:=0
               ?};
               {? _can_continue>0 & fexists(_fn,0)>0
               || {? ferase(_fn,0)=0
                  || FUN.info('Nie udało się usunięcie pliku: %1'@[_fn])
                  ?}
               ?}
            ?};
            {? _can_continue>0 & _env.CLOSE>0
            || sel_exit()
            ?}
         |? ctr_info('action')='cancel'
         || {? _env.CLOSE>0
            || sel_exit()
            ?}
         ?};
         {? _can_continue>0
         || _result:=1
         ?};
         _env.RESULT:=_result
      ?};
      _result
   ");
   _tab.win_sel(_env.GRP);
   {? _show>0
   ||
::    wyświetlenie okna
      _select:=_tab.select();
::    Kasowanie pliku źródłowego dla edytora
      {? _env.RESULT>0 & fexists(_filepath,0)>0
      || _env.RESULT:=ferase(_filepath,0)
      ?};
      {? _env.RESULT>0 & _select=0
      || _env.RESULT:=-1
      ?}
   ?}
?};
_env


\html_config
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Zwraca formułę konfigurującą edytor
::   WE: _a - STRING - identyfikator kontrolki
::       _b - STRING - ścieżka do edytowanego pliku HTML
::       [_c] - INTEGER - 0/[1] - czy zawartość ma być edytowalna
::       [_d] - INTEGER - 0/[1] - czy przyciski na dolnej belce mają być widoczne
::       [_e] - INTEGER - 0/[1] - czy przyciski na górnej belce mają być widoczne
::       [_f] - INTEGER - 0/[1] - czy menu ma być widoczne
::   WY: FORMULA
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_ctr_id:=_a;
_filepath:=_b;
_editable:=1;
{? var_pres('_c')=type_of(0)
|| _editable:=_c
?};
_buttons:=1;
{? var_pres('_d')=type_of(0)
|| _buttons:=_d
?};

_toolbar:=1;
{? var_pres('_e')=type_of(0)
|| _toolbar:=_e
?};
_menu:=1;
{? var_pres('_f')=type_of(0)
|| _menu:=_f
?};

{? _editable=0
||
:: Jeżeli brak edycji, to przyciski na dole nie mają sensu
   _buttons:=0
?};

:: Podstawy
_fml:='';
_fml+='ctr_set(,\''+_ctr_id+'\', \'setReadOnly\', %1);'[$(~_editable)];
_fml+='ctr_set(,\''+_ctr_id+'\', \'setEditorBoolProperty\',\'browser_spellcheck\', 1);';
_fml+='ctr_set(,\''+_ctr_id+'\', \'setEditorBoolProperty\',\'paste_data_images\', 1);';
_fml+='ctr_set(,\''+_ctr_id+'\', \'setEditorProperty\',\'toolbar_mode\',\'sliding\');';
_fml+='ctr_set(,\''+_ctr_id+'\', \'setEditorProperty\',\'fullpage_default_doctype\',\'<!DOCTYPE html>\');';

:: Przyciski na dole
_fml+='ctr_set(,\''+_ctr_id+'\', \'setButtonsVisible\', %1);'[$_buttons];

:: Katalog bazowy w którym znajduje się dokument
_dir:=exec('dir_from_path','#file',_filepath);
{? _dir<>''
|| {? 1+_dir='@'
   || _dir:=1-_dir
   ?};
   _dir:=gsub(_dir,'\\','/');
   _fml+='ctr_set(,\''+_ctr_id+'\', \'setEditorBoolProperty\',\'relative_urls\',1);';
   _fml+='ctr_set(,\''+_ctr_id+'\', \'setEditorProperty\',\'document_base_url\', \'%1\');'['file://////'+_dir+'/']
?};

:: Pluginy
_fml+='ctr_set(,\''+_ctr_id+'\', \'setEditorProperty\',\'plugins\',\'';
_fml+='save ';
_fml+='advlist ';
_fml+='autolink ';
_fml+='lists ';
_fml+='link ';
_fml+='image ';
_fml+='charmap ';
_fml+='searchreplace ';
_fml+='code ';
_fml+='insertdatetime ';
_fml+='table ';
_fml+='paste ';
_fml+='code ';
_fml+='charmap ';
_fml+='searchreplace ';
_fml+='hr ';
_fml+='pagebreak ';
_fml+='nonbreaking ';
_fml+='help ';
_fml+='quickbars ';
_fml+='fullpage ';

_fml+='\');';

:: Toolbar
_fml+='ctr_set(,\''+_ctr_id+'\', \'setEditorProperty\',\'toolbar\',\'';
{? _toolbar>0
||

   _fml+='save | ';
   _fml+='undo redo |';
   _fml+='bold ';
   _fml+='italic ';
   _fml+='underline ';
   _fml+='strikethrough | ';
   _fml+='quickimage ';
   _fml+='fontselect ';
   _fml+='fontsizeselect ';
   _fml+='formatselect | ';
   _fml+='alignleft aligncenter alignright alignjustify |';
   _fml+='outdent indent | ';
   _fml+='numlist bullist | ';
   _fml+='forecolor backcolor |';
::_fml+='pagebreak ';
   _fml+='charmap ';
   _fml+='preview ';
   _fml+='quicktable ';
   _fml+='link ';
   ~~
?};
_fml+='\');';

:: Quickbar dla zaznaczenia
_fml+='ctr_set(,\''+_ctr_id+'\', \'setEditorProperty\',\'quickbars_selection_toolbar\',\'';
_fml+='bold italic underline strikethrough | ';
_fml+='quicklink ';
_fml+='h1 h2 h3 ';
_fml+='blockquote ';
_fml+='quickimage ';
_fml+='quicktable |';
_fml+='removeformat ';

_fml+='\');';

:: Menu
{? _menu>0
|| _fml+='ctr_set(,\''+_ctr_id+'\', \'setEditorProperty\',\'menubar\',\'';
   _fml+='file ';
   _fml+='edit ';
   _fml+='view ';
   _fml+='insert ';
   _fml+='format ';
   _fml+='tools ';
   _fml+='table ';
   _fml+='help ';

   _fml+='\');'
?};

:: Menu kontekstowe
_fml+='ctr_set(,\''+_ctr_id+'\', \'setEditorProperty\',\'contextmenu\',\'';
_fml+='link ';
_fml+='image ';
_fml+='imagetools ';
_fml+='table ';

_fml+='\');';

:: Format daty i czasu stworzenia/modyfikacji
_fml+='ctr_set(,\''+_ctr_id+'\', \'setEditorProperty\',\'template_cdate_format\',\'';
_fml+='[Date Created (CDATE): %m/%d/%Y : %H:%M:%S]';
_fml+='\');';

_fml+='ctr_set(,\''+_ctr_id+'\', \'setEditorProperty\',\'template_mdate_format\',\'';
_fml+='[Date Modified (MDATE): %m/%d/%Y : %H:%M:%S]';
_fml+='\');';

:: Inicjalizacja i wczytywanie pliku
_fml+='ctr_set(,\''+_ctr_id+'\', \'init\')';
{? _filepath<>''
|| {? 1+_filepath='@'
   || _filepath:=1-_filepath
   ?};
   _fml+=';ctr_call(,\''+_ctr_id+'\',\'readFile\',\''+gsub(_filepath,'\\','\\\\') +'\')'
?};

$_fml


\edit_html_file
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.42]
:: OPIS: Uruchamia edytorek HTMLa dla przekazanego pliku lokalnego lub na serwerze
::   WE: _a - STRING - ścieżka do pliku z treścią html, jeżeli zawiera @ na początku oznacza plik lokalny
::       _b - STRING - identyfikator kontrolki (powinien być w miarę unikalny np 'dokum_edit')
::       [_c] - STRING - tytuł okienka
::       [_d] - INTEGER - 0/[1] - czy zawartość ma być edytowalna
::       [_e] - INTEGER - 0/1 - czy plik wg ścieżki pth. Jeśli nie podane to określane automatem na podstawie _a
::   WY: 0 - porażka, wystąpił błąd
::      -1 - użytkownik zrezygnował z edycji
::       1 - edycja się powiodła
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_filepath:=_a;

_local:=0;
{? 1+_filepath='@'
|| _local:=1
?};
_pth:=~_local;
{? var_pres('_e')=type_of(0)
|| _pth:=_e
?};

_ctr_id:=_b;

_title:='';
{? var_pres('_c')=type_of('')
|| _title:=_c
?};

_editable:=1;
{? var_pres('_d')=type_of(0)
|| _editable:=_d
?};

_result:=0;
_can_continue:=1;

{? fexists(_filepath,_pth)=0
|| FUN.emsg('Brak pliku: %1'@[_filepath])
?};

{? _can_continue>0
||
   _sep:=exec('sep','#file');

   _filelocal:=_filepath;
   {? _local=0
   || _filelocal:=exec('tmp_filepath','#file',$SYSLOG.tm_stamp()+'.html',1);
      _can_continue:=fcopy(_filepath,_filelocal,_pth,0,1)
   ?};

   {? _can_continue>0
   ||
      _fml_save:='
         _sep:=exec(\'sep\',\'#file\',%2);\n
         _fn:=ctr_info(\'file_name\');\n
         _dst:=\'%1\';\n
         _can_continue:=fcopy(_fn,_dst,0,%2,1);\n
         {? _can_continue>0
         || _can_continue:=ferase(_fn,0)
         ?};
         _can_continue
      '[_filepath,$(_pth)];
      _fml_save:=$_fml_save;

      _env:=exec('html_core','#edit',SYSLOG
                                    ,_filelocal
                                    ,_ctr_id
                                    ,_title
                                    ,_fml_save
                                    ,_editable);
      _can_continue:=_env.RESULT
   ?}
?};
{? _can_continue>0
|| _result:=1
|? _can_continue:=-1
|| _result:=-1
?};
_result


\show_tips
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyświetla okienko z szerokim, wielowierszowym polem zawierającym tekst.
::   WE: _c STRING - tekst do wyświetlenia w polu wielowierszowym
::       _a [STRING] - tytuł okienka, domyślnie FUN.TYT
::       _b [STRING] - nazwa sekcji, domyślnie 'Wskazówki'
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_text:={? var_pres('_a')=type_of('') || _a || '' ?};
_title:={? var_pres('_b')=type_of('') || _b || FUN.TYT ?};
_label:={? var_pres('_c')=type_of('') || _c || 'Wskazówki'@ ?};

_BUF:=tab_tmp(1,
   'NUM','INTEGER',,
   'TXT','SYS_MEMO',_label
);
_BUF.memo_set(_text,'TXT');
{? _BUF.add() & _BUF.memo_put(,'TXT')
|| exec('edit_memo_fld','#edit',_BUF,'TXT',-1,_title,,,,120,20)
?};
~~


\edit_color
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.37]
:: OPIS: Wyświetla okno redagowania koloru
::   WE: [_a] STRING - wartość początkowa w formacie '255:255:255'
::   WY: STRING - wybrany kolor lub '' jeżeli użytkownik zrezygnował
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_init:='';
{? var_pres('_a')=type_of('')
|| _init:=_a
?};
exec('Color','#object');
Color.edit(_init)


\blob_txt_dl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Pobranie tekstu z pola _a typu BLOBRAW
::   WE: _a - blob
::   WY: tekst
::----------------------------------------------------------------------------------------------------------------------
_return:='';
_dl:=fopen(_a,'ur',,,1);
{? _dl.is_open()
||
   _Tab:=tab_tmp(1,'FLD','STRING[1]',,'TXT','SYS_MEMO',);
   _Tab.add();
   _Tab.memo_put(_dl,'TXT');
   _return:=_Tab.memo_txt(,1,'TXT')
?};
_return


\blob_txt_ul
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [22.26]
:: OPIS: Zapisanie tekstu _d w pola _a._b typu BLOBRAW
::   WE: _a - blob
::       _b - ~~ lub tekst
::       _c - tabela
::       _d - akronim pola typu BLOBROW
::       _e - nazwa pliku w bazie danych
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')=type_of(~~) || return(0) ?};
_return:=0;
_ul:=fopen(_a,'Uw!',,,1);
{? _ul.is_open()
||
   fwrite(_ul,_b);
   _return:=_c.bl_put(_d,_ul,,,_e)
?};
_return


\edit_phone_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Redagowanie wartości typu numer telefonu
::   WE: [_a] - STRING - wartość początkowa
::       [_b] - STRING - nazwa parametru
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
{? var_pres('_a')=type_of('') || _value:=_a || _value:='' ?};
{? var_pres('_b')=type_of('') || _name:=_b || _name:='' ?};

_valid:="
   {? exec('phone_nr_ok','#email',cur_tab(1,1).VAL)
   || 1
   || FUN.emsg('Niepoprawny numer telefonu.'@); 0
   ?}
";
_result:=exec('edit_string','#edit',_a,_b,_valid);
_result


\edit_timestamp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [23.25]
:: OPIS: Redagowanie wartości typu tm_stamp czyli data+czas
::   WE: [_a] - REAL - wartość początkowa
::       [_b] - SRING - nazwa parametru
::       [_c] - RULE - formuła walidująca
::       [_d] - STRING - tytuł okna [FUN.TYT]
::   WY: zredagowana wartość
::  TAG: <PUBLICZNA><REDAKCJA>
::----------------------------------------------------------------------------------------------------------------------
_result:=~~;
{? var_pres('_a')=type_of(0) || _value:=_a || _value:=SYSLOG.tm_stamp() ?};
{? var_pres('_b')=type_of('') || _name:=_b || _name:='' ?};
{? var_pres('_c')=type_of("") || _valid:=_c || _valid:="1" ?};
{? var_pres('_d')=type_of('') || _title:=_d || _title:=FUN.TYT ?};

_tab:=tab_tmp(2,
   'DATE','DATE','Data'@
   ,'TIME','TIME','Czas'@
);
_tab.DATE:=exec('tm_stamp2date','#tm_stamp',_value);
_tab.TIME:=exec('tm_stamp2time','#tm_stamp',_value);
_edit:=_tab.mk_edit('|--|'+_title,0,'#edittimecore');

_label_limit:=60;
_labels:=exec('lines','#string',_name,_label_limit);
_labels.first();

_tab.win_efld(_edit,_tab,'DATE',,,20,0,,_labels.LINE);

{? _labels.size()>1 & _labels.next()
||
   {!
   |?
::    Dodaje puste etykiety żeby zmieścić cały opis
      _lbl:=_labels.LINE;
      _tab.win_efld(_edit,AH,'H',,,,,,_lbl);
      _labels.next()
   !}
?};

_tab.win_efld(_edit,_tab,'TIME',,,20,0,,'',1);
_tab.efld_opt(_edit, 'mark=1',,'DATE');

exec('ok_esc','#window',_tab,_edit);
_tab.win_edit(_edit);

{? _tab.edit(_valid)
|| _result:=_tab.VAL
?};
_result

:Sign Version 2.0 jowisz:1045 2024/01/31 13:25:23 d26ce27d02764d8f4faeb5779fff46ac0123e8bb597fb43975043847035d8b5ec065a368bc1156c73b23b6e9cffccbaf8d25d7f8e3242ce4a500f55f424fc49bcd2ab9a559f6d57c89b520f8589297829945351875766137871d599d864e029c72eb10b7a1e43908813fe8b61952296e8679903b274acb06b76cb3d77e15d971
