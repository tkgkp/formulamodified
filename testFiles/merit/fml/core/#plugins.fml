:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: #plugins.fml [18.42]
:: Utworzony: 17.09.2018
:: Autor: TS
::======================================================================================================================
:: Zawartość: Obsługa wtyczek wdrożeniowych
::======================================================================================================================


\decl_plugins
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Deklaracja klasy obsługującej wtyczki wdrożeniowe
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('Plugins',@.CLASS)>0
|| return()
?};

obj_decl('Plugins',
:: --POLA---------------------------------------------------------------------------------------------------------------
   obj_fld('TAB',~~),
   obj_fld('WER',''),
   obj_fld('RED',''),
   obj_fld('TYPES',~~),
   obj_fld('RUN',0),
   obj_fld('OK',1),
   obj_fld('SILENT',0),

:: --KONSTRUKTOR/DESTRUKTOR---------------------------------------------------------------------------------------------
   obj_meth('__init',
      "  .TAB:=tab_tmp(3
            ,'KOD','STRING[31]','Kod wtyczki'@
            ,'NAME','STRING[60]','Nazwa wtyczki'@
            ,'FORMULA','STRING[255]','Formuła'@
            ,'TYPE','INTEGER','Typ zwracanej wartości'@
            ,'DEFAULT','STRING[255]','Wartość domyślna'@
            ,'DESC','SYS_MEMO','Opis'@
            ,'RUN','INTEGER','Obsługa wtyczki aktualnie jest uruchomiona'@
         );
         .TYPES:=exec('mbFieldsType','#table');
         .init()
      "),
:: --METODY-------------------------------------------------------------------------------------------------------------

   obj_meth('run',
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Uruchamia formułę wtyczki o podanym kodzie
::   WE: _a [STRING] - kod wtyczki
::       _b .. _[_] - parametry wywołania (opcjonalne)
::   WY: wynik formuły wtyczki
::----------------------------------------------------------------------------------------------------------------------
      "  _result:=~~;
         {? do_state()=2 || return(_result) ?};
::       Kontrola wywołania wtyczki, gdy jest uruchomiona obsługa dowolnej wtyczki - wyłączone
         {? .RUN=1; 0
         || KOMM.error(
               'Niemożliwe uruchomienie formuły wdrożeniowej (wtyczki) o kodzie %1 z innej wtyczki.\n'
               'Zostanie zwrócona pusta wartość (%2).'@
               [_a,'~~'],
               ~.SILENT
            )
         || .RUN:=1;
            .TAB.cntx_psh();
            .TAB.prefix(_a,);
            {? .TAB.first()
            || {? .TAB.RUN=1
               || KOMM.error(
                     'Niemożliwe uruchomienie formuły wdrożeniowej (wtyczki) o kodzie %1 wewnątrz obsługi tej wtyczki.\n'
                     'Zostanie zwrócona pusta wartość (%2).'@
                     [_a,'~~'],
                     ~.SILENT
                  )
               || .TAB.RUN:=1;
                  .TAB.put();
                  {? |.TAB.FORMULA<>''
                  || params_set(params_get());
                     {? sec_superuser()=0
                     || on_error(2);
                        _no_msg:=no_msg(1)
                     || in_error()
                     ?};
                     {? _>1
                     ||
::                   Mapowator argumentów do przekazanej formuły - wymagany doktorat na MIT żeby zrozumieć
                        _zmienne:=obj_new(_);
                        _rule:=\"params_set(params_get());_a(\";
                        {! __:=2.._
                        |! _rule+={? type_of(_[__])>0
                                  || _zmienne[__]:=_[__]; '_b['+form(__)+']'
                                  || ''
                                  ?}+','
                        !};
                        _rule:=$((_rule-1)+')');
                        _result:=_rule($.TAB.FORMULA,_zmienne)
                     ||
::                   Bezargumentowo idzie łatwo
                        _result:=($.TAB.FORMULA)()
                     ?};
                     {? in_error()
                     || KOMM.error(
                           'Błąd wykonania formuły wdrożeniowej (wtyczki) o kodzie %1.\n'
                           'Szczegóły znajdują się w pliku: %2.\n'
                           'Treść formuły: %3\n'
                           'Zostanie zwrócona wartość domyślna.'@
                           [.TAB.KOD,_log:=app_info()+'.log';pth_dir(_log)+exec('sep','#file',1)+_log,.TAB.FORMULA],
                           ~.SILENT
                        );
                        {? var_pres('_result')>100 || obj_del(_result) ?};
                        _result:=($.TAB.DEFAULT)()
                     ?};
                     {? sec_superuser()=0
                     || on_error();
                        no_msg(_no_msg)
                     ?};
                     {? type_of(_result)<>.TAB.TYPE
                     || KOMM.error(
                           'Błędny wynik formuły wdrożeniowej (wtyczki) o kodzie %1.\n'
                           'Typ oczekiwany: %2, typ wyniku: %3.\n'
                           'Zostanie zwrócona wartość domyślna.'@
                           [.TAB.KOD,.type_name(.TAB.TYPE),.type_name(type_of(_result))],
                           ~.SILENT
                        );
                        {? var_pres('_result')>100 || obj_del(_result) ?};
                        _result:=($.TAB.DEFAULT)()
                     ?}
                  || _result:=($.TAB.DEFAULT)()
                  ?};
                  .TAB.RUN:=0;
                  .TAB.put()
               ?}
            ||
::             --- Próba zainicjowania mechanizmu - UWAGA: celowe wywołanie z warstwy LIB ---
               exec('init','plugins');
::             ------------------------------------------------------------------------------
               .TAB.prefix(_a,);
               {? ~.TAB.first()
               || KOMM.error(
                     'Brak formuły wdrożeniowej (wtyczki) o kodzie %1.\n'
                     'Zostanie zwrócona pusta wartość (%2).'@
                     [_a,'~~'],
                     ~.SILENT
                  )
               ?}
            ?};
            .TAB.cntx_pop();
            .RUN:=0
         ?};
         _result
      ",type_of('')),

   obj_meth('type_name',
      "  {? _a=0
         || 'VOID'
         |? _a<=obj_len(.TYPES.name)
         || .TYPES.name[_a]
         || 'Nieznany typ: %1'@[$_a]
         ?}
      ",type_of(0),-1),

   obj_meth('type_default',
      "  {? _a=0
         || ~~
         |? _a<=obj_len(.TYPES.default)
         || .TYPES.default[_a]
         || 'Nieznany typ: %1'@[$_a]
         ?}
      ",type_of(0),-1),

   obj_meth('select',
      "  .TAB.prefix();
         .WER:=.TAB.mk_sel(FUN.TYT,'P',,'plugins_wer',,,,,'U');
         .TAB.win_fld(.WER,,'KOD',,,20);
         .TAB.win_fld(.WER,,'NAME',,,50);
         .TAB.win_fld(.WER,,'FORMULA',,,50);
         .TAB.win_fld(.WER,,'DESC',,,50);
         .RED:=.TAB.mk_edit(FUN.TYT,,'plugins_red');
         .TAB.win_efld(.RED,,'KOD');
         .TAB.win_efld(.RED,,'NAME');
         .TAB.win_efld(.RED,,'FORMULA',,,100);
         .TAB.win_efld(.RED,,'DESC',,,100,-5);

         .TAB.win_sel(.WER);
         .TAB.win_edit(.RED);
         .TAB.select();
         ~~
      ",-1),

   obj_meth('clear',
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Usuwa dane z tabeli tymczasowej .TAB
::       Do użycia w formule exec('init','plugins') przed add-ami
::----------------------------------------------------------------------------------------------------------------------
      " .TAB.prefix();
        {? .TAB.first()
        || {!
           |? .TAB.del()
           !}
        ?};
        .OK:=1;
        return(.)
      ",-1),

   obj_meth('add',
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Dodanie/aktualizacja opisu wtyczki
::   WE: _a - kod
::       _b - nazwa
::       [_c] - akronim tabeli
::       [_d] - akcja
::       [_e] - wartość domyślna - decyduje o typie zwracanej wartości, pominięcie powoduje przyjęcie wartości ~~
::       _f - opis
::----------------------------------------------------------------------------------------------------------------------
      "  _kod:=_a;
         _name:=_b;
         {? var_pres('_c')=type_of('')
         || _acr_tab:=_c
         |? var_pres('_c')=type_of(~~)
         || _acr_tab:=''
         || FUN.emsg('Błędny typ parametru %1.'@['_c']);
            _acr_tab:=''
         ?};
         {? var_pres('_d')=type_of('')
         || _action:=_d
         |? var_pres('_d')=type_of(~~)
         || _action:=''
         || FUN.emsg('Błędny typ parametru %1.'@['_d']);
            _action:=''
         ?};
         {? var_pres('_e')>=0 || _value:=_e || _value:=~~ ?};
         {? var_pres('_f')=type_of('')
         || _desc:=_f
         || FUN.emsg('Błędny typ parametru %1.'@['_f']);
            _desc:=''
         ?};
         _result:=0;
         _formula:='';
         PLUGINS.cntx_psh();
         PLUGINS.index('KOD');
         PLUGINS.prefix(_kod,);
         {? PLUGINS.first()
         || PLUGINS.NAME:=_name;
            PLUGINS.ACR_TAB:=_acr_tab;
            PLUGINS.ACTION:=_action;
            PLUGINS.TYPE:=.type_name(type_of(_value));
            PLUGINS.DEFAULT:=exec('val2fml','#convert',_value,type_of(_value));
            PLUGINS.memo_set(_desc,'DESC');
            {? PLUGINS.put()
            || _formula:=PLUGINS.FORMULA;
               _result:=PLUGINS.memo_put(,'DESC')
            ?}
         || PLUGINS.KOD:=_kod;
            PLUGINS.NAME:=_name;
            PLUGINS.ACR_TAB:=_acr_tab;
            PLUGINS.ACTION:=_action;
            PLUGINS.FORMULA:='';
            PLUGINS.TYPE:=.type_name(type_of(_value));
            PLUGINS.DEFAULT:=exec('val2fml','#convert',_value,type_of(_value));
            PLUGINS.memo_set(_desc,'DESC');
            {? PLUGINS.add()
            || _result:=PLUGINS.memo_put(,'DESC')
            ?}
         ?};
         PLUGINS.cntx_pop();
         {? _result>0
         || _ok:=.add_tmp(_kod,_name,_formula,_value,_desc);
            .OK*={? var_pres('_ok')=type_of(0) || _ok || 0 ?}
         || .OK:=0
         ?};
         return(.)
      ",type_of(''),type_of('')),

   obj_meth('add_tmp',
      "  _result:=0;
         .TAB.prefix();
         .TAB.KOD:=_a;
         .TAB.NAME:=_b;
         .TAB.FORMULA:=_c;
         .TAB.TYPE:=type_of(_d);
         .TAB.DEFAULT:=exec('val2fml','#convert',_d,type_of(_d));
         .TAB.memo_set(_e,'DESC');
         {? .TAB.add() || _result:=.TAB.memo_put(,'DESC') ?};
         _result
      ",type_of(''),type_of(''),type_of('')),

   obj_meth('put_tmp',
      "  _result:=0;
         .TAB.prefix(_a,);
         {? .TAB.first()
         || .TAB.FORMULA:=_b;
            .TAB.put()
         ?};
         _result
      ",type_of(''),type_of('')),

   obj_meth('finish',
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Finalizacja zasilenia mechanizmu - usunięcie nadmiarowych rekordów z tabeli PLUGINS
::       Do użycia w formule exec('init','plugins') po add-ach
::----------------------------------------------------------------------------------------------------------------------
      "  {? .OK>0
         || PLUGINS.cntx_psh();
            PLUGINS.index('KOD');
            PLUGINS.prefix();
            {? PLUGINS.first()
            || {!
               |? .TAB.prefix(PLUGINS.KOD,);
                  {? .TAB.first()
                  || PLUGINS.next()
                  || PLUGINS.del()
                  ?}
               !}
            ?};
            PLUGINS.cntx_pop()
         ?};
         return(.)
      ",-1),

   obj_meth('init',
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Inicjowanie obiektu - naniesienie do tabeli tymczasowej zawartości z tabeli PLUGINS
::       Użyte w kontruktorze, może być też użyte na starcie systemu/obszaru roboczego
::----------------------------------------------------------------------------------------------------------------------
      "  .clear();
         PLUGINS.cntx_psh();
         PLUGINS.index('KOD');
         PLUGINS.prefix();
         {? PLUGINS.first()
         || {!
            |? .add_tmp(PLUGINS.KOD,PLUGINS.NAME,PLUGINS.FORMULA,($PLUGINS.DEFAULT)(),PLUGINS.memo_txt(,1,'DESC'));
               PLUGINS.next()
            !}
         ?};
         PLUGINS.cntx_pop();
         ~~
      ",-1),

   obj_meth('exists',
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Sprawdzenie, czy wtyczka jest dostępna w tabeli PLUGINS
::       Do użycia w kontekstach, gdy nie ma pewności, że został wykonany upgrade,
::       a nie chcemy dostać komunikatu o niedostępności wtyczki
::----------------------------------------------------------------------------------------------------------------------
      "  PLUGINS.cntx_psh();
         PLUGINS.index('KOD');
         PLUGINS.prefix(_a,);
         _exists:=PLUGINS.first();
         PLUGINS.cntx_pop();
         _exists
      ",type_of('')),

   obj_meth('runnable',
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Sprawdzenie, czy wtyczka jest dostępna w tabeli PLUGINS oraz czy ma wpisaną treść formuły
::       Do użycia w kontekstach, gdy chcemy uzależnić działanie od obecności formuły wdrożeniowej
::       np. wygaszenie akcji w oknie
::----------------------------------------------------------------------------------------------------------------------
      "  PLUGINS.cntx_psh();
         PLUGINS.index('KOD');
         PLUGINS.prefix(_a,);
         _runnable:=PLUGINS.first() & (|PLUGINS.FORMULA<>'');
         PLUGINS.cntx_pop();
         _runnable
      ",type_of('')),

   obj_meth('silent_on',
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Wyłączenie komunikatów pojawiających się podczas uruchamiania wtyczki
::       Do użycia np. w sytuacji, gdy wtyczka wywoływana jest w akcji grupowej
::----------------------------------------------------------------------------------------------------------------------
      "  .SILENT:=1
      ",-1),

   obj_meth('silent_off',
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Włączenie komunikatów pojawiających się podczas uruchamiania wtyczki
::----------------------------------------------------------------------------------------------------------------------
      "  .SILENT:=0
      ",-1),

   obj_meth('is_running',
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Sprawdzenie, czy aktualnie uruchomiona jest obsługa wtyczki (jakiejkolwiek)
::       Do użycia w kontekstach, gdy działanie formuł standardowych wołanych z wtyczki ma być odmienne
::----------------------------------------------------------------------------------------------------------------------
      "  .RUN
      ",-1),

   obj_meth('is_running',
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Sprawdzenie, czy aktualnie uruchomiona jest obsługa wtyczki (konkretnej)
::       Do użycia w kontekstach, gdy działanie formuł standardowych wołanych z wtyczki ma być odmienne
::----------------------------------------------------------------------------------------------------------------------
      "  _plugin:=_a;
         _is_running:=0;
         .TAB.cntx_psh();
         .TAB.prefix(_plugin,);
         {? .TAB.first()
         || _is_running:=.TAB.RUN
         ?};
         .TAB.cntx_pop();
         _is_running
      ",type_of(''),-1)
);
~~


\fld_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Po redakcji pól w tabeli PLUGINS
::   WY: 0 / 1
::----------------------------------------------------------------------------------------------------------------------
_result:=1;

{? cur_afld()='FORMULA'
|| _result:=exec('valid_formula','#field')
?};

_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Selekcja wtyczek - wywoływana z panelu administratora
::----------------------------------------------------------------------------------------------------------------------
PLUGINS.win_sel('WER');
PLUGINS.win_edit('RED');
PLUGINS.index('KOD');
PLUGINS.prefix();
PLUGINS.select();
''


\action_am
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Akcja po modyfikacji rekordu PLUGINS - aktualizacja tabeli tymczasowej obiektu Plugin
::----------------------------------------------------------------------------------------------------------------------
Plugin.put_tmp(PLUGINS.KOD,PLUGINS.FORMULA);
~~


\calls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wyświetla miejsca wywołania podanej wtyczki
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(2
   ,'FILENAME','STRING[64]','Plik'@
   ,'ROW','INTEGER','Wiersz'@
);
_row:=obj_new('number','text');
_files:=files('*.fml',1);
{? _files.first()
|| {!
   |? _file:=fopen(_files.FILENAME,'ur',1,,1);
      {? _file.is_open()
      || _row.number:=0; _row.text:='';
         {!
         |? _row.number+=1;
            _row.text:=_file.fread();
            {? 1+_row.text<>':' & _row.text*'Plugin.run(\'%1\''[PLUGINS.KOD]>0
            || _tab.FILENAME:=_files.FILENAME;
               _tab.ROW:=_row.number;
               _tab.add()
            ?};
            _row.text<>'\n'
         !}
      ?};
      obj_del(_file);
      _files.next()
   !}
?};
{? _tab.first()
|| _wer:=_tab.mk_sel('Miejsca wywołania wtyczki %1'@[PLUGINS.KOD],,,'#plugin_calls',,,,,'U');
   _tab.win_fld(_wer,,'FILENAME');
   _tab.win_fld(_wer,,'ROW');
   _tab.win_sel(_wer);
   _tab.select()
?};
~~


\fld_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: F3 dla pól w tabeli PLUGINS
::----------------------------------------------------------------------------------------------------------------------
_result:=fld();

{? cur_afld()='FORMULA'
|| _exec:=exec('parse_exec','#file',fld());
   _fml:=exec('select_formula','#file',,_exec.FILE);
   {? _fml<>''
   || _fml:=gsub(_fml,'.m.fml','.fml');
      _split:=spli_str(_fml,'\\');
      {? obj_len(_split)>1
      || _result:='params_exec(\''+_split[1]+'\',\''+_split[2]-4+'\')'
      ?}
   ?}
?};

_result


:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:09 32dd4c11c4d2572855e7a4233204c5d50e22bc6501761af382f0dadb165cd82f46cdbf15dec3888f2d383d4bbac877f94e23273c4b58d34f42bde0e099cca549e96e9ac6cf5ff457db52a5b4c791a257e373dd4a77afe4f7949f33ee6773e347a2b4f94369f02f12c4bf93fa26aba3ff0bdc2df47e1b8405782836a1c6210a34
