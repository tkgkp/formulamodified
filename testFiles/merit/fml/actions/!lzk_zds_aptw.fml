:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lzk_zds_aptw.fml
:: Utworzony: 02.11.2018
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Akceptacja potwierdzenia zamówień dostaw
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ,LZK
::# parses=exec('parses','!lzk_zds_aptw')
::# kind=WE,   symbol=ZDP_NAG,    type=_ZDP_NAG,  name=Potwierdzenie zamówienia dostaw,    required=T,    keyref=T
_mp:=params_get().mp;
_in:=params_get().in;

exec('init_zds','lzk');

:: WSTĘPNE WALIDACJE
_clean_result:=params_exec('clean','!lzk_zds_aptw',_mp,_in);
_can_continue:=_clean_result.RESULT;
{? _can_continue=0
|| return()
?};

_akcja:=_mp.akcja();
_auto:=_akcja<>'Akceptuj' & _mp.isAutoRun();

{? ~(var_pres('ZDP_NAG',_in)=type_of(null()) & _in.ZDP_NAG)
|| _mp.error('Brak wymaganego parametru ZDP_NAG.')
|? ref_name(_in.ZDP_NAG)<>ZDP_NAG.name()
|| _mp.error('Zamówienie jest w archiwum. Akceptacja niedostępna.')
|| ZDP_NAG.cntx_psh();
   ZDP_NAG.prefix();
   {? ~ZDP_NAG.seek(_in.ZDP_NAG)
   || _mp.error('Nie znaleziono potwierdzenia zamówień dostaw.')
   || params_set('mp',_mp);

      {? _akcja='Akceptuj' | _auto
      || exec('akceptuj','!lzk_zds_aptw',_auto)
      |? _mp.pathTodo()
         | _mp.pathArea() & _akcja=''
      || _win_red:=exec('zdptw_win_edit','zamdst_ptw','RED');
         _ff:="params_exec('zdptw_pozycje_todo','!lzk_zds_aptw')";
         ZDP_NAG.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['&Pozycje'@],_ff);
         _ff:="params_exec('zdptw_akceptuj_todo','!lzk_zds_aptw'); 'key:Esc'";
         ZDP_NAG.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['A&kceptuj'@],_ff);
         _ff:="'key:Esc'";
         ZDP_NAG.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Anuluj'@],_ff);
         ZDP_NAG.win_edit(_win_red);
         exec('set_efld_opt','zamdst_ptw',_win_red);
         ZDP_NAG.display();
::       Usunięcie definicji tymczasowych okien
         ZDP_NAG.win_edit(''); ZDP_NAG.win_edel(_win_red)
      || _mp.error('Nieobsługiwana ścieżka.')
      ?}
   ?};
   ZDP_NAG.cntx_pop()
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));

{? var_pres('ZDP_NAG',_in)<>type_of(~~) & _in.ZDP_NAG
|| 'Zaakceptuj potwierdzenie zamówień dostaw: %1'@@[exec('record','#to_string',_in.ZDP_NAG)]
|| ''
?}


\zdnag_potwakc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument zakupu - Akceptuj
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_APTW';
_params.UIDREF:=ZDP_NAG.uidref();
_params.AKCJA:='Akceptuj';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZDP_NAG',ZDP_NAG.ref());

exec('mp_run','#b__box',_params)


\zdptw_akceptuj_todo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument zakupu - Akceptuj z todo
::   WE: params_get()   - ustawiane w exec('main','!lzk_zds_azad')
::----------------------------------------------------------------------------------------------------------------------
params_exec('akceptuj','!lzk_zds_aptw')


\zdptw_pozycje_todo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument zakupu - Pozycje z todo
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
exec('zdp_poz','zamdst_ptw');
''


\akceptuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Potwierdzenie zamówień dostaw - Zakończenie rejestracji
::   WE: [_a] - 1-automatycznie 0-nie(domyślnie)
::   WE: params_get()   - ustawiane w exec('main','!lzk_zds_aptw')
::----------------------------------------------------------------------------------------------------------------------
_auto:={? var_pres('_a')=type_of(1) || _a || 0 ?};
_mp:=params_get().mp;

_result:=0;

{? ZDP_NAG.STAT_REJ='T'
|| {? ~_auto || FUN.info('Potwierdzenie zamówień dostaw %1 zostało już zaakceptowane.'@[ZDP_NAG.SYM]) ?};
   _result:=1;
   _mp.done()
|? ZDP_NAG.STAT_REJ='N'
|| FUN.info('Nie zakończono jeszcze rejestracji potwierdzenia zamówień dostaw %1.\nAkceptacja niemożliwa.'@[ZDP_NAG.SYM]);
   _mp.error('Nie zakończono jeszcze rejestracji potwierdzenia zamówień dostaw. Akceptacja niemożliwa.');
   _result:=1
|| _result:=exec('zdpn_akc','!lzk_zds_aptw',_auto);
   {? _result
   || _mp.done()
   ?}
?};

_result


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Formuła ustala PARSES
::   WE: UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;

{? var_pres('ZDP_NAG',_in)=type_of(null()) & _in.ZDP_NAG
|| ZDP_NAG.cntx_psh();
   ZDP_NAG.use(ref_name(_in.ZDP_NAG));
   ZDP_NAG.prefix();
   {? ZDP_NAG.seek(_in.ZDP_NAG)
   || __PARSES.setVal('OddzialLogProd',ZDP_NAG.ODDZ);
      _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:='LZK';
      _args.AR:=ZDP_NAG.DR~1;
      _args.AM:=ZDP_NAG.DR~2;
      __PARSES.setVal('OkresRok',_args)
   ?};
   ZDP_NAG.cntx_pop()
?};
1


\zdpn_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: naglowek potwierdzenia - akceptuj
::   WE: [_a] - 1-automatycznie 0-nie (domyślnie)
::  OLD: \zdpn-akc/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_auto:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_res:=0;

ZDP_POZ.index('ZDP_NAG');
ZDP_POZ.prefix(ZDP_NAG.ref());
{? ZDP_POZ.first()
|| {? ZDP_NAG.r_lock(1,1,1)
   || ZDP_NAG.get();
      {? ZDP_NAG.STAT_REJ<>'T'
      || {? _auto | FUN.ask('Zaakceptować potwierdzenie zamówień dostaw %1?'@[ZDP_NAG.SYM])
         || ZDP_NAG.AKC:='T';
            ZDP_NAG.STAT_REJ:='T';
            {? ZDP_NAG.put()
            || _res:=1;
               {!
               |? ZD_POZ.cntx_psh();
                  ZD_POZ.use(8+ZDP_POZ.ZD_POZ);
                  ZD_POZ.clear();
                  {? ZD_POZ.seek(ZDP_POZ.ZD_POZ)
                  || _mg:=ZD_POZ.MG;
                     _mat:=ZD_POZ.M
                  ?};
                  ZD_POZ.cntx_pop();
                  {? _mg<>null || exec('obl_stan','magazyn_stan',_mat,1,_mg) ?};
                  ZDP_POZ.next()
               !}
            ?}
         ?}
      || FUN.info('Potwierdzenie zamówień dostaw %1 jest już zaakceptowane.'@[ZDP_NAG.SYM])
      ?}
   || {? FUN.ask('Dokument %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@[ZDP_NAG.SYM])
      || ZDP_NAG.r_lock(1,,1)
      ?}
   ?};
   ZDP_NAG.r_unlock()
|| FUN.info('Potwierdzenie zamówień dostaw %1 nie posiada pozycji.\nAkceptacja niemożliwa.'@[ZDP_NAG.SYM])
?};
_res


\zdnag_potwwyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: naglowek potwierdzenia - wycofaj
::  OLD: \zdpn_wyc/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;

_no_sel:=~ZDP_NAG.sel_size();

_upr:=exec('chk_EndOrAcc','#b__box','LZK_ZDS_DPTW','LZK_ZDS_APTW');
_ask:=0;

{? _no_sel
|| {? ZDP_NAG.STAT_REJ='T' & (~exec('ctrl_WycPtw','!lzk_zds_aptw') | exec('ctrlREA','zamdst_ptw',1)<>1)
   || FUN.info('Potwierdzenie zamówień dostaw %1 było realizowane.\nOperacja niemożliwa.'@[ZDP_NAG.SYM])
   || _symbol:=exec('record','#to_string',ZDP_NAG.ref());
      {? _upr=1 & ZDP_NAG.STAT_REJ='T'
      || _ask:=FUN.choice('Wybierz jedną z opcji wycofania akceptacji lub zakończenia '
                          'potwierdzenia zamówień dostaw %1'@[_symbol]
                ,,'Akceptację i &zakończenie','&Akceptację')
      |? (_upr=1 | _upr=2) & ZDP_NAG.STAT_REJ='Z'
      || _ask:=FUN.ask('Wycofać zakończenie rejestracji potwierdzenia zamówień dostaw %1?'@[_symbol])
      |? _upr=4 & ZDP_NAG.STAT_REJ='T'
      || _ask:=FUN.ask('Wycofać akceptację potwierdzenia zamówień dostaw %1?'@[_symbol]);
         {? _ask || _ask:=2 ?}
      ?}
   ?}
|? ~_no_sel
|| {? _upr=1
   || _ask:=FUN.choice('Wybierz jedną z opcji wycofania akceptacji lub zakończenia '
                       'zaznaczonych potwierdzeń zamówień dostaw.\n\n'
                       'Uwaga. Wycofanie jest uzależnione od uprawnień do czynności rejestracji i akceptacji\n'
                       'oraz od aktualnego statusu danego potwierdzenia zamówień dostaw.'@
             ,,'Akceptację i &zakończenie','&Akceptację')
   |? _upr=2
   || _ask:=FUN.ask('Wycofać zakończenie rejestracji zaznaczonych potwierdzeń zamówień dostaw?\n\n'
                    'Uwaga. Wycofanie jest uzależnione od uprawnień do czynności rejestracji\n'
                    'oraz od aktualnego statusu danego potwierdzenia zamówień dostaw.'@)
   |? _upr=4
   || _ask:=FUN.ask('Wycofać akceptację zaznaczonych potwierdzeń zamówień dostaw?\n\n'
                    'Uwaga. Wycofanie jest uzależnione od uprawnień do czynności akceptacji\n'
                    'oraz od aktualnego statusu danego potwierdzenia zamówień dostaw.'@);
      {? _ask || _ask:=2 ?}
   ?}
?};

{? _ask || exec('wycZDP_NAG','!lzk_zds_aptw',,_ask) ?};
~~



\wycZDP_NAG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wycofanie akceptacji potwierdzeń zamówień dostaw
::   WE: [_a] - 1-bezwzgledne wycofanie akceptacji 0-domyslnie nie (pytania i opinie)
::       [_b] - typ wycofania 1-rejestracja 2-akceptacja 0-do ustalenia (domyślnie)
::  OLD: \wycreorg/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};

ZDP_NAG.get();
_tab:=ZDP_NAG.sel_aget();
ZDP_NAG.sel_adel();
{? _tab.size()
|| ZDP_NAG.cntx_psh();
   {? (_b | FUN.ask('Czy wycofać akceptację zaznaczonych potwierdzeń zamówień dostaw?'@)) & _tab.first()
   || {!
      |? {? (ZDP_NAG.clear(); ZDP_NAG.seek(_tab.REF,))
         || _pyt:={? _b=1 & (';TZ'*ZDP_NAG.STAT_REJ)>1
                  || 1
                  |? _b=2 & ZDP_NAG.STAT_REJ='T'
                  || 2
                  || 0
                  ?};
            {? _pyt & exec('ctrl_WycPtw','!lzk_zds_aptw')
            || exec('wyconePtw','!lzk_zds_aptw',_pyt)
            ?}
         ?};
         _tab.next()
      !}
   ?};
   ZDP_NAG.cntx_pop()
|? exec('ctrl_WycPtw','!lzk_zds_aptw')
|| exec('wyconePtw','!lzk_zds_aptw',_b)
?}

\wyconePtw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [19.02]
:: OPIS: kontrola możliwości wycofania
::   WE: _a - typ wycofania 1-rejestracja 2-akceptacja
::   WY: 1-OK 0-niestety
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? ZDP_NAG.r_lock(1,1,1)
|| _blk:=0;
   _sblk:='';
   ZDP_POZ.index('ZDP_NAG');
   ZDP_POZ.prefix(ZDP_NAG.ref());
   {? ZDP_POZ.first()
   || {!
      |? _zd_nag:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"ZD_NAG",null());
         {? _zd_nag<>null()
         || _blk:=exec('FindAndGet','#table',ZD_NAG,_zd_nag,,"_res:=r_lock(1,1,1); r_unlock(); ~_res",0);
            {? _blk || _sblk:=exec('FindAndGet','#table',ZD_NAG,_zd_nag,,"SYM",'') ?}
         ?};
         ~_blk & ZDP_POZ.next()
      !}
   ?};
   {? ~_blk
   || ZDP_NAG.get();
      {? (';ZT'*ZDP_NAG.STAT_REJ)>0
      || {? _a=1
         || ZDP_NAG.AKC:='N';
            ZDP_NAG.STAT_REJ:='N'
         || ZDP_NAG.AKC:='N';
            ZDP_NAG.STAT_REJ:='Z'
         ?};
         {? ZDP_NAG.put()
         || ZDP_POZ.index('ZDP_NAG');
            ZDP_POZ.prefix(ZDP_NAG.ref());
            {? ZDP_POZ.first()
            || {!
               |? _mg:=_mat:=null;
                  ZD_POZ.cntx_psh();
                  ZD_POZ.use(8+ZDP_POZ.ZD_POZ);
                  ZD_POZ.clear();
                  {? ZD_POZ.seek(ZDP_POZ.ZD_POZ)
                  || _mg:=ZD_POZ.MG;
                     _mat:=ZD_POZ.M
                  ?};
                  ZD_POZ.cntx_pop();
                  {? _mg<>null || exec('obl_stan','magazyn_stan',_mat,1,_mg) ?};
                  ZDP_POZ.next()
               !}
            ?}
         ?}
      || FUN.info('Potwierdzenie zamówień dostaw %1 nie jest zaakceptowane.'@[ZDP_NAG.SYM])
      ?}
   || FUN.info('Niektóre zamówienia na pozycjach potwierdzenia są zablokowane.\n'
               'Pierwsze z zablokowanych zamówień to zamówienie: %1.\n\n'
               'Aktualnie operacja zmiany stanu potwierdzenia %2 niemożliwa.'@[_sblk,ZDP_NAG.SYM])
   ?}
|| {? FUN.ask('Potwierdzenie zamówień dostaw %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@[ZDP_NAG.SYM])
   || ZDP_NAG.r_lock(1,,1)
   ?}
?};
ZDP_NAG.r_unlock();
_res


\ctrl_WycPtw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [19.02]
:: OPIS: kontrola możliwości wycofania
::   WE: _a - ZDP_NAG.ref()
::   WY: 1-OK 0-niestety
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
:: sprawdza w aktywnej masce i w archiwum
_test_rn:="
   ZD_RN.index('ZDP_NAG');
   ZD_RN.prefix(_a,_a);
   ~ZD_RN.first()
";
ZD_RN.cntx_psh();
:: w aktywnej masce
ZD_RN.use('zdhin'+ST.ODDZ+'__');
_res:=_test_rn($ZDP_NAG.ref());
:: w archiwum
{? _res=1
|| OKR.cntx_psh();
   OKR.index('MC');
   OKR.prefix(REF.FIRMA,1);
   {? OKR.first()
   || {!
      |?
         ZD_RN.use('zdhin'+ST.ODDZ+($OKR.ROK+2));
         _res:=_test_rn($ZDP_NAG.ref());
         _res=1 & OKR.next()
      !}
   ?};
   OKR.cntx_pop()
?};
ZD_RN.cntx_pop();
_res


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::       [_b] - tablica z parametrami wejściowymi
::   WY: obj_new() - obiekt wynikowy
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
{? var_pres('_b')>100
|| _in:=_b
|| _in:=params_get().in
?};
params_exec('zd_clean','zamdst_nag',_mp,_in)

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:39 09770382b4a19c579208b36d842031656bd065b36d1405349adfe21917d4ff7e447c93fc697ca483a58d12ab345cd6e2bcd79439e928be554acf11d2f482d76b5ea6bb237da36f0c497817e47634ef96ae3dd05676602ab74542e6fb91845c818714b96931875ba62f4cdf92dadcd4f5212e36528ec7edb7125202397a1bc5a2
