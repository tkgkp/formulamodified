:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_ppsf.fml
:: Utworzony: 09.06.2021
:: Autor: DG
::======================================================================================================================
:: Zawartość: Formuły czynności ZWS_PAR_PPSF - Typy pracy poza siedzibą firmy.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Definiowanie typów pracy poza siedzibą firmy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('is_pzd01','ppsf')
|| PPSFR.cntx_psh();
   PPSFR.prefix();
   PPSF_NO.cntx_psh();
   PPSF_NO.prefix();
   R.cntx_psh();
   R.prefix();
   PPSFT.cntx_psh();
   PPSFT.index('NAZWA');
   PPSFT.prefix(exec('ref_firma','ustawienia'));
   PPSFT.win_sel('WER');
   PPSFT.win_edit('RED');
   PPSFT.win_patt('WZO');
   PPSFT.select();
   PPSFT.cntx_pop();
   R.f_clear();
   R.cntx_pop();
   PPSF_NO.cntx_pop();
   PPSFR.cntx_pop()
|| PPSFT.cntx_psh();
   PPSFT.index('NAZWA');
   PPSFT.prefix();
   PPSFT.win_sel('WER');
   PPSFT.win_edit('RED');
   PPSFT.win_patt('WZO');
   PPSFT.select();
   PPSFT.cntx_pop()
?};
~~


\ppsft_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Formuła odpowiedzialna za dynamiczne ustawianie właściwości pól tabeli PPSFT. Wykorzystywana zarówno przez
::       jTerma jak i webTerma.
::       Formuła wywoływana jest w dwóch kontekstach pracy:
::          - Po redagowaniu konkretnego pola, które determinuje właściwości wyświetlania innych pól.
::          - Przed wyświetleniem okna redagowania (przed właściwymi akcjami Dołącz, Popraw, Wyświetl), ustawia
::            właściwości wszystkich pól (wymagających tego).
::       Kontekst pracy jest określany na podstawie argumentu wywołania.
::   WE:  _a  [STRING] - Kontekst pracy:
::             '1' - Obsługa jednego pola [domyślnie].
::             '*D' - Obsługa wszystkich pól nowego rekordu.
::             '*P' - Obsługa wszystkich pól istniejącego rekordu.
::       [_b] [TABLE]  - Uchwyt tabeli, w oknie redagowania której znajdują sie pola. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęta bieżąca tabela.
::       [_c] [STRING] - Akronim okna, w którym mają być ustawione właściwości pól. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęte bieżące okno.
::       [_d] [STRING] - Identyfikator okna w grupie (parametr istotny dla webTerma).
::       [_e] [STRING] - Akronim pola, którego wartość determinuje właściwości wyświetlania innych pól. Parametr ma
::             znaczenie wyłącznie dla _a='1'. [Domyślnie: bieżące pole].
::   WY: 0 - Błąd argumentów wywołania.
::       1 - Argumenty poprawne (właściwości ustawione).
::----------------------------------------------------------------------------------------------------------------------
_webTerm:=app_info('web_sesid')<>'';

_tryb:={? var_pres('_a')=type_of('') & (_a='1' | 1+_a='*') || _a || '1' ?};
{? var_pres('_b')=type_of(PPSFT)
|| _TAB:=_b
|? _tryb='1'
|| _TAB:={? _webTerm || web_top_tab() || cur_tab(1,1) ?}
|| return(0)
?};
{? var_pres('_c')=type_of('')
|| _we:=_c
|? _tryb='1'
|| _we:={? _webTerm || web_top_win() || cur_win(1,1) ?}
|| return(0)
?};
_grp_ident:={? var_pres('_d')=type_of('') || _d || '' ?};
{? var_pres('_e')=type_of('')
|| _fld:=_e
|? _tryb='1'
|| _fld:={? _webTerm || web_top_fld_acr() || cur_afld() ?}
|| _fld:=''
?};

_set:=exec('efld_opt','#window',_webTerm,_we,_grp_ident);

{? exec('is_pzd01','ppsf')
|| _por:=exec('lic','#b_domain','POR');
   _send:=_por & _tryb='*P' & exec('get_id','#sync_id','PORTAL_PPSFT_ID',PPSFT.uidref(),,1).first();

   {? _fld=''
   || _mark:=$(PPSFT.SYSTEM<>'T' & ~_send);
      _sval:={? PPSFT.SYSTEM<>'T' & ~_send || '1' || 'grayed' ?};
      _set(_TAB,_we,_grp_ident,'mark=%1,editable=%2' [_mark,_sval],_TAB,'PPSFR');
      _set(_TAB,_we,_grp_ident,'mark=%1,editable=%2' [_mark,_sval],_TAB,'OPIS')
   ?};

   {? _fld='' | _fld='PPSFR'
   || _val:={? _por || PPSFT.PPSFR().KOD<>'ZDALN_ST' || 1 ?};
::    Obecnie SL DOPUSZCZA wnioski WYŁĄCZNIE dla pracy zdalnej nie-stałej (okazjonalnej, delegacji, ...).
      _set(_TAB,_we,_grp_ident,'enable=%1'[$_val],_TAB,'SKL_WN');

      {? _fld<>''
      || exec('ppsft_efld_opt','!zws_par_ppsf','1',_TAB,_we,_grp_ident,'SKL_WN')
      ?}
   ?};
   {? _fld='' | _fld='PPSFR'
   || _val:=PPSFT.PPSFR().KOD<>'ZDALN_ST' & ~_send;
      _set(_TAB,_we,,'enable=%1' [$_val],_TAB,'PARTDAY')
   ?};
   {? _fld='' | _fld='PPSFR' | _fld='GEN_G'
   || _sval:=$(PPSFT.PPSFR().KOD='ZDALN_ST' | PPSFT.GEN_G='G');
      _set(_TAB,_we,_grp_ident,'mark=%1' [_sval],_TAB,'R')
   ?};
   {? _fld='' | _fld='PPSF_NO' | _fld='SKL_WN'
::    Obecnie SL DOPUSZCZA wnioski WYŁĄCZNIE dla pracy zdalnej nie-stałej (okazjonalnej, delegacji, ...).
   || _val:=PPSFT.PPSF_NO<>null() & PPSFT.SKL_WN='T' & (~_por | PPSFT.PPSFR().KOD<>'ZDALN_ST');
      _set(_TAB,_we,_grp_ident,'enable=%1' [$_val],_TAB,'OSW_WYM');
      {? _fld<>''
      || exec('ppsft_efld_opt','!zws_par_ppsf','1',_TAB,_we,_grp_ident,'OSW_WYM')
      ?}
   ?};
   {? _fld='' | _fld='OSW_WYM'
   || _sval:=$(PPSFT.PPSFR().WSK_ADR='T' & PPSFT.SKL_WN='T' & PPSFT.OSW_WYM='T');
      _set(_TAB,_we,_grp_ident,'enable=%1' [_sval],_TAB,'OSW_WZA')

   ?};
   {? _fld='SKL_RCP' & _por & #exec('get_par','#portal','IsPersonWorkCalActive')
      & PPSFT.SKL_RCP='N' & exec('ppsft_rcp_size','ppsf')<=1
   || FUN.info(
      'Próba wyłaczenia rejestracji czasu pracy w portalu dla jedynego typu pracy obsługującego tę funkcjonalność.\n'
      'Najpierw należy wyłączyć obsługę rejestracji czasu pracy w parametrach Portalu.'@
      );
      PPSFT.SKL_RCP:='T'
   ?}
|| {? _fld='' | _fld='OSW_WYM'
   || _sval:=$(PPSFT.OSW_WYM='T');
      _set(_TAB,_we,_grp_ident,'mark=%1' [_sval],_TAB,'OSW_TRE')
   ?}
?};

1


\ppsft_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Obsługa akcji "Rekord - po" dla tabeli PPSFT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('_ppsft_chk','!zws_par_ppsf',-menu_txt()='popraw')


\ppsft_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Obsługa akcji "Dołącz - przed" tabeli PPSFT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
PPSFT.blank();
PPSFT.memo_set();
exec('ppsft_efld_opt','!zws_par_ppsf','*D',PPSFT,PPSFT.win_edit('?'));
PPSFT.cntx_psh();
PPSFT.prefix();
{? PPSFT.edit("exec('ppsft_ae','!zws_par_ppsf')")
|| _ret:=PPSFT.add();
   {? _ret & ~exec('is_pzd01','ppsf')
   || _ret:=PPSFT.memo_put(,'OSW_TRE')
   ?}
?};
PPSFT.cntx_pop();
_ret


\ppsft_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Obsługa akcji "Popraw - przed" tabeli PPSFT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
exec('ppsft_efld_opt','!zws_par_ppsf','*P',PPSFT,PPSFT.win_edit('?'));
{? ~exec('is_pzd01','ppsf')
|| PPSFT.memo_get(,'OSW_TRE')
?};
{? exec('lic','#b_domain','POR')
|| VAR_DEL.delete('ppsft_kod','ppsft_opis','ppsft_skl_wn');
   ppsft_kod:={? exec('is_pzd01','ppsf') || PPSFT.PPSFR || PPSFT.SLO_KOD ?};
   ppsft_opis:=PPSFT.OPIS;
   ppsft_skl_wn:=PPSFT.SKL_WN
?};
PPSFT.cntx_psh();
PPSFT.prefix();
{? PPSFT.edit("exec('ppsft_ae','!zws_par_ppsf')")
|| _ret:=PPSFT.put();
   {? _ret & ~exec('is_pzd01','ppsf')
   || _ret:=PPSFT.memo_put(,'OSW_TRE')
   ?}
?};
PPSFT.cntx_pop();
_ret


\ppsft_ppsfr_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.51]
:: OPIS: Po redagowaniu pola PPSFT.PPSFR.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('ppsft_efld_opt','!zws_par_ppsf')


\ppsft_ppsf_no_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.51]
:: OPIS: Po redagowaniu pola PPSFT.PPSFT_NO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('ppsft_efld_opt','!zws_par_ppsf')


\ppsft_skl_wn_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.51]
:: OPIS: Po redagowaniu pola PPSFT.SKL_WN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('ppsft_efld_opt','!zws_par_ppsf')


\ppsft_gen_g_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Obsługa akcji "Po redagowaniu" tabeli PPSFT pola GEN_G
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('ppsft_efld_opt','!zws_par_ppsf',1,PPSFT,PPSFT.win_edit('?'),,'GEN_G')


\ppsft_partday_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Obsługa akcji "Po redagowaniu" tabeli PPSFT pola PARTDAY
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('ppsft_efld_opt','!zws_par_ppsf');
1


\ppsft_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [21.37]
:: OPIS: Obsługa akcji "Usuń przed" okienek tabeli PPSFT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=exec('del_ask','#table',,
   {? PPSFT.SYSTEM='T' || 'Zapis systemowy, usunięcie może skutkować błędnym działaniem.'@ ?}
);
{? _ret
|| _err:='Istnieją wpisy powiązane z typem. Usunięcie niemożliwe.'@;
:: Sprawdza powiązane tebele, jeśli to tylko limity to można działać dalej:
   _ODW:=PPSFT.testlink(2);
   {? _ODW.size()>1
   || {? ~do_state()
      || FUN.emsg(_err)
      ?};
      _ret:=0
   |? _ODW.size()=1
   || _ODW.first();
      {? _ODW.TABELA<>'PPSFL'
::    Złączenia z innych tabel:
      || {? ~do_state()
         || FUN.emsg(_err)
         ?};
         _ret:=0
::    Złączenia jedynie z limitów:
      || PPSFL.cntx_psh();
         PPSFL.index('UNIQUE');
         PPSFL.prefix(exec('firma','ustawienia'),{? exec('is_pzd01','ppsf') || PPSFT.PPSFR || PPSFT.SLO_KOD ?},null());
::       Tylko domyślne:
         _dom:=PPSFL.size();
         PPSFL.prefix(exec('firma','ustawienia'),{? exec('is_pzd01','ppsf') || PPSFT.PPSFR || PPSFT.SLO_KOD ?});
::       Wszystkie (pracownicze i domyślne):
         _wsz:=PPSFL.size();

::       Jeśli są tylko domyślne, lub jest zgoda na kasowanie pracowniczych - kasujemy:
         {? _wsz=_dom |
            (~do_state() & FUN.ask('Kontynuacja spowoduje usunięcie limitów pracowniczych danego typu.\nKontynuować?'@))
         || {? PPSFL.first()
            || {!
               |? PPSFL.del(1,1)=2
               !}
            ?}
::       Nie było zgody, lub transakcja:
         || _ret:=0
         ?};
         PPSFL.cntx_pop()
      ?}
   ?}
?};

{? _ret & exec('lic','#b_domain','POR')
|| {? exec('is_pzd01','ppsf')
   || PPSFR.cntx_psh();
      PPSFR.prefix();
      _value:='%1 - %2'[PPSFT.PPSFR().NAZWA,PPSFT.OPIS];
      exec('porsloit_oper','portal_slowniki','del',_value,,,,'TypyPracyPozaSiedzibaFirmy');
      PPSFR.cntx_pop()
   || SLO_KOD.cntx_psh();
      SLO_KOD.prefix();
      _value:='%1 - %2'[PPSFT.SLO_KOD().NAZWA,PPSFT.OPIS];
      exec('porsloit_oper','portal_slowniki','del',_value,,,,'TypyPracyPozaSiedzibaFirmy');
      SLO_KOD.cntx_pop()
   ?}
?};

{? _ret
|| PPSFT.del()
?}


\ppsft_osw_wym_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Obsługa akcji "Po redagowaniu" pola OSW_WYM tabeli PPSFT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('ppsft_efld_opt','!zws_par_ppsf');
1


\ppsft_skl_rcp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Po redagowaniu pola SKL_RCP tabeli PPSFT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('ppsft_efld_opt','!zws_par_ppsf')


\_ppsft_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Wyzwalacz "add() przed" tabeli PPSFT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
_chk:=exec('_ppsft_chk','!zws_par_ppsf',0);
{? type_of(_chk)=type_of('')
|| _ret:=(_chk='')
|? type_of(_chk)=type_of(0)
|| _ret:=_chk
?};
_ret


\_ppsft_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Wyzwalacz "put() przed" tabeli PPSFT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
_chk:=exec('_ppsft_chk','!zws_par_ppsf',1);
{? type_of(_chk)=type_of('')
|| _ret:=(_chk='')
|? type_of(_chk)=type_of(0)
|| _ret:=_chk
?};
_ret


\_ppsft_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Wspólna dla wyzwalaczy "add() przed" oraz "put() przed" tabeli PPSFT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PPSFR.cntx_psh();
{? PPSFT.PPSFR().KOD='ZDALN_ST' & PPSFT.PARTDAY='T'
|| PPSFT.PARTDAY:='N'
?};
PPSFR.cntx_pop();
1


\_ppsft_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.51]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli PPSFT.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
_ret:='';
{? exec('is_pzd01','ppsf')
|| exec('_ppsft_modb','!zws_par_ppsf');
   _ret:=__CHK.validate(PPSFT
      ,$("_a.table(_b,"+$_put+",,'FIRMA','PPSFR','OPIS','SKL_RCP','PARTDAY','GEN_G','SKL_WN','OSW_WYM','OSW_WZA')")
      ,"_a.in_set(_b,'SKL_RCP',,'T','N')"
      ,"_a.in_set(_b,'PARTDAY',,'T','N')"
      ,"_a.in_set(_b,'GEN_G',,'G','B','W')"
      ,"_a.in_set(_b,'SKL_WN',,'T','N')"
      ,"_a.in_set(_b,'OSW_WYM',,'T','N')"
      ,"_a.in_set(_b,'OSW_WZA',,'T','N')"
      ,{? _put
:: Sprawdzam czy zmienił się znacznik "na część dnia" i są już jakieś nagłówki danego typu:
       || "_ret:='';
           PPSFN.cntx_psh();
           PPSFN.index('TYPPRAC');
           PPSFN.prefix(PPSFT.ref());
           {? PPSFN.first() & PPSFT.PARTDAY<>PPSFN.PARTDAY
           || _a.err_incorrect('Na część dnia','Istnieją już nagłówki danego typu. Zmiana wartości niemożliwa.'@);
              PPSFT.PARTDAY:=PPSFN.PARTDAY;
              _ret:='PARTDAY'
           ?};
           PPSFN.cntx_pop();
           _ret
          "
       || "1"
       ?}
      ,"_ret:='';
        PPSFR.cntx_psh();
        PPSFR.prefix();
        {? PPSFT.PPSFR().KOD='ZDALN_ST' | PPSFT.GEN_G='G'
        || _ret:=_a.record(_b,,'R')
        ?};
        PPSFR.cntx_pop();
        _ret
       "
      ,"_ret:='';
        {? PPSFT.SKL_RCP='T' & PPSFT.GEN_G='G'
        || _a.err_msg('Generowanie liczby godzin pracy niedostępne dla rejestracji w portalu.'@);
           _ret:='SKL_RCP'
        ?};
        _ret
       ")

|| {? PPSFT.SLO_KOD=null()
   || __CHK.err_empty('Kod');
      return('SLO_KOD')
   ?};
   {? (_chk:=__CHK.record(PPSFT,,'OPIS'))<>''
   || return(_chk)
   ?};
   _osw_tre:=PPSFT.memo_txt(,0,'OSW_TRE');
   {? PPSFT.OSW_WYM='T' & ~+_osw_tre
   || __CHK.err_empty('Treść oświadczenia');
      return('OSW_TRE')
   ?};
   _maxOsw:=exec('osw_tre_ln','ppsf');
   {? +_osw_tre>_maxOsw
   || _err:='Przekroczono maksymalną długość pola Treść (%1 znaków).\nCzy skrócić wpis do wymaganej długości?'@
            [$_maxOsw];
      {? FUN.ask(_err)
      || PPSFT.memo_set(_maxOsw+_osw_tre,'OSW_TRE')
      ?};
      win_disp();
      return('OSW_TRE')
   ?};
:: Sprawdzam czy zmienił się znacznik "na część dnia" i są już jakieś nagłówki danego typu:
   {? _put
   || PPSFN.cntx_psh();
      PPSFN.index('TYPPRAC');
      PPSFN.prefix(PPSFT.ref());
      {? PPSFN.first() & PPSFT.PARTDAY<>PPSFN.PARTDAY
      || __CHK.err_incorrect('Na część dnia','Istnieją już nagłówki danego typu. Zmiana wartości niemożliwa.'@);
         PPSFT.PARTDAY:=PPSFN.PARTDAY;
         _ret:='PARTDAY'
      ?};
      PPSFN.cntx_pop()
   ?}
?};

_ret


\ppsft_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Przed akcją "Wyświetl" tabeli PPSFT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('ppsft_efld_opt','!zws_par_ppsf','*P',PPSFT,PPSFT.win_edit('?'));
PPSFT.display()


\ppsft_r_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Formuła "Przed redagowaniem" pola PPSFT.R
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_rFset:=0;
:: 8161 - Ilość godzin stałej pracy zdalnej
:: 8162 - Ilość godzin pracy poza siedzibą
_rubSql:=__RUB.sys_sql({? PPSFT.PPSFR().KOD='ZDALN_ST' || 8161 || 8162 ?});
{? +_rubSql
|| _rFset:=R.f_set(,,'R.RN in (:_a)',_rubSql)
|| _rFset:=R.f_set(,,'0=1')
?};
_rFset


\ppsft_r_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Formuła "Po redagowaniu" pola PPSFT.R
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
R.f_clear()


\ppsft_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [22.26]
:: OPIS: Obsługa akcji "Dołącz - po" tabeli PPSFT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? PPSFT.f_active()
|| PPSFT.f_rfresh()
?};
{? ~exec('lic','#b_domain','POR') || return() ?};

{? PPSFT.SKL_WN='T'
|| {? exec('is_pzd01','ppsf')
   || PPSFR.cntx_psh();
      PPSFR.prefix();
      _value:='%1 - %2'[PPSFT.PPSFR().NAZWA,PPSFT.OPIS];
      {? +_value<=MS.fld_len('PORSLOIT','VALUE')
      || exec('porsloit_oper','portal_slowniki','add',_value,,,,'TypyPracyPozaSiedzibaFirmy')
      ?};
      PPSFR.cntx_pop()
   || SLO_KOD.cntx_psh();
      SLO_KOD.prefix();
      _value:='%1 - %2'[PPSFT.SLO_KOD().NAZWA,PPSFT.OPIS];
      {? +_value<=MS.fld_len('PORSLOIT','VALUE')
      || exec('porsloit_oper','portal_slowniki','add',_value,,,,'TypyPracyPozaSiedzibaFirmy')
      ?};
      SLO_KOD.cntx_pop()
   ?}
?};
~~


\ppsft_popraw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [22.26]
:: OPIS: Obsługa akcji "Popraw - po" tabeli PPSFT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? PPSFT.f_active()
|| PPSFT.f_rfresh()
?};
{? ~exec('lic','#b_domain','POR') || return() ?};

{? exec('is_pzd01','ppsf')
|| PPSFR.cntx_psh();
   PPSFR.prefix();
   _kod_nazwa_old:={? PPSFR.seek(ppsft_kod,,1) || PPSFR.NAZWA || '' ?};
   PPSFR.cntx_pop();

   _porsloCode:='TypyPracyPozaSiedzibaFirmy';

   {? ppsft_skl_wn=PPSFT.SKL_WN
   || {? ppsft_kod<>PPSFT.PPSFR | ppsft_opis<>PPSFT.OPIS
      || _value_old:='%1 - %2'[_kod_nazwa_old,ppsft_opis];
         _value:='%1 - %2'[PPSFT.PPSFR().NAZWA,PPSFT.OPIS];
         exec('porsloit_oper','portal_slowniki','put',_value_old,,_value,,_porsloCode)
      ?}
   || {? PPSFT.SKL_WN='T'
      || _value:='%1 - %2'[PPSFT.PPSFR().NAZWA,PPSFT.OPIS];
         exec('porsloit_oper','portal_slowniki','add',_value,,,,_porsloCode)
      |? PPSFT.SKL_WN='N' & ppsft_skl_wn='T'
      || _value:='%1 - %2'[_kod_nazwa_old,ppsft_opis];
         exec('porsloit_oper','portal_slowniki','del',_value,,,,_porsloCode)
      ?}
   ?}
|| SLO_KOD.cntx_psh();
   SLO_KOD.prefix();
   _kod_nazwa_old:={? SLO_KOD.seek(ppsft_kod,,1) || SLO_KOD.NAZWA || '' ?};
   SLO_KOD.cntx_pop();

   _porsloCode:='TypyPracyPozaSiedzibaFirmy';

   {? ppsft_skl_wn=PPSFT.SKL_WN
   || {? ppsft_kod<>PPSFT.SLO_KOD | ppsft_opis<>PPSFT.OPIS
      || _value_old:='%1 - %2'[_kod_nazwa_old,ppsft_opis];
         _value:='%1 - %2'[PPSFT.SLO_KOD().NAZWA,PPSFT.OPIS];
         exec('porsloit_oper','portal_slowniki','put',_value_old,,_value,,_porsloCode)
      ?}
   || {? PPSFT.SKL_WN='T'
      || _value:='%1 - %2'[PPSFT.SLO_KOD().NAZWA,PPSFT.OPIS];
         exec('porsloit_oper','portal_slowniki','add',_value,,,,_porsloCode)
      |? PPSFT.SKL_WN='N' & ppsft_skl_wn='T'
      || _value:='%1 - %2'[_kod_nazwa_old,ppsft_opis];
         exec('porsloit_oper','portal_slowniki','del',_value,,,,_porsloCode)
      ?}
   ?}
?};

VAR_DEL.delete('ppsft_kod','ppsft_opis','ppsft_skl_wn');
~~


\ppsft_skl_rcp_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Wartość początkowa pola SKL_RCP tabeli PPSFT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_webterm:=+app_info('web_sesid');
{? _webterm
|| exec('web_global_params_get','pkw','PPSFT','PPSFT_SKL_RCP','T')
|| 'T'
?}


:Sign Version 2.0 jowisz:1045 2023/08/25 11:56:11 7f4233bd0f1d898c89149ed949e3b9c0590245a4e045ce3a08b4e73ce7629c1434248e78b511545b90adca804565d62bc6303b0f001c2e1d0cef05f974d4c2b2fb693ca671a65bbaa954fb3ffc443a789960c0a3b7f95501723119e1d6df9b0af71a3404c8713b7c41de7b17acae15af2140486fd082dd60bea13d2b8ecac5a4
