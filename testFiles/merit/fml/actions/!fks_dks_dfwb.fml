:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fks_dks_dfwb.fml
:: Utworzony: 26.06.2015
:: Autor: PJ
::======================================================================================================================
:: Zawartość: Formuły czynności FKS_DKS_DFWB - dekretowanie wyciągów
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Dekretowanie wyciągów - główna formuła czynności FKS_DKS_DFWB
::----------------------------------------------------------------------------------------------------------------------
::# kind=WE,   symbol=PWN,   type=_PWN,   name=Nagłówek wyciągu,  required=T, keyref=T
::# kind=WY,   symbol=DOK,   type=_DOK,   name=Dokument księgowy,  required=T
::# permissions=FJKS,HRB,HRP,FREJ
::# parses=exec('parses','!fks_dks_dfwb')
::# access=exec('uprawnienia','!fks_dks_dfwb')

_par:=params_get();
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

_key:=_in.PWN;
_akcja:=_mp.akcja();
{? _key=~~ || _key:=null ?};

{? _mp.pathTodo()
|| {? _key<>null & 6+($_key)<>PWN.name() || PWN.use(form(6+($_key))) ?};
   PWN.prefix();
   {? _key<>null & PWN.seek(_key,)
   || PW.use('pw'+(PWN.name()+4));
      PW.index('PWN');
      PW.prefix(PWN.ref());
      PW_OP.use('pwp'+(PWN.name()+4));
      PW_OP.prefix();
      _dalej:=1
   || FUN.info('Nie znaleziono wyciągu.'@);
      _out.DOK:=null;
      _mp.save(,_out);
      _mp.done();
      _dalej:=0
   ?}
|| _dalej:=1
?};

{? _dalej
|| {? PWN.STATUS<>'T'
   || FUN.emsg('Wyciąg nie jest przygotowany do zadekretowania.'@);
      _dalej:=0
   || _dalej:=1
   ?};

   {? _dalej
   || {? _mp.pathTodo()
      || BtnDekr:=0;
         exec('set_pwn_win','!fks_dks_dfwb');
         PWN.display();
         {? BtnDekr=1 || _dalej:=1 || _dalej:=0 ?}
      || _dalej:=1
      ?}
   ?};

   {? _dalej
   ||
      _tmp_dok:=Plugin.run('FBDEKR_WB_001');

      {? type_of(_tmp_dok)=type_of('') & +_tmp_dok
      || DOK.cntx_psh();
         {? +_tmp_dok=16 & ref_tab(_tmp_dok)=DOK
         || DOK.use(ref_name(_tmp_dok)); DOK.prefix();
            {? DOK.seek(_tmp_dok,DOK.name()) || _dok:=DOK.ref() || _dok:=null ?}
         || _dok:=null
         ?};
         DOK.cntx_pop()
      || _dok:=exec('fbdekrwb','!fks_dks_dfwb')
      ?};
      {? _dok<>null
      || _out.DOK:=_dok;
         _mp.save(,_out);
         _mp.done()
      ?}
   ?}
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na opis czynności na liście ToDo
::----------------------------------------------------------------------------------------------------------------------
_desc:='';
_mp:=params_get().mp;
_we:=_mp.load(exec('kind_in','#b_port'));
{? var_pres('PWN',_we)
|| PWN.cntx_psh();
   PWN.prefix();
   {? PWN.seek(_we.PWN,)
   || _desc:='Dekretuj wyciąg: %1 (%2)'@@[PWN.NRW,PWN.BL().NB]
   || 'Uwaga błąd - nie odnaleziono wyciągu.'@@
   ?};
   PWN.cntx_pop()
|| _desc:='Uwaga błąd – nie znaleziono rekordu kluczowego, ani parametru wejściowego'@@
?};
_desc


\m_dekretuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Akcja Dekretuj z poziomu obszaru roboczego
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DFWB';
_params.AKCJA:='Dekretuj';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
_params.UIDREF:=PWN.uidref();
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'PWN',PWN.ref());
_params.PROC_START:='N';
exec('mp_run','#b__box',_params)


\set_pwn_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła ustawia na ToDo okno tabeli PWN
::----------------------------------------------------------------------------------------------------------------------
_win:='DISP';
_red:=PWN.mk_edit('Wyciąg bankowy'@);
PWN.win_ewin(_red,,_win);
PWN.win_ebtn(_red,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['&Pozycje'@],"exec('pozycje','!fks_dks_dfwb')");
PWN.win_ebtn(_red,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Dekretuj'@],"BtnDekr:=1;'key:Esc'");
_an:=PWN.win_ebtn(_red,
                  'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Anuluj'@],"BtnDekr:=0;'key:Esc'");
PWN.btn_eopt(_red,_an,'tooltip='+exec('help_red_esc','#window','A'));
PWN.win_edit(_red)


\fbdekrwb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.10]
:: OPIS: Formula dekretuje zaimportowane przelewy dla wybranego wyciagu bankowego i przenosi je do
::       archiwum. Uzupelnia w tabeli PW pola zgodnie z opisem: REJ - rejestr dokumentu księgowego;
::       NRD - symbol dokumentu.
::  OLD: \fbdekrwb/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=null;
{? exec('czy_okr_zam_con','konsolidacja',1)
|| return()
|? SSTALE.AO().NR=0
|| FUN.info('Akcja niedostępna w okresie \'Bilans otwarcia\'.'@);
   return()
?};
_pwnrfordok:=-1;
_newdref:=null;
PW.cntx_psh();
{? PW.size()>0
|| PW.first();
   _pw_ref:=PWN.ref();
   REJ.prefix();
   DOK_REJ.prefix();
   DOK.prefix();
   DOK.DTO:=PW.DK;
   DOK.REJ:=DOK.DZ:=ROZNE.DOK_REJ:=null;
   DOK.NK:=_vnrwb:=PWN.NRW;
   _vrblwb:=PWN.RBL;
   DOK.TR:='wyciąg bankowy';
   DOK.DTW:=PW.DK;
   DOK.DOP:=PW.DK;
   KONTO.K1:='';
   czy_podp:=0;
   ODD.cntx_psh();
   ODD.index('ODDZIALY');
   ODD.prefix(REF.FIRMA);
   PWN.ODD();
   ROK_F.cntx_psh();
   ROK_F.index('ROKPOCZ');
   ROK_F.prefix(REF.FIRMA);
   SSTALE.AR();
   gokno:=REJ.win_dict('?');
   gpomakc:=POMOC.AKC;
   {? OPERATOR.DEPT=null
   || POMOC.AKC:='W' ;
      REJ.win_dict('SLO1_ODD')
   || POMOC.AKC:='O';
      REJ.win_dict('SLO1')
   ?};
   exec('gr_bufor','dok_fks');
   KONTO.K1:=KONTO.K1_BE:=KONTO.K1_AE:='';
   KONTO.K1_RODZ:=0;
:: Poczatek modyfikacji dla Maclex 13.10.2009 AK [1120]
:: Dodane uzupelnienie konta K1 na podstawie MLCONNEC
   __komt:='';
   {? MLEX.FIKSB
   || exec('uzkk1','ml_przel');
      exec('ini_kom','#message','Uwagi dekretacji wyciągu',,,,200)
   ?};
:: Koniec modyfikacji dla Maclex
   _vrbl:=RB.getrrban(PW.PWN().RBL,REF.INFO,0); vrbwal:=null; vrbwalk:='';
   {? _vrbl
   || {? SKID_RBK.clear(); SKID_RBK.seek(_vrbl)
      || vrbwal:=SKID_RBK.WAL; vrbwalk:=SKID_RBK.WAL().KOD
      ?}
   ?};
:: sprawdzenie czy na wyciągu są operacje w obcej walucie
   obca:=0;
:: PW.index('WB'); PW.prefix(_vnrwb, _vrblwb);
   PW.cntx_psh();
   {? PW.first()
   || {! |? {? +PW.WAL & PW.WAL<>FINFO.NAROD().KOD
            || obca:=1;
               0
            || PW.next()
            ?}
      !}
   ?};
   PW.cntx_pop();
:: jeśli waluta rachunku inna niż waluta narodowa lub występują na księgowanym wyciągu operacje w obcej walucie to wyświetlenie okienka z pytaniem o bank i tabelę kursów
   {? vrbwal<>FINFO.NAROD | obca
   || DOK.win_edit('IMPWBWAL');
      {? FINFO.B_WYDR<>null
           || exec('slo_slu2','slo_slu',FINFO.B_WYDR().SLU().NAZ,'ONE');
              POMOC.B:=FINFO.B_WYDR
      ?};
      DOK.TYPKRS:='R';
      DajTKurs:="POMOC.TKRS:=null;
                 TKRS.cntx_psh();
                 TKRS.index('TKRS_DT');
                 _dpp:=DOK.DOP;
                 _date:={? _dpp>=date(1,1,2)
                        || exec('dzienRob','kalendarz',_dpp-1,1,1,0,-1)
                        || date(0,0,0)
                        ?};
                 TKRS.prefix(POMOC.B,FINFO.NAROD,_date);
                 {? TKRS.first() || POMOC.TKRS:=TKRS.ref() || POMOC.TKRS:=null ?};
                 TKRS.cntx_pop()
                ";
      DajTKurs();
      DOK.fld_fml('TYPKRS','BEFORE_EDIT',"");
      DOK.fld_fml('DOP','AFTER_EDIT',"DajTKurs()");
      POMOC.fld_fml('B','AFTER_EDIT',"DajTKurs()")
   || DOK.win_edit('IMPWB');
      POMOC.B:=POMOC.TKRS:=null
   ?};
   _esc:=0;
   {? DOK.edit("_ret:=exec('chk_dok','!fks_dks_dfwb');
               {? _ret='' & (vrbwal<>FINFO.NAROD | obca)
               || {? POMOC.B=null
                  || _ask:=FUN.ask('Nie wskazano banku do wyznaczenia kursu dla zapłat za należności i zobowiązania.\n'+
                                   'Kwoty w walucie nie zostaną automatycznie przeliczone na walutę narodową.\n'+
                                   'Czy na pewno pozostawić pole puste?'@);
                     {? _ask=0 || _ret:='B' ?}
                  ?}
               ?};
               _ret")
   || {? vrbwal<>FINFO.NAROD | obca || DOK.fld_fml('TYPKRS','BEFORE_EDIT',"*") ?};
      _typkurs:=DOK.TYPKRS;
      {? ~PWN.seek(_pw_ref)
      || FUN.emsg('Nie znaleziono wyciągu bankowego.\nZostał on usunięty przez innego użytkownika.'@)
      |? PWN.lock(1)
      || _pwn_rbl:=PWN.RBL;
         _pwn_bl:=PWN.BL;
         _pwn_nr:=PWN.NRW;
         _pwn_odd:=PWN.ODD;
         &_vrbl;
         _vrej:=ROZNE.DOK_REJ;
         _vtr:=DOK.TR;
         _vnk:=DOK.NK;
         _vdto:=DOK.DTO;
         _vdtw:=DOK.DTW;
         _vdop:=DOK.DOP;
         DOK.blank(0);
         DOK.TYPKRS:=_typkurs;
         DOK.DOK_REJ:=_vrej;
    DOK.JPK_V_T:=exec('typ_dok','obiegi2');
         DOK.TR:=_vtr;
         DOK.cntx_psh();
         DOK.index('REJ');
         DOK.prefix(DOK.REJ);
         {? DOK.last() || _vnr:=DOK.NR+1 || _vnr:=1 ?};
         DOK.cntx_pop();
         DOK.DR:=date();
         DOK.NR:=_vnr;
         sourcedk:='HBN';
         DOK.ZAR:=exec('usr_zar','dok_fks');
         DOK.NK:=_vnk;
         DOK.A:=DOK.ZK:=DOK.ZP:=DOK.WSK_XD:='N';
         DOK.DTW:=_vdtw;
         DOK.DOP:=_vdop;
         DOK.DTO:=_vdto;
         DOK.ODD:=DOK.REJ().ODD;
         DOK.RVAT:=null;
         DOK.DOKZRODL:='pw'+(4+$DOK.DTW)+$(#PW.ref());
         {? (vrbwal<>FINFO.NAROD | obca)
         || DOK.BANK:=POMOC.B;
            DOK.TKRS:=POMOC.TKRS
         ?};
         do();
         {? DOK.add()
         || _newdref:=DOK.ref();
            exec('pop_poz','dok_fks','DOK',0);
            _vcont:=_vsumwn:=_vsumma:=0;
            PW.index('PWN');
            PW.prefix(PWN.ref());
:: Poczatek modyfikacji dla Maclex 13.10.2009 AK [1120]
            {? MLEX.FIKSB || exec('ml_pwbl','ml_przel') ?};
:: Koniec modyfikacji Maclex
            {? PW.first()
            || _lp:=0; _ile_pw:=PW.size;
               exec('tt_wbpoz','!fks_dks_dfwb');
               {! |?
                  _lp+=1;
                  PW_OP.prefix(PW.ref());
                  {? MLEX.FIKSB
                  || exec('ml_pwdan','ml_przel')
                  ?};
                  _licz:=0; _vsum_op:=0;
:: dla przelewu zbiorczego
                  {? PW.SYM='' & PW_OP.first()
                  || {! |?
                        _licz+=1;
                        OP.index('KON_O');
                        OP.prefix(FINFO.NAROD,PW_OP.ODD,PW_OP.AN,PW_OP.SYM,PW_OP.SYM);
                        {? OP.first() & OP.size()=1
                        || _vtroz:=OP.TYP;
                           _vdoroz:=OP.DO;
                           _vtzroz:=OP.TZ;
                           _vopis:=PW_OP.TYT;
                           {? _vopis='' || _vopis:=PW.TYPTRAN ?};
                           _vsym:=PW_OP.SYM;
                           _vodd:=PW_OP.ODD
                        || _vtroz:={? PW.STR='Wn' || 'ZOB' || 'NAL' ?};
                           _vdoroz:=_vtzroz:=DOK.DTW;
                           _vopis:=PW_OP.TYT;
                           {? _vopis='' || _vopis:=PW.TYPTRAN ?};
                           _vsym:='';
                           {? DOK.DOK_REJ().ODD_ROZR='T' || _vodd:=PW.ODD || _vodd:=DOK.ODD ?}
                        ?};
:: jesli rachunek bankowy jest prowadzony w walucie obcej
                        {? vrbwal<>FINFO.NAROD
                        || _vwal:=vrbwalk;
:: jezeli transakcja jest w walucie rachunku bankowego - w walucie obcej
                           {? ~+PW.WAL | PW.WAL=vrbwalk
                           || _vsumw:=PW_OP.K
:: jezeli transakcja jest w walucie innej niz waluta rachunku bankowego - innej niz obca rachunku
                           || _vsumw:={? PW.KURS || (PW_OP.K*(PW.KW*PW.KURS/PW.KW_WAL)/PW.KURS)$2 || 0 ?}
                           ?};
                           _vkurs:=exec('kurs','!fks_dks_dfwb',_vwal,PW.DK);
                           _vjedn:=exec('jed_wal','waluty',_vwal);
                           _vsum:={? _vjedn<>0 || (_vsumw*_vkurs/_vjedn)$2 || 0 ?};
                           {? PW.WAL<>''
                           || _vopis+=' //transakcja: '+$PW_OP.K+' '+PW.WAL
                           ?}
:: jesli rachunek bankowy jest prowadzony w walucie narodowej
                        || _vwal:=PW.WAL;
:: jezeli transakcja jest w walucie rachunku bankowego
                           {? ~+PW.WAL | PW.WAL=FINFO.NAROD().KOD
                           || _vsumw:=_vkurs:=0;
                              _vsum:=PW_OP.K
:: jezeli transakcja jest w walucie innej niz waluta rachunku bankowego - innej niz narodowa
                           || _vsumw:=PW_OP.K;
                              _vkurs:=exec('kurs','!fks_dks_dfwb',_vwal,PW.DK);
                              _vjedn:=exec('jed_wal','waluty',_vwal);
                              _vsum:={? _vkurs || (PW_OP.K*_vjedn/_vkurs)$2 || 0 ?}
                           ?}
                        ?};
                        exec('tt_add','!fks_dks_dfwb',_vsum,PW.STR,PW_OP.AN,_vsym,_vtroz,
                           _vdoroz,_vtzroz,_vopis,_vwal,_vsumw,_vkurs,PW.DK,#_vodd,PW.WSK_R,PW.ref(),_lp,PW_OP.SP_V);
                        _vsum_op+=_vsum;
                        {? (MLEX.FIKSB & _licz=1) | ~MLEX.FIKSB
                        || exec('tt_add','!fks_dks_dfwb',_vsum,{? PW.STR='Ma' || 'Wn' || 'Ma' ?},KONTO.K1,
                                {? MLEX.FIKSB || _vsym || '' ?},'',date(0,0,0),date(0,0,0),
                                {? exec('get_par','#parametr',45)='T'
                                || _vopis
                                || {? PW.STR='Ma' || 'wpłata' || 'wypłata' ?}
                                ?},_vwal,_vsumw,_vkurs,date(0,0,0),0,{? MLEX.FIKSB || PW.WSK_R || 'T' ?},PW.ref(),{? exec('get_par','#parametr',45)='T'  || _lp+=1 || _ile_pw+2 ?})
                        ?};
                        PW_OP.next()
                     !};
                     {? _vsum_op<PW.KW
                     || _vsum:=PW.KW-_vsum_op;
                        exec('tt_add','!fks_dks_dfwb',_vsum,PW.STR,'','','',
                              date(0,0,0),date(0,0,0),_vopis,_vwal,0,0,date(0,0,0),0,'T',PW.ref(),_lp);
                        {? (MLEX.FIKSB & _licz=1) | ~MLEX.FIKSB
                        || exec('tt_add','!fks_dks_dfwb',_vsum,{? PW.STR='Ma' || 'Wn' || 'Ma' ?},KONTO.K1,
                                {? MLEX.FIKSB || _vsym || '' ?},'',date(0,0,0),date(0,0,0),
                                {? exec('get_par','#parametr',45)='T'
                                || _vopis
                                || {? PW.STR='Ma' || 'wpłata' || 'wypłata' ?}
                                ?},_vwal,0,0,date(0,0,0),0,{? MLEX.FIKSB || PW.WSK_R || 'T' ?},PW.ref(),{? exec('get_par','#parametr',45)='T'  || _lp+=1 || _ile_pw+2 ?})
                        ?}
                     ?};
                     {? PW.STR='Wn' || _vsumwn+=PW.KW || _vsumma+=PW.KW ?};
                     PW.use('pw'+(4+$DOK.DTW));
                     PWN.use('pn'+(4+$DOK.DTW));
                     PW.prefix();
                     PWN.index('PWN');
                     PWN.prefix(_pwn_bl,_pwn_rbl,_pwn_nr,);
                     {? ~PWN.first
                     || PWN.BL:=_pwn_bl;
                        PWN.ODD:=_pwn_odd;
                        PWN.RBL:=exec('rb_nosp','#string',_pwn_rbl);
                        PWN.NRW:=_pwn_nr;
                        PWN.PLIK:=PW.PLIK;
                        PWN.STATUS:='T';
                        PWN.add()
                     ?};
                     PW.PWN:=PWN.ref();
                     PW.REJ:=DOK.REJ;
                     PW.NRD:=$DOK.NR+'/'+$(DOK.DTW~2);
                     PW.add();
                     _pwnrfordok:=#PW.ref();
                     PW_OP.first();
                     {! |?
                        PW_OP.use('pwp'+(4+$DOK.DTW));
                        PW_OP.prefix();
                        PW_OP.PW:=PW.ref();
                        PW_OP.add();
                        PW_OP.use('pwpxxxx');
                        PW_OP.del()
                     !}
:: dla przelewu pojedynczego
                  || OP.index('KON_O');
                     OP.prefix(FINFO.NAROD,PW.ODD,PW.AN,PW.SYM,PW.SYM);
                     {? PW.TYPTRAN<>''
                     || _vtyptr:={? exec('findttr','hbn') & TYPYTRAN.ROZR='T' || 1 || 0 ?}
                     || _vtyptr:=0
                     ?};
                     {? OP.first() & OP.size()=1
                     || _vtroz:=OP.TYP;
                        _vdoroz:=OP.DO;
                        _vtzroz:=OP.TZ;
                        _vopis:=PW.TYPTRAN;
                        {? PAR_SKID.get(99)='N' | _vopis='' || _vopis:=PW.TYTOP ?};
                        _vsym:=PW.SYM;
                        _vodd:=OP.ODD
                     || _vtroz:={? PW.STR='Wn' || 'ZOB' || 'NAL' ?};
                        {? _vtyptr || _vdoroz:=_vtzroz:=DOK.DTW || _vdoroz:=_vtzroz:=date(0,0,0) ?};
                        _vopis:=PW.TYTOP;
                        {? _vopis='' || _vopis:=PW.TYPTRAN ?};
                        _vsym:=PW.SYM;
                        {? DOK.DOK_REJ().ODD_ROZR='T' || _vodd:=PW.ODD || _vodd:=DOK.ODD ?}
                     ?};
                     {? PW.WSK_R<>'T' & PW.TYPTRAN<>''
                     || {? exec('findttr','hbn') & TYPYTRAN.ROZR='T' & ~+_vsym || _vsym:=PW.TYTOP ?}
                     ?};
:: jesli rachunek bankowy jest prowadzony w walucie obcej
                     {? vrbwal<>FINFO.NAROD
                     || _vwal:=vrbwalk;
                        _vsumw:=PW.KW;
                        {? +PW.WAL & PW.KW_WAL
                        || _vopis+=' //transakcja: '+$PW.KW_WAL+' '+PW.WAL
                        ?};
                        _vkurs:=exec('kurs','!fks_dks_dfwb', _vwal, PW.DK);
                        _vjedn:=exec('jed_wal','waluty',_vwal);
                        _vsum:={? _vjedn<>0 || (_vsumw*_vkurs/_vjedn)$2 || 0 ?}
:: jesli rachunek bankowy jest prowadzony w walucie narodowej
                     || _vwal:=PW.WAL;
                        _vsumw:=PW.KW_WAL;
                        _vkurs:=PW.KURS;
                        _vsum:=PW.KW
                     ?};
                     exec('tt_add','!fks_dks_dfwb',_vsum,PW.STR,PW.AN,_vsym,_vtroz,
                        _vdoroz,_vtzroz,_vopis,_vwal,_vsumw,_vkurs,PW.DK,#_vodd,PW.WSK_R,PW.ref(),_lp,
                        {? PW.SP='T' || PW.SP_V || ~~ ?}
                     );
                     exec('tt_add','!fks_dks_dfwb',_vsum,{? PW.STR='Ma' || 'Wn' || 'Ma' ?},KONTO.K1,{? MLEX.FIKSB || _vsym || '' ?},'',
                        date(0,0,0),date(0,0,0),{? exec('get_par','#parametr',45)='T' || _vopis || {? PW.STR='Ma' || 'wpłata' || 'wypłata' ?} ?},
                        _vwal,_vsumw,_vkurs,date(0,0,0),0,{? MLEX.FIKSB || PW.WSK_R || 'T' ?},PW.ref(),{? exec('get_par','#parametr',45)='T'  || _lp+=1 || _ile_pw+2 ?});
                     {? PW.STR='Wn' || _vsumwn+=PW.KW || _vsumma+=PW.KW ?};
                     PW.use('pw'+(4+$DOK.DTW));
                     PWN.use('pn'+(4+$DOK.DTW));
                     PW.prefix();
                     PWN.index('PWN');
                     PWN.prefix(_pwn_bl,_pwn_rbl,_pwn_nr,);
                     {? ~PWN.first
                     || PWN.BL:=_pwn_bl;
                        PWN.ODD:=_pwn_odd;
                        PWN.RBL:=exec('rb_nosp','#string',_pwn_rbl);
                        PWN.NRW:=_pwn_nr;
                        PWN.PLIK:=PW.PLIK;
                        PWN.STATUS:='T';
                        PWN.add()
                     ?};
                     PW.PWN:=PWN.ref();
                     PW.REJ:=DOK.REJ;
                     PW.NRD:=$DOK.NR+'/'+$(DOK.DTW~2);
                     PW.add();
                     _pwnrfordok:=#PW.ref();
                     {? PW_OP.first()
                     || {! |?
                           PW_OP.use('pwp'+(4+$DOK.DTW));
                           PW_OP.prefix();
                           PW_OP.PW:=PW.ref();
                           PW_OP.add();
                           PW_OP.use('pwpxxxx');
                           PW_OP.del()
                        !}
                     ?}
                  ?};
                  PW.use('pwxxxx');
                  PWN.use('pnxxxx');
                  _vcont:=PW.del();
                  _vcont
               !};
::Poczatek modyfikacji dla Maclex 13.10.2009 AK [1120]
::          exec('tt2poz','przelewy')
               {? MLEX.FIKSB
               ||   exec('tt2poz','ml_przel')
               ||   exec('tt2poz','!fks_dks_dfwb')
               ?}
::Koniec modyfikacji Maclex
            ?}
         ?};
         DOK.cntx_psh(); DOK.prefix();
         {? _pwnrfordok>0 & _newdref<>null & DOK.seek(_newdref)
         || DOK.DOKZRODL:='pw'+(4+$DOK.DTW)+$(_pwnrfordok);
            DOK.put(1)
         ?};
         DOK.cntx_pop();
         {?  do_state()=1 || _wy:=DOK.ref() ?};
         end();
         PWN.unlock();
         PW.index('PWN');
         PW.prefix(PWN.ref());
         {? PW.size()=0 & PWN.count()=0 || PWN.del() ?}
      || {? _cont
         || FUN.emsg('Dekretowanie niemożliwe!\nWyciąg jest obsługiwany przez innego użytkownika.'@)
         ?}
      ?}
   || _esc:=1
   ?};
   {? MLEX.FIKSB
   || exec('end_kom','#message')
   ?};
   ODD.cntx_pop();
   ROK_F.cntx_pop();
   POMOC.AKC:=gpomakc;
   REJ.win_dict(gokno);
   VAR_DEL.delete('pamietaj','czy_podp','gokno','gpomakc', 'vrbwal', 'vrbwalk', 'obca','__komt');
   {? PWN.f_active()
   || PWN.f_rfresh();
      {? PWN.f_first()
      || PW.index('PWN');
         PW.prefix(PWN.ref())
      ?};
      {? _esc || PWN.f_seek(_pw_ref) ?}
   ?}
?};
DOK.fld_fml('TYPKRS','BEFORE_EDIT',"*");
DOK.fld_fml('DOP','AFTER_EDIT',"*");
POMOC.fld_fml('B','AFTER_EDIT',"*");
VAR_DEL.delete('__TWYC');
PW.cntx_pop();
_wy


\chk_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Formula sprawdza poprawnosc okienka DOK przy dekretowaniu
::       wyciagu.
::  OLD: \chk_dok/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~DOK.REJ
|| FUN.emsg('Nie wybrano rejestru.'@); 'REJ'
|? DOK.REJ().CZY_DZ='T' & ~DOK.DZ
|| FUN.emsg('Nie wybrano dokumentu zbiorczego.'@); 'DZ'
|| {? ~ROZNE.DOK_REJ
   || FUN.emsg('Nie podano nazwy dokumentu.'@); 'DOK_REJ'
   || {? SSTALE.AO().POCZ=date(0,0,0) & ~exec('dat_not','dok_fks',DOK.DTW)
      || FUN.emsg('Data zapisu księgowania musi być z bieżącego roku bilansowego!'@,'UWAGA'@); 'DTW'
      |? (DOK.DTW<SSTALE.AO().POCZ | DOK.DTW>SSTALE.AO().KON) & SSTALE.AO().KON<>date(0,0,0)
      || FUN.emsg('Data zapisu księgowania spoza aktywnego okresu!'@,'UWAGA'@); 'DTW'
      || ''
      ?}
   ?}
?}


\tt_wbpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [2008]
:: OPIS: Tworzy tabele grupujaca dekrety powstale z wyciagow bankowych
::  OLD: \tt_wbpoz/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TT_WBPOZ','__ittdo','__ittod','__kol');
TT_WBPOZ:=tab_tmp(1,
   'ODD','INTEGER',,
   'KONTO','STRING[35]',,
   'R_SYM','STRING[50]',,
   'R_TYP','STRING[3]',,
   'KW','REAL',,
   'STR','STRING[2]',,
   'DO','DATE',,
   'TP','DATE',,
   'OP','STRING[100]',,
   'WAL','STRING[8]',,
   'KW_WAL','REAL',,
   'KURS','REAL',,
   'DR','DATE',,
   'ROZ','STRING[1]',,
   'PW','INTEGER','ref do PW',
   'LP','INTEGER',,
   'SP_V','REAL',
);
__ittdo:=TT_WBPOZ.ndx_tmp(,,'KONTO',,,'STR',,,'R_SYM',,,'KURS',,,'ODD',,,'ROZ',,,'DR',,,'OP',,);
__ittod:=TT_WBPOZ.ndx_tmp(,,'KONTO',,,'STR',,,'R_SYM',,,'KURS',,,'ODD',,,'ROZ',,,'OP',,,'DR',,);
__kol:=TT_WBPOZ.ndx_tmp(,,'LP',,,'KONTO',,,'STR',,,'R_SYM',,,'KURS',,,'ODD',,,'ROZ',,,'OP',,,'DR',,);
TT_WBPOZ.index(__ittdo);
1


\kurs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MP] [12.30]
:: OPIS: Wyszukanie kursu na podstawie symbolu waluty, symbolu transakcji, tabeli kursów, daty księgowania
::       wykorzystywana podczas dekretacji wyciągów walutowych
::       tabela kursów dla transakcji 'K' i 'S' jest pobierana z POMOC.TKRS - jeśli użytkownik wybrał lub na podstawie daty księgowania
::       dla transakcji 'R' tabela jest pobierana z poprzedniego dnia z NBP
::   WE: _a  - symbol waluty
::       _b - data księgowania z pozycji wyciągu
::  OLD: \kurs/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
:: rodzaj kursu użytego do przeliczenia jest ustalany na podstawie typu transakcji
:: lub z parametrów podanych w oknie parametrów dekretacji (typ transakcji jest nadrzędny)
:: jesli nie ma typu transakcji lub wskazania w parametrach dekretownaia to w ogóle nie wyznaczamy kursu
_kurs:=0; _rodz_k:='';
{? PW.TYPTRAN<>''
|| _rodz_k:={? exec('findttr','hbn')
            || TYPYTRAN.R_KRS
            || ''
            ?}
?};
{? _rodz_k='' & DOK.TYPKRS<>'' || _rodz_k:=DOK.TYPKRS ?};
{? _rodz_k<>''
|| _bank:=null; _tkrs:=null;
   {? (_rodz_k='K' | _rodz_k='S') & POMOC.B<>null
   || _bank:=POMOC.B; _tkrs:=POMOC.TKRS
   |? _rodz_k='R'
   || _bank:=FINFO.B_VAT
   ?};
   SLO.index('SL'); SLO.prefix(FINFO.SLWAL().SLU, _a);
   _wal:={? SLO.first() & SLO.KOD=_a || SLO.ref || null ?};
   {? _bank<>null & _wal<>null
   || {? _tkrs=null
      || TKRS.index('TKRS_DT');
         {? _rodz_k='K' | _rodz_k='S'
         || TKRS.prefix(_bank, FINFO.NAROD, _b);
            {? TKRS.first() || _tkrs:=TKRS.ref ?}
         || TKRS.prefix(_bank, FINFO.NAROD);
            _data:=exec('dzienRob', 'kalendarz', _b-1, 1, 1, 0, -1);
            {? _data<>date(0,0,0)
            || KRS.cntx_psh();
               {? TKRS.find_key(_data)
               || KRS.index('KRS_WAL');
                  _wart:=0;
                  {!
                  |? KRS.prefix(TKRS.ref(),_wal);
                     {? KRS.first()
                     || _wart:=1;
                        _tkrs:=TKRS.ref()
                     ?};
                     _wart=0 & TKRS.prev()
                     !};
                  {? _wart=0 & TKRS.find_key(_data) || _tkrs:=TKRS.ref() ?}
               ?};
               KRS.cntx_pop()
            ?}
         ?}
      ?};
      {? _tkrs<>null
      || KRS.index('KRS_WAL'); KRS.prefix(_tkrs, _wal);
         {? KRS.first()
         || _kurs:={? _rodz_k='K' || KRS.KP
                   |? _rodz_k='S' || KRS.SP
                   |? _rodz_k='R' || KRS.SR
                   ?}
         ?}
      ?}
   ?}
?};
_kurs


\tt_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [2008]
:: OPIS: Tworzy tabele grupujaca dekrety powstale z wyciagow bankowych
::       Przy parametrze 45='T' grupuje dekrety po opisie
::   WE: _a - kwota
::       _b - strona
::       _c - symbol konta
::       _d - symbol rozrachunku
::       _e - typ rozrachunku
::       _f - data otwarcia rozrachunku
::       _g - termin platnosci rozrachunku
::       _h - opis
::       _i - kod waluty
::       _j - kwota w walucie
::       _k - kurs
::       _l - data rozliczenia rozrachunku
::       _m - nr rekordu oddzialu
::       _n - znacznik rozpoznania
::       _o - ref do PW dla potrzeb FIKSB
::       _p - nr kolejny
::       _q - VAT z podzielnej płatności
::  OLD: \tt_add/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
{? _l<>date(0,0,0)
|| TT_WBPOZ.index(__ittdo); TT_WBPOZ.clear();
   {? exec('get_par','#parametr',45)='T'
   || _find:=TT_WBPOZ.find_key(_c,_b,_d,_k,_m,_n,_l,_h)
   || _find:=TT_WBPOZ.find_key(_c,_b,_d,_k,_m,_n,_l)
   ?}
|| TT_WBPOZ.index(__ittod); TT_WBPOZ.clear();
   {? exec('get_par','#parametr',45)='T'
   || _find:=TT_WBPOZ.find_key(_c,_b,_d,_k,_m,_n,_h)
   || _find:=TT_WBPOZ.find_key(_c,_b,_d,_k,_m,_n)
   ?}
?};
{? _n='T' & _find
|| TT_WBPOZ.KW+=_a;
   TT_WBPOZ.KW_WAL+=_j;
   {? var_press('_q')>0 || TT_WBPOZ.SP_V+=_q ?};
   TT_WBPOZ.put()
|| TT_WBPOZ.KW:=_a;
   TT_WBPOZ.STR:=_b;
   TT_WBPOZ.KONTO:=_c;
   TT_WBPOZ.R_SYM:=_d;
   TT_WBPOZ.R_TYP:=_e;
   TT_WBPOZ.DO:=_f;
   TT_WBPOZ.TP:=_g;
   TT_WBPOZ.OP:=_h;
   TT_WBPOZ.WAL:=_i;
   TT_WBPOZ.KW_WAL:=_j;
   TT_WBPOZ.KURS:=_k;
   TT_WBPOZ.DR:=_l;
   TT_WBPOZ.ODD:=_m;
   TT_WBPOZ.ROZ:=_n;
   TT_WBPOZ.PW:=_o;
   TT_WBPOZ.LP:=_p;
   TT_WBPOZ.SP_V:={? var_press('_q')>0 || _q ?};
   TT_WBPOZ.add()
?}


\tt2poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [2008]
:: OPIS: Tworzenie zapisow na podstawie tabeli TT_WBPOZ
::  OLD: \tt2poz/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('get_par','#parametr',70)='T'
|| TT_WBPOZ.index(__kol)
?};
{? TT_WBPOZ.first()
|| {!
   |? exec('poz_add','dekret_aut',
         TT_WBPOZ.KW,
         TT_WBPOZ.STR,
         TT_WBPOZ.KONTO,
         TT_WBPOZ.R_SYM,
         TT_WBPOZ.R_TYP,
         TT_WBPOZ.DO,
         TT_WBPOZ.TP,
         TT_WBPOZ.OP,
         TT_WBPOZ.WAL,
         TT_WBPOZ.KW_WAL,
         TT_WBPOZ.KURS,'',
         TT_WBPOZ.DR,
         TT_WBPOZ.ODD,,
         TT_WBPOZ.SP_V
      );
      TT_WBPOZ.next()
   !}
?};
VAR_DEL.delete('TT_WBPOZ','__ittdo','__ittod','__kol')


\aedokrej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Po redakcji rodzaju dokumentu przy dekretowaniu wyciagu
::       Ustala symbol konta przeciwstawnego
::  OLD: \aedokrej/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.DOK_REJ || KONTO.K1:=ROZNE.DOK_REJ().AN; DOK.DOK_REJ:=ROZNE.DOK_REJ ?}; 1
::Poczatek modyfikacji dla Maclex 13.10.2009 AK [1120]
::Jesli nie ma rejestru dedykowanego konta to pozostaw to co jest
:{? ROZNE.DOK_REJ || {? ROZNE.DOK_REJ().AN<>'' || KONTO.K1:=ROZNE.DOK_REJ().AN ?}; DOK.DOK_REJ:=ROZNE.DOK_REJ ?}; 1
::Koniec zmian dla Maclex


\main_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Dekretowanie z poziomu dokumentów, wyświetla okienko zaimportowanych wyciagów
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS,HRB,HRP
exec('czytaj','#stalesys',,XINFO);
exec('czytaj','#stalesys',,HINFO);
g_impwb:=1;
RACHBANK.KB_2R_BD:='RACHBANK.KB_2R:=PW.RBL';
RACHBANK.KB_1R_BD:='RACHBANK.KB_1R:=RB.get_rbtx(2,PW.RBL)';
PWN.use('pnxxxx');
PW.use('pwxxxx');
PW_OP.use('pwpxxxx');
PW_OP.index('PW');
{? exec('setf','hbn_filtr',0,'W','D')
|| PWN.win_sel('WER_GRP');
   _act:=PWN.actions('WER','EIUJYC:IC',,1);
   PWN.hdr_sel();
   PWN.hdr_sel(', waluta: '@+SSTALE.WAL().KOD);
   DOK.cntx_psh();
   VAR_DEL.delete('dekrwycbankokn');
   dekrwycbankokn:=1;
   PWN.select();
   DOK.cntx_pop();
   PWN.f_clear();
   PWN.actions('WER',_act,'I',1)
?};
VAR_DEL.delete('TAB_SPEC','TT_JKS','ws_jk','g_impwb','STAB_SPE','STT_JKS','dekrwycbankokn');
1


\pozycje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Pozycje wyciągu do zadekretowania
::----------------------------------------------------------------------------------------------------------------------
_win:=PW.mk_sel('Pozycje wyciągu: %1 (%2)'@ [PWN.NRW,PWN.BL().NB],'P',0,'pw_dekr_poz',,,,,'U');

PW.win_fld(_win,PW,'NRW',,,8,,,'Pozycja'@);
PW.win_fld(_win,PW,'WSK_R',,,5,,,'Rozp.'@);
PW.win_fld(_win,PW,'DK',,,14,,,'Data księgowania'@);
PW.win_fld(_win,PW,'KONTR',,,34,,,'Nazwa strony transakcji'@);
PW.win_fld(_win,PW,'TYTOP',,,42,,,'Tytuł operacji'@);
PW.win_fld(_win,PW,'WAL',,,3,,,'Waluta'@);
PW.win_fld(_win,PW,'KW',,,16,2,,'Kwota'@);

::PW.win_act(_win,0,'Formuła','Rozrachunki',,,"mb_exec('F_PWOP')","",1);
PW.win_act(_win,0,'Rekord',,,,"mb_exec('br_pw')","");
PW.win_act(_win,0,'Szukaj');
PW.win_act(_win,0,'Kolejność');
_zamknij:=PW.win_btn(_win,'text=%1,btn_label_align=center,panel=right,align=end'['&Zamknij okno'@],'key:Esc');
PW.btn_opt(_zamknij,'tooltip='+exec('help_red_esc','#window','P'));
PW.win_sel(_win);
PW.select();
''


\pwn_exit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Przed zamknięciem okna grupowego WER_GRP tabeli PWN
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('dekrwycbankokn')>0 & dekrwycbankokn=1
|| 1
|| exec('exit','zws')
?}


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła ustala PARSES dla czynności na podstawie rekordu tabeli PWN,
::       wskazanie na rekord tabeli OKRO_F jest przekazane poprzez parametr PNW czynności.
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_in:=params_get().in;
_out:=params_get().out;
{? var_pres('PWN',_in) & var_pres('PWN',_in)=type_of(null()) & _in.PWN<>null()
|| _maska:=form(($_in.PWN)-8);
   PWN.use(_maska);
   PWN.prefix();
   {? PWN.seek(_in.PWN,_maska)
   || __PARSES.setVal('JednostkaKsięgowa',PWN.ODD);
      _result:=1
   || FUN.emsg('Nie znaleziono wyciągu.'@)
   ?}
:: jeżeli czynność startowa to parametry z bieżących ustawień pulpitu
|| _result:=1
?};
_result


\uprawnienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na uprawnienia do danych dla czynności
::   WE: params_get().in - parametry wejściowe czynności
::           params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::           params_get().mp - Menadżer Procesów
::   WY: 0 - użytkownik nie ma uprawnień do danych czynności
::       1 - użytkownik ma uprawnienia do danych czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_user:=params_get().user;
_mp:=params_get().mp;
_result:=0;
{? var_pres('PWN',_in) & var_pres('PWN',_in)=type_of(null) & _in.PWN<>null
|| USERS.cntx_psh(); USERS.clear();
   {? USERS.seek(_user)
   || PWN.cntx_psh();
      PWN.use(ref_name(_in.PWN));
      PWN.prefix();
      {? PWN.seek(_in.PWN)
      || {? exec('usr_fjks','b_perm',PWN.ODD().OD,USERS.ref()) & exec('usr_hrb','b_perm',PWN.RBL)
            & exec('usr_hrp_any','b_perm',USERS.ref())
         || _result:=1
         ?}
      ?};
      PWN.cntx_pop()
   ?};
   USERS.cntx_pop()
|| _result:=1
?};
_result


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [23.25]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego lub dokument jest zaakceptowany
::       zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
_wy:=_mp.load(exec('kind_out','#b_port'));
_keyRefs:=_mp.getRefs();
{? obj_len(_keyRefs)>0
|| {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];
      {? type_of(_kref)>0
      || {? ref_name(_kref)*'pn'>0
         || _record:=exec('FindAndGet','#table',PWN,_kref,,,null());
            {? _record=null()
            || _mp.done()
            ?}
         ?}
      ?}
   !}
?};
1

:Sign Version 2.0 jowisz:1045 2023/10/06 09:47:01 4fd2867a6b9c9086099ade88121589e40cbd83f306597cabe034b38746425ecb6c6f6d2bd087d6fe1d17df9f59193e5197b597cd1f8a80d0d42e6bcf3260b2c274b188e488fe0713e7a6a0cb8c73dffa5b78b3ea9449a19250520ea3e5c7336f2d25a033a7735522fd7f47d001f05cfe91b25791ba2176c635bc95a5cc2b2d50
