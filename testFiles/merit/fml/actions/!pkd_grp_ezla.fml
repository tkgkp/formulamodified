:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_grp_ezla.fml
:: Utworzony: 07.03.2018
:: Autor: areKc
::======================================================================================================================
:: Zawartość: Obsługa czynności PKD_GRP_EZLA - Zwolnienia lekarskie e-ZLA.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.22]
:: OPIS: Przeglądanie i import zwolnień lekarskich e-ZLA.
::   WE:
::   WY:
::  OLD: \i_pue/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL

_emsg:=
   {? ~__F_ZATR.control(0,'P','Z')
   || 'Operacja grupowa dostępna tylko po wybraniu formy współpacy: "Pracownicy" lub "Zleceniobiorcy".'@
   |? exec('get_par','#parametr',285)<>'T' & ~exec('no_limit','schemat','PKD',0)
   || 'Operacja grupowa dostępna tylko dla użytkownika z uprawnieniami do wszystkich jednostek organizacyjnych.'@
   || ''
   ?};
{? +_emsg
|| FUN.emsg(_emsg);
   return(~~)
?};

_mode:='maximized';

Cntx.psh(N,OS_N,R,OSOBA,P_INFO,TZ,H,P,NEZLA);
NEZLA.index('NEZLAS');

:: Definicja okna z zakładkami zawierającego zaimportowane dokumenty e-ZLA.
_wg:=NEZLA.grp_make('Dane e-ZLA'@,"win_activate('werezla2a')",'widokezla',,,,,_mode);
:: Zakładka z niezaakceptowanymi dokumentami e-ZLA.
NEZLA.grp_sel(_wg,,'WER','Do akceptacji'@,
   "  _gray:={? NEZLA.EZLA_XML<>null || '' || 'Z' ?};
      NEZLA.actions_grayed('WER',_gray+'N')
   ",,,,
   "  NEZLA.index('NEZLAS');
      NEZLA.prefix(exec('firma','ustawienia'),'N');
::    Ukrywamy akcję Historia - aktualnie tabela nie jest wypełniana (rozwój w przyszłości)
::    Docelowo będzie ona przechowywać wszystkie informacje odnośnie importu dokumentów
      NEZLA.actions('WER','H','A:I',1)
   ",,,,_mode,'werezla2a'
);
:: Zakładka z zaakceptowanymi dokumentami e-ZLA.
NEZLA.grp_sel(_wg,,'WER','Zaakceptowane'@,
   "  _gray:=
         {? (NEZLA.F_ZATR='Z'
            & (exec('chk_role','#b__box',OPERATOR.USER,'PPL_ZLC_PNIE')
               |
               exec('chk_role','#b__box',OPERATOR.USER,'PPL_ZLC_RNIE'))
            )
            |
            (NEZLA.F_ZATR='P'
            & (exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_OPNN')
               |
               exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_ORNN'))
            )
         || ''
         || 'N'
         ?};
      _gray+={? NEZLA.EZLA_XML<>null || '' || 'Z' ?};
      NEZLA.actions_grayed('WER',_gray+'IAUW:I')
   ",,,,
   "  NEZLA.index('NEZLAS');
      NEZLA.prefix(exec('firma','ustawienia'),'T');
::    Ukrywamy akcję Historia - aktualnie tabela nie jest wypełniana (rozwój w przyszłości)
      NEZLA.actions('WER','H','N:',1)
   ",,,,_mode,'werezlaa'
);
:: Zakładka z wszystkimi dokumentami e-ZLA.
NEZLA.grp_sel(_wg,,'WER','Wszystkie'@,
   "  _gray:=
         {? (NEZLA.F_ZATR='Z'
            & (exec('chk_role','#b__box',OPERATOR.USER,'PPL_ZLC_PNIE')
               |
               exec('chk_role','#b__box',OPERATOR.USER,'PPL_ZLC_RNIE'))
            )
            |
            (NEZLA.F_ZATR='P'
            & (exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_OPNN')
               |
               exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_ORNN'))
            )
         || ''
         || 'N'
         ?};
      NEZLA.cntx_psh();
      NEZLA.index('NEZLAS');
      NEZLA.prefix(exec('firma','ustawienia'));
      _gray+={? ~NEZLA.find_key('N') || 'W' || '' ?};
      NEZLA.cntx_pop();
      _grayXML:={? NEZLA.EZLA_XML<>null || '' || 'Z' ?};
      NEZLA.actions_grayed('WER',{? NEZLA.STATUS='T' || _gray+'AU' || 'N' ?}+_grayXML);
::    Ukrywamy akcję Historia - aktualnie tabela nie jest wypełniana (rozwój w przyszłości)
      NEZLA.actions('WER','H',{? NEZLA.STATUS='T' || 'N:I' || 'A:I' ?},1)
   ",,,,
   "  NEZLA.index('NEZLAS');
      NEZLA.prefix(exec('firma','ustawienia'))
   ",,,,_mode,'werezlaw'
);

NEZLA.first();
NEZLA.win_sel(_wg);
NEZLA.select(,-5);
Cntx.pop(N,OS_N,R,OSOBA,P_INFO,TZ,H,P,NEZLA);
~~


\n_wer_bfe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.22]
:: OPIS: Wyświetlenie dokumentów elektronicznych zwolnień lekarskich pracownika.
::   WE:
::   WY:
::  OLD: \i_puep/kali_ei.fml
:----------------------------------------------------------------------------------------------------------------------
_mode:='maximized';

Cntx.psh(N,OS_N,R,OSOBA,P_INFO,TZ,H,P,NEZLA);
NEZLA.index('NEZLA');

:: Definicja okna z zakładkami zawierającego dokumenty e-ZLA dla wybranego pracownika.
_wg:=NEZLA.grp_make('Zaimportowane dokumenty e-ZLA %1 %2'@[OSOBA.PIERWSZE,OSOBA.NAZWISKO],
   "  NEZLA.index('NEZLA');
      NEZLA.prefix(exec('firma','ustawienia'),P.OSOBA,__F_ZATR.P,'N');
      win_activate({? NEZLA.size() || 'werpezla2a' || 'werpezlaa'?})
   ",'werpdokezla',,,,,'html_maximized'
);
:: Zakładka z zaakceptowanymi dokumentami e-ZLA.
NEZLA.grp_sel(_wg,,'WERP','Zaakceptowane'@,
   "  _gray:={? NEZLA.EZLA_XML<>null || '' || 'Z' ?};
      NEZLA.actions_grayed('WERP',_gray+'AU')
   ",,,,
   "  NEZLA.index('NEZLA');
      NEZLA.prefix(exec('firma','ustawienia'),P.OSOBA,__F_ZATR.P,'T');
      NEZLA.actions('WERP',,'N:',1)
   ",,,,_mode,'werpezlaa'
);
:: Zakładka z niezaakceptowanymi dokumentami e-ZLA.
NEZLA.grp_sel(_wg,,'WERP','Do akceptacji'@,
   "  _gray:={? NEZLA.EZLA_XML<>null || '' || 'Z' ?};
      NEZLA.actions_grayed('WERP',_gray+'N')
   ",,,,
   "  NEZLA.index('NEZLA');
      NEZLA.prefix(exec('firma','ustawienia'),P.OSOBA,__F_ZATR.P,'N');
      NEZLA.actions('WERP',,'A:',1)
   ",,,,_mode,'werpezla2a'
);
:: Zakładka z wszystkimi dokumentami e-ZLA.
NEZLA.grp_sel(_wg,,'WERP','Wszystkie'@,
   "  _gray:={? NEZLA.EZLA_XML<>null || '' || 'Z' ?};
      NEZLA.actions_grayed('WERP',{? NEZLA.STATUS='T' || 'AU' || 'N' ?}+_gray);
      NEZLA.actions('WERP',,{? NEZLA.STATUS='T' || 'N:' || 'A:' ?},1)
   ",,,,
   "  NEZLA.index('NEZLA');
      NEZLA.prefix(exec('firma','ustawienia'),P.OSOBA,__F_ZATR.P)
   ",,,,_mode,'werpezlaw'
);

NEZLA.win_sel(_wg);
NEZLA.select();
Cntx.pop(N,OS_N,R,OSOBA,P_INFO,TZ,H,P,NEZLA);
~~


\nezla_wer_afi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.22]
:: OPIS: Formuła importująca nieobecności z pliku csv.
::       Separator kolumn (,) i format daty (yyyy-mm-dd) są zgodne ze specyfikacją pliku dostępną na stronie:
::       http://www.zus.pl/ezla/eksport-e-zla-z-pue
::   WE:
::   WY:
::  OLD: \i_npue/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
_f_zatr:=obj_new(2);
_f_zatr[1]:='P';
_f_zatr[2]:='Z';
_zn_prac:=
   "_prac:=null;
    {!
    |? {? _a>=P.DZA & (_a<=P.DZ | P.DZ=date(0,0,0))
         || H.cntx_psh();
            H.index('_HISTKOD');
            H.prefix(P.ref,'Z');
            {? H.last()
            || {!
               |? {? H.OD<=_a
                  || _prac:=P.ref;
                     0
                  || H.prev()
                  ?}
               !}
            ?};
            H.cntx_pop()
         ?};
         _prac=null & P.next()
    !};
    _prac";

_tmp_dir:=fmk_tmp_dir(0);
{? type_of(_tmp_dir)<>type_of(~~)
|| _pth:=_tmp_dir.get_path();
   {? _pth<>''
   || _uploaded:=dlg_upload(_pth,0,'.csv');
      _sep:=exec('sep','#file',1);
      _plik:=_pth+_sep+_uploaded
   ?}
|| FUN.emsg('Nie udało się utworzenie katalogu tymczasowego po stronie serwera.'@)
?};
{? _uploaded=''
|| FUN.emsg('%1\n%2'['Nie wprowadzono poprawnie nazwy pliku'@,'Import danych został przerwany.'@]);
   return(0)
?};
_handle:=fopen(_plik,'ur');

{? _handle
|| _ile_ok:=0;
   _sep:=',';

   _add_err:=
      "  RAPLS.msg(_a,_b,_c,'('+$_d+' - '+$_e+') : ',_f)
      ";

   RAPLS.ustaw(2);

:: Tabela do importu e-ZLA
   _TAB:=tab_tmp(3,
      'OSOBA','STRING[11]','Identyfikator osoby',
      'REF','INTEGER','Wskazanie na osobę',
      'SERIA','STRING[4]','Seria dokumentu',
      'NUMER','STRING[10]','Nr dokumentu',
      'PESEL','STRING[11]','PESEL',
      'PIERWSZE','STRING[30]','Imię pierwsze',
      'NAZWISKO','STRING[40]','Nazwisko',
      'UB_W','STRING[10]','UB_W',
      'PASZPORT','STRING[20]','PASZPORT',
      'UR_DATA','DATE','Data urodzenia',
      'KOD','STRING[9]','Kod pocztowy',
      'MIASTO','STRING[40]','Miejscowość',
      'ULICA','STRING[50]','Ulica',
      'DOM','STRING[8]','Numer domu',
      'LOKAL','STRING[8]','Numer lokalu',
      'OD','DATE','Niezdolność do pracy od',
      'DO','DATE','Niezdolność do pracy do',
      'SZP_OD','DATE','Pobyt w szpitalu od',
      'SZP_DO','DATE','Pobyt w szpitalu do',
      'LEK_WSK','STRING[20]','Wskazania lekarskie',
      'KODY','STRING[20]','Kody',
      'NUM_STAT','STRING[20]','Numer statystyczny',
      'R_STPK','STRING[2]','Kod pokrewieństwa',
      'R_DA','DATE','Data urodzenia osoby pozostającej pod opieką',
      'ZAKL_RID','STRING[1]','Rodzaj identyfikatora płatnika',
      'ZAKL_ID','STRING[20]','Identyfikator płatnika',
      'ZAKL_N','STRING[50]','Nazwa skrócona',
      'Z_KOD','STRING[9]','Kod pocztowy płatnika',
      'Z_MIASTO','STRING[40]','Miejscowość płatnika',
      'Z_ULICA','STRING[50]','Ulica płatnika',
      'Z_DOM','STRING[8]','Numer domu płatnika',
      'Z_LOKAL','STRING[8]','Numer lokalu płatnika',
      'LEK_ID','STRING[20]','Identyfikator lekarza',
      'LEK_IM','STRING[40]','Imię lekarza',
      'LEK_NAZ','STRING[50]','Nazwisko lekarza',
      'D_WYST','DATE','Data wystawienia dokumentu',
      'ST_ZAS','STRING[50]','Status zaświadczenia',
      'DRUGIE','STRING[30]','Drugie imię',
      'STATUS','STRING[1]','Status',
      'DESCR','STRING[255]','Uwagi',
      'F_ZATR','STRING[1]','Forma zatrudnienia'
   );

   Cntx.psh(NEZLA,OSOBA);
   _pesel:=OSOBA.ndx_tmp(,1,'PESEL',,,'NAZWISKO',,);
   _paszport:=OSOBA.ndx_tmp(,1,'PASZPORT',,,'NAZWISKO',,);
:: Pominięcie pierwszej linii z nagłówkiem
   fread(_handle);
   {!
   |? (_tline:=fread(_handle))<>'\n'
   |! _err:=0;
      _TAB.blank();
      {? 1+_tline='"'
      || _tline:=1-_tline; _cudz:='""'; _ile:=2
      || _cudz:='"'; _ile:=1
      ?};
      {? _tline+1='"' || _tline:=_tline-1 ?};
      {! _ii:=3..(_TAB.fld_num()-4)
      |! _var:='';
         _acr:=_TAB.fld_acr(_ii);
         _res:='';

         {? 1+_tline='"'
         || _dlugosc:=+_tline;
            _pole:=0;
            {? _tline*('",')
            || {!
               |? _pole+=((_pole-_tline)*('",'));
                  _licz:=0;
                  {! _ind:=1.._pole+1
                  |! _string:=_ind+_tline;
                     {? _string+1='"' || _licz+=1 ?}
                  !};
                  _licz%*(2*_ile) & _ind<_dlugosc
               !}
            ?};
            _napis:=_pole+_tline;
            _tline:=_pole+1-_tline;
            _napis:=_ile-(_napis-(_ile));
            _wynik:='';
            {!
            |? _pozycja:=_napis*(_cudz+_cudz)
            |! _var+=_pozycja+_napis;
               _napis:=(_pozycja+(1+((_ile-1)*2)))-_napis
            !};
            _var+=_napis;
            ($('_a.'+_acr))(_TAB):=_var
         || {? _tline*_sep
            || _var:=((_tline*_sep)-1)+_tline
            |? +_tline
            || _var:=_tline
            ?};
            {? var_pres(_acr,_TAB)=27
            || _var:=|_var
            |? var_pres(_acr,_TAB)=21
            || _var:={? +_var || date(#(4+_var),#(2+(5-_var)),#(_var+2)) || date(0,0,0) ?}
            ?};
            ($('_a.'+_acr))(_TAB):=_var;
            _tline:={? (_tline*_sep) || (_tline*_sep)-_tline || '' ?}
         ?}
      !};
      _TAB.DESCR:='Pracownik';
      _TAB.F_ZATR:='P';
      _TAB.OSOBA:=
         {? +_TAB.PESEL
         || OSOBA.index(_pesel);
            _TAB.PESEL
         || OSOBA.index(_paszport);
            _TAB.PASZPORT
         ?};

      {? +_TAB.OSOBA & _TAB.OD<>#0 & _TAB.DO<>#0 & _TAB.D_WYST<>#0 & _TAB.SERIA<>'Seria'
      || _ok:=1;
         NEZLA.index('NEZLAN');
         NEZLA.prefix(exec('firma','ustawienia'),_TAB.SERIA,_TAB.NUMER);
         {? NEZLA.first()
         || {!
            |?
               {? NEZLA.ST_ZAS=_TAB.ST_ZAS
               || RAPLS.msg(_TAB.OSOBA,_TAB.NAZWISKO,_TAB.PIERWSZE,
                     'Dokument e-ZLA: seria %1, numer %2, status %3 już istnieje - zapis został pominięty.'@
                     [_TAB.SERIA,_TAB.NUMER,_TAB.ST_ZAS]);
                  _ok:=0
               ?};
               NEZLA.next & _ok
            !}
         ?};
         NEZLA.index('NEZLAS');
         {? _ok
         || OSOBA.prefix(_TAB.OSOBA);
            {? {? OSOBA.size()=1
               || OSOBA.first()
               || _exist:=0;
                  {? OSOBA.first()
                  || {!
                     |? _exist:=(-OSOBA.NAZWISKO=-_TAB.NAZWISKO);
                        ~_exist & OSOBA.next()
                     !}
                  ?};
                  _exist
               ?}
            || _prac:=null;
               _jest_pz:=0;
               {! _ind:=1..2
               |! {? _prac=null()
                  || P.index('PRACOSOB');
                     P.prefix(exec('ref_firma','ustawienia'),_f_zatr[_ind],OSOBA.ref());
                     {? P.first()
                     || _jest_pz:=1;
                        {? P.size()>1
                        || _prac:=_zn_prac(_TAB.D_WYST);
                           {? _prac<>null()
                           || _TAB.F_ZATR:=_f_zatr[_ind];
                              _TAB.DESCR:={? _TAB.F_ZATR='P' || 'Pracownik' || 'Zleceniobiorca' ?}
                           ?}
                        || {? _TAB.D_WYST>=P.DZA & (_TAB.D_WYST<=P.DZ | P.DZ=date(0,0,0))
                           || _prac:=P.ref();
                              _TAB.F_ZATR:=_f_zatr[_ind];
                              _TAB.DESCR:={? _TAB.F_ZATR='P' || 'Pracownik' || 'Zleceniobiorca' ?}
                           ?}
                        ?}
                     ?}
                  ?}
               !};

               {? _prac=null()
               || _TAB.DESCR:='Brak aktywnego pracownika lub zleceniobiorcy.';
                  _add_err(_TAB.OSOBA,_TAB.NAZWISKO,_TAB.PIERWSZE,_TAB.OD,_TAB.DO,
                     'Brak aktywnego pracownika lub zleceniobiorcy.'@
                  )
               ?};
               {? _TAB.OD>_TAB.DO
               || _err:=1;
                  _add_err(_TAB.OSOBA,_TAB.NAZWISKO,_TAB.PIERWSZE,_TAB.OD,_TAB.DO,
                     'Nieprawidłowe daty od i do dla nieobecności: %1 %2. Operacja importu została anulowana.'@
                        [  _TAB.OD$1,_TAB.DO$1
                        ]
                  )
               ?};
               {? _TAB.SZP_OD>_TAB.SZP_DO
               || _err:=1;
                  _add_err(_TAB.OSOBA,_TAB.NAZWISKO,_TAB.PIERWSZE,_TAB.OD,_TAB.DO,
                     'Nieprawidłowe daty od i do dla nieobecności: %1 %2. Operacja importu została anulowana.'@
                        [  _TAB.SZP_OD$1,_TAB.SZP_DO$1
                        ]
                  )
               ?};
               {? ~_jest_pz
               || _err:=1;
                  _add_err(_TAB.OSOBA,_TAB.NAZWISKO,_TAB.PIERWSZE,_TAB.OD,_TAB.DO,
                     'Brak pracownika lub zleceniobiorcy. Operacja importu została anulowana.'@
                  )
               ?};
::             Sprawdzenie czy pracownik oddelegowany bez opłacania składek ZUS:
               {? _prac<>null()
               || _oddBz:=exec('okr_odd_bzus','oddelegowanie',_prac,_TAB.OD,_TAB.DO,1);
                  {? _oddBz
::                   332:"Sposób importu elektr. zwolnień lek. (e-ZLA) osób oddelegowanych płacących skł.
::                        na ubezpieczenie za granicą":
                  || _p332:=(PAR_SKID.get(332)<>'N');
                     _txtErr:=
                        {? _oddBz=2
                        || 'Część zwolnienia przypada na okres oddelegowania bez opłacania '
                           'składek ZUS współpracownika.'@
                        || 'Współpracownik przebywa na oddelegowaniu bez opłacania składek ZUS.'@
                        ?};
                     _TAB.DESCR:='%1 %2'[_txtErr,{? _p332 || '' || 'Operacja importu została anulowana.'@ ?}];
                     {? ~_p332
                     || _err:=1
                     ?};
                     _add_err(_TAB.OSOBA,_TAB.NAZWISKO,_TAB.PIERWSZE,_TAB.OD,_TAB.DO,_TAB.DESCR)
                  ?}
               ?};
               {? ~_err
               || _TAB.REF:=#OSOBA.ref();
                  _TAB.STATUS:='N';
                  _overlap:=0;
                  _od:=_TAB.OD;
                  _do:=_TAB.DO;
                  _st_zas:=|_TAB.ST_ZAS;
                  _TAB.DESCR:=_TAB.DESCR+' (Status: '+_st_zas+' )';
                  _TAB.cntx_psh();
                  _TAB.prefix(_TAB.OSOBA,#OSOBA.ref());
                  {? _TAB.first()
                  || {!
                     |? {? _od<=_TAB.DO & _do>=_TAB.OD | _od<=_TAB.SZP_DO & _do>=_TAB.SZP_OD
                        || {? _TAB.ST_ZAS=_st_zas
                           || _overlap:=1;
                              0
                           || _TAB.next()
                           ?}
                        || _TAB.next()
                        ?}
                     !}
                  ?};
                  _TAB.cntx_pop();
                  {? (_TAB.SZP_OD>#0 | _TAB.SZP_DO>#0)
                     &
                     (_TAB.SZP_OD<_TAB.OD | _TAB.SZP_OD>_TAB.DO | _TAB.SZP_DO<_TAB.OD | _TAB.SZP_DO>_TAB.DO)
                  || _add_err(_TAB.OSOBA,_TAB.NAZWISKO,_TAB.PIERWSZE,_TAB.OD,_TAB.DO,
                        'Okres pobytu w szpitalu nie nastąpił w czasie trwania nieobecności.'@
                     )
                  |? _overlap
                  || _add_err(_TAB.OSOBA,_TAB.NAZWISKO,_TAB.PIERWSZE,_TAB.OD,_TAB.DO,
                        'Nieobecność: %1 - %2 status: %3 koliduje z inną importowaną i zostanie pominięta.'@
                        [_TAB.OD$1,_TAB.DO$1,_st_zas]
                     )
                  || _ile_ok+=_TAB.add()
                  ?}
               ?}
            || _add_err(_TAB.OSOBA,_TAB.NAZWISKO,_TAB.PIERWSZE,_TAB.OD,_TAB.DO,
                  'Nie znaleziono pracownika o podanym identyfikatorze.'@
               )
            ?}
         ?}
      |? +_TAB.OSOBA & _TAB.SERIA<>'Seria'
      || _add_err(_TAB.OSOBA,_TAB.NAZWISKO,_TAB.PIERWSZE,_TAB.OD,_TAB.DO,
            'Nieprawidłowa data rozpoczęcia lub zakończenia nieobecności.'@
         )
      ?}
   !};
   fclose(&_handle);
   RAPLS.raport(9);
   RAPLS.ustaw(0);

   {? _ile_ok
   || {? FUN.ask('%1\n%2\n%3'
            [  'Operacja weryfikacji struktury pliku zakończona poprawnie.'@,
               'Liczba zaimportowanych dokumentów: %1.'@[$_ile_ok],
               'Czy kontynuować proces importu nieobecności?'@
            ]
         )
      || {? _TAB.first()
         || NEZLA.clear();
            {!
            |? {? OSOBA.seek(_TAB.REF,,1)
               || NEZLA.blank();
                  {! _ii:=2.._TAB.fld_num()
                  |! _acr:=_TAB.fld_acr(_ii);
                     {? var_pres(_acr,NEZLA)>0 || ($('NEZLA.'+_acr+':=_a.'+_acr))(_TAB) ?}
                  !};
                  NEZLA.add()
               ?};
               _TAB.next()
            !}
         ?}
      ?}
   || FUN.emsg('%1\n%2'['Operacja importu nieobecności została zakończona.'@,'Brak pozycji w pliku do zaimportowania'@])
   ?};
   OSOBA.ndx_drop();
   Cntx.pop(NEZLA,OSOBA)
|| _err:=1;
   FUN.emsg('Brak pliku %1 w lokalizacji %2'@[_name_plk,_przp])
?};
~~


\nezla_wer_afa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [18.22]
:: OPIS: Akcja menu "Akceptuj".
::   WE:
::   WY:
::  OLD: \akc1/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~NEZLA.sel_size()
|| {? ~FUN.ask('%1\n%2'
      [  'Czy przenieść dane o nieobecności dla bieżącego wiersza?'@,
         'Dane zostaną przeniesione do kartoteki nieobecności.'@
      ]
   )
   || return(~~)
   ?};

   RAPLS.ustaw(0);

   VAR_DEL.delete('__Comm');
   exec('JCQ_decl','#message');
   __Comm:=obj_new(@.CLASS.JCQ);
   __Comm.init(200,,' Konflikty dla nieobecności'@,'')
?};

exec('akceptacja','!pkd_grp_ezla',~NEZLA.sel_size());

{? ~NEZLA.sel_size()
|| {? ~__Comm.empty()
   || __Comm.select()
   ?};
   VAR_DEL.delete('__Comm');
   RAPLS.raport(2);
   RAPLS.ustaw(0)
?};
~~


\nezla_wer_bgfa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [18.22]
:: OPIS: Akcja menu "Akceptuj" dla zaznaczonej grupy rekordów - grupa przed.
::   WE:
::   WY:
::  OLD: \ezla_a_gb/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~FUN.ask('%1\n%2'
      [  'Czy przenieść dane o nieobecności zaznaczonych wierszy?'@,
         'Dane zostaną przeniesione do kartoteki nieobecności.'@
      ]
   )
|| return(0)
?};
RAPLS.ustaw(2);

VAR_DEL.delete('__Comm');
exec('JCQ_decl','#message');
__Comm:=obj_new(@.CLASS.JCQ);
__Comm.init(200,,' Konflikty dla nieobecności'@,'');
1


\nezla_wer_agfa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [18.22]
:: OPIS: Akcja menu "Akceptuj" dla zaznaczonej grupy rekordów - grupa po.
::   WE:
::   WY:
::  OLD: \ezla_a_ga/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~__Comm.empty()
|| __Comm.select()
?};
VAR_DEL.delete('__Comm');

RAPLS.raport(9);
RAPLS.ustaw(0);
~~


\nezla_wer_afw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [18.22]
:: OPIS: Akceptacja wszystkich możliwych rekordów e-ZLA.
::   WE:
::   WY:
::  OLD: \akc_all/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~FUN.ask('%1\n%2'
   [  'Czy przenieść dane o nieobecnościach pracowników?'@,
      'Dane zostaną przeniesione do kartoteki nieobecności.'@
   ]
   )
|| return(0)
?};

VAR_DEL.delete('__Comm');
exec('JCQ_decl','#message');
__Comm:=obj_new(@.CLASS.JCQ);
__Comm.init(200,,' Konflikty dla nieobecności'@,'');

RAPLS.ustaw(2);
NEZLA.cntx_psh();
_nezla:=sql('select REFERENCE as REF, OD from NEZLA where NEZLA.STATUS=\'N\' order by OD');

{? _nezla.first()
|| {!
   |? {? NEZLA.seek(BIT.sqlint(_nezla.REF),)
      || exec('akceptacja','!pkd_grp_ezla',0)
      ?};
      _nezla.next
   !}
?};
NEZLA.cntx_pop();

{? ~__Comm.empty()
|| __Comm.select()
?};
VAR_DEL.delete('__Comm');

RAPLS.raport(9);
RAPLS.ustaw(0);
~~


\nezla_wer_bu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [18.22]
:: OPIS: Przed usunięciem zapisu w tabei NEZLA.
::   WE:
::   WY: 1 - możliwe usunięcie
::  OLD: \usun/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
N.index('NIENEZLA');
N.prefix(NEZLA.ref());
{? N.first()
|| FUN.emsg('%1\n%2'
      [  'Na podstawie bieżącego importu utworzono zapis w nieobecnościach.'@,
         'Usuwanie jest zabronione.'@
      ]
   );
   _wyn:=0
|| _wyn:=1
?};
_wyn


\nelza_wer_afn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.41]
:: OPIS: Wyszukanie nieobecności powstałych po imporcie.
::   WE:
::   WY:
::  OLD: \nieobecnosc/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
_mode:='maximized';

{? NEZLA.F_ZATR='P'
|| N.index('NIENEZLA');
   N.prefix(NEZLA.ref());
   _ok:={? N.first() || N.P(); 1 || 0 ?};
   _TAB:=N
|| OS_N.index('NEZLA');
   OS_N.prefix(exec('ref_firma','ustawienia'),NEZLA.ref());
   _ok:=
      {? OS_N.first()
      || N.cntx_psh();
         N.index('NIEOBOSO');
         N.prefix(OS_N.ref());
         {? N.first() || N.P() || null() ?};
         N.cntx_pop(); 1
      || 0
      ?};
   _TAB:=OS_N
?};

{? _ok
|| _wg:=_TAB.grp_make('Nieobecności z e-ZLA'@,
      "  win_activate('nieobecnosci')
      ",,,,,,_mode
   );
   _TAB.grp_edit(_wg,P,'INFO_'+NEZLA.F_ZATR,,,,,,_mode);
   _TAB.grp_splt(_wg,,'horizontal','nieobecnosci');
   _TAB.grp_sel(_wg,,'SLO',,
      "  {? cur_tab(1,1)=N
         || cur_tab(1,1).P();
            mb_exec('GRP_EDISP_P_INFO_P')
         || cur_tab(1,1).OSOBA();
            mb_exec('GRP_EDISP_P_INFO_Z')
         ?}
      ",,,,,,,,_mode,'nieobecnosci'
   );
   _TAB.win_sel(_wg);
   {? exec('get_par','#parametr',285)='T'
   || _TAB.cntx_psh();
      _TAB.win_edit('');
      _TAB.actions('SLO','w');
      _TAB.fld_attr(,2);
      _TAB.select();
      _TAB.actions('SLO');
      _TAB.cntx_pop()
   || _TAB.select()
   ?}
?};

~~


\akceptacja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [18.22]
:: OPIS: Akceptacja 1 rekordu e-ZLA.
::   WE: _a - [INTEGER] 0/1 - Czy pomijać komunikaty.
::   WY:
::  OLD: \akceptacja/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
_msg:={? var_pres('_a')=type_of(0) || _a || 0 ?};

{? NEZLA.STATUS<>'N'
|| {? _msg
   || FUN.emsg('Dane z wybranego importu e-ZLA zostały już zaakceptowane i przeniesione do kartoteki nieobecności.'@)
   ?};
   return(~~)
?};

NEZLA.OSOBA();
NEZLA.DESCR:='';

_add_err:=
   "  RAPLS.msg(_a,_b,_c,'('+$NEZLA.OD+' - '+$NEZLA.DO+') : ',_d);
      NEZLA.DESCR:=_d
   ";

{? ((-NEZLA.ST_ZAS)*'anulowane' | (-NEZLA.ST_ZAS)*'do wyjaśnienia' | (-NEZLA.ST_ZAS)*'nieuzasadnione' |
    (-NEZLA.ST_ZAS)*'nie uzasadnione')
|| _add_err(OSOBA.PESEL,OSOBA.NAZWISKO,OSOBA.PIERWSZE,
      'Dokument ze statusem:(%1) nie będzie zapisany w kartotece nieobecności.'@[NEZLA.ST_ZAS]);
   return(0)
?};

_add:=0;

P.cntx_psh();
P.use('pracowni');
P.index('PRACOSOB');
P.prefix(exec('firma','ustawienia'),'P',NEZLA.OSOBA);
:: Sprawdzenie czy pracownik oddelegowany bez opłacania składek ZUS:
_oddBz:=0;
:: 332:"Sposób importu elektr. zwolnień lek. (e-ZLA) osób oddelegowanych płacących skł. na ubezpieczenie za granicą":
_p332:=(PAR_SKID.get(332)='T');
:: Na tym etapie parametr może mieć jedynie wartości T - importuj bezwarunkowo lub W - importuj warunkowo
{? ~_p332 & P.first()
|| {!
   |? _oddBz:=exec('okr_odd_bzus','oddelegowanie',P.ref(),NEZLA.OD,NEZLA.DO,1);

      ~_oddBz & P.next()
   !};
   {? _oddBz
   || _txtErr:={? _oddBz=2
               || 'Część zwolnienia przypada na okres oddelegowania bez opłacania składek ZUS współpracownika.'@
               || 'Współpracownik przebywa na oddelegowaniu bez opłacania składek ZUS.'@
               ?};
      {? _msg & FUN.ask('%1 %2 (%3)\n%4\n%5'[OSOBA.NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL,_txtErr,'Czy akceptować?'@])
      || _oddBz:=0
      || _add_err(OSOBA.PESEL,OSOBA.NAZWISKO,OSOBA.PIERWSZE,'%1 %2'[_txtErr,'Akceptacja została anulowana.'@]);
         P.cntx_pop();
         return(0)
      ?}
   ?}
?};
{? ~_oddBz & P.first()
|| {? P.size()>1
   || {!
      |? {? NEZLA.DO>=P.DZA & (NEZLA.OD<=P.DZ | P.DZ=#0)
         || H.cntx_psh();
            H.index('_HISTKOD');
            H.prefix(P.ref(),'Z');
            {? H.last()
            || {!
               |? {? H.OD<=NEZLA.DO
                  || _add+=exec('addn_p','!pkd_grp_ezla',_add_err); 0
                  || H.prev()
                  ?}
               !}
            ?};
            H.cntx_pop()
         ?};
         P.next()
      !}
   || {? NEZLA.DO>=P.DZA & (NEZLA.DO<=P.DZ | P.DZ=#0)
      || _add+=exec('addn_p','!pkd_grp_ezla',_add_err)
      || _add_err(
            P.OSOBA().PESEL,
            OSOBA.NAZWISKO,
            OSOBA.PIERWSZE,
            'Brak aktywnego pracownika lub zleceniobiorcy.'@
         )
      ?}
   ?}
?};
{? ~_add & NEZLA.F_ZATR='Z'
|| _add+=exec('addn_zc','!pkd_grp_ezla',_add_err)
?};
P.cntx_pop();
NEZLA.cntx_psh();
NEZLA.prefix(exec('firma','ustawienia'));
{? _add
|| NEZLA.STATUS:='T';
   NEZLA.put()
?};
NEZLA.cntx_pop();
_add;
~~


\addn_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [18.22]
:: OPIS: Akceptacja 1 rekordu e-ZLA dla jednego pracownika.
::   WE: _a - [INTEGER} 1 - Formuła do dodawania komunikatów.
::   WY:
::  OLD: \addn_p/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
_add_err:=_a;
_tmp_od:=NEZLA.OD;
_tmp_do:=
   {? NEZLA.SZP_OD<>#0
   || {? NEZLA.SZP_OD=NEZLA.OD || NEZLA.SZP_DO || NEZLA.SZP_OD-1 ?}
   || NEZLA.DO
   ?};
_err:=0;
_stop:={? _tmp_do=NEZLA.DO || 1 || 0 ?};
_p_kor_do:=N.ndx_tmp(,1,'P',,,'KOR',,,'DO',,,'NB','RN',);

{!
|? {? ~_err & _tmp_do<>#0 & _tmp_do<=NEZLA.DO & _tmp_od<=_tmp_do
   || _r_ref:=0;
      {? P.KAL || __KAL.set_cal(P.KAL().NAZWA) || __KAL.set_cal('standard') ?};
      _code:=
         {? +NEZLA.R_STPK
         || __KAL.rdat(NEZLA.OD,NEZLA.R_DA);
            {? NEZLA.R_STPK='1' & __KAL.year<14
            || __RUB.sys_sql(12251)
            || __RUB.sys_sql(12252)
            ?}
         |? NEZLA.KODY*'B'
         || __RUB.sys_sql(12112)
         |? _tmp_od=NEZLA.SZP_OD
         || {? exec('sprawdz_2022','nieobecnosc',P.ref(),_tmp_od)
            || __RUB.sys_sql(122121)
            || __RUB.sys_sql(122122)
            ?}
         || __RUB.sys_sql(12111)
         ?};

      R.cntx_psh();
      R.index('RUBKOD');
      {? #_code
      || R.prefix(#_code);
         {? R.first()
         || {? R.RK<>'N'
            || _err:=1;
               RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                  'Próba wczytania składnika płacowego, który nie jest nieobecnością: %1'@[_code]
               )
            || _r_ref:=R.ref()
            ?}
         || _err:=1;
            RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,'Nieznany kod nieobecności: %1'@[_code])
         ?}
      || _err:=1;
         RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,'Nieprawidłowy kod nieobecności: %1'@[_code])
      ?};
      R.cntx_pop();

      {? ~_err
      || VAR.P:=0;
         N.clear();
         N.blank();
         N.KOR:='N';
         N.P:=P.ref();
         N.NB:=_r_ref;
         _rub:=N.NB().RN;
         _nrub:=N.NB().RT;
         _kod:=
            {? __RUB.sys_attr(_rub,14331) || 'choroba - wynagrodzenie'; '331'
            |? __RUB.sys_attr(_rub,14313) || 'choroba - zasiłek'; '313'
            |? __RUB.sys_attr(_rub,14321) || 'świadczenie rehabilitacyjne'; '321'
            |? __RUB.sys_attr(_rub,14322) || 'świadczenie rehabilitacyjne'; '322'
            |? __RUB.sys_attr(_rub,14311) || 'urlop macierzyński'; '311'
            |? __RUB.sys_attr(_rub,14319) || 'urlop macierzyński w trakcie rodzicielskiego'; '319'
            |? __RUB.sys_attr(_rub,14325) || 'urlop macierzyński w trakcie dod. macierz.'; '325'
            |? __RUB.sys_attr(_rub,14327) || 'urlop macierzyński trakcie ojcowskiego'; '327'
            |? __RUB.sys_attr(_rub,14312) || 'opieka'; '312'
            |? __RUB.sys_attr(_rub,14314) || 'wypadek - zasiłek'; '314'
            |? __RUB.sys_attr(_rub,14152) || 'nieobecność nieuspr.'; '152'
            |? __RUB.sys_attr(_rub,14111) || 'urlop bezpłatny - wn. pracownika'; '111'
::          Usunięto podpowiadanie kodu 350 (PR/WRT/XP/21.37/2112/0049 - propozycja SPIS)
            |? __RUB.sys_attr(_rub,14151) || 'uspr., bez wynagr.'; '151'
            |? __RUB.sys_attr(_rub,14333) || 'wypadek - wynagrodzenie'; '333'
            || ''
            ?};
         N.KDSW:={? +_kod || exec('kod_zus','nieobecnosc','S',_kod) || null() ?};
         N.PROC:=exec('procent','nieobecnosc',_rub);
         N.KDCH:={? +NEZLA.KODY || exec('kod_zus','nieobecnosc','C',NEZLA.KODY) || null() ?};
         N.OD:=_tmp_od;
         N.DO:=_tmp_do;
         N.DD:=NEZLA.D_WYST;
         N.NK:=_tmp_do-_tmp_od+1;
         N.NR:=__KAL.w_days(_tmp_do,_tmp_od);
         N.NG:=exec('nominal','godziny',_tmp_od,_tmp_do);
         N.LT:=N.RDOK:='';
         N.SDOK:=NEZLA.SERIA;
         N.NDOK:=NEZLA.NUMER;
         N.POD:=N.STD:=N.WART:=0;
         N.NEZLA:=NEZLA.ref();
         N.DN:=
            {? NEZLA.KODY*'C'
            || {? N.DO-N.OD<5
               || (N.DO-N.OD)+1
               || 5
               ?}
            || 0
            ?};

         _status:=exec('n','overlap',null(),1);
         {? var_pres('_status')=type_of('') & +_status
         || _err:=1;
            _add_err(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,'Konflikt dat.'@)
         || _status:='';
            _res:=N.add(1);
            {? ~_res
            || _status:=' wpis o nieobecności już istnieje'
            || {? N.DN
               || _add_err(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                     'Nieobecność zarejestrowana z kodem "C" liczba dni niepłatnych: %1.'@[$N.DN]
                  )
               ?};
               {? +N.KDCH().KOD>1
               || _add_err(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                     'UWAGA: Wieloznakowy kod choroby w importowanej nieobecności: "%1".'@[N.NB().RT]
                  )
               ?};
               N.cntx_psh();
               _zm_rok:=N.DO~1;
               exec('n_rozpisz','nieobecnosc',0,0);
               N.cntx_pop();
               N.get();
               {? _rub=__RUB.sys_kod(1241) | N.NB().RN=__RUB.sys_kod(1241)
               || _add_err(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                     'Na podstawie danych wprowadzonych do systemu zarejestrowano nieobecność "%1".'@[N.NB().RT]
                  )
               |? _rub<>N.NB().RN
               || _add_err(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                     'Nieobecność "%1" została zmieniona na nieobecności "%2".'@[_nrub,N.NB().RT]
                  );
                  {? _rub<>__RUB.sys_kod(1241) & N.NB().RN<>__RUB.sys_kod(1241)
                  || N.cntx_psh();
                     N.index('NIPRACNB');
                     N.prefix('N',P.ref(),__RUB.sys_kod(1241));
                     {? N.find_key(NEZLA.OD)
                     || _add_err(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                           'Na podstawie danych wprowadzonych do systemu zarejestrowano nieobecność: "%1".'@[N.NB().RT]
                        )
                     ?};
                     N.cntx_pop()
                  ?}
               ?};
               {? NEZLA.DO<>N.DO
               || _add_err(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                     'Nieobecność "%1" została rozpisana, możliwa zmiana kodu nieobecności.'@[_nrub]
                  )
               ?};
               _nrub:=N.NB().RT;
               N.cntx_psh();
               N.index(_p_kor_do);
               N.prefix(P.ref(),'N',NEZLA.DO);
               {? N.find_key(__RUB.sys_kod(1322))
               || _limit:=
                     {? (N.KDCH().KOD*'B' & N.OD~1>=2009) | N.KDCH().KOD*'D'
                     || 270
                     || KST_PAR.WALORYZ
                     ?};
                  _add_err(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                     'Przekroczono limit czasu trwania okresu zasiłkowego'
                     'wynikającego z Art 8 ust. 1 lub 2 ustawy zasiłkowej.'@+' '+
                     {? _nrub<>N.NB().RT
                     || 'Nieobecność "%1" została zmieniona na "%2".'@[_nrub,N.NB().RT]
                     || 'Dodano nieobecność "%1"'@[N.NB().RT]
                     ?}
                  )
               ?};
               N.cntx_pop();
               _zm_rok-=N.DO~1;
               FUNKCJE.OBLICZDS(N.OD~1);
               {? &_zm_rok || FUNKCJE.OBLICZDS(N.OD~1+1) ?};
               {? exec('n_rozliczalna','nieobecnosc',1)
               || exec('nw_aktualizuj','nieobecnosc')
               ?}
            ?};
            {? _status<>'' || undo() ?};
            {? _status=''
            || exec('konflikty','nieobecnosc',P.ref(),_tmp_od,_tmp_do,0,0,__Comm);
               NEZLA.DESCR:='nieobecność dla pracownika nr teczki: %1 wprowadzona poprawnie'[P.T]
            || _err:=1;
               NEZLA.DESCR:='błąd: %1'[_status]
            ?}
         ?}
      ?};
      {? ~_err & NEZLA.SZP_OD<>#0 & _tmp_do<>#0
      || {? _tmp_do=NEZLA.DO
         || _tmp_do:=#0
         |? _tmp_od=NEZLA.SZP_OD
         || _tmp_od:=NEZLA.SZP_DO+1;
            _tmp_do:=NEZLA.DO
         |? _tmp_od=NEZLA.OD
         || _tmp_od:=NEZLA.SZP_OD;
            _tmp_do:=NEZLA.SZP_DO
         ?}
      ?};
      {? _stop || 0 || 1 ?}
   || 0
   ?}
!};
N.ndx_drop();
~_err


\addn_zc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [18.22]
:: OPIS: Akceptacja 1 rekordu e-ZLA dla 1 zleceniobiorcy.
::   WE: _a=1 - Formuła do wyświetlania komunikatów.
::   WY:
::  OLD: \addn_zc/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
_add_err:=_a;
:: Znajduje zlecenia w czasie trwania których występuje bieżąca nieobecność.
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),'Z',OSOBA.ref());
{? ~P.first()
|| {? NEZLA.F_ZATR='Z'
   || RAPLS.msg(OSOBA.PESEL,OSOBA.NAZWISKO,OSOBA.PIERWSZE,
         'Brak aktywnej umowy zlecenia dla czasu trwania importowanej nieobecności.'@);
      return(0)
   ?}
?};

_tmp_od:=NEZLA.OD;
_tmp_do:=
   {? NEZLA.SZP_OD<>#0
   || {? NEZLA.SZP_OD=NEZLA.OD || NEZLA.SZP_DO || NEZLA.SZP_OD-1 ?}
   || NEZLA.DO
   ?};
_err:=_stop:=0;
{? _tmp_do=NEZLA.DO || _stop:=1 ?};

{!
|? {? ~_err & _tmp_do<>#0 & _tmp_do<=NEZLA.DO & _tmp_od<=_tmp_do
   || __KAL.set_cal('standard');
      _code:=
         {? +NEZLA.R_STPK
         || __KAL.rdat(NEZLA.OD,NEZLA.R_DA);
            {? NEZLA.R_STPK='1' & __KAL.year<14
            || __RUB.sys_sql(12251)
            || __RUB.sys_sql(12252)
            ?}
         |? NEZLA.KODY*'B'
         || __RUB.sys_sql(122112)
         |? _tmp_od=NEZLA.SZP_OD
         || {? _tmp_od>=date(2022,1,1) || __RUB.sys_sql(122122) || __RUB.sys_sql(122121) ?}
         || __RUB.sys_sql(122111)
         ?};
      _r_ref:=0;

      R.cntx_psh();
      R.index('RUBKOD');
      {? #_code
      || R.prefix(#_code);
         {? R.first()
         || {? R.RK<>'N'
            || _err:=1;
               RAPLS.msg(OSOBA.PESEL,OSOBA.NAZWISKO,OSOBA.PIERWSZE,
                  'Próba wczytania składnika płacowego, który nie jest nieobecnością: %1'@[_code])
            || _r_ref:=R.ref();
               _rub:=R.RN;
               _nrub:=R.RT
            ?}
         || _err:=1;
            RAPLS.msg(OSOBA.PESEL,OSOBA.NAZWISKO,OSOBA.PIERWSZE,'Nieznany kod nieobecności: %1'@[_code])
         ?}
      || _err:=1;
         RAPLS.msg(OSOBA.PESEL,OSOBA.NAZWISKO,OSOBA.PIERWSZE,'Nieprawidłowy kod nieobecności: %1'@[_code])
      ?};
      R.cntx_pop();

      {? ~_err & ~exec('czy_zasilek','os_nieob',_rub,NEZLA.OD)
      || _err:=1;
         RAPLS.msg(OSOBA.PESEL,OSOBA.NAZWISKO,OSOBA.PIERWSZE,
            'Nieobecność: (%1) %2 nie jest zasiłkiem.'@[_code,_nrub],
            'Pozycja importu nie będzie wprowadzana do kartoteki nieobecności zleceniobiorców.'@)
      ?};
      {? ~_err
      || OS_N.clear();
         OS_N.blank(1);
         OS_N.FIRMA:=exec('ref_firma','ustawienia');
         OS_N.R:=_r_ref;
         _rub:=OS_N.R().RN;
         _kod:={? __RUB.sys_attr(_rub,14331) || 'choroba - wynagrodzenie'; '331'
               |? __RUB.sys_attr(_rub,14313) || 'choroba - zasiłek'; '313'
               |? __RUB.sys_attr(_rub,14321) || 'świadczenie rehabilitacyjne'; '321'
               |? __RUB.sys_attr(_rub,14322) || 'świadczenie rehabilitacyjne'; '322'
               |? __RUB.sys_attr(_rub,14311) || 'urlop macierzyński'; '311'
               |? __RUB.sys_attr(_rub,14319) || 'urlop macierzyński w trakcie rodzicielskiego'; '319'
               |? __RUB.sys_attr(_rub,14325) || 'urlop macierzyński w trakcie dod. macierz.'; '325'
               |? __RUB.sys_attr(_rub,14327) || 'urlop macierzyński trakcie ojcowskiego'; '327'
               |? __RUB.sys_attr(_rub,14312) || 'opieka'; '312'
               |? __RUB.sys_attr(_rub,14314) || 'wypadek - zasiłek'; '314'
               |? __RUB.sys_attr(_rub,14152) || 'nieobecność nieuspr.'; '152'
               |? __RUB.sys_attr(_rub,14111) || 'urlop bezpłatny - wn. pracownika'; '111'
::             Usunięto podpowiadanie kodu 350 (PR/WRT/XP/21.37/2112/0049 - propozycja SPIS)
               |? __RUB.sys_attr(_rub,14151) || 'uspr., bez wynagr.'; '151'
               |? __RUB.sys_attr(_rub,14333) || 'wypadek - wynagrodzenie'; '333'
               || ''
               ?};

         OS_N.OSOBA:=OSOBA.ref();
         OS_N.KDSW:={? +_kod || exec('kod_zus','nieobecnosc','S',_kod) || null()?};
         OS_N.PROC:=exec('procent','nieobecnosc',_rub);
         OS_N.KDCH:={? +NEZLA.KODY || exec('kod_zus','nieobecnosc','C',NEZLA.KODY) || null()?};
         OS_N.ROZ:='N';
         OS_N.OD:=_tmp_od;
         OS_N.DO:=_tmp_do;
         OS_N.DD:=NEZLA.D_WYST;
         OS_N.NK:=_tmp_do-_tmp_od+1;
         OS_N.ST:=NEZLA.NUM_STAT;
         OS_N.NR:=__KAL.w_days(_tmp_do,_tmp_od);
         OS_N.NG:=__KAL.w_hours(_tmp_od,_tmp_do);
         OS_N.NEZLA:=NEZLA.ref();

         _status:=exec('check','overlap',null(),OS_N,,,1,,,'OND',exec('ref_firma','ustawienia'),OSOBA.ref());
         {? var_pres('_status')=type_of('') & +_status
         || _err:=1;
            _add_err(OSOBA.PESEL,OSOBA.NAZWISKO,OSOBA.PIERWSZE,'Konflikt dat.'@)
         || _status:='';
            _res:=OS_N.add(1);
            {? ~_res
            || _status:=' wpis o nieobecności już istnieje'
            ?};
            NEZLA.DESCR:=
               {? _status=''
               || 'nieobecość dla zleceniobiorcy wprowadzona poprawnie'
               || _err:=1;
                  'błąd:'+_status
               ?}
         ?}
      ?};
      {? ~_err & NEZLA.SZP_OD<>#0 & _tmp_do<>#0
      || {? _tmp_do=NEZLA.DO
         || _tmp_do:=#0
         |? _tmp_od=NEZLA.SZP_OD
         || _tmp_od:=NEZLA.SZP_DO+1;
            _tmp_do:=NEZLA.DO
         |? _tmp_od=NEZLA.OD
         || _tmp_od:=NEZLA.SZP_OD;
            _tmp_do:=NEZLA.SZP_DO
         ?}
      ?};
      {? _stop || 0 || 1 ?}
   || 0
   ?}
!};
~_err


\nezla_wer_afh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Wyświetlenie logów związanych z importem dokumentów e-ZLA.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
NEZLALOG.cntx_psh();
NEZLALOG.index('NEZLALOG');
NEZLALOG.prefix(exec('ref_firma','ustawienia'));
NEZLALOG.win_sel('WER');
NEZLALOG.select();
NEZLALOG.cntx_pop();
~~


\nezla_wer_bfz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Zapisuje (na dysku) załączony do e-ZLA dokument XML (z podpisem lekarza)
::   WE:
::   WY:
::  OLD: \ezla_save/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
{? NEZLA.EZLA_XML<>null
|| _txt:=exec('bl_save','#blob',NEZLA,'EZLA_XML');
   {? +_txt
   || FUN.info('Zapisano dokument e-ZLA XML w:\n%1'@[_txt])
   || FUN.info('Błąd zapisywania pliku lub rezygnacja.'@)
   ?}

|| FUN.info('Brak dokumentu e-ZLA XML.'@)
?};
''

:Sign Version 2.0 jowisz:1045 2022/06/30 14:22:52 559bc3de02f4f036ee83b25718a7a3e98f8d457c4e89ec6570a5d1f35f158fc5a9ca62e3918059d4191fa1ad5c5b34b8ab8f468f3175f3c77fa24b5ad8abd2b2f63f18ea6d8cb3349988f754d000ab1b877fcf98e784f542aaeacb496b0e5ce0220cf0a939551fbc55d8648a8336dc0b68a85e90e17b6875acd9437101167bac
