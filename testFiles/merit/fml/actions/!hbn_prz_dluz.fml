:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !hbn_prz_dluz.fml
:: Utworzony: 06.06.2016
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Obsługa czynności HBN_PRZ_DLUZ - Utw. przelewów do umów zleceń
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Utw. przelewów do umów zleceń - główna formuła czynności.
::----------------------------------------------------------------------------------------------------------------------
::# kind=WE,  symbol=RH, type=_RH, name=Wskazanie rachunku, required=N, keyref=N
::
::# kind=WEW, symbol=DATA_OD, type=DATE, name=Rachunki od dnia, required=N, keyref=N
::# kind=WEW, symbol=DATA_DO, type=DATE, name=Rachunki do dnia, required=N, keyref=N
::
::# kind=WY, symbol=PB, type=_PB, name=Wskazanie polecenia przelewu, required=N, keyref=N
::
::# properties=LOOP
::# kind=WE,  symbol=GRP_KEY, type=STRING, name=Klucz grupujący, required=N, keyref=N
::# kind=WEW, symbol=GRP_KEY, type=STRING, name=Klucz grupujący, required=N, keyref=N
::# kind=WY,  symbol=GRP_KEY, type=STRING, name=Klucz grupujący, required=N
::
::# kind=WE,  symbol=SKID_RBK, type=_SKID_RBK, name=Wskazanie rachunku, required=N, keyref=N
::# kind=WY,  symbol=SKID_RBK, type=_SKID_RBK, name=Wskazanie rachunku, required=N
::
::# kind=WE,  symbol=P_ZLEC, type=DATE, name=Data zlecenia, required=N, keyref=N
::# kind=WEW, symbol=P_ZLEC, type=DATE, name=Data zlecenia, required=N, keyref=N
::# kind=WY,  symbol=P_ZLEC, type=DATE, name=Data zlecenia, required=N
::
::# kind=WE,  symbol=P_DATA, type=DATE, name=Data przelewu, required=N, keyref=N
::# kind=WEW, symbol=P_DATA, type=DATE, name=Data przelewu, required=N, keyref=N
::# kind=WY,  symbol=P_DATA, type=DATE, name=Data przelewu, required=N
::
::# kind=WE,  symbol=GIODO, type=STRING, name=Przekazanie danych osobowych, required=N, keyref=N
::# kind=WEW, symbol=GIODO, type=STRING, name=Przekazanie danych osobowych, required=N, keyref=N
::# kind=WY,  symbol=GIODO, type=STRING, name=Przekazanie danych osobowych, required=N
::
::# kind=WEW, symbol=AUTO, type=NUMBER, name=Działanie automatyczne, required=N, keyref=N
::#
::# permissions=F_ZATR,UD_SKL,HRB,HRP,FJKS

_par:=params_get();
params_set(_par);

_in:=_par.in;
_ib:=_par.int;
_rv:=_par.out;
_mp:=_par.mp;

_id:=
   {? var_pres('RH',_in)=type_of(null) & _in.RH<>null
   || exec('ref2uid','#table',_in.RH)
   || '_HBN_PRZ_DLUZ'
   ?};
_result:='';

{? _id=''
|| _result:=exec('error','!hbn_prz_dluz')

|| _mp.keyRef(_id,0,0);
   {? ~exec('init','!hbn_prz_dluz')
   || {? _mp.isMicro()
      || _mp.cancel()
      || _mp.keep()
      ?};
      return()
   ?};

   {? _mp.isMicro()
   ||
:     uruchomienie z obszaru - mikroczynność
      exec('loop','!hbn_prz_dluz');
      _in.GRP_KEY:=_ib.GRP_KEY;
      _ts:=$PB.tm_stamp();
      {!
      |? _result='' & exec('loop','!hbn_prz_dluz')
      |! _value:=exec('send','!hbn_prz_dluz',_ts);
         {? type_of(_value)=type_of('')
         || _result:=_value
         ?}
      !};
      _mp.cancel();
      exec('list','!hbn_prz_dluz',_ts,1)
   ||
:     działanie w procesie - pętla zewnętrzna
      {? exec('loop','!hbn_prz_dluz')
      || _ts:=$PB.tm_stamp();
         _value:=exec('send','!hbn_prz_dluz',_ts);
         {? type_of(_value)=type_of(0)
         || {? _ib.AUTO
            || {? _value<>0
               || exec('list','!hbn_prz_dluz',_ts,0)
               ?};
               exec('save','!hbn_prz_dluz');
               _mp.done()
            ?}
         |? type_of(_value)=type_of('')
         || _result:=_value
         ?}
      || _mp.done()
      ?}
   ?}
?};

{? _result<>''
:  obsługa błędów
|| _mp.error(_result);
   FUN.emsg(_result)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Utw. przelewów do umów zleceń - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().mp.load(exec('kind_in','#b_port'));

{? var_pres('RH',_in)<>type_of(null) | _in.RH=null
|| 'Przelewy od umów cywilnoprawnych'@@
|| SEEK.RH:=_in.RH;
   SEEK.RH();
   'Przelewy od umowy %1 z dnia %2'@@[|RH.ZLE().NU,ZC.DU$4]
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Zwraca treść komunikatu błędu.
::   WE:
::   WY: treść komunikatu
::----------------------------------------------------------------------------------------------------------------------
'Utworzenie przelewów od umów zleceń niemożliwe.'@


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przywróć zapamiętane wartości parametrów raportu.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
params_set(_par);
_mp:=_par.mp;
_in:=_par.in;
_ib:=_par.int;
_rv:=_par.out;

exec('setup_buttons','#window',ZMIENNE,'PRZ_RHD',_mp.isMicro(),'DONE','OK','ANULUJ');
exec('setup_buttons','#window',ZMIENNE,'PRZ_RHW',_mp.isMicro(),'DONE','OK','ANULUJ');

_rv.LOOP:='N';

_ib.AUTO:=(
   (var_pres('RH',_in)<>type_of(null) | _in.RH=null) &
   var_pres('GRP_KEY',_in)=type_of('') &
   var_pres('SKID_RBK',_in)=type_of(null) &
   var_pres('P_ZLEC',_in)=type_of(date) &
   var_pres('P_DATA',_in)=type_of(date) &
   var_pres('GIODO',_in)=type_of('')
);

{? var_pres('GRP_KEY',_ib)<>type_of('') | _ib.GRP_KEY=''
|| _ib.GRP_KEY:=
      {? var_pres('GRP_KEY',_in)<>type_of('') | _in.GRP_KEY=''
      || exec('uid','#blank')
      || _in.GRP_KEY
      ?};
   _rv.GRP_KEY:=_ib.GRP_KEY
?};

:: ustal rachunek dla przelewów
{? var_pres('SKID_RBK',_in)=type_of(null) & _in.SKID_RBK<>null
|| _rv.SKID_RBK:=_in.SKID_RBK
|? exec('rachunki_banki','rachunki',exec('desc','!hbn_prz_dluz'))
|| _rv.SKID_RBK:=SKID_RBK.ref()
|| return(0)
?};

_zero:=date(0,0,0);
_data:=
   {? var_pres('RH',_in)=type_of(null) & _in.RH<>null
   || SEEK.RH:=_in.RH;
      SEEK.RH().DWY
   |? var_pres('DATA_DO',_in)=type_of(null) & _in.DATA_DO<>_zero
   || _data:=_in.DATA_DO
   || date
   ?};
_rv.P_ZLEC:=_zero;
_rv.P_DATA:=_zero;

{? var_pres('DATA_OD',_ib)<>type_of(_zero) | _ib.DATA_OD=_zero
|| _ib.DATA_OD:=_data
?};
ZMIENNE.OD:=_ib.DATA_OD;

{? var_pres('DATA_DO',_ib)<>type_of(_zero) | _ib.DATA_DO=_zero
|| _ib.DATA_DO:=_data
?};
ZMIENNE.DO:=_ib.DATA_DO;

{? var_pres('P_ZLEC',_ib)=type_of(_zero) & _ib.P_ZLEC<>_zero
|| _rv.P_ZLEC:=_ib.P_ZLEC
|? var_pres('P_ZLEC',_in)=type_of(_zero) & _in.P_ZLEC<>_zero
|| _ib.P_ZLEC:=_in.P_ZLEC;
   _rv.P_ZLEC:=_in.P_ZLEC
|| _ib.P_ZLEC:=_data;
   _rv.P_ZLEC:=_data
?};
ZMIENNE.ZLEC:=_ib.P_ZLEC;

{? var_pres('P_DATA',_ib)=type_of(_zero) & _ib.P_DATA<>_zero
|| _rv.P_DATA:=_ib.P_DATA
|? var_pres('P_DATA',_in)=type_of(_zero) & _in.P_DATA<>_zero
|| _ib.P_DATA:=_in.P_DATA;
   _rv.P_DATA:=_in.P_DATA
|| _ib.P_DATA:=_data;
   _rv.P_DATA:=_data
?};
ZMIENNE.PRZE:=_ib.P_DATA;

{? var_pres('GIODO',_ib)=type_of('') & _ib.GIODO<>''
|| _rv.GIODO:=_ib.GIODO
|? var_pres('GIODO',_in)=type_of('') & _in.GIODO<>''
|| _ib.GIODO:=_in.GIODO;
   _rv.GIODO:=_in.GIODO
|| _ib.GIODO:='N';
   _rv.GIODO:='N'
?};
ZMIENNE.GIODO:=_ib.GIODO;

_chk:="1";
_edit:=0;

{? var_pres('RH',_in)=type_of(null) & _in.RH<>null
|| ZMIENNE.win_edit('PRZ_RHW');
   _chk:="
      {? (_chk:=__CHK.record(ZMIENNE,,'ZLEC','PRZE'))=''
      || {? ZMIENNE.PRZE<ZMIENNE.ZLEC
         || FUN.emsg('\"Data przelewu\" nie może być wcześniejsza od \"daty zlecenia\".'@);
            'PRZE'
         || 1
         ?}
      || _chk
      ?}
   ";
   _edit:=1

|? ~_ib.AUTO
|| ZMIENNE.win_edit('PRZ_RHD');
   _chk:="
      {? (_chk:=__CHK.record(ZMIENNE,,'OD','DO','ZLEC','PRZE'))=''
      || {? ZMIENNE.DO<ZMIENNE.OD
         || FUN.emsg('\"Data do\" nie może być wcześniejsza od \"daty od\".'@);
            'OD'
         |? ZMIENNE.ZLEC<ZMIENNE.DO
         || FUN.emsg('\"Data zlecenia\" nie może być wcześniejsza od \"daty do\".'@);
            'ZLEC'
         |? ZMIENNE.PRZE<ZMIENNE.DO
         || FUN.emsg('\"Data przelewu\" nie może być wcześniejsza od \"daty do\".'@);
            'PRZE'
         |? ZMIENNE.PRZE<ZMIENNE.ZLEC
         || FUN.emsg('\"Data przelewu\" nie może być wcześniejsza od \"daty zlecenia\".'@);
            'PRZE'
         || 1
         ?}
      || _chk
      ?}
   ";
   _edit:=1
?};

{? _edit
|| {? ZMIENNE.edit(_chk)
   || exec('save','!hbn_prz_dluz')
   || return(0)
   ?}
|| _par.mp.save(_ib,_rv)
?};

1


\loop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Ustala parametry pętli.
::   WE:
::   WY: 1 - wykonać dla bieżącego obrotu
::       0 - pomiń dla bieżącego obrotu
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
params_set(_par);

_in:=_par.in;
_ib:=_par.int;
_rv:=_par.out;
_mp:=_par.mp;

_key:=_ib.GRP_KEY;

{? var_pres('GRP_KEY',_in)<>type_of('') | _in.GRP_KEY=''
|| RHP.clear();
   {? var_pres('RH',_in)=type_of(null) & _in.RH<>null
   || RHP.f_set(,,'RHP.RH=:_a',_in.RH)
   || {? var_pres('__KORAUTO')>0 & __KORAUTO='T'
      || _RH:=sql(
            'select RH.REFERENCE as REF from RH join O using (RH.O,O.REFERENCE) '
            'where to_date(:_a)<=RH.DWY and RH.DWY<=to_date(:_b) and RH.KOR=\':_c\' and RH.Z=\':_d\' and O.FIRMA=:_e',
            _ib.DATA_OD,
            _ib.DATA_DO,
            'T',
            'T',
            exec('ref_firma','ustawienia')
         )
      || _RH:=sql(
            'select RH.REFERENCE as REF from RH join O using (RH.O,O.REFERENCE) '
            'where to_date(:_a)<=RH.DWY and RH.DWY<=to_date(:_b) and O.FIRMA=:_c',
            _ib.DATA_OD,
            _ib.DATA_DO,
            exec('ref_firma','ustawienia')
         )
      ?};

      RHP.f_set(,,'RHP.RH in (select :_a.REF from :_a)',_RH)
   ?};
   _loop:=RHP.f_first();
   {!
   |? _loop
   |! RHP.GRP_KEY:=_key;
      RHP.put();
      _loop:=RHP.f_next()
   !};
   RHP.f_clear()
?};

RHP.cntx_psh();
RHP.index('GRP_KEY');
RHP.prefix(_key,);
{? ~RHP.first()
|| RHP.cntx_pop();
   _mp.save(,_rv);
   return(0)
|? RHP.size()>1
|| _rv.LOOP:='T';
   _mp.save(,_rv)
?};
RHP.cntx_pop();

1


\save
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Zapamiętuje informacje podane przez użytkownika na potrzeby ponownego uruchomienia czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_ib:=_par.int;
_rv:=_par.out;

_ib.DATA_DO:=ZMIENNE.DO;
_ib.DATA_OD:=ZMIENNE.OD;

_ib.P_ZLEC:=ZMIENNE.ZLEC;
_ib.P_DATA:=ZMIENNE.PRZE;
_ib.GIODO:=ZMIENNE.GIODO;
_rv.P_ZLEC:=ZMIENNE.ZLEC;
_rv.P_DATA:=ZMIENNE.PRZE;
_rv.GIODO:=ZMIENNE.GIODO;

_par.mp.save(_ib,_rv);
~~


\done
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Obsługa akcji Zakończ - przejdź do następnego etapu procesu.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
params_set(_par);

_par.int.AUTO:=1;

'key:F2'


\keep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Obsługa akcji Zapisz - podtrzymaj czynność na liście zadań.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
params_set(_par);

_par.int.AUTO:=0;
exec('save','!hbn_prz_dluz');

'key:F2'


\send
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przelew z listy płac.
::   WE: _a [_RH] - wskazanie rachunku do umowy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,KST,KST_PAR);
exec('dekl','lista_plac');

_ret:=1;
_par:=params_get();
params_set(_par);
_in:=_par.in;
_ib:=_par.int;
_rv:=_par.out;
_mp:=_par.mp;

_key:=_ib.GRP_KEY;
RHP.cntx_psh();
RHP.index('GRP_KEY');
RHP.prefix(_key,);
{? RHP.first()
|| PB.cntx_psh();
   PB.use('pbxxxx');
   PB.prefix();
   _kid:=gsub(RHP.IDADD,' ','');
   _pb:=exec('get_pb_by_id','hbn',_kid);
   {? _pb.ACTION='none'
:     przelew zablokowany
   || exec('cant_gen','hbn');
      _rv.PB:=null;
      RHP.prefix();
      RHP.GRP_KEY:='';
      RHP.put();
      _ret:=0

   || {? _pb.ACTION='put'
      || PB.seek(_pb.REF)
      || PB.blank()
      ?};
      RHP.RH().ZLE().P().OSOBA();
      exec('ustaw_pb','rachunki','Z');
      PB.NR:=0;                     'numer w paczce';
      PB.NBD:=SKID_RBK.BANK;        'bank dłużnika';
      PB.RD:=SKID_RBK.N;            'numer rachunku dłużnika';
                                    'nazwa wierzyciela';
      PB.W:=OSOBA.NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.DRUGIE;

      PB.NBW:=RHP.B;                'bank wierzyciela';
      {? PB.NBW
      || PB.KRAJ_BAN:=PB.NBW().KODISO;
         PB.SWIFT:=PB.NBW().SWIFT
      ?};
      'numer rachunku wierzyciela';
      PB.RW:=gsub(RHP.N,' ','');

      {? {? ~exec('szukaj','osoba','C')
         || exec('szukaj','osoba','S')
         || 1
         ?}
      || PB.KP:=OS_ADRES.KOD;
         PB.M:=OS_ADRES.MIASTO;
         PB.UL:=exec('ulica','osoba')
      ?};

      PB.DZ:=ZMIENNE.ZLEC;           'data zlecenia';
      PB.DP:=ZMIENNE.PRZE;           'data przelewu';
      _tyt:=Plugin.run('PRZEL_TYT');
      PB.TYT:={? +_tyt || _tyt || 'Umowa nr %1 z dnia %2'[|RH.ZLE().NU,ZC.DU$4] ?};
      PB.KW:=exec('przelkw','zlec_rh');
      PB.KD:=_a;
      PB.PR:='N';                   'Przekazany?';
      PB.KID:=_kid;
      PB.WAL:=KST_PAR.NAROD;
      PB.RODZ:='K';
      PB.OSOBA:=P.OSOBA;
      _rv.PB:=null;
      {? _pb.ACTION='add'
      || {? PB.KW<>0 & PB.add()
         || _rv.PB:=PB.ref()
         ?}
      || {? PB.KW<>0
         || PB.put();
            _rv.PB:=PB.ref()
         || PB.del()
         ?}
      ?};
      RHP.prefix();
      RHP.GRP_KEY:='';
      RHP.put();
      {? ZMIENNE.GIODO='T' & _rv.PB<>null
      || exec('przelew','giodo',ZMIENNE.PRZE)
      ?}
   ?};
   obj_del(_pb);
   PB.cntx_pop()
?};
RHP.cntx_pop();

_ret


\list
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Przelew do umów zleceń.
::   WE: _a [STRING] - kod HB
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_wnd:=PB.mk_sel('Przelewy z rachunków do umów cywilnoprawnych'@,'P',0,'hbn_prz_dluz',,,,,'U');
PB.win_fld(_wnd,,'W',,,25);
PB.win_fld(_wnd,,'NBW','NB',,40);
PB.win_fld(_wnd,,'RW',,,30);
PB.win_fld(_wnd,,'KW',,,15,2);

PB.cntx_psh();
PB.use('pbxxxx');
PB.f_clear();
PB.index('PB_S');
PB.prefix(_a);
{? PB.first()
|| PB.win_edit('PB_EDI1');
   PB.win_sel(_wnd);
   {? var_pres('_b')=type_of(0) & _b
   || PB.select()
   ?};
   PB.clear();
   PB.f_set(,,'PB.KD=\':_a\'',_a);
   _loop:=PB.f_first();
   {!
   |? _loop
   |! PB.KD:='PPL: Umowy';
      PB.put();
      _loop:=PB.f_next()
   !};
   PB.f_clear()

|| FUN.info('Nie utworzono żadnego polecenia przelewu wynagrodzenia.'@)
?};

PB.cntx_pop();
PB.win_del(_wnd);
~~

:Sign Version 2.0 jowisz:1045 2022/06/30 14:22:49 8036a16eb4862bf5426d367e6eda5b01992819595004883141ef3babba0b60dae3a4e3a152a11b99cf41e76cd0e330135b3da4b9476c062b73faa45c311265f39d511498caae1bbeee58708b27eca5487b4158523d3682023b1613cb046af479ffcd11617a76c82c06e35f12f5d469e89b3c08a47bebb87d98f5c4a652e69397
