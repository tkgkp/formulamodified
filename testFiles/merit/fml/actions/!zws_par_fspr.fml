:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_fspr.fml
:: Utworzony: 28.09.2015
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności ZWS_PAR_FSPR - Definiowanie sprawozdań
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Definiowanie sprawozdań - główna formuła czynności ZWS_PAR_FSPR
::----------------------------------------------------------------------------------------------------------------------
::# properties=GRP_FIRM
{? exec('hasAction','users','ZWS_PAR_FSPR')
|| exec('init','fks');
   {? ROK_F.FIRMA().TYP='C'
   || _naz_trig:='konsolidacja';
       ALG_PAR.trig_a('add',"{? _a || exec('t_alg_par','konsolidacja',1) || ~~ ?}",_naz_trig);
       ALG_PAR.trig_a('put',"{? _a || exec('t_alg_par','konsolidacja',2) || ~~ ?}",_naz_trig);
       ALG_PAR.trig_b('del',"exec('t_alg_par','konsolidacja',3)",_naz_trig);
       WERSJE_W.trig_a('add',"{? _a || exec('t_wersje_w','konsolidacja',1) || ~~ ?}",_naz_trig);
       WERSJE_W.trig_a('put',"{? _a || exec('t_wersje_w','konsolidacja',2) || ~~ ?}",_naz_trig)
   ?};
   exec('load_war','sprfin');
   REF.WYKON:=exec('wykon_firmy','konsolidacja',REF.FIRMA);
   _tab:=GR_SIK;
   _grp:=_tab.grp_make('',"",'#fkskspwork2');
:: Definicje
   exec('add_tab_def','sprfin','Definicje'@,_tab,_grp);
   _tab.win_sel(_grp);
   AreaTitle.setTabWin(_tab,~~);
   {? AreaTitle.area<>'ZWS_PAR' || AreaTitle.setTitle() ?};
   exec('set_fml','#field',SIK,'AKC',"GR_SIK.cntx_psh();SIK.AKC:=USRGRSIK.GR_SIK().AKC; GR_SIK.cntx_pop();~~");
   _tab.select()
|| FUN.info('Brak uprawnień do czynności definiowania sprawozdań.'@)
?}


\add_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodaje okno do okna grupowego
::   WE: _a - nazwa zakładki
::       _b - tabela
::       _c - okno grupowe
::----------------------------------------------------------------------------------------------------------------------
_b.grp_sel(_c,GR_SIK,'WER',_a,"
   kolAkcG:='';
   _filtr:=GR_SIK.f_active() & GR_SIK.sel_size()=0;
   GR_KOL.index('LP');
   {? _filtr & GR_SIK.f_get() | ~_filtr & GR_SIK.get()
   || WYRAZ.GRUPA:=GR_SIK.ref;
      GR_KOL.prefix(WYRAZ.GRUPA);
      WYRAZ.LKOLUMN:=GR_KOL.size();
      {? GR_SIK.AKC='T'
      || kolAkcG:='DPU:D'
      ?};
      GR_KOL.actions_grayed('WERG',kolAkcG)
   || GR_KOL.prefix(null)
   ?};
   grp_disp(GR_KOL,'WERG')
",,,,"
   {? GR_SIK.sel_size()
   || GR_SIK.sel_adel()
   ?};
   AreaTitle.setArea('FKS_KSP');
   AreaTitle.setTitle();
   exec('f_set_gr_sik','sprfin')
",,,,'maximized_with_title');
{? REF.S_FIRMA().TYP='C'
|| task_attach('KON_SPR_DDEF')
|| task_attach('ZWS_PAR_FSPR')
?};
_b.tab_splt(_c,,'vertical','left');
_b.grp_sel(_c,GR_KOL,'WERG',,"",0,0,,"","",0,,'maximized_with_title');
GR_SIK.win_fml('WER',SKID,'LANG_WER',,'ICON_BEFORE',"exec('icon','lang')");
GR_KOL.win_fml('WERG',SKID,'LANG_WER',,'ICON_BEFORE',"exec('icon','lang')");
formikon:="exec('ikona_grupa','sprfin')";
GR_SIK.win_fml('WER',,'SKROT',,'ICON_BEFORE',formikon);
GR_SIK.win_fml('SLO2',,'SKROT',,'ICON_BEFORE',formikon);
SIK.blank();
GR_SIK.win_edit('RED2');
GR_SIK.actions('WER','L');
WYRAZ.AKCEPT:='N';
SIK.blank()


\ba_lang
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Przed akcja dolacz tabeli IWER
::  OLD: \ba_lang/skid_lng.fml
::----------------------------------------------------------------------------------------------------------------------
exec('bv_lang','lang',null);
exec('enable','lang',GR_SIK);
{? cur_tab(1,1)=GR_SIK
|| VAR_DEL.delete('__F_ref');
   REF.FIRMA:=REF.S_FIRMA
?};
1


\system
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Obszar roboczy
::----------------------------------------------------------------------------------------------------------------------
'FKS'


\bl_gr_sik_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Wartosc poczatkowa pola GR_SIK.AKC
::  OLD: \bl_gr_sik_akc/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.AKC


\ae_skrot_gr_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Po redakcji pola GR_SIK.SKROT
::  OLD: \ae_skrot_gr_sik/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_SIK.UID=''
|| GR_SIK.UID:=GR_SIK.SKROT
?};
1


\pr_zaokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [7.41]
:: OPIS: Formula po redakcji pola GR_SIK.ZAOKR, DEFW.ZAOKR i GR_KOL.ZAOKR
::   WY: 1 - zatwierdzona edycja, 0 powrot do redakcji pola
::  OLD: \pr_zaokr/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld=1 | fld=10 | fld=100 | fld=1000 | fld=10000 | fld=100000 | fld=1000000
|| 1
|| FUN.info(
      'Podaj poprawnie wskaźnik zaokrąglenia\ndodatkowej wartości.\n'
      'Dopuszczalne wartości to: 1, 10, 100,\n'
      '1.000, 10.000, 100.000, 1.000.000'@
   );
   0
?}


\pr_dokl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [7.41]
:: OPIS: Formula po redakcji pola GR_SIK.DOKL, DEFW.DOKL i GR_KOL.DOKL
::   WY: 1 - zatwierdzona edycja, 0 powrot do redakcji pola
::  OLD: \pr_dokl/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld=0 | fld=1 | fld=2
|| 1
|| FUN.info(
      'Podaj poprawnie dokładność\ndodatkowej wartości.\nDopuszczalne wartości to: 0, 1, 2.'@
   );0
?}


\aa_gr_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Po dolacz GR_SIK
::  OLD: \aa_gr_sik/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
exec('upd_lang','lang');
{? GR_SIK.f_active() || GR_SIK.f_rfresh() ?}


\pp_grup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.41]
:: OPIS: Formula 'Popraw' dla naglowkow sprawozdan - GR_SIK
:    WY: 1 - rekord mozna poprawiac, 0 - nie mozna
::  OLD: \pp_grup/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_SIK.FIRMA<>REF.FIRMA
|| FUN.info('Sprawozdanie grupy kapitałowej.\nRedagowanie dostępne w aplikacji\ndla grupy kapitałowej.'@);
   return(0)
?};
_blad:=0; _zwrot:=1;
{? GR_SIK.r_lock(1,1)
|| {? GR_SIK.get()
   || {? -GR_SIK.AKC='t'
      || FUN.info('Sprawozdanie zaakceptowane.\nEdycja niemożliwa.'@); _zwrot:=0
      || PARAM.KW1:=GR_SIK.ZAOKR; PARAM.KW2:=GR_SIK.DOKL;
         exec('bv_lang','lang');
         exec('enable','lang',GR_SIK);
         {? GR_SIK.edit("exec('chkgrsik','!zws_par_fspr')")
         || GR_SIK.put();
            exec('upd_lang','lang');
            exec('po_grup','!zws_par_fspr')
         || _zwrot:=0
         ?}
      ?}
   || _blad:=1; _zwrot:=0
   ?};
   GR_SIK.r_unlock()
|| _blad:=1; _zwrot:=0
?};
{? _blad || FUN.info('Sprawozdanie redagowane przez\ninnego użytkownika.'@) ?};
_zwrot


\chkgrsik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: 'Rekord po' dla tabeli GR_SIK
::  OLD: \chkgrsik/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
_zwrot:=__CHK.record2(GR_SIK,'SKROT','Kod','UID','Identyfikator','NAZWA',);
{? _zwrot=''
|| {? -menu_txt='popraw' || _ref_gr:=GR_SIK.ref() ?};
   _skr:=GR_SIK.SKROT; _naz:=GR_SIK.NAZWA; _uid:=GR_SIK.UID;
   GR_SIK.cntx_psh();
   GR_SIK.index('SKROT'); GR_SIK.prefix(REF.FIRMA,_skr);
   {? GR_SIK.first()
   || {! |?
         {? GR_SIK.SKROT=_skr & ((-menu_txt='popraw' & _ref_gr<>GR_SIK.ref()) | -menu_txt<>'popraw')
         || FUN.info('Istnieje sprawozdanie o kodzie: %1.'@[GR_SIK.SKROT]);
            _zwrot:='SKROT'
         ?};
         _zwrot='' & GR_SIK.next()
      !}
   ?};
   {? _zwrot=''
   || GR_SIK.index('UID'); GR_SIK.prefix(_uid,);
      {? GR_SIK.first() & (-menu_txt()<>'popraw' | GR_SIK.ref()<>_ref_gr)
      || FUN.info('Istnieje sprawozdanie o identyfikatorze: %1.'@[GR_SIK.UID]);
         _zwrot:='UID'
      ?}
   ?};
   {? _zwrot=''
   || GR_SIK.index('NAZWA'); GR_SIK.prefix(REF.FIRMA,_naz);
      {? GR_SIK.first()
      || {! |?
            {? GR_SIK.NAZWA=_naz & ((-menu_txt='popraw' & _ref_gr<>GR_SIK.ref()) | -menu_txt<>'popraw')
            || FUN.info('Istnieje sprawozdanie o NAZWIE: %1.'@[GR_SIK.NAZWA]);
               _zwrot:='NAZWA'
            ?};
            _zwrot='' & GR_SIK.next()
         !}
      ?}
   ?};
   GR_SIK.cntx_pop();
   {? _zwrot=''
   || _zwrot:=exec('chk_typ_klik','sprfin',1)
   ?}
?};
GR_SIK.AKC:='N';
{? GR_SIK.f_active()|| GR_SIK.f_rfresh() ?};
_zwrot


\po_grup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula ustawiajaca pola DEFW.ZAOKR i DEFW.DOKL
::       w przypadku edycji naglowkow sprawozdan - GR_SIK
::  OLD: \po_grup/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? PARAM.KW1<>GR_SIK.ZAOKR | PARAM.KW2<>GR_SIK.DOKL
|| {? FUN.ask('Zmieniono współczynniki zaokrągleń sprawozdania.\nDokonać zmian dla wierszy sprawozdania?'@)
   || do();
      DEFW.index('LP'); DEFW.prefix(GR_SIK.ref);
      {? DEFW.first()
      || {!
         |? {? ~((-DEFW.ALGORYTM='p')|(-DEFW.ALGORYTM='i')|(-DEFW.ALGORYTM='w'))
            || DEFW.ZAOKR:=GR_SIK.ZAOKR
            ?};
            {? -DEFW.ALGORYTM<>'p' || DEFW.DOKL:=GR_SIK.DOKL ?};
            DEFW.put(); DEFW.next()
         !}
      ?};
      end()
   ?}
?}


\spr_us
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [7.60]
:: OPIS: Usuwanie calego sprawozdania
::  OLD: \spr_us/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ssize_s')>0 || _gr:=1 || _gr:=0 ?};
{? GR_SIK.FIRMA<>REF.FIRMA
|| {? _gr
   || bledy_s+=1
   || FUN.info('Sprawozdanie grupy kapitałowej.\nUsunięcie dostępne w aplikacji\ndla grupy kapitałowej.'@)
   ?};
   return(0)
?};
{? GR_SIK.AKC='T'
|| {? ~_gr || FUN.info('Sprawozdanie jest zaakceptowane.'@) || bledy_s+=1 ?}
|| DEFW.cntx_psh(); _blad:=0; _grupa:=GR_SIK.ref();
:-------sprawdzanie, czy sprawozdanie nie jest wykorzystywana we wzorcach urzedowych (FIKS)
   GR_URZ.cntx_psh(); GR_URZ.index('NAZWA'); GR_URZ.prefix(REF.FIRMA);
   {? GR_URZ.first()
   || {! |?
         {? GR_URZ.G1=_grupa | GR_URZ.G2=_grupa | GR_URZ.G3=_grupa | GR_URZ.G4=_grupa |
            GR_URZ.G5=_grupa | GR_URZ.G6=_grupa | GR_URZ.G7=_grupa | GR_URZ.G8=_grupa |
            GR_URZ.G9=_grupa | GR_URZ.G10=_grupa
         || _blad:=1;
            {? ~_gr
            || FUN.info('Sprawozdanie wykorzystywane we wzorcach urzędowych.'@)
            || bledy_s+=1
            ?}
         ?}; ~_blad & GR_URZ.next()
      !}
   ?};
   GR_URZ.cntx_pop();
   {? ~_blad
   || _lic_zl:=GR_SIK.count(); _lic_zl1:=0;
      DEFW.cntx_psh(); GR_KOL.cntx_psh();
      DEFW.index('GRUPA'); DEFW.prefix(GR_SIK.ref); _lic_zl1+=DEFW.size();
      GR_KOL.index('LP'); GR_KOL.prefix(GR_SIK.ref); _lic_zl1+=GR_KOL.size();
      DEFW.cntx_pop(); GR_KOL.cntx_pop();
      XBRL_POW.index('GR_SIK'); XBRL_POW.prefix(GR_SIK.ref()); _lic_zl1+=XBRL_POW.size();
      XBRL_SPR.index('GR_SIK'); XBRL_SPR.prefix(GR_SIK.ref()); _lic_zl1+=XBRL_SPR.size();
      USRGRSIK.cntx_psh();
      USRGRSIK.index('GR_SIK'); USRGRSIK.prefix(GR_SIK.ref); _lic_zl1+=USRGRSIK.size();
      USRGRSIK.cntx_pop();
      USERS_KS.index('SPR_BIL');USERS_KS.prefix(GR_SIK.ref); _lic_zl1+=USERS_KS.size();
      USERS_KS.index('SPR_WYN');USERS_KS.prefix(GR_SIK.ref); _lic_zl1+=USERS_KS.size();
      WARIANTY.cntx_psh();
      WARIANTY.index('STALE'); WARIANTY.prefix(REF.FIRMA);
      {? WARIANTY.first()
      || {! |?
            _lic_zl1+=WARIANTY.GR_SIK=GR_SIK.ref();
            WARIANTY.next()
         !}
      ?};
      WARIANTY.cntx_pop();
      GRPZEST.index('SPR'); GRPZEST.prefix(GR_SIK.ref()); _lic_zl1+=GRPZEST.size();
      {? _lic_zl<>_lic_zl1
      || _blad:=1;
         {? ~_gr
         || FUN.info(
               'Sprawozdanie wykorzystywane we wzorcach urzędowych'
               '\nlub w sprawozdaniach dla użytkownika\nlub zestawach sprawozdań.'@
            )
         || bledy_s+=1
         ?}
      ?}
   ?};
:-------sprawdzanie, czy jakies wiersze nie sa wykorzystywane w innych spr.
   {? ~_blad
   || DEFW.index('GRUPA'); DEFW.prefix(_grupa); DEFA.index('SKLADNIK');
      {? DEFW.first
      || {!
         |? DEFA.prefix(DEFW.ref);
            {? DEFA.first
            || {!
               |? DEFW.cntx_psh(); {? DEFA.WYR().GRUPA<>_grupa || _blad:=1 ?}; DEFW.cntx_pop();
                  ~_blad & DEFA.next()
               !}
            ?}; ~_blad & DEFW.next()
         !}
      ?};
      {? _blad
      || {? ~_gr
         || FUN.info(
               'Jeden lub więcej wierszy tego sprawozdania\n'
               'jest wykorzystywanych w algorytmie wiersza innego sprawozdania.'@
            )
         || bledy_s+=1
         ?}
      ?}
   ?};
:-------sprawdzanie, czy wiersze sprawozdania mozna usunac w danym systemie
:-------czy liczba zlaczen do wiersza jest rowna liczbie mozliwych do usuniecia powiazan
   {? ~_blad
   || {? DEFW.first()
      || {!
         |? _lic_zl:=DEFW.count(); _lic_zl1:=0; _lic_kp:=0; _lic_plan:=0;
::WARTOSCI
            WARTOSCI.cntx_psh();
            ROK_F.index('KOD');
            {? REF.FIRMA=REF.GRUPA
            || ROK_F.prefix()
            || ROK_F.prefix(REF.FIRMA)
            ?};
            {? ROK_F.first
            || {!
               |? WARTOSCI.use('wsik_'+ROK_F.KOD);
                  WARTOSCI.index('WYRAZ');
                  {? REF.FIRMA=REF.GRUPA
                  || _ile:=0;
                     WERSJE.index('KOD'); WERSJE.prefix('T');
                     {? WERSJE.first()
                     || {!
                        |? WARTOSCI.prefix(DEFW.ref(),WERSJE.ref());
                           _ile+=WARTOSCI.size();
                           WERSJE.next()
                        !}
                     ?};
                     _lic_zl1+=_ile
                  || WARTOSCI.prefix(DEFW.ref(),REF.WYKON); _ile:=WARTOSCI.size(); _lic_zl1+=_ile
                  ?};
                  WARTOSCI.prefix(DEFW.ref()); _lic_plan+=WARTOSCI.size()-_ile;
                  ROK_F.next()
               !}
            ?};
            WARTOSCI.cntx_pop();
::DEFA
            DEFA.index('LP'); DEFA.prefix(DEFW.ref); _lic_zl1+=DEFA.size();
            DEFA.index('SKLADNIK'); DEFA.prefix(DEFW.ref); _lic_zl1+=DEFA.size();
::WOPIS
            WOPIS.index('OPIS'); WOPIS.prefix(DEFW.ref()); _lic_zl1+=WOPIS.size();
::ALG_PAR
            ALG_PAR.index('ALG_PAR5'); ALG_PAR.prefix(DEFW.ref()); _lic_zl1+=ALG_PAR.size();
::XBRL_DEF
            XBRL_POW.index('DEFW'); XBRL_POW.prefix(DEFW.ref()); _lic_zl1+=XBRL_POW.size();
::DEFK
            DEFK.index('DEFW'); DEFK.prefix(DEFW.ref()); _lic_zl1+=DEFK.size();
            {? _lic_zl<>_lic_zl1
            || _blad:=1;
               {? ~_gr
               || {? _lic_zl=(_lic_zl1+_lic_kp+_lic_plan)
                  || FUN.info(
                        'Wiersze tego sprawozdania są wykorzystywane\nw '+
                        {? _lic_kp || 'pozycjach danych kokpitu' || '' ?}+
                        {? _lic_plan
                        || {? _lic_kp || ' i ' || '' ?}+'planach wg sprawozdań'
                        || ''
                        ?}+'.'
                     )
                  ?}
               || bledy_s+=1
               ?}
            ?};
            ~_blad & DEFW.next()
         !}
      ?}
   ?}; DEFW.cntx_pop();
   {? ~_blad || exec('spr_us1','!zws_par_fspr',_gr) ?}
?}


\spr_us1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [7.60]
:: OPIS: Usuwanie calego sprawozdania
::   WE: _a - 1 oznacza akcje grupowa, 0 lub brak parametru - nie grupowa
::  OLD: \spr_us1/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
{? (_a=0 & FUN.ask('Usunąć bieżące sprawozdanie?'@)) | _a=1
|| {? ~GR_SIK.r_lock(1,1)
   || {? ~GR_SIK.sel_size() || FUN.info('Sprawozdanie obsługuje inny użytkownik.'@) || bledy_s+=1 ?}
   || _ok:=1;
      GR_KOL.cntx_psh();
      GR_KOL.index('LP'); GR_KOL.prefix(GR_SIK.ref());
      {? GR_KOL.first()
      || {!
         |? _ok:=GR_KOL.r_lock(1,1,1);
            _ok & GR_KOL.next()
         !}
      ?};
      {? ~_ok
      || {? GR_KOL.first()
         || {!
            |? GR_KOL.r_unlock();
               GR_KOL.next()
            !}
         ?}
      ?};
      GR_KOL.cntx_pop();
      {? ~_ok
      || {? ~GR_SIK.sel_size() || FUN.info('Kolumny sprawozdania obsługuje inny użytkownik.'@) || bledy_s+=1 ?}
      || do();
         DEFW.index('GRUPA'); DEFW.prefix(GR_SIK.ref);
         {? DEFW.first()
         || {!
            |? WARTOSCI.cntx_psh();
               ROK_F.index('KOD');
               {? REF.FIRMA=REF.GRUPA
               || ROK_F.prefix()
               || ROK_F.prefix(REF.FIRMA)
               ?};
               {? ROK_F.first
               || {! |?
                    WARTOSCI.use('wsik_'+ROK_F.KOD);
                    WARTOSCI.index('WYRAZ'); WARTOSCI.prefix(DEFW.ref);
                    {? WARTOSCI.first  || {! |? WARTOSCI.del() !} ?};
                    ROK_F.next()
                  !}
               ?};
               WARTOSCI.cntx_pop();
               DEFA.index('LP'); DEFA.prefix(DEFW.ref);
               {? DEFA.first() || {! |? DEFA.del() !} ?};
               DEFA.index('SKLADNIK'); DEFA.prefix(DEFW.ref);
               {? DEFA.first() || {! |? DEFA.del() !} ?};
               WOPIS.index('OPIS'); WOPIS.prefix(DEFW.ref);
               {? WOPIS.first() || {! |? WOPIS.del() !} ?};
               {? REF.FIRMA=REF.GRUPA
               || ALG_PAR.index('ALG_PAR4'); ALG_PAR.prefix(DEFW.ref())
               || ALG_PAR.index('ALG_PAR1'); ALG_PAR.prefix(REF.FIRMA,DEFW.ref)
               ?};
               W_ALGPAR.cntx_psh();
               {? ALG_PAR.first()
               || {!
                  |? {? ROK_F.first()
                     || {!
                        |? W_ALGPAR.use('walg_'+ROK_F.KOD);
                           W_ALGPAR.index('W_ALGPAR'); W_ALGPAR.prefix(ALG_PAR.ref);
                           {? W_ALGPAR.first  || {! |? W_ALGPAR.del() !} ?};
                           ROK_F.next()
                        !}
                     ?};
                     ALG_PAR.del()
                  !}
               ?};
               W_ALGPAR.cntx_pop;
               exec('del_lang','lang',DEFW.ref());
               XBRL_POW.index('DEFW'); XBRL_POW.prefix(DEFW.ref());
               {? XBRL_POW.first() || XBRL_POW.del() ?};
               DEFK.index('DEFW'); DEFK.prefix(DEFW.ref());
               {? DEFK.first() || {! |? DEFK.del() !} ?};
               DEFW.del()
            !}
         ?};
         GR_KOL.index('LP'); GR_KOL.prefix(GR_SIK.ref);
         {? GR_KOL.first()
         || {!
            |? exec('del_lang','lang',GR_KOL.ref());
               XBRL_POW.index('GR_KOL'); XBRL_POW.prefix(GR_KOL.ref());
               {? XBRL_POW.first() || {! |? XBRL_POW.del() !} ?};
               DEFK.index('LP'); DEFK.prefix(GR_KOL.ref());
               {? DEFK.first() || {! |? DEFK.del() !} ?};
               {? ~GR_KOL.count || GR_KOL.del() || GR_KOL.next ?}
            !}
         ?};
         USERS_KS.index('SPR_BIL'); USERS_KS.prefix(GR_SIK.ref());
                  {? USERS_KS.first() || {! |? USERS_KS.del() !} ?};
         USERS_KS.index('SPR_WYN'); USERS_KS.prefix(GR_SIK.ref());
                  {? USERS_KS.first() || {! |? USERS_KS.del() !} ?};
         USRGRSIK.cntx_psh();
         USRGRSIK.index('GR_SIK'); USRGRSIK.prefix(GR_SIK.ref());
         {? USRGRSIK.first() || {! |? USRGRSIK.del() !} ?};
         USRGRSIK.cntx_pop();
         WARIANTY.cntx_psh();
         WARIANTY.index('STALE'); WARIANTY.prefix(REF.FIRMA);
         {? WARIANTY.first()
         || {!
            |? {? WARIANTY.GR_SIK=GR_SIK.ref()
               || WARIANTY.GR_SIK:=null;
                  {? WARIANTY.WARIANT=4 || WARIANTY.WARIANT:=1 ?};
                  WARIANTY.put()
               ?};
               WARIANTY.next()
            !};
            {? SSTALE.GR_SIK=GR_SIK.ref() || SSTALE.WARIANT:=1 ?}
         ?};
         WARIANTY.cntx_pop();
         GRPZEST.index('SPR'); GRPZEST.prefix(GR_SIK.ref());
         {? GRPZEST.first() || {! |? GRPZEST.del() !} ?};
         exec('del_lang','lang',GR_SIK.ref());
         XBRL_POW.index('GR_SIK'); XBRL_POW.prefix(GR_SIK.ref());
         {? XBRL_POW.first() || XBRL_POW.del() ?};
         XBRL_SPR.index('GR_SIK'); XBRL_SPR.prefix(GR_SIK.ref());
         {? XBRL_SPR.first() || {! |? XBRL_SPR.del() !} ?};
         GR_SIK.del();
         {? ~end()
         || GR_SIK.r_unlock()
         ?}
      ?}
   ?}
?}


\sel_wier
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Wywolanie select-a dla wierszy sprawozdania wskazanego w WYRAZ.GRUPA
::  OLD: \sel_wier/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.GRUPA:=SIK.CUR_SPR:=GR_SIK.ref();
WYRAZ.WIERSZ:=0;
WYRAZ.TYP:='P';
WYRAZ.KOD:='';
DEFW.index('LP');
DEFW.win_dict('SLO');
DEFW.prefix(WYRAZ.GRUPA);
DEFW.win_edit('REDN2');
UNPAR.P10:='';
UNPAR.P10_BV:='UNPAR.P10:=exec(\'get_lang\',\'lang\',GR_SIK.ref())';
{? GR_SIK.TYP_KLIK='TW'
|| DEFW.fld_fml('KOD','F3',"
      exec('slo_slu','slo_slu','~KODY_WSK','ONE_SEL');
      SLO.hdr_sel(); SLO.hdr_sel('Pozycje słownika: '+SLU.NAZ);
      SLO.find_key(DEFW.KOD);
      {? SLO.select(,1,5)
      || DEFW.NAZWA:=SLO.TR;
         fld(SLO.KOD);
         SLO.KOD
      || ~~
      ?}
   ")
|| DEFW.fld_fml('KOD','F3',"*")
?};
GR_SIK.f_clear();
_akcspr:=WYRAZ.GRUPA().AKC='T';
{?  GR_SIK.FIRMA<>REF.FIRMA
|| {? _akcspr | GR_SIK.r_lock(1,1)
   || SprAkc:=_akcspr;
      _okno:='WER';
      DEFW.win_sel(_okno);
      DEFW.win_fml(_okno,SKID,'LANG_WER',,'ICON_BEFORE',"exec('icon','lang')");
      exec('defw_dnd','!zws_par_fspr');
      DEFW.actions(_okno,'DPUGvNT:DNK',,1);
      DEFW.select();
      GR_SIK.r_unlock()
   || FUN.info('Sprawozdanie obsługuje \ninny użytkownik.'@)
   ?}
|| DEFW.win_sel('WER');
   GR_KOL.cntx_psh();
   GR_KOL.index('LP'); GR_KOL.prefix(WYRAZ.GRUPA); _kol:=GR_KOL.size();
   GR_KOL.cntx_pop();
   _actions:='';
   {? _kol<=1
   || _actions:='G'
   ?};
   {? GR_SIK.TYP_KLIK<>'NN'
   || _actions+='NT:NK'
   ?};
   {? _akcspr | GR_SIK.r_lock(1,1)
   || DEFW.win_fml('WER',SKID,'LANG_WER',,'ICON_BEFORE',"exec('icon','lang')");
      exec('defw_dnd','!zws_par_fspr');
      {? _akcspr || _actions:='DNTPUG:DNK' ?};
      DEFW.actions('WER',_actions);
      DEFW.select(); GR_SIK.r_unlock()
   || FUN.info('Sprawozdanie obsługuje \ninny użytkownik.'@)
   ?};
   DEFW.actions('WER','')
?};
VAR_DEL.delete('SprAkc');
exec('title','lang',DEFW);
exec('f_set_gr_sik','sprfin');
DEFW.prefix()

\defw_dnd_U
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KS [2021]
:: OPIS: Formuła akcji w górę ( zastęuje d&d w intermie)
::  OLD: \defw_dnd/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------

exec('zmien_lpa','#dragdrop','LP','LP',,,'U')

\defw_dnd_D
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KS [2021]
:: OPIS: Formuła akcji w dół ( zastęuje d&d w intermie)
::  OLD: \defw_dnd/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------

exec('zmien_lpa','#dragdrop','LP','LP',,,'D')

\defw_dnd_N
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KS [2021]
:: OPIS: Formuła akcji do numeru ( zastęuje d&d w intermie)
::  OLD: \defw_dnd/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------

exec('zmien_lpa','#dragdrop','LP','LP',,,'N')

\defw_dnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Ustawia d&d na tabeli DEFW - zmiana kolejnosci
::  OLD: \defw_dnd/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? cli_ver()='jterm'
|| {? GR_SIK.AKC='N'
   || DEFW.dnd_sel(DEFW.win_sel('?'),,'records.DEFW',"
         DEFW.cntx_psh();
         _ref:=dnd_info('dest_record');
         {? _ref=null & DEFW.last() || _ref:=DEFW.ref() ?};
         {? DEFW.seek(_ref) || exec('zmien_lp','#dragdrop','LP','LP') ?};
         DEFW.cntx_pop()
      ")
   || DEFW.dnd_sel(DEFW.win_sel('?'),,'records.DEFW',)
   ?}
?}


\sel_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: FIKS, IF: wywolanie select-a dla kolumn sprawozdania wskazanego w WYRAZ.GRUPA
::   WE: _a stan uruchomienia formuły 0 - pierwsze uruchomienie (domyslne) 1 - kolejne uruchomienie
::  OLD: \sel_kol/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<1 || _a:=0 ?};
WYRAZ.GRUPA:=GR_SIK.ref;
UNPAR.P10:='';
UNPAR.P10_BV:='UNPAR.P10:=exec(\'get_lang\',\'skid_lng\',GR_SIK.ref())';
GR_KOL.index('LP'); GR_KOL.prefix(WYRAZ.GRUPA);
GR_KOL.hdr_sel();
GR_KOL.win_sel('WER');
_red:=GR_KOL.win_edit('?'); GR_KOL.win_edit('RED_A2');
GR_KOL.hdr_sel('Kolumny sprawozdania'@);
_akcspr:={? _a & var_pres('SprAkc')=1 || SprAkc || WYRAZ.GRUPA().AKC='T' ?};
{? _akcspr | GR_SIK.FIRMA<>REF.FIRMA
|| GR_KOL.actions('WER','rUdp:rd');
   {? ~_a || SprAkc:=WYRAZ.GRUPA().AKC='T' ?};
   GR_KOL.select();
   GR_KOL.actions('WER','')
|| GR_KOL.actions('WER');
   {? GR_SIK.r_lock(1,1)
   || GR_KOL.select();
      GR_SIK.r_unlock()
   || FUN.info('Sprawozdanie redagowane przez\ninnego użytkownika.'@)
   ?}
?};
{? ~_a || VAR_DEL.delete('SprAkc') ?};
GR_KOL.win_edit(_red);
exec('title','lang',GR_SIK)


\w_grsik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: IF, FIKS: Wywolanie wydrukow definicji dla biezacego sprawozdania definiowalnego
::  OLD: \w_grsik/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
exec('drajwer','!zws_par_fspr',1);
exec('rep_exec','#b_report','','fks_skid_gr*',,1)


\drajwer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Ustawienie nazwy drajwera odpowiedniego dla wydrukow SKIDOWYCH
::   WE: _a=1 szeroka drukarka, w przeciwnym przypadku waska
::  OLD: \drajwer/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,FINFO,'W_PRN','SZ_PRN');
SIK.PRT:={? _a || FINFO.SZ_PRN||  FINFO.W_PRN ?}


\kop_inf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [8.50]
:: OPIS: Kopiowanie danych dotyczacych sprawozdan finansowych
::  OLD: \kop_inf/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
popup(0,
   'Opcje kopiowania:'@,
   '1. Bieżące sprawozdanie'@,,"exec('kopia','!zws_par_fspr')",
   '2. Algorytmy wierszy obliczanych formułą w bieżącym sprawozdaniu'@,,"exec('kop_par','!zws_par_fspr',0)",
   '3. Algorytmy wierszy obliczanych formułą we wszystkich sprawozdaniach'@,,"exec('kop_par','!zws_par_fspr',1)"
)


\kopia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS  [7.20]
:: OPIS: Procedura kopiuje definicje sprawozdania, na ktorej stoi kursor do
::       innego (nowego) sprawozdania.
::  OLD: \kopia/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_okno:=GR_SIK.win_edit('?');
GR_SIK.win_edit('KOPIA');
SIK.NP2:=_nazwa:=GR_SIK.NAZWA;
SIK.NP1:=_skrot:=GR_SIK.SKROT;
_system:=GR_SIK.SYSTEM;
_zaokr:=GR_SIK.ZAOKR;
_dokl:=GR_SIK.DOKL;
WYRAZ.GRUPA:=GR_SIK.ref;
ZMIENNE.RODZAJ:='W';
ZMIENNE.RODZAJ1:='T';
GR_SIK.blank();
GR_SIK.SKROT:='*'+_skrot;
GR_SIK.NAZWA:='*'+_nazwa;
GR_SIK.SYSTEM:=_system;
UNPAR.P1:=1;
UNPAR.P1_BV:=UNPAR.P1_BE:=UNPAR.P1_AE:='';
{? GR_SIK.edit("exec('spr_kop','!zws_par_fspr')")
|| _skrotn:=GR_SIK.SKROT;
   _naz:=GR_SIK.NAZWA;
   GR_SIK.AKC:='N';
   GR_SIK.ZAOKR:=_zaokr;
   GR_SIK.DOKL:=_dokl;
   GR_SIK.CZY_XBRL:='N';
   GR_SIK.XBRL_NAG:=null;
   GR_SIK.UID:=GR_SIK.SKROT;
   GR_SIK.FIRMA:=REF.S_FIRMA;
   {? GR_SIK.add(1)
   || _grupan:=GR_SIK.ref;
      _dalej:=1
   || {? ZMIENNE.RODZAJ<>'N'
      || FUN.info(
            'Wybrano kopiowanie z wierszami i istnieje'
            '\nsprawozdanie o kodzie: %1'
            '\n lub nazwie: %2.'@[GR_SIK.SKROT,GR_SIK.NAZWA]
         );
         _dalej:=0
      || GR_SIK.cntx_psh();
         GR_SIK.index('SKROT'); GR_SIK.prefix();
         {? GR_SIK.find_key(REF.FIRMA,_skrotn)
         || _grupan:=GR_SIK.ref; _dalej:=1
         || _dalej:=0
         ?};
         GR_SIK.cntx_pop()
      ?}
   ?};
   {? _dalej
   || {? GR_SIK.lock(1) & DEFW.lock(1) & DEFA.lock(1) & GR_KOL.lock(1) & ALG_PAR.lock(1)
      || echo('Kopiowanie sprawozdania: %1'@[GR_SIK.SKROT]);
         'kopiowanie kolumn dla sprawozdania';
         exec('kop_kol','!zws_par_fspr',_grupan);
         {? ZMIENNE.RODZAJ='W' | ZMIENNE.RODZAJ='R'
         || exec('kop_defw','!zws_par_fspr',_grupan)
         ?};
         exec('kop_defk','!zws_par_fspr',_grupan)
      ?};
      GR_SIK.seek(_grupan);
      GR_SIK.unlock;
      DEFW.unlock;
      DEFA.unlock;
      GR_KOL.unlock;
      ALG_PAR.unlock
   ?}
?};
{? GR_SIK.f_active()|| GR_SIK.f_rfresh() ?};
GR_SIK.win_edit(_okno);
echo(); 1


\spr_kop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.22]
:: OPIS: Sprawdza parametry przy kopiowaniu sprawozdan
::   WY: _a='' - ok, _a<>'' powrot do redakcji okienka od pola o akronimie _a
::  OLD: \spr_kop/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=__CHK.record2(GR_SIK,
   'SKROT','Kod',
   'NAZWA','Nazwa');
GR_SIK.cntx_psh();
_skrot:=WYRAZ.GRUPA().SKROT;
_nazwa:=WYRAZ.GRUPA().NAZWA;
GR_SIK.cntx_pop();
{? _a=''
|| {? _skrot=GR_SIK.SKROT
   || FUN.info('Kody sprawozdania źródłowego i docelowego\nmuszą być różne.'@);
      _a:='SKROT'
   ?};
   {? _a='' & _nazwa=GR_SIK.NAZWA
   || FUN.info('Nazwy sprawozdania źródłowego i docelowego\nmuszą być różne.'@);
      _a:='NAZWA'
   ?}
?};
{? _a=''
|| {? ZMIENNE.RODZAJ='N' & ZMIENNE.RODZAJ1='T'
   || FUN.info(
         'Podaj poprawnie parametry kopiowania.\n'
         'Wybrano kopiowanie algorytmów bez kopiowania wierszy.'@
      );
      _a:='RODZAJ'
   ?}
?}; _a


\kop_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS  [7.20]
:: OPIS: procedura  kopiuje definicje kolumn sprawozdania
::   WE: WYRAZ.GRUPA - sprawozdanie zrodlowe
::      _a           - sprawozdanie docelowe
::  OLD: \kop_kol/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
GR_KOL.index('LP');
GR_KOL.prefix(WYRAZ.GRUPA);
{? GR_KOL.first()
|| {!
   |? _new:=null;
      GR_KOL.cntx_psh();
      GR_KOL.clear();
      GR_KOL.GRUPA:=_a;
      {? GR_KOL.add(1) || _new:=GR_KOL.ref() ?};
      GR_KOL.cntx_pop();
      {? UNPAR.P1 & _new || exec('cpy_lang','lang',GR_KOL.ref(),_new) ?};
      GR_KOL.next()
   !}
?}


\kop_defw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS [7.20]
:: OPIS: Procedura kopiuje definicje (wiersze+algorytmy) wybranego sprawozdania do innego
::       podanego w okienku podczas dzialania procedury \kopia. Rodzaj kopiowania okresla
::       ZMIENNA.RODZAJ (W - kopiowanie wszystkich wierszy, B - kopiowanie wybranych wierszy)
::   WE: _a - sprawozdanie, na ktore kopiujemy (docelowe)
::       WYRAZ.GRUPA - sprawozdanie, z ktorego kopiujemy (zrodlowe)
::  OLD: \kop_defw/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.GRUPA();
{? ZMIENNE.RODZAJ='W'
|| 'kopiowanie wszystkich wierszy';
   DEFW.index('LP');
   DEFW.prefix(WYRAZ.GRUPA);
   {? DEFW.first()
   || {!
      |? _new:=null;
         DEFW.cntx_psh();
         WYRAZ.WIERSZ:=DEFW.ref;
         DEFW.clear();
         DEFW.GRUPA:=_a;
         DEFW.KOLEJ:=0;
         {? DEFW.add() || _new:=DEFW.ref() ?};
         _defwref:=DEFW.ref();
         DEFW.cntx_pop();
         {? UNPAR.P1 & _new || exec('cpy_lang','lang',DEFW.ref(),_new) ?};
         exec('wopiskop','!zws_par_fspr',_defwref);
         DEFW.next()
      !}
   ?}
|| 'kopiowanie wybranych wierszy';
   DEFW.index('LP');
   DEFW.prefix(WYRAZ.GRUPA);
   DEFW.win_sel('SLOTEN');
   {! |? DEFW.select(,1)
   |!    DEFW.cntx_psh();
         WYRAZ.WIERSZ:=DEFW.ref;
         DEFW.prefix(_a);
         DEFW.GRUPA:=_a; DEFW.KOLEJ:=0;
         _lp:=DEFW.LP; _defwref:=null;
         {? DEFW.add(1)
         || _lp:=DEFW.LP; _defwref:=DEFW.ref();
            DEFW.cntx_psh();
            {? DEFW.last()
            || _lpn:=DEFW.LP; _refo:=DEFW.ref;
              {? DEFW.prev() || _lpp:=DEFW.LP || _lpp:=0 ?}
            || _lpn:=0
            ?};
            DEFW.cntx_pop();
            {? _lp=_lpn &  DEFW.ref<>_refo
            || DEFW.LP:=_lpn+1; DEFW.put()
            |? _lp<>_lpn
            || DEFW.LP:=_lpn+1; DEFW.put()
            |? _lp=_lpn &  DEFW.ref=_refo
            || DEFW.LP:=_lpp+1; DEFW.put()
            ?};
            {? ZMIENNE.RODZAJ1='T'
            || exec('kop_alg','!zws_par_fspr',_a,DEFW.ref)
            ?}
         ?};
         DEFW.cntx_pop();
         {? _defwref<>null
         || {? UNPAR.P1 || exec('cpy_lang','lang',DEFW.ref(),_defwref) ?};
            exec('wopiskop','!zws_par_fspr',_defwref)
         ?};
         DEFW.next()
   !}
?};
{? ZMIENNE.RODZAJ1='T' & ZMIENNE.RODZAJ='W'
|| 'kopiowanie algorytmów dla wariantu wszystkie';
   DEFW.index('LP');
   DEFW.prefix(WYRAZ.GRUPA);
   {? DEFW.first()
   || {! |? WYRAZ.WIERSZ:=DEFW.ref;
            _kodwsk:=DEFW.KOD;
            DEFW.cntx_psh();
            DEFW.index('GRUPA');
            DEFW.prefix(_a);
            {? DEFW.find_key(_kodwsk)
            || exec('kop_alg','!zws_par_fspr',_a,DEFW.ref)
            ?};
            DEFW.cntx_pop();
            DEFW.next()
      !}
   ?}
?};
:: zmiana wiersza nadrzędnego w skopiowanym sprawozdaniu
_sql:=sql(
   'select REFERENCE as REF '+
   'from DEFW '+
   'where GRUPA=:_a and DEFW_NAD!=0',_a
);
{? _sql.first()
|| DEFW.cntx_psh();
   DEFW.prefix();
   {!
   |? {? DEFW.seek(BIT.sqlint(_sql.REF),)
      || _ref:=0;
         _kod:='';
         DEFW.cntx_psh();
         DEFW.prefix();
         {? DEFW.seek(DEFW.DEFW_NAD,)
         || _kod:=DEFW.KOD
         ?};
         DEFW.index('GRUPA'); DEFW.prefix(_a,_kod,);
         {? DEFW.first()
         || _ref:=#DEFW.ref()
         ?};
         DEFW.cntx_pop();
         DEFW.DEFW_NAD:=_ref;
         DEFW.put()
      ?};
      _sql.next()
   !};
   DEFW.cntx_pop()
?}


\kop_defk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [12.10]
:: OPIS: Kopia algorytmow kolumn
::   WE: _a - nowe sprawozdanie
::  OLD: \kop_defk/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.cntx_psh(); DEFW.index('GRUPA'); DEFW.prefix();
GR_KOL.index('LP'); GR_KOL.prefix(WYRAZ.GRUPA);
{? GR_KOL.first()
|| {!
   |? DEFK.index('LP'); DEFK.prefix(GR_KOL.ref());
      {? DEFK.first()
      || {!
         |? GR_KOL.cntx_psh();
            GR_KOL.prefix(_a);
            {? GR_KOL.find_key(DEFK.ARGUMENT().LP) || DEFK.ARGUMENT:=GR_KOL.ref() ?};
            {? GR_KOL.find_key(DEFK.GR_KOL().LP) || DEFK.GR_KOL:=GR_KOL.ref() ?};
            GR_KOL.cntx_pop();
            {? DEFK.DEFW & DEFW.find_key(GR_SIK.ref(),DEFK.DEFW().KOD,)
            || DEFK.DEFW:=DEFW.ref()
            ?};
            DEFK.cntx_psh(); DEFK.prefix();
            DEFK.add();
            DEFK.cntx_pop();
            DEFK.next()
         !}
      ?};
      GR_KOL.next()
   !}
?};
DEFW.cntx_pop()


\wopiskop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.10]
:: OPIS: Kopiowanie opisow dla biezacego wiersza
::   WE: _a - nowy ref tabeli DEFW, do ktorego maja byc kopiowane opisy
::  OLD: \wopiskop/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
WOPIS.index('OPIS'); WOPIS.prefix(DEFW.ref());
{? WOPIS.first()
|| {! |?
      WOPIS.cntx_psh(); WOPIS.clear();
      WOPIS.WSK:=_a; WOPIS.add();
      WOPIS.cntx_pop();
      WOPIS.next()
   !}
?}


\kop_alg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS [7.20]
:: OPIS: Procedura kopiuje definicje algorytmu wybranego wiersza.
::   WE: WYRAZ.GRUPA - sprawozdanie, ktore kopiujemy (zrodlowe)
::       _a - ref sprawozdania, na ktore kopiujemy (docelowe)
::            WYRAZ.WIERSZ- wiersz, ktory kopiujemy (zrodlowy)
::       _b - ref wiersza, do ktorego kopiujemy (docelowy)
::   WY: nowe rekordy w tabelach GR_SIK, DEFW, DEFA, GR_KOL, ALG_PAR
::  OLD: \kop_alg/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? WYRAZ.WIERSZ().ALGORYTM<>'F'
|| DEFA.index('LP'); DEFA.prefix(WYRAZ.WIERSZ);
   {? DEFA.first()
   || {! |?
         _lkolum:=DEFA.KOL().LP;
         GR_KOL.index('LP'); GR_KOL.prefix();
         _kolumna:={? GR_KOL.find_key(_a,_lkolum) || GR_KOL.ref || null ?};
         {? _b<>null & _kolumna<>null
         || DEFA.cntx_psh();
            _grupa:=DEFA.ARGUMENT().GRUPA; _kodwsk:=DEFA.ARGUMENT().KOD;
            _lkolum:=DEFA.ARG_KOL().LP; _argument:=DEFA.ARGUMENT; _arg_kol:=DEFA.ARG_KOL;
            {? _grupa=WYRAZ.GRUPA
            || GR_KOL.index('LP'); GR_KOL.prefix();
               {? GR_KOL.find_key(_a,_lkolum)
               || _arg_kol:=GR_KOL.ref;
                  DEFW.index('GRUPA'); DEFW.prefix();
                  {? DEFW.find_key(_a,_kodwsk) || _argument:=DEFW.ref ?}
               ?}
            ?};
            {? _argument<>null & _arg_kol<>null
            || DEFA.prefix(); DEFA.WYR:=_b; DEFA.KOL:=_kolumna;
               DEFA.ARGUMENT:=_argument; DEFA.ARG_KOL:=_arg_kol; DEFA.add(1)
            ?};
            DEFA.cntx_pop()
         ?};
         DEFA.next()
      !}
   ?}
|| ALG_PAR.index('ALG_PAR1'); ALG_PAR.prefix(REF.S_FIRMA,WYRAZ.WIERSZ);
   {? ALG_PAR.first()
   || {! |?
         _lkolum:=ALG_PAR.GR_KOL().LP; _rok:=ALG_PAR.ROK;
         GR_KOL.index('LP'); GR_KOL.prefix();
         _kolumna:={? GR_KOL.find_key(_a,_lkolum) || GR_KOL.ref || null ?};
         {? _b<>null & _kolumna<>null
         || ALG_PAR.cntx_psh(); ALG_PAR.prefix();
            ALG_PAR.DEFW:=_b; ALG_PAR.GR_KOL:=_kolumna; ALG_PAR.ROK:=_rok;
            ALG_PAR.add();
            ALG_PAR.cntx_pop()
         ?};
         ALG_PAR.next()
      !}
   ?}
?}


\kop_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [8.50]
:: OPIS: Kopiowanie parametrow wierszy podstawowych
::   WE: _a=0 - biezace sprawozdanie, 1 - wszystkie
::  OLD: \kop_par/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P2:=1;
UNPAR.P2_BV:=UNPAR.P2_BE:=UNPAR.P2_AE:='';
SIK.win_edit('LATA'); SIK.ROK1:=SIK.ROK2:=null;
{? SIK.edit("
      _zwrot:=__CHK.record2(SIK,'ROK1','Z roku','ROK2','Na rok');
      {? _zwrot=''
      || {? SIK.ROK1=SIK.ROK2 || FUN.info('Podaj różne lata.'@); _zwrot:='ROK2' ?}
      ?}; _zwrot
   ")
|| GR_SIK.cntx_psh();
   {? _a
   || {? GR_SIK.first()
      || {! |? {? {? SIK.ROK2().PLAN_GR='T' || GR_SIK.FIRMA=REF.FIRMA || 1 ?}
               || exec('kop_par1','!zws_par_fspr')
               ?};
               GR_SIK.next()
         !}
      ?}
   || {? GR_SIK.FIRMA<>REF.FIRMA & SIK.ROK2().PLAN_GR='T'
      || FUN.info('W roku %1 wykorzystywany jest plan kont grupy.\nKopiowanie parametrów do tego roku możliwe z aplikacji\ndla grupy kapitałowej.'@[ROK_F.NAZ])
      || exec('kop_par1','!zws_par_fspr')
      ?}
   ?};
   GR_SIK.cntx_pop()
?}


\kop_par1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [8.50]
:: OPIS: Kopiowanie parametrow wierszy podstawowych (srodek)
::   WE: Kopiowane sa parametry z roku SIK.ROK1 do SIK.ROK2
::  OLD: \kop_par1/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
echo('Kopiowanie parametrów wierszy podstawowych w sprawozdaniu: %1'@[GR_SIK.SKROT]);
DEFW.cntx_psh(); DEFW.index('GRUPA'); DEFW.prefix(GR_SIK.ref());
ALG_PAR.cntx_psh(); ALG_PAR.index('ALG_PAR1');
GR_KOL.cntx_psh(); GR_KOL.index('LP'); GR_KOL.prefix(GR_SIK.ref());
{? UNPAR.P2
|| W_ALGPAR.cntx_psh();
   W_ALGPAR.use('walg_'+SIK.ROK2().KOD); W_ALGPAR.index('W_ALGPAR')
?};
{? GR_KOL.first()
|| {!
   |? {? DEFW.first()
      || {!
         |? {? -DEFW.ALGORYTM='f'
            || ALG_PAR.prefix(REF.FIRMA,DEFW.ref(),GR_KOL.ref(),SIK.ROK1().NAZ,);
               {? ALG_PAR.first()
               || {? UNPAR.P2
                  || ALG_PAR.cntx_psh();
                     ALG_PAR.prefix(REF.FIRMA,DEFW.ref(),GR_KOL.ref(),SIK.ROK2().NAZ,);
                     {? ALG_PAR.first()
                     || {!
                        |? W_ALGPAR.prefix(ALG_PAR.ref());
                           {? W_ALGPAR.first() || {! |? W_ALGPAR.del() !} ?};
                           ALG_PAR.del()
                        !}
                     ?};
                     ALG_PAR.cntx_pop()
                  ?};
                  _lp:=0;
                  {!
                  |? {? UNPAR.P2=0
                     || ALG_PAR.cntx_psh();
                        ALG_PAR.LP:=0; ALG_PAR.ROK:=SIK.ROK2;
                        ALG_PAR.prefix(REF.FIRMA,DEFW.ref(),GR_KOL.ref(),SIK.ROK2().NAZ,);
                        _ok:={? ~ALG_PAR.find_rec()
                             || _lp:={? ALG_PAR.last() || ALG_PAR.LP+1 || 1 ?}; 1
                             || 0
                             ?};
                        ALG_PAR.cntx_pop()
                     ?};
                     {? UNPAR.P2 | _ok
                     || ALG_PAR.cntx_psh(); ALG_PAR.prefix();
                        {? UNPAR.P2 || _lp+=1 ?};
                        ALG_PAR.LP:=_lp; ALG_PAR.ROK:=SIK.ROK2;
                        ALG_PAR.add();
                        ALG_PAR.cntx_pop()
                     ?};
                     ALG_PAR.next()
                  !}
               ?}
            ?};
            DEFW.next()
         !}
      ?};
      GR_KOL.next()
   !}
?};
GR_KOL.cntx_pop(); ALG_PAR.cntx_pop(); DEFW.cntx_pop();
{? UNPAR.P2 || W_ALGPAR.cntx_pop() ?};
echo()


\gr_akc1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Akceptacja definicji biezacego sprawozdania
::  OLD: \gr_akc1/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
_tyt:='Akceptacja sprawozdań'; _grupa:=WYRAZ.GRUPA;
{? GR_SIK.sel_size() || _gr:=1 || _gr:=0 ?};
{? GR_SIK.FIRMA<>REF.S_FIRMA
|| {? _gr
   || bledy_s+=1
   || FUN.info('Sprawozdanie grupy kapitałowej.\nAkceptacja dostępna z aplikacji\ngrupy kapitałowej.'@)
   ?};
   return()
?};
_ok:=0;
{? ~_gr || id:=tm_form(TMPSIK.tm_stamp) ?};
{? GR_SIK.AKC='T'
|| {? _gr
   || bledy_s+=1
   || FUN.info('Sprawozdanie jest już zaakceptowane.'@)
   ?}
|| _akc_gr:={? _gr
            || TAB_SIK.prefix('S',#GR_SIK.ref()); TAB_SIK.first()
            || _gr_ref:=GR_SIK.ref(); exec('akc_gr','!zws_par_fspr',GR_SIK.ref(),1)
            ?};
   {? _akc_gr=0
   || {? _gr
      || bledy_s+=1
      || exec('tmp_add','!zws_par_fspr',GR_SIK.SKROT,'','Sprawozdanie zawiera odwołania cykliczne')
      ?}
   || _p:={? TAB_SIK.size()>1 | _akc_gr>1
          || {? _gr
             || pyt_typ
             || FUN.choice('Czy akceptować sprawozdanie?'@,2,'Tak'@,'Tak z powiązanymi'@)
             ?}
          || 1
          ?};
      {? _p=1
      || _ok:=exec('spr_gr','!zws_par_fspr',GR_SIK.ref(),_gr,1)
      |? _p=2
      || {? TAB_SIK.first()
         || l_pow:=0;
            GR_SIK.cntx_psh();
            {!
            |? _ok:=GR_SIK.seek(TAB_SIK.REF,'grp_sik')
                    & exec('spr_gr','!zws_par_fspr',GR_SIK.ref(),_gr,TAB_SIK.REF=TAB_SIK.REF_ZR);
               {? _ok & TAB_SIK.REF<>TAB_SIK.REF_ZR & exec('akc_gr','!zws_par_fspr',GR_SIK.ref(),0,1)=0
               || _ok:=0;
                  {? ~_gr
                  || exec('tmp_add','!zws_par_fspr',GR_SIK.SKROT,'','Sprawozdanie zawiera odwołania cykliczne')
                  ?}
               ?};
               _ok & TAB_SIK.next()
            !};
            GR_SIK.cntx_pop()
         ?}
      ?};
      {? _ok
      || {? GR_SIK.r_lock(1,1)
         || GR_SIK.cntx_psh();
            do();
            {? _p=1
            || {? _gr & GR_SIK.AKC='X' || bledy_s+=1 ?};
               GR_SIK.AKC:='X';
               GR_SIK.put();
               WYRAZ.GRUPA:=GR_SIK.ref;
               exec('zeruj','!zws_par_fspr',GR_SIK.ref)
            |? _p=2
            || {? _gr || {? GR_SIK.AKC='X' || bledy_s+=1 || sl_pow-=1 ?} ?};
               {? TAB_SIK.first()
               || GR_SIK.prefix(REF.FIRMA);
                  {! |?
                     {? GR_SIK.seek(TAB_SIK.REF,'grp_sik') & GR_SIK.AKC<>'X'
                     || GR_SIK.AKC:='X';
                        GR_SIK.put();
                        {? _gr || sl_pow+=1 ?};
                        exec('zeruj','!zws_par_fspr',GR_SIK.ref)
                     ?};
                     TAB_SIK.next()
                  !}
               ?}
            ?};
            {? ~_gr
            || exec('kolej','!zws_par_fspr',_p<>2);
               {? _p=1
               || WYRAZ.GRUPA();
                  GR_SIK.clear();
                  GR_SIK.AKC:='T';
                  GR_SIK.put()
               |? _p=2 & TAB_SIK.first()
               || GR_SIK.prefix(REF.FIRMA);
                  {! |?
                     {? GR_SIK.seek(TAB_SIK.REF,'grp_sik') & GR_SIK.AKC<>'T'
                     || GR_SIK.AKC:='T';
                        l_pow+=GR_SIK.put()
                     ?};
                     TAB_SIK.next()
                  !}
               ?}
            ?};
            _ok:=end();
            {? var_pres('SprAkc')=1 & _ok || SprAkc:=1 ?};
            GR_SIK.cntx_pop();
            GR_SIK.r_unlock()
         || {? ~_gr || FUN.info('Inny użytkownik dokonuje operacji na sprawozdaniu.'@) || bledy_s+=1 ?};
            _ok:=0
         ?}
      || {? _gr || bledy_s+=1 ?}
      ?}
   ?};
   TMPSIK.index('ID'); TMPSIK.prefix(id);
   {? _gr=0 & TMPSIK.first
   || _ok:=0;
      {? FUN.ask('Akceptacja nieudana. Wyświetlić przyczyny?'@)
      || TMPSIK.win_sel('WER');
         TMPSIK.select()
      ?}
   ?};
   {? _ok & ~_gr
   || FUN.info(
         'Akceptacja sprawozdania zakończona.'@+
         {? _p=2 & l_pow || '\nLiczba zaakceptowanych sprawozdań zależnych: %1.'@[$(l_pow-1)] || '' ?}
      )
   ?}
?};
{? ~_gr
|| TMPSIK.index('ID'); TMPSIK.prefix(id);
   {? TMPSIK.first() || {! |? TMPSIK.del !} ?};
   &id;
   VAR_DEL.delete('TAB_SIK','l_pow')
?};
WYRAZ.GRUPA:=_grupa;  _ok


\akc_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2006]
:: OPIS: Akceptowane sprawozdanie zapisuje do tabeli TAB_SIK
::   WE:  _a  - wskazanie na naglowek sprawozdania
::        _b  - dla pojedynczego sprawozdania?
::       [_c] - sprawdzenie dodatkowego sprawozdania
::   WY: 0 - istnieje zapetlenie sprawozdan
::       1 - sprawozdania tylko z danego systemu lub system IF
::      >1 - wsrod sprawozdan powiazanych wystepuja tez sprawozdania z innych
::           systemow
::  OLD: \akc_gr/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? _b || TAB_SIK:=tab_tmp(3,'TYP','STRING[1]','','REF_ZR','INTEGER','','REF','INTEGER','') ?};
_dodat:={? var_pres('_c')=type_of(1) || _c ?};
_znS:={? _dodat || 's' || 'S' ?};
{? _dodat
|| TAB_SIK.cntx_psh();
   TAB_SIK.prefix('s',); {? TAB_SIK.first() || {! |? TAB_SIK.del !} ?};
   TAB_SIK.prefix('w',); {? TAB_SIK.first() || {! |? TAB_SIK.del !} ?};
   TAB_SIK.cntx_pop();
   TAB_SIK.cntx_psh();
   TAB_SIK.prefix()
?};
GR_SIK.cntx_psh(); DEFW.cntx_psh();
TAB_SIK.TYP:=_znS; TAB_SIK.REF:=TAB_SIK.REF_ZR:=#_a; TAB_SIK.add();
DEFW.index('GRUPA'); DEFW.prefix(_a);
{? DEFW.first() ||
   {!
   |? _ok:=_ok*exec('akc_w','!zws_par_fspr',_a, DEFW.ref(),,_dodat);
      _ok & DEFW.next()
   !}
?};
GR_SIK.cntx_pop(); DEFW.cntx_pop();
{? _dodat
|| TAB_SIK.cntx_pop();
   TAB_SIK.cntx_psh();
   TAB_SIK.prefix('s',); {? TAB_SIK.first() || {! |? TAB_SIK.del !} ?};
   TAB_SIK.prefix('w',); {? TAB_SIK.first() || {! |? TAB_SIK.del !} ?};
   TAB_SIK.cntx_pop()
?};
{? _ok=0 & _b || VAR_DEL.delete('TAB_SIK') ?};
echo();
_ok


\akc_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2006]
:: OPIS: Wyszukuje rekurencyjnie kolejne powiazania sprawozdan, sprawdza czy
::       istnieja zapetlenia
::   WE:  _a  - wskazanie na sprawozdanie zrodlowe
::        _b  - wskazanie na wiersz sprawozdania
::       [_c] - wskazanie na kolumne sprawozdania
::       [_d] - sprawdzenie zapetlen w dodatkowym sprawozdaniu
::   WY: 0 - istnieje zapetlenie sprawozdan
::       1 - sprawozdania tylko z danego systemu lub system IF
::      >1 - wsrod sprawozdan powiazanych wystepuja tez sprawozdania z innych
::           systemow
::  OLD: \akc_w/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
_dodat:={? var_pres('_d')=type_of(1) || _d ?};
_znW:={? _dodat || 'w' || 'W' ?};
_znS:={? _dodat || 's' || 'S' ?};
_ok:=1;
DEFA.index('SKLADNIK');
{? var_pres('_c')<=0
|| DEFA.prefix(_b)
|| DEFA.prefix(_b,_c)
?};
{? DEFA.first()
|| echo('Weryfikacja: [ %1 ] - %2: %3'@[DEFW.GRUPA().SKROT,DEFW.KOD,DEFW.NAZWA]);
   DEFW.cntx_psh();
   TAB_SIK.TYP:=_znW; TAB_SIK.REF_ZR:=#_a; TAB_SIK.REF:=#_b; TAB_SIK.add();
   {!
   |? {? DEFA.WYR=_b | TAB_SIK.find_key(_znW,#_a,#DEFA.WYR)
      || _ok:=0
      || {? ~TAB_SIK.find_key(_znS,#_a,#DEFA.WYR().GRUPA) & DEFW.GRUPA().AKC<>'T'
         || TAB_SIK.TYP:=_znS; TAB_SIK.REF_ZR:=#_a; TAB_SIK.REF:=#DEFW.GRUPA; TAB_SIK.add()
         ?};
         DEFA.cntx_psh();
         _ok:=_ok*exec('akc_w','!zws_par_fspr',_a,DEFW.ref(),DEFA.KOL,_dodat);
         DEFA.cntx_pop()
      ?};
      _ok & DEFA.next()
   !};
   {? TAB_SIK.find_key(_znW,#_a,#_b) || TAB_SIK.del() ?};
   DEFW.cntx_pop()
?};
_ok


\spr_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2006]
:: OPIS: Sprawdza poprawnosc zdefiniowania aktualnego sprawozdania
::   WE: _a - wskazanie na sprawozdanie
::       _b - operacja grupowa? 1-tak 0-nie
::       _c - czy powiazanych rowniez? 1-tak 0-nie
::   WY: Czy sprawozdanie poprawnie zdefiniowane? 1-tak 0-nie
::  OLD: \spr_gr/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('chk_typ_klik','sprfin',2)='' & exec('spr_kol','!zws_par_fspr',_a)
|| _ok:=exec('spr_defw','!zws_par_fspr',_a,1,_c);
   TMPSIK.index('ID'); TMPSIK.prefix(id);
   {? _ok & TMPSIK.first()
   || {? _b
      || _ok:=1
      || TMPSIK.win_sel('WER');
         {!
         |? _ok:=FUN.choice(
               'Brak algorytmów dla wierszy podstawowych lub kolumn.\nKontynuować akceptację?'@,1,
               '&Tak'@,'&Szczegóły'@
            );
            {? _ok=2 || TMPSIK.select(); 1 || 0 ?}
         !}
      ?};
      {? TMPSIK.first() || {! |? TMPSIK.del() !} ?}
   ?}; _ok
?}


\spr_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Akceptacja definicji sprawozdan - sprawdzenie poprawnosci definicji kolumn
::   WE: _a - ref sprawozdania
::  OLD: \spr_kol/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.GRUPA:=_a;
GR_KOL.cntx_psh();
GR_KOL.index('LP');
GR_KOL.prefix(WYRAZ.GRUPA);
_wy:={? GR_KOL.first()
     || exec('spr_kol2','!zws_par_fspr')
     || exec('tmp_add','!zws_par_fspr',WYRAZ.GRUPA().SKROT,'','Brak kolumn dla sprawozdania');
        0
     ?};
GR_KOL.cntx_pop();
_wy


\spr_kol2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Sprawdza poprawnosc definicji kolumn sprawozdania z algorytmami
::  OLD: \spr_kol2/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
GR_KOL.index('LP2'); GR_KOL.prefix(WYRAZ.GRUPA,'F');
{? GR_KOL.last()
|| GR_KOL.prefix(WYRAZ.GRUPA);
   {? GR_KOL.next()
   || TAB_SIK.cntx_psh();
      TAB_SIK.prefix();
      {!
      |? DEFK.index('LP2'); DEFK.prefix(GR_KOL.ref());
         {? DEFK.first()
         || _ok:=exec('spr_kol3','!zws_par_fspr');
            {? _ok=0
            || exec('tmp_add','!zws_par_fspr',WYRAZ.GRUPA().SKROT,$GR_KOL.LP,
                    'Kolumna zawiera odwołania cykliczne.'@)
            |? GR_KOL.ALGORYTM='W' & DEFK.find_key('L')+DEFK.find_key('M')<>2
            || exec('tmp_add','!zws_par_fspr',WYRAZ.GRUPA().SKROT,$GR_KOL.LP,
                    'Brak licznika i/lub mianownika w algorytmie kolumny.'@)
            ?}
         || exec('tmp_add','!zws_par_fspr',WYRAZ.GRUPA().SKROT,$GR_KOL.LP,'Kolumna nie zawiera definicji algorytmu.'@)
         ?};
         _ok & GR_KOL.next()
      !};
      TAB_SIK.cntx_pop()
   ?}
?};
_ok


\spr_kol3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Sprawdza poprawnosc definicji kolumn sprawozdania - zapetlenia
::  OLD: \spr_kol3/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_SIK.TYP:='K'; TAB_SIK.REF_ZR:=#WYRAZ.GRUPA; TAB_SIK.REF:=#GR_KOL.ref(); TAB_SIK.add(); _ref:=TAB_SIK.ref();
_ok:=1;
GR_KOL.cntx_psh();
DEFK.cntx_psh();
DEFK.index('LP'); DEFK.prefix(GR_KOL.ref());
{? DEFK.first()
|| {!
   |? {? TAB_SIK.find_key('K',#WYRAZ.GRUPA,#DEFK.ARGUMENT)
      || _ok:=0
      || DEFK.ARGUMENT();
         {? GR_KOL.ALGORYTM<>'F' || _ok:=_ok*exec('spr_kol3','!zws_par_fspr') ?}
      ?};
      DEFK.next()
   !}
?};
DEFK.cntx_pop();
GR_KOL.cntx_pop();
{? TAB_SIK.seek(_ref) || TAB_SIK.del() ?};
_ok


\tmp_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Dodanie rekordu do tabeli TMPSIK
::   WE: _a - skrot sprawozdania
::       _b - nazwa wiersza
::       _c - komentarz
::  OLD: \tmp_add/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
TMPSIK.cntx_psh();
TMPSIK.prefix();
TMPSIK.blank();
TMPSIK.T1:=_a;
TMPSIK.T2:=_b;
TMPSIK.T3:=_c;
TMPSIK.ID:=id;
TMPSIK.add();
TMPSIK.cntx_pop()


\zeruj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Zerowanie pola DEFW.KOLEJ i GR_KOL.KOLEJ dla wszystkich wierszy i kolumn
::   WE: _a - wskazanie na sprawozdanie
::  OLD: \zeruj/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.cntx_psh();
DEFW.index('GRUPA');
DEFW.prefix(_a);
{? DEFW.first()
|| {!
   |? {? DEFW.KOLEJ<>0 || DEFW.KOLEJ:=0; DEFW.put() ?};
      DEFW.next()
   !}
?};
DEFW.cntx_pop();
GR_KOL.cntx_psh();
GR_KOL.index('LP2'); GR_KOL.prefix(_a,'F');
{? GR_KOL.last()
|| GR_KOL.prefix(_a);
   {? GR_KOL.next()
   || {!
      |? GR_KOL.KOLEJ:=0;
         GR_KOL.put();
         GR_KOL.next()
      !}
   ?}
?};
GR_KOL.cntx_pop()


\kolej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Nadawanie wartosci pola DEFW.KOLEJ i GR_KOL.KOLEJ dla zaakceptowanych sprawozdan
::   WE: _a - wariant akceptacji
::            1 - dla jednego sprawozdania
::            0 - dla wielu sprawozdan
::  OLD: \kolej/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
GR_SIK.cntx_psh(); DEFW.cntx_psh();
_poziom:=_i:=0;_zmiana:=1;
DEFW.index('GRUPA');
WYRAZ.GRUPA:=GR_SIK.ref();
{? _a=1
|| DEFW.prefix(WYRAZ.GRUPA)
|| DEFW.prefix()
?};
{!
|? _zmiana
|! _i+=1; _zmiana:=0;
   {? DEFW.first()
   || {!
      |? {? DEFW.GRUPA().AKC='X' | DEFW.GRUPA().AKC='T'
         || DEFW.cntx_psh();
            echo('(%1) Proszę czekać ... %2'@[form(_i),DEFW.NAZWA]);
            WYRAZ.WIERSZ:=DEFW.ref;
            WYRAZ.TYP:=DEFW.ALGORYTM;
            _poziom:=0;
            DEFA.index('LP');
            DEFA.prefix(WYRAZ.WIERSZ);
            {? DEFA.first()
            || {!
               |? DEFA.cntx_psh();
                  {? WYRAZ.TYP='S' | WYRAZ.TYP='W' | WYRAZ.TYP='I'
                  || {? DEFA.ARGUMENT().KOLEJ>_poziom & DEFA.WYR<>DEFA.ARGUMENT
                     || _poziom:=DEFA.ARGUMENT().KOLEJ
                     ?}
                  ?};
                  DEFA.cntx_pop();
                  DEFA.next()
               !}
            ?};
            DEFW.cntx_pop();
            DEFW.seek(WYRAZ.WIERSZ);
            echo();
            {? (DEFW.KOLEJ<=_poziom) & (WYRAZ.TYP<>'F' & WYRAZ.TYP<>'P' & WYRAZ.TYP<>'R')
            || DEFW.KOLEJ:=_poziom+1;
              _zmiana:=1;
              DEFW.put()
            ?}
         ?};
         DEFW.next()
      !}
   || _zmiana:=0
   ?}
!};
DEFW.cntx_pop();
{? _a=1
|| GR_SIK.index('SAKCEPT'); GR_SIK.prefix(REF.FIRMA);
   _jest:=GR_SIK.seek(WYRAZ.GRUPA)
|| GR_SIK.index('SAKCEPT'); GR_SIK.prefix(REF.FIRMA,'T');
   _jest:=GR_SIK.first()
?};
{? _jest
|| GR_KOL.cntx_psh();
   GR_KOL.index('LP2');
   DEFK.index('LP');
   {!
   |? {!
      |? GR_KOL.prefix(GR_SIK.ref(),'F');
         {? GR_KOL.last()
         || GR_KOL.prefix(GR_SIK.ref());
            {? GR_KOL.next()
            || _zmiana:=0;
               {!
               |? _poziom:=0;
                  GR_KOL.cntx_psh();
                  DEFK.prefix(GR_KOL.ref());
                  {? DEFK.first()
                  || {!
                     |? {? DEFK.ARGUMENT().KOLEJ>_poziom & DEFK.GR_KOL<>DEFK.ARGUMENT
                        || _poziom:=DEFK.ARGUMENT().KOLEJ
                        ?};
                        DEFK.next()
                     !}
                  ?};
                  GR_KOL.cntx_pop();
                  {? GR_KOL.KOLEJ<=_poziom
                  || GR_KOL.KOLEJ:=_poziom+1; GR_KOL.put();
                     _zmiana:=1
                  ?};
                  GR_KOL.next()
               !};
               _zmiana
            ?}
         ?}
      !};
      _a<>1 & GR_SIK.next()
   !};
   GR_KOL.cntx_pop()
?};
GR_SIK.cntx_pop()


\spr_defw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Akceptacja definicji sprawozdania
::       - sprawdzenie czy istnieja wiersze dla sprawozdania
::       - sprawdzenie, czy wiersze w sprawozdaniu pochodza tylko z jednego sprawozdania
::   WE:  _a - ref sprawozdania
::        _b - czy sprawdzac parametry dla wierszy typu F
::        _c - czy sprawdzac akceptacje powiazanych sprawozdan? 1-tak 0-nie
::  OLD: \spr_defw/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
_dalej:=1;
GR_SIK.cntx_psh(); DEFW.cntx_psh();
WYRAZ.GRUPA:=_a;
DEFW.index('LP');
DEFW.prefix(WYRAZ.GRUPA);
:: sprawdzenie czy wiersze nie zawierają wierszy z innych sprawozdan
{? DEFW.first()
|| {! |?
      DEFW.cntx_psh();
      WYRAZ.WIERSZ:=DEFW.ref();
      {? DEFW.ALGORYTM='F'
      || {? _b
         || ALG_PAR.index('ALG_PAR1');
            ALG_PAR.prefix(REF.FIRMA,WYRAZ.WIERSZ);
            {? ~ALG_PAR.first()
            || exec('tmp_add','!zws_par_fspr',WYRAZ.GRUPA().SKROT,WYRAZ.WIERSZ().NAZWA,
                    'Brak algorytmu dla wiersza')
            ?}
         ?}
      |? DEFW.ALGORYTM<>'P' & DEFW.ALGORYTM<>'R'
      || DEFA.index('LP');
         DEFA.prefix(WYRAZ.WIERSZ);
         {? DEFA.first()
         || {! |?
               {? -DEFA.LM='l'
               || DEFA.cntx_psh; _kol:=DEFA.KOL;  _dalej:=0;
                  DEFA.index('LP'); DEFA.prefix(WYRAZ.WIERSZ,_kol);
                  {? DEFA.first
                  || {! |?
                        {? -DEFA.LM='m' || _dalej:=1 ?};
                        DEFA.next & ~_dalej
                     !}
                  ?};
                  DEFA.cntx_pop;
                  {? ~_dalej
                  || exec('tmp_add','!zws_par_fspr',WYRAZ.WIERSZ().GRUPA().SKROT,WYRAZ.WIERSZ().NAZWA,
                          'Algorytm typu W bez zdef. mianownika dla kol. '+$DEFA.KOL().LP)
                  ?}
               ?};
               {? -DEFA.LM='m'
               || DEFA.cntx_psh; _kol:=DEFA.KOL;  _dalej:=0;
                  DEFA.index('LP'); DEFA.prefix(WYRAZ.WIERSZ,_kol);
                  {? DEFA.first
                  || {! |?
                        {? -DEFA.LM='l' || _dalej:=1 ?};
                        DEFA.next & ~_dalej
                     !}
                  ?};
                  DEFA.cntx_pop;
                  {? ~_dalej
                  ||  exec('tmp_add','!zws_par_fspr',WYRAZ.WIERSZ().GRUPA().SKROT,WYRAZ.WIERSZ().NAZWA,
                           'Algorytm typu W bez zdef. licznika dla kol. '+$DEFA.KOL().LP)
                  ?}
               ?};
               {? _dalej
               || {? DEFA.ARGUMENT<>null
                  || {? _c & DEFA.ARGUMENT().GRUPA<>WYRAZ.GRUPA & DEFA.ARGUMENT().GRUPA().AKC='N'
                     || exec('tmp_add','!zws_par_fspr',WYRAZ.WIERSZ().GRUPA().SKROT,WYRAZ.WIERSZ().NAZWA,
                             'Sprawozdanie zawiera wiersze z innych niezaakceptowanych sprawozdań');
                        _dalej:=0
                     || DEFA.next()
                     ?}
                  |? DEFA.ARGUMENT=null
                  || exec('tmp_add','!zws_par_fspr',WYRAZ.WIERSZ().GRUPA().SKROT,WYRAZ.WIERSZ().NAZWA,
                          'Brak argumentu w algorytmie');
                     _dalej:=0
                  ?}
               ?}
            !}
         || exec('tmp_add','!zws_par_fspr',WYRAZ.GRUPA().SKROT,WYRAZ.WIERSZ().NAZWA,
                 'Brak algorytmu dla wiersza')
         ?}
      ?};
      DEFW.cntx_pop();
      DEFW.next()
   !}
|| exec('tmp_add','!zws_par_fspr',WYRAZ.GRUPA().SKROT,'',
        'Nie zdefiniowanio wierszy w sprawozdaniu');
   _dalej:=0
?};
GR_SIK.cntx_pop(); DEFW.cntx_pop();
_dalej


\gr_anakc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Anulowanie akceptacji sprawozdan
::  OLD: \gr_anakc/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ssize_s')>0 || _gr:=1 || _gr:=0 ?}; _msg:='';
{? GR_SIK.FIRMA<>REF.S_FIRMA
|| {? _gr
   || bledy_s+=1
   || FUN.info('Sprawozdanie grupy kapitałowej.\nAnulowanie akceptacji dostępne z aplikacji\ngrupy kapitałowej.'@)
   ?};
   return()
?};
_ok_gr_l:=1;
{? REF.FIRMA=REF.GRUPA & GR_SIK.FIRMA=REF.FIRMA
|| GR_SIK_L.index('GR_SIK');
   GR_SIK_L.prefix(GR_SIK.ref());
   {? GR_SIK_L.first()
   || {!
      |? {? GR_SIK_L.r_lock(1,1)
         || 'można zablokować czyli nikt inny nie blokuje (tym samym rekord niepotrzebny)';
            GR_SIK_L.del()
         || _ok_gr_l:=0;
            0
         ?}
      !}
   ?}
?};
VAR_DEL.delete('__DEFWA');
__DEFWA:=tab_tmp(1,'REF','INTEGER',);
{? _ok_gr_l & GR_SIK.r_lock(1,1) & exec('lock_grsik','!zws_par_fspr',1) & DEFW.lock(1,1) & DEFA.lock(1,1) & GR_KOL.lock(1,1)
|| {? GR_SIK.AKC='T'
   || do;
      GR_SIK.AKC:='N';
      GR_SIK.put();
      exec('zeruj','!zws_par_fspr',GR_SIK.ref());
::    sprawdzenie sprawozdan powiązanych
      l_pow:=0;
      VAR_DEL.delete('__DEFWA');
      __DEFWA:=tab_tmp(1,'REF','INTEGER',);
      exec('wier_ana','!zws_par_fspr',1);echo();
      _tran:=end();
      GR_SIK.r_unlock(); DEFW.unlock(); DEFA.unlock(); GR_KOL.unlock();
      {? var_pres('SprAkc')=1 || SprAkc:=0; GR_SIK.r_lock() ?};
::    Blokada r_lock ze zwgledu na mozliwosc pracy przez dwoch operatorow na niezaakceptowanym sprawozdaniu
::    po odakceptowaniu podczas przegladania wierszy w IF
      {? _tran
      || {? _gr
         || sl_pow+=l_pow
         || _msg:='Anulowanie akceptacji sprawozdania zakończone.'+
                  {? l_pow || '\nLiczba anulowanych akceptacji sprawozdań zależnych: '+$l_pow+'.' || '' ?}
         ?}
      || {? _gr
         || bledy_s+=1
         ?}
      ?};
      {? ~_gr || &l_pow ?}
   || GR_SIK.unlock(); DEFW.unlock(); DEFA.unlock(); GR_KOL.unlock();
      {? _gr
      || bledy_s+=1
      || _msg:='Sprawozdanie nie jest zaakceptowane. Anulowanie akceptacji niepotrzebne.'
      ?}
   ?}
|| GR_SIK.r_unlock(); exec('lock_grsik','!zws_par_fspr',2); DEFW.unlock(); DEFA.unlock(); GR_KOL.unlock();
   {? ~_gr
   || _msg:='Sprawozdania są używane przez innych użytkowników systemu.'
   ?}
?};
VAR_DEL.delete('__DEFWA');
{? _msg<>'' || FUN.info(_msg) ?}


\lock_grsik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MP] [23.25]
:: OPIS: Blokuje/odblokowuje sprawozdanie oraz powiązane sprawozdania
::   WE:  _a  - 1 - blokowanie rekordu, 2 - odblokowanie rekordu
::       [_b] - wskazanie na kolumne sprawozdania
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
_ok:=1;
WYRAZ.GRUPA:=_gr:=GR_SIK.ref;
GR_SIK.cntx_psh(); DEFW.cntx_psh();
DEFW.index('GRUPA');
DEFW.prefix(WYRAZ.GRUPA);
{? DEFW.first()
|| {!
   |? {? ~__DEFWA.find_key(DEFW.ref())
      || __DEFWA.REF:=DEFW.ref(); __DEFWA.add();
         DEFW.cntx_psh();
         WYRAZ.WIERSZ:=DEFW.ref();
         DEFA.index('SKLADNIK');
         {? _=1
         || DEFA.prefix(WYRAZ.WIERSZ)
         || DEFA.prefix(WYRAZ.WIERSZ,_b)
         ?};
         {? DEFA.first()
         || {!
            |? DEFA.cntx_psh();
               _akc:=DEFA.WYR().GRUPA().AKC;
               _sys:=GR_SIK.SYSTEM;
               {? _akc<>'N'
               || _ret:={? _a || GR_SIK.r_lock(1,1) || GR_SIK.r_unlock(1,1) ?}
               ?};
               _ok:={? GR_SIK.ref<>_gr || exec('lock_grsik','!zws_par_fspr',_a,DEFA.KOL) || 1 ?};
               DEFA.cntx_pop();
               _ret & _ok & DEFA.next()
            !}
         ?};
         DEFW.cntx_pop()
      ?};
      _ret & _ok & DEFW.next()
   !}
?};
GR_SIK.cntx_pop(); DEFW.cntx_pop();
WYRAZ.GRUPA:=_gr;
_ret


\wier_ana
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Anulowanie akceptacji dla wiersza sprawozdania
::   WE:  _a  - czy wyswietlac echo
::       [_b] - wskazanie na kolumne sprawozdania
::  OLD: \wier_ana/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
WYRAZ.GRUPA:=_gr:=GR_SIK.ref;
GR_SIK.cntx_psh(); DEFW.cntx_psh();
DEFW.index('GRUPA');
DEFW.prefix(WYRAZ.GRUPA);
{? DEFW.first()
|| {!
   |? {? _a || echo('Anulowanie: %1 [%2] %3'@[$DEFW.LP,DEFW.KOD,DEFW.NAZWA]) ?};
      {? ~__DEFWA.find_key(DEFW.ref())
      || __DEFWA.REF:=DEFW.ref(); __DEFWA.add();
         DEFW.cntx_psh();
         WYRAZ.WIERSZ:=DEFW.ref();
         DEFA.index('SKLADNIK');
         {? _=1
         || DEFA.prefix(WYRAZ.WIERSZ)
         || DEFA.prefix(WYRAZ.WIERSZ,_b)
         ?};
         {? DEFA.first()
         || {!
            |? DEFA.cntx_psh();
               _akc:=DEFA.WYR().GRUPA().AKC;
               _sys:=GR_SIK.SYSTEM;
               {? _akc<>'N'
               || GR_SIK.AKC:='N';
                  GR_SIK.put();
                  l_pow+=1
               ?};
               _ok:={? GR_SIK.ref<>_gr || exec('wier_ana','!zws_par_fspr',0,DEFA.KOL) || 1 ?};
               DEFA.cntx_pop();
               _ok & DEFA.next()
            !}
         ?};
         DEFW.cntx_pop()
      ?};
      _ok & DEFW.next()
   !}
?};
GR_SIK.cntx_pop(); DEFW.cntx_pop();
WYRAZ.GRUPA:=_gr;
_ok


\bm_gr_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Dodanie/poprawienie kolumny sprawozdania
::  OLD: \bm_gr_kol/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
_red:=GR_KOL.win_edit('?');
_mod:=-menu_txt()='popraw';
{? _mod=0
|| GR_KOL.blank();
   exec('ba_lang','!zws_par_fspr')
?};
exec('enable','lang',GR_KOL,'RED_A');
_red:='RED'+{? 1+GR_SIK.TYP_KLIK='N' || '_A2' || '' ?};
GR_KOL.win_edit(_red);
{? _mod=0 | GR_KOL.r_lock(1,1,1)
|| GR_KOL.efld_opt(_red,'enable='+$(GR_SIK.E_KOD<>''),GR_KOL,'E_KOD');
   {? GR_KOL.edit("exec('gr_kolpr','!zws_par_fspr')")
   || {? _mod
      || GR_KOL.put()
      || GR_KOL.add()
      ?}
   ?};
   {? _mod || GR_KOL.r_unlock() ?}
|| FUN.info('Kolumna sprawozdania jest obsługiwana przez innego użytkownika'@)
?};
exec('upd_lang','lang');
GR_KOL.win_edit(_red)


\gr_kolpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: akcja Rekord po w tabeli GR_KOL
::  OLD: \gr_kolpr/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
_a:='';
{? GR_KOL.LP<1
|| FUN.info('Popraw numer kolumny.'@); _a:='LP'
?};
{? _a='' & GR_KOL.NAZWA=''
|| FUN.info('Podaj nazwę kolumny.'@);  _a:='NAZWA'
?};
{? _a=''
|| _blad:=0;
   {? -(1+menu_txt)='p'
   || _ref:=GR_KOL.ref();
      GR_KOL.cntx_psh(); GR_KOL.index('LP');
      GR_KOL.prefix(GR_SIK.ref(),GR_KOL.LP);
      _blad:=(GR_KOL.first() & GR_KOL.ref()<>_ref);
      GR_KOL.cntx_pop()
   || GR_KOL.cntx_psh(); GR_KOL.index('LP');
      GR_KOL.prefix(GR_SIK.ref(),GR_KOL.LP);
      _blad:=GR_KOL.first();
      GR_KOL.cntx_pop()
   ?};
   {? _blad
   || FUN.info('Istnieje kolumna o takim numerze.'@); _a:='LP'
   ?}
?};
_a


\bd_gr_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przed usunieciem kolumny sprawozdania
::  OLD: \bd_gr_kol/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_KOL.count()
|| FUN.info('Rekord wykorzystywany w innych tabelach\nnie może być usunięty.'@)
|? FUN.ask('Usunąć kolumnę sprawozdania?'@)
|| {? ~GR_KOL.r_lock(1,1,1)
   || FUN.info('Kolumna sprawozdania jest obsługiwana przez innego użytkownika.'@)
   || _ref:=GR_KOL.ref();
      {? GR_KOL.del(,1)
      || exec('del_lang','lang',_ref)
      || GR_KOL.r_unlock()
      ?}
   ?}
?}


\defk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Definicja algorytmu dla kolumny
::  OLD: \defk/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_KOL.ALGORYTM='F'
|| FUN.info('Funkcja niedostępna dla kolumn prostych.'@);
   return()
?};
GR_KOL.cntx_psh();
GR_KOL.win_sel('WER2');
WYRAZ.KOLUMNA:=GR_KOL.ref();
UNPAR.P34_BV:=$"
DEFK.efld_opt('RED','enable='+$UNPAR.P34,DEFK,'DEFW');
DEFK.efld_opt('RED','mark='+$UNPAR.P34,DEFK,'DEFW');
DEFK.efld_opt('RED2','enable='+$UNPAR.P34,DEFK,'DEFW');
DEFK.efld_opt('RED2','mark='+$UNPAR.P34,DEFK,'DEFW');
~~
";
UNPAR.P34_BE:='';
UNPAR.P34_AE:='{? ~UNPAR.P34 || DEFK.DEFW:=null ?}; win_disp(); 1';
DEFK.win_edit({? GR_KOL.ALGORYTM='W' || 'RED2' || 'RED' ?});
DEFK.index('LP2'); DEFK.prefix(WYRAZ.KOLUMNA);
DEFK.win_sel('WER');
DEFK.hdr_sel(); DEFK.hdr_sel(': %1'@[GR_KOL.NAZWA]);
_akcspr:={? var_pres('SprAkc')=1 || SprAkc || GR_KOL.GRUPA().AKC='T' ?};
{? ~GR_KOL.r_lock(1,1,1)
|| FUN.info('Kolumna sprawozdania jest obsługiwana przez innego uzytkownika.'@)
|| DEFK.select(,,,{? _akcspr | GR_SIK.FIRMA<>REF.FIRMA || 'dpu:d' || '' ?});
   GR_KOL.r_unlock()
?};
GR_KOL.cntx_pop()


\view_gr_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Wyswietlenie komumny sprawozdania
::  OLD: \view_gr_kol/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
_red:=GR_KOL.win_edit('?');
GR_KOL.win_edit('RED'+{? 1+GR_SIK.TYP_KLIK='N' || '_A2' || '' ?});
GR_SIK.cntx_psh();
GR_KOL.efld_opt(GR_KOL.win_edit('?'),'enable='+$(GR_KOL.GRUPA().E_KOD<>''),GR_KOL,'E_KOD');

GR_SIK.cntx_pop();
GR_KOL.display();
GR_KOL.win_edit(_red)


\grupa_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: blank pola DEFW.GRUPA
::  OLD: \grupa_bl/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.GRUPA


\be_gr_kol_alg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przed redakcj GR_KOL.ALGORYTM
::  OLD: \be_gr_kol_alg/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? -menu_txt<>'popraw' || return(1) ?};
DEFA.index('KOL'); DEFA.prefix(GR_KOL.ref());
{? ~DEFA.first()
|| ALG_PAR.index('GR_KOL'); ALG_PAR.prefix(GR_KOL.ref());
   {? ~ALG_PAR.first()
   || DEFK.index('LP'); DEFK.prefix(GR_KOL.ref());
      ~DEFK.first()
   ?}
?}


\ae_gr_kol_alg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Po redakcj GR_KOL.ALGORYTM
::  OLD: \ae_gr_kol_alg/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
GR_KOL.efld_opt('RED_A','enable='+$(GR_KOL.ALGORYTM<>'F'),GR_KOL,'DZ_DEFW');
win_disp();
1


\bl_gr_kol_dokl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Wartosc poczatkowa GR_KOL.DOKL
::  OLD: \bl_gr_kol_dokl/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
GR_SIK.DOKL


\bl_gr_kol_zaokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Wartosc poczatkowa GR_KOL.ZAOKR
::  OLD: \bl_gr_kol_zaokr/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
GR_SIK.ZAOKR


\be_gr_kol_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przed redakcj GR_KOL.ZAOKR i GR_KOL.DOKL
::  OLD: \be_gr_kol_dod/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
GR_KOL.ALGORYTM<>'F' & GR_KOL.DZ_DEFW<>'T'


\bv_gr_kol_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przed wyswietleniem GR_KOL.ZAOKR i GR_KOL.DOKL
::  OLD: \bv_gr_kol_dod/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_KOL.ALGORYTM='F' | GR_KOL.DZ_DEFW='T'
|| exec('findfnv','#color')
|| ''
?}


\be_dz_defw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przed redakcja GR_KOL.DZ_DEFW
::  OLD: \be_dz_defw/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
GR_KOL.ALGORYTM<>'F'


\ae_dz_defw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Po redakcji GR_KOL.DZ_DEFW
::  OLD: \ae_dz_defw/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_KOL.DZ_DEFW='W' || GR_KOL.DZ_DEFW:='N' ?};
win_disp();
1


\bv_dz_defw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przed wyswietl GR_KOL.DZ_DEFW
::  OLD: \bv_dz_defw/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_KOL.ALGORYTM='F'
|| GR_KOL.DZ_DEFW:='W'
|? GR_KOL.DZ_DEFW='W'
|| GR_KOL.DZ_DEFW:='T'
?};
GR_KOL.efld_opt('RED_A','enable='+$(GR_KOL.ALGORYTM<>'F'),GR_KOL,'DZ_DEFW');
GR_KOL.efld_opt('RED_A','enable='+$(GR_KOL.ALGORYTM<>'F' & GR_KOL.DZ_DEFW<>'T'),GR_KOL,'ZAOKR');
GR_KOL.efld_opt('RED_A','enable='+$(GR_KOL.ALGORYTM<>'F' & GR_KOL.DZ_DEFW<>'T'),GR_KOL,'DOKL');
''


\lkolumn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Ustalenie liczby kolumn dla sprawozdania i podswietlenie zaakceptowanych sprawozdan
::  OLD: \lkolumn/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
exec('bv_lang','lang');
_grp:=GR_SIK.sel_size();
_bez:={? var_press('Konsolid')>0 & REF.S_FIRMA<>REF.GRUPA || 'DOI' || '' ?};
{? 1+GR_SIK.TYP_KLIK<>'T' || _bez+='W' ?};
{? -GR_SIK.AKC='t'
|| GR_SIK.actions_grayed('WER',{? _grp || '' || 'PUA'+_bez ?});
   'GR_SIK#01#01'
|| GR_SIK.actions_grayed('WER',{? _grp || '' || 'N'+_bez ?});
   ''
?}


\ae_kod_defw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Po redakcji pola DEFW.KOD
::  OLD: \ae_kod_defw/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? __CHK.record(DEFW,,'KOD')=''
|| {? GR_SIK.TYP_KLIK='TW' & exec('find_slo_slu','slo_slu','~KODY_WSK',DEFW.KOD)=null
   || FUN.info('Nie znaleziono kodu wiersza w słowniku.'@);
      return(0)
   ?};
   {? DEFW.UID=''
   || DEFW.UID:=exec('set_defw_uid','sprfin')
   ?};
   1
?}


\defw_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Przed redakcja DEFW.ALGORYTM
::  OLD: \defw_pop/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
{? var_pres('strzwdol')>0 | (_a:=(-(((menu_pth-1)+1))); _a='d' | _a='o') | DEFW.ALGORYTM='R'
   | DEFW.ALGORYTM='P'
|| _zwrot:=1
|| {? DEFW.ALGORYTM='F'
   || ALG_PAR.index('ALG_PAR1'); ALG_PAR.prefix(REF.FIRMA,DEFW.ref()); _zwrot:=~ALG_PAR.first()
   || DEFA.index('LP'); DEFA.prefix(DEFW.ref()); _zwrot:=~DEFA.first()
   ?}
?};
_zwrot


\bl_zaokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Wartosc poczatkowa pola DEFW.ZAOKR
::  OLD: \bl_zaokr/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
GR_SIK.ZAOKR


\be_zaokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Przed redakcja pola DEFW.ZAOKR
::  OLD: \be_zaokr/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{?(-DEFW.ALGORYTM='p')|(-DEFW.ALGORYTM='i')|(-DEFW.ALGORYTM='w')
|| 0
|| 1
?}


\bl_dokl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Wartosc poczatkowa pola DEFW.DOKL
::  OLD: \bl_dokl/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
GR_SIK.DOKL


\be_dokl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Przed redakcja pola DEFW.DOKL
::  OLD: \be_dokl/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? -DEFW.ALGORYTM='p' || 0 || 1 ?}


\dokresbl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: wartosc poczatkowa pola DEFW.DOKRES
::  OLD: \dokresbl/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
'K'


\bv_defk_defw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przed wyswietleniem DEFK.DEFW
::  OLD: \bv_defk_defw/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEFK.DEFW
|| ''
|| {? UNPAR.P34 || '' || exec('findfnv','#color') ?}
?}


\bv_defw_plik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Przed wyswietleniem pola DEFW.PLIK
::  OLD: \bv_defw_plik/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
''


\be_defw_if
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Przed redakcja pola DEFW.PLIK
::  OLD: \be_defw_if/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
1


\bedefwjm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Przed redakcja DEFW.JM
::  OLD: \bedefwjm/plan_spr.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.VAL_TYP='J'


\defw_alg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Select na tabele DEFA
::  OLD: \defw_alg/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh();
_firma:=REF.FIRMA;
wyrGrupa:=1;
ALG_PAR.cntx_psh();
WYRAZ.GRUPA:=DEFW.GRUPA; WYRAZ.GRUPA(); GR_KOL.cntx_psh();
exec('set_alg_par_red','!zws_par_fspr');
GR_KOL.index('LP2');
GR_KOL.prefix(WYRAZ.GRUPA,'F');
_lkolumn:=GR_KOL.size();
{? _lkolumn=1 & DEFW.ALGORYTM<>'P' & DEFW.ALGORYTM<>'R' & DEFW.ALGORYTM<>''
|| GR_KOL.first();
   WYRAZ.KOLUMNA:=kol_wrs:=GR_KOL.ref;
   anal_rok:=SIK.ROK1:=SSTALE.AR;
   exec('red_defa','!zws_par_fspr', 1);
   VAR_DEL.delete('kol_wrs','anal_rok')
|? _lkolumn>1 & DEFW.ALGORYTM<>'P' & DEFW.ALGORYTM<>'R' & DEFW.ALGORYTM<>''
|| _okno:=GR_KOL.grp_make('Algorytmy sprawozdania finansowego: %1'@[GR_SIK.SKROT],"",'#gr_kol_werg');
   WYRAZ.KOLUMNA:=kol_wrs:=GR_KOL.ref();
   SIK.ROK1:=anal_rok:=SSTALE.AR;
   ak:=exec('red_defa','!zws_par_fspr', 0);
   _grkwer:=GR_KOL.mk_sel('Kolumny sprawozdania'@,'P',,'#gr_kol_wer',0,0,27,,'U');
   GR_KOL.win_fld(_grkwer,,'LP',,,5);
   GR_KOL.win_fld(_grkwer,SKID,'LANG_WER',,,{? DEFW.ALGORYTM='F' || 90 || 103 ?},,,'Nazwa'@);
   GR_KOL.win_fml(_grkwer,SKID,'LANG_WER',,'ICON_BEFORE',"exec('icon','lang')");
   _akcspr:={? var_pres('SprAkc')=1 || SprAkc || GR_SIK.AKC='T' ?};
   {? ~_akcspr & GR_SIK.FIRMA=REF.FIRMA
   || GR_KOL.win_act(_grkwer,0,'Rekord',,,,"exec('bv_lang','lang')","exec('gr_kolpr','!zws_par_fspr')");
      GR_KOL.win_act(_grkwer,1,'Rekord',,,,,"exec('gr_kolpr','!zws_par_fspr')")
   ?};
   GR_KOL.win_act(_grkwer,0,'Dołącz',,,'Dołączanie nowego zapisu',"exec('bv_lang','lang',null)","exec('upd_lang','lang')");
   GR_KOL.win_act(_grkwer,1,'Dołącz',,,'Dołączanie nowego zapisu',"exec('bv_lang','lang',null)","exec('upd_lang','lang')");
   GR_KOL.win_act(_grkwer,0,'Popraw',,,'Poprawianie bieżącego zapisu',,"exec('upd_lang','lang')");
   GR_KOL.win_act(_grkwer,0,'Usuń',,,'Usunięcie bieżącego zapisu',"
      {? GR_KOL.count()
      || FUN.info('Rekord wykorzystywany w innych tabelach\nnie może być usunięty.'@);
         0
      || 1
      ?}
   ","exec('del_lang','lang')");
   GR_KOL.win_act(_grkwer,0,'Menu','Wielo&języczność'@,,'Poprawianie bieżącego zapisu'@,);
   GR_KOL.win_act(_grkwer,0,'Formuła','Ustaw &język tłumaczenia'@@,'Wielo&języczność'@,'Ustawia język tłumaczenia'@,"exec('set_lang','lang')",,,,,,'J');
   GR_KOL.win_act(_grkwer,0,'Formuła','Tłumaczenia nazwy'@@,'Wielo&języczność'@,'Wyświetla tłumaczenia nazw'@,"exec('sel_lang','lang')",,,,,,'T');
   GR_KOL.win_act(_grkwer,0,'Formuła','Legenda'@@,,'Opis znaczenia ikon'@,,"exec('legenda','color','GR_KOL#01')",,,,,'L');
   GR_KOL.win_btn(_grkwer,'text='+'Dołącz'@+',btn_label_align=center,panel=right,align=begin','menu:D');
   GR_KOL.win_btn(_grkwer,'text='+'Popraw'@+',btn_label_align=center,panel=right,align=begin','menu:P');
   GR_KOL.win_btn(_grkwer,'text='+'Usuń'@+',btn_label_align=center,panel=right,align=begin','menu:U');
   {? ~_akcspr & GR_SIK.FIRMA=REF.FIRMA
   || GR_KOL.actions(_grkwer)
   || GR_KOL.actions(_grkwer,'DPU:D')
   ?};
   GR_KOL.grp_sel(_okno,GR_KOL,_grkwer,,"WYRAZ.KOLUMNA:=kol_wrs:=GR_KOL.ref();
                                         WYRAZ.WIERSZ(); UNPAR.P1_AE:=exec('get_lang','lang',DEFW.ref());
                                         UNPAR.P2_AE:={? ($(ak+'.get()'))() ||  exec('get_lang','lang',GR_KOL.ref()) || '' ?};
                                         exec('red_defa','!zws_par_fspr', 0);
                                         grp_disp(($ak)(),($ak)().win_sel('?'),0);
                                         GR_KOL.GRUPA(); WYRAZ.GRUPA:=GR_SIK.ref()",,,10,,,,,'maximized_with_title');
   GR_KOL.grp_splt(_okno,,'horizontal','bottom');
   _fmlar:="
      {? #kol_wrs & (GR_KOL.prefix; GR_KOL.seek(kol_wrs))
      || GR_KOL.index('LP2');
         GR_KOL.prefix(GR_KOL.GRUPA,'F');
         GR_KOL.find_key(GR_KOL.LP)
      ?}
   ";
   {? ak='ALG_PAR' & GR_SIK.FIRMA=REF.GRUPA & var_press('Konsolid')>0
   || GR_KOL.grp_sel(_okno,ALG_PAR, ALG_PAR.win_sel('?'),'Składniki wiersza'@,_fmlar,,,,"exec('prefix_alg_par','!zws_par_fspr','N')",,,,'maximized_with_title');
      GR_KOL.grp_sel(_okno,ALG_PAR, ALG_PAR.win_sel('?'),'Składniki wiersza dla wyłączeń'@,_fmlar,,,,"exec('prefix_alg_par','!zws_par_fspr','T')",,,,'maximized_with_title')
   || GR_KOL.grp_sel(_okno,($ak)() , ($ak)().win_sel('?'),,_fmlar,,,,,,,,'maximized_with_title')
   ?};
   GR_KOL.win_sel(_okno);
   DEFW.cntx_psh();
   GR_KOL.select();
   DEFW.cntx_pop();
   ($ak)().actions(($ak)().win_sel('?'),'');
   VAR_DEL.delete('ak','kol_wrs','anal_rok')
|? _lkolumn=0 & DEFW.ALGORYTM<>'P'  & DEFW.ALGORYTM<>''
|| FUN.info('Nie zdefiniowano kolumn (wartości) dla sprawozdania.'@)
|? DEFW.ALGORYTM='P'
|| FUN.info('Dla wiersza typu PUSTY WIERSZ\nnie definiuje się algorytmu.'@)
|? DEFW.ALGORYTM='R'
|| FUN.info('Dla wiersza z wartościami wprowadzanymi ręcznie\nnie definiuje się algorytmu.'@)
?};
WYRAZ.GRUPA:=DEFW.GRUPA; WYRAZ.GRUPA(); GR_KOL.cntx_pop();
ALG_PAR.cntx_pop();
VAR_DEL.delete('wyrGrupa');
REF.FIRMA:=_firma;
ROK_F.cntx_pop();
~~


\red_defa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: przegladanie i redakcja tabeli DEFA
::   WE: _a - (0/1) wykonanie akcji select
::   WY: akronim tabeli
::  OLD: \red_defa/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.cntx_psh();
{? ~(_ & _a=0) || WYRAZ.GRUPA:=null ?};
WYRAZ.WIERSZ:=DEFW.ref;
WYRAZ.TYP:=DEFW.ALGORYTM;
ZMIENNE.TEXT:='';
_wy:='';
_akcspr:={? var_pres('SprAkc')=1 || SprAkc || WYRAZ.WIERSZ().GRUPA().AKC='T' ?};
{? WYRAZ.TYP<>'F'
|| DEFA.index('LP'); DEFA.prefix(WYRAZ.WIERSZ,WYRAZ.KOLUMNA);
   _okno:={? WYRAZ.TYP='W' || 'WER_SKL' || 'WER_WSK' ?};
   DEFA.win_sel(_okno);
   {? WYRAZ.TYP='S'
   || DEFA.win_edit('RED_SKL')
   |? WYRAZ.TYP='I'
   || DEFA.win_edit('RED_ILO')
   |? WYRAZ.TYP='W'
   || DEFA.win_edit('RED_WSK')
   ?};
   _akc:='';
   {? _akcspr | GR_SIK.FIRMA<>REF.FIRMA
   || _akc+='DPUBO:DB'
   ?};
   DEFA.actions(_okno,_akc);
   UNPAR.P1_AE:=exec('get_lang','lang',DEFW.ref());
   UNPAR.P2_AE:={? DEFA.get() || exec('get_lang','lang',GR_KOL.ref()) || '' ?};
   {? _a || DEFA.select() || DEFA.first(); _wy:='DEFA' ?}
|| ALG_PAR.win_sel('WER1');
   _wyl:={? _akcspr | WYRAZ.WIERSZ().GRUPA().FIRMA<>REF.FIRMA & SIK.ROK1().PLAN_GR='T' || 'DPUB:DB' || '' ?};
   _wyl+={? GR_SIK.FIRMA<>REF.FIRMA & SIK.ROK1().PLAN_GR='T' || 'D' || '' ?};
   ALG_PAR.actions('WER1',_wyl);
   ALG_PAR.hdr_sel();
   SIK.WYL:='N';
   exec('prefix_alg_par','!zws_par_fspr');
   UNPAR.P1_AE:=exec('get_lang','lang',DEFW.ref());
   UNPAR.P2_AE:=exec('get_lang','lang',GR_KOL.ref());
   {? _a
   || {? GR_SIK.FIRMA=REF.GRUPA & var_press('Konsolid')>0
      || _fmlar:="
            {? #kol_wrs & (GR_KOL.prefix; GR_KOL.seek(kol_wrs))
            || GR_KOL.index('LP2');
               GR_KOL.prefix(GR_KOL.GRUPA,'F');
               GR_KOL.find_key(GR_KOL.LP)
            ?}
         ";
         _wer:=ALG_PAR.grp_make();
         ALG_PAR.grp_sel(_wer,ALG_PAR, ALG_PAR.win_sel('?'),'Składniki wiersza'@,_fmlar,,,,"exec('prefix_alg_par','!zws_par_fspr','N')",,,,'maximized_with_title');
         ALG_PAR.grp_sel(_wer,ALG_PAR, ALG_PAR.win_sel('?'),'Składniki wiersza dla wyłączeń'@,_fmlar,,,,"exec('prefix_alg_par','!zws_par_fspr','T')",,,,'maximized_with_title');
         ALG_PAR.win_sel(_wer)
      ?};
      ALG_PAR.select()
   || ALG_PAR.first(); _wy:='ALG_PAR'
   ?}
?};
DEFW.cntx_pop();
_wy


\defw_ber
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: akcja przed Rekord w tabeli DEFW (okienko WER)
::  OLD: \defw_ber/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
exec('bv_lang','lang');
DEFW.cntx_psh(); DEFW.prefix();
WYRAZ.DEFW_NAD:={? DEFW.seek(DEFW.DEFW_NAD,) || DEFW.KOD || '' ?};
DEFW.cntx_pop();
WYRAZ.ALGORYTM:=exec('alg_naz','sprfin',1);
exec('dokres','sprfin',DEFW.DOKRES);
exec('algorytm','sprfin',DEFW.ALGORYTM);
_gray:='';
{? ~DEFW.PLIK || _gray+='O(O)' ?};
{? DEFW.ALGORYTM='P' | DEFW.ALGORYTM='R' || _gray+='A' ?};
DEFW.actions_grayed(DEFW.win_sel('?'),_gray);
exec('rekprzed','color','DEFW#01')


\defw_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Powiazania wiersza z innymi wierszami
::  OLD: \defw_pow/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TTPOW');
TTPOW:=tab_tmp(3,
:: 'POLE','TYP','Nazwa w oknie',
   'GR_SIK','STRING[10]','Sprawozdanie',
   'GR_KOL','STRING[40]','Kolumna',
   'DEFW_K','STRING[15]','Wiersz',
   'DEFW_N','STRING[50]',''
);
_o:=TTPOW.mk_sel(,'P',1,,,,,,'U');
TTPOW.win_act(_o,,'Kolejność');
TTPOW.win_sel(_o);
GR_SIK.cntx_psh(); DEFW.cntx_psh();
WYRAZ.WIERSZ:=DEFW.ref;
DEFA.index('SKLADNIK'); DEFA.prefix(WYRAZ.WIERSZ);
{? DEFA.first()
|| {!
   |? TTPOW.GR_SIK:=DEFA.WYR().GRUPA().SKROT;
      TTPOW.GR_KOL:=DEFA.KOL().NAZWA;
      TTPOW.DEFW_K:=DEFW.KOD;
      TTPOW.DEFW_N:=DEFW.NAZWA;
      TTPOW.add();
      DEFA.next()
   !}
?};
DEFK.index('DEFW'); DEFK.prefix(WYRAZ.WIERSZ);
{? DEFK.first()
|| {!
   |? {? DEFK.DEFW
      || TTPOW.GR_SIK:=DEFK.DEFW().GRUPA().SKROT;
         TTPOW.GR_KOL:=DEFK.GR_KOL().NAZWA;
         TTPOW.DEFW_K:='';
         TTPOW.DEFW_N:='';
         TTPOW.add()
      ?};
      DEFK.next()
   !}
?};
TTPOW.select();
GR_SIK.cntx_pop(); DEFW.cntx_pop();
VAR_DEL.delete('TTPOW');
1


\defw_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [8.50]
:: OPIS: Formula na wyswietl dla tabeli DEFW
::  OLD: \defw_wys/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.win_edit({? DEFW.SLU<>null
              || 'REDS2'
              |? DEFW.TAB<>''
              || 'REDK2'
              || 'REDN'+{? GR_SIK.TYP_KLIK='TW'  || '_QSW' |? 1+GR_SIK.TYP_KLIK='T' || '_QS'  || '2' ?}
              ?});
GR_SIK.cntx_psh();
DEFW.efld_opt(DEFW.win_edit('?'),'enable='+$(DEFW.GRUPA().E_KOD<>''),DEFW,'E_KOD');

GR_SIK.cntx_pop();
DEFW.display()


\defw_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: obsluga akcji Dolacz w tabeli DEFW
::   WE: _a = 1  zwykly - podstawowy bez slownika i kartoteki lub zlozony (niepusta dziedzina)
::       _a = 3  ze slownikiem (niepusta dziedzina)
::       _a = 4  z kartoteka (niepusta dziedzina)
::       _a = 10 zwykly - podstawowy bez slownika i kartoteki lub zlozony (pusta dziedzina)
::       _a = 30 ze slownikiem (pusta dziedzina)
::       _a = 40 z kartoteka (pusta dziedzina)
::       _a = 2  na strzalke w dol (niepusta dziedzina)
::  OLD: \defw_new/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
exec('algorytm','sprfin','F');
exec('dokres','sprfin','K');
WYRAZ.KOD:=''; exec('bv_lang','lang',null);
WYRAZ.DEFW_NAD:='';
_qs:={? GR_SIK.TYP_KLIK='TW'  || '_QSW' |? 1+GR_SIK.TYP_KLIK='T' || '_QS'  || '2' ?};
{? _a=10
|| WYRAZ.LP:=1; DEFW.win_edit('REDN'+_qs); SIK.WYBOR:=''
|? _a=30
|| WYRAZ.LP:=1; DEFW.win_edit('REDS2'); SIK.WYBOR:='S'
|? _a=40
|| WYRAZ.LP:=1; DEFW.win_edit('REDK2'); SIK.WYBOR:='K'
|? _a=1
|| WYRAZ.LP:=DEFW.LP; DEFW.win_edit('REDN'+_qs); SIK.WYBOR:=''
|? _a=3
|| WYRAZ.LP:=DEFW.LP; DEFW.win_edit('REDS2'); SIK.WYBOR:='S'
|? _a=4
|| WYRAZ.LP:=DEFW.LP; DEFW.win_edit('REDK2'); SIK.WYBOR:='K'
|| WYRAZ.LP:=DEFW.LP+1;
   _ask:={? 1+GR_SIK.TYP_KLIK='T'
         || FUN.choice('Dodać nowy wiersz?'@,1,'Zwykły'@)
         || FUN.choice('Dodać nowy wiersz?'@,1,'Zwykły'@,'Ze &słownikiem użytk.'@,'Z dowolną &kartoteką'@)
         ?};
   {? _ask
   || {? _ask=1
      || DEFW.win_edit('REDN'+_qs); SIK.WYBOR:=''
      |? _ask=2
      || DEFW.win_edit('REDS2'); SIK.WYBOR:='S'
      |? _ask=3
      || DEFW.win_edit('REDK2'); SIK.WYBOR:='K'
      ?};
      strzwdol:=0;
      DEFW.blank(); DEFW.LP:=WYRAZ.LP; DEFW.add();
      exec('enable','lang',DEFW);
      DEFW.efld_opt(DEFW.win_edit('?'),'enable='+$(GR_SIK.E_KOD<>''),DEFW,'E_KOD');
      {? DEFW.edit("{? SIK.WYBOR=''
                    || __CHK.record(DEFW,,'KOD','NAZWA','ALGORYTM')
                    |? SIK.WYBOR='K'
                    || __CHK.record(DEFW,,'KOD','NAZWA','ALGORYTM','TAB','INDEX','KOD','TR')
                    |? SIK.WYBOR='S'
                    || __CHK.record3(
                          DEFW,'KOD',,
                          DEFW,'NAZWA',,
                          DEFW,'ALGORYTM',,
                          SIK,'SLU','Słownik'
                       )
                    ?}")
      || {? DEFW.put || exec('upd_lang','lang') || DEFW.del() ?}
      || DEFW.del()
      ?};
      &strzwdol
   ?}
?};
exec('enable','lang',DEFW);
DEFW.efld_opt(DEFW.win_edit('?'),'enable='+$(GR_SIK.E_KOD<>''),DEFW,'E_KOD');

1


\defw_pon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po akcji Dolacz w tabeli DEFW
::  OLD: \defw_pon/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.cntx_psh();
do;
exec('upd_lang','lang');
{? DEFW.find_key(WYRAZ.LP)
|| {? DEFW.last
   || {!
      |? DEFW.LP>=WYRAZ.LP
      |! DEFW.LP+=1;
         {? ~DEFW.put() || undo() ?};
         DEFW.prev()
      !}
   ?}
?};
{? DEFW.find_key(0)
|| DEFW.LP:=WYRAZ.LP;
   {? ~DEFW.put || undo() ?}
|| undo()
?};
end;
DEFW.cntx_pop();0


\defwpop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [8.50]
:: OPIS: Formula na popraw przed dla tabeli DEFW
::  OLD: \defwpop/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEFW.SLU<>null
|| SIK.WYBOR:='S'; DEFW.win_edit('REDS2')
|? DEFW.TAB<>''
|| SIK.WYBOR:='K'; DEFW.win_edit('REDK2')
|| SIK.WYBOR:='';
   _qs:={? GR_SIK.TYP_KLIK='TW'  || '_QSW' |? 1+GR_SIK.TYP_KLIK='T' || '_QS'  || '2' ?};
   DEFW.win_edit('REDN'+_qs)
?};
exec('bv_lang','lang');
DEFW.efld_opt(DEFW.win_edit('?'),'enable='+$(GR_SIK.E_KOD<>''),DEFW,'E_KOD');

1


\dw_u_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Przed akcja grupow Usun tabeli DEFW
::  OLD: \dw_u_ag/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
exec('przenum','!zws_par_fspr','DEFW');
exec('usun_ag','sprfin')


\przenum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: Przenumerowanie wierszy tabeli _a po usuwaniu grupowym
::   WE: _a - akronim tabeli
::  OLD: \przenum/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=($('#'+_a+'.ref'))(); _lp:=1;
_pet:=($(_a+'.first'))();
{? _a='DEFA'
|| DEFA.cntx_psh();
   DEFA.index('LP');
   DEFA.prefix(DEFA.WYR);
   _kol:=DEFA.KOL
|? _a='ALG_PAR'
|| ALG_PAR.cntx_psh();
   ALG_PAR.index('ALG_PAR6'); ALG_PAR.prefix(ALG_PAR.FIRMA,ALG_PAR.WYL,ALG_PAR.DEFW,ALG_PAR.GR_KOL,ALG_PAR.ROK,ALG_PAR.MIEJSCE)
?};
{!
|? _pet
|! {? _a='DEFA' & _kol<>DEFA.KOL || _kol:=DEFA.KOL; _lp:=1 ?};
   ($(_a+'.LP:='+$_lp))(); ($(_a+'.put'))(); _lp+=1;
   _pet:=($(_a+'.next'))()
!};
{? _a='DEFA' || DEFA.cntx_pop() |? _a='ALG_PAR' || ALG_PAR.cntx_pop() ?};
($(_a+'.seek('+$_ref+',)'))()


\defw_por
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Rekord po w oknach wertowania tabeli DEFW
::  OLD: \defw_por/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
_a:={? SIK.WYBOR=''
    || __CHK.record(DEFW,,'KOD','NAZWA','ALGORYTM')
    |? SIK.WYBOR='K'
    || _a:=__CHK.record2(DEFW,'KOD',,'NAZWA',,'ALGORYTM',,'TAB',,'INDEX',,'KODF','Kod (formuła)','TR','Nazwa (formuła)')
    |? SIK.WYBOR='S'
    || __CHK.record3(
         DEFW,'KOD',,
         DEFW,'NAZWA',,
         DEFW,'ALGORYTM',,
         SIK,'SLU','Słownik'
       )
    ?};
{? _a='' & (DEFW.ALGORYTM='F' | DEFW.ALGORYTM='R') || _a:=__CHK.record(DEFW,,'DOKRES') ?};
{? _a=''
|| DEFW.cntx_psh(); DEFW.index('GRUPA'); DEFW.prefix(GR_SIK.ref());
   _kod:=DEFW.KOD; _ref:=DEFW.ref();
   {? DEFW.find_key(_kod) & DEFW.KOD=_kod & (-menu_txt<>'popraw' | _ref<>DEFW.ref())
   || FUN.info('Istnieje wiersz sprawozdania o kodzie: %1.'@[_kod]);
      _a:='KOD'
   ?};
   DEFW.cntx_pop()
?};
{? _a=''
|| WYRAZ.WIERSZ:=DEFW.ref();
   WYRAZ.GRUPA:=DEFW.GRUPA; WYRAZ.GRUPA();
   WYRAZ.KOD:=DEFW.KOD;
   {? -menu_txt='popraw' || exec('upd_lang','lang') ?};
   DEFW.cntx_psh(); DEFW.index('GRUPA'); DEFW.prefix(GR_SIK.ref());
   _ref:={? DEFW.find_key(WYRAZ.DEFW_NAD) & DEFW.KOD=WYRAZ.DEFW_NAD || #DEFW.ref() ?};
   DEFW.cntx_pop();
   DEFW.DEFW_NAD:=_ref
?};
_a


\bedefwup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Przed redakcja pola DEFW_NAD zmiennej WYRAZ
::  OLD: \bedefwup/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEFW.ALGORYTM='F'
|| {? -menu_txt()<>'popraw'
   || 1
   || _ok:=1;
      GR_SIK.cntx_psh();
      _espr:=DEFW.GRUPA().E_KOD<>'';
      GR_SIK.cntx_pop();
      {? ~_espr
      || DEFA.cntx_psh(); DEFA.index('SKLADNIK'); DEFA.prefix(DEFW.ref());
         _ok:=~DEFA.first();
         DEFA.cntx_pop()
      ?};
      _ok
   ?}
?}


\f3defwup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Na klawisz F3 pola DEFW_NAD zmiennej WYRAZ
::  OLD: \f3defwup/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.cntx_psh(); DEFW.index('GRUPA'); DEFW.prefix(GR_SIK.ref());
DEFW.find_key(fld());
DEFW.win_sel('SLOTEN');
_defw_kod:=WYRAZ.DEFW_NAD;
_lang:=SKID.LANG_NAZ;
{? DEFW.select(,1)
|| _kod:=DEFW.KOD;
   fld(_kod)
|| _kod:=0;
   WYRAZ.DEFW_NAD:=_defw_kod
?};
SKID.LANG_NAZ:=_lang;
DEFW.cntx_pop();
_kod


\aedefwup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Po redakcji pola DEFW_NAD zmiennej WYRAZ
::  OLD: \aedefwup/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || return(1) ?};
DEFW.cntx_psh(); DEFW.index('GRUPA'); DEFW.prefix(GR_SIK.ref());
_ok:=1; _ref:=DEFW.ref();
{? DEFW.find_key(fld)
|| {? DEFW.ref()=_ref | DEFW.DEFW_NAD=#_ref
   || FUN.info('Nieprawidłowe wskazanie na wiersz nadrzędny.'@);
      _ok:=0
   || fld(DEFW.KOD)
   ?}
|| FUN.info('Wprowadzono nieprawidłowy kod wiersza.'@);
   _ok:=0
?};
DEFW.cntx_pop();
_ok


\bl_alg_par_firm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [12.10]
:: OPIS: Wartosc poczatkowa ALG_PAR.FIRMA
::  OLD: \bl_alg_par_firma/skid_kns.fml
::----------------------------------------------------------------------------------------------------------------------
REF.S_FIRMA


\wier_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: blank pola DEFA.WYR
::  OLD: \wier_bl/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.WIERSZ


\kol_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: blank pola DEFA.KOL
::  OLD: \kol_bl/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.KOLUMNA


\wz_algp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Formula na wzorzec dla ALG_PAR.P1-P8
::   WE: _a - numer parametru (integer 1..8)
::  OLD: \wz_algp/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? ($('SIK.NP'+$_a+'*\'Maska konta\'>0' ))()
|| exec('wz_konto','edkonto','ALG_PAR','P'+$_a)
|| ''
?}


\param_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS i RL [7.20]
:: OPIS: procedura przed redakcja pol ALG_PAR.P1 ... ALG_PAR.P8;
::       sprawdza, czy argument funkcji jest pustym stringiem i blokuje
::       redakcje pola
::   WE: _a - nazwa parametru (string 20)
::   WY: 0 - pole nieredagowalne, 1 - pole redagowalne
::  OLD: \param_be/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=var_pres('TYP_DOD')>0 & TYP_DOD=0;
{? _ok=0
|| {? _a*'Wyróżnik (kod)'>0
   || _ok:=exec('sl_wyroz','!zws_par_fspr')<>null
   |? _a*'Maska konta'>0
   || exec('be_konto','edkonto','ALG_PAR','P'+$_a)
   || form(_a)<>''
   ?}
?}


\param_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS i RL [7.20]
:: OPIS: procedura na F3 pol ALG_PAR.P1 ... ALG_PAR.P8;
::       sprawdza nazwe parametru i w zaleznosci od tego udostepnia odpowiedni
::       slownik
::   WE: _a - numer parametru (integer 1..8)
::       _b - nazwa parametru (string 20)
::  OLD: \param_f3/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
exec('par_f3_f','!zws_par_fspr',_a,_b)


\par_f3_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.22]
:: OPIS: procedura na F3  pol ALG_PAR.P1 ... ALG_PAR.P8
::       Sprawdza nazwę parametru i w zaleznosci od tego udostepnia odpowiedni
::       slownik (FK)
::  WE: _a - numer parametru (integer 1..8)
::      _b - nazwa parametru (string 20)
::  OLD: \par_f3_f/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
par:=($('ALG_PAR.P'+$_a))();
_zm:=1;
{? _b*'Maska konta'>0
|| exec('f3_konto','edkonto','ALG_PAR','P'+$_a);($('par:=ALG_PAR.P'+$_a))();_zm:=0
|? _b*'Strona konta'>0
|| exec('p_str_f3','!zws_par_fspr')
|? _b*'Jednostka księgowa (skrót)'>0
|| exec('p_all_f3','!zws_par_fspr','ODD','ODDZIALY',REF.FIRMA,'WYB','OD')
|? _b*'Waluta (symbol)'>0
|| exec('p_all_f3','!zws_par_fspr','WAL','WAL_SYM','','WYB','SYM')
|? _b*'Wyróżnik (słownik)'>0
|| exec('p_swr_f3','!zws_par_fspr','WER2')
|? _b*'Wyróżnik (kod)'>0
|| exec('p_wyr_f3','!zws_par_fspr','ONE_SEL')
|? _b*'Typ rozrachunku'>0
|| exec('p_tr_f3','!zws_par_fspr')
|? _b*'Klasa ewidencji VAT'>0
|| exec('p_all_f3','!zws_par_fspr','KVAT','SYM','','WERB','SYM')
|? _b*'Rejestr VAT'>0
|| exec('p_all_f3','!zws_par_fspr','RVAT','SYM',REF.FIRMA,'WYB2','SYM')
|? _b*'Grupa podatkowa'>0
|| exec('p_grp_f3','!zws_par_fspr','ONE_SEL')
|? _b*'Uwzględniać konto wyniku finan'>0
|| exec('p_kwf_f3','!zws_par_fspr')
::Poczatek modyfikacji dla Maclex Fiks 12-10-2009 AK [1120]
|? _b*'Tabela budżetu'>0
|| popup(0,_b,
      'ML_CZ - Części',,"par:='ML_CZ'",
      'ML_DZ - Działy',,"par:='ML_DZ'",
      'ML_RZ - Rozdziały',,"par:='ML_RZ'",
      'ML_PG - Paragrafy',,"par:='ML_PG'",
      'ML_PP - Pozycje paragrafowe',,"par:='ML_PP'")
|? _b*'Typ (prefix)'>0
||  exec('p_con_f3','ml_xpert','BUD_KON','ID')
|? _b*'Typ planu'>0
||  exec('p_con_f3','ml_xpert','PLANY','ID')
|? _b*'Poziom planu'>0
||  exec('poz_mlgr_f3','ml_gr',SIK.ROK1,1)
|? _b*'Poziom'>0
||  exec('poz_mlgr_f3','ml_gr',SIK.ROK1)
|? _b*'Hierarchia słowników'>0
||  exec('mlgr_f3','ml_gr',SIK.ROK1)
|? _b*'Sprawozdanie MSDB'>0
||  exec('msdbf3','ml_xpert')
|? _b*'Kolumna MSDB'>0
||  exec('kmsdbf3','ml_xpert')
|? _b*'Wiersz MSDB'>0
||  exec('wmsdbf3','ml_xpert')
|? _b*'Paragraf'>0
||  exec('planwpf3','ml_xpert')
|? _b*'Status zatrudnienia'>0
||  exec('planwsf3','ml_xpert')
|? _b*'Wymagalne?'>0
||  exec('p_tnw_f3','!zws_par_fspr')
|? _b*'Korekta'>0
||  exec('p_tn_f3','!zws_par_fspr')
::Koniec modyfikacji dla Maclex Fiks
|| _zm:=0
?};
($('ALG_PAR.P'+$_a+':=par'))();
{? _zm
|| _zm:=par; &par; _zm
|| 1
?}


\param_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS i RL [7.20]
:: OPIS: procedura po redakcji  pol ALG_PAR.P1 ... ALG_PAR.P8;
::       kontroluje poprawnosc wypelnienia pol w zaleznosci od
::       nazwy parametru i formuly (pole ALG_PAR.FORMULA).
::   WE: _a- numer parametru (integer 1..8)
::       _b- nazwa parametru (string 20)
::       [_c]-czy zakonczono redagowanie (1)-tak, (0)-nie, (-1)-brak
::   WY: 0 - niepoprawne wypelnienie pola --> powtorna redakcja
::       1 - poprawne wypelnienie pola --> zakonczenie redakcji
::  OLD: \param_po/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=2 || _c:=-1 ?};
exec('par_po_f','!zws_par_fspr',_a,_b,_c)


\sl_wyroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.20]
:: OPIS: Procedura sprawdza wypelnienie parametru: 'Wyróżnik (słownik):'
::       i jesli jest wypelniony znajduje ref slownika o podanej nazwie.
::   WY: ref SLU slownika o nazwie wypelnionej w parametrze 'Wyróżnik (słownik):'
::       lub null
::  OLD: \sl_wyroz/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_naz:='';
{! _i:=1..8
|! {? ($('SIK.NP'+$_i))()*'Wyróżnik (słownik)'>0
   || _naz:=($('ALG_PAR.P'+$_i))()
   ?}
!};
{? _naz<>'' || exec('jaki_slu','!zws_par_fspr',_naz) || null ?}


\jaki_slu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.20]
:: OPIS: Znajduje ref slownika uzytkownika dla aktualnego systemu
::       o podanej nazwie.
::   WE: _a - nazwa slownika
::   WY: ref SLU slownika o podanej nazwie lub null
::  OLD: \jaki_slu/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
SLU.cntx_psh();
SLU.index('NAZ');
SLU.prefix(_a);
{? SLU.first() || _ref:=SLU.ref || _ref:=null ?};
SLU.cntx_pop();
_ref


\p_str_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: obsluga F3 parametru Strona Konta
::  OLD: \p_str_f3/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
popup(0,'Wybierz stronę konta:'@,
   'Wn - Strona Wn'@,,"par:='Wn'",
   'Ma - Strona Ma'@,,"par:='Ma'")


\p_all_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS [7.22]
:: OPIS: Procedura do obslugi F3 parametrow wierszy podst. (tabela ALG_PAR)
::   WE: _a - akronim tabeli
::       _b - akronim indeksu
::       _c - prefix
::       _d - akronim okienka
::       _e - akronim pola zawierajacego wartosc parametru
::   WY: par - string zawierajacy tresc parametru
::  OLD: \p_all_f3/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=($_a)();
_tab.cntx_psh();
_tab.index(_b);
_tab.prefix(_c);
_tab.win_sel(_d);
{? par<>'' & type_of(_tab.ndx_vfld(_tab.ndx_no(_tab.index('?')),1))=type_of(par)
|| _tab.find_key(par)
|| _tab.first()
?};
{? _tab.select(,1) || par:=($(_a+'.'+_e))() ?};
_tab.cntx_pop()


\p_swr_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: obsluga F3 parmetru Wyroznik (slownik)
::   WE: _a - okienko
::  OLD: \p_swr_f3/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
SLU.cntx_psh();
SLU.index('NAZ'); SLU.prefix();
SLU.win_sel(_a);
{? SLU.select() || par:=SLU.NAZ ?};
SLU.cntx_pop()


\p_wyr_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: obsluga F3 parametru Wyroznik (kod)
::   WE: _a - akronim okienka
::  OLD: \p_wyr_f3/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh();
SLO.index('SL');
_slu:=exec('sl_wyroz','!zws_par_fspr');
{? _slu
|| SLO.prefix(_slu);
   {? par<>''
   || SLO.find_key(par)
   || SLO.first()
   ?};
   SLO.win_sel(_a);
   SLU.cntx_psh(); SLU.prefix(); SLU.seek(_slu);
   {? SLO.select(,1) || par:=SLO.KOD ?};
   SLU.cntx_pop()
|| FUN.info('Nie podano słownika wyróżnika.'@)
?};
SLO.cntx_pop()


\p_tr_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: obsluga F3 parametru Typ rozrachunku
::  OLD: \p_tr_f3/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
popup(0,'Wybierz typ rozrachunków'@,
   'NAL - należność'@,,"par:='NAL'",
   'ZOB - zobowiązanie'@,,"par:='ZOB'",
   'RMK - rozliczenie międzyokresowe kosztów'@,,"par:='RMK'",
   'RMP - rozliczenie międzyokresowe przychodów'@,,"par:='RMP'",
   'NOD - odsetki od należności'@,,"par:='NOD'",
   'ZOD - odsetki od zobowiązań'@,,"par:='ZOD'",
   'INN - rozrachunek techniczny'@,,"par:='INN'"
)


\p_grp_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: obsluga F3 parmetru Grupa podatkowa
::   WE: _a - akronim okienka
::  OLD: \p_grp_f3/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh();
SLO.index('SL');
SLO.prefix(_ref:=exec('jaki_slu','!zws_par_fspr','~GRUPY PODATKOWE'));
SLO.win_sel(_a);
SLU.cntx_psh(); SLU.seek(_ref);
{? par<>''
|| SLO.find_key(par)
|| SLO.first()
?};
{? SLO.select(,1) || par:=SLO.KOD ?};
SLU.cntx_pop();
SLO.cntx_pop()


\p_kwf_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.22]
:: OPIS: obsluga F3 parametru 'Czy uwzgledniac konto wyniku finan.'
::  OLD: \p_kwf_f3/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
popup(0,'Czy uwzględniać konto wyniku finansowego?'@,
   'Tak'@,,"par:='Tak'",
   'Nie'@,,"par:='Nie'")


\p_tnw_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: obsluga F3 parametru Wymagalne?
::  OLD: \p_tnw_f3/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
popup(0,'Wybierz T/N'@,
   'T - wymagalne'@,,"par:='T'",
   'N - niewymagalne'@,,"par:='N'")


\p_tn_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WS [12.10]
:: OPIS: Wybor tak/nie
::  OLD: \p_tn_f3/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
popup(0,'Wybierz T/N'@,
   'Tak'@,,"par:='T'",
   'Nie'@,,"par:='N'")


\par_po_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL, JS [7.22]
:: OPIS: procedura po redakcji  pol ALG_PAR.P1 ... ALG_PAR.P8, kontroluje poprawnosc
::       wypelnienia pol w zaleznosci od nazwy parametru i formuly (ALG_PAR.FORMULA).
::       (FK)
::   WE: _a - numer parametru (integer 1..8)
::       _b - nazwa parametru (string 20)
::       _c - czy zakonczono redagowanie (1)-tak, (0)-nie, (-1)-brak
::   WY: 0 - niepoprawne wypelnienie pola --> powtorna redakcja
::       1 - poprawne wypelnienie pola --> zakonczenie redakcji
::  OLD: \par_po_f/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=($('ALG_PAR.P'+$_a))();
_skrot:=ALG_PAR.FORMULA().SKROT;
_x:=1;
{? _par<>''
|| {? _b*'Maska konta'>0
   || {? _c=-1 || _xx:=1 || _xx:=exec('ae_konto','edkonto',_c,'ALG_PAR','P'+$_a,1,2,0) ?}
   |? _b*'Strona konta'>0
   || _x:=exec('p_str_po','!zws_par_fspr',_a,_par)
   |? _b*'Jednostka księgowa (skrót)'>0
   || _x:=exec('p_all_po','!zws_par_fspr',_a,_par,'ODD','ODDZIALY','OD','',REF.FIRMA)
   |? _b*'Waluta (symbol)'>0
   || _x:=exec('p_all_po','!zws_par_fspr',_a,_par,'WAL','WAL_SYM','SYM','')
   |? _b*'Wyróżnik (słownik)'>0
   || _x:=exec('p_swr_po','!zws_par_fspr',_a,_par)
   |? _b*'Wyróżnik (kod)'>0
   || _x:=exec('p_wyr_po','!zws_par_fspr',_a,_par)
   |? _b*'Rejestr VAT'>0
   || _x:=exec('p_all_po','!zws_par_fspr',_a,_par,'RVAT','SYM','SYM','',REF.FIRMA)
   |? _b*'Grupa podatkowa'>0
   || _x:=exec('p_grp_po','!zws_par_fspr',_a,_par)
   |? _b*'Uwzględniać konto wyniku finan'>0
   || _x:=exec('p_kwf_po','!zws_par_fspr',_a,_par)
   |? _b*'Typ rozrachunku'>0
   || _x:=exec('p_tr_po','!zws_par_fspr',_a,_par)
   |? _b*'Od ilu dni po terminie płatn.'>0
   || _par:=exec('p_ter_po','!zws_par_fspr',_a,_par)
::Poczatek modyfikacji dla Maclex Fiks 12-10-2009 AK [1120]
   |? _b*'Tabela budżetu'
   || _x:={? _par='ML_CZ' | _par='ML_DZ' | _par='ML_RZ' | _par='ML_PG'| _par='ML_PP' || 1 || 0 ?}
   |? _b*'Typ (prefix)'
   || _x:=exec('p_con_po','ml_xpert',_a,_par,'BUD_KON','ID')
   |? _b*'Poziom planu'>0
   ||  _x:=exec('p_mlgr_poz_po','ml_gr',_a,_par,SIK.ROK1,1)
   |? _b*'Poziom'>0
   ||  _x:=exec('p_mlgr_poz_po','ml_gr',_a,_par,SIK.ROK1)
   |? _b*'Hierarchia słowników'>0
   ||  _x:=exec('p_mlgr_po','ml_gr',_a,_par,SIK.ROK1)
   |? _b*'Wymagalne?'>0
   || _x:='TN'*_par
   |? _b*'Korekta'>0
   || _x:='TN'*_par
::Koniec modyfikacji dla Maclex Fiks
   |? _b*'Do ilu dni po terminie płatn.:'>0
   || _par:=exec('p_ter_po','!zws_par_fspr',_a,_par,1)
   |? _b*'Waluta'>0
   || _x:=exec('p_all_po','!zws_par_fspr',_a,_par,'WAL','WAL_SYM','SYM','')
   |? _b*'Dok. Wew./Zew./BO-BM'>0
   || _x:=exec('p_dok_po','!zws_par_fspr',_a,_par)
   |? _b*'Dok. Przych./Rozch.'>0
   || _x:=exec('p_dpr_po','!zws_par_fspr',_a,_par)
   |? _b*'Płeć'
   || _x:='KM'*_par
   |? _b*'Czy pełne etaty?'
   || _x:='TN'*_par
   |? _b*'Czy pełnoletni?'
   || _x:='TN'*_par
   || _x:=1
   ?};
   {? _x=0
   || FUN.info(
         'Niewłaściwa zawartość parametru: %1.\n'
         'Proszę wybrać właściwą zawartość ze słownika.'@[{? _b+1=':' || _b-1 || _b ?}]
      )
   ?}
?};
{? _x
|| {? _b*'Maska konta'>0
   || {? _par<>'' || _xx || {? _c || FUN.info('Podaj maskę konta.'@) ?}; 0 ?}
   |? _par='' & _b*'Wyróżnik (słownik)'>0
   || ($('ALG_PAR.P'+$(_a+1)+':=\'\''))();1
   |? _par='' & _b*'Strona konta'>0 & (_skrot*'SAL'>0 | _skrot*'OBR'>0 | (4+_skrot)*'BO'>0 | _skrot*'ROZNI'>0
      | _skrot*'ZM_STA'>0)
   || FUN.info('Podaj stronę konta.'@); 0
   |? _par='' & _b*'Typ rozrachunku'>0
   || FUN.info('Podaj typ rozrachunków.'@); 0
   |? _par='' & _b*'Od ilu dni po terminie płatn.'>0
   || FUN.info('Podaj liczbę dni po terminie płatności.'@); 0
   |? _par<>'' & _b*'Do ilu dni po terminie płatn.:'>0 & #_par<=#ALG_PAR.P6
   || FUN.info(
         'Parametr: Do ilu dni po terminie płatn.\nmniejszy lub równy niż\n '
         'parametr: Od ilu dni po terminie płatn.'@
      );0
   |? _par='' & _b*'Typ (prefix)'
   || FUN.info('Podaj typ kont budżetowych.'@); 0
   |? _par='' & _b*'Poziom'>0
   || FUN.info('Podaj poziom agregacji dla hierarchii.'@); 0
   |? _par='' & _b*'Hierarchia słowników'>0
   || FUN.info('Podaj hierarchię słownikiów.'@); 0
   || 1
   ?}
?}


\p_str_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po redakcji parametru Strona konta
::   WEL _a - numer parametru
::       _b - tresc parametru
::  OLD: \p_str_po/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? -_b='w' | -_b='wn' || _b:='Wn' ?};
{? -_b='m' | -_b='ma' || _b:='Ma' ?};
_x:={? _b<>'Wn' & _b<>'Ma'
    || 0
    || ($('ALG_PAR.P'+$_a+':='''+_b+''''))();
       1
    ?}


\p_all_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS [7.20]
:: OPIS: Procedura po redakcji parametru (tabela ALG_PAR)
::   WE:  _a - numer parametru
::        _b - tresc parametru
::        _c - akronim tabeli
::        _d - indeks
::        _e - pole zawierajace tresc parametru
::        _f - pole zawierajace dodatkowy prefix
::       [_g]- dodatkowy prefix
::   WY: par - string zawierajacy tresc parametru
::  OLD: \p_all_po/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=($_c)();
_tab.cntx_psh();
_tab.index(_d);
{? var_pres('_g')>0
|| _tab.prefix(_g,_f+_b)
|| _tab.prefix(_f+_b)
?};
_x:={? _tab.first() || ($('ALG_PAR.P'+$_a+':='+_c+'.'+_e))();1 || 0 ?};
_tab.cntx_pop();
_x


\p_swr_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po redakcji Wyroznik (slownik)
::   WE: _a - numer parametru
::       _b - tresc parametru
::  OLD: \p_swr_po/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
SLU.cntx_psh();
SLU.index('NAZ');
SLU.prefix(_b);
_x:={? SLU.first() || ($('ALG_PAR.P'+$_a+':=SLU.NAZ'))();1 || 0 ?};
SLU.cntx_pop();
_slo:=($('ALG_PAR.P'+$_a))();
{? _x & form(_slo)<>''
||
:: sprawdza poprawnosc kodu wyroznika
   _wyr:=($('ALG_PAR.P'+$(_a+1)))();
   SLO.cntx_psh();
   SLO.index('SL');
   SLO.prefix(exec('sl_wyroz','!zws_par_fspr'),_wyr);
   {? ~SLO.first() || ($('ALG_PAR.P'+$(_a+1)+':=\'\''))() ?};
   SLO.cntx_pop()
|| ($('ALG_PAR.P'+$(_a+1)+':=\'\''))()
?};
_x


\p_wyr_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po redakcji Wyroznik (kod)
::   WE: _a - numer parametru
::       _b - tresc parametru
::  OLD: \p_wyr_po/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh();
SLO.index('SL');
SLO.prefix(exec('sl_wyroz','!zws_par_fspr'),_b);
_x:={? SLO.first() || 1 || 0 ?};
SLO.cntx_pop();
_x


\p_grp_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po redakcji parametru Grupa podatkowa
::   WE: _a - numer parametru
::       _b - tresc parametru
::  OLD: \p_grp_po/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh();
SLO.index('SL');
SLO.prefix(exec('jaki_slu','!zws_par_fspr','~GRUPY PODATKOWE'),_b);
_x:={? SLO.first() || 1 || 0 ?};
SLO.cntx_pop();
_x


\p_tr_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po redakcji parametru Typ rozrachunku
::   WE: _a - numer parametru
::       _b - tresc parametru
::  OLD: \p_tr_po/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? -_b<>'nal' & -_b<>'zob' & -_b<>'rmk' & -_b<>'rmp' & -_b<>'inn' & -_b<>'nod' & -_b<>'zod'
   & -_b<>'n' & -_b<>'z'
|| 0
|| ($('ALG_PAR.P'+$_a+':=~-ALG_PAR.P'+$_a))(); 1
?}


\p_ter_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po redakcji parametru Od ilu dni po terminie platn.
::   WE: _a - numer parametru
::       _b - tresc parametru
::  OLD: \p_ter_po/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? #_b<>0 | form(_b)='0'
|| ($('ALG_PAR.P'+$_a+':='''+form($#_b,-20)+''''))()
|| ($('ALG_PAR.P'+$_a+':='''''))()
?}


\p_dok_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po redakcji parametru Dok.Wew/Zew
::   WE: _a - numer parametru
::       _b - tresc parametru
::  OLD: \p_dok_po/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:='';
_dl:=+_b;
{? _dl+'wewnętrzne'=-_b>0 || _ok:='Wewnętrzne'
|? _dl+'zewnętrzne'=-_b>0 || _ok:='Zewnętrzne'
|? _dl+'bo-bm'=-_b>0 || _ok:='BO-BM'
?};
_x:={? _ok=''
    || 0
    || ($('ALG_PAR.P'+$_a+':='''+_ok+''''))();
       1
    ?}


\p_dpr_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po redakcji parametru Dok. Przych./Rozch
::   WE: _a - numer parametru
::   WY: _b - tresc parametru
::  OLD: \p_dpr_po/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:='';
_dl:=+_b;
{? _dl+'przychodowe'=-_b>0 || _ok:='Przychodowe'
|? _dl+'rozchodowe'=-_b>0 || _ok:='Rozchodowe'
?};
_x:={? _ok=''
    || 0
    || ($('ALG_PAR.P'+$_a+':='''+_ok+''''))();
       1
    ?}


\p_kwf_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.22]
:: OPIS: Procedura po redakcji parametru 'Czy uwzgledniac konto wyniku finan.'
::   WE: _a - numer parametru
::       _b - tresc parametru
::   WY: string zawierajacy tresc parametru
::  OLD: \p_kwf_po/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? -_b='t' | -_b='tak' || _b:='Tak' ?};
{? -_b='n' | -_b='nie' || _b:='Nie' ?};
_x:={? _b<>'Tak' & _b<>'Nie'
    || 0
    || ($('ALG_PAR.P'+$_a+':='''+_b+''''))();
       1
    ?}


\bl_alg_par_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Wartosc poczatkowa pola ALG_PAR.ROK
::  OLD: \bl_alg_par_rok/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.ROK1


\prz_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.60]
:: OPIS: Przed red. pola ALG_PAR.ROK - dla systemow FIKS, IF
::  OLD: \prz_rok/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? 5+(-menu_txt)='kopia'
|| 1
|| {? ALG_PAR.ROK<>null | ALG_PAR.FORMULA=null
   || 0
   || SIK.ROK3:=ALG_PAR.ROK; 1
   ?}
?}


\po_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.60]
:: OPIS: Po red. pola ALG_PAR.ROK
::  OLD: \po_rok/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld
|| _skrot:=ALG_PAR.FORMULA().SKROT;
   {? var_pres('anal_rok')>0 || anal_rok:=fld() ?};
   {? (_skrot*'SAL'>0 | _skrot*'OBR'>0 | (4+_skrot)*'BO'>0 | _skrot*'ROZNI'>0 | _skrot*'ZM_STA'>0)
      & ALG_PAR.ROK<>SIK.ROK3 & +ALG_PAR.P1 & ~exec('chk_an','!zws_par_fspr',ALG_PAR.P1,fld())
   || ALG_PAR.P1:=''
   ?};
   1
|| FUN.info('Podaj rok obowiązywania parametru.'@); 0
?}


\po_wsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.70]
:: OPIS: Po red. pola ALG_PAR.WSP - dla systemow FIKS, IF
::  OLD: \po_wsp/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld=0
|| FUN.info('Współczynnik nie może być równy 0.'@); 0
|| 1
?}


\blsysalg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [8.50]
:: OPIS: Formula na wartosc poczatkowa pola ALG_PAR.SYSTEM (IF)
::  OLD: \blsysalg/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
'FKS'


\pform_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: obsluga akcji Dolacz tabeli ALG_PAR
::   WE: _a = 1 dolaczenie rekordu w miejsce biezacego rekordu
::       _a = 2 dolaczenie rekordu na koncu (dolaczanie na 'strzalke w dol')
::  OLD: \pform_n/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_SIK.AKC='T' || return(0) ?};
{? GR_SIK.FIRMA<>REF.FIRMA & SIK.ROK1().PLAN_GR='T'
|| FUN.info(
      'W roku %1 wykorzystywany jest plan kont grupy.\n'
      'Dodawanie algorytmu możliwe z aplikacji\ndla grupy kapitałowej.'@[ROK_F.NAZ]
   );
   return(0)
?};
SIK.NP1:=SIK.NP2:=SIK.NP3:=SIK.NP4:=SIK.NP5:=SIK.NP6:=SIK.NP7:=SIK.NP8:='';
SIK.ROK2:=kolumna2:=null;
SIK.FIRMAWYL:='S';
_zwrot:=1;
{? _a=1
|| SIK.ROK2:=ALG_PAR.ROK; kolumna2:=ALG_PAR.GR_KOL; WYRAZ.LP:=ALG_PAR.LP
|| WYRAZ.LP:=ALG_PAR.LP+1; SIK.ROK2:=ALG_PAR.ROK; kolumna2:=ALG_PAR.GR_KOL;
   {? FUN.ask('Dodać nowy rekord?'@)
   || ALG_PAR.blank;
      ALG_PAR.LP:=WYRAZ.LP;
      {? ALG_PAR.edit("exec('pform_br','!zws_par_fspr')")
      ||  ALG_PAR.add()
      || _zwrot:=0
      ?}
   ?}
?};
_zwrot


\pform_br
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po Rekord w tabeli ALG_PAR
::  OLD: \pform_br/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=__CHK.record(ALG_PAR,,'SYSTEM','FORM_ALG','FIRMA','ROK');
{? _ok='' & ALG_PAR.WYL='N' & ALG_PAR.ROK().PLAN_GR='T' & ALG_PAR.DEFW().GRUPA().FIRMA=REF.GRUPA
|| FUN.info(
      'W roku %1 obowiązuje plan kont grupy.\n'
      'Algorytmy redagowane są w aplikacji\ndla grupy kapitałowej.'@[ROK_F.NAZ]
   );
   _ok:='ROK'
?};
{? _ok='' || _ok:=exec('spr_par','!zws_par_fspr') ?};
ALG_PAR.GR_KOL:=WYRAZ.KOLUMNA;
{? _ok='' & ALG_PAR.WYL='T'
|| {? SIK.FIRMAWYL='S' & ALG_PAR.FIRMAWYL=null
   || __CHK.err_empty('Stała firma'); _ok:='FIRMAWYL'
   |? SIK.FIRMAWYL='F' & ALG_PAR.FORM_WYL=null()
   || __CHK.err_empty('Formuła na firmę wyłączeniową'); _ok:='FORM_WYL'
   ?}
?};
_ok


\spr_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: sprawdzenie poprawnosci wypełnienia parametrow w okienku RED tabeli ALG_PAR
::  OLD: \spr_par/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
_x:=0;
{! _i:=1..8
|! _par:=($('SIK.NP'+$_i))();
   {? _x=0 & ~exec('param_po','!zws_par_fspr',_i,_par)
   || _x:=_i
   ?}
!};
{? _x<>0 || 'P'+$_x || '' ?}


\pform_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po Dolacz w tabeli ALG_PAR
::  OLD: \pform_po/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? SIK.ROK2<>ALG_PAR.ROK | kolumna2<>WYRAZ.KOLUMNA
|| do();
   ALG_PAR.cntx_psh();
   ALG_PAR.index('ALG_PAR1'); ALG_PAR.prefix(ALG_PAR.FIRMA,WYRAZ.WIERSZ,WYRAZ.KOLUMNA,ALG_PAR.ROK().NAZ);
   _size:=ALG_PAR.size(); _lp:={? _size || _size || 1 ?};
   ALG_PAR.cntx_pop();
   ALG_PAR.LP:=_lp; ALG_PAR.put();
   end()
|| ALG_PAR.cntx_psh();
   do();
   ALG_PAR.index('ALG_PAR1');
   {? SIK.ROK1<>null
   || ALG_PAR.prefix(ALG_PAR.FIRMA,WYRAZ.WIERSZ,WYRAZ.KOLUMNA,SIK.ROK1().NAZ)
   || ALG_PAR.prefix(ALG_PAR.FIRMA,WYRAZ.WIERSZ,WYRAZ.KOLUMNA,ALG_PAR.ROK().NAZ)
   ?};
   _undo:=1;
   {? ALG_PAR.find_key(WYRAZ.LP)
   || {? ALG_PAR.last
      || {!|? ALG_PAR.LP>=WYRAZ.LP & _undo
         |! ALG_PAR.LP+=1; {? ~ALG_PAR.put || _undo:=0; undo() ?}; ALG_PAR.prev
         !}
      ?}
   ?};
   {? ALG_PAR.find_key(0)
   || ALG_PAR.LP:=WYRAZ.LP;
      {? ~ALG_PAR.put || undo() ?}
   || undo()
   ?};
   end();
   ALG_PAR.cntx_pop()
?};
{? ALG_PAR.f_active()
|| ALG_PAR.f_rfresh()
?};
0


\pop_alg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [8.50]
:: OPIS: Formula na 'Popraw' dla tabeli ALG_PAR
::  OLD: \pop_alg/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? ALG_PAR.ROK().PLAN_GR='T' & ALG_PAR.DEFW().GRUPA().FIRMA<>REF.S_FIRMA
|| FUN.info(
      'W roku %1 obowiązuje plan kont grupy.\n'
      'Algorytmy redagowane są w aplikacji\ndla grupy kapitałowej.'@[ROK_F.NAZ]
   );
   return()
?};
_kolalgp:=ALG_PAR.GR_KOL; _rokalgp:=ALG_PAR.ROK().NAZ;
{? ALG_PAR.edit("exec('pform_br','!zws_par_fspr')")
|| {? _kolalgp<>ALG_PAR.GR_KOL | _rokalgp<>ALG_PAR.ROK().NAZ
   || do();
      ALG_PAR.cntx_psh();
      ALG_PAR.index('ALG_PAR1'); ALG_PAR.prefix(REF.FIRMA,ALG_PAR.DEFW,ALG_PAR.GR_KOL,ALG_PAR.ROK().NAZ);
      _size:=ALG_PAR.size(); _lp:={? _size || _size+1 || 1 ?};
      ALG_PAR.cntx_pop();
      ALG_PAR.LP:=_lp;
      ALG_PAR.put();
      ALG_PAR.cntx_psh();
      ALG_PAR.index('ALG_PAR1'); ALG_PAR.prefix(REF.FIRMA,ALG_PAR.DEFW,_kolalgp,_rokalgp);
      _lp:=1;
      {? ALG_PAR.first()
      || {! |?
            ALG_PAR.LP:=_lp; ALG_PAR.put(); _lp+=1;
            ALG_PAR.next()
         !}
      ?};
      ALG_PAR.cntx_pop();
      end()
   || ALG_PAR.put()
   ?}
?}


\pform_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: usuwanie rekordu tabeli ALG_PAR
::  OLD: \pform_u/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ssize_s')>0 || _gr:=1 || _gr:=0 ?};
{? ALG_PAR.ROK().PLAN_GR='T' & ALG_PAR.DEFW().GRUPA().FIRMA<>REF.S_FIRMA
|| {? ~_gr
   || FUN.info(
         'W roku %1 obowiązuje plan kont grupy.\n'
         'Algorytmy redagowane są w aplikacji\ndla grupy kapitałowej.'@[ROK_F.NAZ]
      )
   ?};
   return()
?};
{? (_gr=0 & FUN.ask('Czy usunąć rekord?'@)) | _gr=1
||  do();
   ALG_PAR.cntx_psh();
   _rok:=ALG_PAR.ROK().NAZ;
   ALG_PAR.index('ALG_PAR1');  ALG_PAR.prefix(ALG_PAR.FIRMA,ALG_PAR.DEFW,ALG_PAR.GR_KOL,ALG_PAR.ROK().NAZ);
   {? ALG_PAR.next()
   || 'dosunięcie rekordów w tabeli ';
      _a:=ALG_PAR.ref;
      _b:=1;
      ALG_PAR.prev();
      W_ALGPAR.cntx_psh();
      ROK_F.cntx_psh();
      ROK_F.index('ROKPOCZ');
      ROK_F.prefix(ALG_PAR.FIRMA);
      {? ROK_F.first()
      || {!
         |? W_ALGPAR.use('walg_'+ROK_F.KOD);
            W_ALGPAR.index('W_ALGPAR'); W_ALGPAR.prefix(ALG_PAR.ref);
            {? W_ALGPAR.first  || {! |? W_ALGPAR.del() !} ?};
            ROK_F.next()
         !}
      ?};
      ROK_F.cntx_pop();
      W_ALGPAR.cntx_pop();
      {? ALG_PAR.size=1 || ALG_PAR.ROK();  exec('usun_wartosci','!zws_par_fspr') ?};
      ALG_PAR.del();
      {? ~ALG_PAR.seek(_a) || {? _gr || bledy_s+=1 ?}; undo() ?};
      {? ~_gr
      || {!
         |? ALG_PAR.LP-=1;
            {? ~ALG_PAR.put || undo() ?};
            ALG_PAR.next()
         !}
      ?}
   || ALG_PAR.cntx_psh;
      {? ALG_PAR.prev || _a:=ALG_PAR.ref; _b:=1 || _b:=0 ?};
      ALG_PAR.cntx_pop;
      W_ALGPAR.cntx_psh();
      ROK_F.cntx_psh();
      ROK_F.index('ROKPOCZ');
      ROK_F.prefix(ALG_PAR.FIRMA);
      {? ROK_F.first()
      || {!
         |? W_ALGPAR.use('walg_'+ROK_F.KOD);
            W_ALGPAR.index('W_ALGPAR'); W_ALGPAR.prefix(ALG_PAR.ref);
            {? W_ALGPAR.first  || {! |? W_ALGPAR.del() !} ?};
            ROK_F.next()
         !}
      ?};
      ROK_F.cntx_pop();
      W_ALGPAR.cntx_pop();
      {? ALG_PAR.size=1 || ALG_PAR.ROK(); exec('usun_wartosci','!zws_par_fspr') ?};
      ALG_PAR.del()
   ?};
   ALG_PAR.cntx_pop();
   end();
   {? _b=1 || ALG_PAR.seek(_a) ?}
?};''


\usun_wartosci
::--------------------------------------------------------------------------------------------------
:: OPIS: usuwanie wartosci dla usuwanego rekordu z ALG_PAR lub DEFA
::   WE: [_a] - 1 - Usuwanie dla DEFA
::  OLD: \usun_wartosci/skid_sik.fml
::--------------------------------------------------------------------------------------------------
_rok_a:=ROK_F.ref();
{? REF.FIRMA().TYP='S'
|| {? _=0
   || WARTOSCI.use('wsik_'+ROK_F.KOD);
      WARTOSCI.index('WERSJA');
      WARTOSCI.prefix(DEFW.ref(),GR_KOL.ref());
      {? WARTOSCI.first()
      || {! |? WARTOSCI.del() !}
      ?}
   || {? ROK_F.first()
      || {!
         |? WARTOSCI.use('wsik_'+ROK_F.KOD);
            WARTOSCI.index('WERSJA');
            WARTOSCI.prefix(DEFA.WYR,DEFA.KOL);
            {? WARTOSCI.first()
            || {! |? WARTOSCI.del() !}
            ?};
            ROK_F.next()
         !}
      ?}
   ?}
|? REF.FIRMA().TYP='C'
|| OKRO_F_G.cntx_psh();
   OKRO_F_G.index('ROK_F_G'); OKRO_F_G.prefix(_rok_a);
   {? OKRO_F_G.first()
   || {!
      |? {? OKRO_F_G.ROK_F().PLAN_GR='T' & ROK_F.FIRMA().TYP='S'
         || WARTOSCI.use('wsik_'+ROK_F.KOD);
            WARTOSCI.index('WERSJA');
            {? _=0
            || WARTOSCI.prefix(DEFW.ref(),GR_KOL.ref())
            || WARTOSCI.prefix(DEFA.WYR,DEFA.KOL)
            ?};
            {? WARTOSCI.first()
            || {! |? WARTOSCI.del() !}
            ?}
         ?};
         OKRO_F_G.prefix(_rok_a,OKRO_F_G.FIRMA);
         OKRO_F_G.last();
         OKRO_F_G.prefix(_rok_a);
         OKRO_F_G.next()
      !}
   ?};
   OKRO_F_G.cntx_pop()
?}


\pformusp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Formula na 'usun po' dla tabeli ALG_PAR
::  OLD: \pformusp/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~ALG_PAR.size()
||  SIK.NP1:=SIK.NP2:=SIK.NP3:=SIK.NP4:=SIK.NP5:=SIK.NP6:=SIK.NP7:=SIK.NP8:='';
    ALG_PAR.P1:=ALG_PAR.P2:=ALG_PAR.P3:=ALG_PAR.P4:=ALG_PAR.P5:=ALG_PAR.P6:=ALG_PAR.P7:=ALG_PAR.P8:=''
?}; 1


\ap_u_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Przed akcja grupowa usun oien tabeli ALG_PAR
::  OLD: \ap_u_ag/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
exec('przenum','!zws_par_fspr','ALG_PAR');
exec('usun_ag','sprfin')


\pform_rp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS  [7.20]
:: OPIS: Procedura obslugujaca akcje Rekord przed w okienku WER tabeli ALG_PAR.
::       W zaleznosci od skroconej nazwy formuly (pole ALG_PAR.FORMULA)
::       ustawia odpowiednie nazwy wymaganych parametrow (pola SIK.NP1 ... NP2)
::  OLD: \pform_rp/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.KOLUMNA:=ALG_PAR.GR_KOL;
SIK.FIRMAWYL:={? ALG_PAR.FORM_WYL || 'F' || 'S' ?};
anal_rok:=ALG_PAR.ROK;
exec('parametr','sprfin');
~~


\zmien_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [8.50]
:: OPIS: Formula na zmiane zakresu tabeli ALG_PAR (dla roku)
::  OLD: \zmien_r/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('OknROKE1')<=0
|| exec('okno_rok','xml')
|| SIK.win_edit(OknROKE1)
?};
{? SIK.edit()
|| {? var_pres('anal_rok')>0 || anal_rok:=SIK.ROK1 ?};
   ALG_PAR.hdr_sel();
   _akcspr:={? var_pres('SprAkc')=1
            || SprAkc
            || WYRAZ.WIERSZ().GRUPA().AKC='T'
            ?};
   _wyl:={? _akcspr | GR_SIK.FIRMA<>REF.FIRMA & SIK.ROK1().PLAN_GR='T' || 'dPUBOv:DBv' || '' ?};
   ALG_PAR.actions('WER1',_wyl,,1);
   {? cur_win()<>'PAR_ALL2'
   || exec('prefix_alg_par','!zws_par_fspr')
   || exec('prefix_alg_par2','!zws_par_fspr')
   ?}
?};
SIK.win_edit();
VAR_DEL.delete('OknROKE1')


\pform_n1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Dolacz dla pustej dziedziny - ALG_PAR
::  OLD: \pform_n1/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_SIK.FIRMA<>REF.FIRMA & SIK.ROK1().PLAN_GR='T'
|| FUN.info(
      'W roku %1 wykorzystywany jest plan kont grupy.\n'
      'Dodawanie algorytmu możliwe z aplikacji\ndla grupy kapitałowej.'@[ROK_F.NAZ]
   );
   return(0)
?};
SIK.NP1:=SIK.NP2:=SIK.NP3:=SIK.NP4:=SIK.NP5:=SIK.NP6:=SIK.NP7:=SIK.NP8:='';
SIK.ROK2:=kolumna2:=null; WYRAZ.LP:=1;
ALG_PAR.blank();
{? ALG_PAR.edit("exec('pform_br','!zws_par_fspr')") & ALG_PAR.add()
|| exec('pform_po','!zws_par_fspr')
|| SIK.NP1:=SIK.NP2:=SIK.NP3:=SIK.NP4:=SIK.NP5:=SIK.NP6:=SIK.NP7:=SIK.NP8:=''
?}; 1


\dspalg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Formula na wyswietl dla pola SIK.FORM_ALG
::  OLD: \dspalg/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.FORM_ALG:=ALG_PAR.FORMULA().SKROT


\ae_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Formula po redakcji pola SIK.FORM_ALG
::  OLD: \ae_form/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
_zwrot:=__CHK.record2(SIK,'FORM_ALG','Funkcja')='';
{? _zwrot
|| FORMULA.index('FORMULA4');
   FORMULA.prefix('#',SIK.FORM_ALG);
   {? FORMULA.first() & exec('form_war','!zws_par_fspr') & (1+GR_SIK.TYP_KLIK<>'T' | exec('qs_fun','sprfin')*(FORMULA.SKROT+'|')>0 )
   || SIK.FORM_ALG:=FORMULA.SKROT;
      ALG_PAR.FORMULA:=FORMULA.ref();
      _nazwa:=obj_new(8); _tresc:=obj_new(8);
      {! _i:=1..8
      |! _nazwa[_i]:=($('SIK.NP'+$_i))();
         _tresc[_i]:=($('ALG_PAR.P'+$_i))()
      !};
      {? SIK.FORMULA<>ALG_PAR.FORMULA
      || SIK.NP1:=SIK.NP2:=SIK.NP3:=SIK.NP4:=SIK.NP5:=SIK.NP6:=SIK.NP7:=SIK.NP8:='';
         ALG_PAR.P1:=ALG_PAR.P2:=ALG_PAR.P3:=ALG_PAR.P4:=ALG_PAR.P5:=ALG_PAR.P6:=ALG_PAR.P7:=ALG_PAR.P8:=''
      ?};
      exec('parametr','sprfin'); _wynik:=1;
      {! _i:=1..8
      |! {? ($('SIK.NP'+$_i))()=_nazwa[_i]
         || ($('ALG_PAR.P'+$_i+':='''+_tresc[_i]+''''))()
         ?}
      !};
      {? var_pres('ks2alg_par')>0 & ALG_PAR.P1=''
      || ALG_PAR.P1:=ks2alg_par
      ?};
      obj_del(_nazwa); obj_del(_tresc)
   || _zwrot:=0
   ?};
   {? ~_zwrot || FUN.info('Proszę wypełnić poprawnie pole: Funkcja.'@) ?}
?};
_zwrot


\form_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Formula na warunek czy dodawac do tabeli tymczasowej z formulami
::   WY: 1/0 - dodawac/nie dodawac
::  OLD: \form_war/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
_skrot:=FORMULA.SKROT;
((DEFW.SLU<>null & 1+_skrot='^') |
 (DEFW.TAB<>'' & 1+_skrot='_') |
 (DEFW.SLU=null & DEFW.TAB='' & 1+_skrot<>'_' & 1+_skrot<>'^')
) &
(var_pres('ks2alg_par')>0 &
   (_skrot*'SAL'>0 | _skrot*'OBR'>0 | (4+_skrot)*'BO'>0 | _skrot*'ROZNI'>0 | _skrot*'ZM_STA'>0) |
   var_pres('ks2alg_par')<=0
) &
((
  {? (_skrot*'SAL'>0 | _skrot*'OBR'>0 | (4+_skrot)*'BO'>0 | _skrot*'ROZNI'>0 | _skrot*'ZM_STA'>0)
::Poczatek modyfikacji dla Maclex Fiks 09-10-2009 AK [1120]
  || ~((1+_skrot='_' & DEFW.TAB<>'AN' & DEFW.TAB<>'KS' & DEFW.TAB<>'ML_PG' & DEFW.TAB<>'ML_GRPAT') |
       ((DEFW.TAB='KS' | DEFW.TAB='AN' | DEFW.TAB='ML_PG' | DEFW.TAB='ML_GRPAT') & 1+_skrot<>'_'))
::Koniec modyfikacji dla Maclex Fiks
  || 1
  ?}
 )
)


\f3falg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Formula na F3 dla pola SIK.FORM_ALG
::  OLD: \f3falg/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=ALG_PAR.FORMULA().SKROT;
exec('form_ini','!zws_par_fspr');
{? ~(|SIK.FORM_ALG<>'' & FORM_ALG.find_key(SIK.FORM_ALG)) || FORM_ALG.first() ?};
{? FORM_ALG.select(,1) || _zwrot:=FORM_ALG.SKROT ?};
obj_del(FORM_ALG);
_zwrot


\form_ini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Formula inicjujaca tabele tymczasowa i zapelniajaca ja wartosciami
::   WE: _a - 1 - wykorzystanie przy kopiowaniu algorytmow F,
::            0 lub brak - przy definiowaniu algorytmow
::  OLD: \form_ini/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
FORMULA.index('FORMULA4');
FORMULA.prefix('#');
FORM_ALG:=tab_tmp(1,
   'SKROT','STRING[8]','Skrót'@,
   'NAZWA','STRING[60]','Nazwa formuły'@
);
FORM_ALG.prefix();
_wer:=FORM_ALG.mk_sel('Funkcje'@,'P',,'form_alg_wer',,,,,'U');
FORM_ALG.win_fld(_wer,,'SKROT');
FORM_ALG.win_fld(_wer,,'NAZWA');
FORM_ALG.win_act(_wer,0,'Formuła','Wybierz'@@,,,,"sel_exit",1,,,,'W');
FORM_ALG.win_act(_wer,0,'Szukaj');
FORM_ALG.win_act(_wer,0,'Kolejność');
FORM_ALG.win_act(_wer,1,'Formuła','Dołącz automatycznie'@@,,,,"
   exec('add_alg_formula','!zws_par_fspr');
   exec('form_upd','!zws_par_fspr',0)
",1);
FORM_ALG.win_sel(_wer);
exec('form_upd','!zws_par_fspr',_a)


\form_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodanie formuł do tabeli tymczasowej
::----------------------------------------------------------------------------------------------------------------------
_qs:=exec('qs_fun','sprfin');
_klik:=1+GR_SIK.TYP_KLIK='T';
FORMULA.index('FORMULA4');
FORMULA.prefix('#');
{? FORMULA.first()
|| {!
   |? {? (~_klik | _qs*FORMULA.SKROT ) & ( (~_a & exec('form_war','!zws_par_fspr')) | (_a & exec('form_wa1','!zws_par_fspr')) )
      || {? ~FORM_ALG.find_key(FORMULA.SKROT,)
         || FORM_ALG.SKROT:=FORMULA.SKROT;
            FORM_ALG.NAZWA:=FORMULA.NAZWA;
            FORM_ALG.add()
         ?}
      ?};
      FORMULA.next()
   !}
?}


\form_wa1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: Formula sprawdza czy dodawac skrot formuly do tabeli tymczasowej wykorzystywanej przy
::       kopiowaniu algorytmow wierszy typu F z kolumny do kolumny
::  OLD: \form_wa1/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
_skrtmp:=1+TMPFOR.SKR1; _skr:=1+FORMULA.SKROT;
{? (((_skrtmp='^' | _skrtmp='_') & _skr=_skrtmp) | (_skrtmp<>'^' & _skrtmp<>'_' & _skr<>'^' & _skr<>'_'))
|| 1
|| 0
?}


\add_alg_formula
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodanie formuł dla alorytmów sprawozdań
::----------------------------------------------------------------------------------------------------------------------
ZMIENNE.RODZAJ:='#';
f_nazwa:=obj_new(140);
f_skrot:=obj_new(140);
f_tresc:=obj_new(140);
i:=1;
_fun:="
   f_skrot[i]:=_a;
   f_nazwa[i]:=_b;
   f_tresc[i]:=_c;
   i+=1
";
exec('add_alg','sprfin',_fun);
exec('dodawaj','formula',i);
obj_del(f_skrot);
obj_del(f_nazwa);
obj_del(f_tresc);
obj_del(i)


\prz_dkol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Przed redakcja pola DEFA.KOL
::  OLD: \prz_dkol/def_wsk.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.GRUPA:=PARAM.GR;
NOWY=1


\po_dkol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Po redakcji pola DEFA.KOL
::  OLD: \po_dkol/def_wsk.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEFA.ARGUMENT<>null || WYRAZ.GRUPA:=DEFA.ARGUMENT().GRUPA?};
chk_fld()


\lms_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: blank pola DEFA.LM
::  OLD: \lms_bl/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? WYRAZ.TYP='S' | WYRAZ.TYP='F' || 'S'
|? WYRAZ.TYP='W' || 'L'
|? WYRAZ.TYP='I' || 'C'
|| ''
?}


\arg_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Po redakcji pola DEFA.ARGUMENT
::  OLD: \arg_ae/def_wsk.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld<>null
|| WYRAZ.GRUPA:=DEFA.ARGUMENT().GRUPA;
   UNPAR.P3_AE:=exec('get_lang','lang',DEFW.ref())
?};
1


\arg_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Przed redakcja pola DEFA.ARG_KOL
::  OLD: \arg_kol/def_wsk.fml
::  OLD: \arg_kol/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
GR_KOL.index('LP2');
GR_KOL.prefix(WYRAZ.GRUPA,'F');
{? GR_KOL.size()=1
|| GR_KOL.first();
   DEFA.ARG_KOL:=GR_KOL.ref; win_disp; 0
|| {? DEFA.ARG_KOL=null || GR_KOL.last(); DEFA.ARG_KOL:=GR_KOL.ref ?};
   GR_KOL.actions('WER','rudp:rd'); GR_KOL.win_dict('WER');
   GR_SIK.cntx_psh();
   _edit:=SIK.CUR_SPR().TYP_KLIK<>'TW';
   GR_SIK.cntx_pop();
   {? _edit=0 || win_disp ?};
   _edit
?}


\ae_grkol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Po redakcji pola DEFA.ARG_KOL
::  OLD: \ae_grkol/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P5_AE:=exec('get_lang','lang',DEFA.ARG_KOL().ref());
1


\defa_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: obsluga akcji Dolacz tabeli DEFA
::   WE: _a = 0 dolaczenie rekordu do pustej dziedziny
::       _a = 1 dolaczenie rekordu w miejsce biezacego rekordu
::       _a = 2 dolaczenie rekordu na koncu (dolaczanie na 'strzalke w dol')
::  OLD: \defa_new/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
NOWY:=1;
WYRAZ.GRUPA:=SIK.CUR_SPR;
WYRAZ.KOLUMNA:={? var_pres('kol_wrs')>0 || kol_wrs || GR_KOL.ref() ?};
ZMIENNE.TEXT:='';
UNPAR.P3_AE:=UNPAR.P5_AE:='';
{? _a=0
|| WYRAZ.LP:=1
|? _a=1
|| WYRAZ.LP:=DEFA.LP
|| WYRAZ.LP:=DEFA.LP+1;
   {? FUN.ask('Dodać nowy składnik?'@)
   || DEFA.blank;
      DEFA.LP:=WYRAZ.LP;
      DEFA.add;
      {? DEFA.edit("exec('defa_afr','!zws_par_fspr')")
      || DEFA.put
      || DEFA.del
      ?}
   ?}
?};
1


\defa_afr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: formula 'Record po' dla okienek wertowania tabeli DEFA
::  OLD: \defa_afr/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
exec('arg_kol','!zws_par_fspr',0);
{? DEFW.ALGORYTM='F'
|| _a:=__CHK.record(DEFA,,'FORMULA','ARG_KOL','DOKRES')
|| _a:=__CHK.record2(DEFA,'ARGUMENT','Wiersz','ARG_KOL','Kolumna')
?};
{? _a=''
|| 'sprawdź poprawność wypełnienia pól w okienku';
   DEFW.cntx_psh();
   GR_SIK.cntx_psh();
   GR_KOL.cntx_psh();
   {?  DEFA.ARGUMENT().GRUPA<>DEFA.ARG_KOL().GRUPA | WYRAZ.GRUPA<>DEFA.ARGUMENT().GRUPA |
       WYRAZ.GRUPA<>DEFA.ARG_KOL().GRUPA
   || FUN.info('Niepoprawnie zdefiniowane parametry algorytmu.'@);_a:='GRUPA'
   ?};
   DEFW.cntx_pop();
   GR_SIK.cntx_pop();
   GR_KOL.cntx_pop()
?};
{? _a=''
|| XBRL_POW.index('DEFW'); XBRL_POW.prefix();
   {? XBRL_POW.find_key(DEFA.ARGUMENT) & XBRL_POW.find_key(DEFA.WYR)
   || FUN.info(
         'Dodawany składnik algorytmu używa wierszy powstałych na podstawie\n'
         'taksonomii XBRL: %1.\nDodanie niemożliwe.'@[XBRL_POW.XBRL_DEF().XBRL_NAG().NAZ]
      );
      _a:='GRUPA'
   ?}
?};
GR_SIK.cntx_psh();
_espr:=DEFW.GRUPA().E_KOD<>'';
GR_SIK.cntx_pop();
{? _a='' & ~_espr
|| DEFW.cntx_psh(); DEFW.prefix(); DEFA.ARGUMENT(); DEFW.DEFW_NAD:=0; DEFW.put(); DEFW.cntx_pop()
?};
_a


\defa_pon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po Dolacz w tabeli DEFA
::  OLD: \defa_pon/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
DEFA.cntx_psh();
do;
WYRAZ.KOLUMNA:=DEFA.KOL;
WYRAZ.WIERSZ:=DEFA.WYR;
DEFA.index('LP');
DEFA.prefix(WYRAZ.WIERSZ,WYRAZ.KOLUMNA);
{? DEFA.find_key(WYRAZ.LP)
|| {? DEFA.last()
   || {!
      |? DEFA.LP>=WYRAZ.LP
      |! DEFA.LP+=1;
         {? ~DEFA.put() || undo() ?};
         DEFA.prev()
      !}
   ?}
?};
{? DEFA.find_key(0)
|| DEFA.LP:=WYRAZ.LP;
   {? ~DEFA.put() || undo() ?}
|| undo()
?};
end;
DEFA.cntx_pop();
0


\defa_pbe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: przed Popraw w tabeli DEFA
::  OLD: \defa_pbe/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
XBRL_POW.index('DEFW'); XBRL_POW.prefix();
{? XBRL_POW.find_key(DEFA.ARGUMENT) & XBRL_POW.find_key(DEFA.WYR)
|| FUN.info(
      'Składnik algorytmu powstał na podstawie\n'
      'taksonomii XBRL: %1.\nPoprawianie niemożliwe.'@[XBRL_POW.XBRL_DEF().XBRL_NAG().NAZ]
   );
   return(0)
?};
NOWY:=0;
WYRAZ.KOLUMNA:={? var_pres('kol_wrs')>0 || kol_wrs || GR_KOL.ref() ?};
WYRAZ.TYP:=DEFA.WYR().ALGORYTM;
{? WYRAZ.TYP='S'|| DEFA.win_edit('RED_SKL')
|? WYRAZ.TYP='I'|| DEFA.win_edit('RED_ILO')
|? WYRAZ.TYP='W'|| DEFA.win_edit('RED_WSK')
?}


\defa_pae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po Popraw w tabeli DEFA
::  OLD: \defa_pae/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.WIERSZ:=DEFA.WYR


\defa_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: usuwanie rekordu tabeli DEFA
::  OLD: \defa_usu/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
_gr:={? var_pres('ssize_s')>0 || 1 || 0 ?};
XBRL_POW.index('DEFW'); XBRL_POW.prefix();
{? XBRL_POW.find_key(DEFA.ARGUMENT) & XBRL_POW.find_key(DEFA.WYR)
|| {? _gr=0
   || FUN.info(
         'Składnik algorytmu powstał na podstawie\ntaksonomii XBRL: %1.\n'
         'Usunięcie niemożliwe.'@[XBRL_POW.XBRL_DEF().XBRL_NAG().NAZ]
      )
   || bledy_s+=1
   ?};
   return('')
?};
WYRAZ.WIERSZ:=DEFA.WYR; WYRAZ.KOLUMNA:=DEFA.KOL;
{? (_gr=0 & FUN.ask('Czy usunąć rekord?'@)) | _gr=1
|| DEFA.cntx_psh();
   do();
   {? DEFA.size=1 || exec('usun_wartosci','!zws_par_fspr',1) ?};
   _kolum:=DEFA.KOL;
   {? DEFA.next()
   || {? DEFA.KOL=_kolum
      || _a:=DEFA.ref(); _b:=1;
         DEFA.prev(); DEFA.del();
         {? ~DEFA.seek(_a) || {? _gr || bledy_s+=1 ?}; undo() ?};
         {? ~_gr
         || {! |?
               {? DEFA.KOL=_kolum
               || DEFA.LP-=1; {? ~DEFA.put() || undo(); 0 ?};
                  DEFA.next()
               || 0
               ?}
            !}
         ?}
      || _a:=DEFA.ref(); DEFA.prev(); DEFA.del(); _b:=1
      ?}
   || DEFA.del(); _b:=0
   ?};
   end();
   DEFA.cntx_pop;
   {? _b=1 || DEFA.seek(_a) || DEFA.last() ?}
?};
''


\da_u_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Po akcji grupowej Usun okien DEFA
::  OLD: \da_u_ag/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
exec('przenum','!zws_par_fspr','DEFA');
exec('usun_ag','sprfin')


\defa_ber
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: przed akcja Rekord w tabeli DEFA
::  OLD: \defa_ber/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.GRUPA:={? DEFA.ARGUMENT<>null || DEFA.ARGUMENT().GRUPA || null ?};
UNPAR.P3_AE:=exec('get_lang','lang',DEFW.ref());
UNPAR.P4_AE:=exec('get_lang','lang',GR_SIK.ref());
UNPAR.P5_AE:=exec('get_lang','lang',DEFA.ARG_KOL().ref());
''


\defa_kop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS [7.20]
:: OPIS: Procedura kopiuje wszystkie skladniki algorytmu dla
::       jednej kolumny do innej kolumny tego samego wiersza.
::   WE: WYRAZ.WIERSZ  - ref wiersza, ktorego algorytm kopiujemy
::       WYRAZ.KOLUMNA - ref kolumny wiersza, ktora kopiujemy (zrodlowa)
::  OLD: \defa_kop/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.GRUPA:=WYRAZ.WIERSZ().GRUPA;
GR_KOL.index('LP'); GR_KOL.prefix(WYRAZ.GRUPA);
GR_KOL.actions('WER','rudp:rd'); GR_KOL.win_dict('WER');
SIK.ROK3:=SIK.ROK1;
SIK.PAR_KOP:=1;
_lkolumn:=GR_KOL.size();
{? _lkolumn>1
||  WYRAZ.win_edit({? DEFW.ALGORYTM<>'F' || 'KOPIA' || 'KOPIA1' ?});
    {? WYRAZ.edit("exec('chk_defa_kop','!zws_par_fspr')")
    || {? DEFW.ALGORYTM<>'F'
       || DEFA.cntx_psh();
          DEFA.index('LP'); DEFA.prefix(WYRAZ.WIERSZ,WYRAZ.KOLUMNA); GR_KOL.prefix();
          {? DEFA.first()
          || _size:=DEFA.size; _numer1:={? _size || _size || 1 ?};
             {! |?
                _a:=DEFA.ref; _edit:=1;
                WYRAZ.win_edit('KOPIA2');
                DEFW.cntx_psh(); GR_SIK.cntx_psh();
                DEFW.prefix(); GR_SIK.prefix(REF.FIRMA);
                DEFA.ARGUMENT().GRUPA();
                GR_KOL.index('LP'); GR_KOL.prefix(GR_SIK.ref());
                {? GR_KOL.size()=1 || GR_KOL.first(); _edit:=0; WYRAZ.ARG_KOL1:=GR_KOL.ref() ?};
                DEFW.cntx_pop(); GR_SIK.cntx_pop();
                DEFA.cntx_psh();
                WYRAZ.WIERSZ:=DEFA.WYR;  WYRAZ.WIERSZ1:=DEFA.WYR;
                WYRAZ.KOLUMNA:=DEFA.KOL; WYRAZ.ARG_KOL:=DEFA.ARG_KOL;
                {? _edit || WYRAZ.ARG_KOL1:=WYRAZ.ARG_KOL ?};
                WYRAZ.ARGUMENT:=DEFA.ARGUMENT; WYRAZ.GRUPA:=DEFA.ARGUMENT().GRUPA;
                {? ~_edit | WYRAZ.edit()
                || DEFA.cntx_psh();
                   DEFA.index('LP'); DEFA.prefix(WYRAZ.WIERSZ1,WYRAZ.KOLUMNA1);
                   _numer:={? DEFA.last() || DEFA.LP+1 || 1 ?};
                   DEFA.cntx_pop(); DEFA.get(); DEFA.prefix();
                   DEFA.LP:=_numer; DEFA.WYR:=WYRAZ.WIERSZ1; DEFA.KOL:=WYRAZ.KOLUMNA1;
                   DEFA.ARG_KOL:=WYRAZ.ARG_KOL1; DEFA.add(1)
                ?};
                DEFA.cntx_pop(); DEFA.seek(_a);
                WYRAZ.GRUPA:=DEFA.WYR().GRUPA;
                DEFA.LP<>_numer1 & DEFA.next()
             !}
          ?};
          DEFA.cntx_pop()
       || ALG_PAR.cntx_psh();
          WYRAZ.WIERSZ:=DEFW.ref();
          ALG_PAR.index('ALG_PAR1'); ALG_PAR.prefix(REF.FIRMA,WYRAZ.WIERSZ,WYRAZ.KOLUMNA,SIK.ROK3().NAZ);
          _kon:={? ALG_PAR.last() || ALG_PAR.LP || 0 ?};
          {? ALG_PAR.first() & _kon
          || {! |?
                ALG_PAR.cntx_psh();
                ALG_PAR.prefix(REF.FIRMA,WYRAZ.WIERSZ,WYRAZ.KOLUMNA1,ALG_PAR.ROK().NAZ);
                _size:=ALG_PAR.size(); _lp:={? _size || _size+1 || 1 ?};
                ALG_PAR.GR_KOL:=WYRAZ.KOLUMNA1; ALG_PAR.LP:=_lp;
                ALG_PAR.add();
                ALG_PAR.cntx_pop();
                ALG_PAR.next() & ALG_PAR.LP<=_kon
             !}
          ?};
          ALG_PAR.cntx_pop()
       ?}
    ?}
|| FUN.info('Sprawozdanie posiada jedną kolumnę.\nKopiowanie niemożliwe.'@)
?};
GR_KOL.actions('WER'); GR_KOL.win_dict()


\chk_defa_kop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Formula sprawdza poprawnosc wprowadzonych parametrow kopiowania algorytmu
::  OLD: \chk_defa_kop/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=__CHK.record2(WYRAZ,'ROK3','Rok','KOLUMNA1','Kolumna');
{? _ok='' & SIK.ROK3().PLAN_GR='T' & WYRAZ.GRUPA().FIRMA=REF.GRUPA
|| FUN.info(
      'W roku %1 obowiązuje plan kont grupy.\n'
      'Algorytmy redagowane są w aplikacji\ndla grupy kapitałowej.'@[ROK_F.NAZ]
   );
   _ok:='ROK3'
?};
_ok


\be_defa_gr_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Przed redakcja sprawozdania w algorytmach
::  OLD: \be_defa_gr_sik/def_wsk.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('wyrGrupa')>0
|| GR_SIK.win_sel('SLO2');
   GR_SIK.win_dict('SLO2');
   exec('f_set_gr_sik','sprfin')
?};
GR_SIK.cntx_psh();
_qs:=SIK.CUR_SPR().TYP_KLIK;
GR_SIK.cntx_pop();
1+_qs<>'T' | _qs='TW'


\ae_grupa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [8.10]
:: OPIS: Formula po redakcji pola WYRAZ.GRUPA
::  OLD: \ae_grupa/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=__CHK.record2(WYRAZ,'GRUPA','Sprawozdanie')='';
{? _a
|| {? var_pres('ks2alg_par')>0
   || {? WYRAZ.WIERSZ().GRUPA<>WYRAZ.GRUPA || WYRAZ.WIERSZ:=null ?};
      {? WYRAZ.KOLUMNA().GRUPA<>WYRAZ.GRUPA || WYRAZ.KOLUMNA:=null ?}
   || GR_SIK.cntx_psh();
      UNPAR.P4_AE:=exec('get_lang','lang',WYRAZ.GRUPA().ref());
      GR_SIK.cntx_pop();
      {? DEFA.ARG_KOL<>null
      || GR_KOL.cntx_psh();
         GR_KOL.index('LP'); GR_KOL.prefix(WYRAZ.GRUPA);
         {? ~GR_KOL.seek(DEFA.ARG_KOL) || DEFA.ARG_KOL:=null; UNPAR.P5_AE:='' ?};
         GR_KOL.cntx_pop()
      ?};
      {? DEFA.ARGUMENT<>null
      || DEFW.cntx_psh();
         DEFW.index('GRUPA'); DEFW.prefix(WYRAZ.GRUPA);
         {? ~DEFW.seek(DEFA.ARGUMENT) || DEFA.ARGUMENT:=null; UNPAR.P3_AE:='' ?};
         DEFW.cntx_pop()
      ?}
   ?}
?};
_a


\def_pod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Rekord przed tabeli DEFW
::----------------------------------------------------------------------------------------------------------------------
exec('algorytm','sprfin',DEFW.ALGORYTM);
exec('dokres','sprfin',DEFW.DOKRES);
_zwrot:=0;
{? DEFW.ALGORYTM='F' & (DEFW.TAB<>'' | DEFW.SLU<>null)
|| _zwrot:=1
?};
{? _zwrot
|| 'DEFW#01#01'
|| ''
?}


\alg_kop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: kopiowanie algorytmu jednego wiersza sprawozdania
::  OLD: \alg_kop/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ssize_s')>0 || _gr:=1 || _gr:=0 ?};
_alg:=DEFW.ALGORYTM;
WYRAZ.WIERSZ:=DEFW.ref;
{? 'FSIW'*_alg
|| {? ~_gr
   || GR_KOL.win_dict('WER'); GR_KOL.actions('WER','rudp:rd');
      WYRAZ.GRUPA:=GR_SIK.ref;
      SIK.ROK1:=null;
      PAR_WYDR.PAR5:=0;
      SIK.PAR_KOP:=1;
      SIK.ROK3:=null;
      WYRAZ.WSP:=1;
      WYRAZ.win_edit({? DEFW.ALGORYTM<>'F' || 'KOPIAW' || 'KOPIAW1' ?});
      exec('set_kop_alg','!zws_par_fspr',1)
   ?};
   _chkrec:=$('{? WYRAZ.Z_KOL<>null & WYRAZ.DO_KOL<>null & WYRAZ.Z_KOL=WYRAZ.DO_KOL'+
              '|| FUN.info(''Kolumny muszą być różne.''@); ''DO_KOL'''+
              '|| __CHK.record(WYRAZ,,''Z_KOL'',''DO_KOL'''+{? DEFW.ALGORYTM='F' || ',''ROK3''' || '' ?}+')'+
              '?}');
   {? ~_gr
   || {? WYRAZ.edit(_chkrec)
      || {? _alg='F'
         || exec('formuly','!zws_par_fspr');
            exec('dod_form','!zws_par_fspr');
            {? exec('zam_form','!zws_par_fspr',_gr)
            || exec('kop_algp','!zws_par_fspr',_gr)
            ?};
            &tmpfor; &tmpfor1; obj_del(TMPFOR)
         || exec('kop_defa','!zws_par_fspr',_gr)
         ?}
      ?};
      exec('set_kop_alg','!zws_par_fspr',0)
   |? _gr
   || {? (_alg='F' & SIK.PAR_KOP) | (_alg='S' & PAR_WYDR.PAR2) | (_alg='I' & PAR_WYDR.PAR3)
         | (_alg='W' & PAR_WYDR.PAR4)
      || exec('zn_defw','!zws_par_fspr');
         {? _alg='F'
         || exec('dod_form','!zws_par_fspr')
         ?}
      || bledy_s+=1
      ?}
   ?};
   GR_KOL.actions('WER','')
|| {? ~_gr || FUN.info('Dla wierszy typu P i R nie definiuje się algorytmu.'@) || bledy_s+=1 ?}
?}


\formuly
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: zalozenie tabeli tymczasowej TMPFOR na zamiane formul
::  OLD: \formuly/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
TMPFOR:=tab_tmp(2,
  'SYSTEM','STRING[10]','System'@,
  'SKR1','STRING[8]','Skrót 1'@,
  'NAZ1','STRING[60]','Nazwa 1'@,
  'REF1','INTEGER','Ref 1',
  'SKR2','STRING[8]','Skrót 2'@,
  'NAZ2','STRING[60]','Nazwa 2'@,
  'REF2','INTEGER','Ref 2');
tmpfor:=TMPFOR.ndx_tmp(,,'SYSTEM',,,'SKR1',,,'SKR1',,);
tmpfor1:=TMPFOR.ndx_tmp(,,'REF1',,);
TMPFOR.index(tmpfor);
_wer:=TMPFOR.mk_sel('Zmiana formuł'@,'P',,'tmpfor_wer',,,,,'U');
TMPFOR.win_fld(_wer,,'SYSTEM',,,8,0,1,'System'@);
TMPFOR.win_fld(_wer,,'SKR1',,,8,0,1,'',1);
TMPFOR.win_fld(_wer,,'NAZ1',,,40,0,1,'Kolumna źródłowa'@);
TMPFOR.win_fld(_wer,,'SKR2',,,8,0,1,'',1);
TMPFOR.win_fld(_wer,,'NAZ2',,,40,0,1,'Zmiana na'@);
TMPFOR.win_act(_wer,0,'Formuła','Popraw'@@,,'Zmiana formuły'@,"exec('wyb_for','!zws_par_fspr')",,1,,,,'P');
TMPFOR.win_act(_wer,0,'Formuła','Kopiuj'@@,,'Kontynuacja kopiowania'@,"sel_exit",,0,,,,'K');
TMPFOR.win_btn(_wer,'text='+'Popraw'@+',btn_label_align=center,panel=right,align=begin','menu:P');
TMPFOR.win_btn(_wer,'text='+'Kopiuj'@+',btn_label_align=center,panel=bottom,align=end','menu:K');
TMPFOR.win_sel(_wer)


\dod_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: dolaczenie do tabeli TMPFOR jednego rekordu
::  OLD: \dod_form/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEFW.ALGORYTM='F'
|| ALG_PAR.cntx_psh();
   ALG_PAR.index('ALG_PAR1');
   ALG_PAR.prefix(REF.FIRMA,WYRAZ.WIERSZ,WYRAZ.Z_KOL,SIK.ROK3().NAZ);
   {? ALG_PAR.first()
   || {!
      |? exec('add_tmp','!zws_par_fspr',ALG_PAR.SYSTEM,ALG_PAR.FORMULA().SKROT,ALG_PAR.FORMULA().NAZWA,#ALG_PAR.FORMULA);
         ALG_PAR.next()
      !}
   ?};
   ALG_PAR.cntx_pop()
?}


\zam_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: wyswietlenie tabeli TMPFOR z zamiana formul
::   WE: _a - 1 dla grupowej, 0 dla nie grupowej
::  OLD: \zam_form/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
{? TMPFOR.size>0
|| TMPFOR.select()
|| {? ~_a
   || FUN.info('Wiersz nie ma algorytmów.'@); 0
   || 1
   ?}
?}


\add_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: zmiana formul - dolaczenie rekordu do tabeli TMPFOR
::   WE: _a - system
::       _b - skrot formuly
::       _c - nazwa formuly
::       _d - ref FORMULA (integer)
::  OLD: \add_tmp/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~TMPFOR.find_key(_a,_b,_b)
|| TMPFOR.blank();
   TMPFOR.SYSTEM:=_a;
   TMPFOR.SKR1:=_b;
   TMPFOR.NAZ1:=_c;
   TMPFOR.REF1:=_d;
   TMPFOR.add()
?}


\kop_algp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: kopiowanie ALG_PAR z kolumny WYRAZ.Z_KOL do WYRAZ.DO_KOL
::       PAR_WYDR.PAR5 =1 - kasowac stare algorytmy
::   WE: _a - 1 dla akcji grupowej, 0 lub brak dla nie grupowej
::  OLD: \kop_algp/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
ALG_PAR.index('ALG_PAR1');
ALG_PAR.prefix(REF.S_FIRMA,WYRAZ.WIERSZ,WYRAZ.DO_KOL,SIK.ROK3().NAZ);
do();
{? PAR_WYDR.PAR5=1
|| ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
   {? ALG_PAR.first
   || {!
      |? W_ALGPAR.cntx_psh();
         {? ROK_F.first()
         || {! |?
              W_ALGPAR.use('walg_'+ROK_F.KOD);
              W_ALGPAR.index('W_ALGPAR'); W_ALGPAR.prefix(ALG_PAR.ref());
              {? W_ALGPAR.first()  || {! |? W_ALGPAR.del() !} ?};
              ROK_F.next()
            !}
         ?};
         W_ALGPAR.cntx_pop();
         ALG_PAR.del()
      !}
   ?};
   _lp:=1
|| {? ALG_PAR.last || _lp:=ALG_PAR.LP+1 || _lp:=1 ?}
?};
TMPFOR.index(tmpfor1); FORMULA.prefix();
ALG_PAR.prefix(REF.S_FIRMA,WYRAZ.WIERSZ,WYRAZ.Z_KOL,SIK.ROK3().NAZ);
{? ALG_PAR.first()
|| {!
   |? ALG_PAR.cntx_psh();
      ALG_PAR.prefix();
      {? TMPFOR.find_key(#ALG_PAR.FORMULA)
         & ((TMPFOR.REF2<>0 & FORMULA.seek(TMPFOR.REF2,)) | (TMPFOR.REF2=0 & FORMULA.seek(TMPFOR.REF1,)))
      || ALG_PAR.GR_KOL:=WYRAZ.DO_KOL;
         ALG_PAR.LP:=_lp;
         ALG_PAR.FORMULA:=FORMULA.ref;
         {? WYRAZ.PAR || ALG_PAR.WSP:=WYRAZ.WSP ?};
         {? ALG_PAR.add || _lp+=1 || {? _a || bledy_s+=1 ?}; undo() ?}
      || bledy_s+=1; undo()
      ?};
      ALG_PAR.cntx_pop();
      ALG_PAR.next()
   !}
|| bledy_s+=1
?};
end()


\kop_defa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: kopiowanie DEFA z kolumny WYRAZ.Z_KOL do WYRAZ.DO_KOL
::       PAR_WYDR.PAR5 =1 - kasowac stare algorytmy
::   WE: _a - 1 dla akcji grupowej, 0 lub brak dla nie grupowej
::  OLD: \kop_defa/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
DEFA.index('LP');
DEFA.prefix(WYRAZ.WIERSZ,WYRAZ.DO_KOL);
do();
{? PAR_WYDR.PAR5=1
|| {? DEFA.first || {!|? DEFA.del !} ?};
   _lp:=1
|| {? DEFA.last || _lp:=DEFA.LP+1 || _lp:=1 ?}
?};
DEFA.prefix(WYRAZ.WIERSZ,WYRAZ.Z_KOL);
DEFW.cntx_psh(); GR_KOL.cntx_psh();
_pet:=DEFA.first;
{!
|? _pet
|! DEFA.cntx_psh();
   DEFA.prefix();
   DEFA.KOL:=WYRAZ.DO_KOL;
   DEFA.LP:=_lp;
   {? WYRAZ.PAR || DEFA.WSP:=WYRAZ.WSP ?};
   {? DEFA.ARGUMENT().GRUPA=WYRAZ.GRUPA
   || DEFA.ARG_KOL:=WYRAZ.DO_KOL
   || _lpkol:=WYRAZ.DO_KOL().LP;
      GR_KOL.index('LP');
      GR_KOL.prefix(DEFA.ARGUMENT().GRUPA);
      {? GR_KOL.find_key(_lpkol)
      || DEFA.ARG_KOL:=GR_KOL.ref
      ?}
   ?};
   {? DEFA.add || _lp+=1 || {? _a || bledy_s+=1 ?}; undo() ?};
   DEFA.cntx_pop();
   _pet:=DEFA.next
!};
DEFW.cntx_pop(); GR_KOL.cntx_pop();
end()


\wyb_for
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: zmiana formul - wybor formuly
::  OLD: \wyb_for/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('form_ini','!zws_par_fspr',1);
FORMULA.index('FORMULA4'); FORMULA.prefix();
FORM_ALG.find_key(TMPFOR.SKR1);
{? TMPFOR.SKR2<>'' || FORM_ALG.find_key(TMPFOR.SKR2) ?};
{!
|? {? FORM_ALG.select(,1)
   || {? exec('spr_zmia','!zws_par_fspr')
      || TMPFOR.SKR2:=FORM_ALG.SKROT;
         TMPFOR.NAZ2:=FORM_ALG.NAZWA;
         {? FORMULA.find_key('#',FORM_ALG.SKROT)
         || TMPFOR.REF2:=#FORMULA.ref
         ?};
         TMPFOR.put(); 0
      || FUN.info('Wybrana formuła ma inne parametry\nniż formuła źródłowa.'@); 1
      ?}
   || 0
   ?}
!};
VAR_DEL.delete('FORM_ALG')


\spr_zmia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2006]
:: OPIS: Formula sprawdza czy formula zrodlowa i docelowa ma takie same parametry
::  OLD: \spr_zmia/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
_skrot:=TMPFOR.SKR1;
_skrotn:=FORM_ALG.SKROT;
_system:=TMPFOR.SYSTEM;
{? (_skrot='R_ROZNIC' | _skrot='R_SALDO')
|| _skrotn='R_ROZNIC' | _skrotn='R_SALDO'
|? (1+_skrot='_') &
   (_skrot*'SAL'>0 | _skrot*'OBR'>0 | (4+_skrot)*'BO'>0 | _skrot*'ROZNI'>0 | _skrot*'ZM_STA'>0)
|| (1+_skrotn='_') &
   (_skrotn*'SAL'>0 | _skrotn*'OBR'>0 | (4+_skrotn)*'BO'>0 | _skrotn*'ROZNI'>0 | _skrotn*'ZM_STA'>0)
|? (1+_skrot<>'_') &
   (_skrot*'SAL'>0 | _skrot*'OBR'>0 | (4+_skrot)*'BO'>0 | _skrot*'ROZNI'>0 | _skrot*'ZM_STA'>0)
|| (1+_skrotn<>'_') &
   (_skrotn*'SAL'>0 | _skrotn*'OBR'>0 | (4+_skrotn)*'BO'>0 | _skrotn*'ROZNI'>0 | _skrotn*'ZM_STA'>0)
|? (_skrot='DL_NALEZ' | _skrot='DL_ZOBOW')
|| (_skrotn='DL_NALEZ' | _skrotn='DL_ZOBOW')
|? ((3+(~-_skrot)='VAT') | (3+(~-_skrot)='VAN'))
|| ((3+(~-_skrotn)='VAT') | (3+(~-_skrotn)='VAN'))
|? (_skrot='WYNIKF')
|| _skrotn='WYNIKF'
|? (_skrot='%POD.DOC' | _skrot='SZUK_REJ' | _skrot='KH_PREF')
|| _skrotn='%POD.DOC' | _skrotn='SZUK_REJ' | _skrotn='KH_PREF'
|| 0
?}


\zn_defw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: zapamietanie, DEFW ktorych algorytmy nalezy skopiowac w formule
::       Grupa po - tabela tymczasowa DEFWREF
::  OLD: \zn_defw/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
DEFWREF.blank(); DEFWREF.REF:=#DEFW.ref; DEFWREF.add()


\bl_wopis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Wartosc poczatkowa pola WOPIS.WSK
::  OLD: \bl_wopis/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.ref()


\wopis_lp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: wartosc poczatkowa  pola WOPIS.LP
::  OLD: \wopis_lp/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
WOPIS.cntx_psh();
WOPIS.index('OPIS');
WOPIS.prefix(DEFW.ref);
WOPIS.get();
_lp:=WOPIS.LP;
{? WYRAZ.PAR || _lp+=1 ?};
{? ~WOPIS.first() || _lp:=1 ?};
WOPIS.cntx_pop();
_lp


\wykaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP, RL [8.10]
:: OPIS: glowna formula do sporzadzenia wykazu kont wykorzystywanych
::       w sprawozdaniu
::   WE: [_a] - opcjonalny, zbiorcze wprowadzanie parametrow wiersza podstawowego
::  OLD: \wykaz/skid_kon.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_SIK.FIRMA<>REF.FIRMA & SIK.ROK1().PLAN_GR='T'
|| FUN.info(
      'W roku %1 wykorzystywany jest plan kont grupy.\n'
      'Dodawanie algorytmu możliwe z aplikacji\ndla grupy kapitałowej.'@[ROK_F.NAZ]
   );
   return(0)
?};
{? DEFW.TAB<>''
|| FUN.info('Funkcja niedostępna dla wierszy opartych o dowolną kartotekę.'@)
|| {? KS.index('SYM'); KS.prefix(); ~KS.first()
   || FUN.info('Brak zdefiniowanego planu kont.'@)
   || _rokkon:=ROZNE.ROKKON;
      _gr:=WYRAZ.GRUPA; WYRAZ.GRUPA:=GR_SIK.ref();
      ROZNE.ROKKON:={? SIK.ROK1<>null || SIK.ROK1 || SSTALE.AR ?};
      {?  var_pres('O_PKON')>100 & ROZNE.ROKKON<>_rokkon
      || O_PKON.IS_TKON:=O_PKON.EDIT:=0;
         {? var_pres('TKON')>100 || TKON.erase() ?}
      ?};
      ROZNE.PAR4:=2;
      {? var_pres('TKON')<=100 || VAR_DEL.delete('O_PKON') ?};
      {? var_pres('O_PKON')>100
         & O_PKON.ROK<>BB.refsql({? SIK.ROKAKT<>null & SIK.ROK1=null
                                    || SIK.ROKAKT
                                    |? SIK.ROK1<>null
                                    || SIK.ROK1
                                    || SSTALE.AR
                                    ?})
      || {? var_pres('O_PKON')>0 || VAR_DEL.delete('O_PKON') ?}
      ?};
      {? var_pres('O_PKON')<0
      || {? var_pres('PKON',@.CLASS)<0
         || exec('init','!zws_par_fspr')
         ?};
         O_PKON:=obj_new(@.CLASS.PKON)
      ?};
      {? O_PKON.EDIT | O_PKON.IS_TKON | (O_PKON.param();O_PKON.EDIT)
      || {? O_PKON.IS_TKON=0 || O_PKON.cr_table() ?};
         {? O_PKON.IS_TKON=0
         || FUN.info('Brak kont we wskazanych parametrach.'@)
         || TKON.hdr_sel();
            {? O_PKON.IS_TKON
            || O_PKON.PAR:=_;
               TKON.index(O_PKON.TKONNDX2); TKON.prefix();
               {? O_PKON.PAR>0
               || {? O_PKON.GRUPA>0 & GR_SIK.seek(O_PKON.GRUPA,GR_SIK.name())
                  || {? O_PKON.RL_GRSIK || GR_SIK.r_unlock() ?};
                     O_PKON.RL_GRSIK:=O_PKON.GRUPA:=0;
                     {? var_pres('TLIN')>100 || TLIN.erase() ?}
                  ?};
                  O_PKON.GRUPA:=#WYRAZ.GRUPA;
                  WYRAZ.GRUPA();
                  TKON.hdr_sel(': %1 - [%2] %3'@[O_PKON.ROKN,GR_SIK.SKROT,GR_SIK.NAZWA]);
                  ALG_PAR.cntx_psh();
                  O_PKON.foreach();
                  ALG_PAR.cntx_pop();
                  TKON.actions(O_PKON.TKONWER,'BIK','W')
               || TKON.actions(O_PKON.TKONWER,'W','I');
                  {? O_PKON.GRUPA>0 & GR_SIK.seek(O_PKON.GRUPA,GR_SIK.name()) & (O_PKON.RL_GRSIK:=GR_SIK.r_lock(1,1))
                  || TKON.hdr_sel(': %1 - [%2] %3 - konta wszystkie'@[O_PKON.ROKN,GR_SIK.SKROT,GR_SIK.NAZWA])
                  || O_PKON.GRUPA:=0;
                     TKON.for_each("TKON.JEST:=0; TKON.put()",0);
                     TKON.hdr_sel(': %1'@[O_PKON.ROKN])
                  ?}
               ?};
               TKON.select();
               {? ALG_PAR.f_active()
               || ALG_PAR.f_rfresh()
               ?};
               echo();
               TKON.actions(O_PKON.TKONWER)
            || KS.index('NAZ'); KS.prefix(SIK.ROKAKT);
               {? KS.first()
               || FUN.info('Brak wskazanych kont dla planu na rok: %1.'@[O_PKON.ROKN])
               || FUN.info('Brak zdefiniowanego planu kont na rok: %1.'@[O_PKON.ROKN])
               ?};
               VAR_DEL.delete('O_PKON')
            ?}
         ?}
      || VAR_DEL.delete('O_PKON')
      ?};
      {? var_pres('O_PKON')>100
      || {? O_PKON.RL_GRSIK & O_PKON.GRUPA>0 & GR_SIK.seek(O_PKON.GRUPA,GR_SIK.name())
         || GR_SIK.r_unlock(); O_PKON.RL_GRSIK:=0
         || O_PKON.RL_GRSIK:=0
         ?}
      ?};
      ROZNE.ROKKON:=_rokkon;
      WYRAZ.GRUPA:=_gr
   ?}
?}


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.10]
:: OPIS: utworzenie tabel, okienek, itd...
::       wypelnienie tabeli TKON kontami biezacego roku
::   WE: _a - typy kont odzielone |
::       _b - akronimy wybranych w parametrach wzorcow slownikow oddzielone |
::       _c - maksymalna liczba analityk ustalona w parametach kontroli
::  OLD: \init/skid_kon.fml
::----------------------------------------------------------------------------------------------------------------------
obj_decl('PKON',
         obj_fld('TYPY',''),
         obj_fld('BL',0),
         obj_fld('BW',0),
         obj_fld('BN',0),
         obj_fld('PB',0),
         obj_fld('P_1',0),
         obj_fld('KH',0),
         obj_fld('SLO_OSOB',0),
         obj_fld('OS',0),
         obj_fld('WZ',''),
         obj_fld('POZ',6),
         obj_fld('GRUPA',0),
         obj_fld('TKONNDX1',''),
         obj_fld('TKONNDX2',''),
         obj_fld('TKONNDX3',''),
         obj_fld('TKONWER',''),
         obj_fld('TKONEDT',''),
         obj_fld('TLINWER',''),
         obj_fld('TLINEDT',''),
         obj_fld('TLINNDX1',''),
         obj_fld('TLINNDX2',''),
         obj_fld('WERDEFW',''),
         obj_fld('WERGRSIK',''),
         obj_fld('EDIT',0),
         obj_fld('IS_TKON',0),
         obj_fld('MAXP',0),
         obj_fld('SYNT',0),
         obj_fld('SEP',''),
         obj_fld('ROK',''),
         obj_fld('ROKN',''),
         obj_fld('PAR',0),
         obj_fld('FUN',''),
         obj_fld('P1',''),
         obj_fld('P2',''),
         obj_fld('P3',''),
         obj_fld('P4',''),
         obj_fld('P5',''),
         obj_fld('P6',''),
         obj_fld('P7',''),
         obj_fld('P8',''),
         obj_fld('SPAR1','T'),
         obj_fld('SPAR2','T'),
         obj_fld('SPAR3','T'),
         obj_fld('SPAR4','T'),
         obj_fld('SPAR5','T'),
         obj_fld('PAR1',1),
         obj_fld('PAR2',1),
         obj_fld('PAR3',1),
         obj_fld('PARP',6),
         obj_fld('MASKA',35*'?'),
         obj_fld('RL_GRSIK',0),
         obj_fld('ALGIND1',''),
         obj_fld('ALGIND2',''),
         obj_meth('__init',"VAR_DEL.delete('TKON'); VAR_DEL.delete('TLIN')"),
         obj_meth('__done',"VAR_DEL.delete('TKON'); VAR_DEL.delete('TLIN'); SIK.ROKAKT:=null;
                            {? .ALGIND1<>'' || ALG_PAR.ndx_drop(.ALGIND1) ?};
                            {? .ALGIND2<>'' || ALG_PAR.ndx_drop(.ALGIND2) ?}"),
         obj_meth('indalg',"{? O_PKON.ALGIND1=''
                            || O_PKON.ALGIND1:=ALG_PAR.ndx_tmp('',1,'DEFW',,0,'GR_KOL',,0,'P1',,0)
                            ?};
                            {? O_PKON.ALGIND2=''
                            || O_PKON.ALGIND2:=ALG_PAR.ndx_tmp('',1,'DEFW',,0,'GR_KOL',,0,'ROK','NAZ',0,'P1',,0)
                            ?}"),
         obj_meth('param',"  {! _i:=1..5 |!($('PAR_WYDR.SPAR'+$_i))():=($('.SPAR'+$_i))()!};
                             {! _i:=1..3 |!($('PAR_WYDR.PAR'+$_i))():=($('.PAR'+$_i))()!};
                             PAR_WYDR.PAR5:=.PARP; PAR_WYDR.win_edit('KONTA');
                             SIK.ROKAKT:={? SIK.ROK1<>null || SIK.ROK1 |? SIK.ROKAKT<>null || SIK.ROKAKT || SSTALE.AR ?};
                             ROZNE.MASKA:=.MASKA;
                             {? .EDIT:=PAR_WYDR.edit(\"
                                     {? WYRAZ.WIERSZ().GRUPA().FIRMA<>REF.FIRMA & SIK.ROK1().PLAN_GR='T'
                                     || FUN.info(
                                          'Rok %1 używa planu kont grupy.\n'
                                          'Dodawanie algorytmu możliwe z aplikacji\ndla grupy kapitałowej.'@[ROK_F.NAZ]
                                        );
                                        return(0)
                                     |? PAR_WYDR.SPAR1='N' & PAR_WYDR.SPAR2='N'
                                        & PAR_WYDR.SPAR3='N' &
                                        PAR_WYDR.SPAR4='N' & PAR_WYDR.SPAR5='N'
                                        || FUN.info('Nie zanaczono żadnego typu konta.'@); 'SPAR1'
                                        |? PAR_WYDR.PAR5<0
                                        || FUN.info('Liczba poziomów analityk nie może\n być mniejsza od 0.'@);
                                           'PAR5'
                                        |? PAR_WYDR.PAR5>10
                                        || FUN.info('Liczba poziomów analityk nie może\n być większa od 10.'@);
                                           'PAR5'
                                        || ''
                                     ?}\")
                             || .TYPY:='|'; .WZ:='';
                                {? .BL:=-PAR_WYDR.SPAR1='t' || .TYPY+='BL|' ?};
                                {? .BW:=-PAR_WYDR.SPAR2='t' || .TYPY+='BW|' ?};
                                {? .BN:=-PAR_WYDR.SPAR3='t' || .TYPY+='BN|' ?};
                                {? .PB:=-PAR_WYDR.SPAR4='t' || .TYPY+='PB|' ?};
                                {? .P_1:=-PAR_WYDR.SPAR5='t' || .TYPY+='P1|' ?};
                                {? .KH:=PAR_WYDR.PAR1 || .WZ+='KH|' ?};
                                {? .SLO_OSOB:=PAR_WYDR.PAR2 || .WZ+='SLO_OSOB|'?};
                                {? .OS:=PAR_WYDR.PAR3 || .WZ+='OS|' ?};
                                .PARP:=.MAXP:=PAR_WYDR.PAR5;
                                {! _i:=1..5 |! ($('.SPAR'+$_i))():=($('PAR_WYDR.SPAR'+$_i))() !};
                                {! _i:=1..3 |! ($('.PAR'+$_i))():=($('PAR_WYDR.PAR'+$_i))() !};
                                .MASKA:=ROZNE.MASKA
                             ?}"),
         obj_meth('cr_table',"echo('Trwa generowanie kont do analizy...'@);
                              .SYNT:={? SIK.ROKAKT<>null
                                     || SIK.ROKAKT().SYNT
                                     |? SIK.ROK1<>null
                                     || SIK.ROK1().SYNT
                                     || SSTALE.AR().SYNT
                                     ?};
                              .SEP:={? SIK.ROKAKT<>null
                                    || SIK.ROKAKT().SEP
                                    |? SIK.ROK1<>null
                                    || SIK.ROK1().SEP
                                    || SSTALE.AR().SEP
                                    ?};
                              .ROK:=BB.refsql({? SIK.ROKAKT<>null
                                              || SIK.ROKAKT
                                              |? SIK.ROK1<>null
                                              || SIK.ROK1
                                              || SSTALE.AR
                                              ?});
                              .ROKN:={? SIK.ROKAKT<>null
                                     || SIK.ROKAKT().NAZ
                                     |? SIK.ROK1<>null
                                     || SIK.ROK1().NAZ
                                     || SSTALE.AR().NAZ
                                     ?};
                              _strs:=STR.gsub(.SYNT+.MASKA,'?','');
                              _strs:=+{? .SEP<>',' || STR.gsub(_strs,.SEP,'') || _strs ?};
                              _strm:=STR.gsub(.MASKA,'?','');
                              _strm:=+{? .SEP<>',' || STR.gsub(_strm,.SEP,'') || _strm ?};
                              rm:={? _strs=0 & _strm=0
                                  || 0
                                  |? _strs=0
                                  || _strm>0
                                  |? _strm>_strs
                                  || 1
                                  || 0
                                  ?};
                              VAR_DEL.delete('tmp');
                              tmp:=sql('select distinct K_IF.SYM, K_IF.REFERENCE as KREF, K_IF.NAZ, K_IF.TYP, K_IF.SALDO, '+
                                       {? .MAXP=0 & ~rm || '1'     || 'BUD.POZ' ?}+' as POZ, '+
                                       {? .MAXP=0 & ~rm || ''' ''' || 'SLU.NAZ' ?}+' as SNAZ, '+
                                       {? .MAXP=0 & ~rm || ''' ''' || 'SLU.WZ' ?}+' as WZ, '+
                                       {? .MAXP=0 & ~rm || '0'     || 'SLU.DL' ?}+' as DL, '+
                                       {? .MAXP=0 & ~rm || ''' ''' || 'SLU.REFERENCE' ?}+' as SREF, '+
                                       {? .MAXP=0 & ~rm || ''' ''' || 'RS.TAB' ?}+' as TAB '+
                                       'from KS K_IF '+
                                       {? .MAXP=0 & ~rm
                                       || ''
                                       || 'left join BUD left join SLUAPPL using(BUD.SLU,SLUAPPL.REFERENCE) '+
                                          'left join SLU using (SLUAPPL.SLU,SLU.REFERENCE) '+
                                          'left join RS using (SLU.WZ,RS.WZ) '
                                       ?}+
                                       'where '+
                                       {? .MAXP=0 & ~rm
                                       || ''
                                       || '(POZ is null or POZ<='+
                                           $({? .MAXP=0
                                             || {? rm
                                                || 10
                                                || 1
                                                ?}
                                             || {? .MAXP<10
                                                || {? ~rm
                                                   || .MAXP
                                                   || 10
                                                   ?}
                                                || .MAXP
                                                ?}
                                             ?})+') and '
                                       ?}+
                                       'K_IF.ROK='''+.ROK+''' '+
                                       {? +(.SYNT+STR.gsub(.MASKA,'?',''))>0
                                       || _m:=exec('str_sql','#sql',.MASKA);
                                          'and K_IF.SYM like \'\''+(.SYNT+_m)+'\'\''
                                       || ''
                                       ?}+
                                       {? .TYPY<>''
                                       || _l:=0;' and '+
                                          {? .TYPY<>''
                                          || '('+{? .BL
                                                 || {? _l=0 || _l:=1;'' || 'or ' ?}+'K_IF.TYP=''BL'''
                                                 || ''
                                                 ?}+
                                             {? .BW
                                             || {? _l=0 || _l:=1;'' || 'or ' ?}+'K_IF.TYP=''BW'''
                                             || ''
                                             ?}+
                                             {? .BN
                                             || {? _l=0 || _l:=1;'' || 'or ' ?}+'K_IF.TYP=''BN'''
                                             || ''
                                             ?}+
                                             {? .PB
                                             || {? _l=0 || _l:=1;'' || 'or ' ?}+'K_IF.TYP=''PB'''
                                             || ''
                                             ?}+
                                             {? .P_1
                                             || {? _l=0 || _l:=1;'' || 'or ' ?}+'K_IF.TYP=''P1'''
                                             || ''
                                             ?}+') '
                                          || ''
                                          ?}
                                       || ''
                                       ?});
                              _tmpin1:=tmp.ndx_tmp('',1,'POZ',,0,'SYM',,0,'SYM',,0);
                              _tmpin2:=tmp.ndx_tmp('',1,'SYM',,0,'POZ',,0);
                              SLU.clear();SLO.clear; SLO.index('SL');
                              {? var_pres('tmp')>100 & tmp.first()
                              || {? var_pres('TKON')<=100
                                 || .cr_tkon();
                                    .TKONNDX1:=TKON.ndx_tmp('',1,'POZ',,0,'SYM',,0,'SYM',,0);
                                    .TKONNDX2:=TKON.ndx_tmp('',1,'SYM',,0,'POZ',,0);
                                    .TKONNDX3:=TKON.ndx_tmp('',1,'JEST',,0,'SYM',,0,'POZ',,0)
                                 ?};
                                 {? var_pres('TKON')>100
                                 || .IS_TKON:=1; TKON.index(.TKONNDX2);
                                    'syntetyka sama';
                                    tmp.index(_tmpin1);
                                    {? tmp.prefix(null); tmp.first()
                                    || {!
                                       |? tmp.cntx_psh();tmp.prefix();
                                          tmp.POZ:=1; tmp.put();
                                          tmp.cntx_pop(); tmp.first()
                                       !}
                                    ?};
                                    {? tmp.prefix(0); tmp.first()
                                    || {!
                                       |? tmp.cntx_psh();tmp.prefix();
                                          tmp.POZ:=1; tmp.put();
                                          tmp.cntx_pop(); tmp.first()
                                       !}
                                    ?};
                                    {? tmp.prefix(1); tmp.first()
                                    || {!
                                       |? TKON.blank();
                                          echo('Trwa budowanie kont dla syntetyki: %1'@[tmp.SYM]);
                                          TKON.SYNT:=tmp.NAZ; TKON.TYP:=.typ(tmp.TYP);
                                          TKON.SALDO:=.saldo(tmp.SALDO); TKON.POZ:=tmp.POZ;
                                          TKON.SYM:=tmp.SYM;
                                          maxp:={? .MAXP=0 & rm || 10 || .MAXP ?};
                                          mp:=0; _st:=TKON.SYM;
                                          'jaki max poziom';
                                          tmp.cntx_psh();
                                          {? tmp.index(_tmpin2);tmp.prefix(TKON.SYM);tmp.last() & tmp.DL>0
                                             & maxp
                                          || mp:=tmp.POZ
                                          ?};
                                          tmp.prefix();
                                          {? mp=0
                                          || _wz:=exec('ust_wz','!zws_par_fspr',TKON.SYM);_wz:=_wz-1;
                                             _wz:=TKON.SYM+STR.gsub(+TKON.SYM-_wz,'x','?');
                                             {? maxp=0 & ~rm || TKON.SYM:=.SYNT+TKON.SYM ?};
                                             _dal:={? tmp.TAB<>'' & +_wz>+TKON.SYM
                                                   || STR.gsub(+tmp.SYM-_wz,'?','')='';1
                                                   || 1
                                                   ?};
                                             {? _dal & exec('wmasce','konto',.MASKA,_wz,.SEP)
                                             || TKON.add()
                                             ?}
                                          || {! it:=1 .. mp
                                             |! {? tmp.find_key(_st,it)
                                                || _put:=TKON.find_key(tmp.SYM);
                                                   {? SLU.seek(BB.sqlint(tmp.SREF),SLU.name())
                                                      & (SLO.prefix(SLU.ref);SLO.first())
                                                   || {? _put
                                                      || TKON.for_each(
                                                         \"{? (+tmp.SYM+TKON.SYM)=tmp.SYM & TKON.POZ<>it
                                                           || _put:=1;_sym:=TKON.SYM+{?O_PKON.SEP=','||''||O_PKON.SEP ?};
                                                              {? +tmp.TAB & +O_PKON.WZ & O_PKON.WZ*(tmp.TAB+'|')>0
                                                              || _dl:={? rm & +STR.gsub(tmp.DL+(+_sym-O_PKON.MASKA),'?','')
                                                                      || _dl1:=0;
                                                                         _dls:=tmp.DL+(+_sym-O_PKON.MASKA);
                                                                         {? 1+_dls<>'?'
                                                                            & +((_dls*'?'-1)+_dls)=+STR.gsub(_dls,'?','')
                                                                         || SLO.find_key(STR.gsub(_dls,'?',''))
                                                                         || {!
                                                                            |? _dl1:=exec('wmasce','konto',_dls,SLO.KOD,',');
                                                                               ~_dl1 & SLO.next()
                                                                            !};
                                                                            _dl1
                                                                         ?}
                                                                      || 1
                                                                      ?};
                                                                 {? _dl
                                                                 || TKON.SYM:=_sym+tmp.DL*'?';
                                                                    ($('TKON.AN'+$it))():='';
                                                                    TKON.POZ:=it;
                                                                    {? it=maxp | (mp<maxp & it=mp)
                                                                    || TKON.DL:=+TKON.SYM
                                                                    ?};
                                                                    {? _put
                                                                    || TKON.put(); _put:=0
                                                                    || TKON.add()
                                                                    ?}
                                                                 ?}
                                                              || SLO.first();
                                                                 {!|? TKON.SYM:=_sym+SLO.KOD;
                                                                      ($('TKON.AN'+$it))():=SLO.TR;
                                                                      TKON.POZ:=it;
                                                                      {? it=maxp | (mp<maxp & it=mp)
                                                                      || TKON.DL:=+TKON.SYM
                                                                      ?};
                                                                      {? _put
                                                                      || TKON.put(); _put:=0
                                                                      || TKON.add()
                                                                      ?};
                                                                      SLO.next()
                                                                 !}
                                                              ?}
                                                           ?} \")
                                                      || {? +tmp.TAB & +.WZ & .WZ*(tmp.TAB+'|')>0
                                                         || _sym:=TKON.SYM+{?O_PKON.SEP=','||''||O_PKON.SEP ?};
                                                            _dl:={? rm & +STR.gsub(tmp.DL+(+_sym-.MASKA),'?','')
                                                                 || _dl1:=0;
                                                                    _dls:=tmp.DL+(+_sym-.MASKA);
                                                                    {? 1+_dls<>'?'
                                                                       & +((_dls*'?'-1)+_dls)=+STR.gsub(_dls,'?','')
                                                                    || SLO.find_key(STR.gsub(_dls,'?',''))
                                                                    || {!
                                                                       |? _dl1:=exec('wmasce','konto',_dls,SLO.KOD,',');
                                                                          ~_dl1 & SLO.next()
                                                                       !};
                                                                       _dl1
                                                                    ?}
                                                                 || 1
                                                                 ?};
                                                            {? _dl
                                                            || TKON.SYM:=tmp.SYM+{?.SEP=','||''||.SEP ?}+tmp.DL*'?';
                                                               TKON.POZ:=it;
                                                               ($('TKON.AN'+$it))():='';
                                                               {? it=maxp | (mp<maxp & it=mp)
                                                               || TKON.DL:=+TKON.SYM
                                                               ?};
                                                               TKON.add()
                                                            ?}
                                                         || {!|? TKON.SYM:=tmp.SYM+{?.SEP=','||''||.SEP ?}+SLO.KOD;
                                                                 ($('TKON.AN'+$it))():=SLO.TR;
                                                                 TKON.POZ:=it;
                                                                 {? it=maxp | (mp<maxp & it=mp)
                                                                 || TKON.DL:=+TKON.SYM
                                                                 ?};
                                                                 TKON.add();
                                                                 SLO.next()
                                                            !}
                                                         ?}
                                                      ?}
                                                   || TKON.SYM:=TKON.SYM+{?.SEP=','||''||.SEP?}+tmp.DL*' ';
                                                      TKON.POZ:=it;
                                                      ($('TKON.AN'+$it))():='';
                                                      {? it=maxp | (mp<maxp & it=mp)
                                                      || TKON.DL:=+TKON.SYM
                                                      ?};
                                                      {? _put
                                                      || TKON.put()
                                                      || TKON.add()
                                                      ?}
                                                   ?}
                                                ?}
                                             !};
                                             &it;&mp; &maxp
                                          ?};
                                          tmp.cntx_pop();
                                          tmp.next()
                                       !};
                                       {? rm
                                       || _et:='Trwa dopasowanie do maski '+.MASKA+': ';
                                          {? TKON.first()
                                          || {!
                                             |? echo(_et+TKON.SYM);
                                               {? ~exec('wmasce','konto',.MASKA,TKON.SYM,.SEP)
                                               || TKON.del()
                                               || TKON.next()
                                               ?}
                                             !}
                                          ?}
                                       ?};
                                       {? .MAXP<10 & TKON.first()
                                       || _et:='Trwa dopasowanie wzorca analityk do '+$.MAXP+' poziomu: ';
                                          {!
                                          |? echo(_et+TKON.SYM);
                                             {? TKON.POZ>.MAXP | ~rm
                                             || {? TKON.SYM*'?' & TKON.SYM*'?'>TKON.DL
                                                || TKON.next()
                                                || {? TKON.DL || TKON.SYM:=TKON.DL+TKON.SYM || TKON.SYM:=.SYNT+TKON.SYM ?};
                                                   {? .MAXP=0 || TKON.SYM:=.SYNT+TKON.SYM ?};
                                                   _wz:=exec('ust_wz','!zws_par_fspr',TKON.SYM);_wz:=_wz-1;
                                                   _wz:=TKON.SYM+STR.gsub(+TKON.SYM-_wz,'x','?');
                                                   _tref:=TKON.ref();
                                                   TKON.SYM:=_wz;
                                                   TKON.cntx_psh();
                                                   _fnd:=(TKON.find_key(TKON.SYM,TKON.POZ) & TKON.ref<>_tref);
                                                   TKON.cntx_pop();
                                                   {? ~_fnd
                                                   || _nx:=null;
                                                      TKON.cntx_psh();
                                                      {? TKON.next() || _nx:=TKON.ref() ?};
                                                      TKON.cntx_pop();
                                                      TKON.put();
                                                      {? #_nx || TKON.seek(_nx) || TKON.next() ?}
                                                   || _nx:=null;
                                                      TKON.cntx_psh();
                                                      {? TKON.next() || _nx:=TKON.ref() ?};
                                                      TKON.cntx_pop();
                                                      TKON.del();
                                                      #_nx
                                                   ?}
                                                ?}
                                             |? rm
                                             || {? .MAXP=0
                                                || TKON.SYM:=.SYNT+TKON.SYM;
                                                   _tref:=TKON.ref();
                                                   TKON.cntx_psh();
                                                   _fnd:=(TKON.find_key(TKON.SYM,TKON.POZ) & TKON.ref<>_tref);
                                                   TKON.cntx_pop();
                                                   {? ~_fnd
                                                   || _nx:=null;
                                                      TKON.cntx_psh();
                                                      {? TKON.next() || _nx:=TKON.ref() ?};
                                                      TKON.cntx_pop();
                                                      TKON.put();
                                                      {? #_nx || TKON.seek(_nx) || TKON.next() ?}
                                                   || _nx:=null;
                                                      TKON.cntx_psh();
                                                      {? TKON.next() || _nx:=TKON.ref() ?};
                                                      TKON.cntx_pop();
                                                      TKON.del();
                                                      #_nx
                                                   ?}
                                                || _wz:=exec('ust_wz','!zws_par_fspr',TKON.SYM);_wz:=_wz-1;
                                                   _wz:=TKON.SYM+STR.gsub(+TKON.SYM-_wz,'x','?');
                                                   TKON.SYM:=_wz;
                                                   TKON.put();
                                                   TKON.next()
                                                ?}
                                             || TKON.next()
                                             ?}
                                          !}
                                       ?}
                                    ?}
                                 ?};
                                 {? O_PKON.PAR || O_PKON.foreach() ?}
                              ?};
                              VAR_DEL.delete('tmp','rm');
                              echo()"),
        obj_meth('saldo',"{? -_a='a' || 'Aktywne'
                          |? -_a='p' || 'Pasywne'
                          |? -_a='d' || 'Aktywno-pasywne'
                          || ''
                          ?}",2),
        obj_meth('typ',"{? -_a='bl' || 'Bilansowe'
                        |? -_a='bw' || 'Wynikowe'
                        |? -_a='bn' || 'Bezwynikowe'
                        |? -_a='pb' || 'Pozabilansowe'
                        |? -_a='p1' || 'Pozabilansowe - jednoroczne'
                        || ''
                        ?}",2),
        obj_meth('kod',"{? +_b & +.WZ & .WZ*(_b+'|')>0 || _c*'?' || _a ?}",2,2,1),
        obj_meth('wyb_spr',"{? GR_SIK.f_active  || GR_SIK.f_clear; _filtr:=1 || _filtr:=0 ?};
        GR_SIK.index('SYSSKROT'); GR_SIK.prefix(REF.FIRMA,'FKS');
                            {? .WERGRSIK=''
                            || .WERGRSIK:=GR_SIK.mk_sel('Sprawozdania'@,'P',,'gr_sik_wer',,,,,'P');
                               GR_SIK.win_fld(.WERGRSIK,,'SKROT',,,10);
                               GR_SIK.win_fld(.WERGRSIK,,'NAZWA',,,40);
                               GR_SIK.win_fld(.WERGRSIK,,'AKC',,,3,,,,,,2,,\"'T'\",\"'N'\");
                               GR_SIK.win_act(.WERGRSIK,0,'Rekord',,,,
                                              \"exec('rekprzed','color','GR_SIK#01#')\");
                               GR_SIK.win_act(.WERGRSIK,0,'Formuła','Wybierz'@@,,,\"sel_exit()\",,1,,,,'W');
                               GR_SIK.win_act(.WERGRSIK,0,'Kolejność');
                               GR_SIK.win_act(.WERGRSIK,0,'Szukaj');
                               GR_SIK.win_act(.WERGRSIK,0,'Formuła','Legenda'@@,,
                                              'Legenda kolorowania rekordów okna wertowania'@,
                                              \"exec('legenda','color','GR_SIK#01')\",,,,,,'L')
                            ?}; GR_SIK.win_sel(.WERGRSIK);
                            {? .RL_GRSIK & .GRUPA>0 & GR_SIK.seek(.GRUPA,GR_SIK.name()) || GR_SIK.r_unlock(); .RL_GRSIK:=0 ?};
                            echo();
                            {? GR_SIK.select(,1,20)
                            || {? .RL_GRSIK:=GR_SIK.r_lock(1,1)
                               || .GRUPA:=#GR_SIK.ref();
                                   _sym:=TKON.SYM;
                                   TKON.index(O_PKON.TKONNDX2);
                                   TKON.hdr_sel();
                                   TKON.hdr_sel(': %1 - [%2] %3 - konta wszystkie'@[O_PKON.ROKN,GR_SIK.SKROT,GR_SIK.NAZWA]);
                                   .is_pow();
                                   TKON.find_key(_sym)
                               || FUN.info(
                                    'Sprawozdanie edytowane przez innego użytkownika.\n'
                                    'Wybór sprawozdania niemożliwy.'@,
                                  )
                               ?}
                            ?};
                            {?  _filtr=1 || exec('f_set_gr_sik','sprfin') ?}
                           "),
       obj_meth('is_pow',"TKON.cntx_psh(); TKON.for_each(\"TKON.JEST:=0; TKON.put()\",0);
                          _tmp:=sql('select D.REFERENCE as DR, K_IF.REFERENCE as KR, G.REFERENCE as GR, '+
                                    'D.LP as DLP, D.KOD as DKOD, D.WSPOL as DWSP, K_IF.LP as KLP, K_IF.NAZWA as KNAZWA, '+
                                    'A.AKTYWNA, A.LP as ALP, F.SKROT as FSKROT, '+
                                    'A.P1, A.P2, A.P3, A.P4, A.P4, A.P5, A.P6, A.P7, A.P8, A.WSP, A.SYSTEM, A.ROK '+
                                    'from ALG_PAR A join DEFW D join GR_KOL K_IF join GR_SIK G using (D.GRUPA,G.REFERENCE) '+
                                    'join FORMULA F using(A.FORMULA,F.REFERENCE) '+
                                    'where G.REFERENCE='''+BB.refsql(GR_SIK.seek(.GRUPA,GR_SIK.name());GR_SIK.ref())+
                                    ''' and A.ROK='''+.ROK+'''');
                          {? var_pres('TLIN')<=100 || .cr_tlin() || TLIN.erase() ?};
                          {? var_pres('_tmp')>100 & _tmp.first()
                          || TKON.index(O_PKON.TKONNDX2);
                             {!|? {? .form_mask(_tmp.FSKROT)
                                  || TKON.prefix({? (_tmp.P1*'?')>0 || (_tmp.P1*'?'-1)+_tmp.P1 || _tmp.P1 ?});
                                     _f:=TKON.first();
                                     {? _f
                                        | {? _f
                                          || 1
                                          || _tmp.P1*'?'=0 & (TKON.prefix(.SYNT+_tmp.P1); TKON.first())
                                          ?}
                                     || {!|? {? exec('wmasce','konto',_tmp.P1,TKON.SYM,O_PKON.SEP)
                                             || .add_TLIN(#TKON.ref(),BB.sqlint(_tmp.GR),BB.sqlint(_tmp.DR),
                                                          _tmp.KLP,_tmp.DWSP,_tmp.WSP,
                                                          _tmp.FSKROT,_tmp.P1,_tmp.P2,_tmp.P3,_tmp.P4,_tmp.P5,
                                                          _tmp.P6,_tmp.P7,_tmp.P8,_tmp.ALP);
                                                {? ~TKON.JEST || TKON.JEST:=1; TKON.put() ?}
                                             ?}; TKON.next() !}
                                     ?}
                                  ?}; _tmp.next() !}
                          ?};TKON.cntx_pop()"),
       obj_meth('add_TLIN',"TLIN.cntx_psh();TLIN.prefix();
                            TLIN.TKON:=_a; TLIN.GR_SIK:=_b; TLIN.DEFW:=_c; TLIN.KOLDEFW:=_d; TLIN.WSPDEFW:=_e; TLIN.WSPALG:=_f; TLIN.FORMULA:=_g;
                            TLIN.P1:=_h; TLIN.P2:=_i; TLIN.P3:=_j; TLIN.P4:=_k; TLIN.P5:=_l; TLIN.P6:=_m; TLIN.P7:=_n; TLIN.P8:=_o; TLIN.ROK:=.ROKN;
                            TLIN.LP:=_p; TLIN.add();TLIN.cntx_pop()",
                            1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,1),
       obj_meth('form_mask',"  ( _a='R_ROZNIC' | _a='R_SALDO' |
                                ( 1+_a<>'_' & ( _a*'SAL'>0 | _a*'OBR'>0 | (4+_a)*'BO'>0 | _a*'ROZNI'>0 | _a*'ZM_STA'>0) )
                               )",2),
       obj_meth('cr_tlin',"TLIN:=tab_tmp(3,'TKON','INTEGER','Konto'@,
                                           'GR_SIK','INTEGER','Sprawozdanie'@,
                                           'DEFW','INTEGER','Wiersz'@,
                                           'KOLDEFW','INTEGER','Kolumna sprawozdania'@,
                                           'LP','INTEGER','Lp'@,
                                           'WSPDEFW','REAL','Współczynnik wiersza'@,
                                           'WSPALG','REAL','Współcz. par.wskaź.'@,
                                           'FORMULA','STRING[8]','Formuła'@,
                                           'P1','STRING[35]','Parametr 1'@,
                                           'P2','STRING[20]','Parametr 2'@,
                                           'P3','STRING[20]','Parametr 3'@,
                                           'P4','STRING[20]','Parametr 4'@,
                                           'P5','STRING[20]','Parametr 5'@,
                                           'P6','STRING[20]','Parametr 6'@,
                                           'P7','STRING[20]','Parametr 7'@,
                                           'P8','STRING[20]','Parametr 8'@,
                                           'ROK','STRING[20]','Rok obowiązywania'@);
                           .TLINWER:=TLIN.mk_sel('Parametry wierszy podstawowych'@,,,'tlin_wer');
                           TLIN.win_fld(.TLINWER,,'KOLDEFW',,,8,,,'Kol.spr.'@);
                           TLIN.win_fld(.TLINWER,,'FORMULA',,,,,,'Formuła'@);
                           TLIN.win_fld(.TLINWER,,'P1',,,12);
                           TLIN.win_fld(.TLINWER,,'P2',,,12);
                           TLIN.win_fld(.TLINWER,,'P3',,,12);
                           TLIN.win_fld(.TLINWER,,'P4',,,12);
                           TLIN.win_fld(.TLINWER,,'P5',,,12);
                           TLIN.win_fld(.TLINWER,,'P6',,,12);
                           TLIN.win_fld(.TLINWER,,'ROK',,,5,,,'Obow.'@);
                           TLIN.win_fld(.TLINWER,,'WSPALG',,,8,2,,'Wsp.'@);
                           TLIN.win_act(.TLINWER,0,'Formuła','Dodaj parametr'@@,,
                                       'Dodaje parametr wiersza podstawowego'@,,
                                       \"{? GR_SIK.AKC='T'
                                         || FUN.info('Sprawozdanie zaakceptowane.\nFunkcja niedostępna.'@)
                                         |? DEFW.ALGORYTM='F'
                                         || O_PKON.parametr(0); grp_disp(TLIN, O_PKON.TLINWER)
                                         || FUN.info('Funkcja dostępna dla wierszy typu ''F''.'@)
                                         ?}\",1,,,,'D');
                          TLIN.win_act(.TLINWER,1,'Formuła','Dodaj parametr'@@,,
                                       'Dodaje parametr wiersza podstawowego'@,,
                                       \"{? GR_SIK.AKC='T'
                                         || FUN.info('Sprawozdanie zaakceptowane.\nFunkcja niedostępna.'@)
                                         |? DEFW.ALGORYTM='F'
                                         || O_PKON.parametr(0); grp_disp(TLIN, O_PKON.TLINWER)
                                         || FUN.info('Funkcja dostępna dla wierszy typu ''F''.'@)
                                         ?}\",1,,,,'D');
                           TLIN.win_act(.TLINWER,,'Szukaj');
                           .TLINEDT:=TLIN.mk_edit('Parametry wiersza podstawowego'@,,'tlin_red');
                           TLIN.win_efld(.TLINEDT,,'KOLDEFW');
                           TLIN.win_efld(.TLINEDT,AH,'H',,,,,,' '@);
                           TLIN.win_efld(.TLINEDT,,'WSPDEFW',,,,2);
                           TLIN.win_efld(.TLINEDT,,'WSPALG',,,,2);
                           TLIN.win_efld(.TLINEDT,AH,'H',,,,,,' '@);
                           TLIN.win_efld(.TLINEDT,,'FORMULA');
                           TLIN.win_efld(.TLINEDT,AH,'H',,,,,,' '@);
                           TLIN.win_efld(.TLINEDT,,'P1');
                           TLIN.win_efld(.TLINEDT,,'P2');
                           TLIN.win_efld(.TLINEDT,,'P3');
                           TLIN.win_efld(.TLINEDT,,'P4');
                           TLIN.win_efld(.TLINEDT,,'P5');
                           TLIN.win_efld(.TLINEDT,,'P6');
                           TLIN.win_efld(.TLINEDT,,'P7');
                           TLIN.win_efld(.TLINEDT,,'P8');
                           TLIN.win_efld(.TLINEDT,AH,'H',,,,,,' '@);
                           TLIN.win_efld(.TLINEDT,,'ROK');
                           TLIN.win_sel(.TLINWER);
                           TLIN.win_edit(.TLINEDT);
                           .TLINNDX1:=TLIN.ndx_tmp('',0,'GR_SIK',,0,'DEFW',,0,'TKON',,0,'LP',,0,'KOLDEFW',,0);
                           .TLINNDX2:=TLIN.ndx_tmp('',0,'GR_SIK',,0,'DEFW',,0,'TKON',,0,'KOLDEFW',,0);
                           TLIN.index(.TLINNDX2)"),
       obj_meth('pow_spr',"{? .GRUPA>0 & GR_SIK.seek(.GRUPA,GR_SIK.name())
                           || {? GR_SIK.seek(.GRUPA,GR_SIK.name())
                              || {? TKON.JEST | (GR_SIK.AKC='N'
                                                 & FUN.ask('Brak powiązań konta z wierszami '
                                                           'podstawowymi\nwykorzystywanymi w wybranym sprawozdaniu.\n'
                                                           'Czy wyświetlić wiersze sprawozdania?'@)=1)
                                 || GR_SIK.clear(); DEFW.clear(); DEFW.index('LP'); DEFW.prefix(GR_SIK.ref());
                                    TLIN.prefix(); TLIN.cntx_psh(); TLIN.index(.TLINNDX1);
                                    {? DEFW.first()
                                    || {!|? {? ~TLIN.find_key(.GRUPA,#DEFW.ref(),#TKON.ref()) || DEFW.next() ?} !}
                                    ?};
                                    {? ~TLIN.find_key(O_PKON.GRUPA,#DEFW.ref(),#TKON.ref()) || DEFW.first() ?};
                                    TLIN.cntx_pop();
                                    {? .WERDEFW='' || .werdefw() ?};
                                    defwgrp:=DEFW.grp_make('Powiązania ze sprawozdaniem'@,\"\",'defwgrpkdk1');
                                    DEFW.grp_sel(defwgrp, DEFW, .WERDEFW, ,\"O_PKON.szczeg()\",0,0,20);
                                    DEFW.grp_splt(defwgrp,,'horizontal','left');
                                    DEFW.grp_sel(defwgrp, TLIN, .TLINWER,,\"\",0,0,10);
                                    DEFW.win_sel(defwgrp); DEFW.hdr_sel();
                                    DEFW.hdr_sel(' -   %1   %2'@[GR_SIK.SKROT,GR_SIK.NAZWA]);
                                    DEFW.actions(.WERDEFW,{? GR_SIK.AKC='T' || 'D:D' || '' ?});

                                    TKON.cntx_psh(); TKON.prefix();
                                    DEFW.select(,1);
                                    TKON.cntx_pop();
                                    &defwgrp
                                 |? GR_SIK.AKC='T'
                                 || FUN.info(
                                       'Brak powiązań konta z wierszami podstawowymi\nwykorzystywanymi '
                                       'w wybranym sprawozdaniu.\n'
                                       '(Sprawozdanie zaakceptowane)'@)
                                 ?}
                              || FUN.info('Sprazwozdanie zostało usunięte.\nWyświetlenie powiązań niemożliwe.'@)
                              ?}
                           || FUN.info('Nie wybrano sprawozdania do analizowania powiązań z kontami.'@)
                           ?}"),
      obj_meth('werdefw',"O_PKON.WERDEFW:=DEFW.mk_sel('Wiersze sprawozdania'@,,,'defw_wer');
                          DEFW.win_fld(.WERDEFW,,'LP',,,5);
                          DEFW.win_fld(.WERDEFW,,'KOD',,,15);
                          DEFW.win_fld(.WERDEFW,,'NAZWA',,,62);
                          DEFW.win_fld(.WERDEFW,WYRAZ,'ALGORYTM',,,25);
                          DEFW.win_act(.WERDEFW,0,'Rekord',,,,
                                       \"_a:='';
                                         exec('algorytm','sprfin',DEFW.ALGORYTM);
                                         exec('dokres','sprfin',DEFW.DOKRES);
                                          {?  DEFW.ALGORYTM='F'
                                          ||  TLIN.actions_grayed(O_PKON.TLINWER,'')
                                          ||  TLIN.actions_grayed(O_PKON.TLINWER,'D:D')
                                          ?};
                                         TLIN.cntx_psh(); TLIN.index(O_PKON.TLINNDX1);
                                         {? TLIN.prefix(); TLIN.find_key(O_PKON.GRUPA,#DEFW.ref(),#TKON.ref())
                                         || _a:=exec('findtmp','#color')
                                         |? DEFW.ALGORYTM='S'
                                         || _a:=exec('findfnrd','color')
                                         ?};WYRAZ.ALGORYTM:=exec('alg_naz','sprfin',1);
                                         TLIN.cntx_pop();
                                         _a\");
                         DEFW.win_act(.WERDEFW,,'Szukaj');
                         DEFW.win_act(.WERDEFW,0,'Formuła','Legenda'@@,,'Opis znaczenia kolorów wierszy'@,,
                                       \"exec('legenda','color','$TAB_TYMCZ#01#01$Pozycja zawiera powiązane algorytmy',
                                                    '$CLO#01#04$Pozycja nieredegowalna -  będąca sumą')\",,,,,'L')
                         "),
      obj_meth('szczeg',"TLIN.prefix(.GRUPA,#DEFW.ref(),#TKON.ref());
                         TLIN.hdr_sel();
                         TLIN.hdr_sel(', maska kont zgodna z: %1, -  wiersz: %2'@[TKON.SYM,DEFW.KOD]);
                         grp_disp(TLIN, .TLINWER)"),
     obj_meth('cr_tkon',"TKON:=tab_tmp(1,'SYM','STRING[35]','Symbol konta'@,
                                         'JEST','INTEGER','Jest'@,
                                          'TYP','STRING[30]','Typ konta syntetycznego'@,
                                          'SALDO','STRING[25]','Charakter salda'@,
                                          'SYNT','STRING[60]','Opis konta syntetycznego'@,
                                          'POZ','INTEGER','Ilość poziomów'@,
                                          'DL','INTEGER','Dł.konta na max. poz.'@,
                                          'AN1','STRING[80]','Analityka 1'@,
                                          'AN2','STRING[80]','Analityka 2'@,
                                          'AN3','STRING[80]','Analityka 3'@,
                                          'AN4','STRING[80]','Analityka 4'@,
                                          'AN5','STRING[80]','Analityka 5'@,
                                          'AN6','STRING[80]','Analityka 6'@,
                                          'AN7','STRING[80]','Analityka 7'@,
                                          'AN8','STRING[80]','Analityka 8'@,
                                          'AN9','STRING[80]','Analityka 9'@,
                                          'AN10','STRING[80]','Analityka 10'@
                                          );
                          .TKONWER:=TKON.mk_sel('Konta'@,'P',,'tkon',,,,,'U');
                          TKON.win_fld(.TKONWER,,'SYM',,,20);
                          TKON.win_fld(.TKONWER,,'SYNT',,,30);
                          TKON.win_fld(.TKONWER,,'SALDO',,,20);
                          TKON.win_fld(.TKONWER,,'TYP',,,26);
                          TKON.win_act(.TKONWER,0,'Formuła','Aktualizuj konta'@@,,'Aktualizuj konta'@,,
                                       \"_sym:=TKON.SYM;
                                         O_PKON.param();
                                         {? O_PKON.EDIT
                                         || TKON.erase();
                                            O_PKON.cr_table();
                                            TKON.index(O_PKON.TKONNDX2);
                                            TKON.hdr_sel();
                                            {? O_PKON.GRUPA<>0
                                            || {? GR_SIK.seek(O_PKON.GRUPA,GR_SIK.name())
                                               || TKON.hdr_sel(': %1 - [%2] %3 - konta wszystkie'@[O_PKON.ROKN,GR_SIK.SKROT,GR_SIK.NAZWA])
                                               ?};
                                               O_PKON.is_pow();
                                               {? ~TKON.find_key(_sym) || TKON.first() ?}
                                            || TKON.hdr_sel(': %1'@[O_PKON.ROKN]);
                                               TKON.first()
                                            ?}
                                         ?}; 1 \",,,,,'A');
                          TKON.win_act(.TKONWER,1,'Formuła','Aktualizuj konta'@@,,'Aktualizuj konta'@,,
                                          \"O_PKON.param();{? O_PKON.EDIT || TKON.erase(); O_PKON.cr_table();
                                            TKON.index(O_PKON.TKONNDX2); TKON.first() ?}; 1 \",,,,,'A');
                          TKON.win_act(.TKONWER,0,'Rekord',,,,\"_k:={? TKON.SYM*'?'>0
                                                                    || (TKON.SYM*'?')+TKON.SYM
                                                                    || TKON.SYM
                                                                    ?};
                                                                   exec('op_konta','konto',_k,null,2);
                                                                   exec('ka_opis','konto');
                                                                {? TKON.JEST=1
                                                                || exec('findtmp','#color')
                                                                |? TKON.JEST=2
                                                                || exec('findtmp2','#color')
                                                                ?}\",,);
                          TKON.win_act(.TKONWER,0,'Menu','Zakres kont'@,,'Wybór zakresu kont'@);
                          TKON.win_act(.TKONWER,1,'Menu','Zakres kont'@,,'Wybór zakresu kont'@);
                          TKON.win_act(.TKONWER,0,'Formuła','Powiązane'@@,'Zakres kont'@,
                                       'Konta powiązane',,
                                       \"{? O_PKON.GRUPA>0 & GR_SIK.seek(O_PKON.GRUPA,GR_SIK.name())
                                         || TKON.index(O_PKON.TKONNDX3);
                                            TKON.prefix(1);
                                            TKON.hdr_sel();
                                            TKON.hdr_sel(': %1 - [%2] %3 - konta powiązane'@[O_PKON.ROKN,GR_SIK.SKROT,GR_SIK.NAZWA])
                                         || FUN.info('Nie wybrano sprawozdania do analizowania powiązań z kontami.'@)
                                         ?}\",,,,,'P');
                          TKON.win_act(.TKONWER,0,'Formuła','Niepowiązane'@@,'Zakres kont'@,
                                       'Konta niepowiązane',,
                                       \"{? O_PKON.GRUPA>0 & GR_SIK.seek(O_PKON.GRUPA,GR_SIK.name())
                                         || TKON.index(O_PKON.TKONNDX3);
                                            TKON.prefix(0);
                                            TKON.hdr_sel();
                                            TKON.hdr_sel(': %1 - [%2] %3 - konta niepowiązane'@[O_PKON.ROKN,GR_SIK.SKROT,GR_SIK.NAZWA])
                                         || FUN.info('Nie wybrano sprawozdania do analizowania powiązań z kontami.'@)
                                         ?}\",,,,,'N');
                          TKON.win_act(.TKONWER,0,'Formuła','Wszystkie'@@,'Zakres kont'@,
                                       'Konta wszystkie'@,,
                                       \"{? O_PKON.GRUPA>0 & GR_SIK.seek(O_PKON.GRUPA,GR_SIK.name())
                                         || TKON.index(O_PKON.TKONNDX2);
                                            TKON.prefix();
                                            TKON.hdr_sel();
                                            TKON.hdr_sel(': %1 - [%2] %3 - konta wszystkie'@[O_PKON.ROKN,GR_SIK.SKROT,GR_SIK.NAZWA])
                                         || FUN.info('Nie wybrano sprawozdania do analizowania powiązań z kontami.'@)
                                         ?}\",,,,,'W');
                          TKON.win_act(.TKONWER,1,'Formuła','Powiązane'@@,'Zakres kont'@,
                                       'Konta powiązane'@,,
                                       \"{? O_PKON.GRUPA>0 & GR_SIK.seek(O_PKON.GRUPA,GR_SIK.name())
                                         || TKON.index(O_PKON.TKONNDX3);
                                            TKON.prefix(1);
                                            TKON.hdr_sel();
                                            TKON.hdr_sel(': %1 - [%2] %3 - konta powiązane'@[O_PKON.ROKN,GR_SIK.SKROT,GR_SIK.NAZWA])
                                         || FUN.info('Nie wybrano sprawozdania do analizowania powiązań z kontami.'@)
                                         ?}\",,,,,'P');
                          TKON.win_act(.TKONWER,1,'Formuła','Niepowiązane'@@,'Zakres kont'@,
                                       'Konta niepowiązane'@,,
                                       \"{? O_PKON.GRUPA>0 & GR_SIK.seek(O_PKON.GRUPA,GR_SIK.name())
                                         || TKON.index(O_PKON.TKONNDX3);
                                            TKON.prefix(0);
                                            TKON.hdr_sel();
                                            TKON.hdr_sel(': %1 - [%2] %3 - konta niepowiązane'@[O_PKON.ROKN,GR_SIK.SKROT,GR_SIK.NAZWA])
                                         || FUN.info('Nie wybrano sprawozdania do analizowania powiązań z kontami.'@)
                                         ?}\",,,,,'N');
                          TKON.win_act(.TKONWER,1,'Formuła','Wszystkie'@@,'Zakres kont'@,
                                       'Konta wszystkie'@,,
                                       \"{? O_PKON.GRUPA>0 & GR_SIK.seek(O_PKON.GRUPA,GR_SIK.name())
                                         || TKON.index(O_PKON.TKONNDX2);
                                            TKON.prefix();
                                            TKON.hdr_sel();
                                            TKON.hdr_sel(': %1 - [%2] %3 - konta wszystkie'@[O_PKON.ROKN,GR_SIK.SKROT,GR_SIK.NAZWA])
                                         || FUN.info('Nie wybrano sprawozdania do analizowania powiązań z kontami.'@)
                                         ?}\",,,,,'W');
                          TKON.win_act(.TKONWER,0,'Formuła','Wy&bierz sprawozdanie'@@,,
                                       'Wybór sprawozdania do analizy powiązań'@,,\"O_PKON.wyb_spr()\",,,,,'B');
                          TKON.win_act(.TKONWER,1,'Formuła','Wy&bierz sprawozdanie'@@,,
                                       'Wybór sprawozdania do analizy powiązań'@,,
                                       \"{? TKON.index('?')=O_PKON.TKONNDX2 & ~TKON.first
                                         || FUN.info(
                                               'Brak kont w zdefiniowanym zakresie.\n'
                                               'Funkcja niedostępna.'@
                                            )
                                         || O_PKON.wyb_spr()
                                         ?}\",,,,,'B');
                          TKON.win_act(.TKONWER,0,'Formuła','Pow&iązania'@@,,
                                       'Przeglądanie powiązań zgodnych z symbolem konta'@
                                       ,,\"O_PKON.pow_spr()\",1,,,,'I');
                          TKON.win_act(.TKONWER,0,'Formuła','Wczytaj'@@,,
                                       'Wczytanie parametrów'@,,
                                       \"O_PKON.wczytaj()\",1,1,
                                       \"g_cnt:=0; g_tot:=TKON.sel_size();
                                        {? FUN.ask('Wczytać zaznaczone konta?'@)
                                        || wcz:=1
                                        || VAR_DEL.delete('g_cnt','g_tot'); 0
                                        ?}\",
                                       \"_vt:='Dodawanie parametrów';
                                        {? var_pres('wcz') & wcz
                                        || {? g_cnt=g_tot
                                           || FUN.info(
                                                 'Operacja zakończona.\nDodano wszystkie zaznaczone składniki.\n'
                                                 'Liczba dodanych składników: %1.'@[$g_cnt]
                                              )
                                           || FUN.info(
                                                 'Operacja zakończona.\nLiczba dodanych składników: %1'
                                                 '\nLiczba składników, dla których operacja się nie powiodła: %2.'@[$g_cnt,$(g_tot-g_cnt)]
                                              )
                                           ?}
                                        ?}; VAR_DEL.delete('g_cnt','g_tot','wcz'); 1\",'W');
                          TKON.win_act(.TKONWER,0,'Szukaj');
                          TKON.win_act(.TKONWER,0,'Kolejność');
                          TKON.win_act(.TKONWER,0,'Formuła','Legenda'@@,,'Opis znaczenia kolorów wierszy'@,,
                                       \"exec('legenda','color','$TAB_TYMCZ#01#01$Konto z pozycji zawiera się w pozycji sprawozdania.',
                                                                '$TAB_TYMCZ#01#02$Konto z pozycji może zawierać się w pozycji sprawozdania.')\",,,,,'L');
                          TKON.win_btn(.TKONWER,'text=%1,btn_label_align=center,panel=right,align=begin'['&Wczytaj'@],'menu:W');
                          .TKONEDT:=TKON.mk_edit('Konta'@,,'tkon_red');
                          TKON.win_efld(.TKONEDT,,'SYM');
                          TKON.win_efld(.TKONEDT,,'SALDO');
                          TKON.win_efld(.TKONEDT,,'TYP');
                          TKON.win_efld(.TKONEDT,,'SYNT');
                          TKON.win_efld(.TKONEDT,,'AN1');
                          TKON.win_efld(.TKONEDT,,'AN2');
                          TKON.win_efld(.TKONEDT,,'AN3');
                          TKON.win_efld(.TKONEDT,,'AN4');
                          TKON.win_efld(.TKONEDT,,'AN5');
                          TKON.win_efld(.TKONEDT,,'AN6');
                          TKON.win_efld(.TKONEDT,,'AN7');
                          TKON.win_efld(.TKONEDT,,'AN8');
                          TKON.win_efld(.TKONEDT,,'AN9');
                          TKON.win_efld(.TKONEDT,,'AN10');
                          TKON.win_sel(.TKONWER);
                          TKON.hdr_sel();
                          TKON.hdr_sel(' - konta %1'@[{? TKON.index('?')=O_PKON.TKONNDX2 || 'wszystkie'@ || 'powiązane'@ ?}]);
                          TKON.win_edit(.TKONEDT)"),
       obj_meth('funkcje',"_tab:=sql(
                              'select * from FORMULA where '+
                              'RODZAJ=''#'' and substr(SKROT,1,1)'+
                              {? DEFW.SLU<>null || '=' || '<>' ?}+'''^'''+
                              ' and SKROT<>''DL_ZOBOW'' and (SKROT=''R_ROZNIC'' or SKROT=''R_SALDO'' or '+
                              '(substr(SKROT,1,1)<>''_'''+
                              ' and (SKROT like ''%SAL%'' or SKROT like ''%OBRO%'' or '+
                              'SKROT like ''%BO%'' or SKROT like ''%ROZNI%'' or SKROT like ''%ZM_STA%'')))'
                           );
                           {? 1+WYRAZ.GRUPA().TYP_KLIK='T' & _tab.first()
                           || _qs:=exec('qs_fun','sprfin');
                              {!
                              |? {? _qs*_tab.SKROT<=0
                                 || _tab.del()
                                 || _tab.next()
                                 ?}
                              !}
                           ?};
                           _tab
                          "),
       obj_meth('czy_maska',"_skrot:=ALG_PAR.FORMULA().SKROT;
                             ALG_PAR.FORMULA().RODZAJ='#'
                             & {? ALG_PAR.DEFW().SLU<>null
                               || _skrot='^'
                               || _skrot<>'^'
                               ?}
                             & _skrot<>'DL_ZOBOW'
                             & (_skrot='R_ROZNIC'
                                | _skrot='R_SALDO'
                                | (1+_skrot<>'_' & (_skrot*'SAL'>0 | _skrot*'OBRO'>0 | _skrot*'BO'>0
                                                    | _skrot*'ROZNI'>0 | _skrot*'ZM_STA'>0
                                                   )
                                  )
                               )
                             "),
       obj_meth('parametr',"_tmp:=O_PKON.funkcje();
                            {? var_pres('_tmp')>100 & _tmp.first()
                            || _tmp.index(_tmp.ndx_tmp('',0,'SKROT',,0));
                               {? _a=0
                               || GR_KOL.index('LP'); GR_KOL.prefix(DEFW.GRUPA); _lk:=GR_KOL.size();
                                 _gr:=null
                               ?};
                               {? _a=0 & _lk=0
                               || FUN.info('Sprawozdanie nie posiada zdefiniowanych kolumn.'@); 0
                               || _gr:={? _a
                                       || GR_KOL.ref()
                                       || {? _lk=1
                                          || GR_KOL.first(); GR_KOL.ref()
                                          || {? GR_KOL.win_sel('SLO');
                                                WYRAZ.GRUPA:=DEFW.GRUPA;
                                                GR_KOL.select()
                                             || GR_KOL.ref()
                                             || null
                                             ?}
                                          ?}
                                       ?};
                                  {? _gr<>null
                                  || _okn:=_tmp.mk_sel('Wybierz funkcję'@,,,'_tmp_wer');
                                     _tmp.win_fld(_okn,,'SKROT',,,8);
                                     _tmp.win_fld(_okn,,'NAZWA',,,60);
                                     _tmp.win_act(_okn,0,'Formuła','Wybierz'@@,,'Wybór bieżącego zapisu'@,,\"sel_exit()\",1,,,,'W');
                                     _tmp.win_act(_okn,0,'Szukaj');
                                     _tmp.win_sel(_okn);
                                     {? _tmp.select(,{? O_PKON.FUN<>'' || _tmp.find_key(O_PKON.FUN) || 0 ?})
                                        & (FORMULA.index('FORMULA4'); FORMULA.prefix(_tmp.RODZAJ, _tmp.SKROT); FORMULA.first())
                                     || WYRAZ.KOLUMNA:=_gr; WYRAZ.WIERSZ:=DEFW.ref();
                                        ALG_PAR.blank();
                                        ALG_PAR.FORMULA:=FORMULA.ref();
                                        ALG_PAR.ROK:=(ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA); ROK_F.seek(BB.sqlint(O_PKON.ROK),ROK_F.name());ROK_F.ref());
                                        ALG_PAR.WSP:=1;
                                        _wz:=exec('ust_wz','!zws_par_fspr',TKON.SYM);_wz:=_wz-1;
                                        ALG_PAR.P1:={? O_PKON.MAXP<10 & +_wz>+TKON.SYM
                                                    || TKON.SYM+STR.gsub(+TKON.SYM-_wz,'x','?')
                                                    || TKON.SYM
                                                    ?};
                                        exec('parametr','sprfin');
                                        _op:=ALG_PAR.mk_edit('Parametry wiersza podstawowego'@,,'alg_par_red');
                                        ALG_PAR.win_efld(_op,,'FORMULA','SKROT',,8,,1,'Funkcja'@);
                                        ALG_PAR.win_efld(_op,,'FORMULA','NAZWA',,60,,1,'Nazwa'@);
                                        ALG_PAR.win_efld(_op,AH,'H',,,,,,' ');
                                        ALG_PAR.win_efld(_op,,'ROK','NAZ',,20,,1,'Obowiązuje w roku'@);
                                        ALG_PAR.win_efld(_op,AH,'H',,,,,,' ');
                                        ALG_PAR.win_efld(_op,AH,'H',,,0,,1,'PARAMETRY FUNKCJI'@);
                                        {!_i:={? ~_a || 1 ||2 ?}..8
                                        |! _naz:=($('SIK.NP'+$_i))();
                                           {? _naz<>''
                                           || ALG_PAR.win_efld(_op,,'P'+$_i,,,20,,_i=1,_naz,,,,'F3_button=1');
                                              ALG_PAR.efld_opt(_op,'mark='+$exec('par_wym','!zws_par_fspr',_naz),ALG_PAR,'P'+$_i)
                                           ?}
                                        !};
                                        ALG_PAR.win_efld(_op,AH,'H',,,,,,' ');
                                        ALG_PAR.win_efld(_op,,'WSP',,,20,,0,'Współczynnik'@);
                                        _btnok:=ALG_PAR.win_ebtn(_op,'text=%1'['Zapisz'@],'key:F2');
                                        _btnan:=ALG_PAR.win_ebtn(_op,'text=%1'['Anuluj'@],'key:Esc');
                                        ALG_PAR.btn_eopt(_op,_btnok,'tooltip='+exec('help_red_ok','#window','Z'));
                                        ALG_PAR.btn_eopt(_op,_btnan,'tooltip='+exec('help_red_esc','#window','A'));
                                        ALG_PAR.win_edit(_op);
                                        {? O_PKON.FUN<>'' & O_PKON.FUN=FORMULA.SKROT
                                        || {!_i:=2..8 |! ($('ALG_PAR.P'+$_i+':=O_PKON.P'+$_i))()!}
                                        ?};
                                        _w:={? ALG_PAR.edit(\"exec('spr_par','!zws_par_fspr')\")
                                            || {? ~_a
                                               || do();
                                                  O_PKON.FUN:=FORMULA.SKROT;
                                                  {! _i:=2..8 |! ($('O_PKON.P'+$_i+':=ALG_PAR.P'+$_i))() !};
                                                  {? _a=0
                                                  || ALG_PAR.cntx_psh();
                                                     ALG_PAR.index('ALG_PAR1');
                                                     ALG_PAR.prefix(REF.FIRMA,WYRAZ.WIERSZ,WYRAZ.KOLUMNA,O_PKON.ROKN);
                                                     _lp:={? ALG_PAR.last() || ALG_PAR.LP+1 || 1 ?};
                                                     ALG_PAR.cntx_pop();
                                                     ALG_PAR.LP:=_lp;
                                                     ALG_PAR.SYSTEM:='FKS'
                                                  ?};
                                                  ALG_PAR.cntx_psh();
                                                  ALG_PAR.prefix();
                                                  {? ALG_PAR.add()
                                                  || O_PKON.add_TLIN(#TKON.ref(),#DEFW.GRUPA,#DEFW.ref(),
                                                                     ALG_PAR.GR_KOL().LP,DEFW.WSPOL,ALG_PAR.WSP,
                                                                     FORMULA.SKROT,ALG_PAR.P1,ALG_PAR.P2,ALG_PAR.P3,
                                                                     ALG_PAR.P4,ALG_PAR.P5,ALG_PAR.P6,ALG_PAR.P7,ALG_PAR.P8,
                                                                     ALG_PAR.LP);
                                                     TKON.JEST:=O_PKON.jest(); TKON.put()
                                                  ?};
                                                  ALG_PAR.cntx_pop();
                                                  end()
                                               || 1
                                               ?}
                                            || 0
                                            ?};
                                        ALG_PAR.win_edit('RED1'); _w
                                     || 0
                                     ?}
                                  ?}
                               ?}
                            || FUN.info('Brak formuł opartych o maskę konta.'@); 0
                            ?}",1),
       obj_meth('jest',"{? ALG_PAR.ROK= BB.sqlint(O_PKON.ROK) & O_PKON.czy_maska()
                        || {? ALG_PAR.P1<>'' & exec('wmasce','konto',ALG_PAR.P1,TKON.SYM,O_PKON.SEP) || 1
                           |? ALG_PAR.P1<>'' & ((+TKON.SYM)+ALG_PAR.P1)=TKON.SYM || 2
                           || 0
                           ?}
                        || 0
                        ?}"),
       obj_meth('wczytaj',"{? TKON.sel_size | FUN.ask('Wczytać parametr (algorytm)?'@)
                           || _w:=0; {? var_pres('l')<0 || l:=TKON.sel_size ?};
                              {? TKON.sel_size()=l || ok:=O_PKON.parametr(1) ?};
                              {? ok
                              || _wz:=exec('ust_wz','!zws_par_fspr',TKON.SYM);_wz:=_wz-1;
                                 ALG_PAR.P1:={? O_PKON.MAXP<10 & +_wz>+TKON.SYM
                                             || TKON.SYM+STR.gsub(+TKON.SYM-_wz,'x','?')
                                             || TKON.SYM
                                             ?};
                                 ALG_PAR.SYSTEM:='FKS';
                                 ALG_PAR.LP:=ALG_PAR.size()+1;
                                 _w:=ALG_PAR.add();
                                 {? _w
                                 || TKON.JEST:=O_PKON.jest();
                                    TKON.cntx_psh(); TKON.prefix();
                                    TKON.put();
                                    TKON.cntx_pop();
                                    O_PKON.FUN:=FORMULA.SKROT;
                                    {! _i:=2..8 |! ($('O_PKON.P'+$_i+':=ALG_PAR.P'+$_i))() !}
                                 ?};
                                 {? _w & var_pres('g_cnt')>0 || g_cnt+=1 ?}
                              || wcz:=0
                              ?};
                              {? TKON.sel_size<=1 || &l; &ok ?};
                              _w
                           || wcz:=0
                           ?}"),
      obj_meth('foreach',"TKON.for_each(\"TKON.JEST:=0;
                                          ALG_PAR.cntx_psh();
                                          {? O_PKON.ALGIND1='' | O_PKON.ALGIND2=''
                                          || O_PKON.indalg()
                                          ?};
                                          {? SIK.ROK1=null
                                          || ALG_PAR.index(O_PKON.ALGIND1);
                                             ALG_PAR.prefix(WYRAZ.WIERSZ,WYRAZ.KOLUMNA,
                                                            {? (TKON.SYM*'?')>0
                                                            || (TKON.SYM*'?'-1)+TKON.SYM
                                                            || TKON.SYM
                                                            ?})
                                          || ALG_PAR.index(O_PKON.ALGIND2);
                                             ALG_PAR.prefix(WYRAZ.WIERSZ,WYRAZ.KOLUMNA,SIK.ROK1().NAZ,
                                                            {? (TKON.SYM*'?')>0
                                                            || (TKON.SYM*'?'-1)+TKON.SYM
                                                            || TKON.SYM
                                                            ?})
                                          ?};
                                          {? ALG_PAR.first()
                                          || {!|? TKON.JEST:=O_PKON.jest(); (TKON.JEST=0 & ALG_PAR.next()) !}
                                          ?};
                                          ALG_PAR.cntx_pop();
                                          TKON.put()\",1)"),
      obj_meth('bv_rokakt',"{? SIK.ROK1=null
                            || 1
                            || exec('findfnrd','color')
                            ?}"),
      obj_meth('be_rokakt',"SIK.ROK1=null"),
      obj_meth('a_rokakt',"{? fld=null
                           || FUN.info('Należy podać rok pochodzenia kont.'@); 0
                           |? GR_SIK.FIRMA<>REF.FIRMA & SIK.ROKAKT().PLAN_GR='T'
                           || FUN.info(
                                 'W roku %1 wykorzystywany jest plan kont grupy.\n'
                                 'Dodawanie algorytmu możliwe z aplikacji\ndla grupy kapitałowej.'@[ROK_F.NAZ]
                              ); 0
                           || SIK.ROKAKT(); 1
                             ?}")
            )


\ust_wz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MM] [8.70]
:: OPIS: Formula ustala wzorzec konta bez dodatkowych znakow specjalnych
::   WE: _a: symbol konta
::   WY: wzorzec dla konta
::  OLD: \ust_wz/skid_kon.fml
::----------------------------------------------------------------------------------------------------------------------
_vsynt:=ROZNE.ROKKON().SYNT;
_v:=_vsynt*'x'+'$';
{? +_a
|| _vks:=_vsynt+_a;
   {? KS.index('SYM'); KS.prefix(ROZNE.ROKKON,_vks); KS.first() & _vks=KS.SYM
   || {? BUD.index('KS'); BUD.prefix(KS.ref); BUD.first()
      || _vsep:=ROZNE.ROKKON().SEP;
         {? _vsep=',' || _vsep:='' ?};
         _v:=_vsynt*'x';
         {! |? _v+=_vsep+BUD.SLU().SLU().DL*'x'; BUD.next() !};
         _v+='$'
      ?}
   ?}
?};
_v


\chk_an
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Sprawdza poprawnosc symbolu konta analitycznego (takze prefix i maska) w danym roku
::   WE: _a: konto do sprawdzenia
::      [ _b: rok bilansowy (REFERENCE)]
::   WY: 0 - bledne; 1 - poprawne
::  OLD: \chk_an/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_rokf:={? _>1 & type_of(_b)=7 & _b || _b || SSTALE.AR ?};
ROK_F.cntx_psh(); ROK_F.clear();
{? ROK_F.seek(_rokf)
|| _vsynt:=ROK_F.SYNT; _vsep:=ROK_F.SEP;
   _k:=(_vsynt+_a)*'?';
   {? _k>1
   || KS.index('SYM'); KS.prefix(ROK_F.ref(),(_k-1)+_a); _ret:=KS.first()
   |? _k=1
   || _ret:=1
   || KS.index('SYM'); KS.prefix(ROK_F.ref(),_vsynt+_a);
      {? KS.first() & +_a>_vsynt
      || BUD.index('KS'); BUD.prefix(KS.ref());
         _ok:=1; _sep:={? ROK_F.SEP=',' || 0 || 1 ?};
         _dl:=ROK_F.SYNT;
         {? BUD.first()
         || {! |?
               {? _sep>0 || _ok:=1+(_dl-_a)=_vsep ?};
               _dl+=BUD.SLU().SLU().DL+_sep;
               _ok & BUD.next()
            !};
            {? _ok || _ok:=+_a=_dl ?}
         || _ok:=0
         ?};
         _ret:=_ok
      || _ret:=KS.first()
      ?}
   ?}
?};
ROK_F.cntx_pop(); _ret


\wyr_kol1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Przed redakcja pola WYRAZ.KOLUMNA1
::  OLD: \wyr_kol1/wskaznik.fml
::----------------------------------------------------------------------------------------------------------------------
{? PARAM.WSZYSTKO='W'
|| WYRAZ.KOLUMNA1:=null;0
|| GR_KOL.index('LP');
   GR_KOL.prefix(WYRAZ.GRUPA);
   _lkolumn:=GR_KOL.size();
   {? _lkolumn=1
   || GR_KOL.first();
      WYRAZ.KOLUMNA1:=GR_KOL.ref;
      0
   ||  1
   ?}
?}


\pkonvrok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: Przed wyswietleniem SIK.ROKAKT
::  OLD: \pkonvrok/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
O_PKON.bv_rokakt()


\pkonrrok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: Przed redakcja SIK.ROKAKT
::  OLD: \pkonrrok/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
O_PKON.be_rokakt()


\pkonarok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: Po redakcji pola SIK.ROKAKT
::  OLD: \pkonarok/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
O_PKON.a_rokakt()


\ba_wopis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.22]
:: OPIS: Procedura Przed akcji Dolacz. Ustawia wartosc zmiennej.
::       Obsluguje dolaczanie po ostatnim rekordzie.
::   WE: _a - wartosc parametru (0 lub 1)
::  OLD: \ba_wopis/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.PAR:=_a;
{? WYRAZ.PAR
|| WOPIS.blank();
   {? WOPIS.edit()
   || WOPIS.add()
   ?}
?};
1


\wopis_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po akcji Dolacz tabeli WOPIS
::  OLD: \wopis_n/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? WOPIS.lock(1)
|| _a:=WOPIS.ref;
   WYRAZ.LP:=WOPIS.LP;
   WOPIS.cntx_psh();
   WOPIS.index('OPIS');
   WOPIS.prefix(DEFW.ref);
   {? WOPIS.last()
   || {!
      |? {? WOPIS.ref<>_a & WOPIS.LP>=WYRAZ.LP
         || WOPIS.LP+=1;
            WOPIS.put()
         ?};
         {? WOPIS.LP>=WYRAZ.LP
         || WOPIS.prev()
         || 0
         ?}
      !}
   ?};
   WOPIS.cntx_pop()
?};
WOPIS.unlock();
1


\wopis_up
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: przed akcja Usun w tabeli WOPIS
::  OLD: \wopis_up/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.LP:=WOPIS.LP;1


\wopis_us
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: po akcji Usun w tabeli WOPIS
::  OLD: \wopis_us/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
do;
{? WOPIS.first()
|| {!
   |? {? WOPIS.LP>=WYRAZ.LP
      || WOPIS.LP-=1;
         WOPIS.put()
      ?};
      WOPIS.next()
   !}
?};
WOPIS.find_key(WYRAZ.LP);
end;
1


\zbiorczo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.70]
:: OPIS: Wczytuje zbiorczo skladniki algorytmu
::   WE: [_a - wczytywanie pozycji wykresow]
::  OLD: \zbiorczo/skid_usp.fml
::----------------------------------------------------------------------------------------------------------------------
{? _ | WYRAZ.WIERSZ().ALGORYTM='S'
|| exec('clean','sprfin');
   kolumna:=WYRAZ.KOLUMNA().LP; wiersz:=WYRAZ.WIERSZ().LP;
   grupa_s:=WYRAZ.WIERSZ().GRUPA().SKROT;
   wspolcz:=1;
   wykres:=_;
   exec('algorytm_s','sprfin');
   &kolumna; &wiersz; &grupa_s; &wspolcz; &wykres
|| FUN.info('Funkcja dostępna dla wierszy typu ''Suma''.'@)
?};
1


\br_gr_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Rekord przed okna WERG tabeli GR_KOL
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.ALGKOL:=exec('alg_naz','sprfin',2);
_gray:={? var_press('kolAkcG')>0 || kolAkcG || '' ?};
{? GR_KOL.ALGORYTM='F'
|| _gray:='A'+_gray
?};
GR_KOL.actions_grayed('WERG',_gray);
exec('bv_lang','lang')


\aedanews
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: Po redakcji SIK.DANEWSKP
::  OLD: \aedanews/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? SIK.DANEWSKP=0 || SIK.ALGROK:=null ?};
{? SIK.win_edit('?')='SKID_GR3'
|| {? fld()=0
   || SIK.EXF_JEDN:='N';
      SIK.efld_opt(SIK.win_edit('?'),'enable=0, editable=0',,'EXF_JEDN')
   || SIK.efld_opt(SIK.win_edit('?'),'enable=1, editable=1',,'EXF_JEDN')
   ?};
   win_disp
?}; 1


\bealgrok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: Przed redakcja SIK.ALGROK
::  OLD: \bealgrok/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? SIK.win_edit('?')='SKID_GR2'
|| SIK.DANEWSKP
|| SIK.P1='A' & 'WF'*SIK.P9>0
?}


\rok3_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: przed redakcja pola SIK.ROK3 - edytowalne jesli SIK.PAR_KOP=1
::  OLD: \rok3_be/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.PAR_KOP


\akop_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: 'Grupa przed' dla akcji 'kopIa algorytmow' w sprawozdaniach finans.
::  OLD: \akop_bg/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Kopiować algorytmy zaznaczonych wierszy?'@)
|| GR_KOL.actions('WER','rudp:rd');
   GR_KOL.win_dict('WER');
   WYRAZ.GRUPA:=GR_SIK.ref;
   SIK.ROK1:=null;
   PAR_WYDR.PAR5:=0;
   SIK.PAR_KOP:=PAR_WYDR.PAR2:=PAR_WYDR.PAR3:=PAR_WYDR.PAR4:=1;
   WYRAZ.win_edit('KOPIAW2');
   exec('set_kop_alg','!zws_par_fspr',1);
   _a:={? WYRAZ.edit("
            {? ~SIK.PAR_KOP & ~PAR_WYDR.PAR2 & ~PAR_WYDR.PAR3 & ~PAR_WYDR.PAR4
            || FUN.info('Kopiowania nie można kontynuować jeśli nie zaznaczono żadnego algorytmu.'@); 'PAR_KOP'
            || {? WYRAZ.Z_KOL<>null & WYRAZ.DO_KOL<>null & WYRAZ.Z_KOL=WYRAZ.DO_KOL
               || FUN.info('Kolumny muszą być różne.'@); 'DO_KOL'
               || __CHK.record2(WYRAZ,'Z_KOL',,'DO_KOL',,)
               ?}
            ?}
          ")
       || {? SIK.PAR_KOP || exec('formuly','!zws_par_fspr') ?};
          DEFWREF:=tab_tmp(1,'REF','INTEGER','Ref');
          ssize_s:=DEFW.sel_size; bledy_s:=0;
          1
       || 0
       ?};
   exec('set_kop_alg','!zws_par_fspr',0);
   GR_KOL.actions('WER','');
   _a
?}


\akop_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: 'Grupa po' dla akcji 'kopIa algorytmow' w sprawozdaniach finans.
::  OLD: \akop_ag/skid_si2.fml
::----------------------------------------------------------------------------------------------------------------------
{? (SIK.PAR_KOP & exec('zam_form','!zws_par_fspr',1)) | ~SIK.PAR_KOP
|| _pet:=DEFWREF.first;
   {!
   |? _pet
   |! {? DEFW.seek(DEFWREF.REF,)
      || _alg:=DEFW.ALGORYTM;
         WYRAZ.WIERSZ:=DEFW.ref;
         {? _alg='F' & SIK.PAR_KOP
         || exec('kop_algp','!zws_par_fspr',1)
         || exec('kop_defa','!zws_par_fspr',1)
         ?}
      || bledy_s+=1
      ?};
      _pet:=DEFWREF.next
   !}
|| bledy_s:=ssize_s
?};
obj_del(DEFWREF);
FUN.info('Zaznaczonych %1. Skopiowano %2.'@[$ssize_s,$(ssize_s-bledy_s)]);
{? var_pres('TMPFOR')>0 || &tmpfor; &tmpfor1; obj_del(TMPFOR) ?};
&ssize_s; &bledy_s


\aeparkop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: Po redakcji SIK.PAR_KOP
::  OLD: \aeparkop/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? SIK.PAR_KOP=0 || SIK.ROK3:=null ?};
WYRAZ.efld_opt('KOPIAW2','enable='+$SIK.PAR_KOP,SIK,'ROK3');
1


\bl_defk_gr_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Wartosc poczatkowa dla DEFK.GR_KOL
::  OLD: \bl_defk_gr_kol/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.KOLUMNA


\bl_defk_lm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Wartosc poczatkowa dla DEFK.LM
::  OLD: \bl_defk_lm/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
{? WYRAZ.KOLUMNA().ALGORYTM='W'
|| 'L'
|| GR_KOL.ALGORYTM
?}


\be_defk_lm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przed redakcja DEFK.LM
::  OLD: \be_defk_lm/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.KOLUMNA().ALGORYTM='W'


\ar_defk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Rekord po tabeli DEFK
::  OLD: \ar_defk/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
_r:={? UNPAR.P34
    || __CHK.record2(DEFK,'LM',,'ARGUMENT','Kolumna','DEFW','Wiersz','WSP','Współczynnik')
    || __CHK.record2(DEFK,'LM',,'ARGUMENT','Kolumna','WSP','Współczynnik')
    ?};
{? _r=''
|| {? WYRAZ.KOLUMNA().ALGORYTM='W' & DEFK.LM<>'L' & DEFK.LM<>'M'
   || FUN.info('Dozwolone wartości typu to: L (licznik) lub M (mianownik).'@);
      _r:='LM'
   ?}
?};
_r


\be_defk_defw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przed wyswietleniem DEFK.DEFW
::  OLD: \be_defk_defw/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P34


\br_defk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Rekord przed tabeli DEFK
::  OLD: \br_defk/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P34:=DEFK.DEFW<>null;
WYRAZ.ALGDEFK:={? DEFK.LM='S' | DEFK.LM='I' || 'Składnik'
               |? DEFK.LM='L' || 'Licznik'
               |? DEFK.LM='M' || 'Mianownik'
               || ''
               ?};
''


\ba_defk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przed dołącz DEFK
::  OLD: \ba_defk/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P34:=0; 1


\bl_defk_lp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Wartosc poczatkowa dla DEFK.LP
::  OLD: \bl_defk_lp/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
DEFK.cntx_psh();
DEFK.index('LP'); DEFK.prefix(WYRAZ.KOLUMNA);
_lp:=
   {? DEFK.first()
   || DEFK.LP+1
   || 1
   ?};
DEFK.cntx_pop();
_lp


\akc_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: 'Grupa przed' dla akcji akceptacji i anulowania akc. w sprawozdaniach finans.
::   WE: _a - 1 dla akceptacji, 0 dla anulowania
::  OLD: \akc_bg/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
{? {? _a
   || TAB_SIK:=tab_tmp(3,'TYP','STRING[1]','','REF_ZR','INTEGER','','REF','INTEGER','');
      _t:=GR_SIK.sel_aget(); _ok:=1; _akc:=_l:=0;
      GR_SIK.cntx_psh();
      {? _t.first()
      || {!
         |? {? GR_SIK.seek(_t.REF,'grp_sik') & GR_SIK.AKC<>'T'
            || _w:=exec('akc_gr','!zws_par_fspr',GR_SIK.ref(),0);
               _ok:=_ok*{? _w=0
                        || TAB_SIK.prefix('S',#GR_SIK.ref());
                           {? TAB_SIK.first() || {! |? TAB_SIK.del() !} ?};
                           TAB_SIK.prefix(); 1
                        |? _w>1
                        || _l+=1; 2
                        || _l+=1; 1
                        ?};
               _akc:=1
            ?};
            _t.next()
         !}
      ?};
      obj_del(_t);
      GR_SIK.cntx_pop();
      TAB_SIK.prefix();
      {? _akc & TAB_SIK.first()
      || _ok:=FUN.ask('Akceptować zaznaczone sprawozdania?'@)
      |? _akc
      || FUN.info('Zaznaczone niezaakceptowane sprawozdania zawierają odwołania cykliczne.\nAktualizacja niemożliwa.'@); 0
      || FUN.info('Zaznaczone sprawozdania są zaakceptowane.\nPonowna aktualizacja jest zbędna.'@); 0
      ?}
   || FUN.ask('Anulować akceptację zaznaczonych sprawozdań?'@)
   ?}
|| sel_nchk();
   {? _a=1 || id:=tm_form(TMPSIK.tm_stamp) ?};
   ssize_s:=GR_SIK.sel_size; bledy_s:=l_pow:=sl_pow:=0; {? _a || pyt_typ:=_ok ?};
   1
|| {? _a=1 || VAR_DEL.delete('TAB_SIK') ?}; 0
?}


\akc_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [8.60]
:: OPIS: 'Grupa po' dla akcji akcept. i anulowania akc. w sprawozdaniach finans.
::   WE: _a - 1 dla akceptacji, 0 dla anulowania
::  OLD: \akc_ag/skid_akc.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| GR_SIK.cntx_psh();
   GR_SIK.index('SYSSKROT'); GR_SIK.prefix(REF.FIRMA);
   {? GR_SIK.first()
   || {!
      |? exec('kolej','!zws_par_fspr',1);
         {? GR_SIK.AKC='X' || GR_SIK.AKC:='T'; GR_SIK.put() ?};
         GR_SIK.next()
      !}
   ?};
   GR_SIK.cntx_pop();
   TMPSIK.index('ID'); TMPSIK.prefix(id);
   {? TMPSIK.first
   || TMPSIK.win_sel('WER');
      TMPSIK.select();
      {! |? TMPSIK.del !}
   ?};
   &id; &pyt_typ; VAR_DEL.delete('TAB_SIK')
?};
FUN.info('Zaznaczonych '+$ssize_s+'.\n'+{? _a=1
                                   || 'Zaakceptowano '
                                   || 'Anulowano '
                                   ?}+$(ssize_s-bledy_s)+
    {? sl_pow
    || ' oraz powiązanych '+$sl_pow+' (razem '+$(ssize_s-bledy_s+sl_pow)+')'
    || ''
    ?}+'.'
);
&ssize_s; &bledy_s; &l_pow; &sl_pow


\be_sslu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Przed redakcja pola SIK.SLU
::  OLD: \be_sslu/skid_slu.fml
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P10<>''


\tmp_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [???] [?????]
:: OPIS: Wywolanie wydruku informacji o akceptacji definicji sprawozdan definiowalnych
::  OLD: \tmp_sik/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
exec('drajwer','!zws_par_fspr',1);
exec('rep_exec','#b_report','ZWS_PAR_FSPR','fks_tm1',,,,,,,,'W')


\trig_defa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Triger przed add i put dla tabeli DEFA
::----------------------------------------------------------------------------------------------------------------------
DEFA.LM_OPIS:={? 'SC'*DEFA.LM>0 || 'Składnik'
              |? DEFA.LM='L' || 'Licznik'
              |? DEFA.LM='M' || 'Mianownik'
              ?};
1


\ar_wopis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Rekord po tabeli WOPIS
::----------------------------------------------------------------------------------------------------------------------
__CHK.record(WOPIS,,'T')


\par_wym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Czy parametr jest wymagany?
::   WE: _a - nazwa parametru
::----------------------------------------------------------------------------------------------------------------------
_a*'Maska konta'>0 |
_a*'Strona konta'>0 |
_a*'Typ rozrachunku'>0 |
_a*'Od ilu dni po terminie płatn.'>0 |
_a*'Typ (prefix)'>0 |
_a*'Poziom'>0 |
_a*'Hierarchia słowników'>0


\bv_alg_par_wyl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Przed wyświetleniem pola ALG_PAR.WYL
::----------------------------------------------------------------------------------------------------------------------
_enabled:=ALG_PAR.WYL='T';
ALG_PAR.efld_opt('RED3','enable='+$_enabled,SIK,'FIRMAWYL');
exec('bv_sik_firmawyl','!zws_par_fspr');
~~


\ae_alg_par_wyl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Po redagowaniu pola ALG_PAR.WYL
::----------------------------------------------------------------------------------------------------------------------
{? ALG_PAR.WYL<>'T'
|| ALG_PAR.FIRMAWYL:=ALG_PAR.FORM_WYL:=null
?};
1


\bv_sik_firmawyl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Przed wyswietleniem pola SIK.FIRMAWYL
::----------------------------------------------------------------------------------------------------------------------
ALG_PAR.efld_opt('RED3','enable='+$(ALG_PAR.WYL='T' & SIK.FIRMAWYL='S'),ALG_PAR,'FIRMAWYL');
ALG_PAR.efld_opt('RED3','mark='+$(ALG_PAR.WYL='T' & SIK.FIRMAWYL='S'),ALG_PAR,'FIRMAWYL');
ALG_PAR.efld_opt('RED3','enable='+$(ALG_PAR.WYL='T' & SIK.FIRMAWYL='F'),ALG_PAR,'FORM_WYL');
ALG_PAR.efld_opt('RED3','mark='+$(ALG_PAR.WYL='T' & SIK.FIRMAWYL='F'),ALG_PAR,'FORM_WYL');
~~


\ae_sik_firmawyl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Po redagowaniu pola SIK.FIRMAWYL
::----------------------------------------------------------------------------------------------------------------------
{? SIK.FIRMAWYL='S'
|| ALG_PAR.FORM_WYL:=null
|| ALG_PAR.FIRMAWYL:=null;
   ZMIENNE.RODZAJ:='w'
?};
1


\set_alg_par_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Ustawia okno redagowania tabeli ALG_PAR
::----------------------------------------------------------------------------------------------------------------------
{? GR_SIK.FIRMA=REF.GRUPA & DEFW.TAB='' & DEFW.SLU=null & var_press('Konsolid')>0
|| ALG_PAR.win_edit('RED3')
|| ALG_PAR.win_edit('RED1')
?};
~~


\prefix_alg_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Ustawia dziedzinę ALG_PAR
::   WE: _a - czy algorytmy dla wyłączeń
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')>0
|| SIK.WYL:=_a
?};
ALG_PAR.hdr_sel();
{? SIK.ROK1<>null
|| ALG_PAR.hdr_sel(' (z roku %1)'@[SIK.ROK1().NAZ])
|| ALG_PAR.hdr_sel(' (wszystkie)'@)
?};
{? SIK.WYL='T'
|| ALG_PAR.win_edit('RED3');
   ALG_PAR.actions_grayed('WER1','B:B')
|| ALG_PAR.win_edit('RED1');
   ALG_PAR.actions_grayed('WER1')
?};
_enabled:=REF.S_FIRMA=REF.GRUPA;
ALG_PAR.efld_opt(ALG_PAR.win_edit('?'),'mark='+$_enabled,ALG_PAR,'FIRMA');
{? REF.S_FIRMA<>REF.GRUPA
|| ALG_PAR.index('ALG_PAR7');
   {? SIK.ROK1<>null
   || ALG_PAR.prefix(REF.FIRMA,WYRAZ.WIERSZ,WYRAZ.KOLUMNA,SIK.WYL,SIK.ROK1().NAZ)
   || ALG_PAR.prefix(REF.FIRMA,WYRAZ.WIERSZ,WYRAZ.KOLUMNA,SIK.WYL)
   ?}
|| ALG_PAR.prefix();
   ALG_PAR.f_set(
      'FIRMA(SYMBOL),ROK(NAZ),LP',
      'join ROK_F using(ALG_PAR.ROK,ROK_F.REFERENCE) join FIRMA using(ALG_PAR.FIRMA,FIRMA.REFERENCE)',
      'DEFW=:_a and GR_KOL=:_b and WYL=\':_c\' '+
      {? SIK.ROK1<>null || 'and ROK_F.POCZ_ROK=TO_DATE(\':_d\') ' || '' ?}+
      'and (ROK_F.PLAN_GR=\'N\' or ALG_PAR.MIEJSCE=\'F\') and FIRMA.TYP<>\'W\'',
      DEFW.ref(),GR_KOL.ref(),SIK.WYL,$SIK.ROK1().POCZ_ROK
   )
?};
~~


\bl_alg_par_wyl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Wartość poczatkowa pola ALG_PAR.WYL
::----------------------------------------------------------------------------------------------------------------------
SIK.WYL


\be_alg_par_firm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Przed redakcją pola ALG_PAR.FIRMA
::----------------------------------------------------------------------------------------------------------------------
{? REF.S_FIRMA=REF.GRUPA & SIK.WYL='T'
|| FIRMA.prefix();
   {? SIK.WYL='T'
   || FIRMA.f_set(
         'SYMBOL',
         '',
         'FIRMA.TYP=\'C\' or FIRMA.TYP=\'S\''
      )
   || FIRMA.f_set(
         'SYMBOL',
         'join ROK_F using (FIRMA.REFERENCE,ROK_F.FIRMA)',
         'FIRMA.TYP=\'C\' or FIRMA.TYP=\'S\' and ROK_F.PLAN_GR=\'N\' '+
         {? ALG_PAR.ROK || 'and ROK_F.POCZ_ROK=TO_DATE(\':_a\')' || '' ?},$ALG_PAR.ROK().POCZ_ROK
      )
   ?};
   _o:=FIRMA.mk_sel('Firmy','P',,,,,,,'U');
   FIRMA.win_fld(_o,,'SYMBOL');
   FIRMA.win_fld(_o,,'OPIS',,,60);
   {? ALG_PAR.ROK & SIK.WYL='T'
   || FIRMA.win_act(_o,,'Rekord',,,,"
         {? FIRMA.ref()<>REF.GRUPA
         || _rok:=exec('rok_f_f','konsolidacja',ALG_PAR.ROK,FIRMA.ref());
            ROK_F.cntx_psh();
            ROK_F.prefix();
            _plan_gr:=ROK_F.seek(_rok) & ROK_F.PLAN_GR='T';
            ROK_F.cntx_pop()
         || _plan_gr:=1
         ?};
         {? _plan_gr
         || Color.fnd_kol('FIRMA#02#01')
         || ''
         ?}
      ",,1);
      FIRMA.win_act(_o,,'Formuła','Legenda',,,"exec('legenda','color','FIRMA#02')")
   ?};
   FIRMA.win_dict(_o);
   1
?}


\ae_alg_par_firm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Po redakcji pola ALG_PAR.FIRMA
::----------------------------------------------------------------------------------------------------------------------
_rok:=ALG_PAR.ROK;
{? ALG_PAR.ROK<>null & ALG_PAR.FIRMA<>ALG_PAR.ROK().FIRMA
|| ALG_PAR.ROK:={? ALG_PAR.FIRMA=REF.GRUPA
                || exec('rok_f_g','konsolidacja',ALG_PAR.ROK)
                || exec('rok_f_f','konsolidacja',ALG_PAR.ROK,ALG_PAR.FIRMA)
                ?};
   anal_rok:=ALG_PAR.ROK;
   ALG_PAR.cntx_psh();
   ALG_PAR.index('ALG_PAR6'); ALG_PAR.prefix(ALG_PAR.FIRMA,ALG_PAR.WYL,ALG_PAR.DEFW,ALG_PAR.GR_KOL,ALG_PAR.ROK,ALG_PAR.MIEJSCE);
   {? ALG_PAR.last()
   || _lp:=ALG_PAR.LP+1
   || _lp:=1
   ?};
   ALG_PAR.cntx_pop();
   ALG_PAR.LP:=_lp
?};
REF.FIRMA:=ALG_PAR.FIRMA;
{? FIRMA.f_active() || FIRMA.f_clear() ?};
1


\set_kop_alg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Ustawia formyły dla pól w oknach parametrów kopiowania algorytmów
::   WE: _a - 1-ustawia 0-przywraca
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| WYRAZ.PAR:=0;
   WYRAZ.WSP:=1;
   WYRAZ.fld_fml('PAR','BEFORE_DISPLAY',"exec('bv_wyraz_par','!zws_par_fspr')")
|| WYRAZ.fld_fml('PAR','BEFORE_DISPLAY',"*")
?}


\bv_wyraz_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Przed wyswietleniem WYRAZ.PAR
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.efld_opt(WYRAZ.win_edit('?'),'enable='+$WYRAZ.PAR,WYRAZ,'WSP');
~~


\prefix_alg_par2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Ustawia prefix dla okienka PAR_ALL2 tabeli ALG_PAR
::----------------------------------------------------------------------------------------------------------------------
ALG_PAR.hdr_sel();
{? SIK.ROK1<>null
|| ALG_PAR.hdr_sel(' (z roku %1)'@[SIK.ROK1().NAZ])
|| ALG_PAR.hdr_sel(' (wszystkie)'@)
?};
{? SIK.WYL='T'
|| ALG_PAR.win_edit('RED3');
   ALG_PAR.actions_grayed('WER1','B:B')
|| ALG_PAR.win_edit('RED1');
   ALG_PAR.actions_grayed('WER1')
?};
_enabled:=REF.S_FIRMA=REF.GRUPA;
ALG_PAR.efld_opt(ALG_PAR.win_edit('?'),'mark='+$_enabled,ALG_PAR,'FIRMA');
{? REF.S_FIRMA<>REF.GRUPA
|| ALG_PAR.index('ALG_PAR3');
   {? SIK.ROK1<>null
   || ALG_PAR.prefix(REF.FIRMA,WYRAZ.WIERSZ,SIK.ROK1().NAZ)
   || ALG_PAR.prefix(REF.FIRMA,WYRAZ.WIERSZ)
   ?}
|| ALG_PAR.prefix();
   ALG_PAR.f_set(
      'FIRMA(SYMBOL),ROK(NAZ),LP',
      'join ROK_F using(ALG_PAR.ROK,ROK_F.REFERENCE) join FIRMA using(ALG_PAR.FIRMA,FIRMA.REFERENCE)',
      'DEFW=:_a '+
      {? SIK.ROK1<>null || 'and ROK_F.POCZ_ROK=TO_DATE(\':_d\') ' || '' ?}+
      'and (ROK_F.PLAN_GR=\'N\' or ALG_PAR.MIEJSCE=\'F\') and FIRMA.TYP<>\'W\'',
      DEFW.ref(),$SIK.ROK1().POCZ_ROK
   )
?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:41 851f7f49b31bf9adbdbd4add2652657a847bc3a03dc0f7d3cc0187066224480ed79d161c83b65c26620e89daaedf402f1c80d1ee372c70134da4adae4c27b10b131f047a3db708cd909494976822bc049e7d98b20e6549eb50f3b755e3d1710698ea7ca39f59e2156fb72953aac73604bf06aeda4c18bf86dd4c03f6c49400c0
