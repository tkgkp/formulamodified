:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lmo_mob_dprz.fml
:: Utworzony: 01.04.2016
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Czynność LMO_MOB_DPRZ - Operacja przyjęcia dostawy
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# properties=LOOP,SERVICE
::# permissions=ODDZ
::# kind=WE,  symbol=EANN,    type=_EANN,    name=Operacja mobilna,              required=N,   keyref=T
::# kind=WE,  symbol=GEN_OPE, type=STRING,   name=Generacja operacji,            required=N
::# kind=WE,  symbol=TYPYDOK, type=_TYPYDOK, name=Typ dokumentu magazynowego,    required=N,   fml_val="exec('typydok','!lmo_mob_dprz')", fml_exp="exec('typydok_export','magdok_nag',_a)"
::# kind=WE,  symbol=MG,      type=_MG,      name=Magazyn dla operacji,          required=N,   fml_val="exec('mg','!lmo_mob_dprz')"
::# kind=WE,  symbol=OKR,     type=NUMBER,   name=O ile przesunąć datę,          required=N
::# kind=WE,  symbol=REAZAM,  type=STRING,   name=Czy realizacja zamówień,       required=N,   fml_val="exec('reazam','!lmo_mob_dprz')"
::# kind=WE,  symbol=WEB,     type=STRING,   name=Operacje webservice,           required=N,   fml_val="exec('opeweb','!lmo_mob_dprz')"
::# kind=WEW, symbol=ND,      type=_ND,      name=Dokument przyjęcia,            required=N
::# kind=WY,  symbol=ND,      type=_ND,      name=Dokument przyjęcia,            required=N
::# kind=WY,  symbol=GEN_OPE, type=STRING,   name=Generacja operacji,            required=N
::# kind=WY,  symbol=IL_SRV,  type=NUMBER,   name=Ilość zatwierdzonych operacji, required=N
::# condition=Rejestracja dokumentu, act_uid=LMG_MAG_DAPZ,   auto=T,  formula=_a.ND<>~~ & _a.ND<>null()
_mp:=params_get().mp;
_in:=params_get().in;
_out:=params_get().out;

_out.GEN_OPE:=_mp.grpkey(_out.GEN_OPE,_in.GEN_OPE);

exec('init','lmo');

_akcja:=_mp.akcja();
_auto:=_mp.isAutoRun();
_service:=_mp.isService();
_proces:=_mp.pathProc();
_area:=_mp.pathArea();

_select:=1;

_mp.trigRef('ND',,1,,'INT','ND');

_oper:=var_pres('GEN_OPE',_in)=type_of('') & _in.GEN_OPE<>'' & _mp.loop()<>0;
_reazam:=var_pres('REAZAM',_in)=type_of('') & _in.REAZAM='T';
_czyweb:=var_pres('WEB',_in)=type_of('') & _in.WEB='TAK';

:: ewentualny wybór operacji
{? ~_service & ~_oper & ~(var_pres('EANN',_in)=type_of(null()) & _in.EANN) & ~_area
|| exec('openean','open_tab',ST.ODDZ+'__');
   {? exec('operacje','magazyn_mob','P',,,0,,{? _czyweb || 'W' || 'M' ?})
   || _in.EANN:=EANN.ref(); _mp.save('IN','EANN',EANN.ref())
   || _select:=0
   ?}
?};

{? _service & ~(var_pres('TYPYDOK',_in)=type_of(null()) & _in.TYPYDOK)
|| _mp.error('Dla czynności typu serwis brak wymaganego parametru TYPYDOK.')
|? _service & ~_czyweb & ~(var_pres('MG',_in)=type_of(null()) & _in.MG)
|| _mp.error('Dla czynności typu serwis dotyczącej operacji mobilnych brak wymaganego parametru MG.')
|? ~_service & ~_oper & ~(var_pres('EANN',_in)=type_of(null()) & _in.EANN)
|| {? ~_select
   || _mp.cancel()
   || _mp.error('Brak wymaganego parametru EANN.')
   ?}
|? ~_service & ~_oper & exec('FindAndGet','#table',EANN,_in.EANN,,"TYP")<>'P'
|| _mp.error('Parametr EANN wskazuję na inną operację mobilną niż Przyjęcie dostawy.')
|? _service
|| {? var_pres('OKR',_in)<>type_of(0) | _in.OKR<0 || _in.OKR:=0 ?};
   _mp.save('IN',_in);

   _continue:=0;
   _gen_ope:='';
   _ctrl:=1;

   {? _mp.loop()=0
   || EANN.cntx_psh();
      EANN.prefix();
      params_set('mp',_mp,'in',_in);
      _gen_ope:=exec('autoOper','!lmo_mob_dprz');
      _internal:=_mp.load('INT');
      _continue:={? var_pres('ND',_internal)=type_of(null()) & _internal.ND || 1 || -1 ?};
      obj_del(_internal);
      EANN.cntx_pop()
:: wywołanie w pętli
   || _continue:=var_pres('GEN_OPE',_in)=type_of('') & _in.GEN_OPE<>'';
      {? _continue || _gen_ope:=_in.GEN_OPE ?}
   ?};
   {? _continue=-1
:: Wycofano się z wystawiania operacji
   || _mp.done()
   |? _continue=1 & _gen_ope<>''
:: Zapisanie parametru wyjściowego EANN, wykluczenie kolejnej realizacji z pętli, zakończenie czynności
   || ND.cntx_psh();
      _internal:=_mp.load('INT');
      {? var_pres('ND',_internal)=type_of(null()) & _internal.ND || ND.use(ref_name(_internal.ND)) ?};
      obj_del(_internal);
      ND.prefix();
      _grp_key:=_gen_ope-1;
      _grp_key_on:=_grp_key+'1';
      _grp_key_off:=_grp_key+'0';
      {? _grp_key<>''
      || ND.index('GRP_KEY');
         ND.prefix(_grp_key_on);
         {? ND.first()
         || ND.cntx_psh();
            ND.prefix();
            ND.GRP_KEY:=_grp_key_off;
            do();
            ND.put();
            _mp.save(exec('kind_out','#b_port'),'ND',ND.ref());
            _mp.save(exec('kind_out','#b_port'),'GEN_OPE',_gen_ope);
            end();
            ND.cntx_pop();
            {? ND.first()
::          kontynuacja pętli
            || _mp.loop_continue()
            ?}
         ?}
      ?};
      ND.cntx_pop();
      _mp.done()
   |? _ctrl
   || _mp.error('Brak oczekiwanego parametru GEN_OPE.')
   ?}

|| {? var_pres('TYPYDOK',_in)<>type_of(null()) || _in.TYPYDOK:=null() ?};
   {? var_pres('MG',_in)<>type_of(0) || _in.MG:=null() ?};
   {? var_pres('OKR',_in)<>type_of(0) | _in.OKR<0 || _in.OKR:=0 ?};
   _mp.save('IN',_in);
   _continue:=0;
   _gen_ope:='';
   _ctrl:=1;

   {? _mp.loop()=0
:: pierwsze wywołanie
   || EANN.cntx_psh();
      _jest:=EANN.seek(_in.EANN);
      {? ~_jest
      || _mp.error('Nie znaleziono operacji mobilnej.')
      |? (_wyp:=exec('ctrlEANN','magazyn_mob','P',0))<=0
      || _ctrl:=0;
         _mp.cancel()
      || _answer:=
         {? _akcja='Generuj_wg_ope'
            | _proces
            | _mp.pathTodo()
         || params_set('mp',_mp,'in',_in);
            ZAKR.REAZAM:={? _reazam || 'T'
                         |? (1+EANN.RODZ)='Z' || exec('get','#params',100600,2)
                         || 'N'
                         ?};
            _grp_key:=exec('realeann_mag','magazyn_mob','P',_akcja='Generuj_wg_ope',_auto,,_wyp);
            _internal:=_mp.load('INT');
            _continue:={? var_pres('ND',_internal)=type_of(null()) & _internal.ND || 1 || -1 ?};
            {? _continue=1
            || _gen_ope:=exec('FindAndGet','#table',ND,_internal.ND,,"GRP_KEY",'')
            ?};
            obj_del(_internal);
            {? _grp_key<>'' & ZAKR.REAZAM='T'
            || _tabnd:=exec('grpKey2Tab','powdok',_grp_key);
               exec('add_pownzd','powdok',_tabnd,ZAKR.REFSQL);
               obj_del(_tabnd)
            ?}
         || _mp.error('Nieobsługiwana ścieżka.')
         ?}
      ?};
      EANN.cntx_pop()
:: wywołanie w pętli
   || _continue:=var_pres('GEN_OPE',_in)=type_of('') & _in.GEN_OPE<>'';
      {? _continue || _gen_ope:=_in.GEN_OPE ?}
   ?};

   {? _continue=-1
:: Wycofano się z wystawiania operacji
   || 1
   |? _continue=1 & _gen_ope<>''
:: Zapisanie parametru wyjściowego EANN, wykluczenie kolejnej realizacji z pętli, zakończenie czynności
   || ND.cntx_psh();
      _internal:=_mp.load('INT');
      {? var_pres('ND',_internal)=type_of(null()) & _internal.ND || ND.use(ref_name(_internal.ND)) ?};
      obj_del(_internal);
      ND.prefix();
      _grp_key:=_gen_ope-1;
      _grp_key_on:=_grp_key+'1';
      _grp_key_off:=_grp_key+'0';
      {? _grp_key<>''
      || ND.index('GRP_KEY');
         ND.prefix(_grp_key_on);
         {? ND.first()
         || ND.cntx_psh();
            ND.prefix();
            ND.GRP_KEY:=_grp_key_off;
            do();
            ND.put();
            _mp.save(exec('kind_out','#b_port'),'ND',ND.ref());
            _mp.save(exec('kind_out','#b_port'),'GEN_OPE',_gen_ope);
            end();
            ND.cntx_pop();
            {? ND.first()
::          kontynuacja pętli
            || _mp.loop_continue()
            ?}
         ?}
      ?};
      ND.cntx_pop();
      _mp.done()
   |? _ctrl
   || _mp.error('Brak oczekiwanego parametru GEN_OPE.')
   ?}
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));
_out:=_mp.load(exec('kind_in','#b_port'));

_wgr:={? var_pres('EANN',_in)<>type_of(~~) & _in.EANN
      || _in.EANN
      || null()
      ?};

{? _wgr<>null()
|| 'Zarejestruj przyjęcie dostawy na podstawie operacji mobilnej %1'@@[exec('record','#to_string',_wgr)]
|| 'Zarejestruj przyjęcie dostawy'@@
?}


\typydok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na wartość parametru TYPYDOK
::   WY: TYPYDOK.ref()
::----------------------------------------------------------------------------------------------------------------------
_prod:=exec('tte_lic','tte');
exec('typ_dok','lmg','"TYPYDOK".P=\'T\''
    +{? _prod='N' || ' and "TYPYDOK".WYR=\'N\'' || '' ?},,,0,0,,,,,-1)


\mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na wartość parametru MG
::   WY: TYPYDOK.ref()
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null();
MG.cntx_psh();
MG.index('SL_ALL');
MG.prefix('T');
{? MG.first()
|| MG.win_sel('SLO');
   {? MG.select() || _wyn:=MG.ref() ?}
?};
MG.cntx_pop();
_wyn


\autoOper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Automatycznie realizuje operacje
::   WY: klucz grupujący lub pusty string
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=params_get().in;
_rodz:={? _in.TYPYDOK<>null()
       || {? exec('FindAndGet','#table',TYPYDOK,_in.TYPYDOK,,"Z='T'",0) || 'Z' || 'W' ?}
       || ''
       ?};

_il_srv:=0;
_wyn:='';

_grp_key:=tm_stamp()+'1';

_czyweb:=var_pres('WEB',_in)=type_of('') & _in.WEB='TAK';

_eann:=sql('select '+
           '  EANN.REFERENCE REF, '+
           '  EANN.DATA DATA '+
           'from @EANN '+
           ' where EANN.REFERENCE like '+'''eann_\\_\\_%'' escape ''\\'''+
           '   and EANN.AKT=''T'''+
           '   and EANN.TYP=''P'''+
           '   and EANN.STAN=''Z'''+
           '   and EANN.ZLEC='+{? _czyweb || '''T''' || '''N''' ?});

_eann.clear();
{? _eann.first()
|| {!
   |? _oddz:=1+(4-_eann.REF);
      _rok:=form((_eann.DATA~1)-2000,-2,0,'99');
      exec('open','open_tab',_oddz,_rok);
      {? (EANN.clear(); EANN.seek(_eann.REF))
       & (_rodz='' | (1+EANN.RODZ)=_rodz)
       & (_wyp:=exec('ctrlEANN','magazyn_mob','P',1))>0
      || _il_srv+=params_exec('autooper','magazyn_mob',EANN.ref(),_wyp,_grp_key)
      ?};
      _eann.next()
   !}
?};
obj_del(_eann);

_mp.save('OUT','IL_SRV',_il_srv);
{? _il_srv>0 || _wyn:=_grp_key ?};
_wyn


\reazam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Czy automatyczna realizacja operacji
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy realizacja zamówień dostaw?'@)
|| 'T'
|| 'N'
?}


\opeweb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: Cz dotyczy operacji z webservice-u?
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy operacje z webservice-u?'@)
|| 'TAK'
|| 'NIE'
?}

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 abce4b5e01772492b46cb79b81b62ee7736d0cbf05fa79444836c914e9d352be134dbe745038edb44c8805cffe967623bad0f383971bd6a00a3c028e9d6f92b79c4ec025185d6036059e6563cf561a16d61b2449615f16c7497b5a06ad10e5320fed876d2663cfe06a1f90691fe431884d53de127b9b30227f6326caf9e9cd4a
