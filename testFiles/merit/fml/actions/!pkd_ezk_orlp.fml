:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_ezk_orlp.fml
:: Utworzony: 13.05.2016
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Obsługa czynności PKD_EZK_ORLP - Rejestracja podwładnych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Rejestracja podwładnych - główna formuła czynności.
::   WE:
::   WY:
::  OLD: \init/kart_poz.fml
::----------------------------------------------------------------------------------------------------------------------
::# kind=WE, symbol=P, type=_P, name=Wskazanie pracownika, required=N, keyref=T
::# kind=WE, symbol=OSOBA, type=_OSOBA, name=Wskazanie osoby, required=N, keyref=T
::
::# permissions=UD_SKL

_par:=params_get();
params_set(_par);

_in:=_par.in;
_ib:=_par.int;
_rv:=_par.out;
_mp:=_par.mp;

_jest_p:=(type_of(_in.P)=type_of(null) & _in.P<>null);
_jest_osoba:=(type_of(_in.OSOBA)=type_of(null) & _in.OSOBA<>null);

_result:='';
_dom:=exec('domain_ref','#b_domain','PKD');
_pkd:=exec('lic','#b_domain',_dom);
{? _pkd<>null & ~_jest_p
|| _result:='Brak wskazania pracownika.'@
|? _pkd=null & ~_jest_osoba
|| _result:='Brak wskazania osoby.'@
|? _jest_p & _jest_osoba
|| _result:='Czynność musi być wywołana ze wskazaniem tylko pracownika lub tylko osoby.'@
?};
{? _result<>''
|| _mp.error(_result);
   FUN.emsg(_result);
   return()
?};

{? _pkd<>null
|| _tab:=P;
   _ref:=_in.P
|| _tab:=OSOBA;
   _ref:=_in.OSOBA
?};

_id:=exec('ref2uid','#table',_ref);
_do:=_mp.akcja();

{? _id=''
|| _result:=exec('error','!pkd_ezk_orlp')

|? _mp.isMicro()
|| {? _do='VIEW'
   || _mp.keyRef(_id);
      exec('select','!pkd_ezk_orlp',_ref,_mp);
      _mp.delRef(_id);
      _mp.cancel()
   |? _do='START'
   || _mp.keyRef(_id);
      _mp.keep()
   |? _do='STOP'
   || _mp.delRef(_id);
      _mp.cancel()
   |? _do<>''
   || _result:='Czynność %1 nie obsługuje akcji %2.'@[_mp.buf_act.UID,_do]
   ?}

|| _mp.save(_ib,_rv);
   {? _do='ZAKOŃCZ'
   || _mp.done()
   |? _mp.pathTodo()
   || _value:=exec('select','!pkd_ezk_orlp',_ref,_mp);
      {? type_of(_value)=type_of(0)
      || {? _value<>0
         || _mp.done()
         || _mp.keep()
         ?}
      || _result:=_value
      ?}
   ?}
?};

{? _result<>''
:  obsługa błędów
|| _mp.error(_result);
   FUN.emsg(_result)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Rejestracja podwładnych - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_todo:='Zarejestruj podwładnych'@;
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));
{? type_of(_in.P)=type_of(null) & _in.P<>null
|| _tab:=exec('desc','pracownik',params_get().mp);
   {? _tab.ZAW_DANE='T'
   || {? _tab.OBCY='T'
      || 'Zarejestruj podwładnych: %1 %2: Paszport - %3, Numer teczki - %4, Identyfikator - %5'@@
            [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT,_tab.T,_tab.IP]
      |? +_tab.PESEL
      || 'Zarejestruj podwładnych: %1 %2: PESEL - %3, Numer teczki - %4, Identyfikator - %5'@@
            [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PESEL,_tab.T,_tab.IP]
      || 'Zarejestruj podwładnych: %1 %2: Data urodzenia - %3, Numer teczki - %4, Identyfikator - %5'@@
            [_tab.NAZWISKO,_tab.PIERWSZE,_tab.UR_DATA,_tab.T,_tab.IP]
      ?}
   || 'Zarejestruj podwładnych'@@
   ?}
|| _tab:=exec('desc','osoba',params_get().mp);
   {? _tab.ZAW_DANE='T'
   || {? _tab.OBCY='T'
      || 'Zarejestruj podwładnych: %1 %2: Paszport - %3'@@[_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT]
      |? +_tab.PESEL
      || 'Zarejestruj podwładnych: %1 %2: PESEL - %3'@@[_tab.NAZWISKO,_tab.PIERWSZE,_tab.PESEL]
      || 'Zarejestruj podwładnych: %1 %2: Data urodzenia - %3'@@[_tab.NAZWISKO,_tab.PIERWSZE,_tab.UR_DATA]
      ?}
   || 'Zarejestruj podwładnych'@@
   ?}
?}


\done
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Obsługa akcji "Zakończ". Formuła wykonywana w dwóch środowiskach:
::       - po wywołaniu z listy zadań (okno wertowania tabeli ZS_DEF z doklejonym oknem redagowania tabeli P);
::       - w ramach obszaru roboczego (okno wertowania tabeli ZS_DEF jako składowa okna grupowego tabeli UD_DEF).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(0,0)=ZS_DEF
|| sel_exit()

|| P.cntx_psh();
   REF.P();
   params_set(params_get());
   exec('pkd_run','pkd','ZAKOŃCZ');
   P.cntx_pop()
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Zwraca treść komunikatu błędu
::   WE:
::   WY: treść komunikatu
::----------------------------------------------------------------------------------------------------------------------
'Rejestracja podwładnych niemożliwa.'@


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Obsługa czynności wykonywanej z listy zadań.
::   WE: _a - wskazanie współpracownika lub osoby
::       _b - wskazanie menadżera procesów
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_err_msg:=exec('error','!pkd_ezk_orlp');

{? var_pres('_a')<>type_of(null) | _a=null
|| return(_err_msg)
?};

{? ref_tab(_a)=OSOBA || params_exec('select_o','!pkd_ezk_orlp',_a,_b)
|? ref_tab(_a)=P || params_exec('select_p','!pkd_ezk_orlp',_a,_b)
|| _err_msg
?}


\select_o
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Obsługa czynności wykonywanej z listy zadań.
::   WE: _a - wskazanie osoby
::       _b - wskazanie menadżera procesów
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_ref:=_a;
_mp:=_b;

REF.P:=null;
REF.OSOBA:=_ref;

{? _mp.isMicro()
|| P_PZ.actions_grayed('POD_P','Z:Z');
   P_PZ.actions_grayed('POD_O','Z:Z')
?};

: pokaż podwładnych
P_PZ.cntx_psh();
P_PZ.index('WIDOK_O');
P_PZ.prefix('P',_ref);
P_PZ.win_sel('GRP_PODO');
_result:=P_PZ.select();
P_PZ.cntx_pop();

: porządki
P_PZ.actions_grayed('POD_P');
P_PZ.actions_grayed('POD_O');

_result


\select_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Obsługa czynności wykonywanej z listy zadań.
::   WE: _a - wskazanie współpracownika
::       _b - wskazanie menadżera procesów
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_ref:=_a;
_mp:=_b;

REF.P:=_ref;
REF.OSOBA:=REF.P().OSOBA;

:: przekaż parametry do formuł grupy
params_set(params_get());

:: utwórz okno zarządzania zależnościami
_wnd:=exec('mk_wnd_p','!pkd_ezk_orlp');

ZS_DEF.cntx_psh();
ZS_DEF.win_sel(_wnd);
_result:=ZS_DEF.select();
ZS_DEF.cntx_pop();

_result


\mk_wnd_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Tworzy okno zarządzania podwładnymi współpracownika.
::   WE:
::   WY: akronim okienka
::----------------------------------------------------------------------------------------------------------------------
_mode:='maximized';
:: utwórz okno przeglądania zależności służbowych współpracownika
_wnd:=ZS_DEF.grp_make('Podwładni współpracownika'@,
:: przed otwarciem
   "exec('wnd_bo','!pkd_ezk_orlp')",
:: identyfikator
   '#pkd_ezk_orlp',,,
:: podczas zamykania
   "exec('wnd_oc','!pkd_ezk_orlp')"
);

:: dodaj winietkę z danymi współpracownika
ZS_DEF.grp_edit(_wnd,P,'INFO_P',,,,,,_mode);

:: dodaj poziomy podział okienka
ZS_DEF.grp_splt(_wnd,,'horizontal','bottom');
:: dodaj nawigator dla typów zależności służbowych
ZS_DEF.grp_sel(_wnd,ZS_TYP,'NAW',,
:: po zmianie bieżącego wiersza
   "exec('zs_typ_naw_ar','zs_lib')",,,,,,,,
:: tryb wyświetlania
   _mode
);

:: dodaj pionowy podział dolnego panelu
ZS_DEF.grp_splt(_wnd,'bottom','vertical','right');
:: dodaj okienko przeglądania zależności
ZS_DEF.grp_sel(_wnd,ZS_DEF,'POD',,
:: po zmianie bieżącego wiersza
   "exec('zs_def_pod_ar','zs_lib')",,,,
:: przed obsługą
   "exec('zs_def_pod_bs','zs_lib',_a)",,,,
:: tryb wyświetlania
   _mode,,
:: ustaw jako główne okno panelu
   1
);

_wnd


\wnd_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Przed otwarciem okna podwładnych współpracownika.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
:: zachowaj stan kartoteki osobowej
P.cntx_psh();
OSOBA.cntx_psh();

:: przygotuj tabele
exec('wnd_bo','zs_lib');
REF.OSOBA();
REF.P();

:: odrysuj okna
grp_edisp(P,'INFO_P');
grp_disp(ZS_TYP,'NAW',1);
1


\wnd_oc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Podczas zamykania okna podwładnych współpracownika.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
:: przywróć stan tabel
exec('wnd_oc','zs_lib');
exec('def_dnd_setup','zs_lib','POD',0);
OSOBA.cntx_pop();
P.cntx_pop();
1


\p_pz_okno_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Okienko przed okna WER_POD tabeli P_PZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_pz_okno_b','kart_poz','P')


\p_pz_okno_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Okienko po okna WER_POD tabeli P_PZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_pz_okno_a','kart_poz')


\dolacz_wielu_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Dołączenie wielu podwładnych.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: ważne dla odrysowania widoku
_org:=params_get();

_par:=obj_new('P');
params_set('par',_par);
_par.P:=~~;

_TAB:=cur_tab(1,1);
_wnd:=cur_win(1,1);

P_PZ.cntx_psh();
{!
|? P_PZ.blank();
   P_PZ.win_edit('RED_PODW');
   P_PZ.edit("params_exec('p_pz_w_ae','kart_poz')")
|! __LOG:=obj_new(@.CLASS.JCQ);
   __LOG.init(120,,
      {? P_PZ.KLASA='Z'
      || 'Dołączanie wielu zastępców'@
      || 'Dołączanie wielu podwładnych'@
      ?}
   );
   _P:=_par.P;
   _loop:=_P.first();
   {!
   |? _loop
   |! {? P.seek(_P.SQL)
      || _osoba:='%1 %2'[P.OSOBA().NAZWISKO,P.OSOBA().PIERWSZE];
         P_PZ.PZ:=P.ref();
         {? P_PZ.P<>null & P_PZ.PZ<>null & P_PZ.PZ=P_PZ.P
         || __LOG.set_root('Błędne dane'@);
            {? P_PZ.KLASA='Z'
            || __LOG.add('Pracownik %1 nie może być swoim zastępcą.'@[_osoba])
            || __LOG.add('Pracownik %1 nie może być swoim podwładnym.'@[_osoba])
            ?}
         |? P_PZ.P_OSO<>null & P_PZ.PZ_OSO<>null & P_PZ.PZ_OSO=P_PZ.P_OSO
         || __LOG.set_root('Błędne dane'@);
            {? P_PZ.KLASA='Z'
            || __LOG.add('Osoba %1 nie może być swoim zastępcą.'@[_osoba])
            || __LOG.add('Osoba %1 nie może być swoim podwładnym.'@[_osoba])
            ?}
         || {? P_PZ.add()
            || __LOG.set_root(
                  {? P_PZ.KLASA='Z'
                  || 'Dołączono zastępcę'@
                  || 'Dołączono podwładnego'@
                  ?}
               )
            || __LOG.set_root('Wystąpił błąd podczas zapisu danych.'@)
            ?};
            __LOG.add(_osoba)
         ?}
      ?};
      _loop:=_P.next()
   !};
:  raport wykonania
   __LOG.select();
:  lokalne porządki
   obj_del(__LOG);
   obj_del(_P);
   &__LOG;
:  odrysuj widok
   P_PZ.first();
   params_set(_org);
   grp_disp(_TAB,_wnd);
   params_set('par',_par)
!};
P_PZ.cntx_pop();
params_set(_org);
~~

:Sign Version 2.0 jowisz:1048 2020/10/16 15:19:17 71c3cffc64ebed50920f719414d70b0b8249a8ea503f449be522109eae61c7bd01a8aec1f2be9dde49e5786154feb4459393afde803f88182b5663fab22fdd23f39506aae7b6f794dc47a72f923fe89106c3180070daf8702134c8ad773dec1169a4487f94c55f0eec3d2c2902a8cc0d700ed5527d02587d387f5107c15a9c38
