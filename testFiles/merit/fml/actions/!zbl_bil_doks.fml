:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zbl_bil_doks.fml
:: Utworzony: 05.02.2018
:: Autor: TS
::======================================================================================================================
:: Zawartość: Obsługa czynności wstawienia dokumentów do usługi Businesslink (KSeF, Busnesscheck)
:: UWAGA: do wersji 20.14 czynność ZWS_BIL_DOKS
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Formuła główna czynności wstawienia załacznika do usługi Businesslink (ZBL_BIL_DOKS)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::       context - [obj_new] obiekt służący do przekazywania kontekstu wywołania czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
_action:=_mp.akcja();

::# properties=SERVICE

:: PARAMETRY WE:
::# kind=WE, symbol=DOKUM, type=_DOKUM, name=Wskazanie na załącznik, required=T, keyref=T
{? var_pres('DOKUM',_in)<>type_of(~~) & var_pres('DOKUM',_in)<>type_of(null()) || return() ?};
{? var_pres('DOKUM',_in)=type_of(~~) || return() ?};

::# kind=WY, symbol=RESULT, type=STRING, name="Wynik czynności (OK, BŁĄD)", required=N
{? var_pres('RESULT',_out)<>type_of(~~) & var_pres('RESULT',_out)<>type_of('') || return() ?};
::# kind=WY, symbol=DESC, type=MEMO, name="Opis wyniku", required=N
{? var_pres('DESC',_out)<>type_of(~~) & var_pres('DESC',_out)<>type_of('') || return() ?};

{? _in.DOKUM
|| _result:=exec('dokum_send','!zbl_bil_doks',_mp,_in.DOKUM);

   {? _mp.isService() || KOMM.init(,,'Wysyłanie dokumentu'@) ?};
:: _result.STATUS=1 - OK
:: _result.STATUS=0 - błąd, który kończy czynność w trybie SERVICE, a pozostawia w trybie użytkownika
:: _result.STATUS=-1 - błąd, który ERRORuje proces
   {? _result.STATUS=1
   || _out.RESULT:='OK';
      _mp.save(,_out);
      _mp.done()
   |? _result.STATUS=-1
   || _msg:=_result.DESC;
      _mp.error(_msg)
   |? _result.STATUS=0 & _mp.isService()
   || _out.RESULT:='BŁĄD';
      _out.DESC:=_result.DESC;
      _mp.save(,_out);
      _mp.done()
   ?}

|| _msg:='Niezgodność wywołania czynności %1.\nParametr %2 musi mieć wartość.'@@['ZBL_BIL_DOKS','DOKUM'];
   FUN.emsg(_msg);
   _mp.error(_msg)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Opis dla czynności wstawienia załącznika do Businesslink (ZBL_BIL_DOKS)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_desc:='';
_keyRefs:=_mp.getRefs();
_in:=_mp.load(exec('kind_in','#b_port'));

:: jest rekord kluczowy to ustawiam odpowiedniego DOKUM
{? var_pres('[1]',_keyRefs)
|| _desc:='Wyślij załącznik do Businesslink: %1'@@[exec('record','#to_string',_keyRefs[1])]
?};
_desc


\dokum_send
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.22]
:: OPIS: Wysłanie dokumentu do usługi Businesslink.
::   WE: _a - obiekt menadżera procesów _mp
::       _b - DOKUM.ref()
::   WY: wynik przetwarzania, 1 - jeżeli ok, 0 - w przypadku błędów (np. brak kontaktu z portalem Businesslink)
::----------------------------------------------------------------------------------------------------------------------
_mp:=_a;
_dialog:=~(_mp.isAutoRun() | _mp.isService() | _mp.isGroup());
_service:=_mp.isService();
_check:=(_mp.akcja()='SPRAWDŹ');
_dokum:=_b;
_result:=obj_new('STATUS','DESC');
_result.STATUS:=0;
_result.DESC:='';

{? _dialog || KOMM.init(,,'Wysyłanie dokumentów'@) ?};

DOKUM.cntx_psh(); DOKUMZ.cntx_psh();
DOKUM.prefix();

{? DOKUM.seek(_dokum)
|| _symbol:={? DOKUM.SYM_ZEW<>'' || DOKUM.SYM_ZEW || DOKUM.SYM ?};

   {? ~DOKUM.r_lock(1,1,1)
   || _result.DESC:=
         'Pozycja zablokowana przez innego użytkownika.\n'
         'Wysłanie załącznika do Businesslink niemożliwe.'@
   ||
::    Jeżeli dokument tylko do sprawdzenia, to nadpisujemy rodzaj kontroli
      {? _check
      || DOKUM.BLC_KIND:='_';
         DOKUM.RODZAJ_K:='_';
         DOKUM.put()
      ?};

::    Sprawdzenie, czy dokument ma załączniki
      _empty:=1;
      DOKUMZ.index('DISP');
      DOKUMZ.prefix(DOKUM.ref());
      {? DOKUMZ.first()
      || _empty:=0
      ?};

::    Specjalna obsługa, jeżeli dokument przeszedł wstępną weryfikację w Businesscheck
      _to_go:=(DOKUM.KSEFSTAT='READY2GO');

::    Decyzja, czy:
::    - dokument wysyłany w celu OCR (musi być DOKUM przychodzący, jeden DOKUMZ oznaczony do OCR, wróci uzupełniony o xml)
::    - dokument wysyłany do kontrahenta (musi być DOKUM wychodzący)
::      - faktura - ref_tab(DOKUM.REFSQL)=FAKS
::      - zamówienie dostawy - ref_tab(DOKUM.REFSQL)=ZD_NAG
::      - "dokument inny" - DOKUM.REFSQL=''
      _to_ocr:=0;
      _other_doc:=0;
      _faks_doc:=0;
      _dok_doc:=0;
      _zdnag_doc:=0;
      _image:=null();
      {? DOKUM.RODZAJ_K='W' | DOKUM.RODZAJ_K='_'
      || {? #DOKUM.DOKUM<>0 & DOKUM.REFSQL<>'' & ref_tab(DOKUM.REFSQL)=FAKS & DOKUM.AUTOADD='T'
         || _faks_doc:=1
         |? DOKUM.REFSQL<>'' & ref_tab(DOKUM.REFSQL)=DOK & DOKUM.AUTOADD='T'
         || _dok_doc:=1
         |? DOKUM.REFSQL<>'' & ref_tab(DOKUM.REFSQL)=ZD_NAG & DOKUM.AUTOADD='T'
         || _zdnag_doc:=1
         |? DOKUM.KH<>null()
         || _other_doc:=1
         ?}
      |? exec('bl_par','businesslink3','OCR.Enabled')='1' & DOKUM.RODZAJ_K='P'
      || DOKUMZ.index('KOCR');
         DOKUMZ.prefix(DOKUM.ref(),'T');
         {? DOKUMZ.first()
         || _to_ocr:=1;
            _image:=DOKUMZ.DOKUM
         ?}
      ?};

::    Jeśli dokument do OCR, to oznaczamy jako Businesslink-owy i uzupełniamy obrazek
      {? _to_ocr
      || DOKUM.BL:='T';
         DOKUM.DOKUMI:=_image;
         DOKUM.put()
::    Jeśli dokument inny, to oznaczamy jako Businesslinkowy
      |? _other_doc
      || DOKUM.BL:='T';
         DOKUM.put()
      ?};

::   #DOKUM.DOKUM<>0
      {? _to_go
      ||
::       Po kontroli wysyłanie komunikatu BLMT_DOCUMENT_SEND_GO
         {? _dialog
         || {? FUN.ask('Wysłać sprawdzony dokument do KSeF?'@)
            || exec('DocumentSendGo','businesslink3',DOKUM.ref(),1)
            ?}
         || {? _service
            ||
::             Które dokumenty będą popychane w serwisie - uzależnić od typu dokumentu (obecnie zawsze tylko bezbłędne)
::             Do analizy możliwe statusy: CONFIRMED, WARNING, ERROR, UNAVAILABLE
               {? DOKUM.BLC_STAT='CONFIRMED'
               || exec('DocumentSendGo','businesslink3',DOKUM.ref(),0)
               ?}
            || exec('DocumentSendGo','businesslink3',DOKUM.ref(),0)
            ?}
         ?}

      |? (_to_ocr | _other_doc | _faks_doc | _dok_doc | _zdnag_doc)
      ||
::       Sprawdzenie, czy jest już inny dokument (faktura) wysłany do Businesslink (z wyłączeniem samego siebie)
         _ref:=DOKUM.ref();
         _sent:=0;
         {? var_pres('__MANSKSEF')=type_of('') & __MANSKSEF='BC_ATTA_ADD'
         ||
            ~~

         |? _faks_doc | _dok_doc | _zdnag_doc
         || DOKUM.cntx_psh();
            DOKUM.index('STANB');
            DOKUM.prefix(DOKUM.FIRMA,DOKUM.REFSQL,'T');
            {? DOKUM.first()
            || {!
               |? {? DOKUM.ref()<>_ref & DOKUM.AUTOADD='T' & DOKUM.BLC_KIND='' || _sent:=1 ?};
                  DOKUM.next()
               !}
            ?};
            DOKUM.cntx_pop()
         ?};

::       Ustalenie wartości znacznika KH_DOD.EFAKTURA i daty wpółpracy (KH_DOD.BL_DATE)
         _efaktura:='N';
         _bl_date:=date();
         _faks_dw:=date();
         {? _faks_doc  | _dok_doc | _zdnag_doc
         || _formula:="
               _efaktura:='N';
               _bl_date:=date();
               _faks_dw:={? DOKUM.REFSQL<>'' & ref_tab(DOKUM.REFSQL)=@.DOK
                         || DOK.DTO
                         |? DOKUM.REFSQL<>'' & ref_tab(DOKUM.REFSQL)=@.ZD_NAG
                         || ZD_NAG.DATA
                         || FAKS.DW
                         ?};
               KH_DOD.cntx_psh();
               KH_DOD.index('KH_DOD');
               KH_DOD.prefix(REF.FIRMA,DOKUM.KH);
               {? KH_DOD.first()
               || _efaktura:=KH_DOD.EFAKTURA;
                  _bl_date:=KH_DOD.BL_DATE
               ?};
               KH_DOD.cntx_pop();
               exec('obj_ntab_set','#array',,'EFAKTURA',_efaktura,'BL_DATE',_bl_date,'FAKS_DW',_faks_dw)
            ";
            _obj:=exec('FindAndGet','#table',
                  {? DOKUM.REFSQL<>'' & ref_tab(DOKUM.REFSQL)=DOK || DOK
                  |? DOKUM.REFSQL<>'' & ref_tab(DOKUM.REFSQL)=ZD_NAG || ZD_NAG
                  || FAKS
                  ?},
                  DOKUM.REFSQL,,_formula,'N');
            _efaktura:=_obj.EFAKTURA;
            _bl_date:=_obj.BL_DATE;
            _faks_dw:=_obj.FAKS_DW
         |? _other_doc
         || KH_DOD.cntx_psh();
            KH_DOD.index('KH_DOD');
            KH_DOD.prefix(REF.FIRMA,DOKUM.KH);
            {? KH_DOD.first()
            || _efaktura:=KH_DOD.EFAKTURA;
               _bl_date:=KH_DOD.BL_DATE
            ?};
            KH_DOD.cntx_pop();
            _faks_dw:=date()
         ?};

         _ready_to_send:=exec('ready_to_send','zbl_stat');
         _ready_to_ocr:=exec('ready_to_ocr','zbl_stat');
         _waiting_auth:=exec('waiting_auth','zbl_stat');

::         {? _to_ocr=0 & ref_tab(DOKUM.REFSQL)<>FAKS
::         || _result.DESC:='Do Businesslink można wysyłać tylko załączniki do dokumentów sprzedaży.'@;
::            _result.STATUS:=-1

         _is_dokum_ksef:=exec('is_dokum_ksef','zbl_dok',DOKUM.ref());

         {? _faks_doc & exec('FindAndGet','#table',FAKS,DOKUM.REFSQL,,"SZ",'')<>'S'
         || _result.DESC:='Do Businesslink można wysyłać tylko załączniki do dokumentów sprzedaży.'@;
            _result.STATUS:=-1

         |? _empty
         || _result.DESC:='Nie załączono plików do wysłania.'@

         |? _to_ocr=0 & _efaktura<>'B' & _efaktura<>'U' & ~_is_dokum_ksef
         || _result.DESC:='Kontrahent nie jest aktywnym partnerem w usłudze Businesslink.'@

::         |? _faks_doc & DOKUM.AUTOADD<>'T'
::         || _result.DESC:='Do Businesslink można wysyłać tylko wydruki faktur generowane automatycznie.'@

         |? _faks_doc & exec('FindAndGet','#table',FAKS,DOKUM.REFSQL,,"STAT_REJ",'N')<>'T'
         || _result.DESC:='Do Businesslink można wysyłać tylko wydruki faktur z poziomu zaakceptowanego dokumentu.'@

         |? _faks_doc & DOKUM.STAT_REJ<>'T'
         || _result.DESC:='Do Businesslink można wysyłać tylko wydruki faktur wygenerowane do zaakceptowanego dokumentu.'@

         |? _zdnag_doc & exec('FindAndGet','#table',ZD_NAG,DOKUM.REFSQL,,"STAT_REJ",'N')<>'T'
         || _result.DESC:='Do Businesslink można wysyłać tylko wydruki zamówień z poziomu zaakceptowanego dokumentu.'@

         |? (_faks_doc | _dok_doc | _zdnag_doc | _to_ocr) & DOKUM.BL_STAT<>_ready_to_send & DOKUM.BL_STAT<>_ready_to_ocr
            & DOKUM.BL_STAT<>_waiting_auth
         || _result.DESC:=
               {? _to_ocr
               || 'Do OCR można wysyłać tylko załączniki o statusie: %1.'@[_ready_to_ocr]
               || 'Można wysyłać tylko załączniki o statusie: %1.'@[_ready_to_send]
               ?}+'\n'+
               'Aktualny status załącznika: %1.'[DOKUM.BL_STAT]

         |? DOKUM.BSEND<>'N' & 5+DOKUM.KSEFSTAT<>'ERROR'
         || _result.DESC:='Ten załącznik został już wcześniej wysłany.'@;
            _result.STATUS:=1

         |? _sent
         || _result.DESC:='Inny załącznik do dokumentu został już wcześniej wysłany i nie unieważniony.'@

         |? _is_dokum_ksef & ~_check & DOKUM.KSEFAUTH=null()
         || _result.DESC:='Dokument KSeF nie został autoryzowany.'@

         || _tab:={? DOKUM.REFSQL<>'' || ref_tab(DOKUM.REFSQL) || ~~ ?};
            _lock:=0;
            {? type_of(_tab)>100 &
               (_ref_to_lock:=exec('FindAndGet','#table',_tab,DOKUM.REFSQL);
                _lock:=exec('r_lock_one','#table',_tab,_ref_to_lock); _lock=0)
            || _result.DESC:=
                  'Pozycja źródłowa dokumentu zablokowana przez innego użytkownika.\n'
                  'Wysłanie załącznika do Businesslink niemożliwe.'@
            || _termin:=tm_form(exec('create','#tm_stamp')-(exec('hour','#tm_stamp')*exec('get','#params',100361,1)));
               {? _dialog
               || _msg:=
                     {? _check
                     || 'Wysłać dokument do sprawdzenia w Businesscheck?'@
                     |? _is_dokum_ksef
                     || 'Wysłać dokument do KSeF?'@
                     || 'Wysłać załącznik do Businesslink?'@
                     ?};
                  {? _faks_dw<_bl_date
                  || _msg+=
                        '\n\n'+
                        '- data dokumentu: %1'@[$_faks_dw]+'\n'+
                        '- data rozpoczęcia współpracy: %1'@[$_bl_date]
                  ?};
                  {? time_ident_to_local(DOKUM.BL_TERM)>_termin
                  || _msg+=
                        '\n\n'+
                        '- dokument zatwierdzony do wysyłki %1'@[19+time_ident_to_local(DOKUM.BL_TERM)]+'\n'+
                        '- aktualnie ustawione opóźnienie wysyłki %1 godzin'@[$exec('get','#params',100361,1)]
                  ?};
                  {? DOKUM.BL_ERRCN>0
                  || _msg+=
                        '\n\n'+
                        '- dokument był już wysyłany %1 razy z niepowodzeniem (ostatnio: %2 %3)'@
                        [$DOKUM.BL_ERRCN,$utc_date(DOKUM.BL_ERRTM),$utc_time(DOKUM.BL_ERRTM)]
                  ?};
                  _send:=FUN.ask(_msg)
               || _send:=(time_ident_to_local(DOKUM.BL_TERM)<=_termin & _faks_dw>=_bl_date);
                  {? _send=0
                  || {? DOKUM.DATA<_bl_date
                     || _result.DESC:='Dokument nie został wysłany — data dokumentu: %1, data współpracy: %2'@
                                      [$_faks_dw,$_bl_date]
                     || _result.DESC:='Dokument nie został wysłany — zatwierdzony do wysyłki: %1'@[19+DOKUM.BL_TERM]
                     ?}
                  ?};
                  {? _send>0 & DOKUM.BL_ERRCN>0
                  || _send:=exec('send_if_errors','businesslink3',DOKUM.BL_ERRCN,DOKUM.BL_ERRTM);
                     {? _send=0
                     || _result.DESC:='Dokument nie został wysłany — %1 błędów, ostatnio: %2 %3'@
                           [$DOKUM.BL_ERRCN,$utc_date(DOKUM.BL_ERRTM),$utc_time(DOKUM.BL_ERRTM)]
                     ?}
                  ?}
               ?};
               {? _send
               || exec('czytaj','#stalesys',,XINFO);
                  {? _is_dokum_ksef & exec('send_batch_condition','businesslink3',_dokum)
                  || _res:=exec('DocumentSendBatch','businesslink3',_dokum,_check)
                  || _res:=exec('DocumentSend','businesslink3',_dokum,_check)
                  ?};
                  {? _res.STATUS=0
                  || _result.DESC:='Nie udało się wysłać dokumentu.'@+'\n'+exec('podziel_string','#string',_res.MESSAGE)
                  || _result.STATUS:=1
                  ?}
               ?}
            ?};
            {? type_of(_tab)>100
            || exec('r_unlock_one','#table',_tab,_ref_to_lock,_lock)
            ?}
         ?}
      || _result.DESC:='Dokument %1 nie jest obsługiwany.'@[_symbol]
      ?};
      DOKUM.r_unlock()
   ?}
?};

{? _result.DESC<>'' || KOMM.info(_result.DESC,_dialog) ?};

DOKUM.cntx_pop(); DOKUMZ.cntx_pop();
_result

:Sign Version 2.0 jowisz:1045 2024/01/30 12:15:53 7a485e98dec5d6c45e1c638e3a9004c184f2289ccd86d3c458b4c6adce6077cff10f7957508b5e4cb953ed80012138cfd2f6c17868b4ee6274cd628b867ab7d06f0fd3c8106aae81330c9daa2ef609ba81c2010ceb6dad9da4f90553ab9494c1588315e0b68240170812c448a661342f70449bbcac8fbef330ee25a27f5f2b5c
