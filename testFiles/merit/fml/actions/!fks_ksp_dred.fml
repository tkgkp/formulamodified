:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fks_ksp_dred.fml
:: Utworzony: 30.09.2015
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności FKS_KSP_DRED - Redakcja wartości ręcznych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Redakcja wartości ręcznych - główna formuła czynności FKS_KSP_DRED
::----------------------------------------------------------------------------------------------------------------------
::# properties=GRP_FIRM
::# permissions=FJKS
:: PARAMETRY WE:
::# kind=WE, symbol=OKRO_F, type=_OKRO_F, name=Okres bilansowy, required=N
::# kind=WE, symbol=GR_SIK, type=_GR_SIK, name=Sprawozdanie, required=N, fml_val="exec('in_gr_sik','sprfin',_a,_b)"
:: PARAMETRY WY:
::# kind=WY, symbol=OKRO_F, type=_OKRO_F, name=Okres bilansowy, required=T
::# kind=WY, symbol=GR_SIK, type=_GR_SIK, name=Sprawozdanie, required=T
_args:=params_get();
_in:=_args.in;
_out:=_args.out;
_mp:=_args.mp;
_akcja:=_mp.akcja();
_ar:=SSTALE.AR;
_ao:=SSTALE.AO;
_okro_f:=null;
_gr_sik:=null;
GR_SIK.cntx_psh();
_ok:=1;
{? _mp.pathProc()
|| _ok:=exec('sel_gr_sik','!fks_ksp_dred')
|? _mp.pathTodo()
|| _key:=_mp.getRefs();
   {? _key[1]<>~~
   || _str:=spli_str(_key[1],'#');
      {? obj_len(_str)=3
      || GR_SIK.prefix();
         _gr_sik:={? _str[1]<>'' & GR_SIK.seek(BIT.sqlint(_str[1]),) || GR_SIK.ref() || null ?};
         OKRO_F.prefix();
         _okro_f:={? _str[2]<>'' & OKRO_F.seek(BIT.sqlint(_str[2]),) || OKRO_F.ref() || null ?}
      || _ok:=0
      ?}
   || _okro_f:={? var_press('OKRO_F',_in)>0 || _in.OKRO_F || null ?};
      _gr_sik:={? var_press('GR_SIK',_in)>0 || _in.GR_SIK || null ?};
      {? ~_gr_sik
      || _ok:=exec('sel_gr_sik','!fks_ksp_dred');
         {? _ok=0 || _ok:=-1 ?}
      || _ok:=2
      ?}
   ?}
|? _akcja='Zakończ'
|| _mp.done();
   _ok:=-1
|| _okro_f:={? var_press('OKRO_F',_in)>0 || _in.OKRO_F || null ?};
   _gr_sik:={? var_press('GR_SIK',_in)>0 || _in.GR_SIK || null ?};
   _ok:=2
?};
{? _ok>0
|| {? ~_gr_sik
   || FUN.info('Nie znaleziono sprawozdania.'@);
      _mp.error('Nie znaleziono sprawozdania.')
   || GR_SIK.prefix();
      GR_SIK.seek(_gr_sik);
      {? _okro_f
      || OKRO_F.cntx_psh();
         OKRO_F.prefix();
         {? OKRO_F.seek(_okro_f)
         || SSTALE.AO:=OKRO_F.ref();
            SSTALE.AR:=OKRO_F.ROK
         ?};
         OKRO_F.cntx_pop()
      ?};
      {? _ar<>SSTALE.AR | _ao<>SSTALE.AO
      || SSTALE.AR:=_ar;
         SSTALE.AO:=_ao;
         exec('open_tabele','open_tab','F')
      ?};
      {? _ok=2
      || _kr:=exec('get_key1','sprfin');
         _mp.keyRef(_kr);
         _mp.keep()
      ?};
      _out.OKRO_F:=SSTALE.AO;
      _out.GR_SIK:=GR_SIK.ref();
      _mp.save(,_out);
      exec('dod_ospr','okresy',SSTALE.AR,SSTALE.AO().NR,OKRO_F.NR,'','M');
      REF.WYKON:=exec('wykon_firmy','konsolidacja',REF.FIRMA);
      {? GR_SIK.AKC='T'
      || exec('wiersze','!fks_ksp_dred',GR_SIK.SKROT,'R')
      || FUN.info('Sprawozdanie \'%1\' nie jest zaakceptowane.'@[GR_SIK.SKROT])
      ?}
   ?}
|? _ok=0
|| _mp.cancel()
?};
GR_SIK.cntx_pop();
{? _ar<>SSTALE.AR | _ao<>SSTALE.AO
|| SSTALE.AR:=_ar;
   SSTALE.AO:=_ao;
   exec('open_tabele','open_tab','F')
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Formuła na opis czynności na liście ToDo
::----------------------------------------------------------------------------------------------------------------------
_desc:='Redaguj wartości ręczne sprawozdania'@@;
_mp:=params_get().mp;
_keys:=_mp.getRefs();
_we:=_mp.load(exec('kind_in','#b_port'));
{? obj_len(_keys)=1 & _keys[1]<>~~
|| _key:=spli_str(_keys[1],'#');
   GR_SIK.prefix();
   {? _key[1]<>'' || GR_SIK.seek(BIT.sqlint(_key[1]),) ?};
   OKRO_F.prefix();
   {? _key[2]<>'' || OKRO_F.seek(BIT.sqlint(_key[2]),) ?};
   _desc:='Redaguj wartości ręczne sprawozdania: %1 w okresie: %2 %3'@@[GR_SIK.SKROT,OKRO_F.NAZ,OKRO_F.ROK().NAZ]
|| _gr_sik:={? var_press('GR_SIK',_we)>0 || _we.GR_SIK || null ?};
   _okro_f:={? var_press('OKRO_F',_we)>0 || _we.OKRO_F || null ?};
   GR_SIK.prefix();
   OKRO_F.prefix();
   {? _gr_sik & GR_SIK.seek(_gr_sik)
   || {? _okro_f & OKRO_F.seek(_okro_f)
      || _desc:='Redaguj wartości ręczne sprawozdania: %1 w okresie: %2 %3'@@[GR_SIK.SKROT,OKRO_F.NAZ,OKRO_F.ROK().NAZ]
      || _desc:='Redaguj wartości ręczne sprawozdania: %1'@@[GR_SIK.SKROT]
      ?}
   || {? _okro_f & OKRO_F.seek(_okro_f)
      || _desc:='Redaguj wartości ręczne sprawozdania w okresie: %1 %2'@@[OKRO_F.NAZ,OKRO_F.ROK().NAZ]
      || _desc:='Redaguj wartości ręczne sprawozdania'@@
      ?}
   ?}
?};
_desc


\sel_gr_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia sprawozdanie wybrane przez użytkownika
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
_o:=GR_SIK.mk_sel('Sprawozdania'@,'P',,'#grsiksel',,,,,'U');
GR_SIK.win_fld(_o,,'SKROT',,,,,,'Kod'@);
GR_SIK.win_fld(_o,,'NAZWA',,,,,,'Nazwa'@);
GR_SIK.win_fld(_o,,'ZAOKR',,,,,,'Wskaźnik zaokrąglenia'@);
GR_SIK.win_fld(_o,,'DOKL',,,,,,'Dokładność'@);
GR_SIK.win_fld(_o,,'AKC',,,,,,'Akceptacja'@,,,2,,"'T'","'N'");
GR_SIK.win_act(_o,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
GR_SIK.win_sel(_o);
_firma:={? REF.S_FIRMA<>REF.GRUPA || 'GR_SIK.FIRMA=\''+$REF.FIRMA+'\' and ' || '' ?};
GR_SIK.f_set('SKROT','join DEFW',_firma+'GR_SIK.AKC=\'T\' and DEFW.ALGORYTM=\'R\'');
{? ~GR_SIK.select()
|| _ok:=0
|| _ok:=2
?};
GR_SIK.f_clear();
_ok


\wiersze
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.50]
:: OPIS: Wyswietlenie wierszy podanego typu dla wskazanego sprawozdania
::   WE: _a - skrot sprawozdania
::       _b - rodzaj wiersza (R/F)
::  OLD: \pok_wrs/skid_sik.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.CZAS:=time(0,0,0); SIK.DATA_A:=date(0,0,0);
SIK.NP1:=SIK.NP2:=SIK.P1:=SIK.P2:='';
SIK.WAR1:=SIK.WAR2:=0; war1:=war2:=0;
SIK.WAR3:=SIK.WAR4:=SIK.WAR5:=0; war3:=war4:=war5:=0;
SIK.NP3:=SIK.NP4:=SIK.NP5:=SIK.P3:=SIK.P4:=SIK.P5:='';
tp:=_b; fsize:=0;
GR_SIK.cntx_psh(); GR_SIK.index('SKROT');
{? SSTALE.AR().PLAN_GR='T' & GR_SIK.FIRMA=REF.GRUPA
|| GR_SIK.prefix(GR_SIK.FIRMA,_a,)
|| GR_SIK.prefix(REF.S_FIRMA,_a,)
?};
{? GR_SIK.first()
|| SIK.GR_SIK:=GR_SIK.ref;
   GR_KOL.index('LP2');
   GR_KOL.prefix(GR_SIK.ref,'F');
   _s:=GR_KOL.size();
   _odd:=OPERATOR.DEPT=null & PAR_SKID.get(12)='T';
   _ak:={? _s<=5 || 'PN' || '' ?};
   _ak+={? _s=1 || 'WJ' || 'TG' ?}+{? _odd || {? _s=1 || 'J' || 'D' ?} || 'DJ' ?} ;
   _ak+={? _s=2 || 'W(CDE)J(CDE)' |? _s=3 || 'W(DE)J(DE)' |? _s=4 || 'W(E)J(E)' || '' ?};
   WYRAZ.KOLUMNA:={? GR_KOL.first || GR_KOL.ref() || null ?};
   DEFW.index('ALGORYTM'); DEFW.prefix();
   _from:='left join ALG_PAR using (DEFW.REFERENCE, ALG_PAR.DEFW)';
   _where:='DEFW.GRUPA=\''+$GR_SIK.ref+'\' and (DEFW.ALGORYTM=\'R\' '+
           'and DEFW.SLU IS NULL and DEFW.TAB='''')';
   DEFW.f_set('LP',_from,_where);
   DEFW.win_edit();
   _wer:='IWART';
   DEFW.win_sel(_wer);
   {? DEFW.f_active() & DEFW.f_size()=0
   || DEFW.f_clear();
      DEFW.index('LP');
      DEFW.prefix(GR_SIK.ref);
      exec('title','!fks_ksp_dred',1);
      fsize:=1
   || exec('title','!fks_ksp_dred',0)
   ?};
   DEFW.win_fml(_wer,SKID,'LANG_WER',,'ICON_BEFORE',"exec('icon','lang')");
   SIK.fld_fml('WAR1','BEFORE_DISPLAY',"exec('bv_war','sprfin',1)");
   SIK.fld_fml('WAR2','BEFORE_DISPLAY',"exec('bv_war','sprfin',2)");
   SIK.fld_fml('WAR3','BEFORE_DISPLAY',"exec('bv_war','sprfin',3)");
   SIK.fld_fml('WAR4','BEFORE_DISPLAY',"exec('bv_war','sprfin',4)");
   SIK.fld_fml('WAR5','BEFORE_DISPLAY',"exec('bv_war','sprfin',5)");
   GR_KOL.cntx_psh();
   DEFW.fld_opt('IWART','col_name=""',SIK,'WAR1');
   DEFW.fld_opt('IWART','col_name=""',SIK,'WAR2');
   DEFW.fld_opt('IWART','col_name=""',SIK,'WAR3');
   DEFW.fld_opt('IWART','col_name=""',SIK,'WAR4');
   DEFW.fld_opt('IWART','col_name=""',SIK,'WAR5');
   DEFW.fld_opt('IWART','col_name="%1"'[GR_KOL.NAZWA],SIK,'WAR1');
   {? GR_KOL.next()
   || DEFW.fld_opt('IWART','col_name="%1"'[GR_KOL.NAZWA],SIK,'WAR2');
      {? GR_KOL.next()
      || DEFW.fld_opt('IWART','col_name="%1"'[GR_KOL.NAZWA],SIK,'WAR3');
         {? GR_KOL.next()
         || DEFW.fld_opt('IWART','col_name="%1"'[GR_KOL.NAZWA],SIK,'WAR4');
            {? GR_KOL.next()
            || DEFW.fld_opt('IWART','col_name="%1"'[GR_KOL.NAZWA],SIK,'WAR5')
            ?}
         ?}
      ?}
   ?};
   GR_KOL.cntx_pop();
   {? DEFW.select(,,,_ak)
   || _params:=exec('mp_run_a','#b__box');
      _params.ACT_UID:='FKS_KSP_DRED';
      _params.UIDREF:=exec('get_key1','sprfin');
      _params.AKCJA:='Zakończ';
      _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
      exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'GR_SIK',GR_SIK.ref());
      exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OKRO_F',SSTALE.AO);
      exec('mp_run','#b__box',_params)
   ?}
|| FUN.info(
      {? _b='R'
      || 'Brak wierszy wypełnianych ręcznie.'@
      || 'Brak wierszy typu podstawowego.'@
      ?}
   )
?};
DEFW.f_clear();
SIK.fld_fml('WAR1','BEFORE_DISPLAY',"*");
SIK.fld_fml('WAR2','BEFORE_DISPLAY',"*");
SIK.fld_fml('WAR3','BEFORE_DISPLAY',"*");
SIK.fld_fml('WAR4','BEFORE_DISPLAY',"*");
SIK.fld_fml('WAR5','BEFORE_DISPLAY',"*");
&war1; &war2;
&war3; &war4; &war5;
&fsize;
GR_SIK.cntx_pop();
1


\def_rec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.50]
:: OPIS: Formula Rekord przed dla okienka WART tabeli DEFW
::  OLD: \def_rec/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
GR_KOL.cntx_psh();
WYRAZ.KOLUMNA();
exec('ust_kol','!fks_ksp_dred',1);
exec('dokres','sprfin',DEFW.DOKRES);
exec('algorytm','sprfin',DEFW.ALGORYTM);
{? GR_KOL.next()
|| exec('ust_kol','!fks_ksp_dred',2);
   {? GR_KOL.next()
   || exec('ust_kol','!fks_ksp_dred',3);
      {? GR_KOL.next()
      || exec('ust_kol','!fks_ksp_dred',4);
         {? GR_KOL.next()
         || exec('ust_kol','!fks_ksp_dred',5)
         || SIK.P5:=SIK.NP5:=''
         ?}
      || SIK.P4:=SIK.NP4:=SIK.P5:=SIK.NP5:=''
      ?}
   || SIK.P3:=SIK.NP3:=SIK.P4:=SIK.NP4:=SIK.P5:=SIK.NP5:=''
   ?}
|| SIK.P2:=SIK.NP2:=''
?};
GR_KOL.cntx_pop();
_grayed:='';
{? DEFW.ALGORYTM='P'
|| _grayed+='OJDWT'
?};
{? DEFW.TAB='' & DEFW.SLU=null
|| _grayed+='WT'
?};
{? fsize || _grayed+='M' ?};
{? OPERATOR.DEPT<>null & PAR_SKID.get(12)='N'
|| _grayed+='O'
?};
GR_SIK.cntx_psh();
{? DEFW.GRUPA().E_KOD<>'InformacjaDodatkowaDotyczacaPodatkuDochodowego' | #(5-DEFW.E_KOD)<2 | #(5-DEFW.E_KOD)>9
|| _grayed+='A'
?};
GR_SIK.cntx_pop();
DEFW.actions_grayed('IWART',_grayed);
0


\ust_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Wykorzystywana w formula Rekord przed dla okienka WART tabeli DEFW
::       (wywolywana w skid_sil.fml \def_rec)
::   WE: _a - numer kolumny
::  OLD: \ust_kol/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
($('SIK.NP'+$_a+':=GR_KOL.NAZWA'))();
($('SIK.WAR'+$_a+':=exec(''wartosc'',''sprfin'',OKRESY.OKR_RAP,DEFW.ref,GR_KOL.ref)'))();
($('SIK.P'+$_a+':={? SIK.DATA_A<>date(0,0,0) || ($SIK.DATA_A+8)+'' ''+$SIK.CZAS || '''' ?}'))()


\def_pop1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.50]
:: OPIS: Formula przed Popraw dla okienka WART tabeli DEFW
::  OLD: \def_pop1/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_lk:=_ok:=0; _str:=''; _zr:='00000';
VAR_DEL.delete('__pop1er');
__pop1er:=obj_new(5); {! _i:=1..5 |! __pop1er[_i]:=1 !};
GR_KOL.cntx_psh();
{? GR_KOL.seek(WYRAZ.KOLUMNA) || {! |? _lk+=1; GR_KOL.next() !} ?};
GR_KOL.cntx_pop();
{? DEFW.SLU<>null | DEFW.TAB<>''
|| FUN.info('Wiersz związany ze słownikiem lub kartoteką.\n'
      'Do wprowadzenia wartości należy użyć akcji: wartości słownika.'@)
|? DEFW.ALGORYTM='F' & exec('czy_algpar','sprfin')
|| FUN.info('Wiersz posiada algorytmy.\n'
      'Wprowadzanie wartości ręcznych nie jest możliwe.'@)
|? 'SWI'*DEFW.ALGORYTM>0 & exec('czy_defa','sprfin')
|| FUN.info('Wiersz posiada algorytmy.\n'
      'Wprowadzanie wartości ręcznych nie jest możliwe.'@)
|? (tp='R' | tp='F') & DEFW.ALGORYTM='P'
|| FUN.info('Nie można poprawić wiersza typu ''P''.'@)
|? exec('czy_grkol', 'sprfin')
|| FUN.info('Kolumna nie jest typu podstawowego.\nWprowadzanie wartości ręcznych nie jest możliwe.'@)
|? ({! _i:=1..5 |! _str+=$__pop1er[_i] !}; {? _lk<5 || _lk+_str=_lk+_zr || 5+_str=5+_zr ?})
|| FUN.info('Wiersz posiada algorytmy lub kolumny nie są typu podstawowego.\nWprowadzanie wartości ręcznych nie jest możliwe.'@)
|? OPERATOR.DEPT<>null & PAR_SKID.get(12)='N'
|| FUN.info('Aktualizacja danych dla jednostki księgowej jest wyłączona.'+
       '\nWprowadzenie wartości ręcznych w wybranej jednostce księgowej nie jest możliwe'@)
|| war1:=SIK.WAR1; war2:=SIK.WAR2;
   war3:=SIK.WAR3; war4:=SIK.WAR4; war5:=SIK.WAR5;
   DEFW.win_edit();
   _ok:=1
?};
VAR_DEL.delete('__pop1er');
_ok


\def_pop2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.50]
:: OPIS: Formula po Popraw dla okienka WART tabeli DEFW
::  OLD: \def_pop2/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.DATA_A:=date(); SIK.CZAS:=time(); _ok:=0; wys_ask:=1; odp_ask:=0;
WYRAZ.KOLUMNA();
{? war1$2<>SIK.WAR1$2
|| _ok:=1;
   exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref(),WYRAZ.KOLUMNA,OPERATOR.DEPT,
        'R',SIK.WAR1,((SIK.WAR1/DEFW.ZAOKR)$DEFW.DOKL))
?};
{? OPERATOR.DEPT<>null || exec('spr_wart','sprfin',SIK.WAR1,WYRAZ.KOLUMNA) ?};
{? GR_KOL.next()
|| {? war2$2<>SIK.WAR2$2
   || _ok:=1;
      exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref(),GR_KOL.ref(),OPERATOR.DEPT,
        'R',SIK.WAR2,((SIK.WAR2/DEFW.ZAOKR)$DEFW.DOKL))
   ?};
   {? OPERATOR.DEPT<>null || exec('spr_wart','sprfin',SIK.WAR2,GR_KOL.ref()) ?}
?};
{? GR_KOL.next()
|| {? war3$2<>SIK.WAR3$2
   || _ok:=1;
      exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref(),GR_KOL.ref(),OPERATOR.DEPT,
           'R',SIK.WAR3,((SIK.WAR3/DEFW.ZAOKR)$DEFW.DOKL))
   ?};
   {? OPERATOR.DEPT<>null || exec('spr_wart','sprfin',SIK.WAR3,GR_KOL.ref()) ?};
   {? GR_KOL.next()
   || {? war4$2<>SIK.WAR4$2
      || _ok:=1;
         exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref(),GR_KOL.ref(),OPERATOR.DEPT,
              'R',SIK.WAR4,((SIK.WAR4/DEFW.ZAOKR)$DEFW.DOKL))
      ?};
      {? OPERATOR.DEPT<>null || exec('spr_wart','sprfin',SIK.WAR4,GR_KOL.ref()) ?};
      {? GR_KOL.next()
      || {? war5$2<>SIK.WAR5$2
         || _ok:=1;
            exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref(),GR_KOL.ref(),OPERATOR.DEPT,
                 'R',SIK.WAR5,((SIK.WAR5/DEFW.ZAOKR)$DEFW.DOKL))
         ?};
         {? OPERATOR.DEPT<>null || exec('spr_wart','sprfin',SIK.WAR5,GR_KOL.ref()) ?}
      ?}
   ?}
?};
{? _ok || exec('pop_pow','sprfin',DEFW.ref) ?}; 1


\def_nxt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.50]
:: OPIS: Formula 'Nast. kol.>' dla okienka WART tabeli DEFW
::  OLD: \def_nxt/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.KOLUMNA();
{? GR_KOL.next()
|| {? GR_KOL.next() & GR_KOL.next() & GR_KOL.next() & GR_KOL.next()
   || WYRAZ.KOLUMNA();
      {? GR_KOL.next() || WYRAZ.KOLUMNA:=GR_KOL.ref(); 1 || 0 ?}
   ?}
?}


\def_prv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.50]
:: OPIS: Formula '<Poprz. kol.' dla okienka WART tabeli DEFW
::  OLD: \def_prv/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
WYRAZ.KOLUMNA(); {? GR_KOL.prev() || WYRAZ.KOLUMNA:=GR_KOL.ref() ?}; 0


\def_pwar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.50]
:: OPIS: Funkcja dla akcji 'wartosci slownika' w okienkach wertowania
::   WE: [_a - numer kolejnej kolumny po WYRAZ.KOLUMNA]
::       [_b - symbol jednostki ksiegowej]
::  OLD: \def_pwar/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEFW.TAB<>'' | DEFW.SLU<>null
|| WYRAZ.WIERSZ:=DEFW.ref();
   WYRAZ.KOLUMNA();
   {? _>0  || {! _i:=1.._a |! GR_KOL.next() !} || _a:=0?};
   WARTOSCI.win_sel('WER');
   WARTOSCI.hdr_sel();
   WARTOSCI.hdr_sel('Kolumna: %1'@[GR_KOL.NAZWA]);
   WARTOSCI.index('OKRES');
   _odd:=OPERATOR.DEPT;
   {? var_pres('_b')>0
   || ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA,_b,_b);
      OPERATOR.DEPT:={? ODD.first() || ODD.ref() || null ?}
   ?};
   WARTOSCI.prefix(OKRESY.OKR_RAP,REF.WYKON,DEFW.ref,GR_KOL.ref,OPERATOR.DEPT,'T');
   WARTOSCI.select();
   _war:=0;
   {? WARTOSCI.first() || {!|? _war+=WARTOSCI.WARTOSC; WARTOSCI.next() !} ?};
   _ww:=exec('wartosc','sprfin',OKRESY.OKR_RAP,DEFW.ref,GR_KOL.ref);
   {? _ww$2<>_war$2
   || SIK.CZAS:=time(); SIK.DATA_A:=date();
      exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref(),GR_KOL.ref(),OPERATOR.DEPT,
           'R',_war,((_war/DEFW.ZAOKR)$DEFW.DOKL));
      exec('pop_pow','sprfin',DEFW.ref)
   ?};
   SIK.WR1:=_war;
   OPERATOR.DEPT:=_odd
|| FUN.info('Akcja dostępna dla wiersza\nzwiązanego ze słownikiem lub kartoteką.'@)
?};
1


\def_wod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.50]
:: OPIS: Formula ustala podzial na jednostki ksiegowe dla wartosci recznych
::   WE: [_a - numer kolejnej kolumny po WYRAZ.KOLUMNA]
::  OLD: \def_wod/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? (tp='R' | tp='F') & DEFW.ALGORYTM='P' & DEFW.ALGORYTM<>'F'
|| FUN.info('Nie można poprawić wiersza typu \'P\.'@);0
|? DEFW.ALGORYTM='F' & exec('czy_algpar','sprfin',{? _=0 || 0 || _a ?})
|| FUN.info('Wiersz posiada algorytm dla roku.'@); 0
|? exec('czy_grkol','sprfin',{? _=0 || 0 || _a ?})
|| FUN.info('Kolumna nie jest typu prostego.'@);0
|? 'SWI'*DEFW.ALGORYTM & exec('czy_defa','sprfin',{? _=0 || 0 || _a ?})
|| FUN.info('Wiersz posiada algorytm.'@); 0
|| WYRAZ.KOLUMNA();
   {? _>0  || nr_k:=_a; {! _i:=1.._a |! GR_KOL.next() !} || nr_k:=0 ?};
   WYRAZ.WIERSZ:=DEFW.ref;
   TT_S:=tab_tmp(1,'ODD','STRING[8]','Jednostka księgowa'@,'W','REAL','Wartość'@);
   _odd:=OPERATOR.DEPT;
   ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
   {? ODD.first()
   || {!
      |? OPERATOR.DEPT:=ODD.ref();
         TT_S.W:=exec('wartosc','sprfin',OKRESY.OKR_RAP,DEFW.ref,GR_KOL.ref);
         TT_S.ODD:=ODD.OD;
         TT_S.add();
         ODD.next()
      !}
   ?};
   ODD.cntx_pop();
   OPERATOR.DEPT:=_odd;
   _wsel:=TT_S.mk_sel('Wartości ręczne'@,,0,'tt_s_wer');
   TT_S.win_fld(_wsel,,'ODD',,,,,1);
   TT_S.win_fld(_wsel,,'W',,,,,);
   TT_S.win_act(_wsel,0,'Popraw',,,,"
      {? DEFW.TAB<>'' | DEFW.SLU<>null
      || exec('def_pwar','!fks_ksp_dred',nr_k,TT_S.ODD);
         TT_S.W:=SIK.WR1; TT_S.put;sel_exit;0
      || 1
      ?}
   ","
      exec('po_podd','!fks_ksp_dred')
   ",1);
   TT_S.first();
   TT_S.win_sel(_wsel);
   {!|? TT_S.select(,1) !};
   {? TT_S.first() & DEFW.TAB=''& DEFW.SLU=null
   || _v:=0;
      {! |? _v+=TT_S.W; TT_S.next() !};
      _war:=exec('wartosc','sprfin',OKRESY.OKR_RAP,DEFW.ref,GR_KOL.ref);
      {? _war$2<>_v
      || {? FUN.choice('Suma dla jednostek księgowych różni się od wartości dla wszystkich '
                       'jednostek księgowych!\nCzy uaktualnić wartość dla wszystkich '
                       'jednostek księgowych?'@,1,'Tak'@,,,,'Nie'@)
         || SIK.CZAS:=time(); SIK.DATA_A:=date();
            exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref(),GR_KOL.ref(),OPERATOR.DEPT,
                 'R',_v,((_v/DEFW.ZAOKR)$DEFW.DOKL));
            exec('pop_pow','sprfin',DEFW.ref)
         ?}
      ?}
   ?};
   obj_del(TT_S); &nr_k
?}


\po_podd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.50]
:: OPIS: Formula zapisuje wartosc wiersza po zmianie w oknie
::       podzialu na jednostki ksiegowe
::  OLD: \po_podd/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
ODD.cntx_psh();
ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
{? ODD.find_key(TT_S.ODD,TT_S.ODD)
|| SIK.CZAS:=time(); SIK.DATA_A:=date();
   _odd:=OPERATOR.DEPT; OPERATOR.DEPT:=ODD.ref();
   exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref(),GR_KOL.ref(),ODD.ref,
        'R',TT_S.W,((TT_S.W/DEFW.ZAOKR)$DEFW.DOKL));
   exec('pop_pow','sprfin',DEFW.ref);
   OPERATOR.DEPT:=_odd
?};
ODD.cntx_pop()


\pr_sw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.50]
:: OPIS: Formula przed redakcja pol SIK.WAR1 ... SIK.WAR5
::  OLD: \pr_sw/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEFW.ALGORYTM='F'
|| {? _a=1
   || ALG_PAR.cntx_psh(); ALG_PAR.index('ALG_PAR1');
      ALG_PAR.prefix(REF.FIRMA,DEFW.ref(), WYRAZ.KOLUMNA,SSTALE.AR().NAZ,);
      _ok:=1;
      {? WYRAZ.KOLUMNA().ALGORYTM<>'F' | ALG_PAR.first() || _ok:=0 || _ok:=1 ?};
      ALG_PAR.cntx_pop();
      _ok
   || GR_KOL.cntx_psh();
      WYRAZ.KOLUMNA();
      _i:=1;
      {!
      |? _ok:=GR_KOL.next();
         _i+=1; _ok & _i<_a
      !};
      {? _ok
      || ALG_PAR.cntx_psh(); ALG_PAR.index('ALG_PAR1');
         ALG_PAR.prefix(REF.FIRMA,DEFW.ref(),GR_KOL.ref(),SSTALE.AR().NAZ,);
         {? GR_KOL.ALGORYTM<>'F' | ALG_PAR.first() || _ok:=0 || _ok:=1 ?};
         ALG_PAR.cntx_pop()
      ?};
      GR_KOL.cntx_pop();
      _ok
   ?}
|? 'SWI'*DEFW.ALGORYTM
|| {? _a=1
   || DEFA.cntx_psh(); DEFA.index('LP');
      DEFA.prefix(DEFW.ref(), WYRAZ.KOLUMNA);
      _ok:=1;
      {? WYRAZ.KOLUMNA().ALGORYTM<>'F' | DEFA.first() || _ok:=0 || _ok:=1 ?};
      DEFA.cntx_pop();
      _ok
   || GR_KOL.cntx_psh();
      WYRAZ.KOLUMNA();
      _i:=1;
      {!
      |? _ok:=GR_KOL.next();
         _i+=1; _ok & _i<_a
      !};
      {? _ok
      || DEFA.cntx_psh(); DEFA.index('LP');
         DEFA.prefix(DEFW.ref(),GR_KOL.ref());
         {? GR_KOL.ALGORYTM<>'F' | DEFA.first() || _ok:=0 || _ok:=1 ?};
         DEFA.cntx_pop()
      ?};
       GR_KOL.cntx_pop();
      _ok
   ?}
|| {? _a=1
   || 1
   || GR_KOL.cntx_psh();
      WYRAZ.KOLUMNA();
      _i:=1;
      {!
      |? _ok:=GR_KOL.next();
         _i+=1; _ok & _i<_a
      !};
      {? GR_KOL.ALGORYTM<>'F' || _ok:=0 ?};
      GR_KOL.cntx_pop();
      _ok
   ?}
?}


\pok_wier
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formula przed na akcje 'wszYstkie wiersze' ona IWART tabeli DEFW
::  OLD: \pok_wier/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_all:=0;
{? DEFW.index('?')<>'LP'
|| DEFW.f_clear();
   DEFW.index('LP');
   DEFW.prefix(GR_SIK.ref);
   _all:=1
|| DEFW.index('ALGORYTM');
   DEFW.prefix();
   _from:='left join ALG_PAR using (DEFW.REFERENCE, ALG_PAR.DEFW)';
   _where:='DEFW.GRUPA=\''+$GR_SIK.ref+'\' and (DEFW.ALGORYTM=\'R\' '+
           'and DEFW.SLU IS NULL and DEFW.TAB='''')';
   DEFW.f_set('LP',_from,_where)
?};
exec('title','!fks_ksp_dred',_all)


\fks_ksd_dred_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zakończenie czynności FKS_KSP_DRED
::----------------------------------------------------------------------------------------------------------------------
sel_exit()


\title
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia tytuł okna
::   WE: _a - wszystkie wiersze? 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
DEFW.hdr_sel();
DEFW.hdr_sel(
   {? _a=1
   || 'Wszystkie wiersze'@
   |? tp='R'
   || 'Wiersze wypełniane ręcznie'@
   || 'Wiersze typu podstawowego'@
   ?}
)


\rp_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Funkcja Rekord przed w okieku wertowania tabeli WARTOSCI
::  OLD: \rp_wart/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? OKRESY.OKR_RAP<>null
|| WARTOSCI.cntx_psh();
   _odd:={? PAR_SKID.get(12)='T' || OPERATOR.DEPT || null ?};
   WARTOSCI.use('wsik_'+OKRESY.OKR_RAP().ROK().KOD);
   WARTOSCI.index('OKRES');  WARTOSCI.prefix(OKRESY.OKR_RAP,REF.WYKON,DEFW.ref(),WYRAZ.KOLUMNA,_odd,'T',DEFW.KOD);
   {? WARTOSCI.first()
   || PARAM.WR1:=WARTOSCI.WARTOSC; PARAM.TW1:=WARTOSCI.POSTAC;
      SIK.DATA_A:=WARTOSCI.DATA; SIK.CZAS:=WARTOSCI.CZAS
   || PARAM.WR1:=0; PARAM.TW1:='B'; SIK.DATA_A:=date(0,0,0); SIK.CZAS:=time(0,0,0)
   ?};
   WARTOSCI.cntx_pop()
|| PARAM.WR1:=0; PARAM.TW1:='B'
?};
exec('formatuj','sprfin');
0


\rec_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Funkcja Rekord po w okieku wertowania tabeli WARTOSCI
::  OLD: \rec_wart/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=__CHK.record(WARTOSCI,,'KOD','WARTOSC');
{? _r=''
|| _ref:=WARTOSCI.ref();
   WARTOSCI.cntx_psh();
   WARTOSCI.index('OKRESCZ'); WARTOSCI.prefix(WARTOSCI.OKRES,WARTOSCI.WERSJA,WARTOSCI.CZ,WARTOSCI.WYRAZ,WARTOSCI.KOLUMNA,WARTOSCI.ODD,WARTOSCI.ZN,WARTOSCI.KOD,);
   {? WARTOSCI.first() & (-menu_txt()<>'popraw' | WARTOSCI.ref()<>_ref)
   || FUN.info('Istnieje już wartość dla pozycji słownika.');
      _r:='KOD'
   ?};
   WARTOSCI.cntx_pop()
?};
_r


\f3_sikk
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Formula na F3 dla pola WARTOSCI.KOD
::  OLD: \f3_sikk/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEFW.SLU<>null
|| SLO.index('SL');
   SLO.prefix(DEFW.SLU().SLU);
   {? ~SLO.find_key(fld) || SLO.first() ?};
   _wer:=SLO.mk_sel('Słownik: %1'@[DEFW.SLU().SLU().NAZ],,,'#slo_wer3');
   SLO.win_fld(_wer,,'KOD');
   SLO.win_fld(_wer,,'TR');
   SLO.win_act(_wer,,'Formuła','Wybierz'@@,,,,"
      {? exec('spr_mask','dok_fks',DEFW.MASKA,SLO.KOD)
      || sel_exit || FUN.info('Kod niezgodny z maską kodu słownika.')
      ?}
   ",1);
   SLO.win_act(_wer,,'Rekord',,,,"
      {? exec('spr_mask','dok_fks',DEFW.MASKA,SLO.KOD)
      || exec('findtmp','#color')
      ?}
   ");
   SLO.win_act(_wer,,'Szukaj');
   SLO.win_sel(_wer);
   {? SLO.select(,1) || fld(SLO.KOD) ?}
|? DEFW.TAB<>''
|| ($(DEFW.TAB+'.index(\''+DEFW.INDEX+'\')'))();
   ($(DEFW.TAB+'.prefix('+DEFW.PREFIX+')'))();
   {? ~($(DEFW.TAB+'.find_key(fld)'))() || ($(DEFW.TAB+'.first()'))() ?};
   wer:=($(DEFW.TAB+'.mk_sel(\'Kartoteka \',,,\'_defwtab_\'+-DEFW.TAB)'))();
   ($(DEFW.TAB+'.win_fld(wer,,'+DEFW.TAB+'.fld_acr(1))'))();
   ($(DEFW.TAB+'.win_fld(wer,,'+DEFW.TAB+'.fld_acr(2))'))();
   ($(DEFW.TAB+'.win_act(wer,,\'Rekord\',,,,'+
                        '"{? exec(\'spr_mask\',\'dok_fks\',DEFW.MASKA,($DEFW.KODF)())'+
                         '|| exec(\'findtmp\',\'#color\')'+
                         '?}")'))();
   ($(DEFW.TAB+'.win_act(wer,,\'Formuła\',\'Wybierz\',,,,'+
                        '"{? exec(\'spr_mask\',\'dok_fks\',DEFW.MASKA,($DEFW.KODF)())'+
                         '|| sel_exit'+
                         '||FUN.info(\'Kod niezgodny z maską kodu kategorii.\',)'+
                         '?}",1)'))();
   ($(DEFW.TAB+'.win_act(wer,,\'Szukaj\')'))();
   ($(DEFW.TAB+'.win_sel(wer)'))();
   &wer;
   {? ($(DEFW.TAB+'.select(,1)'))() || fld(($DEFW.KODF)()) ?}
?}


\po_sikk
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: Formula po redakcji dla pola WARTOSCI.KOD
::  OLD: \po_sikk/skid_sil.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
{? DEFW.SLU<>null & fld<>''
|| SLO.index('SL');
   SLO.prefix(DEFW.SLU().SLU);
   _ok:={? SLO.find_key(fld)
        || {? exec('spr_mask','dok_fks',DEFW.MASKA,SLO.KOD)
           || fld(SLO.KOD); WARTOSCI.TR:=SLO.TR; 1
           || FUN.info('Kod niezgodny z maską kodu wiersza.'@); 0
           ?}
        || FUN.info('Brak kodu w słowniku.'@); 0
        ?}
|? DEFW.TAB<>'' & fld<>''
|| ($(DEFW.TAB+'.index(\''+DEFW.INDEX+'\')'))();
   ($(DEFW.TAB+'.prefix('+DEFW.PREFIX+')'))();
   _ok:={? ($(DEFW.TAB+'.find_key(fld)'))()
        || {? exec('spr_mask','dok_fks',DEFW.MASKA,($DEFW.KODF)())
           || fld(($DEFW.KODF)());
              ($('WARTOSCI.TR:=DEFW.TR'))(); 1
           || FUN.info('Kod niezgodny z maską kodu wiersza.'@); 0
           ?}
        || FUN.info('Brak kodu w słowniku.'@); 0
        ?}
?};
{? _ok
|| WARTOSCI.OKRES:=OKRESY.OKR_RAP; WARTOSCI.WYRAZ:=DEFW.ref;
   WARTOSCI.KOLUMNA:=GR_KOL.ref(); WARTOSCI.ZN:='T'; WARTOSCI.ODD:=OPERATOR.DEPT;
   WARTOSCI.WERSJA:=REF.WYKON;
   WARTOSCI.CZAS:=time(); WARTOSCI.DATA:=date()
?}


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [23.25]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego lub dokument jest zaakceptowany
::       zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
_wy:=_mp.load(exec('kind_out','#b_port'));
_keyRefs:=_mp.getRefs();
{? obj_len(_keyRefs)>0
|| {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];
      {? type_of(_kref)>0
      || {? ref_name(_kref)*'grp_sik'>0
         || _record:=exec('FindAndGet','#table',GR_SIK,_kref,,,null());
            {? _record=null()
            || _mp.done()
            ?}
         ?}
      ?}
   !}
?};
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 67cbf1dfa2e33e3a7587cb3dcf0293fde35ad2e77b47ada938e3c6743cb843a31334981210b9140162a311b432d73ff2312e7d836c8f01e4f8e8544685debf03ebbfabc4c259d4610229daa9c42ceab85726e6ae641df1e1aaa47c7a50abd035c684b4e9a2233c92ba4b7d72c200e836edbd23d0af9a6a5eb04a7050fb4dd3d2
