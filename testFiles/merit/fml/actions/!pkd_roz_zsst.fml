:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_roz_zsst.fml
:: Utworzony: 11.05.2016_
:: Autor: DAROKR
::======================================================================================================================
:: Zawartość: PKD_ROZ_ZSST - Sprawozdania statystyczne.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [17.00]
:: OPIS: PKD_ROZ_ZSST - Sprawozdania statystyczne.
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
: warunek podstawowy działania tylko dla formy zatrudnienia 'P'
{? __PARSES.getVal('F_ZATR').KOD<>'P'
|| FUN.emsg('Obszar niedostępny dla formy współpracy "%1".'@[__PARSES.getVal('F_ZATR').OPIS]);
   return()
?};

popup(1,'SPRAWOZDANIA GUS'@,
   'Z-02 (%1) - koszty płacy'@ ['2021'],,
   "exec('gus_z02_start','!pkd_roz_zsst')",
   'Z-03 (%1) - raport - Sprawozdanie o zatrudnieniu i wynagrodzeniach'@ ['2021'],,
   "rep_exec('p_gus_z03')",
   'Z-05 (%1) - ekran  - Badanie popytu na pracę'@ ['2021'],,
   "exec('gus_z05_start','!pkd_roz_zsst')",
   'Z-06 (%1) - raport - Sprawozdanie o pracujących, wynagrodzeniach i czasie pracy'@ ['2021'],,
   "rep_exec('p_gus_z06')",
   'Z-12 (%1) - XML(v.5.0.1) - struktura wynagrodzeń według zawodów'@ ['2021'],,
   "exec('gus_z12_start','!pkd_roz_zsst')",
   'DG1 - Meldunek o działalności gospodarczej'@,,
   "rep_exec('p_gus_dg1')"
);
~~


\gus_rok_mce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła tworzy tabelę tymczasową z oknem redagowania do pobierania parametrów dotyczących okresu sprawozdania.
::   WE: [_a] [STRING]  - Nazwa sprawozdania (np. Z-03) [domyślnie: ''].
::       [_b] [INTEGER] - Wartość początkowa pola ROK [domyślnie: poprzedni].
::       [_c] [INTEGER] - Wartość początkowa pola MOD [domyślnie: 1].
::       [_d] [INTEGER] - Wartość początkowa pola MDO [domyślnie: 12].
::       [_e] [RULE]    - Dodatkowa formuła walidująca dane [domyślnie: "''"].
::   WY: Wynik edycji (dodatkowo pozostaje utworzona tabela tymczasowa __TPAR.
::----------------------------------------------------------------------------------------------------------------------
_title:={? var_pres('_a')=type_of('') || _a || '' ?};

{? var_pres('__TPAR')>100
|| obj_del(__TPAR)
?};

__TPAR:=tab_tmp(1,
   'ROK','INTEGER','Rok'@,
   'MOD','INTEGER','Miesiąc początkowy'@,
   'MDO','INTEGER','Miesiąc końcowy'@
);
_we:=__TPAR.mk_edit('Sprawozdanie GUS %1'@ [_title],,'#gus_tpar');
__TPAR.win_esep(_we,'Parametry'@);
__TPAR.win_efld(_we,,'ROK',,,5,,,,,'Rok sprawozdania'@);
__TPAR.win_efld(_we,,'MOD',,,5,,,,,'Miesiąc początkowy sprawozdania'@);
__TPAR.win_efld(_we,,'MDO',,,5,,,,,'Miesiąc końcowy sprawozdania'@);
__TPAR.win_edit(_we);
__TPAR.efld_opt(_we,'mark=1');
exec('ok_esc','#window',__TPAR,_we);
_tnumber:=type_of(0);
__TPAR.ROK:={? var_pres('_b')=_tnumber || _b || (date()~1)-1 ?};
__TPAR.MOD:={? var_pres('_c')=_tnumber || _c || 1 ?};
__TPAR.MDO:={? var_pres('_d')=_tnumber || _d || 12 ?};
params_set('VALID',{? var_pres('_e')=type_of("") || _e || "''" ?});
__TPAR.edit(
   "  _maxr:=date()~1;
      {? (_chk:=__CHK.record(__TPAR))<>''
      || _chk
      |? __TPAR.ROK<1900 | __TPAR.ROK>_maxr
      || __CHK.err_fld(__TPAR,'ROK',1,'Dozwolone wartości z przedziału %1-%2.'@ ['1900',$(_maxr)])
      |? __TPAR.MOD<1 | __TPAR.MOD>12
      || __CHK.err_fld(__TPAR,'MOD',1,'Dozwolone wartości z przedziału %1-%2.'@ ['1','12'])
      |? __TPAR.MDO<1 | __TPAR.MDO>12
      || __CHK.err_fld(__TPAR,'MDO',1,'Dozwolone wartości z przedziału %1-%2.'@ ['1','12'])
      |? __TPAR.MDO<__TPAR.MOD
      || FUN.emsg(
            'Wartość pola \"%2\" nie może być mniejsza niż wartość pola \"%1\".'@
            [MS.name(__TPAR,'MOD'),MS.name(__TPAR,'MDO')]
         );
         'MDO'
      || params_get().VALID()
      ?}

   "
)


\gus_rok_miesiac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [23.25]
:: OPIS: Formuła tworzy tabelę tymczasową z oknem redagowania do pobierania parametrów dotyczących okresu sprawozdania.
::       Wersja formuły gus_rok_mce dla sprawozdań wymagających podania jednej daty zamiast przedziału.
::       Tworzy obiekt globalny __TPAR.
::   WE: [_a] [STRING]  - Nazwa sprawozdania (np. DG-1) [domyślnie: ''].
::   WY: [NUMBER] - 1 gdy walidacja wprowadzonych danych zakończy się pozytywnie, w przeciwnym wypadku 0.
::----------------------------------------------------------------------------------------------------------------------

{? var_pres('__TPAR')>100
|| obj_del(__TPAR)
?};

_title:={? var_pres('_a')=type_of('') || _a || '' ?};

__TPAR:=tab_tmp(1,
   'ROK','INTEGER','Rok sprawozdania'@,
   'MIE','INTEGER','Miesiąc sprawozdania'@
);
_we:=__TPAR.mk_edit('Sprawozdanie GUS %1'@ [_title],,'#gus_tpar');
__TPAR.win_esep(_we,'Parametry'@);
__TPAR.win_efld(_we,,'ROK',,,5,,,,,'Rok sprawozdania'@);
__TPAR.win_efld(_we,,'MIE',,,5,,,,,'Miesiąc sprawozdania'@);
__TPAR.win_edit(_we);
__TPAR.efld_opt(_we,'mark=1');
exec('ok_esc','#window',__TPAR,_we);

__TPAR.ROK:=date()~1;
__TPAR.MIE:=date()~2;

__TPAR.edit(
   "  _maxr:=date()~1;
      _minr:=1900;
      {? (_chk:=__CHK.record(__TPAR))<>''
      || _chk
      |? __TPAR.ROK<_minr | __TPAR.ROK>_maxr
      || __CHK.err_fld(__TPAR,'ROK',1,'Dozwolone wartości z przedziału %1-%2.'@ [$(_minr),$(_maxr)])
      |? __TPAR.MIE<1 | __TPAR.MIE>12
      || __CHK.err_fld(__TPAR,'MIE',1,'Dozwolone wartości z przedziału %1-%2.'@ ['1','12'])
      || 1
      ?}
   "
)


\gus_rub_tab_create
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Tworzenie tabel do zbierania informacji o rubrykach atrybutow wykorzystywanych w sprawozdaniach
::       oraz danych wynikowych
::   WY: Tabelki globalne
::       __LS - tabela wynikowa z danymi wyjsciowymi
::       __R - lista rubryk i obrabianych komorek
::       __RUBO - lista rubryk i obrabianych komorek dla składników okresowych
::       __PREM - składniki okresowe ujęte według danych z tabeli PREM_OKR
::       metoda dodajaca rubryki
::  OLD: \rub_tab_create/gus.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__LS')>=100
|| __LS.clear();
   __LS.erase()
|| __LS:=tab_tmp(1,
      'REF','INTEGER','Reference pracownika'@,
      'ROK','INTEGER','Rok'@,
      'MC','INTEGER','0-Wszystkie/1-12 numer miesiąca'@,
      'KOM','STRING[5]','Komórka sprawozdania'@,
      'WAR','REAL','Wartość dla komórki'@,
      'OPIS','STRING[255]','Opis komórki'@,
      'SUMA','STRING[100]','Numery komórek do zsumowania'@,
      'LSRHS','STRING[3]','LS lub RHS'@);
   _indKOM:=__LS.ndx_tmp(,1,'KOM',,,'LSRHS',,,'ROK',,,'MC',,,'SUMA',,,'OPIS',,);
   __LS.index(_indKOM)
?};
{? var_pres('__R')>=100
|| __R.clear();
   __R.erase()
|| __R:=tab_tmp(5,
      'LSRHS','STRING[3]','LS lub RHS'@,
      'ROK','INTEGER','Rok'@,
      'MC','INTEGER','0-Wszystkie/1-12 numer miesiąca'@,
      'KOM','STRING[5]','Komórka'@,
      'RN','INTEGER','Rubryka'@,
      'MNOZNIK','INTEGER','Mnożnik'@)
?};
{? var_pres('__RUBO')>=100
|| __RUBO.clear();
   __RUBO.erase()
|| __RUBO:=tab_tmp(5,
      'LSRHS','STRING[3]','LS lub RHS',
      'ROK','INTEGER','Rok',
      'MC','INTEGER','0-Wszystkie/1-12 numer miesiąca',
      'KOM','STRING[5]','Komórka',
      'RN','INTEGER','Rubryka',
      'MNOZNIK','INTEGER','Mnożnik')
?};
{? var_pres('__PREM')>=100
|| __PREM.clear();
   __PREM.erase()
|| __PREM:=tab_tmp(3,
      'REF','INTEGER','Reference pracownika',
      'RN','INTEGER','Rubryka',
      'LT','STRING[8]','Lista płac',
      'ROK','INTEGER','Rok',
      'MC','INTEGER','Numer miesiąca',
      'KW','REAL','Kwota')
?};
:: coś nie zadziałało przy zakładaniu tabel
{? var_pres('__LS')<100 | var_pres('__RUB')<100 | var_pres('__RUBO')<100 | var_pres('__PREM')<100
|| return(0)
?};

1


\gus_sumowanie_LS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Sumowanie rubryk w tabelce __LS
::   WE: Wymagane tabela globalna __LS
::       [_a] - zaokraglenie podczas sumowania (jesli nie podano to bez zaokraglania) [INTEGER]
::              dozwolone wartosci od 0 do 9 (wartosci niedozwolone sa ignorowane)
::   WY: Zsumowane wartosci w tabelce __LS
::       0 - niepowodzenie, 1- powodzenie
::  OLD: \sumowanie_LS/gus.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__LS')<100
|| return(0)
?};
_zaokr:={? var_pres('_a')=type_of(0) & _a>=0 & _a<=9 || _a || -1 ?};
_indOld:=__LS.index('?');
_ndx:=__LS.ndx_tmp(,1,'REF',,,'KOM',,,'ROK',,,'MC',,);
__LS.index(_ndx);
__LS.prefix();
_prac:=sql('select distinct REF as REF from :_a',__LS);

{? _prac.first
|| {!
   |? __LS.prefix(_prac.REF);
      {? __LS.first
      || {!
         |? _suma:=0;
            {? +__LS.SUMA
            || _rok:=__LS.ROK;
               _mc:=__LS.MC;
               _reszta:=__LS.SUMA+',';
               __LS.cntx_psh();
               {!
               |? _wiersz:=((_reszta*',')-1)+_reszta;
                  _reszta:=(_reszta*',')-_reszta;
                  {? +_wiersz>0
                  || _znak:={? 1+_wiersz<>'-' || '+' || '-' ?};
                     {? _wiersz*_znak
                     || _wiersz:=1-_wiersz
                     ?};
                     __LS.prefix(_prac.REF,_wiersz,_rok,_mc);
                     {? __LS.first
                     || {!
                        |? {? _znak='+'
                           || _suma+={? _zaokr>=0 || __LS.WAR$_zaokr || __LS.WAR ?}
                           || _suma-={? _zaokr>=0 || __LS.WAR$_zaokr || __LS.WAR ?}
                           ?};
                           __LS.next
                        !}
                     ?}
                  ?};
                  _reszta*','
               !};
               __LS.cntx_pop()
            ?};
            {? _suma<>0
            || __LS.WAR:=_suma;
               __LS.put()
            ?};
            __LS.next
         !}
      ?};
      _prac.next
   !}
?};
__LS.index(_indOld);
1


\gus_zlicz_LS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Zebranie wartości z list plac dla poszczególnych komórek.
::   WE: Wymagane zmienne globalne
::       _a  - tabela z pracownikami do przetworzenia (wymagane pole REF [INTEGER])
::      [_b] - 1- rownież każdy pracownik oddzielnie, 0 lub brak tylko suma globalna [INTEGER]
::      [_c] - opcjonalnie prefix dla tabelki przetwarzanych _a [STRING]
::      [_d] - Początek okresu sprawozdawczego (rok/miesiac) [domyślnie: __Rspr/1]. Zapisy z okresów wczesniejszych
::      [_e] - trafiają własnie do okresu poczatkowego.
::      [_f] - Koniec okresu sprawozdawczego (rok/miesiac) [domyslnie: __Rspr/12]. Zapisy z okresow pozniejszych
::      [_g] - trafiaja właśnie do okresu końcowego.
::   WY: globalnie dostępne tabele tymczasowe __LS, __R, __PREM, __RUBO
::       rozmiar tabeli wynikowej
::  OLD: \zlicz_LS/gus.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>=100 || _Przetw:=_a || return(0) ?};
_single:={? var_pres('_b')=type_of(0) & _b=1 || 1 || 0 ?};
_prefix:={? var_pres('_c')=type_of('') || _c || '' ?};
_rp:={? var_pres('_d')=type_of(0) || _d || __Rspr ?};
_mp:={? var_pres('_e')=type_of(0) & 1<=_e & _e<=12 || _e || 1 ?};
_rk:={? var_pres('_f')=type_of(0) & _rp<=_f || _f |? _rp<=__Rspr || __Rspr || _rp ?};
_mk:={? var_pres('_g')=type_of(0) & 1<=_g & _g<=12 & _rp*12+_mp<=_rk*12+_g || _g || 12 ?};

_dalej:=1;

_TMCE:=sql('select distinct ROK, MC from :_a where MC<>0 and LSRHS=\'LS\' order by 1, 2',__LS);

O.cntx_psh();
O.index('LISTYPLA');
LS.cntx_psh();
P.cntx_psh();
P.prefix();

{? +_prefix || _Przetw.prefix(_prefix) || _Przetw.prefix() ?};

_ndxOld:=__LS.index('?');
_ndx:=__LS.ndx_tmp(,1,'REF',,,'KOM',,,'ROK',,,'MC',,);
__LS.index(_ndx);
__LS.prefix();
__R.prefix('LS',);
_indPREM:=__PREM.ndx_tmp(,1,'REF',,,'RN',,,'LT',,);
__PREM.index(_indPREM);
__PREM.prefix();
{? _dalej & _Przetw.first() & __R.first() & _TMCE.first()
|| {!
   |? O.prefix(exec('ref_firma','ustawienia'),__F_ZATR.O,_TMCE.ROK,_TMCE.MC);
      __R.prefix('LS',_TMCE.ROK,_TMCE.MC);
      __RUBO.prefix('LS',_TMCE.ROK,_TMCE.MC);
      {? O.first() & __R.first()
      || {!
         |? _dalej:=FUN.prg_next();
            {? O.R*12+O.M<_rp*12+_mp
            || _rok:=_rp; _mc:=_mp
            |? _rk*12+_mk<O.R*12+O.M
            || _rok:=_rk; _mc:=_mk
            || _rok:=O.R; _mc:=O.M
            ?};
            {? _dalej & ~-(O.LT+3)<>'SUM'
            || LS.use(O.LT);
               LS.index('PRACNRRU');
               {? _Przetw.first()
               || {!
                  |? {? P.seek(_Przetw.REF,P.name())
                     || LS.prefix(P.ref());
                        {? __R.first() & LS.first()
                        || {!
                           |? LS.prefix(P.ref(),__R.RN);
                              {? LS.first()
                              || {!
                                 |? {? _single
:: Aktualizacja danych dla bieżącego pracownika.
                                    || _ref:=#P.ref();
                                       __LS.prefix(_ref);
                                       {? ~__LS.first()
:: Przygotowanie pustych struktur dla pracownika.
                                       || __LS.cntx_psh();
                                          __LS.prefix(0);
                                          {? __LS.first()
                                          || {!
                                             |? __LS.cntx_psh();
                                                __LS.prefix();
                                                __LS.REF:=_ref;
                                                __LS.WAR:=0;
                                                __LS.add();
                                                __LS.cntx_pop();
                                                __LS.next()
                                             !}
                                          ?};
                                          __LS.cntx_pop()
                                       ?};
:: Aktualizacja b.m.
                                       {? (__RUBO.find_key(__R.KOM) & ~__PREM.find_key(_ref,LS.RB().RN,~O.LT))
                                          |
                                          ~__RUBO.find_key(__R.KOM)
                                       || {? __LS.find_key(__R.KOM,_rok,_mc)
                                          || __LS.WAR+=__R.MNOZNIK*LS.KW$2;
                                             __LS.put()
                                          ?};
:: Aktualizacja zbiorówki.
                                          {? __LS.find_key(__R.KOM,_rok,0)
                                          || __LS.WAR+=__R.MNOZNIK*LS.KW$2;
                                             __LS.put()
                                          ?}
                                       ?};
                                       __LS.prefix()
                                    ?};
:: Aktualizacja danych wszystkich pracowników - b.m.
                                    {? (__RUBO.find_key(__R.KOM) & ~__PREM.find_key(_ref,LS.RB().RN,~O.LT))
                                       |
                                       ~__RUBO.find_key(__R.KOM)
                                    || {? __LS.find_key(0,__R.KOM,_rok,_mc)
                                       || __LS.WAR+=__R.MNOZNIK*LS.KW$2;
                                          __LS.put()
                                       ?};
:: Aktualizacja danych wszystkich pracowników - zbiorówka.
                                       {? __LS.find_key(0,__R.KOM,_rok,0)
                                       || __LS.WAR+=__R.MNOZNIK*LS.KW$2;
                                          __LS.put()
                                       ?}
                                    ?};
                                    LS.next()
                                 !}
                              ?};
                              __R.next()
                           !}
                        ?}
                     ?};
                     _Przetw.next()
                  !}
               ?}
            ?};
            _dalej & O.next()
         !}
      ?};
      _TMCE.next()
   !}
?};
__R.prefix();
__LS.index(_ndxOld);
P.cntx_pop();
LS.cntx_pop();
O.cntx_pop();
_dalej<>0


\gus_zlicz_RHS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Zebranie wartosci z list plac zleceniobiorcow dla poszczegolnych komorek
::   WE: Wymagane zmienne globalne
::   WY: globalnie dostepne tabele tymczasowe __LS, __R oraz __Przetw
::       rozmiar tabeli wynikowej
::  OLD: \zlicz_RHS/gus.fml
::----------------------------------------------------------------------------------------------------------------------
_dalej:=1;

O.cntx_psh();
LS.cntx_psh();
RH.cntx_psh();
RH.index('RACHDATA');
OSOBA.cntx_psh();
OSOBA.prefix();

__Przetw.prefix('O');
_roznica:=OSOBA.size-__Przetw.size;
{? _roznica>0
|| {! _licz:=1.._roznica
   |! {? _dalej
      || _dalej:=FUN.prg_next()
      ?}
   !}
?};

_ndxOld:=__LS.index('?');
_ndx:=__LS.ndx_tmp(,1,'REF',,,'KOM',,,'ROK',,,'MC',,);
__LS.index(_ndx);
__LS.prefix();
__R.prefix('RHS',);
{? _dalej & __Przetw.first() & OSOBA.first() & __R.first()
|| {!
   |? _dalej:=FUN.prg_next();
      {? _dalej<>0 & OSOBA.seek(__Przetw.REF,OSOBA.name())
      || RH.prefix(exec('ref_firma','ustawienia'),OSOBA.ref(),__Rspr);
         _drh:=RH.first();
         {!
         |? _drh
         |! _rok:=RH.R;
            _mc:=RH.M;
            __R.prefix('RHS',_rok,_mc);
            {? exec('czy_prac','osoba',OSOBA.ref(),RH.DWY) & __R.first()
            || LS.use(RH.O().LT);
               LS.index('ZLEC');
               {!
               |? LS.prefix(RH.ref(),__R.RN);
                  {? LS.first()
                  || {!
                     |?
:                       Aktualizacja danych wszystkich osob - b.m.
                        {? __LS.find_key(0,__R.KOM,_rok,_mc) || __LS.WAR+=__R.MNOZNIK*LS.KW$2; __LS.put() ?};
:                       Aktualizacja danych wszystkich pracownikow - zbiorowka.
                        {? __LS.find_key(0,__R.KOM,_rok,0) || __LS.WAR+=__R.MNOZNIK*LS.KW$2; __LS.put() ?};

                        LS.next()
                     !}
                  ?};
                  __R.next()
               !}
            ?};
            _drh:=RH.next()
         !}
      ?};
      __Przetw.next & _dalej<>0
   !}
?};
__R.prefix();
__LS.index(_ndxOld);
O.cntx_pop();
LS.cntx_pop();
RH.cntx_pop();
OSOBA.cntx_pop();
__LS.prefix;
_dalej


\gus_openfile
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Otwarcie pliku do zapisu
::   WE: _a - dane do filtra wybierania plikow-'Pliki XML (*.xml)|*.xml'
::       _b - domyslna nazwa pliku -'z-05.xml'
::       _c - rozszerzenie tworzonego pliku np. xml, csv
::       [_d]- ścieżka do katalogu tymczasowego na serwerze (dla inTerm argument wymagany)
::   WY: uchwyt pliku
:: ~OST: INFOPEN
::  OLD: \openfile/gus.fml
::----------------------------------------------------------------------------------------------------------------------
_filtr:=_a;
_openf:="_file:=exec('save_as','#file',_c,_b);
         {? _file=''
         || return('')
         || {? (_file*('.'+_d))<>(+_file)-3
            || _file+='.'+_d
            ?}
         ?};
         _file";
_Nazwa:=_b;
_user:={? _psep:=username*'~'
       || _psep-1
       |? _psep:=username*'.'
       || _psep-1
       || +username
       ?}+username;
_name:='lokalny katalog raportów GUS';
{? var_pres('_d')=type_of('') & _d<>''
|| _path:=_d
|| _path:=exec('get','#profile',,_user,_name)
?};
_pathn:=_path;
{? ~exec('interm','#system')
|| {!
   |? _pathn:=_openf(_filtr,_path,_Nazwa,_c);
      _plik:=_pathn;
      _div:={? sys_name(0)='U_LINUX' || '/' || '\\' ?};
      {? _pathn=''
      || {? FUN.ask('Rezygnacja spowoduje utratę pobranych informacji.\nNa pewno przerwać zapis sprawozdania?'@)
         || return(0)
         || 1
         ?}
      || {! |? _nl:=_plik*_div; _plik:=_nl-_plik; _nl !};
         _Nazwa:=_plik;
         _pathn:=_pathn-(1+(+_plik))+_div;
         _test:=fopen('@'+_pathn+_Nazwa,'r',0);
         {? _test
         || fclose(_test);
            _choice:=FUN.choice('Plik o podanej nazwie już istnieje.\n'
                    'Kontynuacja spowoduje nadpisanie pliku nowymi zapisami.'@,,'Zmień nazwę'@,'Kontynuuj'@);
            {? _choice=1
            || _test:=0
            |? _choice=2
            || _test:=fopen('@'+_pathn+_Nazwa,'w',0);
               {? _test || fclose(_test) ?}
            || {? FUN.ask('Rezygnacja spowoduje utratę pobranych informacji.\nNa pewno przerwać zapis sprawozdania?'@)
               || return(0)
               || _choice:=1
               ?}
            ?};
            ~_test | _choice<>2
         || 0
         ?}
     ?}
   !};
   exec('set','#profile',,_user,_name,_pathn);
   fopen('@'+_pathn+_Nazwa,'w',0)
|| fopen(_path+exec('sep','#file',2)+_Nazwa,'w',0)
?}


\gus_form_ls_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Metoda-formula tworzaca zapisy dla __LS i rubryk dla __R
::   WE: _a - rok, domyslnie __Rspr [INTEGER]
::       _b - miesiac:  0 - caly rok, 1-12 - numer miesiaca [INTEGER]
::       _c - oznaczenie komorki [STRING]
::       _d - zliczanie dla LS czy RHS [STRING]
::       _e - wartosc w wyniku sumowania wierszy [STRING] (podajemy oznaczenia sumowanych wierszy, np.: '03,04,10')
::            UWAGA
::            Wiersze sa sumowane w kolejnosci numerow. Jezeli zatem wiersz nr 2 zawiera sume z wiersza nr 3, a wiersz
::            nr 3 jest suma innych wierszy, to podczas wyliczania wartosci wiersza nr 2, wartosc wiersza nr 3 jeszcze
::            nie zostala policzona! Takie odwolanie nie jest bledem, ale nie ma sensu.
::            Dlatego tez w wierszach do sumowania powinny byc podawane wylacznie wiersze obliczane na podstawie
::            skladnikow (listy plac) lub sum, ale tylko wierszy z mniejszym numerem.
::       _f - opis pola formularza [STRING]
::       OD 7 wzwyz - atrybuty jako [STRING] (pierwszy znak + lub - okresla czy atrybut potw. czy wykluczajacy)
::  OLD: \form_ls_add/gus.fml
::----------------------------------------------------------------------------------------------------------------------
"
{? var_pres('_a')<>type_of(0) || _a:=__Rspr ?};
{? var_pres('_e')<>type_of('') || _e:='' ?};

{? __LS.find_key(_c,_d,_a,_b,_e,_f,)
|| _aktualizacja:=1
|| __LS.blank(1);
   __LS.ROK:=_a;
   __LS.MC:=_b;
   __LS.KOM:=_c;
   __LS.LSRHS:=_d;
   __LS.SUMA:=_e;
   __LS.OPIS:=_f;
   _aktualizacja:=0
?};

{? _aktualizacja | __LS.add()
|| {? __LS.MC=0 || _mp:=1; _mk:=12 || _mp:=_mk:=__LS.MC ?};
   {? ~_aktualizacja & __LS.MC=0 || {! _mie:=1..12 |! __LS.MC:=_mie; __LS.add() !} ?};

   {! _licz:=7.._
   |! {? var_pres('_['+$_licz+']')=type_of('') & +_[_licz]>1 & (1+_[_licz]='+' | 1+_[_licz]='-')
      || _atr:=#(1-_[_licz]);
         {? _atr>0
         || _tab:=__RUB.sys_rub(_atr);
            {? _tab.first()
            || _mnoznik:={? 1+_[_licz]='+' || 1 || -1 ?};
               {! _mie:=_mp.._mk
               |? _tab.first()
               |! {!
                  |? {? __R.find_key(__LS.LSRHS,__LS.ROK,_mie,__LS.KOM,_tab.RN)
                     || __R.MNOZNIK+=_mnoznik;
                        {? __R.MNOZNIK=0 || __R.del() || __R.put() ?}
                     || __R.blank();
                        __R.LSRHS:=__LS.LSRHS;
                        __R.ROK:=__LS.ROK;
                        __R.MC:=_mie;
                        __R.KOM:=__LS.KOM;
                        __R.RN:=_tab.RN;
                        __R.MNOZNIK:=_mnoznik;
                        __R.add()
                     ?};
                     _tab.next()
                  !}
               !}
            ?};
            obj_del(_tab)
         ?}
      ?}
   !}
?}
"


\gus_miejsca_pracy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Lista miejsca wykonywania pracy
::   WE: [_a] - 1 - wszystkie miejsca bez prezentacji na ekranie i mozliwosci wyboru
::              0 lub brak - wybor operatora
::   WY: tabela tymczasowa z nazwami
::  OLD: \miejsca_pracy/gus.fml
::----------------------------------------------------------------------------------------------------------------------
_all:={? var_pres('_a')=type_of(0) & _a=1 || 1 || 0 ?};
_msc:=sql('select distinct trim(upper(H.MIEJSCE)) as MSC,0 as SEL
           from H join P using (P.REFERENCE,H.P)
           where P.FIRMA=:_a
           order by 2,1'
           ,exec('ref_firma','ustawienia'));
{? _all=0
||
   _win:=_msc.mk_sel();
   _msc.win_fld(_win,,'MSC',,,60,,,'Miejsce'@);
   _msc.win_act(_win,0,'Formuła','Wybierz'@@,,,"cur_tab(1,1).SEL:=1; cur_tab(1,1).put(1);sel_exit",,1,1,"1","1");
   _msc.win_act(_win,0,'Kolejność');
   _msc.win_sel(_win);
   _ndx:=_msc.index('?');
   _ndx2:=_msc.ndx_tmp(,1,'MSC',,);
   _msc.index(_ndx2);
   {!
   |? _msc.hdr_sel();
      _msc.hdr_sel('Miejsce wykonywania pracy'@);
      {? _msc.select()
      || 0
      || {? FUN.ask('Czy anulować?'@) || 0 || 1 ?}
      ?}
   !};
   _msc.index(_ndx)
?};
{? _all
|| _msc.prefix
|| _msc.prefix(1)
?};
_wyn:='';
{? _msc.first
|| _wyn+=',';
   {!
   |? _wyn+=_msc.MSC+',';
      _msc.next
   !}
?};
_wyn


\gus_pracuje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: Funkcja zwraca ile osob pracuje na dzien OKRO_F.KON.
::       Uzwglednia parametry kategorii: plec, mlodociani (lub nie), forme naboru,
::       pelnoetatowi, obcokrajowiec, niepelnosprawny/rencista
::   WE: [_a] - 0 lub brak - wszyscy, 1 - tylko zatrudnieni na umowy okresowe
::       _c.._j - odpowiadaja parametra SIK.P1..SIK.P8
::       _k - kod sprawozdania
::       _l - podstawowe miejsce pracy?
::             'T'  - tak [domyslnie]
::             'N'  - nie
::             'TN' - bez znaczenia
::      [_m][INTEGER] - 0/1 - Czy pominąć w obliczeniach oddelegowanych, domyślnie 0 - nie pomijaj
::  OLD: \pracuje/gus.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<>type_of(date()) | _b~1=0 || return(0) ?};

_kon:=date(_b~1,_b~2,0);
_SP1:={? var_pres('_c')=type_of('') || _c || '' ?};
_SP2:={? var_pres('_d')=type_of('') || _d || '' ?};
_SP3:={? var_pres('_e')=type_of('') || _e || '' ?};
_SP4:={? var_pres('_f')=type_of('') || _f || '' ?};
_SP5:={? var_pres('_g')=type_of('') || _g || '' ?};
_SP6:={? var_pres('_h')=type_of('') || _h || '' ?};
_SP7:={? var_pres('_i')=type_of('') || _i || '' ?};
_SP8:={? var_pres('_j')=type_of('') || _j || '' ?};
_spraw:={? var_pres('_k')=type_of('') || _k || '' ?};
_pmp:={? var_pres('_l')=type_of('') || _l || 'T' ?};

_tab:=tab_tmp(2,
      'IMIE','STRING[25]','Imię'@,
      'NAZWISKO','STRING[30]','Nazwisko'@,
      'PESEL','STRING[11]','PESEL'@,
      'OSOBA','INTEGER','Osoba'@,
      'P','INTEGER','Pracownik'@,
      'IP','INTEGER','IP'@,
      'WY','REAL','Wymiar'@,
      'PLEC','STRING[1]','Płeć'@,
      'PMP','STRING[1]','PMP'@,
      'RU','STRING[1]','RU'@,
      'NB','STRING[1]','NB'@
);

_bezterm:={? var_pres('_a')=type_of(0) & _a=1 || 0 || 1 ?};
_bezOdd:={? var_pres('_m')=type_of(0) || _m || 0 ?};
P.cntx_psh();
H.cntx_psh();
H.index('_HISTKOD');
H.prefix();
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P);
_koniec:={? _SP8='P-ROK' || date(_kon~1-1,12,0) || _kon ?};
_ret:=0;
{? P.first()
|| _p3_len:=MS.fld_len('SIK','P3');
   {!
   |? {? ((P.DZ=date(0,0,0) | P.DZ>=_koniec) & P.DZA<=_koniec) &
         (_SP1='' | P.OSOBA().PLEC=~-_SP1) &
         (_SP4='' |
            (_SP4='T' & P.OSOBA().UR_DATA<>date(0,0,0) & ((#(_koniec-P.OSOBA().UR_DATA))~1)-1>=18) |
            (_SP4='N' & P.OSOBA().UR_DATA<>date(0,0,0) & ((#(_koniec-P.OSOBA().UR_DATA))~1)-1<18)) &
         (_SP6='' |
            (_SP6=P.OSOBA().OBCY)) &
         (_SP7='' |
            (_SP7='niepełnosprawny' & {? exec('zn_ttub','pracownik',P.OSOBA,_koniec) || P_INFO.STNP().KOD <> '0' ?}) |
            (_SP7='rencista' & {? exec('zn_ttub','pracownik',P.OSOBA,_koniec) || P_INFO.PREM().KOD <> '0' ?})) &
         (_SP3='' |
            (1+_SP3<>'~' & (_p3_len+P.FNA().NAZWA)*_SP3) |
            (1+_SP3='~' & _SP3*(_p3_len+P.FNA().NAZWA)=0))
      || _dalej:=_um:=1;
         _wynik:=0;
         H.prefix(P.ref(),'Z');
         {? H.first()
         || {? H.find_le(_koniec) & H.OD<=_koniec & (H.DO=date(0,0,0) | H.DO>=_koniec) &
               (_bezterm | (_um:=H.UMOWA().RU().K<>'C'))
            || _tab.OSOBA:=#P.OSOBA;
               _tab.P:=#P.ref;
               _tab.WY:=H.RWY;
               _tab.PLEC:=P.OSOBA().PLEC;
               _tab.IMIE:=OSOBA.PIERWSZE;
               _tab.NAZWISKO:=OSOBA.NAZWISKO;
               _tab.PESEL:=OSOBA.PESEL;
               _tab.IP:=P.IP;
               _tab.PMP:=H.PMP;
               _tab.RU:=H.UMOWA().RU().K;
               _tab.NB:='N';
               _tab.add
            ?}
         ?};
         H.prefix(P.ref(),'Z');
         {? H.first() & _dalej
         || {? H.find_le(_koniec) & H.OD<=_koniec & (H.DO=date(0,0,0) | H.DO>=_koniec) &
               ((_bezterm | (_um:=H.UMOWA().RU().K<>'C')) & _pmp*H.PMP)
            || {! _ind:=1..2
               |! {? _dalej
                  || {? var_pres('_rub')>100 || obj_del(_rub) ?};
                     _rub:={? _ind=1 || __RUB.sys_rub(133) || __RUB.sys_rub(112) ?};
                     {? _rub.first()
                     || {!
                        |? N.index('NIPRACNB');
                           N.prefix('N',P.ref,_rub.RN);
                           {? N.find_le(_koniec) & N.OD<=_koniec & N.DO>=_koniec
                           || {!
                              |? __KAL.rdat(N.OD,_koniec);
                                 {? __KAL.year*12+__KAL.month>=3
                                 || _tab.NB:='T';
                                    _tab.put;
                                    _dalej:=0
                                 || _n_od:=N.OD;
                                    N.prev & N.DO=(_n_od-1)
                                 ?}
                              !}
                           ?};
                           _rub.next
                        !}
                     ?}
                  ?}
               !}
            ?}
         ?};
         {? _dalej & (_bezterm | _um)
         || N.index('NIEOBECN');
            N.prefix('N',P.ref);
            {? N.find_le(_koniec) & N.DO>=_koniec
            || {!
               |? {? __RUB.sys_attr(N.NB,1222,_koniec)
                  || _tab.NB:='T';
                     _tab.put;
                     _dalej:=0
                  ?}
               !}
            ?};
            {? _dalej & N.find_le(_koniec) & N.DO>=_koniec
            || {!
               |? {? __RUB.sys_attr(N.NB,63211,_koniec)
                  || __KAL.rdat(N.OD,_koniec);
                     {? __KAL.year*12+__KAL.month>=3
                     || _tab.NB:='T';
                        _tab.put;
                        _dalej:=0
                     || _n_od:=N.OD;
                        N.prev & N.DO=(_n_od-1)
                     ?}
                  ?}
               !}
            ?}
         ?};
::       Odjęcie oddelegownego w danym dniu:
         {? _dalej & _bezOdd
         || _odd:=exec('czy_odd_bzus','oddelegowanie',P.ref(),_koniec,0);
            {? _odd.st
            || _wynik-=1;
               _tab.NB:='T';
               _tab.put();
               _dalej:=0
            ?};
            obj_del(_odd)
         ?};

         _ret+=_wynik
      ?};
      P.next()
   !}
?};
P.cntx_pop();
H.cntx_pop();
_tab


\gus_urlop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.41]
:: OPIS: Znalezienie osób z odpowiednimi urlopami wychowawczymi
::   WE: _a - 31 grudzien poprzedniego okresu
::       _b - 31 grudzien biezacego okresu
::   WY: tabela z osobami spełniającymi kryterium
::  OLD: \urlop/gus.fml
::----------------------------------------------------------------------------------------------------------------------
_pocz:=_a;
_kon:=_b;
_wych:=__RUB.sys_sql(133,_kon);
{? _wych='' || _wych:='3' ?};
_tab_url:=sql('select OSOBA.NAZWISKO, OSOBA.PIERWSZE IMIE, OSOBA.PESEL, OSOBA.PLEC, N.OD, N.DO,
               \'W\' KZ, \' \' PMP, 0.001-0.001 WY, N.REFERENCE REF,
                  CASE WHEN P.DZ<to_date(:_a) THEN \'T\' ELSE \'N\' END ZW,
                  1 PRAC_POP, 1 PRAC_BIE,
                  \'N\' Z5_10, \'N\' Z5_20
               from P join OSOBA join N join R
               where R.RN in (:_c) and N.OD<=to_date(:_b) and P.FIRMA=:_d
               order by NAZWISKO, IMIE, PESEL, N.OD'
               ,_pocz,_kon,_wych,exec('ref_firma','ustawienia'));
{? _tab_url.first()
||
:: uzupłenienie wymiaru etatu na date końca danego miesiecznego wychowawczego
   H.cntx_psh();
   H.index('_HISTKOD');
   N.cntx_psh();
   N.prefix();
   {? _tab_url.first()
   || {!
      |? _del:=1;
         {? N.seek(_tab_url.REF)
         || H.prefix(N.P,'Z');
            {? H.find_le(_tab_url.DO)
            || {? H.PMP='T'
               || _tab_url.WY:=H.RWY;
                  _tab_url.PMP:=H.PMP;
                  _tab_url.put()
               ?}
            ?}
         ?};
         _tab_url.next()
      !}
   ?};
   params_set('tab_url',_tab_url);
   _tab_url.prefix();
   _tab_url.for_each("params_set(params_get()); {? params_get.tab_url.PMP<>'T' || params_get.tab_url.del() ?}");
   N.cntx_pop();
   H.cntx_pop();
   _tab_all:=sql('select NAZWISKO, IMIE, PESEL, 0 PRAC_BIE, 0 PRAC_POP, 0 LICZ
      from :_a
      group by NAZWISKO, IMIE, PESEL
      order by NAZWISKO, IMIE, PESEL',_tab_url);
   {? _tab_all.first
   || {!
      |? _tab_url.prefix(_tab_all.NAZWISKO, _tab_all.IMIE, _tab_all.PESEL);
         {? _tab_url.first()
         || _do:=_tab_url.DO; _od:=_tab_url.OD; _wy:=_tab_url.WY;
            {? _tab_url.next
            || {!
               |? {? _od=_tab_url.DO
                  || _wy+=_tab_url.WY;
                     _tab_url.WY:=_wy;
                     _tab_url.put();
                     _tab_url.prev();
                     _tab_url.del()
                  || _do:=_tab_url.DO; _od:=_tab_url.OD; _wy:=_tab_url.WY;
                     _tab_url.next()
                  ?}
               !}
            ?}
         ?};
         {? _tab_url.first
         || _do:=_tab_url.DO; _od:=_tab_url.OD;
            {? _tab_url.next()
            || {!
               |? {? _do=_tab_url.OD-1
                  || _do:=_tab_url.DO;
                     _tab_url.prev(); _tab_url.DO:=_do; _tab_url.put(); _tab_url.next();
                     _tab_url.del()
                  || _do:=_tab_url.DO; _od:=_tab_url.OD;
                     _tab_url.next()
                  ?}
               !}
            ?}
         ?};
         {? _tab_url.first
         || {!
            |? {? _tab_url.DO<_pocz || _tab_url.del() || _tab_url.next() ?}
            !}
         ?};
         _tab_all.next()
      !}
   ?};
   _tab_url.prefix();
   {? _tab_url.first()
   || {!
      |? __KAL.rdat(_tab_url.OD,_tab_url.DO);
         {? __KAL.year*12+__KAL.month>=3
         || {? _tab_url.ZW='T'
            || _tab_url.del()
            || _tab_url.next
            ?}
         || _tab_url.del()
         ?}
      !}
   ?};
   {? _tab_url.first()
   || {!
      |? {? _tab_url.OD <= _pocz
         || __KAL.rdat(_tab_url.OD,_pocz);
            {? __KAL.year*12+__KAL.month>=3 || _tab_url.PRAC_POP:=0 ?}
         ?};
         {? _tab_url.ZW = 'T' || _tab_url.PRAC_BIE:=0
         |? _tab_url.DO >= _kon
         || __KAL.rdat(_tab_url.OD,_kon);
            {? __KAL.year*12+__KAL.month>=3 || _tab_url.PRAC_BIE:=0 ?}
         ?};
         _tab_url.put();
         _tab_url.next()
      !}
   ?};
   {? _tab_url.first()
   || {!
      |? _tab_all.prefix(_tab_url.NAZWISKO, _tab_url.IMIE, _tab_url.PESEL);
         {? _tab_all.first()
         || _tab_all.PRAC_BIE+=_tab_url.PRAC_BIE;
            _tab_all.PRAC_POP+=_tab_url.PRAC_POP;
            _tab_all.put()
         ?};
         _tab_url.next()
      !}
   ?};
   _tab_all.prefix();
   {? _tab_all.first
   || {!
      |? {? _tab_all.PRAC_POP <> _tab_all.PRAC_BIE
         || _tab_all.LICZ:=1; _tab_all.put()
         ?}; _tab_all.next()
      !}
   ?};
   {? _tab_all.first
   || {!
      |? _tab_url.prefix(_tab_all.NAZWISKO, _tab_all.IMIE, _tab_all.PESEL);
         {? ~_tab_all.LICZ & _tab_url.first()
         || {! |? _tab_url.del() !}
         ?};
         _tab_all.next()
      !}
   ?};
  _tab_url.prefix();
  {? _tab_url.first()
   || {!
      |? {? _tab_url.WY=1 & _tab_url.KZ='W' & _tab_url.OD<=_pocz & ~_tab_url.PRAC_POP
         || _tab_url.Z5_10:='T'; _tab_url.put(); _tab_url.next()
         |? _tab_url.WY=1 & _tab_url.KZ='W' & _tab_url.DO>=_kon & ~_tab_url.PRAC_BIE
         || _tab_url.Z5_20:='T'; _tab_url.put(); _tab_url.next()
         || _tab_url.del()
         ?}
      !}
   ?}
?};
_tab_url


\gus_zmiana_wymiaru
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.41]
:: OPIS: Funkcja zwraca tabele z osobami ktore zmienily w roku wymiar etatu
::   WE: _a - koniec
::   WY: tabela z pracownikami
::  OLD: \zmiana_wymiaru/gus.fml
::----------------------------------------------------------------------------------------------------------------------
H.cntx_psh();
H.index('_HISTKOD');
H.prefix();
P.cntx_psh();
P.index('PRACOZAT');
P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P);
_koniec:=_a;
_wynik:=0;
_tab:=sql('
      select OSOBA.PIERWSZE IMIE, OSOBA.NAZWISKO, OSOBA.PESEL, OSOBA.PLEC, OSOBA.UR_DATA DO, 0.1 WY, 0 ZW, \'\' PMP
      from OSOBA
      where 1=2
      order by 1,2,3,4');

{? P.first()
|| {!
   |? H.prefix(P.ref(),'Z');
      _ok:=1;
      {? H.last()
      || {!
         |? {? H.OD<=_koniec & (H.DO>=date(_koniec~1,1,1)-1 | H.DO=date(0,0,0))
            || _tab.blank();
               _tab.IMIE:=P.OSOBA().PIERWSZE; _tab.NAZWISKO:=OSOBA.NAZWISKO; _tab.PESEL:=OSOBA.PESEL;
               _tab.PLEC:=OSOBA.PLEC; _tab.WY:=H.RWY; _tab.PMP:=H.PMP;
               {? H.DO>_koniec | H.DO=date(0,0,0)
               || _tab.DO:=_koniec
               || _tab.DO:=H.DO
               ?};
               {? P.DZ<_koniec & P.DZ<>date(0,0,0) || _tab.ZW:=1 ?};
               _tab.add();
               _ok:=0
            ?};
            _ok & H.prev & H.DO>=date(_koniec~1,1,1)-1
         !}
      ?};
      P.next()
   !}
?};

_tab_os:=sql('select distinct IMIE, NAZWISKO, PESEL from :_a',_tab);
{? _tab_os.first
|| {!
   |? _tab.prefix(_tab_os.IMIE, _tab_os.NAZWISKO, _tab_os.PESEL);
      {? _tab.last()
      || _do:=_tab.DO;
         {!
         |? {? _do>_tab.DO
            || _tab.del(,1)=2
            || _tab.prev()
            ?}
         !}
      ?};
      _tab_os.next
   !}
?};

_tab_x:=sql('
      select OSOBA.PIERWSZE IMIE, OSOBA.NAZWISKO, OSOBA.PESEL, OSOBA.PLEC, OSOBA.UR_DATA OD, 0.1 WY, \'\' PMP
      from OSOBA
      where 1=2
      order by 1,2,3,4');

{? P.first()
|| {!
   |? H.prefix(P.ref(),'Z');
      {? H.first()
      || _ok:=1;
         {!
         |? {? H.OD<=_koniec & (H.DO>=date(_koniec~1,1,1)-1 | H.DO=date(0,0,0))
            || _tab_x.blank();
               _tab_x.IMIE:=P.OSOBA().PIERWSZE; _tab_x.NAZWISKO:=OSOBA.NAZWISKO; _tab_x.PESEL:=OSOBA.PESEL;
               _tab_x.PLEC:=OSOBA.PLEC; _tab_x.WY:=H.RWY; _tab_x.PMP:=H.PMP;
               {? H.OD<date(_koniec~1,1,1)-1
               || _tab_x.OD:=date(_koniec~1,1,1)-1
               || _tab_x.OD:=H.OD
               ?};
               _tab_x.add();
               _ok:=0
            ?};
            _ok & H.next() & H.OD<=_koniec
         !}
      ?};
      P.next()
   !}
?};

_tab_os1:=sql('select distinct IMIE, NAZWISKO, PESEL from :_a',_tab_x);

{? _tab_os1.first
|| {!
   |? _tab_x.prefix(_tab_os1.IMIE, _tab_os1.NAZWISKO, _tab_os1.PESEL);
      {? _tab_x.first()
      || _od:=_tab_x.OD;
         {!
         |? {? _od<_tab_x.OD
            || _tab_x.del(,1)=2
            || {? _od=_tab_x.OD
               || _tab_x.next()
               || _od:=_tab_x.OD; _tab_x.first()
               ?}
            ?}
         !}
      ?};
      _tab_os1.next
   !}
?};

_tab_p:=sql('
      select IMIE, NAZWISKO, PESEL, PLEC, sum(WY) WY, 0 NA_C, 0 NA_M
      from :_a
      where PMP=\'T\'
      group by IMIE, NAZWISKO, PESEL, PLEC
      order by 1,2,3',_tab_x);

_tab_k:=sql('
      select IMIE, NAZWISKO, PESEL, PLEC, sum(WY) WY, sum(ZW) ZW, max(DO) DO
      from :_a
      where PMP=\'T\'
      group by IMIE, NAZWISKO, PESEL, PLEC
      order by 1,2,3',_tab);

{? _tab_p.first
|| {!
   |? {? _tab_k.find_key(_tab_p.IMIE,_tab_p.NAZWISKO,_tab_p.PESEL)
      || {? _tab_p.WY<1 & _tab_k.WY>=1 & (~_tab_k.ZW | _tab_k.DO~1=_koniec~1)
         || _tab_p.NA_C:=1; _tab_p.put
         |? _tab_p.WY>=1 & _tab_k.WY<1
         || _tab_p.NA_M:=1; _tab_p.put
         ?}
      ?};
      _tab_p.next
   !}
?};
P.cntx_pop();
H.cntx_pop();
_tab_p


\spr_Z03_2011
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Formula zbierajaca dane dla raportu GUS Z-03 wywolanie w gus_z03.rpm
::   WE: [_a] [INTEGER] - Rok [domyślnie: poprzedni].
::       [_b] [INTEGER] - Miesiąc początkowy [domyślnie: 1].
::       [_c] [INTEGER] - Miesiąc końcowy [domyślnie: 12].
::----------------------------------------------------------------------------------------------------------------------
_tnumber:=type_of(0);
_rok:={? var_pres('_a')=_tnumber || _a || (date()~1)-1 ?};
_mod:={? var_pres('_b')=_tnumber || _b || 1 ?};
_mdo:={? var_pres('_c')=_tnumber || _c || 12 ?};

FUN.prg_start(8);

_prac:=tab_tmp(3,
   'REF','STRING[16]','$P.ref()',
   'ROK','INTEGER','Rok'@,
   'MIESIAC','INTEGER','Miesiąc'@,
   'DK','INTEGER','Dni kalendarzowe'@
);

_pocz:=date(_rok,_mod,1);
_kon:=date(_rok,_mdo,0);

_ind:=0;

:: definicja:
par[3].blank();
par[3].DZIAL:=1;
par[3].TYT:='Dane dotyczące jednostki sprawozdawczej';
par[3].KOL1:='Dane';
par[3].add();

:: dane:
par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='2';
par[2].NAZWA:='Przeciętna liczba zatrudnionych';
par[2].WAR1:=exec('zatrdzien','stat',_pocz,_kon,0,0,1,_prac,1);
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='3';
{? _rok<=2010
|| par[2].NAZWA:='Pracujący w osobach (z jednym znakiem po przecinku)';
   par[2].WAR1:=exec('pracuje','sik_for',,_kon,,,,,,,,'GUS','Z_03_2010')$1
|| par[2].NAZWA:='Pracujący w głównym miejscu pracy. Stan w ostatnim dniu kwartału';
   par[2].WAR1:=exec('pracuje','sik_for',,_kon,,,,,,,,'GUS','Z_03_2010',,,1)$0
?};
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='4';
{? _rok<=2010
|| par[2].NAZWA:='Czas przepracowany (w tys. godzin z jednym znakiem po przecinku)'
|| par[2].NAZWA:='Czas faktycznie przepracowany (w tys. godzin, z jednym znakiem po przecinku)'
?};
_war1:=exec('czasumy','stat',,_pocz,_kon,_prac);
FUN.prg_next();
_war1-=exec('nieprzeprac','stat',2,_pocz,_kon,,_prac);
FUN.prg_next();
_war1+=exec('czasprzf','stat',,_pocz,_kon,_prac);
FUN.prg_next();
par[2].WAR1:=_war1$1;
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='5';
par[2].NAZWA:='Wynagrodzenia brutto w tys. zł osób wykazanych w pozycji 2 - ogółem';
par[2].WAR1:=exec('sum_skl_bodd','oddelegowanie',_prac,'500',0,,'1024')/1000$1;
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='8';
par[2].NAZWA:='  w tym składki na ubezpieczenie emerytalne, rentowe i chorobowe opł. przez ubezp.';
par[2].WAR1:=exec('sum_skl_bodd','oddelegowanie',_prac,'765,766,767',0,,,1)/1000$1;
par[2].WAR1-=exec('sum_skl_bodd','oddelegowanie',_prac,'951')/1000$1;
FUN.prg_next();
par[2].add();

par[3].first();

FUN.prg_stop();
1


\spr_Z06_2014
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Formula zbierajaca dane dla raportu GUS Z-06 wywolanie w gus_z06.rpm za 2014 i 2015 rok
::       (na podstawie raportu za rok 2013).
::   WE: [_a] [INTEGER] - Rok [domyślnie: poprzedni].
::       [_b] [INTEGER] - Miesiąc początkowy [domyślnie: 1].
::       [_c] [INTEGER] - Miesiąc końcowy [domyślnie: 12].
::----------------------------------------------------------------------------------------------------------------------
_tnumber:=type_of(0);
_rok:={? var_pres('_a')=_tnumber || _a || (date()~1)-1 ?};
_mod:={? var_pres('_b')=_tnumber || _b || 1 ?};
_mdo:={? var_pres('_c')=_tnumber || _c || 12 ?};

_pocz:=date(_rok,_mod,1);
_kon:=date(_rok,_mdo,0);

{? _view_ok:=FUN.ask(
      'Czy wykazywać okienko z wybranymi pozycjami działu czwartego i piątego formularza '
      'z zakwalifikowanymi pracownikami?'@
   )
|| _view:="
   _win:=_a.mk_sel(_b);
   _a.win_fld(_win,,'NAZWISKO',,,30,,,'Nazwisko'@);
   _a.win_fld(_win,,'IMIE',,,30,,,'Imię'@);
   _a.win_fld(_win,,'PESEL',,,13,,,'PESEL'@);
   _a.win_act(_win,0,'Kolejność');
   __tab_x1.grp_sel(__wnd,_a,_win,_b,,,,8,,,,,'maximized_with_title')
   "
|| _view:="~~"
?};

{? _pocz~1>2018 & FUN.ask('Czy chcesz dokonać zmian w parametryzacji przypisania kodów ZUS dotyczących ustania\n'@+
   'stosunku pracy do poszczególnych komórek z działu 5 (5.13-5.22)?'@)
|| _kod_zwo:=sql('select S_ZUS.KOD, S_ZUS.OPIS, (\'  \') as KOMORKA from S_ZUS where S_ZUS.RODZAJ=\'USPKOD\' order by S_ZUS.KOD');

:: wczytanie standardowych ustawień lub tych zmienionych przez klienta
   _code_set:=exec('gus_z06_bf_kom_nr','sik_for');
   {? exec('gus_z06_load_set','sik_for',_code_set,{? fexists('cli_gus_z06.txt',1) || 'cli_gus_z06.txt' || 'std_gus_z06.dfg' ?} )
      & _code_set.first() & _kod_zwo.first()
   || {!
      |? {? _code_set.find_key(_kod_zwo.KOD)
         || _kod_zwo.KOMORKA:=_code_set.KOMORKA;
            _kod_zwo.put()
         || _kod_zwo.KOMORKA:='';
            _kod_zwo.put()
         ?};
         _kod_zwo.next()
      !}
   ?};

   _wer:=_kod_zwo.mk_sel('Rozwiązanie umowy'@,,,'uspstazsel',,,,,'U');
   _kod_zwo.win_fld(_wer,,'KOD',,,-10,,1,'Kod ZUS'@,,'');
   _kod_zwo.win_fld(_wer,,'OPIS',,,-80,,1,'Opis'@,,'');
   _kod_zwo.win_fld(_wer,,'KOMORKA',,,-13,,1,'Komórka w Z-06'@,,'');
   _kod_zwo.win_act(_wer,,'Formuła','Popraw'@@,,'Poprawianie bieżącego zapisu'@,
      "  _kod_zwo:=cur_tab();
         {? _kod_zwo.edit() || _kod_zwo.put() ?}
      ",,,,,,'P'

   );
   _kod_zwo.win_act(_wer,,'Formuła','Zapisz'@@,,'Zapisanie wprowadzonych zmian'@,
      "  {? FUN.ask('Czy zapisać wprowadzone informacje?'@)
         || exec('gus_z06_save_set','sik_for',cur_tab(),'cli_gus_z06.txt')
         ?}
      ",,,,,,'Z'

   );
   _kod_zwo.win_act(_wer,,'Formuła','Dalej'@@,,'Przejście do kolejnego kroku przetwarzania'@,
      "  sel_exit()
      ",,,,,,'D',,'target=window'
   );
   _kod_zwo.win_btn(_wer,'text=%1,align=begin'['Popraw'@],'menu:P',,,0,,,'noempty');
   _kod_zwo.win_btn(_wer,'text=%1,panel=bottom,align=end'['Zapisz'@],'menu:Z',,,0,,,'noempty');
   _kod_zwo.win_btn(_wer,'text=%1,icon=xwin16.png:22,panel=bottom,align=end'['Dalej'@],'menu:D');

   _kod_zwo.win_sel(_wer);

   _red:=_kod_zwo.mk_edit('Kody ZUS rozwiązania umowy, a komórki w Z-06'@,,'uspstazedit');
   _kod_zwo.win_efld(_red,,'KOD',,,80,,1,'Kod ZUS'@,,'');
   _kod_zwo.win_efld(_red,,'OPIS',,,80,,1,'Opis'@,,'');
   _kod_zwo.win_efld(_red,,'KOMORKA',,,80,,,'Komórka w Z-06'@,,'');
   _kod_zwo.fld_fml('KOMORKA','F3',"exec('gus_z06_f3_kom_nr','!pkd_roz_zsst',cur_tab())");
   _kod_zwo.fld_fml('KOMORKA','AFTER_EDIT',"exec('gus_z06_aekom_nr','!pkd_roz_zsst',cur_tab())");
   _kod_zwo.win_edit(_red);
   _kod_zwo.select()
?};

_fzatr:=__F_ZATR.P;
__F_ZATR.mod('P');

_ind:=0;

FUN.prg_start(83);

{? var_pres('__REHAB')>100 || obj_del(__REHAB) ?};
{? var_pres('__BEZPL')>100 || obj_del(__BEZPL) ?};

_prac:=tab_tmp(3,
   'REF','STRING[16]','$P.ref()',
   'ROK','INTEGER','Rok'@,
   'MIESIAC','INTEGER','Miesiąc'@,
   'DK','INTEGER','Dni kalendarzowe'@
);

::Dzial 1 --------------------------------------------------------------------------------------------------------------
par[3].blank();
par[3].DZIAL:=1;
par[3].TYT:='Zatrudnienie i wynagrodzenia';
par[3].KOL1:='Liczba zatrudnionych';
par[3].KOL2:='Wynagrodzenie brutto w tys. zł.';
par[3].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='1';
par[2].NAZWA:='Ogółem';
par[2].WAR1:=exec('zatrdzien','stat',_pocz,_kon,0,0,1,_prac,1);
FUN.prg_next();
_wyn500:=exec('sum_skl_bodd','oddelegowanie',_prac,'500',0,,'1024')/1000$1;
par[2].WAR2:=_wyn500;
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='4';
par[2].NAZWA:='Z wiersza 1 - składki na ubezpieczenia emerytalne, rentowe i chorobowe opłacane przez ubezpieczonych';
par[2].WAR1:=0;
_rub:='';
_rub+={? _rub='' || '' || ',' ?}+__RUB.sys_sql(512,_kon);
_rub+={? _rub='' || '' || ',' ?}+__RUB.sys_sql(522,_kon);
_rub+={? _rub='' || '' || ',' ?}+__RUB.sys_sql(532,_kon);
par[2].WAR2:=exec('sum_skl_bodd','oddelegowanie',_prac,'765,766,767',0,,,1)/1000$1;
par[2].WAR2-=exec('sum_skl_bodd','oddelegowanie',_prac,'951')/1000$1;
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='---';
par[2].add();

{? _kon~1>2016
|| _nk:=exec('ust_nk','lista_licz',_kon,'NK');
   par[2].blank();
   par[2].DZIAL:=par[3].DZIAL;
   par[2].IND:=(_ind+=1);
   par[2].KOD:='6';
   par[2].NAZWA:='Liczba pracowników wg stanu w dniu 31 XII, otrzymujących w grudniu wynagrodzenie '+
                 'nieprzekraczające %1 zł'[form(_nk,,2,'9,')];
   par[2].WAR1:=exec('wynmin','stat',_kon,_nk);
   FUN.prg_next();
   par[2].WAR2:=0;
   par[2].add()
|? _kon~1>2015
|| par[2].blank();
   par[2].DZIAL:=par[3].DZIAL;
   par[2].IND:=(_ind+=1);
   par[2].KOD:='6';
   par[2].NAZWA:='Liczba pracowników wg stanu w dniu 31 XII, otrzymujących w grudniu wynagrodzenie '+
                 'nieprzekraczające 1850,00 zł';
   par[2].WAR1:=exec('wynmin','stat',_kon,1850.00);
   FUN.prg_next();
   par[2].WAR2:=0;
   par[2].add();

   par[2].blank();
   par[2].DZIAL:=par[3].DZIAL;
   par[2].IND:=(_ind+=1);
   par[2].KOD:='6a';
   par[2].NAZWA:='   w tym liczba pracowników z dochodami z przedziału 1849,99 - 1480,00 zł';
   par[2].WAR1:=exec('wynmin','stat',_kon,1849.99,1480.00);
   FUN.prg_next();
   par[2].WAR2:=0;
   par[2].add()
|? _kon~1<2015
|| par[2].blank();
   par[2].DZIAL:=par[3].DZIAL;
   par[2].IND:=(_ind+=1);
   par[2].KOD:='6';
   par[2].NAZWA:='Liczba pracowników wg stanu w dniu 31 XII, otrzymujących w grudniu wynagrodzenie '+
                 'nieprzekraczające 1680,00 zł';
   par[2].WAR1:=exec('wynmin','stat',_kon,1680.00);
   FUN.prg_next();
   par[2].WAR2:=0;
   par[2].add();

   par[2].blank();
   par[2].DZIAL:=par[3].DZIAL;
   par[2].IND:=(_ind+=1);
   par[2].KOD:='6a';
   par[2].NAZWA:='   w tym liczba pracowników z dochodami z przedziału 1679,99 - 1344,00 zł';
   par[2].WAR1:=exec('wynmin','stat',_kon,1679.99,1344.00);
   FUN.prg_next();
   par[2].WAR2:=0;
   par[2].add()
|? _kon~1=2015
|| par[2].blank();
   par[2].DZIAL:=par[3].DZIAL;
   par[2].IND:=(_ind+=1);
   par[2].KOD:='6';
   par[2].NAZWA:='Liczba pracowników wg stanu w dniu 31 XII, otrzymujących w grudniu wynagrodzenie '+
                 'nieprzekraczające 1750,00 zł';
   par[2].WAR1:=exec('wynmin','stat',_kon,1750.00);
   FUN.prg_next();
   par[2].WAR2:=0;
   par[2].add();

   par[2].blank();
   par[2].DZIAL:=par[3].DZIAL;
   par[2].IND:=(_ind+=1);
   par[2].KOD:='6a';
   par[2].NAZWA:='   w tym liczba pracowników z dochodami z przedziału 1749,99 - 1400,00 zł';
   par[2].WAR1:=exec('wynmin','stat',_kon,1749.99,1400.00);
   FUN.prg_next();
   par[2].WAR2:=0;
   par[2].add()
?};

::Dzial 2 --------------------------------------------------------------------------------------------------------------
par[3].blank();
par[3].DZIAL:=2;
par[3].TYT:='Składniki wynagrodzeń - brutto';
par[3].KOL1:='W tys zł.';
par[3].KOL2:='';
par[3].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='01';
par[2].NAZWA:='Wynagrodzenia osobowe';
par[2].WAR1:=_wyn500;
FUN.prg_next();
par[2].WAR2:=0;
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='02';
par[2].NAZWA:='   w tym za pracę w godzinach nadliczbowych';
par[2].WAR1:=exec('sum_skl_bodd','oddelegowanie',_prac,__RUB.sys_sql(6313102,_kon),0,,,1)/1000$1;
FUN.prg_next();
par[2].WAR2:=0;
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='05';
par[2].NAZWA:='Wypłaty z tytułu udziału w zysku lub nadwyżce bilansowej w spółdzielniach';
par[2].WAR1:=exec('wyn','stat','P',_pocz,_kon,,,__RUB.sys_sql(6313106,_kon))/1000$1;
FUN.prg_next();
par[2].WAR2:=0;
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='07';
par[2].NAZWA:='Dodatkowe wynagrodzenia roczne dla pracowników jednostek sfery budżetowej';
par[2].WAR1:=exec('wyn','stat','P',_pocz,_kon,,,__RUB.sys_sql(6313105,_kon))/1000$1;
FUN.prg_next();
par[2].WAR2:=0;
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='09';
par[2].NAZWA:='Wynagrodzenia z tytułu umowy zlecenia lub umowy o dzieło (wynagrodzenia bezosobowe)';
par[2].WAR1:=exec('wyn_zlec','stat',_pocz,_kon);
FUN.prg_next();
par[2].WAR2:=0;
par[2].add();

::Dzial 3 --------------------------------------------------------------------------------------------------------------
par[3].blank();
par[3].DZIAL:=3;
par[3].TYT:='Czas pracy';
par[3].KOL1:='Ogółem';
par[3].KOL2:='';
par[3].add();

_w3k1:=exec('nieprzeprac','stat',0,_pocz,_kon,,_prac);
FUN.prg_next();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='1';
par[2].NAZWA:='Czas faktycznie przepracowany ogółem';
par[2].WAR1:=exec('czasumy','stat',,_pocz,_kon,_prac);
FUN.prg_next();
par[2].WAR1-=_w3k1-exec('nieprzeprac','stat',1,_pocz,_kon,,_prac);
FUN.prg_next();
par[2].WAR1+=exec('czasprzf','stat',,_pocz,_kon,_prac);
par[2].WAR1:=par[2].WAR1$1;
FUN.prg_next();
par[2].WAR2:=0;
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='2';
par[2].NAZWA:='   w tym w godzinach nadliczbowych';
par[2].WAR1:=exec('czasnad','stat',_pocz,_kon,_prac)$1;
FUN.prg_next();
par[2].WAR2:=0;
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='3';
par[2].NAZWA:='Czas nieprzepracowany ogółem';
par[2].WAR1:=_w3k1$1;
par[2].WAR2:=0;
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='4';
par[2].NAZWA:='   w tym w opłacony przez zakład pracy';
par[2].WAR1:=exec('nieprzeprac','stat',0,_pocz,_kon,'FIRMA',_prac)$1;
FUN.prg_next();
par[2].WAR2:=0;
par[2].add();



::Dzial 4 --------------------------------------------------------------------------------------------------------------
par[3].blank();
par[3].DZIAL:=4;
par[3].TYT:='Pracujący - stan w dniu 31 XII';
par[3].KOL1:='Ogółem';
par[3].KOL2:='W tym kobiety';
par[3].add();
_tab:=exec('gus_pracuje','!pkd_roz_zsst',,_kon,,,,,,,,'GUS','Z_06','TN');
par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='01';
par[2].NAZWA:='Pracujący ogółem';
VAR_DEL.delete('__tab_x1');
__tab_x1:=sql('
   select distinct NAZWISKO, IMIE, PESEL, PLEC
   from :_a where :_a.NB<>\'T\'
   order by NAZWISKO, IMIE, PESEL',_tab);
{? _view_ok
|| VAR_DEL.delete('__wnd');
   __wnd:=__tab_x1.grp_make('Pobrane osoby do wyliczeń'@,,,0,0);
   _win:=__tab_x1.mk_sel('4-01');
   __tab_x1.win_fld(_win,,'NAZWISKO',,,30,,,'Nazwisko'@);
   __tab_x1.win_fld(_win,,'IMIE',,,30,,,'Imię'@);
   __tab_x1.win_fld(_win,,'PESEL',,,13,,,'PESEL'@);
   __tab_x1.win_act(_win,0,'Kolejność');
   __tab_x1.grp_sel(__wnd,__tab_x1,_win,'4-01',,,,8,,,,,'maximized_with_title')
?};
par[2].WAR1:=sql('select count(*) ILE from :_a ',__tab_x1).ILE;
FUN.prg_next();

par[2].WAR2:=sql('select count(*) ILE from :_a where :_a.PLEC=\'K\' ',__tab_x1).ILE;
FUN.prg_next();
par[2].add();

_tab_xP:=sql('
   select NAZWISKO, IMIE, PESEL, sum(WY) WY, RU
   from :_a where PMP=\'T\' and :_a.NB<>\'T\'
   group by NAZWISKO, IMIE, PESEL, RU
   order by NAZWISKO, IMIE, PESEL',_tab);
{? _tab_xP.first
|| {! |? {? _tab_xP.WY>=1 || _tab_xP.next || _tab_xP.del() ?} !}
?};
_w03k1:=sql('select count(*) ILE from :_a ',_tab_xP).ILE;

FUN.prg_next();

_tab_xPK:=sql('
   select NAZWISKO, IMIE, PESEL, sum(WY) WY, RU
   from :_a where PLEC=\'K\' and PMP=\'T\' and :_a.NB<>\'T\'
   group by NAZWISKO, IMIE, PESEL, RU
   order by NAZWISKO, IMIE, PESEL',_tab);
_w03k2:=0;
{? _tab_xPK.first
|| {! |? {? _tab_xPK.WY=1 || _tab_xPK.next || _tab_xPK.del() ?} !}
?};
_w03k2:=sql('select count(*) ILE from :_a ',_tab_xPK).ILE;

FUN.prg_next();

_tab_xN:=sql('
   select NAZWISKO, IMIE, PESEL, sum(WY) WY, RU
   from :_a where PMP=\'T\' and :_a.NB<>\'T\'
   group by NAZWISKO, IMIE, PESEL, RU
   order by NAZWISKO, IMIE, PESEL',_tab);
{? _tab_xN.first
|| {! |? {? _tab_xN.WY<1 || _tab_xN.next || _tab_xN.del() ?} !}
?};
_w05k1:=sql('select count(*) ILE from :_a ',_tab_xN).ILE;

FUN.prg_next();

_tab_xNK:=sql('
   select NAZWISKO, IMIE, PESEL, RU, sum(WY) WY
   from :_a where PLEC=\'K\' and PMP=\'T\' and :_a.NB<>\'T\'
   group by NAZWISKO, IMIE, PESEL, RU
   order by NAZWISKO, IMIE, PESEL',_tab);
{? _tab_xNK.first
|| {! |? {? _tab_xNK.WY<1 || _tab_xNK.next || _tab_xNK.del() ?} !}
?};
_w05k2:=sql('select count(*) ILE from :_a ',_tab_xNK).ILE;
FUN.prg_next();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='02';
par[2].NAZWA:='Pracujący, dla których jednostka sprawozdawcza jest głównym miejscem pracy '+
              '(suma wierszy od 03+05+07 do 10)';
par[2].WAR1:=_w03k1+_w05k1;
par[2].WAR2:=_w03k2+_w05k2;
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='03';
par[2].NAZWA:='   Pełnozatrudnieni';
par[2].WAR1:=_w03k1;
par[2].WAR2:=_w03k2;
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='04';
par[2].NAZWA:='      w tym zatrudnieni na umowy okresowe';
_tab1:=sql('select * from :_a where RU<>\'C\' ',_tab_xP);
par[2].WAR1:=sql('select count(*) ILE from :_a ',_tab1).ILE;

_tab2:=sql('select * from :_a where RU<>\'C\'',_tab_xPK);
FUN.prg_next();
par[2].WAR2:=sql('select count(*) ILE from :_a ',_tab2).ILE;
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='05';
par[2].NAZWA:='   Niepełnozatrudnieni';
par[2].WAR1:=_w05k1;
par[2].WAR2:=_w05k2;
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='06';
par[2].NAZWA:='      w tym zatrudnieni na umowy okresowe';
_tab3:=sql('select * from :_a where RU<>\'C\' ',_tab_xN);
par[2].WAR1:=sql('select count(*) ILE from :_a where RU<>\'C\' ',_tab3).ILE;
FUN.prg_next();


_tab4:=sql('select * from :_a where RU<>\'C\' ',_tab_xNK);
par[2].WAR2:=sql('select count(*) ILE from :_a ',_tab4).ILE;
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='12';
par[2].NAZWA:='Z wiersza 02 - niepełnosprawni';
_tab50:=exec('gus_pracuje','!pkd_roz_zsst',,_kon,,,,,,,'niepełnosprawny','GUS','Z_06');
_tab5:=sql('
   select distinct NAZWISKO, IMIE, PESEL, PLEC
   from :_a where :_a.NB<>\'T\'
   order by NAZWISKO, IMIE, PESEL',_tab50);
par[2].WAR1:=sql('select count(*) ILE from :_a',_tab5).ILE;

FUN.prg_next();
par[2].WAR2:=sql('select count(*) ILE from :_a where PLEC=\'K\'',_tab5).ILE;
_tab5K:=sql('select * from :_a where PLEC=\'K\'',_tab5);

FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='13';
par[2].NAZWA:='Z wiersza 02 - cudzoziemcy';
_tab60:=exec('gus_pracuje','!pkd_roz_zsst',,_kon,,,,,,'T',,'GUS','Z_06');
_tab6:=sql('
   select distinct NAZWISKO, IMIE, PESEL, PLEC
   from :_a where :_a.NB<>\'T\' and :_a.PMP=\'T\'
   order by NAZWISKO, IMIE, PESEL',_tab60);
par[2].WAR1:=sql('select count(*) ILE from :_a',_tab6).ILE;

FUN.prg_next();
par[2].WAR2:=sql('select count(*) ILE from :_a where PLEC=\'K\'',_tab6).ILE;
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='14';
par[2].NAZWA:='Z wiersza 02 - emeryci i renciści';
_tab70:=exec('gus_pracuje','!pkd_roz_zsst',,_kon,,,,,,,'rencista','GUS','Z_06');
_tab7:=sql('
   select distinct NAZWISKO, IMIE, PESEL, PLEC
   from :_a where :_a.NB<>\'T\' and :_a.PMP=\'T\'
   order by NAZWISKO, IMIE, PESEL',_tab70);

par[2].WAR1:=sql('select count(*) ILE from :_a',_tab7).ILE;

FUN.prg_next();
par[2].WAR2:=sql('select count(*) ILE from :_a where PLEC=\'K\'',_tab7).ILE;
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='---';
par[2].NAZWA:='Dodatkowe informacje';
par[2].add();

__F_ZATR.mod('T');
par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='16';
{? _kon~1>2015
|| par[2].NAZWA:='Osoby udostępnione (zatrudnione) przez agencję pracy tymczasowej - stan w dniu 31 XII'
|| par[2].NAZWA:='Pracownicy udostępnieni (zatrudnieni) przez agencję pracy tymczasowej - stan w dniu 31 XII'
?};
FUN.prg_next();
_tab8:=exec('gus_pracuje','!pkd_roz_zsst',,_kon,,,,,,,,'GUS','Z_06');
_tab9:=sql('
   select distinct NAZWISKO, IMIE, PESEL, PLEC
   from :_a
   where :_a.NB<>\'T\'
   order by NAZWISKO, IMIE, PESEL',_tab8);

par[2].WAR1:=sql('select count(*) ILE from :_a ',_tab9).ILE;
FUN.prg_next();
par[2].WAR2:=sql('select count(*) ILE from :_a where :_a.PLEC=\'K\' ',_tab9).ILE;
FUN.prg_next();
par[2].add();

__F_ZATR.mod('K');
par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='17';
{? _kon~1>2015
|| par[2].NAZWA:='Osoby zatrudnione na kontraktach, których umowa nie ma charakteru umowy o pracę '+
              '- stan w dniu 31 XII'
|| par[2].NAZWA:='Pracownicy zatrudnieni na kontraktach, których umowa nie ma charakteru umowy o pracę '+
              '- stan w dniu 31 XII'
?};

_tab10:=exec('gus_pracuje','!pkd_roz_zsst',,_kon,,,,,,,,'GUS','Z_06');
_tab11:=sql('
   select distinct NAZWISKO, IMIE, PESEL, PLEC
   from :_a
   where :_a.NB<>\'T\'
   order by NAZWISKO, IMIE, PESEL',_tab10);

par[2].WAR1:=sql('select count(*) ILE from :_a ',_tab11).ILE;
FUN.prg_next();
par[2].WAR2:=sql('select count(*) ILE from :_a where :_a.PLEC=\'K\' ',_tab11).ILE;
FUN.prg_next();
par[2].add();

__F_ZATR.mod('P');

::Dzial 5.1 ------------------------------------------------------------------------------------------------------------
par[3].blank();
par[3].DZIAL:=5.1;
par[3].TYT:='Przyjęcia do pracy i zwolnienia z pracy pracowników pełnozatrudnionych w głównym miejscu pracy';
par[3].KOL1:='Ogółem';
par[3].KOL2:='W tym kobiety';
par[3].add();


_tab_url:=exec('gus_urlop','!pkd_roz_zsst',_pocz-1,_kon);
_w10k1:=sql('select count(*) ILE from :_a where :_a.KZ=\'W\' and :_a.Z5_10=\'T\'',_tab_url).ILE;
FUN.prg_next();
_w10k2:=sql('select count(*) ILE from :_a where :_a.KZ=\'W\' and :_a.Z5_10=\'T\' and :_a.PLEC=\'K\'',_tab_url).ILE;
FUN.prg_next();

_tab12:=exec('gus_pracuje','!pkd_roz_zsst',,_kon,,,,,,,,'P-ROK','Z_06','TN');
_tab13:=sql('
   select NAZWISKO, IMIE, PESEL, PLEC, sum(WY) WY
   from :_a
   where :_a.NB<>\'T\' and PMP=\'T\'
   group by NAZWISKO, IMIE, PESEL, PLEC
   order by NAZWISKO, IMIE, PESEL',_tab12);
{? _tab13.first
|| {! |? {? _tab13.WY>=1 || _tab13.next || _tab13.del() ?} !}
?};

FUN.prg_next();

par[2].blank();
par[2].DZIAL:=5.1;
par[2].IND:=(_ind+=1);
par[2].KOD:='01';
par[2].NAZWA:='Pełnozatrudnieni w dniu 31 XII '+$((_pocz~1)-1)+'r. (poprzedni rok sprawozdawczy)';
par[2].WAR1:=sql('select count(*) ILE from :_a ',_tab13).ILE;
FUN.prg_next();
par[2].WAR2:=sql('select count(*) ILE from :_a where :_a.PLEC=\'K\' ',_tab13).ILE;
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=5.1;
par[2].IND:=(_ind+=1);
par[2].KOD:='02';
par[2].NAZWA:='Przyjęci (pełnozatrudnieni) do pracy w okresie od 1 I do 31 XII roku sprawozdawczego '+
              '(suma wierszy 03+08+10+11)';
_tabZ02:=exec('przyjeto','sik_for',_pocz,_kon,,'T',,,,,,'GUS','T',,1);
par[2].WAR1:=_tabZ02.size+_w10k1;
FUN.prg_next();
par[2].WAR2:=sql('select count(*) ILE from :_a where :_a.PLEC=\'K\'',_tabZ02).ILE+_w10k2;
FUN.prg_next();
par[2].add();

_w11k1:=par[2].WAR1;
_w11k2:=par[2].WAR2;

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='03';
par[2].NAZWA:='   osoby podejmujące pracę po raz pierwszy';
par[2].WAR1:=exec('przyjeto','sik_for',_pocz,_kon,,'T',,,,'pierwsza praca',,'GUS','T');
FUN.prg_next();
par[2].WAR2:=exec('przyjeto','sik_for',_pocz,_kon,'K','T',,,,'pierwsza praca',,'GUS','T');
FUN.prg_next();
par[2].add();

_w11k1-=par[2].WAR1;
_w11k2-=par[2].WAR2;

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='04';
par[2].NAZWA:='      w tym z wiersza 03 absolwenci szkół wyższych';
par[2].WAR1:=exec('przyjeto','sik_for',_pocz,_kon,,'T',,,'wyższe','pierwsza praca',,'GUS','T');
FUN.prg_next();
par[2].WAR2:=exec('przyjeto','sik_for',_pocz,_kon,'K','T',,,'wyższe','pierwsza praca',,'GUS','T');
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='05';
par[2].NAZWA:='      w tym z wiersza 03 absolwenci szkół policealnych i średnich zawodowych';
par[2].WAR1:=exec('przyjeto','sik_for',_pocz,_kon,,'T',,,'policealne','pierwsza praca',,'GUS','T');
FUN.prg_next();
par[2].WAR1+=exec('przyjeto','sik_for',_pocz,_kon,,'T',,,'średnie zawodowe','pierwsza praca',,'GUS','T');
FUN.prg_next();
par[2].WAR2:=exec('przyjeto','sik_for',_pocz,_kon,'K','T',,,'policealne','pierwsza praca',,'GUS','T');
FUN.prg_next();
par[2].WAR2+=exec('przyjeto','sik_for',_pocz,_kon,'K','T',,,'średnie zawodowe','pierwsza praca',,'GUS','T');
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='06';
par[2].NAZWA:='      w tym z wiersza 03 absolwenci liceów ogólnokształcących';
par[2].WAR1:=exec('przyjeto','sik_for',_pocz,_kon,,'T',,,'średnie ogólne','pierwsza praca',,'GUS','T');
FUN.prg_next();
par[2].WAR2:=exec('przyjeto','sik_for',_pocz,_kon,'K','T',,,'średnie ogólne','pierwsza praca',,'GUS','T');
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='07';
par[2].NAZWA:='      w tym z wiersza 03 absolwenci szkół zasadniczych';
par[2].WAR1:=exec('przyjeto','sik_for',_pocz,_kon,,'T',,,'zasadnicze zawodowe','pierwsza praca',,'GUS','T');
FUN.prg_next();
par[2].WAR2:=exec('przyjeto','sik_for',_pocz,_kon,'K','T',,,'zasadnicze zawodowe','pierwsza praca',,'GUS','T');
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='08';
par[2].NAZWA:='   osoby poprzednio pracujące';
par[2].WAR1:=exec('przyjeto','sik_for',_pocz,_kon,,'T',,,,'kolejna praca',,'GUS','T');
FUN.prg_next();
par[2].WAR2:=exec('przyjeto','sik_for',_pocz,_kon,'K','T',,,,'kolejna praca',,'GUS','T');
FUN.prg_next();
par[2].add();
_tab_xP.prefix;
_w11k1-=par[2].WAR1;
_w11k2-=par[2].WAR2;

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='10';
par[2].NAZWA:='   osoby, które wróciły z urlopów wychowawczych';
par[2].WAR1:=_w10k1;
par[2].WAR2:=_w10k2;
par[2].add();

_w11k1-=par[2].WAR1;
_w11k2-=par[2].WAR2;

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='11';
par[2].NAZWA:='   pozostali przyjęci do pracy';
par[2].WAR1:=_w11k1;
par[2].WAR2:=_w11k2;
par[2].add();

::Dzial 5.2 ------------------------------------------------------------------------------------------------------------
par[3].blank();
par[3].DZIAL:=5.2;
par[3].TYT:='Przyjęcia do pracy i zwolnienia z pracy pracowników pełnozatrudnionych w głównym miejscu pracy (c.d.)';
par[3].KOL1:='Ogółem';
par[3].KOL2:='W tym kobiety';
par[3].add();

_w20k1:=sql('select count(*) ILE from :_a where :_a.KZ=\'W\' and :_a.Z5_20=\'T\' ',_tab_url).ILE;
FUN.prg_next();
_w20k2:=sql('select count(*) ILE from :_a where :_a.KZ=\'W\' and :_a.Z5_20=\'T\' and :_a.PLEC=\'K\'',_tab_url).ILE;
FUN.prg_next();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='13';
par[2].NAZWA:='Zwolnieni (pełnozatrudnieni) z pracy w okresie od 1 I do 31 XII roku sprawozdawczego '+
              '(w.14+16+17+18+19+20+21+22)';

_tabZ13:=exec('zwolnin','sik_for',_pocz,_kon,,'T',,,,,,'GUS','T','GUS',1);
par[2].WAR1:=_tabZ13.size+_w20k1;
FUN.prg_next();
par[2].WAR2:=sql('select count(*) ILE from :_a where :_a.PLEC=\'K\'',_tabZ13).ILE+_w20k2;
FUN.prg_next();
par[2].add();

_w22k1:=par[2].WAR1;
_w22k2:=par[2].WAR2;

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='14';
par[2].NAZWA:='   w drodze wypowiedzenia przez pracodawcę';
par[2].WAR1:=exec('zwolnin','sik_for',_pocz,_kon,,'T',,,,,'przedsi','GUS','T');
FUN.prg_next();
par[2].WAR1+=exec('zwolnin','sik_for',_pocz,_kon,,'T',,,,,'zakład','GUS','T');
FUN.prg_next();
par[2].WAR2:=exec('zwolnin','sik_for',_pocz,_kon,'K','T',,,,,'przedsi','GUS','T');
FUN.prg_next();
par[2].WAR2+=exec('zwolnin','sik_for',_pocz,_kon,'K','T',,,,,'zakład','GUS','T');
FUN.prg_next();
par[2].add();

_w22k1-=par[2].WAR1;
_w22k2-=par[2].WAR2;

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='15';
par[2].NAZWA:='     w tym z przyczyn niedotyczących pracowników';
par[2].WAR1:=exec('zwolnin','sik_for',_pocz,_kon,,'T',,,,,'zakład','GUS','T');
FUN.prg_next();
par[2].WAR2:=exec('zwolnin','sik_for',_pocz,_kon,'K','T',,,,,'zakład','GUS','T');
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='16';
par[2].NAZWA:='   w drodze wypowiedzenia przez pracownika';
par[2].WAR1:=exec('zwolnin','sik_for',_pocz,_kon,,'T',,,,,'pracownik','GUS','T');
FUN.prg_next();
par[2].WAR1+=exec('zwolnin','sik_for',_pocz,_kon,,'T',,,,,'własna prośba','GUS','T');
FUN.prg_next();
par[2].WAR2:=exec('zwolnin','sik_for',_pocz,_kon,'K','T',,,,,'pracownik','GUS','T');
FUN.prg_next();
par[2].WAR2+=exec('zwolnin','sik_for',_pocz,_kon,'K','T',,,,,'własna prośba','GUS','T');
FUN.prg_next();
par[2].add();

_w22k1-=par[2].WAR1;
_w22k2-=par[2].WAR2;

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='17';
par[2].NAZWA:='   z powodu niezdolności do pracy i rehabilitacji';
par[2].WAR1:=exec('zwolnin','sik_for',_pocz,_kon,,'T',,,,,'renta','GUS','T');
FUN.prg_next();
par[2].WAR2:=exec('zwolnin','sik_for',_pocz,_kon,'K','T',,,,,'renta','GUS','T');
FUN.prg_next();
par[2].add();

_w22k1-=par[2].WAR1;
_w22k2-=par[2].WAR2;

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='18';
par[2].NAZWA:='   w związku z przejściem na emeryturę';
par[2].WAR1:=exec('zwolnin','sik_for',_pocz,_kon,,'T',,,,,'emeryt','GUS','T');
FUN.prg_next();
par[2].WAR2:=exec('zwolnin','sik_for',_pocz,_kon,'K','T',,,,,'emeryt','GUS','T');
FUN.prg_next();
par[2].add();

_w22k1-=par[2].WAR1;
_w22k2-=par[2].WAR2;

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='19';
par[2].NAZWA:='   na mocy porozumienia stron';
par[2].WAR1:=exec('zwolnin','sik_for',_pocz,_kon,,'T',,,,,'porozumienie stron','GUS','T');
FUN.prg_next();
par[2].WAR2:=exec('zwolnin','sik_for',_pocz,_kon,'K','T',,,,,'porozumienie stron','GUS','T');
FUN.prg_next();
par[2].add();

_w22k1-=par[2].WAR1;
_w22k2-=par[2].WAR2;

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='20';
par[2].NAZWA:='   osoby, które otrzymały urlopy wychowawcze';
par[2].WAR1:=_w20k1;
par[2].WAR2:=_w20k2;
par[2].add();

_w22k1-=par[2].WAR1;
_w22k2-=par[2].WAR2;

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='21';
par[2].NAZWA:='   z upływem czasu, na który zostali zatrudnieni';
par[2].WAR1:=exec('zwolnin','sik_for',_pocz,_kon,,'T',,,,,'z upływem czasu','GUS','T');
FUN.prg_next();
par[2].WAR2:=exec('zwolnin','sik_for',_pocz,_kon,'K','T',,,,,'z upływem czasu','GUS','T');
FUN.prg_next();
par[2].add();
_tab13.prefix;
_w22k1-=par[2].WAR1;
_w22k2-=par[2].WAR2;

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='22';
par[2].NAZWA:='   z innych przyczyn (np. urlopy bezpłatne, porzucenie pracy)';
par[2].WAR1:=_w22k1;
par[2].WAR2:=_w22k2;
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='---';
par[2].NAZWA:='Dodatkowe informacje - zbilansowanie działu 5 z działem 4 wiersz 03 (pracowników pełnozatrudnionych)';
par[2].add();
_zm_wym:=exec('gus_zmiana_wymiaru','!pkd_roz_zsst',_kon);
par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='23';
par[2].NAZWA:='Zatrudnieni, którzy w ciągu roku zmienili etat z niepełnego na pełny';
par[2].WAR1:=sql('select count(*) ILE from :_a where :_a.NA_C=1 ',_zm_wym).ILE;
FUN.prg_next();
par[2].WAR2:=sql('select count(*) ILE from :_a where :_a.NA_C=1  and :_a.PLEC=\'K\'',_zm_wym).ILE;
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='24';
par[2].NAZWA:='Zatrudnieni, którzy w ciągu roku zmienili etat z pełnego na niepełny';
par[2].WAR1:=sql('select count(*) ILE from :_a where :_a.NA_M=1 ',_zm_wym).ILE;
FUN.prg_next();
par[2].WAR2:=sql('select count(*) ILE from :_a where :_a.NA_M=1  and :_a.PLEC=\'K\'',_zm_wym).ILE;
FUN.prg_next();
par[2].add();

::----------------------------------------------------------------------------------------------------------------------

{? var_pres('__REHAB')>100 || obj_del(__REHAB); &__REHAB ?};
{? var_pres('__BEZPL')>100 || obj_del(__BEZPL); &__BEZPL ?};
{? var_pres('ustalfiz')>100 || obj_del(ustalfiz); &ustalfiz ?};

FUN.prg_stop();

par[3].first();

__F_ZATR.mod(_fzatr);

{? _view_ok
|| _view(_tab_xP,'4-03');
   _view(_tab1,'4-04');
   _view(_tab_xN,'4-05');
   _view(_tab3,'4-06');
   _view(_tab5,'4-12');
   _view(_tab6,'4-13');
   _view(_tab7,'4-14');
   _view(_tab9,'4-16');
   _view(_tab10,'4-17');
   _view(_tab13,'5-01');
   _view(_tabZ02,'5-02');
   _tab_u10:=sql('select * from :_a where :_a.Z5_10=\'T\'',_tab_url);
   _view(_tab_u10,'5-10');
   _view(_tabZ13,'5-13');
   _tab_u20:=sql('select * from :_a where :_a.Z5_20=\'T\'',_tab_url);
   _view(_tab_u20,'5-20');
   _tab_u23:=sql('select * from :_a where :_a.NA_C=1',_zm_wym);
   _view(_tab_u23,'5-23');
   _tab_u24:=sql('select * from :_a where :_a.NA_M=1',_zm_wym);
   _view(_tab_u24,'5-24');
   __tab_x1.win_sel(__wnd);
   __tab_x1.select();
   VAR_DEL.delete('__tab','__wnd')
?};
1


\gus_z05_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Formula startowa wywolywana z menu Kadry > Wydruki > Sprawozdania GUS
::       (tu istnieje mozliwosc zmiany sposobu wywolywania bez modyfikacji definicji systemu).
::  OLD: \start/gus_z05.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('no_limit','schemat','PKD')
|| FUN.info('Brak uprawnień do uruchomienia sprawozdania Z-05'@);
   exec('gus_z05_clear_all','!pkd_roz_zsst');
   return(0)
?};

{? FUN.ask('Generowanie sprawozdania GUS Z-05.\nOperacja może być czasochłonna.\nCzy kontynuować?'@)
|| exec('gus_z05_clear_all','!pkd_roz_zsst');
   __miejsca:=exec('gus_miejsca_pracy','!pkd_roz_zsst',
      ~FUN.ask('~~Czy chcesz określić ograniczony zakres miejsc wykonywania pracy?'@)
   );
   {? +__miejsca & exec('gus_z05_stale','!pkd_roz_zsst') & exec('gus_z05_tab_create','!pkd_roz_zsst')
   || _fzatr:=__F_ZATR.P;
      __F_ZATR.mod('P');
      {? exec('gus_z05_wybierz_prac','!pkd_roz_zsst')>0
      || exec('gus_z05_wyswietl','!pkd_roz_zsst')
      || FUN.info('Brak danych do wyeksportowania.'@)
      ?};
      __F_ZATR.mod(_fzatr)
   || FUN.info('Anulowano wykonanie sprawozdania Z-05.'@)
   ?};
   exec('gus_z05_clear_all','!pkd_roz_zsst')
?};
::ustawienie odpowiednich stalych systemu po wykonaniu funkcji
exec('stalesys','#stalesys');
1


\gus_z05_clear_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Czysciciel globalny.
::  OLD: \clear_all/gus_z05.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__Rspr','__Kspr','__regon','__pkd','__emailj','__emailo','__EXPORT','__Rmin','__Rmax');
VAR_DEL.delete('__file','__totalO','__totalK','__niepeln','__tel','__operI','__operN','__miejsca');
1


\gus_z05_stale
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Stale systemu
::       (docelowo wartosci odczytywane ze stalych systemu).
::  OLD: \stale/gus_z05.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__Rmin','__Rmax');
__Rmin:=2010;
__Rmax:=2019;

_TPAR:=tab_tmp(1,
   'ROK','INTEGER','Rok sprawozdawczy'@,
   'KWA','INTEGER','Kwartał sprawozdawczy'@
);
_date:=date();
_TPAR.ROK:=_date~1-{? _date~2<=3 || 1 || 0 ?};
_TPAR.KWA:=
   {? _date~2<=3 || 4
   |? _date~2<=6 || 1
   |? _date~2<=9 || 2
   || 3
   ?};

_we:=_TPAR.mk_edit('Sprawozdanie GUS %1'@ ['Z-05'],,'#gus_par_z05');
_TPAR.win_esep(_we,'Parametry'@);
_TPAR.win_efld(_we,,'ROK',,,13,,,,,MS.name(_TPAR,'ROK')+' [%1 - %2]' [$__Rmin,$__Rmax]);
_TPAR.win_efld(_we,,'KWA',,,13,,,,,MS.name(_TPAR,'KWA')+' [1 - 4]');
exec('ok_esc','#window',_TPAR,_we);
_TPAR.win_edit(_we);
_TPAR.efld_opt(_we,'mark=1');
{? _TPAR.edit(
      "  _TPAR:=cur_tab(1,1);
         {? (_chk:=__CHK.record(_TPAR))<>''
         || _chk
         |? _TPAR.KWA<1 | 4<_TPAR.KWA
         || __CHK.err_fld(_TPAR,'KWA',1,'Dozwolone wartości z przedziału %1-%2.'@ ['1','4'])
         |? _TPAR.ROK>__Rmax
         || {? FUN.ask('Sprawozdanie zostanie wykonane w wersji obowiązującej w roku %1.\nCzy kontynuować?'@[$__Rmax])
            || ''
            || 'ROK'
            ?}
         |? _TPAR.ROK<__Rmin
         || __CHK.err_fld(_TPAR,'ROK',1,'Sprawozdanie dostępne od roku %1.'@ [$__Rmin])
         || ''
         ?}
      "
   )
|| __Rspr:=_TPAR.ROK;
   __Kspr:=_TPAR.KWA
|| return(0)
?};

:: Wszystkie dane pobierane do sprawozdania okreslaja stan na ostatni dzien kwartalu sprawozdawczego
exec('czytaj','#stalesys',date(__Rspr,__Kspr*3,0),KST);
:: 14-to znakowy numer REGON jednostki sprawozdawczej (firmy)
__regon:=14+(form(KST.REG)+(14*'0'));
:: Symbol rodzaju podstawowej dzialalnosci wg PKD 2004
__pkd:=form(KST.PKD);

_oper:=userdata;
__operI:=~-(form(((_oper*' ')+_oper)));
__operN:=~-(form(((_oper*' ')-_oper)));
__emailo:='';

__tel:=KST.TEL;
__tel:=gsub(__tel,'+48','');
__tel:=gsub(__tel,'-','');
__tel:=gsub(__tel,' ','');
__tel:=gsub(__tel,'.','');
__emailj:=KST.EMAIL;
1


\gus_z05_tab_create
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Utworzenie tabeli tymczasowej z wynikami do eksportu informacji
::  OLD: \tab_create/gus_z05.fml
::----------------------------------------------------------------------------------------------------------------------
__EXPORT:=tab_tmp(2,'TAB','INTEGER','tabelka (3 lub 7)'@,
                    'KOD','STRING[2]','Kod grupy zawodowej'@,
                    'OGOL','INTEGER','Ogółem zatrudnionych - w osobach'@,
                    'KOB','INTEGER','w tym kobiet - w osobach'@
                  );
{? var_pres('__EXPORT')<=100
|| FUN.emsg('Utworzenie tabeli wynikowej zakończone niepowodzeniem.\n'
            'Działanie funkcji zostanie przerwane.'@);
   return(0)
?};
1


\gus_z05_wybierz_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Wybranie pracownikow spelniajacych kryteria i wpisanie do tabelki export
::   WE: wymagane zmienne globalne dt.okresu
::  OLD: \wybierz_prac/gus_z05.fml
::----------------------------------------------------------------------------------------------------------------------
_tabela:=3;
_bezzaw:=0;
_dSpr:=date(__Rspr,__Kspr*3,0);

P.cntx_psh();
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P);
_dalej:=FUN.prg_start(P.size,,,1);
OSOBA.cntx_psh();
OSOBA.prefix;
{? OSOBA.first
|| RAPLS.ustaw(1);
   {!
   |? P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P,OSOBA.ref);
      {? P.first
      || _kodzaw:=''; _kodzawok:='';
         _wy:=_ok:=0;
         {!
         |? _dalej:=FUN.prg_next();
            {? P.DZA<=_dSpr & (P.DZ=date(0,0,0) | P.DZ>=_dSpr)
             & exec('gus_z05_wykluczenia','!pkd_roz_zsst',_dSpr)>0
            || {? P.ZAW=null | +(_kodzaw:=2+P.ZAW().KOD)=0
               || _bezzaw+=1;
                  RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                            {? P.ZAW=null
                            || 'Brak informacji o zawodzie wykonywanym.'@
                            || 'Brak podanego kodu w zawodzie wykonywanym: %1.'[P.ZAW().ZD]
                            ?},
                            'Pracownik pominięty w zestawieniu Z-05.'@)
               || {? _wy<P.WY
                  || _wy:=P.WY;
                     _kodzawok:=_kodzaw;
                     _ok:=1
                  ?}
               ?}
            ?};
            P.next & _dalej
         !};
         {? _ok
         || exec('gus_z05_export_addput','!pkd_roz_zsst',_tabela,_kodzawok);
            {? exec('gus_z05_niepelnosprawni','!pkd_roz_zsst',_dSpr)>0
            || exec('gus_z05_export_addput','!pkd_roz_zsst',_tabela,'00')
            ?}
         ?}
      ?};
      OSOBA.next
   !}
?};
P.cntx_pop();
OSOBA.cntx_pop();
FUN.prg_stop();

__EXPORT.prefix();
{? _bezzaw>0
|| FUN.info(
      'W trakcie przetwarzania natrafiono na następujące błędy:'@+'\n'+
      {? _bezzaw>0
      || '- '+'%1 pracowników bez informacji o zawodzie wykonywanym bądź zawód bez podanego kodu.'@ [$_bezzaw]+'\n'
      || ''
      ?}+
      'Pracownicy ci zostali pominięci w zestawieniu.'@
   );
   RAPLS.raport(5)
?};
RAPLS.ustaw(0);
__EXPORT.size()


\gus_z05_export_addput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Zapis rekordu do tabelki __EXPORT
::   WE: _a - tabela (3 lub 7)
::       _b - kod zawodu ('00' - niepelnosprawni)
::  OLD: \export_addput/gus_z05.fml
::----------------------------------------------------------------------------------------------------------------------
_tabela:=_a;
_kodzaw:=_b;

__EXPORT.prefix(_tabela,_kodzaw);
{? __EXPORT.first
||
   __EXPORT.OGOL+=1;
   {? P.OSOBA().PLEC='K'
   || __EXPORT.KOB+=1
   ?};
   __EXPORT.put()
||
   __EXPORT.blank();
   __EXPORT.TAB:=_tabela;
   __EXPORT.KOD:=_kodzaw;
   __EXPORT.OGOL:=1;
   {? P.OSOBA().PLEC='K'
   || __EXPORT.KOB:=1
   ?};
   __EXPORT.add()
?}


\gus_z05_niepelnosprawni
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Pobranie informacji o niepelnosprawnosci pracownika
::   WE: wymagane zmienne globalne
::       (przetwarzany jest biezacy rekord P)
::       _a - data konca kwartalu [DATE]
::   WY: 1 - tak, 0 - nie, -1 - blad
::  OLD: \niepelnosprawni/gus_z05.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~(var_pres('_a')= type_of(date) & _a~1>0) || return(-1) ?};
_date:=_a;

P_INFO.index('OD');
P_INFO.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
_niep:=0;
{? P_INFO.last
|| {!
   |? {? P_INFO.STNP_OD<=_date & (P_INFO.STNP_DO~1=0 | P_INFO.STNP_DO>=_date)
       & P_INFO.STNP().KOD<>'0'
       & P_INFO.STNP().KOD<>''
      || _niep:=1
      ?};
      P_INFO.prev & _niep=0
   !}
?};
_niep


\gus_z05_wykluczenia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Macrlogic [12.10]
:: OPIS: Badanie czy pracowik jest na urlopie bezplatnym badz wychowawczym powyzej 3mies. nieprzerwanie.
::       Badany jest pracownik zgodnie z biezacym ustawieniem rekordu P.
::       Wybieramy tylko pracownikow zgodnych z miejscem wykonywania pracy
::   WE: Wymagane zmienne globalne
::       _a - data konca kwartalu [DATE]
::   WY: 1 - ok, 0 - wyklucz, -1 - blad
::  OLD: \wykluczenia/gus_z05.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~(var_pres('_a')=type_of(date()) & date~1>0) || return(-1) ?};

_koniec:=_a;
_wynik:=0;
H.index('_HISTKOD');
H.prefix(P.ref(),'Z');
{? H.last()
|| {!
   |? {? H.OD<=_koniec & (H.DO>=_koniec | H.DO~1=0)
      || {? __miejsca*(','+~-form(H.MIEJSCE)+',') || _wynik:=1; 0 ?}
      || H.prev
      ?}
   !}
?};
_dalej:=1;
{! _ind:=1..2
|! {? _dalej
   || {? var_pres('_rub')>100 || obj_del(_rub) ?};
      _rub:={? _ind=1 || __RUB.sys_rub(133) || __RUB.sys_rub(112) ?};
      {? _rub.first()
      || {!
         |? N.index('NIPRACNB');
            N.prefix('N',P.ref,_rub.RN);
            {? N.find_le(_koniec) & N.OD<=_koniec & N.DO>=_koniec
            || {!
               |? __KAL.rdat(N.OD,_koniec);
                  {? __KAL.year*12+__KAL.month>=3
                  || _wynik-=1; _dalej:=0
                  || _n_od:=N.OD;
                     N.prev & N.DO=(_n_od-1)
                  ?}
               !}
            ?};
            _rub.next
         !}
      ?}
   ?}
!};
_wynik


\gus_z05_wyswietl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Wyswietlenie zebranych informacji na ekran
::   WE: tabela tymczasowa __EXPORT
::  OLD: \wyswietl/gus_z05.fml
::----------------------------------------------------------------------------------------------------------------------
_Wynik:=tab_tmp(,'KOD','INTEGER','Kod zawodu'@
                ,'ZAWOD','STRING[200]','Symbol zawodu i nazwa'@
                ,'OGOL','INTEGER','Ogółem'@
                ,'KOB','INTEGER','w tym kobiety'@);

__EXPORT.prefix(3);
{? __EXPORT.first
||
   {!
   |? _Wynik.KOD:=#__EXPORT.KOD;
      {? _Wynik.KOD=0
      || _Wynik.ZAWOD:='Liczba osób niepełnosprawnych'@;
         _Wynik.KOD:=999
      || _rkod:={? __Rspr>__Rmax || __Rmax || __Rspr ?};
         _name:=
            {? _rkod>=2011
            || 'gus_z05_kody_trans_2011'
            || 'gus_z05_kody_trans_'+$_rkod
            ?};
         _Wynik.ZAWOD:=exec(_name,'!pkd_roz_zsst',#__EXPORT.KOD)
      ?};
      _Wynik.OGOL:=__EXPORT.OGOL;
      _Wynik.KOB:=__EXPORT.KOB;
      _Wynik.add(1);
      __EXPORT.next
   !}
?};
_win:=_Wynik.mk_sel;
_Wynik.win_sel(_win);
_Wynik.win_fld(_win,,'ZAWOD',,,70);
_Wynik.win_fld(_win,,'OGOL',,,20);
_Wynik.win_fld(_win,,'KOB',,,20);
_Wynik.hdr_sel('Liczba pracujących wg. KZiS (stan na ostatni dzień %1 kwartału %2 roku)'@[$__Kspr,$__Rspr]);
_Wynik.select;
1


\gus_z05_kody_trans_2010
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Translacja kodu grupy zawodowej na forme opisowa (wersja dla roku 2010)
::   WE: _a - kod [INTEGER]
::   WY: opis
::  OLD: \kody_trans_2010/gus_z05.fml
::----------------------------------------------------------------------------------------------------------------------
_kod:=(('00'+($_a))+2)+' - ';
{? _a=11 || _kod+'Przedstawiciele władz publicznych, wyżsi urzędnicy, zawodowi działacze'
|? _a=12 || _kod+'Kierownicy dużych i średnich organizacji'
|? _a=13 || _kod+'Kierownicy małych przedsiębiorstw'
|? _a=21 || _kod+'Specjaliści nauk fizycznych, matematycznych i technicznych'
|? _a=22 || _kod+'Specjaliści nauk przyrodniczych i ochrony zdrowia'
|? _a=23 || _kod+'Specjaliści szkolnictwa'
|? _a=24 || _kod+'Pozostali specjaliści'
|? _a=31 || _kod+'Średni personel techniczny'
|? _a=32 || _kod+'Średni personel w zakresie nauk biologicznych i ochrony zdrowia'
|? _a=33 || _kod+'Nauczyciele praktycznej nauki zawodu i instruktorzy'
|? _a=34 || _kod+'Pracownicy pozostałych specjalności'
|? _a=41 || _kod+'Pracownicy obsługi biurowej'
|? _a=42 || _kod+'Pracownicy obrotu pieniężnego i obsługi klientów'
|? _a=51 || _kod+'Pracownicy usług osobistych i ochrony'
|? _a=52 || _kod+'Modelki, sprzedawcy i demonstratorzy'
|? _a=61 || _kod+'Rolnicy'
|? _a=62 || _kod+'Ogrodnicy'
|? _a=63 || _kod+'Leśnicy i rybacy'
|? _a=64 || _kod+'Rolnicy i rybacy pracujący na własne potrzeby'
|? _a=71 || _kod+'Górnicy i robotnicy budowlani'
|? _a=72 || _kod+'Robotnicy obróbki metali i mechanicy maszyn i urządzeń'
|? _a=73 || _kod+'Robotnicy zawodów precyzyjnych, ceramicy, wytwórcy wyrobów galanteryjnych, '
                 'robotnicy poligraficzni i pokrewni'
|? _a=74 || _kod+'Pozostali robotnicy przemysłowi i rzemieślnicy'
|? _a=81 || _kod+'Operatorzy maszyn i urządzeń wydobywczych i przetwórczych'
|? _a=82 || _kod+'Operatorzy i monterzy maszyn'
|? _a=83 || _kod+'Kierowcy i operatorzy pojazdów'
|? _a=91 || _kod+'Pracownicy przy pracach prostych w handlu i usługach'
|? _a=92 || _kod+'Robotnicy pomocniczy w rolnictwie, rybołówstwie i pokrewni'
|? _a=93 || _kod+'Robotnicy pomocniczy w górnictwie, przemyśle, budownictwie i transporcie'
|| ''
?}


\gus_z05_kody_trans_2011
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Translacja kodu grupy zawodowej na forme opisowa (wersja dla roku 2011)
::   WE: _a - kod [INTEGER]
::   WY: opis
::  OLD: \kody_trans_2011/gus_z05.fml
::----------------------------------------------------------------------------------------------------------------------
_kod:=(('00'+($_a))+2)+' - ';
{? _a=11 || _kod+'Przedstawiciele władz publicznych, wyżsi urzędnicy i dyrektorzy generalni'
|? _a=12 || _kod+'Kierownicy do spraw zarządzania i handlu'
|? _a=13 || _kod+'Kierownicy do spraw produkcji i usług'
|? _a=14 || _kod+'Kierownicy w branży hotelarskiej, handlu i innych branżach usługowych'
|? _a=21 || _kod+'Specjaliści nauk fizycznych, matematycznych i technicznych'
|? _a=22 || _kod+'Specjaliści do spraw zdrowia'
|? _a=23 || _kod+'Specjaliści nauczania i wychowania'
|? _a=24 || _kod+'Specjaliści do spraw ekonomicznych i zarządzania'
|? _a=25 || _kod+'Specjaliści do spraw technologii informacyjno-komunikacyjnych'
|? _a=26 || _kod+'Specjaliści z dziedziny prawa, dziedzin społecznych i kultury'
|? _a=31 || _kod+'Średni personel nauk fizycznych, chemicznych i technicznych'
|? _a=32 || _kod+'Średni personel do spraw zdrowia'
|? _a=33 || _kod+'Średni personel do spraw biznesu i administracji'
|? _a=34 || _kod+'Średni personel z dziedziny prawa, spraw społecznych, kultury i pokrewny'
|? _a=35 || _kod+'Technicy informatycy'
|? _a=41 || _kod+'Sekretarki, operatorzy urządzeń biurowych i pokrewni'
|? _a=42 || _kod+'Pracownicy obsługi klienta'
|? _a=43 || _kod+'Pracownicy do spraw finansowo-statystycznych i ewidencji materiałowej'
|? _a=44 || _kod+'Pozostali pracownicy obsługi biura'
|? _a=51 || _kod+'Pracownicy usług osobistych'
|? _a=52 || _kod+'Sprzedawcy i pokrewni'
|? _a=53 || _kod+'Pracownicy opieki osobistej i pokrewni'
|? _a=54 || _kod+'Pracownicy usług ochrony'
|? _a=61 || _kod+'Rolnicy produkcji towarowej'
|? _a=62 || _kod+'Leśnicy i rybacy'
|? _a=63 || _kod+'Rolnicy i rybacy pracujący na własne potrzeby'
|? _a=71 || _kod+'Robotnicy budowlani i pokrewni (z wyłączeniem elektryków)'
|? _a=72 || _kod+'Robotnicy obróbki metali, mechanicy maszyn i urządzeń i pokrewni'
|? _a=73 || _kod+'Rzemieślnicy i robotnicy poligraficzni'
|? _a=74 || _kod+'Elektrycy i elektronicy'
|? _a=75 || _kod+'Robotnicy w przetwórstwie spożywczym, obróbce drewna, produkcji wyrobów tekstylnych i pokrewni'
|? _a=81 || _kod+'Operatorzy maszyn i urządzeń wydobywczych i przetwórczych'
|? _a=82 || _kod+'Monterzy'
|? _a=83 || _kod+'Kierowcy i operatorzy pojazdów'
|? _a=91 || _kod+'Pomoce domowe i sprzątaczki'
|? _a=92 || _kod+'Robotnicy pomocniczy w rolnictwie, rybołówstwie'
|? _a=93 || _kod+'Robotnicy pomocniczy w górnictwie, przemyśle, budownictwie i transporcie'
|? _a=94 || _kod+'Pracownicy pomocniczy przygotowujący posiłki'
|? _a=95 || _kod+'Sprzedawcy uliczni i pracownicy świadczący usługi na ulicach'
|? _a=96 || _kod+'Ładowacze nieczystości i inni pracownicy przy pracach prostych'
|| ''
?}


\gus_z05_kody_trans_2012
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Translacja kodu grupy zawodowej na forme opisowa (wersja dla roku 2012)
::   WE: _a - kod [INTEGER]
::   WY: opis
::  OLD: \kody_trans_2012/gus_z05.fml
::----------------------------------------------------------------------------------------------------------------------
exec('gus_z05_kody_trans_2011','!pkd_roz_zsst',_a)


\gus_z05_kody_trans_2013
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.10]
:: OPIS: Translacja kodu grupy zawodowej na forme opisowa (wersja dla roku 2013)
::   WE: _a - kod [INTEGER]
::   WY: opis
::  OLD: \kody_trans_2013/gus_z05.fml
::----------------------------------------------------------------------------------------------------------------------
exec('gus_z05_kody_trans_2011','!pkd_roz_zsst',_a)


\gus_z12_stale
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Ustawienie stalych
::  OLD: \stale/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
_TPAR:=tab_tmp(1,'ROK','INTEGER','Rok'@);
_we:=_TPAR.mk_edit('Sprawozdanie GUS Z-12'@,,'#gus_z_12');
_TPAR.win_esep(_we,'Parametry'@);
_TPAR.win_efld(_we,,'ROK',,,5,,,,,'Rok sprawozdania'@);
_TPAR.win_edit(_we);
_TPAR.efld_opt(_we,'mark=1',,'ROK');
exec('ok_esc','#window',_TPAR,_we);
params_set('TPAR',_TPAR);
_TPAR.ROK:={? ((date()~1)/2)=(((date()~1)/2)$0) || (date()~1)-2 || (date()~1)-1 ?};
{? _TPAR.edit("__CHK.record(params_get().TPAR)")
|| __Rspr:=_TPAR.ROK
|| return(0)
?};
__Mspr:=10;
__LiczMax:=12;

exec('czytaj','#stalesys',date(__Rspr,__Mspr,0),KST);
1


\gus_z12_clear_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Czysciciel globalny.
::  OLD: \clear_all/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__EXPORT','__NIEOB','__Mspr','__Rspr','__LiczMax','__file','__miejsca','__WYK','__NHdx');
VAR_DEL.delete('__LS','__R','__RUBO','__PREM');
1


\gus_z12_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Formula startowa wywolywana z menu Kadry > Wydruki > Sprawozdania GUS
::       (tu istnieje mozliwosc zmiany sposobu wywolywania bez modyfikacji definicji systemu).
::  OLD: \start/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('no_limit','schemat','PKD')
|| {? FUN.ask('%1\n%2\n%3'
         ['Generowanie sprawozdania GUS Z-12.'@,'Operacja może być czasochłonna.'@,'Czy kontynuować?'@]
      )
   || exec('gus_z12_clear_all','!pkd_roz_zsst');
      {? exec('gus_z12_stale','!pkd_roz_zsst')
      || _faztr:=__F_ZATR.P;
         __F_ZATR.mod('P');
         {? exec('gus_z12_spr_wyk_gus','!pkd_roz_zsst')
         || {? __Rspr>2013
            || exec('gus_z12_2014','!pkd_roz_zsst')
            || FUN.info('Sprawozdanie niedostępne dla roku %1\n%2'@[$__Rspr,'Anulowano wykonania sprawozdania Z-12.'@])
            ?}
         || FUN.info('Dane o kodzie GUS do sprawozdania Z-12 niewypełnione.'@)
         ?};
         __F_ZATR.mod(_faztr)
      || FUN.info('Anulowano wykonanie sprawozdania Z-12.'@)
      ?};
      exec('gus_z12_clear_all','!pkd_roz_zsst')
   ?}
|| FUN.info('Brak uprawnień do uruchomienia sprawozdania Z-12'@);
   return(0)
?};
:: przywrocenie ustawien systemu odpowiednich stalych systemu po wykonaniu funkcji
exec('stalesys','#stalesys');
1


\gus_z12_B6
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Konwersja rodzajow umow o prace do wymaganego formatu
::   WE: _a - Kod rodzaju umowy: ABCDE
::   WY: Symbol rodzaju umowy o prace wymagany przez GUS, 0 - blad [INTEREGR]
::  OLD: \B6/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('')
|| _a:=~-_a;
   {? _a='A' || 4
   |? _a='B' || 2
   |? _a='C' || 1
   |? _a='D' || 3
   |? _a='E' || 2
   || 0
   ?}
|| 0
?}


\gus_z12_staze
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.10]
:: OPIS: Funkcja wyliczajaca staz dla pracownika lub osoby
::   WE:  _a -[DATE] data wyliczenia stazu
::        _b - 1 wyliczenie stazu wraz z okresami zatrudnienia
::             0 wyliczenie stazu tylko w zakladzie pracy bez okresow zatrudnienia przed firma
::   WY:  3 tablice: __lata, __mc, __dni o indeksie 1
::        znaczenie indeksu: 1 - ogolny
::  OLD: \staze/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<>type_of(0) || _b:=1 ?};
_buf:=exec('oblicz_buf','staz');
_tab:=_buf.tabela;
_zdate:=date(0,0,0);
_osoba:=P.OSOBA;
_p_dza:=P.DZA;
_p_dzw:=P.DZ;
{? _p_dza<>_zdate & _p_dza<=date
|| STAZ.cntx_psh;
   STAZ_H.index('OSOBA');
   STAZ_H.prefix(exec('ref_firma','ustawienia'),_osoba,'Z');
   _start:={? STAZ_H.first & _b || STAZ_H.OD || _p_dza ?};
   P.cntx_psh;
   P.index('PRACOSOB');
   P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P,_osoba);
   {? P.first & P.DZA<_start
   || _start:=P.DZA
   ?};
   P.cntx_pop;
   {? _p_dza<>_zdate & _p_dza<_start || _start:=_p_dza ?};
   _buf.DataStazu:=
       {? var_pres('_a')=type_of(0) & _a
       || _a:=date(_a,12,0);
          {? _p_dzw=_zdate || _a
          |? _p_dzw<_a || _p_dzw
          || _a
          ?}
       |? var_pres('_a')=type_of(date) & _a<>_zdate
          || {? _p_dzw=_zdate || _a
             |? _p_dzw<_a || _p_dzw
             || _a
             ?}
       || {? _p_dzw=_zdate || date || _p_dzw ?}
       ?};
   _stop:=(_DCiagl:=_buf.DataStazu);

   STAZ.index('_STAZE');
   STAZ.prefix(exec('ref_firma','ustawienia'),_osoba);
   STAZ_H.index('OZ');
   {? _b & STAZ.first
   || {!
      |? STAZ_H.prefix(STAZ.ref);
         {? STAZ_H.first
         || {!
            |? {? STAZ_H.DO=_zdate || STAZ_H.DO:=_stop ?};
               {? STAZ_H.ZM().KZ='Z'
               || exec('add_okr','staz',_buf,STAZ_H.OD,STAZ_H.DO,'O',#STAZ.ref,STAZ.CI,STAZ.NA,STAZ.BR,STAZ.DU,'N')
               ?};
               STAZ_H.next
            !}
         ?};
         {? STAZ_H.first
         || {!
            |? {? STAZ_H.DO=_zdate || STAZ_H.DO:=_stop ?};
               {? STAZ_H.ZM().KZ='B'
               || exec('add_nie','staz',_buf,STAZ_H.OD,STAZ_H.DO,'O',#STAZ_H.OZ)
               ?};
               STAZ_H.next
            !}
         ?};
         STAZ.next
      !}
   ?};
   _tab.cntx_psh();
   _tab.clear();
   {? _tab.first
   || {!
      |? _tab.REF:=#_osoba;
         _tab.put;
         _tab.next
      !}
   ?};
   _tab.cntx_pop;

   _P_ref:=P.ref;
   P.cntx_psh;
   H.cntx_psh;
   H.index('_HISTOSD');
   H.prefix(exec('ref_firma','ustawienia'),_osoba);
   {? H.first
   ||
::       uwzgledniaj informacje o innych etatach osoby (!),
::       ale tylko do dnia zatrudnienia na "biezacym" etacie
      {!
      |? {? H.P().F_ZATR().KOD='P'
         || {? H.P=_P_ref | H.OD<=_p_dza
            || {? (_data:=H.OD)<=_buf.DataStazu
               || _od:=_data;
                  _do:={? H.P=_P_ref
                       || {? H.DO=_zdate || _stop || H.DO ?}
                       || {? H.DO=_zdate | _p_dza<H.DO || _p_dza || H.DO ?}
                       ?};
                  _do:={? _do>_stop || _stop || _do ?};
                  exec('add_okr','staz',_buf,_od,_do,'P',#H.P,'T','T','T','T','T')
               ?}
            ?}
         ?};
         H.next
      !}
   ?};
   H.cntx_pop;
   N.cntx_psh;
   N.index('NIOSOBNB');
   _rub:=__RUB.sys_rub(1121);
   {? _rub.first
   || {!
      |? N.prefix('N',exec('ref_firma','ustawienia'),P.OSOBA,_rub.RN);
         {? N.first
         ||
::          uwzgledniaj dane o innych nieobecnosciach osoby (!),
::          ale tylko do dnia zatrudnienia na "biezacym" etacie
            {!
            |? {? N.P().F_ZATR().KOD='P'
               || {? (_data:=N.OD)<=_buf.DataStazu & (N.P=_P_ref | N.OD<=_p_dza)
                  || _od:=_data;
                     _do:={? N.P=_P_ref
                          || {? N.DO>_stop || _stop || N.DO ?}
                          || {? N.DO>_p_dza || _p_dza || N.DO ?}
                          ?};
                     _do:={? _do>_stop || _stop || _do ?};
                     exec('add_nie','staz',_buf,_od,_do,'P',#N.P)
                  ?}
               ?};
               N.next
            !}
         ?};
         _rub.next
      !}
   ?};
   N.cntx_pop;
   P.cntx_pop;

   _tab.cntx_psh();
   {! _it:=1..1
   |! _buf.data_pom[_it]:=date(0,0,0);
      _tab.prefix(_buf.rodzaj[_it]);
      {? _tab.first()
      || exec('norm_tab','staz',_buf);
         _buf.data_pom[_it]:=_tab.OD;
         {!
         |? _buf.licz_tab[_it]+=1;
            __KAL.rdat(_tab.OD,_tab.DO);
            _buf.dni[_it]+=__KAL.day;
            _buf.msc[_it]+=__KAL.month;
            _buf.lat[_it]+=__KAL.year;
            _tab.next()
         !}
      ?};

      {? _buf.dni[_it]>29
      || _buf.msc[_it]+=_buf.dni[_it]%30;
         _buf.dni[_it]:=_buf.dni[_it]%*30

      |? _buf.dni[_it]<0
      || _buf.dni[_it]:=-_buf.dni[_it];
         _buf.msc[_it]:=_buf.msc[_it]-_buf.dni[_it]%30-1;
         _buf.dni[_it]:=30-_buf.dni[_it]%*30
      ?};

      {? _buf.msc[_it]>11
      || _buf.lat[_it]+=_buf.msc[_it]%12;
         _buf.msc[_it]:=_buf.msc[_it]%*12

      |? _buf.msc[_it]<0
      || _buf.msc[_it]:=-_buf.msc[_it];
         _buf.lat[_it]:=_buf.lat[_it]-_buf.msc[_it]%12-1;
         _buf.msc[_it]:=12-_buf.msc[_it]%*12
      ?}
   !};
   _tab.cntx_pop();
   STAZ.cntx_pop
?};
_buf


\gus_z12_N_zlicz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Zliczenie nieobecnosci do tabelki tymczasowej dla calego roku w rozbiciu na miesiace
::  OLD: \N_zlicz/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__NIEOB')<100
|| __NIEOB:=tab_tmp(3,'P','INTEGER','Pracownik'@
                     ,'MIE','INTEGER','Miesiąc'@
                     ,'KODNIE','INTEGER','Kod nieobecności'@
                     ,'N_NB','INTEGER','N.NB'@
                     ,'ILDK','REAL','Ilość dni kalendarzowych'@
                     ,'ILDR','REAL','Ilość dni roboczych'@
                     ,'ILG','REAL','Ilość godzin roboczych'@);
   __NHdx:=__NIEOB.ndx_tmp(,1,'P',,,'N_NB',,,'MIE',,)
?};
__NIEOB.prefix(#P.ref);
{! _mie:=1..__LiczMax
|! exec('gus_z12_licz_nie','!pkd_roz_zsst',date(__Rspr,_mie,1),date(__Rspr,_mie,0))
!};
__NIEOB.first


\gus_z12_N_read
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Obliczenie godzin dla rubryk
::       Liczba godzin oplaconych za pobyt na urlopie wypoczynkowym w miesiacu sprawozdawczym
::   WE: Wymagane zmienne globalne dt. okresu
::       _a - 1 - w dniach, 0 - w godzinach
::       _b - nieobecnosc rozliczona lista plac (1 - tak, 0 - nie)
::       _c - nieobecnosc rozliczona w tym samym miesiacu (1- tak, 0 - nie)
::            (wskazanie _b=1 jednoznacznie oznacza _a=1 bez wzgledu na to co przekazano)
::       _d - 1-12 - numer miesiaca/ 0 - caly rok
::       _e - INTEGER - maksymalna liczba obliczanych dni (nie wiecej niz) - (0 - brak ograniczen)
::       [_[6] do _[11]] - operator(+ uwzglednij, - pomin) + numery atrybutow
::   WY: ilosc [real]
::  OLD: \N_read/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~(var_pres('__NIEOB')>=100) || return(0) ?};
_wdniach:={? var_pres('_a')=type_of(0)
          || {? _a<>1 || 0 || 1 ?}
          || 0
          ?};
_rozlMS:={? var_pres('_c')=type_of(0)
         || {? _c<>1 || 0 || 1 ?}
         || 0
         ?};
_rozTAK:={? _rozlMS=1
         || 1
         || {? var_pres('_b')=type_of(0) || {? _b<>1 || 0 || 1 ?} || 0 ?}
         ?};
_miesiac:={? var_pres('_d')=type_of(0)
          || {? _d>=1& _d<=12 || _d || 0 ?}
          || 0
          ?};
_maxDni:={? var_pres('_e')=type_of(0)
         || {? _e<=0 || 0 || _e ?}
         || 0
         ?};
:: Metoda validacji atrybutow do odczytu
_v_atr:="_czy:=0;
         {! _licz:=1..9
         |! {? var_pres('_['+$_licz+']')=type_of('')
            || _atr:=_[_licz];
               {? +_atr
               || _taknie:={? (1+_atr)='+' || 1 || 0 ?};
                  _atryb:=#(1-_atr);
                  _czy:={? _taknie=0
                        || {? __RUB.sys_attr(N.NB,_atryb,date(__Rspr,__Mspr,0))
                           || return(0)
                           || _czy
                           ?}
                        || {? __RUB.sys_attr(N.NB,_atryb,date(__Rspr,__Mspr,0)) || 1 || _czy ?}
                        ?}
               || 0
               ?}
            ?}
         !};
         _czy";

_wynG:=_wynD:=0;

__NIEOB.cntx_psh();
__NIEOB.prefix();
{? _miesiac
|| __NIEOB.prefix(#P.ref,_miesiac)
|| __NIEOB.prefix(#P.ref)
?};
{? ~(var_pres('__NIEOB')>=100 & __NIEOB.first)
|| __NIEOB.cntx_pop();
   return(0)
?};

N.cntx_psh();
N.prefix();
{? __NIEOB.first
|| {!
   |?
      {? N.seek(__NIEOB.N_NB,N.name)
       & N.OD<=date(__Rspr,__LiczMax,0) & N.DO>=date(__Rspr,1,1)
       & {? _rozTAK || +N.LT || 1 ?}
       & {? _rozlMS || ((3+N.LT)+2)=(($__Rspr)+2) & ((5+N.LT)+2)=(('00'+($_miesiac))+2) || 1 ?}
       & _v_atr({? _>5  || _[6]  ?},
                {? _>6  || _[7]  ?},
                {? _>7  || _[8]  ?},
                {? _>8  || _[9] ?},
                {? _>9  || _[10] ?},
                {? _>10 || _[11] ?},
                {? _>11 || _[12] ?}
               )
      || {? _maxDni>0 & _wynD<_maxDni
         || _ild:={? (_wynD+__NIEOB.ILDR)>=_maxDni
                  || _maxDni-_wynD
                  || __NIEOB.ILDR
                  ?};
            _wynD+=_ild;
            _wynG+={? _ild>0 || (__NIEOB.ILG/__NIEOB.ILDR)*_ild || 0 ?}
         || _wynD+=__NIEOB.ILDR;
            _wynG+=__NIEOB.ILG
         ?}
      ?};
      __NIEOB.next
   !}
?};
N.cntx_pop();
__NIEOB.cntx_pop;
{? _wdniach || _wynD || _wynG ?}


\gus_z12_licz_nie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.10]
:: OPIS: Uzupelnia rekordy nieobecnosci w tabeli tymczasowej __NIEOB
::   WE: _a - data poczatkowa
::       _b - data koncowa
::   WY: uzupelniamy rekordy tabelki tymczasowej __NIEOB
::  OLD: \licz_nie/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
_fnorma:=
   {? P.KAL
   || {? P.KAL().CZESC='T'
      || "exec('norma','godziny',_a)"
      || {? KAL_NAZW.NORMA
         || $form(KAL_NAZW.NORMA,,,'0.')
         || "8"
         ?}
      ?}
   || $form(_norma,,,'0.')
   ?};

H.cntx_psh();
H.index('_HISTKOD');
H.prefix(P.ref,'Z');
_mc_pocz:=_a; _mc_konie:=_b;
_ilg:=_ildk:=_ildr:=0;

N.cntx_psh();
N.index('NIEOBECN');
N.prefix('N',P.ref());
{? N.last()
|| {!
   |? _ilg:=_ildk:=_ildr:=0;
      {? (N.OD<=_mc_konie & N.DO>=_mc_pocz)
      || {? N.OD>_mc_pocz
         || _od:=N.OD
         || _od:=_mc_pocz
         ?};
         {? N.DO>_mc_konie
         || _do:=_mc_konie
         || _do:=N.DO
         ?};
         {? _do>=_od
         || {? _od=N.OD & _do=N.DO
            || _ilg+=N.NG;
               _ildk+=N.NK;
               {? __RUB.sys_attr(N.NB,111,_mc_konie)
               || _ildr+=N.NG/_fnorma(N.OD)
               || _ildr+=N.NR
               ?}
            || _ilg+={? H.find_le(_od)
                     || _godz:=__KAL.w_hours(_od,_do)*{? P.KIN='T' || 1 || H.WY ?}$2; _godz
                     || _godz:=__KAL.w_hours(_od,_do)*{? P.KIN='T' || 1 || P.WY ?}$2; _godz
                     ?};
               _ildk+=(_do-_od)+1;
               {? __RUB.sys_attr(N.NB,111,_do)
               || _ildr+=_godz/_fnorma(_od)
               || _ildr+=__KAL.w_days(_od,_do)
               ?}
            ?}
         ?};
         {? _ilg>0 | _ildk>0 | _ildr>0
         || __NIEOB.P:=#P.ref;
            __NIEOB.MIE:=_mc_pocz~2;
            __NIEOB.KODNIE:=N.NB().RN;
            __NIEOB.N_NB:=#N.ref;
            __NIEOB.ILG:=_ilg;
            __NIEOB.ILDK:=_ildk;
            __NIEOB.ILDR:=_ildr;
            __NIEOB.add(1)
         ?}
      ?};
      (N.prev()) & N.DO>=_mc_pocz
   !}
?};
N.cntx_pop();
H.cntx_pop()


\gus_z12_norm_godz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Obliczenie normatywu godzin dla pracownika
::   WE: Wymagane zmienne globalne dt. okresu
::       _a - numer miesiaca, 0 - caly rok
::      [_b] - zliczamny kalendarz standardowy
::      [_c] - zliczanie z uzglednieniem niepelnego miesiaca zatrudnienia lub zwolnienia
::   WY: ilosc [real]
::  OLD: \norm_godz/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) & _a>=1 & _a<=12
|| _pocz:=_kon:=_a
|| _pocz:=1;
   _kon:=__LiczMax
?};
_kal:={? var_pres('_b')=type_of(0) & _b=1 || 0 || 1 ?};
_zatr:={? var_pres('_c')=type_of(0) & _c=1 || 1 || 0 ?};
_normt:=0;
__KAL.set_cal({? P.KAL & _kal || P.KAL || 'standard' ?},__Rspr);
{! _mie:=_pocz.._kon
|! _od:=date(__Rspr,_mie,1);
   _do:=date(__Rspr,_mie,0);
   {? _zatr
   || {? _od~1=P.DZA~1 & _od~2=P.DZA~2 || _od:=P.DZA ?};
      {? P.DZ<>date(0,0,0) & P.DZ~1=_do~1 & P.DZ~2=_do~2 & P.DZ<_do || _do:=P.DZ ?}
   ?};
   _normt+=__KAL.w_hours(_od,_do)
!};
__KAL.set_cal({? P.KAL || P.KAL || 'standard' ?},__Rspr);
_normt$2


\gus_z12_spr_wyk_gus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.10]
:: OPIS: Funkcja sprawdzająca czy wypełnione jest pole WYK.GUS w słowniku Wyksztalcenia ważne do importu Z-12
::   WE:
::   WY: 1 - słownik wypełniony poprawnie
::  OLD: \spr_wyk_gus/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:=1;
_anuluj:=0;
WYK.cntx_psh();
{!
|? WYK.prefix();
   _wynik:=1;
   {? WYK.first()
   || {!
      |? {? WYK.GUS=0 & WYK.count() || _wynik:=0 ?};
         WYK.next() & _wynik
      !}
   ?};
   {? _wynik=0
   || _choice:=FUN.choice('%1\n%2\n%3'
         ['Niewypełnione pole "GUS" do sprawozdania Z-12.'@,
          'Należy uzupełnić to pole dla każdej pozycji w słowniku "Wykształcenie".'@,
          'Brak spowoduje, że dane z pliku nie zostaną zaimportowane do programu GUS Z12.'@
         ],1,'Wyświetl listę'@
      );
      {? _choice=1
      || WYK.win_sel('WER');
         WYK.select()
      || _anuluj:=1
      ?}
   ?};
   ~_wynik & ~_anuluj
!};
{? _anuluj=1 || _wynik:=0 ?};
WYK.cntx_pop();
_wynik


\gus_z12_godz_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.10]
:: OPIS: Funkcja zlicza godziny przepracowane 54 oraz akord 7010 i odbior 63
::       lub nadgodziny (55 i 56 oraz akordowe 7008, 7009) w podanym okresie
::       maksymalnie do 1 mca wiecej wzgledem podanego miesiaca
::   WE: _a - rok
::       _b - miesiac
::       [_c] - dzien od [INTEGER]
::       [_d] - dzien do [INTEGER]
::       [_e] - zliczanie godzin w czasie normalnym (0 lub brak)/nadgodzin(1)
::       UWAGA: nie walidujemy czy dni sa poprawna data lacznie z rokiem i miesiacem
::   WY: Suma godzin przepracowanych
::  OLD: \godz_prac/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
_suma:=0;
__Kwnad:=0;
_rok:=_a;
_mc:=_b;
_dod:={? var_pres('_c')=type_of(0) || _c || 1 ?};
_ddo:={? var_pres('_d')=type_of(0) || _d || 0 ?};
_gnadl:={? var_pres('_e')=type_of(0) & _e=1 || _e || 0 ?};
_rok_wpr:=_rok+1;
_data_od:=date(_rok,_mc,_dod);
_data_do:=date(_rok,_mc,_ddo);
:: Dla wyliczania nadgodzin pobierane sa dane z 13 miesiecy dla dlugich okresow rozliczeniowych
{? _gnadl
|| _stop:=_mc+13
|| _stop:=_mc+1
?};
G.cntx_psh;
G.use('godz'+$_rok);
G.index('MSCKW_KK');
_sumuj:="_wyn:=0;
         G.prefix(P.ref,_a,'G',_b);
         {? G.first
         || {!
            |? {? G.D>=_c & G.D<=_d || _wyn+=G.G$2; __Kwnad+=G.WAR$2 ?};
               G.next
            !}
         ?};
         _wyn
       ";
{! _licz:=_mc.._stop
|! _mclicz:=_licz;
   {? _mclicz>12
   || {? _mclicz>24 || _rok_wpr:=_rok+2 ?};
      _maska:='godz'+form(_rok_wpr,-4,,'9.');
      {? G.name<>_maska
      || G.use(_maska);
         G.index('MSCKW_KK')
      ?};
      {? _mclicz>=25
      || _mclicz-=24
      |? _mclicz>=13
      || _mclicz-=12
      ?}
   ?};
   {? _gnadl
   || _rub:=__RUB.sys_rub(63141,_data_do);
      {? _rub.first()
      || {!
         |? _suma+=_sumuj(_mclicz,_rub.RN,_data_od,_data_do);
            _rub.next()
         !}
      ?};
      obj_del(_rub); &_rub;
::    sumowanie kwoty dla rubryki 66 jako skladnik 123 przy liczeniu z tabeli Godzin przepracowanych
      _suma+=_sumuj(_mclicz,66,_data_od,_data_do);
      _suma+=_sumuj(_mclicz,7011,_data_od,_data_do)
   || _suma+=_sumuj(_mclicz,7010,_data_od,_data_do);
      _suma+=_sumuj(_mclicz,54,_data_od,_data_do);
      _suma+=_sumuj(_mclicz,63,_data_od,_data_do);
      _suma+=_sumuj(_mclicz,65,_data_od,_data_do);
      _suma+=_sumuj(_mclicz,48,_data_od,_data_do)
   ?}
!};
G.cntx_pop;
_suma


\gus_z12_wym_licz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.10]
:: OPIS: Funkcja sredni wymiar zatrudnienia w miesiacy metoda dokladna
::       dzien po dniu zliczajac wymiar w danym dniu w ramach miesiaca
::   WE: _a - rok
::       _b - miesiac
::   WY: Sredni wymiar zatrudnienia (<=1)
::  OLD: \wym_licz/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:=0;
_pocz:=date(_a,_b,1);
_kon:=date(_a,_b,0);
_ile_dni:=_kon-_pocz+1;
_dnirmc:=__KAL.w_days(_pocz,_kon);
_tmp:=obj_new(_ile_dni);
_wym:=0;
_dnir:=0;
H.cntx_psh;
{? ((P.DZ=date(0,0,0) | P.DZ>=_pocz) & P.DZA<=_kon)
|| {? P.DZ<>date(0,0,0) & P.DZ<_kon || _ile:=P.DZ-_pocz+1 || _ile:=_ile_dni ?};
   H.index('_HISTKOD');
   H.prefix(P.ref,'Z');
   {? H.first
   || {! _day:=0.._ile-1
      |! {? __KAL.w_days(_pocz+_day,_pocz+_day)>0 & H.find_le(_pocz+_day)
         || _wym+=H.RWY; _dnir+=1
         ?}
      !}
   ?};
   _wynik:=(_wym/{? _dnirmc || _dnirmc || 1 ?})
?};
H.cntx_pop;
{? _wynik>1 || _wynik:=1 ?};
_wynik


\gus_z12_2014
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Sprawozdanie w wersji za rok 2014. Wywołanie właściwe
::  OLD: \z12_2014/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('gus_z12_tab_prac_2014','!pkd_roz_zsst')
|| {? exec('gus_z12_wybierz_pr_2014','!pkd_roz_zsst')
   || exec('gus_z12_export_2014','!pkd_roz_zsst')
   ?}
?};
1


\gus_z12_rubryki_2014
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Ustalenie rubryk poszczególnych komórek na podstawie atrybutów za rok 2014
::  OLD: \rubryki_2014/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_POKR.cntx_psh();
PAR_POKR.index('PAR_POKR');
PAR_POKR.prefix();
exec('gus_rub_tab_create','!pkd_roz_zsst');
_ls_add:=exec('gus_form_ls_add','!pkd_roz_zsst');
_ls_addo:=exec('gus_form_ls_addo','!pkd_roz_zsst');
:: Sekcja definiowania elementów do pobrania z list plac
_opis:='';
_ls_add(,0,'C9' ,'LS',,_opis,'+6313101');                   'dodatek stażowy';
_ls_add(,0,'C9' ,'LS',,_opis,'+63131901');                  'dodatki stałe';
_ls_add(,0,'C9' ,'LS',,_opis,'+41');                        'wynagrodzenie chorobowe';
_ls_add(,0,'C9' ,'LS',,_opis,'+42');                        'wynagrodzenie urlopowe';
:: dodany atrybut dla GUS Z-12 za 2014 rok
_ls_add(,0,'C9' ,'LS',,_opis,'+63135');                     'wyrównanie do wynagrodzenia minimalnego';
_ls_add(,0,'C10' ,'LS',,_opis,'+451');                      'wynagrodzenie zasadnicze';
_ls_add(,0,'C10' ,'LS',,_opis,'+452');                      'wynagrodzenie zasadnicze';
_ls_add(,0,'C10' ,'LS',,_opis,'+453');                      'wynagrodzenie zasadnicze';
_ls_add(,0,'C11' ,'LS',,_opis,'+6313103');                  'dodatki za pracę zmianową';
_ls_add(,0,'C12R','LS',,_opis,'+63111');                    'premie regulaminowe roczne';
_ls_addo(,0,'C12R','LS',,_opis,'+63111');                   'premie regulaminowe roczne';
_ls_add(,0,'C12K','LS',,_opis,'+63112');                    'premie regulaminowe kwartalne';
_ls_addo(,0,'C12K','LS',,_opis,'+63112');                   'premie regulaminowe kwartalne';
_ls_add(,0,'C12M','LS',,_opis,'+63113');                    'premie regulaminowe miesięczne';
_ls_addo(,0,'C12M','LS',,_opis,'+63113');                   'premie regulaminowe miesieczne';
_ls_add(,0,'C13' ,'LS',,_opis,'+6313102');                  'wynagrodzenia za pracę w godzinach nadliczbowych';
_ls_add(,0,'D12' ,'LS',,_opis,'+63111','+63112','+63113');  'premie regulaminowe';
_ls_addo(,0,'D12' ,'LS',,_opis,'+63111','+63112','+63113'); 'premie regulaminowe';
_ls_add(,0,'D13' ,'LS',,_opis,'+63121','+63122');           'nagrody i premie uznaniowe';
_ls_add(,0,'D14' ,'LS',,_opis,'+6313102');                  'wynagrodzenia za pracę w godzinach nadliczbowych';
_ls_add(,0,'D15' ,'LS',,_opis,'+6313104');                  'honoraria mające charakter wynagrodzenia prac.';
:: dodatkowe wynagrodzenia dla pracowników sfery budżetowej
_ls_add(__Rspr,0,'D16' ,'LS',,_opis,'+63131051');           'wypłacane w roku sprawozdawczym';
_ls_add(__Rspr+1,0,'D16' ,'LS',,_opis,'+63131052');         'wypłacane w kolejnym roku';
:: wypłaty z tytułu udziału w zysku lub nadwyżki bilansowej w spółdzielni
_ls_add(__Rspr,0,'D17' ,'LS',,_opis,'+63131061');           'wypłacane w roku sprawozdawczym';
_ls_add(__Rspr+1,0,'D17' ,'LS',,_opis,'+63131062');         'wypłacane w kolejnym roku';
:: Koniec sekcji definiowania elemenów
PAR_POKR.cntx_pop();
1


\gus_z12_tab_prac_2014
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Sprawozdanie w wersji za rok 2014.
::       Utworzenie tabeli tymczasowej z wynikami do eksportu informacji o pracownikach.
::  OLD: \tab_prac_2014/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__EXPORT');
__EXPORT:=tab_tmp(3,'REF','INTEGER','Reference pracownika',
                    'FU01','STRING[1]','F/U',
                    'FU02','STRING[1]','F/U',
                    'FU03','STRING[1]','F/U',
                    'FU04','STRING[1]','F/U',
                    'FU05','STRING[1]','F/U',
                    'FU06','STRING[1]','F/U',
                    'FU07','STRING[1]','F/U',
                    'FU08','STRING[1]','F/U',
                    'FU09','STRING[1]','F/U',
                    'FU10','STRING[1]','F/U',
                    'FU11','STRING[1]','F/U',
                    'FU12','STRING[1]','F/U',
                    'IDP','STRING[8]','Identyfikator pracownika',
                    'NRF','STRING[3]','Numer filii/oddziału)',
                    'IMIE','STRING[15]','Imię',
                    'NAZWISKO','STRING[30]','Nazwisko',
                    'B1','INTEGER','B1-Numer prac.',
                    'B3','STRING[6]','B3-Symbol zawodu',
                    'B4','INTEGER','B4-Płeć',
                    'B5','INTEGER','B5-Wykształcenie',
                    'B6','INTEGER','B6-Rodzaju umowy',
                    'B7','INTEGER','B7-System czasu pracy',
                    'B8','STRING[7]','B8-Data ur.[RR,MM]',
                    'B9','STRING[8]','B9-Staż pracy ogółem',
                    'B10','STRING[8]','B10-Staż pracy w JS',
                    'C1','STRING[9]','C1-Mies.wsk.wym.czasu pracy za '+$__Mspr+'.'+$__Rspr,
                    'C2','STRING[2]','C2-Liczba dni roboczych w '+$__Mspr+'.'+$__Rspr,
                    'C3','STRING[8]','C3-Tyg.l.godz.ob.pełn.wym.czasu pracy',
                    'C4','STRING[9]','C4-Czas fakt.przepr.w godz.norm.',
                    'C401','REAL','C401-Czas fakt.przepr.w godz.norm.w 1.'+$__Rspr,
                    'C402','REAL','C402-Czas fakt.przepr.w godz.norm.w 2.'+$__Rspr,
                    'C403','REAL','C403-Czas fakt.przepr.w godz.norm.w 3.'+$__Rspr,
                    'C404','REAL','C404-Czas fakt.przepr.w godz.norm.w 4.'+$__Rspr,
                    'C405','REAL','C405-Czas fakt.przepr.w godz.norm.w 5.'+$__Rspr,
                    'C406','REAL','C406-Czas fakt.przepr.w godz.norm.w 6.'+$__Rspr,
                    'C407','REAL','C407-Czas fakt.przepr.w godz.norm.w 7.'+$__Rspr,
                    'C408','REAL','C408-Czas fakt.przepr.w godz.norm.w 8.'+$__Rspr,
                    'C409','REAL','C409-Czas fakt.przepr.w godz.norm.w 9.'+$__Rspr,
                    'C410','REAL','C410-Czas fakt.przepr.w godz.norm.w 10.'+$__Rspr,
                    'C411','REAL','C411-Czas fakt.przepr.w godz.norm.w 11.'+$__Rspr,
                    'C412','REAL','C412-Czas fakt.przepr.w godz.norm.w 12.'+$__Rspr,
                    'C5','STRING[9]','C5-Czas fakt.przepr.w godz.nadl.',
                    'C6','STRING[9]','C6-Czas nieprzepr. ogółem',
                    'C601','REAL','C601-Czas nieprzepr. ogółem w 1.'+$__Rspr,
                    'C602','REAL','C602-Czas nieprzepr. ogółem w 2.'+$__Rspr,
                    'C603','REAL','C603-Czas nieprzepr. ogółem w 3.'+$__Rspr,
                    'C604','REAL','C604-Czas nieprzepr. ogółem w 4.'+$__Rspr,
                    'C605','REAL','C605-Czas nieprzepr. ogółem w 5.'+$__Rspr,
                    'C606','REAL','C606-Czas nieprzepr. ogółem w 6.'+$__Rspr,
                    'C607','REAL','C607-Czas nieprzepr. ogółem w 7.'+$__Rspr,
                    'C608','REAL','C608-Czas nieprzepr. ogółem w 8.'+$__Rspr,
                    'C609','REAL','C609-Czas nieprzepr. ogółem w 9.'+$__Rspr,
                    'C610','REAL','C610-Czas nieprzepr. ogółem w 10.'+$__Rspr,
                    'C611','REAL','C611-Czas nieprzepr. ogółem w 11.'+$__Rspr,
                    'C612','REAL','C612-Czas nieprzepr. ogółem w 12.'+$__Rspr,
                    'C7','STRING[9]','C7-w tym opl.tylko przez zakl.pracy',
                    'C8','STRING[12]','C8-Wyn.osobowe ogółem brutto za '+$__Mspr+'.'+$__Rspr,
                    'C9','STRING[12]','C9-z tego za czas nominalny  razem',
                    'C10','STRING[12]','C10-w tym wyn.zasadnicze',
                    'C11','STRING[12]','C11-w tym dod.za prace zmianowa',
                    'C12','STRING[12]','C12-w tym premie regulaminowe',
                    'C13','STRING[12]','C13-z tego wyn. za prace w godz.nadl.',
                    'D1','STRING[9]','D1-Roczny.wsk.wym.czasu pracy za '+$__Rspr+'r',
                    'D2','STRING[3]','D2-Liczba dni roboczych dla pracownika '+$__Mspr+'r',
                    'D3','STRING[10]','D3-Roczna l. g. obowiązk. pełnego wymiaru czasu pracy w '+$__Rspr,
                    'D4','STRING[10]','D4-Czas fakt.przepr.w godz.norm.',
                    'D5','STRING[10]','D5-Czas fakt.przepr.w godz.nadliczbowych',
                    'D6','STRING[10]','D6-Czas nieprzepracowny ogółem',
                    'D7','STRING[10]','D7-w tym opłacony tylko przez zakład pracy',
                    'D8','STRING[10]','D8-w tym opłacony za przestoje ekonomiczne',
                    'D9','STRING[3]','D9-L.dni url.wyp. wykorz. za '+$__Rspr+'r',
                    'D10','STRING[15]','D10-Wyn.osobowe ogółem brutto za '+$__Rspr+'r',
                    'D11','STRING[15]','D11-z tego za czas nominalny razem.',
                    'D12','STRING[15]','D12-w tym premie regulaminowe',
                    'D13','STRING[15]','D13-w tym nagrody i premie uznaniowe',
                    'D14','STRING[15]','D14-z tego wyn. za prace w godz. nadliczbowych',
                    'D15','STRING[15]','D15-Honoraria mające charakter wyn.prac. za '+$__Rspr+'r',
                    'D16','STRING[15]','D16-Dod.wyn.roczne dla prac. sfery budż.',
                    'D17','STRING[15]','D17-Wypł.z tyt.udz.w zysku lub nadw.bil.w spółdz.'
                  );
{? var_pres('__EXPORT')>100
|| _ndx_ex:=__EXPORT.ndx_tmp('Domyślny',0,'IDP',,,'REF',,);
   __EXPORT.index(_ndx_ex);
   1
|| FUN.emsg('%1\n%2'
      ['Utworzenie tabeli wynikowej zakończone niepowodzeniem.'@,'Działanie funkcji zostanie przerwane.'@]
   );
   0
?}


\gus_z12_wybierz_pr_2014
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Sprawozdanie w wersji za rok 2014.
::       Wybranie pracowników spełniających kryteria i wpisanie do tabelki export.
::   WE: Wymagane zmienne globalne dt.okresu
::  OLD: \wybierz_pr_2014/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
:UWAGA! Funkcja _LRead() jest wywoływana przy założonym prefixie na ref pracownika!
_LRead:="{? __LS.find_key(_a,__Rspr,_b) || __LS.WAR ?}";
_firma:=exec('ref_firma','ustawienia');
VAR_DEL.delete('__Kwnad');
LS.cntx_psh();
P.cntx_psh();
P.index('PRACOIP');
P.prefix(_firma,__F_ZATR.P);
O.cntx_psh();
O.index('LISTYPLA');
O.prefix(_firma,__F_ZATR.O,__Rspr);
_bezzaw:=_bezplac:=0;
_bledzaw:=_bezwyk:=0;
_ujemne:=_brakum:=0;
_askzaw:=FUN.ask('Czy pomijać w sprawozdaniu Z-12 przypadki nieprawidłowych symboli'
                 '\nzawodu wykonywanego, które nie są zgodne z wymaganiami GUS?'@);

_askgodz:=FUN.choice(%126+%126+
   'Czy wyliczać wynagrodzenie za nadgodziny na podstawie:\n\n'
   'wartości w kartotce "Przepracowane godziny" z atrybutu\n'
   '"%1 - %2"\n'
   'oraz kwoty rubryki %3 według daty wystąpienia nadgodziny\n'
   '[opcja "%4"]\n\n'
   'czy\n\n'
   'z list płac z atrybutu\n'
   '"%5 - %6"\n'
   'według miesiąca kosztowego\n'
   '[opcja "%7"]'@
   ['63141',__RUB.get_name('S',63141),'66','Godziny'@,'6313102',__RUB.get_name('S',6313102),'Listy'@],0,
   'Godziny'@,,,,'Listy'@
);

exec('gus_z12_rubryki_2014','!pkd_roz_zsst');

:: Miejsca wykonywania pracy
__miejsca:=exec('gus_miejsca_pracy','!pkd_roz_zsst');
_dalej:=(+__miejsca);

{? _dalej
|| _dalej:=FUN.prg_start(P.size()+O.size(),,,5)
?};

{? P.first() & _dalej
|| RAPLS.ustaw(1);
   {!
   |? _dalej:=FUN.prg_next();
      {? P.DZA<=date(__Rspr,__Mspr,1) & (P.DZ=date(0,0,0) | P.DZ>=date(__Rspr,__Mspr,0))
      || {? ~P.ZAW
         || _bezzaw+=1;
            RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                      'Brak informacji o zawodzie wykonywanym.'@,
                      'Pracownik pominięty w zestawieniu Z-12.'@)
         || __KAL.set_cal({? P.KAL || P.KAL || 'standard' ?},__Rspr);
            {? exec('gus_z12_spr_nie_2014','!pkd_roz_zsst',date(__Rspr,__Mspr,1),date(__Rspr,__Mspr,0))
            || _kodzaw:=P.ZAW().KOD;
               _zawok:=1;
               {? +_kodzaw<6
               || _bledzaw+=1;
                  RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                            'Nieprawidłowy symbol o zawodzie wykonywanym: %1.'@[_kodzaw],
                            {? _askzaw || 'Pracownik pominięty w zestawieniu Z-12.'@ || '' ?});
                  {? _askzaw || _zawok:=0 ?}
               ?};
               {? ~P.OSOBA().WYK
               || _bezwyk+=1;
                  RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,'Brak informacji o wykształceniu pracownika.'@)
               ?};
               _wyksz:=P.OSOBA().WYK().GUS;
               _zawod:=6+(gsub(form(_kodzaw),'.',''));
               {? _wyksz<>0 & _zawok
               || __EXPORT.blank(1);
                  __EXPORT.REF:=#P.ref();
                  __EXPORT.IDP:=((8*'0')+$P.IP)+8;
                  __EXPORT.NRF:='000';
                  __EXPORT.IMIE:=~-(15+(form(P.OSOBA().PIERWSZE)));
                  __EXPORT.NAZWISKO:=~-(30+(form(OSOBA.NAZWISKO)));
                  __EXPORT.B1:=0;
                  __EXPORT.B3:=_zawod;
                  __EXPORT.B4:={? P.OSOBA().PLEC='K' || 2 || 1 ?};
                  __EXPORT.B5:=_wyksz;
                  {? var_pres('_h_wyR')<=100 || _h_wyR:=obj_new(12) ?};
                  {! _mie:=1..__LiczMax |! _h_wyR[_mie]:=0 !};
                  {? var_pres('_h_CP')<=100 || _h_CP:=obj_new(12) ?};
                  {! _mie:=1..__LiczMax |! _h_CP[_mie]:='' !};
                  _czy_mie:=0;
                  H.cntx_psh();
                  H.index('_HISTKOD');
                  H.prefix(P.ref(),'Z');
                  {? H.first()
                  || {! _mie:=1..__LiczMax
                     |! {? H.find_le(date(__Rspr,_mie,0)) & H.OD<=date(__Rspr,_mie,0)
                         & (H.DO>=date(__Rspr,_mie,1) | H.DO=date(0,0,0))
                         & (__miejsca*(','+~-form(H.MIEJSCE)+','))
                        || _h_CP[_mie]:=1+H.CP().S;
                           ($('__EXPORT.FU'+(('00'+$_mie)+2)))():=_h_CP[_mie];
                           {? _mie=__Mspr
                           || _czy_mie:=1;
                              __EXPORT.B6:=exec('gus_z12_B6','!pkd_roz_zsst',H.RU().K)
                           ?}
                        ?}
                     !}
                  ?};
                  H.cntx_pop();
                  {? __EXPORT.B6>0
                  || __EXPORT.B7:=10;
:: UZUPEŁNIĆ! Brak symboliki w danych.

                     __EXPORT.B8:=($(P.OSOBA().UR_DATA~1)+2)+','+(('00'+($(P.OSOBA().UR_DATA~2)))+2);
                     {? var_pres('_buf')>100 || obj_del(_buf) ?};
                     _buf:=exec('gus_z12_staze','!pkd_roz_zsst',date(__Rspr,__Mspr,0),1);
                     __EXPORT.B9:={? var_pres('_buf')>100
                                  || $_buf.lat[1]+'.'+(('00'+$_buf.msc[1])+2)
                                  || '0.00'
                                  ?};
                     {? var_pres('_buf')>100 || obj_del(_buf) ?};
                     _buf:=exec('gus_z12_staze','!pkd_roz_zsst',date(__Rspr,__Mspr,0),0);
                     __EXPORT.B10:={? var_pres('_buf')>100
                                   || $_buf.lat[1]+'.'+(('00'+$_buf.msc[1])+2)
                                   || '0.00'
                                   ?};
:: liczba dni roboczych w X-2014 oraz w roku 2014 obliczenie pól C2 i D2 sposób podany przez GUS
                     __KAL.set_cal('standard',__Rspr);
                     __EXPORT.C2:=$__KAL.w_days(date(__Rspr,__Mspr,1),date(__Rspr,__Mspr,0));
                     __EXPORT.D2:=$__KAL.w_days(date(__Rspr,1,1),date(__Rspr,__LiczMax,0));
:: wyliczenie wymiaru czasu pracy w oparciu o kalendarz GUS
                     {! _mie:=1..__LiczMax |! _h_wyR[_mie]:=exec('gus_z12_wym_licz','!pkd_roz_zsst',__Rspr,_mie) !};

                     __KAL.set_cal({? P.KAL || P.KAL || 'standard' ?},__Rspr);

                     exec('gus_z12_N_zlicz','!pkd_roz_zsst');

                     _Rnorma:=_Rnadg:=_Rprzep:=_Rniep:=_RniepP:=_RnadgKw:=0;
                     _nadg10:=_przep10:=_niep10:=_niepP10:=_nadg10Kw:=0;
                     {! _mie:=1..__LiczMax
                     |! _FizUm:=_h_CP[_mie];

::                      Czas normatywny
::                      pobieramy normę czasu pracy wg kal standard
                        _Mnorma:=(exec('gus_z12_norm_godz','!pkd_roz_zsst',_mie,1))$2;

::                     korygujemy dobową normą czasu pracy dla pełnego wym. zatr. z kalendarza pracownika
                        _mno:=0;
                        R_WZCZ.index('R_WZWND');
                        R_WZCZ.prefix(P.name,P.ref,'N','N');
                        {? ~R_WZCZ.find_le(date(__Rspr,_mie,1))
                        || {? R_WZCZ.first
                           || _mno:=R_WZCZ.KAL().NORMA
                           ?}
                        || _mno:=R_WZCZ.KAL().NORMA
                        ?};
                        _Mnorma:={? _mno>0 || _Mnorma*_mno/8 || _Mnorma ?}$2;
                        _Rnorma+=_Mnorma;

:: Nadgodziny
                        _Mnadg:=exec('gus_z12_godz_prac','!pkd_roz_zsst',__Rspr,_mie,,,1)$2;
                        _Rnadg+=_Mnadg;
:: wyliczanie kwot nadgodzin według daty wystąpienia
                        {? _askgodz
                        || _MnadgKw:=__Kwnad;
                           _RnadgKw+=_MnadgKw
                        || _MnadgKw:=0
                        ?};
:: Nieobecności opłacone przez zakład pracy
                        _MniepP:={? _mie=__Mspr
                                 || exec('gus_z12_N_read','!pkd_roz_zsst',0,0,0,_mie,10,'+161')
                                 || exec('gus_z12_N_read','!pkd_roz_zsst',0,0,0,_mie,0,'+161')
                                 ?};
                        _RniepP+=_MniepP;
:: Nieobecności wszystkie
                        _Mniep:=exec('gus_z12_N_read','!pkd_roz_zsst',0,0,0,_mie,0,'+1');
                        _Mniep+=exec('gus_z12_HN_read','!pkd_roz_zsst',0,_mie,0);
                        _Rniep+=_Mniep;

                        _Mprzep:={? _FizUm='F'
                                 || exec('gus_z12_godz_prac','!pkd_roz_zsst',__Rspr,_mie,,,0)
                                 || exec('gus_z12_norm_godz','!pkd_roz_zsst',_mie,0)$2-_Mniep
                                 ?};
                        _Rprzep+=_Mprzep;

                        {? _mie=__Mspr
                        || _nadg10:=_Mnadg;
                           _przep10:=_Mprzep;
                           _niep10:=_Mniep;
                           _niepP10:=_MniepP;
                           _nadg10Kw:=_MnadgKw
                        ?};
                        _mie+=1
                     !};

                     _C4:=_przep10;
                     _C5:=_nadg10;
                     {? _askgodz || _C13:=_nadg10Kw || _C13:=0 ?};
                     _C6:=_niep10;
                     _C7:=_niepP10;

:: Jeżeli pola mają wartość ujemną to 0 ponieważ GUS Z-12 nie importuje całego pliku
                     {? _C4<0 | _C5<0 | _C6<0 | _C7<0
                     || _ujemne+=1;
                        {? _C4<0
                        ||  RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                                     'Ujemny czas faktycznie przepracowany w godzinach nominalnych C4.'@,
                                     'Pracownik pominięty w zestawieniu Z-12.'@)
                        ?};
                        {? _C5<0 | _C6<0 | _C7<0
                        || RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                                     'Ujemne wartości w pozycjach: C5 - C8.'@,
                                     'W zestawieniu Z-12 zapisano zerowe kwoty w tych pozycjach.'@)
                        ?};
                        {? _C4<0 || _C4:=0 ?};
                        {? _C5<0 || _C5:=0 ?};
                        {? _C6<0 || _C6:=0 ?};
                        {? _C7<0 || _C7:=0 ?}
                     ?};

                     __EXPORT.C1:=form(_h_wyR[__Mspr]#3,,3,'9.');
:: zawsze pobieramy indywidualną normę czasu pracy dla pracownika
                     _C3:=exec('norma','godziny',date(__Rspr,__Mspr, 0))*5;
:: UZUPEŁNIĆ! Brak symboliki w danych
                     __EXPORT.C3:=form(_C3$2,,2,'9.');
                     __EXPORT.C4:=form(_C4,,2,'9.');
                     __EXPORT.C5:=form(_C5,,2,'9.');
                     {? _askgodz || __EXPORT.C13:=form(_C13,,2,'9.') ?};
                     __EXPORT.C6:=form(_C6,,2,'9.');
                     __EXPORT.C7:=form(_C7$2,,2,'9.');

                     _D4:=_Rprzep;
                     _D5:=_Rnadg;
                     {? _askgodz || _D14:=_RnadgKw || _D14:=0 ?};
                     _D6:=_Rniep;
                     _D7:=_RniepP;
:: ustalenie wymiaru rocznego według wzoru GUS a nie wymiarów z Przebiegu zatrudnienia
                     _h_wyrX:={? _Rnorma || 12*(_D4+_D6)/_Rnorma || 0 ?};
                     {? _h_wyrX>12 || _h_wyrX:=12 ?};
                     {? _h_wyrX<0 || _h_wyrX:=0 ?};
                     __EXPORT.D1:=form(_h_wyrX#3,,3,'9.');

                     _D8:=exec('gus_z12_N_read','!pkd_roz_zsst',0,0,0,0,0,'+1314');
                     _D9:=exec('gus_z12_N_read','!pkd_roz_zsst',1,0,0,0,0,'+111')$0;

                     __EXPORT.D3:=form(_Rnorma,,2,'9.');
                     __EXPORT.D4:=form(_D4,,2,'9.');
                     __EXPORT.D5:=form(_D5,,2,'9.');
                     {? _askgodz || __EXPORT.D14:=form(_D14,,2,'9.') ?};
                     __EXPORT.D6:=form(_D6,,2,'9.');
                     __EXPORT.D7:=form(_D7,,2,'9.');
                     __EXPORT.D8:=form(_D8,,2,'9.');
                     __EXPORT.D9:=$(_D9$0);
:: Zapis - pomijamy pracowników nieobecnych cały miesiąc
                     {? #__EXPORT.C4
                     || __EXPORT.add(1)
                     ?}
                  || {? _czy_mie
                     || _brakum+=1;
                        RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,'Brak informacji o typie umowy o pracę.'@,
                                  'Pracownik pominięty w zestawieniu Z-12.'@)
                     ?}
                  ?}
               ?}
            ?}
         ?}
      ?};
      P.next() & _dalej
   !}
?};

{? __EXPORT.first() & _dalej
|| {? exec('gus_zlicz_OK','!pkd_roz_zsst',__EXPORT,1) & exec('gus_zlicz_LS','!pkd_roz_zsst',__EXPORT,1)
   || exec('gus_sumowanie_LS','!pkd_roz_zsst');
      _ndxOld:=__LS.index('?');
      _ndx:=__LS.ndx_tmp(,1,'REF',,,'KOM',,,'ROK',,,'MC',,);
      __LS.index(_ndx);
      __LS.prefix();
      {? __LS.first()
      || __EXPORT.first();
         {!
         |? _dalej:=FUN.prg_next();
            __LS.prefix(__EXPORT.REF);
            {? P.seek(__EXPORT.REF,P.name()) & __LS.first()
            || __LS.cntx_psh();
               _C10:=_LRead('C10',__Mspr)$2;
               _C11:=_LRead('C11',__Mspr)$2;
               _C12:=(_LRead('C12R',0)/12)+_LRead('C12K',__Mspr)+(_LRead('C12M',__Mspr));
               {? _askgodz
               || _C13:=#__EXPORT.C13
               || _C13:=_LRead('C13',__Mspr)$2
               ?};

               _C9:=_C10+_C11+_C12+_LRead('C9',__Mspr)$2;
               _C8:=_C9+_C13;
:: Jeżeli pola mają wartość ujemną to 0 ponieważ GUS Z-12 nie importuje całego pliku
               {? _C8<0 | _C9<0 | _C10<0 | _C11<0 | _C12<0 | _C13<0
               || {? _C8<0 || _C8:=0 ?};
                  {? _C9<0 || _C9:=0 ?};
                  {? _C10<0 || _C10:=0 ?};
                  {? _C11<0 || _C11:=0 ?};
                  {? _C12<0 || _C12:=0 ?};
                  {? _C13<0 || _C13:=0 ?};
                  _ujemne+=1;
                  RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                            'Ujemne wynagrodzenie pracownika w pozycjach: C8 - C13.'@,
                            'W zestawieniu Z-12 zapisano zerowe kwoty w tych pozycjach.'@)
               ?};
               __EXPORT.C8:=form(_C8,,2,'9.');
               __EXPORT.C9:=form(_C9,,2,'9.');
               __EXPORT.C10:=form(_C10,,2,'9.');
               __EXPORT.C11:=form(_C11,,2,'9.');
               __EXPORT.C12:=form(_C12,,2,'9.');
               __EXPORT.C13:=form(_C13,,2,'9.');

               _D10:=_D11:=_D14:=0;
               {! _mie:=1..__LiczMax
               |! _c10t:=_LRead('C10',_mie)$2;
                  _c11t:=_LRead('C11',_mie)$2;
                  _c12t:=_LRead('C12R',_mie)+_LRead('C12K',_mie)+_LRead('C12M',_mie);
                  {? _askgodz
                  || _d14t:=0
                  || _d14t:=_LRead('D14',_mie)$2;
                     _D14+=_d14t
                  ?};
                  _d11t:=_c10t+_c11t+_c12t+_LRead('C9',_mie)$2;
                  _D11+=_d11t;
                  _D10+=_d11t

               !};
               _D13:=_LRead('D13',0)$2;
               _D10+=_D13;
               {? _askgodz|| _D14:=#__EXPORT.D14 ?};
               _D10+=_D14;
               _D11+=_D13;
:: Jeżeli pola mają wartość ujemną to 0 ponieważ GUS Z-12 nie importuje całego pliku
               {? _D10<0 | _D11<0 | _D13<0 | _D14<0
               || {? _D10<0 || _D10:=0 ?};
                  {? _D11<0 || _D11:=0 ?};
                  {? _D13<0 || _D13:=0 ?};
                  {? _D14<0 || _D14:=0 ?};
                  _ujemne+=1;
                  RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                            'Ujemne wynagrodzenie pracownika w pozycjach: D10 - C14.'@,
                            'W zestawieniu Z-12 zapisano zerowe kwoty w tych pozycjach.'@)
               ?};

               __EXPORT.D10:=form(_D10,,2,'9.');
               __EXPORT.D11:=form(_D11,,2,'9.');
:: Jeżeli pola mają wartość ujemną to 0 ponieważ GUS Z-12 nie importuje całego pliku
               _kw:=_LRead('D12',0)$2; {? _kw<0 || _kw:=0 ?};
               __EXPORT.D12:=form(_kw,,2,'9.');
               __EXPORT.D13:=form(_D13,,2,'9.');
               __EXPORT.D14:=form(_D14,,2,'9.');
               _kw:=_LRead('D15',0)$2; {? _kw<0 || _kw:=0 ?};
               __EXPORT.D15:=form(_kw,,2,'9.');
               _kw:=_LRead('D16',0)$2; {? _kw<0 || _kw:=0 ?};
               __EXPORT.D16:=form(_kw,,2,'9.');
               _kw:=_LRead('D17',0)$2; {? _kw<0 || _kw:=0 ?};
               __EXPORT.D17:=form(_kw,,2,'9.');
               __EXPORT.put(1);
               __LS.cntx_pop();
               __EXPORT.next()
            || _bezplac+=1;
               RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
                         'Brak informacji o wynagrodzeniu pracownika.'@,
                         'Pracownik pominięty w zestawieniu Z-12.'@);
               __EXPORT.del()
            ?} & _dalej
         !}
      ?};
      __LS.index(_ndxOld)
   ?}
?};
P.cntx_pop();
O.cntx_pop();
LS.cntx_pop();
FUN.prg_stop();
{? ~_dalej
|| FUN.info('Działanie funkcji przerwane przez użytkownika.'@);
   RAPLS.ustaw(0);
   return(0)
?};
{? _bezzaw>0 | _bezplac>0 | _bezwyk>0 | _bledzaw | _ujemne | _brakum
|| FUN.info('W trakcie przetwarzania natrafiono na następujące błędy:\n'+
            {? _bezzaw>0 || '- '+$_bezzaw+' pracowników bez informacji o zawodzie wykonywanym.\n' || '' ?}+
            {? _bezplac>0 || '- '+$_bezplac+' pracowników bez informacji o wypłatach wynagrodzenia.\n' || '' ?}+
            'Pracownicy ci zostali pominięci w zestawieniu.\n\n'+
            {? _bezwyk>0 || '- '+$_bezwyk+' pracowników bez informacji o wykształceniu.\n' || '' ?}+
            {? _bledzaw>0
            || '- '+$_bledzaw+' pracowników z błędnym symbolem o zawodzie wykonywanym.'+
               {? _askzaw || '\nPracownicy ci zostali pominięci w zestawieniu.\n' || '\n' ?}
            || ''
            ?});
   RAPLS.raport(6)
?};
RAPLS.ustaw(0);
VAR_DEL.delete('__Kwnad');
1


\gus_z12_export_2014
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Sprawozdanie w wersji za rok 2012. Formuła eksportująca do pliku.
::   WE: Wymagane zmienne globalne dt. okresu i dane exportowe
::   WY: plik wynikowy
::  OLD: \export_2014/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~(var_pres('__EXPORT')>=100 & __EXPORT.first())
|| FUN.info('Brak danych do wyeksportowania.'@);
   return(0)
?};
_inTerm:=exec('interm','#system');
{? _inTerm
|| _tmp_dir:=fmk_tmp_dir(0);
   {? type_of(_tmp_dir)<>type_of(~~)
   || _pth:=_tmp_dir.get_path()
   || FUN.emsg('Nie udało się utworzyć katalogu tymczasowego po stronie serwera.'@);
      return(0)
   ?};
   __file:=exec('gus_openfile','!pkd_roz_zsst','Pliki'@+' CSV (*.csv)|*.csv','z-12.csv','csv',_pth)
|| __file:=exec('gus_openfile','!pkd_roz_zsst','Pliki'@+' CSV (*.csv)|*.csv','z-12.csv','csv')
?};

{? ~__file
|| FUN.emsg('Utworzenie pliku nie powiodło się.'@);
   return(0)
?};
__EXPORT.for_each(
   "  _sep:=';';
      _wiersz:='';
      _wiersz+=__EXPORT.IDP+_sep;
      _wiersz+=form(__EXPORT.NRF)+_sep;
      _wiersz+=form(__EXPORT.IMIE)+_sep;
      _wiersz+=form(__EXPORT.NAZWISKO)+_sep;
      _wiersz+=form(__EXPORT.B1)+_sep;
      _wiersz+=form(__EXPORT.B3)+_sep;
      _wiersz+=form(__EXPORT.B4)+_sep;
      _wiersz+=form(__EXPORT.B5)+_sep;
      _wiersz+=form(__EXPORT.B6)+_sep;
      _wiersz+=form(__EXPORT.B7)+_sep;
      _wiersz+=form(__EXPORT.B8)+_sep;
      _wiersz+=form(__EXPORT.B9)+_sep;
      _wiersz+=form(__EXPORT.B10)+_sep;
      _wiersz+=form(__EXPORT.C1)+_sep;    'miesięczny wskaźnik wymiaru czasu pracy za październik';
      _wiersz+=form(__EXPORT.C2)+_sep;    'liczba dni roboczych w październiku 2014 dla pracownika';
      _wiersz+=form(__EXPORT.C3)+_sep;    'tygodniowa liczba godzin obowiązkowego pełnego wymiaru czasu pracy';
      _wiersz+=form(__EXPORT.C4)+_sep;    'czas pracy w godzinacg nominalnych';
      _wiersz+=form(__EXPORT.C5)+_sep;    'czas pracy w godzinach nadliczbowych';
      _wiersz+=form(__EXPORT.C6)+_sep;    'czas nieprzepracowany ogółem godziny opłacone (przez zakład pracy lub '
                                          'ze środków ZUS) oraz nieopłacone';
      _wiersz+=form(__EXPORT.C7)+_sep;    'czas nieprzepracowany  w tym opłacony tylko przez zakład pracy';
      _wiersz+=form(__EXPORT.C8)+_sep;    'wynagrodzenie osobowe ogółem brutto';
      _wiersz+=form(__EXPORT.C9)+_sep;    'wynagrodzenie razem';
      _wiersz+=form(__EXPORT.C10)+_sep;   'wynagrodzenie zasadnicze';
      _wiersz+=form(__EXPORT.C11)+_sep;   'dodatki za prace zmianową';
      _wiersz+=form(__EXPORT.C12)+_sep;   'premie regulaminowe';
      _wiersz+=form(__EXPORT.C13)+_sep;   'wynagrodzenie za pracę w godzinach nadliczbowych';
      _wiersz+=form(__EXPORT.D1)+_sep;    'roczny wskaźnik wymiaru czasu pracy za 2014 rok';
      _wiersz+=form(__EXPORT.D2)+_sep;    'liczba dni roboczych w 2014 roku';
      _wiersz+=form(__EXPORT.D3)+_sep;    'roczna liczba godzin obowiązkowego pełnego wymiaru pracy';
      _wiersz+=form(__EXPORT.D4)+_sep;    'czas przepracowany w godzinach nominalnych';
      _wiersz+=form(__EXPORT.D5)+_sep;    'czas przepracowany w godzinach nadliczbowych';
      _wiersz+=form(__EXPORT.D6)+_sep;    'ogółem godziny opłacone';
      _wiersz+=form(__EXPORT.D7)+_sep;    'czas nieprzepracowany opłacony tylko przez zakład pracy';
      _wiersz+=form(__EXPORT.D8)+_sep;    'czas nieprzepracowany w tym przestoje ekonomiczne';
      _wiersz+=form(__EXPORT.D9)+_sep;    'liczba dni urlopu wypoczynkowego wykorzystanych w 2014';
      _wiersz+=form(__EXPORT.D10)+_sep;   'wynagrodzenie osobowe brutto za 2014';
      _wiersz+=form(__EXPORT.D11)+_sep;   'wynagrodzenie razem';
      _wiersz+=form(__EXPORT.D12)+_sep;   'premie regulaminowe';
      _wiersz+=form(__EXPORT.D13)+_sep;   'nagrody i premie uznaniowe';
      _wiersz+=form(__EXPORT.D14)+_sep;   'wynagrodzenie za pracę w godzinach nadliczbowych';
      _wiersz+=form(__EXPORT.D15)+_sep;   'honoraria';
      _wiersz+=form(__EXPORT.D16)+_sep;   'dodatkowe wynagrodzenia roczne dla pracowników jednostek sfery budżetowej '
                                          'za 2014r';
      _wiersz+=form(__EXPORT.D17)+_sep;   'wypłaty z tytułu udziału w zysku lub w nadwyżce bilansowej w spółdzielniach '
                                          'za 2014';
      _wiersz:=maz_utf8(_wiersz);
      fwrite(__file, _wiersz)
   "
);
fclose(__file);
{? _inTerm || dlg_save(_pth+exec('sep','#file',2)+'z-12.csv',0,'z-12.csv') ?};
1


\gus_z12_spr_nie_2014
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Sprawdza nieobecnosci do kryterium sprawozdania Z-12 pola A2
::   WE: _a - data poczatkowa
::       _b - data koncowa
::       _c - rodzaj pola do sprawdzenia A2
::   WY: 0 nie jest pobierany do sprawozdania
::  OLD: \spr_nie_2014/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_c')<>type_of('') || _c:='A2' ?};
_wynik:=1;
_mc_pocz:=_a; _mc_konie:=_b;
_ildr:=0;
_url10:=0; _dni2:=0;
_licz10:=0; _ldni2:=0;
_suma:=0;
P_INFO.cntx_psh();
P_INFO.index('OD');
P_INFO.prefix(exec('ref_firma','ustawienia'),P.OSOBA);
{? P_INFO.find_le(_mc_konie)
|| {? P_INFO.PREM().KOD='1'
   || P_INFO.cntx_pop();
      return(0)
   ?}
?};
P_INFO.cntx_pop();
::ustalenie dat calego roku do analiz sprawdzenia czy byl 3 miesieczny urlop bezplatny lub wychowawczy
_dalej:=1;
_pocz:=date(_mc_pocz~1,1,1);
_koniec:=date(_mc_pocz~1,12,0);
N.cntx_psh();
N.index('NIPRACNB');
::sprawdzenie w roku czy byl 3 miesieczny urlop bezplatny lub wychowawczy
{! _ind:=1..2
|! {? _dalej
   || {? var_pres('_rub')>100 || obj_del(_rub) ?};
      _rub:={? _ind=1 || __RUB.sys_rub(133) || __RUB.sys_rub(112) ?};
      {? _rub.first()
      || {!
         |? N.prefix('N',P.ref,_rub.RN);
            {? N.find_le(_koniec) & N.OD<=_koniec & N.DO>=_pocz
            || {? N.DO>_koniec || _do:=_koniec || _do:=N.DO ?};
               {? N.OD<_pocz || _od:=_pocz || _od:=N.OD ?};
               __KAL.rdat(_od,_do);
               _n_od:=N.OD; _n_do:=_do;
               {? __KAL.year*12+__KAL.month>=3
               || _wynik:=0; _dalej:=0
               ?};
               {? _wynik & _dalej
               || {!
                  |? {? N.prev() & N.DO>=_pocz & _dalej
                     || {? N.DO>_koniec || _do:=_koniec || _do:=N.DO ?};
                        {? N.OD<_pocz || _od:=_pocz || _od:=N.OD ?};
                        {? N.DO=(_n_od-1)
                        || __KAL.rdat(_od,_n_do)
                        || __KAL.rdat(_od,_do);
                           _n_do:=_do
                        ?};
                        _n_od:=N.OD;
                        {? __KAL.year*12+__KAL.month>=3
                        || _wynik:=0; _dalej:=0
                        ?};
                        _dalej
                     ?}
                  !}
               ?}
            ?};
            _rub.next()
         !}
      ?}
   ?}
!};
:: sprawdzenie w biezacym okresie sprawozdawczym-pazdziernik
{? ~_wynik
|| N.cntx_pop();
   return(_wynik)
?};
::sprawdzenie w roku czy na sw. rehab.
{? var_pres('_rub')>100 || obj_del(_rub) ?};
_rub:=__RUB.sys_rub(1222,_koniec);
{? _rub.first
|| {!
   |? N.prefix('N',P.ref(),_rub.RN);
      {? N.find_le(_koniec) & N.OD<=_koniec & N.DO>=_pocz
      || _wynik:=0
      ?};
      _rub.next() & _wynik
   !}
?};
obj_del(_rub);
{? ~_wynik
|| N.cntx_pop();
   return(_wynik)
?};
N.index('NIEOBECN');
N.prefix('N',P.ref());
{? N.last()
|| {!
   |? _url10:=0; _dni2:=0;
      {? (N.OD<=_mc_konie & N.DO>=_mc_pocz)
         & {? _c='A2'
           || {? __RUB.sys_attr(N.NB,111,_mc_konie) | __RUB.sys_attr(N.NB,121,_mc_konie)
              || _url10:=1
              |? __RUB.sys_attr(N.NB,112,_mc_konie) | __RUB.sys_attr(N.NB,12271,_mc_konie)
                 | __RUB.sys_attr(N.NB,122721,_mc_konie) | __RUB.sys_attr(N.NB,12273,_mc_konie)
                 | __RUB.sys_attr(N.NB,122741,_mc_konie)
                 | __RUB.sys_attr(N.NB,126,_mc_konie) | __RUB.sys_attr(N.NB,1225,_mc_konie)
                 | __RUB.sys_attr(N.NB,1321,_mc_konie)
                 | __RUB.sys_attr(N.NB,133,_mc_konie) | __RUB.sys_attr(N.NB,1323,_mc_konie)
              || _dni2:=1
              ?}
           || __RUB.sys_attr(N.NB,1222,_mc_konie) & N.KDSW()<>'321'
           ?}
      || {? N.OD>_mc_pocz
         || _od:=N.OD
         || _od:=_mc_pocz
         ?};
         {? N.DO>_mc_konie
         || _do:=_mc_konie
         || _do:=N.DO
         ?};
         {? _do>=_od
         || {? _od=N.OD & _do=N.DO
            || {? _url10=1
               || _licz10+=N.NR;
                  _suma+=N.NR;
                  {? _licz10>10 || _wynik:=0 ?}
               |? _dni2=1
               || _ldni2+=N.NR;
                  _suma+=N.NR;
                  {? _ldni2>2 || _wynik:=0 ?}
               ?}
            || _ildr:=__KAL.w_days(_od,_do);
               {? _url10=1
               || _licz10+=_ildr;
                  _suma+=_ildr;
                  {? _licz10>10 || _wynik:=0 ?}
               |? _dni2=1
               || _ldni2+=N.NR;
                  _suma+=_ildr;
                  {? _ldni2>2 || _wynik:=0 ?}
               ?}
            ?}
         ?}
      ?};
      N.prev() & N.DO>=_mc_pocz & _wynik
   !}
?};
N.cntx_pop();
{? _suma>=12 || _wynik:=0 ?};
_wynik


\gus_z12_HN_read
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [12.41]
:: OPIS: Wyliczenie nieobecnosci z Przebiegu zatrudnienia
::   WE: Wymagane zmienne globalne dt. okresu
::       _a - 1 - w dniach, 0 - w godzinach
::       _b - 1-12 - numer miesiaca/ 0 - caly rok
::       _c - INTEGER - maksymalna liczba obliczanych dni (nie wiecej niz) - (0 - brak ograniczen)
::   WY: ilosc [real]
::  OLD: \HN_read/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~(var_pres('__NIEOB')>=100) || return(0) ?};
_wdniach:={? var_pres('_a')=type_of(0)
          || {? _a<>1 || 0 || 1 ?}
          || 0
          ?};
_miesiac:={? var_pres('_b')=type_of(0)
          || {? _b>=1& _b<=12 || _b || 0 ?}
          || 0
          ?};
_maxDni:={? var_pres('_c')=type_of(0)
         || {? _c<=0 || 0 || _c ?}
         || 0
         ?};

_wynG:=_wynD:=0;

__NIEOB.cntx_psh();
__NIEOB.index(__NHdx);
{? _miesiac
|| __NIEOB.prefix(#P.ref,0,_miesiac)
|| __NIEOB.prefix(#P.ref,0)
?};
{? ~(var_pres('__NIEOB')>=100 & __NIEOB.first)
|| __NIEOB.cntx_pop();
   return(0)
?};
{? __NIEOB.first
|| {!
   |? {? _maxDni>0 & _wynD<_maxDni
      || _ild:={? (_wynD+__NIEOB.ILDR)>=_maxDni
               || _maxDni-_wynD
               || __NIEOB.ILDR
               ?};
         _wynD+=_ild;
         _wynG+={? _ild>0 || (__NIEOB.ILG/__NIEOB.ILDR)*_ild || 0 ?}
      || _wynD+=__NIEOB.ILDR;
         _wynG+=__NIEOB.ILG
      ?};
      __NIEOB.next
   !}
?};
__NIEOB.cntx_pop;
{? _wdniach || _wynD || _wynG ?}


\gus_z02_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Formula startowa wywolywana z menu Kadry > Wydruki > sprawozdania GUS
::       (tu istnieje mozliwosc zmiany sposobu wywolywania bez modyfikacji definicji systemu).
::  OLD: \start/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('no_limit','schemat','PKD')
|| {? FUN.ask(
         'Generowanie danych do sprawozdania GUS Z-02.'@+'\n'
         'Operacja może być czasochłonna.'@+'\n'
         'Czy kontynuować?'@
      )
   || exec('gus_z02_clear_all','!pkd_roz_zsst');
      {? exec('gus_z02_stale','!pkd_roz_zsst')
      || exec('gus_z02_start_z02','!pkd_roz_zsst')
      || FUN.info('Anulowano wykonanie sprawozdania Z-02.'@)
      ?};
      exec('gus_z02_clear_all','!pkd_roz_zsst')
   ?}
|| FUN.info('Brak uprawnień do uruchomienia sprawozdania Z-02.'@);
   return(0)
?};
::ustawienie odpowiednich stalych systemu po wykonaniu funkcji
exec('stalesys','#stalesys');
1


\gus_z02_clear_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Czysciciel globalny.
::  OLD: \clear_all/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__Rspr','__regon','__pkd','__email','__VIEW','__ZATR','__DZIAL3','__Przetw','__tab');
VAR_DEL.delete('__LS','__R','__RUBO','__PREM');
1


\gus_z02_stale
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Pobranie wartosci stalych systemu.
::  OLD: \stale/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
_TPAR:=tab_tmp(1,'ROK','INTEGER','Rok'@);
_we:=_TPAR.mk_edit('Sprawozdanie GUS Z-02'@,,'#gus_z_02');
_TPAR.win_esep(_we,'Parametry'@);
_TPAR.win_efld(_we,,'ROK',,,5,,,,,'Rok sprawozdania'@);
_TPAR.win_edit(_we);
_TPAR.efld_opt(_we,'mark=1',,'ROK');
exec('ok_esc','#window',_TPAR,_we);
params_set('TPAR',_TPAR);
_TPAR.ROK:=(date()~1)-1;
{? _TPAR.edit("__CHK.record(params_get().TPAR)")
|| __Rspr:=_TPAR.ROK
|| return(0)
?};
:: Wszystkie dane o firmie wg stanu na ostatni dzien roku sprawozdawczego
exec('czytaj','#stalesys',date(__Rspr,12,0),KST);
__regon:=form(KST.REG);                                     'REGON jednostki sprawozdawczej (firmy)';
__pkd:=form(KST.PKD);                                       'Symbol rodzaju podstawowej dzialalnosci wg PKD 2004';
__email:=form(KST.EMAIL);                                   'e-mail firmowy';
:: wciecia
__tab:="5*' '";
1


\gus_z02_start_z02
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Wywolanie wlasciwe.
::  OLD: \start_z02/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('gus_z02_tab_view_create','!pkd_roz_zsst') & exec('gus_z02_tab_dz3_create','!pkd_roz_zsst')
|| _parZ02:=obj_new('ostLop','ostLoc');
   _parZ02.ostLop:=_parZ02.ostLoc:=0;
   params_set('parZ02',_parZ02);
   {? params_exec('gus_z02_licz_zatrud','!pkd_roz_zsst')
   || params_exec('gus_z02_dzial_1','!pkd_roz_zsst');
      exec('gus_z02_dzial_2','!pkd_roz_zsst');
      exec('gus_z02_dzial_3','!pkd_roz_zsst');
      exec('gus_z02_dzial_4','!pkd_roz_zsst');
      exec('gus_z02_tab_view','!pkd_roz_zsst',__VIEW)
   ?};
   obj_del(_parZ02)
?};
1


\gus_z02_tab_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Wyswietlenie tabelki w oknie utworzonym automatycznie - dla potrzeb kodowania i sprawdzania wynikow
::   WE: _a - uchwyt tabelki
::  OLD: \tab_view/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__Table');
__Table:=_a;
__Table.prefix();
_win:=__Table.mk_sel('Sprawozdanie GUS Z-02'@,,0,'201009271020',,5);
__Table.win_fld(_win,,'KODOP',,,20,,0);
__Table.win_fld(_win,,'OPIS',,,80,,0);
__Table.win_fld(_win,,'WART',,,15,,0);
__Table.win_act(_win,0,'Rekord',,,,"{? __Table.KODOP*'Dział' || '0:0:0,192:192:192' || '0:0:0,255:255:255' ?}");
__Table.fld_fml('WART','DISPLAY_FORMAT',"{? __Table.WART=0 || 'empty=1'  || 'empty=0' ?}");
__Table.win_sel(_win);
{!
|? ~{? ~__Table.select()
   || FUN.ask('%1\n%2'[
         {? ~exec('interm','#system')
         || 'Zebrane informacje nie są przechowywane w programie i po zamknięciu tego okna zostaną porzucone.\n'
            'Dlatego przed zamknięciem okna zaleca się ich wydrukowanie z wykorzystaniem mechanizmu autoraportów.'@
         || 'Zebrane informacje nie są przechowywane w programie i po zamknięciu tego okna zostaną porzucone.\n'
            'Dlatego przed zamknięciem okna zaleca się ich zapamiętanie w pliku programu zewnętrznego.'@
         ?},
         'Czy na pewno zamknąć okno?'@
      ])
   || 1
   ?}
!};
VAR_DEL.delete('__Table')


\gus_z02_tab_view_create
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Utworzenie tabeli tymczasowej z wynikami do prezentacji
::  OLD: \tab_view_create/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
__VIEW:=tab_tmp(2,'KOD','STRING[10]','Kod pola',
                  'KODOP','STRING[40]','Pole formularza',
                  'OPIS','STRING[200]','Opis pola',
                  'WART','REAL','Wartość'
                  );
{? var_pres('__VIEW')>100
|| _ndx_ex:=__VIEW.ndx_tmp('Domyślny',0,'KOD',,,'KOD',,,'OPIS',,);
   __VIEW.index(_ndx_ex)
|| FUN.emsg(
      'Utworzenie tabeli do prezentacji informacji zakończone niepowodzeniem.'@+'\n'+
      'Działanie funkcji zostanie przerwane.'@
   );
   return(0)
?};
_add:="__VIEW.blank();
       __VIEW.KOD:=_a;
       __VIEW.KODOP:=_b;
       __VIEW.OPIS:=_c;
       __VIEW.add()
      ";
_add('1','Dział 1','Informacje o jednostce');
_add('2','Dział 2','Zatrudnienie (w osobach)');
_add('3','Dział 3','Czas pracy (w tys. godz)');
_add('3.1',__tab()+'Kolumna 1','Pełnozatrudnieni');
_add('3.2',__tab()+'Kolumna 2','Niepełnozatrudnieni');
_add('4','Dział 4','Składniki kosztu pracy (brutto w tys. zł)');
1


\gus_z02_tab_dz3_create
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Utworzenie tabeli tymczasowej z godzinami dla dzialu 3
::  OLD: \tab_dz3_create/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
__DZIAL3:=tab_tmp(1,'LP','INTEGER','Wyszczególnienie',
                    'CALY','REAL','Pełnozatrudnieni',
                    'CZESC','REAL','Niepełnozatrudnieni',
                    'UCZEN','REAL','Uczniowie'
                  );
{? var_pres('__DZIAL3')>100
|| _ndx_ex:=__DZIAL3.ndx_tmp('Domyślny',0,'LP',,);
   __DZIAL3.index(_ndx_ex);
   {! _rub:=1..4
   |! __DZIAL3.blank();
      __DZIAL3.LP:=_rub;
      __DZIAL3.add()
   !};
   1
|| FUN.emsg(
      'Utworzenie tabeli do przetworzenia informacji zakończone niepowodzeniem.'@+'\n'+
      'Działanie funkcji zostanie przerwane.'@
   );
   0
?}


\gus_z02_dzial_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Zebranie danych dla dzialu 1 - Informacje o jednostce
::       (Liczba osob pracujacych w osobach - stan w ostatnim dniu roku sprawozdawczego)
::       UWAGA: zlicza sie osoby, jesli dana osoba zatrudniona jest kilka razy liczona jest tylko raz
::  OLD: \dzial_1/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
_pole:='1.1';
__VIEW.prefix(_pole,_pole);
__ZATR.prefix();
{? ~__VIEW.first
|| __VIEW.blank();
   __VIEW.KOD:='1.1';
   __VIEW.KODOP:='     - pole 1';
   __VIEW.OPIS:='Liczba osób pracujących w osobach na dzień '+date(__Rspr,12,0)$1;
   _parZ02:=params_get(1).parZ02;
   __VIEW.WART:=_parZ02.ostLop+_parZ02.ostLoc;
   __VIEW.add()
?};
1


\gus_z02_dzial_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Zebranie danych dla dzialu 2 - Zatrudnienie
::  OLD: \dzial_2/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
__ZATR.prefix();
_przec:=sql('select sum(:_a.LOP) as "LOP",'+
                  ' sum(:_a.LEP) as "LEP",'+
                  ' sum(:_a.LOC) as "LOC",'+
                  ' sum(:_a.LEC) as "LEC",'+
                  ' sum(:_a.LONP) as "LONP",'+
                  ' sum(:_a.LENP) as "LENP",'+
                  ' sum(:_a.LONC) as "LONC",'+
                  ' sum(:_a.LENC) as "LENC"'+
                  ' from :_a',__ZATR);
{? _przec.first
|| _size:=__ZATR.size;
   _przec.LOP:=(_przec.LOP-_przec.LONP)/_size;
   _przec.LEP:=(_przec.LEP-_przec.LENP)/_size;
   _przec.LOC:=(_przec.LOC-_przec.LONC)/_size;
   _przec.LEC:=(_przec.LEC-_przec.LENC)/_size;
   _przec.put()
?};
_pole:='2.1';
__VIEW.prefix(_pole,_pole);
{? ~__VIEW.first
|| __VIEW.blank();
   __VIEW.KOD:=_pole;
   __VIEW.KODOP:=__tab()+'- pole 1';
   __VIEW.OPIS:='Przeciętna liczba pełnozatrudnionych';
   __VIEW.WART:=_przec.LOP$1;
   __VIEW.add()
?};
_pole:='2.2.1';
__VIEW.prefix(_pole,_pole);
{? ~__VIEW.first
|| __VIEW.blank();
   __VIEW.KOD:=_pole;
   __VIEW.KODOP:=__tab()+'- pole 2.1';
   __VIEW.OPIS:='Przeciętna liczba niepełnozatrudnionych w osobach';
   __VIEW.WART:=_przec.LOC$1;
   __VIEW.add()
?};
_pole:='2.2.2';
__VIEW.prefix(_pole,_pole);
{? ~__VIEW.first
|| __VIEW.blank();
   __VIEW.KOD:=_pole;
   __VIEW.KODOP:=__tab()+'- pole 2.2';
   __VIEW.OPIS:='Przeciętna liczba niepełnozatrudnionych w etatach';
   __VIEW.WART:=_przec.LEC$1;
   __VIEW.add()
?};
1


\gus_z02_dzial_3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Zebranie danych dla dzialu 3 - czas pracy
::  OLD: \dzial_3/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
__DZIAL3.prefix();
_liczPZ:=_liczNZ:=0;
{? __DZIAL3.last
|| {!
   |? {? __DZIAL3.LP<>1
      || __DZIAL3.CALY:=__DZIAL3.CALY/1000$1;
         __DZIAL3.CZESC:=__DZIAL3.CZESC/1000$1;
         _liczPZ+=__DZIAL3.CALY;
         _liczNZ+=__DZIAL3.CZESC
      || __DZIAL3.CALY:=_liczPZ$1;
         __DZIAL3.CZESC:=_liczNZ$1
      ?};
      __DZIAL3.put();
      _opis:={? __DZIAL3.LP=1
             || 'Ogółem liczba godzin opłaconych'
             |? __DZIAL3.LP=2
             || 'Godziny przepr. w czasie normalnym'
             |? __DZIAL3.LP=3
             || 'Godziny przepr. w czasie nadliczbowym'
             |? __DZIAL3.LP=4
             || 'Godziny nieprzepracowane'
             || ''
             ?};
      {! _kolu:=1..2
      |! _pole:='3.'+$_kolu+'.'+$__DZIAL3.LP;
         __VIEW.prefix(_pole,_pole);
         {? ~__VIEW.first
         || __VIEW.blank();
            __VIEW.KOD:=_pole;
            __VIEW.KODOP:=__tab()+__tab()+'- wiersz '+$__DZIAL3.LP;
            __VIEW.OPIS:=_opis;
            __VIEW.WART:=({? _kolu=1 || __DZIAL3.CALY || __DZIAL3.CZESC ?});
            __VIEW.add()
         ?}
      !};
      __DZIAL3.prev
   !}
?};
1


\gus_z02_dzial_4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Zebranie danych dla dzialu 4
::  OLD: \dzial_4/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------

_ndxOld:=__LS.index('?');
_ndx:=__LS.ndx_tmp(,1,'REF',,,'KOM',,,'KOM',,);
__LS.index(_ndx);
__LS.prefix(0);
{? __LS.first
|| {!
   |? _pole:='4.'+__LS.KOM;
      __VIEW.prefix(_pole,_pole);
      {? ~__VIEW.first
      || __VIEW.blank();
         __VIEW.KOD:=_pole;
         __VIEW.KODOP:=__tab()+'wiersz '+__LS.KOM;
         __VIEW.OPIS:=__LS.OPIS;
         __VIEW.WART:=__LS.WAR;
         __VIEW.add()
      ?};
      __LS.next
   !}
?};
__LS.index(_ndxOld);
1


\gus_z02_licz_zatrud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Zebranie danych o zatrudnieniu w roku w poszczegolnych dniach i godzinach przepracowanych
::  OLD: \licz_zatrud/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
__Przetw:=tab_tmp(2,'HP','STRING[1]','H czy P lub O'
                   ,'REF','INTEGER','Reference H lub P lub O');
__ZATR:=tab_tmp(3,'DATA','DATE','Data',
                  'LOP','INTEGER','L.os. pełnozatrudnionych',
                  'LOC','INTEGER','L.os. niepełnoetatowców',
                  'LEP','REAL','L.etat. pełnozatrudnionych',
                  'LEC','REAL','L.etat. niepełnoetatowców',
                  'LONP','INTEGER','L. nieob. os. pełnozatrudnionych',
                  'LONC','INTEGER','L. nieob. os. niepełnoetatowców',
                  'LENP','REAL','L.etat. nieob. pełnozatrudnionych',
                  'LENC','REAL','L.etat. nieob. niepełnoetatowców');

{? var_pres('__ZATR')>100
|| _ndx_ex:=__ZATR.ndx_tmp('Domyślny',0,'DATA',,);
   __ZATR.index(_ndx_ex);
   1
|| FUN.emsg(
      'Utworzenie tymczasowej tabeli do przetwarzania informacji zakończone niepowodzeniem.'@+'\n'+
      'Działanie funkcji zostanie przerwane.'
   );
   return(0)
?};

LS.cntx_psh();

O.cntx_psh();
O.index('LISTYPLA');
O.prefix(exec('ref_firma','ustawienia'),__F_ZATR.O,__Rspr);

OSOBA.cntx_psh();
OSOBA.prefix();

P.cntx_psh();
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P);

H.cntx_psh();
H.index('_HISTOSD');

N.cntx_psh();
N.index('NIEOBECN');

G.cntx_psh();
G.use('godz'+$__Rspr);
G.index('PRRD');

_ildr:=date(__Rspr,12,0)-date(__Rspr,1,1);
_ilos:=OSOBA.size();
_Psize:=_ildr*_ilos;
_Plicz:=0;
_dalej:=FUN.prg_start(_Psize+(P.size()*O.size())+_ilos,,1000000);

_obecn:=
   "  _data:=_a;
      _obecn:=1;
      __DZIAL3.cntx_psh();
      N.prefix('N',H.P);
      {? N.find_le(_data) & _data<=N.DO
      || _obecn:={? _b || 1 || 0 ?};
:           Kazda nieobecnosc powinna zostac wyjeta z godzin przepracowanych w czasie normalnym.
         __DZIAL3.prefix(2);
         {? __DZIAL3.first()
         || {? H.RWY=1
            || __DZIAL3.CALY-={? N.NK>0 || N.NG/N.NK || 0 ?}
            || __DZIAL3.CZESC-={? N.NK>0 || N.NG/N.NK || 0 ?}
            ?};
            __DZIAL3.put()
         ?};
:           W wierszu 4 prezentujemy nieobecności opłacone ze środkow jednostki.
         {? __RUB.sys_attr(N.NB,161,date(_data~1,12,0))
         || __DZIAL3.prefix(4);
            {? __DZIAL3.first()
            || {? H.RWY=1
               || __DZIAL3.CALY+={? N.NK>0 || N.NG/N.NK || 0 ?}
               || __DZIAL3.CZESC+={? N.NK>0 || N.NG/N.NK || 0 ?}
               ?};
               __DZIAL3.put()
            ?}
         ?}

      ?};
      __DZIAL3.cntx_pop();
      _obecn
   ";
_nieob:=
   "  _data:=_a;
      _tab_nie:=_b;
      _nieob:=0;
      N.prefix('N',H.P);
      {? N.find_le(_data) & _data<=N.DO & _tab_nie*(','+$N.NB().RN+',')
      || _nieob:=1
      ?};
      _nieob
   ";

_nieob_3m:=
   "  _data:=_a;
      _tab_nie:=_b;
      _zwol:=0;
      _dalej:=1;
      N.prefix('N',H.P);
      {? N.find_le(_data) & _data<=N.DO & _tab_nie*(','+$N.NB().RN+',')
      || {!|? __KAL.rdat(N.OD,_data);
              {? __KAL.year*12+__KAL.month>=3
              || _zwol:=1; _dalej:=0
              || _n_od:=N.OD;
                 N.prev & N.DO=(_n_od-1) & _tab_nie*(','+$N.NB().RN+',') & _dalej
              ?}
         !}
      ?};
      _zwol
   ";

{? __Rspr>2019 || exec('gus_z02_rubryki_21','!pkd_roz_zsst') || exec('gus_z02_rubryki','!pkd_roz_zsst') ?};
_tab_rub:=__RUB.sys_rub(63141);
:: Niebecności do odejmowania w dziale 1 - świadczenia rehabilitacyjne
_tab_n1:=','+__RUB.sys_sql(1222)+',';
:: Niebecności do odejmowania w dziale 2
_tab_nie:=','+__RUB.sys_sql(162)+','+__RUB.sys_sql(63211)+',';

:: Zmienne do przechowania policzonych danych z oddelegowanymi na ostatni dzień (dla działu 1)
:: Zostanie przekazana params_set:
_ostLop:=_ostLoc:=0;

{! _mie:=1..12
:: Do grudnia dodajemy 32 dzień, żeby zrobić obliczenia z oddelegowanymi do działu 1:
|! {! _dzien:=1..((date(__Rspr,_mie,0)~3)+{? _mie=12 || 1 || 0 ?})
   |! {? _dzien=32
      || _ostatni:=1
      || _ostatni:=0
      ?};
      _data:=date(__Rspr,_mie,{? _ostatni || 31 || _dzien ?});
      {? ~_ostatni
      || __ZATR.blank();
         __ZATR.DATA:=_data;
         __ZATR.add()
      ?};
      {? OSOBA.first() & _dalej<>0
      || {!
         |? _dalej:=FUN.prg_next();
            _lop:=_loc:=_lex:=0;
            _lonp:=_lonc:=_lenx:=0;

            H.prefix(exec('ref_firma','ustawienia'),OSOBA.ref());
            {? H.last()
            || {!
               |? {? H.P().F_ZATR().KOD='P' & H.OD<=_data & (H.DO=date(0,0,0) | H.DO>=_data) & (_ostatni | H.ODDEL<>'T')
                  || {? _nieob(_data,_tab_nie)
                     || {? _nieob(_data,_tab_n1)
                        || {? H.RWY=1
                           || _lop-=1; _lex-=1
                           || _loc-=1; _lex-=H.RWY
                           ?}
                        || {? H.RWY=1
                           || _lonp+=1; _lenx+=1
                           || _lonc+=1; _lenx+=H.RWY
                           ?}
                        ?}
                     ?};
                     __KAL.set_cal({? P.KAL || P.KAL().NAZWA || 'standard' ?},__Rspr);
                      _lex+=H.RWY;
                     {? H.RWY=1 || _lop+=1 || _loc+=1 ?};

                     {? ~_ostatni
                     || __Przetw.prefix('H',#H.ref());
                        {? _obecn(_data,~__Przetw.first())
                        || {? ~__Przetw.first()
                           || __DZIAL3.prefix(2);
                              {? __DZIAL3.first()
                              || _dod:={? H.OD<date(__Rspr,1,1) || date(__Rspr,1,1) || H.OD ?};
                                 _ddo:={? H.DO=date(0,0,0) | H.DO>date(__Rspr,12,0) || date(__Rspr,12,0) || H.DO ?};
                                 {? H.RWY=1
                                 || __DZIAL3.CALY+=__KAL.w_hours(_dod,_ddo)*{? P.KIN='T' || 1 || H.RWY ?}$2
                                 || __DZIAL3.CZESC+=__KAL.w_hours(_dod,_ddo)*{? P.KIN='T' || 1 || H.RWY ?}$2
                                 ?};
                                 __DZIAL3.put()
                              ?};
                              __Przetw.HP:='H';
                              __Przetw.REF:=#H.ref();
                              __Przetw.add();

                              __Przetw.prefix('O',#OSOBA.ref());
                              {? ~__Przetw.first()
                              || __Przetw.HP:='O';
                                 __Przetw.REF:=#OSOBA.ref();
                                 __Przetw.add()
                              ?};
                              __Przetw.prefix('P',#H.P);
                              __DZIAL3.prefix(3);
                              {? ~__Przetw.first() & __DZIAL3.first()
                              || {? _tab_rub.first()
                                 || {!
                                    |? G.prefix(H.P,'G',_tab_rub.RN);
                                       {? G.first()
                                       || {!
                                          |? {? H.RWY=1
                                             || __DZIAL3.CALY+=G.G
                                             || __DZIAL3.CZESC+=G.G
                                             ?};
                                             G.next()
                                          !};
                                          __DZIAL3.put()
                                       ?};
                                       _tab_rub.next()
                                    !}
                                 ?};
                                 __Przetw.HP:='P';
                                 __Przetw.REF:=#H.P;
                                 __Przetw.add()
                              ?}
                           ?}
                        ?}
                     ?};
                     {? _nieob_3m(_data,','+__RUB.sys_sql(114)+','+__RUB.sys_sql(1323)+',')
                     || _lex-=H.WY;
                        {? H.RWY=1 || _lop-=1 || _loc-=1 ?}
                     ?}
                  ?};
                  H.prev() & (H.DO=#0 | H.DO>=date(__Rspr,1,1))
               !}
            ?};
            {? ~_ostatni
            || {? _lop<>0
               || __ZATR.LOP+=_lop;
                  __ZATR.LEP+=_lex
               |? _loc<>0
               || __ZATR.LOC+=_loc;
                  __ZATR.LEC+=_lex
               ?};
               {? _lonp<>0
               || __ZATR.LONP+=_lonp;
                  __ZATR.LENP+=_lenx
               |? _lonc<>0
               || __ZATR.LONC+=_lonc;
                  __ZATR.LENC+=_lenx
               ?};
               {? _lop<>0 | _loc<>0 | _lonp<>0 | _lonc<>0
               || __ZATR.put()
               ?}
            || _ostLop+=_lop;
               _ostLoc+=_loc
            ?};
            OSOBA.next() & _dalej<>0
         !}
      ?}
   !}
!};
_parZ02:=params_get(1).parZ02;
_parZ02.ostLop:=_ostLop;
_parZ02.ostLoc:=_ostLoc;
{? _dalej<>0 || exec('gus_z02_zlicz_koszt','!pkd_roz_zsst') ?};
FUN.prg_stop();

H.cntx_pop();
N.cntx_pop();
G.cntx_pop();
P.cntx_pop();
O.cntx_pop();
LS.cntx_pop();
OSOBA.cntx_pop();
_dalej


\gus_z02_rubryki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Ustalenie rubryk poszczegolnych komorek na podstawie atrybutow
::  OLD: \rubryki/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
exec('gus_rub_tab_create','!pkd_roz_zsst');
_ls_add:=exec('gus_form_ls_add','!pkd_roz_zsst');
:: Sekcja definiowania elementow do pobrania z list plac

_opis:='Wynagrodzenia i świadczenia ogółem (suma wierszy 02, 14-20, 22-25)';
_ls_add(,0,'01','LS','03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25',_opis);

_opis:='Wynagrodzenia osobowe ogółem (suma wierszy od 03 do 13)';
_ls_add(,0,'02','LS','03,04,05,06,07,08,09,10,11,12,13',_opis);

_opis:='Wynagrodzenia zasadnicze';
_ls_add(,0,'03','LS',,_opis,'+45');

_opis:='Dodatki za staż pracy';
_ls_add(,0,'04','LS',,_opis,'+6313101');

_opis:='Premie wypłacane periodycznie';
_ls_add(,0,'05','LS',,_opis,'+6311');

_opis:='Nagrody (bez wypłat z zysku)';
_ls_add(,0,'06','LS',,_opis,'+6312');

_opis:='Wynagrodzenia za pracę w godzinach nadliczbowych';
_ls_add(,0,'07','LS',,_opis,'+6313102');

_opis:='Wynagrodzenia za czas choroby (wypłacone ze środków firmy)';
_ls_add(,0,'08','LS',,_opis,'+41');

_opis:='Wynagrodzenia za czas przestojów';
_ls_add(,0,'09','LS',,_opis,'+6313107');

_opis:='Wynagrodzenia za czas nieprzepracowany (np. za urlop wypoczynkowy, okolicznościowy)';
_ls_add(,0,'10','LS',,_opis,'+6313108');

_opis:='Nagrody jubileuszowe, gratyfikacje';
_ls_add(,0,'11','LS',,_opis,'+6313109');

_opis:='Odprawy emerytalne, rentowe';
_ls_add(,0,'12','LS',,_opis,'+6313110');

_opis:='Pozostałe składniki wynagrodzeń osobowych';
_ls_add(,0,'13','LS',,_opis,'+431','+63131','-6313101','-6313102','-6313105','-6313107','-6313108','-6313109','-6313110');

_opis:='Dodatkowe wynagrodzenia roczne dla prac. jedn. sfery budżetowej';
_ls_add(__Rspr,0,'14','LS',,_opis,'+63131051');
_ls_add(__Rspr+1,0,'14','LS',,_opis,'+63131052');

_opis:='Wynagrodzenia z tytułu umowy zlecenia lub umowy o dzieło';
_ls_add(,0,'15','RHS',,_opis,'+6313201');

_opis:='Honoraria ogółem';
_ls_add(,0,'16','LS',,_opis,'+63133');

_opis:='Wydatki na doskonalenie, kształcenie i przekwalifikowanie kadr';
_ls_add(,0,'17','LS',,_opis,'+6331');

_opis:='Wydatki na delegacje służbowe';
_ls_add(,0,'18','LS',,_opis,'+6332');

_opis:='Obligatoryjne skł. na ubezp. emeryt.,rent. i wyp. opł. przez pracodawcę';
:z umow o prace
_ls_add(,0,'19','LS',,_opis,'+5712','+5731','+575');
:z umow-zlecen
_ls_add(,0,'19','RHS',,_opis,'+5712','+5731','+575');

_opis:='Dobrowolne składki na ubezpieczenia społeczne';
_ls_add(,0,'20','LS',,_opis,'+6333');

_opis:='  w tym składki na pracownicze systemy emerytalno-rentowe';
_ls_add(,0,'21','LS',,_opis,'+63331');

_opis:='Wydatki związane z bezpieczeństwem i higieną pracy';
_ls_add(,0,'22','LS',,_opis,'+6334');

_opis:='Zakładowy fundusz świadczeń socjalnych (odpis w koszty)';
_ls_add(,0,'23','LS',,_opis,'+6335');

_opis:='Świadczenia o charakterze rzeczowym';
_ls_add(,0,'24','LS',,_opis,'+6336');

_opis:='Pozostałe wydatki';
_ls_add(,0,'25','LS',,_opis,'+6337');

_opis:='Wypłaty z tytułu udziału w zysku lub nadw.bil. w spółdzielniach';
_ls_add(,0,'26','LS','27,28,29',_opis);

_opis:='Nagrody i premie z tytułu udziału w zysku do podziału bądź nadw.bil. w spółdzielniach';
_ls_add(__Rspr,0,'27','LS',,_opis,'+63131061');
_ls_add(__Rspr+1,0,'27','LS',,_opis,'+63131062');

_opis:='Wypłaty na rzecz ZFŚS (odpis z zysku)';
_ls_add(,0,'28','LS',,_opis);

_opis:='Inne wypłaty';
_ls_add(,0,'29','LS',,_opis);
1


\gus_z02_rubryki_21
::----------------------------------------------------------------------------------------------------------------------
::  UTW: J9SZAFRA [20.42]
:: OPIS: 20.42_20 Aktualizacja: ustalenie rubryk poszczegolnych komorek na podstawie atrybutow
::  OLD: \rubryki_21/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
exec('gus_rub_tab_create','!pkd_roz_zsst');
_ls_add:=exec('gus_form_ls_add','!pkd_roz_zsst');
:: Sekcja definiowania elementow do pobrania z list plac

_opis:='Wynagrodzenia i świadczenia ogółem (suma wierszy 02+14 do 19+22, od 24 do 27)';
_ls_add(,0,'01','LS','03,04,05,06,07,08,09,10,11,12,13,14,15,16,17,18,19,22,24,25,26,27',_opis);

_opis:='Wynagrodzenia osobowe ogółem (suma wierszy od 03 do 13)';
_ls_add(,0,'02','LS','03,04,05,06,07,08,09,10,11,12,13',_opis);

_opis:='Wynagrodzenia zasadnicze';
_ls_add(,0,'03','LS',,_opis,'+45');

_opis:='Dodatki za staż pracy';
_ls_add(,0,'04','LS',,_opis,'+6313101');

_opis:='Premie wypłacane periodycznie';
_ls_add(,0,'05','LS',,_opis,'+6311');

_opis:='Nagrody (bez wypłat z zysku)';
_ls_add(,0,'06','LS',,_opis,'+6312');

_opis:='Wynagrodzenia za pracę w godzinach nadliczbowych';
_ls_add(,0,'07','LS',,_opis,'+6313102');

_opis:='Wynagrodzenia za czas choroby (wypłacone ze środków firmy)';
_ls_add(,0,'08','LS',,_opis,'+41');

_opis:='Wynagrodzenia za czas przestojów';
_ls_add(,0,'09','LS',,_opis,'+6313107');

_opis:='Wynagrodzenia za czas nieprzepracowany (np. za urlop wypoczynkowy, okolicznościowy)';
_ls_add(,0,'10','LS',,_opis,'+6313108');

_opis:='Nagrody jubileuszowe, gratyfikacje';
_ls_add(,0,'11','LS',,_opis,'+6313109');

_opis:='Odprawy emerytalne, rentowe';
_ls_add(,0,'12','LS',,_opis,'+6313110');

_opis:='Pozostałe składniki wynagrodzeń osobowych';
_ls_add(,0,'13','LS',,_opis,'+431','+63131','-6313101','-6313102','-6313105','-6313107','-6313108','-6313109','-6313110');

_opis:='Dodatkowe wynagrodzenia roczne dla prac. jedn. sfery budżetowej';
_ls_add(__Rspr,0,'14','LS',,_opis,'+63131051');
_ls_add(__Rspr+1,0,'14','LS',,_opis,'+63131052');

_opis:='Wynagrodzenia z tytułu umowy zlecenia lub umowy o dzieło';
_ls_add(,0,'15','RHS',,_opis,'+6313201');

_opis:='Honoraria ogółem';
_ls_add(,0,'16','LS',,_opis,'+63133');

_opis:='Wydatki na doskonalenie, kształcenie i przekwalifikowanie kadr';
_ls_add(,0,'17','LS',,_opis,'+6331');

_opis:='Wydatki na delegacje służbowe';
_ls_add(,0,'18','LS',,_opis,'+6332');

_opis:='Obligatoryjne skł. na ubezp. emeryt.,rent. i wyp. opł. przez pracodawcę';
:z umow o prace
_ls_add(,0,'19','LS',,_opis,'+5712','+5731','+575','+6338');
:z umow-zlecen
_ls_add(,0,'19','RHS',,_opis,'+5712','+5731','+575','+6338');

_opis:='  w tym należne składki na Fundusz Gwarantowanych Świadczeń Pracowniczych';
_ls_add(,0,'20','LS',,_opis,'+5752');
_ls_add(,0,'20','RHS',,_opis,'+5752');

_opis:='  w tym wpłaty na Państwowy Fundusz Rehabilitacji Osób Niepełnosprawnych';
_ls_add(,0,'21','LS',,_opis,'+6338');
_ls_add(,0,'21','RHS',,_opis,'+6338');

_opis:='Dobrowolne składki na ubezpieczenia społeczne';
_ls_add(,0,'22','LS',,_opis,'+6333','+724');
_ls_add(,0,'22','RHS',,_opis,'+6333','+724');

_opis:='  w tym składki na pracownicze systemy emerytalno-rentowe';
_ls_add(,0,'23','LS',,_opis,'+63331');

_opis:='Wydatki związane z bezpieczeństwem i higieną pracy';
_ls_add(,0,'24','LS',,_opis,'+6334');

_opis:='Zakładowy fundusz świadczeń socjalnych (odpis w koszty)';
_ls_add(,0,'25','LS',,_opis,'+6335');

_opis:='Świadczenia o charakterze rzeczowym';
_ls_add(,0,'26','LS',,_opis,'+6336');

_opis:='Pozostałe wydatki';
_ls_add(,0,'27','LS',,_opis,'+6337');

_opis:='Wypłaty z tytułu udziału w zysku lub nadw.bil. w spółdzielniach';
_ls_add(,0,'28','LS','29,30,31',_opis);

_opis:='Nagrody i premie z tytułu udziału w zysku do podziału bądź nadw.bil. w spółdzielniach';
_ls_add(__Rspr,0,'29','LS',,_opis,'+63131061');
_ls_add(__Rspr+1,0,'29','LS',,_opis,'+63131062');

_opis:='Wypłaty na rzecz ZFŚS (odpis z zysku)';
_ls_add(,0,'30','LS',,_opis);

_opis:='Inne wypłaty';
_ls_add(,0,'31','LS',,_opis);
1


\gus_z02_zlicz_koszt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Zliczanie kosztow pracy
::   WE: Wymagane zmienne globalne
::   WY: globalnie dostepne tabele tymczasowe __LS, __RUB oraz __Przetw
::       1 lub 0
::  OLD: \zlicz_koszt/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
__LS.prefix;
{? exec('gus_zlicz_LS','!pkd_roz_zsst',__Przetw,,'P') & exec('gus_zlicz_RHS','!pkd_roz_zsst')
||
:  Dodanie zapisow w tabeli __LS o wynagrodzeniu urlopowym dla pracowników ruyczałtowych
   exec('gus_z02_zlicz_urlop','!pkd_roz_zsst');
:  Dla Z-02, wszystko co jest w tabeli __LS powinno byc prezentowane w tys. zl, z jednym znakiem po przecinku.
:  Przed sumowaniem pol dokonajmy odpowiedniego zaokraglenia.
   __LS.for_each("__LS.WAR:=__LS.WAR/1000$1; __LS.put()");
   exec('gus_sumowanie_LS','!pkd_roz_zsst',1)
|| return(0)
?};
1


\gus_zlicz_OK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MKG [12.41]
:: OPIS: Zebranie wartości ze składników okresowych dla poszczególnych komórek.
::   WE: Wymagane zmienne globalne
::       _a  - tabela z pracownikami do przetworzenia (wymagane pole REF [INTEGER])
::      [_b] - 1- rowniez kazdy pracownik oddzielnie, 0 lub brak tylko suma globalna [INTEGER]
::      [_c] - opcjonalnie prefix dla tabelki przetwarzanych _a [STRING]
::      [_d] - Poczatek okresu sprawozdawczego (rok/miesiac) [domyslnie: __Rspr/1]. Zapisy z okresow wczesniejszych
::      [_e] - trafiaja wlasnie do okresu poczatkowego. Składniki rozpisywane są na wszystkie miesiące z okresu,
::             za który ustalony jest składnik
::      [_f] - Koniec okresu sprawozdawczego (rok/miesiac) [domyslnie: __Rspr/12]. Zapisy z okresow pozniejszych
::      [_g] - trafiaja wlasnie do okresu koncowego.
::   WY: globalnie dostepne tabele tymczasowe __LS, __RUBO, __PREM
::       rozmiar tabeli wynikowej
::  OLD: \zlicz_OK/gus.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>=100 || _Przetw:=_a || return(0) ?};
_single:={? var_pres('_b')=type_of(0) & _b=1 || 1 || 0 ?};
_prefix:={? var_pres('_c')=type_of('') || _c || '' ?};
_rp:={? var_pres('_d')=type_of(0) || _d || __Rspr ?};
_mp:={? var_pres('_e')=type_of(0) & 1<=_e & _e<=12 || _e || 1 ?};
_rk:={? var_pres('_f')=type_of(0) & _rp<=_f || _f |? _rp<=__Rspr || __Rspr || _rp ?};
_mk:={? var_pres('_g')=type_of(0) & 1<=_g & _g<=12 & _rp*12+_mp<=_rk*12+_g || _g || 12 ?};
_dalej:=1;

P.cntx_psh();
P.prefix();
O.cntx_psh();
O.index('LISTYPZN');
O.prefix();
PREM_OKR.cntx_psh();
PREM_OKR.index('PREM_OKR');

{? +_prefix || _Przetw.prefix(_prefix) || _Przetw.prefix() ?};
_ndxRUB:=__RUBO.index('?');
_ndxR:=__RUBO.ndx_tmp(,1,'LSRHS',,,'ROK',,,'MC',,,'RN',,);
__RUBO.index(_ndxR);
_ndxOld:=__LS.index('?');
_ndx:=__LS.ndx_tmp(,1,'REF',,,'KOM',,,'ROK',,,'MC',,);
__LS.index(_ndx);
__LS.prefix();
_indPREM:=__PREM.ndx_tmp(,1,'REF',,,'RN',,,'LT',,);
__PREM.index(_indPREM);
__PREM.prefix();
__RUBO.prefix('LS',);
{? _dalej & _Przetw.first() & __RUBO.first()
|| {!
   |? {? P.seek(_Przetw.REF,P.name())
      || PREM_OKR.prefix(P.ref(),'R');
         {? PREM_OKR.first()
         || {!
            |? {? +PREM_OKR.LT=8
               || {? __PREM.find_key(#P.ref(),PREM_OKR.SKP().R().RN,PREM_OKR.LT)
                  || __PREM.KW+=PREM_OKR.KW_W;
                     __PREM.put()
                  || __PREM.blank();
                     __PREM.REF:=#P.ref();
                     __PREM.LT:=PREM_OKR.LT;
                     __PREM.RN:=PREM_OKR.SKP().R().RN;
                     __PREM.KW:=PREM_OKR.KW_W;
                     __PREM.add()
                  ?}
               ?};
               {? PREM_OKR.O_OD>=date(_rp,_mp,1) & PREM_OKR.O_DO<=date(_rk,_mk,0)
               || _kw:=PREM_OKR.KW_W;_rok:=PREM_OKR.O_OD~1;_mc:=PREM_OKR.O_OD~2;
                  __RUBO.prefix('LS',_rok,_mc,PREM_OKR.SKP().R().RN);
                  {? _kw & __RUBO.first()
                  || {!
                     |? {? _single
:: Aktualizacja danych dla bieżącego pracownika.
                        || _ref:=#P.ref();
                           __LS.prefix(_ref);
                           {? ~__LS.first()
:: Przygotowanie pustych struktur dla pracownika.
                           || __LS.cntx_psh();
                              __LS.prefix(0);
                              {? __LS.first()
                              || {!
                                 |? __LS.cntx_psh();
                                    __LS.prefix();
                                    __LS.REF:=_ref;
                                    __LS.WAR:=0;
                                    __LS.add();
                                    __LS.cntx_pop();
                                    __LS.next()
                                 !}
                              ?};
                              __LS.cntx_pop()
                           ?};
:: Aktualizacja wszystkich miesięcy z okresu od PREM_OKR.O_OD do PREM_OKR.O_DO.
                           _rdo:=_rok;
                           _mdo:=_mc;
                           _suma:=_kw;
                           _ilr:=(PREM_OKR.O_DO~1*12)+(PREM_OKR.O_DO~2)-(PREM_OKR.O_OD~1*12)-(PREM_OKR.O_OD~2)+1;
                           {!
                           |? {? __LS.find_key(__RUBO.KOM,_rdo,_mdo)
                              || __LS.WAR+=__RUBO.MNOZNIK*_kw/_ilr$2;
                                 _suma-=(_kw/_ilr)$2;
                                 __LS.put()
                              ?};
                              _mdo+=1;
                              {? _mdo>12
                              || _mdo:=1;
                                 _rdo+=1
                              ?};
                              date(_rdo,_mdo,0)<=PREM_OKR.O_DO
                           !};
                           {? _suma
                           || __LS.WAR+=_suma;
                              __LS.put()
                           ?};
:: Aktualizacja zbiórowki.
                           {? __LS.find_key(__RUBO.KOM,_rok,0)
                           || __LS.WAR+=__RUBO.MNOZNIK*_kw$2;
                              __LS.put()
                           ?};
                           __LS.prefix()
                        ?};
:: Aktualizacja danych wszystkich pracowników - wszystkich miesięcy z okresu od PREM_OKR.O_OD do PREM_OKR.O_DO.
                        _rdo:=_rok;
                        _mdo:=_mc;
                        _suma:=_kw;
                        _ilr:=(PREM_OKR.O_DO~1*12)+(PREM_OKR.O_DO~2)-(PREM_OKR.O_OD~1*12)-(PREM_OKR.O_OD~2)+1;
                        {!
                        |? {? __LS.find_key(0,__RUBO.KOM,_rdo,_mdo)
                           || __LS.WAR+=__RUBO.MNOZNIK*_kw/_ilr$2;
                              _suma-=(_kw/_ilr)$2;
                              __LS.put()
                           ?};
                           _mdo+=1;
                           {? _mdo>12
                           || _mdo:=1;
                              _rdo+=1
                           ?};
                           date(_rdo,_mdo,0)<=PREM_OKR.O_DO
                        !};
                        {? _suma
                        || __LS.WAR+=_suma;
                           __LS.put()
                        ?};
:: Aktualizacja danych wszystkich pracowników - zbiorówka.
                        {? __LS.find_key(0,__RUBO.KOM,_rok,0)
                        || __LS.WAR+=__RUBO.MNOZNIK*_kw$2;
                           __LS.put()
                        ?};
                        __RUBO.next()
                     !}
                  ?}
               ?};
               PREM_OKR.next()
            !}
         ?}
      ?};
      _dalej & _Przetw.next()
   !}
?};
{? __PREM.first()
|| O.prefix(exec('ref_firma','ustawienia'));
   {!
   |? {? O.find_key(~__PREM.LT) & date(O.R,O.M,1)>=date(_rp,_mp,1) & date(O.R,O.M,0)<=date(_rk,_mk,0)
      || __PREM.ROK:=O.R;
         __PREM.MC:=O.M;
         __PREM.put();
         __PREM.next()
      || __PREM.del()
      ?}
   !}
?};
__RUBO.index(_ndxRUB);
__RUBO.prefix();
__LS.index(_ndxOld);
P.cntx_pop();
O.cntx_pop();
PREM_OKR.cntx_pop();
1


\gus_form_ls_addo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [12.10]
:: OPIS: Formuła tworząca zapisy dla __RUBO
::   WE: _a - rok, domyślnie __Rspr [INTEGER]
::       _b - miesiąc:  0 - caly rok, 1-12 - numer miesiąca [INTEGER]
::       _c - oznaczenie komórki [STRING]
::       _d - zliczanie dla LS czy RHS [STRING]
::       _e - wartość w wyniku sumowania wierszy [STRING] (podajemy oznaczenia sumowanych wierszy, np.: '03,04,10')
::            UWAGA!
::            Wiersze są sumowane w kolejności numerów. Jeżeli zatem wiersz nr 2 zawiera sumę z wiersza nr 3, a wiersz
::            nr 3 jest sumą innych wierszy, to podczas wyliczania wartości wiersza nr 2, wartość wiersza nr 3 jeszcze
::            nie została policzona! Takie odwołanie nie jest błędem, ale nie ma sensu.
::            Dlatego też w wierszach do sumowania powinny być podawane wyłącznie wiersze obliczane na podstawie
::            składników (listy płac) lub sum, ale tylko wierszy z mniejszym numerem.
::       _f - opis pola formularza [STRING]
::       OD 7 w zwyż - atrybuty jako [STRING] pierwszy znak + lub - określa czy atrybut potwierdzający czy wykluczający
::   WY:
::  OLD: \form_ls_add/gus_z12.fml
::----------------------------------------------------------------------------------------------------------------------
"  {? var_pres('_a')<>type_of(0) || _a:=__Rspr ?};
   {? var_pres('_e')<>type_of('') || _e:='' ?};

   _firma:=exec('ref_firma','ustawienia');
   _aktualizacja:=0;

   {? ~__LS.find_key(_c,_d,_a,_b,_e,_f,)
   || __LS.blank(1);
      __LS.ROK:=_a;
      __LS.MC:=_b;
      __LS.KOM:=_c;
      __LS.LSRHS:=_d;
      __LS.SUMA:=_e;
      __LS.OPIS:=_f
   ?};
   {? _aktualizacja | __LS.add()
   || {? __LS.MC=0 || _mp:=1; _mk:=12 || _mp:=_mk:=__LS.MC ?};
      {? ~_aktualizacja & __LS.MC=0
      || {! _mie:=1..12 |! __LS.MC:=_mie; __LS.add() !}
      ?};

      {! _licz:=7.._
      |! {? var_pres('_['+$_licz+']')=type_of('') & +_[_licz]>1 & (1+_[_licz]='+' | 1+_[_licz]='-')
         || _atr:=#(1-_[_licz]);
            {? _atr>0
            || _tab:=__RUB.sys_rub(_atr);
               {? _tab.first()
               || _mnoznik:={? 1+_[_licz]='+' || 1 || -1 ?};
                  {! _mie:=_mp.._mk
                  |? _tab.first()
                  |! {!
                     |? {? PAR_POKR.find_key(_firma,_tab.RN)
                           &
                           __RUBO.find_key(__LS.LSRHS,__LS.ROK,_mie,__LS.KOM,_tab.RN)
                        || __RUBO.MNOZNIK+=_mnoznik;
                           {? __RUBO.MNOZNIK=0 || __RUBO.del() || __RUBO.put() ?}
                        || {? PAR_POKR.find_key(_firma,_tab.RN)
                           || __RUBO.blank();
                              __RUBO.LSRHS:=__LS.LSRHS;
                              __RUBO.ROK:=__LS.ROK;
                              __RUBO.MC:=_mie;
                              __RUBO.KOM:=__LS.KOM;
                              __RUBO.RN:=_tab.RN;
                              __RUBO.MNOZNIK:=_mnoznik;
                              __RUBO.add()
                           ?}
                        ?};
                        _tab.next()
                     !}
                  !}
               ?};
               obj_del(_tab)
            ?}
         ?}
      !}
   ?}
"


\gus_z02_zlicz_urlop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.41]
:: OPIS: Wyliczenie wynagrodzenia urlopowego dla pracownikow z charakterem pracy UMY
::   WE:
::   WY:
::  OLD: \zlicz_urlop/gus_z02.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=sql('
   select distinct P.REFERENCE REF, N.ROK, N.MC
   from N join P join R
   where R.RN in (:_b) and N.ROK=:_a
   order by 1',
   __Rspr, __RUB.sys_sql(111,date(__Rspr,12,0)));

__Przetw.prefix;
H.cntx_psh;
P.cntx_psh();
P.prefix;
H.index('_HISTKOD');
_ndx:=__LS.ndx_tmp(,1,'REF',,,'KOM',,,'ROK',,,'MC',,);
__LS.index(_ndx);
__LS.prefix();
_ls:="
   {? __LS.find_key(0,_a,__Rspr,_d)
   || __LS.WAR+=_c; __LS.put
   || __LS.blank(1);
      __LS.ROK:=__Rspr;
      __LS.MC:=_d;
      __LS.KOM:=_a;
      __LS.LSRHS:='LS';
      __LS.OPIS:=_b;
      __LS.WAR:=_c;
      __LS.REF:=0;
      __LS.add(1)
   ?};
   {? __LS.find_key(0,_a,__Rspr,0)
   || __LS.WAR+=_c; __LS.put
   ?}";

{? _tab.first
|| _tab_ls:=sql('select 0 MC, 0.1 WART from :_a where 1=2',_tab);
   {!
   |? _P_ref:=BIT.sqlint(_tab.REF);
      {? P.seek(_P_ref,)
      || H.prefix(P.ref,'Z');
         {? H.find_le(date(_tab.ROK,_tab.MC,0)) & H.CP().S='UMY'
         || {? var_pres('_tab_pr')>100 || obj_del(_tab_pr) ?};
            _tab_pr:=exec('dane_pracownika','pracownik',_tab.REF,date(_tab.ROK,_tab.MC,1),date(_tab.ROK,_tab.MC,0),,1);

            {? var_pres('_tab_ur')>100 || obj_del(_tab_ur) ?};
            _tab_ur:=sql('
               select sum(DS1) S1, sum(DS2) S2, sum(DS3) S3, 1.1 WART
               from :_a
               where NB in (:_b) and CP=\'UMY\'',
               _tab_pr, __RUB.sys_sql(111,date(__Rspr,12,0)));
            _suma:=_tab_ur.S1+_tab_ur.S2+_tab_ur.S3;
            {? _suma & __Przetw.find_key('P',_P_ref)
            || _tab_ls.WART:=_suma; _tab_ls.MC:=_tab.MC; _tab_ls.add()
            ?}
         ?}
      ?};
      _tab.next
   !};
:: Wprowadzenie wlasciwych danych
   {? _tab_ls.first
   || _tab_wyn:=sql('select MC, sum(WART) WART from :_a group by MC order by 1',_tab_ls);
      {? _tab_wyn.first()
      || {!
         |? _ls('03','Wynagrodzenia zasadnicze',_tab_wyn.WART*-1,_tab_wyn.MC);
            _ls('10','Wynagrodzenia za czas nieprzepracowany (np. za urlop wypoczynkowy, okolicznościowy)',
               _tab_wyn.WART,_tab_wyn.MC);
            _tab_wyn.next
         !}
      ?}
   ?}
?};
H.cntx_pop;
P.cntx_pop()


\gus_z06_f3_kom_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [12.51]
:: OPIS: Formułka na słownik wyboru komórki w Z-06
::   WE: _a - [TABLE] - tabela dla, której uruchamiany jest słownik
::   WY: 0/1
::  OLD: \f3_kom_nr/gus.fml
::----------------------------------------------------------------------------------------------------------------------
_TAB:=_a;

_tab:=exec('gus_z06_bf_f3_kom_nr','!pkd_roz_zsst');

_tab.cntx_psh();
_wer:=_tab.mk_sel('Słownik numerów komórek'@,,,'f3komnr',,,,,'U');
_tab.win_fld(_wer,,'NR_KOM',,,12,,1,'Numer komórki'@,,'Numer'@);
_tab.win_act(_wer,,'Formuła','Wybierz'@@,,'Wybór bieżącego zapisu'@,"sel_exit()",,1);
_tab.win_sel(_wer);
{? _TAB.KOMORKA<>''
|| _tab.find_key(_TAB.KOMORKA)
|| _tab.first()
?};
{? _tab.select(,1,-1)
|| _TAB.KOMORKA:=_tab.NR_KOM
?};
_tab.cntx_pop();
~~


\gus_z06_aekom_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [12.51]
:: OPIS: Formuła na po edycji wartości komórka.
::   WE: _a [TABLE] Tabela z danymi do modyfikacji.
::   WY:
::  OLD: \aekom/gus.fml
::----------------------------------------------------------------------------------------------------------------------
_TAB:=_a;
_slo:=exec('gus_z06_bf_f3_kom_nr','!pkd_roz_zsst');

_wart:=_TAB.KOMORKA;
{? |_wart='' | _slo.find_key(_wart,)
|| _result:=1
|| FUN.emsg('Brak wartości w słowniku.'@);
   _result:=0
?};
_result


\gus_z06_bf_f3_kom_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [12.51]
:: OPIS: Bufor słownika wyboru komórki Z-06
::   WE:
::   WY:
::  OLD: \bf_f3_kom_nr/gus.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,'NR_KOM','STRING[2]','Numer komórki'@);
_tab.NR_KOM:='14'; _tab.add();
_tab.NR_KOM:='15'; _tab.add();
_tab.NR_KOM:='16'; _tab.add();
_tab.NR_KOM:='17'; _tab.add();
_tab.NR_KOM:='18'; _tab.add();
_tab.NR_KOM:='19'; _tab.add();
_tab.NR_KOM:='21'; _tab.add();
return(_tab)


\spr_dg1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [23.25]
:: OPIS: Formuła zbierająca dane dla raportu GUS DG-1. Wywołanie w p_gus_dg1.rpm
::   WE: [_a] [NUMBER] - Rok.
::       [_b] [NUMBER] - Miesiąc.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_rok:={? var_pres('_a')=type_of(0) || _a || date()~1 ?};
_msc:={? var_pres('_b')=type_of(0) || _b || date()~2 ?};

_pocz:=date(_rok,1,1);
_kon:=date(_rok,_msc,0);

_ind:=0;

_prac:=tab_tmp(3,
   'REF','STRING[16]','$P.ref()',
   'ROK','INTEGER','Rok'@,
   'MIESIAC','INTEGER','Miesiąc'@,
   'DK','INTEGER','Dni kalendarzowe'@
);
_pracmie:=tab_tmp(3,
   'REF','STRING[16]','$P.ref()',
   'ROK','INTEGER','Rok'@,
   'MIESIAC','INTEGER','Miesiąc'@,
   'DK','INTEGER','Dni kalendarzowe'@
);


FUN.prg_start(5);

::Dzial 1 --------------------------------------------------------------------------------------------------------------
par[3].blank();
par[3].DZIAL:=1;
par[3].TYT:='Podstawowe dane o działalności gospodarczej';
par[3].KOL1:='W miesiącu sprawozdawczym';
par[3].KOL2:='Od początku roku do końca miesiąca sprawozdawczego';
par[3].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='06';
par[2].NAZWA:='Pracujący w osobach, dla których jednostka sprawozdawcza jest głównym ' +
              'miejscem pracy, stan w ostatnim dniu miesiąca';
par[2].WAR1:=exec('pracuje_miesiac','sik_for',_rok,_msc,'T','A,B,C',,,634151,634152,634153);
par[2].WAR2:=-1;
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='07';
par[2].NAZWA:='Przeciętna liczba zatrudnionych';
par[2].WAR1:=exec('zatrdzien','stat',date(_rok,_msc,1),_kon,0,0,1,_pracmie,0,'DG1')$2;
par[2].WAR2:=exec('zatrdzien','stat',_pocz,_kon,0,0,1,_prac,0,'DG1')$2;
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='08';
par[2].NAZWA:='Czas faktycznie przepracowany w tys. godzin za okres od początku roku ' +
'(wypełnić za miesiąc: III, VI, IX, XII)';
par[2].WAR1:=-1;
par[2].WAR2:=(exec('czasumy','stat',,_pocz,_kon,_prac,634121)
            -(exec('nieprzeprac','stat',0,_pocz,_kon,,_prac)-exec('nieprzeprac','stat',1,_pocz,_kon,,_prac)))
            +exec('czasprzf_param','stat',,_pocz,_kon,_prac,634122);
par[2].WAR2:=par[2].WAR2$2;
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='09';
par[2].NAZWA:='Wynagrodzenia brutto osób wykazanych w wierszu 07 w tys. zł';
par[2].WAR1:=exec('sum_skl_bodd','oddelegowanie',_pracmie,__RUB.sys_sql(63413),0,__RUB.sys_sql(63416))/1000$2;
par[2].WAR2:=exec('sum_skl_bodd','oddelegowanie',_prac,__RUB.sys_sql(63413),0,__RUB.sys_sql(63416))/1000$2;
FUN.prg_next();
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='---';
par[2].add();

par[2].blank();
par[2].DZIAL:=par[3].DZIAL;
par[2].IND:=(_ind+=1);
par[2].KOD:='11';
par[2].NAZWA:='Składki na ubezpieczenia emerytalne, rentowe i chorobowe opłacane przez ubezpieczonych za okres' +
' od początku roku (wypełnić za miesiąc: III, VI, IX, XII)';
par[2].WAR1:=-1;
par[2].WAR2:=exec('sum_skl_bodd','oddelegowanie',_prac,__RUB.sys_sql(63414),0)/1000$2;
FUN.prg_next();
par[2].add();

FUN.prg_stop()


:Sign Version 2.0 jowisz:1045 2024/01/22 13:34:26 cbaaef63fd9a6fb1e58d3f290784f61a37d41623b5d101db7a2dfd9d5e09facc792e3a514f4f61cf85b86cb1ad25e483a28ae1217c0ed45df5cb49e1396550e0fce4b92a2adf22d203e91c7ca80c4a64f1f2315b35c28fb98fb3ba4671747e348eef22160446eaf67d74bb169d137940e9f4e8466061788b3c6ee6d26fb74fb2
