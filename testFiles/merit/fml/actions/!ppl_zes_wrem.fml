:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ppl_zes_wrem.fml
:: Utworzony: 19.05.2016
:: Autor: areKc
::======================================================================================================================
:: Zawartość: Formuły czynności PPL_ZES_WREM - Obliczenie i wydruk rezerw emerytalnych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Obliczenie i wydruk rezerw emerytalnych - główna formuła czynności.
::   WY:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::
{? ~exec('no_limit','schemat','PPL')
|| return(0)
?};

SEEK.O:=__PARSES.getVal('ListaPłac').REF;
SEEK.O();
{? SEEK.O<>null
|| FUNKCJE.OTWOLIST();
   ODP_EME.index('ODP_EME');
   ODP_EME.win_sel('ODP_EMEW');
   ODP_EME.win_edit('ODP_EMER');
   ODP_EME.hdr_sel(' (lista płac: '+(~O.LT)+')');
   ODP_EME.select()
|| FUN.info('Nie można przeglądać rezerw emerytalnych, bez wybranej listy płac w parametrach pracy.'@)
?}


\oblicz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Wykonuje raport dotyczacy odpraw emerytalnych
::  OLD: \oblicz/odprawy.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('par','__EME');
exec('czytaj','#stalesys',ODP_EME.DATAB,KST,'WEK','WEM');

::sprawdzenie warunków początkowych
{? ODP_EME.KP=null()
|| FUN.info('Nie wybrano metody wyliczenia podstawy do rezerwy emerytalnej.\nObliczenia nie są możliwe.'@);
   return(0)
|? ODP_EME.KP().SYSTEM='N'
|| FUN.info('Wybrano niestandardową metodę wyliczenia podstawy do rezerwy emerytalnej.\nObliczenia nie są możliwe.'@);
   return(0)
|? ODP_EME.KP().KOD='REZ_EKW'
|| {? ~(O.LT*'sum')
   || FUN.info('W celu obliczenia rezerwy emerytalnej należy wybrać listę płac typu SUM na %1.'@[ODP_EME.DATAW $ 8]);
      return(0)
   |? ~(O.M=ODP_EME.DATAW~2) | ~(O.LT*($(ODP_EME.DATAW~1)+2))
   || FUN.info('Data badania nie jest zgodna z rokiem i miesiącem wybranej listy płac.'@);
      return(0)
   ?}
?};

P.cntx_psh();
{? P.f_active() || P.f_clear() ?};
P.f_set(
   'OSOBA(NAZWISKO),OSOBA(PIERWSZE)',
   'join F_ZATR',
   'P.FIRMA=:_a and F_ZATR.KOD=\'P\' and (P.DZA<=to_date(:_b) and (P.DZ<=to_date(:_b) or P.DZ is null))',
   exec('ref_firma','ustawienia'),ODP_EME.DATAW
);
_size:=P.f_size();
_cnt:=0;
{? P.f_first()
|| par:=exec('eme_par','!ppl_zes_wrem');
   {? par.OK
   || __EME:=exec('eme_tab','!ppl_zes_wrem');
      ODP_EME.WR:=0;
      {!
      |? _cnt+=1;
         progress(int(_cnt/_size*100),'Trwa przetwarzanie. Proszę czekać.'@,'Rezerwy emerytalne'@);
         {? exec('eme_1p','!ppl_zes_wrem',__EME,par)
         || ODP_EME.WR+={? par.BO || __EME.ODPISA ?}+__EME.ODPISB
         ?};
         P.f_next()
      !};
      prgs_clr();
      exec('pozycje_rezerwy','!ppl_zes_wrem');
      ODP_EME.put()
   ?}
?};

VAR_DEL.delete('par','__EME');
{? P.f_active() || P.f_clear() ?};
P.cntx_pop()


\drukuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Wykonuje raport dotyczacy odpraw emerytalnych
::  OLD: \oblicz/odprawy.fml
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',ODP_EME.DATAB,KST,'WEK','WEM');
{? ODP_EME.WR
|| rep_exec('ppl_odprawyemerytalne')
|| FUN.emsg('Przed wykonaniem wydruku należy obliczyć wartość rezerwy emerytalnej.'@)
?}


\eme_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Formuła odpowiedzialna za wybrane parametry naliczania odpisu na rezerwę emerytalną. Wykonywana dla bieżącego
::       rekordu tabeli ODP_EME.
::       Dodatkowo ustalana jest wartość współczynnika do ekwiwalentu na dzień ustalania wynagrodzenia (ODP_EME.DATAW).
::   WE:
::   WY: Tablica elementów nazwanych:
::             OK    - Parametry ustawione (pobrane)? [1 - tak/0 - nie]
::             BO    - Pierwszy odpis na rezerwę? [1 - tak/0 - nie]
::             WW    - Procent zakładanego wzrostu wynagrodzenia.
::             KP    - Kwota podstawy liczona wg ekwiwalentu za urlop lub pobierana z bieżącego miesiąca
::                     ze składników wykazanych w przebiegu zatrudnienia [1/0]
::             EKW   - Wartość współczynnika do ekwiwalentu na dzień ustalania wynagrodzenia.
::  OLD: \eme_par/odprawy.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=obj_new('OK','BO','WW','KP','EKW');
{! _lp:=1..obj_len(_par) |! _par[_lp]:=0 !};
_par.OK:=1;
_par.BO:=ODP_EME.BO;
_par.WW:=ODP_EME.WW;
_par.KP:=ODP_EME.KP;
{? _par.OK
|| exec('czytaj','#stalesys',ODP_EME.DATAW,KST,'EKW');
   _par.EKW:=KST.EKW;
   exec('czytaj','#stalesys',date(O.R,O.M,0),KST,'EKW')
?};
_par


\eme_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Formuła tworzy bufor danych na odprawy emerytalne.
::   WE:
::   WY: Uchwyt utworzonej tabeli tymczasowej.
::  OLD: \eme_tab/odprawy.fml
::----------------------------------------------------------------------------------------------------------------------
tab_tmp(1,
   'LP','INTEGER','Lp.'@,
   'IP','INTEGER',MS.name(P,'IP'),
   'NAZWISKO','STRING[%1]' [$MS.fld_len(OSOBA,'NAZWISKO')],MS.name(OSOBA,'NAZWISKO'),
   'PIERWSZE','STRING[%1]' [$MS.fld_len(OSOBA,'PIERWSZE')],MS.name(OSOBA,'PIERWSZE'),
   'DRUGIE','STRING[%1]' [$MS.fld_len(OSOBA,'DRUGIE')],MS.name(OSOBA,'DRUGIE'),
   'PESEL','STRING[%1]' [$MS.fld_len(OSOBA,'PESEL')],MS.name(OSOBA,'PESEL'),
   'PLEC','STRING[1]','Płeć'@,
   'UR_DATA','DATE',MS.name(OSOBA,'UR_DATA'),
   'DZA','DATE',MS.name(P,'DZA'),
   'WEL','INTEGER','Wiek emerytalny - lata'@,
   'WEM','INTEGER','Wiek emerytalny - miesiące'@,
   'DWE','DATE','Data osiągnięcia wieku emerytalnego'@,
   'LA','INTEGER','Lata przepracowane'@,
   'LB','INTEGER','Lata do emerytury'@,
   'WW','REAL','Planowany wzrost wynagrodzenia'@,
   'DYSKONTO','REAL','Stopa dyskontowa'@,
   'PODSTAWA','REAL','Podstawa'@,
   'KWOTA','REAL','Kwota świadczenia emerytalnego'@,
   'P','REAL','Prawdopodobieństwo'@,
   'ODPISA','REAL','Odpis za lata ubiegłe'@,
   'ODPISB','REAL','Odpis za rok bieżący'@
)


\eme_1p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Formuła wylicza wartość odpisu na rezerwę emerytalną dla jednego (bieżącego) pracownika. Formuła korzysta z
::       parametrów zawartych w bieżącym rekordzie tabeli ODP_EME. Wynik jest zapisywany w tabeli tymczasowej
::       o strukturze definiowanej w odprawy.fml\eme_tab, przekazywanej parametrem.
::   WE: _a - Tabela tymczasowa z wynikami obliczeń (uzupełniana przez formułę).
::       _b - Tablica elementów nazwanych z dodatkowymi parametrami:
::             OK    - Parametry ustawione (pobrane)? [1 - tak/0 - nie]
::             BO    - Pierwszy odpis na rezerwę? [1 - tak/0 - nie]
::             WW    - Procent zakładanego wzrostu wynagrodzenia.
::             KP    - Kwota podstawy liczona wg ekwiwalentu za urlop lub pobierana z bieżącego miesiąca
::                     ze składników wykazanych w przebiegu zatrudnienia [1/0]
::             EKW   - Wartość współczynnika do ekwiwalentu na dzień ustalania wynagrodzenia.
::   WY: -1 = Brak lub nieprawidłowy parametr wywołania.
::        0 = Rekord nie został dodany (z różnych przyczyn).
::        1 = Rekord został dodany
::  OLD: \eme_1p/odprawy.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(SYSLOG) || _tab:=_a || return(0) ?};
{? var_pres('_b')=type_of(obj_new(1)) || _par:=_b || return(0) ?};

:: Pomijamy osoby zatrudnione po dacie badania stanu lub zwolnione przed ta data.
{? ODP_EME.DATAB<P.DZA | (P.DZ<>#0 & P.DZ< ODP_EME.DATAB) || return(0) ?};

_tab.blank();
_tab.LP:=1+_tab.size();
_tab.IP:=P.IP;
_tab.NAZWISKO:=P.OSOBA().NAZWISKO;
_tab.PIERWSZE:=OSOBA.PIERWSZE;
_tab.DRUGIE:=OSOBA.DRUGIE;
_tab.PESEL:=OSOBA.PESEL;
_tab.PLEC:=OSOBA.PLEC;
_tab.UR_DATA:=OSOBA.UR_DATA;
_tab.DZA:=P.DZA;

:: Wyliczenie wieku emerytalnego
_wiek:=exec('we','!ppl_zes_wrem',_tab.UR_DATA,_tab.PLEC);
_tab.WEL:=_wiek.lat;
_tab.WEM:=_wiek.mcy;
_tab.DWE:=_wiek.data;

{? _tab.DWE~1<=ODP_EME.DATAB~1
:: Pracownik już powinien być na emeryturze.
|| return(0)
?};

:: Lata przepracowane
_tab.LA:=ODP_EME.DATAB~1-P.DZA~1+1;
:: Lata do przepracowania
_tab.LB:=_tab.DWE~1-ODP_EME.DATAB~1-1;

_tab.WW:=_par.WW;
_tab.DYSKONTO:=ODP_EME.DYSKONTO;

:: Wyliczenie podstawy świadczenia
_podstawa:=0;
{? ODP_EME.KP().KOD='REZ_EKW'
|| _podstawa:=exec('ekwiwalent_ppl','lista_licz','P',,ODP_EME.DATAW)
|| H.cntx_psh();
   H.index('_HISTKOD');
   H.prefix(P.ref(),'Z');
   {? H.find_le(ODP_EME.DATAW) & (H.DO=#0 | ODP_EME.DATAW<=H.DO)
   || _cp:=H.CP().S;
      _hsx:=exec('hsx','lista_licz',ODP_EME.DATAW);
      _podstawa:=_hsx.S1;
      {? 1+_cp='F'
      || _podstawa:=_podstawa*_par.EKW*8*H.WY$2;
         {? H.S2T='P'
         || _hsx.S2:=_hsx.S2*_par.EKW*8*H.WY$2
         ?};
         {? H.S3T='P'
         || _hsx.S3:=_hsx.S3*_par.EKW*8*H.WY$2
         ?}
      ?};
      _podstawa+=_hsx.S2+_hsx.S3;
      obj_del(_hsx); &_hsx
   ?};
   H.cntx_pop()
 ?};
:: Jeżeli są zdefiniowane inne stałe składniki wynagrodzenia, które powinnny zostać uwzglednione w podstawie, to tutaj
:: jest na nie własciwe miejsce.
:: <inne stałe składniki>

:: </inne stałe składniki>

_tab.KWOTA:=_tab.PODSTAWA:=_podstawa;
{? _tab.WW>0 & _tab.LB
:: Przewidywany wzrost wynagrodzeń
|| _tab.KWOTA:=_tab.KWOTA*pow(1+_tab.WW/100,_tab.LB)
?};
:: Jeżeli wysokość odprawy regulowana jest innymi przepisami niż tylko Kodeksem pracy, który ustala wartość świadczenia
:: na poziomie jednomiesięcznego wynagrodzenia, to tutaj jest miejsce na odpowiednie modyfikacje (np. zależne od stażu
:: pracy w chwili przejścia na emeryturę).
:: <wysokość odprawy>

:: </wysokość odprawy>
_tab.KWOTA:=_tab.KWOTA$0;

:: Prawdopodobieństwo pozostawania pracownika w zatrudnieniu
_tab.P:=
   {? _tab.LB<=5 || ODP_EME.GRUPA_1
   |? _tab.LB<=10 || ODP_EME.GRUPA_2
   |? _tab.LB<=15 || ODP_EME.GRUPA_3
   |? _tab.LB<=20 || ODP_EME.GRUPA_4
   || ODP_EME.GRUPA_5
   ?};

:: Zdyskontowana kwota odpisów lat ubiegłych ...
_tab.ODPISA:=_tab.KWOTA*(_tab.LA-1)/(_tab.LA+_tab.LB)*_tab.P/pow(1+_tab.DYSKONTO/100,_tab.LB+1)$2;
:: Odpis za rok bieżący.
_tab.ODPISB:=_tab.KWOTA*_tab.LA/(_tab.LA+_tab.LB)*_tab.P/pow(1+_tab.DYSKONTO/100,_tab.LB)$2-_tab.ODPISA;

_tab.add()


\we
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Formuła, na podstawie daty urodzenia i płci, wyznacza wiek emerytalny - datę przejścia na emeryturę i wymagany
::       wiek - liczba lat i miesięcy.
::       Podstawa prawna:
::          Ustawa z dnia 17 grudnia 1998 r. o emeryturach i rentach z Funduszu Ubezpieczeń Społecznych
::          Art. 24, Art. 27. (Dz.U. 1998 Nr 162 poz. 1118)
::   WE: _a - data urodzenia
::       _b - płec 'K'/'M'
::   WY: Tablica elementów nazwanych:
::          data  - Data osiagnięcia wieku emerytalnego;
::          lat   - Liczba lat wymaganych do osiągniecia wieku emerytalnego
::          mcy   - Liczba miesięcy wymaganych do osiągniecia wieku emerytalnego
::  OLD: \we/odprawy.fml
::----------------------------------------------------------------------------------------------------------------------
_dur:=_a;
_plec:=_b;

_kwartal:="{? _a<=3 || 1 |? _a<=6 || 2 |? _a<=9 || 3 || 4 ?}";

_ret:=obj_new('data','lat','mcy');
_ret.data:=#0;
_ret.lat:=_ret.mcy:=0;

_baza:=obj_new('datab','datak','lat');
{? ODP_EME.DATAB<date(2017,10,1)
|| {? _plec='K'
   || _baza.datab:=date(1953,1,1);
      _baza.datak:=date(1973,9,30);
      _baza.lat:=60
   || _baza.datab:=date(1948,1,1);
      _baza.datak:=date(1953,9,30);
      _baza.lat:=65
   ?};
   {? _dur<_baza.datab
   || _ret.lat:=_baza.lat;
      _ret.mcy:=0
   |? _baza.datak<_dur
   || _ret.lat:=67;
      _ret.mcy:=0
   || _ret.mcy:=1+(_dur~1)*4+_kwartal(_dur~2)-(_baza.datab~1)*4-_kwartal(_baza.datab~2);
      _ret.lat:=_baza.lat+_ret.mcy%12;
      _ret.mcy:=_ret.mcy%*12
   ?}
|| _WEK:={? var_pres('WEK',KST)>0 || KST.WEK || 60 ?};
   _WEM:={? var_pres('WEM',KST)>0 || KST.WEM || 65 ?};
   {? _plec='K'
   || _baza.datab:=date(1949,1,1);
      _baza.datak:=date(ODP_EME.DATAB~1-_WEK,ODP_EME.DATAB~2,ODP_EME.DATAB~3);
      _baza.lat:=_WEK
   || _baza.datab:=date(1949,1,1);
      _baza.datak:=date(ODP_EME.DATAB~1-_WEM,ODP_EME.DATAB~2,ODP_EME.DATAB~3);
      _baza.lat:=_WEM
   ?};
   _ret.lat:=_baza.lat
?};

_dem:=_dur~2+_ret.mcy;
_der:=_dur~1+_ret.lat+_dem%12;
_dem:=_dem%*12;
_ret.data:=date(_der,_dem,1)+_dur~3-1;

_ret


\spr_eme
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Weryfikuje poprawność wypełnienia rekordu
::----------------------------------------------------------------------------------------------------------------------
{? (_chk:=__CHK.record(ODP_EME,,'DATAB','DATAW','KP','DYSKONTO'))<>''
|| return(_chk)
?};

{? ODP_EME.WW<0
|| __CHK.err_fld(ODP_EME,'WW',1,'Wartość nie może być ujemna.'@)
|? ODP_EME.DYSKONTO<0
|| __CHK.err_fld(ODP_EME,'DYSKONTO',1,'Wartość nie może być ujemna.'@)
|? ODP_EME.GRUPA_1<0 | ODP_EME.GRUPA_1>1
|| __CHK.err_fld(ODP_EME,'GRUPA_1',1,'Dozwolone wartości z przedziału %1-%2.'@ ['0.00','1.00'])
|? ODP_EME.GRUPA_2<0 | ODP_EME.GRUPA_2>1
|| __CHK.err_fld(ODP_EME,'GRUPA_2',1,'Dozwolone wartości z przedziału %1-%2.'@ ['0.00','1.00'])
|? ODP_EME.GRUPA_3<0 | ODP_EME.GRUPA_3>1
|| __CHK.err_fld(ODP_EME,'GRUPA_3',1,'Dozwolone wartości z przedziału %1-%2.'@ ['0.00','1.00'])
|? ODP_EME.GRUPA_4<0 | ODP_EME.GRUPA_4>1
|| __CHK.err_fld(ODP_EME,'GRUPA_4',1,'Dozwolone wartości z przedziału %1-%2.'@ ['0.00','1.00'])
|? ODP_EME.GRUPA_5<0 | ODP_EME.GRUPA_5>1
|| __CHK.err_fld(ODP_EME,'GRUPA_5',1,'Dozwolone wartości z przedziału %1-%2.'@ ['0.00','1.00'])
|| 1
?}


\pozycje_rezerwy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Wyświetlenie pozycji obliczonej rezerwy emertytalnej
:: ~OST: INWINBTN
::----------------------------------------------------------------------------------------------------------------------
{? __EME.first() & FUN.ask('Czy chcesz zobaczyć informacje źródłowe o wyliczonych kwotach?'@)
|| _ws:=__EME.mk_sel('Rezerwy odpraw emerytalnych'@,,,'odp_eme_wer',,,25,,'U',,,,,'html_maximized');
   __EME.win_fld(_ws,,'LP',,,-6,,,,,'Liczba porządkowa'@);
   __EME.win_fld(_ws,,'IP',,,,,,,,MS.comment(P,'IP'));
   __EME.win_fld(_ws,,'NAZWISKO',,,,,,,,MS.comment(OSOBA,'NAZWISKO'));
   __EME.win_fld(_ws,,'PIERWSZE',,,,,,,,MS.comment(OSOBA,'PIERWSZE'));
   __EME.win_fld(_ws,,'PESEL',,,,,,,,MS.comment(OSOBA,'PESEL'));
   __EME.win_fld(_ws,,'DZA',,,,,,,,MS.comment(P,'DZA'));
   __EME.win_fld(_ws,,'ODPISA',,,-13,,,,,'Kwota odpisu za lata ubiegłe'@);
   __EME.win_fld(_ws,,'ODPISB',,,-13,,,,,'Kwota odpisu za rok bieżący'@);

   __EME.win_act(_ws,,'Formuła','S&zczegóły'@@,,'Informacje szczegółowe'@,
      "  __EME.hdr_edit(' '+__EME.NAZWISKO+' '+__EME.PIERWSZE);
         __EME.display()
      ",,,,,,'Z'
   );
   __EME.win_act(_ws,,'Szukaj');
   __EME.win_act(_ws,,'Kolejność');
   __EME.win_btn(_ws,
      'text=%1,btn_label_align=center,panel=right,align=begin'['S&zczegóły'@],
      'menu:Z',,,,,,
      'noempty'
   );
   __EME.win_sel(_ws);

   _wr:=__EME.mk_edit('Rezerwa na odprawę emertytalną obliczona dla'@,0);
   __EME.win_esep(_wr,'Dane podstawowe'@);
   __EME.win_efld(_wr,,'LP',,,13,,,,,'Liczba porządkowa'@);
   __EME.win_efld(_wr,,'IP',,,13,,,,,MS.comment(P,'IP'));
   _dl:=MS.fld_len(OSOBA,'NAZWISKO');
   __EME.win_efld(_wr,,'NAZWISKO',,,_dl,,,,,MS.comment(OSOBA,'NAZWISKO'));
   __EME.win_efld(_wr,,'PIERWSZE',,,_dl,,,,,MS.comment(OSOBA,'PIERWSZE'));
   __EME.win_efld(_wr,,'DRUGIE',,,_dl,,,,,MS.comment(OSOBA,'DRUGIE'));
   __EME.win_efld(_wr,,'PESEL',,,_dl,,,,,MS.comment(OSOBA,'PESEL'));
   __EME.win_efld(_wr,,'PLEC',,,,,,,,MS.comment(OSOBA,'PLEC'),'radio-buttons',,
      'Kobieta'@,"'K'",
      'Mężczyzna'@,"'M'"
   );
   __EME.win_efld(_wr,,'UR_DATA',,,,,,,,MS.comment(OSOBA,'UR_DATA'));
   __EME.win_efld(_wr,,'DZA',,,,,,,,MS.comment(P,'DZA'));
   __EME.win_esep(_wr,'Wiek emerytalny'@);
   __EME.win_efld(_wr,,'WEL',,,13,,,'Lata'@,,MS.name(__EME,'WEL'));
   __EME.win_efld(_wr,,'WEM',,,13,,,'Miesiące'@,,MS.name(__EME,'WEM'));
   __EME.win_efld(_wr,,'DWE',,,,,,'Data osiągnięcia'@,,MS.name(__EME,'DWE'));
   __EME.win_ecol(_wr);
   __EME.win_esep(_wr,'Dane wejściowe'@);
   __EME.win_efld(_wr,,'LA',,,13,,,,,MS.name(__EME,'LA'));
   __EME.win_efld(_wr,,'LB',,,13,,,,,MS.name(__EME,'LB'));
   __EME.win_efld(_wr,,'WW',,,13,2,,,,MS.name(__EME,'WW'));
   __EME.win_efld(_wr,,'DYSKONTO',,,13,2,,,,MS.name(__EME,'DYSKONTO'));
   __EME.win_efld(_wr,,'PODSTAWA',,,13,2,,,,MS.name(__EME,'PODSTAWA'));
   __EME.win_efld(_wr,,'KWOTA',,,13,2,,,,MS.name(__EME,'KWOTA'));
   __EME.win_efld(_wr,,'P',,,13,2,,,,MS.name(__EME,'P'));
   __EME.win_esep(_wr,'Wysokość odpisu'@);
   __EME.win_efld(_wr,,'ODPISA',,,13,2,,'Lata ubiegłe'@,,MS.name(__EME,'ODPISA'));
   __EME.win_efld(_wr,,'ODPISB',,,13,2,,'Rok bieżący'@,,MS.name(__EME,'ODPISB'));
   __EME.win_edit(_wr);

   __EME.select()
?}

:Sign Version 2.0 jowisz:1045 2022/06/30 14:22:53 404b12382c53145302596a567a77020fe5e60cb9426c71b97f562c6c3f83ba9cca3a19fceb035da3c6c3ef8f62ac944a1e4446d94235488d2ef1f362e206d03949528ccc83cf61b8de97b4beccf3bea0feb7d79836a4ad1cdc763e5f52cc82517720c70768737dcd1e0cfcec69325bf3c00cbe2b507d6569efc446f58372d4e8
