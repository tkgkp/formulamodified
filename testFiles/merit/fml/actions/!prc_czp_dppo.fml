:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !prc_czp_dppo.fml
:: Utworzony: 02.08.2017
:: Autor: areKc
::======================================================================================================================
:: Zawartość: Formuły czynności: PRC_CZP_DPPO - Przypisanie prac. do okresu.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.42]
:: OPIS: Dodanie współpracownika do okresu rozliczeniowego.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::# access=exec('run_cond_p','pkd')
::
::# kind=WE, symbol=P, type=_P, name=Wskazanie pracownika, required=T, keyref=T
::
::# kind=WEW, symbol=A_OKR,  type=STRING, name=Okres rozliczeniowy, required=N, keyref=N
::# kind=WEW, symbol=D_OD,   type=DATE,   name=Od daty,             required=N, keyref=N
::# kind=WEW, symbol=D_DO,   type=DATE,   name=DO daty,             required=N, keyref=N
::
_par:=params_get();
_mp:=_par.mp;
_in:=_par.in;
_int:=_par.int;
_akcja:=_mp.akcja();
_result:='';
_uidref:=exec('ref2uid','#table',_in.P);
{? _uidref=''
|| _result:=exec('error','!prc_czp_dppo')
|| {? _akcja='ZAKOŃCZ'
   || _mp.done()
   |? _mp.pathTodo()
   || _value:=exec('edit','!prc_czp_dppo',_in.P,_int);
      {? type_of(_value)=type_of('')
      || _result:=_value
      |? _value
      || _mp.done()
      || _par.mp.save(_int);
         _mp.keep()
      ?}
   ?}
?};
::  Obsługa błędów
{? _result<>''
|| _mp.error(_result);
   FUN.emsg(_result)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.42]
:: OPIS: Dodanie współpracownika do okresu rozliczeniowego - opis.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('desc','pracownik',params_get().mp);
{? _tab.ZAW_DANE='T'
|| {? _tab.OBCY='T'
   || 'Dodaj współpracownika do okresu rozliczeniowego: %1 %2: Paszport - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT,_tab.T,_tab.IP]
   |? +_tab.PESEL
   || 'Dodaj współpracownika do okresu rozliczeniowego: %1 %2: PESEL - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PESEL,_tab.T,_tab.IP]
   || 'Dodaj współpracownika do okresu rozliczeniowego: %1 %2: Data urodzenia - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.UR_DATA,_tab.T,_tab.IP]
   ?}
|| 'Dodaj współpracownika do okresu rozliczeniowego'@@
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.42]
:: OPIS: Komunikat o błędzie.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'%1\n%2'['Dodanie współpracownika do okresu rozliczeniowego nie jest możliwe.'@,'Nie znaleziono współpracownika.'@]


\edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.42]
:: OPIS: Obsługa czynności wywołanej z listy zadań.
::   WE: _a [REFERENCE] - Wskazanie współpracownika.
::       _b - tablica z parametrami wewnętrznymi.
::   WY: Komunikat o błędzie lub informacja o wyjściu z okna poprzez wywołanie sel_exit() - czyli "Zakończ".
::----------------------------------------------------------------------------------------------------------------------
result:=0;
P.cntx_psh();
P.prefix();
{? type_of(_a)=type_of(null()) & _a<>null() & P.seek(_a,,1)
|| OSOBA.cntx_psh();
   P.OSOBA();
   A_OKRP.cntx_psh();
   A_OKRP.win_edit(exec('red','!prc_czp_dppo'));
   A_OKRP.index('A_OKRDP');
   A_OKR.cntx_psh();
   A_OKR.win_sel('SLO');
   A_OKR.win_edit('RED');
   {? type_of(_b.A_OKR)=type_of('')
   || A_OKR.seek(_b.A_OKR,,1);
      VAR_EDIT.A_OKR:=$A_OKR.ref();
      VAR_EDIT.NAZWA:=A_OKR.NAZ().NAZ;
      VAR_EDIT.D_OD:=_b.D_OD;
      VAR_EDIT.D_DO:=_b.D_DO
   || exec('a_okrp_wart_pocz','!prc_czp_dppo')
   ?};
   {? A_OKRP.edit(
         "  _wyn:=__CHK.record(VAR_EDIT,,'NAZWA','D_OD','D_DO');
            {? _wyn=''
            || {? VAR_EDIT.D_OD>VAR_EDIT.D_DO
               || FUN.emsg('Wartość w polu \"Od daty\" nie może być większa od wartości w polu \"Do daty\".'@);
                  _wyn:='D_OD'
               |? exec('find_a_okr','!prc_czp_dppo') & result=1
::                Zadanie ma się zakończyć, ale zwracamy 2, bo nie dokonujemy zapisu w A_OKRP:
               || result:=2

               |? +(_wyn:=exec('chk_date_a_okr','!prc_czp_dppo',A_OKR.ref(),A_OKR.OD,A_OKR.DO))
               || {? _wyn='D_OD'
                  || FUN.emsg('%1\n%2'
                        [  'Wartość w polu \"Od daty\" wykracza poza datę wybranego okresu.'@,
                           'Proszę wprowadzić poprawną wartość.'@
                        ]
                     )
                  |? _wyn='D_DO'
                  ||  FUN.emsg('%1\n%2'
                        [  'Wartość w polu \"Do daty\" wykracza poza datę wybranego okresu.'@,
                           'Proszę wprowadzić poprawną wartość.'@
                        ]
                     )
                  ?}
               ?}
            ?};
            {? +_wyn || result:=0 ?};
            _wyn
         "
      )
   || {? result=1
      || A_OKRP.blank();
         A_OKRP.P:=P.ref();
         A_OKRP.OSOBA:=P.OSOBA;
         A_OKRP.OKR:={? A_OKR.seek(VAR_EDIT.A_OKR,,1) || A_OKR.ref() || null() ?};
         A_OKRP.OD:=VAR_EDIT.D_OD;
         A_OKRP.DO:=VAR_EDIT.D_DO;
         {? exec('spr_a_okrp','okres',P.ref(),exec('gen_tab_error','okres'),A_OKRP.OD,A_OKRP.DO,A_OKRP.OKR)
         || {? A_OKRP.add(1)
            || exec('oblicz','okres',0);
               exec('dodaj_do_buff','grafik','P',A_OKRP.P,A_OKRP.OKR,,,2);
               exec('dodaj_do_buff','grafik','G',A_OKRP.P,A_OKRP.OKR,A_OKRP.OD,A_OKRP.DO,2);
               exec('dodaj_do_buff','grafik','W',A_OKRP.P,A_OKRP.OKR,A_OKRP.OD,A_OKRP.DO,2);
               exec('endPl4ClMonth','okres',A_OKRP.ref())
            || FUN.emsg('%1\n%2'
                  ['Pracownik już jest przypisany do bieżącego okresu.'@,
                   'Dołączenie pracownika niemożliwe.'@]);
                result:=0
            ?}
         ?}
      || _b.A_OKR:=VAR_EDIT.A_OKR;
         _b.D_OD:=VAR_EDIT.D_OD;
         _b.D_DO:=VAR_EDIT.D_DO
      ?}
   ?};
   A_OKR.cntx_pop();
   A_OKRP.cntx_pop();
   OSOBA.cntx_pop();
   exec('a_okrp_blank','!prc_czp_dppo')
|| result:=exec('error','!prc_czp_dppo')
?};
P.cntx_pop();
&result


\red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.42]
:: OPIS: Przygotowanie okna wertowania.
::   WE: _a - tablica z parametrami wewnętrznymi.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_red:=A_OKRP.mk_edit('Okres rozliczeniowy współpracownika',,'okresrozlicz',,,'normal');
A_OKRP.win_ewin(_red,P,'INFO_Z');
A_OKRP.win_ewin(_red,VAR_EDIT,'A_OKR');
_btnZ:=A_OKRP.win_ebtn(_red,
   'text=%1,panel=bottom,align=end'[exec('text_red_zakoncz','#window','PKD_K')],
   "  result:=1;
      'key:F2'
   "
);
_btnO:=A_OKRP.win_ebtn(
   _red,
   'text=%1,panel=bottom,align=end'[exec('text_red_ok','#window','Z')],
   "  result:=0;
      'key:F2'
   "
);
_btnA:=A_OKRP.win_ebtn(
   _red,
   'text=%1,panel=bottom,align=end'['&Anuluj'@],
   "  result:=0;
      'key:Esc'
   "
);
A_OKRP.btn_eopt(_red,_btnZ,'tooltip=%1'[exec('help_red_zakoncz','#window','PKD_K')]);
A_OKRP.btn_eopt(_red,_btnO,'tooltip=%1'[exec('help_red_ok','#window','Z')]);
A_OKRP.btn_eopt(_red,_btnA,'tooltip=%1'[exec('help_red_esc','#window','A')]);
_red


\a_okrp_wart_pocz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.42]
:: OPIS: Wartości początkowe dla okresu rozliczeniowego współpracownika
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('a_okrp_blank','!prc_czp_dppo');
A_OKRD.cntx_psh();
A_OKRD.index('POD');
A_OKRD.prefix(P.ref());
{? A_OKRD.find_le(date())
|| VAR_EDIT.NAZWA:=A_OKRD.A_OKRN().NAZ;
   A_OKR.cntx_psh();
   A_OKR.index('A_OKRNN');
   A_OKR.prefix(A_OKRD.A_OKRN);
   {? A_OKR.find_le(date())
   || {? P.DZA<=A_OKR.DO & (P.DZ=#0 | P.DZ>=A_OKR.OD)
      || _od:={? P.DZA<A_OKR.OD || A_OKR.OD || P.DZA ?};
         _do:={? P.DZ>A_OKR.DO | P.DZ=#0 || A_OKR.DO || P.DZ ?};
:: pobranie możliwych dat przypisania do okresu
         _okrp:=exec('getOdDo4Okrp','okres',P.ref(),_od,_do,A_OKR.NAZ);
         {? _okrp.ok
         || VAR_EDIT.A_OKR:=$A_OKR.ref();
            VAR_EDIT.D_OD:=_okrp.od;
            VAR_EDIT.D_DO:=_okrp.do
         ?}
      ?}
   ?};
   A_OKR.cntx_pop()
?};
A_OKRD.cntx_pop()


\a_okrp_blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.42]
:: OPIS: Wypełnienie wartości zmiennej VAR_EDIT wartościami pustymi.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
VAR_EDIT.NAZWA:=VAR_EDIT.A_OKR:='';
VAR_EDIT.D_OD:=VAR_EDIT.D_DO:=date(0,0,0);
win_disp()


\var_edit_a_okr_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.42]
:: OPIS: Wyświetlenie słownika okresów rozliczeniowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
A_OKR.index('A_OKR');
{? A_OKR.select()
|| exec('a_okrp_fill','!prc_czp_dppo',1)
?};
~~


\var_edit_a_okr_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.42]
:: OPIS: Spawdzenie poprawności wyboru ze słownika okresów rozliczeniowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_nazwa:='';
{? +VAR_EDIT.A_OKR & A_OKR.seek(VAR_EDIT.A_OKR,,1)
|| _nazwa:=A_OKR.NAZ().NAZ
?};

{? VAR_EDIT.NAZWA=''
|| exec('a_okrp_blank','!prc_czp_dppo')
|? VAR_EDIT.NAZWA<>_nazwa
|| _a_okr:=null();
   VAR_EDIT.A_OKR:='';
   A_OKRN.cntx_psh();
   A_OKRN.index('A_OKRN');
   A_OKRN.prefix(VAR_EDIT.NAZWA,);
   {? A_OKRN.first() || _a_okr:=A_OKRN.ref() ?};
   A_OKRN.cntx_pop();

   {? _a_okr
   || A_OKR.index('A_OKRNN');
      A_OKR.prefix(_a_okr);
      {? {? #VAR_EDIT.D_OD
         || A_OKR.find_le(VAR_EDIT.D_OD)
         || A_OKR.find_le(date())
         ?}
      || exec('a_okrp_fill','!prc_czp_dppo',VAR_EDIT.A_OKR='')
      || exec('a_okrp_blank','!prc_czp_dppo');
         0
      ?}
   || FUN.emsg('%1\n%2'
         [  'Okres rozliczeniowy \"%1\" nie został odnaleziony.'@[VAR_EDIT.NAZWA],
            'Proszę wybrać okres ze słownika.'@
         ]
      );
      exec('a_okrp_blank','!prc_czp_dppo'); 0
   ?}
|| 1
?}


\a_okrp_fill
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.42]
:: OPIS: Wypełnienie wartości zmiennej VAR_EDIT wartościami dla wybranego okresu.
::   WE: _a - [INTEGER] - (1/0) Wyświetlenie komunikatu.
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
VAR_EDIT.NAZWA:=A_OKR.NAZ().NAZ;
VAR_EDIT.A_OKR:=$A_OKR.ref();
{? P.DZA<=A_OKR.DO & (P.DZ=#0 | P.DZ>=A_OKR.OD)
|| _od:={? P.DZA<A_OKR.OD || A_OKR.OD || P.DZA ?};
   _do:={? P.DZ>A_OKR.DO | P.DZ=#0 || A_OKR.DO || P.DZ ?};
:: pobranie możliwych dat przypisania do okresu
   _okrp:=exec('getOdDo4Okrp','okres',P.ref(),_od,_do,A_OKR.NAZ);
   {? _a & _okrp.ok=0
   || FUN.emsg('Nie znaleziono zapisów w historii domyślnych okresów rozliczeniowych współpracownika,\n'
         'które byłyby zgodne z wybranym okresem.'@+
         '\n'+'Przyjęte zostaną daty początku i końca wybranego okresu rozliczeniowego.'@)
   ?};
   VAR_EDIT.D_OD:=_okrp.od;
   VAR_EDIT.D_DO:=_okrp.do;
   win_disp()
|| FUN.emsg(
      'Wybrany okres rozliczeniowy: %1 od %2 do %3\nnie pokrywa się z okresem współpracy od %4 do %5.'@
      [VAR_EDIT.NAZWA,A_OKR.OD$1,A_OKR.DO$1,P.DZA$1,P.DZ$1]
   );
   exec('a_okrp_blank','!prc_czp_dppo')
?};
~~


\find_a_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.42]
:: OPIS: Sprawdzenie czy współpracownik nie jest przypisany do wybranego okresu.
::   WE:
::   WY: _wy - [INTEGER] (1/0) Współpracownik przypisany do wybranego okresu.
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
A_OKRP.cntx_psh();
A_OKRP.index('A_OKPP');
A_OKRP.prefix(A_OKR.ref(),P.ref());
{? A_OKRP.first()
|| _wy:=1
?};
A_OKRP.cntx_pop();
_wy


\chk_date_a_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.42]
:: OPIS: Sprawdzenie czy wprowadzone daty pokrywają się z datami wybranego okresu.
::   WE: _a - [REFERENCE] Wskazanie na wybrany okres
::       _b - [DATE] Początek wybranego okresu
::       _c - [DATE] Koniec wybranego okresu
::   WY: _wy - [STRING] Wartość pusta - daty są poprawne w przeciwnym razie akronim pola z błędem.
::----------------------------------------------------------------------------------------------------------------------
_wy:='';
{? A_OKR.seek(_a,,1)
|| {? VAR_EDIT.D_OD<_b | VAR_EDIT.D_OD>_c
   || _wy:='D_OD'
   |? VAR_EDIT.D_DO<_b| VAR_EDIT.D_DO>_c
   || _wy:='D_DO'
   ?}
?};
_wy


:Sign Version 2.0 jowisz:1045 2023/10/17 10:20:44 da431a4487b4112fe57f66d7ac0ff2f9cf59d6110b96943133c57ef89d481a3024376ad68eb765e527f08b3c25ef3ccdf338ec2b90d4600a4bf927c5668bfd68213babbf0d08dd27bb0a552dd439c43fddadfb91f95a2d12a98f011946023757d94bd5e8261ee7c092079171e03b9e0f4401ed3fb54a48e63959b78ee7e7fabe
