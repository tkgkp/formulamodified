:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lmg_mag_dreo.fml
:: Utworzony: 20.01.2016
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Czynność LMG_MAG_DREO - Rejestracja reorganizacji
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# properties=SERVICE
::# permissions=ODDZ,LMG
::# parses=exec('parses_dk_ln','lmg')
::# kind=WE, symbol=ND,      type=_ND,      name=Dokument magazynowy,           required=N
::# kind=WE, symbol=EANN,    type=_EANN,    name=Operacja mobilna,              required=N,     keyref=T
::# kind=WE, symbol=DK_LN,   type=_DK_LN,   name=Reorganizacja,                 required=N,     keyref=T
::# kind=WE, symbol=MG,      type=_MG,      name=Magazyn dla operacji,          required=N,   fml_val="exec('mg','!lmg_mag_dreo')", fml_exp="exec('mg_export','magdok_wspolne',_a)"
::# kind=WE, symbol=OKR,     type=NUMBER,   name=O ile przesunąć datę,          required=N
::# kind=WE, symbol=CZYTW,   type=STRING,   name=Czy uzupełniać terminy ważn.,  required=N,   fml_val="exec('answer2str','params',,,'Czy uzupełniać terminy ważności?')"
::# kind=WE, symbol=FORM,    type=STRING,   name=Formuła,                       required=N
::# kind=WY, symbol=DK_LN,   type=_DK_LN,   name=Reorganizacja,                 required=N,     keyref=T
::# kind=WY, symbol=RESULT,  type=STRING,   name=Rezultat działania,            required=N
::# kind=WY, symbol=GEN_OPE, type=STRING,   name=Grupa operacji,                required=N

_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

_context:=params_get().context;
_service:=_mp.isService();
_proces:=_mp.pathProc();

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_autoakc:=exec('autoAkc','#b__box',_mp,600380,'LMG_MAG_AREO');

{? _proces & ~_service
:: Sprawdzenie parametrów pracy dla czynności startowej
|| {? ST.AR=0 | ST.ODDZ_KOD='' | ST.MAG=null()
   || FUN.info('Ustaw parametry pracy.'@);
      _wyn:=0;
      return()
   |? ST.MAG().SL<>'T'
   || FUN.emsg('W parametrach pracy ustawiono magazyn bez obsługi wymiarów.\n'
               'Niemożliwa rejestracja reorganizacji w magazynie %1.'@[ST.MAG().SYM]);
      _wyn:=0;
      return()
   ?}
?};

{? var_pres('RESULT',_out)<>type_of('') || _out.RESULT:='OK'; _mp.save('OUT','RESULT','OK') ?};

_nd_ref:={? var_pres('ND',_in)=type_of(~~) || null() || _in.ND ?};
_eann:={? var_pres('EANN',_in)=type_of(~~) || null() || _in.EANN ?};
_dk_ln_ref:={? var_pres('DK_LN',_in)=type_of(~~) || null() || _in.DK_LN ?};
{? _dk_ln_ref<>null() || _out.DK_LN:=_dk_ln_ref; _mp.save('OUT','DK_LN',_dk_ln_ref) ?};

_uzuptw:={? var_pres('CZYTW',_in)=type_of(~~) || 'N' || _in.CZYTW ?}='T';

_auto:=(_nd_ref<>null() | _eann<>null() | _dk_ln_ref<>null()) & _mp.isAutoRun();

{? var_pres('FORM',_in)=type_of('') & _in.FORM<>''
|| _akcja:='FORM'
|? _mp.pathTodo()
:: Ustawienie kontekstu wg instancji elementu w procesie
|| {? var_pres('DK_LN',_out)=type_of(null()) & _out.DK_LN
   || 1
   |? _akcja='AUT_REO'
   || 1
   |? ~_mp.isMicro()
   || {? _nd_ref<>null()
      || _akcja:='START_ND'
      |? _eann<>null()
      || _akcja:='START_EANN'
      || _akcja:='START_TODO'
      ?}
   || _mp.error('Brak parametru wyjściowego DK_LN.')
   ?}
?};

:: Wyzwalacz, który po dodaniu nagłówka dokumentu:
:: - add: dodaje rekord kluczowy nagłówka dokumentu
::   del: usuwa rekord kluczowy nagłówka dokumentu
:: - add: zapisuje parametr wyjściowy ND = wskazanie na nagłówek dokumentu
::   del: zapisuje parametr wyjściowy ND = null
_mp.trigRef('DK_LN',,1,,exec('kind_out','#b_port'),'DK_LN');

{? _akcja='FORM'
|| {? var_pres('OKR',_in)<>type_of(0) | _in.OKR<0 || _in.OKR:=0 ?};
   {? ~(var_pres('MG',_in)=type_of(null()) & _in.MG<>null())
   &  ~(var_pres('ND',_in)=type_of(null()) & _in.ND<>null())
   || _mp.error('Brak parametru wejściowego MG lub ND.'@);return() ?};
   ($_in.FORM)(_in,_out,_mp)
|? _akcja='AUT_REO'
|| {? var_pres('OKR',_in)<>type_of(0) | _in.OKR<0 || _in.OKR:=0 ?};
   {? ~(var_pres('MG',_in)=type_of(null()) & _in.MG<>null())
   &  ~(var_pres('ND',_in)=type_of(null()) & _in.ND<>null())
   || _mp.error('Brak parametru wejściowego MG lub ND.'@);return() ?};
   exec('gen_aut_reo','!lmg_mag_dreo',_in,_out,_mp,_autoakc)
|? _service & _eann=null()
||
:: Pętla serwisowa
   {? var_pres('OKR',_in)<>type_of(0) | _in.OKR<0 || _in.OKR:=0 ?};
   _mp.save('IN',_in);

   _continue:=0;
   _gen_ope:='';
   _ctrl:=1;

   {? _mp.loop()=0
   || EANN.cntx_psh();
      EANN.prefix();
      params_set('mp',_mp,'in',_in);
      _gen_ope:=exec('autoOper','!lmg_mag_dreo');
      EANN.cntx_pop()
   ?};
   _mp.done()

|? var_pres('DK_LN',_out)=type_of(null()) & _eann=null()
 & (exec('FindAndGet','#table',DK_LN,_out.DK_LN,,"DK_LN.AKC",'')<>'N' |
    exec('FindAndGet','#table',DK_LN,_out.DK_LN,,"DK_LN.STAT_REJ",'')='Z')
|| _mp.done()

|? _akcja='Dołącz'
   | _mp.pathProc()
   | _akcja='START_TODO'
:: Obsługa Dołącz - dołącz w oknie obszaru i start procesu z pulpitu
||
:: Parametr 'akcja' wykorzystywany w formułach przycisków 'Pozycje', 'Zakończ'
   params_set('out',_out,'mp',_mp,'akcja',_akcja);
   params_exec('adddk_ln','magdok_wymiary');

:: Podczytanie parametrów wyjściowych
   _outa:=_mp.load(exec('kind_out','#b_port'));
   {? var_pres('DK_LN',_outa)<>type_of(~~) & _outa.DK_LN
:: Dodano dokument
   ||
::    Ustawienie się na dodanym dokumencie w widoku obszaru
      {? _mp.pathArea() || DK_LN.seek(_outa.DK_LN) ?}
:: Wycofanie czynności bo nie dodano dokumentu
   || _mp.cancel()
   ?}

|? ((_auto | _service) & _eann<>null())
   | (_akcja='Generuj_wg_ope' & _mp.pathArea())
   | (_akcja='START_EANN')
|| _nocomm:=_auto | _service;
   EANN.cntx_psh();
   {? _service & _eann<>null() || exec('openean','open_tab',ref_name(_eann)+3) ?};
   EANN.prefix();
   {? EANN.seek(_eann)
   || _oddz:=1+(ref_name(_eann)+3);
      _data:=(EANN.DATA);
      _rok:=form((_data~1)-2000,,0,'99');
      ST.ODDZ:=_oddz;
      ST.AR:=_data~1;
      ST.AM:=_data~2;
      _msk:=0;
      _stEANN:={? (EANN.name()+2)='__' & EANN.TYP='R' & EANN.STAN='+' & (EANN.IS_R='T' | EANN.IS_M='T')
               || 'Z'
               || EANN.STAN
               ?};

      {? _stEANN='+'
      || {? ~_nocomm || FUN.info('Operacja reorganizacji zrealizowana.'@) ?};
         _out.RESULT:='BŁĄD';
         _mp.save(,_out);
         _mp.done()
      |? _stEANN='A'
      || {? ~_nocomm || FUN.info('Operacja reorganizacji anulowana.'@) ?};
         _out.RESULT:='BŁĄD';
         _mp.save(,_out);
         _mp.done()
      || _stmag:=ST.MAG;
         ST.MAG:=ND.MAG;
         {? _service & DK_LN.name()<>(_oddz+_rok)
         || _msk:=1;
            exec('mag_psh','open_tab');
            exec('mag_open','open_tab',_oddz,_rok)
         ?};
         params_set('out',_out,'mp',_mp,'akcja',_akcja);
         _dk_ln:=params_exec('realeann_reo','magazyn_mob',~_service,{? _auto | _service || 1 || 0 ?},_uzuptw);
         {? _dk_ln<>null()
         || {? _auto
            || params_set('out',_out,'mp',_mp,'akcja',_akcja);
               params_exec('dk_ln_zakoncz_end','magdok_wspolne',1,_autoakc)
            ?};
            _out.DK_LN:=_dk_ln;
            _mp.save(,_out);
            {? (';ZT'*exec('FindAndGet','#table',DK_LN,_dk_ln,,"STAT_REJ",'N'))>1
            || _mp.done()
            |? _service
            || _out.RESULT:='BŁĄD';
               _mp.save(,_out);
               _mp.done()
            ?}
         ?};
         {? _msk || exec('mag_pop','open_tab') ?};
         ST.MAG:=_stmag
      ?}
   ?};
   EANN.cntx_pop()

|? (_auto & _nd_ref<>null())
   | (_akcja='Generuj_wg_mag' & _mp.pathArea())
   | (_akcja='START_ND')
|| ND.cntx_psh();
   ND.prefix();
   {? ND.seek(_nd_ref)
   || _stmag:=ST.MAG;
      ST.MAG:=ND.MAG;
      params_set('out',_out,'mp',_mp,'akcja',_akcja);
      _dk_ln:=params_exec('genreorg','magdok_wymiary',1,{? _auto || 1 || 0 ?},1,_mp.pathTodo());
      {? _dk_ln<>null()
      || {? _auto
         || params_set('out',_out,'mp',_mp,'akcja',_akcja);
            params_exec('dk_ln_zakoncz_end','magdok_wspolne',1,_autoakc)
         ?};
         _out.DK_LN:=_dk_ln;
         _mp.save(,_out);
         {? (';ZT'*exec('FindAndGet','#table',DK_LN,_dk_ln,,"STAT_REJ",'N'))>1 || _mp.done() ?}
      ?};
      ST.MAG:=_stmag
   ?};
   ND.cntx_pop()

|? _akcja='Popraw'
||
   exec('datadkln','magdok_wymiary');
   _mp.descTodo()

|? _akcja='Pozycje'
|| params_set('out',_out,'mp',_mp,'akcja',_akcja);
   params_exec('pozreorg','magdok_wymiary');
   _mp.descTodo()

|? _mp.pathTodo() | (_dk_ln_ref<>null() & _akcja<>'Zakończ_wer')
|| {? var_pres('DK_LN',_out)=type_of(null())
   || DK_LN.cntx_psh();
      DK_LN.prefix();
      {? DK_LN.seek(_out.DK_LN)
      || ST.MAG:=DK_LN.MG;
         {? _dk_ln_ref<>null() & (_auto | _mp.pathTodo())
         || params_set('out',_out,'mp',_mp,'akcja',_akcja);
            params_exec('dk_ln_zakoncz_end','magdok_wspolne',1,_autoakc)
         |? _dk_ln_ref=null()
         || params_set('out',_out,'mp',_mp,'akcja',_akcja);
            params_exec('pozreorg','magdok_wymiary');
            _mp.descTodo()
         ?};
         {? (';ZT'*exec('FindAndGet','#table',DK_LN,_out.DK_LN,,"STAT_REJ",'N'))>1 || _mp.done() ?}
      ?};
      DK_LN.cntx_pop()
   ?}

|? _akcja='Usuń'
|| {? var_pres('DK_LN',_out)=type_of(null())
:: Uruchomione w procesie
   || _dk_ln:=null();
      DK_LN.cntx_psh();
      _rec:=exec('rec_after_del','#table',DK_LN);
      DK_LN.prefix();
      {? DK_LN.seek(_out.DK_LN)
      ||
         _wyn:=exec('deldk_ln','magdok_wymiary');

         {? ~DK_LN.seek(_out.DK_LN)
::       Wycofuję instancję jeśli nie znaleziono dokumentu
         || _mp.cancel()
         ?};
         _dk_ln:=DK_LN.ref()
      ?};
      DK_LN.cntx_pop();
      {? _wyn=1 & _rec<>null() || DK_LN.seek(_rec) ?};
::    Ustawienie się na kolejnym dokumencie w widoku obszaru
      {? _mp.pathArea() || {? _dk_ln || DK_LN.seek(_dk_ln) ?} ?}
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      exec('deldk_ln','magdok_wymiary',0);

      _mp.done()
   ?}

|? _akcja='Zakończ_wer' & _mp.pathArea()
|| params_set('out',_out,'mp',_mp,'akcja',_akcja);
   params_exec('dk_ln_zakoncz_end','magdok_wspolne',,_autoakc)

|? _akcja='Zakończ_poz'
|| params_set('out',_out,'mp',_mp,'akcja',_akcja);
   params_exec('dk_ln_zakoncz_end','magdok_wspolne',,_autoakc)

|| _mp.error('Nieobsługiwana ścieżka.')
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));
_out:=_mp.load(exec('kind_out','#b_port'));

_ref:={? var_pres('DK_LN',_out)<>type_of(~~) & _out.DK_LN
      || _out.DK_LN
      || null()
      ?};
_wgr:={? var_pres('ND',_in)<>type_of(~~) & _in.ND
      || _in.ND
      |? var_pres('EANN',_in)<>type_of(~~) & _in.EANN
      || _in.EANN
      || null()
      ?};

{? _ref
|| 'Zakończ rejestrację w magazynie %1'
   ' reorganizacji %2'@@[exec('FindAndGet','#table',DK_LN,_ref,,"DK_LN.MG().SYM",''),exec('record','#to_string',_ref)]
|? (5+($_wgr))='nagdo'
|| 'Zarejestruj reorganizację na podstawie dokumentu %1'@@[exec('record','#to_string',_wgr)]
|? (4+($_wgr))='eann'
|| 'Zarejestruj reorganizację na podstawie operacji mobilnej %1'@@[exec('record','#to_string',_wgr)]
|| 'Zarejestruj reorganizację'@@
?}


\dk_ln_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła Dołaczenia Reorganizacji
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_DREO';
_params.AKCJA:='Dołącz';
_params.PROC_START:='T';

exec('mp_run','#b__box',_params)


\dk_ln_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła Poprawy Reorganizacji
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_DREO';
_params.AKCJA:='Popraw';
_params.UIDREF:=DK_LN.uidref();

exec('mp_run','#b__box',_params)


\dk_ln_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła Usunięcia Reorganizacji
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_DREO';
_params.AKCJA:='Usuń';
_params.UIDREF:=DK_LN.uidref();

exec('mp_run','#b__box',_params)


\dk_ln_pozycje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła Pozycji Reorganizacji
::----------------------------------------------------------------------------------------------------------------------
exec('pozreorg','magdok_wymiary',1);
~~


\dk_ln_nag_key
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Poprawa nagłówka reorganizacji
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_DREO';
_params.AKCJA:='Popraw';
_params.UIDREF:=DK_LN.uidref();

exec('mp_run','#b__box',_params)


\dk_ln_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Poprawa nagłówka reorganizacji
::----------------------------------------------------------------------------------------------------------------------
exec('dk_ln_zakoncz','magdok_wymiary')


\dk_ln_zakoncz_key
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Poprawa nagłówka reorganizacji
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_DREO';
_params.AKCJA:='Zakończ_poz';
_params.UIDREF:=DK_LN.uidref();
exec('mp_run','#b__box',_params)


\nd2dk_ln
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Poprawa nagłówka reorganizacji
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_DREO';
_params.AKCJA:='Generuj_wg_mag';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ND',ND.ref());
exec('mp_run','#b__box',_params)


\autoOper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Automatycznie realizuje operacje
::   WY: klucz grupujący lub pusty string
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=params_get().in;
_il_srv:=0;
_wyn:='';

_grp_key:=tm_stamp()+'1';

_czyweb:=var_pres('WEB',_in)=type_of('') & _in.WEB='TAK';
_uzuptw:={? var_pres('CZYTW',_in)=type_of(~~) || 'N' || _in.CZYTW ?}='T';
:: przekazuje na wyjściu ostatniego DK_LN - tylko po to ażeby można było podpiąć akceptację serwisową reorganizacji
_dk_ln:=null();
EANX.IDDK_LN:='';

_eann:=sql('select '+
           '  EANN.REFERENCE REF, '+
           '  EANN.DATA DATA '+
           'from @EANN '+
           ' where EANN.REFERENCE like '+'''eann_\\_\\_%'' escape ''\\'''+
           '   and EANN.AKT=''T'''+
           '   and EANN.TYP=''R'''+
           '   and EANN.STAN=''Z'''+
           '   and EANN.ZLEC='+{? _czyweb || '''T''' || '''N''' ?});

_eann.clear();
{? _eann.first()
|| {!
   |? _oddz:=1+(4-_eann.REF);
      _rok:=form((_eann.DATA~1)-2000,-2,0,'99');
      exec('open','open_tab',_oddz,_rok);
      {? (EANN.clear(); EANN.seek(_eann.REF)) & (_wyp:=exec('ctrlEANN','magazyn_mob','R',1))>0
      || {? (+EANX.IDDK_LN)=48 & (_buf:=exec('FindAndGet','#table',DK_LN,EANX.IDDK_LN,,"ref()",null()); _buf<>null())
         || _dk_ln:=_buf
         ?};
         _il_srv+=params_exec('autooper','magazyn_mob',EANN.ref(),_wyp,_grp_key,,_uzuptw)
      ?};
      _eann.next()
   !}
?};
obj_del(_eann);
EANX.IDDK_LN:='';

_mp.save('OUT','RESULT','OK:'+$_il_srv);
_mp.save('OUT','GEN_OPE',_grp_key);
_mp.save('OUT','DK_LN',_dk_ln);
{? _il_srv>0 || _wyn:=_grp_key ?};
_wyn


\mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na wartość parametru MG
::   WY: MG.ref()
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null();
MG.cntx_psh();
MG.index('SL_ALL');
MG.prefix('T');
{? MG.first()
|| MG.win_sel('SLO');
   {? MG.select() || _wyn:=MG.ref() ?}
?};
MG.cntx_pop();
_wyn


\gen_aut_reo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PD] [23.25]
:: OPIS: Generuje reorganizację na podstawie znacznika DK.REO
::   WE: in  - parametry wejściowe czynności
::       out - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::       _autoakc - 0/1 - autoakceptacja
::----------------------------------------------------------------------------------------------------------------------
_in:=_a;
_out:=_b;
_mp:=_c;
_autoakc:={? var_pres('_d')=type_of(0) || _d || 0 ?};
_dk_ln:=null();

DK.cntx_psh();
ND.cntx_psh();
MG.cntx_psh();MG.prefix();
EANL.cntx_psh();EANL.prefix();
{? var_pres('MG',_in)=7
||
   {? ~MG.seek(_in.MG)
   || _mp.error('Nie odnaleziono magazynu.'@);DK.cntx_pop();MG.cntx_pop();ND.cntx_pop();EANL.cntx_pop();return(~~)
   ?};
   DK.use('dokma'+MG.ODDZ+($((date()-_in.OKR)~1)+2));
   ND.use('nagdo'+MG.ODDZ+($((date()-_in.OKR)~1)+2))
|? var_pres('ND',_in)=7
|| ND.use(ref_name(_in.ND));
   {? ~ND.seek(_in.ND)
   || _mp.error('Nie odnaleziono dokumentu.'@);DK.cntx_pop();MG.cntx_pop();ND.cntx_pop();EANL.cntx_pop();return(~~)
   ?};
   DK.use('dokma'+(ND.name()+3))
?};

DK_LN.cntx_psh();DK_LN.use('dokln'+(DK.name()+3));DK_LN.prefix();
DK_L.cntx_psh();DK_L.use('doklk'+(DK.name()+3));DK_L.prefix();

DK.index('DKREO');
{? var_pres('ND',_in)=7
|| DK.prefix(ND.MAG,1,ND.ref())
|| DK.prefix(_in.MG,1)
?};

{? DK.first
||
   VAR_DEL.delete('__aktdkl');
   __aktdkl:=exec('aktSLwgTW','magdok_wymiary',DK.N().MAG,DK.M,DK.SRDK,DK.IL,DK.TW,DK.ref(),,1);

   {!|?
:: lokalizacje na których występuje dany towar
      {? __aktdkl.first()
      || {!|?
            _pal:=null();
:: jeżeli tak i jeżeli ilość z dostawy jest mniejsza niż dostępna to możemy sprawdzić czy strefa jest odpowiednia
            {? __aktdkl.ILE>=DK.IL
:: jeżeli stan jest paletowy to sprawdzamy czy każda z pozycji ma tą samą kwalifikację
            & (DK.N().MAG().PAL='N' |
            (DK.N().MAG().PAL='T' & (_pal:=exec('pal_poz_stats','magdok_palety',$DK.ref(),DK.N().MAG))))
:: i sparwdzamy czy ten zapis z tabeli nie jest śmieciem
            & __aktdkl.SCSQL=$DK.ref() & __aktdkl.EANL<>'' & EANL.seek(__aktdkl.EANL)
            ||
               _reo:=0;
:: przypadek 1. stan znajduje się w lokalizacji przypisanej do strefy
:: - jeżeli strefa jest niezgodna - przenosimy
:: - jeżeli zgodna - zostawiamy
               MG_GRP.cntx_psh();
               MG_GRP.index('EANLKOD');
               MG_GRP.prefix(DK.N().MAG,EANL.KOD,);
               {? MG_GRP.first() & MG_GRP.MG_GR().DEFSTATS<>null() & MG_GRP.MG_GR().DEFSTATS<>DK.STATS
               || _dk_ln:=exec('gen_reo','!lmg_mag_dreo',_dk_ln,EANL.ref(),DK.STATS,_pal);1
               |? MG_GRP.first() & MG_GRP.MG_GR().DEFSTATS<>null() & MG_GRP.MG_GR().DEFSTATS=DK.STATS
               || 0
:: przypadek 2. stan znajduje się w lokalizacji przypisanej do strefy ale bez statusu
:: - jeżeli status jest zgodny z magazynowym to nie przenosimy
:: - jeżeli niezgodny to przenosimy
               |? MG_GRP.first() & MG_GRP.MG_GR().DEFSTATS=null() & DK.STATS<>MG.DEFSTATS
               || _dk_ln:=exec('gen_reo','!lmg_mag_dreo',_dk_ln,EANL.ref(),DK.STATS,_pal);1
               |? MG_GRP.first() & MG_GRP.MG_GR().DEFSTATS=null() & DK.STATS=MG.DEFSTATS
               || 0
:: przypadek 3. stan znajduje się w lokalizacji bez strefy - próbujemy przenieść na strefę
               || _dk_ln:=exec('gen_reo','!lmg_mag_dreo',_dk_ln,EANL.ref(),DK.STATS,_pal);1
               ?};
               MG_GRP.cntx_pop()
            ?};
            __aktdkl.next()
         !}
      ?};
      {? _dk_ln
      ||
         DK_L.index('DK_LN');
         DK_L.prefix('Z',_dk_ln);
         {? ~DK_L.first() & DK_LN.seek(_dk_ln)
         || DK_LN.del(); _dk_ln:=null()
         |? DK_LN.seek(_dk_ln)
         || exec('dk_ln_zakoncz_end','magdok_wspolne',1,_autoakc);
            _out.DK_LN:=_dk_ln;
            _mp.save(,_out)
         ?}
      ?};

::czysczenie znacznika
      DK.cntx_psh();
      DK.prefix();
      DK.REO:=0;
      _put:=DK.put(1);
      DK.cntx_pop();
      _put & DK.first
   !};
   VAR_DEL.delete('__aktdkl')
|| _mp.error('Nie odnaleziono pozycji dokumentu.'@);
   MG.cntx_pop();ND.cntx_pop();DK.cntx_pop();DK_LN.cntx_pop();DK_L.cntx_pop();EANL.cntx_pop();return(~~)
?};
MG.cntx_pop();
ND.cntx_pop();
DK.cntx_pop();
DK_LN.cntx_pop();
DK_L.cntx_pop();
EANL.cntx_pop();
{? ~_dk_ln || _mp.cancel() || _mp.done() ?};
~~


\gen_reo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PD] [23.25]
:: OPIS: Bezdialogowe generowania reorganizacji
::   WE: _a - DK_LN (jeżeli null to utworzy się nowy nagłówek)
::       _b - EANL
::       _c - STATS
::       _d - paleta
::   WY: DK_LN
:: UWAGA: jestem ustawiony na DK
::----------------------------------------------------------------------------------------------------------------------
MG.cntx_psh();
ND.cntx_psh();
{? _a=null()
|| DK_LN.blank();
   DK_LN.MG:=DK.N().MAG;
   DK_LN.RODZ:='S';
   {? ~DK_LN.add(1) || MG.cntx_pop();ND.cntx_pop();return(null()) ?};
   _a:=DK_LN.ref()
?};
{? _d=null()
||
   _tab:=exec('findmlok','magdok_wymiary',DK.N().MAG,DK.M,DK.IL,DK.KH,,,_c);
   {? _tab.first()
   ||
      {!|?
         _lok:=null();
         EANL.cntx_psh();
         EANL.index('KOD');
         EANL.prefix(_tab.LOK,);
         {? EANL.first() || _lok:=EANL.ref() ?};
         EANL.cntx_pop();
         DK_L.blank();
         DK_L.M:=DK.M;
         DK_L.DK_LN:=DK_LN.ref();
         DK_L.DK:=null();
         DK_L.TW:=date(0,0,0);
         DK_L.MG:=DK.N().MAG;
         DK_L.Z_DO:='Z';
         DK_L.LOK:=_b;
         DK_L.LOKDO:=_lok;
         DK_L.IL:=_tab.ILE;
         DK_L.SCEAN:=DK.SCEAN;
         _lok & DK_L.add(1) & _tab.next()
      !}
   ?}
||
   _lok:=exec('findpallok','magdok_wymiary',DK.N().MAG,DK.N().KH,_c,_d,DK.N().MAG().EANL);
   {? _lok=null() || MG.cntx_pop();ND.cntx_pop();return(_a) ?};
   DK_L.blank();
   DK_L.DK_LN:=DK_LN.ref();
   DK_L.DK:=null();
   DK_L.TW:=date(0,0,0);
   DK_L.MG:=DK.N().MAG;
   DK_L.Z_DO:='Z';
   DK_L.LOK:=_b;
   DK_L.LOKDO:=_lok;
   DK_L.IL:=1;
   DK_L.PAL:=_d;
   DK_L.PALDO:=_d;
   DK_L.add(1)
?};
MG.cntx_pop();
ND.cntx_pop();
_a


:Sign Version 2.0 jowisz:1045 2023/09/06 12:34:10 28de068c7177cc414dbaa228feb75b654bb406845fde814c53cfe7850e151b3147afcd30f95d5bd235d945e2aa8d95a0cc53b9830eca7689e0274b8ad712d3d26d7a3656fc984b456b9e3735bbe83e49477ba43178db45707ba60f4f269c0c3dd6025105fc4763e33539f645e6432f1f198b95bd21a90bdb6bb581761ca8d14d
