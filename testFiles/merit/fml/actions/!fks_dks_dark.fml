:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fks_dks_dark.fml
:: Utworzony: 10.03.2015
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Formuły czynności FKD_DKS_DARK - Rejestracja dokumentów księgowych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przeglądanie dokumentów księgowych - główna formuła czynności FKS_DKS_DARK.
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS,FREJ
::# parses=exec('parses_dok','dok_fks')
::# access=exec('uprawnienia','!fks_dks_dark')
::
:: PARAMETRY WE:
::# kind=WE, symbol=DOK, type=_DOK, name=Wskazanie na nagłówek dokumentu księgowego, required=N, keyref=T
::# kind=WE, symbol=ODD, type=STRING, name=Jednostka księgowa (symbol), required=N
::# kind=WE, symbol=REJ, type=STRING, name=Rejestr księgowy (symbol), required=N
::# kind=WE, symbol=DOK_REJ, type=STRING, name=Rodzaj dokumentu (symbol), required=N
::# kind=WE, symbol=SCHEMAT, type=STRING, name=Nazwa schematu dokumentu, required=N
::# kind=WE, symbol=EDOKUM, type=_EDOKUM, name=Wskazanie na nagłowek dokumentu w obiegu, required=N
:: PARAMETRY WY:
::# kind=WY, symbol=DOK,   type=_DOK, name=Wskazanie na nagłówek dokumentu księgowego, required=T
::# kind=WY, symbol=FAK_ZAK,   type=STRING, name=Dokument to faktura zakupu [T/N], required=T
::# kind=WY, symbol=EDOKUM, type=_EDOKUM, name=Wskazanie na nagłowek dokumentu w obiegu, required=N
:: WARUNKI BRAMY:
::# condition=Faktura zakupowa, act_uid=HBN_PRZ_DZAK, auto=T, formula=_a.FAK_ZAK='T'
::# condition=Księgowanie próbne, act_uid=FKS_DKS_EKSP, auto=T, formula=_a.DOK<>null
_args:=params_get();
_we:=_args.in;
_wew:=_args.int;
_wy:=_args.out;
_mp:=_args.mp;
_akcja:=_mp.akcja();
_autoakc:=exec('autoAkc','#b__box',_mp,300480,'FKS_DKS_EKSP');
exec('fl_decl','dekret_aut');
exec('dek_decl','dekret_aut');
exec('sd_decl','dekret_aut');
inAction:=1;
:: czynność startowa
{? _mp.pathProc()
|| menu_txt(,'Dołącz');
   _mp.trigRef('DOK');
   czystart:=1; dolndok:=0;
   {? var_press('DOK',_we)<=0 & var_press('SCHEMAT',_we)>0 || schDOK:=_we.SCHEMAT ?};
   {? var_press('DOK',_we)<=0 & params_exec('rodz_dok','dok_fks',1) & exec('dol_dok','dok_fks',_mp)
   || _wy.DOK:=DOK.ref();
      _wy.FAK_ZAK:={? exec('can_gen_przel','rozrach_przel') || 'T' || 'N' ?};
      _mp.save(,_wy);
      BtnZak:=0;
      menu_txt(,'Popraw');
      {? DOK.A='T'
      || _mp.done()
      |? dolndok=2
      || exec('popraw_zakoncz','!fks_dks_dark',_mp)
      ?};
      {? _autoakc || exec('zakoncz','!fks_dks_dark',_wy.DOK,_mp,2,_autoakc) ?}
   || {? var_pres('DOK',_we)=type_of(null()) & _we.DOK
            &
         (var_pres('DOK',_wy)<>type_of(null()) | _wy.DOK=null())
      || _wy.DOK:=_we.DOK;
         _mp.save(,_wy)
      ?};
      _mp.keep()
   ?};
   VAR_DEL.delete('czystart','dolndok','schDOK','__KORNAG')
:: dołącz z pulpitu
|? _akcja='Start'
|| _wy.DOK:=DOK.ref();
   _wy.FAK_ZAK:={? exec('can_gen_przel','rozrach_przel') || 'T' || 'N' ?};
   _mp.keyRef(DOK.uidref());
   _mp.save(,_wy)
|? _akcja='Dołącz'
|| menu_txt(,'Dołącz');
   dolndok:=0;
   _mp.trigRef('DOK');
   VAR_DEL.delete('__KORNAG');
   {? params_exec('rodz_dok','dok_fks') & exec('dol_dok','dok_fks',_mp)
   || _wy.DOK:=DOK.ref();
      _wy.FAK_ZAK:={? exec('can_gen_przel','rozrach_przel') || 'T' || 'N' ?};
      _mp.save(,_wy);
      BtnZak:=0;
      menu_txt(,'Popraw');
      {? DOK.A='T'
      || _mp.done()
      |? dolndok=2
      || exec('popraw_zakoncz','!fks_dks_dark',_mp)
      ?};
      {? _autoakc || exec('zakoncz','!fks_dks_dark',_wy.DOK,_mp,2,_autoakc) ?}
   ?};
   VAR_DEL.delete('dolndok')
:: popraw z pulpitu
|? _akcja='Popraw'
|| menu_txt(,'Popraw');
   BtnZak:=0;
   _ref:=DOK.ref();
   exec('popraw_zakoncz','!fks_dks_dark',_mp);
   exec('zakoncz','!fks_dks_dark',_ref,_mp,2,_autoakc)
:: usuń z pulpitu
|? _akcja='Usuń'
|| menu_txt(,'Usuń');
   {? exec('dopusc','dok_fks')
   || exec('dok_usun','dok_fks1');
      {? params_exec('czy_dok_del','%event',_we.DOK)
      || _mp.cancel()
      ?}
   ?}
:: zakończ z pulpitu
|? _akcja='Zakończ'
|| _ref:=DOK.ref();
   {? var_pres('btnwwyw')>0 || exec('akceptuj','dok_fks1') ?};
   exec('zakoncz','!fks_dks_dark',_ref,_mp,1,_autoakc)
|? _akcja='Wycofaj'
|| exec('anuluj','dok_fks',0)
|? _akcja='Start'
|| _wy.DOK:=DOK.ref();
   _wy.FAK_ZAK:={? exec('can_gen_przel','rozrach_przel') || 'T' || 'N' ?};
   _mp.save(,_wy);
   _mp.keyRef(DOK.uidref());
   _mp.done()
|? _mp.pathTodo() | _akcja='Businesslink2'
|| menu_txt(,'Popraw');
   {? var_pres('DOK',_wy) | var_pres('DOK',_we)
   || {? var_pres('DOK',_we) & (~var_pres('DOK',_wy) | _wy.DOK=null)
      || _wy.DOK:=_we.DOK; _mp.save(,_wy)
      ?};
      _ref:=BB.sqlint($_wy.DOK); _nam:=form(($_wy.DOK)-8);
      {? _ref<>0 & _nam<>''
      || DOK.cntx_psh(); DOK.prefix();
         {? DOK.seek(_ref,_nam)
         || BtnZak:=0;
            exec('popraw_zakoncz','!fks_dks_dark',_mp);
            {? _akcja='Businesslink2' & DOK.A<>'T'
            || _mp.save(,_wy);
               _mp.keep()
            ?}
         || FUN.info('Nie znaleziono dokumentu.'@);
            _wy.DOK:=null;
            _wy.FAK_ZAK:='N';
            _mp.save(,_wy);
            _mp.done()
         ?};
         DOK.cntx_pop()
      || FUN.info('Nie znaleziono dokumentu.'@);
         _wy.DOK:=null;
         _wy.FAK_ZAK:='N';
         _mp.save(,_wy);
         _mp.done()
      ?}
   || FUN.info('Nie znaleziono dokumentu.'@);
      _wy.DOK:=null;
      _wy.FAK_ZAK:='N';
      _mp.save(,_wy);
      _mp.done()
   ?}
|? _akcja='Businesslink'
|| {? var_pres('DOK',_we)=type_of(null()) & _we.DOK
      &
      (var_pres('DOK',_wy)<>type_of(null()) | _wy.DOK=null())
   || _wy.DOKUM:=_we.DOK;
      _mp.save(,_wy)
   ?};
   _mp.keep()
|? _akcja='DołączMWA'
|| {? PAR_SKID.get(450)<>'N'
   || _webdok:=_args.context.WEB_DOK;
      WEB_DOK.cntx_psh();
      WEB_DOK.index('IDADD');
      WEB_DOK.prefix(_webdok);
      {? WEB_DOK.first()
      || _dok:=exec('add_rek','mwa_dok');
         {? _dok<>null()
         || _wy.DOK:=_dok;
            _wy.FAK_ZAK:={? exec('can_gen_przel','rozrach_przel') || 'T' || 'N' ?};
            _mp.save(,_wy);
            _mp.done()
         ?}
      ?};
      WEB_DOK.cntx_pop()
   ?};
   1
|? _mp.pathArea() & _akcja=''
|| {? var_pres('DOK',_wy) | var_pres('DOK',_we)
   || _ref:=BB.sqlint($_we.DOK); _nam:=form(($_we.DOK)-8);
      {? _ref<>0 & _nam<>''
      || DOK.cntx_psh(); DOK.prefix();
         {? DOK.seek(_ref,_nam)
         || _wy.DOK:=_we.DOK;
            _wy.FAK_ZAK:={? exec('can_gen_przel','rozrach_przel') || 'T' || 'N' ?};
            _mp.save(,_wy);
            {? DOK.A='T'
            || _mp.done()
            ?}
         ?};
         DOK.cntx_pop()
      ?}
   ?}
|? _wy.DOK=~~ | _wy.DOK=null
|| _wy.DOK:=_we.DOK; _mp.save(,_wy)
?};
ODD.f_clear();
VAR_DEL.delete('inAction');
1


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formuła na opis czynności na liście ToDo
::----------------------------------------------------------------------------------------------------------------------
_desc:='Zakończ rejestrację dokumentu księgowego'@@;
_mp:=params_get().mp;
_wy:=_mp.load(exec('kind_out','#b_port'));
{? var_pres('DOK',_wy)<=0 | ~_wy.DOK
|| _we:=_mp.load(exec('kind_in','#b_port'));
   {? var_pres('DOK',_we)
   || _wy.DOK:=_we.DOK
   ?}
?};
{? var_pres('DOK',_wy)>0 & _wy.DOK
|| _ref:=BB.sqlint($_wy.DOK); _nam:=form(($_wy.DOK)-8);
   {? _ref<>0 & _nam<>''
   || DOK.cntx_psh(); DOK.use(_nam); DOK.prefix();
      {? DOK.seek(_ref,_nam)
      || _jest:=0;
         {? DOK.NK<>'' & DOK.DTO<>date(0,0,0)
         || _desc:='Zakończ rejestrację dokumentu księgowego: %1 z dnia %2: (%3/%4)'@@[DOK.NK,$DOK.DTO,DOK.REJ().KOD,$DOK.NR]
         || _desc:='Zakończ rejestrację dokumentu księgowego: %1 z dnia %2 (%3/%4)'@@[DOK.NK,$DOK.DTO,DOK.REJ().KOD,$DOK.NR]
         ?}
      ?};
      DOK.cntx_pop()
   ?}
?};
_desc


\n_main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [23.25]
:: OPIS: Czynność FKS_DKS_DARK - formuła główna w wersji nieprocesowej
::----------------------------------------------------------------------------------------------------------------------
:: Parametry wejściowe identyczne jak w wersji procesowej
_args:=params_get();
_in:=_args.in;
_akcja:=_args.akcja;
_autoakc:=exec('autoAkc','#b__box',,300480,'FKS_DKS_EKSP');
exec('fl_decl','dekret_aut');
exec('dek_decl','dekret_aut');
exec('sd_decl','dekret_aut');
inAction:=1;
:: dołącz
{? _akcja='Dołącz'
|| menu_txt(,'Dołącz');
   dolndok:=0;
   VAR_DEL.delete('__KORNAG');
   {? params_exec('rodz_dok','dok_fks') & exec('dol_dok','dok_fks')
   || BtnZak:=0;
      _ref:=DOK.ref();
      menu_txt(,'Popraw');
      {? DOK.A<>'T' & dolndok=2
      || exec('popraw_zakoncz','!fks_dks_dark')
      ?};
      {? _autoakc || exec('zakoncz','!fks_dks_dark',_ref,~~,2,_autoakc) ?}
   ?};
   VAR_DEL.delete('dolndok')
:: popraw
|? _akcja='Popraw'
|| menu_txt(,'Popraw');
   BtnZak:=0;
   _ref:=DOK.ref();
   exec('popraw_zakoncz','!fks_dks_dark');
   exec('zakoncz','!fks_dks_dark',_ref,~~,2,_autoakc)
:: usuń
|? _akcja='Usuń'
|| menu_txt(,'Usuń');
   {? exec('dopusc','dok_fks')
   || exec('dok_usun','dok_fks1')
   ?}
:: zakończ
|? _akcja='Zakończ'
|| _ref:=DOK.ref();
   {? var_pres('btnwwyw')>0 || exec('akceptuj','dok_fks1') ?};
   exec('zakoncz','!fks_dks_dark',_ref,~~,1,_autoakc)
|? _akcja='Wycofaj'
|| exec('anuluj','dok_fks',0)
:: busiensslink
|? _akcja='Businesslink2'
|| menu_txt(,'Popraw');
   {? var_pres('DOK',_in)>0
   || _ref:=BB.sqlint($_in.DOK); _nam:=form(($_in.DOK)-8);
      {? _ref<>0 & _nam<>''
      || DOK.cntx_psh(); DOK.prefix();
         {? DOK.seek(_ref,_nam)
         || BtnZak:=0;
            exec('popraw_zakoncz','!fks_dks_dark',~~)
         || FUN.emsg('Nie znaleziono dokumentu.'@)
         ?};
         DOK.cntx_pop()
      || FUN.emsg('Nie znaleziono dokumentu.'@)
      ?}
   ||  FUN.emsg('Nie znaleziono dokumentu.'@)
   ?}
:: webservice
|? _akcja='DołączMWA'
|| {? PAR_SKID.get(450)<>'N'
   || _webdok:=_args.context.WEB_DOK;
      WEB_DOK.cntx_psh();
      WEB_DOK.index('IDADD');
      WEB_DOK.prefix(_webdok);
      {? WEB_DOK.first()
      || _dok:=exec('add_rek','mwa_dok')
      ?};
      WEB_DOK.cntx_pop()
   ?};
   1
?};
ODD.f_clear();
VAR_DEL.delete('inAction');
~~


\popraw_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Poprawianie i kończenie dokumentu
::   WE: _a - _args.mp
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=~~ ?};
exec('dok_pop','!fks_dks_dark');
exec('desc_update','#b__box',DOK.uidref());
{? DOK.A='T'
|| _ref:=DOK.ref();
   DOK.cntx_psh(); DOK.prefix();
   {? type_of(_a)<>type_of(~~) & DOK.seek(_ref) & DOK.A='T' || _a.done() ?};
   DOK.cntx_pop()
?};
VAR_DEL.delete('BtnZak')


\add_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dołączanie dokumentów księgowych
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DARK';
_params.AKCJA:='Dołącz';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID);
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\put_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Poprawianie dokumentów księgowych
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DARK';
_params.AKCJA:='Popraw';
_params.UIDREF:=DOK.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'DOK',DOK.ref());
exec('mp_run','#b__box',_params)


\del_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Usuwanie dokumentów księgowych
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_DKS_DARK';
_params.UIDREF:=DOK.uidref();
_params.AKCJA:='Usuń';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'DOK',DOK.ref());
exec('mp_run','#b__box',_params)


\dok_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Trigger dla tabeli DOK - add przed i put przed
::   WE: _a - typ operacji: 1-add 2-put
::  OLD: \dok_trig/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_pres('_a')=type_of(0) || _a || -1 ?};
_czy_spr:=DOK.RVAT().RVAT().RT='S';
_czy_wdt:=6+RVAT.KVAT().SYM='_WWspD' | KVAT.SYM='_SprzNOp' | 6+KVAT.SYM='_WWspN';
{? DOK.SYM_ZEW='' || DOK.SYM_ZEW:=DOK.NK ?};
{? DOK.KOR_ZEW='' || DOK.KOR_ZEW:=DOK.KOR ?};
{? _typ=1
|| exec('set_dok_ksef','dok_ksef')
?};
{? exec('upgrade2325_blbc1','zbl') & (DOK.STATBC='' | DOK.STATBC=exec('check_none','zbl_stat') | DOK.STATBC=exec('check_check','zbl_stat'))
|| _statbc:='';
   {? _typ=2 || _statbc:=exec('set_dok_blc_stat','zbl') ?};
   DOK.STATBC:={? _statbc<>'' || _statbc || exec('set_dok_statbc','zbl') ?}
?};
{? DOK.A<>'T' & _typ=1
|| {? _czy_spr | _czy_wdt || exec('upd_dok_jpk_tp','dok_ksef') ?}
|? DOK.A<>'T' & _typ=2
|| _str:=DOK.JPK_PROC;
   {? HELPJPK.SLO_TYP<>'TD' & _str<>''
   || HELPJPK.SLO_WER:=exec('bl_js_wersja','jpk_v');
      JPK_SLO.cntx_psh();
      JPK_SLO.index('KOD'); JPK_SLO.prefix(HELPJPK.SLO_WER,'PROC_FAKS',);
      {? JPK_SLO.first()
      || {!
         |? _str:=exec('del_str','dok_ksef',_str,JPK_SLO.KOD);
            JPK_SLO.next()
         !}
      ?};
      JPK_SLO.cntx_pop()
   ?};
   {? DOK.PROC
   || _str:=exec('add_str','dok_ksef',_str,DOK.PROC().KOD)
   ?};
   {? DOK.JPK_PROC<>_str
   || DOK.JPK_PROC:=_str
   ?}
?};
{? _typ=2 || exec('chck_dsp_dok','dok_fks1') ?};
exec('mpp','jpk_v');
1


\poz_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Trigger dla tabeli POZ - add przed i put przed
::  OLD: \poz_trig/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZ.ID<>'' & POZ.SYM_ROK<>'' & POZ.SYM_ZEW=''
|| exec('poz_sym_zew','!fks_dks_dark')
?};
{? POZ.SYM_ZEW='' & POZ.ID<>''
|| POZ.SYM_ZEW:=POZ.ID
|? POZ.ID=''
|| POZ.SYM_ZEW:=''
?};
{? -POZ.STR='wn'
|| POZ.WN:=POZ.SUM;
   POZ.MA:=0
|| POZ.WN:=0;
   POZ.MA:=POZ.SUM
?};
{? POZ.SUMW<>0
|| {? POZ.STR='Ma'
   || POZ.MA_WAL:=POZ.SUMW;
      POZ.WN_WAL:=0
   || POZ.WN_WAL:=POZ.SUMW;
      POZ.MA_WAL:=0
   ?}
?};
DOK.cntx_psh();
POZ.DOK_ODD:=POZ.DOK().ODD;
POZ.DOK_REJ:=DOK.REJ;
POZ.SP_KS:=exec('sp_ks','!fks_dks_dark');
{? (POZ.SUM<0 & POZ.SP_V>0) | (POZ.SUM>0 & POZ.SP_V<0)
|| POZ.SP_V:=POZ.SP_V*(-1)
?};
DOK_REJ.cntx_psh();
{? ~(POZ.WAL=null | POZ.WAL=FINFO.NAROD)
|| POZ.SP_WYM:='N'
|? POZ.SP_WYM='N' & POZ.SP_KS='TT'
|| POZ.SP_WYM:='T'
|? POZ.SP_WYM<>'N' & POZ.SP_KS<>'TT'
|| POZ.SP_WYM:='N'
|? 'WZ'*POZ.SP_WYM & DOK.DOK_REJ().SP_PRZEL='T'
|| POZ.SP_WYM:='T'
|? POZ.SP_WYM=''
|| POZ.SP_WYM:={? POZ.SP_KS='TT' || 'T' || 'N' ?}
?};
DOK_REJ.cntx_pop();
POZ.DOKREJ:=DOK.DOK_REJ;
POZ.HAN:=DOK.HAN;
POZ.REJ:=DOK.REJ;
POZ.KH_KRISO:=DOK.KH_KRISO;
POZ.O_KRISO:=DOK.O_KRISO;
POZ.RB:=DOK.RB;
POZ.RB_V:=DOK.RB_V;
POZ.WYS:=DOK.WYS;
POZ.BANK:=DOK.BANK;
POZ.JORG:=DOK.JORG;
POZ.SP_PL:=DOK.SP_PL;
POZ.KRAJ:=DOK.KRAJ;
POZ.RVAT:=DOK.RVAT;
DOK.cntx_pop();
1


\sp_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Zwraca wartość pola POZ.SP_KS
::----------------------------------------------------------------------------------------------------------------------
KOM.cntx_psh();
KS.cntx_psh();
_ret:={? POZ.KOM().KS().ROZR='Z' || 'NN'
      |? KS.SP='T' || 'TT'
      |? 'NAL,ZOB'*POZ.TID>0 || 'TN'
      || 'NN'
      ?};
KS.cntx_pop();
KOM.cntx_pop();
_ret


\poz_sym_zew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Ustalenie pola POZ.SYM_ZEW
::  OLD: \poz_sym_zew/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_w:={? POZ.WAL=null || FINFO.NAROD || POZ.WAL ?};
_maska:=((POZ.name()-2)+2);
OP.cntx_psh(); OP.use('operac'+_maska);
OP.index('KON_O'); OP.prefix(_w,POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK);
POZ.SYM_ZEW:={? OP.first() || OP.SYM_ZEW || {? POZ.ID=POZ.DOK().NK || POZ.DOK().SYM_ZEW || POZ.ID ?}  ?};
OP.cntx_pop()


\op_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Trigger dla tabeli OP - add przed i put przed
::   WE:  _a  - 1 - przed add, 2 - przed put
::  OLD: \op_trig/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? OP.RATY='' || OP.RATY:='N' ?};
{? OP.SYM_ZEW='' || OP.SYM_ZEW:=OP.SYM ?};
OP.SWN:={? OP.WN>OP.MA || OP.WN-OP.MA || 0 ?};
OP.SMA:={? OP.MA>OP.WN || OP.MA-OP.WN || 0 ?};
exec('find_op_wal','!fks_dks_dark');
{? _a=1
|| opis_poz:='';odd_ksn:=0;
   exec('op_konta','konto',OP.AN,null,2);
   exec('ka_opis','konto');
   OP.AN_OPIS:=opis_poz;
   &opis_poz; &odd_ksn
?};
1


\op_del_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [23.25]
:: OPIS: Trigger dla tabeli OP - del przed
::       Formuła służy do wyczyszczenia informacji o usuwanym rozrachunku na bliźniaczym rozrachunku w innej walucie
::----------------------------------------------------------------------------------------------------------------------
_ref:=OP.ref();
OP.cntx_psh(); OP.index('KON_O2'); OP.prefix(OP.ODD,OP.AN,OP.SYM,OP.SYM_ROK);
{? OP.size()>1 & OP.first()
|| {! |?
      {? OP.ref()<>_ref
      || _ref:=null;
         OP.WAL_OB:=null();
         OP.SMA_WAL:=0;
         OP.SWN_WAL:=0;
         OP.MA_WAL:=0;
         OP.WN_WAL:=0;
         OP.trig_off('*','*');
         OP.put();
         OP.trig_on('*','*')
      ?};
      _ref & OP.next()
   !}
?};
OP.cntx_pop()


\be_odd_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed redakcją pola POMOC.ODDD
::----------------------------------------------------------------------------------------------------------------------
{? cur_nfld()='Jednostka księgowa'
|| exec('odd_filtr','fst')
|| ODD.prefix();
   ODD.f_clear();
   ODD.f_set('N,OD',
     'left join USERSDEP using(USERSDEP.DEPT,ODD.REFERENCE)',
     '(:_a=1 or USERSDEP.USERS=:_b) and ODD.FIRMA=:_c',Perm.hasFull('FJKS'),OPERATOR.USER,REF.FIRMA)
?};
~OPERATOR.DEPT &
(var_pres('czystart')>0 | (var_pres('czystart')<=0 & TREE_REJ.G_R='W'))


\ae_odd_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po redakcji pola POMOC.ODDD
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? ~POMOC.ODDD
|| __CHK.err_empty('Jednostka księgowa'@); _zwrot:=0
?};
{? _zwrot & ~exec('usr_fjks','b_perm',POMOC.ODDD().OD)
|| FUN.info('Brak uprawnień do jednostki księgowej: %1'@[POMOC.ODDD().OD]); _zwrot:=0
?};
{? _zwrot & POMOC.REJD
|| REJ.cntx_psh(); REJ.index('KOD'); REJ.prefix(SSTALE.AR,POMOC.ODDD);
   {? ~REJ.seek(POMOC.REJD) || POMOC.REJD:=null ?};
   REJ.cntx_pop()
?};
_zwrot


\be_rej_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed redakcją pola POMOC.REJD
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? POMOC.ODDD || POMOC.ODDD() || _zwrot:=0 ?};
{? _zwrot & var_pres('czystart')<=0
|| _zwrot:=(TREE_REJ.G_R='J' | TREE_REJ.G_R='W')
?};
_zwrot


\ae_rej_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Po redakcji pola POMOC.REJD
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? ~POMOC.REJD
|| __CHK.err_empty('Rejestr księgowy'@); _zwrot:=0
?};
{? _zwrot
|| {? POMOC.REJD<>POMOC.DZ().REJ
   || POMOC.DZ:=null
   ?};
   exec('bv_pom_dz','!fks_dks_dark')
?};
{? _zwrot & POMOC.D
|| DOK_REJ.cntx_psh(); DOK_REJ.index('NAZ'); DOK_REJ.prefix(POMOC.REJD);
   {? ~DOK_REJ.seek(POMOC.D) || POMOC.D:=POMOC.V:=null ?};
   DOK_REJ.cntx_pop()
?};
{? _zwrot & ~POMOC.D
|| DOK_REJ.cntx_psh(); DOK_REJ.index('NAZ'); DOK_REJ.prefix(POMOC.REJD);
   {? DOK_REJ.first()
   || {? ~DOK_REJ.next()
      || POMOC.D:=DOK_REJ.ref()
      || DOK_REJ.blank(1);
         DOK_REJ.REJ:=POMOC.REJD;
         DOK_REJ.DM:='T';
         {? DOK_REJ.find_rec()
         || POMOC.D:=DOK_REJ.ref()
         ?}
      ?}
   ?};
   DOK_REJ.cntx_pop()
?};
_zwrot


\be_dok_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed redakcją pola POMOC.D
::----------------------------------------------------------------------------------------------------------------------
POMOC.REJD


\vat_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: okienko przed redakcją pola POMOC.V
::  OLD: \vat_rodz/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.D().SLO().KOD='VAT' | POMOC.D().SLO().KOD='SAD'
|| {? ~POMOC.V
   || VAT_REJ.index('REJ_SYM');   VAT_REJ.prefix(POMOC.REJD);
      {? VAT_REJ.size()=1
      || VAT_REJ.first(); POMOC.V:=VAT_REJ.ref()
      || VAT_REJ.prefix();
         VAT_REJ.blank(1); VAT_REJ.REJ:=POMOC.REJD; VAT_REJ.DM:='T';
         {? VAT_REJ.find_rec() || POMOC.V:=VAT_REJ.ref() || POMOC.V:=null ?};
         VAT_REJ.prefix(POMOC.REJD)
      ?}
   ?}; 1
|| 0
?}


\bl_drej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Wartosc poczatkowa pola DOK.REJ
::  OLD: \bl_drej/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? -(6+menu_txt(,))<>'szukaj' || REJ.ref() || null ?}


\pored_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BL [7.60]
:: OPIS: formula po redakcji pola REJ (typu REJ)
::  OLD: \pored_r/skid.fml
::  OLD: \aerejdok/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__tagvpztip')>0 || VAR_DEL.delete('__tagvpztip'); win_disp() ?};
{? DOK.REJ<>null
|| {? DOK.DOK_REJ<>null
   || DOK_REJ.cntx_psh();
      _naz:=DOK.DOK_REJ().NAZ;
      DOK_REJ.index('NAZ'); DOK_REJ.prefix(DOK.REJ,_naz);
      {? ~(DOK_REJ.first() & DOK_REJ.NAZ=_naz) || DOK.DOK_REJ:=null ?};
      DOK_REJ.cntx_pop()
   |? var_pres('dob_dek')>0 & DOK.DOK_REJ=null
   || DOK_REJ.cntx_psh();
      DOK_REJ.index('NAZ'); DOK_REJ.prefix(DOK.REJ);
      {? DOK_REJ.first()
      || _znal:=0;
         {! |?
            {? DOK_REJ.DM='T' || _znal:=1 ?};
            ~_znal & DOK_REJ.next()
         !};
         {? _znal || DOK.DOK_REJ:=DOK_REJ.ref() ?}
      ?};
      DOK_REJ.cntx_pop()
   ?};
   {? DOK.RVAT<>null
   || VAT_REJ.cntx_psh();
      _rvat:=DOK.RVAT().RVAT;
      VAT_REJ.index('REJ_VREF'); VAT_REJ.prefix(DOK.REJ,_rvat);
      {? ~VAT_REJ.first() || DOK.RVAT:=null ?};
      VAT_REJ.cntx_pop()
   |? var_pres('dob_dek')>0 & DOK.RVAT=null
   || VAT_REJ.cntx_psh();
      VAT_REJ.index('REJ_VREF'); VAT_REJ.prefix(DOK.REJ);
      {? VAT_REJ.first()
      || _znal:=0;
         {! |?
            {? VAT_REJ.DM='T' || _znal:=1 ?};
             ~_znal & VAT_REJ.next()
         !};
         {? _znal || DOK.RVAT:=VAT_REJ.ref() ?}
      ?};
      VAT_REJ.cntx_pop()
   ?};
   {? var_pres('dob_dek')>0 & VPOZ.GRVAT<>null
   || _grvat:=VPOZ.GRVAT().GRVAT;
      GR_VAT.cntx_psh();
      GR_VAT.index('REJ_GR'); GR_VAT.prefix(DOK.REJ,_grvat);
      {? GR_VAT.first() || VPOZ.GRVAT:=GR_VAT.ref() || VPOZ.GRVAT:=null ?};
      GR_VAT.cntx_pop()
   ?};
   {? DOK.DZ().REJ<>DOK.REJ || DOK.DZ:=null ?};
   1
|| FUN.info('Nie wybrano rejestru księgowego.'@); 0
?}


\bl_ddrej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: wartosc poczatkowa pola DOK.DOK_REJ
::  OLD: \bl_ddrej/skid.fml
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.ref()


\pre_d_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [BL] [7.60]
:: OPIS: Formula przed redakcja pola DOK.DOK_REJ
::  OLD: \pre_d_r/skid.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__tagvpztip'); DOK.REJ


\pocz_nrd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wart. pocz. DOK.NR
::   WY: kolejny numer w rejestrze
::  OLD: \pocz_nrd/skid.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? DOK.REJ<>null
|| DOK.REJ();
   DOK.cntx_psh();
   DOK.index('REJ'); DOK.prefix(REJ.ref());
   _wyn:={? DOK.last() || DOK.NR || 0 ?}+1;
   DOK.cntx_pop()
?};
_wyn


\numdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009+]
:: OPIS: Po redakcji i na F3 dla pola DOK.NR
::   WE: _a - 1 - po redakcji
::            2 - na F3
::  OLD: \numdok/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? (-(6+menu_txt(,))<>'szukaj')
|| _sel:={? _a=1 || 0 || DOK.NR ?};
   _popraw:=-menu_txt(,)='popraw' | var_press('dolndok')>0 & dolndok=1;
   {? DOK.REJ<>null
   || _nrdok:=DOK.NR;
      DOK.cntx_psh(); DOK.index('REJ'); DOK.prefix(DOK.REJ);
      _dalej:=1;
      {? _a=1 & DOK.NR=0 || FUN.info('Nie wprowadzono numeru dokumentu w rejestrze.'@); _dalej:=-1 ?};
      {? _a=1 & _dalej>0 & DOK.NR<0
      || FUN.info('Numer dokumentu w rejestrze musi być większy od zera.'@); _dalej:=-1
      ?};
      {? _a=1 & _dalej>0
      || {? _popraw || _ref:=DOK.ref() ?};
         DOK.cntx_psh();
         {? DOK.find_key(DOK.NR) & (~_popraw | DOK.ref()<>_ref) & ~(var_pres('obdekredi')>0 & obdekredi=1)
         || _dalej:=FUN.choice('W rejestrze %1 ( %2)\nistnieje już dokument o numerze %3.'@[DOK.REJ().KOD,DOK.ODD().OD,$_nrdok],,'Kontynuuj'@);
            {? _dalej=0 || _dalej:=-1 ?}
         ?};
         DOK.cntx_pop()
      ?};
      {? _dalej>0 & DOK.first() & ((_a=1 & ~_popraw & PAR_SKID.get(32)='T') | _a=2)
      || NULL_NUM:=tab_tmp(1,'NOD','INTEGER','Od numeru'@,
                             'NDO','INTEGER','Do numeru'@
                           );
         _num:=0; _ok_num:=0;
         {! |?
            {? DOK.NR<>(_num+1)
            || NULL_NUM.NOD:=_num+1; NULL_NUM.NDO:=DOK.NR-1; NULL_NUM.add();
               {? _a=1 || _ok_num:=(_nrdok>=NULL_NUM.NOD & _nrdok<=NULL_NUM.NDO) ?}
            ?};
            _num:=DOK.NR;
            ~_ok_num & DOK.next()
         !};
         {? ~_ok_num & NULL_NUM.first()
         || _wys:={? NULL_NUM.size()<25 || NULL_NUM.size()+3 || 25 ?};
            _wer:=NULL_NUM.mk_sel('Przerwy w numeracji w rejestrze %1 (%2)'@[DOK.REJ().KOD,DOK.ODD().OD],
                                  'P',0,'null_num_wer',,,_wys,,'U');
            NULL_NUM.win_fld(_wer,,'NOD',,,32);
            NULL_NUM.win_fld(_wer,,'NDO',,,32);
            NULL_NUM.win_sel(_wer);
            NULL_NUM.win_act(_wer,,'Formuła','Wybierz'@@,,'Wybór pierwszego brakującego numeru'@,,"sel_exit()",1,,,,'W');
            {? NULL_NUM.select() || _sel:=NULL_NUM.NOD || _dalej:=-2 ?}
         || {? _a=2 || FUN.info('Brak proponowanych numerów w rejestrze, ponieważ nie ma luk w numeracji.'@) ?}
         ?};
         VAR_DEL.delete('NULL_NUM')
      ?};
      DOK.cntx_pop();
      {? _sel || DOK.NR:=_sel ?}
   ?};
   {? _a=1
   || _dalej<>-1
   || {? _dalej=-2 || '' || _sel ?}
  ?}
|| 0
?}


\pr_nk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: po redakcji DOK.NK
::  OLD: \pr_nk/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.SYM_ZEW='' | (DOK.DOK_REJ().EDSYMZEW<>'T' & DOK.DOKZRODL='' & DOK.EDOKUM='')
|| DOK.SYM_ZEW:=DOK.NK;
   {? var_press('beNkSymZew')>0 & beNkSymZew<>DOK.SYM_ZEW
   || {? var_pres('ok_nk')>=0 || &ok_nk ?}
   ?}
?};
{? DOK.DOK_REJ().EDSYMZEW<>'T'
|| exec('spr_nk','dok_fks',1)
|| 1
?}


\wz_zrod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [$7.60]
:: OPIS: Ustawianie slownika dla zrodla pochodzenia
::  OLD: \wz_zrod/wzorce.fml
::----------------------------------------------------------------------------------------------------------------------
exec('nag_por','!fks_dks_dark'); ''


\nag_por
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Do obslugi zrodla pochodzenia dokumentu
::       funkcja obsluguje pole zrodlo pochodzenia, ktore redaguje sie w naglowku
::       dokumentu zrodlowego. Funkcja ustawia prefix na wybrany slownik uzytkownika
::  OLD: \nag_por/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
SLUAPPL.cntx_psh(); SLUAPPL.index('POM'); SLUAPPL.prefix('F','T');
SLO.index('SL'); SLO.prefix();
{? +SLOSLU.SLSLU
||  {? SLUAPPL.find_key(SLOSLU.SLSLU)
    || SLOSLU.SLSLU:=SLUAPPL.SLU().NAZ;
       {? DOK.WYS().SLU().NAZ<>SLUAPPL.SLU().NAZ || DOK.WYS:=0 ?};
       SLO.prefix(SLUAPPL.SLU)
    || SLUAPPL.win_sel('SLO');
       {? SLUAPPL.select()
       || SLOSLU.SLSLU:=SLUAPPL.SLU().NAZ;
          DOK.WYS:=0;
          SLO.prefix(SLUAPPL.SLU)
       || DOK.WYS:=0; SLOSLU.SLSLU:=''
       ?}
    ?}
|| DOK.WYS:=0; SLOSLU.SLSLU:='';
   OPER.DOTYCZY:=null()
?};
SLU.cntx_psh();
exec('bed_wys','dok_fks1');
win_disp();
SLU.cntx_pop();
SLUAPPL.cntx_pop()


\dok_poc1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed redakcją pola DOK.WYS
::  OLD: \dok_poc1/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
SLOSLU.ZAP_SLO:=DOK.WYS;
{? +SLOSLU.SLSLU & (var_pres('__KORNAG')<=0 | POMOC.KNAG=1 | cur_tfld()=DOK)
|| SLUAPPL.index('NAZ');
   SLUAPPL.prefix('F');
   {? SLUAPPL.find_key(SLOSLU.SLSLU) & (SLUAPPL.SLU().NAZ=SLOSLU.SLSLU)
   || KH.win_sel('WER');  OS.win_sel('WER');
      WAL.win_sel('WALUTY'); WAL.win_dict('WALUTYF3');
      WAL.win_edit('WALUTA'); WAL.win_patt('SZUK');
      _v:=0;
      SLUAPPL.SLU();
      {? (1+SLOSLU.SLSLU='~')
      || SLO.win_dict('ONE'); SLO.win_sel('ONE')
      || RS.index('RS'); RS.prefix();
         {? RS.find_key(SLU.WZ)
         || {? RS.TAB='UDT' || _v:=1
            |? RS.TAB='KH' || _v:=2
            ?}
         ?};
         SLO.win_dict('ONE'); SLO.win_sel('ONE')
      ?};
      SLO.hdr_sel();
      SLO.hdr_sel(SLOSLU.SLSLU);
      exec('be_edok_fld','dok_fks1')
   || FUN.info('Nie znaleziono słownika "%1".'@[SLOSLU.SLSLU]);  0
   ?}
|| 0
?}


\aedokwys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [8.40]
:: OPIS: Po redagowaniu pola DOK.WYS
::  OLD: \aedokwys/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_v:=DOK.DOK_REJ().SLO().KOD;
_s:=DOK.RVAT().RVAT().KVAT().SYM;
_ok:=1; _kh:=0;
{? _v='VAT' | _v='SAD' | _v='WEW'
|| {? RS.index('RS'); RS.prefix(); RS.find_key(DOK.WYS().SLU().WZ)
   || {? RS.TAB='KH'
      || KH.index('KOD');
         KH.prefix(2);
         _kh:=KH.find_key(SLO.KOD);
         {? _kh || _naz:=KH.NAZ_P; _skr:=KH.SKR; {? DOK.GVKHSTAT='N' | (var_press('beKH')<=0 | beKH<>_skr)
                                                 || DOK.GVKHSTAT:=exec('grvat_typ_kh','kontrahent',KH.ref(),DOK.DTO)
                                                 ?} ?}
      ?}
   ?};
   {? _v='WEW' & fld<>null
   || {? (exec('grvat_typ_kh','kontrahent',KH.ref(),DOK.DTO))<>'CW'
      || FUN.info('Niedozwolony wybór kontrahenta.\n'
                 +'Dla tego typu dokumentu nie można wybrać kontrahenta nie należącego do grupy VAT licencjobiorcy.'@);
         _ok:=0
      ?}
   ?};
   {? _v<>'WEW' & fld<>null
   || {? DOK.GVKHSTAT='CZ'
      || FUN.info('Niedozwolony wybór kontrahenta.\n'
                 +'Dla tego typu dokumentu nie można wybrać kontrahenta należącego do grupy VAT.'@);
         _ok:=0
      |? DOK.GVKHSTAT='CW'
      || FUN.info('Niedozwolony wybór kontrahenta.\n'
              +'Dla tego typu dokumentu nie można wybrać kontrahenta należącego do grupy VAT licencjobiorcy.'@);
      _ok:=0
      ?}
   ?};
   {? SLOSLU.ZAP_SLO=null | SLOSLU.ZAP_SLO<>DOK.WYS | (_kh & (_naz<>DOK.KH_FULL | _skr<>DOK.KH))
   || {? _kh & fld<>null & 1+_s='_' & _s+1<>'w'
      || {? KH.TYP<>'U' & (g_dokkh2[1]<>DOK.KH | DOK.KH='')
         || _ok:=FUN.ask('Kontrahent nie jest Podatnikiem VAT UE.\nKontynuować?'@)
         ?}
      ?};
      _st:={? _kh & (_naz<>DOK.KH_FULL | _skr<>DOK.KH) & SLOSLU.ZAP_SLO<>null & SLOSLU.ZAP_SLO=DOK.WYS & PAR_SKID.get(120)<>DOK.WYS().KOD
           || FUN.ask('Dane w zakładce "Kontrahent" są niezgodne z kartoteką kontrahentów.\nCzy zmienić je zgodnie z kartoteką kontrahentów?'@)
           || 1
           ?};
      {? _ok & fld()<>0
      || {? _kh
         || {? PAR_SKID.get(120)<>DOK.WYS().KOD | (DOK.KH='' & DOK.NIP='')
            || {? 1+_s='_' || DOK.NIP:=exec('jak_nue','kontrahent',DOK.NIP) || DOK.NIP:=KH.NIP ?};
               {? 1+_s='_' || g_dokkh2[1]:=KH.SKR ?};
               DOK.KH:=KH.SKR;
               {? _st
               || DOK.KH_FULL:=KH.NAZ_P;
                  DOK.KH_KRAJ:=KH.KRAJ; DOK.KH_KRISO:=KH.KRAJISO;
                  DOK.MIASTO:=KH.MIASTO;
                  DOK.UL:=KH.UL;
                  DOK.DOM:=KH.DOM;
                  DOK.LOKAL:=KH.LOKAL;
                  DOK.POCZ:=KH.POCZ;
                  DOK.KPOCZ:=KH.KPOCZ;
                  exec('clear_dok_rb','!fks_dks_dark')
               ?}
            ?};
            {? _v='WEW' || DOK.NIP:='' ?};
            _dsv:=exec('slimvat','dok_fks');
            {? exec('kor_spr','dok_fks',1) & _dsv<>date(0,0,0) & DOK.DTO>=_dsv
            || {? exec('slimkh','dok_fks')
               || DOK.D4:=DOK.DTO; exec('be_okrvt','dok_fks',1)
               || {? DOK.D4<>date(0,0,0) & DOK.OKRVAT<>null & (var_press('beKH')<=0 | beKH<>DOK.KH)
                  || _ok:=FUN.ask('Kontrahent został zmieniony na takiego, który nie ma umowy o SLIM VAT.\nZachować wprowadzoną datę otrzymania \ni związany z nią okres rozliczenia VAT dla korekty?'@);
                     {? ~_ok
                     || DOK.D4:=date(0,0,0); PARAM.OKROVAT:=''; DOK.OKRVAT:=null; _ok:=1
                     ?}
                  ?}
               ?}
            ?};
            {? DOK.HAN=null || DOK.HAN:=__War_f('KH_DOD','HAN',KH.ref) ?};
            {? DOK_REJ.PR<>'T' & DOK.SP_PL=null
            || DOK.SP_PL:=KH.PLATNOSC; exec('be_dplat','dok_fks')
            ?}
         ?}
      ?};
      DOK.KH_ODB:=null(); exec('ae_dokodb','dok_fks1');
      win_disp()
   ?}
::Poczatek modyfikacji dla Maclex Fiks 12-10-2009 AK [1120]
|? MLEX_OKN.CZY_RBAN='T' & DOK.WYS<>null & DOK.WYS().SLU().WZ='Kontrahent'
|| {? RS.index('RS'); RS.prefix(); RS.find_key(DOK.WYS().SLU().WZ)
   || {? RS.TAB='KH' || KH.index('KOD'); KH.prefix(2); _kh:=KH.find_key(SLO.KOD) ?}
   ?};
   {?_kh || DOK.KH:=KH.SKR ?}; win_disp()
::Koniec modyfikacji dla Maclex
?};
{? DOK.DOK_REJ().KOR_NAG='T' & exec('get','#params',300230,2)='T' & DOKN.NIP1<>DOK.NIP
|| FUN.info('Niedostępna zmiana NIP kontrahenta w ramach korekty nagłówkowej.'@);
   _ok:=0
?};
{? DOK.KH=''
|| DOK.efld_opt(DOK.win_edit('?'),'enable=0, editable=0',DOK,'RB');
   DOK.efld_opt(DOK.win_edit('?'),'enable=0, editable=0',DOK,'RB_V'); win_disp()
|| DOK.efld_opt(DOK.win_edit('?'),'enable=1, editable=1',DOK,'RB');
   DOK.efld_opt(DOK.win_edit('?'),'enable=1, editable=1',DOK,'RB_V'); win_disp()
?};
_ok


\f3dokop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009+]
:: OPIS: Na klawisz F3 w polu DOK.TR
::  OLD: \f3dokop/skid.fml
::----------------------------------------------------------------------------------------------------------------------
DOKOPISY.index('UNIK'); DOKOPISY.prefix();
{? DOKOPISY.first() & DOK.TR<>'' || DOKOPISY.find_key(DOK.TR) ?};
DOKOPISY.win_sel('WER');
{? DOKOPISY.select(,1) || DOK.TR:=DOKOPISY.OPIS ?}


\dok_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.70]
:: OPIS: Formula przed redakcja pola DOK.WAL
::  OLD: \dok_wal/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
VAR_DEL.delete('bbankfunc');
exec('czytaj','#stalesys',,XINFO,'SLWAL');
{? ~XINFO.SLWAL
|| FUN.info('Nie ustalono słownika walut w parametrach pracy programu.'@); _ok:=0
|| {? -menu_txt(,)='popraw' | -menu_txt(,)*'automatycznie'
   || VPOZ.cntx_psh();
      VPOZ.index('VDOK');
      {? -menu_txt(,)='popraw'
      || VPOZ.prefix(DOK.ref())
      || VPOZ.prefix(dok)
      ?};
      _ok:=~VPOZ.first();
      VPOZ.cntx_pop();
      _ok
   ?}
?};
{? _ok || exec('slo_slu2','slo_slu',FINFO.SLWAL().SLU().NAZ,'ONE'); exec('be_edok_fld','dok_fks1') ?}


\dok_bank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Formula przed redakcja pola DOK.BANK
::  OLD: \dok_bank/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? FINFO.SLBANK<>null
|| exec('slo_slu2','slo_slu',FINFO.SLBANK().SLU().NAZ,'ONE');
   {? var_pres('bbankfunc')<=0 | bbankfunc<>1
   || DOK.BANK:=FINFO.B_WYDR;
      TKRS.cntx_psh();
      TKRS.index('TKRS_DT'); TKRS.prefix(DOK.BANK); _v:=TKRS.size();
      {? TKRS.first()
      || _r:=TKRS.BANK; TKRS.prefix(_r);
         {? _v=TKRS.size() || DOK.BANK:=TKRS.BANK ?}
      ?};
      TKRS.cntx_pop()
   ?};
   exec('be_edok_fld','dok_fks1');
   win_disp()
|| 0
?}


\ae_bank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [8.10]
:: OPIS: Po redakcji pola DOK.BANK
::  OLD: \ae_bank/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('bbankfunc');
bbankfunc:=1;
{? DOK.BANK().KOD='' | DOK.BANK().TR=''  || DOK.BANK:=null ?};
{? DOK.BANK=null
|| DOK.TRKS_V:=DOK.TKRS:=null;
   DOK.TYPKRS:=''; exec('kursopis','dok_fks');
   DOK.efld_opt(DOK.win_edit('?'),'enable=0, editable=0',DOK,'TYPKRS');
   DOK.efld_opt(DOK.win_edit('?'),'enable=0, editable=0',DOK,'TRKS_V');
   DOK.efld_opt(DOK.win_edit('?'),'enable=0, editable=0',DOK,'TKRS');
   DOK.efld_opt(DOK.win_edit('?'),'enable=0, editable=0',POMOC,'KURSOPIS');
   win_disp()
|| {? DOK.TYPKRS=''
   || DOK.TYPKRS:=FINFO.KURS_TYP
   ?};
   {? DOK.TKRS<>null
   || _ref:=DOK.TKRS;
      TKRS.cntx_psh();
      TKRS.index('TKRS_DT'); TKRS.prefix(DOK.BANK,FINFO.NAROD);
      {? ~TKRS.seek(_ref) || DOK.TKRS:=null ?};
      TKRS.cntx_pop()
   ?};
   DOK.efld_opt(DOK.win_edit('?'),'enable=1, editable=1',DOK,'TYPKRS');
   DOK.efld_opt(DOK.win_edit('?'),'enable=1, editable=1',POMOC,'KURSOPIS');
   DOK.efld_opt(DOK.win_edit('?'),'enable=1, editable=1',DOK,'TRKS_V');
   DOK.efld_opt(DOK.win_edit('?'),'enable=1, editable=1',DOK,'TKRS');
   win_disp()
?};
1


\wz_tkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wzorzec dla pola DOK.TKRS
::  OLD: \wz_tkrs/skid.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.WAL_TKRS:=FINFO.NAROD;
''


\dk_typk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Przed redakcją pola DOK.TYPKRS
::  OLD: \dk_typk/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.BANK<>null
|| {? DOK.TYPKRS=''
   || DOK.TYPKRS:=FINFO.KURS_TYP
   ?};
   1
?}


\typ_kurs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Po redakcji pola DOK.TYPKRS
::  OLD: \typ_kurs/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.TYPKRS:=~(-fld);
_zwrot:={? DOK.TYPKRS<>'' & DOK.TYPKRS<>'K' & DOK.TYPKRS<>'S' & DOK.TYPKRS<>'R'
        || FUN.info('Błędna wartość typu kursu. Dopuszczalne wartości: \n'
                    '   S - Sprzedaż \n K - Kupno \n R - śRedni.'@); 0
        || 1
        ?};
exec('kursopis','dok_fks');
_zwrot


\pocz_dtw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wart. pocz. DOK.DTW
::  OLD: \pocz_dtw/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? date()>=SSTALE.AO().POCZ & date()<=SSTALE.AO().KON
|| date()
|? POMOC.DT>=SSTALE.AO().POCZ & POMOC.DT<=SSTALE.AO().KON
|| POMOC.DT
|? date()>SSTALE.AO().KON
|| SSTALE.AO().KON
|? date()<SSTALE.AO().POCZ
|| SSTALE.AO().POCZ
?}


\por_dtw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: po redakcji pola DOK.DTW
::  OLD: \por_dtw/skid.fml
::----------------------------------------------------------------------------------------------------------------------
1


\bedvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Przed wyswietl dla pol zwiazanych z VAT w naglowku dokumentu (DOK)
::  OLD: \bedvat/skid.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.efld_opt(DOK.win_edit('?'),'mark=1',DOK,'NIP');
DOK.efld_opt(DOK.win_edit('?'),'mark=0',DOK,'SP_PL');
{? DOK.WYS
|| RS.cntx_psh(); RS.index('RS'); RS.prefix();
   {? RS.find_key(DOK.WYS().SLU().WZ)
   || {? RS.TAB='KH'
      || KH.index('KOD'); KH.prefix(2);
         {? KH.find_key(SLO.KOD)
         || {? KH.TYP='I'
            || DOK.efld_opt(DOK.win_edit('?'),'mark=0',DOK,'NIP')
            ?}
         ?}
      ?}
   ?};
   RS.cntx_pop()
?};
DOK.RVAT().RVAT();
_result:={? RVAT.CZY_ZM='T'
         || {? -menu_txt(,)='popraw'
            || VPOZ.index('VDOK');
               VPOZ.prefix(DOK.ref);
               _ok:=~VPOZ.first()
            || _ok:=1
            ?};
            {? _ok || SLO.win_dict('ONE'); exec('prz_kraj','nipyue') ?}
         || 0
         ?};
_wyn:={? _result || exec('be_edok_fld','dok_fks1') || 0 ?};
{? DOK.win_edit('?')<>''
|| {? ~_wyn
   || DOK.efld_opt(DOK.win_edit('?'),'editable=grayed',DOK,'KRAJ')
   || DOK.efld_opt(DOK.win_edit('?'),'editable=1, mark=1',DOK,'KRAJ')
   ?}
?};
{? cur_afld()='JORG'
|| _ok:=1;
   {? var_press('PROCED',DOK)>0 & DOK.PROC<>null()
   || SLU.index('NAZ');
      SLU.prefix();
      SLU.find_key('WALUTY');
      _ok:=1;
      {? -menu_txt(,)='popraw' | -menu_txt(,)*'automatycznie'
      || VPOZ.cntx_psh();
         VPOZ.index('VDOK');
         {? -menu_txt(,)='popraw'
         || VPOZ.prefix(DOK.ref())
         || VPOZ.prefix(dok)
         ?};
         _ok:=~VPOZ.first();
         VPOZ.cntx_pop()
      ?}
   || _ok:=0
   ?};
   {? _ok=0
   || DOK.efld_opt(DOK.win_edit('?'),'editable=grayed',,'JORG')
   || DOK.efld_opt(DOK.win_edit('?'),'editable=1',,'JORG')
   ?}
?};
{? DOK.DOK_REJ<>null & (DOK.DOK_REJ().SLO().KOD='VAT' | SLO.KOD='SAD' | SLO.KOD='WEW') || '' || exec('findfnv','#color') ?}


\vat_nip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed redakcją pola DOK.NIP
::  OLD: \vat_nip/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.DOK_REJ().KOR_NAG='T' & cur_tfld()=DOKN
|| exec('vat_nip','knag')
|| {? exec('czy_obwl','dok_fks')
   || 1
   |? form(cur_tfld.NIP)=''
   || _v:=1;
      {? cur_tfld.WYS<>null || _v_kod:=cur_tfld.WYS().KOD || _v_kod:='' ?};
      {? cur_tfld.KH<>''
      || {? +cur_tfld.KH<11 & (KH.index('SKR'); KH.prefix(2,cur_tfld.KH); KH.first())
         || {! |? {? KH.KOD=_v_kod || _v:=2 ;0 || KH.next() ?} !}
         || {? _v_kod<>'' || _v:=2 || _v:=0 ?}
         ?}
      || {? _v_kod<>'' || _v:=2 || _v:=0 ?}
      ?};
      {? _v=2
      || _t:=cur_tfld.WYS().SLU().WZ;
         {? RS.index('RS'); RS.prefix(); RS.find_key(_t)
         || {? RS.TAB='KH'
            || {? KH.index('KOD');KH.prefix(2); KH.find_key(SLO.KOD)
               || KH.prefix(2,KH.KOD)
               ?}
            ?}
         ?}
      ?};
      {? _v & KH.first()
      || cur_tfld.NIP:={? KH.TYP='R' | KH.TYP='I'
                       || {? KH.NIP<>'' || KH.NIP || KH.PESEL ?}
                       || {? cur_tfld()=DOKN | 1+DOK.RVAT().RVAT().KVAT().SYM<>'_'
                          || KH.NIP
                          || exec('jak_nue','kontrahent')
                          ?}
                       ?}
      ?}; 1
    || 1
    ?}
?};
{? var_pres('__KORNAG')<=0 | POMOC.KNAG=1 | cur_tfld()=DOK || exec('be_edok_fld','dok_fks1') || 0 ?}


\f3kontra
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: obsluga F3 dla DOK.NIP
::  OLD: \f3kontra/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
exec('f3_kontr','kontrahent',2)


\rpodokop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009+]
:: OPIS: Po redakcji stalego opisu operacji dokumentu
::  OLD: \rpodokop/skid.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? DOKOPISY.OPIS=''
|| FUN.info('Nie wprowadzono stałego opisu operacji.'@); _zwrot:=0
|| {? -menu_txt(,)='popraw' || _ref:=DOKOPISY.ref() ?};
   DOKOPISY.cntx_psh();
   DOKOPISY.index('UNIK'); DOKOPISY.prefix(DOKOPISY.OPIS,DOKOPISY.OPIS);
   {? DOKOPISY.first() & {? -menu_txt(,)='popraw' || DOKOPISY.ref()<>_ref || 1 ?}
   || FUN.info('Istnieje już taki stały opis operacji.'@); _zwrot:=0
   ?};
   DOKOPISY.cntx_pop()
?};
_zwrot


\vat_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed redakcją KH w tabeli DOK (i DOKN)
::  OLD: \vat_kh/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('beKH');
{? var_press('beKH')<=0
|| beKH:={? DOK.DOK_REJ().KOR_NAG='T' & cur_tfld()=DOKN
         || cur_tfld.KH1
         || cur_tfld.KH
         ?}
?};
{? exec('czy_obwl','dok_fks') | (PAR_SKID.get(120)=DOK.WYS().KOD & PAR_SKID.get(24)='T')
|| 0
|| {? DOK.DOK_REJ().WEW<>'N' & beKH<>''
   || 1
   |? beKH='' | (KH.index('SKR'); KH.prefix(2); KH.find_key(beKH,beKH))
   || _t:={? DOK.DOK_REJ().KOR_NAG='T' & cur_tfld()=DOKN || cur_tfld.WYS1().SLU().WZ || cur_tfld.WYS().SLU().WZ ?};
      RS.index('RS'); RS.prefix();
      {? RS.find_key(_t)
      || {? RS.TAB='KH'
         || {? KH.index('KOD');KH.prefix(2); KH.find_key(SLO.KOD)
            || {? DOK.DOK_REJ().KOR_NAG='T' & cur_tfld()=DOKN || cur_tfld.KH1:=KH.SKR || cur_tfld.KH:=KH.SKR ?}
            ?}
         ?}
      ?}
   ?}; 1
?};
{? var_pres('__KORNAG')<=0 | POMOC.KNAG=1 | cur_tfld()=DOK || exec('be_edok_fld','dok_fks1') || 0 ?}


\f3kontrb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: Obsluga F3 dla DOK.KH
::  OLD: \f3kontrb/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK_REJ.SLO().KOD='WEW'
|| exec('kh_cw_sel','kontrahent')
|| exec('f3_kontr','kontrahent',5)
?}


\ae_dokkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.60]
:: OPIS: Po redakcji pola DOK.KH
::  OLD: \ae_dokkh/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1; _CzyWew:=DOK_REJ.SLO().KOD='WEW';
{? DOK.KH<>''
|| DOK.efld_opt(DOK.win_edit('?'),'enable=1, editable=1',DOK,'RB');
   DOK.efld_opt(DOK.win_edit('?'),'enable=1, editable=1',DOK,'RB_V');
   win_disp();
   _v:=1;
   {? DOK.WYS<>null || _v_kod:=DOK.WYS().KOD || _v_kod:='' ?};
   {? _CzyWew & DOK.KH<>''
   || KH.index('SKR'); KH.prefix(2);
      _kh:=KH.find_key(DOK.KH,DOK.KH);
      {? _kh & KH.SKR=DOK.KH
      || _naz:=KH.NAZ_P; _skr:=KH.SKR;
         {? DOK.GVKHSTAT='N' | (var_press('beKH')<=0 | beKH<>_skr)
         || DOK.GVKHSTAT:=exec('grvat_typ_kh','kontrahent',KH.ref(),DOK.DTO)
         ?};
         {? DOK.GVKHSTAT<>'CW'
         || FUN.info('Niedozwolony wybór kontrahenta.\n'
                    +'Dla tego typu dokumentu nie można wybrać kontrahenta nie należącego do grupy VAT licencjobiorcy.'@);
              return(0)
         ?}
      || FUN.info('Nie znaleziono kontrahenta o skrócie %1.'@[DOK.KH]); DOK.KH:=''; _v:=_ok:=0
      ?}
   |? DOK.KH<>''
   || {? KH.index('SKR'); KH.prefix(2,DOK.KH); KH.first() & +DOK.KH<11
      || {! |? {? KH.KOD=_v_kod || _v:=2; 0 || KH.next() ?} !}
      ?}
   || {? _v_kod<>'' || _v:=2 || _v:=0 ?}
   ?};
   {? _v=2
   || _t:=DOK.WYS().SLU().WZ;
      {? RS.index('RS'); RS.prefix(); RS.find_key(_t)
      || {? RS.TAB='KH'
         || {? KH.index('KOD'); KH.prefix(2); KH.find_key(SLO.KOD)
            || KH.prefix(2,KH.KOD)
            ?}
         ?}
      ?}
   ?};
   {? _v & +DOK.KH<11
   || {? _CzyWew=0
      || {? KH.first() & 1+DOK.RVAT().RVAT().EWID().KOD='_'
         || {? KH.TYP<>'U' & g_dokkh2[1]<>DOK.KH
            || _ok:=FUN.ask('Kontrahent nie jest Podatnikiem VAT UE.\nKontynuować'@);
               g_dokkh2[1]:=DOK.KH
            ?}
         ?}
      ?};
      {? _ok
      || exec('fdokwys','dok_fks','kh');
         {? DOK.KH<>KH.SKR || DOK.KH:=KH.SKR ?};
         {? var_press('beKH')<=0 | beKH<>DOK.KH
         || DOK.KH_FULL:=KH.NAZ_P;
            DOK.KH_KRAJ:=KH.KRAJ; DOK.KH_KRISO:=KH.KRAJISO;
            DOK.MIASTO:=KH.MIASTO;
            DOK.UL:=KH.UL;
            DOK.DOM:=KH.DOM;
            DOK.LOKAL:=KH.LOKAL;
            DOK.POCZ:=KH.POCZ;
            DOK.KPOCZ:=KH.KPOCZ;
            exec('clear_dok_rb','!fks_dks_dark')
         ?};
        _dsv:=exec('slimvat','dok_fks');
        {? exec('kor_spr','dok_fks',1) & _dsv<>date(0,0,0) & DOK.DTO>=_dsv
        || {? exec('slimkh','dok_fks')
           || DOK.D4:=DOK.DTO; exec('be_okrvt','dok_fks',1)
           || {? DOK.D4<>date(0,0,0) & DOK.OKRVAT<>null & (var_press('beKH')<=0 | beKH<>DOK.KH)
              || _ok:=FUN.ask('Kontrahent został zmieniony na takiego, który nie ma umowy o SLIM VAT.\nZachować wprowadzoną datę otrzymania \ni związany z nią okres rozliczenia VAT dla korekty?'@);
                 {? ~_ok
                 || DOK.D4:=date(0,0,0); PARAM.OKROVAT:=''; DOK.OKRVAT:=null; _ok:=1
                 ?}
              ?}
           ?}
        ?};
        exec('be_dokrb','rachunki')
      ?}
   ?}
|? _CzyWew
|| FUN.info('Dla dokumentu wewnętrznego kontrahent musi być wybrany.'@); _ok:=0
|| DOK.RB:=null();
   DOK.RB_V:=null();
   DOK.efld_opt(DOK.win_edit('?'),'enable=0, editable=0',DOK,'RB');
   DOK.efld_opt(DOK.win_edit('?'),'enable=0, editable=0',DOK,'RB_V');
   win_disp()
?};
_ok


\dokkorif
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed redakcja pola DOK.KOR
::  OLD: \dokkorif/skid.fml
::----------------------------------------------------------------------------------------------------------------------
_result:={? DOK.DOK_REJ().KOR_NAG<>'T'
         || -DOK_REJ.KOR='t'
         || {? POMOC.KNAG=2 || cur_afld()='KOR_PRZY' | cur_afld()='KOR_OKR' || 1 ?}
         ?};
{? _result || exec('be_edok_fld','dok_fks1') || 0 ?}


\aekor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Po redakcji pola DOK.KOR_ZEW
::  OLD: \aekor/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.KOR_ZEW='' | (DOK.DOK_REJ().EDSYMZEW<>'T' & DOK.DOKZRODL='' & DOK.EDOKUM='')
|| DOK.KOR_ZEW:=DOK.KOR
?};
1


\new_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Formula na blank dla pola DOK.RVAT
::  OLD: \new_vat/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.cntx_psh();
_ret:={? POMOC.D().SLO().KOD='VAT' | POMOC.D().SLO().KOD='SAD'
         || POMOC.V
         || null
         ?};
DOK_REJ.cntx_pop();
_ret


\bedvatv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GCW [12.30]
:: OPIS: Przed wyswietl dla pola RVAT w naglowku dokumentu (DOK)
::  OLD: \bedvatv/skid.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=DOK.DOK_REJ<>null & (DOK.DOK_REJ().SLO().KOD='VAT' | SLO.KOD='SAD') & (menu_txt(,)='Ręcznie' | var_pres('dob_dek')>0
| var_press('edi_dok')>0 );
{? DOK.win_edit('?')<>''
|| {? ~_wyn || DOK.efld_opt(DOK.win_edit('?'),'editable=grayed',DOK,'RVAT')
            || DOK.efld_opt(DOK.win_edit('?'),'editable=1',DOK,'RVAT') ?}
?};
{? DOK.DOK_REJ<>null & (DOK.DOK_REJ().SLO().KOD='VAT' | SLO.KOD='SAD')
|| {? menu_txt(,)='Dołącz' | exec('sprvpozv','dok_fks',DOK.ref)
   || exec('bed_tag_tip','tagger')
   || 0
   ?}
|| exec('findfnv','#color')
?}


\bevat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Przed redakcja pol zwiazanych z VAT w naglowku dokumentu (DOK)
::  OLD: \bevat/skid.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__tagvpztip');
DOK.DOK_REJ<>null & (DOK.DOK_REJ().SLO().KOD='VAT' | SLO.KOD='SAD') & (menu_txt(,)='Ręcznie' | var_pres('dob_dek')>0
| var_press('edi_dok')>0 )


\be_sumwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WS [2011]
:: OPIS: Przed redakcja pola razem brutto
::   WY: 1 - mozna podac kwote; 0 - nie mozna edytowac pola
::  OLD: \be_sumwal/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? (DOK.DOK_REJ().SLO().KOD='PROSTY' & DOK.DOK_REJ().CZY_DKB='T') | DOK.DOK_REJ().SLO().KOD<>'PROSTY'
|| 1
|| 0
?}


\bw_sumwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WS [2011]
:: OPIS: Przed redakcja pola razem brutto
::  OLD: \bw_sumwal/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.DOK_REJ().SLO().KOD='PROSTY' & DOK.DOK_REJ().CZY_DKB<>'T'
|| exec('findfnv','#color')
|| ~~
?}


\pocz_dto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wart. pocz. data rejestracji w DOK
::  OLD: \pocz_dto/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? date()>=SSTALE.AO().POCZ & date()<=SSTALE.AO().KON
|| date()
|? POMOC.DT>=SSTALE.AO().POCZ & POMOC.DT<=SSTALE.AO().KON
|| POMOC.DT
|? date()>SSTALE.AO().KON
|| SSTALE.AO().KON
|? date()<SSTALE.AO().POCZ
|| SSTALE.AO().POCZ
?}


\prz_dto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed redakcja DOK.DTO
::  OLD: \prz_dto/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.DTO=date(0,0,0) || DOK.DTO:=DOK.DTW ?};
{? var_pres('__KORNAG')<=0 | POMOC.KNAG=1 | cur_tfld()=DOK || exec('be_edok_fld','dok_fks1') || 0 ?}


\por_dto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: po redagowaniu DOK.DTO
::  OLD: \por_dto/skid.fml
::  OLD: \ae_dto/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
 _ret:=1;
{? chk_fld(1)
|| {? DOK_REJ.SLO().KOD='WEW'
   || exec('czytaj','#stalesys',fld(),KST,'GRVAT');
      _ret:=KST.GRVAT<>null() & KST.GRVAT().GV_OD<=DOK.DTO & (KST.GRVAT().GV_DO=date(0,0,0) | KST.GRVAT().GV_DO>=DOK.DTO);
      exec('czytaj','#stalesys',,KST,'GRVAT');
      {? _ret=0 || FUN.info('Licencjobiorca nie jest grupą VAT\nWprowadzenie dokumentu tego typu nie jest możliwe.'@) ?}
   || _s:=DOK.RVAT().RVAT().KVAT().SYM;
      {? (1+_s='S' | 6+_s='_WWspD') & DOK.DOK_REJ().KOR='N' | (6+_s='_WWspN' & DOK.DTO>=date(2023,7,1)) || exec('be_okrvt','dok_fks') ?};
      exec('po_spl','!fks_dks_dark')
   ?}
|| {? DOK_REJ.SLO().KOD='WEW' || FUN.info('Dla dokumentu wewnętrznego pole musi byc wypełnione.'@); _ret:=0 ?}
?};
_ret


\po_spl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Formula po redakcji pola DOK.SP_PL
::  OLD: \po_spl/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.SP_PL<>null & cur_afld()='SP_PL' & DOK.DTO<>date(0,0,0) & DOK.DOK_REJ().PR<>'T' &
   ~((DOK_REJ.SLO().KOD='PROSTY' | DOK_REJ.SLO().KOD='WEW') & DOK_REJ.CZY_DP<>'T') & DOK.D3=date(0,0,0)
|| _rd:=exec('get_par','slo_slu',DOK.SP_PL,6);
   DOK.D3:={? _rd='S' || DOK.DOP |? _rd='O' || DOK.D4 || DOK.DTO ?}+#exec('get_par','slo_slu',DOK.SP_PL,2)
?};
1


\odd_p_re
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2010]
:: OPIS: Formula przed redakcja pola ROW_NAG.ODD
::  OLD: \odd_p_re/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.cntx_psh(); POZ.index('DOK'); POZ.prefix(DOK.ref());
{? (-menu_txt(,)='popraw'& ~POZ.first) | (-menu_txt(,)<>'popraw')
|| _a:={? ~OPERATOR.DEPT || 1 || 0 ?}
|| _a:=0
?};
POZ.cntx_pop();
_a


\odddokae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Po redakcji pola DOK.ODD
::  OLD: \odddokae/skid.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? DOK.ODD=null
|| FUN.info('Nie wybrano jednostki księgowej.'@); _zwrot:=0
?};
_zwrot


\slu_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.20]
:: OPIS: Formula na wartosc poczatkowa pola DODSLU tabeli DOK
::   WY: ref rekordu tabeli SLU
::  OLD: \slu_ref/skid_slu.fml
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.DODSLU


\slo_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.20]
:: OPIS: Formula przed redakcja pola DODSLU tabeli DOK
::   WY: 1 -  pole mozna redagowac, 0 - nie mozna
::  OLD: \slo_spr/skid_slu.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.DODSLO || VAR_DEL.delete('dokdodslu'); dokdodslu:=DOK.DODSLU ?};
exec('be_edok_fld','dok_fks1')


\slu_ref1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.20]
:: OPIS: Formula przed redakcja pola DODSLO tabeli DOK
::   WY: 1 -  pole mozna redagowac, 0 - nie mozna
::  OLD: \slu_ref1/skid_slu.fml
::----------------------------------------------------------------------------------------------------------------------
SLU.cntx_psh();
SLO.win_sel('ONE'); SLO.win_dict('ONE');
SLU.cntx_pop();
SLO.hdr_sel(); SLO.hdr_sel(SLU.NAZ);
{? DOK.DODSLU
|| SLUAPPL.index('REF'); SLUAPPL.prefix(); SLUAPPL.find_key(DOK.DODSLU);
   RS.index('RS'); RS.prefix();
   {? RS.find_key(DOK.DODSLU().WZ)
   || {? RS.TAB='WAL'
      || SLO.win_edit('WAL')
      |? RS.TAB='UDT'
      || SLO.win_edit('UDT')
      || SLO.win_edit('RED')
      ?}
   || SLO.win_edit('RED')
   ?};
   exec('be_edok_fld','dok_fks1')
|| 0
?}


\data_otr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.60]
:: OPIS: Przed redakcja pola DOK.D4
::  OLD: \data_otr/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_s:=VAT_REJ.RVAT().RT;
_result:={? 6+RVAT.KVAT().SYM='_WWspN'
         || 1
         |? (_s='S' | _s='W') & exec('kor_spr','dok_fks')
         || 1
         |? (_s<>'S' & _s<>'W') | _s='E'
         || {? DOK.D4=date(0,0,0) & ~exec('kor_spr','dok_fks') || DOK.D4:=DOK.DTO ?}; 1
         || 0
         ?};
{? _result || exec('be_edok_fld','dok_fks1') || 0 ?}


\val_dat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MG [??]
:: OPIS: funkcja sprawdzająca poprawność daty otrzymania dokumentu VAT
::  OLD: \val_dat/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('kor_spr','dok_fks',1) & DOK.D4=date(0,0,0)
|| {? DOK.D4<>date(0,0,0) ||  exec('be_okrvt','dok_fks') ?}; 1
|? okno_dok='DOK_VAT'
|| {? exec('po_dtd','dok_fks',1) || exec('be_okrvt','dok_fks',1); 1 || 0 ?}
|? DOK.D4<DOK.DTO & (DOK.RVAT().RVAT().RT<>'E' | DOK.DOK_REJ().SLO().KOD='SAD')
|| 1
|| exec('be_okrvt','dok_fks'); 1
?}


\wz_avat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: Ustawia slownik vat
::  OLD: \wz_avat/wzorce.fml
::----------------------------------------------------------------------------------------------------------------------
{? FINFO.SLAVAT<>null
|| SLO.win_dict('ONE'); SLO.win_sel('ONE');
   SLO.win_edit('RED');
   FINFO.SLAVAT().SLU()
?}; ''


\bd_a_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2008]
:: OPIS: Przed wyswietleniem pola DOK.A_VAT
::  OLD: \bd_a_vat/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.OKRVAT<>null || _txt:='grayed' || _txt:='1' ?};
DOK.efld_opt(DOK.win_edit('?'),'editable='+_txt,DOK,'A_VAT');
{? -menu_txt(,)<>'dołącz'
|| {? exec('sprvpozp','dok_fks',DOK.ref())
   || {? DOK.OKRVAT
      || ''
      || Color.fnd_kol('DVAT#01#01')
      ?}
   || exec('findfnv','#color')
   ?}
|| {? DOK.OKRVAT
   || ''
   || ''
   ?}
?}


\pr_avat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.60]
:: OPIS: Przed red. pola DOK.A_VAT oraz VPOZ.A_VAT
::  OLD: \pr_avat/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
_result:={? DOK.DOK_REJ().KOR_NAG='T' & (var_pres('__KORNAG')>0 & POMOC.KNAG=2) & cur_afld='A_VAT1'
         || 0
         || {? FINFO.SLAVAT<>null &
            ( var_pres('vpozvat')=-1 & ~DOK.OKRVAT
              & (cur_tab()=DOK & -menu_txt(,)='dołącz' | exec('sprvpozp','dok_fks',DOK.ref()))
              | var_pres('vpozvat')>0 & ~VPOZ.OKRVAT
              | -menu_txt(,)='zmień auto')
            || SLO.win_dict('ONE'); SLO.win_sel('ONE');
               SLO.win_edit('RED');
               {? FINFO.SLAVAT().SLU().NAZ<>'' || 1  || 0 ?}
            || 0
            ?}
         ?};
{? _result || exec('be_edok_fld','dok_fks1') || 0 ?}


\pr_spl2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Przed redag. formy platnosci w DOK.
::  OLD: \pr_spl2/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
_result:={? DOK.DOK_REJ<>null & (DOK.DOK_REJ().SLO().KOD='VAT' | SLO.KOD='SAD')
         || SLO.win_dict('ONE'); SLO.win_sel('ONE');
            {? DOK.DOK_REJ().PR='T' || 0 || exec('be_splkh','kontrahent',1) ?}
         || 0
         ?};
{? _result || exec('be_edok_fld','dok_fks1') || 0 ?}


\prz_kraj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula przed red. pola DOK.KRAJ
::  OLD: \prz_kraj/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.RVAT().RVAT();
_result:={? RVAT.CZY_ZM='T'
         || {? -menu_txt(,)='popraw'
            || VPOZ.index('VDOK');
               VPOZ.prefix(DOK.ref);
               _ok:=~VPOZ.first()
            || _ok:=1
            ?};
            {? _ok || SLO.win_dict('ONE'); exec('prz_kraj','nipyue') ?}
         || 0
         ?};
{? _result || exec('be_edok_fld','dok_fks1') || 0 ?}


\po_dkraj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula po red. pola DOK.KRAJ
::   WY: 0/1
::  OLD: \po_dkraj/skid_kh.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld<>null
|| DOK.JORG:=exec('ust_vwal','kraje',DOK.KRAJ().KOD);
   DOK.KH_KRAJ:=DOK.KRAJ().TR
?};
1


\aebl_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola DOK.E_DOC
::  OLD: \aebl_dok/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~DOK.E_DOC
|| DOK.E_DOCP:=null; DOK.bl_file('E_DOCP',1);
   DOK.efld_opt(DOK.win_edit('?'),'enable=0, editable=0',DOK,'E_DOCP');
   win_disp()
|| DOK.efld_opt(DOK.win_edit('?'),'enable=1, editable=1',DOK,'E_DOCP');
   win_disp()
?}; 1


\bedokpod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Przed redakcja pola DOK.E_DOCP
::  OLD: \bedokpod/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.bl_file('E_DOC')<>'' | DOK.E_DOC<>null


\bl_dz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2006]
:: OPIS: Wartosc poczatkowa pola DOK.DZ
::  OLD: \bl_dz/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.REJ().CZY_DZ='T' || GR_DOK.ref() || null ?}


\be_dz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2006]
:: OPIS: Przed redakcja pola DOK.DZ
::  OLD: \be_dz/skid_gr.fml
::----------------------------------------------------------------------------------------------------------------------
GR_DOK.win_sel('SLO_DZ');
GR_DOK.win_edit(''); GR_DOK.win_patt('');
{? DOK.REJ
|| {? DOK.DZ().REJ<>DOK.REJ || DOK.DZ:=null ?};
   DOK.REJ().CZY_DZ='T' & var_pres('NOTREDDZ')<0
|| DOK.DZ:=null; 0
?}


\pocz_dop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [WS] [1210]
:: OPIS: wart. pocz. data operacji DOK.DOP
::  OLD: \pocz_dop/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? date()>=SSTALE.AO().POCZ & date()<=SSTALE.AO().KON
|| date()
|? POMOC.DT>=SSTALE.AO().POCZ & POMOC.DT<=SSTALE.AO().KON
|| POMOC.DT
|? date()>SSTALE.AO().KON
|| SSTALE.AO().KON
|? date()<SSTALE.AO().POCZ
|| SSTALE.AO().POCZ
?}


\aesymzew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Po redakcji pola DOK.SYM_ZEW
::  OLD: \aesymzew/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('beNkSymZew')>0 & beNkSymZew<>DOK.SYM_ZEW
|| {? var_pres('ok_nk')>=0 || &ok_nk ?}
?};
{? exec('spr_nk','dok_fks',2)
|| {? DOK.NK='' || DOK.NK:=DOK.SYM_ZEW ?}; 1
|| 0
?}


\bekorzew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Przed redakcja pola DOK.KOR_ZEW
::  OLD: \bekorzew/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
DOK_REJ.cntx_psh();
{? -DOK.DOK_REJ().KOR='t'
|| {? DOK.DOK_REJ & DOK.DOK_REJ().EDSYMZEW='T' || _zwrot:=1 ?}
?};
DOK_REJ.cntx_pop();
{? _zwrot || exec('be_edok_fld','dok_fks1') || 0 ?}


\aekorzew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Po redakcji pola DOK.KOR_ZEW
::  OLD: \aekorzew/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.KOR='' || DOK.KOR:=DOK.KOR_ZEW ?};
1


\dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: Blank na pole typu _DOK
::  OLD: \dok/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.ref()


\pw_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przed wysw. dla pola POZ.POZ
::  OLD: \pw_poz/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZ.win_edit('?')<>''
|| {? 4+POZ.win_edit('?')<>'SZUK'
   || POZ.efld_opt(POZ.win_edit('?'),'editable=grayed',POZ,'POZ')
   || POZ.efld_opt(POZ.win_edit('?'),'editable=1',POZ,'POZ')
   ?}
?};
{? DOK.DOK_REJ().M_ODD='T'
|| POZ.DOK_MOD<>null
|| POZ.DOK<>null
?}


\ae_kpoz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Po redakcji pola POZ.KON
::  OLD: \ae_kpoz1/skid_edk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ae_konto','edkonto',_a,'POZ','KON',1,2,1,"
   PowPut:=-menu_txt(,)='popraw';
   exec('poz_kom','!fks_dks_dark');
   _r:=exec('salk_poz','dok_fks');
   exec('bv_poz_spv','fks_sp');
   VAR_DEL.delete('PowPut');
   _r
")


\poz_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Funkcja uzupełnia komentarz konta
::   WE: _a - symbol konta
::  OLD: \poz_kom/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_i:=exec('koment','konto',POZ.KON);
{? _i>0
|| POZ.KOM:=_i;
   exec('rozr_edi','dok_fks');
   exec('wal_edi','dok_fks');
   {? POZ.KOM().KS().ROZR='Z'
   || POZ.ID:=POZ.TID:=POZ.SYM_ROK:=POZ.SYM_ZEW:=''; POZ.ODD:=null;
      POZ.DATA_R:=POZ.DO:=POZ.TP:=date(0,0,0);
      POZ.SLO_PROJ:=null; ROZRACH.WSK_PRAT:='N'
   |? POZ.TID<>'' & KS.OBTYPROZ
   || POZ.TID:=KS.T_ROZ
   ?};
   {? KS.ROZR<>'Z' & -DOK.DOK_REJ().ODD_ROZR='n' & DOK_REJ.SLO().KOD*'BO'=0 || POZ.ODD:=DOK.ODD ?};
   {? POZ.KOM().KS().WIELO='N'
   || POZ.KURS:=POZ.SUMW:=0; POZ.WAL:=null
   ?};
   POZ.SP_KS:=exec('sp_ks','!fks_dks_dark');
   exec('po_kon','dok_fks')
?};
1


\str_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Funkcja sprawdza, czy wprowadzone do pola POZ.STR znaki tworzą napis 'Wn' lub 'Ma'
::  OLD: \str_po/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
::Poczatek modyfikacji dla Maclex Fiks 14-10-2009 AK [1120]
{? KS.ROZR<>'Z' & POZ.ODD<>null & POZ.DOK().DOK_REJ().ZAPL='N' & POZ.ID=''
|| POZ.ODD:=DOK.ODD; POZ.ID:=DOK.NK; POZ.SYM_ZEW:=DOK.SYM_ZEW
?};
exec('bed_poz_tid','dok_fks1');
exec('bv_poz_spv','fks_sp');
::Koniec modyfikacji dla Maclex
{? (1+(-fld))='w' | (1+(-fld))='1' || fld('Wn'); {? POZ.TID='ZOB' || POZ.SLO_PROJ:=null ?}; 1
|? (1+(-fld))='m' | (1+(-fld))='2'|| fld('Ma'); {? POZ.TID='NAL' || POZ.SLO_PROJ:=null ?}; 1
|| FUN.info('Dopuszczalne wartości:  Wn, Ma.'@); 0
?}


\poz_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed redakcją wartości w walucie narodowej
::  OLD: \poz_sum/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_w:=0; _przel:=1;
RS.index('RS'); RS.prefix();
{? POZ.WAL>0 & DOK.TKRS>0 & form(DOK.TYPKRS)<>'' & POZ.SUM=0 & RS.find_key(POZ.WAL().SLU().WZ)
|| ($(RS.TAB+'.blank(1)'))();
   ($(RS.TAB+'.'+RS.KOD+':='''+POZ.WAL().KOD+''''))();
   KRS.index('KRS_WAL'); KRS.prefix();
   {? KRS.find_key(DOK.TKRS,POZ.WAL) & ($(RS.TAB+'.find_rec()'))()
   || _przel:=($(RS.TAB+'.J'))();
      {? _przel<=0 || _przel:=1 ?};
      _w:={? DOK.TYPKRS='K' || KRS.KP
          |? DOK.TYPKRS='S' || KRS.SP
          |? DOK.TYPKRS='R' || KRS.SR
          ?}*(POZ.SUMW/_przel);
      POZ.SUM:=_w$2
   ?}
?};
1


\ae_kw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Po redakcji pola POZ.SUM
::  OLD: \ae_kw/skid.fml
::----------------------------------------------------------------------------------------------------------------------
fld( fld()$2 );
exec('bv_poz_spv','fks_sp');
exec('ae_kurs','dok_fks',3)


\poz_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed redakcją pola opis w pozycji dokumentu źródłowego
::  OLD: \poz_opis/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? form(POZ.OP)='' || POZ.OP:=DOK.TR ?};
1


\wal_poz2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.41]
:: OPIS: Funkcja przed redakcja pol: kwota w walucie i kurs.
::  OLD: \wal_poz2/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('fnd_ks','dok_fks')=0 | -KS.WIELO<>'t'
|| 0
|| {? POZ.WAL=0 || 0 || 1 ?}
?}


\ae_poz_sumw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Po redakcji pola POZ.SUMW
::  OLD: \ae_poz_sumw/skid.fml
::----------------------------------------------------------------------------------------------------------------------
fld( fld()$2 ); exec('ae_kurs','dok_fks',1)


\wal_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: przed redakcja waluty
::       funkcja obsługuje pole Waluta i Kwota w walucie. Jezeli konto nie jest
::       wielowalutowe to redakcja tych pol jest zablokowana.
::       Warunek: musi byc wypełnione pole komentarz.
::  OLD: \wal_poz/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('fnd_ks','dok_fks')=0 | -KS.WIELO<>'t'
|| 0
|| {? FINFO.SLWAL().SLU=null
   || FUN.info('Nie ustalono słownika walut.'@); 0
   || SLO.index('SL');
      SLO.prefix(SLU.ref());
      exec('slu_okn','slo_slu');
      {? DOK.WAL>0 & POZ.WAL=0 || POZ.WAL:=DOK.WAL ?};
      1
   ?}
?}


\waluta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Po redakcji pola POZ.WAL
::   WE: _a - kod waluty
::  OLD: \waluta/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_euro','waluty',_a,1)
|| FINFO.NAROD(); _narod:=FINFO.NAROD;
   {? fld>0 & fld=_narod
   || FUN.info('Wprowadź walutę inną niż %1.'@[SLO.KOD]); 0
   || {? 4+cur_tab.name()='fak_'
      || _w:='FAK.WAL'; _k:='FAK.KRS'; _s:='FAK.WARW'
      || _w:='POZ.WAL'; _k:='POZ.KURS'; _s:='POZ.SUMW'
      ?};
      {? ($_w)()<>_narod & ($_w)()<>null
      || {? DOK.REJ().WAL='T' & ($_k)()=0
         || {? 3+_w='POZ' & POZ.KOM().KS().TYP='PC'
            || POZ.KURS:=exec('kurs_cit','dok_fks',DOK.DTW,POZ.WAL)
            |? DOK.TKRS<>0
            || KRS.cntx_psh();
               KRS.clear(); KRS.index('KRS_WAL');
               KRS.prefix(DOK.TKRS, ($_w)());
               {? KRS.first()
               || {? DOK.TYPKRS='K' || ($_k)():=KRS.KP
                  |? DOK.TYPKRS='S' || ($_k)():=KRS.SP
                  |? DOK.TYPKRS='R' || ($_k)():=KRS.SR
                  ?}
               || ($_k)():=0
               ?};
               KRS.cntx_pop()
            ?}
         ?}
      |? ($_w)()=null
      || ($_s)():=null; ($_k)():=0
      ?};
      {? 3+_w='POZ'
      || exec('ae_kurs','dok_fks',1)
      || exec('po_fwar','!fks_dks_dark')
      ?};
      exec('bv_poz_spv','fks_sp');
      exec('wal_edi','dok_fks');
      exec('bed_poz_wal','dok_fks1');1
   ?}
?}


\po_fwar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Ustalenie kursu i wartości w tabeli FAK
::  OLD: \po_fwar/fak_imp.fml
::----------------------------------------------------------------------------------------------------------------------
FAK.KRS:=FAK.KRS$6;
FAK.WAR:={? FAK.WAL || exec('walp','!fks_dks_dark')$2 || FAK.WAR$2 ?};
1


\walp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Zwraca warość w walucie narodowej (FAK)
::  OLD: \walp/fak_imp.fml
::----------------------------------------------------------------------------------------------------------------------
WAL.prefix(); WAL.index('WAL_SYM');
{? WAL.find_key(FAK.WAL().KOD)
|| _jed:=WAL.J;
   (FAK.WARW*FAK.KRS/_jed)$2
|| FUN.info('Nie znaleziono waluty o kodzie %1'@[FAK.WAL().KOD]); 0
?}


\p_r_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Przed redakcja pola POZ.ID
::  OLD: \p_r_id/skid.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? KS.ROZR<>'Z' & -DOK.DOK_REJ().ODD_ROZR='n' || POZ.ODD:=DOK.ODD; win_disp() ?};
{? POZ.ODD<>null() & KS.ROZR<>'Z'
|| {? ~exec('usr_fjks','b_perm',POZ.ODD().OD)
   || FUN.emsg('Brak uprawnień do wskazanej jednostki księgowej.'@); _ok:=0
   ?}
?};
{? _ok
|| SKID.CLICKF3:=0;
   ROZRACH.IDROZ:=POZ.ID;
   KS.ROZR<>'Z'
?}


\poz_iden
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2010]
:: OPIS: Na klawisz F3 dla pola POZ.ID
::  OLD: \poz_iden/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
bez_wyst:=1; _zm_rok:=null;
_tabr:=ROZRACH.TABELA;
ROK_F.cntx_psh(); rok_hed:=SSTALE.AR().NAZ;
_obj:=exec('obj_op','dok_fks_ks');
{? PAR_SKID.get(77)='T'
|| _zm_rok:=_obj.getACTYEAR(SSTALE.AR().POCZ_ROK);
   ROK_F.prefix();
   {? _zm_rok & ROK_F.seek(_zm_rok)
   || rok_hed:=ROK_F.NAZ;
      _obj.use()
   ?}
?};
ROK_F.cntx_pop();
OP.f_clear();
OP.win_sel('SLO');
_act:='';
{? -(6+menu_txt(,))='szukaj'
|| _act:='rAWLR:WR'
|| {? Perm.hasFull('FJKS')=0 | -DOK.DOK_REJ().ODD_ROZR<>'t' || _act:='W:W'?}
?};
OP.actions('SLO',_act);
hdr_wal:=hdr_odd:=wszy_odd:=''; hdr_zakr:='nierozliczone'; wal:=null;
symb_kon:=POZ.KON; odd_p:=POZ.ODD; zakr:='N'; zm_zakr:=0;
DOK.cntx_psh(); odd_d:=POZ.DOK().ODD; DOK.cntx_pop();
{? POZ.WAL>0
|| wal:=POZ.WAL; hdr_wal:=POZ.WAL().KOD
|| FINFO.NAROD(); wal:=FINFO.NAROD; hdr_wal:=SLO.KOD
?};
_tmp_kon:={? (_tmp:=POZ.KON*'?')=0 || POZ.KON || (_tmp-1)+POZ.KON ?};
{? POZ.ODD=null() & KS.ROZR<>'Z'
|| OP.index('STAN_O'); OP.prefix(wal,DOK.ODD,'N',_tmp_kon);
   odd_p:=DOK.ODD; hdr_odd:=DOK.ODD().OD; wszy_odd:='N'
|? POZ.ODD=null
|| OP.index('STAN'); OP.prefix(wal,'N',_tmp_kon);
   hdr_odd:='wszystkie jednostki księgowe'; wszy_odd:='T'
|| OP.index('STAN_O'); OP.prefix(wal,POZ.ODD,'N',_tmp_kon);
   hdr_odd:=POZ.ODD().OD; wszy_odd:='N'
?};
{? OP.first() & POZ.KON<>'' & POZ.ID<>''
|| {? POZ.SYM_ROK<>'' & POZ.SYM_ROK*POZ.ID=1
   || OP.find_key(POZ.TP,POZ.ID,POZ.SYM_ROK)
   || OP.find_key(POZ.TP,POZ.ID)
   ?}
?};
OP.hdr_sel(' %5 %1: %2, Jednostka księgowa: %3, Zakres: %4'@[hdr_wal,_tmp_kon,hdr_odd,hdr_zakr,rok_hed]);
__POZNPOP:=-menu_txt(,)<>'popraw';
{? OP.select(,1)
|| {? zm_zakr<>-1
   || _typ:='';
      KS.cntx_psh(); KS.prefix();
      {? POZ.KOM().KS().OBTYPROZ & KS.T_ROZ<>'' & OP.TYP<>KS.T_ROZ
      || _typ:=KS.T_ROZ;
         {? OP.TYP<>'RMK' & KS.T_ROZ<>'RMK' & OP.TYP<>'RMP' & KS.T_ROZ<>'RMP'
         || {? FUN.ask('Jedynym dopuszczalnym typem identyfikatora rozrachunku\n dla konta \'%1'
                       '\' jest typ \'%2\'.\n'
                       'Zmienić typ rozrachunku %3'
                       '\nz \'%4\' na \'%5\'?'@[KS.SYM,KS.T_ROZ,OP.SYM,OP.TYP,KS.T_ROZ])
            || OP.TYP:=KS.T_ROZ; OP.put();
               exec('pop_all','rozrach',0)
            ?}
         || FUN.info('Jedynym dopuszczalnym typem identyfikatora rozrachunku\n dla konta \'%1'
                     '\' jest typ \'%2\'.'@[KS.SYM,KS.T_ROZ])
         ?}
      ?};
      KS.cntx_pop();
      POZ.ID:=OP.SYM; POZ.SYM_ZEW:=OP.SYM_ZEW;
      POZ.TID:={? _typ='' || OP.TYP || _typ ?};
      POZ.DO:=OP.DO; POZ.TP:=OP.TZ;
      POZ.DATA_R:=exec('dat_otw','dok_fks');
      POZ.ODD:=OP.ODD;
      POZ.SYM_ROK:=exec('op_unik_sym','rozrach',POZ.ID,POZ.DO);
      POZ.KON:=OP.AN
   ?}
?};
exec('set_act','!fks_dks_dark');
_zwrot:={? var_pres('zm_zakr')>=0 || zm_zakr || 0 ?};
VAR_DEL.delete('hdr_wal','hdr_odd','hdr_zakr','zakr','wszy_odd','wal','symb_kon','odd_p','odd_d','zm_zakr','__POZNPOP');
{? _zwrot=-1 || exec('poz_iden','!fks_dks_dark') ?};
VAR_DEL.delete('bez_wyst','rok_hed');
ROZRACH.TABELA:=_tabr;
{? _zm_rok
|| ROK_F.cntx_psh(); ROK_F.prefix(); SSTALE.AR();
   _obj.use();
   ROK_F.cntx_pop()
?};
POZ.ID


\set_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Ustawia akcje okna tabeli POZ na podsawie zmiennych __ACTSEL, __ACTACT i __ACTDOM
::  OLD: \set_act/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__ACTSEL')>0 & var_pres('__ACTACT')>0 & var_pres('__ACTDOM')>0
|| POZ.actions(__ACTSEL,__ACTACT,__ACTDOM,1)
?}


\ae_pozid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.41]
:: OPIS: Po wybraniu rozrachunku podpowiada saldo rozrachunku jako kwote zapisu ksiegowego dla waluty narodowej
::       lub gdy rozrachunek jest walutowy podpowiada saldo w walucie oraz walute.
::  OLD: \ae_pozid/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=0; OP.cntx_psh(); bez_wyst:=1;
_par42:=PAR_SKID.get(42);
_zm_rok:=null;
_obj:=exec('obj_op','dok_fks_ks');
ROK_F.cntx_psh();
{? PAR_SKID.get(77)='T'
|| _zm_rok:=_obj.getACTYEAR(SSTALE.AR().POCZ_ROK);
   ROK_F.prefix();
   {? _zm_rok & ROK_F.seek(_zm_rok)
   || _obj.use()
   ?}
?};
ROK_F.cntx_pop();
{? POZ.ID<>''
|| _w:={? POZ.WAL=null || FINFO.NAROD || POZ.WAL ?};
   {? POZ.ODD=null
   || POZ.ODD:=exec('wyp_odd','rozrach')
   ?};
   OP.index('KON_O');
   {? _par42='T' & POZ.SYM_ROK<>''
   || OP.prefix(_w,POZ.ODD,POZ.KON,POZ.ID,POZ.ID,POZ.SYM_ROK)
   || OP.prefix(_w,POZ.ODD,POZ.KON,POZ.ID,POZ.ID)
   ?};
   {? OP.first()
   || POZ.ID:=OP.SYM; POZ.SYM_ZEW:=OP.SYM_ZEW;
      POZ.TID:=OP.TYP;
      POZ.DO:=OP.DO; POZ.TP:=OP.TZ;
      POZ.DATA_R:=exec('dat_otw','dok_fks');
      POZ.ODD:=OP.ODD;
      POZ.SYM_ROK:=exec('op_unik_sym','rozrach',POZ.ID,POZ.DO);
      POZ.SYM_ZEW:=OP.SYM_ZEW;
      {? _w<>FINFO.NAROD & (POZ.SUMW$2=0 | ROZRACH.IDROZ<>POZ.ID)
      || {? POZ.STR='Ma' & POZ.SUMW=0 || POZ.SUMW:=F.SWn(OP.WN,OP.MA)
         |? POZ.STR='Wn' & POZ.SUMW=0 || POZ.SUMW:=F.SMa(OP.WN,OP.MA)
         ?};
         POZ.SUM:=0
      |? _w=FINFO.NAROD & (POZ.SUM$2=0 | ROZRACH.IDROZ<>POZ.ID)
      || {? POZ.STR='Ma' || {? ~POZ.SUM || POZ.SUM:=F.SWn(OP.WN,OP.MA) ?}
         |? POZ.STR='Wn' || {? ~POZ.SUM || POZ.SUM:=F.SMa(OP.WN,OP.MA) ?}
         ?};
         {? -menu_txt(,)<>'popraw'
         || POZ.SUM:={? POZ.STR='Ma'
                     || F.SWn(OP.WN,OP.MA)
                     || F.SMa(OP.WN,OP.MA)
                     ?}
         ?};
         POZ.SUMW:=0
      ?};
      {? form(POZ.OP)=''
      || POZ.OP:=OP.OP
      |?(+form(POZ.OP)=4)  & (type_of(#(4+POZ.OP))=1)
      || POZ.OP:=(4+POZ.OP)+' '+OP.OP
      ?}
   || exec('ust_roz','dok_fks');
      {? POZ.SYM_ZEW='' | DOK.DOK_REJ().EDSYMZEW<>'T' || POZ.SYM_ZEW:=POZ.ID ?}
   ?}
|| {? -POZ.KOM().KS().ROZR<>'r' || POZ.ODD:=null; POZ.TID:=POZ.SYM_ROK:='' ?}
?};
OP.cntx_pop();
{? POZ.KURS$6<>0
|| _jedn:=1; WAL.index('WAL_SYM'); WAL.prefix();
   {? WAL.find_key(POZ.WAL().KOD) || _jedn:=WAL.J ?};
   POZ.SUM:=(POZ.SUMW*POZ.KURS/_jedn)$2
?};
{? ~(+|POZ.ID)
|| POZ.DATA_R:=POZ.DO:=POZ.TP:=date(0,0,0); POZ.SYM_ROK:=POZ.SYM_ZEW:=''
|| {? POZ.SYM_ZEW='' || POZ.SYM_ZEW:=POZ.ID ?}
?};
exec('bv_poz_spv','fks_sp');
VAR_DEL.delete('bez_wyst');
{? _zm_rok
|| ROK_F.cntx_psh(); ROK_F.prefix(); SSTALE.AR();
   _obj.use();
   ROK_F.cntx_pop()
?};
exec('bed_poz_tid','dok_fks1'); exec('bed_poz_sloproj','dok_fks1');
1


\ae_pozdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009+]
:: OPIS: Po redakcji pola POZ.DO lub POZ.ID
::  OLD: \ae_pozdo/skid_op.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.SYM_ROK:=exec('op_unik_sym','rozrach',POZ.ID,POZ.DO)


\poz_tid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed redakcją pól rozrachunkowych
::   WE: _a - 1=redakcja pola TID, 0=pole DO lub TP
::  OLD: \poz_tid/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<=0 || _a:=0 ?};
_zabltyp:=0;
{? POZ.ID<>''
|| {? cur_afld()<>'WSK_PRAT' & type_of(fld)=2 & +POZ.KON>=SSTALE.AR().SYNT
   || _rok:=SSTALE.AR; SSTALE.AR();
      KS.cntx_psh(); KS.index('SYM'); KS.prefix(_rok,ROK_F.SYNT+POZ.KON);
      {? KS.first() & KS.ROZR<>'Z'
      || _zabltyp:=KS.OBTYPROZ;
         {? |POZ.TID='' | _zabltyp  || POZ.TID:=KS.T_ROZ ?}
      ?};
      KS.cntx_pop()
   ?};
   {? _zabltyp |
      (~_a & ROZRACH.WSK_PRAT='T' & cur_afld='TP' & var_pres('dolpoz')>0) |
      (cur_afld='WSK_PRAT' & (1+POZ.TID)<>'N' & (1+POZ.TID)<>'Z') |
      ((POZ.DOK().DOK_REJ().PR<>'T') & cur_afld='WSK_PRAT') |
      (cur_afld='DATA_R' & POZ.DOK().DOK_REJ().CZY_ROZL<>'T')
   || 0
   || {? cur_afld='WSK_PRAT'
      || {? exec('e_opdrb','rozrach',0) || 0 || 1 ?}
      || 1
      ?}
   ?}
|? POZ.ID=''
|| POZ.TID:=POZ.SYM_ROK:=''; POZ.DATA_R:=POZ.TP:=POZ.DO:=date(0,0,0); PAR_WYDR.PAR1:=0; ROZRACH.WSK_PRAT:='N'; 0
?}


\ae_poztp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Po redagowaniu pola termin platnosci w POZ; w przypadku platnosci
::       ratalnych pobiera TP z ostatniej pozycji z listy.
::  OLD: \ae_poztp/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZRACH.WSK_PRAT='T'
|| POZ.TP:=exec('drb_tpfp','raty','POZ',1)
?}; 1


\dok_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Na blank dla pola POZ.ODD
::  OLD: \dok_odd/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.ODD


\odd_pred
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.53]
:: OPIS: Sprawdza, czy mozna redagowac pole POZ.ODD
::   WY: 1/0
::  OLD: \odd_pred/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS.ROZR<>'Z' & exec('spr_odd','rozrach') || ODD.f_clear();1 || 0 ?}


\ae_kurs2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Po redakcji pola POZ.KURS
::  OLD: \ae_kurs2/skid.fml
::----------------------------------------------------------------------------------------------------------------------
fld(fld()$6); exec('ae_kurs','dok_fks',2)


\bepozpro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Przed redakcja pola POZ.SLO_PROJ
::  OLD: \bepozpro/skid_prj.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZ.ID<>'' & XINFO.SLU_PROJ & (-POZ.STR='ma' & POZ.TID='ZOB' | -POZ.STR='wn' & POZ.TID='NAL')
|| SLO.win_sel('ONE'); SLO.win_dict('ONE');
   XINFO.SLU_PROJ();
   RS.index('RS'); RS.prefix(SLU.WZ); RS.first(); 1
|| POZ.SLO_PROJ:=null; 0
?}


\odd_ks_pred
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Formula przed redakcja jednostki ksiegowej dekretu dla dokumentow dla wielu jednostek ksiegowych
::   WY: 1 - dokument dla wielu jednostek ksiegowych, 0 - dokument nie dla wielu jednostek ksiegowych
::  OLD: \odd_ks_pred/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? -DOK.DOK_REJ().M_ODD='t' & ~OPERATOR.DEPT
|| exec('odd_filtr','fst'); 1
|| 0
?}


\odd_ks_pored
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Formula o redakcji jednostki ksiegowej dekretu dla dokumentow dla wielu jednostek ksiegowych
::  OLD: \odd_ks_pored/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZ.ODD_KS=null
|| FUN.info('Nie wybrano jednostki księgowej dekretu.'@); 0
|| 1
?}


\bl_poz_dok_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Wartosc poczatkowa pola POZ.DOK_MOD
::  OLD: \bl_poz_dok_mod/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.cntx_psh();
_r:={? DOK.DOK_REJ().M_ODD='T' || DOK.ref() || null ?};
DOK_REJ.cntx_pop();
_r


\bl_poz_poz_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Wartosc poczatkowa pola POZ.POZ_MOD
::  OLD: \bl_poz_poz_mod/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.cntx_psh();
_r:={? DOK.DOK_REJ().M_ODD='T' || exec('bl_poz','dok_fks') || 0 ?};
DOK_REJ.cntx_pop();
_r


\besymzewp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Przed redakcja pola POZ.SYM_ZEW
::  OLD: \besymzewp/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
{? POZ.DOK & POZ.ID<>''
|| DOK.cntx_psh();
   POZ.DOK();
   DOK_REJ.cntx_psh();
   {? DOK.DOK_REJ & DOK.DOK_REJ().EDSYMZEW='T' || _zwrot:=1 ?};
   DOK.cntx_pop(); DOK_REJ.cntx_pop()
?};
_zwrot


\aesymzewp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Po redakcji pola POZ.SYM_ZEW
::  OLD: \aesymzewp/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZ.SYM_ZEW=''
|| exec('poz_sym_zew','!fks_dks_dark')
?}; 1


\dok_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Funkcja sprawdza dopuszczalność akcji Popraw (przed Popraw w tabeli DOK)
::  OLD: \dok_pop/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
dokpop:=1; VAR_DEL.delete('ok_nk');
{? exec('dopusc','dok_fks')
|| DOKN.cntx_psh();
   {? DOK.r_lock(1,1) & DOK.get()
   || exec('param_p','dok_fks');
      POMOC.V:=DOK.RVAT; POMOC.D:=DOK.DOK_REJ;
      exec('dok_edit1','dok_fks',exec('okna_r','dok_fks',DOK.DOK_REJ().SLO().KOD));
      exec('okna_r_btn','dok_fks',1,1,1);
      _nr:=DOK.NR;
      VAR_DEL.delete('g_dokkh1','g_dokkh2','g_dokkh3','DokPyt');
      g_dokkh1:=obj_new(2); g_dokkh1[1]:=g_dokkh1[2]:=0;
      g_dokkh2:=obj_new(2); g_dokkh2[1]:=g_dokkh2[2]:='';
      g_dokkh3:=obj_new(2); g_dokkh3[1]:=g_dokkh3[2]:='';
      DokPyt:=exec('dokpyt','dok_fks',1);
      {? var_pres('__War_f')=-1 || __War_f:="exec('FindInSet','#table',_a,_a,_c,REF.FIRMA,$(_a+'.'+_b))" ?};
      _okrvat:=DOK.OKRVAT;
      _a_vat:=DOK.A_VAT;
      ROZRACH.TABELA:='DOK';
      Zrodlo:=(-(7+DOK.DOKZRODL)); NrRej:=DOK.NR; DatDok:=DOK.DTW; SymDok:=DOK.NK; beKH:=DOK.KH;
      DOK.bl_file('E_DOC',0); DOK.bl_file('E_DOCP',0);
      MLEX_OKN.CZY_RBAN:={? DOK.DOK_REJ().CZY_RRB<>'' || DOK.DOK_REJ().CZY_RRB || 'N' ?};
      exec('btn_raty','dok_fks');
      {? DOK.DOK_REJ().KOR_NAG='T'
      || __KORNAG:=1;
         {? 4+DOK.KN='doku'
         || POMOC.KNAG:=2;
            DOK.cntx_psh();
            _ref:=BB.sqlint(DOK.KN);
            DOK.use(8+DOK.KN);
            DOK.prefix();
            {? _ref<>0 & DOK.seek(_ref,)
            || exec('dok2dokn','knag')
            ?};
            DOK.cntx_pop()
         |? 4+DOK.KN='dokn'
         || POMOC.KNAG:=1;
            DOKN.use(8+DOK.KN);
            DOKN.prefix();
            _ref:=BB.sqlint(DOK.KN);
            {?  _ref<>0 & DOKN.seek(_ref,)
            || beKH1:=DOKN.KH1; 1
            || FUN.info('Nie znaleziono źródłowego dokumentu dla korekty nagłówkowej.'@)
            ?}
         ?}
      ?};
      exec('edit','dok_ksef',1);
      DOK.memo_get(,'NRKSEFDK',0);
      {? DOK.edit("exec('dok_spr','dok_fks')") & ~(var_pres('BtnZak')>0 & BtnZak=1)
      || {! |?
            _i:=0; _refer:=DOK.ref();
            DOK.cntx_psh(); _num:=DOK.NR;
            DOK.index('REJ'); DOK.prefix(DOK.REJ);
            {? DOK.find_key(_num) & _refer<>DOK.ref() || _i:=1 ?};
            DOK.cntx_pop();
            {? _i=1
            || FUN.info('Dokument o numerze %1 już istnieje.\nProszę zmienić numer dokumentu.'@[$_num]);
               DOK.NR:=_nr;
               DOK.edit("exec('dok_spr','dok_fks')")
            || DOK.put();
               {? 4+DOK.KN='dokn' & $DOKN.ref()=DOK.KN || DOKN.put() ?};
               exec('putbloby','dok_fks');
               exec('pop_poz','dok_fks','DOK');
               exec('sprdpoz','!fks_dks_dark');
               exec('dokzrodl','!fks_dks_dark');
               {? _okrvat<>DOK.OKRVAT | _a_vat<>DOK.A_VAT || exec('pop_vpoz','!fks_dks_dark',DOK.ref()) ?};
               exec('edit','dok_ksef',2);
               DOK.memo_put(,'NRKSEFDK');
               0
            ?}
         !}
      || {? var_pres('BtnZak')>0 || BtnZak:=0 ?}
      ?};
      DOK.bl_file('E_DOC',1); DOK.bl_file('E_DOCP',1);
      VAR_DEL.delete('pamietaj','NrRej','DatDok','SymDok','__spr_kraj');
      DOK.r_unlock()
   || FUN.info('Dokument obsługuje inny operator.'@)
   ?};
   DOKN.cntx_pop()
?};
VAR_DEL.delete('dokpop','beKH','beKH1','beNkSymZew')


\sprdpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Ustawia dane związane z rozrachunkiem dla całego dokumentu
::  OLD: \sprdpoz/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
POZ.cntx_psh(); POZ.index('DOK'); POZ.prefix(DOK.ref());
{? POZ.first()
|| {! |?
      {? +|POZ.ID || exec('ust_roz','dok_fks'); _wyn:=POZ.put() ?};
      _wyn & POZ.next()
   !}
?};
POZ.cntx_pop();
_wyn


\pop_vpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2008]
:: OPIS: Poprawienie wartosci pol OKRVAT, A_VAT dla rekordow tabeli VPOZ dokumentu
::   WE: _a - DOK.ref()
::  OLD: \pop_vpoz/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ.cntx_psh(); VPOZ.index('VDOK'); VPOZ.prefix(_a);
{? VPOZ.first()
|| {! |?
      VPOZ.OKRVAT:=DOK.OKRVAT; VPOZ.A_VAT:=DOK.A_VAT;
      VPOZ.OKR_Z:=VPOZ.OKR_C:=null;
      VPOZ.put();
      VPOZ.next
   !}
?};
VPOZ.cntx_pop();
1


\czy_dusu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.60]
:: OPIS: Formula przed akcja grupowa usuwania dokumentow
::  OLD: \czy_dusu/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
{? exec('czy_okr_zam_con','konsolidacja',1)
|| return(0)
|| {? FUN.ask('Usunąć zaznaczone dokumenty?'@)
   || _edoc:=_bl:=1;
      DOK.cntx_psh();
      TT_SEL:=DOK.sel_aget();
      {? TT_SEL.first()
      || {! |?
            {? DOK.seek(TT_SEL.REF,DOK.name())
            || {? DOK.E_DOC || _edoc:=0 ?};
               {? exec('status_bl','dok_fks1') || _bl:=0 ?}
            ?};
            _edoc & TT_SEL.next()
         !}
      ?};
      {? ~_edoc
      || _edoc:=FUN.choice('Wśród zaznaczonych dokumentów są takie, które zawierają e-dokumenty.'
                           '\nUsunięcie tych dokumentów spowoduje usunięcie związanych z nimi'
                           '\ndokumentów elektronicznych.\nCzy usunąć dokumenty z załącznikami'
                           '\nczy pominąć usuwanie dokumentów zawierających e-dokumenty?'@,,
                           'Z załącznikami'@,'Pominąć'@)
      ?};
      {? PAR_SKID.get(441)='N' & ~_bl & _edoc=1
      || _bl:=FUN.choice('Wśród dokumentów elektronicznych są dokumenty o statusie \'gotowy do wysłania\' lub \'wysłany\'.'
                         '\nCzy na pewno chcesz usunąć te dokumenty?'@,,'Usuń'@,'Pomiń'@)
      ?};
      {? _edoc & _bl
      || {? TT_SEL.first()
         || {!
            |? {? DOK.seek(TT_SEL.REF,DOK.name()) & ((_edoc=2 & _bl<>2 & DOK.E_DOC) | (PAR_SKID.get(441)='T' & exec('status_bl','dok_fks1'))
                  | (_bl=2 & exec('status_bl','dok_fks1')))
               || DOK.sel_del()
               ?};
               TT_SEL.next()
            !}
         ?};
         ile:=DOK.sel_size(); akc:=licz:=0; sel_nchk(); _ret:=1
      ?};
      DOK.cntx_pop()
   ?}
?};
VAR_DEL.delete('TT_SEL'); _ret


\po_dusu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.60]
:: OPIS: Formula po akcji grupowej usuwania dokumentow
::  OLD: \po_dusu/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? licz=ile & licz
|| FUN.info('Operacja zakończona.\n'
            'Usunięto wszystkie zaznaczone dokumenty.\n'
            '(Liczba usuniętych dokumentów: %1)'@[form(licz)])
||
   {? licz<ile
   ||  {? akc>0
       || {? SSTALE.AO().NR<>0
          || FUN.info('   Operacja zakończona. Liczba usuniętych dokumentów: %1'
             '\n\n    Dokumenty, dla których operacja się nie powiodła: %2'
              '\n            w tym dokumenty z zakończoną rejestracją: %3'@[form(licz),form(ile-licz),form(akc)])
          || FUN.info('   Operacja zakończona. Liczba usuniętych dokumentów: %1'
             '\n\n    Dokumenty, dla których operacja się nie powiodła: %2'
              '\n                        w tym dokumenty zaksięgowane:  %3'@[form(licz),form(ile-licz),form(akc)])
          ?}
       || FUN.info('   Operacja zakończona. Liczba usuniętych dokumentów: %1'
             '\n\n    Dokumenty, dla których operacja się nie powiodła: %2'@[form(licz),form(ile-licz)])
       ?}
   || FUN.info('   Operacja zakończona. Liczba usuniętych dokumentów: %1'@[form(licz)])
   ?}
?};
echo();
&ile; &licz; &akc


\usun_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Usuwanie pozycji dokumentu
::  OLD: \usun_poz/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
_sel:=POZ.sel_size();
{? _sel=0 & exec('dopusc','dok_fks')
|| {? FUN.ask('Usunąć pozycję dokumentu?'@)
   || exec('usun_poz1','dok_fks',_sel);
      exec('suma_dok','dok_fks');
      {? exec('del_e_dok_mw','dok_fks')
      || _file:='Polecenie księgowania '+exec('str_to_pth','#string',DOK.NK)+'.pdf';
         {? DOK.E_DOC & DOK.bl_info('E_DOC','NAME')=_file
         || DOK.E_DOC:=null();
            DOK.trig_off('*','*');
            {? DOK.put() || FUN.info('Usunięto załącznik z zestawieniem naliczenia RKB.'@) ?};
            DOK.trig_on('*','*')
         ?}
      ?}
   ?}
|? var_pres('TABPOZUS')>0
|| {? POZ.r_lock(2,1)
   || TABPOZUS.REFPOZ:=#POZ.ref(); TABPOZUS.add()
   ?}
?}; echo()


\czy_pusu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.60]
:: OPIS: Formula przed akcja grupowa usuwania pozycji dokumentow
::  OLD: \czy_pusu/dok_zrd3.fml
::--------------------------------------------------------------------------------------------------
{? exec('dopusc','dok_fks')
|| {? FUN.ask('Usunąć zaznaczone pozycje?'@)
   || ref_poz:=POZ.ref();
      TABPOZUS:=tab_tmp(1,'REFPOZ','INTEGER','Ref pozycji')
   ?}
?}


\po_pusun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.60]
:: OPIS: Formula po akcji grupowej usuwania pozycji dokumentow
::  OLD: \po_pusun/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
do();
{? TABPOZUS.first()
|| {! |?
      {? POZ.seek(TABPOZUS.REFPOZ,POZ.name()) || exec('usun_poz1','dok_fks',1) ?};
      TABPOZUS.next()
   !}
?};
{? POZ.first()
|| POZ.trig_off('*','*');
   _lp:=1;
   {!|? POZ.POZ:=_lp; {? DOK_REJ.M_ODD='T' || POZ.POZ_MOD:=POZ.POZ ?}; _lp+=1; POZ.put(); POZ.next() !};
   POZ.trig_on('*','*');
   {? POZ.seek(ref_poz) || 1 || POZ.first() ?}
?};
end();
&ref_poz; obj_del(TABPOZUS);
exec('suma_dok','dok_fks');
{? exec('del_e_dok_mw','dok_fks')
|| _file:='Polecenie księgowania '+exec('str_to_pth','#string',DOK.NK)+'.pdf';
   {? DOK.E_DOC & DOK.bl_info('E_DOC','NAME')=_file
   || DOK.E_DOC:=null();
      {? DOK.put() || FUN.info('Usunięto załącznik z zestawieniem naliczenia RKB.'@) ?}
   ?}
?}


\czy_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.60]
:: OPIS: Formula przed akcja grupowa akceptacji dokumentow
::  OLD: \czy_akc/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:={? exec('czy_okr_zam_con','konsolidacja',1) || 0 || 1 ?};
{? _ok
|| _ok:=FUN.ask('Zakończyć rejestrację zaznaczonych dokumentów?'@)
?};
{? _ok
|| ile:=DKS_SEL:=DOK.sel_size(); byl:=licz:=licz2:=lok:=0;
   sel_nchk();
   DOK.sel_size();
   DKS_OK:=0;
   {? MLEX.FIKSB
   || exec('KOMM','#object');
      KOMM.init(,,'Uwagi obsługi struktury rodzajowej'@)
   ?};
   1
?}


\po_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.60]
:: OPIS: Formula po akcji grupowej akceptacji dokumentow
::  OLD: \po_akc/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
_msg:=~MLEX.FIKSB;
_lm:=+form(ile);
{? licz=ile
|| {? _msg
   || {? licz2>0
      || FUN.info('    Wykonano zakończenie rejestracji dla wszystkich zaznaczonych dokumentów.\n'
               '    Liczba zakończonych dokumentów: %1 '
               '\nLiczba dokumentów powstałych dla wielu jednostek księgowych: %2'@[form(licz,_lm,0,' ,'),form(licz2,_lm,0,' ,')])
      || FUN.info('    Wykonano zakończenie rejestracji dla wszystkich zaznaczonych dokumentów.\n'
               '    Liczba zakończonych dokumentów: %1 '@[form(licz,_lm,0,' ,')])
      ?}
   || _kom:='    Operacja zakończona.'@;
      KOMM.add(_kom);
      _kom:='Wykonano zakończenie rejestracji dla wszystkich zaznaczonych dokumentów.'@;
      KOMM.add(_kom);
      _kom:='Liczba zakończonych dokumentów: %1'@[form(licz,_lm,0,' ,')];
      KOMM.add(_kom);
      {? licz2>0
      || _kom:='Liczba dokumentów powstałych dla wielu jednostek księgowych: %1'@[form(licz2,_lm,0,' ,')];
         KOMM.add(_kom)
      ?}
   ?}
|| {? _msg
   ||
       {? licz2>0
       ||  {? licz<ile
            ||  {? byl>0
                 ||  {? lok>0
                     || FUN.info('     Operacja zakończona. Wykonano zakończenie rejestracji dla dokumentów: %1 '
                           '\nLiczba dokumentów powstałych dla wielu jednostek księgowych: %2'
                            '\n\n            Dokumenty, dla których operacja się nie powiodła: %3'
                           '\n                     w tym dokumenty wcześniej zakończone: %4'
                            '\n         w tym dokumenty obsługiwane przez innych operatorów: %5'@[form(licz,_lm,0,' ,'),form(licz2,_lm,0,' ,'),form(ile-licz,_lm,0,' ,'),form(byl,_lm,0,' ,'),form(lok,_lm,0,' ,')])
                    || FUN.info('     Operacja zakończona. Wykonano zakończenie rejestracji dla dokumentów: %1 '
                           '\nLiczba dokumentów powstałych dla wielu jednostek księgowych: %2'
                            '\n\n            Dokumenty, dla których operacja się nie powiodła: %3'
                           '\n                     w tym dokumenty wcześniej zakończone: %4'@[form(licz,_lm,0,' ,'),form(licz2,_lm,0,' ,'),form(ile-licz,_lm,0,' ,'),form(byl,_lm,0,' ,')])
                     ?}
                 || FUN.info('     Operacja zakończona. Wykonano zakończenie rejestracji dla dokumentów: %1 '
                '\nLiczba dokumentów powstałych dla wielu jednostek księgowych: %2'
                 '\n\n            Dokumenty, dla których operacja się nie powiodła: %3'@[form(licz,_lm,0,' ,'),form(licz2,_lm,0,' ,'),form(ile-licz,_lm,0,' ,')])
                ?}
            || FUN.info('     Operacja zakończona. Wykonano zakończenie rejestracji dla dokumentów: %1 '
                '\nLiczba dokumentów powstałych dla wielu jednostek księgowych: %2'@[form(licz,_lm,0,' ,'),form(licz2,_lm,0,' ,')])
           ?}
       ||  FUN.info('     Operacja zakończona. Wykonano zakończenie rejestracji dla dokumentów: %1'@[form(licz,_lm,0,' ,')])
     ?}
   || _kom:='Operacja zakończona. Wykonano zakończenie rejestracji dla dokumentów: %1'@[form(licz,_lm,0,' ,')];
      KOMM.add(_kom);
      {? licz2>0
      || _kom:='Liczba dokumentów powstałych dla wielu jednostek księgowych: %1'@[form(licz2,_lm,0,' ,')];
         KOMM.add(_kom)
      ?};
      {? licz<ile
      || _kom:='Dokumenty, dla których operacja się nie powiodła: %1'@[form(ile-licz,_lm,0,' ,')];
         KOMM.add(_kom);
         {? byl>0
         || _kom:='w tym dokumenty wcześniej zakończone: %1'@[form(byl,_lm,0,' ,')];
            KOMM.add(_kom)
         ?};
         {? lok>0
         || _kom:='w tym dokumenty obsługiwane przez innych operatorów: %1'@[form(lok,_lm,0,' ,')];
            KOMM.add(_kom)
         ?}
      ?}
   ?}
?};
{? _msg || KOMM.select() ?};
echo();
VAR_DEL.delete('DKS_SEL','DKS_OK');
VAR_DEL.delete('ile','licz','licz2','lok','byl')


\poz_dop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Funkcja wywoływana przed Dołączeniem nowej pozycji dokumentu.
::  OLD: \poz_dop/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dopusc','dok_fks',2)
|| FUN.ask('Dodać pozycję dokumentu?'@)
?}


\czy_wyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.60]
:: OPIS: Formula przed akcja grupowa wycofania dokumentow
::  OLD: \czy_wyc/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
_as:={? exec('czy_okr_zam_con','konsolidacja',1)
     || _as:=0
     || FUN.ask('Wycofać zaznaczone dokumenty?'@)
     ?};
{? _as
|| sel_nchk();
   TT_WYC:=DOK.sel_aget();
   {? TT_WYC.last()
   || ile:=DOK.sel_size(); byl:=licz:=licz2:=spr_rozl:=0; wyc:=1; sel_nchk(); 1
   || VAR_DEL.delete('TT_WYC'); 0
   ?}
|| 0
?}


\po_anulu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.60]
:: OPIS: Formula po akcji grupowej wycofania dokumentow
::  OLD: \po_anulu/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh();
{? TT_WYC.last()
|| {!
   |? {? DOK.seek(TT_WYC.REF,DOK.name())
      || {? DOK.A='N' || byl+=1 ?};
         {? ~exec('spr_mod','dok_fks') & -DOK.A='t' & -DOK.ZP='n'
         || licz+=exec('wyc_dok','dok_fks',0)
         ?}
      ?};
      TT_WYC.prev()
   !}
?};
DOK.cntx_pop();
_lm:=+form(ile);
{? SSTALE.AO().NR=0
|| {? licz=ile
   || FUN.info('Operacja zakończona. \n'+
               'Liczba wycofanych dokumentów: %1'@[form(licz,_lm)])
   ||   {? licz<ile
         ||  {? byl>0
              ||   FUN.info('Operacja zakończona. Liczba wycofanych dokumentów: %1'
                                 '\n\n        Dokumenty, dla których operacja się nie powiodła: %2'
                                 '\n              w tym dokumenty wcześniej nie zakończone: %3'@[form(licz,_lm,,' ,'),form(ile-licz,_lm,,' ,'),form(byl,_lm,,' ,')])
              ||    FUN.info('Operacja zakończona. Liczba wycofanych dokumentów: %1'
                                  '\n\n        Dokumenty, dla których operacja się nie powiodła: %2'@[form(licz,_lm,,' ,'),form(ile-licz,_lm,,' ,')])
             ?}
        ||    FUN.info('Operacja zakończona. Liczba wycofanych dokumentów: %1'@[form(licz,_lm,,' ,')])
        ?}
   ?}
|| {? licz=ile
   || {? licz2>0
      || FUN.info('Operacja zakończona. \n'+
               'Wycofano akceptację dla wszystkich zaznaczonych dokumentów.\n'
               'Liczba wycofanych dokumentów: %1'
              '\nLiczba usniętych dokumentów powstałych dla wielu jednostek księgowych: %2'@[form(licz,_lm,,' ,'),form(licz2,_lm,,' ,')])
      || FUN.info('Operacja zakończona. \n'+
               'Wycofano akceptację dla wszystkich zaznaczonych dokumentów.\n'
               'Liczba wycofanych dokumentów: %1'@[form(licz,_lm,,' ,')])
      ?}
   ||
        {? licz<ile
        ||  {? byl>0
            ||   FUN.info('Operacja zakończona. Wycofano akceptację dla dokumentów: %1'
                  '\n\n       Dokumenty, dla których operacja się nie powiodła: %2'
                  '\n            w tym dokumenty wcześniej nie zakończone: %3'@[form(licz,_lm,,' ,'),form(ile-licz,_lm,,' ,'),form(byl,_lm,,' ,')])
             ||   FUN.info('Operacja zakończona. Wycofano akceptację dla dokumentów: %1'
                  '\n\n       Dokumenty, dla których operacja się nie powiodła: %2'@[form(licz,_lm,,' ,'),form(ile-licz,_lm,,' ,')])
            ?}
         ||   FUN.info('Operacja zakończona. Wycofano akceptację dla dokumentów: %1'@[form(licz,_lm,,' ,')])
         ?}
   ?}
?};
echo();
VAR_DEL.delete('TT_WYC','ile','licz','byl','spr_rozl','wyc')


\dok_kurs_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formula na F3 dla pola DOK.TYPKRS
::  OLD: \oa_dokm/dok_zrd2.fml
::  OLD: \dok_kurs_fs/dok_fks.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=fld();
WSK.cntx_psh(); WSK.index('RODZ'); WSK.prefix('K');
{? WSK.first()
|| TAB_KRS:=tab_tmp(1,'RKURS','STRING[1]','',
                      'KURS','STRING[25]','Nazwa');
   {! |?
      TAB_KRS.RKURS:={? WSK.WART='1' || 'K' |? WSK.WART='2' || 'S' || 'R' ?};
      TAB_KRS.KURS:=WSK.TRESC;
      TAB_KRS.add();
      WSK.next()
   !};
   {? cur_afld()='KURSOPIS'
   || _ndx:=TAB_KRS.ndx_tmp(,1,'KURS',,);
      TAB_KRS.index(_ndx); TAB_KRS.prefix()
   ?};
   _okno:=TAB_KRS.mk_sel('Typy kursów'@,'P',,'tab_krs_wer',,,TAB_KRS.size()+3,,'U');
   TAB_KRS.win_fld(_okno,,'RKURS',,,,,,,,'Rodzaj'@);
   TAB_KRS.win_fld(_okno,,'KURS',,,,,,,,'Nazwa'@);
   TAB_KRS.win_act(_okno,,'Formuła','Wybierz'@@,,'Wybór rodzaju kursu'@,,"sel_exit()",1,,,,'W');
   TAB_KRS.win_act(_okno,,'Kolejność');
   TAB_KRS.win_sel(_okno);
   {? ~(_zwrot<>'' & TAB_KRS.find_key(_zwrot)) || TAB_KRS.first() ?};
   _zwrot:={? TAB_KRS.select(,1)
           || {? cur_afld()='TYPKRS' || fld(TAB_KRS.RKURS) || fld(TAB_KRS.KURS) ?}
           || {? TAB_KRS.find_key(_zwrot) || fld() || '' ?}
           ?};
   VAR_DEL.delete('TAB_KRS')
?};
WSK.cntx_pop();
_zwrot


\netto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Obliczanie wartości netto pozycji VAT
::  OLD: \netto/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? VPOZ.NETTO$2=0
|| VPOZ.NETTO:=(ROZNE.WCLO+VPOZ.WCLO+VPOZ.CLO+VPOZ.AKCYZA)$2
?};
exec('be_edok_fld','dok_fks1')


\bl_stvpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula - wart. pocz. pola VPOZ.PR
::  OLD: \bl_stvpo/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.KRAJ=RVAT.KRAJ || RVAT.STVAT || null ?}


\vat_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: oblicza kwote VAT oraz BRUTTO
::       Funkcja służy do obliczenia, kwoty VAT oraz BRUTTO na podstawie NETTO
::       oraz % VAT. Obsługuje tabelę PVAT.
::  OLD: \vat_red/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? VPOZ.VAT=0    || VPOZ.VAT:=(0.01*VPOZ.NETTO*exec('vat','dok_fks',VPOZ.PR().KOD))$2 ?};
{? VPOZ.BRUTTO=0 || VPOZ.BRUTTO:=(VPOZ.NETTO+VPOZ.VAT)$2 ?};
exec('be_edok_fld','dok_fks1')


\vat_redb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.53]
:: OPIS: Przed redakcja pola BRUTTO oblicza kwote brutto (redag. VPOZ)
::  OLD: \vat_redb/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_pr:={? VPOZ.PR<>null || exec('vat','dok_fks',VPOZ.PR().KOD) || 0 ?};
{? VPOZ.NETTO$2=0 & VPOZ.VAT$2<>0
|| VPOZ.NETTO:={? _pr<>0 || (100*VPOZ.VAT/(_pr))$2 || 0 ?};
   VPOZ.BRUTTO:=(ROZNE.WCLO+VPOZ.NETTO+VPOZ.VAT)$2
|? VPOZ.BRUTTO=0
|| {? VPOZ.NETTO$2=0 & VPOZ.VAT$2<>0 & ROZNE.WCLO$2=0
   || VPOZ.NETTO:=(0.01*VPOZ.NETTO/(_pr))$2;
      VPOZ.BRUTTO:=(ROZNE.WCLO+VPOZ.NETTO+VPOZ.VAT)$2
   |? VPOZ.NETTO$2=0 & ROZNE.WCLO$2<>0
   || VPOZ.BRUTTO:=(ROZNE.WCLO+VPOZ.VAT)$2
   || VPOZ.BRUTTO:=(VPOZ.NETTO+VPOZ.VAT)$2
   ?}
?};
exec('be_edok_fld','dok_fks1')


\ae_brut
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.62]
:: OPIS: Po redakcji wartości brutto
::  OLD: \ae_brut/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_wart:=fld(fld()$2);
exec('set_netto','dok_fks1',0);
1


\beczyodl
::----------------------------------------------------------------------------------------------------------------------
::   UTW: BZ [12.41]
::  OPIS: Przed redakcja pol C_PREWSK, C_PROC_S tabeli VPOZ
::  OLD: \beczyodl/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? VPOZ.GRVAT & exec('gr_pod_typ','dok_fks',VPOZ.GRVAT().GRVAT().KOD)=1  & ~(SLO.KOD='ZakuPods' | SLO.KOD='ZInwPods')
|| exec('be_edok_fld','dok_fks1')
|| 0
?}


\aeczyodl
::----------------------------------------------------------------------------------------------------------------------
::   UTW: BZ [12.41]
::  OPIS: Po redakcji pol C_PREWSK, C_PROC_S tabeli VPOZ
::  OLD: \aeczyodl/skid.fml
::----------------------------------------------------------------------------------------------------------------------
exec('setvatodl','dok_fks')


\wz_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula na wzorzec pola VPOZ.KK
::  OLD: \wz_kk/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAT7.KK='T'
|| '<- \\F\\3 ->#'
|| exec('wz_konto','edkonto','VPOZ','KK')
?}


\be_vpk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula przed redakcja pol: VPOZ.KK, VPOZ.K2
::   WE: _a - akronim pola ('KK', 'K2')
::  OLD: \be_vpk/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
_result:={? ($('VAT7.'+_a))()='N'
         || exec('be_konto','edkonto','VPOZ',_a)
         || ROZNE.SZUK:=1; VAT7.TYP:=_a; 1
         ?};
{? _result || _result:=exec('be_edok_fld','dok_fks1') ?};
VAR_DEL.delete('__tagvpztip');
_result


\f3_vpk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula F3 dla pol: VPOZ.KK, VPOZ.K2
::   WE: _a - akronim pola ('KK', 'K2')
::  OLD: \f3_vpk/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? ($('VAT7.'+_a))()='N'
|| exec('f3_konto','edkonto','VPOZ',_a)
|| _ret:=1;
   _dwwal:=exec('czy2tab','dok_fks');
   {! |?
      exec('sel_vroz','dok_fks');
      _vgr:=-VPOZ.GRVAT().GRVAT().KOD;
      {? _vgr='zinwnpod' | _vgr='zpoznpal' | _vgr='zpoznpod' | _vgr='zakupnpr'
      || _vbrutto:={? _dwwal || VPOZ.BRUTTO_D || VPOZ.BRUTTO ?};
         {? POMOC.F1>_vbrutto
         || _ret:=~FUN.ask('W rozdzielniku kont wprowadzono kwoty przewyższające wartość Brutto.\nCzy na pewno zakończyć edycję rozdzielnika?'@)
         |? POMOC.F1<_vbrutto
         || _ret:=~FUN.ask('W rozdzielniku kont nie rozdysponowano całej kwoty stanowiącej wartość Brutto.\nCzy na pewno zakończyć edycję rozdzielnika?'@)
         || _ret:=0
         ?}
      || _vnetto:={? _dwwal || VPOZ.NETTO_D || VPOZ.NETTO ?};
         {? POMOC.F1>_vnetto
         || _ret:=~FUN.ask('W rozdzielniku kont wprowadzono kwoty przewyższające wartość Netto.\nCzy na pewno zakończyć edycję rozdzielnika?'@)
         |? POMOC.F1<_vnetto
         || _ret:=~FUN.ask('W rozdzielniku kont nie rozdysponowano całej kwoty stanowiącej wartość Netto.\nCzy na pewno zakończyć edycję rozdzielnika?'@)
         || _ret:=0
         ?}
     ?};
      _ret
   !}
?}


\ae_vpk1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: po redakcji VPOZ.KK
::  OLD: \ae_vpk1/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAT7.KK='N'
|| exec('ae_konto','edkonto',_a,'VPOZ','KK',0,1,1)
|| exec('ae_kk','!fks_dks_dark')
?}


\ae_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula przed redakcja pola VPOZ.KK
::  OLD: \ae_kk/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ust_vkk','dok_fks','KK');
1


\wz_k2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula na wzorzec pola VPOZ.K2
::  OLD: \wz_k2/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAT7.K2='T'
|| '<- \\F\\3 ->#'
|| exec('wz_konto','edkonto','VPOZ','K2')
?}


\ae_vpk2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: po redakcji VPOZ.K2
::  OLD: \ae_vpk2/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAT7.K2='N'
|| exec('ae_konto','edkonto',_a,'VPOZ','K2',0,1,1)
|| exec('ae_k2','!fks_dks_dark')
?}


\ae_k2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula przed redakcja pola VPOZ.K2
::  OLD: \ae_k2/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ust_vkk','dok_fks','K2');
1


\vpoz_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Funkcja umożliwia wprowadzenie do pól Konto kosztów oraz symboli istniejących kont analitycznych
::  OLD: \vpoz_kon/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
AN.win_sel('KON');
AN.index('SYM'); AN.prefix(); AN.find_key(_a);
{? AN.select(,1)
|| VPOZ.R:=AN.SYM
?};
1


\tstr_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Test konta
::  OLD: \tstr_kon/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? +VPOZ.R
|| {? ~exec('akc_kont','edkonto',VPOZ.R) || 1
   || FUN.info('Brak konta %1 w planie kont.'@[VPOZ.R]); 1
   ?}
|| 1
?}


\pr_wclo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed redakcją pola VPOZ.WCLO
::  OLD: \pr_wclo/fak_imp.fml
::----------------------------------------------------------------------------------------------------------------------
{? VPOZ.WCLO$2=0
|| _w:=0;
   FAK.index('FAK');
   FAK.prefix(DOK.ref());
   {? FAK.first() || {! |? {? FAK.ZN='T' || _w+=FAK.WAR?}; FAK.next() !} ?};
   VPOZ.cntx_psh();
   _war:=0;
   {? VPOZ.first() || {!|? _war+=VPOZ.WCLO; VPOZ.next !} ?};
   _w:={? _w$2>=_war$2 || _w-_war || 0 ?};
   VPOZ.cntx_pop();
   VPOZ.WCLO:=_w
?};
exec('be_edok_fld','dok_fks1')


\pr_vkos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Po redakcji pola VPOZ.KOS
::  OLD: \pr_vkos/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.JORG=FINFO.NAROD
|| fld(fld$2)
|| fld(fld$6); exec('obl_vwal','dok_fks')
?}; 1


\po_vwarw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.50]
:: OPIS: Formula po redakcji pol VPOZ.WARW i VPOZ.KURS
::   WE: [_a] - przeliczyć pola walutowe? [1]-tak 0-nie
::  OLD: \po_vwarw/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
_wal:={? var_pres('_a')>0 || _a || 1 ?};
exec('po_vwarw','dok_fks1',_wal)


\po_kursd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.50]
:: OPIS: Formula po red. pola VPOZ.KURS_D
::  OLD: \po_kursd/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
exec('po_kursd','dok_fks1')


\bl_a_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wartosc poczatkowa pola VPOZ.A_VAT
::  OLD: \bl_a_vat/skid.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.A_VAT


\blokrvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wartosc poczatkowa pola VPOZ.OKRVAT
::  OLD: \blokrvat/skid.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.OKRVAT


\bevatodl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Przed redakcja pola VAT_ODL tabeli VPOZ
::  OLD: \bevatodl/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? VPOZ.GRVAT & exec('gr_pod_typ','dok_fks',VPOZ.GRVAT().GRVAT().KOD)<>-1 || exec('be_edok_fld','dok_fks1') || 0 ?}


\aevatodl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Po redakcja pola VAT_ODL tabeli VPOZ
::  OLD: \aevatodl/skid.fml
::----------------------------------------------------------------------------------------------------------------------
fld(fld()$2);
{? VPOZ.VAT>0 & fld()<0
|| FUN.info('Wartość VAT do odliczenia nie może być ujemna.'@); 0
|? VPOZ.VAT<0 & fld()>0
|| FUN.info('Wartość VAT do odliczenia nie może być dodatnia.'@); 0
|? VPOZ.VAT>0 & fld()>VPOZ.VAT
|| FUN.info('Wartość VAT do odliczenia\nnie może być większa od kwoty podatku VAT.'@);
   fld(VPOZ.VAT); 0
|? VPOZ.VAT<0 & fld()<VPOZ.VAT
|| FUN.info('Wartość VAT do odliczenia\nnie może być mniejsza od kwoty podatku VAT.'@);
   fld(VPOZ.VAT); 0
|| VPOZ.VATKOSZT:=VPOZ.VAT-fld();  1
?}


\new_vatv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GCW [12.30]
:: OPIS: Formula na blank dla pola VPOZ.RVAT
::  OLD: \new_vatv/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.RVAT


\bevatv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GCW [12.30]
:: OPIS: Przed redakcja pol zwiazanych z VAT w pozycji dokumentu (VPOZ)
::  OLD: \bevatv/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? VPOZ.DOK().DOK_REJ<>null & (VPOZ.DOK().DOK_REJ().SLO().KOD='VAT' | SLO.KOD='SAD')
|| exec('be_edok_fld','dok_fks1')
|| 0
?}


\vpoz_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula Dolacz w okienku IMP, SEL tabeli VPOZ
::   WE: [_a - jesli jest - oznacza wywolanie dolaczania z okienkiem z dwoma kursami]
::  OLD: \vpoz_dol/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
{? PAR_SKID.get(441)='N' &  exec('status_bl','dok_fks1') &
   ~FUN.ask('Dokument elektroniczny posiada status \''@+exec('get_dokum_stat','efaktury')+'\'.\n'+
            'Czy na pewno chcesz dodać rekord?'@)
|| return(0)
?};
_powrot:=0;
_refvpoz:=VPOZ.ref();
{? _=0
|| exec('okna_vr','dok_fks')
|| KA.ITAB:=1;
   {? PAR_SKID.get(83)='T' || VPOZ.win_edit('RED_W2PR') || VPOZ.win_edit('RED_W2') ?}
?};
VAT7.KK:=VAT7.K2:='N';
VPOZ.blank();
{? DOK.JORG<>FINFO.NAROD
|| VPOZ.KOS:=ROZNE.KRS2
|| {? KA.WALUTA<>null || VPOZ.KURS_D:=ROZNE.KRS || VPOZ.KURS_D:=0 ?}
?};
VPOZ.KURS:={? ROZNE.KRS2=0 || ROZNE.KRS || ROZNE.KRS2 ?};
{? VPOZ.GRVAT & PAR_SKID.get(83)='T'
|| {? exec('gr_pod_typ','dok_fks',VPOZ.GRVAT().GRVAT().KOD)=1 & ~(SLO.KOD='ZakuPods' | SLO.KOD='ZInwPods')
   || VPOZ.C_PREWSK:=VPOZ.C_PROC_S:=1
   || VPOZ.C_PREWSK:=VPOZ.C_PROC_S:=0
   ?}
?};
VPOZ.cntx_psh();
_vbr:=_vwal:=_vnet:=0;
{? VPOZ.first() || {!|? _vbr+=VPOZ.BRUTTO; _vwal+=VPOZ.WARW; _vnet+=VPOZ.NETTO; VPOZ.next !} ?};
VPOZ.cntx_pop();
{? ROZNE.WARW$2<>0 | ROZNE.WCLO$2<>0
|| ROZNE.WARW:={? ROZNE.WARW$2>=_vwal$2 || ROZNE.WARW-_vwal || 0 ?};
   ROZNE.WCLO:={? ROZNE.WCLO$2>=_vnet$2 || ROZNE.WCLO-_vnet || 0 ?}
|? DOK.SUMWAL$2<>0
|| FAK.index('FAK'); FAK.prefix(DOK.ref);
   {? ~FAK.first() || VPOZ.BRUTTO:=DOK.SUMWAL-_vbr  ?}
?};
{? DOK.EDOKUM<>''
|| _ref:=BB.sqlint(DOK.EDOKUM); _nam:=form(DOK.EDOKUM-8);
   {? _ref<>0 & _nam<>''
   || EDOKUM.cntx_psh(); EDOKUM.use(_nam); EDOKUM.prefix();
      {? EDOKUM.seek(_ref,_nam) & ~EDOKUM.TYP().TYPVATPR &
         EDOKUM.WAL & KA.WALUTA & EDOKUM.WAL<>FINFO.NAROD & EDOKUM.WAL=KA.WALUTA
      || VAT_REJ.cntx_psh(); VAT_REJ.prefix();
         RVAT.cntx_psh(); RVAT.prefix();
         SLO.cntx_psh(); SLO.prefix();
         ROZNE.WARW:={? DOK.RVAT().RVAT & DOK.RVAT().RVAT().EWID & DOK.RVAT().RVAT().EWID().KOD='ZakuKraj'
                     || EDOKUM.WART
                     || EDOKUM.NETTO
                     ?};
         {? _=0
         || {? VPOZ.KURS=0 || VPOZ.KURS:=EDOKUM.KURS ?}
         || {? VPOZ.KURS_D=0 || VPOZ.KURS_D:=EDOKUM.KURS ?};
            {? VPOZ.KURS=0 || VPOZ.KURS:=EDOKUM.KURS ?}
         ?};
         VAT_REJ.cntx_pop(); RVAT.cntx_pop(); SLO.cntx_pop();
         VPOZ.cntx_psh(); VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
         {? VPOZ.first() || {! |? ROZNE.WARW-=VPOZ.WARW; VPOZ.next() !} ?};
         VPOZ.cntx_pop()
      ?};
      EDOKUM.cntx_pop()
   ?}
?};
VPOZ.WARW:=ROZNE.WARW;
ROZNE.GR_VAT:=VPOZ.GRVAT().GRVAT;
{? DOK.E_DOC & 'pdf;bmp;png;tiff;tif;jpeg;jpg'*(-DOK.bl_info('E_DOC','EXTENSION'))>0
|| HELP.PREVIEW:=DOK.E_DOC
?};
VPOZ.add();
_kr:="VROZ.index('VROZ'); VROZ.prefix(VPOZ.ref(),_a);
      _dwwal:=exec('czy2tab','dok_fks');
      _sum:=0;
      _kwota:={? _b='Netto'
              || {? ~_dwwal || VPOZ.NETTO || VPOZ.NETTO_D ?}
              || {? ~_dwwal || VPOZ.BRUTTO || VPOZ.BRUTTO_D ?}
              ?};
      {? VROZ.first()
      || {!|? _sum+=VROZ.KW; VROZ.next !};
         {? _sum<>_kwota || 1 || 0 ?}
      || 0
      ?}";
{! |?
   {? VPOZ.edit("exec('vat_chk','!fks_dks_dark')")
   || _powrot:=0;
      {? ((VPOZ.D)~2 <> (VPOZ.DOK().DOP)~2 | ((VPOZ.D)~2 = (VPOZ.DOK().DOP)~2 & (VPOZ.D)~1 <> (VPOZ.DOK().DOP)~1) ) &
         FUN.ask('Przypisać okres VAT pozycji na podstawie daty sprzedaży?'@)
      || exec('okr_vpoz_d','dok_fks1'); _vdchng:=1
      || _vdchng:=0
      ?};
      VPOZ.put();
      _vgr:=-VPOZ.GRVAT().GRVAT().KOD;
      _nb:={? _vgr='zinwnpod' | _vgr='zpoznpal' | _vgr='zpoznpod' | _vgr='zakupnpr'
           || 'Brutto'
           || 'Netto'
           ?};
      _kk:=_kr('KK',_nb); _k2:=_kr('K2',_nb);
      _powrot:={? _kk & _k2
               || ~FUN.ask('Kwoty wprowadzone w rozdzielnikach Konto(1) i Konto(2) są niezgodne z wartością %1.\nCzy na pewno akceptować pozycję VAT?'@[_nb])
               |? _kk
               || ~FUN.ask('Kwoty wprowadzone w rozdzielniku Konto(1) są niezgodne z wartością %1.\nCzy na pewno akceptować pozycję VAT?'@[_nb])
               |? _k2
               || ~FUN.ask('Kwoty wprowadzone w rozdzielniku Konto(2) są niezgodne z wartością %1.\nCzy na pewno akceptować pozycję VAT?'@[_nb])
               || 0
               ?};
      {? _vdchng || exec('dok_akt','fks_vat') ?};
      _refvpoz:=VPOZ.ref();
      exec('suma_vat','dok_fks','VPOZ');
      {? VPOZ.GRVAT().GRVAT().KOD='ZInwPodZ' | VPOZ.GRVAT().GRVAT().KOD='ZInwPodS'
      || exec('add_vat_sr','dok_fks')
      ?}
   || VROZ.index('VROZ'); VROZ.prefix(VPOZ.ref());
      {? VROZ.size<>0
      || _powrot:=~FUN.ask('Wprowadzono kwoty dotyczące VAT.\n'
                           'Czy na pewno opuścić okienko bez zapisu?'@)
      ?};
      {? ~_powrot || exec('kas_vroz','!fks_dks_dark',1) ?}
   ?};
   {? SLO.f_active() || SLO.f_clear() ?};
   {? _powrot=0 || VAR_DEL.delete('__tagvpztip') ?};
   _powrot
!};
VPOZ.seek(_refvpoz)


\vat_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Sprawdzanie rekordu VPOZ
::  OLD: \vat_chk/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_kvat:=VPOZ.RVAT().RVAT().KVAT().SYM;
{? VPOZ.NETTO=0 & VPOZ.VAT=0 & VPOZ.BRUTTO=0
|| FUN.info('Przynajmniej jedna z pozycji: Netto, VAT lub Brutto\nmusi być różna od zera'@); 'NETTO'
|? var_pres('NETTO_W',VPOZ)>0 & DOK.WAL &  DOK.WAL<>DOK.JORG & (_kvat='SprzKraj' | _kvat='ZakupKraj') &
   DOK.KRAJ().KOD='PL' & VPOZ.NETTO_W=0 & VPOZ.VAT_W=0 & VPOZ.BRUTTO_W=0
|| FUN.info('Przynajmniej jedna z kwot walutowych:\nNetto, VAT lub Brutto\nmusi być różna od zera'@);
   {? exec('czy_brutto','dok_fks') || 'NETTO_W' || 'BRUTTO_W' ?}
|| {? (VPOZ.PR().KOD='Zwol.' | VPOZ.PR().KOD=' 0 %'  | VPOZ.PR().KOD=' -' | VPOZ.PR().KOD=' -o') &
      (1+VPOZ.GRVAT().GRVAT().KOD='Z' & 1+(VPOZ.GRVAT().GRVAT().KOD+4)<>'N')
   || _dalej:={? FUN.ask('Dla wybranej stawki należałoby wybrać grupę podatkową wskazującą\n na brak odliczenia VAT. Kontynuować?'@)
              || ''
              || 'GRVAT'
              ?}
   || _dalej:=''
   ?};
   {? _dalej=''
   || _v:='';
      {? ~VPOZ.PR
      || FUN.info('Nie wybrano procentu VAT.'@); _v:='PR'
      |? DOK_REJ.SLO().KOD<>'WEW' & ~VPOZ.GRVAT
      || FUN.info('Nie wybrano grupy podatkowej.'@); _v:='GRVAT'
      ?};
      {? ~+_v
      || {? DOK.JORG=FINFO.NAROD & VPOZ.KURS_D$6<>0 & VPOZ.WARW$2=0 &
         (4+_kvat<>'ImpT')
         || 'WARW'
         |? (_v:=exec('chkvatodl','!fks_dks_dark'); _v<>'')
         || _v
         || {? VPOZ.KK=35*'?' || VPOZ.KK:='' ?};
            {? VPOZ.K2=35*'?' || VPOZ.K2:='' ?};
            _w:=exec('brut_net','dok_fks');
            {? (type_of(_w)=2 & _w='') |  (type_of(_w)=1 & _w=1)
            || {? exec('czy_brutto','dok_fks')
               || 1
               || {? exec('czy2krs','dok_fks') || exec('po_kursd','!fks_dks_dark') || 1 ?}
               ?}
            ?}
         ?}
      || _v
      ?}
   || _dalej
   ?}
?}


\chkvatodl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Po redakcji pola VAT_ODL tabeli VPOZ
::  OLD: \chkvatodl/skid.fml
::----------------------------------------------------------------------------------------------------------------------
_typ:=exec('gr_pod_typ','dok_fks',VPOZ.GRVAT().GRVAT().KOD);
{? _typ=0 & VPOZ.VAT_ODL<>0 &
   ~FUN.ask('Grupa VAT wskazuje na brak odliczenia\na wprowadzono kwotę VAT do odliczenia.\nKontynuować?'@) |
   _typ=2 & VPOZ.VAT_ODL<>VPOZ.VAT &
   ~FUN.ask('Grupa VAT wskazuje na całkowite odliczenia\na wprowadzona kwota VAT do odliczenia\n'+
            'jest inna niż kwota VAT.\nKontynuować?'@)
|| 'VAT_ODL'
|| ''
?}


\kas_vroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula usuwa rekordy VROZ i VPOW powiazane z aktualym rekordem VPOZ
::   WE: [_a - jest jesli nalezy usunac rekord VPOZ]
::  OLD: \kas_vroz/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
do();
VPOW.index('VPOW');
VROZ.index('VROZ'); VROZ.prefix(VPOZ.ref());
{? VROZ.first()
|| {! |?
      VPOW.prefix(VROZ.ref()); {? VPOW.first() || {!|? VPOW.del() !} ?};
      VROZ.del()
    !}
?};
{? _=1 || VPOZ.del() ?};
{? end()=0
|| FUN.info('Operacja usuwania nie powiodła się.'@)
|| exec('suma_vat','dok_fks','VPOZ');
   exec('dok_akt','fks_vat')
?}


\vpoz_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula Popraw w okienku IMP, SEL tabeli VPOZ
::  OLD: \vpoz_pop/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
{? PAR_SKID.get(441)='N' &  exec('status_bl','dok_fks1') &
   ~FUN.ask('Dokument elektroniczny posiada status \''@+exec('get_dokum_stat','efaktury')+'\'.\n'+
            'Czy na pewno chcesz zmodyfikować rekord?'@)
|| return(0)
?};
P_V.cntx_psh();
P_V.index('V_P'); P_V.prefix(VPOZ.ref()); _one:=P_V.first();
P_V.cntx_pop();
{? _one & ~FUN.ask('Pozycja związana z dekretem. Edycja może spowodować niespójności.\n'@+
           'Czy na pewno chcesz poprawić rekord?'@)
|| return(0)
?};
_powrot:=0;
_kr:="VROZ.index('VROZ'); VROZ.prefix(VPOZ.ref(),_a);
      _dwwal:=exec('czy2tab','dok_fks');
      _sum:=0;
      _kwota:={? _b='Netto'
              || {? ~_dwwal || VPOZ.NETTO || VPOZ.NETTO_D ?}
              || {? ~_dwwal || VPOZ.BRUTTO || VPOZ.BRUTTO_D ?}
              ?};
      {? VROZ.first()
      || {!|? _sum+=VROZ.KW; VROZ.next !};
         {? _sum<>_kwota || 1 || 0 ?}
      || 0
      ?}";
_crc_be:=_crc_ae:='';
exec('okna_vr','dok_fks');
exec('ust_vkk','dok_fks','KK');
exec('ust_vkk','dok_fks','K2');
_TROZ:=tab_tmp(1,'KONTO','STRING[35]','Konto','TYP','STRING[2]','Typ','KW','REAL','Kwota');
VROZ.index('VROZ');
VROZ.prefix(VPOZ.ref());
{? VROZ.first()
|| {!|? _TROZ.TYP:=VROZ.TYP; _TROZ.KONTO:=VROZ.KONTO; _TROZ.KW:=VROZ.KW; _TROZ.add();
        _crc_be+=VROZ.TYP+VROZ.KONTO+$VROZ.KW;
        VROZ.next()
   !}
?};
_TPOW:=tab_tmp(1,'VROZ','INTEGER','','LP','INTEGER','','SLU','INTEGER','','KOD','INTEGER','','KW','REAL','');
VPOW.index('VPOW'); VPOW.prefix(VROZ.ref());
{? VPOW.first()
|| {!|? _TPOW.LP:=VPOW.LP; _TPOW.SLU:=#VPOW.SLU; _TPOW.KOD:=#VPOW.KOD; _TPOW.KW:=VPOW.KW; _TPOW.VROZ:=#VROZ.ref();
        _TPOW.add();
        VPOW.next()
   !}
?};
ROZNE.GRVAT:=VPOZ.GRVAT;
ROZNE.GR_VAT:=VPOZ.GRVAT().GRVAT;
{? DOK.E_DOC & 'pdf;bmp;png;tiff;tif;jpeg;jpg'*(-DOK.bl_info('E_DOC','EXTENSION'))>0
|| HELP.PREVIEW:=DOK.E_DOC
?};
_vpozd:=VPOZ.D;
{! |?
   {? VPOZ.edit("exec('vat_chk','!fks_dks_dark')")
   || {? ((VPOZ.D~2)<>_vpozd~2 | ((VPOZ.D~2)=_vpozd~2 & (VPOZ.D~1)<>_vpozd~1)) &
         FUN.ask('Przypisać okres VAT pozycji na podstawie daty sprzedaży?'@)
      || exec('okr_vpoz_d','dok_fks1'); _vdchng:=1
      || _vdchng:=0
      ?};
      _vgr:=-VPOZ.GRVAT().GRVAT().KOD;
      _nb:={? _vgr='zinwnpod' | _vgr='zpoznpal' | _vgr='zpoznpod' | _vgr='zakupnpr'
           || 'Brutto'
           || 'Netto'
           ?};
      _kk:=_kr('KK',_nb); _k2:=_kr('K2',_nb);
      _powrot:={? _kk & _k2
               || ~FUN.ask('Kwoty wprowadzone w rozdzielnikach Konto(1) i Konto(2) są niezgodne z wartością %1.\nCzy na pewno akceptować pozycję VAT?'@[_nb])
               |? _kk
               || ~FUN.ask('Kwoty wprowadzone w rozdzielniku Konto(1) są niezgodne z wartością %1.\nCzy na pewno akceptować pozycję VAT?'@[_nb])
               |? _k2
               || ~FUN.ask('Kwoty wprowadzone w rozdzielniku Konto(2) są niezgodne z wartością %1.\nCzy na pewno akceptować pozycję VAT?'@[_nb])
               || 0
               ?};
      VPOZ.put();
      {? _vdchng || exec('dok_akt','fks_vat') ?};
      exec('suma_vat','dok_fks','VPOZ')
   || VROZ.index('VROZ'); VROZ.prefix(VPOZ.ref());
      {? VROZ.first() || {!|? _crc_ae+=VROZ.TYP+VROZ.KONTO+$VROZ.KW; VROZ.next !} ?};
      {? _crc_be<>_crc_ae
      || _powrot:=~FUN.ask('Pozycje kwot VAT zostały zmienione.\n'
                           'Czy na pewno opuścić okno bez zapisu?'@);
         {? ~_powrot
         || exec('kas_vroz','!fks_dks_dark');
            {? _TROZ.first()
            || VROZ.prefix();
               {! |?
                  VROZ.VPOZ:=VPOZ.ref; VROZ.TYP:=_TROZ.TYP; VROZ.KONTO:=_TROZ.KONTO;
                  VROZ.KW:=_TROZ.KW; VROZ.add();
                  _TROZ.next
               !}
            ?};
            {? _TPOW.first()
            || VPOW.prefix();
               {! |?
                  VROZ.prefix();
                  {? VROZ.seek(_TPOW.VROZ,)
                  || VPOW.VROZ:=VROZ.ref();
                     SLUAPPL.prefix();
                     {? SLUAPPL.seek(_TPOW.SLU,)
                     || VPOW.SLU:=SLUAPPL.ref();
                        SLO.prefix();
                        {? SLO.seek(_TPOW.KOD,)
                        || VPOW.KOD:=SLO.ref;
                           VPOW.KW:=_TPOW.KW;
                           VPOW.LP:=_TPOW.LP;
                           VPOW.add()
                        ?}
                     ?}
                  ?};
                  _TPOW.next
               !}
            ?}
         ?}
      || _powrot:=0
      ?}
   ?};
   {? _powrot=0 || VAR_DEL.delete('__tagvpztip') ?};
   {? SLO.f_active() || SLO.f_clear() ?};
   _powrot
!}


\vpoz_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula Usun w okienku IMP, SEL tabeli VPOZ
::  OLD: \vpoz_usu/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
P_V.cntx_psh(); P_V.index('V_P'); P_V.prefix(VPOZ.ref()); _one:=P_V.first();
P_V.cntx_pop();
{? _one
|| FUN.info('Pozycja związana z dekretem.\nUsunięcie niemożliwe.'@);
   0
|? PAR_SKID.get(441)='N' &  exec('status_bl','dok_fks1') &
   ~FUN.ask('Dokument elektroniczny posiada status \''@+exec('get_dokum_stat','efaktury')+'\'.\n'+
            'Czy na pewno chcesz usunąć rekord?'@)
|| 0
|| {? FUN.ask('Usunąć bieżący wiersz?'@) || exec('kas_vroz','!fks_dks_dark',1) ?}
?}


\okr_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2008]
:: OPIS: Ustawia okres i tryb rozliczenia VAT w okienkach wertowania tabeli VPOZ
::  OLD: \okr_vat/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(441)='N' & exec('status_bl','dok_fks1') &
   ~FUN.ask('Dokument elektroniczny posiada status \''@+exec('get_dokum_stat','efaktury')+'\'.\n'+
            'Czy na pewno chcesz '@+{? -(4+menu_txt)='usuń' || 'usunąć'@ || 'zmodyfikować'@ ?} + ' rekord?'@)
|| return()
?};
{? VPOZ.sel_size()=0
|| {? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
   PARAM.A_VAT:=VPOZ.A_VAT;
   PARAM.OKR_TYP:={? VPOZ.OKR_Z | VPOZ.OKR_C || 1 ?};
   OKRO_F.cntx_psh();
   PARAM.OKROVAT:={? VPOZ.OKRVAT || VPOZ.OKRVAT().NAZ+'/'+OKRO_F.ROK().NAZ || '' ?};
   PARAM.OKR_C_S:={? VPOZ.OKR_C || VPOZ.OKR_C().NAZ+'/'+OKRO_F.ROK().NAZ || '' ?};
   PARAM.OKR_Z_S:={? VPOZ.OKR_Z || VPOZ.OKR_Z().NAZ+'/'+OKRO_F.ROK().NAZ || '' ?};
   OKRO_F.cntx_pop();
   PARAM.OKRES:=VPOZ.OKRVAT;
   PARAM.OKR_C:=VPOZ.OKR_C;
   PARAM.OKR_Z:=VPOZ.OKR_Z;
   {? exec('bg_okrvt','!fks_dks_dark')
   || VPOZ.OKRVAT:=PARAM.OKRES;
      VPOZ.A_VAT:=PARAM.A_VAT;
      VPOZ.OKR_Z:=PARAM.OKR_Z;
      VPOZ.OKR_C:=PARAM.OKR_C;
      VPOZ.put()
   ?};
   exec('ag_okrvt','!fks_dks_dark')
|| VPOZ.OKRVAT:=PARAM.OKRES;
   VPOZ.A_VAT:=PARAM.A_VAT;
   VPOZ.OKR_Z:=PARAM.OKR_Z;
   VPOZ.OKR_C:=PARAM.OKR_C;
   {? var_pres('odl_cz')>0 & odl_cz=2 & exec('gr_pod_typ','dok_fks',VPOZ.GRVAT().GRVAT().KOD)=1
   || _proc:={? PAR_SKID.get(83)='T' & VPOZ.C_PROC_S=0
             || 100
             || {? Plugin.runnable('GRVAT_STRUKTURA')
                || Plugin.run('GRVAT_STRUKTURA')
                || UD_POM.ROK_KON().PROC_VAT
                ?}
             ?};
      _prewsk:={? PAR_SKID.get(83)='T' & VPOZ.C_PREWSK
               || {? Plugin.runnable('GRVAT_PREWSKAZNIK')
                  || Plugin.run('GRVAT_PREWSKAZNIK')
                  || UD_POM.ROK_KON().PREWSK
                  ?}
               || 100
               ?};
      {? (SLO.KOD='ZakuPodS' | SLO.KOD='ZInwPodS')
      || VPOZ.VAT_ODL:=(VPOZ.VAT*(_proc/100)*(_prewsk/100)*(50/100))$2
      |? (SLO.KOD='ZakuPods' | SLO.KOD='ZInwPods')
      || VPOZ.VAT_ODL:=(VPOZ.VAT*(50/100))$2
      || VPOZ.VAT_ODL:=(VPOZ.VAT*(_proc/100)*(_prewsk/100))$2
      ?};
      VPOZ.VATKOSZT:=VPOZ.VAT-VPOZ.VAT_ODL
   ?};
   VPOZ.put()
?}


\bg_okrvt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2008]
:: OPIS: Grupa przed w okienkach wertowania tabeli VPOZ
::  OLD: \bg_okrvt/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
PARAM.win_edit('PARAMOKR');
{? VPOZ.sel_size()
|| PARAM.OKRES:=VPOZ.OKRVAT:=null;
   PARAM.A_VAT:=VPOZ.A_VAT:=null;
   PARAM.OKR_Z:=VPOZ.OKR_Z:=null;
   PARAM.OKR_C:=VPOZ.OKR_C:=null;
   PARAM.OKR_C_S:=PARAM.OKR_Z_S:='';
   PARAM.OKROVAT:=''
?};
vpozvat:=1; odl_cz:=1;
{? PARAM.edit()
|| {? PARAM.OKR_Z=PARAM.OKR_C & PARAM.OKR_Z<>null
   || PARAM.OKRES:=PARAM.OKR_Z;
      PARAM.OKR_Z:=PARAM.OKR_C:=null
   ?};
   1
|| VAR_DEL.delete('vpozvat','odl_cz'); 0
?}


\ag_okrvt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2008]
:: OPIS: Grupa po w okienkach wertowania tabeli VPOZ
::  OLD: \ag_okrvt/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dok_akt','fks_vat');
VAR_DEL.delete('vpozvat','odl_cz');
1


\vpoz_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja opis tabeli VPOZ
::  OLD: \vpoz_opis/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
_okno:=VPOZ.win_edit('?');
VPOZ.win_edit('OPIS');
{? VPOZ.edit()
|| VPOZ.put()
?};
VPOZ.win_edit(_okno)


\bm_grupa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2008]
:: OPIS: Formula przed poprawianiem grupy podatkowej w okienku R_SEL tabeli VPOZ
::  OLD: \bm_grupa/rozlicz.fml
::----------------------------------------------------------------------------------------------------------------------
{? VPOZ.OKRVAT<>null | exec('is_rozl_cz_full','fks_vat')
|| FUN.info('Nie można zmieniać grupy podatkowej dla rozliczonej pozycji.'@); 0
|| VPOZ.win_edit('');
   1
?}


\r_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [12.30]
:: OPIS: Ustawia rejestr VAT w okienkach wertowania tabeli VPOZ
::  OLD: \r_vat/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
{? VPOZ.size=1
|| FUN.info('Nie można zmienić przypisania do rejestru VAT, jeżeli dokument ma tylko jedną pozycję VAT.'@);
   return()
|? PAR_SKID.get(441)='N' & exec('status_bl','dok_fks1') &
   ~FUN.ask('Dokument elektroniczny posiada status \''+exec('get_dokum_stat','efaktury')+'\'.\n'+
            'Czy na pewno chcesz kontynuować?')
|| return()
|| {? VPOZ.sel_size()=0
   || VAT_REJ.cntx_psh;
      _ind:=VAT_REJ.ndx_tmp(,1,'REJ',,,'RVAT','RT',);
      VAT_REJ.index(_ind);
      VAT_REJ.prefix(DOK.REJ,DOK.RVAT().RVAT().RT);
      VAT_REJ.win_sel('SLO_TEN');
      {? VAT_REJ.select
      || VPOZ.RVAT:=VAT_REJ.ref;
         VPOZ.put()
      ?};
      VAT_REJ.ndx_drop(_ind);
      VAT_REJ.cntx_pop;
       _refrvat:=exec('sprvpozv','dok_fks',DOK.ref);
      {? _refrvat>0 & DOK.RVAT<>_refrvat || DOK.RVAT:=_refrvat; DOK.put ?}
   || {? PARAM.RVAT<>null || VPOZ.RVAT:=PARAM.RVAT; VPOZ.put() ?}
   ?}
?}


\bg_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [12.30]
:: OPIS: Grupa przed w okienkach wertowania tabeli VPOZ
::  OLD: \bg_rvat/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
PARAM.RVAT:=null;
{? VPOZ.sel_size()
|| VAT_REJ.cntx_psh;
   _ind:=VAT_REJ.ndx_tmp(,1,'REJ',,,'RVAT','RT',);
   VAT_REJ.index(_ind);
   VAT_REJ.prefix(DOK.REJ,DOK.RVAT().RVAT().RT);
   VAT_REJ.win_sel('SLO_TEN');
   {? VAT_REJ.select
   || PARAM.RVAT:=VAT_REJ.ref
   ?};
   VAT_REJ.ndx_drop(_ind);
   VAT_REJ.cntx_pop
?}


\ag_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [12.30]
:: OPIS: Grupa po w okienkach wertowania tabeli VPOZ
::  OLD: \ag_rvat/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_refrvat:=exec('sprvpozv','dok_fks',DOK.ref);
{? _refrvat>0 & DOK.RVAT<>_refrvat || DOK.RVAT:=_refrvat; DOK.put() ?}


\bl_vroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Wartosc poczatkowa VROZ.VPOZ
::  OLD: \bl_vroz/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
VPOZ.ref()


\bl_tvroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Wartosc poczatkowa VROZ.TYP
::  OLD: \bl_tvroz/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
VAT7.TYP


\blkwvroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK  [2009+]
:: OPIS: Wartosc poczatkowa pola VROZ.KW
::  OLD: \blkwvroz/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
_kwota:=0;
_dwwal:=exec('czy2tab','dok_fks');
{? VPOZ.GRVAT<>null
|| _kwota:={? exec('gr_pod_typ','dok_fks',VPOZ.GRVAT().GRVAT().KOD)=0
           || {? ~_dwwal || VPOZ.BRUTTO || VPOZ.BRUTTO_D ?}
           || {? ~_dwwal || VPOZ.NETTO || VPOZ.NETTO_D ?}
           ?};
   VROZ.cntx_psh();
   VROZ.index('VROZ'); VROZ.prefix(VPOZ.ref(),VAT7.TYP);
   {? VROZ.first() || {! |? _kwota-=VROZ.KW; VROZ.next() !} ?};
   VROZ.cntx_pop()
?};
_kwota


\pr_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula przed Dolacz w okienku WER tabeli VROZ
::  OLD: \pr_dol/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
KA.POM_ROZ:=0;
1


\pr_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula przed Popraw w okienku WER tabeli VROZ
::  OLD: \pr_pop/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
KA.POM_ROZ:=VROZ.KW$2;
1


\usu_vroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula Usun w okienku WER tabeli VPOW
::  OLD: \usu_vroz/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć bieżący wiersz?'@)
|| do();
   VPOW.index('VPOW');
   VPOW.prefix(VROZ.ref());
   {? VPOW.first() || {! |? VPOW.del !} ?};
   VROZ.del();
   {? end()=0
   || FUN.info('Operacja usuwania nie powiodła się.'@)
   ?}
?}


\op_kont3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Formula Rekord przed w okienkach wertowania tabeli VROZ
::  OLD: \op_kont3/opis_kon.fml
::----------------------------------------------------------------------------------------------------------------------
exec('op_konta','konto',VROZ.KONTO,null,2);
exec('ka_opis','konto')


\chk_vroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula Record po w okienku WER tabeli VROZ
::  OLD: \chk_vroz/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
VROZ.KW:=VROZ.KW$2;
_a:=__CHK.record(VROZ,,'KONTO','KW');
_sum:="sql('select sum(KW) skw from prefixed_table(:_a) having sum(KW)<>0',VROZ)"; _sum:=_sum();
{? _sum.first() || KA.SUM:=_sum.SKW || KA.SUM:=KA.POM_ROZ:=0 ?};
{? _a='' & VPOZ.GRVAT<>null
|| _vgr:=-VPOZ.GRVAT().GRVAT().KOD;
   {? _vgr='zinwnpod' | _vgr='zpoznpal' | _vgr='zpoznpod' | _vgr='zakupnpr'
   || {? (KA.SUM-KA.POM_ROZ+VROZ.KW)>VAT7.BRUTTO
      || {? ~FUN.choice('Suma kwot z rozdzielnika przekracza kwotę brutto.'@,,'Popraw'@,'Kontynuuj'@)
         || VROZ.KW:=VAT7.BRUTTO-KA.SUM+KA.POM_ROZ; _a:='KW'
         ?}
      ?}
   || {? (KA.SUM-KA.POM_ROZ+VROZ.KW)>VAT7.NETTO
      || {? ~FUN.choice('Suma kwot z rozdzielnika przekracza kwotę netto.'@,,'Popraw'@,'Kontynuuj'@)
         || VROZ.KW:=VAT7.NETTO-KA.SUM+KA.POM_ROZ; _a:='KW'
         ?}
      ?}
   ?}
?};
_a


\vroz_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula Wyrozniki w okienku WER tabeli VROZ
::  OLD: \vroz_wyr/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_SKID.get(35)='T' & PAR_SKID.get(36)='T' & SSTALE.AO().NR<>0
|| KS.index('SYM');
   KS.prefix();
   _k:={? KS.find_key(SSTALE.AR,SSTALE.AR().SYNT+VROZ.KONTO) || KS.ref || null ?};
   {? _k<>null
   || KS_W.index('LP');
      KS_W.prefix(_k);
      {? KS_W.first()
      || {? KS_W.size=1
         || {? KS_W.ROZDZ='T' || exec('roz_vpow','!fks_dks_dark') || exec('red_vpow','!fks_dks_dark') ?}
         || KS_W.win_sel('SLO');
            {! |?
               {? KS_W.select(,1)
               || {? KS_W.ROZDZ='T' || exec('roz_vpow','!fks_dks_dark') || exec('red_vpow','!fks_dks_dark') ?}; 1
               || 0
               ?}
            !}
         ?}
      || FUN.info('Nie zdefiniowano słowników wyróżników\n dla konta rozdzielnika.'@); 0
      ?}
   || FUN.info('Niewłaściwe konto w pozycji dokumentu.'@); 0
   ?}
|| FUN.info('Niedostępna akcja redagowania wyróżników.'@); 0
?}


\roz_vpow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula do redakcji wyroznikow z rozdzielnikiem dla konta z rozdzielnika
::  OLD: \roz_vpow/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
VPOW.win_sel('WER');
SLO.win_dict('ONE'); SLO.win_sel('ONE');
VPOW.win_edit();
exec('ust_sum','!fks_dks_dark');
VPOW.select()


\ust_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula ustawia zmienne KA.SUM_ROZ, KA.POZ_ROZ dla wyroznikow
::       konta z rozdzielnika
::  OLD: \ust_sum/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
VPOW.index('KOD');
VPOW.prefix(VROZ.ref,KS_W.LP,KS_W.SLU);
KS_W.SLU().SLU();
KA.SUM_ROZ:=KA.POM_ROZ:=0;
{? VPOW.first() || {! |? KA.SUM_ROZ+=VPOW.KW; VPOW.next() !} ?};
KA.POZ_ROZ:=VROZ.KW-KA.SUM_ROZ;
1


\red_vpow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula do redakcji pojedynczego wyroznika dla konta z rozdzielnika
::  OLD: \red_vpow/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
KS_W.SLU().SLU();
VPOW.index('KOD'); VPOW.prefix(VROZ.ref(),KS_W.LP);
VPOW.win_edit('RED');
n:={? ~VPOW.first() || VPOW.blank(); VPOW.KOD:=KS_W.ST; VPOW.KW:=VROZ.KW$2; 1 || 0 ?};
{? VPOW.edit("{? n & VPOW.KOD=null || 'KOD' || '' ?}")
|| {? VPOW.KOD<>null
   || {? n || VPOW.add() || VPOW.put ?}
   || VPOW.del
   ?}
?};
&n


\bl_vpow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Wartosc poczatkowa VPOW.VROZ
::  OLD: \bl_vpow/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
VROZ.ref()


\dol_vpow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula po Dolacz, Usun, Popraw w okienku WER tabeli VPOW
::  OLD: \dol_vpow/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? menu_txt(,)='Usuń'
|| KA.SUM_ROZ:=KA.SUM_ROZ-KA.POM_ROZ
|| KA.SUM_ROZ:=KA.SUM_ROZ-KA.POM_ROZ+VPOW.KW
?};
KA.POZ_ROZ:=VROZ.KW-KA.SUM_ROZ;
KA.POM_ROZ:=0;
1


\pop_vpow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula przed Popraw w okienku WER tabeli VPOW
::  OLD: \pop_vpow/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
KA.POM_ROZ:=VPOW.KW$2;
1


\chk_vpow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula Rekord po w okienku WER tabeli VPOW
::  OLD: \chk_vpow/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=__CHK.record(VPOW,,'KOD','KW');
{? _a=''
|| {? KA.SUM_ROZ-KA.POM_ROZ+VPOW.KW>VROZ.KW
   || FUN.info('Suma kwot z rozdzielnika przekracza kwotę z rozdzielnika.'@);
      VPOW.KW:=KA.POZ_ROZ+KA.POM_ROZ; _a:='KW'
   ?}
?};
_a


\vpoz_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Formula wykonywana jako trigger dla tabeli VPOZ (put po, add po, del po)
::   WE: [_a] - typ operacji: 1-add, 2-put i 3-del
::       [_b] - wynik operacji
::  OLD: \vpoz_edi/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('vp_trig');
vp_trig:=0;
_typ:={? var_pres('_a')>0 & type_of(_a)=type_of(1) || _a ?};
_ok:={? var_pres('_b')>0 & type_of(_b)=type_of(1) || _b || 1 ?};
DOK.cntx_psh();
DOK.use(ref_name(VPOZ.DOK)); DOK.prefix();
VPOZ.DOK();
VPOZ.cntx_psh(); VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
DOK.NETTO:=DOK.VAT:=DOK.BRUTTO:=0;
_dsprz:=0;
{? VPOZ.first()
|| {! |?  DOK.NETTO+=VPOZ.NETTO;
          DOK.VAT+=VPOZ.VAT;
          DOK.BRUTTO+=VPOZ.BRUTTO;
          {? VPOZ.D<>DOK.DOP || _dsprz:=1 ?};
          VPOZ.next()
   !}
?};
{? _dsprz
|| DOK.DSP_WPOZ:='T'
|| DOK.DSP_WPOZ:='N'
?};
DOK.trig_off('*','*');
DOK.put();
DOK.trig_on('*','*');
{? DOK.EDOKUM<>''
|| _ref:=BB.sqlint(DOK.EDOKUM); _nam:=form(DOK.EDOKUM-8);
   {? _ref<>0 & _nam<>''
   || EDOKUM.cntx_psh(); EDOKUM.use(_nam); EDOKUM.prefix();
      {? EDOKUM.seek(_ref,_nam) || EDOKUM.NETTONAR:=DOK.NETTO; EDOKUM.put() ?};
      EDOKUM.cntx_pop()
   ?}
?};
VPOZ.cntx_pop();
DOK.cntx_pop();
{? _ok
|| _dok:={? _typ=3 || bfld('DOK') || VPOZ.DOK ?};
   {? _dok & (PAR_SKID.get(107)<>'T' | DOK.A<>'T')
   || exec('upd_dok_jpk_proc','dok_ksef',_dok)
   ?}
?};
~~


\pr_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula przed redakcja pola zmiennaj VAT7
::   WE: _a - akronim pola
::  OLD: \pr_kk/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ust_vkk','dok_fks',_a,1)


\bl_fasym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Wartość początkowa pola FAK.SYM
::  OLD: \bl_fasym/fak_imp.fml
::----------------------------------------------------------------------------------------------------------------------
_sym:='';
FAK.cntx_psh(); FAK.index('FAK'); FAK.prefix(DOK.ref());
{? ~FAK.first() || _sym:=DOK.NK ?};
FAK.cntx_pop();
_sym


\WALUTA2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: Po redakcji POZ.WAl
::  OLD: \WALUTA2/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
exec('waluta','!fks_dks_dark',FAK.WAL().KOD)


\pr_fkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed redakcją pól tabeli FAK
::  OLD: \pr_fkrs/fak_imp.fml
::----------------------------------------------------------------------------------------------------------------------
FAK.WAL


\warprzed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed redakcją pola wartość tabeli FAK
::  OLD: \warprzed/fak_imp.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAK.WAL<>null
|| FAK.WAR:=exec('walp','!fks_dks_dark')$2; 0
|| FAK.KRS:=FAK.WARW:=0; 1
?}


\ROZ_KRS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: Zwraca ROZNE.KRS
::  OLD: \ROZ_KRS/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.KRS


\DOK_KH
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: Zwraca DOK.WYS
::  OLD: \DOK_KH/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.WYS


\pr_f_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed redakcją pola FAK.KH
::  OLD: \pr_f_kh/fak_imp.fml
::----------------------------------------------------------------------------------------------------------------------
{? SLOSLU.SLFAK<>''
|| SLUAPPL.index('NAZ');
   SLUAPPL.prefix('F');
   {? SLUAPPL.find_key(SLOSLU.SLFAK)
   || SLUAPPL.SLU();
      SLO.win_sel('ONE'); SLO.win_dict('ONE'); SLO.win_sel('ONE'); KH.win_sel('WER');
      1
   || 0
   ?}
|| 0
?}


\DOK_DTW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: MZ [2010]
::  OLD: \DOK_DTW/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.DTO


\DOK_TZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: Zwraca DOK.D3
::  OLD: \DOK_TZ/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.D3


\bl_fazn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Wartość początkowa pola FAK.ZN
::  OLD: \bl_fazn/fak_imp.fml
::----------------------------------------------------------------------------------------------------------------------
_d:=DOK.DOK_REJ().SLO().KOD;
{? _d='VAT' || 'N' || 'T' ?}


\prz_fak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MM] [8.50]
:: OPIS: Formula podlicza sumy okna wertowania tabeli FAK
::  OLD: \prz_fak/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
SUM.SUMN:=SUM.SUMB:=0;
_one_wal:=1;
FAK.cntx_psh();
{? FAK.first()
|| _wal:=FAK.WAL;
   {! |?
      {? FAK.WAL<>_wal || _one_wal:=0 ?};
      _one_wal & FAK.next()
   !}
?};
{? FAK.first()
|| {! |?
      {? _one_wal || SUM.SUMN+=FAK.WARW ?};
      SUM.SUMB+=FAK.WAR;
      FAK.next()
   !}
?};
FAK.cntx_pop(); 1


\chkfak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Po redakcji rekordu tabeli FAK
::  OLD: \chkfak/fak_imp.fml
::----------------------------------------------------------------------------------------------------------------------
_rec:='';
{? FAK.SYM=''
|| {? FAK.WAL<>null
   || _rec:=__CHK.record(FAK,,'WARW','WAL','KRS')
   || _rec:=__CHK.record(FAK,,'WAR')
   ?}
|| {? FAK.WAL<>null
   || {? SLOSLU.SLFAK=''
      || _rec:=__CHK.record3(SLOSLU,'SLFAK','Słownik',FAK,'DTW',,FAK,'TZ',,FAK,'WARW',,FAK,'WAL',,FAK,'KRS',)
      || _rec:=__CHK.record(FAK,,'KH','DTW','TZ','WARW','WAL','KRS')
      ?}
   || {? SLOSLU.SLFAK=''
      || _rec:=__CHK.record3(SLOSLU,'SLFAK','Słownik',FAK,'DTW',,FAK,'TZ',,FAK,'WAR',)
      || _rec:=__CHK.record(FAK,,'KH','DTW','TZ','WAR')
      ?}
   ?}
?};
{? _rec=''
|| {? DOK.WAL=null || ROZNE.WAL:=FAK.WAL ?};
   {? DOK.TKRS=null || ROZNE.KRS:=FAK.KRS ?};
   {? FAK.WAL<>null
   || {? (_war:=exec('walp','!fks_dks_dark'))$2<>0 || FAK.WAR:=_war || _rec:='WAL' ?}
   || FAK.KRS:=FAK.WARW:=0
   ?}
?};
_rec


\czy_cel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Rekord przed dla okienek tabeli FAK
::  OLD: \czy_cel/fak_imp.fml
::----------------------------------------------------------------------------------------------------------------------
_gray:='';
_win:='?';
_cho:=DOK.DOK_REJ().SLO().KOD;
{? PAR_SKID.get(211)='T'
|| _gray:='ZM:ZM'
|| {? DOK.A='T'
   || _gray:='Z:Z'
   ?}
?};
{? (-SSTALE.AO().ZAM<>'t' & exec('is_okr_blck','!zws_par_aokr',SSTALE.AO,OPERATOR.USER,0)=0) & -DOK.A<>'t'
|| _win:='WER'
|| _win:='WER1'
?};
FAK.actions_grayed(FAK.win_sel(_win),_gray);
{? FAK.ZN='T' || 'FAK#01#01' || '' ?}


\pw_slfak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Formuła - wyświetl pola SLOSLU.SLFAK
::  OLD: \pw_slfak/fak_imp.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAK.KH<>null
|| SLUAPPL.index('NAZ');
   SLUAPPL.prefix('F',FAK.KH().SLU().NAZ);
   {? SLUAPPL.first() || SLOSLU.SLFAK:=SLU.NAZ ?}
?};
1


\po_slfak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Po redakcji pola SLOSLU.SLFAK
::  OLD: \po_slfak/fak_imp.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()<>''
||SLUAPPL.index('NAZ');
  SLUAPPL.prefix('F',fld);
  {? SLUAPPL.first()
  || SLOSLU.SLFAK:=SLUAPPL.SLU().NAZ;
     {? SLU.ref()<>FAK.KH().SLU || FAK.KH:=null ?};
     1
  || exec('f3_slfak','!fks_dks_dark')
   ?}
|| FAK.KH:=null
?}


\f3_slfak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Na F3 dla pola SLOSLU.SLFAK
::  OLD: \f3_slfak/fak_imp.fml
::----------------------------------------------------------------------------------------------------------------------
SLUAPPL.index('NAZ'); SLUAPPL.prefix('F');
{? SLOSLU.SLFAK<>''
|| {? ~SLUAPPL.find_key(SLOSLU.SLFAK) || SLUAPPL.first() ?}
|| SLUAPPL.first()
?};
SLUAPPL.win_sel('SLOWYR');
{? SLUAPPL.select(,1)
|| SLOSLU.SLFAK:=SLUAPPL.SLU().NAZ
?};
SLOSLU.SLFAK


\bp_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Przed Popraw w tabeli POZ.
::  OLD: \bp_poz/dok_zrd3.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
{? MLEX.FIKSB
|| exec('ob_bz','ml_zad');
   exec('zbz_get','ml_zad')
?};
exec('bd_wprat','dok_fks'); exec('dopusc','dok_fks',1)


\chk_fak_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK[17.00]
:: OPIS: Po redakcji FAK.WAR
::----------------------------------------------------------------------------------------------------------------------
fld(fld()$2);
1


\aut_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Akcja 'Automat' w okienku tabeli DOK
::  OLD: \aut_dok/auto.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_okr_zam_con','konsolidacja',1)
|| return(0)
|? exec('autowyb','dok_fks','N')
|| {? PARWYD.DOKUMLT<>1
   || autoform:='exec(''oblicz_f'',''dok_fks'')';
      {? autoform<>'' || ($autoform)(); autoform:=''; 1 || 0 ?}
   || sel_exit();
      autoform:='exec(''oblicz_f'',''dok_fks'')'
   ?};
   VAR_DEL.delete('wyb')
?};
1


\uprawnienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na uprawnienia do danych dla czynności
::   WE: params_get().in - parametry wejściowe czynności
::           params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::           params_get().mp - Menadżer Procesów
::   WY: 0 - użytkownik nie ma uprawnień do danych dla czynności
::       1 - użytkownik ma uprawnienia do danych czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_mp:=params_get().mp;
_out:=_mp.load(exec('kind_out','#b_port'));
_user:=params_get().user;
_dok:={? var_pres('DOK',_in) & var_pres('DOK',_in)=type_of(null()) & _in.DOK<>null
      || _in.DOK
      |? var_pres('DOK',_out) & var_pres('DOK',_out)=type_of(null()) & _out.DOK<>null
      || _out.DOK
      || null
      ?};
_result:=0;
USERS.cntx_psh(); USERS.prefix();
{? USERS.seek(_user)
|| {? _dok
   || DOK.cntx_psh();
      DOK.prefix();
      {? DOK.seek(_dok,form(($_dok)-8),1)
      || {? exec('usr_fjks','b_perm',DOK.ODD().OD,USERS.ref())
         || _result:=1
         ?}
      ?};
      DOK.cntx_pop()
   ||
:: czy w ogóle user ma uprawnienia do jakiejkolwiek jednostki księgowej
      {? exec('usr_fjks_any','b_perm',USERS.ref())
      || _result:=1
      ?}
   ?}
?};
USERS.cntx_pop();
_result


\pop_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Akcja popraw dla okna BO tabeli POZ
::  OLD: \pop_bo/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
KA.CZY_WYR:='T';
exec('ustal_ka','dok_fks');
exec('kas_tpow','dok_fks');
exec('gr_bufor','dok_fks','POZ');
KA.AKCJA:=0; pop_idc:=POZ.ID;
SSTALE.AR(); pop_kon:=ROK_F.SYNT+POZ.KON; pop_konc:=POZ.KON; pop_wal:=POZ.WAL;
exec('bc_bopoz','!fks_dks_dark');
1


\bc_bopoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Przed akcja popraw okna BO tabeli POZ
::  OLD: \bc_bopoz/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZ.PKON<>'' & POZ.KON='' ||
   SSTALE.AR();
   POZ.KON:=exec('an_bo','zam_okr_rok',POZ.PKON)
?}; 1


\ac_bopoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Po akcji popraw okna BO tabeli POZ
::  OLD: \ac_bopoz/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
SSTALE.AR();
AN_BO.ROK:=ROK_F.ref();
exec('pop_poz','dok_fks');
{? POZ.KON<>POZ.PKON & POZ.KON*'?'=0 & exec('findanbo','zam_okr_rok',POZ.PKON,POZ.KON)=null &
   exec('maska','zam_okr_rok',POZ.PKON,POZ.KON) & ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) &
   ROK_F.prev()
|| _kon:=AN_BO.KON;
   _pkon:=AN_BO.PKON;
   {? (_ref:=exec('is_an_bo','zam_okr_rok'))<>null
   || AN_BO.cntx_psh();
      AN_BO.prefix();
      {? AN_BO.seek(_ref) & _pkon=AN_BO.PKON & _kon<>AN_BO.KON
      || _pyt:=FUN.ask('Dokonana zmiana konta nie jest zgodna z istniejącą regułą: \n'
                       '%1 -> %2\n'
                       'Poprawić regułę i związane z nią pozycje dokumentów na \n'
                       '%3 -> %4'@[AN_BO.PKON,AN_BO.KON,_pkon,_kon]);
         {? _pyt
         || AN_BO.KON:=_kon; AN_BO.put();
            {? ~exec('upd_poz','zam_okr_rok')
            || FUN.info('Wykonanie zmodyfikowanej reguły przypisywania kont nie powiodło się.'@)
            ?}
         ?}
      ?};
      AN_BO.cntx_pop()
   || AN_BO.cntx_psh(); AN_BO.prefix();
      AN_BO.ROK:=SSTALE.AR;
      AN_BO.add();
      AN_BO.cntx_pop()
   ?}
?}


\ppop_dzi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.20]
:: OPIS: Funkcja dzielenia kont dla bilansu otwarcia.
::  OLD: \ppop_dzi/bilansp.fml
::----------------------------------------------------------------------------------------------------------------------
_jest:=0;
OP.cntx_psh();
ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA); BILANSP.AROK();
{? ROK_F.prev() || _a:=ROK_F.KOD ?};
ROK_F.cntx_pop();
OP.use('operac'+_a);
OP.index('KON');
OP.prefix();   OP.blank(1);   OP.AN:=POZ.PKON;
_jest:=OP.find_rec();
OP.cntx_pop();
_w:=_wref:=0;
ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA); SSTALE.AO().ROK();
ROK_F.prev();
_wref:=ROK_F.ref;
_synt:=ROK_F.SYNT;
ROK_F.cntx_pop();
KS.cntx_psh();
KS.clear();
KS.index('SYM');
KS.prefix(_wref);
{? KS.find_key(_synt+POZ.PKON) ||
   {? -KS.WIELO='t' || _w:=1 ?}
?};
KS.cntx_pop();
{? _jest & _w
|| FUN.info('Nie można podzielić konta.\n'+
            'Konto poprzednie zawiera rozrachunki i jest wielowalutowe.'@)
|? _jest
|| FUN.info('Nie można podzielić konta.\n'+
            'Konto poprzednie zawiera rozrachunki.'@)
|? _w
|| FUN.info('Nie można podzielić konta.\n'+
            'Konto poprzednie jest wielowalutowe.'@)
|? (_wyr:=(POW.cntx_psh(); POW.index('POZ'); POW.prefix(POZ.ref); _w:=POW.first(); POW.cntx_pop(); _w))
|| FUN.info('Nie można podzielić konta.\n'+
            'Konto zawiera wyróżniki.'@)
?};
{? ~_jest & ~_w & ~_wyr ||
   _pier:=0;
   _i:=0; _kw:=POZ.SUM;
   POZ.cntx_psh();
   POZ.win_edit('POZ_BODK');
   {! |?
      {? _i || POZ.SUM:=_kw ?};
      {? POZ.edit()
      || {? POZ.SUM=0
         || FUN.info('Kwota nie może być równa zero.'@);
            POZ.SUM:=_kw
         || {? _i
            || POZ.cntx_psh();
               _a:=POZ.POZ;
               {? POZ.last()
               || {! |?
                     {? POZ.POZ>_a || POZ.POZ+=1; POZ.put() ?};
                     POZ.prev() & POZ.POZ>_a
                  !}
               ?};
               POZ.cntx_pop();
               POZ.POZ+=1;
               POZ.A:=POZ.ZP:=POZ.ZK:='N';
               POZ.add();
               _pier:=1
            || POZ.put(); _i:=1; _pier:=1
            ?};
            _kw-=POZ.SUM
         ?}
      ?};
      _kw & _pier
   !};
   POZ.cntx_pop()
?}


\anbo_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Akcja menu: deFinicje/struktury Ksiegowe/Przeksztalcenie kont lub
::       akcja okna BO tabeli POZ
::  OLD: \anbo_sel/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
SSTALE.AR();
ROK_F.win_sel('ROK');
ROZNE.PAR1:=-1;
rok_bo:=ROK_F.ref();
{? exec('first_rok_obsz','zam_okr_rok','FKS',SSTALE.AR)
|| FUN.info('Pierwszy rok nie posiada przekształcenia kont analitycznych.'@)
|? KS.cntx_psh(); KS.index('SYM'); KS.prefix(ROK_F.ref());
    _w:=KS.first(); KS.cntx_pop(); _w=0
|| FUN.info('Nie zdefiniowano planu kont na rok bilansowy %1.'@[ROK_F.NAZ])
|| AN_BO.index('ROK'); AN_BO.prefix(ROK_F.ref());
   AN_BO.hdr_sel(' - BO %1'@[ROK_F.NAZ]);
   ROK_F.prev(); {? ~AN_BO.find_key(ROK_F.SYNT+POZ.PKON) || AN_BO.first() ?};
   AN_BO.select(,1)
?};
{? rok_bo<>ROK_F.ref() || ROK_F.seek(rok_bo) ?};
{? var_pres('anal_rok')>0 || &anal_rok ?};
{? var_pres('rok_bo')>0 || &rok_bo ?}


\ar_konbo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Akcja rekord po okna BO tabeli POZ
::  OLD: \ar_konbo/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
{? pop_kon<>SSTALE.AR().SYNT+POZ.KON
|| {? exec('spr_wyr','!fks_dks_dark')=0
   || FUN.info('Konto poprzednie i aktualne posiadają różnice w strukturze wyróżników.'@); 'KON'
   || 1
   ?}
|| 1
?}


\spr_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Porownuje strukture slownikow wyroznikow konta starego i nowego
::   WY: Czy struktura slownikow identyczna? 1-tak, 0-nie
::  OLD: \spr_wyr/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
_ks_n:=exec('sym2ks','zam_okr_rok',ROK_F.ref(),ROK_F.SYNT,POZ.KON);
{? ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) & ROK_F.prev()
|| _ks_s:=exec('sym2ks','zam_okr_rok',ROK_F.ref(),ROK_F.SYNT,POZ.PKON); _ok:=0;
   KS_W.index('LP'); KS_W.prefix(_ks_n); _l:=KS_W.size();
   KS_W.prefix(_ks_s);
   {? _l=KS_W.size()
   || _ok:=1;
      {? _l<>0 & KS_W.first()
      || {! |?
            _slu:=KS_W.SLU;
            KS_W.cntx_psh();
            KS_W.prefix(_ks_n,KS_W.LP);
            _ok:=KS_W.first() & KS_W.SLU=_slu;
            KS_W.cntx_pop();
            _ok & KS_W.next()
         !}
      ?}
   ?}
|| 1
?}


\bg_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2009]
:: OPIS: Formula grupa przed akcja automatyczny dekret tabela DOK okienka wertowania RDOK, RDOK2
::  OLD: \bg_auto/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Wykonać automatyczną dekretację pozycji VAT dla zaznaczonych dokumentów?'@)
|| ileautow:=0;
   ileautoz:=DOK.sel_size()
?}


\ag_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2009]
:: OPIS: Formula grupa po akcji automatyczny dekret tabela DOK okienka wertowania RDOK, RDOK2
::  OLD: \ag_auto/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_ile:=(+$ileautoz);
FUN.info(form(form('Dokumentów zaznaczonych: '@,28)+$ileautoz,28+_ile)+'\n'+
          form(form('Dokumentów zadekretowanych: '@,28)+$ileautow,28+_ile));
VAR_DEL.delete('ileautow','ileautoz')


\vat_rodz_dsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyświetl dla pola POMOC.D
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.D & (POMOC.D().SLO().KOD='VAT' | POMOC.D().SLO().KOD='SAD')
|| POMOC.efld_opt(POMOC.win_edit('?'),'enable=1, mark=1',POMOC,'V')
|| POMOC.efld_opt(POMOC.win_edit('?'),'enable=0, mark=0',POMOC,'V')
?};
1


\ae_pf_il
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Po redakcji POZF.IL
::  OLD: \ae_pf_il/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| POZF.IL:=POZF.IL$6;
   exec('ae_pf_sv','!fks_dks_dark');
   web_top_tab().web_update(web_top_ident())
|| fld(fld()$6);
   exec('ae_pf_sv','!fks_dks_dark');
   win_disp()
?};
1


\ae_pf_c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Po redakcji POZF.C
::  OLD: \ae_pf_c/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| POZF.IL:=POZF.IL$2;
   exec('ae_pf_sv','!fks_dks_dark');
   web_top_tab().web_update(web_top_ident())
|| fld(fld()$2);
   exec('ae_pf_sv','!fks_dks_dark');
   win_disp()
?};
1


\ae_pf_rabat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Po redakcji POZF.RABAT
::  OLD: \ae_pf_rabat/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| POZF.IL:=POZF.IL$2;
   exec('ae_pf_sv','!fks_dks_dark');
   web_top_tab().web_update(web_top_ident())
|| fld(fld()$2);
   exec('ae_pf_sv','!fks_dks_dark');
   win_disp()
?};
1


\bl_pf_sv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Wartosc poczatkowa POZF.SV
::  OLD: \bl_pf_sv/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZF.DOK || DOK.RVAT().RVAT().STVAT || null ?}


\be_pf_sv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Przed redagowaniem POZF.SV
::  OLD: \be_pf_sv/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZF.DOK<>null()
|| _kod_kr:={? DOK.RVAT<>null || DOK.KRAJ().KOD || '' ?}
|| _kod_kr:='PL'
?};
{? _kod_kr='' ||  _kod_kr:='PL' ?};
SLU.index('NAZ'); SLU.prefix();
SLO.hdr_sel(); SLO.hdr_sel('~STAWKI VAT %1'@[_kod_kr]);
{? SLU.find_key('~STAWKI VAT '+_kod_kr) || exec('be_edok_fld','dok_fks1') || 0 ?}


\ae_pf_sv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Po redagowaniu POZF.SV
::  OLD: \ae_pf_sv/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZF.KOR & ~POZF.IL || POZF.RABAT:=0 ?};
{? POZF.SV
|| _pr:=exec('vat','dok_fks',POZF.SV().KOD);
   _cena:={? POZF.C<0 & POZF.IL<0 || -POZF.C || POZF.C ?};
   {? app_info('web_sesid')<>'' || EDOKUM.web_cntx_load(1) ?};
   {? POZF.DOK & DOK.DOK_REJ().TYP_CENY='N' | POZF.EDOKUM & EDOKUM.TYP().TYP_CENY='N'
   || {? POZF.IL | POZF.KOR || POZF.WN:=(_cena*POZF.IL)$2-POZF.RABAT ?};
      POZF.WV:=(POZF.WN*_pr*0.01)$2;
      POZF.WB:=POZF.WN+POZF.WV
   || {? POZF.IL | POZF.KOR || POZF.WB:=(_cena*POZF.IL)$2-POZF.RABAT ?};
      POZF.WN:=(POZF.WB/(1+_pr*0.01))$2;
      POZF.WV:=POZF.WB-POZF.WN
   ?}
?};
{? app_info('web_sesid')='' || SLO.hdr_sel() ?};
1


\ae_pf_netto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Po redakcji pola POZF.WN
::----------------------------------------------------------------------------------------------------------------------
{? POZF.WN
|| exec('ae_pf_sv','!fks_dks_dark')
?};
1


\pozf2vpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Akcja tworzenia pozycji VAT na podstawie pozycji faktury
::  OLD: \pozf2vpoz/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
{? POZF.DOK
|| {? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
   VPOZ.cntx_psh();
   VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
   _jest:=VPOZ.first();
   VPOZ.cntx_pop();
   _dalej:=1;
   {? _jest
   || _dalej:=FUN.ask('Istnieją już pozycje VAT.\n\nCzy mimo to dodać pozycje VAT\nna podstawie pozycji faktury?'@)
   || _dalej:=FUN.ask('Czy utworzyć pozycje VAT\nna podstawie pozycji faktury?'@)
   ?};
   {? _dalej
   || POZF.cntx_psh();
      _find_kp:=0;
      POZF.index('DOK');
      POZF.prefix(DOK.ref());
      {? POZF.first()
      || {! |?
            {? POZF.KODP<>'' || _find_kp:=1 ?};
            POZF.next()
         !}
      ?};
      POZF.cntx_pop();
::    jeżeli pozycje faktury bez kodów produktu to tworzenie pozycji vat standardowo
      {? ~_find_kp
      || _wal:=DOK.WAL & DOK.WAL<>FINFO.NAROD;
         {? _wal
         || ROZNE.win_edit('POZFW');
            ROZNE.KURS:=exec('ust_krs','dok_fks',DOK.WAL)
         || ROZNE.win_edit('POZF')
         ?};
         {? DOK_REJ.SLO().KOD='WEW'
         || _gv:='';
            ROZNE.GRVAT:=null;
            _ok:=1
         || _gv:=DOK.RVAT().RVAT().GRVAT;
            {? _gv
            || GR_VAT.index('REJ_GR'); GR_VAT.prefix(DOK.REJ,_gv);
               ROZNE.GRVAT:={? GR_VAT.first() || GR_VAT.ref() || null ?}
            || ROZNE.GRVAT:=null
            ?};
            _ok:=ROZNE.edit(" {? DOK.WAL & DOK.WAL<>FINFO.NAROD
                                 || chk_rec('GRVAT','KURS')
                                 || chk_rec('GRVAT')
                                 ?}
                               ")
         ?};
         {? _ok
         || POZF.cntx_psh();
            POZF.index('SV'); POZF.prefix(DOK.ref());
            {? POZF.first()
            || {!
               |? _netto:=_vat:=_brutto:=0;
                  POZF.prefix(DOK.ref(),POZF.SV,POZF.DT);
                  {? POZF.first()
                  || {!
                     |? {? ~(POZF.DOK().DOK_REJ().KOR='T' & exec('czy_pozf_kor','dok_fks1'))
                        || _netto+=POZF.WN;
                           _vat+=POZF.WV;
                           _brutto+=POZF.WB
                        || _netto-=POZF.WN;
                           _vat-=POZF.WV;
                           _brutto-=POZF.WB
                        ?};
                        POZF.next()
                     !}
                  ?};
                  {? (_netto+_vat)$2<>_brutto$2
                  || _dalej:=FUN.ask('\nDla stawki '+POZF.SV().KOD+' wartości pozycji netto+VAT nie zgadzają się z'+
                                     '\nwartością pozycji brutto na kwotę: '+form((_netto$2+_vat$2-_brutto$2)$2,,2)+
                                     '\n\nnetto     = '+form(_netto$2,16,2)+
                                     '\nvat       = '+form(_vat$2,16,2)+
                                     '\nnetto+vat = '+form(_netto$2+_vat$2,16,2)+
                                     '\nbrutto    = '+form(_brutto$2,16,2)+
                                     '\n\nAkceptować ?\n'@)
                  || _dalej:=1
                  ?};
                  {? _dalej
                  || VPOZ.blank(1);
                     VPOZ.DOK:=DOK.ref();
                     VPOZ.OKRVAT:=DOK.OKRVAT;
                     VPOZ.PR:=POZF.SV;
                     VPOZ.GRVAT:=ROZNE.GRVAT;
                     VPOZ.RVAT:=DOK.RVAT;
                     VPOZ.D:=POZF.DT;
                     {? _wal
                     || VPOZ.NETTO_W:=_netto$2;
                        VPOZ.VAT_W:=_vat$2;
                        VPOZ.BRUTTO_W:=_brutto$2;
                        VPOZ.KURS:=ROZNE.KURS;
                        {? exec('czy_brutto','dok_fks')
                        || VPOZ.WARW:=VPOZ.BRUTTO_W
                        || VPOZ.WARW:=VPOZ.NETTO_W
                        ?};
                        exec('po_vwarw','!fks_dks_dark',0)
                     || VPOZ.NETTO:=_netto$2;
                        VPOZ.VAT:=_vat$2;
                        VPOZ.BRUTTO:=_brutto$2
                     ?};
                     VPOZ.SP_WYM:={? DOK.SP_WYM='T' || 'W' || 'T' ?};
                     ROZNE.GRVAT:=null();
                     exec('ae_grvat','dok_fks');
                     {? _netto<>0 | _vat<>0 | _brutto<>0
                     || VPOZ.add()
                     ?};
                     POZF.prefix(DOK.ref());
                     POZF.next()
                  ?}
               !}
            ?};
            POZF.cntx_pop();
            VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref()); VPOZ.first();
            tab_sel(__PozTabs-1,'bottom')
         ?}
      ||
::    jeżeli są w pozycjach faktury grupy podatkowe ustalone na podstawie kodów produktu i to tworzenie pozycji vat
::    wg grup podatkowych
         exec('pozf2vpoz','dok_fks1',1)
      ?}
   ?}
|| {? POZF.EDOKUM & EDOKUM.WAL=FINFO.NAROD
   || EVAT.cntx_psh();
      EVAT.index('EDOKUM'); EVAT.prefix(EDOKUM.ref());
      _jest:=EVAT.first();
      _dalej:=1;
      {? _jest
      || _dalej:=FUN.ask('Istnieją już pozycje VAT.\nCzy kontynuować?'@)
      || _dalej:=FUN.ask('Czy utworzyć pozycje VAT\nna podstawie pozycji faktury?'@)
      ?};
      {? _dalej
      || POZF.cntx_psh();
         POZF.index('ESV'); POZF.prefix(EDOKUM.ref());
         {? POZF.first()
         || {!
            |? _netto:=_vat:=_brutto:=0;
               POZF.prefix(EDOKUM.ref(),POZF.SV);
               {? POZF.first()
               || {!
                  |? _netto+=POZF.WN;
                     _vat+=POZF.WV;
                     _brutto+=POZF.WB;
                     POZF.next()
                  !}
               ?};
               EVAT.blank(1);
               EVAT.EDOKUM:=EDOKUM.ref();
               EVAT.PR:=POZF.SV;
               EVAT.NETTO:=_netto;
               EVAT.VAT:=_vat;
               EVAT.BRUTTO:=_brutto;
               EVAT.add();
               POZF.prefix(EDOKUM.ref());
               POZF.next()
            !}
         ?};
         POZF.cntx_pop();
         _netto:=_brutto:=0;
         EVAT.cntx_psh();
         EVAT.index('EDOKUM'); EVAT.prefix(EDOKUM.ref());
         {? EVAT.first()
         || {!
            |? _netto+=EVAT.NETTO;
               _brutto+=EVAT.BRUTTO;
               EVAT.next()
            !}
         ?};
         EVAT.cntx_pop();
         EDOKUM.NETTO:=_netto;
         EDOKUM.WART:=_brutto;
         EDOKUM.put();
         exec('pozvdob','obiegi')
      ?};
      EVAT.cntx_pop()
   ||  FUN.info('Pozycje VAT są edytowane tylko dla narodowej waluty transakcji.'@)
   ?}
?}


\bl_pf_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Wartosc poczatkowa pola POZF.DOK
::  OLD: \bl_pf_dok/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('PozFEdok')<=0 & var_press('PozFZas')<=0
|| {? DOK.EDI='S' | DOK.EDI='P' || VAR.ZASOBY:='' ?};
   DOK.ref()
|| null
?}


\be_edok_pf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Przed redakcja ETYPY.POZF
::  OLD: \be_edok_pf/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
ETYPY.TYPVATPR=0


\be_edok_pc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Przed redakcja ETYPY.TYP_CENY
::  OLD: \be_edok_pc/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
ETYPY.POZF='T'


\bvpozfcen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Przed wyswietleniem pola HELPJPK.KOL_CEN
::  OLD: \bvpozfcen/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_press('PozFEdok')<=0 || DOK.DOK_REJ().TYP_CENY || EDOKUM.TYP().TYP_CENY ?};
HELPJPK.KOL_CEN:={? _typ='N' || 'Cena netto' || 'Cena brutto' ?};
exec('be_pf_sv','!fks_dks_dark');
''


\ar_pozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Rekord po tabeli POZF
::   WE: _a - operacja w WebTerm [PUT/ADD]
::  OLD: \ar_pozf/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
||
   {? _>0 & type_of(_a)=type_of('')
   || _chk:=__CHK.record(POZF,,'NAZ','SV','JM','IL','C');
      {? _chk=''
      || _chk:=exec('chk_pozf','obiegi2');
         {? _chk=''
         || {? _a='PUT'
            || POZF.put()
            |? _a='ADD'
            || POZF.add()
            ?};
            POZF.web_eclose();
            POZF.web_refresh(web_top_win(1))
         |? _chk='NETTO*VAT*BUTTO=0'
         || FUN.info('Przynajmniej jedna z pozycji: Netto, VAT lub Brutto\nmusi być różna od zera'@);
            'WN'
         |? _chk='NETTO+VAT<>BRUTTO'
         || _roznica:=POZF.WN$2+POZF.WV$2-POZF.WB$2;
            {? _roznica<0 || _roznica:=-_roznica ?};
            _ask:='\nDla stawki '+POZF.SV().KOD+' wartości pozycji netto+VAT nie zgadzają się z'+
                  '\nwartością pozycji brutto na kwotę: '+form((_roznica)$2,,2,' ,')+
                  '\n\nnetto        = '+form(POZF.WN$2,16,2,' ,')+
                  '\nvat           = '+form(POZF.WV$2,16,2,' ,')+
                  '\nnetto+vat = '+form(POZF.WN$2+POZF.WV$2,16,2,' ,')+
                  '\nbrutto       = '+form(POZF.WB$2,16,2,' ,')+
                  '\n\nAkceptować ?\n'@;
            exec('obs_kom_pozf','obiegi2',_ask,_a)
         |? _chk='KWOTA_VAT<>NETTO*VAT'
         ||
            _ask:='Wartość kwoty VAT nie zgadza się ze stawką VAT. Akceptować?'@;
            exec('obs_kom_pozf','obiegi2',_ask,_a)
         |? _chk='NETTO<0|BRUTTO<0'
         || _ask:='Kwota netto lub kwota brutto pozycji są mniejsze od zera. Akceptować?';
            exec('obs_kom_pozf','obiegi2',_ask,_a)
         ?}
      || _chk
      ?}
   ?}
||
   _r:={? POZF.DOK<>null | POZF.EDOKUM<>null || __CHK.record(POZF,,'LP') || '' ?};
   {? _r='' & POZF.DOK=null & POZF.EDOKUM=null
   || _r:=__CHK.record(POZF,,'NAZ','IL','JM','C','SV','WN','WB')
   |? _r='' & POZF.KOR=0
   || _r:=__CHK.record(POZF,,'NAZ','IL','JM','C','SV')
   |? _r='' & POZF.KOR
   || _r:=__CHK.record(POZF,,'NAZ','JM','C','SV')
   ?};
   {? _r='' & (POZF.DOK<>null | POZF.EDOKUM<>null)
   || _ref:=POZF.ref();
      POZF.cntx_psh();
      {? POZF.DOK
      || POZF.index('DOK'); POZF.prefix(DOK.ref(),POZF.LP)
      || POZF.index('EDOKUM'); POZF.prefix(EDOKUM.ref(),POZF.LP)
      ?};
      {? POZF.first() & (-menu_txt()<>'popraw' | POZF.ref()<>_ref)
      || FUN.info('Istnieje pozycja %1.'@[$POZF.LP]);
         _r:='LP'
      ?};
      POZF.cntx_pop();
      {? _r='' & POZF.WN=0 & POZF.WV=0 & POZF.WB=0 & POZF.KOR=0
      || FUN.info('Przynajmniej jedna z pozycji: Netto, VAT lub Brutto\nmusi być różna od zera'@);
         _r:='WN'
      ?};
      {? _r='' & ((POZF.WN+POZF.WV)$2<>POZF.WB$2)
      || _roznica:=POZF.WN$2+POZF.WV$2-POZF.WB$2;
         {? _roznica<0 || _roznica:=-_roznica ?};
         _r:=FUN.ask('\nDla stawki '+POZF.SV().KOD+' wartości pozycji netto+VAT nie zgadzają się z'+
                     '\nwartością pozycji brutto na kwotę: '+form((_roznica)$2,,2,' ,')+
                     '\n\nnetto        = '+form(POZF.WN$2,16,2,' ,')+
                     '\nvat            = '+form(POZF.WV$2,16,2,' ,')+
                     '\nnetto+vat = '+form(POZF.WN$2+POZF.WV$2,16,2,' ,')+
                     '\nbrutto       = '+form(POZF.WB$2,16,2,' ,')+
                     '\n\nAkceptować ?\n'@)
      ?};
      {? (var_pres('_r')=type_of('') & _r='') & (POZF.WN<0 | POZF.WB<0)
      || _r:=FUN.ask('Kwota netto lub kwota brutto pozycji są mniejsze od zera. Akceptować?'@)
      ?}
   ?};
   _r
?}


\bd_pozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Przed usun okna WER tabeli POZF
::  OLD: \bd_pozf/dok_zrd5.fml
::----------------------------------------------------------------------------------------------------------------------
_pozfkor:=exec('czy_pozf_kor','dok_fks1');
{? _pozfkor
|| FUN.info('Pozycja faktury posiada pozycję korygującą (%1). Usunięcie jest niemożliwe.'@[$_pozfkor]); return(0)
?};
{? app_info('web_sesid')<>''
|| EDOKUM.web_cntx_save(1);
   POZF.web_cntx_save(1);
   _us:="EDOKUM.web_cntx_load(1);
         POZF.web_cntx_load(1);
         {? _a
         || _lp:=POZF.LP;
            POZF.index('EDOKUM'); POZF.prefix(POZF.EDOKUM);
            _ref:=null;
            _przen:=POZF.EDOKUM;
            {? POZF.del(,1)=2
            || _ref:=POZF.ref();
               {? _przen & POZF.LP>_lp
               || {!
                  |? {? POZF.KOR & POZF.KOR>_lp || POZF.KOR-=1 ?};
                     POZF.LP-=1;
                     POZF.put();
                     POZF.next()
                  !}
               ?}
            ?};
            {? _ref
            || POZF.seek(_ref)
            ?}
         ?};
         web_top_refresh()";
   POZF.web_cntx_save(1);
   EDOKUM.web_cntx_save(1);
   web_ask(_us,'Usunąć pozycję faktury?'@)
|| {? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
   _ask:=0;
   _ans:={? POZF.DOK<>null() & PAR_SKID.get(441)='N'
         || {? exec('status_bl','dok_fks1')
            || _ask:=1;
               FUN.ask('Dokument elektroniczny posiada status \''@+exec('get_dokum_stat','efaktury')+'\'.\n'+
                     'Czy na pewno chcesz usunąć rekord?'@)
            || 1
            ?}
         || 0
         ?};
   {? ((_ask & _ans) | ~_ask) & POZF.DOK
   || VPOZ.cntx_psh();
      VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
      _jest:=VPOZ.first();
      VPOZ.cntx_pop();
      {? _jest
      || _ask:=1;
         _ans:=FUN.ask('Dokument posiada pozycje VAT. Edycja może spowodować niespójności.\n'@+
                       'Czy na pewno chcesz usunąć rekord?'@)
      ?}
   ?};
   {? (_ask & _ans) | (~_ask & FUN.ask('Usunąć pozycję faktury?'@))
   || _lp:=POZF.LP;
      POZF.cntx_psh();
      {? POZF.DOK
      || POZF.index('DOK'); POZF.prefix(POZF.DOK)
      |? POZF.EDOKUM
      || POZF.index('EDOKUM'); POZF.prefix(POZF.EDOKUM)
      ?};
      _ref:=null;
      _przen:=POZF.DOK | POZF.EDOKUM;
      {? POZF.del(,1)
      || _ref:=POZF.ref();
         {? _przen & POZF.LP>_lp
         || {!
            |? {? POZF.KOR & POZF.KOR>_lp || POZF.KOR-=1 ?};
               POZF.LP-=1;
               POZF.put();
               POZF.next()
            !}
         ?}
      ?};
      POZF.cntx_pop();
      {? _ref
      || POZF.seek(_ref)
      ?}
   ?}
?}


\bf_pozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [12.51]
:: OPIS: Przed dołącz i popraw okna WER tabeli POZF
::   WE: _a 1 - dołącz, 0 - popraw
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a=0 || exec('ustaw_rozne_pozf','dok_fks1') || ROZNE.POZF_NAZ:='' ?};
VPOZ.cntx_psh();
VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
_jest:=VPOZ.first();
VPOZ.cntx_pop();

_stbl:=exec('status_bl','dok_fks1');
_res:={? _stbl & _jest
      || FUN.ask('Dokument elektroniczny posiada status \''@+exec('get_dokum_stat','efaktury')+'\'.\n'+
                 'Dokument posiada pozycje VAT. Edycja może spowodować niespójności.\n'@+
                 'Czy na pewno chcesz '@+{? _a || 'dołączyć'@ || 'poprawić'@ ?} + ' pozycję faktury?'@)
      |? _stbl & ~_jest
      || FUN.ask('Dokument elektroniczny posiada status \''@+exec('get_dokum_stat','efaktury')+'\'.\n'+
                 'Czy na pewno chcesz '@+{? _a || 'dołączyć'@ || 'poprawić'@ ?} + ' pozycję faktury?'@)
      |? ~_stbl & _jest
      || FUN.ask('Dokument posiada pozycje VAT. Edycja może spowodować niespójności.\n'@+
                 'Czy na pewno chcesz '@+{? _a || 'dołączyć'@ || 'poprawić'@ ?} + ' pozycję faktury?'@)
      || 1
      ?};
_res


\bv_pom_dz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed wyświetleniem POMOC.DZ
::----------------------------------------------------------------------------------------------------------------------
GR_DOK.win_sel('SLO_DZ');
GR_DOK.win_edit('RED_DZ');
_enabled:=POMOC.REJD & POMOC.REJD().CZY_DZ='T';
POMOC.efld_opt(POMOC.win_edit('?'),'enable='+$_enabled,POMOC,'DZ');
POMOC.efld_opt(POMOC.win_edit('?'),'mark='+$_enabled,POMOC,'DZ');
~~


\be_pom_dz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed redakcją POMOC.DZ
::----------------------------------------------------------------------------------------------------------------------
var_pres('czystart')>0 | var_pres('czystart')<=0 & TREE_REJ.G_R<>'G'


\dok_trig_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Trigger po put tabeli DOK
::  OLD: \dok_trig_po/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_pres('_b')>0 & type_of(_b)=type_of(1) || _b ?};
{? _a=1 & DOK.WSK_XD='N' & bfld('WSK_XD')='T'
|| exec('usun_rez_dok','obe_budz')
?};
{? _a=1 & (DOK.OKRVAT<>bfld('OKRVAT') | DOK.A_VAT<>bfld('A_VAT')) & var_press('okrDok')<=0
|| exec('pop_vpoz','!fks_dks_dark',DOK.ref())
?};
{? DOK.DOK_REJ().SLO().KOD='VAT' | DOK.DOK_REJ().SLO().KOD='SAD' || exec('add_dok_jpk','obiegi2') ?};
{? 6+DOK.DOKZRODL='webdok' & (DOK.ZK<>bfld('ZK') | DOK.ZP<>bfld('ZP')) || exec('zaks_dok','mwa_dok') ?};
{? DOK.ZP<>bfld('ZP') & DOK.ZP='T'
|| exec('tagagr_dok_add','tagger',DOK.uidref());
   ntc_eat(,'ksefauto'+DOK.uidref())
?};
{? DOK.ZP<>bfld('ZP') & DOK.ZP='N' || exec('tagagr_dok_del','tagger',DOK.uidref()) ?};
exec('bl_dokum_status','dokum_zal',$DOK.ref());
{? DOK.DSP_WPOZ='N' & DOK.DOP<>bfld('DOP') || exec('vpz_d_trigdok','dok_fks1',DOK.ref(),DOK.DOP) ?};
{? DOK.DSP_WPZF='N' & DOK.DOP<>bfld('DOP') || exec('pozf_d_trigdok','dok_fks1',DOK.ref(),DOK.DOP) ?};
{? var_press('vp_trig')<0
|| vp_trig:=1
?};
{? var_press('vp_trig')>0 & vp_trig=1
|| exec('dok_put_vp','!fks_dks_dark')
?};
VAR_DEL.delete('vp_trig');
~~


\bv_okrvat_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Przed wyświetl dla pola PARAM.OKR_TYP
::  OLD: \bv_okrvat_typ/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_enabled:=PARAM.OKR_TYP=0;
PARAM.efld_opt('PARAMOKR','enable='+$_enabled,PARAM,'OKROVAT');
PARAM.efld_opt('PARAMOKR','enable='+$~_enabled,PARAM,'OKR_Z_S');
PARAM.efld_opt('PARAMOKR','enable='+$~_enabled,PARAM,'OKR_C_S');
~~


\ae_okrvat_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Po redakcji pola PARAM.OKR_TYP
::  OLD: \ae_okrvat_typ/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
{? PARAM.OKR_TYP=0
|| PARAM.OKR_Z_S:=PARAM.OKR_C_S:='';
   PARAM.OKR_Z:=PARAM.OKR_C:=VPOZ.OKR_Z:=VPOZ.OKR_C:=null
|| PARAM.OKRES:=VPOZ.OKRVAT:=null;
   PARAM.OKROVAT:='';
   {? VPOZ.OKR_Z=null || PARAM.OKR_Z_S:='' ?};
   {? VPOZ.OKR_C=null || PARAM.OKR_C_S:='' ?}
?};
{? PARAM.OKRES | PARAM.OKR_Z | PARAM.OKR_C || PARAM.A_VAT:=null ?};
{? mwa_active()=0 || win_disp() ?};
1


\bv_okrvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Przed wyświetla dla pól PARAM.OKR_Z_S i PARAM.OKR_C_S
::  OLD: \bv_okrvat/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_okr:=$('VPOZ.'+(5+cur_afld()));
_vpoz:=$('VPOZ.'+(5+cur_afld())+'().NAZ');
PARAM.efld_opt('PARAMOKR','enable='+$(PARAM.OKR_Z_S='' & PARAM.OKR_C_S=''),PARAM,'A_VAT');
{? DOK.OKRVAT & var_pres('vpozvat')=-1
|| fld({? +DOK.OKRVAT().NAZ || OKRO_F.NAZ+'/'+OKRO_F.ROK().NAZ || '' ?});
   {? DOK.OKRVAT<>SSTALE.AO || exec('flddisp','color','DVAT#01#01') || '' ?}
|? _okr() & var_pres('vpozvat')>0 | cur_tab()=ROZLVAT
|| fld({? +_vpoz() || OKRO_F.NAZ+'/'+OKRO_F.ROK().NAZ || '' ?})
|? +fld() & var_pres('vpozvat')>0
|| ''
|| fld('');
   {? cur_tab()=DOK & -menu_txt(,)<>'dołącz'
   || {? exec('sprvpozp','dok_fks',DOK.ref())
      || exec('flddisp','color','DVAT#01#01')
      || exec('findfnv','#color')
      ?}
   || ''
   ?}
?}


\f3_okrvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Klawisz F3 dla PARAM.OKR_Z_S i PARAM.OKR_C_S
::  OLD: \f3_okrvat/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
OKRO_F.win_sel('WER');
wyb:=0; _okr:=0;
OKRO_F.index('NAZ'); OKRO_F.prefix();
{? fld()<>''
|| {? fld()*'/'
   || ROK_F.cntx_psh(); ROK_F.index('NAZWA'); ROK_F.prefix(REF.FIRMA);
      _okr_ok:=ROK_F.find_key((fld()*'/')-fld()) &
      OKRO_F.find_key(REF.FIRMA,ROK_F.NAZ,(fld()*'/'-1)+fld());
      ROK_F.cntx_pop();
      _okr_ok
   || OKRO_F.find_key(REF.FIRMA,SSTALE.AR().NAZ,PARAM.OKROVAT)
   ?}
|| SSTALE.AO()
?};
OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.FIRMA);
OKRO_F.hdr_sel();
{? OKRO_F.select(,1)
|| _okr:=$('PARAM.'+(5+cur_afld()));
   _okr():=OKRO_F.ref();
   VPOZ.A_VAT:=null;
   fld({? +OKRO_F.NAZ || OKRO_F.NAZ+'/'+OKRO_F.ROK().NAZ || '' ?});
   PARAM.ROK:=OKRO_F.ROK
?};
fld()


\ae_okrvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Po redakcji pól PARAM.OKR_Z_S i PARAM.OKR_C_S
::  OLD: \ae_okrvat/dok_zrd.fml
::----------------------------------------------------------------------------------------------------------------------
_okr:=$('PARAM.'+(5+cur_afld()));
OKRO_F.index('NAZ'); OKRO_F.prefix(REF.FIRMA);
_a:=1;
{? fld<>''
|| {? {? fld*'/'
      || OKRO_F.find_key((fld()*'/')-fld,(fld()*'/'-1)+fld())
      || OKRO_F.find_key(SSTALE.AR().NAZ,fld())
      ?}
   || {? OKRO_F.POCZ=date(0,0,0)
      || FUN.info('Okresem rozliczenia VAT nie może być\n"Bilans otwarcia" i "Bilans zamknięcia".'@);
         _a:=0
      || _okr():=OKRO_F.ref();
         fld({? +OKRO_F.NAZ || OKRO_F.NAZ+'/'+OKRO_F.ROK().NAZ || '' ?});
         ($('VPOZ.'+(5+cur_afld())))():=OKRO_F.ref();
         _a:=1
      ?}
   || FUN.info('Błędna nazwa okresu.'@);
      _okr():=null;
      _a:=0
   ?}
?};
{? _a
|| {? fld()=''
   || _okr():=null;
      ($('VPOZ.'+(5+cur_afld())))():=null
   ?};
   {? -menu_txt(,)<>'dołącz' & var_pres('vpozvat')>0
   || {? VPOZ.sel_size()=0
      || _a:=exec('spr_okvat1','dok_fks')
      || _a:=exec('spr_okvat2','dok_fks')
      ?}
   ?}
?};
OKRO_F.index('ROK');
{? _a & fld<>''
|| PARAM.A_VAT:=VPOZ.A_VAT:=null
?};
PARAM.efld_opt('PARAMOKR','enable='+$(PARAM.OKR_Z_S='' & PARAM.OKR_C_S=''),PARAM,'A_VAT');
PARAM.win_edit('PARAMOKR');
_a


\br_pozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [1700]
:: OPIS: Formuła na Rekord Przed w tabeli POZF
::----------------------------------------------------------------------------------------------------------------------
_color:='';
_last:={? var_pres('_a')>0 || _a || 1 ?};
{? _last
|| {? POZF.ZASOB<>null
   || {? (POZF.DOK<>null & POZF.DOK().EDI='P') | (POZF.EDOKUM<>null & POZF.EDOKUM().EDI='P')
      || POJAZDY.cntx_psh();
         POJAZDY.index('ID');
         POJAZDY.prefix(POZF.ZASOB().KARTOTEK);
         {? POJAZDY.first() || VAR.ZASOBY:=POJAZDY.NRREJ ?};
         POJAZDY.cntx_pop()
      |? (POZF.DOK<>null & POZF.DOK().EDI='S') | (POZF.EDOKUM<>null & POZF.EDOKUM().EDI='S')
      || NRKRTSIM.cntx_psh();
         NRKRTSIM.index('ID');
         NRKRTSIM.prefix(POZF.ZASOB().KARTOTEK);
         {? NRKRTSIM.first() || VAR.ZASOBY:=NRKRTSIM.NR_KARTY ?};
         NRKRTSIM.cntx_pop()
      ?};
      {? var_press('PozFZas')>0
      || _gray:='';
         {? POZF.DOK
         || _gray:='PU'
         || _gray:='OZ'
         ?};
         POZF.actions_grayed(POZF.win_sel('?'),_gray)
      ?}
   || VAR.ZASOBY:=''
   ?};
   {? PAR_SKID.get(211)='T'
   || _hid:={? -DOK.A='t' || 'DZM:DZM' || 'ZM:ZM' ?}
   || _hid:={? -DOK.A='t' || 'DZ' || '' ?}
   ?};
   POZF.actions_grayed(cur_win(1,1),_hid);
   exec('hide_act','!fks_ksf_zprz')
?};
{? POZF.DOK=null & POZF.EDOKUM=null
|| _color:=Color.fnd_kol('POZF#01#01')
?};
_color


\uzup_grupy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.28]
:: OPIS: Formuła uzupełnia grupy podatkowe na podstawie kodów produktu i tabeli typów pozycji faktur
::----------------------------------------------------------------------------------------------------------------------
{? ~FUN.ask('Uzupełnić brakujące grupy podatkowe dla pozycji faktur?'@) || return(0) ?};
{? POZF.DOK<>null
|| POZF.cntx_psh();
   POZF.index('DOK');
   POZF.prefix(DOK.ref());
   KOMM.init(100,,'Uwagi dotyczące przypisywania pozycjom faktury grup podatkowych.'@);
   _kh:=null;
   KH.cntx_psh();
   KH.index('SKR');
   KH.prefix(2,DOK.KH,);
   {? KH.first() || _kh:=KH.ref() ?};
   KH.cntx_pop();
   {? _kh=null
   || KOMM.add('Nie odnaleziono kontrahenta związanego z dokumentem księgowym (%1).'@[DOK.KH])
   ?};
   {? POZF.first() & _kh
   || {! |?
         {? POZF.GRVAT=null & POZF.KODP<>''
         || POZF.GRVAT:=exec('find_grvat','dok_fks',_kh,POZF.KODP,POZF.DOK().REJ,POZF.DOK().EDI,1);
            POZF.put()
         ?};
         POZF.next()
      !}
   ?};
   {? ~KOMM.empty() || KOMM.select() ?};
   POZF.cntx_pop()
?}


\zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Kończy czynność rejestracji i wykonuje księgowanie próbne
::       (gdy mikroproces i użytkownik ma uprawnienia do księgowania)
::   WE: _a - wskazanie na dokument księgowy
::       _b - manager procesów
::       _c - 1 - zakończ 2-popraw
::       _d - 1 - automatyczna akceptacja 0 (domyślnie)- nie
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh(); DOK.prefix();
_autoakc:={? var_pres('_d')=type_of(0) || _d || 0 ?};
{? DOK.seek(_a) & DOK.A='T'
|| {? _c=1 & type_of(_b)<>type_of(~~) || _b.done() ?};
   {? _autoakc
   || _params:=exec('mp_run_a','#b__box');
      _params.ACT_UID:='FKS_DKS_EKSP';
      _params.AKCJA:='AkceptujAuto';
      _params.UIDREF:=DOK.uidref();
      _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
      exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'DOK',DOK.ref());
      _params.PROC_START:='N';
      exec('mp_run','#b__box',_params)
   ?}
?};
DOK.cntx_pop()


\display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Podglad dokumentu księgowego z listy zadań
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_wy:=_mp.load(exec('kind_out','#b_port'));
exec('dok_spac','dok_fks',_wy.DOK)


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::       [_b] - tablica z parametrami wejściowymi
::   WY: obj_new() - obiekt wynikowy
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};

{? var_pres('_b')>100
|| _we:=_b
|| _we:=params_get().in
?};

_can_continue:=1;
_obj:=obj_new('RESULT','DOK');
_obj.RESULT:=0;
_obj.DOK:=null();

_wy:=_mp.load(exec('kind_out','#b_port'));
_keyRefs:=_mp.getRefs();
{? obj_len(_keyRefs)>0
|| {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];
      {? type_of(_kref)>0
      || {? 4+ref_name(_kref)='doku'
         || _obj.DOK:=exec('FindAndGet','#table',DOK,_kref,,,null());
            {? _obj.DOK=null()
            || _can_continue:=0;
               _msg:='Dokument nie został odnaleziony, prawdopodobnie został usunięty.'@;
               {? _mp.isService()=0 & _mp.CLEANER=0
               || {? _mp.isGroup()
                  || KOMM.add(_msg,2,,1)
                  || FUN.emsg(_msg)
                  ?}
               ?};
               _wy.DOK:=null;
               _wy.FAK_ZAK:='N';
               _mp.save(,_wy);
               _mp.done()
            |? ~_mp.isMicro() & exec('FindAndGet','#table',DOK,_obj.DOK,,"DOK.A",'')='T'
            ||
::             Dokument już zaakceptowany, robimy done()
               _can_continue:=0;
               _msg:='Dokument księgowy jest już zaakceptowany, proces będzie kontynuowany.'@;
               {? _mp.isService()=0 & _mp.CLEANER=0
               || {? _mp.isGroup()
                  || KOMM.add(_msg,2,,1)
                  || FUN.emsg(_msg)
                  ?}
               ?};
               _wy.DOK:=_we.DOK;
               _mp.save(,_wy);
               _mp.done()
            ?}
         ?}
      ?}
   !}
?};

{? _can_continue>0
||
:: jest parametr wejściowy DOK
   {? _obj.DOK=null() & var_pres('DOK',_we)=type_of(null())
   || _obj.DOK:=_we.DOK
   ?}
?};

{? _can_continue>0
||
   {? _obj.DOK=null()
   ||
::    Nie było key refa ani parametru wejściowego, robię error
      _can_continue:=0;
      _msg:='Dokument nie został przekazany do czynności.'@;
      {? _mp.isService()=0 & _mp.CLEANER=0
      || {? _mp.isGroup()
         || KOMM.add(_msg,2,,1)
         || FUN.emsg(_msg)
         ?}
      ?};
      _mp.done()
   ?}
?};

{? _can_continue>0
|| _obj.RESULT:=1
?};
_obj


\dokzrodl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [19.02]
:: OPIS: Uzupelnia dane zrodlowe
::----------------------------------------------------------------------------------------------------------------------
{? Zrodlo='ser_nag' & (NrRej<>DOK.NR | DatDok<>DOK.DTW)
|| SER_NAG.cntx_psh(); SER_NAG.prefix(REF.FIRMA);
   {? SER_NAG.seek(#(7-DOK.DOKZRODL),'ser_nag')
   || SER_NAG.NREJ:=DOK.NR; SER_NAG.DATDOK:=DOK.DTW; SER_NAG.put()
   ?};
   SER_NAG.cntx_pop()
|? Zrodlo='par_nag' & (NrRej<>DOK.NR | DatDok<>DOK.DTW | SymDok<>DOK.NK)
|| PAR_NAG.cntx_psh(); PAR_NAG.prefix();
   {? PAR_NAG.seek(#(7-DOK.DOKZRODL),PAR_NAG.name())
   || PAR_NAG.NREJ:=DOK.NR; PAR_NAG.DATADOK:=DOK.DTW;
      PAR_NAG.SYMDOK:=DOK.NK; PAR_NAG.put()
   ?};
   PAR_NAG.cntx_pop()
|? 4+DOK.DOKZRODL='UDTR' & (NrRej<>DOK.NR | DatDok<>DOK.DTW)
|| UDTR.cntx_psh(); UDTR.prefix();
   {? UDTR.seek(#(4-DOK.DOKZRODL),)
   || UDTR.NREJ:=DOK.NR; UDTR.DATADOK:=DOK.DTW; UDTR.put()
   ?};
   UDTR.cntx_pop()
|? DOK.EDOKUM<>'' & (NrRej<>EDOKUM.NREJ | DatDok<>EDOKUM.DATDOK)
|| _ref:=BB.sqlint(DOK.EDOKUM); _nam:=form(DOK.EDOKUM-8);
   {? _ref<>0 & _nam<>''
   || EDOKUM.cntx_psh(); EDOKUM.use(_nam); EDOKUM.prefix();
      {? EDOKUM.seek(_ref,_nam)
      || EDOKUM.NREJ:=DOK.NR; EDOKUM.DATDOK:=DOK.DTW; EDOKUM.put()
      ?};
      EDOKUM.cntx_pop()
   ?}
|? NrRej<>DOK.NR & 6+DOK.DOKZRODL='pw'+(4+$DOK.DTW)
|| _mask:=(4+$DOK.DTW);
   PW.use('pw'+_mask);
   _ind:=PW.ndx_tmp(,1,'REJ',,,'NRD',,,'NRD',,);
   _nrd:=$NrRej+'/'+$(DOK.DTW~2);
   PW.index(_ind); PW.prefix(DOK.REJ,_nrd,_nrd);
   {? PW.first()
   || {! |? PW.cntx_psh();
            PW.prefix();
            PW.NRD:=$DOK.NR+'/'+$(DOK.DTW~2);
            PW.put();
            PW.cntx_pop();
            PW.first()
      !}
   ?};
   PW.ndx_drop(_ind)
|? Zrodlo='row_nag' &  NrRej<>DOK.NR
|| ROW_NAG.cntx_psh();
   ROW_NAG.prefix();
   {? ROW_NAG.seek(#(7-DOK.DOKZRODL),)
   || ROW_NAG.SLAD:=DOK.REJ().KOD+((8-+DOK.REJ().KOD)*'~')+'/'+$DOK.NR;
      ROW_NAG.put()
   ?};
   ROW_NAG.cntx_pop()
?}


\dok_miasto_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [20.14]
:: OPIS: przycisk pola DOK.MIASTO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T'
|| exec('ter_msc_wybierz','teryt','DOK','MIASTO')
?}


\dok_o_miasto_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [20.14]
:: OPIS: przycisk pola DOK.MIASTO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T'
|| exec('ter_msc_wybierz','teryt','DOK','O_MIASTO')
?}


\dok_ul_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [20.14]
:: OPIS: przycisk pola DOK.UL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T'
|| exec('ter_uli_wybierz','teryt','DOK','UL','MIASTO')
?}


\dok_o_ul_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [20.14]
:: OPIS: przycisk pola DOK.UL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T'
|| exec('ter_uli_wybierz','teryt','DOK','O_UL','O_MIASTO')
?}


\bd_rk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [21.37]
:: OPIS: przed wyświetleniem pola POZ.RK
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
''


\be_rk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [21.37]
:: OPIS: przed redakcją pola POZ.RK
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_opcja:={? POZ.RK='W'
        || 0
        || 1
        ?};
_opcja:={? POZ.TID<>'NAL' & POZ.TID<>'ZOB'
        || 0
        || _opcja
        ?};
_opcja:={? DOK.DOK_REJ().RK<>'T'
        || 0
        || _opcja
        ?};
_opcja


\f3_rk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [21.37]
:: OPIS: na F3 pola POZ.RK
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
''


\ae_rk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [21.37]
:: OPIS: po redakcji pola POZ.RK
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
POZ.RK:=~(-fld);
_zwrot:={? POZ.RK<>'N' & POZ.RK<>'T'
        || FUN.info('Błędna wartość typu różnicy kursowej. Dopuszczalne wartości: \n'
                    ' T - Tak \n N - Nie \n W - wycena (wartość nadawana automatycznie).'@); 0
        || 1
        ?};
_zwrot


\be_dok_jorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [21.14_08]
:: OPIS: before edit dla pola DOK.JORG - Waluta opodatkowania
::----------------------------------------------------------------------------------------------------------------------
{? var_press('PROCED',DOK)>0 & DOK.PROC<>null()
|| SLU.index('NAZ');
   SLU.prefix();
   SLU.find_key('WALUTY');
   _ok:=1;
   {? -menu_txt(,)='popraw' | -menu_txt(,)*'automatycznie'
   || VPOZ.cntx_psh();
      VPOZ.index('VDOK');
      {? -menu_txt(,)='popraw'
      || VPOZ.prefix(DOK.ref())
      || VPOZ.prefix(dok)
      ?};
      _ok:=~VPOZ.first();
      VPOZ.cntx_pop();
      _ok
   ?};
   {? _ok || exec('be_edok_fld','dok_fks1') || 0 ?}
|| 0
?}


\ae_dok_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [21.14_08]
:: OPIS: after edit dla pol DOK.PROCED
::----------------------------------------------------------------------------------------------------------------------
{? DOK.PROCED=0
|| DOK.JORG:=exec('ust_vwal','kraje',DOK.KRAJ().KOD)
|| _txt:=','+DOK.JPK_PROC+',';
   _wer:=exec('bl_js_wersja','jpk_v');
   JPK_SLO.cntx_psh();
   JPK_SLO.index('PROCED');
   JPK_SLO.prefix(_wer,'PROC','OSS',);
   {? JPK_SLO.first()
   || {!
      |? _txt:=gsub(_txt,','+JPK_SLO.KOD+',',',');
         JPK_SLO.next()
      !}
   ?};
   JPK_SLO.index('PROCED');
   JPK_SLO.prefix(_wer,'PROC','IOSS',);
   {? JPK_SLO.first()
   || {!
      |? _txt:=gsub(_txt,','+JPK_SLO.KOD+',',',');
         JPK_SLO.next()
      !}
   ?};
   JPK_SLO.cntx_pop();
   _txt:=gsub(_txt,',','');
   {? _txt<>''
   || {? FUN.ask('Włączenie procedur wspólnych usunie wszystkie procedury\n'@+
                 'niepowiązane z procedurami wspólnymi.\n'@+
                 '\n Czy na pewno chcesz włączyć procedury wspólne?'@)
      || _txt2:=','+DOK.JPK_PROC+',';
         JPK_SLO.cntx_psh();
         JPK_SLO.index('PROCED');
         JPK_SLO.prefix(_wer,'PROC','',);
         {? JPK_SLO.first()
         || {!
            |? _txt2:=gsub(_txt2,','+JPK_SLO.KOD+',',',');
               JPK_SLO.next()
            !}
         ?};
         JPK_SLO.cntx_pop();
         _txt2:=gsub(_txt2,',,',',');
         {? 1+_txt2=',' || _txt2:=1-_txt2 ?};
         {? _txt2+1=',' || _txt2:=_txt2-1 ?};
         DOK.JPK_PROC:=_txt2
      || DOK.PROCED:=0
      ?}
   ?}
?};
1


\be_dok_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [21.14_08]
:: OPIS: before edit dla pol DOK.PROCED
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? -menu_txt(,)='popraw' | -menu_txt(,)*'automatycznie'
|| VPOZ.cntx_psh();
   VPOZ.index('VDOK');
   {? -menu_txt(,)='popraw'
   || VPOZ.prefix(DOK.ref())
   || VPOZ.prefix(dok)
   ?};
   _ok:=~VPOZ.first();
   VPOZ.cntx_pop();
   _ok
?};
_ok


\be_dok_ksef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Przed redakcją DOK.NRKSEF
::----------------------------------------------------------------------------------------------------------------------
0


\f3_korprzy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [23.25]
:: OPIS: F3 w polu redagowania przyczyn korekty w nagłówku dokumentu
::----------------------------------------------------------------------------------------------------------------------
_powod:=DOK.KOR_PRZY;
SLO.cntx_psh(); SLU.cntx_psh();
SLO.index('SL');
INFO.POWKOR();
SLO.prefix(SLU.ref());
SLO.win_sel('ONE_SEL'); SLO.win_dict('ONE_SEL');
SLO.hdr_sel('Powody korekt'@);
_powod:={? SLO.select() || SLO.TR ?};
SLO.cntx_pop(); SLU.cntx_pop();
_powod


\bd_dok_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [23.25]
:: OPIS: Na Wyświetl przed dla pól DOK.NETTO, DOK.VAT i DOK.BRUTTO w okienkach wertowania
::----------------------------------------------------------------------------------------------------------------------
DOK.DOK_REJ().SLO().KOD='VAT' | SLO.KOD='SAD'


\find_op_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [23.25]
:: OPIS: Fomuła wyszukuje bliźniaczego rozrachunku mającego obcą walutę.
::       Jeśli zostanie znaleziony to, w obu rozrachunkach, aktualizowane są salda, obroty oraz kod waluty,
::       dotyczące obcej waluty, o wartości z drugiego rozrachunku. 
::----------------------------------------------------------------------------------------------------------------------
_ref_new:=null;
OP.cntx_psh(); OP.index('KON_O2'); OP.prefix(OP.ODD,OP.AN,OP.SYM,OP.SYM_ROK);
{? OP.size()>1
|| _ref:=OP.ref();
   _kod:=OP.WAL;
   _sal_ma:=OP.SMA;
   _sal_wn:=OP.SWN;
   _ob_ma:=OP.MA;
   _ob_wn:=OP.WN;
   {? OP.first()
   || {! |?
         {? OP.ref()<>_ref
         || OP.WAL_OB:=_kod;
            OP.SMA_WAL:=_sal_ma;
            OP.SWN_WAL:=_sal_wn;
            OP.MA_WAL:=_ob_ma;
            OP.WN_WAL:=_ob_wn;
            OP.trig_off('*','*');
            OP.put();
            OP.trig_on('*','*');
            _kod:=OP.WAL;
            _sal_ma:=OP.SMA;
            _sal_wn:=OP.SWN;
            _ob_ma:=OP.MA;
            _ob_wn:=OP.WN;
            _ref_new:=OP.ref()
         ?};
         ~_ref_new & OP.next()
      !}
   ?}
?};
OP.cntx_pop();
{? _ref_new
|| OP.WAL_OB:=_kod;
   OP.SMA_WAL:=_sal_ma;
   OP.SWN_WAL:=_sal_wn;
   OP.MA_WAL:=_ob_ma;
   OP.WN_WAL:=_ob_wn
?}


\vpoz_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Trigger dla tabeli VPOZ - add przed i put przed
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh();
DOK.use(ref_name(VPOZ.DOK)); DOK.prefix();
VPOZ.DOK();
{? VPOZ.D=date(0,0,0) || VPOZ.D:=DOK.DOP ?};
VPOZ.DOK_REJ:=DOK.DOK_REJ;
VPOZ.HAN:=DOK.HAN;
VPOZ.ODD:=DOK.ODD;
VPOZ.REJ:=DOK.REJ;
VPOZ.KH_KRISO:=DOK.KH_KRISO;
VPOZ.O_KRISO:=DOK.O_KRISO;
VPOZ.RB:=DOK.RB;
VPOZ.RB_V:=DOK.RB_V;
VPOZ.WYS:=DOK.WYS;
VPOZ.WAL:=DOK.WAL;
VPOZ.BANK:=DOK.BANK;
VPOZ.JORG:=DOK.JORG;
VPOZ.SP_PL:=DOK.SP_PL;
VPOZ.KRAJ:=DOK.KRAJ;
DOK.cntx_pop();
1


\dok_put_vp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła zmieniająca wartości pól tabeli VPOZ - używana w triggerze po put tabeli DOK
::----------------------------------------------------------------------------------------------------------------------
VPOZ.cntx_psh();
_mask:=4-ref_name(DOK.ref());
VPOZ.use('pozv'+_mask); VPOZ.index('VDOK'); VPOZ.prefix(DOK.ref());
{? VPOZ.first()
|| {! |?
      VPOZ.put();
      VPOZ.next()
   !}
?};
VPOZ.cntx_pop()


\ba_pozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [23.25]
:: OPIS: Po dołącz dla tabeli POZF
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('PozFEdok')<=0 & exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
{? exec('bf_pozf','!fks_dks_dark',1)
|| POZF.blank();
   {? POZF.edit("exec('ar_pozf','!fks_dks_dark','ADD')")
   || POZF.add()
   ?}
?}


\bp_pozf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [23.25]
:: OPIS: Przed popraw dla tabeli POZF
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('PozFEdok')<=0 & exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
exec('bf_pozf','!fks_dks_dark',0)


\clear_dok_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [23.25]
:: OPIS: Czyści rachynki bankowe po zmianie kontrahenta w dokumencie księgowym
::----------------------------------------------------------------------------------------------------------------------
{? DOK.RB & DOK.RB().TAB='KH'
|| {? gsub(RACHBANK.KB_3R,' ','')=SKID_RBK.N
   || RACHBANK.KB_3R:=''
   ?};
   DOK.RB:=null
?};
{? DOK.RB_V & DOK.RB_V().TAB='KH'
|| {? gsub(RACHBANK.KB_2R,' ','')=SKID_RBK.N
   || RACHBANK.KB_2R:=''
   ?};
   DOK.RB_V:=null
?}

:Sign Version 2.0 jowisz:1045 2024/01/29 14:27:16 214de199749c132fddd4d27add1d838731bba169500ce382ab67d86a512063f9b5c6c07d40b25a1cf255b0e7090c909b5abff4903c90caf9dbdeae16054e6c16629d56c1a462c40f73f3c6b9a4ff65af44314c6f4f0a035eabbd3fc7ffdcf2fb0484602d806bc093bad29dbe11812a704c679972d3da5104629219be87e44465
