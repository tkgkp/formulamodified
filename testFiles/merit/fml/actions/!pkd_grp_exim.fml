:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrze�one
::======================================================================================================================
:: Nazwa pliku: !pkd_grp_exim.fml
:: Utworzony:26.10.2020
:: Autor: MicKoc [21.14]
::======================================================================================================================
:: Zawartość: Eksport danych źródłowych i import przeszeregowań
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS: Eksport i import przeszeregowań
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL

exec('init','pkd');

{? ~__F_ZATR.upr('P')
|| FUN.info('Brak wymaganego dostępu do formy współpracy "%1".'@ ['P']);
   return()
?};

_txt:=exec('uprawnieniawrap','pkd','Przebiegu zatrudnienia','PKD_EZK_PPZA','PKD_EZK_RPZA');
{? +|_txt
|| FUN.emsg('Brak wymaganych uprawnień do importu informacji o:%1'@[_txt]);
   return()
?};

P_FILTER.UD_SCH:=exec('domyslny','schemat','PODZORG');

_JOS:=exec('jos_create','pkd_grp');

_cfg:=obj_new('nav','lastref');
_cfg.nav:=obj_new('main','side');
: main - okno ze współpracownikami
: side - okno ze strukturą hierarchiczną
_cfg.nav.side:=_JOS.WS;

_ud_skl:=__PARSES.getVal('JednostkaOrganizacyjna').SYMBOL;
params_set(
   'cfg',_cfg,
   'JOS',_JOS,
   'ud_skl',_ud_skl
);
exec('pkd_conf_cntx','pkd','psh');

Cntx.psh(OSOBA,P,UD_SCH,UD_SKL,UD_DEF);
Cntx.clr(UD_SCH,UD_SKL,UD_DEF);
P.win_edit();

_wnd:=exec('wnd','!pkd_grp_exim',_JOS,_cfg);

_JOS.TAB.win_sel(_wnd);
_JOS.TAB.select();

Cntx.pop(OSOBA,P,UD_SCH,UD_SKL,UD_DEF);
exec('pkd_conf_cntx','pkd','pop');
VAR_DEL.delete('__dane');
P.f_rfresh();
~~


\pola
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS: Definicja pól eksportu/importu, obsługa 6-ką danych:
::    TABELA(XYZ).POLE zawierającej dane; - obowiązkowe, definicja tabeli tymczasowe
::    TABELA2.POLE2 okienka z przyjazną nazwą; - nieobowiązkowe, domyślnie TABELA.POLE, nazwa wyświetlana, nazwa kolumny
::    blokada zmiany; - obowiązkowe, nie pozwala na usunięcie z eksportu oraz na zmianę w excel
::    formuła na wartość; - nieobowiązkowe, domyślnie TABELA.POLE, wartość pokazywana w excel
::    formuła na ID pola - nieobowiązkowe, domyślnie TABELA.POLE, id pola w excel, id kolumny do importu, uniklane
::    formuła na ID pola nadrzędnego (powiązanego) - nieobowiązkowe, domyślnie puste, do powiązania zależnych od siebie
:: Przykład: XYZ.P;  [XYZ_OKIENKA.P];blokada 1/0;[XYZ.P().WARTOSC];                             ['XYZ.P'];  ['XYZ.P']
::          'SLO.KOD; H.WAL;         0;          {? H.CZYWAL=\'T\' || H.WAL().KOD || \'PLN\' ?};\'H.WAL1\';\'H.S1\';'
::
:: Uwaga: Modyfikację rekordów oprogramować w \aktualizuj
::        Pole H.OD - musi być w pliku eksportu
::----------------------------------------------------------------------------------------------------------------------
'P.IP;;1;;;;'
'F_ZATR.KOD;P.F_ZATR;1;P.F_ZATR().KOD;\'P.F_ZATRK\';;'
'P.T;;0;;;;'
'OSOBA.NAZWISKO;;1;;;;'
'OSOBA.PIERWSZE;;1;;;;'
'H.OD;;0;;;;'
'H.WYL;;0;;;\'H.WYM\';'
'H.WYM;;0;;;\'H.WYL\';'
'UD_SKL.SYMBOL;P.WYDZIAL;0;;\'P.WYDZIALS\';;'
'STN.ST;P.ST;0;;;\'P.WYDZIALS\';'
'H.S1;;0;;;;'
'SLO.KOD;H.WAL;0;{? H.CZYWAL=\'T\' || H.WAL().KOD || \'PLN\' ?};\'H.WAL1\';\'H.S1\';'
'H.S2;;0;;;;'
'SLO.KOD;H.WAL;0;{? H.CZYWAL2=\'T\' || H.WAL().KOD || \'PLN\' ?};\'H.WAL2\';\'H.S2\';'
'H.S3;;0;;;;'
'SLO.KOD;H.WAL;0;{? H.CZYWAL3=\'T\' || H.WAL().KOD || \'PLN\' ?};\'H.WAL3\';\'H.S3\';'
'H.S4;;0;;;;'
'SLO.KOD;H.WAL;0;{? H.CZYWAL4=\'T\' || H.WAL().KOD || \'PLN\' ?};\'H.WAL4\';\'H.S4\';'
'CP.CP;P.CP;0;;;'


\wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS: Definicja okienek
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_JOS:=_a;
_cfg:=_b;
VAR_DEL.delete('__dane');
__dane:=~~;
: Najpierw zwykłe okno do prezentacji współpracowników.
_acr:='EKSIMPRZ';
: użyj istniejące okienko
{? (_ws:=__WND.SEL.get(P,_acr))=''
|| _ws:=P.mk_sel(,'P',,'#ekspimpprzesz',,,,,'U','T');
   P.win_fld(_ws,,'T',,,9,,,,,MS.comment(P,'T'));
   P.win_fld(_ws,,'IP',,,-5,,,,,MS.comment(P,'IP'));
   P.win_fld(_ws,,'OSOBA','NAZWISKO',,20,,,,,MS.comment(OSOBA,'NAZWISKO'));
   P.win_fld(_ws,,'OSOBA','PIERWSZE',,15,,,,,MS.comment(OSOBA,'PIERWSZE'));
   P.win_fld(_ws,,'OSOBA','PESEL',,11,,,,,MS.comment(OSOBA,'PESEL'));
   P.win_fld(_ws,,'OSOBA','DOWOD',,11,,,'Dowód osobisty'@,,MS.comment(OSOBA,'DOWOD'));
   P.win_fld(_ws,,'F_ZATR','KOD',,-2,,,MS.name(P,'F_ZATR'),,MS.comment(F_ZATR,'KOD'));
   P.win_fld(_ws,,'WYDZIAL','SYMBOL',,-16,,,MS.name(P,'WYDZIAL'),,'Symbol jednostki organizacyjnej'@);
   P.win_fld(_ws,,'ST','ST',,18,,,MS.name(P,'ST'),,MS.comment(STN,'ST'));
   P.win_fld(_ws,,'ZA',,,-5,,,MS.name(P,'ZA'),,MS.comment(P,'ZA'),2,,"'T'","'N'");

   _feksport:="params_set(params_get()); exec('eksport','!pkd_grp_exim'); 0";
   P.win_act(_ws,,'Formuła','Eksport'@@,,'Przygotowanie arkusza z danymi do późniejszego importu'@,
      _feksport,,1,1,_feksport,,'E');
   _fimport_b:="
      params_set(params_get());
      {? var_pres('__dane')>0 || &__dane ?};
      __dane:=~~;
      _dane:=params_exec('import','!pkd_grp_exim');
      {? var_pres('_dane')>100
      || __dane:=_dane;1
      || 0
      ?}
      ";
   _fimport_a:="params_set(params_get()); exec('nanies_dane','!pkd_grp_exim',__dane); 0";
   P.win_act(_ws,,'Formuła','Import'@@,,'Import przeszeregowań'@,
      _fimport_b,_fimport_a,,,,,'I');
   P.win_act(_ws,,'Menu','Szukaj'@@,,,,,,,,,'S');
   P.win_act(_ws,,'Formuła','Szukaj dokładnie'@@,'#S','Szukanie zapisu zgodnego ze zredagowanym wzorcem'@,
      "exec('p_ustaw_ezk','szukaj')","exec('p_d','szukaj')",,,,,'S');
   P.win_act(_ws,,'Formuła','Szukaj &kontekstowo'@@,'#S','Szukanie zapisu zgodnego ze zredagowanym wzorcem'@,
      "exec('p_ustaw_ezk','szukaj')","exec('p_k','szukaj')",,,,,'K');
   P.win_act(_ws,,'#F3',,,,"exec('p_ustaw_ezk','szukaj')","exec('p_f3_wnd','szukaj')");
   P.win_act(_ws,,'Kolejność');

   P.win_btn(_ws,'text='+'Eksport'@+',btn_label_align=center,panel=right,align=begin','menu:E');
   P.win_btn(_ws,'text='+'Import'@+',btn_label_align=center,panel=right,align=begin','menu:I');

   __WND.SEL.put(P,_acr,_ws)
?};

_cfg.nav.main:=_ws;

: Teraz okno grupowe.
_mode:='maximized';

_wnd:=_JOS.TAB.grp_make('Grupowa aktualizacja zatrudnienia',
:  Po wyświetleniu (załaduj kontrolkę, wyświetl drzewko).
   "  _par:=params_get();
      params_set(_par);
      _cfg:=_par.cfg;
      _ud_skl:=_par.ud_skl;
      _JOS:=_par.JOS;
      exec('jos_fill','pkd_grp',_JOS,P_FILTER.UD_SCH,_ud_skl);
      grp_disp(_JOS.TAB,_cfg.nav.side,1,1)
   ",'pkd_grp_azat'
);

: Struktura.
_JOS.TAB.grp_sel(_wnd,_JOS.TAB,_cfg.nav.side,,
:  Po odświeżeniu (wyświetl współpracowników).
   "  _par:=params_get();
      params_set(_par);
      _cfg:=_par.cfg;
      grp_disp(P,_cfg.nav.main,1,1)
   ",,,18,,,,,_mode,_cfg.nav.side
);

: Współpracownicy.
_JOS.TAB.grp_splt(_wnd,,'vertical','p',',25%');
_JOS.TAB.grp_sel(_wnd,P,_cfg.nav.main,,"",,,,
:  Przed obsługą (ustaw filtr na tabeli P).
: !!! Proteza. Zapamiętujemy numer rekordu tabeli _JOS.TAB, dla którego odświeżany był widok współpracowników.
   "  _par:=params_get();
      _JOS:=_par.JOS;
      _cfg:=_par.cfg;
      {? _cfg.lastref<>_JOS.TAB.ref() & UD_DEF.seek(_JOS.TAB.UD_DEF)
      || _cfg.lastref:=_JOS.TAB.ref();
         _where:={? _JOS.TAB.TYP='S' || '\"P\".ST=\\\''+_JOS.TAB.STN+'\\\'' || '' ?};
         exec('filtruj_p','schemat','PKD',UD_DEF.ref(),'P','','W',,_where)
      ?}
   ",,,,_mode,_cfg.nav.main
);

_wnd


\mk_buff
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS: Tworzy składowe interfejsu
::   WE: _a [STRING] - wyróżnik wskazujący na interfejs
::       _b .. [STRING] - dodatkowe parametry
::   WY: obiekt przechowujący elementy interfejsu
::----------------------------------------------------------------------------------------------------------------------
{? _a='kolumny'
|| _obj:=obj_new('TAB','NDX','WS');
   _obj.NDX:=obj_new('LP','Z','F','ID','ID_NAD');
   _obj.TAB:=tab_tmp(2,
      'LP','INTEGER','Lp.',
      'NAZ','STRING[255]','Nazwa kolumny',
      'KOM','STRING[255]','Komentarz',
      'D','STRING[1]','Z danymi',
      'Z','STRING[1]','Kolumna',
      'B','INTEGER','Blokada zmiany kolumny',
      'F','STRING[255]','Formuła',
      'TYP','STRING[15]','Typ pola w tabeli tymczasowej',
      'ID','STRING[16]','Identyfikator pola',
      'ID_NAD','STRING[16]','Rekord nadrzędny'
      );
   _obj.NDX.LP:=_obj.TAB.ndx_tmp('Lp.',,'LP',,);
   _obj.NDX.Z:=_obj.TAB.ndx_tmp('Kolumna, Lp.',,'Z',,,'LP',,);
   _obj.NDX.F:=_obj.TAB.ndx_tmp('Formuła',,'F',,);
   _obj.NDX.ID:=_obj.TAB.ndx_tmp('Identyfikator',,'ID',,);
   _obj.NDX.ID_NAD:=_obj.TAB.ndx_tmp('Identyfikator nadrzędny',,'ID_NAD',,);

   _obj.WS:=_obj.TAB.mk_sel('Wybór kolumn i danych'@,'P',0,'#pkdgrpeximkol');
   _obj.TAB.win_fld(_obj.WS,,'LP');
   _obj.TAB.win_fld(_obj.WS,,'NAZ',,,50);
   _obj.TAB.win_fld(_obj.WS,,'KOM',,,50);
   _obj.TAB.win_fld(_obj.WS,,'D',,,,,,,,'Czy wykonać eksport z danymi w kolumnie?'@,2,,"'T'","'N'");
   _obj.TAB.win_fld(_obj.WS,,'Z',,,,,,,,'Czy umieścić kolumnę w pliku?'@,2,,"'T'","'N'");
   _obj.TAB.fld_fml('Z','BEFORE_DISPLAY',"~cur_tab(1,1).B");
   _obj.TAB.fld_fml('D','BEFORE_DISPLAY',"~cur_tab(1,1).B");

   _fput_a:="{? ~cur_tab(1,1).B || cur_tab(1,1).put() ?}";
   _fput_b:="
      _akc:=
         {? -menu_txt()='odznacz' || '_a.Z:=\''N\''; _a.D:=\''N\'''
         |? -menu_txt()='zaznacz' || '_a.Z:=\''T\'''
         |? -menu_txt()='bez danych' || '_a.D:=\''N\'''
         || '_a.D:=\''T\'''
         ?};
      _par:=params_get();
      _kol:=_par.kol;
      ($_akc)(_kol.TAB);
      _kol.TAB.cntx_psh();
      {? +|_kol.TAB.ID_NAD
      || _kol.TAB.index(_kol.NDX.ID);
         {? _kol.TAB.find_key(_kol.TAB.ID_NAD,)
         || ($_akc)(_kol.TAB);
            _kol.TAB.put()
         ?}
      ?};
      _id:=_kol.TAB.ID;
      _kol.TAB.index(_kol.NDX.ID_NAD);
      _kol.TAB.prefix(_kol.TAB.ID);
      {? _kol.TAB.first()
      || {!
         |? ($_akc)(_kol.TAB);
            _kol.TAB.put();
            _kol.TAB.next()
         !}
      ?};
      _kol.TAB.cntx_pop();
      1
      ";
   _obj.TAB.win_act(_obj.WS,,'Formuła','Dalej'@@,,'Uruchamia eksport danych'@,
      "params_set(params_get()); exec('spr_h_od','!pkd_grp_exim')",
      "params_set(params_get()); exec('ex_dane','!pkd_grp_exim'); sel_exit()",1,,,,'D',,'target=window');
   _obj.TAB.win_act(_obj.WS,,'Formuła','Zaznacz'@@,,'Wskazuje kolumny do eksportu'@,
      _fput_b,_fput_a,,1,"sel_nchk()",,'Z'
   );
   _obj.TAB.win_act(_obj.WS,,'Formuła','Odznacz'@@,,'Ukrywa kolumny do eksportu'@,
      _fput_b,_fput_a,,1,"sel_nchk",,'O'
   );
   _obj.TAB.win_act(_obj.WS,,'Formuła','Z da&nymi'@@,,'Eksport z danymi w kolumnie'@,
      "cur_tab(1,1).D:='T'",_fput_a,,1,,,'N');
   _obj.TAB.win_act(_obj.WS,,'Formuła','Bez danych'@@,,'Eksport bez danych w kolumnie'@,
      "cur_tab(1,1).D:='N'",_fput_a,,1,,,'B');
   _obj.TAB.win_act(_obj.WS,,'Formuła','Za&pisz'@@,,'Zapisuje domyślną konfigurację'@,,
      "exec('zapisz_ustawienia','!pkd_grp_exim',cur_tab(1,1))",,,,,'P');
   _obj.TAB.win_act(_obj.WS,,'Formuła','Od&czytaj'@@,,'Wczytuje domyślną konfigurację'@,,
      "exec('czytaj_ustawienia','!pkd_grp_exim',cur_tab(1,1))",,,,,'C');
   _txt:='text='+'Za&pisz'@+',btn_label_align=center,panel=bottom,align=begin';
   _obj.TAB.win_btn(_obj.WS,_txt,'menu:P');
   _txt:='text='+'Od&czytaj'@+',btn_label_align=center,panel=bottom,align=begin';
   _obj.TAB.win_btn(_obj.WS,_txt,'menu:C');
   _txt:='text='+'Dalej'@+',btn_label_align=center,panel=bottom,align=end,icon=xwin16.png:22';
   _obj.TAB.win_btn(_obj.WS,_txt,'menu:D');
   _txt:='text='+'Anuluj'@+',btn_label_align=center,panel=bottom,align=end,icon=xwin16.png:14';
   _obj.TAB.win_btn(_obj.WS,_txt,'key:Esc');
   _obj.TAB.win_btn(_obj.WS,'text='+'Zaznacz'@+',btn_label_align=center,panel=right,align=begin','menu:Z');
   _obj.TAB.win_btn(_obj.WS,'text='+'Odznacz'@+',btn_label_align=center,panel=right,align=begin','menu:O');
   _obj.TAB.win_btn(_obj.WS,'text='+'Z da&nymi'@+',btn_label_align=center,panel=right,align=begin','menu:N');
   _obj.TAB.win_btn(_obj.WS,'text='+'Bez danych'@+',btn_label_align=center,panel=right,align=begin','menu:B');
   _obj.TAB.win_act(_obj.WS,,'Szukaj');
   _obj.TAB.win_act(_obj.WS,,'Kolejność');
   _obj.TAB.win_act(_obj.WS,,'Rekord',,,,
      "  _t:=cur_tab(1,1);
         {? _t.B & ~_t.sel_size()
         || _t.actions_grayed(cur_win(1,1),'ZONB')
         || _gr:='';
            {? _t.Z='T' & ~_t.sel_size() || _gr+='Z' ?};
            {? _t.Z='N' & ~_t.sel_size() || _gr+='ONB' ?};
            {? _t.D='N' & ~_t.sel_size() || _gr+='B' ?};
            {? _t.D='T' & ~_t.sel_size() || _gr+='N' ?};
            _t.actions_grayed(cur_win(1,1));
            {? +|_gr || _t.actions_grayed(cur_win(1,1),_gr) ?}
         ?};''
      "
   );
   _obj.TAB.index(_obj.NDX.LP);
   _obj.TAB.win_sel(_obj.WS);
   _err:=0;
   on_error(2);
   _co:=obj_new(4);  _na:=obj_new(obj_len(_co));
   _co[1]:=';;;;;';  _na[1]:=';';
   _co[2]:=';;;;';   _na[2]:=';';
   _co[3]:=';;;';    _na[3]:=';';
   _co[4]:=';;';     _na[4]:=';';
   _wynik:=$gsub(_b+'1',_co,_na);
   _chk:=form_chk(_wynik);
   _wynik();
   {? _chk.first() | in_error()
   || exec('err','!pkd_grp_exim',1);
      _err:=1
   ?};
   on_error();
   {? ~_err
   || _obj.TAB.blank();
      _obj.TAB.Z:='T';
      _obj.TAB.D:='T';
      _sklad:=spli_str(_b,';');
      {? (obj_len(_sklad)%*6) || exec('err','!pkd_grp_exim',1); _err:=1 ?};
      {? ~_err
      || {! _licz:=1//6..obj_len(_sklad) |!
            {? var_pres('_element1')>100 || &_element1 ?};
            _element1:=spli_str(_sklad[_licz],'.');
            {? obj_len(_element1)<>2 || exec('err','!pkd_grp_exim',1); _err:=1 ?};
            {? var_pres('_element2')>100 || &_element2 ?};
            {? ~+|_sklad[_licz+1]
            || _element2:=_element1
            || _element2:=spli_str(_sklad[_licz+1],'.');
               {? obj_len(_element2)<>2 || exec('err','!pkd_grp_exim',1); _err:=1 ?}
            ?};
            {? ~_err
            || _obj.TAB.LP+=1;
               _obj.TAB.F:={? +|_sklad[_licz+3] || _sklad[_licz+3] || _sklad[_licz] ?};
               _obj.TAB.NAZ:=MS.name(($_element2[1])(),_element2[2]);
               _obj.TAB.KOM:=MS.comment(($_element2[1])(),_element2[2]);
               _obj.TAB.B:=#_sklad[_licz+2];
               _typ:=var_pres(_element1[2],($_element1[1])());
               _obj.TAB.TYP:=
                  {? _typ=27 || 'STRING['+$MS.fld_len(($_element1[1])(),_element1[2])+']'
                  |? _typ=20 || 'REAL'
                  |? _typ=21 || 'DATE'
                  |? _typ=22 || 'INTEGER'
                  |? _typ=29 || 'TIME'
                  || exec('err','!pkd_grp_exim',2);
                     _err:=1;
                     'ERR'
                  ?};
               _obj.TAB.ID:={? +|_sklad[_licz+4] || ($_sklad[_licz+4])() || _sklad[_licz] ?};
               _obj.TAB.ID_NAD:={? +|_sklad[_licz+5] || ($_sklad[_licz+5])() || '' ?};
               {? ~_obj.TAB.find_tab('first','ID',,'=',_obj.TAB.ID)
               || _obj.TAB.add()
               ?}
            ?}
         !}
      ?}
   ?}
?};
_obj


\eksport
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS: Eksport danych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_zaznaczono:=0;
{? P.sel_size()=0 || sel_add() ?};
_zaznaczono:=P.sel_size();
_tab:=P.sel_aget();
_kol:=exec('mk_buff','!pkd_grp_exim','kolumny',exec('pola','!pkd_grp_exim'));
params_set('tab',_tab,'kol',_kol);
_kol.TAB.select();
P.sel_adel()


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS: Import danych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
_tmp_dir:=fmk_tmp_dir(0);
{? type_of(_tmp_dir)<>type_of(~~)
|| _pth:=_tmp_dir.get_path();
   {? _pth<>''
   || _uploaded:=dlg_upload(_pth,0,'.xlsx');
      _sep:=exec('sep','#file',1);
      _plik:=_pth+_sep+_uploaded
   ?}
|| FUN.emsg('Nie udało się utworzenie katalogu tymczasowego po stronie serwera.'@)
?};
{? ~+|_plik | ~fexists(_plik,0)
|| FUN.info('Brak pliku z przeszeregowaniami.'@);
   return(0)
?};
_parametry:=params_get();
_env:=exec('xls_stream_reader','#excel');
{? _env.open(_plik,1)
|| exec('set','#profile',,'Import przeszeregowań','katalog do zapisu',exec('dir_from_path','#file',_plik));
   _nag:=_env.TabNames;
   _nag.index(_nag.ndx_tmp('Kolumna',,'COLUMN',,));
   {? _nag.first()
   || _kol:=exec('mk_buff','!pkd_grp_exim','kolumny',exec('pola','!pkd_grp_exim'));
      _kol.TAB.index(_kol.NDX.ID);
:: ustawienie widocznych kolumn
      {? _kol.TAB.first()
      || {!
         |? _kol.TAB.Z:='N';
            _kol.TAB.put();
            _kol.TAB.next()
         !}
      ?};
      {!
      |? {? _kol.TAB.find_key(_nag.NAME,)
         || _kol.TAB.Z:='T';
            _kol.TAB.put()
         ?};
         _nag.next()
      !};

::      _kol.TAB.select;
::      exec('select','#table',_nag);
      _kol.TAB.index(_kol.NDX.Z);
      _kol.TAB.prefix('T');
:: budowa tabeli danych
      {? _kol.TAB.first()
      || _str:='tab_tmp(1,\'LP\',\'INTEGER\',\'Lp.\'';
         _set:='';
         _l_kol:=2;
         _win:='_a.win_fld(_b,,\'LP\',,,4,,1);';
         {!
         |?
            _str+=',\''+spli_str(_kol.TAB.ID,'.')[2]+'\',\''+_kol.TAB.TYP+'\',\''+_kol.TAB.NAZ+'\'';
            _set+='{? '+$_l_kol+'<=obj_len(_b) ||';
            {? _kol.TAB.TYP*'REAL'
            || _set+='_a.'+spli_str(_kol.TAB.ID,'.')[2]+':=exec(\'str2real\',\'#convert\',_b['+$_l_kol+']);';
               _win+='_a.win_fld(_b,,\''+spli_str(_kol.TAB.ID,'.')[2]+'\',,,-10,2,'+$_kol.TAB.B+');'
            |? _kol.TAB.TYP*'DATE'
            || _set+='_a.'+spli_str(_kol.TAB.ID,'.')[2]+':=exec(\'str2date\',\'#convert\',_b['+$_l_kol+']);';
               _win+='_a.win_fld(_b,,\''+spli_str(_kol.TAB.ID,'.')[2]+'\',,,-10,,'+$_kol.TAB.B+');'
            |? _kol.TAB.TYP*'INTEGER'
            || _set+='_a.'+spli_str(_kol.TAB.ID,'.')[2]+':=exec(\'str2real\',\'#convert\',_b['+$_l_kol+']);';
               _win+='_a.win_fld(_b,,\''+spli_str(_kol.TAB.ID,'.')[2]+'\',,,-5,,'+$_kol.TAB.B+');'
            || {? var_pres(spli_str(_kol.TAB.ID,'.')[2],($spli_str(_kol.TAB.ID,'.')[1])())>0
               || _len:=MS.fld_len(($spli_str(_kol.TAB.ID,'.')[1])(),spli_str(_kol.TAB.ID,'.')[2]);
                  {? _len>30 || _len:=30 ?};
                  {? _len<2 || _len:=2 ?};
                  _win+='_a.win_fld(_b,,\''+spli_str(_kol.TAB.ID,'.')[2]+'\',,,-'+$_len+',,'+$_kol.TAB.B+');'
               || _win+='_a.win_fld(_b,,\''+spli_str(_kol.TAB.ID,'.')[2]+'\',,,,,'+$_kol.TAB.B+');'
               ?};
               _set+='_a.'+spli_str(_kol.TAB.ID,'.')[2]+':=_b['+$_l_kol+'];'

            ?};
            _set+='1 ?};';
            _l_kol+=1;
            _kol.TAB.next()
         !};
         _set+='1';
         _str+=')';
         _win+='1';
         _dane:=($_str)();
         _dane.blank();
         _title:={? exec('interm','#system') || 'Dane z importu.'@ || 'Dane z importu: %1'@[_plik] ?};
         _okno:=_dane.mk_sel(_title,'P',0,,,,,,'U',,,,,'html_maximized');
         ($_win)(_dane,_okno);
         _dane.win_act(_okno,,'Usuń',,,'Usunięcie wiersza'@,,,,1);
         _txt:='text='+'Usuń'@+',btn_label_align=center,panel=right,align=begin,icon=xwin16.png:14';
         _dane.win_act(_okno,,'Formuła','Dalej'@,,'Zatwierdzenie danych'@,,"sel_exit()",1,1,,,'D',,'target=window');
         _dane.win_btn(_okno,'text='+'Dalej'@+',btn_label_align=center,panel=bottom,align=end','menu:D');
         _txt:='text='+'Anuluj'@+',btn_label_align=center,panel=bottom,align=end,icon=xwin16.png:14';
         _dane.win_btn(_okno,_txt,'key:Esc');
         _dane.win_sel(_okno);



         {! |? _env.read() |!
            {? var_pres('_obj')>100 || &_obj ?};
            _obj:=_env.get();
            {? _obj.TYPE='ROW' & _obj.ROW>1
            || _dane.LP+=1;
               ($_set)(_dane,_env.obj.CELLS);
               _dane.add()
            ?}
         !};
         _ret:=_dane.select();
         {? _ret & _dane.size()
         || _ret:=_dane
         ?}
      || exec('err','!pkd_grp_exim',4)
      ?}
   || exec('err','!pkd_grp_exim',4)
   ?};
   _env.close(1);
   obj_del(_env);
   &_env
|| exec('err','!pkd_grp_exim',3)
?};
_ret


\ex_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS: Mechanizm eksportu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_lastkatal:=exec('get','#profile',,'Import przeszeregowań','katalog do zapisu');
_dir_excel:=fmk_tmp_dir(0);
{? type_of(_dir_excel)<>type_of(~~)
|| _myKatal:=_dir_excel.get_path()+exec('sep','#file',1)
|| FUN.emsg('Nie udało się utworzyć katalogu tymczasowego po stronie serwera.'@);
   return(0)
?};

_nazwa:='Przeszeregowania_'+gsub(date$2,'.','')+'.xlsx';
_parametry:=params_get();
_tab:=_parametry.tab;
_kol:=_parametry.kol;
_tab.cntx_psh();
_kol.TAB.cntx_psh();
{? +_myKatal & _tab.first()
|| PROGRESS.set(_tab.size(),'Trwa przygotowywanie danych ...'@);
   _kol.TAB.index(_kol.NDX.Z);
   _kol.TAB.prefix('T',);
   {? _kol.TAB.first()
   || exec('xls_reader_decl','#excel');
      _env:=obj_new(@.CLASS.XRECLASS,1);
:: tworzę nowy arkusz
      _cr:=_env.create('xlsx');
      _get:=_env.get(_cr);
      _env.addSheet('Przeszeregowania');
:: ustawienia
      _s_n_noedit:=_env.addStyle();
      _env.setStyle('bold'); _env.setStyle('bgcolor:200:200:200'); _env.setStyle('editable:0');
      _s_n_edit:=_env.addStyle(); _env.setStyle('bgcolor:230:230:230'); _env.setStyle('editable:1');
      _s_edit:=_env.addStyle(); _env.setStyle('editable:1');
      _s_date:=_env.addStyle(); _env.setStyle('date'); _env.setStyle('editable:1');
      _s_kw:=_env.addStyle(); _env.setStyle('format:# ##0.00'); _env.setStyle('editable:1');
      _l_row:=0;
:: nagłowek
      {? _kol.TAB.first()
      || _l_kol:=0;
         _env.addRow(_l_row);
         _env.addCell(_l_kol,'Lp.');
         _env.setCellStyle(_s_n_noedit);
         _env.setName('MERIT');
         _l_kol+=1;
         {!
         |?
            _env.addCell(_l_kol,_kol.TAB.NAZ);
            _env.setCellStyle(_s_n_noedit);
            _env.setName(_kol.TAB.ID);
            _l_kol+=1;
            _kol.TAB.next()
         !};
         _l_row+=1
      ?};
      {!
      |? {? P.seek(_tab.REF,) & exec('h_find','pracownik','ref()',date())
            & H.P().ref() & H.WYDZIAL().ref() & H.P().OSOBA().ref() & H.ST().ref() & H.CP().ref() & P.F_ZATR().ref()
         || {? _kol.TAB.first()
            || _l_kol:=0;
               _env.addRow(_l_row);
               _env.addCell(_l_kol,_l_row);
               _env.setCellStyle(_s_n_noedit);
               _l_kol+=1;
               {!
               |? _env.addCell(_l_kol,{? _kol.TAB.D='T' || ($_kol.TAB.F)() || '' ?});
                  {? _kol.TAB.B || _env.setCellStyle(_s_n_noedit)
                  |? _kol.TAB.TYP*'REAL' || _env.setCellStyle(_s_kw)
                  |? _kol.TAB.TYP*'DATE' || _env.setCellStyle(_s_date)
                  || _env.setCellStyle(_s_edit)
                  ?};
                  _env.setAutoSizeColumn(_l_kol);
                  _l_kol+=1;
                  _kol.TAB.next()
               !};
               _l_row+=1
            ?}
         ?};
         PROGRESS.next();
         _tab.next()
      !};
      {! _licz:=1.._kol.TAB.size() |!
         _env.autoSizeColumn(_licz)
      !};
      PROGRESS.close();
      _env.lock('');
      _env.save(_myKatal+_nazwa);
      _env.close(_get);
      &_env
   ?};
   {? fexists(_myKatal+_nazwa)
   || dlg_save(_myKatal+_nazwa,0)
   ?}
?};
_kol.TAB.cntx_pop();
_tab.cntx_pop();
1


\err
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS: Komunikaty o błędach
::   WE: _a [INTEGER] - wybór komunikatu
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| FUN.error('Nieprawidłowo zdefiniowane kolumny do eksportu.'@)
|? _a=2
|| FUN.error('Nieprawidłowy lub nieobsługiwany typ danych.'@)
|? _a=3
|| FUN.error('Brak pliku z danymi.'@)
|? _a=4
|| FUN.error('Nieprawidłowy format pliku.'@)
|| FUN.error('Niespodziewany błąd.'@)
?}


\nanies_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS:
::   WE: _a [TABELA] - dane z importu
::   WY:
::----------------------------------------------------------------------------------------------------------------------
: Pobranie parametrów aktualizacji.  -----------------------------------------------------------------------------------
_TPAR:=tab_tmp(1,
:  Dane podstawowe
   'OD','DATE','Data aktualizacji'@,
   'PRZYG','DATE',MS.name(H,'PRZYG'),
   'PODPIS','DATE',MS.name(H,'PODPIS'),
:  Przedstawiciel
   'PP','INTEGER','Kopiować z ostaniego angażu'@,
   'PRZEDST','STRING[150]','Nazwisko, imiona'@,
:  Dane rozszerzone
   'MODE','INTEGER','Poprawiać niezaakceptowane'@,
   'AA','INTEGER','Akceptować'@,
:  Pola techniczne
   'HNDX','STRING[8]','Akronim indeksu',
   'P180','INTEGER','Brudnopis aktywny'
);
_TPAR.P180:=-PAR_SKID.get(180)='t';

_efld_opt:="
   _par:=params_get();
   _TPAR:=_par.TPAR;
   _we:=_par.we;
   _TPAR.efld_opt(_we,'enable=%1,mark=%1' [$(~_TPAR.PP)],,'PRZEDST'); 1
";
_TPAR.fld_fml('PP','AFTER_EDIT',_efld_opt);

_we:=_TPAR.mk_edit('Parametry zmian'@);
_TPAR.win_esep(_we,'Dane podstawowe'@);
::_TPAR.win_efld(_we,,'OD',,,,,,,,'Data aktualizacji zatrudnienia - początku nowego aneksu / przeszeregowania'@);
_TPAR.win_efld(_we,,'PRZYG',,,,,,,,MS.comment(H,'PRZYG'));
_TPAR.win_efld(_we,,'PODPIS',,,,,,,,MS.comment(H,'PODPIS'));
_TPAR.win_esep(_we,'Przedstawiciel pracodawcy'@);
_TPAR.win_efld(_we,,'PP',,,40,,,,,'','check-box',,"1","0");
_TPAR.win_efld(_we,,'PRZEDST',,,30,,,,,'Przedstawiciela pracodawcy (stanowisko, nazwisko, imiona, ...)'@);
_TPAR.fld_ebtn(_we,'icon=xwin16.png:90',"exec('lista','ext_slo','PRZEDZAK')");
{? _TPAR.P180
|| _TPAR.win_esep(_we,'Dane rozszerzone'@);
   _TPAR.win_efld(_we,,'MODE',,,,,,,,'Czy poprawiać zapisy, które nie zostały zaakceptowane?'@,'check-box',,"1","0");
   _TPAR.win_efld(_we,,'AA',,,,,,,,'Czy automatycznie akceptować wprowadzone zmiany?'@,'check-box',,"1","0")
?};
exec('ok_esc','#window',_TPAR,_we);
_TPAR.win_edit(_we);
_TPAR.efld_opt(_we,'mark=1',,'OD');
_TPAR.efld_opt(_we,'mark=1',,'PRZYG');
_TPAR.efld_opt(_we,'mark=1',,'PODPIS');

params_set(
   'TPAR',_TPAR,
   'we',_we
);

_TPAR.OD:=date(,,0)+1;
_TPAR.PRZYG:=date();
_TPAR.PODPIS:=date();
_TPAR.PP:=1;

_efld_opt();
{? ~_TPAR.edit(
   "  _TPAR:=params_get().TPAR;
      {? (_chk:=exec('h_p_daty_ae','pracownik',1,,_TPAR))<>''
      || _chk
      |? (_chk:=__CHK.record(_TPAR,,'PRZYG','PODPIS'))<>''
      || _chk
      |? _TPAR.PODPIS<_TPAR.PRZYG
      || _chk:='PRZYG'
      |? ~_TPAR.PP & (_chk:=__CHK.record(cur_tab(),,'PRZEDST'))<>''
      || _chk
      || ''
      ?}
   ")
|| return(0)
?};


: Tabela ze statusami operacji.  ---------------------------------------------------------------------------------------

_LOG:=tab_tmp(3,
   'NAZWISKO','STRING['+$MS.fld_len(OSOBA,'NAZWISKO')+']',MS.name(OSOBA,'NAZWISKO'),
   'PIERWSZE','STRING['+$MS.fld_len(OSOBA,'PIERWSZE')+']',MS.name(OSOBA,'PIERWSZE'),
   'PESEL','STRING['+$MS.fld_len(OSOBA,'PESEL')+']',MS.name(OSOBA,'PESEL'),
   'T','STRING['+$MS.fld_len(P,'T')+']',MS.name(P,'T'),
   'IP','INTEGER',MS.name(P,'IP'),
   'OK','STRING[1]','Zmiana poprawna'@,
   'OD','DATE','Data zmiany'@,
   'STATUS','SYS_MEMO','Status operacji'@,
:  Pola techniczne
   'H_UM','STRING[16]','Wskazanie modyfikowanej umowy',
   'HA','STRING[16]','Wskazanie dodanego przebiegu',
   'HA_CRC','INTEGER','Suma kontrolna dodanego przebiegu',
   'HP','STRING[16]','Wskazanie modyfikowanego przebiegu',
   'HP_CRC','INTEGER','Suma kontrolna modyfikowanego przebiegu'
);
_LOG.fld_attr(,2);

_LOG.fld_fml('NAZWISKO','BLANK',"P.OSOBA().NAZWISKO");
_LOG.fld_fml('PIERWSZE','BLANK',"P.OSOBA().PIERWSZE");
_LOG.fld_fml('PESEL','BLANK',"P.OSOBA().PESEL");
_LOG.fld_fml('T','BLANK',"P.T");
_LOG.fld_fml('T','DISPLAY_FORMAT',P.fld_fml('T','*DISPLAY_FORMAT'));
_LOG.fld_fml('IP','BLANK',"P.IP");
_LOG.fld_fml('OK','BLANK',"'N'");

_ws1:=_LOG.mk_sel('Pracownicy'@,,,,,,,,'U');
_LOG.win_fld(_ws1,,'T',,,9,,,,,MS.comment(P,'T'));
_LOG.win_fld(_ws1,,'IP',,,-5,,,,,MS.comment(P,'IP'));
_LOG.win_fld(_ws1,,'NAZWISKO',,,30,,,,,MS.comment(OSOBA,'NAZWISKO'));
_LOG.win_fld(_ws1,,'PIERWSZE',,,20,,,,,MS.comment(OSOBA,'PIERWSZE'));
_LOG.win_fld(_ws1,,'PESEL',,,11,,,,,MS.comment(OSOBA,'PESEL'));
_LOG.win_fld(_ws1,,'OK',,,-3,,,'Zmiana poprawna [T/N]'@,,'Zmiana została wprowadzona'@,2,,"'T'","'N'");
_LOG.win_fld(_ws1,,'OD',,,-10,,,,,'Data przeszeregowania'@);
_LOG.win_fld(_ws1,,'STATUS',,,50,,,,,'Komunikaty z przetwarzania'@);
_LOG.win_act(_ws1,,'Menu','Druku&j'@@,,'Drukowanie dokumentów'@,,,,,,,'J',,'icon=print,target=window');
_LOG.win_act(_ws1,,'Formuła','Przeszeregowanie'@@,'#J','Drukowanie przeszeregowania'@,
   "_LOG:=params_get().LOG; exec('h_drukuj_prze','pracownik',{? _LOG.HA<>'' || _LOG.HA || _LOG.HP ?})",,,1,,,'P');
_LOG.win_act(_ws1,,'Formuła','Aneks do umowy'@@,'#J','Drukowanie aneksu do umowy'@,
   "_LOG:=params_get().LOG; exec('h_drukuj_anum','pracownik',{? _LOG.HA<>'' || _LOG.HA || _LOG.HP ?})",,,1,,,'A');
_id:=_LOG.win_btn(_ws1,'text='+'Druku&j'@+',icon=xwin16.png:190,btn_label_align=center,panel=right,align=begin','Menu');
_LOG.btn_menu(_ws1,_id,'menu:JP');
_LOG.btn_menu(_ws1,_id,'menu:JA');
{? ~_TPAR.AA
|| _LOG.win_act(_ws1,,'Formuła','Wycofaj'@@,,'Wycofanie wprowadzonych zmian'@,
      "  _par:=params_get();
         _LOG:=_par.LOG;
         _TPAR:=_par.TPAR;
         H_UM.prefix();
         H.prefix();
         {? _LOG.OK='T' &
            (_LOG.sel_size() | FUN.ask('Czy na pewno chcesz wycofać wprowadzone zmiany przebiegu zatrudnienia?'@))
         || _ok:=0;
            do();
            _txt:='';
            {? _TPAR.P180
:              Jeżeli pracujemy z brudnopisem to wycofanie mamy oprogramowane.
            || {? _LOG.HA<>''
:                 Zmiana typu Popraw+Dołącz - wycofujemy zmiany umowy.
               || {? H_UM.seek(_LOG.H_UM)
                  || _ok:=exec('h_um_cancel','pracownik')
                  || _txt+='Odnalezienie zmienionej umowy nie powiodło się!'
                  ?}
:                 Zmiana typu (tylko) Popraw - wycofujemy zmiany przebiegu.
               || {? H.seek(_LOG.HP)
                  || _ok:=exec('h_cancel_one','pracownik')
                  || _txt+='Odnalezienie zmienionego przebiegu nie powiodło się!'
                  ?}
               ?};
               {? _txt<>''
               || undo()
               ?}

:              Praca bez brudnopisu - wycofanie do samodzielnego oprogramowania.
            || {? _LOG.HA<>''
               || {? ~H.seek(_LOG.HA)
                  || _txt+=
                        'Dostęp do dodanego przebiegu nie jest możliwy.\n'
                        'Wiersz jest zablokowany lub został usunięty.'@
                  |? H.crc()<> _LOG.HA_CRC
                  || _txt+='Dodany przebieg został już zmodyfikowany.'@
                  |? ~H.del(,1)
                  || _txt+='Usunięcie dodanego przebiegu nie powiodło się.'@
                  || _ok:=1
                  ?}
               ?};
               {? _txt<>''
               || undo()

:                 Póki co nie było błędu. Być może dlatego, że to była zmiana typu Popraw (a nie Popraw+Dołącz)
:                 i _LOG.HA, a więc powyższy kod nie był wykonywany. Zakładamy jednak, że jakiś rekord na pewno został
:                 poprawiony (nie będziemy tego sprawdzali).
               || {? ~H.seek(_LOG.HP)
                  || _txt+=
                        'Dostęp do poprawionego przebiegu nie jest możliwy.\n'
                        'Wiersz jest zablokowany lub został usunięty.'@
                  |? H.crc()<> _LOG.HP_CRC
                  || _txt+='Poprawiony przebieg został już zmodyfikowany.'@
                  |? _ok:=1;
                     _uidref:=H.IDLNK;
                     H.cntx_psh();
                     H.use(ref_name(_uidref));
                     H.prefix();
                     {? H.seek(_uidref)
                     || _tmp:=exec('H','buffer');
                        _tmp.get(1)
                     || _ok:=0
                     ?};
                     H.cntx_pop();
                     ~_ok
                  || _txt+='Dostęp do wartości przed zmianami nie powiódł się.'@
:                    W _tmp mamy kopię rekordu z brudnopisu. Nie możemy jednak zmienić wszystkich pól.
:                    Tym, które mają pozostać niezmienione nadajemy wartość pustą.
                  || _tmp.IDADD:=_tmp.IDMOD:=_tmp.IDLNK:=_tmp.UMOWA:=~~;
                     _tmp.set();
                     _ok:=H.put()
                  ?}
               ?}
            ?};
            {? _ok
            || _LOG.OK:='N';
               _LOG.memo_set('Zmiany wycofane przez operatora.\n'@,'STATUS');
               _LOG.put() & _LOG.memo_put(,'STATUS')
            ?};
            {? ~end() & _txt<>''
            || FUN.emsg(_txt+'\nWycofanie zmian niemożliwe.'@)
            ?}
         ?}
      ",,,1,
      "FUN.ask('Czy na pewno chcesz wycofać wprowadzone zmiany przebiegu zatrudnienia zaznaczonych pracowników?'@)",,
      'W');
   _LOG.win_btn(_ws1,'text='+'Wycofaj'@+',btn_label_align=center,panel=right,align=begin','menu:W')
?};
_LOG.win_act(_ws1,,'Formuła','Parametry zmian'@@,,
   'Przeglądanie parametrów zmian'@,"params_get().TPAR.display()",,,,,,'P');
_LOG.win_act(_ws1,,'Formuła','Zakończ'@@,,,"sel_exit()",,,,,,'Z',0,'target=window');
_LOG.win_btn(_ws1,'text='+'Parametry zmian'@+',btn_label_align=center,panel=bottom,align=begin','menu:P');
_LOG.win_btn(_ws1,'text='+'&Zakończ'@+',btn_label_align=center,panel=bottom,align=end,icon=xwin16.png:23','key:Esc');
_LOG.win_act(_ws1,,'Szukaj');
_LOG.win_act(_ws1,,'Kolejność');

_we1:=_LOG.mk_edit('Pracownik'@);
_LOG.win_esep(_we1,'Dane podstawowe'@);
_LOG.win_efld(_we1,,'T',,,30,,,,,MS.comment(P,'T'));
_LOG.win_efld(_we1,,'IP',,,30,,,,,MS.comment(P,'IP'));
_LOG.win_efld(_we1,,'NAZWISKO',,,30,,,,,MS.comment(OSOBA,'NAZWISKO'));
_LOG.win_efld(_we1,,'PIERWSZE',,,30,,,,,MS.comment(OSOBA,'PIERWSZE'));
_LOG.win_efld(_we1,,'PESEL',,,30,,,,,MS.comment(OSOBA,'PESEL'));
_LOG.win_efld(_we1,,'OK',,,,,,,,'Zmiana została wprowadzona'@,'check-box',,"'T'","'N'");
_LOG.win_ecol(_we1);
_LOG.win_esep(_we1,'Status operacji'@);
_LOG.win_efld(_we1,,'STATUS',,,80,-6,,,1,'Komunikaty z przetwarzania'@);
_LOG.win_edit(_we1);

: Tabela z informacjami o zmienionych polach.  -------------------------------------------------------------------------
_ZMIANA:=tab_tmp(2,
   'H_UM','STRING[16]','Wskazanie modyfikowanej umowy',
   'LP','INTEGER','Lp.',
   'AKRONIM','STRING[8]','Akronim pola'@,
   'NAZWA','STRING[60]','Nazwa pola'@,
   'WB','STRING[255]','Przed zmianą'@,
   'WA','STRING[255]','Po zmianie'@
);
_ws2:=_ZMIANA.mk_sel('Zmienione wartości'@,'P',,,,,,,'U');
_ZMIANA.win_fld(_ws2,,'NAZWA',,,30,,,,,'Nazwa zmienionego pola'@);
_ZMIANA.win_fld(_ws2,,'WB',,,50,,,,,'Wartość pola przed zmianą'@);
_ZMIANA.win_fld(_ws2,,'WA',,,50,,,,,'Wartość pola po zmianie'@);

_we2:=_ZMIANA.mk_edit('Zmieniona wartość'@);
_ZMIANA.win_esep(_we2,'Pole'@);
_ZMIANA.win_efld(_we2,,'AKRONIM',,,60,,,,,'Akronim zmienionego pola'@);
_ZMIANA.win_efld(_we2,,'NAZWA',,,60,,,,,'Nazwa zmienionego pola'@);
_ZMIANA.win_esep(_we2,'Wartość'@);
_ZMIANA.win_efld(_we2,,'WB',,,60,,,,,'Wartość pola przed zmianą'@);
_ZMIANA.win_efld(_we2,,'WA',,,60,,,,,'Wartość pola po zmianie'@);
_ZMIANA.win_edit(_we2);

: Okno grupowe raportu z przetwarzania.  -------------------------------------------------------------------------------
_mode:='maximized_with_title';

_grp:=_LOG.grp_make('Raport z grupowej aktualizacji zatrudnienia'@,,,,,
:  Przed zamknięciem
   "  FUN.ask(
         {? params_get().TPAR.AA=0
         || 'Zamknięcie okna raportu spowoduje utratę możliwości automatycznego wycofania wprowadzonych zmian.\n'
            'Czy na pewno chcesz kontynuować?'@
         || 'Na pewno chcesz zamknąć okno raportu?'@
         ?}
      )
   ",,'html_maximized');

: U góry pracownicy z ogólnym statusem...
_LOG.grp_sel(_grp,,_ws1,,
:  Po odświeżeniu
   "  _par:=params_get();
      params_set(_par);
      _LOG:=_par.LOG;
      _ag:={? _LOG.sel_size() | _LOG.OK='T' || '' || 'W' ?};
      {? _LOG.OK='T'
      || _pos:=exec('h_mod_pos','pracownik',{? _LOG.HA<>'' || _LOG.HA || _LOG.HP ?},_LOG.H_UM);
         {? _pos=0 | _pos=1
         || _ag+='J(A)'
         ?}
      || _ag+='J'
      ?};
      _LOG.actions_grayed(_par.ws1,_ag);
      grp_disp(_par.ZMIANA,_par.ws2,1,1)
   ",,,,,,,,_mode);

: ... na dole zmienione pola wraz z wartościami.
_LOG.grp_splt(_grp,,'horizontal','zmiany',20);
_LOG.grp_sel(_grp,_ZMIANA,_ws2,,"",,,10,
   "  _par:=params_get();
      _par.ZMIANA.prefix(_par.LOG.H_UM,);
      _par.ZMIANA.first()
   ",,,,_mode);

_LOG.win_sel(_grp);

: Przetwarzanie - operacje na brudnopisie.  ----------------------------------------------------------------------------
_TPAR.P180:=-PAR_SKID.get(180)='t';

Cntx.psh(UD_TYP,UD_SKL,H_UM,H,P);
Cntx.clr(UD_TYP,UD_SKL,H_UM,H,P);
exec('otworz_h_um','pracownik',{? _TPAR.P180 || 'h_u_' || 'h_um' ?});
H.use({? _TPAR.P180 || '_his_' || '_hist' ?});
H.index('_HISTKOD');
H.prefix();
P.index('PRACOIP');


_again:=__dane.first();
{!
|? _again
|! {? P.find_key(exec('firma','ustawienia'),__dane.F_ZATRK,__dane.IP)
   || {? ~(_TPAR.P180 | exec('h_um_pull','pracownik',P.ref()))
      || _LOG.blank();
         _LOG.memo_set('Odświeżenie kopii roboczej umów o pracę nie powiodło się.'@,'STATUS');
         _LOG.add() & _LOG.memo_put(,'STATUS')

      || _TPAR.OD:=__dane.OD;
         exec('aktualizuj','!pkd_grp_exim',_TPAR,_LOG,_ZMIANA)
      ?}
   ?};
   _again:=__dane.next()
!};

: Prezentacja raportu.
params_set(
   'TPAR',_TPAR,
   'LOG',_LOG,
   'ws1',_ws1,
   'ZMIANA',_ZMIANA,
   'ws2',_ws2
);
_LOG.select();

Cntx.pop(UD_TYP,UD_SKL,H_UM,H,P);
exec('otworz_h_um','pracownik');

0


\zapisz_ustawienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS: Zapisuje domyślne ustawienia
::   WE: _a [TABELA] - tabela do zapisania
::----------------------------------------------------------------------------------------------------------------------
_a.cntx_psh();
{? _a.first()
|| {!
   |? exec('set','#profile',,'Import przeszeregowań',_a.ID,_a.D+_a.Z);
      _a.next()
   !}
?};
_a.cntx_pop()


\czytaj_ustawienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS: Odczytuje domyślne ustawienia
::   WE: _a [TABELA] - tabela do odczytania
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_a.cntx_psh();
{? _a.first()
|| {!
   |? _war:=exec('get','#profile',,'Import przeszeregowań',_a.ID);
      {? (+_war)=2
      || _a.D:=1+_war;
         _a.Z:=_war+1;
         _a.put()
      ?};
      _a.next()
   !}
?};
_a.cntx_pop()


\aktualizuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS: Główna formuła aktualizacji dla jednego współpracownika.
::   WE: _a - Tabela z parametrami zmian.
::       _b - Tabela statusów.
::       _c - Tabela zmian.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TPAR:=_a;
_LOG:=_b;
_ZMIANA:=_c;

_LOG.blank();

_status:='';
H.prefix(P.ref(),'Z');
_firma:=P.FIRMA;
{? H.find_le(_TPAR.OD) & (H.DO=date(0,0,0) | _TPAR.OD<=H.DO)
|| do();
   _LOG.H_UM:=$H.UMOWA;
   {? (1+H.UMOWA().IDMOD)='D'
:     Zmiana przebiegu dla dołączonej i niezaakceptowanej umowy nie jest możliwa.
   || undo();
      _status+='Nowa umowa oczekuje na akceptację. Zmiany niemożliwe.\n'@

   |? H.OD<_TPAR.OD & (1+H.IDMOD)<>'_'
:     Zmiana dat zmienionego (dołączonego lub poprawionego) aneksu nie jest możliwa.
   || undo();
      _status+='Aneks do umowy (%1 - %2) oczekuje na akceptację. Zmiany niemożliwe.\n'@ [$H.OD,$H.DO]

   |? H.OD=_TPAR.OD & (1+H.IDMOD)<>'_' & ~_TPAR.MODE
   || undo();
      _status+='Aneks do umowy oczekuje na akceptację. Zmiany niemożliwe.\n'@

   || {? _TPAR.P180
:        Jeżeli pracujemy w trybie z "brudnopisem" to zmieniamy maskę na czystopis.
:        Podczas wykonywania formuł, chcemy stać na właściwym, zmienianym rekordzie.
      || H.cntx_psh();
         H.use('_hist');
         H.index('_HISTKOD');
         H.prefix(P.ref(),'Z')
      ?};
      {? ~_TPAR.P180 | (H.find_le(_TPAR.OD) & (H.DO=date(0,0,0) | _TPAR.OD<=H.DO))
:        Jeżeli pracujemy w trybie bez "brudnopisu" to nic nie musimy robić.
:        Jeżeli pracujemy w trybie z "brudnopisem" to właśnie zmieniliśmy maskę i musimy ustawić się na odpowiednim
:        rekordzie. Jeżeli dane są w porządku, to druga część powyższego warunku powinna być spełniona - sprawdziliśmy
:        go w brudnopisie.
      || _Hnew:=exec('H','buffer');
         _Hnew.blank(~~);

:        Zmiana wartości -----------------------------------------------------------------------------------------------

:        Jednostka / stanowisko ----------------------------------------------------------------------------------------
         _name:='Jednostka organizacyjna';
         _val:={? var_pres('WYDZIALS',@.__dane)>0 || __dane.WYDZIALS || ~~ ?};
         {? _val=~~
         || ~~
         |? type_of(_val)=type_of(null())
         || {? _val=null()
            || undo();
               _status+='%1 - wartość pusta.\n'@ [_name]
            |? ref_tab(_val)<>UD_SKL | ~UD_SKL.seek(_val)
            || undo();
               _status+='%1 - niepoprawna wartość [%2].\n'@ [_name,$_val]
            |? _skl_firma:=exec('ud_skl_firma','schemat',UD_SKL.UD_TYP,_firma);
               _skl_firma<>null() & UD_SKL.SCIEZKA<>'' & UD_SKL.SCIEZKA*($_skl_firma+8)=0
            || undo();
               _status+='Element nie jest związany z firmą pracownika.'@
            || _Hnew.WYDZIAL:=_val
            ?}
         |? type_of(_val)=type_of('')
         || _ref:=exec('szukaj_ud_skl','schemat','PODZORG',_val);
::          Formuła powyżej zmienia bufory tabel UD_SKL i UD_TYP.
            {? _ref=null()
            || undo();
               _status+='%1 - niepoprawna wartość [%2].\n'@ [_name,_val]
            |? _skl_firma:=exec('ud_skl_firma','schemat',UD_SKL.UD_TYP,_firma);
               _skl_firma<>null() & UD_SKL.SCIEZKA<>'' & UD_SKL.SCIEZKA*($_skl_firma+8)=0
            || undo();
               _status+='Element nie jest związany z firmą pracownika.'@
            || _Hnew.WYDZIAL:=_ref
            ?}
         || undo();
            _status+='%1 - niepoprawny typ wartości.\n'@ [_name]
         ?};

         _name:='Stanowisko';
         _val:={? var_pres('ST',@.__dane)>0 || __dane.ST || ~~ ?};
         {? _val=~~
         || ~~
         |? type_of(_val)=type_of(null())
         || {? _val=null()
            || undo();
               _status+='%1 - wartość pusta.\n'@ [_name]
            |? ref_tab(_val)<>STN
            || undo();
               _status+='%1 - niepoprawna wartość [%2].\n'@ [_name,$_val]
            || _Hnew.ST:=_val
            ?}
         |? type_of(_val)=type_of('')
         || STN.cntx_psh();
            STN.index('STANONAZ');
            STN.prefix(_val,);
            {? STN.first()
            || _Hnew.ST:=STN.ref()
            || undo();
               _status+='%1 - niepoprawna wartość [%2].\n'@ [_name,_val]
            ?};
            STN.cntx_pop()
         || undo();
            _status+='%1 - niepoprawny typ wartości.\n'@ [_name]
         ?};

:        Charakter / miejsce pracy  ------------------------------------------------------------------------------------
         _name:='Charakter pracy';
         _val:={? var_pres('CP',@.__dane)>0 || __dane.CP || ~~ ?};
         {? _val=~~
         || ~~
         |? type_of(_val)=type_of(null())
         || {? _val=null()
            || undo();
               _status+='%1 - wartość pusta.\n'@ [_name]
            |? ref_tab(_val)<>CP
            || undo();
               _status+='%1 - niepoprawna wartość [%2].\n'@ [_name,$_val]
            || _Hnew.CP:=_val
            ?}
         |? type_of(_val)=type_of('')
         || CP.cntx_psh();
            CP.index('CHARPRAW');
            CP.prefix(_val,);
            {? CP.first()
            || _Hnew.CP:=CP.ref()
            || undo();
               _status+='%1 - niepoprawna wartość [%2].\n'@ [_name,_val]
            ?};
            CP.cntx_pop()
         || undo();
            _status+='%1 - niepoprawny typ wartości.\n'@ [_name]
         ?};

:        Płaca zasadnicza  ---------------------------------------------------------------------------------------------
         _val:={? var_pres('S1',@.__dane)>0 || __dane.S1 || ~~ ?};
         {? _val=~~
         || ~~
         |? type_of(_val)=type_of('')
         || undo();
            _status+='Płaca zasadnicza - %1'@ [(-(1+_val))+(1-_val)]
         || _Hnew.S1:=_val
         ?};

:        Dodatek funkcyjny  --------------------------------------------------------------------------------------------
         _val:={? var_pres('S2',@.__dane)>0 || __dane.S2 || ~~ ?};
         {? _val=~~
         || ~~
         |? type_of(_val)=type_of('')
         || undo();
            _status+='Dodatek funkcyjny - %1'@ [(-(1+_val))+(1-_val)]
         || _Hnew.S2:=_val
         ?};

:        Dodatek  ------------------------------------------------------------------------------------------------------
         _val:={? var_pres('S3',@.__dane)>0 || __dane.S3 || ~~ ?};
         {? _val=~~
         || ~~
         |? type_of(_val)=type_of('')
         || undo();
            _status+='Dodatek - %1'@ [(-(1+_val))+(1-_val)]
         || _Hnew.S3:=_val
         ?};

:        Płaca oddelegowanie  ------------------------------------------------------------------------------------------
         _val:={? var_pres('S4',@.__dane)>0 || __dane.S4 || ~~ ?};
         {? _val=~~
         || ~~
         |? type_of(_val)=type_of('')
         || undo();
            _status+='Płaca oddelegowanie - %1'@ [(-(1+_val))+(1-_val)]
         || _Hnew.S4:=_val
         ?};

:        Wymiar zatrudnienia
         _jest:=0;
         _val:={? var_pres('WYL',@.__dane)>0 || __dane.WYL || ~~ ?};
         {? _val=~~
         || ~~
         |? type_of(_val)=type_of('')
         || undo();
            _status+='Wymiar zatrudnienia - Licznik - %1'@ [(-(1+_val))+(1-_val)]
         || _Hnew.WYL:=_val;
            _Hnew.RWYL:=_val;
            _jest:=1
         ?};
         _val:={? var_pres('WYM',@.__dane)>0 || __dane.WYM || ~~ ?};
         {? _val=~~
         || ~~
         |? type_of(_val)=type_of('')
         || undo();
            _status+='Wymiar zatrudnienia - Mianownik - %1'@ [(-(1+_val))+(1-_val)]
         || _Hnew.WYM:=_val;
            _Hnew.RWYM:=_val;
            _jest:=1
         ?};
         {? _jest
         || _Hnew.RWY:={? _Hnew.RWYM>0 || (_Hnew.RWYL/_Hnew.RWYM)$3 ?};
            {? H.MAC<>'T'
            || _Hnew.WY:=_Hnew.RWY;
               _Hnew.WYM:=_Hnew.RWYM;
               _Hnew.WYL:=_Hnew.RWYL
            || _Hnew.WY:={? _Hnew.WYM>0 || (_Hnew.WYL/_Hnew.WYM)$3 ?}
            ?}
         ?};

:        Koniec zmian wartości  ----------------------------------------------------------------------------------------

         ~~
      || undo();
         _status+='Odnalezienie wiersza źródłowego nie powiodło się.\n'@
      ?};
      {? _TPAR.P180
:        Dla pracy w trybie z "brudnopisem" powrót do maski brudnopisu i wcześniej sprawdzanych rekordów.
      || H.cntx_pop()
      ?};

      {? do_state()<2
:        Wciąż jesteśmy w transakcji ...
      || _LOG.HP:=$H.ref();
:        (zapamiętujemy ref rekordu poprawianego)
         {? H.OD<_TPAR.OD
:           i zmiana wewnątrz istniejącego okresu. Zamknij znaleziony ...
         || _do:=H.DO;
            H.memo_get(,'INNE');
            H.DO:=_TPAR.OD-1;
            {? H.put(1)
:              (po zmianie zapamiętujemy crc rekordu)
            || _LOG.HP_CRC:=H.crc()
            || undo();
               _status+='Zamknięcie okresu nie powiodło się.\n'@
            ?};
:           ... i utwórz nowy.
            H.OD:=_TPAR.OD;
            H.DO:=_do;
            {? ~_TPAR.P180
:              Jeżeli pracujemy bez brudnopisu - wyczyśćmy pole, którego wartość pochodzi z rekordu kopiowanego.
            || H.IDLNK:=''
            ?};
            {? H.add(1) & H.memo_put(,'INNE')
:              Zapamiętujemy ref rekordu dodawanego. CRC zapamiętamy później - po aktualizacji zmienianych pól.
            || _LOG.HA:=$H.ref()
            || undo();
               _status+='Utworzenie nowego zapisu nie powiodło się.\n'@
            ?}
         ?}
      ?};

:     Stoimy na właściwym rekordzie (albo dodanym albo modyfikowanym).

      {? ~_TPAR.PP
      || _Hnew.PRZEDST:=_TPAR.PRZEDST
      ?};
      _for:="
         _Hnew:=_a;
         _ZMIANA:=_b;
         _LOG:=_c;
         _lz:=_d;
         {! _lp:=1 .. H.fld_num()
         |! _acr:=H.fld_acr(_lp);
            {? _e | ',PRZYG,PODPIS,'*(','+_acr+',')
            || _vala:=($('_a.'+_acr))(_Hnew);
               {? _vala<>~~
               || _valb:=($('H.'+_acr))();
                  {? _valb<>_vala
                  || _lz+=1;
                     _vp:=var_pres(_acr,H);
                     _ZMIANA.blank();
                     _ZMIANA.H_UM:=_LOG.H_UM;
                     _ZMIANA.LP:=_lp;
                     _ZMIANA.AKRONIM:=_acr;
                     _ZMIANA.NAZWA:=H.fld_name(_lp);
                     {? _vp=27
:                 Napisy - bez konwersji.
                     || _ZMIANA.WB:=_valb;
                        _ZMIANA.WA:=_vala
                     |? _vp=26
:                 Pole zrelacjonowane.
                     || _ZMIANA.WB:=exec('record','#to_string',_valb);
                        _ZMIANA.WA:=exec('record','#to_string',_vala)
:                 Reszta - standardowa konwersja na napis.
                     || _ZMIANA.WB:=$_valb;
                        _ZMIANA.WA:=$_vala
                     ?};
                     _ZMIANA.add()
                  ?}
               ?}
            ?}
         !};
         _lz
      ";
:     Budujemy tabelę zmian - informacje o zmienionych polach.
      _lz:=0;
      _lz+=_for(_Hnew,_ZMIANA,_LOG,_lz,1);
      {? _lz=0
      || undo();
         _status+='Nie zmieniono żadnej wartości.\n'@
      || {? H.PRZYG<>_TPAR.PRZYG | H.PODPIS<>_TPAR.PODPIS
         || _Hnew.PRZYG:=_TPAR.PRZYG;
            _Hnew.PODPIS:=_TPAR.PODPIS;
            _for(_Hnew,_ZMIANA,_LOG,_lz,0)
         ?}
      ?};

:     Zrzucamy zmienione wartości.
      {? do_state()<2
      || _Hnew.set();
         _ret:=exec('h_p_com_ae','pracownik',1,1,{? _TPAR.P180 || 'POZWORG' || '' ?});
         {? type_of(_ret)=type_of('') & _ret<>''
         || undo();
            _status+=_ret+'\n'
         |? type_of(_ret)=type_of(0) & ~_ret
         || undo();
            _status+='Nowe wartości nie odpowiadają nałożonym warunkom.\n'@
         |? H.put()
         || {? _LOG.HA<>''
:              Jeżeli został dodany rekord to w nim zapisane zostały nowe wartości pól - zapamiętujemy crc tego rekordu.
            || _LOG.HA_CRC:=H.crc()
:              Jeżeli tylko poprawiamy rekord to po zapisaniu w nim nowych wartości pól jego crc zmieniło się -
:              wymaga ponownego zapamiętania.
            || _LOG.HP_CRC:=H.crc()
            ?};
            {? do_state()<2 & _TPAR.AA
:              Dla trybu pracy bez "brudnopisu" pole _TPAR.AA nie jest redagowane - zawsze ma wartość 0.
            || {? _LOG.HA<>''
:                 Jeżeli dodano rekord przebiegu to wycofanie musi dotyczyć umowy.
               || exec('h_um_merge','pracownik',H.UMOWA)
               || exec('h_merge_one','pracownik',0)
               ?}
            ?}
         ?}
      ?}

   ?};
   _LOG.OD:=_TPAR.OD;
   _LOG.OK:={? end() || 'T' || 'N' ?}

|| _status+='Zmiana poza okresem zatrudnienia.\nPracownik zatrudniony od %1 do %2.\n'@ [$P.DZA,$P.DZ]
?};
H.prefix();
_LOG.memo_set(_status,'STATUS');
_LOG.add() & _LOG.memo_put(,'STATUS')


\spr_h_od
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.14]
:: OPIS: Sprawdzenie, czy jest pole data od
::   WY: 1 - jest, 0 - nie ma
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
_parametry:=params_get();
_kol:=_parametry.kol;
_kol.TAB.cntx_psh();
_kol.TAB.index(_kol.NDX.ID);
_kol.TAB.prefix('H.OD',);
_ret:=(_kol.TAB.first() & _kol.TAB.Z='T');
_kol.TAB.cntx_pop();
{? ~_ret || FUN.info('Brak pola %1 tabeli %2.\nEksport przerwano.'@[MS.comment(H,'OD'),H.comment()]) ?};
_ret

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:41 d83ce6e415d4ee69f5ed36a28b789912c935da5d19dcf42c8d6ac9e91a622eac531927327f449d4e3e9346206e9b783cd4c46a053269c6b1be60c87ac3e8406c20d8f1f2f477126e7dc95e294bfa51bbdcd0425fb0635ac5e1875b1cc6f6ab7e1f512f8aa2f0d134ff5d3920b4060830a85c37ea76b78f29875939771d8cf016
