:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_pfpl.fml
:: Utworzony: 12.02.2015
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły czynności ZWS_PAR_PFPL - Rejestracja formuł płacowych.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Rejestracja formuł płacowych - główna formuła czynności.
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);

exec('__RUB','object');

exec('fm','!zws_par_pfpl');
~~


\fm_link
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Łączy formuły firmowe z globalnymi (tylko ustawienie wartości pól bez zapisu danych)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_fm:=0;
_fnl:=FM.FNL;
{? REF.GRUPA<>null & REF.GRUPA<>REF.FIRMA
|| FM.cntx_psh();
   FM.index('FORMULYR');
   FM.prefix(REF.GRUPA);
   {? FM.find_key(FM.TP,FM.R)
   || _fm:=#FM.ref();
      {? FM.FNL='N'
      || _fnl:='N'
      ?}
   ?};
   FM.cntx_pop()
?};
FM.FM:=_fm;
FM.FNL:=_fnl


\fm_text
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Aktualizuje tekst formuły firmowej.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_fm:=exec('fm_fm','rubryki');
{? _fm.FNL='N' | FM.FNL='N'
|| FM.memo_set(_fm.F,'F');
   FM.memo_put(,'F')
?}


\fm_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza "dołącz przed"
::   WE:
::   WY: zgodne ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? FM.FIRMA=null | REF.FIRMA=null
|| return(0)
?};

{? FM.FIRMA=REF.FIRMA
:  dodajemy formułę firmową
:  może istnieć formuła globalna
:  jeśli tak, to łączymy zapisy
|| exec('fm_link','!zws_par_pfpl')
?};

1


\fm_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza "dołącz po"
::   WE: zgodne ze specyfikacją narzędzi
::   WY: zgodne ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};

{? FM.FIRMA=REF.GRUPA
:  dodaliśmy formułę globalną
:  mogą istnieć formuły firmowe
:  jeśli tak, to łączymy zapisy
|| _txt:=FM.memo_txt(,1,'F');
   _fm:=#FM.ref();
   _tp:=FM.TP;
   FM.cntx_psh();
   FM.index('S1');
   FM.prefix(FM.R);
   _loop:=FM.first();
   {!
   |? _loop
   |! {? FM.TP=_tp & FM.FIRMA<>REF.GRUPA
      || FM.FM:=_fm;
         {? ~FM.put()
         || FM.cntx_pop();
            undo();
            return()
         ?}
      ?};
      _loop:=FM.next()
   !};
   FM.cntx_pop()

|? FM.FM<>0
:  dodaliśmy formułę firmową
:  może trzeba aktualizować treść
|| exec('fm_text','!zws_par_pfpl')
?};

~~


\fm_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza "popraw przed"
::   WE:
::   WY: zgodne ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? FM.FIRMA=null | REF.FIRMA=null
|| return(0)
?};

{? FM.FIRMA=REF.FIRMA
:  zmieniamy formułę firmową
:  może istnieć formuła globalna
:  jeśli tak, to łączymy zapisy
|| exec('fm_link','!zws_par_pfpl')

|? FM.FM<>0
:  zmieniliśmy formułę firmową
:  może trzeba aktualizować treść
|| exec('fm_text','!zws_par_pfpl')
?};
1


\fm_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza "popraw po"
::   WE: zgodne ze specyfikacją narzędzi
::   WY: zgodne ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};

{? FM.FIRMA=REF.GRUPA
:  zmieniamy formułę globalną
:  może istnieć konieczność aktualizacji
:  formuł firmowych (przepięcie, nadpisanie)
|| {? FM.R<>bfld('R')
:     odłącz wszystkie formuły firmowe
:     przed zapisem "podepną się" pod inną
   || _fm:=#FM.ref();
      _tp:=FM.TP;
      FM.cntx_psh();
      FM.index('FORMFM');
      FM.prefix();
      {!
      |? FM.find_key(_fm)
      |! FM.FM:=0;
         FM.put()
      !};
      FM.cntx_pop()

   |? FM.FNL<>bfld('FNL') & FM.FNL='N'
   || _fm:=#FM.ref();
      FM.cntx_psh();
      FM.index('FORMFM');
      FM.prefix(_fm);
      _loop:=FM.first();
      {!
      |? _loop
      |! FM.put();
         _loop:=FM.next()
      !};
      FM.cntx_pop()
   ?}
?};
~~


\fm_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza "usuń przed"
::   WE:
::   WY: zgodne ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
FM.cntx_psh();
FM.clear();
FM.f_set(,,'FM.FM=:_a',#FM.ref());
_loop:=FM.f_first();
{!
|? _loop
|! FM.FM:=0;
   FM.put();
   _loop:=FM.next()
!};
FM.f_clear();
FM.cntx_pop();
1


\fm_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza "usuń po"
::   WE: zgodne ze specyfikacją narzędzi
::   WY: zgodne ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};
~~


\fm_memo_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza "popraw przed" notatki
::   WE:
::   WY: zgodne ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\fm_memo_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza "popraw po" notatki
::   WE: zgodne ze specyfikacją narzędzi
::   WY: zgodne ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};

{? FM.FIRMA=REF.GRUPA
|| _txt:=FM.memo_txt(,1,'F');
   _fnl:=FM.FNL;
   FM.cntx_psh();
   FM.index('FORMFM');
   FM.prefix(#FM.ref());
   _loop:=FM.first();
   {!
   |? _loop
   |! {? _fnl='N' | FM.FNL='N'
      || FM.memo_set(_txt,'F');
         FM.memo_put(,'F')
      ?};
      _loop:=FM.next()
   !};
   FM.cntx_pop()
?};
~~


\typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Wartość początkowa pola T (typ) tabeli FM (formuły)
::  OLD: \typ/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.FORMULY


\fm_pop_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Przed popraw okienka tabeli FM
::  OLD: \fm_pop_pr/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_fm:=exec('fm_fm','rubryki');
{? _fm.FNL='N'
|| FUN.info('Formuła całkowicie definiowana przez formułę globalną nie podlega modyfikacji.'@);
   0
|| 1
?}


\fm_red_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Przed redakcją pola tabeli FM
::  OLD: \fm_red_pr/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_fm:=exec('fm_fm','rubryki');
_fld:=cur_afld();

{? _fld='R'
|| ~FM.FM

|? _fld='FNL'
|| {? FM.FM
   || _fm.FNL='T'
   || 1
   ?}

|? _fld='F'
|| FM.FNL='T'

|| 1
?}


\fm_red_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.10]
:: OPIS: Po redakcji pola tabeli FM
::  OLD: \fm_red_po/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();

{? _fld='R'
|| 1

|? _fld='FNL'
|| {? FM.FNL=''
   || FM.FNL:='N'
   ?};
   _fm:=exec('fm_fm','rubryki');
   {? FM.FNL='N' & FM.FM & _fm.OK
   || FM.memo_set(_fm.F,'F')
   ?};
   1

|? _fld='F'
|| _fm:=exec('fm_fm','rubryki');
   {? _fm.OK
   || {? FM.memo_txt(,1,'F')<>_fm.F
      || FM.FNL:='T'
      ?}
   ?}
?};
1


\pob_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Udostępnia do wyboru typ formuł.
::   WE: [_a] [STRING] - Kod formuł, k
::   WY: typ formuł lub pusty ciąg znaków
::  OLD: \pob_typ/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
SLO_KOD.cntx_psh();
_typ:=exec('slo_typ','!zws_par_pfpl');
SLO_KOD.index('KOD');
SLO_KOD.prefix();
SLO_KOD.win_sel('WER');

{? var_pres('_a')=type_of('') & _a<>''
|| SLO_KOD.f_set('SLO_TYP,KOD',,'SLO_TYP=:_a and KOD<>\':_b\'',_typ,_a);
   SLO_KOD.f_first()

|| SLO_KOD.prefix(_typ);
   {? VAR.FORMULY<>''
   || SLO_KOD.find_key(VAR.FORMULY)
   || SLO_KOD.first()
   ?}
?};

_typ:={? SLO_KOD.select(,1) || SLO_KOD.KOD || '' ?};
SLO_KOD.f_clear();

SLO_KOD.cntx_pop();
_typ


\slo_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Uzupełnia zawartość słownika typów formuł
::   WY: wskazanie na typ słownika
::  OLD: \slo_typ/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_uz:=PAR_SKID.get(190);
_typ:=exec('slo_typ','ext_slo','TYP_FORM');
_TYP_FORM:=sql('select distinct FM.TP as KOD from FM');
_loop:=_TYP_FORM.last();
{!
|? _loop
|! _sys:=1;
   _nazwa:=
      {? _TYP_FORM.KOD=%255 || 'formuły wspólne'
      |? _TYP_FORM.KOD='F'  || 'wynagrodzenie godzinowe'
      |? _TYP_FORM.KOD='U'  || 'wynagrodzenie miesięczne'
      |? _TYP_FORM.KOD='S'  || 'formuły dla list sumacyjnych'
      |? _TYP_FORM.KOD='D'  || 'formuły dodatkowe'
      |? _TYP_FORM.KOD='Z'  || 'formuły dla listy typu ZXX'
      |? _TYP_FORM.KOD='W'  || 'formuły do wyrównań'
      |? _TYP_FORM.KOD='P'  || 'korekta podatku'
      |? _TYP_FORM.KOD=_uz  || 'formuły umów cywilnoprawnych'
      || _sys:=0; _TYP_FORM.KOD+' - typ odtworzony'
      ?};
   exec('kod_ref','ext_slo',_typ,_TYP_FORM.KOD,_nazwa,_sys);
   _loop:=_TYP_FORM.prev()
!};
_typ


\fm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Udostępnia do redakcji definicje formuł obliczeniowych.
::   WE: _a [FORMUŁA] - treść formuły na wartość początkową
::  OLD: \fm/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
exec('synch_fm','rubryki');

FM.cntx_psh();
FM.index('FORMLP');
FM.prefix(exec('ref_firma','!zws_par_pfpl'));
FM.win_sel(exec('fm_grp','!zws_par_pfpl','WER'));
FM.select();

FM.cntx_pop()


\fm_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [23.25]
:: OPIS: Tworzy panel konfiguracji formuł obliczeniowych.
::   WE: _a [STRING] - identyfikator okienka formuła
::   WY: akronim okienka
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_wid:=_a;

exec('__FOLP','object');
__FOLP.BUFF.init();
_BUF:=__FOLP.BUFF.BUF;
exec('folp_std_wnd','lista_plac',_BUF);

{? (_wnd:=__WND.SEL.get(FM,'COM'))=''
:: brak tymczasowego okienka składowego
|| _wnd:=exec('fm_wnd','!zws_par_pfpl','COM')
?};

: panel zarządzania
_mode:='maximized';
_grp:=FM.grp_make('Formuły'@,
:  przed wyświetleniem
   "  R.cntx_psh();
      R.win_dict('SLO');
      FM.index('FORMNAZ');
      _slo_typ:=exec('slo_typ','!zws_par_pfpl');
      SLO_KOD.cntx_psh();
      SLO_KOD.index('KOD');
      SLO_KOD.prefix(_slo_typ);
      {? REF.GRUPA=null
      || tab_hide(3,,'bottom')
      ?};
      1
   ",
:  identyfikator, położenie
   __WND.id(FM,_a),,,
:  przy zamknięciu
   "  R.cntx_pop();
      SLO_KOD.cntx_pop();
      FM.fld_fml('FIRMA','BLANK',$'*');
      1
   "
);
: typy formuł
FM.grp_sel(_grp,SLO_KOD,'SLO',,
:  po odświeżeniu
   $( 'VAR.FORMULY:=SLO_KOD.KOD;'
      '_BUF:=__FOLP.BUFF.BUF;'
      'grp_disp(_BUF,_BUF.win_sel(\'?\'),1,1);'
      'grp_disp(FM,\'%1\',1,1)'
      [_wnd]
   ),,,8,,,,,_mode
);
: podziel okno - formuły poniżej listy typów
FM.grp_splt(_grp,,'horizontal','bottom');
: wszystkie
FM.grp_sel(_grp,_BUF,_BUF.win_sel('?'),'Formuły list płac'@,,,,10,
:  przed obsługą
   "  {? grp_empty(SLO_KOD,'SLO')
      || return('#disable')
      ?};
      _obj:=__FOLP.BUFF;
      _fmt:=SLO_KOD.KOD;
      _obj.read_fml(_fmt);
      _obj.fill_buf(_fmt);
      _obj.BUF.prefix(_fmt);
      ~~
   ",,,,_mode
);
: firmowe
FM.grp_sel(_grp,,_wnd,'Formuły lokalne'@,
:  po odświeżeniu
   "  _aid:='';
      {? FM.FM<>0
      || _fm:=exec('fm_fm','rubryki');
         {? _fm.FNL<>'T'
         || _aid:='P'
         ?}
      ?};
      FM.actions_grayed(__WND.SEL.get(FM,'COM'),_aid)
   ",
   ,,10,
:  przed obsługą
   "  FM.fld_fml('FIRMA','BLANK',$'*');
      exec('fm_wnd_bs','!zws_par_pfpl',REF.FIRMA,SLO_KOD.KOD)
   ",,,,_mode
);
: globalne
FM.grp_sel(_grp,,_wnd,'Formuły globalne'@,
:  po odświeżeniu
   "FM.actions_grayed(__WND.SEL.get(FM,'COM'),'')",
   ,,10,
:  przed obsługą
   "  FM.fld_fml('FIRMA','BLANK',$'REF.GRUPA');
      exec('fm_wnd_bs','!zws_par_pfpl',REF.GRUPA,SLO_KOD.KOD)
   ",,,,_mode
);

_grp


\fm_wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Tworzy okienko dla tabeli formuł
::   WE: _a - akronim użytkownika
::  OLD: \fm_wnd/formuly.fml
::  OLD: \leg_fm/menu.fml
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_wid:=_a;

{? (_wnd:=__WND.SEL.get(FM,_wid))<>''
:: okienko już istnieje
|| return(_wnd)
?};

: definicja interfejsu
FM.fld_attr(,2);
_wnd:=FM.mk_sel(,'P',0,'#fm_wnd',,,,,'U','T');
FM.win_fld(_wnd,,'FNL',,,-3,,1,'Lokalna?'@,,'Zmieniona lokalnie'@,2,,"'T'","'N'","''");
FM.win_fld(_wnd,,'R','LP',,-6,,1,'Numer'@,,'Numer składnika'@);
FM.win_fld(_wnd,,'R','RN','RUBKOD',-6,,,'Kod'@,,'Kod składnika'@);
FM.win_fld(_wnd,,'R','RT',,20,,1,'Nazwa'@,,'Nazwa składnika'@);
FM.win_fld(_wnd,,'F',,,43,,,'Formuła'@,,'Treść formuły'@);

_sub:=spli_str('Formuły,Kopiuj,'@,',');
_sub[3]:='%1,%2'[_sub[1],_sub[2]];

_cnd:="exec('mod_fmob','!zws_par_pfpl')";
_chk:="exec('fm_ae','!zws_par_pfpl',0)";
_flt:="FM.f_rfresh()";

: akcje
{! _emp:=0..1
|! FM.win_act(_wnd,_emp,'Dołącz',,,,,_cnd,_emp)
!};
FM.win_act(_wnd,0,'Formuła','Popraw'@@,,,"exec('fm_pop_pr','!zws_par_pfpl')",_cnd,,,,,'P');
FM.win_act(_wnd,0,'Formuła','Usuń'@@,,'Usunięcie bieżącego zapisu'@,,_cnd,,,,,'U');
FM.win_act(_wnd,0,'Formuła','Treść'@@,,,"exec('fm_pop_pr','!zws_par_pfpl')",_cnd,1,,,,'T');
{! _emp:=0..1
|! FM.win_act(_wnd,_emp,'Menu',_sub[1],,,,,,,,,1+_sub[1]);
   FM.win_act(_wnd,_emp,'Menu',_sub[2],_sub[1],,,,,,,,1+_sub[2]);
   FM.win_act(_wnd,_emp,'Formuła','Pojedynczą'@@,_sub[3],,"exec('k_wybfor','!zws_par_pfpl')",_flt,,,,,'P');
   FM.win_act(_wnd,_emp,'Formuła','Wszystkie'@@,_sub[3],,"exec('k_wszfor','!zws_par_pfpl')",_flt,,,,,'W')
!};
FM.win_act(_wnd,0,'Formuła','Wspólne'@@,_sub[1],,_cnd,,,,,,'W');
FM.win_act(_wnd,0,'Szukaj');
FM.win_act(_wnd,0,'Kolejność');
FM.win_act(_wnd,0,'Formuła','Legenda'@@,,,"exec('legenda','color','FM#01')",,,,,,'L',,'target=window');
FM.win_act(_wnd,0,'Wyświetl',,,,"{? FM.memo_get(,'F') || exec('edit_memo_fld','#edit',FM,'F',-1,,,,,80,20) ?}",);
FM.win_act(_wnd,1,'Rekord',,,,,_chk);
FM.win_act(_wnd,0,'Rekord',,,,"exec('rekprzed','color','FM#01#')",_chk);

: przyciski
_exe:=$('FM.win_btn(\'%1\',\'text=%%1\'[_a],\'menu:%%1\'[_b])'[_wnd]);
_exe('&Dołącz'@,'D');
_exe('&Popraw'@,'P');
_exe('&Usuń'@,'U');

__WND.SEL.put(FM,_wid,_wnd);
_wnd


\fm_wnd_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed obsługą okienka formuł.
::   WE: _a [_FIRMA] - wskazanie na firmę
::       _b [STRING] - typ formuł
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_key:=FM.index('?');
FM.index('FORMNAZ');
FM.prefix(_a,_b);
FM.index('FORMLP');
FM.prefix(_a,_b);
FM.index(_key);
FM.prefix(_a,_b)


\fm_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Po redagowaniu rekordu tabeli FM.
::   WE: _a [NUMBER] - Tryb modyfikacji:
::                     0 - Dodawanie [domyślnie].
::                     1 - Poprawianie.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__CHK.table(FM,var_pres('_a')=type_of(0) & _a,,'R')


\mod_fmob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Obsługa wszystkich akcji okna wertowania tabeli FM.
::  OLD: \mod_fmob/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_act:=1+menu_txt();

{? _act='T'
|| {? exec('edit_memo_fld','#edit',FM,'F',,,,,,50,10)
   || FM.memo_put(,'F');
      exec('wspolna','!zws_par_pfpl')
   ?}

|? _act='D'
|| ''

|? _act='P'
|| FM.memo_get(,'F');
   {? FM.edit("exec('fm_ae','!zws_par_pfpl',1)")
::    Ze względu na obsługę synchronizacji formuł globalnych i lokalnych realizowaną przez wyzwalacze istotne jest aby
::    najpierw zapisać treść notatki, a dopiero potem sam rekord.
   || do();
      FM.memo_put(,'F');
      FM.put();
      exec('wspolna','!zws_par_pfpl');
      {? ~end()
      || FUN.emsg('Aktualizacja formuły nie powiodła się.'@)
      ?}
   ?}

|? _act='U'
|| {? exec('del_ask','#table')
   || _msg:='';
      do();
      FM.cntx_psh();
      FM.index('FORMFM');
      FM.prefix(#FM.ref());
      {? FM.first()
      || _msg:='Formuła globalna jest wykorzystywana w co najmniej jednym zestawie lokalnym.\nUsunięcie niemożliwe.'@
      ?};
      FM.cntx_pop();
      {? _msg='' & FM.TP=%255
::       Jeżeli usuwana jest formuła z zestawu "Formuły wspólne", to wszystkie formuły utworzone na podstawie
::       bieżącej zmieniają wartość flagi "Wspólna" z 'T' na 'N'.
      || _firma:=exec('ref_firma','!zws_par_pfpl');
         FM.cntx_psh();
         FM.index('FORMULYW');
         {!
         |? FM.prefix(_firma,'T',R.RN);
            FM.first()
         |! FM.prefix();
            FM.W:='N';
            FM.put()
         !};
         FM.cntx_pop()
      ?};
      {? _msg=''
      || FM.del()
      ?};
      {? end()
      || {? _msg<>''
         || FUN.info(_msg)
         ?}
      || FUN.info('Operacja usunięcia nie powiodła się.'@)
      ?}
   ?}

|? _act='W'
|| {? FM.TP<>%255
   || _do:=0;
      {? FM.W<>'T'
      || FM.cntx_psh();
         FM.index('FORMULYR');
         FM.prefix(exec('ref_firma','!zws_par_pfpl'),%255);
         _do:=
            {? ~FM.find_key(FM.R)
            || FUN.ask('Czy na pewno utworzyć formułę wspólną?'@)
            || FUN.choice(
                  'Proszę wybrać opcję aktualizacji treści formuł.\n\n'
                  'Bieżąca - na podstawie wskazywanej formuły zaktualizowana\n'
                  'będzie odpowiednia formuła wspólna oraz wszystkie formuły,\n'
                  'które są na niej oparte.\n\n'
                  'Wspólna - treść wskazywanej formuły zostanie zaktualizowana\n'
                  'treścią właściwej dla niej formuły wspólnej.\n'@,,
                  'Bieżąca'@,'Wspólna'@
               )
            ?};
         FM.cntx_pop();
         {? ~_do || return() ?}
      ?};
      FM.W:={? FM.W='T' || 'N' || 'T' ?};
      FM.put();
      {? FM.W='T'
      || exec('wspolna','!zws_par_pfpl',_do=2)
      ?}
   || FUN.info('Akcja niedostępna dla formuł wspólnych.'@)
   ?}
?}


\zaznacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Formuła na rekord przed okienka wertowania tabeli formuł obliczeniowych. Zależnie od definicji formuły rekord
::       jest podświetlany kolorem oznaczającym nieprawidłowości lub błędy w definicji formuł.
::  OLD: \zaznacz/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_text:=FM.memo_txt(,1,'F');

{? FM.TP=%255
|| 0

|? _text=''
|| 'FM#01#02'

|? FM.W='T'
|| 'FM#01#01'

|| _base:=exec('tresc','!zws_par_pfpl',_text,1);
   FM.cntx_psh();
   FM.index('FORMNAZ');
   SLO_KOD.cntx_psh();
   _loop:=SLO_KOD.first();
   {!
   |? {? SLO_KOD.KOD<>VAR.FORMULY
      || FM.prefix(exec('ref_firma','!zws_par_pfpl'),SLO_KOD.KOD);
         {? FM.find_key(FM.R().RN)
         || {? _base=exec('tresc','!zws_par_pfpl',,1)
            || FM.cntx_pop();
               SLO_KOD.cntx_pop();
               return('FM#01#03')
            ?}
         ?}
      ?};
      _loop:=SLO_KOD.next()
   !};
   FM.cntx_pop();
   SLO_KOD.cntx_pop();
   0
?}


\wspolna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Obsługa formuły wspólnej.
::   WE: [_a] [NUMBER] -
::  OLD: \wspolna/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')=type_of(0) || _a ?};

_ref:=FM.ref();
_kod:='';

FM.cntx_psh();
{? FM.W='T'
:  aktualizacja formuły wspólnej
|| {? ~_a
   || _kod:=exec('tresc','!zws_par_pfpl')
   ?};
   FM.index('FORMULYR');
   FM.prefix(exec('ref_firma','!zws_par_pfpl'),%255,R.ref());
   {? _a & FM.first()
   || _kod:=exec('tresc','!zws_par_pfpl')
   |? ~FM.first()
   || FM.blank();
      FM.TP:=%255;
      FM.R:=R.ref();
      FM.add()
   ?};
   {? ~_a
   || FM.memo_set(_kod,'F');
      FM.memo_put(,'F')
   ?}

|? FM.TP=%255
|| _kod:=exec('tresc','!zws_par_pfpl')

|| FM.cntx_pop();
   return()
?};


: aktualizacja formuł
FM.index('FORMULYW');
FM.prefix(exec('ref_firma','!zws_par_pfpl'),'T',R.RN);
_loop:=FM.first();
{!
|? _loop
|! {? {? _a
      || _ref=FM.ref()
      || _ref<>FM.ref()
      ?}
   || FM.memo_set(_kod,'F');
      FM.memo_put(,'F')
   ?};
   _loop:=FM.next()
!};

FM.cntx_pop()


\tresc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Funkcja wykorzystywana przy porównywaniu treści formuł obliczeniowych - usuwa z kodu formuły białe znaki
::       (tabulacje, spacje, końce linii)
::   WE: [_a] - treść formuły
::       [_b] - usuwać białe znaki
::       [_c] - wskazanie na rekord FM
::   WY: kod "oczyszczony" z białych znaków
::  OLD: \tresc/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_kod:='';
{? var_pres('_a')=type_of('')
|| _kod:=_a
|| {? (var_pres('_c')=type_of(null) | var_pres('_c')=type_of(0)) & _c
   || FM.cntx_psh();
      FM.prefix();
      {? {? var_pres('_c')=type_of(0)
         || FM.seek(_c,FM.name())
         || FM.seek(_c)
         ?}
      || _kod:=FM.memo_txt(,1,'F')
      ?};
      FM.cntx_pop()
   || _kod:=FM.memo_txt(,1,'F')
   ?}
?};
{? var_pres('_b')=type_of(0) & _b
|| _kod:=gsub(_kod,'\n','');
   _kod:=gsub(_kod,'\t','');
   gsub(_kod,' ','')
?};
_kod


\k_wszfor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Kopiuje treści wszystkich formuł obliczeniowych listy płac wybranego typu do zestawu aktualnie edytowanego.
::  OLD: \k_wszfor/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_typ:=exec('pob_typ','!zws_par_pfpl',SLO_KOD.KOD))<>''
|| R.cntx_psh();
   R.index('RUBKOD');
   R.clear();
   R.first();
   FM.cntx_psh();
   FM.index('FORMULYR');
   FM.prefix(exec('ref_firma','!zws_par_pfpl'));
   {!
   |? {? FM.find_key(_typ,R.ref())
      || echo('Trwa kopiowanie formuł...'@,'Rubryka: %1'@[$R.RN]);
         _com:={? _typ=%255 || 'T' || FM.W ?};
         _fml:=FM.memo_txt(,1,'F');
         {? ~FM.find_key(VAR.FORMULY,R.ref())
         || FM.TP:=VAR.FORMULY;
            FM.R:=R.ref();
            FM.W:=_com;
            FM.add()
         |? FM.W<>_com
         || FM.W:=_com;
            FM.put()
         ?};
         FM.memo_set(_fml,'F');
         FM.memo_put(,'F')
      ?};
      R.next()
   !};
   FM.cntx_pop();
   R.cntx_pop();
   1
?}


\k_wybfor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Kopiuje treść wybranej formuły określonego typu jako treść bieżącej formuły. Jeśli formuła aktualnie
::       edytowanego typu dla wybranego składnika nie istnieje, zostanie automatycznie utworzona.
::   WY: Efekt kopiowania formuły:
::          0 - niepowodzenie,
::          1 - sukces
::  OLD: \k_wybfor/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
{? (_typ:=exec('pob_typ','!zws_par_pfpl',SLO_KOD.KOD))<>''
|| _firma:=exec('ref_firma','!zws_par_pfpl');
   R.cntx_psh();
   R.index('RUBKOD');
   R.win_sel('WYB');
   R.clear();
   FM.cntx_psh();
   FM.index('FORMULYR');
   FM.prefix(_firma);
   R.f_set('RN',,'"R".REFERENCE in (select FM.R from FM where FM.FIRMA=:_a and FM.TP=\':_b\')',_firma,_typ);
   {? R.select(,1) & FM.find_key(_typ,R.ref())
   || _fml:=FM.memo_txt(,1,'F');
      _com:={? _typ=%255 || 'T' || FM.W ?};
      {? ~FM.find_key(VAR.FORMULY,R.ref())
      || FM.R:=R.ref();
         FM.TP:=VAR.FORMULY;
         FM.W:=_com;
         FM.add()
      |? FM.W<>_com
      || FM.W:=_com;
         FM.put()
      ?};
      FM.memo_set(_fml,'F');
      _res:=FM.memo_put(,'F')
   ?};
   FM.cntx_pop();
   R.f_clear();
   R.cntx_pop()
?};
_res


\zapisz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Zapisuje treść wszystkich formuł obliczeniowych do pliku tekstowego. Plik o nazwie formuly?.txt (gdzie ? jest
::       oznaczeniem typu formuł) zapisywany jest zgodnie ze schematem
::       #nr#
::       <treść formuły>
::       gdzie nr jest kodem składnika listy plac a <treść formuły> definicja formuły wyliczającej jego wartość
::  OLD: \zapisz/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_typ:=
   {? var_pres('_a')<>type_of('') | _a=''
   || exec('pob_typ','!zws_par_pfpl')
   || 1+~(-_a)
   ?};
{? _typ=''
|| return()
?};

_fn:=exec('arch_name','!zws_par_pfpl',_typ);
_fh:=fopen(_fn,'w',1);
{? _fh<=0
|| _nfo:='Błąd otwarcia pliku archiwum formuł "%1."'@[_fn];
   _rep(_nfo);
   return(_nfo)
?};

FM.cntx_psh();
FM.index('FORMNAZ');
FM.prefix(exec('ref_firma','!zws_par_pfpl'),_typ);
{? FM.first()
|| {!
   |? fwrite(_fh,'#%1#%2'[$FM.R().RN,FM.W]);
      fwrite(_fh,exec('tresc','!zws_par_pfpl'));
      FM.next()
   !};
   FUN.info(
      {? _typ=%255
      || 'Formuły "wspólne" zapisano w pliku "%1".'@[_fn]
      || 'Formuły typu "%2" zapisano w pliku "%1".'@[_fn,_typ]
      ?}
   )
|| FUN.info('Brak formuł typu "%1".'@[_typ])
?};
FM.cntx_pop();

fclose(_fh)


\czytaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Funkcja wczytuje definicje formuł obliczeniowych list płac z pliku tekstowego. Plik o nazwie formuly?.txt
::       (gdzie ? jest oznaczeniem typu formuł) musi być zapisany zgodnie ze schematem opisanym dla funkcji zapisz.
::   WE: _a - typ formuł
::       _b - włączenie wyswietlania komunikatow (opcjonalny), różny od 0 włączone, wpp wyłączone
::  OLD: \czytaj/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_msg:=(var_pres('_b')=type_of(0) & _b);
_rep:={? _msg || "FUN.emsg(_a)" || "" ?};
_nfo:='';

_typ:=
   {? var_pres('_a')<>type_of('') | _a=''
   || exec('pob_typ','!zws_par_pfpl')
   || 1+~(-_a)
   ?};
{? _typ=''
|| return()
?};

_fn:=exec('arch_name','!zws_par_pfpl',_typ);
_fh:=fopen(_fn,'r',1);
{? _fh<=0
|| _nfo:='Błąd otwarcia pliku archiwum formuł "%1."'@[_fn];
   _rep(_nfo);
   return(_nfo)
?};

R.cntx_psh();
R.index('RUBKOD');
R.prefix();
FM.cntx_psh();
FM.index('FORMNAZ');
FM.prefix(exec('ref_firma','!zws_par_pfpl'),_typ);

_rn:=0;
_tresc:='';
_do_exit:="undo(); end(); R.cntx_pop(); FM.cntx_pop(); fclose(_a)";
_save:="FM.memo_set(form(_a),'F'); FM.memo_put(,'F'); exec('wspolna','!zws_par_pfpl',,FM)";
_blad:=0;

do();
{? FM.first()
|| {!
   |? FM.del()
   !}
?};
{!
|? (_line:=fread(_fh))<>'\n'
|! {? 1+_line='#' & (_line+1='#' | (_line-1)+1='#')
   || {? _rn>0
      || _save(_tresc)
      ?};
      _rn:=#(((1-_line)*'#'-1)+(1-_line));
      {? ~_rn
      || _do_exit(_fh);
         _nfo:='Błąd w strukturze pliku "%1".'@[_fn];
         _rep(_nfo);
         return(_nfo)
      ?};
      {? R.find_key(_rn)
      || echo(R.RT);
         {? ~FM.find_key(_rn)
         || FM.blank();
            FM.TP:=_typ;
            FM.R:=R.ref();
            FM.W:={? _line+1='T' || 'T' || 'N' ?};
            FM.add();
            _tresc:=''
         ?};
         {? _blad=1
         || _blad:=0
         ?}
      || _nfo:='Brak rubryki o kodzie %1.'@[$_rn];
         {? _msg
         || {? _blad<>2 & ~(_blad:=FUN.ask(_nfo+'\nCzy kontynuować działanie?'))
            || _do_exit(_fh);
               return(_nfo)
            ?};
            _rn:=-_rn
         || _do_exit(_fh);
            _rep(_nfo);
            return(_nfo)
         ?}
      ?}
   |? _rn>0
   || _tresc+=_line+'\n'
   ?}
!};
{? _rn>0
|| _save(_tresc)
?};
end();

R.cntx_pop();
FM.cntx_pop();

fclose(_fh);
echo();
''


\w_arch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Zapis danych do archiwum formuł obliczeniowych
::  OLD: \w_arch/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_typ:=VAR.FORMULY;
_fname:=exec('arch_name','!zws_par_pfpl',_typ);

FUN.info('Funkcja spowoduje nieodwracalną zmianę zawartości archiwum "%1".'@[_fname]);

{? FUN.ask(
      {? _typ=%255
      || 'Formuły wspólne, plik "%1".\nCzy kontynuować działanie?'@[_fname]
      || 'Formuły typu "%2", plik "%1".\nCzy kontynuować działanie?'@[_fname,_typ]
      ?}
   )
|| exec('zapisz','!zws_par_pfpl',_typ)
?}


\z_arch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Odczyt danych z archiwum formuł obliczeniowych
::  OLD: \z_arch/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_typ:=VAR.FORMULY;
_fname:=exec('arch_name','!zws_par_pfpl',_typ);

FUN.info(
   {? _typ=%255
   || 'Funkcja spowoduje nieodwracalną zmianę formuł wspólnych typu "%1".'@[_typ]
   || 'Funkcja spowoduje nieodwracalną zmianę formuł obliczeniowych typu "%1".'@[_typ]
   ?}
);

{? FUN.ask(
      {? _typ=%255
      || 'Formuły wspólne, plik "%1".\nCzy kontynuować działanie?'@[_fname]
      || 'Formuły typu "%2", plik "%1".\nCzy kontynuować działanie?'@[_fname,_typ]
      ?}
   )
|| exec('czytaj','!zws_par_pfpl',_typ,1)
?}


\arch_name
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Zwraca nazwę pliku zawierającego treści formuł.
::   WE: _a - typ formuł
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? (_sym:=exec('sym_firma','!zws_par_pfpl'))<>''
|| _sym:='___'
?};

'%1%2_%3.dfg'[FM.name(),-{? _a=%255 || '' || _a ?},_sym]


\ref_firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Zwraca wskazanie firmy, dla której przeglądana jest tabela FM
::   WE:
::   WY: wskazanie firmy
::----------------------------------------------------------------------------------------------------------------------
FM.fld_fml('FIRMA','*BLANK')()


\sym_firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [23.25]
:: OPIS: Zwraca symbol firmy, dla której przeglądana jest tabela FM.
::   WE:
::   WY: symbol firmy lub pusty ciąg znaków
::----------------------------------------------------------------------------------------------------------------------
_sym:='';
_ref:=exec('ref_firma','!zws_par_pfpl');
FIRMA.cntx_psh();
{? _ref<>null
|| {? FIRMA.seek(_ref,,1)
   || _sym:=FIRMA.SYMBOL
   || FUN.emsg(exec('err_rec_acc','#message',_ref))
   ?}
?};
FIRMA.cntx_pop();
_sym

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 697269949588df42a355529022db118ededf95e0a33bcd32fb31eb941a6f4e8d4982a0aae2adf7baf005afa63548750c8ce790e953e4a975a362a700733b41e4d90cc38c601dac3944468edc108c153f1ed0b97351bb2df921f18ee4bbe205062de1c22ca473513a44a889e7f3c36e799b230f4f5c8ce7cde2f48b45ab355ff9
