:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_ezk_ezla.fml
:: Utworzony: 01.10.2021
:: Autor: DG
::======================================================================================================================
:: Zawartość: Obsługa czynności PKD_EZK_EZLA - Import zwolnień lekarskich e-ZLA z PUE.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Import zwolnień lekarskich e-ZLA z PUE - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# properties=SERVICE
::# permissions=F_ZATR,UD_SKL
::
:: Parametry wejściowe
::
::----------------------------------------------------------------------------------------------------------------------
:: Parametry wyjściowe.
::# kind=WY, symbol=SUBE, type=STRING, name=Temat (błędy), required=N
::# kind=WY, symbol=SUBS, type=STRING, name=Temat (sukces), required=N
::# kind=WY, symbol=RCV, type=MEMO, name=Lista odbiorców, required=N
::# kind=WY, symbol=BODYHE, type=MEMO, name=Treść w formacie HTML (błędy), required=N
::# kind=WY, symbol=BODYHS, type=MEMO, name=Treść w formacie HTML (sukces), required=N
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_mp:=_par.mp;
_in:=_par.in;
_out:=_par.out;
_service:=_mp.isService();

_out.SUBE:='Powiadomienie o błędach podczas importu zwolnień lekarskich e-ZLA z PUE';
_out.SUBS:='Powiadomienie o zaimportowanych zwolnieniach lekarskich e-ZLA z PUE';
_ret:=exec('run','!pkd_ezk_ezla');
_out.RCV:=_ret.RCV;
_out.BODYHE:=_ret.BODYHE;
_out.BODYHS:=_ret.BODYHS;

_mp.save(,_out);
_mp.done();

~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Import zwolnień lekarskich e-ZLA z PUE - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Import zwolnień lekarskich e-ZLA z PUE'@@


\run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Import zwolnień lekarskich e-ZLA z PUE
::   WE: [_a][STRING] - parametr (log,noCRL)
::   WY:
::  OLD: \imp_zPUE/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
_param:={? var_pres('_a')=type_of('') || {? 1+_a=',' || '' || ',' ?}+_a+{? _a+1=',' || '' || ',' ?} || '' ?};

params_set(_par:=params_get());
_mp:=_par.mp;
_in:=_par.in;
_out:=_par.out;

:: włączanie logowania, wyłączenie sprawdzania listy CRL (przy proxy)
::TODO
_log:=(_param*',log,');
_noCRL:=(_param*',noCRL,');

:: odczytanie wartości stałych systemu
exec('czytaj','#stalesys',date(),KST_PAR,'EZLAMAIL','EZLAPASS','EZLAPZIP','EZLADAKT');
exec('czytaj','#stalesys',date(),KST,'NIP');

:: ustawienie daty - zostaną pobrane raporty z PUE ZUS wygenerowane po tej dacie
:: (na PUE ZUS wygenerowany raport jest przechowywany przez 30 dni, potem sa usuwane)
_dt:={? KST_PAR.EZLADAKT=date(0,0,0) | KST_PAR.EZLADAKT<(date()-30) || date()-30 || KST_PAR.EZLADAKT+1 ?};

:: powołanie obiektu na komunikaty z przebiegu importu plików CSV (utworzonych z pobranych w usłudze raportów e-ZLA)
exec('dekl_rapls','lista_plac');
{? var_pres('RAPLS')<>type_of(@.CLASS.RAPLS)
|| RAPLS:=obj_new(@.CLASS.RAPLS)
?};
RAPLS.ustaw(2);

:: tabela na komunikaty z przebiegu przetwarzania zadania
{? var_pres('__ERR')>100 || obj_del(__ERR) ?};
__ERR:=tab_tmp(1,
   'CODE',     'INTEGER',     'Kod',
   'MESS',     'STRING[200]', 'Komunikat',
   'COMB',     'INTEGER',     'Kod błędu',
   'FLOG',     'STRING[40]',  'Plik logu/zip/xml',
   'D_RAP',    'DATE',        'Data raportu',
   'T_RAP',    'STRING[40]',  'Typ raportu',
   'Z_RAP',    'STRING[100]', 'Zakres raportu',
   'X_RAP',    'STRING[10]',  'Dołączono dokumenty XML?',
   'L_RAP',    'INTEGER',     'Liczba dokumentów e-ZLA');

:: tabela na listę zaimportowanych i pominiętych wierszy z plików CSV przy imporcie do tabeli NEZLA
{? var_pres('__LST_E')>100 || obj_del(__LST_E) ?};
__LST_E:=tab_tmp(3,
   'DT_GEN',   'DATE',        'Data raportu',
   'STATUS',   'INTEGER',     'Status',
   'EZLA',     'STRING[15]',  'Seria i numer',
   'PRAC',     'STRING[52]',  'Pracownik',
   'PESEL',    'STRING[11]',  'PESEL',
   'OD',       'DATE',        'Od dnia',
   'DO',       'DATE',        'Do dnia',
   'SZP_OD',   'DATE',        'Szpital od dnia',
   'SZP_DO',   'DATE',        'Szpital do dnia',
   'ST_ZAS',   'STRING[50]',  'Status zaświadczenia');

:: tabela na komunikaty z przebiegu importu z plików CSV do tabeli NEZLA
{? var_pres('__IEZLA')>100 || obj_del(__IEZLA) ?};
__IEZLA:=tab_tmp(4,
   'DT_GEN',   'DATE',        'Data raportu',
   'NAZWISKO', 'STRING[30]',  'Nazwisko',
   'IMIE',     'STRING[20]',  'Imię',
   'T',        'STRING[11]',  'Nr teczki/PESEL',
   'KOM',      'STRING[255]', 'Treść komunikatu');

:: pomocnicza tabela na listę pobranych w usłudze raportów e-ZLA
{? var_pres('__RAP')>100 || obj_del(__RAP) ?};
__RAP:=tab_tmp(1,
   'DT_GEN',   'DATE',        'Data wygenerowania',
   'BASE64',   'STRING[16]',  'Wskazanie na raport w BASE64',
   'RAPORT',   'INTEGER',     'Węzeł <raport>',
   'ZIP',      'STRING[40]',  'Plik ZIP');
__ndxDT:=__RAP.ndx_tmp(,1,'DT_GEN',,);
__ndxRP:=__RAP.ndx_tmp(,1,'RAPORT',,);

{? do_state()=0 || _do:=0; _no_msg:=no_msg(1) || _do:=1 ?};

:: Przygotowanie zapytania do PUE
_request:=exec('ezla_request','!pkd_ezk_ezla',_dt);

:: Główny mechanizm pobierający informacje z PUE
exec('ezla_run','!pkd_ezk_ezla',_request,_dt,_log,_noCRL);

{? _do=0 || no_msg(_no_msg) ?};

:: wysyłanie wiadomości o przebiegu przetwarzania
:TODO - do zmiany
::{? __ERR.first()
::|| exec('add_eml','skid_eml','EZLA_IMP')
::?};

:: wysyłanie wiadomości o przebiegu importu z CSV do tabeli NEZLA
:TODO - do zmiany
::__RAP.index(__ndxDT);
::__RAP.prefix();
::{? __RAP.first()
::|| {!
::   |? _ok:=0;
::      __IEZLA.prefix(__RAP.DT_GEN); _ok:=__IEZLA.first();
::      __LST_E.prefix(__RAP.DT_GEN); _ok+=__LST_E.first();
::      {? _ok || exec('add_eml','skid_eml','EZLA_CSV') ?};
::      __RAP.next()
::   !}
::?};

:: PRzygotowanie wiadomości o przebiegu importu e-ZLA z PUE ZUS do tabeli NEZLA
_ret:=obj_new('RCV','BODYHE','BODYHS');
_ret.RCV:=_ret.BODYHE:=_ret.BODYHS:='';

_p286:=exec('get_par','#parametr',286)='T';
_p287:=exec('get_par','#parametr',287)='T';

:: Wyszukujemy odbiorców wiadomości na podstawie uprawnień do czynności
{? _p286 | _p287 || _ret.RCV:=exec('emls_w_perm','personel_alerty',_mp.buf_act.UID) ?};
{? _p286         || _ret.BODYHE:=exec('email_body','!pkd_ezk_ezla',0) ?};
{? _p287         || _ret.BODYHS:=exec('email_body','!pkd_ezk_ezla',1) ?};

:: Porządki
RAPLS.ustaw(0);
__RAP.ndx_drop(__ndxDT); &__ndxDT;
__RAP.ndx_drop(__ndxRP); &__ndxRP;
obj_del(__RAP); &__RAP;
obj_del(__ERR); &__ERR;
obj_del(__IEZLA); &__IEZLA;
obj_del(__LST_E); &__LST_E;

_ret


\xml2csv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Formula na podstawie pliku XML (parametr _a = uchwyt do raport.xml) tworzy na ścieżce (parametr _b) plik CSV
::       (raport.csv) o strukturze zgodnej ze strukturą plików CSV eksportowanych z PUE ZUS
::   WE: _a [FILE] - uchwyt do pliku raport.xml
::       _b [STRING] - katalog z raport.xml (i ew. dokumentami e-ZLA z podpisami)
::   WY: _wyn - tablica z informacją: status oraz info nt. raportu (typ, liczba dokumentów e-ZLA, itp.)
::  OLD: \xml2csv/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
_zn:=exec('sep','#file');
_wyn:=exec('res_xml2csv','!pkd_ezk_ezla');

{? var_pres('_a')>100                                          || _fxml:=_a || return(_wyn) ?};
{? var_pres('_b')=type_of('') & fexists(_b+_zn+'raport.xml',0) || _uzip:=_b || return(_wyn) ?};

:: ścieżka do pliku raport.csv
_fcsv:=_uzip+_zn+'raport.csv';

:: tabela na dane z raport.xml
_tCSV:=sql('select * from NEZLA where 1=2 order by 2,1,3');

_Helper:=json_parse('
   {
      "tabXML": null,
      "Obj": {
         "typRap": "",
         "zakresD": "",
         "dDokXml": "",
         "lDokEzla": "",
         "identTyp": "",
         "identWar": "",
         "dataUr": "",
         "dataWyst": "",
         "okresZOd": "",
         "okresZDo": "",
         "okrWSzOd": "",
         "okrWSzDo": "",
         "dataUrOs": "",
         "nip": ""
      },
      "path": null,
      "xml2dt": null
   }
');

_Helper.tabXML:=_tCSV;
_Helper.path:=
"  _path:='';
   {! _i:=0..xml_path('depth') - 1
   |! _path+='%1|'[xml_path('name', _i)]
   !};
   return(_path)
";
_Helper.xml2dt:=
"  _xml:={? var_pres('_a')=type_of('') || 10+_a || '' ?};
   _dt:={? _xml<>''
        || _r:=#(4+_xml); {? _r<0 || _r:=0 ?};
           _m:=#(2+(5-_xml)); {? _m<1 | _m>12 || _m:=0 ?};
           _d:=#(_xml+2); {? _d<1 | _d>31 || 0 ?};
           date(_r,_m,_d)
        || date(0,0,0)
        ?};
   return(_dt)
";
params_set(_Helper);

_res:=x_parse(_fxml,,,
:: start element
  "_Helper:=params_get();
   {? _Helper.path()='dokumentyEzla|raportEzla|'
   || _Helper.tabXML.blank();
      _Helper.Obj.identTyp:='';
      _Helper.Obj.identWar:='';
      _Helper.Obj.okresZOd:='';
      _Helper.Obj.okresZDo:='';
      _Helper.Obj.okrWSzOd:='';
      _Helper.Obj.okrWSzDo:='';
      _Helper.Obj.dataUrOs:='';
      _Helper.Obj.dataWyst:=''
   ?};
   return
  ",
:: end element
  "_Helper:=params_get();
   {? _Helper.path()='dokumentyEzla|raportEzla|'
   || {? _Helper.Obj.identTyp='PESEL'
      || _Helper.tabXML.PESEL:=_Helper.Obj.identWar
      || _Helper.tabXML.UR_DATA:=_Helper.xml2dt(_Helper.Obj.dataUr);
         _Helper.tabXML.PASZPORT:=_Helper.Obj.identWar
      ?};
      _Helper.tabXML.OD:=_Helper.xml2dt(_Helper.Obj.okresZOd);
      _Helper.tabXML.DO:=_Helper.xml2dt(_Helper.Obj.okresZDo);
      _Helper.tabXML.SZP_OD:=_Helper.xml2dt(_Helper.Obj.okrWSzOd);
      _Helper.tabXML.SZP_DO:=_Helper.xml2dt(_Helper.Obj.okrWSzDo);
      _Helper.tabXML.R_DA:=_Helper.xml2dt(_Helper.Obj.dataUrOs);
      _Helper.tabXML.D_WYST:=_Helper.xml2dt(_Helper.Obj.dataWyst);
      _Helper.tabXML.ZAKL_ID:=_Helper.Obj.nip;
      _Helper.tabXML.add()
   ?};
   return
  ",
:: text
  "_Helper:=params_get();
   {? _Helper.path()='nip|platnik|daneRaportu|raportEzla|'
   || _Helper.Obj.nip+=_a
   |? _Helper.path()='typRaportu|daneRaportu|raportEzla|'
   || _Helper.Obj.typRap+=_a
   |? _Helper.path()='zakresDokumentow|daneRaportu|raportEzla|'
   || _Helper.Obj.zakresD+=_a
   |? _Helper.path()='dolaczDokumentyXml|daneRaportu|raportEzla|'
   || _Helper.Obj.dDokXml+=_a
   |? _Helper.path()='liczbaDokumentowEzla|daneRaportu|raportEzla|'
   || _Helper.Obj.lDokEzla+=_a
   |? _Helper.path()='typ|identyfikator|daneUbezpieczonego|dokumentyEzla|raportEzla|'
   || _Helper.Obj.identTyp+=_a
   |? _Helper.path()='wartosc|identyfikator|daneUbezpieczonego|dokumentyEzla|raportEzla|'
   || _Helper.Obj.identWar+=_a
   |? _Helper.path()='imie|daneUbezpieczonego|dokumentyEzla|raportEzla|'
   || _Helper.tabXML.PIERWSZE+=_a
   |? _Helper.path()='nazwisko|daneUbezpieczonego|dokumentyEzla|raportEzla|'
   || _Helper.tabXML.NAZWISKO+=_a
   |? _Helper.path()='dataUrodzenia|daneUbezpieczonego|dokumentyEzla|raportEzla|'
   || _Helper.Obj.dataUr+=_a
   |? _Helper.path()='seria|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.tabXML.SERIA+=_a
   |? _Helper.path()='status|daneDokumentu|dokumentyEzla|raportEzla|' & var_pres('ST_ZAS',NEZLA)>0
   || _Helper.tabXML.ST_ZAS+=_a
   |? _Helper.path()='numer|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.tabXML.NUMER+=_a
   |? _Helper.path()='dataWystawienia|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.Obj.dataWyst+=_a
   |? _Helper.path()='dataOd|okresZwolnienia|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.Obj.okresZOd+=_a
   |? _Helper.path()='dataDo|okresZwolnienia|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.Obj.okresZDo+=_a
   |? _Helper.path()='dataOd|okresWSzpitalu|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.Obj.okrWSzOd+=_a
   |? _Helper.path()='dataDo|okresWSzpitalu|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.Obj.okrWSzDo+=_a
   |? _Helper.path()='kodChorobyA|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.tabXML.KODY+=_a
   |? _Helper.path()='kodChorobyB|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.tabXML.KODY+=_a
   |? _Helper.path()='kodChorobyC|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.tabXML.KODY+=_a
   |? _Helper.path()='kodChorobyD|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.tabXML.KODY+=_a
   |? _Helper.path()='kodChorobyE|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.tabXML.KODY+=_a
   |? _Helper.path()='wskazaniaLekarskie|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.tabXML.LEK_WSK+=_a
   |? _Helper.path()='miejsceUbezpieczenia|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.tabXML.UB_W+=_a
   |? _Helper.path()='kodPokrewienstwa|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.tabXML.R_STPK+=_a
   |? _Helper.path()='dataUrodzeniaOsoby|daneDokumentu|dokumentyEzla|raportEzla|'
   || _Helper.Obj.dataUrOs+=_a
   ?};
   return
  "
);

{? _res>0
|| _wyn.RAPORT.TYP:=_Helper.Obj.typRap;
   _wyn.RAPORT.ZAKRES:=_Helper.Obj.zakresD;
   _wyn.RAPORT.LICZBA:=#_Helper.Obj.lDokEzla;
   _wyn.RAPORT.DOKXML:={? _Helper.Obj.dDokXml='true' || 1 || 0 ?};

   {? _wyn.RAPORT.LICZBA
   || _dt2csv:="{? _a=date(0,0,0) || '' || form(_a~1,-4,0,'9')+'-'+form(_a~2,-2)+'-'+form(_a~3,-2) ?}";
      _fname:="
         _nazwa:=~~;
         {! _ind:=1.. NEZLA.fld_num()
         |? _nazwa=~~
         |! {? NEZLA.fld_acr(_ind)=_a || _nazwa:=NEZLA.fld_name(_ind) ?}
         !};
         _nazwa";
      _sep:=',';

      _csv:=fopen(_fcsv,'Uw',0,1,1);
      {? _csv.is_open() & _tCSV.first()
      || _line:=
            _fname('SERIA')+_sep+_fname('NUMER')+_sep+_fname('PESEL')+_sep+_fname('PIERWSZE')+_sep+
            _fname('NAZWISKO')+_sep+_fname('UB_W')+_sep+_fname('PASZPORT')+_sep+_fname('UR_DATA')+_sep+_fname('KOD')+
            _sep+_fname('MIASTO')+_sep+_fname('ULICA')+_sep+_fname('DOM')+_sep+_fname('LOKAL')+_sep+_fname('OD')+_sep+
            _fname('DO')+_sep+_fname('SZP_OD')+_sep+_fname('SZP_DO')+_sep+_fname('LEK_WSK')+_sep+_fname('KODY')+_sep+
            _fname('NUM_STAT')+_sep+_fname('R_STPK')+_sep+_fname('R_DA')+_sep+_fname('ZAKL_RID')+_sep+_fname('ZAKL_ID')+
            _sep+_fname('ZAKL_N')+_sep+_fname('Z_KOD')+_sep+_fname('Z_MIASTO')+_sep+_fname('Z_ULICA')+_sep+
            _fname('Z_DOM')+_sep+_fname('Z_LOKAL')+_sep+_fname('LEK_ID')+_sep+_fname('LEK_IM')+_sep+
            _fname('LEK_NAZ')+_sep+_fname('D_WYST')+_sep+_fname('ST_ZAS');
         _csv.fwrite(_line);
         {!
         |? _line:=
               _tCSV.SERIA+_sep+_tCSV.NUMER+_sep+_tCSV.PESEL+_sep+_tCSV.PIERWSZE+_sep+_tCSV.NAZWISKO+_sep+
               _tCSV.UB_W+_sep+_tCSV.PASZPORT+_sep+_dt2csv(_tCSV.UR_DATA)+_sep+_tCSV.KOD+_sep+_tCSV.MIASTO+_sep+
               _tCSV.ULICA+_sep+_tCSV.DOM+_sep+_tCSV.LOKAL+_sep+_dt2csv(_tCSV.OD)+_sep+_dt2csv(_tCSV.DO)+_sep+
               _dt2csv(_tCSV.SZP_OD)+_sep+_dt2csv(_tCSV.SZP_DO)+_sep+_tCSV.LEK_WSK+_sep+_tCSV.KODY+_sep+
               _tCSV.NUM_STAT+_sep+_tCSV.R_STPK+_sep+_dt2csv(_tCSV.R_DA)+_sep+_tCSV.ZAKL_RID+_sep+_tCSV.ZAKL_ID+_sep+
               _tCSV.ZAKL_N+_sep+_tCSV.Z_KOD+_sep+_tCSV.Z_MIASTO+_sep+_tCSV.Z_ULICA+_sep+_tCSV.Z_DOM+_sep+
               _tCSV.Z_LOKAL+_sep+_tCSV.LEK_ID+_sep+_tCSV.LEK_IM+_sep+_tCSV.LEK_NAZ+_sep+_dt2csv(_tCSV.D_WYST)+_sep+
               (~(-_tCSV.ST_ZAS));
            _csv.fwrite(_line);
            _tCSV.next()
         !};
         _csv.fclose();
         _wyn.STATUS:=1
      ?}
   || _wyn.STATUS:=1
   ?}
|| _wyn.STATUS:=-1
?};
_wyn


\res_xml2csv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Wynik formuły przetwarzającej XML
::  OLD: \res_xml2csv/kali_ei.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=obj_new('STATUS','RAPORT');
_res.STATUS:=0;
_res.RAPORT:=obj_new('TYP','ZAKRES','DOKXML','LICZBA');
_res.RAPORT.TYP:=''; _res.RAPORT.ZAKRES:=''; _res.RAPORT.DOKXML:=~~; _res.RAPORT.LICZBA:=0;
_res


\ezla_request
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Treść zapytania do pobrania informacji z PUE
::   WE: _a [DATE] - data od pobieranych dokumentów
::   WY: _request - przygotowane zapytanie do PUE
::----------------------------------------------------------------------------------------------------------------------
_date:={? var_pres('_a')=type_of(date()) || _a || date() ?};

_dt2xml:="form(_a~1,-4,0,'9')+'-'+form(_a~2,-2)+'-'+form(_a~3,-2)";
:: Odkodowanie hasła z KST_PAR.EZLAPASS
_pwd_rap:=exec('pwd_decode','#string',base64('decode',KST_PAR.EZLAPASS),exec('encode_key','#mailbox'),-cli_ver()='cgi');

_request:=
   '<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:'+
   'zus="http://zus/zus.channel.platnikRaportyZla:wsdlPlatnikRaportyZla">'+
      '<soapenv:Header/>'+
      '<soapenv:Body>'+
         '<zus:PobierzRaporty>'+
            '<login>'+KST_PAR.EZLAMAIL+'</login>'+
            '<haslo>'+_pwd_rap+'</haslo>'+
            '<nip>'+exec('niptostr','#string',KST.NIP)+'</nip>'+
            '<dataOd>'+_dt2xml(_date)+'</dataOd>'+
         '</zus:PobierzRaporty>'+
      '</soapenv:Body>'+
   '</soapenv:Envelope>';

&_pwd_rap;
_request


\ezla_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Pobieranie informacji o e-ZLA z PUE
::   WE: _a [STRING] - zapytanie do PUE
::       _b [DATE] - data od pobieranych dokumentów
::       [_c] [INTEGER] - parametr log
::       [_d] [INTEGER] - parametr noCRL
::   WY:
:: ~OST: INTMPDIR, ININETGET
::----------------------------------------------------------------------------------------------------------------------
_request:={? var_pres('_a')=type_of('')     || _a || ''     ?};
_date:=   {? var_pres('_b')=type_of(date()) || _b || date() ?};
_log:=    {? var_pres('_c')=type_of(0)      || _c || 0      ?};
_noCRL:=  {? var_pres('_d')=type_of(0)      || _d || 0      ?};

_zn:=exec('sep','#file');
{? exec('interm','#system')
|| _tmp_dir:=fmk_tmp_dir(0);
   {? type_of(_tmp_dir)<>type_of(~~)
   || _dwork:=_tmp_dir.get_path()
   || FUN.emsg('Nie udało się utworzyć katalogu tymczasowego po stronie serwera.'@);
      return(~~)
   ?}
|| _dwork:='@'+tmp_dir()
?};

:: parametry konfiguracyjne usługi PUE (url,login,pass)
_SERVICE:=exec('ezla_config','!pkd_ezk_ezla');

_xml2dt:="
   _xml:={? var_pres('_a')=type_of('') || 10+_a || '' ?};
   {? _xml<>''
   || _r:=#(4+_xml); {? _r<0 || _r:=0 ?};
      _m:=#(2+(5-_xml)); {? _m<1 | _m>12 || _m:=0 ?};
      _d:=#(_xml+2); {? _d<1 | _d>31 || 0 ?};
      date(_r,_m,_d)
   || date(0,0,0)
   ?}
";

_add_err:="
   {? var_pres('_a')<>type_of(0) || _a:=0 ?};
   {? var_pres('_b')<>type_of('') || _b:='' ?};
   {? var_pres('_c')<>type_of('') || _c:='' ?};
   {? var_pres('_d')<>type_of(date()) || _d:=date(0,0,0) ?};
   __ERR.blank();
   __ERR.CODE:=_a;
   __ERR.MESS:=_b;
   __ERR.COMB:=errno();
   __ERR.FLOG:=_c;
   __ERR.D_RAP:=_d;
   __ERR.T_RAP:={? var_pres('_e')>100 || _e.TYP || '' ?};
   __ERR.Z_RAP:={? var_pres('_e')>100 || _e.ZAKRES || '' ?};
   __ERR.X_RAP:={? var_pres('_e')>100 & _e.DOKXML<>~~ || {? _e.DOKXML || 'Tak'@ || 'Nie'@ ?} || '' ?};
   __ERR.L_RAP:={? var_pres('_e')>100 || _e.LICZBA || 0 ?};
   __ERR.add()
";

:: wygenerowanie nazwy dla pliku na odpowiedź usługi (i pliku logu)
_tm:=10+$tm_stamp(date()~1,date()~2;date()~3,time()~1,time()~2,time()~3);
_fodp:='i_ezla_'+_tm+'.xml';
_podp:=_dwork+_zn+_fodp;

_flog:={? _log || 'i_ezla_'+_tm+'.log' || '' ?};
_answer:=fopen(_podp,'bw',0,1,1);

{? ~_answer.is_open()
|| _add_err(-1,'Błąd podczas tworzenia pliku odpowiedzi usługi. Raport(y) nie zostały pobrane.'@,_fodp,_date)
|| _inet:=exec('inet_get','proxy',_SERVICE.URL,1);
   {? type_of(_inet)<100
   || _add_err(-2,'Błąd wywołania funkcji inet_get(). Raport(y) nie zostały pobrane.'@,_flog,_date)
   || _inet.set_auth(_SERVICE.LOGIN,_SERVICE.PASS);

::    typ zawartości text/xml, wyłączenie pełnej walidacji certyfikatu przy połączeniu przez PROXY (
::    sugestia Tomka A. Nowaka)
      _inet.append_header('Content-type: text/xml; charset=utf-8');
::    Od 2021-07-01 żadanie do pobierania raportów z PUE powinno mieć ustawiony nagłówek SOAPAction
      _inet.append_header('SOAPAction: "zus_channel_platnikRaportyZla_wsdlPlatnikRaportyZla_Binder_pobierzRaporty"');
      {? _noCRL & PROXY.CZY='T' || _inet.set_opt('SSL_VERIFYPEER', 0) ?};

::    włączenie logowania wykonania zapytania
      {? _log || _inet.set_verbose(_flog) ?};

      _res:=_inet.http_post(_answer,_request);
      {? _res<>0
      ||
::       sprawdzenie wyniku zapytania (zamiast powoływania zmiennych globalnych korzystamy z __ERR)
         {? x_parse(_answer,
               "__ERR.blank(); 1",
               "__ERR.MESS:=form(__ERR.MESS);
                {? __ERR.MESS<>''
                || __ERR.CODE:=#form(__ERR.FLOG); __ERR.FLOG:=''; __ERR.add()
                || __ERR.add(); __ERR.del(); 0
                ?}
               ",
               "__ERR.CODE:={? _a='kod' || 1 |? _a='opis' || -1 || 0 ?}; 1",
               "1",
               "{? __ERR.CODE=1 || __ERR.FLOG+=_a |? __ERR.CODE=-1 || __ERR.MESS+=_a ?}; 1"
               ) &
               __ERR.first() & __ERR.CODE=0

::       jeżeli SUKCES to tworzymy tabelę _TAB z XMLa zwróconego przez usługę i tabelę z listą raportów e-ZLA (__RAP)
         || _TAB:=xml_tparse(_answer,40,100,0);
            {? var_pres('_TAB')=type_of(SYSLOG) & _TAB.first()
            || __RAP.index(__ndxRP);
               {!
               |? {? _TAB.NAME='raport' & ~__RAP.find_key(_TAB.TREE)
                  || __RAP.blank();
                     __RAP.RAPORT:=_TAB.ref();
                     __RAP.add()
                  |? _TAB.NAME='dataWygenerowania'
                  || {? __RAP.find_key(_TAB.TREE)
                     || __RAP.DT_GEN:=_xml2dt(_TAB.VAL);
                        __RAP.put()
                     || __RAP.blank();
                        __RAP.DT_GEN:=_xml2dt(_TAB.VAL);
                        __RAP.RAPORT:=_TAB.TREE;
                        __RAP.add()
                     ?}
                  |? _TAB.NAME='zawartosc'
                  || {? __RAP.find_key(_TAB.TREE)
                     || __RAP.BASE64:=$_TAB.ref();
                        __RAP.put()
                     || __RAP.blank();
                        __RAP.BASE64:=$_TAB.ref();
                        __RAP.RAPORT:=_TAB.TREE;
                        __RAP.add()
                     ?}
                  ?};
                  _TAB.next()
               !};

::             Przetwarzanie pobranych z PUE ZUS raportów e-ZLA. Przetwarzanie składa się z:
::             1) zdekodowania pojedynczego raportu e-ZLA z BASE64 do pliku ZIP (ZIP tworzony w <katalog_tymczasowy>)
::             2) rozpakowania pliku ZIP do katalogu: <katalog_tymczasowy>\<dataWygenerowania>
::             3) odczytania pliku XML (raport.xml) z zaświadczeniami e-ZLA
::             4) utworzenia na podstawie raport.xml pliku raport.csv (w <katalog_tymczasowy>\<dataWygenerowania>)
::             5) zaimportowania raport.csv (korzystamy z procedury do importu plików CSV z zaświadczeniami e-ZLA) oraz
::                jeśli raport zawiera dokumenty e-ZLA XML z podpisem lekarza - dołączenie dokumentu do rekordu NEZLA
               __RAP.clear();
               __RAP.index(__ndxDT);
               {? __RAP.first()
               || _TAB.clear();
                  {!
                  |? {? _TAB.seek(__RAP.BASE64,)
                     || {? var_pres('_base64')>100 || obj_del(_base64) ?};
                        {? var_pres('_zip')>100 || obj_del(_zip) ?};
                        {? var_pres('_fxml')>100 || obj_del(_fxml) ?};
                        _base64:=fopen(_TAB.BVAL,'br',0,1,1);
                        _fzip:='i_ezla_'+_tm+'_'+__RAP.DT_GEN$0+'.zip';
                        _pzip:=_dwork+_zn+_fzip;
                        _zip:=fopen(_pzip,'bw',0,1,1);
::                      zmienna sterująca usuwaniem plików (nie usuwamy jeśli są błędy)
                        _ferase:=0;
                        {? _base64.is_open() & _zip.is_open()
                        || {? base64('decode',_base64,_zip)
                           || _zip.fclose();
                              _base64.fclose();
                              __RAP.ZIP:=_fzip;
                              __RAP.put();
                              {? fmkdir(_dwork,__RAP.DT_GEN$0)<>''
                              || _uzip:=_dwork+_zn+__RAP.DT_GEN$0;
::                               rozpakowanie pliku ZIP z raportem e-ZLA (pod jTerm zawsze lokalnie)
                                 _unpack:=funpack('zip',_pzip,_uzip,pass_get(KST_PAR.EZLAPZIP));
                                 {? _unpack
                                 || _fxml:=fopen(_uzip+_zn+'raport.xml','br',0,1,1);
::                                  przetworzenie jednego pliku raportu z dokumentami e-ZLA
                                    {? _fxml.is_open()
                                    || {? var_pres('_result')>100 || obj_del(_result) ?};
                                       _result:=exec('xml2csv','!pkd_ezk_ezla',_fxml,_uzip);
                                       {? _result.STATUS=1 & _result.RAPORT.LICZBA
                                       || _ok:=exec('nezla_import','nieobecnosc',0,_result.RAPORT.DOKXML,_uzip,
                                             __RAP.DT_GEN);
::                                        przepisanie komunikatów z obiektu RAPLS do tabeli __IEZLA
                                          {? _ok & RAPLS.TAB.first()
                                          || {!
                                             |? __IEZLA.blank();
                                                __IEZLA.DT_GEN:=__RAP.DT_GEN;
                                                __IEZLA.NAZWISKO:=RAPLS.TAB.NAZWISKO;
                                                __IEZLA.IMIE:=RAPLS.TAB.IMIE;
                                                __IEZLA.T:=RAPLS.TAB.T;
                                                __IEZLA.KOM:=RAPLS.TAB.KOM;
                                                __IEZLA.add();
                                                RAPLS.TAB.next()
                                             !}
                                          ?};
                                          RAPLS.ustaw(0);
                                          _add_err({? _ok || 0 || -13 ?},
                                             {? _ok
                                             || 'Raport e-ZLA wygenerowany %1: zaświadczenia e-ZLA zostały pobrane.'@
                                                [__RAP.DT_GEN$1]
                                             || 'Raport e-ZLA wygenerowany %1: zaświadczenia e-ZLA nie zostały '
                                                'pobrane.'@[__RAP.DT_GEN$1]
                                             ?},_fzip,_date,_result.RAPORT);
                                          {? _ok
                                          || KST_PAR.EZLADAKT:=__RAP.DT_GEN;
                                             exec('zapisz','#stalesys',1,KST_PAR,'EZLADAKT');
                                             _ferase:=1
                                          ?}
                                       |? _result.STATUS=1
                                       ||
::                                        Dzień bez zwolnienia nie jest błędem.
::                                          _add_err(0,
::                                             'Raport e-ZLA wygenerowany %1: brak pozycji.'@[__RAP.DT_GEN$1],
::                                             _fzip,_date,_result.RAPORT
::                                          );
                                          KST_PAR.EZLADAKT:=__RAP.DT_GEN;
                                          exec('zapisz','#stalesys',1,KST_PAR,'EZLADAKT');
                                          _ferase:=1
                                       |? _result.STATUS<0
                                       || _add_err(-14,
                                             'Raport e-ZLA wygenerowany %1: błąd parsowania [raport.xml].'@
                                             [__RAP.DT_GEN$1],_fzip,_date,_result.RAPORT
                                          )
                                       || _add_err(-15,
                                             'Raport e-ZLA wygenerowany %1: nieznany błąd.'@[__RAP.DT_GEN$1],
                                             _fzip,_date,_result.RAPORT
                                          )
                                       ?}
                                    || _add_err(-12,
                                          'Raport e-ZLA wygenerowany %1: błąd otwarcia pliku [raport.xml].'@
                                          [__RAP.DT_GEN$1],_fzip,_date
                                       )
                                    ?};
                                    _ok2:=1;
                                    _fxml.fclose();
::                                  posprzątanie w <katalog_tymczasowy>\<dataWygenerowania> plików raport.xml,
::                                  raport.csv (i plików dokumentów e-ZLA XML)
                                    {? var_pres('_xmldir')>100 || obj_del(_xmldir) ?};
                                    _xmldir:=fdir(_uzip,1,0);
                                    {? _ferase & var_pres('_xmldir')=type_of(SYSLOG) & _xmldir.first()
                                    || {!
                                       |? {? _xmldir.TYPE='f' &
                                             (-_xmldir.NAME='raport.xml' | -_xmldir.NAME='raport.csv' |
                                              -_xmldir.NAME+4='.xml')
                                          || _ok2*=ferase(_xmldir.DIR+_zn+_xmldir.NAME,0)
                                          ?};
                                          _xmldir.next()
                                       !}
                                    ?};
                                    {? _ok2=0
                                    || _add_err(-11,
                                          'Raport e-ZLA wygenerowany %1: nie udało się usunąć plików XML.'@
                                          [__RAP.DT_GEN$1],_fzip,_date
                                       )
                                    ?}
                                 || _add_err(-10,
                                       'Raport e-ZLA wygenerowany %1: problem z rozpakowaniem pliku ZIP. Kod błędu %2.'@
                                       [__RAP.DT_GEN$1,$_unpack],_fzip,_date
                                    )
                                 ?}
                              || _add_err(-9,
                                    'Raport e-ZLA wygenerowany %1: problem z utworzeniem podkatalogu.'@[__RAP.DT_GEN$1],
                                    _fodp,_date
                                 )
                              ?}
                           || _add_err(-8,
                                 'Raport e-ZLA wygenerowany %1: problem z dekodowaniem z BASE64.'@[__RAP.DT_GEN$1],
                                 _fodp,_date
                              )
                           ?}
                        || _add_err(-7,
                              'Raport e-ZLA wygenerowany %1: problem z otwarciem BASE64 i/lub ZIP.'@[__RAP.DT_GEN$1],
                              _fodp,_date
                           )
                        ?};
                        {? _base64.is_open()
                        || _base64.fclose()
                        ?};
                        {? _zip.is_open()
                        || _zip.fclose()
                        ?};
::                      usuwanie pliku ZIP z raportem e-ZLA
                        {? _ferase
                        || {? ~ferase(_pzip,0)
                           || _add_err(-6,
                                 'Raport e-ZLA wygenerowany %1: nie udało się usunąć pliku ZIP.'@[__RAP.DT_GEN$1],
                                 _fzip,_date
                              )
                           ?}
                        ?}
                     ?};
                     __RAP.next()
                  !}
               ?}
            || _add_err(-5,'Wystąpił problem z parsowaniem pliku XML odpowiedzi usługi.'@,_fodp,_date)
            ?};
            obj_del(_TAB); &_TAB
::       wynik usługi <>SUKCES
         |? __ERR.first()
         || __ERR.FLOG:=_fodp;
            __ERR.D_RAP:=_date;
            __ERR.put()
         ?}
      || _add_err(-4,'Wystąpił błąd połączenia inet_http(). Raport(y) nie zostały pobrane.'@,_flog,_date)
      ?}
   ?}
?};
_answer.fclose();

:: usuwanie pliku XML zwróconego przez usługę (jeżeli __ERR nie zawiera komunikatów o __ERR.CODE<0)
__ERR.prefix(0);
{? __ERR.first() || {! |? {? __ERR.MESS='SUKCES' || __ERR.del(); 0 || __ERR.next() ?} !} ?};
__ERR.prefix();
{? ~(__ERR.first() & __ERR.CODE<0)
|| {? ~ferase(_podp,0)
   || _add_err(-3,'Nie udało się usunąć pliku XML odpowiedzi usługi.'@,_fodp,_date)
   ?}
?};
~~


\ezla_config
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [RR,xx]
:: OPIS: Tablica z ustawieniami do połączenia się z usługą PUE ZUS (adres url, login, hasło).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_config:=obj_new('URL','LOGIN','PASS');
_config.URL:='https://pue.zus.pl:8500/ws/zus.channel.platnikRaportyZla:wsdlPlatnikRaportyZla/zus_channel_platnikRaportyZla_wsdlPlatnikRaportyZla_Port';
_config.LOGIN:='b2b_platnik_raporty_zla';
_config.PASS:='b2b_platnik_raporty_zla';
_config


\email_body
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [RR,xx]
:: OPIS: Treść wiadomości email
::   WE: _a [INTEGER] - powiadomienie o (0 - błędach / 1 - sukcesie)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_type:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_body:='';

: przerwij działanie jeśli brak informacji
{? ~_type & var_pres('__ERR')<>type_of(SYSLOG) & var_pres('__LST_E')<>type_of(SYSLOG) || return(body)
|? _type & var_pres('__IEZLA')<>type_of(SYSLOG)                                       || return(body)
?};

_size:={? ~_type || __ERR.size() | __LST_E.size() || __IEZLA.size() ?};

{? _size
|| _th:="'<th [[STYLE_TABLE_TH]]>'+_a+'</th>'";
   _td:="'<td [[STYLE_TABLE_TD]]>'+_a+'</td>'";

   _title:={? ~_type || 'Powiadomienie o błędach podczas importu zwolnień lekarskich e-ZLA z PUE.'@
           |? _type  || 'Powiadomienie o zaimportowanych zwolnieniach lekarskich e-ZLA z PUE.'@
           ?};

   _body+=
      '<h3>'+
         _title+
      '</h3>\n'
?};

:: Przygotowanie treści z informacjami o błędach
{? ~_type
|| {? __ERR.first()
   || _body+=
         '<h4>'+'Informacja o przebiegu importu raportów e-ZLA z PUE ZUS.'@+'</h4>\n'+
         {? __ERR.D_RAP<>date(0,0,0)
         || '<p>'+'Data początkowa pobierania dokumentów: %1'@[__ERR.D_RAP$1]+'</p>\n'
         || ''
         ?}+
         {? __ERR.Z_RAP<>''
         || '<p>'+'Zakres: %1'@[__ERR.Z_RAP]+'</p>\n'
         || ''
         ?}+
         '<table [[STYLE_TABLE]]>\n'
            '<tr [[STYLE_TABLE_TR]]>'+
               _th('Lp.'@)+
               _th('Kod usługi'@)+
               _th('Opis wyniku usługi/komunikaty o błędach'@)+
               _th('Kod błędu MacroBASE'@)+
               _th('Dołączono XML-e?'@)+
               _th('Liczba dokumentów e-ZLA'@)+
            '</tr>\n';

      _lp:=0;
      {!
      |? _lp+=1;
         _body+=
            '<tr [[STYLE_TABLE_TR]]>'+
               _td($_lp)+
               _td({? __ERR.CODE<0 || '-' || $__ERR.CODE ?})+
               _td(__ERR.MESS)+
               _td({? __ERR.COMB>0 || $__ERR.COMB || '-' ?})+
               _td(__ERR.X_RAP)+
               _td({? __ERR.CODE<0 || '-' || $__ERR.L_RAP ?})+
            '</tr>\n';
         __ERR.next()
      !};

      _body+=
         '</table>\n'
   ?};

   {? __LST_E.first()
   || _body+=
         '<h4>'+
            'Informacja o imporcie zaświadczeń e-ZLA z dnia %1 do Merit.'@[__LST_E.DT_GEN$4]+
         '</h4>\n'
         '<table [[STYLE_TABLE]]>\n'
            '<tr [[STYLE_TABLE_TR]]>'+
               _th('Lp.'@)+
               _th('Utworzono e-ZLA?'@)+
               _th('Seria i numer'@)+
               _th('Nazwisko i imię'@)+
               _th('PESEL'@)+
               _th('Od dnia'@)+
               _th('Do dnia'@)+
               _th('Szpital od'@)+
               _th('Szpital do'@)+
               _th('Status zaświadczenia'@)+
            '</tr>\n';

      _lp:=0;
      {!
      |? _lp+=1;
         _body+=
            '<tr [[STYLE_TABLE_TR]]>'+
               _td($_lp)+
               _td({? ~__LST_E.STATUS || 'tak'@ || 'nie'@ ?})+
               _td(__LST_E.EZLA)+
               _td(__LST_E.PRAC)+
               _td(__LST_E.PESEL)+
               _td(__LST_E.OD$1)+
               _td(__LST_E.DO$1)+
               _td(__LST_E.SZP_OD$1)+
               _td(__LST_E.SZP_DO$1)+
               _td(__LST_E.ST_ZAS)+
            '</tr>\n';
         __LST_E.next()
      !};

      _body+=
         '</table>\n'
   ?}

:: Przygotowanie treści z informacjami o zaimportowanych pozycjach
|| {? __IEZLA.first()
   || _body+=
         '<h4>'+
            'Komunikaty zarejestrowane podczas importu raportów e-ZLA do Merit.'@+
         '</h4>\n'
         '<table [[STYLE_TABLE]]>\n'
            '<tr [[STYLE_TABLE_TR]]>'+
               _th('Lp.'@)+
               _th('Nazwisko i imię'@)+
               _th('PESEL/Teczka'@)+
               _th('Komunikat'@)+
            '</tr>\n';

      _lp:=0;
      {!
      |? _lp+=1;
         _body+=
            '<tr [[STYLE_TABLE_TR]]>'+
               _td($_lp)+
               _td(__IEZLA.NAZWISKO+' '+__IEZLA.IMIE)+
               _td(__IEZLA.T)+
               _td(__IEZLA.KOM)+
            '</tr>\n';
         __IEZLA.next()
      !};

      _body+=
         '</table>\n'
   ?}
?};

{? _size
|| _body+=
      '<p>'+'Ta wiadomość została wygenerowana automatycznie - prosimy na nią nie odpowiadać.'@+'</p>'
?};

_body

:Sign Version 2.0 jowisz:1045 2023/04/17 10:21:40 64dee55c56d9d2afe786c9bf6eb393032f8d5f78c2d1aaa7513a261a72ee063119e964c86370f612b4ad20e93a030077c127e6f2b01010b1b28e68f0947e30105556450f7b61f15441c08711b67f4c56cbfa4511a77175b53ad0cd7cc7d4bdf3b1c1fc47a6f96c5ad2622814c9a75687f250701e2ac65c3bb6b73eea2ed8c889
