:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zbl_bil_dokg.fml
:: Utworzony: 04.09.2020
:: Autor: TS
::======================================================================================================================
:: Zawartość: Obsługa czynności odebrania dokumentów z usługi Businesslink
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Formuła główna czynności odebrania dokumentów (ZBL_BIL_DOKG)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::       context - [obj_new] obiekt służący do przekazywania kontekstu wywołania czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
_action:=_mp.akcja();

::# properties=SERVICE

::# kind=WY, symbol=RESULT, type=STRING, name="Wynik czynności (OK, BŁĄD)", required=N
{? var_pres('RESULT',_out)<>type_of(~~) & var_pres('RESULT',_out)<>type_of('') || return() ?};
::# kind=WY, symbol=DESC, type=MEMO, name="Opis wyniku", required=N
{? var_pres('DESC',_out)<>type_of(~~) & var_pres('DESC',_out)<>type_of('') || return() ?};
::# kind=WY, symbol=DOKUM, type=MEMO, name="Lista dokumentów", required=N
{? var_pres('DOKUM',_out)<>type_of(~~) & var_pres('DOKUM',_out)<>type_of('') || return() ?};

{? _mp.isService() || KOMM.init(,,'documents_get') ?};
_result:=exec('documents_get','!zbl_bil_dokg',~(_mp.isAutoRun() | _mp.isService() | _mp.isGroup()));
{? _result.STATUS | _mp.isService()
|| _out.RESULT:={? _result.STATUS || 'OK' || 'BŁĄD' ?};
   _out.DESC:=_result.DESC;
   _out.DOKUM:=_result.DOKUM;
   _mp.save(,_out);
   _mp.done()
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Opis dla czynności odebrania dokumentów (ZBL_BIL_DOKG)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_desc:='Odbierz dokumenty z portalu Businesslink'@@;
_desc


\documents_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: Odbieranie dokumentów w usłudze Businesslink.
::   WE: _a - czy wyświetlać dialogi i progress
::   WY: wynik przetwarzania, 1 - jeżeli ok, 0 - w przypadku błędów (np. brak kontaktu z portalem Businesslink)
::----------------------------------------------------------------------------------------------------------------------
_dialog:=_a;
_result:=obj_new('STATUS','DESC','DOKUM');
_result.STATUS:=1;
_result.DESC:='';
_result.DOKUM:='';

:: Tutaj pętla po DOKUMach przychodzących nie mających pobranej zawartości (BL_STAT=ready_to_download)
:: albo wysłanych do OCR, które zostały już przeprocesowane (BL_OCR=ready_to_get_from_ocr)
_tab:=sql('
   select DOKUM.REFERENCE as REF
   from DOKUM
   where DOKUM.BL=\'T\'
      and (DOKUM.BL_STAT=\':_a\' or DOKUM.BL_OCR=\':_b\')
      and DOKUM.BL_STAT<>\':_c\'
      and DOKUM.FIRMA=:_d
',
   exec('ready_to_download','zbl_stat'),
   exec('ready_to_get_from_ocr','zbl_stat'),
   exec('abandoned','zbl_stat'),
   REF.FIRMA
);

_jman:=exec('json_man','__jsonm','[]');
   _jman1:=_jman.new('{}');
   _jman1.setValue(_jman1.addChildElement('','uidref'),'');

DOKUM.cntx_psh();
DOKUM.prefix();
_size:=_tab.size();
{? _tab.first()
|| {? _dialog || FUN.prg_start(_size,'Odbieranie dokumentów'@,,,1) ?};
   {!
   |? {? _dialog || FUN.prg_next() ?};
      {? DOKUM.seek(_tab.REF)
      || {? var_pres('_res')>100 || obj_del(_res) ?};
::       Pobierany jest pojedynczy dokument
         _res:=exec('DocumentGet','businesslink3',DOKUM.ref(),0);
         _result.STATUS*=_res.STATUS;
::         _result.DOKUM+='%1\n'[DOKUM.uidref()];
         _jman1.setValue('uidref',DOKUM.uidref());
         _jman.setObject(_jman.addChildElement(''),_jman1.getJSON());
::         _res.STATUS & var_pres('DETAILS',_res)>100 & obj_len(_res.DETAILS)>=100;
         ~~
      ?};
      _tab.next()
   !};
   {? _dialog || FUN.prg_stop() ?}
?};
DOKUM.cntx_pop();

_header:='Pobieranie zawartości dokumentów przychodzących.'@;
_result.DOKUM:=_jman.getJSON();
{? _result.STATUS
|| _result.DESC:='Dokumenty zostały przetworzone.';
   KOMM.info(_header+'\n'+'Dokumenty zostały przetworzone.'@,_dialog)
|| _result.DESC:=
      'Nie udało się przetworzyć wszystkich dokumentów.'+
      {? _res.MESSAGE<>'' || '\n'+'Ostatni komunikat:'+'\n'+_res.MESSAGE || '' ?};
   KOMM.info(
      _header+'\n'+'Nie udało się przetworzyć wszystkich dokumentów.'@+
      {? _res.MESSAGE<>'' || '\n'+'Ostatni komunikat:'@+'\n'+_res.MESSAGE || '' ?},
      _dialog
   )
?};

_result

:Sign Version 2.0 jowisz:1045 2022/06/30 14:22:54 3a309cb0ff978a93dc1e969d3c27e7f519028691fe0cef2be7d66eff276ba10583f8d95d1492af80705e11d94f12623b545dafd11867c9398076cd7bcf69564627778a8c0c8b3464adadc0ec34f03c8430f61b5fd90bcab69f171c41bb9d6001986288ea130eaf42e8871736c04e0a94d0dd16218c2683012bfa4d976ba275dd
