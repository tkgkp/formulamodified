:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_ezk_orku.fml
:: Utworzony: 15.02.2016
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa czynności PKD_EZK_ORKU - Rejestracja kart urlopowych.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rejestracja kart urlopowych - główna formuła czynności.
::   WE:
::   WY:
::  OLD: \kart_url/kart_url.fml - Zmiana obsługi.
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::# access=exec('run_cond_p','pkd')
::
::# kind=WE, symbol=P, type=_P, name=Wskazanie pracownika, required=T, keyref=T
::
_par:=params_get();
_mp:=_par.mp;
_in:=_par.in;
_akcja:=_mp.akcja();

_result:='';

_uidref:=exec('ref2uid','#table',_in.P);
{? _uidref=''
|| _result:=exec('error','!pkd_ezk_orku')

|? _mp.isMicro()
|| {? _akcja='START'
::    Wejście do okienka w ramach obszaru roboczego - uruchomienie procesu i pozostawienie go na liście zadań.
   || _mp.keyRef(_uidref);
      _mp.keep()

   |? _akcja='STOP'
::    Wyjście z okienka w ramach obszaru roboczego - anulowanie procesu.
   || _mp.delRef(_uidref);
      _mp.cancel()

   |? _akcja<>''
   || _result:='Czynność %1 nie obsługuje akcji %2.'@ [_mp.buf_act.UID,_akcja]

   ?}

|| {? _akcja='ZAKOŃCZ'
   || _mp.done()

   |? _mp.pathTodo()
   || _value:=exec('select','!pkd_ezk_orku',_in.P);
      {? type_of(_value)=type_of('')
      || _result:=_value
      |? _value
      || _mp.done()
      || _mp.keep()
      ?}
   ?}
?};

{? _result<>''
:  Obsługa błędów
|| _mp.error(_result);
   FUN.emsg(_result)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rejestracja karty urlopowej - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('desc','pracownik',params_get().mp);
{? _tab.ZAW_DANE='T'
|| {? _tab.OBCY='T'
   || 'Zarejestruj kartę urlopową: %1 %2: Paszport - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT,_tab.T,_tab.IP]
   |? +_tab.PESEL
   || 'Zarejestruj kartę urlopową: %1 %2: PESEL - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PESEL,_tab.T,_tab.IP]
   || 'Zarejestruj kartę urlopową: %1 %2: Data urodzenia - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.UR_DATA,_tab.T,_tab.IP]
   ?}
|| 'Zarejestruj kartę urlopową'@@
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Słownik komunikatów o błędach.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Rejestrowanie kart urlopowych niemożliwe.\nNie znaleziono pracownika.'


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa czynności wywołanej z listy zadań
::   WE: _a - Wskazanie pracownika.
::   WY: Komunikat o błędzie lub informacja o wyjściu z okna poprzez wywołanie sel_exit() - czyli "Zakończ".
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
P.prefix();
{? type_of(_a)=type_of(null()) & _a<>null() & P.seek(_a)
|| OSOBA.cntx_psh();
   P.OSOBA();
   KART_URL.cntx_psh();
   {? PAR_SKID.get(236)='T'
   || KART_URL.index('PRAC_ROX')
   || KART_URL.index('PRAC_ROK')
   ?};
   KART_URL.prefix(P.ref());
   KART_URL.win_sel({? exec('dest','f_zatr',P.F_ZATR,'KOD')='Z' || 'WER_Z' || 'WER_P' ?});
   KART_URL.win_edit('RED');
   _ret:=KART_URL.select();
   KART_URL.cntx_pop();
   OSOBA.cntx_pop()
|| _ret:=exec('error','!pkd_ezk_orku')
?};
P.cntx_pop();
_ret


\kart_url_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła odpowiedzialna za dynamiczne ustawianie właściwości pól tabeli KART_URL.
::       Formuła wywoływana jest w dwóch kontekstach pracy:
::          - Po redagowaniu konkretnego pola, które determinuje właściwości wyświetlania innych pól.
::          - Przed wyświetleniem okna redagowania (przed właściwymi akcjami Dołącz, Popraw, Wyświetl), ustawia
::            właściwości wszystkich pól (wymagających tego).
::       Kontekst pracy jest określany na podstawie argumentu wywołania.
::   WE:  _a  [STRING] - Kontekst pracy:
::             '1' - Obsługa jednego pola [domyślnie].
::             '*' - Obsługa wszystkich pól.
::       [_b] [TABLE]  - Uchwyt tabeli, w oknie redagowania której znajdują sie pola. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęta bieżąca tabela.
::       [_c] [STRING] - Akronim okna, w którym mają być ustawione właściwości pól. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęte bieżące okno.
::       [_d] [STRING] - Akronim pola, którego wartość determinuje właściwości wyświetlania innych pól. Parametr ma
::             znaczenie wyłącznie dla _a='1'. [Domyślnie: bieżące pole].
::   WY: 0 - Błąd argumentów wywołania.
::       1 - Argumenty poprawne (właściwości ustawione).
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (_a='1' | _a='*') || _a || '1' ?};
{? var_pres('_b')=type_of(KART_URL)
|| _TAB:=_b
|? _tryb='1'
|| _TAB:=cur_tab(1,1)
|| return(0)
?};
{? var_pres('_c')=type_of('')
|| _we:=_c
|? _tryb='1'
|| _we:=cur_win(1,1)
|| return(0)
?};
{? var_pres('_d')=type_of('')
|| _fld:=_d
|? _tryb='1'
|| _fld:=cur_afld()
|| _fld:=''
?};

{? _fld='' | _fld='ROK'
||
:  Godziny są prezentowane dopiero po roku 2003.
   _sval:=$(KART_URL.ROK>2003);
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'LIM_ZALG');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'LIM_AKTG');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'URL_DODG');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'URL_NSPG');
   _TAB.efld_opt(_we,'enable='+_sval,EDIT_VAR,'RAZEMG');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'URL_WYKG');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'URL_POZG');
   _TAB.efld_opt(_we,'enable='+_sval,EDIT_VAR,'RAZ_NSPG');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'NSP_ZALG');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'NSP_WYKG');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'NSP_POZG');
:  Pozostałe pola (dni i nie tylko) są prezentowane dopiero po uzupełnieniu roku.
   _sval:=$(KART_URL.ROK>1900);
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'DATA_DOD');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'DATA_NSP');

   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'LIM_ZAL');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'LIM_AKT');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'URL_DOD');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'URL_NSP');
   _TAB.efld_opt(_we,'enable='+_sval,EDIT_VAR,'RAZEM');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'URL_WYK');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'URL_POZ');
   _TAB.efld_opt(_we,'enable='+_sval,EDIT_VAR,'RAZ_NSP');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'NSP_ZAL');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'NSP_WYK');
   _TAB.efld_opt(_we,'enable='+_sval,KART_URL,'NSP_POZ');
   ~~
?};

1


\kart_url_params_ed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Funkcja tworzy tablicę z elementami nazwanymi wykorzystywaną podczas dołączania i poprawiania karty urlopowej.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_kart_url_ed:=obj_new('LICZ','PUT','ROK');
:: Karta jest liczona automatycznie tylko dla formy współpracy P. Zakłada się, że bufor tabeli P jest wypełniony.
_kart_url_ed.LICZ:=exec('dest','f_zatr',P.F_ZATR,'KOD')='P';
_kart_url_ed.PUT:=0;
_kart_url_ed.ROK:=0;
_kart_url_ed


\kart_url_rok_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Przed redagowaniem pola KART_URL.ROK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_kart_url_ed:=params_get().kart_url_ed;
{? _kart_url_ed.PUT
:: Przy "Popraw" pole "Rok" nie jest redagowalne.
|| return(0)
?};
:: Zapamiętujemy wartość pola przed redagowaniem.
_kart_url_ed.ROK:=KART_URL.ROK;
1


\kart_url_xg_df
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: "Format wyświetlania" dla pól przechowujących godziny.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'empty='+$(KART_URL.ROK<=2003)


\kart_url_rok_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Po redagowaniu pola KART_URL.ROK.
::   WE:
::   WY:
::  OLD: \popr_prz/kart_url.fml - Zmiana sposobu obsługi.
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('kart_url_dostepna','kart_url',KART_URL.ROK)
|| return(0)
?};

_kart_url_ed:=params_get().kart_url_ed;

_ref:={? _kart_url_ed.PUT || KART_URL.ref() || null() ?};
KART_URL.cntx_psh();
KART_URL.index('PRAC_ROK');
KART_URL.prefix(P.ref(),KART_URL.ROK);
_ok:={? KART_URL.first() || KART_URL.ref()=null() || 1 ?};
KART_URL.cntx_pop();
{? ~_ok
|| FUN.emsg('Karta urlopowa na rok %1 już istnieje.'@ [$KART_URL.ROK]);
   return(0)
?};

{? _kart_url_ed.LICZ
|| {? _kart_url_ed.ROK<>KART_URL.ROK
   || exec('oblicz','staz',1,,KART_URL.ROK);
      exec('oblicz','kart_url',KART_URL.ROK,1)
   ?}
|| exec('kart_url_aktualizuj','kart_url')
?};
exec('kart_url_efld_opt','!pkd_ezk_orku')


\kart_url_x_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Po redagowaniu pól przechowujących limity urlopu (godziny i dni) - aktualizacja wartości podsumowujących.
::  OLD: \kuaktsum/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
exec('kart_url_aktualizuj','kart_url');
1


\kart_url_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Dołącz - przed" w oknie WER tabeli KART_URL.
::   WE:
::   WY:
::  OLD: \akt_kurl/kart_url.fml - Zmiana sposobu obsługi.
::----------------------------------------------------------------------------------------------------------------------
KART_URL.blank();
_kart_url_ed:=exec('kart_url_params_ed','!pkd_ezk_orku');
params_set('kart_url_ed',_kart_url_ed);
exec('kart_url_efld_opt','!pkd_ezk_orku','*',KART_URL,'RED');
{? KART_URL.edit("exec('kart_url_ae','!pkd_ezk_orku',0)") & KART_URL.add() & _kart_url_ed.LICZ
|| exec('aktualizuj_rok','kart_url',KART_URL.ROK+1)
?}


\kart_url_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Popraw - przed" w oknie WER tabeli KART_URL.
::   WE: [_a] [INTEGER] - Czy aktualizować kartę?
::             0 - Nie [domyślnie].
::             1 - Tak.
::   WY:
::  OLD: \popr_po/kart_url.fml
::  OLD: \akt_kurl/kart_url.fml - Zmiana sposobu obsługi.
::----------------------------------------------------------------------------------------------------------------------
_kart_url_ed:=exec('kart_url_params_ed','!pkd_ezk_orku');
_kart_url_ed.PUT:=1;
params_set('kart_url_ed',_kart_url_ed);
{? var_pres('_a')=type_of(0) & _a
|| KART_URL.STATUS:='A';
   {? _kart_url_ed.LICZ
   || _crc:=KART_URL.crc();
      exec('oblicz','kart_url',KART_URL.ROK,1);
      {? _crc<>KART_URL.crc()
      || FUN.info(
            'Dane prezentowane w oknie zostały zaktualizowane i powinny zostać zapisane do bazy.\n'
            'Rezygnacja spowoduje przywrócenie poprzednich wartości.'@
         )
      ?}
   ?}
|| KART_URL.STATUS:='P'
?};
exec('kart_url_efld_opt','!pkd_ezk_orku','*',KART_URL,'RED');
{? KART_URL.edit("exec('kart_url_ae','!pkd_ezk_orku',1)") & KART_URL.put() & _kart_url_ed.LICZ
|| exec('aktualizuj_rok','kart_url',KART_URL.ROK+1)
?}


\kart_url_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Usuń - przed" w oknie WER tabeli KART_URL.
::   WE:
::   WY:
::  OLD: \usun_prz/kart_url.fml
::  OLD: \usun_po/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_kart_url_ed:=exec('kart_url_params_ed','!pkd_ezk_orku');
_rok:=KART_URL.ROK;
{? exec('del_ask','#table') & KART_URL.del(,1) & _kart_url_ed.LICZ
|| exec('aktualizuj_rok','kart_url',_rok+1)
?}


\kart_url_wykorzystanie_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Formuła prezentuje wykorzystanie urlopu zarówno na podstawie danych z nieobecności jak i umów o pracę
::       ("zaplanowany" ekwiwalent). Dane dotyczą bieżącego rekordu tabeli KART_URL i określonych w nim: pracownika
::       i roku.
::   WE:
::   WY:
::  OLD: \dni_url/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_delta:=P.NAB_URL<>date(0,0,0) & KART_URL.PIERWSZY='T' & P.NAB_URL~1<KART_URL.ROK;

_dp:=date(KART_URL.ROK-_delta,1,1);
_dk:=date(KART_URL.ROK,12,31);

_wsh:=_wg:='';

F_ZATR.cntx_psh();
H_UM.cntx_psh();
H_UM.prefix();
RU.cntx_psh();
RU.prefix();

_f_zatr:=exec('dest','f_zatr',P.F_ZATR,'KOD');
{? _f_zatr='Z'
|| _URLOP:=sql(
      'select R.RN, R.RT, OS_N.OD, OS_N.DO, OS_N.NK, OS_N.NR, OS_N.NG '
      'from OS_N join R '
      'where OS_N.FIRMA=:_g and OS_N.OSOBA=:_a and (OS_N.R=:_b or OS_N.R=:_c or OS_N.R=:_d) '
         'and to_date(:_e)<=OD and OD<=to_date(:_f) '
      'order by OD',
       P.OSOBA,KST_PAR.URLOP,KST_PAR.URL_CHOR,__RUB.ref(__RUB.sys_kod(1113,,1)),_dp,_dk,exec('ref_firma','ustawienia'))
|| _rOddel:=__RUB.sys_sql(1114);
:: Z racji możliwości przypisania wielu rubryk do atrybutu tworzę 'mapę' rubryk przypisanych
   _rOddelT:=spli_str(_rOddel, ',');

   _val:='\''+$(KST_PAR.URLOP)+'\''+
         ',\''+$(KST_PAR.URL_CHOR)+'\''+
         ',\''+$(__RUB.ref(__RUB.sys_kod(1113,,1)))+'\'';
   {! _ind:=1..obj_len(_rOddelT)
   |! _val+=',\''+$(__RUB.ref(#_rOddelT[_ind]))+'\''
   !};

   _URLOP:=sql(
      'select R.RN, R.RT, N.OD, N.DO, N.NK, N.NR, N.NG, N.LT '
      'from N join R '
      'where N.P=:_a and N.KOR=\'N\' and N.NB in (:_b) '
      'and to_date(:_c)<=OD and OD<=to_date(:_d) '
      'order by OD',
       P.ref(),_val,_dp,_dk)
?};
_URLOP.fld_attr(,2);

_tn:=
   {? _f_zatr='P'
   || 'Nieobecności'@
   |? _delta
   || 'Nieobecności urlopowe w latach %1-%2 '@ [$(KART_URL.ROK-_delta),$KART_URL.ROK]
   || 'Nieobecności urlopowe w roku %1 '@ [$KART_URL.ROK]
   ?};

_wsn:=_URLOP.mk_sel(_tn,'N',,'#kuwun',,,7,,'U',,,,,,,'on');
_URLOP.win_fld(_wsn,,'RN',,,-5,,,MS.name(R,'RN'),,MS.comment(R,'RN'));
_URLOP.win_fld(_wsn,,'RT',,,-22,,,MS.name(R,'RT'),,MS.comment(R,'RT'));
_URLOP.win_fld(_wsn,,'OD',,,-10,,,MS.name(N,'OD'),,MS.comment(N,'OD'));
_URLOP.win_fld(_wsn,,'DO',,,-10,,,MS.name(N,'DO'),,MS.comment(N,'DO'));
_URLOP.win_fld(_wsn,,'NK',,,-10,0,,MS.name(N,'NK'),,MS.comment(N,'NK'));
_URLOP.win_fld(_wsn,,'NR',,,-10,0,,MS.name(N,'NR'),,MS.comment(N,'NR'));
_URLOP.win_fld(_wsn,,'NG',,,-10,2,,MS.name(N,'NG'),,MS.comment(N,'NG'));

{? _f_zatr='P'
|| _URLOP.win_fld(_wsn,,'LT',,,-8,,,MS.name(N,'LT'),,MS.comment(N,'LT'));

   H_UM.f_set('OD','join RU',
      '"H_UM".P=:_a and ("H_UM".EKW<>0 or "H_UM".EKW_NSP<>0) and to_date(:_b)<="H_UM".DO and "H_UM".DO<=to_date(:_c)',
      P.ref(),_dp,_dk);

   _wsh:=H_UM.mk_sel('Umowy (ekwiwalent)'@,'N',,'#kuwuh',,,,,'P',,,,,,,'on');
   H_UM.win_fld(_wsh,,'NUMER',,,-25,,,,,MS.comment(H_UM,'NUMER'));
   H_UM.win_fld(_wsh,,'OD',,,-10,,,,,MS.comment(H_UM,'OD'));
   H_UM.win_fld(_wsh,,'DO',,,-10,,,,,MS.comment(H_UM,'DO'));
   H_UM.win_fld(_wsh,,'RU','O',,-12,,1,MS.name(H_UM,'RU'),,MS.comment(H_UM,'RU'));
   H_UM.win_fld(_wsh,,'EKW',,,-10,2,,,,MS.comment(H_UM,'EKW'));
   H_UM.win_fld(_wsh,,'EKW_NSP',,,-10,2,,,,MS.comment(H_UM,'EKW_NSP'));
   H_UM.win_fld(_wsh,,'LT',,,-8,,,,,MS.comment(H_UM,'LT'));

   _wg:=_URLOP.grp_make(
      {? _delta
      || 'Wykorzystanie urlopu w latach %1-%2 '@ [$(KART_URL.ROK-_delta),$KART_URL.ROK]
      || 'Wykorzystanie urlopu w roku %1 '@ [$KART_URL.ROK]
      ?},
   $('grp_disp(H_UM,\''+_wsh+'\')'),'#kuwug',,,,,'html_maximized');
   _URLOP.grp_sel(_wg,,_wsn,,,,,,,,,,'maximized_with_title');
   _URLOP.grp_splt(_wg,,'horizontal','ekw',11);
   _URLOP.grp_sel(_wg,H_UM,_wsh,,,,,4,,,,,'maximized_with_title');

   _URLOP.win_sel(_wg)

|| _URLOP.win_sel(_wsn)
?};
_URLOP.select();
_URLOP.win_sel();

RU.cntx_pop();

H_UM.f_clear(1);
H_UM.cntx_pop();
F_ZATR.cntx_pop();

{? _wg<>'' || _URLOP.win_del(_wg) ?};
{? _wsh<>'' || H_UM.win_del(_wsh) ?};

obj_del(_URLOP);
~~


\kart_url_pierwszy_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Sprawdzenie, czy dla danego pracownika powinny być wyświetlane informacje o limitach urlopu należnego
::       w trakcie pierwszego roku.
::       Warunki:
::        - karta urlopowa pracownika istnieje;
::        - jest to pierwsza karta urlopowa;
::        - rok karty jest późniejszy od 2003;
::        - pracownik nabył prawo korzystania z urlopu wypoczynkowego w roku karty.
::   WE:
::   WY:
::  OLD: \purl_prz/kart_url.fml
::----------------------------------------------------------------------------------------------------------------------
_test:=0;
KART_URL.cntx_psh();
KART_URL.index('PRAC_ROK');
KART_URL.prefix(P.ref());
{? KART_URL.first() & KART_URL.PIERWSZY='T'
|| {? ~(_test:=(2004<=KART_URL.ROK) & (KART_URL.ROK=P.NAB_URL~1) & exec('czy_nowy','kart_url'))
   || FUN.info(
         'Funkcja dotępna tylko dla pracowników, którzy prawo do korzystania z urlopu wypoczynkowego\n'+
         'nabyli po roku 2003 i nie podejmowali pracy przed dniem 01 stycznia 2004 r.'
      )
   ?}
|| FUN.info(
      'Nie odnaleziono karty urlopowej właściwej dla roku, w którym pracownik\n'+
      'po raz pierwszy nabywa prawo do korzystania z urlopu wypoczynkowego.'
   )
?};
KART_URL.cntx_pop();
{? _test
|| exec('pierwszy','kart_url')
?}


\kart_url_zakoncz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Zakończ". Formuła wykonywana w dwóch środowiskach:
::       - po wywołaniu z listy zadań (okno wertowania tabeli KART_URL z doklejonym oknem redagowania tabeli P);
::       - w ramach obszaru roboczego (okno wertowania tabeli KART_URL jako składowa okna grupowego tabeli P).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(0,0)=KART_URL
|| sel_exit()

|| params_set(params_get());
   exec('pkd_run','pkd','ZAKOŃCZ')
?}


\kart_url_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Wyświetl - przed" w oknie WER tabeli KART_URL.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('kart_url_efld_opt','!pkd_ezk_orku','*',KART_URL,'RED');
KART_URL.display()


\kart_url_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie WER tabeli KART_URL.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
||  _par:=params_get();
   {? var_pres('_par')>100 &
      var_pres('cfg',_par)>100 &
      var_pres('done',_par.cfg)>100 &
      var_pres('noempty',_par.cfg.done)=type_of('') & var_pres('empty',_par.cfg.done)=type_of('')
   || _ga:=_par.cfg.done.noempty+':'+_par.cfg.done.empty
   || _ga:=''
   ?};

:: Akcja "Dn&i urlopu"->"Pierwszy rok" tylko dla karty z odpowiednią flagą.
   _ga:={? KART_URL.PIERWSZY='T' || '' || 'I(P)' ?}+_ga;

:: Akcja "Prze&licz" tylko dla formy współpracay P.
   {? exec('dest','f_zatr',P.F_ZATR,'KOD')<>'P'
   || _ga:='L'+_ga
   ?};

   KART_URL.actions_grayed('WER',_ga);

   exec('kart_url_sumuj','kart_url')
?};

0


\kart_url_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Rekord - po" w oknie WER tabeli KART_URL.
::   WE: _a [INTEGER] - Czy poprawianie rekordu?
::          1 - Tak.
::          0 - Nie, poprawianie [domyślnie].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? KART_URL.ROK<KART_URL.DATA_NSP~1
|| FUN.emsg('Data "Prawo do urlopu dodatkowego" nie może być późniejsza niż %1.'[date(KART_URL.ROK,12,31)$1]);
   'DATA_NSP'
|? (KART_URL.URL_NSP>0 | KART_URL.URL_NSPG>0) & KART_URL.DATA_NSP=date(0,0,0)
|| FUN.emsg('Należy wprowadzić datę "Prawo do urlopu dodatkowego".');
   'DATA_NSP'
|| __CHK.table(KART_URL,var_pres('_a')=type_of(0) & _a,,'ROK')
?}

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 6caa7e931de0d6eedb29ee09f7dcc156e7606f3ef887d0b8a96a97a5164f1d0a097e7d20a64a26f3286e067cf34747c88a7fe3ac04d2b2ac182f6146e988c4c7f66b17d6e5d3c6a5dbccbd896f19fd6c7435cd1b78c7f876f863c93ca2bf4c6d5c42be169c9a7a64143a4793e0c3f370cf291d663fd36e20c26caea5dc30c2b0
