:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ctr_pco_ddok.fml
:: Utworzony: 23.12.2015
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności CTR_PCO_DDOK - Rejestracja podziałów dla dokumentu
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Rejestracja podziałów dla dokumentu - główna formuła czynności CTR_PCO_DDOK
::----------------------------------------------------------------------------------------------------------------------


\bl_skidxd_mb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula na wartosc poczatkowa pola SKIDXD.SKID_MB. Formula wypelnia
::       pole wartoscia domyslna jezeli jest przypisany do rejestru domyslny
::       model dla controllingu lub jezeli jest zdefiniowany jeden model
::   WY: _ref - modelu dla konreolingu
::  OLD: \bl_skidxd_mb/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
SKIDXD.cntx_psh();
_ref_org:={? SKIDXD.get() || SKIDXD.SKID_MB || null ?};
SKIDXD.cntx_pop();
SKID_MBN.cntx_psh();
SKID_MBN.prefix();
_ref:=SKIDXD.DOK().DOK_REJ().SKID_MB;
{? _ref
|| {? _ref_org<>_ref
   || UD_POM.JORG:=''; SKIDXD.JORG:=null;
      UD_POM.OKOSZ:=''; SKIDXD.OKOSZ:=null;
      UD_POM.PBUD:=''; SKIDXD.PBUD:=null;
      UD_POM.WYM4:=''; SKIDXD.WYM4:=null;
      UD_POM.WYM5:=''; SKIDXD.WYM5:=null
   ?}
|? _ref_org<>null
|| _ref:=_ref_org
|? SKID_MBN.first() & ~SKID_MBN.next()
|| _ref:=SKID_MBN.ref
|| _ref:=null
?};
SKID_MBN.cntx_pop();
UD_POM.SKID_MB:=null;
_ref


\be_skidxd_mb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula przed redakcja pola SKIDXD.SKID_MB. Blokuje redakcje pola
::       jezeli jest zdefiniowany dokladnie jeden model
::   WY: 1 - mozna redagowac pole
::       0 - wpp
::  OLD: \be_skidxd_mb/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBN.cntx_psh();
SKID_MBN.prefix();
_rr:=SKID_MBN.first() & SKID_MBN.next();
SKID_MBN.cntx_pop();
UD_POM.SKID_MBN:=SKIDXD.SKID_MB;
exec('enable_wart','control',1);
_rr


\beskidxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Przed redakcja tabel z podzialami
::  OLD: \beskidxd/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? exec('dok_chk_lock','dok_fks')=0 || return(0) ?};
SKID_MBN.cntx_psh();
SKID_MBN.prefix();
{? ~SKID_MBN.first()
|| FUN.info('Nie zdefiniowano w systemie modelu dla controllingu.'@);
   _ok:=0
?};
SKID_MBN.cntx_pop();
SKID_MBN.win_dict('SLO');
_ok


\ar_skidxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Rekord po tabel z podzialami
::----------------------------------------------------------------------------------------------------------------------
po_ok:=1;
_czykurs:=1;
_ref_mb:=cur_tab(1,1).SKID_MB;
SKID_MBP.cntx_psh();
SKID_MBP.index('LP');
SKID_MBP.prefix(_ref_mb);
_wym:=obj_new(5); _naz:=obj_new(5); _typ:=obj_new(5);
{? SKID_MBP.first()
|| _wym[1]:=SKID_MBP.UD_SCH().SYMBOL;
   _naz[1]:=-SKID_MBP.NAZ;
   _typ[1]:=SKID_MBP.UD_SCH().UD_TYP().SYMBOL;
   {! _i:=2..5
   |! {? SKID_MBP.next()
      || _wym[_i]:=SKID_MBP.UD_SCH().SYMBOL;
         _naz[_i]:=SKID_MBP.NAZ;
         _typ[_i]:=SKID_MBP.UD_SCH().UD_TYP().SYMBOL
      || _wym[_i]:=_naz[_i]:=_typ[_i]:=''
      ?}
   !}
|| {! _i:=1..5 |! _wym[_i]:=_naz[_i]:=_typ[_i]:='' !}
?};
SKID_MBP.cntx_pop();
{? _wym[1]<>''
|| {? ~+UD_POM.PBUD || FUN.info('Nie wskazano elementu wymiaru \' %1\'.'@[_naz[1]]); &po_ok; return('PBUD') ?};
   {? ~exec('chk_skl','control',_typ[1],UD_POM.PBUD,0,_wym[1])
   || FUN.info('Podany element wymiaru \' %1 \' nie występuje w schemacie.'@[_naz[1]]); &po_ok; return('PBUD')
   ?};
   {? cur_tab(1,1).PBUD=null
   || {? UD_TYP.prefix(_typ[1],_typ[1]); UD_TYP.first()
      || {? UD_SKL.prefix(UD_TYP.ref(),UD_POM.PBUD,UD_POM.PBUD); UD_SKL.first()
         || {? UD_SKL.LISTA='T'
            || SKIDXDUD.index('POZ'); SKIDXDUD.prefix(UD_SKL.ref());
               {? SKIDXDUD.first() & {? var_pres('FORM')>0 || cur_tab(1,1)<>FORM || 1 ?}
               || {? SKIDXDUD.WART_IL='W'
                  || _wal_nar:=exec('wal_nar','dok_fks');
                     {? cur_tab(1,1)=EPODZ
                     || {? SKIDXDUD.WSK_WAL='N'
                        || cur_tab.WAL:=_wal_nar
                        || cur_tab.WAL:=EDOKUM.WAL
                        ?}
                     |? SKIDXDUD.WSK_WAL='N'
                     || cur_tab(1,1).WAL:=_wal_nar
                     |? cur_tab(1,1).WAL=null
                     || cur_tab(1,1).WAL:={? SKIDXDUD.WAL<>null || SKIDXDUD.WAL || _wal_nar ?}
                     ?};
                     _typ_d:={? cur_tab(1,1)=EPODZ || 'VAT' || DOK.DOK_REJ().SLO().KOD ?};
                     _dalej:=1;
                     {? cur_tab(1,1)=EPODZ
                     || _dalej:=0;
                        {? SKIDXDUD.WSK_WAL='N'
                        || _dalej:=(EDOKUM.WAL=_wal_nar)
                        || _dalej:=1
                        ?}
                     ?};
                     {? cur_tab(1,1).WART=0 & _dalej
                     || _ile_juz:=0;
                        SKIDXDUD.cntx_psh(); SKIDXDUD.index('POZ'); SKIDXDUD.prefix(cur_tab(1,1).PBUD);
                        {? (_typ_d='VAT' | _typ_d='SAD') & (-(6+menu_txt()))<>'popraw' & SKIDXDUD.WART_IL='W' &
                           {? {? var_pres('FORM')>0 || cur_tab(1,1)<>EPODZ || 1 ?}
                           || (SKIDXDUD.WSK_WAL='N' | (SKIDXDUD.WSK_WAL='T' & (SKIDXDUD.WAL=_wal_nar | SKIDXDUD.WAL=null)))
                           || 1
                           ?}
                        || cur_tab(1,1).cntx_psh();
                           {? cur_tab(1,1)=SKIDXD
                           || SKIDXD.index('SKIDXD'); SKIDXD.prefix(DOK.ref(),SKIDXD.SKID_MB)
                           || EPODZ.index('EDOKUM'); EPODZ.prefix(EDOKUM.ref(),EPODZ.SKID_MB)
                           ?};
                           {? cur_tab(1,1).first()
                           || {! |?
                                 {? (SKIDXDUD.prefix(cur_tab(1,1).PBUD);
                                     SKIDXDUD.first() & SKIDXDUD.WART_IL='W')
                                 || {? cur_tab()=EPODZ
                                    || {? EPODZ.WAL=EDOKUM.WAL || _ile_juz+=cur_tab.WART ?}
                                    || _ile_juz+=cur_tab.WART
                                    ?}
                                 ?};
                                 cur_tab(1,1).next()
                              !}
                           ?};
                           cur_tab(1,1).cntx_pop()
                        ?};
                        SKIDXDUD.cntx_pop();
                        cur_tab(1,1).WART:=PAR_WYDR.RPAR3-_ile_juz;
                        {? cur_tab(1,1).WART<0 || cur_tab(1,1).WART:=0 ?}
                     ?};
                     cur_tab(1,1).JM:=null
                  || cur_tab(1,1).JM:=SKIDXDUD.JM; cur_tab(1,1).WAL:=null;
                     {? _czykurs || cur_tab(1,1).WARTW:=cur_tab(1,1).KURS:=0 ?}
                  ?};
                  SSTALE.AR();
                  UD_POM.WART_IL:=SKIDXDUD.WART_IL
               ?};
               cur_tab(1,1).PBUD:=UD_SKL.ref()
            || FUN.info('Wybrana pozycja nie jest wykorzystywana w ewidencji.'@); _ret:=0
            ?}
         ?}
      ?}
   ?}
?};
{? _wym[2]<>''
|| {? ~+UD_POM.JORG
   || FUN.info('Nie wskazano elementu wymiaru \'%1 \'.'@[_naz[2]]); &po_ok; return('JORG')
   ?};
   {? ~exec('chk_skl','control',_typ[2],UD_POM.JORG,0,_wym[2])
   || FUN.info('Podany element wymiaru \'%1\' nie występuje w schemacie.'@[_naz[2]]); &po_ok; return('JORG')
   ?};
   {? cur_tab(1,1).JORG=null
   || {? UD_TYP.prefix(_typ[2],_typ[2]); UD_TYP.first()
      || {? UD_SKL.prefix(UD_TYP.ref(),UD_POM.JORG,UD_POM.JORG); UD_SKL.first()
         || cur_tab(1,1).JORG:=UD_SKL.ref()
         ?}
      ?}
   ?}
?};
{? _wym[3]<>''
|| {? ~+UD_POM.OKOSZ
   || FUN.info('Nie wskazano elementu wymiaru \'%1\'.'@[_naz[3]]); &po_ok; return('OKOSZ')
   ?};
   {? ~exec('chk_skl','control',_typ[3],UD_POM.OKOSZ,0,_wym[3])
   || FUN.info('Podany element wymiaru \'%1\' nie występuje w schemacie.'@[_naz[3]]); &po_ok; return('OKOSZ')
   ?};
   {? cur_tab(1,1).OKOSZ=null
   || {? UD_TYP.prefix(_typ[3],_typ[3]); UD_TYP.first()
      || {? UD_SKL.prefix(UD_TYP.ref(),UD_POM.OKOSZ,UD_POM.OKOSZ); UD_SKL.first()
         || cur_tab(1,1).OKOSZ:=UD_SKL.ref()
         ?}
      ?}
   ?}
?};
{? _wym[4]<>''
|| {? ~+UD_POM.WYM4
   || FUN.info('Nie wskazano elementu wymiaru \'%1\'.'@[_naz[4]]); &po_ok; return('WYM4')
   ?};
   {? ~exec('chk_skl','control',_typ[4],UD_POM.WYM4,0,_wym[4])
   || FUN.info('Podany element wymiaru \'%1\' nie występuje w schemacie.'@[_naz[4]]); &po_ok; return('WYM4')
   ?};
   {? cur_tab(1,1).WYM4=null
   || {? UD_TYP.prefix(_typ[4],_typ[4]); UD_TYP.first()
      || {? UD_SKL.prefix(UD_TYP.ref(),UD_POM.WYM4,UD_POM.WYM4); UD_SKL.first()
         || cur_tab(1,1).WYM4:=UD_SKL.ref()
         ?}
      ?}
   ?}
?};
{? _wym[5]<>''
|| {? ~+UD_POM.WYM5
   || FUN.info('Nie wskazano elementu wymiaru \'%1\'.'@[_naz[5]]); &po_ok; return('WYM5')
   ?};
   {? ~exec('chk_skl','control',_typ[5],UD_POM.WYM5,0,_wym[5])
   || FUN.info('Podany element wymiaru \'%1\' nie występuje w schemacie.'@[_naz[5]]); &po_ok; return('WYM5')
   ?};
   {? cur_tab(1,1).WYM5=null
   || {? UD_TYP.prefix(_typ[5],_typ[5]); UD_TYP.first()
      || {? UD_SKL.prefix(UD_TYP.ref(),UD_POM.WYM5,UD_POM.WYM5); UD_SKL.first()
         || cur_tab(1,1).WYM5:=UD_SKL.ref()
         ?}
      ?}
   ?}
?};
SKIDXDUD.cntx_psh();
SKIDXDUD.index('POZ');
SKIDXDUD.prefix(cur_tab(1,1).PBUD);
_pbud_def:=SKIDXDUD.first();
SKIDXDUD.cntx_pop();
{? ~_pbud_def
|| echo('Brak zapisu w SKIDXDUD.');
   FUN.info('Brak uzupełnionej definicji pozycji budżetowej.'@); &po_ok;
   echo();
   return('PBUD')
|? ~cur_tab(1,1).WART
|| FUN.info('Nie podano wartości.'@); &po_ok; return('WART')
|? UD_POM.WART_IL='W' & _czykurs & ~cur_tab(1,1).WAL
|| FUN.info('Nie podano waluty.'@); &po_ok; return('WAL')
|? UD_POM.WART_IL='W' & _czykurs & cur_tab(1,1).WAL<>exec('wal_nar','dok_fks') & ~cur_tab(1,1).KURS
|| FUN.info('Nie podano kursu waluty.'@); &po_ok; return('KURS')
|? UD_POM.WART_IL='W' & _czykurs & ~cur_tab(1,1).WARTW & cur_tab(1,1).WAL<>exec('wal_nar','dok_fks')
|| FUN.info('Nie podano wartości w walucie.'@); &po_ok; return('WARTW')
|? cur_tab(1,1)=SKIDXD
|| UD_SKL.index('SYMBOL'); UD_TYP.index('SYMBOL');
   SKIDXD.AN:=KONTO.K1; exec('ust_pods','control')
?}


\be_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Przed redakcja pol tabel z podzialami
::  OLD: \beskxdf/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_afld()='WAL'
|| {? UD_POM.WART_IL='I' |
      (_edit:=0; SKIDXDUD.cntx_psh(); SKIDXDUD.index('POZ'); SKIDXDUD.prefix(SKIDXD.PBUD);
       {? SKIDXDUD.first() & SKIDXDUD.WSK_WAL='N' || _edit:=1 ?}; SKIDXDUD.cntx_pop(); _edit)
   || 0
   || {? FINFO.SLWAL<>0
      || FINFO.SLWAL().SLU();
         exec('slu_okn','slo_slu')
      ?};
      1
   ?}
|? cur_afld()='WARTW' | cur_afld()='KURS'
|| {? UD_POM.WART_IL='I'
   || 0
   || {? SKIDXD.WAL=null | SKIDXD.WAL=exec('wal_nar','dok_fks')
      || 0
      || 1
      ?}
   ?}
|| 1
?}


\ae_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Po redakcji pól z wartosciami podziałów
::----------------------------------------------------------------------------------------------------------------------
_jedn:=1;
RS.index('RS');
RS.prefix();
{? SKIDXD.WAL<>0 & FINFO.SLWAL & RS.find_key(FINFO.SLWAL().SLU().WZ)
|| {? ($(RS.TAB+'.prefix();'+RS.TAB+'.blank(1);'+RS.TAB+'.'+RS.KOD+':=SKIDXD.WAL().KOD;'+RS.TAB
      +'.find_rec'))()
   || _jedn:=($(RS.TAB+'.J'))();
      {? _jedn=0 || _jedn:=1 ?}
   ?};
   _wal_nar:=exec('wal_nar','dok_fks');
   {? _wal_nar<>null & SKIDXD.WAL=_wal_nar
   || SKIDXD.WARTW:=SKIDXD.KURS:=0
   ?}
?};
{? cur_afld()='WART' & fld()
|| {? SKIDXD.PBUD
   || SKIDXD.WART:=SKIDXD.WART$exec('dokl','control',SKIDXD.PBUD)
   ?};
   {? SKIDXD.KURS
   || SKIDXD.WARTW:=(SKIDXD.WART*_jedn/SKIDXD.KURS)$2
   |? SKIDXD.WARTW
   || SKIDXD.KURS:=(SKIDXD.WART*_jedn/SKIDXD.WARTW)$6
   ?}
|? cur_afld()='KURS' & fld()
|| {? SKIDXD.WART & ~SKIDXD.WARTW
   || SKIDXD.WARTW:=(SKIDXD.WART*_jedn/SKIDXD.KURS)$2
   || {? SKIDXD.WARTW || SKIDXD.WART:=(SKIDXD.WARTW*SKIDXD.KURS/_jedn)$2 ?}
   ?}
|? cur_afld()='WARTW' & fld()
|| {? SKIDXD.KURS
   || {? ~SKIDXD.WART || SKIDXD.WART:=(SKIDXD.WARTW*SKIDXD.KURS/_jedn)$2 ?}
   || {? SKIDXD.WART || SKIDXD.KURS:=(SKIDXD.WART*_jedn/SKIDXD.WARTW)$6 ?}
   ?}
|? cur_afld()='WAL'
|| {? SKIDXD.WAL=null
   || SKIDXD.WARTW:=0;
      SKIDXD.KURS:=0
   ?};
   exec('enable_wart','control',1)
?};
1


\grdbskxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2006]
:: OPIS: Przed usuwaniem grupowym rekordow w SKIDXD
::  OLD: \grdbskxd/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
iledous:=SKIDXD.sel_size; 1


\grdaskxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2006]
:: OPIS: Po usuwaniu grupowym rekordow w SKIDXD
::  OLD: \grdaskxd/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Liczba usuniętych podziałów dla controllingu: '+$(iledous-SKIDXD.sel_size()));
&iledous; 1


\akc_podz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Akceptacja podzialow dla controllingu
::  OLD: \akc_podz/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_komunik:=~DOK.sel_size(); _powiodl:=0;
{? exec('czy_okr_zam_con','konsolidacja',_komunik)
|| {? ~_komunik
   || blad+=1
   ?}
|? DOK.r_lock(1,1)
|| {? DOK.get()
   || {? exec('spr_dok1','dok_fks')
      || {? _komunik || exec('tab_dok','dok_fks',1) || KONT_ZG.erase() ?};
         {? exec('spr_dok','dok_fks',_komunik)
         || {? _komunik
            || _powiodl:=1
            || ile_akc+=1
            ?};
            DOK.WSK_XD:='T'
         || {? _komunik
            || _powiodl:=2
            || blad+=1; niezg+=1
            ?};
            DOK.WSK_XD:='N'
         ?};
         DOK.cntx_psh(); DOK.prefix(); DOK.put(); DOK.cntx_pop();
         DOK.r_unlock();
         {? _komunik || exec('tab_dokd','dok_fks') ?};
         {? _powiodl=1
         || FUN.info('Operacja akceptacji podziałów controllingowych powiodła się.'@)
         |? _powiodl=2
         || FUN.info('Operacja akceptacji podziałów controllingowych nie powiodła się.'@)
         ?}
      |? _komunik
      || FUN.info('Operacja akceptacji podziałów controllingowych nie powiodła się.\n'
                 'Nieprawidłowo zdefiniowano podziały dla controllingu.'@)
      ?}
   || DOK.r_unlock();
      {? _komunik
      || FUN.info('Operacja akceptacji podziałów controllingowych nie powiodła się.'@)
      || blad+=1
      ?}
   ?}
|| {? _komunik
   || FUN.info('Dokument obsługuje inny operator.\nZabroniony dostęp.'@)
   || blad+=1; lock+=1
   ?}
?}


\beakcpod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Formula przed akcja grupowa akceptacji podzialow controllingowych dla dokumentow
::  OLD: \beakcpod/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_okr_zam_con','konsolidacja',1)
|| 0
|? FUN.ask('Zaakceptować podziały controllingowe w zaznaczonych dokumentach?'@)
|| sel_nchk();
   ile:=DOK.sel_size();  exec('tab_dok','dok_fks',1);
   ile_akc:=blad:=lock:=niezg:=0; 1
|| 0
?}


\aeakcpod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Formula po akcji grupowej akceptacji podzialow controllingowych dla dokumentow
::  OLD: \aeakcpod/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('tab_dokd','dok_fks');
FUN.info('Operacja zakończona.\n'+
        form('Zaznaczono dokumentów: ',65)+form(ile,5)+'\n'+
        form('Wykonano akceptację podziałów controllingowych dla dokumentów: ',65)+form(ile_akc,5)+'\n'+
        {? blad>0
        || form('Dokumenty, dla których operacja się nie powiodła: ',65)+form(blad,5)+
           {? niezg>0
           || '\n'+form(' w tym dokumenty, w których wykryto niezgodność pomiędzy kwotami',65)+form(' ',5)+
              '\n'+form(' w pozycjach dokumentu a kwotami w podziałach controllingowych: ',65)+form(niezg,5)
           || ''
           ?}+
           {? lock>0
           || '\n'+form(' w tym dokumenty obsługiwane przez innych operatorów: ',65)+form(lock,5)
           || ''
           ?}
        || ''
        ?});
&ile; &ile_akc; &blad; &lock; &niezg


\wyc_podz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Wycofywanie akceptacji podzialow dla controllingu
::  OLD: \wyc_podz/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_komunik:=~DOK.sel_size();
{? exec('czy_okr_zam_con','konsolidacja',_komunik)
|| {? ~_komunik
   || blad+=1
   ?}
|? DOK.r_lock(1,1)
|| {? DOK.get()
   || {? DOK.WSK_XD<>'N'
      || DOK.WSK_XD:='N';
         DOK.cntx_psh(); DOK.prefix(); DOK.put(); DOK.cntx_pop();
         {? _komunik
         || FUN.info('Wycofano akceptację podziałów controllingowych.'@)
         || ile_wyc+=1
         ?}
      || {? _komunik
         || FUN.info('Podziały controllingowe w dokumencie nie są zaakceptowane.'@)
         || blad+=1; ile_wycw+=1
         ?}
      ?}
   || {? _komunik
      || FUN.info('Operacja akceptacji podziałów controllingowych nie powiodła się.'@)
      || blad+=1
      ?}
   ?};
   DOK.r_unlock()
|| {? _komunik
   || FUN.info('Dokument obsługuje inny operator.\nZabroniony dostęp.'@)
   || blad+=1; lock+=1
   ?}
?}


\bewycpod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Formula przed akcja grupowa wycofywania akceptacji podzialow controllingowych dla dokumentow
::  OLD: \bewycpod/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_okr_zam_con','konsolidacja',1)
|| 0
|? FUN.ask('Wycofać akceptację podziałów controllingowych w zaznaczonych dokumentach?'@)
|| sel_nchk();
   ile:=DOK.sel_size(); ile_wyc:=blad:=lock:=ile_wycw:=0; 1
|| 0
?}


\aewycpod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Formula po akcji grupowej wycofywania akceptacji podzialow controllingowych dla dokumentow
::  OLD: \aewycpod/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------

{? blad>0
||  {? ile_wycw>0
    ||  {? lock>0
         || FUN.info('Operacja zakończona.\n%1 \n%2 \n%3 \n%4 \n%5'@[form('Zaznaczono dokumentów: '@,65)+' '+form(ile,5) ,form('Wycofano akceptację podziałów controllingowych dla dokumentów: '@,65)+' '+form(ile_wyc,5),form('Dokumenty, dla których operacja się nie powiodła: '@,65)+form(blad,5),form(' w tym dokumenty niezaakceptowane controllingowo: '@,65)+form(ile_wycw,5),form(' w tym dokumenty obsługiwane przez innych operatorów: '@,65)+form(lock,5)])
         || FUN.info('Operacja zakończona.\n%1 \n%2 \n%3 \n%4'@[form('Zaznaczono dokumentów: '@,65)+' '+form(ile,5) ,form('Wycofano akceptację podziałów controllingowych dla dokumentów: '@,65)+' '+form(ile_wyc,5),form('Dokumenty, dla których operacja się nie powiodła: '@,65)+form(blad,5),form(' w tym dokumenty niezaakceptowane controllingowo: '@,65)+form(ile_wycw,5)])
         ?}
    ||   FUN.info('Operacja zakończona.\n%1 \n%2 \n%3'@[form('Zaznaczono dokumentów: '@,65)+' '+form(ile,5) ,form('Wycofano akceptację podziałów controllingowych dla dokumentów: '@,65)+' '+form(ile_wyc,5),form('Dokumenty, dla których operacja się nie powiodła: '@,65)+form(blad,5)])
     ?}
|| FUN.info('Operacja zakończona. \n%1 \n%2 '@[form('Zaznaczono dokumentów: '@,65)+' '+form(ile,5), form('Wycofano akceptację podziałów controllingowych dla dokumentów: '@,65)+' '+form(ile_wyc,5)])
?};
&ile; &ile_wycw; &blad; &lock; &ile_wyc

:Sign Version 2.0 jowisz:1045 2023/10/10 08:44:17 102744f6b197bc786d2ab5838a347a456e38d156867db7ebf7caddbd5017ccf65115e03752e07ae6992a1f97045c75b37722e8f4e52f1ce4055e65b9009318ccc601a76aac338c8a957c8f99af0b7e9914af7d1f2b2ab5a68d8d5953d7d7b87dd46440d9385d14db88dbf0f963fd42c178eec5d3718f8df3928e20f631c79c08
