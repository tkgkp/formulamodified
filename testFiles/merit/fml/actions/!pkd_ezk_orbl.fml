:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_ezk_orbl.fml
:: Utworzony: 27.05.2015
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa czynności PKD_EZK_ORBL - Rejestracja wyników badań.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rejestracja wyników badań - główna formuła czynności.
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::# access=exec('run_cond_p','pkd')
::
::# kind=WE, symbol=P, type=_P, name=Wskazanie pracownika, required=T, keyref=T
::
_par:=params_get();
_mp:=_par.mp;
_in:=_par.in;
_akcja:=_mp.akcja();

_result:='';

_uidref:=exec('ref2uid','#table',_in.P);
{? _uidref=''
|| _result:=exec('error','!pkd_ezk_orbl')

|? _mp.isMicro()
|| {? _akcja='START'
::    Wejście do okienka w ramach obszaru roboczego - uruchomienie procesu i pozostawienie go na liście zadań.
   || _mp.keyRef(_uidref);
      _mp.keep()

   |? _akcja='STOP'
::    Wyjście z okienka w ramach obszaru roboczego - anulowanie procesu.
   || _mp.delRef(_uidref);
      _mp.cancel()

   |? _akcja<>''
   || _result:='Czynność %1 nie obsługuje akcji %2.'@ [_mp.buf_act.UID,_akcja]

   ?}

|| {? _akcja='ZAKOŃCZ'
   || _mp.done()

   |? _mp.pathTodo()
   || _value:=exec('select','!pkd_ezk_orbl',_in.P);
      {? type_of(_value)=type_of('')
      || _result:=_value
      |? _value
      || _mp.done()
      || _mp.keep()
      ?}
   ?}
?};

{? _result<>''
:  Obsługa błędów
|| _mp.error(_result);
   FUN.emsg(_result)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR[17.00]
:: OPIS: Rejestracja wyników badań - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('desc','pracownik',params_get().mp);
{? _tab.ZAW_DANE='T'
|| {? _tab.OBCY='T'
   || 'Zarejestruj wyniki badań: %1 %2: Paszport - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT,_tab.T,_tab.IP]
   |? +_tab.PESEL
   || 'Zarejestruj wyniki badań: %1 %2: PESEL - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PESEL,_tab.T,_tab.IP]
   || 'Zarejestruj wyniki badań: %1 %2: Data urodzenia - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.UR_DATA,_tab.T,_tab.IP]
   ?}
|| 'Zarejestruj wyniki badań'@@
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Słownik komunikatów o błędach.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Rejestrowanie wyników badań niemożliwe.\nNie znaleziono pracownika.'


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa czynności wywołanej z listy zadań
::   WE: _a - Wskazanie pracownika.
::   WY: Komunikat o błędzie lub informacja o wyjściu z okna poprzez wywołanie sel_exit() - czyli "Zakończ".
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
P.prefix();
{? type_of(_a)=type_of(null()) & _a<>null() & P.seek(_a)
|| OSOBA.cntx_psh();
   P.OSOBA();
   BDO.cntx_psh();
   BDO.index('PDTO');
   BDO.prefix(P.ref());
   BDO.win_sel(exec('wnd','!pkd_ezk_orbl'));
   BDO.win_edit('RED');
   BDS.cntx_psh();
   BDS.index('ST');
   _ret:=BDO.select();
   BDS.cntx_pop();
   BDO.cntx_pop();
   OSOBA.cntx_pop()
|| _ret:=exec('error','!pkd_ezk_orbl')
?};
P.cntx_pop();
_ret


\wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Przygotowanie okna wertowania badań lekarskich.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_mode:='maximized';

_czyZ:=exec('dest','f_zatr',P.F_ZATR,'KOD')='Z';
_before:=
   {? _czyZ
   || "mb_exec('GRP_EDISP_P_INFO_Z')"
   || "mb_exec('GRP_EDISP_P_INFO_P')"
   ?};

_wnd:=BDO.grp_make('Badania lekarskie'@,_before,'bdo_weri',,,,,_mode);
BDO.grp_edit(_wnd,P,{? _czyZ || 'INFO_Z' || 'INFO_P' ?},,,,,,_mode);
BDO.grp_splt(_wnd,,'horizontal','bdo');
BDO.grp_sel(_wnd,,'WER',,"grp_disp(BDS,'WER')",,,,,,,,_mode,,1);
BDO.grp_splt(_wnd,'bdo','vertical','bds');
BDO.grp_sel(_wnd,BDS,'WER',,,,,,"{? grp_empty(BDO,'WER') || return('#disable') || BDS.prefix(BDO.ref()) ?}",,,,_mode);

BDO.win_fml('WER',,'DTO',,'ICON_BEFORE',"exec('x_zalacz_icon','zalacz')");

_wnd


\bdo_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Przed modyfikacją rekordu. Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli BDO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
S_ZUS.cntx_psh();
_kod:=BDO.WYNIK().KOD;
S_ZUS.cntx_pop();

: Porządki - zerowanie pól, które są "niedostępne".
{? _kod<>'23'
|| exec('blank','#field',BDO,,'DTUZ')
?};
{? 1+_kod<>'2'
|| exec('blank','#field',BDO,,'DTNB')
?};
{? 1+_kod<>'3'
|| exec('blank','#field',BDO,,'OPNIS','UWAGI')
?};

: Nadanie wartości polu technicznemu BDO.DT, wykorzystywanemu do ustalenia kolejności zdarzeń.
SLO_KOD.cntx_psh();
BDO.DTZ:=
   {? '|WSTĘPNE|OKRES|KONTROL|'*('|%1|' [BDO.TYP().KOD])
   || {? _kod='21'
      || BDO.DTNB
      |? _kod='23'
      || BDO.DTUZ
      || BDO.DTO
      ?}
   || date(0,0,0)
   ?};
SLO_KOD.cntx_pop();

1


\bdo_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli BDO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bdo_modb','!pkd_ezk_orbl')


\bdo_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli BDO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bdo_modb','!pkd_ezk_orbl')


\bdo_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wyzwalacz "Usuń - przed" dla tabeli BDO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',BDS,'ST',BDO.ref()) &
exec('del_ndx','#table',ZALACZ,'NAG',BDO.uidref())


\bdo_wynik_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła zwraca opis wyniku orzeczenia na podstawie wartości pola BDO.WYNIK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? BDO.WYNIK<>null() & BDO.WYNIK().get()
|| S_ZUS.memo_line('OPIS')
|| ''
?}


\bdo_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła odpowiedzialna za dynamiczne ustawianie właściwości pól tabeli BDO. Formuła wywoływana jest w dwóch
::       kontekstach pracy:
::          - Po redagowaniu konkretnego pola, które determinuje właściwości wyświetlania innych pól.
::          - Przed wyświetleniem okna redagowania (przed właściwymi akcjami Dołącz, Popraw, Wyświetl), ustawia
::            właściwości wszystkich pól (wymagających tego).
::       Kontekst pracy jest określany na podstawie argumentu wywołania.
::   WE: [_a] [STRING] - Kontekst pracy:
::             '1' - Obsługa jednego pola [domyślnie].
::             '*' - Obsługa wszystkich pól.
::       [_b] [TABLE]  - Uchwyt tabeli, w oknie redagowania której znajdują sie pola. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęta bieżąca tabela.
::       [_c] [STRING] - Akronim okna, w którym mają być ustawione właściwości pól. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęte bieżące okno.
::       [_d] [STRING] - Akronim pola, którego wartość determinuje właściwości wyświetlania innych pól. Parametr ma
::             znaczenie wyłącznie dla _a='1'. [Domyślnie: bieżące pole].
::   WY: 0 - Błąd argumentów wywołania.
::       1 - Argumenty poprawne (właściwości ustawione).
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (_a='1' | _a='*') || _a || '1' ?};
{? var_pres('_b')=type_of(BDO)
|| _tab:=_b
|? _tryb='1'
|| _tab:=cur_tab(1,1)
|| return(0)
?};
{? var_pres('_c')=type_of('')
|| _we:=_c
|? _tryb='1'
|| _we:=cur_win(1,1)
|| return(0)
?};
{? var_pres('_d')=type_of('')
|| _fld:=_d
|? _tryb='1'
|| _fld:=cur_afld()
|| _fld:=''
?};

{? _fld='' | _fld='WYNIK'
|| _kod:=BDO.WYNIK().KOD;

   _sval:=$(1+_kod='2');
   _tab.efld_opt(_we,'enable='+_sval,BDO,'DTNB');
   _sval:=$(_kod='21');
   _tab.efld_opt(_we,'mark='+_sval,BDO,'DTNB');

   _sval:=$(_kod='23');
   _tab.efld_opt(_we,'enable='+_sval,BDO,'DTUZ');
   _tab.efld_opt(_we,'mark='+_sval,BDO,'DTUZ');

   _sval:=$(1+_kod='3');
   _tab.efld_opt(_we,'enable='+_sval,BDO,'OPNIS');
   _tab.efld_opt(_we,'enable='+_sval,BDO,'UWAGI');

   POLA_GRP.TXT_1:=exec('bdo_wynik_opis','!pkd_ezk_orbl')
?};


1


\bdo_wynik_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Po redagowaniu pola BDO.WYNIK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bdo_efld_opt','!pkd_ezk_orbl')


\bdo_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Wyświetl - przed" w oknie WER tabeli BDO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bdo_efld_opt','!pkd_ezk_orbl','*',BDO,'RED');
BDO.display()


\bdo_db
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Dołącz" dla tabeli BDO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=exec('stanowiska_cfg','!pkd_ezk_orbl');
params_set('cfg',_cfg);
{? _cfg.HST.size()=1
|| _cfg.BDS.TAB.blank();
   _cfg.BDS.TAB.ST:=_cfg.HST.ST;
   _cfg.BDS.TAB.add()
?};

BDO.blank();
BDO.memo_set(,'OPNIS');
BDO.memo_set(,'UWAGI');
BDO.memo_set(,'ADNOT');
{!
|? exec('bdo_efld_opt','!pkd_ezk_orbl','*',BDO,'RED');
   {? BDO.edit("params_set(params_get()); exec('bdo_ae','!pkd_ezk_orbl')")
   || _msg:='';
      _stne:=0;
      do();
      {? ~(BDO.add() & BDO.memo_put(,'OPNIS') & BDO.memo_put(,'UWAGI') & BDO.memo_put(,'ADNOT'))
      || _msg:='Dołączenie zapisu nie powiodło się. Spróbuj ponownie.'@
      |? ~exec('stanowiska_zapisz','!pkd_ezk_orbl',BDO.ref(),_cfg.BDS.TAB)
      || undo();
         _msg:='Zapisanie stanowisk dla badania nie powiodło się. Zweryfikuj stanowiska i spróbuj ponownie.'@;
         _stne:=1
      ?};
      {? end()
      || 0
      || {? _stne
         || _cfg.BDS.TAB.erase()
         ?};
         {? _msg=''
         || _msg:='Wystąpił nieprzewidziany problem z zapisaem danych. Spróbuj ponownie.'@
         ?};
         FUN.info(_msg);
         1
      ?}
   ?}
!}


\bdo_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Popraw" dla tabeli BDO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=exec('stanowiska_cfg','!pkd_ezk_orbl');
params_set('cfg',_cfg);

exec('stanowiska_czytaj','!pkd_ezk_orbl',BDO.ref(),_cfg.BDS.TAB);
BDO.memo_get(,'OPNIS');
BDO.memo_get(,'UWAGI');
BDO.memo_get(,'ADNOT');
{!
|? exec('bdo_efld_opt','!pkd_ezk_orbl','*',BDO,'RED');
   {? BDO.edit("params_set(params_get()); exec('bdo_ae','!pkd_ezk_orbl')")
   || _msg:='';
      _stne:=0;
      do();
      {? ~(BDO.put() & BDO.memo_put(,'OPNIS') & BDO.memo_put(,'UWAGI') & BDO.memo_put(,'ADNOT'))
      || _msg:='Poprawienie zapisu nie powiodło się. Spróbuj ponownie.'@
      |? ~exec('stanowiska_zapisz','!pkd_ezk_orbl',BDO.ref(),_cfg.BDS.TAB)
      || undo();
         _msg:='Aktualizacja stanowisk dla badania nie powiodła się. Zweryfikuj stanowiska i spróbuj ponownie.'@;
         _stne:=1
      ?};
      {? end()
      || 0
      || {? _stne
         || _cfg.BDS.TAB.erase()
         ?};
         {? _msg=''
         || _msg:='Wystąpił nieprzewidziany problem z zapisaem danych. Spróbuj ponownie.'@
         ?};
         FUN.info(_msg);
         1
      ?}
   ?}
!}


\bdo_sb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji i przycisku "Stanowiska" dla tabeli BDO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
params_set(_par);
_par.cfg.BDS.TAB.select();
''


\bdo_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Przed wyświetleniem rekordu tabeli BDO.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
POLA_GRP.TXT_1:=exec('bdo_wynik_opis','!pkd_ezk_orbl');
0


\bdo_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Rekord - po" dla tabeli BDO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? (_chk:=__CHK.record(BDO,,'DTS','TYP','DTO','WYNIK'))<>''
|| return(_chk)
?};

_d0:=date(0,0,0);

{? BDO.DTO<BDO.DTS
|| FUN.info('"%1" nie może być wcześniejsza niż "%2".'@ [MS.name(BDO,'DTO'),MS.name(BDO,'DTS')]);
   return('DTO')
?};

_kod:=BDO.WYNIK().KOD;
{? _kod='21' & (_chk:=__CHK.record(BDO,,'DTNB'))<>''
|| return(_chk)

|? 1+_kod='2' & BDO.DTNB<>_d0 & BDO.DTNB<BDO.DTO
|| FUN.info('"%1" nie może być wcześniejsza niż "%2".'@ [MS.name(BDO,'DTNB'),MS.name(BDO,'DTO')]);
   return('DTNB')

|? _kod='23' & (_chk:=__CHK.record(BDO,,'DTUZ'))<>''
|| return(_chk)
?};

_par:=params_get();
{? ~_par.cfg.BDS.TAB.first()
|| FUN.info('Nie wskazano stanowisk dla badania lekarskiego.'@);
   return(0)
?};

''


\bdo_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Po odświeżeniu" okienka WER tabeli BDO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
grp_disp(BDS,'WER')


\stanowiska_cfg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła buduje tabelę i okna wykorzystywane przy redagowaniu stanowisk dla badań.
::   WE:
::   WY: Tablica z elementami nazwanymi.
::----------------------------------------------------------------------------------------------------------------------
_cfg:=obj_new('HST','stan','STN','BDS');

:-----------------------------------------------------------------------------------------------------------------------
: Zapamiętanie stanowisk związanych z bieżącym pracownikiem.
: Jeżeli praca z 'brudnopisem' lub tymczasowa forma współpracy,
: to stanowiska będą wyszukiwane dla wszystkich masek tabeli H.
_work:=-PAR_SKID.get(180)='t';
{? ~_work
|| F_ZATR.cntx_psh();
   _work:=-P.F_ZATR().DOCELOWA='n';
   F_ZATR.cntx_pop()
?};
_sql:=
   'select distinct STN.ST '+
   'from '+{? _work || '@H' || 'H' ?}+' join STN using(H.ST,STN.REFERENCE) '+
   'where H.P=:_a '+
   'order by 1';
_cfg.HST:=sql(_sql,P.ref());
_cfg.HST.first();

:-----------------------------------------------------------------------------------------------------------------------
: Budowa okna tabeli stanowisk do obsługi grupowej akcji Wybierz.
_cfg.STN:=obj_new('WS');
_cfg.STN.WS:=STN.mk_sel('Stanowiska'@,,,'#stn',,,,,'U');
STN.win_fld(_cfg.STN.WS,,'ST',,,40,,,'Nazwa'@,,'Nazwa stanowiska'@);
STN.win_act(_cfg.STN.WS,,'Formuła','Wybierz'@@,,,
   "  _tab:=params_get().cfg.BDS.TAB;
      _tab.ST:=STN.ST;
      _tab.add()
   ",
   "{? ~STN.sel_size() || sel_exit() ?}",
   1,1,
   "FUN.ask('Czy dołączyć zaznaczone stanowiska pracy do badania lekarskiego?'@)",
   "sel_exit()",
   'W'
);

_f_set:=
   "  _cfg:=params_get().cfg;
      _cfg.stan:=1-_cfg.stan;
      _where:='Z=\\'T\\' and ST not in (select ST from :_a)';
      {? _cfg.stan
      || _where+=' and ST in (select ST from :_b)'
      ?};
      STN.f_set('ST',,_where,_cfg.BDS.TAB,_cfg.HST);
      STN.actions_grayed(_cfg.STN.WS,{? _cfg.stan || 'P:P' || 'Z:Z' ?})
   ";
{! _empty:=0 .. 1
|! STN.win_act(_cfg.STN.WS,_empty,'Formuła','Ws&zystkie stanowiska'@@,,
      'Pokazanie wszystkich stanowisk'@,_f_set,,,,,,'Z');
   STN.win_act(_cfg.STN.WS,_empty,'Formuła','Stanowiska &pracownika'@@,,
      'Pokazanie tylko stanowisk pracownika'@,_f_set,,,,,,'P')
!};
STN.win_btn(_cfg.STN.WS,'text='+'Ws&zystkie stanowiska'@,'menu:Z');
STN.win_btn(_cfg.STN.WS,'text='+'Stanowiska &pracownika'@+',align=begin','menu:P');


STN.win_act(_cfg.STN.WS,,'Szukaj');

:-----------------------------------------------------------------------------------------------------------------------
: Budowa tabeli i okna do przechowywania stanowisk związanych z badaniem.
_cfg.BDS:=obj_new('TAB','WS');
_cfg.BDS.TAB:=tab_tmp(1,'ST','STRING['+$MS.fld_len('STN','ST')+']','Nazwa');
_cfg.BDS.WS:=_cfg.BDS.TAB.mk_sel('Stanowiska dla badań'@,,,'#badleks',,,,,'U');
_cfg.BDS.TAB.win_fld(_cfg.BDS.WS,,'ST',,,40,,,'Nazwa'@,,'Nazwa stanowiska'@);
_fdb:=
   "  params_set(_par:=params_get());
      _par.cfg.stan:=1;
      STN.cntx_psh();
      STN.index('STANONAZ');
      STN.prefix();"+
   _f_set+";
      STN.win_sel(_par.cfg.STN.WS);
      STN.select();
      STN.f_clear();
      STN.cntx_pop()
   ";
{! _empty:=0 .. 1
|! _cfg.BDS.TAB.win_act(_cfg.BDS.WS,_empty,'Formuła','Dołącz'@@,,'Dołączenie nowego zapisu'@,$_fdb,,,,,,'D')
!};
_cfg.BDS.TAB.win_act(_cfg.BDS.WS,,'Usuń',,,'Usunięcie bieżącego zapisu'@,,,,1);
_cfg.BDS.TAB.win_act(_cfg.BDS.WS,,'Szukaj');
_cfg.BDS.TAB.win_btn(_cfg.BDS.WS,'text='+'Dołącz'@,'menu:D',,,,,,'');
_cfg.BDS.TAB.win_btn(_cfg.BDS.WS,'text='+'Usuń'@,'menu:U',,,,,,'noempty');
_cfg.BDS.TAB.win_sel(_cfg.BDS.WS);

:-----------------------------------------------------------------------------------------------------------------------
_cfg


\stanowiska_czytaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła kopiuje stanowiska przypisane do badania lekarskiego do tabeli tymczasowej.
::       Uwaga: poprawność argumentów nie jest weryfikowana.
::   WE: _a - Wskazanie badania lekarskiego.
::       _b - Uchwyt tabeli tymczasowej.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_tab:=_b;

BDS.cntx_psh();
BDS.index('ST');
BDS.prefix(_ref);
{? BDS.first()
|| {!
   |? _tab.ST:=BDS.STN().ST;
      _tab.add();
      BDS.next()
   !}
?};
BDS.cntx_pop();
~~


\stanowiska_zapisz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła synchronizuje stanowiska z tabeli tymczasowej ze stanowiskami przypisanymi do badania.
::       Uwaga: poprawność argumentów nie jest weryfikowana.
::   WE: _a - Wskazanie badania lekarskiego.
::       _b - Uchwyt tabeli tymczasowej.
::   WY: Wynik synchronizacji:
::       1 - Sukces.
::       0 - Porażka.
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_tab:=_b;

_err:=0;
BDS.cntx_psh();
BDS.index('ST');
BDS.prefix(_ref);

STN.cntx_psh();
STN.index('STANONAZ');
STN.prefix();

: Faza 1. Usuwamy zbędne stanowiska.
{? BDS.first()
|| {!
   |? {? _tab.find_key(BDS.STN().ST,)
      || BDS.next()
      || BDS.del()
      ?}
   !}
?};

: Faza 2. Dodajemy nowe stanowiska.
{? _tab.first()
|| {!
   |? {? ~BDS.find_key(_tab.ST,)
      || {? STN.find_key(_tab.ST,)
         || BDS.blank();
            BDS.BDO:=_ref;
            BDS.STN:=STN.ref();
            BDS.add()
         || _err+=1
         ?}
      ?};
      _tab.next()
   !}
?};

STN.cntx_pop();

BDS.cntx_pop();

_err=0


\bdo_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Zakończ". Formuła wykonywana w dwóch środowiskach:
::       - po wywołaniu z listy zadań (okno wertowania tabeli BDO z doklejonym oknem redagowania tabeli OSOBA);
::       - w ramach obszaru roboczego (okno wertowania tabeli BDO jako składowa okna grupowego tabeli OSOBA).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(0,0)=BDO
|| sel_exit()

|| params_set(params_get());
   exec('pkd_run','pkd','ZAKOŃCZ')
?}


\bdo_zalaczniki_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Obsługa akcji "Załączniki - przed" w oknach tabeli BDO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('show_zalacz','zalacz','P','BDO',exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_ORBL'))

:Sign Version 2.0 jowisz:1048 2020/10/16 15:19:17 45771b1668fbb69973bdee23d092dbd372fe0277952d3737748d6aefe16e357ca2afd6ea1a51b3e1f214027956f87f0db4be175e7469d7acee0b1358a42fd00e05d0f880adb12eabac765def2fe0b858ddd92b9b0be64f1657bcbe31aa49f0d5f541b85d987ab448b074f2fe2700d7a167988f09626b7e703609a586a17ae547
