:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkw_por_irss.fml
:: Utworzony: 13.06.2023
:: Autor: TMR
::======================================================================================================================
:: Zawartość: Obsługa czynności PKW_POR_IRSS - Rejestracja Start / Stop - webterm.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Rejestracja Start / Stop - główna formuła czynności.
::----------------------------------------------------------------------------------------------------------------------
:: Zawsze zaczynamy, od przekazania parametrów "dalej".
exec('pkw_por__rss','pkw_por')


\r_por_ww_wt_wer_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Przed obsługą okna WT_WER tabeli R_POR_WW.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Zawsze zaczynamy, od przekazania parametrów "dalej".
web_params_set(web_params_get());
:: Ustawiam środowisko.
exec('set_env','pkw_por');

:: wyświetlamy dane z zapamiętanego w bieżącej sesji miesiąca
exec('r_por_ww_use','!pkw_por_irss');
~~


\r_por_ww_wt_wer_blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Wspólna formuła na ustawienie wartości początkowych dla akcji "Start / Stop" dla okna WT_WER tabeli R_POR_WW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
R_POR_WW.blank(1);
_rPracownik:=exec('get_p_web_cl','p_web','JA');
R_POR_WW.CREATOR:=_rPracownik;
R_POR_WW.DZK:=R_POR_WW.DZ:=date();
R_POR_WW.GD:=time();
R_POR_WW.P:=P.ref();
R_POR_WW.POR:='N';
~~


\r_por_ww_wt_wer_ae_fml
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Wspólna formuła po redagowaniu w oknach WT_REDS i WT_REDT tabeli R_POR_WW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tp:={? var_pres('_a')=type_of('') || _a || return("") ?};

_fml:=$(
"  web_params_set(_web_params:=web_params_get());
   {? _a<>'ANULUJ'
   || R_POR_WW.DZK:=R_POR_WW.DZ;
      R_POR_WW.POR_DT:=R_POR_WW.DZ;
      R_POR_WW.POR_GD:=R_POR_WW.GD;
      R_POR_WW.TP:='"+_tp+"';
      R_POR_WW.SR:=exec('get_par','#parametr',340,2);
      R_POR_WW.ZM:='A';
      _err:=exec('r_por_ww_wt_wer_chk','!pkw_por_irss');
      {? _err<>''
      || FUN.emsg(_err);
         R_POR_WW.web_update(,,,'DZ');
         return()
      |? _err:=exec('start_stop_chkAndSet','!pkw_por_irss'); _err<>''
      || FUN.emsg(_err);
         R_POR_WW.web_update();
         return()
      || _ret:=exec('r_por_ww_ae','ppsf');
         {? type_of(_ret)=type_of('')
         || R_POR_WW.web_update(,,,_ret);
            return()
         ?};
         R_POR_WW.add()
      ?}
   ?};
   R_POR_WW.web_eclose();
   web_top_refresh(1)
");
_fml


\r_por_ww_wt_wer_start_stop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Wspólna obsługa akcji "Start / Stop" dla okna WT_WER tabeli R_POR_WW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_we:={? var_pres('_a')=type_of('') || _a || return() ?};
exec('set_env','pkw_por',0);
exec('r_por_ww_wt_wer_blank','!pkw_por_irss');
_edit:=exec('get_par','#parametr',340,2)='E';
R_POR_WW.web_efld_init(_we,,'editable=%1'[$_edit],,'DZ');
R_POR_WW.web_efld_init(_we,,'editable=%1'[$_edit],,'GD');
_mark:=exec('get_par','#parametr',339,2)='N';
R_POR_WW.web_efld_init(_we,,'mark=%1'[$_mark],,'PPSF_ADR','MIASTO');
~~


\r_por_ww_wt_wer_start_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Obsługa akcji "Start" dla okna WT_WER tabeli R_POR_WW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_we:='WT_REDS';
exec('r_por_ww_wt_wer_start_stop','!pkw_por_irss',_we);
R_POR_WW.web_edit(_we,~_we,,,
   exec('r_por_ww_wt_wer_ae_fml','!pkw_por_irss',exec('r_por_ww_tp_we','ppsf'))
)


\r_por_ww_wt_wer_stop_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Obsługa akcji "Stop" dla okna WT_WER tabeli R_POR_WW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_we:='WT_REDT';
exec('r_por_ww_wt_wer_start_stop','!pkw_por_irss',_we);
R_POR_WW.web_edit(_we,~_we,,,
   exec('r_por_ww_wt_wer_ae_fml','!pkw_por_irss',exec('r_por_ww_tp_wy','ppsf'))
)


\r_por_ww_wt_wer_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Obsługa dodatkowej weryfikacji dla akcji "Start / Stop" w oknach WT_REDS i WT_REDT tabeli R_POR_WW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_txt:='';
_od:=date()-1;
_do:=date();
{? (R_POR_WW.DZK<_od) | R_POR_WW.DZK>_do
|| _txt:='Data rejestracji nie może wykraczać poza okres %1 - %2.'@[_od$1,_do$1]
?};
_txt


\r_por_ww_wt_wer_usun_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Obsługa akcji "Usuń" dla okna WT_WER tabeli R_POR_WW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
R_POR_WW.web_cntx_save(1);
web_ask("
   R_POR_WW.web_cntx_load(1);
   {? _a=1
   || R_POR_WW.del()
   ?};
   web_top_refresh()
",'Czy usunąć bieżący wiersz?'@,'Rejestracja Start / Stop'@)


\r_por_ww_wt_wer_msc_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Obsługa akcji "Miesiąc" okienka WT_NAG tabeli PM_NAG w oknie grupowym  WT_GRP (tabeli PM_NAG)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_act_uid:=exec('act_uid_pkw_por_irss','ppsf');
_rok:=exec('web_global_params_get','pkw',_act_uid,'ROK',date~1);
_msc:=exec('web_global_params_get','pkw',_act_uid,'MSC',date~2);

_def:=web_define();
web_def_fld(_def,'ROK',_rok,'Rok'@,'Rok'@,,10,0,'mark=1');
web_def_fld(_def,'MSC',_msc,'Miesiąc'@,'Miesiąc'@,,10,0,'mark=1');
web_def_btn(_def,'OK','text=%1,tooltip=%2'['OK'@,'Zatwierdzenie okienka'@]);
_year:='Należy podać poprawny rok [%1 - %2].'@['1',$exec('max_rok','#datetime')];
_month:='Należy podać poprawny miesiąc [%1 - %2].'@['1','12'];
_fml:=''+"
   exec('set_env','pkw_por');
   _def_par:=web_def_get();
   _max_rok:=exec('max_rok','#datetime');
   {? _def_par.ROK<=0 | _def_par.ROK>_max_rok
   || FUN.emsg('"+_year+"');
      return('ROK')
   ?};
   {? _def_par.MSC<=0 | _def_par.MSC>12
   || FUN.emsg('"+_month+"');
      return('MSC')
   ?};
   exec('web_global_params_set','pkw','"+_act_uid+"','ROK',_def_par.ROK);
   exec('web_global_params_set','pkw','"+_act_uid+"','MSC',_def_par.MSC);

:: przed odświeżeniem musimy najpierw zamkąć okno web_define
   web_def_close();

:: odrysowanie główego okna w grupie
   R_POR_WW.web_cntx_load(1);
   exec('r_por_ww_use','!pkw_por_irss');
   R_POR_WW.prefix(P.ref());
   web_top_refresh(1);

:: ustawienie informacji w tytule okna o wybranym miesiącu premii
   exec('r_por_ww_hdr_rok','!pkw_por_irss',1)
";

R_POR_WW.web_cntx_save(1);
web_def_edit(_def,$_fml,'Miesiąc dla zapisów Start / Stop'@);
~~


\r_por_ww_use
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Ustawia maskę tabeli R_POR_WW na podstawie zapamiętanych parametrów ROK i MSC
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_act_uid:=exec('act_uid_pkw_por_irss','ppsf');
_rok:=exec('web_global_params_get','pkw',_act_uid,'ROK',date~1);
_msc:=exec('web_global_params_get','pkw',_act_uid,'MSC',date~2);

_year:=($(_rok))+2;
_month:={? _msc>=10 || $_msc || '0%1'[$_msc] ?};
_mask:='r_ph%1%2'[_year,_month];
{? R_POR_WW.name()<>_mask
|| R_POR_WW.use(_mask)
?};
~~


\r_por_ww_hdr_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Dodaje informacje o roku dla okna Start / Stop
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_depth:={? var_pres('_a')=type_of(0) || _a || 0 ?};

_act_uid:=exec('act_uid_pkw_por_irss','ppsf');
_rok:=exec('web_global_params_get','pkw',_act_uid,'ROK',date~1);
_msc:=exec('web_global_params_get','pkw',_act_uid,'MSC',date~2);
_title:=date(_rok,_msc,0)$8;
R_POR_WW.web_win_opt(web_top_win(_depth),,'title= - %1'[_title]);
~~


\r_por_ww_wt_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Obsługa akcji "Po odświeżeniu" okna WT_WER tabeli R_POR_WW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_act_uid:=exec('act_uid_pkw_por_irss','ppsf');
_rok:=exec('web_global_params_get','pkw',_act_uid,'ROK',date~1);
_msc:=exec('web_global_params_get','pkw',_act_uid,'MSC',date~2);
_p_ref:=P.ref();

_tp:=obj_new('we','wy');
_tp.we:=exec('r_por_ww_tp_we','ppsf');
_tp.wy:=exec('r_por_ww_tp_wy','ppsf');

:: wyszarzane akcje
_ag:=_ag_emp:='';

_mask:="
   _year:='00'+($(_a~1))+2;
   _month:='00'+($(_a~2))+2;
   'r_ph%1%2'[_year,_month]
";
_par340:=exec('get_par','#parametr',340,2);

_today:=date();
_yesterday:=_today-1;
{? R_POR_WW.name()<>_mask(_today) | _par340='B'
:: wyszarzamy akcje Start / Stop / Usuń jeżeli nie jesteśmy w bieżącym miesiącu lub nie mamy włączonej rejestracji
|| _ag:=_ag_emp:='STU'
:: dla maski z bieżącego miesiąca stan przycisków Start / Stop uzależniony jest od już zarejestrowanych
:: danych w bieżącym / poprzednim dniu
|| R_POR_WW.cntx_psh();
   R_POR_WW.index('DZK');
   R_POR_WW.prefix(_p_ref,_today);
   {? R_POR_WW.last()
   || {? _par340='P'
      || _ag+='ST'
      |? R_POR_WW.TP=_tp.we
      || _ag+='S'
      |? R_POR_WW.TP=_tp.wy
      || _ag+='T'
      ?}
   || R_POR_WW.use(_mask(_yesterday));
      R_POR_WW.index('DZK');
      R_POR_WW.prefix(_p_ref,_yesterday);
      {? _par340<>'P' & R_POR_WW.last() & R_POR_WW.TP=_tp.we
      || _ag+='S'
      || _ag+='T'
      ?}
   ?};
   R_POR_WW.cntx_pop()
?};

:: wyszarzamy akcje Usuń
{? _par340<>'E'
|| _ag+='U'
|| {? R_POR_WW.size()
   || {? R_POR_WW.DZK<>_today & R_POR_WW.DZK<>_yesterday
      || _ag+='U'
      || _ref:=R_POR_WW.ref();
         R_POR_WW.cntx_psh();
         R_POR_WW.index('DZK');
         R_POR_WW.prefix(_p_ref,_today);
         {? R_POR_WW.last()
         || {? R_POR_WW.ref()<>_ref
            || _ag+='U'
            ?}
         || R_POR_WW.use(_mask(_yesterday));
            R_POR_WW.index('DZK');
            R_POR_WW.prefix(_p_ref,_yesterday);
            {? ~(R_POR_WW.last() & R_POR_WW.TP=_tp.we & R_POR_WW.ref()=_ref)
            ||  _ag+='U'
            ?}
         ?};
         R_POR_WW.cntx_pop()
      ?}
   ?}
?};

_ag:='%1:%2'[_ag,_ag_emp];
R_POR_WW.web_win_opt(web_top_win(),web_top_ident(),'grayed=%1'[_ag]);
exec('r_por_ww_hdr_rok','!pkw_por_irss')


\r_por_ww_wt_wer_rekord_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Rekord przed dla okna WT_WER tabeli R_POR_WW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
POLA_GRP.TXT_1:={? R_POR_WW.TP=exec('r_por_ww_tp_we','ppsf') || 'wejście'
                |? R_POR_WW.TP=exec('r_por_ww_tp_wy','ppsf') || 'wyjście'
                || ''
                ?};
~~


\r_por_ww_redx_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Obsługa akcji "Przed obsługą" okien WT_REDS (start) i WT_REDT (stop) tabeli R_POR_WW.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('web_global_params_set','pkw','PPSFT','PPSFT_SKL_RCP','T');
:: Zawsze zaczynamy, od przekazania parametrów "dalej".
web_params_set(web_params_get());
:: Ustawiam środowisko.
exec('set_env','pkw_por');
KRAJE.index('KODISO');
~~


\ppsft_wt_slo_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Obsługa akcji "Przed obsługą" okna WT_SLO tabeli PPSFT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Zawsze zaczynamy, od przekazania parametrów "dalej".
web_params_set(web_params_get());
:: Ustawiam środowisko.
exec('set_env','pkw_por');
~~


\start_stop_chkAndSet
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS: Weryfikuje i uzupełnia odpowiednie informacje dla dodawanego rekordu R_POR_WW
::       Formuła zakłada, że jest ustawiony kontekst tabeli R_POR_WW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_data:=R_POR_WW.DZ;
_data_k:=R_POR_WW.DZK;
_godz:=R_POR_WW.GD;
_p_ref:=R_POR_WW.P;
_adr_ref:=R_POR_WW.PPSF_ADR;
_typ_ref:=R_POR_WW.PPSFT;

_mask:="
   _year:='00'+($(_a~1))+2;
   _month:='00'+($(_a~2))+2;
   'r_ph%1%2'[_year,_month]
";
_tp:=obj_new('we','wy','current');
_tp.we:=exec('r_por_ww_tp_we','ppsf');
_tp.wy:=exec('r_por_ww_tp_wy','ppsf');
_tp.current:=R_POR_WW.TP;

_ts:=obj_new('prev','current');
_ts.prev:=0;
_ts.current:=exec('create','#tm_stamp',_data,_godz);
_prev_tp:='';

:: określenie jaki powienien być typ i numer następnego dodawanego zapisu
_next:=obj_new('tp','nr');
_next.tp:='';
_next.nr:=0;
_par339:=exec('get_par','#parametr',339,2);
_par340:=exec('get_par','#parametr',340,2);

R_POR_WW.cntx_psh();
R_POR_WW.use(_mask(_data_k));
R_POR_WW.index('NR');
R_POR_WW.prefix(_p_ref,_data_k);
{? R_POR_WW.last()
|| _adres:=R_POR_WW.PPSF_ADR;
   _typ_pracy:=R_POR_WW.PPSFT;
   _prev_tp:=R_POR_WW.TP;
   _ts.prev:=exec('create','#tm_stamp',R_POR_WW.DZ,R_POR_WW.GD);
   _next.tp:={? R_POR_WW.TP=_tp.we || _tp.wy || _tp.we ?};
   {? _next.tp=_tp.wy
   || _next.nr:=R_POR_WW.NR
   || _next.nr:=R_POR_WW.NR+1
   ?}

:: sprawdzamy rozpoczęcie pracy w poprzednim dniu (tylko jeżeli parametr 340 jest inny niż 'P')
|| R_POR_WW.use(_mask(_data_k-1));
   R_POR_WW.index('NR');
   R_POR_WW.prefix(_p_ref,_data_k-1);
   {? _par340<>'P' & R_POR_WW.last() & R_POR_WW.TP=_tp.we
   || _adres:=R_POR_WW.PPSF_ADR;
      _typ_pracy:=R_POR_WW.PPSFT;
      _prev_tp:=R_POR_WW.TP;
      _data_k:=R_POR_WW.DZK;
      _ts.prev:=exec('create','#tm_stamp',R_POR_WW.DZ,R_POR_WW.GD);
      _next.tp:={? R_POR_WW.TP=_tp.we || _tp.wy || _tp.we ?};
      {? _next.tp=_tp.wy
      || _next.nr:=R_POR_WW.NR
      || _next.nr:=R_POR_WW.NR+1
      ?}
   || _next.tp:=_tp.we;
      _next.nr:=1
   ?}
?};
:: sprawdzamy również czy nie ma przypadkiem zapisów w przyszłym dniu (tylko jeżeli parametr jest inny niż 'P')
{? _par340<>'P'
|| R_POR_WW.use(_mask(_data_k+1));
   R_POR_WW.index('NR');
   R_POR_WW.prefix(_p_ref,_data_k+1);
   {? R_POR_WW.last()
   || _ts.prev:=exec('create','#tm_stamp',R_POR_WW.DZ,R_POR_WW.GD);
      _prev_tp:=R_POR_WW.TP
   ?}
?};

{? _next.tp=_tp.we
|| _adres:=_adr_ref;
   _typ_pracy:=_typ_ref
?};

:: sprawdzenie prawidłowości danych
_err:='';
{? _par339='N'
|| _wnio_ref:=exec('ppsf_wnio_exists','ppsf',_p_ref,_data,_data,_typ_pracy,0).REF;
   {? _wnio_ref=null()
::    brak wniosku w zakresie dat
   || _opis:=exec('FindAndGet','#table',PPSFT,_typ_pracy,,"OPIS",'');
      _err:='Brak aktywnego wniosku o pracę poza siedzibą firmy z wybranym typem (%1).'[_opis]
   |? exec('ppsf_wnio_exists','ppsf',_p_ref,_data,_data,_typ_pracy,1).REF=null()
::    wniosek jest ale rejestracja odbywa się poza dniami z rozkładu
   || _ref_tab:=ref_tab(_wnio_ref);
      _dni:='';
      {? _ref_tab=PPSF_H
      || PPSFROZD.cntx_psh();
         PPSF_H.cntx_psh();
         PPSF_H.index('PRAC');
         PPSF_H.prefix();
         {? PPSF_H.seek(_wnio_ref) & PPSF_H.PPSFROZD().WYBDNI='T'
         || {! _ind:=1 .. 7
            |! _dzien:=($('{? PPSFROZD.D%1=\'%2\' || MS.comment(PPSFROZD,\'D%1\') || \'\' ?} '[$_ind,'T']))();
               {? _dzien<>''
               || _dni+=_dzien+','
               ?}
            !};
            _dni:=_dni-1
         ?};
         PPSF_H.cntx_pop();
         PPSFROZD.cntx_pop()
      ?};
      _opis:=exec('FindAndGet','#table',PPSFT,_typ_pracy,,"OPIS",'');
      _err:='Pracę poza siedzibą firmy można rejestrować tylko w dniach zgodnych z '+
            'rozkładem (%1) dla wybranego typu (%2).'[_dni,_opis]
   ?}
?};
{? _err='' & _adr_ref
|| _TAB_ADR:=exec('adresy_pracy_get','!pkw_por_irss',_p_ref,_data_k,_data_k,_adres);
   {? _TAB_ADR.size()=0
   || PPSF_ADR.cntx_psh();
      {? PPSF_ADR.seek(_adr_ref,,1)
      || {? ~(PPSF_ADR.OD<=_data_k & (PPSF_ADR.DO=#0 | PPSF_ADR.DO>=_data_k))
         || _err:='Wskazany adres nie obowiązuje na datę %1.'[$_data_k]
         ?}
      || _err:='Nie znaleziono aktywnego adresu na dzień %1.'[$_data_k]
      ?};
      PPSF_ADR.cntx_pop()
   ?}
?};
{? _err='' & _next.tp<>_tp.current
|| _err:='Nieprawidłowy typ we/wy. Podano typ %1 a spodziewano się typu %2.'
         [{? _tp.current=_tp.we || 'rozpoczęcie (WE)' || 'zakończenie (WY)' ?},
         {? _next.tp=_tp.we || 'rozpoczęcie (WE)' || 'zakończenie (WY)' ?}]
?};
{? _err='' & _ts.prev>0 & _ts.current<=_ts.prev
|| _err:='Data i godzina musi być późniejsza od daty i godziny poprzedniego zapisu %1 - %2.'
         [{? _prev_tp=_tp.wy || 'wyjścia' || 'wejścia' ?},exec('to_string','#tm_stamp',_ts.prev)]
?};
{? ~(+_next.tp & _next.nr)
|| _err:='Nie udało się określić rodzaju oraz numeru zapisu w dniu.'@
?};
R_POR_WW.cntx_pop();

:: Zapisanie zawartości komunikatu do systemu - utworzenie / poprawienie zapisu
{? _err=''
|| R_POR_WW.NR:=_next.nr;
   R_POR_WW.TP:=_next.tp;
   R_POR_WW.PPSFT:=_typ_pracy;
   R_POR_WW.PPSF_ADR:=_adres;
   R_POR_WW.SR:=_par340
?};
_err


\adresy_pracy_get
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Pobiera informację o adresach pracy dostępnych dla rejestrowania czasu pracy
::----------------------------------------------------------------------------------------------------------------------
  _p_ref:={? var_pres('_a')=type_of(null()) || _a || return()   ?};
_data_do:={? var_pres('_b')=type_of(#0)     || _b || return()   ?};
_data_od:={? var_pres('_c')=type_of(#0)     || _c || _data_do-1 ?};
_adr_ref:={? var_pres('_d')=type_of(null()) || _d || null()     ?};

_query:=''+"
   select
      PPSF_ADR.REFERENCE as REF, PPSF_TA.KOD, PPSF_ADR.MIASTO, PPSF_ADR.ULICA, PPSF_ADR.DOM, PPSF_ADR.LOKAL,
      CASE
         WHEN PPSF_TA.KOD='DOMYŚLNY' THEN 'T' ELSE 'N'
      END AS DEFAULT
   from
      PPSF_ADR join PPSF_TA
   where
       PPSF_ADR.A='T' and PPSF_ADR.P=:_a and
       PPSF_ADR.OD<=to_date(:_b) and
       (PPSF_ADR.DO>=to_date(:_c) or PPSF_ADR.DO is null) and
       (PPSF_ADR.REFERENCE=:_d or :_d='')
   order by
      DEFAULT DESC, PPSF_TA.KOD DESC
";
sql(_query,_p_ref,_data_od,_data_do,_adr_ref)

:Sign Version 2.0 jowisz:1045 2023/07/21 13:25:25 bdc18f3183f7a0987d31e31ec659c414ec0dd808a12ff517aa0ef77da94437b40267778ce29548944978d96fe3aad6e49b2485120328c5d3bb21fe1a86b20112ea0f453eb34067cf6c2f37d49fa7949a5cc058e36b4d5213ad434fb4afd73a749f0d5c0bf1f41e2144563eb8829a30bc2fa4fc6a736214a80560bbf80faed3dc
