:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_ezk_anbs.fml
:: Utworzony: 29.09.2016
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa czynności PKD_EZK_ANBS - Kończące się badania lekarskie.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Kończące się badania lekarskie - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# properties=SERVICE
::# permissions=F_ZATR,UD_SKL
::
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
::
:: Czynność zbiera informacje o badaniach lekarskich, których ważność kończy się w okresie określonym parametrami
:: wejściowymi OD i DO. Dla czynności serwisowej wymagana jest co najmniej data OD.
:: Jeżeli data DO ma wartość 0/0/0, to uwzględnione będą wszystkie badania, kończące się po dacie OD.
::# kind=WE, symbol=OD, type=DATE, name=Data początkowa badanego okresu, required=N
::# kind=WE, symbol=DO, type=DATE, name=Data końcowa badanego okresu, required=N
::
:: Parametr wejściowy UD_SCH pozwala wskazać symbol schematu (typu PODZORG), który posłuży do ustalenia jednostki
:: organizacyjnej, przekazanej parametrem UD_SKL. Jeżeli parametr nie zostanie przekazany (ustawiony), to wybrany
:: zostanie schemat domyślny lub (jeżeli domyślny nie został określony) pierwszy (w kolejności alfabetycznej).
::# kind=WE, symbol=UD_SCH, type=STRING, name=Schemat organizacyjny, required=N, fml_val="exec('ud_sch_wybierz','schemat',,_a).SYMBOL"
::
:: Parametr wejściowy UD_SKL pozwala wskazać jednostkę organizacyjną, do której będzie ograniczony zakres przetwarzania.
:: Domyślnie przetwarzane będą wszystkie jednostki organizacyjne.
::# kind=WE, symbol=UD_SKL, type=STRING, name=Jednostka organizacyjna, required=N, fml_val="exec('ud_skl_wybierz','schemat',,,1,_a)"
::
:: Parametr wejściowy SQL_FROM umożliwia zbudowanie dodatkowych relacji na potrzeby dodatkowego warunku
:: (patrz SQL_WHERE).
:: Domyślnie przyjmuje wartość pustą.
::# kind=WE, symbol=SQL_FROM, type=STRING, name=Dodatkowe relacje filtra, required=N
::
:: Parametr wejściowy SQL_WHERE umożliwia dodatkowe ograniczenie listy współpracowników. Warunek może odwoływać się
:: do tabeli pracowników (poprzez alias "P" np. "P".ID>1000) oraz
:: do tabeli osób (poprzez alias "1OSOBA" np. "1OSOBA".PLEC='K').
:: Odwołania do innych tabel wymagają odpowiedniego użycia parametru SQL_FROM.
:: Domyślnie SQL_WHERE przyjmuje wartość pustą.
::# kind=WE, symbol=SQL_WHERE, type=STRING, name=Dodatkowy warunek filtra, required=N
::
:: Parametr wejściowy FML_TEST umożliwia dodatkową weryfikację wyboru współpracownika do przetwarzania. Jest treścią
:: formuły w formacie napisu. Jeżeli formuła zwróci wartość 0 to dany współpracownik nie będzie przetwarzany.
:: Formuła jest wykonywana przy ustawionych buforach tabel: P, OSOBA.
:: Domyślnie przyjmuje wartość '1'.
::# kind=WE, symbol=FML_TEST, type=STRING, name=Dodatkowy warunek wyboru, required=N
::
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
::
:: Wynik działania czynności. Parametr szczególnie istotny w przypadku uruchomienia czynności usługowej.
::# kind=WY, symbol=RESULT, type=STRING, name="Wynik czynności (OK,BŁĄD)", required=N
::
::# kind=WY, symbol=OD, type=DATE, name=Data początkowa badanego okresu, required=N
::# kind=WY, symbol=DO, type=DATE, name=Data końcowa badanego okresu, required=N
::
::# kind=WY, symbol=SUB, type=STRING, name=Temat, required=N
::# kind=WY, symbol=RCV, type=MEMO, name=Lista odbiorców, required=N
::# kind=WY, symbol=BODYH, type=MEMO, name=Treść w formacie HTML, required=N
::
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

params_set(_par:=params_get());
_mp:=_par.mp;
_in:=_par.in;
_out:=_par.out;

_out.SUB:='Kończące się badania lekarskie';
{? (_result:=exec('check_in','!pkd_ezk_anbs'))=''
|| _ret:=exec('run','!pkd_ezk_anbs');
   _out.RESULT:='OK';
   _out.OD:=_in.OD;
   _out.DO:=_in.DO;
   _out.RCV:=_ret.RCV;
   _out.BODYH:=_ret.BODYH

|| {? ~_mp.isService()
   || FUN.emsg(_result)
   ?};
   _out.RESULT:='BŁĄD'
?};
_mp.save(,_out);
_mp.done();

~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Kończące się badania lekarskie - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().mp.load(exec('kind_in','#b_port'));
_d0:=date(0,0,0);
:: warunek na dopisanie jednostki organizacyjnej
_addUdSklInfo:=_in.UD_SKL<>~~ & _in.UD_SKL<>'';
:: warunek na dopisanie [*]
_addInfo:=(_in.SQL_FROM<>~~ & _in.SQL_FROM<>'') | (_in.SQL_WHERE<>~~ & _in.SQL_WHERE<>'')
   | (_in.FML_TEST<>~~ & _in.FML_TEST<>'');

{? _in.OD<>~~ & _in.OD<>_d0
|| {? _in.DO=_d0 | _in.DO=~~
   || {? _addUdSklInfo
      || {? _addInfo
         || 'Badania lekarskie kończące się %1 i później %2 [*]'@@[_in.OD$1,_in.UD_SKL]
         || 'Badania lekarskie kończące się %1 i później %2'@@[_in.OD$1,_in.UD_SKL]
         ?}
      || {? _addInfo
         || 'Badania lekarskie kończące się %1 i później [*]'@@[_in.OD$1]
         || 'Badania lekarskie kończące się %1 i później'@@[_in.OD$1]
         ?}
      ?}
   |? _in.OD=_in.DO
   || {? _addUdSklInfo
      || {? _addInfo
         || 'Badania lekarskie kończące się %1 %2 [*]'@@[_in.OD$1,_in.UD_SKL]
         || 'Badania lekarskie kończące się %1 %2'@@[_in.OD$1,_in.UD_SKL]
         ?}
      || {? _addInfo
         || 'Badania lekarskie kończące się %1 [*]'@@[_in.OD$1]
         || 'Badania lekarskie kończące się %1'@@[_in.OD$1]
         ?}
      ?}
   || {? _addUdSklInfo
      || {? _addInfo
         || 'Badania lekarskie kończące się w okresie od %1 do %2 %3 [*]'@@
               [_in.OD$1,_in.DO$1,_in.UD_SKL]
         || 'Badania lekarskie kończące się w okresie od %1 do %2 %3'@@
               [_in.OD$1,_in.DO$1,_in.UD_SKL]
         ?}
      || {? _addInfo
         || 'Badania lekarskie kończące się w okresie od %1 do %2 [*]'@@[_in.OD$1,_in.DO$1]
         || 'Badania lekarskie kończące się w okresie od %1 do %2'@@[_in.OD$1,_in.DO$1]
         ?}
      ?}
   ?}
|| 'Badania lekarskie kończące się'@@
?}


\valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła sprawdzająca poprawność parametrów pobieranych od użytkownika
::       (w przypadku czynności nie będącej serwisową).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_PAR:=cur_tab(1,1);

{? (_chk:=__CHK.record(_PAR,,'OD'))<>''
|| return(_chk)
?};

{? _PAR.DO<>date(0,0,0) & _PAR.DO<_PAR.OD
|| FUN.emsg('"%1" nie może być wcześniejsza niż "%2".'@ [MS.name(_PAR,'DO'),MS.name(_PAR,'OD')]);
   return('DO')
?};

''


\check_in
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Weryfikacja poprawności parametrów wejściowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_mp:=_par.mp;
_in:=_par.in;
_service:=_mp.isService();

_d0:=date(0,0,0);

:: Unifikacja typów parametrów wejściowych.
{? _in.OD=~~
|| _in.OD:=_d0
?};
{? _in.DO=~~
|| _in.DO:=_d0
?};
{? _in.UD_SCH=~~ | _in.UD_SCH=''
|| _in.UD_SCH:=exec('domyslny','schemat','PODZORG',1).SYMBOL
?};
{? _in.UD_SKL=~~
|| _in.UD_SKL:=''
?};
{? _in.SQL_FROM=~~
|| _in.SQL_FROM:=''
?};
{? _in.SQL_WHERE=~~
|| _in.SQL_WHERE:=''
?};
{? _in.FML_TEST=~~
|| _in.FML_TEST:=''
?};

{? _service
:: Czynność uruchomiona w trybie serwisowym. Nieprawidłowe parametry wejściowe uniemożliwiają uruchomienie czynności.
|| {? _in.OD=_d0
   || return('Nieprawidłowa wartość parametru wejściowego %1.' ['OD'])
   ?};
   {? _in.DO<>_d0 & _in.DO<_in.OD
   || return('Parametr wejściowy %1 [%2] mniejszy niż parametr wejściowy %3 [%4].' ['DO',$_in.DO,'OD',$_in.OD])
   ?}

:: Czynność nie uruchomiona w trybie serwisowym. Nieprawidłowe parametry wejściowe mogą zostać skorygowane.
|? _in.OD=_d0 | (_in.DO<>_d0 & _in.DO<_in.OD)
|| _PAR:=tab_tmp(,
      'OD','DATE','Data początkowa'@,
      'DO','DATE','Data końcowa'@,
      'UD_SCH','STRING[8]','Schemat',
      'UD_SKL','STRING[16]','Jednostka organizacyjna'
   );

   _PAR.fld_fml('UD_SCH','F3',"exec('ud_sch_wybierz','schemat','PODZORG',fld()).SYMBOL");
   _PAR.fld_fml('UD_SCH','BEFORE_EDIT',"cur_tab(1,1).UD_SKL=''");
   _PAR.fld_fml('UD_SCH','AFTER_EDIT',
      "  _fld:=fld();
         cur_tab(1,1).efld_opt(cur_win(1,1),'enable=%1' [$(_fld<>'')],,'UD_SKL');
         _fld='' | exec('szukaj_ud_sch','schemat','PODZORG',_fld)<>null()
      "
   );
   _PAR.fld_fml('UD_SKL','F3',"exec('ud_def_symbol_f3','schemat','PODZORG',cur_tab(1,1).UD_SCH,'PKD',2)");
   _PAR.fld_fml('UD_SKL','BEFORE_EDIT',"cur_tab(1,1).UD_SCH<>''");
   _PAR.fld_fml('UD_SKL','AFTER_EDIT',"fld()='' | exec('ud_skl_symbol_ae','schemat','PODZORG','PKD',2)<>null()");

   _we:=_PAR.mk_edit('Kończące się badania lekarskie');
   _PAR.win_esep(_we,'Badany okres');
   _PAR.win_efld(_we,,'OD',,,,,,,,'Data początkowa badanego okresu'@);
   _PAR.win_efld(_we,,'DO',,,,,,,,'Data końcowa badanego okresu'@);
   _PAR.win_esep(_we,'Struktura');
   _PAR.win_efld(_we,,'UD_SCH',,,16,,,,,'Schemat'@,,'F3_button=1');
   _PAR.win_efld(_we,,'UD_SKL',,,16,,,,,'Symbol jednostki organizacyjnej'@,,'F3_button=1');
   exec('ok_esc','#window',_PAR,_we);
   _PAR.win_edit(_we);

   _PAR.efld_opt(_we,'mark=1',,'OD');

   _PAR.blank();
   _PAR.DO:=_in.DO;
   _PAR.UD_SCH:=_in.UD_SCH;
   _PAR.UD_SKL:=_in.UD_SKL;

   {? _PAR.edit("exec('valid','!pkd_ezk_anbs')")
   || _in.OD:=_PAR.OD;
      _in.DO:=_PAR.DO;
      _in.UD_SCH:=_PAR.UD_SCH;
      _in.UD_SKL:=_PAR.UD_SKL
   || return('Rezygnacja z redagowania parametrów.')
   ?}

?};

''


\run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła odpowiedzialna za przetwarzanie danych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_mp:=_par.mp;
_in:=_par.in;
_out:=_par.out;

P.cntx_psh();
P.clear();

_ud_sch:=exec('szukaj_ud_sch','schemat','PODZORG',_in.UD_SCH);
_ud_def:=
   {? _in.UD_SKL=''
   || exec('ud_def_firma','schemat','PODZORG')
   || exec('szukaj_ud_def','schemat',_ud_sch,exec('szukaj_ud_skl','schemat','PODZORG',_in.UD_SKL))
   ?};

{? _mp.isService()
|| P.f_set(
::    SORT
      'OSOBA(NAZWISKO),OSOBA(PIERWSZE),OSOBA(PESEL)',
::     FROM
      'left join F_ZATR using("P".F_ZATR,F_ZATR.REFERENCE)'+
      {? _in.SQL_FROM<> '' || ' '+_in.SQL_FROM || '' ?},
::    WHERE
      'P.FIRMA=\''+$exec('ref_firma','ustawienia')+'\''+
      ' and F_ZATR.KOD=\'P\''+
      {? _in.UD_SKL<>''
      || ' and P.WYDZIAL in '
            '('
               'select UD_DEF.UD_SKL '
               'from UD_DEF '
               'where UD_DEF.UD_SCH=\''+$_ud_sch+'\' and UD_DEF.SCIEZKA like \''+_ud_def.SCIEZKA+'%\''
            ')'
      || ''
      ?}+
      {? _in.SQL_WHERE<>'' || ' and ('+_in.SQL_WHERE+')' || '' ?}
   )
|| exec('filtruj_p','schemat','PKD',_ud_def.REF,'P','','W',_in.SQL_FROM,_in.SQL_WHERE)
?};

_TAB:=exec('bdo_ending','personel',_in.OD,_in.DO,_in.FML_TEST,'T');

P.cntx_pop();

_ret:=obj_new('RCV','BODYH');
_ret.RCV:=_ret.BODYH:='';

USERS.cntx_psh();
USERS.index('USR_AKOD');
USERS.prefix('T',);
{? USERS.first()
|| {!
   |? {? USERS.EMAIL<>'' & exec('chk_role','#b__box',USERS.ref(),_mp.buf_act.UID)
      || _ret.RCV+=USERS.EMAIL+';'
      ?};
      USERS.next()
   !}
?};
USERS.cntx_pop();
{? _ret.RCV+1=';'
|| _ret.RCV:=_ret.RCV-1
?};

{? _TAB.first()
|| _th:="'<th [[STYLE_TABLE_TH]]>'+_a+'</th>'";
   _td:="'<td [[STYLE_TABLE_TD]]>'+_a+'</td>'";

   _ret.BODYH:=
      '<h3>'+
      {? _in.DO=date(0,0,0)
      || 'Pracownicy, którym badania lekarskie kończą się po %1 r.'@ [_in.OD$6]
      |? _in.OD=_in.DO
      || 'Pracownicy, którym badania lekarskie kończą się %1 r.'@ [_in.OD$6]
      || 'Pracownicy, którym badania lekarskie kończą się w okresie od %1 r. do %2 r.'@ [_in.OD$6,_in.DO$6]
      ?}+
      '</h3>\n'

      '<table [[STYLE_TABLE]]>\n'
      '<tr [[STYLE_TABLE_TR]]>'+
         _th('Lp.'@)+
         _th('Nazwisko'@)+
         _th('Imię'@)+
         _th('PESEL'@)+
         _th('Nr teczki'@)+
         _th('Data zatrudnienia'@)+
         _th('Data zwolnienia'@)+
         _th('Jednostka organizacyjna'@)+
         _th('Data następnego badania'@)+
      '</tr>\n';

   _lp:=0;
   {!
   |? _lp+=1;
      _ret.BODYH+=
         '<tr [[STYLE_TABLE_TR]]>'+
            _td($_lp)+
            _td(_TAB.NAZWISKO)+
            _td(_TAB.PIERWSZE)+
            _td(_TAB.PESEL)+
            _td(_TAB.T)+
            _td(_TAB.DZA$1)+
            _td(_TAB.DZ$1)+
            _td(_TAB.WYDZIAL)+
            _td(_TAB.DTNB$1)+
         '</tr>\n';
      _TAB.next()
   !};

   _ret.BODYH+=
      '</table>\n'
      '<p>'+'Ta wiadomość została wygenerowana automatycznie - prosimy na nią nie odpowiadać.'@+'</p>'
?};

{? ~_mp.isService()
|| FUN.info(
      _out.SUB+'\n\n'+
      'Analiza danych zakończona.'@+'\n'+
      'Liczba zapisów spełniających kryteria: %1.' [$_TAB.size()]
   )
?};

_ret

:Sign Version 2.0 jowisz:1048 2020/10/16 15:19:16 01c42343971f40d1ea3bd8b9ede740e68732c284711d79fff037592068a28ce2d4b8ee42d1bf43f29ce1b7e2f4334dbb7a83aa8543e311b908bfc269e96095b7d0e324a4ed89365e08689fba7e932fb88be6e95c38c6b96bcd39679e447f3e2347899e43507d437a9d38b530447cd3ec4039af0fa6a3b6d50902dc0ced3b67e0
