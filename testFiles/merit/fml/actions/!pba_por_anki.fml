:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pba_por_anki.fml
:: Utworzony: 13.09.2017
:: Autor: RO
::======================================================================================================================
:: Zawartość: Obsługa czynności PBA_POR_ANKI - Wypełnienie ankiety webterm.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Główna formuła czynności - Wypełnienie ankiety webterm.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# access=exec('access','!pba_por_anki')
::
::# kind=WE, symbol=ZA_FORM, type=_ZA_FORM, name=Formularz ankiety, required=T, keyref=T
::
::# kind=WY, symbol=ZA_FORM, type=_ZA_FORM, name=Formularz ankiety, required=N
::# kind=WY, symbol=ZAMKNIETY, type=STRING, name=Formularz ankiety zamknięty (T/N), required=N
::
params_set(_par:=params_get());
_mp:=_par.mp;
_in:=_par.in;
_out:=_par.out;
:_context:=_par.context;
_akcja:=_mp.akcja();

{? _akcja='webTermProcCancel'
|| return(~~)
?};

{? _mp.isMicro()
|| _mp.done()
|? _akcja='WYPEŁNIJ'
|| _mp.keep()
|? _akcja='WYŚLIJ'
|| _pars:=exec('get_pars_out','!pba_por_anki',_in.ZA_FORM);
   _out.ZO_FORM:=_pars.ZA_FORM;
   _out.KOMPLET:=_pars.ZAMKNIETY;
   _mp.save(,_out);
   _mp.done()
?};
~~


\web_main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [17.42]
:: OPIS: Główna formuła czynności www - Wypełnienie ankiety webterm.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & (_a='Area' | _a='Proc' | _a='Todo')
|| _path:=_a
|| return()
?};

{? _path='Area'
:: Uruchomienie z obszaru roboczego. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
|| _web_params:=web_params_get(1);

   {? ref_tab(_web_params.B_PREL)=BI_PREL
::    Kontynuacja czynności.
   || _bi_prel:=exec('FindAndGet','#table',BI_PREL,_web_params.B_PREL);
      _b_ele:=exec('FindAndGet','#table',BI_PREL,_bi_prel,,"B_PREL().B_ELE",null());

   _kind_in:=exec('kind_in','#b_port');
   _in:=exec('getPorts','#b_port',_b_ele,_kind_in,_bi_prel);
   exec('fillPorts','#bi_port',_bi_prel,_kind_in,_in)

:: Mikroczynność lub start procesu.
   || _bi_prel:=null();
      _b_prel:=exec('FindAndGet','#table',B_PREL,_web_params.B_PREL);
      _b_ele:=exec('FindAndGet','#table',B_PREL,_b_prel,,"B_ELE",null());
      _in:=exec('get_act_proc_params','#b__box',_web_params.ACT_UID,_b_prel,_web_params.PORTS_IN)
   ?};

   _args:=exec('obj_ntab_set','#array',,
      'ZA_FORM',$_in.ZA_FORM,
      'path',_path,
      'web_run',
         "  {? ~(exec('set_env','ank_por') & exec('load_cur_prac','p_web'))
            || FUN.emsg('Ustalenie środowiska pracy nie było możliwe.'@)
            || _wp:=web_params_get();
               exec('web_run','#b__box',_wp.B_PREL,_wp.AKCJA,_wp.PORTS_IN,'web_Area')
            ?}
         "
   );

   {? _web_params.AKCJA='WYPEŁNIJ'
   || exec('za_form_wypelnij','!pba_por_anki',_args)
   |? _web_params.AKCJA='WYŚLIJ'
   || exec('za_form_wyslij','!pba_por_anki',_args)
   ?}

|? _path='Todo'
:: Uruchomienie z listy zadań (czynność w procesie, wywołana z parametrem - wskazaniem formularza).  - - - - - - - - - -
|| {? var_pres('_b')=type_of(null()) & _b<>null() & ref_tab(_b)=BI_PREL
   || _bi_prel:=_b
   || return()
   ?};

   {? exec('set_env','ank_por')
::    Startujemy z listy zadań - konieczne jest ustawienie środowiska.
   || _b_ele:=exec('FindAndGet','#table',BI_PREL,_bi_prel,,"B_PREL().B_ELE",null());

      _kind_in:=exec('kind_in','#b_port');
      _in:=exec('getPorts','#b_port',_b_ele,_kind_in,_bi_prel);
      exec('fillPorts','#bi_port',_bi_prel,_kind_in,_in);

      _args:=exec('obj_ntab_set','#array',,
         'ZO_FORM',$_in.ZA_FORM,
         'path',_path,
::       Tutaj web_run jest napisem (""+''+"") a nie formułą. Napisem, w którym metakod '[AKCJA]' w odpowiednim momencie
::       jest zamieniany na 'OCENA' lub 'ZAKOŃCZ'.
         'web_run',
            "  {? ~(exec('set_env','ank_por') & exec('load_cur_prac','p_web'))
               || FUN.emsg('Ustalenie środowiska pracy nie było możliwe.'@)
               || exec('web_run','#b__box','"+$_bi_prel+"','[AKCJA]',,'web_Todo')
               ?}
            "
      );
      exec('todo','!pba_por_anki',_args)
   ?}

|? _path='Proc'
:: Uruchomienie z pulpitu (czynność startowa).   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
:: Czynność wymaga parametru wejściowego - nie może być czynnością startową.
|| ~~
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.42]
:: OPIS: Formuła opisu zadania na liście zadań.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Wypełnij przygotowaną dla Ciebie ankietę.'@@


\todo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.42]
:: OPIS: Obsługa czynności z listy zadań.
::   WE: _a [ARRAY] - Tablica z parametrami.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('set_env','ank_por')
|| FUN.emsg('Ustalenie środowiska nie powiodło się.'@);
   return()
?};

_args:=_a;
_ank:=null();
_anonim:='';
_nazw:='';
_imie:='';
ZA_FORM.cntx_psh();
ZA_FORM.prefix();
{? ~ZA_FORM.seek(_args.ZA_FORM)
|| FUN.emsg('Odnalezienie formularza nie powiodło się.'@);
   ZA_FORM.cntx_pop();
   return()
|| _ank:=ZA_FORM.ZA_ZEST;
   _anonim:=ZA_FORM.ZA_ZEST().ANONIM;
   _nazw:=ZA_FORM.ZZ_KTO().NAZWISKO;
   _imie:=ZA_FORM.ZZ_KTO().PIERWSZE
?};
ZA_FORM.cntx_pop();
ZA_FORM.ZA_ZEST();

:: Zapamiętujemy aktualny stan tabeli BI_TODO (zwłaszcza, że jest maskowalna), aby móc go odtworzyć / odświeżyć podczas
:: ewentualnej akcji Zakończ.
BI_TODO.web_cntx_save(1);

web_params_set(
   exec('obj_ntab_set','#array',web_params_get(),
      'ZA_FORM',_args.ZA_FORM,
      'path',_args.path,
      'web_run',_args.web_run
   )
);

_szer:=50;
_def:=web_define();


ZA_ZEST.cntx_psh();
ZA_ZEST.prefix();
{? ZA_ZEST.seek(_ank)
|| web_def_sep(_def,'Ankieta'@);
   web_def_fld(_def,'ZA_ZEST',ZA_ZEST.NAZWA,'Nazwa'@,'Nazwa ankiety'@,_szer,,,'editable=0')
:   web_def_sep(_def,'Szczegóły ankiety'@);
?};
ZA_ZEST.cntx_pop();

{? _anonim='N'
|| web_def_sep(_def,'Osoba wypełniajaca'@);
   web_def_fld(_def,'NAZWISKO',_nazw,'Nazwisko'@,'Aktualne nazwisko'@,_szer,,,'editable=0');
   web_def_fld(_def,'PIERWSZE',_imie,'Imię'@,'Pierwsze imię'@,_szer,,,'editable=0');

   P.cntx_psh();
   P.prefix();
   {? P.seek(P.ref())
   || UD_SKL.cntx_psh();
      UD_SKL.prefix();
      P.WYDZIAL();
      web_def_fld(_def,'JOS',UD_SKL.SYMBOL,'Jednostka organizaycjna - symbol'@,
         'Symbol jednostki organizacyjnej'@,_szer,,,'editable=0');
      web_def_fld(_def,'JON',UD_SKL.OPIS,'Jednostka organizaycjna - nazwa'@,
         'Nazwa jednostki organizacyjnej'@,_szer,,,'editable=0');
      UD_SKL.cntx_pop();

      STN.cntx_psh();
      STN.prefix();
      web_def_fld(_def,'STN',P.ST().ST,'Stanowisko'@,'Nazwa stanowiska'@,_szer,,,'editable=0');
      STN.cntx_pop()
   ?};
   P.cntx_pop()
?};

web_def_btn(_def,'WYPEŁNIJ','text=%1' ['Wypełnij'@]);
web_def_btn(_def,'WYŚLIJ','text=%1,icon=%2' ['Wyślij ankietę'@,exec('zakoncz','#icon')]);
web_def_btn(_def,'ANULUJ','text=%1,icon=%2' ['Anuluj'@,exec('anuluj','#icon')]);
web_def_edit(_def,
   "  {? _a='ANULUJ'
      || web_def_close()
      |? exec('env_wt','poc')
      || web_params_set(_par:=web_params_get());
         _args:=exec('obj_ntab_set','#array',,
            'ZA_FORM',_par.ZA_FORM,
            'path',_par.path,
::          W web_run podmieniamy metakod [AKCJA] na faktycznie wykonywaną akcję, a napis konwertujemy do formuły.
            'web_run',$gsub(_par.web_run,'[AKCJA]',_a)
         );
         {? _a='WYPEŁNIJ'
         || exec('za_form_wypelnij','!pba_por_anki',_args)
         |? _a='WYŚLIJ'
         || exec('za_form_wyslij','!pba_por_anki',_args)
         ?}
      ?}
   ",'Wypełnij ankietę %1'@ [ZA_ZEST.NAZWA]);
~~


\za_form_wypelnij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.42]
:: OPIS: Obsługa akcji "Wypełnij".
::   WE: _a - tablica z argumentami.
::----------------------------------------------------------------------------------------------------------------------
_args:=_a;

{? exec('set_env','ank_por')
|| ZA_FORM.cntx_psh();
   ZA_FORM.prefix();
   {? ZA_FORM.seek(_args.ZA_FORM)
   || {? ZA_FORM.SLO_KOD().KOD='Z'
      || web_msg('Formularz o podanym identyfikatorze został już zamknięty.'@,'Formularz ankiety'@)
      || exec('za_form_otworz','ank_por',ZA_FORM.ID,1,null())
      ?}
   || web_msg('Nie znaleziono formularza o podanym identyfikatorze.'@,'Formularz ankiety'@)
   ?};
   ZA_FORM.cntx_pop()
?};
~~


\za_form_wyslij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.42]
:: OPIS: Obsługa akcji "Wyślij".
::----------------------------------------------------------------------------------------------------------------------
_args:=_a;
:: ustawienie srodowiska
{? ~exec('set_env','ank_por') || return(0) ?};
:: przekazanie parametrow z kontrolki
_form:=null();
ZA_FORM.cntx_psh();
ZA_FORM.prefix();
{? ~ZA_FORM.seek(_args.ZA_FORM)
|| FUN.emsg('Nie znaleziono formularza ankiety. Zamknięcie niemożliwe.'@);
   ZA_FORM.cntx_pop();
   return()
?};
ZA_FORM.cntx_pop();

{? _args.path='Area'
|| WT_FORM.web_cntx_save(1)
|? _args.path='Todo'
:: Przy obsłudze z listy zadań, trafiliśmy tutaj z okienku tymczasowego web_define. Tak więc
:: najpierw trzeba odtworzyć bufor tabeli BI_TODO, aby móc go ponownie zapamiętać do wykorzystania
:: wewnątrz web_ask().
|| BI_TODO.web_cntx_load(1);
   BI_TODO.web_cntx_save(1)
?};

web_params_set(
   exec('obj_ntab_set','#array',web_params_get(1),
      'ZA_FORM',_args.ZA_FORM,
      'path',_args.path,
      'web_run',_args.web_run
   )
);

_zamknij:="
   {? ~exec('set_env','ank_por') || return(0) ?};
   web_params_set(_par:=web_params_get());
   _za_form:=_par.form;
   _klasa:=0;
   {? _a=1
   || ZA_FORM.cntx_psh();
      ZA_FORM.prefix();
      ZZ_DOK.cntx_psh();
      {? ZA_FORM.seek(_za_form)
      || ZA_FORM.SLO_KOD:=exec('kod','ext_slo','ZA_FORM','Z');
         {? ZA_FORM.ZA_ZEST().TYP().KOD='T'
         || _licz:=0;
            _tryb:=0;
            {? exec('seek_dok','phr_tab',ZA_ZEST.ZZ_LINK) & ZZ_DOK.KLASA='SZK_OPIS'
            || _dok:=ZZ_DOK.ref();
               _klasa:=1;
               SZK_OPIS.cntx_psh();
               SZK_OPIS.index('ZZ_DOK');
               SZK_OPIS.prefix(ref_name(_dok),_dok);
               {? SZK_OPIS.first()
               || _tryb:=SZK_OPIS.TRYB='N'
               ?};
               SZK_OPIS.cntx_pop()
            ?};
            ZA_NOTA.cntx_psh();
            ZA_NOTA.index('ZA_NOTA');
            ZA_NOTA.prefix(ZA_FORM.ref(),0);
            _loop:=ZA_NOTA.first();
            {!
            |? _loop
            |! _licz+=ZA_NOTA.PKT;
               _loop:=ZA_NOTA.next()
            !};
            ZA_NOTA.cntx_pop();
            _pkt:=sql('
               select
                  SUM(ZA_TEST.PKT) as PKT
               from
                  ZA_TEST join ZA_ZEST
               where
                  ZA_ZEST.REFERENCE=\\':_a\\'',
               $ZA_FORM.ZA_ZEST);
            _jest:=sql('
               select
                  SLO_KOD.KOD as KOD
               from
                  ZA_TEST join ZA_ZEST join
                  SLO_KOD using(ZA_TEST.RODZ,SLO_KOD.REFERENCE)
               where
                  ZA_ZEST.REFERENCE=\\':_a\\' and KOD=\\'O\\'',
               $ZA_FORM.ZA_ZEST);
            {? _pkt.PKT>0
            || {? _tryb
               || ZA_FORM.WYNIK:=_licz
               || ZA_FORM.WYNIK:=(_licz/_pkt.PKT)*100
               ?}
            || ZA_FORM.WYNIK:=0
            ?};
            {? ZA_FORM.WYNIK>=ZA_FORM.ZA_ZEST().PROG & ~_jest.size()
            || ZA_FORM.Z:='T'
            ?};
            {? ~_jest.size()
            || ZA_FORM.OCENA:='T'
            ?}
         ?};
         {? ZA_FORM.put()
         || {? _klasa
            || exec('ank_akc','phr_dane',ZA_FORM.ref())
            ?};
            {? _args.path='Area' & WT_FORM.web_cntx_load(1)>0
            || WT_FORM.STATUS:=ZA_FORM.SLO_KOD().NAZWA;
               WT_FORM.OCENA:=ZA_FORM.OCENA;
               WT_FORM.Z:=ZA_FORM.Z;
               {? WT_FORM.put()
               || WT_ZES.web_refresh('GRP_WER1','ALL');
                  WT_ZES.web_refresh('GRP_WER1','ZA_FORMA');
                  WT_ZES.web_refresh('GRP_WER1','ZA_FORMAA');
                  WT_ZES.web_refresh('GRP_WER1','WER_A')
               ?}
            |? _args.path='Todo' & BI_TODO.web_cntx_load(1)>0
            || web_def_close();
               BI_TODO.web_refresh(web_top_win(1))
            ?};
            _args.web_run()
         ?}
      ?};
      ZZ_DOK.cntx_pop();
      ZA_FORM.cntx_pop();
      ZA_FORM.web_close('WEB_CTRL')
   ?}
";
web_ask(_zamknij,
      'Czy na pewno zamknąć formularz ankiety?\n'
      'Dalsza możliwość edycji formularza zostanie zablokowana.'@);
~~


\get_pars_out
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [19.42]
:: OPIS: Formuła zwraca parametry wyjściowe dla czynności.
::   WE: _a - wskazanie na formularz ankiety
::   WY: Obiekt z parametrami wyjściowymi czynności.
::----------------------------------------------------------------------------------------------------------------------
_pars:=obj_new('ZA_FORM','ZAMKNIETY');
_pars.ZAMKNIETY:='N';
_pars.ZA_FORM:=null();

ZA_FORM.cntx_psh();
ZA_FORM.prefix();
{? ZA_FORM.seek(_a)
|| _pars.ZA_FORM:=ZA_FORM.ref();
   {? ZA_FORM.SLO_KOD().KOD='Z'
   || _pars.ZAMKNIETY:='T'
   ?}
?};
ZA_FORM.cntx_pop();
_pars

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:39 cf12ffcfaf5117653b65619ccbdf13b0e189befaf7c5a44f9c61bdc329183579b8fadd8500af179cecd0aaf52a09d10483bdf51d98b6dfee5f9e1487a0af924370aa3ed050553fb409e6d02d114ab7bfcdbc665d3af620ac36893fddfbe2d978b6de3c81f7e601f0f0029b183a042680649c326602e9ea5c7f8ead87cd318b21
