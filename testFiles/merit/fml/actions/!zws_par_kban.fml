:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: !zws_par_kban.fml [17.00]
:: Utworzony: 2015/01/08
:: Autor: PJ
::======================================================================================================================
:: Zawartosc: Formuly czynnosci rejestracja danych bankow
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Rejestracja danych urzedow skarbowych - glowna formula czynnosci
::   WE: _a - [obj_new] - parametry wejsciowe czynnosci
::       _b - [obj_new] - parametry wewnetrzne czynnosci
::       _c - [obj_new] - parametry wyjsciowe czynnosci
::       _d - obiekt odpowiedzialny za obsluge procesu
::----------------------------------------------------------------------------------------------------------------------
::# properties=GRP_FIRM
exec('banki','!zws_par_kban');
~~


\banki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Menu HOMEBANK definicje > Banki > Banki
::  OLD: \banki/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
__GBANKI:=1;
__ZBANKI:='';
BANORG.win_sel('WER_GRU');
B.win_sel('B_WER');
BANORG.hdr_sel();
BANORG.hdr_sel(' (zakres: wszystkie)'@);
BANORG.prefix();
BANORG.select(,1,10,'T');
__ZBANKI:='';
__GBANKI:=0


\banorg_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Okno tabeli BANORG
::   WE: [_a] - jeśli podano parametr dodajemy akcję WYBIERZ
::  OLD: \banorg_sel/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
_seln:=BANORG.mk_sel(,'P',0);
BANORG.win_fld(_seln,,'ID',,,4,,0,'ID'@,,'Identyfikator banku'@);
BANORG.win_fld(_seln,,'NAZ',,,85,,,'Nazwa'@,,'Pełna nazwa banku'@);
{? _ || BANORG.win_act(_seln,0,'Formuła','Wybierz'@@,,,"sel_exit()",,1,,,,'W') ?};
BANORG.win_act(_seln,0,'Szukaj',,,,"",,0);
BANORG.win_act(_seln,1,'Formuła','Dołącz'@@,,,"exec('banorg_add','!zws_par_kban')",,0,,,,'D');
BANORG.win_act(_seln,0,'Formuła','Dołącz'@@,,,"exec('banorg_add','!zws_par_kban')",,0,,,,'D');
BANORG.win_act(_seln,0,'Formuła','Usuń'@@,,,"exec('banorg_del','!zws_par_kban')",,,,,,'U');
BANORG.win_act(_seln,0,'Formuła','Popraw'@@,,,"exec('banorg_red','!zws_par_kban')",,0,,,,'P');
BANORG.win_act(_seln,0,'Formuła','Zmień zakres'@@,,,"exec('banorg_filtr','!zws_par_kban')",,0,,,,'Z',,'target=window');
BANORG.win_act(_seln,1,'Formuła','Zmień zakres'@@,,,"exec('banorg_filtr','!zws_par_kban')",,0,,,,'Z',,'target=window');
BANORG.win_act(_seln,0,'Formuła','Aktualizuj'@@,,,"exec('banorg_akt','!zws_par_kban')",,0,,,,'A',,'target=window');
BANORG.win_act(_seln,1,'Formuła','Aktualizuj'@@,,,"exec('banorg_akt','!zws_par_kban')",,0,,,,'A',,'target=window');
BANORG.win_act(_seln,0,'Formuła','Legenda'@@,,,"exec('legenda','color','BANORG#01')",,0,,,,'L',,'target=window');
BANORG.win_act(_seln,0,'Rekord',,,,"exec('b_rekprz','!zws_par_kban','BANORG#01#')",,0);
BANORG.win_act(_seln,0,'Kolejność');
BANORG.win_sel(_seln);
BANORG.hdr_sel();
BANORG.hdr_sel('Banki (zakres: bieżące)'@);
BANORG.index('NDX3');
BANORG.prefix('T');
1


\bl_banorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Blank dla pola B.BANORG
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__GBANKI')>0 & __GBANKI=1 || BANORG.ref() || null ?}


\be_banorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją dla pola B.BANORG
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__GBANKI')>0 & __GBANKI=1 || 0 || 1 ?}





\dv_bkraj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.70]
:: OPIS: Wartośc domyślna pola KODISO tabeli B
::  OLD: \dv_bkraj/skid_ror.fml
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.DEF_KRAJ
|| RB.set_kraj(); RB.INFOKRAR
|| KST.KRAJ
?}


\be_bkraj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.70]
:: OPIS: Przed redakcją pola KODISO tabeli B
::  OLD: \be_bkraj/skid_ror.fml
::----------------------------------------------------------------------------------------------------------------------
{? -(6+menu_txt())='szukaj'
|| 1
|? 1+menu_txt()<>'D'
|| SKID_RBK.cntx_psh();
   _ind:=SKID_RBK.ndx_tmp(,1,'BANK',,);
   SKID_RBK.index(_ind);
   SKID_RBK.prefix(B.ref());
   _ret:={? SKID_RBK.first() || 0 || 1 ?};
   SKID_RBK.ndx_drop();
   SKID_RBK.cntx_pop();
   _ret
|| 1
?}


\ae_swift
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.70]
:: OPIS: Po redakcji kodu SWIFT w tabeli B.
::  OLD: \ae_swift/skid_ror.fml
::----------------------------------------------------------------------------------------------------------------------
{? -menu_txt()<>'szukaj'
|| _swift:=fld();
   {? +_swift & (+_swift<>8 & +_swift<>11)
   || FUN.emsg('Błędny format numeru SWIFT.'@);
      0
   || 1
   ?}
|| 1
?}


\bdodprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Przed Dołącz B
::  OLD: \bdodprz/skid_ror.fml
::----------------------------------------------------------------------------------------------------------------------
B.cntx_psh();
B.prefix();
_wyn:=1;
{? ~B.first
|| exec('banki_import','!zws_par_kban');
   _wyn:=~B.first
?};
B.cntx_pop();
{? B.cur_prfx()*'A'
|| FUN.emsg('Podczas pracy z ustawionym zakresem danych: archiwalne,\nnie można dodawać oddziałów banków.'@);
   return(0)
?};
CurRec:=null;
{? ~_wyn
|| B.index('BANKST');
   B.prefix('B');
   B.hdr_sel();
   B.hdr_sel(' (zakres: bieżące)'@)
?};
_wyn


\fmformpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.10]
:: OPIS: Wyświetla specyfikacje skojarzone z bankiem lub z rachunkiem bankowym (przez bank)
::   WE: _a: 1 - dla banków; 2 - dla rachunków bankowych
::  OLD: \fmformpl/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1 || B.cntx_psh() ?};
{? _a=1 | SKID_RBK.BANK
|| {? _a=2 || SKID_RBK.BANK() ?};
   _spec:=FUN.choice('Wyświetlić specyfikacje:'@,,'Eksportu'@,'Importu wyciągów'@,'Importu kursów walut'@,'Pobierania sald'@);
   {? _spec<>0
   || {? _spec=1 || _rodz:='E'
      |? _spec=2 || _rodz:='I'
      |? _spec=3 || _rodz:='K'
      |? _spec=4 || _rodz:='S'
      ?};
      HBPKI.cntx_psh(); HBPKI.index('HBPKITP'); HBPKI.prefix(1,_rodz,B.NUMER);
      HBPKI.win_sel('HBPKITP'); HBPKI.hdr_sel(' dla banku: %1'@[B.NB]); HBPKI.select(,,,'T');
      HBPKI.cntx_pop()
   ?}
|| {? _a=2 & ~SKID_RBK.BANK
   || FUN.info('Nie wskazano banku dla rachunku bankowego.'@)
   ?}
?};
{? _a=1 || B.cntx_pop() ?}


\b_zakr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Lista oddziałów bankowych, akcja > Filtruj - zmiana zakresu prezentowanych danych
::  OLD: \b_zakr/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=FUN.choice('Zmiana zakresu na:'@,'INFO'@,'Wszystkie'@,'Bieżące'@,'Archiwalne'@);
_header:="B.hdr_sel();
          B.hdr_sel(' (zakres: %1)'@[_a])";
{? _wyn=1
|| _header('wszystkie');
   __ZBANKI:='';
   {? __GBANKI=1
   || B.prefix(BANORG.ref(),'')
   || B.prefix('')
   ?}
|? _wyn=2
|| _header('bieżące');
   __ZBANKI:='B';
   {? __GBANKI=1
   || B.index('BANKST2');
      B.prefix(BANORG.ref(),'B')
   || B.index('BANKST');
      B.prefix('B')
   ?}
|? _wyn=3
|| _header('archiwalne');
   __ZBANKI:='A';
   {? __GBANKI=1
   || B.index('BANKST2');
      B.prefix(BANORG.ref(),'A')
   || B.index('BANKST');
      B.prefix('A')
   ?}
?};
1


\banorg_filtr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Filtrowanie listy banków i instytucji kredytowych
::  OLD: \banorg_filtr/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
_wyb:=FUN.choice('Zmiana zakresu na:'@,,'Wszystkie'@,'Bieżące'@,'Archiwalne'@);
{? _wyb=1
|| BANORG.hdr_sel();
   BANORG.hdr_sel(' (zakres: wszystkie)'@);
   BANORG.index('NDX1');
   BANORG.prefix()
|? _wyb=2
|| BANORG.hdr_sel();
   BANORG.hdr_sel(' (zakres: bieżące)'@);
   BANORG.index('NDX3');
   BANORG.prefix('T')
|? _wyb=3
|| BANORG.hdr_sel();
   BANORG.hdr_sel(' (zakres: archiwalne)'@);
   BANORG.index('NDX3');
   BANORG.prefix('N')
?};
exec('set_buttons','!zws_par_kban');
grp_disp(B,'B_WER')


\set_buttons
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Ustawia wyszarzenie przycisków i akcji Dołącz
::----------------------------------------------------------------------------------------------------------------------
{? BANORG.size()=0
|| B.btn_sopt('B_WER','TAB_B_ADD','state=grayed');
   B.actions_grayed('B_WER','dZ:dZ')

|| B.btn_sopt('B_WER','TAB_B_ADD','state=normal');
   B.actions_grayed('B_WER','')
?}


\banorg_wyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na wypełnienie okna grupowego WER_GRU tabeli BANORG
::  OLD: \banorg_wyp/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
B.index('BANKST2');
{? BANORG.size()>0
|| {? __ZBANKI='' || B.prefix(BANORG.ref())
   |? __ZBANKI='B' || B.prefix(BANORG.ref(),'B')
   |? __ZBANKI='A' || B.prefix(BANORG.ref(),'A')
   ?}
|| B.prefix(null)
?};
grp_disp(B,'B_WER')


\banorg_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Usuwanie banku lub organizacji bankowej
::  OLD: \banorg_del/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
{? BANORG.count()
|| FUN.emsg('Bank wykorzystywany w systemie.\nUsunięcie niedozwolone.'@)
|| {? FUN.ask('Usunąć bank:\n%1?'@[BANORG.NAZ])
   || BANORG.del()
   ?}
?}


\banorg_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Aktualizacja banków i oddziałów bankowych
::  OLD: \banorg_akt/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
BANORG.cntx_psh();
B.cntx_psh();
exec('banki_import','!zws_par_kban');
BANORG.cntx_pop();
B.cntx_pop();
''


\banorg_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Dodawanie nowej pozycji tabeli BANORG
::----------------------------------------------------------------------------------------------------------------------
BANORG.blank();
{? BANORG.edit("__CHK.record(BANORG,,'NAZ')")
|| {? (BANORG.AKTYWNY='N' & BANORG.cur_prfx()*'T') | (BANORG.AKTYWNY='T' & BANORG.cur_prfx()*'N')
   || _vid:=0
   || _vid:=1
   ?};
   BANORG.cntx_psh();
   BANORG.prefix();
   _ref:=null();
   {? ~BANORG.add(1)
   || FUN.emsg('Dodanie pozycji zakończone niepowodzeniem.'@)
   || _ref:=BANORG.ref();
      {? ~_vid || FUN.info('Dodana pozycja może być niewidoczna ze względu na ustawienia zakresu danych.'@) ?}
   ?};
   BANORG.cntx_pop();
   BANORG.seek(_ref)
?}


\banorg_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Poprawianie pozycji tabeli BANORG
::  OLD: \banorg_red/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
{? BANORG.ID<100000
|| FUN.info('Pozycja importowana z NBP.\nModyfikowanie niedozwolone.'@);
   return(0)
?};
_ref:=BANORG.ref();
{? BANORG.edit("{? +BANORG.NAZ=0
                || FUN.emsg('Wypełnienie wszystkich pól jest obowiązkowe.'@);
                   'NAZ'
                || ''
                ?}
               ")
|| {? (BANORG.AKTYWNY='N' & BANORG.cur_prfx()*'T') | (BANORG.AKTYWNY='T' & BANORG.cur_prfx()*'N')
   || _vid:=0
   || _vid:=1
   ?};
   BANORG.cntx_psh();
   BANORG.prefix();
   {? ~BANORG.put(1)
   || FUN.emsg('Dodanie pozycji zakończone niepowodzeniem.'@)
   || {? ~_vid || FUN.info('Dodana pozycja może być niewidoczna ze względu na ustawienia zakresu danych.'@) ?}
   ?};
   BANORG.cntx_pop();
   BANORG.seek(_ref)
?}


\wbs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Wskazanie banku do oddzialu - akcja solo
::  OLD: \wbs/impexp.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__choice')=type_of(0) & __choice=2
|| B.BANORG:=null();
   B.put(1)
|? var_pres('__banorg')<>type_of(BANORG.ref())
|| {? var_pres('__banorg')<=0 | __banorg<0
   || _czy:={? B.BANORG || FUN.ask('Oddział jest powiązany z bankiem. Czy na pewno chcesz kontynuować?'@) || 1 ?};
      {? _czy
      || B.BANORG();
         exec('banorg_sel','!zws_par_kban',1);
         {? BANORG.select(,1,10)
         || B.cntx_psh();
            B.prefix();
            B.BANORG:=BANORG.ref();
            B.put(1);
            B.cntx_pop()
         || __banorg:=-1
         ?}
      ?}
   ?}
|| B.BANORG:=__banorg;
   B.cntx_psh();
   B.prefix();
   B.put(1);
   B.cntx_pop()
?};
{? B.sel_size=0 || exec('banorg_sel','!zws_par_kban') ?}


\bf_wbg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Wskazanie banku do oddziału - akcja grupa przed
::  OLD: \bf_wbg/impexp.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__banorg','__choice');
__banorg:=0;

__choice:=FUN.choice('Wybierz tryb:'@,,'Wskazanie ręczne'@,'wyZerowanie wskazań'@);
{? ~__choice
|| VAR_DEL.delete('__banorg','__choice');
   return(0)
?};
__banorg:=0;
{? __choice=1
|| _sel:=BANORG.win_sel('?');
   exec('banorg_sel','!zws_par_kban',1);
   {? BANORG.select
   || __banorg:=BANORG.ref()
   || BANORG.win_sel(_sel);
      return(0)
   ?};
   BANORG.win_sel(_sel)
|| 1
?}


\af_wbg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Wskazanie banku do oddziału - akcja grupa po
::  OLD: \af_wbg/impexp.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__banorg','__choice')


\download
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Pobranie pliku wskazanego i zapis zgodnie z pth
::   WE:  _a - ściezka do pliku
::       _b - nazwa pliku
::  OLD: \download/impexp.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_http:=exec('inet_get','proxy','@'+_a+_b,1);
_file:=fopen(_b,'bw',1,,1);
{? _file.is_open()
|| _res:=_http.http_get(_file)=200;
   _file.fclose();
   &_file
?};
_res


\banki_org_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Aktualizacja on-line tabeli BANORG
::   WE: _a - choice - wybór
::  OLD: \banki_org_imp/impexp.fml
::----------------------------------------------------------------------------------------------------------------------
BANORG.cntx_psh();
BANORG.index('NDX3');
BANORG.prefix();

_clean:="BANORG.cntx_pop()";
_opis:='Odczyt informacji z plików';

{? _a=1 || _opis+='.' || _clean(); return('') ?};
:: --------------------------------------------Import wlasciwy
_akcja:={? BANORG.size || 'T' || 'N' ?};

_imp1:=exec('uz_bank','!zws_par_kban','plewibnra.txt');
_add:=#(5+_imp1);
_put:=#(_imp1+5);
PROGRESS.close();
_clean();
(('00000'+$_add)+5)+':'+(('00000'+$_put)+5)


\banki_odd_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Aktualizacja on-line tabeli B
::   WE: _a - czy importować 1, czy wykorzystać pliki lokalne
::        _b - choice - wybór zakresu importu
::  OLD: \banki_odd_imp/impexp.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__Used');
B.cntx_psh();
B.index('BANKID');
B.prefix();
_isopl:=exec('kodiso','!zws_par_kban','PL');
_napraw:={? _b=1
          & sec_superuser()>0
          & B.first()
          & FUN.ask('Usunąć błędne i niewykorzystywane w systemie wpisy oddziałów banków polskich?\n'
                    '(funkcja uruchamiana tylko przy wywołaniu aktualizacji przez użytkownika specjalnego).'@)
         || 1
         || 0
         ?};
_choice:=_b;
_wyn:=0;
_opis:='Import informacji o oddziałach banków';
_akcja:={? B.size || 'T' || 'N' ?};

{? _choice=1
|| _opis+='.'
|| B.cntx_pop();
   return(0)
?};

:: Sprzątanie starych błędnych wpisów cz.1
{? _napraw & B.first()
|| PROGRESS.set(B.size(),'Trwa analizowanie danych...',FUN.TYT);
   VAR_DEL.delete('__isoplx','__choicx');
   __isoplx:=_isopl;
   __choicx:=_choice;
   B.for_each("{? B.KODISO=__isoplx & B.BANORG().ID<100000
                & ( __choicx=2 & (#(1+B.NUMER))<8
                  | __choicx=3 & (#(1+B.NUMER))>=8
                  | __choicx=1
                  )
               || B.BANORG:=null;
                  B.put(1)
               ?};
               PROGRESS.next()
              ");
   VAR_DEL.delete('__isoplx','__choicx');
   PROGRESS.close()
?};

:: import
_imp1:='';
_imp1:=exec('uz_jorg','!zws_par_kban',_akcja,'plewibnra.txt','T','(1 z 1');

B.prefix();
:: Sprzatanie starych błednych wpisów cz.2
:: uruchamiane tylko przy wywołaniu funkcji przez użytkownika "szef"
{? _napraw & B.first()
|| PROGRESS.set(B.size(),'Trwa analizowanie i naprawa danych...',FUN.TYT);
   {!
   |? PROGRESS.next();
      {? B.KODISO=_isopl & B.BANORG=null
       & B.count()=0
       & ( _choice=2 & (#(1+B.NUMER))<8
         | _choice=3 & (#(1+B.NUMER))>=8
         | _choice=1
         )
      || B.del()
      || B.next()
      ?}
   !};
   PROGRESS.close()
?};

_add:=#(5+_imp1);
_put:=#(_imp1+5);
PROGRESS.close();
B.cntx_pop();
VAR_DEL.delete('__Used');
(('00000'+$_add)+5)+':'+(('00000'+$_put)+5)


\nbp_download
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Pobranie plików z serwera NBP
::   WE: _a - ściezka aktualizacji (pusty string lub niepodanie przerywa działanie)
::   WY: ilość pobranych plików
::  OLD: \nbp_download/impexp.fml
::----------------------------------------------------------------------------------------------------------------------
_wynb:=0;
{? _>0 & +_a
|| _pobierz:="exec('download','!zws_par_kban',_a,_b)";

   PROGRESS.set(2,'Trwa pobieranie pliku z serwera NBP.',FUN.TYT);
   _wynb+=_pobierz(_a,'plewibnra.txt');
   PROGRESS.next();

   PROGRESS.close()
?};
_wynb


\uz_bank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: import banków komercyjnych i spółdzielczych
::   WE: _a - nazwa pliku importu
::  OLD: \uz_bank/impexp.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__IMP');
_wyn:='';
__badd:=__bput:=_err:=0;
__IMP:=tab_tmp(2,
               'ID','STRING[5]','ID banku',
               'NAZ','STRING[140]','Nazwa banku',
               'NAZH','STRING[100]','Nazwa handlowa banku',
               'SYM','STRING[50]','Symbole wyróżniające',
               'NRROZ','STRING[8]','Numer rozliczeniowy jednostki',
               'NAZJ','STRING[140]','Nazwa jednostki banku',
               'NAZJS','STRING[15]','Skrót jednostki banku',
               'MIEJSC','STRING[30]','Miejscowość',
               'ULICA','STRING[40]','Nazwa ulicy',
               'KODP','STRING[6]','Kod pocztowy',
               'POCZTA','STRING[30]','Miejscowość poczty',
               'SKRP','STRING[6]','Numer skrytki pocztowej',
               'KODPP','STRING[6]','Kod pocztowy miejscowości poczty',
               'NRKIER','STRING[12]','Pole puste',
               'TEL1','STRING[20]','Numer telefonu jednostki banku',
               'TEL2','STRING[20]','Numer telefonu jednostki banku',
               'TELX1','STRING[20]','Numer telefaxu jednostki banku',
               'TELX2','STRING[20]','Numer telefaxu jednostki banku',
               'DATAR','STRING[10]','Data wygenerowania numeru rozliczeniowego YYYY-MM-DD',
               'SWIFT','STRING[11]','BIC-SWIFT',
               'SEPA','STRING[11]','BIC-SEPA',
               'WWW','STRING[50]','Adres WWW banku',
               'WOJ','STRING[22]','Nazwa województwa',
               'POWIAT','STRING[25]','Powiat',
               'KMIEJSC','STRING[30]','Adres korespondencyjny - miejscowość',
               'KULICA','STRING[40]','Adres korespondencyjny - ulica z nr budynku',
               'KKODP','STRING[6]','Adres korespondencyjny - kod pocztowy',
               'KPOCZTA','STRING[30]','Adres korespondencyjny - poczta',
               'KSKRP','STRING[6]','Adres korespondencyjny - skrytka pocztowa',
               'KKODPP','STRING[6]','Adres korespondencyjny - kod pocztowy skrytki',
               'ZRZESZEN','STRING[5]','Zrzeszenie - nr banku zrzeszającego',
               'TEMP','STRING[8]','Pole puste');

::_f:=fopen(_a,'r',1);
::{? _f
::|| {! |? (_wiersz:=fread(_f))<>'\n' |!
::      _tab:=spli_str(_wiersz,'\t');
::      __IMP.ID:=form(_tab[1]);
::      __IMP.NAZ:=form(_tab[2]);
::      __IMP.NAZH:=form(_tab[3]);
::      __IMP.SYM:=form(_tab[4]);
::      __IMP.NRROZ:=form(_tab[5]);
::      __IMP.NAZJ:=form(_tab[6]);
::      __IMP.NAZJS:=form(_tab[7]);
::      __IMP.MIEJSC:=form(_tab[8]);
::      __IMP.ULICA:=form(_tab[9]);
::      __IMP.KODP:=form(_tab[10]);
::      __IMP.POCZTA:=form(_tab[11]);
::      __IMP.SKRP:=form(_tab[12]);
::      __IMP.KODPP:=form(_tab[13]);
::      __IMP.NRKIER:=form(_tab[14]);
::      __IMP.TEL1:=form(_tab[15]);
::      __IMP.TEL2:=form(_tab[16]);
::      __IMP.TELX1:=form(_tab[17]);
::      __IMP.TELX2:=form(_tab[18]);
::      __IMP.DATAR:=form(_tab[19]);
::      __IMP.SWIFT:=form(_tab[20]);
::      __IMP.SEPA:=form(_tab[21]);
::      __IMP.WWW:=form(_tab[22]);
::      __IMP.WOJ:=form(_tab[23]);
::      __IMP.POWIAT:=form(_tab[24]);
::      __IMP.KMIEJSC:=form(_tab[25]);
::      __IMP.KULICA:=form(_tab[26]);
::      __IMP.KKODP:=form(_tab[27]);
::      __IMP.KPOCZTA:=form(_tab[28]);
::      __IMP.KSKRP:=form(_tab[29]);
::      __IMP.KKODP:=form(_tab[30]);
::      __IMP.ZRZESZEN:=form(_tab[31]);
::      __IMP.TEMP:=form(_tab[32]);
::      __IMP.add(1);
::      &_tab
::   !};
::   fclose(_f)
::?};

_imp:=__IMP.import(_a,1,1,'\t',,,
                  'ID',,1,,
                  'NAZ',,2,,
                  'NAZH',,3,,
                  'SYM',,4,,
                  'NRROZ',,5,,
                  'NAZJ',,6,,
                  'NAZJS',,7,,
                  'MIEJSC',,8,,
                  'ULICA',,9,,
                  'KODP',,10,,
                  'POCZTA',,11,,
                  'SKRP',,12,,
                  'KODPP',,13,,
                  'NRKIER',,14,,
                  'TEL1',,15,,
                  'TEL2',,16,,
                  'TELX1',,17,,
                  'TELX2',,18,,
                  'DATAR',,19,,
                  'SWIFT',,20,,
                  'SEPA',,21,,
                  'WWW',,22,,
                  'WOJ',,23,,
                  'POWIAT',,24,,
                  'KMIEJSC',,25,,
                  'KULICA',,26,,
                  'KKODP',,27,,
                  'KPOCZTA',,28,,
                  'KSKRP',,29,,
                  'KKODPP',,30,,
                  'ZRZESZEN',,31,,
                  'TEMP',,32,
                  );

:: -----------------Konwersja do mazovii i obróbka tekstu
{? _imp & __IMP.first()
|| PROGRESS.set(__IMP.size(),'Przetwarzanie pliku '+_a,'Import informacji o bankach');
   __IMP.for_each("
                  __IMP.NAZ:=STR.s852maz(__IMP.NAZ);
                  {! |? __IMP.NAZ:=STR.gsub(__IMP.NAZ,'  ',' '); __IMP.NAZ*'  ' !};
                  __IMP.NAZ:=STR.gsub(__IMP.NAZ,'(przejęty przez','(p.przez');
                  __IMP.SYM:=STR.s852maz(__IMP.SYM);
                  __IMP.NAZH:=STR.s852maz(__IMP.NAZH);
                  __IMP.NAZJ:=__IMP.NAZ+' - '+STR.s852maz(__IMP.NAZJ);
                  __IMP.NAZJS:=_tmp:=STR.s852maz(__IMP.NAZJS);
                  __IMP.MIEJSC:=STR.s852maz(__IMP.MIEJSC);
                  __IMP.ULICA:=STR.s852maz(__IMP.ULICA);
                  __IMP.POCZTA:=STR.s852maz(__IMP.POCZTA);
                  __IMP.WOJ:=STR.s852maz(__IMP.WOJ);
                  __IMP.POWIAT:=STR.s852maz(__IMP.POWIAT);
                  __IMP.KMIEJSC:=STR.s852maz(__IMP.KMIEJSC);
                  __IMP.KULICA:=STR.s852maz(__IMP.KULICA);
                  __IMP.KPOCZTA:=STR.s852maz(__IMP.KPOCZTA);
                  __IMP.put();
:: ------------------Import do bazy
                  {? BANORG.find_tab(1,'ID',,'=',#__IMP.ID)
                  || 'aktualizacja wpisu';
                     _crc:=BANORG.crc();
                     BANORG.NRCB:='';
                     BANORG.KOD:=exec('get_kod','!zws_par_kban',__IMP.NAZJS);
                     BANORG.KODZ:='';
                     BANORG.NAZ:=__IMP.NAZ;
                     BANORG.KODZ:=__IMP.ZRZESZEN;
                     BANORG.AKTYWNY:='Q';
                     {? BANORG.crc()<>_crc
                     || __bput+=BANORG.put(1)
                     || BANORG.get(1)
                     ?}
                  || 'dodanie wpisu';
                     BANORG.NRCB:='';
                     BANORG.ID:=#__IMP.ID;
                     BANORG.KOD:=exec('get_kod','!zws_par_kban',__IMP.NAZJS);
                     BANORG.KODZ:=__IMP.ZRZESZEN;
                     BANORG.NAZ:=__IMP.NAZ;
                     BANORG.AKTYWNY:='Q';
                     __badd+=BANORG.add(1)
                  ?};

                  PROGRESS.next()
                 ",0);
   PROGRESS.close()
|| return('')
?};
_wy:=(('00000'+$__badd)+5)+':'+(('00000'+$__bput)+5);
VAR_DEL.delete('__badd','__bput');
_wy


\uz_jorg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: import oddziałów banków komercyjnych i spółdzielczych
::   WE:
::  OLD: \uz_jorg/impexp.fml
::----------------------------------------------------------------------------------------------------------------------
BANORG.cntx_psh();
BANORG.prefix();
B.prefix();
_add:=_put:=_err:=0;
_clear:="BANORG.cntx_pop()";

:: ---------------Import do bazy
_isopl:=exec('kodiso','!zws_par_kban','PL');
PROGRESS.set(__IMP.size(),'Import danych','Import informacji o bankach');
{? __IMP.first
|| {!|?
      {? B.find_tab(1,'NUMER',,'=',__IMP.NRROZ,'KODISO',,'=',_isopl)
      ||
::          Aktualizacja wpisu
            _crc:=B.crc();
            {? ~(+B.KOD)
            || B.KOD:=exec('first_free','homebank')
            ?};
            B.K:=form(__IMP.KODP);
            B.UL:=form(__IMP.ULICA);
            B.M:=form(__IMP.MIEJSC);
            B.STATUS:='Q';
            B.BANORG:={? BANORG.find_tab(,'ID',,'=',#__IMP.ID)
                      || BANORG.ref()
                      || null()
                      ?};
            B.NB:=form(__IMP.NAZJ);
            {? B.NB+1=' ' || {! |? B.NB:=B.NB-1; B.NB+1=' ' !} ?};
            B.SWIFT:=form(__IMP.SWIFT);
            {? B.put(1) & var_pres('__Used')=type_of(SYSLOG) & __Used.first || __Used.del() ?};
            {? B.crc()<>_crc
            || _put+=1
            ?}

      ||
::       Dodanie wpisu
         B.blank();
         B.KOD:=exec('first_free','homebank');
         B.NB:=__IMP.NAZJ;
         B.K:=__IMP.KODP;
         B.UL:=__IMP.ULICA;
         B.M:=__IMP.MIEJSC;
         B.NUMER:=__IMP.NRROZ;
         B.KODISO:=_isopl;
         B.STATUS:='Q';
         B.BANORG:={? BANORG.find_tab(,'ID',,'=',#__IMP.ID)
                   || BANORG.ref()
                   || null()
                   ?};
         B.NB:=form(__IMP.NAZJ);
         {? B.NB+1=' ' || {! |? B.NB:=B.NB-1; B.NB+1=' ' !} ?};

:: Dodajemy tylko poprawne wpisy oddziału związane z bankiem
         _adl:=_add;
         _add+={? B.BANORG<>null || B.add(1) || B.blank(1); 0 ?};
         {? _adl<_add & var_pres('__Used')=type_of(SYSLOG) & __Used.first || __Used.del() ?}
      ?};
      PROGRESS.next();
      __IMP.next
   !}
|| _clear();
   return('')
?};
PROGRESS.close();
VAR_DEL.delete('__IMP');
BANORG.cntx_pop();
(('00000'+$_add)+5)+':'+(('00000'+$_put)+5)


\get_kod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.41]
:: OPIS: Zwraca kod banku na podstawie skrótu jednostki
::   WE: _a = _skrót nazwy jednostki bankowej
::   WY: kod banku
::  OLD: \get_kod/impexp.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 | +_a=0 || return('') ?};
_i:=1;
_next:=1;
{! |?
    _znak:=exec('mid','#string',_a,_i,1);
    {? _znak=' ' | _znak='.'
    || _next:=0;
       _a:=(_i-1)+_a
    || _i+=1
    ?};
    _next & _i<+_a
!};
_a


\adres_http_bank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Formuła zwraca ścieżke do serwera z aktualizacjami słownika banków
::  OLD: \adres_http_bank/skid_upd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,HINFO,'HTTPBANK'); HINFO.HTTPBANK


\banki_demo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Importuje kartoteke banków, oddziałów i typów transakcji
::   WE: [_a] 1 - zawsze wszystkie [INTEGER] - bez pytania; brak lub 0 - działanie domyślne
::       [_b] 1 - wymuszenie aktualizacji
::  OLD: \banki_demo/skid_upd.fml
::----------------------------------------------------------------------------------------------------------------------
_pytaj:={? _>0 & var_pres('_a')=type_of(0) || ~_a || 1 ?};
_wyn:=0;
_wymus:={? _>1 & var_pres('_b')=type_of(0) & _b=1 || 1 || 0 ?};
{? ((_pytaj & FUN.ask('Czy zaimportować dane demonstracyjne słownika banków?'@)) | ~_pytaj)
 & _wymus | exec('czy_new_bank','!zws_par_kban')
|| exec('banki_import','!zws_par_kban',1);
   TYPYTRAN.prefix();
   TYPYTRAN.import('typytran.dfk',,1,'@',,,
                   'RODZSL',,1,,'KOD',,2,,'TYPTRAN',,3,,'KONTO',,4,,'ROZR',,5,,'BANK','NB',6,,
                   'BANK','NUMER',7,,'RODZ',,8,);
   1
?};
_wyn


\banki_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: import banków
::   WE: [_a] - (1)zawsze wszystkie [INTEGER] - bez pytania
::  OLD: \banki_import/skid_upd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('myURL','object');
_demo:={? _>0 & var_pres('_a')=type_of(0)
       || _a
       || 0
       ?};
_clear:="VAR_DEL.delete('__bwyn','__owyn')";
exec('pl_pl','dane_startowe');
__bwyn:=__owyn:=0;
_url_nbp:='';
_import:=0;
_url_nbp:=exec('adres_http_bank','!zws_par_kban');
{? ~+_url_nbp & ~_demo
|| exec('czytaj','#stalesys',,HINFO,'HTTPBANK');
   HINFO.HTTPBANK:=exec('bl_banki_http','ustawienia');
   exec('zapisz','#stalesys',1,HINFO,'HTTPBANK');
   _url_nbp:=exec('adres_http_bank','!zws_par_kban')
?};
{? _demo & +_url_nbp=0
|| _url_nbp:=exec('bl_banki_http','ustawienia')
?};
{? +_url_nbp & _url_nbp*'.pl/'
|| _import:=1
|| FUN.info('Import z plików lokalnych serwera.'
            '\nNiezdefiniowany bądź nieprawidłowy adres sieciowy.'
            '\nAby skonfigurować pobieranie wpisz poprawny adres w menu:'
            '\ndeFinicje > Parametry programu > Adres serwera NBP z aktualizacjami banków i oddziałów.'@
           );
   _url_nbp:='';
   _import:=0
?};
_choice:={? _demo
         || 1
         || {? _import
            || FUN.ask('Zaktualizować informacje dotyczące banków i oddziałów\n'
                       'na podstawie informacji udostępnianych\n'
                       'na serwerach Narodowego Banku Polskiego?'@)
            || FUN.ask('Zaktualizować informacje dotyczące banków i oddziałów\n'
                       'na podstawie pliku lokalnego?'@)
            ?}
         ?};
{? _choice=0
|| _clear();
   return(0)
?};
{? _import
 & exec('nbp_download','!zws_par_kban',_url_nbp)<1
|| {? ~FUN.ask('Pobranie informacji z serwerów NBP zakończyło się niepowodzeniem.\n'
               'Kontynuować na podstawie pliku lokalnego?'@)
   || _clear();
      return(0)
   ?}
?};
_openx:=1;
{? (_fxo:=fopen('plewibnra.txt','r',1))
|| _wiersz:=fread(_fxo);
:: weryfikacja czy plik zawiera 32 pola oddzielone tabulatorami
   _tab:=spli_str(_wiersz,'\t');
   {? obj_len(_tab)<>32 || _openx:=0 ?};
   &_tab;
   fclose(_fxo); &_fxo
|| _openx:=0
?};
{? ~_openx
|| FUN.emsg('Błąd lokalizacji pliku z aktualizacjami lub plik niepoprawny.\n'
            'Operacja zostanie przerwana.'@);
   _clear();
   return(0)
?};
exec('banki_org_imp','!zws_par_kban',_choice);
exec('banki_odd_imp','!zws_par_kban',_import,_choice);
BANORG.prefix();
BANORG.for_each("{? BANORG.ID<100000
                 || {? BANORG.AKTYWNY<>'Q'
                    || BANORG.AKTYWNY:='N'
                    || BANORG.AKTYWNY:='T'
                    ?};
                    BANORG.put()
                 ?}
               ");
B.prefix();
B.for_each("{? B.KODISO().KODISO='PL'
            || {? B.STATUS<>'Q'
               || B.STATUS:='A'
               || B.STATUS:='B'
               ?};
               B.put()
            ?};
            exec('pop_slo','slo_slu','B')",1);
{? var_pres('start0')>0 & ~start0 || FUN.info('Aktualizacja zakończona.'@) ?};
_clear()


\kodiso
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Zwraca ref tabeli kraje dla podanego kodu ISO kraju
::   WE: _a [STRING] - kod iso kraju
::   WY: ref tabeli KRAJE
::  OLD: \kodiso/skid_upd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & _a<>''
|| KRAJE.cntx_psh();
   KRAJE.index('KODISO');
   KRAJE.prefix(_a,_a);
   {? KRAJE.first() || _ref:=KRAJE.ref() || _ref:=null ?};
   KRAJE.cntx_pop()
|| _ref:=null
?};
_ref


\czy_new_bank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Funkcja sprawdza czy banki sa wg. nowego schematu
::   WY: 0 - zaktualizowane
::       1 - nalezy zaktualizowac
::      -1 - blad struktury
::  OLD: \adres_http_bank/skid_upd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? var_pres('BANORG',B) & var_pres('BANORG')
|| BANORG.cntx_psh();
   BANORG.prefix();
   {? ~BANORG.size
   || _wyn:=1
   ?};
   BANORG.cntx_pop()
|| _wyn:=-1
?};
_wyn


\hdrbspac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Przed Wyświetl tabeli B
::  OLD: \hdrbspac/skid_ror.fml
::----------------------------------------------------------------------------------------------------------------------
{? B.win_edit('?')='RED' | B.win_edit('?')='SZUK'
|| _tytul:=': zawartość bieżącego rekordu'
|| _tytul:='Zawartość bieżącego rekordu'
?};
B.hdr_edit(_tytul);
B.display()


\b_rekprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009]
:: OPIS: Formuła na rekord przed dla tabeli B
::  OLD: \b_rekprz/skid_ror.fml
::----------------------------------------------------------------------------------------------------------------------
Color.rekprzed(_a)


\bkolor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009]
:: OPIS: Podświetlenie archiwalnych oddziałów bankowych
::  OLD: \bkolor/skid_ror.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1)=B
|| {? B.STATUS='A' || 'B#01#01' || 'B#01#02' ?}
|? cur_tab(1,1)=BANORG
|| exec('set_buttons','!zws_par_kban');
   {? BANORG.AKTYWNY='N' || 'BANORG#01#01' || 'BANORG#01#02' ?}
?}


\uid_banku
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Generowanie unikalnego identyfikatora banku dla pozycji dodanych ręcznie
::  OLD: \uid_banku/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
_skul:=sql('select max(ID) as ID from BANORG where ID>9999');
{? _skul.first & _skul.ID>=100000
|| _skul.ID+1
|| 100000
?}


\slo_pop_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Akcja 'Popraw' z poziomu okienek wertowania tabeli SLO
::  OLD: \slo_pop/wspol.fml
::  TAG: <SLOSLU>
::----------------------------------------------------------------------------------------------------------------------
{? exec('test_slo','slo_slu')=0
|| FUN.info('Poprawienie pozycji słownika niemożliwe w bieżącej firmie.'@);
   return(0)
?};
SLO.SLU();
RS.cntx_psh(); RS.index('RS'); RS.prefix();
{? RS.find_key(SLU.WZ,) & RS.TAB='B'
|| _sp:={? var_pres('slo_pop')>0 || _slo_pop:=slo_pop; 1 || 0 ?};
   _rs:={? var_pres('ref_slo')>0 || _ref_slo:=ref_slo; 1 || 0 ?};
   slo_pop:=1; ref_slo:=null; exec('slu_okn','slo_slu');
   _i:=RS.ref();
   {? (_r_szuk:=exec('wz_szuk','slo_slu'))
   || CurRec:=B.ref();
      B.win_edit('RED');
      _g:=$(RS.TAB+'.put()');
      exec('cn_psh','slo_slu');
      {? B.edit("exec('spr_b','hbn')")
      || exec('cn_pop','slo_slu');
         {? var_pres('ref_slo')>0 & ref_slo<>null || SLO.seek(ref_slo) ?}; _h:=1;
         do();
         _k:=SLO.KOD; _t:=SLO.TR; _msg:='';
         {? _g()
         || {? _r_szuk<>-1 & ~RS.seek(_i)
            || undo();
               _msg:='Nie znaleziono rekordu tabeli RS.'
            || _msg:=exec('akt_slo','slo_slu',_k,_t)
            ?}
         ?};
         end();
         {? _msg<>'' || FUN.info(_msg) ?}
      || exec('cn_pop','slo_slu'); {? ref_slo<>null || SLO.seek(ref_slo) ?}
      ?}
   ?};
   {? _sp || slo_pop:=_slo_pop || VAR_DEL.delete('slo_pop') ?};
   {? _rs || ref_slo:=_ref_slo || VAR_DEL.delete('ref_slo') ?}
|| FUN.info('Akcja dostępna wyłącznie dla słowników o wzorcu Bank.'@)
?};
exec('tab_f_rfresh','slo_filtr',SLO);
RS.cntx_pop();
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:41 e1ba349787eef8ea01bbe6d32984bee91fb94fa83a85ce587e9735de332b262260ece49508be53d04b9b14c3508d4a764423c5d88cd9bc4e31ec3472544779bcc98027d33451edc87949dc6eca787b3b25a196055ffd6caeb9cde0c2680325f7c8c796b81bc7e01db50ed3d0b98bbcccb903b76f4b9f83d31289558ea710ba74
