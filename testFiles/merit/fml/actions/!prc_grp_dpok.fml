:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !prc_grp_dpok.fml
:: Utworzony: 07.06.2017
:: Autor: areKc
::======================================================================================================================
:: Zawartość: Formuły czynności: PRC_GRP_DPOK - Grupowe przypisanie pracowników do okresu.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.28]
:: OPIS: Grupowe przypisanie pracowników do okresu.
::   WE:
::   WY:
::  OLD: \listprac/okres.fml
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL

:: utwórz zestaw formuł
_set:=exec('fun_set','object');
_acc:=(A_OKR.S='O');

:: na podstawie domyślnego okresu
exec('xxx_grp_act','personel',
   _set,
   'PRC_GRP_DPOK',
   'Na podstawie okresu domyślnego'@,
   'Przypisanie współpracowników do okresu na podstawie domyślnego okresu.'@,,
   "exec('domyslny','!prc_grp_dpok')",
   _acc
);

:: na podstawie poprzedniego okresu
exec('xxx_grp_act','personel',
   _set,
   'PRC_GRP_DPOK',
   'Z poprzedniego okresu'@,
   'Przypisanie współpracowników do okresu na podstawie poprzedniego okresu.'@,,
   "exec('poprzedni','!prc_grp_dpok')",
   _acc
);

:: na podstawie wzorca kalendarza współpracownika
exec('xxx_grp_act','personel',
   _set,
   'PRC_GRP_DPOK',
   'Na podstawie kalendarza'@,
   'Przypisanie pracowników do okresu na podstawie wzorca kalendarza.'@,,
   "exec('kalendarz','!prc_grp_dpok')",
   _acc
);

_set.run('Przypisanie do okresu'@);
~~


\domyslny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.10]
:: OPIS: Wczytaj pracowików na podstawie domyślnego przypisania pracowników do okresów
::   WE:
::   WY:
::  OLD: \domyslny_prac/okres.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('check','!prc_grp_dpok','domyslny')
|| return('')
?};

P.cntx_psh();
_tab_p:=exec('dostepne_p','schemat',
   'PRC',
   {? +P_FILTER.F_ZATR().KOD || P_FILTER.F_ZATR().KOD || '*T' ?},
   P_FILTER.STATUS
);

A_OKRP.cntx_psh();
A_OKRP.index('A_OKRPR');
A_OKRP.prefix(A_OKR.ref());
{? A_OKRP.first() & _tab_p.first()
|| {!
   |? {? P.seek(_tab_p.REF,,1) & A_OKRP.find_key(P.ref())
      || _can_continue:=exec('del_A_OKRP','grafik',A_OKRP.ref());
         _can_continue>0
      ?};
      _tab_p.next()
   !}
?};
A_OKRP.cntx_pop();

_error:=exec('gen_tab_error','okres');
{? _tab_p.first()
|| _tab:=tab_tmp(1,
      'P','INTEGER','Ref',
      'OD','DATE','OD',
      'DO','DATE','DO'
   );
   {!
   |? {? P.seek(_tab_p.REF,,1)
      || A_OKRD.index('POKR');
         A_OKRD.prefix(P.ref(),A_OKR.NAZ);
         {? A_OKRD.find_le(A_OKR.DO)
         || _do:=A_OKR.DO;
            _ref:=A_OKRD.ref();
            A_OKRD.index('POD');
            A_OKRD.prefix(P.ref());
            _od:=A_OKRD.OD;
            {!
            |? {? A_OKRD.prev() & A_OKR.NAZ=A_OKRD.A_OKRN
               || _od:=A_OKRD.OD; 1
               ?}
            !};
            A_OKRD.seek(_ref);
            {? _od<A_OKR.OD || _od:=A_OKR.OD ?};
            _ok:=1;
            {? A_OKRD.next()
            || {? A_OKRD.OD<=A_OKR.OD
               || _ok:=0
               |? A_OKRD.OD<=A_OKR.DO
               || _do:=A_OKRD.OD-1
               ?}
            ?};
            {? _ok & exec('spr_kal_rok','okres',P.ref(),_error,A_OKR.OD,A_OKR.DO)
            || _tab.blank();
               _tab.P:=#P.ref();
               _tab.OD:=_od;
               _tab.DO:=_do;
               _tab.add()
            ?}
         ?}
      ?};
      _tab_p.next()
   !};
   exec('przypisz_prac','okres',_tab,_error)
?};
P.cntx_pop();
A_OKRP.unlock();
{? _error.first()
|| _error.win_sel(_error.mk_sel('Błędy przypisania pracowników do okresu rozliczeniowego.'@,,1));
   _error.select()
?};
''


\poprzedni
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.10]
:: OPIS: Wczytanie pracownikow na podstawie poprzedniego okresu.
::  OLD: \prac_pop_okres/okres.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('check','!prc_grp_dpok','poprzedni')
|| return('')
?};
P.cntx_psh();
_tab_p:=exec('dostepne_p','schemat',
   'PRC',
   {? +P_FILTER.F_ZATR().KOD || P_FILTER.F_ZATR().KOD || '*T' ?},
   P_FILTER.STATUS
);
A_OKRP.cntx_psh();
A_OKRP.index('A_OKRPR');
A_OKRP.prefix(A_OKR.ref());
{? A_OKRP.first() & _tab_p.first()
|| {!
   |? {? P.seek(_tab_p.REF,,1) & A_OKRP.find_key(P.ref())
      || _can_continue:=exec('del_A_OKRP','grafik',A_OKRP.ref());
         _can_continue>0
      ?};
      _tab_p.next()
   !}
?};
A_OKRP.cntx_pop();
A_OKR.cntx_psh();
A_OKR.index('A_OKRNN');
_data:=A_OKR.OD;
_datado:=A_OKR.DO;
_error:=exec('gen_tab_error','okres');
A_OKR.prefix(A_OKR.NAZ);
{? A_OKR.prev()
|| _tab:=tab_tmp(1,
   'P','INTEGER','Ref',
   'OD','DATE','OD',
   'DO','DATE','DO');
   A_OKRP.cntx_psh();
   A_OKRP.index('A_OKRPR');
   A_OKRP.prefix(A_OKR.ref());
   {? A_OKRP.first() & _tab_p.first()
   || {!
      |? {? P.seek(_tab_p.REF,,1) & A_OKRP.find_key(P.ref()) & exec('spr_kal_rok','okres',A_OKRP.P,_error,_data,_datado)
         || _tab.blank(1);
            _tab.P:=#A_OKRP.P;
            _tab.OD:=_data;
            _tab.DO:=_datado;
            _tab.add()
         ?};
         _tab_p.next()
      !}
   ?};
   A_OKR.cntx_pop();
   A_OKRP.prefix(A_OKR.ref());
   exec('przypisz_prac','okres',_tab,_error);
   A_OKRP.cntx_pop()
|| A_OKR.cntx_pop()
?};
P.cntx_pop();
A_OKRP.unlock();
{? _error.first()
|| _error.win_sel(_error.mk_sel('Błędy przypisania pracowników do okresu rozliczeniowego.'@,,1));
   _error.select()
?};
''


\kalendarz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [mk] Michał Kocot [2006]
:: OPIS: Zbiera listę pracowników
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('check','!prc_grp_dpok','kalendarz')
|| return('')
?};

_add:=
   "  {? P.DZA<=A_OKR.DO & (P.DZ=#0 | P.DZ>=A_OKR.OD)
      || A_OKRP.blank();
         A_OKRP.OKR:=__HARM.OKR_REF;
         A_OKRP.P:=P.ref();
         A_OKRP.OSOBA:=P.OSOBA;
         A_OKRP.OD:={? P.DZA<A_OKR.OD || A_OKR.OD || P.DZA ?};
         A_OKRP.DO:=
            {? P.DZ<A_OKR.DO
            || {? P.DZ=#0 || A_OKR.DO || P.DZ ?}
            || A_OKR.DO
            ?};
         1
      ?}
   ";
_okr_naz:=A_OKR.NAZ().NAZ;

A_OKRN.index('A_OKRN');
A_OKRN.clear();
_okrn:={? A_OKRN.find_key(_okr_naz,) || A_OKRN.ref() || null() ?};
{? ~_okrn
|| FUN.emsg('%1\n%2'['Nie znaleziono nazwy okresu.'@,'Kontynuacja funkcji nie jest możliwa.'@]);
   return('')
?};
{? ~A_OKRP.lock(1,1)
|| FUN.emsg('%1\n%2'['Funkcja została zablokowana przez innego operatora.'@,'Akcja została anulowana.'@]);
   return('')
?};
_tab_p:=exec('dostepne_p','schemat',
   'PRC',
   {? +P_FILTER.F_ZATR().KOD || P_FILTER.F_ZATR().KOD || '*T' ?},
   P_FILTER.STATUS
);
P.cntx_psh();
A_OKRP.cntx_psh();
A_OKRP.index('A_OKRPR');
A_OKRP.prefix(A_OKR.ref());
{? A_OKRP.first() & _tab_p.first()
|| {!
   |? {? P.seek(_tab_p.REF,,1) & A_OKRP.find_key(P.ref())
      || _can_continue:=exec('del_A_OKRP','grafik',A_OKRP.ref());
         _can_continue>0
      ?};
      _tab_p.next()
   !}
?};

_d_r_m:=date(A_OKR.DO~1,A_OKR.DO~2,1);
_roki:=A_OKR.DO~1;
_mies:=A_OKR.DO~2;

A_OKRKA.index('A_OKRKA');
A_OKRKA.clear();
_licz:=0;
_od:=date(A_OKR.OD~1,A_OKR.OD~2,1);
_do:=date(_d_r_m~1,_d_r_m~2,1);
{!
|? _od<=_do
|! _licz+=1;
   _od:=date(_od~1,_od~2,0)+1
!};
FUN.prg_start(_licz*P.size(),'Zbieram dane.'@,,,1);
_error:=exec('gen_tab_error','okres');
{!
|? _d_r_m>=date(A_OKR.OD~1,A_OKR.OD~2,1)
|! MASK.Use('R_KWGODZ',_roki,_mies);
   MASK.Use('R_PRACDN',_roki,_mies);
   {? P.first() & _tab_p.first()
   || {!
      |? {? P.seek(_tab_p.REF,,1)
         || R_WZCZ.index('R_WZCZ');
            {? {? P.DZ<>#0 || A_OKR.OD<=P.DZ || 1 ?} & P.DZA<=A_OKR.DO
            || R_WZCZ.prefix(P.name(),P.ref());
               _kal:=
                  {? R_WZCZ.find_le(A_OKR.DO)
                  || R_WZCZ.KAL
                  || null()
                  ?};
               {? ~R_WZCZ.first() || _kal:=P.KAL ?};
               _ok:=1;
               {? _kal<>null()
               || {!
                  |? {? A_OKRKA.find_key(_okrn, _kal)
                     || {? ~A_OKRP.find_key(P.ref())
                        || _ok:=0;
                           {? exec('spr_kal_rok','okres',P.ref(),_error,A_OKR.OD,A_OKR.DO)
                           || {? _add()
                                 &
                                 exec('spr_a_okrp','okres',P.ref(),_error,A_OKRP.OD,A_OKRP.DO,A_OKR.ref())
                                 &
                                 A_OKRP.add(1)
                              || P.cntx_psh();
                                 exec('oblicz','okres',0);
                                 P.cntx_pop();
                                 exec('dodaj_do_buff','grafik','P',A_OKRP.P,A_OKRP.OKR,,,2);
                                 exec('dodaj_do_buff','grafik','G',A_OKRP.P,A_OKRP.OKR,A_OKRP.OD,A_OKRP.DO,2);
                                 exec('dodaj_do_buff','grafik','W',A_OKRP.P,A_OKRP.OKR,A_OKRP.OD,A_OKRP.DO,2);
                                 exec('endPl4ClMonth','okres',A_OKRP.ref())
                              ?}
                           ?}
                        ?}
                     ?};
                     _ok & R_WZCZ.prev()
                  !}
               ?}
            ?};
            FUN.prg_next()
         ?};
         _tab_p.next()
      !}
   ?};
   _d_r_m:=date(_d_r_m~1,_d_r_m~2-1,1);
   _roki:=_d_r_m~1;
   _mies:=_d_r_m~2
!};
A_OKRP.unlock();
{? _error.first()
|| _error.win_sel(_error.mk_sel('Błędy przypisania pracowników do okresu rozliczeniowego.'@,,1));
   _error.select()
?};
FUN.prg_stop();
A_OKRP.cntx_pop();
P.cntx_pop();
''


\check
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.42]
:: OPIS: Formuła sprawdza czy można  dokonać przypisania pracowników do okresu
::   WE: _a [STRING] - rodzaj przypisania
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_rodzaj:={? var_pres('_a')=type_of('') || _a || return(_result) ?};

_ok:=1;
:: sprawdzenie czy są już podpięci pracownicy do okresu rozliczeniowego
_tab_p:=exec('dostepne_p','schemat',
   'PRC',
   {? +P_FILTER.F_ZATR().KOD || P_FILTER.F_ZATR().KOD || '*T' ?},
   P_FILTER.STATUS
);
_size:=sql('select * from A_OKRP join :_a using (A_OKRP.P,:_a.REF) where A_OKRP.OKR=:_b',_tab_p,A_OKR.ref()).size();

{? _size
|| FUN.emsg('%1\n%2'['W wybranym okresie rozliczeniowym pracownicy zostali już przypisani.'@,
                  'Akcja została anulowana.'@]);
   _ok:=0
?};

_text:='Akcja spowoduje usunięcie i ponowne przypisanie współpracowników\n'
            'w wybranym okresie rozliczeniowym, na podstawie %1\n%2'
            [{? _rodzaj='domyslny'
             || 'okresu domyślnego.'
             |? _rodzaj='kalendarz'
             || 'przypisanych wzorców kalendarzy.'
             |? _rodzaj='poprzedni'
             || 'poprzedniego okresu.'
             || _ok:=0;
                ''
             ?},
             'Kontynuować?'@
            ];

{? _ok & FUN.ask(_text)
|| {? ~A_OKRP.lock(1,1)
   || FUN.emsg('%1\n%2'['Funkcja została zablokowana przez innego operatora.'@,'Akcja została anulowana.'@])
   ?};
   _result:=1
?};
_result

:Sign Version 2.0 jowisz:1045 2023/10/17 10:20:44 504bd73055b0bca1a99b7a31107782c5c02f5f3c09bd39a8dec25e87ed0fca89346e5adfbabd54c098d56bcd12412f3eaaffc2197f2d637de7a9c33166e2fe0fcfbcfc09cd7004b04cab3cbf58e89e76b5123bcbce69962bd594b96c029203caa4f3a54463f17f41dd8a8c766a242049c559027e77751c4f4128403138d28747
