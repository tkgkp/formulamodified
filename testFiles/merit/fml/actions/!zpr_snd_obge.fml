:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zpr_snd_obge.fml
:: Utworzony: 21.11.2016
:: Autor: AFI
::======================================================================================================================
:: Zawartość: Formuły czynności ZPR_SND_OBGE - Wysyłanie e-maili (obiegi)
::======================================================================================================================

\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [17.00]
:: OPIS: Wysyłanie e-maili (obiegi) - główna formuła czynności ZPR_SND_OBGE
::----------------------------------------------------------------------------------------------------------------------
::# properties=SEND
::# kind=WE, symbol=DELEGACJE, type=STRING, name=Wysyłać powiadomienia dla delegacji, required=N, fml_val="exec('params','!zpr_snd_obge',_a,1)"
::# kind=WE, symbol=WNIOSKI, type=STRING, name=Wysyłać powiadomienia dla wniosków, required=N, fml_val="exec('params','!zpr_snd_obge',_a,2)"
::# kind=WE, symbol=FAKTURY, type=STRING, name=Wysyłać powiadomienia dla faktur, required=N, fml_val="exec('params','!zpr_snd_obge',_a,3)"
::# kind=WE, symbol=ZALICZKI, type=STRING, name=Wysyłać powiadomienia dla zaliczek, required=N, fml_val="exec('params','!zpr_snd_obge',_a,4)"
::# kind=WE, symbol=EMAIL_ERR, type=STRING, name=E-mail z inf. o błędach w wysyłce, required=N
::# kind=WE, symbol=ILE_DNI, type=NUMBER, name=Liczba dni od rejestracji dokumentu, required=N

_mp:=params_get().mp;
_in:=params_get().in;
_out:=params_get().out;
_komunik:=(_mp.pathTodo() | _mp.pathProc()) & ~_mp.isAutoRun() & ~_mp.isService();
_ok:=~_komunik |
   FUN.ask('Czy uruchomić wysyłanie wiadomości e-mail o dokumentach w obiegu?'@);
{? _ok
|| _delegacje:={? var_press('DELEGACJE',_in)>0 || _in.DELEGACJE='Tak' ?};
   _wnioski:={? var_press('WNIOSKI',_in)>0 || _in.WNIOSKI='Tak' ?};
   _faktury:={? var_press('FAKTURY',_in)>0 || _in.FAKTURY='Tak' ?};
   _zaliczki:={? var_press('ZALICZKI',_in)>0 || _in.ZALICZKI='Tak' ?};
   _errmail:={? var_press('EMAIL_ERR',_in)>0 || _in.EMAIL_ERR || '' ?};
   _days:={? var_press('ILE_DNI',_in)>0 || _in.ILE_DNI || 730 ?};
   exec('send_remind','!zpr_snd_obge',
      _in.SENDER,_in.FROM,_in.REPLYTO,_errmail,_komunik,_delegacje,_wnioski,_faktury,_zaliczki,_days
   );
   _mp.done()
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Formuła na opis czynności na liście ToDo
::----------------------------------------------------------------------------------------------------------------------
'Wyślij wiadomości e-mail z przypomnieniem o podjęciu decyzji w obiegu'@@


\send_remind
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [12.10]
:: OPIS: Start systemu - wprowadzanie danych
::   WE: _a - nadawca
::       _b - od
::       _c - odpowiedź do
::       _d - email administratora - wysylanie maila z informacją o błędach
::       _e - wyświetlać podsumowanie? 1-tak 0-nie
::       _f - czy delegacje
::       _g - czy wnioski
::       _h - czy faktury
::       _i - czy zaliczki
::       _j - liczba dni
::----------------------------------------------------------------------------------------------------------------------
_err:=_d<>'';
_prevUser:=''; _usr:=0; _usrNew:=1; _next:=0;
{? _err
|| VAR_DEL.delete('Body','EdokTab','tmpstring1');
   Body:=obj_new('BODY','LP','ind','add','first');
   Body.first:=1;
   Body.BODY:=tab_tmp(1,
      'LP','INTEGER','Lp',
      'TEKST','STRING[255]','Tekst',
      'USR','INTEGER',
   );
   Body.ind:=Body.BODY.ndx_tmp('',1,'USR',,0);
   Body.LP:=0;
   tmpstring1:='<b>'+'Błędy w adresach e-mail użytkowników dokumentów w obiegu:'@+'</b>';
   Body.add:="
      {? Body.first
      || Body.first:=0;
         Body.add(tmpstring1)
      ?};
      {? var_press('_b')>0 & _b
      || Body.BODY.cntx_psh();
         Body.BODY.index(Body.ind); Body.BODY.prefix(#_b);
         _ok:=~Body.BODY.first();
         Body.BODY.cntx_pop()
      || _ok:=1
      ?};
      {? _ok
      || Body.LP+=1;
         Body.BODY.LP:=Body.LP;
         Body.BODY.TEKST:=_a;
         Body.BODY.USR:={? var_press('_b')>0 || #_b || 0 ?};
         Body.BODY.add()
      ?}
   "
?};
_o_del:=_f;
_o_wni:=_g;
_o_fak:=_h;
_o_zal:=_i;
_l_dni:=_j;
exec('inispdob','!zpr_snd_obge');
exec('inikondob','!zpr_snd_obge');
exec('user_info_ini','!zpr_snd_obge');
UsrInfo.setType(_o_fak,_o_wni,_o_del,_o_zal);

USERS.cntx_psh(); EDOKUM.cntx_psh();

EdokTab:=exec('edokum_list','!zpr_snd_obge',_l_dni);

:: Okienko podglądu zapytania do testów
::EdokTab.win_edit(EdokTab.mk_edit(,1));
::EdokTab.win_sel(EdokTab.mk_sel(,,1));
::EdokTab.select();

{? EdokTab.first()
|| {!
   |? {? _usrNew
      || TABSPDOK.erase(); TABSPDOK.clear();
         TABSPZAL.erase(); TABSPZAL.prefix();
         _prevUser:=EdokTab.U_REF;
         _usr:=USERS.seek(EdokTab.U_REF,,1) & UsrInfo.setUser(USERS.ref())
      ?};
      {? _usr
      || _size:=TABSPDOK.size()+TABSPZAL.size();
         {? _usrNew & exec('mail_ok','#email',USERS.EMAIL)=0
         || {? _err
            || Body.add(USERS.KOD+' - nieprawidłowy adres e-mail: '@+USERS.EMAIL,USERS.ref())
            ?}
         || {? EdokTab.E_REF<>''
            || {? _size<=1000 || exec('addsprdob','!zpr_snd_obge',1,_a) ?}
            |? _o_zal & UsrInfo.ZALICZKI[1] & EdokTab.EZ_REF<>''
            || {? _size<=1000 || exec('addsprzal','!zpr_snd_obge',1) ?}
            ?};
            _next:={? EdokTab.next()
                   || {? _prevUser<>EdokTab.U_REF
                      || _usrNew:=1;
                         TABSPDOK.prefix(); TABSPZAL.prefix();
                         {? TABSPDOK.first() | TABSPZAL.first()
                         || exec('add','!zpr_snd_obge',_b,_c,_d,null,USERS.EMAIL)
                         ?};
                         1
                      || _usrNew:=0;
                         1
                      ?}
                   || TABSPDOK.prefix(); TABSPZAL.prefix();
                      {? TABSPDOK.first() | TABSPZAL.first()
                      || exec('add','!zpr_snd_obge',_b,_c,_d,null,USERS.EMAIL)
                      ?};
                      0
                   ?}
         ?}
      || _next:=EdokTab.next()
      ?};
      _next
   !}
?};
USERS.cntx_pop(); EDOKUM.cntx_pop();
{? _err
|| {? Body.BODY.first()
   || exec('add_err','!zpr_snd_obge',_b,_a,_c,_d,Body.BODY)
   ?};
   VAR_DEL.delete('Body','tmpstring1')
?};
exec('delspzal','!zpr_snd_obge');
exec('delspdob','!zpr_snd_obge');
VAR_DEL.delete('UsrInfo','EdokTab');
1


\addsprdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Dodawanie do tabelki tymczasowej kontrola dokumentow w obiegu - zadanie
::  OLD: \addsprdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDOKUM.seek(EdokTab.E_REF,ref_name(EdokTab.E_REF),1)
|| USERS.cntx_psh();
   _status:={? EdokTab.OPERACJA='W' & EdokTab.STATUS='O'
            || 1
            |? EdokTab.OPERACJA='W' & EdokTab.STATUS='N'
            || 2
            |? EdokTab.OPERACJA='P' & EdokTab.STATUS='O'
            || 3
            |? EdokTab.OPERACJA='P' & EdokTab.STATUS='N'
            || 4
            |? EdokTab.OPERACJA='A' & EdokTab.STATUS='O'
            || 5
            |? EdokTab.OPERACJA='A' & EdokTab.STATUS='N'
            || 6
            |? EdokTab.OPERACJA='D' & EdokTab.STATUS='N'
            || 7
            || 0
            ?};
   EDOKUM.TYPOBIEG();
   _typ:={? TYPOBIEG.NAZWA='Obieg faktur'
         || 1
         |? TYPOBIEG.NAZWA='Obieg wniosków'
         || 2
         || 3
         ?};
   _upr:={? _status=7
         || exec('usr_fjks','b_perm',EDOKUM.ODD,USERS.ref())
         || 1
         ?};
   {? _upr
   || _upr:=UsrInfo[_typ][{? EdokTab.OPERACJA='W' || 1
                          |? EdokTab.OPERACJA='P' || 2
                          |? EdokTab.OPERACJA='A' || 3
                          |? EdokTab.OPERACJA='D' || 4 ?}]
   ?};
   {? _upr
   || TABSPDOK.cntx_psh(); TABSPDOK.index(ind_spd); TABSPDOK.prefix($EDOKUM.ref());
      _upr:=~TABSPDOK.first();
      TABSPDOK.cntx_pop()
   ?};
:: Sprawdzenie statusu dekretacji na dokumencie
   {? _upr
   || _upr:={? _status=7
            || ~exec('zn_deleg','obiegi_dekr',EDOKUM.ref())
            |? _status<>0
            || 1
            || 0
            ?}
   ?};
:: Sprawdzenie, czy proces jest aktywny i nie wystąpił problem
   {? _upr
   || _res:=exec('isActiveProcOrProblems','#b__box',EDOKUM.uidref());
      _upr:=(_res.isActive & ~_res.isProblem);
:: Sprawdzenie, czy wprowadzenie wniosku jest przydzielona osobie wykonującej
      {? _upr & _typ=2 & (_status=1 | _status=2) & _res.b_proc<>null()
      || BI_TODO.cntx_psh(); {? BI_TODO.name()='' || BI_TODO.use('bi_t____') ?};
         BI_TODO.index('USERPROC'); BI_TODO.prefix(_res.b_proc,USERS.ref);
         _upr:=BI_TODO.find_tab('first','BI_STAT',,'=',exec('TODO_MOJE','#bi_stat'));
         BI_TODO.cntx_pop()
      ?}
   ?};
   {? _upr
   || TABSPDOK.TYP_WP:=_status;
      TABSPDOK.ODD:=EDOKUM.ODD().OD;
      TABSPDOK.KH:=EDOKUM.KHKH().SKR;
      TABSPDOK.SYM:={? _typ=1 || EDOKUM.SYM || EDOKUM.ID ?};
      TABSPDOK.WAL:=EDOKUM.WAL().KOD;
      TABSPDOK.NETTO:=EDOKUM.NETTO;
      TABSPDOK.WART:=EDOKUM.WART;
      TABSPDOK.ROK:=EDOKUM.ROK_F().NAZ;
      TABSPDOK.DELEG:=EDOKUM.DOSTAWCA().NAZWISKO + ' '+EDOKUM.DOSTAWCA().PIERWSZE;
      TABSPDOK.DEL_MIE:=EDOKUM.DEL_MIE;
      TABSPDOK.REFEDOK:=$EDOKUM.ref();
      TABSPDOK.REFROK:=$EDOKUM.ROK_F;
      TABSPDOK.TYP_OB:=_typ;
      TABSPDOK.CZY_WAR:=EDOKUM.TYP().CZY_WAR;
      TABSPDOK.TYP:=EDOKUM.TYP().NAZWA;
      TABSPDOK.DOD:=$EDOKUM.DATA_OD;
      TABSPDOK.DDO:=$EDOKUM.DATA_DO;
      TABSPDOK.TP:=$EDOKUM.TP;
      TABSPDOK.DATAW:=$EDOKUM.DATAW;
      TABSPDOK.DS:=$EDOKUM.DOP;
      TABSPDOK.TR:=EDOKUM.TR;
      TABSPDOK.CEL_DEL:=EDOKUM.DEL_CEL().TR;
      {? Plugin.runnable('OB_MAIL_F_001')
      || Plugin.run('OB_MAIL_F_001')
      ?};
      TABSPDOK.add()
   ?};
   USERS.cntx_pop()
?}


\addsprzal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Dodawanie do tabelki tymczasowej do kontroli zaliczek - zadanie
::   WE: _a - 1 - zaliczki niezamkniete i niezakonczona rejestracja
::  OLD: \addsprzal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? EZAL.seek(EdokTab.EZ_REF,ref_name(EdokTab.EZ_REF),1)
|| USERS.cntx_psh();
   TABSPZAL.TYP_WP:=_a;
   TABSPZAL.DATA_WY:=EZAL.DATA_WY;
   TABSPZAL.SYM:=EZAL.SYM;
   TABSPZAL.DLA_NAZ:=EZAL.ZAL_DLA().NAZWISKO;
   TABSPZAL.DLA_IMIE:=OSOBA.PIERWSZE;
   TABSPZAL.WART:=EZAL.KW_PROP;
   TABSPZAL.REFEDOK:=$EZAL.ref();
   TABSPZAL.add();
   USERS.cntx_pop()
?}


\inispdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Inicjowanie tabelki tymczasowej do kontroli dokumentow w obiegu - zadanie
::  OLD: \inispdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
TABSPDOK:=tab_tmp(6,
   'TYP_WP','INTEGER','Typ wpisu',
   'ROK','STRING[20]','Rok',
   'ODD','STRING[8]','Jednostka księgowa',
   'KH','STRING[100]','Kontrahent',
   'SYM','STRING[20]','Symbol lub id',
   'WAL','STRING[6]','Waluta',
   'NETTO','REAL','Wartość netto',
   'WART','REAL','Wartość brutto',
   'DELEG','STRING[50]','Delegowany',
   'DEL_MIE','STRING[80]','Miejsce docelowe',
   'PLAN','STRING[1]','Czy plan',
   'REFEDOK','STRING[16]','REF EDOKUM',
   'REFROK','STRING[16]','REF_ROK',
   'TYP_OB','INTEGER','Typ obiegu',
   'CZY_WAR','INTEGER','Wnioski - czy wartości',
   'TYP','STRING[50]','Typ dokumentu',
   'DOD','STRING[20]','Od dnia',
   'DDO','STRING[20]','Do dnia',
   'TP','STRING[20]','Od dnia',
   'DATAW','STRING[20]','Do dnia',
   'TR','STRING[100]','Tresc',
   'DS','STRING[20]','Data sprzedaży',
   'CEL_DEL','STRING[80]','Cel delegacji'
);
ind_spd:=TABSPDOK.ndx_tmp('',1,'REFEDOK',,0,'REFEDOK',,0);
ind_spd1:=TABSPDOK.ndx_tmp(,0,'PLAN',,,'TYP_WP',,,'ROK',,,'ODD',,,'KH',,,'SYM',,,'WAL',,0);
qiim_pds:=TABSPDOK.ndx_tmp(,1,'TYP_OB',,,'TYP_WP',,,'DATAW',,,'DS',,,'TP',,,'SYM',,);
qiim_pds1:=TABSPDOK.ndx_tmp(,1,'TYP_OB',,,'TYP_WP',,,'DATAW',,,'SYM',,);
qiim_pds2:=TABSPDOK.ndx_tmp(,1,'TYP_OB',,,'TYP_WP',,,'DOD',,,'DDO',,,'SYM',,);
qiim_spd:=TABSPDOK.ndx_tmp(,1,'TYP_OB',,,'PLAN',,,'TYP_WP',,,'ROK',,,'ODD',,,'KH',,,'SYM',,,'WAL',,0);
1


\inikondob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Inicjowanie tabelki tymczasowej do kontroli zaliczek - zadanie
::  OLD: \inikondob/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
TABSPZAL:=tab_tmp(5,
   'TYP_WP','INTEGER','Typ wpisu',
   'DATA_WY','DATE','Wprowadzono',
   'SYM','STRING[20]','Symbol zaliczki',
   'DLA_NAZ','STRING[30]','Zaliczka dla',
   'DLA_IMIE','STRING[20]','',
   'WART','REAL','Kwota zaliczki',
   'REFEDOK','STRING[16]','REF EDOKUM'
)


\delspdob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Kasowanie tabelki tymczasowej do kontroli dokumentow w obiegu - zadanie
::  OLD: \delspdob/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TABSPDOK','ind_spd','ind_spd1','qiim_pds','qiim_spd'); 1


\delspzal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Kasowanie tabelki tymczasowej do kontroli zaliczek - zadanie
::  OLD: \delspzal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TABSPZAL'); 1


\header
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.10]
:: OPIS: Naglowek wiadomosci e-mail wysylanej ze zdarzenia
::  OLD: \header1/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
_hed:='Lista '@;
TABSPDOK.cntx_psh();
TABSPDOK.index(qiim_pds); TABSPDOK.prefix();
{? TABSPDOK.find_key(1) || _hed+='faktur, '@ ?};
{? TABSPDOK.find_key(2) || _hed+='wniosków, '@ ?};
{? TABSPDOK.find_key(3) || _hed+='delegacji, '@ ?};
TABSPDOK.cntx_pop();
TABSPZAL.cntx_psh();
TABSPZAL.prefix();
{? TABSPZAL.first() || _hed+='zaliczek, '@ ?};
TABSPZAL.cntx_pop();
(_hed-2)+' w obiegu do weryfikacji i akceptacji'@


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodaje e-mail do kolejki
::   WE: _a - od
::       _b - wysyłający
::       _c - odpowiedź do
::       _d - załacznik
::       _e - odbiorca
::----------------------------------------------------------------------------------------------------------------------
_args:=exec('add_email_a','#mailbox');
_args.FROM:=_a;
_args.SENDER:=_b;
_args.REPLYTO:=_c;
_args.RCV:=_e;
_args.SUB:=exec('header','!zpr_snd_obge');
_args.BODYH:=exec('body','!zpr_snd_obge',_d<>null);
{? _d || _args.ATTACH:=_d ?};
exec('add_email','#mailbox',_args)


\add_err
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodaje e-mail do kolejki
::   WE: _a - od
::       _b - wysyłający
::       _c - odpowiedź do
::       _d - odbiorca
::       _e - tabela z treścią maila
::----------------------------------------------------------------------------------------------------------------------
_args:=exec('add_email_a','#mailbox');
_args.FROM:=_a;
_args.SENDER:=_b;
_args.REPLYTO:=_c;
_args.RCV:=_d;
_args.SUB:='Błędy w adresach e-mail użytkowników obiegu dokumentów'@;
_args.BODYT:=_e;
exec('add_email','#mailbox',_args)


\body
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [2008]
:: OPIS: Tresc wiadomosci e-mail wysylanej z zadania DOK_OB_SPR
::   WE: _a - zadeklarowane i rowne 1 - sprawdzanie wnioskow, rowne 3 - sprawdzanie delegacji
::  OLD: \body1/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ML',@)<=100 || ML:=obj_new(@.CLASS.MEMO) ?};
{? var_pres('BODY')>0
|| BODY.erase()
|| BODY:=tab_tmp(1,'LP','INTEGER','Lp',
                   'TEKST','STRING[255]','Tekst')
?};
__LP:=0;
_add:="__LP+=1; BODY.LP:=__LP; BODY.TEKST:=_a; BODY.add()";
_ad:=obj_new(3);

_tekst:='<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Final//EN\">'; _add(_tekst);
_tekst:='<html>'; _add(_tekst);
_tekst:='<head>'; _add(_tekst);
_tekst:='<meta http-equiv=\"content-type\" content=\"text/html; charset=iso-8859-2\">'; _add(_tekst);
_tekst:='</head>'; _add(_tekst);
_tekst:='<body>'; _add(_tekst);
_tekst:='<BR><BR>'; _add(_tekst);
_tekst:='<CENTER><H3>'+'Przypomnienie o wykonaniu akcji w obiegu'@+'</H3></CENTER>'; _add(_tekst);
_tekst:='<CENTER><H3><font color="black">'+REF.FIRMA().OPIS+'</font></H3></CENTER><BR><BR>'; _add(_tekst);

exec('tab_mail','!zpr_snd_obge',1,'Faktury odrzucone do użytkownika wprowadzającego.'@,1);
exec('tab_mail','!zpr_snd_obge',2,'Faktury nieprzekazane dalej przez użytkownika wprowadzającego.'@,1);
exec('tab_mail','!zpr_snd_obge',3,'Faktury odrzucone do użytkownika przekazującego.'@,1);
exec('tab_mail','!zpr_snd_obge',4,'Faktury nieprzekazane dalej przez użytkownika przekazującego.'@,1);
exec('tab_mail','!zpr_snd_obge',5,'Faktury odrzucone do użytkownika akceptującego.'@,1);
exec('tab_mail','!zpr_snd_obge',6,'Faktury niezaakceptowane przez użytkownika akceptującego.'@,1);
exec('tab_mail','!zpr_snd_obge',7,'Faktury niezadekretowane.'@,1);

exec('tab_mail','!zpr_snd_obge',1,'Wnioski odrzucone do użytkownika wprowadzającego.'@,2);
exec('tab_mail','!zpr_snd_obge',2,'Wnioski nieprzekazane dalej przez użytkownika wprowadzającego.'@,2);
exec('tab_mail','!zpr_snd_obge',3,'Wnioski odrzucone do użytkownika przekazującego.'@,2);
exec('tab_mail','!zpr_snd_obge',4,'Wnioski nieprzekazane dalej przez użytkownika przekazującego.'@,2);
exec('tab_mail','!zpr_snd_obge',5,'Wnioski odrzucone do użytkownika akceptującego.'@,2);
exec('tab_mail','!zpr_snd_obge',6,'Wnioski niezaakceptowane przez użytkownika akceptującego.'@,2);
exec('tab_mail','!zpr_snd_obge',7,'Wnioski niezadekretowane.'@,0,2);

exec('tab_mail','!zpr_snd_obge',1,'Delegacje odrzucone do użytkownika wprowadzającego.'@,3);
exec('tab_mail','!zpr_snd_obge',2,'Delegacje nieprzekazane dalej przez użytkownika wprowadzającego.'@,3);
exec('tab_mail','!zpr_snd_obge',3,'Delegacje odrzucone do użytkownika przekazującego.'@,3);
exec('tab_mail','!zpr_snd_obge',4,'Delegacje nieprzekazane dalej przez użytkownika przekazującego.'@,3);
exec('tab_mail','!zpr_snd_obge',5,'Delegacje odrzucone do użytkownika akceptującego.'@,3);
exec('tab_mail','!zpr_snd_obge',6,'Delegacje niezaakceptowane przez użytkownika akceptującego.'@,3);
exec('tab_mail','!zpr_snd_obge',7,'Delegacje niezadekretowane.'@,3);

exec('tab_zmail','!zpr_snd_obge',1,'Zaliczki odrzucone do użytkownika rejestrującego.'@);
exec('tab_zmail','!zpr_snd_obge',2,'Zaliczki niezaakceptowane przez użytkownika rejestrującego.'@);

_tekst:='</body>'; _add(_tekst);
_tekst:='</html>'; _add(_tekst);
obj_del(_ad); VAR_DEL.delete('__LP','ML');
BODY


\tab_mail
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Tabelki z pogrupowanymi dokumentami w wiadomosci e-mail
:        wysylanej z zadania DOK_OB_SPR
::   WE: _a - typ wpisu
::       _b - naglowek tabelki
:        _c - typ obiegu (1,2,3), std (0)
::----------------------------------------------------------------------------------------------------------------------
_add:="__LP+=1; BODY.LP:=__LP; BODY.TEKST:=_a; BODY.add()";
TABSPDOK.cntx_psh();
{? _c=3 || TABSPDOK.index(qiim_pds2)
|? _c=2 || TABSPDOK.index(qiim_pds1)
|| TABSPDOK.index(qiim_pds)
?};
TABSPDOK.prefix(_c,_a);
{? TABSPDOK.first()
|| _tekst:='<BR>'; _add(_tekst);
   _tekst:='<CENTER><H3>'+_b+'</CENTER><BR><BR>'; _add(_tekst);
   _tekst:=('<table align=\"center\" valign=\"top\" border=\"2\" cellspacing=\"0\" cellpadding=\"0\" width=\"100%\">');
   _add(_tekst);
   {? _c=1
   || _tekst:='<tr class=\"head3\">'+
              '<td width=\"100\">'+'Rejestracja'@+'</td>'+
              '<td width=\"100\">'+'Sprzedaż'@+'</td>'+
              '<td width=\"100\">'+'Termin płat.'@+'</td>'+
              '<td width=\"100\">'+'Jedn. ks.'@+'</td>'; _add(_tekst);
      _tekst:='<td width=\"220\">'+'Typ dokumentu'@+'</td>'+
              '<td width=\"150\">'+'Symbol'@+'</td>'+
              '<td width=\"220\">'+'Opis'@+'</td>'+
              '<td width=\"100\">'+'Kontrahent'@+'</td>'; _add(_tekst);
      _tekst:='<td width=\"40\">'+'Wal.'@+'</td>'+
              '<td width=\"150\">'+'Wartość netto'@+'</td>'+
              '<td width=\"150\">'+'Wartość brutto'@+'</td>'+
              '</tr>'; _add(_tekst);
      _tekst2:="('<tr class=\"wiersz\">'+
                 '<td class=\"wiersz\" width=\"100\">'+TABSPDOK.DATAW+'</td>'+
                 '<td class=\"wiersz\" width=\"100\">'+TABSPDOK.DS+'</td>'+
                 '<td class=\"wiersz\" width=\"100\">'+TABSPDOK.TP+'</td>'+
                 '<td class=\"wiersz\" width=\"100\">'+TABSPDOK.ODD+'</td>')";
      _tekst3:="('<td class=\"wiersz\" width=\"220\">'+TABSPDOK.TYP+'</td>'+
                 '<td class=\"wiersz\" width=\"150\">'+TABSPDOK.SYM+'</td>'+
                 '<td class=\"wiersz\" width=\"220\">'+TABSPDOK.TR+'</td>'+
                 '<td class=\"wiersz\" width=\"100\">'+TABSPDOK.KH+'</td>')";
      _tekst4:="('<td class=\"wiersz\" width=\"40\">'+TABSPDOK.WAL+'</td>'+
                 '<td class=\"wiersz2\" width=\"150\">'+form(TABSPDOK.NETTO,,2,' ,')+'</td>'+
                 '<td class=\"wiersz2\" width=\"150\">'+form(TABSPDOK.WART,,2,' ,')+'</td>')";
      _tekst5:="('</tr>')"
   |? _c=2
   || _tekst:='<tr class=\"head3\">'+
               '<td width=\"100\">'+'Rejestracja'@+'</td>'+
               '<td width=\"220\">'+'Temat'@+'</td>'+
               '<td width=\"220\">'+'Typ dokumentu'@+'</td>'+
               '<td width=\"150\">'+'Osoba'@+'</td>'; _add(_tekst);
       _tekst:='<td width=\"150\">'+'Identyfikator'@+'</td>'+
               '<td width=\"100\">'+'Kontrahent'@+'</td>'+
               '<td width=\"40\">'+'Wal.'@+'</td>'+
               '<td width=\"150\">'+'Wart. netto'@+'</td>'+
               '<td width=\"150\">'+'Wart. brutto'@+'</td>'+
               '</tr>'; _add(_tekst);
      _tekst2:="('<tr class=\"wiersz\">'+
                 '<td class=\"wiersz\" width=\"100\">'+TABSPDOK.DATAW+'</td>'+
                 '<td class=\"wiersz\" width=\"220\">'+TABSPDOK.TR+'</td>'+
                 '<td class=\"wiersz\" width=\"220\">'+TABSPDOK.TYP+'</td>')";
       _tekst3:="('<td class=\"wiersz\" width=\"150\">'+TABSPDOK.DELEG+'</td>'+
                  '<td class=\"wiersz\" width=\"150\">'+TABSPDOK.SYM+'</td>'+
                  '<td class=\"wiersz\" width=\"100\">'+TABSPDOK.KH+'</td>')";
      _tekst4:="('<td class=\"wiersz\" width=\"40\">'+TABSPDOK.WAL+'</td>'+
                 '<td class=\"wiersz2\" width=\"150\">'+
                   {? TABSPDOK.CZY_WAR=2 | TABSPDOK.CZY_WAR=3 || form(TABSPDOK.NETTO,,2,' ,') || '----' ?}+'</td>'+
                 '<td class=\"wiersz2\" width=\"150\">'+
                   {? TABSPDOK.CZY_WAR=1 | TABSPDOK.CZY_WAR=3 || form(TABSPDOK.WART,,2,' ,') || '----' ?}+'</td>')";
      _tekst5:="('</tr>')"
   |? _c=3
   || _tekst:='<tr class="head3">'+
              '<td width="100">'+'Od dnia'@+'</td>'+
              '<td width="100">'+'Do dnia'@+'</td>'+
              '<td width="150">'+'Delegowany'@+'</td>'+
              '<td width="150">'+'Miejsce docelowe'@+'</td>'; _add(_tekst);
      _tekst:='<td width="150">'+'Cel delegacji'@+'</td>'
              '<td width=\"220\">'+'Typ dokumentu'@+'</td>'+
              '<td width="140">'+'Identyfikator'@+'</td>'+
              '<td width="100">'+'Kontrahent'@+'</td>'+
              '</tr>'; _add(_tekst);
      _tekst2:="('<tr class=\"wiersz\">'+
                 '<td class=\"wiersz\" width=\"50\">'+TABSPDOK.DOD+'</td>'+
                 '<td class=\"wiersz\" width=\"100\">'+TABSPDOK.DDO+'</td>')";
      _tekst3:="('<td class=\"wiersz\" width=\"150\">'+TABSPDOK.DELEG+'</td>'+
                 '<td class=\"wiersz\" width=\"150\">'+TABSPDOK.DEL_MIE+'</td>'+
                 '<td class=\"wiersz\" width=\"150\">'+TABSPDOK.CEL_DEL+'</td>'+
                 '<td class=\"wiersz\" width=\"220\">'+TABSPDOK.TYP+'</td>')";
      _tekst4:="('<td class=\"wiersz\" width=\"140\">'+TABSPDOK.SYM+'</td>'+
                 '<td class=\"wiersz\" width=\"100\">'+TABSPDOK.KH+'</td>')";
      _tekst5:="('</tr>')"
   ?};
   {! |?
      _tekst:=_tekst2(); _add(_tekst);
      _tekst:=_tekst3(); _add(_tekst);
      _tekst:=_tekst4(); _add(_tekst);
      _tekst:=_tekst5(); _add(_tekst);
      TABSPDOK.next()
   !};
   _tekst:='</table><BR>'; _add(_tekst)
?};
TABSPDOK.cntx_pop()


\tab_zmail
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Tabelki z pogrupowanymi dokumentami w wiadomosci e-mail
::       wysylanej z zadania EZAL_SPR
::   WE: _a - typ wpisu
::       _b - naglowek tabelki
::----------------------------------------------------------------------------------------------------------------------
_add:="__LP+=1; BODY.LP:=__LP; BODY.TEKST:=_a; BODY.add()";
TABSPZAL.prefix(_a);
{? +form(XINFO.ADR_PORT)
|| __path:=form(XINFO.ADR_PORT)+'/merit/zakupy/zaliczki'
|| __path:=''
?};
{? TABSPZAL.first()
|| _tekst:='<BR>'; _add(_tekst);
   _tekst:='<CENTER><H3>'+_b+'</CENTER><BR><BR>'; _add(_tekst);
   _tekst:=('<table align=\"center\" valign=\"top\" border=\"2\" cellspacing=\"0\" cellpadding=\"0\"  width=\"100%\">'); _add(_tekst);
   _tekst:='<tr class="head3">'+
           '<td width="80">'+'Wystawiono'@+'</td>'+
           '<td width="160">'+'Symbol zaliczki'@+'</td>'+
           '<td width="200">'+'Dla'@+'</td>'+
           '<td width="200"></td>'+
           '<td width="150">'+'Wartość'@+'</td>'+
           {? +__path || '<td width="50">'+'Portal'@+'</td>' || '' ?}+
           '</tr>'; _add(_tekst);
   _tekst2:="('<tr class=\"wiersz\">'+
              '<td class=\"wiersz\" width=\"80\">'+$TABSPZAL.DATA_WY+'</td>'+
              '<td class=\"wiersz\" width=\"160\">'+TABSPZAL.SYM+'</td>')";

   _tekst3:="('<td class=\"wiersz\" width=\"200\">'+TABSPZAL.DLA_NAZ+'</td>'+
              '<td class=\"wiersz\" width=\"200\">'+TABSPZAL.DLA_IMIE+'</td>'+
              '<td class=\"wiersz2\" width=\"150\">'+form(TABSPZAL.WART,,2,' ,')+'</td>')";
   {? +__path
   || _tekst4:="('<td class=\"wiersz2\" width=\"50\">')";
      _tekst5:="('<a href=\"'+__path+'?ACTION=default&LAZY_ACTION=1&PORTLET_NAME=Zaliczki'+
                 '&zaliczkiWidok=t&SELECT_REF='+TABSPZAL.REFEDOK+'\">'+'Uruchom'@+'</a>'+
                 '</td></tr>')"
   || _tekst4:="('</tr>')"
   ?};
   {! |?
      _tekst:=_tekst2(); _add(_tekst);
      _tekst:=_tekst3(); _add(_tekst);
      {? +__path
      || _tekst:=_tekst4(); exec('body_split','!zpr_snd_obge',_tekst);
         _tekst:=_tekst5(); exec('body_split','!zpr_snd_obge',_tekst)
      || _tekst:=_tekst4(); exec('body_split','!zpr_snd_obge',_tekst)
      ?};
      TABSPZAL.next()
   !};
   _tekst:='</table><BR>'; _add(_tekst)
?}


\body_split
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Zapisuje tresc wiadomosci dzielac na porcje
::  OLD: \body_split/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? +_a<=255
|| __LP+=1;
   BODY.LP:=__LP; BODY.TEKST:=_a;
   BODY.add()
|| __LP+=1;
   BODY.LP:=__LP; BODY.TEKST:=(255+_a);
   BODY.add();
   exec('body_split','!zpr_snd_obge',(255-_a))
?}


\user_info_ini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Tworzy strukture do przechowywania danych o uzytkowniku
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('UsrInfo');
UsrInfo:=obj_new('FAKTURY','WNIOSKI','DELEGACJE','ZALICZKI','is','setType','setUser','run');
{! _i:=1..4
|! UsrInfo[_i]:=obj_new(4)
!};
UsrInfo.is:=obj_new(4);
UsrInfo.setType:="
   {! _i:=1..4
   |! .is[_i]:=_[_i]
   !};
   .ZALICZKI[2]:=.ZALICZKI[3]:=.ZALICZKI[4]:=0
";
UsrInfo.setUser:="
   {? .is[1]
   || .FAKTURY[1]:=exec('hasAction','users','OBG_FZO_DARK',_a);
      .FAKTURY[2]:=exec('hasAction','users','OBG_FZO_CPRZ',_a);
      .FAKTURY[3]:=exec('hasAction','users','OBG_FZO_EAKC',_a);
      .FAKTURY[4]:=exec('hasAction','users','FKS_DKS_DFZO',_a)
   || .FAKTURY[1]:=.FAKTURY[2]:=.FAKTURY[3]:=.FAKTURY[4]:=0
   ?};
   {? .is[2]
   || .WNIOSKI[1]:=exec('hasAction','users','OBE_FAW_DARP',_a);
      .WNIOSKI[2]:=exec('hasAction','users','OBE_FAW_CPRZ',_a);
      .WNIOSKI[3]:=exec('hasAction','users','OBE_FAW_EAKP',_a);
      .WNIOSKI[4]:=exec('hasAction','users','FKS_DKS_DFWO',_a)
   || .WNIOSKI[1]:=.WNIOSKI[2]:=.WNIOSKI[3]:=.WNIOSKI[4]:=0
   ?};
   {? .is[3]
   || .DELEGACJE[1]:=exec('hasAction','users','OBE_FDL_DBRP',_a);
      .DELEGACJE[2]:=exec('hasAction','users','OBE_FDL_CPRZ',_a);
      .DELEGACJE[3]:=exec('hasAction','users','OBE_FDL_EBKP',_a);
      .DELEGACJE[4]:=exec('hasAction','users','FKS_DKS_DFDM',_a)
   || .DELEGACJE[1]:=.DELEGACJE[2]:=.DELEGACJE[3]:=.DELEGACJE[4]:=0
   ?};
   {? .is[4]
   || .ZALICZKI[1]:=exec('hasAction','users','OBE_ZAL_DARL',_a)
   || .ZALICZKI[1]:=0
   ?};
   .run:=0;
   {! _i:=1..4
   |! {! _j:=1..4
      |! .run+=.[_i][_j]
      !}
   !};
   .run
";
UsrInfo


\params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia parametry czynności
::   WE: _a - wartość parametru
::       _b - typ
::----------------------------------------------------------------------------------------------------------------------
_default:={? _a='Tak' || 1 || 2 ?};
{? _b=1
|| _pyt:=FUN.choice('Czy wysyłać powiadomienia dla delegacji?'@,_default,'Tak'@,'Nie'@)
|? _b=2
|| _pyt:=FUN.choice('Czy wysyłać powiadomienia dla wniosków w obiegu?'@,_default,'Tak'@,'Nie'@)
|? _b=3
|| _pyt:=FUN.choice('Czy wysyłać powiadomienia dla faktur w obiegu?'@,_default,'Tak'@,'Nie'@)
|| _pyt:=FUN.choice('Czy wysyłać powiadomienia dla zaliczek?'@,_default,'Tak'@,'Nie'@)
?};
{? _pyt=1
|| 'Tak'
|? _pyt=2
|| 'Nie'
|| ~~
?}


\edokum_list
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [21.37]
:: OPIS: zapytanie generujące listę dokumentów w obiegu do powiadomienia
::   WE: _a - liczba dni wstecz
::----------------------------------------------------------------------------------------------------------------------
:: Wnioski/faktury/delegacje
_select:='select USERS.REFERENCE as U_REF, USERS.EMAIL, EDOKUM.REFERENCE as E_REF, \'\' as EZ_REF, EDOKOS.STATUS as STATUS, EDOKOS.OPERACJA as OPERACJA from @EDOKUM ';
_join:='join @EDOKOS using (EDOKOS.EDOKUM, EDOKUM.REFERENCE)'+
       'join @USERS using (USERS.REFERENCE, EDOKOS.USERS)'+
       'join @ETYPY using (ETYPY.REFERENCE, EDOKUM.TYP) ';
_where:='where USERS.EMAIL<>\'\' and '+
        'EDOKUM.DOP>=to_date(\':_a\') and EDOKUM.ALERTY=\'T\' and '+
        'EDOKUM.ZAM<>\'T\' and EDOKUM.FIRMA=\':_b\' and '+
        '(ETYPY.W_PORTAL=\'N\' or ETYPY.W_PORTAL=\'\') and '+
        'EDOKOS.B_PREL=EDOKUM.B_PREL and EDOKOS.WID=\'T\' ';

:: Zaliczki
_select2:='select USERS.REFERENCE as U_REF, USERS.EMAIL, \'\' as E_REF, EZAL.REFERENCE as EZ_REF, \'\' as STATUS, \'\' as OPERACJA from @EZAL ';
_join2:='join @USERS using (USERS.REFERENCE, EZAL.OPERREJ) ';
_where2:='where EZAL.ZAM=\'N\' and EZAL.ZAKCREJ=\'N\' and EZAL.DATA_WY>=to_date(\':_a\') and EZAL.FIRMA=\':_b\' ';

:: EDOKOS bez USERS - maile do osób z roli
_select3:='select B_USRROL.USERS as U_REF, USERS.EMAIL, EDOKUM.REFERENCE as E_REF, \'\' as EZ_REF, EDOKOS.STATUS as STATUS, EDOKOS.OPERACJA as OPERACJA from @EDOKUM ';
_join3:='join @EDOKOS using (EDOKOS.EDOKUM, EDOKUM.REFERENCE)'+
        'join @B_PREL using (B_PREL.IDADD,EDOKOS.B_PREL)'+
        'join @B_ROLE  using (B_ROLE.REFERENCE, B_PREL.B_ROLE)'+
        'join @B_USRROL using (B_USRROL.B_ROLE, B_ROLE.REFERENCE)'
        'join @USERS using (USERS.REFERENCE, B_USRROL.USERS)'
        'join @ETYPY using (ETYPY.REFERENCE, EDOKUM.TYP) ';
_where3:='where EDOKOS.USERS is null and USERS.EMAIL<>\'\' and '+
        'EDOKUM.DOP>=to_date(\':_a\') and EDOKUM.ALERTY=\'T\' and '+
        'EDOKUM.ZAM<>\'T\' and EDOKUM.FIRMA=\':_b\' and '+
        '(ETYPY.W_PORTAL=\'N\' or ETYPY.W_PORTAL=\'\') and '+
        'EDOKOS.B_PREL=EDOKUM.B_PREL and EDOKOS.WID=\'T\' ';

sql(_select+_join+_where+'union '+_select2+_join2+_where2+'union '+_select3+_join3+_where3+'order by U_REF',$(date()-_a),$REF.FIRMA)

:Sign Version 2.0 jowisz:1045 2023/09/28 16:09:44 37ea5bd3a4350e0780543eb04e3a11d8d2c689a250266227b230f04415730915d7e4fe0c04e96462ec666527ccc55d03820c78a8a233d3e1731e84300cc591c49164d94722b2268dc91ffc6efa3272d70d82932e04278d6cdc4d80bd7d2b9b7bace00bfcd4fac170ae8a2816738464050f4e06ae03ae0df27778ab75d381e56d
