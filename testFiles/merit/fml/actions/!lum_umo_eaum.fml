:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lum_umo_eaum.fml
:: Utworzony: 28.01.2019
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Formuły czynności LUM_UMO_EAUM
::            Akceptacja umowy cyklicznej
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Czynność LUM_UMO_EAUM - formuła główna
::   WE: _a - [obj_new] - parametry wejsciowe czynności
::       _b - [obj_new] - parametry wewnętrzne czynności
::       _c - [obj_new] - parametry wyjściowe czynności
::       _d - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ
::# kind=WE,   symbol=UM,  type=_UM,  name=Umowa cykliczna,     required=T, keyref=T
::# kind=WE,   symbol=STU, type=_STU, name=Status umowy,        required=N, keyref=N, fml_val="exec('wyb_stu','!lum_umo_eaum')"
::# kind=WY,   symbol=UM,  type=_UM,  name=Umowa cykliczna,     required=N
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

exec('init','lum');

_akcja:=_mp.akcja();
_auto:=_akcja='AkceptujAuto' | (_akcja<>'Akceptuj' & (_mp.isAutoRun() | _mp.isService()));

{? ~(var_pres('UM',_in)=type_of(null()) & _in.UM)
|| _mp.error('Brak wymaganego parametru UM.')
|| exec('zle_psh','open_tab');
   UM.cntx_psh();
   UM.prefix();
   {? ~UM.seek(_in.UM)
   || _mp.error('Nie znaleziono umowy.'@)
   || {? _r_lock:=exec('r_lock_one','#table',UM,UM.ref())
      || _var_umpop:=exec('var_umpop','umowy');
         _var_umpop.KH:=UM.KH;
         _var_umpop.KH_ODB:=UM.KH_ODB;
         _var_umpop.HAN:=UM.HAN;
         _var_umpop.DP:=UM.DP;
         _var_umpop.DPO:=UM.DPO;
         _var_umpop.OD:=UM.OD;
         _var_umpop.DO:=UM.DO;
         _var_umpop.TYP_HR:=UM.TYP_HR;
         _var_umpop.FAS:=UM.FAS;
         _var_umpop.CB:=UM.CB;
         _var_umpop.NRT:=UM.NRT;
         _var_umpop.PO_FIRST:=0;

         params_set('context',params_get(),'var_umpop',_var_umpop);
         {? _akcja='Akceptuj' | _auto
         || exec('akceptuj','!lum_umo_eaum',_auto)
         |? _mp.pathTodo()
            | _mp.pathArea() & _akcja=''
         || _win_red:=exec('um_win_edit','umowy');
            _ff:="params_exec('um_pozycje_red','umowy')";
            UM.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['&Pozycje'@],_ff);
            _ff:="params_exec('um_akceptuj_todo','!lum_umo_eaum'); 'key:Esc'";
            UM.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['A&kceptuj'@],_ff);
            _ff:="'key:Esc'";
            UM.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Anuluj'@],_ff);
            UM.win_edit(_win_red);
            exec('set_efld_opt','umowy',_win_red);
            UM.display();
::          Usunięcie definicji tymczasowych okien
            UM.win_edit(''); UM.win_edel(_win_red)
         || _mp.error('Nieobsługiwana ścieżka.')
         ?};
         exec('r_unlock_one','#table',UM,UM.ref(),_r_lock)
      || exec('who_rlock_um','umowy')

      ?}
   ?};
   UM.cntx_pop();
   exec('zle_pop','open_tab')
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));

{? var_pres('UM',_in)<>type_of(~~) & _in.UM
|| 'Zaakceptuj umowę cykliczną: %1'@@[exec('record','#to_string',_in.UM)]
|| 'Zaakceptuj umowę cykliczną'@@
?}


\permissions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na uprawnienia dla czynności
::   WE: params_get().in - parametry wejściowe czynności
::           params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::           params_get().mp - Menedżer Procesów
::   WY: 0 - użytkownik nie ma uprawnień do czynności
::       1 - użytkownik ma uprawnienia do czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_user:=params_get().user;
_mp:=params_get().mp;
_wyn:=1;
_wyn


\umowa_akceptuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Akceptacja umowy cyklicznej
::  OLD: \um_stat/um.fml
::----------------------------------------------------------------------------------------------------------------------
exec('umowa_akceptuj','umowy')


\umowa_wycofaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wycofanie akceptacji umowy cyklicznej
::----------------------------------------------------------------------------------------------------------------------
{? UM.get() & (_r_lock:=exec('r_lock_one','#table',UM,UM.ref))
|| _aneks:={? UM.AN>0 & UM.STU().RODZ<>'E'
           || '\nUwaga. Umowa była aneksowana. Status zostanie zmieniony na umowę aneksowaną.'@
           || ''
           ?};
   _eoa:=exec('chk_EndOrAcc','#b__box','LUM_UMO_DRUM','LUM_UMO_EAUM');
   _um_wyc:=
      {? _eoa=1 & UM.STAT_REJ='T'
      || _choice:=FUN.choice('Wybierz jedną z opcji wycofania '
                             'akceptacji lub zakończenia umowy cyklicznej %1%2'@[UM.SYM,_aneks]
                   ,,'Akceptację i &zakończenie'@,'&Akceptację'@);
         {? _choice=1 || 'all' |? _choice=2 || 'akc' || '' ?}
      |? (_eoa=1 | _eoa=2) & UM.STAT_REJ='Z'
      || {? FUN.ask('Wycofać zakończenie redakcji umowy cyklicznej %1%2?'@[UM.SYM,_aneks]) || 'end' || '' ?}
      |? (_eoa=4 | (_eoa=1 & UM.AN)) & UM.STAT_REJ='T'
      || {? FUN.ask('Wycofać akceptację umowy cyklicznej %1%2?'@[UM.SYM,_aneks]) || 'akc' || '' ?}
      || ''
      ?};

   {? _um_wyc='all' | _um_wyc='akc'
   || {? exec('um_stat','!lum_umo_eaum',0)
      || UM.get();
         UM.STAT_REJ:={? _um_wyc='all' || {? ~UM.AN || 'N' || 'E' ?} || 'Z' ?};
         {? UM.put(1) & UM.STAT_REJ='N' || exec('um_pp_del','umowy_faktury',UM.ref()) ?}
      ?}
   |? _um_wyc='end'
   || UM.STAT_REJ:={? ~UM.AN || 'N' || 'E' ?};
      {? UM.put(1) & UM.STAT_REJ='N' || exec('um_pp_del','umowy_faktury',UM.ref()) ?}
   ?};
   exec('r_unlock_one','#table',UM,UM.ref(),_r_lock)
|| exec('who_rlock_um','umowy')
?}


\um_stat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: zmiana statusu umowy
::   WE: _a-1-akceptacja umowy 0-wycofanie akceptacji umowy
::       [_b] - status umowy
::   WY: 1-powiodło się 0-nie
::  OLD: \um_stat/um.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_stu:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_res:=exec('um_stat','umowy',_a,_stu);
_res


\akceptuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Umowa cykliczna - Akceptacja umowy
::   WE: [_a] - 1-automatycznie 0-nie(domyślnie)
::       [_b] - status umowy
::   WE: params_get()   - ustawiane w exec('main','!lum_umo_eaum')
::----------------------------------------------------------------------------------------------------------------------
_auto:={? var_pres('_a')=type_of(1) || _a || 0 ?};
_stu:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_mp:=params_get().context.mp;
_in:=params_get().context.in;

_stu:={?  var_pres('STU',_in)=type_of(null()) & _in.STU || _in.STU || null() ?};

_result:=0;

{? UM.STAT_REJ='T'
|| {? ~_auto || FUN.info('Umowa cykliczna została już zaakceptowana.'@) ?};
   _result:=1;
   _mp.done()
|? UM.STAT_REJ='N'
|| FUN.info('Nie zakończono jeszcze rejestracji umowy cyklicznej.\nAkceptacja niemożliwa.'@);
   _mp.error('Nie zakończono jeszcze rejestracji umowy cyklicznej. Akceptacja niemożliwa.');
   _result:=1
|? _auto | FUN.ask('Zaakceptować umowę cykliczną %1?'@[UM.SYM])
|| {? exec('um_stat','!lum_umo_eaum',1,_stu)
   || UM.get();
      UM.STAT_REJ:='T';
      {? UM.put()
      || _result:=1;
         _mp.done()
      ?}
   |? ~_auto
   || FUN.info('Nie udało się zaakceptować umowy cykliczrej.\n\n'
               'Możliwe powody:\n'
               '* brak odpowiedniego statusu umowy,\n'
               '* brak grupy numeracji ZLE dla zgłoszeń,\n'
               '* brak wygenerowanych okresów dla zgłoszeń,\n'
               '* zerowy wynik działań (np. generowanie zgłoszeń) dla danego statusu umowy.'@)
   ?}
?};

_result


\um_akceptuj_todo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Umowa cykliczna - Akceptuj z todo
::   WE: params_get()   - ustawiane w exec('main','!lum_umo_eaum')
::----------------------------------------------------------------------------------------------------------------------
params_exec('akceptuj','!lum_umo_eaum')


\wyb_stu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wybór statusu
::----------------------------------------------------------------------------------------------------------------------
exec('stu_wyb','params',null(),"STU.RODZ='' & STU.A='T'",-1)

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 84d97aa791f802894c9322c1d2fcb9cf22a1367a148de1a32f91c3dad623767e06627aebf5651fc17278a12f98eb91d64b7a7838bdaad7d5f2449d832e248e16140810b7740c239ec9c07868c529f0ca8b12b4b2c91881b51ce826618fe731fb86f40b8a8a7c08ceb73418b467b4669cc9610ed024042aa2e8ead42d91a53f65
