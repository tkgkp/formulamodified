:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !prc_czp_arcp.fml
:: Utworzony: 21.12.2020
:: Autor: DG
::======================================================================================================================
:: Zawartość: Obsługa czynności PRC_CZP_ARCP - Powiadomienie o raportowaniu czasu pracy
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.14]
:: OPIS: Powiadomienie o raportowaniu czasu pracy - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# properties=LOOP,SERVICE
::# permissions=F_ZATR,UD_SKL

:: Parametry wyjściowe.
::# kind=WY, symbol=SUB, type=STRING, name=Temat, required=N
::# kind=WY, symbol=RCV, type=MEMO, name=Lista odbiorców, required=N
::# kind=WY, symbol=BODYH, type=MEMO, name=Treść w formacie HTML, required=N

params_set(_par:=params_get());
_mp:=_par.mp;
_in:=_par.in;
_out:=_par.out;

{? _mp.pathProc() | _mp.pathTodo()
||
:: Ustawienie domyślnej wartości parametru LOOP (żeby brama się nie zawiesiła).
   _mp.save(exec('kind_out','#b_port'),'LOOP','N');

:: Ustalenie / odzyskanie klucza grupującego.
   _out.GRPKEY:=_mp.grpkey(_out.GRPKEY,_in.GRPKEY);

   {? ~_mp.loop()
::    Pierwszy obrót pętli - przygotujmy dane.
::    Usuwamy wszystkie dotychczasowe klucze, które mogły zostać zapamiętane przy poprzednim uruchomieniu czynności
::    (zakończonej _mp.keep()).
   || _mp.grpkeyDelAll();

::    Pobranie listy maili
      _wyb:=exec('prepare','!prc_czp_arcp');
      {? _wyb.first()
      || {!
         |? _mp.grpkeyAdd(_wyb.MAIL);
            _wyb.next()
         !}
      || _out.RCV:=_out.BODYH:=_out.SUB:='';
         _mp.save(,_out);
         _mp.done();
         return()
      ?}
   ?};

:: Jeżeli coś było nie tak (z parametrami wejściowymi, z wyborem), to zostało obsłużone powyżej.
:: Tutaj jesteśmy już na etapie obsługi pętli.

   do();
   _mail:=_mp.grpkeyGet();

   {? _mail<>~~
   || _ret:=exec('run','!prc_czp_arcp',_in,_mail);
      _out.RCV:=_ret.RCV;
      _out.BODYH:=_ret.BODYH;
      _out.SUB:=_ret.SUB;
      _mp.save(,_out);

      {? _mp.grpkeyDel()
      || {? _mp.grpkeyGet()<>~~
::          Jeżeli jest jeszcze choć jeden element do przetworzenia, to pętla powinna być kontynuowana.
         || _mp.loop_continue()
         ?}
      ?}
   ?};

   _mp.done();
   end()
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.14]
:: OPIS: Powiadomienie o raportowaniu czasu pracy - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Powiadomienie o raportowaniu czasu pracy'@@


\prepare
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.14]
:: OPIS: Funkcja generuje listę pracowników, do których ma zostać wysłany mail z przypomnieniem
::  OLD: \pow_rej_cp/mail.fml
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
_ilosc:=1;
_result:=tab_tmp(,'MAIL','STRING[100]','email',
                  'LP','INTEGER','Lp');

_HARM:=exec('lista','!prc_czp_arcp',',PRC_POR_GEKP,PRC_POR_GEKW,');
{? _HARM.first()
|| _paczki:= _HARM.size%_ilosc+{? _HARM.size%*_ilosc || 1 || 0 ?};
   {! _iter:=1.._paczki
   |! {? _HARM.find_key(((_iter-1)*_ilosc)+1)
      || {!
         |? _result.MAIL:=_HARM.ADRES;
            _result.LP:=_HARM.LP;
            _result.add();
            _HARM.next() & _HARM.LP<=_iter*_ilosc
         !}
      ?}
   !}
?};
obj_del(_HARM);
P.cntx_pop();
_result


\lista
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.14]
:: OPIS: Funkcja zwraca uchwyt do tabeli, w której znajdują się adresy mailowe osób raportujących wykonania
::   WE: _a [STRING] - czynności użytkowników internetowych do sprawdzenia, oddzielone przecinkami
::       [_b] [DATE] - data od - okres sprawdzania wprowadzonego wykonania
::       [_c] [DATE] - data do
::   WY: tabela z adresami mailowymi
::  OLD: \lista3/mail.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || return(null)   ?};
{? var_pres('MISC',@.CLASS)<=0 || exec(,'_misc') ?};
{? var_pres('STRING',@.CLASS)<=0 || exec(,'_string') ?};
_MSC:=obj_new(@.CLASS.MISC);
_len:=$_MSC.fld_len('USERS','EMAIL');
: przygotuj liste odbiorcow powiadomienia
_EMAIL:=tab_tmp(1,'LP','INTEGER','lp',
                  'ADRES','STRING['+_len+']','email');
_NDX:=_EMAIL.ndx_tmp(,1,'ADRES',,0,'ADRES',,0);
_EMAIL.cntx_psh();
_EMAIL.index(_NDX);
_EMAIL.prefix();
USERS.cntx_psh();
USERS.index('OSOBA');
B_USRROL.cntx_psh();
B_USRROL.index('USER');
B_ACTROL.cntx_psh();
B_ACTROL.index('UNIK');
B_ROLE.cntx_psh();
B_ROLE.prefix();
KAL_BUFF.cntx_psh();
KAL_BUFF.index('PRZNODT');
KAL_BUFF.prefix();
_od:=date(date~1,date~2,1);
_do:=date()-1;
{? var_pres('_b')=type_of(date) & var_pres('_c')=type_of(date) & _b<=_c
|| _od:=_b; _do:=_c
?};
P.index('PRACONAZ');
P.prefix();
{? P.first()
|| _lp:=0;
   {!
   |? {? P.DZA<=date & (P.DZ>=date | P.DZ=date(0,0,0))
      || USERS.prefix(P.OSOBA);
         {? USERS.first()
         || {!
            |? {? USERS.EMAIL<>''
               || B_USRROL.prefix(REF.FIRMA,USERS.ref);
                  {? B_USRROL.first()
                  || {!
                     |? B_ACTROL.prefix(REF.FIRMA,B_USRROL.B_ROLE);
                        {? B_ACTROL.first()
                        || {!
                           |? {? _a*B_ACTROL.B_ACTION().UID
                              || {? ~_EMAIL.find_key(USERS.EMAIL,USERS.EMAIL)
                                 || _wyslij:=0;
                                    {? B_ACTROL.B_ACTION().UID*'GEKP'
                                    || _PRAC:=exec('prac_pod','prc_plan',P.OSOBA);
                                       {? _PRAC.first()
                                       || {!
                                          |? P.cntx_psh();
                                             P.prefix();
                                             {? P.seek(_PRAC.P,)
                                             || _dzien:=_od;
                                                {!
                                                |? _okrp:=exec('find_okr','grafik',P.ref(),_dzien,'okrp');
                                                   {? (_okrp<>null()) & (~exec('zadaniowy','!prc_czp_arcp',P.ref,_dzien))
                                                   || _wyslij:=~KAL_BUFF.find_key(P.ref,'W','T',_dzien);
                                                      {? _wyslij
                                                      || {? KAL_BUFF.find_key(P.ref,'P','T',_dzien) & KAL_BUFF.TYP='R' &
                                                            KAL_BUFF.CZAS<>*0 & KAL_BUFF.NB=''
                                                         || _wewy:=exec('get_wewy','prc_wewy',_dzien,P.ref);
                                                            {? _wewy.first()
                                                            || _wyslij:=0
                                                            ?};
                                                            obj_del(_wewy)
                                                         || _wyslij:=0
                                                         ?}
                                                      ?}
                                                   ?};
                                                   _dzien+=1;
                                                   ~_wyslij & _dzien<=_do
                                                !}
                                             ?};
                                             P.cntx_pop();
                                             ~_wyslij & _PRAC.next()
                                          !}
                                       ?};
                                       obj_del(_PRAC)
                                    |? B_ACTROL.B_ACTION().UID*'GEKW'
                                    || _dzien:=_od;
                                       {!
                                       |? _okrp:=exec('find_okr','grafik',P.ref(),_dzien,'okrp');
                                          {? (_okrp<>null()) & (~exec('zadaniowy','!prc_czp_arcp',P.ref,_dzien))
                                          || _wyslij:=~KAL_BUFF.find_key(P.ref,'W','T',_dzien);
                                             {? _wyslij
                                             || {? KAL_BUFF.find_key(P.ref,'P','T',_dzien) & KAL_BUFF.TYP='R' &
                                                   KAL_BUFF.CZAS<>*0 & KAL_BUFF.NB=''
                                                || _wewy:=exec('get_wewy','prc_wewy',_dzien,P.ref);
                                                   {? _wewy.first() || _wyslij:=0 ?};
                                                   obj_del(_wewy)
                                                || _wyslij:=0
                                                ?}
                                             ?}
                                          ?};
                                          _dzien+=1;
                                          ~_wyslij & _dzien<=_do
                                       !}
                                    ?};
::                            wysylam maila tylko jesli plany nie sa zatwierdzone
                                    {? _wyslij
                                    || _EMAIL.ADRES:=USERS.EMAIL;
                                       _lp+=1;
                                       _EMAIL.LP:=_lp;
                                       _EMAIL.add()
                                    ?}
                                 ?}
                              ?}; B_ACTROL.next()
                           !}
                        ?}; B_USRROL.next()
                     !}
                  ?}
               ?}; USERS.next()
            !}
         ?}
      ?}; P.next()
   !}
?};
KAL_BUFF.cntx_pop();
B_ROLE.cntx_pop();
B_ACTROL.cntx_pop();
B_USRROL.cntx_pop();
USERS.cntx_pop();
_EMAIL.ndx_drop(_NDX);
obj_del(_MSC);
_EMAIL.cntx_pop();
_EMAIL


\run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.14]
:: OPIS: Formuła odpowiedzialna za przygotownie danych do wysyłanego powiadomienia. Formuła zwraca tablicę nazwaną
::       z elementami potrzebnymi do wysłania powiadomienia.
::   WE: _a [OBJ] - parametry wejściowe czynności
::       _b [STRING] - email pracownika
::       [_c] [STRING] - adres HTTP do grafików w systemie CMS Serwis Pracowniczy
::  OLD: \bd_rej_cp/mail.fml
::----------------------------------------------------------------------------------------------------------------------
_in:=_a;
_portUrl:={? var_pres('_c')=type_of('_c') || _c || REF.FIRMA().URL ?};

_ret:=obj_new('RCV','BODYH','SUB');
_ret.RCV:=_ret.BODYH:=_ret.SUB:='';

_ret.RCV:=_b;

:: Jeśli nie ma adresu, to przerywamy wykonanie
{? _ret.RCV<>''
|| _ret.SUB:='Przypomnienie o konieczności zaraportowania czasu pracy'@;

   _ret.BODYH:=
      '<p>'+
         '<h4>'+
            'Portal pracowniczy'@+
         '</h4><br>'+
         '<h4>'+
            '<font color="black">'+
               'Przypominamy o konieczności wprowadzenia czasu pracy pracowników. <br>'
               'Brak zarejestrowanego wykonania może skutkować niepoprawnym rozliczeniem czasu pracy na liście płac.'@+
            '</font>'+
         '</h4>';

   {? _portUrl<>''
   || _ret.BODYH+=
         '<h4>'+
            '<a href="' + _portUrl + '">'+
               'Harmonogramy - > Grafiki pracownicze'@+
            '</a>'+
         '</h4>'
   ?};

   _ret.BODYH+=
         '<br>'+
      '</p>'+
      '<p>'+
         'Ta wiadomość została wygenerowana automatycznie - prosimy na nią nie odpowiadać.'@+
      '</p>'
?};
_ret


\zadaniowy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.14]
:: OPIS: Sprawdza czy zadaniowy SCP na dzień
::   WE: _a [REFERENCE] - P.ref
::       _b [DATE] - data
::  OLD: \zadaniowy/mail.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(P.ref) || return(0) ?};
{? var_pres('_b')<>type_of(date) || _b:=date ?};
_scp_ref:=exec('find_scp','prc_plan',_a,_b);
_scp_name:='';
{? _scp_ref
|| A_SCP.clear();
   {? A_SCP.seek(_scp_ref)
   || _scp_name:=A_SCP.NAZ
   ?}
?};
 ~-_scp_name*'ZADANIOWY'

:Sign Version 2.0 jowisz:1048 2021/04/09 15:19:41 b4f53f5238eeaf7f884e46bf7d7812e38b2a93d73e455f7bbfabbb59a611886b959976658441f693c976866c6f8cdba0ea54b1d88d4b54c365847b0c7bcf26f2127053e8fc7e0f812603a3c2e7490ed2903d09c713c76078494e7258f12c3927799106f6cfe248b4bbf7e0ee64da38aa924ee74c96c5d788051a8b7c448c26bb
