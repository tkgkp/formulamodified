:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pep_pra_odok.fml
:: Utworzony: 05.07.2021
:: Autor: MicKoc [21.37]
::======================================================================================================================
:: Zawartość: Formuły czynności PEP_PRA_ODOK - Odebranie dokumentów.
::======================================================================================================================

\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Odebranie dokumentów - główna formuła czynności.
::----------------------------------------------------------------------------------------------------------------------
:: Czynność wymaga podania parametru EDOKUM.
:: Czynność wymaga podania parametru P lub OSOBA. Jeżeli podane zostaną obydwa, to parametr OSOBA jest ignorowany.
::
::
:: IN
::
:: Parametr wejściowy EDOKUM wskazuje na dokument w obiegu.
::# kind=WE, symbol=EDOKUM, type=_EDOKUM, name=Wskazanie na dokument w obiegu, required=T, keyref=T
::
:: Parametr wejściowy P wskazuje współpracownika, którego dotyczą dokumenty.
::# kind=WE, symbol=P, type=_P, name=Wskazanie współpracownika, required=N, keyref=T
::
:: Parametr wejściowy OSOBA wskazuje osobę, której dotyczą dokumenty.
::# kind=WE, symbol=OSOBA, type=_OSOBA, name=Wskazanie osoby, required=N, keyref=T
::
:: Parametr wejściowy UID_REC wskazuje dokument z załącznikiem (H_UM, H, ZC, STN itp).
::# kind=WE, symbol=UID_REC, type=STRING, name=Wskazanie na dokument z załącznikiem, required=N, keyref=N
::
:: INT
::
:: Parametr wewnętrzny BLOB wskazuje na wprowadzane załączniki.
::# kind=WEW, symbol=BLOB, type=BLOB, name=Wprowadzane załączniki, required=N, keyref=N
::
:: OUT
::
:: Parametr wyjściowy P wskazuje współpracownika, którego dotyczą dokumenty.
::# kind=WY, symbol=P, type=_P, name=Wskazanie współpracownika, required=N, keyref=N
::
:: Parametr wyjściowy OSOBA wskazuje osobę, której dotyczą dokumenty.
::# kind=WY, symbol=OSOBA, type=_OSOBA, name=Wskazanie osoby, required=N, keyref=N
::
:: Parametr wyjściowy INFO informuje o ewentualnym błędzie
::# kind=WY, symbol=INFO, type=STRING, name=Informacja o wyniku, required=N, keyref=N

params_set(_par:=params_get());
_mp:=_par.mp;
_in:=_par.in;
_int:=_par.int;
_out:=_par.out;
_ok:=0;

_default:="{? ($('_a.'+_b))(_a)=~~ || ($('_a.'+_b+':=_b'))(_a,_c) ?}";
:: Określenie wartości domyślnych
_default(_in,'P',null());
_default(_in,'OSOBA',null());
_default(_in,'EDOKUM',null());
_default(_in,'UID_REC','');
_default(_int,'BLOB',null());
_default(_out,'P',null());
_default(_out,'OSOBA',null());
_default(_out,'INFO','');

Cntx.psh(P,OSOBA,EDOKUM,EDOKUMZ,SLO_NAZ);
Cntx.clr(P,OSOBA,SLO_NAZ);

{? _in.P=null() & _in.OSOBA=null()
|| _mp.error('Jeden z parametrów wejściowych (P lub OSOBA) musi być podany.');
   _ok*=0
|| {? _in.P
   || _ok:=P.seek(_in.P) & P.OSOBA().get()
   || _ok:=OSOBA.seek(_in.OSOBA)
   ?}
?};

{? _ok & _in.EDOKUM<>~~ & _in.EDOKUM
|| _name:=ref_name(_in.EDOKUM);
   EDOKUM.use(_name); EDOKUM.prefix();
   EDOKUMZ.use('skid_n'+(_name+2)); EDOKUMZ.index('DISP'); EDOKUMZ.prefix();
   {? EDOKUM.seek(_in.EDOKUM,ref_name(_in.EDOKUM),1)
   || _ok:=1
   || _mp.error('Dokument EDOKUM nie został odnaleziony.');
     _ok*=0
   ?}
|| _mp.error('Parametr wejściowy (EDOKUM) musi być podany.');
   _ok*=0
?};
{? _ok
|| _out.OSOBA:=_in.OSOBA;
   _out.P:=_in.P;
   _ret:=exec('odbierz_dokumenty','!pep_pra_odok',EDOKUM.ref(),P.ref(),P.OSOBA,_in.UID_REC);
   exec('del_uid','paperless',EDOKUM.uidref());
   {? _ret=1
   || _out.INFO:='Odbiór dokumentów zakończony prawidłowo.'@;
      _mp.save(,_out);
      _mp.done()
   |? _ret=-2
   || _out.INFO:='Zrezygnowano z odbioru dokumentów.'@;
       _mp.save(_int,_out);
      _mp.keep()
   |? _ret=-1
   || _out.INFO:='Odrzucono odbiór dokumentów.'@;
      _mp.save(_int,_out);
      _mp.done()
   || _out.INFO:='Odbiór dokumentów zakończony nieprawidłowo.'@;
      _mp.save(_int,_out);
      _mp.keep()
   ?}
?};

Cntx.pop(P,OSOBA,EDOKUM,EDOKUMZ,SLO_NAZ);
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Odebranie dokumentów - formuła opisu czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));

_default:="{? ($('_a.'+_b))(_a)=~~ || ($('_a.'+_b+':=_b'))(_a,_c) ?}";
:: Określenie wartości domyślnych
_default(_in,'P',null());
_default(_in,'OSOBA',null());
_default(_in,'EDOKUM',null());

{? var_pres('P',_in)=type_of(null()) & _in.P<>null()
|| _tab:=exec('desc','pracownik',_mp);
   _ret:='P'
|? var_pres('OSOBA',_in)=type_of(null()) & _in.OSOBA<>null()
|| _tab:=exec('desc','osoba',_mp);
   _ret:='O'
|| return('Odbierz dokumenty.'@@)
?};

_opis:='';
{? _in.EDOKUM<>~~ & _in.EDOKUM
|| EDOKUM.cntx_psh();
   _name:=ref_name(_in.EDOKUM);
   EDOKUM.use(_name); EDOKUM.prefix();
   {? EDOKUM.seek(_in.EDOKUM,ref_name(_in.EDOKUM),1)
   || {? var_pres('EDOKUM',_in)=type_of(null())
      || _opis:=exec('opis','portal_wnioski')
      ?}
   ?};
   EDOKUM.cntx_pop()
?};

{? ~+|_opis
|| {? _tab.ZAW_DANE='T'
   || {? _tab.OBCY='T'
      || {? _ret='P'
         || 'Odbierz dokumenty %1 %2: Paszport - %3, Numer teczki - %4, Identyfikator - %5'@@
            [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT,_tab.T,_tab.IP]
         || 'Odbierz dokumenty %1 %2: Paszport - %3'@@
            [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT]
         ?}
      |? +_tab.PESEL
      || {? _ret='P'
         || 'Odbierz dokumenty %1 %2: PESEL - %3, Numer teczki - %4, Identyfikator - %5'@@
            [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PESEL,_tab.T,_tab.IP]
         || 'Odbierz dokumenty %1 %2: PESEL - %3'@@
            [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PESEL]
         ?}
      || {? _ret='P'
         || 'Odbierz dokumenty %1 %2: Data urodzenia - %3, Numer teczki - %4, Identyfikator - %5'@@
            [_tab.NAZWISKO,_tab.PIERWSZE,_tab.UR_DATA,_tab.T,_tab.IP]
         || 'Odbierz dokumenty %1 %2: Data urodzenia - %3'@@
            [_tab.NAZWISKO,_tab.PIERWSZE,_tab.UR_DATA]
         ?}
      ?}
   || 'Odbierz dokumenty.'@@
   ?}
||  'Odbierz dokumenty: %1'@@[_opis]
?}


\odbierz_dokumenty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Odbiór dokumentów z EDOKUM i umieszczenie w e-teczce
::   WE: _a [REFERENCE] - Wskazanie na EDOKUM
::       _b [REFERENCE] - Wskazanie na P
::       _c [REFERENCE] - Wskazanie na OSOBA
::       _d [REFERENCE] - Wskazanie na dokument z załącznikiem (H_UM, H, ZC itp)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_arg:=exec('obj_ntab_set','#array',,
   'cfg',null(),
   'BUF',exec('tab','!pep_pra_odok')
);
_arg.cfg:=exec('obj_ntab_set','#array',,
   'ctr_id','',
   'tryb',0,
   'nav',null(),
   'lastref',null(),
   'grp','',
   'ctr_win',''
);
params_set('par',_par,'arg',_arg);
_opis:='';
_ret:=exec('obj_ntab_set','#array',,'RET',0,'SIZE',0,'ADD',0);
EDOKUMZ.prefix(_a);
{? EDOKUMZ.first()
|| _ret.SIZE:=EDOKUMZ.size();
   _firma:=exec('firma','ustawienia');
   ZALACZ.index('ZALACZ');
   exec('wnd','!pep_pra_odok');
   _arg.BUF.win_sel(_arg.cfg.grp);
   {!
   |? _arg.BUF.blank();
      {? EDOKUMZ.EDOKUM
      || _arg.BUF.BLOB:=EDOKUMZ.EDOKUM;
         _arg.BUF.NAME:=EDOKUMZ.bl_info('EDOKUM','NAME');
         _arg.BUF.SIZE:=EDOKUMZ.bl_info('EDOKUM','SIZE');
         _arg.BUF.CRT_DATE:=EDOKUMZ.bl_info('EDOKUM','CREAT_DATE');
         _arg.BUF.CRT_TIME:=EDOKUMZ.bl_info('EDOKUM','CREAT_TIME');
         _arg.BUF.MOD_DATE:=EDOKUMZ.bl_info('EDOKUM','MODIFY_DATE');
         _arg.BUF.MOD_TIME:=EDOKUMZ.bl_info('EDOKUM','MODIFY_TIME')
      ?};
      _arg.BUF.STR_DATA:=EDOKUMZ.uidref();
      _arg.BUF.INT_DATA:=#EDOKUMZ.ref();
      _arg.BUF.SLO_NAZ:=EDOKUMZ.TYP_ZAL().NAZWA;
      _arg.BUF.add();
      EDOKUMZ.next()
   !};
   _arg.BUF.select();
   {? _arg.cfg.tryb=1 & EDOKUMZ.first()
   || {!
      |? {? EDOKUMZ.EDOKUM & EDOKUMZ.TYP_ZAL
         || _rodzaj:=exec('miejsce2','paperless',EDOKUMZ.TYP_ZAL().NAZWA,'U');
            _typ_zal:=EDOKUMZ.TYP_ZAL().NAZWA;
            ZALACZ.prefix(_firma,_c,_b,_rodzaj,_typ_zal,);
            _nag:={? var_pres('_d')=type_of('') & +|_d=48 || _d || EDOKUMZ.DOKUM().uidref() ?};
            _put:=ZALACZ.find_tab('first','NAG',,'=',_nag);
            {? ~_put
            || ZALACZ.blank(1);
               ZALACZ.P:=_b;
               ZALACZ.OSOBA:=_c;
               ZALACZ.TYP_ZAL:=EDOKUMZ.TYP_ZAL;
               ZALACZ.RODZAJ:=_rodzaj;
               ZALACZ.NAG:=_nag;
               ZALACZ.FIRMA:=_firma;
               ZALACZ.WWWE:='T';
               ZALACZ.WWWS:='T';
               ZALACZ.WWW:='T'
            ?};
            ZALACZ.DATA:=EDOKUMZ.DATE;
            ZALACZ.ZAL_NAME:=EDOKUMZ.NAZWA;
            ZALACZ.ZAL:=EDOKUMZ.EDOKUM;
            {? _opis=''
            || _opis:='Na podstawie wniosku Paperless HR "%1" o nr: %2.'@[EDOKUM.TYP().NAZWA,EDOKUM.ID]
            ?};
            ZALACZ.LOK:=_opis;
            _ret.ADD+={? _put || ZALACZ.put() || ZALACZ.add() ?}
         ?};
         EDOKUMZ.next()
      !}
   ?}
?};
{? _arg.cfg.tryb=1
|| _ret.RET:=_ret.ADD=_ret.SIZE
|| _ret.RET:=_arg.cfg.tryb
?}


\wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Okno z kontrolką
::   WE:
::   WY: Tryb 1 (Zakończ), tryb -1 (OK), tryb -2 (Esc, Anuluj)
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_BUF:=_par.arg.BUF;
_ctr_id:='pep_pra_odok';
_ctr_win:=_BUF.mk_ctr(,'#'+_ctr_id);
_BUF.win_cctr(_ctr_win,_ctr_id,'@filelistpanel','dnd');
_BUF.win_cfml(_ctr_win,_ctr_id,'CONTROL_INIT',"params_exec('control_init','!pep_pra_odok')");
_BUF.win_cfml(_ctr_win,_ctr_id,'CONTROL_DISPLAY',"params_exec('control_display','!pep_pra_odok')");
_BUF.win_cfml(_ctr_win,_ctr_id,'CONTROL_CALLBACK',"params_exec('control_callback','!pep_pra_odok')");
:: Okno przycisków
_wb:=_BUF.mk_edit(,,'#'+_ctr_id+'wb');

:: przyciski
_cfg:=',btn_label_align=center,panel=bottom,align=end,display=1';
_bod:=_BUF.win_ebtn(_wb,'text=%1' ['&Odrzuć'@]+_cfg,"params_get().arg.cfg.tryb:=-1; sel_exit(); ''");
_BUF.btn_opt(_bod,'state=normal,tooltip='+'Odrzucenie wykonywania bieżącej czynności'@);
exec('zakoncz','#window',_BUF,_wb,1,"params_get().arg.cfg.tryb:=1; sel_exit(); ''",1);
exec('ok_esc','#window',_BUF,_wb,1,,"params_get().arg.cfg.tryb:=-2; 'key:Esc'",0,1);
:: Budowa okna grupowego
_mode:='maximized';
_grp:=_BUF.grp_make('Dokumenty do odebrania: %1'@[exec('P','#to_string')],,'#zal_grp_odok',,,"",,'normal');
_BUF.grp_ctr(_grp,,_ctr_win,,,,,,,,,,,'maximized');
_BUF.grp_splt(_grp,,'horizontal','wb',30);
_BUF.grp_edit(_grp,,_wb,,,,,,'maximized');
_par.arg.cfg.ctr_id:=_ctr_id;
_par.arg.cfg.grp:=_grp;
_par.arg.cfg.tryb:=-2


\tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Formuła tworzy tabelę tymczasową do komunikacji z kontrolką. Jeżeli przekazany jest parametr z tabelą
::   WE: [_a] [TABLE] - Uchwyt tabeli z polem o akronimie BLOB typu BLOBRAW, na podstawie której wypełniona zostanie
::                      zwracana tabela.
::   WY: Tabela do komunikacji z kontrolką.
::----------------------------------------------------------------------------------------------------------------------
_TAB:=tab_tmp(3,
   'SLO_NAZ','STRING['+$MS.fld_len(SLO_NAZ,'NAZWA')+']','Typ załącznika',
   'NAME','STRING[64]','Plik',
   'SIZE','INTEGER','Rozmiar',
   'CRT_DATE','DATE','Data utworzenia',
   'CRT_TIME','TIME','Czas utworzenia',
   'MOD_DATE','DATE','Data modyfikacji',
   'MOD_TIME','TIME','Czas modyfikacji',
   'INT_DATA','INTEGER','Identyfikator rekordu',
   'STR_DATA','STRING[48]','Identyfikator rekordu',
   'BLOB','BLOBRAW','Załącznik',
   'IDADD','IDADD','Id'
);
{? var_pres('_a')=type_of(_TAB)
|| _BUF:=_a;
   {? _BUF.first()
   || {!
      |? _TAB.blank();
         {? _BUF.BLOB
         || _TAB.NAME:=_BUF.bl_info('BLOB','NAME');
            _TAB.SIZE:=_BUF.bl_info('BLOB','SIZE');
            _TAB.CRT_DATE:=_BUF.bl_info('BLOB','CREAT_DATE');
            _TAB.CRT_TIME:=_BUF.bl_info('BLOB','CREAT_TIME');
            _TAB.MOD_DATE:=_BUF.bl_info('BLOB','MODIFY_DATE');
            _TAB.MOD_TIME:=_BUF.bl_info('BLOB','MODIFY_TIME')
         || _TAB.NAME:='<wybierz>'
         ?};
         _TAB.STR_DATA:=_BUF.uidref();
         _TAB.INT_DATA:=#_BUF.ref();
         _TAB.SLO_NAZ:=_BUF.SLO_NAZ;
         _TAB.add();
         _BUF.next()
      !}
   ?}
?};
_TAB


\control_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Formuła wykonywana po pojawieniu się kontrolki.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_arg:=_par.arg;
_cfg:=_par.arg.cfg;

ctr_set(,_cfg.ctr_id,'setColumns','SLO_NAZ,NAME,SIZE,#TYPE,CRT_DATE,CRT_TIME,MOD_DATE,MOD_TIME');
ctr_set(,_cfg.ctr_id,'setColumnWidth','SLO_NAZ',30);
ctr_set(,_cfg.ctr_id,'setColumnWidth','NAME',40);
ctr_set(,_cfg.ctr_id,'setColumnWidth','SIZE',10);
ctr_set(,_cfg.ctr_id,'setColumnWidth','#TYPE',20);
ctr_set(,_cfg.ctr_id,'setColumnWidth','CRT_DATE',12);
ctr_set(,_cfg.ctr_id,'setColumnWidth','CRT_TIME',12);
ctr_set(,_cfg.ctr_id,'setColumnWidth','MOD_DATE',12);
ctr_set(,_cfg.ctr_id,'setColumnWidth','MOD_TIME',12);

params_exec('control_display','!pep_pra_odok');

ctr_set(,_cfg.ctr_id,'removeAllActions');
ctr_set(,_cfg.ctr_id,'addToolbarAction','refresh','','xwin16.png:48','Odświeżenie widoku'@,0,0);
ctr_set(,_cfg.ctr_id,'addToolbarSeparator');
ctr_set(,_cfg.ctr_id,'addAction','open','&Otwórz'@,'','Otworzenie załącznika'@,1,1);
ctr_call(,_cfg.ctr_id,'setView','table');
ctr_call(,_cfg.ctr_id,'initToolbar');

~~


\control_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Formuła wykonywana w momencie odświeżania okna z kontrolką.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_BUF:=_par.arg.BUF;
_cfg:=_par.arg.cfg;

ctr_tab('files_data',,_cfg.ctr_id,,exec('tab','!pep_pra_odok',_BUF));
ctr_call(,_cfg.ctr_id,'updateItems','files_data');
~~


\control_callback
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Formuła obsługuje akcje wywołane z kontrolki.
::   WE:
::   WY:
:: ~OST: INBLVIEW
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_arg:=_par.arg;
_cfg:=_par.arg.cfg;

_action:=ctr_info('action_id');

:: Obsługa akcji, które nie są związane z plikami.
{? _action='refresh'
|| exec('control_init','!pep_pra_odok');
   win_disp();
   return()
?};

:: Obsługa akcji, które moga być wykonywane na pliku/plikach kontrolki.
_TIN:=ctr_call(,_cfg.ctr_id,'getCurrActionItems');
{? ~_TIN.first()
|| return()
?};

:: Akcje dla jednego pliku
{? ~_arg.BUF.seek(_TIN.STR_DATA)
|| FUN.info('Zaznaczony załącznik został usunięty przez innego użytkownika.'@);
   win_disp()

:: Akcje dla jednego pliku, otwórz
|? _action='open'
|| {? _arg.BUF.BLOB
   || _arg.BUF.bl_view('BLOB',1)
   || FUN.info('Brak pliku załącznika.'@)
   ?}

?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:40 954e7b2a3a6f616b3b7a8a58766bea1140fa3f676e3c08a67b4df09125ec09b030909ce10bf3c3a56f6f59bdec83e21367e974538c317b083e1f4ea1a3755b1b4cc55df291433f5026d9cbe107ddd966c1c0bc8bb813a89bb7a7e85f0067630f0fabd2ce525143c93a7e97f1713fba7c45028113f7cd9aebaa51d7733f49379d
