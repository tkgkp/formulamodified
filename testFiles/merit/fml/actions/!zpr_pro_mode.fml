:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: !zpr_pro_mode.fml
:: Utworzony: 02.12.2014
:: Autor: [rr]
::======================================================================================================================
:: Zawartosc: Formuły czynnosci ZPR_PRO_MODE
::            Uruchomienie modelera procesow
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Czynność ZPR_PRO_MODE - formuła główna
::   WE: _a - [obj_new] - parametry wejsciowe czynności
::       _b - [obj_new] - parametry wewnętrzne czynności
::       _c - [obj_new] - parametry wyjściowe czynności
::       _d - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# properties=GRP_FIRM
::exec('select4proc','#b_design');
''


\proc_add_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Akcja Dołącz w tabeli B_PROC
::       UWAGA: dalej jest pierwotna wersja tej formuły, do ew. przywrócenia, jeśli by miały byc obsłużone
::              kategorie procesów
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <MBUILDER><MODELER><PROCES><AKCJA><REDAKCJA>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
params_set(params_get());

_result:=0;

{? exec('add_action','#b_proc')>0
|| _result:=1
?};
_result


\proc_mod_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Akcja Popraw w tabeli B_PROC
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <MBUILDER><MODELER><PROCES><AKCJA><REDAKCJA>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
params_set(params_get());

_result:=0;

{? exec('mod_action','#b_proc')>0
|| _result:=1
?};
_result


\b_proc_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Akceptacja definicji procesu
::  TAG: <MBUILDER><MODELER><PROCES><AKCJA><AKCEPTACJA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
exec('proc_akc_act','#b_design')


\b_proc_wyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Wycofanie akceptacji definicji procesu
::  TAG: <MBUILDER><MODELER><PROCES><AKCJA><WYCOFANIE>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
exec('proc_wyc_act','#b_design')


\pocon_sel_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Pokazuje powiązania miedzyargumentowe dla całego procesu
::  TAG: <MBUILDER><MODELER><PROCES><AKCJA><PARAMETR><LISTA><WERTOWANIE>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
exec('proc_poconn_act','#b_design')


\proc_copy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Kopiowanie procesu
::  TAG: <MBUILDER><MODELER><PROCES><AKCJA><KOPIOWANIE>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
params_set(params_get());

_dest:=null();
_source:=B_PROC.ref();
USERS.cntx_psh();
USERS.index('USR_AKOD');
IVAL_DEF.cntx_psh();
B_PROC.cntx_psh(); B_PROC.clear();
B_PROC.IVAL_DEF();
_win:=exec('win_edit','#b_proc',,1);
B_PROC.win_edit(_win);

B_ACTION.cntx_psh();
B_ACTION.index('B_ELE');

B_PROC.memo_get(,'TARGET');
B_PROC.memo_get(,'DESC');

:: Zakładam filtr na użytkowników, do obsługi pola właściciel procesu
exec('filter_upr','users','ZPR_PRO_MODE.ZPR_PRO_MODW');

{? B_PROC.edit("exec('validate','#b_proc',0)")
|| _buf_dest:=exec('buffer','#b_proc');
   _buf_dest.get();
   _dest:=exec('copy','#b_proc',_source,_buf_dest);
   {? _dest<>null()
   || {? _env.ZAKRES='N'
      || FUN.info('Skopiowany proces trafił do procesów aktywnych. '
                  'Aby go zobaczyć należy zmienić zakres wyświetlanych procesów.'@)
      ?}
   || FUN.emsg('Kopiowanie procesu zakończone niepowodzeniem.'@)
   ?}
?};
B_PROC.cntx_pop();
IVAL_DEF.cntx_pop();
B_ACTION.cntx_pop();
USERS.cntx_pop();
USERS.f_clear();

{? _dest<>null() & _env.ZAKRES<>'N'
|| {? B_PROC.f_active()
   || B_PROC.f_rfresh();
      B_PROC.f_seek(_dest)
   || B_PROC.seek(_dest)
   ?}
?};
~~


\proc_upr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Przypisanie użytkowników do ról procesu
::  TAG: <MBUILDER><MODELER><PROCES><AKCJA><UPRAWNIENIA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
exec('proc_upr_act','#b_design')


\proc_inst_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Akcja wyświetlająca podsumowanie przebiegów procesu
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
exec('select4biproc_sum','#b_design',B_PROC.ref());
~~


\proc_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PS [17.00]
:: OPIS: Akcja wyświetlająca czynności i role danego procesu
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
params_set(params_get());

B_PREL.cntx_psh(); B_ROLE.cntx_psh(); B_ELE.cntx_psh();
B_PREL.prefix(B_PROC.ref());

:: Tworzy tabelę tymczasową z rolami w oparciu o rekordy tabeli B_PREL
_tab_role:=tab_tmp(  2
                     ,'PARENT','TREE_REF'    ,'Parent'
                     ,'SYMBOL','STRING[45]' ,'Rola'
                     );
{? B_PREL.first()
|| {!
   |? {? ~(_tab_role.find_key(0, B_PREL.B_ROLE().NAME))
      || _tab_role.PARENT:=0;
         _tab_role.SYMBOL:=B_PREL.B_ROLE().NAME;
         _tab_role.add()
      ?};
      B_PREL.next()
   !}
?};

:: Tworzy tabelę tymczasową z czynnościami w oparciu o rekordy tabeli B_PREL
_tab_act:=tab_tmp(   1
                     ,'KOD'   ,'STRING[12]'  ,'Kod czynności'
                     ,'SYMBOL','STRING[45]' ,'Czynność'
                     );
{? B_PREL.first()
|| {!
   |? {? B_PREL.CLASS='B_ACTION'
      || _tab_act.SYMBOL:=B_PREL.SYMBOL;
         _tab_act.KOD:=B_PREL.B_ELE().SYMBOL;
         _tab_act.add();

         {? _tab_role.find_key(0, B_PREL.B_ROLE().NAME)
         || _tab_role.PARENT:=_tab_role.ref();
            _tab_role.SYMBOL:=_tab_act.SYMBOL;
            _tab_role.add()
         ?}
      ?};
      B_PREL.next()
   !}
?};
_tab_act_wer:=_tab_act.mk_sel(,,,'952b11b59fa8510',,,,,'U');
_tab_act.win_fld(_tab_act_wer,_tab_act,'KOD',,,25);
_tab_act.win_fld(_tab_act_wer,_tab_act,'SYMBOL',,,70);
_tab_act.win_act(_tab_act_wer,,'Szukaj');
_tab_act.win_act(_tab_act_wer,,'Kolejność');

_tab_role_wer:=_tab_role.mk_sel(,'P',,,,,,1);
_tab_role.win_fld(_tab_role_wer,_tab_role,'SYMBOL',,,90);
_form:="
   _par:=params_get();
   exec('zwrw_all','#tree',_par.TAB_ROLE,'PARENT',_par.WER_ROLE)
";
_tab_role.win_act(_tab_role_wer,,'Formuła','&Zwiń/rozwiń całość'@@,,'Zwijanie/rozwijanie całości'@,_form,,1,,,,'Z');
B_PREL.cntx_pop(); B_ROLE.cntx_pop(); B_ELE.cntx_pop();

:: Przekazuję tymczasowe tabele do params
params_set('TAB_ROLE',_tab_role,'WER_ROLE',_tab_role_wer,'TAB_ACT',_tab_act,'WER_ACT',_tab_act_wer);

:: Tworzy okienko grupowe
_form:="
   _par:=params_get();
   grp_disp(_par.TAB_ACT,_par.WER_ACT)
";
_grp:=_tab_act.grp_make('Czynności i role'@,_form,,1,1);
_tab_act.grp_sel(_grp,_tab_role,_tab_role_wer,,,,,,,,,,'maximized');
_tab_act.grp_splt(_grp,'panel0','vertical','Right');
_tab_act.grp_sel(_grp,_tab_act,_tab_act_wer,,,,,,,,,,'maximized');
_tab_act.win_sel(_grp);

_tab_act.first();

_tab_act.select();
~~


\export_svg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PS [17.00]
:: OPIS: Eksportuje proces do pliku SVG.
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_tab:=B_PROC.sel_aget();
B_PROC.sel_adel();

{? exec('cli_functions','#system')=0
|| FUN.emsg(exec('indevice_nacc_msg','#system'));
   return()
?};

_filepath:='@'+exec('export_dialog_path','#b_export');
_sep:=exec('sep','#file');
_filename:=exec('export_gen_filename','#b_export','.svg');

{? _filepath<>'@' & ~fexists(_filepath)
|| FUN.info('Nie znaleziono podanego katalogu.'@);
   return(~~)
?};

{? _filepath<>'@'
||
   {? _tab.size()>0
:: Akcja grupowa dla wszystkich zaznaczonych procesów.
   ||
      _tab.first();
      B_PROC.cntx_psh();
      _success:=1;
      {!
      |? B_PROC.seek(_tab.REF,);
         {? B_PROC.SVG<>null
         || _filename:=exec('export_gen_filename','#b_export','.svg');
            {? ~B_PROC.bl_get('SVG',_filepath+_sep+_filename,0)
            || _success:=0
            ?}
         || _success:=0
         ?};
         _tab.next()
      !};
      {? _success
      || FUN.info('Procesy (%1) zostały wyeksportowane.'@[$_tab.size()])
      || FUN.info('Wystąpił błąd przy eksporcie przynajmniej jednego z procesów.\n'
                  'Należy się upewnić, że wszystkie procesy zostały wcześniej zapisane.'@)
      ?};
      obj_del(_tab);
      B_PROC.cntx_pop()
:: Akcja dla pojedynczego procesu.
   || {? B_PROC.SVG<>null & B_PROC.bl_get('SVG',_filepath+_sep+_filename,0)
      || FUN.info('Plik został wyeksportowany.'@)
      || FUN.info('Nie udało się wyeksportować pliku.\n'
                  'Przed eksportem należy najpierw zapisać proces.'@)
      ?}
   ?}
?};
~~


\action_modeluj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Akcja 'Modeluj' w oknie wertowania B_PROC
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
::exec('np_run','#b__box','ZPR_PRO_MODE');
exec('select4proc','#b_design');

~~

:Sign Version 2.0 jowisz:1045 2023/08/23 10:46:45 e367cd4d64a9de86c6acf2c2224a70b06a3e4e9eaa2372e10a13422b18e99e2a54f9963a543b72db286f0304f57d33664ed1657233db9124c264279d4fb9b4a6d4d3a4f74a32568a2af81cf6e711654a5a3cbd2f3cd4956e9f94c4f64fd41cd2e5276fc855df1b28aefd709c2b0ddb7ddcdb6036bd6822cb3b0c9ac4d68fd3e7
