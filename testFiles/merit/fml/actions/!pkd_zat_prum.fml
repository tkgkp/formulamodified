:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_zat_prum.fml
:: Utworzony: 09.04.2015
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Obsługa czynności PKD_ZAT_PRUM - Rejestracja umowy o pracę.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Rejestracja umowy o pracę - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::# access=exec('run_cond_p','pkd','H','H.P().get()')
::
::# kind=WE, symbol=H, type=_H, name=Wskazanie angażu, required=T, keyref=T
::
_par:=params_get();
params_set(_par);

_in:=_par.in;
_ib:=_par.int;
_rv:=_par.out;
_mp:=_par.mp;

_id:=exec('ref2uid','#table',_in.H);
_result:='';

{? _id=''
|| _result:=exec('error','!pkd_zat_prum')

|? _mp.isMicro()
|| _mp.keyRef(_id);
   _value:=exec('edit','!pkd_zat_prum',_in.H,_par);
   _mp.delRef(_id);
   _mp.cancel()

|| _mp.save(_ib,_rv);
   _value:=exec('edit','!pkd_zat_prum',_in.H,_par);
   {? type_of(_value)=type_of(0)
   || _mp.save(_ib,_rv);
      {? _value<>0
      || _mp.done()
      || _mp.keep()
      ?}
   || _result:=_value
   ?}
?};

{? _result<>''
:  obsługa błędów
|| _mp.error(_result);
   FUN.emsg(_result)
?};
~~


\edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Rejestracja umowy o pracę - główna formuła czynności.
::   WE: _a - wskazanie na przebieg zatrudnienia
::       _b - wskazanie na tablicę parametrów czynności
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('os_adres_cfg','osoba','BLANK','OSOBA');

_err_msg:=exec('error','!pkd_zat_prum');

{? var_pres('_a')<>type_of(null) | _a=null | ref_name(_a)<>'_his_'
|| return(_err_msg)
?};

H.cntx_psh();
H.use(ref_name(_a));
H.prefix();

: sprawdź, czy dalsze działanie jest możliwe
{? ~H.seek(_a) | ref_name(H.UMOWA)<>'h_u_'
|| H.cntx_pop();
   return(_err_msg)
?};

H_UM.cntx_psh();
exec('otworz_h_um','pracownik',ref_name(H.UMOWA));
{? H_UM.seek(H.UMOWA)
|| H_UM.memo_get(,'UZASDN')
?};
P.cntx_psh();
P.clear();
OSOBA.cntx_psh();
OSOBA.prefix();

: przygotuj okienko redakcji
_edit_buf:=exec('save_fml_type','#field',EDIT_VAR,'BEFORE_EDIT');
_h_um_buf:=exec('save_fml_type','#field',H_UM,'BEFORE_EDIT');
_h_buf:=exec('save_fml_type','#field',H,'BEFORE_EDIT');
_osoba_buf:=exec('save_fml_type','#field',OSOBA,'BEFORE_EDIT');
exec('conf','!pkd_zat_prum',_b);
:: Ustawienie wartości z oddelegowania do pracy za granicą.
_oddelegowanie:=PAR_SKID.get(261)='T' & exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_OROD');
_edit:=P.win_edit('?');
{? _oddelegowanie
|| exec('h_odde_edit_begin','oddelegowanie',1,P,_edit,0);
   P.efld_opt(_edit,
      'editable=%1,enable=%2'[{? exec('h_oddel_editable','oddelegowanie') || '1' || 'grayed' ?},
      $(H.ODDEL='T' | #H.DO>0)],H,'ODDEL'
   );
   P.efld_opt(_edit,
      'editable=%1'
         [  {? exec('h_koddel_editable','oddelegowanie') & exec('h_oddel_editable','oddelegowanie')
            || '1'
            || 'grayed'
            ?}
         ],H,'KODDEL'
   );
   _txt:=''
|| exec('acces2fld_h_odde','oddelegowanie',P,_edit,0,,0,1)
?};

_cfg:=obj_new('F_ZATR','TDUP');
_cfg.F_ZATR:=P.F_ZATR().KOD;
_cfg.TDUP:=1;

: obsługa akcji czynności
_svc:=obj_new('DONE');
params_set('SERVICE',_svc,'MICRO',params_get().mp.isMicro(),'cfg',_cfg);
_svc.DONE:=0;

: zaktualizuj stan buforów
H.UMOWA().P().OSOBA();

{? P.edit(
   "  params_set(params_get());
      _chk:=exec('check','wspolpraca',1);
      {? (type_of(_chk)=type_of('') & _chk<>'') | (type_of(_chk)=type_of(0) & _chk=0)
      || 0
      || _chk:=exec('check','!pkd_zat_prum');
         {? (type_of(_chk)=type_of('') & _chk<>'') | (type_of(_chk)=type_of(0) & _chk=0)
         || _chk
         || 1
         ?}
      ?}
   "
   )
|| H.OD:=H_UM.OD;
   {? H.ODDEL<>'T'
   || H.DO:=H_UM.DO
   ?};
   do();
   {? P.put(1) & H_UM.put(1) & H.put(1)
   || {? P.F_ZATR().DOCELOWA='T'
      || {? exec('h_um_merge','pracownik')
         || OSOBA.KALI:='T';
            {? ~OSOBA.put(1)
            || undo()
            ?};

            {? P.KK
            || P_KK.cntx_psh();
               P_KK.index('OD');
               P_KK.prefix(P.ref());
               {? ~P_KK.first()
               || P_KK.blank();
                  P_KK.OD:=P.DZA;
                  P_KK.KK:=P.KK;
                  P_KK.add()
               ?};
               P_KK.cntx_pop()
            ?};

            SLO_OSOB.cntx_psh();
            SLO_OSOB.clear();
            SLO_OSOB.blank(1);
            SLO_OSOB.F_ZATR:=P.F_ZATR;
            SLO_OSOB.OSOBA:=P.OSOBA;
            SLO_OSOB.ID:=P.IP;
            {? ~SLO_OSOB.find_rec() & ~SLO_OSOB.add(1)
            || undo()
            ?};
            SLO_OSOB.cntx_pop()

         || undo()
         ?}
      ?}
   || undo()
   ?};
   end()
?};

:: Zakończenie pracy z oddelegowaniem do pracy za granicą.
{? _oddelegowanie
|| exec('h_odde_edit_end','oddelegowanie',_txt)
?};

OSOBA.cntx_pop();
P.cntx_pop();
H_UM.cntx_pop();
H.cntx_pop();
exec('otworz_h_um','pracownik');

exec('restore_fml_type','#field',OSOBA,'BEFORE_EDIT',_osoba_buf);
exec('restore_fml_type','#field',H,'BEFORE_EDIT',_h_buf);
exec('restore_fml_type','#field',H_UM,'BEFORE_EDIT',_h_um_buf);
exec('restore_fml_type','#field',EDIT_VAR,'BEFORE_EDIT',_edit_buf);
exec('os_adres_cfg','osoba','BLANK','');

_svc.DONE


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Rejestracja umowy o pracę - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));
_tab:=exec('init_desc_tab','pracownik');

{? type_of(_in.H)<>type_of(null) | _in.H=null
|| return('Zarejestruj umowę o pracę'@@)
?};

H.cntx_psh();
H.use(ref_name(_in.H));
H.prefix();
{? H.seek(_in.H)
|| STN.cntx_psh();
   STN.prefix();
   UD_SKL.cntx_psh();
   UD_SKL.prefix();
   OSOBA.cntx_psh();
   P.cntx_psh();
   H_UM.cntx_psh();
   H_UM.use(ref_name(H.UMOWA));
   H.UMOWA().P().OSOBA();
   _mp.keyRef(P.uidref(),0,0);
   _mp.keyRef(OSOBA.uidref(),0,0);
   _tab.ZAW_DANE:='T';
   _tab.NAZWISKO:=OSOBA.NAZWISKO;
   _tab.PIERWSZE:=OSOBA.PIERWSZE;
   _tab.OBCY:=OSOBA.OBCY;
   _tab.PASZPORT:=OSOBA.PASZPORT;
   _tab.PESEL:=OSOBA.PESEL;
   _tab.UR_DATA:=$OSOBA.UR_DATA;
   _tab.STN:=H.ST().ST;
   _tab.UD_SKL:=H.WYDZIAL().SYMBOL;
   H_UM.cntx_pop();
   P.cntx_pop();
   OSOBA.cntx_pop();
   UD_SKL.cntx_pop();
   STN.cntx_pop()
?};
H.cntx_pop();

{? _tab.ZAW_DANE='T'
|| {? _tab.OBCY='T'
   || 'Zarejestruj umowę o pracę: %1 %2: Paszport - %3 (%4/%5)'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT,_tab.STN,_tab.UD_SKL]
   |? +_tab.PESEL
   || 'Zarejestruj umowę o pracę: %1 %2: PESEL - %3 (%4/%5)'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT,_tab.STN,_tab.UD_SKL]
   || 'Zarejestruj umowę o pracę: %1 %2: Data urodzenia - %3 (%4/%5)'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT,_tab.STN,_tab.UD_SKL]
   ?}
|| 'Zarejestruj umowę o pracę'@@
?}


\conf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przygotowanie okna redagowania.
::   WE: _a - wskazanie na tablicę parametrów wywołania
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('set_fml_type','#field',EDIT_VAR,'BEFORE_EDIT',"0");
exec('set_fml_type','#field',H_UM,'BEFORE_EDIT',"0");
exec('set_fml_type','#field',H,'BEFORE_EDIT',"0");
exec('set_fml_type','#field',OSOBA,'BEFORE_EDIT',"0");

_wnd:=exec('wnd','wspolpraca','P','Rejestracja umowy o pracę'@);
exec('h_efld_opt','pracownik','*',P,_wnd);

: Zmiany w gwiazdkowaniu
P.efld_opt(_wnd,'mark=0');
P.efld_opt(_wnd,'mark=1',P,'T');
P.efld_opt(_wnd,'enable=0',P,'IP');

: akcje
_btn:=P.win_ebtn(_wnd,
   'text='+exec('text_red_zakoncz','#window','PKD_B')+',btn_label_align=center,panel=bottom,align=end',
   "params_get().SERVICE.DONE:=1; exec('done','!pkd_zat_prum'); 'key:F2'"
);
P.btn_eopt(_wnd,_btn,'state=%1,tooltip=%2'
   [{? _a.mp.isMicro() || 'grayed' || 'normal' ?},exec('help_red_zakoncz','#window','PKD_B')]
);
exec('ok_esc','#window',P,_wnd,~_a.mp.isMicro(),
   $("params_get().SERVICE.DONE:="+
      {? _a.mp.isMicro()
      || "1; exec('done','!pkd_zat_prum');"
      || "0;"
      ?}+
      "'key:F2'"
   ),,,,
   exec('help_red_ok','#window','Z'),exec('text_red_ok','#window','Z'),exec('help_red_esc','#window','A')
);

P.efld_opt(_wnd,'enable=1, editable=0',H_UM,'UZASDN');
P.efld_opt(_wnd,'enable=1, editable=0',H_UM,'WYM_UZAS');
P.efld_opt(_wnd,'enable=1, editable=0',H_UM,'OKR_UZAS');
P.efld_opt(_wnd,'enable=1, editable=0',H_UM,'OKR_UZAS','KOD');

: ustaw okno edycji
P.win_edit(_wnd);
~~


\done
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Właściwa zamiana formy współpracy.
::----------------------------------------------------------------------------------------------------------------------
{? P.F_ZATR().DOCELOWA<>'T'
|| P.F_ZATR:=exec('tmp2dest','f_zatr',F_ZATR.KOD)
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Zwraca treść komunikatu błędu
::   WE:
::   WY: treść komunikatu
::----------------------------------------------------------------------------------------------------------------------
'Zarejestrowanie umowy o pracę niemożliwe.\nBłędne wskazanie warunków zatrudnienia.'


\check
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Weryfikacja poprawności danych tabel P, H_UM i H
::   WY: zgodny ze specyfikacją wymagań dla formuły typu rekord po
::----------------------------------------------------------------------------------------------------------------------
exec('test_p_ip','pracownik',1,1);

__CHK.table(P,1,,'T','IP')

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:37 7e95884c60a3b19d9d138acb87ec3b2b6b1dcae97b824c3f317c964bcefc238f00343526ebfee8df200980947b70f856572ac138f99021767c835e3f1ebaf4de13553666bd6399654214d9a7384126a76d59237cba43ed158dca469bd8bdf1cf8982c2fa9afe2e1a2bcbd9b8e795c269ef61d2ff3be76c08bc15c3e4f6e135ae
