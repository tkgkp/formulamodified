:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lum_zgl_dzgl.fml
:: Utworzony: 14.02.2019
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Rejestracja zgłoszenia jednorazowego
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::       context - [obj_new] obiekt służący do przekazywania kontekstu wywołania czynności
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ
::# parses=exec('parses','!lum_zgl_dzgl')
::# kind=WE,   symbol=GPODPOZ, type=_GPODPOZ, name=Odbiór z Gminnego Punktu Odbioru,       required=N
::# kind=WE,   symbol=UP,      type=_UP,      name=Pozycja umowy cyklicznej,               required=N
::# kind=WE,   symbol=ZLE_UP,  type=_ZLE,     name=ZLE dla UP,                             required=N
::# kind=WE,   symbol=UPM,     type=_UPM,     name=Pozycja umowy miejskiej,                required=N
::# kind=WE,   symbol=ZLP0,    type=_ZLP,     name=Zgłoszenie jednorazowe do skopiowania,  required=N
::# kind=WE,   symbol=DWYM,    type=DATE,     name=Data wymiany (dla ZLP0),                required=N
::# kind=WE,   symbol=D,       type=DATE,     name=Preferowana data wykonania (dla ZLP0),  required=N
::# kind=WY,   symbol=ZLP,     type=_ZLP,     name=Zgłoszenie jednorazowe,                 required=N
::# kind=WY,   symbol=ZLP0,    type=_ZLP,     name=Zgłoszenie jednorazowe wymieniane,      required=N

_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
_context:=params_get().context;
{? var_pres('_context')=type_of(~~)
||
   _context:=obj_new('ZAKONCZ');
   _context.ZAKONCZ:=0
?};

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_area_lum_zgl:=_mp.pathArea('LUM_ZGL');
_area_lum_umo:=_mp.pathArea('LUM_UMO');
_area_lum_kpo:=_mp.pathArea('LUO_KPO');
_area:=_area_lum_zgl | _area_lum_umo | _area_lum_kpo;
_proc:=_mp.pathProc();
_todo:=_mp.pathTodo() | _mp.pathArea() & ~_area;
_grupa:=_mp.isGroup();

_krefs:=_mp.getRefs();
{? var_pres('[1]',_krefs)<>type_of(~~) & ref_tab(_krefs[1])=ZLP
 & (_msk:=ref_name(_krefs[1]); _msk<>'' & _msk<>ZLP.name())
|| __PARSES.setVal('OddzialLogProd',1+(3-_msk));
   _args:=__PARSES.args('OkresRok');
   _args.OBSZAR:='LUM';
   _args.AR:=#(2+(4-_msk))+2000;
   _args.AM:=#(2+(6-_msk));
   __PARSES.setVal('OkresRok',_args)
?};
obj_del(_krefs);

{? _todo
:: Ustawienie kontekstu wg instancji elementu w procesie
|| {? var_pres('ZLP',_out)=type_of(null()) & _out.ZLP
   || 1
   |? ~_mp.isMicro()
   || _akcja:='START_TODO'
   || _mp.error('Brak parametru wyjściowego ZLP.'@)
   ?}
?};

BEER.MW:='F';
exec('ustaw_ww','eurusd',BEER.MW);
HELP.POJ:='I';
POM.TYPDOK:='ZLE';
POM.TAB:='ZLE';
POM.ODDZ:=ST.ODDZ;
ZLEC.TYP:='Z';
:: ZLEC.RODZ='J' - zgłoszenia jednorazowe
ZLEC.RODZ:='J';
:: DRO_TODO_AWI: ZLEC.RODZ='U' - zgłoszenia do umów <<-- dodać obsługę
:: ZLEC.RODZ='U' - złoszenia do umów
::ZLEC.RODZ:='U';
POMOC.RODZ:='U';
POMOC.MGR:=POMOC.MGRF:=null;

:: DRO_TODO_AWI: Sprawdzenie uprawnień
:: Sprawdzenie uprawnień
::{? params_exec('permissions_chk','lsp','!lsp_fak_drfp')=0 || return() ?};

:: Wyzwalacz, który po dodaniu zgłoszenia:
:: - add: zapisuje parametr wyjściowy ZLP = wskazanie na zgłoszenie
::   del: zapisuje parametr wyjściowy ZLP = null
_mp.trigRef('ZLP',,1,,exec('kind_out','#b_port'),'ZLP');

{? ~exec('czy_z_ok','okresy',4,4,ST.AR,ST.AM)
|| FUN.info('Okres zamknięty - niemożliwe wystawienie zgłoszenia jednorazowego.'@);
   _mp.error('Okres zamknięty - niemożliwe wystawienie zgłoszenia jednorazowego.'@)
|? _akcja='Dołącz'
   | _proc
   | _akcja='START_TODO'
||
:: Obsługa Dołącz - dołącz w oknie obszaru i start procesu z pulpitu
   params_set('context',_context);
   exec('zlp_zadd','!lum_zgl_dzgl',_in.GPODPOZ,_in.UP,_in.ZLE_UP,_in.UPM);
   {? _context.ZAKONCZ || _mp.done() ?};
:: Podczytanie parametrów wyjściowych
   _outa:=_mp.load(exec('kind_out','#b_port'));
   {? var_pres('ZLP',_outa)<>type_of(~~) & _outa.ZLP
   ||
      {? _in.UPM<>null() || exec('zlp2bigbag','umowy_miejskie',_outa.ZLP) ?};
::    Dodano zgłoszenie
::    Ustawienie się na dodanym zgłoszeniu w widoku obszaru
      {? _area_lum_zgl || {? ZLP.f_active() || ZLP.f_rfresh(); ZLP.f_seek(_outa.ZLP) || ZLP.seek(_outa.ZLP) ?} ?}
   ||
::    Wycofanie czynności bo nie dodano zgłoszenia
      _mp.cancel()
   ?}

|? _akcja='DołączMWA'
||
:: Obsługa Dołącz - dołącz przez webapi
   _wsenv:=exec('wsenv','#mwapi');
   params_set('context',_context);
   exec('zlp_zadd_mwa','!lum_zgl_dzgl',_in.GPODPOZ,_in.UP,_in.ZLE_UP,_in.UPM,_wsenv);
:: Podczytanie parametrów wyjściowych
   _outa:=_mp.load(exec('kind_out','#b_port'));
   {? var_pres('ZLP',_outa)<>type_of(~~) & _outa.ZLP
   ||
      __wsenv.IDADD:=ZLP.IDADD;
      _mp.done()
   ||
::    Wycofanie czynności bo nie dodano zgłoszenia
      _mp.cancel()
   ?}

|? _akcja='Popraw' | _todo
|| params_set('context',_context);
   _zlp:=null();
   {? _todo
   || {? type_of(_out)>type_of(~~) & var_pres('ZLP',_out)>type_of(~~)
      || _zlp:=_out.ZLP
      ?}
   || _zlp:=ZLP.ref()
   ?};
   {? _zlp=null()
   || _mp.cancel
   || ZLP.cntx_psh();
      _x:=ref_name(_zlp)+5;
      exec('zle_open','open_tab',1+_x,2+(_x+4),_x+2);
      ZLP.prefix();
      {? ZLP.seek(_zlp)
      || exec('zlp_zput','!lum_zgl_dzgl');
         {? _context.ZAKONCZ
         || ZLP.cntx_psh();
            _mskwym:=form(8+(ZLP.WYMIANA2+16));
            {? _mskwym<>'' || ZLP.use(_mskwym) ?};
            _zlp0:={? ZLP.WYMIANA2<>''
                   || exec('FindInSet','#table','ZLP','WYMIANA',ZLP.WYMIANA2,'W',,1,,null())
                   || null()
                   ?};
            {? _zlp0<>null() || _mp.save(exec('kind_out','#b_port'),'ZLP0',_zlp0) ?};
            ZLP.cntx_pop();
            _outa:=_mp.load(exec('kind_out','#b_port'));
            {? var_pres('ZLP',_outa)<>type_of(~~) & _outa.ZLP & _in.UPM<>null()
            || exec('zlp2bigbag','umowy_miejskie',_outa.ZLP)
            ?};
            _mp.done()
         ?};
         _mp.descTodo()
      ?};
      ZLP.cntx_pop()
   ?}

|? _akcja='Usuń'
||
   _zlp:={? _todo || _out.ZLP || ZLP.ref() ?};
   {? _zlp
   ||
      ZLP.cntx_psh();
      _x:=ref_name(_zlp)+5;
      exec('zle_open','open_tab',1+_x,2+(_x+4),_x+2);
      {? ~_area_lum_zgl || ZLP.prefix() ?};
      {? ~ZLP.seek(_zlp)
      ||
         _zlp:=null()
      ||
         exec('zlp_usu','umowy_zlecenia');
         {? ~ZLP.seek(_zlp)
         ||
::          Wycofuję instancję jeśli nie znaleziono zgłoszenia
            _mp.cancel()
         ?};
         _zlp:=ZLP.ref()
      ?};
      ZLP.cntx_pop();
::    Ustawienie się na kolejnym dokumencie w widoku obszaru
      {? _area_lum_zgl || {? _zlp || {? ZLP.f_active() || ZLP.f_rfresh(); ZLP.f_seek(_zlp) || ZLP.seek(_zlp) ?} ?} ?}
   ?}

|? _akcja='Zakończ_wer'
||
   _zlp:=null();
   {? type_of(_out)>type_of(~~) & var_pres('ZLP',_out)>type_of(~~)
   || _zlp:=_out.ZLP
   || _zlp:=ZLP.ref()
   ?};
   {? _zlp=null()
   || _mp.cancel()
   || ZLP.cntx_psh();
      _x:=ref_name(_zlp)+5;
      exec('zle_open','open_tab',1+_x,2+(_x+4),_x+2);
      ZLP.prefix();
      {? ZLP.seek(_zlp)
      || {? exec('zlp_zakoncz','!lum_zgl_dzgl')
         || ZLP.cntx_psh();
            _mskwym:=form(8+(ZLP.WYMIANA2+16));
            {? _mskwym<>'' || ZLP.use(_mskwym) ?};
            _zlp0:={? ZLP.WYMIANA2<>''
                   || exec('FindInSet','#table','ZLP','WYMIANA',ZLP.WYMIANA2,'W',,1,,null())
                   || null()
                   ?};
            {? _zlp0<>null() || _mp.save(exec('kind_out','#b_port'),'ZLP0',_zlp0) ?};
            ZLP.cntx_pop();
            {? ZLP.put()
            || _outa:=_mp.load(exec('kind_out','#b_port'));
               {? var_pres('ZLP',_outa)<>type_of(~~) & _outa.ZLP & _in.UPM<>null()
               || exec('zlp2bigbag','umowy_miejskie',_outa.ZLP)
               ?};
               _mp.done()
            ?}
         ?}
      ?};
      ZLP.cntx_pop()
   ?}

|? _akcja='Kopiuj'
||
   _zlp0:=null();
   _zlp:=null();
   {? var_pres('ZLP0',_in)=type_of(null())
   || _zlp0:=_in.ZLP0
   ?};
   {? _zlp0<>null()
   || {? ~ZLP.seek(_zlp0)
      || _zlp0:=null()
      ?}
   ?};
   {? _zlp0<>null()
   ||
      exec('zlp_copy_core','!lum_zgl_dzgl',0);
      _outa:=_mp.load(exec('kind_out','#b_port'));
      {? var_pres('ZLP',_outa)<>type_of(~~) & _outa.ZLP
      ||
         _zlp:=_outa.ZLP;
::       Ustawienie się na dodanym zgłoszeniu w widoku obszaru
         {? _area_lum_zgl || {? ZLP.f_active() || ZLP.f_rfresh(); ZLP.f_seek(_outa.ZLP) || ZLP.seek(_outa.ZLP) ?} ?}
      ?}
   ?};
   {? _zlp0=null() | _zlp=null() || _mp.cancel() ?}

|? _akcja='Wymiana'
|| ZLP.cntx_psh();
   _zlp0:=null();
   _zlp:=null();
   _zakoncz:=0;
   {? var_pres('ZLP0',_in)=type_of(null())
   || _zlp0:=_in.ZLP0
   ?};
   {? _zlp0<>null()
   || {? ~ZLP.seek(_zlp0)
      || _zlp0:=null()
      ?}
   ?};
   {? _zlp0<>null()
   || exec('zlp_copy_core','!lum_zgl_dzgl',1,_in.DWYM,_in.D);
      _outa:=_mp.load(exec('kind_out','#b_port'));
      {? var_pres('ZLP',_outa)<>type_of(~~) & _outa.ZLP
      || params_set('context',_context);
         _zlp:=_outa.ZLP;
         ZLP.cntx_psh();
         ZLP.prefix();
         {? ZLP.seek(_zlp)
         || ZLP.cntx_psh();
            {? _zlp0<>null() || _mp.save(exec('kind_out','#b_port'),'ZLP0',_zlp0) ?};
            ZLP.cntx_pop();
            _zakoncz:=1
         ?};
         ZLP.cntx_pop()
      ?}
   ?};
   _mp.descTodo();
   ZLP.cntx_pop();
   {? _zakoncz || _mp.done() || _mp.descTodo() ?};
   {? _area_lum_zgl || {? ZLP.f_active() || ZLP.f_rfresh(); ZLP.f_seek(_zlp) || ZLP.seek(_zlp) ?} ?};
   {? _zlp0=null() | _zlp=null() || _mp.cancel() ?}

|| _mp.error('Nieobsługiwana ścieżka.'@)

?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_out:=_mp.load(exec('kind_out','#b_port'));

{? var_pres('ZLP',_out)=type_of(null()) & _out.ZLP
||
   'Zakończ rejestrację zgłoszenia jednorazowego: %1'@@ [exec('record','#to_string',_out.ZLP)]
||
   'Zarejestruj zgłoszenie jednorazowe'@@
?}


\zlp_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Zgłoszenie jednorazowe - Dołącz
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZLP.cntx_psh();
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LUM_ZGL_DZGL';
_params.AKCJA:='Dołącz';
_params.PROC_START:='T';
_params.CONTEXT:=obj_new('ZAKONCZ');
_params.CONTEXT.ZAKONCZ:=0;

exec('mp_run','#b__box',_params);
_ref:=ZLP.ref();
ZLP.cntx_pop();
{? _ref<>null() || ZLP.seek(_ref) ?};
~~

\zlp_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Zgłoszenie jednorazowe - Popraw
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZLP.cntx_psh();
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LUM_ZGL_DZGL';
_params.UIDREF:=ZLP.uidref();
_params.AKCJA:='Popraw';
_params.CONTEXT:=obj_new('ZAKONCZ');
_params.CONTEXT.ZAKONCZ:=0;

exec('mp_run','#b__box',_params);
ZLP.cntx_pop();
~~

\zlp_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Zgłoszenie jednorazowe - Zakończ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Zakończyć rejestrację zgłoszenia jednorazowego?'@)
||
   ZLP.STAT_REJ:='Z';
   exec('stanPlan','umowy_zlecenia');
   1
?}


\zlp_zakoncz_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Zgłoszenie jednorazowe - Zakończ w oknie redakcji
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_chk:=exec('chk_zlp','umowy_zlecenia');
{? _chk<>''
||
   'edit:'+_chk
||
   _env:=params_get();
   _context:=_env.context;
   _context.ZAKONCZ:=exec('zlp_zakoncz','!lum_zgl_dzgl');
   {? _context.ZAKONCZ || 'key:F2' || '' ?}
?}


\zlp_zakoncz_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Zgłoszenie jednorazowe - Zakończ w oknie wertowania
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZLP.cntx_psh();
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LUM_ZGL_DZGL';
_params.UIDREF:=ZLP.uidref();
_params.AKCJA:='Zakończ_wer';

exec('mp_run','#b__box',_params);
ZLP.cntx_pop();
~~


\zlp_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Zgłoszenie jednorazowe - Usuń
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LUM_ZGL_DZGL';
_params.UIDREF:=ZLP.uidref();
_params.AKCJA:='Usuń';

exec('mp_run','#b__box',_params)


\zlp_zadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: redakcja zlecen oraz pozycji zlecen
::  OLD: \zlp_zadd/um_zlec2.fml
::   WE: [_a] GPODPOZ
::       [_b] UP
::       [_c] ZLE_UP
::       [_d] UPM
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_gpod:=0;
_up:=0;
_upm:=0;
_fasup:=null();
ZLE.cntx_psh();
{? var_pres('_a')=7 & GPODPOZ.seek(_a) | GPOD.seek(GPODPOZ.GPOD)
|| _gpod:=1
?};
{? ~_gpod & var_pres('_b')=7 & var_pres('_c')=7 & UP.seek(_b) & (ZLE.prefix(); ZLE.seek(_c))
|| _up:=1;
   _fasup:=UP.UM().FAS;
   ZLE.FAS:=_fasup
?};
{? ~_gpod & ~_up & var_pres('_d')=7 & UPM.seek(_d)
|| _upm:=1
?};

{? _gpod
|| {? GPODPOZ.F='N'
   || FUN.info('Można wygenerować zgłoszenie tylko dla pozycji z danymi kontrahenta.'@);
      return('')
   |? GPODPOZ.KH=null()
   || FUN.info('Można zafakturować tylko pozycję z uzupełnionym kontrahentem.'@);
      return('')
   ?}
?};

_pos:=_tar:=_fas:=_han:=_m:=_usl:=null();
ZLEC.NP:='';
ZLEC.MIA:=null();
ZLEC.UL:=null();
POS.cntx_psh();
POS.win_dict('WER');

{? _gpod
|| _fas:=exec('kst_fas','umowy');
   _tar:=exec('bl_zltar','umowy_zlecenia');
   GPODLIM.index('ODP');
   GPODLIM.prefix(GPOD.ref(),GPODPOZ.ODP,);
   {? GPODLIM.find_le(GPODPOZ.D)
   || _m:=GPODLIM.M;
      _tar:=GPODLIM.TAR;
      _usl:=GPODLIM.USL
   ?};
   POS.index('KHM');
   POS.prefix(GPODPOZ.KH,GPODPOZ.MIA().NAZ,GPODPOZ.MIA().NAZ,GPODPOZ.UL().UL,GPODPOZ.UL().UL,GPODPOZ.NRD);
   {? POS.first()
   || _pos:=POS.ref
   || POS.prefix();
      POS.blank();
      POS.KH:=GPODPOZ.KH;
      POS.MIA:=GPODPOZ.MIA;
      POS.UL:=GPODPOZ.UL;
      POS.REJO:=POS.UL().REJO;
      POS.NR:=GPODPOZ.NRD;
      {? POS.add(1)
      || _pos:=POS.ref()
      ?}
   ?};
   ZLEC.MIA:=POS.MIA;
   ZLEC.UL:=POS.UL;
   ZLEC.POS_NR:=POS.NR
?};

exec('zlp_umo','umowy_zlecenia',0);

{? _up
|| ZLEC.MIA:=ZLE.POS().MIA;
   ZLEC.UL:=ZLE.POS().UL;
   ZLEC.POS_NR:=ZLE.POS().NR
|| ZLE.blank();
   {? _gpod
   || ZLE.POS:=_pos;
      ZLE.USL:=_usl;
      ZLE.TAR:=_tar;
      ZLE.FAS:=_fas;
      ZLE.KH:=GPODPOZ.KH;
      ZLE.TFAK:='N'
   ?};
   ZLE.CZUM:='N'
?};

POMOC.RODZ:='U';
POMOC.USL:=ZLE.USL;
ZLP.blank();
{? _gpod
|| _podst:=0
|| _podst:=exec('get','#params',100160,2)='T'
?};
{? _gpod
|| ZLP.NK:='K';
   ZLP.RODZ:='Z';
   ZLP.POS:=_pos;
   ZLP.LOKAL:=GPODPOZ.LOKAL;
   ZLP.DW:=GPODPOZ.D;
   ZLP.MJ:=_m;
   ZLP.IL:=GPODPOZ.WAGA;
   ZLP.ODP:=GPODPOZ.ODP;
   ZLP.KG:=exec('uz_zlp_kg','umowy_zlecenia',1,1);
   ZLP.U:='Pozycja wprowadzona z Gminnego Punktu Odbioru Odpadów nr %1'[GPOD.KOD]
|? _up
|| {? ZLEC.Z_UM
   || ZLP.KH:=ZLE.KH;
      ZLP.KH_ODB:=UP.UM().KH_ODB;
      ZLP.IL:=UP.IL;
      ZLP.MJ:=UP.MJ;
      ZLP.JM:=UP.JM;
      ZLP.C:=UP.C;
      ZLP.RFAK:=UP.RFAK;
      ZLP.ODP:=UP.ODP;
      ZLP.WYS:=UP.WYS;
      ZLP.HAN:=UP.UM().HAN;
      ZLP.WAL:=UP.WAL;
      ZLP.CB:=UP.UM().CB;
      ZLP.KG:=exec('uz_zlp_kg','umowy_zlecenia',2,0);
      ZLP.ZLBR:=UP.ZLBR;
      {? UP.DOD='T'
      || ZLP.PRD:=UP.PRD;
         ZLP.C_D:=UP.C_D;
         ZLP.M_D:=UP.M_D;
         ZLP.ILD:=UP.ILD
      ?}
   ?};
   {? ZLE.KH<>null()
   ||
     ZLP.OSNAZ:=ZLE.KH().NAZ;
     ZLP.MAIL:=ZLE.KH().EM;
     ZLP.OSTEL:=ZLE.KH().TEL
   ?};
   {? ZLEC.Z_UM & UP.UM().KH_ODB<>null()
   ||
     ZLP.OSNAZ:=UP.UM().KH_ODB().NAZ;
     ZLP.MAIL:=UP.UM().KH_ODB().EM;
     ZLP.OSTEL:=''
   ?};
   ZLP.HAN:=exec('han_blank','users')
|? _upm
|| ZLP.HAN:=exec('han_blank','users');
   exec('zlp_bigbb_be_ed','!lum_zgl_dzgl');
   exec('zlp2bigbag','umowy_miejskie',ZLP.ref())
?};
ZLP.SP:={? _podst || 'T' || 'N' ?};
ZLP.memo_set(,'OPIS_LOG');
ZLP.memo_set(,'OPIS');
ZLP.memo_set(,'NDRUK');
_typ:=exec('get','#params',100172,2);
{? _typ<>'' || ZLP.TKPO:=_typ ?};

exec('zlp_umo','umowy_zlecenia');

exec('zle_win_edit_set','!lum_zgl_dzgl');

_fml:="{? params_get().context.ZAKONCZ || '' || exec('chk_zlp','umowy_zlecenia') ?}";
{? _upm
|| _fldP:='LOKAL'
|| _fldP:=''
?};

exec('jm_kpo','jm');
{? ZLE.edit(_fml,,_fldP)
||
   _pos:=ZLE.POS;
   _usl:=ZLE.USL;
   _tar:=ZLE.TAR;
   _kh:=ZLE.KH;
   _fas:=ZLE.FAS;
   _pl:=ZLE.PL;

   {? _up & _fas=_fasup
   || _zle:=ZLE.ref()
   || _zle:=null();
      _zlp:=null();

      _pop:=0;
      ZLE.cntx_psh();
      ZLP.cntx_psh();

      {? _kh<>null() & _pos<>null() & _tar<>null() & _fas<>null()
      ||
         ZLE.index('GEN');
         ZLE.prefix(ST.ODDZ,'N',null(),_pos,_usl,_tar,_fas,null());
         {? ~ZLE.first()
         ||
            _pop:=1;
            ZLE.cntx_pop();
            ZLP.cntx_pop();
::          generuje nowy naglowek ZLE
            _zle:=exec('zle_nex2','!lum_zgl_dzgl')
         ||
            _zle:=ZLE.ref()
         ?}
      ||
         {? _fas=null
         ||
            FUN.info('Zgłoszenie nie zostało dołączone.'
               '\nNależy uzupełnić domyślny sposób fakturowania w parametrach.'
               '\nFormuły systemu, zakładka Umowy, parametr numer 100130.'@)
         ?}
      ?};

      {? _pop=0
      ||
         ZLE.cntx_pop();
         ZLP.cntx_pop()
      ?}

   ?};

   {? _zle<>null()
   || ZLE.cntx_psh();
      ZLE.prefix();
      {? ZLE.seek(_zle) & ZLE.FAS<>_fas
      || ZLE.FAS:=_fas;
         ZLE.put(1)
      ?};
      ZLE.cntx_pop();
      ZLP.ZLE:=_zle;
      ZLP.KH:=ZLP.ZLE().KH;
      ZLP.UM:=ZLE.UM;
      ZLP.USL:=ZLE.USL;
      ZLP.MIA:=ZLE.POS().UL().MIA;
      ZLP.UL:=ZLE.POS().UL;
      ZLP.POS:=ZLE.POS;
      ZLP.KG:=exec('uz_zlp_kg','umowy_zlecenia',1,1);
      ZLP.PL:=_pl;
      ZLP.KODK:=$ZLP.tm_stamp();
      ZLP.cntx_psh();
      ZLP.prefix();
      {? ZLP.add()
      || ZLP.memo_put(,'OPIS');
         ZLP.memo_put(,'NDRUK');
         ZLP.memo_put(,'OPIS_LOG');
         _zlp:=ZLP.ref()
      ?};
      {? _gpod
      || GPODPOZ.ZLP:=$ZLP.ref();
         GPODPOZ.GENZLP:='T';
         GPODPOZ.put()
      ?};
      ZLP.cntx_pop();
      {? _zlp<>null()
      || ZLP.seek(_zlp)
      ?}
   ?}
||
   ZLEC.NP:='';
   ZLEC.MIA:=null();
   ZLEC.UL:=null();
   ZLE.KH:=null();
   ZLE.TAR:=null();
   ZLE.USL:=null()
?};
POS.cntx_pop();
ZLE.cntx_pop();
{? ZLP.f_active() || ZLP.f_rfresh() ?};
''


\zlp_zadd_mwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: redakcja zlecen oraz pozycji zlecen
::  OLD: \zlp_zadd/um_zlec2.fml
::   WE: [_a] GPODPOZ
::       [_b] UP
::       [_c] ZLE_UP
::       [_d] UPM
::       [_e] _wsenv
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_gpod:=0;
_up:=0;
_upm:=0;
{? var_pres('_a')=7 & GPODPOZ.seek(_a) | GPOD.seek(GPODPOZ.GPOD)
|| _gpod:=1
?};
{? ~_gpod & var_pres('_b')=7 & var_pres('_c')=7 & UP.seek(_b) & ZLE.seek(_c)
|| _up:=1
?};
{? ~_gpod & ~_up & var_pres('_d')=7 & UPM.seek(_d)
|| _upm:=1
?};

_wsenv:=_e;

{? ZLP.MJ<>null()
||
   ZLE.USL:=ZLP.MJ().USL
?};

_check:=exec('chk_zlp','umowy_zlecenia');

{? _check=''
||

   {? _gpod
   || {? GPODPOZ.F='N'
      || FUN.emsg('Można wygenerować zgłoszenie tylko dla pozycji z danymi kontrahenta.'@);
         return('')
      |? GPODPOZ.KH=null()
      || FUN.emsg('Można zafakturować tylko pozycję z uzupełnionym kontrahentem.'@);
         return('')
      ?}
   ?};

   _pos:=ZLE.POS;
   _tar:=ZLE.TAR;
   _m:=ZLP.MJ;
   _fas:=_han:=_usl:=null();
   ZLEC.NP:='';
   ZLEC.MIA:=null();
   ZLEC.UL:=null();
   POS.cntx_psh();

   {? _gpod
   || _fas:=exec('kst_fas','umowy');
      _tar:=exec('bl_zltar','umowy_zlecenia');
      GPODLIM.index('ODP');
      GPODLIM.prefix(GPOD.ref(),GPODPOZ.ODP,);
      {? GPODLIM.find_le(GPODPOZ.D)
      || _m:=GPODLIM.M;
         _tar:=GPODLIM.TAR;
         _usl:=GPODLIM.USL
      ?};
      POS.index('KHM');
      POS.prefix(GPODPOZ.KH,GPODPOZ.MIA().NAZ,GPODPOZ.MIA().NAZ,GPODPOZ.UL().UL,GPODPOZ.UL().UL,GPODPOZ.NRD);
      {? POS.first()
      || _pos:=POS.ref
      || POS.prefix();
         POS.blank();
         POS.KH:=GPODPOZ.KH;
         POS.MIA:=GPODPOZ.MIA;
         POS.UL:=GPODPOZ.UL;
         POS.REJO:=POS.UL().REJO;
         POS.NR:=GPODPOZ.NRD;
         {? POS.add(1)
         || _pos:=POS.ref
         ?}
      ?};
      ZLEC.MIA:=POS.MIA;
      ZLEC.UL:=POS.UL;
      ZLEC.POS_NR:=POS.NR
   ?};

   POS.cntx_pop();

   exec('zlp_umo','umowy_zlecenia',0);

   {? _up
   || ZLEC.MIA:=ZLE.POS().MIA;
      ZLEC.UL:=ZLE.POS().UL;
      ZLEC.POS_NR:=ZLE.POS().NR
   ||
      {? _gpod
      || ZLE.POS:=_pos;
         ZLE.USL:=_usl;
         ZLE.TAR:=_tar;
         ZLE.FAS:=_fas;
         ZLE.KH:=GPODPOZ.KH;
         ZLE.TFAK:='N'
      ?};
      ZLE.CZUM:='N'
   ?};

   {? ZLE.KH<>null || ZLE.TYP:='Z' || ZLE.TYP:='W' ?};

   ZLE.index('GEN');
   ZLE.prefix(ZLE.ODDZ,'N',null(),ZLE.POS,ZLE.USL,ZLE.TAR,ZLE.FAS,null());
   {? ~ZLE.first()
   || _nr:=exec('numer_new','numery','PACZKA');
      ZLE.NR:=_nr;
      {? ZLE.add()
      || exec('znak','numery','ZLE')
      ?}
   ?};

   POMOC.RODZ:='U';
   POMOC.USL:=ZLE.USL;
   {? _gpod
   || ZLP.NK:='K';
      ZLP.RODZ:='P';
      ZLP.POS:=_pos;
      ZLP.LOKAL:=GPODPOZ.LOKAL;
      ZLP.DW:=GPODPOZ.D;
      ZLP.MJ:=_m;
      ZLP.IL:=GPODPOZ.WAGA;
      ZLP.ODP:=GPODPOZ.ODP;
      ZLP.KG:=exec('uz_zlp_kg','umowy_zlecenia',1,1);
      ZLP.U:='Pozycja wprowadzona z Gminnego Punktu Odbioru Odpadów nr %1'[GPOD.KOD]
   |? _up
   || {? ZLEC.Z_UM
      || ZLP.KH:=ZLE.KH;
         ZLP.KH_ODB:=UP.UM().KH_ODB;
         ZLP.IL:=UP.IL;
         ZLP.MJ:=UP.MJ;
         ZLP.JM:=UP.JM;
         ZLP.C:=UP.C;
         ZLP.RFAK:=UP.RFAK;
         ZLP.ODP:=UP.ODP;
         ZLP.WYS:=UP.WYS;
         ZLP.HAN:=UP.UM().HAN;
         ZLP.WAL:=UP.WAL;
         ZLP.CB:=UP.UM().CB;
         ZLP.KG:=exec('uz_zlp_kg','umowy_zlecenia',2,0);
         {? UP.DOD='T'
         || ZLP.PRD:=UP.PRD;
            ZLP.C_D:=UP.C_D;
            ZLP.M_D:=UP.M_D;
            ZLP.ILD:=UP.ILD
         ?}
      ?};
      {? ZLE.KH<>null()
      ||
        ZLP.OSNAZ:=ZLE.KH().NAZ;
        ZLP.MAIL:=ZLE.KH().EM;
        ZLP.OSTEL:=ZLE.KH().TEL
      ?};
      {? ZLEC.Z_UM & UP.UM().KH_ODB<>null()
      ||
        ZLP.OSNAZ:=UP.UM().KH_ODB().NAZ;
        ZLP.MAIL:=UP.UM().KH_ODB().EM;
        ZLP.OSTEL:=''
      ?};
      ZLP.HAN:=exec('han_blank','users')
   |? _upm
   || ZLP.HAN:=exec('han_blank','users');
      exec('zlp_bigbb_be_ed','!lum_zgl_dzgl')
   ?};
   _podst:=exec('get','#params',100160,2)='T';
   ZLP.SP:={? _podst || 'T' || 'N' ?};
   ZLP.memo_set(,'OPIS_LOG');
   ZLP.memo_set(,'OPIS');
   ZLP.memo_set(,'NDRUK');

   exec('zlp_umo','umowy_zlecenia');

   _pos:=ZLE.POS;
   _usl:=ZLE.USL;
   _tar:=ZLE.TAR;
   _kh:=ZLE.KH;
   _fas:=ZLE.FAS;

   _zle:=ZLE.ref();

   {? _zle<>null()
   ||
      ZLP.ZLE:=_zle;
      ZLP.KH:=ZLP.ZLE().KH;
      ZLP.UM:=ZLP.ZLE().UM;
      ZLP.USL:=ZLP.ZLE().USL;
      ZLP.MIA:=ZLP.ZLE().POS().UL().MIA;
      ZLP.UL:=ZLP.ZLE().POS().UL;
      ZLP.POS:=ZLP.ZLE().POS;
      ZLP.KG:=exec('uz_zlp_kg','umowy_zlecenia',1,1);
::      ZLP.cntx_psh();
::      ZLP.prefix();

      ZLP.STAT_REJ:='Z';
      ZLP.KODK:=$ZLP.tm_stamp();
      exec('stanPlan','umowy_zlecenia');
      {? ZLP.add()
      || ZLP.memo_put(,'OPIS');
         ZLP.memo_put(,'NDRUK');
         ZLP.memo_put(,'OPIS_LOG');
         _zlp:=ZLP.ref()
      ?}

::      {? _gpod
::      || GPODPOZ.ZLP:=$ZLP.ref;
::         GPODPOZ.GENZLP:='T';
::         GPODPOZ.put()
::      ?};
::      ZLP.cntx_pop();
::      {? _zlp<>null
::      || ZLP.seek(_zlp)
::      ?}
   ?}
?};
''


\zlp_zput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: redakcja zlecen oraz pozycji zlecen
::  OLD: \zlp_zput/um_zlec2.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_moz:=exec('czy_mod','umowy_zlecenia');
_pop:=ZLEC.POP;
{? ~_moz
|| _env:=params_get();
   _context:=_env.context;
   _context.ZAKONCZ:=1
?};
{? _moz & ZLP.r_lock(1,1,1)
||
   {? ZLP.sel_mark()=0
   ||
::    popraw dla pojedynczego rekordu
      POS.cntx_psh();
      exec('zlp_aktu','umowy_zlecenia',1);
      ZLEC.NP:='';
      POS.win_dict('WER');
      ZLE.get();
      POMOC.RODZ:='U';
      POMOC.USL:=ZLE.USL;
      ZLP.get();
      ZLP.memo_get(,'OPIS');
      ZLP.memo_get(,'NDRUK');
      _zakoncz:=ZLE.CZUM<>'T' & ZLE.TFAK<>'T';
      ZLEC.POP:=ZLP.STAT_REJ<>'N';
      exec('zle_win_edit_set','!lum_zgl_dzgl',{? ZLP.WYMIANA<>'' | ZLP.WYMIANA2<>'' || 'W' || '' ?},_zakoncz);
      exec('jm_kpo','jm');
      {? ZLE.edit("{? params_get().context.ZAKONCZ || '' || exec('chk_zlp','umowy_zlecenia') ?}")
      ||
         _zle:=null;

         _pop:=0;
         ZLE.cntx_psh();
         ZLP.cntx_psh();

         _czum:=ZLE.CZUM;
         _pos:=ZLE.POS;
         _usl:=ZLE.USL;
         _tar:=ZLE.TAR;
         _kh:=ZLE.KH;
         _fas:=ZLE.FAS;
         _um:=ZLE.UM;
         _up:=ZLE.UP;
         _tfak:=ZLE.TFAK;
         _pl:=ZLE.PL;

         {? _kh<>null & _pos<>null & _tar<>null & _fas<>null
         ||
            ZLE.index('GEN');
            ZLE.prefix(ST.ODDZ,_czum,_um,_pos,_usl,_tar,_fas,_up);
            {? ~ZLE.first()
            ||
               _pop:=1;
               ZLE.cntx_pop();
               ZLP.cntx_pop();
::             generuje nowy naglowek ZLE
               ZLE.NR:=0;
               _zle:=exec('zle_nex2','!lum_zgl_dzgl')
            ||
               {!
               |?
                  {? ZLE.TFAK=_tfak
                        &
                     ZLE.PL=_pl
                  ||
                     _zle:=ZLE.ref()
                  ?};
                  ZLE.next() & _zle=null
               !};
               {? _zle=null
               ||
                  _pop:=1;
                  ZLE.cntx_pop();
                  ZLP.cntx_pop();
                  ZLE.NR:=0;
                  _zle:=exec('zle_nex2','!lum_zgl_dzgl')
               ?}
            ?}
         ||
            {? _fas=null
            ||
               FUN.info('Zgłoszenie nie zostało dołączone.'
                  '\nNależy uzupełnić domyślny sposób fakturowania w parametrach.'
                  '\nFormuły systemu, zakładka Umowy, parametr numer 100130.'@)
            ?}
         ?};

         {? _pop=0
         ||
            ZLE.cntx_pop();
            ZLP.cntx_pop()
         ?};

         {? _zle<>null
         ||
            ZLP.cntx_psh();
            ZLP.prefix();
            ZLP.ZLE:=_zle;
            ZLP.KH:=ZLP.ZLE().KH;
            ZLP.UM:=ZLP.ZLE().UM;
            ZLP.USL:=ZLP.ZLE().USL;
            ZLP.MIA:=ZLP.ZLE().POS().UL().MIA;
            ZLP.UL:=ZLP.ZLE().POS().UL;
            ZLP.POS:=ZLP.ZLE().POS;
            ZLP.KG:=exec('uz_zlp_kg','umowy_zlecenia',1,1);
            ZLP.PL:=_pl;
            ZLP.put();
            ZLP.memo_put(,'OPIS');
            ZLP.memo_put(,'NDRUK');
            ZLP.cntx_pop()
         ?}
      ?};
      POS.cntx_pop()
   ||
::    popraw dla akcji grupowej
      _pola:='';
      {? ZLEC.CHK1='T' || ZLP.SAM:=ZLEC.E_SAM; _pola+=' samochód,' ?};
      {? ZLEC.CHK2='T' || ZLP.ZLBR:=ZLEC.E_ZLBR; _pola+=' brygada,' ?};
      {? ZLEC.CHK3='T' || ZLP.PRACW:=ZLEC.E_PRACW; _pola+=' pracownik,' ?};
      {? ZLEC.CHK4='T' || ZLP.DP:=ZLEC.DPN; _pola+=' data podstawienia,' ?};
      {? ZLEC.CHK5='T' || ZLP.DW:=ZLEC.DWN; _pola+=' data wykonania,' ?};
      {? ZLEC.CHK6='T' || ZLP.ODP:=ZLEC.ODP; _pola+=' rodzaj odpadów,' ?};
      {? ZLEC.CHK7='T' || ZLP.WYS:=ZLEC.WYS; _pola+=' składowisko,' ?};
      __zlp_cq.sect_beg(ZLP.POS().UL().KDP+' '+ZLP.POS().MIA().NAZ+', '+ZLP.POS().UL().UL+' '+ZLP.POS().NR
         +', zgłoszenie wykonania '+$ZLP.DZ+'.');
      {? _pola<>''
      ||
         ZLP.put();
         __zlp_cq.add('Poprawiono pola:'+(_pola-1),1)
      ||
         __zlp_cq.add('Brak pól do poprawy',2)
      ?};
      __zlp_cq.sect_end()
   ?};

   ZLP.r_unlock()
?};
ZLEC.POP:=_pop;
''


\zle_win_edit_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Ustawia okno redakcji tabeli ZLE, wymagane pola, okna słowników
::   WE: [_a] - W-wymiana, ''-domyślnie
::       [_b] - 0/1 Zakończ
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_rodz:={? var_pres('_a')=type_of('') || _a || '' ?};
_zakoncz:={? var_pres('_b')=type_of(0) || _b || 1 ?};
_win_red:=exec('zle_win_edit','umowy_zlecenia');
{? _zakoncz
||
   _ff:="params_exec('zlp_zakoncz_red','!lum_zgl_dzgl')";
   exec('zakoncz','#window',ZLE,_win_red,1,_ff,0, exec('help_red_zakoncz','#window','G'),
      exec('text_red_zakoncz','#window','G'))
?};
exec('ok_esc','#window',ZLE,_win_red,1,,,,,exec('help_red_ok','#window','Z'),exec('text_red_ok','#window')
   ,exec('help_red_esc','#window','A'));
ZLE.win_edit(_win_red);
exec('zle_set_efld_opt','umowy_zlecenia',_win_red,_rodz,1);
exec('set_win','umowy');
~~


\zle_nex2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: dodanie naglowka zlecenia dla zlecenia redagowanego w buforze
::   WY: _wyn - ref zlecenia
::  OLD: \zle_nex2/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null();
_pom_tab:=POM.TAB;
_pom_typdok:=POM.TYPDOK;
POM.TAB:='ZLE';
POM.TYPDOK:='ZLE';

{? ZLE.KH<>null || ZLE.TYP:='Z' || ZLE.TYP:='W' ?};
ZLE.NR:=0;
_nr:=exec('numer_new','numery','PACZKA');
{? _nr>0
||
   ZLE.cntx_psh();
   ZLE.clear();
   ZLE.NR:=_nr;
   {? ZLE.add()
   ||
      exec('znak','numery','ZLE');
      _wyn:=ZLE.ref()
   ?};
   ZLE.cntx_pop()
?};

POM.TAB:=_pom_tab;
POM.TYPDOK:=_pom_typdok;
_wyn


\be_zle_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: przed redakcja pol w zleceniach
::  OLD: \be_zle_p/um_zlec2.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_afld='KH'
||
   VAR_DEL.delete('__beKh');
   __beKh:=ZLE.KH
?};
_wyn:=1;
{? ZLE.UP<>null
|| _wyn:=0
?};
_wyn


\ae_zlepo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: aktualizacja pol podczas wyswietlania okienka z planami oraz kolorowanie zrealizowanych rekordow
::  OLD: \ae_zlepo/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
" po redakcji posesji w zleceniu
  created      [2001.08.23]
  updated
  by         [Mario]
";
_wyn:=0;
{? fld
|| _wyn:=1;
   exec('zle_zm','!lum_zgl_dzgl')
?};
_wyn


\ae_zlekh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: po redakcji kontrahenta w zleceniu
::  OLD: \ae_zlekh/um_zlec2.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld=null || exec('find_sql','#table','KH','SNIP;KOD;NAZ;SKR;UL;DOM;LOKAL','','ZLE.KH','13;5;25;10;15','RED','','') ?};
{? var_pres('__beKh')>0 & __beKh<>ZLE.KH
||
   ZLP.KH_ODB:=null;
   ZLE.POS:=null;
   ZLEC.MIA:=null;
   ZLEC.UL:=null;
   ZLEC.POS_NR:='';
   {? ZLP.ZLE=ZLE.ref()
   || ZLP.NRRACH:='';
      ZLP.SKID_RB:=null()
   ?}
?};
_wyn:=exec('ae_kh','kontrahent');
{? _wyn & ZLE.POS=null() & ZLE.KH<>null()
||
   POS.index('KH');
   POS.prefix(ZLE.KH);
   {? POS.size()=1
   || POS.first();
      ZLEC.MIA:=POS.UL().MIA;
      ZLEC.UL:=POS.UL;
      ZLEC.POS_NR:=POS.NR;
      ZLE.POS:=POS.ref()
   ?}
?};

{? Plugin.runnable('ZWS_HAN_001')
|| ZLP.HAN:=Plugin.run('ZWS_HAN_001','ZLP')
|? ZLP.HAN=null
|| ZLP.HAN:=__War_f('KH_DOD','HAN',ZLE.KH)
?};

:obsługa wtyczki
Plugin.run('ZLP_EDIT_001');

_wyn


\ae_zlusl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: po redakcji rodzaju uslugi
::  OLD: \ae_zlusl/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZLP.MJ().USL<>ZLE.USL & ZLE.USL<>null() || ZLP.MJ:=null ?};
exec('zlp_umo','umowy_zlecenia');
win_disp();
1


\wz_zlp_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: wzorzec UM.KH_ODB
::  OLD: \wz_zlp_kh/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.KH:=ZLE.KH;
''


\aezlpwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: po redakcji waluty dla ZLP
::  OLD: \aezlpwal/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zlp_umo','umowy_zlecenia');
1


\po_zlp_cb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: po redakcji ZLP.CB
::  OLD: \po_zlp_cb/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zlp_umo','umowy_zlecenia');
''


\be_zlpdp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Przed redakcja ZLP.DP
::  OLD: \be_zlpdp/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
UMO.RODZZLP<>'Z' & ~ZLEC.CZY_DP


\be_zlpdw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Przed redakcja ZLP.DW
::  OLD: \be_zlpdw/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
UMO.RODZZLP<>'P' & ~ZLEC.CZY_DW


\ae_zl_mj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: po redakcji pola ZLP.MJ
::  OLD: \ae_zl_mj/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
:obsługa wtyczki
Plugin.run('ZLP_EDIT_001');

exec('zlp_umo','umowy_zlecenia');
{? ZLP.MJ().TR_RODZ().CTRL='N'
|| ZLE.btn_eopt('REDP','DZP','state=grayed');
   ZLE.btn_eopt('REDP','DZ','state=grayed')
|| ZLE.btn_eopt('REDP','DZP','state=normal');
   ZLE.btn_eopt('REDP','DZ','state=normal')
?};
win_disp();
1


\ae_zl_il
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: po redakcji pola ZLP.IL
::  OLD: \ae_zl_il/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
:obsługa wtyczki
Plugin.run('ZLP_EDIT_001');

exec('zlp_umo','umowy_zlecenia');
ZLP.KG:=exec('uz_zlp_kg','umowy_zlecenia',0,1);
win_disp();
1


\be_zlp_c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: podpowiadanie ceny jezeli nie jest jeszcze wypelniona na podstawie taryfy
::  OLD: \be_zlp_c/um_zlec2.fml
::----------------------------------------------------------------------------------------------------------------------
1


\ae_zl_mr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: po redakcji pola ZLP.M_R
::  OLD: \ae_zl_mr/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zlp_umo','umowy_zlecenia');
{? ZLP.M_R=null || ZLP.ILR:=ZLP.C_R:=0 ?};
win_disp();
1


\ae_zl_md
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: po redakcji pola ZLP.M_D
::  OLD: \ae_zl_md/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zlp_umo','umowy_zlecenia');
{? ZLP.M_D=null || ZLP.ILD:=ZLP.C_D:=0 ?};
win_disp();
1


\zle_zm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: uzupelnianie zmiennych tymczasowych - UL i MIA
::  OLD: \zle_zm/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZLE.POS<>null
|| ZLEC.MIA:=ZLE.POS().UL().MIA().ref();
   ZLEC.UL:=ZLE.POS().UL().ref();
   ZLEC.POS_S:=ZLE.POS().NR
|| ZLEC.MIA:=null;
   ZLEC.UL:=null;
   ZLEC.POS_S:=''
?};
_kol:=0;
ZLP.cntx_psh();
ZLP.index('ZLE');
ZLP.prefix(ZLE.ref());
_kol:=ZLP.size();
ZLP.cntx_pop();
_kol


\zlp_zwys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: wyswietlnie okienka na spacji
::  OLD: \zlp_zwys/um_zlec2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zle_win_edit_set','!lum_zgl_dzgl');
ZLP.ZLE();
ZLP.get();
ZLE.get();
ZLP.memo_get(,'OPIS');
ZLP.memo_get(,'NDRUK');
ZLEC.MIA:=ZLE.POS().UL().MIA;
ZLEC.UL:=ZLE.POS().UL;
ZLE.display();
''


\zlp_wycofaj_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Zgłoszenie jednorazowe - Wycofaj
::   WE: _a -  '10' - zakończenie
::             '01' - realizację
::             '11' - zakończenie i realizację
::       _b -  przetwarzanie grupy rekordów 0/1
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_zakr:=_a;

{? _zakr='00' || return() ?};

_zakr_txt:=
   {? _zakr='10' || 'zakończenie'@
   |? _zakr='01' || 'realizację'@
   |? _zakr='11' || 'zakończenie i realizację'@
   ?};
_group:=_b;

_zgl:=exec('record','#to_string',ZLP.ref());
_txt:='';
_info:=~_group;
_put:=0;

{? exec('FindAndGet','#table',ZLE,ZLP.ZLE,,"ZLE.TFAK='T'",0) & ZLP.FAKS='T'
||
   _txt:='Zgłoszenie jest zafakturowane.'@

|? ZLP.UMK_P<>null
||
   _txt:='Zgłoszenie jest wygenerowane jako koszt dodatkowy.'@

|? exec('zlp_czy_anulowane','umowy_zlecenia')
||
   _txt:='Zgłoszenie jest anulowane.'@

|? 1+_zakr='1' & (ZLP.STAT_REJ<>'Z' | (_zakr+1='0' & ZLP.SR<>'N'))
||
   _txt:=
      {? ZLP.STAT_REJ='N' || 'Zgłoszenie jest rejestrowane.'@
      |? _zakr+1='0' & ZLP.SR='Z' || 'Zgłoszenie jest zrealizowane.'
      || 'Inna przyczyna'
      ?}

|? _zakr+1='1' & ZLP.SR<>'Z'
||
   _txt:='Zgłoszenie jest niezrealizowane.'@
||
   _continue:=1;
   _tr_del:=0;
   {? 1+_zakr='1'
   ||
::    transport
      _tr_del:=1;
      _Tr_nzl:=exec('get_tr_nzl','transport_zlec',ZLP.uidref());
      _loop:=_Tr_nzl.first();
      {!
      |? _loop
      |!
         _tr_stat:=exec('FindAndGet','#table',TR_NZL,_Tr_nzl.REF,,"TR_NZL.STAT_REJ",'');
         _tr_del:=_tr_stat='N';
         _loop:=_tr_del & _Tr_nzl.next()
      !};
      {? _tr_del
      ||
         {? _Tr_nzl.first()
         ||
            _tr_del:=FUN.ask('Zgłoszenie jest powiązane z dyspozycją transportową.'
               '\nWycofanie rejestracji zgłoszenia usunie powiązaną dyspozycję transportową.'
               '\n\nCzy wycofać zgłoszenie i usunąć dyspozycję transportową?'@)
         ?}
      ||
         FUN.info('Zgłoszenie jest powiązane z dyspozycją transportową.\nNie można usunąć zgłoszenia.'@)
      ?};
      _continue:=_tr_del
   ?};
   {? _continue
   ||
      do();
      {? _tr_del
      ||
         _loop:=_Tr_nzl.first();
         {!
         |? _loop
         |!
            _continue:=exec('FindAndGet','#table',TR_NZL,_Tr_nzl.REF,,"
               exec('tr_nzl_usu','transport_zlec',1)
            ",0);
            _loop:=_continue=1 & _Tr_nzl.next()
         !}
      ?};
      _txt:='Wycofano %1 zgłoszenia.'@[_zakr_txt];
      _info:=0;
      {? 1+_zakr='1' || ZLP.STAT_REJ:='N' ?};
      {? _zakr+1='1' || ZLP.SR:='N' ?};
      exec('stanPlan','umowy_zlecenia');
      _put:=ZLP.put();
      end()
   ?}
?};

{? _txt<>''
||
   _txt:={? _put || '' || 'Wycofanie niemożliwe.'@+{? _group || ' ' || '\n' ?} ?}+_txt;
   {? _group || exec('add_kom','#message',_zgl,1,_txt) |? _info || FUN.info(_txt) ?}
?};
~~


\zlp_wycofaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Zgłoszenie jednorazowe - Wycofaj
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Sel:=ZLP.sel_aget();
{? ~_Sel.first() || _Sel.REF:=#ZLP.ref(); _Sel.add() ?};

_group:='N';
{? _Sel.first()
||
   {? _Sel.next()
   ||
      _choice:=FUN.choice('Wybierz jedną z opcji wycofania zakończenia rejestracji, realizacji zgłoszenia.'@,,
         '&Zakończenie'@,'&Realizację'@,'&Zakończenie i realizację'@);
      {? ~_choice || return(0) ?};
      _zakr:={? _choice=2 || '0' || '1' ?};
      _zakr+={? _choice=1 || '0' || '1' ?};
      _group:='T';
      exec('ini_kom','#message','Grupowe wycofaj'@)
   ||
      _zlp:=exec('record','#to_string',ZLP.ref());
      _zakr:=$(ZLP.STAT_REJ='Z');
      _zakr+=$(ZLP.SR='Z');
      {? _zakr='10'
      ||
         {? ~FUN.ask('Wycofać zakończenie rejestracji zgłoszenia %1?'@[_zlp]) || return(0) ?}

      |? _zakr='01'
      ||
         {? ~FUN.ask('Wycofać realizację zgłoszenia %1?'@[_zlp]) || return(0) ?}

      |? _zakr='11'
      ||
         _choice:=
            FUN.choice('Wybierz jedną z opcji wycofania zakończenia rejestracji, realizacji zgłoszenia %1.'@[_zlp],,
               '&Realizację'@,'&Zakończenie i realizację'@);
         {? ~_choice || return(0) ?};
         _zakr:={? _choice=1 || '0' || '1' ?};
         _zakr+='1'

      |? _zakr='00'
      ||
         FUN.info('Wycofanie niemożliwe.'@+'\n'+'Zgłoszenie %1 jest rejestrowane.'@[_zlp])
      ?}
   ?}
?};

_loop:=_Sel.first();
{!
|? _loop
|!
   {? ZLP.seek(_Sel.REF,)
   ||
      exec('zlp_wycofaj_core','!lum_zgl_dzgl',_zakr,_group='T')
   ?};
   _loop:=_Sel.next()
!};
{? _group='T'
||
   exec('end_kom','#message');
   ZLP.sel_adel()
?};
0


\zlp_www2rea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Zgłoszenie jednorazowe - Przyjmij zgłoszenie internetowe
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: DRO_TODO_AWI: \zlp_www2rea/!lum_zgl_dzgl.fml
{? _a=0 & ZLP.SR='N' & ZLP.PORT='T'
||
::   {? ZLP.HAN<>null
::   ||
      {? FUN.ask('Zgłoszenie zarejestrowane przez użytkownika portalu internetowego.\nPrzyjąć do realizacji?'@)
      ||
         ZLP.PORT:='R';
         ZLP.put()
      ?}
::   ||
::      FUN.info('Zgłoszenie zarejestrowane przez użytkownika portalu internetowego.'
::         +'\nPrzed przyjęciem do realizacji należy uzupelnić handlowca.')
::   ?}
?}


\zlp_rezyg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: rezygnacja ze zgloszenia jednorazowego
::  OLD: \zlp_rezyg/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZLP.FAKS='T'
||
   FUN.info('Zgłoszenie zostało zafakturowane.\Anulowanie niemożliwe.'@)

|? ZLP.SR='Z'
||
   FUN.info('Zgłoszenie zostało zrealizowane.\nAnulowanie niemożliwe.'@)
||
   {? exec('zlp_czy_anulowane','umowy_zlecenia')
   ||
      FUN.info('Zgłoszenie zostało już anulowane.'@)
   |? (_pow:=exec('ctrlDELdysp','transport_wspolne'); _pow<=0)
   ||
      {? ~_pow || FUN.info('Istnieją zrealizowane dyspozycje transportu.\nOperacja niemożliwa.'@) ?}
   ||
      UMO.TYP:='P';
      ZLP.cntx_psh();
      _win_edt:=ZLP.mk_edit('Anulowanie zgłoszenia jednorazowego'@,0);
      ZLP.win_efld(_win_edt,,'P_REZYG','TR','TYP',100,,,'Przyczyna anulowania'@);
      ZLP.efld_opt(_win_edt,'mark=1',,'P_REZYG');
      ZLP.win_ebtn(_win_edt,'text='+'&Zapisz'@+',align=end',"'key:F2'");
      ZLP.win_ebtn(_win_edt,'text='+'&Anuluj'@+',align=end',"'key:Esc'");
      exec('jm_kpo','jm');
      ZLP.win_edit(_win_edt);
      {? ZLP.edit("{? ZLP.P_REZYG<>null || 1 || FUN.info('Należy podać przyczynę anulowania.'@); 0 ?}")
      || exec('zlp_anuluj','umowy_zlecenia');
         ZLP.put()
      ?};
      ZLP.cntx_pop()
   ?}
?};
''


\umo_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: blank dla typu slownika dla umow i zgloszen
::  OLD: \umo_typ/um.fml
::----------------------------------------------------------------------------------------------------------------------
UMO.TYP


\zlp_mov
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: przesuwa pozycje zlecenia do innego okresu na podstawie daty DW
::   WE: jesli _a i _a=1 to akcja grupowa - brak komunikatów
::  OLD: \zlp_mov/um_zlec2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyk:=0;
_grp:=0;
_oki:=1;
_wymiana:=ZLP.WYMIANA;
{? ZLP.sel_size()>0
|| _grp:=1
|? 0 & ZLP.WYMIANA<>''
|| _oki:=0;
   FUN.info('Zgłoszenie z wymianą.\nOperacja niemożliwa.'@)
?};
{? _oki  & (_grp | (exec('czy_mod','umowy_zlecenia') & ZLP.DW=date(0,0,0)))
|| _rok:={? ST.AM<>12 || ST.AR || ST.AR+1 ?};
   _mc:={? ST.AM<>12 || ST.AM+1 || 1 ?};
   _par:=tab_tmp(,'ROK','INTEGER','Rok'@,
                  'MC','INTEGER','Miesiąc'@,
                  'OKR','STRING[1]','Zmiana parametrów pracy'@);
   _par.ROK:=_rok;
   _par.MC:=_mc;
   _okn:=_par.mk_edit('Parametry przeniesienia'@,0);
   _par.win_esep(_okn,'Nowy okres wykonania'@);
   _par.win_efld(_okn,,'ROK');
   _par.win_efld(_okn,,'MC');
   _par.win_efld(_okn,,'OKR',,,,,,,,,'check-box',,"'T'","'N'");
   _par.win_ebtn(_okn,'text='+'&Zapisz'@+',align=end',"'key:F2'");
   _par.win_ebtn(_okn,'text='+'&Anuluj'@+',align=end',"'key:Esc'");
   _par.win_edit(_okn);
   _chk_fml:="_p:=cur_tab(,1);(_p.ROK=ST.AR | _p.ROK=ST.AR+1 | _p.ROK=ST.AR-1 ) & _p.MC>0 & _p.MC<13 &
             exec('czy_z_ok','okresy',4,3,_p.ROK,_p.MC)>0";
   {? _par.edit(_chk_fml)
   ||
      {? _par.ROK<>ST.AR | _par.MC<>ST.AM
      || _dat:=date(_par.ROK,_par.MC,1);
         _okr:=_par.OKR;
         _il_tak:=0;
         _il_nie:=0;
         {?_grp
         || _sel:=ZLP.sel_aget();
            _juz:=~_sel.first()
         ||_juz:=0
         ?};
         do();
         {!
         |? ~_juz
         |! {? _grp
            || {? ZLP.seek(_sel.REF,) & exec('czy_mod','umowy_zlecenia',1) & ZLP.DW=date(0,0,0)
               || exec('zlp_kop','!lum_zgl_dzgl',_dat,,1,_wymiana);
                  _il_tak+=1
               || _il_nie+=1
               ?};
               _juz:=~_sel.next()
            || exec('zlp_kop','!lum_zgl_dzgl',_dat,,1,_wymiana,1);
               _il_tak+=1;
               _juz:=1
            ?}
         !};
         _wyk:=end();
         {? _grp & _wyk
         || {? _il_tak >0
            || FUN.info('Przeniesiono %1 pozycji zgłoszeń.'@ [$_il_tak])
            ?};
            {? _il_nie >0
            || FUN.info('Nie można przenieść %1 pozycji zgłoszeń.'@ [$_il_nie])
            ?}
         ?};
         {? -_okr='t' & _wyk & _il_tak>0
         ||
            OKR.cntx_psh();
            OKR.index('OKR');
            OKR.prefix(REF.FIRMA,_dat~1,_dat~2);
            {? OKR.first()
            ||
              _args:=__PARSES.args('OkresRok');
              _args.OBSZAR:='LUM';
              _args.AR:=_dat~1;
              _args.AM:=_dat~2;
              __PARSES.setVal('OddzialLogProd',ST.ODDZ);
              __PARSES.setVal('OkresRok',_args);
              __PARSES.setEnv('LUM_ZGL');
              ZLP.index('R');
              ZLP.prefix('N');
              exec('zlp_actions','umowy_zlecenia','WER_ZGL');
              AreaTitle.setTitle()
            ?};
            OKR.cntx_pop()
         ?}
      || undo();
         FUN.info('TO jest bieżący okres.'@)
      ?};
      exec('zlp_aktu','umowy_zlecenia')
   ?}
?};
{? _grp & _wyk
|| ZLP.sel_adel()
?};
0


\zlp_mova
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: przesuwa pozycje zlecenia do innego okresu na podstawie daty DW
::       te ktore maja zerowa date dla biezacego ograniczenia ZLP
::  OLD: \zlp_mova/um_zlec2.fml
::----------------------------------------------------------------------------------------------------------------------
_ile:=0;
:: ile pozycji przesunieto
ZLP.cntx_psh();

_rok:={? ST.AM<>12 || ST.AR || ST.AR+1 ?};
_mc:={? ST.AM<>12 || ST.AM+1 || 1 ?};

_par:=tab_tmp(,'ROK','INTEGER','Rok'@,
               'MC','INTEGER','Miesiąc'@);
_par.ROK:=_rok;
_par.MC:=_mc;
_okn:=_par.mk_edit('Parametry przeniesienia'@,0);
_par.win_esep(_okn,'Nowy okres wykonania'@);
_par.win_efld(_okn,,'ROK');
_par.win_efld(_okn,,'MC');
_par.win_ebtn(_okn,'text='+'&Zapisz'@+',align=end',"'key:F2'");
_par.win_ebtn(_okn,'text='+'&Anuluj'@+',align=end',"'key:Esc'");
_par.win_edit(_okn);

{? ZLP.first()
   & _par.edit("_p:=cur_tab(,1);(_p.ROK=ST.AR | _p.ROK=ST.AR+1 | _p.ROK=ST.AR-1 ) & _p.MC>0 & _p.MC<13 &
                exec('czy_z_ok','okresy',4,1,_p.ROK,_p.MC)")
||
   _nieprz:=tab_tmp(0, 'ZLP_REF', 'STRING[16]', 'ZLP_REF');
   echo('Przenoszenie zgłoszeń ..... Proszę czekać'@);
   do();
   _next:=0;
   {!
   |?
      {? _next
      ||
         ZLP.cntx_psh();
         {? exec('zlp_kop','!lum_zgl_dzgl',date(_par.ROK,_par.MC,1),'N',1,ZLP.WYMIANA,1)
         || _ile+=1
         || _nieprz.ZLP_REF:=$ZLP.ref();
            _nieprz.add()
         ?};
         ZLP.cntx_pop()
      ?};
      _next:=0;
      {? ZLP.first()
      ||
         {!
         |?
            ZLP.get();
            {? ZLP.DW=date(0,0,0) & ~_nieprz.find_key($ZLP.ref())
            || _next:=1
            ?};
            _next=0 & ZLP.next()
         !}
      || _next:=0
      ?};
      _next
   !};
   end();
   echo();
   FUN.info('Przeniesiono %1 pozycji zgłoszeń.'@ [$_ile])
?};
ZLP.cntx_pop();
_ile


\zlp_kop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: kopiowanie pozycji zlecenia na inny miesiac
::   WE: _a - data do przesuniecia
::      [_b]- czy przypisywac nowa date jako date wykonania
::      [_c]- czy aktualizacja uidref-ów w procesach
::      [_d] - aktualna wartość pola WYMIANA - do podmiany wskazań dla pól WYMIANA2
::      [_e] - kopia na nowy inny okres domyślnie-0-nie
::  OLD: \zlp_kop/um_zlec2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
_up_uid:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_wymiana:={? var_pres('_d')=type_of('') || _d || '' ?};
_move:={? var_pres('_e')=type_of(0) || _e || 0 ?};

_oldzlp:=ZLP.uidref();
_Tr_nzl:=exec('get_tr_nzl','transport_zlec',_oldzlp);
_newzlp:='';
_il_zlp:=ZLP.fld_num();
{? var_pres('_zlp',@)>100 || obj_del(_zlp) ?};
_zlp:=obj_new(_il_zlp);
{! _licz:=1.._il_zlp |! {? var_pres(ZLP.fld_acr(_licz),ZLP)<>36  || _zlp[_licz]:=ZLP[_licz]  ?} !};
_fak:=ZLP.FAKS;
:: obsluga memo
_memo:=ZLP.memo_get('r','OPIS');
_memo2:=ZLP.memo_get('r','OPIS_LOG');
_memo3:=ZLP.memo_get('r','NDRUK');
ZLP.cntx_psh();
:: usuniecie zlecenia dla niezafakturowanych zlecen
_wyn:=1;
{? _fak='N' || _wyn:=exec('zlp_usu','umowy_zlecenia',1,1,0,,0,{? _move || 2 || _wymiana<>'' ?}) ?};
{? _wyn
:: otwarcie zlp dla biezacej __zlt.DWN
|| exec('zle_open','open_tab',ST.ODDZ,2-$(_a~1),form(_a~2,-2));
   ZLP.clear();
   ZLP.blank();
   {! _licz:=1.._il_zlp |! {? var_pres(ZLP.fld_acr(_licz),ZLP)<>36  || ZLP[_licz]:=_zlp[_licz]  ?} !};
   _dat:=ZLP.DW;
   {? ZLP.DWA=date(0,0,0) || ZLP.DWA:=_dat ?};
   {? _b='T' || ZLP.DW:=_a ?};
   ZLP.M:=_a~2;
   echo(ZLP.ZLE().SYM+' '+#ZLP.ref);
::  ZLP.KODK:=$ZLP.tm_stamp();
   {? ZLP.add()
   || _newzlp:=ZLP.uidref();
      {? _memo.is_open || ZLP.memo_put(_memo,'OPIS') ?};
      {? _memo2.is_open || ZLP.memo_put(_memo2,'OPIS_LOG') ?};
      {? _memo3.is_open || ZLP.memo_put(_memo3,'NDRUK') ?};
      exec('zlp_put_log','umowy_zlecenia','Przeniesiono do miesiąca '+ref_name(ZLP.ref))
   ?};
:: Obsługa zaliczkek dla MPGK
   _newzlp:=ZLP.uidref();
   FAPOW.cntx_psh();
   FAPOW.index('ZLP');
   FAPOW.prefix(_oldzlp);
   {? FAPOW.first()
   ||
      {!
      |?
         FAPOW.cntx_psh();
         FAPOW.prefix();
         FAPOW.ZLP:=_newzlp;
         FAPOW.put();
         FAPOW.cntx_pop();
         FAPOW.first()
      !}
   ?};
   FAPOW.cntx_pop();

   exec('zle_open','open_tab',ST.ODDZ,2-$(ST.AR),form(ST.AM,-2));
   {? _fak='T'
   ||
      {? ZLP.seek(_oldzlp)
      ||
         ZLP.T:='N';
         ZLP.FAKS:='N';
         ZLP.FAP:=ZLP.FAPU:=null;
         ZLP.F:='N';
         ZLP.put();
         _wyn:=exec('zlp_usu','umowy_zlecenia',1,1,0,,0)
      ?}
   ?}
?};
ZLP.cntx_pop();
{? _wyn & _up_uid & _oldzlp<>_newzlp & _newzlp<>'' || exec('uidref_update','#b__box',_oldzlp,_newzlp) ?};
{? _wyn & _oldzlp<>_newzlp & _newzlp<>'' || exec('update_dok_uidref','transport_zlec',_oldzlp,_newzlp,_Tr_nzl,1) ?};
{? _wyn & _oldzlp<>_newzlp & _wymiana<>'' || exec('aktWymien','umowy_zlecenia',_newzlp,_wymiana,_oldzlp=_wymiana) ?};
_wyn


\zlp_copy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
::   WE: _a = 0 - Kopia, 1 - Wymiana, 2 - MultiWymiana
::       [_b] - 0/1 - dialogowo/bezdialogowo przy _a=1
:: OPIS: kopiowanie ZLP
::  OLD: \zlp_copy/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1        || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 & _a=1 || {? type_of(_b)<>1 || _b:=0 ?} || _b:=0 ?};
_tr:='';
{? _a=0
|| _tr:='Kopiować zgłoszenie?'@;
   _war:="1";
   __spr:="1"
|? _a=1
|| _tr:='Utworzyć zgłoszenie z wymianą?'@;
   _war:="UMC.win_edit('WYM'); UMC.edit(__spr)";
   __spr:="_w:=__CHK.record2(UMC,'DWYM','Data zgłoszenia wymiany','D','Preferowana data wymiany');
           {? _w='' & (ST.AR<>UMC.DWYM~1 | ST.AM<>UMC.DWYM~2)
           || FUN.info('Data zgłoszenia wymiany musi być z bieżacego okresu.'@);
              _w:='DWYM'
           ?};
           {? _w='' & UMC.DWYM<date()
           || _w:='DWYM';
              FUN.info('Podana data zgłoszenia wymiany jest mniejsza od bieżącej.'@)
           ?};
           _w"
|? _a=2
|| _tr:='Utworzyć zgłoszenie z wielokrotną wymianą?'@;
   _war:="1";
   __spr:="1"
?};
::{? exec('ae_kh','kontrahent',,ZLP.KH) & FUN.ask(_tr) & _war()
{? _tr<>'' & exec('ae_kh','kontrahent',,ZLP.KH) & (_b | FUN.ask(_tr))
|| {? _a=1
   || exec('zlp_copy_wymiana','!lum_zgl_dzgl',ZLP.DZ,ZLP.DKP)
   |? _a=2
   || UMC.DWYM:={? ZLP.DP<>date(0,0,0) || ZLP.DP || ZLP.DZP ?}+1;
      _tab:=tab_tmp(1,'DWYM','DATE','','DAY','STRING[12]','');
      _sel:=_tab.mk_sel('Harmonogram wielokrotnej wymiany'@,'P',,'#multiwymien',,,,,'U');
      _tab.win_fld(_sel,,'DWYM',,,10,,0,'Data wymiany');
      _tab.win_fld(_sel,,'DAY',,,10,,1,'Dzień'@);
      _tab.win_act(_sel,1,'Dołącz');
      _tab.win_act(_sel,,'Dołącz');
      _tab.win_act(_sel,,'Popraw',,,,,,1);
      _tab.win_act(_sel,,'Usuń');
      _gen:="_tab:=cur_tab();
             UMC.win_edit('WYMIANA');
             UMC.D1:=UMC.D2:=UMC.D3:=UMC.D4:=UMC.D5:=UMC.D6:=UMC.D7:='N'; UMC.ILW:=0;
             {? UMC.edit(\"_res:='';
                           {? UMC.ILW<=0
                           || FUN.info('Podaj ilość tygodni.'@);
                              _res:='ILW'
                           |? ~((UMC.D1+UMC.D2+UMC.D3+UMC.D4+UMC.D5+UMC.D6+UMC.D7)*'T')
                           || FUN.info('Należy wybrać choć jeden dzień.'@);
                              _res:='D1'
                           ?};
                           _res\")
             || _nr:=UMC.DWYM~4; _dod:=obj_new(7); {! _ii:=1..7 |! _dod[_ii]:=0 !};
                {! _ii:=1..UMC.ILW
                |! {! _jj:=1..7
                   |! {? ($('UMC.D%1'[$_jj]))()='T'
                      || {? _ii=1
                         || _dod[_jj]:=(_jj-_nr)+{? _nr<_jj ||0 || 7 ?}
                         || _dod[_jj]+=7
                         ?};
                         _dat:=UMC.DWYM+_dod[_jj];
                         _tab.prefix();
                         {? ~_tab.find_key(_dat)
                         || _tab.blank();
                            _tab.DWYM:=_dat;
                            _tab.DAY:=(_opi:=form(_tab.DWYM,,7); _wsk:=_opi*','; (_wsk-1)+_opi);
                            _tab.add(1)
                         ?}
                      ?}
                   !}
                !}
             ?};
             obj_del(_tab)";
      _tab.win_act(_sel,1,'Formuła','Generuj'@@,,,,_gen,1);
      _tab.win_act(_sel,,'Formuła','Generuj'@@,,,,_gen);
      _tab.win_act(_sel,,'Formuła','Akceptuj'@@,,,,"sel_exit()");
      _tab.win_act(_sel,,'Kolejność');
      _tab.win_act(_sel,,'Szukaj');
      _chk:="_tab:=cur_tab();
             _res:='';
             {? _tab.DWYM=date(0,0,0)
             || FUN.info('Data nie może być zerowa'@); _res:='DWYM'
             |? _tab.DWYM<UMC.DWYM
             || FUN.info('Data nie może być mniejsza od daty: %1'@[form(UMC.DWYM)]); _tab.DWYM:=UMC.DWYM; _res:='DWYM'
             ?};
             {? _res=''
             || _dat:=_tab.DWYM;
                _ref:={? (1+menu_txt())='P' || _tab.ref() || null() ?};
                _tab.cntx_psh();
                _tab.prefix();
                {? _tab.find_key(_dat) & (_ref=null() | _ref<>_tab.ref())
                || FUN.info('Wprowadzono już datę wymiany: %1'@[form(_dat)]); _res:='DWYM'
                ?};
                _tab.cntx_pop()
             ?};
             _tab.DAY:={? _res='' || _opi:=form(_tab.DWYM,,7); _wsk:=_opi*','; (_wsk-1)+_opi || '' ?};
             obj_del(_tab);
             _res";
      _tab.win_act(_sel,1,'Rekord',,,,,_chk);
      _tab.win_act(_sel,,'Rekord',,,,,_chk);
      _tab.win_sel(_sel);
      {? _tab.select() & _tab.first()
      || {!
         |? exec('zlp_copy_wymiana','!lum_zgl_dzgl',_tab.DWYM,_tab.DWYM);
            _tab.next()
         !}
      ?};
      obj_del(_tab)
   || exec('zlp_copy_kopiuj','!lum_zgl_dzgl')
   ?}
?};
''


\zlp_bigbb_be_ed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MaX [MPGK_1240]
:: OPIS: Formułą uzupełniająca dane przed dodaniem Zlecenia
::   WE:
::   WY:
::  OLD: \zlp_bigbb_be_ed/new_um.fml
::----------------------------------------------------------------------------------------------------------------------
ZLE.KH:=UPM.UM().KH;
ZLE.POS:=UPM.POS;
ZLEC.POS:=UPM.POS;
ZLEC.UL:=UPM.POS().UL;
ZLEC.MIA:=UPM.POS().MIA;
ZLEC.POS_NR:=UPM.POS().NR;

_m_kod:=exec('get','#params',100121,type_of(''));
_m_il:=exec('get','#params',100122,type_of(0));
{? _m_il<=0
|| _m_il:=1
?};
{? _m_kod<>''
|| M.cntx_psh();
   M.index('MATKTM');
   M.prefix(_m_kod,_m_kod);
   {? M.first() & (ZLE.USL=null() | M.USL=ZLE.USL)
   || ZLP.MJ:=M.ref()
   ?};
   M.cntx_pop();
   exec('ae_zl_mj','!lum_zgl_dzgl')
?};
ZLP.IL:=_m_il;
ZLP.FP:='N';
ZLP.NK:='J';
ZLP.F:='N';
ZLP.NOMAIL:='N';
ZLP.KAUCJA:='T';
ZLP.SPZLEC:='Umowa miejska';

_ctrlslu:=exec('get','#params',100183,2);
_slu_ref:=
   {? _ctrlslu<>''
   || exec('FindInSet','#table','SLU','NAZ',_ctrlslu,,,1,,null())
   || null()
   ?};
{? _slu_ref<>null
|| _pow_ref:=exec('get','#params',100189,2);
   {? _pow_ref<>''
   || ZLP.POW:=exec('FindInSet','#table','SLO','SL',_pow_ref,_slu_ref,,1,,null())
   ?}
?};
''


\zlp_fakturuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Zgłoszenie jednorazowe - Fakturuj
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_z_ok','okresy',-2)
||
   _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='LSP_FAK_DRFP';
   _params.AKCJA:='Dołącz';
   _params.PROC_START:='T';

   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZLP',ZLP.ref());

   exec('mp_run','#b__box',_params)
?};

1


\zlp_faks_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Zgłoszenie jednorazowe - Usuń fakturę
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ZLP.FAP().FAKS<>null()
||
   ZLP.FAP().FAKS()

|? ZLP.FAPU().FAKS<>null()
||
   ZLP.FAP().FAKS()
||
   FUN.info('Pozycja jest niepowiązana z fakturą.'@);
   return()
?};
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LSP_FAK_DRFP';
_params.UIDREF:=FAKS.uidref();
_params.GRUPA:='N';
_params.AKCJA:='Usuń';

exec('mp_run','#b__box',_params)


\zlp_zaliczkuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.22]
:: OPIS: Zgłoszenie jednorazowe - Zaliczkuj
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LSP_FAK_DRZA';
_params.AKCJA:='Dołącz';
_params.PROC_START:='T';

_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZLP',ZLP.ref());
:: powiązana zaliczka
_zal_pow:=null();
FAPOW.cntx_psh();
FAPOW.index('ZLP');
FAPOW.prefix(ZLP.uidref());
{? FAPOW.first()
||
   _zal_pow:=exec('FindAndGet','#table',FAKS,FAPOW.FAKS,,,null())
?};
FAPOW.cntx_pop();
{? _zal_pow<>null()
||
   _params.UIDREF:=exec('FindAndGet','#table',FAKS,$_zal_pow,,"FAKS.uidref()",'');
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FAKS',_zal_pow)
?};

exec('mp_run','#b__box',_params)


\zlp_copy_kopiuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.22]
:: OPIS: Kopia zgłoszenia jednorazowego (ZLP)
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LUM_ZGL_DZGL';
_params.AKCJA:='Kopiuj';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZLP0',ZLP.ref());

exec('mp_run','#b__box',_params)


\zlp_copy_wymiana
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.22]
:: OPIS: Kopia zgłoszenia jednorazowego (ZLP)
::   WE : [_a] data wymiany
::        [_b] preferowana data wykonania
::----------------------------------------------------------------------------------------------------------------------
_zlp:=ZLP.ref();
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LUM_ZGL_DZGL';
_params.AKCJA:='Wymiana';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZLP0',ZLP.ref());
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'DWYM',_a);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'D',_b);

exec('mp_run','#b__box',_params);
~~


\zlp_copy_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.22]
:: OPIS: Kopia zgłoszenia jednorazowego (ZLP)
::   WE: [_a] = 0 - Kopia, 1 - Wymiana
::       [_b] - data wymiany
::       [_c] - data wykonania (preferowana)
::----------------------------------------------------------------------------------------------------------------------
{? _>=1
|| {? type_of(_a)<>1
   || _a:=0
   ?}
||
   _a:=0
?};
_uidref:=ZLP.uidref();
{? _uidref='' || return(~~) ?};
{? _a=1
|| ZLP.RODZ:='W';
   ZLP.DZ:=_b;
   ZLP.DKP:=_c;
   ZLP.WYMIANA:=_uidref;
   ZLP.put()
?};
ZLP.DP:=ZLP.DW:=date(0,0,0);
{? _a=1
|| ZLP.RODZ:='P';
   ZLP.DZ:=ZLP.DKP:=date(0,0,0);
   ZLP.DZP:=_b;
   ZLP.DK:=_c;
   ZLP.POJ:=null;
   ZLP.WYMIANA:='';
   ZLP.WYMIANA2:=_uidref
|| ZLP.WYMIANA:=''
?};
_memo:=ZLP.memo_get('r','OPIS');
_memo1:=ZLP.memo_get('r','NDRUK');
_memo2:=ZLP.memo_get('r','OPIS_LOG');
::  realizacja
ZLP.SR:='N';
ZLP.STAT_REJ:={? ~_a || 'N' || 'Z' ?};
exec('stanPlan','umowy_zlecenia');
ZLP.TEN:='';
:: karty przekazania odpadow
ZLP.KPOZ:='';
ZLP.KPO:=null;
:: www
ZLP.USER:='';
ZLP.PORT:='N';
:: trasowka
ZLP.T:='N';
:: faktura
ZLP.FAKS:='N';
ZLP.GPZO:='N';
ZLP.NOMAIL:='T';
ZLP.PLTRA:=null;
ZLP.KODK:='';
ZLP.FAP:=ZLP.FAPU:=null;
:: zarejestrowal
ZLP.DZWKAU:=date(0,0,0);
ZLP.USERS:=exec('name','users');
ZLP.DR:=date();
ZLP.CR:=time();
ZLP.REA:='';
ZLP.SENT_KPO:='N';
ZLP.KODK:=$ZLP.tm_stamp();
{? ~_a
|| ZLP.WYMIANA2:='';
   {? ZLP.SP='T' || ZLP.RODZ:='P' || ZLP.RODZ:='Z' ?}
?};
{? ZLP.add()
|| {? _memo.is_open || ZLP.memo_put(_memo,'OPIS') ?};
   {? _memo1.is_open || ZLP.memo_put(_memo1,'NDRUK') ?};
   {? _memo2.is_open || ZLP.memo_put(_memo2,'OPIS_LOG') ?}
?};
~~


\zlp_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: zgłoszenie - Opis
::   WE:
::   WY:
::  OLD: \zlp_uwag/um_zlec.fml
::----------------------------------------------------------------------------------------------------------------------
ZLP.memo_get(,'OPIS');
{? ZLP.memo_edi(,'OPIS')
|| ZLP.memo_put(,'OPIS')
?};
''


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Formuła ustala PARSES
::   WE: UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_krefs:=_mp.getRefs();
{? var_pres('[1]',_krefs)<>type_of(~~) & ref_tab(_krefs[1])=ZLP
|| _msk:=ref_name(_krefs[1]);
   __PARSES.setVal('OddzialLogProd',1+(3-_msk));
   _args:=__PARSES.args('OkresRok');
   _args.OBSZAR:='LUM';
   _args.AR:=#(2+(4-_msk))+2000;
   _args.AM:=#(2+(6-_msk));
   __PARSES.setVal('OkresRok',_args)
?};
1

:Sign Version 2.0 jowisz:1045 2023/11/28 08:30:36 611682a26148a1e10f6d5bf48c31c4a897947d575b5eee2726fa933431ad4cecdf05581bd1119211e47b26389ac850311f4448501562fd61bb7131ada46d692e9d6574001acfa95ff6f7cb0266c018f3d5c7510ac7e8e8ec4bdd6328333fc3368a2ad5820c27e07ef68912064095a9e01c31d3b38d5c349b8088273dc295572f
