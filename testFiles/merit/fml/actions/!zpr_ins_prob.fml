:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zpr_ins_prob.fml
:: Utworzony: 17.09.2018
:: Autor: WH
::======================================================================================================================
:: Zawartość: Formuły czynności ZPR_IN_PROB
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Czynność przeglądania problemów w procesach (ZPR_IN_PROB) - formuła główna
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

:: WŁAŚCIWOŚCI CZYNNOŚCI
::# properties=SERVICE,GRP_FIRM
::# access=exec('access','!zpr_ins_prob')

:: PARAMETRY WE:
::# kind=WE, symbol=USERS, type=_USERS, name=Użytkownik, required=N
{? var_pres('USERS',_in)<>type_of(~~) & var_pres('USERS',_in)<>type_of(null()) || return() ?};
{? var_pres('USERS',_in)=type_of(~~) || _in.USERS:=null() ?};

::# kind=WE, symbol=USERS_SQL, type=STRING, name=Użytkownik (SQL ref), required=N
{? var_pres('USERS_SQL',_in)<>type_of(~~) & var_pres('USERS_SQL',_in)<>type_of('') || return() ?};
{? var_pres('USERS_SQL',_in)=type_of(~~) || _in.USERS_SQL:='' ?};

:: PARAMETRY WY:
::# kind=WY, symbol=IL, type=NUMBER, name=Ilość procesów z problemami, required=N


B_PREL.cntx_psh();
BI_PROC.cntx_psh();
BI_TODO.cntx_psh();
BI_TODO.use('bi_t____');

BI_PROC.use('bi_p____');

BI_PROB.cntx_psh();

_users:=null();
{? _in.USERS<>null()
|| _users:=_in.USERS
?};
{? _users=null() & _in.USERS_SQL<>''
|| _users:=exec('FindAndGet','#table',USERS,_in.USERS_SQL,,,null())
?};

_own:=1;
{? _users=null()
|| _own:=0
?};

_count:=0;
_done:=1;
{? _mp.isService()
|| _count:=exec('count_last','!zpr_ins_prob',_users,1)
|| _count:=exec('read','!zpr_ins_prob',_users);
   {? _count>0
   || _select:=exec('select_all','#bi_inst',_own,_users,'T',,0);
      {? _select=0
      || _done:=0
      ?}
   || FUN.emsg('Brak problemów do wyświetlenia od czasu ostatniej analizy.'@)
   ?}
?};

_out.IL:=_count;

BI_PROB.cntx_pop();

_mp.save(,_out);
{? _done>0
|| _mp.done()
?};
BI_PROC.cntx_pop();
BI_TODO.cntx_pop();
B_PREL.cntx_pop();
~~


\access
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Formuła na uprawnienia
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_user:=params_get().user;
_mp:=params_get().mp;
_result:=1;
_can_continue:=1;
{? var_pres('USERS',_in)=type_of(~~) || _in.USERS:=null() ?};
{? var_pres('USERS_SQL',_in)=type_of(~~) || _in.USERS_SQL:='' ?};

_users:=null();
{? _in.USERS<>null()
|| _users:=_in.USERS
?};
{? _users=null() & _in.USERS_SQL<>''
|| _users:=exec('FindAndGet','#table',USERS,_in.USERS_SQL,,,null())
?};
{? _users<>null()
|| {? _user<>_users
   || _result:=0
   ?}
?};
_result


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Formuła na opis TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_desc:='';
_in:=_mp.load(exec('kind_in','#b_port'));
{? var_pres('USERS',_in)=type_of(~~) || _in.USERS:=null() ?};
{? var_pres('USERS_SQL',_in)=type_of(~~) || _in.USERS_SQL:='' ?};

_users:=null();
{? _in.USERS<>null()
|| _users:=_in.USERS
?};
{? _users=null() & _in.USERS_SQL<>''
|| _users:=exec('FindAndGet','#table',USERS,_in.USERS_SQL,,,null())
?};
_own:=1;
{? _users=null()
|| _own:=0
?};
_count_last:=exec('read','!zpr_ins_prob',_users);
_count_all:=exec('count_all','!zpr_ins_prob',_users);
{? _own>0
|| _desc:='Przejrzyj problemy w procesach własnych. Liczba procesów z problemami od czasu ostatniej analizy: %1. Wszystkich: %2'@@[$_count_last,$_count_all]
|| _desc:='Przejrzyj problemy we wszystkich procesach. Liczba procesów z problemami od czasu ostatniej analizy: %1. Wszystkich: %2'@@[$_count_last,$_count_all]
?};
_desc


\count_last
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Zlicza ile nowych problemowych procesów pojawiło się od ostatniego momentu analizy
::   WE: _a - USERS.ref() lub null()
::       _b - INTEGER - 0/1 - czy zapisywać w tabeli BI_PROB wynik analizy
::   WY: REAL - liczba procesów
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_users:=_a;
_save:=_b;

_result:=0;

_tm_start:=0;
_start_analize:=BI_PROB.tm_stamp();

_kind:='';
{? _users<>null()
|| _kind:='O'
|| _kind:='A'
?};
BI_PROC.cntx_psh();
BI_PROC.use('bi_p____');
BI_MSG.cntx_psh();
BI_MSG.use('bi_m____');
BI_PROB.cntx_psh();
BI_PROB.index('FIRMA');

_new:=1;
{? _kind='A'
|| BI_PROB.prefix(REF.FIRMA,_kind)
|? _kind='O'
|| BI_PROB.prefix(REF.FIRMA,_kind,_users)
?};

{? BI_PROB.first()
|| _tm_start:=BI_PROB.TM_STAMP;
   _new:=0
?};


{? _tm_start>0
||
   _bi_proc:=tab_tmp(1,
:: 'POLE','TYP','Nazwa w oknie',
      'REF','STRING[16]','SQL ref'
   );

:: Znalazłem moment startu poprzedniej analizy, szukam BI_MSG z czasem zgłoszenia
:: problemu większym niż czas ostateniej analizy
   {? _kind='A'
   || BI_MSG.index('PROBALL');
      BI_MSG.prefix(REF.FIRMA,'T')
   |? _kind='O'
   || BI_MSG.index('PROBOWN');
      BI_MSG.prefix(REF.FIRMA,_users,'T')
   ?};

   {? BI_MSG.find_le(_tm_start)
   || {!
      |?
         {? BI_MSG.TM_ERR>=_tm_start
         || _bi_proc.prefix($BI_MSG.BI_PROC);
            {? _bi_proc.first()=0
            || _bi_proc.blank();
               _bi_proc.REF:=$BI_MSG.BI_PROC;
               _bi_proc.add()
            ?}
         ?};
         BI_MSG.next()
      !}
   ?};
   _bi_proc.prefix();
   _result:=_bi_proc.size()
||
   {? _kind='A'
   || BI_PROC.index('PROB_ALL');
      BI_PROC.prefix(REF.FIRMA,'T')
   |? _kind='O'
   || BI_PROC.index('PROB_OWN');
      BI_PROC.prefix(REF.FIRMA,_users,'T')
   ?};
   _result:=BI_PROC.size()
?};

{? _save>0
|| {? _new>0
   ||
      BI_PROB.blank();
      BI_PROB.KIND:=_kind;
      BI_PROB.FIRMA:=REF.FIRMA;
      BI_PROB.USERS:=_users;
      BI_PROB.NUM:=_result;
      BI_PROB.TM_STAMP:=_start_analize;
      BI_PROB.add()
   || BI_PROB.NUM:=_result;
      BI_PROB.TM_STAMP:=_start_analize;
      BI_PROB.put()
   ?}
?};

BI_PROC.cntx_pop();
BI_PROB.cntx_pop();
BI_MSG.cntx_pop();
_result


\count_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Zlicza ile jest wszystkich problemów
::   WE: _a - USERS.ref lub null
::   WY:
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_users:=_a;

_own:=1;
{? _users=null()
|| _own:=0
?};

_result:=0;

BI_PROC.cntx_psh();
{? _own=0
|| BI_PROC.index('PROB_ALL');
   BI_PROC.prefix(REF.FIRMA,'T');
   _result:=BI_PROC.size()
|? _own>0
|| BI_PROC.index('PROB_OWN');
   BI_PROC.prefix(REF.FIRMA,_users,'T');
   _result:=BI_PROC.size()
?};
BI_PROC.cntx_pop();
_result


\read
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Odczytuje liczbę problemów z tabeli BI_PROB
::   WE: _a - USERS.ref - użytkownik lub null
::   WY: REAL - liczba problemów
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_users:=_a;

_own:=1;
_result:=0;
{? _users=null()
|| _own:=0
?};

BI_PROB.cntx_psh();
BI_PROB.index('FIRMA');
{? _own>0
|| BI_PROB.prefix(REF.FIRMA,'O',_users);
   {? BI_PROB.first()
   || _result:=BI_PROB.NUM
   ?}
|| BI_PROB.prefix(REF.FIRMA,'A');
   {? BI_PROB.first()
   || _result:=BI_PROB.NUM
   ?}
?};
BI_PROB.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:40 b2b8aa3137c0a486333192b05b631552b3dc174e5464d16a6791c011618e66fe8253afb6463a9dbb0fb87d52d6cdf70b30cece20e25fce0cea0fa5b3747e72a985fd89b43b227ea00ceca18e50da58f84758561269176dca8ccbab6a86fcf39f1949992ebfcd0b55e096706b6b5b2266c9889a3bc5859c9e3dc266dbcfa7a74e
