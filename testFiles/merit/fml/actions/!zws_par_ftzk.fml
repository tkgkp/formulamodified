:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: !zws_par_ftzk.fml [17.00]
:: Utworzony: 2015/09/29
:: Autor: PJ
::======================================================================================================================
:: Zawartosc: Formuły czynności definiowania zestawów kont kosztowych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Zestawy kont kosztowych
::   WE: _a - [obj_new] - parametry wejsciowe czynnosci
::       _b - [obj_new] - parametry wewnetrzne czynnosci
::       _c - [obj_new] - parametry wyjsciowe czynnosci
::       _d - obiekt odpowiedzialny za obsluge procesu
::----------------------------------------------------------------------------------------------------------------------
exec('zestawy','!zws_par_ftzk');
~~


\zestawy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Zestawy kont kosztowych
::----------------------------------------------------------------------------------------------------------------------
BPMN.KK_DOM:='FST';
EDIT_ES.RODZAJ:='';
exec('init','fst');
ZSKON.win_sel('ZSKON_GR');
ZSKON.select();
ROZNE.ROKKON:=SSTALE.AR:=null;
BPMN.KK_DOM:=''


\kkosz_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MG [8.70]
:: OPIS: Dodanie nowego konta do zestawu kont kosztowych
::  OLD: \newkkosz/konta_kk.fml
::----------------------------------------------------------------------------------------------------------------------
KKOSZ.blank();
KKOSZ.win_edit('KKOSZRED');
{? KKOSZ.edit("exec('chk_kkosz','!zws_par_ftzk',0)")
|| KKOSZ.add()
?}


\kkosz_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Edycja konta z zestawu kont kosztowych
::----------------------------------------------------------------------------------------------------------------------
{? KKOSZ.r_lock(1,1,1)
|| KKOSZ.win_edit('KKOSZRED');
   {? KKOSZ.edit("exec('chk_kkosz','!zws_par_ftzk',1)")
   || KKOSZ.put()
   ?};
   KKOSZ.r_unlock()
|| FUN.emsg('Konto kosztowe zablokowane przez innego użytkownika.'@)
?}


\chk_kkosz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2011]
:: OPIS: Formula walidator dla KKOSZ
::   WE: [_a] - jeżeli jest i jest = 1 to dla akcji Popraw, jeżeli nie ma lub = 0 to dla Dołącz
::   WY: '' lub akronim pola do ktorego ma wrocic edycja
::  OLD: \chk_kkosz/konta_kk.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
_wy:=__CHK.record(KKOSZ,,'KONTO');
{? _wy=''
|| _ref:=KKOSZ.ref();
   _konto:=KKOSZ.KONTO().SYM;
   _procent:=KKOSZ.PR;
   KKOSZ.cntx_psh();
   {? KKOSZ.first()
   || {! |?
         {? KKOSZ.KONTO().SYM=_konto & (_a=0 | KKOSZ.ref()<>_ref) || _wy:='KK' ?};
         _wy='' & KKOSZ.next()
      !}
   ?};
   KKOSZ.cntx_pop();
   {? _wy<>'' || FUN.emsg('Wskazane konto już istnieje w zestawie.'@) ?}
?};
{? _wy=''
|| _PROCENT:=0;
   KKOSZ.cntx_psh();
   KKOSZ.index('KONTO');
   KKOSZ.prefix(ZSKON.ref());
   {? KKOSZ.first()
   || {! |?
         {? _a=0 | KKOSZ.ref()<>_ref
         || _PROCENT+=KKOSZ.PR
         ?};
         KKOSZ.next()
      !}
   ?};
   KKOSZ.cntx_pop();
   {? _PROCENT$2+_procent>100
   || FUN.emsg('Suma udziałów w procentach nie może przekroczyć 100.'@);
      _wy:='PR'
   ?}
?};
_wy


\kkosz_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Weryfikacja przed usunięciem konta kosztowego z zestawu
::----------------------------------------------------------------------------------------------------------------------
_wynik:=0;
SRSR.cntx_psh();
SRST.cntx_psh();
SRZF.cntx_psh();
OKRO_F.cntx_psh();

{? SRSR.name()<>'srsrr'+REF.FIRMA().SYMBOL || exec('maski','srodobj') ?};

{? KKOSZ.ZESTAW().RODZ='P'
|| SRSR.index('KONPOD');
   SRST.index('KONTAP');
   SRZF.index('KONPOD')
|? KKOSZ.ZESTAW().RODZ='F'
|| SRSR.index('KONFIN');
   SRST.index('KONTAF');
   SRZF.index('KONFIN')
|? KKOSZ.ZESTAW().RODZ='D'
|| SRSR.index('KONDOD');
   SRST.index('KONTAD');
   SRZF.index('KONDOD')
?};
SRSR.prefix(ZSKON.ref());
_size:=SRSR.size();
{? _size=0
|| OKRO_F.prefix();
   {? OKRO_F.first()
   || {! |?
         SRST.prefix(OKRO_F.ref(),KKOSZ.ZESTAW);
         _size:=SRST.size();
         _size=0 & OKRO_F.next()
      !}
   ?}
?};
{? _size=0
|| SRZF.prefix(ZSKON.ref());
   _size:=SRZF.size()
?};

{? KKOSZ.r_lock(1,1,1)
|| {? _size=0
   || {? FUN.ask('Usunąć konto kosztowe: %1 z zestawu: %2?'@[KKOSZ.KONTO().SYM,ZSKON.KOD])
      || _wynik:=1
      ?}
   || {? FUN.ask('Modyfikowany zestaw kont jest przypisany\n'
                +'do co najmniej jednego środka. Usunąć?'@)
      || _wynik:=1
      ?}
   ?};
   KKOSZ.r_unlock()
|| FUN.emsg('Konto kosztowe zablokowane przez innego użytkownika.'@)
?};

OKRO_F.cntx_pop();
SRZF.cntx_pop();
SRST.cntx_pop();
SRSR.cntx_pop();
{? _wynik || KKOSZ.del() ?}


\default_test
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MG  [8.70]
:: OPIS: Formula sprawdza powiazania usuwanego zestawu kont z baza DEFAULT
::  OLD: \deafult/konta_kk.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:=0;
DEFAULT.cntx_psh();
DEFAULT.index('DEFAULO');
DEFAULT.prefix();
{? DEFAULT.first()
|| {! |? {? ZSKON.RODZ='P'
         || {? DEFAULT.KONPOD=ZSKON.ref() || _wynik:=1 ?}
         |? ZSKON.RODZ='F'
         || {? DEFAULT.KONFIN=ZSKON.ref() || _wynik:=1 ?}
         |? ZSKON.RODZ='D'
         || {? DEFAULT.KONDOD=ZSKON.ref() || _wynik:=1 ?}
         ?};
         {? _wynik=0 || DEFAULT.next() || 0 ?}
   !}
?};
DEFAULT.cntx_pop();
_wynik


\srsr_test
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MG  [8.70]
:: OPIS: Formula sprawdza powiazania usuwanego zestawu z baza SRSR (środki trwałe)
::  OLD: \sprsrod/konta_kk.fml
::----------------------------------------------------------------------------------------------------------------------
SRSR.cntx_psh();
_firma:=ZSKON.FIRMA().SYMBOL;
_srsr:=SRSR.names();
_wynik:=0;
{? _srsr.first()
|| {! |?
      {? _srsr.NAME+3=_firma
      || SRSR.use(_srsr.NAME);
         {? ZSKON.RODZ='P' || SRSR.index('KONPOD')
         |? ZSKON.RODZ='F' || SRSR.index('KONFIN')
         |? ZSKON.RODZ='D' || SRSR.index('KONDOD')
         ?};
         SRSR.prefix(ZSKON.ref());
         {? SRSR.first() || _wynik:=1 ?}
      ?};
      _wynik=0 & _srsr.next()
   !}
?};
SRSR.cntx_pop();
_wynik


\srdo_test
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MG  [8.70]
:: OPIS: Formula sprawdza powiazania zestawu z baza SRDO (dokumenty)
::  OLD: \sprzmia/konta_kk.fml
::----------------------------------------------------------------------------------------------------------------------
SRDO.cntx_psh();
_firma:=ZSKON.FIRMA().SYMBOL;
_srdo:=SRDO.names();
_wynik:=0;
{? _srdo.first()
|| {! |?
      {? _srdo.NAME+3=_firma
      || SRDO.use(_srdo.NAME);
         {? ZSKON.RODZ='P' || SRDO.index('KONPOD')
         |? ZSKON.RODZ='F' || SRDO.index('KONFIN')
         |? ZSKON.RODZ='D' || SRDO.index('KONDOD')
         ?};
         SRDO.prefix(ZSKON.ref());
         {? SRDO.first() || _wynik:=1 ?}
      ?};
      _wynik=0 & _srdo.next()
   !}
?};
SRDO.cntx_pop();
_wynik


\srzd_test
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Formuła sprawdza powiązania usuwanego zestawu z bazą SRZD (źródła finansowania)
::----------------------------------------------------------------------------------------------------------------------
:: dla masek planów amortyzacji nie sprawdza źródeł finansowania
_maska:=1+(SRZD.name()+4);
{? _maska<>'r' & _maska<>'_' || return(0) ?};

{? SRZD.name()<>'srzd'+'r'+REF.FIRMA().SYMBOL
|| SRZD.use('srzd'+'r'+REF.FIRMA().SYMBOL)
?};
_wynik:=0;
SRZD.cntx_psh();
{? ZSKON.RODZ='P'
|| SRZD.index('KONPOD')
|? ZSKON.RODZ='F'
|| SRZD.index('KONFIN')
|? ZSKON.RODZ='D'
|| SRZD.index('KONDOD')
?};
SRZD.prefix(ZSKON.ref());
{? SRZD.first() || _wynik:=1 ?};
SRZD.cntx_pop();
_wynik


\srzf_test
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Formuła sprawdza powiązania usuwanego zestawu z bazą SRZF (dofinansowania)
::----------------------------------------------------------------------------------------------------------------------
:: dla masek planów amortyzacji nie sprawdza dofinansowań
_maska:=1+(SRZF.name()+4);
{? _maska<>'r' & _maska<>'_' || return(0) ?};

{? SRZF.name()<>'srzf'+'r'+REF.FIRMA().SYMBOL
|| SRZF.use('srzf'+'r'+REF.FIRMA().SYMBOL)
?};
_wynik:=0;
SRZF.cntx_psh();
{? ZSKON.RODZ='P'
|| SRZF.index('KONPOD')
|? ZSKON.RODZ='F'
|| SRZF.index('KONFIN')
|? ZSKON.RODZ='D'
|| SRZF.index('KONDOD')
?};
SRZF.prefix(ZSKON.ref());
{? SRZF.first() || _wynik:=1 ?};
SRZF.cntx_pop();
_wynik


\zskon_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MG [8.70]
:: OPIS: Formula do usuwania zestawow kont kosztowych
::       sprawdza powiazania usuwanego zestawu z bazami
::       DEFAULT, SROD oraz ZMIA
::  OLD: \delzskon/konta_kk.fml
::----------------------------------------------------------------------------------------------------------------------
_find:=0;
{? exec('default_test','!zws_par_ftzk') | exec('srsr_test','!zws_par_ftzk') |
   exec('srdo_test','!zws_par_ftzk') | exec('srzd_test','!zws_par_ftzk') |
   exec('srzf_test','!zws_par_ftzk') | exec('srst_test','!zws_par_ftzk') |
   exec('srsw_test','!zws_par_ftzk')
|| _find:=1
?};
{? ~_find
|| {? ZSKON.RODZ='P'
   || {? SRSR.KONPOD=ZSKON.ref() | SRDO.KONPOD=ZSKON.ref() | DEFAULT.KONPOD=ZSKON.ref()
         | SRZD.KONPOD=ZSKON.ref() | SRZF.KONPOD=ZSKON.ref()
      || _find:=1
      ?}
   |? ZSKON.RODZ='F'
   || {? SRSR.KONFIN=ZSKON.ref() | SRDO.KONFIN=ZSKON.ref() | DEFAULT.KONFIN=ZSKON.ref()
         | SRZD.KONFIN=ZSKON.ref() | SRZF.KONFIN=ZSKON.ref()
      || _find:=1
      ?}
   |? ZSKON.RODZ='D'
   || {? SRSR.KONDOD=ZSKON.ref() | SRDO.KONDOD=ZSKON.ref() | DEFAULT.KONDOD=ZSKON.ref()
         | SRZD.KONDOD=ZSKON.ref() | SRZF.KONDOD=ZSKON.ref()
      || _find:=1
      ?}
   ?}
?};
{? _find=1
|| FUN.emsg('Zestaw kont jest wykorzystywany i nie można go usunąć.'@);
   return(0)
?};
{? ZSKON.r_lock(1,1,1)
|| {? FUN.ask('Usunąć zestaw kont: %1?'@[ZSKON.KOD])
   || ZSKON.r_unlock();
      KKOSZ.index('KONTO');
      KKOSZ.prefix(ZSKON.ref());
      do();
         {? KKOSZ.first()
         || {! |? KKOSZ.del() !}
         ?};
         ZSKON.del();
      end()
   || ZSKON.r_unlock()
   ?}
|| FUN.emsg('Zestaw kont zablokowany przez innego użytkownika.'@)
?}


\kon_fin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Przed obsługą zakładki zestawy kont finansowych
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='F';
ZSKON.index('KOD');
ZSKON.prefix(REF.FIRMA,EDIT_ES.RODZAJ)


\kon_pod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Przed obsługą zakładki zestawy kont podatkowych
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='P';
ZSKON.index('KOD');
ZSKON.prefix(REF.FIRMA,EDIT_ES.RODZAJ)


\kon_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Przed obsługą zakładki zestawy kont dodatkowych
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='D';
ZSKON.index('KOD');
ZSKON.prefix(REF.FIRMA,EDIT_ES.RODZAJ)


\zskon_zl_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Przed obsługą zakładki konta kosztów
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ:='';
KK.index('KONTASYS');
KK.prefix(exec('ref_firma','ustawienia'),'FST');
KK.first()


\zm_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Arkadiusz Wielgus [2010]
:: OPIS: ZM.RODZ
::  OLD: \zm_rodz/konta_kk.fml
::----------------------------------------------------------------------------------------------------------------------
EDIT_ES.RODZAJ


\zskon_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Funkcja dołącz w oknie wertowania zestawów kont
::----------------------------------------------------------------------------------------------------------------------
ZSKON.win_edit('ZSKONRED');
ZSKON.blank();
{? ZSKON.edit("exec('chk_zskon','!zws_par_ftzk',0)")
|| ZSKON.add()
?}


\chk_zskon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Funkcja weryfikuje poprawność wypełnienia rekordu ZSKON (zestawów kont)
::----------------------------------------------------------------------------------------------------------------------
_wy:=__CHK.record(ZSKON,,'KOD','KOM');
{? _wy=''
|| {? __CHK.index(ZSKON,_a)<>''
   || _wy:='KOD'
   ?}
?};
_wy


\zskon_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Funkcja Popraw w oknie wertowania zestawów kont
::----------------------------------------------------------------------------------------------------------------------
{? ZSKON.r_lock(1,1,1)
|| ZSKON.win_edit('ZSKONRED');
   {? ZSKON.edit("exec('chk_zskon','!zws_par_ftzk',1)")
   || ZSKON.put()
   ?};
   ZSKON.r_unlock()
|| FUN.emsg('Zestaw kont zablokowany przez innego użytkownika.'@)
?}


\sel_srsr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Funkcja Środki w oknie wertowania zestawów kont
::----------------------------------------------------------------------------------------------------------------------
{? SRST.name()<>'srst'+'r'+REF.FIRMA().SYMBOL
|| SRST.use('srst'+'r'+REF.FIRMA().SYMBOL)
?};
_ref:=exec('getOkresRok','fst',1);
{? _ref=null
|| FUN.info('Nie udało się ustalić obowiązującego okresu pracy dla obszaru FST.\n Należy zweryfikować '
           +'ustawienia w parametrach pracy.'@);
   return(0)
?};
OKRO_F.cntx_psh();
OKRO_F.prefix();
{? OKRO_F.seek(_ref) || _header:=' ('+OKRO_F.NAZ+' '+OKRO_F.ROK().NAZ+')' || _header:='' ?};
OKRO_F.cntx_pop();
SRST.cntx_psh();
ZSKON.cntx_psh();
{? ZSKON.RODZ='P'
|| SRST.index('KONTAP')
|? ZSKON.RODZ='F'
|| SRST.index('KONTAF')
|? ZSKON.RODZ='D'
|| SRST.index('KONTAD')
?};
{? OPERATOR.DEPT<>null
|| SRST.prefix(_ref,ZSKON.ref(),OPERATOR.DEPT)
|| SRST.prefix(_ref,ZSKON.ref())
?};
_win:=SRST.mk_sel('Przypisane środki w bieżącym okresie'@,'P',,,,,,,'U');
SRST.win_fld(_win,SRST,'ODD','OD',,10,,,'Jednostka księgowa'@);
SRST.win_fld(_win,SRST,'JORG','SYMBOL',,10,,,'Jednostka organizacyjna'@);
SRST.win_fld(_win,SRST,'NRI',,,15,,,'Numer inwentarzowy'@);
SRST.win_fld(_win,SRST,'NST',,,30,,,'Nazwa środka'@);
SRST.win_sel(_win);
SRST.hdr_sel(_header);
SRST.select();
SRST.cntx_pop();
ZSKON.cntx_pop();
1


\zskon_kopia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MG  [8.70]
:: OPIS: Funkcja do kopiowania zestawu kont wraz z kontami
::  OLD: \kopiakon/konta_kk.fml
::----------------------------------------------------------------------------------------------------------------------
ZSKON.cntx_psh();
_dodano:=0;
{? ZSKON.r_lock(1,1,1)
|| _oldref:=ZSKON.ref();
   ZM.SYMBOL:=ZSKON.KOD;
   ZM.KOM:=ZSKON.KOM;
   ZM.RODZ:=ZSKON.RODZ;
   ZM.win_edit('NEWKONTO');
   {! |? {? ZM.edit()
         || ZSKON.index('KOD');
            ZSKON.prefix(REF.FIRMA,ZM.RODZ,ZM.SYMBOL);
            {? ZSKON.first()
            || FUN.emsg('Zestaw kont o podanym symbolu już istnieje.\n'
                       +'Należy wpisać inny symbol.'@);
               1
            || _dodano:=1; 0
            ?}
         || 0
         ?}
   !};
   {? _dodano
   || ZSKON.prefix();
      ZSKON.blank();
      ZSKON.KOD:=ZM.SYMBOL;
      ZSKON.KOM:=ZM.KOM;
      {? ZSKON.add()
      || _dodano:=1;
         _newref:=ZSKON.ref()
      || FUN.emsg('Wystąpił problem z dodaniem nowego symbolu do zestawów kont.\n'
                 +'Kopiowanie nie jest możliwe'@);
         _dodano:=0
      ?}
   ?};
   {? _dodano
   || KKOSZ.index('KONTO');
      KKOSZ.prefix(_oldref);
      {? KKOSZ.first()
      || {! |? KKOSZ.cntx_psh();
              KKOSZ.prefix();
               KKOSZ.ZESTAW:=_newref;
               KKOSZ.add();
               KKOSZ.cntx_pop();
               KKOSZ.next()
         !}
      ?}
   ?};
   ZSKON.prefix();
   ZSKON.seek(_oldref);
   ZSKON.r_unlock()
|| FUN.emsg('Zestaw kont zablokowany przez innego użytkownika.'@)
?};
ZSKON.cntx_pop();
{? _dodano || ZSKON.seek(_newref) ?}


\zskon_kp_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Formuła po odświeżeniu, zakładka zestawów podatkowych
::----------------------------------------------------------------------------------------------------------------------
KKOSZ.index('KONTO');
_prefix:={? ZSKON.size()>0 || ZSKON.ref() || null ?};
KKOSZ.prefix(_prefix);
{? ZSKON.size()>0
|| KKOSZ.btn_sopt('KKOSZWER','btn_kkosz_add','state=normal');
   KKOSZ.actions_grayed('KKOSZWER','')
|| KKOSZ.btn_sopt('KKOSZWER','btn_kkosz_add','state=grayed');
   KKOSZ.actions_grayed('KKOSZWER','D:D')
?};
grp_disp(KKOSZ,'KKOSZWER')


\zskon_kf_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Formuła po odświeżeniu, zakładka zestawów finansowych
::----------------------------------------------------------------------------------------------------------------------
KKOSZ.index('KONTO');
_prefix:={? ZSKON.size()>0 || ZSKON.ref() || null ?};
KKOSZ.prefix(_prefix);
{? ZSKON.size()>0
|| KKOSZ.btn_sopt('KKOSZWER','btn_kkosz_add','state=normal');
   KKOSZ.actions_grayed('KKOSZWER','')
|| KKOSZ.btn_sopt('KKOSZWER','btn_kkosz_add','state=grayed');
   KKOSZ.actions_grayed('KKOSZWER','D:D')
?};
grp_disp(KKOSZ,'KKOSZWER')


\zskon_kd_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [17.00]
:: OPIS: Formuła po odświeżeniu, zakładka zestawów dodatkowych
::----------------------------------------------------------------------------------------------------------------------
KKOSZ.index('KONTO');
_prefix:={? ZSKON.size()>0 || ZSKON.ref() || null ?};
KKOSZ.prefix(_prefix);
{? ZSKON.size()>0
|| KKOSZ.btn_sopt('KKOSZWER','btn_kkosz_add','state=normal');
   KKOSZ.actions_grayed('KKOSZWER','')
|| KKOSZ.btn_sopt('KKOSZWER','btn_kkosz_add','state=grayed');
   KKOSZ.actions_grayed('KKOSZWER','D:D')
?};
grp_disp(KKOSZ,'KKOSZWER')


\bl_kkosz_zestaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Wartosc poczatkowa pola KKOSZ.ZESTAW
::  OLD: \zm_zskon/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
ZSKON.ref()


\konto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Przed redakcja pola KKOSZ.KONTO
::  OLD: \konto/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
1


\be_skid_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Przed wyswietleniem i redakcja SKID.KK
::  OLD: \be_skid_kk/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
exec('be_kk','!zws_par_ftzk')


\be_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Przed redakcją konta kosztowego, obslugiwanego przez zmienna SKID.KK.
::  OLD: \be_kk/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
KK.index('KONTASYS');
SKID.KK:=KKOSZ.KONTO().SYM;
1


\ae_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Po redakcji dla konta kosztowego, obslugiwanego przez zmienna SKID.KK.
::       Sprawdza zgodnosc ze slownikiem i uzupelnia wlasciwe pole _a._b
::       wartoscia KK.ref()
::   WE: _a: akronim tabeli(zmiennej)
::       _b: akronim pola
::   WY: KK.ref() lub null jesli nie znaleziono
::  OLD: \ae_kk/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
_vk:=fld();
_ret:=0;
{? _vk<>''
|| KK.prefix(exec('ref_firma','ustawienia'),BPMN.KK_DOM,_vk);
   {? KK.first()
   || {! |?
         {? KK.SYM=_vk || _ret:=1 ?};
         ~_ret & KK.next()
      !}
   ?}
?};
{? ~_ret
|| FUN.info('Nie podano konta lub brak konta kosztowego w słowniku.'@)
|| ($(_a+'.'+_b))():=KK.ref()
?};
_ret


\f3_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: F3 dla konta kosztowego, obslugiwanego przez zmienna SKID.KK.
::  OLD: \f3_kk/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
KK.index('KONTASYS');
KK.prefix(exec('ref_firma','ustawienia'),BPMN.KK_DOM);
KK.win_sel('WER');
{? KK.select() || KK.SYM || 1 ?}


\ae_skid_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MG  [8.70]
:: OPIS: Formula po redakcji konta w tabeli KKOSZ (poprzez SKID.KK)
::  OLD: \ae_kk/konta_kk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ae_kk','!zws_par_ftzk','KKOSZ','KONTO')


\br_zskon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła kolorująca niewykorzystywane zestawy kont kosztowych
::----------------------------------------------------------------------------------------------------------------------
{? exec('srdo_test','!zws_par_ftzk')=0 & exec('srsr_test','!zws_par_ftzk')=0
   & exec('default_test','!zws_par_ftzk')=0 & exec('srsw_test','!zws_par_ftzk')=0
   & exec('srzd_test','!zws_par_ftzk')=0 & exec('srzf_test','!zws_par_ftzk')=0
|| 'ZSKON#01#01'
|| ''
?}


\br_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła kolorująca niewykorzystywane konta kosztowych
::----------------------------------------------------------------------------------------------------------------------
:: Wyszarzanie akcji związanych z ograniczeniem zakresu wyświetlanych danych
_hide:=
   {? var_pres('__kk_limit')>0
   || {? __kk_limit.LIMIT || 'A(B)' || 'A(W)' ?}
   || ''
   ?};
{? 1+BPMN.KK_DOM<>'F'
|| KK.actions('SLO','Z');
   KK.actions_grayed('SLO',_hide);
   return('')
|| KK.actions('SLO','')
?};
_jest:=0;
KKOSZ.cntx_psh();
KKOSZ.index('ZESTAW');
KKOSZ.prefix(KK.SYM,KK.SYM);
{? KKOSZ.first() || _jest:=1 ?};
KKOSZ.cntx_pop();
{? _jest=0
|| KK.actions_grayed('SLO',_hide+'Z');
   'KK#01#01'
|| KK.actions_grayed('SLO',_hide+'');
   ''
?}


\kk_zskon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Powiązanie kont kosztowych z zestawami
::----------------------------------------------------------------------------------------------------------------------
_tmp:=sql('select ZSKON.KOD, ZSKON.KOM from KKOSZ join ZSKON where KKOSZ.KONTO=:_a',KK.ref());
{? _tmp.first()
|| _win:=_tmp.mk_sel('Powiązane zestawy kont'@,'P',,'kk_zskon',5,5,10,,'U');
   _tmp.win_fld(_win,_tmp,'KOD',,,25,,,'Kod zestawu'@);
   _tmp.win_fld(_win,_tmp,'KOM',,,45,,,'Komentarz'@);
   _tmp.win_sel(_win);
   _tmp.select()
|| FUN.info('Bieżące konto kosztowe nie wchodzi w skład żadnego z zestawów kont.'@)
?}


\srst_test
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MG  [8.70]
:: OPIS: Formula sprawdza powiazania usuwanego zestawu z baza SRST (rejestr stanów)
::  OLD: \sprsrod/konta_kk.fml
::----------------------------------------------------------------------------------------------------------------------
SRST.cntx_psh();
_firma:=ZSKON.FIRMA().SYMBOL;
_srst:=SRST.names();
_wynik:=0;
{? _srst.first()
|| {! |?
      {? _srst.NAME+3=_firma
      || SRST.use(_srst.NAME);
         {? ZSKON.RODZ='P' || SRST.index('KONPOD')
         |? ZSKON.RODZ='F' || SRST.index('KONFIN')
         |? ZSKON.RODZ='D' || SRST.index('KONDOD')
         ?};
         SRST.prefix(ZSKON.ref());
         {? SRST.first() || _wynik:=1 ?}
      ?};
      _wynik=0 & _srst.next()
   !}
?};
SRST.cntx_pop();
_wynik


\srsw_test
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MG  [8.70]
:: OPIS: Formula sprawdza powiazania usuwanego zestawu z baza SRSW (składniki wartości)
::  OLD: \sprsrod/konta_kk.fml
::----------------------------------------------------------------------------------------------------------------------
SRSW.cntx_psh();
_firma:=ZSKON.FIRMA().SYMBOL;
_srsw:=SRSW.names();
_wynik:=0;
{? _srsw.first()
|| {! |?
      {? _srsw.NAME+3=_firma
      || SRSW.use(_srsw.NAME);
         {? ZSKON.RODZ='P' || SRSW.index('KONPOD')
         |? ZSKON.RODZ='F' || SRSW.index('KONFIN')
         |? ZSKON.RODZ='D' || SRSW.index('KONDOD')
         ?};
         SRSW.prefix(ZSKON.ref());
         {? SRSW.first() || _wynik:=1 ?}
      ?};
      _wynik=0 & _srsw.next()
   !}
?};
SRSW.cntx_pop();
_wynik

:Sign Version 2.0 jowisz:1045 2022/06/30 14:22:55 447eb6c64e8b49b830a4220c49091e3235246cfa1297bc8bf38f7dec9895a5c429b800e8381188e9f36073ef619e73b187417673eb1a0ab7463fe5722ffaa2a6cf5c3af0106e9fcabbf8eca8a124d75e6fe619e2879e3ae4aee904826f9a63d91555e2586cacb66a936cc3514b56c644d201a04dee70c57f3f23614ad96a23e6
