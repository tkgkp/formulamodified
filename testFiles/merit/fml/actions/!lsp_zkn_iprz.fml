:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lsp_zkn_iprz.fml
:: Utworzony: 02.10.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Realizacja zamówień sprzedaży
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ,ZSMG,LMG
::# properties=LOOP
::# parses=exec('parses','!lsp_zkn_iprz')
::# kind=WE,   symbol=ZK_N,         type=_ZK_N,       name=Zamówienie sprzedaży,       required=T,    keyref=T
::# kind=WE,   symbol=ZK_REA,       type=STRING,      name=Realizacja zamówienia,      required=N
::# kind=WE,   symbol=ZK_REA_O,     type=STRING,      name=Realizacja zamówienia,      required=N
::# kind=WE,   symbol=TR_NZL,       type=_TR_NZL,     name=Dyspozycja w magazynie,     required=N,    keyref=T
::# kind=WEW,  symbol=ZK_RN,        type=_ZK_RN,      name=Realizacja zamówienia,      required=N
::# kind=WY,   symbol=ZK_REA,       type=STRING,      name=Realizacja zamówienia,      required=N
::# kind=WY,   symbol=ND,           type=_ND,         name=Dokument rozchodowy,        required=N
::# condition=Rejestracja dokumentu wydania, act_uid=LMG_MAG_DWYD,   auto=T,  formula=_a.ND<>~~ & _a.ND<>null()
_mp:=params_get().mp;
_in:=params_get().in;
_out:=params_get().out;

exec('init_zkn','lsp');

:: WSTĘPNE WALIDACJE
_clean_result:=params_exec('clean','!lsp_zkn_iprz',_mp,_in);
_can_continue:=_clean_result.RESULT;
{? _can_continue=0
|| return()
?};

_akcja:=_mp.akcja();
_auto:=_akcja<>'Realizuj' & _mp.isAutoRun();

:: Wyzwalacz, który po dodaniu nagłówka dokumentu:
:: - add: dodaje rekord kluczowy nagłówka dokumentu
::   del: usuwa rekord kluczowy nagłówka dokumentu
:: - add: zapisuje parametr wyjściowy ZD_NAG = wskazanie na nagłówek zamówienia dostawy
::   del: zapisuje parametr wyjściowy ZD_NAG = null
_mp.trigRef('ZK_RN',,1,,exec('kind_internal','#b_port'),'ZK_RN');

_tr_nzl:={? var_pres('TR_NZL',_in)=type_of(null()) & _in.TR_NZL
         || _in.TR_NZL
         |? POMOC.TR_NZL<>null()
         || _mp.save(exec('kind_in','#b_port'),'TR_NZL',POMOC.TR_NZL);
            POMOC.TR_NZL
         || null()
         ?};
_zam_rea:={? var_pres('ZK_REA',_in)=type_of(null()) & _in.ZK_REA<>''
          || _in.ZK_REA
          |? POMOC.ZAM_REA<>''
          || POMOC.ZAM_REA
          || ''
          ?};

{? ~(var_pres('ZK_N',_in)=type_of(null()) & _in.ZK_N)
||
   _krefs:=_mp.getRefs();
   {? {? var_pres('[1]',_krefs)=type_of('') & _krefs[1]<>''
      || exec('FindAndGet','#table',ND,_krefs[1],,,null())
      || null()
      ?}<>null()
   || _mp.error('Brak wymaganego parametru ZK_N.')
   || FUN.info('Zamówienie nie zostało odnalezione, prawdopodobnie zostało usunięte.'@);
      _mp.error('Zamówienie nie zostało odnalezione, prawdopodobnie zostało usunięte.')
   ?}

|? ~(exec('FindAndGet','#table',ZK_N,_in.ZK_N,,"name()",'')*'__')
||
   _mp.error('Zamówienie '+exec('FindAndGet','#table',ZK_N,_in.ZK_N,,"SYM",'')+' przesłane do archiwum. '
             'Realizacja niemożliwa.')

|? exec('FindAndGet','#table',ZK_N,_in.ZK_N,,"STAT_REJ='A'",0)
||
   FUN.info('Anulowano zamówienie %1.\nRealizacja niemożliwa.'@[exec('record','#to_string',_in.ZK_N)]);
   _mp.error('Anulowano zamówienie %1. Realizacja niemożliwa.'[exec('record','#to_string',_in.ZK_N)])
||
   _zk_rea:='';
   _continue:={? _tr_nzl<>null() & _zam_rea<>''
              || _zk_rea:=_zam_rea;
                 5
              || 0
              ?};

   {? ~_continue & _mp.loop()=0
:: pierwsze wywołanie
   || ZK_N.cntx_psh();
      _jest:=ZK_N.seek(_in.ZK_N);
      {? ~_jest || ZK_N.prefix(); _jest:=ZK_N.seek(_in.ZK_N) ?};
      {? ~_jest
      || _mp.error('Nie znaleziono zamówienia.')
      ||
         {? _akcja='Realizuj'
            | _auto
            | _mp.pathTodo()
         ||
            {? ZK_N.E='2'
            || _continue:=2
            || BEER.ZK_N:=ZK_N.ref();

               exec('realizuj','zamsiw_rea',,,,,_tr_nzl);

               _internal:=_mp.load(exec('kind_internal','#b_port'));
               _continue:={? var_pres('ZK_RN',_internal)=type_of(null()) & _internal.ZK_RN || 1 || -1 ?};
               {? _continue=1 || _zk_rea:=exec('FindAndGet','#table',ZK_RN,_internal.ZK_RN,,"GRP_KEY",'') ?};
               {? _zk_rea<>'' & var_press('ZK_REA_O',_in)<>type_of(~~) & _in.ZK_REA_O<>''
               || _zk_rea_o:=_in.ZK_REA_O;
                  ZK_RN.index('GRP_KEY');
                  ZK_RN.prefix(_zk_rea);
                  _loop:=ZK_RN.first();
                  {!
                  |? _loop
                  |!
                     ZK_RN.cntx_psh();
                     ZK_RN.prefix();
                     ZK_RN.GRP_KEY:=_zk_rea_o;
                     ZK_RN.put();
                     ZK_RN.cntx_pop();
                     _loop:=ZK_RN.first()
                  !};
                  _zk_rea:=_zk_rea_o
               ?};
               {? _tr_nzl<>null() || POMOC.ZAM_REA:=_zk_rea ?}
            ?}

         || _mp.error('Nieobsługiwana ścieżka.')
         ?}
      ?};
      ZK_N.cntx_pop()
:: wywołanie w pętli
   |? _continue<>5
   || _continue:=var_pres('ZK_REA',_in)=type_of('') & _in.ZK_REA<>'';
      {? _continue || _zk_rea:=_in.ZK_REA ?}
   ?};

   {? _continue=5
   ||
::    uruchomienie instancji związanych z dyspozycjami magzynowymi
      ZK_RN.cntx_psh();
      ZK_RN.use('zkhin'+(ref_name(_in.ZK_N)+3));
      ZK_RN.prefix();
      _grp_key:=_zk_rea-1;
      _grp_key_off:=_grp_key+'0';
      {? _grp_key<>''
      || ZK_RN.index('N_GRP');
         ZK_RN.prefix(_in.ZK_N,_grp_key_off);
         {? ZK_RN.first()
         || {? exec('FindAndGet','#table',ZK_N,_in.ZK_N,,"ZK_N.E='2'",0)
            || _mp.done()
            ?}
         ?}
      ?};
      ZK_RN.cntx_pop()
   |? _continue=-1
:: Wycofano się z wystawiania realizacji
   || 1
   |? _continue=2
:: Zamówienie zrealizowane wcześniej
   || FUN.info('Zamówienie '+exec('FindAndGet','#table',ZK_N,_in.ZK_N,,"ZK_N.SYM",'')+' jest już zrealizowane.');
      _mp.done()
   |? _continue=1 & _zk_rea<>''
:: Zapisanie parametru wyjściowego ND, wykluczenie kolejnej realizacji z pętli, zakończenie czynności
   || ZK_RN.cntx_psh();
      ZK_RN.use('zkhin'+(ref_name(_in.ZK_N)+3));
      ZK_RN.prefix();
      _grp_key:=_zk_rea-1;
      _grp_key_on:=_grp_key+'1';
      _grp_key_off:=_grp_key+'0';
      {? _grp_key<>''
      || ZK_RN.index('GRP_KEY');
         ZK_RN.prefix(_grp_key_on);
         {? ZK_RN.first()
         || ZK_RN.cntx_psh();
            ZK_RN.prefix();
            ZK_RN.GRP_KEY:=_grp_key_off;
            do();
            ZK_RN.put();
            _mp.save(exec('kind_out','#b_port'),'ND',exec('FindAndGet','#table',ND,ZK_RN.ND,,,null()));
            _mp.save(exec('kind_out','#b_port'),'ZK_REA',_zk_rea);
::          Wykluczenie pozostałych realizacji dotyczących tego samego dokumentu rozchodowego
            ZK_RN.index('ND');
            ZK_RN.prefix(ZK_RN.ND);
            _loop:=ZK_RN.first();
            {!
            |? _loop
            |!
               ZK_RN.GRP_KEY:=_grp_key_off;
               _loop:=ZK_RN.put() & ZK_RN.next()
            !};
            end();
            ZK_RN.cntx_pop();
            {? ZK_RN.first()
::          kontynuacja pętli
            || _mp.loop_continue()
            ?}
         || _mp.save(exec('kind_out','#b_port'),'ZK_REA',_zk_rea)
         ?}
      ?};
      ZK_RN.cntx_pop();
      _mp.done()
   || _mp.error('Brak oczekiwanego parametru ZK_REA.')
   ?}
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));

{? var_pres('ZK_N',_in)<>type_of(~~)
|| 'Zrealizuj zamówienie: %1'@@[exec('record','#to_string',_in.ZK_N)]
|| ''
?}


\zkn_realizuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument sprzedaży - Akceptuj
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
exec('zkn_realizuj','zamsiw_rea','LSP_ZKN_IPRZ')


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Formuła ustala PARSES
::   WE: UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;

{? var_pres('ZK_N',_in)=type_of(null()) & _in.ZK_N
|| __PARSES.setVal('OddzialLogProd',1+(ref_name(_in.ZK_N)+3))
?};

1


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::       [_b] - tablica z parametrami wejściowymi
::   WY: obj_new() - obiekt wynikowy
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
{? var_pres('_b')>100
|| _in:=_b
|| _in:=params_get().in
?};
params_exec('zam_clean','zamsiw_nag',_mp,_in)

:Sign Version 2.0 jowisz:1048 2021/04/09 15:19:38 06b4f15b3ae35b12a797b3e8c3d4ce6ed393531ba7de29309be299c4d1a1d56c580007b633550f7102d3935a0b7eb30a78247ff9e1a5eee59f06f8f3e24548f77b6c17e55682268fb5d454b99a3f1889bdb47cea11107d356c4cbbec7dc4868f9b61b9d8fe478ac78c4bec034d9cafcd451167abd25faadcf155314a0f62fe69
