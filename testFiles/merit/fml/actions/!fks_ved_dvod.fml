:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fks_ved_dv7d.fml
:: Utworzony: 20.08.2015
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności FKS_VED_DVOD - Tworzenie deklaracji VAT-27
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przeglądanie deklaracji VAT-27 - główna formuła czynności FKS_VED_DVOP
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS
::# kind=WE, symbol=OKRES, type=_OKRO_F, name=Okres deklaracji, required=N, keyref=N
:: PARAMETRY WY:
::# kind=WY, symbol=DEKLARACJA, type=_VAT_DEK, name=Deklaracja VAT-27, required=T
::# kind=WY, symbol=OKRES, type=_OKRO_F, name=Okres deklaracji, required=T

_args:=params_get();
_we:=_args.in;
_wy:=_args.out;
_mp:=_args.mp;
_akcja:=_mp.akcja();
vat_typ:='VAT27';
BPMN.SYM_DOM:='FKS';
{? var_press('OKRES',_wy)>0
|| OKRO_F.prefix();
   OKRO_F.seek(_wy.OKRES)
|? var_press('OKRES',_we)>0
|| OKRO_F.prefix();
   OKRO_F.seek(_we.OKRES)
|| SSTALE.AO()
?};
_ar:=SSTALE.AR;
_ao:=SSTALE.AO;
SIK.OKRROK2:=OKRO_F.ref();
SIK.ROK2:=OKRO_F.ROK;
_jest:=0;
Add:=0;
ref:=null;
VAT_DEK.cntx_psh();
_refy:=_mp.getRefs();
{? var_press('[1]',_refy)>0
|| VAT_DEK.index('UNIK');
   VAT_DEK.prefix();
   {? VAT_DEK.seek(_refy[1])
   || _jest:=1;
      Add:=1;
      ref:=VAT_DEK.ref();
      exec('set_var','fks_ved')
   || _jest:=-1
   ?}
|| exec('init','fks_ved',OKRO_F.ROK,OKRO_F.ref());
   rodzdekl:={? SIK.ROZL_VAT='K' || 'I' || 'i' ?}
?};
_spr:="exec('vat_rec','!fks_ved_dvod')";
{? _jest=-1 | _jest=0 & _mp.pathTodo()
|| FUN.info('Nie znaleziono deklarcji VAT-27.'@);
   _wy.DEKLARACJA:=null;
   _wy.OKRES:=null;
   _mp.save(,_wy);
   _mp.done()
|? _jest=0 & (_mp.pathProc() | _akcja='Dołącz')
|| {? exec('okres','!fks_ved_dvod') & exec('set_vat_dek','!fks_ved_dvod')
   || _add:="exec('add','!fks_ved_dvod')";
      exec('set_win','fks_ved',_spr,_add);
      _mp.trigRef('VAT_DEK');
      {? VAT_DEK.edit(_spr)
      || {? Add=0
         || ref:=_add();
            {? ref
            || Add:=1;
               VAT_POZ.index('VAT_POZ');
               VAT_POZ.prefix(ref);
               exec('vat_dpoz','fks_ved',vat_typ);
               VAT_DEK.edit(_spr)
            ?}
         ?}
      ?}
   ?}
|? VAT_DEK.STATUS<>'N' & VAT_DEK.STATUS<>''
|| FUN.info('Zakończono już rejestrację deklaracji.'@)
|? exec('bevatdek','fks_ved')
|| {? _akcja='Zakończ'
   || VAT_DEK.STATUS:='R';
      VAT_DEK.put()
   || exec('ust_okn','fks_ved');
      _add:="";
      exec('set_win','fks_ved',_spr,_add);
      {? VAT_DEK.edit(_spr)
      || VAT_DEK.put();
         exec('vat_uzas','fks_ved')
      ?}
   ?};
   VAT_DEK.r_unlock()

?};
VAT_DEK.cntx_pop();
{? ref<>null
|| VAT_DEK.cntx_psh();
   VAT_DEK.prefix();
   {? VAT_DEK.seek(ref)
   || _wy.DEKLARACJA:=VAT_DEK.ref();
      _wy.OKRES:=SSTALE.AO;
      _mp.save(,_wy);
      {? VAT_DEK.STATUS<>'N'
      || _mp.done()
      ?}
   ?};
   VAT_DEK.cntx_pop();
   VAT_DEK.seek(ref)
?};
{? _ar<>SIK.ROK2 | _ao<>SIK.OKRROK2
|| SSTALE.AR:=_ar;
   SSTALE.AO:=_ao;
   exec('open','fks_ved',SSTALE.AR().KOD,SSTALE.AO().NR)
?};
VAR_DEL.delete('vat_ver','zaok','niedruk','pv','ref')


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Opis czynności na ToDo
::----------------------------------------------------------------------------------------------------------------------
''@@;params_exec('desc_add','fks_ved','VAT27')


\okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Umożliwia wybór okresu deklaracji
::----------------------------------------------------------------------------------------------------------------------
OkroFInd:=1;
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
ROK_F.win_dict('WER');
OKRO_F.win_dict('SLO');
SIK.win_edit('ROKOKRES');
_ok:=SIK.edit("
   _r:=__CHK.record2(SIK,'ROK2','Rok bilansowy','OKRROK2','Okres');
   {? _r=''
   || {? OKRO_F.POCZ=date(0,0,0)
      || FUN.info('W okresie %1 nie można tworzyć deklaracji.'@[OKRO_F.NAZ]); 0
      |? ~exec('czy_ue','fks_vat',1)
      || FUN.info('Wybierz okres od maja 2004.'@); 0
      |? exec('zwr_rozl_okr','fks_ved')='K' & OKRO_F.POCZ>=date(2017,1,1)
      || FUN.info('Od 1 stycznia 2017 roku nie można wystawić deklaracji VAT-27 kwartalnie.'
                  '\nZmień sposób rozliczenia VAT na miesięczny.'@);
         0
      || {? 1+vat_typ='V'
         || {? exec('zwr_rozl_okr','fks_ved')='K'
            || SIK.ROZL_VAT:='K';
               vat_typ:='VAT27'
            || SIK.ROZL_VAT:='M';
               vat_typ:='VAT27'
            ?}
         ?};
         1
      ?}
   || _r
   ?}
");
VAR_DEL.delete('OkroFInd');
{? _ok
|| {? SSTALE.AR<>SIK.ROK2 | SSTALE.AO<>SIK.OKRROK2
   || SSTALE.AR:=SIK.ROK2;
      SSTALE.AO:=SIK.OKRROK2;
      exec('open','fks_ved',SSTALE.AR().KOD,SSTALE.AO().NR)
   ?}
?};
_ok


\set_vat_dek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed dodaniem deklaracji - ustawienie danych
::----------------------------------------------------------------------------------------------------------------------
vat_ver:=exec('vat_ver','!fks_ved_dvod',-vat_typ,SIK.OKRROK2().KON);
zaok:=exec('zaok','fks_ved',-vat_typ,SIK.OKRROK2().KON);
niedruk:=1;
_dekl:=OKRO_F.ROK;
_dekk:=OKRO_F.ROK().KOD;
_dekp:=ROK_F.POCZ_ROK;
_rodz:={? SIK.ROZL_VAT='M' || 'i' || 'I' ?};
_wer:=1;
_ref:=null;
_dalej:=1;
{? exec('czy_ks','fks_vat')
|| {? SIK.ROZL_VAT='M'
   || SSTALE.AO();
      _okres:=$(OKRO_F.POCZ~1)+'/'+form(OKRO_F.POCZ~2,-2)
   |? SIK.ROZL_VAT='K'
   || _v:=#((7+$SSTALE.AO().KON)+2);
      _okres:=(4+$SSTALE.AO().KON)+'/'
              +{? _v<=3 || '1' |? _v<=6 || '2' |? _v<=9 || '3' || '4' ?};
      _rok:=#(4+_okres);
      _mies:=#(5-_okres)*3;
      OKRO_F.index('KON'); OKRO_F.prefix(REF.FIRMA,date(_rok,_mies,0));
      _dekl:={? OKRO_F.first
                || OKRO_F.ROK
                || FUN.info('Należy dołączyć nowy rok bilansowy'
                       '\n z powodu braku końca kwartału w danych.'@);
                   _dalej:=0
                ?};
      _dekk:=OKRO_F.ROK().KOD;
      _dekp:=ROK_F.POCZ_ROK
   ?};
   {? _dalej
   || _is_vat:=0;
      VAT_DEK.index('VAT_DEK');
      VAT_DEK.prefix(_dekp,vat_typ,_okres);
      _is_vat:=VAT_DEK.last();
      {? _is_vat
      || {? VAT_DEK.TYP+3='KOR'
         || _ok:=FUN.choice('Istnieje już deklaracja na okres %1.'@[_okres],1,'utworzyć Nową'@,'utworzyć Korektę'@);
            {? _ok || _ok+=1 ?}
         || _ok:=FUN.choice('Istnieje już deklaracja na okres %1'@[_okres],2, 'Usunąć ostatnią','utworzyć Nową','utworzyć Korektę'@)
         ?};
         _wer:=VAT_DEK.WER;
         {? _ok=3 | _ok=2
         || {? _ok=2
            || _typ:=vat_typ
            |? _ok=3
            || _typ:='VAT27_KOR'
            ?};
            VAT_DEK.cntx_psh();
            VAT_DEK.index('VAT_DEKR');
            VAT_DEK.prefix(_rodz,_dekp,_okres,_typ,);
            _wer:={? VAT_DEK.last() || VAT_DEK.WER || 0 ?};
            VAT_DEK.cntx_pop()
         ?};
         {? _ok=1
         || {? vat_typ<>VAT_DEK.TYP
            || _wer+=1
            ?};
            _ok:=exec('vat_usu','fks_ved',1)
         || _wer+=1
         ?}
      || _ok:=2
      ?};
      {? _ok>0
      || VAT_DEK.prefix(_dekp);
         VAT_DEK.ROK:=_dekl;
         VAT_DEK.RODZAJ:=_rodz;
         {? _ok=3
         || VAT_DEK.ZAL3:=1;
            VAT_DEK.TYP:='VAT27_KOR';
            SKID.DEKL_NAZ:='VAT27'
         || VAT_DEK.TYP:=SKID.DEKL_NAZ:=vat_typ
         ?};
         VAT_DEK.OKRES:=_okres;
         {? 1+(_okres+2)='/'
         || _nr_okr:=#(_okres+1);
            _mc:=(#(_okres+1)-1)*3+1;
            _d:=date(#(4+_okres),_mc,0);
            SKID.DEKL_NAZ+='K'
         || _nr_okr:=#(_okres+2);
            _d:=date(#(4+_okres),#(_okres+2),0)
         ?};
         VAT_VER.index('VER_OD'); VAT_VER.prefix(BPMN.SYM_DOM,SKID.DEKL_NAZ,SKID.DEKL_NAZ);
         VAT_DEK.NR:={? SKID.DEKL_NAZ<>'' & VAT_VER.find_le(_d) || VAT_VER.ref() || null ?};
         VAT_DEK.WER:=_wer;

         VAT_DEK.win_edit('POD');
         VAT_DEK.DATA:=date();
         {? _ok=3
         || VAT_DEK.OPIS:='Korekta informacji podsumowującej krajowej'
         || VAT_DEK.OPIS:='Informacja podsumowująca krajowa'
         ?};
         1
      ?}
   ?}
?}


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodaje deklarację i jej pozycje
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
VAT_DEK.prefix();
VAT_DEK.STATUS:='N';
{? VAT_DEK.add()
|| _ref:=VAT_DEK.ref();
   exec('vat_uzas','fks_ved');
   _ok:=exec('utw_vat27','!fks_ved_dvod')
?};
_ref


\vat_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula Dolacz dla okienka wert. tabeli VAT_DEK
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_VED_DVOD';
_params.AKCJA:='Dołącz';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OKRES',SSTALE.AO);
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\vat_ver
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.60]
:: OPIS: ustala numer wersji deklaracji przy tworzeniu
::   WE: _a - typ deklaracji VAT7
::  OLD: \vat_ver/vat.fml
::----------------------------------------------------------------------------------------------------------------------
1


\vat_rec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.40]
:: OPIS: Formula po redakcji okienka VAT_DEK
::  OLD: \vat_rec/vat.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~VAT_DEK.NR
|| FUN.info('Nie wypełnione pole z numerem wersji deklaracji.'@); 'NR'
|? 4+vat_typ='VAT7'
|| VAT_DEK.PROC:=VAT_DEK.PROC$2;
   {? (VAT_DEK.PROC<0 | VAT_DEK.PROC>100)
   || FUN.info('Wpisz właściwie %% sprzedaży opodatkowanej.'@); 'PROC'
   || _nr_okr:={? 1+(VAT_DEK.OKRES+2)='/' || #(VAT_DEK.OKRES+1) || #(VAT_DEK.OKRES+2) ?};
      {? _nr_okr=1
      || VAT_DEK.PROC2:=VAT_DEK.PROC2$2;
         {? (VAT_DEK.PROC2<0 | VAT_DEK.PROC2>100)
         || FUN.info('Wpisz właściwie %% sprzedaży opodatkowanej\nz poprzedniego roku.'@); 'PROC2'
         || ''
         ?}
      || ''
      ?}
   ?}
|| ''
?}


\utw_vat27
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Formula tworzenia pozycji deklaracji typu VAT-27
::  OLD: \utw_vat27/vat.fml
::----------------------------------------------------------------------------------------------------------------------
_czy_kor:=0;
_kor:=VAT_DEK.TYP+3='KOR';
_wer:=VAT_DEK.NR().NR;
{? _kor
|| VAR_DEL.delete('TVATK');
   TVATK:=tab_tmp(2,
      'TYP','STRING[1]',,
      'NIP','STRING[20]',,
      'NETTO','REAL',,
      'OP','STRING[80]',
   );
   VAT_DEK.cntx_psh();
   VAT_DEK.index('VAT_DEKR');
   VAT_DEK.prefix(VAT_DEK.RODZAJ,VAT_DEK.ROK().POCZ_ROK,VAT_DEK.OKRES,'VAT27');
   {? VAT_DEK.prev()
   || VAT_POZ.index('VAT_POZ'); VAT_POZ.prefix(VAT_DEK.ref());
      {? VAT_POZ.first()
      || {!
         |? {? VAT_POZ.NETTO
            || TVATK.TYP:={? VAT_POZ.POZ1=1 || 'T' || 'U' ?};
               _poz:=VAT_POZ.OP*',';
               TVATK.NIP:=exec('getsnip','!fks_ved_dvod',(_poz-1)+VAT_POZ.OP);
               TVATK.NETTO:=VAT_POZ.NETTO;
               TVATK.OP:=TVATK.NIP+((_poz-1)-VAT_POZ.OP);
               TVATK.add()
            ?};
            VAT_POZ.next()
         !}
      ?}
   ?};
   VAT_DEK.cntx_pop();
::   TVATK.win_sel(TVATK.mk_sel(,,1));
::   TVATK.select();
   ~~
?};
exec('utw_v27','!fks_ved_dvod');
_zal_t:=_zal_u:=1;
_poz_t:=0; _max_t:=30;
_poz_u:=0; _max_u:=10;
KH.index('SNIP'); KH.prefix(2);
VAT_POZ.index('VAT_POZ'); VAT_POZ.prefix();
{? TVAT.first()
|| exec('vat27kh','!fks_ved_dvod');
   {!
   |? _suma:=0;
      TVAT.prefix(TVAT.GRPOD,TVAT.NIP,);
      {? TVAT.first()
      || {!
         |? _suma+=TVAT.NETTO;
            TVAT.next()
         !}
      ?};
      _typ:=~(TVAT.GRPOD+1);
      {? _wer=2
      || _nr:={? _typ='T' || _poz_t+=1 || _poz_u+=1 ?};
         _lp:=VAT_DEK.TYP+' '+{? _typ='T' || 'C' || 'D' ?}+' '+(('00'+($_nr))+3)
      || {? _typ='T'
         || {? _poz_t=_max_t || _poz_t:=0; _zal_t+=1 ?};
            _poz_t+=1
         || {? _poz_u=_max_u || _poz_u:=0; _zal_u+=1 ?};
            _poz_u+=1
         ?};
         _nr:={? _typ='T' || _poz_t || _poz_u ?};
         _zal:={? _typ='T' || _zal_t || _zal_u ?};
         _lp:=VAT_DEK.TYP+' '+$_zal+' '+{? _typ='T' || 'C' || 'D' ?}+' '+(('0'+($_nr))+2)
      ?};
      VAT_POZ.VAT_DEK:=VAT_DEK.ref();
      VAT_POZ.LP:=_lp;
      VAT_POZ.TYP:='A';
      VAT_POZ.OP:=TVAT.NIP+', '+{? TVATKH.find_key(TVAT.NIP,) & TVATKH.NAZ<>'' || TVATKH.NAZ || TVAT.KH ?};
      VAT_POZ.NETTO:=_suma;
      VAT_POZ.POZ1:={? _typ='T' || 1 || 2 ?};
      VAT_POZ.Z:={? _kor || exec('vat27_kor','!fks_ved_dvod',_typ,TVAT.NIP) || 'N' ?};
      VAT_POZ.TEXT:='';
      VAT_POZ.VAT:=0;
      VAT_POZ.add();
      {? _kor & VAT_POZ.Z='T' || _czy_kor:=1 ?};
      TVAT.prefix();
      TVAT.next()
   !}
?};
{? _kor
|| {? TVATK.first()
   || _czy_kor:=1;
      {!
      |? _typ:=TVATK.TYP;
         {? _wer=2
         || _nr:={? _typ='T' || _poz_t+=1 || _poz_u+=1 ?};
            _lp:=VAT_DEK.TYP+' '+{? _typ='T' || 'C' || 'D' ?}+' '+(('00'+($_nr))+3)
         || {? _typ='T'
            || {? _poz_t=_max_t || _poz_t:=0; _zal_t+=1 ?};
               _poz_t+=1
            || {? _poz_u=_max_u || _poz_u:=0; _zal_u+=1 ?};
               _poz_u+=1
            ?};
            _nr:={? _typ='T' || _poz_t || _poz_u ?};
            _zal:={? _typ='T' || _zal_t || _zal_u ?};
            _lp:=VAT_DEK.TYP+' '+$_zal+' '+{? _typ='T' || 'C' || 'D' ?}+' '+(('0'+($_nr))+2)
         ?};
         VAT_POZ.VAT_DEK:=VAT_DEK.ref();
         VAT_POZ.LP:=_lp;
         VAT_POZ.TYP:='A';
         VAT_POZ.OP:=TVATK.OP;
         VAT_POZ.NETTO:=0;
         VAT_POZ.POZ1:={? _typ='T' || 1 || 2 ?};
         VAT_POZ.Z:='T';
         VAT_POZ.TEXT:='';
         VAT_POZ.VAT:=0;
         VAT_POZ.add();
         TVATK.next()
      !}
   ?}
?};
VAR_DEL.delete('TVAT','TVATK','TVATKH','TVATI1');
~_kor | _czy_kor


\utw_v27
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Utworzenie tabeli z danymi do deklaracjie VAT-27
::  OLD: \utw_v27/nvat7.fml
::----------------------------------------------------------------------------------------------------------------------
_all:=''; _maska:='';
DVAT.cntx_psh();
PVAT.cntx_psh();
{? SIK.ROZL_VAT='M'
|| okres:=SSTALE.AO().NR;
   rok:=SSTALE.AR().NAZ;
   _where:='D_ROK.KOD='''+ROK_F.KOD+''' ';
   DVAT.use('dvat__'+ROK_F.KOD);
   PVAT.use('pvat__'+ROK_F.KOD)
|| _kw:=#(VAT_DEK.OKRES+1);
   _od:=(_kw-1)*3+1;
   _vr:=#(4+$SSTALE.AO().POCZ);
   _okres1:=date(_vr,_od,1);
   _od+=2;
   _okres2:=date(_vr,_od,0);
   OKRO_F.cntx_psh(); OKRO_F.index('KON'); OKRO_F.prefix(REF.FIRMA);
   _k1:={? OKRO_F.find_ge(_okres1) || OKRO_F.ROK().KOD || '' ?};
   _k2:={? OKRO_F.find_le(_okres2) || OKRO_F.ROK().KOD || '' ?};
   OKRO_F.cntx_pop();
   {? _k1=_k2
   || DVAT.use('dvat__'+_k1);
      PVAT.use('pvat__'+_k1);
      _where:='D_ROK.KOD='''+_k1+''' '
   || _all:='@';
      _where:='D_ROK.KOD>='''+_k1+''' AND D_ROK.KOD<='''+_k2+'''';
      _mdvat:='';
      _mpvat:='';
      {! _i:=#_k1 .. #_k2
      |! _mdvat+=',\'dvat__'+(('0'+$_i)+2)+'\'';
         _mpvat+=',\'pvat__'+(('0'+$_i)+2)+'\''
      !};
      _maska:='/*+MASK_FILTER(DVAT'+_mdvat+') MASK_FILTER(PVAT'+_mpvat+')*/ '
   ?}
?};
VAR_DEL.delete('TVAT');
TVAT:=sql('select '+_maska+
   'SLO_GR.KOD as GRPOD, SLO_ST.KOD as SVAT '+
   ', SUM2 as NETTO, VAT as PODAT, SUM1 as BRUTTO '+
   ', RVAT.SYM as REJ_VAT, DVAT.NR as NR_VAT, DVAT.REJ as REJ_KS, DVAT.NR_W_REJ as NR_KS '+
   ', DVAT.NIP as NIP, DVAT.KH as KH, DVAT.DAT2 as DATAW '+
   ', 0 as POZ1 '+
   ', PVAT.REFERENCE as PVAT_REF '+
   ', 0 as ODD '+
   ', \'                                   \' as KON '+
   ', \'                                                       \' as SYM_ROK '+
   ', \' \' as TYP '+
   ', \'                                                  \' as DSYM '+
   ', DVAT.DAT2 as TP '+
   ', 0 as POZ '+
   'from '+_all+'PVAT left join SLO as SLO_GR using (PVAT.GRVAT, SLO_GR.REFERENCE) '+
   'left join SLO as SLO_ST using (PVAT.STVAT, SLO_ST.REFERENCE) '+
   'join '+_all+'DVAT using (PVAT.DVAT, DVAT.REFERENCE) '+
   'join OKRO_F as D_OKR using (DVAT.OBR, D_OKR.REFERENCE) '+
   'join ROK_F as D_ROK using (D_OKR.ROK, D_ROK.REFERENCE) '+
   'join RVAT using (DVAT.RVAT, RVAT.REFERENCE) '+
   'join KVAT using (RVAT.KVAT, KVAT.REFERENCE) '+
   'join SLO as SLO_KR using (DVAT.KRAJ, SLO_KR.REFERENCE) '+
   'where '+_where+
   ' and KVAT.SYM=\'SprzNOp\' and SLO_GR.KOD like \'SprPDos%\''+
   {? SIK.ROZL_VAT='M'
   || ' AND D_OKR.NR='+$okres
   || ' AND D_OKR.POCZ>=to_date(\''+$_okres1+'\') AND D_OKR.KON<=to_date(\''+$_okres2+'\')'
   ?}+
   ' AND SLO_KR.KOD=''PL'' AND (SLO_ST.KOD='' -'' OR SLO_ST.KOD='' -o'') '+
   'AND DVAT.USUNIETY=0 AND DVAT.NIP<>\'\' '+
   'order by GRPOD,NIP');
TVAT.for_each("TVAT.NIP:=exec('getsnip','!fks_ved_dvod',TVAT.NIP); TVAT.put()");
TVATI1:=TVAT.ndx_tmp('',1,'NIP',,0,'KH',,0);
:: TVAT.win_sel(TVAT.mk_sel(,,1));
:: TVAT.select;
DVAT.cntx_pop();
PVAT.cntx_pop();
1


\vat27kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Tworzy okno z wyborem nazwy kontrahenta dla NIPu
::  OLD: \vat27kh/vat.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TVATKH');
TVATKH:=tab_tmp(2,
   'NIP','STRING[20]','NIP',
   'NAZ','STRING[60]','Nazwa skrócona',
   'OK','STRING[2]',,
   'REF','INTEGER',
);
_ind0:=TVATKH.index('?');
_ind1:=TVATKH.ndx_tmp('',1,'OK',,0,'NIP',,0);
TVAT.cntx_psh();
TVAT.index(TVATI1);
{? TVAT.first()
|| KH.cntx_psh();
   {!
   |? _snip:=TVAT.NIP;
      {? ~TVATKH.find_key(_snip,)
      || _jeden:=1;
         TVAT.cntx_psh();
         TVAT.prefix(TVAT.NIP,);
         {? TVAT.first()
         || TVAT.prefix(TVAT.NIP,TVAT.KH,);
            TVAT.last();
            TVAT.prefix(TVAT.NIP,);
            _jeden:=~TVAT.next()
         ?};
         TVAT.cntx_pop();
         _ok:={? _jeden || '1' || '01' ?};
         TVATKH.NIP:=_snip;
         _brak_kh:=1;
         KH.index('NAZ_P'); KH.prefix(2,TVAT.KH,);
         {? KH.first()
         || {!|?
               {? KH.NAZ_P=TVAT.KH
               || TVATKH.NAZ:=KH.NAZ;
                  TVATKH.REF:=#KH.ref();
                  TVATKH.OK:=_ok;
                  _brak_kh:=0
               || KH.next()
               ?}
            !}
         ?};
         {? _brak_kh
         || KH.index('SNIP'); KH.prefix(2,_snip,);
            {? KH.first()
            || TVATKH.NAZ:=KH.NAZ;
               TVATKH.REF:=#KH.ref();
               TVATKH.OK:=_ok
            || TVATKH.NAZ:=TVAT.KH;
               TVATKH.REF:=0;
               TVATKH.OK:=_ok
            ?}
         ?};
         {? _jeden=0 & TVATKH.NAZ=''
         || TVATKH.OK:='00'
         ?};
         TVATKH.add()
      ?};
      TVAT.prefix(TVAT.NIP,);
      TVAT.last();
      TVAT.prefix();
      TVAT.next()
   !};
   KH.cntx_pop()
?};
TVAT.cntx_pop();
TVATKH.index(_ind1);
TVATKH.prefix('0');
{? TVATKH.first()
|| _o:=KH.mk_sel('Kontrahenci'@,'P');
   KH.win_fld(_o,,'KOD');
   KH.win_fld(_o,,'SKR');
   KH.win_fld(_o,,'NAZ');
   KH.win_fld(_o,,'NIP');
   KH.win_act(_o,,'Formuła','Wybierz'@@,,,"sel_exit()",,1,,,,'W');
   KH.win_act(_o,,'Kolejność');
   KH.win_sel(_o);
   _e:=TVATKH.mk_edit('Nazwa kontrahenta'@);
   TVATKH.win_efld(_e,,'NAZ');
   TVATKH.win_edit(_e);
   _o:=TVATKH.mk_sel('Lista kontrahentów z nieunikalnym NIP-em ujętych w deklaracji'@,'P',,'tvatkhsel');
   TVATKH.win_fld(_o,,'NIP');
   TVATKH.win_fld(_o,,'NAZ');
   TVATKH.win_act(_o,,'Okienko',,,,,"
      TVATKH.cntx_psh();
      TVATKH.prefix('00');
      {? TVATKH.first()
      || _dalej:=FUN.ask('Nie wskazano wszystkich nazw kontrahentów.\nCzy kontynuować?'@)
      || _dalej:=1
      ?};
      TVATKH.cntx_pop();
      _dalej
   ");
   TVATKH.win_act(_o,,'Formuła','Wybierz'@@,,,"
      KH.index('SNIP');
      KH.prefix(2,TVATKH.NIP,);
      KH.seek(TVATKH.REF,) | KH.first();
      {? KH.select(,1,5)
      || TVATKH.NAZ:=KH.NAZ;
         TVATKH.REF:=#KH.ref();
         TVATKH.OK:='01';
         TVATKH.put()
      ?}
   ",,1,,,,'W');
   TVATKH.win_act(_o,,'Popraw');
   TVATKH.win_act(_o,,'Rekord',,,,,"chk_rec('NAZ')");
   TVATKH.win_sel(_o);
   TVATKH.select()
?};
TVATKH.index(_ind0)


\vat27_kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Zwraca znacznik czy korekta
::   WE: _a - typ ('T'owarow lub 'U'slug)
::       _b - nip
::  OLD: \vat27_kor/vat.fml
::----------------------------------------------------------------------------------------------------------------------
{? TVATK.find_key(_a,_b,)
|| _zn:={? TVATK.NETTO<>VAT_POZ.NETTO || 'T' || 'N' ?};
   TVATK.del();
   _zn
|? VAT_POZ.NETTO
|| 'T'
|| 'N'
?}


\getsnip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Zwraca SNIP
::   WE: _a - NIP
::  OLD: \getsnip/nvat7.fml
::----------------------------------------------------------------------------------------------------------------------
_baza:='0123456789';
_snip:='';
{! _i:=1..+_a
|! _z:=(_i+_a)+1;
   {? _baza*_z>0
   || _snip+=_z
   ?}
!};
_snip


\urzad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [12.41]
:: OPIS: Zwraca nazwę Urzędu Skarbowego dopasowaną do naczelnika
::   WE: _a - US.ref
::----------------------------------------------------------------------------------------------------------------------
US.cntx_psh();
US.index('URZSKNAZ');
US.prefix();
{? US.seek(_a)
|| _us_ski:=gsub(US.NU,'SKI ','SKIEGO ');
   _us_cki:=gsub(_us_ski,'CKI ','CKIEGO ');
   _us_ur:=gsub(_us_cki,'URZĄD ','URZĘDU ');
   _us_sk:=gsub(_us_ur,'SKARBOWY ','SKARBOWEGO ');
   _us_dr:=gsub(_us_sk,'DRUGI ','DRUGIEGO ');
   _us_pi:=gsub(_us_dr,'PIERWSZY ','PIERWSZEGO ');
   _us_tr:=gsub(_us_pi,'TRZECI ','TRZECIEGO ');
   _us_cz:=gsub(_us_tr,'CZWARTY ','CZWARTEGO ');
   _us:='NACZELNIK '+_us_cz
|| _us:=''
?};
US.cntx_pop();
_us


\zwrot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [12.41]
:: OPIS: Zwraca kwotę do zwrotu z deklaracji
::   WE: _a - VAT_DEK.ref
::----------------------------------------------------------------------------------------------------------------------
VAT_POZ.cntx_psh();
VAT_POZ.index('VAT_POZ');
VAT_POZ.prefix(_a,'E. 6');
{? VAT_POZ.first()
|| _kwota:=VAT_POZ.VAT
|| _kwota:=0
?};
VAT_POZ.cntx_pop();
_kwota


\uzasad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [12.41]
:: OPIS: Zwraca tekst uzasadnienia wniosku
::   WE: _a - VAT_DEK.ref
::----------------------------------------------------------------------------------------------------------------------
VAT_DEKT.cntx_psh();
VAT_DEKT.index('VAT_DEK');
VAT_DEKT.prefix(_a,'ZAL1','ZAL1');
{? VAT_DEKT.first()
|| VAT_DEKT.memo_get();
   _tekst:=VAT_DEKT.memo_txt()
|| _tekst:=''
?};
VAT_DEKT.cntx_pop();
_tekst


\powod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [12.41]
:: OPIS: Zapisuje powód do pola tekst w uzasadnieniu zwrotu
::   WE: _a - VAT_DEK.ref
::       _b - tmp.KOD - Kod powodu
::----------------------------------------------------------------------------------------------------------------------
VAT_DEKT.cntx_psh();
VAT_DEKT.index('VAT_DEK');
VAT_DEKT.prefix(_a,'ZAL1','ZAL1');
{? VAT_DEKT.first()
|| VAT_DEKT.memo_get();
   _tekst:=VAT_DEKT.memo_txt();
   {? 2+_tekst = '1)' | 2+_tekst = '2)' | 2+_tekst = '3)' |2+_tekst = '4)'
   || _tekst := _b+(1-_tekst);
      VAT_DEKT.memo_set(_tekst);
      VAT_DEKT.memo_put
   || _tekst := _b+') '+_tekst;
      VAT_DEKT.memo_set(_tekst);
      VAT_DEKT.memo_put()
   ?}
|| _tekst:=''
?};
VAT_DEKT.cntx_pop();
_tekst

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 0487ded494f6f23c8b7c4a2882ab818ea33556e69e04fe67560f826a11474eb3186b17780ef8df78ca930b40ebbad2d545bf9e6a34a01b8a730c7e8d1e1fe346f8634bf2ab66d37b36c61ebdbc53e33e417a2c0e2e0b7e2414492003fcc926f7ef6141ff285cc78d4969832da6b377155349fb42958745a42377567f5cfc8be6
