:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fks_rwp_dlad.fml
:: Utworzony: 24.11.2015
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Formuły czynności FKS_RWP_DLAD - Tworzenie analiz w pulpicie windykatora
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Tworzenie analiz w pullpicie windykatora - główna formuła czynności FKS_RWP_DLAD
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS
~~


\ae_datan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK][8.70]
:: OPIS: Po redakcji pola WIND_N.DATA
::  OLD: \ae_datan/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('szuk_okr','okresy',WIND_N.DATA); ROZNE.UT_OKROD=null
|| exec('blad_okr','rozrach_kor'); 0
|| 1
?}


\pr_zakr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Po redakcji pola WIND_N.ZAK_ROZ
::  OLD: \pr_zakr/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
{? WIND_N.ZAK_ROZ='T'
|| WIND_N.PO_TP:=0
|| WIND_N.PRZED_TP:=0
?};
1


\pr_wpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Przed redakcją pola WIND_N.PO_TP
::  OLD: \pr_wpo/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
WIND_N.ZAK_ROZ='N'


\aemaspr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Po redakcji pola WIND_N.ZAK_KON
::  OLD: \aemaspr/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
{? WIND_N.ZAK_KON='M'
|| WIND_N.KON_PRE:=''
|| WIND_N.KON_MAS:=35*'?'
?};
1


\beprespr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Przed redakcja pola WIND_N.KON_PRE
::  OLD: \beprespr/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
anal_rok:=ROZNE.UT_OKROD().ROK;
exec('be_konto','edkonto',"WIND_N.ZAK_KON=\'P\'")


\bemasspr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Przed redakcja pola WIND_N.KON_MAS
::  OLD: \bemasspr/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
anal_rok:=ROZNE.UT_OKROD().ROK;
exec('be_konto','edkonto',"WIND_N.ZAK_KON=\'M\'")


\pr_wprze
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Przed redakcją pola WIND_N.PRZED_TP
::  OLD: \pr_wprze/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
WIND_N.ZAK_ROZ='T'


\wndn_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Dołączanie rekordów w tabeli WIND_N
::  OLD: \wndn_dol/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
WIND_N.win_edit('PAR');
_ref:={? WIND_N.size() || WIND_N.ref() || null ?}; WIND_N.last();
WIND_N.USER:=OPERATOR.USER().KOD;
WIND_N.ODD:=OPERATOR.DEPT;
WIND_N.WAL:=SSTALE.WAL;
WIND_N.DATA:=SSTALE.AO().KON;
WIND_N.OPIS:='';
WIND_N.ZAK_KON:={? WIND_N.KON_PRE=''
                || {? |WIND_N.KON_MAS='' || WIND_N.KON_MAS:=35*'?' ?}; 'M'
                || 'P'
                ?};
exec('odd_filtr','fst');
{? WIND_N.edit("exec('chk_par','!fks_rwp_dlad')")
|| {? var_pres('anal_rok')>0 || &anal_rok ?};
   WIND_KH.cntx_psh(); WIND_OP.cntx_psh(); WIND_NOT.cntx_psh();
   _ar:=SSTALE.AR; _ao:=SSTALE.AO;
   {? _ao<>ROZNE.UT_OKROD
   || SSTALE.AR:=ROZNE.UT_OKROD().ROK; SSTALE.AO:=ROZNE.UT_OKROD;
      exec('open_tabele','open_tab')
   ?};
   WIND_KH.cntx_pop(); WIND_OP.cntx_pop(); WIND_NOT.cntx_pop();
   WIND_N.CZAS:=time();
   WIND_N.DATA_GEN:=date();
   WIND_N.FIRMA:=REF.FIRMA;
   {? WIND_N.add() || exec('gen_wnd','!fks_rwp_dlad') ?};
   SSTALE.AR:=_ar; SSTALE.AO:=_ao;
   WIND_KH.cntx_psh(); WIND_OP.cntx_psh(); WIND_NOT.cntx_psh();
   exec('open_tabele','open_tab');
   WIND_KH.cntx_pop(); WIND_OP.cntx_pop(); WIND_NOT.cntx_pop()
|| {? _ref<>null || WIND_N.seek(_ref) ?};
   {? var_pres('anal_rok')>0 || &anal_rok ?}
?}


\chk_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Sprawdzenie parametrów dla nagłówka analizy
::  OLD: \chk_par/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
_max:=exec('ile_prz','rozrach',0);
{? WIND_N.PRZED_TP<0
|| FUN.info('Liczba dni przed terminem musi być większa od zera.'@); 'PRZED_TP'
|? WIND_N.PO_TP<0
|| FUN.info('Liczba dni po terminie musi być większa od zera.'@); 'PO_TP'
|? _max=0
|| FUN.info('Podaj przedziały dla rozrachunków.'@); 'PRZ1'
|? WIND_N.PO_TP>=WIND_N.PRZ1 & _max>=1
|| FUN.info('Błędne wartości przedziałów.'@); 'PRZ1'
|? WIND_N.PRZ1>=WIND_N.PRZ2 & _max>=2
|| FUN.info('Błędne wartości przedziałów.'@); 'PRZ1'
|? WIND_N.PRZ2>=WIND_N.PRZ3 & _max>=3
|| FUN.info('Błędne wartości przedziałów.'@); 'PRZ2'
|? WIND_N.PRZ3>=WIND_N.PRZ4 & _max>=4
|| FUN.info('Błędne wartości przedziałów.'@); 'PRZ3'
|? WIND_N.PRZ4>=WIND_N.PRZ5 & _max>=5
|| FUN.info('Błędne wartości przedziałów.'@); 'PRZ4'
|? WIND_N.PRZ5>=WIND_N.PRZ6 & _max>=6
|| FUN.info('Błędne wartości przedziałów.'@); 'PRZ5'
|? WIND_N.PRZ6<0 & _max=6
|| FUN.info('Błędne wartości przedziałów.'@); 'PRZ6'
|? WIND_N.OST_PL<0
|| FUN.info('Liczba dni do obliczenia ostatnich płatności\nmusi być większa od zera.'@); 'OST_PL'
|? WIND_N.DATA=date(0,0,0)
|| FUN.info('Błędna data otwarcia analizy.'@); 'DATA'
|| max_prz:=exec('ile_prz','rozrach',1); 1
?}


\gen_wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Generowanie pozycji analizy rozrachunków
::  OLD: \gen_wnd/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('DRB',@.CLASS)<0 || exec('obj_drbt','raty') ?};
_m:=$(#WIND_N.ref());
_m:=('000'+_m)+4;
WIND_KH.use('wndk'+_m);
WIND_KH.erase();
WIND_OP.use('wino'+_m);
WIND_OP.erase();
max_prz:=exec('ile_prz','rozrach',1);
{? WIND_N.ZAK_KH='W'
|| exec('gen_kh','!fks_rwp_dlad')
|| exec('initmpkh','rozrach_kor');
   KH.select();
   {? TMPKH.first()
   || KH.index('KOD');
      {! |?
         KH.prefix(2);
         {? KH.find_key(TMPKH.KOD) || exec('gen_poj','rozrach') ?};
         TMPKH.next()
      !}
   ?};
   exec('deltmpkh','rozrach_kor')
?};
echo();
{? WIND_KH.first()
|| exec('wndn_poz','rozrach',0,0)
|| WIND_N.del();
   FUN.info('Brak pozycji dla podanych parametrów.'@)
?};
{? var_pres('max_prz')>0 || &max_prz ?}


\gen_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Generowanie pozycji analizy dla wszystkich kontrahentów
::  OLD: \gen_kh/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
KH.index('KOD'); KH.prefix(2);
{? KH.first() || {! |? exec('gen_poj','rozrach'); KH.next() !} ?}


\wndn_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Usuwanie analiz w pulpicie windykatora
::  OLD: \wndn_usu/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
{? WIND_N.r_lock(1,1)
|| {? FUN.ask('Usunąć bieżącą analizę?'@)
   || _m:=$(#WIND_N.ref()); _m:=('000'+_m)+4;
      WIND_KH.use('wndk'+_m);
      WIND_KH.erase();
      WIND_OP.use('wino'+_m);
      WIND_OP.erase();
      WIND_NOT.use('winn'+_m);
      WIND_NOT.erase();
      WIND_N.del()
   ?}
|| FUN.info('Analizę obsługuje inny operator.'@)
?}


\wndn_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.62]
:: OPIS: Poprawianie opisu w nagłówku analizy
::  OLD: \wndn_pop/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
WIND_N.win_edit('OPIS');
{? WIND_N.edit()
|| {? var_pres('anal_rok')>0 || &anal_rok ?};
   WIND_N.put()
|| {? var_pres('anal_rok')>0 || &anal_rok ?}
?};
WIND_N.win_edit()


\wndn_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Edycja nagłówka analizy
::  OLD: \wndn_wys/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
WIND_N.win_edit('PAR');
exec('odd_filtr','fst');
WIND_KH.unlock(); WIND_N.r_unlock();
_rlock:=WIND_N.r_lock(1,1);
_lock:=WIND_KH.lock(1,1);
{? _rlock & _lock
|| BUFWIN:=obj_new(@.CLASS.BUFFER,'WIND_N');
   {? WIND_N.edit("exec('chk_par','!fks_rwp_dlad')")
   || {? var_pres('anal_rok')>0 || &anal_rok ?};
      {? ~BUFWIN.is_equal() & WIND_N.put()
      || exec('aktwall','rozrach',1); selexit:=1; sel_exit()
      ?}
   || {? var_pres('anal_rok')>0 || &anal_rok ?}
   ?};
   VAR_DEL.delete('BUFWIN');
   WIND_KH.lock(0,1); WIND_N.r_lock(0,1)
|| {? _lock || WIND_KH.lock(0,1) ?};
   {? _rlock || WIND_N.r_lock(0,1) ?};
   FUN.info('Analizę obsługuje inny operator.'@)
?};
{? ODD.f_active() || ODD.f_clear() ?};
WIND_N.win_edit()


\windp_ro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Wyswietlenie szczegolow dla pozycji analizy (rozrachunki)
::   WE: _a - 1 - biezacy kontrahent, 2 - wszyscy kontrahenci
::  OLD: \windp_ro/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
exec('set_rbop','rozrach_przel');
kh_ile:=_a;
{? var_pres('TAB_WIN')<=0 || exec('initree','!fks_rwp_dlad') ?};
KH.cntx_psh(); KH.prefix();
WIND_KH.KH();
exec('gentree','!fks_rwp_dlad',_a);
TAB_WIN.hdr_sel();
{? _a=1
|| TAB_WIN.hdr_sel(' (dla bieżącego kontrahenta)'@);
   TAB_WIN.index(ind_win1);
   TAB_WIN.prefix(KH.KOD,KH.KOD)
|| TAB_WIN.hdr_sel(' (dla wszystkich kontrahentów)'@);
   TAB_WIN.index(ind_win3);
   TAB_WIN.prefix()
?};
{? TAB_WIN.size()
|| {? var_pres('_b')<=0 || TAB_WIN.select() ?}
|| FUN.info('Nie wygenerowano pozycji z podziałem na rozrachunki.'@)
?};
KH.cntx_pop()


\initree
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Tworzenie tabelki tymczasowej (przeterminowane rozrachunki w pulpicie windykatora)
::  OLD: \initree/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_WIN:=tab_tmp(2,'KHKOD','STRING[8]','',
                   'TREE','TREE_REF','',
                   'PELWART','STRING[100]','',
                   'WID','INTEGER','Widoczna pozycja',
                   'POZIOM','INTEGER','Poziom',
                   'WART','STRING[70]','',
                   'WARTTREE','STRING[80]','',
                   'KHSKR','STRING[10]','',
                   'P1','REAL','P1',
                   'P2','REAL','P2',
                   'P3','REAL','P3',
                   'P4','REAL','P4',
                   'P5','REAL','P5',
                   'P6','REAL','P6',
                   'P7','REAL','P7',
                   'ODDZIAL','STRING[8]','',
                   'KONTO','STRING[35]','',
                   'REF_KH','INTEGER','',
                   'OP_SYM','STRING[50]','',
                   'SYM_ROK','STRING[55]','',
                   'ODD_REF','INTEGER','',
                   'TZ','DATE','',
                   'DO','DATE','',
                   'DO_STR','STRING[10]','Data otw.',
                   'WARTTRE1','STRING[35]','',
                   'SYM_ZEW','STRING[50]','');
ind_win2:=TAB_WIN.ndx_tmp('',1,'KHKOD',,0,'KHKOD',,0,'WID',,0,'WART',,0);
ind_win4:=TAB_WIN.ndx_tmp('',1,'KHKOD',,0,'KONTO',,0,'KONTO',,0,'WID',,0);
ind_win5:=TAB_WIN.ndx_tmp('',1,'KHKOD',,0,'KONTO',,0,'ODDZIAL',,0,'ODDZIAL',,0,'WID',,0);
ind_win6:=TAB_WIN.ndx_tmp('',1,'KHKOD',,0,'KHKOD',,0,'PELWART',,0);
ind_win7:=TAB_WIN.ndx_tmp('',1,'KHKOD',,0,'KONTO',,0,'KONTO',,0,'PELWART',,0);
ind_win8:=TAB_WIN.ndx_tmp('',1,'KHKOD',,0,'KONTO',,0,'ODDZIAL',,0,'ODDZIAL',,0,'PELWART',,0);
ind_win9:=TAB_WIN.ndx_tmp('',1,'POZIOM',,0,'PELWART',,0);
ind_win1:=TAB_WIN.ndx_tmp('',1,'KHKOD',,0,'KHKOD',,0,'TREE',,0);
ind_win3:=TAB_WIN.ndx_tmp('',1,'TREE',,0,'KHKOD',,0);
_sel:=TAB_WIN.mk_sel('Rozrachunki po terminie'@,'N',0,'tab_win_wer',,,,1);
TAB_WIN.win_fld(_sel,,'WARTTREE',,,19);
TAB_WIN.win_act(_sel,,'Formuła','Zwiń/&rozwiń całość'@@,,
                'Zwijanie/rozwijanie całości'@,
                "{? kh_ile=1
                 || exec('zwrw_all','#tree','TAB_WIN','TREE','',KH.KOD,KH.KOD)
                 || exec('zwrw_all','#tree','TAB_WIN','TREE')
                 ?}",,,,,,'R');
TAB_WIN.win_fml(_sel,,'WARTTREE',,'ICON_BEFORE',
                "TAB_WIN.cntx_psh(); TAB_WIN.index(ind_win3); TAB_WIN.prefix(TAB_WIN.ref());
                 _zwrot:={? TAB_WIN.first()
                         || TAB_WIN.cntx_pop();
                            {? TAB_WIN.tr_state()=1
                            || 'xwin16.png:75'
                            || 'xwin16.png:74'
                            ?}
                         || TAB_WIN.cntx_pop(); 'xwin16.png:76'
                         ?}; _zwrot");
TAB_WIN.win_fld(_sel,,'DO_STR');
_i:={? WIND_N.PRZED_TP<>0 || 2 || 1 ?}; ilekolr:=0; co_w_kol:=obj_new(7);
{? _co:=($('PAR_WYDR.IPAR'+$(_i)))(); _co<>''
|| TAB_WIN.win_fld(_sel,,'P1',,,12,2,,_co); ilekolr+=1; co_w_kol[1]:=_co
?}; _i+=1;
{? _co:=($('PAR_WYDR.IPAR'+$(_i)))(); _co<>''
|| TAB_WIN.win_fld(_sel,,'P2',,,12,2,,_co); ilekolr+=1; co_w_kol[2]:=_co
?}; _i+=1;
{? _co:=($('PAR_WYDR.IPAR'+$(_i)))(); _co<>''
|| TAB_WIN.win_fld(_sel,,'P3',,,12,2,,_co); ilekolr+=1; co_w_kol[3]:=_co
?}; _i+=1;
{? _co:=($('PAR_WYDR.IPAR'+$(_i)))(); _co<>''
|| TAB_WIN.win_fld(_sel,,'P4',,,12,2,,_co); ilekolr+=1; co_w_kol[4]:=_co
?}; _i+=1;
{? _co:=($('PAR_WYDR.IPAR'+$(_i)))(); _co<>''
|| TAB_WIN.win_fld(_sel,,'P5',,,12,2,,_co); ilekolr+=1; co_w_kol[5]:=_co
?}; _i+=1;
{? _co:=($('PAR_WYDR.IPAR'+$(_i)))(); _co<>''
|| TAB_WIN.win_fld(_sel,,'P6',,,12,2,,_co); ilekolr+=1; co_w_kol[6]:=_co
?}; _i+=1;
{? _co:=($('PAR_WYDR.IPAR'+$(_i)))(); _co<>''
|| TAB_WIN.win_fld(_sel,,'P7',,,12,2,,_co); ilekolr+=1; co_w_kol[7]:=_co
?};
TAB_WIN.win_act(_sel,0,'Rekord',,,,"exec('rek_prz','!fks_rwp_dlad')");
TAB_WIN.win_act(_sel,,'Formuła','Zapisy'@@,,'Zapisy na rozrachunkach'@,"exec('wop_zap','!fks_rwp_dlad')",,,,,,'Z');
TAB_WIN.win_act(_sel,,'Formuła','Popraw'@@,,'Poprawianie rozrachunku'@,"exec('wop_pop','!fks_rwp_dlad')",,,,,,'P');
task_attach('FKS_ROZ_DARK');
TAB_WIN.win_act(_sel,0,'Menu','Dla kontrahenta'@,,,,,,,,,'D');
TAB_WIN.win_act(_sel,0,'Formuła','Bieżącego'@@,'Dla kontrahenta'@,'Dane dla bieżącego kontrahenta'@,
                "exec('windp_ro','!fks_rwp_dlad',1,1)",,,,,,'B');
TAB_WIN.win_act(_sel,0,'Formuła','Wszystkich'@@,'Dla kontrahenta'@,'Dane dla wszystkich kontrahentów'@,
                "exec('windp_ro','!fks_rwp_dlad',2,1)",,,,,,'W');
TAB_WIN.win_act(_sel,,'Formuła','O&blicz obroty'@@,,'Obroty zaznaczonych pozycji'@,,
                "exec('obl_obr','!fks_rwp_dlad')",,1,"exec('be_gobr','!fks_rwp_dlad')",
                "exec('ae_gobr','rozrach_kor')" ,'B');
TAB_WIN.win_act(_sel,0,'Szukaj');
TAB_WIN.win_act(_sel,0,'Formuła','Dr&ukuj'@@,,'Drukowanie bieżącej zawartości ekranu'@,
                "exec('widoczne1','!fks_rwp_dlad')",,,,,,'U');
TAB_WIN.win_act(_sel,0,'Wyświetl',,,,,"exec('wop_wys','!fks_rwp_dlad')");
TAB_WIN.win_sel(_sel)


\rek_prz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Formula na rekord przed dla okienka tabeli TAB_WIN
::  OLD: \rek_prz/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
ROZRACH.TABELA:='OP';
_zwrot:=0;
echo();
{? TAB_WIN.POZIOM>1
|| KS.cntx_psh(); KS.index('SYM'); KS.prefix(SSTALE.AR,SSTALE.AR().SYNT+TAB_WIN.KONTO);
   {? KS.first()
   || exec('opis','konto',TAB_WIN.KONTO); exec('ka_opis','konto')
   ?};
   KS.cntx_pop()
|| KH.cntx_psh();
   KH.index('KOD'); KH.prefix(2,TAB_WIN.KHKOD);
   {? KH.first() & KH.KOD=TAB_WIN.KHKOD || echo(KH.NAZ) ?};
   KH.cntx_pop()
?};
_zwrot


\wop_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Akcja Zapisy w okienkach tabeli TAB_WIN
::  OLD: \wop_zap/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
ZAP_OP.cntx_psh();
ZAP_OP.win_sel('ROZL2');
ZAP_OP.hdr_sel(); ZAP_OP.hdr_sel('Zapisy na rozrachunkach'@);
ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
KH.cntx_psh(); KH.index('KOD'); KH.prefix();
ZAP_OP.index('DISP');
{? KH.seek(TAB_WIN.REF_KH,KH.name())
|| {? TAB_WIN.POZIOM=1
   || ZAP_OP.prefix(WIND_N.WAL,KH.ref())
   |? TAB_WIN.POZIOM=2
   || ZAP_OP.prefix(WIND_N.WAL,KH.ref(),TAB_WIN.KONTO)
   |? TAB_WIN.POZIOM=3 | TAB_WIN.POZIOM=4
   || {? ODD.seek(TAB_WIN.ODD_REF,ODD.name())
      || {? TAB_WIN.POZIOM=3
         || ZAP_OP.prefix(WIND_N.WAL,KH.ref(),TAB_WIN.KONTO,ODD.OD,ODD.OD)
         |? TAB_WIN.POZIOM=4
         || ZAP_OP.prefix(WIND_N.WAL,KH.ref(),TAB_WIN.KONTO,ODD.OD,ODD.OD,TAB_WIN.OP_SYM,TAB_WIN.OP_SYM,TAB_WIN.SYM_ROK)
         ?}
      ?}
   ?};
   exec('sumzapop','rozrach');
   ROZRACH.TABELA:='POZ';
   ZAP_OP.select()
?};
ODD.cntx_pop(); KH.cntx_pop(); ZAP_OP.cntx_pop()


\wop_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Akcja Popraw w okienku tabeli TAB_WIN
::  OLD: \wop_pop/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
{? TAB_WIN.POZIOM=4
|| {? exec('fnd_op','!fks_rwp_dlad') & exec('poprroz','!fks_roz_dark')
   || {? OP.TZ<>TAB_WIN.TZ | (WIND_N.TYP<>(1+OP.TYP))
      || FUN.info('Dane o przeterminowanym rozrachunku są\n'
                  'niezgodne z katoteką rozrachunków.\n'
                  'Zaktualizuj dane kontrahenta.'@)
      ?}
   ?}
|| FUN.info('Akcja niedostępna dla danej pozycji.'@)
?}


\fnd_op
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Znalezienie rozrachunku dla pozycji szczegółów
::  OLD: \fnd_op/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
OP.index('KON_O'); OP.prefix();
ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
{? ODD.seek(TAB_WIN.ODD_REF,ODD.name()) &
   OP.find_key(WIND_N.WAL,ODD.ref(),TAB_WIN.KONTO,TAB_WIN.OP_SYM,TAB_WIN.OP_SYM,TAB_WIN.SYM_ROK)
|| _zwrot:=1
|| FUN.info('Brak rozrachunku w aktualnej kartotece rozrachunków.'@)
?};
ODD.cntx_pop();
_zwrot


\wop_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Akcja Wyswietl w okienku tabeli TAB_WIN
::  OLD: \wop_wys/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
{? TAB_WIN.POZIOM=4 & exec('fnd_op','!fks_rwp_dlad') || OP.win_edit('RED'); OP.display() ?}


\widoczne1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Wrzuca do tabelki tymczasowej rozwiniete elementy i drukuje je
::  OLD: \widoczne1/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_WID:=tab_tmp(1,'PELWART','STRING[100]','',
                   'WART','STRING[50]','',
                   'P1','REAL','P1',
                   'P2','REAL','P2',
                   'P3','REAL','P3',
                   'P4','REAL','P4',
                   'P5','REAL','P5',
                   'P6','REAL','P6',
                   'P7','REAL','P7',
                   'TZ','DATE','',
                   'DO','DATE','',
                   'POZIOM','INTEGER','Poziom',
                   'WARTTRE1','STRING[35]','',
                   'SYM_ZEW','STRING[50]','');
TAB_WIN.cntx_psh();
TAB_WIN.index(ind_win3);
{? kh_ile=1 || TAB_WIN.prefix(null,KH.KOD) || TAB_WIN.prefix(null) ?};
{? TAB_WIN.first()
|| {! |?
      {? TAB_WIN.tr_state()=1 || exec('rekuren1','!fks_rwp_dlad',TAB_WIN.ref()) ?};
      exec('add_wid1','!fks_rwp_dlad');
      TAB_WIN.next()
   !}
?};
TAB_WIN.cntx_pop();
exec('rep_exec','#b_report','FKS_RWP_DLAD','fks_tmptree',,,,,,,,'W');
VAR_DEL.delete('TAB_WID');
1


\rekuren1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Rekurencyjnie wrzuca do tabelki wynikowej widoczne pozycje
::   WE: _a - ref rekordu nadrzednego
::  OLD: \rekuren1/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
TAB_WIN.cntx_psh();
TAB_WIN.index(ind_win3); TAB_WIN.prefix(_a);
{? TAB_WIN.first()
|| {! |?
      {? TAB_WIN.tr_state()=1 || exec('rekuren1','!fks_rwp_dlad',TAB_WIN.ref()) ?};
      exec('add_wid1','!fks_rwp_dlad');
      TAB_WIN.next()
   !}
|| _zwrot:=0
?};
TAB_WIN.cntx_pop();
_zwrot


\add_wid1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Dodaje rekordy do tabeli z widocznymi pozycjami
::  OLD: \add_wid1/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_WID.PELWART:=TAB_WIN.PELWART;
TAB_WID.WART:=TAB_WIN.WART;
TAB_WID.DO:=TAB_WIN.DO;
TAB_WID.TZ:=TAB_WIN.TZ;
TAB_WID.POZIOM:=TAB_WIN.POZIOM;
TAB_WID.P1:=TAB_WIN.P1;
TAB_WID.P2:=TAB_WIN.P2;
TAB_WID.P3:=TAB_WIN.P3;
TAB_WID.P4:=TAB_WIN.P4;
TAB_WID.P5:=TAB_WIN.P5;
TAB_WID.P6:=TAB_WIN.P6;
TAB_WID.P7:=TAB_WIN.P7;
TAB_WID.WARTTRE1:=TAB_WIN.WARTTRE1;
TAB_WID.SYM_ZEW:=TAB_WIN.SYM_ZEW;
TAB_WID.add()


\obl_obr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Obliczenie obrotow dla pozycji
::  OLD: \obl_obr/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
{? TAB_WIN.sel_size()=0
|| exec('def_okn','!fks_rwp_dlad');
   exec('add_war','!fks_rwp_dlad');
   def_disp('Obroty zaznaczonych pozycji'@);
   undefine()
|| exec('add_war','!fks_rwp_dlad')
?}


\def_okn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Definiowanie okienka tymczasowego - obroty przeterminowanych rozrachunkow
::  OLD: \def_okn/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
undefine();
_i:={? WIND_N.PRZED_TP<>0 || 2 || 1 ?};
{? _prz:=($('PAR_WYDR.IPAR'+$(_i)))(); _prz<>''  || define('P1',0,form(_prz,15),'',,,2) ?}; _i+=1;
{? _prz:=($('PAR_WYDR.IPAR'+$(_i)))(); _prz<>''  || define('P2',0,form(_prz,15),'',,,2) ?}; _i+=1;
{? _prz:=($('PAR_WYDR.IPAR'+$(_i)))(); _prz<>''  || define('P3',0,form(_prz,15),'',,,2) ?}; _i+=1;
{? _prz:=($('PAR_WYDR.IPAR'+$(_i)))(); _prz<>''  || define('P4',0,form(_prz,15),'',,,2) ?}; _i+=1;
{? _prz:=($('PAR_WYDR.IPAR'+$(_i)))(); _prz<>''  || define('P5',0,form(_prz,15),'',,,2) ?}; _i+=1;
{? _prz:=($('PAR_WYDR.IPAR'+$(_i)))(); _prz<>''  || define('P6',0,form(_prz,15),'',,,2) ?}; _i+=1;
{? _prz:=($('PAR_WYDR.IPAR'+$(_i)))(); _prz<>''  || define('P7',0,form(_prz,15),'',,,2) ?}


\add_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Obroty przeterminowanych rozrachunkow - naliczanie wartosci
::  OLD: \add_war/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
_i:={? WIND_N.PRZED_TP<>0 || 2 || 1 ?};
{? _prz:=($('PAR_WYDR.IPAR'+$(_i)))(); _prz<>''  || DEFINE.P1+=TAB_WIN.P1 ?}; _i+=1;
{? _prz:=($('PAR_WYDR.IPAR'+$(_i)))(); _prz<>''  || DEFINE.P2+=TAB_WIN.P2 ?}; _i+=1;
{? _prz:=($('PAR_WYDR.IPAR'+$(_i)))(); _prz<>''  || DEFINE.P3+=TAB_WIN.P3 ?}; _i+=1;
{? _prz:=($('PAR_WYDR.IPAR'+$(_i)))(); _prz<>''  || DEFINE.P4+=TAB_WIN.P4 ?}; _i+=1;
{? _prz:=($('PAR_WYDR.IPAR'+$(_i)))(); _prz<>''  || DEFINE.P5+=TAB_WIN.P5 ?}; _i+=1;
{? _prz:=($('PAR_WYDR.IPAR'+$(_i)))(); _prz<>''  || DEFINE.P6+=TAB_WIN.P6 ?}; _i+=1;
{? _prz:=($('PAR_WYDR.IPAR'+$(_i)))(); _prz<>''  || DEFINE.P7+=TAB_WIN.P7 ?}


\be_gobr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Grupa przed dla liczenia obrotow
::  OLD: \be_gobr/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
exec('def_okn','!fks_rwp_dlad'); 1


\gentree
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Zapelnianie tabelki tymczasowej
::   WE: _a - 1 biezacy kontrahent (w buforze), 2 - wszyscy kontrahenci
::  OLD: \gentree/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
echo();
wprz:=obj_new(7); wkh:=obj_new(7); wodd:=obj_new(7); wkon:=obj_new(7);
_odd:=_konto:='';
ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
TAB_WIN.cntx_psh(); TAB_WIN.index(ind_win2);
WIND_OP.cntx_psh(); WIND_OP.index('DRZEWKO');
KH.cntx_psh(); KH.index('KOD'); KH.prefix();
{? _a=1 | (_a=2 & KH.first())
|| {! |?
      echo('Generowanie dla kontrahenta: %1'@[KH.KOD]);
      {! _i:=1..7 |! wprz[_i]:=wkh[_i]:=wodd[_i]:=wkon[_i]:=0 !};
      TAB_WIN.prefix(KH.KOD,KH.KOD);
      WIND_OP.prefix(KH.KOD,KH.KOD);
      {? WIND_OP.first() & ~TAB_WIN.first()
      ||  {! |?
            {! _i:=1..7 |! wprz[_i]:=0 !};
            _prz:={? WIND_N.PRZED_TP<>0 || WIND_OP.PRZ-1 || WIND_OP.PRZ ?};
            ($('wprz['+$(_prz)+']:=WIND_OP.KW$2'))();
            ($('wkh['+$(_prz)+']+=WIND_OP.KW$2'))();
            ($('wkon['+$(_prz)+']+=WIND_OP.KW$2'))();
            ($('wodd['+$(_prz)+']+=WIND_OP.KW$2'))();
            _wart:=6*' '+'- '+WIND_OP.SYM;
            _wart_pel:={? WIND_N.KHKODSKR=0  || KH.SKR || KH.KOD ?}+
                       WIND_OP.AN+WIND_OP.ODD().OD+WIND_OP.SYM+WIND_OP.SYM_ZEW;
            _konto:=WIND_OP.AN; _odd:=WIND_OP.ODD().OD; _odd_ref:=WIND_OP.ODD;
            exec('addtree','!fks_rwp_dlad',0,KH.KOD,KH.SKR,_wart,4,_wart_pel,wprz[1],wprz[2],wprz[3],
                                     wprz[4],wprz[5],wprz[6],wprz[7],_odd,_konto,KH.ref(),
                                     WIND_OP.SYM,_odd_ref,WIND_OP.TZ,WIND_OP.DO);
            WIND_OP.cntx_psh();
            _next:=WIND_OP.next();
            {? ~_next | (_next & (_odd<>WIND_OP.ODD().OD | _konto<>WIND_OP.AN))
            || _wart_pel:={? WIND_N.KHKODSKR=0  || KH.SKR || KH.KOD ?}+_konto+_odd;
               _wart:=4*' '+'+ '+_odd;
               _ref:=exec('addtree','!fks_rwp_dlad',0,KH.KOD,KH.SKR,_wart,3,_wart_pel,wodd[1],wodd[2],wodd[3],
                                              wodd[4],wodd[5],wodd[6],wodd[7],
                                              _odd,_konto,KH.ref(),'',_odd_ref,date(0,0,0),date(0,0,0));
               {? _ref<>null
               || TAB_WIN.cntx_psh();
                  TAB_WIN.index(ind_win9); TAB_WIN.prefix(4,_wart_pel);
                  {? TAB_WIN.first() || {! |? TAB_WIN.TREE:=_ref; TAB_WIN.put(); TAB_WIN.next() !} ?};
                  TAB_WIN.cntx_pop()
               ?};
               {! _i:=1..7 |! wodd[_i]:=0 !}
            ?};
            {? ~_next | (_next & _konto<>WIND_OP.AN)
            || _wart_pel:={? WIND_N.KHKODSKR=0  || KH.SKR || KH.KOD ?}+_konto;
               _wart:=2*' '+'+ '+_konto;
               _ref:=exec('addtree','!fks_rwp_dlad',1,KH.KOD,KH.SKR,_wart,2,_wart_pel,wkon[1],wkon[2],wkon[3],
                                              wkon[4],wkon[5],wkon[6],wkon[7],
                                              '',_konto,KH.ref(),'',null,date(0,0,0),date(0,0,0));
               {? _ref<>null
               || TAB_WIN.cntx_psh();
                  TAB_WIN.index(ind_win9); TAB_WIN.prefix(3,_wart_pel);
                  {? TAB_WIN.first() || {! |? TAB_WIN.TREE:=_ref; TAB_WIN.put(); TAB_WIN.next() !} ?};
                  TAB_WIN.cntx_pop()
               ?};
               {! _i:=1..7 |! wkon[_i]:=0 !}
            ?};
            WIND_OP.cntx_pop();
            WIND_OP.next()
         !};
         {? WIND_OP.first()
         || _wart_pel:={? WIND_N.KHKODSKR=0  || KH.SKR || KH.KOD ?};
            _wart:='+ '+_wart_pel;
            _ref:=exec('addtree','!fks_rwp_dlad',1,KH.KOD,KH.SKR,_wart,1,_wart_pel,wkh[1],wkh[2],wkh[3],wkh[4],
                                           wkh[5],wkh[6],wkh[7],'','',KH.ref(),'',null,date(0,0,0),
                                           date(0,0,0));
            {? _ref<>null
            || TAB_WIN.cntx_psh();
               TAB_WIN.index(ind_win9); TAB_WIN.prefix(2,_wart_pel);
               {? TAB_WIN.first() || {! |? TAB_WIN.TREE:=_ref; TAB_WIN.put(); TAB_WIN.next() !} ?};
               TAB_WIN.cntx_pop()
            ?};
            {! _i:=1..7 |! wkh[_i]:=0 !}
         ?}
      ?};
      _a=2 & KH.next()
   !}
?};
ODD.cntx_pop(); WIND_OP.cntx_pop(); KH.cntx_pop(); TAB_WIN.cntx_pop();
VAR_DEL.delete('wprz','wkh','wodd','wkon'); echo()


\addtree
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Dodawanie rekordow do tabeli tymczasowej
::   WE: _a - widoczna pozycja, _b - kod kontrahenta, _c - skrot kontrahenta
::       _d - wartosc, _e - poziom, _f - pelna wartosc,  _g - _m - wartosci przedzialow,
::       _n - jednostka ksiegowa, _o - konto, _p - ref KH, _q - symbol rozrachunku,
::       _r - ref jednostki ksiegowej, _s - termin platnosci rozrachunku,
::       _t - data otwarcia rozrachunku
::   WY: ref dodanego zapisu lub null jesli sie nie udalo
::  OLD: \addtree/windyk1.fml
::----------------------------------------------------------------------------------------------------------------------
TAB_WIN.blank();
TAB_WIN.TREE:=0;
TAB_WIN.WID:=_a;
TAB_WIN.KHKOD:=_b;
TAB_WIN.KHSKR:=_c;
TAB_WIN.POZIOM:=_e;
TAB_WIN.WART:=_d;
{? TAB_WIN.POZIOM=4
|| TAB_WIN.WARTTRE1:=6*' '+'- '+WIND_OP.SYM;
   TAB_WIN.SYM_ZEW:={? WIND_OP.SYM<>WIND_OP.SYM_ZEW & WIND_OP.SYM_ZEW<>''
                    || 8*' '+'('+WIND_OP.SYM_ZEW+')'
                    || ''
                    ?};
   TAB_WIN.WARTTREE:=WIND_OP.SYM+
                     {? WIND_OP.SYM<>WIND_OP.SYM_ZEW & WIND_OP.SYM_ZEW<>''
                     || ' ('+WIND_OP.SYM_ZEW+')'
                     || ''
                     ?}
|| TAB_WIN.WARTTREE:=(2-|_d)
?};
TAB_WIN.PELWART:=_f;
TAB_WIN.P1:=_g;
TAB_WIN.P2:=_h;
TAB_WIN.P3:=_i;
TAB_WIN.P4:=_j;
TAB_WIN.P5:=_k;
TAB_WIN.P6:=_l;
TAB_WIN.P7:=_m;
TAB_WIN.ODDZIAL:=_n;
TAB_WIN.KONTO:=_o;
TAB_WIN.REF_KH:=#_p;
TAB_WIN.OP_SYM:=_q;
TAB_WIN.ODD_REF:=#_r;
TAB_WIN.TZ:=_s;
TAB_WIN.DO:=_t;
TAB_WIN.SYM_ROK:=exec('op_unik_sym','rozrach',TAB_WIN.OP_SYM,TAB_WIN.DO);
{? TAB_WIN.POZIOM=4 || TAB_WIN.DO_STR:=$TAB_WIN.DO ?};
TAB_WIN.cntx_psh(); TAB_WIN.prefix();
_ref:={? TAB_WIN.add() || TAB_WIN.ref() || null ?};
TAB_WIN.cntx_pop();
_ref


\wind_not
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Akcja Notatka w okienku tabeli WIND_KH
::  OLD: \wind_not/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh(); KH.prefix();
WIND_NOT.cntx_psh();
TAB_MEM:=tab_tmp(1,'N','INTEGER','',
                   'T','STRING[121]','Treść');
_sel:=TAB_MEM.mk_sel('Notatka'@,,0,'tab_mem_wer');
TAB_MEM.win_fld(_sel,,'T');
TAB_MEM.win_act(_sel,1,'Formuła','Dołącz'@@,,'Dołączanie notatki'@,"exec('add_memo','!fks_rwp_dlad')",,1);
TAB_MEM.win_act(_sel,0,'Formuła','Usuń'@@,,'Usuwanie notatki'@,"exec('del_memo','!fks_rwp_dlad')");
TAB_MEM.win_act(_sel,0,'Formuła','Popraw'@@,,'Poprawianie notatki'@,"exec('edi_memo','!fks_rwp_dlad')",,1);
TAB_MEM.win_sel(_sel);
WIND_NOT.index('KOD'); WIND_NOT.prefix(WIND_KH.KH().KOD,KH.KOD);
{? WIND_NOT.first()
|| WIND_NOT.memo_get(,'NOTATKA');
   _txt:=WIND_NOT.memo_txt(0,1,'NOTATKA');
   exec('mem_copy','kontrahent',_txt,121,'TAB_MEM')
?};
TAB_MEM.select();
VAR_DEL.delete('TAB_MEM');
KH.cntx_pop(); WIND_NOT.cntx_pop()


\edi_memo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Edycja notatki dla pozycji - analizy działań windykacyjnych
::  OLD: \edi_memo/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
{? WIND_NOT.memo_get(,'NOTATKA') & WIND_NOT.memo_edit(,'NOTATKA')
|| WIND_NOT.memo_put(,'NOTATKA');
   _txt:=WIND_NOT.memo_txt(0,1,'NOTATKA');
   TAB_MEM.cntx_psh();
   exec('mem_copy','kontrahent',_txt,121,'TAB_MEM');
   TAB_MEM.cntx_pop()
?}


\add_memo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Dodawanie notatki dla pozycji - analizy działań windykacyjnych
::  OLD: \add_memo/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
WIND_NOT.cntx_psh();
KH.cntx_psh(); KH.prefix(); WIND_KH.KH();
WIND_NOT.index('KOD'); WIND_NOT.prefix(KH.KOD,KH.KOD);
_ok:={? ~WIND_NOT.first()
     || WIND_NOT.KOD:=KH.KOD;
        {? WIND_NOT.add()
        || _ref:=WIND_NOT.ref();
           1
        ?}
     || _ref:=WIND_NOT.ref();
        1
     ?};
{? _ok
|| {? WIND_NOT.memo_get(,'NOTATKA') & WIND_NOT.memo_edit(,'NOTATKA')
   || WIND_NOT.memo_put(,'NOTATKA');
      _txt:=WIND_NOT.memo_txt(0,1,'NOTATKA');
      exec('mem_copy','kontrahent',_txt,121,'TAB_MEM');
      TAB_MEM.first()
   || WIND_NOT.del()
   ?}
?};
KH.cntx_pop(); WIND_NOT.cntx_pop();
{? _ref<>null || WIND_NOT.seek(_ref) ?}


\del_memo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.70]
:: OPIS: Usuwanie notatki dla pozycji - analizy działań windykacyjnych
::  OLD: \del_memo/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć notatkę?'@)
|| TAB_MEM.erase();
   WIND_NOT.cntx_psh();
   KH.cntx_psh(); KH.prefix(); WIND_KH.KH();
   WIND_NOT.index('KOD'); WIND_NOT.prefix(KH.KOD,KH.KOD);
   {? WIND_NOT.first() || WIND_NOT.del() ?};
   KH.cntx_pop(); WIND_NOT.cntx_pop()
?}


\wind_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.62]
:: OPIS: Aktualizacja kontrahenta w anlizie
::  OLD: \wind_akt/windyk.fml
::----------------------------------------------------------------------------------------------------------------------
WIND_KH.unlock();
{? WIND_KH.lock(1,1)
|| KH.index('KOD'); KH.prefix(2);
   _wer:=KH.mk_sel('Wybierz kontrahenta do aktualizacji'@,'P',,'kh_wer2');
   KH.win_fld(_wer,,'KOD',,,8);
   KH.win_fld(_wer,,'SKR',,,10);
   KH.win_fld(_wer,,'NAZ',,,50);
   KH.win_act(_wer,0,'Formuła','Aktualizuj dane'@@,,,,"sel_exit",1);
   KH.win_act(_wer,0,'Szukaj');
   KH.win_act(_wer,0,'Kolejność');
   KH.win_sel(_wer);
   {? WIND_KH.size() || WIND_KH.KH() || WIND_KH.first() ?};
   _kh_kod:='';
   {? KH.select(,1)
   || _kh_kod:=KH.KOD; exec('tmp_ods','rozrach_ods');
      do();
      WIND_OP.index('KH'); WIND_OP.prefix(KH.ref());
      {? WIND_OP.first() || {!|? WIND_OP.del() !} ?};
      WIND_KH.index('KOD'); WIND_KH.prefix(KH.KOD);
      {? WIND_KH.first() || {!|? WIND_KH.del() !} ?};
      exec('gen_poj','rozrach');
      echo();
      end();
      {? ODS_TMP1.first() || exec('pyt_pok','rozrach_ods') ?};
      exec('del_tmp','rozrach_ods');
      selexit:=1; sel_exit()
   ?};
   exec('akt_not','rozrach');
   exec('akt_sum','rozrach');
   WIND_KH.lock(0,1);
   {? _kh_kod<>''
   || _ref:=null;
      WIND_KH.cntx_psh();
      WIND_KH.index('KOD'); WIND_KH.prefix(_kh_kod);
      {? WIND_KH.first() & WIND_KH.KH().KOD=_kh_kod || _ref:=WIND_KH.ref() ?};
      WIND_KH.cntx_pop();
      {? _ref<>null || wind_akt:=1; WIND_KH.seek(_ref) ?}
   ?}
|| WIND_KH.lock(0,1); FUN.info('Analizę obsługuje inny operator.'@)
?}


\wind_op_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Trigger dla tabeli WIND_OP - add przed i put przed
::  OLD: \wind_op_trig/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? WIND_OP.SYM_ZEW='' || WIND_OP.SYM_ZEW:=WIND_OP.SYM ?};
1


\be_odd_wind_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed redakcją pola WIND_N.ODD
::----------------------------------------------------------------------------------------------------------------------
~OPERATOR.DEPT


\param_rwp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Parametry pracy obszaru działań windykacyjnych
::----------------------------------------------------------------------------------------------------------------------
_rok:=SSTALE.AR;
_odd:=OPERATOR.DEPT;
_wal:=SSTALE.WAL;
{? __PARSES.editDom('FKS')
|| {? _rok<>SSTALE.AR | _odd<>OPERATOR.DEPT | _wal<>SSTALE.WAL
   || _an:=OP.AN; _tz:=OP.TZ; _sym:=OP.SYM; _do:=OP.DO; _st:=OP.STAN; _usym:=OP.SYM_ROK;
      _p:=ROZNE.PREFIX; ROZNE.PREFIX:='';
      _m:=ROZNE.MASKA; ROZNE.MASKA:='';
      {? OPERATOR.DEPT=null
      || WIND_N.index('DATA'); WIND_N.prefix(REF.FIRMA,SSTALE.WAL)
      || WIND_N.index('DATA_O'); WIND_N.prefix(REF.FIRMA,SSTALE.WAL,OPERATOR.DEPT)
      ?};
      AreaTitle.setTabWin(WIND_N,'WER');
      AreaTitle.setTitle()
   ?}
?}

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:39 a56eee74f0c61074f7a0ba2adeb51f6034c76c3c8e53f59f77f3dbbebda8b07aa7916fc26ac3d4e2d7ad73772c22b3f8e166fa3c00fe12968220b024c0bfe0d68348be27c2fafd0ae50e766bdac3864ffe7c661153234e55bc0086df9418afce4945ce35eaef3bca9c9f601a279f2c6615028cc018153c0b87214ea950abc2db
