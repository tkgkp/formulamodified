:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !hbn_prz_drow.fml
:: Utworzony: 13.05.2015
:: Autor: PJ
::======================================================================================================================
:: Zawartość: Formuły czynności HBN_PRZ_DROW - tworzenie przelewów z rozrachunków
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przelewy z rozrachunków - główna formuła czynności HBN_PRZ_XSKL.
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS,HRB,HRP
::# properties=LOOP
:: PARAMETRY WE:
::# kind=WE, symbol=TM_STAMP, type=STRING, name=Znacznik czasowy, required=N
::# kind=WE, symbol=OP, type=_OP, name=Rozrachunek, required=N
:: PARAMETRY WY:
::# kind=WY, symbol=TM_STAMP, type=STRING, name=Znacznik czasowy, required=N
::# kind=WY, symbol=PB, type=_PB, name=Wskazanie na przelew, required=N
exec('F','object');
exec('czytaj','#stalesys',,HINFO);
exec('czytaj','#stalesys',,FINFO);
exec('czytaj','#stalesys',,XINFO);
_args:=params_get();
_we:=_args.in;
_wy:=_args.out;
_mp:=_args.mp;
{? _we.TM_STAMP<>~~
|| PbStamp:=_we.TM_STAMP;
   _tab:=exec('first','!hbn_prz_drow',PbStamp);
   {? _tab.PB
   || _wy.PB:=_tab.PB;
      _wy.TM_STAMP:=PbStamp;
      _mp.save(,_wy);
      {? _tab.NEXT
      || _mp.loop_continue()
      ?};
      _mp.done()
   ?}
|? var_press('OP',_we)>0
|| OP.cntx_psh();
   DOK.cntx_psh(); POZ.cntx_psh(); POW.cntx_psh();
   AN.cntx_psh(); AN_SLU.cntx_psh();
   exec('open','rozrach',SSTALE.AR().KOD+form(SSTALE.AO().NR,-2));
   OP.prefix();
   {? OP.seek(_we.OP)
   || {? exec('gen_kon','rozrach_przel')
      || _wy.PB:=PB.ref();
         _mp.save(,_wy);
         _mp.done()
      ?}
   ?};
   AN.cntx_pop(); AN_SLU.cntx_pop();
   DOK.cntx_pop(); POZ.cntx_pop(); POW.cntx_pop();
   OP.cntx_pop()
|| PbStamp:=tm_stamp();
   exec('f_pbgen','!hbn_prz_drow');
   _tab:=exec('first','!hbn_prz_drow',PbStamp);
   {? _tab.PB
   || _wy.PB:=_tab.PB;
      _wy.TM_STAMP:=PbStamp;
      _mp.save(,_wy);
      {? _tab.NEXT
      || _mp.loop_continue()
      ?};
      _mp.done()
   ?}
?};
VAR_DEL.delete('PbStamp')


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Opis na liście TODO czynności
::----------------------------------------------------------------------------------------------------------------------
'Utwórz przelewy z rozrachunków'@@


\f_pbgen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Generowanie przelewow elektronicznych.
::  OLD: \f_pbgen/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
_vt:='Generowanie przelewów elektronicznych'@;
g_rachb:='';
g_rb:='';
{? var_pres('GIODOTMP')>0 || VAR_DEL.delete('GIODOTMP') ?}; 
exec('ini_tmp','giodo');
WYDRUKIN.DATPRZEK:=date();
WYDRUKIN.REJPRZEK:=1;
{? ROZNE.ROKKON=null
|| exec('szuk_okr','okresy',date());
   {? ROZNE.UT_OKROD<>null
   || ROZNE.ROKKON:=anal_rok:=SSTALE.AR:=ROZNE.UT_OKROD().ROK;
      SSTALE.AO:=ROZNE.UT_OKROD;
      exec('open_tabele','open_tab','F')
   ?}
?};
pbcn:=pbcnp:=pbst:=danodane:=0;
PB.cntx_psh();
OP.cntx_psh();
SLU.index('POM');
SLU.prefix('T');
UNPAR.P1:=UNPAR.P2:=UNPAR.P3:=UNPAR.P7:=0;
UNPAR.P1_BE:=UNPAR.P2_BE:=UNPAR.P2_AE:=UNPAR.P3_BE:=UNPAR.P4_BE:=UNPAR.P4_AE:=UNPAR.P5_BE:=UNPAR.P5_AE:='';
UNPAR.P4:=UNPAR.P5:=date(0,0,0);
UNPAR.P1_AE:='{? UNPAR.P1=1 || KONTO.K2:=KONTO.K3:=KONTO.K4:=\'\' |? UNPAR.P1=2 || KONTO.K1:=KONTO.K3:=KONTO.K4:=\'\''
   +'|? UNPAR.P1=3 || KONTO.K1:=KONTO.K2:=\'\' ?}; exec(\'set_efld_opt\',\'!hbn_prz_drow\')';
UNPAR.P3_AE:='{? UNPAR.P3=1 || UNPAR.P7:=0 ?}; 1';
UNPAR.P7_BE:='UNPAR.P3=2';
UNPAR.P7_AE:='';
KONTO.K1:=35*'?';
KONTO.K2:=KONTO.K3:=KONTO.K4:='';
KONTO.K1_WYM:=KONTO.K2_WYM:=KONTO.K1_SYNT:=KONTO.K2_SYNT:=KONTO.K3_SYNT:=KONTO.K4_SYNT:=0;
KONTO.K3_WYM:=KONTO.K4_WYM:=1;
KONTO.K1_RODZ:=2;
KONTO.K2_RODZ:=KONTO.K3_RODZ:=KONTO.K4_RODZ:=3;
KONTO.K1_BE:='g_rb:=RACHBANK.KB_1R; {? UNPAR.P1=1 || 1 || 0 ?}';
KONTO.K1_AE:=KONTO.K2_AE:=KONTO.K3_AE:=KONTO.K4_AE:='exec(\'set_kbr\',\'rozrach_przel\'); RACHBANK.KB_1R:=g_rb';
KONTO.K2_BE:='g_rb:=RACHBANK.KB_1R; {? UNPAR.P1=2 || 1 || 0 ?}';
KONTO.K3_BE:=KONTO.K4_BE:='g_rb:=RACHBANK.KB_1R; {? UNPAR.P1=3 || 1 || 0 ?}';
RACHBANK.KB_1R:=RACHBANK.KB_1R_BD:=RACHBANK.KB_1R_BE:=RACHBANK.KB_1R_F3:=RACHBANK.KB_1R_AE:='';
WYDRUKIN.DATA:=date();
WYDRUKIN.DLKON:=35;
PAR_WYDR.PAR2:=PAR_WYDR.PAR3:=PAR_WYDR.RPAR4:=0; PAR_WYDR.SLPAR2:='';
ROZRACH.OPIS2:='';
ROZRACH.SUM1:=ROZRACH.SUM2:=ROZRACH.SUM3:=0;
ROZRACH.SUM1_VAT:=ROZRACH.SUM2_VAT:=ROZRACH.SUM3_VAT:=0;
ROZRACH.TABELA:='OP';
SER_KOR.SER_SCH:=BILANSP.SL1_N:=null;
exec('set_kbr','rozrach_przel');
{? var_pres('TT_KHRB')>0 || obj_del(TT_KHRB) ?};
TT_KHRB:=tab_tmp(2,'KH','STRING[10]','KH','RB','REAL','RB');
{? var_pres('v_zakr')>0
|| WYDRUKIN.win_edit('PB_GENKH');
   _vkh:={? v_zakr=3 || KH.ref() ?}
|| {? PAR_SKID.get(68)<>'N' || WYDRUKIN.win_edit('PB_GENW') || WYDRUKIN.win_edit('PB_GEN') ?};
   _vkh:=null
?};
WYDRUKI.WAL:={? PAR_SKID.get(68)<>'N' || SSTALE.WAL || FINFO.NAROD ?};
_par_73:=exec('get_par','#parametr',73);
WYDRUKIN.STOPE:='N';
PAR_WYDR.GEN_SP:='N';
UNPAR.P1:=1; 
exec('set_efld_opt','!hbn_prz_drow');
_opcja:=WYDRUKI.WAL<>FINFO.NAROD;
WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'mark='+$_opcja,ROZNE,'RODZZAGR','KOD');
WYDRUKI.fld_fml('WAL','AFTER_EDIT',"{? WYDRUKI.WAL<>FINFO.NAROD 
                                    || WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'mark=1',ROZNE,'RODZZAGR','KOD') 
                                    || WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'mark=0',ROZNE,'RODZZAGR','KOD') 
                                    ?};
                                     win_disp()");
{? WYDRUKIN.edit("exec('f_pbgenc','!hbn_prz_drow')")
|| g_rachb:=RACHBANK.KB_1R;
   SKID_RBK.cntx_psh();
   _t_rach:=RB.get_rbel(2,RACHBANK.KB_1R);
   SKID_RBK.index('NUMER');
   SKID_RBK.prefix(_t_rach,_t_rach);
   _pln:=0;
   {? SKID_RBK.first() || _pln:=SKID_RBK.WAL().KOD='PLN' ?};
   SKID_RBK.cntx_pop();

   {? var_pres('v_zakr')>0 & v_zakr=3 || KH.seek(_vkh) ?};
   WYDRUKI.MASKA:=KONTO.K1;
   {? UNPAR.P1=2 || WYDRUKI.MASKA:=KONTO.K2 ?};
   {? +WYDRUKI.MASKA<35 || WYDRUKI.MASKA+=(35-+WYDRUKI.MASKA)*'?' ?};
   KH.index('KOD');
   KH.prefix(2);
   KH.win_dict('WERHOME2');
   v_user1:=tm_form(OPTMP.tm_stamp())+24;
   OPTMP.use('optmp__');
   OPTMP.index('ZNACZ');
   OPTMP.prefix(v_user1);
   {? UNPAR.P2=1
   || {? OPERATOR.DEPT
      || OP.index('STAN_O');
         {? UNPAR.P1=2
         || OP.prefix(WYDRUKI.WAL,OPERATOR.DEPT,'N',KONTO.K2)
         || OP.prefix(WYDRUKI.WAL,OPERATOR.DEPT,'N')
         ?}
      || OP.index('STAN');
         {? UNPAR.P1=2 || OP.prefix(WYDRUKI.WAL,'N',KONTO.K2) || OP.prefix(WYDRUKI.WAL,'N') ?}
      ?};
      {? OP.first()
      || {! |?
            {? ((UNPAR.P1=1 & exec('mask','konto',OP.AN)) | UNPAR.P1=2
               | (UNPAR.P1=3 & OP.AN>=KONTO.K3 & OP.AN<=KONTO.K4)) & (PAR_WYDR.GEN_SP='N' | 'TZW'*OP.SP)
            || {? OP.KH & KH.find_key(OP.KH().KOD)
                 & (_par_73='N' | exec('rozr_wal','rozrach_kor')=1)
               || exec('f_pbgent','!hbn_prz_drow',_pln)
               ?}
            ?};
            OP.next()
         !}
      ?}
   || {? var_pres('v_zakr')>0
      || OP.index('KH');
         _vkh:={? v_zakr=1 || OP.KH |? v_zakr=2 || WIND_KH.KH |? v_zakr=3 | v_zakr=4 || KH.ref() ?};
         {? OPERATOR.DEPT
         || {? UNPAR.P1=2
            || OP.prefix(WYDRUKI.WAL,_vkh,'N',OPERATOR.DEPT,KONTO.K2)
            || OP.prefix(WYDRUKI.WAL,_vkh,'N',OPERATOR.DEPT)
            ?}
         || OP.prefix(WYDRUKI.WAL,_vkh,'N')
         ?};
         {? OP.first()
         || {! |?
               {? (((UNPAR.P1=1 | UNPAR.P1=2) & exec('mask','konto',OP.AN))
                  | (UNPAR.P1=3 & OP.AN>=KONTO.K3 & OP.AN<=KONTO.K4)) & (PAR_WYDR.GEN_SP='N' | 'TZW'*OP.SP)
               || {? _par_73='N' | exec('rozr_wal','rozrach_kor')=1
                  || exec('f_pbgent','!hbn_prz_drow',_pln)
                  ?}
               ?};
               OP.next()
            !}
         ?}
      || exec('initmpkh','rozrach_kor');
         KH.select();
         {? TMPKH.first()
         || KH.index('KOD'); OP.index('KH');
            {! |? KH.prefix(2);
               {? KH.find_key(TMPKH.KOD)
               || {? OPERATOR.DEPT
                  || {? UNPAR.P1=2
                     || OP.prefix(WYDRUKI.WAL,KH.ref,'N',OPERATOR.DEPT,KONTO.K2)
                     || OP.prefix(WYDRUKI.WAL,KH.ref,'N',OPERATOR.DEPT)
                     ?}
                  || OP.prefix(WYDRUKI.WAL,KH.ref,'N')
                  ?};
                  {? OP.first()
                  || {! |?
                        {? (((UNPAR.P1=1 | UNPAR.P1=2) & exec('mask','konto',OP.AN))
                           | (UNPAR.P1=3 & OP.AN>=KONTO.K3 & OP.AN<=KONTO.K4)) & (PAR_WYDR.GEN_SP='N' | 'TZW'*OP.SP)
                        || {? _par_73='N' | exec('rozr_wal','rozrach_kor')=1
                           || exec('f_pbgent','!hbn_prz_drow',_pln)
                           ?}
                        ?};
                        OP.next()
                     !}
                  ?}
               ?};
               TMPKH.next()
            !}
         ?};
         exec('deltmpkh','rozrach_kor')
      ?}
   ?};
   KH.win_sel('WER');
   OPTMP.index('SYM');
   OPTMP.prefix(v_user1);
   OPTMP.win_fml('PB_GEN',,'KH','SKR','ICON_BEFORE',"{? OPTMP.KH_SP='T' || 'xwin16.png:143' || ''?}");
   OPTMP.win_fml('PB_GEN',,'SAL',,'ICON_BEFORE',"{? OPTMP.WAL2<>'' || 'xwin16.png:3' || ''?}");
   exec('set_rbop','rozrach_przel','OP');
   formikon:="exec('ikony','fks_sp',OP.SP)";
   OP.win_fml('WER2',,'SP',,'ICON_BEFORE',formikon);
   formikon:="exec('ikony','fks_sp',ZAP_OP.SP_WYM)";
   ZAP_OP.win_fml('ROZL1',,'SP_WYM',,'ICON_BEFORE',formikon);
   formikon:="exec('ikony','fks_sp',OPTMP.SPP)";
   OPTMP.win_fml('PB_GEN',,'SPP',,'ICON_BEFORE',formikon);
   OPTMP.win_fml('PB_ZB',,'SPP',,'ICON_BEFORE',formikon);
   formikon:="{? OPTMP.ZB='T' || 'xwin16.png:3' || '' ?}";
   OPTMP.win_fml('PB_GEN',,'ROZL',,'ICON_BEFORE',formikon);
   OPTMP.win_sel('PB_GEN_G');
   OPTMP.win_edit();
   OPTMP.win_patt('PB_SZUK');
   {? OPTMP.first()
   || ROZNE.SZUK:=1;
      OPTMP.hdr_sel(': %1 - wszystkie'@[WYDRUKI.WAL().KOD]);
      g_zakr:=2;
      OPTMP.select(,,,{? var_pres('v_zakr')<0 || '' || 'UA(K)' ?});
      &g_zakr;
      {? OPTMP.index('ZNACZ'); OPTMP.prefix(v_user1,'T'); OPTMP.first()
      || _vtx:='@'+_vt;
         {? FUN.choice('~~Wygenerować zatwierdzone przelewy?'@,,'Tak'@,,,,'Nie'@,_vtx)
         || exec('f_pbgenl','!hbn_prz_drow')
         ?}
      ?}
   || FUN.emsg('Brak płatności spełniających kryteria.'@)
   ?};
   OPTMP.index('SYM');
   OPTMP.prefix(v_user1);
   {? OPTMP.first() || {! |? OPTMP.del() !} ?};
   {? pbst
   || {? PB.f_active() || exec('sum_pb','hbn_filtr') ?}
   ?};
   &v_user1
?};
TYPYTRAN.actions('WER2');
RACHBANK.KB_5R_BD:='RACHBANK.KB_5R:=RB.get_rbtx(2,PB.RD,PB.NBD().KODISO().KODISO)';
&pbcn; &pbcnp; &pbst;
obj_del(TT_KHRB);
PB.cntx_pop();
OP.cntx_pop();
{? var_pres('g_pbref')>=0 & g_pbref || PB.seek(g_pbref); &g_pbref ?};
&g_rachb;
&danodane;
exec('del_tmp','giodo');
{? var_pres('g_rb')>=0 || &g_rb ?};
{? var_pres('DRB')>0
|| obj_del(DRB);
   &DRB;
   {? var_pres('t_drb')>0 || obj_del(t_drb); &t_drb ?}
?};
1


\f_pbgenc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Po redagowaniu parametrow generowania przelewow elektronicznych - formula kontrolna.
::  OLD: \f_pbgenc/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
_v:='';
{? RACHBANK.KB_1R=''
|| FUN.emsg('Nie podano numeru rachunku bankowego dłużnika.'@);
   _v:='KB_1R'
|| {? UNPAR.P1=3 & (KONTO.K3='' | KONTO.K4='')
   || FUN.emsg('Błędny zakres kont.'@);
      _v:='K3'
   || {? (UNPAR.P4<>date(0,0,0) & UNPAR.P5<UNPAR.P4) | (UNPAR.P4=date(0,0,0) & UNPAR.P5<>date(0,0,0))
      || FUN.emsg('Nieprawidłowy zakres dat.'@);
         _v:='P5'
      || {? WYDRUKI.WAL & WYDRUKI.WAL<>SSTALE.WAL
         || {? ~FUN.ask('Wybrano walutę przelewów inną niż waluta ustawiona w stałych systemu.\n'
                        'Utworzone przelewy będą widoczne dopiero po zmianie waluty w stałych systemu.'
                        '\nKontynuować?'@)
            || _v:='WAL'
            ?}
         ?}
      ?}
   ?}
?};
{? _v='' & WYDRUKI.WAL<>FINFO.NAROD & ROZNE.RODZZAGR=null()
|| {? ~FUN.ask('Brak rodzaju płatności dla przelewów walutowych.'
               '\nKontynuować?'@)
   ||  _v:='RODZZAGR'
   ?}
?};
{? _v=''
|| _rach:=RB.get_rbel(2,RACHBANK.KB_1R);
   SKID_RBK.cntx_psh();
   SKID_RBK.index('NUMER');
   SKID_RBK.prefix(_rach,_rach);
   _pln:=_vat:=0;
   {? SKID_RBK.first()
   || _pln:=SKID_RBK.WAL().KOD='PLN';
      _vat:=SKID_RBK.VAT='T'
   || FUN.emsg('Podany rachunek nie występuje w bazie rachunków licencjobiorcy.'@);
      _v:='KB_1R'
   ?};
   SKID_RBK.cntx_pop();
   {? _v='' & PAR_WYDR.GEN_SP='T' & ~_pln
   || FUN.emsg('Płatności typu Split payment są możliwe tylko z rachunku bankowego w PLN.'@);
      _v:='KB_1R'
   |? _v='' & PAR_WYDR.GEN_SP='N' & ~_pln
   || {? ~FUN.ask('Podany rachunek jest rachunkiem walutowym. Z rachunków walutowych nie można\n'
                  'będzie realizować płatności typu Split payment. Kontynuować?'@)
      || _v:='KB_1R'
      ?}
   ?};
   {? _v='' & _vat
   || {? ~FUN.ask('Podany rachunek jest rachunkiem do obslugi VAT (Split payment). Kontynuować?'@)
      || _v:='KB_1R'
      ?}
   ?}
?};
_v


\spr_got
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PMZ] [12.30] PR/WRT/XP/12.30/1408/0028
:: OPIS: Sprawdza czy rozrachunek nie posiada formę płatności gotówka
::   WY: _wyn - 1 ok / 0 forma płatności gotówkowa
::  OLD: \spr_got/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
_w:=1;
SLO.cntx_psh();
POZ.cntx_psh();
DOK.cntx_psh();
DOK_REJ.cntx_psh();
ZR_SLO.cntx_psh();
ZAP_OP.cntx_psh();
ZR_SLO.index('SLO_NR');
ZAP_OP.use('rozzap'+(OP.name()+2));
ZAP_OP.index('OP');
ZAP_OP.prefix(OP.ref());
{? ZAP_OP.first()
|| {!
   |? {? OP.TYP='ZOB' & ZAP_OP.MA<>0 & ZAP_OP.POZDOK<>null
      || POZ.use(form(($ZAP_OP.POZDOK)-8));
         POZ.prefix();
         {? POZ.seek(ZAP_OP.POZDOK)
         || DOK.use('doku'+(POZ.name()+4));
            _typ:=POZ.DOK().DOK_REJ().SLO().KOD;
            {? (_typ='VAT' | _typ='SAD' | exec('spr_vat_wto','!hbn_prz_drow')) & DOK.SP_PL<>null()
            || ZR_SLO.prefix(DOK.SP_PL,1);
               {? ZR_SLO.first & ZR_SLO.WAR='T'
               || _w:=0
               ?}
            ?}
         ?}
      ?};
   _w & ZAP_OP.next()
   !}
?};
DOK_REJ.cntx_pop();
SLO.cntx_pop();
ZR_SLO.cntx_pop();
DOK.cntx_pop();
POZ.cntx_pop();
ZAP_OP.cntx_pop();
_w


\waluta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [JH] [1210]
:: OPIS: Szuka rekordu w tabeli WAL dla wzorca podanego poarametrem
:: _a - Kod waluty
::  OLD: \waluta/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
_waluta:=null;
WAL.cntx_psh();
WAL.clear;
WAL.index('WAL_SYM');
WAL.prefix(_a,);
{? WAL.first()
||
  _waluta:=WAL.ref
?};
WAL.cntx_pop();
_waluta


\f_pbgent
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Dodaje rekord do tabeli tymczasowej OPTMP przy generowaniu przelewow elektronicznych.
::       Wykorzystanie pol tabeli OPTMP: OPTMP.DATA - OP.TZ (termin platnosci);
::          OPTMP.KH - OP.KH (kontrahent); OPTMP.KONTO - OP.AN (konto analityczne);
::          OPTMP.SYM - OP.SYM (symbol rozrachunku); OPTMP.SAL - kwota do zaplaty;
::          OPTMP.ODD - OP.ODD (jednostka ksiegowa);
::          OPTMP.RB - OP.RB (nr rachunku bankowego do zaplaty);
::          OPTMP.ZNACZ - znacznik zatwierdzenia do zaplaty
::   WE: [_a] = 1 z rachunku bankowego w PLN, 0 - z rachunku bankowego nie w PLN
::  OLD: \f_pbgent/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
:: Ustalenie schematu windykacyjnego
{? UNPAR.P3=1 || SER_KOR.DATA:=WYDRUKIN.DATA; exec('jakisch','rozrach') ?};
:: Warunek generowania przelewow - zakres terminow platnosci
{? var_pres('DRB',@.CLASS)<0 || exec('obj_drbt','raty') ?};
{? var_pres('DRB')>0 || obj_del(DRB) ?};
DRB:=obj_new(@.CLASS.DRB);
_vdsnd:={? UNPAR.P5<>date(0,0,0) || UNPAR.P5 || WYDRUKIN.DATA ?};
_vtp:={? DRB.set_tab(OP.ref()) || DRB.get_drat(_vdsnd) || OP.TZ ?};
_vtzo:=UNPAR.P4;
{? SER_KOR.SER_SCH=null
|| _vczw:='N'; _vzw:=0
|| _vczw:=SER_KOR.SER_SCH().CZY_ZWPL;
   _vzw:=SER_KOR.SER_SCH().ZW_PL
?};
{? ((UNPAR.P3=1 & ((_vczw='T' & ((_vdsnd-_vtp)>=_vzw & ((_vtzo<>date(0,0,0)
   & (_vtzo-_vtp)<=_vzw) | _vtzo=date(0,0,0)))) | (_vczw='N' & ((_vdsnd-_vtp)>=0
   & ((_vtzo<>date(0,0,0) & (_vtzo-_vtp)<=UNPAR.P7) | _vtzo=date(0,0,0)))))) | (UNPAR.P3=2
   & (_vdsnd-_vtp)>=UNPAR.P7 & ((_vtzo<>date(0,0,0) & (_vtzo-_vtp)<=UNPAR.P7)
   | _vtzo=date(0,0,0))) ) & exec('spr_got','!hbn_prz_drow')
:: Utworzenie rekordu w OPTMP
|| OPTMP.blank();
   OPTMP.SAL:=exec('f_pbgnt2','homebank',_vdsnd);
   OPTMP.F_VAT:={? exec('chk_fvat','hbn',OPTMP) || 'T' || 'N' ?};
   {? (OPTMP.SAL<>0 & PAR_WYDR.RPAR4=0) | (OPTMP.SAL<>0 & OPTMP.SAL>=PAR_WYDR.RPAR4)
   || OPTMP.USER:=v_user1;
      OPTMP.DATA:=_vtp;
      OPTMP.KH:=OP.KH;
      OPTMP.KONTO:=OP.AN;
      OPTMP.SYM:=OP.SYM;
      OPTMP.SYM_ZEW:=OP.SYM_ZEW;
      OPTMP.ODD:=OP.ODD;
      OPTMP.WAL:=exec('waluta','!hbn_prz_drow',OP.WAL().KOD);
      OPTMP.WAL2:=exec('czywal','dok_fks_ks',FINFO.NAROD);
      {? var_press('KH_SIZE',OPTMP)>0
      || OPTMP.KH_SIZE:=OP.KH().WIELKOSC;
         ZAP_OP.cntx_psh();
         ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref);
         {? ZAP_OP.first()
         || OPTMP.ZAPOPD:=date()-ZAP_OP.DATA
         ?};
         ZAP_OP.cntx_pop();
         OPTMP.DNI_WYM:={? -XINFO.WIELKOSC='publiczny' || XINFO.L_D_PUB || XINFO.L_D_POZ ?};
         OPTMP.DNI_PT:={? (_dni_tp:=OPTMP.ZAPOPD-OPTMP.DNI_WYM)>0 || _dni_tp || 0 ?}
      ?};

:: obsluga Split payment
      _par92:=PAR_SKID.get(92);
      {? _par92='W' & OP.SP='W'
      || OPTMP.SP:='T'
      |? _par92='W' & OP.SP<>'W'
      || OPTMP.SP:='N'
      |? _par92='S' & OP.SP<>'N'
      || OPTMP.SP:='T'
      |? _par92='S' & OP.SP='N'
      || OPTMP.SP:='N'
      |? _par92='Z' & (OP.SP='W' | OP.SP='Z')
      || OPTMP.SP:='T'
      || OPTMP.SP:='N'
      ?};
      OPTMP.SPP:=OP.SP;
      OPTMP.KH_SP:={? exec('czy_kh_sp','homebank',OPTMP.KH) || 'T' || 'N' ?};
:: jeżeli rozrachunek SP ale w danych kontrahenta wyłączono domyślnie SP to pole nieznaczone, ale dostępne do edycji
      {? OPTMP.SP='T' & OPTMP.KH<>null & OPTMP.KH_SP='N' || OPTMP.SP:='N' ?};
      {? OPTMP.SP<>'T' & 'WZ'*OPTMP.SPP
      || OPTMP.SP:='T'
      ?};
      {? OPTMP.SP='T'
      || OPTMP.SP_VSAL:=exec('pb_saldovat','homebank');
         OPTMP.KW2:=exec('f_vat','fks_sp');
         OPTMP.SP_VDOZ:=0
      ?};
:: jeżeli rachunek licencjobiorcy nie w PLN to wyłącza możliwość płacenia przez Split payment
      {? _a=0 || OPTMP.SP:=OPTMP.SPP:='N' ?};
      OPTMP.SP_VSAL:=exec('pb_saldovat','homebank');
      OPTMP.KW2:=exec('f_vat','fks_sp');
      _zapv:=OPTMP.KW2-OPTMP.SP_VSAL;
      _swym:=exec('wym_vat','fks_sp','W');
      _szal:=exec('wym_vat','fks_sp','Z');
      OPTMP.SP_VWYM:=_swym-_zapv;
      {? OPTMP.SP_VWYM<0 || OPTMP.SP_VWYM:=0 ?};
      _zapv-=_swym; {? _zapv<0 || _zapv:=0 ?};
      OPTMP.SP_VZAL:=_szal-_zapv;
      {? OPTMP.SP_VZAL<0 || OPTMP.SP_VZAL:=0 ?};
      _nspp:='T';
      {? OPTMP.SP_VWYM || _nspp:='W'
      |? OPTMP.SP_VZAL || _nspp:='Z'
      ?};
      _p1:='NTZW'*OPTMP.SPP;
      _p2:='NTZW'*_nspp;
      {? _p2<_p1
      || OPTMP.SPP:=_nspp
      ?};
      OPTMP.ZNACZ2:='N';
      {? 'TZW'*OP.SP & XINFO.SP_F_ZAL<>''
      || _zal:=($XINFO.SP_F_ZAL)();
         OPTMP.ZNACZ2:={? _zal || 'T' || 'N' ?}
      ?};
      OPTMP.ZB:={? exec('is_zb','rozrach_przel') || 'T' || 'N' ?};
      OPTMP.DATA_OD:=OP.DSP;
      OPTMP.SP_VDOZ:=0;

      {? OPTMP.SP='N'
      || OPTMP.SP_VSAL:=OPTMP.KW2:=0;
         OPTMP.SP_VWYM:=OPTMP.SP_VZAL:=0
      ?};
:: część MacLex-owa została wykomentowana w pierwszej wersji systemu Merit
::Poczatek modyfikacji dla Maclex
:: wersja z podzialem na strukture budzetowa (rozdzial, paragraf)
::        Dla jednego rozrachunku moga wystapic rozne kody budzetowe - zostana rozdzielone dla parametru 222='T'
::        Dla parametru 222='N' przy roznych kodach budzetowych zostanie przyjety ten dla najwiekszej kwoty
::      _ps221:=PAR_SKID.get(221)='T';
::      {? MLEX.FIKSB & _ps221
::      ||
::         exec('prze3','ml_przel', OPTMP.ODD,OPTMP.KONTO,OPTMP.SYM);
::         {? var_pres('__Optmpb')>0 & __Optmpb.first
::         || _licz:=1;
::            _ps222:=PAR_SKID.get(222)='T';
::            {!
::            |?
::               {? _ps222 | _licz=1
::               ||
::                  OPTMP.RZ:=__Optmpb.PROZ;
::                  OPTMP.PG:=__Optmpb.PPAR;
::                  OPTMP.ZAD:=__Optmpb.PZAD;
::                  OPTMP.SAL:=__Optmpb.SAL;
::                  OPTMP.TYT:={? _ps221
::                             || exec('prze1','ml_przel',OPTMP.RZ,OPTMP.PG,OPTMP.ZAD)+' '
::                             || ''
::                             ?}+ROZRACH.OPIS2;
::                  OPTMP.SYM_ROK:=OP.SYM_ROK;
::                  OPTMP.TYT+={? |OPTMP.TYT<>'' || ' ' || '' ?}+OPTMP.SYM;
::                  SKID_RBK.cntx_psh();
::                  OPTMP.RB:={? OP.RB || RB.get_rbel(1,OP.RB) || '' ?};
::                  OPTMP.RB:=RB.get_rbel(2,exec('f_pbgnkr','rozrach_przel',0,1),'');
::                  OPTMP.B:=RB.getrbank(5,OPTMP.RB,OPTMP.KH);
::                  SKID_RBK.cntx_pop();
::                  OPTMP.ZNACZ:={? PAR_WYDR.PAR3 & OPTMP.RB<>'' || 'T' || 'N' ?}
::               || OPTMP.SAL+=__Optmpb.SAL
::               ?};
::               ROZRACH.SUM1+=__Optmpb.SAL;
::               {? PAR_WYDR.PAR3 & OPTMP.ZNACZ='T'
::               || ROZRACH.SUM2+=__Optmpb.SAL;
::                  OPTMP.ROZL:=__Optmpb.SAL
::               || ROZRACH.SUM3+=__Optmpb.SAL;
::                  OPTMP.ROZL:=0
::               ?};
::               {? _ps222
::               ||
::                  OPTMP.add()
::               ?};
::               _licz+=1;
::               __Optmpb.next
::            !};
::            {? ~_ps222 & OPTMP.SAL<>0
::            ||
::               OPTMP.add()
::            ?};
::            VAR_DEL.delete('__Optmpb')
::         ?}
:: Koniec modyfikacji dla Maclex
:: dalej wersja standardowa
::      ||
         OPTMP.SYM_ROK:=OP.SYM_ROK;
         OPTMP.TYT:=form(ROZRACH.OPIS2+' '+OPTMP.SYM_ZEW);
         {? OP.KH().TYP='R' || OPTMP.TYT+=' Data VAT RR:'+$OP.DO ?};
         SKID_RBK.cntx_psh();
         OPTMP.RB:={? OP.RB || RB.get_rbel(1,OP.RB) || '' ?};
         OPTMP.RB:=RB.get_rbel(2,exec('f_pbgnkr','rozrach_przel',0,1),''); OPTMP.B:=RB.getrbank(5,OPTMP.RB,OPTMP.KH);
         {? (XINFO.BLP_FVAT='N' | (XINFO.BLP_FVAT='T' & OPTMP.F_VAT='T')) &
         OPTMP.KH & exec('spr_typ','blp',OPTMP.KH)
:: Sprawdzenie RB z BLP
         || {? XINFO.BLP_SG='T' || exec('chk_pb','blp',OPTMP,0) || exec('s_vat_skid_rbk','blp',OPTMP) ?};
:: Blokada generowania przelewu w przypadku niezgodności z BLP
            OPTMP.ZNACZ:={? PAR_WYDR.PAR3 & OPTMP.RB<>'' & ~exec('lock_pb','blp',XINFO.BLP_BG,1,OPTMP) || 'T' || 'N' ?}
         || OPTMP.ZNACZ:={? PAR_WYDR.PAR3 & OPTMP.RB<>'' || 'T' || 'N' ?}
         ?};
         SKID_RBK.cntx_pop();
         OPTMP.ZNACZ:={? PAR_WYDR.PAR3 & OPTMP.RB<>'' || 'T' || 'N' ?};
         ROZRACH.SUM1+=OPTMP.SAL;
         {? OPTMP.SP='T'
         || ROZRACH.SUM1_VAT+=OPTMP.SP_VSAL
         ?};
         {? PAR_WYDR.PAR3 & OPTMP.ZNACZ='T'
         || ROZRACH.SUM2+=OPTMP.SAL;
            OPTMP.ROZL:=OPTMP.SAL;
            {? OPTMP.SP='T'
            || ROZRACH.SUM2_VAT+=OPTMP.SP_VSAL;
               OPTMP.SP_VDOZ:=OPTMP.SP_VSAL
            ?}
         || ROZRACH.SUM3+=OPTMP.SAL;
            OPTMP.ROZL:=0;
            {? OPTMP.SP='T'
            || ROZRACH.SUM3_VAT+=OPTMP.SP_VSAL;
               OPTMP.SP_VDOZ:=0
            ?}
         ?};
:: wywołanie wtyczki służącej do uzupełnienia dodatkowych pól w buforze tabeli OPTMP
         {? Plugin.runnable('OPTMP_PAR2') || Plugin.run('OPTMP_PAR2')?};
:: dodatkowa kontrola czy włączać znacznik SP - jeżeli saldo VAT = 0 to nie.
         {? OPTMP.SP='T' & OPTMP.SP_VSAL=0 || OPTMP.SP:='N' ?};
:: dodatkowa kontrola jeżeli saldo VAT > kwoty płatności, to je zmniejsz do jej wysokości
         {? OPTMP.SP='T' & OPTMP.SP_VSAL>OPTMP.SAL & OPTMP.SP='T' || OPTMP.SP_VDOZ:=OPTMP.SAL ?};
         OPTMP.add()
::      ?}
   ?}
?}; 1


\spr_sal_ini
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [11.21]
:: OPIS: Sprawdzenie, czy saldo rozrachunku nie zmienilo sie od momentu generowania -
::       inicjowanie tabelki ze szczegolami
::  OLD: \spr_sal_ini/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('OK_SAL')>0 || obj_del(OK_SAL) ?};
OK_SAL:=tab_tmp(5,'ODD','STRING[8]','Jedn. ks.',
                  'KH_KOD','STRING[8]','Kontrahent',
                  'KH_SKR','STRING[10]','',
                  'KON','STRING[35]','Konto',
                  'SYM','STRING[20]','Symbol',
                  'SALDO1','REAL','Saldo pierwotne',
                  'SALDO2','REAL','Saldo bieżące'
                );
_wer:=OK_SAL.mk_sel('Rozrachunki ze zmienionym saldem'@,'T',0,'tab_ok_sal_wer');
OK_SAL.win_fld(_wer,,'ODD',,,8);
OK_SAL.win_fld(_wer,,'KH_KOD',,,8);
OK_SAL.win_fld(_wer,,'KH_SKR',,,10);
OK_SAL.win_fld(_wer,,'KON',,,35);
OK_SAL.win_fld(_wer,,'SYM',,,20);
OK_SAL.win_fld(_wer,,'SALDO1',,,14,2);
OK_SAL.win_fld(_wer,,'SALDO2',,,14,2);
OK_SAL.win_act(_wer,,'Kolejność');
OK_SAL.win_sel(_wer);
D_RB.index('OP');
{? var_pres('DRB',@.CLASS)<0 || exec('obj_drbt','raty') ?};
{? var_pres('DRB')>0 || obj_del(DRB); &DRB ?};
DRB:=obj_new(@.CLASS.DRB)


\czy_ok_sal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [11.21]
:: OPIS: Sprawdzenie, czy saldo rozrachunku nie zmienilo sie od momentu generowania
::       Dla wersji Maclex mozliwe stare saldo z kilku OPTMP
::  OLD: \czy_ok_sal/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0; _sal_new:=_sal_old:=0;
OP.cntx_psh();
OP.index('KON_O');
OP.prefix(WYDRUKI.WAL,OPTMP.ODD,OPTMP.KONTO,OPTMP.SYM,OPTMP.SYM,OPTMP.SYM_ROK);
{? OP.first()
|| _sal_new:=exec('f_pbgnt2','homebank',{? UNPAR.P5<>date(0,0,0) || UNPAR.P5 || WYDRUKIN.DATA ?});
   _sal_old:={? PAR_SKID.get(221)<>'N' & MLEX.FIKSB
             || _sum:=0;
                _sym:=OPTMP.SYM;
                _dat:=OPTMP.DATA;
                _konto:=OPTMP.KONTO;
                OPTMP.cntx_psh();
                OPTMP.index('SYM');
                OPTMP.prefix(v_user1,_dat,_sym,_konto,_konto);
                {? OPTMP.first
                || {!|? _sum+=OPTMP.SAL; OPTMP.next !}
                ?};
                OPTMP.cntx_pop();
                _sum
             || OPTMP.SAL
             ?};
   _ok:=(_sal_old=_sal_new)
?};
OP.cntx_pop();
{? ~_ok
|| OK_SAL.blank();
   OK_SAL.ODD:=OPTMP.ODD().OD;
   OK_SAL.KH_KOD:=OPTMP.KH().KOD;
   OK_SAL.KH_SKR:=KH.SKR;
   OK_SAL.KON:=OPTMP.KONTO;
   OK_SAL.SYM:=OPTMP.SYM;
   OK_SAL.SALDO1:=OPTMP.SAL;
   OK_SAL.SALDO2:=_sal_new;
   OK_SAL.add()
?};
_ok


\f_pbgen1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Dane generowanego przelewu elektronicznego.
::  OLD: \f_pbgen1/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
PB.KD:='FKS: Rozrachunki';
PB.AN:=OPTMP.KONTO;
PB.SYM:=OPTMP.SYM;
PB.F_VAT:=OPTMP.F_VAT;
PB.BRUTTO:=OPTMP.BRUTTO;
PB.SYM_ROK:=OPTMP.SYM_ROK;
PB.SYM_ZEW:=OPTMP.SYM_ZEW;
PB.RD:=RB.get_rbel(2,RACHBANK.KB_1R,'');
PB.NBD:=RB.getrbank(3,PB.RD);
PB.DP:={? PAR_WYDR.PAR2 || OPTMP.DATA || WYDRUKIN.DATA ?};
PB.USER_GEN:=exec('usr_zar','dok_fks');
PB.DZ:=date();
PB.TYT:=OPTMP.TYT;
PB.KW:=OPTMP.ROZL;
PB.ODD:=OPTMP.ODD;
::Poczatek modyfikacji dla Maclex 13.10.2009 AK [1120]
{? MLEX.FIKSB
|| PB.RZ:=OPTMP.RZ;
   PB.PG:=OPTMP.PG;
   PB.ZAD:=OPTMP.ZAD
?};
::Koniec modyfikacji dla Maclex
PB.WAL:=WYDRUKI.WAL;
{? WYDRUKI.WAL<>FINFO.NAROD
|| PB.RODZZAGR:=ROZNE.RODZZAGR;
   PB.OPISZ:=PAR_WYDR.SLPAR2;
   PB.KOD_STAT:=ROZNE.KOD_STAT;
   PB.TRYB_POS:=ROZNE.TRYB_POS;
   PB.RODZ:='W'
|| PB.RODZ:='K'
?}


\f_pbgen2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Dane kontrahenta generowanego przelewu elektronicznego.
::  OLD: \f_pbgen2/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_RBK.cntx_psh();
SKID_RBK.clear();
OPTMP.KH();
PB.W:=KH.NAZ;
PB.M:=KH.MIASTO;
PB.UL:=exec('kh_ul','rozrach_przel');
PB.KH:=OPTMP.KH;
PB.KP:=KH.KPOCZ;
PB.KRAJ_KH:=PB.KH().KRAJISO; _kraj:=null;
_vr:=RB.getrrban(OPTMP.RB,'KH',#OPTMP.KH);
PB.S_VAT:=OPTMP.S_VAT;
PB.S_VAT_D:=OPTMP.S_VAT_D;
PB.ID_S_VAT:=OPTMP.ID_S_VAT;
_swift:='';
{? _vr & SKID_RBK.seek(_vr)
||  _kraj:=SKID_RBK.KRAJ; _vk:=SKID_RBK.KRAJ().KODISO;
   _swift:=SKID_RBK.SWIFT
|| _vk:=OPTMP.KH().KRAJISO().KODISO
?};
PB.RW:=RB.get_rbel(2,OPTMP.RB,_vk);
PB.NBW:=OPTMP.B;
PB.KRAJ_BAN:=PB.NBW().KODISO;
{? PB.KRAJ_BAN=null || PB.KRAJ_BAN:=_kraj ?};
{? WYDRUKI.WAL<>FINFO.NAROD
|| {? _swift<>'' || PB.SWIFT:=_swift || PB.SWIFT:=PB.NBW().SWIFT ?};
   _vs:=OPTMP.KH().STR_PZ;
   PB.STR:={? ~+_vs || PAR_SKID.get(69) || _vs ?}
?};
::czy split-payment? Z-zbiorczy T-zwykły
{? 'TZ'*OPTMP.SP
|| PB.SP:='T';
   PB.KHNIP:=PB.KH().NIP;
   PB.SP_V:=OPTMP.SP_VDOZ;
   {? OPTMP.SP='T'
   || PB.NRFAK:={? OPTMP.ZNACZ2='T'
                || 'zaliczka'+{? UNPAR.P9=1 || ' '+OPTMP.SYM_ZEW || '' ?}
                || OPTMP.SYM_ZEW
                ?}
   || PB.NRFAK:=$OPTMP.DATA_OD+'-'+$OPTMP.DATA_DO;
      PB.WSK_S:='T';
      {? var_press('DATA_OD',PB)>0
      || PB.DATA_OD:=OPTMP.DATA_OD;
         PB.DATA_DO:=OPTMP.DATA_DO
      ?}
   ?}
?};
PB.SP_WYM:={? OPTMP.SPP='W' || 'T' || 'N' ?};
SKID_RBK.cntx_pop()


\f_pbgen3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Dane rozrachunku generowanego przelewu elektronicznego.
::  OLD: \f_pbgen3/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
PB_OP.prefix();
PB_OP.blank();
PB_OP.PB:=PB.ref();
PB_OP.WAL:=OPTMP.WAL().SYM;
PB_OP.ODD:=OPTMP.ODD;
PB_OP.DP:={? PAR_WYDR.PAR2 & OPTMP.DATA>WYDRUKIN.DATA || OPTMP.DATA || WYDRUKIN.DATA ?};
PB_OP.AN:=OPTMP.KONTO;
PB_OP.SYM:=OPTMP.SYM;
PB_OP.SYM_ZEW:=OPTMP.SYM_ZEW;
PB_OP.SYM_ROK:=OPTMP.SYM_ROK;
PB_OP.K:=OPTMP.ROZL;
PB_OP.SP_V:=OPTMP.SP_VDOZ;
PB_OP.TYT:=OPTMP.TYT;
{? var_pres('DSP',PB_OP)>0 || PB_OP.DSP:=OPTMP.DATA_OD ?};
PB_OP.BRUTTO:=OPTMP.BRUTTO;
::Poczatek modyfikacji dla Maclex 13.10.2009 AK [1120]
{? MLEX.FIKSB
|| PB_OP.RZ:=PB.RZ;
   PB_OP.PG:=PB.PG;
   PB_OP.ZAD:=PB.ZAD
?};
::Koniec modyfikacji dla Maclex
PB_OP.add()


\f_pbgenp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Generowanie pojedynczego przelewu elektronicznego.
::  OLD: \f_pbgenp/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
PB.cntx_psh();
PB.index('PB_S');
PB.prefix();
PB.blank();
exec('f_pbgen1','!hbn_prz_drow');
exec('f_pbgen2','!hbn_prz_drow');
{? var_press('PbStamp')>0 || PB.TM_STAMP:=PbStamp ?};
{? PB.RW=PB.RD
   & ~FUN.ask('Przelew: %1 (%2, %3 %4).\nRachunek wierzyciela i dłużnika są identyczne!\n\n'
              'Wygenerować przelew?'@[PB.TYT,$PB.DP,form(PB.KW,,2),PB.WAL().KOD])
|| PB.cntx_pop();
   return(0)
?};
{? PB.add()
|| g_pbref:=PB.ref();
   {? WYDRUKIN.REJPRZEK
   || _sk_rbk:=RB.getrrban(PB.RD,REF.INFO,0);
      {? _sk_rbk=0 || _sk_rbk:=null ?};
      {? var_pres('GIODOTMP')>0 || exec('gen_tmp','giodo',PB.KH().KOD) ?};
      exec('przel','giodo','kh',PB.KH,_sk_rbk,WYDRUKIN.DATPRZEK)
   ?};
   exec('f_pbgen3','!hbn_prz_drow');
   PB.cntx_pop();
   {? PB.f_active() || PB.f_add() ?};
   pbcn+=1
|| PB.cntx_pop()
?};
1


\f_pbgenl_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wywołanie generowania przelewów z przycisku
::----------------------------------------------------------------------------------------------------------------------
exec('f_pbgenl','!hbn_prz_drow');
grp_disp(OPTMP,'PB_GEN');
''


\f_pbgenl_esc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Zamknięcie okna generowania przelewów z przycisku
::----------------------------------------------------------------------------------------------------------------------
'key:Esc'


\f_pbgenl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Generowanie przelewow elektronicznych z tabeli tymczasowej
::  OLD: \f_pbgenl/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('spr_sal_ini','!hbn_prz_drow');
PB.cntx_psh();
OPTMP.cntx_psh();
OPTMP.index('ZNACZ');
OPTMP.prefix(v_user1,'T');
{? OPTMP.first()
|| RACHBANK.KB_1R:=g_rachb;
   {! |?
      {? OPTMP.ZNACZ='T' & OPTMP.ROZL & exec('czy_ok_sal','!hbn_prz_drow')
      || {? exec('f_pbgenp','!hbn_prz_drow')
         || ROZRACH.SUM1-=OPTMP.SAL; ROZRACH.SUM2-=OPTMP.ROZL;
            ROZRACH.SUM3-=(OPTMP.SAL-OPTMP.ROZL);
            {? OPTMP.SP='T'
            || ROZRACH.SUM1_VAT-=OPTMP.SP_VSAL; ROZRACH.SUM2_VAT-=OPTMP.SP_VDOZ;
               ROZRACH.SUM3_VAT-=(OPTMP.SP_VSAL-OPTMP.SP_VDOZ)
            ?}
         ?}
      ?};
      OPTMP.del()
   !};
   FUN.info('Liczba wygenerowanych przelewów: %1'@[$pbcn]+
           {? pbcnp || '\nLiczba poprawionych przelewów: %1'@[$pbcnp] || '' ?}
   );
   pbcnp:=pbcn:=0
|| FUN.emsg('Brak zaznaczonych płatności do generowania przelewów.'@)
?};
OPTMP.cntx_pop();
PB.cntx_pop();
{? PB.f_active()=1 | PB.f_active()=3 || PB.f_rfresh() ?};
pbst:=1;
{? OK_SAL.size()
|| _txt:='W wybranych rozrachunkach saldo zmieniło się od chwili rozpoczęcia generowania.\n'
         'Dla rozrachunków tych nie wygenerowano przelewów.'@;
   {? FUN.choice(_txt,1,'Pokaż szczegóły'@)
   || OK_SAL.select()
   ?}
?};
VAR_DEL.delete('OK_SAL');
1


\f_pbgnzb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Przed akcja zaplaty czesciowej w oknie tabeli OPTMP
::       przy generowaniu przelewow elektronicznych.
::  OLD: \f_pbgnzb/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
{? var_press('ZB',OPTMP)<=0 |
   OPTMP.ZB='N' | exec('is_zb_pyt','rozrach_przel')
|| ROZRACH.KWOTA:=OPTMP.ROZL;
   ROZRACH.KWOTA_V:=OPTMP.SP_VDOZ;
   {? OPTMP.RB=''
   || OPTMP.RB:=exec('f_pbgnkr','rozrach_przel',1,1); OPTMP.B:=RB.getrbank(3,OPTMP.RB);
:: Sprawdzenie RB z BLP
      {? var_press('S_VAT',OPTMP)>0 & XINFO.BLP_SG='T' & (XINFO.BLP_FVAT='N' | (XINFO.BLP_FVAT='T' & OPTMP.F_VAT='T')) &
         OPTMP.KH & exec('spr_typ','blp',OPTMP.KH)
      || exec('chk_pb','blp')
      || exec('s_vat_skid_rbk','blp',OPTMP)
      ?}
   ?};
:: Blokada generowania przelewu w przypadku niezgodności z BLP
   {? var_press('S_VAT',OPTMP)>0 & (XINFO.BLP_FVAT='N' | (XINFO.BLP_FVAT='T' & OPTMP.F_VAT='T'))
      & exec('spr_rb','blp','OPTMP') & exec('lock_pb','blp',XINFO.BLP_BG)
   || _result:=0
   ?}
|| _result:=0
?};
_result


\f_pbgnzc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Akcja zaplaty czesciowej w oknie tabeli OPTMP
::       przy generowaniu przelewow elektronicznych.
::  OLD: \f_pbgnzc/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.RB=''
|| OPTMP.RB:=exec('f_pbgnkr','rozrach_przel',1,1);
   OPTMP.B:=RB.getrbank(3,OPTMP.RB)
?};
{? OPTMP.SP='T'
|| OPTMP.SP_VDOZ:=OPTMP.SP_VDOZ$2
?};
{? OPTMP.RB<>''
|| OPTMP.ZNACZ:={? OPTMP.ROZL || 'T' || 'N' ?};
   _vref:=null;
   {? g_zakr=0 | (g_zakr=1 & OPTMP.ROZL=ROZRACH.KW3)
   || OPTMP.cntx_psh();
      _vref:={? OPTMP.next() | OPTMP.prev() || OPTMP.ref() ?};
      OPTMP.cntx_pop()
   ?};
   OPTMP.cntx_psh();
   OPTMP.prefix();
   OPTMP.put();
   OPTMP.cntx_pop();
   {? _vref || OPTMP.seek(_vref) ?}
|| OPTMP.ROZL:=0;
   ROZRACH.KW3:=OPTMP.SAL;
   ROZRACH.POZ_VAT:=OPTMP.SP_VSAL;
   OPTMP.put()
?};
exec('f_rozrach_rf','!hbn_prz_drow');
1


\f_pbgnzz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Akcja zaplaty calkowitej w oknie tabeli OPTMP
::       przy generowaniu przelewow elektronicznych.
::  OLD: \f_pbgnzz/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.RB=''
|| OPTMP.RB:=exec('f_pbgnkr','rozrach_przel',1,1);
   OPTMP.B:=RB.getrbank(3,OPTMP.RB);
:: Sprawdzenie RB z BLP
   {? XINFO.BLP_SG='T' & (XINFO.BLP_FVAT='N' | (XINFO.BLP_FVAT='T' & OPTMP.F_VAT='T'))
   || exec('chk_pb','blp')
   ?}
?};
{? OPTMP.SAL=0
|| {? OPTMP.sel_size()=0
   || FUN.emsg('Kwota zapłaty musi być różna od 0.'@)
   ?};
   return(0)
?};
{? ~OPTMP.ROZL & OPTMP.WAL2<>''
|| {? OPTMP.sel_size()=0
   || {? ~FUN.ask('Rozrachunek ma powiązany rozrachunek w walucie innej niż narodowa.\n'
                 'Zapłata w PLN może spowodować nie rozliczenie odpowiadającego rozrachunku w '+OPTMP.WAL2+'.\n'
                 'Czy kontynuować?'@)
      || return(0)
      ?}
   ?}
?};
{? OPTMP.RB<>'' &
   (var_press('ZB',OPTMP)<=0 | OPTMP.ZNACZ='T' |
   OPTMP.ZB='N' | exec('is_zb_pyt','rozrach_przel')
   )
:: Blokada generowania przelewu w przypadku niezgodności z BLP
|| {? OPTMP.ZNACZ<>'T' & (XINFO.BLP_FVAT='N' | (XINFO.BLP_FVAT='T' & OPTMP.F_VAT='T'))
      & OPTMP.KH & exec('spr_typ','blp',OPTMP.KH) & exec('spr_rb','blp','OPTMP') & exec('lock_pb','blp',XINFO.BLP_BG)
   || return(0)
   ?};
   {? OPTMP.SP_VSAL=0
   || OPTMP.SP_VDOZ:=0;
      {? OPTMP.SP='T'
      || OPTMP.SP:='N';
         {? OPTMP.sel_size()=0
         || FUN.emsg('Płatność Split payment dla zerowego salda VAT nie zostałaby zrealizowana. Zmieniono znacznik.'@)
         ?}
      ?}
   ?};
   {? OPTMP.ROZL
   || OPTMP.ROZL:=ROZRACH.KW3:=0;
      {? OPTMP.SP='T' || OPTMP.SP_VDOZ:=ROZRACH.POZ_VAT:=0 ?}
   || {? OPTMP.SP='T' & OPTMP.SP_VSAL>OPTMP.SAL
      || {? OPTMP.sel_size()=0
         || FUN.emsg('Kwota VAT do zapłaty nie może być większa od kwoty przelewu (zapłaty).\n'
                     'Kwota VAT do zapłaty została pomniejszona do wysokości kwoty przelewu.\n'
                     'Aby ją zmienić, należy skorzystać z funkcji Zapłata częściowa.'@);
             OPTMP.SP_VDOZ:=OPTMP.SAL
         ?}
      || {? OPTMP.SP='T'
         || OPTMP.SP_VDOZ:=OPTMP.SP_VSAL;
            ROZRACH.POZ_VAT:=0
         ?}
      ?};
      OPTMP.ROZL:=OPTMP.SAL;
      ROZRACH.KW3:=0
   ?};
   _vref:=null;
   {? g_zakr=0 | g_zakr=1
   || OPTMP.cntx_psh();
      _vref:={? OPTMP.next() | OPTMP.prev() || OPTMP.ref() ?};
      OPTMP.cntx_pop()
   ?};
   OPTMP.cntx_psh();
   OPTMP.prefix();
   OPTMP.ZNACZ:={? OPTMP.ROZL || 'T' || 'N' ?};
   OPTMP.put();
   OPTMP.cntx_pop();
   {? _vref || OPTMP.seek(_vref) ?};

   exec('f_rozrach_rf','!hbn_prz_drow')
?};
1


\f_pbgnrr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Przy generowaniu przelewow wyswietla okno rozrachunkow
::  OLD: \f_pbgnrr/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
_v:=RACHBANK.KB_1R;
:: wywołanie czynności??
exec('main','!fks_roz_zark',1);
exec('set_kbr','rozrach_przel');
RACHBANK.KB_1R:=_v


\f_pbgnoo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.60]
:: OPIS: Sumuje przelewy zatwierdzone i niezatwierdzone sposrod zaznaczonych.
::  OLD: \f_pbgnoo/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.sel_size()
|| PAR_WYDR.RPAR4+=OPTMP.SAL;
   PAR_WYDR.RPAR5+=OPTMP.ROZL
|| FUN.emsg('Nie zaznaczono żadnej pozycji.'@)
?}


\f_pbgnob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.60]
:: OPIS: Przed rozpoczeciem sumowania zaznaczonych przelewow zatwierdzonych i niezatwierdzonych.
::  OLD: \f_pbgnob/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.RPAR4:=PAR_WYDR.RPAR5:=PAR_WYDR.RPAR6:=0;
1


\f_pbgnoa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.60]
:: OPIS: Wyswietla informacje o podsumowaniach zaznaczonych przelewow.
::  OLD: \f_pbgnoa/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.RPAR6:=PAR_WYDR.RPAR4-PAR_WYDR.RPAR5;
PAR_WYDR.win_edit('PB_GNSZ');
PAR_WYDR.display()


\f_pbgnsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.60]
:: OPIS: Oblicza sumy przygotowywanych przelewow dla kontrahentow.
::  OLD: \f_pbgnsk/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
TT_PBSKH:=sql('select SKR,sum(SAL) as SAL,sum(ROZL) as ROZL,sum(SAL)-sum(ROZL) as POZOST,'
   +'OPTMP.TYP as Z from OPTMP join KH where OPTMP.USER like \''
   +':_a%\' group by SKR,OPTMP.TYP order by SKR',v_user1);
{? TT_PBSKH.first()
|| {! |?
      TT_PBSKH.Z:={? TT_PBSKH.ROZL || 'T' || 'N' ?};
      TT_PBSKH.put();
      TT_PBSKH.next()
   !}
?};
_vsel:=TT_PBSKH.mk_sel('Sumy dla kontrahentów'@,,,'tt_pbskh_wer');
_vm:='Zmień z&akres'@;
_vw:='Wszystkie'@@;
_vm1:='Wybrane do zapłaty całkowitej lub częściowej'@;
_vm2:='Nie wybrane do zapłaty całkowitej lub częściowej'@;
TT_PBSKH.win_fld(_vsel,,'SKR',,,10,,,'Kontrahent'@);
TT_PBSKH.win_fld(_vsel,,'SAL',,,18,2,,'Saldo'@);
TT_PBSKH.win_fld(_vsel,,'ROZL',,,18,2,,'Do zapłaty'@);
TT_PBSKH.win_fld(_vsel,,'POZOST',,,18,2,,'Pozostało'@);
TT_PBSKH.win_act(_vsel,0,'Menu','Zmień z&akres'@@,,,,,1);
TT_PBSKH.win_act(_vsel,0,'Formuła','Zapłacone'@@,_vm,_vm1,
   "TT_PBSKH.index(ind2);
    TT_PBSKH.prefix('T');
    TT_PBSKH.hdr_sel();
    TT_PBSKH.hdr_sel(': %1 - zapłacone'@[WYDRUKI.WAL().KOD])
   ",,,,,,'Z');
TT_PBSKH.win_act(_vsel,0,'Formuła','Niezapłacone'@@,_vm,_vm2,
   "TT_PBSKH.index(ind2);
    TT_PBSKH.prefix('N');
    TT_PBSKH.hdr_sel();
    TT_PBSKH.hdr_sel(': %1 - niezapłacone'@[WYDRUKI.WAL().KOD])
   ",,,,,,'N');
TT_PBSKH.win_act(_vsel,0,'Formuła',_vw,_vm,_vw,
   "TT_PBSKH.index(ind1);
    TT_PBSKH.prefix();
    TT_PBSKH.hdr_sel();
    TT_PBSKH.hdr_sel(': %1 - wszystkie'@[WYDRUKI.WAL().KOD])
   ",,,,,,'W');
TT_PBSKH.win_act(_vsel,0,'Rekord',,,,"{? TT_PBSKH.ROZL || exec('findtmp','#color') || 0 ?}");
TT_PBSKH.win_act(_vsel,1,'Menu','Zmień z&akres'@@,,,,,1);
TT_PBSKH.win_act(_vsel,1,'Formuła','Zapłacone'@@,_vm,_vm1,
   "TT_PBSKH.index(ind2);
    TT_PBSKH.prefix('T');
    TT_PBSKH.hdr_sel();
    TT_PBSKH.hdr_sel(': %1 - zapłacone'@[WYDRUKI.WAL().KOD])
   ",,,,,,'Z');
TT_PBSKH.win_act(_vsel,1,'Formuła','Niezapłacone'@@,_vm,_vm2,
   "TT_PBSKH.index(ind2);
    TT_PBSKH.prefix('N');
    TT_PBSKH.hdr_sel();
    TT_PBSKH.hdr_sel(': %1 - niezapłacone'@[WYDRUKI.WAL().KOD])
   ",,,,,,'N');
TT_PBSKH.win_act(_vsel,1,'Formuła',_vw,_vm,_vw,
   "TT_PBSKH.index(ind1);
    TT_PBSKH.prefix();
    TT_PBSKH.hdr_sel();
    TT_PBSKH.hdr_sel(': %1 - wszystkie'@[WYDRUKI.WAL().KOD])
   ",,,,,,'W');
TT_PBSKH.win_sel(_vsel);
ind1:=TT_PBSKH.index('?');
ind2:=TT_PBSKH.ndx_tmp(,,'Z',,,'SKR',,);
TT_PBSKH.hdr_sel();
{? ~g_zakr
|| TT_PBSKH.index(ind2);
   TT_PBSKH.prefix('N');
   TT_PBSKH.hdr_sel();
   TT_PBSKH.hdr_sel(': %1 - niezapłacone'@[WYDRUKI.WAL().KOD])
|? g_zakr=1
|| TT_PBSKH.index(ind2);
   TT_PBSKH.prefix('T');
   TT_PBSKH.hdr_sel();
   TT_PBSKH.hdr_sel(': %1 - zapłacone'@[WYDRUKI.WAL().KOD])
|| TT_PBSKH.index(ind1);
   TT_PBSKH.prefix();
   TT_PBSKH.hdr_sel();
   TT_PBSKH.hdr_sel(': %1  - wszystkie'@[WYDRUKI.WAL().KOD])
?};
TT_PBSKH.select();
TT_PBSKH.ndx_drop();
VAR_DEL.delete('TT_PBSKH');
&ind1; &ind2


\f_pbgnzr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.60]
:: OPIS: Ustawia zakres dla rozrachunkow przy generowaniu przelewow elektronicznych.
::   WE: _a: zakres: 0 - niezaplacone, 1 - zaplacone, 2 - wszystkie
::  OLD: \f_pbgnzr/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
OPTMP.hdr_sel();
g_zakr:=_a;
{? _a=0
|| OPTMP.index('ZNACZ');
   OPTMP.prefix(v_user1,'N');
   OPTMP.hdr_sel(': %1 - niezapłacone'@[WYDRUKI.WAL().KOD])
|? _a=1
|| OPTMP.index('ZNACZ');
   OPTMP.prefix(v_user1,'T');
   OPTMP.hdr_sel(': %1 - zapłacone'@[WYDRUKI.WAL().KOD])
|? _a=2
|| OPTMP.index('SYM');
   OPTMP.prefix(v_user1);
   OPTMP.hdr_sel(': %1 - wszystkie'@[WYDRUKI.WAL().KOD])
?};
exec('f_rozrach_rf','!hbn_prz_drow');
exec('sum_pb','hbn_filtr')


\f_rozrach_rf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Odświeżenie zmiennych z sumą
::----------------------------------------------------------------------------------------------------------------------
OPTMP.cntx_psh();
ROZRACH.SUM1:=ROZRACH.SUM2:=ROZRACH.SUM3:=0;
ROZRACH.SUM1_VAT:=ROZRACH.SUM2_VAT:=ROZRACH.SUM3_VAT:=0;
{? OPTMP.f_active()=0
|| {? OPTMP.first()
   || {! |?
         ROZRACH.SUM1+=OPTMP.SAL;
         ROZRACH.SUM2+=OPTMP.ROZL;
         ROZRACH.SUM3+=(OPTMP.SAL-OPTMP.ROZL);
         {? 'TZ'*OPTMP.SP
         || ROZRACH.SUM1_VAT+=OPTMP.SP_VSAL;
            ROZRACH.SUM2_VAT+=OPTMP.SP_VDOZ;
            ROZRACH.SUM3_VAT+=(OPTMP.SP_VSAL-OPTMP.SP_VDOZ)
         ?};
         OPTMP.next()
      !}
   ?}
|| _ref:=OPTMP.ref();
   {? OPTMP.f_first()
   || {! |?
         ROZRACH.SUM1+=OPTMP.SAL;
         ROZRACH.SUM2+=OPTMP.ROZL;
         ROZRACH.SUM3+=(OPTMP.SAL-OPTMP.ROZL);
         {? 'TZ'*OPTMP.SP
         || ROZRACH.SUM1_VAT+=OPTMP.SP_VSAL;
            ROZRACH.SUM2_VAT+=OPTMP.SP_VDOZ;
            ROZRACH.SUM3_VAT+=(OPTMP.SP_VSAL-OPTMP.SP_VDOZ)
         ?};
         OPTMP.f_next()
      !}
   ?};
   {? _ref<>null || OPTMP.f_seek(_ref) ?}
?};
OPTMP.cntx_pop()


\f_pbgnzk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.60]
:: OPIS: Ustawia zakres dla wybranego kontrahenta dla rozrachunkow przy generowaniu przelewow
::       elektronicznych.
::  OLD: \f_pbgnzk/przelew2.fml
::----------------------------------------------------------------------------------------------------------------------
KH.win_sel('WERHOME');
KH.seek(OPTMP.KH);
{? KH.select()
|| OPTMP.index('KH');
   OPTMP.prefix(v_user1,KH.ref());
   OPTMP.f_rfresh();
   OPTMP.hdr_sel();
   OPTMP.hdr_sel(' - kontrahent %1'@[KH.NAZ]);
   exec('f_rozrach_rf','!hbn_prz_drow');
   exec('sum_pb','hbn_filtr')
?}


\ra_pbgen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Wyswietla okienko z rozrachunkami zwiazanymi z przelewem
::       elektronicznym.
::  OLD: \ra_pbgen/przelewy.fml
::----------------------------------------------------------------------------------------------------------------------
OPTMP.SP_VDOZ:=OPTMP.SP_VDOZ$2;
{? OPTMP.ROZL=0
|| FUN.emsg('Kwota zapłaty nie może być równa zero.'@);
   'ROZL'
|? OPTMP.SP_VDOZ<0
|| FUN.emsg('Kwota VAT do zapłaty nie może być mniejsza od zera.'@);
   'SP_VDOZ'
|? OPTMP.SP_VDOZ>OPTMP.ROZL
|| FUN.emsg('Kwota VAT do zapłaty nie może być większa od kwoty przelewu (zapłaty).'@);
   'SP_VDOZ'
|? OPTMP.SP='T' & OPTMP.SP_VDOZ=0
|| FUN.emsg('W przypadku płatności split payment kwota VAT do zapłaty nie może być równa zero.'@);
   'SP_VDOZ'
|? OPTMP.SP_VDOZ>OPTMP.SP_VSAL
|| {? ~FUN.ask('Kwota VAT do zapłaty jest większa niż saldo VAT. Kontynuować?'@)
   || 'SP_VDOZ'
   || ''
   ?}
|? OPTMP.SP_VDOZ>OPTMP.SAL
|| FUN.emsg('W przypadku płatności split payment kwota VAT do zapłaty nie może być większa od salda rozrachunku.'@);
   'SP_VDOZ'
|? (OPTMP.ROZL>0 & OPTMP.SAL>0 & OPTMP.ROZL>OPTMP.SAL) | (OPTMP.ROZL<0 & OPTMP.SAL<0 & fabs(OPTMP.ROZL)>fabs(OPTMP.SAL))
|| {? FUN.ask('Kwota zapłaty jest większa od salda rozrachunku.\nAkceptować?'@)
   || ''
   || 'ROZL'
   ?}
|| ''
?}


\first
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Czy istnieje przelew
::   WE: _a - tm_stamp
::----------------------------------------------------------------------------------------------------------------------
_tab:=obj_new('PB','NEXT');
_tab.PB:=null;
_tab.NEXT:=0;
PB.cntx_psh();
PB.index('TM_STAMP'); PB.prefix(_a,);
{? PB.first()
|| _tab.PB:=PB.ref();
   PB.TM_STAMP+='1';
   PB.cntx_psh();
   PB.prefix();
   PB.put();
   PB.cntx_pop();
   _tab.NEXT:=PB.first()
?};
PB.cntx_pop();
_tab


\be_optmp_vdoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.22]
:: OPIS: Przed redakcją pola OPTMP.SP_VDOZ
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.SP='T' || 1 || 0 ?}


\optmp_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.22]
:: OPIS: Formuła ustawia lub odznacza bieżącą płatność (OPTMP) jako płatność typu Split payment
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.SPP<>'N'
|| {? OPTMP.SP='T' &
      (OPTMP.SPP<>'W' | OPTMP.sel_size()=0 & FUN.ask('Wymagany split payment.\nCzy zmienić sposób płatności?'@))
   || OPTMP.SP:='N';
      OPTMP.SP_VDOZ:=OPTMP.SP_VSAL:=ROZRACH.POZ_VAT:=OPTMP.KW2:=0;
      OPTMP.SP_VWYM:=0
   |? OPTMP.SP='N'
   || OPTMP.SP_VSAL:=exec('pb_saldovat','homebank');
      _op:=exec('optmp_op','rozrach_przel');
      _zapv:=exec('f_vat','fks_sp',_op)-OPTMP.SP_VSAL;
      _swym:=exec('wym_vat','fks_sp','W',_op);
      _szal:=exec('wym_vat','fks_sp','Z',_op);
      OPTMP.SP_VWYM:=_swym-_zapv;
      {? OPTMP.SP_VWYM<0 || OPTMP.SP_VWYM:=0 ?};
      _zapv-=_swym; {? _zapv<0 || _zapv:=0 ?};
      OPTMP.SP_VZAL:=_szal-_zapv;
      {? OPTMP.SP_VZAL<0 || OPTMP.SP_VZAL:=0 ?};
      {? OPTMP.SP_VSAL>0
      || OPTMP.SP:='T';
         {? OPTMP.ROZL>0
         || OPTMP.SP_VDOZ:=((OPTMP.ROZL/OPTMP.SAL)*OPTMP.SP_VSAL)$2
         || OPTMP.SP_VDOZ:=0
         ?}
      || {? OPTMP.sel_size()=0
         || FUN.emsg('Zmiana nieudana. Płatność Split payment dla zerowego salda VAT nie zostałaby zrealizowana.'@)
         ?}
      ?}
   ?};
   OPTMP.put();
   {? OPTMP.sel_size()=0
   || exec('f_rozrach_rf','!hbn_prz_drow')
   ?}
?}


\gr_optmp_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.22]
:: OPIS: Po grupowym ustawieniu znacznika SP w tabeli OPTMP
::----------------------------------------------------------------------------------------------------------------------
exec('f_rozrach_rf','!hbn_prz_drow');
1


\be_optmp_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.22]
:: OPIS: Przed redakcją pola OPTMP.SP
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.SPP='T' || 1 || 0 ?}


\ae_optmp_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.22]
:: OPIS: Po redagowaniu pola OPTMP.SP
::----------------------------------------------------------------------------------------------------------------------
{? OPTMP.SP='N'
|| OPTMP.SP_VDOZ:=OPTMP.SP_VSAL:=ROZRACH.POZ_VAT:=0
|? OPTMP.SP='T'
|| OPTMP.SP_VSAL:=exec('pb_saldovat','homebank');
   {? OPTMP.ROZL>0
   || {? OPTMP.SP_VDOZ=0 || OPTMP.SP_VDOZ:=((OPTMP.ROZL/OPTMP.SAL)*OPTMP.SP_VSAL)$2 ?}
   || OPTMP.SP_VDOZ:=0
   ?}
?};
1


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.42]
:: OPIS: Ustawia dostępność pól w sekcji Zakres kont
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? UNPAR.P1=1
|| WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'enable=1',KONTO,'K1');
   WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'enable=0',KONTO,'K2');
   WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'enable=0',KONTO,'K3');
   WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'enable=0',KONTO,'K4')
|? UNPAR.P1=2
|| WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'enable=0',KONTO,'K1');
   WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'enable=1',KONTO,'K2');
   WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'enable=0',KONTO,'K3');
   WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'enable=0',KONTO,'K4')
|? UNPAR.P1=3
|| WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'enable=0',KONTO,'K1');
   WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'enable=0',KONTO,'K2');
   WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'enable=1',KONTO,'K3');
   WYDRUKIN.efld_opt(WYDRUKIN.win_edit('?'),'enable=1',KONTO,'K4')
?}


\hbn_pb_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [20.42]
:: OPIS: Generuje tabele tymczasowe z rekordami na bzaie których zostaną utworzone przelewy elektroniczne i opcjonalnie
::       rozrachunki przelewów elektronicznych. Tabele należy wypełnić swoimi danymi zachowując jej nazwę zmiennej
::   WE: Brak
::   WY: Prawda / Fałsz
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('PB_TMP');
PB_TMP:=tab_tmp(3,'KH','STRING[48]','Wskazanie na kontrahenta, ref/uidref',
: Jeżeli wartość RW='', to poniższe wartości zostaną uzupełnione na podstawie kontrahenta
                  'RW','STRING[50]','Rachunek wierzyciela',
                  'NBW_NB','STRING[50]','Nazwa banku wierzyciela, B.NB',
                  'NBW_NUME','STRING[50]','Nazwa banku wierzyciela, B.NUMER',
                  'KRAJ_BAN','STRING[50]','Wskazanie na kraj kontrahenta, KRAJE.SYM',
                  'KRAJ_KH','STRING[50]','Wskazanie na kraj banku kontrahenta, KRAJE.SYM',
                  'SWIFT','STRING[11]','Kod SWIFT (BIC) banku zagranicznego dla przelewów walutowych',
                  'STR','STRING[1]','Strona ponosząca koszty przelewu zagranicznego',
                  'W','STRING[60]','Nazwa odbiorcy',
                  'M','STRING[40]','Miasto',
                  'UL','STRING[150]','Ulica',
: Koniec wartości uzupełnianych na podstawie kontrahenta

                  'KD','STRING[20]','Kod systemu i obszaru',
                  'AN','STRING[16]','Symbol konta analitycznego',
                  'SYM','STRING[50]','Symbol rozrachunku',
                  'F_VAT','STRING[1]','Znacznik, czy dotyczy płatności za fakturę VAT [T/N]',
                  'SYM_ROK','STRING[55]','Unikalny symbol rozrachunku',
                  'SYM_ZEW','STRING[50]','Symbol zewnętrzny',
                  'RD','STRING[50]','Rachunek dłużnika',
                  'NBD_NB','STRING[80]','Nazwa banku dłużnika, pełna nazwa, B.NB',
                  'NBD_NUME','STRING[8]','Nazwa banku dłużnika, Numer rozliczeniowy, B.NUMER',
                  'DP','DATE','Data przelewu',
                  'DZ','DATE','Data zlecenia',
                  'TYT','STRING[162]','Tytuł przelewu',
                  'KW','REAL','Kwota przelewu',
                  'ODD','STRING[48]','Jednostka  księgowa, ref/uidref',
                  'WAL_KOD','STRING[8]','Kod waluty SLO.KOD',
: jeżeli PB.WAL<>FINFO.NAROD, to poniższe wartości wymagane
                  'RODZZAGR','STRING[48]','Wskazanie na tabelę SLO, ref/uidref',
                  'KOD_STAT','STRING[48]','Wskazanie na TYPTRAN, ref/uidref',
                  'TRYB_POS','STRING[48]','Wskazanie na TYPTRAN, ref/uidref',
                  'OPISZ','STRING[50]','Opis płatności zagranicznej na potrzeby banku',
: Koniec wymaganych wartości dla waluty <> NAROD

                  'SP','STRING[1]','Czy przelew typu Split payment (Podzielona płatność)?',
: jeżeli PB.SP='T' to poniższe wartości są wymagane
                  'SP_V','REAL','Kwota VAT dla przelewu Split payment (podzielona płatność)',
                  'KHNIP','STRING[20]','NIP kontrahenta dla przelewu Split payment (podzl. płatność)',
                  'NRFAK','STRING[50]','Numer faktury dla przelewu Split payment (podzl. płatność)',
: Koniec wymaganych wartości dla PB.SP='T'
                  'SP_WYM','STRING[1]','Znacznik, czy wymagana podzielna płatność (Split Payment)',
                  'WSK_S','STRING[1]','Znacznik czy przelew jest zbiorczy (sklejony) (T/N)',
                  'SRC_REF','STRING[16]','Rekord źródłowy tabeli z której zostanie utworzony przelew'

               );

_result:=1;
   {? var_pres('PB_TMP')>0
   || VAR_DEL.delete('PB_OP_TMP');
:: tabela PB_OP_TMP powiązana jest z tabelą PB_TMP przy pomocy SRC_REF
      PB_OP_TMP:=tab_tmp(1,'SRC_REF','STRING[16]','Rekord źródłowy tabeli z której zostanie utworzony przelew',
                        'WAL_KOD','STRING[8]','Kod waluty SLO.KOD',
                        'ODD','STRING[8]','Jednostka  księgowa',
                        'DP','DATE','Data przelewu',
                        'AN','STRING[16]','Symbol konta analitycznego',
                        'SYM','STRING[50]','Symbol rozrachunku',
                        'SYM_ZEW','STRING[50]','Symbol zewnętrzny',
                        'SYM_ROK','STRING[55]','Unikalny symbol rozrachunku',
                        'K','REAL','Kwota operacji',
                        'TYT','STRING[162]','Tytuł przelewu'
                     )
?};
1


\hbn_pb_tr_af_crt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [20.42]
:: OPIS: Triger after create tabeli PB
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PB.cntx_psh();
{? var_press('__rozklej')<=0 & Plugin.exists('HBN_PB_AF_CRT') || Plugin.run('HBN_PB_AF_CRT',PB.SRC_REF) ?};
PB.cntx_pop();~~


\hbn_pb_af_crt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [20.42]
:: OPIS: Formuła obsługuje status rekordu źródłowego na bazie którego został utworzony przelew elektroniczny
::   WE: REF rekordu źródłowego
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_srcRef:=_a;
~~


\hbn_pb_tr_bf_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [20.42]
:: OPIS: Triger before delete tabeli PB
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_press('__sklejanie')<=0
|| PB.cntx_psh();
_result:={? Plugin.exists('HBN_PB_BF_DEL')
         || Plugin.run('HBN_PB_BF_DEL',PB.SRC_REF)
         || 1
         ?};
   PB.cntx_pop()
|| _result:=1
?};
_result


\hbn_pb_bf_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [20.42]
:: OPIS: Formuła obsługuje status rekordu źródłowego na bazie którego został utworzony przelew elektroniczny
::   WE: REF rekordu źródłowego
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_srcRef:=_a;
1


\hbn_pb_tr_af_edt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [20.42]
:: OPIS: Triger after edit tabeli PB
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PB.cntx_psh();
{? Plugin.exists('HBN_PB_AF_EDT') || Plugin.run('HBN_PB_AF_EDT',PB.SRC_REF) ?};
PB.cntx_pop();~~


\hbn_pb_af_edt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AFI [20.42]
:: OPIS: Formuła obsługuje status rekordu źródłowego na bazie którego został utworzony przelew elektroniczny
::   WE: REF rekordu źródłowego
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_srcRef:=_a;
~~


\spr_vat_wto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [12.51]
:: OPIS: Sprawdza czy dla dokumentu wtórnego, dokument źródłowy jest typu VAT albo SAD
::   WY: 1 - jest źródłowy i jest typu VAT albo SAD, 0 - w przciwnym wypadku
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
DOK.cntx_psh();
{? 4+DOK.DOKZRODL='doku' & +DOK.DOKZRODL=16
|| DOK.use(8+DOK.DOKZRODL); DOK.prefix();
   {? DOK.seek(BB.sqlint(8-DOK.DOKZRODL),8+DOK.DOKZRODL)
   || {? DOK.DOK_REJ().M_ODD='T'
      || _typ:=DOK_REJ.SLO().KOD;
         {? _typ='VAT' | _typ='SAD' || _ret:=1 ?}
      ?}
   ?}
?};
DOK.cntx_pop();
_ret

:Sign Version 2.0 jowisz:1045 2023/12/29 10:50:15 7e389405cece6c2c4f37f3292d20a0d586e5c053a734c5b5b197ed487351687b01d3053316680987c1c896acc06d373d306bad460415daea80f03bb7c6564e92018ad7bef833dc468c3563787bc71a3f464d191368f388dddbfd807bf8111b883deb5456b00d145325edef3aefb069c77dcaec5508929a37783ea4b26754326f
