:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lmg_mag_dapz.fml
:: Utworzony: 30.06.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Obsługa dokumentu magazynowego przychodowego
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# properties=SERVICE
::# permissions=ODDZ,LMG,TARD
::# parses=exec('parses_nd','lmg')
::# access=exec('sprUprMag','%todo')
::# kind=WE, symbol=TYPYDOK, type=_TYPYDOK, name=Typ dokumentu magazynowego,    required=N, fml_val="exec('typydok','!lmg_mag_dapz')", fml_exp="exec('typydok_export','magdok_nag',_a)"
::# kind=WE, symbol=ND,      type=_ND,      name=Dokument magazynowy,           required=N, keyref=T
::# kind=WE, symbol=FAKS,    type=_FAKS,    name=Dokument zakupu,               required=N
::# kind=WE, symbol=RODZAJ,  type=STRING,   name=Rodzaj dokumentu,              required=N, fml_val="exec('rodzaj','magdok_nag',1)"
::# kind=WY, symbol=ND,      type=_ND,      name=Dokument magazynowy,           required=N
::# kind=WY, symbol=NDPOW,   type=_ND,      name=Dokument magazynowy powiązany, required=N
::# kind=WY, symbol=RESULT,  type=STRING,   name=Rezultat działania,            required=N

_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

_context:=params_get().context;

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_service:=_mp.isService();
_proces:=_mp.pathProc();
_auto:=_mp.isAutoRun();
_autoakc:=exec('autoAkc','#b__box',_mp,600080,'LMG_MAG_EAMG');
_group:=_mp.isGroup();

{? _proces & ~_service
:: Sprawdzenie parametrów pracy dla czynności startowej
|| {? ST.AR=0 | ST.ODDZ_KOD='' | ST.MAG=null() || FUN.info('Ustaw parametry pracy.'@); _wyn:=0; return() ?}
?};

{? var_pres('RESULT',_out)<>type_of('') || _out.RESULT:='OK'; _mp.save('OUT','RESULT','OK') ?};

_rodzaj:={? var_pres('RODZAJ',_in)=type_of(~~) || '' || _in.RODZAJ ?};
_nd_ref:={? var_pres('ND',_in)=type_of(~~) || null() || _in.ND ?};
{? _nd_ref<>null() || _out.ND:=_nd_ref; _mp.save('OUT','ND',_nd_ref) ?};
_faks:={? var_pres('FAKS',_in)=type_of(~~) || null() || _in.FAKS ?};
_auto:=(_nd_ref<>null() & (_auto | _service)) | (_auto & _faks);

{? _mp.pathTodo()
:: Ustawienie kontekstu wg instancji elementu w procesie
|| {? var_pres('ND',_out)=type_of(null()) & _out.ND
   || 1
   |? ~_mp.isMicro()
   || _akcja:='START_TODO'
   || _mp.error('Brak parametru wyjściowego ND.')
   ?}
?};

:: Sprawdzenie uprawnień
{? params_exec('permissions_chk','lmg')=0 || return() ?};

:: Wyzwalacz, który po dodaniu nagłówka dokumentu:
:: - add: dodaje rekord kluczowy nagłówka dokumentu
::   del: usuwa rekord kluczowy nagłówka dokumentu
:: - add: zapisuje parametr wyjściowy ND = wskazanie na nagłówek dokumentu
::   del: zapisuje parametr wyjściowy ND = null
_mp.trigRef('ND',,1,,exec('kind_out','#b_port'),'ND');

{? _akcja='DołączMWA'
|| ND.cntx_psh(); DK.cntx_psh();
   _wsenv:=exec('wsenv','#mwapi');
   _buffers:=_context.BUFFERS;
   _nd:=exec('addnag_mwa','magdok_nag',_buffers.ND);
   {? _nd<>null()
   || {? exec('adddk_mwa','magdok_poz',_nd,_buffers.POZ)
      || ND.prefix();
         {? ND.seek(_nd)
         || _args:=exec('akc_dok_a','magdok_nag');
            _args.ASK:='N';
            {? exec('nd_zakoncz','magdok_nag',1,_args,_autoakc)
            || _mp.save('OUT','ND',ND.ref());
               _mp.done();
               _wsenv.IDADD:=ND.IDADD
            || _tab:=__kom.tab();
               _tab.prefix();
               {? _tab.first()
               || {!
                  |? _wsenv.add_error(_tab.MESSAGE);
                     _tab.next()
                  !}
               ?};
               {? exec('n_usun','magdok_nag',0)
               || _wsenv.add_error('Nie można zaakceptować dokumentu, dokument został anulowany.'@)
               ?}
            ?}
         ?}
      ?}
   ?};
   ND.cntx_pop(); DK.cntx_pop()

|? _akcja='UsuńMWA'
|| ND.cntx_psh(); DK.cntx_psh();
   _wsenv:=exec('wsenv','#mwapi');
   {? ND.STAT_REJ='N'
   || _context.RESULT:=1
   |? ND.STAT_REJ='T'
   || _wsenv.add_error('Dokument %1 jest zaakceptowany.'@[ND.SYM])
   || _context.RESULT:=exec('wyc_dok','magdok_nag',0,'N',,,1)
   ?};
   {? _context.RESULT>0
   || _context.RESULT:=exec('n_usun','magdok_nag',0)
   ?};
   ND.cntx_pop(); DK.cntx_pop()

|? _service & _nd_ref=null()
|| _mp.error('Dla czynności typu serwis brak wymaganego parametru ND.')

|? ~_service & _nd_ref=null() & gsub(exec('valueBiPort','#b__box',BI_PREL.ref(),'IN','ND'),'~','')<>''
|| _mp.error('Dokument nie został odnaleziony, prawdopodobnie został usunięty.')

|? var_pres('ND',_out)=type_of(null()) & exec('FindAndGet','#table',ND,_out.ND,,"ND.STAT_REJ",'N')<>'N' & ~_group
|| _mp.done()

|? ~_service & _faks
|| {? exec('FindAndGet','#table',FAKS,_faks,,"FAKS.STAT_REJ",'')='A'
   || _mp.error('Dokument zakupu został anulowany.')
   || _res:=exec('powfzmag','!lmg_mag_dapz',_faks,_auto
             ,{? var_pres('TYPYDOK',_in)=type_of(null()) || _in.TYPYDOK || null() ?});
      {? (5+_res)='nagdo'
      || _nd_ref:=exec('FindAndGet','#table',ND,_res,,,null());
         {? _nd_ref<>null()
         || ND.cntx_psh();
            {? ND.seek(_nd_ref) | (ND.prefix();ND.seek(_nd_ref))
            || _stmag:=ST.MAG;
               _star:=ST.AR;
               _stam:=ST.AM;
               ST.MAG:=ND.MAG;
               ST.AM:=ND.AM;
               ST.AR:=ND.AR;
               _arg:={? var_pres('_context')<>type_of(~~) & var_pres('AKC_DOK',_context)=type_of(obj_new('a'))
                     || _context.AKC_DOK
                     || exec('akc_dok_a','magdok_nag')
                     ?};
               _arg.SERVICE:=_mp.isService();
               exec('nd_zakoncz','magdok_nag',1,_arg,_autoakc);
               ST.MAG:=_stmag;
               ST.AR:=_star;
               ST.AM:=_stam
            || _mp.error('Nie znaleziono dokumentu.')
            ?};
            ND.cntx_pop()
         ?};
         _mp.save('OUT','ND',_nd_ref);
         _mp.done()
      |? (3+_res)='ok:'
      || {? ~_auto || FUN.info(3-_res) ?};
         _mp.done()
      |? _res='anuluj'
      || ''
      || _mp.error(_res)
      ?}
   ?}

|? ~_service &
   (_akcja='Dołącz'
    | (_proces & _nd_ref=null())
    | _akcja='START_TODO')
:: Obsługa Dołącz - dołącz w oknie obszaru i start procesu z pulpitu
|| _typydok_t:=
      {? var_pres('TYPYDOK',_in)=type_of(~~)
      || {? _akcja='Dołącz'
         || BEER.TYPYDOK().T
         || ''
         ?}
      |? var_pres('TYPYDOK',_in)=type_of(null())
      || exec('FindAndGet','#table',TYPYDOK,_in.TYPYDOK,,"TYPYDOK.T")
      || ''
      ?};

:: Parametr 'akcja' wykorzystywany w formułach przycisków 'Pozycje', 'Zakończ'
   params_set('out',_out,'mp',_mp,'akcja',_akcja);
   exec('n_add','magdok_nag',1,_typydok_t,,_rodzaj);

:: Podczytanie parametrów wyjściowych
   _outa:=_mp.load(exec('kind_out','#b_port'));
   {? var_pres('ND',_outa)<>type_of(~~) & _outa.ND
:: Dodano dokument
   ||
::    Ustawienie się na dodanym dokumencie w widoku obszaru
      {? _mp.pathArea() || ND.seek(_outa.ND) ?}
:: Wycofanie czynności bo nie dodano dokumentu
   || _mp.cancel()
   ?}

|? _auto | (_akcja='Zakończ_wer' & _mp.pathArea())
||
:: dla serwisu ustalamy jego środowisko
   _msk:=ref_name(_nd_ref)+3;
   {? _nd_ref<>null()
   || exec('mag_psh','open_tab');
      {? _service  | (_auto & _msk<>(ND.name()+3))
      || exec('mag_open','open_tab',(1+_msk),(_msk+2))
      ?};
      {? ND.seek(_nd_ref) | (ND.prefix();ND.seek(_nd_ref))
      || {? _service
         || ST.MAG:=ND.MAG;
            ST.AM:=ND.AM;
            ST.AR:=ND.AR
         ?}
      || _mp.error('Nie znaleziono dokumentu.')
      ?}
   ?};
   _arg:=
      {? var_pres('_context')<>type_of(~~) & var_pres('AKC_DOK',_context)=type_of(obj_new('a'))
      || _context.AKC_DOK
      || exec('akc_dok_a','magdok_nag')
      ?};
   _arg.SERVICE:=_mp.isService();
   {? var_pres('GROUP',_arg)
   || _arg.GROUP:=_group
   ?};
   {? exec('nd_zakoncz','magdok_nag',_auto,_arg,_autoakc)
   || _res:=1;
      ND.cntx_psh();
      {? _nd_ref=null() & BEER.NDPOW<>null()
      || _name:=ND.name();
         _namm:=ref_name(BEER.NDPOW);
         {? _namm<>_name
         || ND.cntx_psh();
            ND.use(_namm)
         ?};
         ND.clear();
         {? ND.seek(BEER.NDPOW)
         || _mp.save('OUT','NDPOW',BEER.NDPOW);
            _mp.save('OUT','ND',exec('FindAndGet','#table',ND,BEER.NDPOW().NDSQL,,,null()))
         || _res:=0
         ?};
         {? _namm<>_name
         || ND.use(_name);
            ND.cntx_pop()
         ?}
      ?};
      ND.cntx_pop();
      {? _res || _mp.done() || _mp.cancel() ?}
   |? _service
   || _out.RESULT:='BŁĄD';
      _mp.save(,_out);
      _mp.done()
   ?};
   {? _nd_ref<>null() || exec('mag_pop','open_tab') ?}

|? _akcja='Popraw'
   | _mp.pathTodo()
||
   _arg:=
      {? var_pres('_context')<>type_of(~~) & var_pres('POPRAW',_context)=type_of(obj_new('a'))
      || _context.POPRAW
      || exec('nag_edit_a','magdok_nag')
      ?};
   {? var_pres('ND',_out)=type_of(null())
:: Uruchomione w procesie
   || ND.cntx_psh();
      TYPYDOK.cntx_psh();
      ND.prefix();
      TYPYDOK.prefix();
      {? ND.seek(_out.ND) & TYPYDOK.seek(ND.TYP)
      || params_set('out',_out,'mp',_mp,'akcja',_akcja);
         exec('nag_edit','magdok_nag',_arg);

         _mp.descTodo()
      ?};
      ND.cntx_pop();
      TYPYDOK.cntx_pop()
   |? _mp.pathTodo()
:: Uruchomione zadanie z listy todo i brak _out.ND wtedy zadanie wycofujemy
   || _mp.cancel()
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      params_set('out',_out,'mp',_mp,'akcja',_akcja);
      {? exec('nag_edit','magdok_nag',_arg)
      || _mp.done()
      || _mp.cancel()
      ?}
   ?}

|? _akcja='Usuń'
|| {? var_pres('ND',_out)=type_of(null())
:: Uruchomione w procesie
   || _nd:=null();
      ND.cntx_psh();
      _rec:=exec('rec_after_del','#table',ND);
      ND.prefix();
      {? ND.seek(_out.ND)
      ||
         _wyn:=exec('n_usun','magdok_nag');

         {? ~ND.seek(_out.ND)
::       Wycofuję instancję jeśli nie znaleziono dokumentu
         || _mp.cancel()
         ?};
         _nd:=ND.ref()
      ?};
      ND.cntx_pop();
      {? _wyn=1 & _rec<>null() || ND.seek(_rec) ?};
::    Ustawienie się na kolejnym dokumencie w widoku obszaru
      {? _mp.pathArea() || {? _nd || ND.seek(_nd) ?} ?}
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      exec('n_usun','magdok_nag');

      _mp.done()
   ?}

|| _mp.error('Nieobsługiwana ścieżka.')
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));
_out:=_mp.load(exec('kind_in','#b_port'));

_ref:=
   {? var_pres('ND',_out)=type_of(null()) & _out.ND || _out.ND
   |? var_pres('ND',_in)=type_of(null()) & _in.ND || _in.ND
   || _krefs:=_mp.getRefs();
      {? var_pres('[1]',_krefs)=type_of('') & _krefs[1]<>''
      || exec('FindAndGet','#table',ND,_krefs[1],,,null())
      || null()
      ?}
   ?};
_faks:={? var_pres('FAKS',_in)=type_of(null()) & _in.FAKS || _in.FAKS || null() ?};
{? _ref=null() & _faks
|| 'Zarejestruj dokument przyjęcia magazynowego na podstawie dokumentu %1'@@[exec('record','#to_string',_faks)]
|? _ref
|| 'Zakończ rejestrację w magazynie %1 '
   'dokumentu przyjęcia %2'@@[exec('FindAndGet','#table',ND,_ref,,"ND.MAG().SYM",''),exec('record','#to_string',_ref)]
|| 'Zarejestruj dokument przyjęcia magazynowego'@@
?}


\typydok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na wartość parametru TYPYDOK
::   WY: TYPYDOK.ref()
::----------------------------------------------------------------------------------------------------------------------
_prod:=exec('tte_lic','tte');
exec('typ_dok','lmg','"TYPYDOK".P=\'T\''
    +{? _prod='N' || ' and "TYPYDOK".WYR=\'N\'' || '' ?}
    +' and not ("TYPYDOK".T in (\'INW+\',\'PRC+\',\'KR+\',\'KN+\'))'
     ,,,0,0,,,,,-1)


\Faks2Nd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Wystawienie dokumentu magazynowego na podstawie faktury zakupu
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_DAPZ';
_params.AKCJA:='Przyjęcie';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FAKS',FAKS.ref());
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'RODZAJ','PZ');

exec('mp_run','#b__box',_params);
exec('init_zak','lzk')


\powfzmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: generacja lub wyswietlenie dokumentow magazynowych powiazanych z faktura zakupowa
::   WE: _a - FAKS.ref()
::       _b - czy uruchomiona automatycznie 0-nie 1-tak
::       _c - typ dokumentu przychodowego
::   WY: rezultat wystawienia dokumentu: uidref ND, ''-rezygnacja z wystawienia, komunikat o błędzie
::  OLD: \powfzmag/zakupy.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
FAKS.cntx_psh();
FAKS.prefix();
{? FAKS.seek(_a)
|| {? ~((';ZE'*FAKS.WHERE)>1)
   || _wyn:='Funkcja dostępna wyłącznie dla dokumentów zakupowych lub wewnętrznych.'@
   |? FAKS.WHERE='L'
   || _wyn:='Funkcja niedostępna dla dokumentów zaliczkowych.'@
   |? FAKS.T().KOR='T'
   || _wyn:='Funkcja niedostępna dla korekt zakupu. Dokumenty korygujące zakup w magazynie należy wprowadzić ręcznie.'@
   |? exec('FindInSet','#table','FAP','FAP',FAKS.ref)=null
   || _wyn:='ok:Brak pozycji na fakturze zakupowej. Niemożliwa generacja dokumentu magazynowego.'@
   |? (_czy_sa:=exec('sprfp2dk','faktury_wspolne',FAKS.ref))<>1
   || _wyn:={? _czy_sa=2
            || 'ok:Na fakturze pozostały nierozpisane wyłącznie pozycje usługowe. '
               'Niemożliwa generacja dokumentu magazynowego.'@
            || 'ok:Wszystkie pozycje z faktury zakupowej są już powiązane z dokumentami magazynowymi.'@
            ?}
   || {? FAKS.r_lock(1,1,1)
      || _wyn:=exec('dok_maga','faktury_wspolne',_b,_c);
         FAKS.r_unlock()
      || {? FUN.ask('Dokument %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@[FAKS.SYM]) & FAKS.r_lock(1,,1)
         || FAKS.r_unlock()
         ?}
      ?}
   ?}
|| _wyn:='Nie znaleziono dokumentu zakupu.'@
?};
FAKS.cntx_pop();
_wyn

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:39 8ceaa5b8b3b7c6e32a9180cb1a381786145abd4c62c25aa79aeceedf12a579623d506d5440fa55693570a78ff9f493a888db7501f3985c16705219c229b9f40ffce55dd44fd46ee82dbbfcda154c87427f3d1cc4af09b135c2f04e80a1d77b74d341fb7b9177eac03181c65b3bbb62b7df0d651da4f7557ca02fe41250187db2
