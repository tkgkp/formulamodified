:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_pswi.fml
:: Utworzony: 19.01.2016
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły czynności ZWS_PAR_PSWI - Świadczenia.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Świadczenia - główna formuła czynności.
::  OLD: \menu/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);

exec('__RUB','object');

exec('run','!zws_par_pswi');
~~


\run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Świadczenia - utworzenie, skonfigurowanie i wyświetlenie menadżera.
::----------------------------------------------------------------------------------------------------------------------
_cfg:=exec('config_run','!zws_par_pswi');
params_set('cfg',_cfg);

IS_DEF.cntx_psh();
IS_DEF.win_sel(_cfg.WND);
IS_DEF.select();
IS_DEF.cntx_pop();
~~


\config_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=obj_new('WND','Z','P');

_obj:="
   _obj:=obj_new('KEY','REF');
   _obj.KEY:='OPIS';
   _obj.REF:=null;
   _obj
";

_cfg.WND:=exec('config_wnd','!zws_par_pswi');
_cfg.Z:=_obj();
_cfg.P:=_obj();

_cfg


\config_wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__WND','#object');

_acr:='CFG';
{? (_wnd:=__WND.SEL.get(IS_DEF,_acr))<>''
|| return(_wnd)
?};

: okienko główne czynności - kontener do wstawiania zakładek
_wnd:=IS_DEF.grp_make('Świadczenia',
:  po wyświetleniu
   "  params_set(params_get());
      IS_LIM.index('OD');
      IS_OGR.index('OPIS');
      ~~
   ",
:  identyfikator
   'pswi_cfg',
:  położenie
   ,,
:  zamknięcie
   ""
);

: ZFŚS
IS_DEF.grp_sel(_wnd,IS_DEF,'WER','Zakładowy Fundusz Świadczeń',
:  po odświeżeniu
   "exec('config_akc','!zws_par_pswi')",
:  położenie i wysokość
   ,,,
:  przed obsługą
   "  _cfg:=params_get().cfg;
      IS_VAR.RODZAJ:='Z';
      {? _a
      || IS_DEF.index(_cfg.Z.KEY);
         IS_DEF.prefix(IS_VAR.RODZAJ);
         IS_DEF.seek(_cfg.Z.REF)
      ?}
   ",
:  po obsłudze
   "  _cfg:=params_get().cfg;
      {? _a
      || _cfg.Z.KEY:=IS_DEF.index('?');
         _cfg.Z.REF:=IS_DEF.ref()
      ?}
   ",
:  utrwalenie, aktywacja, wypełnienie
   0,0,'maximized'
);

: Pozostałe
IS_DEF.grp_sel(_wnd,IS_DEF,'WER','Pozostałe wypłaty',
:  po odświeżeniu
   "exec('config_akc','!zws_par_pswi')",
:  położenie i wysokość
   ,,,
:  przed obsługą
   "  _cfg:=params_get().cfg;
      IS_VAR.RODZAJ:='P';
      {? _a
      || IS_DEF.index(_cfg.P.KEY);
         IS_DEF.prefix(IS_VAR.RODZAJ);
         IS_DEF.seek(_cfg.P.REF)
      ?}
   ",
:  po obsłudze
   "  _cfg:=params_get().cfg;
      {? _a
      || _cfg.P.KEY:=IS_DEF.index('?');
         _cfg.P.REF:=IS_DEF.ref()
      ?}
   ",
:  utrwalenie, aktywacja, wypełnienie
   0,0,'maximized'
);

: Limity
IS_DEF.grp_sel(_wnd,IS_LIM,'WER','Limity',
:  po odświeżeniu
   "  _akc:='';
      {? exec('test_lim_pow','!zws_par_pswi',IS_LIM,IS_LIM.OD,IS_LIM.DO)<>''
      || _akc:='PU'
      ?};
      IS_LIM.actions_grayed('WER',_akc);
      grp_disp(IS_OGR,'WER',1,1)
   ",
:  położenie i wysokość
   ,,20,
:  przed obsługą
   "",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   0,0,'maximized'
);

: Świadczenia
IS_DEF.tab_splt(_wnd,,'horizontal','bottom');
IS_DEF.grp_sel(_wnd,IS_OGR,'WER',,
:  po odświeżeniu
   "IS_OGR.actions_grayed('WER',{? exec('dom_empty','#table',IS_LIM) || 'D:D' || '' ?})",
:  położenie i wysokość
   ,,,
:  przed obsługą
   "IS_OGR.prefix({? exec('dom_empty','#table',IS_LIM) || null || IS_LIM.ref() ?})",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   0,0,'maximized'
);

__WND.SEL.put(IS_DEF,_acr,_wnd);

_wnd


\config_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Ustawia dostępne dla bieżącego opisu akcje.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_lock:='';
{? IS_DEF.count()<>0
|| _lock+='U'
?};
IS_DEF.actions_grayed('WER',_lock)


\is_x_rodzaj_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wartość początkowa pola RODZAJ w definicji świadczenia i opisie programu lub wybór rodzaju w okienku. Wywołanie
::       bez argumentu - zwraca wartość przechowywaną w polu RODZAJ zmiennej IS_VAR, wywołanie z argumentem liczbowym
::       różnym od zera wyświetla okienku, w którym użytkownik może określić wartość pola.
::   WE:
::   WY: Rodzaj świadczeń:
::       'Z' - ZFŚS
::       'P' - Pozostałe
::  OLD: \rodzaj/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
IS_VAR.RODZAJ


\is_def_x_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed redakcją pól tabeli IS_DEF.
::   WE:
::   WY:
::  OLD: \def_ppr/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
_fld:=cur_afld();

{? _fld='OSOBA'
|| IS_VAR.SPR_PRAC
|| 1
?}


\is_def_spr_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_RS:=sql('select top 1 P from IS_ROZL where P is not null');
IS_VAR.SPR_PRAC:={? type_of(_RS)=type_of(SYSLOG) || _RS.first() ?}


\is_def_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed dołączeniem rekordu tabeli IS_DEF.
::   WE:
::   WY:
::  OLD: \mod_def/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
IS_VAR.SPR_PRAC:=1


\is_def_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed poprawieniem rekordu tabeli IS_DEF.
::   WE:
::   WY:
::  OLD: \mod_def/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
exec('is_def_spr_prac','!zws_par_pswi');
1


\is_def_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed usunięciem rekordu tabeli IS_DEF.
::   WE:
::   WY:
::  OLD: \mod_def/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
{? IS_DEF.count()=0
|| return(1)
?};

exec('del_warn','#table');
0


\is_def_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Sprawdzenie definicji świadczenia.
::   WE:
::   WY: Zgodna ze specyfikacją dla akcji "rekord po"
::  OLD: \spr_def/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
: Sprawdź wypełnienie wymaganych pól i unikalność kluczy
_chk:=__CHK.table(IS_DEF,-menu_txt()='popraw',,'OPIS');

{? type_of(_chk)<>type_of(0) | ~_chk
|| return(_chk)
?};

{? IS_DEF.KW<0
|| IS_DEF.KW:=0
?};

1


\is_lim_is_lim_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: darokr [2010]
:: OPIS: Formula na blank pola IS_OGR.IS_LIM
::  OLD: \is_lim/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
IS_LIM.ref()


\is_var_lim_info_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Ustala treść podpowiedzi, opisujący rodzaj limitu
::   WE:
::   WY:
::  OLD: \limnfo/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
IS_VAR.LIM_INFO:=
   {? IS_LIM.RODZAJ='U' || 'Ubezpieczenie'
   |? IS_LIM.RODZAJ='P' || 'Podatek'
   || ''
   ?}


\is_lim_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed dołączeniem rekordu tabeli IS_LIM.
::   WE:
::   WY:
::  OLD: \mod_lim/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
__OD:=__DO:=date(0,0,0);
1


\is_lim_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed poprawieniem rekordu tabeli IS_LIM.
::   WE:
::   WY:
::  OLD: \mod_lim/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('test_lim_pow','!zws_par_pswi',IS_LIM,IS_LIM.OD,IS_LIM.DO)=''
|| return(1)
?};

FUN.emsg(
   'W okresie obowiązywania limitu rozliczono świadczenia.\n'
   'Ze względu na rozliczenie, zmiana zapisu nie jest możliwa.'@
);
0


\is_lim_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed usunięciem rekordu tabeli IS_LIM.
::   WE:
::   WY:
::  OLD: \mod_lim/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
{? IS_LIM.count()=0
|| return(1)
?};

exec('del_warn','#table');
0


\is_lim_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Sprawdzenie poprawności informacji o kwocie limitu świadczeń.
::       - limit zawsze musi mieć określone daty początku i końca okresu
::       - data końca nie może być wcześniejsza od daty początku
::       - dla danego rodzaju limitu i kwoty, okresy jego obowiązywania nie mogą się pokrywać
::   WE:
::   WY: Zgodna ze specyfikacją akcji "rekord po"
::  OLD: \spr_lim/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
: zaokrągl do precyzji pola
IS_LIM.KW:=IS_LIM.KW$2;

{? (_chk:=__CHK.record(IS_LIM,,'OD','DO'))<>''
|| return(_chk)
?};

{? IS_LIM.DO<IS_LIM.OD
:  koniec wcześniejszy od początku
|| exec('alert','overlap');
   return('OD')

|? IS_LIM.KW<0
:  ujemna kwota ograniczenia
|| FUN.emsg('Kwota limitu nie może być ujemna.'@);
   return('KW')

|| _RS:=sql(
      'select IS_DEF.OPIS '
      'from   IS_OGR join IS_LIM join IS_DEF '
      'where  IS_OGR.IS_LIM<>:_a and '
      '       IS_OGR.IS_DEF in ( '
      '          select IS_OGR.IS_DEF '
      '          from   IS_OGR join IS_LIM '
      '          where  IS_LIM=:_a '
      '       ) and '
      '       IS_LIM.OD<=to_date(:_c) and '
      '       to_date(:_b)<=IS_LIM.DO and '
      '       IS_LIM.RODZAJ=\':_d\'',
      IS_LIM.ref(),IS_LIM.OD,IS_LIM.DO,IS_LIM.RODZAJ
   );
   {? type_of(_RS)<>type_of(SYSLOG) | ~_RS.first()
   || return(1)
   ?};
   FUN.emsg(
      'Wykryto konflikt z już istniejącymi zapisami.\n%1'@
      [{? (-menu_txt='popraw')
       || 'Poprawienie zapisu nie jest możliwe.'@
       || 'Dołączenie zapisu nie jest możliwe.'@
       ?}]
   );
   'OD'
?}


\test_lim_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Sprawdza, czy rekord w tabeli IS_LIM lub IS_OGR może być poprawiony lub usunięty. Obowiązkowym argumentem
::       wywołania jest identyfikator tabeli, dla której ma być przeprowadzony test. Sprawdzana jest kartoteka IS_WYPL
::       i IS_ROZL. Jeśli znalezione zostaną zapisy "rozliczające" świadczenie danego rodzaju w okresie obowiązywania
::       limitu, zwracane jest 1, w przeciwnym wypadku 0.
::   WE: _a [TABLE] - alias do tabeli (IS_LIM lub IS_OGR)
::       _b [DATE] - początek okresu
::       _c [DATE] - koniec okresu
::   WY:
::  OLD: \lnk_lim/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(SYSLOG) | (_a<>IS_LIM & _a<>IS_OGR)
|| return(1)
?};

_od:=$(_b~1)+2+('0'+$(_b~2)+2);
_do:=$(_c~1)+2+('0'+$(_c~2)+2);

{? _a=IS_LIM
:  wywołanie z poziomu kartoteki limitów
:  sprawdzenie dla każdego z ograniczeń
|| IS_OGR.cntx_psh();
   IS_OGR.index('UNIQUE');
   IS_OGR.prefix(_a.ref());
   _loop:=IS_OGR.first();
   {!
   |? _loop
   |! {? (_e:=exec('test_lim_pow','!zws_par_pswi',IS_OGR,_b,_c)).first()
      || _od:=$(IS_LIM.OD~1)+2+('0'+$(IS_LIM.OD~2)+2);
         _do:=$(IS_LIM.DO~1)+2+('0'+$(IS_LIM.DO~2)+2);
         {? _e.MS<_od
         || IS_OGR.cntx_pop();
            return('OD')
         ?};
         _e.last();
         {? _do<_e.MS
         || IS_OGR.cntx_pop();
            return('DO')
         ?}
      ?};
      obj_del(_e);
      _loop:=IS_OGR.next()
   !};
   IS_OGR.cntx_pop();
   ''

|? _a=IS_OGR
:  rekord w IS_LIM jest ustalony
|| sql(
      'select   substr(IS_WYPL.LT,2,4) MS '
      'from     IS_WYPL '
      'where    IS_WYPL.IS_DEF=:_c and '
      '         \':_a\'<=substr(IS_WYPL.LT,2,4) and '
      '         substr(IS_WYPL.LT,2,4)<=\':_b\' '
      'order by MS '
      'union all '
      'select   substr(IS_ROZL.LT,2,4) MS '
      'from     IS_ROZL join IS_WYPL '
      'where    IS_WYPL.IS_DEF=:_c and '
      '         \':_a\'<=substr(IS_ROZL.LT,2,4) and '
      '         substr(IS_ROZL.LT,2,4)<=\':_b\'',
   _od,_do,IS_OGR.IS_DEF)
?}


\is_ogr_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed dołączeniem rekordu tabeli IS_OGR.
::   WE:
::   WY:
::  OLD: \mod_ogr/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
IS_DEF.prefix();
IS_DEF.f_set(
   'OPIS',,
   'REFERENCE not in (select IS_DEF from IS_OGR where IS_LIM=:_a)',
   IS_LIM.ref()
)


\is_ogr_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed poprawieniem rekordu tabeli IS_OGR.
::   WE:
::   WY:
::  OLD: \mod_ogr/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('test_lim_pow','!zws_par_pswi',IS_OGR,IS_LIM.OD,IS_LIM.DO).first()
|| IS_DEF.prefix();
   IS_DEF.f_set(
      'OPIS',,
      'REFERENCE not in (select IS_DEF from IS_OGR where IS_LIM=:_a) or '
      'REFERENCE=:_b',
      IS_LIM.ref(),
      IS_OGR.IS_DEF
   );
   return(1)
?};

FUN.emsg(
   'W okresie %1 - %2 rozliczono świadczenia.\n'
   'Ze względu na rozliczenie, zmiana zapisu nie jest możliwa.'@
   [IS_LIM.OD$4,IS_LIM.DO$4]
);
0


\is_ogr_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed usunięciem rekordu tabeli IS_OGR.
::   WE:
::   WY:
::  OLD: \mod_ogr/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('test_lim_pow','!zws_par_pswi',IS_OGR,IS_LIM.OD,IS_LIM.DO).first()
|| return(1)
?};

FUN.emsg(
   'W okresie od %1 do %2 rozliczono świadczenia.\n'
   'Ze względu na rozliczenie, usunięcie zapisu nie jest możliwe.'@
   [IS_LIM.OD$4,IS_LIM.DO$4]
);
0


\is_ogr_overlap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Formuła sprawdza nakładanie się okresów limitów dla bieżącego świadczenia.
::   WE: [_a] [NUMBER] - Tryb modyfikacji:
::                      0 - Dołącznie [domyślnie];
::                      1 - Poprawianie.
::       [_b] [NUMBER] - Przetwarzanie wsadowe (bez komunikatów) [0*/1].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
_batch:=var_pres('_b')=type_of(0) & _b;

_ok:=1;

IS_LIM.cntx_psh();

_ref:={? _put || IS_OGR.ref() || null ?};
_lim:=IS_OGR.IS_LIM;
_od:=IS_OGR.IS_LIM().OD;
_do:=IS_OGR.IS_LIM().DO;

IS_OGR.cntx_psh();
IS_OGR.index('OD');
IS_OGR.prefix(IS_OGR.IS_LIM().RODZAJ,IS_OGR.IS_DEF);
_loop:=IS_OGR.first();
{!
|? _ok & _loop
|! IS_OGR.IS_LIM();
   {? IS_OGR.ref<>_ref & IS_OGR.IS_LIM<>_lim & exec('is','overlap',IS_LIM,_od,_do)
   || {? ~_batch
      || FUN.emsg(
            'Wykryto konflikt z istniejącymi informacjami.\n'
            '(okres: %1 - %2, kwota: %3)\n%4'@
            [IS_LIM.OD$4,IS_LIM.DO$4,form(IS_LIM.KW,,2),
             {? _put
             || 'Poprawienie zapisu nie jest możliwe.'@
             || 'Dołączenie zapisu nie jest możliwe.'@
             ?}]
         )
      ?};
      _ok:=0
   ?};
   _loop:=IS_OGR.next()
!};
IS_OGR.cntx_pop();

IS_LIM.cntx_pop();

_ok


\is_ogr_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Sprawdza poprawność danych redagowanych w tabeli IS_OGR
::   WE:
::   WY:
::  OLD: \spr_ogr/isplac.fml
::----------------------------------------------------------------------------------------------------------------------
_mod:=(-menu_txt()='popraw');
_chk:=__CHK.table(IS_OGR,_mod,,'IS_DEF');

{? type_of(_chk)<>type_of(0) | ~_chk
|| return(_chk)
?};

_ret:=exec('is_ogr_overlap','!zws_par_pswi',_mod);
IS_OGR.IS_LIM();
_ret


\is_ogr_okno_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
IS_DEF.f_clear(1);
1


\is_lim_wer_bfo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.42]
:: OPIS: Funkcja do kopiowania limitu na podstawie wybranego limitu.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
IS_LIM.get();
_org:=exec('obj_ntab_set','#array',,
   'ref',IS_LIM.ref(),
   'RODZAJ',IS_LIM.RODZAJ
);

{!
|? {? IS_LIM.edit()
   || {? exec('check','overlap',null(),IS_LIM,,,1,,,'RODZAJ',_org.RODZAJ)='' |
         FUN.ask('%1\n%2'
            ['Okres obowiązywania limitu pokrywa się z już istniejącym.'@,'Czy na pewno kontynuować kopiowanie?'@]
         )
      || {? IS_LIM.add() &
            (  _org.RODZAJ=IS_LIM.RODZAJ |
               FUN.ask('%1\n%2' ['Zmieniono rodzaj limitu świadczenia.'@,'Czy kopiować świadczenia?'@])
            )
         || _err:=0;
            IS_OGR.cntx_psh();
            IS_OGR.index('UNIQUE');
            IS_OGR.prefix(_org.ref);
            {? IS_OGR.first()
            || {!
               |? IS_OGR.IS_LIM:=IS_LIM.ref();
                  IS_OGR.cntx_psh();
                  IS_OGR.prefix();
                  {? exec('is_ogr_overlap','!zws_par_pswi',0,1)
                  || IS_OGR.add()
                  || _err+=1
                  ?};
                  IS_OGR.cntx_pop();
                  IS_OGR.next()
               !}
            ?};
            IS_OGR.cntx_pop();
            {? _err
            || FUN.emsg(
                  'Ze względu na konflikt z istniejącymi zapisami\n'
                  'nie wszystkie świadczenia mogły być przekopiowane.'@
               )
            ?}
         ?}
      ?};
      0
   || ~FUN.ask('Czy rezygnujesz z dodania nowego limitu świadczeń?'@)
   ?}
!};
~~


\is_def_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli IS_DEF.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};

{? exec('lic','#b_domain','POR')
|| {? bfld('BNFTT')<>IS_DEF.BNFTT
   || IS_WYPL.cntx_psh();
      IS_WYPL.index('IS_DEF');
      IS_WYPL.prefix(IS_DEF.ref());
      {? IS_WYPL.first()
      || {!
         |? {? IS_DEF.BNFTT
            || exec('is_wypl2bnftpn','portal_benefity')
            || exec('del_ndx','#table',BNFTP,'OWNER',IS_WYPL.uidref())
            ?};
            IS_WYPL.next()
         !}
      ?};
      IS_WYPL.cntx_pop()
   ?}
?};

~~


:Sign Version 2.0 jowisz:1048 2020/10/16 15:19:23 685378a3432d2cd09ad0c5e2aead6e374f92bbad3c0e2af7d073b35969ed1b7ff358703d00444cbeda43c9038febd9f637d8674cd662fff4bf255e16a1a38e46be2cca2c33000c34a744062e85efd84286dfef8e14a35824bd5487eae259fddd2b90a4eaba60039aae044382d2a279a6ca657b353313ed55d9ec0d995f592b39
