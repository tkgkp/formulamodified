:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ltr_zle_dmag.fml
:: Utworzony: 03.12.2019
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Formuły czynności LTR_ZLE_DMAG - Dyspozycje w magazynie
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ,LMG
::# properties=LOOP
::# parses=exec('parses','!ltr_zle_dmag')
::# kind=WE,   symbol=TR_NZL,       type=_TR_NZL,     name=Dyspozycja transportu,      required=T,    keyref=T
::# kind=WY,   symbol=TR_NZL,       type=_TR_NZL,     name=Dyspozycja w magazynie,     required=N

_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
_context:=params_get().context;

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_auto:=_akcja<>'Do magazynu' & _mp.isAutoRun();
_area:=_mp.pathArea('LTR_ZLE');
_proc:=_mp.pathProc();
_micro:=_mp.isMicro();
_todo:=_mp.pathTodo() | (_mp.pathArea() & ~_area) | ~_micro;

_out.GRPKEY:=_mp.grpkey(_in.GRPKEY,_out.GRPKEY);

:: Sprawdzenie parametrów pracy dla czynności startowej
::{? _mp.pathProc()
::|| {? ST.AR=0 || FUN.info('Ustaw parametry pracy.'@); _wyn:=0; return() ?}
::?};
_dok:=null();
_dok:={? var_pres('TR_NZL',_in)=type_of(null()) || _in.TR_NZL || null() ?};

_refDYSP:='';

exec('init','ltr');

:: Sprawdzenie uprawnień
params_set('in',_in,'user',OPERATOR.USER,'mp',_mp);
{? exec('permissions','!ltr_zle_dmag')=0
|| _mp.error('Brak uprawnień do uruchomienia czynności.'@);
   return()
?};

{? _dok=null()
|| _mp.error('Brak wymaganego parametru TR_NZL.')

|? _mp.loop()=0
:: Pierwsze uruchomienie
||
   _error:=0;
   _cancel:=0;
   _f_log:="TR_NZL.WHERE='TR_NZL'";
   _mp.trigRef('TR_NZL',,1,,exec('kind_out','#b_port'),'TR_NLZ',,_f_log,1);

   TR_NZL.cntx_psh();
   TR_NZL.prefix();
   {? ~TR_NZL.seek(_in.TR_NZL)
   ||
      _mp.error('Nie znaleziono dyspozycji transportowej.');
      _error:=1
   || _refDYSP:=TR_NZL.uidref();
      {? _akcja='Do magazynu' | _todo
      || {? ~exec('dysp2MAG','!ltr_zle_dmag',_dok,_auto)
         || _cancel:=1;
            _mp.cancel()
         ?}

      || _mp.error('Nieobsługiwana ścieżka.');
         _error
      ?}
   ?};
   TR_NZL.cntx_pop();
   {? _error || return() ?};
   {? _cancel || return() ?}
?};
do();

_ref:=_mp.grpkeyGet();
_ref:={? _ref=~~ || null() || exec('FindAndGet','#table',TR_NZL,_ref,,,null()) ?};
{? _ref=null()
||
:: Brak elementu lub nie znaleziono elementu
   _mp.save(exec('kind_out','#b_port'),'TR_NZL',null())
||
   _mp.save(exec('kind_out','#b_port'),'TR_NZL',_ref)
?};
:: Wykluczenie elementu z pętli, zakończenie czynności
:: grpkey - _port - del
{? _mp.grpkeyDel()
||
   {? _mp.grpkeyGet()<>~~
   ||
::    kontynuacja pętli
      _mp.loop_continue()
   ||
::    lub nie
      _mp.save(exec('kind_out','#b_port'),'LOOP','N')
   ?}
?};
_mp.done();
end();
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Opis czynności LTR_ZLE_DMAG
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_out:=_mp.load(exec('kind_out','#b_port'));

{? type_of(_out)>type_of(~~) & var_pres('TR_NZL',_out)>type_of(~~)
|| 'Zakończ rejestrację dyspozycji w magazynie: %1'@@[exec('record','#to_string',_out.TR_NZL)]
|| 'Zarejestruj dyspozycje w magazynie'@@
?}


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Formuła ustala PARSES
::   WE: UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;

{? var_pres('TR_NZL',_in)=type_of(null()) & _in.TR_NZL
|| __PARSES.setVal('OddzialLogProd',exec('FindAndGet','#table',TR_NZL,_in.TR_NZL,,"ODDZ",ST.ODDZ))
?};
1


\permissions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Formuła na uprawnienia dla czynności
::   WE: params_get().in - parametry wejściowe czynności
::           params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::           params_get().mp - Menedżer Procesów
::   WY: 0 - użytkownik nie ma uprawnień do czynności
::       1 - użytkownik ma uprawnienia do czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_user:=params_get().user;
_mp:=params_get().mp;
_wyn:=1;
_wyn


\dysp2MAG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Generuje dyspozycje magazynowe na podstawie danej dyspozycji transportu
::   WE: _a - wskazanie na TR_NZL na podstawie, którego jest generowane
::       [_b] - 1-automatyczne uruchomienie 0(domyślnie)-nie
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_dsptr:={? var_pres('_a')=type_of(null()) || _a || null() ?};
 _auto:={? var_pres('_b')=type_of(0)      || _b || 0 ?};

{? _dsptr<>null()
|| _old_uid:='';
   _where:=exec('FindAndGet','#table',TR_NZL,_dsptr,,"WHERE",'');
   {? (';ZK_N;ZD_NAG;ZDP_NAG;'*_where)>1
   || _mgT:=0;
      _mgN:=0;
      _nomg:=0;
      _mg:=tab_tmp(2,'SQL','STRING[16]','','UID','STRING[48]','');
      exec('opentr_psh','open_tab');
      exec('opentr','open_tab',ref_name(_dsptr)+4);
      TR_ZL.index('POZ');
      TR_ZL.prefix(_dsptr);
      {? TR_ZL.first()
      || {!
         |? {? TR_ZL.M().RODZ='T'
            || _mgsql:={? TR_ZL.MG<>null() || _mgT:=1; $TR_ZL.MG || _mgN+=1; 'xxx' ?};
               _zkref:={? TR_ZL.MG<>null() & TR_ZL.MG().PAL='T' || TR_ZL.DOK_REF || 'N' ?};
               {? (_mg.clear(); _mg.prefix(_mgsql,_zkref,); ~_mg.first())
               || _mg.blank();
                  _mg.SQL:=_mgsql;
                  _mg.UID:=_zkref;
                  _mg.add(1)
               ?}
            ?};
            TR_ZL.next()
         !}
      ?};
      TR_NZL.prefix();
      _txt:='Wygenerować dyspozycję w magazynach do dyspozycji: %1?'@[TR_NZL.SYM];
      {? _mgT>0 & _mgN>0
      || _txt+='\n\nUwaga. Pozycje bez wskazanego magazynu zostaną pominięte (%1 z %2).'@[$_mgN,$(_mgN+_mgT)]
      |? ~_mgT & _mgN>0
      || _nomg:=1;
         _txt:='Na żadnej z pozycji dyspozycji %1 nie wskazano magazynu.'
               '\nNiemożliwa generacja dyspozycji w magazynach do danej.'@[TR_NZL.SYM]
      ?};
      {? TR_NZL.seek(_dsptr)
       & {? _nomg || FUN.info(_txt) || (_auto | FUN.ask(_txt)) ?}
      || _old_uid:=TR_NZL.uidref();
         {? TR_NZL.STAT_REJ='Z'
         || {? exec('tr_nzl_lock','transport_zlec') & TR_NZL.r_lock(1,1,1)
            ||
::             Pobieram listę magazynów
               do();

               TR_NZL.cntx_psh();
::             Rozpisuje dyspozycje do magazynu wg pobranych magazynów
               _mg.clear();
               {? _mg.first()
               || {!
                  |? _magref:={? _mg.SQL<>'xxx' || exec('FindAndGet','#table',MG,_mg.SQL) || null() ?};
                     _dokref:=_mg.UID;
                     {? _magref<>null()
                     || TR_ZL.index('TR_NZLMG');
                        TR_ZL.prefix(_dsptr,_magref);
                        {? TR_ZL.first() & {? _dokref='N' || 1 || TR_ZL.find_tab('first','DOK_REF',,'=',_dokref) ?}
                        || _nag:=exec('addNAG','!ltr_zle_dmag',_dsptr,_magref);
                           {? _nag<>null()
                           || _res:=1;
                              {!
                              |? {? TR_ZL.M().RODZ='T'
                                 || _old_poz:=TR_ZL.uidref();
                                    TR_ZL.cntx_psh();
                                    TR_ZL.prefix();
                                    TR_ZL.TR_NZL:=_nag; TR_ZL.TR_NZL().SYM;
                                    TR_ZL.POZ:=exec('BL_TR_ZLPOZ','transport_zlec');
                                    TR_ZL.ZALROZ:=_old_uid;
                                    TR_ZL.OLD_REF:=_old_poz;
                                    TR_ZL.add(1);
                                    TR_ZL.cntx_pop()
                                 ?};
                                 {? _dokref='N' || TR_ZL.next() || TR_ZL.find_tab('next','DOK_REF',,'=',_dokref) ?}
                              !}
                           || undo()
                           ?}
                        ?}
                     ?};
                     _mg.next()
                  !}
               ?};
               TR_NZL.cntx_pop();
               {? _res
               || TR_NZL.MGDSP:='T';
                  TR_NZL.GRP:=TR_NZL.uidref();
                  TR_NZL.put(1)
               ?};
               end();
               TR_NZL.r_unlock()
            ?}
         || {? _auto
            || FUN.info('Nie zakończono redakcji dyspozycji transportu %1.\n'
                        'Utworzenie dyspozycji w magazynie niemożliwe.'@[TR_NZL.SYM])
            ?}
         ?}
      ?};
      obj_del(_mg);
      {? _old_uid<>'' || exec('aktDYSPzam','transport_zlec',_old_uid) ?};
      exec('opentr_pop','open_tab')

   || {? ~_auto
      || FUN.info('Dyspozycje w magazynie można wygenrować wyłacznie na podstawie:\n'
                  ' - dyspozycji transportu z zamówień sprzedaży,\n'
                  ' - dyspozycji transportu z zamówień wewnętrznych,\n'
                  ' - dyspozycji transportu z zamówień dostaw,\n'
                  ' - dyspozycji transportu z potwierdzenia zamówienia.'@)
      ?}
   ?}
|| {? ~_auto || FUN.info('Brak dyspozycji transportu.'@) ?}
?};
_res


\addNAG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Dodaje nagłówek dyspozycji w magazynie na podstawie dyspozycji transportu
::   WE: _a - wskazanie na TR_NZL na podstawie, którego jest generowane
::       _b - wskazanie na magazyn
::   WY: ref Dyspozycji w magzynie lub null
::----------------------------------------------------------------------------------------------------------------------
_res:=null();
TR_NZL.cntx_psh();
TR_NZL.prefix();
{? TR_NZL.seek(_a)
|| POM.TAB:='TR_NZL';
   POM.TYPDOK:='TRZ';

   _bie_trzl:=TR_NZL.ref();
   _new_trzl:=null;
   _bie_trzl_uid:=TR_NZL.uidref();
   _bie_sym:=TR_NZL.SYM;

   TR_NZL.prefix();
   {? TR_NZL.r_lock(1,1,1)
   || TR_NZL.get();
      TR_NZL.GRP:=_bie_trzl_uid;
      TR_NZL.put();
      TR_NZL.memo_get(,'OPIS');

      TR_NZL.SYM:='';
      TR_NZL.NR:=0;
      TR_NZL.RODZ:={? TR_NZL.WHERE='ZK_N' || 'Z' || 'R' ?};
      TR_NZL.WHERE:='TR_NZL';

      {? TR_NZL.add()
      ||
         _res:=_new_trzl:=TR_NZL.ref();
         _uidref:=TR_NZL.uidref();

         exec('fak_numer','numery','',0);
         exec('znak','numery','TR_NZL');
         exec('setMMYY','transport_zlec');

         TR_NZL.WHERE_OP:={? TR_NZL.RODZ='Z'
                          || 'Dyspozycja załadunku dla dyspozycji %1'[_bie_sym]
                          || 'Dyspozycja rozładunku dla dyspozycji %1'[_bie_sym]
                          ?};
         TR_NZL.DOK:=_bie_sym;
         TR_NZL.MG:=_b;
         TR_NZL.GRP:=TR_NZL.DOK_REF:=_bie_trzl_uid;
         TR_NZL.MGDSP:='T';
         TR_NZL.SPLIT:='';
         TR_NZL.STAT_REJ:='N';
         TR_NZL.PLAN:='N';
         TR_NZL.REAL:='N';
         TR_NZL.TR_NAG:=null;
         TR_NZL.TR_MOC:=null;
         TR_NZL.LP_TR:=0;
         TR_NZL.ZIL:=0;
         TR_NZL.ZIL_T:=0;
         TR_NZL.ZIL_M3:=0;
         TR_NZL.ZIL_SZT:=0;
         TR_NZL.STATUS:=exec('tr_nzl_status','transport_zlec');
         {? TR_NZL.WHERE='TR_NZL' || exec('status_MG','transport_wspolne') ?};
         TR_NZL.KRAJ:='';
         TR_NZL.MIASTO:='';
         TR_NZL.UL:='';
         TR_NZL.NUMER:='';
         TR_NZL.LOKAL:='';
         TR_NZL.KPOCZ:='';
         TR_NZL.POCZ:='';
         TR_NZL.DZIELN:='';
         _addr:='MG';
         ADDR_CHO.cntx_psh();
         ADDR_CHO.index('KOD');
         ADDR_CHO.prefix(_addr,);
         {? ADDR_CHO.first()
         ||
            TR_NZL.ADDR_CHO:=ADDR_CHO.ref()
         ?};
         ADDR_CHO.cntx_pop();
         exec('adres_set_select','transport_wspolne','TR_NZL',_addr);
         {? var_pres('_b')=type_of(null)
         || _eanl:=null();
            {? Plugin.runnable('TRANSPORT_EANL_001')
            || _eanl:=Plugin.run('TRANSPORT_EANL_001', _bie_trzl, TR_NZL.MG)
            ?};
            TR_NZL.EANL:=_eanl
         ?};
         {? TR_NZL.put()
         || TR_NZL.memo_put(,'OPIS');
            exec('log_nag','transport_wspolne',_uidref,'pow',' z dyspozycji ' + _bie_sym)
         ?}
      ?};
      TR_NZL.r_unlock()
   ?}
?};
TR_NZL.cntx_pop();
_res


\dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Funkcja tworząca nową dyspozycję w magazynie
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LTR_ZLE_DMAG';
_params.AKCJA:='Do magazynu';
_params.PROC_START:='T';
_params.UIDREF:=TR_NZL.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TR_NZL',TR_NZL.ref());
exec('mp_run','#b__box',_params);
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:39 1f9a41d5c43a9a0c1b7a64524d77c7caa6f52c5f29d39f89d88be660bb59ccb8fe076f8a314242a5fbf201748d430fcabad089c412f3aacd867baa22bdf14c5aa7f1f3077701c6958350d09421b5c0592dd21e99ba33098b1397d080db8e0a2c4decbaef71275554d520167820588083edb762d48831c19630ba6019232f3555
