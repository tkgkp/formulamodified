:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_ezk_ordp.fml
:: Utworzony: 14.05.2015
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa czynności PKD_EZK_ORDP - Rejestracja danych podatkowych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rejestracja danych podatkowych - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::# access=exec('run_cond_p','pkd')
::
::# kind=WE, symbol=P, type=_P, name=Wskazanie pracownika, required=T, keyref=T
::
_par:=params_get();
_mp:=_par.mp;
_in:=_par.in;
_akcja:=_mp.akcja();

_result:='';

_uidref:=exec('ref2uid','#table',_in.P);
{? _uidref=''
|| _result:=exec('error','!pkd_ezk_ordp')

|? _mp.isMicro()
|| {? _akcja='START'
::    Wejście do okienka w ramach obszaru roboczego - uruchomienie procesu i pozostawienie go na liście zadań.
   || _mp.keyRef(_uidref);
      _mp.keep()

   |? _akcja='STOP'
::    Wyjście z okienka w ramach obszaru roboczego - anulowanie procesu.
   || _mp.delRef(_uidref);
      _mp.cancel()

   |? _akcja<>''
   || _result:='Czynność %1 nie obsługuje akcji %2.'@ [_mp.buf_act.UID,_akcja]

   ?}

|| {? _akcja='ZAKOŃCZ'
   || _mp.done()

   |? _mp.pathTodo()
   || _value:=exec('select','!pkd_ezk_ordp',_in.P);
      {? type_of(_value)=type_of('')
      || _result:=_value
      |? _value
      || _mp.done()
      || _mp.keep()
      ?}
   ?}
?};

{? _result<>''
:  Obsługa błędów
|| _mp.error(_result);
   FUN.emsg(_result)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rejestracja danych podatkowych - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('desc','pracownik',params_get().mp);
{? _tab.ZAW_DANE='T'
|| {? _tab.OBCY='T'
   || 'Zarejestruj dane podatkowe: %1 %2: Paszport - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT,_tab.T,_tab.IP]
   |? +_tab.PESEL
   || 'Zarejestruj dane podatkowe: %1 %2: PESEL - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PESEL,_tab.T,_tab.IP]
   || 'Zarejestruj dane podatkowe: %1 %2: Data urodzenia - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.UR_DATA,_tab.T,_tab.IP]
   ?}
|| 'Zarejestruj dane podatkowe'@@
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Słownik komunikatów o błędach.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Rejestrowanie danych podatkowych niemożliwe.\nNie znaleziono pracownika.'


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa czynności wywołanej z listy zadań
::   WE: _a - Wskazanie pracownika.
::   WY: Komunikat o błędzie lub informacja o wyjściu z okna poprzez wywołanie sel_exit() - czyli "Zakończ".
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
P.prefix();
{? type_of(_a)=type_of(null()) & _a<>null() & P.seek(_a)
|| OSOBA.cntx_psh();
   P.OSOBA();
   P_IPOD.cntx_psh();
   P_IPOD.index('OD');
   P_IPOD.prefix(P.ref());
   P_IPOD.win_sel({? exec('dest','f_zatr',P.F_ZATR,'KOD')='Z' || 'WER_Z' || 'WER_P' ?});
   P_IPOD.win_edit({? exec('dest','f_zatr',P.F_ZATR,'KOD')='Z' || 'RED_FZ' || 'RED' ?});
   P_IPOD.win_fml('WER',,'OD',,'ICON_BEFORE',"exec('x_zalacz_icon','zalacz')");
   _ret:=P_IPOD.select();
   P_IPOD.cntx_pop();
   OSOBA.cntx_pop()
|| _ret:=exec('error','!pkd_ezk_ordp')
?};
P.cntx_pop();
_ret


\p_ipod_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Rekord - przed" dla tabeli P_IPOD.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::  OLD: \edit_var_up_bd/infpod.fml
::  OLD: \edit_var_pu_bd/infpod.fml
::----------------------------------------------------------------------------------------------------------------------
POLA_GRP.TXT_1:=
   {? P_IPOD.KU='B' || 'Brak'@
   |? P_IPOD.KU='N' || 'Normalne'@
   |? P_IPOD.KU='Z' || 'Zwiększone'@
   || ''
   ?};
POLA_GRP.TXT_2:=
   {? P_IPOD.UP='B' || 'Brak'@
   |? P_IPOD.UP='N' || 'Normalna'@
   |? P_IPOD.UP='D' || 'Dodatkowa'@
   |? P_IPOD.UP='Z' || 'Normalna i dodatkowa'@
   || ''
   ?};
POLA_GRP.TXT_3:=
   {? P_IPOD.ST='A' || 'Automatyczny'@
   |? P_IPOD.ST='W' || 'Wprowadzony'@
   || ''
   ?};
POLA_GRP.TXT_4:=
   {? P_IPOD.PU='1'
   || '1/12 kwoty zmniejszającej podatek'@
   |? P_IPOD.PU='2'
   || '1/24 kwoty zmniejszającej podatek'@
   |? P_IPOD.PU='3'
   || '1/36 kwoty zmniejszającej podatek'@
   || ''
   ?};
0


\p_ipod_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ATA
:: OPIS: Obsługa akcji "Rekord - po" dla tabeli P_IPOD.
::       Sprawdzane jest wypełnienie pola P_IPOD.OD i poprawność wypełnienia pól P_IPOD.PROC i P_IPOD.PRZYCH.
::   WY: akronim pola do redakcji
::  OLD: \sprawdz/infpod.fml
::----------------------------------------------------------------------------------------------------------------------
_akr:='';
{? (_chk:=__CHK.record(P_IPOD,,'OD'))<>''
|| return(_chk)
?};

{? P_IPOD.PROC>100 | P_IPOD.PROC<0
|| return(__CHK.err_fld(P_IPOD,'PROC',1,'Dozwolone wartości z przedziału %1-%2.'@ ['0','100']))
?};
{? P_IPOD.PRZYCH<0
|| return(__CHK.err_fld(P_IPOD,'PRZYCH',1,'Wartość nie może być ujemna.'@))
?};
{? P_IPOD.PROC<>0 & P_IPOD.PRZYCH<>0
|| FUN.emsg('Tylko jedno z pól ("%1","%2") może być podane.'@ [MS.name(P_IPOD,'PROC'),MS.name(P_IPOD,'PRZYCH')]);
   return('PROC')
?};
{? _akr=''
|| _dUst:=date(2023,1,1);
   {? ',2,3,'*',%1,'[P_IPOD.PU] & P_IPOD.OD<_dUst &
      ~FUN.ask('Wybrano podział ulgi podatkowej z datą przed wejściem w życie ustawy (%1).\nKontynuować?'@[$_dUst])
   || _akr:='PU'
   ?};
   {? _akr='' & -menu_txt()='dołącz'
   || P_IPOD.cntx_psh();
      P_IPOD.index('OD');
      P_IPOD.prefix(P_IPOD.P);
      _jest:=P_IPOD.find_key(P_IPOD.OD);
      P_IPOD.cntx_pop();
      {? _jest
      || FUN.emsg('Istnieje już wpis z podaną datą dla współpracownika.'@);
         _akr:='OD'
      ?}
   ?};
   {? _akr=''
   || _p336:=exec('test_par','parametr',336,'T');
      _pu:=P_IPOD.PU;
      _od:=P_IPOD.OD;
      P.cntx_psh();
      F_ZATR.cntx_psh();
      P_IPOD.cntx_psh();
      P_IPOD.index('OD');
      _PRAC:=sql('select P.REFERENCE as REF from P
                  join F_ZATR using(P.F_ZATR, F_ZATR.REFERENCE)
                  where P.ZA=\'T\' and P.OSOBA=:_a and P.REFERENCE<>:_b and P.FIRMA=:_c '+
                  {? _p336
                  || ''
                  |? P_IPOD.P().F_ZATR().KOD='P'
                  || 'and F_ZATR.KOD=\'P\''
                  || 'and F_ZATR.KOD<>\'P\''
                  ?},
                  P_IPOD.P().OSOBA, P_IPOD.P, P.FIRMA);
      {? _PRAC.first()
      || OSOBA.cntx_psh();
         {!
         |? {? P.seek(_PRAC.REF,,1)
            || P_IPOD.prefix(P.ref());
               {? P_IPOD.last() & P_IPOD.PU<>_pu & P_IPOD.OD~1=_od~1
                  & ~FUN.ask('Istnieje zapis dla %1 %2 (inny współpracownik) z odmiennym podziałem ulgi.\n'
                             'Czy kontynuować?'@[P_IPOD.P().OSOBA().NAZWISKO, OSOBA.PIERWSZE])
               || _akr:='PU'
               ?}
            ?};

            _akr='' & _PRAC.next()
         !};
         OSOBA.cntx_pop()
      ?};
      obj_del(_PRAC);
      P_IPOD.cntx_pop();
      F_ZATR.cntx_pop();
      P.cntx_pop()
   ?}
?};

_akr


\p_ipod_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Zakończ". Formuła wykonywana w dwóch środowiskach:
::          - po wywołaniu z listy zadań (okno wertowania tabeli P_IPOD z doklejonym oknem redagowania tabeli OSOBA);
::          - w ramach obszaru roboczego (okno wertowania tabeli P_IPOD jako składowa okna grupowego tabeli OSOBA).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(0,0)=P_IPOD
|| sel_exit()

|| params_set(params_get());
   exec('pkd_run','pkd','ZAKOŃCZ')
?}


\p_ipod_zalaczniki_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Obsługa akcji "Załączniki - przed" w oknach tabeli P_IPOD.
::   WE:
::   WY:
::  OLD: \p_ipod_zal_b/infpod.fml
::----------------------------------------------------------------------------------------------------------------------
exec('show_zalacz','zalacz','OSOBA','P_IPOD',exec('chk_role','#b__box',OPERATOR.USER,'PKD_EZK_ORDP'))


\chk_p_ipod_up
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [12.51]
:: OPIS: Funkcja wyświetla informacje czy pracownik ma ulgę podatkowa
::   WE:
::   WY:
::  OLD: \chk_p_ipod_up/kali.fml
::----------------------------------------------------------------------------------------------------------------------
_os_ref:={? var_pres('_a')=type_of(null) & _a<>null() || _a || OSOBA.ref ?};
_p_ref:={? var_pres('_b')=type_of(null) & _b<>null() || _b || null ?};
_date:={? var_pres('_c')=type_of(date()) & _c<>date(0,0,0) || _c || date() ?};

_ret:=0;

P.cntx_psh();
_ind:=P.ndx_tmp(,1,'FIRMA',,,'OSOBA',,,'F_ZATR','KOD',,'ZA',,);
P.index(_ind);
P.prefix(exec('ref_firma','ustawienia'),_os_ref,'P','T');
_chk:={? P.first() & P.size()=1
      || {? _p_ref=null || _p_ref:=P.ref() ?}; 1
      || 0
      ?};
P.ndx_drop(_ind);
P.cntx_pop();

{? _chk
|| P_IPOD.cntx_psh();
   P_IPOD.index('OD');
   P_IPOD.prefix(_p_ref);
   {? P_IPOD.find_le(_date)
   || {? P_IPOD.UP<>'B'
      || _ret:=1
      ?}
   ?};
   P_IPOD.cntx_pop()
?};

_ret


\p_ipod_pu_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Przed wyświetleniem pola PU tabeli P_IPOD
::   WY: 0/1
::  OLD: \p_ipod_pu_bd/infpod.fml
::----------------------------------------------------------------------------------------------------------------------
exec('p_ipod_pu_be','!pkd_ezk_ordp')


\p_ipod_pu_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Przed redagowaniem pola PU tabeli P_IPOD
::   WY: 0/1
::  OLD:\p_ipod_pu_be/infpod.fml
::----------------------------------------------------------------------------------------------------------------------
1


\p_ipod_up_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Po redagowaniu pola UP tabeli P_IPOD
::   WE:
::   WY: 0/1
::  OLD: \p_ipod_up_ae/infpod.fml
::----------------------------------------------------------------------------------------------------------------------
win_disp()

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:40 2731b798319312245e2bc40269903fc3029c84af0a6cd549541b6c69f1c020df5e75004d3fcb2b8ac413d11e342d51b1a8e9296522681c447e47e797035e8cb266fdea4d8ebd5894940a1fa04801a582e366341c3688d87d02df1b9aa8f144081803dc9214a82722d88fd7990ae1f40be406338f751884e7fb33153ade5ca9f9
