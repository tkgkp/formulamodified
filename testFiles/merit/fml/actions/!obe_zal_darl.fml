:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !obe_zal_darl.fml
:: Utworzony: 01.06.2016
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Formuły czynności OBE_ZAL_DARL - Rejestracja zaliczki bez obiegu
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Rejestracja zaliczki bez obiegu - główna formuła czynności OBE_ZAL_DARL
::----------------------------------------------------------------------------------------------------------------------
:: PARAMETRY WY:
::# kind=WY, symbol=EZAL, type=_EZAL, name=Wskazanie na zaliczkę, required=N
::# kind=WY, symbol=PRZELEW, type=STRING, name=Zaliczka rozliczana przelewem, required=T

exec('czytaj','#stalesys');
_args:=params_get();
_we:=_args.in;
_wew:=_args.int;
_wy:=_args.out;
_mp:=_args.mp;
_akcja:=_mp.akcja();

:: czynność startowa
{? _mp.pathProc()
|| menu_txt(,'Dołącz');
   _mp.trigRef('EZAL');
   exec('init','obe');
   params_exec('dol_zal','!obe_zal_darl')
:: dołącz z pulpitu
|? _akcja='Dołącz'
|| menu_txt(,'Dołącz');
   _mp.trigRef('EZAL');
   params_exec('dol_zal','!obe_zal_darl')
:: popraw z pulpitu
|? _akcja='Popraw'
|| menu_txt(,'Popraw');
   params_get().context.EZAL;
   params_exec('pop_zal','!obe_zal_darl')
:: usuń z pulpitu
|? _akcja='Usuń'
|| menu_txt(,'Usuń');
   params_get().context.EZAL;
   params_exec('usu_zal','!obe_zal_darl')
:: zakończ z pulpitu
|? _akcja='Zakończ'
|| params_get().context.EZAL;
   params_exec('zak_zal1','!obe_zal_darl')
|? _mp.pathTodo()
|| menu_txt(,'Popraw');
   exec('init','obe');
   {? var_pres('EZAL',_wy)
   || _ref:=BB.sqlint($_wy.EZAL); _nam:=form(($_wy.EZAL)-8);
      {? _ref<>0 & _nam<>''
      || EZAL.cntx_psh(); EZAL.prefix();
         {? EZAL.seek(_ref,_nam)
         || params_exec('todo_zal','!obe_zal_darl')
         || FUN.info('Nie znaleziono zaliczki.'@);
            _wy.EZAL:=null;
            _wy.PRZELEW:='N';
            _mp.save(,_wy);
            _mp.done()
         ?};
         EZAL.cntx_pop()
      || FUN.info('Nie znaleziono zaliczki.'@);
         _wy.EZAL:=null;
         _wy.PRZELEW:='N';
         _mp.save(,_wy);
         _mp.done()
      ?}
   || FUN.info('Nie znaleziono zaliczki.'@);
      _wy.EZAL:=null;
      _wy.PRZELEW:='N';
      _mp.save(,_wy);
      _mp.done()
   ?}
?};

~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formuła na opis czynności na liście ToDo
::----------------------------------------------------------------------------------------------------------------------
_desc:='Zakończ rejestrację zaliczki'@@;
_mp:=params_get().mp;
_wy:=_mp.load(exec('kind_out','#b_port'));
{? var_pres('EZAL',_wy)
|| _ezal:=_wy.EZAL;
   {? _ezal
   || _ref:=BB.sqlint($_ezal); _nam:=form(($_ezal)-8);
      {? _ref<>0 & _nam<>''
      || EZAL.cntx_psh(); EZAL.use(_nam); EZAL.prefix();
         {? EZAL.seek(_ref,_nam)
         || _desc:='Zakończ rejestrację zaliczki: %1 dla %2 %3'@@[EZAL.SYM,EZAL.ZAL_DLA().NAZWISKO,OSOBA.PIERWSZE]
         ?};
         EZAL.cntx_pop()
      ?}
   ?}
?};
_desc


\add_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dołączanie zaliczki
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='OBE_ZAL_DARL';
_params.AKCJA:='Dołącz';
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\edi_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Poprawianie zaliczki
::----------------------------------------------------------------------------------------------------------------------
_edi:=1;
{? EZAL.OBIEGI='T' | EZAL.ZAKCREJ='T' | EZAL.ZAM='T'
|| _edi:=0
|| EZALPOZ.cntx_psh(); EZALPOZ.index('ZALICZKA'); EZALPOZ.prefix(EZAL.ref());
   {? EZALPOZ.first() || _edi:=0 ?};
   EZALPOZ.cntx_pop()
?};
{? _edi
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='OBE_ZAL_DARL';
   _params.AKCJA:='Popraw';
   _params.UIDREF:=EZAL.uidref();
   _params.CONTEXT:=obj_new('EZAL');
   _params.CONTEXT.EZAL:=EZAL.ref();
   exec('mp_run','#b__box',_params)
|| EZAL.cntx_psh(); EZAL.win_edit('POP');
   {? EZAL.edit() || EZAL.put() ?};
   EZAL.cntx_pop();
   EZAL.get()
?}


\zak_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zakończenie rejestracji zaliczki
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='OBE_ZAL_DARL';
_params.AKCJA:='Zakończ';
_params.UIDREF:=EZAL.uidref();
_params.CONTEXT:=obj_new('EZAL');
_params.CONTEXT.EZAL:=EZAL.ref();
exec('mp_run','#b__box',_params)


\del_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Usuwanie zaliczek
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='OBE_ZAL_DARL';
_params.AKCJA:='Usuń';
_params.UIDREF:=EZAL.uidref();
_params.CONTEXT:=obj_new('EZAL');
_params.CONTEXT.EZAL:=EZAL.ref();
exec('mp_run','#b__box',_params)


\dol_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Dolaczenie zaliczek
::  OLD: \dol_zal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get();
_mp:=_args.mp;
_wy:=_args.out;
zak_zal:=0;
EZAL.blank(); typ_zal:=null;
SKID.ZLTYPSYS:='T';
EZAL.OPERREJ:=OPERATOR.USER;
EZAL.WAL:=FINFO.NAROD;
{? var_pres('zal_kasa')>0
|| EZAL.ZAL_DLA:=SKID.OSOBA
?};
exec('zal_edit','zaliczki');
EZAL.memo_set('','OPIS');
{? EZAL.edit("exec('spr_zal','!obe_zal_darl')")
|| _ref:=null;
   {? exec('unik_zal','zaliczki',1)
   || EZAL.cntx_psh(); EZAL.prefix(REF.FIRMA);
      {? EZAL.add()
      || EZAL.memo_put(,'OPIS'); _ref:=EZAL.ref();
         _wy.EZAL:=EZAL.ref();
         exec('set_wy','!obe_zal_darl',_wy);
         _mp.save(,_wy);
         {? zak_zal || params_exec('zak_zal','zaliczki') ?}
      ?};
      EZAL.cntx_pop();
      {? _ref<>null || EZAL.seek(_ref) ?}
   ?}
?};
VAR_DEL.delete('typ_zal','zak_zal')


\spr_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Sprawdzanie parametrow zaliczki
::  OLD: \spr_zal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
EZAL.ETYPZAL(); _zwrot:='';
{? EZAL.DATA_WY=date(0,0,0)
|| FUN.info('Nie wprowadzono daty wystawienia zaliczki.'@);
   EZAL.DATA_WY:=date(); _zwrot:='DATA_WY'
?};
{? _zwrot='' & EZAL.ETYPZAL=null
|| FUN.info('Nie wprowadzono typu zaliczki.'@);
   _zwrot:='ETYPZAL'
?};
{? _zwrot='' & EZAL.ZAL_DLA=null
|| FUN.info('Nie wybrano osoby, dla której tworzona jest zaliczka.'@); _zwrot:='ZAL_DLA'
?};
{? _zwrot='' & ETYPZAL.EDSYMZAL='T' & EZAL.SYM=''
|| FUN.info('Nie wprowadzono symbolu zaliczki.'@); _zwrot:='SYM'
?};
{? _zwrot='' & EZAL.KASPRZEL='P' & EZAL.N=''
|| FUN.info('Nie wybrano rachunku bankowego pracownika.'@); _zwrot:='N'
?};
{? _zwrot='' & EZAL.KASPRZEL='P' & exec('ae_ezaln','zaliczki')=0
|| _zwrot:='N'
?};
{? _zwrot='' || _zwrot:=exec('spterpl','zaliczki') ?};
{? _zwrot='' || _zwrot:=exec('sprdatwyn','zaliczki') ?};
{? _zwrot='' & EZAL.TRESC=''
|| FUN.info('Nie wprowadzono treści zaliczki.'@); _zwrot:='TRESC'
?};
{? _zwrot='' & ETYPZAL.ED_WAL='T' & EZAL.WAL=null
|| FUN.info('Nie wybrano waluty zaliczki.'@); _zwrot:='WAL'
?};
{? _zwrot='' & EZAL.KW_PROP$2<=0
|| FUN.info('Kwota zaliczki musi być większa od zera.'@); _zwrot:='KW_PROP'
?};
_zwrot


\pop_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2009]
:: OPIS: Poprawianie zaliczek
::  OLD: \pop_zal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get();
_mp:=_args.mp;
_wy:=_args.out;
zak_zal:=0;
{? EZAL.get()
|| {? EZAL.r_lock(1,1,1)
   || {? exec('czy_edi','!obe_zal_darl')
      || exec('zal_edit','zaliczki');
         SKID.ZLTYPSYS:='T';
         {? EZAL.memo_get(,'OPIS') & EZAL.edit("exec('spr_zal','!obe_zal_darl')")
         || {? exec('unik_zal','zaliczki',1)
            || EZAL.cntx_psh(); EZAL.prefix(REF.FIRMA);
               {? EZAL.put()
               || EZAL.memo_put(,'OPIS');
                  exec('desc_update','#b__box',EZAL.uidref());
                  {? zak_zal || params_exec('zak_zal','zaliczki') ?}
                ?};
               EZAL.cntx_pop()
            ?}
         ?}
      ?};
      EZAL.r_unlock()
   || exec('err_kom','!obe_zal_darl')
   ?}
|| exec('errnodok','!obe_zal_darl')
?};
VAR_DEL.delete('zak_zal')


\spr_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2009]
:: OPIS: Poprawianie zaliczek przez osobe rozliczajaca - sprawdzanie parametrow po okienku
::    WE: _a - 1 - fk, 2 - kasa
::  OLD: \spr_pop/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? EZAL.KASPRZEL='P' & EZAL.N=''
|| FUN.info('Nie wybrano rachunku bankowego pracownika.'@); _zwrot:='N'
?};
{? _zwrot='' || _zwrot:=exec('spterpl','zaliczki') ?};
{? _zwrot='' || _zwrot:=exec('sprdatwyn','zaliczki') ?};
_zwrot


\czy_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2009]
:: OPIS: Sprawdzenie czy zaliczke mozna edytowac
::  OLD: \czy_edi/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1; _size:=EZAL.sel_size();
{? _zwrot & EZAL.ZAKCREJ='T'
|| {? ~_size || FUN.info('Zakończono rejestrację zaliczki.'@) ?}; _zwrot:=0
?};
{? _zwrot & EZAL.ZAM='T'
|| {? ~_size || FUN.info('Zaliczka zamknięta.'@) ?}; _zwrot:=0
?};
{? _zwrot
|| EZALPOZ.cntx_psh(); EZALPOZ.index('ZALICZKA'); EZALPOZ.prefix(EZAL.ref());
   {? EZALPOZ.first()
   || {? ~_size || FUN.info('Zaliczka posiada pozycje.'@) ?}; _zwrot:=0
   ?};
   EZALPOZ.cntx_pop()
?};
{? _zwrot & EZAL.ETYPZAL().SYSTEM<>'T'
|| {? ~_size
   || FUN.info('Zaliczka podlegająca obiegowi.\n'+
               'Edycja z tego poziomu zabroniona.'@)
   ?}; _zwrot:=0
?};
_zwrot


\err_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Komunikat, w przypadku obslugi zaliczek przez innego operatora
::  OLD: \err_kom/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Zaliczka obsługiwana przez innego operatora.'@)


\errnodok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Komunikat, w przypadku, gdy nie znaleziono zaliczki
::  OLD: \errnodok/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Nie znaleziono zaliczki.'@)


\usu_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Usuwanie zaliczek
::  OLD: \usu_zal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get();
_mp:=_args.mp;
_wy:=_args.out;
_size:=EZAL.sel_size();
{? EZAL.get()
|| {? EZAL.r_lock(1,1)
   || {? exec('czy_edi','!obe_zal_darl')
      || _dalej:=1; _zal_del:=0;
         EDOK_ZAL.cntx_psh(); EDOK_ZAL.index('EZAL'); EDOK_ZAL.prefix(EZAL.ref());
         {? EDOK_ZAL.first()
         || _zal_del:=1;
            {? _size
            || _dalej:=0
            || _dalej:=FUN.ask('Zaliczka jest wygenerowana na podstawie danych z\n'+
                               'planu delegacji lub delegacji.\nUsunąć zaliczkę?'@)
            ?}
         || _dalej:=(_size | FUN.ask('Usunąć zaliczkę?'@))
         ?};
         EDOK_ZAL.cntx_pop();
         {? _dalej
         || do();
            EDOK_ZAL.cntx_psh(); EDOK_ZAL.index('EZAL'); EDOK_ZAL.prefix(EZAL.ref());
            EDOKUMZ.cntx_psh(); EDOKUMZ.index('WYDATEK');
            {? EDOK_ZAL.first()
            || {! |?
                  EDOKUMZ.prefix(EDOK_ZAL.ref());
                  {? EDOKUMZ.first()
                  || {! |?
                        _delr:=EDOKUMZ.del(,1);
                        {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
                     !}
                  ?};
                  _delr:=EDOK_ZAL.del(,1);
                  {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
               !}
            ?};
            EDOK_ZAL.cntx_pop(); EDOKUMZ.cntx_pop();
            {? ~EZAL.del(,1)
            || EZAL.r_unlock(); undo()
            || _mp.cancel();
               {? var_pres('ile_us')>0 || ile_us+=1 ?}
            ?};
            _state:=do_state();
            end();
            {? ~_size & _state=2 || FUN.info('Operacja usuwania zaliczki nie powiodła się.'@) ?}
         || EZAL.r_unlock()
         ?}
      || EZAL.r_unlock()
      ?}
   || {? ~_size || exec('err_kom','!obe_zal_darl') ?}
   ?}
|| {? ~_size || exec('errnodok','!obe_zal_darl') ?}
?}


\be_uszal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Grupa przed - usuwanie zaliczek
::  OLD: \be_uszal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć zaznaczone zaliczki?'@)
|| ile_zazn:=EZAL.sel_size(); ile_us:=0; 1
|| 0
?}


\ae_uszal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2009]
:: OPIS: Grupa po - usuwanie zaliczek
::  OLD: \ae_uszal/skid_zal.fml
::----------------------------------------------------------------------------------------------------------------------
_ile:=(+$ile_zazn);
FUN.info(form(form('Zaliczek zaznaczonych: ',23)+$ile_zazn,_ile+23)+'\n'+
         form(form('W tym usuniętych: ',23)+$ile_us,_ile+23));
VAR_DEL.delete('ile_zazn','ile_us')


\zak_zal1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Zakończenie rejestracji zaliczki
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get();
_mp:=_args.mp;
_wy:=_args.out;
{? EZAL.ZAM='T'
|| FUN.info('Zaliczka zamknięta'@)
|? EZAL.ZAKCREJ='T'
|| FUN.info('Zakończono rejestrację zaliczki.'@)
|| params_exec('zak_zal','zaliczki')
?};
1


\todo_zal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Rejestracja zaliczki - TODO
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get();
_mp:=_args.mp;
_wy:=_args.out;
{? EZAL.ZAKCREJ='T'
|| FUN.info('Zakończono rejestrację zaliczki.'@)
|| params_exec('pop_zal','!obe_zal_darl')
?};
1


\set_wy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia wyjscie czynnosci
::   WE: _a - wyjscie
::----------------------------------------------------------------------------------------------------------------------
_a.PRZELEW:={? EZAL.KASPRZEL='P' || 'T' || 'N' ?}

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:39 c2bc26679253b88534f2e6101bad11fd020ddb7f216c1c3c8f8280ea55cdae657544ecad0490bf41df53554a164607afa32cc68894a1e1141a643d0d2e61757715c46f451edf9025fdd1c2bc219577b256448fd319821af29490d635846a2df915d00bc11cfed7c0a327d3d0201de55618551d050207d762dc925ff435701ffa
