:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !tte_pzl_dgnz.fml
:: Utworzony: 06.06.2016
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły czynności TTE_PZL_DGNZ - Generacja powiązań między podzleceniami
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Główna formuła czynności generowania powiązań między podzleceniami (TTE_PZL_DGNZ)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_int:=params_get().int;
_out:=params_get().out;
_mp:=params_get().mp;
_context:=params_get().context;

::# properties=SERVICE

:: PARAMETRY WE:
::# kind=WE, symbol=ZL, type=_ZL, name=Wskazanie na zlecenie, required=T, keyref=T
{? var_pres('ZL',_in)<>type_of(~~) & var_pres('ZL',_in)<>type_of(null())
|| _msg:='Błędny parametr wejściowy \'ZL\' dla czynności TTE_PZL_DGNZ';
   FUN.error(_msg);
   _mp.error(_msg);
   return()
?};

::# kind=WY, symbol=RESULT, type=STRING, name="Wynik czynności (OK, gdy powiązania zostały wygenerowane)", required=N
{? var_pres('RESULT',_out)<>type_of(~~) & var_pres('RESULT',_out)<>type_of('') || return() ?};

_dialog:={? _mp.isAutoRun() | _mp.isService() || 'N' || 'T' ?};

_clean_result:=params_exec('clean','!tte_pzl_dgnz',_mp,_in);
_can_continue:=_clean_result.RESULT;

ZL.cntx_psh(); ZGH.cntx_psh();
ZL.clear();
{? _can_continue & ZL.seek(_in.ZL)
||
   VAR.A_ZLEC:=ZL.ref();

   {? ~KOMM.is_inited() || KOMM.init(,,'Generowanie powiązań między zleceniami') ?};

:: Wstępne walidacje:
   {? ZL.RODZAJ='P'
   || _txt:='Zlecenie pojedyncze — nie można generować struktury powiązań.';
      {? _dialog='T' || FUN.emsg(_txt) || KOMM.add(_txt,'xwin16.png:3') ?};
      _mp.error(_txt)
   |? ZL.RODZAJ='N'
   || _txt:='Zlecenia niezależne — nie można generować struktury powiązań.';
      {? _dialog='T' || FUN.emsg(_txt) || KOMM.add(_txt,'xwin16.png:3') ?};
      _mp.error(_txt)
   |? ZGH.index('UID_VIEW');
      ZGH.prefix(ZL.uidref());
      ZGH.size()=0
   || _txt:='Nie można generować powiązań — brak przewodników.'@;
      {? _dialog='T' || FUN.emsg(_txt) || KOMM.add(_txt,'xwin16.png:3') ?};
      {? _mp.isService()
      || _out.RESULT:='BŁĄD';
         _mp.save(,_out);
         _mp.done()
      || _mp.cancel()
      ?}
   || {? ZL.INTERZL='T'
      || {? _dialog='N'
               |
            FUN.ask(
               'Czy wygenerować ponownie domyślną strukturę powiązań między przewodnikami podzleceń?\n\n'
               'Uwaga: struktura powiązań zostanie usunięta i ponownie wygenerowana dla wszystkich przewodników.'@
            )
         || _ok:=exec('gendom_zl','zl_guide',_dialog);
            {? _ok
            || _out.RESULT:='OK';
               _mp.save(,_out);
               _mp.done();
               KOMM.add('Wygenerowano ponownie domyślną strukturę powiązań między zleceniami.'@,7)
            || KOMM.add('Nie wygenerowano ponownie domyślnej struktury powiązań między zleceniami.'@,);
               {? _mp.isService()
               || _out.RESULT:='BŁĄD';
                  _mp.save(,_out);
                  _mp.done()
               || _mp.cancel()
               ?}
            ?}
         ?}
      || {? _dialog='N'
               |
            FUN.ask('Czy wygenerować domyślną strukturę powiązań między przewodnikami podzleceń?'@)
         || _ok:=exec('gendom_zl','zl_guide',_dialog);
            {? _ok
            || _out.RESULT:='OK';
               _mp.save(,_out);
               _mp.done();
               KOMM.add('Wygenerowano domyślną strukturę powiązań między zleceniami.'@,7)
            || KOMM.add('Nie wygenerowano domyślnej struktury powiązań między zleceniami.'@,);
               {? _mp.isService()
               || _out.RESULT:='BŁĄD';
                  _mp.save(,_out);
                  _mp.done()
               || _mp.cancel()
               ?}
            ?}
         ?}
      ?}
   ?};

   {? _dialog='T' || KOMM.select() ?}
||
:: Nie znaleziono zlecenia, to proces pcham dalej, ale z błędem na wyjściu
   {? _dialog='T'
   || FUN.emsg('Nie odnaleziono zlecenia, prawdopodobnie zostało usunięte.'@)
   ?};
   _out.RESULT:='BŁĄD';
   _mp.save(,_out);
   _mp.done()
?};
ZL.cntx_pop(); ZGH.cntx_pop();
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Opis dla czynności generowania powiązań między podzleceniami (TTE_PZL_DGNZ)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_desc:='';
_keyRefs:=_mp.getRefs();
_in:=_mp.load(exec('kind_in','#b_port'));
_sym:='';
_ile:=0;
:: jest rekord kluczowy ZL, to ustawiam odpowiednie ZL
{? var_pres('[1]',_keyRefs)>0 & ref_name(_keyRefs[1])=ZL.name()
|| _sym:=exec('FindAndGet','#table',ZL,_keyRefs[1],,"SYM",'')
:: jest parametr wejściowy ZL
|? var_pres('ZL',_in)>0
|| _sym:=exec('FindAndGet','#table',ZL,_in.ZL,,"SYM",'')
?};
{? _sym<>''
|| _desc:='Wygeneruj powiązania między podzleceniami zlecenia %1'@@[_sym]
|| _desc:='Wygeneruj powiązania między podzleceniami'@@
?};
_desc


\action_generate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Generuje strukturę powiązań między podzleceniami
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;

_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:='TTE_PZL_DGNZ';
_args.UIDREF:=exec('FindAndGet','#table',ZL,_env.ZL,,"uidref()",'');
_args.AKCJA:='GENERUJ';
_args.PROC_START:='N';
_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);

exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'ZL',_env.ZL);

exec('mp_run','#b__box',_args);
~~


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::       [_b] - tablica z parametrami wejściowymi
::   WY: obj_new() - obiekt wynikowy
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
{? var_pres('_b')>100
|| _in:=_b
|| _in:=params_get().in
?};
params_exec('zl_clean','zl_common',_mp,_in,'ERROR')

:Sign Version 2.0 jowisz:1045 2023/10/25 11:20:40 25e7b2957ff841a2637dbf5245d550a3db0e8447497d225f26a1f327c1fb448e2d0b23f37ee655d023ac27000b28e6af99abb6ba0bc1389a430a0d7ec35b6550cd87154a02011092e1173cdfa3647036a335e5cca5b1063514f1d752383144d4c5f29b3b8423f261940a5df7277489cacce376db47f86393d6c7db71cf44c33c
