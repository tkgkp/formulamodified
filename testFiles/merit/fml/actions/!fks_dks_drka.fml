:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fks_dks_drka.fml
:: Utworzony: 10.06.2016
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności FKS_DKS_DRKA - Dekretacja raportu kasowego
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dekretacja raportu kasowego - główna formuła czynności FKS_DKS_DRKA.
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS,FREJ
::# parses=exec('parses','kasa_raport')
:: PARAMETRY WE:
::# kind=WE, symbol=RAPORT, type=_RAPORT, name=Wskazanie na raport kasowy, required=N, keyref=T
::# kind=WE, symbol=TM_STAMP, type=STRING, name=Znacznik czasowy, required=N
:: PARAMETRY WY:
::# kind=WY, symbol=DOK, type=_DOK, name=Wskazanie na dokument księgowy, required=T
::# kind=WY, symbol=RAPORT, type=_RAPORT, name=Wskazanie na raport kasowy, required=T
::# kind=WY, symbol=TM_STAMP, type=STRING, name=Znacznik czasowy, required=N
::# properties=LOOP
::# condition=Redakcja dokumentu, act_uid=FKS_DKS_DARK, auto=T, formula=_a.DOK<>null & _a.DOK<>~~
_mp:=params_get().mp;
_args:=params_get();
_we:=_args.in;
_wy:=_args.out;
_akcja:=-_mp.akcja();
{? var_pres('TM_STAMP',_we)>0 & _we.TM_STAMP<>''
|| DokZrodl:=_we.TM_STAMP;
   exec('set_wy','!fks_dks_drka',_we,_wy,_mp)
|? var_pres('RAPORT',_we)>0
|| exec('fl_decl','dekret_aut');
   exec('dek_decl','dekret_aut');
   exec('sd_decl','dekret_aut');
   _mp.descTodo();
   _auto:=_mp.isAutoRun();
   RAPORT.cntx_psh();
   _name:=ref_name(_we.RAPORT);
   RAPORT.use(_name);
   RAPORT.prefix();
   {? RAPORT.seek(_we.RAPORT)
   || _rap:=$RAPORT.NUM_RAP;
      {? RAPORT.STATUS=exec('rap_stat','kasa_raport',4)
      || {? ~_auto
         || FUN.info('Raport kasowy %1 jest już zadekretowany.'@[_rap])
         ?};
         _wy.DOK:=null;
         _mp.save(,_wy);
         _mp.done()
      |? RAPORT.STATUS<>exec('rap_stat','kasa_raport',2) &
         RAPORT.STATUS<>exec('rap_stat','kasa_raport',3) &
         RAPORT.STATUS<>exec('rap_stat','kasa_raport',5)
      || {? ~_auto
         || FUN.info('Raport kasowy %1 jest %2.'@[_rap,RAPORT.STATUS])
         ?}
      |? _akcja='dekretuj'
      || _ref:=RAPORT.ref();
         RAPORT.cntx_psh();
         exec('dekretuj','!fks_dks_drka');
         RAPORT.cntx_pop();
         {? RAPORT.seek(_ref) &
            (RAPORT.STATUS=exec('rap_stat','kasa_raport',4) | RAPORT.STATUS=exec('rap_stat','kasa_raport',5))
         || exec('set_wy','!fks_dks_drka',_we,_wy,_mp)
         ?}
      |? _mp.pathTodo() | ~_mp.isAutoRun()
      || POMOC.OKR:=SSTALE.AO;
         EKSG.SYS:='KAS';
         {? _mp.isAutoRun()
         || BtnDek:=1
         || BtnDek:=0;
            exec('maski','!fks_dks_drka');
            _title:='Raport kasowy - dekretowanie'@;
            _win:=RAPORT.mk_edit(_title,,'_o_dekret');
            RAPORT.win_ewin(_win,,'RED');
            _par:='text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['Doku&menty'@];
            RAPORT.win_ebtn(_win,_par,"exec('o_rapdok','kasa_raport'); ''");
            _par:='text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Dekretuj'@];
            _btndek:=RAPORT.win_ebtn(_win,_par,"BtnDek:=1; 'key:Esc'");
            _par:='text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Anuluj'@];
            _btnan:=RAPORT.win_ebtn(_win,_par,"BtnDek:=0; 'key:Esc'");
            RAPORT.btn_eopt(_win,_btndek,'tooltip='+'Dekretuj raport kasowy'@);
            RAPORT.btn_eopt(_win,_btnan,'tooltip='+exec('help_red_esc','#window','A'));
            RAPORT.win_edit(_win);
            RAPORT.display()
         ?};
         {? BtnDek
         || {? exec('initWARL','dok_fks_aut_dok',SSTALE.AR,'KAS','S')
            || exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji raportu kasowego'@);
               SSTALE.AO();
               RAPORT.cntx_psh();
               _ref:=RAPORT.ref();
               exec('dekretuj','!fks_dks_drka');
               RAPORT.cntx_pop();
               {? RAPORT.seek(_ref) & RAPORT.STATUS=exec('rap_stat','kasa_raport',4)
               || exec('set_wy','!fks_dks_drka',_we,_wy,_mp);
                  {? ~_mp.isAutoRun() || FUN.info('Raport kasowy został zadekretowany.'@) ?}
               || {? ~_mp.isAutoRun() || FUN.info('Dekretowanie raportu kasowego nie powiodło się.'@) ?}
               ?}
            ?}
         ?};
         VAR_DEL.delete('BtnDek')
      ?}
   || {? _akcja<>'dekretuj' || FUN.info('Nie znaleziono raportu kasowego.'@) ?};
      _wy.DOK:=null;
      _mp.save(,_wy);
      _mp.done()
   ?};
   RAPORT.cntx_pop()
|| {? _akcja<>'dekretuj' || FUN.info('Nie znaleziono raportu kasowego.'@) ?};
   _wy.DOK:=null;
   _mp.save(,_wy);
   _mp.done()
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Formuła na opis czynności na liście ToDo
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));
RAPORT.cntx_psh();
{? var_pres('RAPORT',_in)=type_of(null()) & _in.RAPORT
|| RAPORT.use(ref_name(_in.RAPORT));
   RAPORT.prefix();
  {? RAPORT.seek(_in.RAPORT,)
  || _desc:='Zadekretuj raport kasowy: %1'@@[exec('record','#to_string',_in.RAPORT)]
  || _desc:='Zadekretuj raport kasowy'@@
  ?}
|| _desc:='Zadekretuj raport kasowy'@@
?};
RAPORT.cntx_pop();
_desc


\dekretuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Funkcja dekretująca
::----------------------------------------------------------------------------------------------------------------------
DokZrodl:=tm_stamp();
_name:=ref_name(RAPORT.ref);
_rk:=#(3-_name-2);
STANKAS.index('KOD'); STANKAS.prefix();
{? STANKAS.find_key(_rk)
|| KUSERUPR.index('KU_ST');
   KUSERUPR.prefix(OPERATOR.USER,STANKAS.ref());
   {? KUSERUPR.first()
   || EKSG.STANKAS:=KUSERUPR.ref();
      USRCONST.STANKAS:=KUSERUPR.ref();
      EKSG.REF_ODD:=USRCONST.STANKAS().STANKAS().ODD;
      exec('kas_open','kasa_raport',EKSG.STANKAS().STANKAS().KOD,SSTALE.AR().KOD);
      exec('ksierap1','dok_fks_aut_dok')
   ?}
?}

\maski
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.14]
:: OPIS: Ustawienie masek dla tabel kasy
::----------------------------------------------------------------------------------------------------------------------
_name:=ref_name(RAPORT.ref);
_rk:=#(3-_name-2);
STANKAS.index('KOD'); STANKAS.prefix();
{? STANKAS.find_key(_rk)
|| KUSERUPR.index('KU_ST');
   KUSERUPR.prefix(OPERATOR.USER,STANKAS.ref());
   {? KUSERUPR.first()
   || EKSG.STANKAS:=KUSERUPR.ref();
      USRCONST.STANKAS:=KUSERUPR.ref();
      EKSG.REF_ODD:=USRCONST.STANKAS().STANKAS().ODD;
      exec('kas_open','kasa_raport',EKSG.STANKAS().STANKAS().KOD,SSTALE.AR().KOD)
   ?}
?}


\set_wy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia wyjscie
::   WE: _a - wejscie
::       _b - wyjscie
::       _c - manager procesu
::----------------------------------------------------------------------------------------------------------------------
DOK.index('DOKZRODL');
DOK.prefix(DokZrodl);
{? DOK.first()
|| _b.DOK:=DOK.ref();
   DOK.cntx_psh();
   DOK.prefix();
   DOK.DOKZRODL:=(+DokZrodl)-DOK.DOKZRODL;
   DOK.put();
   DOK.cntx_pop();
   _b.TM_STAMP:=DokZrodl;
   _b.RAPORT:=_a.RAPORT;
   _c.save(,_b);
   {? DOK.first()
   || _c.loop_continue()
   ?};
   _c.done()
?}


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [23.25]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego lub dokument jest zaakceptowany
::       zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
_wy:=_mp.load(exec('kind_out','#b_port'));
_keyRefs:=_mp.getRefs();
{? obj_len(_keyRefs)>0
|| {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];
      {? type_of(_kref)>0
      || {? ref_name(_kref)*'krp'>0
         || _record:=exec('FindAndGet','#table',RAPORT,_kref,,,null());
            {? _record=null()
            || _mp.done()
            ?}
         ?}
      ?}
   !}
?};
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:41 007460c7ae11f858992775cf010e3e017452373d88e11d8bbc5945344f7b65ba8615c238d3e3d3c73aae038af0d54a121b4db2140348826795a36628806cbdfed486695e1bd659d722a884d4ffb25948bedf437eb7302593d52f1ff30a9844f20b3952f8a3b3c4842e9684b1ff323f24706a084ffa85971f441acd78f3288a48
