:!UTF-8
:: (c) Asseco Business Solutions S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_ezk_orhg.fml
:: Utworzony: 16.02.2022
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Obsługa czynności PKD_EZK_ORHG - Rejestracja grup uprawnień.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Rejestracja grup uprawnień - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::# access=exec('run_cond_p','pkd')
::
::# kind=WE, symbol=P, type=_P, name=Wskazanie pracownika, required=T, keyref=T
::
_par:=params_get();
_mp:=_par.mp;
_in:=_par.in;
_akcja:=_mp.akcja();

_result:='';
_uidref:=exec('ref2uid','#table',_in.P);

{? _uidref=''
|| _result:=exec('error','!pkd_ezk_orhg')

|? _mp.isMicro()
|| {? _akcja='START'
::    wejście do okienka w ramach obszaru roboczego - uruchomienie procesu i pozostawienie go na liście zadań.
   || _mp.keyRef(_uidref);
      _mp.keep()

   |? _akcja='STOP'
::    wyjście z okienka w ramach obszaru roboczego - anulowanie procesu.
   || _mp.delRef(_uidref);
      _mp.cancel()

   |? _akcja<>''
   || _result:='Czynność %1 nie obsługuje akcji %2.'@ [_mp.buf_act.UID,_akcja]
   ?}

|| {? _akcja='ZAKOŃCZ' | ~exec('is_active','gp_api')
   || _mp.done()

   |? _mp.pathTodo()
   || _value:=exec('select','!pkd_ezk_orhg',_in.P);
      {? type_of(_value)=type_of('')
      || _result:=_value

      |? type_of(_value)=type_of(0)
      || _mp.done()

      || _mp.keep()
      ?}
   ?}
?};

{? _result<>''
:  Obsługa błędów
|| _mp.error(_result);
   FUN.emsg(_result)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Rejestracja grup uprawnień - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('desc','pracownik',params_get().mp);
{? _tab.ZAW_DANE='T'
|| {? _tab.OBCY='T'
   || 'Zarejestruj grupę uprawnień: %1 %2: Paszport - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT,_tab.T,_tab.IP]
   |? +_tab.PESEL
   || 'Zarejestruj grupę uprawnień: %1 %2: PESEL - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PESEL,_tab.T,_tab.IP]
   || 'Zarejestruj grupę uprawnień: %1 %2: Data urodzenia - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.UR_DATA,_tab.T,_tab.IP]
   ?}
|| 'Zarejestruj grupę uprawnień'@@
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Komunikat o błędzie.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Rejestrowanie historii grupy uprawnień niemożliwe.\nNie znaleziono pracownika.'


\p_gp_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(P_GP,
   $("_a.table(_b,"+$_mode+",,'P','OD','GP_DEF')")
)


\p_gp_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli P_GP.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('p_gp_chk','!pkd_ezk_orhg',0)


\p_gp_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli P_GP.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('p_gp_chk','!pkd_ezk_orhg',1)


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Obsługa czynności wywołanej z listy zadań.
::   WE: _a [_P] - wskazanie pracownika.
::   WY: komunikat o błędzie lub informacja o wyjściu z okna poprzez wywołanie sel_exit() - czyli "Zakończ".
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
P.cntx_psh();
P.prefix();
{? type_of(_a)=type_of(null) & _a<>null & P.seek(_a)
|| OSOBA.cntx_psh();
   P.OSOBA();
   P_GP.cntx_psh();
   P_GP.index('OX');
   P_GP.prefix(P.ref());
   P_GP.index('OD');
   P_GP.prefix(P.ref());
   {? exec('dest','f_zatr',P.F_ZATR,'KOD')='Z'
   || P_GP.win_sel('WER_Z')
   || P_GP.win_sel('WER_P')
   ?};
   P_GP.win_edit('RED');
   {? PAR_SKID.get(236)='T'
   || P_GP.index('OX')
   || P_GP.index('OD')
   ?};
   exec('aktualizuj_p','gp_api',P.ref());
   _ret:=P_GP.select();
   P_GP.cntx_pop();
   OSOBA.cntx_pop()
|| _ret:=exec('error','!pkd_ezk_orhg')
?};
P.cntx_pop();

_ret


\p_gp_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Rekord przed okienek wertowania tabeli P_GP.
::       Okno działa jak komponent i nie wymaga obsługi w wielu miejscach.
::   WE: _a [INTEGER] - zgodny ze specyfikacją narzędzi
::   WY: ~~
::UWAGA: należy uwzględnić status akcji specjalnych ustawiony poza okienkiem
::----------------------------------------------------------------------------------------------------------------------
{? _a=0 || return() ?};

_aid:='';
_wnd:=cur_win(1,1);
{? ~exec('czy_usun_p','gp_api')
|| _aid+='U'
?};

:: idealnie byłoby wszystko optrogramować w tym miejscu, ale ze względu na
:: wydajność nie są ponownie wywoływane formuły przed chwilą wykonane np.
:: pkd_done_state z pkd.fml
_org:=P_GP.actions_grayed(_wnd);
_exc:='';
{? _org*'Z'
:: Zakończ
|| _exc+='Z'
?};
_aid:='%2%1:%2'[_aid,_exc];
P_GP.actions_grayed(_wnd,_aid);
~~


\p_gp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Po edycji wiersza tabeli P_GP.
::   WE:
::   WY: 1 w przypadku gdy rekord jest poprawny, akronim wymaganego pola lub 0 gdy doszło do powielenia kluczml
::----------------------------------------------------------------------------------------------------------------------
exec('p_gp_chk','!pkd_ezk_orhg',-menu_txt()='popraw')


\p_gp_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Aktualizacja grupy uprawnień pracownika na podstawie zawartości kartoteki P_GP.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('pracownik_aktualizuj','pracownik','P_GP');
~~


\zakoncz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Obsługa akcji "Zakończ". Formuła wykonywana w dwóch środowiskach:
::       - po wywołaniu z listy zadań (okno wertowania tabeli P_GP z doklejonym oknem redagowania tabeli P);
::       - w ramach obszaru roboczego (okno wertowania tabeli P_GP jako składowa okna grupowego tabeli P).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(0,0)=P_GP
|| sel_exit()

|| params_set(params_get());
   exec('pkd_run','pkd','ZAKOŃCZ')
?}

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:40 4eec989bde412cba3f6940371a1958d3f748f4c5dbaee41b0d3b12bf66a6e00fc49cfa7eda965e6dc95c9e9de8bb5419f1fb146236e97be6953e184b8432b06e37b3423a3cace0a2274f1113fabb875abe444e3970ae8aaaef6879cf7ce9bc093c20b287dd4e74fad12e0415b0e505beaddc6e0b045b1215f458a1cbe99bf149
