:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_fask.fml [17.00]
:: Utworzony: 2015/02/04
:: Autor: AMK
::======================================================================================================================
:: Zawartosc: Formuły czynności definiowania struktur ksiegowych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Definiowanie struktur księgowych - glowna formula czynnosci
::   WE: _a - [obj_new] - parametry wejsciowe czynnosci
::       _b - [obj_new] - parametry wewnetrzne czynnosci
::       _c - [obj_new] - parametry wyjsciowe czynnosci
::       _d - obiekt odpowiedzialny za obsluge procesu
::----------------------------------------------------------------------------------------------------------------------
::# properties=GRP_FIRM
exec('fl_decl','dekret_aut');
_par:=params_get();
_rok:={? var_press('in',_par) & var_press('FP_INS_NUM',_par.in)
      || _par.in.FP_INS_NUM
      || null
      ?};
ROK_F.cntx_psh(); ROK_F.index('NAZWA'); ROK_F.prefix(REF.S_FIRMA);
ROK_F.win_edit('POP1');
{? _rok
|| {? ROK_F.seek(_rok,ROK_F.name())
   || exec('roczne','!zws_par_fask')
   ?}
|| ROK_F.seek(SSTALE.AR);
   exec('k_roczne','!zws_par_fask')
?};
ROK_F.cntx_pop();
~~


\k_roczne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Przegladanie i tworzenie kartotek rocznych
::  OLD: \k_roczne/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
exec('firma','#firma',exec('firma_symbol','#firma'));
{? FIRMA.TYP='C'
|| exec('ustaw_trigger','konsolidacja')
?};
okno:=ROK_F.mk_sel('Lata bilansowe'@,,,'rok_fwerk');
ROK_F.win_fld(okno,,'NAZ',,,,,,,,'Nazwa roku obrachunkowego'@);
ROK_F.win_fld(okno,,'LOBR',,,11,,,'Liczba okresów'@,,'Liczba okresów w roku obrachunkowym'@);
ROK_F.win_fld(okno,,'SYNT',,,11,,,'Długość syntetyki'@,,'Długość syntetyki konta w roku obrachunkowym'@);
ROK_F.win_fld(okno,,'SEP',,,3,,,'Separator'@,,'Znak separatora w roku obrachunkowym (znak "," to brak sep.)'@);
ROK_F.win_fld(okno,,'PD',,,10,2,,'Podatek dochodowy'@,,'Stawka podatku dochodowego od osób prawnych'@);
ROK_F.win_fld(okno,,'PROC_VAT',,,10,2,,'%% struktury VAT'@,,'Procent struktury VAT'@);
ROK_F.win_fld(okno,,'AKT_ROZ',,,4,,,'Rozrachunki'@,,'Znacznik, czy aktualizować rozrachunki w roku bilansowym'@,2,,"'T'","'N'");
ROK_F.win_fld(okno,,'ZAM',,,3,,,'Zamknięty'@,,'Znacznik czy rok zamknięty'@,2,,"\'T\'","\'N\'");
ROK_F.win_fld(okno,UNPAR,'P10',,,3,,,'Grupa'@,,'Plan kont roku jak dla grupy kapitałowej'@);
ROK_F.win_act(okno,0,'Formuła','Kartoteki'@@,,
                     'Przeglądanie i tworzenie kartotek dla wskazanego roku'@,,
                      "exec('roczne','!zws_par_fask')",1,,,,'T');
ROK_F.win_act(okno,0,'Formuła','Kopiuj z poprzedniego roku'@@,,
                     'Kopiowanie rocznych kartotek z roku na rok'@,,
                      "exec('kop_krt','!zws_par_fask')",,,,,'F');
ROK_F.win_act(okno,0,'Formuła','Kopiuj do innej firmy'@@,,
                     'Kopiowanie rocznych kartotek z roku na rok innej firmy'@,,
                      "exec('kop_krt','!zws_par_fask',0,1)",,,,,'K');
ROK_F.win_act(okno,0,'Formuła','Zmień rozliczenie VAT'@@,,'Zmiana trybu rozliczania VAT'@,
              "exec('zm_rozl_vat','fks_ved')",,,,,,'Z');
ROK_F.win_act(okno,0,'Formuła','Popraw'@@,,'Poprawianie danych roku'@,"exec('pp_rok','okresy')",,,,,,'P');
ROK_F.win_act(okno,0,'Szukaj');
ROK_F.win_act(okno,0,'Formuła','Legenda'@@,,'Opis znaczenia kolorów wierszy',,
                 "exec('legenda','color','$Zamknięty rok bilansowy','ROK_F#KS')",,,,,'L');
ROK_F.win_act(okno,0,'Rekord',,,,"{? ROK_F.ZAM='T' || exec('findtmp','#color') || '' ?}");
UNPAR.P10:=UNPAR.P10_BV:='';
ROK_F.win_fml(okno,UNPAR,'P10',,'ICON_BEFORE',"{? ROK_F.PLAN_GR='T' || 'xwin16.png:182' || '' ?}");
ROK_F.win_sel(okno);
ROK_F.select(,1,ROK_F.size());
VAR_DEL.delete('okno')


\roczne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Przegladanie i tworzenie kartotek wskazanego roku bilansowego
::  OLD: \roczne/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
_typ_wyn:=FL.TYP_WYN;
DEKRET.win_edit('DEKRET');
DEK_POZ.win_patt('RED1');
FORMULA.cntx_psh(); FORMULA.win_edit('FORMULY'); FORMULA.win_dict('FORMULY'); FORMULA.actions('WER','T:T');
exec('win_typysp','dok_fks_aut_dok');
exec('win_ru','dok_fks_aut_dok');
ROK_F.cntx_psh();
_r_rok:=ROZNE.ROKKON;
_ar:=SSTALE.AR;
{? ROK_F.FIRMA().TYP='C'
|| exec('ustaw_trigger','konsolidacja')
?};
_firma:='';
__Plan_gr:=ROK_F.PLAN_GR='T';
__Grupa:=REF.S_FIRMA().TYP='C';
__F_Wyl:=FIRMA.TYP='W';
ROZNE.ROKKON:=SSTALE.AR:=ROK_F.ref();
exec('form_pbud','control');
VAT_REJ.cntx_psh();
DOK_REJ.cntx_psh();
GR_VAT.cntx_psh();
_okno:=KS.grp_make('Kartoteki roczne %1 dla roku: %2'@[_firma,ROK_F.NAZ],"",{? ROK_F.ZAM='T' | __Plan_gr || '#tabrok_w1' || '#tabrok_wg' ?});
FORM.index('AUTOKSIE');
DEK.index('DEK');
AV.win_sel('AUTO');
AUTOKSIE.win_sel('WER');
AUTOKSIE.actions('WER','F','A:d',1);
DEK.win_sel({? PAR_SKID.get(35)='T' || 'SEL1' || 'SEL' ?});
exec('ks_in_gr','kon_syn');
KS.win_edit('RED'); KS.win_patt('SZUK');
KS.win_sel('WER'+{? ROK_F.ZAM='T' | __Plan_gr || 'SIK' || '' ?});
_okn_ks:=KS.win_sel('?');
KS.actions(_okn_ks,{? PAR_SKID.get(35)='N' || 'W' || '' ?},,1);
KS.hdr_sel();
KS.hdr_sel({? __Plan_gr || ' grupy' || '' ?}+' z roku '+ROK_F.NAZ);
KS.grp_sel(_okno,KS,'WER'+{? ROK_F.ZAM='T' | __Plan_gr || 'SIK' || '' ?},'Konta syntetyczne'@,
          "KS.index('SYM'); KS.prefix(SSTALE.AR);
           exec('ks_ods','!zws_par_fask');
           rok_bo:=ROK_F.ref();
           ROK_F.cntx_psh();
           {? KS.size=0 | exec('first_rok','okresy',SSTALE.AR)
           || AN_BO.actions('WER','dUpv:d',,1)
           || AN_BO.actions('WER',,,1)
           ?};
           ROK_F.cntx_pop();
           AN_BO.index('ROK'); AN_BO.prefix(ROK_F.ref());
           AN_BO.hdr_sel(); AN_BO.hdr_sel(' - BO z roku %1'@[ROK_F.NAZ]);
           exec('set_rej','rejestry','DEF');
           REJ.hdr_sel(); REJ.hdr_sel(' z roku %1'@[ROK_F.NAZ]);
           REJ.first();
           RVAT.index('RVAT_SYM'); RVAT.prefix(REF.FIRMA); RVAT.first();
           AUTOKSIE.index('NAZ'); AUTOKSIE.prefix(ROK_F.ref());
           AUTOKSIE.hdr_sel();
           AUTOKSIE.hdr_sel({? __Plan_gr || ' grupy' || '' ?}+' z roku '+ROK_F.NAZ);
           FORM.hdr_sel();
           {? AUTOKSIE.first()
           || FORM.prefix(AUTOKSIE.ref());
              FORM.hdr_sel(' - %1'@[AUTOKSIE.NAZ])
           || FORM.prefix(null)
           ?};
           FORM.actions(FORM.win_sel('?'),{? ~AUTOKSIE.get() | AUTOKSIE.A='T'
                                          || 'dUpKFv:d'
                                          || {? AUTOKSIE.TYP<>'K'||''||'F'?}
                                          ?},'d:d',1);
           AV.index('AV'); AV.prefix(ROK_F.ref());
           AV.hdr_sel();
           AV.hdr_sel({? __Plan_gr || ' grupy' || '' ?}+' z roku '+ROK_F.NAZ);
           DEK.hdr_sel();
           AV.first();
           DEK.prefix(AV.ref());
           {? AV.get()
           || DEK.hdr_sel(' - %1'@[AV.KOD])
           ?};
           DEK.actions(DEK.win_sel('?'),{? ~AV.get() | AV.A='T'
                                        || 'DvUpK:D'
                                        || ''
                                        ?},'D:D',1)
           ",0,0,,,,,,'maximized_with_title');
KS.tab_splt(_okno,,'vertical','P');
KS.grp_sel(_okno,BUD,'WER'+{? ROK_F.ZAM='T' | __Plan_gr || 'SIK' || '' ?},,
           "SLO.index('SL');
            SLO.win_sel('ONE');
            SLO.hdr_sel();
            {? BUD.get
            || BUD.SLU().SLU();
               SLO.prefix(SLU.ref);
               SLO.hdr_sel('Zawartość słownika: %1'@[SLU.NAZ]);
               slo_noact:=0
            || SLO.prefix(0);
               SLO.first();
               slo_noact:=1
            ?};
            grp_disp(SLO,'ONE',,1)",,,9,,,,,'maximized_with_title');
KS.tab_splt(_okno,'P','horizontal','D');
KS.grp_sel(_okno,SLO,'ONE',,"",,,18,"slo_noact:=~BUD.get()","VAR_DEL.delete('slo_noact')",,,'maximized_with_title');
{? ~__F_Wyl || KS.grp_sel(_okno,AN_BO,'WER','Przekształcenie kont'@,"SSTALE.AR()",0,0,,,,,,'maximized_with_title') ?};
:: Zestaw kont
KON_WYDR.actions('WER','F');
KON_SCH.actions('WER',':D');
KS.grp_sel(_okno,KON_WYDR,'WER','Zestawy kont'@,"
   KON_SCH.index('IND_LP');
   {? KON_WYDR.get()
   || KON_SCH.prefix(KON_WYDR.ref());
      KON_SCH.actions('WER',,,1)
   || KON_SCH.prefix(null);
      KON_SCH.actions('WER',':D',,1)
   ?};
   grp_disp(KON_SCH,'WER',,1)
",,,18,"
   ROK_F.cntx_psh();
   BILANSP.ASYNT:=SSTALE.AR().SYNT;
   ROK_F.cntx_pop();
   KON_WYDR.index('DISP');
   KON_WYDR.prefix(SSTALE.AR)
",,,,'maximized_with_title');
KS.tab_splt(_okno,,'horizontal','left2');
KS.grp_sel(_okno,KON_SCH,'WER',,"",,,18,,,,,'maximized_with_title');

KS.grp_sel(_okno,REJ,{? OPERATOR.DEPT || 'DEF' || 'DEF'+'_ODD' ?},'Rejestry'@,,0,0,,
           "_bez:='OW';
            REJ.actions({? OPERATOR.DEPT || 'DEF' || 'DEF'+'_ODD' ?},_bez,,1);
            grp_disp(REJ_VIEW,REJVIEW,,1)
           ",
           "REJ.actions({? OPERATOR.DEPT || 'DEF' || 'DEF'+'_ODD' ?},,,1)
           ",,,'maximized_with_title');
KS.tab_splt(_okno,,'vertical','left');
exec('rej_view','!zws_par_fask',0);
KS.grp_sel(_okno,REJ_VIEW,REJVIEW,,"",,,,,,,,'maximized_with_title');
{? ~__F_Wyl
|| KS.grp_sel(_okno,RVAT,'WER','Rejestry VAT'@,"",0,0,,,,,,'maximized_with_title');
   FORM.win_sel({? PAR_SKID.get(35)='T' || 'WER1' || 'WER' ?});
   KS.grp_sel(_okno,AUTOKSIE,'WER','Schematy dokumentów'@,
              "FORM.hdr_sel();
               {? AUTOKSIE.get()
               || FORM.prefix(AUTOKSIE.ref());
                  FORM.first();
                  FORM.hdr_sel(' - %1'@[AUTOKSIE.NAZ])
               || FORM.prefix(null)
               ?};
               FORM.actions(FORM.win_sel('?'),{? ~AUTOKSIE.get() | AUTOKSIE.A='T'
                                              || {? AUTOKSIE.WYR='T' || 'W' || '' ?}+'dUpKFv:d'
                                              |? AUTOKSIE.TYP='K'
                                              || 'F'
                                              |? AUTOKSIE.WYR='T'
                                              || 'FKW'
                                              || ''
                                              ?},'d:d',1);
               grp_disp(FORM,FORM.win_sel('?'))",,,15,"
                  {? __Plan_gr || AUTOKSIE.actions('WER','dUpFAKC:d',,1) ?}
               ","
                  {? __Plan_gr || AUTOKSIE.actions('WER') ?}
               ",,,'maximized_with_title');
   KS.tab_splt(_okno,,'horizontal','D');
   KS.grp_sel(_okno,FORM,FORM.win_sel('?'),,"",,,12,"
      {? __Plan_gr || FORM.actions(FORM.win_sel('?'),'dKUpFW:d',,1) ?}
   ","
      {? __Plan_gr || FORM.actions(FORM.win_sel('?')) ?}
   ",,,'maximized_with_title');
   KS.grp_sel(_okno,AV,'AUTO','Schematy VAT'@,
              "DEK.hdr_sel();
               {? AV.get()
               || DEK.prefix(AV.ref()); DEK.first();
                  DEK.hdr_sel(' - %1'@[AV.KOD])
               || DEK.prefix(null)
               ?};
               DEK.actions(DEK.win_sel('?'),{? ~AV.get() | AV.A='T'
                                            || 'DvUpK:D'
                                            || ''
                                            ?},'D:D',1);
               grp_disp(DEK,DEK.win_sel('?'))",,,15,"
               {? __Plan_gr || AV.actions('AUTO','AdUpK:d',,1) ?}
               ","
               {? __Plan_gr || AV.actions('AUTO') ?}
               ",,,'maximized_with_title');
   KS.tab_splt(_okno,,'horizontal','D');
   KS.grp_sel(_okno,DEK,DEK.win_sel('?'),,"",,,12,"
              {? __Plan_gr
              || DEK.actions(DEK.win_sel('?'),'DKUp:D',,1);
                 SKID_WYR.actions('WER','DPU:D',,1)
              ?}
           ","{? __Plan_gr
              || DEK.actions(DEK.win_sel('?'));
                 SKID_WYR.actions('WER')
              ?}
           ",,,'maximized_with_title')
?};

DEK_NAG.cntx_psh(); DEK_NAG.index('DEK_NAG'); DEK_NAG.prefix();
exec('gen_tree_dek','dok_fks_aut_dok',_okno);
{? REF.WFIRM=0
|| AV.actions('AUTO','F',,1);
   _werokno:=AUTOKSIE.win_edit('?');
   {? _werokno='WER'
   || AUTOKSIE.actions('WER','I',,1)
   |? _werokno='WERC'
   || AUTOKSIE.actions('WERC','I',,1)
   ?};
   _rejokn:=REJ.win_edit('?');
   {? _rejokn='DEF'
   || REJ.actions('DEF','F',,1)
   |? _rejokn='DEF_ODD'
   || REJ.actions('DEF_ODD','F',,1)
   ?}
?};
KS.win_sel(_okno);
KS.index('SYM'); KS.prefix(SSTALE.AR);
BILANSP.AROK:=SSTALE.AR;
KH.win_sel('WER');
__KS_W:=1;
DEK_POZ.index('LP');
exec('ks','jpk_v',0);
KS.select();
exec('ks','jpk_v',1);
__KS_W:=0;
UNPAR.P10_BV:='';

VAR_DEL.delete('__acr'); DEK_NAG.cntx_pop();

VAR_DEL.delete('rok_bo','anal_rok');
AUTOKSIE.actions('WER');
KS.actions(_okn_ks);
SSTALE.AR:=_ar;
ROZNE.ROKKON:=_r_rok;
VAT_REJ.cntx_pop();
DOK_REJ.cntx_pop();
GR_VAT.cntx_pop();
ROK_F.cntx_pop();
FORMULA.cntx_pop();
FL.TYP_WYN:=_typ_wyn;
VAR_DEL.delete('TTREJVIEW')


\kop_krt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Kopiowanie kartotek rocznych
::   WE: _a   - jezeli 1 to widok kartotek okrojony dla innych systemow niz FIKS gdy brak jest wpolpracy
::              z systemem FIKS (na potrzeby dekretacji bez systemu FIKS)
::            (0  w p.p.)
::       [_b] - czy kopia do innej firmy
::  OLD: \kop_krt/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
{? var_pres('_b')<=0 || _b:=0 ?};
do_firm:=_b;
{? do_firm || ROK_F.cntx_psh() ?};
__F_ref:='S';
exec('clear','unpar','BLBEBVAE','RF1','RF2','1','10','11','12','19','2','21','22','3','23','24',
                                   '7','8','36','16','37','17','9','15','34','18','35','25');
UNPAR.PFIR:=REF.FIRMA;
UNPAR.PFIR_BE:='__be_F:=UNPAR.PFIR;1';
UNPAR.PFIR_AE:='__F_ref:=\'S\'; {? __be_F<>UNPAR.PFIR || UNPAR.PRF2:=null ?}; 1';
UNPAR.PRF2_BE:='UNPAR.PFIR<>null';
UNPAR.PRF2_AE:='{? UNPAR.PRF2 || exec(\'kop_krt1\',\'!zws_par_fask\');win_disp() || 1 ?}';
ROK_F.win_dict('WER');
{? do_firm
|| UNPAR.PRF1:=ROK_F.ref();
   UNPAR.PFIR:=null;
   UNPAR.PRF2:=null
|| UNPAR.PRF2:=ROK_F.ref();
   ROK_F.cntx_psh();
   ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.S_FIRMA); ROK_F.seek(ROK_F.ref()); ROK_F.prev();
   UNPAR.PRF1:=ROK_F.ref();
   ROK_F.cntx_pop()
?};
UNPAR.P10:=UNPAR.P21:=UNPAR.P23:='W';
UNPAR.P11:='Z';
UNPAR.P8:=UNPAR.P9:=UNPAR.P15:=UNPAR.P25:=UNPAR.P43:=1;
UNPAR.P36:=UNPAR.P37:=UNPAR.P34:=UNPAR.P35:={? _a || 0 || 1 ?};
UNPAR.P16:=UNPAR.P17:=UNPAR.P18:={? _a || 'P' || 'U' ?};
UNPAR.P19:='K';
_ust:={? PAR_SKID.get(35)='T' || 'Z' || 'B' ?};
UNPAR.P12:=UNPAR.P22:=UNPAR.P24:=_ust;
{? UNPAR.PRF1<>UNPAR.PRF2 | do_firm
|| {? exec('kop_krt1','!zws_par_fask') | do_firm
   || {? _b || ROZNE.win_edit('KOP_KRTF') || ROZNE.win_edit('KOP_KRT') ?};
      {? ROZNE.edit("
            {? do_firm
            || _r:=__CHK.record2(UNPAR,'PFIR','Firma','PRF2','Do roku');
               {? _r='' & ~exec('kop_krt1','!zws_par_fask')
               || FUN.info('Wszystkie kartoteki zdefiniowane.\nFunkcja niedostępna.'@);
                  _r:='PRF2'
               ?};
               _r
            || 1
            ?}
         ")
      ||
          'plan kont';
         {? UNPAR.P1
         || BILANSP.ZAKKON:=UNPAR.P10;
            BILANSP.ZAKKOP:=UNPAR.P11;
            BILANSP.ZAKWYR:=UNPAR.P12;
            UNPAR.PRF2();
            exec('kop_plan','!zws_par_fask',1,UNPAR.P19)
         ?};
          'zestawy kont';
         {? UNPAR.P1 & UNPAR.P44
         || {? exec('kopzest','!zws_par_fask',UNPAR.PRF1, UNPAR.PRF2)
            || itk+=1
            ?}
         ?};
         'Schematy dokumentow';
         {? UNPAR.P2
         || {? exec('kop_auto','!zws_par_fask',UNPAR.PRF1, UNPAR.PRF2, UNPAR.P21, UNPAR.P22)=0
            || itk+=1
            ?}
         ?};
         'schematy dekretacji VAT';
         {? UNPAR.P3
         || {? exec('kop_av','!zws_par_fask',UNPAR.PRF1, UNPAR.PRF2, UNPAR.P23, UNPAR.P24)=0
            || itk+=1
            ?}
         ?};
         'rejestry ksiegowe';
         {? UNPAR.P7
         || {? exec('koprej','!zws_par_fask',UNPAR.PRF1, UNPAR.PRF2, UNPAR.P8, UNPAR.P36, UNPAR.P16,
                                         UNPAR.P37, UNPAR.P17, UNPAR.P9, UNPAR.P15, UNPAR.P34,
                                         UNPAR.P18, UNPAR.P35, UNPAR.P38='T', UNPAR.P41='T')=0
            || itk+=1
            ?}
         ?};
         'schematy dekretacji z innych dziedzin';
         {? UNPAR.P25 & UNPAR.P7 & UNPAR.P8
         || exec('kop_dek','!zws_par_fask',UNPAR.PRF1, UNPAR.PRF2)
         ?};
         {? UNPAR.P43 || exec('kop_upr_us','!zws_par_fask') ?};
         FUN.info('Kopiowanie zakończone.'@)
      ?}
   || FUN.info('Wszystkie kartoteki zdefiniowane.\nFunkcja niedostępna.'@)
   ?}
|| FUN.info('Nie istnieje poprzedni rok bilansowy.\nFunkcja niedostępna.'@)
?};
{? do_firm || ROK_F.cntx_pop() ?};
UNPAR.P10:=UNPAR.P10_BV:='';
VAR_DEL.delete('__F_ref','do_firm','itk')


\kop_krt1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Kopiowanie kartotek rocznych
::   WE: _a   - jezeli 1 to widok kartotek okrojony dla innych systemow niz FIKS gdy brak jest wpolpracy
::              z systemem FIKS (na potrzeby dekretacji bez systemu FIKS)
::            (0  w p.p.)
::       [_b] - czy kopia do innej firmy
::  OLD: \kop_krt1/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
_sk:=4;
itk:=0;
KS.index('SYM'); KS.prefix(UNPAR.PRF2);
ROK_F.cntx_psh();
_plan_gr:=UNPAR.PRF2().PLAN_GR;
ROK_F.cntx_pop();
{? _plan_gr<>'T' & ~KS.first()
|| UNPAR.P1:=1;
   UNPAR.P1_AE:='itk+={? UNPAR.P1 || 1 || -1 ?}; win_disp()';
   UNPAR.P1_BV:=UNPAR.P1_BE:=''
|| UNPAR.P1:=0;
   UNPAR.P1_BV:=UNPAR.P1_BE:='0';
   itk+=1
?};
UNPAR.P10_BV:=UNPAR.P10_BE:='UNPAR.P1';
UNPAR.P11_BV:=UNPAR.P11_BE:='UNPAR.P1';
UNPAR.P12_BV:=UNPAR.P12_BE:='UNPAR.P1 & PAR_SKID.get(35)=''T''';
UNPAR.P19_BV:=UNPAR.P19_BE:='UNPAR.P1 & UNPAR.P11=''Z''';
UNPAR.P11_AE:='win_disp()';
AUTOKSIE.prefix(UNPAR.PRF2);
{? _plan_gr<>'T' & ~AUTOKSIE.first()
|| {? _a
   || UNPAR.P2:=0;
      UNPAR.P2_BV:=UNPAR.P2_BE:='0';
      itk+=1
   || UNPAR.P2:=1;
      UNPAR.P2_AE:='itk+={? UNPAR.P2 || 1 || -1 ?}; win_disp()'
   ?}
|| UNPAR.P2:=0;
   UNPAR.P2_BV:=UNPAR.P2_BE:='0';
   itk+=1
?};
UNPAR.P21_BV:=UNPAR.P21_BE:='UNPAR.P2';
UNPAR.P22_BV:=UNPAR.P22_BE:='UNPAR.P2 & PAR_SKID.get(35)=''T''';
UNPAR.P21_AE:=UNPAR.P22_AE:='win_disp()';
AV.prefix(UNPAR.PRF2);
{? _plan_gr<>'T' & ~AV.first()
|| {? _a
   || UNPAR.P3:=0;
      UNPAR.P3_BV:=UNPAR.P3_BE:='0';
      itk+=1
   || UNPAR.P3:=1;
      UNPAR.P3_AE:='itk+={? UNPAR.P3 || 1 || -1 ?}; win_disp()'
   ?}
|| UNPAR.P3:=0;
   UNPAR.P3_BV:=UNPAR.P3_BE:='0';
   itk+=1
?};
UNPAR.P23_BV:=UNPAR.P23_BE:='UNPAR.P3';
UNPAR.P24_BV:=UNPAR.P24_BE:='UNPAR.P3 & PAR_SKID.get(35)=''T''';
UNPAR.P23_AE:=UNPAR.P24_AE:='win_disp()';
{? REJ.index('KOD');
   {? OPERATOR.DEPT
   || REJ.prefix(UNPAR.PRF2,OPERATOR.DEPT)
   || REJ.prefix(UNPAR.PRF2)
   ?};
   ~REJ.first() | 1+REJ.KOD='~'
|| UNPAR.P7:=1;
   UNPAR.P7_BV:=UNPAR.P7_BE:='';
   UNPAR.P7_AE:=UNPAR.P34_AE:=UNPAR.P43_AE:='itk+={? UNPAR.P7 || 1 || -1 ?}; win_disp()'
|| UNPAR.P7:=0;
   UNPAR.P7_BV:=UNPAR.P7_BE:=UNPAR.P43_BE:='0';
   itk+=1
?};
UNPAR.P38_BV:='{? UNPAR.P7 || \'T\' || 0 ?}'; UNPAR.P38_BE:='UNPAR.P7'; UNPAR.P38_AE:='win_disp()';
UNPAR.P43_BV:='{? UNPAR.P7 || \'T\' || 0 ?}'; UNPAR.P43_BE:='UNPAR.P7'; UNPAR.P43_AE:='win_disp()';
UNPAR.P41_BV:='{? UNPAR.P7 & UNPAR.P38=\'T\' || \'T\' || 0 ?}'; UNPAR.P41_BE:='UNPAR.P7 & UNPAR.P38=\'T\''; UNPAR.P41_AE:='';
UNPAR.P8_BV:=UNPAR.P8_BE:='UNPAR.P7';
UNPAR.P8_AE:='win_disp()';
UNPAR.P36_BV:=UNPAR.P36_BE:='UNPAR.P7 & UNPAR.P8';
UNPAR.P36_AE:='win_disp()';
UNPAR.P25_BV:=UNPAR.P25_BE:='UNPAR.P7 & UNPAR.P8';
UNPAR.P25_AE:='win_disp()';
{? _plan_gr='T'
|| UNPAR.P16_BV:='UNPAR.P7 & UNPAR.P8 & UNPAR.P36'; UNPAR.P16_BE:='0'; UNPAR.P16:='P'
|| UNPAR.P16_BV:=UNPAR.P16_BE:='UNPAR.P7 & UNPAR.P8 & UNPAR.P36 & (~UNPAR.P3 | (UNPAR.P3 & (UNPAR.P23=\'B\' | UNPAR.P24=\'B\')))'
?};
UNPAR.P37_BV:=UNPAR.P37_BE:='UNPAR.P7 & UNPAR.P8';
UNPAR.P37_AE:='win_disp()';
{? _plan_gr='T'
|| UNPAR.P17_BV:='UNPAR.P7 & UNPAR.P8 & UNPAR.P37'; UNPAR.P17_BE:='0'; UNPAR.P17:='P'
|| UNPAR.P17_BV:=UNPAR.P17_BE:='UNPAR.P7 & UNPAR.P8 & UNPAR.P37 & (~UNPAR.P2 | (UNPAR.P2 & (UNPAR.P21=\'B\' | UNPAR.P22=\'B\')))'
?};
UNPAR.P9_BV:=UNPAR.P9_BE:='UNPAR.P7';
UNPAR.P15_BV:=UNPAR.P15_BE:='UNPAR.P7';
UNPAR.P34_BV:=UNPAR.P34_BE:='UNPAR.P7';
UNPAR.P34_AE:='win_disp()';
{? _plan_gr='T'
|| UNPAR.P18_BV:='UNPAR.P7 & UNPAR.P34'; UNPAR.P18_BE:='0'; UNPAR.P18:='P'
|| UNPAR.P18_BV:=UNPAR.P18_BE:='UNPAR.P7 & UNPAR.P34 & (~UNPAR.P2 | (UNPAR.P2 & (UNPAR.P21=\'B\' | UNPAR.P22=\'B\')))'
?};
UNPAR.P35_BV:=UNPAR.P35_BE:='UNPAR.P7';
UNPAR.P44:=UNPAR.P1;
UNPAR.P44_BV:='UNPAR.P1'; UNPAR.P44_BE:='UNPAR.P1'; UNPAR.P44_AE:='win_disp()';
_sk>itk


\kop_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Kopiowanie formul automatycznego ksiegowania z roku _a do roku _b
::   WE: _a - z roku
::       _b - do roku
::       _c - 'W'/'B' wszystkie/wybrane
::       _d - 'Z'/'B' z wyroznikami/bez wyroznikow
::   WY: ilosc skopiowanych AUTOKSIE
::  OLD: \kop_auto/auto.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? UNPAR.PRF1<>null & UNPAR.PRF2<>null & UNPAR.PRF1<>UNPAR.PRF2
   & (AUTOKSIE.prefix(UNPAR.PRF1); AUTOKSIE.first())
|| _nxt:={? _c='W'
         || 1
         || tuser:=tm_form(AUTOKSIE.tm_stamp);
            _ok:=AUTOKSIE.win_sel('?');
            exec('initmpau','!zws_par_fask',_a);
            AUTOKSIE.select();
            &tuser;
            AUTOKSIE.win_sel(_ok);
            TMPSIK.first()
         ?};
   do();
   {!
   |? _nxt
   |! {? _c='B' || {? ~AUTOKSIE.seek(TMPSIK.WAR,AUTOKSIE.name()) || _wy:=0; undo() ?} ?};
      AUTOKSIE.ROK_F:=_b;
      AUTOKSIE.A:='N';
      AUTOKSIE.ZAA:='';
      AUTOKSIE.DAKC:=date(0,0,0);
      AUTOKSIE.cntx_psh();
      AUTOKSIE.prefix();
      _aref:={? AUTOKSIE.add() || _wy+=1; AUTOKSIE.ref() || null ?};
      AUTOKSIE.cntx_pop();
      {? _aref<>null & (FORM.prefix(AUTOKSIE.ref());FORM.first())
      || {!
         |? FORM.AUTOKSIE:=_aref;
            FORM.cntx_psh();
            FORM.memo_get(,'FML');
            FORM.prefix();
            _fref:={? FORM.add() || FORM.memo_put(,'FML'); FORM.ref() || null ?};
            FORM.cntx_pop();
            {? _fref<>null & _d='Z' & (SKID_WYR.index('SKID_WYR');
                                       SKID_WYR.prefix(REF.FIRMA,'FORM',FORM.name(),#FORM.ref());
                                       SKID_WYR.first())
            || {!
               |?
                  SKID_WYR.cntx_psh();
                  SKID_WYR.prefix(UNPAR.PFIR,'FORM',FORM.name(),#_fref);
                  SKID_WYR.REF:=_fref;
                  SKID_WYR.FIRMA:=UNPAR.PFIR;
                  SKID_WYR.add();
                  SKID_WYR.cntx_pop();
                  SKID_WYR.next()
               !}
            ?};
            FORM.next()
         !}
      ?};
      _nxt:={? _c='W' || AUTOKSIE.next() || TMPSIK.next() ?}
   !};
   end()
?};
_wy


\initmpau
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Stworzenie okienka tymczasowego dla tabeli AUTOKSIE i tymczasowych danych
::       w tabeli TMPSIK, musi byc ustawiony znacznik czasowy tuser
::   WE: _a - ROK_F.ref() - rok z ktorego pochodza formuly automatycznego rejestrowania
::  OLD: \initmpau/auto.fml
::----------------------------------------------------------------------------------------------------------------------
TMPSIK.index('TEXT1'); TMPSIK.prefix('AUTOKSIE',tuser);
{? TMPSIK.first()|| {!|?TMPSIK.del()!} ?};
AUTOKSIE.index('AKCN'); AUTOKSIE.prefix(_a);
_wer:=AUTOKSIE.mk_sel('Wybierz formuły automatycznego rejestrowania'@,,,'autoskie_wer');
AUTOKSIE.win_fld(_wer,,'A',,,3,,,'AKC'@);
AUTOKSIE.win_fld(_wer,,'TYP',,,4,,,'Wyw.'@);
AUTOKSIE.win_fld(_wer,,'NAZ',,,8);
AUTOKSIE.win_fld(_wer,,'OP',,,40);
AUTOKSIE.win_fld(_wer,,'FORMPOCZ',,,50);
AUTOKSIE.win_act(_wer,0,'Rekord',,,,"{? TMPSIK.find_key(AUTOKSIE.NAZ) || exec('findtmp','#color') ?}");
AUTOKSIE.win_act(_wer,0,'Formuła','Z&aznacz/odznacz'@@,,'Zaznaczanie/odznaczanie wiersza'@,,
                "{? TMPSIK.find_key(AUTOKSIE.NAZ)
                 || TMPSIK.del()
                 || TMPSIK.ID:='AUTOKSIE';
                    TMPSIK.T1:=tuser;
                    TMPSIK.T2:=AUTOKSIE.NAZ;
                    TMPSIK.WAR:=#AUTOKSIE.ref();
                    TMPSIK.add()
                 ?};
                 AUTOKSIE.next() ",1,1,,,'A');
AUTOKSIE.win_act(_wer,0,'Formuła','Odznacz wszys&Tkie'@@,,'Odznaczenie wszystkich wierszy'@,,
                 "{? TMPSIK.first() || {!|? TMPSIK.del()!} ?}",,,,,'T');
AUTOKSIE.win_act(_wer,0,'Szukaj');
AUTOKSIE.win_sel(_wer)


\kop_av
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Kopiowanie schematow automatycznej dekretacji VAT z roku _a do roku _b
::   WE: _a - z roku
::       _b - do roku
::       _c - 'W'/'B' wszystkie/wybrane
::       _d - 'Z'/'B' z wyroznikami/bez wyroznikow
::   WY: ilosc skopiowanych AV
::  OLD: \kop_av/auto.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? UNPAR.PRF1<>null & UNPAR.PRF2<>null & UNPAR.PRF1<>UNPAR.PRF2
   & (AV.prefix(UNPAR.PRF1); AV.first())
|| _nxt:={? _c='W'
         || 1
         || tuser:=tm_form(AV.tm_stamp);
            _ok:=AV.win_sel('?');
            exec('initmpav','!zws_par_fask',_a);
            AV.select();
            &tuser;
            AV.win_sel(_ok);
            TMPSIK.first()
         ?};
   do();
   {!
   |? _nxt
   |! {? _c='B' || {? ~AV.seek(TMPSIK.WAR,AV.name()) || _wy:=0; undo() ?} ?};
      AV.ROK_F:=_b;
      AV.A:='N';
      AV.ZAA:='';
      AV.DAKC:=date(0,0,0);
      AV.cntx_psh();
      AV.prefix();
      _aref:={? AV.add() || _wy+=1; AV.ref() || null ?};
      AV.cntx_pop();
      {? _aref<>null & (DEK.prefix(AV.ref());DEK.first())
      || {!
         |? DEK.AV:=_aref;
            DEK.cntx_psh();
            DEK.prefix();
            _dref:={? DEK.add() || DEK.ref() || null ?};
            DEK.cntx_pop();
            {? _dref<>null & _d='Z' & (SKID_WYR.index('SKID_WYR');
                                       SKID_WYR.prefix(REF.FIRMA,'DEK',DEK.name(),#DEK.ref());
                                       SKID_WYR.first())
            || {!
               |?
                  SKID_WYR.cntx_psh();
                  SKID_WYR.prefix(UNPAR.PFIR,'DEK',DEK.name(),#_dref);
                  SKID_WYR.REF:=_dref;
                  SKID_WYR.FIRMA:=UNPAR.PFIR;
                  SKID_WYR.add();
                  SKID_WYR.cntx_pop();
                  SKID_WYR.next()
               !}
            ?};
            DEK.next()
         !}
      ?};
      _nxt:={? _c='W' || AV.next() || TMPSIK.next() ?}
   !};
   end()
?};
_wy


\initmpav
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Stworzenie okienka tymczasowego dla tabeli AV i tymczasowych danych
::       w tabeli TMPSIK, musi byc ustawiony znacznik czasowy tuser
::   WE: _a - ROK_F.ref() - rok z ktorego pochodza schematy
::  OLD: \initmpav/auto.fml
::----------------------------------------------------------------------------------------------------------------------
TMPSIK.index('TEXT1'); TMPSIK.prefix('AV',tuser);
{? TMPSIK.first()|| {!|?TMPSIK.del()!} ?};
AV.index('AKC'); AV.prefix(_a);
_wer:=AV.mk_sel('Wybierz schematy automatycznej dekretacji VAT'@,,,'av_wer');
AV.win_fld(_wer,,'A',,,3,,,'AKC');
AV.win_fld(_wer,,'KOD',,,3);
AV.win_fld(_wer,,'OP',,,76);
AV.win_fld(_wer,,'ZAA',,,20);
AV.win_fld(_wer,,'DAKC',,,12);
AV.win_act(_wer,0,'Rekord',,,,"{? TMPSIK.find_key(AV.KOD) || exec('findtmp','#color') ?}");
AV.win_act(_wer,0,'Formuła','Z&aznacz/odznacz'@@,,'Zaznaczanie/odznaczanie wiersza'@,,
           "{? TMPSIK.find_key(AV.KOD)
            || TMPSIK.del()
            || TMPSIK.ID:='AV';
               TMPSIK.T1:=tuser;
               TMPSIK.T2:=AV.KOD;
               TMPSIK.WAR:=#AV.ref();
               TMPSIK.add()
            ?};
            AV.next() ",1,1,,,'A');
AV.win_act(_wer,0,'Formuła','Odznacz wszys&tkie'@@,,'Odznaczenie wszystkich wierszy'@,,
           "{? TMPSIK.first() || {!|? TMPSIK.del()!} ?}",,,,,'T');
AV.win_act(_wer,0,'Szukaj');
AV.win_sel(_wer)


\koprej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Kopiowanie rejestrow ksiegowych przy wykorzystaniu kopiowania kartotek rocznych
::   WE: _a - z roku
::       _b - do roku
::       _c - czy kopiowac rodzaje dokumentow
::       _d - czy wraz z rodzajami dokumentow kopiowac przyspiania do schematow dekretacji
::       _e - U/P czy brakujace definicje przypisanych schematow dekretacji tworzyc w nowym roku
::       _f - czy wraz z rodzajami dokumentow kopiowac przypisania do formul rejestrowania
::       _g - U/P czy brakujace definicje przypisanych formul rejestrowania tworzyc w nowym roku
::       _h - czy kopiowac przypisania do rejestrow VAT
::       _i - czy kopiowac przypisania do grup podatkowych
::       _j - czy kopiowac przypisania do formul rejestrowania
::       _k - U/P czy brakujace definicje przypisanych formul rejestrowania tworzyc w nowym roku
::       _l - czy kopiowac przypisania do formul kontrolnych
::       _m - czy kopiowac widok rejestrow
::       _n -    czy przypisac rejestry do widoku
::   WY: ilosc skopiowanych rodzajow dokumentow
::  OLD: \kop_rej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? REJ.index('KOD');
   {? OPERATOR.DEPT
   || REJ.prefix(_a,OPERATOR.DEPT)
   || REJ.prefix(_a)
   ?}; REJ.first()
|| DOK_REJ.index('NAZ');       DOK_REJ.prefix();
   AV.index('AV');             AV.prefix();
   P_AUTOKS.index('AUTO_REJ'); P_AUTOKS.prefix();
   AUTOKSIE.index('NAZ');      AUTOKSIE.prefix();
   VAT_REJ.index('REJ_VREF');  VAT_REJ.prefix();
   GR_VAT.index('REJ_GR');     GR_VAT.prefix();
   FOR_AKC.index('NAZ');       FOR_AKC.prefix();
   {!
   |? REJ.ROK:=_b;
      {? do_firm
      || ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(UNPAR.PFIR,REJ.ODD().OD,);
         {? ODD.first()
         || REJ.ODD:=ODD.ref();
            _ok:=1
         || _ok:=0
         ?};
         ODD.cntx_pop()
      || _ok:=1
      ?};
      {? _ok
      || {? 1+REJ.KOD<>'~'
         || REJ.cntx_psh(); REJ.index('KOD');
            REJ.prefix();
            _nr:={? ~REJ.find_key(REJ.ROK,REJ.ODD,REJ.KOD,) & REJ.add() || REJ.ref() || _wy+=1; null ?};
            REJ.cntx_pop();
            {? _nr<>null & _c & (DOK_REJ.prefix(REJ.ref()); DOK_REJ.first())
            || {!
               |? DOK_REJ.REJ:=_nr;
                  {? ~_d
                  || DOK_REJ.AV:=null
                  || DOK_REJ.AV();
                     _av_kod:=AV.KOD;
                     DOK_REJ.AV:={? AV.find_key(_b, AV.KOD) & AV.KOD=_av_kod
                                 || AV.ref()
                                 || {? _e='U'
                                    || exec('cop_av','rejestry',_b,DOK_REJ.AV)
                                    || null
                                    ?}
                                 ?}
                  ?};
                  DOK_REJ.cntx_psh();
                  DOK_REJ.prefix();
                  _nrd:={? DOK_REJ.add() || DOK_REJ.ref() || null ?};
                  DOK_REJ.cntx_pop();
                  {? _nrd<>null & _f & (P_AUTOKS.prefix(null,_a,'P',DOK_REJ.ref); P_AUTOKS.first())
                  || {!
                     |? P_AUTOKS.AUTOKSIE();
                        P_AUTOKS.DOK_REJ:=_nrd;
                        _aut_naz:=AUTOKSIE.NAZ;
                        P_AUTOKS.AUTOKSIE:={? AUTOKSIE.find_key(_b, AUTOKSIE.NAZ) & AUTOKSIE.NAZ=_aut_naz
                                           || AUTOKSIE.ref()
                                           || {? _g='U'
                                              || exec('cop_aks','rejestry',_b,P_AUTOKS.AUTOKSIE)
                                              || null
                                              ?}
                                           ?};
                        P_AUTOKS.cntx_psh();
                        P_AUTOKS.prefix();
                        {? P_AUTOKS.AUTOKSIE<>null || P_AUTOKS.add() ?};
                        P_AUTOKS.cntx_pop();
                        P_AUTOKS.next()
                     !}
                  ?};
                  DOK_REJ.next()
               !}
            ?};
            {? _nr<>null & _h & (VAT_REJ.prefix(REJ.ref); VAT_REJ.first())
            || {!
               |? VAT_REJ.REJ:=_nr;
                  RVAT.cntx_psh();
                  RVAT.index('SYM'); RVAT.prefix();
                  {? ~RVAT.find_key(UNPAR.PFIR,VAT_REJ.RVAT().SYM,)
                  || RVAT.FIRMA:=UNPAR.PFIR;
                     RVAT.add()
                  ?};
                  VAT_REJ.RVAT:=RVAT.ref();
                  RVAT.cntx_pop();
                  VAT_REJ.cntx_psh();
                  VAT_REJ.prefix();
                  VAT_REJ.add();
                  VAT_REJ.cntx_pop();
                  VAT_REJ.next()
               !}
            ?};
            {? _nr<>null & _i & (GR_VAT.prefix(REJ.ref); GR_VAT.first())
            || {!
               |? GR_VAT.REJ:=_nr;
                  GR_VAT.cntx_psh();
                  GR_VAT.prefix();
                  GR_VAT.add();
                  GR_VAT.cntx_pop();
                  GR_VAT.next()
               !}
            ?};
            {? _nr<>null & _j & (P_AUTOKS.prefix(REJ.ref); P_AUTOKS.first())
            || {!
               |? P_AUTOKS.AUTOKSIE();
                  P_AUTOKS.REJ:=_nr;
                  _aut_naz:=AUTOKSIE.NAZ;
                  P_AUTOKS.AUTOKSIE:={? AUTOKSIE.find_key(_b, AUTOKSIE.NAZ) & AUTOKSIE.NAZ=_aut_naz
                                     || AUTOKSIE.ref()
                                     || {? _k='U'
                                        || exec('cop_aks','rejestry',_b,P_AUTOKS.AUTOKSIE)
                                        || null
                                        ?}
                                     ?};
                  P_AUTOKS.cntx_psh();
                  P_AUTOKS.prefix();
                  {? P_AUTOKS.AUTOKSIE<>null || P_AUTOKS.add() ?};
                  P_AUTOKS.cntx_pop();
                  P_AUTOKS.next()
               !}
            ?};
            {? _nr<>null & _l & (FOR_AKC.prefix(REJ.ref); FOR_AKC.first())
            || {!
               |? FOR_AKC.REJ:=_nr;
                  FOR_AKC.cntx_psh();
                  FOR_AKC.prefix();
                  FOR_AKC.add();
                  FOR_AKC.cntx_pop();
                  FOR_AKC.next()
               !}
            ?}
         || _ref:=REJ.ref();
            REJ.cntx_psh();
            REJ.index('KOD');
            REJ.prefix();
            _n_ref:={? REJ.find_key(_b,REJ.ODD,REJ.KOD,) || REJ.ref() || null ?};
            REJ.cntx_pop();
            {?  _j & (P_AUTOKS.prefix(_ref,_a,'N'); P_AUTOKS.first())
            || {!
               |? P_AUTOKS.AUTOKSIE();
                  P_AUTOKS.REJ:=_n_ref;
                  P_AUTOKS.DOK_REJ:=null;
                  _aut_naz:=AUTOKSIE.NAZ;
                  P_AUTOKS.AUTOKSIE:={? AUTOKSIE.find_key(_b, AUTOKSIE.NAZ) & AUTOKSIE.NAZ=_aut_naz
                                     || AUTOKSIE.ref()
                                     || {? _g='U'
                                        || exec('cop_aks','rejestry',_b,P_AUTOKS.AUTOKSIE)
                                        || null
                                        ?}
                                     ?};
                  P_AUTOKS.cntx_psh();
                  P_AUTOKS.prefix();
                  {? P_AUTOKS.AUTOKSIE<>null || P_AUTOKS.add() ?};
                  P_AUTOKS.cntx_pop();
                  P_AUTOKS.next()
               !}
            ?};
            {? _n_ref<>null & _c & (DOK_REJ.prefix(_ref); DOK_REJ.first())
            || {!
               |? DOK_REJ.cntx_psh;
                  DOK_REJ.index('NAZ');
                  DOK_REJ.prefix();
                  _naz:=DOK_REJ.NAZ;
                  _nrd:={? DOK_REJ.find_key(_n_ref,_naz) || DOK_REJ.ref() || null ?};
                  DOK_REJ.cntx_pop();
                  {? _nrd<>null & _f & (P_AUTOKS.prefix(null,_a,'P',DOK_REJ.ref); P_AUTOKS.first())
                  || {!
                     |? P_AUTOKS.AUTOKSIE();
                        P_AUTOKS.DOK_REJ:=_nrd;
                        _aut_naz:=AUTOKSIE.NAZ;
                        P_AUTOKS.AUTOKSIE:={? AUTOKSIE.find_key(_b, AUTOKSIE.NAZ) & AUTOKSIE.NAZ=_aut_naz
                                           || AUTOKSIE.ref()
                                           || {? _g='U'
                                              || exec('cop_aks','rejestry',_b,P_AUTOKS.AUTOKSIE)
                                              || null
                                              ?}
                                           ?};
                        P_AUTOKS.cntx_psh();
                        P_AUTOKS.prefix();
                        {? P_AUTOKS.AUTOKSIE<>null || P_AUTOKS.add() ?};
                        P_AUTOKS.cntx_pop();
                        P_AUTOKS.next()
                     !}
                  ?};
                  DOK_REJ.next()
               !}
            ?}
         ?}
      ?};
      REJ.next()
   !};
   DOK_REJ.cntx_psh(); DOK_REJ.index('NAZ');
   REJ.cntx_psh();
   {? OPERATOR.DEPT
   || REJ.prefix(_a,OPERATOR.DEPT)
   || REJ.prefix(_a)
   ?};
   {? REJ.first()
   || {!
      |? DOK_REJ.prefix(REJ.ref());
         {? DOK_REJ.first()
         || REJ.cntx_psh();
            REJ.index('KOD'); REJ.prefix(_b,REJ.ODD,REJ.KOD,REJ.KOD);
            _rejn:={? REJ.first() || REJ.ref() || null ?};
            REJ.cntx_pop();
            {? _rejn
            || {!
               |? DOK_REJ.cntx_psh();
                  _naz:=DOK_REJ.NAZ; _drold:=DOK_REJ.ref();
                  DOK_REJ.prefix(_rejn,_naz);
                  {? DOK_REJ.first() & DOK_REJ.NAZ=_naz
                  || exec('kop_dokm','!zws_par_fask',_drold,DOK_REJ.ref())
                  ?};
                  DOK_REJ.cntx_pop();
                  DOK_REJ.next()
               !}
            ?}
         ?};
         REJ.next()
      !}
   ?};
   REJ.cntx_pop(); DOK_REJ.cntx_pop();
   {? _m || exec('copy_rej_view','!zws_par_fask',_a,_b,_n) ?}
?};
_wy


\kop_upr_us
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JH [2011]
:: OPIS: Kopiowanie uprawnien do rejestrow dla uzytkownikow
::  OLD: \kop_upr_us/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
USERS.cntx_psh;
USERS.clear;
{? USERS.first()
||
   {!
   |?
      USERSREJ.cntx_psh;
      USERSREJ.index('REJ_ROK');
      USERSREJ.prefix(USERS.ref,UNPAR.PRF1);
      {? USERSREJ.first
      ||
        {!
        |?
          _oddzial:=USERSREJ.REJ().ODD;
           _opis:=USERSREJ.REJ().ODD().OD;
          _nazwa:=USERSREJ.REJ().KOD;
          USERSREJ.cntx_psh;
          USERSREJ.clear;
          USERSREJ.blank;
          USERSREJ.REJ:=exec('find_rej','!zws_par_fask',UNPAR.PRF2,_oddzial,_nazwa);
           USERSREJ.ODD:=_opis;
          {? USERSREJ.REJ<>null || USERSREJ.add ?};
          USERSREJ.cntx_pop;
          USERSREJ.next()
        !}
     ?};
   USERSREJ.cntx_pop();
   USERS.next()
   !}
?};
USERS.cntx_pop();
1


\find_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JH [2011]
:: OPIS: Kopiowanie uprawnien do rejestrow dla uzytkownikow
:: _a - rok do ktorego kopiujemy
:: _b - oddzial przypisany do rejestru
:: _c - kod rejestru
::  OLD: \find_rej/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
REJ.cntx_psh;
_wyn:=null;
REJ.index('KOD');
REJ.prefix(_a,_b,_c);
{? REJ.first
||
  _wyn:=REJ.ref
?};
REJ.cntx_pop();
_wyn


\kop_dek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2011]
:: OPIS: Formula kopiuje wszystkie schematy dekretacji z wybranego roku _a do innego roku _b
::        schematy sa kopiowane dla calego programu (wszystkie moduly)
::   WE: _a - z roku
::       _b - do roku
::    WY: liczba skopiowanych schematow
::   OLD: \kop_dek/skid_dek.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
DEK_NAG.index('DEK_NAG');
DEK_NAG.prefix(_a);
{? DEK_NAG.first()
|| {!|?
      _knref:=null;
      _nref:=DEK_NAG.ref();
      _rref:=DEK_NAG.ROK;
      _krref:=null;
      DEK_NAG.cntx_psh();
      do();
      DEK_NAG.ROK:=_b;
      DEK_NAG.prefix();
      {? DEK_NAG.add()
      || _knref:=DEK_NAG.ref();
         _krref:=DEK_NAG.ROK;
         {? exec('kopiuj_stale','fks_auto',_nref,_knref,_krref)
         || DEK_POZ.index('DEK_POZ');
            DEK_POZ.prefix(_nref);
            {? DEK_POZ.first
            || {!
               |? _pref:=DEK_POZ.ref();
                  DEK_POZ.cntx_psh();
                  DEK_POZ.DEK_NAG:=_knref;
                  DEK_POZ.prefix();
                  {? DEK_POZ.add()
                  || exec('kop_wyr','rejestry','DEK_POZ',#_pref,#DEK_POZ.ref())
                  || undo()
                  ?};
                  DEK_POZ.cntx_pop();
                  DEK_POZ.next()
               !}
            ?}
         || undo()
         ?}
      || undo()
      ?};
      {? end() || _wy+=1 ?};
      DEK_NAG.cntx_pop();
      DEK_NAG.next()
   !}
?};
_wy


\rp_ksw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Funkcja Rekord przed w okienku wertowania KS_W
::  OLD: \rp_ksw/skid_wyr.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS_W.ROZDZ='T' || 'KS_W#01#01' || '' ?}


\pw_saldo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Rodzaje sald konta
::  OLD: \pw_saldo/synt.fml
::----------------------------------------------------------------------------------------------------------------------
WSK.index('TR'); WSK.prefix('S');
{? KS.SALDO='A' || WSK.find_key('Aktywne'); RKS.SALDO:=WSK.ref
|? KS.SALDO='P' || WSK.find_key('Pasywne'); RKS.SALDO:=WSK.ref
|? KS.SALDO='D' || WSK.find_key('Aktywno-pasywne'); RKS.SALDO:=WSK.ref
|| RKS.SALDO:=0
?}


\pw_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Rodzaje kont
::  OLD: \pw_typ/synt.fml
::----------------------------------------------------------------------------------------------------------------------
WSK.index('TR'); WSK.prefix('T');
{? KS.TYP='PB' || WSK.find_key('Pozabilansowe'); RKS.TYP:=WSK.ref
|? KS.TYP='BL' || WSK.find_key('Bilansowe');RKS.TYP:=WSK.ref
|? KS.TYP='BW' || WSK.find_key('Wynikowe');RKS.TYP:=WSK.ref
|? KS.TYP='P1' || WSK.find_key('Pozabilansowe - jednoroczne');RKS.TYP:=WSK.ref
|? KS.TYP='PC' || WSK.find_key('Pozabilansowe - cit');RKS.TYP:=WSK.ref
|| RKS.TYP:=0
?}


\pw_krag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Przed wyświetleniem pola RKS.TKRAG
::  OLD: \pw_krag/synt.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS.KRAG<>''
|| WSK.index('RODZ');
   WSK.prefix('G');
   RKS.TKRAG:={? WSK.find_key(KS.KRAG) || WSK.ref || null ?}
|| RKS.TKRAG:=null
?};
1


\pd_syn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Zerowanie zmiennej RKS
::  OLD: \pd_syn/synt.fml
::----------------------------------------------------------------------------------------------------------------------
RKS.blank(1)


\ppop_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formuła przed popraw KS
::  OLD: \ppop_ks/synt.fml
::----------------------------------------------------------------------------------------------------------------------
sym:=KS.SYM; naz:=KS.NAZ; ksSP:=KS.SP;
KS.cntx_psh(); KS.index('SYM'); KS.prefix(KS.ROK,sym);
{? KS.first() || _ref:=KS.ref() || _ref:=0 ?};
KS.cntx_pop();
_wyn:=1;
{? +sym=KS.ROK().SYNT & _ref
|| {? ROK_F.FIRMA().TYP='C'
   || _rok:=ROK_F.ref();
      OKRO_F_G.index('ROK_F_G'); OKRO_F_G.prefix(ROK_F.ref());
      {? OKRO_F_G.first()
      || {!
         |? {? OKRO_F_G.ROK_F().PLAN_GR='T'
            || KS.cntx_psh(); KS.index('SYM'); KS.prefix(ROK_F.ref(),sym);
               {? KS.first()
               || _wyn:=exec('spr_kon','!zws_par_fask')
               ?};
               KS.cntx_pop()
            ?};
            OKRO_F_G.prefix(_rok,OKRO_F_G.FIRMA);
            OKRO_F_G.last();
            OKRO_F_G.prefix(_rok);
            _wyn & OKRO_F_G.next()
         !}
      ?}
   || _wyn:=exec('spr_kon','!zws_par_fask')
   ?};
   DOK.use('doku'+SSTALE.AR().KOD+form(SSTALE.AO().NR,-2));
   AN.use('koan__'+SSTALE.AR().KOD); AN_SLU.use('koansl'+SSTALE.AR().KOD);
   OBR.use('obroty'+SSTALE.AR().KOD);
   POZ.use('pozy'+SSTALE.AR().KOD+form(SSTALE.AO().NR,-2));
   FAK.use('fak_'+SSTALE.AR().KOD+form(SSTALE.AO().NR,-2));
   POW.use('pow_'+SSTALE.AR().KOD+form(SSTALE.AO().NR,-2));
   VPOZ.use('pozv'+SSTALE.AR().KOD+form(SSTALE.AO().NR,-2));
   echo('')
?};
_wyn


\spr_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Sprawdzenie czy konto jest użyte w dokumentach
::  OLD: \spr_kon/synt.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
AN.use('koan__'+KS.ROK().KOD); AN_SLU.use('koansl'+ROK_F.KOD);
AN.index('KS'); AN.prefix(KS.ref());
{? AN.first
|| _wyn:=0
|| echo('Trwa sprawdzanie dekretacji dokumentów firmy %1...'@[ROK_F.FIRMA().SYMBOL]);
   OKRO_F.index('ZAM'); OKRO_F.prefix(KS.ROK);
   {? OKRO_F.first
   || {! |?
         {? OKRO_F.ZAM<>'T'
         || DOK.use('doku'+KS.ROK().KOD+form(OKRO_F.NR,-2)); DOK.prefix();
            POZ.use('pozy'+KS.ROK().KOD+form(OKRO_F.NR,-2)); POZ.prefix();
            VPOZ.use('pozv'+KS.ROK().KOD+form(OKRO_F.NR,-2)); VPOZ.prefix();
            POW.use('pow_'+KS.ROK().KOD+form(OKRO_F.NR,-2));
            {? _wyn & POZ.first
            || {! |?
                    {? KS.ROK().SYNT+POZ.KON=KS.SYM || _wyn:=0 ?};
                    POZ.next() & _wyn
               !}
            ?}
         ?};
         OKRO_F.next() & _wyn
      !}
   ?}
?};
_wyn


\pocz_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Blank: typ konta (KS.TYP)
::  OLD: \pocz_typ/param.fml
::----------------------------------------------------------------------------------------------------------------------
'BL'


\pw_rozr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Czy obowiazkowy identyfikator rozrachunku
::  OLD: \pw_rozr/synt.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS.ROZR='R' || RKS.ROZR:='T'
|? KS.ROZR='P' || RKS.ROZR:='N'
|| RKS.ROZR:='Z'
?};
exec('bv_ks_sp','!zws_par_fask')


\bezmtroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Przed redakcja i wyswietleniem pola KS.OBTYPROZ
::  OLD: \bezmtroz/synt.fml
::----------------------------------------------------------------------------------------------------------------------
RKS.ROZR<>'Z' & |KS.T_ROZ<>''


\sym_syn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: kontrola pola SYM tabeli KS
::  OLD: \sym_syn/synt.fml
::----------------------------------------------------------------------------------------------------------------------
{? +KS.SYM<>KS.ROK().SYNT
|| FUN.info('Długość symbolu konta nie jest zgodna z deklaracją\n'
            'długości konta syntetycznego w roku: %1'
            '\nZadeklarowana długość konta: %2.'@[KS.ROK().NAZ,$KS.ROK().SYNT]); 0
|| 1
?}


\pr_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Przed redakcją typu konta
::  OLD: \pr_typ/synt.fml
::----------------------------------------------------------------------------------------------------------------------
RKS.RWSK:='T';
WSK.hdr_sel;
WSK.hdr_sel('TYP KONTA'@);
''


\pr_saldo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Przed redakcją charakteru salda
::  OLD: \pr_saldo/synt.fml
::----------------------------------------------------------------------------------------------------------------------
RKS.RWSK:='S';
WSK.hdr_sel;
WSK.hdr_sel('CHARAKTER SALDA'@);
''


\pr_krag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Przed redakcją pola RKS.TKRAG
::  OLD: \pw_krag/synt.fml
::----------------------------------------------------------------------------------------------------------------------
RKS.RWSK:='G';
WSK.hdr_sel;
WSK.hdr_sel('RODZAJ KONT - KRĄG KOSZTOWY'@);
''


\pocz_rod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Artur Makos [2010]
:: OPIS: Wartosc poczatkowa pola WSK.RODZ
::  OLD: \pocz_rod/wspol.fml
::----------------------------------------------------------------------------------------------------------------------
RKS.RWSK


\pore_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Po redakcji typu konta
::  OLD: \pore_typ/synt.fml
::----------------------------------------------------------------------------------------------------------------------
{? RKS.TYP
|| KS.TYP:=RKS.TYP().WART; 1
|| FUN.info('Nie wybrano typu konta.'@); 0
?}


\pore_sal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Po redakcji charakteru salda
::  OLD: \pore_sal/synt.fml
::----------------------------------------------------------------------------------------------------------------------
{? RKS.SALDO
|| KS.SALDO:=RKS.SALDO().WART; 1
|| FUN.info('Nie wybrano charakteru salda.'@); 0
?}


\por_krag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Po redakcji pola RKS.TKRAG
::  OLD: \por_krag/synt.fml
::----------------------------------------------------------------------------------------------------------------------
KS.KRAG:={? RKS.TKRAG<>null || RKS.TKRAG().WART || '' ?};
1


\por_rozr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formula po redakcji pola ROZR w KS
::  OLD: \por_rozr/synt.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()='T'
|| KS.ROZR:='R'
|? fld()='N'
|| KS.ROZR:='P'
|| KS.ROZR:='Z'; KS.T_ROZ:=''; KS.OBTYPROZ:=0; KS.SP:='N'
?}; win_disp; 1


\be_ks_tr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.62]
:: OPIS: Przed redakcja pola typ rozrachunku dla konta synt.
::  OLD: \be_ks_tr/synt.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS.ROZR='Z' || 0 || 1 ?}


\typ_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Na wyswietl dla wartosci pola KS.T_ROZ
::----------------------------------------------------------------------------------------------------------------------
{? _a=0
|| ''
|? _a=1
|| 'NAL'
|? _a=2
|| 'ZOB'
|? _a=3
|| 'RMK'
|? _a=4
|| 'NOD'
|? _a=5
|| 'ZOD'
|? _a=6
|| 'INN'
|? _a=7
|| 'RMP'
?}


\spr_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Sprawdzenie parametrow konta syntetycznego
::  OLD: \spr_ks/fiks.fml
::----------------------------------------------------------------------------------------------------------------------
exec('chk_ks','konto',-menu_txt(,)<>'popraw')


\dolkskom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Dołączanie komentarza konta
::  OLD: \dolkskom/synt.fml
::----------------------------------------------------------------------------------------------------------------------
KOM.cntx_psh; KOM.prefix(); KOM.blank();
KOM.NAZ:=KS.SYM+' '+ KS.NAZ;
KOM.SYS:='T';
{? ~KOM.add()
|| FUN.info('Nieudana próba założenia komentarza systemowego dla konta %1.'@[KS.SYM])
?};
KOM.cntx_pop()


\pocz_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: KS.ref()
::  OLD: \pocz_ks/m.fml
::----------------------------------------------------------------------------------------------------------------------
KS.ref()


\ks_uspr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: formula usun przed dla konta syntetycznego
::  OLD: \ks_uspr/synt.fml
::----------------------------------------------------------------------------------------------------------------------
_msg:='';
_msg:=exec('spr_bud','konto',1);
{? KS.sel_size()>0 |
   {? _msg<>''
   || FUN.info(_msg);0
   || FUN.ask('Usunąć konto syntetyczne?'@)
   ?}
|| {? _msg=''
   || 1
   || {? KS.sel_size()>0 || bledy_s+=1 ?};
      0
   ?}
?}


\ks_uspo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Formula Po akcji Usun dla okna wertowania WER tabeli KS
::  OLD: \ks_uspo/synt.fml
::----------------------------------------------------------------------------------------------------------------------
do();
BUD.cntx_psh; BUD.index('KS'); BUD.prefix(KS.ref());
{? BUD.first()
|| {! |?
      _delr:=BUD.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
BUD.cntx_pop();
KOM.cntx_psh(); KOM.index('SYS'); KOM.prefix(KS.ref());
{? KOM.first()
|| {! |?
      _delr:=KOM.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
KOM.cntx_pop();
KS_W.cntx_psh(); KS_W.index('LP'); KS_W.prefix(KS.ref());
{? KS_W.first()
|| {! |?
      _delr:=KS_W.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
KS_W.cntx_pop();
{? KS.count()=0 || KS.del() || undo() ?};
end()


\ks_gupr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Formula Przed akcja grupowa Usun dla okna wertowania WER tabeli KS
::  OLD: \ks_gupr/synt.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~FUN.ask('Usunąć zaznaczone konta syntetyczne?'@)
|| 0
|| sel_nchk();
   ssize_s:=KS.sel_size(); bledy_s:=0;
   1
?}


\ks_gupo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Formula Po akcji grupowej Usun dla okna wertowania WER tabeli KS
::  OLD: \ks_gupo/synt.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Zaznaczonych: %1\n'
         'Usunięto:     %2.'@[$ssize_s,$(ssize_s-bledy_s)]);
VAR_DEL.delete('ssize_s','bledy_s')


\rok_bil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS [7.20]
:: OPIS: Funkcja na wartosc poczatkowa pola KS.ROK.
::  OLD: \rok_bil/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
BILANSP.AROK


\r_synt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS [7.20]
:: OPIS: Funkcja na wartość początkową pola ROK_F.SYNT.
::   WY: dlugość syntetyki
::  OLD: \r_synt/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || exec('env_wt','b_proces') ?};
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
_synt:={? ROK_F.last() || ROK_F.SYNT || 3 ?};
ROK_F.cntx_pop();
_synt


\r_sep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS [7.20]
:: OPIS: Funkcja na wartość początkową pola ROK_F.SEP.
::   WY: znak separatora
::  OLD: \r_sep/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || exec('env_wt','b_proces') ?};
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
_sep:={? ROK_F.last() || ROK_F.SEP || '-' ?};
ROK_F.cntx_pop();
_sep


\bl_rozl_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2011]
:: OPIS: Wartość poczatkowa dla pola ROK_F.ROZL_VAT
::  OLD: \bl_rozl_vat/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || exec('env_wt','b_proces') ?};
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.S_FIRMA);
{? ROK_F.last()
|| VATZMDEK.cntx_psh(); VATZMDEK.index('ROK'); VATZMDEK.prefix(ROK_F.ref());
   _rozl:={? VATZMDEK.last() || VATZMDEK.ROZL_VAT || _rozl:=ROK_F.ROZL_VAT ?};
   VATZMDEK.cntx_pop()
|| _rozl:='M'
?};
ROK_F.cntx_pop();
_rozl


\ks_ods
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [8.70]
:: OPIS: formuła po odswieżeniu okienka wertowania tabeli KS w oknach grupowych
::       WERG i WERGSIK tabeli KS
::   WE: _a - jeżeli 1 to widok kartotek okrojony
::            (0  w p.p.)
::  OLD: \ks_ods/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~_ || _a:=1 ?};
BUD.index('KS');
{? KS.get()
|| BUD.prefix(KS.ref());
   {? BUD.KS<>KS.ref() || BUD.first() || BUD.get() ?};
   BUD.actions('WER',,,1)
|| BUD.prefix(0); BUD.actions('WER',':DS',,1)
?};
BUD.win_sel('WER'+{? ~_a | ROK_F.ZAM='T' | __Plan_gr || 'SIK' || '' ?});
BUD.win_edit('RED');
BUD.hdr_sel();
BUD.hdr_sel(' konta: %1'@[KS.SYM]);
grp_disp(BUD,'WER'+{? ~_a | ROK_F.ZAM='T' | __Plan_gr || 'SIK' || '' ?},1);
1


\bc_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [17.00]
:: OPIS: Przed akcja kopiuj, tab KS, okno WER
::----------------------------------------------------------------------------------------------------------------------
ROK_F.win_dict('WER');
ROK_F.win_sel('WER');
1


\bgc_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [17.00]
:: OPIS: Formula przed akcja grupowa kopiuj dla tabeli KS
::----------------------------------------------------------------------------------------------------------------------
g_size:=KS.sel_size();
ROK_F.win_dict('WER');
_r:=ROK_F.win_sel('?');
ROK_F.win_sel('WER');
exec('clear','unpar','BLBEBVAE','RF2','11','12');
UNPAR.PFIR:=REF.FIRMA;
UNPAR.PRF2_BE:='UNPAR.PFIR<>null';
UNPAR.PRF2_AE:='{? UNPAR.PRF2 || 1 ?}';
UNPAR.P11:='Z';
_ust:={? PAR_SKID.get(35)='T' || 'Z' || 'B' ?};
UNPAR.P12:=_ust;
UNPAR.P11_BE:='1';
UNPAR.P11_BV:='1';
UNPAR.P11_AE:='1';
UNPAR.P12_BV:=UNPAR.P12_BE:='PAR_SKID.get(35)=''T''';
UNPAR.P12_AE:='1';
ROZNE.win_edit('KOP_KON');
_ok:=ROZNE.edit(" {? UNPAR.PRF2=SSTALE.AR
                  || FUN.info('Wskazany rok docelowy musi być różny od kopiowanego.\n Wskaż inny rok'@);'PRF2'
                  || {? UNPAR.PRF2().PLAN_GR='T'
                     || FUN.info('Wybrany rok ma Plan kont definiowany dla całej grupy. Wskaż inny rok'@);'PRF2'
                     || 1
                     ?};
                     {? UNPAR.PRF2().ZAM='T'
                     || FUN.info('Wybrany rok jest zamknięty. Wskaż inny rok'@);'PRF2'
                     || 1
                     ?};
                     {? UNPAR.PRF2().SYNT<>SSTALE.AR().SYNT
                     ||{? FUN.ask('Długość kopiowanego symbolu konta nie jest zgodna z deklaracją\n'
                                   'długości konta syntetycznego w roku: %1.'
                                   '\nZadeklarowana długość konta: %2.'
                                   '\nCzy kontynuować kopiowanie ?'@[UNPAR.PRF2().NAZ,$UNPAR.PRF2().SYNT])
                        || 1
                        ||'PRF2'
                        ?}
                     || 1
                     ?}
                  ?}
               ");
ROK_F.win_sel(_r);
_ok


\agc_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [17.00]
:: OPIS: Formula po akcji grupowej kopiuj dla tabeli KS
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Skopiowana liczba kont: %1 .'@[$g_size]);
&g_size


\kop_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [17.00]
:: OPIS: Kopiowanie definicji kont księgowych (KS)
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
KS.cntx_psh();
ROK_F.cntx_psh();
{? KS.sel_size()=0
|| exec('clear','unpar','BLBEBVAE','RF2','11','12');
   UNPAR.PFIR:=REF.FIRMA;
   UNPAR.PRF2_BE:='UNPAR.PFIR<>null';
   UNPAR.PRF2_AE:='';
   UNPAR.P11:='Z';
   UNPAR.P12:='Z';
   UNPAR.P11_BE:='1';
   UNPAR.P11_BV:='1';
   UNPAR.P11_AE:='1';
   UNPAR.P12_BV:=UNPAR.P12_BE:='PAR_SKID.get(35)=''T''';
   UNPAR.P12_AE:='1';
   ROZNE.win_edit('KOP_KON');
   _ok:=ROZNE.edit("_zwrot:=__CHK.record2(UNPAR,'PRF2','Kopia do roku');
                    {? _zwrot='' & UNPAR.PRF2=SSTALE.AR
                    || FUN.info('Wskazany rok docelowy musi być różny od kopiowanego.\n Wskaż inny rok'@);
                       _zwrot:='PRF2'
                    ?};
                    {? _zwrot='' & UNPAR.PRF2().PLAN_GR='T'
                    || FUN.info('Wybrany rok ma Plan kont definiowany dla całej grupy. Wskaż inny rok'@);
                       _zwrot:='PRF2'
                    ?};
                    {? _zwrot='' & UNPAR.PRF2().ZAM='T'
                    || FUN.info('Wybrany rok jest zamknięty. Wskaż inny rok'@); _zwrot:='PRF2'
                    ?};
                    {? _zwrot='' & UNPAR.PRF2().SYNT<>SSTALE.AR().SYNT &
                       FUN.ask('Długość kopiowanego symbolu konta nie jest zgodna z deklaracją\n'
                               'długości konta syntetycznego w roku: %1.'
                               '\nZadeklarowana długość konta: %2.'
                               '\nCzy kontynuować kopiowanie ?'@[UNPAR.PRF2().NAZ,$UNPAR.PRF2().SYNT])
                   || _zwrot:='PRF2'
                   ?};
                   _zwrot
                   ")
|| _ok:=1
?};
{? _ok
||
  __kppl_a:={? UNPAR.PRF2<>SSTALE.AR || UNPAR.PRF2 || null() ?};
  __kppl_r:=ROK_F.ref();
  __kppl_z:=4+UNPAR.PRF2().NAZ;
  __kppl_b:='K';
  BILANSP.ZAKKOP:={? UNPAR.P11<>'' || UNPAR.P11  || 'Z' ?};
  BILANSP.ZAKWYR:={? UNPAR.P12<>'' || UNPAR.P12  || 'Z' ?};
  exec('kop_pl2','!zws_par_fask',__kppl_a,__kppl_r,__kppl_b,__kppl_z);
  {? KS.sel_size()=0 || FUN.info('Skopiowano konto o symbolu: %1'@[KS.SYM]) ?}
?};
KS.cntx_pop();
ROK_F.cntx_pop();
1


\kop_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.20]
:: OPIS: Funkcja kopiuje plan kont syntetycznych z poprzedniego roku obrotowego.
::   WE: [_a - bez okienka wertowania i pytań]
::       [_b - K/N kopiowanie analityk opartych na wzorcach fiks i emag lub zakladanie nowych
::             slownikow o nazwach zgodnych ze wzorem: <Rok>, <konto>, an. <nr>]
::  OLD: \kom_plan/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix(SSTALE.AR().FIRMA);
_is_rok:=var_pres('do_firm')>0;
_ok:=
{? _is_rok | ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref())
|| 1
|| FUN.info('Nie istnieje poprzedni rok bilansowy.\nNie można skopiować planu kont.'@); 0
?};
ROK_F.cntx_pop();
{? _ok &
   {? exec('spr_synt','!zws_par_fask')
   || {? _=2 | FUN.ask('Kopiować plan kont z poprzedniego roku?'@)
      || {? _=0 || BILANSP.ZAKKON:='W'; BILANSP.ZAKKOP:=BILANSP.ZAKWYR:='Z' ?};
         _=2 | (UNPAR.P19_BE:=UNPAR.P19_BV:=UNPAR.P19_AE:='';
                BILANSP.win_edit('KOPIA');BILANSP.edit())
      ?}
   || FUN.info('Nie można skopiować planu kont.\n'
               'Długość syntetyki w roku poprzednim jest większa od obecnej.'@);0
   ?}
|| {? _=0
   || __kppl_b:=UNPAR.P19
   || __kppl_b:=_b
   ?};
   {? exec('spr_kont','!zws_par_fask')
   || uwaga:=0;
      VAR_DEL.delete('tmpKSBUD');
      tmpKSBUD:=tab_tmp(1,'SYMBOL','STRING[6]' ,'Symbol konta',
                          'NAZWA' ,'STRING[60]','Nazwa konta',
                          'DL'    ,'INTEGER'   ,'Długość konta');
      _wer:=tmpKSBUD.mk_sel('Konta bez skopiowanej budowy'@,'T',1);
      tmpKSBUD.win_act(_wer,,'Formuła','Wydruk'@@,,'Wydruk kont bez skopiowanej budowy'@,,
                       "PAR_WYDR.TTMPAKR:='tmpKSBUD';
                        PAR_WYDR.TITLE:='Konta bez skopiowanej budowy';
                        exec('rep_exec','#b_report','ZWS_PAR_FASK','wsp_tt',,,,,,,,'W')",1,,,,'W');
      tmpKSBUD.win_sel(_wer);
      ROK_F.cntx_psh();
      KS.cntx_psh();
      __kppl_a:=ROK_F.ref();
      __kppl_z:=4+ROK_F.NAZ;
      _lokr:=ROK_F.LOBR;
      ROK_F.index('ROKPOCZ');
      {? _is_rok
      || ROK_F.cntx_psh(); ROK_F.prefix();
         UNPAR.PRF2(); _firm:=ROK_F.FIRMA;
         ROK_F.cntx_pop();
         ROK_F.prefix(_firm)
      || ROK_F.prefix(SSTALE.AR().FIRMA)
      ?};
      {? _is_rok | (~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) & ROK_F.prev())
      || __kppl_r:={? _is_rok || UNPAR.PRF1 || ROK_F.ref ?};
         VAR_DEL.delete('tab_SLPK');
         {? __kppl_b='N'
         || tab_SLPK:=tab_tmp(1,'REF','INTEGER','REF',
                                'NREF','INTEGER','NREF')
         ?};
         {? BILANSP.ZAKKON='B'
         || KS.cntx_psh();
            KS.clear();
            KS.index('SYM');
            KS.prefix(__kppl_r);
            {? KS.first()
            || KS.win_sel(exec('kop_pl_wer_ks','!zws_par_fask'));
               KS.select(,1)
            ?};
            KS.cntx_pop()
         || exec('kop_pl','!zws_par_fask',__kppl_a,__kppl_r,__kppl_b,__kppl_z)
         ?};
         {? __kppl_b='N' || VAR_DEL.delete('tab_SLPK') ?}
      || FUN.info('Nie istnieje poprzedni rok bilansowy.\nNie można skopiować planu kont.'@)
      ?};
      VAR_DEL.delete('__kppl_a','__kppl_r','__kppl_b','__kppl_z');
      KS.cntx_pop();
      ROK_F.cntx_pop();
      {? uwaga<>0 & tmpKSBUD.first()
      || {? FUN.choice('Istnieje konto lub konta w skopiowanym planie kont,'
                       '\nw których nie skopiowano budowy ze względu'
                       '\nna przekroczenie sumarycznej długości 35 znaków.'
                       '\nSpowodowane jest to zwiększeniem długości syntetyki.'@,,'Kontynuuj'@,'Szczegóły'@)=2
         || tmpKSBUD.select()
         ?}
      ?};
      VAR_DEL.delete('uwaga','tmpKSBUD')
   ?}
?}


\spr_synt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.20]
:: OPIS: Funkcja porownuje dlugosc syntetyki w roku biezacym
::       z dlugoscia syntetyki w roku poprzednim.
::   WY: 1 - dlugosc syntetyki bez zmian lub w roku poprzednim
::           dlugosc jest mniejsza niz w biezacym,
::       0 - w roku poprzednim dlugosc syntetyki wieksza niz
::           w roku biezacym.
::  OLD: \spr_synt/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
_z:=1;
ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
_srb:=ROK_F.SYNT;
{? ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) & ROK_F.prev()
|| {? ROK_F.SYNT>_srb || _z:=0 || _z:=1 ?}
?};
ROK_F.cntx_pop();
_z


\spr_kont
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.20]
:: OPIS: Podczas kopiowania wszystkich kont z poprzedniego roku,
::       funkcja sprawdza, czy sa juz konta w biezacym roku i jesli sa, to
::       wyswietalne jest zapytanie, czy kopiowac plan kont.
::   WY: 0 - przerwac kopiowanie planu kont
::       1 - nie przerywac kopiowania planu kont
::  OLD: \spr_kont/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=1;
{? BILANSP.ZAKKON='W'
|| KS.cntx_psh();
   {? KS.first()
   || {? ~FUN.ask('W bieżącym roku bilansowym istnieją już konta syntetyczne.'
                  '\nCzy na pewno kopiować plan kont?'@)
      || _a:=0
      ?}
   ?};
   KS.cntx_pop()
?};
_a


\kop_pl_wer_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula generuje okienko tymczasowe wertowania z akcja grupowa
::        kopiowania kont sysnetycznych
::   WY: akronim okienka tymczasowego
::  OLD: \kop_pl_wer_ks/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
_wer:=KS.mk_sel('Konta syntetyczne: rok bilansowy - %1'@[KS.ROK().NAZ],,,'kop_ks');
KS.win_fld(_wer,,'SYM',,,,,,'Symbol'@);
KS.win_fld(_wer,,'NAZ');
KS.win_act(_wer,0,'Formuła','Wybierz'@@,,,
           "exec('kop_pl2','!zws_par_fask',__kppl_a,__kppl_r,__kppl_b,__kppl_z);
            {? KS.sel_size()=0 || sel_exit() ?}
           ",,1,1,
           "{? ~FUN.ask('Kopiować zaznaczone konta?'@) || sel_exit(); 0 || 1 ?}","sel_exit(); 1",'W');
_wer


\kop_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.20]
:: OPIS: Funkcja kopiuje plan dla wszystkich kont syntetycznych.
::   WE: _a - ref biezacego roku bilansowego,
::       _b - ref poprzedniego roku bilansowego.
::       _c -  K/N kopiowanie analityk opartych na wzorcach fiks i emag lub zakladanie nowych
::             slownikow o nazwach zgodnych ze wzorem: <Rok>, <konto>, an. <nr>
::       _d - 4 znaki przeznaczone na identyfikacje roku w kodzie i nazwie slownika
::  OLD: \kop_pl/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
KS.index('SYM'); KS.prefix(_b);
{? KS.first()
|| {! |?
      exec('kop_pl2','!zws_par_fask',_a,_b, _c, _d);
      KS.next()
   !}
?}


\kop_pl2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.20]
:: OPIS: Funkcja dodaje nowe rekordy do tabel KS, KOM i BUD.
::   WE: _a - ref biezacego roku bilansowego,
::       _b - ref poprzedniego roku bilansowego.
::       _c -  K/N kopiowanie analityk opartych na wzorcach fiks i emag lub zakladanie nowych
::             slownikow o nazwach zgodnych ze wzorem: <Rok>, <konto>, an. <nr>
::       _d - 4 znaki przeznaczone na identyfikacje roku w kodzie i nazwie slownika
::  OLD: \kop_pl2/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
_synt:=0;
_sep:='-';
KS.cntx_psh();
_skonto:=KS.ref;
_p:=KS.ROK().SYNT;
KS.prefix();
ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix();
{? ROK_F.seek(_a)
|| _synt:=ROK_F.SYNT;
   _sep:=ROK_F.SEP;
   {? ROK_F.SYNT>_p || KS.SYM:=KS.SYM+(ROK_F.SYNT-_p)*'0' ?}
?};
ROK_F.cntx_pop();
KS.ROK:=_a;
kom:='';
do();
{? KS.add(1)
|| _nkonto:=KS.ref;
   exec('koment','!zws_par_fask',_skonto,_nkonto);
   {? BILANSP.ZAKKOP='Z' || exec('budowa','!zws_par_fask',_skonto,_nkonto,_synt,_sep, _c, _d) ?};
   {? BILANSP.ZAKWYR='Z' || exec('wyrozn','!zws_par_fask',_skonto,_nkonto) ?}
|| kom:='Konto '+KS.SYM+' - '+KS.NAZ+ ' już istnieje.'
?};
end();
{? kom<>''
|| FUN.info(kom)
?};
&kom;
KS.cntx_pop()


\budowa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [JS] [7.20]
:: OPIS: Funkcja kopiuje budowy kont syntetycznych
::   WE: _a - ref starego konta syntetrycznego,
::       _b - ref nowego konta,
::       _c - dlugosc syntetyki w nowym roku,
::       _d - sep. w n.r.
::       _e - K/N kopiowanie analityk opartych na wzorcach fiks i emag lub zakladanie nowych
::            slownikow o nazwach zgodnych ze wzorem: <Rok>, <konto>, an. <nr>]
::       _f - 4 znaki przeznaczone na identyfikacje roku w kodzie i nazwie slownika
::  OLD: \budowa/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
BUD.index('KS');
BUD.prefix(_a);
ROK_F.cntx_psh();
SLU.index('NAZ');
SLU.prefix();
SLUAPPL.index('NAZ');
SLUAPPL.prefix();
SLO.cntx_psh();
SLO.index('SL');
SLO.prefix();
{? BUD.first()
|| {!
   |? {? _d<>',' || _c+=1 ?};
      _c+=BUD.SLU().SLU().DL;
      BUD.next()
   !}
?};
{? _c<=35
|| {? BUD.first()
   || _it:=0;
      {!
      |? BUD.KS:=_b;
         _it+=1;
         BUD.cntx_psh();
         _dl:=BUD.SLU().SLU().DL;
         _naz:=BUD.SLU().SLU().NAZ;
         _opis:=BUD.SLU().SLU().OP;
         _osapr:=BUD.SLU;
         {? _e='N' & (BUD.SLU().SLU().WZ='prosty')
         || {? var_pres('tab_SLPK')>100 & tab_SLPK.find_key(#_osapr)
               & SLUAPPL.seek(tab_SLPK.NREF,SLUAPPL.name())
            || _sapr:=SLUAPPL.ref()
            || _txt:=_f+', '+BUD.KS().SYM+', POZ.'+(('0'+$_it)+2);
               _slur:=null;
               _sapr:=null;
               {? ~SLUAPPL.find_key('F',_txt)
               || _slur:={? ~SLU.find_key(_txt)
                         || BUD.SLU();
                            SLU.NAZ:=_txt;
                            SLU.OP:=_opis;
                            {? SLU.add()
                            || SLU.ref()
                            || null
                            ?}
                         || null
                         ?};
                  {? _slur<>null
                  || {? SLO.prefix(BUD.SLU().SLU); SLO.first()
                     || {!
                        |? SLO.SLU:=_slur;
                           SLO.cntx_psh();
                           SLO.prefix();
                           SLO.add();
                           SLO.cntx_pop();
                           SLO.next()
                        !}
                     ?};
                     SLUAPPL.blank();
                     SLUAPPL.SLU:=_slur;
                     {? SLUAPPL.add()
                     || _sapr:=SLUAPPL.ref();
                        {? var_pres('tab_SLPK')>100
                        || tab_SLPK.REF:=#_osapr;
                           tab_SLPK.NREF:=#_sapr;
                           tab_SLPK.add()
                        ?}
                     ?}
                  ?}
               || {? SLUAPPL.SLU().DL=_dl
                  || _sapr:=SLUAPPL.ref()
                  || kom:='Dla konta: '+KS.SYM+' w nowym roku został już zdefiniowany słownik\n'+
                          _txt+' o innej długości niż '+_naz+
                          '.\n Został przypisany słownik z roku poprzedniego.';
                     _sapr:=BUD.SLU
                  ?}
               ?}
            ?};
            BUD.SLU:=_sapr
         ?};
         BUD.POZ:=_it;
         BUD.prefix();
         {? BUD.SLU<>null
         || {? ~BUD.add() || _it-=1 ?}
         || _it-=1
         ?};
         BUD.cntx_pop();
         BUD.next()
      !}
  ?}
|| {? var_pres('tmpKSBUD')>100 & KS.seek(_b)
   || tmpKSBUD.SYMBOL:=KS.SYM;
      tmpKSBUD.NAZWA:=KS.NAZ;
      tmpKSBUD.DL:=_c;
      tmpKSBUD.add()
   ?};
   uwaga:=1
?};
SLO.cntx_pop();
ROK_F.cntx_pop()


\koment
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [JS] [7.20]
:: OPIS: Funkcja kopiuje komentarze kont syntetycznych
::   WE: _a-ref starego konta syntetrycznego,
::       _b - ref nowego konta
::  OLD: \koment/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
KOM.index('KS');
KOM.prefix(_a);
{? KOM.first()
|| {! |? _ods:=KOM.KS().ROK().SYNT;
         _on:=KOM.NAZ;
         KOM.cntx_psh();
         KOM.prefix();
         KOM.KS:=_b;
         _nds:=KOM.KS().ROK().SYNT;
         _nn:=(_ods+_on)+'0'*(_nds-_ods);
         KOM.NAZ:=_nn+(_ods-_on);
         KOM.add();
         KOM.cntx_pop();
         KOM.next()
   !}
?}


\wyrozn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [7.20]
:: OPIS: Funkcja kopiuje wyrozniki konta syntetycznego.
::   WE: _a - ref konta syntetycznego z poprzedniego roku obrotowego,
::       _b - ref konta syntetycznego z biezacego roku obrotowego
::  OLD: \wyrozn/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
KS_W.index('LP');
KS_W.prefix(_a);
{? KS_W.first()
|| {! |?
      KS_W.cntx_psh(); KS_W.prefix();
      KS_W.S:=_b;
      KS_W.add();
      KS_W.cntx_pop();
      KS_W.next()
   !}
?}


\wyr_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Wyrozniki dla wskazanego konta syntetycznego
::  OLD: \wyr_ks/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
_kswbe:=__KS_W;
{? REF.S_FIRMA=REF.GRUPA || UNPAR.P10:='FIKS' ?};
_txt:='';
_okno:=KS_W.grp_make(_txt,"",'#ks_wgrp');
_kswo:='WER'+
      {? KS.ROK().FIRMA().TYP='C' || UNPAR.P10='FIKS'; ''
      |? ROK_F.ZAM='T' | KS.ROK().PLAN_GR='T' || '_SIK'
      || ''
      ?};
KS_W.win_sel(_kswo);
KS_W.hdr_sel();
KS_W.hdr_sel(' konta: %1, roku: %2'@[KS.SYM,ROK_F.NAZ]);
KS_W.grp_sel(_okno,KS_W,_kswo,,"exec('wyr_ods','!zws_par_fask')",0,0,6,,,,,'maximized_with_title');
KS_W.grp_splt(_okno,'panel0','horizontal','panel1');
KS_W.grp_sel(_okno,SLO,'ONE',,"",0,0,,"slo_noact:=~KS_W.get()","VAR_DEL.delete('slo_noact')",,,'maximized_with_title');
KS_W.win_sel(_okno);
KS_W.index('LP');
KS_W.prefix(KS.ref());
__KS_W:=1;
KS_W.select(,1);
__KS_W:=_kswbe;
{? REF.S_FIRMA=REF.GRUPA || UNPAR.P10:='' ?}


\wyr_ods
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [8.70]
:: OPIS: formula po odswiezeniu okienka wertowania tabeli KS_W
::       w oknach grupowych WERG i WERGSIK tabeli KS
::  OLD: \wyr_ods/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.index('SL'); SLO.win_sel('ONE'); SLO.hdr_sel();
{? KS_W.get()
|| KS_W.SLU().SLU();
   SLO.prefix(SLU.ref());
   SLO.hdr_sel('Zawartość słownika: %1'@[SLU.NAZ]);
   slo_noact:=0
|| SLO.prefix(0);
   SLO.first();
   slo_noact:=1
?};
grp_disp(SLO,'ONE',,1);
1


\aw_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Okienko po tabeli KS (WERSIK)
::  OLD: \aw_ks/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P10_BV:='';
1


\pop_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formula po popraw KS
::  OLD: \pop_ks/synt.fml
::----------------------------------------------------------------------------------------------------------------------
_typ_ks:=KS.T_ROZ; _obtypr:=KS.OBTYPROZ;
{? MLEX.FIKSB
|| __Bzad:=KS.BZ;
   ML_BZAD.cntx_psh();
   {? ML_BZAD.name()<>'mlbzad'+SSTALE.AR().KOD
   || ML_BZAD.use('mlbzad'+SSTALE.AR().KOD)
   ?};
   ML_BZAD.clear();
   __Bz_j:=ML_BZAD.first();
   ML_BZAD.cntx_pop()
?};
_chk:="
   {? MLEX.FIKSB & __Bzad<>KS.BZ & __Bz_j &
      FUN.ask('Budżet zadaniowy zawiera zapisy. \nZmieniono zapis z %1na %2\n\nCzy powrócić do edycji pola?'@[__Bzad,KS.BZ])
   || 'BZ'
   || exec('spr_ks','!zws_par_fask')
   ?}";
{? KS.edit(_chk)
|| {? KS.put()
   || {? (sym<>KS.SYM) | (naz<>KS.NAZ)
      || KOM.cntx_psh;
         KOM.index('SYS');
         KOM.prefix;
         {? KOM.find_key(KS.ref,'T')
         || KOM.NAZ:=KS.SYM+' '+KS.NAZ;
            KOM.put
         ?};
         {? sym <> KS.SYM
         || do();
            ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA); KS.ROK();
            _synt:=ROK_F.SYNT;
            AN_BO.index('ROK_N'); AN_BO.prefix(ROK_F.ref(),sym);
            {? AN_BO.first ||
               {! |?
                  AN_BO.prefix();
                  AN_BO.KON:=KS.SYM+(_synt-AN_BO.KON); AN_BO.put();
                  AN_BO.prefix(ROK_F.ref(),sym);
                  AN_BO.first()
               !}
            ?};
            ROK_F.cntx_psh();
            {? ROK_F.next()
            || AN_BO.index('ROK'); AN_BO.prefix(ROK_F.ref(),sym);
               {? AN_BO.first()
               || {!
                  |? AN_BO.prefix();
                     AN_BO.PKON:=KS.SYM+(_synt-AN_BO.PKON); AN_BO.put();
                     AN_BO.prefix(ROK_F.ref(),sym);
                     AN_BO.first()
                  !}
               ?}
            ?};
            ROK_F.cntx_pop();
            end();
            {? FUN.ask('Zmienić nazwy komentarzy?'@)
            || KOM.prefix(KS.ref);
               {? KOM.first
               || {!|?
                     {? KOM.SYS<>'T' & KS.ROK().SYNT+KOM.NAZ = sym
                     || KOM.NAZ:=KS.ROK().SYNT-KOM.NAZ;
                        KOM.NAZ:=KS.SYM+KOM.NAZ;
                        KOM.put()
                     ?};
                     KOM.next
                  !}
               ?}
            ?}
         ?};
         KOM.cntx_pop
      ?};
      {? KS.OBTYPROZ
      || {? _obtypr
         || {? KS.T_ROZ<>_typ_ks
            || FUN.info('Zmieniono obowiązkowy typ identyfikatora rozrachunku.\n'
                        'Poprzedni typ - "%1", obecny - "%2".'@[_typ_ks,KS.T_ROZ])
            ?}
         |? KS.T_ROZ<>_typ_ks | _typ_ks<>''
         || FUN.info('Ustawiono obowiązkowy typ identyfikatora rozrachunku na "%1".'@[KS.T_ROZ])
         ?}
      ?};
      {? var_press('ksSP')>0 & ksSP<>KS.SP & PAR_SKID.get(87)='T'
      || exec('update_ks','fks_sp',KS.SYM)
      ?}
   ?}
?};
{? MLEX.FIKSB || VAR_DEL.delete('__Bzad','__Bz_j') ?};
&sym; &naz


\ksw_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Funkcja obslugujaca akcje Dolacz w okienku wert. 'WER' tabeli KS_W.
::   WE: _a - 0/1 czy dodanie pozycji z biezacym numerem (1), czy nastepnym (0)
::       _b - 0/1 czy wyswietlac pytanie o dolaczenie nowego wiersza
::   WY: 0
::  OLD: \ksw_dol/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_wyroz','wyrozniki','Dołącz')
|| {? KS.r_lock(1,1,1) & KS.get()
   || _ok:=1;
      {? _a=1
      || KS_W.cntx_psh();
         {! |? _ok:=exec('spr_wyr_m','!zws_par_fask',KS_W.SLU,1); {? _ok || KS_W.next() ?} !};
         KS_W.cntx_pop()
      ?};
      {? _ok
      || {? _a=0 & _b=1 || _ok:=FUN.ask('Dołączyć nowy wiersz?'@) || _ok:=1 ?};
         {? _ok & KS_W.size()=6
         || FUN.info('Konto syntetyczne może mieć maksymalnie 6 wyróżników.'@);
            _ok:=0
         ?}
      ?};
      {? _ok
      || KS_W.get();
         _lp:=KS_W.LP;
         KS_W.blank();
         KS_W.LP:={? _a || _lp || _lp+1 ?};
         KS_W.win_edit('RED');
         _undo:=0;
         {? KS_W.edit("exec('chk_ksw','wyrozniki')")
         || {? _a=1
            || _lp:=KS_W.LP;
               _slu:=KS_W.SLU;
               _an:=KS_W.AN;
               _wym:=KS_W.WYM;
               _st:=KS_W.ST;
               do();
               exec('przenr','!zws_par_fask',_lp,1);
               KS_W.LP:=_lp;
               KS_W.SLU:=_slu;
               KS_W.AN:=_an;
               KS_W.WYM:=_wym;
               KS_W.ST:=_st;
               {? ~KS_W.add(1) || _undo:=1; undo() ?};
               end()
            || {? ~KS_W.add(1) || _undo:=1 ?}
            ?};
            {? _undo
            || FUN.info('Nieudane dołączenie wyróżnika.\nZnaleziono rekord o podanym kluczu.'@)
            ?}
        ?}
      ?}
   || FUN.info('Konto jest modyfikowane przez innego użytkownika.'@)
   ?}; KS.r_unlock()
?};
0


\spr_wyr_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Sprawdzenie, czy można usunąć wyróżniki
::  OLD: \spr_wyr/m.fml
::----------------------------------------------------------------------------------------------------------------------
echo('Trwa sprawdzanie wyróżników ... '@);
ROK_F.cntx_psh(); FIRMA.cntx_psh(); POW.cntx_psh; OKRO_F.cntx_psh();
_ok:=1;
{? KS.ROK().FIRMA=REF.GRUPA & ROK_F.FIRMA().TYP='C'
|| OKRO_F_G.cntx_psh();
   OKRO_F_G.index('ROK_F_G'); OKRO_F_G.prefix(ROK_F.ref());
   {? OKRO_F_G.first()
   || {!
      |? {? OKRO_F_G.ROK_F().PLAN_GR='T' & ROK_F.FIRMA().TYP='S'
         || _maska:=ROK_F.KOD+form(OKRO_F_G.OKRO_F().NR,-2);
            POW.use('pow_'+_maska); POW.index('SLU'); POW.prefix(_a,KS.SYM);
            _ok:=~POW.first()
         ?};
         _ok & OKRO_F_G.next()
      !}
   ?};
   OKRO_F_G.cntx_pop()
|| OKRO_F.index('ZAM'); OKRO_F.prefix(KS.ROK);
  {? OKRO_F.first
  || {! |?
        _maska:=KS.ROK().KOD+form(OKRO_F.NR,-2);
        POW.use('pow_'+_maska); POW.index('SLU'); POW.prefix(_a,KS.SYM);
        _ok:=~POW.first();
        _ok & OKRO_F.next()
     !}
  ?}
?};
OKRO_F.cntx_pop(); POW.cntx_pop(); FIRMA.cntx_pop(); ROK_F.cntx_pop();
echo('');
{? _=2 & _ok=0
|| FUN.info('Definicje wyróżników zostały użyte podczas dekretacji.\n'
            'Modyfikacje definicji niemożliwe.'@)
?};
::Poczatek modyfikacji dla Maclex Fiks 14-10-2009 AK [1120]
{? _ok
|| {? MLEX.FIKSB & ~(exec('spr_hier','ml_gr',SLUAPPL.SLU().NAZ,ROK_F.ref()))
   || FUN.info('Nie mogę usunąć. \n Defninicje wyróżnika zostały użyte \n w definicji hierarchii.'@);
      _ok:=0
   ?}
?};
::Koniec modyfikacji 08-09-2008 Pawelm [1030]
_ok


\spr_wyr_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Arkadiusz Maczka AMA [7.20]
:: OPIS: Funkcja sprawdza, czy słowniki użytkownika są
::       wykorzystywane jako słowniki wyróźników.
::   WY: 1 - słownik jest wykorzystywany
::       0 - słownik nie jest wykorzystywany
::  OLD: \spr_wyr/dok_zest
::----------------------------------------------------------------------------------------------------------------------
_sel:=~SLU.KDK;
SLU.efld_opt(SLU.win_edit('?'),'mark=%1,enable=%1'[$_sel],SLU,'DL');
_zwrot:='';
SLUAPPL.cntx_psh();
SLUAPPL.index('NAZ'); SLUAPPL.prefix('F',SLU.NAZ);
{? SLUAPPL.first()
|| KS_W.cntx_psh();
   KS_W.index('SLUKS'); KS_W.prefix();
   {? KS_W.find_key(SLUAPPL.ref()) || _zwrot:='SLU#01#01' ?};
   KS_W.cntx_pop()
?};
SLUAPPL.cntx_pop();
SLOSLU.SLFAK:=SLU.NAZ;
_zwrot


\przenr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Funkcja przenumerowujaca kolejnosc wyroznikow dla aktualnego konta.
::   WE: _a - od ktorego numeru rozpoczynac przenumerowanie
::       _b - (1/-1) czy zwiekszenie numerow o 1 (1), czy zmniejszenie o 1 (-1)
::  OLD: \przenr/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
KS_W.cntx_psh();
KS_W.index('LP');
KS_W.prefix(KS.ref);
{? {? _b=1 || KS_W.last() || KS_W.find_key(_a+1) ?}
|| {!|? {? KS_W.LP>=_a
        || KS_W.LP+=_b*1; KS_W.put()
        ?};
        {? _b=1 || KS_W.prev() || KS_W.next() ?}
   !}
?};
KS_W.cntx_pop()


\ksw_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Poprawianie wyróżnika
::  OLD: \ksw_pop/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS.r_lock(1,1,1) & KS.get()
|| slu:=KS_W.SLU;
   roz:=KS_W.ROZDZ;
   do_bo:=KS_W.DO_BO;
   {? KS_W.edit("{? exec('chk_ksw','wyrozniki')=''
                 || _a:='';
                    {? slu<>KS_W.SLU | (roz='T' & KS_W.ROZDZ='N')
                    || {? ~exec('spr_wyr_m','!zws_par_fask',slu)
                       || _t:='Wyróżnik został użyty podczas dekretacji.\n';
                          {? slu<>KS_W.SLU || FUN.info(_t+'Zmiana słownika niemożliwa.'@); _a:='SLU_WYR'
                          |? roz<>KS_W.ROZDZ || FUN.info(_t+'Niemożliwe stosowanie wyróżnika bez rozdzielnika.'@); _a:='ROZDZ'
                          ?}
                       ?}
                    ?};
                    {? _a='' & KS_W.DO_BO<>do_bo & exec('do_bo','!zws_par_fask')
                    || ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
                       KS_W.S().ROK(); ROK_F.next();
                       FUN.info('Istnieją pozycje BO %1 z kontem starym %2.\nZmiana znacznika niemożliwa.'@[ROK_F.NAZ,KS.SYM]);
                       ROK_F.cntx_pop();
                       KS_W.DO_BO:=do_bo;
                       _a:='DO_BO'
                    ?}; _a
                 ?}")
   || KS_W.put()
   ?};
   &slu; &roz; &do_bo
|| FUN.info('Konto jest modyfikowane przez innego użytkownika.'@)
?};
KS.r_unlock()


\do_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.70]
:: OPIS: Kontrola mozliwosci zmiany znacznika KS_W.DO_BO
::  OLD: \do_bo/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.cntx_psh(); ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
BILANSP.AROK();
{? ROK_F.next()
|| POZ.use('pozy'+ROK_F.KOD+'00'); POZ.index('PKON'); POZ.prefix(KS_W.S().SYM);
   _ok:=POZ.first()
|| _ok:=0
?};
POZ.cntx_pop(); ROK_F.cntx_pop();
_ok


\ksw_pousu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Funkcja obslugujaca akcje Usun w okienku wert. 'WER' tabeli KS_W.
::  OLD: \ksw_pousu/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS.r_lock(1,1,1) & KS.get()
|| _ok:=1;
   KS_W.cntx_psh();
   {! |? _ok:=exec('spr_wyr_m','!zws_par_fask',KS_W.SLU,1); {? _ok || KS_W.next() ?} !};
   KS_W.cntx_pop();
   {? _ok & FUN.ask('Usunąć wyróżnik?'@)
   || _lp:=KS_W.LP;
      KS_W.del();
      exec('przenr','!zws_par_fask',_lp,-1)
   ?}
|| FUN.info('Konto jest modyfikowane przez innego użytkownika.'@)
?};
KS.r_unlock()


\ae_kswan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [8.10]
:: OPIS: Po redakcji pola KS_W.AN
::  OLD: \ae_kswan/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS_W.AN<>'S' || KS_W.ST:=null ?}; 1


\pr_ksst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.20]
:: OPIS: Funkcja przed redakcja pola KS_W.ST Funkcja ustawia odpowiedni
::       slownik uzytkownika.
::   WY: 0/1 czy pole bedzie dopuszczone do redakcji
::  OLD: \pr_ksst/wyrozn.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS_W.AN='S' & KS_W.SLU<>null
|| KS_W.SLU().SLU();
   exec('slu_okn','slo_slu');
   1
|| 0
?}


\kom_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Komentarze dla wskazanego konta syntetycznego
::  OLD: \kom_ks/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
KOM.win_sel('WER'+{? ROK_F.ZAM='T' || 'SIK' || '' ?});
KOM.hdr_sel();
KOM.hdr_sel(' konta: %1, roku: %2'@[KS.SYM,ROK_F.NAZ]);
KOM.index('KS');
KOM.prefix(KS.ref());
KOM.select();
1


\wyr_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Rekord przed dla tabeli KS
::  OLD: \wyr_kon/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
:ROZNE.DEFW_KS:=exec('defw_ks','!zws_par_fask');
{? KS.TYP='BL' | KS.TYP='BW'
|| {? ROZNE.DEFW_KS='' & (KS.TYP='BL' & USERS_KS.SPR_BIL | KS.TYP='BW' & USERS_KS.SPR_WYN)
   || 'KS#01#01'
   || 'KS#01#02'
   ?}
|| ''
?}


\defw_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Wiersz sprawozdania wynikowego lub wynikowego
::  OLD: \defw_ks/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS.TYP='BL' | KS.TYP='BW'
|| ALG_PAR.index('KS_IN_P1');
   _gr:={? KS.TYP='BL' || USERS_KS.SPR_BIL || USERS_KS.SPR_WYN ?};
   {? _gr
   || ALG_PAR.prefix('T',_gr,KS.SYM);
      _wyn:=
      {? ALG_PAR.first()
      || ALG_PAR.DEFW().NAZWA
      || ''
      ?};
      {? _wyn='' & USERS_KS.ALL='T'
      || GR_KOL.index('LP'); GR_KOL.prefix(_gr);
         DEFW.index('GRUPA'); DEFW.prefix(_gr);
         _ref:=null;
         {? DEFW.first()
         || {!
            |? {? GR_KOL.first()
               || {!
                  |? _ref:=exec('ks_in_gr_sik2','!zws_par_fask');
                     _ref=null & GR_KOL.next()
                  !}
               ?};
               _ref=null & DEFW.next()
            !}
         ?};
         {? _ref
         || DEFW.prefix(); DEFW.seek(_ref);
            DEFW.NAZWA
         || ''
         ?}
      || _wyn
      ?}
   || ''
   ?}
|| ''
?}


\ks_in_gr_sik2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Czy jest konto w sprawozdaniu
::  OLD: \ks_in_gr_sik2/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
DEFW.cntx_psh(); GR_KOL.cntx_psh();
{? DEFW.ALGORYTM='F'
|| ALG_PAR.index('ALG_PAR1'); ALG_PAR.prefix(REF.FIRMA,DEFW.ref(),GR_KOL.ref(),ROK_F.NAZ);
   {? ALG_PAR.first()
   || {!
      |? _s:=ALG_PAR.FORMULA().SKROT;
         {? _s*'SAL'>0 | _s*'OBR'>0 | (4+_s)*'BO'>0 | _s*'ROZNI'>0 | _s*'ZM_STA'>0
         || WYDRUKI.MASKA:=ALG_PAR.P1;
            WYDRUKIN.DLKON:=+KS.SYM;
            {? exec('mask','konto',KS.SYM)
            || _ref:=DEFW.ref()
            ?}
         ?};
         _ref=null & ALG_PAR.next()
      !}
   ?}
|| DEFA.index('WIERSZ'); DEFA.prefix(DEFW.ref(),GR_KOL.LP);
   {? DEFA.first()
   || {!
      |? DEFA.ARGUMENT();
         DEFA.ARG_KOL();
         _ref:=exec('ks_in_gr_sik2','!zws_par_fask');
         _ref=null & DEFA.next()
      !}
   ?}
?};
DEFW.cntx_pop(); GR_KOL.cntx_pop;
_ref


\ks_in_gr_sik3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KW [23.25]
:: OPIS: Czy jest konto w sprawozdaniu.
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
DEFW.cntx_psh(); GR_KOL.cntx_psh();
{? DEFW.ALGORYTM='F'
|| ALG_PAR.index('ALG_PAR1'); ALG_PAR.prefix(REF.FIRMA,DEFW.ref(),GR_KOL.ref(),ROK_F.NAZ);
   {? ALG_PAR.first()
   || {!
      |? _s:=ALG_PAR.FORMULA().SKROT;
         {? _s*'SAL'>0 | _s*'OBR'>0 | (4+_s)*'BO'>0 | _s*'ROZNI'>0 | _s*'ZM_STA'>0
         || WYDRUKI.MASKA:=ALG_PAR.P1;
            WYDRUKIN.DLKON:=+KSSPRAN.SYM;
            {? exec('mask','konto',KSSPRAN.SYM)
            || _ref:=DEFW.ref()
            ?}
         ?};
         _ref=null & ALG_PAR.next()
      !}
   ?}
|| DEFA.index('WIERSZ'); DEFA.prefix(DEFW.ref(),GR_KOL.LP);
   {? DEFA.first()
   || {!
      |? DEFA.ARGUMENT();
         DEFA.ARG_KOL();
         _ref:=exec('ks_in_gr_sik3','!zws_par_fask');
         _ref=null & DEFA.next()
      !}
   ?}
?};
DEFW.cntx_pop(); GR_KOL.cntx_pop;
_ref


\pr_u_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formula przed przed usun dla tabeli KOM
::  OLD: \pr_u_kom/synt.fml
::----------------------------------------------------------------------------------------------------------------------
_b:=1;
{? KOM.SYS = 'T'
|| FUN.info('Komentarz systemowy\n Usunięcie możliwe jedynie łącznie z kontem syntetycznym.'@);
   _b:=0
|| echo('Trwa sprawdzanie dekretacji dokumentów ... '@);
   DOK.cntx_psh;
   POZ.cntx_psh;
   OKRO_F.cntx_psh;
   OKRO_F.index('ZAM');
   OKRO_F.prefix(KOM.KS().ROK);
   _e:=1;
   {? _c:=OKRO_F.first()
   || {!
      |? _c & _e
      |! DOK.use('doku'+KOM.KS().ROK().KOD+form(OKRO_F.NR,-2));
         POZ.use('pozy'+KOM.KS().ROK().KOD+form(OKRO_F.NR,-2)); POZ.prefix();
         {? _d:=POZ.first()
         || {!
            |? _d & _e
            |! {? POZ.KOM=KOM.ref()
               || _e:=0;
                  _f:=OKRO_F.NAZ;
                  _g:=POZ.DOK().NK
               || _d:=POZ.next()
              ?}
            !}
         ?};
         {? _e || _c:=OKRO_F.next() ?}
      !}
   ?};
   echo('');
   OKRO_F.cntx_pop(); DOK.cntx_pop(); POZ.cntx_pop();
   {? _e=0
   || _b:=0;
      FUN.info('W okresie %1 istnieje dokument'
               '\no symbolu %2\n zawierający bieżący komentarz.'
               '\nUsunięcie komentarza nie jest możliwe.'@[_f,_g])
   ?}
?};
_b


\pu_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Po usun w tabeli KOM
::  OLD: \pu_kom/synt.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć komentarz?'@) || KOM.del() ?};
1


\pr_p_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: formula przed POPRAW dla tabeli KOM
::  OLD: \pr_p_kom/synt.fml
::----------------------------------------------------------------------------------------------------------------------
{? KOM.SYS = 'T'
|| FUN.info('Komentarz systemowy.\nRedagowanie niemożliwe.'@); 0
|| 1
?}


\spr_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Rekord po tabeli KOM
::   WY: Akronim pola do ponownej redakcji lub ''
::  OLD: \spr_kom/synt.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(KOM,,'NAZ');
{? _zwrot=''
|| {? __CHK.index(KOM,-menu_txt(,)='popraw')<>'' || _zwrot:='NAZ' ?}
?};
_zwrot


\dol_bud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formula dolacz rekord w tabeli BUD
::   WE: _a = 1 - wywolanie z Dolacz dla pustej dziedziny
::            2 - wywolanie z Dolacz dla niepustej dziedziny
::            3 - wywolanie z formuly Dolacz na strzalke
::  OLD: \dol_bud/m.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
_sep_kon:=KS.ROK().SEP;
{? BUD.size() || _k:=BUD.ref() ?};
_g:=_h:=_i:=_j:=0; _f:=+KS.SYM;
BUD.cntx_psh(); KOM.cntx_psh();
BUD.index('KS'); BUD.prefix(KS.ref());
{? BUD.first()
|| {! |? _g+=BUD.SLU().SLU().DL; BUD.next() !}
|| _g:=0
?};
_h:=_f+_g+{? _sep_kon<>',' || BUD.size() || 0 ?};
{? BUD.size()=10
|| FUN.info('Może być zdefiniowane 10 poziomów analityki.'@);
   BUD.cntx_pop; KOM.cntx_pop; 0
|| {? KS.r_lock(1,1,1) & KS.get()
   || BUD.win_edit('RED');
      {? BUD.first || BUD.seek(_k) ?};
      BUD.cntx_psh(); BUD.prefix(KS.ref);
      {? _a=1 | _a=3
      || {? ~BUD.last() || _d:=1 || _d:=BUD.POZ+1 ?}
      || _d:=BUD.POZ
      ?};
      BUD.cntx_pop();
      BUD.blank(); BUD.POZ:=_d;
      {? BUD.SLU
      || SLOSLU.SLUNAZ:=BUD.SLU().SLU().NAZ
      || SLOSLU.SLUNAZ:=''
      ?};
      _zwrot:={? BUD.edit("SLUAPPL.index('KDK_NAZ'); SLUAPPL.prefix('F',0);
                          {? SLUAPPL.find_key(SLOSLU.SLUNAZ)
                          || {? SLUAPPL.SLU().NAZ=SLOSLU.SLUNAZ
                             || BUD.SLU:=SLUAPPL.ref(); ''
                             || SLOSLU.SLUNAZ:=SLUAPPL.SLU().NAZ; 'SLUNAZ'
                             ?}
                          || FUN.info('Słownik: %1\nNie znaleziono słownika w systemie.'@[SLOSLU.SLUNAZ]); 'SLUNAZ'
                          ?}
                          "
                         )
               || _j:=_h+BUD.SLU().SLU().DL+{? _sep_kon<>',' || 1 || 0 ?};
                  {? _j>35
                  || FUN.info('Przekroczona maksymalna długość konta (35 znaków).'@);
                     BUD.cntx_pop; KOM.cntx_pop; 0
                  || _poz:=BUD.POZ; _ks:=BUD.KS; _slu:=BUD.SLU;
                     BUD.lock(2);
                     do;
                     {? _a=2
                     || _ref:=BUD.ref(); BUD.last();
                        {!
                        |? BUD.ref()<>_ref
                        |! BUD.POZ+=1;
                           {? ~BUD.put() || undo() ?};
                           BUD.prev()
                        !};
                        BUD.POZ+=1;
                        {? ~BUD.put() || undo() ?};
                        BUD.KS:=_ks; BUD.POZ:=_poz; BUD.SLU:=_slu
                     ?};
                     {? ~BUD.add() || undo() ?};
                     _szuk:=BUD.ref;
                     _end:=end();
                     BUD.unlock();
                     BUD.cntx_pop(); KOM.cntx_pop();
                     {? _end || BUD.seek(_szuk); 1 || 0 ?}
                  ?}
               || BUD.cntx_pop; KOM.cntx_pop; 0
               ?}
   || FUN.info('Konto jest modyfikowane przez innego użytkownika.'@);
      BUD.cntx_pop(); KOM.cntx_pop()
   ?};
   KS.r_unlock()
?};
_zwrot


\us_bud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formula usun rekord w tabeli BUD
::   WE: [_a - bez komunikatów]
::   WY: jesli podano _a to tresc komunikatu
::  OLD: \us_bud/m.fml
::----------------------------------------------------------------------------------------------------------------------
_msg:=''; _dl:=1;
::Poczatek modyfikacji dla Maclex Fiks 14-10-2009 AK [1120]
{? MLEX.FIKSB & ~(exec('spr_hier','ml_gr', BUD.SLU().SLU().NAZ,ROK_F.ref(),1))
|| FUN.info('Słownik użyty w definicji hierarchii.'@)
|| {? _wy:={? _=0 || exec('spr_bud','konto') || exec('spr_bud','konto',1) ?};
      {? _=0 || _wy || _wy<>'' ?}
   || {? {? _=0 || FUN.ask('Czy usunąć poziom analityki?'@) || 1 ?}
      || {? KS.r_lock(1,1,1) & KS.get()
         || BUD.cntx_psh(); BUD.index('KS'); BUD.prefix(KS.ref());
            BUD.get();
            _a:=BUD.POZ;
            _b:=_a;
            _c:=BUD.ref();
            KOM.cntx_psh;
            {? ~BUD.seek(_c)
            || _msg:='Nie znaleziono rekordu tabeli BUD na którym są wykonywane operacje.'@;
               {? _a=0 || FUN.info(_msg) ?};
               _dl:=0
            ?};
            {? _dl & BUD.next()
            || _d:=BUD.ref;
               BUD.prev();
               BUD.del();
               {? ~BUD.seek(_d)
               || _dl:=0;
                  _msg:='Nie znaleziono rekordu tabeli BUD na którym są wykonywane operacje.'@;
                  {? _a=0 || FUN.info(_msg) ?}
               ?};
               _dl1:=_dl;
               {!
               |? _dl1
               |! BUD.POZ-=1;
                  {? ~BUD.put || _dl:=_dl1:=0 ?};
                  {? _dl1 || _dl1:=BUD.next() ?}
               !}
            || BUD.del()
            ?};
            KOM.cntx_pop();
            BUD.cntx_pop()
         || _msg:='Konto jest modyfikowane przez innego użytkownika.'@;
            {? _a=0 || FUN.info(_msg) ?}
         ?}
      ?};
   KS.r_unlock()
   ?}
?};
::Koniec modyfikacji Maclex
_msg


\pop_bud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formula popraw rekord w tabeli BUD
::  OLD: \pop_bud/m.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('spr_bud','konto')
|| {? KS.r_lock(1,1,1) & KS.get()
   || KS.get; _g:=_j:=0; _f:=+KS.SYM; sep_kon:=KS.ROK().SEP;
      BUD.cntx_psh(); _h:=BUD.ref;
      BUD.index('KS'); BUD.prefix(KS.ref); BUD.get();
      _a:=BUD.POZ; BUD.win_edit('RED');
      {? BUD.first
      || {! |? {? BUD.ref<>_h || _g+=BUD.SLU().SLU().DL ?}; BUD.next() !}
      || _g:=0
      ?};
      BUD.seek(_h);
      Dlkonta:=_f+_g+{? sep_kon<>',' || BUD.size-1 || 0 ?};
      BUD.SLU();
      {? BUD.edit("{? (_j:=chk_rec('SLUNAZ'))=''
                   || {? (Dlkonta+BUD.SLU().SLU().DL+{? sep_kon<>','||1||0?}<=35)
                      || 1
                      || FUN.info('Przekroczona maksymalna długość konta (35 znaków).'@); 0
                      ?}
                   || _j
                   ?}")
      || do(); {? ~BUD.put() || undo() ?}; end()
      ?};
      BUD.cntx_pop();
      &sep_kon
   || FUN.info('Konto jest modyfikowane przez innego użytkownika.'@)
   ?};
   KS.r_unlock()
?};
1


\slaplslu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Rekord przed okna WER tabeli BUD
::  OLD: \slaplslu/m.fml
::----------------------------------------------------------------------------------------------------------------------
BUD.SLU()


\bud_slu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Na F3 sla pola SLOSLU.SLUNAZ
::  OLD: \bud_slu/m.fml
::----------------------------------------------------------------------------------------------------------------------
SLUAPPL.index('KDK_NAZ'); SLUAPPL.prefix('F',0);
SLUAPPL.win_sel('SLO3');
SLUAPPL.first();
SLUAPPL.find_key(SLOSLU.SLUNAZ);
{? SLUAPPL.select(,1)
|| BUD.SLU:=SLUAPPL.ref();
   SLOSLU.SLUNAZ:=SLUAPPL.SLU().NAZ
?}


\bud_naz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Po redakcji pola SLOSLU.SLUNAZ
::  OLD: \bud_naz/m.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
SLUAPPL.index('KDK_NAZ'); SLUAPPL.prefix('F',0);
{? SLUAPPL.find_key(SLOSLU.SLUNAZ)
|| SLUAPPL.SLU();
   SLO.index('SL'); SLO.prefix(SLU.ref());
   {? SLO.first()
   || {! |?
         _zwrot:=(+SLO.KOD=SLU.DL);
         _zwrot & SLO.next()
      !}
   ?};
   {? _zwrot
   || BUD.SLU:=SLUAPPL.ref()
   || FUN.info('W słowniku %1'
               '\n występują pozycje o długości kodu różnej od zdefiniowanej w nagłówku słownika.'
               '\nSłownik taki nie może być wykorzystany do budowy analitycznej konta.'@[SLU.NAZ])
   ?}
|| FUN.info('Nie znaleziono słownika o początkowych znakach: %1'@[SLOSLU.SLUNAZ]);
   BUD.SLU:=null; _zwrot:=0
?};
_zwrot


\bud_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Przed wyswietleniem dla pola SLOSLU.SLUNAZ
::  OLD: \bud_wys/m.fml
::----------------------------------------------------------------------------------------------------------------------
{? BUD.SLU
|| SLOSLU.SLUNAZ:=BUD.SLU().SLU().NAZ
?}


\skop_bud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS [7.20]
:: OPIS: Funkcja kopiuje budowe wybranego konta syntetycznego.
::       Warunek: konto dla ktorego kopiujemy budowe nie moze byc uzyte
::       w zaakceptowanych i zaksiegowanych dokumentach.
::  OLD: \skop_bud/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
_konsynt:=KS.ref(); _konto:=KS.SYM;
_dalej:=exec('spr_bud','konto');
{? _dalej
|| _txt:='';
   ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA); KS.ROK();
   AN_BO.index('ROK_N'); AN_BO.prefix(ROK_F.ref(),KS.SYM);
   _txt+={? AN_BO.first() || ROK_F.NAZ || '' ?};
   {? ROK_F.next()
   || AN_BO.index('ROK'); AN_BO.prefix(ROK_F.ref(),KS.SYM);
      _txt+={? AN_BO.first() || {?_txt<>'' || ' i ' || '' ?}+ROK_F.NAZ || '' ?}
   ?};
   {? _txt<>''
   || FUN.info('Istnieją reguły przekształcenia kont BO w roku %1 dla konta %2'
               '.\nNiemożliwe kopiowanie budowy konta syntetycznego.'@[_txt,KS.SYM]);
      _dalej:=0
   ?};
   ROK_F.cntx_pop()
?};
{? _dalej
|| {? KS.r_lock(1,1,1) & KS.get()
   || KS.cntx_psh();
      BUD.cntx_psh(); BUD.index('KS'); BUD.prefix();
      POMOC.win_edit('KS');
      _rokbil:=BILANSP.AROK;
      {? POMOC.edit("__CHK.record(POMOC,,'AROK','KS')")
      || BUD.prefix(POMOC.KS);
         _poziom:=1;
         {? BUD.find_key(_poziom)
         || {! |?
               _a:=BUD.POZ;
               _b:=BUD.SLU;
               KS.cntx_pop(); BUD.cntx_pop();
               BUD.blank();
               BUD.POZ:=_a;
               BUD.SLU:=_b;
               BUD.add();
               BUD.cntx_psh();
               KS.cntx_psh(); KS.index('SYM'); KS.prefix();
               {? KS.find_key(BILANSP.AROK,POMOC.KS().SYM)
               || BUD.prefix(KS.ref);
                  _poziom:=_poziom+1;
                  BUD.find_key(_poziom)
               || 0
               ?}
            !}
         ?};
         BUD.cntx_pop(); KS.cntx_pop()
      || KS.cntx_pop(); BUD.cntx_pop()
      ?};
      BILANSP.AROK:=_rokbil
   || FUN.info('Konto jest modyfikowane przez innego użytkownika.'@)
   ?};
   KS.r_unlock()
?};
1


\chk_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Rekord po tabeli RVAT
::  OLD: \chk_rvat/vat.fml
::----------------------------------------------------------------------------------------------------------------------
exec('chk_rej_vat','rejestry',-menu_txt(,)='popraw')


\be_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Przed akcja Popraw okna WER tabeli RVAT
::  OLD: \be_rvat/vat.fml
::----------------------------------------------------------------------------------------------------------------------
VAT7.POZIOM1:=RVAT.SYM; 1


\ae_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Na akcje 'popraw po' dla tabeli RVAT
::  OLD: \ae_rvat/vat.fml
::----------------------------------------------------------------------------------------------------------------------
{? RVAT.SYM<>VAT7.POZIOM1
|| VAT_REJ.index('VAT_REJ'); VAT_REJ.prefix(RVAT.ref());
   {? VAT_REJ.first()
   || {! |?
         VAT_REJ.SYM:=RVAT.SYM; VAT_REJ.put();
         VAT_REJ.next()
      !}
   ?}
?};
1


\kop_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Kopiowanie rejestru VAT między firmami
::  OLD: \kop_rvat/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? RVAT.sel_size()=0
|| REJESTR.win_edit('RVAT2F');
   UNPAR.PFIR:=null;
   UNPAR.PFIR_BE:='';
   UNPAR.PFIR_AE:='';
   _ok:=REJESTR.edit("{? UNPAR.PFIR=null || FUN.info('Nie wybrano firmy docelowej.'@); 0 || 1 ?}")
|| _ok:=1
?};
{? _ok
|| RVAT.cntx_psh();
   RVAT.index('SYM'); RVAT.prefix();
   {? ~RVAT.find_key(UNPAR.PFIR,RVAT.SYM,)
   || RVAT.FIRMA:=UNPAR.PFIR;
      {? RVAT.add() & RVAT.sel_size()
      || __RVATOK+=1
      ?}
   |? RVAT.sel_size()
   || __RVATIS+=1
   || FUN.info('Kopiowanie przerwane.\nRejestr już istnieje w firmie:\n'+ UNPAR.PFIR().OPIS+'.'@)
   ?};
   RVAT.cntx_pop()
?}


\bg_kop_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przed akcja grupowego kopiowania rejestru VAT między firmami
::  OLD: \bg_kop_rvat/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
REJESTR.win_edit('RVAT2F');
UNPAR.PFIR:=null;
UNPAR.PFIR_BE:='';
UNPAR.PFIR_AE:='';
{? REJESTR.edit("chk_rec()")
|| __RVATSEL:=RVAT.sel_size();
   __RVATOK:=__RVATIS:=0;
   1
?}


\ag_kop_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Po akcji grupowego kopiowania rejestru VAT między firmami
::  OLD: \ag_kop_rvat/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Liczba zaznaczonych rejestrów VAT: %1\n'
         'Liczba istniejących rejestrów VAT: %2\n'
         'Liczba skopiowanych rejestrów VAT: %3.'@[$__RVATSEL,$__RVATIS,$__RVATOK]);
VAR_DEL.delete('__RVATSEL','__RVATOK','__RVATIS')


\bw_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Okienko przed okna WER tabeli RVAT
::  OLD: \bw_rvat/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? REF.WFIRM=0
|| RVAT.actions('WER','O',,1)
?};
1


\ae_rvat_kvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [$12.10]
:: OPIS: Po redakcji pola RVAT.KVAT formula ustawia odpowiednio pole RVAT.RT na podstawie wybranej
::       klasy ewidencji VAT
::  OLD: \ae_rvat_kvat/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_v:=RVAT.KVAT().SYM; _wy:='';
{? 4+_v='ImpT' || _wy:='I'
|? 1+_v='_' || _wy:='W'
|? (1+_v='Z') | (1+_v='I') || _wy:='Z'
|? 1+_v='S' & _v<>'SprzEksp' || _wy:='S'
|? _v='SprzEksp' || _wy:='E'
?};
RVAT.RT:=_wy


\rvat_stv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula - przed red. pola RVAT.STVAT
::  OLD: \rvat_stv/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? RVAT.KRAJ<>null
|| exec('slo_slu2','slo_slu','~STAWKI VAT '+RVAT.KRAJ().KOD,'ONE')
?}


\ae_grvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formula - po redakcji pola RVAT.GRVAT
::  OLD: \ae_grvat/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=1+RVAT.GRVAT().KOD;
_b:=RVAT.KVAT().SYM;
_c:=RVAT.RT;
_d:='Grupa podatkowa niezgodna z typem rejestru VAT. Popraw dane.'@;
{? (('SE'*_c) | (6+_b='_WWspD')) & 'DORSP'*_a=0
|| FUN.info(_d); 0
|? (('IZ'*_c) | (6+_b='_WWspN')) & 'Z'*_a=0
|| FUN.info(_d); 0
|| 1
?}


\rvat_kr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula - po red. pola RVAT.KRAJ
::  OLD: \rvat_kr/dok_zrd2.fml
::----------------------------------------------------------------------------------------------------------------------
{? RVAT.STVAT<>null & RVAT.STVAT().SLU().NAZ<>'~STAWKI VAT '+RVAT.KRAJ().KOD
|| RVAT.STVAT:=null
?};
1


\a_rejro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Po redakcji REJ.ROK i REJ.ODD
::  OLD: \a_rejro/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.AKC='C' & ~REJ.sel_size || exec('get_kod','!zws_par_fask') ?}; 1


\get_kod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Wyznaczenie kodu rejestru ksiegowego przy kopiowaniu
::  OLD: \get_kod/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
_b:=0; _c:=_a:=kod;
_rok:=REJ.ROK;
_odd:=REJ.ODD;
_naz:=REJ.NAZ;
_wal:=REJ.WAL;
REJ.index('KOD'); REJ.prefix();
{!
|? REJ.find_key(_rok,_odd,_a,_a) & _b<>-1
|! {? REJ.KOD=_a
   || _b+=1; _a:=6+_c+form(_b,-2); REJ.NAZ:=_naz; REJ.WAL:=_wal
   || _b:=-1
   ?}
!};
REJ.KOD:=_a


\be_rodd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Przed redakcja REJESTR.ODD, REJ.ODD
::  OLD: \be_rodd/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPERATOR.DEPT || 0 || POMOC.AKC='D' | POMOC.AKC='C' | POMOC.AKC='X' ?}


\czy_red_rejzb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja pola REJ.CZY_DZ
::  OLD: \czy_red_rejzb/akcept.fml
::----------------------------------------------------------------------------------------------------------------------
{? -menu_txt(,)='popraw'
|| DOKM_DOK.index('REJ'); DOKM_DOK.prefix(REJ.ref());
   ~DOKM_DOK.first()
|| 1
?}


\p_dolrej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: REJ przed dolacz
::  OLD: \p_dolrej/param.fml
::----------------------------------------------------------------------------------------------------------------------
REJ.win_edit('RED');
POMOC.AKC:='D';
1


\bd_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Przed usun REJ
::  OLD: \bd_rej/param.fml
::----------------------------------------------------------------------------------------------------------------------
_g:=REJ.sel_size();
{? REJ.KOD='~BO' | REJ.KOD='~BZ'
|| {? ~_g || FUN.info('Usunięcie rejestru %1 jest zabronione.'@[REJ.KOD]) ?};
   return(0)
|? (REJ.KOD='~NOTY_WY' | REJ.KOD='~NOTY_W2') & REJ.ROK().FIRMA().TYP='W'
|| {? ~_g || FUN.info('Usunięcie rejestru %1 jest zabronione.'@[REJ.KOD]) ?};
   return(0)
?};
_ok:=1;
DOK.cntx_psh(); OKRO_F.cntx_psh();
OKRO_F.index('ROK'); OKRO_F.prefix(SSTALE.AR);
{? OKRO_F.first()
   || {! |?
      DOK.use('doku'+SSTALE.AR().KOD+form(OKRO_F.NR,-2));
      DOK.index('REJ');
      DOK.prefix(REJ.ref());
      _ok:=~DOK.first();
      {? _ok || OKRO_F.next() || 0 ?}
   !}
?};
OKRO_F.cntx_pop(); DOK.cntx_pop();
{? ~_ok ||
   {? ~_g
   || {? OPERATOR.DEPT
      || FUN.info('Usunięcie rejestru %1 jest niemożliwe.\nIstnieją dokumenty w rejestrze.'@[REJ.KOD])
      || FUN.info('Usunięcie rejestru %1 z jednostki księgowej %2 jest niemożliwe.\nIstnieją dokumenty w rejestrze.'@[REJ.KOD,REJ.ODD().OD])
     ?}
   ?}
?};
_ok


\usun_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Usuwanie rejestru ksiegowego z powiazanymi strukturami
::  OLD: \usun_rej/param.fml
::----------------------------------------------------------------------------------------------------------------------
{? REJ.sel_size()
|| _ok:=1
|| _ok:=FUN.ask('Usunąć rejestr?'@)
?};
{? _ok
|| {? REJ.r_lock(1,1)
   || _kod:=REJ.KOD;
      _odd:=REJ.ODD().OD;
      _ok:=exec('del_rej','rejestry',1);
      {? REJ.sel_size()
      || g_ok:=g_ok+_ok
      || {? ~_ok
         || {? OPERATOR.DEPT
            ||  FUN.info('Usuwanie rejestru %1 zakończyło się niepowodzeniem.'@[REJ.KOD])
            || FUN.info('Usuwanie rejestru %1 z jednostki księgowej %2 zakończyło się niepowodzeniem.'@[REJ.KOD,REJ.ODD().OD])
            ?}
         ?}
      ?}
   || {? REJ.sel_size()
      || FUN.info('Rejestr %1 obsługuje inny operator.'@[REJ.KOD])
      ?}
   ?}
?}


\bgd_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Przed akcja grupowa usun rejestry (tabela REJ)
::  OLD: \bgd_rej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _ok:=FUN.ask('Usunąć zaznaczone rejestry?'@) || g_ok:=0; g_size:=REJ.sel_size() ?};
_ok


\agd_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Po akcji grupowej usun rejestry (tabela REJ)
::  OLD: \agd_rej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Usunięto rejestrów: %1 z %2.'@[$g_ok,$g_size]);
&g_ok; &g_size


\p_poprej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: REJ przed popraw
::  OLD: \p_poprej/param.fml
::----------------------------------------------------------------------------------------------------------------------
{? REJ.KOD='~BO' | REJ.KOD='~BZ' | (REJ.KOD='~NOTY_WY' | REJ.KOD='~NOTY_W2') & REJ.ROK().FIRMA().TYP='W'
|| FUN.info('Poprawianie rejestru %1 jest zabronione.'@[REJ.KOD]); 0
|| REJ.win_edit('RED');
   POMOC.AKC:='P';
   1
?}


\dok_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Rodzaje dokumentow dla rejestrow
::  OLD: \dok_rej/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
SLU.index('NAZ');  SLU.prefix();
{? ~SLU.find_key('~RODZAJE DOKUMENTÓW')
|| FUN.info('Nie znaleziono słownika systemowego ~RODZAJE DOKUMENTÓW.'@); return(0)
?};
DOK_REJ.win_sel('WER');
DOK_REJ.prefix(REJ.ref());
SLO.win_dict('ONE'); SLO.win_sel('ONE');
DOK_REJ.hdr_sel();
DOK_REJ.hdr_sel(': %1'@[REJ.KOD]);
DOK_REJ.select();
DOK_REJ.hdr_sel();
VAR_DEL.delete('AllRB')


\chk_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Sprawdzanie parametrów rejestru (REJ)
::  OLD: \chk_rej/param.fml
::----------------------------------------------------------------------------------------------------------------------
exec('chk_rej','rejestry',-menu_txt(,)='popraw')


\d_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Dołączanie rekordu do DOK_REJ
::  OLD: \d_dok/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.blank;
_result:=DOK_REJ.edit("exec('sprd_dok','!zws_par_fask')");
DOK_REJ.efld_opt('RED','enable=1',DOK_REJ,'SP_WYM');
_result


\sprd_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Walidacja rekordu w DOK_REJ przy dołączaniu
::  OLD: \sprd_dok/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_ret:=exec('chk_dok_rej','rejestry',0))=''
|| {? DOK_REJ.SLO().KOD='WEW' || DOK_REJ.JPK_FA_P:='T' ?};
   {? DOK_REJ.add(1)=0
   || FUN.info('Powtórzona nazwa dokumentu dla rejestru.'@);
      _ret:='NAZ'
   ?}
?};
_ret


\bl_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MAKO [2010]
:: OPIS: Wartosc poczatkowa dla pol typu _REJ
::  OLD: \bl_rej/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? -(6+menu_txt(,))<>'szukaj'
|| REJ.ref()
|| {? cur_tab()=POZOPER
   || {? POZOPER.REJDOM=''
      || null
      || REJ.index('KOD');
         REJ.prefix(exec('blrejrok','rejestry'),exec('blrejodd','rejestry'));
         {? REJ.find_key(POZOPER.REJDOM,POZOPER.REJDOM) || REJ.ref() || null ?}
      ?}
   || null
   ?}
?}


\po_naz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Po redakcji pola DOK_REJ.NAZ
::  OLD: \po_naz/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK_REJ.NAZ=''
|| DOK_REJ.NAZ:=DOK_REJ.SLO().TR
?};
1


\be_rd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Przed redakcja pola DOK_REJ.SLO
::   WY: 1/0 - dozwolona/niedozwolona edycja
::  OLD: \be_rd/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
{? -menu_txt(,)='dołącz'
|| _zwrot:=1
|| DOK_REJ.cntx_psh();
   _count:=DOK_REJ.count();
   {? _count=0
   || _zwrot:=1
   || P_AUTOKS.index('AUTO_REJ'); P_AUTOKS.prefix(null,SSTALE.AR,'P',DOK_REJ.ref);
      {? P_AUTOKS.size()=_count || _zwrot:=1 ?}
   ?};
   DOK_REJ.cntx_pop()
?};
_zwrot


\po_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Po redakcji pola DOK_REJ.SLO
::  OLD: \po_typ/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK_REJ.SLO=0
|| FUN.info('Niewypełnione pole.'@); _a:=0
|| {? form(DOK_REJ.NAZ)='' || DOK_REJ.NAZ:=DOK_REJ.SLO().TR ?};
   {? DOK_REJ.SLO().KOD<>'VAT' & SLO.KOD<>'SAD' & DOK_REJ.JPK_TYP='F'
   || DOK_REJ.JPK_TYP:='';
      exec('ae_jpk_typ','jpk')
   ?};
   {? DOK_REJ.SLO().KOD='WEW'
   || DOK_REJ.SP_PRZEL:='N'; DOK_REJ.JPK_FA_P:='T';
      DOK_REJ.efld_opt('RED','enable=1',DOK_REJ,'WEW')
   || DOK_REJ.efld_opt('RED','enable=0',DOK_REJ,'WEW')
   ?};
   {? 'VAT,SAD,WEW'*DOK_REJ.SLO().KOD=0
   || DOK_REJ.SP_WYM:=DOK_REJ.KOR_NAG:='N';
      DOK_REJ.efld_opt('RED','enable=0',DOK_REJ,'SP_WYM');
      DOK_REJ.efld_opt('RED','enable=0',DOK_REJ,'VPOZ_D');
      DOK_REJ.VPOZ_D:='N'; DOK_REJ.JPK_FA_P:='N';
      DOK_REJ.efld_opt('RED','enable=0',DOK_REJ,'KOR_NAG')
   || DOK_REJ.efld_opt('RED','enable=1',DOK_REJ,'SP_WYM');
      DOK_REJ.efld_opt('RED','enable=1',DOK_REJ,'VPOZ_D');
      DOK_REJ.REJ();
      {? exec('prz_knag','rejestry',0)
      || DOK_REJ.efld_opt('RED','enable=1',DOK_REJ,'KOR_NAG')
      || DOK_REJ.efld_opt('RED','enable=0',DOK_REJ,'KOR_NAG')
      ?}
   ?};
   exec('bv_dr_sp_przel','!zws_par_fask');
   {? var_pres('JPK_V_T',DOK_REJ)>0 & DOK_REJ.SLO().KOD<>'VAT' & SLO.KOD<>'SAD'
   || DOK_REJ.JPK_V_T:=''
   ?};
   win_disp();
   _a:=1
?};
_a


\be_zmpoch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Przed redakcja DOK_REJ.ZM_POCH
::  OLD: \be_zmpoch/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.POCH<>null


\czydokpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Wojciech Smieja [2011]
:: OPIS: W czasie edycji definicji dokumentu (DOK_REJ) sprawdza czy jest to dokument prosty
::   WY: 1 - dokument prosty, 0 - nie jest to dokument prosty
::  OLD: \czydokpr/dok_zrd4.fml
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.SLO().KOD='PROSTY'


\be_m_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja pola DOK_REJ.M_ODD
::  OLD: \be_m_odd/skid.fml
::----------------------------------------------------------------------------------------------------------------------
{? -menu_txt(,)='popraw'
|| DOKM_DOK.index('DOKM'); DOKM_DOK.prefix(DOK_REJ.ref());
   ~DOKM_DOK.first()
|| 1
?}


\rdok_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Przed wyświetl dla pola SLOSLU.POCH
::  OLD: \rdok_pw/sluappl.fml
::----------------------------------------------------------------------------------------------------------------------
SLOSLU.POCH:={? DOK_REJ.POCH || DOK_REJ.POCH().SLU().NAZ || '' ?}


\rdok_por
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formuła do obsługi pola SLOSLU.POCH
::   WE: _a - 1 - po redakcji pola
::            2 - na F3 dla pola
::  OLD: \rdok_por/sluappl.fml
::----------------------------------------------------------------------------------------------------------------------
_b:=0;
SLUAPPL.cntx_psh(); SLUAPPL.index('POM'); SLUAPPL.prefix('F','T');
{? _a=1
|| {? +SLOSLU.POCH
   || {? SLUAPPL.find_key(SLOSLU.POCH)
      || DOK_REJ.POCH:=SLUAPPL.ref(); _b:=1
      || FUN.info('Nie znaleziono słownika.'@); _b:=0
      ?}
   || DOK_REJ.POCH:=0; _b:=1
   ?}
|? _a=2
|| SLUAPPL.win_sel('WYB'); SLUAPPL.find_key(SLOSLU.POCH);
   {? SLUAPPL.select(,1)
   || SLOSLU.POCH:=SLUAPPL.SLU().NAZ;
      DOK_REJ.POCH:=SLUAPPL.ref()
   ?}
?};
SLUAPPL.cntx_pop();
_b


\rkrprz_dok_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Rekord przed DOK_REJ w okienku WER
::  OLD: \rkrprz_dok_rej/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
exec('bv_dr_sp_przel','!zws_par_fask');
_action:={? var_press('__bez_fk')>0 & __bez_fk & ~__Grupa || 'F' || '' ?};
{? DOK_REJ.M_ODD<>'T' || DOK_REJ.actions('WER','W'+_action,,1) || DOK_REJ.actions('WER',_action,,1) ?};
0


\ob_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.50]
:: OPIS: Przed okienkiem tabeli KOM.
::  OLD: \ob_kom/skid_edk.fml
::----------------------------------------------------------------------------------------------------------------------
KOM.index('ROK'); KOM.prefix(ROZNE.ROKKON); 1


\us_pdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Usun przed dla rekordu tabeli DOK_REJ.
::       Formula sprawdza czy jest w jakims dokumencie wskazanie na ten rekord.
::       Sprawdzane sa dokumenty dla wszystkich masek.
::  OLD: \us_pdok/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_znacznik:=1;  _ref:=DOK_REJ.ref(); _rej:=DOK_REJ.REJ;
ROK_F.cntx_psh(); SSTALE.AR();
OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref);
{? OKRO_F.first()
|| {! |?
      exec('open','fks_ved',ROK_F.KOD,OKRO_F.NR);
      DOK.cntx_psh();
      DOK.index('REJ'); DOK.prefix(_rej);
      {? DOK.first()
      || {! |?
            {? DOK.DOK_REJ=_ref || _znacznik:=0 ?};
            DOK.next() & _znacznik
         !}
      ?};
      DOK.cntx_pop();
      OKRO_F.next() & _znacznik
   !}
?};
exec('open','fks_ved',SSTALE.AR().KOD,SSTALE.AO().NR);
ROK_F.cntx_pop();
{? ~_znacznik
|| FUN.info('Rekord wykorzystywany w dokumentach.\nNie można go usunąć.'@)
?};
_znacznik & FUN.ask('Czy usunąć bieżący wiersz?'@)


\us_podok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Formula po akcji usun dla rekordow tabeli DOK_REJ
::  OLD: \us_podok/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
do();
P_AUTOKS.cntx_psh();
P_AUTOKS.index('AUTO_REJ'); P_AUTOKS.prefix(null,SSTALE.AR,'P',DOK_REJ.ref());
{? P_AUTOKS.first() || {! |? P_AUTOKS.del() !} ?};
P_AUTOKS.cntx_pop();
DOKM_DOK.index('DOKM'); DOKM_DOK.prefix(DOK_REJ.ref());
{? DOKM_DOK.first() || {! |? DOKM_DOK.del() !} ?};
{? DOK_REJ.count()>0
|| undo()
|| DOK_REJ.del()
?};
{? ~end() || FUN.info('Usunięcie niemożliwe.\nIstnieją rekordy powiązane'@) ?}


\p_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formuła popraw dla DOK_REJ
::  OLD: \p_dok/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dok_rej_mod','rejestry',0);
DOK_REJ.edit("exec('sprp_dok','!zws_par_fask')");
exec('dok_rej_mod','rejestry',1)


\sprp_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Walidacja rekordu w DOK_REJ przy poprawianiu
::  OLD: \sprp_dok/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_pow_akt:=DOK_REJ.POW;
{? (_ret:=exec('chk_dok_rej','rejestry',1))=''
|| DOK_REJ.POW:=_pow_akt;
   {? DOK_REJ.put(1)=0
   || FUN.info('Powtórzona nazwa dokumentu dla rejestru.'@);
      _ret:='NAZ'
   ?}
?};
_ret


\czy_fak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [RL] [8.40]
:: OPIS: Sprawdzenie, czy istnieja dokumenty powizane dla dokumentow biezacego rodzaju
::   WE: [_a] - wskazanie na firme w.p.p REF.FIRMA
::  OLD: \czy_fak/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
_ref:=DOK_REJ.ref();
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix({? _=0 || REF.FIRMA || _a ?});
OKRO_F.index('ROK');
{? ROK_F.first()
|| {! |?
      OKRO_F.prefix(ROK_F.ref);
      {? OKRO_F.first()
      || {! |?
            exec('open','fks_ved',ROK_F.KOD,OKRO_F.NR);
            FAK.prefix();
            {? FAK.first()
            || {! |?
                  {? FAK.DOK().DOK_REJ=_ref || _ok:=1 ?};
                  FAK.next() & _ok=0
               !}
            ?};
            OKRO_F.next() & _ok=0
         !}
      ?};
      ROK_F.next() & _ok=0
   !}
?};
ROK_F.cntx_pop();
exec('open','fks_ved',SSTALE.AR().KOD,SSTALE.AO().NR);
_ok


\chk_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [8.50]
:: OPIS: Sprawdza czy sa dokumenty dla rodzaju dokumentu
::   WY: 0 - nie ma; 1 - sa
::  OLD: \chk_pr/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_sql:=sql('select DOK.NK, DOK_REJ.NAZ from @DOK join DOK_REJ where DOK.DOK_REJ=:_a',DOK_REJ.ref());
_ret:=type_of(_sql)>0 & _sql.first();
_ret


\bcdokrej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Przed akcja kopiuj, tab DOK_REJ, okno WER
::  OLD: \bcdokrej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
_fun:="_naz:=DOK_REJ.NAZ; _r:=DOK_REJ.ref();
       DOK_REJ.cntx_psh(); REJ.seek(TMP_REJ.REJ,'rejestry');
       _rok:=REJ.ROK;
       DOK_REJ.index('NAZ'); DOK_REJ.prefix(REJ.ref());
       _ok:=~DOK_REJ.find_key(_naz) | DOK_REJ.NAZ<>_naz;
       DOK_REJ.cntx_pop();
       {? _ok
       || DOK_REJ.cntx_psh(); DOK_REJ.prefix(); DOK_REJ.REJ:=REJ.ref();
          {? DOK_REJ.DM='T'
          || DOK_REJ.cntx_psh();
             DOK_REJ.blank(1); DOK_REJ.REJ:=REJ.ref(); DOK_REJ.DM:='T';
             _jest_dm:=DOK_REJ.find_rec();
             DOK_REJ.cntx_pop();
             {? _jest_dm || DOK_REJ.DM:='N' ?}
          ?};
          {? var_pres('JPK_V_T',DOK_REJ) & DOK_REJ.JPK_V_T<>''
          || exec('be_dr_jvat','jpk_v');
             {? HELPJPK.SLO_TYP<>'TD'
             || HELPJPK.SLO_WER:=exec('bl_js_wersja','jpk_v');
                JPK_SLO.cntx_psh();
                JPK_SLO.index('KOD'); JPK_SLO.prefix(HELPJPK.SLO_WER,HELPJPK.SLO_TYP,);
                {? ~JPK_SLO.find_key(DOK_REJ.JPK_V_T,)
                || DOK_REJ.JPK_V_T:=''
                ?};
                JPK_SLO.cntx_pop()
             ?}
          ?};
          do();
          {? _ok:=DOK_REJ.add()
          || P_AUTOKS.cntx_psh();
             P_AUTOKS.index('AUTO_REJ'); P_AUTOKS.prefix(null,SSTALE.AR,'P',_r);
             _a:=P_AUTOKS.first();
             {! |? _a
             |! _aref:=null;
                {? P_AUTOKS.AUTOKSIE<>null
                || _pnaz:=P_AUTOKS.AUTOKSIE().NAZ;
                   AUTOKSIE.cntx_psh();
                   _aref:={? AUTOKSIE.find_key(_rok, _pnaz) & AUTOKSIE.NAZ=_pnaz
                          || AUTOKSIE.ref()
                          || exec('cop_aks','rejestry',_rok, P_AUTOKS.AUTOKSIE)
                          ?};
                   AUTOKSIE.cntx_pop()
                ?};
                {? _aref
                || P_AUTOKS.cntx_psh();
                   P_AUTOKS.prefix();
                   P_AUTOKS.AUTOKSIE:=_aref;
                   P_AUTOKS.DOK_REJ:=DOK_REJ.ref();
                   {? ~P_AUTOKS.add() || undo() ?};
                   P_AUTOKS.cntx_pop()
                ?};
                _a:=P_AUTOKS.next()
             !};
             P_AUTOKS.cntx_pop();
             exec('kop_dokm','!zws_par_fask',_r,DOK_REJ.ref())
          ?};
          _ok:=_ok*end();
          DOK_REJ.cntx_pop()
       ?};
       _ok";
AUTOKSIE.index('NAZ');
AUTOKSIE.prefix();
{? DOK_REJ.sel_size
|| _l:=exec('f_tmprej','dok_fks',_fun);
   FUN.info('Skopiowano dokument do rejestrów: %1 z %2.'@[$_l,$TMP_REJ.size()])
|| {? exec('c_tmprej','dok_fks') & TMP_REJ.first()
   || _l:=exec('f_tmprej','dok_fks',_fun);
      FUN.info('Skopiowano dokument do rejestrów: %1 z %2.'@[$_l,$TMP_REJ.size()])
   ?};
   exec('d_tmprej','dok_fks')
?}


\kop_dokm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Kopiuje wtorne rodzaje dokumentow
::   WE: _a - zrodlowy rodzaj dokumentu
::       _b - docelowy rodzaj dokumentu
::  OLD: \kop_dokm/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a<>null & _b<>null
|| DOK_REJ.cntx_psh();
   DOK_REJ.index('NAZ'); DOK_REJ.prefix();
   {? DOK_REJ.seek(_b)
   || REJ.cntx_psh(); REJ.index('KOD');
      _rok_doc:=DOK_REJ.REJ().ROK;
      DOKM_DOK.cntx_psh();
      DOKM_DOK.index('DOKM'); DOKM_DOK.prefix(_a);
      {? DOKM_DOK.first()
      || {! |?
            _kod:=DOKM_DOK.REJ().KOD; _odd:=REJ.ODD;
            REJ.prefix(_rok_doc,_odd,_kod,_kod);
            {? REJ.first()
            || DOKM_DOK.REJ:=REJ.ref();
               _naz:=DOKM_DOK.DOKW().NAZ;
               DOK_REJ.prefix(REJ.ref(),_naz);
               {? DOK_REJ.first() & DOK_REJ.NAZ=_naz
               || DOKM_DOK.DOKM:=_b;
                  DOKM_DOK.DOKW:=DOK_REJ.ref();
                  DOKM_DOK.cntx_psh(); DOKM_DOK.prefix();
                  DOKM_DOK.add(1);
                  DOKM_DOK.cntx_pop()
               ?}
            ?};
            DOKM_DOK.next()
         !}
      ?};
      DOKM_DOK.cntx_pop(); REJ.cntx_pop()
   ?};
   DOK_REJ.cntx_pop()
?}


\bgc_drej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Przed akcja grupowa kopiuj DOK_REJ okno WER
::  OLD: \bgc_drej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('c_tmprej','dok_fks') & TMP_REJ.size()


\agc_drej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Po akcji grupowej kopiuj DOK_REJ okno WER
::  OLD: \bgc_drej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('d_tmprej','dok_fks')


\ba_dokwt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Przed akcja Dokumenty wtorne w okienku wertowania WER tabeli DOK_REJ
::  OLD: \ba_dokwt/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.M_ODD='T'


\aa_dokwt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Po akcji Dokumenty wtorne w okienku wertowania WER tabeli DOK_REJ
::  OLD: \aa_dokwt/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
dokm_ref:=DOK_REJ.ref();
REJ.cntx_psh();
DOK_REJ.cntx_psh(); DOKM_DOK.index('DOKM'); DOKM_DOK.prefix(dokm_ref);
DOKM_DOK.win_sel('WER');
DOKM_DOK.select();
REJ.cntx_pop();
DOK_REJ.cntx_pop();
{? DOK_REJ.f_active() || DOK_REJ.f_clear() ?};
&dokm_ref


\ar_dokm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Rekord po w okienku wertowania WER tabeli DOK_REJ
::  OLD: \ar_dokm/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:='';
DOK_REJ.cntx_psh(); DOK_REJ.prefix(); DOK_REJ.seek(dokm_ref);
{? DOKM_DOK.ODD=null
|| FUN.info('Nie wybrano jednostki księgowej.'@); _ret:='ODD'
?};
{? _ret='' & DOKM_DOK.REJ=null
|| FUN.info('Nie wybrano rejestru.'@); _ret:='REJ'
?};
{? _ret='' & DOKM_DOK.ODD=DOK_REJ.REJ().ODD
|| FUN.info('Należy wybrać inną jednostkę księgową niż jednostka księgowa rejestru.'@); _ret:='ODD'
?};
{? _ret='' & DOKM_DOK.DOKW=null
|| FUN.info('Nie wybrano rodzaju dokumentu.'@); _ret:='DOKW'
?};
{? _ret=''
|| _ref:=DOKM_DOK.ref();
   DOKM_DOK.cntx_psh();
   DOKM_DOK.index('DOKM'); DOKM_DOK.prefix(DOKM_DOK.DOKM,DOKM_DOK.ODD);
   {? (-menu_txt(,)<>'popraw' & DOKM_DOK.first()) | (-menu_txt(,)='popraw' & DOKM_DOK.first() & _ref<>DOKM_DOK.ref())
   || FUN.info('Istnieje przypisanie definicji dokumentu wtórnego do jednostki %1'@[DOKM_DOK.ODD().OD]);
      _ret:='ODD'
   ?};
   DOKM_DOK.cntx_pop()
?};
DOK_REJ.cntx_pop();
_ret


\dok_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Rejestry VAT dla rodzaju dokumentu
::  OLD: \dok_vat/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
VAT_REJ.cntx_psh(); VAT_REJ.win_sel('WER');
VAT_REJ.index('REJ_VREF'); VAT_REJ.prefix(REJ.ref());
VAT_REJ.select();
VAT_REJ.cntx_pop()


\dol_vat_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula umozliwia dolaczenie nowych rejestrow VAT do wybranego rejstru
::       ksiegowego z dodatkowa opcja dolaczania kilku na raz rejestrow
::       (akcja grupowa dloczania nowych rejestow)
::  OLD: \dol_vat_rej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
PVATREJ:=0;
RVAT.cntx_psh();
_wer:=RVAT.mk_sel('Rejestry VAT'@,,,'rejestry_vat'@);
RVAT.win_fld(_wer,,'SYM',,,,,,,,'Symbol rejestru VAT'@);
RVAT.win_fld(_wer,,'NAZ',,,,,,,,'Nazwa rejestru VAT'@);
RVAT.win_act(_wer,0,'Formuła','Wybierz'@@,,,,
         "VAT_REJ.blank();
          VAT_REJ.RVAT:=RVAT.ref();
          VAT_REJ.SYM:=RVAT.SYM;
          {? ~VAT_REJ.add(1) || {? var_pres('bledy_s')=1 || bledy_s+=1 ?} ?};
          {? RVAT.sel_size()=0 || sel_exit() ?}
         ",1,1,
         "
         ssize_s:=bledy_s:=0;
         {? FUN.ask('Dołączyć zaznaczone rejestry VAT?'@)
         || sel_exit(); ssize_s:=RVAT.sel_size()
         ?}
         ",
         "
          FUN.info('Zaznaczonych: %1.\nDodano: %2.'@[$ssize_s,$(ssize_s-bledy_s)]);
          VAR_DEL.delete('ssize_s','bledy_s')
         ",'W');
RVAT.win_sel(_wer);
RVAT.select();
RVAT.cntx_pop();
&PVATREJ


\pvatrej1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Przed Popraw okna WER tabeli VAT_REJ
::  OLD: \pvatrej1/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
PVATREJ:=1


\amvatrej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Po Popraw okna WER tabeli VAT_REJ
::  OLD: \amvatrej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
&PVATREJ


\usun_vat_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula po usun rejestru vat
::  OLD: \usun_vat_rej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAT_REJ.count()
|| {? VAT_REJ.sel_size()=0 || FUN.info('Rejestr VAT %1 został użyty w dokumentach.'@[VAT_REJ.SYM]) ?};
   {? var_pres('bledy_s')=1 || bledy_s+=1 ?}
|| {? VAT_REJ.sel_size()>0 | FUN.ask('Usunąć rejestr VAT?'@)
   || VAT_REJ.del()
   ?}
?}


\bgrusu_vat_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula przed akcja grupowa usuwania rejestrow VAT przypisanych do rejestru ksiegowego
::  OLD: \bgrusu_vat_rej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć zaznaczone rejestry VAT?'@)
|| bledy_s:=0;
   ssize_s:=VAT_REJ.sel_size()
?}


\agrusu_vat_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula po akcji grupowej usuwania rejestrow VAT przypisanych do
::        rejestru ksiegowego
::  OLD: \agrusu_vat_rej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Zaznaczonych: %1.\nUsunięto: %2.'@[$ssize_s,$(ssize_s-bledy_s)]);
VAR_DEL.delete('ssize_s','bledy_s')


\bcvatrej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Przed akcja kopiuj, tab VAT_REJ, okno WER
::  OLD: \bcvatrej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
_fun:="_rv:=VAT_REJ.RVAT;
       VAT_REJ.cntx_psh();
       VAT_REJ.index('REJ_VREF'); REJ.seek(TMP_REJ.REJ,'rejestry'); VAT_REJ.prefix(REJ.ref());
       _ok:=~VAT_REJ.find_key(_rv);
       VAT_REJ.cntx_pop();
       {? _ok
       || VAT_REJ.cntx_psh();
          VAT_REJ.prefix();
          VAT_REJ.REJ:=REJ.ref();
          VAT_REJ.DM:='N';
          VAT_REJ.add();
          VAT_REJ.cntx_pop()
       ?};_ok";
{? VAT_REJ.sel_size
|| _l:=exec('f_tmprej','dok_fks',_fun);
   FUN.info('Skopiowano rejestr VAT do rejestrów: '+$_l+' z '+$TMP_REJ.size()+'.')
|| {? exec('c_tmprej','dok_fks') & TMP_REJ.first()
   || _l:=exec('f_tmprej','dok_fks',_fun);
      FUN.info('Skopiowano rejestr VAT do rejestrów: '+$_l+' z '+$TMP_REJ.size()+'.')
   ?};
   exec('d_tmprej','dok_fks')
?}


\rej_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Wartość początkowa pola VAT_REJ.REJ
::  OLD: \rej_bl/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? -(6+menu_txt(,))<>'szukaj' || REJ.ref || null ?}


\rvat_por
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Po redakcji pola VAT_REJ.RVAT
::  OLD: \rej_bl/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAT_REJ.RVAT
|| VAT_REJ.SYM:=VAT_REJ.RVAT().SYM
?};
1


\bl_dokm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Wartosc poczatkowa pola DOKM_DOK.DOKM
::  OLD: \bl_dokm/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('dokm_ref')=7
|| dokm_ref
|| DOK_REJ.ref()
?}


\ae_odd_dokm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Po redakcji pola DOKM_DOK.ODD
::  OLD: \ae_odd_dokm/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? DOKM_DOK.ODD=null
|| FUN.info('Nie wybrano jednostki księgowej.'@); _zwrot:=0
?};
{? _zwrot & var_pres('dokm_ref')>0
|| REJ.cntx_psh(); DOK_REJ.cntx_psh(); DOK_REJ.prefix();
   {? DOK_REJ.seek(dokm_ref) & DOK_REJ.REJ().ODD=DOKM_DOK.ODD
   || FUN.info('Należy wybrać inną jednostkę księgową niż jednostka księgowa rejestru.'@);  _zwrot:=0
   ?};
   REJ.cntx_pop(); DOK_REJ.cntx_pop()
?};
{? _zwrot
|| REJ.cntx_psh();
   {? DOKM_DOK.REJ & DOKM_DOK.ODD<>DOKM_DOK.REJ().ODD
   || DOKM_DOK.REJ:=0;
      DOKM_DOK.DOKW:=0
   ?};
   REJ.cntx_pop()
?};
_zwrot


\be_rej_dokm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Przed redakcja pola DOKM_DOK.REJ
::  OLD: \be_rej_dokm/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
REJ.clear();
REJ.win_dict('SLO1');
REJ.f_set('KOD',,'ROK=\':_a\' and ODD=\':_b\' and CZY_DZ=\'N\'', $SSTALE.AR, $DOKM_DOK.ODD)


\ae_rej_dokm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Po redakcji pola DOKM_DOK.REJ
::  OLD: \ae_rej_dokm/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
REJ.f_clear();
{? DOKM_DOK.DOKW & DOKM_DOK.REJ <> DOKM_DOK.DOKW().REJ
|| DOKM_DOK.DOKW:=0
?};
1


\be_dokw_dokm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Przed redakcja pola DOKM_DOK.DOKW
::  OLD: \be_dokw_dokm/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.clear();
DOK_REJ.f_set('NAZ','join SLO using(DOK_REJ.SLO, SLO.REFERENCE)','SLO.KOD=\'PROSTY\' and M_ODD<>\'T\' and REJ=\':_a\'',$DOKM_DOK.REJ)


\ae_dokw_dokm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGR [2011]
:: OPIS: Po redakcji pola DOKM_DOK.DOKW
::  OLD: \ae_dokw_dokm/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.f_clear()


\dokgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Grupy podatkowe dla rejestru księgowego
::  OLD: \dokgr/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
SLU.cntx_psh; SLU.index('NAZ'); SLU.prefix();
{? SLU.find_key('~GRUPY PODATKOWE')
|| GR_VAT.cntx_psh(); GR_VAT.index('REJ_GR'); GR_VAT.prefix(REJ.ref());
   GR_VAT.win_sel('WER'); GR_VAT.select();
   GR_VAT.cntx_pop()
|| FUN.info('Nie znaleziono słownika "~GRUPY PODATKOWE"'@)
?};
SLU.cntx_pop()


\dol_gr_podat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula umozliwia dolaczenie nowych grup podatkowych do wybranego rejstru
::       ksiegowego z dodatkowa opcja dolaczania kilku na raz grup podatkowych
::       (akcja grupowa dloczania nowych grup podatkowych)
::  OLD: \dol_gr_podat/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
PVATREJ:=0;
SLO.cntx_psh();
_wer:=SLO.mk_sel('GRUPY PODATKOWE'@,,,'grupy_podat');
SLO.win_fld(_wer,,'KOD',,,,,,,,'Kod'@);
SLO.win_fld(_wer,,'TR',,,,,,,,'Treść'@);
SLO.win_act(_wer,0,'Formuła','Wybierz'@@,,,,
         "
          GR_VAT.blank();
          GR_VAT.GRVAT:=SLO.ref();
          GR_VAT.KOD:=SLO.KOD;
          {? ~GR_VAT.add(1) || {? var_pres('bledy_s')=1 || bledy_s+=1 ?} ?};
          {? SLO.sel_size()=0 || sel_exit() ?}
         ",1,1,
         "
         ssize_s:=bledy_s:=0;
         {? FUN.ask('Dołączyć zaznaczone grupy podatkowe?'@)
         || sel_exit(); ssize_s:=SLO.sel_size()
         ?}
         ",
         "
          FUN.info('Zaznaczonych: %1.\nDodano: %2.'@[$ssize_s,$(ssize_s-bledy_s)]);
          VAR_DEL.delete('ssize_s','bledy_s')
         ",'W');
SLO.win_sel(_wer);
SLO.index('SL');
SLU.index('NAZ'); SLU.prefix();
{? SLU.find_key('~GRUPY PODATKOWE')
|| SLO.prefix(SLU.ref);
   SLO.select()
|| FUN.info('Nie znaleziono słownika: ~GRUPY PODATKOWE.'@)
?};
SLO.cntx_pop();
&PVATREJ


\bcgrvrej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Przed akcja kopiuj, tab GR_REJ, okno WER
::  OLD: \bcgrvrej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
_fun:="_kod:=GR_VAT.KOD;
       GR_VAT.cntx_psh();
       GR_VAT.index('REJ_KOD'); REJ.seek(TMP_REJ.REJ,'rejestry'); GR_VAT.prefix(REJ.ref());
       _ok:=~GR_VAT.find_key(_kod);
       GR_VAT.cntx_pop();
       {? _ok
       || GR_VAT.cntx_psh();
          GR_VAT.prefix();
          GR_VAT.REJ:=REJ.ref();
          GR_VAT.add();
          GR_VAT.cntx_pop()
       ?};_ok";
{? GR_VAT.sel_size
|| _l:=exec('f_tmprej','dok_fks',_fun);
   FUN.info('Skopiowano grupę VAT do rejestrów: %1 z %2.'@[$_l,$TMP_REJ.size()])
|| {? exec('c_tmprej','dok_fks') & TMP_REJ.first()
   || _l:=exec('f_tmprej','dok_fks',_fun);
      FUN.info('Skopiowano grupę VAT do rejestrów: %1 z %2.'@[$_l,$TMP_REJ.size()])
   ?};
   exec('d_tmprej','dok_fks')
?}


\skid_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Wartosc poczatkowa pola o typie REJ
::  OLD: \skid_rej/skid.fml
::----------------------------------------------------------------------------------------------------------------------
REJ.ref()


\pogrvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Po redakcji pola GR_VAT.GRVAT
::  OLD: \pogrvat/dol_dok.fml
::----------------------------------------------------------------------------------------------------------------------
{? GR_VAT.GRVAT
|| GR_VAT.KOD:=GR_VAT.GRVAT().KOD
?};
1

\rej_view_dnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KS [2021]
:: OPIS: Przed akcją - Do widoku rejestru (okno DEF_ODD,tabela REJ)
:: Zastępuje drag and drop w Interm
::----------------------------------------------------------------------------------------------------------------------

_ref:=null;
_desc:=REJ_VIEW.ref();
_xxxxx := REJ.ref();
REJ_VIEW.cntx_psh();
REJ_VIEW.prefix();
   {? REJ_VIEW.seek(_desc)
   ||
      {? REJ_VIEW.TYP='S'
      || REJ_VIEW.index('REJ'); REJ_VIEW.prefix();
         REJ.cntx_psh();
         {? REJ.seek(_xxxxx,) & ~REJ_VIEW.find_key(REJ.ref())
         || REJ_VIEW.blank(1);
            REJ_VIEW.ROK:=SSTALE.AR;
            REJ_VIEW.TREEREF:=#_desc;
            REJ_VIEW.TYP:='R';
            REJ_VIEW.KOD:=REJ.KOD;
            REJ_VIEW.NAZ:=REJ.NAZ;
            REJ_VIEW.REJ:=REJ.ref();
            _ref:={? REJ_VIEW.add() || REJ_VIEW.ref() ?}
          ?};
         REJ.cntx_pop()
      || FUN.info('Nie można dodać rejestrów na tym poziomie.'@)
      ?}
   || FUN.info('Nie znaleziono elemntu docelowego.'@)
   ?};
REJ_VIEW.cntx_pop()



\rej_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Wyswietla definicje widoku rejestrow
::   WE: [_a] - czy wyswietlac okno? [1] - tak 0-nie
::  OLD: \rej_view/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=1 ?};
REJ_VIEW.index('DRZEWO'); REJ_VIEW.prefix(ROK_F.ref());
{? var_pres('REJVIEW')<=0
|| REJVIEW:=REJ_VIEW.mk_sel('Widok rejestrów '@,'P',0,'#rej_view',,,,1);
   REJ_VIEW.win_fld(REJVIEW,,'KOD',,,20,,1,,);
   REJ_VIEW.win_fld(REJVIEW,,'NAZ',,,40,,1,,);
   REJ_VIEW.win_act(REJVIEW,0,'Formuła','Zwiń/rozwiń &całość'@@,,'Zwija/rozwija wszystkie gałęzie'@,"
      {! |? REJ_VIEW.seek(REJ_VIEW.TREEREF,) & REJ_VIEW.TREEREF !};
      REJ_VIEW.tr_set(~REJ_VIEW.tr_state(),REJ_VIEW.win_sel('?'),0,0)
   ",,,,,,'C');
   REJ_VIEW.win_act(REJVIEW,0,'Formuła','Dołącz'@@,,'Dołączenie nowego elementu'@,"","exec('am_rej_view','!zws_par_fask')",1,,,,'D');
   REJ_VIEW.win_act(REJVIEW,0,'Formuła','Popraw'@@,,'Poprawianie elementu'@,"","exec('am_rej_view','!zws_par_fask')",,,,,'P');
   REJ_VIEW.win_act(REJVIEW,0,'Formuła','Usuń'@@,,'Usunięcie elementu i jego powiązań'@,"","exec('del_rej_view','!zws_par_fask')",,,,,'U');
   REJ_VIEW.win_act(REJVIEW,0,'Formuła','Pr&zypisz'@@,,'Przypisanie rejestrów do elementu'@,"","exec('link_rej_view','!zws_par_fask',1)",,,,,'Z');
   REJ_VIEW.win_act(REJVIEW,0,'Formuła','Kopiuj'@@,,'Kopia całego widoku rejestów do innego roku'@,"","exec('copy_rej_view','!zws_par_fask')",,,,,'K');
   REJ_VIEW.win_act(REJVIEW,0,'Wyświetl',,,,"REJ_VIEW.win_edit('DISP'); REJ_VIEW.display()");
   REJ_VIEW.win_fml(REJVIEW,,'KOD',,'ICON_BEFORE',"
      {? REJ_VIEW.TYP='R'
      || 'xwin16.png:76'
      || {? REJ_VIEW.tr_state() || 'xwin16.png:75' || 'xwin16.png:74' ?}
      ?}
   ");
   _dnd_fml:="
      _ref:=null;
      _desc:=dnd_info('dest_record');
      REJ_VIEW.cntx_psh();
      REJ_VIEW.prefix();
      {? REJ_VIEW.seek(_desc)
      || {? REJ_VIEW.TYP='S'
         || REJ_VIEW.index('REJ'); REJ_VIEW.prefix();
            _tab:=dnd_info('dropped_records');
            REJ.cntx_psh();
            {? _tab.first()
            || {!
               |? {? REJ.seek(_tab.REF,) & ~REJ_VIEW.find_key(REJ.ref())
                  || REJ_VIEW.blank(1);
                     REJ_VIEW.ROK:=SSTALE.AR;
                     REJ_VIEW.TREEREF:=#_desc;
                     REJ_VIEW.TYP:='R';
                     REJ_VIEW.KOD:=REJ.KOD;
                     REJ_VIEW.NAZ:=REJ.NAZ;
                     REJ_VIEW.REJ:=REJ.ref();
                     _ref:={? REJ_VIEW.add() || REJ_VIEW.ref() ?}
                  ?};
                  _tab.next()
               !}
            ?};
            REJ.cntx_pop()
         || FUN.info('Nie można dodać rejestrów na tym poziomie.'@)
         ?}
      || FUN.info('Nie znaleziono elemntu docelowego.'@)
      ?};
      REJ_VIEW.cntx_pop();
      {? _ref || REJ_VIEW.seek(_ref) ?}
   ";
   REJ_VIEW.dnd_sel(REJVIEW,,'records.REJ',_dnd_fml);
   REJ_VIEW.win_btn(REJVIEW,'text=%1,panel=right,align=begin'['&Dołącz'@],'menu:D');
   REJ_VIEW.win_btn(REJVIEW,'text=%1,panel=right,align=begin'['&Popraw'@],'menu:P');
   REJ_VIEW.win_btn(REJVIEW,'text=%1,panel=right,align=begin'['&Usuń'@],'menu:U')
?};
REJ_VIEW.win_sel(REJVIEW);
REJ_VIEW.hdr_sel(); REJ_VIEW.hdr_sel(ROK_F.NAZ);
{? OPERATOR.DEPT
|| REJ_VIEW.cntx_psh(); REJ_VIEW.prefix(ROK_F.ref(),0,OPERATOR.DEPT().OD,ODD.N);
   {? REJ_VIEW.first()
   || REJ_VIEW.tr_root(REJVIEW,1,0,#REJ_VIEW.ref())
   ?};
   REJ_VIEW.cntx_pop()
|| REJ_VIEW.tr_root(REJVIEW,1,0)
?};
{? _a
|| REJ.cntx_psh();
   REJ_VIEW.select();
   REJ.cntx_pop();
   VAR_DEL.delete('TTREJVIEW')
?}


\am_rej_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Modyfikacja widoku rejestrow
::  OLD: \am_rej_view/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
_pop:=-menu_txt(,)='popraw';
{? _pop
|| {? REJ_VIEW.TYP='J' || FUN.info('Nie można modyfikować jednostki księgowej.'@); return(0) ?}
|| {? REJ_VIEW.TYP='R' || FUN.info('Nie można dodawać elementów\ndo poziomu, który jest rejestrem.'@); return(0) ?}
?};
{? _pop
|| UNPAR.P41:=REJ_VIEW.REJ().KOD
|| REJ_VIEW.blank();
   REJ_VIEW.TYP:='S';
   UNPAR.P41:='';
   REJ_VIEW.ROK:=ROK_F.ref();
   REJ_VIEW.TREEREF:=#REJ_VIEW.ref()
?};
REJ_VIEW.cntx_psh();
{! |? REJ_VIEW.seek(REJ_VIEW.TREEREF,) & REJ_VIEW.TYP<>'J' !};
UNPAR.PODD:=REJ_VIEW.ODD;
REJ_VIEW.cntx_pop();
POMOC.AKC:='P';
REJ.cntx_psh();
REJ.win_dict('SLO1');
REJ_VIEW.win_edit('RED');
UNPAR.P41_BV:='';
UNPAR.P41_BE:='exec(\'be_rej_v\',\'!zws_par_fask\')';
UNPAR.P41_F3:='exec(\'f3_rej_v\',\'!zws_par_fask\')';
UNPAR.P41_AE:='exec(\'ae_rej_v\',\'!zws_par_fask\')';
{? REJ_VIEW.edit("exec('ar_rej_view','!zws_par_fask')")
|| REJ_VIEW.cntx_psh(); REJ_VIEW.prefix();
   {? _pop || REJ_VIEW.put() || REJ_VIEW.add() ?};
   REJ_VIEW.cntx_pop()
?};
REJ.cntx_pop()


\be_rej_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Przed redakcja pol tabeli REJ_VIEW
::  OLD: \be_rej_v/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_afld()='TYP'
|| {? -menu_txt(,)<>'popraw'
   || REJ_VIEW.cntx_psh(); REJ_VIEW.get(); _ok:=REJ_VIEW.TYP<>'J'; REJ_VIEW.cntx_pop(); _ok
   || REJ_VIEW.cntx_psh(); REJ_VIEW.prefix(ROK_F.ref(),#REJ_VIEW.ref());
      _ok:=~REJ_VIEW.first();
      REJ_VIEW.cntx_pop();
      _ok
   ?}
|? cur_afld()='P41'
|| {? REJ_VIEW.TYP='R'
   || exec('win_rej_view','!zws_par_fask',0);
      1
   ?}
|| REJ_VIEW.TYP='S'
?}


\f3_rej_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Klawisz F3 dla pola UNPAR.P41
::  OLD: \f3_rej_v/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~TTREJVIEW.find_key(UNPAR.P41) || TTREJVIEW.first() ?};
{? TTREJVIEW.select(,1)
|| fld(TTREJVIEW.KOD)
?}


\ae_rej_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Po redakcja pol tabeli REJ_VIEW
::  OLD: \ae_rej_v/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_afld()='TYP'
|| {? REJ_VIEW.TYP='S'
   || {? REJ_VIEW.REJ || REJ_VIEW.REJ:=null; UNPAR.P41:=''; REJ_VIEW.KOD:=REJ_VIEW.NAZ:='' ?}
   || {? ~REJ_VIEW.REJ || REJ_VIEW.KOD:=REJ_VIEW.NAZ:='' ?}
   ?};
   1
|? UNPAR.P41<>''
|| REJ_VIEW.cntx_psh(); REJ_VIEW.index('REJ'); REJ_VIEW.prefix();
   {! |? REJ_VIEW.seek(REJ_VIEW.TREEREF,) & REJ_VIEW.TYP<>'J' !};
   REJ.cntx_psh(); REJ.index('KOD'); REJ.prefix(ROK_F.ref(),REJ_VIEW.ODD);
   REJ_VIEW.cntx_pop();
   {? ~REJ.find_key(UNPAR.P41)
   || FUN.info('Nie znaleziono rejestru %1.'@[UNPAR.P41]); _ok:=0
   |? TTREJVIEW.find_key(UNPAR.P41) & REJ.seek(TTREJVIEW.REJ,)
   || fld(REJ.KOD);
      REJ_VIEW.KOD:=REJ.KOD;
      REJ_VIEW.NAZ:=REJ.NAZ;
      REJ_VIEW.REJ:=REJ.ref();
      _ok:=1
   || FUN.info('Rejestr %1 znajduje się już w widoku.'@[REJ.KOD]);
      _ok:=0
   ?};
   REJ.cntx_pop();
   _ok
|| 1
?}


\del_rej_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Usuwanie widoku rejestru
::  OLD: \del_rej_view/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? REJ_VIEW.TYP='J' || FUN.info('Nie można usunąć jednostki księgowej.'@); return(0) ?};
REJ_VIEW.cntx_psh();
REJ_VIEW.prefix(ROK_F.ref(),REJ_VIEW.ref()); _is:=REJ_VIEW.first();
REJ_VIEW.cntx_pop();
_rv_del:="
   REJ_VIEW.cntx_psh(); REJ_VIEW.prefix(ROK_F.ref(),REJ_VIEW.TREEREF);
   _ref:={? REJ_VIEW.next() | REJ_VIEW.prev() || #REJ_VIEW.ref() || 0 ?};
   {? _ref=0 || _ref:=REJ_VIEW.TREEREF ?};
   REJ_VIEW.cntx_pop();
   {? REJ_VIEW.del(,1) || REJ_VIEW.seek(_ref,) ?}
";
{? _is
|| {? FUN.ask('Usunąć element z całą strukturą?'@)
   || fun:="
        REJ_VIEW.cntx_psh();
         REJ_VIEW.index('DRZEWO'); REJ_VIEW.prefix(ROK_F.ref(),#REJ_VIEW.ref());
         {? REJ_VIEW.first()
         || {!
            |? fun();
               REJ_VIEW.del()
            !}
         ?};
         REJ_VIEW.cntx_pop()
      ";
      fun();
      &fun;
      _rv_del()
   ?}
|| {? FUN.ask('Usunąć element?'@)
   || _rv_del()
   ?}
?}


\link_rej_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Akcja przypisz - przypisuje rejestry do widoku
::  OLD: \link_rej_view/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? REJ_VIEW.TYP<>'S'
|| FUN.info('Nie można przypisać rejestru \ndo poziomu %1.'@[{? REJ_VIEW.TYP='J' || 'z jednostką księgową' || 'z rejestrem' ?}]);
   return(0)
?};
exec('win_rej_view','!zws_par_fask',1);
TTREJVIEW.select()


\copy_rej_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Akcja kopia
::   WE: [_a] - rok bazowy
::       [_b] - rok docelowy
::       [_c] - czy przypinac rejestry?
::       gdy bez parametrow z dialogiem
::  OLD: \copy_rej_view/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _<>0 | FUN.ask('Czy skopiować widok do innego roku?'@)
|| ROK_F.cntx_psh(); rok:={? _<>0 || _a || ROK_F.ref() ?};
   UNPAR.P41_BV:=UNPAR.P41_BE:=UNPAR.P41_AE:='';
   UNPAR.P41:='T';
   REJ_VIEW.win_edit('KOPIA');
   {? _<>0 | REJ_VIEW.edit("
         {? REJ_VIEW.ROK=null
         || FUN.info('Nie wybrano roku.'@); 0
         |? REJ_VIEW.ROK=rok
         || FUN.info('Wybrano rok bieżącego widoku.'@); 0
         || 1
         ?}
      ")
   || {? _=0
      || _n_rok:=REJ_VIEW.ROK;
         _z_rej:=UNPAR.P41='T'
      || _n_rok:=_b;
         _z_rej:=_c
      ?};
      REJ_VIEW.cntx_psh(); REJ_VIEW.index('DRZEWO'); REJ_VIEW.prefix(rok,0);
      {? REJ_VIEW.first()
      || {!
         |? REJ_VIEW.cntx_psh(); REJ_VIEW.prefix(_n_rok,0,REJ_VIEW.ODD().OD,ODD.N);
            REJ_VIEW.first(); _n_ref:=REJ_VIEW.ref();
            REJ_VIEW.cntx_pop();
            exec('copy_rv','!zws_par_fask',_n_rok,_n_ref,_z_rej);
            REJ_VIEW.next()
         !}
      ?};
      REJ_VIEW.cntx_pop()
   ?};
   ROK_F.cntx_pop();
   &rok
?}


\copy_rv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Pomocnicza do kopiowanie widokow rejestrow
::   WE: _a - ref roku docelowego
::       _b - ref elementu widoku do ktorego beda podpinane kopiowane galezie
::       _c - czy przypinac rejestry?
::  OLD: \copy_rv/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
REJ_VIEW.cntx_psh(); REJ_VIEW.index('DRZEWO'); REJ_VIEW.prefix(REJ_VIEW.ROK,#REJ_VIEW.ref());
{? REJ_VIEW.first()
|| {!
   |? {? REJ_VIEW.TYP<>'R' | _c
      || REJ_VIEW.cntx_psh(); REJ_VIEW.prefix();
         {? REJ_VIEW.TYP='R'
         || REJ.cntx_psh(); REJ.index('KOD'); REJ.prefix(); REJ_VIEW.REJ();
            _rej:={? REJ.find_key(_a,REJ.ODD,REJ.KOD,REJ.KOD) || REJ.ref() || null ?};
            REJ.cntx_pop();
            {? _rej
            || REJ_VIEW.cntx_psh(); REJ_VIEW.index('REJ'); REJ_VIEW.prefix(_rej);
               {? REJ_VIEW.first() || _rej:=null ?};
               REJ_VIEW.cntx_pop();
               REJ_VIEW.REJ:=_rej
            ?}
         ?};
         REJ_VIEW.ROK:=_a;
         REJ_VIEW.TREEREF:=_b;
         _n_ref:={? REJ_VIEW.find_rec()
                 || #REJ_VIEW.ref()
                 || {? REJ_VIEW.TYP<>'R' | _rej
                    || REJ_VIEW.add(); #REJ_VIEW.ref()
                    || 0
                    ?}
                 ?};
         REJ_VIEW.cntx_pop();
         {? _n_ref || exec('copy_rv','!zws_par_fask',_a,_n_ref,_c) ?}
      ?};
      REJ_VIEW.next()
   !}
?};
REJ_VIEW.cntx_pop()


\ar_rej_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Rekord po tabeli REJ_VIEW
::  OLD: \ar_rej_view/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:='';
{? REJ_VIEW.TYP='R'
|| {? REJ_VIEW.REJ=null
   || FUN.info('Nie podano rejestru.'@);
      _ok:='P41'
   || _ref:=REJ_VIEW.ref();
      REJ_VIEW.cntx_psh();
      REJ_VIEW.index('REJ'); REJ_VIEW.prefix(REJ_VIEW.REJ);
      {? REJ_VIEW.first() & (-menu_txt(,)<>'popraw' | _ref<>REJ_VIEW.ref())
      || FUN.info('Istnieje już rejestr %1 w widoku.'@[REJ_VIEW.REJ().KOD]);
         _ok:='P41'
      ?};
      REJ_VIEW.cntx_pop()
   ?}
|? REJ_VIEW.TYP='S'
|| {? REJ_VIEW.KOD=''
   || FUN.info('Nie podano kodu elementu.'@); _ok:='KOD'
   |? REJ_VIEW.NAZ=''
   || FUN.info('Nie podano nazwy elementu.'@); _ok:='NAZ'
   || REJ_VIEW.cntx_psh(); _naz:=REJ_VIEW.NAZ; _ref:=REJ_VIEW.ref();
      REJ_VIEW.index('DRZEWO'); REJ_VIEW.prefix(ROK_F.ref(),REJ_VIEW.TREEREF,REJ_VIEW.KOD,REJ_VIEW.NAZ);
      {? REJ_VIEW.first() & REJ_VIEW.NAZ=_naz & (-menu_txt(,)<>'popraw' | _ref<>REJ_VIEW.ref())
      || FUN.info('Istnieje już element o podanym kodzie i nazwie.'@);
         _ok:='KOD'
      ?};
      REJ_VIEW.cntx_pop()
   ?}
?};
_ok


\win_rej_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Tworzy tabele i okienko z rejestrami
::   WE: _a - 1-okno dla akcji przypisz 0-okno jako slownik rejestrow
::  OLD: \win_rej_view/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TTREJVIEW');
TTREJVIEW:=tab_tmp(2,
   'KOD','STRING[8]',,
   'NAZ','STRING[60]',,
   'REJ','INTEGER',
);
_o:=TTREJVIEW.mk_sel('Rejestry'@,'P',0,'#rejrview');
TTREJVIEW.win_fld(_o,,'KOD',,,8,,1,'Kod'@,);
TTREJVIEW.win_fld(_o,,'NAZ',,,40,,1,'Nazwa'@,);
{? _a
|| TTREJVIEW.win_act(_o,0,'Formuła','Wybierz'@@,,'Popraw plan'@,"
      REJ_VIEW.cntx_psh(); REJ.cntx_psh(); REJ.prefix(); REJ.seek(TTREJVIEW.REJ,);
      REJ_VIEW.blank();
      REJ_VIEW.ROK:=ROK_F.ref();
      REJ_VIEW.TREEREF:={? TTREJVIEW.sel_size() || __RV_TOP || sel_exit(); #REJ_VIEW.ref() ?};
      REJ_VIEW.TYP:='R';
      REJ_VIEW.KOD:=REJ.KOD;
      REJ_VIEW.NAZ:=REJ.NAZ;
      REJ_VIEW.REJ:=REJ.ref();
      REJ_VIEW.add();
      REJ.cntx_pop(); REJ_VIEW.cntx_pop()
   ",,1,1,"__RV_TOP:=#REJ_VIEW.ref(); 1","&__RV_TOP;sel_exit()",'W')
|| TTREJVIEW.win_act(_o,0,'Formuła','Wybierz'@@,,'Popraw plan'@,"sel_exit()",,1,,,,'W')
?};
TTREJVIEW.win_act(_o,0,'Wyświetl',,,,"
   REJ.cntx_psh(); REJ.prefix(); REJ.seek(TTREJVIEW.REJ,);
   REJ.win_edit('RED');
   REJ.display();
   REJ.cntx_pop()
",,1);
TTREJVIEW.win_sel(_o);
_rej:=REJ_VIEW.REJ;
REJ_VIEW.cntx_psh(); REJ_VIEW.index('REJ'); REJ_VIEW.prefix();
{! |? REJ_VIEW.seek(REJ_VIEW.TREEREF,) & REJ_VIEW.TYP<>'J' !};
REJ.cntx_psh(); REJ.index('KOD'); REJ.prefix(ROK_F.ref(),REJ_VIEW.ODD);
{? REJ.first()
|| {!
   |? {? REJ.KOD<>'~BO' & REJ.KOD<>'~BZ' & (~REJ_VIEW.find_key(REJ.ref()) | -menu_txt(,)='popraw' & REJ.ref()=_rej)
      || TTREJVIEW.KOD:=REJ.KOD;
         TTREJVIEW.NAZ:=REJ.NAZ;
         TTREJVIEW.REJ:=#REJ.ref();
         TTREJVIEW.add()
      ?};
      REJ.next()
   !}
?};
REJ.cntx_pop();
REJ_VIEW.cntx_pop()


\pw_rodd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Przed wyswietl dla REJESTR.ODD
::  OLD: \pw_rodd/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.AKC<>'X'
|| {? cur_tab=POZ || REJESTR.ODD:=POZ.DOK().ODD
   |? cur_tab=ZAP_OP || REJESTR.ODD:=ZAP_OP.REJ().ODD
   || 1
   ?}
|| REJESTR.ODD:=null
?}


\ae_rejro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Po redakcji zmiennej REJESTR.ROK i REJESTR.ODD
::  OLD: \ae_rejro/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.AKC='X' || 1 || chk_fld() ?}


\bc_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Przed akcja kopiuj, tab REJ, okno DEF, DEF_ODD
::  OLD: \ae_rejro/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
{? REJ.KOD='~BO' | REJ.KOD='~BZ'
|| {? ~REJ.sel_size() || FUN.info('Kopiowanie rejestru %1 jest zabronione.'@[REJ.KOD]) ?}; 0
|| POMOC.AKC:='C';
   ROK_F.win_sel('WER');
   1
?}


\bgc_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Formula przed akcja grupowa kopiuj dla tabeli REJ
::  OLD: \bgc_rej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.AKC:='C';
_o:=REJESTR.win_edit('?');
_r:=ROK_F.win_sel('?');
ROK_F.win_sel('WER');
REJESTR.win_edit('ROK_ODD');
REJESTR.ROK:=SSTALE.AR;
{? OPERATOR.DEPT || REJESTR.ODD:=OPERATOR.DEPT ?};
{? _ok:=REJESTR.edit()
|| g_size:=REJ.sel_size();
   g_ok:=0
?};
REJESTR.win_edit(_o);
ROK_F.win_sel(_r);
_ok


\agc_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [8.60]
:: OPIS: Formula po akcji grupowej kopiuj dla tabeli REJ
::  OLD: \agc_rej/rejestr.fml
::----------------------------------------------------------------------------------------------------------------------
REJ.ROK();
FUN.info('Skopiowano rejestrów: %1 z %2.'@[$g_ok,$g_size]);
&g_size; &g_ok


\kop_rej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Kopiowanie rejestrów (REJ)
::  OLD: \kop_rej/param.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.AKC:='C';
REJ.cntx_psh();
ROK_F.cntx_psh();
REJ.win_edit('RED_R'+{? OPERATOR.DEPT || 'OK' || 'ODD' ?});
REJ.index('KOD'); REJ.prefix();
GR_VAT.prefix();
VAT_REJ.prefix();
_ref:=REJ.ref();
_rok:=REJ.ROK;
_odd:=REJ.ODD;
_naz:=REJ.NAZ;
_wal:=REJ.WAL;
_nrej:=null;
_listusr:='';
_listoddr:='';
kod:=REJ.KOD;
{? REJ.sel_size()
|| _ok:=1;
   REJ.ROK:=REJESTR.ROK;
   {? REJESTR.ODD || REJ.ODD:=REJESTR.ODD ?};
   exec('get_kod','!zws_par_fask')
|| _b:=1; _c:=kod;
   _a:=6+_c+form(_b,-2);
   {! |? REJ.find_key(_rok,_odd,_a) & _b
   |! {? REJ.KOD=_a
      || _b+=1; _a:=6+_c+form(_b,-2)
      || _b:=0
      ?}
   !};
   REJ.KOD:=_a;  REJ.NAZ:=_naz;  REJ.WAL:=_wal;
   _ok:=REJ.edit("{? REJ.find_key(REJ.ROK,REJ.ODD,REJ.KOD,REJ.KOD)
                  || FUN.info('Rejestr '+REJ.KOD+' istnieje w roku '+REJ.ROK().NAZ+
                              '\nw jednostce księgowej '+REJ.ODD().OD+'.'); 'KOD'
                  || 1
                  ?}")
?};
{? _ok
|| do();
   {? ~REJ.add()
   || undo()
   || _nrej:=REJ.ref()
   ?};
   _nrok:=REJ.ROK;
   {? ~exec('cop_paks','rejestry', _ref, REJ.ref()) || undo() ?};
   DOK_REJ.index('NAZ');
   DOK_REJ.prefix(_ref);
   _a:=DOK_REJ.first();
   {!
   |? _a
   |! DOK_REJ.cntx_psh();
      _or:=DOK_REJ.ref();
      DOK_REJ.REJ:=REJ.ref();
      {? DOK_REJ.AV<>null
      || _rav:=exec('cop_av','rejestry',_nrok,DOK_REJ.AV);
         {? _rav=null || undo() ?};
         DOK_REJ.AV:=_rav
      ?};
      DOK_REJ.prefix();
      {? ~DOK_REJ.add()
      || undo()
      || _r:=DOK_REJ.ref();
         exec('kop_dokm','!zws_par_fask',_or,_r);
         {? ~exec('cop_paks','rejestry',_or, _r) || undo() ?}
      ?};
      DOK_REJ.cntx_pop();
      _a:=DOK_REJ.next()
   !};
   _a:=GR_VAT.first();
   {! |?  _a
   |! {? GR_VAT.REJ=_ref
      || GR_VAT.cntx_psh();
         GR_VAT.REJ:=REJ.ref();
         {? ~GR_VAT.add() || undo() ?};
         GR_VAT.cntx_pop()
      ?};
      _a:=GR_VAT.next()
   !};
   _a:=VAT_REJ.first();
   {! |? _a
   |! {? VAT_REJ.REJ=_ref
      || VAT_REJ.cntx_psh();
         VAT_REJ.REJ:=REJ.ref();
         {? ~VAT_REJ.add() || undo() ?};
         VAT_REJ.cntx_pop()
      ?};
      _a:=VAT_REJ.next()
   !};
   FOR_AKC.index('NAZ'); FOR_AKC.prefix(_ref);
   {? FOR_AKC.first()
   || {!
      |? FOR_AKC.cntx_psh();
         FOR_AKC.prefix();
         FOR_AKC.REJ:=REJ.ref();
         {? ~FOR_AKC.add() || undo() ?};
         FOR_AKC.cntx_pop();
         FOR_AKC.next()
      !}
   ?};

   {? REJ.REJ_UPR='T' | REJESTR.REJ_UPR='T'
   || USERS.cntx_psh();
      USERS.prefix();
      USERSREJ.index('REJ');
      _loop:=USERS.first();
      {!
      |? _loop
      |! USERSREJ.prefix(USERS.ref(),_ref);
   {? USERSREJ.first()
   || {!
      |? USERSREJ.cntx_psh();
         USERSREJ.prefix();
         USERSREJ.REJ:=REJ.ref();
         _usrr:=USERSREJ.USER:=USERS.ref();
         _oddr:=USERSREJ.ODD:=REJ.ODD().OD;
         {? exec('usr_fjks','b_perm',_oddr,_usrr)
         || {? ~USERSREJ.add() || undo() ?}
         || _listusr+=USERSREJ.USER().KOD+'\n';
            _listoddr+=_oddr
         ?};
         USERSREJ.cntx_pop();
         USERSREJ.next()
      !}
   ?};
         _loop:=USERS.next()
      !};
      USERS.cntx_pop()
   ?};

   {? REJ.sel_size()
   || g_ok:=g_ok+end()
   || {? end()
      || {? _listusr=''
         || FUN.info('Kopiowanie zakończyło się sukcesem.'@)
         || FUN.info('Dla użytkowników:\n%1\nnie skopiowano wszystkich uprawnień do rejestrów.\nBrak '@[_listusr]+
                     'uprawnień do odpowiednich jednostek księgowych:\n%1'@[_listoddr])
         ?}
      || FUN.info('Kopiowanie nie powiodło się.'@)
      ?}
   ?}
?};
REJ.cntx_pop();
ROK_F.cntx_pop();
{? _nrej<>null || REJ.seek(_nrej) ?};
&kod


\bc_rejf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [17.00]
:: OPIS: Formula przed akcja Kopiuj do innej firmy okna REJ.DEF
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? REJ.KOD='~BO' | REJ.KOD='~BZ'
|| {? ~REJ.sel_size() || FUN.info('Kopiowanie rejestru %1 jest zabronione.'@[REJ.KOD]) ?}; 0
|| POMOC.AKC:='C';
   1
?}


\kop_rejf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [17.00]
:: OPIS: Formula po akcji Kopiuj do innej firmy okna REJ.DEF
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FIRMA.cntx_psh();
ROK_F.cntx_psh();
REJ.cntx_psh();
_ok:=1;_edit:=0; _nrej:=null; kod:='';
_grp:=REJ.sel_size()>0;
{? ~_grp
|| __F_ref:='S';
   UNPAR.PFIR:=null();
   UNPAR.PFIR_BE:='__be_F:=UNPAR.PFIR;1';
   UNPAR.PFIR_AE:='__F_ref:=\'S\'; {? __be_F<>UNPAR.PFIR || UNPAR.PRF2:=null ?}; 1';
   UNPAR.PRF2:=null();
   UNPAR.PRF2_BE:='UNPAR.PFIR<>null';
   UNPAR.PRF2_AE:='';
   UNPAR.PODD:=null;
   UNPAR.PODD_BE:='UNPAR.PFIR<>null';
   UNPAR.PODD_AE:='';
   okno:=REJESTR.win_edit('?');
   ROK_F.cntx_psh();
   ROK_F.win_sel('WER');
   ROK_F.win_dict('WER');
   REJESTR.win_edit('REJ2FIRM');
   _edit:=REJESTR.edit("
      __CHK.record2(UNPAR,
         'PFIR','Firma docelowa',
         'PRF2','Rok księgowy',
         'PODD','Jednostka księgowa'
      )
   ");
   ROK_F.cntx_pop();
   {? _edit
   || ssize_s:=REJ.sel_size(); bledy_s:=0; _ok:=1
   || REJESTR.win_edit(okno); &okno;_ok:=0
   ?}
?};
{? _ok
||
  POMOC.AKC:='C';
  REJ.win_edit('RED_R'+{? OPERATOR.DEPT || 'OK' || 'ODD' ?});
  REJ.index('KOD'); REJ.prefix();
  GR_VAT.prefix();
  VAT_REJ.prefix();
  _ref:=REJ.ref();
  _rok:=UNPAR.PRF2;
  _odd:=UNPAR.PODD;
  _naz:=REJ.NAZ;
  _wal:=REJ.WAL;
  kod:=REJ.KOD;
  {? REJ.sel_size()
  || _ok:=1;
     REJ.ROK:=UNPAR.PRF2;
     {? UNPAR.PODD || REJ.ODD:=UNPAR.PODD ?};
     exec('get_kod','!zws_par_fask')
  || REJ.KOD:=kod;  REJ.NAZ:=_naz;  REJ.WAL:=_wal;  REJ.ROK:=UNPAR.PRF2;  REJ.ODD:=UNPAR.PODD;
     _ok:=REJ.edit("{? REJ.find_key(UNPAR.PRF2,UNPAR.PODD,REJ.KOD,REJ.KOD)
                    || FUN.info('Rejestr '+REJ.KOD+' istnieje w firmie: '+UNPAR.PRF2().FIRMA().OPIS+
                                '\nw roku: '+UNPAR.PRF2().NAZ+
                                '\nw jednostce księgowej: '+UNPAR.PODD().OD+'.'); 'KOD'
                    || 1
                    ?}")
  ?}
?};
{? _ok
|| do();
   {? ~REJ.add()
   || undo()
   || _nrej:=REJ.ref()
   ?};
   _nrok:=REJ.ROK;
   {? ~exec('cop_paks','rejestry', _ref, REJ.ref()) || undo() ?};
   DOK_REJ.index('NAZ');
   DOK_REJ.prefix(_ref);
   _a:=DOK_REJ.first();
   {!
   |? _a
   |! DOK_REJ.cntx_psh();
      _or:=DOK_REJ.ref();
      DOK_REJ.REJ:=REJ.ref();
      {? DOK_REJ.AV<>null
      || _rav:=exec('cop_av','rejestry',_nrok,DOK_REJ.AV);
         {? _rav=null || undo() ?};
         DOK_REJ.AV:=_rav
      ?};
      DOK_REJ.prefix();
      {? ~DOK_REJ.add()
      || undo()
      || _r:=DOK_REJ.ref();
         exec('kop_dokm','!zws_par_fask',_or,_r);
         {? ~exec('cop_paks','rejestry',_or, _r) || undo() ?}
      ?};
      DOK_REJ.cntx_pop();
      _a:=DOK_REJ.next()
   !};
   _a:=GR_VAT.first();
   {! |?  _a
   |! {? GR_VAT.REJ=_ref
      || GR_VAT.cntx_psh();
         GR_VAT.REJ:=REJ.ref();
         {? ~GR_VAT.add() || undo() ?};
         GR_VAT.cntx_pop()
      ?};
      _a:=GR_VAT.next()
   !};
   _a:=VAT_REJ.first();
   {! |? _a
   |! {? VAT_REJ.REJ=_ref
      || VAT_REJ.cntx_psh();
         VAT_REJ.REJ:=REJ.ref();
         {? VAT_REJ.RVAT().FIRMA<>UNPAR.PFIR
         || RVAT.cntx_psh();
            RVAT.index('SYM');
            RVAT.prefix(UNPAR.PFIR,VAT_REJ.RVAT().SYM,VAT_REJ.RVAT().SYM);
            {? RVAT.first()
            || VAT_REJ.RVAT:=RVAT.ref()
            || RVAT.prefix();
               RVAT.seek(VAT_REJ.RVAT);
               RVAT.FIRMA:=UNPAR.PFIR;
               RVAT.add();
               VAT_REJ.RVAT:=RVAT.ref()
            ?};
            RVAT.cntx_pop()
         ?};
         {? ~VAT_REJ.add() || undo() ?};
         VAT_REJ.cntx_pop()
      ?};
      _a:=VAT_REJ.next()
   !};
   FOR_AKC.index('NAZ'); FOR_AKC.prefix(_ref);
   {? FOR_AKC.first()
   || {!
      |? FOR_AKC.cntx_psh();
         FOR_AKC.prefix();
         FOR_AKC.REJ:=REJ.ref();
         {? ~FOR_AKC.add() || undo() ?};
         FOR_AKC.cntx_pop();
         FOR_AKC.next()
      !}
   ?};
   USERSREJ.index('REJ_US'); USERSREJ.prefix(_ref);
   {? USERSREJ.first()
   || {!
      |? USERSREJ.cntx_psh();
         USERSREJ.prefix();
         USERSREJ.REJ:=REJ.ref();
         {? ~USERSREJ.add() || undo() ?};
         USERSREJ.cntx_pop();
         USERSREJ.next()
      !}
   ?};
   {? REJ.sel_size()
   || end()
   || {? end()
      || FUN.info('Kopiowanie zakończyło się sukcesem.'@)
      || FUN.info('Kopiowanie nie powiodło się.'@)
      ?}
   ?}
?};
REJ.cntx_pop();
ROK_F.cntx_pop();
FIRMA.cntx_pop();
{? _nrej<>null || REJ.seek(_nrej) ?};
&kod


\bg_rejf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [17.00]
:: OPIS: Formula przed akcja grupowa Kopiuj do innej firmy okna REJ.DEF
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FIRMA.cntx_psh();
ROK_F.cntx_psh();
REJ.cntx_psh();
_bobz:=0;
_tab:= REJ.sel_aget;
{? ~_tab.first
|| FIRMA.cntx_pop();
   ROK_F.cntx_pop();
   REJ.cntx_pop();
   return(0)
?};
{!|?
   REJ.seek(_tab.REF,);
   {? REJ.KOD='~BO' | REJ.KOD='~BZ' || _bobz:= 1 ?};
   ~_bobz  & _tab.next
!};
_bobz := _bobz & FUN.ask('Wśród zaznaczonych rejestrów są rejestry\n' +
                         '~BO, ~BZ, których kopiowanie jest zabronione' +
                         '\nCzy przerwać wykonywanie akcji?'@);
{? ~_bobz
||
   __F_ref:='S';
  UNPAR.PFIR:=null();
  UNPAR.PFIR_BE:='__be_F:=UNPAR.PFIR;1';
  UNPAR.PFIR_AE:='__F_ref:=\'S\'; {? __be_F<>UNPAR.PFIR || UNPAR.PRF2:=null ?}; 1';
  UNPAR.PRF2:=null();
  UNPAR.PRF2_BE:='UNPAR.PFIR<>null';
  UNPAR.PRF2_AE:='';
  UNPAR.PODD:=null;
  UNPAR.PODD_BE:='UNPAR.PFIR<>null';
  UNPAR.PODD_AE:='';
  okno:=REJESTR.win_edit('?');
  ROK_F.cntx_psh();
  ROK_F.win_sel('WER');
  ROK_F.win_dict('WER');
  REJESTR.win_edit('REJ2FIRM');
  _edit:=REJESTR.edit(" {? ~UNPAR.PFIR
                    || FUN.info('Nie wybrano firmy.'@); 0
                    || {? ~UNPAR.PRF2
                       || FUN.info('Nie wybrano roku.'@); 0
                       || {? ~UNPAR.PODD
                          || FUN.info('Nie wybrano jednostki księgowej.'@); 0
                          || 1
                          ?}
                       ?}
                    ?}");
  ROK_F.cntx_pop();
  {? _edit
  || ssize_s:=REJ.sel_size(); bledy_s:=0; _ok:=1
  || REJESTR.win_edit(okno); &okno;_ok:=0
  ?};
  FIRMA.cntx_pop();
  ROK_F.cntx_pop();
  REJ.cntx_pop();
  _edit
||FIRMA.cntx_pop();
  ROK_F.cntx_pop();
  REJ.cntx_pop();
   ~_bobz
?}


\ag_rejf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [17.00]
:: OPIS: Formula po akcji grupowej Kopiuj do innej firmy okna REJ.DEF
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Zaznaczonych: %1.\nSkopiowano: %2.'@[$ssize_s,$(ssize_s-bledy_s)]);
REJESTR.win_edit(okno);
&ssize_s; &bledy_s; &okno


\del_rvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Usuwanie rejestrów VAT
::----------------------------------------------------------------------------------------------------------------------
{? RVAT.count()>0
|| FUN.info('Rejestr VAT wykorzystywany w strukturach %1.'@[exec('nazwa','#system')])
|? FUN.ask('Usunąć rejestr VAT?'@)
|| RVAT.del()
?}


\ac_anbo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Po popraw/usun/dolacz okna WER tabeli AN_BO
::  OLD: \ac_anbo/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
{? AN_BO.sel_size=0
|| {? var_pres('rok_bo')>0 || ROK_F.prefix(REF.FIRMA); ROK_F.seek(rok_bo) || SSTALE.AR() ?};
   POZ.cntx_psh();
   POZ.use('pozy'+ROK_F.KOD+'00'); POZ.index('OKWAL_O1'); POZ.prefix('N');
   _is:=POZ.first();
   POZ.cntx_pop();
   {? _is & FUN.ask('Aktualizować konta pozycji niezakończonych dokumentów BO %1?'@[ROK_F.NAZ]) &
      ~exec('upd_poz','zam_okr_rok')
   || FUN.info('Reguły powodują tworzenie błędnych kont\nw pozycjach dokumentów BO z zakończoną rejestracją.'@)
   ?}
?}


\bcd_anbo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Przed popraw/usun okna WER tabeli AN_BO
::  OLD: \bcd_anbo/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
_usun:=-menu_txt(,)='usuń';
_wy:={? exec('is_poz','!zws_par_fask')
     || {? AN_BO.sel_size=0
        || {? _usun
           ||  FUN.ask('Reguła zastosowana w pozycjach zaakceptowanych dokumentów BO.\nUsunąć regułę?'@)
           ||  FUN.ask('Reguła zastosowana w pozycjach zaakceptowanych dokumentów BO.\nZmodyfikować regułę?'@)
           ?}
        || 0
        ?}
     || {? _usun
        || {? AN_BO.sel_size
           || anbo_ok+=1; 1
           || FUN.ask('Usunąć regułę?'@)
           ?}
        || 1
        ?}
     ?};
{? _wy & _usun || _wy:=AN_BO.del ?};
_wy


\is_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Czy istnieja zaakceptowane pozycje dokumentu BO z kontami
::       zgodnymi z regula?
::   WY: 1-tak 0-nie
::  OLD: \is_poz/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
{? var_pres('rok_bo')>0 || ROK_F.seek(rok_bo) || SSTALE.AR() ?};
_maska:=ROK_F.KOD+'00';
{? ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) & ROK_F.prev()
|| _sep:=ROK_F.SYNT;
   POZ.cntx_psh();
   POZ.use('pozy'+_maska); POZ.index('PKON'); POZ.prefix(_sep+AN_BO.PKON);
   {? POZ.first()
   || WYDRUKI.MASKA:=AN_BO.PKON;
      WYDRUKIN.DLKON:=+AN_BO.PKON;
      {! |?
         _ok:=POZ.A='T' & exec('mask','konto',POZ.PKON) & exec('konto','zam_okr_rok',POZ.PKON)=POZ.KON;
         _ok=0 & POZ.next()
      !}
   ?};
   POZ.cntx_pop()
?};
ROK_F.cntx_pop();
_ok


\bgd_anbo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Przed akcja grupowa usun okna WER tabeli AN_BO
::  OLD: \bgd_anbo/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć zaznaczone reguły?'@)
|| anbo_size:=AN_BO.sel_size(); anbo_ok:=0; 1
|| 0
?}


\agd_anbo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Po akcja grupowej usun okna WER tabeli AN_BO
::  OLD: \agd_anbo/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Liczba zaznaczonych reguł przypisania: %1'
         '.\nLiczba usuniętych reguł przypisania: %2.'@[+$anbo_size,$anbo_ok]);
&anbo_size;
&anbo_ok;
exec('ac_anbo','!zws_par_fask')


\ar_anbo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Rekord po dla tabeli AN_BO
::  OLD: \ar_anbo/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
exec('chk_anbo','konto',-menu_txt(,)='popraw')


\szukanbo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Przed akcja szukaj dla okna WER tabeli AN_BO
::   WE: _a - 0-szukanie dokladne 1-kontekstowe
::  OLD: \szukanbo/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
_o:=AN_BO.win_edit('?');
AN_BO.win_edit('SZUK');
ROZNE.KONTO1:=ROZNE.KONTO2:=''; ROZNE.PAR1:=_a;
{? AN_BO.edit() || exec('kf3_anbo','!zws_par_fask') ?};
AN_BO.win_edit(_o)


\kf3_anbo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Akcja klawisz F3 w oknie WER tabeli AN_BO
::  OLD: \kf3_anbo/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.PAR1=-1
|| exec('szukanbo','!zws_par_fask',0)
|| {? ROZNE.KONTO1='' & ROZNE.KONTO2=''
   || FUN.info('Niewypełniony wzorzec.'@)
   || _operator:={? ROZNE.PAR1=0 || ':*' || ':-' ?};
      {? ~AN_BO.find_tab(0,'PKON',,_operator,ROZNE.KONTO1,'KON',,_operator,ROZNE.KONTO2)
      || FUN.info('Nie znaleziono rekordu zgodnego ze wzorcem.'@)
      ?}
   ?}
?}


\bl_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Wartosc poczatkowa dla AN_BO.ROK
::  OLD: \bl_rok/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
rok_bo


\be_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Przed redakcja pol PKON i KONT tabeli AN_BO
::  OLD: \be_kon/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
AN_BO.ROK();
_p:=1+cur_afld()='P';
_ok:={? _p
     || ~exec('first_rok_obsz','zam_okr_rok','FKS',ROK_F.ref()) & ROK_F.prev()
     || 1
     ?};
{? _ok
|| anal_rok:=ROK_F.ref();
   {? _p & -menu_txt(,)='dołącz' & POZ.KON='' & AN_BO.PKON='' || AN_BO.PKON:=POZ.PKON ?};
   {? ~_p & -menu_txt(,)='dołącz' & AN_BO.PKON<>'' & AN_BO.KON='' &
      (KS.index('SYM'); _r:=ROK_F.ref(); ROK_F.prev(); KS.prefix(_r,ROK_F.SYNT+AN_BO.PKON); KS.first() )
   || AN_BO.KON:=ROK_F.SYNT+AN_BO.PKON
   ?};
   _ok:=exec('be_konto','edkonto','AN_BO',cur_afld())
?};
ROK_F.cntx_pop();
_ok


\ae_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Po redakcja pol PKON i KONT tabeli AN_BO
::  OLD: \ae_kon/an_bo.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('ae_konto','edkonto',_a,'AN_BO',cur_afld(),1,2,1)
|| &anal_rok
?}


\zestawy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Tworzy okno zestawów kont
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_okno:=KON_WYDR.grp_make('Zestawy kont'@,"",'#kon_wydr_grp');
KON_WYDR.grp_sel(_okno,,'WER',,"");
KON_WYDR.grp_splt(_okno,,'horizontal','bottom');
KON_WYDR.grp_sel(_okno,KON_SCH,'WER');
_okno


\bl_sa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Blank dla pola KON_WYDR.SA
::  OLD: \bl_sa/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('SA')<0 || '' || SA ?}


\be_sa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Przed redakcja pola KON_WYDR.SA
::  OLD: \be_sa/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_press('SA')>0
|| 0
|? -menu_txt()='popraw'
|| KON_SCH.index('IND_LP');
   KON_SCH.prefix(KON_WYDR.ref());
   ~KON_SCH.first()
|| 1
?}


\bdkonwyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Przed akcja Usun okna wertowania tabeli KON_WYDR
::  OLD: \pukonwyd/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? (KON_WYDR.testlink).size()
|| M4_ZESK.index('ZESTAW'); M4_ZESK.prefix(KON_WYDR.ref());
   {? M4_ZESK.first()
   || FUN.info('Zestaw wykorzystany w controllingu.\nUsunięcie niemożliwe.'@); 0
   |? FUN.ask('Zestaw ma zdefiniowaną definicję kont.\nUsunąć zestaw kont?'@)
   || do();
      KON_SCH.prefix(KON_WYDR.ref());
      {? KON_SCH.first() || {! |?KON_SCH.del()!} ?};
      KON_WYDR.del();
      end();
      0
   || 0
   ?}
|| 1
?}


\brkonwyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Akcja Rekord Przed okienka KON_SCH.WER
::  OLD: \brkonwyd/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.SA:={? KON_WYDR.SA='S' || 'syntetyczne' || 'analityczne' ?};
KON_SCH.cntx_psh(); KON_SCH.index('IND_LP'); KON_SCH.prefix(KON_WYDR.ref);
_kolor:={? KON_SCH.first() || exec('findtmp','#color') || ''?};
KON_SCH.cntx_pop();
_kolor


\arkonwyd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Akcja rekord po tabeli KON_WYDR
::  OLD: \pokonwyd/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=__CHK.record2(KON_WYDR,
   'KOD','Kod',
   'OP','Opis'
);
{? _a=''
|| _r:={? -menu_txt()='popraw'|| KON_WYDR.ref() || 0 ?};
   _s:=KON_WYDR.SA; _z:=0; _k:=KON_WYDR.KOD;
   KON_WYDR.cntx_psh();
   {? KON_WYDR.DOM='T'
   || KON_WYDR.index('DOM');
      KON_WYDR.prefix(SSTALE.AR,_s,'T');
      _z:={? KON_WYDR.first() & KON_WYDR.ref()<>_r || 1 || 0 ?}
   ?};
   {? _z=0
   || KON_WYDR.index('UNIK');
      KON_WYDR.prefix(SSTALE.AR,_s,_k,_k);
      _z:={? KON_WYDR.first() & KON_WYDR.ref()<>_r || 2 || 0 ?}
   ?};
   KON_WYDR.cntx_pop();
   _a:={? _z=1 || FUN.info('Zdefiniowano już zestaw domyślny dla roku: %1.'@[SSTALE.AR().NAZ]); 'DOM'
       |? _z=2 || FUN.info('Zdefiniowano już zestaw: %1 w roku: %2'@[_k,SSTALE.AR().NAZ]); 'KOD'
       || ''
       ?}
?};
_a


\bl_ksch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Wartosc poczatkowa pola KON_SCH.KON_WYDR
::  OLD: \bl_ksch/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
KON_WYDR.ref()


\sch_nr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Wartosc poczatkowa pola KON_SCH.LP
::  OLD: \sch_nr/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
sch_nr


\wz_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Formula wykorzystywana na Wzorzec dla pol MASKA, ZOD, ZDO
::       tabeli KON_SCH
::   WE: akronim pola tabeli KON_SCH
::  OLD: \wz_kon/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? KON_WYDR.SA='A'
|| exec('wz_konto','edkonto','KON_SCH',_a)
|| ROZNE.ROKKON().SYNT*'x'+'#'
?}


\bv_mz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Formula 'Przed wysw.' pola KON_SCH.MZ
::  OLD: \bv_mz/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? KON_WYDR.SA='S' & +KON_SCH.MASKA & +KON_SCH.MASKA>BILANSP.ASYNT
|| KON_SCH.MASKA:=BILANSP.ASYNT+KON_SCH.MASKA
?};
exec('mz_enabled','!zws_par_fask');
1


\be_fksch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Przed redakcja pol MASKA, ZOD, ZDO tabeli KON_SCH
::  OLD: \be_fksch/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=cur_afld;
{? _a='MASKA'
|| {? KON_SCH.MZ='M' || _b:=exec('be_konto','edkonto','KON_SCH',cur_afld);
                        {? +_b>BILANSP.ASYNT || BILANSP.ASYNT+_b || _b ?}
                     || 0 ?}
|| {? KON_SCH.MZ='Z' || exec('be_konto','edkonto','KON_SCH',cur_afld) || 0 ?}
?}


\ae_ksch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Po redakcji KON_SCH.MASKA
::  OLD: \ae_ksch/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
_w:=exec('ae_konto','edkonto',_a,'KON_SCH','MASKA',0,2,0);
{? _w
|| win_disp()
|| _w
?}


\bl_pozks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Wartosc poczatkowa pola KON_SCH.POZ
::  OLD: \bl_pozks/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? KON_WYDR.SA='A' || 0 || -1 ?}


\be_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Formula przed redakcja pola KON_SCH.POZ
::  OLD: \be_poz/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? KON_WYDR.SA='A' & ROZNE.RPAR1=1
|| _p:=_p1:=''; _il:=0;
   _p:={? KON_SCH.MZ='M' || _p:=BILANSP.ASYNT+KON_SCH.MASKA || _p:=BILANSP.ASYNT+KON_SCH.ZOD; _p1:=BILANSP.ASYNT+KON_SCH.ZDO ?};
   {? +_p=BILANSP.ASYNT & {? KON_SCH.MZ='M' || _p*'?'=0 || _p=_p1 ?}
   || {? KS.index('SYM'); KS.prefix(ROZNE.ROKKON,_p); KS.first()
      || {? BUD.index('KS'); BUD.prefix(KS.ref()); BUD.last() || _il:=BUD.POZ ?}
      ?};
      {? (KON_SCH.POZ>_il & _il>0) | menu_txt()<>'popraw' || KON_SCH.POZ:=_il ?}
   || {? KON_SCH.POZ<>0
      || BUD.cntx_psh();
         _ind:=BUD.ndx_tmp(,1,'POZ',,1);
         BUD.index(_ind);
         _il:={? BUD.first() || BUD.POZ || 0 ?};
         {? _il>0 & KON_SCH.POZ>_il
         || FUN.info('Można podsumowywać maksymalnie po %1 poziomie.'@[$_il]);
            _w:=0; KON_SCH.POZ:=_il
         ?};
         BUD.ndx_drop(_ind); BUD.cntx_pop()
      ?}
   ?}; 1
|| 0
?}


\ae_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Formula sprawdza pole KON_SCH.POZ
::  OLD: \ae_poz/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
_p:=_p1:=''; _il:=0; _w:=1;
{? KON_SCH.MZ='M' || _p:=BILANSP.ASYNT+KON_SCH.MASKA || _p:=BILANSP.ASYNT+KON_SCH.ZOD; _p1:=BILANSP.ASYNT+KON_SCH.ZDO ?};
{? (KON_SCH.POZ<=0 & ROZNE.RPAR1=2) | (KON_SCH.POZ<-1 & ROZNE.RPAR1=1)
|| FUN.info('Należy wskazać właściwy poziom sumowania.'@); _w:=0
|| {? KON_SCH.POZ<>-1
   || {? +_p=BILANSP.ASYNT & {? KON_SCH.MZ='M' || _p*'?'=0 || _p=_p1 ?}
      || KS.index('SYM');BUD.index('KS');KS.prefix();BUD.prefix();
         exec('uzup_kon','edkonto',_p);
         {? KON_SCH.POZ>BUD.POZ | BUD.KS().SYM<>_p
         || {? (BUD.POZ=0 | BUD.KS().SYM<>_p)
            || ROZNE.RPAR1:=2;
               exec('bv_poz','!zws_par_fask');
               FUN.info('Podsumowanie może być tylko po syntetyce.'@)
            || FUN.info('Podsumowanie może być maksymalnie po %1 poziomie.'@[$BUD.POZ]); KON_SCH.POZ:=BUD.POZ
            ?}; _w:=0
         || {? KON_SCH.POZ<0
            || FUN.info('Należy wskazać właściwy poziom sumowania.'@); _w:=0
            ?}
         ?}
      || {? KON_SCH.POZ>0
         || {? KON_SCH.MZ='Z' & _p<>_p1 & KON_SCH.POZ>0
            || FUN.info('Można podsumowywać po syntetyce lub ostatnim poziomie.'@); _w:=0
            || BUD.cntx_psh();
               _ind:=BUD.ndx_tmp(,1,'POZ',,1);
               BUD.index(_ind);
               _il:={? BUD.first() || BUD.POZ || 0 ?};
               {? _il>0 & KON_SCH.POZ>_il
               || {? _il=0
                  || FUN.info('Można podsumowywać tylko po syntetyce'@)
                  || FUN.info('Można podsumowywać maksymalnie po %1 poziomie.'@[$_il])
                  ?};
                   _w:=0; KON_SCH.POZ:=_il
               ?};
               BUD.ndx_drop(_ind); BUD.cntx_pop()
            ?}
         ?}
      ?}
   ?}
?}; _w


\ba_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Formula przed dolacz dla pozycji schematu kont
::  OLD: \ba_sch/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
params_exec('ae_mz','!zws_par_fask');
sch_nr:={? KON_SCH.size() || KON_SCH.LP || 1 ?}


\m_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: po akcji Dolacz, Popraw tabeli KON_SCH
::  OLD: \m_sch/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
_w:={? KON_WYDR.SA='A' & (ROZNE.RPAR1=1 | ROZNE.RPAR1=0) || exec('ae_poz','!zws_par_fask') || 1 ?};
{? _w & KON_WYDR.SA='A'
|| {? ROZNE.RPAR1=0 || KON_SCH.POZ:=0 |? ROZNE.RPAR1=2 || KON_SCH.POZ:=-1 ?};
   {? ROZNE.RPAR1=0 | ROZNE.RPAR1=2 || KON_SCH.put()?}
?}; _w


\aa_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Po Usun. Przenumerowuje rekordy pozycji schematu kont.
::  OLD: \aa_sch/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
KON_SCH.cntx_psh();
{? KON_SCH.last()
|| _i:=(KON_SCH.size()*2)+1; {! |? KON_SCH.LP:=_i; KON_SCH.put(); _i-=1; KON_SCH.prev() !}; _i:=1;
   {? KON_SCH.first() || {! |? KON_SCH.LP:=_i; KON_SCH.put(); _i+=1; KON_SCH.next() !} ?}
?};
KON_SCH.cntx_pop()


\b_sumsch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Przed wyswietl dla pola ROZNE.SUM_SCH
::  OLD: \b_sumsch/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.SUM_SCH:={? KON_SCH.POZ=-1 || 'syntetyce' |? KON_SCH.POZ=0 || 'ostatnim poziomie' || 'poziomie '+$KON_SCH.POZ ?}


\sprkon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Rekord Po okna WER tabeli KON_SCH
::   WE: [ _a - wywoalnie dla akcji Dolacz w dol ]
::  OLD: \sprkon/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};
{? KON_SCH.MZ='Z'
|| _w:=__CHK.record(KON_SCH,,'ZOD','ZDO');
   {? _w=''
   || _w:={? KON_SCH.ZDO<KON_SCH.ZOD
          || FUN.info('Błędny zakres kont.'@);'ZDO'
          || ''
          ?}
   ?}
|| _w:=__CHK.record(KON_SCH,,'MASKA')
?};
{? _w='' & ( -menu_txt()='popraw' | -menu_txt()='dołącz' | _a)
|| _w:={? _a || exec('pokonsch','!zws_par_fask',_a) || exec('pokonsch','!zws_par_fask') ?}
?};
{? _w='' & var_pres('sch_nr')>0 & -menu_txt()<>'popraw'
|| KON_SCH.cntx_psh();
   {? KON_SCH.last() & KON_SCH.size()>=sch_nr
   || _i:=KON_SCH.size()+1; {! |? KON_SCH.LP:=_i; _i-=1; KON_SCH.put(); KON_SCH.prev(); _i>sch_nr !}
   ?};
   KON_SCH.cntx_pop(); KON_SCH.LP:=sch_nr;
   &sch_nr
?};
_w


\pokonsch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Formula sprawdza czy podana maska(zakres kont) nie zazebia
::       sie w innych pozycjach schematu
::  WE: [_a - wywoalnie dla akcji Dolacz w dol ]
::  OLD: \pokonsch/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
 _m:={? KON_SCH.MZ='M' || KON_SCH.MASKA || '' ?};
_z1:={? KON_SCH.MZ='Z' || KON_SCH.ZOD   || '' ?};
_z2:={? KON_SCH.MZ='Z' || KON_SCH.ZDO   || '' ?};
_r:={? _>0 | -menu_txt()<>'popraw' || null || KON_SCH.ref() ?};
_mz:=KON_SCH.MZ;
_tmp:=exec('zakresy','!zws_par_fask',BB.refsql(KON_SCH.KON_WYDR));
_z:=1;_p:='';
{? type_of(_tmp)>100 & _tmp.first()
|| {!|? {? #_r=0 | #_r<>BB.sqlint(_tmp.REF)
       || {? _mz='Z' & _tmp.MZ='Z' & +(BILANSP.ASYNT+_z1)=BILANSP.ASYNT & +(BILANSP.ASYNT+_z2)=BILANSP.ASYNT
          || {? (_z1>=_tmp.ZOD & _z1<=_tmp.ZDO) | (_z2>=_tmp.ZOD & _z2<=_tmp.ZDO)
             || FUN.info('Zakres kont mieści się w już wprowadzonej pozycji: <%1,%2>.'@[_tmp.ZOD,_tmp.ZDO]);
                _p:='ZDO'; _z:=0
             ?}
          |? _mz='Z' & _tmp.MZ='Z' & ( (exec('wmasce','konto',_tmp.ZOD,_z1,BILANSP.ASEP)
                                        & exec('wmasce','konto',_tmp.ZDO,_z1,BILANSP.ASEP))
                                     | (exec('wmasce','konto',_tmp.ZOD,_z2,BILANSP.ASEP)
                                        & exec('wmasce','konto',_tmp.ZDO,_z2,BILANSP.ASEP))
                                     | (_z1>=+_z1+_tmp.ZOD & _z1<=+_z1+_tmp.ZDO)
                                     | (_z2>=+_z2+_tmp.ZOD & _z2<=+_z2+_tmp.ZDO)
                                     )
          || FUN.info('Zakres kont mieści się w już wprowadzonej pozycji: <%1,%2>.'@[_tmp.ZOD,_tmp.ZDO]);
             _p:='ZDO'; _z:=0
          |? _mz='Z' & _tmp.MZ='M' & (+(BILANSP.ASYNT+_z1)=BILANSP.ASYNT | +_z1<BILANSP.ASYNT) & (+(BILANSP.ASYNT+_z2)=BILANSP.ASYNT | +_z2<BILANSP.ASYNT)
          || {? exec('wmasce','konto',_tmp.MASKA,_z1,BILANSP.ASEP)
             || FUN.info('Konto %1 wchodzi do już wprowadzonej maski: %2.'@[_z1,_tmp.MASKA]); _z:=0; _p:='ZOD'
             || {? exec('wmasce','konto',_tmp.MASKA,_z2,BILANSP.ASEP)
                || FUN.info('Konto %1 wchodzi do już wprowadzonej maski: %2.'@[_z2,_tmp.MASKA]); _z:=0; _p:='ZDO'
                || {? _tmp.MASKA>=(_z1+((+_tmp.MASKA-+_z1)*'?')) & _tmp.MASKA<=(_z2+((+_tmp.MASKA-+_z2)*'?'))
                   || FUN.info('Zakres kont mieści się już we wprowadzonej masce: %1.'@[_tmp.MASKA]); _z:=0; _p:='ZDO'
                   ?}
                ?}
             ?}
          |? _mz='M' & _tmp.MZ='M'
          || {? _m=_tmp.MASKA
             || FUN.info('Maska: %1 została już zdefiniowana w schemacie.'@[_m]); _z:=0; _p:='MASKA'
             || {? exec('wmasce','konto',_tmp.MASKA,_m,BILANSP.ASEP)
                || FUN.info('Konta maski: %1 mieszczą się we wprowadzonej masce: %2.'@[_m,_tmp.MASKA]);
                   _z:=0; _p:='MASKA'
                ?}
             ?}
          |? _mz='M' & _tmp.MZ='Z'
          || {? exec('wmasce','konto',_m,_tmp.ZOD,BILANSP.ASEP)
             || FUN.info('Maska uwzględnia wprowadzony już zakres kont: <%1,%2>.'@[_tmp.ZOD,_tmp.ZDO]);
                _z:=0; _p:='MASKA'
             || {? exec('wmasce','konto',_m,_tmp.ZDO,BILANSP.ASEP)
                || FUN.info('Maska uwzględnia wprowadzony już zakres kont: <%1,%2>.'@[_tmp.ZOD,_tmp.ZDO]);
                   _z:=0; _p:='MASKA'
                || {? _m>=(_tmp.ZOD+((+_m-+_tmp.ZOD)*'?')) & _m<=(_tmp.ZDO+((+_m-+_tmp.ZDO)*'Z'))
                   || FUN.info('Maska mieści się w zdefiniownym już zakresie kont: <%1,%2>.'@[_tmp.ZOD,_tmp.ZDO]);
                      _z:=0; _p:='MASKA'
                   ?}
                ?}
             ?}
          ?}
        ?}; _z & _tmp.next()
   !}
?};
{? _p='' &  KON_WYDR.SA='A' & (ROZNE.RPAR1=1 | ROZNE.RPAR1=0) & ~exec('ae_poz','!zws_par_fask') || _p:={? ROZNE.RPAR1=1 || 'POZ' || 'RPAR1' ?}?}; _p


\zakresy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Zakresy kont dla schematu
::   WE: _a - refsql tabeli KON_WYDR
::       _b - (S)yntetyczny, (A)nalityczny
::   WY: zabela z zakresami
::  OLD: \zakresy/konta.fml
::----------------------------------------------------------------------------------------------------------------------
sql('select KON_SCH.REFERENCE as REF, MZ, MASKA, ZOD, ZDO from KON_SCH '+
    'join KON_WYDR using (KON_SCH.KON_WYDR,KON_WYDR.REFERENCE) '+
    'where KON_WYDR.REFERENCE=\':_a\'',_a)


\de_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Formula realizuje dolaczanie na koncu tabeli pozycji schematu kont
::  OLD: \de_sch/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Dodać nowy wiersz?'@)
|| KON_SCH.cntx_psh(); sch_nr:=KON_SCH.LP+1; KON_SCH.blank();
   {? KON_SCH.edit("exec('sprkon','!zws_par_fask',1)")
   || {? KON_SCH.add()
      || _r:=KON_SCH.ref();
         {? KON_SCH.KON_WYDR().SA='A'
         || {? ROZNE.RPAR1=0 || KON_SCH.POZ:=0 |? ROZNE.RPAR1=2 || KON_SCH.POZ:=-1 ?};
            {? ROZNE.RPAR1=0 | ROZNE.RPAR1=2 || KON_SCH.put()?}
         ?}
      ?}; KON_SCH.cntx_pop(); {? _r<>null || KON_SCH.seek(_r) ?}
   || KON_SCH.cntx_pop(); &sch_nr
   ?}; 1
|| 0
?}


\bv_rpar1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Formula przed Wyswietl pola ROZNE.RPAR1
::  OLD: \bv_rpar1/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab=KON_SCH & KON_SCH.win_edit('?')='RED'
|| ROZNE.RPAR1:={? KON_SCH.POZ=0 || 0 |? KON_SCH.POZ=-1 || 2 || 1 ?}
?};
1


\bv_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Formula przed Wyswietl pola KON_SCH.POZ
::  OLD: \bv_poz/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
KON_SCH.efld_opt('RED','enable='+$(KON_WYDR.SA='A' & ROZNE.RPAR1=1
),KON_SCH,'POZ');
''


\ae_mz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Po redakcji pola KON_SCH.MZ
::  OLD: \ae_mz/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? KON_SCH.MZ='M'
|| KON_SCH.ZOD:=KON_SCH.ZDO:=''
|| KON_SCH.MASKA:=''
?};
exec('mz_enabled','!zws_par_fask')


\mz_enabled
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed wyswietleniem KON_SCH.MZ
::----------------------------------------------------------------------------------------------------------------------
_enabled:=KON_SCH.MZ='Z';
KON_SCH.efld_opt('RED','enable='+$~_enabled,KON_SCH,'MASKA');
KON_SCH.efld_opt('RED','enable='+$_enabled,KON_SCH,'ZDO');
KON_SCH.efld_opt('RED','enable='+$_enabled,KON_SCH,'ZOD');
KON_SCH.efld_opt('RED','mark='+$_enabled,KON_SCH,'ZDO');
KON_SCH.efld_opt('RED','mark='+$_enabled,KON_SCH,'ZOD');
KON_SCH.efld_opt('RED','mark='+$~_enabled,KON_SCH,'MASKA')


\ae_rpar1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Po redakcji pola ROZNE.RPAR1
::  OLD: \ae_rpar1/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab=KON_SCH & KON_SCH.win_edit('?')='RED'
|| KON_SCH.POZ:={? ROZNE.RPAR1=0 || 0 |? ROZNE.RPAR1=2 || -1 || {? KON_SCH.POZ>1 || KON_SCH.POZ || 1 ?} ?};
   exec('bv_poz','!zws_par_fask');
   KON_SCH.efld_opt('RED','mark='+$(ROZNE.RPAR1=1),KON_SCH,'POZ');
   win_disp()
?}; 1


\ae_schpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Formula 'Po redakcji' pola KON_SCH.POZ
::  OLD: \ae_schpoz/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? KON_SCH.POZ<1 || FUN.info('Należy wprowadzić wartość większą od 0.'@); 0 || 1 ?}


\def_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Wyswietlenie definicji kont dla zestawu
::  OLD: \def_kon/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.ROKKON:=SSTALE.AR;
KON_SCH.win_edit({? KON_WYDR.SA='S' || 'REDS' || 'RED' ?});
KON_SCH.index('IND_LP'); KON_SCH.prefix(KON_WYDR.ref());
KON_SCH.hdr_sel();
KON_SCH.hdr_sel(': %1'@[KON_WYDR.KOD]);
KON_SCH.select();
{? var_pres('sch_nr')>0 || &sch_nr ?}


\bg_kop_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed grupową akcją kopiowania zestawu kont
::----------------------------------------------------------------------------------------------------------------------
_we:=KON_WYDR.win_edit('?');
KON_WYDR.win_edit('KOPIA2');
_ok:=0;
{? KON_WYDR.edit("
      _ret:=__CHK.record2(KON_WYDR,'ROK_F','Rok');
      {? _ret=''
      || KS.cntx_psh();
         KS.index('SYM'); KS.prefix(KON_WYDR.ROK_F);
         _konta:=KS.first();
         KS.cntx_pop();
         {? _konta=0
         || FUN.info('Brak planu kont w roku %1.'@[KON_WYDR.ROK_F().NAZ]);
            _ret:='ROK_F'
         ?}
      ?};
      _ret
   ")
|| konrok:=KON_WYDR.ROK_F;
   konsel:=KON_WYDR.sel_size();
   konkop:=0;
   _ok:=1
?};
KON_WYDR.win_edit(_we);
_ok


\ag_kop_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Po grupowej akcją kopiowania zestawu kont
::----------------------------------------------------------------------------------------------------------------------
FUN.info(
   'Liczba zaznaczonych zestawów kont: %1\n'
   'Liczba skopiowanych zestawów kont: %2.'@[$konsel,$konkop]);
VAR_DEL.delete('konrok','konsel','konkop')


\kop_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Kopia zestawów kont
::----------------------------------------------------------------------------------------------------------------------
_gr:=KON_WYDR.sel_size();
{? ~_gr
|| _we:=KON_WYDR.win_edit('?');
   KON_WYDR.win_edit('KOPIA');
   konrok:=KON_WYDR.ROK_F
?};
{? _gr |
   KON_WYDR.edit("
      _ret:='';
      KS.cntx_psh();
      KS.index('SYM'); KS.prefix(KON_WYDR.ROK_F);
      _konta:=KS.first();
      KS.cntx_pop();
      {? _konta
      || KON_WYDR.cntx_psh();
         KON_WYDR.index('UNIK'); KON_WYDR.prefix(KON_WYDR.ROK_F,KON_WYDR.SA,KON_WYDR.KOD,);
         {? KON_WYDR.first()
         || FUN.info('Istnieje zestaw kont: %1 w roku %2.'@[KON_WYDR.KOD,KON_WYDR.ROK_F().NAZ]); _ret:='KOD'
         ?};
         KON_WYDR.cntx_pop()
      || FUN.info('Brak planu kont w roku %1.'@[KON_WYDR.ROK_F().NAZ]);
         _ret:='ROK_F'
      ?};
      _ret
   ")
|| KON_WYDR.cntx_psh();
   KON_WYDR.index('DOM');
   KON_WYDR.prefix(konrok,KON_WYDR.SA,'T');
   _isdom:=KON_WYDR.first();
   KON_WYDR.cntx_pop();
   do();
   KON_WYDR.cntx_psh();
   KON_WYDR.prefix();
   {? _gr || KON_WYDR.ROK_F:=konrok ?};
   {? _isdom & KON_WYDR.DOM='T' || KON_WYDR.DOM:='N' ?};
   _ref:={? KON_WYDR.add(1) || KON_WYDR.ref() || null ?};
   KON_WYDR.cntx_pop();
   {? _ref
   || KON_SCH.cntx_psh();
      KON_SCH.index('IND_LP');
      KON_SCH.prefix(KON_WYDR.ref());
      {? KON_SCH.first()
      || {!
         |? KON_SCH.cntx_psh();
            KON_SCH.prefix();
            KON_SCH.KON_WYDR:=_ref;
            KON_SCH.add();
            KON_SCH.cntx_pop();
            KON_SCH.next()
         !}
      ?};
      KON_SCH.cntx_pop();
      KON_WYDR.seek(_ref)
   ?};
   {? end() & _gr & _ref || konkop+=1 ?}
?};
{? ~_gr
|| KON_WYDR.win_edit(_we);
   VAR_DEL.delete('konrok')
?}


\kopzest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [17.00]
:: OPIS: Kopia zestawów kont przy kopiowaniu zbiorczym
::   WE: _a - z roku
::       _b - do roku
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? UNPAR.PRF1<>null & UNPAR.PRF2<>null
||
  KON_WYDR.cntx_psh();
  KON_WYDR.index('UNIK');
  KON_WYDR.prefix(UNPAR.PRF1);
  {? KON_WYDR.first()
  || do();
    {!|?
       KON_WYDR.cntx_psh();
       KON_WYDR.prefix(UNPAR.PRF2);
       KON_WYDR.ROK_F:=UNPAR.PRF2;
       _ref:={? KON_WYDR.add(1) || KON_WYDR.ref() || null ?};
       KON_WYDR.cntx_pop();
       {? _ref
       || KON_SCH.cntx_psh();
          KON_SCH.index('IND_LP');
          KON_SCH.prefix(KON_WYDR.ref());
          {? KON_SCH.first()
          || {!
             |? KON_SCH.cntx_psh();
                KON_SCH.prefix();
                KON_SCH.KON_WYDR:=_ref;
                KON_SCH.add();
                KON_SCH.cntx_pop();
                KON_SCH.next()
             !}
          ?};
          KON_SCH.cntx_pop();
          KON_WYDR.seek(_ref)
       ?};
      KON_WYDR.next()
    !};
    end()
  ?};
  KON_WYDR.cntx_pop()
?};
_wy


\bl_rok_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wartosc poczatkowa dla pól ze wskazaniem na ROK_F
::  OLD: \bl_rok/tr_info.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.ref()


\aadd_vatzmdek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Funkcja po akcji dolacz zmiany rozliczen VAT.
::  OLD: \aadd_vatzmdek/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
VATZMDEK.blank();
{? VATZMDEK.edit("exec('chk_vatzmdek','!zws_par_fask','D')")
|| VATZMDEK.add()
?}


\chk_vatzmdek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Formula sprawdza poprawnosc wprowadzonych zmian w VATZMDEK
::   WE: _a - rodzaj sprawdzania D/P (Dolacz/Popraw)
::  OLD: \chk_vatzmdek/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
:: sprawdzenie spojnosci: zmiana na ten sam rodzaj, dla kwartalu sprawdzenie czy okres jest pierwszym okresem kwartalu';
_nr_okr:=VATZMDEK.OKRO_F().NR;
_pocz:=VATZMDEK.OKRO_F().POCZ;
_ref:=VATZMDEK.ref();
_r_vat:=VATZMDEK.ROZL_VAT;
_wy:=__CHK.record(VATZMDEK,,'OKRO_F','ROZL_VAT');
{? _wy='' & VATZMDEK.OKRO_F().NAZ='Bilans otwarcia' | VATZMDEK.OKRO_F().NAZ='Bilans zamknięcia'
|| FUN.info('Brak możliwości wybrania okresu: %1\nwybierz inny okres.'@[VATZMDEK.OKRO_F().NAZ]);
   _wy:='OKRO_F'
?};
{? _wy='' & _r_vat='K'
|| _mies:=_pocz~2;
   {? ~(_mies=1 | _mies=4 | _mies=7 | _mies=10)
   || FUN.info('Dla rozliczenia kwartalnego jako "Miesiąc obowiązywania" należy ustawić pierwszy miesiąc kwartału.'@);
      _wy:='OKRO_F'
   ?}
?};
{? _wy=''
||
:: sprawdzenie czy sa deklaracje dla poprawianej/dolaczanej zmiany rozliczenia VAT
   _jest:=exec('is_vat','!zws_par_fask','VAT7','VAT7','VAT7D');
   {? ~_jest
   || _jest:=exec('is_vat','!zws_par_fask','V7','V7M','V7K')
   ?};
   {? _jest
   || {? _a='P'
      || FUN.info('Istnieją wystawione deklaracje w okresie zmiany rozliczenia VAT lub w okresie późniejszym.'
          '\nNie można poprawiać bieżącego rekordu.'@)
      || FUN.info('Istnieją wystawione deklaracje w okresie zmiany rozliczenia VAT lub w okresie późniejszym.'
          '\nNie można dodawać bieżącego rekordu.'@)
      ?};
      _wy:='OKRO_F'
   ?}
?};
VATZMDEK.cntx_psh();
VATZMDEK.index('ROK');
VATZMDEK.prefix(ROK_F.ref());
{? _wy='' & VATZMDEK.first()
|| {!|?
      {? VATZMDEK.OKRO_F().NR>=_nr_okr & (_a='D' | VATZMDEK.ref()<>_ref)
      || FUN.info('Ustawiony okres nie może być wcześniejszy lub równy niż poprzednie zmiany rodzaju rozliczenia VAT.'@);
         _wy:='OKRO_F'
      ?};
      _wy='' & VATZMDEK.next()
   !}
?};
{? _wy=''
|| {? VATZMDEK.last() & (_a='D' | VATZMDEK.prev())
   || {? _r_vat=VATZMDEK.ROZL_VAT
      || FUN.info('Nie można zmienić rozliczenia VAT na takie same rozliczenie jak obowiązywało poprzednio.'@);
         _wy:='ROZL_VAT'
      |? VATZMDEK.ROZL_VAT='K'
      || _m:=VATZMDEK.OKRO_F().POCZ~2; _r:=VATZMDEK.OKRO_F().POCZ~1;
         {? (_pocz~1)=_r & (_pocz~2)>=_m & (_pocz~2)<_m+3
         || FUN.info('Ustawiony okres początku zawiera się w poprzednim rozliczeniu kwartalnym.'@);
            _wy:='OKRO_F'
         ?}
      ?}
   || {? _r_vat=ROK_F.ROZL_VAT
      || FUN.info('Nie można zmienić rozliczenia VAT na takie samo, jakie określono już w parametrach roku.'@);
         _wy:='ROZL_VAT'
      ?}
   ?}
?};
VATZMDEK.cntx_pop();
{? _wy='' & _r_vat='M'
|| _mies:=_pocz~2;
   {? ~(_mies=1 | _mies=4 | _mies=7 | _mies=10)
   || FUN.info('Dla zmiany rozliczenia z kwartalnego na miesięczny jako "Miesiąc obowiązywania"'
         '\nnależy ustawić pierwszy miesiąc kolejnego kwartału.'@);
      _wy:='OKRO_F'
   ?}
?};
_wy


\bedi_vatzmdek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Funkcja przed popraw zmiany rozliczen VAT
::  OLD: \bedi_vatzmdek/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
exec('spr_vatzmdek','!zws_par_fask','P')


\bdel_vatzmdek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Funkcja przed usun zmiany rozliczen VAT
::  OLD: \bdel_vatzmdek/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć bieżący zapis?'@)
|| exec('spr_vatzmdek','!zws_par_fask','U')
?}


\spr_vatzmdek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Funkcja sprawdza czy mozna poprawiac/usuwac rekord zmiany rozliczenia VAT
::   WE: _a - rodzaj redakcji zmiany rozliczenia VAT ('P' - popraw, 'U' - usun)
::  OLD: \spr_vatzmdek/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
:: sprawdzenie czy probujemy poprawiac ostatnia zmiane rozliczenia VAT
_ref:=VATZMDEK.ref();
VATZMDEK.cntx_psh();
VATZMDEK.index('ROK');
VATZMDEK.prefix(ROK_F.ref);
_ok:={? VATZMDEK.last() || _ref=VATZMDEK.ref() ?};
VATZMDEK.cntx_pop();
{? ~_ok
|| {? _a='P'
   || FUN.info('Modyfikacje dozwolone tylko dla ostatniej zmiany trybu rozliczenia VAT.'@)
   || FUN.info('Usuwanie dozwolone tylko dla ostatniej zmiany trybu rozliczenia VAT.'@)
   ?};
   0
||
:: sprawdzenie czy sa deklaracje dla poprawianej/usuwanej zmiany
   VAT_DEK.cntx_psh();
   VAT_DEK.index('VAT_DEK');
   VAT_DEK.prefix(VATZMDEK.ROK_F().POCZ_ROK,'VAT7');
   _jest:=0;
   {? VAT_DEK.first()
   || {!|?
         {? VAT_DEK.TYP='VAT7'
         || {? (VATZMDEK.OKRO_F().POCZ~2)<=(#(VAT_DEK.OKRES+2))
              & (VATZMDEK.OKRO_F().POCZ~1)<=(#(4+VAT_DEK.OKRES))
            || _jest:=1
            ?}
         |? VAT_DEK.TYP='VAT7D'
         || _rok:=#(4+VAT_DEK.OKRES); _v_rok:=(VATZMDEK.OKRO_F().POCZ~1);
            _okr:=#(VAT_DEK.OKRES+1); _v_m:=(VATZMDEK.OKRO_F().POCZ~2);
            _ktory:={? _v_m<=3 || 1 |? _v_m<=6 || 2 |? _v_m<=9 || 3 || 4 ?};
            {? _ktory<=_okr & _v_rok<=_rok || _jest:=1 ?}
         ?};
         ~_jest & VAT_DEK.next()
      !}
   ?};
   VAT_DEK.cntx_pop();
   {? _jest
   || {? _a='P'
      || FUN.info('Istnieją wystawione deklaracje w okresie zmiany rozliczenia VAT lub w okresie późniejszym.'
           '\nNie można poprawiać bieżącego rekordu'@)
      || FUN.info('Istnieją wystawione deklaracje w okresie zmiany rozliczenia VAT lub w okresie późniejszym.'
           '\nNie można usuwać bieżącego rekordu'@)
       ?};
      0
   || 1
   ?}
?}


\aedi_vatzmdek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Funkcja po popraw zmiany rozliczen VAT
::  OLD: \aedi_vatzmdek/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
{? VATZMDEK.edit("exec('chk_vatzmdek','!zws_par_fask','P')")
|| VATZMDEK.put
?}


\adel_vatzmdek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Funkcja po akcji usun zmiany rozliczen VAT.
::  OLD: \adel_vatzmdek/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
VATZMDEK.del;
1


\prz_r_dl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.20]
:: OPIS: Funkcja sprawdza, czy mozna edytowac dlugosc syntetyki w danym roku
::       w zaleznosci od tego, czy w tym roku jest przynajmniej jedno
::       konto syntetyczne
::    WY: 1 - mozna edytowac
::        0 - nie mozna
::  OLD: \prz_r_dl/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
KS.cntx_psh(); KS.index('SYM'); KS.prefix(ROK_F.ref());
_edyt:=~KS.first();
KS.cntx_pop();
_edyt


\dlu_syn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [??.??]
:: OPIS: Sprawdza długość syntetyki w roku
::  OLD: \dlu_syn/synt.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ROK_F.SYNT<=0) | (ROK_F.SYNT>6)
|| FUN.info('Długość syntetyki może przybrać wartości od 1 do 6.'@); 0
|| 1
?}


\pp_sep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.20]
:: OPIS: Formula przed redakcja pola SEP tabeli ROK_F. Uzywana tylko w FIKS-ie, sprawdza
::       czy w danym roku sa wprowadzone jakies pozycje dokumentow.
::   WY: 1 -  pole mozna redagowac, 0 - nie mozna
::  OLD: \pp_sep/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
_znacz:=1;
{? ROK_F.SEP=','
|| KS.cntx_psh(); KS.index('SYM'); KS.prefix(ROK_F.ref());
   BUD.cntx_psh(); BUD.index('KS');
   {? KS.first()
   || {! |?
         BUD.prefix(KS.ref());
         {? BUD.first()
         || _dlkon:=ROK_F.SYNT;
            {! |?
               _dlkon+=(BUD.SLU().SLU().DL+1);
               {? _dlkon>35 || _znacz:=0 ?};
               _znacz=1 & BUD.next()
            !}
         ?};
         KS.next()
      !}
   ?};
   KS.cntx_pop(); BUD.cntx_pop()
?};
{? _znacz
|| POZ.cntx_psh(); OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
   {? OKRO_F.first()
   || {! |?
         POZ.use('pozy'+ROK_F.KOD+form(OKRO_F.NR, -2)); POZ.prefix();
         _znacz:=(~POZ.first());
         OKRO_F.next() & _znacz
      !}
   ?};
   POZ.cntx_pop(); OKRO_F.cntx_pop()
?};
_znacz


\ae_sep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2006]
:: OPIS: Po redakcji pola ROK_F.SEP
::  OLD: \ae_sep/skid_edk.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()=''
|| {? FUN.ask('Czy znakiem separatora konta analitycznego ma być odstęp?'@)
   || fld(' '); 1
   || FUN.info('Niewypełnione pole.'@); 0
   ?}
|| 1
?}


\pored_pd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.20]
:: OPIS: Formula po redakcja pola PD tabeli ROK_F. Uzywana tylko w FIKS-ie.
::   WY: 1 -  zatwierdzona redakcja, 0 - nie zatwierdzona
::  OLD: \pored_pd/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROK_F.PD>100 | ROK_F.PD<0
|| FUN.info('Należy wprowadzić wartość z przedziału 0-100.'@); 0
|| ROK_F.PD:=ROK_F.PD$2; 1
?}


\beprewsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Przed wyswietleniem pola PREWSK tabeli ROK_F
::  OLD: \beprewsk/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_SKID.get(83)='T'


\aeprewsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Po redakcji pola PREWSK tabeli ROK_F
::  OLD: \aeprewsk/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
fld(fld()$2);
{? fld()<0 | fld()>100
|| FUN.info('Prewskaźnik VAT powinien należeć do przedziału 0-100.'@); 0
|| 1
?}


\aeprcvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009+]
:: OPIS: Po redakcji pola PROC_VAT tabeli ROK_F
::  OLD: \aeprcvat/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
fld(fld()$2);
{? fld()<0 | fld()>100
|| FUN.info('Procent struktury VAT powinien należeć do przedziału 0-100.'@); 0
|| 1
?}


\be_rozl_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2011]
:: OPIS: Przed redakcja pola ROK_F.ROZL_VAT
::  OLD: \be_rozl_vat/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
VAT_DEK.cntx_psh();
VAT_DEK.index('VAT_DEKR');
VAT_DEK.prefix('VAT7',ROK_F.POCZ_ROK);
_wynik:=VAT_DEK.first();
VAT_DEK.prefix('VAT7D',ROK_F.POCZ_ROK);
_wynik+=VAT_DEK.first();
VAT_DEK.cntx_pop();
VATZMDEK.cntx_psh();
VATZMDEK.index('ROK');
VATZMDEK.prefix(ROK_F.ref());
_wynik+=VATZMDEK.first();
VATZMDEK.cntx_pop();
~_wynik


\ae_rozl_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2011]
:: OPIS: Po redakcji pola ROK_F.ROZL_VAT
::  OLD: \ae_rozl_vat/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~-fld()<>'K' & ~-fld()<>'M'
|| FUN.info('Nieprawidłowa wartość pola.\n'
            'Dopuszczalne wartości:     \n'
            'M - rozliczenie miesięczne \n'
            'K - rozliczenie kwartalne  '@);
   0
|| fld():=~-fld();
   1
?}


\be_rok_f_plangr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [12.10]
:: OPIS: Przed redakcja ROK_F.PLAN_GR
::  OLD: \be_rok_f_plangr/skid_kns.fml
::----------------------------------------------------------------------------------------------------------------------
{? REF.WFIRM=0
|| 0
|? ROK_F.PLAN_GR='T' | var_pres('plan_gr')>0 & plan_gr='T'
|| 1
|| _ok:=1;
   OKRO_F_G.index('ROK_F'); OKRO_F_G.prefix(ROK_F.ref());
   {? OKRO_F_G.first()
   || OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
      _size:=OKRO_F.size();
      _ok:=OKRO_F_G.size()=_size
   || _ok:=0
   ?};
   {? ~_ok
   || FUN.info('Nie wypełniono powiązań lat bilansowych grupy kapitałowej i firmy.'@)
   ?};
   {? _ok
   || KS.index('SYM'); KS.prefix(ROK_F.ref());
      _ok:=~KS.first()
   ?};
   {? _ok
   || ALG_PAR.index('ROK'); ALG_PAR.prefix(ROK_F.ref());
      _ok:=~ALG_PAR.first()
   ?};
   {? _ok
   || AV.index('AV'); AV.prefix(ROK_F.ref());
      _ok:=~AV.first()
   ?};
   {? _ok
   || AUTOKSIE.index('NAZ'); AUTOKSIE.prefix(ROK_F.ref());
      _ok:=~AUTOKSIE.first()
   ?};
   _ok
?}


\be_rok_naz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Przed redakcja pola ROK_F.NAZ
::----------------------------------------------------------------------------------------------------------------------
~exec('spr_dok1','!zws_par_fask')


\spr_dok1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [??]
:: OPIS: Sprawdza czy w roku (ustawionym w buforze) są zapisy zaakceptowane.
::   WY: 0 - nie ma dokumentow zaakceptowanych
::       1 - są dokumenty zaakceptowane
::  OLD: \spr_dok1/kon_syn.fml
::----------------------------------------------------------------------------------------------------------------------
_jest:=0;
ROK_F.cntx_psh(); DOK.cntx_psh();
OKRO_F.cntx_psh(); OKRO_F.index('ZAM'); OKRO_F.prefix(ROK_F.ref());
{? OKRO_F.first()
|| {! |?
      DOK.use('doku'+ROK_F.KOD+form(OKRO_F.NR,-2));
      DOK.index('PR'); DOK.prefix('T');
      {? DOK.first() || _jest:=1 ?};
      OKRO_F.next() & ~_jest
   !}
?};
OKRO_F.cntx_pop(); ROK_F.cntx_pop(); DOK.cntx_pop();
_jest


\ksg_ko
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Wydruki planu kont
::  OLD: \ksg_ko/fiks.fml
::----------------------------------------------------------------------------------------------------------------------
SSTALE.AO().ROK();
exec('rep_exec','#b_report','','fks_ko*',,1)


\bl_ks_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Wartosc poczatkowa pola KS_KAT.KS_ZEST
::  OLD: \bl_ks_zest/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab()=KS || KS.KS_ZEST || KS_ZEST.ref() ?}


\ae_ks_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Po redakcji KS.KS_ZEST
::  OLD: \ae_ks_zest/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS.KS_ZEST<>KS.KS_KAT().KS_ZEST
|| KS.KS_KAT:=null
?};
win_disp();
1


\bv_ks_kat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Przed wyswietleniem KS.KS_KAT
::  OLD: \bv_ks_kat/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS.KS_ZEST=null
|| exec('findfnrd','color')
|| ''
?}


\be_ks_kat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Przed redagowaniem KS.KS_KAT
::  OLD: \be_ks_kat/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
KS.KS_ZEST<>null


\set_zest_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Akcja ustawienia zespolu i kategorii kont
::  OLD: \set_zest_ks/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS.sel_size()
|| KS.KS_ZEST:=KsZest;
   KS.KS_KAT:=KsKat;
   KS.put()
|| _win:=KS.win_edit('?');
   KS.win_edit('ZEST');
   {? KS.edit()
   || KS.put()
   ?};
   KS.win_edit(_win)
?}


\bg_set_zest_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Grupa przed akcja ustawiania zespolu i kategorii kont
::  OLD: \bg_set_zest_ks/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
KS.cntx_psh();
KS.win_edit('ZEST');
KS.KS_ZEST:=null;
KS.KS_KAT:=null;
{? KS.edit()
|| KsZest:=KS.KS_ZEST;
   KsKat:=KS.KS_KAT;
   _ok:=1
?};
KS.cntx_pop();
_ok


\bd_ks_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Przed usunieciem zespolu kont
::  OLD: \bd_ks_zest/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS_ZEST.count()>0
|| FUN.info('Zespół kont użyty w danych.'@); 0
|| 1
?}


\ar_ks_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Rekord po tabeli KS_ZEST
::  OLD: \ar_ks_zest/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
exec('chk_ks_zest','konto',-menu_txt()<>'popraw')


\bd_ks_kat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Przed usunieciem kategorii kont
::  OLD: \bd_ks_kat/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? KS_KAT.count()>0
|| FUN.info('Kategoria zespołu kont użyta w danych.'@); 0
|| 1
?}


\ar_ks_kat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Rekord po tabeli KS_KAT
::----------------------------------------------------------------------------------------------------------------------
exec('chk_ks_kat','konto',-menu_txt()<>'popraw')


\ks_kat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Kategorie zespołu kont
::  OLD: \ks_kat/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
KS_KAT.index('KOD');
KS_KAT.prefix(KS_ZEST.ref());
KS_KAT.win_sel('WER');
KS_KAT.hdr_sel();
KS_KAT.hdr_sel(' zespołu %1 - %2'@[KS_ZEST.KOD,KS_ZEST.OPIS]);
KS_KAT.select()


\bw_ks_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Okno przed tabeli KS_ZEST
::  OLD: \bw_ks_zest/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? -(6+menu_txt())='szukaj'
|| KS_ZEST.actions('WER','dpuT:d',,1)
?}


\aw_ks_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Okno po tabeli KS_ZEST
::  OLD: \aw_ks_zest/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
KS_ZEST.actions('WER');
1


\bw_ks_kat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Okienko przed tabeli KS_KAT
::  OLD: \bw_ks_kat/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? -(6+menu_txt())='szukaj'
|| KS_KAT.actions('WER','dpuT:d',,1)
?}


\aw_ks_kat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Okienko po tabeli KS_KAT
::  OLD: \aw_ks_kat/kon_zest.fml
::----------------------------------------------------------------------------------------------------------------------
KS_KAT.actions('WER');
1


\chk_zksr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Sprawdza czy sa dokumenty z powiązanymi środkami trwałymi dla rodzaju dokumentu
::   WY: 0 - nie ma; 1 - sa
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
VAR_DEL.delete('__t_dkrj');
__t_dkrj:=sql('select DOK.NK, DOK_REJ.NAZ, DOK.REFERENCE as REF from @DOK join DOK_REJ where DOK.DOK_REJ=:_a',DOK_REJ.ref());
{? __t_dkrj.first()
|| {! |?
      DOK.cntx_psh();
      DOK.prefix();
      {? DOK.seek(__t_dkrj.REF,ref_name(__t_dkrj.REF))
      || _t_srdz:=sql('select * from @SRDZ where SRDZ.DOK_REF='':_a''',DOK.uidref());
         {? _t_srdz.first() || _wy:=1 ?};
         {? type_of(_t_srdz)>0 || obj_del(_t_srdz) ?}; &_t_srdz
      ?};
      DOK.cntx_pop();
      _wy=0 & __t_dkrj.next()
   !}
?};
VAR_DEL.delete('__t_dkrj');
_wy


\aezmtroz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Po redakcji KS.OBTYPROZ
::----------------------------------------------------------------------------------------------------------------------
exec('ae_ks_troz','!zws_par_fask');
1


\bv_ks_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Przed wyświetleniem KS.ROZR
::----------------------------------------------------------------------------------------------------------------------
KS.efld_opt(KS.win_edit('?'),
   'enable='+$(KS.ROZR<>'Z' & (KS.OBTYPROZ=0 | KS.T_ROZ<>'' &'NAL,ZOB'*KS.T_ROZ>0) )
,KS,'SP');
~~


\ae_ks_troz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Po redakcji pola KS.T_ROZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? KS.OBTYPROZ=1 & (KS.T_ROZ='' | 'NAL,ZOB'*KS.T_ROZ=0)
|| KS.SP:='N'
?};
win_disp();
~~


\bv_dr_sp_przel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Przed wyświetleniem DOK_REJ.SP_PRZEL
::----------------------------------------------------------------------------------------------------------------------
_enabled:=DOK_REJ.SLO().KOD='PROSTY';
DOK_REJ.efld_opt('RED','enable='+$_enabled,DOK_REJ,'SP_PRZEL');
~~


\bl_akt_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.14]
:: OPIS: Wartość początkowa pola AKT_ROZ
::----------------------------------------------------------------------------------------------------------------------
_text:='N';
ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ');
ROK_F.prefix(REF.FIRMA);
{? ROK_F.seek(ROK_F.ref())
|| {? ROK_F.prev()
   || {? ROK_F.AKT_ROZ='T' || _text:='T' || _text:='N' ?}
   || _text:='T'
   ?}
|| _text:='N'
?};
ROK_F.cntx_pop();
_text


\be_akt_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.14]
:: OPIS: Przed redakcją pola AKT_ROZ
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ');
ROK_F.prefix(REF.FIRMA);
{? ROK_F.next()
|| {? ~(ROK_F.AKT_ROZ='T') || _ok:=1 ?}
|| _ok:=1
?};
ROK_F.cntx_pop();
_ok


\is_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Czy istniej deklaracja wskazanego typu
::   WE: _a - prefix
::       _b - miesięczna
::       _c - kwartalna
::  OLD: \is_vat/skid_rok.fml
::----------------------------------------------------------------------------------------------------------------------
VAT_DEK.cntx_psh();
VAT_DEK.index('VAT_DEK');
VAT_DEK.prefix(VATZMDEK.ROK_F().POCZ_ROK,_a);
_jest:=0;
{? VAT_DEK.first()
|| {!|?
      {? VAT_DEK.TYP=_b | 1+(VAT_DEK.OKRES+3)='/'
      || {? (VATZMDEK.OKRO_F().POCZ~2)<=(#(VAT_DEK.OKRES+2))
            & (VATZMDEK.OKRO_F().POCZ~1)<=(#(4+VAT_DEK.OKRES))
         || _jest:=1
         ?}
      |? VAT_DEK.TYP=_c
      || _rok:=#(4+VAT_DEK.OKRES); _v_rok:=(VATZMDEK.OKRO_F().POCZ~1);
         _okr:=#(VAT_DEK.OKRES+1); _v_m:=(VATZMDEK.OKRO_F().POCZ~2);
         _ktory:={? _v_m<=3 || 1 |? _v_m<=6 || 2 |? _v_m<=9 || 3 || 4 ?};
         {? _ktory<=_okr & _v_rok<=_rok || _jest:=1 ?}
      ?};
      ~_jest & VAT_DEK.next()
   !}
?};
VAT_DEK.cntx_pop();
_jest


\ks_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KW [23.25]
:: OPIS: Okienko wyświetlające konta syntetyczne z wierszami sprawozdania.
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('KSSPRAN');
KSSPRAN:=tab_tmp(5,'SYM','STRING[6]','Symbol'
                 ,'NAZ','STRING[60]','Nazwa'
                 ,'TYP','STRING[2]','Typ'
                 ,'GRUPA','STRING[10]','Sprawozdanie'
                 ,'WIERSZ','STRING[80]','Wiersz sprawozdania'
                 ,'KS_REF','STRING[20]','KS_REF'
                );
KS.cntx_psh(); KS.index('SYM'); KS.prefix(ROK_F.ref());
KSSPRAN.fld_attr('KS_REF',2,2);
_bool:=0;
_bool_2:=0;
{? KS.first()
|| {! |?
      {? KS.ref()=WYDRUKI.KSOD
      || _bool_2:=1;
          {! |?
             KSSPRAN.KS_REF:=$KS.ref();
             KSSPRAN.SYM:=KS.SYM;
             KSSPRAN.NAZ:=KS.NAZ;
             KSSPRAN.TYP:=KS.TYP;
             {? WYDRUKI.KSDO<>KS.ref()
             || KSSPRAN.add()
             || KSSPRAN.add();
                _bool:=1
             ?};
             KS.next() & _bool=0
          !}
      ?};
      KS.next() & _bool_2=0
   !}
?};
KS.cntx_pop();
_ind1:=KSSPRAN.ndx_tmp(,,'SYM',,); _ind2:=KSSPRAN.ndx_tmp(,,'GRUPA',,);
KSSPRAN.index(_ind1);
exec('ks_spr_put','!zws_par_fask');
{? ZAKR.POD='T' || KSSPRAN.index(_ind2); KSSPRAN.prefix(GR_SIK.SKROT) ?};
_win:=KSSPRAN.mk_sel('Konta systetyczne z roku %1'[ROK_F.NAZ],'P',,'ksqwer',,,,,'U','T');
KSSPRAN.hdr_sel('Konta syntetyczne z roku '+ROK_F.NAZ);
KSSPRAN.win_fld(_win,,'SYM',,,6,0,0,'Symbol'@@,0,'Symbol konta syntetycznego'@,,);
KSSPRAN.win_fld(_win,,'NAZ',,,50,0,0,'Nazwa',0,'Nazwa konta syntetycznego'@,,);
KSSPRAN.win_fld(_win,,'GRUPA',,,,,,'Sprawozdanie');
KSSPRAN.win_fld(_win,,'WIERSZ',,,,0,1,'Wiersz sprawozdania'@@,0,'Nazwa powiązanego wiersza sprawozdania'@,,);
KSSPRAN.win_act(_win,,'Formuła','&Dołącz do sprawozdania'@@,,,"exec('ks2defw2','kon_syn')","",0,0,"","",,0,'mobile=1');
KSSPRAN.win_act(_win,,'Formuła','&Opcje przeglądania'@@,,,"exec('users_ks2','kon_syn')","",0,0,"","",,0,'mobile=1');
KSSPRAN.win_act(_win,1,'Formuła','&Opcje przeglądania'@@,,,"exec('users_ks2','kon_syn')","",0,0,"","",,0,'mobile=1');
KSSPRAN.win_act(_win,,'Formuła','&Szczegóły'@@,,,"exec('ks_in_gr_sik2','kon_syn')","",,,"","",,,'mobile=1');
KSSPRAN.win_act(_win,,'Kolejność');
KSSPRAN.actions(_win,,'D:D');
KSSPRAN.win_sel(_win);
KSSPRAN.select();
KSSPRAN.ndx_drop();
VAR_DEL.delete('KSSPRAN');
&_ind1; &_ind2


\ks_spr_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KW [23.25]
:: OPIS: Formuła uzupełniająca wiersz sprawozdania dla tymczasowej tabeli KKSPRAN.
::----------------------------------------------------------------------------------------------------------------------
KSSPRAN.cntx_psh();
_ind1:=KSSPRAN.ndx_tmp(,,'SYM',,);
KSSPRAN.index(_ind1);
GR_SIK.cntx_psh(); GR_SIK.prefix();
{? KSSPRAN.first()
|| _licznik:=1;
   _size:=KSSPRAN.size;
   {! |?
      _prgs:=100*_licznik/_size;
      progress(_prgs,'\nTrwa przetwarzanie danych ('+$int(_prgs)+'%)\n', 'Przetwarzanie');
      _opi:=_spr:='';
      {? KSSPRAN.TYP='BL' | KSSPRAN.TYP='BW'
      || ALG_PAR.index('KS_IN_P1');
         _gr:={? KSSPRAN.TYP='BL' || USERS_KS.SPR_BIL || USERS_KS.SPR_WYN ?};
         {? _gr
         || ALG_PAR.prefix('T',_gr,KSSPRAN.SYM);
            {? ALG_PAR.first()
            || _opi:=ALG_PAR.DEFW().NAZWA; _spr:=ALG_PAR.DEFW().GRUPA().SKROT
            ?};
            {? _opi='' & USERS_KS.ALL='T'
            || GR_KOL.index('LP'); GR_KOL.prefix(_gr);
               DEFW.index('GRUPA'); DEFW.prefix(_gr);
               _ref:=null;
               {? DEFW.first()
               || {!
                  |? {? GR_KOL.first()
                     || {!
                        |? _ref:=exec('ks_in_gr_sik3','!zws_par_fask');
                           _ref=null & GR_KOL.next()
                        !}
                     ?};
                  _ref=null & DEFW.next()
                  !}
               ?};
               {? _ref
               || DEFW.prefix();
                  {? DEFW.seek(_ref)
                  || _opi:=DEFW.NAZWA; _spr:=ALG_PAR.DEFW().GRUPA().SKROT
                  ?}
               ?}
            ?}
         ?}
      ?};
      KSSPRAN.WIERSZ:=_opi;
      KSSPRAN.GRUPA:=_spr;
      KSSPRAN.put();
      _licznik+=1;
      KSSPRAN.next()
   !}
?};
prgs_clr;
KSSPRAN.cntx_pop();
KSSPRAN.ndx_drop(_ind1);
GR_SIK.cntx_pop()


\ks_spr_put2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KW [23.25]
:: OPIS: Formuła uzupełniająca wiersz sprawozdania dla danego rekoru.
::----------------------------------------------------------------------------------------------------------------------
ALG_PAR.cntx_psh();
GR_SIK.cntx_psh(); GR_SIK.prefix();
_opi:=_spr:='';
{? KSSPRAN.TYP='BL' | KSSPRAN.TYP='BW'
|| ALG_PAR.index('KS_IN_P1');
   _gr:={? KSSPRAN.TYP='BL' || USERS_KS.SPR_BIL || USERS_KS.SPR_WYN ?};
   {? _gr
   || ALG_PAR.prefix('T',_gr,KSSPRAN.SYM);
      {? ALG_PAR.first()
      || _opi:=ALG_PAR.DEFW().NAZWA; _spr:=ALG_PAR.DEFW().GRUPA().SKROT
      ?};
      {? _opi='' & USERS_KS.ALL='T'
      || GR_KOL.index('LP'); GR_KOL.prefix(_gr);
         DEFW.index('GRUPA'); DEFW.prefix(_gr);
         _ref:=null;
         {? DEFW.first()
         || {!
            |? {? GR_KOL.first()
               || {!
                  |? _ref:=exec('ks_in_gr_sik3','!zws_par_fask');
                     _ref=null & GR_KOL.next()
                  !}
               ?};
               _ref=null & DEFW.next()
            !}
         ?};
         {? _ref
         || DEFW.prefix();
            {? DEFW.seek(_ref)
            || _opi:=DEFW.NAZWA;
               _spr:=ALG_PAR.DEFW().GRUPA().SKROT
            ?}
         ?}
      ?}
   ?}
?};
KSSPRAN.WIERSZ:=_opi;
KSSPRAN.GRUPA:=_spr;
KSSPRAN.put();
GR_SIK.cntx_pop();
ALG_PAR.cntx_pop()


\af_rej_slo1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [22.26]
:: OPIS: Akcja Formuła Po okna SLO1 tabeli REJ
::----------------------------------------------------------------------------------------------------------------------
sel_exit()


:Sign Version 2.0 jowisz:1045 2024/01/18 18:05:34 99298f77508f3027436fb0c964d98bd3d69e90c29c4d4de7a421fc1ebabdd24e6b48a720fd7dc60558e7c9eba16a55cd8ebde028ccc00d8171a77a521ec7900ae72080d180c0562cbb8392659ecca4fe3ef59d396a42e11ea651123cdff8deca4cb07d377576b649ea7ad293e324a01fc7489dc3582b6da9ad951fc6d741cf46
