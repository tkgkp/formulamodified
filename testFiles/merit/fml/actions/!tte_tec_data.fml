:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !tte_tec_data.fml
:: Utworzony: 19.05.2015
:: Autor:
::======================================================================================================================
:: Zawartość: Formuły czynności TTE_TEC_DATA - Archiwizacja karty technologicznej
::            Uwaga: większość kodu jest wspólna z czynnością TTE_WTE_DATA - w przypadku zmian modyfikować oba pliki
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Główna formuła czynności archiwizacji karty technologicznej (TTE_TEC_DATA)
::       Zadaniem formuły jest zarchiwizowanie całej karty technologicznej
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
_context:=params_get().context;

::# permissions=ODDZ

:: PARAMETRY WE:
::# kind=WE, symbol=TKTL, type=_TKTL, name=Wskazanie na kartę technologiczną, required=T, keyref=T
{? var_pres('TKTL',_in)<>type_of(~~) & var_pres('TKTL',_in)<>type_of(null()) || return() ?};
{? var_pres('TKTL',_in)=type_of(~~) || return() ?};

:: PARAMETRY WY:
::# kind=WY, symbol=TKTL_ARCH, type=_TKTL, name=Wskazanie na archiwalną kartę technologiczną, required=N
{? var_pres('TKTL_ARCH',_out)<>type_of(~~) & var_pres('TKTL_ARCH',_out)<>type_of(null()) || return() ?};

VAR.A_TORW:='T';

_can_continue:=1;
_clean_result:=params_exec('clean','!tte_tec_data',_mp,_in);
_can_continue:=_clean_result.RESULT;
_tktl:=_clean_result.TKTL;

{? _can_continue>0
||
   {? _tktl<>null()
   ||

      {? exec('FindAndGet','#table',TKTL,_tktl,,"TORW",'')<>'T'
      || _msg:='Niezgodność wywołania czynności.\nNie można wykonać archiwizacji dla wzorca technologii.';
         {? _mp.isGroup()
         || KOMM.add(_msg,2,,1)
         || FUN.emsg(_msg)
         ?};
         _mp.error(_msg)
      ||
         exec('tktl_cntx_psh','tech_common');
         exec('tktl_use','tech_common',ref_name(_tktl)+3);
         TKTL.clear();

         {? TKTL.seek(_tktl)
         || VAR.A_KTL:=TKTL.ref();

::          Wywołanie z listy ToDo umożliwia podejrzenie elementów karty przed jej archiwizacją
            {? _mp.pathTodo() & ~_mp.isAutoRun()
            || _mp.keep();
               {? exec('tktl_lock','tech_common',,'N') &
                  exec('tktl_lock','tech_common',,'O') &
                  exec('tktl_lock','tech_common',,'S') &
                  exec('tktl_lock','tech_common',,'P')
               || VAR.GRUPA:='N';
                  _red:=exec('win_edit','!tte_tec_data');
                  TKTL.win_edit(_red);
                  TKTL.edit();
                  TKTL.win_edit();
                  TKTL.win_edel(_red)
               ?};
               exec('tktl_unlock','tech_common',,'N');
               exec('tktl_unlock','tech_common',,'O');
               exec('tktl_unlock','tech_common',,'S');
               exec('tktl_unlock','tech_common',,'P')

            |? _mp.akcja()=''
            || _ref:=exec('tktl_arch_act','!tte_tec_data',TKTL.ref(),_mp,-1,_mp.isGroup());
               {? _ref<>null()
               || _out.TKTL_ARCH:=_ref;
                  _mp.save(,_out);
                  _mp.done()
               ?}

            |? _mp.akcja()='MENU'
            || _variant:=0;
               {? _mp.isGroup()
               || _variant:=-1
               ?};
               _ref:=exec('tktl_arch_act','!tte_tec_data',TKTL.ref(),_mp,_variant,_mp.isGroup());
               {? _ref<>null()
               || _out.TKTL_ARCH:=_ref;
                  _mp.save(,_out);
                  _mp.done()
               ?}

            |? _mp.akcja()='BUTTON'
            || _variant:=0;
               {? _mp.isGroup()
               || _variant:=-1
               ?};
               _ref:=exec('tktl_arch_act','!tte_tec_data',TKTL.ref(),_mp,_variant,_mp.isGroup());
               {? _ref<>null()
               || _out.TKTL_ARCH:=_ref;
                  _mp.save(,_out);
                  _mp.done()
               ?}
            ?}
         ?};
         exec('tktl_cntx_pop','tech_common')
      ?}

   || _msg:='Nie przekazono albo usunięto kartę technologiczną.';
      FUN.emsg(_msg);
      _mp.error(_msg)
   ?}
?};
{? type_of(_context)>0 & var_pres('TKTL_ARCH',_context)>=0
|| _context.TKTL_ARCH:=_out.TKTL_ARCH
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Opis dla czynności archiwizacji karty technologicznej (TTE_TEC_DATA)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_desc:='';
_keyRefs:=_mp.getRefs();
_in:=_mp.load(exec('kind_in','#b_port'));

:: jest rekord kluczowy to ustawiam odpowiedniego TKTL
{? var_pres('[1]',_keyRefs)
|| _tmp:=exec('FindAndGet','#table',TKTL,_keyRefs[1],,"NRK+' ||| '+WER",'');
   _tab_tmp:=spli_str(_tmp,' ||| ');
   _desc:={? _tmp<>'' || 'Zarchiwizuj kartę technologiczną %1 wer. %2'@@[_tab_tmp[1],_tab_tmp[2]] || '' ?}
::|| _desc:=exec('FindAndGet','#table',TKTL,_keyRefs[1],,"'Zarchiwizuj kartę technologiczną %1 wer. %2'[NRK,WER]",'')

:: jest parametr wejściowy to ustawiam odpowiedniego TKTL
|? var_pres('TKTL',_in)
|| _tmp:=exec('FindAndGet','#table',TKTL,_in.TKTL,,"NRK+' ||| '+WER",'');
   _tab_tmp:=spli_str(_tmp,' ||| ');
   _desc:={? _tmp<>'' || 'Zarchiwizuj kartę technologiczną %1 wer. %2'@@[_tab_tmp[1],_tab_tmp[2]] || '' ?}
::|| _desc:=exec('FindAndGet','#table',TKTL,_in.TKTL,,"'Zarchiwizuj kartę technologiczną %1 wer. %2'[NRK,WER]",'')

?};
_desc


\action_menu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Archiwizacja karty technologicznej - właściwa akcja z menu okna wertowania
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
{? TKTL.sel_size()=0
||
   {? TKTL.ARCH='T'
   || FUN.info('Nie można wykonać funkcji — karta jest już archiwalna.'@)
   || _args:=exec('mp_run_a','#b__box');
      _args.ACT_UID:='TTE_TEC_DATA';
      _args.UIDREF:=TKTL.uidref();
      _args.AKCJA:='MENU';
      _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
      _args.PROC_START:='N';

      exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'TKTL',TKTL.ref());

      _result:=exec('mp_run','#b__box',_args)
   ?}
||
   {? TKTL.ARCH='T'
   || KOMM.add('Nie można wykonać funkcji. Karta: %1 jest już archiwalna.'@[TKTL.NRK])
   || _args:=exec('mp_run_a','#b__box');
      _args.ACT_UID:='TTE_TEC_DATA';
      _args.UIDREF:=TKTL.uidref();
      _args.AKCJA:='MENU';
      _args.GRUPA:='T';
      _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
      _args.PROC_START:='N';

      exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'TKTL',TKTL.ref());

      _result:=exec('mp_run','#b__box',_args)
   ?}
?}


\action_menu_group_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Archiwizacja karty technologicznej - akcja 'przed grupą' z menu okna wertowania
::----------------------------------------------------------------------------------------------------------------------
{? exec('chk_role','#b__box',OPERATOR.USER,'TTE_TEC_DATA')
|| _res:=FUN.ask(
      'Ilość kart do archiwizacji: %1'
      '.\nOperacja może być czasochłonna.\n\nCzy kontynuować?'@[$TKTL.sel_size()]
   );
   {? _res
   || VAR.GRUPA:='T';
      KOMM.init(250,,'Archiwizacja technologii'@,'',,,0)
   ?}
|| FUN.info('Brak uprawnień do wykonania archiwizacji.'@);
   _res:=0
?};
_res


\action_menu_group_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Archiwizacja karty technologicznej  - akcja 'po grupie' z menu okna wertowania
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
VAR.GRUPA:='N';
~~


\action_button
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Archiwizacja karty technologicznej - właściwa akcja z przycisku okna redakcyjnego
::----------------------------------------------------------------------------------------------------------------------
_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:='TTE_TEC_DATA';
_args.CONTEXT:=obj_new('TKTL_ARCH');
_args.CONTEXT.TKTL_ARCH:=null();
_args.UIDREF:=TKTL.uidref();
_args.AKCJA:='BUTTON';
_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
_args.PROC_START:='N';

exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'TKTL',TKTL.ref());

exec('mp_run','#b__box',_args);

_res:='';
{? exec('FindAndGet','#table',TKTL,_args.CONTEXT.TKTL_ARCH,,"ARCH",'')='T'
|| _res:='key:Esc'
?};
_res


\tktl_arch_act
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Archiwizacja karty technologicznej (podstawowy kod)
::   WE: _a - TKTL.ref()
::       _b - obj_new() - obiekt odpowiedzialny za obsługę procesu
::       _c - INTEGER - wariant działania:
::                                           -1 - akceptacja bez pytania
::                                            0 - wyświetlać tylko pytanie o akceptację karty
::                                            1 - wyświetlać dodatkowo pytanie o podgląd karty
::      [_d] - INTEGER - [0]/1 - czy akcja grupowa?
::   WY: null/ref technologii
::----------------------------------------------------------------------------------------------------------------------
_tktl:=_a;
_mp:=_b;
_variant:=_c;

_grupa:=0;
{? var_pres('_d')=type_of(0)
|| _grupa:=_d
?};

_res:=null();

TKTL.cntx_psh();
TKTL.clear();
{? TKTL.seek(_tktl)
|| _uidref:=TKTL.uidref();
   _txt:='Karta: %1 już zarchiwizowana.'@[exec('record','#to_string',_tktl)];
   {? TKTL.ARCH='T'
   || {? _grupa>0
      || KOMM.add(_txt,2,,1)
      || FUN.emsg(_txt)
      ?}
   || {? _variant=-1
      ||
::       Sprawdzana możliwość zablokowania karty w każdym zakresie
         {? exec('tktl_lock','tech_common',#_tktl,'N',0) &
            exec('tktl_lock','tech_common',#_tktl,'O',0) &
            exec('tktl_lock','tech_common',#_tktl,'S',0) &
            exec('tktl_lock','tech_common',#_tktl,'P',0)
         || _res:=exec('tktl_arch_act','tech_arch',TKTL.ref(),'ARCHIWUM',0);
            {? _res<>null()
            || exec('uidref_update','#b__box',_uidref,exec('FindAndGet','#table',TKTL,_res,,"uidref()",''))
            ?}
         ?}
      |? _variant=0
      || {? FUN.ask('Czy archiwizować kartę %1 wer. %2?'@[TKTL.NRK,TKTL.WER])
         ||
::          Sprawdzana możliwość zablokowania karty w każdym zakresie
            {? exec('tktl_lock','tech_common',#_tktl,'N') &
               exec('tktl_lock','tech_common',#_tktl,'O') &
               exec('tktl_lock','tech_common',#_tktl,'S') &
               exec('tktl_lock','tech_common',#_tktl,'P')
            || _res:=exec('tktl_arch_act','tech_arch',TKTL.ref(),'ARCHIWUM',0);
               {? _res<>null()
               || exec('uidref_update','#b__box',_uidref,exec('FindAndGet','#table',TKTL,_res,,"uidref()",''))
               ?}
            ?}
         ?}

      |? _variant=1
      || _choice:=FUN.choice('Czy archiwizować kartę %1 wer. %2?'@[TKTL.NRK,TKTL.WER],,'Podgląd'@,'Tak'@);
         {? _choice=1
         || _mp.keep();
            VAR.GRUPA:='N';
            _red:=exec('win_edit','!tte_tec_data');
            TKTL.win_edit(_red);
            TKTL.edit();
            TKTL.win_edit();
            TKTL.win_edel(_red)
         |? _choice=2
         ||
::          Sprawdzana możliwość zablokowania karty w każdym zakresie
            {? exec('tktl_lock','tech_common',#_tktl,'N') &
               exec('tktl_lock','tech_common',#_tktl,'O') &
               exec('tktl_lock','tech_common',#_tktl,'S') &
               exec('tktl_lock','tech_common',#_tktl,'P')
            || _res:=exec('tktl_arch_act','tech_arch',TKTL.ref(),'ARCHIWUM',0);
               {? _res<>null()
               || exec('uidref_update','#b__box',_uidref,exec('FindAndGet','#table',TKTL,_res,,"uidref()",''))
               ?}
            ?}
         ?}

      ?};
      exec('tktl_unlock','tech_common',#_tktl,'N');
      exec('tktl_unlock','tech_common',#_tktl,'O');
      exec('tktl_unlock','tech_common',#_tktl,'S');
      exec('tktl_unlock','tech_common',#_tktl,'P')
   ?}
?};
TKTL.cntx_pop();

_res


\tktl_zarchiwum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Przywrócenie karty technologicznej z archiwum
::   WE: [_a] - TKTL.ref() / bieżąca karta
::   WY: null/ref powstałej technologii
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) || _tktl:=_a || _tktl:=TKTL.ref() ?};

_res:=null();

TKTL.cntx_psh();
TKTL.clear();
{? TKTL.seek(_tktl)
|| _uidref:=TKTL.uidref();
   _dialog:=1;
   {? TKTL.sel_size()>0
   || _dialog:=0
   ?};
   {? TKTL.ARCH='N'
   || _msg:='Nie można przywrócić %1. Karta niearchiwalna.'@[exec('record','#to_string',TKTL.ref())];
      {? _dialog>0
      || FUN.emsg(_msg)
      || KOMM.add(_msg,2,,1)
      ?}
   ||
      _ask:=1;
      {? _dialog>0
      || _ask:=FUN.ask('Czy przywrócić kartę %1 wer. %2 z archiwum?'@[TKTL.NRK,TKTL.WER])
      ?};
      {? _ask>0
      ||
::       Sprawdzana możliwość zablokowania karty w każdym zakresie
         {? exec('tktl_lock','tech_common',#_tktl,'N',_dialog) &
            exec('tktl_lock','tech_common',#_tktl,'O',_dialog) &
            exec('tktl_lock','tech_common',#_tktl,'S',_dialog) &
            exec('tktl_lock','tech_common',#_tktl,'P',_dialog)
         || _res:=exec('tktl_arch_act','tech_arch',TKTL.ref(),'KARTOTEKA',0);
            {? _res<>null()
            || exec('uidref_update','#b__box',_uidref,exec('FindAndGet','#table',TKTL,_res,,"uidref()",''))
            ?}
         ?};
         exec('tktl_unlock','tech_common',#_tktl,'N');
         exec('tktl_unlock','tech_common',#_tktl,'O');
         exec('tktl_unlock','tech_common',#_tktl,'S');
         exec('tktl_unlock','tech_common',#_tktl,'P')
      ?}
   ?}
?};
TKTL.cntx_pop();
_res


\tktl_zarchiwum_gr1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Akcja grupa przed 'Przywróć z archiwum'
::   WY: 0 / 1
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_res:=FUN.ask(
      'Ilość kart do przywrócenia z archiwum: %1'
      '.\nOperacja może być czasochłonna.\n\nCzy kontynuować?'@[$TKTL.sel_size()]);
{? _res
|| VAR.GRUPA:='T';
   KOMM.init(250,,'Archiwizacja technologii'@,'',,,0)
?};
_res


\tktl_zarchiwum_gr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Akcja grupa po 'Przywróć z archiwum'
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
VAR.GRUPA:='N';
~~


\win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Tworzy okno edycji wykorzystane na liście todo
::       Kontekst wywołania - rekord tabeli TKTL
::   WY: akronim okna
::----------------------------------------------------------------------------------------------------------------------
_red:=TKTL.mk_edit('Archiwizacja karty technologicznej'@,,'tktl_ared');
TKTL.win_ewin(_red,,'DISP');
_btn:=TKTL.win_ebtn(_red,'text=%1,align=begin'['Operacje'@],"exec('action_oper_button','tech_oper')");
task_attach('TTE_TEC_DRTO');
TKTL.btn_eopt(_red,_btn,{? TKTL.TYP().OPER='N' || 'state=grayed' || 'state=normal' ?});
_btn:=TKTL.win_ebtn(_red,'text=%1,align=begin'['Surowce'@],"exec('action_mater_button','tech_mater')");
task_attach('TTE_TEC_DRTS');
_btn:=TKTL.win_ebtn(_red,'text=%1,align=begin'['N-P-U'@],"exec('action_tools_button','tech_tool')");
task_attach('TTE_TEC_DRDP');
TKTL.btn_eopt(_red,_btn,{? TKTL.TYP().UTIL='N' || 'state=grayed' || 'state=normal' ?});
_btn:=TKTL.win_ebtn(_red,'text=%1,align=begin'['Parametry'@],"exec('action_params_button','tech_param')");
task_attach('TTE_TEC_DRDP');
TKTL.btn_eopt(_red,_btn,{? TKTL.TYP().PAR='N' || 'state=grayed' || 'state=normal' ?});
_btn:=TKTL.win_ebtn(_red,'text=%1,align=begin'['P&rodukty karty'@],"exec('action_products_button','tech_prod',0)");
task_attach('TTE_TEC_DRDP');
_btn:=TKTL.win_ebtn(_red,'text=%1,align=begin'['Atrybu&ty'@],"exec('action_attrib_button','tech_atr')");
task_attach('TTE_TEC_DRDP');
_btn:=TKTL.win_ebtn(_red,'text=%1,align=begin'['Doku&mentacja'@],"exec('action_docum_button','tech_doc')");
task_attach('TTE_TEC_DRDP');
_btn:=TKTL.win_ebtn(_red,'text=%1,align=end'['Arc&hiwizuj'@],"exec('action_button','!tte_tec_data')");
task_attach('TTE_TEC_DATA');
TKTL.btn_eopt(_red,_btn,'default=1');
_btn:=TKTL.win_ebtn(_red,'text=%1,align=end'['&Anuluj'@],"'key:Esc'");
_red


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::       [_b] - tablica z parametrami wejściowymi
::   WY: obj_new() - obiekt wynikowy
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
{? var_pres('_b')>100
|| _in:=_b
|| _in:=params_get().in
?};
params_exec('tech_clean','tech_common',_mp,_in,'','DONE')

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 d6b12cc10ccbbce69fec45509fa8aa3e28f6a1fd8b7efc85013870cf0639ca31049a9071b66f3d5a4e8f9fc47b99856d873bfd28e1904dcdc0dad16b787fbc2115b2922f76f06f3c39923941ead87b98ccc42a2b065a5e447d321ceff310d579aa68b21fe288817aef85062219601b5f946a47ff295cf10b64fab18767713301
