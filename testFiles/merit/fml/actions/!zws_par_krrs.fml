:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_krrs.fml [17.00]
:: Utworzony: 2015/02/04
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności rejestracji tabel kursowych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Rejestracja tabel okresów - formuła głowna
::   WE: _a - [obj_new] - parametry wejściowe czynności
::       _b - [obj_new] - parametry wewnętrzne czynności
::       _c - [obj_new] - parametry wyjściowe czynności
::       _d - obiekt odpowiedzialny za obsługę procesu
::  OLD: \tkrs z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
::# properties=GRP_FIRM
exec('czytaj','#stalesys',,FINFO);
_slbank:=FINFO.SLBANK().SLU;
{? _slbank=null
|| FUN.info('Nie wskazano słownika banków w słownikach systemu.'@)
|? FINFO.SLWAL().SLU=null
|| FUN.info('Nie wskazano słownika walut w słownikach systemu.'@)
|| SLU.cntx_psh(); SLO.cntx_psh(); B.cntx_psh();
   B.win_sel('WER');
   SLO.index('SL');
   _wal:=null;
   {? FINFO.NAROD
   || _wal:=FINFO.NAROD
   || SLO.cntx_psh(); SLU.cntx_psh();
      SLO.prefix(FINFO.SLWAL().SLU);
      {? SLO.first()
      || _wal:=SLO.ref()
      ?};
      SLO.cntx_pop(); SLU.cntx_pop()
   ?};
   {? _wal=null
   || FUN.info('Słownik walut w słownikach systemu nie zawiera pozycji.'@)
   || FINFO.SLBANK().SLU();
      SLO.prefix(_slbank);
      _jest:=SLO.first();
      {!
      |? SLO.win_sel('BANKI');
         exec('slu_okn','slo_slu');
         _kur:=SLO.select(,1);
         {? _kur
         || exec('ban_tkrs','waluty',_wal,{? _jest || SLO.ref() || null ?});
            1
         || 0
         ?}
      !}
   ?};
   SLU.cntx_pop(); SLO.cntx_pop(); B.cntx_pop()
?};
~~


\fill_tkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Wypełnienia okna grupowego tabeli kursów
::----------------------------------------------------------------------------------------------------------------------
grp_disp(TKRS,'WER',1)


\arw_tkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PB] [8.70]
:: OPIS: Formuła po odświeżeniu okienka wertowania tabeli TKRS
::       w oknach grupowych tabeli TKRS
::  OLD: \kursyods z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh();
_ind:=KRS.index('?');
{? KRS.WAL<>null || _ref:=KRS.WAL || _ref:=null ?};
{? TKRS.get
|| KRS.index('KRS_WAL'); KRS.prefix(TKRS.ref);
   KRS.index('KRS_KRAJ'); KRS.prefix(TKRS.ref); KRS.actions('WER',,,1)
|| KRS.prefix(0); KRS.actions('WER',':d',,1)
?};
{? _ind<>'' || KRS.index(_ind) || KRS.index('KRS_KRAJ') ?};
{? KRS.TKRS<>TKRS.ref
|| KRS.first();
   _next:=1;
   {! |?
     {? KRS.WAL=_ref || _next:=0 ?};
     _next & KRS.next()
   !};
   {? _next || KRS.first() ?}
|| KRS.get()
?};
KRS.hdr_sel();
{? TKRS.SYM<>'' || KRS.hdr_sel(' %1 z dnia %2'@[TKRS.SYM,$TKRS.DT]) ?};
grp_disp(KRS,'WER');
grp_edisp(TKRS,'BANK');
SLO.cntx_pop();
1


\ba_tkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: Formuła przed dołącz dla tabeli TKRS
::   WY: czy dodano rekord
::  OLD: \tkrs_ed z wspol.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? FINFO.SLWAL().SLU=null
|| exec('wz_wal','wzorce')
|| SLU.cntx_psh();
   SLO.cntx_psh();
   TKRS.win_edit('RED');
   TKRS.blank();
   {? TKRS.edit("exec('ar_tkrs','!zws_par_krrs')")
   || _wyn:=TKRS.add();
      {? _wyn
      || exec('aa_tkrs','!zws_par_krrs')
      ?}
   ?};
   SLO.cntx_pop();
   SLU.cntx_pop()
?};
_wyn


\aa_tkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Po 'Dołącz' nowej tabeli kursów, skopiowanie kursów z poprzedniej tabeli lub jeśli jest to pierwsza tabela,
::       to skopiowanie ze słownika walut
::  OLD: \kursynew z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
echo('Proszę czekać. Trwa kopiowanie tabeli kursów ...'@);
exec('new_tab','!zws_par_krrs',FINFO.SLWAL().SLU);
echo();
1


\new_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Po 'Dołącz' nowej tabeli kursów, skopiowanie kursów z poprzedniej tabeli lub jeśli jest to pierwsza tabela,
::       to skopiowanie ze słownika walut
::   WE: _a - __X__INFO.SLWAL().SLU danego systemu
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh();
TKRS.cntx_psh;
KRS.index('KRS_WAL');  KRS.prefix(TKRS.ref());
KRS.index('KRS_KRAJ'); KRS.prefix(TKRS.ref());
{? ~KRS.first()
|| TKRS.cntx_psh(); _prev:=TKRS.prev(); TKRS.cntx_pop();
   {? ~_prev | ~FUN.ask('Kopiować kursy z poprzedniej tabeli?'@)
   || exec('z_walut','!zws_par_krrs', _a)
   || exec('new_kurs','!zws_par_krrs', _a)
   ?}
?};
echo();
TKRS.cntx_pop;
KRS.prefix(TKRS.ref());
KRS.prefix();
SLO.cntx_pop();
1


\new_kurs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Kopiowanie kursów ze starej do nowej tabeli
::   WE: _a - __X__INFO.SLWAL().SLU danego systemu
::  OLD: \new_kurs z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
TKRS.cntx_psh(); TKRS.index('TKRS_DT');
{? TKRS.prev()
|| KRS.index('KRS_KRAJ'); KRS.prefix(TKRS.ref());
   {? KRS.first() & TKRS.next()
   || {!|? KRS.cntx_psh();
           KRS.TKRS:=TKRS.ref();
           KRS.prefix();
           KRS.add();
           KRS.cntx_pop();
           KRS.next()
      !}
   || exec('z_walut','!zws_par_krrs',_a)
   ?}
|| exec('z_walut','!zws_par_krrs',_a)
?};
TKRS.cntx_pop();
KRS.prefix(TKRS.ref())


\z_walut
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Dla pierwszej tabeli kopiowanie walut ze słownika
::   WE: _a - __X__INFO.SLWAL().SLU danego systemu
::  OLD: \z_walut z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
KRS.prefix(TKRS.ref());
SLO.cntx_psh();
SLO.index('SL');
SLO.prefix(_a);
WAL.index('WAL_SYM');
WAL.prefix();
{? SLO.first()
|| {!
   |? KRS.blank();
      SLO.get();
      KRS.TKRS:=TKRS.ref();
      {? WAL.find_key(SLO.KOD)
      || KRS.WAL:=SLO.ref();
         KRS.KRAJ:=WAL.KRAJ;
         KRS.add()
      ?};
      SLO.next()
   !}
?};
SLO.cntx_pop();
KRS.first();
1


\bl_bank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Wartosc poczatkowa pola BANK tabeli TKRS
::  OLD: \bl_bank z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.BANK


\bl_wal_tkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Wartość początkowa pola TKRS.WAL
::  OLD: \wal_tkrs z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.WAL_TKRS


\br_tkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PK] [8.70]
:: OPIS: Rekord przed tabeli TKRS
::  OLD: \rb_tkrs z waluty.fml
::----------------------------------------------------------------------------------------------------------------------
TKRS.BANK(); 0


\ar_tkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Rekord po dla okien tabeli TKRS
::  OLD: \chk_tkrs z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=__CHK.record(TKRS,,'SYM','DT');
{? _r=''
|| __CHK.index(TKRS,-menu_txt()='popraw')=''
|| _r
?}


\sel_wal_tkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Zmiana waluty tabeli kursów (TKRS)
::  OLD: \wybwaltk z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh(); SLUAPPL.cntx_psh(); SLU.cntx_psh();
SLUAPPL.prefix(); SLU.prefix();
_slwal:=FINFO.SLWAL().SLU;
{? _slwal<>null
|| SLO.index('SL'); SLO.prefix(_slwal); SLO.seek(POMOC.WAL_TKRS);
   SLO.win_sel('ONE_SEL');
   _wal:=POMOC.WAL_TKRS;
   {? SLO.select(,1,5) || POMOC.WAL_TKRS:=SLO.ref() ?};
   {? _wal<>POMOC.WAL_TKRS
   || TKRS.prefix(POMOC.BANK,POMOC.WAL_TKRS)
   ?}
|| FUN.info('Nie zdefiniowano słownika walut.'@)
?};
SLO.cntx_pop(); SLUAPPL.cntx_pop(); SLU.cntx_pop();
grp_disp(TKRS,'WER',1);
grp_edisp(TKRS,'BANK',1);
''


\kursy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Akcja kursy dla wybranego banku i tabeli kursów
::  OLD: \kursy z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh();
KRS.index('KRS_KRAJ'); KRS.prefix(TKRS.ref());
KRS.hdr_sel(' %1 z dnia:%2'@[TKRS.SYM,$TKRS.DT]);
KRS.select();
SLO.cntx_pop();
1


\bd_tkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [8.10]
:: OPIS: Formuła usuwa tabele kursów walut wraz z zapisanymi kursami
::       (usuwa wszystkie KRS bieżżcej tabeli i nagłowek rekord TKRS)
::  OLD: \tkrs_del z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
_count:=TKRS.count();
_sql_t:='select FAKS.SYM from @FAKS where (FAKS.RTK=:_a and FAKS.NTK=\':_b\')';
_sql_t+='or (FAKS.NRTK=:_a and FAKS.NNTK=\':_b\')';
_sql_t+=' UNION ALL ';
_sql_t+='select ZK_N.SYM from @ZK_N where (ZK_N.RTK=:_a and ZK_N.NTK=\':_b\')';
_sql_t+=' UNION ALL ';
_sql_t+='select ND.SYM from @ND where (ND.RTK=:_a and ND.NTK=\':_b\')';
_sql_t+=' or (ND.SCRTK=:_a and ND.SCNTK=\':_b\')';
_sql_t+=' UNION ALL ';
_sql_t+='select OFE.SYM from @OFE where (OFE.RTK=:_a and OFE.NTK=\':_b\')';
_sql_t+=' UNION ALL ';
_sql_t+='select ZD_NAG.SYM from ';
_sql_t+=' @ZD_NAG where (ZD_NAG.RTK=:_a and ZD_NAG.NTK=\':_b\')';
_sql_t+=' UNION ALL ';
_sql_t+='select to_string(FPACZ.NR) as SYM from ';
_sql_t+=' @FPACZ where (FPACZ.RTK=:_a and FPACZ.NTK=\':_b\')';
_sql_t+=' UNION ALL ';
_sql_t+='select to_string(DOKUMENT.LP) as SYM from ';
_sql_t+=' @DOKUMENT where (DOKUMENT.RTK=:_a and DOKUMENT.NTK=\':_b\')';
_sql:=psql(_sql_t,#TKRS.ref,TKRS.name);
_count+=_sql.size;
obj_del(_sql);
KRS.index('KRS_KRAJ'); KRS.prefix(TKRS.ref);
{? KRS.size()<>_count
|| FUN.info('Tabela wykorzystywana w systemie.\nUsunięcie niemożliwe.'@); _ok:=0
?};
{? _ok & FUN.ask('Czy usunąć bieżącą tabelę kursów walut?'@)
|| {? KRS.first()
   || do();
      {!
      |? KRS.del()
      !};
      TKRS.del();
      end()
   || TKRS.del()
   ?}; 1
|| 1
?}


\arw_krs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Po odświeżeniu okna TKRS
::  OLD: \krs_ods z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
{? TKRS.get()
|| TKRS.BANK();
   KRS.actions('WER','',,1)
|| KRS.actions('WER',':D',,1)
?}


\bl_tkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Wartość początkowa pola KRS.TKRS
::  OLD: \bl_tkrs z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
TKRS.ref()


\be_krs_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Ustalenie słownika walut
::  OLD: \jakislw/wspol.fml
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.SLWAL=null
|| 0
|| XINFO.SLWAL();
   exec('slu_okn','slo_slu');
   1
?}


\ae_krs_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Po redakcji waluty w kursach walut
::  OLD: \por_kwal w skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
{? __CHK.record(KRS,,'WAL')=''
|| _wz:=XINFO.SLWAL().WZ;
   {? _wz<>'' & RS.find_key(_wz)
   || ($(RS.TAB+'.prefix();'+RS.TAB+'.blank(1);'+RS.TAB+'.'+RS.KOD+':=KRS.WAL().KOD;'+RS.TAB+'.find_rec'))();
      ($('KRS.KRAJ:='+RS.TAB+'.KRAJ'))();
      ($('POMOC.J:='+RS.TAB+'.J'))();
      1
   || 0
   ?}
|| 0
?}


\ae_krs_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Obliczenie kursu średniego waluty (po red pol:KRS.KP, KRS.SP)
::  OLD: \krs_sred z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()<0
|| FUN.info('Niedopuszczalny ujemny kurs waluty.'@); 0
|? KRS.SR$4=0 & KRS.KP$4<>0 & KRS.SP$4<>0
|| KRS.SR:=(KRS.KP+KRS.SP)/{? (KRS.KP<>0)+(KRS.SP<>0) || (KRS.KP<>0)+(KRS.SP<>0) || 1 ?} $ 4; 1
|| 1
?}


\ae_krs_sr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Po redakcji kursu średniego KRS.SR
::   WY: 0/1
::  OLD: \ae_ksred z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()<0
|| FUN.info('Niedopuszczalny ujemny kurs waluty.'@); 0
|| 1
?}


\be_krs_kc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: Przed redakcją KRS.KC
::   WY: 1
::  OLD: \krs_kc_pr z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
{? KRS.KC=0
|| _kc:=0;
   TKRS.cntx_psh(); TKRS.index('TKRS_DT');
   {? TKRS.prev()
   || KRS.cntx_psh();
      KRS.index('KRS_KRAJ'); KRS.prefix(TKRS.ref(),KRS.KRAJ);
      {? KRS.first() || _kc:=KRS.KC ?};
      KRS.cntx_pop()
   ?};
   TKRS.cntx_pop();
   {? _kc=0 & (KRS.KP$4<>0 | KRS.SP$4<>0)
   || KRS.KC:=(KRS.KP+KRS.SP)/{? (KRS.KP<>0)+(KRS.SP<>0) || (KRS.KP<>0)+(KRS.SP<>0) || 1 ?} $4
   || KRS.KC:=_kc
   ?}
?};
1


\ae_krs_kc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: Po redakcji KRS.KC
::  OLD: \krs_kc_po w skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()<0
|| FUN.info('Niedopuszczalny ujemny kurs waluty.'@); 0
|| 1
?}


\bm_krs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Dodanie lub modyfikacja tabeli kursowej
::   WE: _a - 1-add 0-put
::  OLD: \krs_addput z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a || KRS.blank() ?};
_loop:=1;
{!
|? {? KRS.edit("exec('chk_krs','!zws_par_krrs')")
   || _ok:={? _a || KRS.add(1) || KRS.put(1) ?};
      {? _ok
      || _loop:=0
      || SLO.cntx_psh();
         FUN.info('Tabela kursów ma już zapis dla waluty %1.'@[KRS.WAL().KOD]);
         SLO.cntx_pop()
      ?}
   || _loop:=0
   ?}
!}


\chk_krs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Formula na rekord po dla okien tabeli KRS
::  OLD: \chk_krs z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
{? KRS.name()='kursy___'
|| _a:=__CHK.record(KRS,,'WAL','KRAJ');
   {? _a=''
   || {? KRS.SR$4<>((KRS.KP+KRS.SP)/{? (KRS.KP<>0)+(KRS.SP<>0) || (KRS.KP<>0)+(KRS.SP<>0) || 1 ?})$4
      || {? FUN.ask('Kurs średni wyliczony z kursu zakupu i sprzedaży'
                    '\njest inny niż wpisany w rekordzie.'
                    '\nPrzeliczyć wartość kursu średniego?'@)
         || KRS.SR:=(KRS.KP+KRS.SP)/{? (KRS.KP<>0)+(KRS.SP<>0) || (KRS.KP<>0)+(KRS.SP<>0) || 1 ?}$4
         ?}
      ?}
   ?};
   _a
|| ''
?}


\bv_pomoc_j
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??? [?????]
:: OPIS: Przed wyświetleniem pola J zmiennej POMOC
::  OLD: \pw_jedn z skid_wal.fml
::----------------------------------------------------------------------------------------------------------------------
{? KRS.WAL=0
|| POMOC.J:=1
|| _wz:=XINFO.SLWAL().WZ;
   RS.cntx_psh(); RS.index('RS'); RS.prefix();
   {? _wz<>'' & RS.find_key(_wz)
   || ($(RS.TAB+'.blank(1);'+RS.TAB+'.'+RS.KOD+':=KRS.WAL().KOD;'+RS.TAB+'.find_rec'))();
      ($('POMOC.J:='+RS.TAB+'.J'))()
   ?};
   RS.cntx_pop()
?};
1


\imp_tk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [8.60]
:: OPIS: Importowanie tabel kursow
::  OLD: \imp_tk/proc_01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('myURL','object');
_vref1:=SLO.ref();
_vref2:=SLU.ref();
SLO.cntx_psh();
SLO.index('SL');
SLO.prefix(XINFO.SLWAL);
WAL.index('WAL_SYM');
WAL.prefix();
{? exec('be_narod','homebank')
|| {? exec('check_bank_nbp','!zws_par_krrt',SLO.KOD)
   || exec('nbp_tkrs2','!zws_par_krrt',0,0)
   || exec('sel_spec','!zws_par_krrs','K',_vref1,_vref2)
   ?}
?};
SLO.cntx_pop()


\sel_spec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.10]
:: OPIS: Wyswietla okienko wyboru rachunku bankowego (specyfikacji)
::   WE: _a: oznaczenie operacji: I - import wyciagow, E - eksport przelewow,
::           Z - zlecenie przelewu, R - przelew z archiwum dla rachunku, W - zaimportowany wyciag,
::           K - kursy walut
::       _b: dla _a='K' - wskazanie na SLO (REFERENCE)
::       _c: dla _a='K' - wskazanie na SLU (REFERENCE)
::  OLD: \sel_spec/proc_01.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh();
SLU.cntx_psh();
SLU.prefix();
SLO.prefix();
{? SLO.seek(_b)
|| SLO.SLU();
   RS.find_key(SLU.WZ);
   {? RS.TAB='B'
   || B.index('BANKOD');
      B.prefix(SLO.KOD,);
      {? B.first()
      || ROZNE.NUMER:=B.NUMER
      || ROZNE.NUMER:=''
      ?}
   ?}
?};
SLO.cntx_pop();
SLU.cntx_pop();
exec('hb_imp','hb',2);
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 593793c12e9688558803ea04c9cabf87e20164e006c0e589a41ce1163dbfb09da3816ab7ca408ced21fa4bb7783d5dae63a5b6c701a44a324a6aad6714b9a01ab87997d3ad2b22259e0df44e3ab2326ba8a02d2cb2efbce7f3bce622676dd83a9bff92021bf63054a099d8cb99d50c4ebe81a69687c35fba6134053aa3b1fd01
