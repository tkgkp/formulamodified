:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_lmag.fml
:: Utworzony: 02.12.2014
:: Autor: [rr]
::======================================================================================================================
:: Zawartosc: Formuły czynności ZWS_PAR_LMAG
::            Magazyny
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Czynność ZWS_PAR_LMAG - magazyny
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       _in  - [obj_new] - parametry wejsciowe czynnosci
::       _int - [obj_new] - parametry wewnetrzne czynnosci
::       _out - [obj_new] - parametry wyjsciowe czynnosci
::       _mp  - obiekt odpowiedzialny za obsluge procesu
::----------------------------------------------------------------------------------------------------------------------
exec('select','!zws_par_lmag');
''


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: definiowanie typów magazynów
::  OLD: \magazyny/defin.fml
::----------------------------------------------------------------------------------------------------------------------
HELP.TM:='';
POM.LMO:=FP_STR.B_DOMAIN().SYMBOL='LMO';
BEER.COS:=1;
MG.f_clear();
{? POM.LMO
|| MG.index('MAGS');
   MG.prefix('T')
|| MG.index('MAG');
   MG.prefix()
?};
_mob:=exec('lmo_lic','lmo')='T';
MG.win_edit({? ~_mob || 'RES' || 'RED' ?});
MG.win_sel('WER');
MG.select();
BEER.COS:=0;
~~


\mg_typydok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: typy dokumentow dla magazynu
::  OLD: \deft2mg/defin.fml
::----------------------------------------------------------------------------------------------------------------------
T2MG.index('T');
T2MG.prefix(MG.ref());
T2MG.win_sel('WER');
T2MG.select();
1


\add_typ2mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: dodanie TYPYDOK do T2MG
::  OLD: \addt2mg/defin.fml
::----------------------------------------------------------------------------------------------------------------------
POM.MG:=MG.ref();

{? MG.KOOP='T'
|| _war:="TYPYDOK.KOOP='T'"
|? MG.SKL<>'T'
|| _war:="TYPYDOK.KOOP<>'T'"
|| _war:="((TYPYDOK.P='T' & TYPYDOK.Z='T' & TYPYDOK.DN='N')
           | (TYPYDOK.P='N' & TYPYDOK.Z='T')
           | (TYPYDOK.P='N' & TYPYDOK.Z='N' & TYPYDOK.TD<>''))
          & TYPYDOK.UE='N' & TYPYDOK.UPRW='N' & TYPYDOK.AFIFO='' & TYPYDOK.DK='N'
          & TYPYDOK.WYR='N' & TYPYDOK.ZLEC='N' & TYPYDOK.SYS<>'L' & TYPYDOK.KOOP<>'T'"
?};
_par:=_buf:='';
T2MG.cntx_psh();
{? T2MG.first()
|| {!
   |? _par+=T2MG.T().T+' ';
      T2MG.next()
   !}
?};
_buf:=_par;
TYPYDOK.index('TYP');
_par:=exec('typydok_wyb','params',_par,_war,0);
{? _par<>'' | _par<>_buf
|| _ch:=' ';
   _all:=0;
   {? _par<>''
   || {!
      |? _wsk:=_par*_ch;
         _typ:=(_wsk-1)+_par;
         _par:=_wsk-_par;
         _ref:=exec('FindInSet','#table','TYPYDOK','TYP',_typ,_typ);
         _wsk:=_buf*(_typ+_ch);
         {? _wsk || _buf:=((_wsk-1)+_buf)+((_wsk-1+(+(_typ+_ch)))-_buf) ?};
         {? ~_wsk & _ref<>null()
         || T2MG.blank();
            T2MG.T:=_ref;
            T2MG.add(1)
         ?};
         +form(_par)>0
      !}
   || _all:=1
   ?};
   {? _buf<>''
   ||
      {!
      |? _wsk:=_buf*_ch;
         _typ:=(_wsk-1)+_buf;
         _buf:=_wsk-_buf;
         _ref:=exec('FindInSet','#table','TYPYDOK','TYP',_typ,_typ);
         {? _ref<>null()
         || T2MG.index('T');
            T2MG.prefix(POM.MG,_ref);
            {? T2MG.first() & (_all | params_exec('pr_t2mg','magdok_wspolne')) || T2MG.del() ?}
         ?};
         +form(_buf)>0
      !}
   ?}
?};
T2MG.cntx_pop();
''


\prsymmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcją pola symbol sprawdzenie czy można poprawiać
::  OLD: \prsymmag/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+POM.POP_MG)='T' & MG.MWS='T' || 0 || 1 ?}


\praddmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: przed Dołącz dla magazynu
::----------------------------------------------------------------------------------------------------------------------
POM.POP_MG:='NNN';
_mob:=exec('lmo_lic','lmo')='T';
_winedit:={? ~_mob || 'RES' || 'RED' ?};
MG.efld_opt(_winedit,'enable=1',,'DEFSTATS');
MG.efld_opt(_winedit,'mark=1',,'DEFSTATS');
MG.efld_opt(_winedit,'enable=1',,'KSG');
MG.efld_opt(_winedit,'enable=1',,'SKL');
MG.efld_opt(_winedit,'enable=1',,'SKL_WAL');
MG.efld_opt(_winedit,'mark=0',,'SKL_WAL');
MG.efld_opt(_winedit,'enable=1',,'TYP');
1


\poaddmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wypełnienie pola domyślna lokalizacja
::  OLD: \poaddmag/defin.fml
::----------------------------------------------------------------------------------------------------------------------
exec('usr_upr_uzupełnij_pelne','users_upraw','MG');
_eanx:=EANX.MG;
_is_sl:=(+MG.cur_prfx())=3;
{? (1+POM.POP_MG)='N' & MG.SL='T'
|| EANX.MG:=MG.ref();
   EANX.WYLZAL:={? EANX.MG().MWS='T' || 'N' || 'T' ?};
   EANL.cntx_psh();
   EANL.index('MG');
   EANL.prefix('T',MG.ref());
   EANL.win_edit('RED'+{? MG.MWS='N' || '' || 'MWS' ?});
   EANL.win_patt('RED');
   _act:=EANL.actions('SLO_MAG',{? EANX.MG().MWS<>'T' || 'E:E' || '' ?});
   EANL.win_sel('SLO_MAG');
   {!
   |? _ok:=EANL.select();
      {? ~_ok
      || _opc:=FUN.choice('Uwaga. Ponieważ nie wybrano domyślnej lokalizacji dla magazynu\n'
                          'stosowanie wymiarów dla wprowadzonego magazynu zostanie wyłączone.\n\n'
                          'Wybierz jedną z opcji.'@,,'Powrót do wyboru lokalizacji'@);
         _opc
      ?}
   !};
   {? _ok
   || {? EANL.MG().MWS='T' & EANL.DOK='N'
      || FUN.info('Ponieważ domyślna lokalizacji dla magazynu typu MWS\n'
                  'musi być typu Dok załadunkowy/wyładunkowy,\n'
                  'stosowanie wymiarów dla wprowadzonego magazynu zostało wyłączone.\n'
                  'Uwaga. Niewykorzystane lokalizacje zostaną usunięte.'@);
         {? _is_sl || MG.cntx_psh(); MG.prefix() ?};
         MG.SL:='N';
         MG.W_ALL:=0;
         MG.P_ALL:=0;
         MG.SPR_EANL:='N';
         MG.SP_REANL:='N';
         MG.EANL:=null();
         MG.MWS:='N';
         MG.PAL:='N';
         MG.WGMGGR:='N';
         MG.put(1);
         {? _is_sl || _is_sl:=2; MG.cntx_pop() ?};
         EANL.index('MG');
         EANL.prefix('T',MG.ref());
         {? EANL.first()
         || {!
            |? {? ~EANL.count()
               || EANL.del()
               || EANL.next()
               ?}
            !}
         ?}
      || MG.EANL:=EANL.ref();
         MG.put(1)
      ?}
   || FUN.info('Ponieważ nie podano domyślnej lokalizacji dla magazynu\n'
               'stosowanie wymiarów dla wprowadzonego magazynu zostało wyłączone.\n'
               'Uwaga. Niewykorzystane lokalizacje zostaną usunięte.'@);
      {? _is_sl || MG.cntx_psh(); MG.prefix() ?};
      MG.SL:='N';
      MG.W_ALL:=0;
      MG.P_ALL:=0;
      MG.SPR_EANL:='N';
      MG.SP_REANL:='N';
      MG.EANL:=null;
      MG.MWS:='N';
      MG.PAL:='N';
      MG.WGMGGR:='N';
      MG.put(1);
      {? _is_sl || _is_sl:=2; MG.cntx_pop() ?};
      EANL.index('MG');
      EANL.prefix('T',MG.ref());
      EANL.index('MG');
      EANL.prefix('T',MG.ref());
      {? EANL.first()
      || {!
         |? {? ~EANL.count()
            || EANL.del()
            || EANL.next()
            ?}
         !}
      ?}
   ?};
   EANL.actions('SLO_MAG',_act);
   EANL.cntx_pop()
?};
EANX.MG:=_eanx;
EANX.WYLZAL:={? EANX.MG().MWS='T' || 'N' || 'T' ?};
{? _is_sl=2
|| FUN.info('Magazyn został zarejestrowany bez stosowania wymiarów.\n\n'
            'Dostępny jest w widoku:\n\"Ustawienia i parametryzacja > Magazyny > Definiowanie magazynów\".'@)
?};
MG.get();
1


\prpopmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed Popraw dla magazynu
::  OLD: \prpopmg/defin.fml
::----------------------------------------------------------------------------------------------------------------------
POM.POP_MG:='T'+MG.MWS+MG.PAL;
ST.ODDZ:=MG.ODDZ;
EANX.CZY_EANL:=MG.SL='T';
EANX.MG:=MG.ref();
EANX.WYLZAL:={? EANX.MG().MWS='T' || 'N' || 'T' ?};
exec('po_il_mg','!zws_par_lmag',1);
1


\popopmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: po popraw dla magazynu - lokalizacje do SYNCHRO dla zmiany znacznika na paletowy
::  OLD: \popopmg/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.SL='T' & MG.PAL<>(POM.POP_MG+1)
|| _ref:=MG.ref();
   EANL.cntx_psh();
   EANL.index('MG');
   EANL.prefix('T',_ref);
   {? EANL.first()
   || {! |? _dok:=EANL.DOK; EANL.DOK:='N'; EANL.put(1); EANL.DOK:=_dok; EANL.put(1); EANL.next() !}
   ?};
   EANL.cntx_pop()
?};
1


\be_mg_oddz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: przed redakcja pola MG.ODDZ
::  OLD: \be_mg_oddz/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? (1+POM.POP_MG)='T'
|| MG.cntx_psh();
   _wyn:=MG.count()=0;
   MG.cntx_pop()
?};
_wyn


\f3_mg_oddz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: F3 dla pola MG.ODDZ
::  OLD: \f3_mg_oddz/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('sel_upr','users','ODDZ','KOD')
|| MG.ODDZ:=ODDZ.KOD;
   {? exec('ae_mg_oddz','!zws_par_lmag')
   || MG.ODDZ
   ?}
?}


\ae_mg_oddz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: po redakcji pola MG.ODDZ
::  OLD: \ae_mg_oddz/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? MG.ODDZ<>''
|| _wyn:=exec('spr_upr','users','ODDZ',MG.ODDZ)
|| __CHK.record(MG,,'ODDZ')
?};
{? _wyn & POM.LMO & MG.SL<>'T' || MG.SL:='T' ?};
_wyn


\bl_mgtyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: rr [2008]
:: OPIS: formula na wartość początkową pola MG.TYP
::  OLD: \bl_mgtyp/defin.fml
::----------------------------------------------------------------------------------------------------------------------
'DOSTAWY'


\f3_mgtyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: wybór typu magazynu
::   WY: typ magazynu lub wartość pola redagowanego (string)
::  OLD: \f3_mgtyp/defin.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('XTMG');
XTMG:=tab_tmp(1,'TYP','STRING[8]','','OPIS','STRING[40]','');
_acr_sel:=XTMG.mk_sel('Typy magazynów'@,'T',0,'f3_mgtyp_acrsel',,,6);
XTMG.win_fld(_acr_sel,,'TYP',,,14,,1,'Typy magazynów'@);
XTMG.win_fld(_acr_sel,,'OPIS',,,40,,1,'Sposób wyceny'@);
XTMG.win_act(_acr_sel,0,'Formuła','&Wybierz'@@,,'Wybór bieżącego zapisu'@,"sel_exit()",,1,,,,'W');
XTMG.win_sel(_acr_sel);
XTMG.TYP:='DOSTAWY'; XTMG.OPIS:='Rzeczywiste ceny dostaw';           XTMG.add(1);
XTMG.TYP:='FIFO';    XTMG.OPIS:='Ceny typu FIFO';                    XTMG.add(1);
XTMG.TYP:='ŚREDNIE'; XTMG.OPIS:='Ceny średnie bieżące';              XTMG.add(1);
XTMG.TYP:='LIFO';    XTMG.OPIS:='Ceny typu LIFO';                    XTMG.add(1);
XTMG.TYP:='EWIDEN';  XTMG.OPIS:='Ceny ewidencyjne';                  XTMG.add(1);
XTMG.TYP:='DOSTEWI'; XTMG.OPIS:='Ceny ewidencyjne z obsługą dostaw'; XTMG.add(1);
XTMG.find_key(fld);
_wyn:={? XTMG.select(,1,6) || MG.TYP:=XTMG.TYP; XTMG.TYP || fld ?};
VAR_DEL.delete('XTMG');
_wyn


\po_mgtyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: formula po redakcji pola MG.TYP
::  OLD: \po_mgtyp/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
exec('MG_DEFSTATS_bFE','statexam');
_typ:=form(fld());
{? ('DOSTAWY'*_typ)=1 || MG.TYP:='DOSTAWY'; _wyn:=1
|? ('FIFO'*_typ)=1    || MG.TYP:='FIFO';    _wyn:=1
|? ('ŚREDNIE'*_typ)=1 || MG.TYP:='ŚREDNIE'; _wyn:=1
|? ('LIFO'*_typ)=1    || MG.TYP:='LIFO';    _wyn:=1
|? ('EWIDEN'*_typ)=1  || MG.TYP:='EWIDEN';  _wyn:=1
|? ('DOSTEWI'*_typ)=1 || MG.TYP:='DOSTEWI';  _wyn:=1
|| _wyn:=exec('f3_mgtyp','!zws_par_lmag')
?};
{? var_pres('_wyn')=type_of(0) & _wyn & MG.TYP*'DOST'
|| MG.efld_opt('RED','enable=1',,'DEFSTATS');
   MG.efld_opt('RED','mark=1',,'DEFSTATS')
|| MG.efld_opt('RED','enable=0',,'DEFSTATS');
   MG.efld_opt('RED','mark=0',,'DEFSTATS')
?};
_wyn


\czyredwm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: Przed redakcja pola czy magazyn wydzialowy na typie magazynu
::  OLD: \czyredwm/polap.fml
::----------------------------------------------------------------------------------------------------------------------
_tte:=exec('tte_lic','tte');
{? _tte<>'T'
|| MG.W:='N';
   0
|| 1
?}


\poredwm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: Po redakcji znacznika magazyn wydzialowy na typie magayznu
::  OLD: \poredwm/polap.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.W='N'
|| MG.WYD:=null
|| 1
?}


\czyredsm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: Przed redakcja pola wydzialy na typie magazynu
::  OLD: \czyredsm/polap.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('tte_lic','tte')='T' & MG.W<>'N'
|| exec('wz_wydz','wzorce')
|| 0
?}


\mg_skl_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Akcja po redakcji. Tabela MG pole SKL
::  OLD: \mg_skl_ae/sklad.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.SKL<>'T'
|| MG.SKL_WAL:=null()
?};
{? MG.SKL='T' || MG.efld_opt('RED','mark=1',,'SKL_WAL') || MG.efld_opt('RED','mark=0',,'SKL_WAL') ?};
1


\wal_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pudlik [2009]
:: OPIS: Przed redakcją pola WAL_SKL na tabeli MG
::  OLD: \wal_be/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.SKL='T'
|| exec('wz_wal','wzorce')
|| MG.SKL_WAL:=null;
   0
?}


\pr_mg_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed redakcją pól dotyczących parametrów dla lokalizacji
::   WY: 1/0
::  OLD: \pr_mg_sp/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.EANL<>null
|| MG.SL:='T';
   win_disp()
?};
MG.SL='T'


\po_mg_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pól dotyczących parametrów dla lokalizacji
::  OLD: \po_mg_sp/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.SP_REANL='N' || MG.WGMGGR:='N' ?};
1


\prmgeanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przed redakcją pola domyślna lokalizacja
::  OLD: \prmgeanl/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
EANL.win_edit('RED'+{? MG.MWS='T' || 'MWS' || '' ?});
EANL.win_patt('RED');
EANL.win_dict('WER');
EANL.actions('WER',{? MG.MWS='T' || '' || 'E' ?}+'GB(ZO)Z(AN)M(AN):Z(AN)B(ZO)');
EANX.WYLZAL:='T';
{? (1+menu_txt())<>'D' & MG.SL='T'
||
:: zachowuje znaczniki
   VAR_DEL.delete('__buf_mg');
   __buf_mg:=obj_new(MG.fld_num());
   exec('bufRec','#table','MG',__buf_mg);
   1
|| 0
?}


\pomgeanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: po redakcji pola domyślna lokalizacja
::  OLD: \pomgeanl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
:: przywraca znaczniki
_mgeanl:=MG.EANL;
exec('unbufRec','#table','MG',__buf_mg);
VAR_DEL.delete('__buf_mg');
MG.EANL:=_mgeanl;
1


\po_mg_sl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: po redakcji pola czy stosować wymiary
::  OLD: \po_mg_sl/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.SL<>'T'
|| MG.SPR_EANL:='N';
   MG.EANL:=null;
   MG.SP_REANL:='N';
   MG.MWS:='N';
   MG.PAL:='N'
?};
win_disp();
1


\strukmws
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza strukture lokalizacji na magazynie pod katem MWS-a
::   WY: 1-jest OK 0-nie jest fajna
::  OLD: \strukmws/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
EANL.cntx_psh();
_par:=exec('get','#params',100215,2)='T';
_akt:='T';
_dok:='T';
{!
|? EANL.index('MGDOK');
   EANL.prefix(_akt,MG.ref(),_dok);
   {? EANL.first()
   || _jestdok:=0;
      {!
      |? _ok:=0;
         {? _dok='T'
         || _wyn:=(9+EANL.KOD)='D0-00-00-' & (#(2+(9-EANL.KOD)))>0;
            {? _wyn || _ok:=1 ?}
         ?};
         {? ~_ok
         || _wyn:={? _par
                  || exec('allDigit','#valid',(2+EANL.KOD)+(2+(3-EANL.KOD))+(2+(6-EANL.KOD))+(2+(9-EANL.KOD)))
                  || exec('allAlfaNum','#valid',(2+EANL.KOD)+(2+(3-EANL.KOD))+(2+(6-EANL.KOD))+(2+(9-EANL.KOD)))
                  ?}
         ?};
         _wyn & EANL.next()
      !}
   ?};
   _wyn & {? _akt='T' & _dok='T' || _akt:='N'; 1
          |? _akt='N' & _dok='T' || _akt:='T'; _dok:='N'; 1
          |? _akt='T' & _dok='N' || _akt:='N'; 1
          || 0
          ?}
!};
EANL.cntx_pop();
_wyn


\pr_mws
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola MG.MWS
::  OLD: \pr_mws/mws.fml
::----------------------------------------------------------------------------------------------------------------------
MG.SL='T' & {? (1+POM.POP_MG)='T' || exec('strukmws','!zws_par_lmag') || 1 ?}


\po_mws
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola MG.MWS
::        - sprawdzenie struktury lokalizacji w przypadku znacznika T
::        - inaczej wylacza znacznik palet
::  OLD: \po_mws/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.MWS='N'
|| MG.WGMGGR:='N';
   MG.P_ALL:=MG_W_ALL:=0
|? (1+POM.POP_MG)='T'
||
:: sprawdzamy poprawnosc lokalizacji
:: czy istnieje choc jeden dok zaladunkowo/wyladunkowy
:: czy struktura lokalizacji jest NN-NN-NN-NN
   _czy_dok:=0;
   EANL.cntx_psh();
   EANL.index('MG');
   EANL.prefix('T',MG.ref);
   {? EANL.first()
   || {!
      |? _czy_dok:=(9+EANL.KOD)='D0-00-00-' & (#(2+(9-EANL.KOD)))>0;
         ~_czy_dok & EANL.next()
      !}
   || _czy_dok:=1
   ?};
   EANL.cntx_pop();
   {? ~_czy_dok | (MG.EANL<>null & ~((9+MG.EANL().KOD)='D0-00-00-' & (#(2+(9-MG.EANL().KOD)))>0)) || MG.MWS:='N' ?}
?};
1


\pr_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcją pola MG.PAL
::  OLD: \pr_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.SL='T'
|| {? MG.PAL='T'
   || exec('czyuzpal','lmg',MG.ref())
   || 1
   ?}
|| 0
?}


\po_pal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola MG.PAL
::  OLD: \po_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.PAL='N'
|| MG.TPAL:=null;
   MG.SPADD:='N';
   MG.DOPAS:='N'
?};
win_disp();
1


\prwgmggr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcją pola MG.WGMGGR
::   WY: 1/0
::  OLD: \prwgmggr/mws.fml
::----------------------------------------------------------------------------------------------------------------------
MG.MWS='T' & MG.SP_REANL<>'N'


\pwparpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyświetleniem parametrów domyślnych dla obsługi palet
::  OLD: \pwparpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.PAL='T'
|| {? cur_afld()='DOPAS' & ~(MG.SPADD='J' | MG.SPADD='B') || 0 || '' ?}
|| {? cur_afld()='TPAL' || exec('findfnv','#color') || 0 ?}
?}


\prparpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed redakcją parametrów domyślnych dla obsługi palet
::  OLD: \prparpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.PAL='T'
|| {? cur_afld()='DOPAS' & ~(MG.SPADD='J' | MG.SPADD='B') || 0 || 1 ?}
|| 0
?}


\pospadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: po redakcji pola MG.SPADD
::  OLD: \pospadd/mws.fml
::----------------------------------------------------------------------------------------------------------------------

{? ~(MG.SPADD='J' | MG.SPADD='B') || MG.DOPAS:='N' ?};
win_disp();
1


\pw_fpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyświetleniem FPAL i FROZ
::  OLD: \pw_fpal/mes2.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.PAL='T'
|| 1
|| exec('findfnv','#color')
?}


\pwidmob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyświetleniem SP_IDMOB
::  OLD: \pwidmob/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+MG.TYP)='D' & MG.PAL<>'T' & MG.SL='T'
|| ''
|| 0
?}


\pridmob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcją SP_IDMOB
::  OLD: \pridmob/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
(1+MG.TYP)='D' & MG.PAL<>'T' & MG.SL='T'


\pr_mg_koop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [12.41]
:: OPIS: przed redakcją MG.KOOP
::  OLD: \pr_mg_koop/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
{? exec('tte_lic','tte')='T'
|| {? -~menu_txt()='dołącz'
   || _result:=1
   || MG.cntx_psh();
      _count:=MG.count();
      MG.cntx_pop();
      _result:=(_count=0)
   ?}
?};
_result


\chk_mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja rekord po dla slownika magazynow MG
::  OLD: \chk_mg/defin.fml
::----------------------------------------------------------------------------------------------------------------------
exec('chk_mg','magdok_wspolne')


\aktueanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: aktualizuje wszystkie lokalizacje dla danego magazynu - jeżeli magazyn jest typu MWS
::   WE: _a - ref magazynu
::       _b - 1-MWS 0-wymiary
::  OLD: \aktueansl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
exec('aktueanl','magdok_wspolne')


\eanx_mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Arkadiusz Wielgus [2010]
:: OPIS: EANX.MG
::  OLD: \eanx_mg/ean.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.MG


\prkodean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: sprawdzenie możliwości modyfikowania kodu lokalizacji
::   WY: 1-można 0-nie wolno
::  OLD: \prkodean/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+menu_txt())='P'
|| {? var_pres('__znwyb')>0 & __znwyb='F'
   || _wyn:=1;
      __fapdkl.cntx_psh();
      __fapdkl.clear();
      {? __fapdkl.first()
      || {!
         |? {? __fapdkl.LOK=EANL.KOD & __fapdkl.MAG=$EANL.MG
            || FUN.info('Dana lokalizacja jest wykorzystana w systemie\n'
                        '(wprowadzone wymiary do danej pozycji faktury).\n'
                        'Poprawa kodu lokalizacji niemożliwa.'@);
               _wyn:=0
            || __fapdkl.next()
            ?}
         !}
      ?};
      __fapdkl.cntx_pop();
      _wyn
   || exec('FindInSet','#table','EANP','LOKZ',EANL.ref())=null &
      exec('FindInSet','#table','EANP','LOKDO',EANL.ref())=null &
      exec('FindInSet','#table','EANN','EANL',EANL.ref())=null
   ?}
|| 1
?}


\bl_eangl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wartość początkowa pola EANL.EAN
::  OLD: \bl_eangl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_form:=exec('eangform','kody_kresk',EANL.MG,'EANL','EAN');
{? _form<>'' || ($_form)() || '' ?}


\preanean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcją pola EANL.EAN
::  OLD: \preanean/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? form(EANL.EAN)='' & EANL.MG().MWS='T'
|| EANL.EAN:=EANX.KEANL+EANX.REANL+EANX.PEANL+EANX.OEANL+($EANL.MG().ref()+2)
?};
1


\pweatpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyświetleniem EANL.ILPAL
::  OLD: \pweatpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANL.MG().PAL<>'T'
|| exec('findfnv','#color')
|| 1
?}


\preatpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcją EANL.ILPAL
::  OLD: \preatpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANL.MG().PAL='T'


\bleandok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wartość początkowa pola EANL.DOK
::  OLD: \bleandok/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.WYLZAL


\prdokean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola DOK dla EANL
::  OLD: \prdokean/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+menu_txt())='P'
|| ~(EANL.ref()=EANL.MG().EANL)
|| {? var_pres('__buf_mg')=117
   || __buf_mg[17]<>'T'
   || 1
   ?}
?}


\poea_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po polu Dok załadunkowy wyładunkowy
::  OLD: \poea_dok/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=exec('get','#params',100215,2)='T';
_bch:={? _par & exec('get','#params',100216,2)='T' || 'A' || '0' ?};
{? EANL.DOK='T' & EANX.KEANL<>'D0'
|| EANX.KEANL:='D0';
   EANX.REANL:='%1%1'[_bch];
   EANX.PEANL:='%1%1'[_bch];
   EANX.OEANL:='%1%1'[_bch]
|? EANL.DOK='N' & EANX.KEANL='D0'
|| EANX.KEANL:='%1%1'[_bch]
?};
exec('kodwgseg','!zws_par_lmag');
win_disp();
1


\kodwgseg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: kod lokalizacji wg kolejnych segmentów lokalizacji
::  OLD: \kodwgseg/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANL.KOD:=EANX.KEANL+'-'+EANX.REANL+'-'+EANX.PEANL+'-'+EANX.OEANL+'-'+EANL.MG().SYM


\bl_segm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wartość początkowa dla segmentu
::  OLD: \bl_segm/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=exec('get','#params',100215,2)='T';
_bch:={? _par & exec('get','#params',100216,2)='T' || 'A' || '0' ?};
'%1%1'[_bch]



\pr_segm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcją segmentu
::  OLD: \pr_segm/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANL.DOK='T'
|| cur_afld()='OEANL'
|| 1
?}


\po_segm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji segmentu
::  OLD: \po_segm/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_pole:='EANX.'+cur_afld();
_par:=exec('get','#params',100215,2)='T';
_bch:={? _par & exec('get','#params',100216,2)='T' || 'A' || '0' ?};

_wart:=form(($_pole)());

{? ~_par
|| {? (+_wart)=0 || ($_pole)():='%1%1'[_bch]
   |? (+_wart)=1 || ($_pole)():='%1%2'[_bch,_wart]
   ?}
|| {? (+_wart)=0 || ($_pole)():='%1%1'[_bch]
   |? (+_wart)=1 || {? exec('isAlphaNum','#string',_wart)
                    || ($_pole)():='%1%2'[_bch,_wart]
                    || ($_pole)():='%1%1'[_bch]
                    ?}
   || _fch:={? exec('isAlphaNum','#string',1+_wart) || 1+_wart || _bch ?};
      _lch:={? exec('isAlphaNum','#string',_wart+1) || _wart+1 || _bch ?};
      ($_pole)():='%1%2'[_fch,_lch]
   ?}
?};
exec('kodwgseg','!zws_par_lmag');
win_disp();
1


\pwenxbl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: informacja o blokowaniu lokalizacji
::  OLD: \pwenxbl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.BLOK:={? EANL.BLOK='T'
           || 'T'
           || 'N'
           ?}


\praddlok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed dolącz EANL
::  OLD: \praddlok/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=exec('get','#params',100215,2)='T';
_bch:={? _par & exec('get','#params',100216,2)='T' || 'A' || '0' ?};

EANX.KEANL:={? EANX.WYLZAL='T' || 'D0' || '%1%1'[_bch] ?};
EANX.REANL:='%1%1'[_bch];
EANX.PEANL:='%1%1'[_bch];
EANX.OEANL:='%1%1'[_bch];
1


\chk_eanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdza poprawność wypełnienia pól
::   WE: [_a] 1-pomija kontrole KOD i KOD KRESKOWY, 0-sprawdza wszystko
::   WY: ''-jest OK 'pole'-nie jest
::  OLD: \chk_eanl/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_ctrl:={? var_pres('_a')=type_of(0) || _a || 0 ?};
exec('chk_eanl','magdok_wspolne',_ctrl)


\akt_eanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: zakres lokalizacji aktywne/nieaktywne
::   WE: [_a] 0(domyślnie) na aktywne 1-nieaktywne
::  OLD: \akt_eanl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

EANX.CZYAKT:={? ~_a || 'T' || 'N' ?};
_blok:=MG.MWS='T' & exec('get','#params',1300,2,OPERATOR.USER)='T';
EANL.index('MG');
EANL.prefix(EANX.CZYAKT,EANX.MG);
{? (_size:=EANL.size) || EANL.first() ?};
{? EANX.CZYAKT='T'
|| EANL.actions('WER','GZ(A)M(A)'+{? _size
                                  || {? MG.MWS<>'T' || 'E' || '' ?}+{? ~_blok || 'B(ZO)' || '' ?}
                                  || 'd:dZ(A)'
                                  ?},,1)
|| EANL.actions('WER','GdupEJBZ(N)M(N):dZ(N)',,1)
?};
~~


\del2eanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: usunięcie lokalizacji pojedyncze i grupowe
::  OLD: \del2eanl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=EANL.sel_aget();
EANL.sel_adel();
EANL.cntx_psh();
{? _tab.size
|| {? _tab.first() & FUN.ask('Czy usunąć zaznaczone lokalizacje?'@)
   || {!
      |? {? (EANL.clear(); EANL.seek(_tab.REF,)) & exec('del_eanl','!zws_par_lmag',1)
         || EANL.del()
         ?};
         _tab.next()
      !}
   ?}
|? exec('del_eanl','!zws_par_lmag') & FUN.ask('Czy usunąć lokalizację?'@)
|| EANL.del()
?};
EANL.cntx_pop();
~~


\del_eanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdzenie czy lokalizacja nie jest już wykorzystana w systemie
::   WE: [_a] - 0(domyślnie)-komunikat 1-brak komunikatu
::   WY: 1-jest OK 0-wykorzystana
::  OLD: \del_eanl/ean.fml
::----------------------------------------------------------------------------------------------------------------------

{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_wyn:=1;
{? EANL.count()
|| {? ~_a || FUN.info('Dana lokalizacja jest wykorzystana w systemie.\n'@+
                      'Usunięcie lokalizacji niemożliwe.'@)
   ?};
   _wyn:=0
|? var_pres('__znwyb')>0 & __znwyb='F'
|| __fapdkl.cntx_psh();
   __fapdkl.clear();
   {? __fapdkl.first()
   || {!
      |? {? __fapdkl.LOK=EANL.KOD & __fapdkl.MAG=$EANL.MG
         || {? ~_a
            || FUN.info('Dana lokalizacja jest wykorzystana w systemie\n'
                        '(wprowadzone wymiary do danej pozycji faktury).\n'@+
                        'Usunięcie lokalizacji niemożliwe.'@)
            ?};
            _wyn:=0
         || __fapdkl.next()
         ?}
      !}
   ?};
   __fapdkl.cntx_pop()
?};
_wyn


\prpopean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed popraw dla EANL
::  OLD: \prpopean/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? EANL.MG().EANL=EANL.ref() & EANL.MG().MWS='T'
|| FUN.info('Domyślna lokalizacja magazynu nie można zmienić jej typu.\n'
            'Wymagany dok załadunkowy/wyładunkowy.'@)
?};
1


\dr_eanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: drukowanie z widoku lokalizacji magazynu
::  OLD: \dr_eanl/ean.fml
::----------------------------------------------------------------------------------------------------------------------
rep_exec('lmg_eanl')


\creatmws
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: kreator lokalizacji MWS
::  OLD: \creatmws/mws.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__dok_zw','__lokmws','__infmws','__charL','__max_L','__parmws');

_par:=exec('get','#params',100215,2)='T';
_let:=_par & exec('get','#params',100216,2)='T';
_mws:=MG.MWS='T';

__charL:='';
{? ~_par
|| {! _ii:=48..57 |! __charL+=%_ii !}
|| {? _let
   || {! _ii:=65..90 |! __charL+=%_ii !};
      {! _ii:=48..57 |! __charL+=%_ii !}
   || {! _ii:=48..57 |! __charL+=%_ii !};
      {! _ii:=65..90 |! __charL+=%_ii !}
   ?}
?};
__max_L:=+__charL;

__dok_zw:=0;

__lokmws:=tab_tmp(1,'KOD','STRING[2]',''
           ,'KDO','STRING[2]',''
           ,'ILR','INTEGER',''
           ,'ILP','INTEGER',''
           ,'ILO','INTEGER',''
           ,'SZR','REAL',''
           ,'DLG','REAL',''
           ,'WYS','REAL',''
           ,'MAS','REAL',''
           ,'TOD','REAL',''
           ,'TDO','REAL',''
           ,'LPL','INTEGER','');
__parmws:=tab_tmp(1,'DOK','INTEGER','Liczba doków'@
           ,'REG','STRING[2]','Regał - rozpocznij od oznaczenia'@
           ,'POL','STRING[2]','Półka - rozpocznij od oznaczenia'@
           ,'POJ','STRING[2]','Pojemnik - rozpocznij od oznaczenia'@
           ,'NOR','STRING[1]','Czy oznaczać regały'@
           ,'NOP','STRING[1]','Czy oznaczać półki'@
           ,'NOO','STRING[1]','Czy oznaczać pojemniki'@);

__infmws:=tab_tmp(1,'OPI','STRING[30]',''
           ,'ILE','INTEGER','');

_okn:=__parmws.mk_edit('Parametry generacji'@,0);
{? _mws
|| __parmws.win_esep(_okn,'Doki załadunkowe-wyładunkowe'@);
   __parmws.win_efld(_okn,,'DOK',,,3,0);
   __parmws.win_esep(_okn,'Struktura lokalizacji'@);
   __parmws.win_efld(_okn,,'REG',,,3);
   __parmws.win_efld(_okn,,'POL',,,3);
   __parmws.win_efld(_okn,,'POJ',,,3);
   __parmws.win_ebtn(_okn,'text='+'&Zapisz'@+',align=end',"'key:F2'");
   __parmws.win_ebtn(_okn,'text='+'&Anuluj'@+',align=end',"'key:Esc'");
   __parmws.win_edit(_okn)
|| __parmws.win_esep(_okn,'Parametry oznaczeń'@);
   __parmws.win_efld(_okn,,'NOR',,,3,0,,,,,'check-box','left_label=1',"'T'", "'N'");
   __parmws.win_efld(_okn,,'NOP',,,3,0,,,,,'check-box','left_label=1',"'T'", "'N'");
   __parmws.win_efld(_okn,,'NOO',,,3,0,,,,,'check-box','left_label=1',"'T'", "'N'");
   __parmws.win_esep(_okn,'Struktura lokalizacji'@);
   __parmws.win_efld(_okn,,'REG',,,3);
   __parmws.win_efld(_okn,,'POL',,,3);
   __parmws.win_efld(_okn,,'POJ',,,3);
   __parmws.win_ebtn(_okn,'text='+'&Zapisz'@+',align=end',"'key:F2'");
   __parmws.win_ebtn(_okn,'text='+'&Anuluj'@+',align=end',"'key:Esc'");
   __parmws.win_edit(_okn)
?};

__parmws.fld_fml('REG','PATTERN',"exec('patternLok','magdok_wymiary')");
__parmws.fld_fml('POL','PATTERN',"exec('patternLok','magdok_wymiary')");
__parmws.fld_fml('POJ','PATTERN',"exec('patternLok','magdok_wymiary')");
__parmws.fld_fml('REG','AFTER_EDIT',"exec('popsegm','!zws_par_lmag')");
__parmws.fld_fml('POL','AFTER_EDIT',"exec('popsegm','!zws_par_lmag')");
__parmws.fld_fml('POJ','AFTER_EDIT',"exec('popsegm','!zws_par_lmag')");

_winf:=__infmws.mk_sel('Informacja'@,'T',0,'kreatorlokalin');
__infmws.win_fld(_winf,,'OPI',,,30,,0,'');
__infmws.win_fld(_winf,,'ILE',,,5,,0,'');
__infmws.win_act(_winf,0,'Kolejność');
__infmws.win_sel(_winf);

__infmws.fld_fml('OPI','BEFORE_DISPLAY');

_wlok:=__lokmws.mk_sel('Kreator lokalizacji'@,'T',0,'kreatorlokaliz');
__lokmws.win_fld(_wlok,,'KOD',,,-9,,0,'Korytarz od'@);
__lokmws.win_fld(_wlok,,'KDO',,,-9,,0,'Korytarz do'@);
__lokmws.win_fld(_wlok,,'ILR',,,-11,,0,'Liczba regałów'@);
__lokmws.win_fld(_wlok,,'ILP',,,-9,,0,'Liczba półek'@);
__lokmws.win_fld(_wlok,,'ILO',,,-14,,0,'Liczba pojemników'@);
__lokmws.win_fld(_wlok,,'SZR',,,-10,2,0,'Szerokość[m]'@);
__lokmws.win_fld(_wlok,,'DLG',,,-8,2,0,'Długość[m]'@);
__lokmws.win_fld(_wlok,,'WYS',,,-10,2,0,'Wysokość[m]'@);
__lokmws.win_fld(_wlok,,'MAS',,,-11,2,0,'Ładowność[kg]'@);
__lokmws.win_fld(_wlok,,'TOD',,,-22,2,0,'Temperatura składowania od[C]'@);
__lokmws.win_fld(_wlok,,'TDO',,,-22,2,0,'Temperatura składowania do[C]'@);
__lokmws.win_fld(_wlok,,'LPL',,,-9,,0,'Liczba palet'@);

__lokmws.win_act(_wlok,1,'Dołącz',,,,,,1);
__lokmws.win_act(_wlok,1,'Rekord',,,,,"exec('sprcreat','!zws_par_lmag')");
__lokmws.win_act(_wlok,1,'Formuła','Parametry &generacji'@@,,,"exec('creatpar','!zws_par_lmag')",,,,,,'G');
__lokmws.win_act(_wlok,1,'Formuła','&Akceptuj'@@,,,"sel_exit",,,,,,'A');
__lokmws.win_act(_wlok,0,'Dołącz',,,,,,1);
__lokmws.win_act(_wlok,0,'Popraw',,,,,,0);
__lokmws.win_act(_wlok,0,'Usuń',,,,,,0);
__lokmws.win_act(_wlok,0,'Rekord',,,,,"exec('sprcreat','!zws_par_lmag')");
__lokmws.win_act(_wlok,0,'Formuła','Parametry &generacji'@@,,,"exec('creatpar','!zws_par_lmag')",,,,,,'G');
__lokmws.win_act(_wlok,0,'Formuła','&Akceptuj'@@,,,"sel_exit",,,,,,'A');
__lokmws.win_act(_wlok,0,'Kolejność');
__lokmws.win_sel(_wlok);

__lokmws.fld_fml('KOD','PATTERN',"exec('patternLok','magdok_wymiary')");
__lokmws.fld_fml('KDO','PATTERN',"exec('patternLok','magdok_wymiary')");
__lokmws.fld_fml('KOD','BLANK',"exec('bl_segm','!zws_par_lmag')");
__lokmws.fld_fml('KDO','BLANK',"exec('bl_segm','!zws_par_lmag')");
__lokmws.fld_fml('KOD','AFTER_EDIT',"exec('pocsegm','!zws_par_lmag')");
__lokmws.fld_fml('KDO','AFTER_EDIT',"exec('pocsegm','!zws_par_lmag')");

__lokmws.fld_fml('ILR','BEFORE_EDIT',"__parmws.NOR='T'");
__lokmws.fld_fml('ILR','DISPLAY_FORMAT',"{? __parmws.NOR='N' || 'empty=1' || 'empty=0' ?}");
__lokmws.fld_fml('ILP','BEFORE_EDIT',"__parmws.NOP='T'");
__lokmws.fld_fml('ILP','DISPLAY_FORMAT',"{? __parmws.NOP='N' || 'empty=1' || 'empty=0' ?}");
__lokmws.fld_fml('ILO','BEFORE_EDIT',"__parmws.NOO='T'");
__lokmws.fld_fml('ILO','DISPLAY_FORMAT',"{? __parmws.NOO='N' || 'empty=1' || 'empty=0' ?}");

_grp_sel:=__lokmws.grp_make('Kreator lokalizacji magazynu'@,,'kreatorgrp');

__lokmws.grp_sel(_grp_sel,__lokmws,_wlok,,"exec('aktcreat','!zws_par_lmag')",,,,,,,,'maximized_with_title');
__lokmws.grp_splt(_grp_sel,,'vertical','tab1');
__lokmws.grp_sel(_grp_sel,__infmws,_winf,,"",124,,0,"",,,,'maximized_with_title');
__lokmws.win_sel(_grp_sel);

_blch:='%1%1'[1+__charL];
__parmws.blank();
__parmws.DOK:=0;
__parmws.REG:=_blch;
__parmws.POL:=_blch;
__parmws.POJ:=_blch;
__parmws.NOR:='T';
__parmws.NOP:='T';
__parmws.NOO:='T';
__parmws.add(1);
{? __lokmws.select()
|| _li:=0;
   _mi:=exec('stat_inf','!zws_par_lmag');
   PROGRESS.set(_mi,'Utworzenie lokalizacji'@,'Kreator'@);
   _tp:=time();
   EANL.cntx_psh();
   EANL.clear();
:: przypisuje doki załadunkowe/wyładunkowe
   {! _i:=1..__dok_zw
   |!
      EANL.clear();
      EANL.blank();
      EANL.DOK:='T';
      EANL.MG:=EANX.MG;
      EANX.KEANL:='D0';
      EANX.REANL:=form(0,-2,0,'99');
      EANX.PEANL:=form(0,-2,0,'99');
      EANX.OEANL:=form(_i,-2,0,'99');
      exec('kodwgseg','!zws_par_lmag');
      EANL.EAN:=EANX.KEANL+EANX.REANL+EANX.PEANL+EANX.OEANL+($EANL.MG().ref()+2);
      PROGRESS.next();
      EANL.add(1)
   !};

:: rozpisuje lokalizacje na magazynie
   _pp:=__parmws.REG;
   _pj:={? _blch=_pp | __parmws.NOR='N' || 0 || ((__charL*(_pp+1))-1)+(((__charL*(1+_pp))-1)*__max_L) ?};
   _pp:=__parmws.POL;
   _pk:={? _blch=_pp | __parmws.NOP='N' || 0 || ((__charL*(_pp+1))-1)+(((__charL*(1+_pp))-1)*__max_L) ?};
   _pp:=__parmws.POJ;
   _pl:={? _blch=_pp | __parmws.NOO='N' || 0 || ((__charL*(_pp+1))-1)+(((__charL*(1+_pp))-1)*__max_L) ?};
   _err:=0;

   __lokmws.clear();
   {? __lokmws.first()
   ||
      {!
      |? _buf:=__lokmws.KOD;
         {!
         |? {? _buf<>'D0'
            || _jj:={? __lokmws.ILR>0 || _pj || 0 ?};
               {!
               |? _kk:={? __lokmws.ILP>0 || _pk || 0 ?};
                  {!
                  |? _ll:={? __lokmws.ILO>0 || _pl || 0 ?};
                     {!
                     |? EANL.clear();
                        EANL.blank();
                        EANL.DOK:={? _mws || 'N' || 'T' ?};
                        EANL.MG:=EANX.MG;
                        EANX.KEANL:=_buf;
                        {? __parmws.NOR='N'
                        || EANX.REANL:=''
                        || _ch1:=1+((_jj%__max_L)-__charL);  _ch2:=1+((_jj%*__max_L)-__charL);
                           EANX.REANL:=_ch1+_ch2
                        ?};
                        {? __parmws.NOP='N'
                        || EANX.PEANL:=''
                        || _ch1:=1+((_kk%__max_L)-__charL);  _ch2:=1+((_kk%*__max_L)-__charL);
                           EANX.PEANL:=_ch1+_ch2
                        ?};
                        {? __parmws.NOO='N'
                        || EANX.OEANL:=''
                        || _ch1:=1+((_ll%__max_L)-__charL);  _ch2:=1+((_ll%*__max_L)-__charL);
                           EANX.OEANL:=_ch1+_ch2
                        ?};
                        EANL.SZER:=__lokmws.SZR;
                        EANL.DLUG:=__lokmws.DLG;
                        EANL.WYS:=__lokmws.WYS;
                        EANL.OBJ:=__lokmws.SZR*__lokmws.DLG*__lokmws.WYS $3;
                        EANL.TEMP_OD:=__lokmws.TOD;
                        EANL.TEMP_DO:=__lokmws.TDO;
                        EANL.MASA:=__lokmws.MAS;
                        EANL.ILPAL:=__lokmws.LPL;
                        {? _mws
                        || exec('kodwgseg','!zws_par_lmag')
                        || EANL.KOD:=EANX.KEANL
                                    +{? EANX.REANL<>'' || '-%1'[EANX.REANL] || '' ?}
                                    +{? EANX.PEANL<>'' || '-%1'[EANX.PEANL] || '' ?}
                                    +{? EANX.OEANL<>'' || '-%1'[EANX.OEANL] || '' ?}
                        ?};
                        EANL.EAN:=EANX.KEANL+EANX.REANL+EANX.PEANL+EANX.OEANL+($EANL.MG().ref()+2);
                        PROGRESS.next();
                        {? ~EANL.add(1) || _err+=1 ?};
                        _ll+=1;
                        _ll<(__lokmws.ILO+_pl)
                     !};
                     _kk+=1;
                     _kk<(__lokmws.ILP+_pk)
                  !};
                  _jj+=1;
                  _jj<(__lokmws.ILR+_pj)
               !}
            ?};
            {? _buf=__lokmws.KDO
            || 0
            || _kor1:=1+_buf; _kor2:=_buf+1;
               {? (__charL*_kor2)=__max_L
               || _wsk:=__charL*_kor1;
                  _kor1:=1+(_wsk-__charL);
                  _kor2:=1+__charL
               || _wsk:=__charL*_kor2;
                  _kor2:=1+(_wsk-__charL)
               ?};
               _buf:=_kor1+_kor2;
               1
            ?}
         !};
         __lokmws.next()
      !}
   ?};
   EANL.cntx_pop();
   PROGRESS.close();
   echo();
   {? _err>0 || FUN.info('Nie utworzono: %1 lokalizacji.\nDany kod lokalizacji przypisany już do magazynu.'@[$_err]) ?}
?};
VAR_DEL.delete('__dok_zw','__lokmws','__infmws','__charL','__max_L','__parmws');
~~


\sprcreat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdzenie poprawności
::  OLD: \sprcreat/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_max:=__max_L*__max_L;
_blch:='%1%1'[1+__charL];
_pp:=__parmws.REG;
_maxR:=_max-{? _blch=_pp || 0 || ((__charL*(_pp+1))-1)+(((__charL*(1+_pp))-1)*__max_L) ?};
_pp:=__parmws.POL;
_maxP:=_max-{? _blch=_pp || 0 || ((__charL*(_pp+1))-1)+(((__charL*(1+_pp))-1)*__max_L) ?};
_pp:=__parmws.POJ;
_maxO:=_max-{? _blch=_pp || 0 || ((__charL*(_pp+1))-1)+(((__charL*(1+_pp))-1)*__max_L) ?};

{? __lokmws.KOD=''
|| FUN.info('Należy podać oznaczenie korytarza.'@);
   'KOD'
|? __lokmws.KDO=''
|| FUN.info('Należy podać oznaczenie korytarza.'@);
   'KDO'
|? __lokmws.KOD='D0'
|| FUN.info('Oznaczenie korytarza zarezerwowane dla doków załadunkowych/wyładunkowych.'@);
   'KOD'
|? __lokmws.KDO='D0'
|| FUN.info('Oznaczenie korytarza zarezerwowane dla doków załadunkowych/wyładunkowych.'@);
   'KDO'
|? __lokmws.KOD>__lokmws.KDO
|| FUN.info('Oznaczenie korytarza DO musi być kolejne lub równe co do oznaczenia korytarza OD.'@);
   'KDO'
|? __lokmws.ILR>=_maxR
|| FUN.info('Liczba regałów musi być liczbą mniejszą od %1.'@[$_maxR]);
   'ILR'
|? __lokmws.ILP>=_maxP
|| FUN.info('Liczba półek musi być liczbą mniejszą od %1.'@[$_maxP]);
   'ILP'
|? __lokmws.ILO>=_maxO
|| FUN.info('Liczba pojemników musi być liczbą mniejszą od %1.'@[$_maxO]);
   'ILO'
|? __lokmws.ILR<0
|| FUN.info('Liczba regałów nie może być liczbą mniejszą od 0.'@);
   'ILR'
|? __lokmws.ILP<0
|| FUN.info('Liczba półek nie może być liczbą mniejszą od 0.'@);
   'ILP'
|? __lokmws.ILO<0
|| FUN.info('Liczba pojemników nie może być liczbą mniejszą od 0.'@);
   'ILO'
|? __lokmws.SZR<0
|| FUN.info('Szerokość powinna być liczbą większą lub równą zero.'@);
   'SZR'
|? __lokmws.DLG<0
|| FUN.info('Długość powinna być liczbą większą lub równą zero.'@);
   'DLG'
|? __lokmws.WYS<0
|| FUN.info('Wysokość powinna być liczbą większą lub równą zero.'@);
   'WYS'
|? __lokmws.MAS<0
|| FUN.info('Ładowność powinna być liczbą większą lub równą zero.'@);
   'MAS'
|? __lokmws.LPL<0
|| FUN.info('Liczba palet powinna być liczbą większą lub równą zero.'@);
   'LPL'
|? exec('rozcreat','!zws_par_lmag',__lokmws.KOD,__lokmws.KDO,{? (1+menu_txt())='P' || __lokmws.ref() || null ?})
|| FUN.info('Podany zakres korytarzy już został zdefiniowany w kreatorze.'@);
   'KOD'
|| ''
?}


\rozcreat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: aktualizacja informacji w okienku grupowym
::   WE: _a - nr korytarza OD
::       _b - nr korytarza DO
::       _c - ref rekordu
::   WY: 1-brak rozłącznosci 0-rozłączne
::  OLD: \rozcreat/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
__lokmws.cntx_psh();
__lokmws.clear();
{? __lokmws.first()
|| {!
   |? {? __lokmws.ref()=_c | _b<__lokmws.KOD | _a>__lokmws.KDO
      || __lokmws.next()
      || _wyn:=1;
         0
      ?}
   !}
?};
__lokmws.cntx_pop();
_wyn


\creatpar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: podajemy liczbę doków
::  OLD: \iledokow/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? __parmws.edit("{? __parmws.DOK<0
                  || FUN.info('Ilość musi być większa lub równa zero.'@);
                     'DOK'
                  || ''
                  ?}")
|| __dok_zw:=__parmws.DOK;
   __parmws.put(1) ?};
~~


\aktcreat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: aktualizacja informacji w okienku grupowym
::  OLD: \aktcreat/mws.fml
::----------------------------------------------------------------------------------------------------------------------
exec('stat_inf','!zws_par_lmag');
grp_disp(__infmws,__infmws.win_sel('?'));
~~


\stat_inf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: uzupełnia informacje o liczbie poziomów
::   WY: liczba lokalizacji
::  OLD: \stat_inf/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

_mws:=MG.MWS='T';
_kor:=0;
_reg:=0;
_pol:=0;
_poj:=0;
_dok:=__dok_zw;
_lok:=0;
__lokmws.cntx_psh();
__lokmws.clear();
{? __lokmws.first()
|| {!
   |? _buf:=__lokmws.KOD;
      _korb:=1;
      {! |? (_buf<>__lokmws.KDO)
      |! _kor1:=1+_buf; _kor2:=_buf+1;
         {? (__charL*_kor2)=__max_L
         || _wsk:=__charL*_kor1;
            _kor1:=1+(_wsk-__charL);
            _kor2:=1+__charL
         || _wsk:=__charL*_kor2;
            _kor2:=1+(_wsk-__charL)
         ?};
         _buf:=_kor1+_kor2;
         _korb+=1
      !};
      _regb:=_korb*__lokmws.ILR;
      _buf:={? __lokmws.ILR>0 || _korb*__lokmws.ILR || _korb ?};
      _polb:={? __lokmws.ILP<>0 & ~_regb || __lokmws.ILP || _regb*__lokmws.ILP ?};
      _buf*={? __lokmws.ILP>0 || __lokmws.ILP || 1 ?};
      _pojb:={? __lokmws.ILO<>0 & ~_polb || __lokmws.ILO || _polb*__lokmws.ILO ?};
      _buf*=__lokmws.ILO;
      _kor+=_korb;
      _reg+=_regb;
      _pol+=_polb;
      _poj+=_pojb;
      _lok+=_buf;
      __lokmws.next()
   !}
?};
__lokmws.cntx_pop();
__infmws.clear();
{? __infmws.first() || {! |? __infmws.del() !} ?};
{? _mws
|| __infmws.blank();
   __infmws.OPI:='Liczba doków'@;
   __infmws.ILE:=_dok;
   __infmws.add(1)
?};
__infmws.blank();
__infmws.OPI:='Liczba korytarzy'@;
__infmws.ILE:=_kor;
__infmws.add(1);
{? __parmws.NOR='T'
|| __infmws.blank();
   __infmws.OPI:='Liczba regałów (od %1)'@[__parmws.REG];
   __infmws.ILE:=_reg;
   __infmws.add(1)
?};
{? __parmws.NOP='T'
|| __infmws.blank();
   __infmws.OPI:='Liczba półek (od %1)'@[__parmws.POL];
   __infmws.ILE:=_pol;
   __infmws.add(1)
?};
{? __parmws.NOO='T'
|| __infmws.blank();
   __infmws.OPI:='Liczba pojemników (od %1)'@[__parmws.POJ];
   __infmws.ILE:=_poj;
   __infmws.add(1)
?};
__infmws.blank();
__infmws.OPI:='Liczba lokalizacji'@;
__infmws.ILE:=_wyn:=_lok+_dok;
__infmws.add(1);
__infmws.first();
_wyn


\blokeanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: blokada lub odblowanie lokalizacji
::  OLD: \blokeanl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=EANL.sel_aget();
EANL.sel_adel();
EANL.cntx_psh();
_blok:=(1+menu_txt())='Z';
{? _tab.size()
|| {? _tab.first() & FUN.ask({? _blok
                             || 'Zablokować zaznaczone lokalizacje?'@
                             || 'Odblokować zaznaczone lokalizacje?'@
                             ?})
   || {!
      |? {? (EANL.clear; EANL.seek(_tab.REF,)) & EANL.ref<>EANL.MG().EANL
         || EANL.BLOK:={? _blok || 'T' || 'N' ?};
            EANL.put(1)
         ?};
         _tab.next()
      !}
   ?}
|? EANL.ref=EANL.MG().EANL
|| FUN.info('Domyślna lokalizacja magazynu.\nBlokada niemożliwa.'@)
|? {? _blok || EANL.BLOK='T' || EANL.BLOK='N' ?}
|| FUN.info({? _blok || 'Dana lokalizacja jest zablokowana.'@ || 'Dana lokalizacja nie jest zablokowana.'@ ?})
|? FUN.ask({? _blok || 'Zablokować daną lokalizację?'@ || 'Odblokować daną lokalizację?'@ ?})
|| EANL.BLOK:={? _blok || 'T' || 'N' ?};
   EANL.put(1)
?};
EANL.cntx_pop();
~~


\akt2eanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: zmiana znacznika aktywności dla lokalizacji
::   WE: [_a] 0(domyślnie) na aktywne 1-nieaktywne
::  OLD: \akt2eanl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

_tab:=EANL.sel_aget();
EANL.sel_adel();
EANL.cntx_psh();
{? _tab.size()
|| {? _tab.first()
    & FUN.ask('Czy zmienić znacznik aktywności\n'
              'dla zaznaczonych lokalizacji na: '@+{? _a || 'NIEAKTYWNA?'@ || 'AKTYWNA?'@ ?})
   || {!
      |? {? (EANL.clear(); EANL.seek(_tab.REF,)) & EANL.ref()<>EANL.MG().EANL
         || {? {? _a || EANL.AKT='T' || EANL.AKT='N' ?}
            || do();
               EANL.AKT:={? _a || 'N' || 'T' ?};
               {? _a || EANL.BLOK:='N' ?};
               EANL.put();
               end()
            ?}
         ?};
         _tab.next()
      !}
   ?}
|? EANL.ref()=EANL.MG().EANL
|| FUN.info('Domyślna lokalizacja magazynu.\nZmiana znacznika aktywności niemożliwa.'@)
|| {? {? _a || EANL.AKT='T' || EANL.AKT='N' ?}
    & FUN.ask('Czy zmienić znacznik aktywności\ndla lokalizacji na: '@+{? _a || 'NIEAKTYWNA?'@ || 'AKTYWNA?'@ ?})
   || do();
      EANL.clear();
      EANL.AKT:={? _a || 'N' || 'T' ?};
      {? _a || EANL.BLOK:='N' ?};
      EANL.put();
      end()
   ?}
?};
EANL.cntx_pop()


\parmeanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: zmiana parametrów na lokalizacji
::  OLD: \parmeanl/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=EANL.sel_aget();
_wiele:=_tab.size()>0;
EANL.sel_adel();
_edit:=EANL.win_edit('?');
EANL.cntx_psh();
EANL.win_edit('PARAM');
{? EANL.edit("exec('chk_eanl','!zws_par_lmag',1)")
 & {? _wiele || FUN.ask('Czy zatwierdzić nowe parametry dla wszystkich zaznaczonych rekordów?'@) || 1 ?}
|| {? _wiele
   || _szr:=EANL.SZER;
      _dlg:=EANL.DLUG;
      _wys:=EANL.WYS;
      _lad:=EANL.MASA;
      _tod:=EANL.TEMP_OD;
      _tdo:=EANL.TEMP_DO;
      _pal:=EANL.ILPAL;
      _obj:=EANL.OBJ;
      {? _tab.first()
      || {!
         |? {? (EANL.clear(); EANL.seek(_tab.REF,))
            || EANL.SZER:=_szr;
               EANL.DLUG:=_dlg;
               EANL.WYS:=_wys;
               EANL.MASA:=_lad;
               EANL.TEMP_OD:=_tod;
               EANL.TEMP_DO:=_tdo;
               EANL.ILPAL:=_pal;
               EANL.OBJ:=_obj;
               EANL.put(1)
            ?};
            _tab.next()
         !}
      ?}
   || EANL.put(1)
   ?}
?};
EANL.cntx_pop();
EANL.win_edit(_edit);
~~


\wgmgmgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wyświetla listę lokalizacji wg stref magazynowania i zajetości na nich
::  OLD: \wgmgmgr/mws.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__loki');
__loki:=tab_tmp(1,'LOK','STRING[30]','','ILE','REAL','');

{? DK_LN.RODZ='I'
|| {? FUN.ask('Lokalizacje wybranej strefy?'@)
   || _opc:=2
   || _opc:=0
   ?}
|| _opc:=FUN.choice('Wybierz jedną z opcji podpowiedzi lokalizacji:'@,
                   ,'Lokalizacje dla materiału'@,'Lokalizacje &wybranej strefy'@)
?};
{? _opc>0
|| {? _opc=1
   || exec('findmlok','magdok_wymiary',DK_LN.MG,DK_L.M,DK_L.IL,null,__loki)
   || exec('wg_mggrp','!zws_par_lmag',DK_LN.MG,__loki)
   ?};

   _win_sel:=__loki.mk_sel('Lokalizacje wg stref magazynowania'@,'P',,'#inf_mggrsel');

   __loki.win_fld(_win_sel,,'LOK',,,30,,1,'Lokalizacja'@);
   __loki.win_fld(_win_sel,,'ILE',,,12,3,1,'Wolne '@+{? DK_LN.MG().PAL='T' || '[pal]' || '[m3]' ?});
   __loki.win_act(_win_sel,0,'Formuła','&Wybierz'@@,,,"sel_exit",,1,,,,'W');
   __loki.win_act(_win_sel,0,'Szukaj');
   __loki.win_act(_win_sel,0,'Kolejność');
   __loki.win_sel(_win_sel);
   __loki.clear();
   {? _opc=1 & __loki.last() || {! |? {? ~__loki.ILE || __loki.del() || __loki.prev() ?} !} ?};
   {? __loki.first()
   || {? __loki.select() || EANL.seek(exec('FindInSet','#table','EANL','KOD',__loki.LOK,__loki.LOK)) ?}
   || FUN.info('Brak dostępnych lokalizacji w magazynie.'@)
   ?}
?};
VAR_DEL.delete('__loki');
~~


\wg_mggrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: wybór lokalizacji ze strefy magazynowania
::   WE: _a - magazyn
::       _b - tabela danych
::   WY: tabela danych
::  OLD: \wg_mggrp/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=_b;
MG_GR.cntx_psh();
MG_GRP.cntx_psh();
MG_GR.index('KOD');
MG_GR.prefix();
MG_GR.win_sel('WYB');
{? MG_GR.first() & MG_GR.select()
|| MG_GRP.index('MG_GR');
   MG_GRP.prefix(MG_GR.ref(),_a);
   {? MG_GRP.first()
   || {!
      |? {? MG_GRP.EANL().AKT='T' & MG_GRP.EANL().BLOK<>'T'
         || _ilelok:={? ~MG_GRP.EANL().OBJ
                     || exec('czyzajet','magdok_wspolne',_a,MG_GRP.EANL)
                     || MG_GRP.EANL().OBJ-exec('eanlzobj','magazyn_stan',_a,MG_GRP.EANL)
                     ?};
            _wyn.clear();
            _wyn.blank();
            _wyn.LOK:=MG_GRP.EANL().KOD;
            _wyn.ILE:=_ilelok;
            _wyn.add(1)
         ?};
         MG_GRP.next()
      !}
   ?}
?};
MG_GR.cntx_pop();
MG_GRP.cntx_pop();
_wyn


\rek2eanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: rekord przed dla EANL
::  OLD: \rek2eanl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rek_eanl','!zws_par_lmag');
{? EANX.S>0
|| 'EANL2#01#01'
|| ''
?}


\rek_eanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: oblicza stan na danym rekordzie
::  OLD: \rek_eanl/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.S:=0;
SL.index('MG');
{? BEER.NAWIG='S'
|| SL.prefix(EANX.MG,FAP.M,EANL.ref())
|? BEER.NAWIG='M'
|| SL.prefix(EANX.MG,DK.M,EANL.ref())
|| SL.prefix(EANX.MG,DK_L.M,EANL.ref())
?};
{? SL.first() || {! |? EANX.S+=SL.IL; SL.next() !} ?};
EANX.S>0


\mat_mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: indeksy materiałowe przypisane do magazynu
::  OLD: \mat_mag/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.PAL='T'
|| FUN.info('Opcja niedostępna dla magazynu z obsługą palet.'@)
|| POMOC.RODZ:='T';
   exec('slo_m_ok','material',POMOC.RODZ,,,'W');
   MG.cntx_psh();
   SCRP.MG:=MG.ref();
   SCRP.M:=null;
   MX.win_sel('WM');
   MX.win_edit('REDM');
   MX.win_patt('SZUKM');
   MX.index('MG');
   MX.prefix(SCRP.MG);
   MX.hdr_sel();
   MX.hdr_sel(' '+MG.SYM);
   MX.select();
   MG.cntx_pop()
?};
''


\bl_mgmgx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wartość na blanku dla pola MX.MG
::  OLD: \bl_mgmgx/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
SCRP.MG


\bl_mmgx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wartość na blanku dla pola MX.M
::  OLD: \bl_mmgx/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
SCRP.M


\mx_addg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: grupowe dodawanie materiałów dla magazynu
::  OLD: \mx_addg/magzyn.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('tab');

M.cntx_psh();
M.index('ARODZ'); M.prefix('T','T');

_wer:=M.mk_sel('Materiały'@,'P',0,'addmat2mg',,,,,'U');
M.win_fld(_wer,,'KTM',,,20,,,'Indeks'@);
M.win_fld(_wer,,'N',,,30,,,'Nazwa'@);
M.win_fld(_wer,,'J','KOD',,10,,,'jm'@);
M.win_act(_wer,0,'Rekord',,,,"exec('rekprzed','color','MX#M#01')");
M.win_act(_wer,0,'Formuła','&Akceptuj'@@,,'Akceptacja wyboru'@,
   "{? M.sel_size()<>0 || 1 || tab:=tab_tmp(1,'REF','INTEGER',); tab.REF:=#M.ref(); tab.add(); sel_exit() ?}"
   ,,1,1,
   "tab:=M.sel_aget(); sel_exit()",,'A');
M.win_act(_wer,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','MX#M#01')",,,,,,'L');

M.win_edit('RED');
M.win_sel(_wer);
_wyn:=M.select();
{? _wyn<>0
|| {? tab.first()
   || M.prefix();
      {!
      |? {? M.seek(tab.REF,)
         || MX.MG:=MG.ref();
            MX.M:=M.ref();
            MX.A:=M.A;
            _statsM:=exec('statsM','statexam',M.ref());
            MX.DEFSTATS:={? _statsM=null() || MX.MG().DEFSTATS || _statsM ?};
            MX.add(1)
         ?};
         tab.next()
      !}
   ?}
?};
M.cntx_pop();

VAR_DEL.delete('tab');
_wyn


\mx_m_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: kolory dla słownika M przy dodawaniu materiałów do kartoteki MX
::  OLD: \mx_m_kol/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
MX.cntx_psh(); MX.index('M_MG'); MX.prefix(MG.ref(),M.ref()); _wyn:=MX.first(); MX.cntx_pop();
{? _wyn=1
|| 'MX#M#01'
|| ''
?}


\mg_eanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: definiowanie lokalizacji dla magazynu z wymiarami
::  OLD: \eanlokal/ean.fml
::       \obs_eanl/ean.fml
::----------------------------------------------------------------------------------------------------------------------
exec('myDPRINT','object');
MG.cntx_psh();
EANX.MG:=MG.ref();
EANX.CZYAKT:='T';
EANL.win_patt('RED');
EANL.win_sel('WER');
exec('ods_eanl','!zws_par_lmag');
EANL.first();
EANL.select();
MG.cntx_pop();
~~


\ods_eanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: po zmianach parametrow ustawia dzidzine wyswietlania dla lokalizacji w magazynie
::  OLD: \ods_eanl/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_blok:=EANX.MG().MWS='T' & exec('get','#params',1300,2,OPERATOR.USER)='T';
_prf:={? EANX.CZYAKT='' || 'T' || EANX.CZYAKT ?};

_no_et:={? ~exec('isDEFetyk','magazyn_mobi','EANL') || 'T' || '' ?};

EANL.index('MG');
EANL.prefix(_prf,EANX.MG);
EANL.win_edit('RED'+{? EANX.MG().MWS='T' | EANX.MG().MWS='W' || 'MWS' || '' ?});
EANL.win_patt('RED');
EANL.first;
{? EANX.CZYAKT='T'
|| EANL.actions('WER',_no_et+'GZ(A)M(A)'+{? EANX.MG().MWS<>'T' || '' || '' ?}+{? ~_blok || 'B(ZO)' || '' ?}+':Z(A)',,1)
|| EANL.actions('WER',_no_et+'GdupEJBZ(N)M(N):dZ(N)',,1)
?};
EANX.WYLZAL:={? EANX.MG().MWS='T' || 'N' || 'T' ?};
~~


\mg_rekord
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: do wyłaczania akcji i klawiszy dla tabeli magazynów
::----------------------------------------------------------------------------------------------------------------------
exec('po_il_mg','!zws_par_lmag',1);
_no_et:={? ~exec('isDEFetyk','magazyn_mobi','MG') || 'I' || '' ?};
{? MG.SL='T'
|| MG.actions_grayed('WER',_no_et+'')
|| MG.actions_grayed('WER',_no_et+'L')
?};
0


\pr_fpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja FPAL i FROZ
::  OLD: \pr_fpal/mws2.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG.PAL='T'
|| exec('fl_rodz','formula','^')
|| 0
?}


\sel_tpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: typy palet
::  OLD: \sel_tpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
TPAL.index('TYP');
TPAL.win_sel('WER');
TPAL.select()


\eang_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: formuły do nadawania kodów kreskowych
::  OLD: \eang_sel/mws.fml
::----------------------------------------------------------------------------------------------------------------------
MG.cntx_psh();
exec('fl_rodz','formula','%');
exec('autoeang','!zws_par_lmag');
VAR_DEL.delete('__eang','__winroz');

__eang:=tab_tmp(3,'TREE','TREE_REF','galazka'
         ,'LAB','STRING[100]','Etykieta'
         ,'MAG','STRING[8]','Magazyn'
         ,'FORM','STRING[40]',''
         ,'FORG','STRING[40]',''
         ,'SQL','STRING[16]','');

_win_sel:=__eang.mk_sel('Definicje kodów kreskowych'@,'P',,'#eangsel',,,__eang.size(),1);
__winroz:=_win_sel;

__eang.win_fld(_win_sel,,'LAB',,,40,,1,'Opis'@);
__eang.win_fld(_win_sel,,'MAG',,,8,,1,'Magazyn'@);
__eang.win_fld(_win_sel,,'FORM',,,20,,1,'Formuła'@);
__eang.win_fld(_win_sel,,'FORG',,,20,,1,'Form.grupy'@);
__eang.win_act(_win_sel,0,'Formuła','&Dołącz'@@,,,"exec('new_eang','!zws_par_lmag')",,,,,,'D');
__eang.win_act(_win_sel,0,'Formuła','&Popraw'@@,,,"exec('pop_eang','!zws_par_lmag')",,,,,,'P');
__eang.win_act(_win_sel,0,'Formuła','&Usuń'@@,,,"exec('del_eang','!zws_par_lmag')",,,,,,'U');
__eang.win_act(_win_sel,0,'Szukaj');
__eang.win_act(_win_sel,0,'Kolejność');

__eang.tr_fml(_win_sel,,"{? _a || {? __eang.TREE=0 || 1 || _a ?} || _a ?}");
__eang.win_sel(_win_sel);

:: przepisanie danych z EANG do tabeli tymczasowej
EANG.index('TAB');
EANG.prefix(null);
{? EANG.first()
|| {!
   |? __eang.blank();
      __eang.TREE:=0;
      __eang.LAB:=EANG.OPIS;
      __eang.MAG:='';
      __eang.FORM:=EANG.FORM().SKROT;
      __eang.FORG:=EANG.FORG().SKROT;
      __eang.SQL:=$EANG.ref();
      _tree:={? __eang.add(1) || __eang.ref() || 0 ?};
      {? _tree>0
      || _tab:=EANG.TAB;
         _fld:=EANG.FLD;
         EANG.cntx_psh();
         MG.index('SL');
         MG.prefix(ST.ODDZ,'T');
         {? MG.first()
         || {!
            |? EANG.index('TAB');
               EANG.prefix(MG.ref(),_tab,_tab,_fld,_fld);
               {? EANG.first()
               || __eang.blank();
                  __eang.TREE:=_tree;
                  __eang.LAB:=EANG.OPIS;
                  __eang.MAG:=MG.SYM;
                  __eang.FORM:=EANG.FORM().SKROT;
                  __eang.FORG:=EANG.FORG().SKROT;
                  __eang.SQL:=$EANG.ref();
                  __eang.add(1)
               ?};
               MG.next()
            !}
         ?};
         EANG.cntx_pop()
      ?};
      EANG.next()
   !}
?};

MG.clear();
MG.f_clear();
MG.f_set('SYM,NAZ','','\"MG\".SL=\'T\' ');

__eang.clear();
__eang.select();

VAR_DEL.delete('__eang','__winroz');
MG.f_clear();
MG.cntx_pop();
~~


\probj_tp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcją pola TPAL.OBJ - podpowiada objetość na podstawie wymiarów
::  OLD: \probj_tp/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? TPAL.OBJ=0
|| TPAL.OBJ:=TPAL.SZER*TPAL.DLUG*TPAL.WYS $3
?};
1


\del_tpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed usuń dla typu palety
::  OLD: \del_tpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? TPAL.count()
|| FUN.info('Typ palety wykorzystany w systemie.\nUsunięcie niemożliwe.'@);
   0
|| 1
?}


\blok_std
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: czy definicja standardowa
::  OLD: \blok_std/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? TPAL.STD='T'
|| FUN.info('Standardowy typ palety.\nModyfikacja niemożliwa.'@);
   0
|| 1
?}


\rek_tpal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza poprawność wprowadzenia typu palety
::  OLD: \rek_tpal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_wyn:=exec('chk_tpal','magdok_wspolne');
_wyn


\add_eang
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: dodanie jednego EANG o podanych parametrach - o ile nie istnieje
::   WE: _a - opis
::       _b - tabela
::       _c - pole
::       _d - ref formuły
::       _e - ref magazynu
::  OLD: \add_eang/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANG.cntx_psh();
EANG.clear();
EANG.blank();
EANG.OPIS:=_a;
EANG.TAB:=_b;
EANG.FLD:=_c;
EANG.FORM:=_d;
EANG.FORG:=_f;
EANG.MG:=_e;
EANG.add(1);
EANG.cntx_pop()


\autoeang
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: inicjuje podstawowe formuły dla kodow kreskowych
::  OLD: \autoeang/mws.fml
::----------------------------------------------------------------------------------------------------------------------
:: exec('add_eang','!zws_par_lmag','Kod dostawy','DK_L','SCEAN',null,null,null);
exec('add_eang','!zws_par_lmag','Kod lokalizacji','EANL','EAN',null,null,null);
exec('add_eang','!zws_par_lmag','Kod palety','PAL','KODK',null,null,null);
~~


\new_eang
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: dodanie nowego zapisu
::  OLD: \new_eang/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tree:={? ~__eang.TREE || #__eang.ref() || __eang.TREE ?};
_opis:={? ~__eang.TREE || __eang.LAB || __eang.LAB ?};
__eang.cntx_psh();
__eang.clear();
{? __eang.seek(_tree,) & (EANG.clear(); EANG.seek(__eang.SQL))
|| _tab:=EANG.TAB;
   _fld:=EANG.FLD
?};
__eang.cntx_pop();

{? _tab<>'' & _fld<>'' & FUN.ask('Czy dołączyć nową definicję formuły kodu kreskowego w magazynie?'@)
|| EANG.blank();
   EANG.OPIS:=_opis;
   EANG.TAB:=_tab;
   EANG.FLD:=_fld;
   _win_red:='RE'+{? EANG.TAB='PAL' || 'P' || 'D' ?};
   EANG.win_edit(_win_red);
   EANG.efld_opt(_win_red,'enable=1',,'MG');
   EANG.efld_opt(_win_red,'mark=1',,'MG');
   {? EANG.edit("{? EANG.FORM=null || FUN.info('Należy podać formułę kodu kreskowego.'@); 'FORM'
                 |? EANG.MG=null || FUN.info('Należy podać magazyn.'@); 'MG'
                 || '' ?}")
   || {? EANG.add(1)
      || __eang.blank();
         __eang.TREE:=_tree;
         __eang.LAB:=EANG.OPIS;
         __eang.MAG:=EANG.MG().SYM;
         __eang.FORM:=EANG.FORM().SKROT;
         __eang.FORG:=EANG.FORG().SKROT;
         __eang.SQL:=$EANG.ref();
         __eang.add(1)
      ?}
   ?}
?}


\pop_eang
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: poprawa zapisu
::  OLD: \pop_eang/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANG.clear();
{? EANG.seek(__eang.SQL)
|| _win_red:='RE'+{? EANG.TAB='PAL' || 'P' || 'D' ?};
   EANG.win_edit(_win_red);
   {? EANG.MG<>null()
   || EANG.efld_opt(_win_red,'enable=1',,'MG');
      EANG.efld_opt(_win_red,'mark=1',,'MG')
   || EANG.efld_opt(_win_red,'enable=0',,'MG');
      EANG.efld_opt(_win_red,'mark=0',,'MG')
   ?};
   {? EANG.edit("{? EANG.FORM=null || FUN.info('Należy podać formułę kodu kreskowego.'@); 'FORM' || '' ?}")
   || {? EANG.put(1)
      || __eang.FORM:=EANG.FORM().SKROT;
         __eang.FORG:=EANG.FORG().SKROT;
         __eang.put(1)
      ?}
   ?}
?}


\del_eang
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: usunięcie zapisu
::  OLD: \del_eang/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~__eang.TREE
|| FUN.info('Nie można usunąć definicji ogólnych.'@);
   0
|? FUN.ask('Czy usunąć definicję?\n\n'
           'Uwaga. Usunięcie skutkuję generowaniem kodu kreskowego\n'
           'w danym magazynie na podstawie definicji ogólnej.'@)
|| EANG.clear();
   {? EANG.seek(__eang.SQL)
   || EANG.del();
      __eang.del()
   ?}
?}


\pwmgeang
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyświetleniem pola EANG.MG
::  OLD: \pwmgeang/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? (1+menu_txt())='P' & EANG.MG=null
|| exec('findfnv','#color')
|? (1+menu_txt())='P' & EANG.MG<>null
|| exec('findfnrd','color')
|| ''
?}


\prmgeang
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed redakcją pola EANG.MG
::  OLD: \prmgeang/mws.fml
::----------------------------------------------------------------------------------------------------------------------
(1+menu_txt())<>'P'


\pw_forg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyświetleniem pola EANG.FORG
::  OLD: \pw_forg/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? (EANG.TAB+EANG.FLD)='DK_LSCEAN' | (EANG.TAB+EANG.FLD)='PALKODK'
|| ''
|| exec('findfnv','#color')
?}


\pr_forg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed redakcją pola EANG.FORG
::  OLD: \pr_forg/mws.fml
::----------------------------------------------------------------------------------------------------------------------
(EANG.TAB+EANG.FLD)='DK_LSCEAN' | (EANG.TAB+EANG.FLD)='PALKODK'


\po_t2mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdzenie wypelnienia pola T2MG.T
::  OLD: \po_t2mg/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? T2MG.T<>null
|| _ref:={? -(1+menu_txt())='p' || T2MG.ref() || null ?};
   _fld:=T2MG.T;
   T2MG.cntx_psh();
   T2MG.index('T');
   T2MG.prefix(MG.ref(),_fld);
   {? T2MG.first() & (_ref=null | _ref<>T2MG.ref())
   || FUN.info('Podany typ dodano już do uprawnień.'@);
      _wyn:='T'
   ?};
   T2MG.cntx_pop()
|| FUN.info('Należy podać typ dokumentu.'@);
   _wyn:='T'
?};
_wyn


\rek_sl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: Rekord dla tabeli SL
::  OLD: \rek_sl/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.JM:=SL.M().J;
~~


\all_eanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2010]
:: OPIS: przelaczenie na pelna kartoteke lokalizacji
::  OLD: \all_eanl/cechy.fml
::----------------------------------------------------------------------------------------------------------------------
sel_exit();
__znwyb:={? __znwyb='E' || 'F' |? 'AB'*__znwyb || 'A' || 'C' ?};
EANL.win_sel('SLO');
_act:=EANL.actions('SLO');
EANL.actions('SLO','');
{? EANX.MG().W_ALL
|| EANL.index('MGBLOK');
   EANL.prefix('T',EANX.MG,'N')
|| EANL.index('MGDOK');
   EANL.prefix('T',EANX.MG,'T','N')
?};
{? EANL.select(,,,{? ~(ST.MAG().MWS='T' & ST.MAG().WGMGGR='T') || 'G' || '' ?})
|| {? __znwyb='A'
   || EANX.EANL:=EANL.ref();
      EANX.LOKP:=EANX.EANL().KOD
   |? __znwyb='F'
   || EANX.LOKF:=EANL.KOD;
      __fapdkl.LOK:=EANL.KOD
   || DK_L.LOK:=EANL.ref();
      EANX.LOK:=EANL.KOD
   ?}
?};
EANL.actions('SLO',_act);
~~


\obl_obj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: uniwersalna formuła ... oblicza pole objetość
::   WE: [_a] - akronim tabeli - domyslnie cur_alfd()
::  OLD: \obl_obj/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1
|| {? type_of(_a)<>2 || _tab:=cur_tab() || _tab:=$(_a+'()') ?}
|| _tab:=cur_tab()
?};

{? _tab.SZER<0
|| FUN.info('Szerokość powinna być większa lub równa zero.'@);
   0
|? _tab.DLUG<0
|| FUN.info('Długość powinna być większa lub równa zero.'@);
   0
|? _tab.WYS<0
|| FUN.info('Wysokość powinna być większa lub równa zero.'@);
   0
|| {? _tab=M || exec('ustawJMwym','jm') || VAR.JMPRZ:=1 ?};
   _tab.OBJ:=_tab.SZER*VAR.JMPRZ*_tab.DLUG*VAR.JMPRZ*_tab.WYS*VAR.JMPRZ $3;
   win_disp();
   1
?}


\pommggr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: renumeracja M_MG_GR
::  OLD: \pommggr/mws.fml
::----------------------------------------------------------------------------------------------------------------------
M_MG_GR.cntx_psh();
{? M_MG_GR.first()
|| _i:=0;
   {!
   |? _i+=1;
      M_MG_GR.LP:=_i;
      M_MG_GR.put(1);
      M_MG_GR.next()
   !}
?};
M_MG_GR.cntx_pop()


\delmmggr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: usuniecie powiazan materialu do strefy magazynowania
::  OLD: \delmmggr/mws.fml
::----------------------------------------------------------------------------------------------------------------------

_tab:=M_MG_GR.sel_aget();
M_MG_GR.sel_adel();
M_MG_GR.cntx_psh();
{? _tab.size()
|| {? _tab.first() & FUN.ask('Czy usunąć przypisania strefy magazynowej do zaznaczonych indeksów materiałowych.'@)
   || {!
      |? {? (M_MG_GR.clear(); M_MG_GR.seek(_tab.REF,))
         || _mat:=M_MG_GR.M;
            M_MG_GR.del();
            M_MG_GR.index('M');
            M_MG_GR.prefix(_mat);
            exec('pommggr','!zws_par_lmag')
         ?};
         _tab.next()
      !}
   ?}
|| {? FUN.ask('Czy usunąć przypisanie strefy magazynowej do indeksu materiałowego.'@)
   || _mat:=M_MG_GR.M;
      M_MG_GR.del();
      M_MG_GR.index('M');
      M_MG_GR.prefix(_mat);
      exec('pommggr','!zws_par_lmag')
   ?}
?};
M_MG_GR.cntx_pop()


\addmggrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: dodanie pozycji do stref magazynowania
::  OLD: \addmggrp/mws.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__selean','__btnwyb','__btnodb');
__selean:=tab_tmp(1,'SQL','STRING[16]','');
_mg_gr:=MG_GR.ref();
MG_GRP.cntx_psh();
MG.win_sel('SLO');
{? MG.select()
|| MG_GRP.index('MG_GR');
   MG_GRP.prefix(_mg_gr,MG.ref());
   {? MG_GRP.first()
   || {!
      |? __selean.clear();
         {? ~__selean.find_key($MG_GRP.EANL)
         || __selean.SQL:=$MG_GRP.EANL;
            __selean.add(1)
         ?};
         MG_GRP.next()
      !}
   ?};
   _win:=EANL.mk_sel('Wybór lokalizacji'@,'P',0,'wyborlokaliz',,,,,'U');
   EANL.win_fld(_win,BPMN,'ACCESS',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
   EANL.win_fld(_win,,'KOD',,,20,,0,'Kod'@);
   EANL.win_fld(_win,,'EAN',,,20,,0,'Kod kreskowy'@);
   EANL.win_fld(_win,,'OP',,,40,,0,'Opis'@);
   _formula:="__selean.clear();
              {? ~__selean.find_key($EANL.ref())
              || __selean.SQL:=$EANL.ref();
                 __selean.add(1)
              ?}";
   EANL.win_act(_win,,'Formuła','&Wybierz'@@,,,_formula,,1,1,,,'W');
   __btnwyb:=EANL.win_btn(_win,'text=%1,panel=right,align=begin'['&Wybierz'@],'menu:W',,,,,,'noempty');
   _formula:="__selean.clear();
              {? __selean.find_key($EANL.ref())
              || __selean.del()
              ?}";
   EANL.win_act(_win,,'Formuła','&Odbierz'@@,,,_formula,,,1,,,'O');
   __btnodb:=EANL.win_btn(_win,'text=%1,panel=right,align=begin'['&Odbierz'@],'menu:O',,,,,,'noempty');
   EANL.win_act(_win,0,'Formuła','&Akceptuj'@@,,,"exec('wybmggrp','!zws_par_lmag')",,,,,,'A');
   EANL.win_act(_win,0,'Rekord',,,,"exec('rekgrean','!zws_par_lmag')");
   EANL.win_act(_win,0,'Szukaj');
   EANL.win_act(_win,0,'Kolejność');
   EANL.win_sel(_win);

   EANL.index('MGDOK');
   EANL.prefix('T',MG.ref(),'N');
   EANL.select()
?};
MG_GRP.cntx_pop();
VAR_DEL.delete('__selean','__btnwyb','__btnodb');
~~


\rekgrean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: dodanie pozycji do stref magazynowania
::  OLD: \rekgrean/mws.fml
::----------------------------------------------------------------------------------------------------------------------
__selean.clear();
{? __selean.find_key($EANL.ref())
|| BPMN.ACCESS:='T'
|| BPMN.ACCESS:='N'
?};
_size:=EANL.sel_size();
_win:=EANL.win_sel('?');
{? BPMN.ACCESS='T' | _size
|| EANL.actions(_win,,'O',1);
   {? ~_size
   || EANL.actions_grayed(_win,'W');
      EANL.btn_sopt(_win,__btnwyb,'state=grayed');
      EANL.btn_sopt(_win,__btnodb,'state=normal')
   || EANL.actions_grayed(_win,'');
      EANL.btn_sopt(_win,__btnwyb,'state=normal');
      EANL.btn_sopt(_win,__btnodb,'state=normal')
   ?}
|| EANL.actions(_win,,'W',1);
   {? ~_size
   || EANL.actions_grayed(_win,'O');
      EANL.btn_sopt(_win,__btnodb,'state=grayed');
      EANL.btn_sopt(_win,__btnwyb,'state=normal')
   || EANL.actions_grayed(_win,'');
      EANL.btn_sopt(_win,__btnodb,'state=normal');
      EANL.btn_sopt(_win,__btnwyb,'state=normal')
   ?}
?};
''


\wybmggrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: zatwierdzenie wyboru pozycji do strefy magazynowania
::  OLD: \wybmggrp/mws.fml
::----------------------------------------------------------------------------------------------------------------------
:: usunięcie starych zapisów
MG_GRP.index('MG_GR');
MG_GRP.prefix(MG_GR.ref(),MG.ref());
{? MG_GRP.first()
|| {!
   |? __selean.clear();
      {? __selean.find_key($MG_GRP.EANL)
      || __selean.del();
         MG_GRP.next()
      || MG_GRP.del()
      ?}
   !}
?};
:: wprowadzenie nowych zapisów
__selean.clear();
{? __selean.first()
|| {!
   |? EANL.clear();
      {? EANL.seek(__selean.SQL,) & exec('unikmggr','!zws_par_lmag',MG_GR.ref(),EANL.ref())
      || MG_GRP.clear();
         MG_GRP.blank();
         MG_GRP.MG:=MG.ref;
         MG_GRP.EANL:=EANL.ref();
         MG_GRP.add(1)
      ?};
      __selean.next()
   !}
?};
sel_exit()


\unikmggr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza czy nie ma juz takiej pozycji w strefie magazynowania
::   WE: _a -ref MG_GR
::       _b -ref EANL
::       [_c] -ref MG_GRP (dla Popraw)
::   WY: 1-nie ma 0-jest
::  OLD: \unikmggr/mws.fml
::----------------------------------------------------------------------------------------------------------------------

{? _>=3 || {? type_of(_c)<>7 || _c:=null ?} || _c:=null ?};

_wyn:=1;
MG_GRP.cntx_psh();
MG_GRP.index('EANL');
MG_GRP.prefix(_a,_b);
{? MG_GRP.first() || _wyn:={? _c=null || 0 || MG_GRP.ref=_c ?} ?};
MG_GRP.cntx_pop();
_wyn


\delmggrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: usuniecie pozycji do stref magazynowania
::  OLD: \delmggrp/mws.fml
::----------------------------------------------------------------------------------------------------------------------

_tab:=MG_GRP.sel_aget();
MG_GRP.sel_adel();
{? _tab.size() & _tab.first()
|| {? FUN.ask('Czy usunąć zaznaczone pozycję strefy magazynowania?'@)
   || {!
      |? MG_GRP.cntx_psh();
         MG_GRP.clear();
         {? MG_GRP.seek(_tab.REF,) || MG_GRP.del() ?};
         MG_GRP.cntx_pop();
         _tab.next()
      !};
      exec('nummggrp','!zws_par_lmag')
   ?}
|| {? FUN.ask('Czy usunąć pozycję strefy magazynowania?'@)
   || MG_GRP.del();
      exec('nummggrp','!zws_par_lmag')
   ?}
?}


\nummggrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: renumeracja MG_GRP
::  OLD: \nummggrp/mws.fml
::----------------------------------------------------------------------------------------------------------------------

MG_GRP.cntx_psh();
{? MG_GRP.first()
|| _i:=0;
   {!
   |? _i+=1;
      MG_GRP.LP:=_i;
      MG_GRP.put(1);
      MG_GRP.next()
   !}
?};
MG_GRP.cntx_pop()


\pokhmggr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji MG_GR.KH
::  OLD: \pokhmggr/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? MG_GR.KH=null & MG_GR.TYP_ANAL='T' || MG_GR.TYP_ANAL:='N' ?};
1


\pranmggr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola analiza
::  OLD: \pranmggr/mws.fml
::----------------------------------------------------------------------------------------------------------------------
MG_GR.KH<>null


\delmg_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: usuniecie powiazan materialu do strefy magazynowania
::  OLD: \delmg_gr/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_czymat:=exec('FindInSet','#table','M_MG_GR','MG_GR',MG_GR.ref())<>null;
_czypoz:=exec('FindInSet','#table','MG_GRP','MG_GR',MG_GR.ref())<>null;
{? FUN.ask({? _czypoz || 'Strefa magazynowania posiada pozycje.\n'@ || '' ?}+
    {? _czymat || 'Strefa magazynowania jest przypisana do indeksów materiałowych.\n'@ || '' ?}+
    'Czy usunąć strefę magazynowania '@+{? _czypoz+_czymat || '(ze wszystkimi powiązaniami)'@ || '' ?}+'?')
|| MG_GRP.index('MG_GR');
   MG_GRP.prefix(MG_GR.ref());
   {? MG_GRP.first() || {! |? MG_GRP.del() !} ?};
   M_MG_GR.index('MG_GR');
   M_MG_GR.prefix(MG_GR.ref());
   {? M_MG_GR.first()
   || {!
      |? _mat:=M_MG_GR.M;
         _ok:=M_MG_GR.del();
         M_MG_GR.cntx_psh;
         M_MG_GR.index('M');
         M_MG_GR.prefix(_mat);
         exec('pommggr','!zws_par_lmag');
         M_MG_GR.cntx_pop();
         _ok
      !}
   ?};
   MG_GR.del()
?}


\add2mate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: dodanie strefy/stref magazynowych do indeksow
::  OLD: \add2mate/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=MG_GR.sel_aget();
MG_GR.sel_adel();

_mwin:=M.mk_sel('Wybór indeksów materiałowych'@,'P',0,'#mggr2mate',,,,,'U');

M.win_fld(_mwin,,'KTM',,,30,,1,'Indeks'@);
M.win_fld(_mwin,,'N',,,50,,1,'Nazwa'@);
M.win_act(_mwin,0,'Formuła','&Akceptuj'@@,,,"exec('akc2mate','!zws_par_lmag')",,1,1,"exec('akc2mate','!zws_par_lmag')",,'A');
M.win_act(_mwin,0,'Szukaj');
M.win_act(_mwin,0,'Kolejność');
M.win_sel(_mwin);

VAR_DEL.delete('__zazmgr','__zazind');
__zazmgr:=tab_tmp(1,'LP','INTEGER',''
           ,'KOD','STRING[20]',''
           ,'REF','INTEGER','');
__zazind:=__zazmgr.ndx_tmp('',,'LP',,0,'KOD',,0);

_zwin:=__zazmgr.mk_sel('Kolejność wybranych stref magazynowania'@,'P',0,'#zmgg2mate',,,,,'U');

__zazmgr.win_fld(_zwin,,'LP',,,5,,1,'Lp.'@);
__zazmgr.win_fld(_zwin,,'KOD',,,20,,1,'KOD'@);
__zazmgr.win_act(_zwin,0,'Formuła','&Akceptuj'@@,,,"sel_exit",,1,,,,'A');
__zazmgr.win_act(_zwin,0,'Menu','Przesu&ń'@@,,,,,,,,,'Ń');
__zazmgr.win_act(_zwin,0,'Formuła','W &górę'@@,'Przesu&ń',,"exec('renumzaz','!zws_par_lmag','U')",,,1
          ,"exec('renumzaz','!zws_par_lmag','U')",,'U');
__zazmgr.win_act(_zwin,0,'Formuła','W &dół'@@,'Przesu&ń',,"exec('renumzaz','!zws_par_lmag','D')",,,1
          ,"exec('renumzaz','!zws_par_lmag','D')",,'D');
__zazmgr.win_act(_zwin,0,'Formuła','Do &numeru'@@,'Przesu&ń',,"exec('renumzaz','!zws_par_lmag','N')",,,1
          ,"exec('renumzaz','!zws_par_lmag','N')",,'N');
__zazmgr.win_act(_zwin,0,'Szukaj');
__zazmgr.win_act(_zwin,0,'Kolejność');
__zazmgr.win_sel(_zwin);

MG_GR.cntx_psh();
M.cntx_psh();
{? _tab.size()
|| {? _tab.first() & FUN.ask('Czy przypisać zaznaczone strefy magazynowania do indeksu(ów) materiałowego(ych).\n\n'
       'Uwaga. Jeśli strefy nie zostały wcześniej przypisane do wybranych indeksów\n'
       'to zostaną dołączone jako kolejne.'@)
   ||
::    przepisanie zaznaczonych rekordow
      _i:=0;
      {!
      |? {? (MG_GR.clear(); MG_GR.seek(_tab.REF,))
         || _i+=1;
            __zazmgr.clear();
            __zazmgr.blank();
            __zazmgr.LP:=_i;
            __zazmgr.KOD:=MG_GR.KOD;
            __zazmgr.REF:=_tab.REF;
            __zazmgr.add()
         ?};
         _tab.next()
      !};
      __zazmgr.index(__zazind);
      {? {? __zazmgr.first() & __zazmgr.size()>1
         || __zazmgr.dnd_sel(_zwin,,'records.#zmgg2mate',"exec('renumzaz','!zws_par_lmag')");
            __zazmgr.select()
         || 1
         ?}
      || M.index('ARODZ');
         M.prefix('T','T');
         {? M.first() || M.select() ?}
      ?}
   ?}
|| {? FUN.ask('Czy przypisać strefę magazynowania do indeksu(ów) materiałowego(ych).\n\n'
              'Uwaga. Jeśli strefa nie została wcześniej przypisana do wybranych indeksów\n'
              'to zostanie dołączona jako kolejna.'@)
   || __zazmgr.clear();
      __zazmgr.blank();
      __zazmgr.LP:=1;
      __zazmgr.KOD:=MG_GR.KOD;
      __zazmgr.REF:=#MG_GR.ref();
      __zazmgr.add(1);
      M.index('ARODZ');
      M.prefix('T','T');
      {? M.first() || M.select() ?}
   ?}
?};
MG_GR.cntx_pop();
M.cntx_pop();
__zazmgr.ndx_drop(__zazind);
__zazmgr.dnd_sel(_zwin,,'records.#zmgg2mate',"");
VAR_DEL.delete('__zazmgr','__zazind');
~~


\akc2mate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: akceptacja przypisania do materialu
::  OLD: \akc2mate/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=M.sel_aget();
M.sel_adel();
M_MG_GR.cntx_psh();
{? _tab.size()
|| {? _tab.first()
   || {!
      |? {? (M.clear(); M.seek(_tab.REF,))
         || __zazmgr.clear();
            {? __zazmgr.first()
            || {!
               |? {? (MG_GR.clear(); MG_GR.seek(__zazmgr.REF,))
                   & exec('FindInSet','#table','M_MG_GR','MG_GR_M',M.ref(),MG_GR.ref())=null
                  || M_MG_GR.index('M');
                     M_MG_GR.prefix(M.ref());
                     M_MG_GR.blank();
                     M_MG_GR.M:=M.ref();
                     M_MG_GR.MG_GR:=MG_GR.ref();
                     M_MG_GR.add(1)
                  ?};
                  __zazmgr.next()
               !}
            ?}
         ?};
         _tab.next()
      !}
   ?}
|| __zazmgr.clear();
   {? __zazmgr.first()
   || {!
      |? {? (MG_GR.clear(); MG_GR.seek(__zazmgr.REF,))
          & exec('FindInSet','#table','M_MG_GR','MG_GR_M',M.ref(),MG_GR.ref())=null
         || M_MG_GR.index('M');
            M_MG_GR.prefix(M.ref());
            M_MG_GR.blank();
            M_MG_GR.M:=M.ref();
            M_MG_GR.MG_GR:=MG_GR.ref();
            M_MG_GR.add(1)
         ?};
         __zazmgr.next()
      !}
   ?}
?};
M_MG_GR.cntx_pop();
sel_exit();
~~


\renumzaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: renumeracja zaznaczenia
::   WE: [_a] - 0(domyślnie) - drag&drop, 1-akcja do przenumerowania
::  OLD: \renumzaz/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (';UDN'*_a)>1 || _a || '' ?};

__zazmgr.cntx_psh();
{? _tryb=''
|| _ref:=dnd_info('dest_record');
   {? __zazmgr.seek(_ref) || exec('zmien_lp','#dragdrop','LP',__zazind) ?}
|| exec('zmien_lpa','#dragdrop','LP',__zazind,,,_tryb)
?};
__zazmgr.cntx_pop()


\pow2mate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: powiazanie strefy magazynowej z indeksami materialowymi
::  OLD: \pow2mate/mws.fml
::----------------------------------------------------------------------------------------------------------------------
M_MG_GR.cntx_psh();
M_MG_GR.index('MG_GR');
M_MG_GR.prefix(MG_GR.ref());
M_MG_GR.win_sel('MAT');
M_MG_GR.select();
M_MG_GR.cntx_pop();
~~


\blokmggr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola symbol sprawdzenie czy mozna poprawiac
::  OLD: \blokmggr/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=MG_GR.sel_aget();
MG_GR.sel_adel();
MG_GR.cntx_psh();
MG_GRP.cntx_psh();
EANL.cntx_psh();
_blok:=(1+menu_txt())='Z';
{? _tab.size()
|| {? _tab.first() & FUN.ask({? _blok
                             || 'Zablokować lokalizacje zaznaczonych stref magazynowych?'@
                             || 'Odblokować lokalizacje zaznaczonych stref magazynowych?'@
                             ?})
   || {!
      |? {? (MG_GR.clear; MG_GR.seek(_tab.REF,))
         || MG_GRP.index('EANL');
            MG_GRP.prefix(MG_GR.ref());
            {? MG_GRP.first()
            || {!
               |? EANL.clear();
                  {? EANL.seek(MG_GRP.EANL)
                  || EANL.BLOK:={? _blok || 'T' || 'N' ?};
                     EANL.put(1)
                  ?};
                  MG_GRP.next()
               !}
            ?}
         ?};
         _tab.next()
      !}
   ?}
|? exec('FindInSet','#table','MG_GRP','EANL',MG_GR.ref())=null
|| FUN.info('Wybrana strefa magazynowa nie ma pozycji.\nOperacja niemożliwa.'@)
|? FUN.ask({? _blok
           || 'Zablokować lokalizację danej strefy magazynowej?'@
           || 'Odblokować lokalizację danej strefy magazynowej?'@
           ?})
|| MG_GRP.index('EANL');
   MG_GRP.prefix(MG_GR.ref());
   {? MG_GRP.first()
   || {!
      |? EANL.clear();
         {? EANL.seek(MG_GRP.EANL)
         || EANL.BLOK:={? _blok || 'T' || 'N' ?};
            EANL.put(1)
         ?};
         MG_GRP.next()
      !}
   ?}
?};
MG_GR.cntx_pop();
MG_GRP.cntx_pop();
EANL.cntx_pop();
~~


\rekmg_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdzenie poprawnosci wypelnienia pol MG_GR
::   WE: [_a] - 'add' / 'put' - dołączenie lub poprawa rekordu, pusty string oznacza wywołanie w systemie
::  OLD: \rekmg_gr/mws.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rekmg_gr','magdok_wspolne')


\renumstr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: renumeracja MG_GRP
::   WE: [_a] - ''(domyślnie) - drag&drop, 'U','D','N'-akcja do przenumerowania
::  OLD: \renumstr/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (';UDN'*_a)>1 || _a || '' ?};

MG_GRP.cntx_psh();
{? _tryb=''
|| _ref:=dnd_info('dest_record');
   {? MG_GRP.seek(_ref) || exec('zmien_lp','#dragdrop','LP','MG_GR') ?}
|| exec('zmien_lpa','#dragdrop','LP','MG_GR',,,_tryb)
?};
MG_GRP.cntx_pop()


\rekmggrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdzenie poprawnosci wypelnienia pol MG_GRP
::  OLD: \rekmggrp/mws.fml
::----------------------------------------------------------------------------------------------------------------------

{? MG_GRP.MG=null
|| FUN.info('Należy podać magazyn.'@);
   'MG'
|? MG_GRP.EANL=null
|| FUN.info('Należy podać lokalizację.'@);
   'EANL'
|? ~exec('unikmggr','!zws_par_lmag',MG_GR.ref(),MG_GRP.EANL,{? (1+menu_txt())='P' || MG_GRP.ref() || null ?})
|| FUN.info('Podana lokalizacja znajduję się w danej strefie magazynowania.\nNależy podać inną.'@);
   'EANL'
|| ''
?}


\selmg_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: definiowanie stref magazynowych - dotyczy tylko magazynow z obsluga lokalizacji i typu MWS
::  OLD: \selmg_gr/mws.fml
::----------------------------------------------------------------------------------------------------------------------

{? exec('FindInSet','#table','MG','MWS','T','T')<>null
|| _wylzal:=EANX.WYLZAL;
   MG.cntx_psh();
   MG.f_clear();
   MG.clear();
   MG.f_set('SYM,NAZ','','\"MG\".MWS=\':_a\'','T');
   EANL.win_edit('REDMWS');
   EANL.win_patt('RED');
   EANL.win_dict('SLO');
   _act:=EANL.actions('SLO','WdUpG:d');
   _acg:=MG_GR.actions('WER',{? exec('get','#params',1300,2,OPERATOR.USER)='N' || 'B(ZO)' || '' ?});
   MG_GR.win_sel('GWER');
   MG_GR.index('KOD');
   MG_GR.prefix();
   MG_GRP.dnd_sel('WER',,'records.MG_GRP',"exec('renumstr','!zws_par_lmag')");
   EANX.WYLZAL:='N';
   MG_GR.select();
   MG_GRP.dnd_sel('WER',,'records.MG_GRP',"");
   MG.f_clear();
   EANX.WYLZAL:=_wylzal;
   EANL.actions('SLO',_act);
   MG_GR.actions('WER',_acg);
   {? POM.LMO
   || MG.index('MAGS');
      MG.prefix('T')
   || MG.index('MAG');
      MG.prefix()
   ?};
   MG.cntx_pop()
|| FUN.info('Brak w systemie magazynów typu MWS.\nFunkcja niedostępna.'@)
?}


\obsmggrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: formula na wypelnienie na okienku grupowym dla MG_GR
::  OLD: \obsmggrp/mws.fml
::----------------------------------------------------------------------------------------------------------------------
MG_GRP.index('MG_GR');
MG_GRP.prefix(MG_GR.ref());
grp_disp(MG_GRP,'WER')


\bl_mg_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wartosc poczatkowa pola MG_GRP.MG_GR
::  OLD: \bl_mg_gr/mws.fml
::----------------------------------------------------------------------------------------------------------------------
MG_GR.ref()


\bllp_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wartosc poczatkowa pola LP
::  OLD: \bllp_grp/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
MG_GRP.cntx_psh();
MG_GRP.index('MG_GR');
MG_GRP.prefix(MG_GR.ref());
_wyn+={? MG_GRP.last() || MG_GRP.LP || 0 ?};
MG_GRP.cntx_pop();
_wyn


\prgreanl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola MG_GRP.EANL
::  OLD: \prgreanl/mws.fml
::----------------------------------------------------------------------------------------------------------------------
EANX.MG:=MG_GRP.MG;
EANX.WYLZAL:={? EANX.MG().MWS='T' || 'N' || 'T' ?};
MG_GRP.MG<>null


\po_il_mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Po redakcji pola MG.IL
::   WE: [_a] - 0(domyślnie) podczas edycji 1-ustawienie wyszarzeń
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0) || _disp:=_a || _disp:=0 ?};

{? MG.IL='T'
|| {? ~_disp
   || MG.TYP:='DOSTAWY';
      MG.KSG:='N';
      MG.SKL:='N';
      exec('MG_DEFSTATS_bFE','statexam')
   ?};

   _enable:='enable=0'
|| '';
   _enable:='enable=1'
?};
MG.efld_opt('RED',_enable,,'KSG');
MG.efld_opt('RED',_enable,,'SKL');
MG.efld_opt('RED',_enable,,'SKL_WAL');
MG.efld_opt('RED',_enable,,'TYP');
{? MG.TYP*'DOST'
|| MG.efld_opt('RED','enable=1',,'DEFSTATS');
   MG.efld_opt('RED','mark=1',,'DEFSTATS')
|| MG.efld_opt('RED','enable=0',,'DEFSTATS');
   MG.efld_opt('RED','mark=0',,'DEFSTATS')
?};
{? MG.SKL='T' & MG.IL<>'T' || MG.efld_opt('RED','mark=1',,'SKL_WAL') || MG.efld_opt('RED','mark=0',,'SKL_WAL') ?};
1


\pr_cosmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed redakcją pola MG.COS
::----------------------------------------------------------------------------------------------------------------------
1


\po_cosmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Po redakcji pola MG.COS
::----------------------------------------------------------------------------------------------------------------------
{? MG.COS='N' || MG.DLAKH:=null() ?};
1


\pr_coskh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed redakcją pola MG.DLAKH
::----------------------------------------------------------------------------------------------------------------------
MG.COS='T'


\po_coskh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Przed redakcją pola MG.DLAKH
::----------------------------------------------------------------------------------------------------------------------
1


\pocsegm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji korytarza
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
_pole:='__lokmws.%1'[_afld];
_par:=exec('get','#params',100215,2)='T';
_bch:=1+__charL;

_wart:=form(($_pole)());

{? ~_par
|| {? (+_wart)=0 || ($_pole)():='%1%1'[_bch]
   |? (+_wart)=1 || ($_pole)():='%1%2'[_bch,_wart]
   ?}
|| {? (+_wart)=0 || ($_pole)():='%1%1'[_bch]
   |? (+_wart)=1 || {? exec('isAlphaNum','#string',_wart)
                    || ($_pole)():='%1%2'[_bch,_wart]
                    || ($_pole)():='%1%1'[_bch]
                    ?}
   || _fch:={? exec('isAlphaNum','#string',1+_wart) || 1+_wart || _bch ?};
      _lch:={? exec('isAlphaNum','#string',_wart+1) || _wart+1 || _bch ?};
      ($_pole)():='%1%2'[_fch,_lch]
   ?}
?};
1


\popsegm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji korytarza
::----------------------------------------------------------------------------------------------------------------------
_afld:=cur_afld();
_pole:='__parmws.%1'[_afld];
_par:=exec('get','#params',100215,2)='T';
_bch:=1+__charL;

_wart:=form(($_pole)());

{? ~_par
|| {? (+_wart)=0 || ($_pole)():='%1%1'[_bch]
   |? (+_wart)=1 || ($_pole)():='%1%2'[_bch,_wart]
   ?}
|| {? (+_wart)=0 || ($_pole)():='%1%1'[_bch]
   |? (+_wart)=1 || {? exec('isAlphaNum','#string',_wart)
                    || ($_pole)():='%1%2'[_bch,_wart]
                    || ($_pole)():='%1%1'[_bch]
                    ?}
   || _fch:={? exec('isAlphaNum','#string',1+_wart) || 1+_wart || _bch ?};
      _lch:={? exec('isAlphaNum','#string',_wart+1) || _wart+1 || _bch ?};
      ($_pole)():='%1%2'[_fch,_lch]
   ?}
?};
1


\pr_p_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: przed redakcją pola MG.P_ALL lub MG.W_ALL
::  OLD: \pr_pal/mws.fml
::----------------------------------------------------------------------------------------------------------------------
MG.MWS='T'

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:40 b36298564bd5f9303bcf1ed138eb3555eb0bc19b40a1bea47c5cc848db42531065c23e432860ba67319c5a61ced8780c8d04f2221620a1692ff25ba9e115b744164142b789e8cd60132b9a61f0e8f02fd947a790bd7de726dea5b9ccc28d6ec6cc8d3d285095cd45c69fa9495177d370c11593769b24712a4d7e7ab9c4da9854
