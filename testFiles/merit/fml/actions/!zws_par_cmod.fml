:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_cmod.fml
:: Utworzony: 03.11.2015
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności ZWS_PAR_CMOD - Definicje modeli controllingowych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Definicja modeli controllingowych - główna formuła czynności ZWS_PAR_CMOD
::  OLD: \modele/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
::# properties=GRP_FIRM
exec('fl_decl','dekret_aut');
exec('ini_okn','!zws_par_cmod');
SKID_MBN.cntx_psh();

SKID_MBN.index('TREE'); SKID_MBN.prefix();
_okn_grp:=SKID_MBN.grp_make('Modele danych'@,,'tab_skid_mbn1');
_skid:=SKID_MBN.grp_sel(_okn_grp,,'WER_C',,"exec('arw_skidmbn','!zws_par_cmod')",,,,,,,,'maximized');
{? REF.S_FIRMA<>REF.GRUPA
|| SKID_MBN.actions('WER_C','Z:Z')
?};
SKID_MBN.grp_splt(_okn_grp,,'horizontal','panel1',15);
SKID_MBN.grp_sel(_okn_grp,SKID_MBP,'KONTROL',,"exec('arw_skid_mbp','!zws_par_cmod')",,,,,,,,'maximized_with_title');
exec('sch_def_cech','!zws_par_cmod',SKID_MBN,_okn_grp,'panel1');
SKID_MBN.win_sel(_okn_grp); SKID_MBN.select();
VAR_DEL.delete('__SMBN_D','__SMBN_L');
SKID_MBN.cntx_pop()


\arw_skidmbn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Po odswiezeniu okna WER okna grupowego tabeli SKID_MBN
::  OLD: \arw_skidmbn/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBP.index('LP');
{? SKID_MBN.get()
|| SKID_MBP.prefix(SKID_MBN.ref());
   SKID_MBP.actions('KONTROL',,,1)
|| SKID_MBP.prefix(0);
   SKID_MBP.actions('KONTROL',':D',,1)
?};
grp_disp(SKID_MBP,'KONTROL',1)


\bembnkod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przed redakcja pola SKID_MBN.KOD
::  OLD: \bembnkod/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? -menu_txt()='popraw'
|| exec('k_insmbn','konsolidacja');
   K_INSMBN.CZY_INST<>'T'
|| K_INSMBN.CZY_INST:='N';
   1
?}


\bl_skidmbn_olap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Wartosc poczatkowa pola SKID_MBN.OLAP
::  OLD: \bl_skidmbn_olap/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| 'N'
|? cur_tab(1,1)=K_RAPORT | cur_tab(1,1)=CON_FUN
|| 'T'
|| 'N'
?}


\bl_czy_ofz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [2011]
:: OPIS: wartosc poczatkowa pola SKID_MBN.CZY_OFZ
::  OLD: \bl_czy_ofz/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>''
|| 'T'
|? var_pres('__ofz')=type_of('')
|| __ofz
|| 'N'
?}


\be_zn_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja pol SKID_MBN.EWID i SKID_MBN.CZY_OFZ
::  OLD: \be_zn_mod/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_edit:=1;
{? SKID_MBN.SKID_MBN || _edit:=0 ?};
{? _edit & -menu_txt='popraw'
|| SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
   _edit:=(SKID_MBP.size()<=5);
   SKID_MBP.cntx_pop();
   {? _edit & cur_afld='EWID'
   || SKID_MBN.cntx_psh();
      SKID_MBN.index('TREE'); SKID_MBN.prefix(SKID_MBN.ref());
      _edit:=~SKID_MBN.first();
      SKID_MBN.cntx_pop()
   ?}
?};
_edit


\mod_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wartosc poczatkowa pola SKID_MBN.TYP
::  OLD: \mod_typ/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('typ_mod')>0
|| typ_mod
|| 'O'
?}


\mod_ewid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wartosc poczatkowa pola SKID_MBN.EWID
::  OLD: \mod_ewid/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ewid_mod')>0
|| ewid_mod
|| 'T'
?}


\bl_model_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [12.10]
:: OPIS: Wartosc poczatkowa pola
::  OLD: \bl_model_spr/skid_kns.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__MBNSPR')>0 || 'T' || 'N' ?}


\bl_skid_mbn_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Wartosc poczatkowa SKID_MBN.KONTROLA
::  OLD: \bl_skid_mbn_kon/zam_pub.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('skid_mbn_kon')>=0
|| skid_mbn_kon
|? app_info('web_sesid')<>''
|| _par:=web_params_get();
   {? type_of(_par)>100 & var_pres('KONTROLA',_par)>0
   || _par.KONTROLA
   || 'N'
   ?}
|| 'N'
?}


\bl_model
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Wartosc poczatkowa pol zlaczeniowych na SKID_MBN
::  OLD: \bl_model/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('mod_przm')>0 || mod_przm || SKID_MBN.ref() ?}


\ba_skid_mbn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed dolacz okna WER_C tabeli SKID_MBN
::  OLD: \ba_skid_mbn/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_INSMBN.blank();
K_INSMBN.CZY_INST:='N';
1


\dol0_mod_kontr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula sprawdza przed dolaczeniem czy mozna zastapic biezaca pozycje
::       na nowa dolaczana pozycje
::   WY: 1 - mozna zastapic biezaca pozycje nowa dolaczana pozycja
::       0 - nie mozna zastapic biezaca pozycje nowa dolaczana pozycja
::  OLD: \dol0_mod_kontr/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('spr_wyk_model','control',SKID_MBN.ref)
|| {? (SKID_MBN.EWID='T' | SKID_MBN.CZY_OFZ='T') & SKID_MBP.size()=5
   || FUN.info('Modele dla controllingu wykorzystywane w ewidencji i/lub obiegu dokumentów\nmogą zawierać maksymalnie 5 wymiarów.'@); 0
   |? ~(SKID_MBN.EWID='T' | SKID_MBN.CZY_OFZ='T') & SKID_MBP.size=15
   || FUN.info('Model dla controllingu nie wykorzystywane w ewidencji i/lub obiegu dokumentów\nmogą zawierać maksymalnie 15 wymiarów.'@); 0
   || 1
   ?}
|| 0
?}


\dol1_mod_kontr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula dolacza nowa pozycje modelu
::   WE: _a - parametr okreslajacy sposob dolaczania rekordu
::            0 - formula uruchomiona zwykla akcja dolacz
::            1 - formula uruchomiona akcja dolacz (z strzlaka w dol)
::  OLD: \dol1_mod_kontr/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
_rr:=0;
SKID_MBP.cntx_psh();
_nr:={? SKID_MBP.LP=1 || 2 || SKID_MBP.LP+_a ?};
{? ~SKID_MBP.first() || _nr:=1 ?};
SKID_MBP.cntx_pop();
{? ~SKID_MBN.r_lock(1,1,1)
|| FUN.info('Model redagowany przez innego operatora.'@)
|| {!|?
      SKID_MBP.blank();
      SKID_MBP.LP:=_nr;
      SKID_MBP.NAZ:={? _nr=1 || 'Pozycja budżetowa' || '' ?};
      {? SKID_MBP.edit("exec('spr_mod_kontr','!zws_par_cmod')")
      || SKID_MBP.cntx_psh();
         {? SKID_MBP.last()
         || {!|? {? SKID_MBP.LP>=_nr || SKID_MBP.LP+=1; SKID_MBP.put(); SKID_MBP.prev() ?} !}
         ?};
         SKID_MBP.cntx_pop(); SKID_MBP.LP:=_nr; SKID_MBP.add();
         _nr+=1;
         _rr:=SKID_MBP.size<5
      || _rr:=0
      ?};
      _rr
   !};
   SKID_MBN.r_unlock()
?};
_rr


\spr_mod_kontr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula sprawdza poprawnosc wprowadzonej pozycji (wymiaru) modelu
::       dla controllingu
::  OLD: \spr_mod_kontr/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
exec('chk_skid_mbp','control',-menu_txt()='popraw')


\usu0_mod_kontr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula przed akcja usun pozycji modelu dla controllingu.
::       Formula sprawdza czy mozna usunac biezacy rekord
::   WY: 1 - mozna usunac biezacy rekord
::       0 - w p.p.
::  OLD: \usu0_mod_kontr/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy usunąć bieżący wiersz?'@)
|| {? SKID_MBP.LP=1
   || FUN.info(
         'Pierwszego poziomu - \'Pozycja budżetowa\''
         '\nnie można usunąć.'
         '\n\nPoziom - \'Pozycja budżetowa\' musi występować'
         '\nw modelu dla controllingu i znajdować się na pierwszej pozycji.'@);
      0
   || exec('spr_wyk_model','control',SKID_MBP.SKID_MBN)
   ?}
?}


\usu_mod_kontr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula usuwa pozycje modelu dla controllingu i przenumerywuje pozostale
::       pozycje tego modelu
::  OLD: \usu_mod_kontr/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
do();
SKID_MBP.cntx_psh();
{? SKID_MBP.next()
|| SKID_MBP.cntx_pop(); SKID_MBP.del(); _ref:=SKID_MBP.ref;
   {! |? SKID_MBP.LP-=1; SKID_MBP.put(); SKID_MBP.next() !}; SKID_MBP.seek(_ref)
|| SKID_MBP.cntx_pop(); SKID_MBP.del()
?};
end()


\imp_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Import schematu
::   WE: _a - jeśli zadeklarowane to import bieżącego schematu z pliku wskazanego w _a
::  OLD: \imp_sch/skid_xd.fml
:: ~OST: INFOPEN
::----------------------------------------------------------------------------------------------------------------------
_lock:={? cur_tab(1,1)<>SKID_MBP || 1 || 0 ?};
{? _ | PAR_SKID.get(80)='T'
|| {? _ | ~_lock | (_lock & UD_SCH.r_lock(1,1))
   || {? exec('is_kali','schemat')
      || FUN.info('Nie można zaimportować schematu.\nJest on tworzony dynamicznie w systemie.'@)
      || _server:=0;
         {? ~_
         || path_lok:='';
            _server:=1;
            tmpDir:=fmk_tmp_dir(0);
            _file:=tmpDir.get_path();
            _fn:=dlg_upload(_file,0,'.txt');
            {? _fn<>''
            || exec('eksp_sch','control',2,,_file);
               path_lok:=_file+'/'+_fn
            ?}
         || path_lok:=_a
         ?};
         {? path_lok<>''
         || SKL_IMP:=tab_tmp(3,'TYP','INTEGER','Typ'@,
                               'SYMBOL','STRING[24]','Symbol'@,
                               'OPIS','STRING[60]','Opis'@,
                               'SYM_NAD','STRING[24]','Symbol nadrzędnego'@,
                               'OPIS_NAD','STRING[60]','Opis nadrzędnego'@);
            INDSKIM1:=SKL_IMP.index('?');
            INDSKIM2:=SKL_IMP.ndx_tmp('',1,'SYM_NAD',,0,'SYM_NAD',,0);
            _uchwyt:={? _ | _server
                     || fopen(path_lok,'r',0)
                     || fopen('@'+path_lok,'r',0)
                     ?};
            {? _uchwyt
            || fread(_uchwyt);
               {! |?
                  _str:=utf8_maz(fread(_uchwyt));
                  {? _str<>'\n' & +|_str
                  || _i:=_str*'\t'; _kod:=(_i-1)+_str;
                     _i:=_str*'\t'; _str:=_i-_str; _i:=_str*'\t'; _opis:={? _i<>0 || (_i-1)+_str || _str ?};
                     {? _i<>0
                     || _i:=_str*'\t'; _str:=_i-_str; _i:=_str*'\t'; _kod_nad:={? _i<>0 || (_i-1)+_str || _str ?};
                        _i:=_str*'\t'; _str:=_i-_str; _i:=_str*'\t'; _op_nad:={? _i<>0 || (_i-1)+_str || _str ?}
                     || _kod_nad:=_op_nad:=''
                     ?};
                     SKL_IMP.TYP:={? _kod_nad<>'' || 2 || 1 ?};
                     SKL_IMP.SYMBOL:=_kod;
                     SKL_IMP.OPIS:=_opis;
                     SKL_IMP.SYM_NAD:=_kod_nad;
                     SKL_IMP.OPIS_NAD:=_op_nad;
                     SKL_IMP.add()
                  ?};
                  _str<>'\n'
               !};
               do();
               UD_DEF.cntx_psh();
               SKL_IMP.index(INDSKIM1); SKL_IMP.prefix(1);
               {? SKL_IMP.first()
               || {? cur_tab(1,1)=SKID_MBP || SKID_MBP.UD_SCH() ?};
                  UD_DEF.cntx_psh();
                  UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref,null);
                  {? UD_DEF.first() || exec('del_sch','!zws_par_cmod',null) ?};
                  {! |?
                     {? exec('add_pozs','!zws_par_cmod',SKL_IMP.SYMBOL,SKL_IMP.OPIS,null)
                     || exec('imp_skl','!zws_par_cmod',UD_DEF.ref())
                     ?};
                     SKL_IMP.del()
                  !};
                  UD_DEF.cntx_pop()
               || FUN.info('W importowanym schemacie brak jest danych.'@)
               ?};
               UD_DEF.cntx_pop();
               end();
               fclose(_uchwyt)
            ?};
            VAR_DEL.delete('SKL_IMP')
         ?};
         {? ~_ || VAR_DEL.delete('path_lok','tmpDir') ?}
      ?};
      UD_SCH.r_unlock()
   || FUN.info('Bieżący schemat jest obsługiwany przez innego operatora.'@)
   ?}
|| FUN.info('W systemie wyłączona jest ewidencja podziałów controllingowych.'@)
?}


\del_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Usuwanie definicji schematu podczas importu
::   WE: _a - ref nadrzednego
::  OLD: \del_sch/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
UD_DEF.cntx_psh();
UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_DEF.UD_SCH,_a);
{? UD_DEF.first()
|| {! |?
      exec('del_sch','!zws_par_cmod',UD_DEF.ref());
      UD_DEF.del()
   !}
|| _zwrot:=0
?};
UD_DEF.cntx_pop();
_zwrot


\add_pozs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Dodawanie pozycji schematu (UD_DEF)
::   WE: _a - symbol elementu
::       _b - opis elementu
::       _c - ref nadrzednego rekordu w UD_DEF
::   WY: (0/1) - czy udalo sie dodac rekord do UD_DEF
::  OLD: \add_pozs/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
SKIDXNAP.cntx_psh(); UD_SKL.cntx_psh();
SKIDXNAP.index('UNIK'); SKIDXNAP.prefix(UD_SCH.UD_TYP,_a,_a);
UD_SKL.index('SYMBOL'); UD_SKL.prefix();
UD_DEF.index('OPIS'); UD_DEF.prefix();
{? ~SKIDXNAP.first()
|| _nazwa:=_a;
   {? _nazwa<>''
   || _ok:=0;
      UD_SKL.index('SYMBOL'); UD_SKL.prefix(UD_SCH.UD_TYP,_nazwa,_nazwa);
      _ok:=UD_SKL.first();
      {? _ok
      || SKIDXNAP.cntx_psh();
         SKIDXNAP.index('UD_SKL'); SKIDXNAP.prefix(UD_SKL.ref());
         {? SKIDXNAP.first() || SKIDXNAP.del() ?};
         SKIDXNAP.cntx_pop()
      || UD_SKL.UD_TYP:=UD_SCH.UD_TYP;
         UD_SKL.SYMBOL:=_nazwa;
         UD_SKL.OPIS:=_b;
         UD_SKL.LISTA:=UD_SKL.AKTYWNY:='T';
         _ok:=UD_SKL.add(1)
      ?};
      {? _ok
      || SKIDXNAP.UD_SKL:=UD_SKL.ref();
         SKIDXNAP.UD_TYP:=UD_SKL.UD_TYP;
         SKIDXNAP.NAZWA:=_nazwa;
         SKIDXNAP.cntx_psh();
         SKIDXNAP.prefix(); SKIDXNAP.add();
         SKIDXNAP.cntx_pop()
      ?}
   ?}
?};
{? SKIDXNAP.first()
|| SKIDXNAP.UD_SKL();
   UD_SKL.OPIS:=_b; UD_SKL.put();
   {? UD_SCH.UD_TYP().SYMBOL='POZ_BUD'
   || SKIDXDUD.index('POZ'); SKIDXDUD.prefix(UD_SKL.ref());
      {? ~SKIDXDUD.first()
      || SKIDXDUD.blank();
         SKIDXDUD.WART_IL:='W';
         SKIDXDUD.JM:=null;
         SKIDXDUD.PREC:=0;
         SKIDXDUD.STR:='Wn';
         SKIDXDUD.WSK_WAL:='N';
         SKIDXDUD.WAL:=null;
         SKIDXDUD.CIW:='W';
         SKIDXDUD.add()
      ?}
   ?};
   UD_DEF.UD_SCH:=UD_SCH.ref();
   UD_DEF.UD_DEF:=_c;
   UD_DEF.UD_SKL:=UD_SKL.ref();
   UD_DEF.UD_POZ:=null;
   UD_DEF.SYMBOL:=UD_SKL.SYMBOL;
   UD_DEF.OPIS:=UD_SKL.OPIS;
   _zwrot:=UD_DEF.add(1)
?};
SKIDXNAP.cntx_pop(); UD_SKL.cntx_pop();
_zwrot


\imp_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Import skladnikow
::   WE: _a - ref nadrzednego UD_DEF
::  OLD: \imp_skl/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
SKL_IMP.cntx_psh(); SKL_IMP.index(INDSKIM2); SKL_IMP.prefix(SKL_IMP.SYMBOL,SKL_IMP.SYMBOL);
{? SKL_IMP.first()
|| {! |?
      {? exec('add_pozs','!zws_par_cmod',SKL_IMP.SYMBOL,SKL_IMP.OPIS,_a)
      || exec('imp_skl','!zws_par_cmod',UD_DEF.ref())
      ?};
      SKL_IMP.del()
   !}
|| _zwrot:=0
?};
SKL_IMP.cntx_pop();
_zwrot


\ae_k_insmbn_czy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Po redakcji K_INSMBN.CZY_DOK
::  OLD: \ae_k_insmbn_czy/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? K_INSMBN.CZY_DOK='N'
|| K_INSMBN.CZY_NAR:='N'
?};
1


\be_czy_nar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed redakacj K_INSMBN.CZY_NAR
::  OLD: \be_czy_nar/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_INSMBN.CZY_DOK='T'


\bv_k_insmbn_czy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed wyswietleniem K_INSMBN.CZY_DOK
::----------------------------------------------------------------------------------------------------------------------
SKID_MBN.efld_opt('RED','enable='+$(K_INSMBN.CZY_DOK='T'),K_INSMBN,'CZY_NAR')


\bd_rozne_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula uruchamiana przed wyswietleniem zmiennej ROZNE.UD_SCH
::       Formula wypelnia odpowiednia wartoscia zmienna ROZNE.UD_SCH
::  OLD: \bd_rozne_sch/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.UD_SCH:=SKID_MBP.UD_SCH().SYMBOL;
1


\f3_rozne_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula uruchamiana na klawisz F3 w polu ROZNE.UD_SCH.
::       Po nacisnieciu klawisza wyswietlane jest okienko grupowe z dostepnymi
::       dla danej pozycji typami schematow i schematami. Uzytkownik wybiera
::       schemat.
::   WY: jezeli wybrano element to zwraca zawrtosc pola
::       0 w p.p.
::  OLD: \f3_rozne_sch/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('wer_typy_schem','!zws_par_cmod') || ROZNE.UD_SCH ?}


\ae_rozne_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula po redakcji pola ROZNE.UD_SCH. Formula sprawdza czy schemat
::       zostal wprowadzony z reki. Jezli wprowadzono schemat z reki wystapi
::       odpowiedni komunikat po ktorym nalezy wybrac schemat z listy.
::   WY: zwraca zawrtosc pola
::  OLD: \ae_rozne_sch/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.UD_SCH<>SKID_MBP.UD_SCH().SYMBOL
|| FUN.info('Wybierz schemat z listy.'@);
   {? exec('wer_typy_schem','!zws_par_cmod') || ROZNE.UD_SCH ?}
|| ROZNE.UD_SCH
?}


\wer_typy_schem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2008]
:: OPIS: Formula wyswietla okienko grupowe z typami i schematami
::   WY: 1 - wybrano element
:        0 - w p.p
::  OLD: \wer_typy_schem/skid_mb.fml
::----------------------------------------------------------------------------------------------------------------------
: zapytanie sql z schematami
VAR_DEL.delete('SCHEMATY');
{? SKID_MBP.LP=1
|| SCHEMATY:=sql(
      'select UD_TYP.SYMBOL as TYP_SYM, UD_TYP.OPIS as TYP_OPIS,
      UD_SCH.SYMBOL as SCH_SYM, UD_SCH.OPIS as SCH_OPIS, UD_SCH.reference as UD_SCH, UD_SCH.SYSTEM from
      UD_TYP join UD_SCH using(UD_TYP.reference,UD_SCH.UD_TYP) order by TYP_SYM, SCH_SYM'
   )
|| SCHEMATY:=sql(
      'select UD_TYP.SYMBOL as TYP_SYM, UD_TYP.OPIS as TYP_OPIS,
      UD_SCH.SYMBOL as SCH_SYM, UD_SCH.OPIS as SCH_OPIS, UD_SCH.reference as UD_SCH, UD_SCH.SYSTEM from
      UD_TYP join UD_SCH using(UD_TYP.reference,UD_SCH.UD_TYP) order by SCH_SYM'
   )
?};
ndx1:=SCHEMATY.ndx_tmp('',1,'TYP_SYM',,1,'SCH_SYM',,1,'SCH_SYM',,1);
ndx2:=SCHEMATY.ndx_tmp('',1,'TYP_SYM',,1,'SCH_OPIS',,1,'SCH_OPIS',,1);
{? SKID_MBP.LP=1
|| SCHEMATY.prefix('POZ_BUD')
|| SCHEMATY.prefix('POZ_BUD');
   {? SCHEMATY.first() || {! |? SCHEMATY.del() !} ?};
   SCHEMATY.prefix()
?};
_wer:=SCHEMATY.mk_sel('Schematy'@,'P',0,'f3_schematy',,,,0,'U');
SCHEMATY.win_fld(_wer,,'SCH_SYM',,,8,,,'Symbol schematu'@,,'Symbol schematu danych'@);
SCHEMATY.win_fld(_wer,,'SCH_OPIS',,,35,,,'Opis schematu'@,,'Opis schematu danych'@);
{? SKID_MBP.LP<>1
|| SCHEMATY.win_fld(_wer,,'TYP_SYM',,,8,,,'Symbol typu'@,,'Symbol typu schematu danych'@);
   SCHEMATY.win_fld(_wer,,'TYP_OPIS',,,35,,,'Opis typu'@,,'Opis typu schematu danych'@)
?};
SCHEMATY.win_act(_wer,0,'Formuła','Wybierz'@@,,,,"
   ROZNE.UD_SCH:=SCHEMATY.SCH_SYM;
   UD_SCH.cntx_psh(); UD_SCH.prefix();
   {? UD_SCH.seek(BB.sqlint(SCHEMATY.UD_SCH),) || SKID_MBP.UD_SCH:=UD_SCH.ref() ?};
   UD_SCH.cntx_pop();
   sel_exit()
",1);
::{? FL.SYSTEM='CONTROL'
::|| SCHEMATY.win_act(_wer,0,'Formuła','Dołącz',,,,"exec('edi_sch','skid_mb',1)");
::   SCHEMATY.win_act(_wer,0,'Formuła','Popraw',,,,"exec('edi_sch','skid_mb',2)");
::   SCHEMATY.win_act(_wer,0,'Formuła','Usuń',,,,"exec('edi_sch','skid_mb',3)");
::   SCHEMATY.win_act(_wer,1,'Formuła','Dołącz',,,,"exec('edi_sch','skid_mb',1)",1);
::   SCHEMATY.win_act(_wer,,'Rekord',,,,"{? SCHEMATY.SYSTEM='T'
::                                       || SCHEMATY.actions(SCHEMATY.win_sel('?'),'U',,1)
::                                       || SCHEMATY.actions(SCHEMATY.win_sel('?'),,,1)
::                                       ?}")
::?};
SCHEMATY.win_act(_wer,,'Kolejność');
SCHEMATY.win_sel(_wer);
_rr:=SCHEMATY.select();
VAR_DEL.delete('SCHEMATY','ndx1','ndx2');
_rr


\definicja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja definicja okna KONTROL tabeli SKID_MBP
::  OLD: \definicja/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
not_all:=0;
{? ~_ || _a:=1 ?};
SKID_MBN.cntx_psh(); SKID_MBP.cntx_psh();
UD_DEF.index('SYMBOL');
{? XINFO.MSCHWIEL & XINFO.MSCHWIEL=UD_SCH.ref()
|| XINFO.MSCHWIEL().UD_TYP();
   UD_DEF.prefix(XINFO.MSCHWIEL)
|| SKID_MBP.UD_SCH().UD_TYP();
   UD_DEF.prefix(SKID_MBP.UD_SCH)
?};
UD_POW.index('SKL'); UD_POW.prefix;
okno:=UD_DEF.mk_sel('Definicja schematu'@,'P',0,'uddefkontrol',,,,1);
UD_DEF.win_fld(okno,,'SYMBOL',,,20,,,,,'Symbol'@);
UD_DEF.win_fld(okno,,'OPIS',,,60,,,,,'Opis'@);
{? (XINFO.MSCHWIEL & XINFO.MSCHWIEL=UD_SCH.ref()) | SKID_MBP.LP=1
|| UD_DEF.win_fml(okno,,'SYMBOL',,'ICON_BEFORE',"
   'xwin16.png:'+
   {? UD_DEF.ZN_AGR='+'
   || '56'
   |? UD_DEF.ZN_AGR='-'
   || '170'
   |? UD_DEF.ZN_AGR='~'
   || '81'
   |? UD_DEF.ZN_AGR='*'
   || '171'
   || '172'
   ?}
   ");
   UD_DEF.win_fml(okno,,'OPIS',,'ICON_BEFORE',"
   K_FORM.cntx_psh(); K_FORM.index('NAZ'); K_FORM.prefix(UD_DEF.ref());
   _plus:=K_FORM.first();
   K_FORM.cntx_pop();
   {? _plus
   || 'xwin16.png:46'
   || ''
   ?}
   ")
|| exec('uddef_icon','!zws_par_cmod',okno)
?};
UD_DEF.win_act(okno,,'Formuła','Dołącz'@@,,,"exec('edit_uddef','!zws_par_cmod',1)",,1,,,,'D');
UD_DEF.win_act(okno,,'Formuła','Dołącz jako &główny'@@,,,"exec('edit_uddef','!zws_par_cmod',2)",,,,,,'G');
UD_DEF.win_act(okno,1,'Formuła','Dołącz jako &główny'@@,,,"exec('edit_uddef','!zws_par_cmod',2)",,1,,,,'G');
UD_DEF.win_act(okno,,'Formuła','Popraw'@@,,,"exec('edit_uddef','!zws_par_cmod',3)",,,,,,'P');
UD_DEF.win_act(okno,,'Formuła','Usuń'@@,,'Usunięcie zapisu',"exec('ud_def_au','schemat')",,,,,,'U');
{? (XINFO.MSCHWIEL & XINFO.MSCHWIEL=UD_SCH.ref()) | SKID_MBP.LP=1
|| UD_DEF.win_act(okno,,'Formuła','Zmień z&nak operacji'@@,,'Zmienia znak operacji',"
      {? UD_DEF.sel_size()=0
      || {? ~exec('znak_operacji','!zws_par_cmod') || __ZN_OP:=-1 ?}
      ?};
      {? __ZN_OP<>-1
      || UD_DEF.ZN_AGR:=
         {? __ZN_OP=0 || '+'
         |? __ZN_OP=1 || '-'
         |? __ZN_OP=2 || '/'
         |? __ZN_OP=3 || '*'
         || '~'
         ?};
         UD_DEF.put()
      ?};
      {? UD_DEF.sel_size()=0
      || VAR_DEL.delete('__ZN_OP')
      ?}
   ",,1,1,"
      exec('znak_operacji','!zws_par_cmod')
   ","VAR_DEL.delete('__ZN_OP')",'N')
?};
UD_DEF.win_act(okno,,'Formuła','Słownik &elementów'@@,,,"exec('element_drzewa','!zws_par_cmod')",,1,,,,'E');
UD_DEF.win_act(okno,,'Formuła','Cechy'@@,,'Cechy elementu',"exec('wyk_cech','!zws_par_cmod')",,,,,,'C');
{? XINFO.MSCHWIEL & XINFO.MSCHWIEL=UD_SCH.ref()
|| UD_DEF.win_act(okno,,'Formuła','MPK'@@,,'Przeglądanie powiązania elementów z MPK',
                  "exec('m4_kp_mpk','control_marza')",,,,,,'M');
   UD_DEF.win_act(okno,,'Formuła','Przypisz k&onta'@@,,'Przypisania kont do pozycji budżetowych',
                  "exec('m4_przyp_konta','control_marza')",,,,,,'O')
?};
{? UD_SCH.UD_TYP().SYMBOL='STANPRAC' & XINFO.MSCHWIEL<>UD_SCH.ref()
|| UD_DEF.win_act(okno,,'Formuła','P&rzywróć wakat'@@,,'Przywraca wakat w miejsce wprowadzonego pracownika'@,,
                  "exec('wakat_rest','!zws_par_cmod')",,,,,'R')
?};
UD_DEF.win_act(okno,,'Wyświetl',,,,"exec('dspudskl','!zws_par_cmod')");
UD_DEF.win_act(okno,,'Formuła','Zwiń/rozwiń'@@,,'Zwinięcie/rozwinięcie wszystkich gałęzi'@,
               "exec('ud_def_zwin','schemat',okno)",,,,,,'Z');
UD_DEF.win_act(okno,,'Formuła','Przesuń do &wybranego'@@,,,"exec('przesun','!zws_par_cmod',1)",,,1,,,'W');
UD_DEF.win_act(okno,,'Rekord',,,,"
   UD_DEF.UD_SKL(); UD_POW.prefix(UD_DEF.UD_SKL);
   {? UD_POW.first() & (UD_POW.size=1 | UD_POW.UD_TYP().SYMBOL<>'STANPRAC')
   || {? not_all
      || UD_DEF.actions(okno,'RDGPU:DU',,1)
      || UD_DEF.actions(okno,'R',,1)
      ?}
   || {? not_all
      || UD_DEF.actions(okno,'DGPU:DU',,1)
      || UD_DEF.actions(okno,,,1)
      ?}
   ?};
   exec('rekprzed','color','UD_DEF#06#')
");
UD_DEF.win_act(okno,,'Formuła','Legenda'@@,,'Opis znaczenia kolorów wierszy',,
               "exec('legenda','color','UD_DEF#06')",,,,,'L');
UD_DEF.actions(okno,,'N');
_dol:=UD_DEF.win_btn(okno,'text=%1,panel=right,align=begin'['Dołącz'@],'menu:D');
UD_DEF.btn_opt(_dol,'tooltip='+'Dołączanie bieżącego zapisu'@);
_pop:=UD_DEF.win_btn(okno,'text=%1,panel=right,align=begin'['Popraw'@],'menu:P');
UD_DEF.btn_opt(_pop,'tooltip='+'Poprawianie bieżącego zapisu'@);
_del:=UD_DEF.win_btn(okno,'text=%1,panel=right,align=begin'['Usuń'@],'menu:U');
UD_DEF.btn_opt(_del,'tooltip='+'Usuwanie bieżącego zapisu'@);
{? ~not_all
|| UD_DEF.dnd_sel(okno,,'records.UD_DEF',"exec('przesun','!zws_par_cmod',0)")
?};
{? (XINFO.MSCHWIEL & XINFO.MSCHWIEL=UD_SCH.ref()) | SKID_MBP.LP=1
|| TTHELP:=tab_tmp(2,
      'SYMBOL','STRING[16]','Symbol'@,
      'OPIS','STRING[60]','Opis'@
   );
   _oh:=TTHELP.mk_sel('Elementy formuły'@,'P',,,,,,,'U');
   TTHELP.win_fld(_oh,,'SYMBOL',,,20,,,,,'Symbol elementu'@);
   TTHELP.win_fld(_oh,,'OPIS',,,62,,,,,'Opis elementu'@);
   TTHELP.win_sel(_oh);
   TTUSE:=tab_tmp(2,
      'SYMBOL','STRING[16]','Symbol'@,
      'OPIS','STRING[60]','Opis'@
   );
   _ou:=TTUSE.mk_sel('Element w formułach'@,'P',,,,,,,'U');
   TTUSE.win_fld(_ou,,'SYMBOL',,,20,,,,,'Symbol elementu'@);
   TTUSE.win_fld(_ou,,'OPIS',,,62,,,,,'Opis elementu'@);
   TTUSE.win_sel(_ou);
   _og:=UD_DEF.grp_make('Definicja schematu'@,,'uddefkontrol2');
   UD_DEF.grp_sel(_og,,okno,,"
      K_FORM.index('NAZ');
      {? UD_DEF.get()
      || K_FORM.prefix(UD_DEF.ref())
      || K_FORM.prefix(0)
      ?};
      UD_DEF.UD_SKL();
      exec('be_skl','schemat',1);
      UNPAR.P10:=SKIDXDUD.WAL().KOD; UNPAR.P10_BV:='';
      UD_DEF.cntx_psh(); UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_DEF.UD_SCH,UD_DEF.ref());
      {? UD_DEF.first()
      || UNPAR.P11:='';
         {!
         |? {? UD_DEF.ZN_AGR<>'~'
            || _zn:=UD_DEF.ZN_AGR;
               {? _zn='*' | _zn='/'
               || UNPAR.P11:={? UNPAR.P11<>'' || '( '+UNPAR.P11+' )'+_zn || '' ?}+'['+UD_DEF.SYMBOL+']'
               || UNPAR.P11+={? UNPAR.P11<>'' | _zn='-' || _zn || '' ?}+'['+UD_DEF.SYMBOL+']'
               ?}
            ?};
            UD_DEF.next()
         !}
      || UNPAR.P11:='['+UD_DEF.SYMBOL+']'
      ?};
      UD_DEF.cntx_pop();
      exec('use_help','!zws_par_cmod');
      grp_disp(K_FORM,'WER',1)
   ",,,28,,,,,'maximized');
   UD_DEF.grp_splt(_og,,'horizontal','panel3');
   UD_DEF.grp_sel(_og,TTUSE,_ou,,,,,,,,,,'maximized_with_title');
   UD_DEF.grp_splt(_og,,'vertical','panel1');
   UD_DEF.grp_sel(_og,K_FORM,'WER',,"exec('k_form_help','!zws_par_cmod')",,,10,,,,,'maximized_with_title');
   UD_DEF.grp_splt(_og,'panel1','horizontal','panel2');
   UD_DEF.grp_sel(_og,TTHELP,_oh,,,,,,,,,,'maximized_with_title');
   UD_DEF.win_sel(_og)
|| UD_DEF.win_sel(okno)
?};
UD_SKL.win_sel('WER'); UD_SKL.win_dict('WER');
okn_def:=okno;
{? not_all
|| UD_DEF.actions(okno,'DGPU:DU')
|| UD_DEF.actions(okno)
?};
UNPAR.P11_AE:=UNPAR.P11_BE:=UNPAR.P11_BV:=UNPAR.P11_F3:='';
UNPAR.PF_BE:='exec(\'be_unpar_f\',\'!zws_par_cmod\')';
UNPAR.PF1_BE:=UNPAR.PF2_BE:=UNPAR.PF_BE;
_ag:='';
{? SKID_MBN.TYP<>'P' & (XINFO.MSCHWIEL=UD_SCH.ref()) || _ag+='R' ?};
UD_DEF.actions_grayed(okno,_ag);
UD_DEF.select();
VAR_DEL.delete('okno','okn_def','default','not_all','TTHELP','TTUSE');
SKID_MBN.cntx_pop(); SKID_MBP.cntx_pop()


\przesun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [22.26]
:: OPIS: formuła wykonywana w celu przesunięcia rekordów w drzewie jako przypisane pod wybrany rekord,
::       tabela UD_DEF, okno tymczasowe
::   WE: [_a] - tryb 0(domyślnie)-d&d, 1-akcja
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
{? ~_tryb
|| _dest:=dnd_info('dest_record');
   _sel:=dnd_info('dropped_records')
|| {? var_press('dest_record')=-1
   || dest_record:=_dest:=-1;
      UD_DEF.cntx_psh();
      _win_acr:=UD_DEF.mk_sel('Wybierz element docelowy','P',,,,,,1);
      UD_DEF.win_fld(_win_acr,,'SYMBOL');
      UD_DEF.win_fld(_win_acr,,'OPIS');
      UD_DEF.win_act(_win_acr,0,'Formuła','&Wybierz'@@,,'Wybór docelowej pozycji'@,,"sel_exit",1,,,,'W');
      UD_DEF.win_sel(_win_acr);
      {? UD_DEF.select() || dest_record:=_dest:=UD_DEF.ref() ?};
      UD_DEF.cntx_pop()
   || _dest:=dest_record
   ?};
   {? UD_DEF.sel_size()<=1 || {? var_press('dest_record')>-1 || &dest_record ?} ?};
   _sel:=tab_tmp(1,'REF','INTEGER','');
   _sel.blank();
   _sel.REF:=#UD_DEF.ref();
   _sel.add(1)
?};
{? _dest<>null
|| _ok:=0;
   UD_DEF.cntx_psh();
   UD_DEF.prefix();
   {? UD_DEF.seek(_dest)
   || _ok:=exec('ud_def_in_view','control')
   ?};
   UD_DEF.cntx_pop();
   {? _ok & _sel.first()
   || {!
      |? {? UD_DEF.seek(_sel.REF,) & #UD_DEF.ref()<>_dest
         || UD_DEF.UD_DEF:=_dest;
            UD_DEF.put()
         ?};
         _sel.next()
      !}
   ?}
?}


\znak_operacji
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Zwraca znak operacji
::  OLD: \znak_operacji/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_nr:=
{? UD_DEF.ZN_AGR='+'
|| 0
|? UD_DEF.ZN_AGR='-'
|| 1
|? UD_DEF.ZN_AGR='/'
|| 2
|? UD_DEF.ZN_AGR='*'
|| 3
|| 4
?};
UNPAR.P37:=_nr;
UNPAR.P37_BV:=UNPAR.P37_BE:=UNPAR.P37_AE:='';
UNPAR.P39_AE:=UNPAR.P39_BE:=UNPAR.P39_BV:=UNPAR.P40_AE:=UNPAR.P39_BE:='';
SKIDXDUD.win_efml('ZNAK_OPR',UNPAR,'P39_AE',,'ICON_BEFORE',"'xwin16.png:56'");
SKIDXDUD.win_efml('ZNAK_OPR',UNPAR,'P39_BE',,'ICON_BEFORE',"'xwin16.png:170'");
SKIDXDUD.win_efml('ZNAK_OPR',UNPAR,'P39_BV',,'ICON_BEFORE',"'xwin16.png:172'");
SKIDXDUD.win_efml('ZNAK_OPR',UNPAR,'P40_AE',,'ICON_BEFORE',"'xwin16.png:171'");
SKIDXDUD.win_efml('ZNAK_OPR',UNPAR,'P40_BE',,'ICON_BEFORE',"'xwin16.png:81'");
SKIDXDUD.win_edit('ZNAK_OPR');
{? SKIDXDUD.edit()
|| __ZN_OP:=UNPAR.P37; 1
|| 0
?}


\edit_uddef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Edycja rekordow w tabeli UD_DEF
::   WE: _a - 1 - dolacz
::            2 - dolacz na najwyzszym poziomie
::            3 - popraw
::  OLD: \edit_uddef/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1 | _a=2
|| UD_TYP.cntx_psh();
   {? UD_SCH.UD_TYP().SYMBOL='POZ_BUD'
   || ud_skl_pb:=1
   || VAR_DEL.delete('ud_skl_pb')
   ?};
   UD_TYP.cntx_pop();
   co_dod:=_a; ref_nad:={? _a=2 || null || UD_DEF.ref() ?};
   {? UD_SCH.SYMBOL='STR_PRAC' & UD_SCH.UD_TYP().SYMBOL='STANPRAC'
   || exec('dod_prac','control');
      0
   |? _a<>1 | exec('ud_def_child','schemat') | exec('ud_def_in_view','control')
   || UD_SKL.cntx_psh();
      UD_SKL.index('SYMBOL'); UD_SKL.prefix(UD_TYP.ref());
      UD_SKL.win_sel('WYB');
      {? UD_SKL.select()
      || exec('edit_uddef1','!zws_par_cmod')
      ?};
      UD_SKL.cntx_pop()
   ?};
   VAR_DEL.delete('co_dod','ref_nad')
|| UD_SKL.cntx_psh(); UD_SKL.prefix();
   UD_DEF.UD_SKL();
   UD_DEF.UD_SCH().UD_TYP();
   exec('be_skl','schemat',1);
   exec('okn_skl','control');
   {? UD_SKL.edit("exec('ar_ud_skl','!zws_par_cmod')")
   || do();
      {? UD_SKL.put()
      || UD_DEF.SYMBOL:=UD_SKL.SYMBOL;
         UD_DEF.OPIS:=UD_SKL.OPIS;
         {? UD_DEF.put()
         || exec('ae_skl','schemat',{? UD_TYP.SYMBOL='POZ_BUD' || 1 || 3 ?})
         || undo()
         ?}
      || undo()
      ?};
      end()
   ?};
   UD_SKL.cntx_pop()
?}


\edit_uddef1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Edycja rekordow w tabeli UD_DEF - wewnetrzna
::  OLD: \edit_uddef1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.blank(1);
UD_DEF.UD_SCH:=UD_SCH.ref();
UD_DEF.UD_DEF:=ref_nad;
UD_DEF.UD_SQL:=$ref_nad;
UD_DEF.UD_SKL:=UD_SKL.ref();
UD_DEF.SYMBOL:=UD_SKL.SYMBOL;
UD_DEF.OPIS:=UD_SKL.OPIS;
{? ~UD_DEF.add(1)
|| FUN.info('Wybrany element występuje już w schemacie.'@)
?}


\ar_ud_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Po redakcji UD_SKL
::----------------------------------------------------------------------------------------------------------------------
_r:=exec('ud_skl_ae','schemat',-menu_txt()='popraw');
{? type_of(_r)=type_of(1)
|| 1
?};
_r


\bexddwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [2006]
:: OPIS: Przed redakcja waluty w definicji elementu
::  OLD: \bexddwal/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? UNPAR.P1 & UNPAR.P2
|| {? XINFO.SLWAL<>0 || XINFO.SLWAL() ?}; 1
?}


\bexdudjm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Przed redakcja ROZNE.JM przy edycji SKIDXDUD
::  OLD: \bexdudjm/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P2=0


\be_unpar_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed redakcja UNPAR.F
::  OLD: \be_unpar_f/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
ZMIENNE.RODZAJ:=FL.TYP_WYN:='C';
1


\element_drzewa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2011]
:: OPIS: Okienko UD_SKL
::  OLD: \element_drzewa/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_SKL.index('SYMBOL'); UD_SKL.prefix(UD_TYP.ref());
UD_SKL.seek(UD_DEF.UD_SKL);
UD_SKL.win_sel('WER');
UD_SKL.select(,1,,'T')


\dvxdpozb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [2006]
:: OPIS: Wartosc domyslna pola SKIDXDUD.POZ_BUD
::  OLD: \dvxdpozb/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
UD_SKL.ref()


\uddef_icon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Ikonki tabeli UD_DEF
::   WE: _a - akronim okienka
::  OLD: \uddef_icon/skid_ud.fml
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.win_fml(_a,,'SYMBOL',,'ICON_BEFORE',"
UD_SKL.cntx_psh();
UD_DEF.UD_SKL();
_zwrot:={? UD_SKL.LISTA='T' || '76' || '8' ?};
UD_DEF.cntx_psh(); UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_DEF.UD_SCH,#UD_DEF.ref());
{? UD_DEF.first() || _zwrot:='' ?};
UD_SKL.cntx_pop(); UD_DEF.cntx_pop();
{? _zwrot=''
|| _zwrot:={? UD_DEF.tr_state=1 || '75' || '74' ?}
?};
'xwin16.png:'+_zwrot")


\be_kform
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przed redakcja pola K_FORM.F
::  OLD: \be_kform/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_FORM.TYP='F'


\ae_kftyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Po redakcja pola K_FORM.TYP
::  OLD: \ae_kftyp/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? K_FORM.TYP<>'F'
|| K_FORM.memo_set(,'F')
?};
1


\ar_kform
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Rekord po tabeli K_FORM
::  OLD: \ar_kform/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_chk:=exec('chk_kfom','control',-menu_txt()<>'popraw',K_FORM.memo_txt(0,0,'F'));
{? _chk=''
|| K_FORM.cntx_psh();
   _ok:=K_FORM.get();
   K_FORM.cntx_pop();
   {? _ok || K_FORM.memo_put(,'F') ?}
?};
_chk


\ba_kform
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przed dolacz tabeli K_FORM
::  OLD: \ba_kform/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
SKIDXDUD.cntx_psh();
SKIDXDUD.index('POZ'); SKIDXDUD.prefix(UD_DEF.UD_SKL);
{? SKIDXDUD.first() & SKIDXDUD.ONLY_L='T'
|| UD_SKL.prefix();
   UD_DEF.UD_SKL();
   _tab:=UD_SKL.testlink(2);
   {? _tab.find_key('SKIDXD',)
   || _ok:=FUN.ask(
         'Istnieją podziały controllingowe\n'
         'związane z pozycją budżetową \'%1\'.\n'
         'Czy kontynuować?'@[UD_SKL.SYMBOL])
   ?}
?};
SKIDXDUD.cntx_pop();
{? _ok
|| K_FORM.win_edit('RED');
   K_FORM.blank();
   K_FORM.memo_set(,'F');
   _ref:=K_FORM.ref();
   {? K_FORM.add()
   || {? K_FORM.edit("exec('ar_kform','!zws_par_cmod')")
      || K_FORM.put()
      || K_FORM.del();
         K_FORM.seek(_ref)
      ?}
   ?}
?}


\bm_k_form
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Przed popraw w oknie WER tabeli K_FORM
::  OLD: \bm_k_form/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('ud_def_in_view','control',0,K_FORM.K_W_OBL)=0
|| FUN.info('Element \'%1\' użyty w widoku danych ze wskazanym wariantem obliczeń.'@[K_FORM.UD_DEF().SYMBOL]);
   0
|| 1
?}


\ar_kwobl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Rekord po tabeli K_W_OBL
::  OLD: \ar_kwobl/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=__CHK.record(K_W_OBL,,'NAZ');
{? _r=''
|| K_W_OBL.cntx_psh();
   K_W_OBL.index('NAZ'); K_W_OBL.prefix();
   _ref:=K_W_OBL.ref(); _naz:=K_W_OBL.NAZ;
   {? K_W_OBL.find_key(_naz,_naz) & (-menu_txt()<>'popraw' | _ref<>K_W_OBL.ref())
   || FUN.info('Istnieje wariant obliczeń \'%1\'.'@[_naz]);
      _r:='NAZ'
   ?};
   K_W_OBL.cntx_pop()
?};
_r


\k_form_help
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Uzupelnia tabele pomocy do algorytmu liczenia pozycji budzetowych
::----------------------------------------------------------------------------------------------------------------------
TTHELP.erase();
_t:=K_FORM.memo_txt(0,1,'F');
_tt:=''; _jest:=0;
{!
|? _p:=_t*'[[';
   {? _p
   || _jest:=1;
      _tt:=(_p-1)+_t;
      _t:=(_p+1)-_t;
      _p:=_t*']]';
      _t:=(_p+1)-_t;
      1
   ?}
!};
{? _jest
|| {? _t<>''
   || _tt+=_t
   ?};
   _t:=_tt
?};
_ok:=1;
_ok2:=1;
{!
|? _p:=_t*'[';
   {? _p
   || _t:=_p-_t;
      _p:=_t*']';
      {? _p
      || _kod:=(_p+_t)-1;
         _t:=_p-_t;
         UD_DEF.cntx_psh();
         UD_DEF.index('SCHSYM'); UD_DEF.prefix(UD_DEF.UD_SCH,_kod,_kod);
         {? UD_DEF.first()
         || {? ~TTHELP.find_key(UD_DEF.SYMBOL,)
            || TTHELP.SYMBOL:=UD_DEF.SYMBOL;
               TTHELP.OPIS:=UD_DEF.OPIS;
               TTHELP.add()
            ?}
         ?};
         UD_DEF.cntx_pop();
         _ok
      ?}
   ?}
!};
TTHELP.first();
grp_disp(TTHELP,TTHELP.win_sel('?'),1)


\dspudskl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMK] [2006]
:: OPIS: Formula na "wyswietl" dla tabeli UD_SKL
::  OLD: \dspudskl/skid_xd.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(1,1)=UD_DEF
|| UD_DEF.UD_SKL();
   UD_DEF.UD_SCH().UD_TYP()
?};
exec('be_skl','schemat',1);
exec('okn_skl','control');
__displ:=1;
UD_SKL.display();
VAR_DEL.delete('__displ')


\rkprz_ud_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Rekord przed - tabela UD_DEF
::  OLD: \rkprz_ud_def/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
UD_CECH.cntx_psh();
UD_CECH.index('NAZ'); UD_CECH.prefix(UD_SCH.ref());
{? UD_CECH.first()
|| UD_DEF.cntx_psh();
   UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref(),UD_DEF.ref());
   {? ~UD_DEF.first()
   || _all:=1; _jest:=0;
      UD_WCECH.cntx_psh(); UD_WCECH.index('UNIK');
      {! |?
         UD_WCECH.prefix(UD_CECH.ref(),UD_DEF.UD_SKL);
         {? ~UD_WCECH.first() || _all:=0 || _jest:=1 ?};
         UD_CECH.next()
      !};
      UD_WCECH.cntx_pop();
      _zwrot:={? _jest
              || {? _all || 'UD_DEF#06#01' || 'UD_DEF#06#02' ?}
              || ''
              ?}
   ?};
   UD_DEF.cntx_pop()
?};
UD_CECH.cntx_pop();
_zwrot


\wyk_cech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Edycja cech dla elementow schematow
::  OLD: \wyk_cech/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh(); ROK_F.win_dict('WER'); ROK_F.win_edit('RED'); ROK_F.win_patt('RED');
OKRO_F.cntx_psh(); OKRO_F.win_dict('SLO'); OKRO_F.win_edit('RED'); OKRO_F.win_patt('SZUK');
UD_DEF.cntx_psh(); UD_TYP.cntx_psh(); UD_SCH.cntx_psh();
skl_we:=UD_DEF.UD_SKL; sch_we:=UD_SCH.ref(); typ_sym:=''; typ_ref:=UD_TYP.ref();
UD_WCECH.win_edit('RED');
UD_CECH.cntx_psh();
UD_CECH.win_edit('RED');
UD_CECH.index('NAZ'); UD_CECH.prefix(sch_we);
_okn_grp:=UD_CECH.grp_make('',,'tab_ud_cech2');
UD_CECH.grp_sel(_okn_grp,,'WYK_CECH',,"exec('arfr_ud_cech','!zws_par_cmod')",,,,,,,,'maximized_with_title');
UD_CECH.grp_splt(_okn_grp,,'horizontal','panel1',12);
UD_CECH.grp_sel(_okn_grp,UD_WCECH,'WER',,,,,,"exec('bo_ud_wcech','!zws_par_cmod')",,,,'maximized_with_title');
UD_CECH.win_sel(_okn_grp);
UD_CECH.hdr_sel();
UD_CECH.hdr_sel('Wykorzystanie cech: %1'@[UD_DEF.UD_SKL().SYMBOL+' - '+UD_SKL.OPIS]);
exec('set_fml','#field',UD_POM,'PBUD',"
   UD_POM.PBUD:={? UD_WCECH.UD_SKLWY || UD_WCECH.UD_SKLWY().SYMBOL || '' ?}

","UD_WCECH.UD_CECH().UD_SCHWY().UD_TYP(); 1","
   exec('ud_def_symbol_f3','schemat',UD_WCECH.UD_CECH().UD_SCHWY().UD_TYP,UD_SCH.ref())
","
   exec('aestrdan1','!zws_par_cmod')
");
UD_CECH.select();
exec('set_fml','#field',UD_POM,'PBUD');
UD_CECH.cntx_pop();
UD_DEF.cntx_pop(); UD_TYP.cntx_pop(); UD_SCH.cntx_pop();
ROK_F.cntx_pop(); OKRO_F.cntx_pop();
VAR_DEL.delete('skl_we','sch_we','typ_sym','typ_ref')


\arfr_ud_cech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po odswiezeniu tabeli UD_CECH
::  OLD: \arfr_ud_cech/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
grp_disp(UD_WCECH,'WER'); 1


\bo_ud_wcech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed obsluga tabeli UD_WCECH
::  OLD: \bo_ud_wcech/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_WCECH.index('DISP');
{? UD_CECH.get()
|| UD_WCECH.prefix(UD_CECH.ref(),skl_we);
   {? ~UD_WCECH.get() || UD_WCECH.first() ?};
   {? UD_CECH.UD_SCHWE=XINFO.MSCHKLPR
   || UD_WCECH.actions('WER','DPU:D','',1)
   || UD_WCECH.actions('WER','','P:D',1)
   ?}
|| UD_WCECH.prefix(null); UD_WCECH.actions('WER','DUP:D','',1)
?};
1


\arw_skid_mbp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Po odswiezeniu okna SKID_MBP
::----------------------------------------------------------------------------------------------------------------------
UD_CECH.index('UNIK');
{? SKID_MBP.get()
|| ud_sch:=SKID_MBP.UD_SCH;
   UD_CECH.prefix(ud_sch);
   UD_CECH.actions('WER',,,1)
|| ud_sch:=null;
   UD_CECH.prefix(null);
   UD_CECH.actions('WER',':D',,1)
?};
grp_disp(UD_CECH,'WER',1)


\sch_def_cech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Definicje cech dla schematow danych
::   WE: _a - tabela bazowa
::       _b - okno grupowe
::       _c - panel
::  OLD: \sch_def_cech/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_SCH.win_dict('SLO');
UD_CECH.win_edit('RED'); UD_WCECH.win_edit('RED');
_a.grp_splt(_b,_c,'vertical','panel5');
_a.grp_sel(_b,UD_CECH,'WER',,,,,,,,,,'maximized_with_title')


\ud_wcech_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [21.37]
:: OPIS: Wyświetla okno wertowania 'WER1' tabeli UD_WCECH
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bo_ud_wcech1','!zws_par_cmod');
UD_WCECH.win_sel('WER1');
UD_WCECH.select();
exec('set_fml','#field',UD_POM,'PBUD')


\bo_ud_wcech1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed obsluga tabeli UD_WCECH
::  OLD: \bo_ud_wcech1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('set_fml','#field',UD_POM,'PBUD',"
   UD_POM.PBUD:={? UD_WCECH.UD_SKLWY || UD_WCECH.UD_SKLWY().SYMBOL || '' ?}
","1","
   exec('ud_def_symbol_f3','schemat',UD_WCECH.UD_CECH().UD_SCHWY().UD_TYP,UD_SCH.ref())
","
   exec('aestrdan1','!zws_par_cmod')
");
UD_WCECH.index('DISP1');
{? UD_CECH.get()
|| UD_WCECH.prefix(UD_CECH.ref());
   {? ~UD_WCECH.get() || UD_WCECH.first() ?}
|| UD_WCECH.prefix(null)
?};
1


\ud_schwe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Formula na wartosc poczatkowa pola UD_CECH.UD_SCHWE
::  OLD: \ud_schwe/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
sch_we


\sch_dol_cech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Dolaczanie cech dla schematow
::  OLD: \sch_dol_cech/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_CECH.blank(1); UD_CECH.UD_SCHWE:=ud_sch;
UD_CECH.win_edit('RED');
{? UD_CECH.edit("exec('spr_cech','!zws_par_cmod')") || UD_CECH.add() ?}


\spr_cech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Edycja cech dla schematow - sprawdzanie po okienku
::  OLD: \spr_cech/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(UD_CECH,,'NAZWA','UD_SCHWY');
{? _zwrot=''
|| UD_CECH.cntx_psh();
   {? -menu_txt='popraw' || _ref:=UD_CECH.ref() ?};
   UD_CECH.index('UNIK'); UD_CECH.prefix(UD_CECH.UD_SCHWE,UD_CECH.UD_SCHWY);
   {? UD_CECH.first() & {? -menu_txt='popraw' || UD_CECH.ref()<>_ref || 1 ?}
   || FUN.info('Istnieje już definicja cechy dla schematu wejściowego "'+UD_CECH.UD_SCHWE().SYMBOL+
               '"\ni schematu wyjściowego "'+UD_CECH.UD_SCHWY().SYMBOL+'".'); _zwrot:='UD_SCHWY'
   ?};
   UD_CECH.cntx_pop()
?};
_zwrot


\sch_pop_cech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Poprawianie cech dla schematow
::  OLD: \sch_pop_cech/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_WCECH.cntx_psh();
UD_WCECH.index('CECHA'); UD_WCECH.prefix(UD_CECH.ref());
{? UD_WCECH.first()
|| UD_CECH.win_edit('RED1')
|| UD_CECH.win_edit('RED')
?};
UD_WCECH.cntx_pop();
{? UD_CECH.edit("exec('spr_cech','!zws_par_cmod')") || UD_CECH.put() ?};
UD_CECH.win_edit('RED')


\sch_usu_cech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie cech dla schematow
::  OLD: \sch_usu_cech/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_WCECH.cntx_psh();
UD_WCECH.index('CECHA'); UD_WCECH.prefix(UD_CECH.ref());
{? UD_WCECH.first()
|| {? FUN.ask('Definicja cechy wykorzystywana w elementach schematów danych.\nUsunąć definicję cechy?'@)
   || do();
      {! |?
         _delr:=UD_WCECH.del(,1);
         {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
      !};
      {? ~UD_CECH.del(,1) || undo() ?};
      end()
   ?}
|| {? FUN.ask('Usunąć definicję cechy?'@) || UD_CECH.del() ?}
?};
UD_WCECH.cntx_pop()


\popwcech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Poprawianie wykorzystania cechy
::  OLD: \popwcech/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_WCECH.win_edit('RED');
{? UD_WCECH.edit("exec('sprwcech','!zws_par_cmod')") || UD_WCECH.put() ?}


\dolwcech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Dolaczanie wykorzystania cechy
::  OLD: \dolwcech/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_WCECH.win_edit('RED');
UD_WCECH.blank(1);
UD_WCECH.UD_CECH:=UD_CECH.ref();
UD_WCECH.UD_SKLWE:=skl_we;
{? UD_WCECH.edit("exec('sprwcech','!zws_par_cmod')") || UD_WCECH.add() ?}


\usuwcech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie wykorzystania cechy
::  OLD: \usuwcech/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć wykorzystanie cechy?'@) || UD_WCECH.del() ?}


\sprwcech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzenie wykorzystania cech
::  OLD: \sprwcech/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? UD_WCECH.ROK_F=null
|| FUN.info('Nie wybrano roku bilansowego.'@); _zwrot:='ROK_F'
?};
{? _zwrot='' & UD_WCECH.OKRO_F=null
|| FUN.info('Nie wybrano okresu obrachunkowego.'@); _zwrot:='OKRO_F'
?};
{? _zwrot='' & UD_WCECH.UD_SKLWY=null
|| FUN.info('Nie wybrano elementu wyjściowego.'@); _zwrot:='PBUD'
?};
{? _zwrot=''
|| {? -menu_txt='popraw' || _ref:=UD_WCECH.ref() ?};
   UD_WCECH.cntx_psh();
   UD_WCECH.index('UNIK'); UD_WCECH.prefix(UD_WCECH.UD_CECH,UD_WCECH.UD_SKLWE,UD_WCECH.ROK_F,UD_WCECH.OKRO_F);
   {? UD_WCECH.first() & {? -menu_txt='popraw' || UD_WCECH.ref()<>_ref || 1 ?}
   || FUN.info('Istnieje już element zdefiniowany wyjściowy od podanego roku i okresu.'@); _zwrot:='ROK_F'
   ?};
   UD_WCECH.cntx_pop()
?};
_zwrot


\aerokcech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po redakcji pola UD_WCECH.ROK_F
::  OLD: \aerokcech/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_WCECH.OKRO_F<>null
|| OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(UD_WCECH.ROK_F);
   {? ~OKRO_F.seek(UD_WCECH.OKRO_F) || UD_WCECH.OKRO_F:=null ?};
   OKRO_F.cntx_pop()
?};
1


\beokrcech
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja pola UD_WCECH.OKRO_F
::  OLD: \beokrcech/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_WCECH.ROK_F<>null
|| UD_WCECH.ROK_F(); 1
|| 0
?}


\aestrdan1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po redakcji pola elementu
::  OLD: \aestrdan1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
UD_WCECH.UD_SKLWY:=null;
UD_CECH.UD_SCHWY();
{? fld()<>''
|| UD_DEF.cntx_psh(); UD_SKL.cntx_psh();
   UD_DEF.index('SCHSYM'); UD_DEF.prefix(UD_SCH.ref(),fld());
   {? UD_DEF.first()
   || {? UD_DEF.UD_SKL().AKTYWNY='T'
      || UD_WCECH.UD_SKLWY:=UD_SKL.ref(); fld(UD_SKL.SYMBOL)
      || FUN.emsg('Nie znaleziono aktywnego elementu schematu '+UD_SCH.SYMBOL+' o początkowych znakach: '+fld()+'.'); _zwrot:=0
      ?}
   || FUN.emsg('Nie znaleziono aktywnego elementu schematu '+UD_SCH.SYMBOL+' o początkowych znakach: '+fld()+'.'); _zwrot:=0
   ?};
   UD_DEF.cntx_pop();  UD_SKL.cntx_pop()
?};
_zwrot


\use_help
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Uzupelnia tabele elemnt w formulach
::----------------------------------------------------------------------------------------------------------------------
TTUSE.erase();
_sym:=UD_DEF.SYMBOL;
K_FORM.cntx_psh();
K_FORM.index('K_W_OBL');
UD_DEF.cntx_psh();
UD_DEF.index('SCHSYM'); UD_DEF.prefix(SKID_MBP.UD_SCH);
{? UD_DEF.first()
|| {!
   |? _jest:=0;
      K_FORM.prefix(UD_DEF.ref());
      {? K_FORM.first()
      || {!
         |? _txt:=K_FORM.memo_txt(0,1,'F');
            {? _txt*_sym
            || _jest:=1;
               TTUSE.SYMBOL:=UD_DEF.SYMBOL;
               TTUSE.OPIS:=UD_DEF.OPIS;
               TTUSE.add()
            ?};
            _jest=0 & K_FORM.next()
         !}
      ?};
      UD_DEF.next()
   !}
?};
UD_DEF.cntx_pop();
K_FORM.cntx_pop();
grp_disp(TTUSE,TTUSE.win_sel('?'),1)


\ini_okn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Inicjacja okienek - ikonki
::  OLD: \ini_okn/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBP.win_fml('KONTROL',,'NAZ',,'ICON_BEFORE',"
   UD_CECH.cntx_psh();
   UD_CECH.index('UNIK'); UD_CECH.prefix(SKID_MBP.UD_SCH);
   _zwrot:={? UD_CECH.first() || 'xwin16.png:131' || '' ?};
   UD_CECH.cntx_pop(); _zwrot
")


\ar_skid_mbg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Rekord po okna tabeli SKID_MBG
::----------------------------------------------------------------------------------------------------------------------
_r:=__CHK.record(SKID_MBG,,'NAZ');
{? _r=''
|| __CHK.table(SKID_MBG,-menu_txt()='popraw',,'NAZ')
|| _r
?}


\bd_skid_mbg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed usun okna tabeli SKID_MBG
::----------------------------------------------------------------------------------------------------------------------
{? SKID_MBG.count()>0
|| FUN.emsg('Grupa jest użyta w modelach.\nBrak możliwości usunięcia.'@);
   0
|| 1
?}


\inst_olap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja instaluj kostke tabeli SKID_MBN
::  OLD: \inst_olap/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('can_run','control')
|| exec('k_insmbn','konsolidacja');
   {? K_INSMBN.CZY_INST<>'T' & FUN.ask('Czy zainstalować kostkę olap\nna podstawie modelu \'%1\'?'@[SKID_MBN.KOD]) |
      K_INSMBN.CZY_INST='T' &
      FUN.ask(
         'Istnieje kostka olap utworzona na podstawie modelu \'%1\'.\n'
         'Ponowna instalacja spowoduje usunięcie istniejących danych.\n\n'
         'Czy ponownie zainstalować kostkę?'@[SKID_MBN.KOD]
      )
   || {? exec('run_con','control',1)=0
      || K_INSMBN.CZY_INST:='T';
         {? K_INSMBN.put()
         || K_ROLE_D.index('SKID_MBN'); K_ROLE_D.prefix(SKID_MBN.ref(),REF.FIRMA);
            {? K_ROLE_D.first()
            || K_ROLE.prefix();
               {!
               |? {? K_ROLE_D.K_ROLE().TYPE='O'
                  || K_ROLE.WYM_AKT:='T';
                     K_ROLE.put()
                  ?};
                  K_ROLE_D.next()
               !}
            ?}
         ?}
      ?}
   ?}
?}


\mod_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja aktualizuj model tabeli SKID_MBN
::  OLD: \mod_upd/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
exec('k_insmbn','konsolidacja');
{? K_INSMBN.CZY_INST<>'T'
|| FUN.info('Nie zainstalowano kostki dla modelu: \'%1\'.'@[SKID_MBN.KOD])
|? exec('can_run','control')
|| exec('run_con','control',2)
?}


\generuj_model
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2011]
:: OPIS: Akcja dodAj personel dla modelu analitycznego
::  OLD: \generuj_model/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? SKID_MBP.first
|| _prac:=0; _stanowis:=0;
   {!
   |? _prac+=SKID_MBP.UD_SCH().SYMBOL='STR_PRAC' & SKID_MBP.UD_SCH().UD_TYP().SYMBOL='STANPRAC';
      _stanowis+=SKID_MBP.UD_SCH().SYMBOL='STR_STAN' & SKID_MBP.UD_SCH().UD_TYP().SYMBOL='STANOWIS';
      SKID_MBP.next
   !};
   SKID_MBP.first;
   {? _prac
   || {? _stanowis
      || FUN.error('Wymiary dla pracowników oraz stanowisk\n są już wykorzystane w danym modelu.'@)
      || {? FUN.ask('Czy dla wybranego modelu\ndodać wymiar związany ze stanowiskami pracy?'@)
         || exec('generuj_mod_stn','!zws_par_cmod')
         ?}
      ?}
   || _wybor:=FUN.choice('Czy generować model dla personelu zawierajacy wymiary?'@,
         ,'Pracowników'@,'pracowników i Stanowisk'@);
      {? _wybor=1
      || exec('generuj_mod_p','!zws_par_cmod')
      |? _wybor=2
      || {? exec('generuj_mod_p','!zws_par_cmod')
         || exec('generuj_mod_stn','!zws_par_cmod')
         ?}
      ?}
   ?}
?}


\generuj_mod_stn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2011]
:: OPIS: Generuje model z wymiarem stanowiska dla modelu personel
::  OLD: \generuj_mod_stn/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? SKID_MBP.first
|| _end:="SKID_MBP.cntx_pop; SKID_MBN.cntx_pop; UD_SCH.cntx_pop";
   SKID_MBN.cntx_psh(); SKID_MBN.index('TREE'); SKID_MBN.prefix();
   SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
   UD_SCH.cntx_psh();
   _stanowis:=0;
   {!
   |? _stanowis+=SKID_MBP.UD_SCH().SYMBOL='STR_STAN' & SKID_MBP.UD_SCH().UD_TYP().SYMBOL='STANOWIS';
      SKID_MBP.next
   !};
   {? _stanowis
   || FUN.error('Wymiar dla stanowisk jest wykorzystany w danym modelu.'@);
      _end(); return()
   ?};
   {? ~FUN.ask('Dla wybranego modelu, zostanie utworzony nowy wymiar dla stanowisk.\n'
               'Czy dodać wymiar związany ze stanowiskami pracy?'@)
   || _end(); return()
   ?};
   {? ~exec('generuj_stn','!zws_par_cmod')
   || FUN.error('Operacja nieudana.\n Nie założono wymiaru dla stanowisk pracy.'@);
      _end(); return()
   ?};

   SKID_MBN.prefix;
   {? SKID_MBN.SKID_MBN || _ref:=SKID_MBN.SKID_MBN; SKID_MBN.seek(_ref,) || _ref:=#SKID_MBN.ref ?};
   _nazwa:=SKID_MBN.NAZ;
   SKID_MBN.blank(1);
   SKID_MBN.SKID_MBN:=_ref;
   SKID_MBN.TYP:='O';
   SKID_MBN.KOD:='P'+$(_ref)+'S';
   SKID_MBN.NAZ:='2.'+_nazwa;
   {? SKID_MBN.add(1)
   || SKID_MBP.prefix(_ref);
      {? SKID_MBP.first()
      || {!
         |? _poz:=SKID_MBP.ref; SKID_MBP.prefix; SKID_MBP.SKID_MBN:=SKID_MBN.ref;
            SKID_MBP.add(1); SKID_MBP.prefix(_ref); SKID_MBP.seek(_poz);
            SKID_MBP.next
         !};
         _lp:=SKID_MBP.LP;
         SKID_MBP.prefix(SKID_MBN.ref);
         UD_SCH.index('TECH');UD_SCH.prefix;
         {? UD_SCH.find_key('STANPRAC','STR_PRAC',)
         || SKID_MBP.blank(1);
            SKID_MBP.SKID_MBN:=SKID_MBN.ref;
            SKID_MBP.UD_SCH:=UD_SCH.ref;
            SKID_MBP.NAZ:='Pracownicy';
            _lp+=1;
            SKID_MBP.LP:=_lp;
            SKID_MBP.add(1)
         ?};
         {? UD_SCH.find_key('STANOWIS','STR_STAN')
         || SKID_MBP.blank(1);
            SKID_MBP.SKID_MBN:=SKID_MBN.ref;
            SKID_MBP.UD_SCH:=UD_SCH.ref;
            SKID_MBP.NAZ:='Stanowiska pracy';
            SKID_MBP.LP:=_lp+1;
            SKID_MBP.add(1)
         ?};
         SKID_MBP.first();
         SKID_MBN.index('TREE');
         grp_disp(SKID_MBN,'WER_C')
      ?}
   || FUN.error('Nie udało się założyć modelu z wymiarem związanym ze stanowiskami.\nModel o kodzie: "P'+ $(_ref)+'S" już istnieje.')
   ?};
   _end()
?};
1


\generuj_stn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2011]
:: OPIS: Generuje nowy schemat danych. Typ: STANOWIS, Schemat: STR_STAN oraz definicje schematu .
::       Generuje rowniez pozycje na podstawie stanowisk.
::  OLD: \generuj_stn/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
UD_TYP.cntx_psh;
UD_SCH.cntx_psh;
UD_DEF.cntx_psh;

UD_SKL.clear;
UD_POW.clear;
_end:="UD_TYP.cntx_pop;
   UD_SCH.cntx_pop;
   UD_DEF.cntx_pop";

UD_POW.index('SQL');
UD_DEF.index('PODTEC');UD_DEF.clear;
UD_TYP.index('SYMBOL'); UD_TYP.prefix;
{? UD_TYP.find_key('STANOWIS','STANOWIS')
|| _ud_typ:=UD_TYP.ref
|| _ud_typ:=exec('dodaj_ud_typ','schemat','STANOWIS','Stanowiska w controllingu',,'N','N')
?};
{? ~_ud_typ || _end(); return(0) ?};

UD_SCH.index('SYMBOL'); UD_SCH.prefix;
{? UD_SCH.find_key(_ud_typ,'STR_STAN','STR_STAN')
|| _ud_sch:=UD_SCH.ref; _tree:=null
|| _tree:=_ud_sch:=exec('dodaj_ud_sch','schemat',_ud_typ,'STR_STAN','Struktura stanowisk')
?};
{? ~_ud_sch || _end(); return(0) ?};

{? _tree
|| {? var_pres('tab')>100 || &tab ?};
   tab:=sql('
      select STN.ST ST,STN.REFERENCE STN_REF, 0 NEW, 0 RODZIC
      from STN
      where STN.Z=\'T\''
   );
   _index:=tab.ndx_tmp(,1,'ST',,0,'ST',,0);
   _ind_new:=tab.ndx_tmp(,1,'NEW',,0,'ST',,0,'ST',,0);
   tab.index(_index);
   {? ~tab.first || FUN.error('Brak listy stanowisk.'); _end(); return(1) ?};

   UD_SKL.index('SYMBOL'); UD_SKL.prefix(_ud_typ);
   UD_POW.index('OPIS'); UD_POW.prefix(_ud_typ);
   {? ~UD_POW.find_key('RAZEM STANOWISKA')
   || {? ~UD_SKL.find_key('RAZEM STANOWISKA')
      || skl_lis:='N';
         _rodzic:=exec('add_skl_pow','control','RAZEM STANOWISKA','RAZEM STANOWISKA',_ud_typ,_ud_sch,null,'','','S');
         &skl_lis
      ?}
   ?};
   {? UD_POW.find_key('RAZEM STANOWISKA')
   || {? ~UD_DEF.find_key(_ud_sch,UD_POW.UD_SKL)
      || UD_POW.UD_SKL();
         UD_DEF.UD_SCH:=_ud_sch;
         UD_DEF.UD_SKL:=UD_SKL.ref;
         UD_DEF.UD_POZ:=null;
         UD_DEF.SYMBOL:=UD_SKL.SYMBOL;
         UD_DEF.OPIS:=UD_SKL.OPIS;
         UD_DEF.UD_DEF:=null;
         {? UD_DEF.add(1)
         || _rodzic:=UD_DEF.ref
         || _rodzic:=null
         ?}
      || _rodzic:=UD_DEF.ref
      ?}
   ?};

   {? ~UD_POW.find_key('NIESTANOWISKA','NIESTANOWISKA')
   || {? ~UD_SKL.find_key('NIESTANOWISKA','NIESTANOWISKA')
      || skl_lis:='T';
         exec('add_skl_pow','control','NIESTANOWISKA','NIESTANOWISKA',_ud_typ,_ud_sch,_rodzic,'','','S');
         &skl_lis
      ?}
   ?};

   UD_POW.index('SQL');
   {!
   |? _ud_stan:='STN_'+$(BIT.sqlint(tab.STN_REF));
      {? UD_POW.find_key(_ud_typ,tab.STN_REF)
      || {? ~UD_DEF.find_key(_ud_sch,UD_POW.UD_SKL)
         || UD_POW.UD_SKL();
            skl_lis:='T';
            exec('add_skl_pow','control',UD_SKL.SYMBOL,UD_SKL.OPIS,_ud_typ,_ud_sch,_rodzic,'STN',tab.STN_REF,'S',1);
            &skl_lis
         ?}
      || skl_lis:='T';
         exec('add_skl_pow','control',_ud_stan,tab.ST,_ud_typ,_ud_sch,_rodzic,'STN',tab.STN_REF,'S');
         &skl_lis
      ?};
      tab.next
   !}
?};
_end();
1


\generuj_mod_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2011]
:: OPIS: Generuje nowy model kontrolingowy na podstawie biezacego modelu
::  OLD: \generuj_mod_p/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_end:="SKID_MBP.cntx_pop; SKID_MBN.cntx_pop; UD_SCH.cntx_pop";
SKID_MBN.cntx_psh(); SKID_MBN.index('TREE'); SKID_MBN.prefix();
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
UD_SCH.cntx_psh();
{? SKID_MBN.SKID_MBN
|| FUN.error('Wybrany model jest modelem budżetującym personel.');
   _end(); return(0)
?};
{? SKID_MBN.EWID<>'T'
|| FUN.error('Model nie służy do ewidencji.\n'+
             'Wygenerowanie modelu dla budżetowania personelu nie jest możliwe.');
   _end(); return(0)
?};
{? ~FUN.ask('Na podstawie wybranego modelu, zostanie utworzony nowy model analityczny.\n'
            'Model będzie zawierał dodatkowo listę pracowników.\n'
            'Czy utworzyć model analityczny do budżetowania personelu?'@)
|| _end(); return(0)
?};
{? ~exec('generuj_prac','control')
|| FUN.error('Operacja nieudana.\n Nie założono schematu dla personelu.'@);
   _end(); return(0)
?};
SKID_MBN.prefix;
_ref:=#SKID_MBN.ref;
_nazwa:=SKID_MBN.NAZ;
SKID_MBN.blank(1);
SKID_MBN.SKID_MBN:=_ref;
SKID_MBN.TYP:='P';
SKID_MBN.KOD:='P'+$(_ref);
SKID_MBN.NAZ:='1. Personel: '+_nazwa;
{? SKID_MBN.add(1)
|| SKID_MBP.prefix(_ref);
   {? SKID_MBP.first()
   || {!
      |? _poz:=SKID_MBP.ref; SKID_MBP.prefix; SKID_MBP.SKID_MBN:=SKID_MBN.ref;
         SKID_MBP.add(1); SKID_MBP.prefix(_ref); SKID_MBP.seek(_poz);
         SKID_MBP.next
      !};
      _lp:=SKID_MBP.LP;
      SKID_MBP.prefix(SKID_MBN.ref);
      UD_SCH.index('TECH');UD_SCH.prefix;
      {? UD_SCH.find_key('STANPRAC','STR_PRAC',)
      || SKID_MBP.blank(1);
         SKID_MBP.SKID_MBN:=SKID_MBN.ref;
         SKID_MBP.UD_SCH:=UD_SCH.ref;
         SKID_MBP.NAZ:='Pracownicy';
         SKID_MBP.LP:=_lp+1;
         SKID_MBP.add(1)
      ?};
      SKID_MBP.first();
      SKID_MBN.index('TREE');
      grp_disp(SKID_MBN,'WER_C')
   ?}
   || FUN.error('Nie udało się założyć modelu z wymiarem związanym z pracownikami.\nModel o kodzie: "P'+ $(_ref)+'" już istnieje.')
?};
_end();
1


\wakat_rest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2011]
:: OPIS: Przywrocenie wakatu w miejsce pracownika skojarzonego z tym wakatem
::  OLD: \wakat_rest/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.cntx_psh;
{? UD_SKL.UD_TYP().SYMBOL='STANPRAC' & UD_POW.size=2 & FUN.ask('Czy przywrócić pierwotny zapis o wakacie?'@)
|| _ok:=0;
   do();
   {? UD_POW.find_key('P')
   || UD_POW.del;
      UD_SKL.SYMBOL:=UD_POW.SYMBOL; UD_SKL.OPIS:=UD_POW.OPIS; UD_POW.R:='W';
      {? ~UD_SKL.put(1) | ~UD_POW.put(1)
      || undo(); _ok:=1
      || UD_DEF.index('SKLREF'); UD_DEF.prefix(UD_SKL.ref);
         {? UD_DEF.first
         || UD_DEF.SYMBOL:=UD_SKL.SYMBOL; UD_DEF.OPIS:=UD_SKL.OPIS;
            {? ~UD_DEF.put(1)
            || undo(); _ok:=1
            ?}
         ?}
      ?};
      end()
   ?};
   {? _ok
   || FUN.emsg(
         'Nie udało się przywrócić pierwotnego opisu w definicji drzewa.\n'
         'W schemacie drzewa znaleziono istniejący element o symbolu %1.'@[UD_POW.W]
      )
   ?}
?};
UD_DEF.cntx_pop;
1


\firma_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Tworzy okno tabeli FIRMA
::   WE: _a - długość pola OPIS
::----------------------------------------------------------------------------------------------------------------------
_o:=FIRMA.mk_sel('Firma','P',,'#firma2',,,,,'U');
FIRMA.win_fld(_o,,'SYMBOL');
FIRMA.win_fld(_o,,'OPIS',,,_a);
FIRMA.win_act(_o,,'Szukaj');
FIRMA.win_act(_o,,'Kolejność');
_o


\ch_firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [21.37]
:: OPIS: Formuła "Zmień firmę" okna WER_C tabeli SKID_MBA
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_win_acr:=exec('firma_win','!zws_par_cmod',60);
FIRMA.win_sel(_win_acr);
FIRMA.win_act(_win_acr,0,'Formuła','Wybierz',,,,"REF.FIRMA:=FIRMA.ref();sel_exit()",1);
FIRMA.seek(REF.FIRMA);
FIRMA.select(,1,10,,,)

:Sign Version 2.0 jowisz:1045 2023/09/19 13:34:32 4e22072ddd11038f532484e68538b337518b123c4a1029e244c43e8972d7afaae6d15b85b9e986f9a55dad3a693fa5cfe300ac933999fc80fb375178797abfa68b2a8cbbdaa90f41f148eac5a26fdc2bbcfc55d3b6bfbf63d693d3b0fcb980cd64a33b4d4a2f07b8fdcbe4a621adf4fda80af2070fede71c1d1601f5fbc4e8b5
