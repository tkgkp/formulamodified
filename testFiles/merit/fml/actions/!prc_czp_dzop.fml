:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !prc_czp_dzop.fml
:: Utworzony: 28.11.2017
:: Autor: areKc
::======================================================================================================================
:: Zawartość: Formuły czynności: PRC_CZP_DZOP - Zamknięcie okresu - pracownik.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.02]
:: OPIS: Zamknięcie okresu rozliczeniowego dla współpracownika.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# kind=WE, symbol=A_OKR, type=_A_OKR, name=Wskazanie na okres rozliczeniowy, required=T
::# kind=WE, symbol=P, type=_P, name=Wskazanie na współpracownika, required=T
::# kind=WEW, symbol=OKRES, type=STRING, name=Data do ustalenia okresu rozliczenia przekroczeń, required=N
::
_par:=params_get();
_mp:=_par.mp;
_in:=_par.in;
_int:=_par.int;
_akcja:=_mp.akcja();
_result:='';

_uid_OKR:=exec('ref2uid','#table',_in.A_OKR);
_uid_P:=exec('ref2uid','#table',_in.P);
{? _uid_OKR=''
|| _result:=exec('error','!prc_czp_dzop','Nie znaleziono okresu rozliczeniowego.'@)
|? _uid_OKR=''
|| _result:=exec('error','!prc_czp_dzop','Nie znaleziono współpracownika.'@)
|? _mp.isMicro()
|| {? _akcja='START'
::    Wejście do okienka w ramach obszaru roboczego - uruchomienie procesu i pozostawienie go na liście zadań.
   || _mp.keyRef(_uid_OKR);
      _mp.keyRef(_uid_P);
      _mp.keep()
   |? _akcja='STOP'
::    Wyjście z okienka w ramach obszaru roboczego - anulowanie procesu.
   || _mp.delRef(_uid_OKR);
      _mp.delRef(_uid_P);
      _mp.cancel()
   |? _akcja<>''
   || _result:='Czynność %1 nie obsługuje akcji %2.'@ [_mp.buf_act.UID,_akcja]
   ?}
|| {? _akcja='ZAKOŃCZ'
   || _mp.done()
   |? _mp.pathTodo()
   || _value:=exec('zamknij','!prc_czp_dzop',_in,_int);
      {? type_of(_value)=type_of('')
      || _result:=_value
      |? _value=1
      || _mp.done()
      |? _value=2
      || _par.mp.save(_int);
         _mp.keep()
      || _mp.keep()
      ?}
   ?}
?};
::  Obsługa błędów
{? _result<>''
|| _mp.error(_result);
   FUN.emsg(_result)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.02]
:: OPIS: Zamknięcie okresu rozliczeniowego dla współpracownika.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab_a_okr:=obj_new('ZAW_DANE','A_OKRN_NAZWA','OD','DO');
{! _ii..obj_len(_tab_a_okr) |! _tab_a_okr[_ii]:='' !};
_tab_p:=exec('init_desc_tab','pracownik');
_mp:=params_get().mp;
A_OKR.cntx_psh();
{? A_OKR.seek(_mp.load(exec('kind_in','#b_port')).A_OKR,,1)
|| _tab_a_okr.ZAW_DANE:='T';
   _tab_a_okr.A_OKRN_NAZWA:=A_OKR.NAZ().NAZ;
   _tab_a_okr.OD:=A_OKR.OD$1;
   _tab_a_okr.DO:=A_OKR.DO$1
?};
A_OKR.cntx_pop();
OSOBA.cntx_psh();
P.cntx_psh();
{? P.seek(_mp.load(exec('kind_in','#b_port')).P,,1)
|| _tab_p.ZAW_DANE:='T';
   _tab_p.NAZWISKO:=P.OSOBA().NAZWISKO;
   _tab_p.PIERWSZE:=OSOBA.PIERWSZE;
   _tab_p.T:=P.T
?};
P.cntx_pop();
OSOBA.cntx_pop();

{? _tab_a_okr.ZAW_DANE='T' & _tab_p.ZAW_DANE='T'
|| 'Zamknij okres: %1 %2 %3 dla współpracownika %4 %5 %6'@@
      [_tab_a_okr.A_OKRN_NAZWA,_tab_a_okr.OD,_tab_a_okr.DO,_tab_p.T,_tab_p.NAZWISKO,_tab_p.PIERWSZE]
|| 'Zamknij okres'@@
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.02]
:: OPIS: Komunikat o błędzie.
::   WE: _a - [STRING] Szczegóły komunikatu o błędzie
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'%1\n%2'['Zamknięcie okresu rozliczeniowego dla współpracownika nie jest możliwe.'@,_a]


\zamknij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.02]
:: OPIS: Zamknięcie okresu rozliczeniowego dla współpracownika.
::   WE: _a - parametry wejściowe czynności
::       _b - parametry wewnętrzne czynności
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=0;

P.cntx_psh();
A_OKR.cntx_psh();
A_OKRP.cntx_psh();
{? P.seek(_a.P,,1)
|| {? A_OKR.seek(_a.A_OKR,,1)
   || A_OKRP.index('A_OKRPR');
      A_OKRP.prefix(A_OKR.ref(),P.ref());
      {? A_OKRP.first()
      || {? A_OKRP.S_PLAN='Z'
         ||
:: Sprawdzenie czy miesiące w okresie rozliczeniowym zostały zamknięte.
            _open:=0;
            A_OKRP_M.cntx_psh();
            A_OKRP_M.index('A_OKRPM');
            A_OKRP_M.prefix(A_OKRP.ref());
            {? A_OKRP_M.first()
            || {!
               |? _open:=A_OKRP_M.STATUS<>'X' & exec('get_msc_status','grafik',date(A_OKRP_M.ROK,A_OKRP_M.MSC,1))<>'Z';
                  ~_open & A_OKRP_M.next()
               !}
            ?};
            A_OKRP_M.cntx_pop();
            {? _open
            || _txt:='Przed zamknięciem rozliczenia w okresie należy zamknąć wszystkie miesiące rozliczeniowe.'@;
               _result:=exec('error','!prc_czp_dzop',_txt)
            || _tab:=tab_tmp(,
                  'RESULT','INTEGER','',
                  'OKRES','STRING[1]','Wybrany okres'
               );
               _tab.OKRES:={? var_pres('OKRES',_b)=type_of('') || _b.OKRES || 'O' ?};
               _ed:=_tab.mk_edit('Okres: %1 dla: %2'@
                  [  A_OKRP.OKR().NAZ().NAZ+' '+A_OKRP.OD$1+' '+A_OKRP.DO$1,
                     A_OKRP.P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE
                  ],0
               );
               _tab.win_efld(_ed,AH,'H',,,,,,'Okres rozliczeniowy dla: współpracownika zostanie zamknięty'@);
               _tab.win_efld(_ed,,'OKRES',,,10,,,
                  'Rozliczenie przekroczeń średniotygodniwych w miesiącu:'@,,
                  'Miesiąc i rok, w którym zostaną rozliczone przekroczenia z tytułu średniotygdniowego czasu pracy'@,
                  'radio-buttons',,
                  A_OKRP.DO$8,"'O'",
                  (A_OKRP.DO+1)$8,"'N'"
               );
               exec('zakoncz','#window',_tab,_ed,1,"cur_tab().RESULT:=1; 'key:F2'",,
                  exec('help_red_zakoncz','#window','PKD_F'),exec('text_red_zakoncz','#window','PKD_F'));
               exec('ok_esc','#window',_tab,_ed,1,"cur_tab().RESULT:=2; 'key:F2'","cur_tab().RESULT:=0; 'key:Esc'",,,
                  exec('help_red_ok','#window','Z'),exec('text_red_ok','#window','Z'),exec('help_red_esc','#window','A'));
               _tab.win_edit(_ed);
               _tab.edit();
               {? _tab.RESULT=1
               ||
:: Sprawdzenie odbiorów w dni wolne.
                  _ODB:=exec('zwrot_bufor','godziny');
                  exec('zwrot_odb_okres','godziny',_ODB,A_OKRP.P);
                  {? _ODB.first()
                  || _result:=exec('error','!prc_czp_dzop','Istnieją odbiory w dni wolne.'@)
                  ||
:: Ewentualne kasowanie zalożonych miesięcy okresu dla współpracownika wybiegajacych poza datę zatrudnienia.
                     {? exec('akt_plan_m_prac','okres')
                     || A_OKRP_M.cntx_psh();
                        A_OKRP_M.index('A_OKRPM');
                        A_OKRP_M.prefix(A_OKRP.ref(),A_OKRP.DO~1,A_OKRP.DO~2);
                        {? A_OKRP_M.first()
                        || {? A_OKRP_M.STATUS='Z' | A_OKRP_M.STATUS='X'
                           || A_OKRP.S_PLAN:='Z'
                           || A_OKRP.S_PLAN:='O'
                           ?};
                           A_OKRP.put(1)
                        ?};
                        A_OKRP_M.cntx_pop()
                     ?};
:: Ustalenie roku i miesiąca rozliczenia.
                     _RES:=exec('rok_msc_rozl','godziny',A_OKRP.DO,_tab.OKRES);
:: Sprawdzenie czy lista SUM jest otwarta.
                     {? exec('lista_sum_zamk','godziny',_RES.r_rozl,_RES.m_rozl,0)
                     || _result:=exec('error','!prc_czp_dzop','Lista płac typu SUM jest zamknięta.'@)
                     || _rok:=A_OKRP.DO~1+1;
:: Sprawdzenie czy godziny nie zostały już rozliczone
                        _roczek:=_rok;
                        _ile:=0;
                        {!
                        |? {? _rok<>_roczek
                           || _ile+=1
                           ?};
                           _rok-=1;
                           _rok>=A_OKRP.OD~1
                        !};
                        _sql:='select distinct G.M M, G.LT, SUBSTR(G.REFERENCE,5,4) AS ROK ';
                        _sql+='from A_OKRP join OSOBA join @G using(A_OKRP.P,G.P) ';
                        _sql+='where A_OKRP.REFERENCE=\':_a\'  and G.F=\':_b\' and ';
                        _sql+='(G.REFERENCE like \'godz'+$(A_OKRP.DO~1+1)+'%\'';
                        {? _ile
                        || {! _ind:=1.._ile
                           |! _sql+=' or  G.REFERENCE like \'godz'+$(A_OKRP.DO~1+1-_ind)+'%\''
                           !}
                        ?};
                        _sql+=') ';
                        _sql+='order by 1,2';
                        _GODZ:=sql(_sql,$A_OKRP.ref(),'RCP_'+$A_OKR.ref());
                        {? _GODZ.first()
                        || {!
                           |? {? #_GODZ.ROK=_RES.r_rozl & _GODZ.M=_RES.m_rozl
                              || _GODZ.del(,1)=2
                              || _GODZ.next()
                              ?}
                           !}
                        ?};
                        {? _GODZ.first()
                        || _result:=
                              exec('error','!prc_czp_dzop','Znaleziono dane dotyczące zamknięcia wybranego okresu.'@)
                        || {? exec('zamk_okr_prac','godziny',0,_RES)
                           || A_OKRP.S_PLAN:='X';
                              {? A_OKRP.put()
                              || _result:=1
                              || _result:=exec('error','!prc_czp_dzop','Okres nie udało się zamknąć.'@)
                              ?}
                           || _result:=exec('error','!prc_czp_dzop','Okres nie udało się zamknąć.'@)
                           ?}
                        ?};
                        obj_del(_GODZ)
                     ?};
                     obj_del(_RES)
                  ?};
                  obj_del(_ODB)
               |? _tab.RESULT=2
               || _b.OKRES:=_tab.OKRES;
                  _result:=2
               ?};
               obj_del(_tab)
            ?}
         |? A_OKRP.S_PLAN='O'
         || _result:=exec('error','!prc_czp_dzop','Okres jest odblokowany do planowania.'@)
         |? A_OKRP.S_PLAN='X'
         || _result:=exec('error','!prc_czp_dzop','Informacje o rozliczeniu zostały już przeniesione.'@)
         ?}
      || _result:=exec('error','!prc_czp_dzop','Nie znaleziono okresu rozliczeniowego współpracownika.'@)
      ?}
   || _result:=exec('error','!prc_czp_dzop','Nie znaleziono okresu rozliczeniowego.'@)
   ?}
|| _result:=exec('error','!prc_czp_dzop','Nie znaleziono współpracownika.'@)
?};
A_OKRP.cntx_pop();
A_OKR.cntx_pop();
P.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:41 95c2b45e460e92062e9c040ebe484000066ee28e63f43e09ef30085f3bd72063e79d64356c8ee2c647607bbb61595ef657224ffe162dfb685f3a3b82abc02e1973bac44a5f5dea9897173348c6684f08d0308de599f12a95e58a3c031833c8226507b4a307613b66fa1d379e4d546444cadd1ca04262c35e82d742666276ec96
