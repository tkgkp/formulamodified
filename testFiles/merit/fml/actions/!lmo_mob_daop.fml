:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lmo_mob_daop.fml
:: Utworzony: 21.04.2016
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Czynność LMO_MOB_DAOP - Anulowanie operacji mobilnych po terminie
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# properties=SERVICE
::# permissions=ODDZ
::# kind=WE,  symbol=TYPY,    type=STRING,   name=Typy operacji,                required=N, fml_val="exec('typy','!lmo_mob_daop')"
::# kind=WE,  symbol=MG,      type=_MG,      name=Magazyn dla operacji,         required=N, fml_val="exec('mg','!lmo_mob_daop')"
::# kind=WE,  symbol=OKR,     type=NUMBER,   name=Po ilu dniach anulować operację, required=N
::# kind=WY,  symbol=IL_SRV,  type=NUMBER,   name=Ilość anulowanych operacji,   required=N
_mp:=params_get().mp;
_in:=params_get().in;
_out:=params_get().out;

exec('init','lmo');

_service:=_mp.isService();
{? var_pres('OKR',_in)<>type_of(0) || _in.OKR:=0 ?};

{? ~_service
|| _mp.error('Czynność wyłącznie serwisowa.');
   _mp.done()
|? _in.OKR<0
|| _mp.error('Liczba dni za ile należy anulować operację nie może być liczbą ujemną.');
   _mp.done()
|| {? var_pres('TYPY',_in)<>type_of('') || _in.TYPY:='PWZRIpw' ?};
   {? var_pres('MG',_in)<>type_of(null()) || _in.MG:=null() ?};

   _mp.save('IN',_in);
   EANN.cntx_psh();
   EANN.prefix();
   params_set('mp',_mp,'in',_in);
   exec('autoOper','!lmo_mob_daop');
   EANN.cntx_pop()
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
'Anulowanie operacji mobilnych po terminie'@@


\mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na wartość parametru TYPYDOK
::   WY: TYPYDOK.ref()
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null();
MG.cntx_psh();
MG.index('SL_ALL');
MG.prefix('T');
{? MG.first()
|| MG.win_sel('SLO');
   {? MG.select() || _wyn:=MG.ref() ?}
?};
MG.cntx_pop();
_wyn


\autoOper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Automatycznie realizuje operacje
::  OLD: \autoanul/ean.fml
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=params_get().in;

_il_srv:=0;

:: operacje mobilne
_typy:=form(_in.TYPY);
_typy:=gsub(_typy,'p','');
_typy:=gsub(_typy,'w','');
{? _typy<>''
|| _typs:='(';
   {? _typy=''
   || _typs+='''P'',''W'',''R'',''Z'',''I'','
   || _len:=+_typy;
      {! |? _typy<>''
      |! _typs+=''''+(1+_typy)+''',';
         _typy:=1-_typy
      !}
   ?};
   _typs:=(_typs-1)+')';

   _data:=date();
   _okres:=_in.OKR;

   _eann:=sql('select '+
              '  EANN.REFERENCE REF, '+
              '  EANN.DATA DATA '+
              'from @EANN '+
              ' where EANN.REFERENCE like '+'''eann_\\_\\_%'' escape ''\\'''+
              '   and EANN.AKT=''T'''+
              '   and EANN.ZLEC=''N'''+
              '   and EANN.TYP in '+_typs);

   _eann.clear();
   {? _eann.first()
   || {!
      |? {? _data>_eann.DATA & (_data-_eann.DATA)>_okres
         || _oddz:=1+(4-_eann.REF);
            _rok:=form((_eann.DATA~1)-2000,-2,0,'99');
            exec('open','open_tab',_oddz,_rok);
            {? (EANN.clear(); EANN.seek(_eann.REF))
             & {? _in.MG<>null() || _in.MG=exec('one_mag','magazyn_mob',EANN.ref()) || 1 ?}
            || _il_srv+=exec('anuleann','magazyn_mob',0)
            ?}
         ?};
         _eann.next()
      !}
   ?};
   obj_del(_eann)
?};
:: operacje webservice
_typy:=form(_in.TYPY);
_typy:=gsub(_typy,'P','');
_typy:=gsub(_typy,'W','');
_typy:=gsub(_typy,'R','');
_typy:=gsub(_typy,'Z','');
_typy:=gsub(_typy,'I','');
_typy:=~-_typy;
{? _typy<>''
|| _typs:='(';
   {? _typy=''
   || _typs+='''P'',''W'','
   || _len:=+_typy;
      {! |? _typy<>''
      |! _typs+=''''+(1+_typy)+''',';
         _typy:=1-_typy
      !}
   ?};
   _typs:=(_typs-1)+')';

   _data:=date();
   _okres:=_in.OKR;

   _eann:=sql('select '+
              '  EANN.REFERENCE REF, '+
              '  EANN.DATA DATA '+
              'from @EANN '+
              ' where EANN.REFERENCE like '+'''eann_\\_\\_%'' escape ''\\'''+
              '   and EANN.AKT=''T'''+
              '   and EANN.ZLEC=''T'''+
              '   and EANN.TYP in '+_typs);

   _eann.clear();
   {? _eann.first()
   || {!
      |? {? _data>_eann.DATA & (_data-_eann.DATA)>_okres
         || _oddz:=1+(4-_eann.REF);
            _rok:=form((_eann.DATA~1)-2000,-2,0,'99');
            exec('open','open_tab',_oddz,_rok);
            {? (EANN.clear(); EANN.seek(_eann.REF))
             & {? _in.MG<>null() || _in.MG=exec('one_mag','magazyn_mob',EANN.ref()) || 1 ?}
            || _il_srv+=exec('anuleann','magazyn_mob',0)
            ?}
         ?};
         _eann.next()
      !}
   ?};
   obj_del(_eann)
?};
_mp.save('OUT','IL_SRV',_il_srv);
_mp.done();
~~


\typy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na wartość parametru TYPY
::   WY: string określający typy operacji
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_tab:=tab_tmp(1,'P','STRING[1]',''
       ,'W','STRING[1]',''
       ,'R','STRING[1]',''
       ,'Z','STRING[1]',''
       ,'I','STRING[1]',''
       ,'PW','STRING[1]',''
       ,'WW','STRING[1]','');
_tab.blank();
_len:=_tab.fld_num();
{! _i.._len
|! _acr:=_tab.fld_acr(_i);
   {? _acr='PW' || _acr:='p' |? _acr='WW' || _acr:='w' ?};
   _tab[_i]:={? BPMN.VALUE1*_acr || 'T' || 'N' ?}
!};
_tab.add(1);

_edit:=_tab.mk_edit('Dostępne typy operacji'@,,'#all_mob_operac');
_tab.win_esep(_edit,'Operacje mobilne'@);
_tab.win_efld(_edit,,'P',,,,,,'Przyjęcie dostawy'@,,'Operacja przyjęcia dostawy'@,'check-box',,"'T'","'N'");
_tab.win_efld(_edit,,'W',,,,,,'Wydanie w magazynie'@,,'Operacja wydania w magazynie'@,'check-box',,"'T'","'N'");
_tab.win_efld(_edit,,'R',,,,,,'Reorganizacja'@,,'Operacja reorganizacji'@,'check-box',,"'T'","'N'");
_tab.win_efld(_edit,,'Z',,,,,,'Kompletacja wysyłki'@,,'Operacja kompletacji wysyłki'@,'check-box',,"'T'","'N'");
_tab.win_efld(_edit,,'I',,,,,,'Inwentaryzacja'@,,'Operacja inwentaryzacji'@,'check-box',,"'T'","'N'");
_tab.win_esep(_edit,'Operacje webservice'@);
_tab.win_efld(_edit,,'PW',,,,,,'Przyjęcie dostawy'@,,'Operacja przyjęcia dostawy'@,'check-box',,"'T'","'N'");
_tab.win_efld(_edit,,'WW',,,,,,'Wydanie w magazynie'@,,'Operacja wydania w magazynie'@,'check-box',,"'T'","'N'");
exec('ok_esc','#window',_tab,_edit);
_tab.win_edit(_edit);
{? _tab.edit()
|| _wyn+={? _tab.P='T' || 'P' || '' ?}+
         {? _tab.W='T' || 'W' || '' ?}+
         {? _tab.R='T' || 'R' || '' ?}+
         {? _tab.Z='T' || 'Z' || '' ?}+
         {? _tab.I='T' || 'I' || '' ?}+
         {? _tab.PW='T' || 'p' || '' ?}+
         {? _tab.WW='T' || 'w' || '' ?}
?};
{? _wyn='' || _wyn:=~~ ?};
_wyn

:Sign Version 2.0 jowisz:1048 2020/10/16 15:19:14 4c088262eb98cd5657c3693dcd654994d3eb1709de9b12bb4e468e9d6d2ffdb6696f2d08dbdfc2d0ea2ef1e37da962147c6163c58edcc617d0f279377d1cc2d16af8cce3b62a40430e95623a227ca855c955f9a16bc15e278b8743f858c8214786ce578d114e060cda2085805ee0ec7f33ff2890337bb79af58dacc05aa07135
