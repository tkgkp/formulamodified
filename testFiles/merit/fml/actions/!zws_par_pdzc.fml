:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_pdzc.fml
:: Utworzony: 21.06.2016
:: Autor: DAROKR
::======================================================================================================================
:: Zawartość: Obsługa czynności ZWS_PAR_PDZC - Typy umów dla deklarcji
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [17.00]
:: OPIS: Typy umów dla deklarcji- główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get);
exec('select','!zws_par_pdzc');
~~


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [17.00]
:: OPIS: Typy umów dla deklarcji - utworzenie, skonfigurowanie i wyświetlenie menadżera.
::----------------------------------------------------------------------------------------------------------------------
BPMN.SYM_DOM:='PPL';
VAR.FILTER:='T';
EDIT_VAR.SLO_TYP:='UMZLEC';
RU.cntx_psh();
RU.index('K');
_typ:=exec('slo_typ','ext_slo');
RU.prefix(_typ);
RU_DEKL.cntx_psh();
RU_DEKL.index('RU_DEKL');
RU_DEKL.prefix();
RU.win_edit('ZLEC');
RU.win_sel('GWERUZ');
RU.select();
RU_DEKL.cntx_pop();
RU.cntx_pop()


\RU_DEKL_popr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Edycja rekordu RU_DEKL
::  OLD: \RU_DEKL_popr/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Modyfikacja wpisu zmieni dotychczasowe działanie deklaracji podatkowych.\nKontynuować?'@)
|| RU_DEKL.win_edit('RED');
   _oldwie:=RU_DEKL.WIERSZ;
   _old_dek:=RU_DEKL.DEKL;
   VAR.FILTER:='N';
:  Interesuje nas wylacznie zmiana okienka slownika (win_dict), ale poniewaz chcemy zmieniac tytul okienka (hdr_sel)
:  musimy ustawic rowniez okienko wertowania - stad win_sel.
   VAT_VER.cntx_psh();
   VAT_VER.prefix();
   VAT_VER.win_dict('SLO');
   VAT_VER.win_sel('SLO');
   exec('vat_ver_filtr','!zws_par_pdzc');
   {? RU_DEKL.edit("exec('rudekl_valid','!zws_par_pdzc')")
   || {? RU_DEKL.WIERSZ<>_oldwie | _old_dek<>RU_DEKL.DEKL
      || RU_DEKL.DATAMOD:=date();
         RU_DEKL.AUTO:='R';
         RU_DEKL.put(1)
      || RU_DEKL.get()
      ?}
   ?};
   VAT_VER.f_clear();
   VAT_VER.cntx_pop()
?}


\RU_DEKL_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Usuniecie rekordu z RU_DEKL
::  OLD: \RU_DEKL_del/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:={? RU_DEKL.count
     || FUN.emsg('Deklaracja była użyta.\nUsunięcie niedozwolone.'@);0
     || FUN.ask('Usunięcie wpisu zmieni dotychczasowe działanie tworzenia deklaracji podatkowych.\n'
                'Kontynuować kasowanie?'@)
     ?};
{? _ok
|| RU_DEKL.del()
?}


\RU_DEKL_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Dodanie nowego rekordu do RU_DEKL
::  OLD: \RU_DEKL_add/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Dodanie nowego wpisu zmieni standardowe działanie programu\ndla tworzenia deklaracji podatkowych.\n'
           'W deklaracjach prezentowane są informacje na podstawie wcześniej wyliczonych kwot\n'
           'zgodnie ze schematem właściwym dla danego rodzaju umowy.\n'
           'Może to powodować niezgodności w informacjach prezentowanych w deklaracji.\n'
           'Kontynuować?'@)
|| EDIT_VAR.UMOWA:=1;
   VAR.FILTER:='T';
:  Interesuje nas wylacznie zmiana okienka slownika (win_dict), ale poniewaz chcemy zmieniac tytul okienka (hdr_sel)
:  musimy ustawic rowniez okienko wertowania - stad win_sel.
   VAT_VER.cntx_psh();
   VAT_VER.prefix();
   VAT_VER.win_dict('SLO');
   VAT_VER.win_sel('SLO');
   exec('vat_ver_filtr','!zws_par_pdzc');
   RU_DEKL.win_edit('RED');
   RU_DEKL.blank();
   exec('ru_dekl_efld_opt','!zws_par_pdzc','*',RU_DEKL,RU_DEKL.win_edit('?'));
   RU_DEKL.edit("
      _wyn:=exec('rudekl_valid','!zws_par_pdzc');
      {? _wyn=''
      || RU_DEKL.DATAMOD:=date();
         RU_DEKL.AUTO:='R';
         {? ~RU_DEKL.add(1)
         || FUN.emsg('Dla tego typu umowy istnieje już deklaracja w podanej wersji.'@); 0
         || 1
         ?}
      || _wyn
      ?}
    ");
   VAT_VER.f_clear();
   VAT_VER.cntx_pop()
?}


\RU_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Wartosc poczatkowa pola RU_DEKL.RU
::  OLD: \RU_ref/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
RU.ref()


\rudekl_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Po redagowaniu rekordu tabeli RU_DEKL
::   WY: Akronim pola do uzupelnienia, lub '' w przypadku poprawnego uzupelnienia wszystkich pol.
::  OLD: \rudekl_valid/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~EDIT_VAR.UMOWA & RU_DEKL.WIERSZ<>0 || RU_DEKL.WIERSZ:=0 ?};
{? RU_DEKL.DEKL=null()
|| FUN.emsg('Pole "Symbol deklaracji" musi być wypełnione.\n(uzupełnij brakujące informacje)'@);
   'DEKL'

|? EDIT_VAR.UMOWA & RU_DEKL.WIERSZ=0
|| FUN.emsg('Pole "Numer wiersza formularza" musi być wypełnione.\n(uzupełnij brakujące informacje)'@);
   'WIERSZ'

|? ~EDIT_VAR.UMOWA & RU_DEKL.WIERSZ=0
|| {? FUN.ask(
         'Czy na pewno chcesz aby na deklaracjach %1\n(nr formularza: %2, wersja e-deklaracji: %3\n'
         'umowy z kodem %4 (%5))\nNIE były uwzględniane?'@[RU_DEKL.DEKL().NAZWA,$RU_DEKL.DEKL().NR,$RU_DEKL.DEKL().NRF,
         RU_DEKL.RU().K,RU_DEKL.RU().O]
      )
   || ''
   |? RU_DEKL.DEKL().WIERSZ=''
:     Jezeli deklaracja nie obsluguje zadnych wierszy, to pole UMOWA jest nieredagowalne - nie mozemy do niego
:     powrocic - wracamy na DEKL.
   || 'DEKL'
   || 'UMOWA'
   ?}

|? +RU_DEKL.DEKL().WIERSZ
|| {? RU_DEKL.DEKL().WIERSZ*(','+$RU_DEKL.WIERSZ+',')
   || ''
   || FUN.emsg('Numer wiersza poza obsługiwanym zakresem.\n(%1)'@[(1-RU_DEKL.DEKL().WIERSZ-1)]);
      'WIERSZ'
   ?}
|? RU_DEKL.DEKL().WIERSZ=''
|| FUN.emsg('Wybrana deklaracja nie obsługuje podania wartości pola "Numer wiersza formularza".'@);
   'DEKL'
?}


\RUdeklDEKL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2011]
:: OPIS: Przed redagowaniem pola RU_DEKL.DEKL
::  OLD: \RUdeklDEKL/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
exec('vat_ver_hdr','!zws_par_pdzc');
1


\rdekl_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.41]
:: OPIS: Przed wyswietleniem rekordu tabeli RU_DEKL.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::  OLD: \rdekl_bd/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
EDIT_VAR.UMOWA:=RU_DEKL.WIERSZ>0;
0


\ev_umowa_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.41]
:: OPIS: Przed redakcja pola EDIT_VAR.UMOWA.
::   WE:
::   WY:
::  OLD: \ev_umowa_be/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
{? RU_DEKL.DEKL<>null() & RU_DEKL.DEKL().WIERSZ=''
:  Jezeli deklaracja nie obsluguje zadnych wierszy, to pole UMOWA zrobmy nieredagowalnym, i ustawmy na 0. To spowoduje,
:  ze pole WIERSZ tez bedzie nieredagowalne i redakcja okienka zakoczy sie. Stad wymuszenie odswiezenia okienka w tym
:  miejscu - akcja po redakcji pola EDIT_VAR.UMOWA nie wykona sie.
|| EDIT_VAR.UMOWA:=RU_DEKL.WIERSZ:=0;
   win_disp();
   0
|| 1
?}


\ev_umowa_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.41]
:: OPIS: Po redakcji pola EDIT_VAR.UMOWA.
::   WE:
::   WY:
::  OLD: \ev_umowa_ae/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ru_dekl_efld_opt','!zws_par_pdzc','*',RU_DEKL,RU_DEKL.win_edit('?'));
win_disp()


\rdekl_wiersz_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.41]
:: OPIS: Przed wyswietleniem pola RU_DEKL.WIERSZ.
::   WE:
::   WY:
::  OLD: \rdekl_wiersz_bd/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
{? EDIT_VAR.UMOWA || '' || exec('findfnv','#color') ?}


\rdekl_wiersz_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.41]
:: OPIS: Przed redakcja pola RU_DEKL.WIERSZ.
::   WE:
::   WY:
::  OLD: \rdekl_wiersz_be/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
EDIT_VAR.UMOWA


\vat_ver_hdr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.41]
:: OPIS: Ustawienie tytulu okienka wertowania.
::   WE:
::   WY:
::  OLD: \vat_ver_hdr/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
_tyt:=' ('+{? VAR.FILTER='T' || 'obowiązujące' || 'wszystkie' ?}+')';
VAT_VER.hdr_sel();
VAT_VER.hdr_sel(_tyt);
~~


\vat_ver_filtr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.41]
:: OPIS: Filtrowanie rekordow tabeli VAT_VER na podstawie wartosci zmiennej VAR.FILTER .
::   WE:
::   WY:
::  OLD: \vat_ver_filtr/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
_where:='SYSTEM=\':_a\' and WIERSZ<>\'\'';
{? VAR.FILTER='T'
|| _where+=' and OD in ';
   _where+='   (select max(vv.OD) from VAT_VER vv where vv.SYSTEM=\':_a\' and vv.NAZWA=VAT_VER.NAZWA group by vv.NAZWA)'
?};

VAT_VER.f_set('NAZWA,OD^',,_where,exec('sym_dom','blank'));

exec('vat_ver_hdr','!zws_par_pdzc');

~~


\vatver_wb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.41]
:: OPIS: Obsluga akcji Widok w okienku WER tabeli VAT_VER - filtrowanie wersji deklaracji.
::   WE:
::   WY:
::  OLD: \vatver_wb/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.FILTER:={? VAR.FILTER='T' || 'N' || 'T' ?};
exec('vat_ver_filtr','!zws_par_pdzc')


\ruar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.41]
:: OPIS: Obsluga akcji "Po odswiezeniu" okienka UMZLEC tabeli RU w ramach okienka grupowego GWERUZ.
::   WE:
::   WY: ~~
::  OLD: \ruar/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
grp_disp(RU_DEKL,'WER');
~~


\rudeklbs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.41]
:: OPIS: Obsluga akcji "Przed obsluga" okienka WER tabeli RU_DEKL, bedacego skladowym okienka grupowego GWERUZ tabeli
::       RU.
::   WE: _a - moment wywolania:
::          0 - okienko odswiezane na skutek wywolania grp_sel()
::          1 - okienko aktywowane
::   WY: ~~
::  OLD: \rudeklbs/deklarac.fml
::----------------------------------------------------------------------------------------------------------------------
{? RU.size()
|| _ref:=RU.ref();
   _hd:=''
|| _ref:=null();
   _hd:='D:D'
?};

RU_DEKL.prefix(_ref);

{? _a=1 || RU_DEKL.actions('WER',_hd,,1) ?};
~~


\vatver_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [17.00]
:: OPIS: Funkcja na rekord przed okienka SLO tabeli VAT_VER ustawia odpowiednio dostep do akcji
::       Obowiazujące lub Wszystkie
::----------------------------------------------------------------------------------------------------------------------
_hide:={? VAR.FILTER='T' || 'B' || 'Y' ?};
VAT_VER.actions_grayed('SLO',_hide);
~~


\ru_dekl_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Formuła odpowiedzialna za dynamiczne ustawianie właściwości pól tabeli RU_DEKL.
::       Formuła wywoływana jest w dwóch kontekstach pracy:
::          - Po redagowaniu konkretnego pola, które determinuje właściwości wyświetlania innych pól.
::          - Przed wyświetleniem okna redagowania (przed właściwymi akcjami Dołącz, Popraw, Wyświetl), ustawia
::            właściwości wszystkich pól (wymagających tego).
::       Kontekst pracy jest określany na podstawie argumentu wywołania.
::   WE: [_a] [STRING] - Kontekst pracy:
::             '1' - Obsługa jednego pola [domyślnie].
::             '*' - Obsługa wszystkich pól.
::       [_b] [TABLE]  - Uchwyt tabeli, w oknie redagowania której znajdują sie pola. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęta bieżąca tabela.
::       [_c] [STRING] - Akronim okna, w którym mają być ustawione właściwości pól. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęte bieżące okno.
::       [_d] [STRING] - Akronim pola, którego wartość determinuje właściwości wyświetlania innych pól. Parametr ma
::             znaczenie wyłącznie dla _a='1'. [Domyślnie: bieżące pole].
::   WY: 0 - Błąd argumentów wywołania.
::       1 - Argumenty poprawne (właściwości ustawione).
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (_a='1' | _a='*') || _a || '1' ?};
{? var_pres('_b')=type_of(G)
|| _tab:=_b
|? _tryb='1'
|| _tab:=cur_tab(1,1)
|| return(0)
?};
{? var_pres('_c')=type_of('')
|| _we:=_c
|? _tryb='1'
|| _we:=cur_win(1,1)
|| return(0)
?};
{? var_pres('_d')=type_of('')
|| _fld:=_d
|? _tryb='1'
|| _fld:=cur_afld()
|| _fld:=''
?};

:: numer wiersza
{? (_fld='' | _fld='UMOWA')
|| _tab.efld_opt(_we,'enable=%1,mark=%1'[$(EDIT_VAR.UMOWA=1)],_tab,'WIERSZ')
?};

1

:Sign Version 2.0 jowisz:1045 2020/04/03 17:04:54 c59645b2bf2cc799d8f067ab60ec941b769189ba11d2ec66d96abce1f9b6d788eb841dc6f463cfe1e7287c7d3a67e57d5ea030c438a0c1fb345614cc4a0a44b9aa7fb95a007a848802c316d9929bf99c4988faeb03b7a65dab7599581dcb38c0793f787020cd21ff23736bfbd969576cae0866c72e3c9695a0b3324aa35669cf
