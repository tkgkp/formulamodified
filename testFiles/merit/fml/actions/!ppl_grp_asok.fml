:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ppl_grp_asok.fml
:: Utworzony: 27.01.2016
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa czynności PPL_GRP_ASOK - Gr. aktualizacja skład. okres.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Gr. aktualizacja skład. okres. - główna formuła czynności.
::       Czynność umożliwia:
::          - import danych z pliku tekstowego;
::          - grupowe wprowadzenie informacji o nowych składnikach okresowych;
::          - grupowe wprowadzenie informacji o nowych okresach obowiązywania składników okresowych.
::       Akcje te wywoływane są niezależnie.
::  OLD: \prem_grup/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::
popup(1,'Grupowa aktualizacja składników okresowych'@,
   'Import z pliku zewnętrznego'@,
      'Import składnika okresowego z zewnętrznego pliku tekstowego'@,
      "exec('import','!ppl_grp_asok')",
   'Wprowadzanie składników'@,
      'Wprowadzanie składników dla wybranej grupy pracowników'@,
      "exec('skladniki','!ppl_grp_asok')",
   'Wprowadzanie okresu obowiązywania'@,
      'Wprowadzanie okresu obowiązywania wybranego składnika okresowego'@,
      "exec('okres_obowiazywania','!ppl_grp_asok')"
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Import składnika okresowego z pliku zewnętrznego.
::   WE:
::   WY: '' lub treść komunikatu o błędzie.
::  OLD: \imp_prem/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
::FUN.info(
::   'Import składnika okresowego jest operacją składającą się z następujących kroków:\n'
::   '1. Uzupełnienie parametrów importu (wskazanie pliku i składnika okresowego).\n'
::   '2. Wstępny import składników okresowych.\n'
::   '3. Ewentualne pominięcie wskazanych składników okresowych.\n'
::   '4. Właściwe wprowadzenie informacji do bazy danych.\n'
::   '\n'
::   'Opis kolumn importowanego pliku (separator kolumn: średnik):\n'
::   '1. Identyfikator pracownika lub PESEL osoby lub nr teczki.\n'
::   '2. Data przyznania składnika okresowego.\n'
::   '3. Data początku okresu, za który przyznano składnik.\n'
::   '4. Data końca okresu, za który przyznano składnik.\n'
::   '5. Kwota nominalna.\n'
::   '6. Kwota wypłacona.\n'
::   '7. Kwota wejściowa.\n'
::   '8. Znacznik braku wypłaty (T/N).\n'@
::);

_inTerm:=exec('interm','#system');
_pth:='';
{? _inTerm
|| _tmp_dir:=fmk_tmp_dir(0);
   {? type_of(_tmp_dir)<>type_of(~~)
   || _pth:=_tmp_dir.get_path()
   || FUN.emsg('Nie udało się utworzyć katalogu tymczasowego po stronie serwera. Operacja przerwana'@);
      return()
   ?}
?};
_PAR:=exec('get_par_imp','!ppl_grp_asok',_pth);
{? ~_PAR.OK
|| return('Rezygnacja (parametry importu)'@)
?};
_plik:={? _inTerm || _pth+exec('sep','#file',2)+_PAR.PLIK || '@'+_PAR.PLIK ?};
_fh:=fopen(_plik,'r',0,1,1,1);
{? ~_fh.is_open()
|| return('Brak możliwości odczytu pliku [%1]'@ [_PAR.PLIK])
?};

_nrl:=0;
{? _PAR.TP
:: Jeżeli plik zawiera linię nagłówka to odczytujemy ją (pomijamy w imporcie).
|| _nrl+=1;
   _fh.fread()
?};

_data:=
   "  _rk:=#(4+_a);
      _mc:=#((7+_a)+2);
      _dz:=#(_a+2);
      {? _rk>0 & _mc>0 & _mc<13 & _dz>0 & _dz<=(date(_rk,_mc,0)~3)
      || date(_rk,_mc,_dz)
      || date(0,0,0)
      ?}
   ";
_d0:=date(0,0,0);
_pat:=obj_new(2); _rep:=obj_new(2);
_pat[1]:=',';     _rep[1]:='.';
_pat[2]:=' ';     _rep[2]:='';


: Potrzebne struktury
_cfg:=exec('get_tmp','!ppl_grp_asok','imp');
_TMP:=_cfg.TMP;
_ndx:=obj_new('OSOBA','NRL');
_ndx.OSOBA:=_TMP.index('?');
_ndx.NRL:=_TMP.ndx_tmp(,,'NRL',,);

_buf:=obj_new('ID','DP','O_OD','O_DO','KW_N','KW_W','KW_I','B_WYP');

P.cntx_psh();
{? _PAR.TID=1
|| P.index('PRACOIP')
|? _PAR.TID=2
|| P.index(P.ndx_tmp(,,'FIRMA',,,'F_ZATR','KOD',,'OSOBA','PESEL',,'DZA',,1))
|? _PAR.TID=3
|| P.index(P.ndx_tmp(,,'FIRMA',,,'F_ZATR','KOD',,'T',,,'DZA',,1))
?};
P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P);

{!
|? _linia:=_fh.fread();
   _linia<>'\n'
|! _nrl+=1;
   echo('Proszę czekać ...'@+' | '+form(_nrl,10,0)+'| '+_linia);
   _TMP.memo_set(_linia,'LINIA');

   _linia+=';';
   {! _lp:=1 .. 8
   |! _poz:=_linia*';';
      _buf[_lp]:=(_poz-1)+_linia;
      _linia:=_poz-_linia
   !};

   _prac:=
      {? _PAR.TID=1
      || P.find_key(#_buf.ID)
      |? _PAR.TID=2
      || P.find_key(_buf.ID,)
      |? _PAR.TID=3
      || P.find_key(_buf.ID,)
      ?};
   _TMP.blank();
   _TMP.NAZWISKO:={? _prac || P.OSOBA().NAZWISKO || 'Brak pracownika'@ ?};
   _TMP.PIERWSZE:={? _prac || P.OSOBA().PIERWSZE || '' ?};
   _TMP.ID:=_buf.ID;
   _TMP.PREF:={? _prac || $P.ref() || '' ?};

   _TMP.R_RN:=_PAR.R_RN;
   _TMP.R_RT:=_PAR.R_RT;
   _TMP.RP:=_PAR.RP;
   _TMP.RZ:=_PAR.RZ;
   _TMP.KZ:=_PAR.KZ;
   _TMP.WZ_OD:=_PAR.WZ_OD;
   _TMP.WZ_DO:=_PAR.WZ_DO;
   _TMP.CZY_FM:=_PAR.CZY_FM;
   _TMP.R_N:=_PAR.R_N;
   _TMP.SKP:=_PAR.SKP;

   _TMP.DP:=_data(_buf.DP);
   _TMP.O_OD:=_data(_buf.O_OD);
   _TMP.O_DO:=_data(_buf.O_DO);
   _TMP.KW_N:=#gsub(_buf.KW_N,_pat,_rep);
   _TMP.KW_W:=#gsub(_buf.KW_W,_pat,_rep);
   _TMP.KW_I:=#gsub(_buf.KW_I,_pat,_rep);
   _TMP.B_WYP:=
      {? _buf.B_WYP='T' | _buf.B_WYP='N'
      || _buf.B_WYP
      |? _TMP.KW_N+_TMP.KW_W=0
      || 'T'
      || 'N'
      ?};
   _TMP.WYKONAJ:=_prac & _TMP.O_OD<>_d0 & _TMP.O_DO<>_d0 &
::    Wykluczamy kwoty ujemne.
      _TMP.KW_N>=0 & _TMP.KW_W>=0 & _TMP.KW_I>=0 &
::    Jest kwota nominalna lub kwota wypłacona lub jest "bez wypłaty".
      (_TMP.KW_N | _TMP.KW_W | _TMP.B_WYP='T');
   _TMP.NRL:=_nrl;
   _TMP.add() & _TMP.memo_put(,'LINIA')
!};
echo();

P.cntx_pop();

_fh.fclose();
obj_del(_fh);

{? ~_TMP.select() | ~_TMP.first()
|| return('Brak danych do importu'@)
?};

_TMP.index(_ndx.NRL);
:: Fakt istnienia rekordów w tabeli tymczasowej został sprawdzony kilka linii wyżej.
_TMP.first();

_fn:={? _inTerm || _plik+'.rap' || _PAR.PLIK+'.rap' ?};
exec('zapisz','!ppl_grp_asok','imp',_cfg,_fn)


\skladniki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Grupowe wprowadzanie składników okresowych.
::   WE:
::   WY: '' lub treść komunikatu o błędzie.
::  OLD: \prem_ogrp/skl_okr.fml - Znacząco zmieniona obsługa.
::----------------------------------------------------------------------------------------------------------------------
::FUN.info(
::   'Grupowe wprowadzanie składników okresowych jest operacją składającą się z następujących kroków:\n'
::   '1. Wstępny wybór pracowników, którym chcemy wprowadzić składnik okresowy.\n'
::   '2a. Ewentualne pominięcie pracowników nadmiarowo zakwalifikowanych w pierwszym kroku.\n'
::   '2b. Określenie parametrów składnika okresowego (rodzaj, daty, kwoty) poprzez akcję Popraw (również grupowo).\n'
::   '3. Właściwe wprowadzenie informacji do bazy danych.'@
::);

_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='PPL';
_args.HDR_SEL:='1. Wstępny wybór pracowników'@;

_wyb:=exec('wybierz','pracownik',_args);
{? _wyb.STATUS<>''
|| FUN.info(_wyb.STATUS);
   return(_wyb.STATUS)
|? ~_wyb.P.first()
|| return('Brak pracowników do wprowadzania składników'@)
?};

_cfg:=exec('get_tmp','!ppl_grp_asok','gws');
_TMP:=_cfg.TMP;

params_set(
   'cfg',_cfg,
   'buf',exec('buf','!ppl_grp_asok','init')
);

P.cntx_psh();
P.prefix();
{!
|? {? P.seek(_wyb.P.SQL)
   || _TMP.blank();
      _TMP.NAZWISKO:=P.OSOBA().NAZWISKO;
      _TMP.PIERWSZE:=P.OSOBA().PIERWSZE;
      _TMP.ID:=$P.IP;
      _TMP.PREF:=_wyb.P.SQL;
      _TMP.add()
   ?};
   _wyb.P.next()
!};
P.cntx_pop();

{? ~_TMP.select() | ~_TMP.first()
|| return('Rezygnacja'@)
?};

_fn:=pth_dir('plik.txt')+exec('sep','#file')+'ppl_grp_asok_gws_'+$PREM_OKR.tm_stamp()+'.rap';
exec('zapisz','!ppl_grp_asok','gws',_cfg,_fn)


\okres_obowiazywania
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Grupowe wprowadzenie okresu obowiązywania wybranego składnika okresowego.
::   WE:
::   WY:
::  OLD: \ust_bpr/skl_okr.fml - Znacząco zmieniona obsługa.
::----------------------------------------------------------------------------------------------------------------------
::FUN.info(
::   'Grupowe wprowadzanie okresu obowiązywania składnika okresowego\n'
::   'jest operacją składającą się z następujących kroków:\n'
::   '1. Wybór składnika i określenie okresu jego obowiązywania.\n'
::   '2. Wstępny wybór pracowników, którym chcemy wprowadzić okres obowiązywania składnika okresowego.\n'
::   '3. Ewentualne pominięcie pracowników nadmiarowo zakwalifikowanych w pierwszym kroku.\n'
::   '4. Właściwe wprowadzenie informacji do bazy danych.'@
::);

_PAR:=exec('get_par_exc','!ppl_grp_asok');

{? ~_PAR.OK
|| return('Rezygnacja (parametry importu)'@)
?};

_cfg:=exec('get_tmp','!ppl_grp_asok','gwo');
_TMP:=_cfg.TMP;

_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='PPL';
_args.HDR_SEL:='2. Wstępny wybór pracowników'@;

_wyb:=exec('wybierz','pracownik',_args);
{? _wyb.STATUS<>''
|| FUN.info(_wyb.STATUS);
   return(_wyb.STATUS)
|? ~_wyb.P.first()
|| return('Brak pracowników do wprowadzania składników'@)
?};

params_set('cfg',_cfg);
PREM_EXC.cntx_psh();
PAR_POKR.cntx_psh();
PAR_POKR.prefix();
{? PAR_POKR.seek(_PAR.SKP)
|| P.cntx_psh();
   P.prefix();
   {!
   |? {? P.seek(_wyb.P.SQL)
      || PREM_EXC.blank();
         PREM_EXC.P:=P.ref();
         PREM_EXC.SKP:=PAR_POKR.ref();
         PREM_EXC.OD:=_PAR.OD;
         PREM_EXC.DO:=_PAR.DO;

         _TMP.blank();
         _TMP.NAZWISKO:=P.OSOBA().NAZWISKO;
         _TMP.PIERWSZE:=P.OSOBA().PIERWSZE;
         _TMP.ID:=$P.IP;
         _TMP.PREF:=_wyb.P.SQL;

         _TMP.R_RN:=_PAR.R_RN;
         _TMP.R_RT:=_PAR.R_RT;
         _TMP.RP:=_PAR.RP;
         _TMP.RZ:=_PAR.RZ;
         _TMP.KZ:=_PAR.KZ;
         _TMP.WZ_OD:=_PAR.WZ_OD;
         _TMP.WZ_DO:=_PAR.WZ_DO;
         _TMP.CZY_FM:=_PAR.CZY_FM;
         _TMP.R_N:=_PAR.R_N;
         _TMP.SKP:=_PAR.SKP;

         _TMP.OD:=_PAR.OD;
         _TMP.DO:=_PAR.DO;

         _TMP.OPIS:=exec('prem_exc_ae','skladniki_okresowe',1);
         _TMP.WYKONAJ:=_TMP.OPIS='';
         _TMP.add()
      ?};
      _wyb.P.next()
   !};
   P.cntx_pop()
?};
PAR_POKR.cntx_pop();
PREM_EXC.cntx_pop();

{? ~_TMP.select() | ~_TMP.first()
|| return('Rezygnacja'@)
?};

_fn:=pth_dir('plik.txt')+exec('sep','#file')+'ppl_grp_asok_gwo_'+$PREM_EXC.tm_stamp()+'.rap';
_fh:=fopen(_fn,'uw',0,1,1);
{? ~_fh.is_open()
|| return('Brak możliwości zapisu do pliku [%1]'@ [_fn])
?};

P.cntx_psh();
P.prefix();
PAR_POKR.cntx_psh();
PAR_POKR.prefix();
PREM_EXC.cntx_psh();
PREM_EXC.prefix();

{!
|? {? ~_TMP.WYKONAJ
   || _txt:='Pominięto w przetwarzaniu'@
   |? ~P.seek(_TMP.PREF)
   || _txt:='Nie znaleziono pracownika'@
   |? ~PAR_POKR.seek(_TMP.SKP)
   || _txt:='Nie znaleziono składnika okresowego'@

   || PREM_EXC.blank();
      PREM_EXC.P:=P.ref();
      PREM_EXC.SKP:=PAR_POKR.ref();
      PREM_EXC.OD:=_TMP.OD;
      PREM_EXC.DO:=_TMP.DO;
      {? (_txt:=exec('prem_exc_ae','skladniki_okresowe',1))=''
      || {? PREM_EXC.add(1)
         || _txt:='Wiersz przetworzony poprawnie'@;
            _TMP.WYKONAJ:=2
         || _txt:='Błąd zapisu do bazy danych'@
         ?}
      ?}
   ?};
   _TMP.OPIS:=_txt;
   _TMP.put();

   _fh.fwrite(
      _TMP.NAZWISKO+' '+_TMP.PIERWSZE+'|'+_TMP.ID+'|'+
      $_TMP.R_RN+'|'+_TMP.R_RT+'|'+_TMP.RZ+'|'+_TMP.WZ_OD$1+'|'+
      _TMP.OD$1+'|'+_TMP.DO$1+'|'+
      _txt+'|'
   );

   _TMP.next()
!};

PREM_EXC.cntx_pop();
PAR_POKR.cntx_pop();
P.cntx_pop();

_fh.fclose();

_TMP.win_sel(_cfg.ws2);
_TMP.select();

{? exec('interm','#system')
|| dlg_save(_fn,0)
|| FUN.info('Raport z przetwarzania zapisano w pliku:\n%1'@ [_fn])
?};

''


\tmp_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła odpowiedzialna za dynamiczne ustawianie właściwości pól tabeli tymczasowej , w której symulowana jest
::       relacja PAR_POKR.R_RN. Wykorzystywana w dwóch mechanizmach:
::        - przy pobraniu od użytkownika parametrów importu;
::        - przy grupowym wprowadzaniu składników.
::       Formuła wywoływana jest w dwóch kontekstach pracy:
::          - Po redagowaniu konkretnego pola, które determinuje właściwości wyświetlania innych pól.
::          - Przed wyświetleniem okna redagowania (przed właściwymi akcjami Dołącz, Popraw, Wyświetl), ustawia
::            właściwości wszystkich pól (wymagających tego).
::       Kontekst pracy jest określany na podstawie argumentu wywołania.
::   WE:  _a  [STRING] - Kontekst pracy:
::             '1' - Obsługa jednego pola [domyślnie].
::             '*' - Obsługa wszystkich pól.
::       [_b] [TABLE]  - Uchwyt tabeli, w oknie redagowania której znajdują sie pola. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęta bieżąca tabela.
::       [_c] [STRING] - Akronim okna, w którym mają być ustawione właściwości pól. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęte bieżące okno.
::       [_d] [STRING] - Akronim pola, którego wartość determinuje właściwości wyświetlania innych pól. Parametr ma
::             znaczenie wyłącznie dla _a='1'. [Domyślnie: bieżące pole].
::   WY: 0 - Błąd argumentów wywołania.
::       1 - Argumenty poprawne (właściwości ustawione).
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (_a='1' | _a='*') || _a || '1' ?};
{? var_pres('_b')=type_of(PREM_OKR)
|| _TAB:=_b
|? _tryb='1'
|| _TAB:=cur_tab(1,1)
|| return(0)
?};
{? var_pres('_c')=type_of('')
|| _we:=_c
|? _tryb='1'
|| _we:=cur_win(1,1)
|| return(0)
?};
{? var_pres('_d')=type_of('')
|| _fld:=_d
|? _tryb='1'
|| _fld:=cur_afld()
|| _fld:=''
?};

{? _fld='' | _fld='R_RN'
|| _val:=_TAB.SKP<>'';
   _sval:=$_val;
   _TAB.efld_opt(_we,'enable='+_sval,,'R_RT');
   _TAB.efld_opt(_we,'enable='+_sval,,'RP');
   _TAB.efld_opt(_we,'enable='+_sval,,'RZ');
   _TAB.efld_opt(_we,'enable='+_sval,,'WZ_OD');
   _TAB.efld_opt(_we,'enable='+_sval,,'WZ_DO');

   {? var_pres('O_DO',_TAB)>0
::    Wywołanie dla grupowego wprowadzania składników. Właściwie, to dla każdego pola (O_DO,KW_N,KW_W,RZ,KZ,R_N)
::    powinniśmy sprawdzić, czy występuje w schemacie. Załóżmy jednak, że jeżeli występuje pole O_DO, to i pozostałe
::    występują i jest to wywołanie dla grupowego wprowadzania składników (a nie dla importu).
   || _TAB.efld_opt(_we,'enable='+_sval,,'O_DO');
      _TAB.efld_opt(_we,'enable='+_sval,,'KW_N');
      _TAB.efld_opt(_we,'enable='+_sval,,'KW_W')
   ?}
?};

{? var_pres('KW_N',_TAB)>0 & (_fld='' | _fld='R_RN' | _fld='B_WYP')
|| _val:=_TAB.SKP<>'' & _TAB.B_WYP='N' & ((_TAB.RZ='T' & _TAB.KZ='N') | _TAB.R_N<>'');
   _TAB.efld_opt(_we,'mark='+$_val,,'KW_N')
?};


{? var_pres('KW_W',_TAB)>0 & (_fld='' | _fld='R_RN' | _fld='B_WYP' | _fld='KW_N')
|| _val:=_TAB.SKP<>'' & _TAB.B_WYP='N' & (_TAB.RZ='N' | _TAB.KZ='W') & _TAB.CZY_FM='N';
   _TAB.efld_opt(_we,'mark='+$_val,,'KW_W')
?};

1


\tmp_r_rn_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "F3" na polu symulującym relację PAR_POKR.R_RN.
::       Wymagane jest, aby w tej samej tabeli występowały pola o akronimach: R_RN,R_RT,RP,RZ,KZ,WZ_OD,WZ_DO,CZY_FM,R_N
::       i typach zgodnych z odpowiednimi polami tabeli PAR_POKR. Dodatkowo wymagane jest pole SKP STRING[16],
::       w którym przechowywany będzie SQL-ref definicji składnika okresowego, czyli wynik $PAR_POKR.ref().
::   WE: [_a] [TABLE] - Uchwyt tabeli, w której znajduje się pole [domyślnie: cur_tab(1,1)]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:={? var_pres('_a')=type_of(PAR_POKR) || _a || cur_tab(1,1) ?};

_par_pokr:=exec('get_par_pokr','!ppl_grp_asok',_TAB.R_RN,_TAB.RZ,_TAB.WZ_OD);
{? _par_pokr.REF<>''
|| _ret:=_TAB.R_RN:=_par_pokr.R_RN;
   _TAB.R_RT:=_par_pokr.R_RT;
   _TAB.RP:=_par_pokr.RP;
   _TAB.RZ:=_par_pokr.RZ;
   _TAB.KZ:=_par_pokr.KZ;
   _TAB.WZ_OD:=_par_pokr.WZ_OD;
   _TAB.WZ_DO:=_par_pokr.WZ_DO;
   _TAB.R_N:=_par_pokr.R_N;
   _TAB.CZY_FM:=_par_pokr.CZY_FM;
   _TAB.SKP:=_par_pokr.REF
|| _ret:=~~;
   _TAB.RZ:='T';
   _TAB.WZ_OD:=date(0,0,0);
   _TAB.SKP:=''
?};

_ret


\tmp_r_rn_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Po redagowaniu" dla pola symulującego relację PAR_POKR.R_RN (patrz opis formuły \tmp_r_rn_f3).
::   WE: [_a] [TABLE]  - Uchwyt tabeli, w której znajduje się pole [domyślnie: cur_tab(1,1)]
::       [_b] [STRING] - Akronim okna redagowania [domyślnie: _TAB.win_edit('?')].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:={? var_pres('_a')=type_of(PAR_POKR) || _a || cur_tab(1,1) ?};
_we:={? var_pres('_b')=type_of('') || _b || _TAB.win_edit('?') ?};

_ret:=0;

_blank:="_a.RZ:='T'; _a.WZ_OD:=date(0,0,0); _a.SKP:=''";

_fld:=fld();
{? ~_fld
:: Pole jest puste, na wszelki wypadek zerujemy kluczowe wartości w _TAB i pozwalamy opuścić redagowanie.
|| _blank(_TAB);
   _ret:=1

|| PAR_POKR.cntx_psh();
   PAR_POKR.index('PAR_POKR');
   PAR_POKR.prefix(exec('ref_firma','ustawienia'));
   {? _TAB.SKP<>'' & PAR_POKR.seek(_TAB.SKP) &
      _TAB.R_RN=PAR_POKR.R_RN & _TAB.R_RT=PAR_POKR.R_RT &
      _TAB.RP=PAR_POKR.RP & _TAB.RZ=PAR_POKR.RZ & _TAB.WZ_OD=PAR_POKR.WZ_OD & _TAB.WZ_DO=PAR_POKR.WZ_DO
::    _TAB.SKP jest uzupełnione i wskazuje na definicję dotyczącą tego samego składnika - nic nie robimy.
   || _ret:=1

::    _TAB.SKP jest puste, albo wskazuje na inny składnik niż wynika to z kluczowych wartości _TAB. Spróbujmy
::    znaleźć właściwą definicję składnika.
   || PAR_POKR.prefix(exec('ref_firma','ustawienia'),_fld);
      {? PAR_POKR.last()
      || _TAB.R_RT:=PAR_POKR.R_RT;
         _TAB.RP:=PAR_POKR.RP;
         _TAB.RZ:=PAR_POKR.RZ;
         _TAB.KZ:=PAR_POKR.KZ;
         _TAB.WZ_OD:=PAR_POKR.WZ_OD;
         _TAB.WZ_DO:=PAR_POKR.WZ_DO;
         _TAB.CZY_FM:=PAR_POKR.CZY_FM;
         _TAB.R_N:=$PAR_POKR.R_N;
         _TAB.SKP:=$PAR_POKR.ref();
         _ret:=1

::       Znalezienie właściwego składnika nie powiodło się - na wszelki wypadek zerujemy kluczowe wartości w _TAB
::       i nie pozwalamy na opuszczenie pola z błędną wartością.
      || FUN.info('Brak pozycji w słowniku'@);
         _blank(_TAB);
         _ret:=0
      ?}
   ?};
   PAR_POKR.cntx_pop()
?};
exec('tmp_efld_opt','!ppl_grp_asok','1',_TAB,_we);

_ret


\tmp_ae_skladniki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Rekord - po"  dla tabeli tymczasowej obsługującej grupowe wprowadzanie składników okresowych.
::
::       Uwaga. Treść bieżącej formuły musi być zgodna z treścią odpowiedniej formuły weryfikującej ręczne wprowadzanie
::              składników okresowych.
::
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TMP:=cur_tab(1,1);

_nod:='\"'+MS.name(PREM_OKR,'O_OD')+'\"';
_ndo:='\"'+MS.name(PREM_OKR,'O_DO')+'\"';

{? (_chk:=__CHK.record(_TMP,,'R_RN','O_OD','O_DO'))<>''
|| return(_chk)
?};

_fret:="__CHK.err_fld(PREM_OKR,_a,1,_b)";

{? _TMP.B_WYP='N' & ((_TMP.RZ='T' & _TMP.KZ='N') | _TMP.R_N<>'')
|| {? (_chk:=__CHK.record(_TMP,,'KW_N'))<>''
::    Jeżeli (jest "rozliczaj w zasiłkach" + "kwotę nominalną") lub "wykazuj kwotę nominalną"
::    to sprawdźmy, czy jest "kwota nominalna".
   || return(_chk)

   |? _TMP.KW_N<0
   || return(_fret('KW_N','Wartość nie może być ujemna.'@))
   ?}
?};

{? _TMP.B_WYP='N' & (_TMP.RZ='N' | _TMP.KZ='W') & _TMP.CZY_FM='N'
|| {? (_chk:=__CHK.record(_TMP,,'KW_W'))<>''
::    Jeżeli ("Nie rozliczaj w zasiłkach" lub "Rozliczaj kwotę wypłaconą") & kwota nie jest na podstawie "formuły"
::    to sprawdźmy, czy jest "kwota wypłacana".
   || return(_chk)

   |? _TMP.KW_W<0
   || return(_fret('KW_W','Wartość nie może być ujemna.'@))
   ?}
?};

''


\tmp_popraw_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji grupowej "Popraw - przed" dla tabeli tymczasowej obsługującej grupowe wprowadzanie składników
::       okresowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_TMP:=_par.cfg.TMP;
_we:=_par.cfg.we1;

_TMP.efld_opt(_we,'enable=0',,'NAZWISKO');
_TMP.efld_opt(_we,'enable=0',,'PIERWSZE');
_TMP.efld_opt(_we,'enable=0',,'ID');

{? _ret:=_TMP.edit("exec('tmp_ae_skladniki','!ppl_grp_asok')")
|| exec('buf','!ppl_grp_asok','copy',_par.buf,_TMP)
?};

_TMP.efld_opt(_we,'enable=1',,'NAZWISKO');
_TMP.efld_opt(_we,'enable=1',,'PIERWSZE');
_TMP.efld_opt(_we,'enable=1',,'ID');

_ret


\tmp_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Popraw - przed" dla tabeli tymczasowej obsługującej grupowe wprowadzanie składników okresowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_TMP:=_par.cfg.TMP;

{? _TMP.sel_size()
:: Obsługa akcji grupowej - wszystkie wartości są już w buforze, wystarczy przepisać je do bieżącego rekordu.
|| exec('buf','!ppl_grp_asok','copy',_TMP,_par.buf);
   _TMP.WYKONAJ:=1;
   _TMP.put()
|? _TMP.edit("exec('tmp_ae_skladniki','!ppl_grp_asok')")
|| _TMP.WYKONAJ:=1;
   _TMP.put()
?};
~~


\buf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła do obsługi bufora danych (tablicy z elementami nazwanymi) wykorzystywanego w akcji grupowej Popraw
::       przy grupowym wprowadzaniu składników. Formuła powstała, aby w jednym miejscu zebrać wszystkie akronimy pól,
::       które biorą w tym udział. Akronimy te są podzbiorem akronimów pól tabeli _TMP.
::   WE: _a   [STRING] - Kod akcji do wykonania. Dostępne akcje:
::          'init' - Formuła tworzy tablicę z elementami nazwanymi [domyślnie].
::          'copy' - Formuła kopiuje zawartość pól z obiektu _c do obiektu _b.
::       [_b] [OBJECT] - Cel kopiowania. Parametr wymagany dla _a='copy'.
::       [_c] [OBJECT] - Źródło kopiowania. Parametr wymagany dla _a='copy'.
::   WY: W zależności od argumentu _a:
::          'init'   -> Tablica z elementami nazwanymi.
::          'copy'   -> ~~
::----------------------------------------------------------------------------------------------------------------------
_akcja:={? var_pres('_a')=type_of('') & _a='copy' || _a || 'init' ?};

_lista:='R_RN,R_RT,RP,RZ,KZ,WZ_OD,WZ_DO,CZY_FM,R_N,SKP,DP,O_OD,O_DO,KW_I,KW_N,KW_W,B_WYP,LT';
_pola:=spli_str(_lista,',');

{? _akcja='init'
|| _fml:='';
   {! _lp:=1 .. obj_len(_pola)
   |! _fml+='\''+_pola[_lp]+'\','
   !};
   ($('obj_new('+(_fml-1)+')'))()

|? _akcja='copy' & var_pres('_b')>100 & var_pres('_c')>100
|| _fml:='';
   {! _lp:=1 .. obj_len(_pola)
   |! _fml+='_a.'+_pola[_lp]+':=_b.'+_pola[_lp]+'; '
   !};
   ($(_fml-2))(_b,_c);
   ~~
?}


\get_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Przygotowanie tabeli tymczasowej do importu danych z pliku zewnętrznego, grupowego wprowadzania danych o
::       składnikach okresowych oraz o okresie obowiązywania.
::   WE: _a  [STRING] - Tryb pracy:
::           'imp' - Import z pliku tekstowego.
::           'gws' - Grupowe wprowadzanie składników okresowych.
::           'gwo' - Grupowe wprowadzenie okresu obowiązywania.
::   WY: Tablica nazwana lub ~~.
::  OLD: \mk_tmp/skl_okr.fml
::  OLD: \disp_im/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & (_a='imp' | _a='gws' | _a='gwo')
|| _tryb:=_a
|| return()
?};

_TMP:=tab_tmp(2,
:: Pola identyfikujące osobę.
   'NAZWISKO','STRING['+$MS.fld_len(OSOBA,'NAZWISKO')+']','Nazwisko',
   'PIERWSZE','STRING['+$MS.fld_len(OSOBA,'PIERWSZE')+']','Imię',
   'ID','STRING[12]','Identyfikator',
::  Pola identyfikujące składnik okresowy (PAR_POKR).
   'R_RN','INTEGER',MS.name(PAR_POKR,'R_RN'),
   'R_RT','STRING['+$MS.fld_len(R,'RT')+']',MS.name(PAR_POKR,'R_RT'),
   'RP','STRING[1]',MS.name(PAR_POKR,'RP'),
   'RZ','STRING[1]',MS.name(PAR_POKR,'RZ'),
   'KZ','STRING[1]',MS.name(PAR_POKR,'KZ'),
   'WZ_OD','DATE',MS.name(PAR_POKR,'WZ_OD'),
   'WZ_DO','DATE',MS.name(PAR_POKR,'WZ_DO'),
   'CZY_FM','STRING[1]',MS.name(PAR_POKR,'CZY_FM'),
   'R_N','STRING[16]','$PAR_POKR.R_N',
   'SKP','STRING[16]','$PAR_POKR.ref()',
:: Pola dotyczące wartości składnika okresowego (PREM_OKR).
   'DP','DATE',MS.name(PREM_OKR,'DP'),
   'O_OD','DATE',MS.name(PREM_OKR,'O_OD'),
   'O_DO','DATE',MS.name(PREM_OKR,'O_DO'),
   'KW_I','REAL',MS.name(PREM_OKR,'KW_I'),
   'KW_N','REAL',MS.name(PREM_OKR,'KW_N'),
   'KW_W','REAL',MS.name(PREM_OKR,'KW_W'),
   'B_WYP','STRING[1]',MS.name(PREM_OKR,'B_WYP'),
   'LT','STRING['+$MS.fld_len(PREM_OKR,'LT')+']',MS.name(PREM_OKR,'LT'),
:: Pola dotyczące okresu obowiązywania.
   'OD','DATE',MS.name(PREM_EXC,'OD'),
   'DO','DATE',MS.name(PREM_EXC,'DO'),
:: Pola techniczne.
   'WYKONAJ','INTEGER','Znacznik wykonanania [0/1/2]',
   'PREF','STRING[16]','$P.ref()',
   'OPIS','STRING[255]','Opis',
   'NRL','INTEGER','Nr linii',
   'LINIA','SYS_MEMO','Linia źródłowa'
);

_TMP.fld_fml('R_RN','F3',"exec('tmp_r_rn_f3','!ppl_grp_asok')");
_TMP.fld_fml('R_RN','AFTER_EDIT',"exec('tmp_r_rn_ae','!ppl_grp_asok')");
_TMP.fld_fml('O_OD','AFTER_EDIT',"exec('prem_okr_o_od_ae','skladniki_okresowe',cur_tab(1,1))");
_TMP.fld_fml('KW_N','AFTER_EDIT',"exec('tmp_efld_opt','!ppl_grp_asok')");
_TMP.fld_fml('KW_W','BEFORE_EDIT',"cur_tab(1,1).CZY_FM='N'");
_TMP.fld_fml('KW_I','AFTER_EDIT',"exec('prem_okr_kw_i_ae','skladniki_okresowe',cur_tab(1,1))");
_TMP.fld_fml('B_WYP','AFTER_EDIT',"exec('tmp_efld_opt','!ppl_grp_asok')");
_TMP.fld_fml('LT','PATTERN',"exec('x_lt_pt','lista_plac')");
_TMP.fld_fml('LT','F3',"exec('x_lt_f3','lista_plac')");
_TMP.fld_fml('LT','AFTER_EDIT',"exec('x_lt_ae','lista_plac')");

_TMP.fld_attr(,2);

_ws:=obj_new(2);
{! _lp:=1 .. 2
:: _lp=1 -> okno robocze
:: _lp=2 -> okno raportu
|! _ws[_lp]:=_TMP.mk_sel('Pracownicy'@,,0,'prem_oks1'+$_lp,,,,,'U',,,,,'html_maximized');
:: ---------- POLA ----------
   {? _lp=1
   || _TMP.win_fld(_ws[_lp],,'WYKONAJ',,,-3,,1,'Status'@,,
         'Czy przetwarzać bieżący wiersz? [1/0]'@,2,,"1","0")
   |? _lp=2
   || _TMP.win_fld(_ws[_lp],,'WYKONAJ',,,-3,,1,'Status'@,,
         'Status przetwarzania: 2 - wprowadzony; 1 - zakwalifikowany; 0 - pominięty'@,2,,"2","1","0")
   ?};
   _TMP.win_fld(_ws[_lp],,'NAZWISKO',,,20,,1,,,MS.comment(OSOBA,'NAZWISKO'));
   _TMP.win_fld(_ws[_lp],,'PIERWSZE',,,15,,1,,,MS.comment(OSOBA,'PIERWSZE'));
   _TMP.win_fld(_ws[_lp],,'ID',,,'-8,20',,1,,,'Identyfikator'@);
   _TMP.win_fld(_ws[_lp],,'R_RN',,,-5,,1,,,MS.comment(PAR_POKR,'R_RN'));
   _TMP.win_fld(_ws[_lp],,'R_RT',,,-10,,1,,,MS.comment(PAR_POKR,'R_RT'));
   {? _tryb='imp' | _tryb='gws'
   || {? _lp=1
      || _TMP.win_fld(_ws[_lp],,'DP',,,-10,,,,,MS.comment(PREM_OKR,'DP'));
         _TMP.win_fld(_ws[_lp],,'O_OD',,,-10,,,,,MS.comment(PREM_OKR,'O_OD'));
         _TMP.win_fld(_ws[_lp],,'O_DO',,,-10,,,,,MS.comment(PREM_OKR,'O_DO'));
         _TMP.win_fld(_ws[_lp],,'KW_I',,,-12,2,,,,MS.comment(PREM_OKR,'KW_I'))
      ?};
      _TMP.win_fld(_ws[_lp],,'KW_N',,,-12,2,,,,MS.comment(PREM_OKR,'KW_N'));
      _TMP.win_fld(_ws[_lp],,'KW_W',,,-12,2,,,,MS.comment(PREM_OKR,'KW_W'));
      {? _lp=1
      || _TMP.win_fld(_ws[_lp],,'B_WYP',,,-3,,,,,MS.comment(PREM_OKR,'B_WYP'),2,,"'T'","'N'")
      ?};
      {? _tryb='gws'
      || _TMP.win_fld(_ws[_lp],,'LT',,,-MS.fld_len(PREM_OKR,'LT'),,,,,MS.comment(PREM_OKR,'LT'))
      ?}
   |? _tryb='gwo'
   || _TMP.win_fld(_ws[_lp],,'OD',,,-10,,,,,MS.comment(PREM_EXC,'OD'));
      _TMP.win_fld(_ws[_lp],,'DO',,,-10,,,,,MS.comment(PREM_EXC,'DO'))
   ?};
   {? _lp=2 | _tryb='gwo'
   || _TMP.win_fld(_ws[_lp],,'OPIS',,,60,,,,,'Status operacji'@)
   ?};
:: ---------- AKCJE ----------
   {? _lp=1
   || {? _tryb='gws'
      || _TMP.win_act(_ws[_lp],0,'Formuła','Popraw'@@,,'Poprawienie bieżącego zapisu'@,
            "params_exec('tmp_popraw_b','!ppl_grp_asok')",
            "",
            1,1,
            "params_exec('tmp_popraw_bg','!ppl_grp_asok')",
            ""
         );
         _TMP.win_btn(_ws[_lp],'text='+'Popraw'@+',panel=right,align=begin','menu:P')
      ?};

      _TMP.win_act(_ws[_lp],0,'Formuła','P&omiń'@@,,'Pomiń osobę w przetwarzaniu'@,
         "  _TMP:=cur_tab(1,1);
            _TMP.WYKONAJ:=0;
            _TMP.put()
         ",,_tryb='imp',1,,,'O');
      _TMP.win_act(_ws[_lp],0,'Formuła','U&względnij'@@,,'Uwzględnij osobę w przetwarzaniu'@,
         "  _TMP:=cur_tab(1,1);
            _TMP.WYKONAJ:=1;
            _TMP.put()
         ",,,1,,,'W');
      _TMP.win_act(_ws[_lp],0,'Formuła','Odwróć &zaznaczenie'@@,,,
         "  _TMP:=cur_tab(1,1);
            _ref:=_TMP.ref();
            _TMP.for_each($'_TMP:=cur_tab(1,1); _TMP.WYKONAJ:=~_TMP.WYKONAJ; _TMP.put()');
            _TMP.seek(_ref)
         ",,,,,,'Z',,'target=window');
      _TMP.win_act(_ws[_lp],1,'Formuła','Dalej'@@,,'',"sel_exit()",,,,,,'D',,'target=window');
      _TMP.win_act(_ws[_lp],0,'Formuła','Dalej'@@,,'',"sel_exit()",,,,,,'D',,'target=window');
      _TMP.win_btn(_ws[_lp],'text='+'Dalej'@+',icon=xwin16.png:22,panel=bottom,align=end','menu:D')
   ?};
   _TMP.win_act(_ws[_lp],0,'Szukaj');
   _TMP.win_act(_ws[_lp],0,'Kolejność')
!};

_grp:=_TMP.grp_make('Pracownicy'@,,'prem_okg',,,
   "  {? _a='sel_exit'
      || FUN.ask('Informacje zostaną wprowadzone do bazy danych.\nCzy kontynuować?'@)
      || FUN.ask('Na pewno rezygnujesz z dalszego przetwarzania?'@)
      ?}
   ",,'html_maximized');
_TMP.grp_sel(_grp,,_ws[1],,
   " _TMP:=cur_tab(1,1);
      _we:=_TMP.win_edit('?');
      exec('tmp_efld_opt','!ppl_grp_asok','*',_TMP,_we)
   ",,,,,,,,'maximized','prem_oks2');

_TMP.win_sel(_grp);

_we:=obj_new(2);
{! _lp:=1 .. 2
:: _lp=1 -> okno redagowania
:: _lp=2 -> okno wyszukiwania
|! _we[_lp]:=_TMP.mk_edit('Pracownik'@,,'prem_oke'+$_lp,,,'html_maximized');
   _TMP.win_esep(_we[_lp],'Pracownik'@);
   _TMP.win_efld(_we[_lp],,'NAZWISKO',,,30,,1,,,MS.comment(OSOBA,'NAZWISKO'));
   _TMP.win_efld(_we[_lp],,'PIERWSZE',,,30,,1,,,MS.comment(OSOBA,'PIERWSZE'));
   _TMP.win_efld(_we[_lp],,'ID',,,'30,20',,1,,,'Identyfikator'@);
   _TMP.win_esep(_we[_lp],'Składnik okresowy'@);
   _TMP.win_efld(_we[_lp],,'R_RN',,,27,,_tryb<>'gws',,,MS.comment(PAR_POKR,'R_RN'),,'F3_button=1');
   _TMP.win_efld(_we[_lp],,'R_RT',,,30,,1,,,MS.comment(PAR_POKR,'R_RT'));
   {? _lp=1
   || _TMP.win_efld(_we[_lp],,'RP',,,,,1,,,MS.comment(PAR_POKR,'RP'),'radio-buttons',,
         'Miesięczny'@,"'M'",
         'Kwartalny'@,"'K'",
         'Półroczny'@,"'P'",
         'Roczny'@,"'R'",
         'Inny'@,"'I'"
      )
   |? _lp=2
   || _TMP.win_efld(_we[_lp],,'RP',,,,,1,,,MS.comment(PAR_POKR,'RP'),'radio-buttons',,
         'Miesięczny'@,"'M'",
         'Kwartalny'@,"'K'",
         'Półroczny'@,"'P'",
         'Roczny'@,"'R'",
         'Inny'@,"'I'",
         'Dowolny'@,"''"
      )
   ?};
   _TMP.win_efld(_we[_lp],,'RZ',,,,,1,,,MS.comment(PAR_POKR,'RZ'),'check-box',,"'T'","'N'","''");
   _TMP.win_efld(_we[_lp],,'WZ_OD',,,,,1,,,MS.comment(PAR_POKR,'WZ_OD'));
   _TMP.win_efld(_we[_lp],,'WZ_DO',,,,,1,,,MS.comment(PAR_POKR,'WZ_DO'));
   {? _tryb='imp' | _tryb='gws'
   || _TMP.win_esep(_we[_lp],'Wartość składnika'@);
      _TMP.win_efld(_we[_lp],,'DP',,,,,,,,MS.comment(PREM_OKR,'DP'));
      _TMP.win_efld(_we[_lp],AH,'H',,,,,1);
      _TMP.win_efld(_we[_lp],,'O_OD',,,,,,,,MS.comment(PREM_OKR,'O_OD'));
      _TMP.win_efld(_we[_lp],,'O_DO',,,,,,,,MS.comment(PREM_OKR,'O_DO'));
      _TMP.win_efld(_we[_lp],AH,'H',,,,,1);
      _TMP.win_efld(_we[_lp],,'KW_I',,,30,2,,,,MS.comment(PREM_OKR,'KW_I'));
      _TMP.win_efld(_we[_lp],,'KW_N',,,30,2,,,,MS.comment(PREM_OKR,'KW_N'));
      _TMP.win_efld(_we[_lp],,'KW_W',,,30,2,,,,MS.comment(PREM_OKR,'KW_W'));
      {? _lp=1
      || _TMP.win_efld(_we[_lp],,'B_WYP',,,,,,,,MS.comment(PREM_OKR,'B_WYP'),'check-box',,"'T'","'N'")
      |? _lp=2
      || _TMP.win_efld(_we[_lp],,'B_WYP',,,,,,,,MS.comment(PREM_OKR,'B_WYP'),'check-box',,"'T'","'N'","''")
      ?};
      {? _tryb='gws'
      || _TMP.win_efld(_we[_lp],AH,'H',,,,,1);
         _TMP.win_efld(_we[_lp],,'LT',,,10,,,,,MS.comment(PREM_OKR,'B_WYP'),,'F3_button=1')
      ?}
   |? _tryb='gwo'
   || _TMP.win_esep(_we[_lp],'Okres obowiązywania'@);
      _TMP.win_efld(_we[_lp],,'OD',,,,,,,,MS.comment(PREM_EXC,'OD'));
      _TMP.win_efld(_we[_lp],,'DO',,,,,,,,MS.comment(PREM_EXC,'DO'))
   ?};
   {? _lp=1
   || exec('ok_esc','#window',_TMP,_we[_lp]);
      _TMP.win_edit(_we[_lp])
   |? _lp=2
   || _TMP.win_patt(_we[_lp])
   ?}
!};

_TMP.efld_opt(_we[1],'mark=1',,'R_RN');
{? _tryb='imp' | _tryb='gws'
|| _TMP.efld_opt(_we[1],'mark=1',,'O_OD');
   _TMP.efld_opt(_we[1],'mark=1',,'O_DO')
?};

_cfg:=obj_new('TMP','ws1','ws2','we1','we2');
_cfg.TMP:=_TMP;
_cfg.ws1:=_ws[1];
_cfg.ws2:=_ws[2];
_cfg.we1:=_we[1];
_cfg.we2:=_we[2];
_cfg


\get_par_pokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Wybór składnika okresowego. Argumenty wywołania są związane z indeksem PAR_POKR. Jeżeli zostaną podane to
::       bieżącym wierszem w oknie będzie wiersz określony właśnie tymi parametrami. Oznacza to, że ich występowanie
::       musi być "narastające": można podać tylko _a, lub _a, _b lub _a, _b, _c. Podawanie _b bez _a nie ma sensu,
::       podobnie _c bez _b.
::   WE: [_a] [INTEGER] - Kod składnika.
::       [_b] [STRING]  - Rozliczaj w zasiłkach [T/N].
::       [_c] [DATE]    - Od dnia.
::   WY: Tablica nazwana z wybranym składnikiem.
::  OLD: \selprok/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=obj_new('REF','R_RN','R_RT','RP','RZ','KZ','WZ_OD','WZ_DO','CZY_FM','R_N');

PAR_POKR.cntx_psh();
PAR_POKR.index('PAR_POKR');
PAR_POKR.prefix(exec('ref_firma','ustawienia'));
PAR_POKR.win_sel('WYB');
PAR_POKR.win_edit('RED');
_rn:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_rz:={? var_pres('_b')=type_of('') & (_b='T' | _b='N') || _b || 'N' ?};
_d0:=date(0,0,0);
_wz_od:={? var_pres('_c')=type_of(_d0) || _c || _d0 ?};
PAR_POKR.find_ge(_rn,_rz,_wz_od);
{? PAR_POKR.select(,1,-1)
|| _ret.REF:=$PAR_POKR.ref();
   _ret.R_RN:=PAR_POKR.R_RN;
   _ret.R_RT:=PAR_POKR.R_RT;
   _ret.RP:=PAR_POKR.RP;
   _ret.RZ:=PAR_POKR.RZ;
   _ret.KZ:=PAR_POKR.KZ;
   _ret.WZ_OD:=PAR_POKR.WZ_OD;
   _ret.WZ_DO:=PAR_POKR.WZ_DO;
   _ret.CZY_FM:=PAR_POKR.CZY_FM;
   _ret.R_N:=$PAR_POKR.R_N
|| {! _lp:=1 .. obj_len(_ret)
   |! _ret[_lp]:=''
   !}
?};
PAR_POKR.cntx_pop();

_ret


\get_par_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła odpowiedzialna za pobranie od użytkownika parametrów importu.
::   WE:
::   WY: Uchwyt tabeli tymczasowej zawierającej parametry importu.
:: ~OST: INFILECHOOSER, INFEXISTS
::  OLD: \wybp_imp/skl_okr.fml
::----------------------------------------------------------------------------------------------------------------------
_inTerm:=exec('interm','#system');
:: przekazuję informację o lokalnym katalogu na serwerze dla inTerm
{? _inTerm
|| {? var_press('_a')=type_of('') & _a<>''
   || _pth:=_a
   || return(0)
   ?}
?};

_PAR:=tab_tmp(1,
   'OK','INTEGER','Ogólny status',

   'PLIK','STRING[255]','Ścieżka dostępu',
   'TP','INTEGER','Nagłówek',
   'TID','INTEGER','Typ identyfikatora',

   'R_RN','INTEGER',MS.name(PAR_POKR,'R_RN'),
   'R_RT','STRING['+$MS.fld_len(R,'RT')+']',MS.name(PAR_POKR,'R_RT'),
   'RP','STRING[1]',MS.name(PAR_POKR,'RP'),
   'RZ','STRING[1]',MS.name(PAR_POKR,'RZ'),
   'KZ','STRING[1]',MS.name(PAR_POKR,'KZ'),
   'WZ_OD','DATE',MS.name(PAR_POKR,'WZ_OD'),
   'WZ_DO','DATE',MS.name(PAR_POKR,'WZ_DO'),
   'CZY_FM','STRING[1]',MS.name(PAR_POKR,'CZY_FM'),
   'R_N','STRING[16]','$PAR_POKR.R_N',
   'SKP','STRING[16]','$PAR_POKR.ref()',
   'PTH','STRING[255]','Ścieżka dostępu do katalogu tymczasowego (inTerm)'
);
{? _inTerm
|| _PAR.PTH:=_pth;
   _PAR.fld_fml('PLIK','F3',
      "dlg_upload(cur_tab(1,1).PTH,0)
      ");
   _PAR.fld_fml('PLIK','AFTER_EDIT',
      "  _fld:=fld();
         {? _fld='' | fexists(cur_tab(1,1).PTH+exec('sep','#file',2)+_fld,0)=1
         || 1
         || FUN.info('Brak takiego pliku lub jest niedostępny.\n\n*** Niepoprawna wartość. ***'@);
            0
         ?}
      ")
|| _PAR.fld_fml('PLIK','F3',
      "  ctr_set('!application','filechooser','reset');
         ctr_set('!application','filechooser','setCurrentDirectory',fld());
         {? ctr_call('!application','filechooser','showOpenDialog')
         || ctr_call('!application','filechooser','getSelectedFile')
         ?}
      ");
   _PAR.fld_fml('PLIK','AFTER_EDIT',
      "  _fld:=fld();
         {? _fld='' | fexists('@'+_fld,0)=1
         || 1
         || FUN.info('Brak takiego pliku lub jest niedostępny.\n\n*** Niepoprawna wartość. ***'@);
            0
         ?}
      ")
?};
_PAR.fld_fml('R_RN','F3',"exec('tmp_r_rn_f3','!ppl_grp_asok')");
_PAR.fld_fml('R_RN','AFTER_EDIT',"exec('tmp_r_rn_ae','!ppl_grp_asok')");

_we:=_PAR.mk_edit('Parametry importu składnika okresowego'@,,'skl_okr_par_imp',,,'html_maximized');
_PAR.win_esep(_we,'Plik źródłowy'@);
_PAR.win_efld(_we,,'PLIK',,,40,,,,,'Pełna ścieżka dostępu do pliku'@,,'F3_button=1');
_PAR.win_efld(_we,,'TP',,,,,,,,'Czy importowany plik zawiera wiersz z nagłówkiem?'@,'check-box',
   'check_label="'+'Tak, plik zawiera wiersz z nagłówkiem'@+'"',"1","0"
);
_PAR.win_efld(_we,,'TID',,,,,,,,'Zastosowany w pliku typ identyfikatora pracownika'@,'radio-buttons',,
   'Identyfikator pracownika'@,"1",
   'PESEL'@,"2",
   'Nr teczki'@,"3"
);
_PAR.win_esep(_we,'Składnik okresowy'@);
_PAR.win_efld(_we,,'R_RN',,,17,,,,,MS.comment(PAR_POKR,'R_RN'),,'F3_button=1');
_PAR.win_efld(_we,,'R_RT',,,20,,1,,,MS.comment(PAR_POKR,'R_RT'));
_PAR.win_efld(_we,,'RP',,,,,1,,,MS.comment(PAR_POKR,'RP'),'radio-buttons',,
   'Miesięczny'@,"'M'",
   'Kwartalny'@,"'K'",
   'Półroczny'@,"'P'",
   'Roczny'@,"'R'",
   'Inny'@,"'I'"
);
_PAR.win_efld(_we,,'RZ',,,,,1,,,MS.comment(PAR_POKR,'RZ'),'check-box',,"'T'","'N'","''");
_PAR.win_efld(_we,,'WZ_OD',,,,,1,,,MS.comment(PAR_POKR,'WZ_OD'));
_PAR.win_efld(_we,,'WZ_DO',,,,,1,,,MS.comment(PAR_POKR,'WZ_DO'));
exec('ok_esc','#window',_PAR,_we);
_PAR.win_edit(_we);

_PAR.efld_opt(_we,'mark=1',,'PLIK');
_PAR.efld_opt(_we,'mark=1',,'R_RN');
exec('tmp_efld_opt','!ppl_grp_asok','*',_PAR,_we);
_PAR.OK:=_PAR.edit("__CHK.record(cur_tab(1,1),,'PLIK','R_RN')");

_PAR


\zapisz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła zapisuje dane pochodzące z importu lub grupowego wprowadzania składników okresowych do tabeli PREM_OKR.
::   WE: _a [STRING] - Tryb pracy:
::                      'gws' - Grupowe wprowadzanie danych.
::                      'imp' - Import z pliku tekstowego.
::       _b [ARRAY]  - Tablica z elementami nazwanymi przechowująca uchwyty do tabeli tymczasowej i jej okien
::                     (patrz \get_tmp).
::       _c [STRING] - Nazwa pliku, w którym umieszczony będzie raport z przetwarzania.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & (_a='gws' | _a='imp')
|| _tryb:=_a
|| return()
?};

_cfg:=_b;
_fn:=_c;
_inTerm:=exec('interm','#system');

_fh:=fopen({? _tryb='imp' & ~_inTerm || '@' || '' ?}+_fn,'uw',0,1,1);
{? ~_fh.is_open()
|| return('Brak możliwości zapisu do pliku [%1]'@ [_fn])
?};
_TMP:=_cfg.TMP;
_d0:=date(0,0,0);

P.cntx_psh();
P.prefix();
PAR_POKR.cntx_psh();
PAR_POKR.prefix();
PREM_OKR.cntx_psh();
PREM_OKR.clear();

echo('Proszę czekać ...'@);
{!
|? {? ~_TMP.WYKONAJ
   || _txt:='Pominięto w przetwarzaniu'@
   |? ~P.seek(_TMP.PREF)
   || _txt:='Nie znaleziono pracownika'@
   |? ~PAR_POKR.seek(_TMP.SKP)
   || _txt:='Nie znaleziono składnika okresowego'@

   || PREM_OKR.blank();
      PREM_OKR.SKP:=PAR_POKR.ref();
      PREM_OKR.RP:=PAR_POKR.RP;
      PREM_OKR.DP:=_TMP.DP;
      PREM_OKR.O_OD:=_TMP.O_OD;
      PREM_OKR.O_DO:=_TMP.O_DO;
      PREM_OKR.KW_N:=_TMP.KW_N;
      PREM_OKR.KW_W:=_TMP.KW_W;
      PREM_OKR.KW_I:=_TMP.KW_I;
      PREM_OKR.B_WYP:=_TMP.B_WYP;
      PREM_OKR.LT:=_TMP.LT;
      {? (_txt:=exec('prem_okr_ae','skladniki_okresowe',1))=''
      || {? PREM_OKR.add(1)
         || _TMP.WYKONAJ+=1;
            _txt:='Wiersz przetworzony poprawnie'@
         || _txt:='Błąd zapisu do bazy danych'@
         ?}
      ?}
   ?};
   _TMP.OPIS:=_txt;
   _TMP.put();
   {? _tryb='imp'
   || _fh.fwrite(form(_TMP.NRL,,0,'9.')+'|'+_TMP.memo_txt(0,1,'LINIA')+'|'+_txt+'|')
   |? _tryb='gws'
   ||  _fh.fwrite(
         _TMP.NAZWISKO+' '+_TMP.PIERWSZE+'|'+_TMP.ID+'|'+
         $_TMP.R_RN+'|'+_TMP.R_RT+'|'+_TMP.RZ+'|'+_TMP.WZ_OD$1+'|'+
         _TMP.DP$1+'|'+_TMP.O_OD$1+'|'+_TMP.O_DO$1+'|'+
         form(_TMP.KW_N,,2,'9.')+'|'+form(_TMP.KW_W,,2,'9.')+'|'+form(_TMP.KW_I,,2,'9.')+'|'+
         _TMP.B_WYP+'|'+_TMP.LT+'|'+_txt+'|'
       )
   ?};
   _TMP.next()
!};
echo();

PREM_OKR.cntx_pop();
PAR_POKR.cntx_pop();
P.cntx_pop();

_fh.fclose();

_TMP.win_sel(_cfg.ws2);
_TMP.select();
{? _inTerm
|| dlg_save(_fn)
|| FUN.info('Raport z przetwarzania zapisano w pliku:\n%1'@ [_fn])
?};

''


\tmp_ae_okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Rekord - po"  dla tabeli tymczasowej obsługującej grupowe wprowadzanie okresu obowiązywania
::       składnika okresowego.
::
::       Uwaga. Treść bieżącej formuły musi być zgodna z treścią odpowiedniej formuły weryfikującej ręczne wprowadzanie
::              okresu obowiązywania składnika okresowego.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_PAR:=cur_tab(1,1);

{? (_chk:=__CHK.record(_PAR,,'R_RN','OD'))<>''
|| return(_chk)
?};


_d0:=date(0,0,0);

_eod:=MS.name(PREM_EXC,'OD');
_edo:=MS.name(PREM_EXC,'DO');

{? _PAR.DO<>_d0 & _PAR.DO<_PAR.OD
|| FUN.info('"%1" nie może być wcześniejsza niż "%2".'@ [_edo,_eod]);
   return('DO')
?};

_pod:=MS.name(PAR_POKR,'WZ_OD');
_pdo:=MS.name(PAR_POKR,'WZ_DO');

_ok:=1;
_od:=_PAR.OD;
_do:=_PAR.DO;

{? _PAR.WZ_OD<>_d0
|| {? _od<_PAR.WZ_OD
   || FUN.emsg('"%1" nie może być wcześniejsza niż "%2" (%3) wliczania do zasiłków w parametrach globalnych.'@
         [_eod,_pod,_PAR.WZ_OD$1]);
      return('OD')
   |? _do<>_d0 & _do<_PAR.WZ_OD
   || FUN.emsg('"%1" nie może być wcześniejsza niż "%2" (%3) wliczania do zasiłków w parametrach globalnych.'@
         [_edo,_pod,_PAR.WZ_OD$1]);
      return('DO')
   ?}
?};

{? _PAR.WZ_DO<>_d0
|| {? _PAR.WZ_DO<_od
   || FUN.emsg('"%1" nie może być późniejsza niż "%2" (%3) wliczania do zasiłków w parametrach globalnych.'@
         [_eod,_pdo,_PAR.WZ_DO$1]);
      return('OD')
   |? _do<>_d0 & _PAR.WZ_DO<_do
   || FUN.emsg('"%1" nie może być późniejsza niż "%2" (%3) wliczania do zasiłków w parametrach globalnych.'@
         [_edo,_pod,_PAR.WZ_DO$1]);
      return('DO')
   ?}
?};

''


\get_par_exc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Pobranie parametrów grupowego wprowadzenia okresu obowiązywania wybranego składnika.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_PAR:=tab_tmp(1,
   'OK','INTEGER','Ogólny status'@,

   'R_RN','INTEGER',MS.name(PAR_POKR,'R_RN'),
   'R_RT','STRING['+$MS.fld_len(R,'RT')+']',MS.name(PAR_POKR,'R_RT'),
   'RP','STRING[1]',MS.name(PAR_POKR,'RP'),
   'RZ','STRING[1]',MS.name(PAR_POKR,'RZ'),
   'KZ','STRING[1]',MS.name(PAR_POKR,'KZ'),
   'WZ_OD','DATE',MS.name(PAR_POKR,'WZ_OD'),
   'WZ_DO','DATE',MS.name(PAR_POKR,'WZ_DO'),
   'CZY_FM','STRING[1]',MS.name(PAR_POKR,'CZY_FM'),
   'R_N','STRING[16]','$PAR_POKR.R_N',
   'SKP','STRING[16]','$PAR_POKR.ref()',

   'OD','DATE',MS.name(PREM_EXC,'OD'),
   'DO','DATE',MS.name(PREM_EXC,'DO')
);

_PAR.fld_fml('R_RN','F3',"exec('tmp_r_rn_f3','!ppl_grp_asok')");
_PAR.fld_fml('R_RN','AFTER_EDIT',"exec('tmp_r_rn_ae','!ppl_grp_asok')");

_we:=_PAR.mk_edit('Parametry wprowadzania okresu obowiązywania'@,,'skl_okr_par_imp');
_PAR.win_esep(_we,'Składnik okresowy'@);
_PAR.win_efld(_we,,'R_RN',,,17,,,,,MS.comment(PAR_POKR,'R_RN'),,'F3_button=1');
_PAR.win_efld(_we,,'R_RT',,,20,,1,,,MS.comment(PAR_POKR,'R_RT'));
_PAR.win_efld(_we,,'RP',,,,,1,,,MS.comment(PAR_POKR,'RP'),'radio-buttons',,
   'Miesięczny'@,"'M'",
   'Kwartalny'@,"'K'",
   'Półroczny'@,"'P'",
   'Roczny'@,"'R'",
   'Inny'@,"'I'"
);
_PAR.win_efld(_we,,'RZ',,,,,1,,,MS.comment(PAR_POKR,'RZ'),'check-box',,"'T'","'N'","''");
_PAR.win_efld(_we,,'WZ_OD',,,,,1,,,MS.comment(PAR_POKR,'WZ_OD'));
_PAR.win_efld(_we,,'WZ_DO',,,,,1,,,MS.comment(PAR_POKR,'WZ_DO'));
_PAR.win_esep(_we,'Okres obowiązywania'@);
_PAR.win_efld(_we,,'OD',,,,,,,,MS.comment(PREM_EXC,'OD'));
_PAR.win_efld(_we,,'DO',,,,,,,,MS.comment(PREM_EXC,'DO'));
exec('ok_esc','#window',_PAR,_we);
_PAR.win_edit(_we);

_PAR.efld_opt(_we,'mark=1',,'R_RN');
_PAR.efld_opt(_we,'mark=1',,'OD');
exec('tmp_efld_opt','!ppl_grp_asok','*',_PAR,_we);
_PAR.OK:=_PAR.edit("exec('tmp_ae_okres','!ppl_grp_asok')");

_PAR

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:37 e52c3ccda6fff01540befd6abedf49dd28826bfae6ed3b78281b3ca975c1a5aba66298064b911a1dfa666a60aa0df5fd9b527ef333897af4bc666195d050afc1cc39734e374b0692f234b9108e0a23b98d8c40157ea9c309f13eefa5b06908eeb4b41e9b0b9aac5ce7255ee08fb3572191804c02f943e2286831577e0db40f95
