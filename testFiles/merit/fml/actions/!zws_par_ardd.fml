:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_ardd.fml
:: Utworzony: 20.04.2017
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności ZWS_PAR_ARDD - RODO: Definicje.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: RODO: Definicje - główna formuła czynności.
::----------------------------------------------------------------------------------------------------------------------
RO_REQC.index('CODE'); RO_REQC.prefix();
RO_REQI.index('NAME'); RO_REQI.prefix();
RO_REQT.index('KEY'); RO_REQT.prefix();
_tab:=RO_REQC;
_grp:=_tab.grp_make('Defincje',,'ro_req_def');
_tab.grp_sel(_grp,,'WER','Cele przetwarzania'@,,,,,,,,,'maximized_with_title');
_tab.grp_sel(_grp,RO_REQI,'WER','Identyfikatory danych'@,,,,,,,,,'maximized_with_title');
_tab.grp_sel(_grp,RO_REQT,'WER','Typy żądań'@,,,,,,,,,'maximized_with_title');
_tab.win_sel(_grp);
_tab.select()


\ro_reqi_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Pobranie identyfikatorów z RODO Utility
::  OLD: \ro_reqi_imp/ro_ws.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('is_fun_rodo','ro_ws')=0 | exec('is_ws_config','ro_ws')=0 |
   FUN.ask('Czy zaimportować typy identyfikatorów z RODO Utility?'@)=0
|| return()
?};
_tmpdir:= fmk_tmp_dir(0);
{? type_of(_tmpdir) <> type_of(~~)
|| _fdir:=_tmpdir.get_path
|| FUN.emsg('Nie powiodło się utworzenie katalogu tymczasowego na serwerze'@);
   return()
?};
_pyt:= exec('koperta','ro_ws',
   '<ass:GetPersonalIdentifiers>'+
   '<ass:PersonalIdentifiersParams>'+
   '<ass:SystemIdentifier>'+XINFO.AIP_SYS+'</ass:SystemIdentifier>'+
   '</ass:PersonalIdentifiersParams>'+
   '</ass:GetPersonalIdentifiers>
'
);
_fnout:=_fdir+'/wsres.xml';
_fout:=fopen(_fnout,'b',0,,1);
_res:=exec('send','ro_ws',_pyt,_fout);
{? _fout.is_open()
|| _fout.fclose()
?};
{? _res<>200
|| FUN.info('Nie udało się zaimportować typów identyfikatorów.\nSerwis zwrócił status: %1.'@[$_res]);
   return()
?};
_file:=fopen(_fnout,'ur',0,,1);
{? _file.is_open()
|| VAR_DEL.delete('__obj');
   __obj:=obj_new(4);
   __obj[1]:=0;
   __obj[2]:='';
   RO_REQI.cntx_psh();
   x_parse(_file,,,"
      {? __obj[1]=0
      || {? _a='GetPersonalIdentifiersResponse'
         || __obj[1]:=1
         ?}
      |? __obj[1]=1
      || {? _a='PersonalIdentifier'
         || __obj[1]:=2
         ?}
      |? __obj[1]=2
      || __obj[2]:=''
      ?};
      1
   ","
      {? __obj[1]=2
      || {? _a='FieldName'
         || __obj[3]:=__obj[2]
         |? _a='FieldDesc'
         || __obj[4]:=__obj[2]
         |? _a='PersonalIdentifier'
         || exec('ident_add','ro_req',__obj[3],__obj[4]);
            __obj[1]:=1
         ?}
      ?};
      1
   ","
      {? __obj[1]=2
      || __obj[2]+=_a
      ?};
      1
   "
   );
   _file.fclose();
   RO_REQI.cntx_pop();
   VAR_DEL.delete('__obj')
?}


\ro_reqt_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Importuje typy żądań z RODO Utility
::  OLD: \ro_reqt_imp/ro_ws.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('is_fun_rodo','ro_ws')=0 | exec('is_ws_config','ro_ws')=0 |
   FUN.ask('Czy zaimportować typy żądań z RODO Utility?'@)=0
|| return()
?};
_tmpdir:= fmk_tmp_dir(0);
{? type_of(_tmpdir) <> type_of(~~)
|| _fdir:=_tmpdir.get_path
|| FUN.emsg('Nie powiodło się utworzenie katalogu tymczasowego na serwerze'@);
   return()
?};
_pyt:= exec('koperta','ro_ws',
   '<ass:GetRequestTypes>'+
   '<ass:RequestTypesParams>'+
   '<ass:SystemIdentifier>'+XINFO.AIP_SYS+'</ass:SystemIdentifier>'+
   '</ass:RequestTypesParams>'+
   '</ass:GetRequestTypes>'
);
_fnout:=_fdir+'/wsres.xml';
_fout:=fopen(_fnout,'bw',0,,1);
_res:=exec('send','ro_ws',_pyt,_fout);
{? _fout.is_open()
|| _fout.fclose()
?};
{? _res<>200
|| FUN.info('Nie udało się zaimportować typów zapytań.\nSerwis zwrócił status: %1.'@[$_res]);
   return()
?};
_file:=fopen(_fnout,'ur',0,,1);
{? _file.is_open()
|| VAR_DEL.delete('__obj');
   __obj:=obj_new(4);
   __obj[1]:=0;
   __obj[2]:='';
   RO_REQT.cntx_psh();
   x_parse(_file,,,"
      {? __obj[1]=0
      || {? _a='GetRequestTypesResponse'
         || __obj[1]:=1
         ?}
      |? __obj[1]=1
      || {? _a='RequestType'
         || __obj[1]:=2
         ?}
      |? __obj[1]=2
      || __obj[2]:=''
      ?};
      1
   ","
      {? __obj[1]=2
      || {? _a='TypeName'
         || __obj[3]:=__obj[2]
         |? _a='TypeDesc'
         || __obj[4]:=__obj[2]
         |? _a='RequestType'
         || _support:={? exec('suport','ro_req',__obj[3]) || 'T' || 'N' ?};
            exec('type_add','ro_req',__obj[3],__obj[4],_support);
            __obj[1]:=1
         ?}
      ?};
      1
   ","
      {? __obj[1]=2
      || __obj[2]+=_a
      ?};
      1
   "
   );
   _file.fclose();
   RO_REQT.cntx_pop();
   VAR_DEL.delete('__obj')
?}

:Sign Version 2.0 jowisz:1045 2022/06/30 14:22:55 1643b96da09c5c9713391b0ee106e4ed9b30a136b90b16bbc8b39bdeb8424462ec368e045007adcdfb9da4d8cf2a18bb8e86c40672fabc972d442120534a9e6a35fdd83056608ad0a43c7bc24f5984b23a32c8f87ae007e6a3dd28c0b3ea7e00d3d86eccebd9aae7260458dce5b35212657663fd1325c54465de1d9f73560f98
