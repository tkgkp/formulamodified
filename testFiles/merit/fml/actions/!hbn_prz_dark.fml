:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !hbn_prz_dark.fml
:: Utworzony: 17.02.2015
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności HBN_PRZ_DARK - Rejestracja przelewu ręcznego.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Rejestracja przelewu ręcznego - główna formuła czynności HBN_PRZ_DARK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# kind=WE,   symbol=TYP,   type=STRING,   name=Typ przelewu,  required=N
::# kind=WY,   symbol=PB,   type=_PB,   name=Wskazanie na przelew elektroniczny,  required=T
::# kind=WY,   symbol=KW,   type=NUMBER,   name=Kwota przelewu,  required=N
::# kind=WY,   symbol=WAL,  type=STRING,   name=Waluta przelewu,  required=N
::# permissions=FJKS,HRB,HRP
::# access=exec('uprawnienia','!hbn_prz_dark')
_par:=params_get();
_typ:=_par.in.TYP;
_akc:=_par.mp.akcja();
{? _akc='Dołącz' | _akc=''
|| menu_txt(,'Dołącz'@);
   _prosty:=exec('usr_hrp','b_perm','HBN: Prosty');
   _us:=exec('usr_hrp','b_perm','HBN: US');
   _zus:=exec('usr_hrp','b_perm','HBN: ZUS');
   {? _prosty | _us | _zus
   || {? _typ=~~
      || _fun:='FUN.choice(\'Jaki przelew wykonać?\',';
         {? _prosty || _fun+=',\'Krajowy\',\'Walutowy\'' ?};
         {? _us || _fun+=',\'Do &Urzędu Skarbowego/Celnego\'' ?};
         {? _zus || _fun+=',\'Do &ZUS\'' ?};
         _fun+=')';
         _pyt:=($_fun)();
         {? _pyt=1
         || _typ:={? _prosty || 'K' |? _us || 'U' || 'Z' ?}
         |? _pyt=2
         || _typ:={? _prosty || 'W' || 'Z' ?}
         |? _pyt=3
         || _typ:={? _us || 'U' || 'Z' ?}
         |? _pyt=4
         || _typ:='Z'
         ?}
      ?};
      {? (_typ='K' | _typ='W') & ~_prosty
      || FUN.info('Brak uprawnień do typów przelewów jednorazowych.'@);
         _typ:=~~
      |? _typ='U' & ~_us
      || FUN.info('Brak uprawnień do typów przelewów do US.'@);
         _typ:=~~
      |? _typ='Z' & ~_zus
      || FUN.info('Brak uprawnień do typów przelewów do ZUS.'@);
         _typ:=~~
      ?};
      {? _typ=~~
      || _par.mp.cancel();
         return
      ?};
      _par.in.TYP:=_typ;
      params_set('in',_par.in);
      _ok:=0;
      {? _typ='K' | _typ='W'
      || _ok:=params_exec('add','!hbn_prz_dark',1,_typ)
      |? _typ='U' | _typ='Z'
      || _ok:=params_exec('add_us_zus','!hbn_prz_dark',_typ)
      ?};
      {? _ok
      || _par.out.PB:=PB.ref();
         _par.out.KW:=PB.KW;
         _par.out.WAL:={? PB.WAL().KOD<>'PLN' || PB.WAL().KOD || '' ?};
         _par.mp.keyRef(PB.uidref());
         _par.mp.save(,_par.out);
         _par.mp.done()
      || _par.mp.cancel()
      ?}
   || FUN.info(
         'Brak uprawnień do typów przelewów:\n'
         'jednorazowych, US i ZUS.'@
      );
      _par.mp.cancel()
   ?}
?};
~~


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.51]
:: OPIS: Ustawia odpowiednie okienko i dalacza rekord.
::   WE: _a - operacja: 1-dodawanie 0-poprawianie
::       _b - typ przelewu
::  OLD: \m_adpb/proc01.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
exec('decl','!hbn_prz_dark');
VAR_EDIT.KW:=0;
ROZNE.KKBAN:=1; ROZNE.AKRRB:='PB.RW';
exec('setrb','!hbn_prz_dark');
PB.fld_fml('SP_V','BEFORE_DISPLAY',"{? VAR_EDIT.KW || Color.fnd_kol('OPTMP#03#02') || ''?}");
:PB.fld_fml('SP_V','BEFORE_DISPLAY',"{? VAR_EDIT.KW || Color.fnd_kol('OPTMP#03#03') || ''?}");
ODD.win_dict('SLO');
::RB.getrrban(TAB_SPEC.RB,REF.INFO,0,0,1);
{? _a
|| PB.use('pbxxxx'); PB_OP.use('popxxxx'); PBHIST.use('phxxxx');
   PB.prefix();
   PB.blank();
   exec('init','!hbn_prz_dark');
   {? _b='K'
   || exec('okno_pb','homebank','PB_EDI1')
   |? _b='W'
   || exec('okno_pb','homebank','PB_EDIW'); B.win_edit('B_EDI2')
   ?};
   PB.RODZ:={? _b='US' || 'KU' |? __PBWINE+1='W' || 'W' || 'K' ?};
   {? __PBWINE<>'PB_EDIW'
   || PB.WAL:=HINFO.NAROD
   ?};
   {? OPERATOR.DEPT || PB.ODD:=OPERATOR.DEPT ?};
   PB.STR:=PAR_SKID.get(69);
   {? __PBWINE='PB_EDI1' || PB.KRAJ_BAN:=XINFO.KRAJ ?};
   RACHBANK.KB_1R:='';
   RACHBANK.RB_US_PB:='';
   RACHBANK.RB_KH_PB:='';
   RACHBANK.RB_LB_PB:=''
|| exec('set_okpb','homebank');
   RACHBANK.KB_1R:=PB.RD;
   RACHBANK.RB_US_PB:=PB.RW;
   RACHBANK.RB_KH_PB:=PB.RW
?};
exec('odd_filtr','fst');
{? PB.edit("exec('ar_pb','!hbn_prz_dark')")
|| {? PB.SP<>'T' || PB.SP_V:=0; PB.KHNIP:=''; PB.NRFAK:='' ?};
   PB.RD:=RB.get_rbel(2,RACHBANK.KB_1R);
   exec('am_pb','!hbn_prz_dark');
   PB.RW:=RB.get_rbel(2,PB.RW); PB.RD:=RB.get_rbel(2,PB.RD);
   _ok:={? _a || PB.add() || PB.put() ?};

   {? _ok
   || _ref:=PB.ref();
      {? _a=0 & exec('be_pbkw','!hbn_prz_dark',1)
      || PB_OP.index('PB'); PB_OP.prefix(PB.ref());
         {? PB_OP.first()
         || PB_OP.K:=PB.KW;
            PB_OP.DP:=PB.DP;
            PB_OP.TYT:=PB.TYT;
            PB_OP.SP_V:={? PB.SP='T' || PB.SP_V ?};
            PB_OP.put()
         ?}
      ?};
      {? _a=0
      || exec('desc_update','#b__box',PB.uidref())
      ?};
      _tab:=cur_tab();
      {? type_of(_tab) & _tab=PB & PB.f_active()
      || PB.f_rfresh();
         {? ~PB.f_seek(_ref)
         || FUN.info('Ze względu na ustawienia filtrowania przelew nie będzie widoczny.'@)
         ?}
      ?};
      PAR_WYDR.RPAR2+=PB.KW;
      PAR_WYDR.RPAR3+=PB.KW
   ?}
?};
B.win_edit('B_EDI');
PB.fld_fml('SP_V','BEFORE_DISPLAY',"*");
_ok


\am_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [7.51]
:: OPIS: Po popraw. Dla przelewu do US wypelnia pole TYT.
::----------------------------------------------------------------------------------------------------------------------
{? PB.USTYPPL<>''
|| PB.TYT:=form(PB.USNIPREG,15)+form(PB.USTYPID,4)+form(PB.USOKRES,7)+form(PB.USTYPPL,6)+PB.USIDZOB
?}


\be_pbkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Przed redagowaniem pola Wierzyciel tabeli PB
::  OLD: \be_pbkh/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();
KH.index('NAZ');
KH.prefix(2);
{? PB.KH<>null
|| PB.KH();
   __BEPBKH:=PB.W+PB.M+PB.UL;
   __F3PBKH:=KH.ref()
|? KH.find_key(PB.W,PB.M,PB.UL)
|| __BEPBKH:=PB.W+PB.M+PB.UL;
   __F3PBKH:=KH.ref()
|| __BEPBKH:=''
?};
KH.cntx_pop();
{? var_pres('v_zakr')>0 & v_zakr
|| {? v_zakr=3 & PB.W='' || 1 || 0 ?}
|| 1
?}


\f3_pbkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.10]
:: OPIS: F3 na kontrahencie
::  OLD: \f3_pbkh/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
{? PB.USTYPPL<>'' & PB.USOKRES<>''
|| US.index('URZSKNAZ'); US.prefix(); {? ~US.find_key(PB.W) || US.first() ?};
   US.win_sel('SELHOME'); {? US.select(,1) || PB.W:=US.NU ?}
|? PB.KD<>'KALI: płace' & PB.KD<>'PPL: Płace'
|| KH.index('NAZ'); KH.prefix(2); {? ~KH.find_key(PB.W,PB.M,PB.UL) & ~KH.find_key(PB.W) || KH.first() ?};
   KH.win_sel('WERHOME');
   KH.actions('WERHOME','F');
   {? -menu_txt*'szukaj' || SKID_RBK.actions('WER_RBO','DuP:D') ?};
   {? KH.select(,1)
   || SKID_RBK.actions('WER_RBO');
      __F3PBKH:=KH.ref();
      __BEPBKH:=KH.NAZ+PB.M+PB.UL;
      _wy:=KH.NAZ
   || SKID_RBK.actions('WER_RBO');
      _wy:=~~
   ?};
   KH.actions('WERHOME');
   _wy
?}


\ae_pbkh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Po redakcji kontrahenta w PB
::  OLD: \ae_pbkh/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
{? PB.RODZ<>'KU' & PB.KD<>'KALI: płace' & PB.KD<>'PPL: Płace'
|| KH.index('NAZ'); KH.prefix(2);
   _is_kh:=var_pres('__F3PBKH')=7 & (var_pres('__BEPBKH')>0 & __BEPBKH=PB.W+PB.M+PB.UL) & KH.seek(__F3PBKH)
           | (PB.W<>'' & KH.find_key(PB.W));
   {? (__PBWINE='EDIT' | __PBWINE='EDIT_W'
      | __PBWINE='PB_EDI1' | __PBWINE='PB_EDIW') & _is_kh
   ||
      exec('khdane','rozrach_przel')      
   |? (__PBWINE='EDIT_R' | __PBWINE='EDIT_ZB') & _is_kh & KH.NAZ=PB.W
   || {? PB.KH=null | PB.KH<>KH.ref()
      || PB.M:=KH.MIASTO;
         PB.UL:=exec('kh_ul','rozrach_przel');
         PB.KP:=KH.KPOCZ;
         {? ~RB.getrrban(PB.RW,'KH',#KH.ref())
         || PB.RW:=RACHBANK.KB_3R:=RB.get_drb(2,'KH',#KH.ref())
         ?};
         PB.KH:=KH.ref();
         PB.NBW:=RB.getrbank(4,RACHBANK.KB_3R,XINFO.KRAJ().KODISO)
      ?}
   || {? PB.KH<>null
      || PB.M:=PB.UL:=PB.KP:=PB.RW:=RACHBANK.RB_KH_PB:=RACHBANK.KB_3R:='';
         PB.NBW:=PB.KH:=null
      ?}
   ?};
   {? PB.KH<>null & PB.RODZ='K'
   || {? exec('czy_kh_sp','homebank',PB.KH)
      || PB.SP:='T';
         exec('set_split_field','homebank');
         {? PB.KHNIP='' || PB.KHNIP:=PB.KH().NIP ?}
      ?}
   ?};
   VAR_DEL.delete('__F3PBKH','__BEPBKH')
|? PB.KD<>'KALI: płace' & PB.KD<>'PPL: Płace'
|| _datPrzel:=PB.DP;
   _v:=0;
   {? PAR_WYDR.TABAKR=''
   || {? PB.RODZ='KU' || PAR_WYDR.TABAKR:='US' ?}
   ?};
   {? _datPrzel>=date(2020,1,1)
   || PB.RW:=RACHBANK.RB_US_PB:=''; PB.NBW:=null;
      {? +PB.USTYPPL
      || SLO.index('SL_TR'); SLO.prefix(XINFO.SLTYPPL,PB.USTYPPL);
         {? SLO.first()
         || SKID_RBK.index('TPL');
            SKID_RBK.prefix(REF.FIRMA().SYMBOL+'TROR',SLO.ref());
            {? SKID_RBK.first()
            || _v:=1
            || PAR_WYDR.REF:=#US.ref;
               SKID_RBK.index('TAB');
               SKID_RBK.prefix(null,PAR_WYDR.TABAKR,PAR_WYDR.TABAKR,PAR_WYDR.REF,SLO.ref());
               {? SKID_RBK.first() || _v:=1 ?}
            ?};
            {? _v
            || PB.RW:=RACHBANK.RB_US_PB:=RB.get_rbtx(1,SKID_RBK.ref(),'');
               PB.NBW:=RB.getrbank(4,RACHBANK.RB_US_PB,XINFO.KRAJ().KODISO)
            || PB.M:=PB.UL:=PB.RW:=RACHBANK.RB_US_PB:='';
               PB.NBW:=null()
            ?}
         ?}
      || PB.M:=PB.UL:=PB.RW:=RACHBANK.RB_US_PB:='';
         PB.NBW:=null()
      ?}
   || US.index('URZSKNAZ'); US.prefix();
      {? US.find_key(PB.W)
      || PB.M:=US.MU; PB.UL:=US.UU; PB.W:=US.NU;
         PAR_WYDR.TABAKR:='US'; PAR_WYDR.REF:=#US.ref;
         {? +PB.USTYPPL
         || SLO.index('SL_TR'); SLO.prefix(XINFO.SLTYPPL,PB.USTYPPL);
            {? SLO.first()
            || SKID_RBK.index('TAB');
               SKID_RBK.prefix(null,'US','US',#US.ref(),SLO.ref());
               {? SKID_RBK.first()
               || PB.RW:=RACHBANK.RB_US_PB:=RB.get_rbtx(1,SKID_RBK.ref(),'');
                  PB.NBW:=RB.getrbank(4,RACHBANK.RB_US_PB,XINFO.KRAJ().KODISO)
               ?}
            ?}
         ?}
      || PB.M:=PB.UL:=PB.RW:=RACHBANK.RB_US_PB:='';
         PB.NBW:=null
      ?}
   ?}
?}; 1


\be_pbkw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ANA [8.40]
:: OPIS: Formula przed redagowaniem kwoty przelewu; zezwala na redakcje, gdy nie jest to przelew sklejony.
::   WE: [_a] - czy dla popraw
::  OLD: \be_pbkw/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_=1 & _a) | 1+menu_txt='P'
|| PB_OP.index('PB'); PB_OP.prefix(PB.ref()); {? PB_OP.size()>1 || 0 || 1 ?}
|| 1
?}


\ae_pbkw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formula po redakcji pola PB.KW, zaokragla kwote do 2 miejsc po przecinku
::  OLD: \ae_pbkw/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
PB.KW:=PB.KW$2;
1


\bl_pb_kd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Wartość początkowa PB.KD
::----------------------------------------------------------------------------------------------------------------------
'HBN: Prosty'


\bl_pb_zt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [8.40]
:: OPIS: Wartość początkowa pola PB.ZT
::  OLD: \dv_pbzt/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
'N'


\be_pb_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [8.60]
:: OPIS: Przed redakcja jednostki ksiegowej w przelewie.
::  OLD: \be_oddpb/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
OPERATOR.DEPT=null


\be_pbwal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.70]
:: OPIS: Przed redagowaniem pola waluty przelewu (PB.WAL)
::  OLD: \be_pbwal/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
{? FINFO.SLWAL=0
|| FUN.emsg('Nie ustalono słownika walut.'@); 0
|| SLO.index('SL');
   {? PB.NBD<>null & PB.RD<>''
   || _rach:=RB.get_rbel(2,PB.RD,PB.NBD().KODISO().KODISO);
      SKID_RBK.cntx_psh();
      SKID_RBK.index('WEKTOR');
      SKID_RBK.prefix(REF.INFO,_rach,_rach);
      {? SKID_RBK.first()
      || _inn:=SKID_RBK.INNWAL;
         {? _inn<>'T' & PB.WAL<>SKID_RBK.WAL || PB.WAL:=SKID_RBK.WAL ?}
      || _inn:=''
      ?};
      SKID_RBK.cntx_pop()
   || _inn:=''
   ?};
   {? _inn='T'
   || SLO.win_dict('ONE'); SLO.win_sel('ONE'); SLO.prefix(HINFO.SLWAL);
      1
   || 0
   ?}
?}


\bl_pb_str
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.70]
:: OPIS: Wartosc domyslna pola strony ponoszacej koszty przelewu zagranicznego (PB.STR)
::  OLD: \dv_pbstr/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_SKID.get(69)


\wz_pbrpz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Wzorzec pola PB.RODZZAGR.
::  OLD: \wz_pbrpz/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
SLO.index('SL');
SLO.prefix(XINFO.SL_RPZ);
XINFO.SL_RPZ();
SLO.win_dict('ONE'); SLO.win_sel('ONE');
''


\be_pbrpz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.70]
:: OPIS: Przed redagowaniem pola rodzaju platnosci zagranicznej przelewu (PB.RODZZAGR)
::  OLD: \be_pbrpz/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.SL_RPZ=null
|| FUN.emsg('Nie ustalono słownika rodzajów płatności zagranicznych.'@); 0
|| exec('wz_pbrpz','!hbn_prz_dark');
   SLO.hdr_sel(); SLO.hdr_sel('Rodzaje płatności zagranicznych'@);
   1
?}


\ae_pzrpz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.70]
:: OPIS: Po redagowaniu pola rodzaj platnosci zagranicznej przelewu (PB.RODZZAGR)
::----------------------------------------------------------------------------------------------------------------------
SLO.hdr_sel();
1


\wzpbslb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2006]
:: OPIS: Wzorzec pol PB.KOD_STAT i PB.TRYB_POS
::   WE: _a: kod rodzaju slownika
::  OLD: \wzpbslb/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
TYPYTRAN.index('KOD');
{? 6+-menu_txt()='szukaj'
|| TYPYTRAN.win_dict('SLO2')
|| TYPYTRAN.win_dict('WER2')
?};
ROZNE.RODZSL:=_a;
_b:=null;
B.cntx_psh();
B.index('BANK');
{? PB.NBD
|| B.prefix(PB.NBD().NB,PB.NBD().NUMER);
   {? B.first() || _b:=B.ref() ?}
?};
B.cntx_pop();
ROZNE.BBANK:=_b; ''


\bl_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Blank PB
::  OLD: \bl_pb/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
PB.blank()


\ar_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Sprawdza poprawnosc wypelnienia rekordu PB.
::  OLD: \chkrecpb/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=__CHK.record2(PB,'W',);
{? _wy=''
|| _wy:=__CHK.record2(RACHBANK,
        'RB_KH_PB',,
        'KB_1R','Rachunek bankowy zleceniodawcy'@)
?};
{? _wy='' || _wy:=__CHK.record2(PB,'KW',) ?};
::{? _wy=''
::|| _v:=6+__PBWINE;
::   _vff:={? _v='PB_EDI' || RACHBANK.RB_KH_PB || RACHBANK.RB_US_PB ?};
::   _vf:={? _v='PB_EDI' || 'RB_KH_PB' || 'RB_US_PB' ?};
::   _wy:=RB.chk_rban(_vff,2,_vf)
::?};
{? _wy=''
|| PB.RD:=RB.get_rbel(2,RACHBANK.KB_1R);
   SKID_RBK.cntx_psh();
   SKID_RBK.index('NUMER');
   SKID_RBK.prefix(PB.RD,PB.RD);
   _innwal:='';
   _wal:=null;
   _pln:=_vat:=0;
   {? SKID_RBK.first()
   || _innwal:=SKID_RBK.INNWAL;
      _wal:=SKID_RBK.WAL;
      _pln:=SKID_RBK.WAL().KOD='PLN';
      _vat:=SKID_RBK.VAT='T'
   || FUN.emsg('Podany rachunek nie występuje w bazie rachunków licencjobiorcy.'@);
      _wy:='KB_1R'
   ?};
   SKID_RBK.cntx_pop()
?};
{? _wy=''
|| {? __PBWINE+1='W' & _wal=HINFO.NAROD & _innwal='N'
   || FUN.emsg('Z tego rachunku nie można wykonać przelewu walutowego.'@);
      _wy:='KB_1R'
   |? __PBWINE+1<>'W' & _wal<>HINFO.NAROD & _innwal='N'
   || FUN.emsg('Z tego rachunku nie można wykonać przelewu krajowego.'@);
      _wy:='KB_1R'
   ?}
?};
{? _wy='' & PB.RODZ='W' & PB.RODZZAGR=null
|| FUN.emsg('Brak rodzaju płatności dla przelewu zagranicznego.\nZatwierdzenie przelewu niemożliwe.'@);
   _wy:='RODZZAGR'
?};
{? _wy='' & PB.RODZ='W' & PB.WAL=null
|| FUN.emsg('Brak waluty płatności dla przelewu walutowego.\nZatwierdzenie przelewu niemożliwe.'@);
   _wy:='WAL'
?};
{? _wy=''
|| {? PB.KP='  -' || PB.KP:='' ?};
   {? PB.RW=PB.RD & PB.NBD=PB.NBW
   || {? ~FUN.ask('Rachunek odbiorcy i zleceniodawcy są identyczne. Kontynuować'@)
      || _wy:='RW'
      ?}
   ?}
?};
{? _wy='' & _vat
|| {? ~FUN.ask('Wskazany rachunek bankowy licencjobiorcy jest rachunkiem do obsługi VAT (Split payment). Kontynuować?'@)
   || _wy:='KB_1R'
   ?}
?};
{? _wy='' & PB.SP='T'
|| {? ~_pln
   || FUN.emsg('Płatności typu Split payment są możliwe tylko z rachunku bankowego w PLN.'@);
      _wy:='KB_1R'
   ?};
   {? _wy='' & PB.KHNIP=''
   || FUN.emsg('Pole NIP w przypadku obsługi podzielonej płatności powinno być wypełnione.'@);
      _wy:='KHNIP'
   ?};
   {? _wy='' & exec('nip_ok','#id',PB.KHNIP)=0
   || _wy:='KHNIP'
   ?};
   {? _wy=''
   || {? PB.KHNIP<>PB.KH().NIP
      || {? ~FUN.ask('Podany numer NIP jest różny od numeru NIP w kartotece kontrahentów. Zaakceptować?'@)
         || _wy:='KHNIP'
         ?}
      ?}
   ?};
   {? _wy='' & PB.NRFAK=''
   || FUN.emsg('Pole Numer faktury w przypadku obsługi podzielonej płatności powinno być wypełnione.'@);
      _wy:='NRFAK'
   ?};
   {? _wy='' & PB.SP_V<=0 & PB.KW>=0
   || FUN.emsg('Kwota VAT w przypadku obsługi podzielonej płatności powinna być większa od zera.'@);
      _wy:='SP_V'
   ?};
   {? _wy='' & PB.KW<0 & PB.SP_V>0
   || FUN.emsg('Kwota VAT nie może być większa od zera, jeżeli kwota przelewu jest ujemna.'@);
      _wy:='SP_V'
   ?};
   {? _wy='' & PB.SP_V>PB.KW & PB.SP_V>0 & PB.KW>0
   || FUN.emsg('Kwota VAT nie może być większa od kwoty przelewu.'@);
      _wy:='SP_V'
   ?};
   {? _wy='' & |PB.SP_V>|PB.KW & PB.SP_V<0 & PB.KW<0
   || FUN.emsg('Kwota VAT mniejsza niż kwota przelewu.'@);
      _wy:='SP_V'
   ?}
?};
{? _wy='' || _wy:=__CHK.record2(PB,'DP',,'ODD',) ?};
{? _wy='' || exec('am_pb','!hbn_prz_dark') ?};
{? _wy='' || {? exec('cond_pb','blp')
:: Sprawdzenie RB z BLP
             || {? XINFO.BLP_SG='T' || exec('chk_pb','blp',PB,0) ||  exec('s_vat_skid_rbk','blp',PB) ?};
:: Blokada generowania przelewu w przypadku niezgodności z BLP
                {? exec('lock_pb','blp',XINFO.BLP_BG,,PB) || _wy:='RB_KH_PB' ?}
             ?}
?};
_wy


\wyb_rach
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Formuła umożliwia wybór rachunku bankowego, z którego dokonany zostanie przelew
::  OLD: \wyb_rach/proc_01.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TT_RB','TT_RB1','TT_RB2'); VAR_DEL.delete('g_tot');
TT_RB:=tab_tmp(2,
   'RB','STRING[51]','Rachunek bankowy',
   'NB','STRING[80]','Nazwa banku',
   'SKID_RBK','REAL',,
   'NUMER','STRING[8]',,
   'KRAJ','STRING[2]','Kod kraju',
   'WAL','STRING[3]','Waluta',
   'INNWAL','STRING[1]',,
   'AKTYWNY','STRING[1]','Aktywny',
   'VAT','STRING[1]','VAT'
);
TT_RB1:=TT_RB.index('?');
TT_RB2:=TT_RB.ndx_tmp('',1,'AKTYWNY',,0, 'RB',,0);
HBPKI.index('HBPKILPR'); HBPKI.prefix('E'); HBP.index('HBNAZWA');
SKID_RBK.index('BANK'); SKID_RBK.prefix(REF.INFO);
:: TODO: MB uprawnienia do rachunków bankowych
{? HBPKI.first() & SKID_RBK.first()
|| {!
   |? HBP.prefix(HBPKI.ref());
      SKID_RBK.prefix(REF.INFO,HBPKI.KDB);
      {? HBP.first() & SKID_RBK.first()
      || {!
         |? {? 1
            || _dodaj:=1
            |? __PBWINE+1='W' & menu_pth+1='P'
            || _dodaj:=SKID_RBK.WAL=PB.WAL | SKID_RBK.INNWAL='T'
            |? __PBWINE+1='W' & 1+(menu_pth+2)='D'
            || _dodaj:=SKID_RBK.WAL<>HINFO.NAROD | SKID_RBK.INNWAL='T'
            |? __PBWINE+1<>'W' & menu_pth+1='P'
            || _dodaj:=SKID_RBK.WAL=PB.WAL | SKID_RBK.INNWAL='T'
            |? __PBWINE+1<>'W' & 1+(menu_pth+2)='D'
            || _dodaj:=SKID_RBK.WAL=HINFO.NAROD | SKID_RBK.INNWAL='T'
            ?};
            {? _dodaj
            || _vrb:=RB.get_rbtx(1,SKID_RBK.ref(),SKID_RBK.KRAJ().KODISO); _vnb:=SKID_RBK.BANK().NB;
               _vkraj:=SKID_RBK.KRAJ().KODISO; _vref:=SKID_RBK.ref(); _vwal:=SKID_RBK.WAL().KOD;
               _vinn:=SKID_RBK.INNWAL; _akt:=TT_RB.AKTYWNY:=SKID_RBK.AKTYWNY;
               TT_RB.cntx_psh(); _v:=TT_RB.find_key(_vrb,_vnb); TT_RB.cntx_pop();
               {? ~_v
               || TT_RB.RB:=_vrb; TT_RB.NB:=_vnb; TT_RB.SKID_RBK:=_vref; TT_RB.INNWAL:=_vinn;
                  TT_RB.NUMER:=HBPKI.KDB().NUMER; TT_RB.KRAJ:=_vkraj; TT_RB.WAL:=_vwal;
                  TT_RB.AKTYWNY:=_akt;
                  TT_RB.VAT:=SKID_RBK.VAT;
                  TT_RB.add()
               ?}
            ?};
            SKID_RBK.next()
         !}
      ?};
      HBPKI.next()
   !}
?};
{? TT_RB.first() & ~Perm.hasFull('HRB')
:: Usuniecie rachunkow bankowych, do których użytkownik nie ma uprawnien
|| UPR_RB.index('RB'); UPR_RB.prefix(OPERATOR.USER);
   {? UPR_RB.first()
   || {? TT_RB.first()
      || {!
         |? _ref:=RB.getrrban(TT_RB.RB,REF.INFO,0);
            {? ~(_ref & UPR_RB.find_key(_ref))
            || TT_RB.del()
            || TT_RB.next()
            ?}
         !}
      ?}
   || TT_RB.erase()
   ?}
?};
:: Usuniecie rachunkow bankowych nie zaznaczonych w filtrze
{? var_pres('TAB_SPEC')>=0
|| {? TT_RB.first()
   || {! |?
         {? TAB_SPEC.find_key(TT_RB.RB) & ~TAB_SPEC.Z
         || TT_RB.del()
         || TT_RB.next()
         ?}
      !}
   ?}
?};
_wsel:=TT_RB.mk_sel('Wybór rachunku'@,'P',0,'rachbank_wybor',,,,,'U');
TT_RB.win_fld(_wsel,,'RB',,,50);
TT_RB.win_fld(_wsel,,'NB',,,60);
TT_RB.win_fld(_wsel,,'WAL',,,6);
TT_RB.win_fld(_wsel,,'AKTYWNY',,,,,,,,,2,,"'T'","'N'");
TT_RB.win_fld(_wsel,,'VAT',,,,,,,,,2,,"'T'","'N'");
TT_RB.win_act(_wsel,,'Formuła','Wybierz'@@,,,,"sel_exit()",1,,,,'W');
_fml:="exec('tt_rb_zakres','rachunki')";
TT_RB.win_act(_wsel,0,'Formuła','Zmień zakres'@@,,,_fml,,,,,,'Z');
TT_RB.win_act(_wsel,1,'Formuła','Zmień zakres'@@,,,_fml,,,,,,'Z');
TT_RB.win_act(_wsel,,'Kolejność');
::TT_RB.win_act(_wsel,,'Rekord',,,,"{? TT_RB.AKTYWNY='T' || Color.fnd_kol('RBK#02#01') || '' ?}");
TT_RB.win_sel(_wsel);
RACHBANK.AKTYWNY:='T';
exec('wyb_rach_prfx','rachunki');
{? TT_RB.select()
|| B.index('BANK'); B.prefix(TT_RB.NB,TT_RB.NUMER);
   {? B.first()
   || PB.RD:=@.RB.get_rbel(2,TT_RB.RB,TT_RB.KRAJ);
      PB.NBD:=@.B.ref();
      PB.prefix();
      _wy:=RACHBANK.KB_1R:=RB.get_rbtx(3,PB.RD,PB.NBD().KODISO().SYM)
   || _wy:=1
   ?}
|| _wy:=0
?};
VAR_DEL.delete('TT_RB','TT_RB1','TT_RB2'); VAR_DEL.delete('g_tot');
_wy


\pb_trig
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.41]
:: OPIS: Trigger dla tabeli PB - add przed i put przed
::----------------------------------------------------------------------------------------------------------------------
{? PB.SYM_ZEW='' || PB.SYM_ZEW:=PB.SYM ?};
1


\kh_pb_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.70]
:: OPIS: Przed wyswietleniem pola zmiennej do redakcji rach. bankowego kontrahenta w PB.
::       Zalozenia: wypelnione pole KH lub W.
::----------------------------------------------------------------------------------------------------------------------
_vt:=''; _vr:=null;
{? PB.KH
|| _vt:='KH'; _vr:=#PB.KH
|? +PB.W
|| KH.index('NAZ'); KH.prefix(2,PB.W);
   {? KH.first()
   || {! |?
         {? PB.W=+PB.W+KH.NAZ
         || _vt:='KH'; _vr:=#KH.ref()
         ?};
         ~+_vt & KH.next()
      !}
   ?};
   {? ~+_vt & (2+PB.RODZ)+1='U'
   || US.index('URZSKNAZ'); US.prefix(PB.W);
      {? US.first()
      || {! |?
            {? PB.W=+PB.W+US.NU
            || _vt:='US'; _vr:=#US.ref()
            ?};
            ~+_vt & US.next()
         !}
      ?}
   ?}
?};
{? ~+RACHBANK.RB_KH_PB & _vr
|| {? +_vt || RACHBANK.RB_KH_PB:=RB.get_drb(4,_vt,_vr) ?}
|| _vs:=null;
   {? _vt='US'
   || {? XINFO.SLTYPPL
      || SLUAPPL.prefix();
         SLUAPPL.find_key(XINFO.SLTYPPL().NAZ); SLO.index('SL_TR');
         SLO.prefix(SLUAPPL.SLU,PB.USTYPPL);
         {? SLO.first()
         || {! |? {? SLO.TR=PB.USTYPPL || _vs:=SLO.ref() ?}; ~_vs & SLO.next() !}
         ?}
      ?}
   ?};
   {? RB.getrrban(RACHBANK.RB_KH_PB,_vt,_vr,_vs,1)
   || RACHBANK.RB_KH_PB:=RB.get_rbtx(1,SKID_RBK.ref(),SKID_RBK.KRAJ().KODISO)
   || RACHBANK.RB_KH_PB:=RB.get_rbtx(2,RACHBANK.RB_KH_PB,'')
   ?}
?}


\kh_pb_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.70]
:: OPIS: F3 pola zmiennej do redakcji rach. bankowego kontrahenta przy edycji PB.
::----------------------------------------------------------------------------------------------------------------------
{? PB.KH
|| _vr:=#PB.KH;
   KH.cntx_psh();
   _tyt:=PB.KH().SKR;
   KH.cntx_pop()
|| {? var_pres('__PBWINE')>0 & 2+__PBWINE='PB'
   || FUN.info('Odbiorca spoza bazy kontrahentów.'@);
      return(0)
   || _vr:=#KH.ref();
      _tyt:=KH.SKR
   ?}
?};
SKID_RBK.win_sel('SLO_RBO'); SKID_RBK.win_edit('RED_RBO');
PAR_WYDR.TABAKR:='KH'; PAR_WYDR.REF:=_vr;
RACHBANK.KB_5R_BD:='RACHBANK.KB_5R:=RB.get_rbtx(1,SKID_RBK.ref(),SKID_RBK.KRAJ().KODISO)';
SKID_RBK.index('TAB'); SKID_RBK.prefix(RACHBANK.FIRMA,'KH','KH',_vr);
{? ~SKID_RBK.find_key(null,RB.get_rbel(2,RACHBANK.RB_KH_PB)) || SKID_RBK.first() ?};
_firma:={? RACHBANK.FIRMA || 'w firmie %1'@[RACHBANK.FIRMA().OPIS] || ' w grupie kapitałowej' ?};
_tyt:=' %1 dla kontrahenta: %2'@[_firma,_tyt];
RACHBANK.AKTYWNY:='T';
exec('rb_aktywne','rachunki','KH',_vr,_tyt);
{? SKID_RBK.select(,1)
|| RACHBANK.RB_KH_PB:=RB.get_rbtx(1,SKID_RBK.ref(),SKID_RBK.KRAJ().KODISO);
   PB.KRAJ_BAN:=SKID_RBK.KRAJ;
   PB.SWIFT:={? SKID_RBK.SWIFT<>'' || SKID_RBK.SWIFT || SKID_RBK.BANK().SWIFT ?};
   PB.NBW:=SKID_RBK.BANK; RACHBANK.RB_KH_PB
?}


\kh_pb_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.70]
:: OPIS: Po redakcji pola zmiennej do redakcji rach. bankowego kontrahenta przy edycji PB.
::----------------------------------------------------------------------------------------------------------------------
{? fld()<>''
|| _ret:=RB.chk_rban(RACHBANK.RB_KH_PB,2,'RB_KH_PB');
   {? type_of(_ret)=2 || {? +_ret || _ret:=0 || _ret:=1 ?} ?};
   {? _ret
   || PB.RW:=RB.get_rbel(2,fld(),RB.set_kraj());
      {? ~PB.NBW | PB.KRAJ_BAN=RB.INFOKRAR
      || PB.NBW:=RB.getrbank(4,PB.RW,PB.KRAJ_BAN().KODISO);
         {? PB.WAL<>FINFO.NAROD
         || _vr:=RB.getrrban(PB.RW,'KH',#PB.KH);
         {? _vr & SKID_RBK.seek(_vr) & SKID_RBK.SWIFT<>''
         || PB.SWIFT:=SKID_RBK.SWIFT
         || PB.SWIFT:=PB.NBW().SWIFT
         ?}
      ?}
    ?}
   ?}; _ret
|| 1
?}


\can_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Sprawdza możliwości redagowania przelewu elektronicznego.
::   WE: _a - typ operacji: 1-poprawianie 2-usuwanie
::  OLD: \czy_popr/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
{? PB.ZT='T'
|| {? PB.sel_size()=0
   || {? _a=1 || _txt:='Poprawianie ' || _txt:='Usuwanie ' ?};
      FUN.info('Przelew zatwierdzony.\n %1 niemożliwe.'@[_txt])
   ?};
   0
|? ~exec('usr_hrp','b_perm',PB.KD)
|| {? PB.sel_size()=0
   || {? PB.KD='HBN: Prosty' || _txt:='krajowych i zagranicznych'
      |? PB.KD='HBN: US' || _txt:='do US'
      |? PB.KD='HBN: ZUS' || _txt:='do ZUS'
      || _txt:=''
      ?};
      FUN.info('Brak uprawnień do typów przelewów %1.'@[_txt])
   ?};
   0
|| {? PB.USTYPPL='' || exec('okno_pb','homebank','EDIT') ||  exec('okno_pb','homebank','EDIT_US') ?};
   1
?}


\bd_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Usuwa przelew elektroniczny wraz z rozrachunkami.
::  OLD: \bd_pb/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
_tabdel:=tab_tmp(1,'ID','STRING[60]','ID');
{? PB.ZT='N'
|| {? PB.sel_size() | FUN.ask('Czy na pewno usunąć?'@)
   || PB_OP.index('PB'); PB_OP.prefix(PB.ref());
      {? PB_OP.first()
      || {!
         |? {? PB_OP.ZRODLO<>''
            || {? 8+PB_OP.ZRODLO='skid_kzl'
               || EZALPOZ.prefix();
                  {? EZALPOZ.seek(BB.sqlint(PB_OP.ZRODLO),)
                  || EZAL.cntx_psh(); EZAL.prefix(REF.FIRMA); EZALPOZ.EZAL();
                     EZAL.ROZCHOD-=EZALPOZ.ROZCHOD; EZAL.put();
                     EZAL.cntx_pop();
                     EZALPOZ.del()
                  ?}
               ?}
            ?};
            {? PB_OP.ZAD<>'' || _tabdel.blank(); _tabdel.ID:=PB_OP.ZAD; _tabdel.add ?};
            PB_OP.del()
         !}
      ?};
      _vk:=PB.KW;
      PB.del();
      {? Plugin.runnable('HBN_PB') & _tabdel.first()
      || {!|?
         Plugin.run('HBN_PB_BF_DEL',_tabdel.ID);
         _tabdel.next
         !}
      ?};
      _wy:=1;
      {? var_pres('g_cnt')>0 || g_cnt+=1 ?};
      {? ~PB.size() || PAR_WYDR.RPAR1:=PAR_WYDR.RPAR2:=0 || PAR_WYDR.RPAR2-=_vk ?};
      PAR_WYDR.RPAR3:=PAR_WYDR.RPAR1+PAR_WYDR.RPAR2;
      exec('ad_pb','!hbn_prz_dark')
   ?}
|| {? ~PB.sel_size()
   || FUN.info('Przelew zatwierdzony.\nUsuwanie niedozwolone.'@)
   ?}
?};
_wy


\ad_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Po usunieciu przelewu
::  OLD: \blpolapb/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
PB.NBW:=null;PB.RW:='';PB.DP:=date(0,0,0)


\mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Poprawianie przelewu
::----------------------------------------------------------------------------------------------------------------------
{? exec('can_mod','!hbn_prz_dark',1)
|| exec('add','!hbn_prz_dark',0)
?}


\del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Usunięcie przelewu
::----------------------------------------------------------------------------------------------------------------------
{? exec('can_mod','!hbn_prz_dark',2)
|| {? exec('bd_pb','!hbn_prz_dark') & _>0 & _a=1
   ||
:: po usunięciu przelewu z poziomu OPTMP
      OPTMP.prefix(v_user3);
      {? OPTMP.first() || {! |? OPTMP.del() !} ?};

      exec('wind_pb_viscera','rozrach_przel',1,,1)

   ?}
?}


\add_us_zus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dołączanie/poprawianie przelewu do US
::   WE: _a - typ przelewu: 'U'S lub 'Z'US
::  OLD: \gen_us/skid_pel.fml
::  OLD: \gen_zus/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
exec('decl','!hbn_prz_dark');
{? SSTALE.WAL<>FINFO.NAROD
|| {? _a='U' || _txt:='urzędu skarbowego' || _txt:='ZUS' ?};
   FUN.info('Przelew do %1 nie może\nbyć wykonany w walucie innej niż narodowa.'@[_txt]);
   return(0)
?};
{? _a='U'
|| {? XINFO.SLTYPPL=null
   || FUN.info('Nie znaleziono słownika typów płatności.'@);
      return(0)
   ?}
|| SLU.index('NAZ'); SLU.prefix('~Płatności ZUS');
   {? ~SLU.first()
   || FUN.info('Nie znaleziono słownika \'~Płatności ZUS\'.'@);
      return(0)
   ?}
?};
PB.use('pbxxxx'); PB_OP.use('popxxxx'); PBHIST.use('phxxxx');
PAR_WYDR.TABAKR:=REF.INFO;
RACHBANK.KB_1R:='';
RACHBANK.KB_2R:='';
PAR_WYDR.RPAR4:=0;
exec('setrb','!hbn_prz_dark');
_ok:=0;
{? _a='U'
|| US.win_dict('WER_RBK');
   RACHBANK.KB_2R:=RACHBANK.KB_2R_F3:='';
   RACHBANK.KB_2R_BD:='';
   RACHBANK.KB_2R_AE:='exec(\'ae_kb_us\',\'rachunki\')';
   PAR_WYDR.IDZOBOW:=PAR_WYDR.OKRESUS:='';
   PAR_WYDR.RPAR1:=0;
   PAR_WYDR.DPAR1:=date();
   PAR_WYDR.US:=PAR_WYDR.TYPPL:=null;
   PAR_WYDR.TABAKR:='US';
   exec('okno_pb','homebank','PRZEL');
   PB.prefix();
   PB.blank();
   exec('odd_filtr','fst');
   {? PB.edit("exec('ar_us','!hbn_prz_dark')")
   || {? PB.SP<>'T' || PB.SP_V:=0; PB.KHNIP:=''; PB.NRFAK:='' ?};
      exec('init','!hbn_prz_dark');
      exec('naszedane','!hbn_prz_dark','us');
      exec('usdane','!hbn_prz_dark');
      {? PB.add()
      || _ref:=PB.ref();
         {? PB.f_active()
         || PB.f_rfresh();
            {? ~PB.f_seek(_ref)
            || FUN.info('Ze względu na ustawienia filtrowania przelew nie będzie widoczny.'@)
            ?}
         ?};
         _ok:=1
      ?};
      VAR_DEL.delete('DRB')
   ?}
|| PB.prefix();
   exec('okno_pb','homebank','PB_ZUSN');
   PB.hdr_edit(' do ZUS'@);
   PB.blank();
   PB.WAL:=FINFO.NAROD;
   {? OPERATOR.DEPT || PB.ODD:=OPERATOR.DEPT ?};
   RACHBANK.RB_KH_PB:='';
   RACHBANK.fld_fml('RB_KH_PB','BEFORE_EDIT',"0");
   PB.fld_fml('W','BEFORE_EDIT',"0");
   PB.fld_fml('KP','BEFORE_EDIT',"0");
   PB.fld_fml('M','BEFORE_EDIT',"0");
   PB.fld_fml('UL','BEFORE_EDIT',"0");
   SLO.index('SL'); SLO.prefix(SLU.ref());
   {? SLO.find_key('ZUS',)
   || SKID_RBK.cntx_psh();
      SKID_RBK.index('TAB');
      SKID_RBK.prefix(REF.FIRMA,'ZUS','ZUS',0,SLO.ref());
      {? SKID_RBK.first()
      || RACHBANK.RB_KH_PB:=PB.RW:=SKID_RBK.N;
         PB.NBW:=SKID_RBK.BANK
      ?};
      SKID_RBK.cntx_pop()
   ?};
   {? RACHBANK.RB_KH_PB='' || FUN.emsg('Nie znaleziono definicji konta ZUS dla e-składki.'@) ?};
   PB.W:='Zakład Ubezpieczeń Społecznych';
   PB.KP:='01-748';
   PB.M:='Warszawa';
   PB.UL:='Szamocka 3, 5';
   PB.RODZ:='K';
   PB.TYT:='Wpłata do ZUS';
   PB.KD:='HBN: ZUS';
   PAR_WYDR.TYPPLZUS:=null;
   PB.KW:=0;
   PB.DP:=date();
   PAR_WYDR.TABAKR:='ZUS';
   exec('init','!hbn_prz_dark');
   exec('odd_filtr','fst');
   {? RACHBANK.RB_KH_PB<>'' & PB.edit("exec('ar_pb','!hbn_prz_dark')")
   || {? PB.SP<>'T' || PB.SP_V:=0; PB.KHNIP:=''; PB.NRFAK:='' ?};
      {? PB.add()
      || _ref:=PB.ref();
         {? PB.f_active()
         || PB.f_rfresh();
            {? ~PB.f_seek(_ref)
            || FUN.info('Ze względu na ustawienia filtrowania przelew nie będzie widoczny.'@)
            ?}
         ?};
         _ok:=1
      ?};
      VAR_DEL.delete('DRB')
   ?};
   RACHBANK.fld_fml('RB_KH_PB','BEFORE_EDIT',"*");
   PB.fld_fml('W','BEFORE_EDIT',"*");
   PB.fld_fml('KP','BEFORE_EDIT',"*");
   PB.fld_fml('M','BEFORE_EDIT',"*");
   PB.fld_fml('UL','BEFORE_EDIT',"*")
?};
_ok


\ar_us
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.51]
:: OPIS: Sprawdza poprawność wypełnienia danych do przelewu do urzedu skarbowego
::  OLD: \spr_pus/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
_v:=__CHK.record3(
   PAR_WYDR,'US','Urząd skarbowy',
   PAR_WYDR,'TYPPL','Typ płatności',
   RACHBANK,'KB_2R','Rachunek bankowy US',
   RACHBANK,'KB_1R','Konto bankowe',
   PAR_WYDR,'OKRESUS','Okres',
   PAR_WYDR,'RPAR4','Kwota',
   PAR_WYDR,'DPAR1','Data przelewu'
);
{? _v='' || _v:=RB.chk_rban(RACHBANK.KB_2R,2,'KB_2R') ?};
{? _v='' || _v:=RB.chk_rban(RACHBANK.KB_1R,2,'KB_1R') ?};
_v


\ar_zus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2008]
:: OPIS: Sprawdza poprawność wypełnienia danych do przelewu do ZUS
::  OLD: \spr_zus/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=__CHK.record3(
   PAR_WYDR,'TYPPLZUS','Typ płatności',
   RACHBANK,'KB_1R','Rachunek bankowy zleceniodawcy',
   PB,'ZUSTYPWP','Typ wpłaty/Deklaracja/Numer',
   PB,'KW','Kwota',
   PB,'DT','Data przelewu'
);
{? _ret='' & +(form(PB.ZUSTYPWP))<8 & +(form(PB.ZUSTYPWP))>9
|| FUN.info('Pole \'Typ wpłaty/Deklaracja/Numer\' niepoprawnie wypełnione.');
   _ret:='ZUSTYPWP'
?};
{? _ret='' || _v:=RB.chk_rban(RACHBANK.KB_2R,2,'KB_2R','ZUS') ?};
{? _ret='' || _v:=RB.chk_rban(RACHBANK.KB_1R,2,'KB_1R',REF.INFO) ?};
_ret


\naszedane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Uzupelnienie danych licencjobiorcy w przelewie
::  OLD: \naszdane/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
PB.KD:={? _a='us' || 'HBN: US' |? _a='zus' || 'HBN: ZUS' || 'HBN: Prosty' ?};
PB.RD:=RB.get_rbel(2,RACHBANK.KB_1R,'');
PB.NBD:=RB.getrbank(3,RACHBANK.KB_1R);
PB.WAL:=SSTALE.WAL;
PB.ODD:=exec('set_odd','homebank');
{? _a='us'
|| PB.DP:=PAR_WYDR.DPAR1;
   PB.KW:=PAR_WYDR.RPAR4$2;
   {? XINFO.NIP<>''
   || PB.USNIPREG:=STR.gsub(XINFO.NIP,'-','');
      PB.USTYPID:='N'
   || PB.USNIPREG:=XINFO.REGON;
      PB.USTYPID:='R'
   ?};
   PB.RZ:=PAR_WYDR.RZ;
   PB.PG:=PAR_WYDR.PG;
   PB.ZAD:=PAR_WYDR.ZAD
|? _a='zus'
|| {? XINFO.NIP<>''
   || PB.NIP:=STR.gsub(XINFO.NIP,'-','');
      {? XINFO.REGON<>'' || PB.USNIPREG:=XINFO.REGON; PB.USTYPID:='R' ?}
   || PB.USNIPREG:=XINFO.REGON; PB.USTYPID:='R'
   ?}
|| PB.DP:=WYDRUKIN.DATA;
   exec('DRB','object');
   _vtp:={? DRB.set_tab(OP.ref()) || DRB.get_drat(WYDRUKIN.DATA) || OP.TZ ?};
   {? var_pres('v_zakr')>0 & v_zakr=1 & (WYDRUKIN.DATA-_vtp>=0)
   || _vk:=0;
      PB.KW:=exec('f_pbgnt2','homebank',WYDRUKIN.DATA)
   || PB.KW:=0
   ?};
   PB.TYT:=WYDRUKIN.SLONAZ
?}


\decl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Deklaracja objektow i zmiennych
::----------------------------------------------------------------------------------------------------------------------
exec('RB','object');
exec('czytaj','#stalesys',,HINFO);
exec('czytaj','#stalesys',,FINFO);
exec('czytaj','#stalesys',,XINFO)


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Uzupełnienie danych wspólnych przelewów
::----------------------------------------------------------------------------------------------------------------------
PB.USER_GEN:=exec('name','users');
PB.DZ:=date();
PB.ZT:='N'


\setrb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawienie zmiennej do obsługi rachunku bankowego licencjobiorcy
::----------------------------------------------------------------------------------------------------------------------
RACHBANK.KB_1R_BD:='RACHBANK.KB_1R:=RB.get_rbtx(2,RACHBANK.KB_1R,\'\')';
RACHBANK.KB_1R_F3:='exec(\'wyb_rach\',\'!hbn_prz_dark\')';
RACHBANK.KB_1R_BE:='';
RACHBANK.KB_1R_AE:='exec(\'ae_kb\',\'rachunki\')';
~~


\ae_rbus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.51]
:: OPIS: Po redakcji US lub TYPPL zmiennej PAR_WYDR
::  OLD: \ae_rbus/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
_v:=0;
_datPrzel:=PAR_WYDR.DPAR1;

{? _datPrzel>=date(2020,1,1)
|| {? PAR_WYDR.TABAKR='US'
   || {? PAR_WYDR.TYPPL
      || SLO.index('SL_TR'); SLO.prefix(XINFO.SLTYPPL,PAR_WYDR.TYPPL().TR);
         {? SLO.first()
         || SKID_RBK.index('TPL');
            SKID_RBK.prefix(REF.FIRMA().SYMBOL+'TROR',SLO.ref());
            {? SKID_RBK.first()
            || _v:=1
            || PAR_WYDR.REF:=#US.ref;
               SKID_RBK.index('TAB');
               SKID_RBK.prefix(null,PAR_WYDR.TABAKR,PAR_WYDR.TABAKR,PAR_WYDR.REF,SLO.ref());
               {? SKID_RBK.first() || _v:=1 ?}
            ?}
         ?}
      ?}
   ?}
|| {? PAR_WYDR.TABAKR='US' & PAR_WYDR.US
   || PAR_WYDR.REF:=#US.ref;
      {? PAR_WYDR.TYPPL
      || SLO.index('SL_TR'); SLO.prefix(XINFO.SLTYPPL,PAR_WYDR.TYPPL().TR);
         {? SLO.first()
         || SKID_RBK.index('TAB');
            SKID_RBK.prefix(null,PAR_WYDR.TABAKR,PAR_WYDR.TABAKR,PAR_WYDR.REF,SLO.ref());
            {? SKID_RBK.first() || _v:=1 ?}
         ?}
      ?}
   ?}
?};

{? PAR_WYDR.TABAKR='ZUS'
|| {? PAR_WYDR.TYPPLZUS
   || SKID_RBK.index('TAB');
      SKID_RBK.prefix(null,PAR_WYDR.TABAKR,PAR_WYDR.TABAKR,0,SLO.ref());
      {? SKID_RBK.first() || _v:=1 ?}
   ?}
?};

{? _v
|| RACHBANK.KB_2R:=RB.get_rbtx(1,SKID_RBK.ref(),'')
|| {? cur_afld()='US' & var_pres('__tmp_us')>0 & PAR_WYDR.US<>__tmp_us || RACHBANK.KB_2R:='' ?};
   {? cur_afld()='TYPPL' & var_pres('__tmp_us')>0 & PAR_WYDR.TYPPL<>__tmp_us || RACHBANK.KB_2R:='' ?}
?};
1


\be_sltpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.51]
:: OPIS: Przed redakcja typow platnosci
::  OLD: \be_sltpl/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_afld()='TYPPL' || __tmp_us:=PAR_WYDR.TYPPL ?};
SLO.win_sel('ONE'); SLO.win_dict('ONE');
{? PAR_WYDR.TABAKR='US'
|| XINFO.SLTYPPL(); SLO.index('SL'); SLO.prefix(SLU.ref())
|? PAR_WYDR.TABAKR='ZUS'
|| SLU.index('NAZ'); SLU.prefix();
   {? SLU.find_key('~Płatności ZUS')
   || SLO.index('SL'); SLO.prefix(SLU.ref())
   ?}
?};
1


\bd_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed wyświetleniem rachunku bankowego
::   WE: _a - zmienna
::       _b - pole zmiennej
::       _c - tabela rachunku
::       _d - rekord tabeli rachunku
::----------------------------------------------------------------------------------------------------------------------
_v:=($(_a+'.'+_b))();
{? ~+_v
|| _vrb:=RB.get_drb(4,_c,_d)
|| _vr:=RB.getrrban(_v,_c,_d);
   SKID_RBK.prefix();
   {? _vr & SKID_RBK.seek(_vr)
   || _vrb:=RB.get_rbtx(1,_vr,SKID_RBK.KRAJ().KODISO)
   || _vrb:=RB.get_rbtx(2,_v,'')
   ?}
?};
($(_a+'.'+_b+':=_a'))(_vrb);
1


\be_rbus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją PAR_WYDR.US (dodawanie przelewu do US)
::----------------------------------------------------------------------------------------------------------------------
{? RACHBANK.KB_2R_BD=''
|| RACHBANK.KB_2R_BD:='exec(\'bd_rb\',\'!hbn_prz_dark\',\'RACHBANK\',\'KB_2R\',\'US\',#US.ref())'
?};
{? cur_afld()='US' || __tmp_us:=PAR_WYDR.US ?};
1


\usdane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Uzupełnia dane przelewu bankowego do US
::  OLD: \usdane/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
PB.NBW:=RB.getrbank(4,RACHBANK.KB_2R,XINFO.KRAJ().KODISO);
PB.RW:=RB.get_rbel(2,RACHBANK.KB_2R,'');
PB.W:=US.NU;
PB.KP:=US.UK;
PB.M:=US.MU;
PB.UL:=US.UU;
PB.USOKRES:=PAR_WYDR.OKRESUS;
PB.USTYPPL:=PAR_WYDR.TYPPL().TR;
PB.USIDZOB:=PAR_WYDR.IDZOBOW;
PB.TYT:=form(PB.USNIPREG,15)+form(PB.USTYPID,4)+form(PB.USOKRES,7)+form(PB.USTYPPL,6)+PB.USIDZOB;
PB.RODZ:='KU'


\zusdane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [2008]
:: OPIS: Uzupełnienie danych ZUS w przelewie
::   WE: _a - kod slownika platnosci ZUS
::       _b - tresc pozycji slownika platnosci ZUS
::  OLD: \zusdane/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
PB.NBW:=RB.getrbank(4,RACHBANK.KB_2R,XINFO.KRAJ().KODISO);
PB.RW:=RB.get_rbel(2,RACHBANK.KB_2R,'');
PB.W:='Zakład Ubezpieczeń Społecznych';
PB.USTYPPL:=PB.KP:=PB.M:='';
PB.UL:=PAR_WYDR.TYPPLZUS().TR;
{? +form(PB.ZUSTYPWP)=9 || _typwp:=form(PB.ZUSTYPWP)+8 || _typwp:=form(PB.ZUSTYPWP) ?};
PB.TYT:='Przelew składek na '+_b+' '+_typwp+{? +form(PB.ZUSNRDEC)>0 || ' [dec.: '+form(PB.ZUSNRDEC)+']' || '' ?};
PB.RODZ:='KZ'


\ae_pb_us
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.70]
:: OPIS: Po redakcji rachunku bankowego urzędu skarbowego w PB.
::  OLD: \us_pb_ae/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld()<>''
|| PB.RW:=RB.get_rbel(2,fld(),RB.set_kraj());
   PB.NBW:=RB.getrbank(4,PB.RW,RB.INFOKRAJ)
|| PB.RW:=''; PB.NBW:=null
?};
1


\bgd_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Przed usuwaniem grupowym PB.
::  OLD: \gb_delpb/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy na pewno usunąć zaznaczone przelewy?'@)
|| g_cnt:=0;
   g_tot:=PB.sel_size();
   1
?}


\agd_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [8.40]
:: OPIS: Po usuwaniu grupowym PB.
::  OLD: \ga_delpb/skid_pel.fml
::----------------------------------------------------------------------------------------------------------------------
{? g_cnt=g_tot
|| FUN.info('Operacja zakończona.\nUsunięto wszystkie zaznaczone przelewy.\n'
            'Liczba usuniętych przelewów: %1.'@[$g_cnt])
|| FUN.info('Operacja zakończona.\nLiczba usuniętych przelewów: %1\n'
            'Liczba przelewów, dla których operacja się nie powiodła: %2.'@[$g_cnt,$(g_tot-g_cnt)])
?};
VAR_DEL.delete('g_cnt','g_tot');
1


\zm_pbrb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [8.60]
:: OPIS: Zmienia rachunek bankowy licencjobiorcy w PB.
::  OLD: \zm_pbrb/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('can_mod','!hbn_prz_dark',1)
|| {? PB.sel_size()
   || err_zmpb+=1
   ?};
   return(0)
?};
{? var_pres('g_tot')<0 || _ok:=exec('zm_rb1','!hbn_prz_dark') || _ok:=1 ?};
{? _ok
|| exec('zm_rb2','!hbn_prz_dark');
   {? PB.sel_size()=0
   || _ref:=PB.ref();
      {? PB.f_active()
      || PB.f_rfresh();
         PB.f_seek(_ref)
      ?}
   ?}
?}


\zm_rb1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [8.60]
:: OPIS: Tworzy okienko rachunkow bankowych do zmiany rachunku bankowego.
::  OLD: \zm_rb1/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
TT_RB:=tab_tmp(2,
   'RB','STRING[51]','Rachunek bankowy',
   'NB','STRING[80]',,
   'SKID_RBK','REAL',,
   'NUMER','STRING[8]',,
   'KRAJ','STRING[2]','Kod kraju',
   'WAL','STRING[3]','Waluta',
   'INNWAL','STRING[1]','Inne waluty',
   'VAT','STRING[1]','VAT'
);
HBPKI.index('HBPKILPR'); HBPKI.prefix('E'); HBP.index('HBNAZWA');
SKID_RBK.index('BANK'); SKID_RBK.prefix(REF.INFO);
{? HBPKI.first() & SKID_RBK.first()
|| {!
   |? HBP.prefix(HBPKI.ref());
      SKID_RBK.prefix(REF.INFO,HBPKI.KDB);
      {? HBP.first() & SKID_RBK.first()
      || {!
         |? {? SKID_RBK.WAL=PB.WAL | SKID_RBK.INNWAL='T'
            || _vrb:=RB.get_rbtx(1,SKID_RBK.ref(),SKID_RBK.KRAJ().KODISO); _vnb:=SKID_RBK.BANK().NB;
               _vkraj:=SKID_RBK.KRAJ().KODISO; _vref:=SKID_RBK.ref(); _vwal:=SKID_RBK.WAL().KOD;
               _vinn:=SKID_RBK.INNWAL;
               TT_RB.cntx_psh(); _v:=TT_RB.find_key(_vrb,_vnb); TT_RB.cntx_pop();
               {? ~_v
               || TT_RB.RB:=_vrb; TT_RB.NB:=_vnb; TT_RB.SKID_RBK:=_vref; TT_RB.INNWAL:=_vinn;
                  TT_RB.NUMER:=HBPKI.KDB().NUMER; TT_RB.KRAJ:=_vkraj; TT_RB.WAL:=_vwal;
                  TT_RB.VAT:=SKID_RBK.VAT;
                  {? TT_RB.RB<>PB.RD || TT_RB.add() ?}
               ?}
            ?};
            SKID_RBK.next()
         !}
      ?};
      HBPKI.next()
   !}
?};
{? TT_RB.first()
:: Usuniecie rachunkow bankowych, do ktorych uzytkownik nie ma uprawnien
|| {? ~Perm.hasFull('HRB')
   || UPR_RB.index('RB'); UPR_RB.prefix(OPERATOR.USER);
      {? UPR_RB.first()
      || {!
         |? _ref:=RB.getrrban(TT_RB.RB,REF.INFO,0);
            {? ~(_ref & UPR_RB.find_key(_ref))
            || TT_RB.del()
            || TT_RB.next()
            ?}
         !}
      || TT_RB.erase()
      ?}
   ?}
?};
_rd:=RB.get_rbtx(3,PB.RD,PB.NBD().KODISO().SYM);
_wsel:=TT_RB.mk_sel('Zmiana rachunku z: [%1] na: '@[_rd],,0,'rachbank_zmiana');
TT_RB.win_fld(_wsel,,'RB',,,50);
TT_RB.win_fld(_wsel,,'NB',,,60);
TT_RB.win_fld(_wsel,,'WAL',,,6);
TT_RB.win_act(_wsel,,'Formuła','Wybierz'@@,,,,"sel_exit()",1,,,,'W');
TT_RB.win_sel(_wsel);
_wy:=1;
{? TT_RB.select()
|| {? TT_RB.VAT='T'
   || _wy:=FUN.ask('Podany rachunek jest rachunkiem do obslugi VAT (Split payment). Kontynuować?'@)
   || _wy:=1
   ?};
   {? _wy & TT_RB.WAL<>'PLN'
   || _czysp:=0;
      PB.cntx_psh();
      {? PB.sel_size()>0
      || _tab:=PB.sel_aget();
         {? _tab.first()
         || {! |?
               {? PB.seek(_tab.REF,) || _czysp:=(PB.SP='T') ?};
               ~_czysp  & _tab.next()
            !}
         ?}
      || _czysp:=(PB.SP='T')
      ?};
      PB.cntx_pop();
      {? _czysp
      || FUN.emsg('Wybrany rachunek jest rachunkiem w walucie innej niż PLN.\n'
                  '(%1, waluta: %2)\nW przypadku przelewów typu split-payment '
                  'zmiana na taki rachunek nie jest możliwa.'@[TT_RB.RB,TT_RB.WAL]);
         _wy:=0
      || _wy:=1
      ?}
   ?}
|| _wy:=0
?};
{? ~_wy || VAR_DEL.delete('TT_RB','g_tot') ?};
_wy


\zm_rb2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [8.60]
:: OPIS: Zmienia rachunek bankowy licencjobiorcy w przelewach do eksportu.
::  OLD: \zm_rb2/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
B.index('BANK'); B.prefix(TT_RB.NB,TT_RB.NUMER);
{? B.first()
|| PB.cntx_psh();
   {? PB.WAL().KOD=TT_RB.WAL | (TT_RB.INNWAL='T' & PB.SP<>'T')
   || PB.RD:=RB.get_rbel(2,TT_RB.RB,TT_RB.KRAJ); PB.NBD:=B.ref();
      PB.prefix(); PB.put()
   ?};
   PB.cntx_pop()
?};
{? var_pres('g_tot')<0 || VAR_DEL.delete('TT_RB') ?}; 1


\gb_zmrb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [8.60]
:: OPIS: Przed grupa dla zmiany rachunku bankowego w przelewie.
::  OLD: \gb_zmrb/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
g_tot:=PB.sel_size();
err_zmpb:=0;
{? g_tot &
   FUN.ask('Wszystkie zaznaczone przelewy muszą być w tej samej walucie.\n'
           'Czy na pewno zmienić rachunek bankowy dla zaznaczonych przelewów?'@)
|| exec('zm_rb1','!hbn_prz_dark')
|| &g_tot; &err_zmpb; 0
?}


\ga_zmrb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMA [8.60]
:: OPIS: Po grupie dla zmiany rachunku bankowego w przelewie.
::  OLD: \ga_zmrb/homebank.fml
::----------------------------------------------------------------------------------------------------------------------
{? err_zmpb>0
|| _ile:=g_tot-err_zmpb;
   FUN.emsg('Zaznaczono %1 przelewów. Zmodyfikowano rachunek dla %2 przelewów.\n'
            'W trakcie przetwarzania zaznaczonych przelewów napotkano\n'
            'przelewy zatwierdzone (%3), w których nie można już zmienić\n'
            'rachunku licencjobiorcy.'@[$g_tot,$_ile,$err_zmpb])
|| FUN.emsg('Zmodyfikowano rachunek dla %1 przelewów.'@[$g_tot])
?};
VAR_DEL.delete('TT_RB','err_zmpb'); VAR_DEL.delete('g_tot'); 1


\akc_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Formuła na akcję Dołącz przelewów
::   WE: [_a] - typ przelewu
::  OLD: \add/!hbn_prz_zapr.fml
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='HBN_PRZ_DARK';
_params.AKCJA:='Dołącz';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYP',_a);
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\ae_utypid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Po redakcji pola PB.USTYPID (typ identyfikatora do US)
::----------------------------------------------------------------------------------------------------------------------
{? PB.USTYPID='R'
|| PB.USNIPREG:=XINFO.REGON
|? PB.USTYPID='N'
|| PB.USNIPREG:=exec('niptostr','#string',XINFO.NIP)
?};
1


\uprawnienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na uprawnienia do danych dla czynności
::   WE: params_get().in - parametry wejściowe czynności
::           params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::           params_get().mp - Menadżer Procesów
::   WY: 0 - użytkownik nie ma uprawnień do danych czynności
::       1 - użytkownik ma uprawnienia do danych czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_user:=params_get().user;
_mp:=params_get().mp;

_result:=0;
USERS.cntx_psh();
USERS.clear();
{? USERS.seek(_user)
|| {? exec('usr_fjks_any','b_perm',USERS.ref()) & exec('usr_hrb_any','b_perm',USERS.ref())
      & exec('usr_hrp_any','b_perm',USERS.ref())
   || _result:=1
   ?}
?};
USERS.cntx_pop();
_result


\be_pb_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Przed redakcją pola PB.SP
::----------------------------------------------------------------------------------------------------------------------
UNPAR.P10:=PB.SP;
1

\be_spv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PJ] [18.22]
:: OPIS: Przed redagowaniem pola SP_V tabeli PB
::----------------------------------------------------------------------------------------------------------------------
PB.SP='T'


\be_khnip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PJ] [18.22]
:: OPIS: Przed redagowaniem pola KHNIP tabeli PB
::----------------------------------------------------------------------------------------------------------------------
PB.SP='T'


\be_nrfak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PJ] [18.22]
:: OPIS: Przed redagowaniem pola NRFAK tabeli PB
::----------------------------------------------------------------------------------------------------------------------
PB.SP='T'


\ae_pb_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PJ] [18.22]
:: OPIS: Po redagowaniu pola SP tabeli PB
::----------------------------------------------------------------------------------------------------------------------
{? PB.SP='T' & PB.KH<>null & (PB.KHNIP='' | PB.KHNIP<>PB.KH().NIP)
|| PB.KHNIP:=PB.KH().NIP
|? PB.SP='N'
|| {? PB.SP_WYM<>'T' | UNPAR.P10<>'T' |
      FUN.ask('Przelew jest związany z wymaganym split payment.\nCzy zmienić typ przelewu?'@)
   || VAR_EDIT.KW:=0;
      win_disp
   || PB.SP:='T'
   ?}
?};
{? PB.SP='T' & PB.NRFAK='' || PB.NRFAK:=PB.SYM_ZEW ?};
exec('set_split_field','homebank');
1


\ae_spv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PJ] [18.22]
:: OPIS: Po redagowaniu pola SP_V tabeli PB
::----------------------------------------------------------------------------------------------------------------------
PB.SP_V:=PB.SP_V$2;
1


\bv_pb_sp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.22]
:: OPIS: Przed wyświetleniem pola PB.SP
::----------------------------------------------------------------------------------------------------------------------
exec('set_split_field','homebank','PB_EDI1');
~~


\ae_dp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Po redakcji pola PAR_WYDR.DPAR1
::  OLD: \ae_dp/przelew.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.TABAKR:='US';
exec('ae_rbus','!hbn_prz_dark')


\be_dpar1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Przed redakcja pola PAR_WYDR.DPAR1
::----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.OMASKA<>4


\p_eks_window
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [23.25]
:: OPIS: Furmuła wyświetla popup służący do wyboru symbolu typu przelewu.
::   WE: _a - Czy sprawdzać bank.
::            1 - tak (domyślne)
::            0 - nie
::       _b - Czy wyświetlać komunikat o błędym banku.
::            1 - tak
::            0 - nie (domyślne)
::   WY: STRING [1] - symbol typu przelewu.
::----------------------------------------------------------------------------------------------------------------------
value:=-1;
{? var_pres('_a')<0 || _a:=1 ?};
{? var_pres('_b')<0 || _b:=0 ?};
_check_bank:=_a;
_show_info:=_b;
B.cntx_psh();
{? ~_check_bank | (-(5+PB.NBD().NB)='mbank' | (2-(6+PB.RD))='1140')
|| popup(0,'Wybór symbolu typu przelewu',
            '0 - Zwykły przelew',,"value:=0",
            '1 - Przelew natychmiastowy Express Elixir', , "value:=1",
            '2 - Przelew natychmiastowy BlueCash',,"value:=2",
            '5 - Przelew Sorbnet (niedozwolony dla zleceń do ZUS)',,"value:=5"
   )
|| {? _show_info=1
   || FUN.info('Nie można zmienić typu przelewu. Akcja dostępna wyłącznie dla mBanku.'@)
   ?}
?};
_result:=$value;
 VAR_DEL.delete('value');
 B.cntx_pop();
_result


\f3_pb_peks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [23.25]
:: OPIS: F3 dla typu przelewu
::----------------------------------------------------------------------------------------------------------------------
_result:=exec('p_eks_window','!hbn_prz_dark');
{? _result<>'-1'
||  PB.P_EKS:=_result
?};
~~

:Sign Version 2.0 jowisz:1045 2023/12/29 10:50:15 2369edc926c4616646cc9f1081da53dae6c04751cf617d4d6051ce7ec7e6d631beb68a04dc2ab57d18721894e833a3568e352fdc347cc13171a05826bc91a7ef51269d70e82179507434883a787f8cd23cec96251bc3d883c0f03ba7673880b0caa211061b0fd64ff6c544073fabfb22feef52d02cf30879bd443eedd749922f
