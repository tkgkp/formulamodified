:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ppl_pll_zmmc.fml
:: Utworzony: 11.03.2016
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły czynności PPL_PLL_ZMMC — Zamknięcie miesiąca.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Zamknięcie miesiąca - główna formuła czynności.
::   WE: O [_O] - wskazanie listy płac, na rzecz której czynność będzie wykonana
::       MIESIAC [_STRING] - sposób zamykania miesiąca:
::          'T' - zamknięte zostaną wszystkie listy płac z miesiąca wskazanej listy
::          'N' - zamknięta zostanie wyłącznie wskazana lista płac
::   WY:
::  OLD: \obliczkz/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
::# kind=WE, symbol=O, type=_O, name=Wskazanie listy płac, required=T, keyref=T
::# kind=WE, symbol=MIESIAC, type=STRING, name=Zamknięcie wszystkich list miesiąca (T/N), required=T, keyref=N, fml_val="exec('all','!ppl_pll_zmmc',_a)"
::
::# permissions=F_ZATR,UD_SKL

_par:=params_get();
params_set(_par);

_in:=_par.in;
_ib:=_par.int;
_rv:=_par.out;
_mp:=_par.mp;

_id:=exec('ref2uid','#table',_in.O);
_result:='';

{? _id=''
|| _result:=exec('error','!ppl_pll_zmmc')

|| _value:=exec('do','!ppl_pll_zmmc',_in.O,_in.MIESIAC);
   {? type_of(_value)=type_of(0)
   || {? _mp.isMicro()
      || _mp.cancel()
      |? _value<>0
      || _mp.done()
      || _mp.keep()
      ?}
   || _result:=_value
   ?}
?};

{? _result<>''
:  obsługa błędów
|| _mp.error(_result);
   FUN.emsg(_result)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Zamknięcie miesiąca - formuła opisu zadania.
::   WE:
::   WY: opis czynności na liście zadań
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().mp.load(exec('kind_in','#b_port'));
_lt:='';
_dt:='';
_mies:=(_in.MIESIAC='T');

SEEK.O:=_in.O;
{? SEEK.O<>null
|| {? _mies
   || _dt:=date(O.R,O.M,0)$8
   || _lt:=~O.LT
   ?}
?};

{? _mies
|| {? +_lt | +_dt
   || 'Zamknięcie miesiąca %1'@@[{? +_lt || _lt || _dt ?}]
   || 'Zamknięcie miesiąca'@@
   ?}
|| {? +_lt | +_dt
   || 'Zamknięcie listy %1'@@[{? +_lt || _lt || _dt ?}]
   || 'Zamknięcie listy'@@
   ?}
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Zwraca treść komunikatu błędu.
::   WE:
::   WY: treść komunikatu
::----------------------------------------------------------------------------------------------------------------------
'Zamknięcie list płac niemożliwe.'@


\all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła na wybór wartości parametru MIESIAC
::   WE:
::   WY: T/N - zależnie od wyboru
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Zamknięcie wszystkich list miesiąca?'@,,'Tak','Nie');
{? _choice=1 || 'T'
|? _choice=2 || 'N'
|| _a
?}


\do
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws
:: OPIS: Zamyka wskazaną listę lub wszystkie listy miesiąca.
::   WE: _a [_O] - wskazanie listy
::       _b [STRING] - zamknięcie miesiąca (T/N)
::   WY: 1 - sukces
::       0 - wystąpił błąd
::  OLD: \zamkmie/kali.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
params_set(_par);
_mp:=_par.mp;

SEEK.O:=_a;
SEEK.O();

exec('dekl','lista_plac');

{? _b<>'T'
|| {? O.Z='T'
   || FUN.info('Lista płac %1 została już zamknięta.'@[~O.LT]);
      return(1)
   || _arg:=exec('ppl_pll_zmmc_001_arg','ppl',O.ref());
      {? Plugin.run('PPL_PLL_ZMMC_001',_arg)=0
      || FUN.emsg(exec('error','!ppl_pll_zmmc'));
         exec('ppl_pll_zmmc_001_rap','ppl',_arg,0);
         return(0)
      ?};
      O.Z:='T';
      {? ~O.put()
      || return(exec('error','!ppl_pll_zmmc'))
      || {? exec('kzup_licz','lista_zamk',O.ref())
         || Plugin.run('PPL_PLL_ZMMC_002',O.ref())
         || O.Z:='N';
            O.put();
            return(exec('error','!ppl_pll_zmmc'))
         ?};
         exec('storno_zamknij','lista_pow',O.ref());
         FUN.info('Zamknięto listę płac %1.'@[~O.LT]);
         return(1)
      ?}
   ?}
|? ~exec('no_limit','schemat','PPL')
|| return(exec('error','!ppl_pll_zmmc'))
?};

:: okienko redagowania
_REP:=tab_tmp(,
      'RESULT','INTEGER','',
      'MONTH','STRING[20]','Miesiąc list płac'@
   );
_REP.MONTH:=date(O.R,O.M,0)$8;
_wnd:=_REP.mk_edit('Zamknięcie list płac za miesiąc'@,0);
_REP.win_efld(_wnd,,'MONTH',,,,,1);
exec('zakoncz','#window',_REP,_wnd,~_mp.isMicro(),
   "cur_tab().RESULT:=1;'key:Esc'",,,
   exec('text_red_zakoncz','#window','PKD_H')
);
exec('ok_esc','#window',_REP,_wnd,~_mp.isMicro(),
   "cur_tab().RESULT:=2;'key:Esc'",
   "cur_tab().RESULT:=0;'key:Esc'",,,,
   exec('text_red_ok','#window')
);

_REP.win_edit(_wnd);
_REP.edit();
_todo:=_REP.RESULT;

{? _todo=0
|| return(0)
?};

:: lista zamykanych nagłówków list płac
_O:=tab_tmp(1,'SQL_REF','STRING[16]','Wskazanie'@);

_err:=0;
_op:=_ou:='';
O.cntx_psh();
O.index('LISTYMIE');
O.prefix(exec('ref_firma','ustawienia'),O.R,O.M);

: sprawdzenie możliwości zamknięcia list
_arg:=exec('ppl_pll_zmmc_001_arg','ppl');
_loop:=O.first();
{!
|? _loop
|! _arg.O:=O.ref();
   {? Plugin.run('PPL_PLL_ZMMC_001',_arg)=0
   || _err+=1
   ?};
   _loop:=O.next()
!};
{? _err<>0
|| FUN.emsg('Listy płac miesiąca %1 nie mogą być zamknięte.'@[date(O.R,O.M,0)$8]);
   exec('ppl_pll_zmmc_001_rap','ppl',_arg,1);
   O.cntx_pop();
   return(0)
?};

: blokowanie zamykanych list
_loop:=O.first();
_lock:=1;
{!
|? _loop & _lock
|! {? O.r_lock(1,1,1)
   || {? (O.R<>O.RP | O.M<>O.MP) & _op*$date(O.RP,O.MP,0)=0
      || _op+=$date(O.RP,O.MP,0)+',';
         O.cntx_psh();
         O.index('LISTYPOD');
         O.prefix(O.FIRMA,O.RP,O.MP);
         _loop:=O.first();
         {!
         |? _loop & _lock
         |! {? O.r_lock(1,1,1)
            || _loop:=O.next()
            || _lock:=0
            ?}
         !};
         O.cntx_pop()
      ?};
      {? (O.R<>O.RU | O.M<>O.MU) & _ou*$date(O.RU,O.MU,0)=0
      || _ou+=$date(O.RU,O.MU,0)+',';
         O.cntx_psh();
         O.index('LISTYUBZ');
         O.prefix(O.FIRMA,O.RU,O.MU);
         _loop:=O.first();
         {!
         |? _loop & _lock
         |! {? O.r_lock(1,1,1)
            || _loop:=O.next()
            || _lock:=0
            ?}
         !};
         O.cntx_pop()
      ?};
      _loop:=O.next()
   || _loop:=0;
      _lock:=0
   ?}
!};
{? _lock & O.first()
|| {!
   |? {? O.Z<>'T'
      || O.Z:='T';
         O.OLAP:='T';
         {? O.put()
         || {? exec('kzup_licz','lista_zamk',O.ref(),1)
            || Plugin.run('PPL_PLL_ZMMC_002',O.ref());
               _O.SQL_REF:=$O.ref();
               _O.add()
            || O.Z:='N';
               O.put();
               _err+=1
            ?}
         || _err+=1
         ?}
      ?};
      O.next()
   !}
?};
: zdejmij blokady
unlock_r();
O.cntx_pop();
{? _lock=0
|| FUN.emsg('Nie udało się zablokować nagłówków list płac właściwych dla zamykanego miesiąca.'@);
   return(0)
?};

P.cntx_psh();
P.clear();
_ok:=
   ~_err &
   exec('kredyt','!ppl_pll_zmmc') &
   exec('umowa','!ppl_pll_zmmc') &
   {? exec('lic','#b_domain',exec('domain_ref','#b_domain','OBE'))
   || exec('zaliczka','!ppl_pll_zmmc')
   || 1
   ?};
P.cntx_pop();

:: zamknij storna
_loop:=_O.first();
{!
|? _loop
|! {? O.seek(_O.SQL_REF)
   || exec('storno_zamknij','lista_pow',O.ref())
   ?};
   _loop:=_O.next()
!};

{? _ok
|| FUN.emsg(
      'Zamknięto miesiąc %1.'@
      [date(O.R,O.M,1)$8]
   );
   _todo=1
|| FUN.emsg(
      'Podczas zamykania miesiąca %1 wystąpiły błędy.\n'
      'Po usunięciu ich przyczyn, czynność należy powtórzyć.'@
      [date(O.R,O.M,1)$8]
   );
   0
?}


\kredyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DD [12.41]
:: OPIS: Zamkniecie miesiąca dla kartoteki kredytow
::   WE:
::   WY:
::  OLD: \ZamkMies/kredyt.fml
::----------------------------------------------------------------------------------------------------------------------
:: lista pracowników z informacją o rozliczeniu kredytu na listach płac
_p_ls:=sql(
   'select LS.P, O.LT, LS.RB, LS.KW '
   'from @LS join O using(LS.O,O.REFERENCE) join R using(LS.RB,R.REFERENCE) '
   'where LS.REFERENCE like \'%1\' and '
   '  O.FIRMA=:_a and O.F_ZATR=:_b and O.R=:_c and O.M=:_d and '
   '  R.RK=\'K\' and LS.KW<>0 '
   'order by 1, 3, 2'
   [(5+O.LT)+'%'],
   exec('ref_firma','ustawienia'),O.F_ZATR,O.R,O.M
);
{? type_of(_p_ls)<>type_of(SYSLOG)
|| return(0)
?};

:: lista pracowników z informacją o rozliczeniu kredytu w historii rozliczenia
_p_kr:=sql(
   'select distinct K.P, K.PO, KRE_HIS.OPIS '
   'from KRE_HIS join K using(KRE_HIS.KREDYT,K.REFERENCE) join P using(K.P,P.REFERENCE) '
   'where '
   '  P.FIRMA=:_a and '
   '  K.DR<=to_date(:_b) and '
   '  KRE_HIS.DATA=to_date(:_b) and '
   '  KRE_HIS.OPIS like \'%1\' '
   'order by 1, 2'
   [(5+~O.LT)+'%'],
   exec('ref_firma','ustawienia'),
   date(O.R,O.M,0)
);
{? type_of(_p_kr)<>type_of(SYSLOG)
|| return(0)
?};

_err:=0;

R.cntx_psh();
R.index('RUBKLKOD');
R.prefix('K');

{? _p_kr.first()
|| {!
   |? {? P.seek(_p_kr.P) & R.seek(_p_kr.PO)
      || _msc:=date(O.R,O.M,0);
         _lst:=~-_p_kr.OPIS;
         exec('kredyt_listy','!ppl_pll_zmmc',P.ref(),_msc,_lst,R.ref())
      ?};
      _p_kr.next()
   !}
?};
{? _p_ls.first()
|| {!
   |? {? P.seek(_p_ls.P) & R.seek(_p_ls.RB)
      || _msc:=date(O.R,O.M,0);
         _lst:=~-_p_ls.LT;
         _Kwota:=_p_ls.KW;
         {? ~exec('kredyt_rozlicz','!ppl_pll_zmmc',P.ref(),R.ref(),_Kwota,_lst,_msc)
         || _err+=1
         ?}
      ?};
      _p_ls.next()
   !}
?};

R.cntx_pop();

_err=0


\kredyt_listy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK (12.41)
:: OPIS: Usuwa rekord jeżeli nie ma rozliczenia kredytu na liście
::   WE: _a - wskazanie pracownika
::       _b - data na ostatni dzień miesiąca listy
::       _c - oznaczenie listy płac
::       _d - rubryka
::  OLD: \del_list/kredyt.fml
::----------------------------------------------------------------------------------------------------------------------
KRE_HIS.cntx_psh();
KRE_HIS.index('KRE_HIS');

K.cntx_psh();
K.index('PRACPOZ');
K.prefix(_a,_d);
{? K.first()
|| {!
   |? KRE_HIS.prefix(K.ref(),_b,_c);
      {? KRE_HIS.first()
      || KRE_HIS.del()
      ?};
      K.next()
   !}
?};
K.cntx_pop();
KRE_HIS.cntx_pop()


\kredyt_rozlicz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO
:: OPIS: Aktualizacja przebiegu kredytu na podstawie danych z listy płac.
::   WE: _a - wskazanie pracownika
::       _b - wskazanie do tabeli rubryki
::       _c - kwota pobrana z listy płac
::       _d - oznaczenie listy płac, z której pochodzi wartość _c
::       _e - ostatni dzień miesiąca listy płac _d
::   WY:
::  OLD: \Rozlicz/kredyt.fml
::----------------------------------------------------------------------------------------------------------------------
_p:=P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' (nr teczki: '+P.T+')';
_ok:=0;

K.cntx_psh();
K.index('PRACPOZ');
K.prefix(_a,_b);
KRE_HIS.cntx_psh();
KRE_HIS.index('KRE_HIS');
{? K.first()
|| {!
   |? {? K.DR<=_e
      || {? (K.KP<0 & K.KS<0) | (K.KP>=0 & K.KR>0) | (R.RN=812 & K.size=1)
         || KRE_HIS.prefix(K.ref(),_e,_d);
            {? KRE_HIS.first()
            || KRE_HIS.KWOTA:=_c;
               _ok:=KRE_HIS.put()
            || KRE_HIS.KREDYT:=K.ref();
               KRE_HIS.DATA:=_e;
               KRE_HIS.KWOTA:=_c;
               KRE_HIS.OPIS:=_d;
               _ok:=KRE_HIS.add()
            ?}
         ?};
         {? R.RN=812 & K.KS<0
         || ntc_send(,,,_p,
               'Stan zgromadzonych składek dla kodu %1 jest ujemny '
               'i wynosi %2 zł. Skontroluj rozliczenie.'@
               [$R.RN,$K.KS]
            )
         ?};
         {? K.KP<0 & K.KS>0
         || ntc_send(,,,_p,
               'Rozliczenie kredytu %1 na liście płac %2 '
               'doprowadziło do nadpłacenia kwoty %3 zł.'@
               [R.RT,_d,$K.KS]
            )
         ?}
      ?};
      K.next()
   !};
   {? ~_ok
   || ntc_send(,,,_p,
         'Rozliczenie kredytu %1 na liście płac %2 kwoty %3 zł. '
         'nie jest zrealizowane w kartotece pożyczek. '
         'Wyliczona na liście rata spowodowała nadpłatę.'@
         [R.RT,_d,$_c]
      )
   ?}
|| ntc_send(,,,_p,
      'Brak informacji o kredycie %1, '
      'rozliczanym na liście płac %2.'@
      [R.RT,_d]
   )
?};

KRE_HIS.cntx_pop();
K.cntx_pop();

_ok


\kredyt_sprawdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ATA
:: OPIS: Usuwa rekord jezeli nie ma rozliczenia kredytu na liście
::   WE: _a - odwolanie do tabeli pracownikow
::       _b - odwolanie do tabeli rubryk
::       _c - oznaczenie listy plac
::       _d - ostatni dzien miesiaca listy plac
::  OLD: \SprRozl/kredyt.fml
::----------------------------------------------------------------------------------------------------------------------
K.cntx_psh();
K.index('PRACPOZ');
K.prefix(_a,_b);
{? K.first()
|| {!
   |? {? K.DR<=_d
      || {? (K.KP<0 & K.KS<=0) | (K.KP>=0 & K.KR>0)
         || _akt:={? K.KS=0 || 0 || 1 ?};
            KRE_HIS.cntx_psh();
            KRE_HIS.index('KRE_HIS');
            KRE_HIS.prefix(K.ref(),_d,_c);
            {? KRE_HIS.first()
            || KRE_HIS.del()
            ?};
            KRE_HIS.cntx_pop()
         ?}
      ?};
      K.next()
   !}
?};
K.cntx_pop()


\umowa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.30]
:: OPIS: Procedura zamkniecia miesiaca, aktualizuje zapisy w tabeli UMLOJP i UMLOJN.
::       Zalozenia:
::          - Zamykany miesiac wyznaczany jest przez biezacy rekord tabeli O (O.R, O.M).
::          - Zapisy automatyczne (UMLOJP.RODZAJ='A') tworzone sa z data date(O.R,O.M,1).
::          - W kazdym miesiacu moze wystapic tylko jeden zapis automatyczny (UMLOJP.RODZAJ='A') i wiele zapisow
::            recznych (UMLOJP.RODZAJ='R').
::          - Miesiaca NIE mozna uznac za odpracowanego, jezeli w calosci byl miesiacem nieobecnosci, przy czym pod
::            uwage brane sa zapisy (nieobecnosci) z przebiegu zatrudnienia, czyli:
::             1) B - urlop bezplatny;
::             2) O - sluzba wojskowa;
::             3) W - urlop wychowawczy.
::   WE:
::   WY: status operacji
::       0 - wystapily bledy
::       1 - operacja zakoczona sukcesem
::  OLD: \ZamkMies/umloj.fml
::----------------------------------------------------------------------------------------------------------------------
_err:=0;
_dtp:=date(O.R,O.M,1);
_dtk:=date(O.R,O.M,0);

KT.cntx_psh();
KT.prefix();
KAL_NAZW.cntx_psh();
KAL_NAZW.index('KAL_NAZW');
KAL_NAZW.prefix(exec('ref_firma','ustawienia'));
OSOBA.cntx_psh();
OSOBA.prefix();
P.cntx_psh();
P.index('PRACONAZ');
P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.P);
UMLOJN.cntx_psh();
UMLOJN.index('TPD');
UMLOJP.cntx_psh();
UMLOJP.index('RODZAJ');
UMLOJP.prefix();

_dp:=P.first();
{!
|? _dp
|! UMLOJN.prefix('L',P.ref());
   {? UMLOJN.find_le(_dtk)
   || {? P.r_lock(1,1,1)
      || _prac:=exec('P','#to_string');
         echo('Aktualizacja kartoteki umów lojalnościowych.'@+_prac,'Proszę czekać...'@);
         _aktywny:=(P.DZA<=_dtk & (P.DZ=date(0,0,0) | _dtp<=P.DZ));
         exec('kal_prac','personel',O.R);
:        Pomin, jezeli nieobecnosci trwały "roboczo" cały miesiąc.
         _pomin:=(exec('licz_kal_dgr','nieobecnosc',_dtp,_dtk,'d','2,3,15')=O.DR);
         {!
         |? {? UMLOJN.DTP<=_dtk
            || do();
               {? exec('umlojn_stan','lista_licz',1)='!'
               || _err+=1
               |? UMLOJP.find_key(UMLOJN.ref(),'A',_dtp)
:                 Zapis juz jest - powtorne zamkniecie miesiaca.
               || {? _pomin | ~_aktywny
                  || UMLOJN.POZOST+=UMLOJP.KW;
                     {? UMLOJN.put()
                     || UMLOJP.del()
                     ?}
                  || _rata:=exec('umlojn_rata','lista_licz',UMLOJP.KW);
                     {? _rata=0
:                       Nowa rata jest zerowa - usuwamy rekord.
                     || UMLOJN.POZOST+=UMLOJP.KW;
                        {? UMLOJN.put()
                        || UMLOJP.del()
                        ?}
                     |? _rata<>UMLOJP.KW
:                       Rata zmienila sie.
                     || UMLOJN.POZOST-=_rata-UMLOJP.KW;
                        {? UMLOJN.put()
                        || UMLOJP.KW:=_rata;
                           UMLOJP.put()
                        ?}
                     ?}
                  ?}
               ||
:                 Zapisu nie ma - pierwsze zamkniecie miesiaca.
                  {? ~_pomin & _aktywny
                  || _rata:=exec('umlojn_rata','lista_licz');
                     {? _rata
                     || UMLOJP.blank(1);
                        UMLOJP.UMLOJN:=UMLOJN.ref();
                        UMLOJP.DT:=_dtp;
                        UMLOJP.KW:=_rata;
                        UMLOJP.RODZAJ:='A';
                        {? UMLOJP.add()
                        || UMLOJN.POZOST-=UMLOJP.KW;
                           UMLOJN.put()
                        ?}
                     ?}
                  ?}
               ?};
               {? ~end()
               || _err+=1
               ?};
               {? ~_aktywny & UMLOJN.POZOST>0
               || ntc_send(,,,_prac,
                     'Umowa lojalnościowa nr: %1 zawarta w dniu %2 '
                     'nie została uregulowana. Do spłaty pozostało %3 zł.'@
                     [UMLOJN.NU,$UMLOJN.DTU,$UMLOJN.POZOST]
                  )
               ?}
            ?};
            UMLOJN.next()
         !};
         P.r_unlock()
      || _err+=1
      ?}
   ?};
   _dp:=P.next()
!};
echo();

UMLOJP.cntx_pop();
UMLOJN.cntx_pop();
P.cntx_pop();
OSOBA.cntx_pop();
KAL_NAZW.cntx_pop();
KT.cntx_pop();

_err=0


\zaliczka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2009]
:: OPIS: Przeniesienie danych do pozycji w zaliczkach w module finansowym z rozliczenia spłaty zadłużenia zwiazanego z
::       zaliczkami na konto przyszłych wynagrodzeń.
::  OLD: \zalicz_zamk/komornik.fml
::----------------------------------------------------------------------------------------------------------------------
_firma:=exec('ref_firma','ustawienia');
KOM_OS.index('KOM_OZ');
KOM_OS.prefix(_firma,'T',);
{? KOM_OS.first()
|| {!
   |? {? KOM_OS.EZAL().ZAM='T'
      || KOM_OS.A:='N';
         KOM_OS.put()
      |? EZAL.ZAM='N'
      || KOM_OS.A:='T';
         KOM_OS.put()
      ?};
      KOM_OS.next()
   !}
?};

ZALICZ.index('ZALICZKA');
ZALICZ.prefix(_firma,'T',);
{? ZALICZ.first()
|| {!
   |? {? ZALICZ.EZAL().ZAM='T'
      || ZALICZ.A:='N';
         ZALICZ.put()
      |? EZAL.ZAM='N'
      || ZALICZ.A:='T';
         ZALICZ.put()
      ?};
      ZALICZ.next()
   !}
?};
ZALICZ.prefix();
KOM_SP.index('KOM_SP');
EZALPOZ.index('ZALICZKA');
EZAL.index('INDEX5TZ');
EZAL.prefix(_firma,'T','T','T');
{? EZAL.first()
|| _size:=EZAL.size;
   _ref:=obj_new(_size);
   {! _ind:=1 .. _size
   |! _ref[_ind]:=null()
   !};
   _ind:=0;
   {!
   |? _ind+=1;
      EZALPOZ.prefix(EZAL.ref());
      {? EZALPOZ.first & _ind<=_size
      || _ref[_ind]:=EZAL.ref();
         {? KOM_OS.find_key(EZAL.ref())
         || {!
            |? {? 3+EZALPOZ.POCH='PPL'
               || EZAL.ROZCHOD-=EZALPOZ.ROZCHOD;
                  EZAL.PRZYCHOD-=EZALPOZ.PRZYCHOD;
                  EZALPOZ.del()
               || EZALPOZ.next()
               ?}
            !};
            KOM_SP.prefix(KOM_OS.ref());
            {? KOM_SP.first()
            || {!
               |? EZALPOZ.blank();
                  EZALPOZ.POCH:='PPL'+$KOM_SP.ref();
                  EZALPOZ.EZAL:=EZAL.ref();
                  EZALPOZ.PRZYCHOD:=KOM_SP.KW$2;
                  EZAL.PRZYCHOD+=KOM_SP.KW$2;
                  EZALPOZ.DATE_ZAP:=date(KOM_SP.R,KOM_SP.M,0);
                  EZALPOZ.TIME_ZAP:=time();
                  EZALPOZ.ZAL_POCH:='Rok: '+$KOM_SP.R+' moduł płacowy - IP: '+$KOM_SP.P().IP+', '+KOM_SP.OPIS;
                  EZALPOZ.add(1);
                  KOM_SP.next()
               !}
            ?}
         |? ZALICZ.find_key(_firma,'T',EZAL.ref(),O.R,O.M) & ZALICZ.O
         || {!
            |? {? 3+EZALPOZ.POCH='PPL'
               || EZAL.ROZCHOD-=EZALPOZ.ROZCHOD;
                  EZAL.PRZYCHOD-=EZALPOZ.PRZYCHOD;
                  EZALPOZ.del()
               || EZALPOZ.next()
               ?}
            !};
            EZALPOZ.blank();
            EZALPOZ.POCH:='PPL'+$ZALICZ.ref();
            EZALPOZ.EZAL:=EZAL.ref();
            EZALPOZ.ROZCHOD:=ZALICZ.KW;
            EZAL.ROZCHOD+=ZALICZ.KW;
            EZALPOZ.DATE_ZAP:=date(ZALICZ.R,ZALICZ.M,0);
            EZALPOZ.TIME_ZAP:=time();
            EZALPOZ.ZAL_POCH:='Rok: '+$ZALICZ.R+' moduł płacowy - IP: '+$ZALICZ.P().IP+', Lista płac '+~ZALICZ.O().LT;
            EZALPOZ.add(1)
         ?}
      ?};
      EZAL.put();
      EZAL.next()
   !}
?};
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:39 876bd2dcb6f64f3907b69abe3d3f4cfa979cc6261536dc396a8875b702f1725c55646d315e8ecd0b792b15cac5611a921afac76298209d8b7d9496cb9a062b1260b280e31491d9f326e4bbd537fd2c3e0876df15047ff76db844daf4b60ea77e863944f2c1b326d64c0ad0bc99126bdea05ff076a043e35cea286b1f2cd9636e
