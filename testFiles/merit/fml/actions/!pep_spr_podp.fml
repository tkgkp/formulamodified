:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pep_spr_podp.fml
:: Utworzony: 20.07.2021
:: Autor: MicKoc [21.37]
::======================================================================================================================
:: Zawartość: Formuły czynności PEP_SPR_PODP- Weryfikacja podpisów.
::======================================================================================================================

\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Weryfikacja podpisów - główna formuła czynności.
::----------------------------------------------------------------------------------------------------------------------
:: Czynność wymaga podania parametru EDOKUM.
:: Czynność wymaga podania parametru P lub OSOBA. Jeżeli podane zostaną obydwa, to parametr OSOBA jest ignorowany.
::
::
:: IN
::
:: Parametr wejściowy EDOKUM wskazuje na dokument w obiegu.
::# kind=WE, symbol=EDOKUM, type=_EDOKUM, name=Wskazanie na dokument w obiegu, required=T, keyref=T
::
:: OUT
::
:: Parametr wyjściowy INFO informuje o ewentualnym błędzie
::# kind=WY, symbol=INFO, type=MEMO, name=Informacja o wyniku, required=N, keyref=N
::
:: Parametr wyjściowy EDOKUM jeśli wskazuje na dokument w obiegu to ok, przy błędzie/braku/itp null().
::# kind=WY, symbol=EDOKUM, type=_EDOKUM, name=Wskazanie na dokument w obiegu, required=N, keyref=N
::
params_set(_par:=params_get());
_mp:=_par.mp;
_in:=_par.in;
_out:=_par.out;
_ok:=1;

_default:="{? ($('_a.'+_b))(_a)=~~ || ($('_a.'+_b+':=_b'))(_a,_c) ?}";
:: Określenie wartości domyślnych
_default(_in,'EDOKUM',null());
_default(_out,'EDOKUM',null());
_default(_out,'INFO','');

Cntx.psh(EDOKUM,EDOKUMZ,SLO_NAZ);
Cntx.clr(SLO_NAZ);

{? _in.EDOKUM<>~~ & _in.EDOKUM
|| _name:=ref_name(_in.EDOKUM);
   EDOKUM.use(_name); EDOKUM.prefix();
   EDOKUMZ.use('skid_n'+(_name+2)); EDOKUMZ.index('DISP'); EDOKUMZ.prefix();
   {? EDOKUM.seek(_in.EDOKUM,ref_name(_in.EDOKUM),1)
   || _ok:=1
   || _mp.error('Dokument EDOKUM nie został odnaleziony.');
     _ok*=0
   ?}
|| _mp.error('Parametr wejściowy (EDOKUM) musi być podany.');
   _ok*=0
?};

{? _ok
|| _ret:=exec('sprawdz_dokumenty','!pep_spr_podp',EDOKUM.ref());
   {? _ret.EDOKUM
   || _out.INFO:=_ret.INFO;
      _out.EDOKUM:=_ret.EDOKUM;
      _mp.save(,_out);
      _mp.done()
   || _out.INFO:=_ret.INFO;
      _mp.save(,_out);
      _mp.keep()
   ?}
?};

Cntx.pop(EDOKUM,EDOKUMZ,SLO_NAZ);
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Weryfikacja podpisów - formuła opisu czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));
_ret:='Weryfikacja podpisów. '@@;
_default:="{? ($('_a.'+_b))(_a)=~~ || ($('_a.'+_b+':=_b'))(_a,_c) ?}";
:: Określenie wartości domyślnych
_default(_in,'EDOKUM',null());
_ret+=
   {? _in.EDOKUM<>~~ & _in.EDOKUM
   || _name:=ref_name(_in.EDOKUM);
      EDOKUM.use(_name); EDOKUM.prefix();
      EDOKUMZ.use('skid_n'+(_name+2)); EDOKUMZ.index('DISP'); EDOKUMZ.prefix();
      {? EDOKUM.seek(_in.EDOKUM,ref_name(_in.EDOKUM),1)
      || 'Dokument EDOKUM "%1".'@@[exec('EDOKUM','#to_string')]
      || 'Brak dokumentu EDOKUM "%1".'@@[$_in.EDOKUM]
      ?}
   || 'Brak parametru EDOKUM.'@@
   ?};
_ret


\sprawdz_dokumenty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Sprawdzenie podpisów dokumentów
::   WE: _a [REFERENCE] - Wskazanie na EDOKUM
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_opis:='';
_ret:=exec('obj_ntab_set','#array',,'EDOKUM',null(),'INFO','');
_jest:=0;
_sep:=%255;
EDOKUMZ.index('DISP');
EDOKUMZ.prefix(_a);
{? EDOKUMZ.first()
|| _ret.EDOKUM:=_a;
   exec('esign_decl','#esign');
   _esign:=obj_new(@.CLASS.ESIGN);
   {? var_pres('_esign')>100
   || _esign.start();
      {!
      |? {? EDOKUMZ.EDOKUM & EDOKUMZ.TYP_ZAL
         || _esign.v_blob_add(EDOKUMZ,'EDOKUM');
            _jest+=1
         ?};
         EDOKUMZ.next()
      !};
      {? _jest
      || _esign.verify(1);
         {? _esign.TAB.first()
         || {!
            |? _ret.INFO+=_esign.TAB.FORG+_sep+$(+|_esign.TAB.IDSIGN>0)+_sep+$(_esign.TAB.CERTTYPE='qualified')+'\n';
               _esign.TAB.next()
            !}
         ?}
      ?};
      _esign.show();
      _esign.stop()
   ?}
?};
_ret


\test_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Test uruchomienia
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_arg:=exec('mp_run_a','#b__box');
_arg.ACT_UID:='PEP_SPR_PODP';
_arg.UIDREF:=obj_new('EDOKUM');
_arg.UIDREF.EDOKUM:=EDOKUM.uidref();
_arg.PROC_START:='T';
_arg.PORTS_IN:=exec('portsIn','#b__box',_arg.ACT_UID);
exec('portsInSet','#b__box',_arg.PORTS_IN,_arg.ACT_UID,'EDOKUM',EDOKUM.ref());
exec('mp_run','#b__box',_arg);
~~

:Sign Version 2.0 jowisz:1045 2021/09/17 15:16:58 7ada720d2a672bfd5b835e61a8b25534949412ef4fb5fe44cd600aa47275ae18308592e52975ed4bae92dd7c3c3b010967734583d047d4c79fede93c978756a3966980fde4d0b9ee07360e15981ed0914d315868722aadacd1cf88256a139636ef6dc62e200bb14ee8d917b1146500fa30da7eb751230c2dd39b5ad382bb3795
