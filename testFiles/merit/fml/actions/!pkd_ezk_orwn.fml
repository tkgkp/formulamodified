:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_ezk_orwn.fml
:: Utworzony: 13.09.2016
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa czynności PKD_EZK_ORWN - Rej. nieob. na podst. wniosku.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rej. nieob. na podst. wniosku - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::# access=exec('access','!pkd_ezk_orwn')
::# kind=WE, symbol=NWU, type=_NWU, name=Wskazanie wniosku, required=T, keyref=T
::
::# kind=WY, symbol=RESULT, type=STRING, name="Wynik czynności (OK,BŁĄD_TECHNICZNY,BŁĄD_MERYTORYCZNY)", ^
::#          required=N, keyref=N
::# kind=WY, symbol=NWU_AZ, type=STRING, name=Status wniosku, required=N
::# kind=WY, symbol=DESC, type=MEMO, name="Opis", required=N
::
params_set(_par:=params_get());
_mp:=_par.mp;
_in:=_par.in;
_out:=_par.out;
_micro:=_mp.isMicro();
_akcja:=_mp.akcja();
_grupa:=_mp.isGroup();
_obszar:=_mp.pathArea();

_result:='';
_out.RESULT:='OK';
_out.NWU_AZ:='T';
_out.DESC:='';

{? exec('ref2uid','#table',_in.NWU)=''
|| _result:=exec('error','!pkd_ezk_orwn','#NWU')
|| _pytanie:='Czy na pewno chcesz zarejestrować nieobecność na podstawie złożonego wniosku o urlop?'@;
   _pytanie1:='Czy na pewno chcesz odrzucić złożony wniosek o urlop?'@;
   _pytanie2:='Proszę wybrać sposób obsługi złożonego wniosku o urlop'@;
   _choice:=
      {? _grupa
::       Jeżeli obsługa czynności w grupie, to bez żadnych pytań. Zakładamy, że ewentualne potwierdzenie pojawiło się
::       wcześniej.
      || 1
      |? _micro
::       Dla mikroczynności przyciski: OK, Anuluj.
      || _ask:={? _akcja='ODRZUĆ' || _pytanie1 || _pytanie ?};
         FUN.choice(_ask,,'&OK'@,,,,'&Anuluj'@)
::       Dla czynności w procesie przyciski: (Zakończ, Anuluj) lub (Zarejestruj nieobecność, Odrzuć wniosek, Anuluj).
      || _simple:=1;
         {? _obszar
         || {? _akcja='WPROWADŹ'
            || _ask:=_pytanie
            |? _akcja='ODRZUĆ'
            || _ask:=_pytanie1
            || _ask:=_pytanie2;
               _simple:=0
            ?};
            _who:=''

         || _ask:=_pytanie;
::          Jeżeli to nie jest wywołanie z obszaru roboczego (gdzie widać pracownika i wniosek),
::          to pokażmy wybrane szczegóły dotyczące pracownika i jego wniosku.
            _who:='Pracownik: %1'@[exec('record','#to_string',exec('FindAndGet','#table',NWU,_in.NWU,,"P"),0)]+'\n'+
                  'Wniosek o urlop: %1'@[exec('record','#to_string',_in.NWU,0)]+'\n\n';
            _simple:=0
         ?};
         {? _simple | exec('lic','#b_domain','POR')
         || FUN.choice(_who+_ask,,'&Zarejestruj nieobecność'@,,,,'&Anuluj'@)
         || FUN.choice(_who+_ask,,'&Zarejestruj nieobecność'@,'&Odrzuć wniosek'@,,,'&Anuluj'@)
         ?}
      ?};

   {? _choice
   || {? _choice<>2 & _akcja<>'ODRZUĆ'
      || _ret:=exec('wprowadz','!pkd_ezk_orwn',_in.NWU,_grupa);
         _mp.done();
         {? _ret='T'
         || _out.RESULT:='BŁĄD_TECHNICZNY'
         |? _ret='M'
         || _out.RESULT:='BŁĄD_MERYTORYCZNY'
         ?}
      || _ret:=exec('odrzuc','!pkd_ezk_orwn',_in.NWU,_micro);
         {? _ret.CANCEL<>'T'
         || _mp.done();
            {? _ret.ERROR='T'
            || _out.RESULT:='BŁĄD_TECHNICZNY'
            |? _ret.ERROR='M'
            || _out.RESULT:='BŁĄD_MERYTORYCZNY'
            || _out.NWU_AZ:=_ret.AZ;
               _out.DESC:=_ret.DESC
            ?}
         ?}
      ?}

::    Anuluj.
   |? _micro
   || _mp.done()
   || _mp.keep()
   ?}
?};

_mp.save(,_out);

{? _result<>''
::  Obsługa błędów.
|| _mp.error(_result);
   {? ~_grupa
   || FUN.emsg(_result)
   ?}
?};

~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rej. nieob. na podst. wniosku - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));
_tab:=exec('init_desc_tab','pracownik');
_addTab:=obj_new(
:: Wniosek urlopowy - data od
   'NWU_OD',
:: Wniosek urlopowy - data do
   'NWU_DO',
:: Kod składnika płacowego
   'R_RN',
:: Opis składnika płacowego
   'R_RT'
);
:: inicjalizacja tablicy dodatkowej
{! _ii..obj_len(_addTab) |! _addTab[_ii]:='' !};

UD_SKL.cntx_psh();
UD_SKL.prefix();
STN.cntx_psh();
STN.prefix();
OSOBA.cntx_psh();
OSOBA.prefix();
P.cntx_psh();
P.prefix();
NWU.cntx_psh();
NWU.prefix();
{? type_of(_in.NWU)=type_of(null()) & _in.NWU<>null() & NWU.seek(_in.NWU)
|| NWU.P().OSOBA();
   _mp.keyRef(NWU.uidref(),0,0);
   _mp.keyRef(P.uidref(),0,0);
   _mp.keyRef(OSOBA.uidref(),0,0);
   _tab.ZAW_DANE:='T';
   _tab.NAZWISKO:=OSOBA.NAZWISKO;
   _tab.PIERWSZE:=OSOBA.PIERWSZE;
   _tab.T:=P.T;
   _tab.UD_SKL:=P.WYDZIAL().SYMBOL;
   _tab.STN:=P.ST().ST;
   _addTab.NWU_OD:=NWU.OD$1;
   _addTab.NWU_DO:=NWU.DO$1;
   _addTab.R_RN:=$NWU.R().RN;
   _addTab.R_RT:=NWU.R().RT
|| _tab.ZAW_DANE:='N'
?};
NWU.cntx_pop();
P.cntx_pop();
OSOBA.cntx_pop();
STN.cntx_pop();
UD_SKL.cntx_pop();

{? _tab.ZAW_DANE='T'
|| 'Zarejestruj nieobecność na podstawie wniosku o urlop: '
   '%1 %2, Numer teczki - %3, Jednostka - %4, Stanowisko %5 | %6 - %7 (%8 - %9)'@@
      [_tab.NAZWISKO,_tab.PIERWSZE,_tab.T,_tab.UD_SKL,_tab.STN,_addTab.NWU_OD,_addTab.NWU_DO,_addTab.R_RN,_addTab.R_RT]
|| 'Zarejestruj nieobecność na podstawie wniosku o urlop'@@
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Słownik komunikatów o błędach.
::   WE: [_a] [STRING] - Dodatkowy komunikat lub kod błędu.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_err:={? var_pres('_a')=type_of('') || _a || '' ?};
_ret:='Rejestrowanie nieobecności na podstawie wniosku o urlop niemożliwe.'@;
{? _err='#NWU'
|| _ret+='\n'+'Nie znaleziono wniosku.'@
?};
_ret


\wprowadz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa czynności wywołanej z listy zadań
::   WE: _a [REFERENCE] - Wskazanie wniosku urlopowego.
::       _b [NUMBER]    - Czynność uruchomiona grupowo.
::   WY: Kod wyniku przetwarzania:
::          'T' - wystąpił błąd techniczny;
::          'M' - wystąpił błąd merytoryczny;
::          ''  - wniosek został wprowadzony.
::----------------------------------------------------------------------------------------------------------------------
_nwu:=_a;
_grupa:=_b;
{? ~_grupa
|| exec('KOMM','#object');
   KOMM.init()
?};

KOMM.set_root('Rejestracja nieobecności na podstawie wniosku o urlop');
_ret:=exec('wprowadz_urlop','wnioski_urlopowe',_nwu);
KOMM.sect_end();

{? ~_grupa
|| KOMM.select('Raport z wprowadzania wniosku urlopowego'@)
?};

_ret


\access
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła uprawnień, decyduje o tym, czy dany użytkownik może uruchomić bieżącą instancję czynności.
::   WE:
::   WY: 0 - Użytkownik nie ma uprawnień do wykonania bieżącej instancji czynności.
::       1 - Użytkownik ma uprawnienia do wykonania bieżącej instancji czynności.
::----------------------------------------------------------------------------------------------------------------------
params_set(_par:=params_get());
_mp:=_par.mp;
_in:=_par.in;
_user:=_par.user;

NWU.cntx_psh();
NWU.prefix();
P.cntx_psh();
P.prefix();
{? var_pres('NWU',_in)=type_of(null()) & _in.NWU<>null() & NWU.seek(_in.NWU) & NWU.AZ='T' & P.seek(NWU.P)
:: Udało się znaleźć rekord związany z pracownikiem z wniosku urlopowego - przejdźmy do właściwych testów.
|| _ret:=
::    Dla formy współpracy pracownika składającego wniosek o urlop
::    musi istnieć możliwość uruchomienia bieżącej czynności.
      exec('dostepna_a','f_zatr',P.F_ZATR,_mp.buf_act.Ref) &
::    Użytkownik weryfikowany musi mieć uprawnienia do formy współpracy pracownika składającego wniosek o urlop.
      exec('dostepny_u','f_zatr',P.FIRMA,_user,P.F_ZATR) &
::    Użytkownik weryfikowany musi mieć uprawnienia do jednostki organizacyjnej pracownika składającego wniosek o urlop.
      exec('dostepny_ud_skl','schemat',_user,_mp.buf_act.B_DOMAIN,P.WYDZIAL)

:: Jeżeli jest jakiś problem z parametrem wejściowym (np. rekord został usunięty), to na uruchomienie czynności
:: pozwólmy każdemu. Tylko w ten sposób możemy sprawić, aby czynność zwinęła się.
|| _ret:=1
?};
P.cntx_pop();
NWU.cntx_pop();

_ret


\nwu_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Usuń - przed" w oknie WER tabeli NWU.
::   WE:
::   WY:
::  OLD: \del_wnio/wnio_url.fml
::----------------------------------------------------------------------------------------------------------------------
{? NWU.N | NWU.OS_N
|| FUN.info(
      'Na podstawie bieżącego wniosku została utworzona nieobecność.\n'
      'Aby usunąć wniosek należy najpierw usunąć nieobecność.'@
   )

|? _edokum:=null();
   _nwopo:=null();
   _ask_text:='';
   {? exec('upgrade2226_nru01','wnioski_urlopowe')
   || _nwopo:=exec('FindInSet','#table','NWOPO','NWU',NWU.ref());
      {? _nwopo<>null()
      || _ask_text+='Wniosek z powiązanym oświadczeniem o urlop opiekuńczy.\n'@+
         'Usunięcie wniosku, usunie również zapis dotyczący powiązanego oświadczenia.\n\n'@
      ?}
   ?};
   {? exec('lic','#b_domain','POR')
   || EDOKUM.cntx_psh();
      EDOKUM.use(exec('nwu_edokum_mask','portal_method_chr'));
      EDOKUM.index('DOK_POW');
      EDOKUM.prefix(NWU.uidref());
      {? EDOKUM.first()
      || _edokum:=EDOKUM.ref()
      ?};
      EDOKUM.cntx_pop();
      {? _edokum<>null()
      || _ask_text+='Wniosek wprowadzony na portalu. Jego usunięcie będzie dotyczyło również zapisów na portalu.\n\n'@
      ?}
   ?};
   {? _ask_text<>'' & FUN.ask(_ask_text+'Czy na pewno chcesz kontynuować?'@)
   || do();
      (_edokum & exec('EDOKUM_del','portal_wnioski',_edokum,0) | _edokum=null()) & NWU.del(,1);
      end()
   ?};
   _edokum<>null() | _nwopo<>null()
|| ~~

|? exec('del_ask','#table')
|| NWU.del()
?};
0


\nwu_wprowadz_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji grupowej "Wprowadź - przed" w oknie WER tabeli NWU.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('KOMM','#object');
KOMM.init();
FUN.ask('Czy na pewno chcesz wprowadzić nieobecności na podstawie zaznaczonych wniosków urlopowych?'@)


\nwu_wprowadz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Wprowadź - przed" w oknie WER tabeli NWU.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~(NWU.AZ='T' & NWU.N=null() & NWU.OS_N=null())
|| return(0)
?};

:: Ewentualne pytanie o potwierdzenie wprowadzania (dla zgodności) przeniesione zostało do obsługi samej czynności.
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='PKD_EZK_ORWN';
_params.UIDREF:=NWU.uidref();
_params.AKCJA:='WPROWADŹ';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
_params.GRUPA:={? NWU.sel_size() || 'T' || 'N' ?};
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'NWU',NWU.ref());
exec('mp_run','#b__box',_params)


\nwu_wprowadz_ag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Wprowadź - przed" w oknie WER tabeli NWU.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KOMM.select('Raport z wprowadzania wniosku urlopowego'@)


\nwu_zalaczniki_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Obsługa akcji "Załączniki - przed" w oknie WER tabeli NWU.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('show_zalacz','zalacz','P','NWU',1)


\nwu_zadania_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Zadania - przed" w oknie WER tabeli NWU.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('todo_select','#b__box',NWU.uidref())


\odrzuc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Obsługa czynności wywołanej z listy zadań
::   WE: _a [REFERENCE] - Wskazanie wniosku urlopowego.
::       [_b][NUMBER]   - Czy pomijać okienko z powodem odrzucenia?
::   WY: _ret [OBJECT] - obiekt zawierający informacje o wyniku operacji:
::             POWÓD ODRZUCENIA (MEMO),
::             KOD WYNIKU PRZETWARZANIA:
::                'T' - wystąpił błąd techniczny;
::                'M' - wystąpił błąd merytoryczny;
::                ''  - wniosek został odrzucony.
::----------------------------------------------------------------------------------------------------------------------
_nwu:=_a;
_hide_wnd:={? var_pres('_b')=type_of(0) & _b=1 || 1 || 0 ?};

_ret:=obj_new('AZ','ERROR','DESC','CANCEL');
_ret.AZ:=_ret.ERROR:=_ret.DESC:='';
_ret.CANCEL:='N';

exec('KOMM','#object');
KOMM.init();

KOMM.set_root('Odrzucenie wniosku o urlop');
_result:=exec('odrzuc_wniosek','!pkd_ezk_orwn',_nwu,~_hide_wnd);
_ret.CANCEL:=_result.CANCEL;
{? _ret.CANCEL='N'
|| _ret.AZ:=_result.AZ;
   _ret.ERROR:=_result.ERROR;
   _ret.DESC:=_result.DESC
?};
KOMM.sect_end();
KOMM.select('Raport z odrzucenia wniosku urlopowego'@);

_ret


\odrzuc_wniosek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [21.37]
:: OPIS: Odrzucenie wniosku urlopowego przez kadry. Komunikaty zapisywane są do obiektu KOMM - zakłada się, że
::       został on wcześniej zainicjowany i ustawiony.
::   WE: _a [REFERENCE] - Wskazanie wniosku urlopowego.
::       [_b][INTEGER] - Wymagany powód odrzucenia? [0/1 - domyślnie]
::   WY: Tablica nazwana ze statusem przetwarzania.
::          ERROR - Typ komunikatu:
::                   'T' - Błąd techniczny, nie pozwalający na poprawne działanie formuły.
::                   'M' - Błąd merytoryczny, nie pozwalający na realizację celu - odrzucenie wniosku.
::                   ''  - Brak zastrzeżeń - przetwarzanie zakończone powodzeniem. Pole TEKST pozostaje puste.
::          AZ    - Status wniosku.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) & _a<>null() & ref_tab(_a)=NWU
|| _nwu:=_a
|| KOMM.add('Niepoprawny parametr wywołania.'@);
   return('T')
?};
_reason:={? var_pres('_b')=type_of(0) & _b=0 || 0 || 1 ?};

_prac:=exec('record','#to_string',exec('FindAndGet','#table',NWU,_nwu,,"P",null()),1);

{? KOMM.find_msg(_prac)
:: Kolejne komunikaty dla tego pracownika.
|| KOMM.set_root(_prac)
:: Pierwszy komunikat dla tego pracownika
|| KOMM.sect_beg(_prac)
?};

_ret:=obj_new('AZ','ERROR','DESC','CANCEL');
_ret.AZ:=_ret.ERROR:=_ret.DESC:='';
_ret.CANCEL:='N';

_control:="
   {? (_chk:=__CHK.record(cur_tab(1,1),,'MEMO'))<>''
   || return(_chk)
   ?};
   ''
";

NWU.cntx_psh();
NWU.prefix();
{? ~NWU.seek(_nwu)
|| KOMM.add('Odnalezienie wniosku urlopowego do odrzucenia nie powiodło się.'@,14);
   _ret.ERROR:='T'

|? NWU.AZ<>'T'
|| KOMM.add('Status wniosku [%1] nie pozwala na odrzucenie wniosku. Wymagany status wniosku [%2].'@
            [exec('status','wnioski_urlopowe',NWU.AZ),'Przyjęty'@],14);
   _ret.ERROR:='T'

|? NWU.N<>null() | NWU.OS_N<>null()
|| KOMM.add('Wniosek został już wprowadzony.'@,14);
   _ret.ERROR:='T'

|? _reason & type_of(
      _ret.DESC:=
         exec('edit_memo','#edit',_ret.DESC,'Powód odrzucenia'@,'Odrzucenie wniosku urlopowego'@,50,8,_control)
   )<1
|| KOMM.add('Nie wprowadzono powodu odrzucenia wniosku.'@,14);
   _ret.CANCEL:='T'

|? NWU.AZ:='O';
   NWU.put(1);
   NWU.memo_set(_ret.DESC,'REJECT');
   NWU.memo_put()
|| _ret.AZ:=NWU.AZ

|| KOMM.add('Zapisywanie danych nie powiodło się.'@,14);
   _ret.ERROR:='T'
?};

NWU.cntx_pop();

_ret


\nwu_odrzuc_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [RR,xx]
:: OPIS: Obsługa akcji "Odrzuć - przed" w oknie WER tabeli NWU.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~(NWU.AZ='T' & NWU.N=null() & NWU.OS_N=null())
|| return(0)
?};

:: Ewentualne pytanie o potwierdzenie odrzucenia (dla zgodności) przeniesione zostało do obsługi samej czynności.
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='PKD_EZK_ORWN';
_params.UIDREF:=NWU.uidref();
_params.AKCJA:='ODRZUĆ';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
_params.GRUPA:={? NWU.sel_size() || 'T' || 'N' ?};
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'NWU',NWU.ref());
exec('mp_run','#b__box',_params)


:Sign Version 2.0 jowisz:1045 2023/06/09 14:39:46 be68fb3d0045025ca3987a21123a3e85adaea0f8c41ca730c2cfac7748c8a92a15f0d964de560a076081a860339aa0b975bf6d163fa5b27b453878f2670e318db36a8febf3f73d0fc90b8378fe469c1965c28234144d2bb719c55a27fc03eb9e60e85f4f6c8e6373f0897fc59d9f564875cb7d715f2f447cf2535da021018367
