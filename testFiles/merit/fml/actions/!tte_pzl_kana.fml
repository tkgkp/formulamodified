:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !tte_pzl_kana.fml
:: Utworzony: 03.12.2015
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły czynności TTE_PZL_KANA - Analiza zlecenia
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Główna formuła czynności analizy zlecenia (TTE_PZL_KANA)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

:: WŁAŚCIWOŚCI CZYNNOŚCI
::# permissions=ODDZ
::# properties=SERVICE
::# parses=exec('parses','!tte_pzl_kana')

:: PARAMETRY WE:
::# kind=WE, symbol=ZL, type=_ZL, name=Wskazanie na zlecenie, required=N, keyref=T
{? var_pres('ZL',_in)<>type_of(~~) & var_pres('ZL',_in)<>type_of(null()) || return() ?};
::{? var_pres('ZL',_in)=type_of(~~) || return() ?};

::# kind=WE, symbol=PROP_CENA, type=STRING, name=Czy dodawać propozycję ceny na podstawie analizy?, required=N, keyref=N,fml_val="exec('edit_boolean','#edit',,'Czy dodawać propozycję ceny na podstawie analizy?')"
{? var_pres('PROP_CENA',_in)<>type_of(~~) & var_pres('PROP_CENA',_in)<>type_of('') || return() ?};

::# kind=WE, symbol=WYCEN_RP, type=STRING, name=Czy wyceniać wstecznie dokumenty RP na podstawie analizy?, required=N, keyref=N,,fml_val="exec('edit_boolean','#edit',,'Czy wyceniać wstecznie dokumenty RP na podstawie analizy?')"
{? var_pres('WYCEN_RP',_in)<>type_of(~~) & var_pres('WYCEN_RP',_in)<>type_of('') || return() ?};

::# kind=WE, symbol=AKT, type=STRING, name=Czy aktywować analizę?, required=N, keyref=N,,fml_val="exec('edit_boolean','#edit',,'Czy aktywować analizę?')"
{? var_pres('AKT',_in)<>type_of(~~) & var_pres('AKT',_in)<>type_of('') || return() ?};

::# kind=WE, symbol=ROK, type=NUMBER, name=Rok do analizy (w trybie serwisowym), required=N
{? var_pres('ROK',_in)<>type_of(~~) & var_pres('ROK',_in)<>type_of(0) || return() ?};
{? var_pres('ROK',_in)=type_of(~~) || _in.ROK:=0 ?};

::# kind=WE, symbol=MIESIAC, type=NUMBER, name=Miesiąc do analizy (w trybie serwisowym), required=N
{? var_pres('MIESIAC',_in)<>type_of(~~) & var_pres('MIESIAC',_in)<>type_of(0) || return() ?};
{? var_pres('MIESIAC',_in)=type_of(~~) || _in.MIESIAC:=0 ?};

:: PARAMETRY WY:
::# kind=WY, symbol=RESULT, type=STRING, name="Wynik czynności (OK, gdy analiza została poprawnie przeliczona)", required=N
{? var_pres('RESULT',_out)<>type_of(~~) & var_pres('RESULT',_out)<>type_of('') || return() ?};

_clean_result:=exec('clean','!tte_pzl_kana',_mp,_in);
_can_continue:=_clean_result.RESULT;
_zl:=_clean_result.ZL;

{? _can_continue>0
||
:: WSTĘPNA WALIDACJA
   {? _zl=null()
   || _msg:='Błędna konfiguracja procesu — nie przekazano zlecenia.'@@;
      {? ~_mp.isService() & ~_mp.isAutoRun() || FUN.emsg(_msg) ?};
      _mp.error(_msg);
      return()
   ?};

   {? ZL.seek(_zl)
   ||
::    Czynność uruchomiona jako usługa
::    Jeżeli wystąpi błąd, to RESULT:='BŁĄD' a czynność się kończy
      {? _mp.isService()
      || VAR.A_ZLEC:=ZL.ref();
         KOMM.init(250,,'Wyniki analizy dla zlecenia'@,'',,,0);
         {? ST.AR=0 | ST.AM=0
         || _ok:=0
         || _ok:=exec('anal4zlec','zl_kalk','1',ZL.ref(),,_in.PROP_CENA,_in.WYCEN_RP,_in.AKT)
         ?};
         _out.RESULT:={? _ok || 'OK' || 'BŁĄD' ?};
         _mp.save(,_out);
         _mp.done()

::    Czynność uruchomiona automatycznie lub dla grupy rekordów
::    Jeżeli wystąpi błąd, to czynność pozostaje na ToDo, wpp. zakończenie
      |? _mp.isAutoRun() | _mp.akcja()='GRUPA'
      || {? _mp.isAutoRun() || KOMM.init(250,,'Wyniki analizy dla zlecenia'@,'',,,0) ?};
         _ok:=exec('anal4zlec','zl_kalk','1',ZL.ref(),,_in.PROP_CENA,_in.WYCEN_RP,_in.AKT);
         {? _ok=0 & _mp.isAutoRun() || KOMM.select() ?};
         _out.RESULT:={? _ok || 'OK' || 'BŁĄD' ?};
         _mp.save(,_out);
         {? _mp.isMicro() || _mp.cancel() |? _ok || _mp.done() ?}

::    Zakończenie czynności - oświadczenie operatora (nie musi być zarejestrowana żadna analiza)
      |? _mp.akcja()='ZAKOŃCZ'
      || _msg:=exec('chk_finish','zl_kalk','1',ZL.ref());
         {? FUN.ask(
               'Czy zakończyć analizowanie zlecenia %1?'@[ZL.SYM]+
               {? _msg<>''
               || '\n\n'+_msg
               || ''
               ?}
            )
         || _out.RESULT:='OK';
            ANZH.actions_grayed('WER1','Z:Z');
            _mp.save(,_out);
            _mp.done();
            sel_exit()
         ?}

::    Wywołanie z menu obszaru roboczego TTE_PZL
      |? _mp.akcja()='MENU'
      || _mp.keep();
         _res:=exec('anal_poj','zl_kalk','1',ZL.ref(),1,{? _mp.isMicro() || 0 || 1 ?});
         {? _mp.isMicro() | _res=0 || _mp.cancel() ?}

::    Wywołanie z listy ToDo
      |? _mp.pathTodo()
      || {? _mp.isMicro()
         || _mp.cancel()
         || _mp.keep();
            exec('anal_poj','zl_kalk','1',ZL.ref(),ZL.STAT_N<>'N' & ZL.STAT_K<>'T',1)
         ?}

      || FUN.info('Nie obsłużony kontekst wywołania: %1 %2.'@[_mp.path(),_mp.akcja()]);
         _mp.cancel()
      ?}
   ?}
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Opis dla czynności analizowania zlecenia (TTE_PZL_KANA)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_desc:='';
_keyRefs:=_mp.getRefs();
_in:=_mp.load(exec('kind_in','#b_port'));

:: jest rekord kluczowy to ustawiam odpowiedniego ZL
{? var_pres('[1]',_keyRefs)
|| _tmp:=exec('FindAndGet','#table',ZL,_keyRefs[1],,"SYM",'');
   _desc:={? _tmp<>'' || 'Wykonaj analizę dla zlecenia %1'@@[_tmp] || '' ?}
::|| _desc:=exec('FindAndGet','#table',ZL,_keyRefs[1],,"'Wykonaj analizę dla zlecenia %1'@@[SYM]",'')

:: jest parametr wejściowy to ustawiam odpowiedniego ZL
|? var_pres('ZL',_in)
|| _tmp:=exec('FindAndGet','#table',ZL,_in.ZL,,"SYM",'');
   _desc:={? _tmp<>'' || 'Wykonaj analizę dla zlecenia %1'@@[_tmp] || '' ?}
::|| _desc:=exec('FindAndGet','#table',ZL,_in.ZL,,"'Wykonaj analizę dla zlecenia %1'@@[SYM]",'')

?};
_desc


\action_menu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Analiza zlecenia - właściwa akcja z menu okna wertowania ZL
::----------------------------------------------------------------------------------------------------------------------
{? ZL.sel_size()=0
|| {? ZL.STAT_N='N'
   || exec('anal_poj','zl_kalk','1',ZL.ref(),0,0)

   |? ZL.STAT_K='T'
   || exec('anal_poj','zl_kalk','1',ZL.ref(),0,0)

   |? exec('chk_role','#b__box',OPERATOR.USER,'TTE_PZL_KANA')
   || _args:=exec('mp_run_a','#b__box');
      _args.ACT_UID:='TTE_PZL_KANA';
      _args.UIDREF:=ZL.uidref();
      _args.AKCJA:='MENU';
      _args.PROC_START:='T';
      _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
      exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'ZL',ZL.ref());

      exec('mp_run','#b__box',_args)

   || exec('anal_poj','zl_kalk','1',ZL.ref(),0,0)

   ?}
|| {? ZL.STAT_N='N'
   || KOMM.info('Zlecenie %1 nie zostało przeanalizowane — nie zakończono redakcji nagłówka'@[ZL.SYM])

   |? ZL.STAT_K='T'
   || KOMM.info('Zlecenie %1 nie zostało przeanalizowane — jest zamknięte kosztowo'@[ZL.SYM])

   |? ZL.TYP().DEF_OPCK=null()
   || KOMM.info('Zlecenie %1 nie zostało przeanalizowane — brak domyślnego wariantu analizy'@[ZL.SYM])

   || _args:=exec('mp_run_a','#b__box');
      _args.ACT_UID:='TTE_PZL_KANA';
      _args.UIDREF:=ZL.uidref();
      _args.AKCJA:='GRUPA';
      _args.PROC_START:='T';
      _args.GRUPA:='T';
      _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
      exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'ZL',ZL.ref());

      exec('mp_run','#b__box',_args)

   ?}
?};
~~


\action_menu_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Analiza zlecenia - akcja 'po' z menu okna wertowania ZL
::----------------------------------------------------------------------------------------------------------------------
~~


\action_menu_group_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Analiza zlecenia - akcja 'przed grupą' z menu okna wertowania ZL
::----------------------------------------------------------------------------------------------------------------------
{? exec('chk_role','#b__box',OPERATOR.USER,'TTE_PZL_KANA')
|| _res:=FUN.ask(
      'Ilość zleceń do przeanalizowania: %1'
      '.\nOperacja może być czasochłonna.\n\nCzy kontynuować?'@[$ZL.sel_size()]
   );
   {? _res
   || KOMM.init(250,,'Wyniki analizy dla zaznaczonych zleceń'@,'',,,0)
   ?}
|| FUN.info('Brak uprawnień do wykonania analizy dla zaznaczonych zleceń.'@);
   _res:=0
?};
_res


\action_menu_group_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Analiza zlecenia - akcja 'po grupie' z menu okna wertowania ZL
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
~~


\action_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Analiza zlecenia - akcja Zakończ
::----------------------------------------------------------------------------------------------------------------------
_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:='TTE_PZL_KANA';
_args.UIDREF:=ZL.uidref();
_args.AKCJA:='ZAKOŃCZ';
_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'ZL',ZL.ref());

exec('mp_run','#b__box',_args);
~~


\druk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: wydruk pozycji analizy zlecenia
::  OLD: \anzhdruk/drukujp.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','TTE_PZL_KANA','tte_anzh*',,1);
1


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Formuła ustala PARSES
::   WE: UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_mp:=params_get().mp;
_result:=0;

{? _mp.isService()
||
   ZL.cntx_psh();
   ZL.prefix();
   {? ZL.seek(_in.ZL)
   || _result:=1;
      __PARSES.setVal('OddzialLogProd',ZL.ODDZ);
      {? var_pres('ROK',_in)=type_of(0) & var_pres('MIESIAC',_in)=type_of(0)
      || _rok:=_in.ROK;
         _miesiac:=_in.MIESIAC
      || _rok:=date()~1;
         _miesiac:=date()~2
      ?};
      _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:='LMG';
      _args.AR:=_rok;
      _args.AM:=_miesiac;
      __PARSES.setVal('OkresRok',_args)
   || exec('zl_deleted_in_proc','zl_common',_mp)
   ?};
   ZL.cntx_pop()
|| _result:=1
?};
_result


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.22]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::       [_b] - tablica z parametrami wejściowymi
::   WY: obj_new() - obiekt wynikowy
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
{? var_pres('_b')>100
|| _in:=_b
|| _in:=params_get().in
?};

_can_continue:=1;
_obj:=obj_new('RESULT','ZL');
_obj.RESULT:=0;
_obj.ZL:=null();

_keyRefs:=_mp.getRefs();

{? obj_len(_keyRefs)>0
||
   {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];

      {? type_of(_kref)>0
      ||
         {? ref_name(_kref)=ZL.name()
         || _obj.ZL:=exec('FindAndGet','#table',ZL,_kref,,,null());

            {? _obj.ZL=null()
            ||
::             Nie znaleziono rekordu kluczowego powiązanego ze zleceniem, więc robię error
               _can_continue:=0;
               exec('zl_deleted_in_proc','zl_common',_mp)
            ?}
         ?}
      ?}
   !}
?};

{? _can_continue>0
||
:: jest parametr wejściowy ZL
   {? _obj.ZL=null() & var_pres('ZL',_in)=type_of(null())
   || _obj.ZL:=_in.ZL
   ?}
?};

{? _can_continue>0
|| _obj.RESULT:=1
?};

_obj

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:41 0f3187846ccb13c9a9e6945330f1871c6d54cdf1089251dcb5acf4991486ae9f64eddd526cf153c5847ea9b4e0bc4541eabc0f823909a832402637d4bfc2314ae7fe00748171396d86f23b34b9d09ce7732758e63096a6896e52c18f1c5ae6d0afcbcf683306c54018af67784172d7302398e6f99aa9abdef18156bc3caf7e35
