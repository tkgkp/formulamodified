:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ppl_rp7_rrp7.fml
:: Utworzony: 10.03.2017
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa czynności PPL_RP7_PRP7 - Rej. danych do Rp-7
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Rej. danych do Rp-7 - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
~~


::======================================================================================================================
:: Wyzwalacze tabel RP7_*.
::======================================================================================================================


\rp7_os_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Wyzwalacz "Dołącz - po" dla tabeli RP7_OS.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('last_mod_set','#table',RP7_OS)
?};
~~


\rp7_os_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli RP7_OS.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('last_mod_set','#table',RP7_OS)
?};
~~


\rp7_os_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Wyzwalacz "Usuń - przed" dla tabeli RP7_OS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',RP7_KP,'ROK',RP7_OS.ref()) &
exec('del_ndx','#table',RP7_NB,'OD',RP7_OS.ref())


\rp7_os_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Wyzwalacz "Usuń - po" dla tabeli RP7_OS.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a & do_state()=1
|| exec('last_mod_set','#table',RP7_OS)
?};
~~


\rp7_kp_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Wyzwalacz "Usuń - przed" dla tabeli RP7_KP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',RP7_KW,'ZAPIS',RP7_KP.ref())


\rp7_rk_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Wyzwalacz "Popraw - przed: dla tabeli RP7_RK.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};
{? RP7_RK.WYN<>bfld('WYN')
:: Zmieniło się wynagrodzenie średnie - przeliczamy wskaźnik.
|| RP7_KP.cntx_psh();
   RP7_KP.index('RECALC');
   RP7_KP.prefix(RP7_RK.ref());
   {? RP7_KP.first()
   || {!
      |? _sum:=RP7_KP.SUM;
         _wsk:=RP7_KP.WSK;
         exec('rp7_kp_wsx_ae','!ppl_rp7_rrp7');
         {? _sum<>RP7_KP.SUM | _wsk<>RP7_KP.WSK
         || RP7_KP.put()
         ?};
         RP7_KP.next()
      !}
   ?};
   RP7_KP.cntx_pop()
?};
~~


\rp7_kw_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Przed modyfikacją rekordu tabeli RP7_KW.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed".
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? RP7_KW.R=null() & RP7_KW.W=''
|| return(0)
?};
{? RP7_KW.W=''
|| R.cntx_psh();
   RP7_KW.W:=RP7_KW.R().RT;
   R.cntx_pop()
?};
1


\rp7_kw_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli RP7_KW.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('rp7_kw_modb','!ppl_rp7_rrp7')


\rp7_kw_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli RP7_KW.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('rp7_kw_modb','!ppl_rp7_rrp7')


::======================================================================================================================
:: Obsługa pól i akcji okien tabel RP7_*.
::======================================================================================================================


\rp7_os_pierwsze_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Po redagowaniu pola RP7_OS.PIERWSZE. Próba odgadnięcia płci na podstawie imienia.
::   WE:
::   WY:
::  OLD: \plec/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
RP7_OS.PLEC:={? -(fld()+1)='a' || 'K' || 'M' ?};
1


\rp7_os_wydzial_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Przed redagowaniem pola RP7_OS.WYDZIAL - pole nie jest do redagowania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
0


\rp7_os_dolaczr_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Dołącz -> Ręcznie po" w oknie WER tabeli RP7_OS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? RP7_OS.f_active()
|| RP7_OS.f_add()
?}


\rp7_os_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [12.41]
:: OPIS: Autouzupełnienie informacji osobowych. Przepisanie danych z bieżącego pracownika.
::   WE:
::   WY:
::  OLD: \auto_os/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
OSOBA.cntx_psh();
OSOBA.prefix();
OS_ADRES.cntx_psh();
RP7_OS.blank();
RP7_OS.REK:=date(,12,31);
RP7_OS.NAZWISKO:=P.OSOBA().NAZWISKO;
RP7_OS.RODOWE:=OSOBA.RODOWE;
RP7_OS.PIERWSZE:=OSOBA.PIERWSZE;
RP7_OS.DRUGIE:=OSOBA.DRUGIE;
RP7_OS.OJCIEC:=OSOBA.OJCIEC;
RP7_OS.MATKA:=OSOBA.MATKA;
RP7_OS.PLEC:=OSOBA.PLEC;
RP7_OS.UR_DATA:=OSOBA.UR_DATA;
RP7_OS.UR_MIEJ:=OSOBA.UR_MIEJ;
RP7_OS.DOWOD:=OSOBA.DOWOD;
RP7_OS.PASZPORT:=OSOBA.PASZPORT;
RP7_OS.PESEL:=OSOBA.PESEL;
RP7_OS.NIP:=OSOBA.NIP;
{? exec('szukaj','osoba')
|| RP7_OS.WOJEWODZ:=OS_ADRES.WOJEWODZ;
   RP7_OS.POWIAT:=OS_ADRES.POWIAT;
   RP7_OS.GMINA:=OS_ADRES.GMINA;
   RP7_OS.MIASTO:=OS_ADRES.MIASTO;
   RP7_OS.KOD:=OS_ADRES.KOD;
   RP7_OS.POCZTA:=OS_ADRES.POCZTA;
   RP7_OS.ULICA:=OS_ADRES.ULICA;
   RP7_OS.DOM:=OS_ADRES.DOM;
   RP7_OS.LOKAL:=OS_ADRES.LOKAL;
   RP7_OS.TEL:=OS_ADRES.TEL
?};
RP7_OS.DZA:=P.DZA;
RP7_OS.DZ:=P.DZ;
RP7_OS.CP:=P.CP;
RP7_OS.ST:=P.ST;
RP7_OS.P:=P.ref();
RP7_OS.WYDZIAL:=RP7_OS.P().WYDZIAL;
RP7_OS.WPR_DO:=P.DZ;
OS_ADRES.cntx_pop();
OSOBA.cntx_pop();
~~


\rp7_os_dolacza_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Dołącz -> Automatycznie" w oknie WER tabeli RP7_OS.
::   WE:
::   WY:
::  OLD: \add_os/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=exec('wybierz_args','pracownik');

_args.DOMAIN:='PPL';
_args.F_ZATR:='P';
_args.SQL_WHERE:='"P".REFERENCE not in (select P from RP7_OS where P is not null)';
_args.WIELU:=0;

_ret:=exec('wybierz','pracownik',_args);
{? _ret.STATUS<>''
|| FUN.info(_ret.STATUS);
   return()
|? ~_ret.P.first()
|| return()
?};
exec('rp7_os_teryt_wyszarz','!ppl_rp7_rrp7');

P.cntx_psh();
P.prefix();
{? P.seek(_ret.P.UID)
|| exec('rp7_os_set','!ppl_rp7_rrp7');
   RP7_OS.memo_set('','UWAGI');
   {? RP7_OS.edit("exec('rp7_os_ae','!ppl_rp7_rrp7')") & RP7_OS.add() & RP7_OS.memo_put(,'UWAGI')
   || {? RP7_OS.f_active()
      || RP7_OS.f_add()
      ?};
      exec('rp7_nb_auto_add','!ppl_rp7_rrp7',RP7_OS.ref());
      exec('rp7_kp_auto_add','!ppl_rp7_rrp7',RP7_OS.ref())
   ?}
|| FUN.info('Odnalezienie danych wskazanego pracownika nie powiodła się.'@)
?};
P.cntx_pop();

~~


\rp7_os_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Usuń - przed" w oknie WER tabeli RP7_OS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? {? RP7_OS.count()
   || exec('del_conf','#table')
   || exec('del_ask','#table')
   ?}
|| RP7_OS.del()
?}


\rp7_os_aktualizuj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Aktualizuj" w oknie WER tabeli RP7_OS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~RP7_OS.P
:: Co prawda nie ma wskazani na pracownika, ale może to jest zaszłość - pola RP7_OS.P nie było na początku.
:: Poszukajmy więc, czy jest odpowiedni pracownik.
|| _domain:='PPL';
   _f_zatr:='P';
   _d0:=date(0,0,0);
:: W warunku pomijamy rekordy tabeli P już wykorzystywane w RP7_OS.
   _where:=
      '"P".REFERENCE not in (select RP7_OS.P from RP7_OS where P is not null) and '
      '"1OSOBA".NAZWISKO=\'%1\' and "1OSOBA".PIERWSZE=\'%2\' and "1OSOBA".PESEL=\'%3\' '
      [RP7_OS.NAZWISKO,RP7_OS.PIERWSZE,RP7_OS.PESEL]+
      {? RP7_OS.DZA=_d0
      || ' and "P".DZA is null'
      || ' and "P".DZA=to_date(\'%1\')' [RP7_OS.DZA$1]
      ?}+
      {? RP7_OS.DZ=_d0
      || ' and "P".DZ is null'
      || ' and "P".DZ=to_date(\'%1\')' [RP7_OS.DZ$1]
      ?}+
      {? RP7_OS.CP=null()
      || ' and "P".CP is null'
      || ' and "P".CP=\'%1\'' [$RP7_OS.CP]
      ?}+
      {? RP7_OS.ST=null()
      || ' and "P".ST is null'
      || ' and "P".ST=\'%1\'' [$RP7_OS.ST]
      ?};

   _P:=sql(
      'select P.REFERENCE as REF '
      'from P as "P" join OSOBA as "1OSOBA" using("P".OSOBA,"1OSOBA".REFERENCE) '+
      'where '+_where+' and "P".REFERENCE in (select REF from :_a)',
      exec('dostepne_p','schemat',_domain,_f_zatr)
   );
   _ile:=_P.size();

   {? _ile=0
   || FUN.info('Dane zostały wprowadzone ręcznie.\nIch aktualizacja nie jest możliwa.'@);
      return()
   |? _ile=1 & _P.first()
   || _ref:=exec('FindAndGet','#table',P,_P.REF,,,null());
      {? _ref<>null()
      || RP7_OS.P:=_ref;
         RP7_OS.put()
      ?}

   || FUN.info('Wybierz (w następnym kroku) pracownika (umowę), z którym powiązana jest bieżąca osoba.'@);

      _args:=exec('wybierz_args','pracownik');

      _args.DOMAIN:=_domain;
      _args.F_ZATR:=_f_zatr;
      _args.SQL_WHERE:=_where;

      _args.WIELU:=0;

      _ret:=exec('wybierz','pracownik',_args);

      {? _ret.STATUS<>''
      || FUN.info(_ret.STATUS);
         return()
      |? ~_ret.P.first()
      || FUN.info('Nie wskazano pracownika powiązanego z bieżącą osobą.\nAktualizacja nie jest możliwa.'@);
         return()
      || _ref:=exec('FindAndGet','#table',P,_ret.P.UID,,,null());
         {? _ref<>null()
         || RP7_OS.P:=_ref;
            RP7_OS.put()
         ?}
      ?}
   ?}

?};

{? RP7_OS.P &
   FUN.ask(
      'Wykonanie funkcji spowoduje aktualizację danych.\n'
      'Dotychczasowe zapisy (z wyjątkiem zablokowanych) zostaną usunięte.\n'
      'Czy na pewno chcesz kontynuować?'@
   )
|| exec('rp7_nb_auto_del','!ppl_rp7_rrp7',RP7_OS.ref());
   exec('rp7_kp_auto_del','!ppl_rp7_rrp7',RP7_OS.ref());
:: Aktualizacja jednostki organizacyjnej. Kiedyś pole było trochę martwe.
:: Teraz będzie ostatnią/aktualną jednostką organizacyjną.
   P.cntx_psh();
   RP7_OS.P();
   exec('rp7_os_set','!ppl_rp7_rrp7');
   P.cntx_pop();
   RP7_OS.REK:=date(,12,31);
   RP7_OS.put();
   exec('rp7_nb_auto_add','!ppl_rp7_rrp7',RP7_OS.ref());
   exec('rp7_kp_auto_add','!ppl_rp7_rrp7',RP7_OS.ref())
?};
~~


\rp7_os_drukuj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Drukuj - przed" w oknie tabeli RP7_OS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
popup(1,'Wybierz',
   'Zaświadczenie o zatrudnieniu i wynagrodzeniu ZUS ERP-7'@,'Wersja obowiązująca'@,"rep_exec('ppl_rp7_erp7')",
   'Zaświadczenie o zatrudnieniu i wynagrodzeniu ZUS Rp-7'@,'Wersja poprzednia'@,"exec('zus_rp7','!ppl_rp7_rrp7')"
)


\zus_rp7
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.02]
:: OPIS: Wydruk zaświadczenia ZUS Rp-7.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_d0:=date(0,0,0);

:: Funkcja uzupełnia w szablonie pola typu kratki.
_kratki:="
   _word:=_a;
   _dl:=_b;
   _name:=_c;
   _val:=_d;
   {! _lp:=1 .. _dl
   |! _word.Replace('<%1_%2>' [_name,$_lp],1+((_lp-1)-_val))
   !}
";

_firma:=exec('ref_firma','ustawienia');

OSOBA.cntx_psh();
OSOBA.index('OSOBA');
OSOBA.prefix(RP7_OS.NAZWISKO,RP7_OS.PIERWSZE,'N',RP7_OS.PESEL,);
_osoba:={? OSOBA.first() || OSOBA.ref() || null() ?};
OSOBA.cntx_pop();

_NB:=obj_new('TAB','NDX','add');
_NB.TAB:=tab_tmp(2,
   'POMIN','INTEGER','Pomiń',
   'OD','DATE','Od daty',
   'ODS','STRING[255]','Od daty',
   'DO','DATE','Do daty',
   'DOS','STRING[255]','Do daty',
   'OPIS','STRING[40]','Opis',
   'TYP','STRING[3]','Typ nieobecności'
);

_NB.NDX:=obj_new('OD','TYP');
_NB.NDX.OD:=_NB.TAB.index('?');
_NB.NDX.TYP:=_NB.TAB.ndx_tmp(,,'TYP',,,'OD',,);
:: To będzie główny indeks do czasu drukowania załącznika.
_NB.TAB.index(_NB.NDX.TYP);

_NB.add:="
   _NB:=_a.TAB;
   _NB.blank();
   _NB.OD:=_b;
   _NB.DO:=_c;
   _NB.OPIS:=_d;
   _NB.TYP:=_e;
   _NB.ODS:='od dnia %1 r.' [_NB.OD$4];
   _NB.DOS:='do dnia %1 r.' [_NB.DO$4];
   _NB.add()
";

_typ:=obj_new('WCH','ZCH','ZOP','SRH','UBP','UWY','XXX');
_name:=obj_ntab_names(_typ);
{! _lp:=1 .. obj_len(_name)
|! _typ[_lp]:=obj_new('T','O');
   _typ[_lp].T:=_name[_lp];
   _typ[_lp].O:=''
!};
_typ.WCH.O:='wynagrodzenie za chorobę';
_typ.ZCH.O:='zasiłek chorobowy';
_typ.ZOP.O:='zasiłek opiekuńczy';
_typ.SRH.O:='świadczenie rehabilitacyjne';
_typ.UBP.O:='urlop bezpłatny';
_typ.UWY.O:='urlop wychowawczy';
_typ.XXX.O:='???';

{? RP7_OS.WCH_OD<>_d0 & RP7_OS.WCH_DO<>_d0
|| _NB.add(_NB,RP7_OS.WCH_OD,RP7_OS.WCH_DO,_typ.WCH.O,_typ.WCH.T)
?};

{? RP7_OS.ZCH_OD<>_d0 & RP7_OS.ZCH_DO<>_d0
|| _NB.add(_NB,RP7_OS.ZCH_OD,RP7_OS.ZCH_DO,_typ.ZCH.O,_typ.ZCH.T)
?};

{? RP7_OS.ZOP_OD<>_d0 & RP7_OS.ZOP_DO<>_d0
|| _NB.add(_NB,RP7_OS.ZOP_OD,RP7_OS.ZOP_DO,_typ.ZOP.O,_typ.ZOP.T)
?};

{? RP7_OS.SRH_OD<>_d0 & RP7_OS.SRH_DO<>_d0
|| _NB.add(_NB,RP7_OS.SRH_OD,RP7_OS.SRH_DO,_typ.SRH.O,_typ.SRH.T)
?};

R.cntx_psh();
RP7_NB.cntx_psh();
RP7_NB.index('KOD');
RP7_NB.prefix(RP7_OS.ref());
{? RP7_NB.first()
|| {!
   |? _NB.TAB.blank();
      _NB.TAB.OD:=RP7_NB.OD;
      _NB.TAB.DO:=RP7_NB.DO;
      _op:=_ty:='';
      {? __RUB.sys_attr(RP7_NB.R,121,RP7_NB.OD)
      || _op:=_typ.WCH.O;
         _ty:=_typ.WCH.T
      |? __RUB.sys_attr(RP7_NB.R,1221,RP7_NB.OD)
      || _op:=_typ.ZCH.O;
         _ty:=_typ.ZCH.T
      |? __RUB.sys_attr(RP7_NB.R,1225,RP7_NB.OD)
      || _op:=_typ.ZOP.O;
         _ty:=_typ.ZOP.T
      |? __RUB.sys_attr(RP7_NB.R,1222,RP7_NB.OD)
      || _op:=_typ.SRH.O;
         _ty:=_typ.SRH.T
      |? __RUB.sys_attr(RP7_NB.R,112,RP7_NB.OD)
      || _op:=_typ.UBP.O;
         _ty:=_typ.UBP.T
      |? __RUB.sys_attr(RP7_NB.R,114,RP7_NB.OD)
      || _op:=_typ.UWY.O;
         _ty:=_typ.UWY.T
      || _op:=RP7_NB.R().RT;
         _ty:=_typ.XXX.T
      ?};
      _NB.add(_NB,RP7_NB.OD,RP7_NB.DO,_op,_ty);
      RP7_NB.next()
   !}
?};
RP7_NB.cntx_pop();
R.cntx_pop();

:: Czy będzie tworzony załącznik z nieobecnościami? Zmienna będzie jeszcze aktualizowana.
_NB.TAB.prefix(_typ.XXX.T,);
_zalacznik:=_NB.TAB.first();

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exec('init','#word');
_word:=obj_new(@.CLASS.WORD);
:: Ustalenie szablonu.
_word.Template('pkd_rp7_01.dotx',1);

:: Definicja wszystkich uzywanych później styli.
:: Tekst.
_style:=obj_new('normal','title','strike','T3R','T3S','TNB');
_style.normal:=_word.NewStyle('normal');
_style.normal.font.size:=8;

_style.title:=_word.CopyStyle(_style.normal,'title');
_style.title.font.size:=12;
_style.title.font.bold:='true';
_style.title.align.horizont:='center';

_style.strike:=_word.CopyStyle(_style.normal,'strike');
_style.strike.font.strike:='true';

:: Tabelka.
_style.T3R:=_word.CopyStyle(_style.normal,'T3R');
_style.T3R.align.horizont:='right';
_style.T3R.spacing.after:=0;
_style.T3R.talign:='top';

_style.T3S:=_word.CopyStyle(_style.T3R,'T3S');
_style.T3S.font.size:=6;
_style.T3S.align.horizont:='left';

_style.TNB:=_word.CopyStyle(_style.normal,'TNB');
_style.TNB.font.size:=8;
_style.TNB.spacing.after:=0;
_style.TNB.tborder.left.type:='none';
_style.TNB.tborder.right.type:='none';
_style.TNB.tborder.top.type:='none';
_style.TNB.tborder.bottom.type:='none';
_style.TNB.tborder.insideH.type:='none';
_style.TNB.tborder.insideV.type:='none';

{! _lp:=1 .. obj_len(_style)
|! _word.AddStyle(_style[_lp])
!};

_word.SetStyle();
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
:: Nagłówek - Płatnik składek (podać NIP i REGON lub PESEL lub Dowód osobisty / Paszport).
_nip:=gsub(KST.NIP,spli_str('-, ',','),'');
_regon:=KST.REG;
_pesel:=_dowpasz:='';
_kratki(_word,10,'PS_NIP',_nip);
_kratki(_word,14,'PS_REGON',_regon);
_kratki(_word,11,'PS_PESEL',_pesel);
_word.Replace('<PS_DOWPASZ>',_dowpasz);

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
:: 1. Pracownik.
_plec:=RP7_OS.PLEC;

_suf:=obj_new('Ki_','Kay','Ka_');
_sn:=obj_ntab_names(_suf);
{! _lp:=1 .. obj_len(_sn)
|! _suf[_lp]:={? _plec='K' || 1+(1-_sn[_lp]) || _sn[_lp]+1 ?};
   {? _suf[_lp]='_'
   || _suf[_lp]:=''
   ?};
   _word.Replace('<-%1>' [_sn[_lp]+2],_suf[_lp])
!};

_word.Replace('<NAZWISKO>',RP7_OS.NAZWISKO);
_word.Replace('<PIERWSZE>',RP7_OS.PIERWSZE);
{? RP7_OS.DRUGIE<>''
|| _word.Replace('<DRUGIE>',' '+RP7_OS.DRUGIE)
|| _word.Replace('<DRUGIE>','')
?};
{? RP7_OS.RODOWE<>''
|| _word.Replace('<RODOWE>',' nazwisko rodowe '+RP7_OS.RODOWE)
|| _word.Replace('<RODOWE>','')
?};
_word.Replace('<UR_DATA>',RP7_OS.UR_DATA$4+' r.');
_word.Replace('<UR_MIEJ>',RP7_OS.UR_MIEJ);
_kratki(_word,11,'PR_PESEL',RP7_OS.PESEL);
_word.Replace('<ZATR_OD>',RP7_OS.DZA$4+' r.');
{? RP7_OS.DZ<>_d0
|| _word.Replace('<ZATR_STAN>','był'+_suf.Ka_);
   _word.Replace('<ZATR_DO>',RP7_OS.DZ$4+' r.')
|| _word.Replace('<ZATR_STAN>','jest');
   _word.Replace('<ZATR_DO>','nadal')
?};
_word.Replace('<STN>',RP7_OS.ST().ST);
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
:: 2. a)
:: Wynagrodzenie za pracę.
{? RP7_OS.WPR_DO<>_d0
|| _word.Replace('<WPR>','do dnia %1 r.' [RP7_OS.WPR_DO$4])
|| _word.Replace('<WPR>','')
?};
:: Wynagrodzenie za czas niezdolności do pracy.
_NB.TAB.prefix(_typ.WCH.T,);
{? _NB.TAB.size()>1
|| _zalacznik+=1;
   _word.Replace('<WCH>','w załączonym wykazie')
|? _NB.TAB.size()=1 & _NB.TAB.first()
|| _NB.TAB.POMIN:=1;
   _NB.TAB.put();
   _word.Replace('<WCH>','%1 %2' [_NB.TAB.ODS,_NB.TAB.DOS])
|| _word.Replace('<WCH>','nie pobierał'+_suf.Ka_)
?};
:: Zasiłek chorobowy po dniu 14.11.1991 r.
_NB.TAB.prefix(_typ.ZCH.T,);
{? _NB.TAB.size()>1
|| _zalacznik+=1;
   _word.Replace('<ZCH>','w załączonym wykazie')
|? _NB.TAB.size()=1 & _NB.TAB.first()
|| _NB.TAB.POMIN:=1;
   _NB.TAB.put();
   _word.Replace('<ZCH>','%1 %2' [_NB.TAB.ODS,_NB.TAB.DOS])
|| _word.Replace('<ZCH>','nie pobierał'+_suf.Ka_)
?};
:: Koniec okresu zasiłkowego.
{? RP7_OS.ZCH_DA<>_d0
|| _word.Replace('<ZCH_DA>',RP7_OS.ZCH_DO$4+' r.')
|| _word.Replace('<ZCH_DA>','nie dotyczy')
?};
:: Zasiłek opiekuńczy.
_NB.TAB.prefix(_typ.ZOP.T,);
{? _NB.TAB.size()>1
|| _zalacznik+=1;
   _word.Replace('<ZOP>','w załączonym wykazie')
|? _NB.TAB.size()=1 & _NB.TAB.first()
|| _NB.TAB.POMIN:=1;
   _NB.TAB.put();
   _word.Replace('<ZOP>','%1 %2' [_NB.TAB.ODS,_NB.TAB.DOS])
|| _word.Replace('<ZOP>','nie pobierał'+_suf.Ka_)
?};
:: Świadczenie rehabilitacyjne.
_NB.TAB.prefix(_typ.SRH.T,);
{? _NB.TAB.size()>1
|| _zalacznik+=1;
   _word.Replace('<SRH>','w załączonym wykazie')
|? _NB.TAB.size()=1 & _NB.TAB.first()
|| _NB.TAB.POMIN:=1;
   _NB.TAB.put();
   _word.Replace('<SRH>','%1 %2' [_NB.TAB.ODS,_NB.TAB.DOS])
|| _word.Replace('<SRH>','nie pobierał'+_suf.Ka_)
?};

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
:: 2. b)
_bezpl:='';
_NB.TAB.prefix(_typ.UBP.T,);
{? _NB.TAB.size()=0
|| _bezpl:='nie przebywał'+_suf.Ka_
|? _NB.TAB.size()<5
|| {? _NB.TAB.first()
   || {!
      |? _bezpl+='%1 %2, ' [_NB.TAB.ODS,_NB.TAB.DOS];
         _NB.TAB.POMIN:=1;
         _NB.TAB.put();
         _NB.TAB.next()
      !};
      _bezpl:=_bezpl-2
   ?}
|| _zalacznik+=1;
   _bezpl:='w załączonym wykazie'
?};
_word.Replace('<BEZPL>',_bezpl);

_NB.TAB.prefix(_typ.UWY.T,);
{? _NB.TAB.size()>1
|| _zalacznik+=1;
   _word.Replace('<WYCH>','w załączonym wykazie')
|? _NB.TAB.size()=1 & _NB.TAB.first()
|| _NB.TAB.POMIN:=1;
   _NB.TAB.put();
   _word.Replace('<WYCH>','%1 %2' [_NB.TAB.ODS,_NB.TAB.DOS])
|| _word.Replace('<WYCH>','nie przebywał'+_suf.Ka_)
?};

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
:: 3. Wynagrodzenie – przychód (dochód) – uposażenie* – w wybranym okresie wynosił(o):
:: Przygotowanie danych.
_SRC:=obj_new('TAB','txt');
_SRC.TAB:=tab_tmp(1,'NAZWA','STRING[255]','Nazwa');
_SRC.txt:='';

{? RP7_OS.DOK_RP7<>''
|| _SRC.TAB.NAZWA:=RP7_OS.DOK_RP7;
   _SRC.TAB.add();
   _SRC.txt:=RP7_OS.DOK_RP7+', '
?};

_TAB:=tab_tmp(1,
   'ROK','INTEGER','Rok',
   'WST','STRING[40]','Składniki stałe',
   'WZM','STRING[27]','Składniki zmienne - kwota',
   'OZM','STRING[255]','Składniki zmienne - rodzaj',
   'MZM','SYS_MEMO','Składniki zmienne - rodzaj',
   'TZM','INTEGER','Składniki zmienne - rodzaj',
   'WIN','STRING[27]','Inne - kwota',
   'OIN','STRING[255]','Inne - rodzaj',
   'MIN','SYS_MEMO','Inne - rodzaj',
   'TIN','INTEGER','Inne - rodzaj',
   'SNA','STRING[27]','Natura - kwota',
   'ONA','STRING[255]','Natura - rodzaj',
   'MNA','SYS_MEMO','Natura - rodzaj',
   'TNA','INTEGER','Natura - rodzaj',
   'SUB','STRING[27]','Chorobowe',
   'SUM','STRING[27]','Razem',
   'M','INTEGER','Uzupełniona pola typu SYS_MEMO'
);
_NDX:=obj_new('ROK','M');
_NDX.ROK:=_TAB.index('?');
_NDX.M:=_TAB.ndx_tmp(,,'M',,,'ROK',,);

_memo:=0;

SLO_NAZ.cntx_psh();
P_INFO.cntx_psh();
P_INFO.index('OD');
RP7_KP.cntx_psh();
RP7_KP.index('ROK');
RP7_KP.prefix(RP7_OS.ref());
RP7_KW.cntx_psh();
RP7_KW.index('ZAPIS');
{? RP7_KP.first()
|| RP7_RK.cntx_psh();
   _form:="{? _a>0 || form(_a,,2,^0160+',') || '' ?}";
:: Znak ^0160 ('NO-BREAK SPACE') zapobiega dzieleniu kwot między wierszami.
   {!
   |? {? RP7_KP.Z='T'
      || _rok:=RP7_KP.ROK().ROK;

         _src:=RP7_KP.SRC().NAZWA;
         {? ~(_src='' | _SRC.TAB.find_key(_src,))
         || _SRC.TAB.NAZWA:=_src;
            _SRC.TAB.add();
            _SRC.txt+=_src+', '
         ?};

         _limmc:='';
         _limkw:=0;
         {? _rok>=1999 & _osoba<>null()
         || P_INFO.prefix(_firma,_osoba);
            {? P_INFO.last()
            || {!
            |? {? P_INFO.BLOKADA<>_d0 & P_INFO.BLOKADA~1=_rok
               || _limmc:=3+(P_INFO.BLOKADA$8);
                  _limkw:=exec('ust_nk','lista_licz',date(_rok,12,0),'SK')
               ?};
               _limmc='' & P_INFO.prev()
            !}
            ?}
         ?};

         _wst:=RP7_KP.WST;
         _wzm:=RP7_KP.WZM;
         _win:=RP7_KP.WIN;

         _ozm:=_oin:=_ona:='';
         {? _limmc<>'' & RP7_KP.WST+RP7_KP.WZM>_limkw
         || {? _wst>_limkw
            || _wst:=_limkw;
               _win+=RP7_KP.WST-_limkw
            ?};
            {? _wst+_wzm>_limkw
            || _wzm:=_limkw-_wst;
               _win+=RP7_KP.WZM-_wzm
            ?};
            _oin:='Ubezpieczenie wypadkowe, '
         ?};

         _TAB.memo_set(,'MZM');
         _TAB.memo_set(,'MIN');
         _TAB.memo_set(,'MNA');

         _TAB.blank();
         _TAB.ROK:=_rok;
         _TAB.WST:=_form(_wst)+{? _oin='' || '' || ' limit (%1)' [_limmc] ?};
         _TAB.WZM:=_form(_wzm);
         _TAB.WIN:=_form(_win);
         _TAB.SNA:=_form(RP7_KP.SNA);
         _TAB.SUB:=_form(RP7_KP.SUB);
         _TAB.SUM:=_form(RP7_KP.SUM);

         RP7_KW.prefix(RP7_KP.ref());
         {? RP7_KW.first()
         || {!
            |? {? RP7_KW.T='2'
               || _ozm+=RP7_KW.W+', '
               |? RP7_KW.T='3'
               || _oin+=RP7_KW.W+', '
               |? RP7_KW.T='4'
               || _ona+=RP7_KW.W+', '
               ?};
               RP7_KW.next()
            !}
         ?};
         _ozm:=_ozm-2;
         _oin:=_oin-2;
         _ona:=_ona-2;

         {? _TAB.WZM<>''
         || {? +_ozm<256
            || _TAB.OZM:=_ozm
            || _TAB.OZM:='<OZM%1>' [$_rok];
               _TAB.memo_set(_ozm,'MZM');
               _TAB.TZM:=_TAB.M:=1
            ?}
         ?};
         {? _TAB.WIN<>''
         || {? +_oin<256
            || _TAB.OIN:=_oin
            || _TAB.OIN:='<OIN%1>' [$_rok];
               _TAB.memo_set(_oin,'MIN');
               _TAB.TIN:=_TAB.M:=1
            ?}
         ?};
         {? _TAB.SNA<>''
         || {? +_ona<256
            || _TAB.ONA:=_ona
            || _TAB.ONA:='<ONA%1>' [$_rok];
               _TAB.memo_set(_ona,'MNA');
               _TAB.TNA:=_TAB.M:=1
            ?}
         ?};

         _lp+=_TAB.add();
         {? _TAB.M
         || _TAB.memo_put(,'MZM');
            _TAB.memo_put(,'MIN');
            _TAB.memo_put(,'MNA');
            _memo+=1
         ?}
      ?};

      RP7_KP.next()
   !};
   RP7_RK.cntx_pop()
?};
RP7_KW.cntx_pop();
RP7_KP.cntx_pop();
P_INFO.cntx_pop();
SLO_NAZ.cntx_pop();
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
:: "Wrzucenie" danych z wynagrodzeniem do szablonu.
_word.SetTab(_TAB,'ROK,WST,WZM,OZM,WIN,OIN,SNA,ONA,SUB,SUM');
_word.TabIns(3,3,2);

_word.TabStyle(_style.T3R);

{? _TAB.first()
|| _row:=4;
   {!
   |? {! _col:=0 .. 9
      |! {? _col=3 | _col=5 | _col=7
         || _word.AddCellStyle(_row,_col,_style.T3S)
         ?}
      !};
      _row+=1;
      _TAB.next()
   !}
?};
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
:: 4.

_nkp:=KST.NKP;
_oddz_zus:=KST.ODDZ_ZUS;
exec('czytaj','#stalesys',date(1998,12,31),KST,'ODDZ_ZUS','NKP');
_word.Replace('<NKP>',KST.NKP);
ADRES.cntx_psh();
_word.Replace('<ODDZ_ZUS>',KST.ODDZ_ZUS().NAZWA);
ADRES.cntx_pop();
KST.ODDZ_ZUS:=_oddz_zus;
KST.NKP:=_nkp;

:: 5.
_word.Replace('<SRC>',{? _SRC.txt='' || '' || (_SRC.txt-2)+'.' ?});
:: 6.
_word.Replace('<UWAGI>',RP7_OS.memo_txt(0,1,'UWAGI'));

_word.Replace('<ZAL_INFO>',{? _zalacznik || 'wykaz wybranych nieobecności.' || 'brak' ?});
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
:: Utworzenie i prezentacja dokumentu.

{? _memo | _zalacznik
:: Jeżeli istnieje choć jeden opis w polu typu SYS_MEMO lub tworzony będzie załącznik z okresami nieobecności,
:: to niezbędny jest krok pośredni.
|| _wordName1:=_word.Create();
   _word.Template(_wordName1)
|| _wordName1:=''
?};

{? _memo
|| _TAB.index(_NDX.M);
   _TAB.prefix(1);
   {? _TAB.first()
   || {!
      |? {? _TAB.TZM
         || _word.Replace('<OZM%1>' [$_TAB.ROK],_TAB.memo_txt(0,1,'MZM'))
         ?};
         {? _TAB.TIN
         || _word.Replace('<OIN%1>' [$_TAB.ROK],_TAB.memo_txt(0,1,'MIN'))
         ?};
         {? _TAB.TNA
         || _word.Replace('<ONA%1>' [$_TAB.ROK],_TAB.memo_txt(0,1,'MNA'))
         ?};
         _TAB.next()
      !}
   ?}
?};

{? _zalacznik
|| _word.PageBreak('<ZAL_NowaStrona>','replace');
   _word.Replace('<ZAL_TYT1>','Załącznik do zaświadczenia o zatrudnieniu i wynagrodzeniu',_style.title);
   _word.Replace('<ZAL_TYT2>',
      RP7_OS.NAZWISKO+' '+RP7_OS.PIERWSZE+' '+RP7_OS.DRUGIE+
      ', PESEL: '+RP7_OS.PESEL+', Data urodzenia: '+RP7_OS.UR_DATA$4+' r.',
      _style.title
   );
   _word.SetTab(_NB.TAB,'ODS,DOS,OPIS');
   _word.TabPlace('<ZAL_TAB>');
   _word.TabStyle(_style.TNB);
   _NB.TAB.index(_NB.NDX.OD);
   _NB.TAB.prefix(0)

|| _word.DelParagraph('<ZAL_NowaStrona>');
   _word.DelParagraph('<ZAL_TYT1>');
   _word.DelParagraph('<ZAL_TYT2>');
   _word.DelParagraph('<ZAL_TAB>')
?};

_word.Run();
{? _wordName1<>''
|| _word.DelFiles(_wordName1)
?};
~~


\rp7_os_legenda_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Legenda" dla tabeli RP7_OS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','RP7_OS#01')


\rp7_os_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie WER tabeli RP7_OS.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~RP7_OS.P
|| Color.fnd_kol('RP7_OS#01#01')
?}


\rp7_os_oddo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Formuła pomocnicza wywoływana podczas weryfikacji rekordu tabeli RP7_OS.
::       Sprawdza, czy
::   WE: _a [STRING] - Akronim pola "OD" (typu DATE).
::       _b [STRING] - Akronim pola "DO" (typu DATE).
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_od_acr:=_a;
_do_acr:=_b;

_d0:=date(0,0,0);
_od_val:=($('_a.'+_od_acr))(RP7_OS);
_do_val:=($('_a.'+_do_acr))(RP7_OS);

_ne:=(_od_val<>_d0)+(_do_val<>_d0);
{? _ne=1
|| FUN.emsg(
      'Pola:\n - "%1"\n - "%2"\nmuszą być podane (obydwa) lub muszą pozostać niewypełnione.\n'
      'Uzupełnij brakujące informacje lub usuń wprowadzone.'@

      [MS.name(RP7_OS,_od_acr),MS.name(RP7_OS,_do_acr)]
   );
   return(_od_acr)
|? _ne=2
|| {? _do_val<_od_val
   || FUN.emsg('"%1" nie może być wcześniejsza niż "%2".'@ [MS.name(RP7_OS,_do_acr),MS.name(RP7_OS,_od_acr)]);
      return(_do_acr)
   |? _od_val<RP7_OS.DZA
   || FUN.emsg('"%1" nie może być wcześniejsza niż "%2".'@ [MS.name(RP7_OS,_od_acr),MS.name(RP7_OS,'DZA')]);
      return(_od_acr)
   |? RP7_OS.DZ<>_d0 & RP7_OS.DZ<_do_val
   || FUN.emsg('"%1" nie może być późniejsza niż "%2".'@ [MS.name(RP7_OS,_do_acr),MS.name(RP7_OS,'DZ')]);
      return(_do_acr)
   ?}
?};
''


\rp7_os_szukaj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Przed obsługą standardowych akcji "Szukaj" - zdjęcie filtra z pola RP7_OS.ST (na wszelki wypadek).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('stn_filter_off','stanprac');
1


\rp7_os_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Rekord - po" w oknie WER tabeli RP7_OS.
::   WE:
::   WY:
::  OLD: \spr_osd/rp7.fml
::  OLD: \spr_osi/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_chk:=__CHK.record(RP7_OS,,'NAZWISKO','PIERWSZE','UR_DATA','DZA','ST','CP'))<>''
|| return(_chk)
?};

_d0:=date(0,0,0);
_dzch:=date(1991,11,14);

{? RP7_OS.DZ<>_d0 & RP7_OS.DZ<RP7_OS.DZA
|| FUN.emsg('"%1" nie może być wcześniejsza niż "%2".'@ [MS.name(RP7_OS,'DZ'),MS.name(RP7_OS,'DZA')]);
   return('DZ')
|? RP7_OS.WPR_DO<>_d0 & RP7_OS.WPR_DO<RP7_OS.DZA
|| FUN.emsg('"%1" nie może być wcześniejsza niż "%2".'@ [MS.name(RP7_OS,'WPR_DO'),MS.name(RP7_OS,'DZA')]);
      return('WPR_DO')
|? RP7_OS.WPR_DO<>_d0 & & RP7_OS.DZ<>_d0 & RP7_OS.DZ<RP7_OS.WPR_DO
|| FUN.emsg('"%1" nie może być późniejsza niż "%2".'@ [MS.name(RP7_OS,'WPR_DO'),MS.name(RP7_OS,'DZ')]);
   return('WPR_DO')
|? (_chk:=exec('rp7_os_oddo','!ppl_rp7_rrp7','WCH_OD','WCH_DO'))<>''
|| return(_chk)
|? (_chk:=exec('rp7_os_oddo','!ppl_rp7_rrp7','SRH_OD','SRH_DO'))<>''
|| return(_chk)
|? (_chk:=exec('rp7_os_oddo','!ppl_rp7_rrp7','ZCH_OD','ZCH_DO'))<>''
|| return(_chk)
|? RP7_OS.ZCH_OD<>_d0 & RP7_OS.ZCH_OD<_dzch
|| __CHK.err_fld(RP7_OS,'ZCH_OD',1,'Data nie może być wcześniejsza niż %1 r.'@ [_dzch$6]);
   return('ZCH_OD')
|? RP7_OS.ZCH_DA<>_d0 & RP7_OS.ZCH_DA<RP7_OS.DZA
|| FUN.emsg('"%1" nie może być wcześniejsza niż "%2".'@ [MS.name(RP7_OS,'ZCH_DA'),MS.name(RP7_OS,'DZA')]);
   return('ZCH_DA')
|? (_chk:=exec('rp7_os_oddo','!ppl_rp7_rrp7','ZOP_OD','ZOP_DO'))<>''
|| return(_chk)
?};
{? RP7_OS.win_edit('?')='RED'
|| return(exec('rp7_teryt_sprawdz','!ppl_rp7_rrp7'))
?};

''


\rp7_rk_importuj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Importuj - przed" w oknie WER tabeli RP7_RK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy na pewno chcesz zaimportować informacje o wynagrodzeniu przeciętnym?'@)
|| RP7_RK.cntx_psh();
   _lata:="
      RP7_RK.index('ROK');
      RP7_RK.prefix();
      {? ~RP7_RK.find_key(_a)
      || RP7_RK.blank();
         RP7_RK.ROK:=_a;
         RP7_RK.WYN:=_b;
         RP7_RK.add(1)
      ?}
   ";
   _lata(1950,6612.00);
   _lata(1951,7188.00);
   _lata(1952,7824.00);
   _lata(1953,11040.00);
   _lata(1954,11700.00);
   _lata(1955,12096.00);
   _lata(1956,13416.00);
   _lata(1957,15348.00);
   _lata(1958,16176.00);
   _lata(1959,17436.00);
   _lata(1960,18720.00);
   _lata(1961,19500.00);
   _lata(1962,20160.00);
   _lata(1963,21156.00);
   _lata(1964,21792.00);
   _lata(1965,22404.00);
   _lata(1966,23208.00);
   _lata(1967,24192.00);
   _lata(1968,25272.00);
   _lata(1969,26088.00);
   _lata(1970,26820.00);
   _lata(1971,28296.00);
   _lata(1972,30108.00);
   _lata(1973,33576.00);
   _lata(1974,38220.00);
   _lata(1975,46956.00);
   _lata(1976,51372.00);
   _lata(1977,55152.00);
   _lata(1978,58644.00);
   _lata(1979,63924.00);
   _lata(1980,72480.00);
   _lata(1981,92268.00);
   _lata(1982,139572.00);
   _lata(1983,173700.00);
   _lata(1984,202056.00);
   _lata(1985,240060.00);
   _lata(1986,289140.00);
   _lata(1987,350208.00);
   _lata(1988,637080.00);
   _lata(1989,2481096.00);
   _lata(1990,12355644.00);
   _lata(1991,21240000.00);
   _lata(1992,35220000.00);
   _lata(1993,47940000.00);
   _lata(1994,63936000.00);
   _lata(1995,8431.44);
   _lata(1996,10476.00);
   _lata(1997,12743.16);
   _lata(1998,14873.88);
   _lata(1999,20480.88);
   _lata(2000,23085.72);
   _lata(2001,24742.20);
   _lata(2002,25598.52);
   _lata(2003,26417.64);
   _lata(2004,27474.84);
   _lata(2005,28563.48);
   _lata(2006,29726.76);
   _lata(2007,32292.36);
   _lata(2008,35326.56);
   _lata(2009,37235.52);
   _lata(2010,38699.76);
   _lata(2011,40794.24);
   _lata(2012,42260.04);
   _lata(2013,43800.72);
   _lata(2014,45401.52);
   _lata(2015,46797.36);
   _lata(2016,48566.52);
   _lata(2017,51258.12);
   RP7_RK.cntx_pop()
?};
~~


\rp7_rk_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Rekord - po" w oknie WER tabeli RP7_RK.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_chk:=__CHK.table(RP7_RK,-menu_txt()='popraw',,'ROK');
{? type_of(_chk)<>type_of(0) | ~_chk
|| return(_chk)
?};
{? RP7_RK.WYN<0
|| return(__CHK.err_fld(RP7_RK,'WYN',1,'Wartość nie może być ujemna.'@))
?};
''


\rp7_kp_wsx_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Po redagowaniu pól związanych z wynagrodzeniem (Wxx) lub świadczeniem (Sxx) w tabeli RP7_KP.
::       Formuła wykorzystywana również w wyzwalaczu "Popraw - po" oraz podczas dołączania automatycznego.
::   WE:
::   WY:
::  OLD: \clc_kp/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
RP7_KP.SUM:=RP7_KP.WST+RP7_KP.WZM+RP7_KP.ZAS+RP7_KP.SW+RP7_KP.OB+RP7_KP.PRZ+RP7_KP.INN;
RP7_KP.WSK:={? _wyn:=RP7_KP.ROK().WYN || 100*RP7_KP.SUM/_wyn$2 ?};
1


\rp7_kp_auto_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Formuła usuwa wszystkie informacje o wynagrodzeniu (RP7_KP) wskazanej osoby (RP7_OS).
::   WE:  _a  [REFERENCE] - Wskazanie osoby (RP7_OS), dla której zostaną usunięte lata (RP7_KP).
::       [_b] [NUMBER]    - Tryb wsadowy (bez komunikatów):
::                           0 - Nie [domyślnie];
::                           1 - Tak.
::   WY: 0 - Błąd parametru wywołania.
::       1 - Operacja wykonana.
::  OLD: \del_kp/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(null()) | _a=null() | ref_tab(_a)<>RP7_OS
|| {? ~(var_pres('_b')=type_of(0) & _b)
   || FUN.error('%1\nBrak lub nieprawidłowy typ parametru %2.'@ ['\\rp7_kp_auto_del/!ppl_rp7_rrp7.fml','_a'])
   ?};
   return(0)
?};
RP7_KP.cntx_psh();
RP7_KP.index('ROK');
RP7_KP.prefix(_a);
{? RP7_KP.first()
|| {!
   |? {? RP7_KP.BLOKADA='T'
      || RP7_KP.next()
      || RP7_KP.del()
      ?}
   !}
?};
RP7_KP.cntx_pop();
1


\opis_skladnika
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.41]
:: OPIS: Przypisanie opisu składnika płacowego.
::       Formuła wewnętrzna - poprawność parametru nie jest weryfikowana.
::   WE: _a [NUMBER] - Nr składnika płacowego.
::  OLD: \opis_skladnika/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
{? __RUB.sys_attr(_a,45) || '100'
|? _a=106 || '101'
|? _a=107 || '110'
|? _a=121 || '120'
|? _a=126 || '125'
|? __RUB.sys_attr(_a,411) || '465'
|? __RUB.sys_attr(_a,412) || '468'
|? __RUB.sys_attr(_a,421) || '436'
|? _a=511 || '510'
|? _a=513 || '512'
|? _a=515 || '514'
|? _a=517 || '516'
|? _a=524 | _a=7017 | _a=7018 | _a=7071 || '523'
|? _a=530 || '529'
|? _a=537 || '531'
|| $_a
?}


\kor_url_chor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.41]
:: OPIS: Rozpisanie korekty urlopu lub świadczenia chrobowego dla wycofanej nieobecności.
::   WE: _a [NUMBER] - Nr składników nieobecności.
::       _b [STRING] - Sposób rozliczania nieobecności NG/NR/NK.
::       _c [RULE]   - Formuła na dodanie pozycji do tabeli.
::       _d [NUMBER] - Rok kwalifikacji składnika.
::       _e [NUMBER] - Nr pozycji w kwalifikacji kapitału początkowego.
::  OLD: \kor_url_chor/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_TAB:=tab_tmp(2,
      'LT','STRING[8]','Lista płac',
      'NB','INTEGER','Nieobecność',
      'CP','STRING[3]','Charakter pracy',
      'KW','REAL','Kwota'
);
_firma:=LS.P().FIRMA;
_prac:=LS.P;
_skl:="
   {? __RUB.sys_attr(_a,111) & _b='fiz' || 436
   |? __RUB.sys_attr(_a,111) & _b='umy' || 438
   |? __RUB.sys_attr(_a,1161) || 442
   |? __RUB.sys_attr(_a,1162) || 443
   |? __RUB.sys_attr(_a,1211) || 465
   |? __RUB.sys_attr(_a,1212) || 468
   |? __RUB.sys_attr(_a,12211) || 510
   |? __RUB.sys_attr(_a,12213) || 512
   |? __RUB.sys_attr(_a,12212) || 516
   |? __RUB.sys_attr(_a,1227) || 523
   |? __RUB.sys_attr(_a,1225) || 529
   |? __RUB.sys_attr(_a,1222) || 531
   || _a
   ?}
";
_cp:="
   H.cntx_psh();
   H.index('_HISTKOD');
   H.prefix(_a,'Z');
   _cp:={? H.find_le(_b) & (H.DO>=_b | H.DO=date(0,0,0)) || -H.CP().S || '' ?};
   H.cntx_pop();
   _cp
";

O.cntx_psh();
O.index('LISTYPZN');
LS.cntx_psh();
N.cntx_psh();
:: nieobecności wycofane
N.index('NIEOBWYC');
N.prefix('T',_prac,'W',O.ref());
{? N.first()
|| {!
   |? {? __RUB.sys_attr(N.NB,_a)
      || _nb:={? _b='NG' & ~__RUB.sys_attr(N.NB,111) || N.NR || ($('N.'+_b))() ?};
         O.cntx_psh();
         O.prefix(_firma,-N.LT,);
         {? O.first()
         || LS.use(O.LT);
            LS.index('PRACNRRU');
            LS.prefix(_prac);
            {? LS.find_key(N.NB().RN)
            || {? _TAB.find_key(-N.LT,N.NB().RN)
               || _TAB.KW+=_nb/LS.KW;
                  _TAB.put()
               || _TAB.NB:=N.NB().RN;
                  _TAB.KW:=_nb/LS.KW;
                  _TAB.LT:=-N.LT;
                  _TAB.CP:={? _a=113 || _cp(_prac,N.DO) || '' ?};
                  _TAB.add()
               ?}
            ?}
         ?};
         O.cntx_pop()
      ?};
      N.next()
   !}
?};
:: nieobecności korygowane
N.index(N.ndx_tmp(,1,'KOR',,,'P',,,'LT',,,'RODZAJ',,));
N.prefix('N',_prac,~O.LT,'K',);
_n_kor:=0;
{? N.first()
|| {!
   |? {? _n_kor<>N.N_KOR
      || N.cntx_psh();
         N.prefix();
         {? N.seek(N.N_KOR,) & __RUB.sys_attr(N.NB,_a)
         || _nb:={? _b='NG' & ~__RUB.sys_attr(N.NB,111) || N.NR || ($('N.'+_b))() ?};
            _n_kor:=#N.ref();
            O.cntx_psh();
            O.prefix(_firma,-N.LT,);
            {? O.first()
            || LS.use(O.LT);
               LS.index('PRACNRRU');
               LS.prefix(_prac);
               {? LS.find_key(N.NB().RN)
               || {? _TAB.find_key(-N.LT,N.NB().RN)
                  || _TAB.KW+=_nb/LS.KW;
                     _TAB.put()
                  || _TAB.NB:=N.NB().RN;
                     _TAB.KW:=_nb/LS.KW;
                     _TAB.LT:=-N.LT;
                     _TAB.CP:={? _a=113 || _cp(_prac,N.DO) || '' ?};
                     _TAB.add()
                  ?}
               ?}
            ?};
            O.cntx_pop()
         ?};
         N.cntx_pop()
      ?};
      N.next()
   !}
?};
N.ndx_drop();
N.cntx_pop();

{? _TAB.first()
|| {!
   |? LS.use(_TAB.LT);
      LS.index('PRACNRRU');
      LS.prefix(_prac);
      {? LS.find_key(_skl(_TAB.NB,_TAB.CP))
      || _c(_d,_e,$LS.RB().RN,LS.KW*-1*_TAB.KW$2)
      ?};
      _TAB.next()
   !}
?};

LS.cntx_pop();
O.cntx_pop()


\sum_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [12.41]
:: OPIS: Pobieranie składników płacowych do Rp-7 z list płac.
::   WE: _a [STRING] - Lista kodów sumowanych składników.
::       _b [NUMBER] - Nr pozycji w kwalifikacji kapitału początkowego.
::       _c [TABLE]  - Tablica do zapisywania składników.
::  OLD: \sum_skl/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & _a<>''
|| _lista:=_a
|| return()
?};
{? var_pres('_b')=type_of(0)
|| _poz:=_b
|| return(0)
?};
{? var_pres('_c')=type_of(SYSLOG)
|| _KWOTA:=_c
|| return(0)
?};

params_set('KWOTA',_KWOTA);

_add:="
   _KWOTA:=params_get().KWOTA;
   _KWOTA.prefix(_a,_b,_c,);
   {? _KWOTA.first()
   || _KWOTA.KW+=_d$2;
      _KWOTA.put()
   || _KWOTA.R:=_a;
      _KWOTA.RS:=_b;
      _KWOTA.KW:=_d$2;
      _KWOTA.OP:=_c;
      _KWOTA.add()
   ?}
";

_al:=spli_str(_lista,',');
{! _lp:=1 .. obj_len(_al)
|! {? (_kod:=#_al[_lp])>0
   || LS.prefix(P.ref(),_kod);
      {? LS.first()
      || {!
         |? _op:=exec('opis_skladnika','!ppl_rp7_rrp7',_kod);
            {? __RUB.sys_attr(#_op,423)
            || exec('kor_url_chor','!ppl_rp7_rrp7',113,'NG',_add,O.R,_poz)
            |? __RUB.sys_attr(#_op,413)
            || exec('kor_url_chor','!ppl_rp7_rrp7',121,'NK',_add,O.R,_poz)
            |? _op='532'
            || exec('kor_url_chor','!ppl_rp7_rrp7',122,'NK',_add,O.R,_poz)
            || _add(O.R,_poz,_op,LS.KW)
            ?};
            LS.next()
         !}
      ?}
   ?}
!};
~~


\sum_skl_rhs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [12.41]
:: OPIS: Pobieranie danych z rachunków do Rp-7.
::   WE: _a [STRING] - Lista kodów sumowanych składników.
::       _b [NUMBER] - Nr pozycji w kwalifikacji kapitału początkowego.
::       _c [TABLE]  - Tablica do zapisywania składników.
::  OLD: \sum_skl_rhs/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & _a<>''
|| _lista:=_a
|| return(0)
?};
{? var_pres('_b')=type_of(0)
|| _poz:=_b
|| return(0)
?};
{? var_pres('_c')=type_of(SYSLOG)
|| _KWOTA:=_c
|| return(0)
?};

_ret:=0;
_al:=spli_str(_lista,',');
{! _lp:=1 .. obj_len(_al)
|! {? (_kod:=#_al[_lp])>0
   || LS.prefix(RH.ref(),_kod);
      {? LS.first()
      || {!
         |? _KWOTA.prefix(RH.DRA~1,_poz,_al[_lp],);
            {? _KWOTA.first()
            || _KWOTA.KW+=LS.KW$2;
               _KWOTA.put()
            || _KWOTA.R:=RH.DRA~1;
               _KWOTA.RS:=_poz;
               _KWOTA.KW:=LS.KW$2;
               _KWOTA.OP:=_al[_lp];
               _KWOTA.add()
            ?};
            LS.next()
         !};
         _ret:=1
      ?}
   ?}
!};
_ret


\rok_lis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MKG [12.41]
:: OPIS: Zwrócenie roku kosztowego listy.
::   WE: _a [REFERENCE] - Wskazanie firmy.
::       _b [STRING]    - Symbol listy L9999XXX.
::   WY: Rok.
::  OLD: \rok_lis/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) & _a<>null() & ref_tab(_a)=FIRMA
|| _firma:=_a
|| return(0)
?};
{? var_pres('_b')=type_of('') & +_b=8 & 1+_b='L'
|| _znak:=_b
|| return(0)
?};

O.cntx_psh();
O.index('LISTYPZN');
O.prefix(_firma,~_znak,);
_rok:={? O.first() || O.R ?};
O.cntx_pop;
_rok


\kw_za_godziny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [12.41]
:: OPIS: Obliczenie kwoty wynagrodzenia za godziny.
::   WE: _a [REFERENCE] - Wskazanie godzin.
::       _b [DATE]      - Data powstania godzin.
::       _c [REFERENCE] - Wskazanie pracownika.
::       _d [NUMBER]    - Kod przepracowanych godzin.
::       _e [NUMBER]    - Liczba godzin.
::  OLD: \kw_za_godziny/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=obj_new('KW','OP');
_tab.KW:=0;
_tab.OP:='';

R_GODZ.cntx_psh();
R_GODZ.use((4+R_GODZ.name())+(G.name()+4));
R_GODZ.index('R_GODZ');
R_GODZ.prefix(_a);
{? R_GODZ.first()
|| {!
   |? {? +R_GODZ.LT & R_GODZ.LT=R_GODZ.G().LT || _tab.KW+=R_GODZ.KW ?};
      R_GODZ.next()
   !};
   _tab.OP:=$R_GODZ.RN().RN
|| exec('kal_list','personel');
   _norma:=exec('norma_zmiana','godziny',date(_b~1,_b~2,1),date(_b~1,_b~2,0));
   {? _norma
   || _godz:=exec('nominal','godziny',date(_b~1,_b~2,1),date(_b~1,_b~2,0),1,1,,1)
   || _godz:=exec('nominal','godziny',date(_b~1,_b~2,1),date(_b~1,_b~2,0),1,,,1)
   ?};
   H.cntx_psh();
   H.index('_HISTKOD');
   H.prefix(_c,'Z');
   {? H.find_le(_b)
   || _hsx:=exec('hsx','lista_licz',_b);
      _cp:=-~(1+H.CP().S);
      {? _cp='f' & (_d=48 | _d=54 | _d=63 | _d=65 | _d=67)
      || _tab.KW:=_hsx.S1*_d$2;
         _tab.OP:='100'
      |? _d=55 | _d=56 | _d=7008 | _d=7009 | _d=7015 | _d=7016
      || {? _cp='f'
         || _val:={? _d=7015 | _d=7016
                  || 0
                  || _hsx.S1*_e$2+(_hsx.S2+_hsx.S3)/_godz$2*_e$2
                  ?};
                  _val1:=_hsx.S1*_e$2
         |? _cp='u'
         || _val:=((_hsx.S1+_hsx.S2+_hsx.S3)/_godz)$2*_e$2;
            _val1:=(_hsx.S1/_godz)$2*_e$2
         ?};
         {?_val
         || _minimum:=exec('minkraj_komornik','lista_licz',_b,,1);
            _minimum:=_minimum*_e$2;
            {? _val<_minimum || _val:=_minimum ?}
         ?};
         _val1:={? _d=55 | _d=7008 | _d=7015 || 0.5 || 1 ?}*_val1$2;
         {? _d=7008 | _d=7009 || _val:=_val*0.6$2; _val1:=_val1*0.6$2 ?};
         _tab.KW:=_val+_val1;
         _tab.OP:='120'
      |? _d=64 | _d=68 | _d=69
      || exec('kal_prac','personel');
         {? _cp='u' & _d=64 & H.WY=1
         || 0
         || {? _cp='f'
            || _val:=_hsx.S1*_e$2+(_hsx.S2+_hsx.S3)/_godz$2*_e$2;
               _val1:=_hsx.S1*_e$2
            |? _cp='u'
            || _val:=((_hsx.S1+_hsx.S2+_hsx.S3)/_godz)$2*_e$2;
               _val1:=(_hsx.S1/_godz)$2*_e$2
            ?};
            _val1:={? _d=69 || 1
                   |? _d=68 || 0.5
                   |? _d=64 & __KAL.h_days(_b,_b) || 1
                   || 0
                   ?}*_val1$2;
            _tab.KW:=_val+_val1;
            _tab.OP:='125'
         ?}
      |? _d=57
      || _nk:=exec('ust_nk','lista_licz',_b,'NK');
         exec('kal_list','personel');
         {? _norma
         || _dni:=date(_b~1,_b~2,0)-date(_b~1,_b~2,1);
            _godz_nr:=0;
            {! _ind:=0.._dni
            |! {? __KAL.w_days(date(_b~1,_b~2,0)-_ind,date(_b~1,_b~2,0)-_ind)
               || _godz_nr+=exec('norma','godziny',date(_b~1,_b~2,0)-_ind)
               ?}
            !}
         || _godz_nr:=__KAL.w_hours(date(_b~1,_b~2,1),date(_b~1,_b~2,0))
         ?};
         _pdgn:=20;
         _pr_noc:=exec('ust_nk','lista_licz',_b,'PDGN');
         {? _pr_noc & _pr_noc>_pdgn
         || _pdgn:=_pr_noc
         ?};
         _pdgn:=_pdgn/100;
         _tab.KW:=((_nk/_godz_nr)$2*_pdgn$2)*_e$2;
         _tab.OP:='122'
      |? _d=58 | _d=66 | _d=7011 | _d=7026
      || 'dodatek za dni wolne';
         exec('kal_list','personel');
         A_OKRP.cntx_psh();
         A_OKRP.index('A_OKRDP');
         A_OKRP.prefix(_a);
         _okrr:=G.D~1;
         _okrm:=G.D~2;
         _okr:=0;
         {? A_OKRP.find_le(_b)
         || _okrr:=A_OKRP.DO~1;
            _okrm:=A_OKRP.DO~2;
            _okr:=(A_OKRP.DO~1*12+A_OKRP.DO~2)-(A_OKRP.OD~1*12+A_OKRP.OD~2)
         ?};
         A_OKRP.cntx_pop();
         _wym:=exec('ust_wym','pracownik',date(_okrr,_okrm,0));
         _godz_ro:=__KAL.w_hours(date(_okrr,_okrm,1),date(_okrr,_okrm,0))*_wym;
         {? _godz_ro>0 & H.find_le(date(_okrr,_okrm,0))
         || _hsx1:=exec('hsx','lista_licz',date(_okrr,_okrm,0));
            _OS1:=_hsx1.S1;
            _OS2:=_hsx1.S2;
            _OS3:=_hsx1.S3;
            obj_del(_hsx1); &_hsx1
         || _OS1:=_OS2:=_OS3:=0
         ?};
         exec('kal_prac','personel');
         {? _cp='f'
         || {? _d=58
            || _val:=_hsx.S1*_e$2+(_hsx.S2+_hsx.S3)/_godz$2*_e$2;
               _val+=_e*_hsx.S1$2
            |? _d=7026
            || _val:=((_hsx.S1+_hsx.S2+_hsx.S3)/_godz)$2*_e$2
            || _val:=_e*_OS1$2
            ?}
         |? _cp='u'
         || {? _d=58
            || _val:=((_hsx.S1+_hsx.S2+_hsx.S3)/_godz)$2*_e$2;
               _val+=(_hsx.S1/_godz)$2*_e$2
            || _val:=((_OS1+_OS2+_OS3)/_godz_ro)$2*_e$2;
               {? _d<>7026 || _val+=(_OS1/_godz_ro)$2*_e$2 ?}
            ?}
         ?};
: sprawdzenie daty, od której zostaje zmieniony sposób realizacji dodatku za przekroczenia średniotygodniowe
         _66_ok:=_b>=exec('ustal_date_sred','godziny');
         {? _d=66 | _d=58 | (_d=7026 & (~_66_ok | ~_okr))
         || _tab.KW:=_val;
            _tab.OP:='123'
         |? _okr & (_d=7011 | (_d=7026 & _66_ok))
         || _tab.KW:=_val;
            _tab.OP:='7006'
         ?}
      |? _d=7001
      || {? _a='f'
         || _val:=_hsx.S1*_e$2
         |? _a='u'
         || _val:=_hsx.S1/_godz$2*_e$2
         ?};
         _tab.KW:=_val;
         _tab.OP:='7002'
      ?};
      obj_del(_hsx);
      &_hsx
   ?};
   H.cntx_pop()
?};
R_GODZ.cntx_pop();
_tab


\zapisz_kw_kor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.41]
:: OPIS: Zapisanie kwoty korygowanego składnika do odpowiedniego dla niej roku.
::   WE: _a [TABLE]  - Tabela do zapisu.
::       _b [NUMBER] - Rok, którego dotyczy korekta.
::       _c [NUMBER] - Rok, w którym nastąpiła wypłata.
::       _d [NUMBER] - Nr rubryki.
::       _e [NUMBER] - Kwota korygowana.
::       _f [STRING] - Opis.
::  OLD: \zapisz_kw_kor/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
{? _d<>0 & _e<>0
|| {? ~(_put:=_a.find_key(_b,_d,_f,))
   || _a.blank();
      _a.R:=_b;
      _a.RS:=_d;
      _a.OP:=_f
   ?};
   _a.KW+=_e;
   {? {? _put || _a.put(1) || _a.add(1) ?}
   || {? ~(_put:=_a.find_key(_c,_d,_f,))
      || _a.blank();
         _a.R:=_c;
         _a.RS:=_d;
         _a.OP:=_f
      ?};
      _a.KW-=_e;
      {? _put || _a.put(1) || _a.add(1) ?}
   ?}
?};
~~


\test_kw_listy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.41]
:: OPIS: Sprawdzenie czy kwota jest na wskazanej liście płac.
::   WE: _a [STRING]    - Symbol listy płac.
::       _b [REFERENCE] - Wskazanie pracownika
::       _c [NUMBER]    - Numer rubryki płacowej.
::       _d [NUMBER]    - Kwota.
::  OLD: \test_kw_listy/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
_kw:=0;
{? +_a=8
|| LS.cntx_psh();
   LS.use(-_a);
   LS.index('PRACORUB');
   LS.prefix(_b,_c);
   {? LS.first()
   || {!
      |? _kw+=LS.KW;
         LS.next()
      !}
   ?};
   LS.cntx_pop()
?};
_kw>=_d


\przes_wyp_wyn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.41]
:: OPIS: Korekta wynagrodzeń niewypłaconych w roku, którego dotyczą.
::   WE: _a [REFERENCE] - Wskazanie pracownika.
::       _b [NUMBER]    - Rok początkowy.
::       _c [NUMBER]    - Rok końcowy.
::       _d [ARRAY]     - Tablica z pozycami w kwalifikacji kapitału początkowego.
::       _e [TABLE]     - Tabela z wynikami obliczeń.
::  OLD: \przes_wyp_wyn/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
_Pref:=_a;
_rok_od:=_b;
_rok_do:=_c;
_skl:=_d;
_KWOTA:=_e;

:: kwalifikacja kwot
_kw_kw:="
   _rodz:=0;
   {! _ii:=1 .. obj_len(_a)
   |? ~_rodz
   |! {? _a[_ii]*',%1,' [_b]
      || _rodz:=_ii
      ?}
   !};
   _rodz
";

:: rozliczenie godzin
_godz:=G.names();
{? _godz.first()
|| P.cntx_psh();
   G.cntx_psh();
   O.cntx_psh();
   O.index('LISTYPZN');
   O.prefix();
   {!
   |? G.use(_godz.NAME);
      {? _godz.SIZE<0
      || G.sort()
      ?};
      G.index('PRRODATA');
      G.prefix(_Pref,'G',);
      {? G.first()
      || {!
         |? _rokl:=exec('rok_lis','!ppl_rp7_rrp7',G.FIRMA,G.LT);
            {? +G.LT & G.D~1<>_rokl & (G.D~1>=_rok_od & G.D~1<=_rok_do) & O.find_key(G.P().FIRMA,~G.LT)
            || _kw:=exec('kw_za_godziny','!ppl_rp7_rrp7',G.ref(),G.D,G.P,G.K().RN,G.G);
               {? _kw.KW
               || exec('zapisz_kw_kor','!ppl_rp7_rrp7',_KWOTA,G.D~1,_rokl,_kw_kw(_skl,_kw.OP),_kw.KW,_kw.OP)
               ?};
               obj_del(_kw);
               &_kw
            ?};
            G.next()
         !}
      ?};
      _godz.next()
   !};
   O.cntx_pop();
   G.cntx_pop();
   P.cntx_pop()
?};

:: wyrównania składników
LSW.cntx_psh();
LSW.index('PN');
LSW.prefix(_Pref);
{? LSW.first()
|| _firma:=LSW.P().FIRMA;
   {!
   |? _rokl:=exec('rok_lis','!ppl_rp7_rrp7',_firma,LSW.LT);
      {? +LSW.LT & LSW.DO~1<>_rokl & (LSW.DO~1>=_rok_od & LSW.DO~1<=_rok_do) &
         __RUB.sys_sql(100262)*$LSW.R().RN & exec('test_kw_listy','!ppl_rp7_rrp7',LSW.LT,LSW.P,LSW.R,LSW.KW)
      || exec('zapisz_kw_kor','!ppl_rp7_rrp7',_KWOTA,LSW.DO~1,_rokl,
            _kw_kw(_skl,$LSW.R().RN),LSW.KW,exec('opis_skladnika','!ppl_rp7_rrp7',LSW.R().RN)
         )
      ?};
      LSW.next()
   !}
?};
LSW.cntx_pop();

:: premie okresowe
PREM_OKR.cntx_psh();
PREM_OKR.index('PREM_LST');
PREM_OKR.prefix(_Pref);
{? PREM_OKR.first()
|| _firma:=PREM_OKR.P().FIRMA;
   {!
   |? _rokl:=exec('rok_lis','!ppl_rp7_rrp7',_firma,PREM_OKR.LT);
      {? +PREM_OKR.LT & PREM_OKR.KW_W & PREM_OKR.O_DO~1<>_rokl &
         (PREM_OKR.O_DO~1>=_rok_od & PREM_OKR.O_DO~1<=_rok_do) &
         exec('test_kw_listy','!ppl_rp7_rrp7',PREM_OKR.LT,PREM_OKR.P,PREM_OKR.SKP().R,PREM_OKR.KW_W)
      || exec('zapisz_kw_kor','!ppl_rp7_rrp7',_KWOTA,PREM_OKR.O_DO~1,_rokl,
            _kw_kw(_skl,$PREM_OKR.SKP().R().RN),PREM_OKR.KW_W,
            exec('opis_skladnika','!ppl_rp7_rrp7',PREM_OKR.SKP().R().RN)
         )
      ?};
      PREM_OKR.next()
   !}
?};
PREM_OKR.cntx_pop();

:: nieobecności
_fop:="
   {? __RUB.sys_attr(_a,111) & _b='fiz' || '436'
   |? __RUB.sys_attr(_a,111) & _b='umy' || '438'
   |? __RUB.sys_attr(_a,1161) || '442'
   |? __RUB.sys_attr(_a,1162) || '443'
   |? __RUB.sys_attr(_a,1211) || '465'
   |? __RUB.sys_attr(_a,1212) || '468'
   |? __RUB.sys_attr(_a,12211) || '510'
   |? __RUB.sys_attr(_a,12213) || '512'
   |? __RUB.sys_attr(_a,12212) || '516'
   |? __RUB.sys_attr(_a,1227) || '523'
   |? __RUB.sys_attr(_a,1225) || '529'
   |? __RUB.sys_attr(_a,1222) || '531'
   || ''
   ?}
";
H.cntx_psh();
H.index('_HISTKOD');
H.prefix(_Pref,'Z');
N.cntx_psh();
N.index('NIEOPRAC');
N.prefix(_a);
{? N.first()
|| _firma:=N.P().FIRMA;
   {!
   |? _cp:={? H.find_le(N.DO) & (H.DO>=N.OD | H.DO=date(0,0,0)) || -H.CP().S || '' ?};
      _rok_nlt:=exec('rok_lis','!ppl_rp7_rrp7',_firma,N.LT);
      _op:=_fop(N.NB,_cp);
      {? +N.LT & N.RODZAJ='Z' & (N.DO~1>=_rok_od & N.DO~1<=_rok_do)
      || {? _rok_nlt<>N.OD~1
         || _wart:={? N.WART || N.WART || N.NK*N.STD ?};
            {? _wart
            || exec('zapisz_kw_kor','!ppl_rp7_rrp7',_KWOTA,N.DO~1,_rok_nlt,_kw_kw(_skl,_op),_wart,_op)
            ?}
         ?}
      |? _rok_nolt:=exec('rok_lis','!ppl_rp7_rrp7',_firma,~N.O().LT);
         +N.LT & N.RODZAJ='W' & (N.DO~1>=_rok_od & N.DO~1<=_rok_do) & _rok_nolt<>_rok_nlt
      || _wart:={? N.WART || N.WART || N.NK*N.STD ?};
         {? _wart
         || exec('zapisz_kw_kor','!ppl_rp7_rrp7',_KWOTA,_rok_nolt,_rok_nlt,_kw_kw(_skl,_op),_wart,_op)
         ?};
         {? N.POTR1
         || exec('zapisz_kw_kor','!ppl_rp7_rrp7',_KWOTA,_rok_nlt,_rok_nolt,_kw_kw(_skl,'100'),N.POTR1,'100')
         ?};
         {? N.POTR2
         || exec('zapisz_kw_kor','!ppl_rp7_rrp7',_KWOTA,_rok_nlt,_rok_nolt,_kw_kw(_skl,'101'),N.POTR2,'101')
         ?};
         {? N.POTR3
         || exec('zapisz_kw_kor','!ppl_rp7_rrp7',_KWOTA,_rok_nlt,_rok_nolt,_kw_kw(_skl,'110'),N.POTR3,'110')
         ?}
      |? +N.LT & N.RODZAJ='R' & (N.DO~1>=_rok_od & N.DO~1<=_rok_do)
      || _kor_n:=#N.ref();
         _rok_k:=_rok_nlt;
         _url_k:=__RUB.sys_attr(N.NB,111);
         N.cntx_psh();
         N.index('NIEOTREE');
         N.prefix(_kor_n);
         {? N.first()
         || {!
            |? _rok_knlt:=exec('rok_lis','!ppl_rp7_rrp7',_firma,N.LT);
               {? N.DO~1<>_rok_knlt
               || _wart:={? N.WART || N.WART || N.NK*N.STD ?};
                  {? _wart
                  || _opk:=_fop(N.NB,_cp);
                     exec('zapisz_kw_kor','!ppl_rp7_rrp7',_KWOTA,N.DO~1,_rok_knlt,_kw_kw(_skl,_opk),_wart,_opk)
                  ?};
                  {? _url_k
                  || {? N.POTR1
                     || exec('zapisz_kw_kor','!ppl_rp7_rrp7',_KWOTA,_rok_knlt,N.DO~1,_kw_kw(_skl,'100'),N.POTR1,'100')
                     ?};
                     {? N.POTR2
                     || exec('zapisz_kw_kor','!ppl_rp7_rrp7',_KWOTA,_rok_knlt,N.DO~1,_kw_kw(_skl,'101'),N.POTR2,'101')
                     ?};
                     {? N.POTR3
                     || exec('zapisz_kw_kor','!ppl_rp7_rrp7',_KWOTA,_rok_knlt,N.DO~1,_kw_kw(_skl,'110'),N.POTR3,'110')
                     ?}
                  ?};
                  _rok_k:=_rok_knlt
               ?};
               N.next()
            !}
         ?};
         N.cntx_pop();
         {? _rok_k<>_rok_nlt
         || _wart:={? N.WART || N.WART || N.NK*N.STD ?};
            {? _wart
            || exec('zapisz_kw_kor','!ppl_rp7_rrp7',_KWOTA,_rok_k,_rok_nlt,_kw_kw(_skl,_op),_wart,_op)
            ?}
         ?}
      ?};
      N.next()
   !}
?};
N.cntx_pop();
H.cntx_pop();
~~


\zap_skl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [12.41]
:: OPIS: Zapisanie kwot do kapitału początkowego w Rp-7.
::   WE: _a [NUMBER] - Rok.
::       _b [ARRAY]  - Kwoty.
::       _c [ARRAY]  - Opis.
::  OLD: \zap_skl/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
_rok:=_a;
_kw:=_b;
_op:=_c;

R.cntx_psh();
R.index('RUBKOD');
R.prefix();
RP7_KP.cntx_psh();
RP7_KP.index('ROK');
RP7_KP.prefix(RP7_OS.ref(),_rok);
_put:=RP7_KP.first();
{? ~(_put & RP7_KP.BLOKADA='T')
|| {? ~_put
   || RP7_KP.blank();
      RP7_RK.cntx_psh();
      RP7_RK.index('ROK');
      RP7_RK.prefix(_rok);
      {? ~RP7_RK.first()
      || RP7_RK.blank();
         RP7_RK.ROK:=_rok;
         RP7_RK.add()
      ?};
      RP7_KP.ROK:=RP7_RK.ref();
      RP7_RK.cntx_pop()
   ?};
   RP7_KP.WST:=_kw[1];
   RP7_KP.WZM:=_kw[2];
   RP7_KP.INN:=_kw[3];
:: 4, 5 - nieużywne w tej wersji
   RP7_KP.ZAS:=_kw[6];
   RP7_KP.SW:=_kw[7];
   RP7_KP.OB:=_kw[8];
   RP7_KP.PRZ:=_kw[9];
   RP7_KP.BLOKADA:='N';
   exec('rp7_kp_wsx_ae','!ppl_rp7_rrp7');
   {? {? _put || RP7_KP.put(1) || RP7_KP.add(1) ?}
   || RP7_KW.cntx_psh();
      RP7_KW.index('ZAPIS');
      RP7_KW.prefix(RP7_KP.ref());
      {? RP7_KW.first()
      || {!
         |? RP7_KW.del()
         !}
      ?};
      {! _l1:=1 .. obj_len(_op)
      |! _aop:=spli_str(_op[_l1],',');
         {! _l2:=1 .. obj_len(_aop)
         |! {? (_kod:=#_aop[_l2])>0
            || {? R.find_key(_kod) &
                  ~__RUB.sys_attr(_kod,100212) & ~__RUB.sys_attr(_kod,100232) & ~__RUB.sys_attr(_kod,100262)
               || RP7_KW.blank(1);
                  RP7_KW.ZAPIS:=RP7_KP.ref();
                  RP7_KW.T:=$_l1;
                  RP7_KW.R:=R.ref();
                  RP7_KW.add(1)
               ?}
            ?}
         !};
         obj_del(_aop)
      !};
      RP7_KW.cntx_pop()
   ?}
?};
RP7_KP.cntx_pop();
R.cntx_pop();
~~


\rp7_kp_auto_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Formuła automatycznie dodaje informacje o wynagrodzeniu (RP7_KP) wskazanej osoby (RP7_OS).
::   WE:  _a  [REFERENCE] - Wskazanie osoby (RP7_OS).
::       [_b] [NUMBER]    - Tryb wsadowy (bez komunikatów):
::                           0 - Nie [domyślnie];
::                           1 - Tak.
::   WY: 0 - Błąd parametru wywołania.
::       1 - Operacja wykonana.
::  OLD: \zap_kp/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
_fml:='\\rp7_kp_auto_add/!ppl_rp7_rrp7.fml';

_batch:=var_pres('_b')=type_of(0) & _b;
{? var_pres('_a')<>type_of(null()) | _a=null() | ref_tab(_a)<>RP7_OS
|| {? ~_batch
   || FUN.error('%1\nBrak lub nieprawidłowy typ parametru %2.'@ [_fml,'_a'])
   ?};
   return(0)
?};

_ret:=1;

P.cntx_psh();
P.prefix();
RP7_OS.cntx_psh();
RP7_OS.prefix();
{? ~RP7_OS.seek(_a)
|| _ret:=0;
   {? ~_batch
   || FUN.error('%1\nNieprawidłowa wartość parametru %2.'@ [_fml,'_a'])
   ?}
|? RP7_OS.P=null()
|| _ret:=0;
   {? ~_batch
   || FUN.error('%1\nOsoba wskazana parametrem %2 nie jest powiązana z pracownikiem.'@ [_fml,'_a'])
   ?}
||
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
:: Parametryzacja pobieranych kwot.
   _arrlen:=9;
   _skl:=obj_new(_arrlen);
   _kw:=obj_new(_arrlen);
   _op:=obj_new(_arrlen);

:  Składniki stałe.
   _skl[1]:=',%1,' [__RUB.sys_sql(10021)];
:  Składniki zmienne.
   _skl[2]:=',%1,%2,%3,' [__RUB.sys_sql(10022),__RUB.sys_sql(10023),__RUB.sys_sql(10025)];
:  Inne.
   _skl[3]:=',%1,%2,' [__RUB.sys_sql(10029),__RUB.usr_sql(10029)];
:  Składniki nieużywane w obecnj wersji.
   _skl[4]:='';
   _skl[5]:='';
:  Wynagrodzenia chorobowe / zasiłki.
   _skl[6]:=',%1,%2,' [__RUB.sys_sql(1002611),__RUB.sys_sql(1002621)];
:  Świadczenia rehabilitacyjne.
   _skl[7]:=',%1,%2,' [__RUB.sys_sql(1002612),__RUB.sys_sql(1002622)];
:  Wynagrodzenia obok zasiłków.
   _skl[8]:=',%1,%2,' [__RUB.sys_sql(10027),__RUB.usr_sql(10027)];
:  Przychód (do ubezpieczenia wypadkowego).
   _skl[9]:=',%1,%2,' [__RUB.sys_sql(10028),__RUB.usr_sql(10028)];

   _ekw:=__RUB.sys_sql(10024);

   _UMPT:=sql(
      'select P.DZA, P.DZ, P.IP '
      'from P join F_ZATR using(P.F_ZATR,F_ZATR.REFERENCE) '
      'where P.OSOBA=:_a and P.F_ZATR=\'P\' '
      'order by 1, 2',RP7_OS.P().OSOBA
   );
   _umpw:=_UMPT.size()>1;
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
:: Obliczenia.
   O.cntx_psh();
   O.prefix();
   O_P.cntx_psh();
   O_P.index('P_RMK');
   O_P.prefix('T',P.ref());
   _start:={? O_P.first() & O_P.O().get() || {? O.R<=RP7_OS.REK~1 || O.R ?} ?};
   _stop:={? O_P.last() & O_P.O().get() || {? O.R>RP7_OS.REK~1 || RP7_OS.REK~1 || O.R ?} ?};
   {? _start & _stop
   || LS.cntx_psh();
      RH.cntx_psh();
      RH.index('RACHDATA');

      _umz:=0;
      _KWOTA:=tab_tmp(3,
         'R','INTEGER','Rok',
         'RS','INTEGER','Rodzaj składnika',
         'OP','STRING[10]','Opis',
         'KW','REAL','Kwota'
      );

      {! _rok:=_start .. _stop
      |! O_P.prefix('T',P.ref(),_rok);
         {? O_P.first()
         || {! _lp:=1 .. _arrlen
            |! _kw[_lp]:=0;
               _op[_lp]:=''
            !};

            {!
            |? _znlisty:=O_P.O().LT;
               echo('Odczyt kwot z listy %1.'@ [(~_znlisty)]);
               LS.use(_znlisty);
               LS.index('PRACNRRU');
               {! _lp:=1 .. _arrlen
               |! exec('sum_skl','!ppl_rp7_rrp7',_skl[_lp]+{? _rok>=1999 & _lp=2 || ','+_ekw || '' ?},_lp,_KWOTA)
               !};
               O_P.next()
            !};

            {? _rok>=1999
            || RH.prefix(P.FIRMA,P.OSOBA,_rok);
               {? RH.first()
               || {!
                  |? {? 2+RH.ZC_INFO().TTUB().KOD='01' &
                        (P.DZA<=RH.DWY) & (P.DZ=date(0,0,0) | RH.DWY<=P.DZ) &
                        exec('czy_prac','osoba',P.OSOBA,RH.DWY)
                     || _znlisty:=~RH.O().LT;
                        echo('Odczyt kwot ze zleceń %1.'@ [_znlisty]);
                        LS.use(-_znlisty);
                        LS.index('ZLEC');
                        _testz:=0;
                        {! _lp:=1 .. _arrlen
                        |! _testz+=exec('sum_skl_rhs','!ppl_rp7_rrp7',
                              _skl[_lp]+{? _rok>=1999 & _lp=2 || ','+_ekw || '' ?},_lp,_KWOTA
                           )
                        !};
                        {? _testz
                        || {? _umpw & _UMPT.first()
                           || _ile:=0;
                              {!
                              |? {? (_UMPT.DZA<=RH.DWY) & (_UMPT.DZ=date(0,0,0) | RH.DWY<=_UMPT.DZ)
                                 || _ile+=1
                                 ?};
                                 _UMPT.next()
                              !};
                              {? _ile>1
                              || _umz+=1
                              ?}
                           ?}
                        ?}
                     ?};
                     RH.next()
                  !}
               ?}
            ?}
         ?}
      !};
      echo();

::    Korekta kwot wynikająca z daty powstania, a nie daty wypłaty składnika płacowego.
      _KWOTA.clear();
       exec('przes_wyp_wyn','!ppl_rp7_rrp7',P.ref(),_start,_stop,_skl,_KWOTA);

      _KWOTA.clear();
      _zeruj:="{! _lp:=1 .. _a |! _b[_lp]:=0; _c[_lp]:=',' !}";
      _zeruj(_arrlen,_kw,_op);
      _again:=_KWOTA.first();
      {!
      |? _again
      |! _rok:=_KWOTA.R;
         {? _KWOTA.KW
         || _kw[_KWOTA.RS]+=_KWOTA.KW;
            {? _op[_KWOTA.RS]*(',%1,' [_KWOTA.OP])=0
            || _op[_KWOTA.RS]+=_KWOTA.OP+','
            ?}
         ?};
         _again:=_KWOTA.next();
         {? ~_again | _rok<>_KWOTA.R
         || exec('zap_skl','!ppl_rp7_rrp7',_rok,_kw,_op);
            _zeruj(_arrlen,_kw,_op)
         ?}
      !};

      {? _umz
      || FUN.info(
            'Z pracownikiem jest/była podpisana więcej niż jedna umowa o pracę.\n'
            'Wynagrodzenie zawiera również wypłaty z tytułu umów cywilnoprawnych\n'
            'zawartych z pracownikiem (kod tytułu ubezpieczenia 01xx).\n'
            'Ponieważ nie można ustalić, z którą umową o pracę związane są umowy cywilnoprawne\n'
            'kwoty z nich wynikające powinny zostać zweryfikowane.'@
         )
      ?};

      RH.cntx_pop();
      LS.cntx_pop()
   ?};
   O_P.cntx_pop();
   O.cntx_pop()


?};
RP7_OS.cntx_pop();
P.cntx_pop();

_ret


\rp7_kp_kwalifikuj_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Kwalifikuj -> Wybierz/Pomiń - grupa przed" w oknie WER tabeli RP7_KP.
::   WE: [_a] [INTEGER] - Tryb pracy:
::                         1 - Wybierz.
::                         0 - Pomiń [domyślnie].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tryb:=var_pres('_a')=type_of(0) & _a;
{? _tryb
|| FUN.ask('Czy na pewno chcesz zakwalifikować zaznaczone lata?'@)
|| FUN.ask('Czy na pewno chcesz zrezygnować z kwalifikacji zaznaczonych lat?'@)
?}


\rp7_kp_kwalifikuj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Kwalifikuj -> Wybierz/Pomiń - przed" w oknie WER tabeli RP7_KP.
::   WE: [_a] [INTEGER] - Tryb pracy:
::                         1 - Wybierz.
::                         0 - Pomiń [domyślnie].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tryb:=var_pres('_a')=type_of(0) & _a;
{? RP7_KP.sel_size() |
   {? _tryb
   || FUN.ask('Czy na pewno chcesz zakwalifikować bieżący rok?'@)
   || FUN.ask('Czy na pewno chcesz zrezygnować z kwalifikacji bieżącego roku?'@)
   ?}
|| _nz:={? _tryb || 'T' || 'N' ?};
   {? RP7_KP.Z<>_nz
   || RP7_KP.Z:=_nz;
      RP7_KP.put()
   ?}
?}


\rp7_kp_blokuj_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Obsługa akcji "Blokuj -> Wybierz/Pomiń - grupa przed" w oknie WER tabeli RP7_KP.
::   WE: [_a] [INTEGER] - Tryb pracy:
::                         1 - Wybierz.
::                         0 - Pomiń [domyślnie].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tryb:=var_pres('_a')=type_of(0) & _a;
{? _tryb
|| FUN.ask('Czy na pewno chcesz blokować zaznaczone lata przed aktualizacją?'@)
|| FUN.ask('Czy na pewno chcesz zrezygnować z blokowania zaznaczonych lat przed aktualizacją?'@)
?}


\rp7_kp_blokuj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Obsługa akcji "Blokuj -> Wybierz/Pomiń - przed" w oknie WER tabeli RP7_KP.
::   WE: [_a] [INTEGER] - Tryb pracy:
::                         1 - Wybierz.
::                         0 - Pomiń [domyślnie].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tryb:=var_pres('_a')=type_of(0) & _a;
{? RP7_KP.sel_size() |
   {? _tryb
   || FUN.ask('Czy na pewno chcesz zablokować bieżący rok przed aktualizacją?'@)
   || FUN.ask('Czy na pewno chcesz zrezygnować z blokowania bieżącego roku przed aktualizacją?'@)
   ?}
|| _nz:={? _tryb || 'T' || 'N' ?};
   {? RP7_KP.BLOKADA<>_nz
   || RP7_KP.BLOKADA:=_nz;
      RP7_KP.put()
   ?}
?}


\rp7_kp_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie WER tabeli RP7_KP.
::   WE: _a [NUMBER] - Rekord bieżący?
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _ag:=
      {? RP7_KP.sel_size()
      || ''
      || {? RP7_KP.Z='T' || 'W(W)' || 'W(P)' ?}+
         {? RP7_KP.BLOKADA='T' || 'B(W)' || 'B(P)' ?}
      ?};
   RP7_KP.actions_grayed('WER',_ag)
?};
{? RP7_KP.Z<>'T'
|| Color.fnd_kol('RP7_KP#01#01')
?}


\rp7_kp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Rekord - po" w oknie WER tabeli RP7_KP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_chk:=__CHK.table(RP7_KP,-menu_txt()='popraw',,'ROK');
{? type_of(_chk)<>type_of(0) | ~_chk
|| return(_chk)
?};

{? RP7_KP.WST<0
|| return(__CHK.err_fld(RP7_KP,'WST',1,'Wartość nie może być ujemna.'@))
?};
{? RP7_KP.WZM<0
|| return(__CHK.err_fld(RP7_KP,'WZM',1,'Wartość nie może być ujemna.'@))
?};
{? RP7_KP.WIN<0
|| return(__CHK.err_fld(RP7_KP,'WIN',1,'Wartość nie może być ujemna.'@))
?};
{? RP7_KP.SNA<0
|| return(__CHK.err_fld(RP7_KP,'SNA',1,'Wartość nie może być ujemna.'@))
?};
{? RP7_KP.SUB<0
|| return(__CHK.err_fld(RP7_KP,'SUB',1,'Wartość nie może być ujemna.'@))
?};

''


\rp7_kp_legenda_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Legenda" dla tabeli RP7_KP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','RP7_KP#01')


\rp7_kw_zapis_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Wartość początkowa pola RP7_KW.ZAPIS.
::   WE:
::   WY:
::  OLD: \RP7_KP/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
RP7_KP.ref()


\rp7_kw_r_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Po redagowaniu pola RP7_KW.R.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? RP7_KW.R<>null()
|| RP7_KW.W:=RP7_KW.R().RT
?};
1


\rp7_kw_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie WER tabeli RP7_KW.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_typ:=RP7_KW.T;
POLA_GRP.TXT_1:=
   {? _typ='1' || 'Stałe'
   |? _typ='2' || 'Zmienne'
   |? _typ='3' || 'Inne'
   |? _typ='4' || '*W naturze'
   |? _typ='5' || '*Z ubezpieczenia'
   |? _typ='6' || 'Zasiłki'
   |? _typ='7' || 'Świadczenia'
   |? _typ='8' || 'Wynagrodzenia obok zasiłków'
   |? _typ='9' || 'Przychód'
   || '???'
   ?};
~~


\rp7_kw_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Rekord - po" w oknie WER tabeli RP7_KW.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? (_chk:=__CHK.record( RP7_KW,,'W'))<>''
|| return(_chk)
?};

{? RP7_KW.R<>null() & RP7_KW.R().RT<>RP7_KW.W &
   ~FUN.ask('Wyjaśnienie jest rózne od nazwy składnika płacowego.\nCzy na pewno kontynuować?'@)
|| return('W')
?};

''


\rp7_nb_auto_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Formuła usuwa wszystkie nieobecności (RP7_NB) wskazanej osoby (RP7_OS).
::   WE:  _a  [REFERENCE] - Wskazanie osoby (RP7_OS), dla której zostaną usunięte nieobecności (RP7_NB).
::       [_b] [NUMBER]    - Tryb wsadowy (bez komunikatów):
::                           0 - Nie [domyślnie];
::                           1 - Tak.
::   WY: 0 - Błąd parametru wywołania.
::       1 - Operacja wykonana.
::  OLD: \del_nb/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(null()) | _a=null() | ref_tab(_a)<>RP7_OS
|| {? ~(var_pres('_b')=type_of(0) & _b)
   || FUN.error('%1\nBrak lub nieprawidłowy typ parametru %2.'@ ['\\rp7_nb_auto_del/!ppl_rp7_rrp7.fml','_a'])
   ?};
   return(0)
?};
RP7_NB.cntx_psh();
RP7_NB.index('OD');
RP7_NB.prefix(_a);
{? RP7_NB.first()
|| {!
   |? {? RP7_NB.BLOKADA='T'
      || RP7_NB.next()
      || RP7_NB.del()
      ?}
   !}
?};
RP7_NB.cntx_pop();
1


\rp7_nb_auto_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Formuła automatycznie dodaje nieobecności (RP7_NB) wskazanej osoby (RP7_OS), a dokładniej związanego z nią
::       pracownika.
::   WE:  _a  [REFERENCE] - Wskazanie osoby (RP7_OS).
::       [_b] [NUMBER]    - Tryb wsadowy (bez komunikatów):
::                           0 - Nie [domyślnie];
::                           1 - Tak.
::   WY: 0 - Błąd parametru wywołania.
::       1 - Operacja wykonana.
::  OLD: \zap_nb/rp7.fml
::----------------------------------------------------------------------------------------------------------------------
_fml:='\\rp7_nb_auto_add/!ppl_rp7_rrp7.fml';

_batch:=var_pres('_b')=type_of(0) & _b;
{? var_pres('_a')<>type_of(null()) | _a=null() | ref_tab(_a)<>RP7_OS
|| {? ~_batch
   || FUN.error('%1\nBrak lub nieprawidłowy typ parametru %2.'@ [_fml,'_a'])
   ?};
   return(0)
?};

_ret:=0;
RP7_OS.cntx_psh();
RP7_OS.prefix();
{? ~RP7_OS.seek(_a)
|| {? ~_batch
   || FUN.error('%1\nNieprawidłowa wartość parametru %2.'@ [_fml,'_a'])
   ?}

|? RP7_OS.P=null()
|| {? ~_batch
   || FUN.error('%1\nBrak wskazania na pracownika.'@ [_fml])
   ?}

|? exec('rp7_nb_auto_del','!ppl_rp7_rrp7',RP7_OS.ref())
|| echo('Automatyczne dołączanie nieobecności. Proszę czekać ...'@);
   _NB:=sql(
      'select distinct R.RN, R.RT, N.OD, N.DO, 0 ERR, SPACE(255) MSG '
      'from N join R using (N.NB,R.REFERENCE) '
      'where N.KOR=\'N\' and N.P=:_a and to_date(:_b)<=N.OD and N.OD<=to_date(:_c) and R.RN in (%1)'
      'order by N.OD, N.DO' [__RUB.sys_sql(191)],
      RP7_OS.P,date(1991,11,14),RP7_OS.REK
   );
   _ndx:=obj_new('OD','ERR');
   _ndx.OD:=_NB.index('?');
   _ndx.ERR:=_NB.ndx_tmp(,,'ERR',,,'OD',,,'DO',,);

:: Scalanie.
   {? _NB.first()
   || _rn:=_NB.RN;
      _do:=_NB.DO;
      _ref:=_NB.ref();
      {!
      |? _NB.next()
      |! {? _rn=_NB.RN & _do+1=_NB.OD
::          Kontynuacja - można połączyć.
         || _do:=_NB.DO;
            _NB.del();
            _NB.seek(_ref);
            _NB.DO:=_do;
            _NB.put()
         || _rn:=_NB.RN;
         _do:=_NB.DO;
         _ref:=_NB.ref()
         ?}
      !}
   ?};

   {? _NB.first()
   || RP7_NB.cntx_psh();
      RP7_NB.index('KOD');
      RP7_NB.prefix(RP7_OS.ref());
      {!
      |? {? RP7_NB.find_key(_NB.RN,_NB.OD,_NB.DO)
::          Dokładnie taka sama nieobecność znajduje się już w danych (najprawdopodobniej zablokowana). Nie róbmy więc
::          scen - uznajmy, że sytuacja jest prawidłowa.
         || ~~
         || RP7_NB.blank(1);
            RP7_NB.OSOBA:=RP7_OS.ref();
            RP7_NB.R:=__RUB.ref(_NB.RN);
            RP7_NB.OD:=_NB.OD;
            RP7_NB.DO:=_NB.DO;
            RP7_NB.BLOKADA:='N';
            _ret:=exec('rp7_nb_ae','!ppl_rp7_rrp7',0,1);
            {? _ret=''
            || RP7_NB.add()
            || _NB.ERR:=1;
               _NB.MSG:=gsub(_ret,'\n',' ');
               _NB.put()
            ?}
         ?};
         _NB.next()
      !};
      RP7_NB.cntx_pop();

      _NB.index(_ndx.ERR);
      _NB.prefix(1);
      {? _NB.first()
      || FUN.info(
            'W trakcie aktualizacji nieobecności wystąpiły problemy.\n'
            'Szczegóły zostaną wyświetlone po zamknięciu bieżącego okienka.'@
         );
         _dh:=_NB.size();
         {? _dh<5
         || _dh:=5
         |? _dh>30
         || _dh:=30
         ?};
         _ws:=_NB.mk_sel('Nieobecności niezaimportowane'@,,,,,,_dh,,'U');
         _NB.win_fld(_ws,,'RN',,,5,,,MS.name(R,'RN'),,MS.comment(R,'RN'));
         _NB.win_fld(_ws,,'RT',,,,,,MS.name(R,'RT'),,MS.comment(R,'RT'));
         _NB.win_fld(_ws,,'OD',,,,,,MS.name(RP7_NB,'OD'),,MS.comment(RP7_NB,'OD'));
         _NB.win_fld(_ws,,'DO',,,,,,MS.name(RP7_NB,'DO'),,MS.comment(RP7_NB,'DO'));
         _NB.win_fld(_ws,,'MSG',,,80,,,'Komunikat'@,,'Treść komunikatu'@);
         _NB.win_act(_ws,,'Szukaj');
         _NB.win_act(_ws,,'Kolejność');
         _NB.win_sel(_ws);
         _NB.win_edit(_NB.mk_edit(,1));
         _NB.select()
      ?}
   ?};

   echo();

   _ret:=1

?};
RP7_OS.cntx_pop();
_ret


\rp7_nb_blokuj_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Obsługa akcji "Blokuj -> Wybierz/Pomiń - grupa przed" w oknie WER tabeli RP7_NB.
::   WE: [_a] [INTEGER] - Tryb pracy:
::                         1 - Wybierz.
::                         0 - Pomiń [domyślnie].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tryb:=var_pres('_a')=type_of(0) & _a;
{? _tryb
|| FUN.ask('Czy na pewno chcesz blokować zaznaczone nieobecności przed aktualizacją?'@)
|| FUN.ask('Czy na pewno chcesz zrezygnować z blokowania zaznaczonych nieobecności przed aktualizacją?'@)
?}


\rp7_nb_blokuj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Obsługa akcji "Blokuj -> Wybierz/Pomiń - przed" w oknie WER tabeli RP7_NB.
::   WE: [_a] [INTEGER] - Tryb pracy:
::                         1 - Wybierz.
::                         0 - Pomiń [domyślnie].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tryb:=var_pres('_a')=type_of(0) & _a;
{? RP7_NB.sel_size() |
   {? _tryb
   || FUN.ask('Czy na pewno chcesz zablokować bieżącą nieobecność przed aktualizacją?'@)
   || FUN.ask('Czy na pewno chcesz zrezygnować z blokowania bieżącej nieobecności przed aktualizacją?'@)
   ?}
|| _nz:={? _tryb || 'T' || 'N' ?};
   {? RP7_NB.BLOKADA<>_nz
   || RP7_NB.BLOKADA:=_nz;
      RP7_NB.put()
   ?}
?}


\rp7_nb_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie WER tabeli RP7_NB.
::   WE: _a [NUMBER] - Rekord bieżący?
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| RP7_NB.actions_grayed('WER',{? RP7_NB.sel_size() || '' |? RP7_NB.BLOKADA='T' || 'B(W)' || 'B(P)' ?})
?};
~~


\rp7_nb_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.14]
:: OPIS: Obsługa akcji "Rekord - po" w oknie WER tabeli RP7_NB.
::   WE: [_a] [NUMBER] - Czy poprawianie rekordu? Domyślnie wartość jest ustalana na podstawie tekstu wybranej
::                       pozycji menu:
::                       0 - Nie (dołączanie).
::                       1 - Tak (poprawianie).
::       [_b] [NUMBER] - Tryb wsadowy (bez komunikatów):
::                       0 - Nie, komunikaty będą wyświetlane [domyślnie].
::                       1 - Tak, komunikaty nie będą wyświetlane.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_popraw:={? var_pres('_a')=type_of(0) || _a || -menu_txt()='popraw' ?};
_batch:=var_pres('_b')=type_of(0) & _b;

{? RP7_NB.R=null()
|| {? _batch
   || return(__CHK.empty_msg('Składnik'@))
   || __CHK.err_empty('Składnik'@);
      return('R')
   ?}
?};

{? (_chk:=__CHK.record(RP7_NB,_batch,'OD','DO'))<>''
|| {? _batch
   || return(__CHK.empty_msg(MS.name(RP7_NB,_chk)))
   || return(_chk)
   ?}
?};

exec('check','overlap',{? _popraw || RP7_NB.ref() || null() ?},RP7_NB,,,{? _batch || 2 || 0 ?},,,'OD',RP7_NB.OSOBA)


\rp7_woj_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [20.14]
:: OPIS: przycisk pola RP7_OS.MIASTO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T'
|| exec('ter_woj_wybierz','teryt','RP7_OS','WOJEWODZ')
?}


\rp7_pow_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [20.14]
:: OPIS: przycisk pola RP7_OS.POWIAT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T'
|| exec('ter_pow_wybierz','teryt','RP7_OS','POWIAT','WOJEWODZ')
?}


\rp7_gmi_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [20.14]
:: OPIS: przycisk pola RP7_OS.GMINA
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T'
|| exec('ter_gmi_wybierz','teryt','RP7_OS','GMINA','POWIAT','WOJEWODZ')
?}


\rp7_msc_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [20.14]
:: OPIS: przycisk pola RP7_OS.MIASTO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T'
|| exec('ter_msc_wybierz','teryt','RP7_OS','MIASTO','GMINA','POWIAT','WOJEWODZ')
?}


\rp7_ul_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [20.14]
:: OPIS: przycisk pola RP7_OS.UL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T'
|| exec('ter_uli_wybierz','teryt','RP7_OS','ULICA','MIASTO','GMINA','POWIAT','WOJEWODZ')
?}


\rp7_teryt_sprawdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [20.14]
:: OPIS: sprawdzanie zgodności z TERYT danych adresowych tabeli RP7_OS
::   WE:
::   WY: 1 - zgodne 0 - niezgodne
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.TER_AKT='T' & XINFO.TER_KNT='T'
|| _par:=exec('ter_sprawdz_a','teryt');
   _par.PYT_KOM:='P';
   _par.TAB:='RP7_OS';
   _par.ULI_P:='ULICA';
   _par.MSC_P:='MIASTO';
   _par.GMI_P:='GMINA';
   _par.POW_P:='POWIAT';
   _par.WOJ_P:='WOJEWODZ';
   _par_ULI_ND:=1;
   _wyn:=exec('ter_sprawdz','teryt',_par);
   {? ~_wyn.DALEJ || _wyn.POLE || 1 ?}
|| 1
?}


\rp7_os_teryt_wyszarz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [20.14]
:: OPIS: Wyszarzanie przycisków teryt
::   WE:
::   WY: 1 - zgodne 0 - niezgodne
::----------------------------------------------------------------------------------------------------------------------
_red:='RED';
{? XINFO.TER_AKT<>'T'
|| RP7_OS.btn_eopt(_red,'WOJEWODZ','state=grayed');
   RP7_OS.btn_eopt(_red,'POWIAT','state=grayed');
   RP7_OS.btn_eopt(_red,'GMINA','state=grayed');
   RP7_OS.btn_eopt(_red,'MIASTO','state=grayed');
   RP7_OS.btn_eopt(_red,'ULICA','state=grayed')
|| RP7_OS.btn_eopt(_red,'WOJEWODZ','state=normal');
   RP7_OS.btn_eopt(_red,'POWIAT','state=normal');
   RP7_OS.btn_eopt(_red,'GMINA','state=normal');
   RP7_OS.btn_eopt(_red,'MIASTO','state=normal');
   RP7_OS.btn_eopt(_red,'ULICA','state=normal')
?}


\rp7_os_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesosnow [20.14]
:: OPIS: Obsługa akcji "Popraw" w oknie WER tabeli RP7_OS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('rp7_os_teryt_wyszarz','!ppl_rp7_rrp7')


\rp7_os_dolaczr_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesosnow [20.14]
:: OPIS: Obsługa akcji "Dołącz -> Ręcznie" w oknie WER tabeli RP7_OS.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('rp7_os_teryt_wyszarz','!ppl_rp7_rrp7')


:Sign Version 2.0 jowisz:1048 2020/10/16 15:19:20 396be30a04e60859e6f615566739d4681b7aaa52b4380b1f99ac9bcee18dfbfa0395992ac93fdc4507065b0941a5da6c7ce94e8b53d7f7d9bf236f8822ea25c0c313a313c0576d061e6e7118da7b4a98f07d3eb3e6ccd637c74ec479f674c43f586f89cc2ac1f8c6d7f519152bb055982d7d9b49b41c68708542dbbe4253859b
