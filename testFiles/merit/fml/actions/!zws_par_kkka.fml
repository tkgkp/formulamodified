:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_kkka.fml [17.00]
:: Utworzony: 2015.12.10
:: Autor: AMK
::======================================================================================================================
:: Zawartosc: Formuły czynności ZWS_PAR_KKKA - Definicje kontaktów z kontrah.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formuła główna czynności ZWS_PAR_KKKA - Definicje kontaktów z kontrah.
::   WE: _a - [obj_new] - parametry wejsciowe czynnosci
::       _b - [obj_new] - parametry wewnetrzne czynnosci
::       _c - [obj_new] - parametry wyjsciowe czynnosci
::       _d - obiekt odpowiedzialny za obsluge procesu
::  OLD: \typobi/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
::# properties=GRP_FIRM
OBIEGI.TYP_ID:='K';
exec('rodzinf_add','!zws_par_kkka');
ZDARZT.win_fml('ZDARZT1',,'ICON',,'ICON_BEFORE',"ZDARZT.ICON");
ZDARZT.fld_fml('WYB_DAT','BEFORE_EDIT',"ZDARZT.SLIMVAT<>'T'");
ZDARZT.fld_fml('WYB_OSK','BEFORE_EDIT',"ZDARZT.SLIMVAT<>'T'");
ZDARZT.cntx_psh();
ZDARZT.index('ZDARZT'); ZDARZT.prefix('N');
_okn:=ZDARZT.win_sel('?');
ZDARZT.win_sel('GRP');
ZDARZT.win_patt('SZUK');
RODZINF.win_dict('SLO');
ZDARZT.select();
ZDARZT.cntx_pop();
ZDARZT.win_sel(_okn);
~~


\doltzdar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Typy dokumentów - dolacz
::  OLD: \doltzdar/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('zdarzt_60','!zws_par_kkka')
|| exec('tabkhini','kontrahent');
   RODZINF.cntx_psh();
   RODZINF.index('UNIK'); RODZINF.prefix();
   RODZINF.win_sel('WER');
   {? RODZINF.select()
   || exec('zdarzt_okn','!zws_par_kkka');
      ZDARZT.blank(1);
      ZDARZT.SYS:='N';
      ZDARZT.RODZINF:=RODZINF.ref();
      {? ZDARZT.edit("exec('spr_zdarzt','!zws_par_kkka')") & exec('zdarzt_60','!zws_par_kkka') || ZDARZT.add() ?}
   ?};
   RODZINF.cntx_pop()
?};
exec('tabkhdel','kontrahent')


\zdarzt_60
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Formula zwraca 0 jesli jest 60 lub wiecej typow
::  OLD: \zdarzt_60/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
ZDARZT.cntx_psh(); ZDARZT.index('ZDARZT'); ZDARZT.prefix('N');
{? ZDARZT.size()>=60
|| FUN.info('Zdefiniowano maksymalną liczbę 60 typów.'@); _zwrot:=0
?};
ZDARZT.cntx_pop();
_zwrot


\zdarzt_okn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Ustawia okienko redakcyjne tabeli ZDARZT
::  OLD: \zdarzt_okn/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
{? RODZINF.NAZ='Dokument definiowalny'
|| ZDARZT.win_edit('RED')
|? RODZINF.NAZ='Dokument prosty'
|| ZDARZT.win_edit('RED1')
?}


\spr_zdarzt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Tabela ZDARZT - rekord po
::  OLD: \spr_zdarzt/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
ZDARZT.cntx_psh();
_ile:=ZDARZT.count();
ZDARZT.cntx_pop();
{? ZDARZT.ZDARZ=''
|| FUN.info('Nie podano nazwy typu.'@); _zwrot:='ZDARZ'
?};
{? _zwrot='' & ZDARZT.SLIMVAT='T' & ZDARZT.WYB_DAT<2
|| FUN.info('Dla typu Umowa SLIM VAT wymagane jest wskazanie przynajmniej daty od.'@); _zwrot:='WYB_DAT'
?};
{? _zwrot='' &  ZDARZT.SLIMVAT='T' & ZDARZT.WYB_OSK<2
|| FUN.info('Dla typu Umowa SLIM VAT wymagane jest wskazanie osoby kontaktowej.'@); _zwrot:='WYB_OSK'
 ?};
{? _zwrot='' & -menu_txt='popraw' & ZDARZT.RODZINF().NAZ='Dokument definiowalny' & _ile & ZDARZT.SLIMVAT<>'T'
|| FUN.info('Znacznik "Umowa SLIMVAT" nie może być zmieniony,\n'
            'ponieważ istnieją dokumenty tego rodzaju.'@); _zwrot:='SLIMVAT'
?};
{? _zwrot=''
|| {? -menu_txt='popraw' || _ref:=ZDARZT.ref() ?};
   ZDARZT.cntx_psh();
   ZDARZT.index('ZDARZT'); ZDARZT.prefix('N',ZDARZT.ZDARZ,);
   {? ZDARZT.first() & {? -menu_txt='popraw' || ZDARZT.ref()<>_ref || 1 ?}
   || FUN.info('Istnieje już typ o podanej nazwie.'@); _zwrot:='ZDARZ'
   ?};
   ZDARZT.cntx_pop()
?};
{? _zwrot=''
|| {? -menu_txt='popraw' || _ref:=ZDARZT.ref() ?};
   ZDARZT.cntx_psh();
   ZDARZT.index('OBJAKO'); ZDARZT.prefix();
   {? ZDARZT.OBJAKO=1 & ZDARZT.find_key('N',1,ZDARZT.RODZINF) & {? -menu_txt='popraw' || ZDARZT.ref()<>_ref || 1 ?}
   || FUN.info('Istnieje już typ obieg jako faktura.'@); _zwrot:='OBJAKO'
   |? ZDARZT.OBJAKO=2 & ZDARZT.find_key('N',2,ZDARZT.RODZINF) & {? -menu_txt='popraw' || ZDARZT.ref()<>_ref || 1 ?}
   || FUN.info('Istnieje już typ obieg jako wniosek.'@); _zwrot:='OBJAKO'
   ?};
   ZDARZT.index('SL'); ZDARZT.prefix();
   {? ZDARZT.SLIMVAT='T' & ZDARZT.find_key('T') & {? -menu_txt='popraw' || ZDARZT.ref()<>_ref || 1 ?}
   || FUN.info('Istnieje już typ Umowa SLIM VAT.'@); _zwrot:='SLIMVAT'
   ?};
   ZDARZT.cntx_pop()
?};
_zwrot


\poptzdar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Typy dokumentów - popraw
::  OLD: \poptzdar/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
exec('tabkhini','kontrahent');
{? ZDARZT.edit("exec('spr_zdarzt','!zws_par_kkka')") || ZDARZT.put() ?};
exec('tabkhdel','kontrahent')


\usutzdar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Typy dokumentów - usun
::  OLD: \usutzdar/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZDARZT.count()
|| FUN.info('Typ wykorzystywany w utworzonych dokumentach'@)
|| {? FUN.ask('Usunąć wybrany typ?'@) || ZDARZT.del() ?}
?}


\rekprztzdar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Typy dokumentów - rekord przed
::  OLD: \rekprztzdar/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
ZDARZT.win_edit();
{? ZDARZT.RODZINF<>null
|| ZDARZT.RODZINF();
   exec('zdarzt_okn','!zws_par_kkka')
?};
0


\rodzinf_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dodawanie rekordów do RODZINF
::----------------------------------------------------------------------------------------------------------------------
RODZINF.cntx_psh();
RODZINF.index('UNIK'); RODZINF.prefix();
{? ~RODZINF.find_key('Dokument definiowalny',) || RODZINF.NAZ:='Dokument definiowalny'; RODZINF.add(1) ?};
{? ~RODZINF.find_key('Dokument prosty',) || RODZINF.NAZ:='Dokument prosty'; RODZINF.add(1) ?};
RODZINF.cntx_pop()


\aezdarz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Po redakcji pola ZDARZT.ZDARZ
::  OLD: \aezdarz/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZDARZT.SYS='T'
|| {? ~ZDARZT.ZDARZ || FUN.info('Nie wprowadzono zdarzenia.'@); 0 || 1 ?}
|| 1
?}


\aewybsym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Po redakcji pola ZDARZT.WYB_SYM
::  OLD: \aewybsym/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~ZDARZT.WYB_SYM || ZDARZT.AUT_NUM:=0 ?}; win_disp(); 1


\beautsymd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Przed redakcja i na wyswietl dla pola ZDARZT.AUT_NUM
::  OLD: \beautsymd/skid_obg.fml
::----------------------------------------------------------------------------------------------------------------------
ZDARZT.WYB_SYM


\ae_atr_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Po redakcji pola ZDARZT.ATR_ONE
::  OLD: \ae_atr_one/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab=ZDARZT
|| {? ZDARZT.ATR_ONE=0 || ZDARZT.ATR_G1R:=0 ?}
?};
~~


\be_atr_g1r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.30]
:: OPIS: Przed redakcja pola ETYPY.ATR_G1R
::  OLD: \be_atr_g1r/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab=ETYPY
|| ~ETYPY.IDINHEAD
|? cur_tab=ZDARZT
|| ZDARZT.ATR_ONE>0
?}


\aeslimvat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [21.14]
:: OPIS: Po redakcji pola ZDARZT.SLIMVAT
::----------------------------------------------------------------------------------------------------------------------
ZDARZT.cntx_psh();
_ile:=ZDARZT.count();
ZDARZT.cntx_pop();
{? ZDARZT.SLIMVAT='T'
|| ZDARZT.WYB_DAT:=ZDARZT.WYB_OSK:=2; win_disp(); 1
|| {? -menu_txt='popraw' & _ile
   || FUN.info('Znacznik "Umowa SLIMVAT" nie może być zmieniony,\n'
                'ponieważ istnieją dokumenty tego rodzaju.'@);
      ZDARZT.SLIMVAT:='T';
      0
   || 1
   ?}
?}


\dokumku_ustaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.14]
:: OPIS: edycja użytkowników powiadamianych mailem o kontakcie danej kategorii
::       edycja zespołów powiadamianych wiadomością o kontakcie danej kategorii
::       (czyli o dopisaniu rekordu do DOKUM) - obsługa tabeli DOKUMKU
::----------------------------------------------------------------------------------------------------------------------
{? _wyn:=FUN.choice('Wybierz zakres powiadomień'@,,'Email'@,'W aplikacji'@,'MS Teams'@)
|| {? _wyn=1
   || exec('dokumku_ustaw_u','!zws_par_kkka')
   |? _wyn=2
   || exec('dokumku_ustaw_u','!zws_par_kkka','N')
   || exec('dokumku_ustaw_t','webhook')
   ?}
?};
''


\dokumku_ustaw_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.37]
:: OPIS: okno edycji użytkowników powiadamianych mailem o kontakcie danej kategorii
::       (czyli o dopisaniu rekordu do DOKUM) - obsługa tabeli DOKUMKU
::   WE: [_a] - rodzaj U- mail , N - notyfikacje
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('') & _a<>''
|| _rodz:=_a
|| _rodz:='U'
?};

_dokumk_ref:=DOKUMK.ref();
{? _dokumk_ref=null()
|| return(~~)
?};

DOKUMKU.cntx_psh();
DOKUMKU.index('DOKUMK');
DOKUMKU.prefix(_dokumk_ref,_rodz,);

_tab:=tab_tmp(1,
              'USER','STRING[10]','Użytkownik'@,
              'USER_REF','STRING[16]','USER_ref',
              'DANE','STRING[50]','Dane użytkownika',
              'EMAIL','STRING[100]','E-mail',
              'ACCESS','STRING[1]','Powiadomienie'@);
USERS.cntx_psh();
USERS.index('USR_AKOD');
USERS.prefix('T');
{? USERS.first()
|| {!
   |? _usr_ref:=USERS.ref();
      _zazn:='N';
      {? DOKUMKU.find_key(_usr_ref)
      || _zazn:='T'
      ?};
      _tab.USER:=USERS.KOD;
      _tab.USER_REF:=$_usr_ref;
      _tab.DANE:=USERS.DANE;
      _tab.EMAIL:=USERS.EMAIL;
      _tab.ACCESS:=_zazn;
      _tab.add();
      USERS.next()
   !}
?};
USERS.cntx_pop();

_tyt:='Użytkownicy'@ + ' (' + DOKUMK.NAZ + ')';
_okn:=_tab.mk_sel(_tyt,'P',,'user',,,,,'U');
_tab.win_fld(_okn,,'USER',,,10,,1);
_tab.win_fld(_okn,,'DANE',,,24,,1);
{? _rodz='U' || _tab.win_fld(_okn,,'EMAIL',,,24,,1) ?};
_tab.win_fld(_okn,,'ACCESS',,,,,0,,,'Czy powiadamiać o kontaktach [T/N]?'@,2,,"'T'","'N'");
_fml:="_tab:=cur_tab(1);_tab.ACCESS:='T';_tab.put()";
_tab.win_act(_okn,,'Formuła','&Zaznacz'@@,,,_fml,,1,1,,,'Z');
task_attach('ZWS_PAR_KKKA');
_fml:="_tab:=cur_tab(1);_tab.ACCESS:='N';_tab.put()";
_tab.win_act(_okn,,'Formuła','&Odznacz'@@,,,_fml,,,1,,,'O');
task_attach('ZWS_PAR_KKKA');
_tab.win_act(_okn,,'Formuła','&Akceptuj'@@,,,"sel_exit()",,,,,,'A');
task_attach('ZWS_PAR_KKKA');
_fb:="
   _lastdraw:=1;
   {? var_pres('_a')=type_of(0)
   || _lastdraw:=_a
   ?};
   _grayed:='';
   _tab:=cur_tab();
   _sel:=cur_win();
   {? _lastdraw>0
   || {? _tab.sel_size()=0
::       Pojedyncze zaznaczenie
      || {? _tab.ACCESS='T'
         || _tab.actions(_sel,,'O',1);
            _grayed+='Z'
         |? _tab.ACCESS='N' | _tab.ACCESS=''
         || _tab.actions(_sel,,'Z',1);
            _grayed+='O'
         ?}
::       Zaznaczenie grupowe
      || _tab.actions(_sel,,'Z',1)
      ?};
      _tab.actions_grayed(_sel,_grayed)
   ?}
";
_tab.win_act(_okn,,'Rekord',,,,_fb);

_tab.win_sel(_okn);

{? _tab.select()
|| {? _tab.first()
   || {!
      |? _usr_ref:=null();
         USERS.cntx_psh();
         {? USERS.seek(_tab.USER_REF,,1)
         || _usr_ref:=USERS.ref()
         ?};
         USERS.cntx_pop();
         {? _usr_ref<>null()
         || {? _tab.ACCESS='T'
            || {? ~DOKUMKU.find_key(_usr_ref)
               || DOKUMKU.blank();
                  DOKUMKU.RODZ:=_rodz;
                  DOKUMKU.DOKUMK:=_dokumk_ref;
                  DOKUMKU.USER:=_usr_ref;
                  DOKUMKU.add(1)
               ?}
            || {? DOKUMKU.find_key(_usr_ref)
               || DOKUMKU.del(1)
               ?}
            ?}
         ?};
         _tab.next()
      !}
   ?}
?};

DOKUMKU.cntx_pop();

~~


:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:37 d2afb19ba0389947e71355eaf9f0d7afe03b0a1b19bd5970fd6aff1c6fbd1f02b67d32363c271f8b966fd7d9eb38232b63af35b070642dfcaac54261775a60121b0d4bc72b44c2fad79e1ff98c82d9c769b0731184085ca34b73315a9cfa122ba4a0957decfed265165d99058c137fa90b4c98c031eed15bcb613f03b46057ce
