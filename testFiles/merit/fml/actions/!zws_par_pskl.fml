:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_pskl.fml
:: Utworzony: 20.01.2015
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Formuły czynności ZWS_PAR_PSKL - Składniki płacowe (lokalne i globalne).
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Redagowanie składników płacowych - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('__RUB','object');
exec('fl_decl','dekret_aut');
exec('wer_mod','rubryki');

VAR.KLASA:='';

: Uchwyt do tablicy z tabelą i oknem do obsługi atrybutów bieżącej rubryki.
_atr4x:=exec('atr4x','rubatr');

: Uchwyt do tablicy z tabelą i oknem do obsługi położenia atrybutu (drzewko).
_def_tree:=exec('def_tree','rubatr');

: Uchwyt do tablicy z tabelą, oknem wertowania i oknem grupowym do obsługi atrybutów, które moga być dodane do bieżącej
: rubryki płacowej. W oknie grupowym prezentowane jest jeszcze położenie bieżącego atrybutu - stąd obowiązkowy parametr
: _def_tree.
_atrd:=exec('atrd','rubatr',_def_tree);

: Okienko do przeglądania atrybutów rubryki (atrybuty + daty + położenie).
_atr_wg:=exec('atr_wg','!zws_par_pskl',_atr4x,_def_tree);

:  Flagi (w tablicy).
_flagi:=obj_new('tryb','status');
_flagi.tryb:='ra';
_flagi.status:='';

params_set(
   'atr4x',_atr4x,
   'def_tree',_def_tree,
   'atrd',_atrd,
   'atr_wg',_atr_wg,
   'flagi',_flagi
);

RA_GRPP.cntx_psh();
RA_GRPP.index('PA');
R.cntx_psh();
R.index('RUBLP');
R.prefix();
R.win_sel('GWER');
R.select();
R.cntx_pop();
RA_GRPP.cntx_pop();

__RUB.fill();
exec('r_validate','rubryki');
~~


\edit_var_rk_opis_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Przed wyświetleniem pola EDIT_VAR.RK_OPIS. Nadanie wartości polu na podstawie wartości pola RK bieżąco
::       redagowanej tabeli R.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_rk:=R.RK;
{? _rk=''
|| EDIT_VAR.RK_OPIS:=''
|| exec('rk_opis','rubryki',exec('klasa','rubryki'),_rk)
?};
~~


\r_x_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.02]
:: OPIS: Przed redagowaniem pól tabeli R.
::   WE:
::   WY: 0/1 - pole niedostępne/dostępne do modyfikacji
::----------------------------------------------------------------------------------------------------------------------
:: jeśli to rubryka klienta, to wszystkie pola są dostępne
{? R.SYSTEM<>'T'
|| return(1)
?};

:: kolejne testy na dostępność pola dla rubryki systemowej
_acr:=cur_afld();

:: czy pole bezwarunkowo zablokowano do edycji?
{? (','+exec('_std_lck','rubryki')+',')*(','+_acr+',')<>0
|| return(0)
?};

:: czy pole może być warunkowo edytowane?
_cfg:=exec('_std_mod','rubryki');
{? _cfg[R.RN]=~~ | (','+_cfg[R.RN]+',')*(','+_acr+',')=0
|| return(0)
?};

:: czy wyłączono możliwość edycji pola?
_mod:=0;
RUB_MOD.cntx_psh();
RUB_MOD.index('RUB_MOD');
RUB_MOD.prefix(R.ref());
_mod:=~RUB_MOD.find_key(_acr,);
RUB_MOD.cntx_pop();
_mod


\r_x_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.10]
:: OPIS: Po redagowaniu pól tabeli R.
::   WE:
::   WY:
::  TAG: <AE>
::  OLD: \r_red_po/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
_fld:=cur_afld();

{? _fld='RK'
|| {? exec('rk_opis','rubryki',exec('klasa','rubryki'),R.RK,1)=0
   || return(0)
   ?}
?};

{? _fld='RN'
|| {? R.RN<=0 | R.RN>10000
   || __CHK.err_fld(R,'RN',1,'Dozwolone wartości z przedziału %1-%2.'@ ['1','10000']);
      return(0)
   ?}

|? _fld='LP'
|| {? R.LP<=0 | R.LP>10000
   || __CHK.err_fld(R,'LP',1,'Dozwolone wartości z przedziału %1-%2.'@ ['1','10000']);
      return(0)
   ?}
?};
1


\r_rk_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: pkoso [2010]
:: OPIS: Wartość początkowa pola R.RK wykorzystywana do prefiksowania słownika.
::   WE:
::   WY:
::  OLD: \KLASA/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.KLASA


\r_rk_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa wyboru klasy rubryki pola R.RK
::   WE:
::   WY:
::  OLD: \klasaf3/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_klasa:=exec('klasa','rubryki');
_klasa.TAB.index(_klasa.NDX.LP);
_klasa.TAB.first();

_fml:='popup(0,\'Klasa rubryki\'';
{!
|? _rk:=_klasa.TAB.RK;
   _fml+=','+
      {? _rk='-'
      || '\'--\',,""'
      || '\''+_rk+' - '+_klasa.TAB.O+'\',,"fld(\''+_rk+'\')"'
      ?};
   _klasa.TAB.next()
!};
_fml+=')';

($_fml)();
fld()


\r_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS
:: OPIS: Sprawdzenie poprawności edytowanego zapisu w tabeli rubryk (lokalnych i globalnych). Sprawdzane jest
::       wypełnienie wymaganych pól: kod, nazwa, klasa, weryfikowana wartość pól określających położenie składnika
::       w karcie zarobkowej, podatkowej i ubezpieczeniowej.
::   WE:
::   WY:
::  OLD: \spr_rub/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_TAB:=cur_tab(1,1);
_popraw:=-menu_txt='popraw';

_chk:=__CHK.table(_TAB,_popraw,,'LP','RN','RT','RK');
{? type_of(_chk)=type_of(0) & _chk
|| _fmax:="{! _lp:=_a.fld_num() //-1 .. 1 |? var_pres('S'+$_lp,_a)<=0 !}; _lp";
   _kz:=_fmax(KZ);
   _kp:=_fmax(KP);
   _ku:=_fmax(KU);
   {? _TAB.RSKZ<0 | _TAB.RSKZ>_kz
   || __CHK.err_fld(_TAB,'RSKZ',1,'Dozwolone wartości z przedziału %1-%2.'@ ['0',$_kz])
   |? _TAB.RSKP<0 | _TAB.RSKP>_kp
   || __CHK.err_fld(_TAB,'RSKP',1,'Dozwolone wartości z przedziału %1-%2.'@ ['0',$_kp])
   |? _TAB.RSKU<0 | _TAB.RSKU>_ku
   || __CHK.err_fld(_TAB,'RSKU',1,'Dozwolone wartości z przedziału %1-%2.'@ ['0',$_ku])
   |? _TAB=R & R.RN>=7000 & ~_popraw
::    Dla "Popraw" newralgiczne pola zostały wyłączne z edycji (w szczególności R.RN). Dostępne są tylko te pola, które
::    faktycznie użytkownik może sparametryzować bez wpływu na "systemowość" rubryki. Komunikat zatem nie ma sensu.
   || FUN.emsg(
         'Wprowadzono kod rubryki z zakresu zarezerwowanego dla wersji standardowej programu.\n'
         'Ze względu na potencjalne ryzyko wystąpienia konfliktów w przyszłych wersjach zaleca\n'
         'się aby kod opisu składnika mieścił się w zakresie od 1 do 6999.'@
      );
      'RN'
   |? _TAB=R & _popraw & R.SYSTEM<>'T' & R.RN>=7000
::    Dla "Popraw" dla rubryk, które nie są systemowe nie można zmienić numeru rubryki >=7000
   || FUN.emsg(
         'Wprowadzono kod rubryki z zakresu zarezerwowanego dla wersji standardowej programu.\n'
         'Ze względu na potencjalne ryzyko wystąpienia konfliktów w przyszłych wersjach zaleca\n'
         'się aby kod opisu składnika mieścił się w zakresie od 1 do 6999.'@
      );
      'RN'
   |? _TAB=R & _popraw & __RUB.sys_attr(R.RN,46) & R.CHO<>'T'
   || FUN.emsg(
         'Rubryka %1 ma przypisany atrybut 46 - %2\n'
         'co oznacza, że w zasiłkach chorobowych jest uwzględniana w kwocie wypłaconej,\n'
         'zgodnie z datą wystąpienia nadgodzin.'@ [$R.RN,__RUB.get_name('S',46)]
      );
      R.CHO:='T';
      'CHO'
   || 1
   ?}
|| _chk
?}


\atr48
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Funkcja dla bieżącej rubryki sprawdza i ewentualnie wyświetla komunikat przypominający o zasadach dotyczących
::       składników wliczanych do brutto o kodach większych niz 500.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_continue:=1;
_rb_test:=
   "  R.cntx_psh();
      R.index('RUBKOD');
      R.prefix();
      _down:={? R.find_ge(_a) || R.LP ?};
      _up:={? R.find_le(_b) || R.LP ?};
      _rt:={? R.find_key(_c) || R.RT ?};
      R.cntx_pop();
      {? _down<R.LP & R.LP<_up
      || FUN.info('%1\n%2\n%3'
            ['Kod dodanego składnika płacowego nie znajduje się w przedziale od %1 do %2.'@[$_a,$_b],
             'Jeżeli składnik ma być ujmowany w wartości \"%1 - %2\", to powinien zostać dodany do atrybutu'@[$_c,_rt],
             '\"%1 - %2\".'@[$_d,__RUB.get_name('S',_d)]
             ]
         );
         0
      || 1
      ?}
   ";

{? R.RN>500 & ~__RUB.sys_attr(R.RN,48)
|| _continue:=_rb_test(100,500,500,48)
?};
{? _continue & R.RN>650 & ~__RUB.sys_attr(R.RN,331)
|| _continue:=_rb_test(510,650,650,331)
?};
{? _continue & R.RN>740 & ~__RUB.sys_attr(R.RN,332)
|| _continue:=_rb_test(650,740,740,332)
?};
{? _continue & R.RN>950 & ~__RUB.sys_attr(R.RN,333)
|| _rb_test(801,950,950,333)
?};
~~


\r_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.41]
:: OPIS: Dołączanie składnika listy płac.
::   WE:
::   WY:
::  TAG: <ADD>
::  OLD: \r_dod/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
POLA_GRP.TXT_1:='';

R.blank();
R.win_edit('RED');
R.memo_set('','NOTA');
{!
|? {? R.edit("exec('r_ae','!zws_par_pskl')")
   || {? R.lock(1,1,1)
      || {? exec('add','#table') & R.memo_put(,'NOTA')
         || exec('lp_add_a','rubryki');
            __RUB.fill()
         ?};
         R.unlock();
         exec('atr48','!zws_par_pskl');
         0
      || {? FUN.ask(
               'Zapis danych słownika rubryk został zablokowany.\n'
               'Powtórzyć próbę dołączenia nowego zapisu?'@
            )
         || 1
         || FUN.info(
               'Podane informacje nie zostały zapisane.'@
            );
            0
         ?}
      ?}
   ?}
!}


\lp_put_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła porządkująca kolejność obliczeń (LP) składników płacowych, wywoływana po poprawieniu rekordu.
::   WE:
::   WY:
::  OLD: \r_pop_po/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=R.ref();
_new:=R.LP;

R.cntx_psh();
R.clear();
R.index('RUBLP');

{? R.LP>R.size()
|| R.LP:=R.size();
   R.put()
?};

_loop:=(R.first() & R.LP<=_new);
_lp:=1;
{!
|? _loop
|! {? R.LP<>_lp & R.ref()<>_ref
   || R.LP:=_lp;
      R.put()
   ?};
   _lp+=(R.ref()<>_ref);
   _loop:=(R.next() & R.LP<=_new)
!};

_loop:=(R.last() & _new<=R.LP);
_lp:=R.size();
{!
|? _loop
|! {? R.LP<>_lp & R.ref()<>_ref
   || R.LP:=_lp;
      R.put()
   ?};
   _lp-=(R.ref()<>_ref);
   _loop:=(R.prev() & _new<=R.LP)
!};

R.cntx_pop()


\r_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.41]
:: OPIS: Poprawienie składnika listy płac.
::   WE:
::   WY:
::  OLD: \r_pop/formuly.fml
::  OLD: \r_pop_pr/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_wnd:='RED';

{? R.SYSTEM='T'
:: Zablokuj pola do edycji
|| _std:=exec('_std_mod','rubryki');
   _mod:=_std[R.RN];
   {? _mod=~~
   || _mod:=''
   ?};
   _mod:=','+_mod+',';
   _lck:=','+exec('_std_lck','rubryki');
   RUB_MOD.cntx_psh();
   RUB_MOD.index('RUB_MOD');
   RUB_MOD.prefix(R.ref());
   _loop:=RUB_MOD.first();
   {!
   |? _loop
   |! _lck+=','+RUB_MOD.POLE;
      _loop:=RUB_MOD.next()
   !};
   RUB_MOD.cntx_pop();
   _lck+=',';

   _len:=R.fld_num();
   {! _ii:=1.._len
   |! _acr:=R.fld_acr(_ii);
      {? _lck*(','+_acr+',')<>0 | _mod*(','+_acr+',')=0
      || R.efld_opt(_wnd,'editable=grayed',,_acr);
         {? _acr='RK'
         || R.efld_opt(_wnd,'editable=grayed',EDIT_VAR,'RK_OPIS')
         ?}
      ?}
   !}
?};

R.win_edit(_wnd);
_get:=(R.get() & R.memo_get(,'NOTA'));
{!
|? {? _get & R.edit("exec('r_ae','!zws_par_pskl')")
   || {? R.lock(1,1,1)
      || {? exec('put','#table') & R.memo_put(,'NOTA')
         || exec('lp_put_a','!zws_par_pskl');
            __RUB.fill()
         ?};
         R.unlock();
         exec('atr48','!zws_par_pskl');
         0
      || {? FUN.ask(
               'Zapis danych słownika rubryk został zablokowany.\n'
               'Powtórzyć próbę aktualizacji wybranego zapisu?'@
            )
         || 1
         || FUN.info('Wprowadznone zmiany nie zostały zapisane.'@);
            0
         ?}
      ?}
   ?}
!};

:: Przywróć dostępność pól
_len:=R.fld_num();
{! _ii:=1.._len
|! R.efld_opt(_wnd,'editable=1',,R.fld_acr(_ii))
!};
R.efld_opt(_wnd,'editable=1',EDIT_VAR,'RK_OPIS');
~~


\lp_del_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.41]
:: OPIS: Formuła porządkująca kolejność obliczeń (LP) składników płacowych, wywoływana po usunięciu rekordu.
::   WE:
::   WY:
::  OLD: \r_usu_po/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
R.cntx_psh();
R.clear();
R.index('RUBLP');
_loop:=R.first();
_lp:=1;
{!
|? _loop
|! {? R.LP<>_lp
   || R.LP:=_lp;
      R.put()
   ?};
   _lp+=1;
   _loop:=R.next()
!};
R.cntx_pop()


\r_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.41]
:: OPIS: Usunięcie składnika listy płac.
::   WE:
::   WY:
::  OLD: \r_usu/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
:: "Zabezpieczenie" przed wywołaniem poza oknem grupowym lub w oknie bez obsługi wygaszania akcji
{? ~R.get()
|| return()
?};
{? ~(R.SYSTEM='N')
|| FUN.info('Rubryka nie może być usunięta.'@);
   return()
?};

{? R.lock(1,,1)
|| {? exec('del_ask','#table') & R.del()
   || exec('lp_del_a','!zws_par_pskl');
      __RUB.fill()
   ?}
?};
R.unlock()


\r_cechy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa cech związanych z bieżącą rubryką.
::   WE:
::   WY:
::  OLD: \R_CECHY/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
_maska:=ref_name(R.ref());
_ref:=#R.ref();
_tab:='R';
BPMN.cntx_psh();
BPMN.SYM_DOM:='PPL';
exec('dWdCech','cechy_dodatkowe',_maska,_ref,_tab);
BPMN.cntx_pop();
1


\r_atrybuty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa atrybutów związanych z bieżącą rubryką.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
params_set(_par);
_par.flagi.tryb:='';
_par.atr4x.TAB.select();
_par.flagi.tryb:='';
~~


\imex_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła obsługuje parametry importu/eksportu.
::   WE: _a - Tryb pracy:
::          'I' - Import
::          'E' - Eksport [DOMYŚLNIE]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & _a='I' || _a || 'E' ?};

_sl:=obj_new(2);
{? _tryb='I'
|| _sl[1]:='odczytu';
   _sl[2]:='Odczytywane'

|? _tryb='E'
|| _sl[1]:='zapisu';
   _sl[2]:='Zapisywane'
?};

_tab:=tab_tmp(1,
   'M','STRING[1]','Miejsce położenia plików',
   'U','INTEGER','Aktualizacja'
);
_tab.blank();
_tab.M:='L';
_tab.U:=0;

_we:=_tab.mk_edit('Parametry '+_sl[1]+' rubryk',,'#rimex');
_tab.win_efld(_we,,'M',,,,,,'Położenie plików',,,'radio-buttons',,
   _sl[2]+' pliki są lokalne',"'l'",
   _sl[2]+' pliki są globalne',"'g'");
{? _tryb='I'
|| _tab.win_efld(_we,,'U',,,,,,'Tryb aktualizacji',,,'radio-buttons',,
      'Rubryki nie będą zastępowane',"0",
      'Rubryki będą zastępowane po potwierdzeniu',"1",
      'Rubryki będą zastępowane automatycznie',"2"
      )
?};
exec('ok_esc','#window',_tab,_we);
_tab.win_edit(_we);
_tab


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji aRchiwum -> Czytaj.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('imex_par','!zws_par_pskl','I');
{? _tab.edit()
|| exec('import','rubryki',_tab.M,'*',_tab.U,2)
?}


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji aRchiwum -> Zapisz.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('imex_par','!zws_par_pskl','E');
{? _tab.edit()
|| exec('export','rubryki',_tab.M,1)
?}


\r_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Okienko grupowe GWER tabeli R - przed obsługą okienka (WER) tabeli R.
::   WE: _a - Moment wywołania:
::             0 - odświeżanie okna
::             1 - aktywowanie okna
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\r_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Okienko grupowe GWER tabeli R - po odświeżeniu okienka (WER) tabeli R.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
grp_disp(RA_GRPP,'WER');
~~


\rolap_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.10]
:: OPIS: "Rekord - po" okienek tabeli ROLAP.
::   WE:
::   WY:
::  OLD: \ro_rek_po/formuly.fml
::----------------------------------------------------------------------------------------------------------------------
__CHK.table(ROLAP,-menu_txt='popraw')


\atr_wg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła buduje okienko grupowe do obsługi atrybutów bieżącej rubryki.
::   WE: _a - Uchwyt do tablicy z tabelą i oknem do obsługi atrybutów bieżącej rubryki - patrz formuła
::            \atr4x/rubatr.fml.
::       _b - Uchwyt do tablicy z tabelą i oknem do obsługi położenia atrybutu (drzewko) - patrz formuła
::            \def_tree/rubatr.fml.
::            Poprawność argumentów nie jest weryfikowana.
::   WY:
::  OLD: \menu/rubobj.fml
::----------------------------------------------------------------------------------------------------------------------
_atr4x:=_a;
_def_tree:=_b;

: Formuły obsługująca akcje, domyślnie wywoływane z bieżącego pliku.
_fml0:='"params_set(params_get()); '+
       'exec(\'"+_a+"\',\'"+{? var_pres(\'_b\')=type_of(\'\') || _b || \'!zws_par_pskl\' ?}+"\')"';
_fml1:='"params_set(params_get()); '+
       'exec(\'"+_a+"\',\'"+{? var_pres(\'_b\')=type_of(\'\') || _b || \'!zws_par_pskl\' ?}+"\',_a"+'+
       '{? var_pres(\'_c\')=type_of(\'\') || ",\'"+_c+"\'" || "" ?}+")"';

: Budowa panelu
_mode:='maximized_with_title';

_atr_wg:=_atr4x.TAB.grp_make('Atrybuty rubryki',,'attr4r1grp',,,,"");
_atr4x.TAB.grp_sel(_atr_wg,_atr4x.TAB,_atr4x.WS,,$($_fml0)('atr4x_ar','rubatr'),,,22,
   $($_fml1)('atr4x_bs','rubatr','ra'),"",,,_mode);
_atr4x.TAB.grp_splt(_atr_wg,,'vertical','daty');
_atr4x.TAB.grp_sel(_atr_wg,RA_USE,'WER',,"",,,30,$($_fml1)('ra_use_bs','rubatr'),"",,,_mode);
_atr4x.TAB.grp_splt(_atr_wg,'panel0','horizontal','położenie');
_atr4x.TAB.grp_sel(_atr_wg,_def_tree.TAB,_def_tree.WS,,"",,,6,$($_fml1)('def_tree_bs','rubatr'),"",,,_mode);
_atr4x.TAB.win_sel(_atr_wg);

_atr_wg


\r_zmiany_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.02]
:: OPIS: Obsługa akcji "Zmiany" okienek tabeli R.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_type:='BEFORE_DISPLAY';
_fml:=exec('save_fml_type','#field',POLA_GRP,_type);
POLA_GRP.fld_fml('TXT_1',_type,"fld(exec('fldLabel','#field',R,cur_tab(1,1).POLE))");

RUB_LOG.cntx_psh();
RUB_LOG.index('CZAS');
RUB_LOG.prefix(R.ref());
RUB_LOG.win_edit('RED');
RUB_LOG.win_sel('WER');
RUB_LOG.select();
RUB_LOG.cntx_pop();

exec('restore_fml_type','#field',POLA_GRP,_type,_fml);
~~


\r_ustawienia_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.02]
:: OPIS: Obsługa akcji "Ustawienia" okienek tabeli R.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: Lista pól jako tablica zawierająca akronimy - przeglądanie struktury daje układ pól niezgodny z okienkiem redakcji
_fld:=spli_str(exec('_all_mod','rubryki'),',');
_lck:=','+exec('_std_lck','rubryki')+',';
_cfg:=exec('_std_mod','rubryki');
_mod:=
   {? _cfg[R.RN]<>~~
   || ','+_cfg[R.RN]+','
   || ''
   ?};
_buf:='tab_tmp(1';
_wnd:=
   '_wnd:=_a.mk_edit(\'Ustawienia edycji\',0,\'#rub_mod_wer\',,,\'html_maximized\');'
   '_a.win_esep(_wnd,\'%1 %2\');'[$R.RN,R.RT];

_len:=obj_len(_fld);
{! _ii:=1.._len
|! _acr:=_fld[_ii];
   _buf+=',\'%1\',\'STRING[1]\',\'%2\''[_acr,exec('fldLabel','#field',R,_acr)];
   _wnd+='_a.win_efld(_wnd,,\'%1\',,,,,,,,,\'check-box\',,"\'T\'","\'N\'");'[_acr];
   {? R.SYSTEM='T' & (_lck*(','+_acr+',')<>0 | _mod*(','+_acr+',')=0)
   || _wnd+='_a.efld_opt(_wnd,\'editable=grayed\',,\'%1\');'[_acr]
   ?}
!};
_buf+=')';
_wnd+='_a.win_edit(_wnd);';
_wnd+='exec(\'ok_esc\',\'#window\',_a,_wnd,,,,%1,,,exec(\'text_red_ok\',\'#window\'))'[$(R.SYSTEM='T')];
_BUF:=($_buf)();
($_wnd)(_BUF);

: Ustal wartości pól
{? R.SYSTEM='T'
||
:  Ustal dostępność dla rubryki systemowej
:  Najpierw włącz wszystkie dozwolone pola
   {? _cfg[R.RN]<>~~
   || _acc:=spli_str(_cfg[R.RN],',');
      _len:=obj_len(_acc);
      {! _ii:=1.._len
      |! ($'_a.%1:=\'T\''[_acc[_ii]])(_BUF)
      !}
   ?};
:  Wyłącz pola
   RUB_MOD.cntx_psh();
   RUB_MOD.index('RUB_MOD');
   RUB_MOD.prefix(R.ref());
   _loop:=RUB_MOD.first();
   {!
   |? _loop
   |! {? var_pres(RUB_MOD.POLE,_BUF)>0
      || ($'_a.%1:=\'N\''[RUB_MOD.POLE])(_BUF)
      ?};
      _loop:=RUB_MOD.next()
   !};
   RUB_MOD.cntx_pop()
||
:  Dla rubryki klienta wszystko jest dozwolone
   _len:=_BUF.fld_num();
   {! _ii:=1.._len
   |! _BUF[_ii]:='T'
   !}
?};

: Wyświetl okienko
{? R.SYSTEM='T'
|| {? _BUF.edit()
   || RUB_MOD.cntx_psh();
      RUB_MOD.index('RUB_MOD');
      RUB_MOD.prefix(R.ref());
      _len:=_BUF.fld_num();
      {! _ii:=1.._len
      |! _acr:=_BUF.fld_acr(_ii);
         {? RUB_MOD.find_key(_acr,)
:           Znaleziono wyłączenie
         || {? _BUF[_ii]='T'
:              Udostępnij pole
            || RUB_MOD.del()
            ?}
         |? _BUF[_ii]='N' & (_lck*(','+_acr+','))=0 & _mod*(','+_acr+',')<>0
:           Dla pola dostępnego do edycji wyłączono możliwość modyfikacji
         || RUB_MOD.blank();
            RUB_MOD.R:=R.ref();
            RUB_MOD.POLE:=_acr;
            RUB_MOD.add()
         ?}
      !};
      RUB_MOD.cntx_pop()
   ?}
|| _BUF.display()
?};

: Porządki
obj_del(_BUF);
~~


\r_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.02]
:: OPIS: Obsługa akcji "Rekord przed" okienka tabeli R
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: w trakcie odrysowywania
{? _a=0 || return() ?};

:: Ustal dostępność akcji menu:
:: - dla rubryk klienta modyfikacja jest nieograniczona
:: - rubryki standardowe:
::   - nie mogą być usunięte
::   - nie mogą być poprawione, jeśli choć jedno pole nie jest dostępne do edycji
_aid:='';
{? R.SYSTEM='T'
|| _aid+='u';
   RUB_MOD.prefix();
:: czy istnieje chociaż jedno pole dostępne do edycji?
   _std:=exec('_std_mod','rubryki');
   _mod:=_std[R.RN];
   {? _mod<>~~
   || _fld:=spli_str(_mod,',');
      _len:=obj_len(_fld);
      _acc:=_len;
      {! _ii:=1.._len
      |! _acc-=RUB_MOD.find_tab(,'R',,'=',R.ref(),'POLE',,'=',_fld[_ii])
      !};
      {? _acc<=0
      || _aid+='p'
      ?}
   || _aid+='p'
   ?}
?};

:: Zablokuj/odblokuj akcje
R.actions_grayed(cur_win(1,1),_aid);
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:39 682b47d38b6e620f98c8d7bd9afffb3d9cb4ca2472f745dce924c0bc3e1902dcecc53a304481aa1f2755cbabea04f1c91f31d231ab859006f6ba65cfba159e70e8fc150b6193f29470f518cbe23abc3f76f58b0329b5144b7097a4f169e8282ff63eb6702bb2c38dc275936fd70ff916240e0b4d1f6cedf38ca229c49f691a25
