:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ppl_grp_pmbd.fml
:: Utworzony: 26.08.2020
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Formuły czynności PPL_PPM_RPMU - Budżety premii uznaniowych.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Budżety premii uznaniowych - główna formuła czynności.
::----------------------------------------------------------------------------------------------------------------------
_PUPR:=exec('dostepne_p','schemat','PPL','*T',,);
_cfg:=obj_new('pm_rodz_last_mod','budz_idx','SEL2');
_cfg.pm_rodz_last_mod:=0;
params_set('PUPR',_PUPR,'cfg',_cfg);

CP.cntx_psh();
F_ZATR.cntx_psh();
KK.cntx_psh();
OSOBA.cntx_psh();
P.cntx_psh();
STN.cntx_psh();
UD_SKL.cntx_psh();
R.cntx_psh();
R.prefix();

PM_RODZ.cntx_psh();
PM_RODZ.prefix();
PM_RODZ.f_set(
   'OSOBA(NAZWISKO),OSOBA(PIERWSZE),OSOBA(PESEL),R(RN)',,
   '"PM_RODZ"."P" in (select REF from :_a)',
   _PUPR
);
PM_BUDZ.cntx_psh();
PM_BUDZ.f_clear();
_cfg.budz_idx:='OKRES';
PM_BUDZ.index(_cfg.budz_idx);
PM_BUDZ.prefix();
PM_BUDZ.win_sel(exec('wnd','!ppl_grp_pmbd'));
PM_BUDZ.win_edit('RED');
PM_BUDZ.win_patt('WZO');
PM_BUDZ.select();
PM_BUDZ.cntx_pop();
PM_RODZ.f_clear();
PM_RODZ.cntx_pop();

R.cntx_pop();
UD_SKL.cntx_pop();
STN.cntx_pop();
P.cntx_pop();
OSOBA.cntx_pop();
KK.cntx_pop();
F_ZATR.cntx_pop();
CP.cntx_pop();

~~


\wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła buduje okno grupowe do rejestrowania budżetów premii uznaniowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Najpierw przygotujmy okno na zakładkę 'Razem'.
_ws:=PM_BUDZ.mk_sel('Budżety premii uznaniowych'@,,,'#pm_budz_razem',,,,,'U',,,,,,,'on');
PM_BUDZ.win_fld(_ws,,'P','T',,-9,,,,,MS.comment(P,'T'));
PM_BUDZ.win_fld(_ws,,'OSOBA','NAZWISKO',,15,,,,,MS.comment(OSOBA,'NAZWISKO'));
PM_BUDZ.win_fld(_ws,,'OSOBA','PIERWSZE',,7,,,,,MS.comment(OSOBA,'PIERWSZE'));
PM_BUDZ.win_fld(_ws,,'OSOBA','PESEL',,,,,,,MS.comment(OSOBA,'PESEL'));
PM_BUDZ.win_fld(_ws,,'WYDZIAL','SYMBOL',,-16,,,MS.name(P,'WYDZIAL'),,MS.comment(P,'WYDZIAL'));
PM_BUDZ.win_fld(_ws,,'R','RN',,,,,,,MS.comment(R,'RN'));
PM_BUDZ.win_fld(_ws,,'R','RT',,,,,,,MS.comment(R,'RT'));
PM_BUDZ.win_fld(_ws,,'SYMBOL',,,15,,,,,MS.comment(PM_BUDZ,'SYMBOL'));
PM_BUDZ.win_fld(_ws,,'OPIS',,,15,,,,,MS.comment(PM_BUDZ,'OPIS'));
PM_BUDZ.win_fld(_ws,,'OD',,,,,,,,MS.comment(PM_BUDZ,'OD'));
PM_BUDZ.win_fld(_ws,,'DO',,,,,,,,MS.comment(PM_BUDZ,'DO'));
PM_BUDZ.win_fld(_ws,,'LIMIT',,,-3,,,,,MS.comment(PM_BUDZ,'LIMIT'),2,,"'T'","'N'");
PM_BUDZ.win_fld(_ws,,'PLAN',,,-13,2,,,,MS.comment(PM_BUDZ,'PLAN'));
PM_BUDZ.win_fld(_ws,,'WYKON',,,-13,2,,,,MS.comment(PM_BUDZ,'WYKON'));
PM_BUDZ.win_fld(_ws,,'POZOST',,,-13,2,,,,MS.comment(PM_BUDZ,'POZOST'));
PM_BUDZ.win_act(_ws,,'Formuła','Miesiące'@@,,'Miesiące wypłaty premii uznaniowych'@,
   "exec('pm_budz_miesiace_b','!ppl_grp_pmbd')",,1,,,,'M'
);
PM_BUDZ.win_btn(_ws,'text=%1' ['Miesiące'@],'menu:M');
PM_BUDZ.win_act(_ws,,'Kolejność');

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_mode:='maximized_with_title';
_grp:=PM_BUDZ.grp_make('Budżetowanie premii uznaniowych'@,,'pm_budz_grp');
PM_BUDZ.grp_sel(_grp,PM_RODZ,'W','Wg dysponentów'@,
   "  params_set(_par:=params_get());
      {? ~PM_RODZ.sel_size()
      || _cfg:=_par.cfg;
         _lm:=exec('last_mod_get','#table',PM_RODZ);
         {? _cfg.pm_rodz_last_mod<>_lm
         || {? _cfg.pm_rodz_last_mod
            || PM_RODZ.f_rfresh();
               win_disp()
            ?};
            _cfg.pm_rodz_last_mod:=_lm
         ?}
      ?};
      grp_disp(PM_BUDZ,'WER')
   ");
PM_BUDZ.tab_splt(_grp,,'horizontal','budz',15);
PM_BUDZ.grp_sel(_grp,PM_BUDZ,'WER',,,,,,
   "  {? grp_empty(PM_RODZ,'W')
      || return('#disable')
      ?};
      PM_BUDZ.f_clear();
      PM_BUDZ.index(params_get().cfg.budz_idx);
      PM_BUDZ.prefix(PM_RODZ.PM_DYSP,PM_RODZ.R);
      PM_BUDZ.actions_grayed('WER',{? PM_RODZ.AKT<>'T' || 'dpu:d' || ':' ?})
   ",
   "params_get().cfg.budz_idx:=PM_BUDZ.index('?')"
);

PM_BUDZ.grp_sel(_grp,,_ws,'Razem'@,,,,,
   "  params_set(_par:=params_get());
      PM_BUDZ.prefix();
      PM_BUDZ.sel_adel();
      PM_BUDZ.f_set(
         'OSOBA(NAZWISKO),OSOBA(PIERWSZE),OSOBA(PESEL),R(RN)',,
         '""PM_BUDZ"".""P"" in (select REF from :_a)',
         _par.PUPR
      );
      {? var_pres('SEL2',_par.cfg)>100
      || {? _par.cfg.SEL2.first()
         || PM_BUDZ.cntx_psh();
            {!
            |? {? PM_BUDZ.seek(_par.cfg.SEL2.REF)
               || sel_add()
               ?};
               _par.cfg.SEL2.next()
            !};
            PM_BUDZ.cntx_pop()
         ?}
      ?}
   ",
   "  params_set(_par:=params_get());
      {? var_pres('SEL2',_par.cfg)>100
      || obj_del(_par.cfg.SEL2)
      ?};
      _par.cfg.SEL2:={? PM_BUDZ.sel_size() || PM_BUDZ.sel_aget() || ~~ ?}
   ",,,
   _mode
);

_grp


\pm_budz_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła odpowiedzialna za dynamiczne ustawianie właściwości pól tabeli PM_BUDZ.
::       Formuła wywoływana jest w dwóch kontekstach pracy:
::          - Po redagowaniu konkretnego pola, które determinuje właściwości wyświetlania innych pól.
::          - Przed wyświetleniem okna redagowania (przed właściwymi akcjami Dołącz, Popraw, Wyświetl), ustawia
::            właściwości wszystkich pól (wymagających tego).
::       Kontekst pracy jest określany na podstawie argumentu wywołania.
::   WE: [_a] [STRING] - Kontekst pracy:
::             '1' - Obsługa jednego pola [domyślnie].
::             '*' - Obsługa wszystkich pól.
::       [_b] [TABLE]  - Uchwyt tabeli, w oknie redagowania której znajdują sie pola. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęta bieżąca tabela.
::       [_c] [STRING] - Akronim okna, w którym mają być ustawione właściwości pól. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęte bieżące okno.
::       [_d] [STRING] - Akronim pola, którego wartość determinuje właściwości wyświetlania innych pól. Parametr ma
::             znaczenie wyłącznie dla _a='1'. [Domyślnie: bieżące pole].
::   WY: 0 - Błąd argumentów wywołania.
::       1 - Argumenty poprawne (właściwości ustawione).
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (_a='1' | _a='*') || _a || '1' ?};
{? var_pres('_b')=type_of(PM_BUDZ)
|| _TAB:=_b
|? _tryb='1'
|| _TAB:=cur_tab(1,1)
|| return(0)
?};
{? var_pres('_c')=type_of('')
|| _we:=_c
|? _tryb='1'
|| _we:=cur_win(1,1)
|| return(0)
?};
{? var_pres('_d')=type_of('')
|| _fld:=_d
|? _tryb='1'
|| _fld:=cur_afld()
|| _fld:=''
?};

{? _fld='' | _fld='LIMIT'
|| _TAB.efld_opt(_we,'enable=%1,mark=%1' [$(PM_BUDZ.LIMIT='T')],,'PLAN')
?};

1


\pm_budz_limit_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Po redagowaniu pola PM_BUDZ.LIMIT.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pm_budz_efld_opt','!ppl_grp_pmbd')


\pm_budz_kw_df
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Format wyświetlania pól związanych z budżetowaniem premii uznaniowych (PM_BUDZ.PLAN, PM_BUDZ.WYKON).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'empty='+$(PM_BUDZ.LIMIT='N')


\pm_budz_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Obsługa akcji "Dołącz - przed" w oknie WER tabeli PM_BUDZ.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PM_BUDZ.blank();
PM_BUDZ.PM_DYSP:=PM_RODZ.PM_DYSP;
PM_BUDZ.R:=PM_RODZ.R;
exec('pm_budz_efld_opt','!ppl_grp_pmbd','*',PM_BUDZ,'RED');
{? PM_BUDZ.edit("exec('pm_budz_modb','pm_wspolne'); exec('pm_budz_chk','pm_wspolne',0)")
|| PM_BUDZ.add()
?}


\pm_budz_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Obsługa akcji "Popraw - przed" w oknie WER tabeli PM_BUDZ.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pm_budz_efld_opt','!ppl_grp_pmbd','*',PM_BUDZ,'RED');
{? PM_BUDZ.edit("exec('pm_budz_modb','pm_wspolne'); exec('pm_budz_chk','pm_wspolne',1)")
|| PM_BUDZ.put()
?}


\pm_budz_miesiace_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Obsługa akcji "Miesiące - przed" w oknie WER tabeli PM_BUDZ.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_sql:=
   'select PM_NAG.ROK, PM_NAG.MSC, sum(PM_PREM.KW) KW, count(PM_PREM.KW) ILE '
   'from PM_PREM right join PM_NAG using(PM_PREM.PM_NAG,PM_NAG.REFERENCE) '
   'where PM_NAG.PM_BUDZ=:_a '
   'group by PM_NAG.ROK, PM_NAG.MSC '
   'order by 1, 2 ';

_TAB:=sql(_sql,PM_BUDZ.ref());
_TAB.fld_attr('ROK',,2);
_TAB.fld_attr('MSC',,2);
_TAB.fld_attr('KW',,3);
_TAB.fld_attr('ILE',,3);

_ha:=_TAB.size()+2;
{? _ha<7
|| _ha:=7
|? _ha>30
|| _ha:=30
?};
_ws:=_TAB.mk_sel('Realizacja budżetu w podziale na miesiące'@,,,'#pm_budz_sum',,,_ha,,'U',,,,,,,'on');
_TAB.win_fld(_ws,,'ROK',,,5,0,,'Rok'@,,'Rok kosztowy wypłaty premii'@);
_TAB.win_fld(_ws,,'MSC',,,3,0,,'Miesiąc'@,,'Miesiąc kosztowy wypłaty premii'@);
_TAB.win_fld(_ws,,'KW',,,13,2,,'Przyznano'@,,MS.comment(PM_BUDZ,'WYKON'));
_TAB.win_fld(_ws,,'ILE',,,13,0,,'Współpracowników'@,,'Liczba współpracowników'@);
_TAB.win_act(_ws,,'Kolejność');
_TAB.win_sel(_ws);

_TAB.select()

:Sign Version 2.0 jowisz:1048 2020/10/16 15:19:19 0909adbf895469371790cfdd4951d278eb04a2e7242d5b0b6870079f3f0a248330ff9f712a0cb94dc186fdb7aae75ab296c66ed03316fd7c7081164ad07f9b66bd47e936a9ba63a91d70250aa6bab094670ddd744a669870726adcd0ebc0890f2db3df159f972e75650e18d69f423bf985f6df20fe50636fd2db3abd2f7b5827
