:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ppl_grp_alsw.fml
:: Utworzony: 13.07.2018
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa czynności PPL_GRP_ALSW - Gr. wprowdz. składników listy.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Gr. wprowdz. składników listy - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::

{? ~FUNKCJE.JESTLIST()
|| FUN.emsg('Lista płac nie jest wybrana.'@);
   return('ERROR')
|? VAR.O().Z='T'
|| FUN.emsg('Lista płac jest zamknięta. Wprowadzanie składników nie jest możliwe.'@);
   return('ERROR')
?};

_choice:=FUN.choice(
   'Wybierz sposób grupowego wprowadzania składnika listy'@,,
   'Rejestracja ręczna'@,'Przetwarzanie automatyczne'@,'Wycofanie ostatniej operacji'@
);
{? _choice=1
|| exec('rmain','!ppl_grp_alsw')
|? _choice=2
|| exec('amain','!ppl_grp_alsw')
|? _choice=3
|| exec('_undo_run','grupskl','L')
?}


\rmain
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Rejestracja ręczna - formuła główna.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('rmain','grupskl','L',"params_exec('aktualizuj','!ppl_grp_alsw',_a,0,_b,_c)",'PPL')


\amain
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Przetwarzanie automatyczne - formuła główna.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('amain','grupskl','L',"params_exec('aktualizuj','!ppl_grp_alsw',_a,1,_b,_c)",'PKD')


\aktualizuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła odpowiedzialna za aktualizację składników listy, wykonywana dla bieżącego pracownika.
::   WE:  _a  [TABLE]  - Tabela z definicją zestawu do zastosowania (patrz \_zestaw/grupskl.fml). Zakłada się,
::                       że dzedzina tabeli jest ustawiona prawidłowo.
::       [_b] [NUMBER] - Czy prezentować rekord nagłówkowy definicji? (0*/1)
::       [_c] [STRING] - Tryb aktualizacji:
::                         'A'   - Automatyczna [domyślnie];
::                         'R0'  - Nowy rekord (wprowadzony ręcznie);
::                         'R1'  - Rekord (wprowadzony ręcznie) zmodyfikowany. Kolejne znaki są oryginalną kwotą.
::       [_d] [NUMBER] - Czy przeliczać listę po zmianach w składnikach? (0*/1)
::   WY: Status operacji (0/1).
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(SYSLOG)
|| _DEF:=_a
|| return()
?};
_def:=var_pres('_b')=type_of(0) & _b;
_tryb:={? var_pres('_c')=type_of('') & (_c='A' | _c='R0' | 2+_c='R1') || _c || 'A' ?};
_recalc:=var_pres('_d')=type_of(0) & _d;

_par:=params_get();
_KOMM:=_par.KOMM;
_ikony:=_par.ikony;
_root:=_par.root;

_UNDO:=_par.UNDO;
_undo:='';

_zmiana:=0;

_sukces:=1;
do();
_loop:=_DEF.first();
{!
|? _loop
|! {? _def
   || _KOMM.sect_beg(
         'DEFINICJA'@+' | '+
         'Składnik: %1 - %2'@ [$_DEF.RN,_DEF.RT]+' | '+
         'Akcja: %1'@ [_DEF.AC]+' | '+
         {? _DEF.AC<>'--'
         || 'Wartość: %1'@ [form(_DEF.KW,15,2)]+' | '
         || ''
         ?}+
         'Daty: %1 - %2'@ [$_DEF.OD,$_DEF.DO]+' | '+
         'Konto: %1'@ [_DEF.KT]+ ' | '
      )
   ?};

   _rb:=__RUB.ref(_DEF.RN);
   {? _rb=null()
   || _KOMM.add('Odnalezienie składnika %1 nie powiodło się'@ [$_DEF.RN],_ikony.pC);
      _sukces:=0

   || _dt:=date(O.R,O.M,0);
      _kk:=exec('_kref','grupskl',_DEF.KT,_dt);
      {? _kk=null()
      || _KOMM.add('Ustalenie konta kosztów nie powiodło się'@,_ikony.pM)
      ?};

      LS.prefix(P.ref(),_rb,_kk);

      {? _DEF.AC='=='
::       Przypisz wartość
      || {? (2+_tryb='R1' & LS.find_key(#(2-_tryb))) | (_tryb='A' & LS.first())
         || exec('_log_ls','grupskl',_KOMM,_ikony.przed,'Składnik przed modyfikacją'@);
            _kwn:={? _DEF.KW=0 & _tryb='A' || ($_DEF.memo_txt(,1,'FM'))(1) || _DEF.KW ?};
            {? _kwn=0
            || _undo+=exec('undo','!ppl_grp_alsw','del');
               _ret:=LS.del(1,1);
               {? _ret>0
               || _zmiana+=1;
                  _KOMM.add('Składnik został usunięty (kwota zerowa)'@,_ikony.sC);
                  _ret=2
               || _KOMM.add('Usunięcie składnika nie powiodło się'@,_ikony.pC);
                  _sukces:=0
               ?}
            |? LS.KW<>_kwn
            || _undo+=exec('undo','!ppl_grp_alsw','put',_kwn);
               LS.KW:=_kwn;
               {? LS.put(1)
               || _zmiana+=1;
                  exec('_log_ls','grupskl',_KOMM,_ikony.po,'Składnik po modyfikacji'@);
                  _KOMM.add('Wartość składnika została zmieniona'@,_ikony.sC)
               || _KOMM.add('Zmiana wartości składnika nie powiodła się'@,_ikony.pC);
                  _sukces:=0
               ?}
            || exec('_log_ls','grupskl',_KOMM,_ikony.po,'Składnik po modyfikacji'@);
               _KOMM.add('Zmiana wartości składnika nie była wymagana'@,_ikony.sM)
            ?}

         |? 2+_tryb='R1'
         || _KOMM.add('Odnalezienie składnika nie powiodło się'@,_ikony.pC);
            _sukces:=0

         || _kwn:={? _DEF.KW=0 || ($_DEF.memo_txt(,1,'FM'))(0) || _DEF.KW ?};
            {? _kwn=0
            || _KOMM.add('Składnik nie został utworzony (kwota zerowa)'@,_ikony.pM)
            || LS.blank();
               LS.P:=P.ref();
               LS.RB:=_rb;
               LS.KW:=_kwn;
               LS.KK:=_kk;
               LS.O:=O.ref();
               {? LS.add(1)
               || _zmiana+=1;
                  _undo+=exec('undo','!ppl_grp_alsw','add');
                  exec('_log_ls','grupskl',_KOMM,_ikony.po,'');
                  _KOMM.add('Składnik został utworzony'@,_ikony.sC)
               || _KOMM.add('Utworzenie składnika nie powiodło się'@,_ikony.pC);
                  _sukces:=0
               ?}
            ?}

         ?}

      |? _DEF.AC='--'
::       Usuń
      || {? LS.first()
         || {!
            |? exec('_log_ls','grupskl',_KOMM,_ikony.przed,'Składnik usuwany'@);
               _undo+=exec('undo','!ppl_grp_alsw','del');
               _ret:=LS.del(1,1);
               {? _ret>0
               || _zmiana+=1;
                  _KOMM.add('Składnik został usunięty'@,_ikony.sC);
                  _ret=2
               || _KOMM.add('Usunięcie składnika nie powiodło się'@,_ikony.pC);
                  _sukces:=0
               ?}
            !}
         || _KOMM.add('Odnalezienie składnika nie powiodło się'@,_ikony.pC);
            _sukces:=0
         ?}

::       Dodaj / Odejmij wartość / procent
      || {? LS.first()
         || exec('_log_ls','grupskl',_KOMM,_ikony.przed,'Składnik przed modyfikacją'@);
            _kw:={? _DEF.KW=0 || ($_DEF.memo_txt(,1,'FM'))(1) || _DEF.KW ?};
            _kwo:=LS.KW;
            _kwn:=($('(_a%1_b' [1+_DEF.AC]+{? _DEF.AC+1='%' || '*_a*0.01' || '' ?}+')$2'))(_kwo,_kw);
            {? _kwn=0
            || _undo+=exec('undo','!ppl_grp_alsw','del');
               _ret:=LS.del(1,1);
               {? _ret>0
               || _zmiana+=1;
                  _KOMM.add('Składnik został usunięty (kwota zerowa)'@,_ikony.sC);
                  _ret=2
               || _KOMM.add('Usunięcie składnika nie powiodło się'@,_ikony.pC);
                  _sukces:=0
               ?}
            |? LS.KW<>_kwn
            || _undo+=exec('undo','!ppl_grp_alsw','put',_kwn);
               LS.KW:=_kwn;
               {? LS.put(1)
               || _zmiana+=1;
                  exec('_log_ls','grupskl',_KOMM,_ikony.po,'Składnik po modyfikacji'@);
                  _KOMM.add('Wartość składnika została zmieniona'@,_ikony.sC)
               || _KOMM.add('Zmiana wartości składnika nie powiodła się'@,_ikony.pC);
                  _sukces:=0
               ?}
            || exec('_log_ls','grupskl',_KOMM,_ikony.po,'Składnik po modyfikacji'@);
               _KOMM.add('Zmiana wartości składnika nie była wymagana'@,_ikony.sM)
            ?}
         || _KOMM.add('Odnalezienie składnika nie powiodło się'@,_ikony.pC);
            _sukces:=0
         ?}
      ?}
   ?};

   {? _def
   || _KOMM.sect_end()
   ?};

   _loop:=_DEF.next()
!};
{? end()
|| {? _recalc & _zmiana
   || FUNKCJE.OBLICZ(1);
      _KOMM.add('Lista płac została przeliczona'@,_ikony.sM)
   ?};
   {? _undo<>''
   || _txt:=
         '_KOMM:=_a; '
         '_ikony:=_b; '
         '_root:=_c; '
         '_recalc:=_d; '
         '_sukces:=1; '
         '_zmiana:=0; '
         '{? P.seek(''%1'') ' [P.uidref()]+
         '|| _sp:=_KOMM.sect_beg(exec(''P'',''#to_string''),_ikony.P); '+
             _undo+
             '{? _recalc & _zmiana '
             '|| FUNKCJE.OBLICZ(1); '
                '_KOMM.add(''Lista płac została przeliczona''@,_ikony.sM) '
             '?}; '
            '_KOMM.sect_end() '
         '|| _sp:=_KOMM.add(''Odnalezienie pracownika nie było możliwe''@,_ikony.pC); '
            '_sukces:=0 '
         '?}; '
         '{? _sukces '
         '|| _lp:=_root.slp; '
            '_root.sile+=1 '
         '|| _lp:=_root.plp; '
            '_root.pile+=1 '
         '?}; '
         '_KOMM.chngroot(_sp,_lp) ';
      exec('_undo_add','grupskl',_UNDO,_txt)
   ?}
|| _KOMM.add('W trakcie przetwarzania wystąpił błąd'@,_ikony.pC);
   _sukces:=0
?};
_sukces


\undo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła tworząca ślad zmian do późniejszego wycofania.
::       Identyfikacja rekordu tabeli LS po ref() lub uidref() nie jest możliwa. Każde przeliczenie listy usuwa
::       wszystkie składniki i tworzy nowe.
::   WE:  _a  [STRING] - Rodzaj wykonywanej operacji.
::       [_b] [NUMBER] - Nowa kwota (parametr istotny tylko dla _a='put').
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_akcja:={? var_pres('_a')=type_of('') || _a || '' ?};

_tresc:='';
{? _akcja='put'
:: Stoimy na rekordzie przed zmianą
|| _tresc+=
      '{? LS.find_key(%1,%2) ' [LS.cur_prfx(),form(_b,,2,'9.')]+
      '|| exec(''_log_ls'',''grupskl'',_KOMM,_ikony.przed,''Składnik przed modyfikacją''@); '+
         'LS.KW:=%1; ' [form(LS.KW,,2,'9.')]+
         '{? LS.put(1) '
         '|| _zmiana+=1; '
            'exec(''_log_ls'',''grupskl'',_KOMM,_ikony.po,''Składnik po modyfikacji''@); '
            '_KOMM.add(''Wartość składnika została przywrócona''@,_ikony.sC) '
         '|| _KOMM.add(''Zmiana wartości składnika nie powiodła się''@,_ikony.pC); '
            '_sukces:=0 '
         '?} '
      '|| _KOMM.add(''Odnalezienie zmienionego składnika nie powiodła się''@,_ikony.pC); '
         '_sukces:=0 '
      '?}; '
|? _akcja='add'
:: Stoimy na rekordzie dodanym
|| _tresc+=
      '{? LS.find_key(%1,%2) ' [LS.cur_prfx(),form(LS.KW,,2,'9.')]+
      '|| exec(''_log_ls'',''grupskl'',_KOMM,_ikony.przed,''Składnik usuwany''@); '
          '{? LS.del(1,1)>0 '
          '|| _zmiana+=1; '
             '_KOMM.add(''Składnik został usunięty''@,_ikony.sC) '
          '|| _KOMM.add(''Usunięcie składnika nie powiodło się''@,_ikony.sC) '
          '?} '
      '|| _KOMM.add(''Odnalezienie dodanego składnika nie powiodło się''@,_ikony.pC); '
         '_sukces:=0 '
      '?}; '
|? _akcja='del'
:: Stoimy na rekordzie usuwanym
|| _tresc+=
      '{? R.seek(''%1'') ' [$LS.RB]+
         {? LS.KK || '& KK.seek(''%1'')' [$LS.KK] || '' ?}+
      '|| LS.blank(1); '
         'LS.P:=P.ref(); '
         'LS.RB:=R.ref(); '
         'LS.KW:=%1; ' [form(LS.KW,,2,'9.')]+
         {? LS.KK
         || 'LS.KK:=KK.ref(); '
         || ''
         ?}+
         '{? LS.add(1) '
         '|| _zmiana+=1; '
            'exec(''_log_ls'',''grupskl'',_KOMM,_ikony.po,''Składnik odtworzony''@); '
            '_KOMM.add(''Wartość składnika została odtworzona''@,_ikony.sC) '
         '|| _KOMM.add(''Odtworzenie składnika nie powiodło się''@,_ikony.pC); '
            '_sukces:=0 '
         '?} '
      '|| _KOMM.add(''Odnalezienie rubryki lub konta kosztów nie powiodło się''@,_ikony.pC); '
         '_sukces:=0 '
      '?}; '
?};
_tresc

:Sign Version 2.0 jowisz:1045 2022/06/30 14:22:53 0e8e24ab2b052e8c1c5a87dde4be6f364b65b163dabece00d7bd8f892dc9f3754839607a95a7e0601a2f63822b9df728dd82a1df84ad3923b41ed65a9f993b56517f118fd8d372381fa69003664dd02a7e8681821900845715e829224c39b042e13689159e0900be4f2c8a18691ff1b75391bf1a3aef10d82aef925caea339fa
