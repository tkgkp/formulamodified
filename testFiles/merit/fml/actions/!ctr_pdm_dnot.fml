:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ctr_pdm_dnot.fml
:: Utworzony: 28.01.2016
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności CTR_PDM_DNOT - Redagowanie not controllingowych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Redagowanie not controllingowych - główna formuła czynności CTR_PDM_DNOT
::----------------------------------------------------------------------------------------------------------------------
::# properties=GRP_FIRM
:: PARAMETRY WY:
::# kind=WY, symbol=K__NOTY, type=_K__NOTY, name=Nota controllingowa, required=N

_args:=params_get();
_we:=_args.in;
_wy:=_args.out;
_mp:=_args.mp;
_akcja:=_mp.akcja();

_refy:=_mp.getRefs();
_ref:=null;
_ok:=1;
{? ~_mp.pathArea() & var_pres('_refy')>0
|| {! _ii:=1..obj_len(_refy)
   |? _ref=null
   |! _rr:=_refy[_ii];
      {? _rr<>~~ & ref_tab(_rr)=K__NOTY
      || _name:=ref_name(_rr);
         K__PNOTY.use('notypo'+(_name+2));
         K__NOTY.use(_name);
         K__NOTY.prefix();
         {? K__NOTY.seek(_rr)
         || _ref:=K__NOTY.ref()
         || FUN.info('Nie znaleziono noty.'@);
            _ok:=0
         ?}
      ?}
   !}
?};

{? _ok
|| {? ~_mp.pathArea()
   || exec('init_k_noty','control')
   ?};
   {? _akcja='Zakończ'
   || ~~
   |? _mp.pathTodo() | _akcja='Popraw'
   || menu_txt(,'Popraw');
      exec('bm_k_noty','!ctr_pdm_dnot')
   |? _mp.pathProc() | _akcja='Dołącz' | _ref=null
   || menu_txt(,'Dołącz');
      _mp.trigRef('K__NOTY');
      _ok:=exec('bm_k_noty','!ctr_pdm_dnot')
   ?};
   {? _ok & K__NOTY.get() & K__NOTY.STAT='T'
   || _wy.K__NOTY:=K__NOTY.ref();
      _mp.save(,_wy);
      _mp.done()
   ?}
|| _wy.K__NOTY:=null;
   _mp.save(,_wy);
   _mp.done()
?};
1


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Formuła na opis czynności na liście ToDo
::----------------------------------------------------------------------------------------------------------------------
_desc:='Zakończ rejestrację noty controllingowej'@@;
_mp:=params_get().mp;
_refy:=_mp.getRefs();
_ref:=null;
{? var_pres('_refy')>0
|| {! _ii:=1..obj_len(_refy)
   |? _ref=null
   |! _rr:=_refy[_ii];
      {? _rr<>~~ & ref_tab(_rr)=K__NOTY
      || _name:=ref_name(_rr);
         K__NOTY.cntx_psh();
         K__NOTY.use(_name);
         K__NOTY.prefix();
         {? K__NOTY.seek(_rr)
         || {? K__NOTY.OPIS<>''
            ||_desc:='Zakończ rejestrację noty controllingowej: %1 - %2'@@[K__NOTY.SYM,K__NOTY.OPIS]
            ||_desc:='Zakończ rejestrację noty controllingowej: %1'@@[K__NOTY.SYM]
            ?}
         ?};
         K__NOTY.cntx_pop()
      ?}
   !}
?};
_desc


\k__noty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Wartos poczatkowa dla pol typu _K__NOTY
::  OLD: \k__noty/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K__NOTY.ref()


\be_k_noty_mbn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed redakcja K__NOTY.SKID_MBN
::  OLD: \be_k_noty_mbn/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? -menu_txt()<>'popraw'
|| 1
|| K__PNOTY.cntx_psh();
   K__PNOTY.index('K__NOTY'); K__PNOTY.prefix(K__NOTY.ref());
   _jest:=K__PNOTY.first();
   K__PNOTY.cntx_pop();
   ~_jest
?}


\bl_k_noty_dr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Wartosc poczatkowa pola K__NOTY.DR
::  OLD: \bl_k_noty_dr/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_data:={? var_pres('__KNotDO')>0 & type_of(__KNotDO)=type_of(date()) || __KNotDO || date() ?};
{? _data<SSTALE.AR().POCZ_ROK || _data:=ROK_F.POCZ_ROK
|? _data>ROK_F.KON_ROK || _data:=ROK_F.KON_ROK
?};
_data


\bl_k_noty_sym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Wartosc poczatkowa pola K__NOTY.SYM
::  OLD: \bl_k_noty_sym/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_nr:=0;
K__NOTY.cntx_psh();
K__NOTY.index('SYM'); K__NOTY.prefix();
{? K__NOTY.last() & #(K__NOTY.SYM+6)>0
|| _nr:=#(K__NOTY.SYM+6)
|| _nr:=K__NOTY.size()
?};
K__NOTY.cntx_pop();
_nr+=1;
'NOTA_CON\\'+$(SSTALE.AR().POCZ_ROK~1)+'\\'+(('000000'+$_nr)+6)


\bl_k_pnoty_mbn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Wartosc poczatkowa K__PNOTY.SKID_MBN
::  OLD: \bl_k_pnoty_mbn/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K__NOTY.SKID_MBN


\bl_k_pnoty_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Wartosc poczatkowa K__PNOTY.K_WERSJE
::  OLD: \bl_k_pnoty_wer/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K__NOTY.K_WERSJE


\bl_k_pnoty_zar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Wartosc poczatkowa K__PNOTY.ZAR
::  OLD: \bl_k_pnoty_zar/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K__NOTY.ZAR


\be_k_pnoty_jm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed redakcja K__PNOTY.JM
::  OLD: \be_k_pnoty_jm/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? K__PNOTY.WYM1
|| SKIDXDUD.index('POZ');
   SKIDXDUD.prefix(K__PNOTY.WYM1);
   {? SKIDXDUD.first()
   || SKIDXDUD.WART_IL='I'
   ?}
?}


\bm_k_noty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed poprawianiem not (K__NOTY)
::  OLD: \bm_k_noty/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_pop:=-menu_txt()='popraw';
KNadd:=~_pop;
{? _pop & K__NOTY.ZAR<>OPERATOR.USER().KOD
|| FUN.info('Nota została zarejestrowana przez innego użytkownika.'@);
   return(0)
|? _pop & K__NOTY.STAT='T'
|| FUN.info('Nota jest zaakceptowana.'@);
   return(0)
?};
exec('k_noty_set_win','!ctr_pdm_dnot');
{? ~_pop
|| K__NOTY.blank();
   kNotySym:=K__NOTY.SYM;
   K_WERSJE.cntx_psh();
   K_WERSJE.index('CZY_SYS');
   K_WERSJE.prefix('T','N','Wykonanie');
   K__NOTY.K_WERSJE:={? K_WERSJE.first() || K_WERSJE.ref() || null ?};
   K_WERSJE.cntx_pop()
?};
_ok:=0;
KNwer:=K__NOTY.K_WERSJE;
SKID_MBN.fld_fml('EWID','BLANK');
{? K__NOTY.edit("exec('ar_k_noty','!ctr_pdm_dnot')")
|| _ref:=exec('am_k_noty','!ctr_pdm_dnot');
   {? ~_pop
   || K__NOTY.seek(_ref)
   ?};
   _ok:=1
?};
SKID_MBN.fld_fml('EWID','BLANK',"*");
VAR_DEL.delete('kNotySym','KNwer','KNadd');
_ok


\am_k_noty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Po modyfikacji not
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
K__NOTY.cntx_psh();
K__NOTY.prefix();
{? KNadd=0
|| do();
   {? K__NOTY.put() & KNwer<>K__NOTY.K_WERSJE
   || KNwer:=K__NOTY.K_WERSJE;
      K__PNOTY.cntx_psh();
      K__PNOTY.index('K__NOTY'); K__PNOTY.prefix(K__NOTY.ref());
      {? K__PNOTY.first()
      || {!
         |? K__PNOTY.K_WERSJE:=K__NOTY.K_WERSJE; K__PNOTY.put();
            K__PNOTY.next()
         !}
      ?};
      K__PNOTY.cntx_pop()
   ?};
   end();
   exec('desc_update','#b__box',K__NOTY.uidref());
   _ref:=K__NOTY.ref()
|| K__NOTY.add();
   KNadd:=0;
   _ref:=K__NOTY.ref()
?};
K__NOTY.cntx_pop();
_ref


\ar_k_noty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Rekord po K__NOTY
::  OLD: \ar_k_noty/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=__CHK.record(K__NOTY,,'SYM','SKID_MBN','K_WERSJE','DO');
{? _ok=''
|| _ref:=K__NOTY.ref();
   K__NOTY.cntx_psh();
   K__NOTY.index('SYM'); K__NOTY.prefix();
   {? K__NOTY.find_key(K__NOTY.SYM,) & (KNadd | _ref<>K__NOTY.ref())
   || FUN.info('Istnieje nota o symbolu: %1.'@[K__NOTY.SYM]);
      _ok:='SYM'
   ?};
   K__NOTY.cntx_pop();
   {? _ok<>'' & var_press('kNotySym')>0 & kNotySym=K__NOTY.SYM
   || K__NOTY.SYM:=exec('bl_k_noty_sym','!ctr_pdm_dnot')
   ?}
?};
{? _ok=''
|| __KNotDO:=K__NOTY.DO
?};
_ok


\bd_k_noty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed usunieciem K__NOTY
::  OLD: \bd_k_noty/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? K__NOTY.get()
|| _moje:=K__NOTY.ZAR=OPERATOR.USER().KOD;
   {?  ~_moje & K__NOTY.sel_size()
   || 1
   |? K__NOTY.STAT='T'
   || {? ~K__NOTY.sel_size()
      || FUN.info('Nota jest zaakceptowana.'@)
      || NotyA+=1
      ?}
   || {? K__NOTY.sel_size() |
         _moje & FUN.ask('Czy usunąć notę dla controllingu?'@) |
         ~_moje & FUN.ask('Czy usunąć notę dla controllingu\nzarejestrowaną przez użytkownika %1?'@[K__NOTY.ZAR],'EXCLAM',)
      || {? exec('k_noty_lock','!ctr_pdm_dnot',K__NOTY.sel_size()=0)
         || K__PNOTY.index('K__NOTY');
            K__PNOTY.prefix(K__NOTY.ref());
            {? K__PNOTY.first() || {! |? K__PNOTY.del !} ?};
            {? ~K__NOTY.del(,1)
            || K__NOTY.r_unlock()
            |? K__NOTY.sel_size()
            || NotyD+=1
            ?}
         |? K__NOTY.sel_size()
         || NotyB+=1
         ?}
      ?}
   ?}
?}


\k_noty_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Blokada noty
::   WE: [_a] - czy z komunikatem
::  OLD: \k_noty_lock/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=1 ?};
{? K__NOTY.r_lock(1,1,1)
|| 1
|? _a
|| FUN.info('Nota jest obsługiwana przez innego operatora.'@);
   0
?}


\bgd_k_noty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed akcja grupowa usuwania not
::  OLD: \bgd_k_noty/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy usunąć zaznaczone noty?'@)
|| NotyS:=K__NOTY.sel_size();
   NotyD:=NotyA:=NotyB:=0;
   1
?}


\agd_k_noty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: po akcji grupowej usuwania not
::  OLD: \agd_k_noty/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_a:={? NotyA || '\nw tym zaakceptowane: %1'@[$NotyA] || '' ?};
_b:={? NotyB || '\nw tym zablokowane: %1'@[$NotyB] || '' ?};
FUN.info(
   'Liczba zaznaczonych not: %1\n'
   'Liczba usuniętych not: %2\n'
   'Liczba pozostałych not: %3 %4 %5.'@[$NotyS,$NotyD,$(NotyS-NotyD),_a,_b]);
VAR_DEL.delete('NotyS','NotyD','NotyA','NotyB')


\k_noty_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Akceptacja noty
::   WE: [_a] - uruchamiać czynność? [1]-tak 0-nie
::  OLD: \k_noty_akc/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
{? K__NOTY.get()
|| {? K__NOTY.ZAR<>OPERATOR.USER().KOD
   || {? ~K__NOTY.sel_size()
      || FUN.info('Nota została zarejestrowana przez innego użytkownika.'@)
      ?}
   |? K__NOTY.STAT='T'
   || _ok:=1;
      {? ~K__NOTY.sel_size()
      || FUN.info('Nota jest już zaakceptowana.'@)
      || NotyW+=1
      ?}
   |? K__NOTY.STAT='N'
   || {? ~exec('can_k_noty_chg','!ctr_pdm_dnot',K__NOTY.sel_size()=0)
      || {? K__NOTY.sel_size()
         || NotyO+=1
         ?}
      |? exec('k_noty_lock','!ctr_pdm_dnot',K__NOTY.sel_size()=0)
      || K__PNOTY.cntx_psh();
         K__PNOTY.index('K__NOTY'); K__PNOTY.prefix(K__NOTY.ref());
         _jest:=K__PNOTY.first();
         K__PNOTY.cntx_pop();
         {? _jest
         || do();
            K__PNOTY.cntx_psh();
            K__PNOTY.index('K__NOTY'); K__PNOTY.prefix(K__NOTY.ref());
            {? K__PNOTY.first()
            || {!
               |? K__PNOTY.STAT:='T'; K__PNOTY.put();
                  K__PNOTY.next()
               !}
            ?};
            K__PNOTY.cntx_pop();
            K__NOTY.STAT:='T';
            K__NOTY.cntx_psh(); K__NOTY.prefix();
            {? K__NOTY.put() & K__NOTY.sel_size()
            || NotyA+=1
            ?};
            K__NOTY.cntx_pop();
            _ok:=end();
            K__NOTY.r_unlock()
         || K__NOTY.r_unlock();
            {? ~K__NOTY.sel_size()
            || FUN.info('Brak pozycji noty.'@)
            ?}
         ?}
      |? K__NOTY.sel_size()
      || NotyB+=1
      ?}
   ?}
?};
{? _ok & (var_press('_a')<=0 | _a)
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='CTR_PDM_DNOT';
   _params.AKCJA:='Zakończ';
   _params.UIDREF:=K__NOTY.uidref();
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   _params.PROC_START:='N';
   exec('mp_run','#b__box',_params)
?}


\bg_k_noty_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed akcja grupowa akceptacji noty
::  OLD: \bg_k_noty_akc/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy zaakceptować zaznaczone noty?'@)
|| NotyS:=K__NOTY.sel_size();
   NotyA:=NotyW:=NotyB:=NotyO:=0;
   1
?}


\ag_k_noty_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Po akcji grupowej akceptacji noty
::  OLD: \ag_k_noty_akc/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_w:={? NotyW || '\nw tym już zaakceptowanych: %1'@[$NotyW] || '' ?};
_b:={? NotyB || '\nw tym zablokowane: %1'@[$NotyB] || '' ?};
FUN.info(
   'Liczba zaznaczonych not: %1\n'
   'Liczba zaakceptowanych not: %2\n'
   'Liczba pozostałych not: %3 %4 %5.'@[$NotyS,$NotyA,$(NotyS-NotyA),_w,_b]);
VAR_DEL.delete('NotyS','NotyW','NotyA','NotyB')


\can_k_noty_chg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Czy mozna zmienic status akceptacji noty dla controllingu
::   WE: _a - czy komunikowac o bledach
::  OLD: \can_k_noty_chg/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_can:=1;
K__PNOTY.cntx_psh();
K__PNOTY.index('K__NOTY');
K__PNOTY.prefix(K__NOTY.ref());
{? K__PNOTY.first()
|| {!
   |? _can:=K__PNOTY.OKRO_F().ZAM_CON<>'T';
      _can & K__PNOTY.next()
   !}
?};
K__PNOTY.cntx_pop();
{? ~_can & _a
|| FUN.info('Nota zawiera pozycje z zamkniętych okresów.'@)
?};
_can


\k_noty_wyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Wycofanie akceptacji noty
::  OLD: \k_noty_wyc/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? K__NOTY.get()
|| {? K__NOTY.ZAR<>OPERATOR.USER().KOD
   || {? ~K__NOTY.sel_size()
      || FUN.info('Nota została zarejestrowana przez innego użytkownika.'@)
      ?}
   |? K__NOTY.STAT='N'
   || {? ~K__NOTY.sel_size()
      || FUN.info('Nota nie była zaakceptowana.'@)
      || NotyW+=1
      ?}
   || {? ~exec('can_k_noty_chg','!ctr_pdm_dnot',K__NOTY.sel_size()=0)
      || {? K__NOTY.sel_size()
         || NotyO+=1
         ?}
      |? exec('k_noty_lock','!ctr_pdm_dnot',K__NOTY.sel_size()=0)
      || do();
         K__PNOTY.cntx_psh();
         K__PNOTY.index('K__NOTY'); K__PNOTY.prefix(K__NOTY.ref());
         {? K__PNOTY.first()
         || {!
            |? K__PNOTY.STAT:='N'; K__PNOTY.put();
               K__PNOTY.next()
            !}
         ?};
         K__PNOTY.cntx_pop();
         K__NOTY.STAT:='N';
         K__NOTY.cntx_psh(); K__NOTY.prefix();
         {? K__NOTY.put() & K__NOTY.sel_size()
         || NotyA+=1
         ?};
         K__NOTY.cntx_pop();
         end();
         K__NOTY.r_unlock()
      |? K__NOTY.sel_size()
      || NotyB+=1
      ?}
   ?}
?}


\bg_k_noty_wyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed akcja grupowa wycofania noty
::  OLD: \bg_k_noty_wyc/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy wycofać akceptację zaznaczonych not?'@)
|| NotyS:=K__NOTY.sel_size();
   NotyA:=NotyW:=NotyB:=0;
   1
?}


\ag_k_noty_wyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Po grupowej akcji wycofania not
::  OLD: \ag_k_noty_wyc/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info(
   'Liczba zaznaczonych not: '+$NotyS+'\n'+
   'Liczba wycofanych not: '+$NotyA+'\n'+
   'Liczba pozostałych not: '+$(NotyS-NotyA)+
   {? NotyW || '\nw tym niezaakceptowane: '+$NotyW || '' ?}+
   {? NotyB || '\nw tym zablokowane: '+$NotyB || '' ?}+
   '.'
);
VAR_DEL.delete('NotyS','NotyW','NotyA','NotyB')


\bm_k_pnoty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed popraw K__PNOTY
::  OLD: \bm_k_pnoty/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? K__NOTY.get()
|| {? exec('k_noty_lock','!ctr_pdm_dnot')
   || _add:=-menu_txt()<>'popraw';
      {? _add
      || K__PNOTY.blank();
         K__PNOTY.OKRO_F:=SSTALE.AO;
         UD_POM.W1:=UD_POM.W1_OPIS:='';
         UD_POM.W2:=UD_POM.W2_OPIS:='';
         UD_POM.W3:=UD_POM.W3_OPIS:='';
         UD_POM.W4:=UD_POM.W4_OPIS:='';
         UD_POM.W5:=UD_POM.W5_OPIS:=''
      ?};
      {? K__PNOTY.edit("exec('ar_k_pnoty','!ctr_pdm_dnot')")
      || {? _add
         || K__PNOTY.add()
         || K__PNOTY.put()
         ?}
      ?};
      K__NOTY.r_unlock();
      exec('k_pnoty_suma','control')
   ?}
?}


\ar_k_pnoty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Rekord po tabeli K__PNOTY
::  OLD: \ar_k_pnoty/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_fml:='__CHK.record3(K__PNOTY,\'OKRO_F\',\'Okres\'';
SKID_MBP.cntx_psh();
SKID_MBP.index('LP'); SKID_MBP.prefix(UD_POM.WXMODEL);
{? SKID_MBP.first()
|| {!
   |? _fml+=',UD_POM,\'W'+$SKID_MBP.LP+'\',\''+SKID_MBP.NAZ+'\'';
      SKID_MBP.next()
   !}
?};
SKID_MBP.cntx_pop();
_fml+=',K__PNOTY,\'WART\',\'Wartość\')';
_ret:=($_fml)();
{? _ret=''
|| _ud_sch:=null;
   SKID_MBP.cntx_psh();
   SKID_MBP.index('LP');
   SKID_MBP.prefix(K__NOTY.SKID_MBN,1);
   {? SKID_MBP.first()
   || _ud_sch:=SKID_MBP.UD_SCH
   ?};
   SKID_MBP.cntx_pop();
   {? exec('is_k_form','control',_ud_sch,K__PNOTY.WYM1,K__NOTY.K_WERSJE().K_W_OBL)
   || {? ~FUN.ask('Pozycja budżetowa \'%1\' jest wyliczana formułą. Kontynuować?'@[K__PNOTY.WYM1().SYMBOL])
      || _ret:='W1'
      ?}
   || UD_DEF.cntx_psh();
      UD_DEF.index('PODTEC');
      UD_DEF.prefix(_ud_sch,K__PNOTY.WYM1);
      {? UD_DEF.first()
      || UD_DEF.index('SYMBOL');
         UD_DEF.prefix(_ud_sch,UD_DEF.ref());
         {? UD_DEF.first()
         || {? ~FUN.ask('Pozycja budżetowa \'%1\' nie jest liściem. Kontynuować?'@[K__PNOTY.WYM1().SYMBOL])
            || _ret:='W1'
            ?}
         ?}
      ?};
      UD_DEF.cntx_pop()
   ?}
?};
_ret


\bd_k_pnoty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed usunieciem pozycji noty
::  OLD: \bd_k_pnoty/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy usunąć pozycję notę dla controllingu?'@)
|| {? exec('k_noty_lock','!ctr_pdm_dnot')
   || {? ~K__PNOTY.del(,1)
      || K__NOTY.r_unlock()
      || exec('k_pnoty_suma','control')
      ?}
   ?}
?}


\be_ud_pom_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed redakcja pol UD_POM.Wx (x: 1..5)
::  OLD: \be_ud_pom_w/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_POM.WXMODEL
|| _nr:=#(1+(1-cur_afld()));
   SKID_MBP.cntx_psh();
   SKID_MBP.index('LP'); SKID_MBP.prefix(UD_POM.WXMODEL,_nr);
   _jest:=SKID_MBP.first();
   {? _jest
   || {? _nr=1
      || __UDFORM:=1;
         __UDSCH:=SKID_MBP.UD_SCH;
         __UDWER:=K__NOTY.K_WERSJE().K_W_OBL
      || VAR_DEL.delete('__UDFORM','__UDSCH','__UDWER')
      ?}
   ?};
   SKID_MBP.cntx_pop();
   _jest
?}


\f3_ud_pom_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Klawisz F3 dla pol UD_POM.Wx (X: 1..5)
::  OLD: \f3_ud_pom_w/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_POM.WXMODEL
|| _nr:=#(1+(1-cur_afld()));
   exec('f3_dim','control',UD_POM.WXMODEL,_nr)
?}


\ae_ud_pom_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Po redakcji pol UD_POM.Wx (x: 1..5)
::  OLD: \ae_ud_pom_w/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_nr:=#(1+(1-cur_afld()));
{? fld()<>''
|| _ok:=0;
   SKID_MBP.cntx_psh();
   SKID_MBP.index('LP'); SKID_MBP.prefix(UD_POM.WXMODEL,_nr);
   {? SKID_MBP.first()
   || UD_DEF.cntx_psh();
      UD_DEF.index('SCHSYM'); UD_DEF.prefix(SKID_MBP.UD_SCH,fld());
      {? UD_DEF.first()
      || {? UD_DEF.UD_SKL().AKTYWNY<>'T'
         || FUN.emsg('Element o symbolu %1 nie jest aktywny.'@[fld()])
         || fld(UD_SKL.SYMBOL);
            _fml:=($('UD_POM.W'+$_nr+'_FLD'))();
            ($(_fml+':=_a'))(UD_SKL.ref());
            ($('UD_POM.W'+$_nr+'_OPIS:=_a'))(UD_SKL.OPIS);
            _ok:=1;
            {? _nr=1 & UD_POM.W1_AE<>''
            || ($UD_POM.W1_AE)()
            ?}
         ?}
      || FUN.emsg('Brak element o początkowych znakach: %1.'@[fld()])
      ?};
      UD_DEF.cntx_pop()
   ?};
   SKID_MBP.cntx_pop();
   _ok
|| _fml:=($('UD_POM.W'+$_nr+'_FLD'))();
   ($(_fml+':=_a'))(null);
   ($('UD_POM.W'+$_nr+'_OPIS:=_a'))('');
   1
?}


\bv_k_pnoty_jm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed wyswietleniem K__PNOTY.JM
::----------------------------------------------------------------------------------------------------------------------
_enable:=0;
{? K__PNOTY.WYM1
|| SKIDXDUD.index('POZ');
   SKIDXDUD.prefix(K__PNOTY.WYM1);
   _enable:=SKIDXDUD.first() & SKIDXDUD.WART_IL='I'
?};
K__PNOTY.efld_opt('RED','enable='+$_enable,K__PNOTY,'JM');
~~


\ae_k_pnoty_wym1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Po redakcji pozycji budzetowej pozycji noty
::  OLD: \ae_k_pnoty_wym1/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_enable:=0;
{? K__PNOTY.WYM1
|| SKIDXDUD.index('POZ');
   SKIDXDUD.prefix(K__PNOTY.WYM1);
   _ok:=SKIDXDUD.first();
   {? _ok & SKIDXDUD.WART_IL='I'
   || _enable:=1;
      {? K__PNOTY.JM=null || K__PNOTY.JM:=SKIDXDUD.JM ?}
   || K__PNOTY.JM:=null
   ?}
?};
K__PNOTY.efld_opt('RED','enable='+$_enable,K__PNOTY,'JM');
1


\edit_k_noty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Akcja dołacz lub popraw okna WER tabeli K__NOTY
::----------------------------------------------------------------------------------------------------------------------
_pop:=-menu_txt()='popraw' | -menu_txt()='zakończ';
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='CTR_PDM_DNOT';
_params.AKCJA:=menu_txt();
{? _pop
|| _params.UIDREF:=K__NOTY.uidref()
?};
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
_params.PROC_START:={? _pop || 'N' || 'T' ?};
exec('mp_run','#b__box',_params)


\k_noty_set_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Ustawia okno redagowania not
::----------------------------------------------------------------------------------------------------------------------
_okn:=K__NOTY.mk_edit('Nota dla controllingu'@);
K__NOTY.win_ewin(_okn,,'RED');
K__NOTY.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin'['&Pozycje'@],"
   _ok:=exec('ar_k_noty','!ctr_pdm_dnot');
   {? _ok<>''
   || 'edit:'+_ok
   || _ref:=exec('am_k_noty','!ctr_pdm_dnot');
      {? _ref<>null
      || K__NOTY.prefix();
         {? K__NOTY.seek(_ref)
         || K__PNOTY.cntx_psh();
            K__PNOTY.index('K__NOTY'); K__PNOTY.prefix(K__NOTY.ref());
            K__PNOTY.win_sel('WER');
            exec('bv_k_pnoty','control',1);
            exec('k_pnoty_suma','control');
            K__PNOTY.fld_opt('WER','col_help="",col_name=""',K__PNOTY,'WYM1','SYMBOL');
            K__PNOTY.fld_opt('WER','col_help="",col_name=""',K__PNOTY,'WYM2','SYMBOL');
            K__PNOTY.fld_opt('WER','col_help="",col_name=""',K__PNOTY,'WYM3','SYMBOL');
            K__PNOTY.fld_opt('WER','col_help="",col_name=""',K__PNOTY,'WYM4','SYMBOL');
            K__PNOTY.fld_opt('WER','col_help="",col_name=""',K__PNOTY,'WYM5','SYMBOL');
            K__PNOTY.select();
            K__PNOTY.cntx_pop()
         ?}
      ?};
      ''
   ?}
");
_zakoncz:=K__NOTY.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=end'['&Zakończ notę'@],"
   _ok:=exec('ar_k_noty','!ctr_pdm_dnot');
   {? _ok<>''
   || 'edit:'+_ok
   || _wyn:='';
      _ref:=exec('am_k_noty','!ctr_pdm_dnot');
      {? _ref<>null
      || K__NOTY.prefix();
         {? K__NOTY.seek(_ref)
         || exec('k_noty_akc','!ctr_pdm_dnot',0);
            {? K__NOTY.STAT='T'
            || _wyn:='key:F2'
            ?}
         ?}
      ?};
      _wyn
   ?}
");
_zapisz:=K__NOTY.win_ebtn(_okn,'text=%1, btn_label_align=center, panel=bottom, align=end'['Zapisz'@],"'key:F2'");
_anuluj:=K__NOTY.win_ebtn(_okn,'text=%1, btn_label_align=center, panel=bottom, align=end'['&Anuluj'@],'key:Esc');
K__NOTY.btn_eopt(_okn,_zakoncz,'tooltip='+exec('help_red_zakoncz','#window','N'));
K__NOTY.btn_eopt(_okn,_zapisz,'tooltip='+exec('help_red_ok','#window','Z'));
K__NOTY.btn_eopt(_okn,_anuluj,'tooltip='+exec('help_red_esc','#window','A'));
K__NOTY.win_edit(_okn)

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:37 68414b8a201766c0f4c0b011590b79d52556dbf456e9f0db5ce1cd255e484d06dc8f5ac2b494dd681734a677564deeebebcabd1470f9ff6982616d27c863a3ed71e248d727eda5ed4790c5df2ceb153d8a8b28a53d64542021edff00e0cf567a21b668f5e1d8648f0c3f67cef55900fbe1e6f19414fc220b2eff545bf7f4b5f1
