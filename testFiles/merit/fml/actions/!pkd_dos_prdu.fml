:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_dos_prdu.fml
:: Utworzony: 06.05.2015
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa czynności PKD_DOS_PRDU - Rejestracja danych ubezpieczeniowych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rejestracja danych ubezpieczeniowych - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::
::# kind=WE,   symbol=OSOBA,     type=_OSOBA,   name=Wskazanie osoby,   required=T, keyref=T

_par:=params_get();
_mp:=_par.mp;
_in:=_par.in;
_akcja:=_mp.akcja();

_result:='';

_uidref:=exec('ref2uid','#table',_in.OSOBA);
{? _uidref=''
|| _result:=exec('error','!pkd_dos_prdu')

|? _mp.isMicro()
|| {? _akcja='START'
::    Wejście do okienka w ramach obszaru roboczego - uruchomienie procesu i pozostawienie go na liście zadań.
   || _mp.keyRef(_uidref);
      _mp.keep()

   |? _akcja='STOP'
::    Wyjście z okienka w ramach obszaru roboczego - anulowanie procesu.
   || _mp.delRef(_uidref);
      _mp.cancel()

   |? _akcja<>''
   || _result:='Czynność %1 nie obsługuje akcji %2.'@ [_mp.buf_act.UID,_akcja]

   ?}

|| {? _akcja='ZAKOŃCZ'
   || _mp.done()

   |? _mp.pathTodo()
   || _value:=exec('select','!pkd_dos_prdu',_in.OSOBA);
      {? type_of(_value)=type_of('')
      || _result:=_value
      |? _value
      || _mp.done()
      || _mp.keep()
      ?}
   ?}
?};

{? _result<>''
:  Obsługa błędów
|| _mp.error(_result);
   FUN.emsg(_result)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rejestracja danych ubezpieczeniowych - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('desc','osoba',params_get().mp);

{? _tab.ZAW_DANE='T'
|| {? _tab.OBCY='T'
   || 'Zarejestruj dane ubezpieczeniowe: %1 %2: Paszport - %3'@@[_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT]
   |? +_tab.PESEL
   || 'Zarejestruj dane ubezpieczeniowe: %1 %2: PESEL - %3'@@[_tab.NAZWISKO,_tab.PIERWSZE,_tab.PESEL]
   || 'Zarejestruj dane ubezpieczeniowe: %1 %2: Data urodzenia - %3'@@[_tab.NAZWISKO,_tab.PIERWSZE,_tab.UR_DATA]
   ?}
|| 'Zarejestruj dane ubezpieczeniowe'@@
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Słownik komunikatów o błędach.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Rejestrowanie danych ubezpieczeniowych niemożliwe.\nNie znaleziono osoby.'


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa czynności wywołanej z listy zadań
::   WE: _a - Wskazanie osoby.
::   WY: Komunikat o błędzie lub informacja o wyjściu z okna poprzez wywołanie sel_exit() - czyli "Zakończ".
::----------------------------------------------------------------------------------------------------------------------
OSOBA.cntx_psh();
OSOBA.prefix();
{? type_of(_a)=type_of(null()) & _a<>null() & OSOBA.seek(_a)
|| P_INFO.cntx_psh();
   P_INFO.index('OD');
   P_INFO.prefix(exec('ref_firma','ustawienia'),OSOBA.ref());

   P_INFO.win_sel('WERI');
   P_INFO.win_edit('RED');

   _ret:=P_INFO.select();
   P_INFO.cntx_pop()
|| _ret:=exec('error','!pkd_dos_prdu')
?};
OSOBA.cntx_pop();
_ret


\p_info_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła odpowiedzialna za dynamiczne ustawianie właściwości pól tabeli P_INFO. Formuła wywoływana jest
::       w dwóch kontekstach pracy:
::          - Po redagowaniu konkretnego pola, które determinuje właściwości wyświetlania innych pól.
::          - Przed wyświetleniem okna redagowania (przed właściwymi akcjami Dołącz, Popraw, Wyświetl), ustawia
::            właściwości wszystkich pól (wymagających tego).
::       Kontekst pracy jest określany na podstawie argumentu wywołania.
::   WE: [_a] [STRING] - Kontekst pracy:
::             '1' - Obsługa jednego pola [domyślnie].
::             '*' - Obsługa wszystkich pól.
::       [_b] [TABLE]  - Uchwyt tabeli, w oknie redagowania której znajdują sie pola. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęta bieżąca tabela.
::       [_c] [STRING] - Akronim okna, w którym mają być ustawione właściwości pól. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęte bieżące okno.
::       [_d] [STRING] - Akronim pola, którego wartość determinuje właściwości wyświetlania innych pól. Parametr ma
::             znaczenie wyłącznie dla _a='1'. [Domyślnie: bieżące pole].
::   WY: 0 - Błąd argumentów wywołania.
::       1 - Argumenty poprawne (właściwości ustawione).
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (_a='1' | _a='*') || _a || '1' ?};
{? var_pres('_b')=type_of(P_INFO)
|| _tab:=_b
|? _tryb='1'
|| _tab:=cur_tab(1,1)
|| return(0)
?};
{? var_pres('_c')=type_of('')
|| _we:=_c
|? _tryb='1'
|| _we:=cur_win(1,1)
|| return(0)
?};
{? var_pres('_d')=type_of('')
|| _fld:=_d
|? _tryb='1'
|| _fld:=cur_afld()
|| _fld:=''
?};

{? _fld='' | _fld='OD'
|| _sval:=$(P_INFO.OD~1<2009);
   _tab.efld_opt(_we,'mark='+_sval,P_INFO,'NZPR','KOD');

   _sval:=$(P_INFO.OD~1<2010);
   _tab.efld_opt(_we,'enable='+_sval,P_INFO,'SZCZKOD','KOD');
   {? _fld<>''
   || exec('p_info_efld_opt','!pkd_dos_prdu','1',_tab,_we,'SZCZKOD')
   ?}
?};

{? _fld='' | _fld='KC' | _fld='DTUM'
|| _sval:=$~(P_INFO.KC=null() & P_INFO.DTUM=date(0,0,0));
   _tab.efld_opt(_we,'mark='+_sval,P_INFO,'KC');
   _tab.efld_opt(_we,'mark='+_sval,P_INFO,'DTUM')
?};

{? _fld='' | _fld='TTUB'
|| _sval:=$exec('p_info_bl_kc_be','!pkd_dos_prdu');
   _tab.efld_opt(_we,'enable='+_sval,P_INFO,'BL_KC')
?};

{? _fld='' | _fld='STNP'
|| _sval:=$exec('czy_stnp','!pkd_dos_prdu');
   _tab.efld_opt(_we,'enable='+_sval,P_INFO,'STNP_OD');
   _tab.efld_opt(_we,'mark='+_sval,P_INFO,'STNP_OD');
   _tab.efld_opt(_we,'enable='+_sval,P_INFO,'STNP_DO');
   _tab.efld_opt(_we,'enable='+_sval,P_INFO,'SZCZNIEP');
   _tab.efld_opt(_we,'enable='+_sval,P_INFO,'ORZECZ')
?};

{? _fld='' | _fld='SZCZKOD'
|| _sval:=$(P_INFO.OD~1<2010 & P_INFO.SZCZKOD<>null());
   _tab.efld_opt(_we,'enable='+_sval,P_INFO,'SZCZOD');
   _tab.efld_opt(_we,'mark='+_sval,P_INFO,'SZCZOD');
   _tab.efld_opt(_we,'enable='+_sval,P_INFO,'SZCZDO')
?};

1


\p_info_od_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Przed redagowaniem pola P_INFO.OD.
::   WE:
::   WY:
::  OLD: \PI_OD/kartprac.fml
::----------------------------------------------------------------------------------------------------------------------
P_INFO.ST<>'A'


\p_info_od_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Po redagowaniu pola P_INFO.OD.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_info_efld_opt','!pkd_dos_prdu')


\p_info_kc_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Po redagowaniu pola P_INFO.KC.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_info_efld_opt','!pkd_dos_prdu')


\p_info_dtum_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Po redagowaniu pola P_INFO.DTUM.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_info_efld_opt','!pkd_dos_prdu')


\p_info_st_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Wartość początkowa pola P_INFO.ST.
::       We wcześniejszych wersjach pole wskazywało na miejsce utworzenia danych (np. K - kadry, P - place,
::       Z - umowy-zlecenia) lub mówiło o tym, że zapis był automatyczny (A). Algorytmicznie istotna jest właśnie tylko
::       ta informacja - czy zapis jest automatyczny?
::   WE:
::   WY:
::  OLD: \KAPA/kartprac.fml
::----------------------------------------------------------------------------------------------------------------------
'K'


\p_info_ttub_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Po redagowaniu pola P_INFO.TTUB.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_info_efld_opt','!pkd_dos_prdu')


\czy_stnp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Czy orzeczono stopień niepełnosprawności?
::   WE:
::   WY: 1/0
::  OLD: \czy_stnp/kartprac.fml
::----------------------------------------------------------------------------------------------------------------------
P_INFO.STNP<>null() & P_INFO.STNP().KOD<>'0'


\p_info_stnp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Po redagowaniu pola P_INFO.STNP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_info_efld_opt','!pkd_dos_prdu')


\p_info_xstnp_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Przed redagowaniem pól tabeli P_INFO związanych z niepełnosprawnością: ORZECZ, STNP_OD, STNP_DO, SZCZNIEP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('czy_stnp','!pkd_dos_prdu')


\p_info_bl_kc_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Przed redagowaniem pola P_INFO.BL_KC.
::   WE:
::   WY:
::  OLD: \be_bl_kc/kartprac.fml
::----------------------------------------------------------------------------------------------------------------------
2+P_INFO.TTUB().KOD='12' & P_INFO.TTUB().KOD<>'1240'


\p_info_szczkod_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Przed wyświetleniem pola P_INFO.SZCZKOD.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
P_INFO.OD~1<2010


\p_info_szczkod_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Po redagowaniu pola P_INFO.SZCZKOD.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_info_efld_opt','!pkd_dos_prdu')


\p_info_szczdt_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Przed redagowaniem pól tabeli P_INFO: SZCZOD, SZCZDO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
P_INFO.SZCZKOD<>null()


\p_info_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: Obsługa akcji "Dołącz" dla tabeli P_INFO.
::   WE:
::   WY:
::  OLD: \add_pi/kartprac.fml
::----------------------------------------------------------------------------------------------------------------------
P_INFO.blank();
exec('p_info_efld_opt','!pkd_dos_prdu','*',P_INFO,'RED');
{? P_INFO.edit("exec('p_info_ae','!pkd_dos_prdu')")
|| P_INFO.add();
   exec('upd_pi','osoba');
   exec('akt_nskl','osoba')
?}


\p_info_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: Obsługa akcji "Popraw" dla tabeli P_INFO.
::   WE:
::   WY:
::  OLD: \mod_pi/kartprac.fml
::----------------------------------------------------------------------------------------------------------------------
_url:=((2+P_INFO.TTUB().KOD)='12');
_mac:=(P_INFO.TTUB().KOD='1240');
_per:=P_INFO.PREM().KOD;
_od:=P_INFO.OD;

{!
|? exec('p_info_efld_opt','!pkd_dos_prdu','*',P_INFO,'RED');
   {? P_INFO.edit("exec('p_info_ae','!pkd_dos_prdu')")
   || {? P_INFO.ST='A' |
         {? _mac & P_INFO.TTUB().KOD<>'1240'
         || FUN.info(
               'Zapis został utworzony na podstawie nieobecności.\n'
               'Jedyny dopuszczalny dla tego zapisu kod to 1240.'@
            );
            0
         |? _url & ~_mac & P_INFO.TTUB().KOD='1240'
         || FUN.info(
               'Zapis utworzony na podstawie przebiegu zatrudnienia.\n'
               'Jedyne dopuszczalne kody to 1210, 1211, 1220 i 1230.'@
            );
            0
         |? _url & (2+P_INFO.TTUB().KOD)<>'12'
         || FUN.info(
               'Dla zapisów utworzonych na podstawie przebiegu zatrudnienia lub nieobecności\n'
               'dozwolone są tylko kody 12(..).'@
            );
            0
         |? ~_url & ~_mac & (2+P_INFO.TTUB().KOD)='12'
         || FUN.info('Niedozwolona zmiana tytułu ubezpieczenia.'@);
            0
         || 1
         ?}
      || P_INFO.SM:='P';
         P_INFO.put();
         exec('upd_pi','osoba');
         {? {? _per<>'0'
            || P_INFO.PREM().KOD='0'
            || _per<>P_INFO.PREM().KOD
            ?} |
            {? _per<>'0' || _od<>P_INFO.OD ?}
         || exec('akt_nskl','osoba')
         ?};
         0
      || 1
      ?}
   ?}
!}


\p_info_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: Obsługa akcji "Usuń" dla tabeli P_INFO.
::   WE:
::   WY:
::  OLD: \del_pi/kartprac.fml
::----------------------------------------------------------------------------------------------------------------------
{? (P_INFO.ST='A' & FUN.ask(
      'Zapisów utworzonych na podstawie przebiegu zatrudnienia lub nieobecności nie powinno się usuwać.\n'
      'Czy na pewno chcesz usunąć bieżący zapis?'@)
   ) | exec('del_ask','#table')
|| {? P_INFO.del() || exec('p_info_put_all','osoba') ?}
?}


\p_info_reb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Składki emerytalno-rentowe" w ramach menu Przerwy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_nskl','osoba')


\p_info_rfb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Składki na FP i FGŚP" w ramach menu Przerwy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('select4cp','kart_dod','FP_FGSP','PKD_DOS_PRDU','PKD_DOS_PPDU')


\p_info_lb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Legenda" tabeli P_INFO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','P_INFO#01')


\p_info_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Okienko - przed" tabeli P_INFO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
POLA_GRP.fld_fml('TXT_1','DISPLAY_FORMAT',"*")


\p_info_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Wyświetl - przed" tabeli P_INFO.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_info_efld_opt','!pkd_dos_prdu','*',P_INFO,'RED');
P_INFO.display()


\p_info_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie WER tabeli P_INFO.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::  OLD: \rekord_be/kartprac.fml
::----------------------------------------------------------------------------------------------------------------------
:: Akcje
{? _a
|| _przed:=spli_str(P_INFO.actions_grayed('WER'),':');
   _nea:=_przed[1];
   _ea:={? obj_len(_przed)>1 || _przed[2] || '' ?};
   {? cur_tab(0,0)=OSOBA | P_FILTER.F_ZATR().KOD<>'P'
   || {? _nea*'O(B)'=0
      || _nea+='O(B)'
      ?};
      {? _ea*'O'=0
      || _ea+='O'
      ?};
      P_INFO.actions_grayed('WER','%1:%2'[_nea,_ea])
   || P_INFO.actions_grayed('WER','%1:%2'[gsub(_nea,'O(B)',''),gsub(_ea,'O','')])
   ?}
?};
:: Status
POLA_GRP.TXT_1:=
   {? P_INFO.SM='N' || 'Oryginalny'@
   |? P_INFO.SM='P' || 'Poprawiony'@
   |? P_INFO.SM='A' || 'Automatyczny'@
   || ''
   ?};
{? P_INFO.ST='A'
|| Color.fnd_kol('P_INFO#01#01')
?}


\p_info_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Rekord - po" dla tabeli P_INFO.
::   WE:
::   WY:
::  OLD: \por_stnp/kartprac.fml
::  OLD: \spr_pi/kartprac.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_chk:=__CHK.record(P_INFO,,'OD'))<>''
|| return(_chk)
?};

_d0:=date(0,0,0);

{? (P_INFO.KC<>null() | P_INFO.DTUM<>_d0) & (_chk:=__CHK.record(P_INFO,1,'KC','DTUM'))<>''
|| FUN.info(
      'Obydwa pola sekcji "Fundusz Ochrony Zdrowia" muszą być podane lub muszą pozostać niewypełnione.\n'
      'Uzupełnij brakujące informacje lub usuń wprowadzone.'@
   );
   return(_chk)
?};

{? (_chk:=__CHK.record(P_INFO,,'TPID','TTUB','PREM','STNP'))<>''
|| return(_chk)

|? P_INFO.TPID().KOD='N' & P_INFO.OD>=date(2011,9,1)
|| FUN.info('Typ identyfikatora N-NIP od 1.09.2011r. nie może być używany w raportach do ZUS.'@);
   return('TPID')
?};

{? P_INFO.OD~1<2009 & (_chk:=__CHK.record(P_INFO,,'NZPR'))<>''
|| return(_chk)
?};

_czy_stnp:=exec('czy_stnp','!pkd_dos_prdu');
{? _czy_stnp
|| {? (_chk:=__CHK.record(P_INFO,,'STNP_OD'))<>''
   || return(_chk)
   ?};
   {? P_INFO.STNP_DO<>_d0 & P_INFO.STNP_DO<P_INFO.STNP_OD
   || FUN.info('Niepełnosprawność - "Data do" nie może być wcześniejsza niż "Data od".'@);
      return('STNP_DO')
   ?}
?};

{? P_INFO.OD~1<2010 & P_INFO.SZCZKOD<>null()
|| {? (_chk:=__CHK.record(P_INFO,,'SZCZOD'))<>''
   || return(_chk)

   |? P_INFO.SZCZDO<>_d0 & P_INFO.SZCZDO<P_INFO.SZCZOD
   || FUN.info('Praca w szczególnych warunkach - "Data do" nie może być wcześniejsza niż "Data od".'@);
      return('SZCZDO')

   ?}
?};

{? (P_INFO.BLWN<>null() | P_INFO.BLOKADA<>_d0) & (_chk:=__CHK.record(P_INFO,1,'BLWN','BLOKADA'))<>''
|| FUN.info(
      'Obydwa pola "Od dnia" i "Na wniosek" sekcji "Blokady obliczeń"\n'
      'muszą być podane lub muszą pozostać niewypełnione.\n'
      'Uzupełnij brakujące informacje lub usuń wprowadzone.'@
   );
   return(_chk)

|? P_INFO.BLWN<>null() & P_INFO.OD<>_d0 & P_INFO.BLOKADA<>_d0 & P_INFO.OD~1<>P_INFO.BLOKADA~1
|| FUN.info('Data blokady musi dotyczyć roku bieżącego zapisu (%1).'@ [$(P_INFO.OD~1)]);
   return('BLOKADA')
?};

{? (P_INFO.ROK_WSK | P_INFO.KW_WSK) & (_chk:=__CHK.record(P_INFO,,'ROK_WSK','KW_WSK'))<>''
|| FUN.info(
      'Obydwa pola sekcji "Zwiększenie wymiaru składek" muszą być podane lub muszą pozostać niewypełnione.\n'
      'Uzupełnij brakujące informacje lub usuń wprowadzone.'@
   );
   return(_chk)
?};

: Czyszczenie pól.

{? ~_czy_stnp
|| P_INFO.STNP_OD:=P_INFO.STNP_DO:=_d0;
   P_INFO.SZCZNIEP:='N';
   P_INFO.ORZECZ:=''
?};

{? ~(P_INFO.OD~1<2010)
|| P_INFO.SZCZKOD:=null()
?};

{? P_INFO.SZCZKOD=null()
|| P_INFO.SZCZOD:=P_INFO.SZCZDO:=_d0
?};

{? ~exec('p_info_bl_kc_be','!pkd_dos_prdu')
|| P_INFO.BL_KC:='N'
?};

''


\p_info_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Zakończ". Formuła wykonywana w dwóch środowiskach:
::          - po wywołaniu z listy zadań (okno wertowania tabeli P_INFO z doklejonym oknem redagowania tabeli OSOBA);
::          - w ramach obszaru roboczego (okno wertowania tabeli P_INFO jako składowa okna grupowego tabeli OSOBA).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(0,0)=P_INFO
|| sel_exit()

|| params_set(params_get());
   exec('pkd_run','pkd','ZAKOŃCZ')
?}


\p_nskl_rozpisz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rozpisanie na miesiące zapisu w tabeli P_NSKL.
::   WE:
::   WY:
::  OLD: \roz_nskl/kartprac.fml
::----------------------------------------------------------------------------------------------------------------------
{!
|? {? P_NSKL.DO<>date(0,0,0)
   || {? 6+P_NSKL.OD$0<>6+P_NSKL.DO$0
      || _do:=date(P_NSKL.OD~1,P_NSKL.OD~2,0);
         P_NSKL.DO==_do;
         {? P_NSKL.put()
         || P_NSKL.LS:='';
            P_NSKL.OD:=P_NSKL.DO+1;
            P_NSKL.DO:=_do;
            P_NSKL.add()
         ?}
      ?}
   ?}
!}


\p_nskl_writable
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła sprawdza, czy bieżący zapis w tabeli P_NSKL może być modyfikowany (poprawiany, usunięty).
::   WE:
::   WY:
::  OLD: \vp_ns/kartprac.fml
::  OLD: \usun_pskl/kartprac.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
{? +P_NSKL.LS
|| {? P_NSKL.LS<>VAR.NAZWALIS
   || FUN.info('Wybierz listę płac %1.'@ [P_NSKL.LS]);
      _ret:=0
   || O.cntx_psh();
      O.index('LISTYPZN');
      O.prefix(exec('ref_firma','ustawienia'));
      {? O.find_key(P_NSKL.LS,) & O.Z='T'
      || FUN.info('Otwórz listę płac %1.'@ [P_NSKL.LS]);
         _ret:=0
      ?};
      O.cntx_pop()
   ?}
?};
_ret


\p_nskl_da
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Dołącz - po" dla tabeli P_NSKL.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_nskl_rozpisz','!pkd_dos_prdu')


\p_nskl_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Popraw - przed" dla tabeli P_NSKL.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_nskl_writable','!pkd_dos_prdu')


\p_nskl_pa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Popraw - po" dla tabeli P_NSKL.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_nskl_rozpisz','!pkd_dos_prdu')


\p_nskl_ub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Usuń - przed" dla tabeli P_NSKL.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('p_nskl_writable','!pkd_dos_prdu')


\p_nskl_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ???
:: OPIS: Obsługa akcji "Rekord - po" dla tabeli P_NSKL.
::   WE:
::   WY:
::  OLD: \spr_nskl/kartprac.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_chk:=__CHK.record(P_NSKL,,'OD','TTUB'))<>''
|| return(_chk)
?};

{? P_NSKL.DO<>date(0,0,0) & P_NSKL.DO<P_NSKL.OD
|| FUN.info('"Data do" nie może być wcześniejsza niż "Data od".'@);
   return('DO')
|| _ref:={? -menu_txt()='popraw' || P_NSKL.ref() || null() ?};
   exec('p_nskl','!pkd_dos_prdu',_ref)
?}


\p_nskl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła badająca nakładanie się "bieżącego" okresu z pozostałymi danymi w tabeli P_NSKL.
::   WE: _a - Wskazanie bieżącego rekordu - dla akcji Popraw) lub null() - dla akcji Dołącz.
::            [domyślnie: null()]
::   WY:
::  OLD: \p_nskl/overlap.fml
::----------------------------------------------------------------------------------------------------------------------
exec('check','overlap',
   {? var_pres('_a')=type_of(null()) || _a || null() ?},P_NSKL,,,,,,'OD',exec('ref_firma','ustawienia'),OSOBA.ref()
)

:Sign Version 2.0 jowisz:1045 2022/06/30 14:22:51 94b705ba78a849a4d0de32f3b4f1422701be886ffda99c2b37399317efe4850a95c3a42feb5b91f15ee962fd663ae966ddb13bdc6372b3c1224572c3d168db0cbdbb429c63587626e441f139e99a1d3343f209da81b6e4301859d2707b2f2afe6b88aaf07f92a1cba7b63c6748376150f0512e248598ac25173adfffc1b76d4d
