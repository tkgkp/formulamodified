:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fks_rrk_dkot.fml
:: Utworzony: 13.11.2015
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Formuły czynności FKS_RRK_DKOT - Dekretacja not odsetkowych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dekretacja not odsetkowych - główna formuła czynności FKS_RRK_DKAE
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS
::# parses=exec('parses_ser_nags','rozrach_kor')
::# access=exec('upr_ser_nags','rozrach_kor')
::# kind=WE, symbol=SER_NAG, type=_SER_NAG, name=Wskazanie na notę odsetkową, required=T, keyref=T
::# kind=WY, symbol=DOK, type=_DOK, name=Wskazanie na dokument księgowy, required=T, keyref=T
_par:=params_get();
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
_akcja:=_mp.akcja();
SER_KOR.TYP:='N';
params_set(params_get());
SER_KOR.TYP:='N';
params_set(params_get());
{? _mp.pathTodo() | _mp.isAutoRun()
|| menu_txt(,'Dekretuj');
   {? var_press('SER_NAG',_in)>0
   || _ref:=BB.sqlint($_in.SER_NAG); _nam:=form(($_in.SER_NAG)-8);
      {? _ref<>0 & _nam<>''
      || SER_NAG.cntx_psh(); SER_NAG.prefix();
         {? SER_NAG.seek(_ref,_nam)
         || {? SER_NAG.T<>SER_KOR.TYP
            || FUN.info('Wybrany dokument nie jest notą odsetkową.'@); _mp.error()
            |? exec('sprumorz','!fks_rrk_dkot',1)
            || _out.DOK:=null;
               _mp.save(,_out);
               _mp.done()
            || SER_NAGS.cntx_psh(); SER_NAGS.index('SERNAGS1'); SER_NAGS.prefix(REF.FIRMA,SER_NAG.ref());
               {? SER_NAGS.first()
               || {? SER_NAGS.SER_NAG().ST_DEK='N'
                  || params_exec('ksnot','!fks_rrk_dkot',1)
                  || FUN.info('Nota jest zadekretowana wcześniej.'@); _mp.error()
                  ?}
               || FUN.info('Nie znaleziono noty odsetkowej.'@); _mp.error()
               ?};
               SER_NAGS.cntx_pop()
            ?}
         || {? ~_mp.isAutoRun()
            || FUN.info('Nie znaleziono noty odsetkowej.'@)
            ?};
            _out.DOK:=null;
            _mp.save(,_out);
            _mp.done()
         ?};
         SER_NAG.cntx_pop()
      || {? ~_mp.isAutoRun()
         || FUN.info('Nie znaleziono noty odsetkowej.'@)
         ?};
         _out.DOK:=null;
         _mp.save(,_out);
         _mp.done()
      ?}
   || {? ~_mp.isAutoRun()
      || FUN.info('Nie znaleziono noty odsetkowej.'@)
      ?};
      _out.DOK:=null;
      _mp.save(,_out);
      _mp.done()
   ?}
|? _akcja='Dekretuj'
|| menu_txt(,'Dekretuj');
   _mp.trigRef('SER_NAG');
   params_exec('dekret_noty1','!fks_rrk_dkot')
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formuła na opis czynności na liście ToDo
::----------------------------------------------------------------------------------------------------------------------
_desc:='Zadekretuj notę odsetkową'@@;
_mp:=params_get().mp;
_we:=_mp.load(exec('kind_in','#b_port'));
{? var_pres('SER_NAG',_we)
|| _ref:=BB.sqlint($_we.SER_NAG); _nam:=form(($_we.SER_NAG)-8);
   {? _ref<>0 & _nam<>''
   || SER_NAG.cntx_psh(); SER_NAG.use(_nam); SER_NAG.prefix();
      KH.cntx_psh(); KH.prefix();
      {? SER_NAG.seek(_ref,_nam)
      || _desc:='Zadekretuj notę odsetkową dla kontrahenta: %1 z dnia: %2'@@[SER_NAG.KH().SKR,$SER_NAG.DATA]
      ?};
      SER_NAG.cntx_pop(); KH.cntx_pop()
   ?}
?};
_desc


\ksnot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [?????]
:: OPIS: Dekretacja not odsetkowych
::   WE: _a - zadeklarowane - uruchomienie z TODO
::  OLD: \ksnot/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_okr_zam_con','konsolidacja',1)
|| return(0)
?};
wal_nar:=0;
AN.index('WALSYM'); AN.prefix(FINFO.NAROD);
SER_KOR.KONTO:=exec('nod','%fks_vat');
REJ.prefix(); DOK_REJ.prefix;
{? _
|| exec('okno_dok_nota','rozrach_kor')
|| DOK.win_edit('KSKORSER')
?};
SER_KOR.TP:={? FINFO.OKRROZ || FINFO.OKRROZ || 14 ?};
DOK.REJ:=null;  DOK.DOK_REJ:=null; DOK.NK:=SER_NAG.ID; DOK.TR:='NOTA ODSETKOWA';
DOK.BANK:=DOK.TKRS:=null; DOK.TYPKRS:=''; SER_KOR.KONTO1:=''; SER_KOR.TYP_KON:=1;
SER_NAG.cntx_psh(); SER_NAG.prefix(REF.FIRMA);
SER_NAGS.SER_NAG();
ind_spoz:=SER_POZ.ndx_tmp('',1,'REF','FIRMA',0,'UMORZNOT',,0,'REF',,0,'WAL','KOD',0,'ODD','OD',0,'DOK',,0,'KON',,0);
{? _
|| pyt:=1
|| pyt:=FUN.choice('Zadekretować noty?'@,,'Bieżącą'@,'Wszystkie z dnia %1'@[form(SER_NAG.DATA)])
?};
_dalej:=1;
{? ~exec('dat_not','dok_fks',SER_NAG.DATA)
|| FUN.info('Data wystawienia not musi być z bieżącego roku bilansowego.'@); _dalej:=0
?};
{? _dalej
|| SER_KOR.DTW:={? SSTALE.AO().POCZ<>date(0,0,0)
                || {? SER_NAG.DATA>=OKRO_F.POCZ & SER_NAG.DATA<=OKRO_F.KON
                   || SER_NAG.DATA
                   || OKRO_F.KON
                   ?}
                || date(0,0,0)
                ?};
   {? pyt=1
   || {? SER_NAG.ST_DEK='T'
      || FUN.info('Nota jest już zadekretowana.'@); _dalej:=0
      |? SER_NAG.ST_AKC<>'T'
      || FUN.info('Nota nie jest zaakceptowana.'@); _dalej:=0
      || _dalej:=~exec('sprumorz','!fks_rrk_dkot',1)
      ?};
      {? _dalej
      || {? SER_NAG.r_lock(1,1)
         || REJ.cntx_psh();
            REJ.win_dict('SLO1'+{? OPERATOR.DEPT | SER_NAG.ODD<>null || '' || '_ODD' ?});
            {? SER_NAG.ODD<>null || SSTALE.AR(); SER_NAG.ODD(); POMOC.AKC:='O' || POMOC.AKC:='' ?};
            exec('gr_bufor','dok_fks'); DOK.DZ:=null;
            {? DOK.edit("exec('spr_not','!fks_rrk_dkot',SER_KOR.DTW)")
            || {? exec('kur_wal','!fks_rrk_dkot',0)
               || DOK.DTW:=SER_KOR.DTW;
                  {? SER_KOR.TYP_KON=2 || exec('tmpdek','!fks_rrk_dkot') ?};
                  {? _
                  || params_exec('dekret_noty1','!fks_rrk_dkot')
                  || exec('dekret_noty','!fks_rrk_dkot')
                  ?};
                  {? SER_KOR.TYP_KON=2 || exec('tmpdekd','!fks_rrk_dkot') ?}
               ?};
               exec('del_kur','!fks_rrk_dkot')
            ?};
            SER_NAG.r_unlock();
            REJ.cntx_pop();
            VAR_DEL.delete('pamietaj')
         || exec('blok_err','rozrach_kor')
         ?}
      ?}
   |? pyt=2
   || SER_NAGS.cntx_psh;
      not_ods:=0; num_rej:=0;
      {? ROZRACH.KONTR=null
      || SER_NAGS.index('SER_NAG');
         SER_NAGS.prefix(REF.FIRMA,OPERATOR.DEPT().OD,SER_KOR.TYP,SER_NAG.DATA)
      || SER_NAGS.index('TYPKH');
         SER_NAGS.prefix(REF.FIRMA,OPERATOR.DEPT().OD,SER_KOR.TYP,ROZRACH.KONTR().KOD,ROZRACH.KONTR().KOD,SER_NAG.DATA)
      ?};
      _odp:=1;
      _odd_f:=SER_NAGS.SER_NAG().ODD; _odd_ok:=1;
      {? SER_NAGS.first
      || {! |?
            SER_NAGS.SER_NAG();
            {? _odd_ok=1 & (SER_NAG.ODD=null | SER_NAG.ODD<>_odd_f) || _odd_ok:=0 ?};
            {? SER_NAG.ID<>'' & ~exec('sprumorz','!fks_rrk_dkot',0)
            || _odp:=0
            ?};
            SER_NAGS.next()
         !}
      ?};
      REJ.cntx_psh();
      REJ.win_dict('SLO1'+{? OPERATOR.DEPT | _odd_ok || '' || '_ODD' ?});
      {? _odd_ok || SSTALE.AR(); SER_NAG.ODD(); POMOC.AKC:='O' || POMOC.AKC:='' ?};
      {? _odp=0
      || exec('gr_bufor','dok_fks'); DOK.DZ:=null;
         {? DOK.edit("exec('spr_not','!fks_rrk_dkot',SER_KOR.DTW)")
         || ile_zabl:=ile_nakc:=ile_dekr:=ile_ok:=il_bod:=il_um:=0;
            DOK.DTW:=SER_KOR.DTW;
            {? exec('kur_wal','!fks_rrk_dkot',1)
            || {? SER_KOR.TYP_KON=2 || exec('tmpdek','!fks_rrk_dkot') ?};
               exec('ksnot2','!fks_rrk_dkot');
               {? SER_KOR.TYP_KON=2 || exec('tmpdekd','!fks_rrk_dkot') ?}
            ?};
            exec('del_kur','!fks_rrk_dkot');
            FUN.info(form('Liczba zadekretowanych dokumentów: ',48)+$ile_ok+'\n\n'+
                     form('Liczba niezadekretowanych dokumentów z powodu: ',48)+'\n'+
                     form('używania ich przez innych użytkowników systemu: ',48)+$ile_zabl+'\n'+
                     form('braku akceptacji: ',48)+$ile_nakc+'\n'+
                     form('wcześniejszej ich dekretacji: ',48)+$ile_dekr+'\n'+
                     form('braku pozycji w jednostce księgowej '+DOK.REJ().ODD().OD+': ',48)+$il_bod+'\n'+
                     form('wcześniejszego ich umorzenia: ',48)+$il_um);
            VAR_DEL.delete('ile_zabl','ile_nakc','ile_dekr','ile_ok','il_bod','il_um')
         ?};
         VAR_DEL.delete('pamietaj')
      || FUN.info('Nie ma not do zadekretowania na podaną datę.\n'+'(%1)\n'
                  'Brak not na podaną datę lub noty\nnie są zaakceptowane\n'
                  'lub wszystkie pozycje not są umorzone.'@[$SER_NAG.DATA])
      ?};
      REJ.cntx_pop(); SER_NAGS.cntx_pop();
      VAR_DEL.delete('not_ods','num_rej')
   ?}
?};
SER_NAG.cntx_pop();
SER_POZ.ndx_drop(); VAR_DEL.delete('wal_nar','pyt','ind_spoz')


\dekret_noty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dekretacja noty
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_RRK_DKOT';
_params.AKCJA:='Dekretuj';
_params.UIDREF:=SER_NAG.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
_params.PROC_START:='N';
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'SER_NAG',SER_NAG.ref());
exec('mp_run','#b__box',_params)


\dekret_noty1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dekret jednej noty
::----------------------------------------------------------------------------------------------------------------------
_args:=params_get();
_mp:=_args.mp;
exec('not_dok','!fks_rrk_dkot',DOK.DTW,SER_NAG.ID);
exec('pop_poz','dok_fks','DOK');
exec('not_poz','!fks_rrk_dkot');
exec('ser_nag','!fks_rrk_dkot');
_wy:=_args.out;
_wy.DOK:=DOK.ref();
_mp.save(,_wy);
{? SER_NAG.get() & SER_NAG.ST_DEK='T' || _mp.done() ?}


\sprumorz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Sprawdzenie, czy cala nota nie jest umorzona
::   WE: _a - (1/0) - czy pokazywac komunikaty o bledach
::   WY: (1/0) - czy cala nota umorzona
::  OLD: \sprumorz/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
SER_POZ.cntx_psh();
SER_POZ.index('SER_POZU'); SER_POZ.prefix(REF.FIRMA,SER_NAG.ref(),0);
_zwrot:=~SER_POZ.first();
SER_POZ.cntx_pop();
{? _zwrot
|| {? _a || FUN.info('Wszystkie pozycje noty są umorzone.'@) ?}
?};
_zwrot


\spr_not
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [?????]
:: OPIS: Sprawdzenie parametrów dekretacji noty
::   WE: _a - data wystawienia not (noty)
::  OLD: \spr_not/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
SER_NAG.cntx_psh(); SER_NAG.prefix(REF.FIRMA); SER_NAGS.SER_NAG();
REJ.cntx_psh(); REJ.prefix();
ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
{? _zwrot:=chk_rec('REJ',{?DOK.REJ().CZY_DZ='T'||'DZ'||''?},'DOK_REJ','TR','TP','KONTO')=''
|| {? ~exec('po_dtd','dok_fks',_a)
   || _zwrot:=0
   |? SSTALE.AO().ZAM='T'
   || FUN.info('Aktualny okres obrachunkowy jest zamknięty.\nBrak możliwości zadekretowania dokumentu.'@); _zwrot:=0
   |? exec('is_okr_blck','!zws_par_aokr',SSTALE.AO,OPERATOR.USER)
   || _zwrot:=0
   |? exec('dokrejn','dok_fks')
   || FUN.info('W wybranym rejestrze nie ma takiego typu dokumentu.\n Zmień rejestr lub typ dokumentu.'@); _zwrot:=0
   |? exec('dokrejn1','dok_fks')
   || FUN.info('Typ dokumentu musi być prosty.\nZmień rejestr lub typ dokumentu.'@); _zwrot:=0
   |? pyt=1 & SER_NAG.ODD=null & ~exec('czyodpoz','!fks_rrk_dkot')
   || FUN.info('Dany dokument nie ma pozycji w jednostce księgowej %1.'@[DOK.REJ().ODD().OD]); _zwrot:=0
   |? POMOC.AKC='' & exec('dokrejn2','!fks_rrk_dkot')
   || FUN.info('Wybrany rodzaj dokumentu nie pozwala na wprowadzanie pozycji\n'
          'z różnymi jednostkami księgowymi.'@); _zwrot:=0
   |? SER_KOR.TYP_KON=2 & |SER_KOR.KONTO1=''
   || FUN.info('Nie wprowadzono maski konta po stronie Winien.'@); _zwrot:=0
   |? exec('akc_kont','edkonto',SER_KOR.KONTO)
   || FUN.info('Nieprawidłowe konto Ma.'@);
      _zwrot:=0
   |? SER_KOR.TYP_KON=2 & |SER_KOR.KONTO1<>''
   || KS.cntx_psh(); KS.index('SYM'); KS.prefix();
      ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
      KS.index('SYM'); KS.prefix(SSTALE.AR,SSTALE.AR().SYNT+SER_KOR.KONTO1);
      {? KS.first() & KS.ROZR='Z'
      || FUN.info('Na koncie %1 nie można wprowadzać pozycji rozrachunkowych.'@[KS.SYM]); _zwrot:=0
      || _zwrot:=1
      ?};
      KS.cntx_pop(); ROK_F.cntx_pop()
   || _zwrot:=1
   ?};
   {? _zwrot & (7+($SER_NAG.DATA))<>(7+($SER_KOR.DTW))
   || _zwrot:=FUN.ask('Zadekretować w innym okresie niż okres wystawienia not(-y)?'@)
   ?}
?};
SER_NAG.cntx_pop(); REJ.cntx_pop(); ODD.cntx_pop();
_zwrot


\czyodpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Sprawdza czy nota posiada nieumorzone pozycje w jednostce ksiegowej z wybranego rejestru
::   WY: 1 - ma, 0 - nie ma
::  OLD: \czyodpoz/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0; _odd:=DOK.REJ().ODD().OD;
SER_POZ.cntx_psh();
SER_POZ.index('SER_POZU'); SER_POZ.prefix(REF.FIRMA,SER_NAG.ref(),0,_odd);
{? SER_POZ.first()
|| {! |?
      _zwrot:=(SER_POZ.ODD().OD=_odd);
      ~_zwrot & SER_POZ.next()
   !}
?};
SER_POZ.cntx_pop();
_zwrot


\dokrejn2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Sprawdza czy wybrany rodzaj dokumentu umozliwia rejestracje
::       pozycji z roznych jednostek księgowych
::   WY: 1/0 - pozwala/nie pozwala
::  OLD: \dokrejn2/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
DOK_REJ.cntx_psh;
_zwrot:={? -DOK.DOK_REJ().ODD_ROZR='t' || 0 || 1 ?};
DOK_REJ.cntx_pop;
_zwrot


\kur_wal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Stworzenie tabeli tymczasowej dla kursow walut
::   WE: _a=0 - jedna nota, 1 - wiele not na dzien
::  OLD: \kur_wal/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
SER_NAGS.cntx_psh(); SER_POZ.cntx_psh();
TMP_KUR:=tab_tmp(1,'KOD','STRING[3]','Kod waluty',
                   'TR','STRING[80]','Nazwa waluty',
                   'KURS','REAL','Kurs'
                );
ind_kur:=TMP_KUR.ndx_tmp('',1,'KOD',,0,'KOD',,0);
TMP_KUR.index(ind_kur); TMP_KUR.prefix();
_wer:=TMP_KUR.mk_sel('Kursy walut'@,,,'tmp_kur_wer');
TMP_KUR.win_fld(_wer,,'KOD',,,8,,1);
TMP_KUR.win_fld(_wer,,'TR',,,40,,1);
TMP_KUR.win_fld(_wer,,'KURS',,,10,6);
TMP_KUR.win_act(_wer,0,'Popraw',,,,,,1);
TMP_KUR.win_act(_wer,0,'Rekord',,,,,"exec('pop_kur','!fks_rrk_dkot')",1);
TMP_KUR.win_sel(_wer);
SER_NAG.cntx_psh();
{? _a=1
|| {? ROZRACH.KONTR=null
   || SER_NAGS.index('SER_NAG'); SER_NAGS.prefix(REF.FIRMA,OPERATOR.DEPT().OD,SER_KOR.TYP,SER_NAG.DATA)
   || SER_NAGS.index('TYPKH');   SER_NAGS.prefix(REF.FIRMA,OPERATOR.DEPT().OD,SER_KOR.TYP,ROZRACH.KONTR().KOD,ROZRACH.KONTR().KOD,SER_NAG.DATA)
   ?};
   _get:=SER_NAGS.first()
|| _get:=1
?};
{? _get
|| {! |?
      SER_NAGS.SER_NAG();
      {? SER_NAG.REJ=null & SER_NAG.ID<>''
      || {? SER_NAG.WAL<>null & SER_NAG.WAL<>FINFO.NAROD
         || {? ~TMP_KUR.find_key(SER_NAG.WAL().KOD,SER_NAG.WAL().KOD)
            || TMP_KUR.KOD:=SER_NAG.WAL().KOD; TMP_KUR.TR:=SER_NAG.WAL().TR;
               TMP_KUR.add()
            ?}
         |? SER_NAG.WAL=null
         || SER_POZ.index('SER_POZR'); SER_POZ.prefix(REF.FIRMA,SER_NAG.ref());
            {? SER_POZ.first()
            || {! |?
                {? ~TMP_KUR.find_key(SER_POZ.WAL().KOD,SER_POZ.WAL().KOD)
                || TMP_KUR.KOD:=SER_POZ.WAL().KOD; TMP_KUR.TR:=SER_POZ.WAL().TR;
                   TMP_KUR.add()
                ?};
                SER_POZ.next()
               !}
            ?}
         |? SER_NAG.WAL=FINFO.NAROD
         || wal_nar:=1
         ?}
      ?};
      _a=1 & SER_NAGS.next()
   !}
?};
SER_NAG.cntx_pop();
{? TMP_KUR.size()>0
|| {! |?
     {? DOK.BANK<>null & DOK.TKRS<>null & DOK.TYPKRS<>''
     || exec('podp_kur','!fks_rrk_dkot')
     ?};
     kurs_ok:=1; TMP_KUR.select();
     {? TMP_KUR.first()
     || {! |?
           {? TMP_KUR.KURS$6=0 || kurs_ok:=0 ?};
           kurs_ok=1 & TMP_KUR.next()
        !}
     ?};
     {? ~kurs_ok
     || _ask:=FUN.ask('Nie wprowadzono poprawnie wszystkich kursów. Poprawić kursy?'@);
        {? _ask=0 || kurs_ok:=2 ?}
     ?};
     ~kurs_ok
   !};
   _zwrot:={? kurs_ok=0 | kurs_ok=2 || 0 || 1 ?}
?};
SER_NAGS.cntx_pop(); SER_POZ.cntx_pop();
_zwrot


\podp_kur
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Podpowierdz kursu z tabeli KRS
::  OLD: \podp_kur/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.TKRS();
KRS.index('KRS_WAL'); KRS.prefix(TKRS.ref());
{? TMP_KUR.first()
|| {! |?
      _znalkur:=0;
      {? KRS.first()
      || {! |?
            {? TMP_KUR.KOD=KRS.WAL().KOD
            || _znalkur:=1;
               TMP_KUR.KURS:={? -DOK.TYPKRS='s'
                             || KRS.SP
                             |? -DOK.TYPKRS='k'
                             || KRS.KP
                             || KRS.SR
                             ?};
               TMP_KUR.put()
            ?};
            ~_znalkur & KRS.next()
         !}
      ?};
      TMP_KUR.next()
   !}
?}


\pop_kur
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Po poprawianiu kursow w tabeli tymczasowej
::  OLD: \pop_kur/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
{? TMP_KUR.KURS<=0
|| FUN.info('Wprowadź wartość większą od 0.'@); 0
|| TMP_KUR.KURS:=TMP_KUR.KURS$6; 1
?}


\del_kur
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Skasowanie tymczasowej tabeli dla kursow walut obcych
::  OLD: \del_kur/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TMP_KUR','ind_kur')


\tmpdek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Tworzy tabele tymczasowe przy dekretacji not i ustawia
::       zmiennych parametry konta bedacego maska (slownik i wartosc)
::  OLD: \tmpdek/kor_ser3.fml
::----------------------------------------------------------------------------------------------------------------------
TMP_DEK:=tab_tmp(1,'SPOZKON','STRING[35]','Konto z SER_POZ',
                   'KONTO','STRING[35]','Konto wyliczone z maski'
                 );
_indeks:=TMP_DEK.ndx_tmp('',1,'SPOZKON',,0,'SPOZKON',,0);
TMP_DEK.index(_indeks); TMP_DEK.prefix();
budmask:=obj_new(10); {! _i:=1..10 |! budmask[_i]:=obj_new(2) !};
{! _i:=1..10  |! budmask[_i][1]:=0; budmask[_i][2]:='' !};
{? |SER_KOR.KONTO1<>'' & SER_KOR.KONTO1*'?'<>0
|| KS.cntx_psh(); KS.index('SYM'); KS.prefix();
   ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
   KS.index('SYM'); KS.prefix(SSTALE.AR,SSTALE.AR().SYNT+SER_KOR.KONTO1);
   {? KS.first()
   || BUD.cntx_psh(); BUD.index('KS'); BUD.prefix(KS.ref());
      SLU.cntx_psh(); SLU.prefix();
      SLUAPPL.cntx_psh(); SLUAPPL.prefix();
      _konto:=ROK_F.SYNT-SER_KOR.KONTO1;
      {? ROK_F.SEP<>',' || _konto:=1-_konto ?};
      {? BUD.first()
      || _i:=1;
         {! |?
            _dl:=BUD.SLU().SLU().DL;
            budmask[_i][1]:=#BUD.SLU;
            budmask[_i][2]:=_dl+_konto;
            _konto:=_dl-_konto;
            {? ROK_F.SEP<>',' || _konto:=1-_konto ?};
            _i+=1; BUD.next()
         !}
      ?};
      BUD.cntx_pop(); SLU.cntx_pop(); SLUAPPL.cntx_pop()
   ?};
   ROK_F.cntx_pop(); KS.cntx_pop()
?}


\tmpdekd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Kasuje tabele tymczasowa TMP_DEK
::  OLD: \tmpdekd/kor_ser3.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TMP_DEK','budmask')


\not_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [?????]
:: OPIS: dodanie naglowka dokumentu (nota odsetkowa)
::   WE: _a - data wystawienia dokumentu
::       _b - symbol dokumentu
::  OLD: \not_dok/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
_dok_rej:=DOK.DOK_REJ;
_dok_b:=DOK.BANK;
_doktkr:=DOK.TKRS;
_dokttkrs:=DOK.TYPKRS;
_dokop:=DOK.TR;
_dok_dz:=DOK.DZ;
POMOC.V:=null;
DOK.blank(0);
DOK.DOK_REJ:=_dok_rej;
DOK.JPK_V_T:=exec('typ_dok','obiegi2');
DOK.prefix();
DOK.TR:=_dokop;
DOK.DR:=date();
DOK.ZAR:=exec('usr_zar','dok_fks');
DOK.NK:=DOK.SYM_ZEW:=_b;
DOK.WSK_XD:='N';
DOK.A:='N';
DOK.ZK:='N';
DOK.ZP:='N';
DOK.DTO:=DOK.DTW:=DOK.DOP:=_a;
REJ.cntx_psh(); REJ.prefix(); DOK.ODD:=DOK.REJ().ODD; REJ.cntx_pop();
DOK.DOKZRODL:='ser_nag'+$(#SER_NAG.ref);
DOK.BANK:=_dok_b;
DOK.TKRS:=_doktkr;
DOK.TYPKRS:=_dokttkrs;
DOK.DZ:=_dok_dz;
{! |?
   DOK.cntx_psh();
   DOK.index('REJ'); DOK.prefix(DOK.REJ);
   num_rej:={? DOK.last() || DOK.NR+1 || 1 ?};
   DOK.cntx_pop();
   DOK.NR:=num_rej;
   ~DOK.add(1)
!}


\not_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Dekretowanie pozycji noty
::  OLD: \not_poz/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
{? wal_nar || exec('not_poz1','!fks_rrk_dkot',FINFO.NAROD().KOD) ?};
{? TMP_KUR.first()
|| {! |?
      exec('not_poz1','!fks_rrk_dkot',TMP_KUR.KOD);
      TMP_KUR.next()
   !}
?}


\not_poz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Dekretowanie pozycji noty - dla jednej waluty
::   WE: _a - kod waluty
::  OLD: \not_poz1/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
SER_POZ.cntx_psh(); SER_POZ.index(ind_spoz);
SER_POZ.prefix(REF.FIRMA,0,SER_NAG.ref(),_a);
_sum:=_sum1:=0; _konto:=_oddzial:=''; _sumpln:=0; _jedn:=1;
{? _a<>FINFO.NAROD().KOD
|| SLO.cntx_psh();
   SLO.index('SL'); SLO.prefix();
   {? SLO.find_key(FINFO.SLWAL().SLU,_a) & SLO.KOD=_a
   || WAL.index('WAL_SYM'); WAL.prefix();
      {? WAL.find_key(SLO.KOD) & WAL.J<>0 || _jedn:=WAL.J ?}
   ?};
   SLO.cntx_pop()
?};
{? SER_POZ.first
|| {! |?
     _sum+=SER_POZ.ODS; _sum1+=SER_POZ.ODS;
     _konto:={? SER_KOR.TYP_KON=1 || SER_POZ.KON || exec('tmp_map','!fks_rrk_dkot',SER_POZ.KON) ?};
     _oddzial:=SER_POZ.ODD().OD;
     {? SER_POZ.next()
     || {? SER_POZ.KON<>_konto | SER_POZ.ODD().OD<>_oddzial
        || {? _a=FINFO.NAROD().KOD
           || exec('not_poz2','!fks_rrk_dkot',_konto,_a,_sum1,'Wn',SER_NAG.ID,
                   'NOD',SER_NAG.DATA,SER_NAG.DATA+SER_KOR.TP,,,_oddzial)
           || _sumpln+=((_sum1*TMP_KUR.KURS/_jedn)$2);
              exec('not_poz2','!fks_rrk_dkot',_konto,_a,0,'Wn',SER_NAG.ID,
                   'NOD',SER_NAG.DATA,SER_NAG.DATA+SER_KOR.TP,_sum1,TMP_KUR.KURS,_oddzial)
           ?}; _sum1:=0
        ?}; 1
     || {? _a=FINFO.NAROD().KOD
        || exec('not_poz2','!fks_rrk_dkot',_konto,_a,_sum1,'Wn',SER_NAG.ID,
                'NOD',SER_NAG.DATA,SER_NAG.DATA+SER_KOR.TP,,,_oddzial)
        || _sumpln+=((_sum1*TMP_KUR.KURS/_jedn)$2);
           exec('not_poz2','!fks_rrk_dkot',_konto,_a,0,'Wn',SER_NAG.ID,
                'NOD',SER_NAG.DATA,SER_NAG.DATA+SER_KOR.TP,_sum1,TMP_KUR.KURS,_oddzial)
        ?}; 0
     ?}
   !}
?};
_dl_s:=SSTALE.AR().SYNT;
{? _a<>FINFO.NAROD().KOD || _sum:=_sumpln ?};
KS.cntx_psh();
KS.index('SYM'); KS.prefix(ROK_F.ref(),_dl_s+SER_KOR.KONTO);
{? KS.first() & KS.SYM=(_dl_s+SER_KOR.KONTO)
|| {? KS.ROZR='R'
   || exec('not_poz2','!fks_rrk_dkot',SER_KOR.KONTO,FINFO.NAROD().KOD,_sum,'Ma',SER_NAG.ID,'NOD',SER_NAG.DATA,SER_NAG.DATA+SER_KOR.TP)
   || exec('not_poz2','!fks_rrk_dkot',SER_KOR.KONTO,FINFO.NAROD().KOD,_sum,'Ma','','',date(0,0,0),date(0,0,0))
   ?}
?};
KS.cntx_pop(); SER_POZ.cntx_pop(); ODD.cntx_pop()


\not_poz2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Dekretowanie pozycji noty - dodawanie rekordu w tabeli POZ
::   WE: _a - konto, _b - kod waluty, _c - kwota, _d - strona
::       _e - ident. rozrachunku, _f - typ identyfikatora
::       _g - data otwarcia, _h - termin platnosci
::       _i - kwota w walucie, _j - kurs (oba parametry opcja)
::       _k - jednostka księgowa dla rozrachunku (opcja)
::  OLD: \not_poz2/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
_dl_s:=SSTALE.AR().SYNT; _data_r:=date(0,0,0);
{? -DOK.DOK_REJ().CZY_ROZL='t'
|| KS.cntx_psh(); KS.index('SYM'); KS.prefix(ROK_F.ref(),_dl_s+_a);
   {? KS.first & KS.ROZR='R' || _data_r:=exec('dat_otw','dok_fks') ?};
   KS.cntx_pop()
?};
{? var_pres('_k')<=0 || _k:=DOK.ODD().OD ?};
{? _b=FINFO.NAROD().KOD
|| exec('poz_add','dekret_aut',_c,_d,_a,_e,_f,_g,_h,DOK.TR,,,,,_data_r,_k)
|| exec('poz_add','dekret_aut',_c,_d,_a,_e,_f,_g,_h,DOK.TR,_b,_i,_j,,_data_r,_k)
?}


\tmp_map
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Mapuje konto z pozycji noty wg maski wprowadzonej w generowaniu
::   WE: _a - konto z SER_POZ
::  OLD: \tmp_map/kor_ser3.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? |SER_KOR.KONTO1<>''
|| {? SER_KOR.KONTO1*'?'=0 | _a=(35*'?') | (|_a='')
   || _zwrot:=SER_KOR.KONTO1
   || {? TMP_DEK.find_key(_a,_a)
      || _zwrot:=TMP_DEK.KONTO
      || KS.cntx_psh(); KS.index('SYM'); KS.prefix();
         ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
         KS.index('SYM'); KS.prefix(SSTALE.AR,SSTALE.AR().SYNT+_a);
         {? KS.first()
         || kont_spr:=obj_new(10); {! _i:=1..10 |! kont_spr[_i]:=obj_new(2) !};
            {! _i:=1..10  |! kont_spr[_i][1]:=0; kont_spr[_i][2]:='' !};
            BUD.cntx_psh(); BUD.index('KS'); BUD.prefix(KS.ref());
            SLU.cntx_psh(); SLU.prefix();
            SLUAPPL.cntx_psh(); SLUAPPL.prefix();
            _konto:=ROK_F.SYNT-_a;
            {? ROK_F.SEP<>',' || _konto:=1-_konto ?};
            {? BUD.first()
            || _i:=1;
              {! |?
                 _dl:=BUD.SLU().SLU().DL;
                 kont_spr[_i][1]:=#BUD.SLU;
                 kont_spr[_i][2]:=_dl+_konto;
                 _konto:=_dl-_konto;
                 {? ROK_F.SEP<>',' || _konto:=1-_konto ?};
                 _i+=1; BUD.next()
              !}
            ?};
            BUD.cntx_pop(); SLU.cntx_pop(); SLUAPPL.cntx_pop();
            _kontdoc:=ROK_F.SYNT+SER_KOR.KONTO1;
            {! _i:=1..10  |!
              {? budmask[_i][1]<>0
              || {? ROK_F.SEP<>',' || _kontdoc:=_kontdoc+ROK_F.SEP ?};
                 {? budmask[_i][2]*'?'=0
                 || _kontdoc+=budmask[_i][2]
                 || _znal:=0;
                    {! _j:=1..10
                    |? _znal=0
                    |! {? budmask[_i][1]=kont_spr[_j][1] &
                          exec('maski','dok_fks',kont_spr[_j][2],budmask[_i][2],+budmask[_i][2])
                       || _kontdoc+=kont_spr[_j][2]; _znal:=1
                       ?}
                    !};
                    {? _znal=0 || _kontdoc+=budmask[_i][2] ?}
                 ?}
              ?}
            !};
            TMP_DEK.SPOZKON:=_a; TMP_DEK.KONTO:=_kontdoc; TMP_DEK.add();
            _zwrot:=_kontdoc;
            VAR_DEL.delete('kont_spr')
         || _zwrot:=SER_KOR.KONTO1
         ?};
         ROK_F.cntx_pop(); KS.cntx_pop()
      ?}
   ?}
|| _zwrot:=_a
?};
_zwrot


\ser_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [?????]
:: OPIS: Dekretacja not - odnotowanie na dokumencie
::  OLD: \ser_nag/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
SER_NAG.cntx_psh(); SER_NAG.prefix();
SER_NAG.REJ:=DOK.REJ;
SER_NAG.NREJ:=num_rej;
SER_NAG.DATDOK:=DOK.DTW;
SER_NAG.ST_DEK:='T';
SER_NAG.put();
SER_NAG.cntx_pop()


\ksnot2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [?????]
:: OPIS: Księgowanie wielu not odsetkowych
::  OLD: \ksnot2/kor_ser.fml
::----------------------------------------------------------------------------------------------------------------------
SER_NAGS.cntx_psh();
{? ROZRACH.KONTR=null
|| SER_NAGS.index('SER_NAG');
   SER_NAGS.prefix(REF.FIRMA,OPERATOR.DEPT().OD,SER_KOR.TYP,SER_NAG.DATA)
|| SER_NAGS.index('TYPKH');
   SER_NAGS.prefix(REF.FIRMA,OPERATOR.DEPT().OD,SER_KOR.TYP,ROZRACH.KONTR().KOD,ROZRACH.KONTR().KOD,SER_NAG.DATA)
?};
_dok:=0;
{? SER_NAGS.first()
|| {! |?
      SER_NAGS.SER_NAG();
      _czypoz:=exec('czyodpoz','!fks_rrk_dkot');
      {? SER_NAG.ID<>'' & SER_NAG.REJ=null & _czypoz
      || {? SER_NAG.r_lock(1,1)
         || exec('dekret_noty','!fks_rrk_dkot');
            SER_NAG.r_unlock();
            ile_ok+=1
         || ile_zabl+=1
         ?}
      || {? SER_NAG.ID='' || ile_nakc+=1
         |? SER_NAG.REJ<>null || ile_dekr+=1
         |? exec('sprumorz','!fks_rrk_dkot',0) || il_um+=1
         |? _czypoz=0 || il_bod+=1
         ?}
      ?};
      SER_NAGS.next()
   !}
?};
SER_NAGS.cntx_pop()


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [22.26]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego lub dokument jest zaakceptowany
::       zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
_wy:=_mp.load(exec('kind_out','#b_port'));
_keyRefs:=_mp.getRefs();
{? obj_len(_keyRefs)>0
|| {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];
      {? type_of(_kref)>0
      || {? ref_name(_kref)*'ser_nag'>0
         || _record:=exec('FindAndGet','#table',SER_NAG,_kref,,,null());
            {? _record=null()
            || _mp.done()
            ?}
         ?}
      ?}
   !}
?};
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:39 a7d41d1315f5a3649304a30dd99b355fcf9d2e3f5bce8917b0495d6f759ec2ed13b472bbe30a85195f5656c0c33150981878a2f6f58068b4959faa371164337b76c1653ea7f04fbe276e5525005073dcdc36f7aeb15a8cd798cacab8c917806e049a5a7c8762dd39ef7e367e0b65a34263a71cd42c5b6c0b31df1d923357bbcb
