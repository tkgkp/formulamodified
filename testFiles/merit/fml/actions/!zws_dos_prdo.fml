:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_dos_prdo.fml
:: Utworzony: 05.03.2015
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa czynności ZWS_DOS_PRDO - Rejestracja danych osobowych.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rejestracja danych osobowych - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::
:: Parametr wejściowy ON_ESC określa sposób działania akcji dodawania nowej osoby (ale nie dla mikroczynności),
:: przy braku dodania osoby.
:: Parametr może przyjmować wartości:
::    DONE     - Czynność zostanie zakończona, a parametr wyjściowy OSOBA przyjmie wartość null() [DOMYŚLNIE].
::    KEEP     - Czynność zostanie odłożona na listę zadań aby użytkownik mógł do niej wrócić. Oznacza to, że czynności
::               nie da się zakończyć bez wyboru osoby.
::    CANCEL   - Jeśli czynność jest pierwszą w procesie to po zakończeniu formuły głównej instancja czynności zostanie
::               usunięta. Jeśli czynność jest kolejną w procesie to otrzyma status oczekująca i pozostanie na liście
::               zadań - czyli tak jak dla KEEP.
::    ERROR    - Czynność jest kończona a proces zatrzymywany z ustawioną flagą błędu.
::
:: Parametr wejściowy PERSONEL określa, czy czynność jest elementem procesu personelowego (ewentualnie wprowadzone dane
:: osobowe będą wykorzystywane w obszarach związanych z personelem). Parametr może przyjmować wartości:
::    TAK - Proces z rodziny PERSONEL.
::    NIE - Proces spoza rodziny PERSONEL [DOMYŚLNIE].
::
::# kind=WE, symbol=ON_ESC, type=STRING, name=Sposób działania przy braku wyboru, required=N, fml_val="exec('on_esc','#bi_stat',{? _a=~~ || 'DONE' || _a ?})"
::# kind=WE, symbol=PERSONEL, type=STRING, name=Czynność personelowa (TAK/NIE), required=N, fml_val="exec('personel_val','!zws_dos_prdo',_a)"
::# kind=WE, symbol=EDOKUM, type=_EDOKUM, name=Wskazanie na dokument w obiegu, required=N, keyref=N
::
::# kind=WEW, symbol=OSOBA, type=_OSOBA, name=Wskazanie osoby, required=N
::
::# kind=WY, symbol=OSOBA, type=_OSOBA, name=Wskazanie osoby, required=N
::
:: Dla wywołań mikroczynności (Popraw, Usuń), czynność oczekuje prawidłowego wypełnienia pola context.OSOBA .
::

_par:=params_get();
_mp:=_par.mp;
_in:=_par.in;
_int:=_par.int;
_out:=_par.out;
_context:=_par.context;

_cfg:=obj_new('AKCJA');
_cfg.AKCJA:='';

params_set(
   'mp',_mp,
   'in',_in,
   'int',_int,
   'out',_out,
   'cfg',_cfg
);

__PERSONEL:=(_in.PERSONEL='TAK');

OSOBA.cntx_psh();
OSOBA.index('OSOBA');
OSOBA.clear();
OSOBA.win_sel('WYB');
OSOBA.win_edit('RED');
OSOBA.win_patt('WZO');

_akcja:=_mp.akcja();

{? _mp.isMicro()
|| {? _akcja=''
   || FUN.info('Zadanie zostało anulowane.'@)

   |? _akcja='DOŁĄCZ'
   || exec('osoba_dolacz','!zws_dos_prdo',0)

   |? type_of(_context)>100 & var_pres('OSOBA',_context)=type_of(null()) &
      _context.OSOBA<>null() & OSOBA.seek(_context.OSOBA)
   || _uidref:=OSOBA.uidref();
      _mp.keyRef(_uidref);
      {? _akcja='POPRAW'
      || exec('osoba_popraw','!zws_dos_prdo',0)
      |? _akcja='USUŃ'
      || exec('osoba_usun','!zws_dos_prdo')
      ?};
      _mp.delRef(_uidref)

   || FUN.info(
         'Wykonanie akcji [%1] nie jest możliwe.\n'
         'Czynność %2 uruchomiona bez kontekstu.'@
         [_akcja,_mp.buf_act.UID]
      )

   ?};
   _mp.cancel()

|| REF.OSOBA:=null();
   {? type_of(_int.OSOBA)=type_of(null()) & _int.OSOBA<>null() & OSOBA.seek(_int.OSOBA)
   || REF.OSOBA:=OSOBA.ref();
      {? _akcja='' | _akcja='POPRAW'
      || exec('osoba_popraw','!zws_dos_prdo',1)

      |? _akcja='USUŃ'
      || exec('osoba_usun','!zws_dos_prdo')
      ?}

   |? _akcja='' | _akcja='DOŁĄCZ'
   || exec('osoba_dolacz','!zws_dos_prdo',1);
      _int.OSOBA:=REF.OSOBA;
      _mp.save(_int)
   ?};

   _out.OSOBA:=REF.OSOBA;
   _mp.save(,_out);

   {? REF.OSOBA=null()
   || {? _in.ON_ESC='KEEP'
      || _mp.keep()
      |? _in.ON_ESC='CANCEL'
      || _mp.cancel()
      |? _in.ON_ESC='ERROR'
      || _mp.error('ON_ESC=ERROR')
      || _mp.done()
      ?}
   |? _cfg.AKCJA='ZAKOŃCZ'
   || _mp.done()
   || _mp.keyRef(OSOBA.uidref());
      _mp.keep()
   ?}

?};

OSOBA.cntx_pop();
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rejestracja danych osobowych - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_tab:=exec('desc','osoba',_mp,exec('kind_internal','#b_port'));
_in:=_mp.load(exec('kind_in','#b_port'));

{? _tab.ZAW_DANE<>'T' & var_pres('EDOKUM',_in)>0 & type_of(_in.EDOKUM)=type_of(null())
|| OSOBA.cntx_psh();
   OSOBA.prefix();
   _osoba:=exec('obj_new','#buf','OSOBA');
   exec('osoba_woz_abs','form_ob',_in.EDOKUM,_osoba);
   _osoba.set();
   _tab.ZAW_DANE:='T';
   _tab.NAZWISKO:=OSOBA.NAZWISKO;
   _tab.PIERWSZE:=OSOBA.PIERWSZE;
   _tab.OBCY:=OSOBA.OBCY;
   _tab.PASZPORT:=OSOBA.PASZPORT;
   _tab.PESEL:=OSOBA.PESEL;
   _tab.UR_DATA:=$OSOBA.UR_DATA;
   OSOBA.cntx_pop()
?};

{? _tab.ZAW_DANE='T'
|| {? _tab.OBCY='T'
   || 'Zarejestruj dane osobowe: %1 %2: Paszport - %3'@@[_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT]
   |? +_tab.PESEL
   || 'Zarejestruj dane osobowe: %1 %2: PESEL - %3'@@[_tab.NAZWISKO,_tab.PIERWSZE,_tab.PESEL]
   || 'Zarejestruj dane osobowe: %1 %2: Data urodzenia - %3'@@[_tab.NAZWISKO,_tab.PIERWSZE,_tab.UR_DATA]
   ?}
|| 'Zarejestruj dane osobowe'@@
?}


\wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła przygotowuje okno redagowania.
::   WE: _a [NUMBER] - Obsługa w procesie [1/0].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_we:=OSOBA.mk_edit('Dane osobowe'@,,'osoba_red',,,'html_maximized');
OSOBA.win_ewin(_we,OSOBA,'RED');
exec('zakoncz','#window',OSOBA,_we,_a,"params_get().cfg.AKCJA:='ZAKOŃCZ'; 'key:F2'",,
   exec('help_red_zakoncz','#window','PKD_A'),exec('text_red_zakoncz','#window','PKD_A'));
exec('ok_esc','#window',OSOBA,_we,_a,"params_get().cfg.AKCJA:='OK'; 'key:F2'",,,,
   exec('help_red_ok','#window','Z'),exec('text_red_ok','#window','Z'),exec('help_red_esc','#window','A'));
_we


\osoba_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2006]
:: OPIS: Obsługa akcji "Rekord przed" dla tabeli OSOBA.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::  OLD: \rekprzed/osoba.fml
::----------------------------------------------------------------------------------------------------------------------
EDIT_VAR.OS_ZDJ:={? OSOBA.ZDJECIE=null() || 'N' || 'T' ?};
exec('chk_upr','osoba');
{? _a=1 & (_cw:=cur_win(1,1))='WYB'
|| OSOBA.actions_grayed(_cw,{? exec('osoba_x_bd','osoba') || '' || 'W' ?})
?};
exec('rekprzed','color','OSOBA#02#')


\osoba_aw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2010]
:: OPIS: Obsługa akcji "Wyświetl - po".
::  OLD: \_OSOBA/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
_we:=exec('wnd','!zws_dos_prdo',0);
OSOBA.win_edit(_we);
exec('osoba_efld_opt','osoba','*',OSOBA,_we);
OSOBA.display()


\osoba_legenda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Legenda".
::   WE:
::   WY:
::  OLD: \leg_osoba/menu.fml
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','OSOBA#02')


\osoba_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Właściwa obsługa akcji "Dołącz".
::   WE: _a  [NUMBER]    - Obsługa w procesie [1/0].
::  OLD: \menu_ba/osoba.fml
::  OLD: \menu_aa/osoba.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
params_set(_par);
_mp:=_par.mp;
_in:=_par.in;
_out:=_par.out;

: Zachowaj aktualne formuły pól tabeli.
_buf:=exec('fld_fml_pkd','osoba',__PERSONEL,1);
_we:=exec('wnd','!zws_dos_prdo',_a);
OSOBA.win_edit(_we);

: Rozpocznij redagowanie/wyszukiwanie danych osobowych.
_add:=1;
REF.OSOBA:=null();
OSOBA.blank();
OSOBA.bl_file('ZDJECIE',1);
:: jeżeli mamy parametr wejściowy EDOKUM to na jego podstawie wstępnie wypełniamy pola tabeli OSOBA
:: wykorzystywane jest to w zatrudnieniu osoby po zaakceptowaniu wniosku w obiegu
{? var_pres('EDOKUM',_in)>0 & type_of(_in.EDOKUM)=type_of(null())
|| _osoba:=exec('obj_new','#buf','OSOBA');
   exec('osoba_woz_abs','form_ob',_in.EDOKUM,_osoba);
   _osoba.set()
?};
exec('osoba_efld_opt','osoba','*',OSOBA,_we);
{? OSOBA.edit(
   "  _chk:=exec('osoba_sprawdz','osoba');
      {? (type_of(_chk)=type_of('') & _chk<>'') | (type_of(_chk)=type_of(0) & _chk=0)
      || params_get().cfg.AKCJA:=''
      ?};
      _chk
   ")
|| {? REF.OSOBA=null()
   || {? OSOBA.add()
      || REF.OSOBA:=OSOBA.ref();
         _file:=OSOBA.bl_file('ZDJECIE');
         {? _file<>'' || OSOBA.bl_put('ZDJECIE',_file) ?};
         OSOBA.bl_file('ZDJECIE',1);
         OSOBA.IMEX:=#OSOBA.ref();
         OSOBA.put();
::       jeżeli mamy osobę z wniosku, to kopiujemy dodane załączniki
         {? var_pres('EDOKUM',_in)>0 & type_of(_in.EDOKUM)=type_of(null()) &
            exec('edokumZal_exist','portal_walidacja',_in.EDOKUM)
         || exec('edokumZal_copy','portal_walidacja',_in.EDOKUM,OSOBA.ref(),exec('_woz','portal_walidacja').name)
         ?}
      || OSOBA.bl_file('ZDJECIE',1)
      ?}
   || _file:=OSOBA.bl_file('ZDJECIE');
      {? _file<>'' || OSOBA.bl_put('ZDJECIE',_file) ?};
      OSOBA.put()
   ?}
|? _add
|| REF.OSOBA:=null()
?};
OSOBA.bl_file('ZDJECIE',1);

: Odtwórz pierwotne formuły pól tabeli.
exec('restore_fml_all','#field',OSOBA,_buf);
~~


\osoba_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Właściwa obsługa akcji "Popraw".
::   WE: _a [NUMBER] - Obsługa w procesie [1/0].
::   WY:
::  OLD: \menu_ba/osoba.fml
::  OLD: \menu_aa/osoba.fml
::----------------------------------------------------------------------------------------------------------------------
{? REF.OSOBA<>null()
|| _par:=params_get();
   params_set(_par);
   _in:=_par.in;

   _txt:=_sep:='';
   _ii:=0;
   KH.cntx_psh();
   KH.index('OSOBA');
   KH.prefix(REF.OSOBA);
   _loop:=KH.first();
   {!
   |? _loop
   |!
      _ii+=1;
      _txt+=_sep+exec('record','#to_string',KH.ref());
      _sep:=',\n';
      _loop:=KH.next()
   !};
   {? _ii=1
   || FUN.info('Osoba %1 jest powiązana z kontrahentem %2.'@[exec('record','#to_string',REF.OSOBA),_txt])
   |? _ii>1
   || FUN.info('Osoba %1 jest powiązana z kontrahentami:\n%2.'@[exec('record','#to_string',REF.OSOBA),_txt])
   ?};
   KH.cntx_pop();

   _we:=exec('wnd','!zws_dos_prdo',_a);
   OSOBA.win_edit(_we);

   OSOBA.bl_file('ZDJECIE',1);
   exec('osoba_efld_opt','osoba','*',OSOBA,_we);
   {? OSOBA.edit(
      "  _chk:=exec('osoba_sprawdz','osoba');
         {? (type_of(_chk)=type_of('') & _chk<>'') | (type_of(_chk)=type_of(0) & _chk=0)
         || params_get().cfg.AKCJA:=''
         ?};
         _chk
      ")
   || _file:=OSOBA.bl_file('ZDJECIE');
      {? _file<>'' || OSOBA.bl_put('ZDJECIE',_file) ?};
      {? OSOBA.put()
      || exec('desc_update','#b__box',OSOBA.uidref());
::       jeżeli mamy osobę z wniosku, to kopiujemy dodane załączniki (tylko jeżeli wcześniej nie zostały dodane
         {? var_pres('EDOKUM',_in)>0 & type_of(_in.EDOKUM)=type_of(null()) &
            exec('edokumZal_exist','portal_walidacja',_in.EDOKUM)
         || exec('edokumZal_copy','portal_walidacja',_in.EDOKUM,OSOBA.ref(),'Inne')
         ?}
      ?}
   ?};
   OSOBA.bl_file('ZDJECIE',1)
?}


\ext_conf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Dodatkowe potwierdzenie usunięcia danych osobowych.
::   WE:
::   WY: Wynik potwierdzenia:
::       1 - Dane mogą być usunięte.
::       0 - Dane nie mogą być usunięte.
::  OLD: \ext_conf/util.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=exec('slo_test','slo_slu','OSOBA','IMEX',OSOBA.IMEX)=0;

{? _ok
|| P.cntx_psh();
   P.index('OSOBA');
   P.prefix(OSOBA.ref(),exec('ref_firma','ustawienia'));
   {? P.first()
   || F_ZATR.cntx_psh();
      exec('__F_ZATR','object');
      _val:=__F_ZATR.P;
      {!
      |? __F_ZATR.mod(P.F_ZATR().KOD,'P');
::       Słownik SLO_OSOB jest uzupełniany w momencie "zatrudnienia" - zmiany formy współpracy na docelową. Tak więc
::       sprawdzanie "użycia" bieżącego rekordu tabeli P w tym słowniku ma sens tylko dla form docelowych.
         {? P.F_ZATR().DOCELOWA='T' & exec('slo_test','slo_slu','SLO_OSOB','ID',P.IP,1)
         || _ok:=0
         || P.next()
         ?}
      !};
      __F_ZATR.mod(_val,'P');
      F_ZATR.cntx_pop()
   ?};
   P.cntx_pop()
?};

{? ~_ok
|| exec('restrict','pracownik','OSOBA');
   return(0)
?};

_ret:=0;
_tab:=tab_tmp(1,
   'KEY1','STRING[255]','',
   'KEY2','STRING[255]','',
   'HELP','SYS_MEMO',
);
_tab.KEY1:=
   OSOBA.NAZWISKO+' '+OSOBA.PIERWSZE+' '+
   {? +OSOBA.PESEL || OSOBA.PESEL
   |? +OSOBA.NIP || OSOBA.NIP
   |? +OSOBA.PASZPORT || OSOBA.PASZPORT
   || $#OSOBA.ref()
   ?};
_tab.memo_set('%1\n%2\n%3\n%4'[
   'Usunięte będą wszystkie zapisy powiązane ze wskazaną osobą:'@,
   'zatrudnienie, nieobecności, listy płac, karty płacowe, '
   'umowy, rachunki i ich składniki, stałe pozycje umów, ...'@,
   'Operacja będzie wykonana po przepisaniu tekstu:'@,
   _tab.KEY1
],'HELP');
_we:=_tab.mk_edit('Weryfikacja usunięcia danych osobowych'@);
_tab.win_esep(_we,'Uwaga');
_tab.win_efld(_we,,'HELP',,,50,-5,1);
_tab.win_efld(_we,,'KEY2',,,50);
exec('ok_esc','#window',_tab,_we,,,,,,'Potwierdzenie usunięcia danych'@,'Usuń'@);
_tab.win_edit(_we);
{? _tab.edit()
|| _ret:=_tab.KEY1=_tab.KEY2;
   {? ~_ret
   ||  FUN.info('Operacja usunięcia danych nie będzie wykonana.\nPodany klucz jest niezgodny ze wzorcem.'@)
   ?}
?};
_ret


\osoba_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Właściwa obsługa akcji "Usuń".
::   WE:
::   WY:
::  OLD: \menu_ba/osoba.fml
::  OLD: \menu_aa/osoba.fml
::----------------------------------------------------------------------------------------------------------------------
{? REF.OSOBA<>null() & exec('del_conf','#table',OSOBA) & exec('ext_conf','!zws_dos_prdo')
|| _state:=no_msg(1);
   _ret:=OSOBA.del(1,1);
   {? ~_ret
   || exec('restrict','pracownik','OSOBA')
   ?};
   no_msg(_state);
   {? _ret
   || REF.OSOBA:=null()
   ?}
?}


\personel_val
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa wartości parametru PERSONEL.
::   WE: _a - Obecna wartość parametru lub ~~, jeżeli parametr nie był ustawiany.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_val:=_a='TAK';
_TAB:=tab_tmp(1,'PERSONEL','INTEGER','Personel');
_TAB.PERSONEL:=_val;
_we:=_TAB.mk_edit('Czynność personelowa'@,,'personel_par');
_TAB.win_esep(_we,'Wartość parametru'@);
_TAB.win_efld(_we,,'PERSONEL',,,,,,'Personel'@,,,'check-box',
   'check_label="'+'Tak, czynność jest elementem procesu personelowego'@+'"',"1","0");
_TAB.win_edit(_we);
exec('ok_esc','#window',_TAB,_we);
{? _TAB.edit()
|| _val:=_TAB.PERSONEL
?};
{? _val
|| 'TAK'
|| 'NIE'
?}


\slo_pop_osoba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Akcja 'Popraw' z poziomu okienek wertowania tabeli SLO
::  OLD: \slo_pop/wspol.fml
::  TAG: <SLOSLU>
::----------------------------------------------------------------------------------------------------------------------
US.win_dict('SEL_DIC');
_rek_pop:=_mod_pr:=_edycja:=0;
OSOBA.cntx_psh();
exec('win_edit_osoba','slo_slu');
($(RS.TAB+".index('"+RS.KOD+"')"))();
($(RS.TAB+".prefix()"))();
{? ($(RS.TAB+".find_key(exec('kod2id','slo_slu'))"))()
|| {? OSOBA.KALI='T'
   || _mod_pr:=1
   ?}
?};
{? _mod_pr | (~_mod_pr & FUN.ask('Zmiana będzie dotyczyła wszystkich słowników użytkownika.'@+'\n'+'Kontynuować?'@))
|| OSOBA.bl_file('ZDJECIE',1);
   {? _mod_pr | OSOBA.edit("__CHK.record(OSOBA,,'NAZWISKO','PIERWSZE')")
   || {? (_file:=OSOBA.bl_file('ZDJECIE'))<>''
      || OSOBA.bl_put('ZDJECIE', _file)
      ?};
      RS.cntx_psh();
      _rs_ndx:=RS.ndx_tmp(,0,'TAB',,);
      RS.index(_rs_ndx);
      do();
      _ok:=1;
      {? OSOBA.put()
      || _rek_pS1:=exec('po_pop_o','slo_slu','SLO_OSOB');
         _rek_pS2:=exec('po_pop_o','slo_slu','OS');
         _rek_pS3:=exec('pop_slo_o','slo_slu','OSOBA',1);
         _ok:=(_rek_pS1 & _rek_pS2 & _rek_pS3);
         _rek_pop:=_rek_pS1+_rek_pS2+_rek_pS3;
         _edycja:=1
      ?};
      {? ~_ok
      || undo()
      ?};
      end();
      RS.ndx_drop(_rs_ndx);
      RS.cntx_pop()
   ?};
   OSOBA.bl_file('ZDJECIE',1)
?};
{? _mod_pr
|| FUN.info(
      'Dana pozycja jest używana w obszarze kadrowo-płacowym.'@+
      '\n'+
      {? _rek_pop>2
      || 'Na podstawie tego systemu uaktualniono dane\nwe wszystkich słownikach użytkownika.'@
      || 'Modyfikacje zabronione.'@
      ?}
   )
?};
OSOBA.cntx_pop();
exec('tab_f_rfresh','slo_filtr',SLO);
1


\restrict
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [20.42]
:: OPIS: restrykcje do kasowania rekurencyjnego danych
::   WE: _a - akronim tabeli [STRING] ('P' lub 'OSOBA')
::  OLD: \restrict/osoba.fml
::----------------------------------------------------------------------------------------------------------------------
exec('restrict','pracownik',_a)

:Sign Version 2.0 jowisz:1045 2023/08/25 11:56:11 c86821ce158f5f3feb68b28ad7d81b518ae3af491eac5c2386ac695d3d4f469a10afeb2dcb7fd48716dfab8e9fb0cf3acce4d6b9a61d41f8266c7b4a02dccb96e7d35ce1f21cafacc14f990fdd9af6edccd3ec1248fe2c0b4f7ed3225bd8dad6291abc8c43d48e5967543b2f8521d934c5a8edc679f479af4726c14482daac1a
