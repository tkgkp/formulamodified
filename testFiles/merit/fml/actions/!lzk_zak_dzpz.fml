:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lzk_zak_dzpz.fml
:: Utworzony: 25.04.2016
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Rejestracja dokumentu zakupu na podstawie dokumentu przyjęcia
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ,LZK,LMG,TARD
::# kind=WE,   symbol=TYPYSP,    type=_TYPYSP,  name=Typ dokumentu zakupu, required=N, fml_val="exec('typysp','!lzk_zak_dzpz')"
::# kind=WE,   symbol=ND,        type=_ND,      name=Dokument magazynowy,  required=N, keyref=T
::# kind=WE,   symbol=ZD_REA,    type=STRING,   name=Klucz grupujący,      required=N
::# kind=WY,   symbol=FAKS,      type=_FAKS,    name=Dokument zakupu,      required=N
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

exec('init_zak','lzk');

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_area_lzk_zak:=_mp.pathArea('LZK_ZAK');
_area:=_area_lzk_zak;
_proc:=_mp.pathProc();
_todo:=_mp.pathTodo() | _mp.pathArea() & ~_area;
_grupa:=_mp.isGroup();

_nd:={? var_pres('ND',_in)=type_of(~~) || null() || _in.ND ?};
_zd_rea:={? var_pres('ZD_REA',_in)=type_of(~~) || '' || _in.ZD_REA ?};
_auto:=(_nd<>null() | _zd_rea<>'') & _mp.isAutoRun();
_autoakc:=exec('autoAkc','#b__box',_mp,200080,'LZK_ZAK_EZAK');

_context:=
   {? var_press('context',params_get())=type_of(~~)
   || exec('context_lsp_fak_dzdm','faktury_nag','D',_zd_rea)
   || params_get().context
   ?};

{? _todo
:: Ustawienie kontekstu wg instancji elementu w procesie
|| {? var_pres('FAKS',_out)=type_of(null()) & _out.FAKS
   || 1
   |? ~_mp.isMicro()
   || _akcja:='START_TODO'
   || _mp.error('Brak parametru wyjściowego FAKS.')
   ?}
?};

:: Sprawdzenie uprawnień
{? params_exec('permissions_chk','lzk','!lzk_zak_dzpz')=0 || return() ?};

:: Wyzwalacz, który po dodaniu nagłówka dokumentu:
:: - add: dodaje rekord kluczowy nagłówka dokumentu
::   del: usuwa rekord kluczowy nagłówka dokumentu
:: - add: zapisuje parametr wyjściowy FAKS = wskazanie na nagłówek korekty
::   del: zapisuje parametr wyjściowy FAKS = null
_mp.trigRef('FAKS',,1,,exec('kind_out','#b_port'),'FAKS');

{? _akcja='Fakturuj' | _akcja='Dołącz' | _akcja='Zamówienie'
   | _proc
   | _akcja='START_TODO'
   | _auto
:: Obsługa Dołącz - dołącz w oknie obszaru i start procesu z pulpitu
|| BEER.WYSTFAKS:=null;
   HELP.WMAG:=0;

:: Parametr 'akcja' wykorzystywany w formułach przycisków 'Pozycje', 'Zakończ'
   params_set('out',_out,'mp',_mp,'akcja',_akcja,'in',_in,'auto',_auto,'context',_context);
   _done:=0;
   {? _akcja='Zamówienie'
:: fakturowanie wg zamówienia w obszarze zamówień
   || _done:=exec('fakturuj_dokmag','faktury_wspolne',{? _zd_rea<>'' || _zd_rea || 'Zamówienie' ?},null(),1)
   |? _zd_rea<>''
:: fakturowanie wg klucza grupującego
   || _done:=exec('fakturuj_dokmag','faktury_wspolne',_zd_rea,null(),1)
   |? _nd
:: fakturowanie dokumentu magazynowego
   || _done:=exec('fakturuj_dokmag','faktury_wspolne','',_nd,1)
   |? _akcja='Dołącz' | _akcja='START_TODO' | _proc
:: dołączanie faktury z dokumentów magazynowych w obszarze zakupów
   || _done:=exec('fakturuj_dokmag','faktury_wspolne',_zd_rea,_nd,1)
   ?};
   {? _done<0
   || ''
   |? _done
:: nie ma nic do fakturowania
   ||
::    przypisanie _out.FAKS:=null() bo czynności z wymaganym parametrem wejściowym łączące się do tego
::    parmetru nie nawiną się w menadżerze procesu (menadżer przerywa działanie)
      _out.FAKS:=null();
      _mp.save(,_out);
      _mp.done()
:: fakturowano lub wycofano się z fakturowania
   ||
::    Podczytanie parametrów wyjściowych
      _outa:=_mp.load(exec('kind_out','#b_port'));
      {? var_pres('FAKS',_outa)<>type_of(~~) & _outa.FAKS
::    Dodano dokument
      ||
::       Ustawienie się na dodanym dokumencie w widoku obszaru
         params_exec('seek_dok','faktury_wspolne',_area_lzk_zak,_outa.FAKS)
::    Wycofanie czynności bo nie dodano dokumentu
      || _mp.cancel()
      ?}
   ?}

|? _akcja='Popraw'
   | _todo
|| {? var_pres('FAKS',_out)=type_of(null())
:: Uruchomione w procesie
   || FAKS.cntx_psh();
      FAKS.prefix();
      {? FAKS.seek(_out.FAKS)
      || exec('faks_win_edit_set','faktury_nag');

         params_set('out',_out,'mp',_mp,'akcja',_akcja);
         exec('fak_pop','faktury_nag');

         _mp.descTodo()
      ?};
      FAKS.cntx_pop()
   |? _mp.isMicro()
:: Uruchomione poza procesem
   || {? ~_todo
      || params_set('out',_out,'mp',_mp,'akcja',_akcja);
         exec('fak_pop','faktury_nag')
      |? _akcja='Zakończ_wer'
      || {? exec('faks_zakoncz','faktury_nag',,_autoakc) || _mp.done() ?}
      || _mp.cancel()
      ?}
   |? _todo
:: Uruchomione zadanie z listy todo i brak _out.FAKS wtedy zadanie wycofujemy
   || _mp.cancel()
   ?}

|? _akcja='Usuń'
|| {? var_pres('FAKS',_out)=type_of(null())
:: Uruchomione w procesie
   || _faks:=null();
      FAKS.cntx_psh();
      {? ~_area_lzk_zak || FAKS.prefix() ?};
      {? FAKS.seek(_out.FAKS)
      ||
         exec('usun_fak','faktury_nag',{? _grupa || 2 || 1 ?});

         {? ~FAKS.seek(_out.FAKS)
::       Wycofuję instancję jeśli nie znaleziono dokumentu
         || _mp.cancel()
         ?};
         _faks:=FAKS.ref()
      ?};
      FAKS.cntx_pop();
::    Ustawienie się na kolejnym dokumencie w widoku obszaru
      {? _area_lzk_zak || {? _faks || FAKS.seek(_faks) ?} ?}
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      exec('usun_fak','faktury_nag',{? _grupa || 2 || 1 ?});

      _mp.done()
   ?}

|? _akcja='Zakończ_wer' & _area_lzk_zak
|| {? exec('faks_zakoncz','faktury_nag',_grupa,_autoakc) || _mp.done() ?}

|| _mp.error('Nieobsługiwana ścieżka.')
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_out:=_mp.load(exec('kind_out','#b_port'));

{? var_pres('FAKS',_out)=type_of(null()) & _out.FAKS
|| 'Zakończ rejestrację dokumentu zakupu: %1'@@[exec('record','#to_string',_out.FAKS)]
|| _in:=_mp.load(exec('kind_in','#b_port'));
   {? var_pres('ZD_REA',_in)=type_of('') & _in.ZD_REA<>''
   || 'Zarejestruj dokument zakupu na podstawie: %1'@@[exec('zd_rea2desc','!lzk_zak_dzpz',_in.ZD_REA)]
   |? var_pres('ND',_in)=type_of(null()) & _in.ND
   || 'Zarejestruj dokument zakupu na podstawie: %1'@@[exec('record','#to_string',_in.ND)]
   || 'Zarejestruj dokument zakupu'@@
   ?}
?}


\permissions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na uprawnienia dla czynności
::   WE: params_get().in - parametry wejściowe czynności
::           params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::           params_get().mp - Menedżer Procesów
::   WY: 0 - użytkownik nie ma uprawnień do czynności
::       1 - użytkownik ma uprawnienia do czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_user:=params_get().user;
_mp:=params_get().mp;

_wyn:=1;
BEER.SZ:='Z';
:: Sprawdzenie uprawnień do typu dokumentu
{? _wyn & var_pres('TYPYSP',_in)=type_of(null()) & _in.TYPYSP
|| _typysp_t:=exec('FindAndGet','#table',TYPYSP,$_in.TYPYSP,,"TYPYSP.T",'');
   _wyn:=
      {? _typysp_t<>''
      || {? exec('FindInSet','#table','T2STS','UNIK',ST.STZ)<>null()
         || exec('FindInSet','#table','T2STS','UNIK',_in.TYPYSP,ST.STZ)<>null()
         || _where:=exec('tsp_where','typysp','Z',,,,_typysp_t);
            exec('tsp_upr','typysp',_where,,0,,1,,_user)<>null()
         ?}
      || 1
      ?}
?};

_wyn


\faks_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Faktura do dokumentów magazynowych - Dołącz
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
exec('faks_dolacz','faktury_nag','LZK_ZAK_DZPZ')


\typysp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na wartość parametru TYPYSP
::   WY: TYPYSP.ref()
::----------------------------------------------------------------------------------------------------------------------
BEER.SZ:='Z';
exec('tsp_fak','typysp','Z')


\faks_zamow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Faktura pozostała - Dołącz
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
:: wyznaczenie uidref identyfikującego instancję
_uidref:='';
ZD_RN.cntx_psh();
ZD_RN.index('ZAM');
ZD_RN.prefix(ZD_NAG.ref());
_zd_rea:='';
_zam_rns:='';
_loop:=ZD_RN.first();
{!
|? _loop
|!
   {? ZD_RN.FAKS='' & _zam_rns*($ZD_RN.ref())=0 || _zam_rns+=$ZD_RN.ref() ?};
   _loop:=ZD_RN.next()
!};
ZD_RN.cntx_pop();
{!
|? _zam_rn:=16+_zam_rns; _zd_rea='' & _zam_rn<>''
|! _zam_rns:=16-_zam_rns;
   _grp_key:=exec('FindAndGet','#table',ZD_RN,_zam_rn,,"ZD_RN.GRP_KEY",'');
   {? _grp_key<>''
   || B_KEYREF.cntx_psh();
      B_KEYREF.index('UID_REF');
      B_KEYREF.prefix('LZK_ZAK_DZPZ');
      ZD_RN.cntx_psh();
      ZD_RN.index('GRP_KEY');
      ZD_RN.prefix(_grp_key-1);
      _loop:=ZD_RN.first();
      {!
      |? _loop
      |!
         _uidref:=
            {? ZD_RN.ND<>'' & B_KEYREF.find_key(exec('FindAndGet','#table',ND,ZD_RN.ND,,"ND.uidref()",''))
            || B_KEYREF.KEY_REF
            || ''
            ?};
         {? _uidref<>'' || _zd_rea:=_grp_key ?};
         _loop:=_uidref='' & ZD_RN.next()
      !};
      ZD_RN.cntx_pop();
      B_KEYREF.cntx_pop()
   ?}
!};
:: uruchomienie czynności
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZAK_DZPZ';
{? _uidref<>'' || _params.UIDREF:=_uidref ?};
_params.AKCJA:='Zamówienie';
_params.PROC_START:='T';
_params.CONTEXT:=exec('context_lsp_fak_dzdm','faktury_nag');
_params.CONTEXT.REF:=ZD_NAG.ref();
exec('mp_run','#b__box',_params)


\zd_rea2desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: zwraca napis na podstawie czego ma zostać wystawiona faktura wg identyfikatora zaznaczenia
::   WE: _a - identyfikator zaznaczenia
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_zdn:=null();
ZD_NAG.cntx_psh();
ZD_RN.cntx_psh();
ZD_RN.index('GRP_KEY');
ZD_RN.prefix(_a-1);
{? ZD_RN.first()
|| _zdn:=ZD_RN.ZD_NAG;
   {!
   |? {? _zdn<>ZD_RN.ZD_NAG
      || _zdn:=null();
         0
      || ZD_RN.next()
      ?}
   !};
   _res:={? _zdn<>null() || exec('record','#to_string',_zdn) || 'realizacji kilku zamówień' ?}
?};
ZD_NAG.cntx_pop();
ZD_RN.cntx_pop();
_res


\display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Lista zadań TO-DO, podgląd dokumentu
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_out:=_mp.load(exec('kind_out','#b_port'));
exec('display','faktury_nag',_out.FAKS)

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:39 87d85f70a63b5a99e6527a7afba45f34a442a47a242bb73b9df8c86f5db67b29d473d1562efa06be3eed9033ef49402325ee82ed4965af73a620d8d45c40abafa9a4b931973d1c01ca314eb981cfb1321e76e2cb897c38367189d25a058637890ba8feb5e1c4c4f49b2d1480e3b23e18caebcf61e85479b0f420ffc2cd25cf5c
