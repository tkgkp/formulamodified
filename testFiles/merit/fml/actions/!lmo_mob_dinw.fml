:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lmo_mob_dinw.fml
:: Utworzony: 14.04.2016
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Czynność LMO_MOB_DINW - Operacja inwentaryzacji
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# properties=LOOP,SERVICE
::# permissions=ODDZ
::# kind=WE,  symbol=EANN,    type=_EANN,    name=Operacja mobilna,              required=N,   keyref=T
::# kind=WE,  symbol=GEN_OPE, type=STRING,   name=Generacja operacji,            required=N
::# kind=WE,  symbol=MG,      type=_MG,      name=Magazyn dla operacji,          required=N,   fml_val="exec('mg','!lmo_mob_dinw')"
::# kind=WE,  symbol=OKR,     type=NUMBER,   name=O ile przesunąć datę,          required=N
::# kind=WEW, symbol=INX,     type=_INX,     name=Arkusz pomocniczy,             required=N
::# kind=WY,  symbol=INX,     type=_INX,     name=Arkusz pomocniczy,             required=N
::# kind=WY,  symbol=INN,     type=_INN,     name=Arkusz spisowy,                required=N
::# kind=WY,  symbol=GEN_OPE, type=STRING,   name=Generacja operacji,            required=N
::# kind=WY,  symbol=IL_SRV,  type=NUMBER,   name=Ilość zatwierdzonych operacji, required=N
::# condition=Rejestracja inwentaryzacji, act_uid=LMG_MAG_DINW,   auto=T,  formula=_a.INN<>~~ & _a.INN<>null()
_mp:=params_get().mp;
_in:=params_get().in;
_out:=params_get().out;

exec('init','lmo');

_akcja:=_mp.akcja();
_auto:=_mp.isAutoRun();
_service:=_mp.isService();
_proces:=_mp.pathProc();
_area:=_mp.pathArea();

_mp.trigRef('INX',,1,,'INT','INX');

_oper:=var_pres('GEN_OPE',_in)=type_of('') & _in.GEN_OPE<>'' & _mp.loop()<>0;

_select:=1;

:: ewentualny wybór operacji
{? ~_service & ~_oper & ~(var_pres('EANN',_in)=type_of(null()) & _in.EANN) & ~_area
|| exec('openean','open_tab',ST.ODDZ+'__');
   {? exec('operacje','magazyn_mob','I',,,0)
   || _in.EANN:=EANN.ref();
      _mp.save('IN','EANN',EANN.ref())
   || _select:=0
   ?}
?};

{? ~_service & ~_oper & ~(var_pres('EANN',_in)=type_of(null()) & _in.EANN)
|| {? ~_select
   || _mp.cancel()
   || _mp.error('Brak wymaganego parametru EANN.')
   ?}
|? ~_service & ~_oper & exec('FindAndGet','#table',EANN,_in.EANN,,"TYP")<>'I'
|| _mp.error('Parametr EANN wskazuję na inną operację mobilną niż Inwentaryzacja.')
|? _service
|| {? var_pres('MG',_in)<>type_of(0) || _in.MG:=null() ?};
   {? var_pres('OKR',_in)<>type_of(0) | _in.OKR<0 || _in.OKR:=0 ?};
   _mp.save('IN',_in);
   EANN.cntx_psh();
   EANN.prefix();
   params_set('mp',_mp,'in',_in,'out',_out);
   exec('autoOper','!lmo_mob_dinw');
   EANN.cntx_pop()
|| {? var_pres('MG',_in)<>type_of(0) || _in.MG:=null() ?};
   {? var_pres('OKR',_in)<>type_of(0) | _in.OKR<0 || _in.OKR:=0 ?};
   _mp.save('IN',_in);
   _continue:=0;
   _gen_ope:='';
   _ctrl:=1;

   {? _mp.loop()=0
:: pierwsze wywołanie
   || EANN.cntx_psh();
      _jest:=EANN.seek(_in.EANN);
      {? ~_jest
      || _mp.error('Nie znaleziono operacji mobilnej.')
      |? (_wyp:=exec('ctrlEANN','magazyn_mob','I',0))<=0
      || _ctrl:=0;
         _mp.cancel()
      || _answer:=
         {? _akcja='Generuj_wg_ope'
            | _proces
            | _mp.pathTodo()
         || params_set('mp',_mp,'in',_in);
            _grp_key:=exec('realeann_inw','magazyn_mob',0);
            _internal:=_mp.load('INT');
            _continue:={? var_pres('INX',_internal)=type_of(null()) & _internal.INX || 1 || -1 ?};
            {? _continue=1
            || _gen_ope:=exec('FindAndGet','#table',INX,_internal.INX,,"GRP_KEY",'')
            ?};
            obj_del(_internal)
         || _mp.error('Nieobsługiwana ścieżka.')
         ?}
      ?};
      EANN.cntx_pop()
:: wywołanie w pętli
   || _continue:=var_pres('GEN_OPE',_in)=type_of('') & _in.GEN_OPE<>'';
      {? _continue || _gen_ope:=_in.GEN_OPE ?}
   ?};

   {? _continue=-1
:: Wycofano się z wystawiania operacji
   || 1
   |? _continue=1 & _gen_ope<>''
:: Zapisanie parametru wyjściowego EANN, wykluczenie kolejnej realizacji z pętli, zakończenie czynności
   || INX.cntx_psh();
      _internal:=_mp.load('INT');
      {? var_pres('INX',_internal)=type_of(null()) & _internal.INX || INX.use(ref_name(_internal.INX)) ?};
      obj_del(_internal);
      INX.prefix();
      _grp_key:=_gen_ope-1;
      _grp_key_on:=_grp_key+'1';
      _grp_key_off:=_grp_key+'0';
      {? _grp_key<>''
      || INX.index('GRP_KEY');
         INX.prefix(_grp_key_on);
         {? INX.first()
         || INX.cntx_psh();
            INX.prefix();
            INX.GRP_KEY:=_grp_key_off;
            do();
            INX.put();
            _mp.save(exec('kind_out','#b_port'),'INX',INX.ref());
            _mp.save(exec('kind_out','#b_port'),'INN',INX.INN);
            _mp.save(exec('kind_out','#b_port'),'GEN_OPE',_gen_ope);
            end();
            INX.cntx_pop();
            {? INX.first()
::          kontynuacja pętli
            || _mp.loop_continue()
            ?}
         ?}
      ?};
      INX.cntx_pop();
      _mp.done()
   |? _ctrl
   || _mp.error('Brak oczekiwanego parametru GEN_OPE.')
   ?}
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));
_out:=_mp.load(exec('kind_in','#b_port'));

_wgr:={? var_pres('EANN',_in)<>type_of(~~) & _in.EANN
      || _in.EANN
      || null()
      ?};

{? _wgr<>null()
|| 'Zarejestruj pomocniczy arkusz spisu z natury na podstawie operacji mobilnej %1'@@[exec('record','#to_string',_wgr)]
|| 'Zarejestruj pomocniczy arkusz spisu z natury'@@
?}


\mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na wartość parametru TYPYDOK
::   WY: TYPYDOK.ref()
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null();
MG.cntx_psh();
MG.index('SL_ALL');
MG.prefix('T');
{? MG.first()
|| MG.win_sel('SLO');
   {? MG.select() || _wyn:=MG.ref() ?}
?};
MG.cntx_pop();
_wyn


\autoOper
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Automatycznie realizuje operacje
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=params_get().in;
_out:=params_get().out;

_il_srv:=0;

_eann:=sql('select '+
           '  EANN.REFERENCE REF, '+
           '  EANN.DATA DATA '+
           'from @EANN '+
           ' where EANN.REFERENCE like '+'''eann_\\_\\_%'' escape ''\\'''+
           '   and EANN.AKT=''T'''+
           '   and EANN.TYP=''I'''+
           '   and EANN.STAN=''Z''');

_eann.clear();
{? _eann.first()
|| {!
   |? _oddz:=1+(4-_eann.REF);
      _rok:=form((_eann.DATA~1)-2000,-2,0,'99');
      exec('open','open_tab',_oddz,_rok);
      {? (EANN.clear(); EANN.seek(_eann.REF))
      || _mag:=exec('one_mag','magazyn_mob',EANN.ref());
         _wyb:=0;
         {? _mag<>null()
         || EANN.MG:=_mag;
            EANN.put(1);
            _wyb:=exec('wyb_inn','magazyn_inw',_mag,1)
         ?};
         {? _wyb & (_wyp:=exec('ctrlEANN','magazyn_mob','I',1))>0
         || _il_srv+=params_exec('autooper','magazyn_mob',EANN.ref(),_wyp,,0)
         ?}
      ?};
      _eann.next()
   !}
?};
obj_del(_eann);

_out.IL_SRV:=_il_srv;
_mp.save(,_out);
_mp.done();
~~

:Sign Version 2.0 jowisz:1048 2020/10/16 15:19:14 ba25c6527358bd74e3937ca065986efe886ea3711668e9b9d89de9089411cec2977199716e11e257d2c6d7ad8230e510349b398c5a0e6b0f16215c75bcc2311fff39e874db05ecdfe63db24ee0df8a1a63c01652144a651cfb9f7169ed4ff58029d7e363e63e3886998a3584bbab0877984e675a482ecbc72e1ca5a32cd4a8c4
