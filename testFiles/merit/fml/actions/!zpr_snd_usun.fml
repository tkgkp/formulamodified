:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: !zpr_snd_usuń.fml
:: Utworzony: 08.01.2018
:: Autor: [GZ]
::======================================================================================================================
:: Zawartosc: Formuły czynnosci ZPR_SND_USUN
::            Usunięcie poczty
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła główna czynności usunięcia poczty (ZPR_SND_USUN)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::       context - [obj_new] obiekt służący do przekazywania kontekstu wywołania czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

:: PARAMETRY WE:
::# kind=WE, symbol=DNI, type=NUMBER, name=Usunięte będą wiadomości starsze niż podana ilość dni, required=N, fml_val="exec('edit_number','#edit',30,'Usunięte będą wiadomości starsze niż podana liczba dni',0,0)"
::# kind=WE, symbol=ILOSC, type=NUMBER, name=Ile ostatnich logów ma być zostawionych?, required=N, fml_val="exec('edit_number','#edit',3,'Ile ostatnich logów ma być zostawionych?',0,0)"
{? var_pres('ILOSC',_in)<>type_of(~~) & var_pres('ILOSC',_in)<>type_of(0) || return() ?};
{? _in.ILOSC=~~ || _in.ILOSC:=3 ?};
{? var_pres('DNI',_in)<>type_of(~~) & var_pres('DNI',_in)<>type_of(0) || return() ?};
{? _in.DNI=~~ || _in.DNI:=30 ?};

:: PARAMETRY WY:
::# kind=WY, symbol=RESULT, type=STRING, name=Wynik czynności (OK, gdy wszystkie maile i logi zostały usunięte), required=N
::# kind=WY, symbol=ILE_MAIL, type=NUMBER, name=Ilość usuniętych maili, required=N
::# kind=WY, symbol=ILE_LOGI, type=NUMBER, name=Ilość usuniętych logów, required=N
{? var_pres('RESULT',_out)<>type_of(~~) & var_pres('RESULT',_out)<>type_of('') || return() ?};
{? var_pres('ILE_MAIL',_out)<>type_of(~~) & var_pres('ILE_MAIL',_out)<>type_of(0) || return() ?};
{? var_pres('ILE_LOGI',_out)<>type_of(~~) & var_pres('ILE_LOGI',_out)<>type_of(0) || return() ?};

::# properties=SERVICE,GRP_FIRM,~USER

{? _mp.isAutoRun() | _mp.isService()
|| exec('mail_del','!zpr_snd_usun',_in,_out,_mp);
   exec('log_del','!zpr_snd_usun',_in,_out,_mp)
|| {? FUN.ask('Czy usunąć wiadomości i logi?'@)
   || exec('mail_del','!zpr_snd_usun',_in,_out,_mp);
      exec('log_del','!zpr_snd_usun',_in,_out,_mp)
   ?}
?};

{? ~_mp.isService() || FUN.info('Zakończono archiwizację instancji procesów.'@) ?};

_mp.save(,_out);
_mp.done();
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.22]
:: OPIS: Opis dla czynności usunięcia poczty (ZPR_SND_USUN)
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_desc:='Usuń wiadomości wysłane i logi poczty'@@;
_desc


\mail_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.22]
:: OPIS: Właściwa funkcja usunięcia poczty
::   WE: _a - _in
::       _b - _out
::       _c - _mp
::----------------------------------------------------------------------------------------------------------------------
_in:=_a;
_out:=_b;
_mp:=_c;

_firma:=REF.FIRMA;
_tm_stamp:=exec('create','#tm_stamp',date(),time())-_in.DNI*exec('day','#tm_stamp');
_counter:=0;
_ok:=1;
POCZTA.cntx_psh();
POCZTA.index('DT1');
POCZTA.prefix(_firma,'P','D');
{? POCZTA.first()
|| {!
   |? {? POCZTA.SOURCE='' & POCZTA.TM_STAMP<_tm_stamp
      ||
         POCZTAR.index('P');
         POCZTAR.prefix(POCZTA.ref());
         {? POCZTAR.first()
         || {! |? POCZTAR.del() !}
         ?};
         POCZTAA.index('P');
         POCZTAA.prefix(POCZTA.ref());
         {? POCZTAA.first()
         || {! |? POCZTAA.del() !}
         ?};
         ferase(exec('ilog_name','#mailbox',POCZTA.ref()),1);

         {? POCZTA.del()
         || _counter+=1;
            1
         || _ok:=0;
            0
         ?}
      || POCZTA.next()
      ?}
   !}
?};
POCZTA.prefix(_firma,'P','S');
{? POCZTA.first()
|| {!
   |? {? POCZTA.SOURCE='' & POCZTA.TM_STAMP<_tm_stamp
      ||
         POCZTAR.index('P');
         POCZTAR.prefix(POCZTA.ref());
         {? POCZTAR.first()
         || {! |? POCZTAR.del() !}
         ?};
         POCZTAA.index('P');
         POCZTAA.prefix(POCZTA.ref());
         {? POCZTAA.first()
         || {! |? POCZTAA.del() !}
         ?};
         ferase(exec('ilog_name','#mailbox',POCZTA.ref()),1);

         {? POCZTA.del()
         || _counter+=1;
            1
         || _ok:=0;
            0
         ?}
      || POCZTA.next()
      ?}
   !}
?};
_out.ILE_MAIL:=_counter;
_out.RESULT:={? _ok || 'OK' || 'BŁĄD' ?};
POCZTA.cntx_pop()


\log_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.22]
:: OPIS: Usunięcie logów przetwarzania i wysyłania poczty
::----------------------------------------------------------------------------------------------------------------------
_in:=_a;
_out:=_b;
_mp:=_c;
_ok:=1;

_logi1:=files('mail*.log');
{? type_of(_logi1)=type_of(~~) || FUN.error('Błąd pobrania nazw plików.'@); return('') ?};

_logi2:=files('ml*.log');
{? type_of(_logi2)=type_of(~~) || FUN.error('Błąd pobrania nazw plików.'@); return('') ?};

_logj1:=files('majl*.log');
{? type_of(_logj1)=type_of(~~) || FUN.error('Błąd pobrania nazw plików.'@); return('') ?};

_logj2:=files('mj*.log');
{? type_of(_logj2)=type_of(~~) || FUN.error('Błąd pobrania nazw plików.'@); return('') ?};

_logi:=sql('
   select
      :_a.FILENAME,
      0 as SIZE
   from :_a
   union all
   select
      :_b.FILENAME,
      0 as SIZE
   from :_b
   order by 1 desc
',_logi1,_logi2);

_logj:=sql('
   select
      :_a.FILENAME,
      0 as SIZE
   from :_a
   union all
   select
      :_b.FILENAME,
      0 as SIZE
   from :_b
   order by 1 desc
',_logj1,_logj2);

_counter2:=0;

_counter:=0;
{? type_of(_logi)<>type_of(~~)
|| {? _logi.size()>_in.ILOSC & _logi.first()
   || {!
      |? {? _counter<_in.ILOSC
         || _counter+=1;
            _logi.next()
         || 0
         ?}
      !};
      {!
      |? {? ferase(_logi.FILENAME,1)
         || _counter2+=1
         || _ok:=0
         ?};
         _logi.next()
      !}
   ?}
|| exec('err_sql','#sql');
   _ok:=0
?};

_counter:=0;
{? type_of(_logj)<>type_of(~~)
|| {? _logj.size()>_in.ILOSC & _logj.first()
   || {!
      |? {? _counter<_in.ILOSC
         || _counter+=1;
            _logj.next()
         || 0
         ?}
      !};
      {!
      |? {? ferase(_logj.FILENAME,1)
         || _counter2+=1
         || _ok:=0
         ?};
         _logj.next()
      !}
   ?}
|| exec('err_sql','#sql');
   _ok:=0
?};

_out.ILE_LOGI:=_counter2;
{? _out.RESULT='OK'
|| _out.RESULT:={? _ok || 'OK' || 'BŁĄD' ?}
?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:40 38a9d5136aa78345142f0e6c7e1e1bef52da433ecf92f91a691ddfc7cfc548edc53f08c9a644ca394f1845091c96adab01145e0fa96948a2c384ac60e8e132610ea29fca51f27044a3159c9d6a99eeaaeaf2001d0f916d5166cc422f2ede2172588f9be830da7080948e951f2095da4ea5a2cb8321717973ba8fdb6017e615e7
