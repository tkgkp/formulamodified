:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lzk_zds_dptw.fml
:: Utworzony: 02.11.2018
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Rejestracja potwierdzenia zamówień dostaw
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ,LZK,LMG,TARD
::# parses=exec('parses','!lzk_zds_dptw')
::# kind=WE,   symbol=KH,      type=_KH,      name=Kontrahent,                      required=N
::# kind=WE,   symbol=ZD_NAG,  type=_ZD_NAG,  name=Zamówienie dostaw,               required=N, keyref=T
::# kind=WY,   symbol=ZDP_NAG, type=_ZDP_NAG, name=Potwierdzenie zamówień dostaw,   required=N
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

exec('init_zds','lzk');

:: Przepisanie portu wejściowego ZD_NAG na wyjściowy ZD_NAG
{? var_pres('ZD_NAG',_in)=type_of(null()) & _in.ZD_NAG
|| _in.KH:=exec('FindAndGet','#table',ZD_NAG,_in.ZD_NAG,,"KH",null());
   _mp.save(,_in);
   POMOC.ZD_N_PTW:=_in.ZD_NAG
?};

POMOC.KH:={? var_pres('KH',_in)=type_of(null()) & _in.KH || _in.KH || null() ?};
{? POMOC.KH<>null() || POMOC.LOCK:=$POMOC.KH ?};
_czy_zam:=var_pres('ZDP_NAG',_out)=type_of(null()) & _out.ZDP_NAG;

:: WSTĘPNE WALIDACJE
_clean_result:=params_exec('clean','!lzk_zds_dptw',_mp,_in);
_can_continue:=_clean_result.RESULT;
{? _can_continue=0
|| return()
?};

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_auto:=0;
_area:=_mp.pathArea('LZK_ZDS');
_proc:=_mp.pathProc();
_todo:=_mp.pathTodo() | _mp.pathArea() & ~_area;

{? _todo
:: Ustawienie kontekstu wg instancji elementu w procesie
|| {? _czy_zam
   || 1
   || {? ~_mp.isMicro()
      || _akcja:='START_TODO'
      || _mp.error('Brak parametru wyjściowego ZDP_NAG.')
      ?}
   ?}
?};

:: Sprawdzenie uprawnień
{? params_exec('permissions_chk','lzk','')=0 || return() ?};

:: Wyzwalacz, który po dodaniu nagłówka dokumentu:
:: - add: dodaje rekord kluczowy nagłówka dokumentu
::   del: usuwa rekord kluczowy nagłówka dokumentu
:: - add: zapisuje parametr wyjściowy ZD_NAG = wskazanie na nagłówek zamówienia dostawy
::   del: zapisuje parametr wyjściowy ZD_NAG = null
_mp.trigRef('ZDP_NAG',,1,,exec('kind_out','#b_port'),'ZDP_NAG');

{? _czy_zam & ~(exec('FindAndGet','#table',ZDP_NAG,_out.ZDP_NAG,,"name()",'')*'__')
||
   _mp.error('Potwierdzenie zamówień '+exec('FindAndGet','#table',ZDP_NAG,_out.ZDP_NAG,,"SYM",'')+' przesłane do archiwum. '
             'Redakcja niemożliwa.')

|? _akcja='DołączZZam'
   | _proc
   | _akcja='START_TODO'
:: Obsługa Dołącz - dołącz w oknie obszaru i start procesu z pulpitu
||
::    Parametr 'akcja' wykorzystywany w formułach przycisków 'Pozycje', 'Zakończ'
   params_set('out',_out,'mp',_mp,'akcja',_akcja);

   exec('zdpn_add','!lzk_zds_dptw');

::    Podczytanie parametrów wyjściowych
   _outa:=_mp.load(exec('kind_out','#b_port'));
   {? var_pres('ZDP_NAG',_outa)<>type_of(~~) & _outa.ZDP_NAG
::    Dodano potwierdzenie
   || ''
::    Wycofanie czynności bo nie dodano potwierdzenia
   || _mp.cancel()
   ?}

|? _akcja='Popraw'
   | _todo
|| {? var_pres('ZDP_NAG',_out)=type_of(null())
:: Uruchomione w procesie
   || ZDP_NAG.cntx_psh();
      ZDP_NAG.prefix();
      {? ZDP_NAG.seek(_out.ZDP_NAG)
      ||
         params_set('out',_out,'mp',_mp,'akcja',_akcja);
         exec('zdptw_pop','!lzk_zds_dptw');

         _mp.descTodo()
      ?};
      ZDP_NAG.cntx_pop()
   |? _todo
:: Uruchomione zadanie z listy todo i brak _out.ZDP_NAG wtedy zadanie wycofujemy
   || _mp.cancel()
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      params_set('out',_out,'mp',_mp,'akcja',_akcja);
      exec('zdptw_pop','!lzk_zds_dptw')

   ?}

|? _akcja='Usuń'
|| {? var_pres('ZDP_NAG',_out)=type_of(null())
:: Uruchomione w procesie
   || _zdpnag:=null();
      ZDP_NAG.cntx_psh();
      _rec:=exec('rec_after_del','#table',ZDP_NAG);
      {? ~_area || ZDP_NAG.prefix() ?};
      {? ZDP_NAG.seek(_out.ZDP_NAG)
      ||
         _wyn:=exec('zdpn_del','!lzk_zds_dptw');

         {? ~ZDP_NAG.seek(_out.ZDP_NAG)
::       Wycofuję instancję jeśli nie znaleziono dokumentu
         || _mp.cancel()
         ?};
         _zdpnag:=ZDP_NAG.ref()
      ?};
      ZDP_NAG.cntx_pop();
      {? _wyn=1 & _rec<>null() || ZDP_NAG.seek(_rec) ?};
::    Ustawienie się na kolejnym dokumencie w widoku obszaru
      {? _area || {? _zdpnag || ZDP_NAG.seek(_zdpnag) ?} ?}
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      _rec:=exec('rec_after_del','#table',ZDP_NAG);
      _wyn:=exec('zdpn_del','!lzk_zds_dptw',1);
      {? _wyn=1 & _rec<>null() || ZDP_NAG.seek(_rec) ?};

      _mp.done()
   ?}

|? _akcja='Zakończ_wer' & _area
|| {? exec('zakoncz','zamdst_ptw') || _mp.done() ?}

|| _mp.error('Nieobsługiwana ścieżka.')
?};
POMOC.LOCK:=''


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_out:=_mp.load(exec('kind_out','#b_port'));

{? var_pres('ZDP_NAG',_out)<>type_of(~~) & _out.ZDP_NAG
|| 'Zakończ rejestrację potwierdzenia zamówień dostaw: %1'@@[exec('record','#to_string',_out.ZDP_NAG)]
|| _in:=_mp.load(exec('kind_in','#b_port'));
   {? var_pres('ZD_NAG',_in)=type_of(null()) & _in.ZD_NAG
   || 'Zarejestruj potwierdzenie zamówień dostawy na podstawie zamówienia %1'@@[exec('FindAndGet','#table',ZD_NAG,_in.ZD_NAG,,"exec('record','#to_string',ZD_NAG.ref())",'')]
   || 'Zarejestruj potwierdzenie zamówień dostaw'@@
   ?}
?}


\zdnag_potwierdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Zamówienie dostaw - Dołącz
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_blok:=~exec('zam_lock','zamdst_nag');

VAR_DEL.delete('__ptw_mark','__zdp_sum');
__ptw_mark:=tab_tmp(1,'ZD_P_REF','STRING[16]','ZD_P_REF');

_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_DPTW';
_params.AKCJA:='DołączZZam';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
_ok:=1;
{? _blok
|| {? FUN.ask('Zamówienie %1 aktualnie jest zablokowane.\n'
              'Czy wystawić potwierdzenie dla kontrahenta %2?'@[ZD_NAG.SYM,ZD_NAG.KH().SKR])
   || exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'KH',ZD_NAG.KH)
   || _ok:=0
   ?}
|? ZD_NAG.STAT_REJ='T' & ~((';AC'*ZD_NAG.STAN)>1)
|| {? FUN.ask('Zamówienie %1 nie można realizować.\n'
              'Czy wystawić potwierdzenie dla kontrahenta %2?'@[ZD_NAG.SYM,ZD_NAG.KH().SKR])
   || exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'KH',ZD_NAG.KH)
   || _ok:=0
   ?}
|? ZD_NAG.STAT_REJ='A'
|| {? FUN.ask('Zamówienie %1 zostało anulowane.\n'
              'Czy wystawić potwierdzenie dla kontrahenta %2?'@[ZD_NAG.SYM,ZD_NAG.KH().SKR])
   || exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'KH',ZD_NAG.KH)
   || _ok:=0
   ?}
|? ZD_NAG.STAT_REJ<>'T'
|| {? FUN.ask('Zamówienie %1 nie jest zaakceptowane.\n'
              'Czy wystawić potwierdzenie dla kontrahenta %2?'@[ZD_NAG.SYM,ZD_NAG.KH().SKR])
   || exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'KH',ZD_NAG.KH)
   || _ok:=0
   ?}
|| exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZD_NAG',ZD_NAG.ref())
?};

{? _ok || exec('mp_run','#b__box',_params) ?};
VAR_DEL.delete('__ptw_mark','__zdp_sum');
~~


\zdptw_zakoncz_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zamówienie dostaw - Zakocz - okno wertowania
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_DPTW';
_params.UIDREF:=ZDP_NAG.uidref();
_params.AKCJA:='Zakończ_wer';

exec('mp_run','#b__box',_params)


\zdnag_potwarea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Zamówienie dostaw - Dołącz
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
POMOC.KH:=null();
POMOC.LOCK:='';

_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_DPTW';
_params.AKCJA:='DołączZZam';
_params.PROC_START:='T';
{? POMOC.KH<>null()
|| _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'KH',POMOC.KH)
?};
exec('mp_run','#b__box',_params)


\zdnag_poprarea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Zamówienie dostaw - Popraw
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_DPTW';
_params.UIDREF:=ZDP_NAG.uidref();
_params.AKCJA:='Popraw';

exec('mp_run','#b__box',_params)


\zdnag_usunarea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Zamówienie dostaw - Usuń
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_DPTW';
_params.UIDREF:=ZDP_NAG.uidref();
_params.AKCJA:='Usuń';
_params.GRUPA:=ZDP_NAG.sel_size()>0;

exec('mp_run','#b__box',_params)


\zdnag_potwpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Potwierdzenie zamówień dostaw - Pozycje - okno wertowania
::----------------------------------------------------------------------------------------------------------------------
BPMN.END:=0;
exec('zdp_poz','zamdst_ptw');
~~


\zdnag_zakoncz_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Zamówienie dostaw - Zakocz - okno wertowania
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_DPTW';
_params.UIDREF:=ZDP_NAG.uidref();
_params.AKCJA:='Zakończ_wer';

exec('mp_run','#b__box',_params)


\czyuprmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: sprawdza czy magazyny z pozycji zamowienia sa uprawnione dla danego uzytkownika
::   WY: 1-jest OK 0-nie jest dobrze
::  OLD: \czyuprmg/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_tab:=tab_tmp(,'SQL','STRING[16]',''
       ,'SYM','STRING[10]','');
ZD_POZ.cntx_psh();
ZD_POZ.index('POZ');
ZD_POZ.prefix(ZD_NAG.ref);
{? ZD_POZ.first()
|| {!
   |? {? ZD_POZ.MG<>null & exec('usr_upr','b_perm','MG',ZD_POZ.MG,OPERATOR.USER) & ZD_POZ.MG().ODDZ=ST.ODDZ
      || _tab.clear();
         {? ~_tab.find_key($ZD_POZ.MG)
         || _tab.blank();
            _tab.SQL:=$ZD_POZ.MG;
            _tab.SYM:=ZD_POZ.MG().SYM;
            _tab.add(1)
         ?};
         _wyn:=0
      ?};
      ZD_POZ.next()
   !}
?};
ZD_POZ.cntx_pop();
{? ~_wyn
|| _sym:='';
   _tab.clear();
   {? _tab.first() || {! |? _sym+=_tab.SYM+', ';_tab.next() !} ?};
   _sym:=(_sym-2)+'.';
   FUN.info('Brak uprawnień do magazynu(ów):\n%1\n Kopia niemożliwa.'@[_sym])
?};
obj_del(_tab);
_wyn


\zdptw_zakoncz_zdp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Zamówienie dostaw - Zakocz - okno wertowania ZDP_POZ
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
exec('btn_EndPosition','okienka','LZK_ZDS_DPTW',ZDP_NAG.uidref(),ZDP_NAG
 ,'Zakończ_wer','Zakończyć rejestrację potwierdzenia dla zamówień dostaw %1?'@[ZDP_NAG.SYM]);
~~


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Formuła ustala PARSES
::   WE: UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_out:=params_get().out;

{? var_pres('ZDP_NAG',_out)=type_of(null()) & _out.ZDP_NAG
|| ZDP_NAG.cntx_psh();
   ZDP_NAG.use(ref_name(_out.ZDP_NAG));
   ZDP_NAG.prefix();
   {? ZDP_NAG.seek(_out.ZDP_NAG)
   || __PARSES.setVal('OddzialLogProd',ZDP_NAG.ODDZ)
   ?};
   ZDP_NAG.cntx_pop()
|| _in:=params_get().in;

   {? var_pres('ZD_NAG',_in)=type_of(null()) & _in.ZD_NAG
   || ZD_NAG.cntx_psh();
      ZD_NAG.use(ref_name(_in.ZD_NAG));
      ZD_NAG.prefix();
      {? ZD_NAG.seek(_in.ZD_NAG)
      || __PARSES.setVal('OddzialLogProd',ZD_NAG.ODDZ)
      ?};
      ZD_NAG.cntx_pop()
   ?}
?};

1


\zdpn_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: utworzenie naglowka potwierdzenia
::   WY: _wyn - ZDP_NAG.ref()
::  OLD: \zdpn_add/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_res:=null();
_bie_ptw:=#ZDP_NAG.ref;
_pom_tab:=POM.TAB;
_pom_typdok:=POM.TYPDOK;
POM.TAB:='ZDP_NAG';
POM.TYPDOK:='PTW';

{? POMOC.LOCK='' | POMOC.LOCK='I' || POMOC.KH:=null ?};

_new_ptw:=null;
ZDP_NAG.cntx_psh();
ZDP_NAG.clear();
ZDP_NAG.blank();
{? ZDP_NAG.add() & ZDP_NAG.r_lock(1,1,1)
||
   _new_ptw:=ZDP_NAG.ref();

   _var_zdptwpop:=exec('var_zdptwpop','zamdst_ptw');
   _var_zdptwpop.KH:=null();
   _var_zdptwpop.SYM_DST:='';
   _var_zdptwpop.TRANSP:='';
   _var_zdptwpop.LIST_PRZ:='';
   _var_zdptwpop.FAKTURA:='';
   _var_zdptwpop.D_WYS:=date(0,0,0);
   _var_zdptwpop.D_REA:=date(0,0,0);
   _var_zdptwpop.PO_FIRST:=1;

   _context:=params_get();

   params_set('context',_context,'var_zdptwpop',_var_zdptwpop);
   exec('zdptw_win_edit_set','zamdst_ptw');
   {? ZDP_NAG.edit("params_exec('zdpn_chk','zamdst_ptw')")
   ||
::    dodanie potwierdzenia
      _wyn:=ZDP_NAG.put();
      {? _wyn
      || _res:=ZDP_NAG.ref();
         {? _var_zdptwpop.PO_FIRST=1
         || {? exec('FindInSet','#table','ZDP_POZ','ZDP_NAG',ZDP_NAG.ref())=null()
            || BPMN.END:=1;
               exec('zdp_poz','zamdst_ptw');
               {? BPMN.END=2 & exec('FindInSet','#table','ZDP_POZ','ZDP_NAG',ZDP_NAG.ref())<>null()
               || params_set('context',_context,'var_zdptwpop',_var_zdptwpop);
                  exec('zdptw_zakoncz_red','zamdst_ptw')
               ?}
            ?}
         ?}
      ?};
      ZDP_NAG.r_unlock()
   ||
::    usuwanie numeru
      _uidref:=ZDP_NAG.uidref();
      exec('zdpn_del','!lzk_zds_dptw',2);
      {? ~ZDP_NAG.seek(_uidref) || _new_ptw:=null ?}
   ?}
||
   FUN.info('Nieudana próba zablokowania tabeli nagłówków potwierdzeń.\nSpróbuj ponownie.'@)
?};
ZDP_NAG.cntx_pop();
{? _new_ptw=null
||
   {? _bie_ptw>0 || ZDP_NAG.seek(_bie_ptw,) ?}
||
   {? ZDP_NAG.seek(_new_ptw)=0
   ||
      FUN.info('Aktualnie zredagowane potwierdzenie zamówień dostaw'
               'nie jest dostępne w ustawionym zakresie widoku potwierdzeń.'@);
      {? _bie_ptw>0 || ZDP_NAG.seek(_bie_ptw,) ?}
   ?}
?};

POM.TAB:=_pom_tab;
POM.TYPDOK:=_pom_typdok;
_res


\zdpp_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: dodanie pozycji potwierdzenia - wg zaznaczonych pozycji __ptw_tab
::  OLD: \zdpp_add/zd.fml
::----------------------------------------------------------------------------------------------------------------------
ZDP_NAG.get();
ZDP_POZ.cntx_psh();
{? exec('ptw_gen','!lzk_zds_dptw',ZDP_NAG.KH)
|| _buf:=tab_tmp(1,'NAG','STRING[16]','','POZ','STRING[16]','');
   {? __ptw_tab.first()
   ||
      {!
      |?
         {? __ptw_tab.IL_PTW>0
         ||
::          szuka tozsamej pozycji zamowienia dostaw i dopisuje ilosc
            ZDP_POZ.index('ZDP_POZ');
            ZDP_POZ.prefix(ZDP_NAG.ref(),__ptw_tab.ZD_P_REF,__ptw_tab.ZD_P_REF);
            {? ZDP_POZ.first()
            ||
               ZDP_POZ.IL+=__ptw_tab.IL_PTW;
               ZDP_POZ.put()
            ||
               ZDP_POZ.clear();
               ZDP_POZ.blank();
               ZDP_POZ.ZD_POZ:=__ptw_tab.ZD_P_REF;
               ZDP_POZ.ZD_N_SYM:=__ptw_tab.ZD_N_SYM;
               ZDP_POZ.ZD_P_POZ:=__ptw_tab.ZD_P_POZ;
               ZDP_POZ.IL:=__ptw_tab.IL_PTW;
               ZDP_POZ.KH:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"KH",null());
               ZDP_POZ.KH_MSC:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"KH_MSC",null());
               ZDP_POZ.M:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"M",null());
               ZDP_POZ.JM:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"JM",null());
               ZDP_POZ.CENA:=__ptw_tab.CENA;
               ZDP_POZ.CWAL:=__ptw_tab.CWAL;
               ZDP_POZ.WAL:=exec('FindAndGet','#table',SLO,__ptw_tab.WAL,,,null());
               ZDP_POZ.KRS:=__ptw_tab.KRS;
               ZDP_POZ.ZKON:=exec('FindInSet','#table','ZKON','SYM',__ptw_tab.ZKON,,,1,,null());
               ZDP_POZ.D_WYS:=ZDP_POZ.ZDP_NAG().D_WYS;
               ZDP_POZ.RR:=ZDP_POZ.D_WYS~1;
               ZDP_POZ.MM:=ZDP_POZ.D_WYS~2;
               ZDP_POZ.D_WYS:={? __ptw_tab.D_WYS<>date(0,0,0) || __ptw_tab.D_WYS || ZDP_POZ.ZDP_NAG().D_WYS ?};
               ZDP_POZ.add()
            ?};
            _buf.clear();
            _buf.prefix(__ptw_tab.ZD_N_REF,);
            {? ~_buf.first()
            || _buf.blank();
               _buf.NAG:=__ptw_tab.ZD_N_REF;
               _buf.POZ:=__ptw_tab.ZD_P_REF;
               _buf.add(1)
            ?}
         ?};
         __ptw_tab.next()
      !}
   ?};
   _buf.clear();
   {? _buf.first()
   || {!
      |? exec('ptw_stat','zamdst_ptw',_buf.POZ);
         _buf.next()
      !}
   ?};
   obj_del(_buf)
?};
ZDP_POZ.cntx_pop();
''


\zdpp_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: popraw dla pozycji potwierdzenia
::  OLD: \zdpp_put/zd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ptw_stat','zamdst_ptw',ZDP_POZ.ZD_POZ);
_sel:=ZDP_POZ.sel_aget();
ZDP_POZ.sel_adel();
_edit:=ZDP_POZ.win_edit('RED');
ZD_Z.RCEN:=1;
_onlydt:=(';ZT'*ZDP_POZ.ZDP_NAG().STAT_REJ)>1;

{? ~_sel.first()
|| ZDP_POZ.get();
   _nag:=exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"$ZD_NAG",'');
   _wal:={? _nag<>'' || exec('FindAndGet','#table',ZD_NAG,_nag,,"WAL",null()) || INFO.NAROD ?};
   ZDP_POZ.WAL:=_wal;
   ZDP_POZ.efld_opt('RED','enable=1',ZDP_POZ,'KRS');
   ZDP_POZ.efld_opt('RED','enable=1',ZDP_POZ,'CENA');
   {? _onlydt
   || ZDP_POZ.efld_opt('RED','enable=0',ZDP_POZ,'IL');
      ZDP_POZ.efld_opt('RED','enable=0',ZDP_POZ,'CENA');
      ZDP_POZ.efld_opt('RED','enable=0',ZDP_POZ,'KRS');
      ZDP_POZ.efld_opt('RED','enable=0',ZDP_POZ,'CWAL');
      ZDP_POZ.efld_opt('RED','enable=0',ZDP_POZ,'ZKON')
   ?};
   {? ZDP_POZ.edit("exec('chk_zdpp','!lzk_zds_dptw')")
   || ZDP_POZ.put(1)
   ?}
||
:: kontrola walutowości
   _wal:=null();
   ZDP_POZ.cntx_psh();
   {!
   |? {? (ZDP_POZ.prefix(); ZDP_POZ.seek(_sel.REF,))
      || {? _wal<>null()
         || ZD_Z.RCEN:=ZDP_POZ.WAL=_wal
         || _wal:=ZDP_POZ.WAL
         ?}
      ?};
      ZD_Z.RCEN & _sel.next()
   !};
   {? _wal<>null() & _wal<>INFO.NAROD &_sel.size()>1
   || ZDP_POZ.efld_opt('RED','enable=0',ZDP_POZ,'KRS');
      ZDP_POZ.efld_opt('RED','enable=0',ZDP_POZ,'CENA')
   || ZDP_POZ.efld_opt('RED','enable=1',ZDP_POZ,'KRS');
      ZDP_POZ.efld_opt('RED','enable=1',ZDP_POZ,'CENA')
   ?};
   {? _onlydt
   || ZDP_POZ.efld_opt('RED','enable=0',ZDP_POZ,'IL');
      ZDP_POZ.efld_opt('RED','enable=0',ZDP_POZ,'CENA');
      ZDP_POZ.efld_opt('RED','enable=0',ZDP_POZ,'KRS');
      ZDP_POZ.efld_opt('RED','enable=0',ZDP_POZ,'CWAL');
      ZDP_POZ.efld_opt('RED','enable=0',ZDP_POZ,'ZKON')
   ?};
   {? _sel.first() & ZDP_POZ.edit("exec('chk_zdpp','!lzk_zds_dptw',2)")
   || _ilep:=ZDP_POZ.IL;
      _cena:=ZDP_POZ.CENA;
      _cwal:=ZDP_POZ.CWAL;
      _krs:=ZDP_POZ.KRS;
      _zkon:=ZDP_POZ.ZKON;
      _d_wys:=ZDP_POZ.D_WYS;
      {!
      |? {? (ZDP_POZ.prefix(); ZDP_POZ.seek(_sel.REF,))
         || _dokl:=exec('jaka_dok_m','jm',ZDP_POZ.M);
            _ilewyb:=_ilep$_dokl;
            {? ZDP_POZ.WAL<>INFO.NAROD & ZDP_POZ.KRS>0
            || _cwyb:=_cwal*ZDP_POZ.KRS $ZDP_POZ.M().DOKL_Z
            || _cwyb:=_cena $ZDP_POZ.M().DOKL_Z
            ?};
            exec('zdpp_rek','zamdst_ptw');
            ZDP_POZ.IL:=_ilewyb;
            _ilptw:=exec('chk_zdpp','!lzk_zds_dptw',1);
            _put:=0;
            {? _ilep>0 & _ilewyb<=_ilptw
            || ZDP_POZ.IL:=_ilewyb;
               _put:=1
            |? _ilep>0 & _ilptw>0
            || ZDP_POZ.IL:=_ilptw;
               _put:=1
            ?};
            {? ZD_Z.RCEN & _cwyb>0
            || ZDP_POZ.CENA:=_cwyb;
               _put:=1
            ?};
            {? ZD_Z.RCEN & _cwal>0
            || ZDP_POZ.CWAL:=_cwal;
               _put:=1
            ?};
            {? _zkon<>null()
            || ZDP_POZ.ZKON:=_zkon;
               _put:=1
            ?};
            {? _d_wys<>date(0,0,0) & (POMOC.IL_PTW-POMOC.IL_REA)>0 & ZDP_POZ.D_WYS<>_d_wys
            || ZDP_POZ.D_WYS:=_d_wys;
               ZDP_POZ.RR:=_d_wys~1;
               ZDP_POZ.MM:=_d_wys~2
            ?};
            {? _put || ZDP_POZ.put(1) ?}
         ?};
         _sel.next()
      !}
   ?};
   ZDP_POZ.cntx_pop()
?};
obj_del(_sel);
ZDP_POZ.win_edit(_edit);
''


\zdpp_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009+]
:: OPIS: usuwa pozycje potwierdzenia
::  OLD: \zdpp_del/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZDP_POZ.IL_ZT>0
|| FUN.info('Do pozycji są aktualnie wystawione dyspozycje transportu.\n\nUsunięcie pozycji zabronione.'@)
|? FUN.ask('Usunąć pozycję potwierdzenia?'@)
|| _zd_p_ref:=ZDP_POZ.ZD_POZ;
   ZDP_POZ.del();
   exec('ptw_stat','zamdst_ptw',_zd_p_ref,1)
?};
''


\ptw_gen
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: generuje drzewko pozycji do potwierdzenia dla KH - dostawca z naglowka
::   WE: _a - KH.ref() - dostawca
::   WY: select()
::  OLD: \ptw_gen/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

_d_wys:=ZDP_NAG.D_WYS;
VAR_DEL.delete('__ptw_tab','__ptw_sel','__zdn_list','__zdn_sel','__ptw_pos','__ptw_ndx'
 ,'__ptw_mat','__ptwmsel','__ptw_ndm','__ptwttab','__ptwadd');
_qq:=$"
   select
      'X' as WYB,
      ZD_NAG.SYM as ZD_N_SYM,
      ZD_POZ.POZ as ZD_P_POZ,
      TYPYZAM.T as TYP_ZAM,
      MG.SYM as Magazyn,
      M.KTM as Indeks,
      M.N as Nazwa,
      ZD_POZ.IL as IL,
      ZD_POZ.IL_POZ as IL_POZ,
      ZD_POZ.IL as IL_PTW,
      ZD_NAG.SYM as Opis,
      ZD_POZ.reference as ZD_P_REF,
      ZD_NAG.reference as ZD_N_REF,
      MG.reference as MG_REF,
      M.reference as M_REF,
      ZD_NAG.DATA as DATA,
      JM.KOD as JM,
      ZD_POZ.CENA as CENA,
      ZD_POZ.CWAL as CWAL,
      ZKON.SYM as ZKON,
      ZD_NAG.WAL as WAL,
      ZD_NAG.KRS as KRS,
      ZD_NAG.DATA as D_WYS
   from
      ZD_POZ
      join M using (ZD_POZ.M,M.reference)
      left join MG using (ZD_POZ.MG,MG.reference)
      join ZD_NAG using (ZD_POZ.ZD_NAG,ZD_NAG.reference)
      join TYPYZAM using (ZD_NAG.T,TYPYZAM.reference)
      left join ZKON using (ZD_NAG.ZKON,ZKON.reference)
      join JM using (ZD_POZ.JM,JM.reference)
   where
      ZD_NAG.STAT_REJ='T'
      and position(ZD_NAG.STAN in 'AC')>0
      and ZD_NAG.KH=:_a
      and ZD_POZ.IL_ZRE<ZD_POZ.IL
   order by
      1,2,3,4
";
_uprtyp:=exec('get','#params',3024,2,OPERATOR.USER);
__ptw_tab:=sql(_qq,_a);
:: oblicza ilosc pozostala do potwierdzenia
{? __ptw_tab.first()
||
   {!
   |? __ptw_tab.D_WYS:=_d_wys;
      __ptw_tab.put(1);
      {? __ptw_tab.WYB='X'
      || {? _uprtyp='' | _uprtyp*(__ptw_tab.TYP_ZAM+' ')
         || exec('obl_ptw','zamdst_ptw',__ptw_tab.ZD_P_REF,1);
            __ptw_tab.IL_POZ:=__ptw_tab.IL_POZ-(__zdp_sum.IL_PTW-__zdp_sum.IL_REA);
            {? __ptw_tab.IL_POZ>0
            ||
               __ptw_tab.IL_PTW:=0;
               {? ($POMOC.ZD_N_PTW)=__ptw_tab.ZD_N_REF || __ptw_tab.WYB:='T' ?};
               __ptw_tab.put();
               __ptw_tab.next()
            ||
               __ptw_tab.cntx_psh;
               _next:=__ptw_tab.next;
               __ptw_tab.cntx_pop;
               __ptw_tab.del();
               _next
            ?}
         || __ptw_tab.del()
         ?}
      || __ptw_tab.next()
      ?}
   !}
?};
{? __ptw_tab.first()
||
:: pobranie wszystkich indeksów materiałowych
   _qq:=$"
      select distinct
         :_a.M_REF as M_REF,
         :_a.INDEKS as INDEKS,
         :_a.NAZWA as NAZWA
      from
         :_a
      order by 1
   ";
   __ptw_mat:=sql(_qq,__ptw_tab);
:: grupowanie tabeli wg Zamowien
   _qq:=$"
      select distinct
         :_a.ZD_N_SYM as ZD_N_SYM,
         :_a.ZD_N_REF as ZD_N_REF,
         :_a.DATA as DATA,
         0 as WYB
      from
         :_a
      order by 1
   ";
   __zdn_list:=sql(_qq,__ptw_tab);

   {? __zdn_list.first() & ($POMOC.ZD_N_PTW)<>''
   ||
      {!
      |? {? ($POMOC.ZD_N_PTW)=__zdn_list.ZD_N_REF & exec('zdn_lock','!lzk_zds_dptw',__zdn_list.ZD_N_REF)
         || __zdn_list.WYB:=2;
            __zdn_list.put(1)
         ?};
         __zdn_list.next()
      !}
   ?};
:: okienko
   __ptw_sel:=__ptw_tab.mk_sel('Pozycje do potwierdzenia'@,'P',,'#winid_ptw',,,,,'U',,,,,'maximized','','on');
   __ptw_tab.win_fld(__ptw_sel,,'ZD_N_SYM',,,15,,1,'Zamówienie'@);
   __ptw_tab.win_fld(__ptw_sel,,'ZD_P_POZ',,,5,,1,'Pozycja'@);
   __ptw_tab.win_fld(__ptw_sel,,'TYP_ZAM',,,7,,1,'Typ'@);
   __ptw_tab.win_fld(__ptw_sel,,'MAGAZYN',,,8,,1,'Magazyn'@);
   __ptw_tab.win_fld(__ptw_sel,,'INDEKS',,,18,,1,'Indeks'@);
   __ptw_tab.win_fld(__ptw_sel,,'NAZWA',,,10,,1,'Nazwa'@);
   __ptw_tab.win_fld(__ptw_sel,,'IL',,,-12,ST.DOKL,1,'Ilość zamawiana'@);
   __ptw_tab.win_fld(__ptw_sel,,'IL_POZ',,,-12,ST.DOKL,1,'Pozostało do potwierdzenia'@);
   __ptw_tab.win_fld(__ptw_sel,,'IL_PTW',,,-12,ST.DOKL,,'Do potwierdzenia'@);
   __ptw_tab.win_fld(__ptw_sel,,'ZKON',,,-12,ST.DOKL,,'Kontrakt'@);
   __ptw_tab.win_fld(__ptw_sel,,'CENA',,,-8,2,,'Cena'@);
   __ptw_tab.win_fld(__ptw_sel,,'JM',,,4,,1,'jm'@);
   __ptw_tab.fld_fml('IL_PTW','EDIT_FORMAT',
      "'in_prec='+$exec('FindInSet','#table','M','MATKTM',__ptw_tab.INDEKS,__ptw_tab.INDEKS,\"M.DOKL\")");
   __ptw_tab.win_act(__ptw_sel,,'Formuła','Wypełnij'@@,,,,"exec('ptw_mark','!lzk_zds_dptw',1)",,1,"sel_nchk()",,,,'target=window');
   __ptw_tab.win_act(__ptw_sel,,'Formuła','Zeruj'@@,,,,"exec('ptw_mark','!lzk_zds_dptw',0)",,1,"sel_nchk()",,,,'target=window');
   __ptw_tab.win_act(__ptw_sel,,'Formuła','Dołącz'@@,,,,"exec('padd_zdp','!lzk_zds_dptw')");
   __ptw_tab.win_act(__ptw_sel,,'Formuła','Popraw'@@,,,,"exec('pop_zdp','!lzk_zds_dptw',0)",,1,"exec('pop_zdp','!lzk_zds_dptw',0)");
   __ptw_tab.win_act(__ptw_sel,,'Formuła','Usuń'@@,,,,"exec('del_zdp','!lzk_zds_dptw',0)",,1,"exec('del_zdp','!lzk_zds_dptw',0)");
   __ptw_tab.win_act(__ptw_sel,,'Formuła','Akceptuj'@@,,,"exec('ptw_akc','!lzk_zds_dptw')",,,,,,,,'target=window');
   __ptw_tab.win_act(__ptw_sel,1,'Formuła','Dołącz'@@,,,,"exec('padd_zdp','!lzk_zds_dptw')",1);
   __ptw_tab.win_act(__ptw_sel,,'Kolejność');
   __ptw_tab.win_act(__ptw_sel,,'Szukaj');
   __ptw_tab.win_act(__ptw_sel,,'Rekord',,,,"exec('ptw_rek','!lzk_zds_dptw')","exec('ptw_aepp','!lzk_zds_dptw')");
   __ptw_tab.win_act(__ptw_sel,,'Wyświetl',,,,"exec('dispPOZ','!lzk_zds_dptw')");
   __ptw_tab.win_sel(__ptw_sel);
   __ptw_tab.win_fml(__ptw_sel,,'ZD_N_SYM',,'ICON_BEFORE',"exec('ptwn_sym_ib','!lzk_zds_dptw')");

   __zdn_sel:=__zdn_list.mk_sel('Zamówienia do potwierdzenia'@,'P',,'#winid_zdn',,,,,'U');
   __zdn_list.win_fld(__zdn_sel,,'ZD_N_SYM',,,20,,1,'Zamówienie'@);
   __zdn_list.win_fld(__zdn_sel,,'DATA',,,10,,1,'Data'@);
   __zdn_list.win_act(__zdn_sel,,'Formuła','Dodaj do listy'@@,,,,"exec('add_zdp','!lzk_zds_dptw',2)",,1
    ,"exec('add_zdp','!lzk_zds_dptw',2)",,,,'target=window');
   __zdn_list.win_act(__zdn_sel,,'Formuła','Usuń z listy'@@,,,,"exec('del_zdp','!lzk_zds_dptw',2)",,1
    ,"exec('del_zdp','!lzk_zds_dptw',2)",,,,'target=window');
   __zdn_list.win_act(__zdn_sel,,'Rekord',,,,"
         {? __zdn_list.sel_size()
         || __zdn_list.actions_grayed(__zdn_sel,'');
            __zdn_list.actions(__zdn_sel,'','D',1)
         |? __zdn_list.WYB<2
         || __zdn_list.actions_grayed(__zdn_sel,'U');
            __zdn_list.actions(__zdn_sel,,'D',1)
         || __zdn_list.actions_grayed(__zdn_sel,'D');
            __zdn_list.actions(__zdn_sel,,'U',1)
         ?}");
   __zdn_list.win_act(__zdn_sel,,'Wyświetl',,,,"exec('dispZAM','!lzk_zds_dptw')");
   __zdn_list.win_sel(__zdn_sel);
   __zdn_list.win_fml(__zdn_sel,,'ZD_N_SYM',,'ICON_BEFORE',"exec('zd_n_sym_ib','!lzk_zds_dptw')");

   __ptw_pos:=__ptw_tab.mk_sel('Pozycje z zamówienia'@,'P',,'#winid_zdp',,,,,'U');
   __ptw_tab.win_fld(__ptw_pos,,'ZD_P_POZ',,,5,,1,'Pozycja'@);
   __ptw_tab.win_fld(__ptw_pos,,'MAGAZYN',,,8,,1,'Magazyn'@);
   __ptw_tab.win_fld(__ptw_pos,,'INDEKS',,,14,,1,'Indeks'@);
   __ptw_tab.win_act(__ptw_pos,,'Wyświetl',,,,"exec('dispPOZ','!lzk_zds_dptw')");

   __selmptw:=__ptw_mat.mk_sel('Indeksy do potwierdzenia'@,'P',,'#winid_mat',,,,,'U');
   __ptw_mat.win_fld(__selmptw,,'INDEKS',,,18,,1,'Indeks'@);
   __ptw_mat.win_fld(__selmptw,,'NAZWA',,,14,,1,'Nazwa'@);
   __ptw_mat.win_act(__selmptw,,'Formuła','Dodaj do listy'@@,,,
    ,"exec('add_zdp','!lzk_zds_dptw',2,1)",1,1,"exec('add_zdp','!lzk_zds_dptw',2,1)",,,,'target=window');

   _winsel:=__ptw_tab.grp_make('Pozycje do potwierdzenia'@,,'#realgrpzdp');
   __ptw_tab.grp_sel(_winsel,__ptw_tab,__ptw_sel,,"exec('odsw_inf','!lzk_zds_dptw')",,,20,,,,,'maximized_with_title');
   __ptw_tab.grp_splt(_winsel,,'vertical','filtr',',67%');
   __ptw_tab.grp_sel(_winsel,__zdn_list,__zdn_sel,'Zamówienia do potwierdzenia'@
    ,"exec('posZAM','!lzk_zds_dptw')",,,15,,,,,'maximized');
   __ptw_tab.grp_sel(_winsel,__ptw_mat,__selmptw,'Indeksy do potwierdzenia'@
    ,"exec('posZAM','!lzk_zds_dptw',1)",,,15,,,,,'maximized');

   __ptw_tab.grp_splt(_winsel,'filtr','horizontal','filtrp');
   __ptw_tab.grp_sel(_winsel,__ptw_tab,__ptw_pos,,,,,
    ,"__ptw_tab.cntx_psh();
      {? ~__ptwttab || exec('posPRF','!lzk_zds_dptw') || exec('posPRM','!lzk_zds_dptw') ?}"
    ,"__ptw_tab.cntx_pop()");

   __ptw_tab.win_sel(_winsel);
   __ptw_tab.dnd_sel(__ptw_sel,,'records.#winid_zdn',"exec('add_zdp','!lzk_zds_dptw')");
   __zdn_list.dnd_sel(__zdn_sel,,'records.#winid_ptw',"exec('del_zdp','!lzk_zds_dptw')");

:: zaznaczanie rekordow zgodnie z tabela __ptw_mark utworzona podczas dodawania potwierdzen
   __ptw_tab.clear();
   __ptw_tab.prefix('T');
   {? __ptw_tab.first()
   ||
      {!
      |?
         {? __ptw_tab.ZD_P_REF<>''
         ||
            __ptw_mark.prefix(__ptw_tab.ZD_P_REF);
            {? __ptw_mark.first()
            || exec('ptw_mark','!lzk_zds_dptw',1)
            ?}
         ?};
         __ptw_tab.next()
      !};
      __ptw_tab.first()
   ?};

   __ptwadd:=0;
   __ptw_ndx:=__ptw_tab.ndx_tmp('',0,'ZD_N_REF',,,'ZD_P_POZ',,);
   __ptw_ndm:=__ptw_tab.ndx_tmp('',0,'M_REF',,);
   __ptwttab:=0;
   __ptw_mat.first();
   _wyn:=__ptw_tab.select();
   exec('zdn_unlock','!lzk_zds_dptw');
   __ptw_tab.dnd_sel(__ptw_sel,,'records.#winid_zdn',"");
   __zdn_list.dnd_sel(__zdn_sel,,'records.#winid_ptw',"")
||
   FUN.info('Brak pozycji do potwierdzenia.'@)
?};
_wyn


\zdn_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: r_lock dla zaznaczonej pozycji ZD_NAG
::   WE: _a - $ZD_NAG.ref()
::  OLD: \zdn_lock/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
ZD_NAG.cntx_psh();
ZD_NAG.use(8+_a);
ZD_NAG.prefix();
{? ZD_NAG.seek(_a,8+_a)
|| {? ZD_NAG.r_lock(1,1,1)
   || _wyn:=1
   || {? FUN.ask('Zamówienie %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@[ZD_NAG.SYM])
       & ZD_NAG.r_lock(1,,1)
      || ZD_NAG.r_unlock()
      ?}
   ?}
?};
ZD_NAG.cntx_pop();
_wyn


\zdn_unlock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: r_unlock tab. ZD_NAG
::  OLD: \zdn_unlock/zd.fml
::----------------------------------------------------------------------------------------------------------------------
ZD_NAG.cntx_psh();
__zdn_list.clear();
{? __zdn_list.first()
|| {!
   |? {? __zdn_list.ZD_N_REF<>''
      || ZD_NAG.use(8+__zdn_list.ZD_N_REF);
         ZD_NAG.prefix();
         {? ZD_NAG.seek(__zdn_list.ZD_N_REF,8+__zdn_list.ZD_N_REF) || ZD_NAG.r_unlock() ?}
      ?};
      __zdn_list.next()
   !}
?};
ZD_NAG.cntx_pop();
''


\ptw_mark
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: zaznaczanie rekordu __ptw_tab - potwierdzenie
::   WE: _a - 1-wypelnij 0-zeruj
::  OLD: \ptw_mark/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_mark:="
   _ok:=1;
   {? _a=0
   || __ptw_tab.ZKON:=exec('FindAndGet','#table',ZD_NAG,__ptw_tab.ZD_N_REF,,\"ZKON().SYM\",'');
      __ptw_tab.CWAL:=exec('FindAndGet','#table',ZD_POZ,__ptw_tab.ZD_P_REF,,\"CWAL\",'');
      __ptw_tab.CENA:=exec('FindAndGet','#table',ZD_POZ,__ptw_tab.ZD_P_REF,,\"CENA\",'');
      __ptw_tab.IL_PTW:=0
   ||
      _ok:=exec('zdn_lock','!lzk_zds_dptw',__ptw_tab.ZD_N_REF);
      {? _ok=1
      || __ptw_tab.IL_PTW:=__ptw_tab.IL_POZ
      || __ptw_tab.ZKON:=exec('FindAndGet','#table',ZD_NAG,__ptw_tab.ZD_N_REF,,\"ZKON().SYM\",'');
         __ptw_tab.CWAL:=exec('FindAndGet','#table',ZD_POZ,__ptw_tab.ZD_P_REF,,\"CWAL\",'');
         __ptw_tab.CENA:=exec('FindAndGet','#table',ZD_POZ,__ptw_tab.ZD_P_REF,,\"CENA\",'');
         __ptw_tab.IL_PTW:=0
      ?}
   ?};
   __ptw_tab.put();
   _ok
";
_mark(_a);
''


\ptw_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: przed rekord pozycji przeterminowanej
::  OLD: \ptw_rek/zd.fml
::----------------------------------------------------------------------------------------------------------------------
__ptw_tab.actions(__ptw_sel,'',,1);
~~


\ptw_aepp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: po popraw pozycje przeterminowana
::   WE: [_a] 0(domyślnie) akcja po rekordzie 1-sprawdzenie dla popraw 2-sprawdzenie tylko nieujemnych
::   WY: dla _a=0:   0/1
::           _a=1,2: '' lub akronim pola
::           _a=-1 zwraca ilość do potwierdzenia
::  OLD: \ptw_aepp/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
{? _tryb>0 || _wyn:='' || _wyn:=0 ?};

{? _tryb<>0 || __ptw_tab.IL_PTW:=ZDP_POZ.IL ?};

M.index('MATKTM');
M.prefix(__ptw_tab.INDEKS,__ptw_tab.INDEKS);
{? M.first()
|| _dokl:=exec('jaka_dok_m','jm',M.ref())
|| _dokl:=0
?};
__ptw_tab.IL_PTW:=__ptw_tab.IL_PTW$_dokl;
{? __ptw_tab.IL_PTW<0
|| FUN.info('Należy podać ilość większą od zera.'@);
   {? _tryb || _wyn:='IL' ?}
|? exec('get','#params',3020,2,OPERATOR.USER)='N' & __ptw_tab.IL_PTW>__ptw_tab.IL_POZ
|| {? _tryb<>2 || FUN.info('Należy podać ilość mniejszą lub równą %1.'@[form(__ptw_tab.IL_POZ,,3)]) ?};
   {? _tryb=1  || _wyn:='IL'
   |? _tryb=-1 || _wyn:=__ptw_tab.IL_POZ
   ?}
|| {? _tryb>0  || _wyn:=''
   |? _tryb=-1 || _wyn:=__ptw_tab.IL_PTW
   || _wyn:=1
   ?}
?};
{? ~_tryb & _wyn=0
|| __ptw_tab.IL_PTW:=__ptw_tab.IL_POZ
|? _tryb>0 & _wyn<>''
|| ZDP_POZ.IL:=__ptw_tab.IL_POZ
?};
{? __ptw_tab.IL_PTW>0
||
   {? exec('zdn_lock','!lzk_zds_dptw',__ptw_tab.ZD_N_REF)
   || ''
   || __ptw_tab.IL_PTW:=0
   ?}
|| ''
?};
{? ~_tryb || __ptw_tab.put() ?};
_wyn


\zdpn_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: usuwanie naglowka potwierdzenia
::       (powiazania z realizacjami usuwane na wszelki wypadek, nie powinno dac sie usunac zrealizowanych potwierdzen)
::   WE: [_a] - 1-Zawsze pytanie, 2-Nie pytać jeśli brak pozycji, 0-po prostu nie pytać
::   WY: 1-usunięto 0-nie
::  OLD: \zdpn_del/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};
_res:=0;
ZD_NAG.cntx_psh();
ZDP_NAG.cntx_psh();
{? ZDP_NAG.r_lock(1,1,1)
||
   ZDP_NAG.get();
   {?  exec('czyTR_NZL','transport_wspolne',ZDP_NAG.uidref(),1)
   || FUN.info('Do potwierdzenia wystawiono dyspozycje transportowe.\nUsunięcie niemożliwe.'@)
   |? ZDP_NAG.STAT_REJ<>'T'
   ||
      {? {? _a=0 || 1
         |? _a=1 || FUN.ask('Usunąć potwierdzenie zamówień dostaw %1?'@[ZDP_NAG.SYM])
         || {? _a=2 &  exec('FindInSet','#table','ZDP_POZ','ZDP_NAG',ZDP_NAG.ref())
            || FUN.ask('Usunąć potwierdzenie zamówień dostaw %1?'@[ZDP_NAG.SYM])
            || 1
            ?}
         ?}
      ||
::       usunięcie potwierdzenia z listy zadań (już raczej niepotrzebne, są cleneary)
::         _params:=exec('mp_run_a','#b__box');
::         _params.ACT_UID:='LZK_ZDS_REAL';
::         _params.UIDREF:=ZDP_NAG.uidref();
::         _params.AKCJA:='Usuń potwierdzenie';
::         _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
::         exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZD_NAG',
::            exec('firstZD_NAG','!lzk_zds_real',ZDP_NAG.ref()));
::         exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZDP_NAG',ZDP_NAG.ref());
::         exec('mp_run','#b__box',_params);

         do();

         _clr_rp:="
            ZD_RP.index('ZDP_POZ');
            ZD_RP.prefix(_a,_a);
            {? ZD_RP.first()
            ||
               {!
               |?
                  ZD_RP.cntx_psh();
                  ZD_RP.clear();
                  ZD_RP.ZDP_POZ:='';
                  ZD_RP.put();
                  ZD_RP.cntx_pop();
                  ZD_RP.first()
               !}
            ?}
         ";

         _pom_tab:=POM.TAB;
         _pom_typdok:=POM.TYPDOK;
         POM.TAB:='ZDP_NAG';
         POM.TYPDOK:='PTW';
         _zd_nag:=tab_tmp(1,'ZD_NAG','STRING[16]','');
::       usuwanie pozycji
         ZDP_POZ.index('ZDP_NAG');
         ZDP_POZ.prefix(ZDP_NAG.ref());
         {? ZDP_POZ.first()
         ||
::          kasuje takze powiazania ZD_RP.ZDP_POZ (w aktywnej masce i w archiwum)
            ZD_RP.cntx_psh();
            OKR.cntx_psh();
            OKR.index('MC');
            OKR.prefix(REF.FIRMA,1);

            {!
            |?
::             w aktywnej masce
               ZD_RP.use('zdhip'+ST.ODDZ+'__');
               _clr_rp($ZDP_POZ.ref());
::             w archiwum
               {? OKR.first()
               ||
                  {!
                  |? _zdnag:=$exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"ZD_NAG",null());
                     _zd_nag.clear();
                     {? _zdnag<>'' & ~_zd_nag.find_key(_zdnag)
                     || _zd_nag.blank();
                        _zd_nag.ZD_NAG:=_zdnag;
                        _zd_nag.add(1)
                     ?};
                     ZD_RP.use('zdhip'+ST.ODDZ+($OKR.ROK+2));
                     _clr_rp($ZDP_POZ.ref());
                     OKR.next()
                  !}
               ?};

               _zd_p_ref:=ZDP_POZ.ZD_POZ;
               _del:=ZDP_POZ.del();
               _del
            !};
            {? (_zd_nag.clear(); _zd_nag.first())
            || {!
               |? ZD_NAG.clear();
                  {? ZD_NAG.seek(_zd_nag.ZD_NAG) || exec('ptw_stat','zamdst_ptw',,1) ?};
                  _zd_nag.next()
               !}
            ?};
            OKR.cntx_pop();
            ZD_RP.cntx_pop()
         ?};
         obj_del(_zd_nag);
::       usuniecie naglowka
::       kasuje takze powiazania ZD_RN.ZDP_NAG (w aktywnej masce i w archiwum)
         _clr_rn:="
            ZD_RN.index('ZDP_NAG');
            ZD_RN.prefix(_a,_a);
            {? ZD_RN.first()
            ||
               {!
               |?
                  ZD_RN.cntx_psh();
                  ZD_RN.clear();
                  ZD_RN.ZDP_NAG:='';
                  ZD_RN.put();
                  ZD_RN.cntx_pop();
                  ZD_RN.first()
               !}
            ?}
         ";
         ZD_RN.cntx_psh();
::       w aktywnej masce
         ZD_RN.use('zdhin'+ST.ODDZ+'__');
         _clr_rn($ZDP_NAG.ref());
::       w archiwum
         OKR.cntx_psh();
         OKR.index('MC');
         OKR.prefix(REF.FIRMA,1);
         {? OKR.first()
         ||
            {!
            |?
               ZD_RN.use('zdhin'+ST.ODDZ+($OKR.ROK+2));
               _clr_rn($ZDP_NAG.ref());
               OKR.next()
            !}
         ?};
         OKR.cntx_pop();
         ZD_RN.cntx_pop();

::       usuwa zalaczniki
         exec('deladok','dokum','ZDP_NAG');
         DOKUM.index('DOKUM');
         DOKUM.prefix(REF.FIRMA,$ZDP_NAG.ref);
         {? DOKUM.first()
         || undo();
            FUN.info('Potwierdzenie zamówień dostaw posiada załączniki.\nUsunięcie niemożliwe.'@)
         ?};

         {? do_state()<2 & ~Plugin.run('BEFORE_DELTAB_001',ZDP_NAG.ref()) & do_state() || undo() ?};
         ZDP_NAG.r_unlock();
         numer:=ZDP_NAG.NR;
         oldnumer:=1;
         _uid:=ZDP_NAG.uidref();
         exec('nr_old','numery');
         _res:=ZDP_NAG.del(1);

         end();
::       Uruchamian cleanera - czyszcze pozostałe po potwierdzeniu zamówienia zadania na TODO
         {? _res
         || exec('clean_record','#b__box',_uid,0)
         ?};

         POM.TAB:=_pom_tab;
         POM.TYPDOK:=_pom_typdok
      ?}
   || FUN.info('Potwierdzenie jest zaakceptowane.\nUsunięcie niemożliwe.'@)
   ?}
||
   {? FUN.ask('Dokument %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@[ZDP_NAG.SYM])
   || ZDP_NAG.r_lock(1,,1)
   ?}
?};
ZD_NAG.cntx_pop();
ZDP_NAG.cntx_pop();
_res


\zdpp_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: przed rekord dla pozycji potwierdzenia - szuka w ZD_POZ
::  OLD: \zdpp_rek/zd.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zdpp_rek','zamdst_ptw')


\chk_zdpp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: po rekord dla pozycji potwierdzenia
::   WE: [_a] - 0(domyślnie) - sprawdzenie 1-bez komunikatów, 2- kontrola tylko ilości na minus
::   WY: dla _a=0: '' lub pole do poprawy
::           _a=1: możliwa ilość do potwierdzenia
::  OLD: \chk_zdpp/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_nokomm:={? var_pres('_a')=type_of(0) || _a || 0 ?};
:: == zmienne do obliczenia ilosci max do potwierdzenia dla danej pozycji ==
:: POMOC.IL - ilosc pozycji potwierdzenia ZDP_POZ.IL przed redakcja
:: POMOC.IL_ZAM - ilosc zamowiona
:: POMOC.IL_PTW - suma potwierdzen dla pozycji zam. dostawy (_il_ptw)
:: POMOC.IL_REA - sume realizacji potwierdzen dla pozycji zam. dostawy
:: POMOC.IL_ZRE - suma realizacji pozycji zam. dostawy

:: _do_ptw - ilosc do potwierdzenia
_il_ptw:={? -(1+menu_txt)='p' || POMOC.IL_PTW-POMOC.IL || POMOC.IL_PTW ?};
_do_ptw:=POMOC.IL_ZAM-(POMOC.IL_ZRE-POMOC.IL_REA)-_il_ptw;

_dokl:=exec('jaka_dok_m','jm',POMOC.M);
ZDP_POZ.IL:=ZDP_POZ.IL$_dokl;
{? _nokomm=1 || _wyn:=ZDP_POZ.IL ?};

{? ~_nokomm || win_disp() ?};

{? {? _nokomm<>2 || ZDP_POZ.IL<=0 || ZDP_POZ.IL<0 ?}
||
   {? ~_nokomm
   || FUN.info('Należy podać ilość większą od zera.'@);
      _wyn:='IL'
   |? _nokomm=2
   || FUN.info('Należy podać ilość większą lub równą zero.'@);
      _wyn:='IL'
   || _wyn:=0
   ?}
|? exec('get','#params',3020,2,OPERATOR.USER)='N' & ZDP_POZ.IL>_do_ptw
||
   {? ~_nokomm
   || FUN.info('Suma potwierdzeń i realizacji dla pozycji zamówienia\nnie może być większa od ilości zamawianej.\n\n'
               'Maksymalna możliwa ilość do potwierdzenia to: %1 %2.'@[form(_do_ptw,,2),POMOC.M().J().KOD]);
      _wyn:='IL'
   |? _nokomm=2
   || _wyn:=''
   || _wyn:=_do_ptw
   ?}
?};
_wyn


\odsw_inf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: wyswietla informacje o potwierdzeniachzamowieniach i magazynach
::  OLD: \odsw_inf/rezerw.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~__ptwttab || grp_disp(__zdn_list,__zdn_sel) || grp_disp(__ptw_mat,__selmptw) ?};
exec('posZAM','!lzk_zds_dptw',__ptwttab);
1


\add_zdp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: dodaje pozycje z zamówień do potwierdzenia
::   WE: [_a] - 1-domyślnie DRAG&DROP, 2-Dołącz z listy wg zamówienia
::       [_b] - 0(domyślnie) zamówienie 1-indeksy materiałowe
::----------------------------------------------------------------------------------------------------------------------
_dandd:={? var_pres('_a')=type_of(0) || _a || 1 ?};
_indmt:={? var_pres('_b')=type_of(0) || _b || 0 ?};

{? _dandd=2
||
:: dodanie z poziomu listy
   _tab:=tab_tmp(1,'REF','INTEGER','');
   {? ~_indmt
   || __zdn_list.cntx_psh();
      _zdn:=__zdn_list.sel_aget();
      __zdn_list.sel_adel();
      {? _zdn.first()
      || {!
         |? {? (__zdn_list.clear(); __zdn_list.seek(_zdn.REF,)) & __zdn_list.WYB<2
            || _tab.blank();
               _tab.REF:=#__zdn_list.ref();
               _tab.add(1)
            ?};
            _zdn.next()
         !}
      |? __zdn_list.WYB<2
      || _tab.blank();
         _tab.REF:=#__zdn_list.ref();
         _tab.add(1)
      ?};
      __zdn_list.cntx_pop();
      obj_del(_zdn)
   || __ptw_mat.cntx_psh();
      _mat:=__ptw_mat.sel_aget();
      __ptw_mat.sel_adel();
      {? _mat.first()
      || {!
         |? {? (__ptw_mat.clear(); __ptw_mat.seek(_mat.REF,))
            || _tab.blank();
               _tab.REF:=#__ptw_mat.ref();
               _tab.add(1)
            ?};
            _mat.next()
         !}
      || _tab.blank();
         _tab.REF:=#__ptw_mat.ref();
         _tab.add(1)
      ?};
      __ptw_mat.cntx_pop();
      obj_del(_mat)
   ?}
|| _tab:=dnd_info('dropped_records')
?};

{? _dandd=2 & ~_tab.first()
|| {? ~_indmt
   || FUN.info('Nie dodano pozycji do potwierdzenia wg wskazanych zamówień.'@)
   || FUN.info('Nie dodano pozycji do potwierdzenia wg wskazanych indeksów.'@)
   ?}
|? _tab.size() & _tab.first()
 & {? ~_indmt
   || FUN.ask('Czy dodać wybrane zamówienia do potwierdzenia?'@)
   || FUN.ask('Czy dodać wybrane indeksy materiałowe do potwierdzenia?'@)
   ?}
|| {? ~_indmt
   || __zdn_list.cntx_psh();
      __ptw_tab.cntx_psh();
      _ndx:=__ptw_tab.ndx_tmp('',0,'ZD_N_REF',,,'ZD_P_REF',,);
      {!
      |? _ok:=-1;
         {? (__zdn_list.clear; __zdn_list.seek(_tab.REF,))
          & __zdn_list.WYB<2
          & exec('zdn_lock','!lzk_zds_dptw',__zdn_list.ZD_N_REF)
         || _wyb:=0;
            __ptw_tab.index(_ndx);
            __ptw_tab.prefix(__zdn_list.ZD_N_REF);
            {? __ptw_tab.first()
            || {!
               |? __ptw_tab.WYB:='T';
                  __ptw_tab.put(1);
                  __ptw_tab.next()
               !}
            ?};
            __zdn_list.WYB:=exec('ileWybPoz','!lzk_zds_dptw',__zdn_list.ZD_N_REF);
            __zdn_list.put(1)
         ?};
         _tab.next()
      !};
      __ptw_tab.ndx_drop(_ndx);
      __zdn_list.cntx_pop();
      __ptw_tab.cntx_pop()
   || __zdn_list.cntx_psh();
      __ptw_mat.cntx_psh();
      __ptw_tab.cntx_psh();
      _ndx:=__ptw_tab.ndx_tmp('',0,'M_REF',,);
      _ndz:=__zdn_list.ndx_tmp('',0,'ZD_N_REF',,);
      {!
      |? _ok:=-1;
         {? (__ptw_mat.clear; __ptw_mat.seek(_tab.REF,))
         || _wyb:=0;
            __ptw_tab.index(_ndx);
            __ptw_tab.prefix(__ptw_mat.M_REF);
            {? __ptw_tab.first() & exec('zdn_lock','!lzk_zds_dptw',__ptw_tab.ZD_N_REF)
            || {!
               |? __ptw_tab.WYB:='T';
                  {? __ptw_tab.put(1)
                  || __zdn_list.index(_ndz);
                     __zdn_list.prefix(__ptw_tab.ZD_N_REF);
                     {? __zdn_list.first()
                     || __zdn_list.WYB:=exec('ileWybPoz','!lzk_zds_dptw',__zdn_list.ZD_N_REF);
                        __zdn_list.put(1)
                     ?}
                  ?};
                  __ptw_tab.next()
               !}
            ?}
         ?};
         _tab.next()
      !};
      __ptw_tab.ndx_drop(_ndx);
      __zdn_list.ndx_drop(_ndz);
      __zdn_list.cntx_pop();
      __ptw_mat.cntx_pop();
      __ptw_tab.cntx_pop()
   ?}
?};
obj_del(_tab);
{? ~__ptwadd || grp_disp(__ptw_tab,__ptw_sel) ?};
1


\del_zdp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: dodaje pozycje z zamówień do potwierdzenia
::   WE: [_a] - 1-domyślnie DRAG&DROP, 0-nie, 2-Usuń z listy wg zamówienia
::----------------------------------------------------------------------------------------------------------------------
_dandd:={? var_pres('_a')=type_of(0) || _a || 1 ?};

{? _dandd=2
||
:: usunięcie z poziomu listy
   _tab:=tab_tmp(1,'REF','INTEGER','');
   __zdn_list.cntx_psh();
   __ptw_tab.cntx_psh();
   _ndx:=__ptw_tab.ndx_tmp('',0,'ZD_N_REF',,);
   _zdn:=__zdn_list.sel_aget();
   __zdn_list.sel_adel();
   {? _zdn.first()
   || {!
      |? {? (__zdn_list.clear(); __zdn_list.seek(_zdn.REF,)) & __zdn_list.WYB
         || __ptw_tab.index(_ndx);
            __ptw_tab.prefix(__zdn_list.ZD_N_REF,);
            {? __ptw_tab.first()
            || {!
               |? _tab.blank();
                  _tab.REF:=#__ptw_tab.ref();
                  _tab.add(1);
                  __ptw_tab.next()
               !}
            ?}
         ?};
         _zdn.next()
      !}
   |? __zdn_list.WYB
   || __ptw_tab.index(_ndx);
      __ptw_tab.prefix(__zdn_list.ZD_N_REF,);
      {? __ptw_tab.first()
      || {!
         |? _tab.blank();
            _tab.REF:=#__ptw_tab.ref();
            _tab.add(1);
            __ptw_tab.next()
         !}
      ?}
   ?};
   __ptw_tab.ndx_drop(_ndx);
   __zdn_list.cntx_pop();
   __ptw_tab.cntx_pop();
   obj_del(_zdn)
|| _ssize:=__ptw_tab.sel_size();

   _tab:={? _dandd || dnd_info('dropped_records')
         |? _ssize || __ptw_tab.sel_aget()
         || tab_tmp(1,'REF','INTEGER','')
         ?};
   {? ~_dandd
   || {? _ssize
      || __ptw_tab.sel_adel()
      || _tab.blank();
         _tab.REF:=#__ptw_tab.ref();
         _tab.add(1)
      ?}
   ?}
?};
_buf:=tab_tmp(1,'ZD_N_REF','STRING[16]','');
{? _dandd=2 & ~_tab.first()
|| FUN.info('Nie usunięto pozycji do potwierdzenia wg wskazanych zamówień.'@)
|? _tab.size() & _tab.first()
 & {? _dandd=2
   || FUN.ask('Czy usunąć wybrane pozycje do potwierdzenia wg wskazanych zamówień?'@)
   || FUN.ask('Czy usunąć wybrane pozycje do potwierdzenia?'@)
   ?}
|| __zdn_list.cntx_psh();
   __ptw_tab.cntx_psh();
   {!
   |? _ok:=-1;
      {? (__ptw_tab.clear; __ptw_tab.seek(_tab.REF,))
      || __ptw_tab.WYB:='N';
         __ptw_tab.IL_PTW:=0;
         __ptw_tab.put(1);
         {? (_buf.clear(); _buf.prefix(__ptw_tab.ZD_N_REF,); ~_buf.first())
         || _buf.blank();
            _buf.ZD_N_REF:=__ptw_tab.ZD_N_REF;
            _buf.add(1)
         ?}
      ?};
      _tab.next()
   !};
   _buf.clear();
   {? _buf.first()
   || __zdn_list.clear();
      {? __zdn_list.first()
      || {!
         |? {? (_buf.clear(); _buf.prefix(__zdn_list.ZD_N_REF,); _buf.first())
            || __zdn_list.WYB:=exec('ileWybPoz','!lzk_zds_dptw',__zdn_list.ZD_N_REF);
               __zdn_list.put(1)
            ?};
            __zdn_list.next()
         !}
      ?}
   ?};
   __zdn_list.cntx_pop();
   __ptw_tab.cntx_pop()
?};
obj_del(_tab);
obj_del(_buf);
grp_disp(__ptw_tab,__ptw_sel);
1


\zdnag_potwzal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: załączniki
::  OLD: \zdp_nag_zal/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZDP_NAG.name+2='__'
|| exec('sel_dok','dokum','ZDP_NAG',,,,1)
|| exec('sel_dok','dokum','ZDP_NAG',0,1,,1)
?};
''


\ileWybPoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: zwraca typ przepisania pozycji
::   WE: _a - ZD_N_REF
::   WY: 0-żadna 1-niektóre 2-wszystkie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
__ptw_tab.cntx_psh();
_ndx:=__ptw_tab.ndx_tmp('',0,'WYB',,,'ZD_N_REF',,,'ZD_P_REF',,);
__ptw_tab.index(_ndx);
__ptw_tab.prefix('T',_a,);
_sizeT:=__ptw_tab.size();
__ptw_tab.prefix('N',_a,);
_sizeN:=__ptw_tab.size();
__ptw_tab.ndx_drop(_ndx);
__ptw_tab.cntx_pop();
_res:={? ~_sizeN || 2
      |? ~_sizeT || 0
      || 1
      ?};
_res


\zd_n_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Formuła określiająca ikony
::----------------------------------------------------------------------------------------------------------------------
{? __zdn_list.WYB=2 || exec('zaakceptowany','icon')
|? __zdn_list.WYB=1 || exec('zarejestrowany','icon')
|? __zdn_list.WYB=0 || exec('pusta','#icon')
|| exec('pusta','#icon')
?}


\ptwn_sym_ib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: Formuła określiająca ikony
::----------------------------------------------------------------------------------------------------------------------
{? __ptw_tab.IL_PTW>0 || exec('zaakceptowany','icon')
|| exec('pusta','#icon')
?}


\zdptw_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: poprawa nagłówka potwierdzenia zamowień dostaw
::  OLD: \zdpn_put/zd.fml
::----------------------------------------------------------------------------------------------------------------------
ZDP_NAG.cntx_psh();
{? exec('ptw_lock','zamdst_ptw') & ZDP_NAG.r_lock(1,1,1)
||
   _var_zdptwpop:=exec('var_zdptwpop','zamdst_ptw');
   _var_zdptwpop.SYM_DST:=ZDP_NAG.SYM_DST;
   _var_zdptwpop.KH:=ZDP_NAG.KH;
   _var_zdptwpop.TRANSP:=ZDP_NAG.TRANSP;
   _var_zdptwpop.LIST_PRZ:=ZDP_NAG.LIST_PRZ;
   _var_zdptwpop.FAKTURA:=ZDP_NAG.FAKTURA;
   _var_zdptwpop.D_WYS:=ZDP_NAG.D_WYS;
   _var_zdptwpop.D_REA:=ZDP_NAG.D_REA;
   _var_zdptwpop.PO_FIRST:=0;

   params_set('context',params_get(),'var_zdptwpop',_var_zdptwpop);

   exec('zdptw_win_edit_set','zamdst_ptw');
   {? ZDP_NAG.STAT_REJ='N'
   ||
      _stat_rej:=ZD_NAG.STAT_REJ;
      {? ZDP_NAG.edit("params_exec('zdpn_chk','zamdst_ptw')")
      || {? _stat_rej=ZD_NAG.STAT_REJ || exec('zdptw_pop_po','zamdst_ptw') ?}
      ?}
   ||
      FUN.info({? ZDP_NAG.STAT_REJ='Z'
               || 'Zakończono redakcję potwierdzenia zamówień dostaw %1.'
                  '\n\nModyfikacja nagłówka potwierdzenia zamówień niemożliwa.'@[ZDP_NAG.SYM]
               || 'Zaakceptowano potwierdzenie zamówień dostaw %1.'
                  '\n\nModyfikacja nagłówka potwierdzenia zamówień niemożliwa.'@[ZDP_NAG.SYM]
               ?})
   ?}
?};
ZDP_NAG.r_unlock();
ZDP_NAG.cntx_pop();
''


\ptw_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: akceptacja wyboru pozycji do potwierdzenia
::----------------------------------------------------------------------------------------------------------------------
_selptw:=0;
__ptw_tab.cntx_psh();
__ptw_tab.clear();
__ptw_tab.prefix('T');
{? __ptw_tab.first()
|| {!
   |? _selptw:=__ptw_tab.IL_PTW>0;
      ~_selptw & __ptw_tab.next()
   !}
?};
__ptw_tab.cntx_pop();

{? _selptw
 | (~_selptw
    & FUN.ask('Ponieważ nie wskazano żadnej pozycji do potwierdzenia (ilość do potwierdzenia)\n'
              'żadna pozycja nie zostanie przeniesiona na potwierdzenie zamówień dostaw %1.\n\n'
              'Czy rezygnacja z dołączenia pozycji do potwierdzenia?'@[ZDP_NAG.SYM])
    )
|| sel_exit()
|| ''
?}


\posZAM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: wyświetlenie pozycji do potwierdzenia danego zamówienia
::   WE: [_a] - 0(domyślnie)-wg zamówienia 1-wg indeksu materiałowego
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};

__ptw_tab.cntx_psh();
{? ~_tryb || exec('posPRF','!lzk_zds_dptw') || exec('posPRM','!lzk_zds_dptw') ?};
__ptwttab:=_tryb;
{? ~__ptwadd || grp_disp(__ptw_tab,__ptw_pos) ?};
__ptw_tab.cntx_pop();
~~


\posPRF
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: wyświetlenie pozycji do potwierdzenia danego zamówienia
::----------------------------------------------------------------------------------------------------------------------
__ptw_tab.index(__ptw_ndx);
__ptw_tab.prefix(__zdn_list.ZD_N_REF);
__ptw_tab.first();
~~


\posPRM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: wyświetlenie pozycji do potwierdzenia danego indeksu na zamówieniach zamówienia
::----------------------------------------------------------------------------------------------------------------------
__ptw_tab.index(__ptw_ndm);
__ptw_tab.prefix(__ptw_mat.M_REF);
__ptw_tab.first();
~~


\dispZAM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: wyświetlenie nagłowek zamówienia
::----------------------------------------------------------------------------------------------------------------------
ZDP_NAG.cntx_psh();
ZDP_POZ.cntx_psh();
ZD_NAG.cntx_psh();
ZD_POZ.cntx_psh();
ZD_NAG.prefix();
{? ZD_NAG.seek(__zdn_list.ZD_N_REF)
|| _refn:=ZD_NAG.ref();
   ZD_POZ.ZD_NAG().SYM;
   _edit:=ZD_NAG.win_edit('?');
   _sele:=ZD_POZ.win_sel('?');
   _red:=ZD_NAG.mk_edit('',,'zamdst_xxx');
   ZD_NAG.win_ewin(_red,,'RED');
   ZD_NAG.win_edit(_red);
   ZD_POZ.win_sel('WER_DOK');
   ZD_POZ.index('POZ');
   ZD_POZ.prefix(_refn);
   ZD_POZ.first();
   exec('dselWithNag','okienka','ZD_POZ','WER_DOK','ZD_NAG',_red);
   ZD_NAG.win_edit(_edit);
   ZD_POZ.win_sel(_sele)
?};
ZDP_NAG.cntx_pop();
ZDP_POZ.cntx_pop();
ZD_NAG.cntx_pop();
ZD_POZ.cntx_pop();
~~


\dispPOZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.02]
:: OPIS: wyświetlenie pozycje zamówienia
::----------------------------------------------------------------------------------------------------------------------
ZDP_NAG.cntx_psh();
ZDP_POZ.cntx_psh();
ZD_NAG.cntx_psh();
ZD_POZ.cntx_psh();
ZD_POZ.prefix();
{? ZD_POZ.seek(__ptw_tab.ZD_P_REF)
|| ZD_POZ.win_edit('RED');
   _edit:=ZD_POZ.win_edit('?');
   _sel:=ZD_POZ.win_sel('?');
   _atrmjs:=ATR.MJS;
   {? (1+ZD_POZ.MG().TYP)='D'
   || ATR.MJS:='ZD_POZ';
      ATR.M_ATR:=ZD_POZ.M().M_ATR
   || ATR.MJS:='M_ATR';
      M_ATR.blank(0);
      ATR.M_ATR:=null()
   ?};
   {? exec('czytadkc','mat_atr',ZD_POZ.DK_C,ZD_POZ.RDKC)
   || _ndit:='DISP';
      ZD_POZ.win_edit(_ndit)
   ?};
   exec('set_efld_opt','zamdst_poz');
   exec('set_efld_opt','mat_atr',ATR.MJS);

   exec('dispWithFakso','fakso','ZD_POZ');
   ZD_POZ.win_edit(_edit);
   ZD_POZ.win_sel(_sel)
?};
ATR.MJS:=_atrmjs;
ZDP_NAG.cntx_pop();
ZDP_POZ.cntx_pop();
ZD_NAG.cntx_pop();
ZD_POZ.cntx_pop();
~~


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::       [_b] - tablica z parametrami wejściowymi
::   WY: obj_new() - obiekt wynikowy
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
{? var_pres('_b')>100
|| _in:=_b
|| _in:=params_get().in
?};
params_exec('zd_clean','zamdst_nag',_mp,_in)


\pop_zdp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: poprawia zaznaczone pozycjedo potwierdzenia
::----------------------------------------------------------------------------------------------------------------------
_sel:=__ptw_tab.sel_aget();
__ptw_tab.sel_adel();
_edit:=ZDP_POZ.win_edit('RED');
ZD_Z.RCEN:=1;

_ctrl:=exec('get','#params',3020,2,OPERATOR.USER)='N';
ZDP_POZ.ZD_N_SYM:=__ptw_tab.ZD_N_SYM;
ZDP_POZ.ZD_P_POZ:=__ptw_tab.ZD_P_POZ;
ZDP_POZ.IL:=__ptw_tab.IL_PTW;
ZDP_POZ.CENA:=__ptw_tab.CENA;
ZDP_POZ.CWAL:=__ptw_tab.CWAL;
ZDP_POZ.WAL:=exec('FindAndGet','#table',SLO,__ptw_tab.WAL,,,null());
ZDP_POZ.KRS:=__ptw_tab.KRS;
ZDP_POZ.ZKON:=exec('FindInSet','#table','ZKON','SYM',__ptw_tab.ZKON,,,1,,null());
ZDP_POZ.ZD_POZ:=__ptw_tab.ZD_P_REF;
ZDP_POZ.M:=exec('FindAndGet','#table',M,__ptw_tab.M_REF,,,null());
ZDP_POZ.JM:=ZDP_POZ.M().J;
ZDP_POZ.D_WYS:=__ptw_tab.D_WYS;

{? ~_sel.first()
|| __ptw_tab.get();
   ZDP_POZ.efld_opt('RED','enable=1',ZDP_POZ,'KRS');
   ZDP_POZ.efld_opt('RED','enable=1',ZDP_POZ,'CENA');
   {? ZDP_POZ.edit("exec('ptw_aepp','!lzk_zds_dptw',1)")
   || __ptw_tab.IL_PTW:=ZDP_POZ.IL;
      __ptw_tab.CENA:=ZDP_POZ.CENA;
      __ptw_tab.CWAL:=ZDP_POZ.CWAL;
      __ptw_tab.ZKON:=ZDP_POZ.ZKON().SYM;
      __ptw_tab.D_WYS:={? ZDP_POZ.D_WYS<>date(0,0,0) || ZDP_POZ.D_WYS || ZDP_POZ.ZDP_NAG().D_WYS ?};
      __ptw_tab.put(1)
   ?}
||
:: kontrola walutowości
   _wal:=null();
   __ptw_tab.cntx_psh();
   ZD_NAG.cntx_psh();
   ZD_POZ.cntx_psh();
   {!
   |? {? (__ptw_tab.clear(); __ptw_tab.prefix('T'); __ptw_tab.seek(_sel.REF,))
       & (_msk:=form(8+__ptw_tab.ZD_P_REF)+3;
          ZD_NAG.use((ZD_NAG.name()-3)+_msk);
          ZD_POZ.use((ZD_POZ.name()-3)+_msk);
          ZD_POZ.prefix();
          ZD_POZ.seek(__ptw_tab.ZD_P_REF))
      || {? _wal<>null()
         || ZD_Z.RCEN:=ZD_POZ.ZD_NAG().WAL=_wal
         || _wal:=ZD_POZ.ZD_NAG().WAL
         ?}
      ?};
      ZD_Z.RCEN & _sel.next()
   !};
   ZDP_POZ.CENA:=0;
   ZDP_POZ.CWAL:=0;
   {? _wal<>null() & _wal<>INFO.NAROD &_sel.size()>1
   || ZDP_POZ.efld_opt('RED','enable=0',ZDP_POZ,'KRS');
      ZDP_POZ.efld_opt('RED','enable=0',ZDP_POZ,'CENA')
   || ZDP_POZ.efld_opt('RED','enable=1',ZDP_POZ,'KRS');
      ZDP_POZ.efld_opt('RED','enable=1',ZDP_POZ,'CENA')
   ?};
   {? _sel.first() & ZDP_POZ.edit("exec('ptw_aepp','!lzk_zds_dptw',2)")
   || _ilep:=ZDP_POZ.IL;
      _cena:=ZDP_POZ.CENA;
      _cwal:=ZDP_POZ.CWAL;
      _zkon:=ZDP_POZ.ZKON().SYM;
      _d_wys:=ZDP_POZ.D_WYS;
      {!
      |? {? (__ptw_tab.clear(); __ptw_tab.prefix('T'); __ptw_tab.seek(_sel.REF,))
          & (_msk:=form(8+__ptw_tab.ZD_P_REF)+3;
             ZD_NAG.use((ZD_NAG.name()-3)+_msk);
             ZD_POZ.use((ZD_POZ.name()-3)+_msk);
             ZD_POZ.prefix();
             ZD_POZ.seek(__ptw_tab.ZD_P_REF))
         || _dokl:=exec('jaka_dok_m','jm',ZD_POZ.M);
            _ilwyb:=_ilep$_dokl;
            ZDP_POZ.ZD_POZ:=$ZD_POZ.ref();
            ZDP_POZ.M:=ZD_POZ.M;
            {? ZD_POZ.ZD_NAG().WAL<>INFO.NAROD & ZD_POZ.ZD_NAG().KRS>0
            || _cwyb:=_cwal*ZD_POZ.ZD_NAG().KRS $ZD_POZ.M().DOKL_Z
            || _cwyb:=_cena $ZD_POZ.M().DOKL_Z
            ?};
            _ilptw:={? _ctrl || __ptw_tab.IL_POZ || _ilwyb ?};
            _put:=0;
            {? _ilep>0 & _ilwyb<=_ilptw
            || __ptw_tab.IL_PTW:=_ilwyb;
               _put:=1
            |? _ilep>0 & _ilptw>0
            || __ptw_tab.IL_PTW:=_ilptw;
               _put:=1
            ?};
            {? ZD_Z.RCEN & _cwyb>0
            || __ptw_tab.CENA:=_cwyb;
               _put:=1
            ?};
            {? ZD_Z.RCEN & _cwal>0
            || __ptw_tab.CWAL:=_cwal;
               _put:=1
            ?};
            {? _zkon<>''
            || __ptw_tab.ZKON:=_zkon;
               _put:=1
            ?};
            {? _d_wys<>date(0,0,0)
            || __ptw_tab.D_WYS:=_d_wys;
               _put:=1
            ?};
            {? _put || __ptw_tab.put(1) ?}
         ?};
         _sel.next()
      !}
   ?};
   __ptw_tab.cntx_pop();
   ZD_NAG.cntx_pop();
   ZD_POZ.cntx_pop()
?};
obj_del(_sel);
ZDP_POZ.win_edit(_edit);
''


\padd_zdp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: dodaje pozycje do potwierdzenia
::----------------------------------------------------------------------------------------------------------------------
_winsel:=__zdn_list.grp_make('Dodanie pozycji do potwierdzenia'@,,'#addgrpzdp');
__zdn_list.grp_sel(_winsel,__zdn_list,__zdn_sel,'Zamówienia do potwierdzenia'@
    ,"''",,,15,,,,,'maximized');
__zdn_list.grp_sel(_winsel,__ptw_mat,__selmptw,'Indeksy do potwierdzenia'@
    ,"''",,,15,,,,,'maximized');

__ptwadd:=1;
__zdn_list.cntx_psh();
__ptw_mat.cntx_psh();
__zdn_list.win_sel(_winsel);
__zdn_list.prefix();
{? __zdn_list.first() || __zdn_list.select() ?};
__zdn_list.cntx_pop();
__ptw_mat.cntx_pop();
__ptwadd:=0;
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:37 4cca74ce0d35f7e15eb01a94a8352f058b5ca70f59d3ed318a8d8d73c9d11aa6e450250fb62385a9e4eaf0f07b6fe3d8cba26cae8472baea6eae9b94fca71bc05741c81ae82a98d599673a53e65f108f3fe954ad432f3e96cfae646350c5a71a0cfdb33585b53ab63ee8879ac0502c89924ebd059d049fb6ef35fcd05b71b7e1
