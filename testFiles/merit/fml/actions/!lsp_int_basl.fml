:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lsp_int_basl.fml
:: Utworzony: 04.08.2022
:: Autor: NN
:: Systemy:
::======================================================================================================================
:: Zawartość: BaseLinker - integracja
::======================================================================================================================
\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: BaseLinker - integracja - czynność LSP_INT_BASL
::----------------------------------------------------------------------------------------------------------------------
:: PARAMETRY WE:
::# kind=WE,   symbol=FUNC, type=STRING,   name=Funkcja do wykonania,   required=T, fml_val="exec('func','!lsp_int_basl')"
:: PARAMETRY WY:
::# kind=WY,   symbol=RESP,      type=NUMBER,   name=Wynik synchronizacji, required=N
:: WŁAŚCIWOŚCI CZYNNOŚCI
::# properties=SERVICE

_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;


_func:='Synchro';
{? type_of(_in.FUNC)=type_of('')
||
   {? _in.FUNC='Synchro'
   ||
      _func:='Synchro'
   ?};
   {? _in.FUNC='Zamówienia'
   ||
      _func:='Zamówienia'
   ?};
   {? _in.FUNC='Magazyny'
   ||
      _func:='Magazyny'
   ?};
   {? _in.FUNC='Cenniki'
   ||
      _func:='Cenniki'
   ?}
?};
{? _func='Synchro'
|| _result:=exec('sync','!lsp_int_basl');
   _result:={? _result=1 || 11 || _result ?}
?};
{? _func='Zamówienia'
|| _result:=exec('get_orders','!lsp_int_basl');
   _result:={? _result=1 || 12 || 120 ?}
?};
{? _func='Magazyny'
|| _result:=exec('send_stock','!lsp_int_basl');
   _result:={? _result=1 || 13 || 130 ?}
?};
{? _func='Cenniki'
|| _result:=exec('send_prices','!lsp_int_basl');
   _result:={? _result=1 || 14 || 140 ?}
?};

_out.RESP:={? type_of(_result)=type_of(1) || _result || {? _result='' || 1 || 0 ?} ?};

_mp.save(,_out);

_mp.done()


\sync
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Obsługa synchro
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('sync_uni','!lsp_int_basl','M','M','addInventoryProduct',M);
{? ~_wyn || return(101) ?};
_wyn:=exec('sync_uni','!lsp_int_basl','M_IMG','M','addInventoryProduct',M_IMG);
{? ~_wyn || return(102) ?};
_wyn:=exec('sync_uni','!lsp_int_basl','SM','M','addInventoryProduct',SM,1);
{? ~_wyn || return(103) ?};
_wyn:=exec('sync_uni','!lsp_int_basl','TAP','M','addInventoryProduct',TAP,1);
{? ~_wyn || return(104) ?};
_wyn:=exec('sync_uni','!lsp_int_basl','MGR','MGR','addInventoryCategory',MGR);
{? ~_wyn || return(105) ?};
_wyn:=exec('sync_uni','!lsp_int_basl','MGRP','MGRP','addInventoryCategory',MGRP,1);
{? ~_wyn || return(106) ?};
_wyn:=exec('sync_uni','!lsp_int_basl','TAR','TAR','addInventoryPriceGroup',TAR);
{? ~_wyn || return(107) ?};
_wyn:=exec('sync_zk_n','!lsp_int_basl');
{? ~_wyn || return(108) ?};
_wyn:=exec('sync_faks','!lsp_int_basl');
{? ~_wyn || return(109) ?};
_wyn:=exec('sync_dokum','!lsp_int_basl');
{? ~_wyn || return(110) ?};
_wyn

\sync_uni
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Obsługa synchro
::   WE:  _a - nazwa tabeli
::        _b - indeks
::        _c - nazwa formuły
::        [_d] - tabela
::        [_e] - 1 - dodatkowy parametr
::----------------------------------------------------------------------------------------------------------------------
_tabname:=_a;
_sync_name:='BASELINKER';
_il_rec:=100;
FIRMA.cntx_psh();
_firma:=REF.FIRMA().SYMBOL;
FIRMA.cntx_pop();
_repl:=0;
_wyn:=1;
_param:={? var_pres('_e')=type_of(1) || _e || 0 ?};

_tab:=proc_exe('new_sync@synchro', _sync_name, 0, _tabname, _il_rec,_firma);
{? _tab.first()
||
   {!|?
      _ref:=null();
      {? _a='M' | _a='MGR' | _a='MGRP' | _a='TAR'
      ||
         _d.cntx_psh();
         _d.prefix();
         {? _d.seek(_tab.REF) || _ref:=_d.ref() ?};
         BASLIN_K.cntx_psh();
         BASLIN_K.index('ID');
         BASLIN_K.prefix('K');
         {? BASLIN_K.first() & _ref<>null()
         ||
            {!|?
               {? BASLIN_K.ID<>''
               ||
                  _mask:=exec('get_mask','!zws_par_basl',BASLIN_K.NAME+'_'+_a);
                  _send:='ok';
                  SYNC_ID.cntx_psh();
                  SYNC_ID.use(_mask);
                  SYNC_ID.index('REK');
                  SYNC_ID.prefix($_ref);
                  {? SYNC_ID.first() & SYNC_ID.ID<>'' & SYNC_ID.ID<>'brak'
                  || _send:={? _param || exec(_c,'base_linker',_param) || exec(_c,'base_linker') ?}
                  ?};
                  SYNC_ID.cntx_pop();
                  _wyn:=_send<>''
               ?};
            BASLIN_K.next() & _wyn
            !}
         ?};
         BASLIN_K.cntx_pop();
         _d.cntx_pop()
      ?};
      {? _a='M_IMG' | _a='SM' | _a='TAP'
      ||
         _ref:=null();
         _d.cntx_psh();
         _d.prefix();
         {? _d.seek(_tab.REF,ref_name(_tab.REF)) || _ref:=_d.M ?};
         BASLIN_K.cntx_psh();
         BASLIN_K.index('ID');
         BASLIN_K.prefix('K');
         {? BASLIN_K.first() & _ref<>null()
         ||
            {!|?
               {? BASLIN_K.ID<>''
               ||
                  _mask:=exec('get_mask','!zws_par_basl',BASLIN_K.NAME+'_M');
                  _send:='ok';
                  SYNC_ID.cntx_psh();
                  SYNC_ID.use(_mask);
                  SYNC_ID.index('REK');
                  SYNC_ID.prefix($_ref);
                  {? SYNC_ID.first() & SYNC_ID.ID<>'' & SYNC_ID.ID<>'brak'
                  || _send:={? _param || exec(_c,'base_linker',_param) || exec(_c,'base_linker') ?}
                  ?};
                  SYNC_ID.cntx_pop();
                  _wyn:=_send<>''
               ?};
            BASLIN_K.next() & _wyn
            !}
         ?};
         BASLIN_K.cntx_pop();
         _d.cntx_pop()
      ?};
   _tab.next()
   !}
?};
{? _wyn || proc_exe('new_sync_id_del@synchro',_sync_name,0,_tabname, _tab.ID, _tab.IDSYNC) ?};
{? var_pres('_tab')>100 || obj_del(_tab) ?};
_wyn


\sync_zk_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Obsługa synchro
::----------------------------------------------------------------------------------------------------------------------
_tabname:='ZK_N';
_sync_name:='BASELINKER';
_il_rec:=100;
_firma:=REF.FIRMA().SYMBOL;
_wyn:=1;
_tab:=proc_exe('new_sync@synchro', _sync_name, 0, _tabname, _il_rec,_firma);
{? _tab.first()
||
   ZK_N.cntx_psh();
   ZK_N.prefix();
   {!|?
      {? _tab.REF<>'' & ZK_N.seek(_tab.REF,ref_name(_tab.REF)) & ZK_N.BASLIN_O<>0
      || _wyn:=exec('setOrderStatus','base_linker',ZK_N.ref())
      ?};
      _tab.next() & _wyn
   !};
   ZK_N.cntx_pop()
?};
{? _wyn || proc_exe('new_sync_id_del@synchro',_sync_name,0,_tabname, _tab.ID, _tab.IDSYNC) ?};
{? var_pres('_tab')>100 || obj_del(_tab) ?};
_wyn


\sync_faks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Obsługa synchro
::----------------------------------------------------------------------------------------------------------------------
_tabname:='FAKS';
_sync_name:='BASELINKER';
_il_rec:=100;
_firma:=REF.FIRMA().SYMBOL;
_wyn:=1;
_tab:=proc_exe('new_sync@synchro', _sync_name, 0, _tabname, _il_rec,_firma);
{? _tab.first()
||
   FAKS.cntx_psh();
   FAKS.prefix();
   ZK_RN.cntx_psh();
   DOKUM.cntx_psh();
   ZK_N.cntx_psh();
   KH_DOD.cntx_psh();
   OP.cntx_psh();

   _Names:=DOKUM.names();
   SKID.ROK_F:=exec('zwrrok_f','okresy',date());
   {? SKID.ROK_F<>null || OP.use('operac'+SKID.ROK_F().KOD) ?};
   {!|?
      {? _tab.REF<>'' & FAKS.seek(_tab.REF,ref_name(_tab.REF))
      || ZK_RN.use('zkhin'+FAKS.ODDZ+'__');
         ZK_RN.index('FK');
         ZK_RN.prefix($FAKS.ref(),);
         {? ZK_RN.first() & ZK_RN.N<>null() & ZK_N.use(ref_name(ZK_RN.N)) & ZK_RN.N().BASLIN_O<>0 & ZK_RN.N().KH<>null & ZK_RN.N().BASLIN_K<>null()
:: sprawdzenie czy jest zezwolenie na wysłanie e-faktury
         & (KH_DOD.index('KH_DOD'); KH_DOD.prefix(REF.FIRMA,ZK_RN.N().KH); KH_DOD.first())
         & (ZK_RN.N().BASLIN_K().EFAK='W' |
           (ZK_RN.N().BASLIN_K().EFAK='E' & KH_DOD.EFAKTURA='T') |
           (ZK_RN.N().BASLIN_K().EFAK='B' & KH_DOD.EFAKTURA='B') |
           (ZK_RN.N().BASLIN_K().EFAK='EB' & (KH_DOD.EFAKTURA='T' | KH_DOD.EFAKTURA='B')))
         ||
            {? OP.index('SYM');OP.prefix(FAKS.NWAL,FAKS.SYM,);OP.first()
               & ( _loop:=_Names.first();
                  {? _loop
                  ||
                     {!|?
                        DOKUM.use(_Names.NAME);
                        DOKUM.prefix(REF.FIRMA,$FAKS.ref(),);
                        _wyn_dok:=DOKUM.first();
                        ~_wyn_dok & _Names.next()
                     !}
                  ?};
                  _wyn_dok) & DOKUM.DOKUM
            ||
               _series:=exec('getSeries','base_linker');
               _notexist:=exec('getInvoices','base_linker',$ZK_RN.N().BASLIN_O);
               {? _series<>0 & _notexist
               || _invoice_id:=exec('addInvoice','base_linker',$ZK_RN.N().BASLIN_O,$_series);
                  {? _invoice_id<>''
                  || _wyn:=exec('addOrderInvoiceFile','base_linker',_invoice_id,DOKUM.DOKUM,FAKS.SYM)
                  ?}
               |? _notexist<0
               || _wyn:=0
               ?}
            ?}
         ?}
      ?};
      _tab.next() & _wyn
   !};
   FAKS.cntx_pop();
   ZK_RN.cntx_pop();
   DOKUM.cntx_pop();
   ZK_N.cntx_pop();
   KH_DOD.cntx_pop();
   OP.cntx_pop()
?};
{? _wyn || proc_exe('new_sync_id_del@synchro',_sync_name,0,_tabname, _tab.ID, _tab.IDSYNC) ?};
{? var_pres('_tab')>100 || obj_del(_tab) ?};
_wyn


\sync_dokum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Obsługa synchro
::----------------------------------------------------------------------------------------------------------------------
_tabname:='DOKUM';
_sync_name:='BASELINKER';
_il_rec:=100;
_firma:=REF.FIRMA().SYMBOL;
_wyn:=1;
_tab:=proc_exe('new_sync@synchro', _sync_name, 0, _tabname, _il_rec,_firma);
{? _tab.first()
||
   FAKS.cntx_psh();
   FAKS.prefix();
   ZK_RN.cntx_psh();
   DOKUM.cntx_psh();
   ZK_N.cntx_psh();
   KH_DOD.cntx_psh();
   OP.cntx_psh();

   SKID.ROK_F:=exec('zwrrok_f','okresy',date());
   {? SKID.ROK_F<>null || OP.use('operac'+SKID.ROK_F().KOD) ?};
   {!|?
      {? _tab.REF<>'' & DOKUM.seek(_tab.REF,ref_name(_tab.REF)) & (5+DOKUM.REFSQL)='faktu'
         & FAKS.seek(DOKUM.REFSQL,ref_name(DOKUM.REFSQL)) & DOKUM.DOKUM
      || ZK_RN.use('zkhin'+FAKS.ODDZ+'__');
         ZK_RN.index('FK');
         ZK_RN.prefix($FAKS.ref(),);
         {? ZK_RN.first() & ZK_RN.N<>null() & ZK_N.use(ref_name(ZK_RN.N)) & ZK_RN.N().BASLIN_O<>0 & ZK_RN.N().KH<>null & ZK_RN.N().BASLIN_K<>null()
:: sprawdzenie czy jest zezwolenie na wysłanie e-faktury
         & (KH_DOD.index('KH_DOD'); KH_DOD.prefix(REF.FIRMA,ZK_RN.N().KH); KH_DOD.first())
         & (ZK_RN.N().BASLIN_K().EFAK='W' |
           (ZK_RN.N().BASLIN_K().EFAK='E' & KH_DOD.EFAKTURA='T') |
           (ZK_RN.N().BASLIN_K().EFAK='B' & KH_DOD.EFAKTURA='B') |
           (ZK_RN.N().BASLIN_K().EFAK='EB' & (KH_DOD.EFAKTURA='T' | KH_DOD.EFAKTURA='B')))
         ||
            {? OP.index('SYM');OP.prefix(FAKS.NWAL,FAKS.SYM,);OP.first()
            ||
               _series:=exec('getSeries','base_linker');
               _notexist:=exec('getInvoices','base_linker',$ZK_RN.N().BASLIN_O);
               {? _series<>0 & _notexist
               || _invoice_id:=exec('addInvoice','base_linker',$ZK_RN.N().BASLIN_O,$_series);
                  {? _invoice_id<>''
                  || _wyn:=exec('addOrderInvoiceFile','base_linker',_invoice_id,DOKUM.DOKUM,FAKS.SYM)
                  ?}
               |? _notexist<0
               || _wyn:=0
               ?}
            ?}
         ?}
      ?};
      _tab.next() & _wyn
   !};
   FAKS.cntx_pop();
   ZK_RN.cntx_pop();
   DOKUM.cntx_pop();
   ZK_N.cntx_pop();
   KH_DOD.cntx_pop();
   OP.cntx_pop()
?};
{? _wyn || proc_exe('new_sync_id_del@synchro',_sync_name,0,_tabname, _tab.ID, _tab.IDSYNC) ?};
{? var_pres('_tab')>100 || obj_del(_tab) ?};
_wyn


\get_orders
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Pobieranie zamówień
::   WE: [_a] - identyfikator źródła zamówień
::----------------------------------------------------------------------------------------------------------------------
_baslin_k:={? var_pres('_a')=type_of('') & _a<>'' || _a || '' ?};
_wyn:=1;
BASLIN_K.cntx_psh();
BASLIN_K.index('ID');
BASLIN_K.prefix('Z',_baslin_k);
{? BASLIN_K.first()
||
   {!|?
      _wyn:=exec('getOrders','base_linker',BASLIN_K.ID,BASLIN_K.NAME,BASLIN_K.ZK_N_ID);
      _wyn & BASLIN_K.next()
   !}
?};
BASLIN_K.cntx_pop();
_wyn


\send_prices
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wysyłka cenników
::   WE: [_a] - identyfikator kanału sprzedaży
::----------------------------------------------------------------------------------------------------------------------
_baslin_k:={? var_pres('_a')=type_of('') & _a<>'' || _a || '' ?};
_wyn:=1;
BASLIN_K.cntx_psh();
BASLIN_K.index('ID');
BASLIN_K.prefix('K',_baslin_k);
{? BASLIN_K.first()
||
   {!|?
      _wyn:=exec('updateInventoryProductsPrices','base_linker');
      _wyn & BASLIN_K.next()
   !}
?};
BASLIN_K.cntx_pop();
_wyn


\send_stock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wysyłka cenników
::   WE: [_a] - identyfikator kanału sprzedaży
::----------------------------------------------------------------------------------------------------------------------
_baslin_k:={? var_pres('_a')=type_of('') & _a<>'' || _a || '' ?};
_wyn:=1;
BASLIN_K.cntx_psh();
BASLIN_K.index('ID');
BASLIN_K.prefix('K',_baslin_k);
{? BASLIN_K.first()
||
   {!|?
      _wyn:=exec('updateInventoryProductsStock','base_linker');
      _wyn & BASLIN_K.next()
   !}
?};
BASLIN_K.cntx_pop();
_wyn


\func
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Formuła na wartość parametru FUNC
::----------------------------------------------------------------------------------------------------------------------
_choice:=FUN.choice('Funkcja do wykonania: '@,,'Synchro','Zamówienia','Magazyny','Cenniki');
{? _choice=1 || 'Synchro'
|? _choice=2 || 'Zamówienia'
|? _choice=3 || 'Magazyny'
|? _choice=4 || 'Cenniki'
|| 'Synchro'
?}


\merge_param
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Formuła łączy parametry z tej samej czynności do jednej
::   WE: _a - 0 (domyślnie) / 1 - czy wyświetlać komunikat o błędzie
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_param:=params_get().in;
_mess:={? _>=1 & type_of(_a)=1 || _a || 0 ?};
_result:='OK';

_code:=1;
{? var_pres('p01',_param)>0 & type_of(_param.p01)=1 || _code:=_param.p01
|? var_pres('p02',_param)>0 & type_of(_param.p02)=1 || _code:=_param.p02
|? var_pres('p03',_param)>0 & type_of(_param.p03)=1 || _code:=_param.p03
|? var_pres('p04',_param)>0 & type_of(_param.p04)=1 || _code:=_param.p04
?};
{? var_pres('__wsenv')>100 || obj_del(__wsenv) ?};
{? _code<100 & _mess
||
:: informacja o prawidłowym zakończeniu
   {? _code=11 || _result:='Modyfikacje zostały przesłane.'@
   |? _code=12 || _result:='Zamówienia zostały odebrane.'@
   |? _code=13 || _result:='Stany magazynów zostały przesłane.'@
   |? _code=14 || _result:='Cenniki zostały przesłane.'@
   ?}
||
:: Błędy synchro
   {? _code=101 || _result:='Błąd wysyłki materiałów.'@
   |? _code=102 || _result:='Błąd wysyłki zdjęć materiałów.'@
   |? _code=103 || _result:='Błąd wysyłki stanów magazynowych.'@
   |? _code=104 || _result:='Błąd wysyłki cenników.'@
   |? _code=105 || _result:='Błąd wysyłki grup materiałowych.'@
   |? _code=106 || _result:='Błąd wysyłki podgrup materiałowych.'@
   |? _code=107 || _result:='Błąd wysyłki statusów zamówień.'@
   |? _code=108 || _result:='Błąd wysyłki faktur.'@
:: Błędy pozostałe
   |? _code=120 || _result:='Błąd przy pobieraniu zamówień.'@
   |? _code=130 || _result:='Błąd aktualizacji stanów magazynowych.'@
   |? _code=140 || _result:='Błąd aktualizacji cenników.'@
   ?}
?};
{? _mess || FUN.info(_result) ?};
_result


\merge_param_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Opis formuły ręcznej
::----------------------------------------------------------------------------------------------------------------------
'Integracja BaseLinker - Komunikat o błędzie'@@


\content_email
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Formuła łączy parametry z tej samej czynności do jednej
::   WE: _a - string - treść komunikatu o błędzie
::   WY: treść email
::----------------------------------------------------------------------------------------------------------------------
_mail:='<p>Wystąpił błąd w integracji z BaseLinker.</p>';
_mail+={? var_pres('_a')=2 || '<p>' + _a + '</p>' || '' ?};
_mail+='<p>Więcej informacji dotyczące błędu można znaleźć w logach.</p>';
_mail


\trig_sync
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Sprawdzenie czy uruchamić zasilenie danymy
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_sync_name:='BASELINKER';
_il_rec:=1;
_firma:=REF.FIRMA().SYMBOL;
_tab:=proc_exe('new_sync@synchro', _sync_name, 0,, _il_rec, _firma);
_tab.first()

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 9606ce95111a990090b46eee35c2c962a10492711604d876d98cffed692a875d90f0c422e9c74f4865e3b5a90ad7ab0ecc929ebe3180e760ed5b2d419e4642c310c83c8c455a4d7fae8b9abdf3e6867766e0fe7e81943fe2aaa53709e0d4b77f439ae87d7c22e72a79b826728dd17dff1cd33c44ae9aa7f31831b767fca14d1f
