:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fst_inp_darz.fml
:: Utworzony: 30.03.2016
:: Autor: PJ
::======================================================================================================================
:: Zawartość: Formuły czynności FST_INP_DARZ - Import arkuszy inwentar. środ.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Import arkuszy inwentar. środ. - główna formuła czynności FST_INP_DARZ.
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS
_akcja:=-menu_txt();
{? _akcja='dołącz' || exec('srxn_add','!fst_inp_darz')
|? _akcja='popraw' || exec('srxn_edit','!fst_inp_darz')
|? _akcja='usuń' || exec('srxn_del','!fst_inp_darz')
?}


::======================================================================================================================
:: arkusze z natury
::======================================================================================================================


\srxn_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Dołączanie arkusza z natury
::----------------------------------------------------------------------------------------------------------------------
{? SRXI.STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return()
?};
SRXN.win_edit('RED');
SRXN.blank();
exec('odd_filtr','fst');
SRXN.SRXI:=SRXI.ref();
SRXN.USER:=exec('username','#users');
EDIT_ES.JORG:='';
{? SRXN.edit("exec('chk_srxn','!fst_inp_darz','ADD')")
|| {? SRXN.add() || grp_disp(SRXP,'WER') ?}
?}


\chk_srxn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła weryfikuje poprawność danych w oknie redagowania arkusza z natury
::   WE: _a - 'ADD' lub 'EDIT'
::   WY: '' lub akronim pola
::----------------------------------------------------------------------------------------------------------------------
_wy:=__CHK.record(SRXN,,'DATA','NAZWA');
{? __CHK.index(SRXN,_a='EDIT')<>''
|| _wy:='NAZWA'
?};
_wy


\srxn_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Poprawianie nagłówka akrusza z natury
::----------------------------------------------------------------------------------------------------------------------
{? SRXN.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje nie są możliwe.'@);
   return()
?};
{? SRXN.Z='T'
|| FUN.emsg('Arkusz został zamknięty i nie może być modyfikowany przez użytkownika.'@);
   return()
?};
{? SRXN.r_lock(1,1,1)
|| {? SRXN.AUTO='T' || SRXN.win_edit('AUT') || SRXN.win_edit('RED') ?};
   exec('odd_filtr','fst');
   {? SRXN.JORG<>null
   || EDIT_ES.JORG:=SRXP.JORG().SYMBOL
   || EDIT_ES.JORG:=''
   ?};
   {? SRXN.edit("exec('chk_srxn','!fst_inp_darz','EDIT')")
   || SRXN.put()
   ?};
   SRXN.r_unlock()
|| FUN.emsg('Arkusz z natury zablokowany przez innego użytkownika.'@)
?}


\srxn_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Usuwanie arkusza z natury
::----------------------------------------------------------------------------------------------------------------------
{? SRXN.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje nie są możliwe.'@);
   return()
?};
{? SRXN.AUTO='T'
|| FUN.emsg('Arkusz automatyczny nie może być modyfikowany przez użytkownika.'@);
   return()
?};
{? SRXN.Z='T'
|| FUN.emsg('Arkusz został zamknięty i nie może być modyfikowany przez użytkownika.'@);
   return()
?};
{? SRXN.count()>0
|| FUN.emsg('Arkusz jest wykorzystywany w systemie i nie można go usunąć.'@);
   return()
?};
{? SRXN.r_lock(1,1,1)
|| {? FUN.ask('Usunąć bieżący arkusz?'@)
   || SRXN.r_unlock();
      {? SRXN.del()
      || {? SRXN.size()>0
         || SRXP.prefix(SRXN.ref());
            SRXP.btn_sopt('WER','btn_srxp_imp','state=normal');
            SRXP.btn_sopt('WER','btn_srxp_add','state=normal')
         || SRXP.prefix(null);
            SRXP.btn_sopt('WER','btn_srxp_imp','state=grayed');
            SRXP.btn_sopt('WER','btn_srxp_add','state=grayed')
         ?};
         grp_disp(SRXP,'WER')
      ?}
   || SRXN.r_unlock()
   ?}
|| FUN.emsg('Arkusz z natury zablokowany przez innego użytkownika.'@)
?}


\srxn_rekord_przed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na rekord przed w oknie WER tabeli SRXN
::----------------------------------------------------------------------------------------------------------------------
SRXP.prefix(SRXN.ref());
grp_disp(SRXP,'WER')


\srxn_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zamyka bieżący arkusz
::----------------------------------------------------------------------------------------------------------------------
{? SRXN.AUTO='T'
|| FUN.emsg('Arkusz automatyczny nie może być zamknięty przez użytkownika.'@);
   return()
?};
{? SRXN.Z='T'
|| FUN.emsg('Arkusz jest już zamknięty.'@);
   return()
?};
{? SRXP.size()=0
|| FUN.emsg('Arkusz nie zawiera danych, nie można zamknąć pustego arkusza.'@);
   return()
?};
{? SRXN.r_lock(1,1,1)
|| {? FUN.ask('Zamknąć arkusz z natury?'@)
   || SRXN.Z:='T';
      SRXN.put()
   ?};
   SRXN.r_unlock()
|| FUN.emsg('Arkusz z natury zablokowany przez innego użytkownika.'@)
?}


\srxn_otw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła otwiera bieżący arkusz
::----------------------------------------------------------------------------------------------------------------------
{? SRXN.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return()
?};
{? SRXN.AUTO='T'
|| FUN.emsg('Arkusz automatyczny nie może być otwarty przez użytkownika.'@);
   return()
?};
{? SRXN.Z='N'
|| FUN.emsg('Arkusz jest już otwarty.'@);
   return()
?};
{? FUN.ask('Otworzyć arkusz z natury?'@)
|| SRXN.Z:='N';
   SRXN.put()
?}


::======================================================================================================================
:: pozycje arkuszy z natury
::======================================================================================================================


\srxp_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Dołączanie pozycji arkusza z natury
::----------------------------------------------------------------------------------------------------------------------
{? SRXN.AUTO='T'
|| FUN.emsg('Arkusz automatyczny nie może być modyfikowany przez użytkownika.'@);
   return()
?};
{? SRXN.Z='T'
|| FUN.emsg('Arkusz został zamknięty i nie może być modyfikowany przez użytkownika.'@);
   return()
?};

{? ~SRXN.r_lock(1,1,1)
|| FUN.emsg('Definicja arkusza zablokowana przez innego użytkownika. Zmiany w arkuszu niemożliwe.'@);
   return()
|| SRXN.r_unlock()
?};

SRXP.win_edit('RED');
SRXP.blank();
exec('odd_filtr','fst');
SRXP.SRXN:=SRXN.ref();
SRXP.JORG:=SRXP.JORG;
SRXP.ODD:=SRXP.ODD;
SRXP.POM:=SRXN.POM;
SRXP.OSOBA:=SRXN.OSOBA;
EDIT_ES.JORG:=SRXP.JORG().SYMBOL;
{? SRXP.edit("exec('chk_srxp','!fst_inp_darz','ADD')")
|| SRXP.add()
?}


\chk_srxp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła weryfikuje poprawność danych w oknie redagowania pozycji arkusza z natury
::   WE: _a - 'ADD' lub 'EDIT'
::   WY: '' lub akronim pola
::----------------------------------------------------------------------------------------------------------------------
_wy:=__CHK.record(SRXP,,'NRI');
_wy


\srxp_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Poprawianie pozycji arkusza z natury
::----------------------------------------------------------------------------------------------------------------------
{? SRXN.AUTO='T'
|| FUN.emsg('Arkusz automatyczny nie może być modyfikowany przez użytkownika.'@);
   return()
?};
{? SRXN.Z='T'
|| FUN.emsg('Arkusz został zamknięty i nie może być modyfikowany przez użytkownika.'@);
   return()
?};
{? ~SRXN.r_lock(1,1,1)
|| FUN.emsg('Definicja arkusza zablokowana przez innego użytkownika. Zmiany w arkuszu niemożliwe.'@);
   return()
|| SRXN.r_unlock()
?};

{? SRXP.r_lock(1,1,1)
|| SRXP.win_edit('RED');
   exec('odd_filtr','fst');
   EDIT_ES.JORG:=SRXP.JORG().SYMBOL;
   {? SRXP.edit("exec('chk_srxp','!fst_inp_darz','ADD')")
   || SRXP.put()
   ?};
   SRXP.r_unlock()
|| FUN.emsg('Pozycja arkusza zablokowana przez innego użytkownika.'@)
?}


\srxp_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Usuwanie pozycji arkusza z natury
::----------------------------------------------------------------------------------------------------------------------
_id:=SRXP.NRI+' ';
{? SRD.KOMM<>'T'
|| {? SRXN.SRXI().STATUS='T'
   || FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
      return()
   ?};
   {? SRXN.AUTO='T'
   || FUN.emsg('Arkusz automatyczny nie może być modyfikowany przez użytkownika.'@);
      return()
   ?};
   {? SRXN.Z='T'
   || FUN.emsg('Arkusz został zamknięty i nie może być modyfikowany przez użytkownika.'@);
      return()
   ?}
?};

{? SRXP.count()>0
|| _txt:='Pozycja arkusza jest wykorzystywana w systemie i nie można jej usunąć.'@;
   {? SRD.KOMM<>'T' || FUN.emsg(_txt) || KOMM.add(_id+_txt) ?};
   return()
?};
{? ~SRXN.r_lock(1,1,1)
|| _txt:='Definicja arkusza zablokowana przez innego użytkownika. Zmiany w arkuszu niemożliwe.'@;
   {? SRD.KOMM<>'T' || FUN.emsg(_txt) || KOMM.add(_id+_txt) ?};
   return()
|| SRXN.r_unlock()
?};

{? SRXP.r_lock(1,1,1)
|| SRXP.r_unlock();
   _dalej:=1;
   {? SRD.KOMM<>'T'
   || {? SRXP.r_lock(1,1,1)
      || {? ~FUN.ask('Usunąć bieżącą pozycję arkusza?'@)
         || _dalej:=0
         ?};
         SRXP.r_unlock()
      || FUN.emsg('Pozycja arkusza zablokowana przez innego użytkownika.'@)
      ?}
   ?};
   {? _dalej || SRXP.del() ?}
|| _txt:='Pozycja arkusza zablokowana przez innego użytkownika.'@;
   {? SRD.KOMM<>'T' || FUN.emsg(_txt) || KOMM.add(_id+_txt) ?}
?}


\grp_srxp_del_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła Grupa przed - usuwanie pozycji arkusza z natury (SRXN)
::----------------------------------------------------------------------------------------------------------------------
{? SRXN.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return(0)
?};
{? SRXN.AUTO='T'
|| FUN.emsg('Arkusz automatyczny nie może być modyfikowany przez użytkownika.'@);
   return(0)
?};
{? SRXN.Z='T'
|| FUN.emsg('Arkusz został zatwierdzony i nie może być modyfikowany przez użytkownika.'@);
   return(0)
?};
{? ~FUN.ask('Usunąć zaznaczone pozycje arkusza?'@)
|| return(0)
?};
KOMM.init(150,,'Uwagi dotyczące usuwania pozycji arkusza z natury.'@);
SRD.KOMM:='T';
1


\grp_srxp_del_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła Grupa po - usuwanie pozycji arkusza z natury (SRXN)
::----------------------------------------------------------------------------------------------------------------------
{? ~KOMM.empty() || KOMM.select() ?};
SRD.KOMM:='N';
1


\srxp_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Import pozycji arkusza z natury z pliku z czytnika, kolektora danych
::----------------------------------------------------------------------------------------------------------------------
{? SRXN.AUTO='T'
|| FUN.emsg('Arkusz automatyczny nie może być modyfikowany przez użytkownika.'@);
   return()
?};
{? SRXN.Z='T'
|| FUN.emsg('Arkusz został zamknięty i nie może być modyfikowany przez użytkownika.'@);
   return()
?};

{? SRXN.r_lock(1,1,1)
||
   FILE_FRM.prefix();
   {? FILE_FRM.first()
   || {? PAR_WYDR.FILE_FRM=null
      || FUN.info('Brak obowiązującego formatu pliku w parametrach urządzeń użytkownika.\n'
                  'Należy wybrać format z listy.'@)
      || FILE_FRM.seek(PAR_WYDR.FILE_FRM)
      ?};
      FILE_FRM.win_sel('SELECT');
      {? PAR_WYDR.FILE_FRM<>null | FILE_FRM.select()
      || _plik:='';
         _ext:=FILE_FRM.EXT;
         {? PAR_WYDR.FILEFIND=0
         || {? _ext='czt'
            || _filtr:='Pliki'@+' CZT (*.czt)|*.czt|'+'Pliki'@+' TXT (*.txt)|*.txt|'+'Wszystkie pliki'@+' (*.*)|*.*'
            |? _ext='dat'
            || _filtr:='Pliki'@+' DAT (*.dat)|*.dat|'+'Pliki'@+' TXT (*.txt)|*.txt|'+'Wszystkie pliki'@+' (*.*)|*.*'
            || _filtr:='Wszystkie pliki'@+' (*.*)|*.*'
            ?};

            {? _ext='czt'
            || _plik:= fmk_tmp_dir(0).get_path()+'funkcje.czt';
               _wyn:=dlg_upload(_plik,0,'.czt')
            || _plik:= fmk_tmp_dir(0).get_path()+'funkcje.dat';
               _wyn:=dlg_upload(_plik,0,'.dat')
            ?};
            {? _wyn = ''
            ||  _plik:=''
            ?}

         || _files:=files('*.'+_ext);
            {? _files.first()
            || _okno:=_files.mk_sel('Dostępne pliki z danymi:'@,,0,'_files_wer');
               _files.win_fld(_okno,,'FILENAME',,,60,,,'Plik'@);
               _files.win_act(_okno,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
               _files.win_sel(_okno);
               {? _files.select(,1)
               || _plik:=_files.FILENAME
               ?}
            || FUN.emsg('Brak plików z danymi z czytnika w katalogu IMEX.'@)
            ?}
         ?};
         {? _plik<>'' & FILE_FRM.R_PLIK='TXT'
         || exec('file_par_txt','urzadzenia');
            {? _out:=fopen(_plik,'r',PAR_WYDR.FILEFIND)
            || SRXP.cntx_psh();
               SRXP.index('SRXP');
               SRXP.prefix(SRXN.ref());
               _size:=SRXP.size();
               SRXP.cntx_pop();
               {! |?
                  _txt:=fread(_out);
                  echo('Dodaję nową pozycję do arkusza: %1'@[_txt]);
                  {? _txt<>'\n' &  +|_txt
                  || exec('pkod_dopisz_txt','!fst_inp_darz',_txt)
                  ?};
                  _txt<>'\n'
               !};
               echo();
               fclose(_out);
               VAR_DEL.delete('__SRXPDB');
               SRXP.cntx_psh();
               SRXP.index('SRXP');
               SRXP.prefix(SRXN.ref());
               {? SRXP.size()=_size
               || FUN.emsg('Nie udało się zaimportować żadnej pozycji z pliku:\n %1'@[_plik])
               ?};
               SRXP.cntx_pop()
            || FUN.error('Błąd odczytu z pliku: %1'@[_plik+{? _par || ' z katalogu: '+pth_dir(_plik) || '' ?}])
            ?}
         |? _plik<>'' & FILE_FRM.R_PLIK='BIN'
         || exec('file_par_bin','urzadzenia');
            {? _out:=fopen(_plik,'br',PAR_WYDR.FILEFIND)
            || _txt:='';
               SRXP.cntx_psh();
               SRXP.index('SRXP');
               SRXP.prefix(SRXN.ref());
               _size:=SRXP.size();
               SRXP.cntx_pop();
               {! |?
                  echo('Dodaję nową pozycję do arkusza: %1'@[_txt]);
                  _char:=fread(_out);
                  {? _char<>-1
                  || _txt+=%_char;
                     {? +_txt=kol_sum
                     || exec('pkod_dopisz_bin','!fst_inp_darz',_txt);
                        _txt:=''
                     ?}
                  ?};
                  _char<>-1
               !};
               echo();
               fclose(_out);
               SRXP.cntx_psh();
               SRXP.index('SRXP');
               SRXP.prefix(SRXN.ref());
               {? SRXP.size()=_size
               || FUN.emsg('Nie udało się zaimportować żadnej pozycji z pliku:\n %1'@[_plik])
               ?};
               SRXP.cntx_pop()
            || FUN.error('Błąd odczytu z pliku: %1'@[_plik+{? _par || ' z katalogu: '+pth_dir(_plik) || '' ?}])
            ?}
         ?}
      ?}
   || FUN.emsg('Brak formatów plików z danymi.'@)
   ?};
   SRXN.r_unlock()
|| FUN.emsg('Arkusz z naury zablokowany przez innego użytkownika.'@)
?}


\pkod_dopisz_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formula analizuje wiersz z pliku i dopisuje pozycje do PKOD
::   WE: _a = przekazany tekst wiersza z pliku
::  OLD: \pkod_dopisz_txt/skid_uz.fml
::----------------------------------------------------------------------------------------------------------------------
SRXP.blank();
SRXP.SRXN:=SRXN.ref();
_string:=_a;
_przebieg:=0;
{! |? _nr:=_string*FILE_FRM.SEP;
      _przebieg+=1;
      {? _przebieg=kol_nri
      || {? _nr<>0
         || SRXP.NRI:=(_nr-1)+_string;
            _string:=_string+(+_string-_nr)
         || SRXP.NRI:=_string
         ?}
      |? _przebieg=kol_odd
      || {? _nr<>0
         || _odd:=(_nr-1)+_string;
            _string:=_string+(+_string-_nr)
         || _odd:=_string
         ?};
         {? _odd<>''
         || {? plik_zam<>''
            || {? ZAMIEN.find_key(_odd,_odd) || _odd:=ZAMIEN.WY ?}
            ?};
            ODD.cntx_psh();
            ODD.index('ODDZIALY');
            ODD.prefix(REF.FIRMA,_odd,_odd);
            {? ODD.first()
            || SRXP.ODD:=ODD.ref()
            ?};
            ODD.cntx_pop()
         ?}
      |? _przebieg=kol_wyd
      || {? _nr<>0
         || _jorg:=(_nr-1)+_string;
            _string:=_string+(+_string-_nr)
         || _jorg:=_string
         ?};
         {? _jorg<>''
         || {? plik_zam<>''
            || {? ZAMIEN.find_key(_jorg,_jorg) || _jorg:=ZAMIEN.WY ?}
            ?};
            UD_SKL.cntx_psh(); UD_TYP.cntx_psh();
            UD_TYP.index('SYMBOL');
            UD_TYP.prefix('PODZORG','PODZORG');
            {? UD_TYP.first()
            || UD_SKL.index('SYMBOL');
               UD_SKL.prefix(UD_TYP.ref(),_jorg,_jorg);
               {? UD_SKL.first() || SRXP.JORG:=UD_SKL.ref() ?}
            ?};
            UD_SKL.cntx_pop(); UD_TYP.cntx_pop()
         ?}
      |? _przebieg=kol_pom
      || {? _nr<>0
         || _pom:=(_nr-1)+_string;
            _string:=_string+(+_string-_nr)
         || _pom:=_string
         ?};
         {? _pom<>''
         || {? plik_zam<>''
            || {? ZAMIEN.find_key(_pom,_pom) || _pom:=ZAMIEN.WY ?}
            ?};
            POMI.cntx_psh();
            POMI.index('POMSS');
            POMI.prefix(REF.FIRMA,_pom,_pom);
            {? POMI.first()
            || SRXP.POM:=POMI.ref()
            ?};
            POMI.cntx_pop()
         ?}
      |? _przebieg=kol_pra
      || {? _nr<>0
         || _osoba:=(_nr-1)+_string;
            _string:=_string+(+_string-_nr)
         || _osoba:=_string
         ?};
         {? _osoba<>''
         || {? plik_zam<>''
            || {? ZAMIEN.find_key(_osoba,_osoba) || _osoba:=ZAMIEN.WY ?}
            ?};
            OSOBA.cntx_psh();
            OSOBA.index('OSOBA');
            OSOBA.prefix(_osoba,);
            {? OSOBA.first() & OSOBA.size()=1
            || SRXP.OSOBA:=OSOBA.ref()
            ?};
            OSOBA.cntx_pop()
         ?}
      |? _przebieg=kol_prz
      ||
         ~~
      |? _przebieg=kol_ilo
      ||
         ~~
      || _string:=_nr-_string
      ?};
      _nr<>0
!};
{? SRXP.NRI<>''
|| _dalej:=1;
   SRXP.cntx_psh();
   SRXP.index('SRXP');
   SRXP.prefix(SRXN.ref(),SRXP.NRI,);
   {? SRXP.first()
   || {? var_pres('__SRXPDB')<=0
      || {? FUN.ask('W arkuszu istnieje już zapis o podanym numerze inwentarzowym %1,\n'
                 'pozwolić na dublowanie numerów w arkuszu?'@[SRXP.NRI])
         || __SRXPDB:=1
         || __SRXPDB:=_dalej:=0
         ?}
      || _dalej:=__SRXPDB
      ?}
   ?};
   SRXP.cntx_pop();
   {? _dalej
   || {? SRXP.ODD<>null
      || SRST.cntx_psh();
         SRST.index('OKR_O_W');
         SRST.prefix(SRXI.OKRO_F,SRXP.ODD,SRXP.NRI,);
         {? SRST.first() || SRXP.NST:=SRST.NST ?};
         SRST.cntx_pop()
      ?};
      SRXP.add()
   ?}
?}


\pkod_dopisz_bin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formula analizuje porcje danych z pliku binarnego i dopisuje pozycje do PKOD
::   WE: _a = przekazana porcja danych z pliku
::  OLD: \pkod_dopisz_bin/skid_uz.fml
::----------------------------------------------------------------------------------------------------------------------
mid:="_c+((_b-1)-_a)";
SRXP.blank();
SRXP.SRXN:=SRXN.ref();
FILE_PAR.index('LP');
FILE_PAR.prefix(FILE_FRM.ref());
_poz:=1;
{? FILE_PAR.first()
|| {! |?
         {? FILE_PAR.KOD='NUMER INWENTARZOWY'
         || SRXP.NRI:=form(mid(_a,_poz,FILE_PAR.WARTOSC));
            _poz:=_poz+FILE_PAR.WARTOSC
         |? FILE_PAR.KOD='JEDNOSTKA KSIĘGOWA'
         || _odd:=form(mid(_a,_poz,FILE_PAR.WARTOSC));
            {? _odd<>''
            || {? plik_zam<>''
               || {? ZAMIEN.find_key(_odd,_odd)
                  || _odd:=ZAMIEN.WY
                  ?}
               ?};
               ODD.cntx_psh();
               ODD.index('ODDZIALY');
               ODD.prefix(REF.FIRMA,_odd,_odd);
               {? ODD.first() || SRXP.ODD:=ODD.ref() ?};
               ODD.cntx_pop()
            ?};
            _poz:=_poz+FILE_PAR.WARTOSC
         |? FILE_PAR.KOD='JEDNOSTKA ORGANIZACYJNA'
         || _jorg:=form(mid(_a,_poz,FILE_PAR.WARTOSC));
            {? _jorg<>''
            || {? plik_zam<>''
               || {? ZAMIEN.find_key(_jorg,_jorg)
                  || _jorg:=ZAMIEN.WY
                  ?}
               ?};
               UD_SKL.cntx_psh(); UD_TYP.cntx_psh();
               UD_TYP.index('SYMBOL');
               UD_TYP.prefix('PODZORG','PODZORG');
               {? UD_TYP.first()
               || UD_SKL.index('SYMBOL');
                  UD_SKL.prefix(UD_TYP.ref(),_jorg,_jorg);
                  {? UD_SKL.first() || SRXP.JORG:=UD_SKL.ref() ?}
               ?};
               UD_SKL.cntx_pop(); UD_TYP.cntx_pop()
            ?};
            _poz:=_poz+FILE_PAR.WARTOSC
         |? FILE_PAR.KOD='POMIESZCZENIE'
         || _pom:=form(mid(_a,_poz,FILE_PAR.WARTOSC));
            {? _pom
            || {? plik_zam<>''
               || {? ZAMIEN.find_key(_pom,_pom)
                  || _pom:=ZAMIEN.WY
                  ?}
               ?};
               POMI.cntx_psh();
               POMI.index('POMSS');
               POMI.prefix(REF.FIRMA,_pom,_pom);
               {? POMI.first() || SRXP.POM:=POMI.ref() ?};
               POMI.cntx_pop()
            ?};
            _poz:=_poz+FILE_PAR.WARTOSC
         |? FILE_PAR.KOD='PRACOWNIK'
         || _osoba:=form(mid(_a,_poz,FILE_PAR.WARTOSC));
            {? _osoba<>''
            || {? plik_zam<>''
               || {? ZAMIEN.find_key(_osoba,_osoba)
                  || _osoba:=ZAMIEN.WY
                  ?}
               ?};
               OSOBA.cntx_psh();
               OSOBA.index('OSOBA');
               OSOBA.prefix(_osoba,);
               {? OSOBA.first() & OSOBA.size()=1 || SRXP.OSOBA:=OSOBA.ref() ?};
               OSOBA.cntx_pop()
            ?};
            _poz:=_poz+FILE_PAR.WARTOSC
         ?};
         FILE_PAR.next()
   !};
   {? SRXP.NRI<>''
   || {? SRXP.ODD<>null
      || SRST.cntx_psh();
         SRST.index('OKR_O_W');
         SRST.prefix(SRXI.OKRO_F,SRXP.ODD,SRXP.NRI,);
         {? SRST.first() || SRXP.NST:=SRST.NST ?};
         SRST.cntx_pop()
      ?};
      SRXP.add()
   ?}
?}


\srxn_wczytaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wczytuje bieżący arkusz z natury do arkuszy spisowych
::----------------------------------------------------------------------------------------------------------------------
{? SRXN.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return(0)
?};
{? SRXN.AUTO='T'
|| FUN.emsg('Bieżący arkusz jest arkusz automatycznym i jest obsługiwany przez system.'@);
   return(0)
?};
{? SRXN.Z='N'
|| FUN.emsg('Arkusz nie jest zamknięty i nie może być wczytany.'@);
   return(0)
?};

_wczyt:=0;
SRXP.cntx_psh();
SRXP.index('SRXP');
SRXP.prefix(SRXN.ref());
_size:=SRXP.size();
{? SRXP.first()
|| {! |?
      {? SRXP.WCZYTANY='T' || _wczyt+=1 ?};
      SRXP.next()
   !}
|| _wczyt:=-1
?};
SRXP.cntx_pop();

{? _wczyt=-1
|| FUN.emsg('Arkusz z natury jest pusty, nie posiada pozycji do wczytania.'@);
   return()
|? _wczyt>0 & _wczyt=_size
|| FUN.emsg('Wszystkie pozycje arkusza z natury zostały już wczytane.'@);
   return()
|? _wczyt>0 & _wczyt<_size
|| {? ~FUN.ask('Bieżący arkusz był już wczytywany do arkuszy spisowych. Kontynuować?'@)
   || return()
   ?}
?};

{? SRXP.size()=0
|| FUN.emsg('Arkusz nie zawiera danych.'@);
   return(0)
?};

{? ~FUN.ask('Wczytać bieżący arkusz z natury do arkuszy spisowych?'@)
|| return(0)
?};

KOMM.init(150,,'Uwagi dotyczące wczytywania pozycji arkusza z natury.'@);
SRD.KOMM:='T';

VAR_DEL.delete('__NADM');
__NADM:=tab_tmp(1,'REF','INTEGER','Ref',
                  'NRI','STRING[20]','Nr inwentarzowy',
                  'NST','STRING[100]','Nazwa',
                  'JORG','STRING[16]','J. organiacyjna',
                  'ODD','STRING[10]','J. księgowa',
                  'POM','STRING[15]','Pomieszczenie',
                  'OSOBA','STRING[30]','Użytkownik',
                  'ARKUSZ','INTEGER','Arkusz spisowy',
                  'STATUS','STRING[1]','Dołączono');

_win:=__NADM.mk_sel('Pozycje nieodnalezione w arkuszach spisowych'@,'P',0,'__nadm',10,5,15,,'U');
__NADM.win_fld(_win,,'NRI',,,18,,1,'Nr inwentarzowy'@);
__NADM.win_fld(_win,,'NST',,,30,,1,'Nazwa'@);
__NADM.win_fld(_win,,'JORG',,,16,,1,'J. organizacyjna'@);
__NADM.win_fld(_win,,'ODD',,,10,,1,'J. księgowa'@);
__NADM.win_fld(_win,,'POM',,,15,,1,'Pomieszczenie'@);
__NADM.win_fld(_win,,'OSOBA',,,25,,1,'Użytkownik'@);
__NADM.win_fld(_win,,'ARKUSZ',,,6,,0,'Arkusz spisowy'@);
__NADM.win_fld(_win,,'STATUS',,,6,,1,'Dołączono'@,,,2,,"'T'","'N'");

_after:="exec('srxp_nadmiar','!fst_inp_darz')";
_grp_b:="exec('grp_srxp_nadm_b','!fst_inp_darz')";
_grp_a:="exec('grp_srxp_nadm_a','!fst_inp_darz')";
__NADM.win_act(_win,,'Formuła','Dołącz jako nadmiar'@@,,,,_after,1,1,_grp_b,_grp_a,'D');
_after:="exec('wyb_arkusz','!fst_inp_darz')";
__NADM.win_act(_win,,'Formuła','Popraw'@@,,,,_after,,,,,'P');
__NADM.win_sel(_win);


_s_sum:=_s_zat:=_s_zap:=_s_nad:=0;
SRXD.cntx_psh();
SRXP.cntx_psh();
SRXD.index('SRXINRI');
SRXD.prefix(SRXI.ref());
{? SRXD.first()
|| SRXD.index('SRXINRIS');
   SRXD.prefix(SRXI.ref(),'N');
   {? SRXD.first()
   || {? SRXP.first()
      || {? SRXP.WCZYTANY='N'
         || SRXA.cntx_psh();
            SRXA.index('STATUS');
            SRXA.prefix(SRXI.ref(),'N');
            {? SRXA.size()=1 || _arkusz:=SRXA.NR || _arkusz:=0 ?};
            SRXA.cntx_pop();
            {! |?
               _s_sum+=1;
               _w:=0;
               SRXD.prefix(SRXI.ref(),'N',SRXP.NRI,);
               {? SRXD.first() & SRXD.size()=1
               || _w:=exec('poz_wczytaj','!fst_inp_darz')
               |? SRXD.size()>1
               || {! |?
                     {? SRXD.ODD_N=SRXP.ODD
                     || _w:=exec('poz_wczytaj','!fst_inp_darz')
                     ?};
                     _w=0 & SRXD.next()
                  !}
               |? SRXD.size()=0
               || exec('nadm_add','!fst_inp_darz',_arkusz,'N');
                  _w:=3
               ?};
               {? _w=0
               || KOMM.add('Pominięto pozycję: %1 - %2'@[SRXP.NRI,SRXP.NST])
               |? _w=1
               || _s_zat+=1
               |? _w=2
               || _s_zap+=1
               |? _w=4
               || KOMM.add('Zaakceptowano pozycję: %1 - %2 dot. elementu, zmiana wprowadzona w zestawie.'@
                           [SRXP.NRI,SRXP.NST])
               |? _w=5
               || KOMM.add('Zaakceptowano pozycję: %1 - %2 dot. elementu, zmiany powinny być wprowadzone dla zestawu.'@
                           [SRXP.NRI,SRXP.NST])
               ?};
               SRXP.next()
            !};
            {? __NADM.size()>0
            || __NADM.select();
               __NADM.first();
               {! |?
                  {? __NADM.STATUS<>'T'
                  || KOMM.add('Pominięto pozycję: %1 - %2'@[__NADM.NRI,__NADM.NST])
                  || _s_nad+=1
                  ?};
                  __NADM.next()
               !}
            ?}
         || KOMM.add('Pozycja: %1 - %2 została już wcześniej wczytana'@[SRXP.NRI,SRXP.NST])
         ?}
      ?}
   || FUN.emsg('W bieżącej inwentaryzacji brak niezatwierdzonych pozycji w arkuszach spisowych.'@)
   ?}
|| FUN.emsg('W bieżącej inwentaryzacji nie wygenerowano arkuszy spisowych z pozycjami.'@)
?};
SRXP.cntx_pop();
SRXD.cntx_pop();

VAR_DEL.delete('__NADM');

{? ~KOMM.empty()
|| {? FUN.ask('Przetworzono %1 pozycji, z tego %2 zatwierdzono, %3 zatwierdzono ze zmianami, '
           '%4 dodano jako nadmiary. Wyświetlić dodatkowe uwagi?'@[$_s_sum,$_s_zat,$_s_zap,$_s_nad])
   || KOMM.select()
   ?}
|| FUN.info('Przetworzono %1 pozycji, z tego %2 zatwierdzono, %3 zatwierdzono ze zmianami,'
            '%4 dodano jako nadmiary.'@[$_s_sum,$_s_zat,$_s_zap,$_s_nad])
?};
SRD.KOMM:='N';
1


\nadm_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Dodaje pozycję do tymczasowj tabeli nadmiarów
::   WE: _a = nr arkusza (INT), _b - status np. 'N'
::----------------------------------------------------------------------------------------------------------------------
__NADM.blank();
__NADM.REF:=#SRXP.ref();
__NADM.NRI:=SRXP.NRI;
__NADM.NST:=SRXP.NST;
__NADM.JORG:=SRXP.JORG().SYMBOL;
__NADM.ODD:=SRXP.ODD().OD;
__NADM.POM:=SRXP.POM().S;
__NADM.OSOBA:=SRXP.OSOBA().NAZWISKO;
__NADM.ARKUSZ:=_a;
__NADM.STATUS:=_b;
__NADM.add()


\wyb_arkusz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wybór arkusza podczas dopisywania nadmiaru na podstawie pozycji arkusza z natury
::----------------------------------------------------------------------------------------------------------------------
SRXA.cntx_psh();
SRXA.index('STATUS');
SRXA.prefix(SRXI.ref(),'N');
_win:=SRXA.mk_sel('Wybór arkusza spisowego'@,'P',0,'_srxa_tmp',10,5,10,,'U');
SRXA.win_fld(_win,,'NR',,,6,,,'Nr arkusza'@);
SRXA.win_fld(_win,,'JORG','SYMBOL',,16,,,'J. organizacyjna'@);
SRXA.win_fld(_win,,'ODD','OD',,10,,,'J. księgowa'@);
SRXA.win_fld(_win,,'POM','S',,12,,,'Pomieszczenie'@);
SRXA.win_act(_win,,'Formuła','Wybierz'@@,,,,"sel_exit()",1);
SRXA.win_sel(_win);
{? SRXA.select()
|| __NADM.ARKUSZ:=SRXA.NR;
   __NADM.put()
?};
SRXA.cntx_pop();
1


\srxp_nadmiar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Dodaje nadmiar na podstawie zapisu w arkuszu z natury
::----------------------------------------------------------------------------------------------------------------------
{? __NADM.STATUS='T'
|| {? __NADM.sel_size()=0
   || FUN.emsg('Dla pozycji %1 dołączono już nadmiar.'@[__NADM.NRI])
   ?};
   return(0)
?};

{? __NADM.ARKUSZ=0
|| {? __NADM.sel_size()=0
   || FUN.emsg('Dla pozycji %1 nie podano nr arkusza spisowego w którym należy dołączyć nadmiar.'@[__NADM.NRI])
   ?};
   return(0)
?};

SRXA.cntx_psh();
SRXD.cntx_psh();
SRXP.cntx_psh();
SRXA.index('SRXI');
SRXA.prefix(SRXI.ref(),__NADM.ARKUSZ);
{? SRXA.first()
|| SRXP.prefix();
   {? SRXP.seek(__NADM.REF,SRXP.name())
   || SRXD.prefix();
      SRXD.blank();
      SRXD.SRXA:=SRXA.ref();
      SRXD.STATUS:='D';
      SRXD.NRI:=SRXP.NRI;
      SRXD.NST:=SRXP.NST;
      SRXD.JORG_N:=SRXP.JORG;
      SRXD.ODD_N:=SRXP.ODD;
      SRXD.POM_N:=SRXP.POM;
      SRXD.OSOBA_N:=SRXP.OSOBA;
      SRXD.SRXP:=SRXP.ref();
      SRXD.SRXI:=SRXD.SRXA().SRXI;
      {? SRXD.add()
      || __NADM.STATUS:='T';
         __NADM.put();
         SRXP.WCZYTANY:='T';
         SRXP.put()
      ?}
   ?}
?};

SRXP.cntx_pop();
SRXD.cntx_pop();
SRXA.cntx_pop()


\grp_srxp_nadm_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła Grupa przed podczas dodawania nadmiarów na podstawie zapisów w arkuszu z natury
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__NADMS');
__NADMS:=__NADM.sel_aget();
1


\grp_srxp_nadm_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła Grupa po podczas dodawania nadmiarów na podstawie zapisów w arkuszu z natury
::----------------------------------------------------------------------------------------------------------------------
{? __NADMS.first()
|| {! |?
     {? __NADM.seek(__NADMS.REF,)
     || {? __NADM.STATUS='N'
        || KOMM.add('Dla pozycji %1 nie podano nr arkusza spisowego w którym należy dołączyć nadmiar.'@[__NADM.NRI])
        ?}
     ?};
      __NADMS.next()
   !}
?};
VAR_DEL.delete('__NADMS');
1


\poz_wczytaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wczytuje bieżącą pozycję arkusza z natury do arkuszy spisowych
::----------------------------------------------------------------------------------------------------------------------
_wy:=_jest:=0;
{? SRXD.STATUS<>'N'
|| KOMM.add('Środek %1 w arkuszu spisowym nr %2 posiada już'
            ' status zatwierdzony (lub niedobór).'@[SRXD.NRI,$SRXD.SRXA().NR]);
   return(-1)
?};
SRXD.SRXP:=SRXP.ref();
{? SRXD.GRP='E'
|| SRXP.cntx_psh(); SRXD.cntx_psh();
   SRXD.prefix();
   {? SRXD.seek(SRXD.TREE) & SRXP.find_key(SRXD.NRI)
   || _jest:=1
   || _jest:=-1
   ?};
   SRXP.cntx_pop(); SRXD.cntx_pop();
   SRXD.STATUS:='T'
|? (SRXD.JORG_N=SRXP.JORG | SRXP.JORG=null)
   & (SRXD.ODD_N=SRXP.ODD | SRXP.ODD=null)
   & (SRXD.POM_N=SRXP.POM | SRXP.POM=null)
   & (SRXD.OSOBA_N=SRXP.OSOBA | SRXP.OSOBA=null)
|| SRXD.STATUS:='T'
|| {? SRXD.JORG_N<>SRXP.JORG
   || SRXD.JORG_N:=SRXP.JORG;
      SRXD.JORG_M:='T';
      SRXD.STATUS:='P'
   ?};
   {? SRXD.ODD_N<>SRXP.ODD
   || SRXD.ODD_N:=SRXP.ODD;
      SRXD.ODD_M:='T';
      SRXD.STATUS:='P'
   ?};
   {? SRXD.POM_N<>SRXP.POM
   || SRXD.POM_N:=SRXP.POM;
      SRXD.POM_M:='T';
      SRXD.STATUS:='P'
   ?};
   {? SRXD.OSOBA_N<>SRXP.OSOBA
   || SRXD.OSOBA_N:=SRXP.OSOBA;
      SRXD.OSOBA_M:='T';
      SRXD.STATUS:='P'
   ?}
?};
{? SRXD.put()
|| SRXP.WCZYTANY:='T';
   SRXP.put();
   {? ~_jest & SRXD.STATUS='T' || _wy:=1
   |? _jest=1 || _wy:=4
   |? _jest=-1 || _wy:=5
   |? SRXD.STATUS='P' || _wy:=2
   ?}
?};
_wy


\srxn_wycofaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wycofuje wczytany arkusz z natury z arkuszy spisowych
::----------------------------------------------------------------------------------------------------------------------
{? SRXN.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return(0)
?};
{? SRXN.AUTO='T'
|| FUN.emsg('Bieżący arkusz jest arkusz automatycznym i jest obsługiwany przez system.'@);
   return(0)
?};
{? SRXN.Z='N'
|| FUN.emsg('Arkusz nie jest zamknięty, nie mógł być wczytany i nie można go wycofać.'@);
   return(0)
?};

_wczyt:=0;
SRXP.cntx_psh();
SRXP.index('SRXP');
SRXP.prefix(SRXN.ref());
_size:=SRXP.size();
{? SRXP.first()
|| {! |?
      {? SRXP.WCZYTANY='T' || _wczyt+=1 ?};
      SRXP.next()
   !}
?};
SRXP.cntx_pop();
{? _size=0
|| FUN.emsg('Bieżący arkusz z natury jest pusty, nie ma pozycji do wycofania z arkuszy spisowych.'@);
   return()
?};
{? _wczyt=0
|| FUN.emsg('Żadna z pozycji bieżącego arkusza z natury nie została wczytana do arkuszy spisowych.\n'
            'Brak pozycji do wycofania.'@);
   return()
?};

{? ~FUN.ask('Wycofać pozycje bieżącego arkusza z natury z arkuszy spisowych inwentaryzacji?'@)
|| return(0)
?};

KOMM.init(150,,'Uwagi dotyczące wycofywania pozycji arkusza z natury z arkuszy spisowych.'@);
SRD.KOMM:='T';

SRXP.cntx_psh();
SRXP.index('SRXP');
SRXP.prefix(SRXN.ref());
_undo:=0;
_nr_ark:=0;
_srxp:='';

{? SRXP.first()
|| {! |?
      SRXD.cntx_psh();
      SRXD.index('SRXI');
      SRXD.prefix(SRXI.ref());
      {? SRXD.find_key(SRXP.ref())
      || {? SRXD.SRXA().STATUS='T'
         || KOMM.add('Pozycja %1 związana z arkuszem spisowym nr %2 nie może być wycofana\n'
                     'ponieważ arkusz spisowy został zamknięty.'@[SRXP.NRI,$SRXD.SRXA().NR])
         || {? SRXD.STATUS='T'
            || SRXD.STATUS:='N';
               SRXD.SRXP:=null;
               {? SRXD.put()
               || SRXP.WCZYTANY:='N';
                  SRXP.put()
               ?}
            |? SRXD.STATUS='P'
            || SRXD.STATUS:='N';
               SRXD.SRXP:=null;
               SRXD.JORG_N:=SRXD.JORG;
               SRXD.ODD_N:=SRXD.ODD;
               SRXD.POM_N:=SRXD.POM;
               SRXD.OSOBA_N:=SRXD.OSOBA;
               {? SRXD.put()
               || SRXP.WCZYTANY:='N';
                  SRXP.put()
               ?}
            |? SRXD.STATUS='D'
            || {? SRXD.del()
               || SRXP.WCZYTANY:='N';
                  SRXP.put()
               ?}
            ?}
         ?}
      ?};
      SRXD.cntx_pop();
      SRXP.next()
   !}
?};

{? ~KOMM.empty() || KOMM.select() ?};
SRD.KOMM:='N';

SRXP.cntx_pop()


\srxn_druk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Drukowanie arkusza z natury
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','FST_INP_DARZ','fst_inn_arkusz',,,,,,,,'W')


\be_srxn_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redagowaniem pola SRXN.ODD
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? SRXN.JORG<>null || 0 || 1 ?}


\ae_srxn_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redagowaniu pola SRXN.ODD
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? SRXN.ODD<>null & SRXN.POM<>null & SRXN.ODD<>SRXN.POM().ODD
|| SRXN.POM:=null
?};
1


\be_srxp_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed redagowaniem pola SRXN.ODD
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? SRXP.JORG<>null || 0 || 1 ?}


\ae_srxp_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redagowaniu pola SRXN.ODD
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? SRXP.ODD<>null & SRXP.POM<>null & SRXP.ODD<>SRXP.POM().ODD
|| SRXP.POM:=null
?};
1

:Sign Version 2.0 jowisz:1045 2023/09/29 14:56:14 d1b065d79c9e3ea247febb64d1381a457fe2da36d6db9bfc9ef42d82bb091c1bcca5d1ef4b4299d8043d4c2fa6431326b7e3424072d8fedc70824ceefdf7ee6169d392608d2becb3a51b854bff2599179071fdb89fb1ba10b3dffee3223bee981e7e50484367101fea9f092347cff7b95f17b7c4d6a8cf5c5e2b391d0241de8a
