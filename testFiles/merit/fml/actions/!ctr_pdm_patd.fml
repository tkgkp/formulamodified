:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ctr_pdm_patd.fml
:: Utworzony: 04.01.2016
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności CTR_PDM_PATD - Definicje funkcji aktualizacji
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Definicje funkcji aktualizacji - główna formuła czynności CTR_PDM_PATD
::----------------------------------------------------------------------------------------------------------------------
::# properties=GRP_FIRM


\add_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodaje okno do okna grupowego
::   WE: _a - nazwa zakładki
::       _b - tabela
::       _c - okno grupowe
::  OLD: \akt_dan_control/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_firma:=REF.FIRMA; REF.FIRMA:=REF.S_FIRMA;
AUTOKSIE.win_dict('WERF3C'); AUTOKSIE.win_edit('RED_K'); AUTOKSIE.win_patt('RED_K');
SKID_MBN.win_dict('SLO');
K_WERSJE.win_dict('SLO');
ROK_F.win_dict('WER'); ROK_F.win_edit('RED'); ROK_F.win_patt('RED');
OKRO_F.win_dict('SLO'); OKRO_F.win_edit('RED'); OKRO_F.win_patt('SZUK');
CON_FUN.index('DISP'); CON_FUN.prefix(REF.FIRMA);
CON_FUN.win_sel('WER'); CON_FUN.actions('WER','','R:G',1);
CON_FUN.win_fml('WER',,'SYM',,'ICON_BEFORE',"
   {? CON_FUN.CON_RODF=null
   || {? CON_FUN.tr_state=1 || 'xwin16.png:75' || 'xwin16.png:74' ?}
   || ''
   ?}
");
CON_FUN.win_fml('WER',,'OPIS',,'ICON_BEFORE',"CON_ZAD.index('CON_FUN'); CON_ZAD.prefix(REF.FIRMA,CON_FUN.ref()); {? CON_ZAD.first() || 'xwin16.png:70' || '' ?}");
gen_zero:=0;
{? REF.S_FIRMA=REF.GRUPA
|| UD_POM.ROK_POCZ:=UD_POM.ROK_KON:=UD_POM.OKR_POCZ:=UD_POM.OKR_KON:=null
|| UD_POM.ROK_POCZ:=UD_POM.ROK_KON:=SSTALE.AR;
   OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(SSTALE.AR);
   UD_POM.OKR_POCZ:={? OKRO_F.first() || OKRO_F.ref() || null ?};
   UD_POM.OKR_KON:={? OKRO_F.last() & OKRO_F.prev() || OKRO_F.ref() || null ?};
   OKRO_F.cntx_pop()
?};
CON_FUN.dnd_sel('WER',,'records.CON_FUN',"exec('con_fun_przesun','!ctr_pdm_patd',0)");
_b.grp_sel(_c,CON_FUN,'WER',_a,"",,,,"
   SrspAkc:='T';
   ~~
",,,,'maximized_with_title');
task_attach('CTR_PDM_PATD');
task_attach('CTR_PDM_PATW');
~~


\con_fun_przesun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [22.26]
:: OPIS: formuła wykonywana w celu przesunięcia rekordów w drzewie jako przypisane pod wybrany rekord,
::       tabela CON_FUN, okno WER
::   WE: [_a] - tryb 0(domyślnie)-d&d, 1-akcja
::   WY:
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.cntx_psh(); CON_FUN.prefix(REF.FIRMA);
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
{? ~_tryb
|| _dest:=dnd_info('dest_record');
   _sel:=dnd_info('dropped_records');
   _mask:=dnd_info('table_name')
|| {? var_press('dest_record')=-1
   || dest_record:=_dest:=-1;
      CON_FUN.cntx_psh();
      _win_acr:=CON_FUN.mk_sel('Wybierz element docelowy','P',,,,,,1);
      CON_FUN.win_fld(_win_acr,,'SYM',,,,,,);
      CON_FUN.win_fld(_win_acr,,'OPIS',,,,,,);
      CON_FUN.win_act(_win_acr,0,'Formuła','&Wybierz'@@,,'Wybór docelowej pozycji'@,,"sel_exit",1,,,,'W');
      CON_FUN.win_sel(_win_acr);
      {? CON_FUN.select() || dest_record:=_dest:=CON_FUN.ref() ?};
      CON_FUN.cntx_pop()
   || _dest:=dest_record
   ?};
   {? CON_FUN.sel_size()<=1 || {? var_press('dest_record')>-1 || &dest_record ?} ?};
   _sel:=tab_tmp(1,'REF','INTEGER','');
   _sel.blank();
   _sel.REF:=#CON_FUN.ref();
   _sel.add(1);
   _mask:=CON_FUN.name(0)
?};

{? CON_FUN.seek(_dest) & CON_FUN.CON_RODF=null & _sel.first()
|| _ref_doc:=#CON_FUN.ref(); _ok:=1; _ref2:=(-1); _ref3:=0;
   {! |?
      {? CON_FUN.seek(_sel.REF,_mask)
      || {? _ref2=-1
         || _ref2:=CON_FUN.TREE; _ref3:=#CON_FUN.ref()
         |? _ref2<>CON_FUN.TREE
         || _ok:=0
         ?}
      ?};
      _ok=1 & _sel.next()
   !};
   {? _ok
   || ok_kop:=1;
      exec('czy_dd_fun','!ctr_pdm_patd',_ref3,_ref_doc);
      _ok:=ok_kop;
      {? _ok
      || exec('czy_dd_fun1','!ctr_pdm_patd',_ref3,_ref_doc);
         _ok:=ok_kop
      ?};
      VAR_DEL.delete('ok_kop')
   ?};
   {? _ok & _sel.first()
   || {! |?
         {? CON_FUN.seek(_sel.REF,_mask)
         || CON_FUN.TREE:=_ref_doc; CON_FUN.put()
         ?};
         _sel.next()
      !}
   ?}
?};
CON_FUN.cntx_pop()


\bd_parc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed wyswietl dla pol CON_FUN.PAR
::  OLD: \bd_parc/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.CON_RODF();
1


\be_parc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja pol CON_FUN.PAR
::  OLD: \be_parc/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.CON_RODF();
1


\ae_parc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po redakcji pol CON_FUN.PAR
::  OLD: \ae_parc/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.CON_RODF();
{? cur_afld()='PAR01'
|| exec('mark_field','!ctr_pdm_patd');
   {? CON_RODF.NUM_TYP=22
   || {? ~CON_FUN.PAR01 || CON_FUN.FORM_OKR:=CON_FUN.FORM_ROK:='' ?};
      win_disp()
   ?}
|? cur_afld()='PAR02'
|| exec('mark_field','!ctr_pdm_patd');
   {? CON_RODF.NUM_TYP=26
   || {? CON_FUN.PAR02=0 || CON_FUN.PATH:='' ?};
      win_disp()
   ?}
?};
1


\be_skidmwe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja pola CON_FUN.SKIDMWE
::  OLD: \be_skidmwe/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.CON_RODF();
{? CON_RODF.NUM_TYP=19 | CON_RODF.NUM_TYP=20 | CON_RODF.NUM_TYP=30
|| {? -menu_txt()='popraw'
   || CON_FUN.count()=0
   || 1
   ?}
|| 1
?}


\ae_skidmwe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po redakcji pola CON_FUN.SKIDMWE
::  OLD: \ae_skidmwe/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.CON_RODF();
{? CON_RODF.NUM_TYP=21 & CON_FUN.SKIDMWE<>null & CON_FUN.PBUD<>null
|| SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(CON_FUN.SKIDMWE);
   {? SKID_MBP.first()
   || UD_DEF.cntx_psh();
      UD_DEF.index('PODTEC'); UD_DEF.prefix(SKID_MBP.UD_SCH,CON_FUN.PBUD);
      {? ~UD_DEF.first() || CON_FUN.PBUD:=null; UD_POM.PBUD:='' ?};
      UD_DEF.cntx_pop()
   || CON_FUN.PBUD:=null; UD_POM.PBUD:=''
   ?};
   SKID_MBP.cntx_pop()
?};
1


\aerokbaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po redakcji pola CON_FUN.ROK1
::  OLD: \aerokbaz/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.ROK1=null
|| CON_FUN.OKR_POCZ:=CON_FUN.OKR_KON:=null
|| OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(CON_FUN.ROK1);
   {? CON_FUN.OKR_POCZ<>null & ~OKRO_F.seek(CON_FUN.OKR_POCZ) || CON_FUN.OKR_POCZ:=null ?};
   {? CON_FUN.OKR_KON<>null & ~OKRO_F.seek(CON_FUN.OKR_KON) || CON_FUN.OKR_KON:=null ?};
   OKRO_F.cntx_pop()
?};
win_disp(); 1


\beokrbaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja pol CON_FUN.OKR_POCZ i CON_FUN.OKR_KON
::  OLD: \beokrbaz/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.ROK1<>null
|| CON_FUN.ROK1(); 1
|| 0
?}


\aerokdoc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po redakcji pola CON_FUN.ROK2
::  OLD: \aerokdoc/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.ROK2=null
|| CON_FUN.OKR_DOC:=null
|| OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(CON_FUN.ROK2);
   {? CON_FUN.OKR_DOC<>null & ~OKRO_F.seek(CON_FUN.OKR_DOC) || CON_FUN.OKR_DOC:=null ?};
   OKRO_F.cntx_pop()
?};
win_disp(); 1


\beokrdoc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja pola CON_FUN.OKR_DOC
::  OLD: \beokrdoc/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.ROK2<>null
|| CON_FUN.ROK2(); 1
|| 0
?}


\bdformokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Na wyswietl dla pol CON_FUN.FORM_OKR i CON_FUN.FORM_ROK
::  OLD: \bdformokr/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.PAR01=1 || '' || exec('findfnv','#color') ?}


\beformokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja dla pol CON_FUN.FORM_OKR i CON_FUN.FORM_ROK
::  OLD: \beformokr/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.PAR01=1


\bd_path_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Na wyswietl dla pola CON_FUN.PATH
::  OLD: \bd_path_imp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.PAR02=1 || '' || exec('findfnv','#color') ?}


\be_path_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Na wyswietl dla pola CON_FUN.PATH
::  OLD: \be_path_imp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.PAR02=1


\cfun_impfolder
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Pobieranie folderu z importowanym plikiem
::  OLD: \cfun_impfolder/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
:: Przygotowanie katalogu tymczasowego po stronie serwera

_tmp_dir:=fmk_tmp_dir(0);
{? type_of(_tmp_dir)<>type_of(~~)
|| _path:=_tmp_dir.get_path()
|| FUN.emsg('Nie udało się utworzyć katalogu tymczasowego po stronie serwera.'@);
   return()
?};
_path





\ae_firmawyb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Po redakcji pola CON_FUN.FIRMAWYB
::  OLD: \ae_firmawyb/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.FIRMAWYB
|| {? CON_FUN.ODD<>null
   || ODD.cntx_psh(); ODD.index('ODDZIALY'); ODD.prefix(CON_FUN.FIRMAWYB);
      {? ~ODD.seek(CON_FUN.ODD) || CON_FUN.ODD:=null ?};
      ODD.cntx_pop()
   ?}
|| CON_FUN.ODD:=null
?}; win_disp();
1


\bdodd_con_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Przed wyswietl dla pola CON_FUN.ODD
::  OLD: \bdodd_con_fun/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? REF.S_FIRMA<>REF.GRUPA
|| 1
|| {? CON_FUN.FIRMAWYB || 1 || exec('findfnv','#color') ?}
?}


\beodd_con_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Przed redakcja pola CON_FUN.ODD
::  OLD: \beodd_con_fun/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? REF.S_FIRMA=REF.GRUPA
|| {? CON_FUN.FIRMAWYB<>null || REF.FIRMA:=CON_FUN.FIRMAWYB; 1 || 0 ?}
|| 1
?}


\cong_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Dolaczanie grupy funkcji
::  OLD: \cong_dol/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.win_edit('RED1');
gen_zero:=1; ROZNE.GEN_ZERO:=0;
{? CON_FUN.get()
|| _tree:=CON_FUN.ref(); _akt:=CON_FUN.AKT
|| _tree:=0; _akt:='T'
?};
{? _tree
|| {? CON_FUN.TREE=null
   || {? CON_FUN.CON_RODF<>null | exec('czy_fun','!ctr_pdm_patd',1)
      || gen_zero:=0; ROZNE.GEN_ZERO:=1
      ?}
   || gen_zero:=0; ROZNE.GEN_ZERO:=0
   ?}
|| gen_zero:=0; ROZNE.GEN_ZERO:=1
?};
CON_FUN.hdr_edit(); CON_FUN.hdr_edit('Grupa funkcji'@);
CON_FUN.blank();
exec('mark_field','!ctr_pdm_patd');
{? CON_FUN.edit("exec('spr_fun','!ctr_pdm_patd')")
|| CON_FUN.TREE:={? ROZNE.GEN_ZERO || null || _tree ?};
   CON_FUN.AKT:=_akt;
   CON_FUN.add()
?}


\conf_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Dolaczanie grupy funkcji
::  OLD: \conf_dol/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.get()
|| _tree:=CON_FUN.ref(); _akt:=CON_FUN.AKT
|| _tree:=0; _akt:='T'
?};
gen_zero:=1; ROZNE.GEN_ZERO:=0;
{? _tree
|| {? CON_FUN.TREE=null
   || {? (CON_FUN.CON_RODF<>null | exec('czy_fun','!ctr_pdm_patd',2))
      || gen_zero:=0; ROZNE.GEN_ZERO:=1
      ?}
   || gen_zero:=0; ROZNE.GEN_ZERO:=0
   ?}
|| gen_zero:=0; ROZNE.GEN_ZERO:=1
?};
SKID_MBN.win_dict('SLO'); K_WERSJE.win_dict('SLO');
{? REF.S_FIRMA=REF.GRUPA
|| CON_RODF.index('DISPGR'); CON_RODF.prefix(1)
|| CON_RODF.index('DISP'); CON_RODF.prefix()
?};
{? ~CON_RODF.first()
|| CON_RODF.cntx_psh();
   exec('add_rodf','!ctr_pdm_patd');
   CON_RODF.cntx_pop()
?};
CON_RODF.win_sel('WER');
{? CON_RODF.select()
|| confuned:=REF.FIRMA;
   CON_FUN.blank();
   CON_FUN.TREE:={? ROZNE.GEN_ZERO || null || _tree ?};
   CON_FUN.CON_RODF:=CON_RODF.ref();
   CON_FUN.OPIS:=CON_RODF.OPIS;
   CON_FUN.AKT:=_akt;
   {? CON_RODF.NUM_TYP=10
   || CON_FUN.PAR01:=1; CON_FUN.PAR02:=CON_FUN.PAR03:=CON_FUN.PAR04:=CON_FUN.PAR06:=CON_FUN.PAR08:=2
   |? CON_RODF.NUM_TYP=19
   || CON_FUN.PAR01:=1
   |? CON_RODF.NUM_TYP=18
   || CON_FUN.PAR01:=CON_FUN.PAR02:=CON_FUN.PAR03:=CON_FUN.PAR04:=CON_FUN.PAR05:=1
   |? CON_RODF.NUM_TYP=26
   || CON_FUN.PAR01:=CON_FUN.PAR03:=CON_FUN.PAR04:=1;
      CON_FUN.PAR05:=1
   ?};
   exec('okn_fun','!ctr_pdm_patd');
   exec('mark_field','!ctr_pdm_patd');
   {? CON_FUN.edit("exec('spr_fun','!ctr_pdm_patd')")
   || {? CON_FUN.CON_RODF<>null
      || {? CON_FUN.CON_RODF().NUM_TYP=9 || exec('fun_9','!ctr_pdm_patd')
         |? CON_RODF.NUM_TYP=12 | CON_RODF.NUM_TYP=28 || exec('fun_12','!ctr_pdm_patd')
         ?}
      ?};
      {? CON_FUN.CON_RODF().NUM_TYP=10 & REF.S_FIRMA<>REF.GRUPA || CON_FUN.FIRMAWYB:=REF.FIRMA ?};
      CON_FUN.add()
   ?};
   REF.FIRMA:=confuned;
   VAR_DEL.delete('confuned')
?};
1


\okn_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Ustawia okienko dla funkcji
::  OLD: \okn_fun/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_num:=CON_RODF.NUM_TYP;
{? _num=11 | _num=13 | _num=14 | _num=16
|| CON_FUN.win_edit('RED14')
|? _num=12
|| CON_FUN.win_edit('RED17')
|? _num=15 | _num=1
|| {? REF.S_FIRMA=REF.GRUPA
   || CON_FUN.win_edit('RED14JG')
   || CON_FUN.win_edit('RED14J')
   ?}
|? _num=2 | _num=4 | _num=5 | _num=8 | _num=23
|| CON_FUN.win_edit('RED1')
|? _num=3 | _num=17
|| {? REF.S_FIRMA=REF.GRUPA
   || CON_FUN.win_edit('RED1JG')
   || CON_FUN.win_edit('RED1J')
   ?}
|? _num=6 | _num=31 | _num=32
|| exec('set_skid_mbn_f','control');
   CON_FUN.win_edit('RED15')
|? _num=7
|| exec('set_skid_mbn_f','control');
   CON_FUN.win_edit('RED10')
|? _num=9
|| CON_FUN.win_edit('RED3')
|? _num=10
|| {? REF.S_FIRMA=REF.GRUPA
   || CON_FUN.win_edit('RED2G')
   || CON_FUN.win_edit('RED2')
   ?}
|? _num=18
|| {? REF.S_FIRMA=REF.GRUPA
   || CON_FUN.win_edit('RED8G')
   || CON_FUN.win_edit('RED8')
   ?}
|? _num=19
|| CON_FUN.win_edit('RED4')
|? _num=20
|| CON_FUN.win_edit('RED5')
|? _num=21
|| CON_FUN.win_edit('RED6');
   exec('set_fml','#field',UD_POM,'PBUD',
      "UD_POM.PBUD:=CON_FUN.PBUD().SYMBOL;~~",
      "exec('be_dim','control',CON_FUN.SKIDMWE,1)",
      "
         _sym:=exec('f3_dim','control',CON_FUN.SKIDMWE,1);
         {? _sym<>''
         || fld(_sym)
         ?}
      ",
      "
         _ref:=exec('ae_dim','control',CON_FUN.SKIDMWE,1);
         {? _ref
         || CON_FUN.PBUD:=_ref;
            fld(CON_FUN.PBUD().SYMBOL);
            1
         || CON_FUN.PBUD:=null;
            fld('');
            1
         ?}
      "
   )
|? _num=22
|| {? REF.S_FIRMA=REF.GRUPA
   || CON_FUN.win_edit('RED7G')
   || CON_FUN.win_edit('RED7')
   ?}
|? _num=24
|| CON_FUN.win_edit('RED16')
|? _num=25
|| CON_FUN.win_edit('RED13')
|? _num=26
|| CON_FUN.win_edit('RED9')
|? _num=27
|| CON_FUN.win_edit('RED11')
|? _num=28
|| CON_FUN.win_edit('RED18')
|? _num=29
|| CON_FUN.win_edit('RED19')
|? _num=30 | _num=33
|| CON_FUN.win_edit('RED12')
|? _num=34
|| exec('set_skid_mbn_f','control','S');
   CON_FUN.win_edit('RED10')
?};
CON_FUN.hdr_edit(); CON_FUN.hdr_edit('Funkcja'@)


\czy_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie czy pozycja ma podrzedna funkcje lub grupe
::   WE: _a - 1 - czy ma podrzedna funkcje
::            2 - czy ma podrzedna grupe
::  OLD: \czy_fun/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
CON_FUN.cntx_psh(); CON_FUN.index('DISP'); CON_FUN.prefix(REF.FIRMA,CON_FUN.ref());
{? CON_FUN.first()
|| {!
   |? _zwrot:={? _a=1
              || CON_FUN.CON_RODF<>null
              || CON_FUN.CON_RODF=null
              ?};
      ~_zwrot & CON_FUN.next()
   !}
?};
CON_FUN.cntx_pop();
_zwrot


\conf_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Funkcje do aktualizacji danych - poprawianie
::  OLD: \conf_pop/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
gen_zero:=0; confuned:=REF.FIRMA;
{? CON_FUN.CON_RODF<>null
|| CON_FUN.CON_RODF()
?};
exec('mark_field','!ctr_pdm_patd');
_sym:=CON_FUN.SYM;
{? CON_FUN.edit("exec('spr_fun','!ctr_pdm_patd')")
|| {? CON_FUN.CON_RODF<>null
   || {? CON_FUN.CON_RODF().NUM_TYP=9 || exec('fun_9','!ctr_pdm_patd')
      |? CON_RODF.NUM_TYP=12 | CON_RODF.NUM_TYP=28 || exec('fun_12','!ctr_pdm_patd')
      ?}
   ?};
   CON_FUN.put();
   {? CON_FUN.SYM<>_sym
   || B_KEYREF.cntx_psh();
      B_KEYREF.index('KEYREF');
      CON_FUNL.cntx_psh();
      CON_FUNL.index('GRFUN');
      CON_FUNL.prefix(REF.S_FIRMA,_sym,);
      {? CON_FUNL.first()
      || {!
         |? B_KEYREF.prefix(CON_FUNL.uidref());
            {? B_KEYREF.first()
            || CON_FUNL.cntx_psh();
               _ref:={? CON_FUNL.next() || CON_FUNL.ref() || null ?};
               CON_FUNL.cntx_pop();
               CON_FUNL.cntx_psh();
               CON_FUNL.prefix();
               CON_FUNL.GRFUN:=CON_FUN.SYM;
               CON_FUNL.put();
               exec('desc_update','#b__box',CON_FUNL.uidref());
               CON_FUNL.cntx_pop();
               {? _ref || CON_FUNL.seek(_ref) ?}
            || CON_FUNL.next()
            ?}
         !}
      ?};
      CON_FUNL.cntx_pop();
      B_KEYREF.cntx_pop()
   ?}
?};
REF.FIRMA:=confuned;
VAR_DEL.delete('confuned')


\spr_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie parametrow grupy funkcji
::  OLD: \spr_fun/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(CON_FUN,,'SYM','OPIS');
{? _zwrot=''
|| {? -menu_txt='popraw' || _ref:=CON_FUN.ref() ?};
   CON_FUN.cntx_psh();
   CON_FUN.index('UNIK'); CON_FUN.prefix(REF.S_FIRMA,CON_FUN.SYM,CON_FUN.SYM);
   {? CON_FUN.first() & {? -menu_txt='popraw' || CON_FUN.ref()<>_ref || 1 ?}
   || FUN.info('Istnieje już element o podanym symbolu.'@); _zwrot:='SYM'
   ?};
   CON_FUN.cntx_pop()
?};
{? _zwrot=''
|| CON_FUN.CON_RODF();
   {? CON_RODF.NUM_TYP=6 | CON_RODF.NUM_TYP=7 | CON_RODF.NUM_TYP=31
   || {? CON_FUN.SKIDMWE=null
      || FUN.info('Nie wybrano modelu.'@); _zwrot:='SKIDMWE'
      ?}
   |? CON_RODF.NUM_TYP=9
   || {? CON_FUN.SKIDMWE=null
      || FUN.info('Nie wybrano modelu wejściowego.'@); _zwrot:='SKIDMWE'
      ?};
      {? _zwrot='' & CON_FUN.SKIDMWY=null
      || FUN.info('Nie wybrano modelu wyjściowego.'@); _zwrot:='SKIDMWY'
      ?};
      {? _zwrot='' & CON_FUN.SKIDMWY=CON_FUN.SKIDMWE
      || FUN.info('Modele wejściowy i wyjściowy muszą być różne.'@); _zwrot:='SKIDMWE'
      ?}
   |? CON_RODF.NUM_TYP=12
   || {? K_ES.SRSP=null
      || FUN.info('Nie wybrano planu amortyzacji.'@);
         _zwrot:='SRSP'
      ?}
   |? CON_RODF.NUM_TYP=19
   || {? CON_FUN.SKIDMWE=null
      || FUN.info('Nie wybrano modelu.'@); _zwrot:='SKIDMWE'
      ?};
      {? _zwrot='' & CON_FUN.KWER1=null
      || FUN.info('Nie wybrano wersji bazowej planu lub wykonania.'@); _zwrot:='KWER1'
      ?};
      {? _zwrot='' & CON_FUN.ROK1=null
      || FUN.info('Nie wybrano roku bazowego.'@); _zwrot:='ROK1'
      ?};
      {? _zwrot='' & CON_FUN.OKR_POCZ=null
      || FUN.info('Nie wybrano okresu początkowego.'@); _zwrot:='OKR_POCZ'
      ?};
      {? _zwrot='' & CON_FUN.OKR_KON=null
      || FUN.info('Nie wybrano okresu końcowego.'@); _zwrot:='OKR_KON'
      ?};
      {? _zwrot='' & CON_FUN.OKR_KON().NR<CON_FUN.OKR_POCZ().NR
      || FUN.info('Okres końcowy nie może być wcześniejszy niż okres początkowy.'@); _zwrot:='OKR_POCZ'
      ?};
      {? _zwrot='' & CON_FUN.KWER2=null
      || FUN.info('Nie wybrano wersji docelowej planu.'@); _zwrot:='KWER2'
      ?};
      {? _zwrot='' & CON_FUN.ROK2=null
      || FUN.info('Nie wybrano roku docelowego.'@); _zwrot:='ROK2'
      ?};
      {? _zwrot='' & CON_FUN.OKR_DOC=null
      || FUN.info('Nie wybrano okresu docelowego.'@); _zwrot:='OKR_DOC'
      ?}
   |? CON_RODF.NUM_TYP=20 | CON_RODF.NUM_TYP=21 | CON_RODF.NUM_TYP=28 | CON_RODF.NUM_TYP=29 | CON_RODF.NUM_TYP=30
   || {? CON_FUN.SKIDMWE=null
      || FUN.info('Nie wybrano modelu.'@); _zwrot:='SKIDMWE'
      ?};
      {? _zwrot='' & CON_FUN.KWER1=null
      || FUN.info('Nie wybrano wersji.'@); _zwrot:='KWER1'
      ?};
      {? _zwrot='' & CON_RODF.NUM_TYP=28 & K_ES.SRSP=null
      || FUN.info('Nie wybrano planu amortyzacji.'@); _zwrot:='SRSP'
      ?}
   |? CON_RODF.NUM_TYP=22
   || {? CON_FUN.FORM='' || FUN.info('Nie wprowadzono treści formuły głównej.'@); _zwrot:='FORM' ?}
   |? CON_RODF.NUM_TYP=26
   || {? CON_FUN.SKIDMWE=null
      || FUN.info('Nie wybrano modelu.'@); _zwrot:='SKIDMWE'
      ?};
      {? _zwrot='' & CON_FUN.KWER1=null
      || FUN.info('Nie wybrano wersji planu lub wykonania.'@); _zwrot:='KWER1'
      ?};
      {? _zwrot='' & CON_FUN.ROK1=null
      || FUN.info('Nie wybrano roku.'@); _zwrot:='ROK1'
      ?};
      {? _zwrot='' & CON_FUN.OKR_POCZ=null
      || FUN.info('Nie wybrano okresu początkowego.'@); _zwrot:='OKR_POCZ'
      ?};
      {? _zwrot='' & CON_FUN.OKR_KON=null
      || FUN.info('Nie wybrano okresu końcowego.'@); _zwrot:='OKR_KON'
      ?};
      {? _zwrot='' & CON_FUN.OKR_KON().NR<CON_FUN.OKR_POCZ().NR
      || FUN.info('Okres końcowy nie może być wcześniejszy niż okres początkowy.'@); _zwrot:='OKR_POCZ'
      ?};
      {? _zwrot='' & CON_FUN.FILE=''
      || FUN.info('Nie wprowadzono nazwy pliku z danymi.'@); _zwrot:='FILE'
      ?};
      {? _zwrot='' & CON_FUN.PAR02=1 & CON_FUN.PATH=''
      || FUN.info('Nie wprowadzono ścieżki do pliku z danymi.'@); _zwrot:='PATH'
      ?}
   |? CON_RODF.NUM_TYP=27
   || {? CON_FUN.KWER1=null
      || FUN.info('Nie wybrano wersji planu lub wykonania.'@); _zwrot:='KWER1'
      ?}
   ?}
?};
_zwrot


\fun_9
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Obsluga funkcji przeksztalcenia dla modeli
::  OLD: \fun_9/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.SKIDMWE<>null & CON_FUN.SKIDMWY<>null
|| SKID_PMO.cntx_psh();
   SKID_PMO.index('SKIDMBWE'); SKID_PMO.prefix(REF.FIRMA,CON_FUN.SKIDMWE,CON_FUN.SKIDMWY);
   {? ~SKID_PMO.first()
   || SKID_PMO.prefix(); SKID_PMO.blank(1);
      SKID_PMO.FIRMA:=REF.FIRMA;
      SKID_PMO.SKIDMWE:=CON_FUN.SKIDMWE;
      SKID_PMO.SKIDMWY:=CON_FUN.SKIDMWY;
      SKID_PMO.add()
   ?};
   SKID_PMO.cntx_pop()
?}


\czy_dd_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie, czy mozna przeniesc element
::   WE: _a - ref elementu kopiowanego
::       _b - ref elementu docelowego
::  OLD: \czy_dd_fun/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.cntx_psh(); CON_FUN.prefix(REF.FIRMA);
{? CON_FUN.seek(_b,CON_FUN.name())
|| {? CON_FUN.TREE=_a
   || ok_kop:=0
   |? CON_FUN.TREE
   || exec('czy_dd_fun','!ctr_pdm_patd',_a,CON_FUN.TREE)
   ?}
?};
CON_FUN.cntx_pop()


\czy_dd_fun1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie, czy mozna przeniesc element
::   WE: _a - ref elementu kopiowanego
::       _b - ref elementu docelowego
::  OLD: \czy_dd_fun1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.cntx_psh(); CON_FUN.prefix(REF.FIRMA);
{? CON_FUN.seek(_a,CON_FUN.name())
|| _grup:=(CON_FUN.CON_RODF=null);
   {? CON_FUN.seek(_b,CON_FUN.name())
   || CON_FUN.index('AKT'); CON_FUN.prefix(REF.FIRMA,#CON_FUN.ref());
      {? CON_FUN.first()
      || {! |?
            {? (_grup & CON_FUN.CON_RODF<>null) | (~_grup & CON_FUN.CON_RODF=null) || ok_kop:=0 ?};
            ok_kop & CON_FUN.next()
         !}
      ?}
   ?}
?};
CON_FUN.cntx_pop();
1


\conf_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Funkcje do aktualizacji danych - usuwanie
::  OLD: \conf_usu/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.cntx_psh();
CON_FUN.index('DISP'); CON_FUN.prefix(REF.FIRMA,CON_FUN.ref());
_powiaz:=CON_FUN.first();
CON_FUN.cntx_pop();
_ref_nad:=exec('ref_nad','!ctr_pdm_patd');
{? _powiaz
|| {? FUN.ask('Usunąć pozycję wraz z elementami podrzędnymi?'@)
   || do();
      exec('conf_usu1','!ctr_pdm_patd',CON_FUN.ref());
      exec('conf_usup','!ctr_pdm_patd');
      {? ~CON_FUN.del(,1) || undo() ?};
      end();
      {? ~CON_FUN.get() || CON_FUN.actions('WER','','D:G',1) ?}
   || _ref_nad:=null()
   ?}
|| {? FUN.ask('Usunąć pozycję?'@)
   || do();
      exec('conf_usup','!ctr_pdm_patd');
      {? ~CON_FUN.del(,1) || undo() ?};
      end()
   || _ref_nad:=null()
   ?}
?};
{? ~CON_FUN.size()
|| CON_FUN.win_sel('WER'); CON_FUN.actions('WER','','D:G',1)
|? _ref_nad<>null
|| CON_FUN.seek(_ref_nad)
?}


\ref_nad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Szukanie elementu na ktorym ma sie ustawic bufor po usunieciu
::  OLD: \ref_nad/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=null;
CON_FUN.cntx_psh();
{? CON_FUN.TREE
|| {? CON_FUN.seek(CON_FUN.TREE,CON_FUN.name()) || _zwrot:=CON_FUN.ref() ?}
|| CON_FUN.index('DISP'); CON_FUN.prefix(REF.FIRMA,0);
   {? CON_FUN.first() || _zwrot:=CON_FUN.ref() ?}
?};
CON_FUN.cntx_pop();
_zwrot


\conf_usu1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Funkcje do aktualizacji danych - usuwanie (wewnetrzna)
::   WE: _a - ref elementu nadrzednego
::  OLD: \conf_usu1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.cntx_psh();
CON_FUN.index('DISP'); CON_FUN.prefix(REF.FIRMA,_a);
{? CON_FUN.first()
|| {! |?
      exec('conf_usu1','!ctr_pdm_patd',CON_FUN.ref());
      exec('conf_usup','!ctr_pdm_patd');
      _del:=CON_FUN.del(,1);
      {? _del=1 || 0 |? _del=0 || undo(); 0 || 1 ?}
   !}
?};
CON_FUN.cntx_pop()


\conf_usup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Funkcje do aktualizacji danych - usuwanie parametrow i wywolan
::  OLD: \conf_usup/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUNP.cntx_psh(); CON_FUNP.index('UNIK'); CON_FUNP.prefix(CON_FUN.ref());
{? CON_FUNP.first()
|| {! |?
      _del:=CON_FUNP.del(,1);
      {? _del=1 || 0 |? _del=0 || undo(); 0 || 1 ?}
   !}
?};
CON_FUNP.cntx_pop();
SKID_MBE.cntx_psh(); SKID_MBE.index('ELEM');
SKID_MBS.cntx_psh(); SKID_MBS.index('UNIK');
SKID_MBK.cntx_psh(); SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref());
{? SKID_MBK.first()
|| {! |?
      SKID_MBE.prefix(SKID_MBK.ref());
      {? SKID_MBE.first()
      || {! |?
             _delr:=SKID_MBE.del(,1);
             {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
         !}
      ?};
       SKID_MBS.prefix(SKID_MBK.ref());
      {? SKID_MBS.first()
      || {! |?
             _delr:=SKID_MBS.del(,1);
             {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
         !}
      ?};
      _delr:=SKID_MBK.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
SKID_MBK.cntx_pop(); SKID_MBE.cntx_pop(); SKID_MBS.cntx_pop();
CALO_POZ.cntx_psh(); CALO_NAG.cntx_psh();
CALO_NAG.index('DISP'); CALO_NAG.prefix(CON_FUN.ref());
{? CALO_NAG.first()
|| {! |?
      CALO_POZ.use('cc'+(4+$CALO_NAG.DATA)+form(CALO_NAG.DATA~2,-2));
      CALO_POZ.index('DISP'); CALO_POZ.prefix(CALO_NAG.ref());
      {? CALO_POZ.first()
      || {! |?
            _delr:=CALO_POZ.del(,1);
            {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
         !}
      ?};
      _delr:=CALO_NAG.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
  !}
?};
CALO_POZ.cntx_pop(); CALO_NAG.cntx_pop();
SKID_MBX.cntx_psh();
SKID_MBX.index('UNIK'); SKID_MBX.prefix(CON_FUN.ref());
{? SKID_MBX.first()
|| {! |?
      _del:=SKID_MBX.del(,1);
      {? _del=1 || 0 |? _del=0 || undo(); 0 || 1 ?}
   !}
?};
SKID_MBX.cntx_pop();
::CON_ZAD.cntx_psh();
::CON_ZAD.index('CON_FUN'); CON_ZAD.prefix(REF.FIRMA,CON_FUN.ref());
::{? CON_ZAD.first() || exec('usu_alert1','skid_ktr') ?};
::CON_ZAD.cntx_pop()
~~


\con_fun_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Eksport funkcji aktualizacji danych
::  OLD: \con_fun_exp/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.sel_size()
|| __Tfun.REF:=#CON_FUN.ref();
   __Tfun.REF_NAD:=CON_FUN.TREE;
   __Tfun.add()
|| CON_FUN.cntx_psh();
   CON_FUN.index('DISP'); CON_FUN.prefix(REF.S_FIRMA,CON_FUN.ref());
   _ma:=CON_FUN.first();
   CON_FUN.cntx_pop();
   {? _ma
   || _pyt:=FUN.choice('Czy wykonać eksport funkcji aktualizacji danych?'@,2,'Tylko bieżącej'@,'Z podrzędnymi'@)
   || _pyt:=FUN.choice('Czy wykonać eksport funkcji aktualizacji danych?'@,1,'Tak'@,'Nie'@)
   ?};
   {? _pyt
   || __Tpyt:=_pyt;
      exec('con_fun_exp_tab','!ctr_pdm_patd');
      __Tfun.REF:=#CON_FUN.ref();
      __Tfun.REF_NAD:=CON_FUN.TREE;
      __Tfun.add();
      exec('ag_con_fun_exp','!ctr_pdm_patd')
   ?}
?}


\con_fun_exp_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Eksport funkcji aktualizacji danych - tabela tymczasowa
::  OLD: \con_fun_exp_tab/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__Tfun','__Tfun2');
__Tfun:=tab_tmp(2,
   'REF_NAD','INTEGER',,
   'REF','INTEGER',
);
__Tfun2:=tab_tmp(1,
   'REF','INTEGER',
)


\bg_con_fun_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Grupa przed akcji eksporu funkcji aktualizacji danych
::  OLD: \bg_con_fun_exp/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_pyt:=FUN.choice('Czy wykonać eksport funkcji aktualizacji danych?'@,2,'Tylko zaznaczone'@,'Z podrzędnymi'@);
{? _pyt
|| exec('con_fun_exp_tab','!ctr_pdm_patd');
   __Tpyt:=_pyt;
   1
?}


\ag_con_fun_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Grupa po akcji eksporu funkcji aktualizacji danych
::  OLD: \ag_con_fun_exp/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
exec('con_fun_exp1','!ctr_pdm_patd');
VAR_DEL.delete('__Tfun','__Tfun2','__Tpyt')


\con_fun_exp1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Eksport funkcji aktualizacji danych
::  OLD: \con_fun_exp1/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('cli_functions','#system')=0
|| FUN.emsg(exec('indevice_nacc_msg','#system'));
   return(0)
?};
_file:= fmk_tmp_dir(0).get_path()+'/funkcje.txt';
{? _file<>''
|| _f:=fopen(_file,'w');
   {? _f
   || fwrite(_f,'Macrologic Controlling FUNKCJE export file');
      {? __Tfun.first()
      || CON_FUN.cntx_psh(); CON_FUN.prefix();
         {!
         |? {? CON_FUN.seek(__Tfun.REF,)
            || exec('con_fun_exp2','!ctr_pdm_patd',_f)
            ?};
            __Tfun.next()
         !};
         CON_FUN.cntx_pop()
      ?};
      fclose(_f)
   ?};
   dlg_save(_file,0)

?}


\con_fun_exp2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Eksport funkcji aktualizacji danych - pomocnicza
::   WE: _a - uchwyt do pliku
::  OLD: \con_fun_exp2/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.TREE & __Tfun2.find_key(CON_FUN.TREE)
|| CON_FUN.cntx_psh();
   CON_FUN.index('DISP'); CON_FUN.prefix();
   _nad:={? CON_FUN.seek(CON_FUN.TREE,) || CON_FUN.SYM || '' ?};
   CON_FUN.cntx_pop()
|| _nad:=''
?};
__Tfun2.REF:=#CON_FUN.ref();
__Tfun2.add();
fwrite(_a,
   'CON_FUN'+'@'+
   $CON_FUN.CON_RODF().NUM_TYP+'@'+
   CON_FUN.FILE+'@'+
   CON_FUN.FIRMAWYB().SYMBOL+'@'+
   CON_FUN.FORM+'@'+
   CON_FUN.FORM_INI+'@'+
   CON_FUN.FORM_KON+'@'+
   CON_FUN.FORM_OKR+'@'+
   CON_FUN.FORM_ROK+'@'+
   CON_FUN.KWER1().SYM+'@'+
   CON_FUN.KWER2().SYM+'@'+
   CON_FUN.K_WERSJE().SYM+'@'+
   CON_FUN.MODEL().KOD+'@'+
   CON_FUN.ODD().OD+'@'+
   $CON_FUN.OKR_DOC().NR+'@'+
   $CON_FUN.OKR_KON().NR+'@'+
   $CON_FUN.OKR_POCZ().NR+'@'+
   CON_FUN.OPIS+'@'+
   $CON_FUN.PAR01+'@'+
   $CON_FUN.PAR02+'@'+
   $CON_FUN.PAR03+'@'+
   $CON_FUN.PAR04+'@'+
   $CON_FUN.PAR05+'@'+
   $CON_FUN.PAR06+'@'+
   $CON_FUN.PAR07+'@'+
   $CON_FUN.PAR08+'@'+
   $CON_FUN.PAR09+'@'+
   CON_FUN.PATH+'@'+
   CON_FUN.PBUD().SYMBOL+'@'+
   $CON_FUN.ROK1().POCZ_ROK+'@'+
   $CON_FUN.ROK2().POCZ_ROK+'@'+
   CON_FUN.SKIDMWE().KOD+'@'+
   CON_FUN.SKIDMWY().KOD+'@'+
   CON_FUN.SYM+'@'+
   _nad+'@'+
   CON_FUN.WAR_KSIE+'@'+
   CON_FUN.FIRMA().SYMBOL+'@'+
   $CON_FUN.PAR10+'@'
);

CON_FUNP.index('UNIK'); CON_FUNP.prefix(CON_FUN.ref());
{? CON_FUNP.first()
|| {!
   |? fwrite(_a,'CON_FUNP'+'@'+CON_FUNP.FIRMA().SYMBOL+'@'+$CON_FUNP.ROK_F().POCZ_ROK+'@'+CON_FUNP.AUTOKSIE().NAZ);
      CON_FUNP.next()
   !}
?};
{? CON_FUN.CON_RODF().NUM_TYP=9
|| SKID_PMO.index('SKIDMBWE'); SKID_PMO.prefix(CON_FUN.FIRMA,CON_FUN.SKIDMWE,CON_FUN.SKIDMWY);
   {? SKID_PMO.first()
   || SKID_PMP.index('UNIK'); SKID_PMP.prefix(SKID_PMO.ref());
      {? SKID_PMP.first()
      || {!
         |? fwrite(_a,'SKID_PMP@'+$SKID_PMP.WYMWE().LP+'@'+$SKID_PMP.WYMWY().LP+'@'+SKID_PMP.RODZ_WY+'@'+
                      SKID_PMP.FORMULA+'@'+SKID_PMP.EL_DOM().SYMBOL);
            SKID_PMP.next()
         !}
      ?}
   ?}
?};
SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref());
SKID_MBE.index('TYP');
SKID_MBS.index('UNIK');
{? SKID_MBK.first()
|| {!
   |? fwrite(_a,'SKID_MBK@'+$SKID_MBK.SKID_MBP().LP+'@'+SKID_MBK.PBUD().SYMBOL+'@'+$SKID_MBK.DEST+'@'+
                $SKID_MBK.SOURCE+'@'+$SKID_MBK.SP_KOP+'@'+$SKID_MBK.WSPOL+'@'+$SKID_MBK.WYM_WIEL);
      SKID_MBE.prefix(SKID_MBK.ref());
      {? SKID_MBE.first()
      || {!
         |? fwrite(_a,'SKID_MBE@'+$SKID_MBE.SP_KOP+'@'+$SKID_MBE.TYP+'@'+SKID_MBE.UD_SKL().SYMBOL+'@'+$SKID_MBE.WSP);
            SKID_MBE.next()
         !}
      ?};
      SKID_MBS.prefix(SKID_MBK.ref());
      {? SKID_MBS.first()
      || {!
         |? fwrite(_a,'SKID_MBS@'+SKID_MBS.EL_WE().SYMBOL+'@'+SKID_MBS.EL_WY().SYMBOL+'@'+$SKID_MBS.SP_ZAM);
            SKID_MBS.next()
         !}
      ?};
      SKID_MBK.next()
   !}
?};
SKID_MBP.index('LP'); SKID_MBP.prefix(CON_FUN.SKIDMWE); _size:=SKID_MBP.size();
SKID_MBX.index('UNIK'); SKID_MBX.prefix(CON_FUN.ref());
{? SKID_MBX.first()
|| {!
   |? _v:='SKID_MBX@'+SKID_MBX.FORM_KW+'@'+$SKID_MBX.LP;
      {! _i:=1.._size
      |! _p:='SKID_MBX.WYM'+(('0'+($_i))+2);
         _v+='@'+$($(_p+'R'))()+'@'+{? ($(_p+'R'))()=1 || ($(_p+'S().SYMBOL'))() || ($(_p+'F'))() ?}
      !};
      fwrite(_a,_v);
      SKID_MBX.next()
   !}
?};
{? __Tpyt=2
|| CON_FUN.cntx_psh();
   CON_FUN.index('DISP'); CON_FUN.prefix(CON_FUN.FIRMA,CON_FUN.ref());
   {? CON_FUN.first()
   || {!
      |? exec('con_fun_exp2','!ctr_pdm_patd',_a);
         CON_FUN.next()
      !}
   ?};
   CON_FUN.cntx_pop()
?}


\con_fun_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Import funkcji aktualizacji danych
::  OLD: \con_fun_imp/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_ref_nad:=null;
{? CON_FUN.get() & CON_FUN.CON_RODF=null()
|| _pyt:=FUN.choice('Czy wykonać import funkcji z pliku?'@,1,'Do głównego poziomu'@,'Do bieżącej grupy'@);
   {? _pyt=2
   || _ref_nad:=CON_FUN.ref()
   ?}
|| _pyt:=1
?};
{? _pyt=0 || return() ?};
_filtr:='Funkcja aktualizacji danych'@+' (*.txt)|*.txt';

_file:= fmk_tmp_dir(0).get_path()+'funkcje.txt';
dlg_upload(_file,0,'.txt');
{? _file<>''
|| _f:=fopen(_file,'r');
   {? _f
   || _l:=fread(_f);
      {? _l='Macrologic Controlling FUNKCJE export file'
      || VAR_DEL.delete('__Err');
         __Err:=tab_tmp(1,
            'OPIS','STRING[255]',
         );
         _err:="
            __Ok:=0;
            _a+='.';
            {? ~__Err.find_key(_a,)
            || __Err.OPIS:=_a;
               __Err.add()
            ?}
         ";
         CON_FUN.cntx_psh();
         CON_FUN.index('UNIK'); CON_FUN.prefix();
         CON_RODF.index('UNIK2'); CON_RODF.prefix();
         FIRMA.index('SYMBOL'); FIRMA.prefix();
         K_WERSJE.index('SYM'); K_WERSJE.prefix();
         SKID_MBN.index('KOD'); SKID_MBN.prefix();
         SKID_MBP.index('LP'); SKID_MBP.prefix();
         ODD.index('ODDZIALY'); ODD.prefix();
         ROK_F.index('ROKPOCZ'); ROK_F.prefix();
         OKRO_F.index('ROK'); OKRO_F.prefix();
         UD_SKL.index('SYMBOL'); UD_SKL.prefix();
         AUTOKSIE.index('NAZ'); AUTOKSIE.prefix();
         CON_FUNP.index('UNIK'); CON_FUNP.prefix();
         SKID_PMO.index('SKIDMBWE'); SKID_PMO.prefix();
         SKID_PMP.index('UNIK'); SKID_PMP.prefix();
         SKID_MBK.index('UNIK'); SKID_MBK.prefix();
         SKID_MBE.index('ELEM'); SKID_MBE.prefix();
         SKID_MBX.index('UNIK'); SKID_MBX.prefix();
         SKID_MBS.index('UNIK'); SKID_MBS.prefix();
         {!
         |? _l:=fread(_f);
            {? _l<>'\n'
            || {? _l*'CON_FUN@'
               || _con_fun:=0; _skid_mbk:=0;
                  _t:=spli_str(_l,'@');
::                  {! _i:=1..36 |! _t[_i]:='TestTest' !};
                  {? ~CON_FUN.find_key(REF.S_FIRMA,_t[34],)
                  || __Ok:=1;
                     CON_FUN.blank(1);
                     CON_FUN.AKT:='T';
                     CON_FUN.CON_RODF:={? CON_RODF.find_key(#_t[2]) || CON_RODF.ref() || null ?};
                     CON_FUN.FIRMA:=REF.S_FIRMA;
                     CON_FUN.FILE:=_t[3];
                     {? CON_FUN.CON_RODF
                     || {? REF.S_FIRMA=REF.GRUPA
                        || {? _t[4]<>''
                           || CON_FUN.FIRMAWYB:={? FIRMA.find_key(_t[4],)
                                                || FIRMA.ref()
                                                || _err('Brak firmy o symolu '+_t[4]); null
                                                ?}
                           ?}
                        |? CON_FUN.CON_RODF().NUM_TYP=10
                        || CON_FUN.FIRMAWYB:=REF.S_FIRMA
                        ?}
                     ?};
                     _firma:={? CON_FUN.FIRMAWYB || CON_FUN.FIRMAWYB || REF.S_FIRMA ?};
                     _firmas:={? CON_FUN.FIRMAWYB
                              || CON_FUN.FIRMAWYB().SYMBOL
                              || REF.S_FIRMA().SYMBOL
                              ?};
                     CON_FUN.FORM:=_t[5];
                     CON_FUN.FORM_INI:=_t[6];
                     CON_FUN.FORM_KON:=_t[7];
                     CON_FUN.FORM_OKR:=_t[8];
                     CON_FUN.FORM_ROK:=_t[9];
                     {? _t[10]<>''
                     || CON_FUN.KWER1:={? K_WERSJE.find_key(_t[10],)
                                       || K_WERSJE.ref()
                                       || _err('Brak wersji dla controllingu '+_t[10]); null
                                       ?}
                     ?};
                     {? _t[11]<>''
                     || CON_FUN.KWER2:={? K_WERSJE.find_key(_t[11],)
                                       || K_WERSJE.ref()
                                       || _err('Brak wersji dla controllingu '+_t[11]); null
                                       ?}
                     ?};
                     {? _t[12]<>''
                     || CON_FUN.K_WERSJE:={? K_WERSJE.find_key(_t[12],)
                                          || K_WERSJE.ref()
                                          || _err('Brak wersji dla controllingu '+_t[12]); null
                                          ?}
                     ?};
                     {? _t[13]<>''
                     || CON_FUN.MODEL:={? SKID_MBN.find_key(_t[13],)
                                       || SKID_MBN.ref()
                                       || _err('Brak modelu '+_t[13]); null
                                       ?}
                     ?};
                     {? _t[14]<>''
                     || CON_FUN.ODD:={? ODD.find_key(_firma,_t[14],)
                                     || ODD.ref()
                                     || _err('Bark jednostki księgowej '+_t[14]+' dla firmy '+_firmas);
                                        null
                                     ?}
                     ?};
                     {? _t[31]<>''
                     || _pocz:=date(#(4+_t[31]),#(2+(5-_t[31])),#(_t[31]+2));
                        {? _pocz<>date(0,0,0)
                        || CON_FUN.ROK2:={? ROK_F.find_key(_firma,_pocz)
                                         || ROK_F.ref()
                                         || _err('Brak roku '+(4+_t[31])+' dla firmy '+_firmas);
                                            null
                                         ?}
                        ?}
                     ?};
                     {? _t[15]<>'' & CON_FUN.ROK2
                     || CON_FUN.OKR_DOC:={? OKRO_F.find_key(CON_FUN.ROK2,#_t[15])
                                         || OKRO_F.ref()
                                         || _err('Brak okresu nr '+_t[15]+' w roku '+CON_FUN.ROK2().NAZ+
                                                 ' firmy '+ROK_F.FIRMA().SYMBOL);
                                            null
                                         ?}
                     ?};
                     {? _t[30]<>''
                     || _pocz:=date(#(4+_t[30]),#(2+(5-_t[30])),#(_t[30]+2));
                        {? _pocz<>date(0,0,0)
                        || CON_FUN.ROK1:={? ROK_F.find_key(_firma,_pocz)
                                         || ROK_F.ref()
                                         || _err('Brak roku '+(4+_t[30])+' dla firmy '+_firmas);
                                            null
                                         ?}
                        ?}
                     ?};
                     {? _t[16]<>'' & CON_FUN.ROK1
                     || CON_FUN.OKR_KON:={? OKRO_F.find_key(CON_FUN.ROK1,#_t[16])
                                         || OKRO_F.ref()
                                         || _err('Brak okresu nr '+_t[16]+' w roku '+CON_FUN.ROK1().NAZ+' firmy '+
                                                  ROK_F.FIRMA().SYMBOL);
                                            null
                                         ?}
                     ?};
                     {? _t[17]<>'' & CON_FUN.ROK1
                     || CON_FUN.OKR_POCZ:={? OKRO_F.find_key(CON_FUN.ROK1,#_t[17])
                                          || OKRO_F.ref()
                                          || _err('Brak okresu nr '+_t[17]+' w roku '+CON_FUN.ROK1().NAZ+' firmy '+
                                                   ROK_F.FIRMA().SYMBOL);
                                             null
                                          ?}
                     ?};
                     CON_FUN.OPIS:=_t[18];
                     CON_FUN.PAR01:=#_t[19];
                     CON_FUN.PAR02:=#_t[20];
                     CON_FUN.PAR03:=#_t[21];
                     CON_FUN.PAR04:=#_t[22];
                     CON_FUN.PAR05:=#_t[23];
                     CON_FUN.PAR06:=#_t[24];
                     CON_FUN.PAR07:=#_t[25];
                     CON_FUN.PAR08:=#_t[26];
                     CON_FUN.PAR09:=#_t[27];
                     CON_FUN.PAR10:=#_t[38];
                     CON_FUN.PATH:=_t[28];
                     {? _t[32]<>''
                     || CON_FUN.SKIDMWE:={? SKID_MBN.find_key(_t[32],)
                                         || SKID_MBN.ref()
                                         || _err('Brak modelu '+_t[32]);
                                            null
                                         ?}
                     ?};
                     {? _t[29]<>'' & CON_FUN.SKIDMWE
                     || SKID_MBP.index('LP'); SKID_MBP.prefix();
                        {? SKID_MBP.find_key(CON_FUN.SKIDMWE,1)
                        || CON_FUN.PBUD:={? UD_SKL.find_key(SKID_MBP.UD_SCH().UD_TYP,_t[29],)
                                         || UD_SKL.ref()
                                         || _err('Brak pozycji budżetowej o symbolu '+_t[29]+' modelu '+
                                                 CON_FUN.SKIDMWE().KOD);
                                            null
                                         ?}
                        ?}
                     ?};
                     {? _t[33]<>''
                     || CON_FUN.SKIDMWY:={? SKID_MBN.find_key(_t[33],)
                                         || SKID_MBN.ref()
                                         || _err('Brak modelu '+_t[33]);
                                            null
                                         ?}
                     ?};
                     CON_FUN.SYM:=_t[34];
                     {? _t[35]<>''
                     || _nad:=0;
                        CON_FUN.cntx_psh();
                        CON_FUN.index('UNIK'); CON_FUN.prefix(REF.S_FIRMA,_t[35],);
                        {? CON_FUN.first() & CON_FUN.CON_RODF=null
                        || _nad:=CON_FUN.ref()
                        || _err('Brak grupy funkcji o symbolu '+_t[35])
                        ?};
                        CON_FUN.cntx_pop();
                        CON_FUN.TREE:=_nad
                     || CON_FUN.TREE:=_ref_nad
                     ?};
                     CON_FUN.WAR_KSIE:=_t[36];
                     {? __Ok || _con_fun:=CON_FUN.add() ?}
                  || _err('Istnieje funkcja o symbolu '+_t[34])
                  ?};
                  obj_del(_t)
               |? _l*'CON_FUNP@' & _con_fun
               || __Ok:=1;
                  _t:=spli_str(_l,'@');
                  CON_FUNP.blank(1);
                  CON_FUNP.CON_FUN:=CON_FUN.ref();
                  {? REF.S_FIRMA=REF.GRUPA
                  || {? _t[2]<>''
                     || CON_FUNP.FIRMA:={? FIRMA.find_key(_t[2],)
                                        || FIRMA.ref()
                                        || _err('Brak firmy o symolu '+_t[2]); null
                                        ?}
                     ?}
                  || CON_FUNP.FIRMA:=REF.S_FIRMA
                  ?};
                  {? _t[3]<>''
                  || _pocz:=date(#(4+_t[3]),#(2+(5-_t[3])),#(_t[3]+2));
                     {? _pocz<>date(0,0,0)
                     || {? CON_FUNP.FIRMA
                        || CON_FUNP.ROK_F:={? ROK_F.find_key(CON_FUNP.FIRMA,_pocz)
                                          || ROK_F.ref()
                                          || _err('Brak roku '+(4+_t[3])+' dla firmy '+CON_FUNP.FIRMA().SYMBOL);
                                             null
                                          ?}
                        ?}
                     ?}
                  ?};
                  {? _t[4]<>'' & CON_FUNP.ROK_F
                  || CON_FUNP.AUTOKSIE:={? AUTOKSIE.find_key(CON_FUNP.ROK_F,_t[4],)
                                        || AUTOKSIE.ref()
                                        || _err('Brak formuły automatycznego rejestrowania \''+_t[4]+'\' w roku '+
                                                 CON_FUNP.ROK_F().NAZ+' firmy '+CON_FUNP.FIRMA().SYMBOL);
                                           null
                                        ?}
                  ?};
                  obj_del(_t);
                  {? __Ok & CON_FUNP.AUTOKSIE & ~CON_FUNP.find_key(CON_FUN.ref(),CON_FUNP.FIRMA,CON_FUNP.ROK_F)
                  || CON_FUNP.add()
                  ?}
               |? _l*'SKID_PMP@' & _con_fun & CON_FUN.CON_RODF().NUM_TYP=9
               || __Ok:=1;
                  _t:=spli_str(_l,'@');
                  {? ~SKID_PMO.find_key(CON_FUN.FIRMA,CON_FUN.SKIDMWE,CON_FUN.SKIDMWY)
                  || SKID_PMO.FIRMA:=CON_FUN.FIRMA;
                     SKID_PMO.SKIDMWE:=CON_FUN.SKIDMWE;
                     SKID_PMO.SKIDMWY:=CON_FUN.SKIDMWY;
                     SKID_PMO.add()
                  ?};
                  SKID_PMP.blank(1);
                  SKID_PMP.SKID_PMO:=SKID_PMO.ref();
                  {? _t[2]<>'' & CON_FUN.SKIDMWE
                  || SKID_PMP.WYMWE:={? SKID_MBP.find_key(CON_FUN.SKIDMWE,#_t[2])
                                     || SKID_MBP.ref()
                                     || _err('Brak pozycji nr '+_t[2]+' modelu '+CON_FUN.SKIDMWE().KOD);
                                        null
                                     ?}
                  ?};
                  {? SKID_PMP.WYMWE
                  || SKID_PMP.SCH_WE:=SKID_PMP.WYMWE().UD_SCH
                  ?};
                  {? _t[3]<>'' & CON_FUN.SKIDMWY
                  || SKID_PMP.WYMWY:={? SKID_MBP.find_key(CON_FUN.SKIDMWY,#_t[3])
                                     || SKID_MBP.ref()
                                     || _err('Brak pozycji nr '+_t[3]+' modelu '+CON_FUN.SKIDMWY().KOD);
                                        null
                                     ?}
                  ?};
                  {? SKID_PMP.WYMWY
                  || SKID_PMP.SCH_WY:=SKID_PMP.WYMWY().UD_SCH
                  ?};
                  SKID_PMP.RODZ_WY:=_t[4];
                  SKID_PMP.FORMULA:=_t[5];
                  {? _t[6]<>''
                  || SKID_PMP.EL_DOM:={? UD_SKL.find_key(SKID_PMP.WYMWY().UD_SCH().UD_TYP,_t[6],)
                                      || SKID_PMP.EL_DOM:=UD_SKL.ref()
                                      || _err('Brak elementu '+_t[6]+' w schemacie '+UD_SCH.SYMBOL);
                                         null
                                      ?}
                  ?};
                  obj_del(_t);
                  {? __Ok & ~SKID_PMP.find_key(SKID_PMO.ref(),SKID_PMP.WYMWY)
                  || SKID_PMP.add()
                  ?}
               |? _l*'SKID_MBK@' & _con_fun
               || _skid_mbk:=0; __Ok:=1;
                  _t:=spli_str(_l,'@');
                  SKID_MBK.blank(1);
                  SKID_MBK.CON_FUN:=CON_FUN.ref();
                  SKID_MBK.SKID_MBP:={? _t[2]<>'' & SKID_MBP.find_key(CON_FUN.SKIDMWE,#_t[2])
                                     || SKID_MBP.ref()
                                     || _err('Brak pozycji nr '+_t[2]+' modelu '+CON_FUN.SKIDMWE().KOD);
                                        null
                                     ?};
                  {? _t[3]<>'' & SKID_MBK.SKID_MBP
                  || SKID_MBK.PBUD:={? UD_SKL.find_key(SKID_MBK.SKID_MBP().UD_SCH().UD_TYP,_t[3],)
                                    || UD_SKL.ref()
                                    || _err('Brak pozycji budżetowej o symbolu '+_t[3]+' modelu '+
                                             CON_FUN.SKIDMWE().KOD);
                                       null
                                    ?}
                  ?};
                  SKID_MBK.DEST:=#_t[4];
                  SKID_MBK.SOURCE:=#_t[5];
                  SKID_MBK.SP_KOP:=#_t[6];
                  SKID_MBK.WSPOL:=#STR.gsub(_t[7],',','.');
                  SKID_MBK.WYM_WIEL:=#_t[8];
                  obj_del(_t);
                  {? __Ok & ~SKID_MBK.find_key(CON_FUN.ref(),CON_FUN.SKIDMWE,SKID_MBK.SKID_MBP().LP)
                  || _skid_mbk:=SKID_MBK.add()
                  ?}
               |? _l*'SKID_MBE@' & _skid_mbk
               || __Ok:=1;
                  _t:=spli_str(_l,'@');
                  SKID_MBE.blank(1);
                  SKID_MBE.SKID_MBK:=SKID_MBK.ref();
                  SKID_MBE.SP_KOP:=#_t[2];
                  SKID_MBE.TYP:=#_t[3];
                  {? _t[4]<>''
                  || SKID_MBE.UD_SKL:={? UD_SKL.find_key(SKID_MBK.SKID_MBP().UD_SCH().UD_TYP,_t[4],)
                                      || UD_SKL.ref()
                                      || _err('Brak elementu '+_t[4]+' w schemacie '+UD_SCH.SYMBOL);
                                         null
                                      ?}
                  ?};
                  SKID_MBE.WSP:=#STR.gsub(_t[5],',','.');
                  obj_del(_t);
                  {? __Ok & ~SKID_MBE.find_key(SKID_MBK.ref(),SKID_MBE.UD_SKL,SKID_MBE.TYP,SKID_MBE.SP_KOP)
                  || SKID_MBE.add()
                  ?}
               |? _l*'SKID_MBS@' & _skid_mbk
               || __Ok:=1;
                  _t:=spli_str(_l,'@');
                  SKID_MBS.blank(1);
                  SKID_MBS.SKID_MBK:=SKID_MBK.ref();
                  {? _t[2]<>'' & SKID_MBK.SKID_MBP
                  || SKID_MBS.EL_WE:={? UD_SKL.find_key(SKID_MBK.SKID_MBP().UD_SCH().UD_TYP,_t[2],)
                                     || UD_SKL.ref()
                                     || _err('Brak elementu '+_t[2]+' w schemacie '+UD_SCH.SYMBOL);
                                        null
                                     ?}
                  ?};
                  {? _t[3]<>'' & SKID_MBK.SKID_MBP
                  || SKID_MBS.EL_WY:={? UD_SKL.find_key(SKID_MBK.SKID_MBP().UD_SCH().UD_TYP,_t[3],)
                                     || UD_SKL.ref()
                                     || _err('Brak elementu '+_t[3]+' w schemacie '+UD_SCH.SYMBOL);
                                        null
                                     ?}
                  ?};
                  SKID_MBS.SP_ZAM:=#_t[4];
                  obj_del(_t);
                  {? __Ok & ~SKID_MBS.find_key(SKID_MBK.ref(),SKID_MBS.EL_WE)
                  || SKID_MBS.add()
                  ?}
               |? _l*'SKID_MBX@' & _con_fun
               || _Ok:=1;
                  _t:=spli_str(_l,'@');
                  SKID_MBP.cntx_psh();
                  SKID_MBP.prefix(CON_FUN.SKIDMWE); _size:=SKID_MBP.size();
                  SKID_MBP.cntx_pop();
                  SKID_MBX.blank(1);
                  SKID_MBX.CON_FUN:=CON_FUN.ref();
                  SKID_MBX.FORM_KW:=_t[2];
                  SKID_MBX.LP:=#_t[3];
                  {! _i:=1.._size
                  |! _p:='SKID_MBX.WYM'+(('0'+($_i))+2);
                     $($(_p+'R:=_a'))(#_t[2+_i*2]);
                     _str:=_t[3+_i*2];
                     {? _t[2+_i*2]='1'
                     || {? SKID_MBP.find_key(CON_FUN.SKIDMWE,_i) & UD_SKL.find_key(SKID_MBP.UD_SCH().UD_TYP,_str,)
                        || ($(_p+'S:=_a'))(UD_SKL.ref())
                        || _err('Brak elementu '+_t[6]+' w schemacie '+UD_SCH.SYMBOL)
                        ?}
                     || ($(_p+'F:=_a'))(_str)
                     ?}
                  !};
                  obj_del(_t);
                  {? __Ok & ~SKID_MBX.find_key(CON_FUN.ref(),SKID_MBX.LP)
                  || SKID_MBX.add()
                  ?}
               ?};
               1
            ?}
         !};
         CON_FUN.cntx_pop();
         fclose(_f);
         {? __Err.first()
         || _o:=__Err.mk_sel('Uwagi dotyczące importu funkcji'@,,1);
            __Err.win_sel(_o);
            __Err.select()
         || FUN.info('Wykonano import funkcji.'@)
         ?}
      || fclose(_f);
         FUN.info('Nieprawidłowy plik z danymi do importu.'@)
      ?}
   || FUN.error('Błąd podczas otwarcia pliku do importu.'@)
   ?}
?}


\begenzero
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja i na wyswietl dla pola ROZNE.GEN_ZERO
::  OLD: \begenzero/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
gen_zero


\rozwin_con_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Rozwijanie drzewka na okienko przed dla niepustej dziedziny
::  OLD: \rozwin_con_fun/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
: exec('zwrw_all','#tree','CON_FUN','TREE');
1


\conf_rprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Funkcje do aktualizacji danych - rekord przed
::  OLD: \conf_rprz/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_blok:={? CON_FUN.CON_RODF<>null &
          (CON_FUN.CON_RODF().NUM_TYP=9 | CON_RODF.NUM_TYP=10 | CON_RODF.NUM_TYP=19 | CON_RODF.NUM_TYP=20 | CON_RODF.NUM_TYP=29 | CON_RODF.NUM_TYP=30)
       || ''
       || 'M'
       ?};
{? CON_RODF.NUM_TYP=12 | CON_RODF.NUM_TYP=28 || exec('set_plan','control') ?};
{? CON_RODF.NUM_TYP<>20 || _blok+='W' ?};
{? CON_FUN.TREE=null
|| CON_FUN.actions('WER',,'R',1)
|| {? CON_FUN.CON_RODF<>null
   || _blok+='GD';
      CON_FUN.actions('WER',,'R',1)
   || {? exec('czy_fun','!ctr_pdm_patd',1)
      || _blok+='G';
         CON_FUN.actions('WER',,'R',1)
      |? exec('czy_fun','!ctr_pdm_patd',2)
      || _blok+='D';
         CON_FUN.actions('WER',,'R',1)
      || CON_FUN.actions('WER',,'R',1)
      ?}
   ?}
?};
{? CON_FUN.CON_RODF=null
|| CON_FUN.win_edit('RED1'); CON_FUN.hdr_edit(); CON_FUN.hdr_edit('Grupa funkcji'@)
|| CON_FUN.CON_RODF();
   exec('okn_fun','!ctr_pdm_patd')
?};
gen_zero:=0;
{? CON_FUN.AKT='T'
|| _blok+='A'
|| _blok+='T'
?};
CON_FUN.actions_grayed('WER',_blok);
{? CON_FUN.AKT<>'T' || 'CON_FUN#01#01' || '' ?}


\add_rodf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Dolaczanie rodzajow funkcji
::  OLD: \add_rodf/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('add_rodf1','!ctr_pdm_patd',1,'Pomocnicze','Usuwanie automatycznych podziałów dla dokumentów księgowych',9);
exec('add_rodf1','!ctr_pdm_patd',2,'Sprawdzenie dokumentów księgowych','Sprawdzenie wykonania dekretacji dokumentów zakupu, sprzedaży, magazynowych',2);
exec('add_rodf1','!ctr_pdm_patd',3,'Sprawdzenie dokumentów księgowych','Weryfikacja zgodności zapisów księgowych z podziałami controllingowymi',2);
exec('add_rodf1','!ctr_pdm_patd',4,'Sprawdzenie dokumentów księgowych','Sprawdzenie wykonania dekretacji zamkniętych raportów kasowych',2);
exec('add_rodf1','!ctr_pdm_patd',5,'Sprawdzenie dokumentów księgowych','Sprawdzenie wykonania dekretacji zamkniętych list płac',2);
exec('add_rodf1','!ctr_pdm_patd',6,'Zasilenie analiz OLAP','Aktualizacja wartości i przetwarzanie kostki OLAP',8);
exec('add_rodf1','!ctr_pdm_patd',7,'Zasilenie analiz OLAP','Aktualizacja definicji kostki OLAP',8);
exec('add_rodf1','!ctr_pdm_patd',9,'Przetwarzanie danych - kopiowanie','Pobranie danych z innych modeli',7);
exec('add_rodf1','!ctr_pdm_patd',10,'Aktualizacja danych z wykonań','Utworzenie podziałów dla dokumentów księgowych',3);
exec('add_rodf1','!ctr_pdm_patd',11,'Przygotowanie danych z wykonań','Utworzenie podziałów dla amortyzacji środków trwałych',1);
exec('add_rodf1','!ctr_pdm_patd',12,'Aktualizacja danych dla planów','Utworzenie podziałów dla planów amortyzacji',4);
exec('add_rodf1','!ctr_pdm_patd',13,'Przygotowanie danych z wykonań','Utworzenie podziałów dla zamkniętych list płac',1);
exec('add_rodf1','!ctr_pdm_patd',14,'Przygotowanie danych z wykonań','Utworzenie podziałów dla umów zleceń',1);
exec('add_rodf1','!ctr_pdm_patd',15,'Aktualizacja danych z wykonań','Zagregowanie podziałów dla dokumentów księgowych',3);
exec('add_rodf1','!ctr_pdm_patd',16,'Aktualizacja danych z wykonań','Zagregowanie podziałów dotyczących wynagrodzeń dla modelu typu Personel',3);
exec('add_rodf1','!ctr_pdm_patd',17,'Pomocnicze','Wycofanie akceptacji podziałów dla dokumentów',9);
exec('add_rodf1','!ctr_pdm_patd',18,'Sprawdzenie dokumentów księgowych','Sprawdzenie zaksięgowania dokumentów księgowych',2);
exec('add_rodf1','!ctr_pdm_patd',19,'Przetwarzanie danych - kopiowanie','Kopiowanie danych pomiędzy wersjami',7);
exec('add_rodf1','!ctr_pdm_patd',20,'Przetwarzanie danych - alokacje','Alokacje wartości',6);
exec('add_rodf1','!ctr_pdm_patd',21,'Przetwarzanie danych - alokacje','Kasowanie wartości powstałych z alokacji dla modelu',6);
exec('add_rodf1','!ctr_pdm_patd',22,'Pomocnicze','Formuła dodatkowa',9);
exec('add_rodf1','!ctr_pdm_patd',23,'Sprawdzenie dokumentów księgowych','Sprawdzenie wykonania dekretacji amortyzacji',2);
exec('add_rodf1','!ctr_pdm_patd',24,'Przetwarzanie danych - wskaźniki','Aktualizacja wartości na podstawie wskaźników pomocniczych',5);
exec('add_rodf1','!ctr_pdm_patd',25,'Przetwarzanie danych - wskaźniki','Kasowanie wartości wskaźników dla modeli',5);
exec('add_rodf1','!ctr_pdm_patd',26,'Aktualizacja danych z wykonań','Import zagregowanych wartości podziałów z pliku tekstowego',3);
::exec('add_rodf1','!ctr_pdm_patd',27,'Aktualizacja danych dla planów','Zagregowanie planów dla projektów',4);
exec('add_rodf1','!ctr_pdm_patd',28,'Aktualizacja danych dla planów','Zagregowanie podziałów dla planów amortyzacji',4);
exec('add_rodf1','!ctr_pdm_patd',29,'Pomocnicze','Usuwanie wartości zagregowanych dla modelu',9);
exec('add_rodf1','!ctr_pdm_patd',30,'Aktualizacja danych z wykonań','Aktualizacja wartości na podstawie kartotek źródłowych',3);
exec('add_rodf1','!ctr_pdm_patd',31,'Zasilenie analiz OLAP','Aktualizacja wartości kostki OLAP',8);
exec('add_rodf1','!ctr_pdm_patd',32,'Zasilenie analiz OLAP','Przetwarzanie wartości kostki OLAP (Processing)',8);
exec('add_rodf1','!ctr_pdm_patd',33,'Aktualizacja danych z wykonań','Zagregowanie podziałów z not dla controllingu',3);
exec('add_rodf1','!ctr_pdm_patd',34,'Aktualizacja danych z wykonań','Aktualizacja wartości ze sprawozdań finansowych',3);
1


\add_rodf1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Dolaczanie rodzajow funkcji - wewnetrzna
::   WE: _a - numer rodzaju funkcji
::       _b - nazwa typu
::       _c - opis
::       _d - numer typu
::  OLD: \add_rodf1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_RODF.index('UNIK2'); CON_RODF.prefix(_a);
{? CON_RODF.first()
|| CON_RODF.TYP:=_b;
   CON_RODF.OPIS:=_c;
   CON_RODF.NUMER:=_d;
   CON_RODF.put(1)
|| CON_RODF.NUM_TYP:=_a;
   CON_RODF.TYP:=_b;
   CON_RODF.OPIS:=_c;
   CON_RODF.NUMER:=_d;
   CON_RODF.add(1)
?};
CON_RODF.GRUPA:={? CON_RODF.NUM_TYP=12 | CON_RODF.NUM_TYP=16 | CON_RODF.NUM_TYP=27 | CON_RODF.NUM_TYP=28 |
                   CON_RODF.NUM_TYP=11 | CON_RODF.NUM_TYP=13 | CON_RODF.NUM_TYP=14 |
                   CON_RODF.NUM_TYP=2 | CON_RODF.NUM_TYP=5 | CON_RODF.NUM_TYP=4 | CON_RODF.NUM_TYP=23
                || 0
                || 1
                ?};
CON_RODF.put()


\mark_field
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia oznaczenie wymagalności pól w oknach redagowania CON_FUN
::----------------------------------------------------------------------------------------------------------------------
_okno:=CON_FUN.win_edit('?');
_typ:=CON_FUN.CON_RODF().NUM_TYP;
CON_FUN.efld_opt(_okno,'mark=1',CON_FUN,'SYM');
CON_FUN.efld_opt(_okno,'mark=1',CON_FUN,'OPIS');
CON_FUN.efld_opt(_okno,'mark='+$(_typ=6 | _typ=7 | _typ=9 | _typ=19 | _typ=20 | _typ=21 | _typ=26 | _typ=28 | _typ=29 | _typ=30 | _typ=31),CON_FUN,'SKIDMWE');
CON_FUN.efld_opt(_okno,'mark='+$(_typ=9),CON_FUN,'SKIDMWY');
CON_FUN.efld_opt(_okno,'mark='+$(_typ=19 | _typ=20 | _typ=21 | _typ=26 | _typ=27 | _typ=28 | _typ=29 | _typ=30),CON_FUN,'KWER1');
CON_FUN.efld_opt(_okno,'mark='+$(_typ=19 | _typ=26),CON_FUN,'ROK1');
CON_FUN.efld_opt(_okno,'mark='+$(_typ=19 | _typ=26),CON_FUN,'OKR_POCZ');
CON_FUN.efld_opt(_okno,'mark='+$(_typ=19 | _typ=26),CON_FUN,'OKR_KON');
CON_FUN.efld_opt(_okno,'mark='+$(_typ=19),CON_FUN,'KWER2');
CON_FUN.efld_opt(_okno,'mark='+$(_typ=19),CON_FUN,'ROK2');
CON_FUN.efld_opt(_okno,'mark='+$(_typ=19),CON_FUN,'OKR_DOC');
CON_FUN.efld_opt(_okno,'mark='+$(_typ=22),CON_FUN,'FORM');
CON_FUN.efld_opt(_okno,'mark='+$(_typ=26),CON_FUN,'FILE');
CON_FUN.efld_opt(_okno,'mark='+$(_typ=26 & CON_FUN.PAR02=1),CON_FUN,'PATH');

CON_FUN.efld_opt(_okno,'enable='+$(_typ=22 & CON_FUN.PAR01=1),CON_FUN,'FORM_ROK');
CON_FUN.efld_opt(_okno,'enable='+$(_typ=22 & CON_FUN.PAR01=1),CON_FUN,'FORM_OKR');
~~


\akt_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Aktywacja \ dezaktywacja funkcji lub grup funkcji
::   WE: _a - 1-aktywacja 0-deaktywacja
::  OLD: \akt_fun/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_dalej:=0;
{? _a=0
|| {? CON_FUN.AKT='T'
   || _akt:='N';
      _dalej:={? CON_FUN.CON_RODF=null
              || FUN.ask('Wyłączyć wykonywanie wszystkich funkcji dla wybranej grupy?'@)
              || FUN.ask('Wyłączyć wykonywanie wybranej funkcji?'@)
              ?}
   ?}
|| {? CON_FUN.AKT<>'T'
   || _akt:='T';
      _dalej:={? CON_FUN.CON_RODF=null
              || FUN.ask('Włączyć wykonywanie wszystkich funkcji dla wybranej grupy?'@)
              || FUN.ask('Włączyć wykonywanie wybranej funkcji?'@)
              ?}
   ?}
?};
{? _dalej || exec('akt_fun1','!ctr_pdm_patd',0,CON_FUN.TREE,_akt) ?};
1


\akt_fun1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Aktywacja \ dezaktywacja funkcji lub grup funkcji - wewnetrzna
::   WE: _a - 1/0 - czy ustawiac na pierwszym elemencie w dziedzinie
::       _b - ref nadrzednego
::       _c - status
::  OLD: \akt_fun1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.cntx_psh();
CON_FUN.index('DISP'); CON_FUN.prefix(REF.FIRMA,_b);
{? ~_a | (_a & CON_FUN.first())
|| {! |?
      {? CON_FUN.CON_RODF=null
      || exec('akt_fun1','!ctr_pdm_patd',1,CON_FUN.ref(),_c)
      ?};
      CON_FUN.AKT:=_c;
      {? CON_FUN.put() || exec('akt_nadrz','!ctr_pdm_patd') ?};
      _a=1 & CON_FUN.next()
   !}
?};
CON_FUN.cntx_pop()


\akt_nadrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Aktywacja \ dezaktywacja nadrzednych
::  OLD: \akt_nadrz/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.cntx_psh();
{? CON_FUN.TREE<>null
|| {? CON_FUN.AKT='T'
   || CON_FUN.prefix(REF.FIRMA);
      {? CON_FUN.TREE & CON_FUN.seek(CON_FUN.TREE,CON_FUN.name())
      || CON_FUN.AKT:='T';
         {? CON_FUN.put() & CON_FUN.TREE<>null || exec('akt_nadrz','!ctr_pdm_patd') ?}
      ?}
   || CON_FUN.index('DISP'); CON_FUN.prefix(REF.FIRMA,CON_FUN.TREE);
      _onlyn:=1;
      {? CON_FUN.first()
      || {! |?
            {? CON_FUN.AKT='T' || _onlyn:=0 ?};
            _onlyn & CON_FUN.next()
         !}
      ?};
      {? _onlyn
      || CON_FUN.prefix(REF.FIRMA);
         {? CON_FUN.TREE & CON_FUN.seek(CON_FUN.TREE,CON_FUN.name())
         || CON_FUN.AKT:='N';
            {? CON_FUN.put() & CON_FUN.TREE<>null || exec('akt_nadrz','!ctr_pdm_patd') ?}
         ?}
      ?}
   ?}
?};
CON_FUN.cntx_pop()


\con_fun_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przegladanie komunikatow
::  OLD: \con_fun_kom/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUNL.cntx_psh();
CON_FUNL.index('DISP'); CON_FUNL.prefix(REF.FIRMA);
_okn_grp:=CON_FUNL.grp_make('Komunikaty'@,,'tab_con_funl');
CON_FUNL.grp_sel(_okn_grp,,'WER',,"exec('con_funl_arfr','!ctr_pdm_patd')",,,,,,,,'maximized');
CON_FUNL.grp_splt(_okn_grp,,'vertical','panel1');
_okno:={? REF.S_FIRMA=REF.GRUPA || 'WERG' || 'WER' ?};
CON_FUNL.grp_sel(_okn_grp,CON_FUNZ,_okno,,,,,,"exec('con_funz_bobs','!ctr_pdm_patd')",,,,'maximized_with_title');
CON_FUNL.win_sel(_okn_grp); CON_FUNL.select();
CON_FUNL.cntx_pop()


\con_funl_arfr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po odswiezeniu okienka tabeli CON_FUNL
::  OLD: \con_funl_arfr/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_okno:={? REF.S_FIRMA=REF.GRUPA || 'WERG' || 'WER' ?};
grp_disp(CON_FUNZ,_okno)


\con_funz_bobs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed obsluga tabeli CON_FUNZ
::  OLD: \con_funz_bobs/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUNL.get()
|| CON_FUNZ.use('conp'+(4+$CON_FUNL.DATA));
   CON_FUNZ.index('DISP'); CON_FUNZ.prefix(CON_FUNL.ref());
   {? ~CON_FUNZ.get() || CON_FUNZ.first() ?}
|| CON_FUNZ.use('conp____'); CON_FUNZ.index('DISP'); CON_FUNZ.prefix(null)
?};
1


\param_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Parametry funkcji
::  OLD: \param_fun/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.CON_RODF<>null
|| CON_FUN.CON_RODF();
   {? CON_RODF.NUM_TYP=10
   || CON_FUNP.cntx_psh();
      {? REF.S_FIRMA=REF.GRUPA
      || CON_FUNP.win_sel('WERG'); CON_FUNP.win_edit('REDG');
         CON_FUNP.index('DISPG'); CON_FUNP.prefix(CON_FUN.ref())
      || CON_FUNP.win_sel('WER'); CON_FUNP.win_edit('RED');
         CON_FUNP.index('DISP'); CON_FUNP.prefix(CON_FUN.ref())
      ?};
      rok_ref:=null; _firma:=REF.FIRMA;
      CON_FUNP.select();
      VAR_DEL.delete('rok_ref'); REF.FIRMA:=_firma;
      CON_FUNP.cntx_pop()
   |? CON_RODF.NUM_TYP=9
   || SKID_PMO.cntx_psh();
      SKID_PMO.index('SKIDMBWE'); SKID_PMO.prefix(REF.FIRMA,CON_FUN.SKIDMWE,CON_FUN.SKIDMWY);
      {? ~SKID_PMO.first()
      || exec('fun_9','!ctr_pdm_patd')
      ?};
      {? SKID_PMO.first()
      || exec('set_fml','#field',UD_POM,'PBUD',
            "  UD_POM.PBUD:=SKID_PMP.EL_DOM().SYMBOL;
               ~~
            ",
            "  SKID_PMP.EL_DOM().UD_TYP();
               1
            ",
            "  _sym:=exec('ud_def_symbol_f3','schemat',SKID_PMP.SCH_WY().UD_TYP,SKID_PMP.SCH_WY);
               _sym
            ",
            "  {? fld()='' || SKID_PMP.EL_DOM:=null; return(1) ?};
               SKID_PMP.SCH_WY().UD_TYP();
               _ref:=exec('ud_skl_symbol_ae','schemat',SKID_PMP.SCH_WY().UD_TYP);
               {? _ref
               || SKID_PMP.EL_DOM:=_ref;
                  1
               ?}
            "
         );
         SKID_PMP.cntx_psh();
         SKID_PMP.index('DISP'); SKID_PMP.prefix(SKID_PMO.ref());
         SKID_PMP.win_sel('WER'); SKID_PMP.win_edit('RED');
         SKID_MBP.win_sel('KONTROL');
         SKID_PMP.select();
         SKID_PMP.cntx_pop()
      ?};
      SKID_PMO.cntx_pop()
   |? CON_RODF.NUM_TYP=19
   || exec('param_19','!ctr_pdm_patd')
   |? CON_RODF.NUM_TYP=20
   || exec('param_20','!ctr_pdm_patd')
   |? CON_RODF.NUM_TYP=29
   || exec('param_29','!ctr_pdm_patd')
   |? CON_RODF.NUM_TYP=30
   || exec('param_30','!ctr_pdm_patd')
   ?}
?}


\param_19
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Parametry funkcji nr 19 (kopiowanie planow)
::  OLD: \param_19/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('skid_mbk_add','!ctr_pdm_patd');
exec('zeruj_nakt','!ctr_pdm_patd');
SKID_MBK.cntx_psh(); SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref());
UD_DEF.cntx_psh();
oknkopdf:=UD_DEF.mk_sel('','N',,'rw_ud_def',,,,1);
UD_DEF.win_fld(oknkopdf,,'SYMBOL',,,30,,,'Symbol'@);
UD_DEF.win_fld(oknkopdf,,'OPIS',,,37,,,'Opis'@);
UD_DEF.win_fld(oknkopdf,ROZNE,'WSPOLEL',,,12,2,,'Współczynnik'@);
UD_DEF.win_fld(oknkopdf,ROZNE,'KOP_DOC',,,16,,,'Element docelowy'@);
UD_DEF.win_act(oknkopdf,,'Formuła','Współczynnik dla &podrzędnych'@@,,'Przypisanie współczynnika do kopiowania dla podrzednych'@,"exec('wsp_elem','!ctr_pdm_patd',1)",,,,,,'P');
UD_DEF.win_act(oknkopdf,,'Formuła','Współczynnik dla &elementu'@@,,'Przypisanie współczynnika do kopiowania dla elementu'@,"exec('wsp_elem','!ctr_pdm_patd',2)",,,,,,'E');
UD_DEF.win_act(oknkopdf,,'Formuła','&Współczynnik'@@,,'Przypisanie współczynnika do kopiowania'@,"exec('wsp_elem','!ctr_pdm_patd')",,,1,"exec('bg_wsp_elem','!ctr_pdm_patd')","exec('ag_wsp_elem','!ctr_pdm_patd')",'W');
UD_DEF.win_act(oknkopdf,,'Formuła','&Usuń współczynnik'@@,,'Usuwanie współczynnika'@,"exec('wsp_usu','!ctr_pdm_patd')",,,1,"exec('bg_wsp_usu','!ctr_pdm_patd')",,'U');
UD_DEF.win_act(oknkopdf,,'Formuła','Wybierz po&drzędne'@@,,'Wybranie elementów podrzędnych'@,"exec('wsp_elem','!ctr_pdm_patd',1)",,,,,,'D');
UD_DEF.win_act(oknkopdf,,'Formuła','Wybierz ele&ment'@@,,'Wybranie elementu'@,"exec('wsp_elem','!ctr_pdm_patd',2)",,,,,,'M');
UD_DEF.win_act(oknkopdf,,'Formuła','Wybierz element do&celowy'@@,,'Przypisanie elementu docelowego dla elementu'@,"exec('elem_wy','!ctr_pdm_patd')",,,,,,'C');
UD_DEF.win_act(oknkopdf,,'Formuła','U&suń element docelowy'@@,,'Usuwanie mapowania elementów docelowych'@,"exec('eusu','!ctr_pdm_patd')",,,1,"exec('bg_eusu','!ctr_pdm_patd')",,'S');
UD_DEF.win_act(oknkopdf,,'Formuła','Zwiń/&rozwiń całość'@@,,'Zwijanie/rozwijanie całości'@,
               "exec('zwrw_all','#tree','UD_DEF','UD_DEF',oknkopdf,$('SKID_MBK.SKID_MBP().UD_SCH'))",,,,,,'R');
UD_DEF.win_act(oknkopdf,,'Rekord',,,,"exec('rekord_kop','!ctr_pdm_patd')");
UD_DEF.win_act(oknkopdf,,'Formuła','Legenda'@@,,'Opis znaczenia kolorów wierszy'@,,"exec('legenda_kop','!ctr_pdm_patd')",,,,,'L');
UD_DEF.win_btn(oknkopdf,'text=%1,btn_label_align=center,panel=right,align=begin'['Wybierz element do&celowy'@],'menu:C');
UD_DEF.win_btn(oknkopdf,'text=%1,btn_label_align=center,panel=right,align=begin'['U&suń element docelowy'@],'menu:S');
UD_DEF.win_sel(oknkopdf);
_okn_grp:=SKID_MBK.grp_make('Parametry kopiowania'@,,'tab_oknkopdf');
SKID_MBK.grp_sel(_okn_grp,,'WER',,"grp_disp(UD_DEF,oknkopdf)",,,,,,,,'maximized_with_title');
SKID_MBK.grp_splt(_okn_grp,,'horizontal','panel1',10);
SKID_MBK.grp_sel(_okn_grp,UD_DEF,oknkopdf,,,,7,,"exec('bef_ud_def_kop','!ctr_pdm_patd')",,,,'maximized_with_title');
SKID_MBK.win_sel(_okn_grp);
exec('ikonki_uddef','!ctr_pdm_patd',oknkopdf);
UD_DEF.win_fml(oknkopdf,ROZNE,'KOP_DOC',,'ICON_BEFORE',
"SKID_MBS.cntx_psh(); SKID_MBS.index('UNIK'); SKID_MBS.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
 _zwrot:={? SKID_MBS.first()
         || 'xwin16.png:22'
         || ''
         ?};
 SKID_MBS.cntx_pop(); _zwrot");
SKID_MBK.select();
VAR_DEL.delete('oknkopdf');
UD_DEF.cntx_pop(); SKID_MBK.cntx_pop()


\param_20
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Parametry funkcji nr 20 (kopiowanie planow)
::  OLD: \param_20/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('skid_mbk_add','!ctr_pdm_patd');
exec('zeruj_nakt','!ctr_pdm_patd');
SKID_MBK.cntx_psh(); SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref());
UD_DEF.cntx_psh();
okno_alo:=exec('okno_ud_def','!ctr_pdm_patd',1);
_okn_grp:=SKID_MBK.grp_make('Parametry'@,,'tab_oknkopdf');
SKID_MBK.grp_sel(_okn_grp,,'WER1',,"grp_disp(UD_DEF,okno_alo)",,,5,,,,,'maximized_with_title');
SKID_MBK.grp_splt(_okn_grp,,'horizontal','panel1');
SKID_MBK.grp_sel(_okn_grp,UD_DEF,okno_alo,,,,7,,"exec('bef_ud_def_kop','!ctr_pdm_patd')",,,,'maximized_with_title');
SKID_MBK.win_sel(_okn_grp);
exec('ikonki_uddef','!ctr_pdm_patd',okno_alo,1);
SKID_MBK.select();
VAR_DEL.delete('okno_alo');
UD_DEF.cntx_pop(); SKID_MBK.cntx_pop()


\param_29
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Parametry funkcji nr 29 (usuwanie danych)
::  OLD: \param_29/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('skid_mbk_add','!ctr_pdm_patd');
exec('zeruj_nakt','!ctr_pdm_patd');
SKID_MBK.cntx_psh(); SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref());
UD_DEF.cntx_psh();
oknkopdf:=UD_DEF.mk_sel('','N',,'del_ud_def',,,,1);
UD_DEF.win_fld(oknkopdf,,'SYMBOL',,,30,,,'Symbol'@);
UD_DEF.win_fld(oknkopdf,,'OPIS',,,54,,,'Opis'@);
UD_DEF.win_act(oknkopdf,,'Formuła','Wybierz po&drzędne'@@,,'Wybranie elementów podrzędnych'@,"exec('wyb_usu','!ctr_pdm_patd',1)");
UD_DEF.win_act(oknkopdf,,'Formuła','Wybierz ele&ment'@@,,'Wybranie elementu'@,"exec('wyb_usu','!ctr_pdm_patd',2)");
UD_DEF.win_act(oknkopdf,,'Formuła','Zwiń/&rozwiń całość'@@,,'Zwijanie/rozwijanie całości'@,
               "exec('zwrw_all','#tree','UD_DEF','UD_DEF',oknkopdf,SKID_MBK.SKID_MBP().UD_SCH)");
UD_DEF.win_act(oknkopdf,,'Rekord',,,,"exec('rkprz_par_usu','!ctr_pdm_patd')");
UD_DEF.win_act(oknkopdf,,'Formuła','Legenda'@@,,'Opis znaczenia kolorów wierszy'@,,"exec('legenda','color','UD_DEF#07')");
UD_DEF.win_btn(oknkopdf,'text=%1,btn_label_align=center,panel=right,align=begin'['Wybierz po&drzędne'@],'menu:D');
UD_DEF.win_btn(oknkopdf,'text=%1,btn_label_align=center,panel=right,align=begin'['Wybierz ele&ment'@],'menu:M');
UD_DEF.win_sel(oknkopdf);
_okn_grp:=SKID_MBK.grp_make('Parametry usuwania'@,,'tab_oknkopdf');
SKID_MBK.grp_sel(_okn_grp,,'WER2',,"grp_disp(UD_DEF,oknkopdf)",,,,,,,,'maximized_with_title');
SKID_MBK.grp_splt(_okn_grp,,'horizontal','panel1',10);
SKID_MBK.grp_sel(_okn_grp,UD_DEF,oknkopdf,,,,7,,"exec('bef_ud_def_kop','!ctr_pdm_patd')",,,,'maximized_with_title');
SKID_MBK.win_sel(_okn_grp);
exec('ikonki_uddef','!ctr_pdm_patd',oknkopdf);
SKID_MBK.select();
VAR_DEL.delete('oknkopdf');
UD_DEF.cntx_pop(); SKID_MBK.cntx_pop()


\param_30
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Parametry funkcji nr 30 (tworzenie wartosci zagregowanych na podstawie kartotek źródłowych)
::  OLD: \param_30/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{! _i:=1..15
|! ($('ROZNE.UD_SCH'+form(_i,-2)+':=null'))();
   ROZNE.fld_fml('UD_SCH'+form(_i,-2),'BEFORE_DISPLAY',"");
   exec('set_fml','#field',UD_POM,exec('dim2field','control',_i),
      $('SKID_MBX.WYM'+form(_i,-2)+'S().UD_TYP(); fld(SKID_MBX.WYM'+form(_i,-2)+'S().SYMBOL); ~~'),
      $('exec(\'be_dim\',\'control\',CON_FUN.SKIDMWE,'+$_i+')'),
      $('exec(\'f3_dim\',\'control\',CON_FUN.SKIDMWE,'+$_i+')'),
      $('exec(\'ae_wym_par_30\',\'!ctr_pdm_patd\','+$_i+')')
   );
   SKID_MBX.efld_opt('RED','enable=0',ROZNE,'UD_SCH'+form(_i,-2));
   SKID_MBX.efld_opt('RED','enable=0',UD_POM,exec('dim2field','control',_i));
   SKID_MBX.efld_opt('RED','enable=0',SKID_MBX,'WYM'+form(_i,-2)+'S');
   SKID_MBX.efld_opt('RED','enable=0',SKID_MBX,'WYM'+form(_i,-2)+'F')
!};

UD_POM.PBUD:=UD_POM.JORG:=UD_POM.OKOSZ:='';
{! _i:=4..15 |! ($('UD_POM.WYM'+$_i+':=\'\''))() !};
SKID_MBX.cntx_psh();
SKID_MBX.index('UNIK'); SKID_MBX.prefix(CON_FUN.ref());
SKID_MBX.win_sel('WER'); SKID_MBX.win_edit('RED');
SKID_MBP.cntx_psh();
SKID_MBP.index('LP'); SKID_MBP.prefix(CON_FUN.SKIDMWE);
ile_wym:=SKID_MBP.size();
{? ile_wym
|| _i:=0;
   {? SKID_MBP.first()
   || {!
      |? _i+=1;
         ($('ROZNE.UD_SCH'+form(_i,-2)+':=SKID_MBP.ref()'))();
         SKID_MBX.efld_opt('RED','enable=1',ROZNE,'UD_SCH'+form(_i,-2));
         exec('wym_par_30_en','!ctr_pdm_patd',_i);
         SKID_MBP.next()
      !}
   ?};
   SKID_MBX.select()
|| FUN.info('Model wybrany w parametrach funkji nie posiada wymiarów.'@)
?};
VAR_DEL.delete('ile_wym');
SKID_MBP.cntx_pop(); SKID_MBX.cntx_pop()


\ae_wym_par_30
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Po redakcji elementu tabeli SKID_MBX
::   WE: _a - numer wymiaru
::----------------------------------------------------------------------------------------------------------------------
{? fld()='' || ($('SKID_MBX.WYM'+form(_a,-2)+'S:=null'))(); return(1) ?};
_ref:=exec('ae_dim','control',CON_FUN.SKIDMWE,_a);
{? _ref
|| ($('SKID_MBX.WYM'+form(_a,-2)+'S:=_a'))(_ref);
   fld( ($('SKID_MBX.WYM'+form(_a,-2)+'S().SYMBOL'))() );
   1
?}


\wym_par_30_en
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawienie dostępności pól okna redagowania SKID_MBX
::----------------------------------------------------------------------------------------------------------------------
{? _a<=ile_wym
|| _r:=($('SKID_MBX.WYM'+form(_a,-2)+'R'))()<=1;
   SKID_MBX.efld_opt('RED','enable='+$(_r),UD_POM,exec('dim2field','control',_a));
   SKID_MBX.efld_opt('RED','enable='+$(_r),SKID_MBX,'WYM'+form(_a,-2)+'S');
   SKID_MBX.efld_opt('RED','enable='+$(~_r),SKID_MBX,'WYM'+form(_a,-2)+'F')
?};
~~


\skid_mbk_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Dodawanie pozycji SKID_MBK
::  OLD: \skid_mbk_add/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.CON_RODF();
SKID_MBK.cntx_psh();
SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref());
{? ~SKID_MBK.first()
|| SKID_MBP.cntx_psh();
   SKID_MBP.index('LP'); SKID_MBP.prefix(CON_FUN.SKIDMWE);
   {? SKID_MBP.first()
   || {! |?
         SKID_MBK.blank(1);
         SKID_MBK.CON_FUN:=CON_FUN.ref();
         SKID_MBK.SKID_MBP:=SKID_MBP.ref();
         {? CON_RODF.NUM_TYP=19 | CON_RODF.NUM_TYP=29
         || SKID_MBK.SP_KOP:=SKID_MBK.WSPOL:=1
         || {? SKID_MBP.UD_SCH().UD_TYP().SYMBOL='POZ_BUD'
            || SKID_MBK.SOURCE:=2
            || SKID_MBK.SOURCE:=1; SKID_MBK.DEST:=1
            ?}
         ?};
         SKID_MBK.add();
         SKID_MBP.next()
      !}
   ?};
   SKID_MBP.cntx_pop()
?};
SKID_MBK.cntx_pop()


\zeruj_nakt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie nieaktualnych ustawien
::  OLD: \zeruj_nakt/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBE.cntx_psh(); SKID_MBE.index('ELEM');
UD_DEF.cntx_psh();
SKID_MBK.cntx_psh();
SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref());
{? SKID_MBK.first()
|| {! |?
      SKID_MBE.prefix(SKID_MBK.ref());
      {? SKID_MBE.first()
      || {! |?
            {? SKID_MBK.SP_KOP=1
            || SKID_MBE.del()
            || UD_DEF.index('PODTEC'); UD_DEF.prefix(SKID_MBK.SKID_MBP().UD_SCH,SKID_MBE.UD_SKL);
               {? UD_DEF.first()
               || UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBK.SKID_MBP().UD_SCH,UD_DEF.ref());
                  {? SKID_MBE.SP_KOP=1
                  || {? UD_DEF.first() || SKID_MBE.next() || SKID_MBE.del() ?}
                  || {? UD_DEF.first() || SKID_MBE.del() || SKID_MBE.next() ?}
                  ?}
               || SKID_MBE.del()
               ?}
            ?}
         !}
      ?};
      SKID_MBK.next()
   !}
?};
SKID_MBK.cntx_pop(); SKID_MBE.cntx_pop(); UD_DEF.cntx_pop()


\wsp_elem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wspolczynnik dla elementu - ustawianie
::   WE: _a - 1 - wspolczynnik dla podrzednych
::            2 - wspolczynnik dla elementu
::  OLD: \wsp_elem/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_grup:=UD_DEF.sel_size();
SKID_MBE.cntx_psh();
SKID_MBE.index('ELEM'); SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
{? _grup
|| {? SKID_MBE.first()
   || SKID_MBE.WSP:=ROZNE.WSPOLEL; SKID_MBE.put()
   || UD_DEF.cntx_psh();
      UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref(),UD_DEF.ref());
      _a:={? UD_DEF.first() || 1 || 2 ?};
      UD_DEF.cntx_pop();
      SKID_MBE.blank(1);
      SKID_MBE.SKID_MBK:=SKID_MBK.ref();
      SKID_MBE.SP_KOP:=_a;
      SKID_MBE.WSP:=ROZNE.WSPOLEL;
      SKID_MBE.UD_SKL:=UD_DEF.UD_SKL;
      SKID_MBE.add()
   ?}
|| {? SKID_MBK.SKID_MBP().UD_SCH().UD_TYP().SYMBOL='POZ_BUD'
   || edit_wsp:=1;
      ROZNE.WSPOLEL:={? SKID_MBE.first() || SKID_MBE.WSP || 1 ?};
      {? _a=1 || ROZNE.win_edit('KOPPODRZ') || ROZNE.win_edit('KOPEL') ?};
      ROZNE.hdr_edit('Kopiowanie'@);
      {? ROZNE.edit()
      || {? SKID_MBE.first()
         || SKID_MBE.WSP:=ROZNE.WSPOLEL; SKID_MBE.put()
         || SKID_MBE.blank(1);
            SKID_MBE.SKID_MBK:=SKID_MBK.ref();
            SKID_MBE.SP_KOP:=_a;
            SKID_MBE.WSP:=ROZNE.WSPOLEL;
            SKID_MBE.UD_SKL:=UD_DEF.UD_SKL;
            SKID_MBE.add()
         ?}
      ?};
      VAR_DEL.delete('edit_wsp')
   || {? SKID_MBE.first()
      || SKID_MBE.del()
      || SKID_MBE.blank(1);
         SKID_MBE.SKID_MBK:=SKID_MBK.ref();
         SKID_MBE.SP_KOP:=_a;
         SKID_MBE.UD_SKL:=UD_DEF.UD_SKL;
         SKID_MBE.add()
      ?}
   ?}
?};
SKID_MBE.cntx_pop()


\bg_wsp_elem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wspolczynnik dla elementu - ustawianie - grupa przed
::  OLD: \bg_wsp_elem/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.WSPOLEL:=1;
ROZNE.win_edit('KOPPGRUP'); edit_wsp:=1;
{? ROZNE.edit() || 1 || VAR_DEL.delete('edit_wsp'); 0 ?}


\ag_wsp_elem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wspolczynnik dla elementu - ustawianie - grupa po
::  OLD: \ag_wsp_elem/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('edit_wsp')


\wsp_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie wspolczynnika
::  OLD: \wsp_usu/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_DEF.sel_size() | FUN.ask('Usunąć współczynnik?'@)
|| SKID_MBE.cntx_psh();
   SKID_MBE.index('ELEM'); SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
   {? SKID_MBE.first() || SKID_MBE.del() ?};
   SKID_MBE.cntx_pop()
?}


\bg_wsp_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie mapowania elementow docelowych - grupa przed
::  OLD: \bg_wsp_usu/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.ask('Usunąć mapowania elementów doceloweych?'@)


\elem_wy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Element docelowy przy kopiowaniu
::  OLD: \elem_wy/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_add:=0; mbs_wy:=null; udref:=UD_DEF.ref();
UD_DEF.cntx_psh();
UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref(),udref);
_askpod:=UD_DEF.first();
UD_DEF.cntx_pop();
UD_SCH.cntx_psh(); UD_TYP.cntx_psh(); UD_SKL.cntx_psh(); UD_DEF.cntx_psh();
SKID_MBS.cntx_psh();
SKID_MBS.index('UNIK'); SKID_MBS.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
{? ~SKID_MBS.first()
|| SKID_MBS.blank(1);
   SKID_MBS.SKID_MBK:=SKID_MBK.ref();
   SKID_MBS.EL_WE:=UD_DEF.UD_SKL;
   SKID_MBS.SP_ZAM:=2;
   _add:=1
?};
exec('set_fml','#field',UD_POM,'PBUD',
   "exec('mbs_dsp','!ctr_pdm_patd')",
   "1",
   "exec('ud_def_symbol_f3','schemat',SKID_MBK.SKID_MBP().UD_SCH().UD_TYP,UD_SCH.ref())",
   "exec('aestrdan5','!ctr_pdm_patd')"
);
SKID_MBS.win_edit('RED');
{? SKID_MBS.edit()
|| {? SKID_MBS.EL_WY=null
   || {? _add=0
      || {? SKID_MBS.del(,1) & _askpod & FUN.ask('Usunąć element docelowy w pozycjach podrzędnych?'@)
         || add_wy:=0; exec('elem_wy1','!ctr_pdm_patd',udref)
         ?}
      ?}
   || {? {? _add || SKID_MBS.add() || SKID_MBS.put() ?}
      || {? _askpod
         || bezprzyp:=FUN.choice('Ustawić wybrany element docelowy w pozycjach podrzędnych?'@,,'We wszystkich'@,'Bez przypisanego elementu'@);
            {? bezprzyp
            || SKID_MBS.index('UNIK'); add_wy:=1; mbs_wy:=SKID_MBS.EL_WY;
               exec('elem_wy1','!ctr_pdm_patd',udref)
            ?}
         ?}
      ?}
   ?}
?};
SKID_MBS.cntx_pop();
UD_SCH.cntx_pop(); UD_TYP.cntx_pop(); UD_SKL.cntx_pop(); UD_DEF.cntx_pop();
VAR_DEL.delete('bezprzyp','add_wy','mbs_wy','udref')


\elem_wy1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Element docelowy przy kopiowaniu - wewnetrzna
::   WE: _a - ref nadrzednego UD_DEF
::  OLD: \elem_wy1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.cntx_psh();
UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref(),_a);
{? UD_DEF.first()
|| {! |?
      {? add_wy
      || SKID_MBS.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
         _dalej:={? bezprzyp=2
                 || ~SKID_MBS.first()
                 || {? SKID_MBS.first() || SKID_MBS.del(,1) || 1 ?}
                 ?};
         {? _dalej
         || SKID_MBS.blank(1);
            SKID_MBS.SKID_MBK:=SKID_MBK.ref();
            SKID_MBS.EL_WE:=UD_DEF.UD_SKL;
            SKID_MBS.EL_WY:=mbs_wy;
            SKID_MBS.SP_ZAM:=2;
            SKID_MBS.add()
         ?}
      || SKID_MBS.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
         {? SKID_MBS.first() || SKID_MBS.del ?}
      ?};
      exec('elem_wy1','!ctr_pdm_patd',UD_DEF.ref());
      UD_DEF.next()
   !}
?};
UD_DEF.cntx_pop()


\eusu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie wspolczynnika
::  OLD: \eusu/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_DEF.sel_size() | FUN.ask('Usunąć mapowania elementu docelowego?'@)
|| SKID_MBS.cntx_psh();
   SKID_MBS.index('UNIK'); SKID_MBS.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
   {? SKID_MBS.first() || SKID_MBS.del() ?};
   SKID_MBS.cntx_pop()
?}


\bg_eusu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie mapowania elementow docelowych - grupa przed
::  OLD: \bg_eusu/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.ask('Usunąć mapowania elementów docelowych?'@)


\rekord_kop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Rekord przed tabela UD_DEF - parametry kopiowania
::  OLD: \rekord_kop/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? SKID_MBK.SKID_MBP().UD_SCH().UD_TYP().SYMBOL='POZ_BUD'
|| exec('rekprzed','color','UD_DEF#02')
|| exec('rekprzed','color','UD_DEF#03')
?}


\legenda_kop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Legenda dla tabeli UD_DEF - parametry kopiowania
::  OLD: \legenda_kop/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? SKID_MBK.SKID_MBP().UD_SCH().UD_TYP().SYMBOL='POZ_BUD'
|| exec('legenda','color','UD_DEF#02')
|| exec('legenda','color','UD_DEF#03')
?}


\bef_ud_def_kop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed obsluga okienka z UD_DEF - kopiowanie planow
::  OLD: \bef_ud_def_kop/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.index('SYMBOL');
{? SKID_MBK.get()
|| UD_DEF.prefix(SKID_MBK.SKID_MBP().UD_SCH);
   {? ~UD_DEF.get() || UD_DEF.first() ?}
|| UD_DEF.prefix(null)
?};
1


\ikonki_uddef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Ikonki dla UD_DEF
::   WE: _a - akronim okienka
::  OLD: \ikonki_uddef/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.win_fml(_a,,'SYMBOL',,'ICON_BEFORE',"
_zwrot:={? UD_DEF.UD_SKL().LISTA='T' || '76' || '8' ?};
SKID_MBE.cntx_psh();
SKID_MBE.index('ELEM'); SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
{? SKID_MBE.first()
|| _zwrot:={? SKID_MBE.SP_KOP=2 || '178' || '5' ?}
|| UD_SKL.cntx_psh();
   UD_DEF.UD_SKL();
   UD_DEF.cntx_psh(); UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_DEF.UD_SCH,#UD_DEF.ref());
   {? UD_DEF.first() || _zwrot:='' ?};
   UD_SKL.cntx_pop(); UD_DEF.cntx_pop();
   {? _zwrot=''
   || _zwrot:={? UD_DEF.tr_state=1 || '75' || '74' ?}
   ?}
?};
SKID_MBE.cntx_pop();
'xwin16.png:'+_zwrot
")


\okno_ud_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tworzenie okienka dla tabeli UD_DEF
::  OLD: \okno_ud_def/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_wer:=UD_DEF.mk_sel('','N',,'rw_ud_def',,,,1);
UD_DEF.win_fld(_wer,,'SYMBOL',,,35,,,'Symbol'@);
UD_DEF.win_fld(_wer,,'OPIS',,,95,,,'Opis'@);
UD_DEF.win_act(_wer,,'Formuła','Podrzędne źródło&we'@@,,'Wybranie elementów źródłowych podrzędnych'@,"exec('wsp_alo','!ctr_pdm_patd',1)",,,,,,'W');
UD_DEF.win_act(_wer,,'Formuła','Element źró&dłowy'@@,,'Wybranie elementu źródłowego'@,"exec('wsp_alo','!ctr_pdm_patd',2)",,,,,,'D');
UD_DEF.win_act(_wer,,'Formuła','Podrzędne do&celowe'@@,,'Wybranie elementów docelowych podrzędnych'@,"exec('wsp_alo','!ctr_pdm_patd',3)",,,,,,'C');
UD_DEF.win_act(_wer,,'Formuła','Element docel&owy'@@,,'Wybranie elementu docelowego'@,"exec('wsp_alo','!ctr_pdm_patd',4)",,,,,,'O');
UD_DEF.win_act(_wer,,'Formuła','Podrzędne stanowiące &klucz'@@,,'Wybranie elementów klucza podrzędnych'@,"exec('wsp_alo','!ctr_pdm_patd',5)",,,,,,'K');
UD_DEF.win_act(_wer,,'Formuła','Element kl&ucza'@@,,'Wybranie elementu klucza'@,"exec('wsp_alo','!ctr_pdm_patd',6)",,,,,,'U');
UD_DEF.win_act(_wer,,'Rekord',,,,"exec('rekord_alo','!ctr_pdm_patd')");
UD_DEF.win_act(_wer,,'Formuła','Zwiń/&rozwiń całość'@@,,'Zwijanie/rozwijanie całości'@,"exec('zwrw_all','#tree','UD_DEF','UD_DEF',okno_alo,$('SKID_MBK.SKID_MBP().UD_SCH'))",,,,,,'Z');
UD_DEF.win_act(_wer,,'Formuła','Legenda'@@,,'Opis znaczenia kolorów wierszy'@,,"exec('legenda_alo','!ctr_pdm_patd')",,,,,'L');
_wer


\legenda_alo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Legenda dla tabeli UD_DEF - alokacje
::  OLD: \legenda_alo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? SKID_MBK.SKID_MBP().UD_SCH().UD_TYP().SYMBOL='POZ_BUD'
|| exec('legenda','color','UD_DEF#04')
|| exec('legenda','color','UD_DEF#05')
?}


\rekord_alo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Rekord przed dla tabeli UD_DEF - alokacje
::  OLD: \rekord_alo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? SKID_MBK.SKID_MBP().UD_SCH().UD_TYP().SYMBOL='POZ_BUD'
|| exec('rekprzed','color','UD_DEF#04')
|| exec('rekprzed','color','UD_DEF#05')
?}


\wyb_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wybor elementow przy usuwaniu
::   WE: _a - 1 - wybor podrzednych
::            2 - wybor elementu
::  OLD: \wyb_usu/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBE.cntx_psh();
SKID_MBE.index('ELEM'); SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
{? SKID_MBE.first()
|| SKID_MBE.del()
|| SKID_MBE.blank(1);
   SKID_MBE.SKID_MBK:=SKID_MBK.ref();
   SKID_MBE.SP_KOP:=_a;
   SKID_MBE.UD_SKL:=UD_DEF.UD_SKL;
   SKID_MBE.add()
?};
SKID_MBE.cntx_pop()


\rkprz_par_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Rekord przed dla okienka z elementami w funkcji usuwania danych
::  OLD: \rkprz_par_usu/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.cntx_psh(); UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref(),UD_DEF.ref());
{? UD_DEF.first()
|| UD_DEF.actions(oknkopdf,'M','D',1)
|| UD_DEF.actions(oknkopdf,'D','M',1)
?};
UD_DEF.cntx_pop();
0


\wsp_alo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wspolczynnik dla elementu - ustawianie
::   WE: _a - 1 - zrodlowe podrzedne
::            2 - zrodlowy
::            3 - docelowe podrzedne
::            4 - docelowy
::            5 - kluczowe podrzedne
::            6 - kluczowy
::  OLD: \wsp_alo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_add:=1;
{? SKID_MBK.SKID_MBP().UD_SCH().UD_TYP().SYMBOL='POZ_BUD'
|| {? UD_DEF.UD_SKL=SKID_MBK.PBUD
   || FUN.emsg('Wybrany element ustawiony jest jako docelowy.'@); _add:=0
   ?};
   {? _add
   || spr_ele:=1;
      {? SKID_MBK.PBUD<>null
      || exec('spr_podrz_doc','!ctr_pdm_patd');
         {? ~spr_ele
         || FUN.emsg('Istnieje element podrzędny ustawiony jako docelowy.'@)
         ?}
      ?};
      _add:=spr_ele;
      VAR_DEL.delete('spr_ele')
   ?};
   {? _add
   || _par:={? (_a=1 | _a=2) || 1 |? (_a=5 | _a=6) || 3 || 0 ?};
      SKID_MBE.cntx_psh();
      SKID_MBE.index('ELEM'); SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL,_par);
      {? SKID_MBE.first() || _add:=0; SKID_MBE.del() ?};
      SKID_MBE.cntx_pop()
   ?}
|| _par:={? _a=1 | _a=2 || 1 || 2 ?};
   SKID_MBE.cntx_psh();
   SKID_MBE.index('ELEM'); SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL,_par);
   {? SKID_MBE.first() || _add:=0; SKID_MBE.del() ?};
   SKID_MBE.cntx_pop()
?};
{? _add
|| SKID_MBE.blank(1);
   SKID_MBE.SKID_MBK:=SKID_MBK.ref();
   SKID_MBE.SP_KOP:={? _a=1 | _a=3 | _a=5 || 1 || 2 ?};
   SKID_MBE.UD_SKL:=UD_DEF.UD_SKL;
   SKID_MBE.TYP:={? _a=1 | _a=2 || 1 |? _a=3 | _a=4 || 2 || 3 ?};
   SKID_MBE.add()
?}


\spr_podrz_doc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie czy element podrzedny nie jest docelowym
::  OLD: \spr_podrz_doc/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.cntx_psh(); UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_DEF.UD_SCH,UD_DEF.ref());
{? UD_DEF.first()
|| {! |?
      spr_ele:=(UD_DEF.UD_SKL<>SKID_MBK.PBUD);
      {? spr_ele || exec('spr_podrz_doc','!ctr_pdm_patd') ?};
      spr_ele & UD_DEF.next()
   !}
?};
UD_DEF.cntx_pop()


\con_fun_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wartosc poczatkowa pola CON_FUNP.CON_FUN
::  OLD: \con_fun_ref/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.ref()


\be_cauto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja pola CON_FUNP.AUTOKSIE
::  OLD: \be_cauto/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUNP.ROK_F<>null
|| rok_ref:=CON_FUNP.ROK_F; ROZNE.WYW:='K'; 1
|| 0
?}


\be_crok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Przed redakcja pola CON_FUNP.ROK_F
::  OLD: \be_crok/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? REF.S_FIRMA=REF.GRUPA
|| {? CON_FUNP.FIRMA=null
   || 0
   || REF.FIRMA:=CON_FUNP.FIRMA; 1
   ?}
|| 1
?}


\ae_crok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po redakcji pola CON_FUNP.ROK_F
::  OLD: \ae_crok/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUNP.ROK_F=null
|| CON_FUNP.AUTOKSIE:=null
|? CON_FUNP.AUTOKSIE<>null
|| AUTOKSIE.cntx_psh();
   AUTOKSIE.index('TYP'); AUTOKSIE.prefix(CON_FUNP.ROK_F,'K');
   {? ~AUTOKSIE.seek(CON_FUNP.AUTOKSIE) || CON_FUNP.AUTOKSIE:=null ?};
   AUTOKSIE.cntx_pop()
?};
1


\blfirma_funp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Wartosc poczatkowa pola CON_FUNP.FIRMA
::  OLD: \blfirma_funp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? REF.S_FIRMA=REF.GRUPA
|| null
|| REF.FIRMA
?}


\aefirma_funp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Po redakcji pola CON_FUNP.FIRMA
::  OLD: \aefirma_funp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUNP.FIRMA=null
|| FUN.info('Nie wybrano firmy.'@); 0
|? CON_FUNP.FIRMA().TYP='W'
|| FUN.info('Formuły automatycznego rejestrowania dla firm wyłączeniowych pobierane są\n'
            'z danych powiązanej firmy macierzystej.'@); 0
|? CON_FUNP.ROK_F<>null
|| ROK_F.cntx_psh();
   ROK_F.index('ROKPOCZ'); ROK_F.prefix(CON_FUNP.FIRMA);
   {? ~ROK_F.seek(CON_FUNP.ROK_F) || CON_FUNP.ROK_F:=CON_FUNP.AUTOKSIE:=null ?};
   ROK_F.cntx_pop(); 1
|| 1
?}


\aeformpm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Rekord po dla tabeli SKID_PMP
::  OLD: \aeformpm/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(SKID_PMP,,'WYMWE','WYMWY');
{? _zwrot='' & SKID_PMP.RODZ_WY='F' & SKID_PMP.FORMULA=''
|| FUN.info('Nie wprowadzono formuły.'@); _zwrot:='FORMULA'
?};
_zwrot


\skidpmoref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wartosc poczatkowa pola SKID.PMP.SKID_PMO
::  OLD: \skidpmoref/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_PMO.ref()


\bewymwe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja pola SKID_PMP.WYMWE
::  OLD: \bewymwe/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
mod_przm:=SKID_PMO.SKIDMWE; SKID_PMO.SKIDMWE(); 1


\aewymwe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po redakcji pola SKID_PMP.WYMWE
::  OLD: \aewymwe/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_PMP.SCH_WE:={? SKID_PMP.WYMWE<>null || SKID_PMP.WYMWE().UD_SCH || null ?};
1


\bewymwy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja pola SKID_PMP.WYMWY
::  OLD: \bewymwy/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
mod_przm:=SKID_PMO.SKIDMWY; SKID_PMO.SKIDMWY(); 1


\aewymwy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po redakcji pola SKID_PMP.WYMWY
::  OLD: \aewymwy/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_PMP.SCH_WY:={? SKID_PMP.WYMWY<>null || SKID_PMP.WYMWY().UD_SCH || null ?};
{? SKID_PMP.WYMWY=null
|| SKID_PMP.EL_DOM:=null; UD_POM.PBUD:=''
|? SKID_PMP.EL_DOM<>null
|| UD_DEF.cntx_psh();
   UD_DEF.index('PODTEC'); UD_DEF.prefix(SKID_PMP.SCH_WY,SKID_PMP.EL_DOM);
   {? ~UD_DEF.first() || SKID_PMP.EL_DOM:=null ?};
   UD_DEF.cntx_pop()
?};
win_disp(); 1


\aerodzwy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po redakcji pola SKID_PMP.RODZ_WY
::  OLD: \aerodzwy/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? SKID_PMP.RODZ_WY<>'F' || SKID_PMP.FORMULA:='' ?};
{? SKID_PMP.RODZ_WY<>'C' || UD_POM.PBUD:=''; SKID_PMP.EL_DOM:=null ?};
exec('fun_9_enabled','!ctr_pdm_patd');
win_disp();
1


\beformpm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja pola SKID_PMP.FORMULA
::  OLD: \beformpm/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_PMP.RODZ_WY='F'


\usu_pmo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usun przed dla tabeli SKID_PMO
::  OLD: \usu_pmo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć defincję przekształcenia?'@)
|| do();
   SKID_PMP.index('DISP'); SKID_PMP.prefix(SKID_PMO.ref());
   {? SKID_PMP.first()
   || {! |?
         _delr:=SKID_PMP.del(,1);
         {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
      !}
   ?};
   _delr:=SKID_PMO.del(,1);
   {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?};
   end()
?}


\pmp_formula_dsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Na wyswietl dla pola SKID_PMP.FORMULA
::  OLD: \pmp_formula_dsp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? SKID_PMP.RODZ_WY='F' || '' || exec('findfnv','#color') ?}


\pmp_el_dom_dsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Na wyswietl dla pola SKID_PMP.EL_DOM
::  OLD: \pmp_el_dom_dsp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? SKID_PMP.RODZ_WY='C' || '' || exec('findfnv','#color') ?}


\fun_9_enabled
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawienie dostępności pól SKID_PMP
::----------------------------------------------------------------------------------------------------------------------
SKID_PMP.efld_opt('RED','enable='+$(SKID_PMP.WYMWY<>null & SKID_PMP.RODZ_WY='C'),UD_POM,'PBUD');
SKID_PMP.efld_opt('RED','enable='+$(SKID_PMP.WYMWY<>null & SKID_PMP.RODZ_WY='C'),SKID_PMP,'EL_DOM');
SKID_PMP.efld_opt('RED','enable='+$(SKID_PMP.RODZ_WY='F'),SKID_PMP,'FORMULA');
SKID_PMP.efld_opt('RED','mark='+$(SKID_PMP.RODZ_WY='F'),SKID_PMP,'FORMULA');
~~


\rpo_funp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tabela CON_FUNP - rekord po
::  OLD: \rpo_funp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=__CHK.record(CON_FUNP,,'ROK_F','AUTOKSIE');
{? _zwrot=''
|| {? -menu_txt='popraw' || _ref:=CON_FUNP.ref() ?};
   CON_FUNP.cntx_psh();
   CON_FUNP.index('UNIK'); CON_FUNP.prefix(CON_FUNP.CON_FUN,CON_FUNP.FIRMA,CON_FUNP.ROK_F);
   {? CON_FUNP.first() & {? -menu_txt='popraw' || CON_FUNP.ref()<>_ref || 1 ?}
   || {?  REF.S_FIRMA=REF.GRUPA
      || FUN.info('Istnieje już formuła automatycznej rejestracji\n'+
                  'dla firmy %1 i roku %2.'@[CON_FUNP.FIRMA().SYMBOL,CON_FUNP.ROK_F().NAZ])
      || FUN.info('Istnieje już formuła automatycznej rejestracji dla roku %1.'@[CON_FUNP.ROK_F().NAZ])
      ?};
      _zwrot:='ROK_F'
   ?};
   CON_FUNP.cntx_pop()
?};
_zwrot


\rkprz_skmbk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Rekord przed dla tabeli SKID_MBK (kopiowanie danych)
::  OLD: \rkprz_skmbk/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBK.SKID_MBP().UD_SCH().UD_TYP();
ROZNE.KOP_ELEM:={? SKID_MBK.SP_KOP=1 || 'wszystkie' || 'wybrane' ?};
{? CON_RODF.NUM_TYP=29 | UD_TYP.SYMBOL<>'POZ_BUD'
|| SKID_MBK.win_edit('RED'); SKID_MBK.hdr_edit();
   SKID_MBK.hdr_edit({? CON_RODF.NUM_TYP=29 || 'Sposób usuwania' || 'Sposób kopiowania' ?})
|| SKID_MBK.win_edit('REDPBUD')

?};
UD_DEF.win_sel(oknkopdf); UD_DEF.hdr_sel(); UD_DEF.hdr_sel(SKID_MBP.NAZ);
0


\rkprz_skmbk1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Rekord przed dla tabeli SKID_MBK (alokacje)
::  OLD: \rkprz_skmbk1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.SOURCE:={? SKID_MBK.SOURCE=1 || 'wszystkie' || 'wybrane' ?};
SKID_MBK.SKID_MBP().UD_SCH().UD_TYP();
{? UD_TYP.SYMBOL='POZ_BUD'
|| SKID_MBK.win_edit('RED2');
   ROZNE.DEST:={? SKID_MBK.PBUD || SKID_MBK.PBUD().SYMBOL || '' ?}
|| ROZNE.DEST:={? SKID_MBK.DEST=1 || 'jak źródło' || 'wybrane' ?};
   SKID_MBK.win_edit('RED1')
?};
UD_DEF.win_sel(okno_alo); UD_DEF.hdr_sel(); UD_DEF.hdr_sel(SKID_MBP.NAZ+' - elementy źródłowe');
0


\aespkop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po redakcji sposobu kopiowania
::  OLD: \aespkop/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? SKID_MBK.SP_KOP=2
|| SKID_MBK.WSPOL:=0
|? SKID_MBK.WSPOL=0
|| SKID_MBK.WSPOL:=1
?};
SKID_MBK.efld_opt('REDPBUD','enable='+$(SKID_MBK.SP_KOP=1),SKID_MBK,'WSPOL');
win_disp();
1


\skmbkwspdsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Na wyswietl dla pola SKID_MBK.WSPOL
::  OLD: \skmbkwspdsp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('skmbkedwsp','!ctr_pdm_patd') || 1 || exec('findfnv','#color')  ?}


\skmbkedwsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja pola SKID_MBK.WSPOL
::  OLD: \skmbkedwsp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBK.SP_KOP=1 & SKID_MBK.SKID_MBP().UD_SCH().UD_TYP().SYMBOL='POZ_BUD'


\dspwspolel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Zmienna ROZNE.WSPOLEL - na wyswietl
::  OLD: \dspwspolel/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('edit_wsp')<=0
|| ROZNE.WSPOLEL:=0;
   SKID_MBE.cntx_psh();
   SKID_MBE.index('ELEM'); SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
   {? SKID_MBE.first() || ROZNE.WSPOLEL:=SKID_MBE.WSP ?};
   SKID_MBE.cntx_pop()
?};
{? SKID_MBK.SP_KOP=2 & SKID_MBK.SKID_MBP().UD_SCH().UD_TYP().SYMBOL='POZ_BUD'  || 1 || exec('findfnv','#color')  ?}


\popspkop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Poprawianie sposobu kopiowania i usuwania
::  OLD: \popspkop/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBK.efld_opt('REDPBUD','enable='+$(SKID_MBK.SP_KOP=1),SKID_MBK,'WSPOL');
{? SKID_MBK.edit()
|| {? SKID_MBK.put() & SKID_MBK.SP_KOP=1
   || do();
      SKID_MBE.cntx_psh(); SKID_MBE.index('ELEM'); SKID_MBE.prefix(SKID_MBK.ref());
      {? SKID_MBE.first()
      || {! |?
            _delr:=SKID_MBE.del(,1);
            {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
         !}
      ?};
      SKID_MBE.cntx_pop();
      end()
   ?}
?}


\wym_wielokr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [12.30]
:: OPIS: Ustawianie wymiaru do wielokrotnej alokacji
::  OLD: \wym_wielokr/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBK.WYM_WIEL:=~SKID_MBK.WYM_WIEL; SKID_MBK.put()


\popspalo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Poprawianie sposobu alokacji
::  OLD: \popspalo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('set_fml','#field',UD_POM,'PBUD',"
      UD_POM.PBUD:=SKID_MBK.PBUD().SYMBOL;
      ~~
   ","
      exec('be_dim','control',SKID_MBK.SKID_MBP().SKID_MBN,1)
   ","
      exec('f3_dim','control',SKID_MBK.SKID_MBP().SKID_MBN,1)
   ","
      _ref:=exec('ae_dim','control',SKID_MBK.SKID_MBP().SKID_MBN,1);
      {? _ref
      || SKID_MBK.PBUD:=_ref;
         1
      || SKID_MBK.PBUD:=null;
         1
      ?}
   "
);
UD_DEF.cntx_psh();
{? SKID_MBK.edit("exec('spr_doc_alo','!ctr_pdm_patd')")
|| {? SKID_MBK.put()
   || do();
      {? SKID_MBK.SOURCE=1 || exec('kasuj_mbe','!ctr_pdm_patd',1) ?};
      {? SKID_MBK.DEST=1 & SKID_MBK.SKID_MBP().UD_SCH().UD_TYP().SYMBOL<>'POZ_BUD' || exec('kasuj_mbe','!ctr_pdm_patd',2) ?};
      end()
   ?}
?};
UD_DEF.cntx_pop()


\spr_doc_alo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdza ustawiona pozycje budzetowa docelowa
::  OLD: \spr_doc_alo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
SKID_MBK.SKID_MBP().UD_SCH().UD_TYP();
SKID_MBE.cntx_psh(); SKID_MBE.index('ELEM');
SKID_MBE.prefix(SKID_MBK.ref(),SKID_MBK.PBUD,1);
{? SKID_MBE.first()
|| FUN.emsg('Wybrany element ustawiony jest jako źródłowy.'@); _ok:=0
?};
{? _ok
|| SKID_MBE.prefix(SKID_MBK.ref(),SKID_MBK.PBUD,3);
   {? SKID_MBE.first()
   || FUN.emsg('Wybrany element ustawiony jest jako klucz.'@); _ok:=0
   ?}
?};
SKID_MBE.cntx_pop();
{? _ok
|| spr_ele:=1;
   exec('spr_nadrz_alo','!ctr_pdm_patd',1);
   {? ~spr_ele || FUN.emsg('Istnieje element nadrzędny do wybranego ustawiony jako klucz.'@); _ok:=0 ?};
   {? _ok
   || exec('spr_nadrz_alo','!ctr_pdm_patd',3);
      {? ~spr_ele || FUN.emsg('Istnieje element nadrzędny do wybranego ustawiony jako źródłowy.'@); _ok:=0 ?}
   ?};
   VAR_DEL.delete('spr_ele')
?};
_ok


\spr_nadrz_alo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie nadrzednych
::   WE: _a - 1 - ustawianie zrodlowego
::            3 - ustawianie klucza
::  OLD: \spr_nadrz_alo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.cntx_psh(); UD_DEF.prefix();
{? UD_DEF.UD_DEF & UD_DEF.seek(UD_DEF.UD_DEF,UD_DEF.name())
|| SKID_MBE.cntx_psh();
   SKID_MBE.index('ELEM'); SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
   {? SKID_MBE.first()
   || {? SKID_MBE.TYP<>_a || spr_ele:=0 ?}
   || exec('spr_nadrz_alo','!ctr_pdm_patd',_a)
   ?};
   SKID_MBE.cntx_pop()
?};
UD_DEF.cntx_pop()


\wyr_el_wsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Rekord przed tabela UD_DEF - parametry kopiowania
::  OLD: \wyr_el_wsp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
_gray:='';
SKID_MBS.cntx_psh(); SKID_MBS.index('UNIK'); SKID_MBS.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
ROZNE.KOP_DOC:={? SKID_MBS.first() || SKID_MBS.EL_WY().SYMBOL || _gray+='S'; '' ?};
UD_DEF.actions_grayed(oknkopdf,_gray);
SKID_MBS.cntx_pop();
{? UD_DEF.sel_size()
|| {? SKID_MBK.SKID_MBP().UD_SCH().UD_TYP().SYMBOL='POZ_BUD' & SKID_MBK.SP_KOP=2
   || UD_DEF.actions(oknkopdf,'OCDMPERL','W',1)
   || UD_DEF.actions(oknkopdf,'OCDMUPEWRL','',1)
   ?}
|| SKID_MBP.cntx_psh(); UD_SCH.cntx_psh(); UD_TYP.cntx_psh();
   _blok:='';
   {? SKID_MBK.SP_KOP=2
   || {? SKID_MBK.SKID_MBP().UD_SCH().UD_TYP().SYMBOL='POZ_BUD'
      || _wsp:='WDM';
         SKID_MBE.cntx_psh();
         SKID_MBE.index('ELEM'); SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
         {? SKID_MBE.first() || _zwrot:='UD_DEF#02#01' || _wsp+='U' ?};
         SKID_MBE.cntx_pop();
         UD_DEF.cntx_psh();
         UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref(),UD_DEF.ref());
         {?  UD_DEF.first() || UD_DEF.actions(oknkopdf,_blok+'E'+_wsp,'P',1) || UD_DEF.actions(oknkopdf,_blok+'P'+_wsp,'E',1) ?};
         UD_DEF.cntx_pop()
      || _wsp:='WPEU';
         SKID_MBE.cntx_psh();
         SKID_MBE.index('ELEM'); SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
         {? SKID_MBE.first() || _zwrot:='UD_DEF#02#01' ?};
         SKID_MBE.cntx_pop();
         UD_DEF.cntx_psh();
         UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref(),UD_DEF.ref());
         {? UD_DEF.first() || UD_DEF.actions(oknkopdf,_blok+'M'+_wsp,'D',1) || UD_DEF.actions(oknkopdf,_blok+'D'+_wsp,'M',1) ?};
         UD_DEF.cntx_pop()
      ?}
   || UD_DEF.actions(oknkopdf,_blok+'UPEWDM',{? _blok='C' || 'O' || 'C' ?},1)
   ?};
   SKID_MBP.cntx_pop(); UD_SCH.cntx_pop(); UD_TYP.cntx_pop()
?};
_zwrot


\mbs_dsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Na wyswietl dla pola tabeli SKID_MBS
::  OLD: \mbs_dsp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBS.cntx_psh(); SKID_MBS.index('UNIK'); SKID_MBS.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
UD_POM.PBUD:={? SKID_MBS.first() || SKID_MBS.EL_WY().SYMBOL || '' ?};
SKID_MBS.cntx_pop();
1


\kasuj_mbe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Kasowanie ustawien dla pozycji
::   WE: _a - typ danych
::  OLD: \kasuj_mbe/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBE.cntx_psh(); SKID_MBE.index('TYP'); SKID_MBE.prefix(SKID_MBK.ref(),_a);
{? SKID_MBE.first()
|| {! |?
      _delr:=SKID_MBE.del(,1);
      {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
   !}
?};
SKID_MBE.cntx_pop()


\aestrdan5
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po redakcji pola elementu
::  OLD: \aestrdan5/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
SKID_MBS.EL_WY:=null;
SKID_MBK.SKID_MBP().UD_SCH().UD_TYP();
{? fld()<>''
|| UD_DEF.cntx_psh(); UD_SKL.cntx_psh();
   UD_DEF.index('SCHSYM'); UD_DEF.prefix(UD_SCH.ref(),fld());
   {? UD_DEF.first()
   || UD_DEF.UD_SKL();
      _ud_def:=UD_DEF.ref();
      UD_DEF.cntx_psh();
      UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref(),UD_DEF.ref());
      {? UD_DEF.first()
      || K_FORM.index('K_W_OBL'); K_FORM.prefix();
         {? K_FORM.find_key(_ud_def,CON_FUN.KWER2().K_W_OBL) & K_FORM.TYP='W'
         || SKID_MBS.EL_WY:=UD_SKL.ref(); fld(UD_SKL.SYMBOL)
         || FUN.emsg('Element %1 nie jest najniższy w hierarchii.'@[UD_SKL.SYMBOL]); _zwrot:=0
         ?}
      || SKID_MBS.EL_WY:=UD_SKL.ref(); fld(UD_SKL.SYMBOL)
      ?};
      UD_DEF.cntx_pop()
   || FUN.emsg('Nie znaleziono elementu schematu %1 o początkowych znakach: %2.'@[UD_SCH.SYMBOL,fld()]); _zwrot:=0
   ?};
   UD_DEF.cntx_pop();  UD_SKL.cntx_pop()
?};
_zwrot


\wyr_el_alo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Rekord przed tabela UD_DEF - alokacje
::  OLD: \wyr_el_alo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
_pbud:=(SKID_MBK.SKID_MBP().UD_SCH().UD_TYP().SYMBOL='POZ_BUD');
SKID_MBE.cntx_psh(); SKID_MBE.index('ELEM');
{? _pbud
|| SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL,1);
   _zrod:=SKID_MBE.first();
   SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL,3);
   _klucz:=SKID_MBE.first();
   _zwrot:={? _zrod & _klucz
           || 'UD_DEF#04#03'
           |? _zrod
           || 'UD_DEF#04#01'
           |? _klucz
           || 'UD_DEF#04#02'
           || ''
           ?}
|| SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL,1);
   _zrod:=SKID_MBE.first();
   SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL,2);
   _docel:=SKID_MBE.first();
   _zwrot:={? _zrod & _docel
           || 'UD_DEF#05#03'
           |? _zrod
           || 'UD_DEF#05#01'
           |? _docel
           || 'UD_DEF#05#02'
           || ''
           ?}
?};
SKID_MBE.cntx_pop();
SKID_MBP.cntx_psh(); UD_SCH.cntx_psh(); UD_TYP.cntx_psh();
{? _pbud | SKID_MBK.SOURCE=2 | SKID_MBK.DEST=2
|| _blok:=_dom:='';
   {? SKID_MBK.SKID_MBP().UD_SCH().UD_TYP().SYMBOL='POZ_BUD'
   || _blok:='CO';
      UD_DEF.cntx_psh();
      UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref(),UD_DEF.ref());
      {? UD_DEF.first()
      || {? SKID_MBK.SOURCE=2
         || _blok+='DU'; _dom:='W'
         || _blok+='DUW'; _dom:='K'
         ?}
      || {? SKID_MBK.SOURCE=2
         || _blok+='WK'; _dom:='D'
         || _blok+='WKD'; _dom:='U'
         ?}
      ?};
      UD_DEF.cntx_pop()
   || _blok:='KU';
      UD_DEF.cntx_psh();
      UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref(),UD_DEF.ref());
      {? UD_DEF.first()
      || {? SKID_MBK.SOURCE=2 & SKID_MBK.DEST=2
         || _blok+='DO'; _dom:='W'
         |? SKID_MBK.SOURCE=2 & SKID_MBK.DEST=1
         || _blok+='DOC'; _dom:='W'
         |? SKID_MBK.SOURCE=1 & SKID_MBK.DEST=2
         || _blok+='DOW'; _dom:='C'
         ?}
      || {? SKID_MBK.SOURCE=2 & SKID_MBK.DEST=2
         || _blok+='WC'; _dom:='D'
         |? SKID_MBK.SOURCE=2 & SKID_MBK.DEST=1
         || _blok+='WOC'; _dom:='D'
         |? SKID_MBK.SOURCE=1 & SKID_MBK.DEST=2
         || _blok+='WCD'; _dom:='O'
         ?}
      ?};
      UD_DEF.cntx_pop()
   ?}
|| _blok:='WDCOKU'; _dom:=''
?};
UD_DEF.actions(okno_alo,_blok,_dom,1);
SKID_MBP.cntx_pop(); UD_SCH.cntx_pop(); UD_TYP.cntx_pop();
_zwrot


\mbx_dsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Na wyswietl dla pol tabeli SKID_MBX
::  OLD: \mbx_dsp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_disp:=exec('mbx_edi','!ctr_pdm_patd'); _pole:=cur_afld();
{? (cur_afld()+1)='R'
|| _disp
|| {? _disp
   || {? _pole='PBUD' | _pole='JORG' | _pole='OKOSZ' | (3+_pole)='WYM' & (#(3-_pole))
      || UD_POM.PBUD:=SKID_MBX.WYM01S().SYMBOL;
         UD_POM.JORG:=SKID_MBX.WYM02S().SYMBOL;
         UD_POM.OKOSZ:=SKID_MBX.WYM03S().SYMBOL;
         {! _i:=4..15 |! ($('UD_POM.WYM'+$_i+':=SKID_MBX.WYM'+form(_i,-2)+'S().SYMBOL'))() !}
      ?};
      1
   || exec('findfnv','#color')
   ?}
?};
exec('wym_par_30_en','!ctr_pdm_patd',#((_pole-1)+2))


\mbx_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja dla pol tabeli SKID_MBX
::  OLD: \mbx_edi/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
_pole:=cur_afld();
_numer:={? (_pole+1)='S' | (_pole+1)='F' | (_pole+1)='R'
        || #((_pole-1)+2)
        |? _pole='PBUD'
        || 1
        |? _pole='JORG'
        || 2
        |? _pole='OKOSZ'
        || 3
        |? (3+_pole)='WYM' & (#(3-_pole))
        || (#(3-_pole))
        || 0
        ?};
_zwrot:=(_numer<=ile_wym);
{? _zwrot
|| {? (_pole+1)='S'
   || _zwrot:=($('SKID_MBX.'+(_pole-1)+'R'))()=1
   |? (_pole+1)='F'
   || _zwrot:=($('SKID_MBX.'+(_pole-1)+'R'))()=2
   |? _pole='PBUD'
   || _zwrot:=(SKID_MBX.WYM01R=1)
   |? _pole='JORG'
   || _zwrot:=(SKID_MBX.WYM02R=1)
   |? _pole='OKOSZ'
   || _zwrot:=(SKID_MBX.WYM03R=1)
   |? (3+_pole)='WYM' & (#(3-_pole))
   || _zwrot:=($('SKID_MBX.WYM'+form(_numer,-2)+'R'))()=1
   ?}
?};
_zwrot


\mbx_aerwym
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po redakcji rodzajow wymiarow w tabeli SKID_RBX
::  OLD: \mbx_aerwym/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_pole:=cur_afld(); _war:=fld();
_numer:=#((_pole-1)+2);
{? _war=1
|| ($('SKID_MBX.WYM'+form(_numer,-2)+'F:=\'\''))()
|| ($('SKID_MBX.WYM'+form(_numer,-2)+'S:=null'))()
?};
exec('wym_par_30_en','!ctr_pdm_patd',_numer);
win_disp(); 1


\mbx_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Dolaczanie funkcji do tworzenia wartosci zagregowanych na podstawie kartotek
::  OLD: \mbx_add/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBX.cntx_psh();
SKID_MBX.index('UNIK'); SKID_MBX.prefix(CON_FUN.ref());
_lp:={? SKID_MBX.last() || SKID_MBX.LP+1 || 1 ?};
SKID_MBX.cntx_pop();
SKID_MBX.blank(1);
SKID_MBX.LP:=_lp;
SKID_MBX.CON_FUN:=CON_FUN.ref();
{? SKID_MBX.edit("exec('spr_skid_mbx','!ctr_pdm_patd')") || SKID_MBX.add(1) ?}


\mbx_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Poprawianie funkcji do tworzenia wartosci zagregowanych na podstawie kartotek
::  OLD: \mbx_pop/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? SKID_MBX.edit("exec('spr_skid_mbx','!ctr_pdm_patd')") || SKID_MBX.put(1) ?}


\mbx_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie funkcji do tworzenia wartosci zagregowanych na podstawie kartotek
::  OLD: \mbx_del/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć wybraną pozycję?'@)
|| _lp:=SKID_MBX.LP;
   SKID_MBX.del();
   {? SKID_MBX.get() & SKID_MBX.LP>_lp
   || SKID_MBX.cntx_psh();
      SKID_MBX.index('UNIK'); SKID_MBX.prefix(CON_FUN.ref());
      {! |?
         SKID_MBX.LP-=1; SKID_MBX.put(1);
         SKID_MBX.next()
      !};
      SKID_MBX.cntx_pop()
   ?}
?}


\spr_skid_mbx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie pol tabeli SKID_MBX po redakcji okienka
::  OLD: \spr_skid_mbx/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
zwrot:='';
{? SKID_MBX.LP<=0
|| FUN.info('Liczba porządkowa musi być większa od zera.'@); zwrot:='LP'
?};
{? zwrot=''
|| {? -menu_txt='popraw' || _ref:=SKID_MBX.ref() ?}; _lp:=SKID_MBX.LP;
   SKID_MBX.cntx_psh();
   SKID_MBX.index('UNIK'); SKID_MBX.prefix(CON_FUN.ref(),_lp);
   {? SKID_MBX.first() & {? -menu_txt='popraw'|| SKID_MBX.ref()<>_ref || 1 ?}
   || FUN.info('Istenieje już pozycja o liczba porządkowej %1.'@[$_lp]); zwrot:='LP'
   ?};
   SKID_MBX.cntx_pop()
?};
{? zwrot=''
|| {! _i:=1..ile_wym
   |? zwrot=''
   |! {? ($('SKID_MBX.WYM'+form(_i,-2)+'R=1'))() & ($('SKID_MBX.WYM'+form(_i,-2)+'S=null'))()
      || ($('FUN.info(\'Nie wybrano elementu wymiaru ('+$_i+').\')'))();
         {? _i=1
         || zwrot:='PBUD'
         |? _i=2
         || zwrot:='JORG'
         |? _i=3
         || zwrot:='OKOSZ'
         || ($('zwrot:=\'WYM'+$_i+'\''))()
         ?}
      ?};
      {? zwrot='' & ($('SKID_MBX.WYM'+form(_i,-2)+'R=2'))() & ($('SKID_MBX.WYM'+form(_i,-2)+'F=\'\''))()
      || ($('FUN.info(\'Nie wybrano podano formuły na wymiar ('+$_i+').\')'))();
         ($('zwrot:=\'WYM'+form(_i,-2)+'F\''))()
      ?}
   !}
?};
{? zwrot='' & SKID_MBX.FORM_KW=''
|| FUN.info('Nie podano formuły na kwotę.'@); zwrot:='FORM_KW'
?};
_zwrot:=zwrot; VAR_DEL.delete('zwrot');
_zwrot


\rprz_con_funz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Rekord przed - pozycje logowan
::  OLD: \rprz_con_funz/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_okno:={? REF.S_FIRMA=REF.GRUPA || 'WERG' || 'WER' ?};
{? CON_FUNZ.DOKSQL<>'' & (4+CON_FUNZ.DOKSQL)='doku'
|| CON_FUNZ.actions(_okno,,,1)
|| CON_FUNZ.actions(_okno,'Z',,1)
?};
0


\rodz_kosz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Rodzaje kosztow - przyporzadkowanie
::  OLD: \rodz_kosz/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('ustal_model','control',1)
|| SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(UD_POM.SKID_MB);
   {? SKID_MBP.first()
   || SKIDXDPO.cntx_psh(); SKIDXDPO.win_sel('WER'); SKIDXDPO.win_dict('WER');
      KS.cntx_psh(); UD_DEF.cntx_psh();
      wer_ud_def:=UD_DEF.mk_sel('Pozycje budżetowe'@,'N',,'rw_ud_def',,,,1);
      UD_DEF.win_fld(wer_ud_def,,'SYMBOL',,,20,,,'Symbol'@);
      UD_DEF.win_fld(wer_ud_def,,'OPIS',,,30,,,'Opis'@);
      UD_DEF.win_act(wer_ud_def,,'Formuła','Przypisz'@@,,'Przypisanie rodzaju wartości do pozycji budżetowej'@,"exec('rw_pb','!ctr_pdm_patd',1)",,1,1,,,'P');
      task_attach('CTR_PDM_PATD');
      UD_DEF.win_act(wer_ud_def,,'Formuła','Usuń przypisanie'@@,,'Usuwa przypisanie rodzaju wartości do pozycji budżetowej'@,"exec('rw_pb','!ctr_pdm_patd',0)",,,1,,,'U');
      task_attach('CTR_PDM_PATD');
      UD_DEF.win_act(wer_ud_def,,'Formuła','Zwiń/&rozwiń całość'@@,,'Zwijanie/rozwijanie całości'@,
                     "exec('zwrw_all','#tree','UD_DEF','UD_DEF',wer_ud_def,SKID_MBP.UD_SCH)",,,,,,'R');
      UD_DEF.win_act(wer_ud_def,,'Formuła','Legenda'@@,,'Opis znaczenia kolorów wierszy'@,,"exec('legenda','color','UD_DEF#01')",,,,,'L');
      UD_DEF.win_act(wer_ud_def,,'Rekord',,,,"exec('rekprzed','color','UD_DEF#01')");
      UD_DEF.win_btn(wer_ud_def,'text=%1,btn_label_align=center,panel=right,align=begin'['Przypisz'@],'menu:P');
      UD_DEF.win_btn(wer_ud_def,'text=%1,btn_label_align=center,panel=right,align=begin'['Usuń przypisanie'@],'menu:U');
      UD_DEF.win_sel(wer_ud_def);
      SKIDXMPO.cntx_psh();
      SKIDXMPO.index('DISP'); SKIDXMPO.prefix(REF.FIRMA,UD_POM.SKID_MBN);
      KS.win_sel('KONTROL'); KS.hdr_sel(); KS.hdr_sel(' - dla roku: %1'@[SSTALE.AR().NAZ]);
      _okn_grp:=SKIDXMPO.grp_make('Definicja spójności'@,,'tab_rodz_kosz');
      SKIDXMPO.grp_sel(_okn_grp,,'WER',,"exec('refresh_rk','!ctr_pdm_patd')",,,,"exec('bef_skidxmpo','!ctr_pdm_patd')",,,,'maximized_with_title');
      SKIDXMPO.grp_splt(_okn_grp,,'vertical','panel1');
      SKIDXMPO.grp_sel(_okn_grp,KS,'KONTROL',,,,,,"exec('bef_ks','!ctr_pdm_patd')",,,,'maximized_with_title');
      SKIDXMPO.grp_splt(_okn_grp,'panel1','vertical','panel2');
      SKIDXMPO.grp_sel(_okn_grp,UD_DEF,wer_ud_def,,,,,,"exec('bef_ud_def','!ctr_pdm_patd')",,,,'maximized_with_title');
      SKIDXMPO.win_sel(_okn_grp);
      SKIDXMPO.select();
      SKIDXDPO.cntx_pop(); SKIDXMPO.cntx_pop(); KS.cntx_pop(); UD_DEF.cntx_pop()
   ?};
   SKID_MBP.cntx_pop()
?};
VAR_DEL.delete('skidxmpo','wer_ud_def')


\refresh_rk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Odswiezenie kont syntetycznych i schematu danych
::  OLD: \refresh_rk/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
skidxmpo:={? SKIDXMPO.size() || SKIDXMPO.ref() || null ?};
KS.index('SYM'); KS.prefix(SSTALE.AR);
{? ~KS.get() || KS.first() ?};
grp_disp(KS,'KONTROL');
{? ~UD_DEF.get() || UD_DEF.first() ?};
grp_disp(UD_DEF,wer_ud_def)


\bef_skidxmpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed obsluga okienka tabeli SKIDXMPO
::  OLD: \bef_skidxmpo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKIDXMPO.index('DISP'); SKIDXMPO.prefix(REF.FIRMA,UD_POM.SKID_MB);
{? ~SKIDXMPO.get() || SKIDXMPO.first() ?};
SKIDXMPO.hdr_sel();
{? REF.S_FIRMA=REF.GRUPA
|| {? OPERATOR.DEPT
   || SKIDXMPO.hdr_sel(' - model: %1 , firma: %2 - %3 %4 ,  jednostka księgowa: %5 ,'@[UD_POM.SKID_MB().KOD,REF.FIRMA().SYMBOL,SSTALE.AO().NAZ,SSTALE.AR().NAZ,OPERATOR.DEPT().OD])
   || SKIDXMPO.hdr_sel(' - model: %1 , firma: %2 - %3 %4 ,  wszystkie jednostki księgowe'@[UD_POM.SKID_MB().KOD,REF.FIRMA().SYMBOL,SSTALE.AO().NAZ,SSTALE.AR().NAZ])
   ?}
|| SKIDXMPO.hdr_sel(' - model: %1'@[UD_POM.SKID_MB().KOD])
?};
1


\bef_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed obsluga okienka tabeli KS
::  OLD: \bef_ks/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
KS.index('SYM'); KS.prefix(SSTALE.AR); {? ~KS.get() || KS.first() ?}; 1


\bef_ud_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed obsluga okienka z UD_DEF - rodzaje wartosci
::  OLD: \bef_ud_def/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBP.cntx_psh();
SKID_MBP.index('LP'); SKID_MBP.prefix(ZM.SKID_MBN);
{? SKID_MBP.first()
|| UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH);
   {? ~UD_DEF.get() || UD_DEF.first() ?}
?};
SKID_MBP.cntx_pop();
1


\wyr_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wyroznienie pozycji budzetowych z wybranym rodzajem kosztu
::  OLD: \wyr_sch/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? skidxmpo=null
|| UD_DEF.actions(wer_ud_def,'PU','L',1)
|| _jest:=0;
   SKIDXSTR.cntx_psh();
   SKIDXSTR.index('UNIK4'); SKIDXSTR.prefix(UD_DEF.UD_SKL,skidxmpo);
   {? SKIDXSTR.first()
   || _jest:=1;
      _zwrot:='UD_DEF#01#01'
   || SKIDXSTR.prefix(UD_DEF.UD_SKL);
      {? SKIDXSTR.first() || _zwrot:='UD_DEF#01#02' ?}
   ?};
   SKIDXSTR.cntx_pop();
   {? UD_DEF.sel_size()
   || UD_DEF.actions_grayed(wer_ud_def);
      UD_DEF.actions(wer_ud_def,'','P',1)
   |? _jest
   || UD_DEF.actions_grayed(wer_ud_def,'P');
      UD_DEF.actions(wer_ud_def,'','U',1)
   || UD_DEF.actions_grayed(wer_ud_def,'U');
      UD_DEF.actions(wer_ud_def,'','P',1)
   ?}
?};
_zwrot


\ud_pom_skid_mbn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wartosc poczatkowa dla pol z modelem
::  OLD: \ud_pom_skid_mbn/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_POM.SKID_MB


\usu_skidxmpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie rodzajow wartosci dla modeli
::  OLD: \usu_skidxmpo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć rodzaj wartości?'@)
|| do();
   SKIDXSTR.index('UNIK1'); SKIDXSTR.prefix(SKIDXMPO.ref());
   {? SKIDXSTR.first()
   || {! |?
         _delr:=SKIDXSTR.del(,1);
         {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
      !}
   ?};
   _delr:=SKIDXMPO.del(,1);
   {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?};
   end()
?};
1


\zm_mod_skidxdpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Zmiana modelu - rodzaje wartosci
::  OLD: \zm_mod_skidxdpo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('sel_mbn','control',1,1)
|| SKID_MBP.index('LP'); SKID_MBP.prefix(UD_POM.SKID_MB); SKID_MBP.first();
   grp_disp(SKIDXMPO,'WER');
   grp_disp(KS,'KONTROL');
   grp_disp(UD_DEF,wer_ud_def)
?}


\par_mpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Zmiana parametrow - tabela SKIDXMPO
::  OLD: \par_mpo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? __PARSES.editDom('CTR')
||
::   exec('paramkon','skid_ktr');
   exec('bef_skidxmpo','!ctr_pdm_patd')
?}


\rpo_skidxmpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Rekord po - tabela SKIDXMPO
::  OLD: \rpo_skidxmpo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? SKIDXMPO.SKIDXDPO=null
|| FUN.info('Nie wybrano rodzaju wartości do podziałów.'@); _zwrot:=0
|| {? -menu_txt='popraw' || _ref:=SKIDXMPO.ref() ?};
   SKIDXMPO.cntx_psh();
   SKIDXMPO.index('UNIK1'); SKIDXMPO.prefix(REF.FIRMA,SKIDXMPO.SKID_MBN,SKIDXMPO.SKIDXDPO);
   {? SKIDXMPO.first() & {? -menu_txt='popraw' || SKIDXMPO.ref()<>_ref || 1 ?}
   || FUN.info('Istnieje już rodzaj wartości dla wybranego modelu.'@); _zwrot:=0
   ?};
   SKIDXMPO.cntx_pop()
?};
_zwrot


\kop_rodz_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Kopiowanie ustawien rodzaju wartosci pomiedzy latami
::  OLD: \kop_rodz_wart/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
ROZNE.win_edit('ZGODNOSC'); ROZNE.ROK_DOC:=null;
ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
SSTALE.AR();
{? ROK_F.next() || ROZNE.ROK_DOC:=ROK_F.ref() ?};
ROK_F.cntx_pop();
{? ROZNE.edit("exec('spr_kop_rodz','!ctr_pdm_patd')")
|| KS.cntx_psh();
   KS.index('SYM'); KS.prefix(SSTALE.AR);
   {? KS.first()
   || SKIDXSTR.cntx_psh(); SKIDXSTR.index('UNIK1');
      {! |?
         SKIDXSTR.prefix(SKIDXMPO.ref(),KS.ref());
         {? SKIDXSTR.first()
         || _sym:=KS.SYM;
            KS.cntx_psh();
            KS.prefix(ROZNE.ROK_DOC,_sym);
            {? KS.first() & KS.SYM=_sym
            || SKIDXSTR.cntx_psh();
               SKIDXSTR.prefix(SKIDXMPO.ref(),KS.ref());
               {? ~SKIDXSTR.first() || SKIDXSTR.KS:=KS.ref(); SKIDXSTR.add() ?};
               SKIDXSTR.cntx_pop()
            ?};
            KS.cntx_pop()
         ?};
         KS.next()
      !};
      SKIDXSTR.cntx_pop()
   ?};
   KS.cntx_pop()
?}


\spr_kop_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Kopiowanie ustawien rodzaju wartosci pomiedzy latami
::  OLD: \spr_kop_rodz/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? ROZNE.ROK_DOC=null
|| FUN.info('Nie wybrano roku docelowego.'@); _zwrot:=0
|? ROZNE.ROK_DOC=SSTALE.AR
|| FUN.info('Należy wybrać inny rok niż ustawiony w stałych systemu.'@); _zwrot:=0
?};
_zwrot


\rw_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przypisanie rodzaju wartosci do pozycji budzetowej
::   WE: _a - 1-przypisanie 0-usunięcie przypisania
::  OLD: \rw_pb/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_DEF.sel_size()
|| UD_DEF.cntx_psh();
   UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_DEF.ref());
   {? ~UD_DEF.first() || exec('rw_pb1','!ctr_pdm_patd',_a) ?};
   UD_DEF.cntx_pop()
|| UD_DEF.cntx_psh();
   UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_DEF.ref());
   {? UD_DEF.first()
   || {!
      |? exec('rw_pb','!ctr_pdm_patd',_a);
         UD_DEF.next()
      !}
   || exec('rw_pb1','!ctr_pdm_patd',_a)
   ?};
   UD_DEF.cntx_pop()
?}


\rw_pb1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przypisanie rodzaju wartosci do pozycji budzetowej - wewnetrzna
::   WE: _a - 1-przypisanie 0-usunięcie przypisania
::  OLD: \rw_pb1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKIDXSTR.cntx_psh();
SKIDXSTR.index('UNIK3'); SKIDXSTR.prefix(skidxmpo,UD_DEF.UD_SKL);
{? _a
|| {? ~SKIDXSTR.first()
   || SKIDXSTR.blank(1);
      SKIDXSTR.SKIDXMPO:=skidxmpo;
      SKIDXSTR.PBUD:=UD_DEF.UD_SKL;
      SKIDXSTR.add()
   ?}
|| {? SKIDXSTR.first()
   || SKIDXSTR.del()
   ?}
?};
SKIDXSTR.cntx_pop()


\rw_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przypisanie rodzaju wartosci do konta syntetycznego
::   WE: _a - 1-przypisanie 0-usunięcie przypisania
::  OLD: \rw_ks/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKIDXSTR.cntx_psh();
SKIDXSTR.index('UNIK1'); SKIDXSTR.prefix(skidxmpo,KS.ref());
{? _a
|| {? ~SKIDXSTR.first()
   || SKIDXSTR.blank(1);
      SKIDXSTR.SKIDXMPO:=skidxmpo;
      SKIDXSTR.KS:=KS.ref();
      SKIDXSTR.add()
   ?}
|| {? SKIDXSTR.first()
   || SKIDXSTR.del()
   ?}
?};
SKIDXSTR.cntx_pop()


\wyr_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wyroznienie kont z wybranym rodzajem kosztu
::  OLD: \wyr_kon/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:='';
{? skidxmpo=null
|| KS.actions('KONTROL','PU','L',1)
|| _jest:=0;
   SKIDXSTR.cntx_psh();
   SKIDXSTR.index('UNIK2'); SKIDXSTR.prefix(KS.ref(),skidxmpo);
   {? SKIDXSTR.first()
   || _zwrot:='KS#02#01';
      _jest:=1
   || SKIDXSTR.prefix(KS.ref());
      {? SKIDXSTR.first() || _zwrot:='KS#02#02' ?}
   ?};
   SKIDXSTR.cntx_pop();
   {? KS.sel_size()
   || KS.actions_grayed('KONTROL');
      KS.actions('KONTROL','','',1)
   |? _jest
   || KS.actions_grayed('KONTROL','P');
      KS.actions('KONTROL','','U',1)
   || KS.actions_grayed('KONTROL','U');
      KS.actions('KONTROL','','P',1)
   ?}
?};
_zwrot


\ktr_wykon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wykonania
::  OLD: \ktr_wykon/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CALO_POZ.cntx_psh(); CALO_POZ.win_edit('RED');
CALO_NAG.cntx_psh();
CALO_NAG.index('DISP'); CALO_NAG.prefix(CON_FUN.ref());
exec('schematy_alo','!ctr_pdm_patd');
_okn_grp:=CALO_NAG.grp_make('Alokacje'@,,'tab_calo_nag');
CALO_NAG.grp_sel(_okn_grp,,'WER',,"exec('arfr_calo_nag','!ctr_pdm_patd')",,,,,,,,'maximized');
CALO_NAG.grp_splt(_okn_grp,,'horizontal','panel1',12);
CALO_NAG.grp_sel(_okn_grp,CALO_POZ,'WER1','Dane źródłowe'@,,,,,"exec('bob_calo_poz','!ctr_pdm_patd',1)",,,1,'maximized_with_title');
CALO_NAG.grp_sel(_okn_grp,CALO_POZ,'WER2','Dane docelowe'@,,,,,"exec('bob_calo_poz','!ctr_pdm_patd',2)",,,1,'maximized_with_title');
CALO_NAG.win_sel(_okn_grp); CALO_NAG.select();
CALO_NAG.cntx_pop(); CALO_POZ.cntx_pop()


\schematy_alo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Ustawienie schematow do wyswietlania dla pozycji alokacji
::  OLD: \schematy_alo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{! _i:=1..15 |! ($('ROZNE.UD_SCH'+form(_i,-2)+':=null'))() !};
SKID_MBK.cntx_psh(); _i:=0;
SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref());
{? SKID_MBK.first()
|| {! |?
      _i+=1;
      ($('ROZNE.UD_SCH'+form(_i,-2)+':=SKID_MBK.SKID_MBP'))();
      exec('schematy_alo_en','!ctr_pdm_patd',_i,1);
      SKID_MBK.next()
   !}
?};
{! _ii:=_i+1..15
|! exec('schematy_alo_en','!ctr_pdm_patd',_ii,0)
!};
SKID_MBK.cntx_pop()


\schematy_alo_en
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawienie dostępności pola okna redagowania RED tabeli CALO_POZ
::   WE: _a - nr pola
::       _b - pole dostępne? 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
CALO_POZ.efld_opt('RED','enable='+$_b,ROZNE,'UD_SCH'+form(_a,-2));
CALO_POZ.efld_opt('RED','enable='+$_b,,'WYM'+form(_a,-2))


\arfr_calo_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po odswiezeniu tabeli CALO_NAG
::  OLD: \arfr_calo_nag/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
grp_disp(CALO_POZ,'WER1');
grp_disp(CALO_POZ,'WER2')


\bob_calo_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed obsluga tabeli CALO_POZ
::   WE: _a - 1 - dane zrodlowe
::            2 - dane docelowe
::  OLD: \bob_calo_poz/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CALO_NAG.get()
|| CALO_POZ.use('cc'+(4+$CALO_NAG.DATA)+form(CALO_NAG.DATA~2,-2)); CALO_POZ.index('DISP');
   CALO_POZ.prefix(CALO_NAG.ref(),_a);
   {? ~CALO_POZ.get() || CALO_POZ.first() ?}
|| CALO_POZ.use('cc______'); CALO_POZ.index('DISP'); CALO_POZ.prefix(null)
?};
1


\usu_alo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie zapamietanych alokacji
::  OLD: \usu_alo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CALO_NAG.sel_size() | FUN.ask('Usunąć zapamiętaną alokację?'@)
|| do();
   CALO_POZ.cntx_psh();
   CALO_POZ.use('cc'+(4+$CALO_NAG.DATA)+form(CALO_NAG.DATA~2,-2));
   CALO_POZ.index('DISP'); CALO_POZ.prefix(CALO_NAG.ref());
   {? CALO_POZ.first()
   || {! |?
         _delr:=CALO_POZ.del(,1);
         {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
      !}
   ?};
   _delr:=CALO_NAG.del(,1);
   {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?};
   CALO_POZ.cntx_pop();
   end()
?}


\ar_skidxdpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Rekord po okna SKIDXDPO
::----------------------------------------------------------------------------------------------------------------------
_r:=__CHK.record(SKIDXDPO,,'NAZWA');
_ref:=SKIDXDPO.ref();
SKIDXDPO.cntx_psh();
SKIDXDPO.index('NAZWA'); SKIDXDPO.prefix(SKIDXDPO.NAZWA,);
{? SKIDXDPO.first() & (-menu_txt()<>'popraw' | _ref<>SKIDXDPO.ref())
|| FUN.info('Istnieje rodzaj wartości do podziałów o nazwie \' %1 \'.'@[SKIDXDPO.NAZWA]);
   _r:='NAZWA'
?};
SKIDXDPO.cntx_pop();
_r


\con_funl_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie grupy  komunikatow
::  OLD: \con_funl_usu/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUNL.sel_size() | FUN.ask('Usunąć grupę komunikatów?'@)
|| do();
   CON_FUNZ.cntx_psh();
   CON_FUNZ.use('conp'+(4+$CON_FUNL.DATA));
   CON_FUNZ.index('DISP'); CON_FUNZ.prefix(CON_FUNL.ref());
   {? CON_FUNZ.first()
   || {! |?
         _delr:=CON_FUNZ.del(,1);
         {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
      !}
   ?};
   _delr:=CON_FUNL.del(,1);
   {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?};
   CON_FUNZ.cntx_pop();
   end()
?}


\con_funl_gusu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie grupy komunikatow - grupa przed
::  OLD: \con_funl_gusu/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.ask('Usunąć zaznaczone grupy komunikatów?'@)


\bg_usu_alo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie grupy komunikatow - grupa przed
::  OLD: \bg_usu_alo/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.ask('Usunąć zapamiętane alokacje?'@)


\con_funz_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie komunikatu
::  OLD: \con_funz_usu/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUNZ.sel_size() | FUN.ask('Usunąć komunikat?'@)
|| do();
   _delr:=CON_FUNZ.del(,1);
   {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?};
   end()
?}


\con_funz_gusu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie komunikatu - grupa przef
::  OLD: \con_funz_gusu/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.ask('Usunąć zaznaczone komunikaty?'@)


\fun_12
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Uzupelnienie danych dla funkcji naliczenia podziałów dla planów amortyzacji
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.PAR01:=%K_ES.SRSP().MASKA


\con_dok_log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Podglad dokumentu z pozycji logowania
::  OLD: \con_dok_log/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_ar:=SSTALE.AR; _ao:=SSTALE.AO;
_ref:=BB.sqlint(CON_FUNZ.DOKSQL); _nam:=form(CON_FUNZ.DOKSQL-8);
{? _ref<>0 & _nam<>''
|| DOK.use(_nam); DOK.prefix();
   _rok:=(2+(DOK.name()+4)); _okres:=#(DOK.name()+2);
   ROK_F.cntx_psh(); ROK_F.index('KODG'); ROK_F.prefix(_rok);
   {? ROK_F.first()
   || OKRO_F.cntx_psh(); OKRO_F.prefix(ROK_F.ref(),_okres);
      {? OKRO_F.first()
      || SSTALE.AR:=ROK_F.ref(); SSTALE.AO:=OKRO_F.ref(); exec('open_tabele','open_tab');
         {? DOK.seek(_ref,_nam) || exec('poz_dok','dok_fks') ?}
      ?};
      OKRO_F.cntx_pop()
   ?};
   ROK_F.cntx_pop()
?};
SSTALE.AR:=_ar; SSTALE.AO:=_ao; exec('open_tabele','open_tab')

:Sign Version 2.0 jowisz:1045 2022/06/30 14:22:48 61208f45f94479e5a31b29f830b802ac553d49ba5adeb91d877ba208bbfce9ee0d912d267b2819f1fc53b66aa5d3a1c6f18c575d5a9c5cd6c5a6aed915acbfa72f0ef3eab59aee9ddf56f86348200f7962c94be0794d8a70fa2c28560654451bcd3f75f5741a8138e76fa268b46f750cf3291491d563747e00a05e25d02a9d4c
