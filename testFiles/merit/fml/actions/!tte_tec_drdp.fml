:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !tte_tec_drdp.fml
:: Utworzony: 02.03.2015
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły czynności TTE_TEC_DRDP - Rejestrowanie pozostałych danych karty technologicznej
::            Uwaga: większość kodu jest wspólna z czynnością TTE_WTE_DRDP - w przypadku zmian modyfikować oba pliki
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Główna formuła czynności rejestrowania pozostałych danych dla karty technologicznej (TTE_TEC_DRDP)
::       Zadaniem formuły jest zredagowanie parametrów, produktów, atrybutów, dokumentów i N-P-U karty technologicznej
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::       context - [obj_new] obiekt służący do przekazywania kontekstu wywołania czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_int:=params_get().int;
_out:=params_get().out;
_mp:=params_get().mp;
_context:=params_get().context;

:: UPRAWNIENIA
::# permissions=ODDZ

:: PARAMETRY WE:
::# kind=WE, symbol=TKTL, type=_TKTL, name=Wskazanie na kartę technologiczną, required=T, keyref=T
{? var_pres('TKTL',_in)<>type_of(~~) & var_pres('TKTL',_in)<>type_of(null()) || return() ?};
{? var_pres('TKTL',_in)=type_of(~~) || return() ?};

:: PARAMETRY WY:
::# kind=WY, symbol=TKTL, type=_TKTL, name=Wskazanie na kartę technologiczną, required=N
{? var_pres('TKTL',_out)<>type_of(~~) & var_pres('TKTL',_out)<>type_of(null()) || return() ?};

{? _mp.isMicro()
||
:: Obsługa poza procesem
   _akcja:=_mp.akcja();

:: Zakończenie rejestrowania
   {? _akcja='ZAKOŃCZ_Z_PYTANIEM'
   || {? exec('valid','tech_prod',_in.TKTL)
            &
         FUN.ask('Czy zakończyć rejestrację pozostałych danych dla całej karty technologicznej?'@)

      || exec('FindAndGet','#table',TKTL,_in.TKTL,,"STAT_P:='T'; STAN:='P'; put()")
      ?}

:: Redagowanie N-P-U (do karty albo do operacji)
   |? _akcja='NPU'
   || exec('tools_main','tech_tool',_in.TKTL,_context.oper,_context.npu,_context.init,_context.used)

:: Redagowanie produktów (do karty)
   |? _akcja='PROD'
   || exec('tktlw_sel','tech_prod',_in.TKTL)

:: Parametry (do karty)
   |? _akcja='PAR'
   || exec('show_tpart','tech_param',_in.TKTL)

:: Atrybuty (do karty)
   |? _akcja='ATR'
   || exec('TKTL','tech_atr',_in.TKTL)

:: Dokumentacja (do karty)
   |? _akcja='DOK'
   || exec('TKTL','tech_doc',_in.TKTL)

   || FUN.info('Nie obsłużony kontekst wywołania.'@)
   ?}
||
:: Obsługa w procesie
   exec('tpoz_in_process','!tte_tec_drdp',_in,_int,_out,_mp,_context)
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Opis dla czynności rejestrowania pozostałych danych dla karty technologicznej (TTE_TEC_DRDP)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_desc:='';
_keyRefs:=_mp.getRefs();
_in:=_mp.load(exec('kind_in','#b_port'));

:: jest rekord kluczowy to ustawiam odpowiedniego TKTL
{? var_pres('[1]',_keyRefs)
|| _tmp:=exec('FindAndGet','#table',TKTL,_keyRefs[1],,"NRK+' ||| '+WER",'');
   _tab_tmp:=spli_str(_tmp,' ||| ');
   _desc:={? _tmp<>'' || 'Zredaguj pozostałe dane dla karty technologicznej %1 wer. %2'@@[_tab_tmp[1],_tab_tmp[2]] || '' ?}
::|| _desc:=exec('FindAndGet','#table',TKTL,_keyRefs[1],,"'Zredaguj pozostałe dane dla karty technologicznej %1 wer. %2'@@[NRK,WER]",'')

:: jest parametr wejściowy to ustawiam odpowiedniego TKTL
|? var_pres('TKTL',_in)
|| _tmp:=exec('FindAndGet','#table',TKTL,_in.TKTL,,"NRK+' ||| '+WER",'');
   _tab_tmp:=spli_str(_tmp,' ||| ');
   _desc:={? _tmp<>'' || 'Zredaguj pozostałe dane dla karty technologicznej %1 wer. %2'@@[_tab_tmp[1],_tab_tmp[2]] || '' ?}
::|| _desc:=exec('FindAndGet','#table',TKTL,_in.TKTL,,"'Zredaguj pozostałe dane dla karty technologicznej %1 wer. %2'@@[NRK,WER]",'')

?};
_desc


\tpoz_in_process
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Formuła rejestrowania pozostałych danych dla karty technologicznej
::       Używana przez exec('main','!tte_tec_drdp')
::   WE: _a - [obj_new] - parametry wejściowe czynności
::       _b - [obj_new] - parametry wewnętrzne czynności
::       _c - [obj_new] - parametry wyjściowe czynności
::       _d - obiekt odpowiedzialny za obsługę procesu
::       _e - [obj_new] obiekt służący do przekazywania kontekstu wywołania czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=_a;
_int:=_b;
_out:=_c;
_mp:=_d;
_context:=_e;

_torw:=VAR.A_TORW:='T';
_arch:=VAR.ARCH:='N';

_akcja:=_mp.akcja();

_can_continue:=1;
_clean_result:=params_exec('clean','!tte_tec_drdp',_mp,_in);
_can_continue:=_clean_result.RESULT;
_tktl:=_clean_result.TKTL;

_ok:=0;
_res:=~~;

{? _can_continue>0
||
   {? _tktl<>null()
   ||
      {? exec('FindAndGet','#table',TKTL,_tktl,,"TORW",'')<>_torw
      || _msg:='Niezgodność wywołania czynności.\nNie można redagować pozostałych danych dla wzorca technologii.';
         FUN.emsg(_msg);
         _mp.error(_msg)

      |? exec('FindAndGet','#table',TKTL,_tktl,,"ARCH",'')<>_arch
      || _msg:='Niezgodność wywołania czynności.\nNie można redagować pozostałych danych dla karty archiwalnej.';
         FUN.emsg(_msg);
         _mp.error(_msg)

      ||
         exec('tktl_cntx_psh','tech_common');
         exec('tktl_use','tech_common',ref_name(_tktl)+3);
         TKTL.clear();

         {? TKTL.seek(_tktl)
         ||
            {? TKTL.STAT_P='T'
            || FUN.info('Zakończono redagowanie pozostałych danych dla karty technologicznej.'@)

            || _mp.keyRef(TKTL.uidref());
               _mp.descTodo();

::             Zmienne
               VAR.A_KTL:=TKTL.ref();
               VAR.GRUPA:='N';

::             Właściwa obsługa
::             Zakończenie rejestrowania
               {? _akcja='ZAKOŃCZ_Z_PYTANIEM'
               || {? exec('valid','tech_prod',TKTL.ref())
                        &
                     FUN.ask('Czy zakończyć rejestrację pozostałych danych dla całej karty technologicznej?'@)

                  || TKTL.STAT_P:='T';
                     TKTL.STAN:='P';
                     TKTL.put()
                  ?}

::             Redagowanie N-P-U (do karty albo do operacji, teraz zawsze wyświetlane wszystkie)
               |? _akcja='NPU'
               || {? 1
::                     TKTL.TYP().UTIL='K' | _context.oper<>null()
                  || _res:=exec('tools_main','tech_tool',_tktl,_context.oper,_context.npu,_context.init,_context.used)
                  || exec('menu_start','tech_head');
                     exec('tree','tech_oper',5);
                     exec('menu_stop','tech_head');
                     _res:=''
                  ?}

::             Redagowanie produktów (do karty)
               |? _akcja='PROD'
               || _res:=exec('tktlw_sel','tech_prod',TKTL.ref())

::             Parametry (do karty)
               |? _akcja='PAR'
               || _res:=exec('show_tpart','tech_param',TKTL.ref())

::             Atrybuty (do karty)
               |? _akcja='ATR'
               || _res:=exec('TKTL','tech_atr',TKTL.ref())

::             Dokumentacja (do karty)
               |? _akcja='DOK'
               || _res:=exec('TKTL','tech_doc',TKTL.ref())

::             Lista TODO
               |? _akcja=''
               || _view:=0;
                  {? TKTL.STAT_N='N'
                  || _choice:=FUN.choice('Nie zakończono rejestracji nagłówka karty.'@,,'Zakończ nagłówek i redaguj'@,'Podgląd'@);
                     {? _choice=1
                     || _args:=exec('mp_run_a','#b__box');
                        _args.ACT_UID:='TTE_TEC_DRTE';
                        _args.UIDREF:=TKTL.uidref();
                        _args.AKCJA:='ZAKOŃCZ_BEZ_PYTANIA';
                        exec('mp_run','#b__box',_args);
                        TKTL.get()
                     || _view:=1
                     ?}
                  || _choice:=2
                  ?};
                  {? _choice>0
                  || _red:=TKTL.mk_edit('Dane pozostałe karty technologicznej'@+{? _view || ' — '+'PODGLĄD'@ || '' ?},,'#tktl_t_dred',,,'html_maximized');
                     TKTL.win_ewin(_red,,'DISP');
                     TKTL.win_edit(_red);
                     _btn:=TKTL.win_ebtn(_red,'text=%1,align=begin'['N-P-U'@],"exec('action_tools','tech_tool')");
                     TKTL.btn_eopt(_red,_btn,{? TKTL.TYP().UTIL='N' || 'state=grayed' || 'state=normal' ?});
                     _btn:=TKTL.win_ebtn(_red,'text=%1,align=begin'['Parametry'@],"exec('action_params','!tte_tec_drdp')");
                     TKTL.btn_eopt(_red,_btn,{? TKTL.TYP().PAR='N' || 'state=grayed' || 'state=normal' ?});
                     _btn:=TKTL.win_ebtn(_red,'text=%1,align=begin'['P&rodukty karty'@],"exec('action_products','!tte_tec_drdp')");
                     _btn:=TKTL.win_ebtn(_red,'text=%1,align=begin'['Atrybu&ty'@],"exec('action_attrib','!tte_tec_drdp')");
                     _btn:=TKTL.win_ebtn(_red,'text=%1,align=begin'['Doku&mentacja'@],"exec('action_docum','!tte_tec_drdp')");
                     {? exec('chk_role','#b__box',OPERATOR.USER,'TTE_TEC_DRDP')
                     || _btn:=TKTL.win_ebtn(_red,'text=%1,align=end'['&Zakończ'@],"exec('tpoz_dalej','!tte_tec_drdp')");
                        TKTL.btn_eopt(_red,_btn,{? TKTL.STAT_N='N' || 'state=grayed' || 'state=normal' ?})
                     ?};
                     _btn:=TKTL.win_ebtn(_red,'text=%1,align=end'['&Anuluj'@],"'key:Esc'");
                     {? TKTL.edit()
                     || {? TKTL.STAT_P='T'
                        || TKTL.put();
::                         Uruchomienie ponownie instancji tej samej czynności może zmienić status, więc przywracam
::                        _mp.coreKeep();
                           ~~
                        ?}
                     ?}
                  ?}
               ?}
            ?};

            TKTL.clear();
            {? TKTL.seek(_in.TKTL)
            ||
::             Ustawiony status - czynność zostaje zakończona
               {? TKTL.STAT_P='T'
               || _out.TKTL:=TKTL.ref();
                  _mp.save(,_out);
                  _mp.done();
                  _res:='key:Esc'

               ?}
            ?}
         ?};

         exec('tktl_cntx_pop','tech_common')

      ?}

   || _msg:='Nie przekazono karty technologicznej.';
      FUN.emsg(_msg);
      _mp.error(_msg)
   ?}
?};

_res


\action_products
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rejestrowanie pozostałych danych dla karty technologicznej - akcja 'Produkty' z menu okna wertowania
::   WY: tekst sterujący menu użytkownika / ~~
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? TKTL.STAT_N='N'
|| set_help(exec('set_help','#help','TTE_TEC_DRDP'));
   _res:=exec('tktlw_sel','tech_prod',TKTL.ref(),1)

|? TKTL.ARCH='N' & TKTL.STAT_P='N' & exec('chk_role','#b__box',OPERATOR.USER,'TTE_TEC_DRDP')
|| _args:=exec('mp_run_a','#b__box');
   _args.ACT_UID:='TTE_TEC_DRDP';
   _args.UIDREF:=TKTL.uidref();
   _args.AKCJA:='PROD';

   _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
   exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'TKTL',TKTL.ref());

   _res:=exec('mp_run','#b__box',_args)

|| set_help(exec('set_help','#help','TTE_TEC_DRDP'));
   _res:=exec('tktlw_sel','tech_prod',TKTL.ref(),0)
?};
:: Załadowanie bufora, bo czynność mogła podmienieć produkt karty (ważne, gdy obsługa przez przycisk w oknie redagowania)
TKTL.get();
_res


\action_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rejestrowanie pozostałych danych dla karty technologicznej - akcja 'Parametry' z menu okna wertowania
::   WY: tekst sterujący menu użytkownika / ~~
::----------------------------------------------------------------------------------------------------------------------
{? TKTL.STAT_N='N'
|| set_help(exec('set_help','#help','TTE_TEC_DRDP'));
   exec('show_tpart','tech_param',TKTL.ref(),1)

|? TKTL.ARCH='N' & TKTL.STAT_P='N' & exec('chk_role','#b__box',OPERATOR.USER,'TTE_TEC_DRDP')
|| _args:=exec('mp_run_a','#b__box');
   _args.ACT_UID:='TTE_TEC_DRDP';
   _args.UIDREF:=TKTL.uidref();
   _args.AKCJA:='PAR';

   _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
   exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'TKTL',TKTL.ref());

   exec('mp_run','#b__box',_args)

|| set_help(exec('set_help','#help','TTE_TEC_DRDP'));
   exec('show_tpart','tech_param',TKTL.ref(),1)
?}


\action_attrib
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rejestrowanie pozostałych danych dla karty technologicznej - akcja 'Atrybuty' z menu okna wertowania
::   WY: tekst sterujący menu użytkownika / ~~
::----------------------------------------------------------------------------------------------------------------------
{? TKTL.STAT_N='N'
|| set_help(exec('set_help','#help','TTE_TEC_DRDP'));
   exec('TKTL','tech_atr',TKTL.ref())

|? TKTL.ARCH='N' & TKTL.STAT_P='N' & exec('chk_role','#b__box',OPERATOR.USER,'TTE_TEC_DRDP')
|| _args:=exec('mp_run_a','#b__box');
   _args.ACT_UID:='TTE_TEC_DRDP';
   _args.UIDREF:=TKTL.uidref();
   _args.AKCJA:='ATR';
   _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
   exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'TKTL',TKTL.ref());

   exec('mp_run','#b__box',_args)

|| set_help(exec('set_help','#help','TTE_TEC_DRDP'));
   exec('TKTL','tech_atr',TKTL.ref())
?}


\action_docum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Rejestrowanie pozostałych danych dla karty technologicznej - akcja 'Dokumentacja' z menu okna wertowania
::   WY: tekst sterujący menu użytkownika / ~~
::----------------------------------------------------------------------------------------------------------------------
{? TKTL.STAT_N='N'
|| set_help(exec('set_help','#help','TTE_TEC_DRDP'));
   exec('TKTL','tech_doc',TKTL.ref())

|? TKTL.ARCH='N' & TKTL.STAT_P='N' & exec('chk_role','#b__box',OPERATOR.USER,'TTE_TEC_DRDP')
|| _args:=exec('mp_run_a','#b__box');
   _args.ACT_UID:='TTE_TEC_DRDP';
   _args.UIDREF:=TKTL.uidref();
   _args.AKCJA:='DOK';
   _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
   exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'TKTL',TKTL.ref());

   exec('mp_run','#b__box',_args)

|| set_help(exec('set_help','#help','TTE_TEC_DRDP'));
   exec('TKTL','tech_doc',TKTL.ref())
?}


\action_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Zakończenie rejestrowania pozostałych danych dla karty technologicznej
::       - obsługa przycisku w oknie kart technologicznych (obsługa z pytaniem)
::----------------------------------------------------------------------------------------------------------------------
{? TKTL.STAT_P='N'
|| {? exec('tktl_lock','tech_common',,'P')
   || _args:=exec('mp_run_a','#b__box');
      _args.ACT_UID:='TTE_TEC_DRDP';
      _args.UIDREF:=TKTL.uidref();
      _args.AKCJA:='ZAKOŃCZ_Z_PYTANIEM';
      _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
      exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'TKTL',TKTL.ref());

      exec('mp_run','#b__box',_args);

      exec('tktl_unlock','tech_common',,'P')
   ?}

|| FUN.info('Zakończono rejestrację pozostałych danych dla karty technologicznej.\nModyfikacje niemożliwe.'@)
?};
'key:Esc'


\tpoz_dalej
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Obsługa przycisku 'Zakończ' w oknie redagowania TKTL
::       Zatwierdza dodatkowe dane i popycha proces dalej
::       Kontekst wywołania - rekord TKTL
::----------------------------------------------------------------------------------------------------------------------
_result:='';

:: Rekord mógł być zmodyfikowany przez inne czynności, więc go ponownie wczytuję
{? TKTL.get()
|| {? TKTL.STAT_P='T'
   || FUN.info('Rejestracja pozostałych danych karty technologicznej została już zakończona.'@);
      _result:='key:Esc'
   |? TKTL.STAT_N='N'
   || FUN.info('Nie zakończono redagowania nagłówka karty technologicznej.'@)
   || {? exec('tktl_lock','tech_common',TKTL.ref(),'P')
      || {? exec('valid','tech_prod',TKTL.ref())
               &
            FUN.ask('Czy zakończyć rejestrację pozostałych danych dla całej karty technologicznej?'@)
         || TKTL.STAT_P:='T';
            TKTL.STAN:='P';
            _result:='key:F2'
         ?};
         exec('tktl_unlock','tech_common',TKTL.ref(),'P')
      ?}
   ?}
|| _result:='key:Esc'
?};
_result


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::       [_b] - tablica z parametrami wejściowymi
::   WY: obj_new() - obiekt wynikowy
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
{? var_pres('_b')>100
|| _in:=_b
|| _in:=params_get().in
?};
params_exec('tech_clean','tech_common',_mp,_in)

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:40 d1439392492f6074ad44bac410114f87c1b3bf261e29878f63351e9ce0e93a52e6a1a0e6bcd029844a8d0e5778f5f832233d50567c209dad5b7b807426a3c44953e8154fb9c89bf44959ac2e9fdb3dcc49a57d6a120aab0a015ea47096cf3272c715d34cdcedbe7ee1b3c88ecf80884e2edaa6d607598dbfbb955a4af379e9ab
