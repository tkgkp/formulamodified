:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fks_ved_dvgd.fml
:: Utworzony: 28.06.2023
:: Autor: PBS
::======================================================================================================================
:: Zawartość: Formuły czynności FKS_VED_DVGD - Tworzenie deklaracji JPK_GV
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Dołaczanie deklaracji JPK_GV - główna formuła czynności FKS_VED_DVGD
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS
::# kind=WE, symbol=OKRES, type=_OKRO_F, name=Okres deklaracji, required=N, keyref=N
:: PARAMETRY WY:
::# kind=WY, symbol=DEKLARACJA, type=_VAT_DEK, name=Deklaracja JPK_GV, required=T
::# kind=WY, symbol=OKRES, type=_OKRO_F, name=Okres deklaracji, required=T

_args:=params_get();
_we:=_args.in;
_wy:=_args.out;
_mp:=_args.mp;
_akcja:=_mp.akcja();
vat_typ:='GV';
BPMN.SYM_DOM:='FKS';
{? var_press('OKRES',_wy)>0
|| OKRO_F.prefix();
   OKRO_F.seek(_wy.OKRES)
|? var_press('OKRES',_we)>0
|| OKRO_F.prefix();
   OKRO_F.seek(_we.OKRES)
|| SSTALE.AO()
?};
_ar:=SSTALE.AR;
_ao:=SSTALE.AO;
SIK.OKRROK2:=OKRO_F.ref();
SIK.ROK2:=OKRO_F.ROK;
_jest:=0;
Add:=0;
ref:=null;
VAT_DEK.cntx_psh();
rodzdekl:='G';
_refy:=_mp.getRefs();
{? var_press('[1]',_refy)>0
|| VAT_DEK.index('UNIK');
   VAT_DEK.prefix();
   {? VAT_DEK.seek(_refy[1])
   || _jest:=1;
      Add:=1;
      ref:=VAT_DEK.ref();
      exec('set_var','fks_ved')
   || _jest:=-1
   ?}
|| exec('init','fks_ved',OKRO_F.ROK,OKRO_F.ref())
?};
_spr:="exec('vat_rec','!fks_ved_dvgd')";
{? _jest=-1 | _jest=0 & _mp.pathTodo()
|| FUN.info('Nie znaleziono deklarcji JPK_GV.'@);
   _wy.DEKLARACJA:=null;
   _wy.OKRES:=null;
   _mp.save(,_wy);
   _mp.done()
|? _jest=0 & (_mp.pathProc() | _akcja='Dołącz')
|| {? exec('okres','!fks_ved_dvgd') & exec('set_vat_dek','!fks_ved_dvgd')
   || _add:="exec('add','!fks_ved_dvgd')";
      exec('set_win','fks_ved',_spr,_add);
      _mp.trigRef('VAT_DEK');
      {? VAT_DEK.edit(_spr)
      || {? Add=0
         || ref:=_add();
            {? ref
            || Add:=1;
               VAT_POZ.index('VAT_POZ');
               VAT_POZ.prefix(ref)
::               exec('vat_dpoz','fks_ved',vat_typ);
::               VAT_DEK.edit(_spr)
            ?}
         ?}
      ?}
   ?}
|? VAT_DEK.STATUS<>'N' & VAT_DEK.STATUS<>''
|| FUN.info('Zakończono już rejestrację deklaracji.'@)
|? exec('bevatdek','fks_ved')
|| {? _akcja='Zakończ'
   || VAT_DEK.STATUS:='R';
      VAT_DEK.put()
   || exec('ust_okn','fks_ved');
      _add:="";
      exec('set_win','fks_ved',_spr,_add);
      {? VAT_DEK.edit(_spr)
      || VAT_DEK.put();
         exec('vat_uzas','fks_ved')
      ?}
   ?};
   VAT_DEK.r_unlock()
?};
VAT_DEK.cntx_pop();
{? ref<>null
|| VAT_DEK.cntx_psh();
   VAT_DEK.prefix();
   {? VAT_DEK.seek(ref)
   || _wy.DEKLARACJA:=VAT_DEK.ref();
      _wy.OKRES:=SSTALE.AO;
      _mp.save(,_wy);
      {? VAT_DEK.STATUS<>'N'
      || _mp.done()
      ?}
   ?};
   VAT_DEK.cntx_pop();
   VAT_DEK.seek(ref)
?};
{? _ar<>SIK.ROK2 | _ao<>SIK.OKRROK2
|| SSTALE.AR:=_ar;
   SSTALE.AO:=_ao;
   exec('open','fks_ved',SSTALE.AR().KOD,SSTALE.AO().NR)
?};
VAR_DEL.delete('vat_ver','zaok','niedruk','pv','ref','LastVatDek','GV')


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Dołaczanie deklaracji JPK_GV - główna formuła czynności FKS_VED_DVGD - opis
::----------------------------------------------------------------------------------------------------------------------
''@@; params_exec('desc_add','fks_ved','JPK_GV')


\vat_rec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formula po redakcji okienka VAT_DEK
::----------------------------------------------------------------------------------------------------------------------
_ret:='';
{? ~VAT_DEK.NR
|| FUN.info('Nie wypełnione pole z numerem wersji deklaracji.'@); _ret:='NR'
?};
{? _ret=''
|| {? VAT_DEK.EMAIL=''
   || FUN.info('Nie wypełniono adresu e-mail.'@); _ret:='EMAIL'
   |? exec('mail_ok','#email',VAT_DEK.EMAIL)=0
   || FUN.info('Niepoprawny adres e-mail.'@); _ret:='EMAIL'
   ?}
?};
_ret


\okres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Umożliwia wybór okresu deklaracji
::----------------------------------------------------------------------------------------------------------------------
OkroFInd:=1;
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
ROK_F.win_dict('WER');
OKRO_F.win_dict('SLO');
SIK.win_edit('ROKOKRES');
_ok:=SIK.edit("
   _r:=__CHK.record2(SIK,'ROK2','Rok bilansowy','OKRROK2','Okres');
   _date:=date(2023,07,01);
   {? _r=''
   || {? OKRO_F.POCZ=date(0,0,0)
      || FUN.info('W okresie %1 nie można tworzyć deklaracji.'@[OKRO_F.NAZ]); 0
      |? OKRO_F.POCZ<_date
      || FUN.info('Deklaracja JPK_GV obowiązuje od %1.'@[$_date]); 0
      || 1
      ?}
   || _r
   ?}
");
VAR_DEL.delete('OkroFInd');
{? _ok
|| {? SSTALE.AR<>SIK.ROK2 | SSTALE.AO<>SIK.OKRROK2
   || SSTALE.AR:=SIK.ROK2;
      SSTALE.AO:=SIK.OKRROK2;
      exec('open','fks_ved',SSTALE.AR().KOD,SSTALE.AO().NR)
   ?}
?};
_ok


\set_vat_dek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Przed dodaniem deklaracji - ustawienie danych
::----------------------------------------------------------------------------------------------------------------------
vat_ver:=exec('vat_ver','!fks_ved_dvgd',-vat_typ,SIK.OKRROK2().KON);
zaok:=0;
niedruk:=1;
_dekl:=OKRO_F.ROK;
_dekk:=OKRO_F.ROK().KOD;
_dekp:=ROK_F.POCZ_ROK;
_rodz:='G';
_wer:=1;
_ref:=null;
_dalej:=1;
{? exec('czy_ks','fks_vat')
|| SSTALE.AO();
   _okres:=$(OKRO_F.POCZ~1)+'/'+form(OKRO_F.POCZ~2,-2);
   _dekk:=OKRO_F.ROK().KOD;
   _dekp:=ROK_F.POCZ_ROK;

   {? _dalej
   || _is_vat:=0;
      VAT_DEK.index('VAT_DEK');
      VAT_DEK.prefix(_dekp,vat_typ,_okres);
      _is_vat:=VAT_DEK.last();
      {? _is_vat
      || {? VAT_DEK.PLIK || LastVatDek:=VAT_DEK.ref() ?};
         {? VAT_DEK.TYP+3='KOR'
         || _ok:=FUN.choice('Istnieje już deklaracja na okres %1.'@[_okres],1, 'utworzyć Nową'@,'utworzyć Korektę'@);
            {? _ok || _ok+=1 ?}
         || _ok:=FUN.choice('Istnieje już deklaracja na okres %1.'@[_okres],
                            2,'Usunąć ostatnią'@,'utworzyć Nową'@,'utworzyć Korektę'@)
         ?};
         _wer:=VAT_DEK.WER;
         {? _ok=3 | _ok=2 | _ok=1
         || _typ:=
               {? _ok=2 | _ok=1
               || vat_typ
               || vat_typ+'_KOR'
               ?};
            VAT_DEK.cntx_psh();
            VAT_DEK.prefix(_dekp,_typ,_okres);
            _wer:={? VAT_DEK.last() || VAT_DEK.WER || 0 ?};
            VAT_DEK.cntx_pop()
         ?};
         {? _ok=1
         || {? vat_typ<>VAT_DEK.TYP
            || _wer+=1
            ?};
            _ok:=exec('vat_usu','fks_ved',1)
         || _wer+=1
         ?}
      || _ok:=2
      ?};
      {? _ok>0
      || VAT_DEK.prefix(_dekp);
         VAT_DEK.ROK:=_dekl;
         VAT_DEK.RODZAJ:=_rodz;
         {? _ok=3
         || VAT_DEK.ZAL3:=1;
            SKID.DEKL_NAZ:=vat_typ;
            VAT_DEK.TYP:=vat_typ+'_KOR'
         || VAT_DEK.TYP:=SKID.DEKL_NAZ:=vat_typ
         ?};
         VAT_DEK.OKRES:=_okres;
         {? 1+(_okres+2)='/'
         || _nr_okr:=#(_okres+1);
            _mc:=(#(_okres+1)-1)*3+1;
            _d:=date(#(4+_okres),_mc,0);
            {? vat_typ='VAT27' || SKID.DEKL_NAZ+='K' ?}
         || _nr_okr:=#(_okres+2);
            _d:=date(#(4+_okres),#(_okres+2),0)
         ?};
         VAT_VER.index('VER_OD'); VAT_VER.prefix(BPMN.SYM_DOM,SKID.DEKL_NAZ,SKID.DEKL_NAZ);
         VAT_DEK.NR:={? SKID.DEKL_NAZ<>'' & VAT_VER.find_le(_d) || VAT_VER.ref() || null ?};
         VAT_DEK.WER:=_wer;
         _red:='JPK_GV';
         {? (_dalej:=exec('exists','#window',VAT_DEK,_red))
         || VAT_DEK.win_edit(_red)
         || echo('Brak okna redagowania %1 tabeli VAT_DEK.'@[_red]);
            FUN.info('Nie znaleziono okna deklaracji JPK_GV ('@
                     +$VAT_DEK.NR().NR
                     +').\nWymagane naniesienie aktualizacji.'@);
            echo()
         ?};
         {? _dalej
         || VAT_DEK.DATA:=date();
            VAT_DEK.OPIS:={? _ok=3 || 'Korekta danych do JPK_GV' || 'Dane do JPK_GV' ?};
            {? var_pres('FIZ',XINFO)>0
            || exec('czytaj','#stalesys',,XINFO,'FIZ');
               VAT_DEK.POD:=XINFO.FIZ
            ?};
            1
         ?}
      ?}
   ?}
?}


\vat_ver
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: ustala numer wersji deklaracji przy tworzeniu
::----------------------------------------------------------------------------------------------------------------------
1


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Dodaje deklarację i jej pozycje
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
VAT_DEK.prefix();
VAT_DEK.PLIK:=null;
VAT_DEK.STATUS:='N';
{? VAT_DEK.add()
|| {? exec('bevatdek','fks_ved')
   || _ref:=VAT_DEK.ref();
      exec('vat_uzas','fks_ved');
      _ok:=exec('utw_gv','!fks_ved_dvgd');
      VAT_DEK.r_unlock()
   ?}
?};
_ref


\utw_gv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Tworzy deklarację i jej pozycje
::----------------------------------------------------------------------------------------------------------------------
exec('utw_tab','!fks_ved_dvgd');
exec('utw_decl','!fks_ved_dvgd')


\utw_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Tworzy tabelę tymczasową z danymi do JPK_GV
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('GV');
_sql1:='select '
         'KH.NIP, KH.NIP_UE, KH.NAZ_P, KH.FIZ_NAZW, KH.FIZ_IM, KH.FIZYCZNY, KH.REFERENCE as KHREF, DOK.NR, DOK.RT, '
         'DOK.DTO, DOK.DOP, DOK.NK, DOK.REFERENCE as DOKREF, KH.FIZYCZNY, DOK.ODD as ODDREF, '
         'DOK.REJ as REJREF '
       'from '
         '@DOK '
         'join @DOK_REJ using(DOK_REJ.REFERENCE,DOK.DOK_REJ) '
         'join @REJ using (DOK.REJ, REJ.REFERENCE) '
         'join @ROK_F using (REJ.ROK, ROK_F.REFERENCE) '
         'left join @SLO using (SLO.REFERENCE, DOK.WYS) '
         'left join @KH using(KH.KOD,SLO.KOD) '
       'where '
         'KH.P=2 and DOK.RT=\'D\' and DOK_REJ.WEW=\'S\' and ROK_F.FIRMA=:_a and DOK.ZP=\'T\''
         ' and DOK.DOP>=to_date(:_b) and DOK.DOP<=to_date(:_c) '
       'order by DOP asc';
GV:=sql(_sql1,REF.FIRMA,SIK.OKRROK2().POCZ,SIK.OKRROK2().KON)


\utw_decl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Tworzy pozycje deklaracji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('J_GV_POZ')>0 & var_pres('GV')>0
|| _maska:=exec('maska_poz','!fks_ved_dvgd',VAT_DEK.ROK().KOD);
   J_GV_POZ.cntx_psh();
   J_GV_POZ.use(_maska); J_GV_POZ.prefix();
   GV.prefix();
   _vdref:=VAT_DEK.ref();
   _ildok:=GV.size();
   _sumjpk:=_lpjpk:=0;
   {? GV.first()
   ||   {! |?
            J_GV_POZ.blank;
            _lpjpk+=1;
            _sumdok:=0;
            J_GV_POZ.LPJPK:=_lpjpk;
            J_GV_POZ.VAT_DEK:=_vdref;
            ODD.cntx_psh(); REJ.cntx_psh(); ODD.prefix(); REJ.prefix();
            {? ODD.seek(GV.ODDREF)
            || J_GV_POZ.ODD:=ODD.ref()
            ?};
            {? REJ.seek(GV.REJREF)
            || J_GV_POZ.REJ:=REJ.ref()
            ?};
            ODD.cntx_pop(); REJ.cntx_pop();
            J_GV_POZ.FIRMA:=REF.FIRMA;
            J_GV_POZ.FIZYCZNY:=GV.FIZYCZNY;
            J_GV_POZ.NRKH:={? GV.NIP<>'' || GV.NIP |? GV.NIP_UE<>'' || GV.NIP_UE ?};
            J_GV_POZ.NAZWAKH:={? J_GV_POZ.FIZYCZNY=1 || GV.FIZ_IM + ' ' + GV.FIZ_NAZW || GV.NAZ_P ?};
            J_GV_POZ.DOKSYM:=GV.NK;
            J_GV_POZ.DWYS:=GV.DTO;
            J_GV_POZ.DSPRZ:=GV.DOP;
            _faks:=exec('czy_faks','!fks_ved_dvgd',GV.DOKREF);
            {? _faks=null
            || DOK.cntx_psh(); POZF.cntx_psh(); DOK.prefix(); POZF.prefix();
               {? DOK.seek(BIT.sqlint(GV.DOKREF),ref_name(GV.DOKREF))
               || POZF.use('pozf'+(ref_name(GV.DOKREF)+4));
                  POZF.index('DOK'); POZF.prefix(DOK.ref());
                  {? POZF.first()
                  || {! |?
                        {? exec('czy_pozf_kor','dok_fks1')
                        || _sumdok-=POZF.WN
                        || _sumdok+=POZF.WN
                        ?};
                        POZF.next()
                     !}
                  ?};
                  J_GV_POZ.DOKSUM:=_sumdok;
                  J_GV_POZ.DOKUID:=DOK.uidref();

                  {? POZF.first()
                  || {! |?
                        J_GV_POZ.LPPOZ:=POZF.LP;
                        J_GV_POZ.NAZ:=POZF.NAZ;
                        J_GV_POZ.IDPOZF:=POZF.uidref();
                        J_GV_POZ.TU:=POZF.TU;
                        J_GV_POZ.IL:=POZF.IL;
                        J_GV_POZ.JM:=POZF.JM().KOD;
                        {? ~exec('czy_pozf_kor','dok_fks1')
                        || J_GV_POZ.C:=POZF.C;
                           J_GV_POZ.NAL:=POZF.WN;
                           _sumjpk+=POZF.WN
                        || J_GV_POZ.C:=-POZF.C;
                           J_GV_POZ.NAL:=-POZF.WN;
                           _sumjpk-=POZF.WN
                        ?};
                        J_GV_POZ.SHA:=exec('sha1','#to_sha1','POZF');
                        J_GV_POZ.add();
                        POZF.next()
                     !}
                  ?}
               ?};
               DOK.cntx_pop(); POZF.cntx_pop()
            || FAKS.cntx_psh(); FAKS.prefix();
               FAP.cntx_psh(); FAP.index('FAP');
               DOK.cntx_psh(); DOK.prefix();
               {? DOK.seek(GV.DOKREF, ref_name(GV.DOKREF))
               || J_GV_POZ.DOKUID:=DOK.uidref()
               ?};
               {? FAKS.seek(_faks,ref_name(_faks))
               || FAP.prefix(FAKS.ref());
                  J_GV_POZ.DOKSUM:=FAKS.NETTO;
                  {? FAP.first()
                  || {? FAKS.T().KOR='N'
                     || {! |?
                           J_GV_POZ.LPPOZ:=FAP.POZ;
                           J_GV_POZ.NAZ:=FAP.NX;
                           J_GV_POZ.IDPOZF:=FAP.uidref();
                           J_GV_POZ.TU:=FAP.M().RODZ;
                           J_GV_POZ.IL:=FAP.IL;
                           J_GV_POZ.JM:=FAP.JM().KOD;
                           J_GV_POZ.C:=FAP.CN;
                           J_GV_POZ.NAL:=FAP.WWAL_P;
                           _sumjpk+=FAP.WWAL_P;
                           J_GV_POZ.SHA:=exec('sha1','#to_sha1','FAP');
                           J_GV_POZ.add();
                           FAP.next()
                        !}
                     || _ilefap:=FAP.size();
                        {! |?
                           exec('wysw_kor','faktury_poz');
                           J_GV_POZ.LPPOZ:=FAP.POZ;
                           J_GV_POZ.NAZ:=FAP.NX;
                           J_GV_POZ.IDPOZF:=FAP.uidref();
                           J_GV_POZ.TU:=FAP.M().RODZ;
                           {? FKOR.IL
                           || J_GV_POZ.IL:=FKOR.IL
                           || J_GV_POZ.IL:=FKOR.BIL
                           ?};
                           J_GV_POZ.JM:=FAP.JM().KOD;
                           {? FKOR.IL
                           || J_GV_POZ.C:=-FKOR.CN
                           || J_GV_POZ.C:=FKOR.BCN
                           ?};
                           J_GV_POZ.NAL:=J_GV_POZ.C*J_GV_POZ.IL;
                           _sumjpk+=J_GV_POZ.NAL;
                           J_GV_POZ.SHA:=exec('sha1','#to_sha1','FAP');
                           J_GV_POZ.add();
                           {? FKOR.IL
                           || _ilefap+=1;
                              J_GV_POZ.LPPOZ:=_ilefap;
                              J_GV_POZ.IL:=FKOR.BIL;
                              J_GV_POZ.C:=FKOR.BCN;
                              J_GV_POZ.NAL:=J_GV_POZ.C*J_GV_POZ.IL;
                              _sumjpk+=J_GV_POZ.NAL;
                              J_GV_POZ.SHA:=exec('sha1','#to_sha1','FAP');
                              J_GV_POZ.add()
                           ?};
                           FAP.next()
                        !}
                     ?}
                  ?}
               ?};
               FAKS.cntx_pop(); FAP.cntx_pop(); DOK.cntx_pop()
            ?};
            GV.next()
      !};
      J_GV_POZ.index('VAT_DEK'); J_GV_POZ.prefix(REF.FIRMA,_vdref);
      {? J_GV_POZ.first()
      || J_GV_POZ.SUMCTRL:=_sumjpk;
         J_GV_POZ.DOKIL:=_ildok;
         J_GV_POZ.put();
         J_GV_POZ.next()
      ?}
   ?};
   J_GV_POZ.cntx_pop();
   1
|| 0
?}


\maska_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Zwraca odpowiednią maskę zbioru
::   WE: [_a] - kod roku
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<=0 | var_pres('_a')<>type_of('a') || _a:=VAT_DEK.ROK().KOD ?};
_maska:='jgvpoz'+_a;
_maska


\gv_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła akcji Dołącz okienka wertowania deklaracji JPK_GV
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='FKS_VED_DVGD';
_params.AKCJA:='Dołącz';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OKRES',SSTALE.AO);
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\before_modify
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Przed poprawą nagłówka deklaracji JPK_GV
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('can_edit2','fks_ved')
|| 0
|? exec('bevatdek','fks_ved')
|| exec('ust_okn','fks_ved');
   {? VAT_DEK.edit("exec('vat_rec','!fks_ved_dv7d')")
   || VAT_DEK.put();
      exec('vat_uzas','fks_ved')
   ?};
   VAT_DEK.r_unlock()
?}


\gv_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Usuwanie nagłówka deklaracji
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('can_edit2','fks_ved')
|| 0
|? VAT_DEK.r_lock(1,1) & VAT_DEK.get()
|| {? (_=1 | FUN.ask('Usunąć bieżący wiersz?'@))
   || do();
      VAT_POZ.index('VAT_POZ'); VAT_POZ.prefix(VAT_DEK.ref());
      VAT_PS.use('vat_ps'+VAT_DEK.ROK().KOD);
      VAT_PS.index('VAT_PS');
      {? VAT_POZ.first()
      || {!
         |? VAT_PS.prefix(VAT_DEK.ref(),VAT_POZ.ref());
            {? VAT_PS.first() || {! |? VAT_PS.del() !} ?};
            VAT_POZ.del()
         !}
      ?};
      VAT_DEKT.index('VAT_DEK'); VAT_DEKT.prefix(VAT_DEK.ref());
      {? VAT_DEKT.first()
      || {! |? VAT_DEKT.del() !}
      ?};
      jmaska:=exec('maska_poz','!fks_ved_dvgd');
      J_GV_POZ.use(jmaska); J_GV_POZ.index('VAT_DEK'); J_GV_POZ.prefix(REF.FIRMA,VAT_DEK.ref());
      {? J_GV_POZ.first()
      || {! |? J_GV_POZ.del() !}
      ?};
      exec('del_dok_jpk','fks_ved');
      VAT_DEK.del();
      end()
   || VAT_DEK.r_unlock()
   ?}
|| FUN.emsg('Deklarację przegląda inny operator.'@); 0
?}


\czy_faks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła sprawdzająca czy dany dokument jest powiązany z FAKS
::   WE: _a - DOK.ref (STRING)
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh(); FAKS.cntx_psh();
_wyn:=null;
DOK.prefix();
{? DOK.seek(_a,ref_name(_a))
|| {? form(DOK.DOKZRODL)<>'' & (1+DOK.DOKZRODL='D' | 1+DOK.DOKZRODL='K')
   || FAKS.use('faktu'+(3+(1-DOK.DOKZRODL)));
      FAKS.prefix();
      {? FAKS.seek(#(4-DOK.DOKZRODL),FAKS.name) || _wyn:=FAKS.ref() ?}
   ?}
?};
DOK.cntx_pop(); FAKS.cntx_pop();
_wyn

:Sign Version 2.0 jowisz:1045 2023/09/07 12:13:11 b3f8264157266a9923cabb8756a9ec5e444682a993e31780a3aecc5af9cdfb02144b3e8e3c3fed5982fdabfb9141354df33e10b46d3f46458a0af834ff5291346483d52b8ef0b3a4cc74a6607940c0a7b4aab29bcc3608550bc59594dcf1ae5cd319a8501150399f0327faf8b55d0277ebfa52eeabee950759ed8e9437ba1910
