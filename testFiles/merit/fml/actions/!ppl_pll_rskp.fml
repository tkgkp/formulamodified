:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ppl_pll_rskp.fml
:: Utworzony: 30.12.2015
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Obsługa czynności PPL_PLL_RSKP - Rej. składników płacowych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Rejestracja składników płacowych - główna formuła czynności.
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::# access=exec('run_cond_p','pkd')
::
::# kind=WE, symbol=P, type=_P, name=Wskazanie pracownika, required=T, keyref=T
::# kind=WE, symbol=O, type=_O, name=Wskazanie listy płac, required=T, keyref=T
::
exec('dekl','lista_plac');

_par:=params_get();
params_set(_par);

_in:=_par.in;
_ib:=_par.int;
_rv:=_par.out;
_mp:=_par.mp;

_id:='';
_do:=_mp.akcja();
_result:='';

SEEK.P:=_in.P;
SEEK.P();

SEEK.O:=_in.O;
SEEK.O();
exec('dla_listy','stalesys',O.ref());

{? exec('o_p_jest','ppl',_in.O,_in.P)
|| _id:=exec('ref2uid','#table',O_P.ref())
|? FUNKCJE.TESTKRYT(1) & exec('o_p_add','ppl',_in.O,_in.P)
|| _id:=exec('ref2uid','#table',O_P.ref())
?};
{? _id<>''
|| _mp.keyRef(_id,0,0)
?};

{? _id=''
|| _result:=exec('error','!ppl_pll_rskp')

|? _mp.isMicro()
|| {? _do='START'
   || _mp.keyRef(_id);
      _mp.keep()
   |? _do='STOP'
   || _mp.delRef(_id);
      _mp.cancel()
   |? _do<>''
   || _result:='Czynność '+_mp.buf_act.UID+' nie obsługuje akcji '+_do+'.'
   ?}

|| _mp.save(_ib,_rv);
   {? _do='ZAKOŃCZ'
   || _mp.done()
   |? _mp.pathTodo()
   || _value:=exec('select','!ppl_pll_rskp',_in.P,_in.O);
      {? type_of(_value)=type_of(0)
      || {? _value<>0
         || _mp.done()
         || _mp.keep()
         ?}
      || _result:=_value
      ?}
   ?}
?};

{? _result<>''
:  obsługa błędów
|| _mp.error(_result);
   FUN.emsg(_result)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Rejestracja składników płacowych - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().mp.load(exec('kind_in','#b_port'));
_tab:=exec('init_desc_tab','pracownik');
_lt:='';

{? type_of(_in.P)<>type_of(null) | type_of(_in.O)<>type_of(null) |
   _in.P=null | _in.O=null
|| return('Zarejestruj składniki płacowe listy'@@)
?};

OSOBA.cntx_psh();
O.cntx_psh();
P.cntx_psh();
O.prefix();
P.prefix();
{? P.seek(_in.P) & O.seek(_in.O)
|| _tab.ZAW_DANE:='T';
   _tab.NAZWISKO:=P.OSOBA().NAZWISKO;
   _tab.PIERWSZE:=OSOBA.PIERWSZE;
   _tab.PESEL:=OSOBA.PESEL;
   _tab.T:=|P.T;
   _lt:=~O.LT
|| _tab.ZAW_DANE='N'
?};
P.cntx_pop();
O.cntx_pop();
OSOBA.cntx_pop();

{? _tab.ZAW_DANE='T'
|| 'Zarejestruj składniki płacowe listy %1 dla %2 %3 %4 (nr teczki: %5)'@@
      [_lt,_tab.NAZWISKO,_tab.PIERWSZE,_tab.PESEL,_tab.T]
|| 'Zarejestruj składniki płacowe listy'@@
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Zwraca treść komunikatu błędu.
::   WE:
::   WY: treść komunikatu
::----------------------------------------------------------------------------------------------------------------------
'Rejestrowanie składników płacowych niemożliwe.'


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS:
::   WE: _a [_P] - wskazanie pracownika
::       _b [_O] - wskazanie nagłówka listy płac
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('o_p_jest','ppl',_b,_a)
|| SEEK.O_P:=O_P.ref();
   SEEK.O_P();
:  ustal pracownika
   SEEK.P:=O_P.P;
   SEEK.P().OSOBA();
:  ustal nagłówek
   SEEK.O:=O_P.O;
   SEEK.O();
:  przygotuj do naliczania
   exec('wybierz','lista_plac',O.ref(),1)

|| return(exec('error','!ppl_pll_rskp'))
?};

_result:=0;
LS.cntx_psh();
LS.index('PRACNRRU');
LS.prefix(P.ref());
LS.index('PRACLPRU');
LS.prefix(P.ref());
LS.win_sel('WER_P');
LS.hdr_sel(' '+VAR.NAZWALIS);

: czy zakończona?
_result:=LS.select();

LS.cntx_pop();
_result


\ls_wer_p_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po odświeżeniu okienka WER w oknie WER_P tabeli LS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());
_hide:='';
{? ~exec('dom_empty','#table',LS)
|| _akc:=exec('czy_mod','lista_plac',LS.ref())
|| _akc:=exec('czy_mod','lista_plac',P.ref(),O.ref())
?};
{? _akc.status<>1
|| _hide:=':';
   {? ~_akc.dolacz
   || _hide:='D'+_hide+'D'
   ?};
   {? ~_akc.popraw
   || _hide:='P'+_hide
   ?};
   {? ~_akc.usun
   || _hide:='U'+_hide
   ?};
   {? ~_akc.oblicz
   || _hide:='OI'+_hide+'O'
   ?}
?};
LS.actions_grayed('WER',_hide)


\done
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Obsługa akcji "Zakończ". Formuła wykonywana w dwóch środowiskach:
::       - po wywołaniu z listy zadań (okno wertowania tabel LS z doklejonym oknem redagowania tabeli P);
::       - w ramach obszaru roboczego (okno wertowania tabeli LS jako składowa okna grupowego tabeli UD_DEF).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(0,0)=LS
|| sel_exit()

|| params_set(params_get());
   exec('pkd_run','pkd','ZAKOŃCZ')
?}


\ls_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.41]
:: OPIS: Formuła wyzwalaczy przed dołączeniem i poprawieniem.
::  OLD: \ls_badd/listplac.fml
::----------------------------------------------------------------------------------------------------------------------
R.cntx_psh();
LS.LP:=LS.RB().LP;
LS.MOD_KTO:=OPERATOR.USER;
LS.MOD_DATA:=date();
LS.MOD_CZAS:=time();
R.cntx_pop();
1


\ls_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.41]
:: OPIS: Formuła wyzwalacza przed dołączeniem
::  OLD: \ls_badd/listplac.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ls_modb','!ppl_pll_rskp')


\ls_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza po dołączeniu
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};
{? LS.RH
|| exec('por_rh4ls','!ppl_pll_rskp',LS.RH)
|| {? exec('o_p_jest','ppl',LS.O,LS.P)
   || _mod:=0;
      {? O_P.LS='N'
      || O_P.LS:='T';
         _mod+=1
      ?};
      {? O_P.BL='N' & LS.BL<>0
      || O_P.BL:='T';
         _mod+=1
      ?};
      {? _mod<>0
      || O_P.put()
      ?}
   || exec('o_p_add','ppl',LS.O,LS.P,,'T')
   ?}
?};
~~


\ls_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.41]
:: OPIS: Formula wyzwalacza przed poprawieniem
::  OLD: \ls_bput/listplac.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ls_modb','!ppl_pll_rskp')


\ls_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyzwalacz "po popraw" tabeli LS.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: zgodny ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
:: podstawowy warunek dalszego działania
{? ~_a | do_state()<>1 || return() ?};

{? LS.BL<>bfld('BL')
|| {? exec('o_p_jest','ppl',LS.O,LS.P)
   || _mod:=1;
      {? O_P.BL='N' & LS.BL<>0
      || O_P.BL:='T';
         _mod:=1
      |? O_P.BL='T' & LS.BL<>1
      || LS.cntx_psh();
         LS.index('BLNRRU');
         LS.prefix(bfld('O'),bfld('P'),1);
         {? ~LS.first()
         || O_P.BL:='N';
            _mod+=1
         ?};
         LS.cntx_pop()
      ?};
      {? _mod
      || O_P.put()
      ?}
   ?};
   {? LS.BL=0
   || LS.KW:=LS.PK;
      LS.PK:=0
   || LS.PK:=bfld('KW')
   ?};
   LS.put()
?};
{? LS.RH
|| exec('por_rh4ls','!ppl_pll_rskp',LS.RH)
?};
~~


\ls_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Formuła wyzwalacza po usunięciu
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};

_rh:=bfld('RH');
{? _rh
|| exec('por_rh4ls','!ppl_pll_rskp',_rh)
|? exec('o_p_jest','ppl',bfld('O'),bfld('P')) & (O_P.LS='T' | O_P.BL='T')
|| _mod:=0;
   LS.cntx_psh();
   LS.index('LISTPRAC');
   LS.prefix(bfld('O'),bfld('P'));
   {? ~LS.first()
   || O_P.LS:='N';
      _mod+=1
   ?};
   LS.index('BLNRRU');
   LS.prefix(bfld('O'),bfld('P'),1);
   {? ~LS.first()
   || O_P.BL:='N';
      _mod+=1
   ?};
   {? _mod<>0
   || O_P.put()
   ?};
   LS.cntx_pop()
?};
~~


\ls_o_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Wartosc poczatkowa LS.O
::  OLD: \O_BL/listplac.fml
::----------------------------------------------------------------------------------------------------------------------
O.ref()


\ls_rh_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.30]
:: OPIS: Wartosc poczatkowa pola RH w tabeli LS.
::   WE:
::   WY:
::  OLD: \ls_bl_rh/listplac.fml
::----------------------------------------------------------------------------------------------------------------------
{? O.F_ZATR().KOD='Z'
|| RH.ref()
|| null
?}


\ls_rb_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Po redakcji LS.RB
::  OLD: \ls_rb_po_red/listplac.fml
::----------------------------------------------------------------------------------------------------------------------
{? LS.RB=null
|| 1
|| {? {? LS.idadd_value()<>''
      || ~('T#'*LS.RB().RK)
      || 1
      ?} | (LS.RH().KOR='T')
   || LS.LP:=R.LP
   ?}
?}


\ls_bl_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed edycją pola BL w oknach redakcji tabeli LS.
::   WE:
::   WY: 0/1 - pole zablokowane/dostępne
::----------------------------------------------------------------------------------------------------------------------
{? LS.idadd_value()=''
|| ~('T#'*LS.RB().RK)
|| 1
?}


\ls_mod_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Odświeżenie znaczników w nawigatorze, jeśli akcje wykonywane w obszarze roboczym
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
params_set(_par);
{? var_pres('_par')>100 & var_pres('cfg',_par)>100 & var_pres('nav',_par.cfg)>100 &
   var_pres('main',_par.cfg.nav)=type_of('')
|| grp_disp(P,_par.cfg.nav.main,0,1)
?};
~~


\ls_oblicz_info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wyświetla komunikat o zablokowaniu/przywróceniu automatycznego obliczania składników.
::   WE: _a INTEGER - rodzaj komunikatu: 0/1 - zablokowanie/przywrócenie obliczania składników
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_on:=_a;

FUN.info(
   {? _on<>0
   || 'Składniki listy płac będą obliczane automatycznie.'@
   || 'Składniki listy płac nie będą obliczane automatycznie.'@
   ?}
);
~~


\ls_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed dołączeniem składnika do listy.
::   WE:
::   WY: wynik testu dostępności akcji
::  OLD: \ls_u_d_o/listplac.fml
::----------------------------------------------------------------------------------------------------------------------
_akc:=exec('czy_mod','lista_plac',P.ref(),O.ref());
R.win_dict('SLO_LS');

{? _akc.dolacz<>0
|| {? ~exec('o_p_jest','ppl',VAR.O,P.ref())
   || {? ~FUNKCJE.TESTKRYT(1)
      || return(0)
      ?}
   ?};
   R.f_set('RN',,'R.RK not in (\'*\',\'G\')')
|| FUN.info(exec('czy_mod_txt','lista_plac',_akc.status)+'\nDołączenie składnika niemożliwe.')
?};

_akc.dolacz<>0


\ls_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po dołączeniu składnika do listy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
LS.blank();
{? ~LS.edit("exec('ls_ae','!ppl_pll_rskp')")
|| return(0)
?};

:: sprawdź, czy jest jakaś blokada obliczeń
_bl:=exec('jest_bl','lista_plac',LS.O,LS.P);

{? LS.add() & _bl=0
:: dołączono składnik
|| {? LS.BL=0
::    oblicz składniki
   || FUNKCJE.OBLICZ(1);
      FUNKCJE.buff.show_log()

   |? LS.BL<>0
::    poinformuj o zadblokowaniu obliczania
   || exec('ls_oblicz_info','!ppl_pll_rskp',0)
   ?};

   params_exec('ls_mod_a','!ppl_pll_rskp')
?}


\ls_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed poprawieniem składnika listy.
::   WE:
::   WY: wynik testu dostępności akcji
::  OLD: \ls_p/listplac.fml
::----------------------------------------------------------------------------------------------------------------------
_akc:=exec('czy_mod','lista_plac',LS.ref());
R.win_dict('SLO_LS');

{? _akc.popraw<>0
|| R.f_set('RN',,'R.RK not in (\'T\',\'#\',\'*\',\'G\')')
|| FUN.info(exec('czy_mod_txt','lista_plac',_akc.status)+'\nModyfikacja składnika niemożliwa.')
?};

_akc.popraw<>0


\ls_popraw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po poprawieniu składnika listy.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
LS.get();
{? ~LS.edit("exec('ls_ae','!ppl_pll_rskp')")
|| return(0)
?};

:: sprawdź, czy jest jakaś blokada obliczeń
_bl_old:=exec('jest_bl','lista_plac',LS.O,LS.P);

{? LS.put()
:: poprawiono składnik
|| _bl_new:=exec('jest_bl','lista_plac',LS.O,LS.P);

   {? _bl_new=0
::    oblicz składniki
   || FUNKCJE.OBLICZ(1);
      FUNKCJE.buff.show_log()
   ?};

   {? _bl_new<>_bl_old
   || exec('ls_oblicz_info','!ppl_pll_rskp',_bl_new=0)
   ?};

   params_exec('ls_mod_a','!ppl_pll_rskp')
?};
~~


\ls_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed usunięciem składnika do listy.
::   WE:
::   WY: wynik testu dostępności akcji
::  OLD: \ls_u_d_o/listplac.fml
::----------------------------------------------------------------------------------------------------------------------
_akc:=exec('czy_mod','lista_plac',LS.ref());

{? _akc.usun=0
|| FUN.info(exec('czy_mod_txt','lista_plac',_akc.status)+'\nUsunięcie składnika niemożliwe.')
?};

_akc.usun<>0


\ls_usun_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po usunięciu składnika z listy.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('del_ask','#table',LS)
:: zrezygnowano z usunięcia
|| return()
?};

_o_ref:=LS.O;
_p_ref:=LS.P;

_bl_old:=exec('jest_bl','lista_plac',_o_ref,_p_ref);

{? LS.del(,1)
:: udało się usunąć składnik
|| _bl_new:=exec('jest_bl','lista_plac',_o_ref,_p_ref);

   {? _bl_new=0
::    oblicz składniki
   || FUNKCJE.OBLICZ(1);
      FUNKCJE.buff.show_log();
      params_set(params_get())
   ?};

   {? _bl_old<>_bl_new
::    poinformuj o odblokowaniu obliczania
   || exec('ls_oblicz_info','!ppl_pll_rskp',1)
   ?};

   params_exec('ls_mod_a','!ppl_pll_rskp')
?};
~~


\ls_zablokuj_kwote_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed zmianą kwoty składnika listy płac.
::   WE:
::   WY: wynik testu dostępności akcji
::----------------------------------------------------------------------------------------------------------------------
exec('czy_mod','lista_plac',LS.ref()).zablokuj<>0


\ls_zablokuj_kwote_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Zmiana kwoty składnika listy płac.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
LS.cntx_psh();
_wnd:='RED';
LS.win_edit(_wnd);
LS.efld_opt(_wnd,'editable=0',,'RB');
LS.efld_opt(_wnd,'editable=0',,'BL');

:: sprawdź, czy jest jakaś blokada obliczeń
_bl:=exec('jest_bl','lista_plac',LS.O,LS.P);

LS.BL:=1;
{? LS.edit() & LS.put() & _bl=0
:: poinformuj o zadblokowaniu obliczania
|| exec('ls_oblicz_info','!ppl_pll_rskp',0)
?};

LS.efld_opt(_wnd,'editable=1',,'RB');
LS.efld_opt(_wnd,'editable=1',,'BL');
LS.cntx_pop();
LS.get();

params_exec('ls_mod_a','!ppl_pll_rskp')


\ls_wycofaj_blokade_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed wycofaniem zmiany składnika listy płac.
::   WE:
::   WY: wynik testu dostępności akcji
::----------------------------------------------------------------------------------------------------------------------
exec('czy_mod','lista_plac',LS.ref()).wycofaj<>0


\ls_wycofaj_blokade_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wycofanie zmiany składnika listy płac.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
LS.BL:=0;
{? LS.put() & LS.sel_size()=0
|| {? ~exec('jest_bl','lista_plac',LS.O,LS.P)
::    poinformuj o odblokowaniu obliczania
   || exec('ls_oblicz_info','!ppl_pll_rskp',1);

      FUNKCJE.OBLICZ(1);
      FUNKCJE.buff.show_log();

      params_exec('ls_mod_a','!ppl_pll_rskp')
   ?}
?};
~~


\ls_wycofaj_blokade_ga
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Wycofanie zmiany wybranych składników listy płac.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('ls_oblicz_info','!ppl_pll_rskp',1);

FUNKCJE.OBLICZ(1);
FUNKCJE.buff.show_log();

params_exec('ls_mod_a','!ppl_pll_rskp');
~~


\ls_usun_skl_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed usunięciem składników listy.
::   WE:
::   WY: wynik testu dostępności akcji
::----------------------------------------------------------------------------------------------------------------------
_akc:=exec('czy_mod','lista_plac',LS.P,LS.O);

{? _akc.status<>1
|| FUN.info(exec('czy_mod_txt','lista_plac',_akc.status)+'\nUsunięcie składników niemożliwe.')
?};

_akc.usun_skl<>0


\ls_usun_skl_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Po usunięciu składników listy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FUNKCJE.USUNZLIS(0);

params_exec('ls_mod_a','!ppl_pll_rskp')


\ls_oblicz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed obliczeniem składników listy płac.
::   WE:
::   WY: wynik testu dostępności akcji
::  OLD: \ls_u_d_o/listplac.fml
::----------------------------------------------------------------------------------------------------------------------
_akc:=exec('czy_mod','lista_plac',P.ref(),O.ref());

{? _akc.status<>1
|| FUN.info(
      '%1\nObliczenie wynagrodzenia pracownika %2 %3 nie jest możliwe.'@
      [exec('czy_mod_txt','lista_plac',_akc.status),P.OSOBA().NAZWISKO,OSOBA.PIERWSZE]
   )
?};

_akc.oblicz<>0


\ls_oblicz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Obliczenie składników listy.
::  OLD: \OBL_LS/listplac.fml
::----------------------------------------------------------------------------------------------------------------------
exec('dla_listy','stalesys',O.ref());
FUNKCJE.OBLICZ();
FUNKCJE.buff.show_log();

exec('ls_mod_a','!ppl_pll_rskp');

{? PAR_SKID.get(191)='N'
|| RAPLS.raport();
   RAPLS.ustaw(0);
   RAPLS.ustaw()
?}


\ls_przelicz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed przeliczeniem składników listy.
::   WE:
::   WY: wynik testu dostępności akcji
::----------------------------------------------------------------------------------------------------------------------
exec('czy_mod','lista_plac',LS.ref()).przelicz<>0


\ls_przelicz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przeliczenie składników listy.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('dla_listy','stalesys',O.ref());
{? exec('jest_bl','lista_plac',O.ref(),P.ref())
|| FUNKCJE.OBLICZ(-1)
|| FUNKCJE.OBLICZ(1)
?};
FUNKCJE.buff.show_log();

exec('ls_mod_a','!ppl_pll_rskp');

{? PAR_SKID.get(191)='N'
|| RAPLS.raport();
   RAPLS.ustaw(0);
   RAPLS.ustaw()
?}


\ls_zmiany_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyświetla informacje o ostatniej modyfikacji rekordu.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
undefine();
define('user',LS.MOD_KTO().KOD,'Użytkownik:',,10);
define('data',LS.MOD_DATA,'Data zmiany:');
define('czas',LS.MOD_CZAS,'Czas zmiany:');
define('h2',~~,);
def_disp('Modyfikacja');
undefine()


\ls_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2011]
:: OPIS: Rekord po okienka WER tabeli LS
::  OLD: \ls_spr/listplac.fml
::----------------------------------------------------------------------------------------------------------------------
LS.MOD_KTO:=OPERATOR.USER;
LS.MOD_DATA:=date();
LS.MOD_CZAS:=time();

__CHK.record(LS,,'RB')


\ls_podzial_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wyświetla informacje o podziale składnika na konta kosztowe.
::   WE:
::   WY:
::  OLD: \ls_cech/godziny.fml
::----------------------------------------------------------------------------------------------------------------------
anal_rok:=exec('ustaw_rok','dok_fks',date(O.R,O.M,0));

KA.TAB:='DEKRET';
SKID.CASE:='R';
SKID.TAB:='ATRUSE_L';
SKID.TAB2:='ATR_WYRL';

ATRUSE_L.use('kak'+(5+O.LT));
ATR_WYRL.use('kwk'+(5+O.LT));
ATRUSE_L.index('PRRBLS');
ATRUSE_L.prefix(P.ref,LS.RB().RN,~O.LT);

_wer:={? +exec('uprawnieniawrap','pkd','Brak wymaganych uprawnień'@,'ZWS_PAR_KPRR','ZWS_PAR_KPRP') || '' || 'P' ?};
ATRUSE_L.win_sel('WER'+_wer);
ATRUSE_L.hdr_sel(exec('win_title_ext','pracownik'));
ATRUSE_L.select(,1);
ATRUSE_L.hdr_sel();

VAR_DEL.delete('anal_rok');
1


\ls_szukaj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przed wyszukaniem rekordu.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: usuń filtr rubryk naniesiony podczas ewentualnego wcześniejszego dołączania lub poprawiania składnika
R.f_set('RN')


\ls_okno_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przy zamykaniu okna składników listy płac.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
R.win_dict('SLO');
R.f_clear();
:: FUNKCJE.OBLICZ(1);
1


\ls_wyswietl_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Obsługa akcji "Wyświetl" okienek tabeli LS. Prezentuje szczegóły zależnie od wartości BL.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
LS.cntx_psh();
:: dla zablokowanego składnika ustaw okienko z poprzednią kwotą
LS.win_edit({? LS.BL<>0 || 'WBL' || 'RED' ?});
LS.display();
LS.cntx_pop();
~~


\ls_wkz_ba
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Wydruk korekt ZUS
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
rep_exec('ppl_xkor_rap')


\por_rh4ls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła zmieniająca znacznik modyfikacji rekordu rachunku, po zmianie składnika płacowego.
::   WE: _a [REFERENCE] - Wskazanie rachunku.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) & _a<>null() & ref_tab(_a)=RH
|| _rh:=_a
|| return()
?};

{? exec('lic','#b_domain','POR')
|| RH.cntx_psh();
   RH.prefix();
   {? RH.seek(_rh)
   || RH.trig_off('*','*');
      RH.put(,1);
      RH.trig_on('*','*')
   ?};
   RH.cntx_pop()
?};
~~


\ls_storno_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed dołączeniem storno listy płac.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
exec('o_p_storno_dolacz_b','ppl')


\ls_storno_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Dołączenie storno listy płac.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('o_p_storno_dolacz_a','ppl')


\ls_storno_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Przed usunięciem storno listy płac.
::   WE:
::   WY: 0/1 - zasadnicza akcja zablokowana/dostępna
::----------------------------------------------------------------------------------------------------------------------
exec('o_p_storno_usun_b','ppl')


\ls_storno_usun_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Usunięcie storno listy płac.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('o_p_storno_usun_a','ppl')


\ls_widok_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Wyświetlenie składników w oddzielnym oknie.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_wnd:=cur_win(1,1);
_aid:=LS.actions_grayed(_wnd);

LS.cntx_psh();
LS.win_sel('MAX');
LS.actions_grayed('MAX',_aid);
LS.hdr_sel(exec('win_title_ext','pracownik'));
LS.select();
LS.hdr_sel();
LS.cntx_pop();

LS.actions_grayed(_wnd,_aid);
~~


\ls_lista_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Rekord przed w pełnym widoku listy płac - ustawienie dostępnych akcji
::   WE: _a [INTEGER] - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? _a=0 || return() ?};

_hide:='';
{? exec('o_p_jest','ppl',VAR.O,REF.P)
|| {? ~exec('dom_empty','#table',LS)
   || _akc:=exec('czy_mod','lista_plac',LS.ref())
   || _akc:=exec('czy_mod','lista_plac',REF.P,VAR.O)
   ?};
   _hide:=':';
   {? _akc.status<>1
   || {? ~_akc.dolacz
      || _hide:='D'+_hide+'D'
      ?};
      {? ~_akc.popraw
      || _hide:='P'+_hide
      ?};
      {? ~_akc.usun
      || _hide:='U'+_hide
      ?}
   ?};
   {? ~_akc.zablokuj
   || _hide:='B'+_hide
   ?};
   {? ~_akc.wycofaj
   || _hide:='W'+_hide
   ?};
   {? ~_akc.oblicz
   || _hide:='O'+_hide+'O'
   ?};
   {? ~_akc.przelicz
   || _hide:='R'+_hide
   ?};
   {? ~_akc.usun_skl
   || _hide:='I'+_hide
   ?}
|| _hide:='DPUBWORI:DO'
?};

LS.actions_grayed('MAX',_hide);
~~


:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 3a6ce34767f4b9d0583ed9bd784e31430ae2fbf3636843ffd95d5c4516a84dfc02c87eee0d96c77bdd57810f1c682659939d05efdf4363944a7e2ef6c8eed448918df9ae6cd6fadfd59bfb21f08581d83261e883e05f1a88631a2c66fce331b46dc30c8e8d9b8baf2a57fea0dc96852bb598be91c5cd9417fd9fe59545140a50
