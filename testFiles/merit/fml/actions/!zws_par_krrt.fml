:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_krrt.fml
:: Utworzony: 13.09.2015
:: Autor: PJ
::======================================================================================================================
:: Zawartość: Formuły czynności ZWS_PAR_KRRT - pobieranie kursów walut z NBP, czynność serwisowa
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Pobieranie kursów walut - główna formuła czynności ZWS_PAR_KRRT.
::       Czynność uruchamiana jako usługa (serwis).
::----------------------------------------------------------------------------------------------------------------------
:: PARAMETRY WE:
::# kind=WE, symbol=BANK, type=STRING, name=Kod banku w słowniku banków, required=T
::# kind=WE, symbol=SPEC, type=STRING, name=Nazwa specyfikacji importu kursów, required=T
::# kind=WE, symbol=LOG, type=STRING, name=Zapis komunikatów do logu, required=N,fml_val="exec('set_typ','!zws_par_krrt',_a)"
::# kind=WE, symbol=TABLE, type=STRING, name=Symbol pobieranej tabeli, required=N,fml_val="exec('set_table','!zws_par_krrt',_a)"
:: WŁAŚCIWOŚCI CZYNNOŚCI
::# properties=SERVICE,GRP_FIRM
exec('czytaj','#stalesys',,HINFO);
exec('czytaj','#stalesys',,FINFO);
exec('czytaj','#stalesys',,XINFO);

_par:=params_get();
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

_log:='0';
_table:='A';

{? ~(var_pres('BANK',_in)=type_of('') & _in.BANK<>'') || return() ?};
{? ~(var_pres('SPEC',_in)=type_of('') & _in.SPEC<>'') || return() ?};
{? var_pres('LOG',_in)=type_of('') & _in.LOG<>'' || _log:=_in.LOG ?};
{? var_pres('TABLE',_in)=type_of('') & _in.TABLE<>'' || _table:=_in.TABLE ?};

{? _mp.isService()
|| {? exec('check_bank_nbp','!zws_par_krrt',_in.BANK)=1
   || _ok:=params_exec('nbp_tkrs2','!zws_par_krrt',#_log,1,_table,_in.BANK)
   || _ok:=params_exec('nbp_tkrs','!zws_par_krrt',_in.BANK,_in.SPEC)
   ?};
   {? _ok
   || _mp.done()
   || _mp.error()
   ?}
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Opis dla czynności pobierania kursów walut (TTE_TEC_KTKW)
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_desc:='Pobierz kursy walut z Narodowego Banku Polskiego.'@@;
_desc


\nbp_tkrs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [12.30]
:: OPIS: Formula pobiera tabele kursowa NBP, wykorzystywana przez czynność serwisową ZWS_PAR_KRRT
::   WE: _a - [STRING] kod banku NBP ze SLO (BANKI)
::       _b - [STRING] nazwa specyfikacji pliku importu dla ALERT'a (czynności serwisowej)
::       [_c] - 1 - zapis do logu (domyslnie)
::            0 - bez zapisu do logu
::   WY: ~~
::  OLD: \nbp_tkrs/pm.fml
SLO.cntx_psh();
SLU.cntx_psh(); SLUAPPL.cntx_psh(); POMOC.cntx_psh(); HBP.cntx_psh(); HBPKI.cntx_psh(); TKRS.cntx_psh(); HBKN.cntx_psh();
:: wlaczenie/wylaczenie loga:
{? _>=3 || __NBPlog:=_c || __NBPlog:=1 ?};
exec('add_nbp_log','!zws_par_krrt','START przetwarzania');

:: deklaracja klasy URL oraz obiektu myURL (w przypadku cgi opartego na aplikacji download.jar)
{? var_pres('myURL')<=0
|| exec('url_decl','!zws_par_krrt');
   myURL:=obj_new(@.CLASS.URL)
?};
_ok:=1;
:: waluta
{? FINFO.NAROD<>null()
|| POMOC.WAL_TKRS:=FINFO.NAROD
|| _ok:=0;
   exec('add_nbp_log','!zws_par_krrt','Nie ustalona waluta narodowa.')
?};
:: bank - kod ze SLO
{? _ok
|| {? FINFO.SLBANK<>null()
   || SLO.index('SL');
      SLO.prefix(FINFO.SLBANK().SLU, _a);
      {? SLO.first()
      || POMOC.BANK:=SLO.ref()
      || exec('add_nbp_log','!zws_par_krrt','Brak banku o kodzie '+_a)
      ?}
   || _ok:=0;
      exec('add_nbp_log','!zws_par_krrt','Nie ustalono słownika banków.')
   ?}
?};
:: numer banku z tabeli B
{? _ok
|| B.index('BANKOD');
   B.prefix(SLO.KOD,);
   {? B.first()
   || _nr_bank:=B.NUMER
   || _ok:=0;
      exec('add_nbp_log','!zws_par_krrt','Brak banku o kodzie '+_a+' w tabeli B')
   ?}
?};
:: ustawienie slownika walut
{? _ok
|| {? FINFO.SLWAL<>null()
   || SLO.index('SL');
      SLO.prefix(FINFO.SLWAL().SLU,'PLN');
      {? SLO.first()
      || POMOC.WAL_TKRS:=SLO.ref()
      || exec('add_nbp_log','!zws_par_krrt','Brak waluty o kodzie PLN')
      ?};
      SLO.prefix(FINFO.SLWAL().SLU)
   || _ok:=0;
      exec('add_nbp_log','!zws_par_krrt','Nie ustalono słownika walut')
   ?}
?};
:: czy dokladnie jedna specyfikacja o nazwie _b ?
{? _ok
|| HBPKI.index('HBPKITP');
   HBPKI.prefix(1,'K',_nr_bank,'K',_b);
   HBP.index('HBNAZWA');
   {? HBPKI.first() & HBPKI.size()=1
   || HBP.prefix(HBPKI.ref());
      HBP.first()
   || _ok:=0;
      exec('add_nbp_log','!zws_par_krrt','Dla wskazanego banku brak lub itnieje więcej niż jedna aktywna '
                                        +'specyfikacja pobierania kursów o nazwie: '+_b+' dla banku '+_nr_bank)
   ?}
?};
:: wywolanie formatu pobierania kursow NBP
{? _ok
|| TKRS.index('TKRS_DT'); TKRS.prefix(POMOC.BANK,POMOC.WAL_TKRS);
   {? ~+HBPKI.PD & HBPKI.RODZ='K' & HBP.KP().KD='' & HBP.DL='x'
   || exec('typwyn','hb')
   || exec('add_nbp_log','!zws_par_krrt','Błędna parametryzacja formatu pliku importu')
   ?}
?};
{? ~_ok || exec('add_nbp_log','!zws_par_krrt','Przetwarzanie przerwane') ?};
exec('add_nbp_log','!zws_par_krrt','STOP przetwarzania');
SLO.cntx_pop();
SLU.cntx_pop(); SLUAPPL.cntx_pop(); POMOC.cntx_pop(); HBP.cntx_pop(); HBPKI.cntx_pop(); TKRS.cntx_pop(); HBKN.cntx_pop();
&__NBPlog;
_ok


\nbp_tkrs2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [22.26]
:: OPIS: Formula pobiera tabele kursowe z NBP, wykorzystywana przez czynność serwisową ZWS_PAR_KRRT
::   WE: [_a] - 1 - zapis do logu
::              0 - bez zapisu do logu (domyslnie)
::       [_b] - 1 - wywołanie procesowe (domyślnie)
::              0 - wywołanie ręczne
::       [_c] - Symbol tabeli kursów pobieranej z NBP ('A'(domyślnie), 'B', 'C')
::       [_d] - Kod księgowy banku (przy wywołaniu nieprocesowym, i nie podanym parametrze, pobierany ze SLO)
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh(); SLU.cntx_psh(); SLUAPPL.cntx_psh(); POMOC.cntx_psh();
HBP.cntx_psh(); HBPKI.cntx_psh(); TKRS.cntx_psh(); HBKN.cntx_psh();
:: wlaczenie/wylaczenie loga:
{? var_pres('_a')>=0 || __NBPlog:=_a || __NBPlog:=1 ?};
{? var_pres('_b')>=0 || _proces:=_b || _proces:=1 ?};
{? var_pres('_c')>=0 || _table:=_c || _table:='A' ?};
{? var_pres('_d')>=0 || _kod_bank:=_d || _kod_bank:='' ?};
{? _proces=0 & _kod_bank='' || _kod_bank:=SLO.KOD ?};
_ok:=1;
:: Licznik dodanych tabel kursowych
_count:=0;
_start_date:=date(0,0,0);
_end_date:=date();
_tab:=exec('tmp_tab_import','!zws_par_krrt');
_tab.NAME:='';
exec('add_nbp_log','!zws_par_krrt','START przetwarzania');
:: === Walidacja banku i sprawdzenie czy bank ma numer 10100000 - NBP ===
_result:=exec('check_bank_nbp','!zws_par_krrt',_kod_bank);
{? _result<>1
|| {? _result=0
   || _info:='Bank o kodzie słownika '+_kod_bank+' nie ma przypisanego numeru zgodnego z bankiem NBP'
   |? _result=-1
   || _info:='Brak banku o kodzie słownika: '+_kod_bank
   ?};
   exec('add_nbp_log','!zws_par_krrt',_info);
   {? _proces=0 || FUN.info(_info)?};
   _ok:=0
?};
{? _ok
|| {? FINFO.SLBANK<>null()
   || SLO.index('SL');
      SLO.prefix(FINFO.SLBANK().SLU, _kod_bank);
      {? SLO.first()
      || POMOC.BANK:=SLO.ref()
      || exec('add_nbp_log','!zws_par_krrt','Brak banku o kodzie '+_kod_bank);
         _ok:=0
      ?}
   || _ok:=0;
      exec('add_nbp_log','!zws_par_krrt','Nie ustalono słownika banków.')
   ?}
?};

:: Sprawdzenie waluty narodowej
{? FINFO.NAROD<>null()
|| POMOC.WAL_TKRS:=FINFO.NAROD;
   {? POMOC.WAL_TKRS().KOD<>'PLN'
   ||
      exec('add_nbp_log','!zws_par_krrt','Import kursów z NBP możliwy jest tylko dla aktywnej waluty PLN.');
      {? _proces=0|| FUN.info('Import kursów z NBP możliwy jest tylko dla aktywnej waluty PLN.'@)?};
      _ok:=0
   ?}
|| _ok:=0;
   exec('add_nbp_log','!zws_par_krrt','Nie ustalona waluta narodowa.')
?};
:: Wyświetlenie okna z wyborem sposobu importu kursów walut.
{? _proces=0 & _ok
|| {? _tab.select() || _ok:=1 || _ok:=0 ?};
   {? _tab.NAME+2='B)'
   || _table:='B'
   |? _tab.NAME+2='C)'
   || _table:='C'
   ?};
   {? 34+_tab.NAME='NBP kursy walut (Internet - zakres' & _ok=1
   || _ok:=_tab.edit("
      {? cur_tab().START_D<date(2010,1,1) | cur_tab().START_D>cur_tab().END_D
      || FUN.info('Nieprawidłowy zakres dat.'@); 0 || 1 ?}
      ");
      _start_date:=_tab.START_D;
      _end_date:=_tab.END_D
   ?}
?};
{? 25+_tab.NAME='NBP kursy walut (Internet'
|| _internet:=1
|| _internet:=0
?};
{? _ok
||
   {? _proces=1 | _internet=1
   ||
:: Ustawienie daty i wyświetlenie okna z wyborem zakresu dat do importu kursów w przypadku braku rekordów w tabeli TKRS.
      TKRS.cntx_psh();
      {? _start_date=date(0,0,0) || _start_date:=exec('set_date','!zws_par_krrt',_table) ?};
      {? _start_date=date(0,0,0)
      || {? _internet=1
         || _tab.edit("
            {? cur_tab().START_D<date(2010,1,1) | cur_tab().START_D>cur_tab().END_D
            || FUN.info('Nieprawidłowy zakres dat.'@); 0 || 1 ?}
            ");
            _start_date:=_tab.START_D;
            _end_date:=_tab.END_D
:: Jeśli proces i nie ma żadnego rekordu w TKRS to tabele kursowe pobierane od 01.01 aktualnego roku do daty dzisiejszej
         |? _proces=1
         || _start_date:=date(date()~1,1,1)
         ?}
      ?};
      TKRS.cntx_pop();
:: Główny kod pobierania kursów z NBP.
      {? _start_date<>date(0,0,0)
      ||
         TKRS.cntx_psh();
         TKRS.index('TKRS_DT');
         exec('add_nbp_log','!zws_par_krrt','Początkowa data od której rozpoczęto pobieranie kursów:' + $_start_date);
         {!
         |?
            TKRS.prefix(POMOC.BANK,POMOC.WAL_TKRS,_start_date);
            {? ~TKRS.find_tab(0,'SYM',,'like','%/'+_table+'/%')
            ||
:: Format adresu url: http://api.nbp.pl/api/exchangerates/tables/A/2023-03-09?format=xml
               _data_url:=10+iso_datetime_value(_start_date);
               _url:='http://api.nbp.pl/api/exchangerates/tables/'+_table+'/'+_data_url+'?format=xml';
               VAR_DEL.delete('http_resp');
               VAR_DEL.delete('response_tab');
               http_resp:=exec('inet_get','proxy',_url);
               {? 1+$http_resp.http_get()<>'4'
               ||
                  {? _proces=0 || echo('Liczba pobranych tabel z kursami walut: '@ + $_count) ?};
                  _tmp:=http_resp.get_data();
                  response_tab:=xml_tparse(_tmp);
                  response_tab.find_tab(0,'NAME',,'=','No');
                  TKRS.prefix();
                  TKRS.blank();
                  TKRS.BANK:=POMOC.BANK;
                  TKRS.DT:=_start_date;
                  TKRS.SYM:=response_tab.VAL;
                  {? TKRS.add(1)
                  || _count+=1;
                     _result:=exec('add_krs_import','!zws_par_krrt',_table);
                     {? _result=0 || TKRS.del(); _count-=1 ?}
                  ?}
               ?}
            ?};
            _start_date+=1;
            _start_date<=_end_date
         !};
         TKRS.cntx_pop()
      ?}
   ||
:: ============ POBRANIE KURSÓW WALUT Z PLIKU ===============
      {? exec('cli_functions','#system')=0
      || FUN.emsg(exec('indevice_nacc_msg','#system'));
         _ok:=0
      ?};
      {? _ok
      || _sep:=exec('sep','#file',1);
         _tmpdir:=fmk_tmp_dir(0);
         {? type_of(_tmpdir)<>type_of(~~)
         || _fdir:=_tmpdir.get_path
         || _ok:=0
         ?}
      ?};
      {? _ok
      || _path:=_fdir+_sep+dlg_upload(_fdir,0,'.xml');
         {? _path+1<>_sep
         || {? -(_path+4)<>'.xml'
            || FUN.info('Wskazano inny plik niż *.xml.'@); _ok:=0
            ?}
         ?}
      ?};
      {? _ok
      || plik_xml:=fopen(_path,'ur',0,0,1);
         {? plik_xml.is_open()
         ||
            response_tab:=xml_tparse(plik_xml);
            response_tab.find_tab(0,'NAME',,'=','Table');
            _table:=response_tab.VAL;
            TKRS.blank();
            TKRS.BANK:=POMOC.BANK;
            response_tab.find_tab(0,'NAME',,'=','No');
            TKRS.SYM:=response_tab.VAL;
            response_tab.find_tab(0,'NAME',,'=','EffectiveDate');
            TKRS.DT:=_start_date:=_end_date:=exec('str2date','#convert',response_tab.VAL);
            TKRS.cntx_psh();
            {? TKRS.add(1)
            || _count+=1;
               _result:=exec('add_krs_import','!zws_par_krrt',_table);
               {? _result=0 || TKRS.del(); _count-=1 ?}
            ?};
            TKRS.cntx_pop();
            fclose(plik_xml)
         || FUN.info('Błąd otwarcia pliku!','Import tabel kursów walut')
         ?}
      ?}
   ?};
:: Komunikaty i odpisy do logów po zakończonym imporcie.
   {? _count<>0
   ||
      _odm:=exec('odmiana','hb',_count);
      exec('add_nbp_log','!zws_par_krrt','Zakończono pobieranie kursów walut z serwera NBP. Pobrano '@+$_count+' '+_odm+'.');
      {? _proces=0
      || echo('');
         FUN.info('Zakończono pobieranie kursów walut z serwera NBP. Pobrano '@+$_count+' '+_odm+'.')
      ?}
   || {? _start_date>=_end_date & _start_date<>date(0,0,0)
      || exec('add_nbp_log','!zws_par_krrt','Brak nowych tabel kursowych do zaimportowania.');
         {? _proces=0
         || FUN.info('Brak nowych tabel kursowych do zaimportowania.'@)
         ?}
      ?}
   ?}
?};
VAR_DEL.delete('http_resp');VAR_DEL.delete('plik_xml');
VAR_DEL.delete('response_tab');VAR_DEL.delete('__NBPlog');
SLO.cntx_pop();SLU.cntx_pop(); SLUAPPL.cntx_pop(); POMOC.cntx_pop();
HBP.cntx_pop(); HBPKI.cntx_pop(); TKRS.cntx_pop(); HBKN.cntx_pop();
_ok


\add_nbp_log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [12.30]
:: OPIS: Formula dopisuje jeden wiersz do pliku *.log. Sterowanie przez zmienną globalną __NBPlog.
::   WE: _a - [STRING] tresc jednej linii
::   WY: ~~
::  OLD: \add_nbp_log/pm.fml
::----------------------------------------------------------------------------------------------------------------------
:: Domyslne wartosci argumentow formuly:
{? _>= 1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? var_pres('__NBPlog')>0 & __NBPlog=1
|| _log_name:='nbpkurs'+($(date()~1)+2)+'.log';
   _file:=fopen(_log_name,'ua',1);
   {? _file<>0 || fwrite(_file, 19+tm_form(SYSLOG.tm_stamp())+' : '+_a) ?};
   fclose(_file)
?};
~~


\url_decl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.30]
:: OPIS: Deklaracja klasy URL w wersji przeznaczonej do pracy przez mbasic lub cgi,
::        od wersji INTERM nie korzysta z biblioteki download.jar
::  MOD: [PM]
::  OLD: \url_decl/pm.fml
::----------------------------------------------------------------------------------------------------------------------
:: OPIS:
::
:: Zadeklarowanie
:: klasy             : exec('url_decl','pm');
:: Powolanie obiektu
:: klasy             : myURL:=obj_new(@.CLASS.URL);
::
:: Wykorzystanie     :
::          myURL.ToFile(adres, path) - pobiera plik ze wskazanego
::          adresu i zapisuje w podanej sciezce. Zwraca '' jesli pobieranie sie
::          powiodlo lub komunikat o bledzie.
::          parametry : adres(string) - adres pliku do pobrania
::                      path(string) - sciezka docelowa do zapisania pobranego pliku
::
::          myURL.ToString(adres) - pobiera plik ze wskazanego
::          adresu i zwraca jego zawartosc w formie zmiennej tekstowej.
::          parametry : adres(string) - adres pliku do pobrania.
::          W przypadku bledu zwracany jest komunikat o bledzie.
::          Rozmiar pliku nie moze byc wiekszy niz maksymalny rozmiar zmiennej
::          typu string - obecnie 524 172
::
:: Usuniecie obiektu
:: klasy            : obj_del(myURL);
::====================================================================================================
{? var_pres('URL', @.CLASS) < 0
|| obj_decl('URL',

   obj_fld('Progress',"PUBLIC: czy wyswietlac pasek postepu (tylko dla metody ToString!)?";0),
   obj_fld('OK',"PUBLIC: czy pobieranie pliku zakonczone sukcesem?";0),

   obj_meth('__done',""),

   obj_meth('ToFile',"PUBLIC";"
     {? _=0 || _a:=''
     |? _=1 || _b:='' ?};
     {? 7+_a<>'http://' & 8+_a<>'https://' & _a<>'' || _a:='http://'+_a ?};
     _http:=exec('inet_get','proxy',{? exec('interm','#system') || '' || '@' ?}+_a,_b);
     _http.http_get();
     _wyn:=_http.get_data()
     "),

   obj_meth('ToString',"PUBLIC";"
     {? _= 0 || _a:='' ?};
     {? 7+_a<>'http://' & 8+_a<>'https://' & _a<>'' || _a:='http://'+_a ?};
     _http:=exec('inet_get','proxy',{? exec('interm','#system') || '' || '@' ?}+_a);
     _http.http_get();
     _wyn:=_http.get_data();
     {? 5+_wyn<>'[ERR]' || .OK:=1 || .OK:=0 ?};
     _wyn
     ")
   )
?}


\set_date
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [22.26]
:: OPIS: Funkcja ustawia początkową datę od której mają być pobierane kursy waluty
::   WE: _a - Rodzaj tabeli pobieranej z NBP ( 'A'(domyślnie), 'B', 'C' )
::   WY: DATE ( data zerowa w przypadku błędu )
::----------------------------------------------------------------------------------------------------------------------
_dt_tab:=date(0,0,0);
{? var_pres('_a')<0 || _table:='A' || _table:=_a ?};
_tmp_ndx:=TKRS.ndx_tmp(,1,'BANK',,,'WAL',,,'DT',,1);
TKRS.cntx_psh();TKRS.index(_tmp_ndx);
TKRS.prefix (POMOC.BANK ,POMOC.WAL_TKRS,);
_result:=TKRS.find_tab(0,'SYM',,'like','%/'+_table+'/%');
{? _result || _dt_tab:=TKRS.DT+1 ?};
TKRS.cntx_pop();
TKRS.ndx_drop(_tmp_ndx);
_dt_tab


\tmp_tab_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [22.26]
:: OPIS: Funkcja tworzy tabelę tymczasową i okna służące do wyboru opcji importu kursów walut.
::   WY: Uchwyt do tabeli
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,'NAME','STRING[50]','Sposób importu',
                'START_D','DATE','Data początkowa',
                'END_D','DATE','Data końcowa'
);
_tab.NAME:='NBP kursy walut (Plik)'; _tab.add();
::_tab.NAME:='NBP kursy walut (ALERT)'; _tab.add();
_tab.NAME:='NBP kursy walut (Internet)'; _tab.add();
_tab.NAME:='NBP kursy walut (Internet tabela B)'; _tab.add();
_tab.NAME:='NBP kursy walut (Internet tabela C)'; _tab.add();
_tab.NAME:='NBP kursy walut (Internet - zakres dat)';_tab.add();
_tab.NAME:='NBP kursy walut (Internet - zakres dat tabela B)';_tab.add();
_tab.NAME:='NBP kursy walut (Internet - zakres dat tabela C)';_tab.add();

_win_sel:=_tab.mk_sel('Import kursów walut z NBP.'@,'T',0,,,5,8);
_tab.win_fld(_win_sel,,'NAME');

_formula:="sel_exit()";
_tab.win_act(_win_sel,,'Formuła','Wybierz'@@,,,,"sel_exit()",1,,,,'W');
_wyb_btn:=_tab.win_btn(_win_sel,'text=%1,btn_label_align=center,panel=bottom,align=end'['Wybierz'@],'menu:W');
_tab.btn_opt(_wyb_btn,'tooltip=Wybierz zaznaczoną opcję.'@);
_anu_btn:=_tab.win_btn(_win_sel,'text=%1,btn_label_align=center,panel=bottom,align=end'['Anuluj'@],'key:Esc');
_tab.btn_opt(_anu_btn,'tooltip=Zrezygnuj z wykonywania bieżącej czynności i zamknij okno.'@);
_tab.win_sel(_win_sel);

_win_edit:=_tab.mk_edit('Zakres dat importu kursów walut'@,,);
_tab.win_efld(_win_edit,,'START_D',,,20);
_tab.win_efld(_win_edit,,'END_D',,,20);
_ok_btn:=_tab.win_ebtn(_win_edit,'text=%1,btn_label_align=center,panel=bottom,align=end'['Ok'@],"'key:F2'");
_tab.btn_eopt(_win_edit,_ok_btn,'tooltip=Potwierdź wybór i zamknij okno'@);
_anu_btn:=_tab.win_ebtn(_win_edit,'text=%1,btn_label_align=center,panel=bottom,align=end'['Anuluj'@],"'key:Esc'");
_tab.btn_eopt(_win_edit,_anu_btn,'tooltip=Zrezygnuj z wykonywania bieżącej czynności i zamknij okno.'@);
_tab.win_edit(_win_edit);

_tab


\add_krs_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [22.26]
:: OPIS: Funkcja ustawia pola i dodaje rekordy do tabeli KRS podczas importowania tabel kursowych.
::   WE: _a - Rodzaj tabeli pobieranej z NBP ( 'A'(domyślnie), 'B', 'C' )
::   WY: Liczba dodanych rekordów tabeli KRS
::----------------------------------------------------------------------------------------------------------------------
_count:=0;
{? var_pres('_a')<0 || _table:='A' || _table:=_a ?};
SLU.index('NAZ'); SLU.prefix('WALUTY');
{? SLU.first()
|| SLO.index('SL'); SLO.prefix(SLU.ref())
?};
KRS.use('kursy___');
KRS.index('KRS_KRAJ'); KRS.prefix(TKRS.ref());
{? SLO.first()
|| {!
   |? {? response_tab.find_tab(0,'NAME',,'=','Code','VAL',,'=',SLO.KOD)
      ||
:: Ustawienie nazwy kraju na podstawie symbolu waluty.
         WAL.index('WAL_SYM');WAL.prefix(SLO.KOD);
         KRS.blank();
         _jednostka:=1;
         {? WAL.first()
         || KRS.KRAJ:=WAL.KRAJ;
            {? WAL.J<>1
            || _jednostka:=WAL.J
            ?}
         ?};
         KRS.TKRS:=TKRS.ref();
         KRS.WAL:=SLO.ref();
         response_tab.next();
         {? _table='C'
         || KRS.KP:=_jednostka*(#(response_tab.VAL));
            response_tab.next();
            KRS.SP:=_jednostka*(#(response_tab.VAL))
         || KRS.SR:=_jednostka*(#(response_tab.VAL))
         ?};
         {? KRS.add() || _count+=1 ?}
      ?};
      SLO.next()
   !}
?};
_count


\set_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [22.26]
:: OPIS: Ustawia wartość parametru LOG
::   WE: _a - wartość parametru
::----------------------------------------------------------------------------------------------------------------------
_sel:={? var_press('_a')>0
      || {? _a='1'
         || 1
         || 2
         ?}
      || 1
      ?};
_pyt:=FUN.choice('Odpisuj informacje do logów'@,_sel,'Tak'@,'Nie'@);
{? _pyt=1
|| '1'
|? _pyt=2
|| '0'
|| ~~
?}


\set_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [22.26]
:: OPIS: Ustawia wartość parametru TABLE
::   WE: _a - wartość parametru
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,'NAME','STRING[40]','Nazwa',
                'SYM','STRING[1]','Symbol'
);
_tab.NAME:='Tabela A'; _tab.SYM:='A'; _tab.add();
_tab.NAME:='Tabela B'; _tab.SYM:='B'; _tab.add();
_tab.NAME:='Tabela C'; _tab.SYM:='C'; _tab.add();
_win_sel:=_tab.mk_sel('Import kursów walut z NBP.'@,'T',0,,,5,3);
_tab.win_fld(_win_sel,,'NAME');
_tab.win_act(_win_sel,,'Formuła','Wybierz'@,,,,"sel_exit()",1,,,,'W');
_wyb_btn:=_tab.win_btn(_win_sel,'text=%1,btn_label_align=center,panel=bottom,align=end'['Wybierz'@],'menu:W');
_tab.btn_opt(_wyb_btn,'tooltip=Potwierdź wybór i zamknij okno'@);
_anu_btn:=_tab.win_btn(_win_sel,'text=%1,btn_label_align=center,panel=bottom,align=end'['Anuluj'@],'key:Esc');
_tab.btn_opt(_anu_btn,'tooltip=Zrezygnuj z wykonywania bieżącej czynności i zamknij okno.'@);

_tab.win_sel(_win_sel);
{? _tab.select()
|| _tab.SYM
|| ~~
?}


\check_bank_nbp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: SG [22.26]
:: OPIS: Funkcja sprawdza czy podany na wejściu kod księgowy jest powiązany z bankiem NBP.
::   WE: _a - kod banku (String)
::   WY: 1 - sprawdzenie pomyślne, 0 - bank ma inny numer, -1 nie ma banku o tym kodzie ksiegowym
::----------------------------------------------------------------------------------------------------------------------
B.cntx_psh();
_res:=0;
B.index('BANKOD');B.prefix(_a);
{? B.first()
|| {? B.NUMER='10100000' || _res:=1 ?}
|| _res:=-1
?};
B.cntx_pop();
_res

:Sign Version 2.0 jowisz:1045 2023/10/20 16:40:39 01415a33d1bd27ad45ad762f0bbcb20d458b8ec8758437c907df2a01bfc75a005dc7a6f9fae20a1ce12d847352d9359196312d8225477f9b208da19a6b8d0fac57be5b954c13a985dc61a9714cffdee367d0c68a9a575978e1b15f6cb1c655bbee5b07445feaf5b7630d3e6879ed2b3a9130d14460a493453c0e8ae5e3c39f82
