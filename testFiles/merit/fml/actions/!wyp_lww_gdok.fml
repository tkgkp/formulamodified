:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !wyp_lww_gdok.fml
:: Utworzony: 21.08.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Generacja dokumentów magazynowych dla wyposażenia
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AWI] [17.42]
:: OPIS: Formuła główna czynności generacji dokumentów magazynowych (WYP_LWW_GDOK)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::       context - [obj_new] obiekt służący do przekazywania kontekstu wywołania czynności
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ,LMG
::# properties=LOOP
::# kind=WE, symbol=KARO,     type=_KARO,    name=Wydanie lub zwrot wyposażenia,                   required=N, keyref=T
::# kind=WE, symbol=DATA_OD,  type=DATE,     name=Data od,                                         required=N
::# kind=WE, symbol=DATA_DO,  type=DATE,     name=Data do,                                         required=N
::# kind=WE, symbol=WYDIZWR,  type=STRING,   name=Uwzględniać pozycje wydane i zwrócone w okresie, required=N
::# kind=WE, symbol=ONEDOK,   type=STRING,   name=Jeden dokument dla każdego wydania zwrotu,       required=N
::# kind=WY, symbol=ND,       type=_ND,      name=Dokument magazynowy,                             required=N

_in:=params_get().in;
_int:=params_get().int;
_out:=params_get().out;
_mp:=params_get().mp;

_out.GRPKEY:=_mp.grpkey(_out.GRPKEY,_in.GRPKEY);

_mp.trigRef('ND',,1,,exec('kind_out','#b_port'),'ND',,,1);

_esc:=0;

{? ~_mp.loop() & _out.ND=~~
||
:: inicjalizacja obslugi atrybutow
   exec('infatr','!wyp_lww_gdok',0);
:: obsługa komunikatów
   VAR_DEL.delete('KOMM');
   KOMM:=obj_new(@.CLASS.JCQ);
   KOMM.init(200,,'Generacja dokumentu magazynowego'@,'',,,0);
   {? _in.KARO<>~~ & _in.KARO
   ||
::    generowanie dokumentu magazynowego dla jednego wyposażenia
      KARO.cntx_psh();
      KARO.prefix();
      {? KARO.seek(_in.KARO)
      ||
         _data:=KARO.DATA;
         _ar:=_data~1;
         _am:=_data~2;
         {? ST.ODDZ<>KARO.MG().ODDZ | ST.AR<>_ar | ST.AM<>_am
         ||
            __PARSES.setVal('OddzialLogProd',KARO.MG().ODDZ);
            __PARSES.setVal('Magazyn',KARO.MG);
            _args:=__PARSES.args('OkresRok');
            _args.OBSZAR:='LMG';
            _args.AR:=_ar;
            _args.AM:=_am;
            __PARSES.setVal('OkresRok',_args);
            __PARSES.setEnv('LMG')
         ?};
         ND.cntx_psh();DK.cntx_psh();
         {? ND.name()+2<>($_ar)+2 | DK.name()+2<>($_ar)+2
         || ND.use('nagdo'+ST.ODDZ+(($_ar)+2));
            DK.use('dokma'+ST.ODDZ+(($_ar)+2))
         ?};
         exec('gen_dok','!wyp_lww_gdok',null());
         ND.cntx_pop();DK.cntx_pop()
      ?};
      KARO.cntx_pop()
   ||
::    generowanie dokumentu magazynowego po uprzednim wybraniu wyposażenia
      ZKARO.win_edit('GEN_DOK');
      ZKARO.DATA_OD:={? _in.DATA_OD=~~ || date(0,0,0) || _in.DATA_OD ?};
      ZKARO.DATA_DO:={? _in.DATA_DO=~~ || date(0,0,0) || _in.DATA_DO ?};
      ZKARO.WYDIZWR:={? _in.WYDIZWR=~~ || 'N' || _in.WYDIZWR ?};
      ZKARO.ONEDOK:={? _in.ONEDOK=~~ || 'N' || _in.ONEDOK ?};
      {? ~ZKARO.edit()
      ||
         _esc:=1
      ||
         KARO.cntx_psh();
         KARO.prefix();
         _Nd:=tab_tmp(3
            ,'DATA', 'DATE',        'Data'
            ,'TYP',  'STRING[1]',   'Typ'
            ,'MG',   'STRING[16]',  '$MG.ref()'
            ,'REF',  'STRING[16]',  '$ND.ref()');
         params_set(params_get());
         _Sel:=exec('select','!wyp_lww_gdok');
         _loop:=_Sel.first();
         {? _loop & _Sel.SEL='X'
         ||
            _esc:=1
         ?};
         {!
         |? _loop
         |!
            _nd:=null();
            {? KARO.seek(_Sel.REF)
            ||
               _data:=KARO.DATA;
               _ar:=_data~1;
               _am:=_data~2;
               {? ST.ODDZ<>KARO.MG().ODDZ | ST.AR<>_ar | ST.AM<>_am
               ||
                  __PARSES.setVal('OddzialLogProd',KARO.MG().ODDZ);
                  __PARSES.setVal('Magazyn',KARO.MG);
                  {? var_pres('_args')>100 || obj_del(_args) ?};
                  _args:=__PARSES.args('OkresRok');
                  _args.OBSZAR:='LMG';
                  _args.AR:=_ar;
                  _args.AM:=_am;
                  __PARSES.setVal('OkresRok',_args);
                  __PARSES.setEnv('LMG')
               ?};
               {? _Nd.find_key(_data,KARO.TYP,$KARO.MG)
               ||
                  _nd:=exec('FindAndGet','#table',ND,_Nd.REF,,,null())
               ?};
               ND.cntx_psh();DK.cntx_psh();
               {? ND.name()+2<>($_ar)+2 | DK.name()+2<>($_ar)+2
               || ND.use('nagdo'+ST.ODDZ+(($_ar)+2));
                  DK.use('dokma'+ST.ODDZ+(($_ar)+2))
               ?};
               _nd:=exec('gen_dok','!wyp_lww_gdok',_nd);
               ND.cntx_pop();DK.cntx_pop();
               {? _nd & ZKARO.ONEDOK='N' & ~_Nd.find_key(_data,KARO.TYP,$KARO.MG)
               ||
                  _Nd.DATA:=_data;
                  _Nd.TYP:=KARO.TYP;
                  _Nd.MG:=$KARO.MG;
                  _Nd.REF:=$_nd;
                  _Nd.add()
               ?}
            ?};
            _loop:=_nd & _Sel.next()
         !};
         obj_del(_Nd);
         KARO.cntx_pop()
      ?}
   ?};
:: przepisanie wartości pola DK.UWAGI do ND.O jeśli DK.UWAGI w ramach dokumentu są identyczne
   _Nd:=_mp.grpkeyGetAll();
   _loop:=_Nd.first();
   {!
   |? _loop
   |!
      exec('FindAndGet','#table',ND,_Nd.ITEM,,"
         _put:=0;
         DK.cntx_psh();
         DK.use((DK.name()-3)+(ND.name()+3));
         DK.index('DOKMAG');
         DK.prefix(ND.ref());
         _loop:=DK.first();
         _uwagi:=DK.UWAGI;
         {!
         |? _loop
         |!
            _put:=_uwagi=DK.UWAGI;
            _loop:=_put & DK.next()
         !};
         DK.cntx_pop();
         {? _put
         ||
            ND.O+=_uwagi;
            ND.put()
         ?}
      ");
      _loop:=_Nd.next()
   !};
:: wyświetlenie komunikatów po zakończeniu generowania dokumentów magazynowych
   KOMM.select();
:: porządki
   VAR_DEL.delete('__infat2','__winatr','__aktref','__ndxinfat2')
?};
_nd:=_mp.grpkeyGet();
{? _esc
||
   1

|? _nd=~~
||
:: nie ma dokumentów do wyemitowania
   _mp.done()
||
:: Zapisanie parametru wyjściowego ND, zakończenie czynności
   do();
:: grpkey - ND - del
   {? _mp.grpkeyDel()
   ||
      _nd_ref:=exec('FindAndGet','#table',ND,_nd,,,null());
::    save - out - ND
      _mp.save(exec('kind_out','#b_port'),'ND',_nd_ref);
::    grpkey - ND - get
      {? _mp.grpkeyGet()<>~~
      ||
::       kontynuacja pętli
         _mp.loop_continue()
      ?}
   ?};
   _mp.done();
   end()
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AWI] [17.42]
:: OPIS: Opis dla czynności generacji dokumentów magazynowych (WYP_LWW_GDOK)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_desc:='Wygeneruj dokument magazynowy wydania/zwrotu wyposażenia'@@;
_keyRefs:=_mp.getRefs();
_in:=_mp.load(exec('kind_in','#b_port'));

:: jest rekord kluczowy
{? var_pres('[1]',_keyRefs)
|| _tmp:=exec('FindAndGet','#table',KARO,_keyRefs[1],,"TYP",'');
   _material:=exec('FindAndGet','#table',KARO,_keyRefs[1],,"{? M=null() || MGRP().KOD || M().KTM ?}",'');
   _pracownik:=exec('FindAndGet','#table',KARO,_keyRefs[1],,"P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE",'');
   {? _tmp<>''
   || {? _tmp='W'
      || _desc:='Wygeneruj dokument wydania wyposażenia %1 pracownikowi %2'@@[_material,_pracownik]
      || _desc:='Wygeneruj dokument zwrotu wyposażenia %1 pracownikowi %2'@@[_material,_pracownik]
      ?}
   ?}

:: jest parametr wejściowy KARO
|? var_pres('KARO',_in)
||
   _tmp:=exec('FindAndGet','#table',KARO,_in.KARO,,"TYP",'');
   _material:=exec('FindAndGet','#table',KARO,_in.KARO,,"{? M=null() || MGRP().KOD || M().KTM ?}",'');
   _pracownik:=exec('FindAndGet','#table',KARO,_in.KARO,,"P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE",'');
   {? _tmp<>''
   || {? _tmp='W'
      || _desc:='Wygeneruj dokument wydania wyposażenia %1 pracownikowi %2'@@[_material,_pracownik]
      || _desc:='Wygeneruj dokument zwrotu wyposażenia %1 od pracownika %2'@@[_material,_pracownik]
      ?}
   ?}

?};
_desc


\gen_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [12.10]
:: OPIS: Tworzenie dokumentu magazynowego
::   WE: _a - ND.ref dokumentu do którego dopisać pozycje lub null jeśli dokument magazynowy ma być utworzony
::  OLD: \gen_dok/wypkaro2.fml
::----------------------------------------------------------------------------------------------------------------------
_nag:=_a;

{? exec('czy_z_ok','okresy',1,0)=0
||
   KOMM.add('Okres obrachunkowy jest zamknięty.'@);
   return(null())
?};

{? 'NZ'*KARO.STATUS
||
   {? KARO.TYP='W'
   || KOMM.add('Należy zaakceptować wydanie.'@)
   || KOMM.add('Należy zaakceptować zwrot.'@)
   ?};
   return(null())
?};
{? KARO.GENDK<>''
||
   KOMM.add('Do pozycji został już utworzony dokument magazynowy.'@);
   return(null())
?};
{? KARO.TYP='W' & KARO.KH=null()
||
   _typ_dok:=exec('get','#params',700523,2,null());
   {? _typ_dok=''
   ||
      KOMM.add('Należy najpierw wypełnić parametr %1.'@['700523']);
      return(null())
   |? exec('FindInSet','#table','TYPYDOK','TYP',_typ_dok,_typ_dok,,,,null())=null()
   ||
      KOMM.add('Nie zdefiniowano typu dokumentu %1 określonego w parametrze %2.'@[_typ_dok,'700523']);
      return(null())
   ?}

|? KARO.TYP='W' & KARO.KH<>null()
||
   _typ_dok:=exec('get','#params',700524,2,null());
   {? _typ_dok=''
   ||
      KOMM.add('Należy najpierw wypełnić parametr %1.'@['700524']);
      return(null())
   ?}

|? ((KARO.TYP='Z') | (KARO.TYP='P')) & KARO.KH=null()
||
   _typ_dok:=exec('get','#params',700526,2,null());
   {? _typ_dok=''
   ||
      KOMM.add('Należy najpierw wypełnić parametr %1.'@['700526']);
      return(null())
   |? exec('FindInSet','#table','TYPYDOK','TYP',_typ_dok,_typ_dok,,,,null())=null()
   ||
      KOMM.add('Nie zdefiniowano typu dokumentu %1 określonego w parametrze %2.'@[_typ_dok,'700526']);
      return(null())
   ?}

|? ((KARO.TYP='Z') | (KARO.TYP='P')) & KARO.KH<>null()
||
   _typ_dok:=exec('get','#params',700527,2,null());
   {? _typ_dok=''
   ||
      KOMM.add('Należy najpierw wypełnić parametr %1.'@['700527']);
      return(null())
   ?}
?};

_karo_dk:=null();
{? (KARO.TYP='W') & (KARO.DK=null())
||
:: przypadek nie obsługiwany
   FUN.info('To nie powinno się zdarzyć.'@)

|? KARO.TYP<>'W'
||
:: pobranie danych z dokumentu wydania, aby zwrocic to co bylo na dostawie
   _wydanie:=KARO.KARO;
   KARO.cntx_psh(); KARO.clear();
   DK.cntx_psh();
   {? KARO.seek(_wydanie,)
   ||
      {? KARO.SRDK<>''
      ||
         _karo_dk:=KARO.DK;
         _name:=ref_name(KARO.DK);
         DK.use(_name);
         _prdk:=KARO.DK().PRDK;
         _dkc:=KARO.DK().DK_C
      ||
         FUN.emsg('Należy najpierw wygenerować dokumenty dla wydania, do którego nastąpił obsługiwany zwrot.'@);
         DK.cntx_pop();
         KARO.cntx_pop();
         return(null())
      ?}
   ?};
   DK.cntx_pop();
   KARO.cntx_pop()
||
   _karo_dk:=KARO.DK;
   DK.cntx_psh();
   _name:=ref_name(KARO.DK);
   DK.use(_name);
   _prdk:=KARO.DK().PRDK;
   _dkc:=KARO.DK().DK_C;
   DK.cntx_pop()
?};
:: kontrola stanu
_stan_ok:=1;
{? KARO.TYP='W' & KARO.M<>null() & KARO.MG<>null()
||
   exec('obl_stan','magazyn_stan',KARO.M,1,KARO.MG);
   _stan:=BEER.SD+exec('FindInSet','#table','REZ','FAPR',$KARO.ref(),$KARO.ref(),"REZ.ILR",,,0);
   {? KARO.IL>_stan || _stan_ok:=0 ?}
?};
TYPYDOK.cntx_psh();
ND.cntx_psh();
TYPYDOK.index('TYP');
TYPYDOK.prefix(_typ_dok);
{? ~_stan_ok
||
   FUN.info('Podano ilość większą od aktualnie dostępnej ilości w magazynie %1.'@[KARO.MG().SYM]
      +'\nAktualna ilość dostępna to: %1.'@[form(BEER.SD,,KARO.M().DOKL)+' '+KARO.M().J().KOD])

|? TYPYDOK.first() & _karo_dk<>null()
||
   _zl:=KARO.ZL;
   {? _zl<>null() & TYPYDOK.ZLEC='N' || _zl:=null() ?};
   _opis:={? KARO.KH=null
          || ''
          || 'Wygenerowane z systemu Wyposażenie'
          ?};
   POM.TYPDOK:=TYPYDOK.KOD;
   POM.TAB:='ND';
   {? _nag=null()
   ||
::    tworzenie nagłówka dokumentu magazynowego jeśli nie został przekazany
      ND.index('NAGDOK');
      ND.prefix(ST.AR,ST.AM,ST.MAG,TYPYDOK.ref);
      ND.blank();
      ND.MAG:=KARO.MG;
      ND.AR:=ST.AR;
      ND.AM:=ST.AM;
      ND.TYP:=TYPYDOK.ref;
      ND.NR:=0;
      _wyb_nr:=0;
      {? exec('spr_wol','numery')
      ||
         _wyb_nr:=exec('numer_new','numery')
      ?};
      _time:=exec('spr_dttm','magazyn_inw',KARO.MG,KARO.DATA,1);
      {? (*_time)>(*time(23,59,0)) || _time:=time(0,0,0) ?};
      _nag:=exec('addnag','magdok_nag',KARO.MG,ST.AR,ST.AM,TYPYDOK.ref,'N',,KARO.DATA,,{? KARO.KH<>null || KARO.KH ?},,,
         ,_opis,_zl,,,_wyb_nr,,,_time)

   ?};
:: petla w celu rozpisania zgodnie wg dostaw
:: jezeli powstanie wiecej niz jedna pozycja dokumentu, to musimy rozbic wpisy KARO na tyle, ile powstalo pozycji
   _il:=KARO.IL;
   DK.cntx_psh();
   ND.cntx_psh();
   _msk:=form(8+$_karo_dk);
   DK.use(_msk);
   ND.use('nagdo'+(_msk+3));
   DK.clear();
   {? DK.seek(_karo_dk)
   ||
      _cen:=DK.C;
      _dat:=DK.N().D
   ?};
::   _name:=KARO.DK().name();
::   _prdk:=KARO.DK().PRDK;
::   _dkc:=KARO.DK().DK_C;
   ND.cntx_pop();
   DK.cntx_pop();
   {? KARO.TYP='W' & KARO.DK=null
   ||
::    przypadek nie obsługiwany
      FUN.info('To nie powinno się zdarzyć.'@)

   |? KARO.TYP='W' & KARO.DK<>null()
   ||
      DK.cntx_psh();
      ND.cntx_psh();
      _msk:=form(8+$KARO.DK);
      DK.use(_msk);
      _name:=ref_name(KARO.DK);
      _prdk:=KARO.DK().PRDK;
      _scean:=KARO.DK().SCEAN;
      _dkc:=KARO.DK().DK_C;
      _cen:=KARO.DK().C;
      ND.use(ref_name(DK.N));
      _dat:=KARO.DK().N().D;
      ND.cntx_pop();
      DK.cntx_pop();
      VSTATS.IL:=_il;
      {? KARO.M().J2<>null()
      || _jm2:=$KARO.M().J2;
         VSTATS.WS2:=exec('oblWSP','jm',KARO.M);
         VSTATS.IL2:=0;
         exec('oblJMG','jm',VSTATS,'IL',0)
      || _jm2:=$KARO.M().J;
         VSTATS.WS2:=1;
         VSTATS.IL2:=_il
      ?};
      exec('przyjdod','jm',_jm2,VSTATS.WS2,VSTATS.IL2);
      DK.cntx_psh();
      _dk:=exec('adddk','magdok_poz',_nag,KARO.M,_il,_cen,_dat,,,,,,,,7,#KARO.DK,_name,,,_prdk,,_zl,,,,,_scean);
      exec('FindAndGet','#table',DK,_dk,,
         $(
            'DK.UWAGI:=\''
            +{? KARO.TYP='W' || 'Odebrał(a) ' || 'Zwrócił(a) ' ?}
            +KARO.P().T
            +' '
            +P.OSOBA().NAZWISKO
            +' '
            +OSOBA.PIERWSZE
            +'\'; DK.put()'
         )
      );
      DK.cntx_pop()
   || VSTATS.IL:=KARO.IL;
      {? KARO.M().J2<>null()
      || _jm2:=$KARO.M().J2;
         VSTATS.WS2:=exec('oblWSP','jm',KARO.M);
         VSTATS.IL2:=0;
         exec('oblJMG','jm',VSTATS,'IL',0)
      || _jm2:=$KARO.M().J;
         VSTATS.WS2:=1;
         VSTATS.IL2:=KARO.IL
      ?};
      exec('przyjdod','jm',_jm2,VSTATS.WS2,VSTATS.IL2);
      DK.cntx_psh();
      _dk:=exec('adddk','magdok_poz',_nag,KARO.M,KARO.IL,_cen,_dat,,,,,,,,7,#_karo_dk,_name,,,_prdk,,_zl);
      exec('FindAndGet','#table',DK,_dk,,
         $(
            'DK.UWAGI:=\''
            +{? KARO.TYP='W' || 'Odebrał(a) ' || 'Zwrócił(a) ' ?}
            +KARO.P().T
            +' '
            +P.OSOBA().NAZWISKO
            +' '
            +OSOBA.PIERWSZE
            +'\'; DK.put()'
         )
      );
      DK.cntx_pop();
      _il:=KARO.IL
   ?};
   {? _dk<>null
   ||
::    jezeli to jedyna/pierwsza pozycja dokumentu magazynowego, to tylko modyfikujemy SRDK i STATUS i ilosc na KARO
::    jezeli to kolejna pozycja, to nalezy dodac nowe karo
      _nd:=exec('FindAndGet','#table',DK,_dk,,"DK.N",null());
      _nd_sym:=exec('FindAndGet','#table',ND,_nd,,"ND.SYM",'');
      KOMM.add('Dodano pozycję dokumentu magazynowego %1.'@[_nd_sym]);
      KARO.IL:=_il;
      KARO.STATUS:='D';
      KARO.GENDK:=$_dk;
      KARO.cntx_psh();
      KARO.prefix();
      {? KARO.put() & KARO.TYP='W'
      || exec('update','rezerwacje','KARO',KARO.ref(),KARO.MG,KARO.M,0,KARO.SRDK,,,0);
         exec('aktu_rez','rezerwacje',KARO.M,exec('FindInSet','#table','REZ','RODZ',KARO.M,'W',"REZ.NRK",,,0),KARO.IL)
      ?};
      KARO.cntx_pop();
      DK.cntx_psh();
      DK.use(8+$_dk);
      DK.clear();
      {? DK.seek(_dk)
      ||
         {? _dkc<>null
         ||
            DK.DK_C:=_dkc;
            DK.put()
         ?};
         {? DK.PLUS='N' || exec('update','rezerwacje','DK',DK.ref(),DK.N().MAG,DK.M,DK.IL,DK.SRDK) ?};
         exec('obl_stan','magazyn_stan',DK.M,1,DK.N().MAG)
      ?};
      DK.cntx_pop()
   ||
      KOMM.add('Nieudana próba utworzenia pozycji dokumentu.'@)
   ?};
   ND.cntx_psh();
   ND.clear();
   {? ND.seek(_nag) || exec('dk_sum','magdok_wspolne',ND.ref()) ?};
   ND.cntx_pop()
?};
ND.cntx_pop();
TYPYDOK.cntx_pop();
_nag


\karo_generuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Generuj dokument magazynowy do wybranych wydań, zwrotów wyposażenia
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='WYP_LWW_GDOK';
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\karo_generuj_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Generuj dokument magazynowy do jednego wydania lub zwrotu wyposażenia
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='WYP_LWW_GDOK';
_params.PROC_START:='T';
_params.UIDREF:=KARO.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'KARO',KARO.ref());
exec('mp_run','#b__box',_params)


\infatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [12.10]
:: OPIS: stan wg atrybutow dostaw
::   WE: [_a] - 0(domyslnie) wg SM-a 1-wg M
::       [_b] - tabela magazynow dla opcji _a=1
::  OLD: \infatr/wypkaro.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};

{? var_pres('__infat2')>0 & var_pres('__ndxinfat2')>0 || __infat2.ndx_drop(__ndxinfat2) ?};
{? var_pres('__infat2')>0 & var_pres('__ndxifsql')>0 || __infat2.ndx_drop(__ndxifsql) ?};
VAR_DEL.delete('__infat2','__winatr','__aktref','__ndxinfat2');
__infat2:=tab_tmp(3,'TREE','TREE_REF','galazka'
           ,'LAB','STRING[100]',''
           ,'M_ATR','STRING[16]',''
           ,'WAR01','STRING[25]',''
           ,'WAR02','STRING[25]',''
           ,'WAR03','STRING[25]',''
           ,'WAR04','STRING[25]',''
           ,'WAR05','STRING[25]',''
           ,'WAR06','STRING[25]',''
           ,'WAR07','STRING[25]',''
           ,'WAR08','STRING[25]',''
           ,'WAR09','STRING[25]',''
           ,'WAR10','STRING[25]',''
           ,'S','REAL',''
           ,'SD','REAL',''
           ,'JM','STRING[10]',''
           ,'SQL','STRING[16]','');
__ndxinfat2:=__infat2.ndx_tmp(,,'TREE',,,'LAB',,,'M_ATR',,);
__ndxifsql:=__infat2.ndx_tmp(,,'SQL',,,'TREE',,1,'SD',,1);
_max:=0;
M.cntx_psh();
SM.cntx_psh();

{? ~_a
|| __aktref:=SM.ref();
   _tab:=SM.sel_aget();
   {? ~_tab.size() || _tab.blank(); _tab.REF:=#SM.ref(); _tab.add(1) ?};
   SM.sel_adel()
|| __aktref:=M.ref();
   _tab:=M.sel_aget();
   {? ~_tab.size() || _tab.blank(); _tab.REF:=#M.ref(); _tab.add(1) ?};
   M.sel_adel()
?};

{? _tab.first()
|| {!
   |? {? {? ~_a
         || (SM.clear(); SM.seek(_tab.REF,)) & SM.S>0
         || (M.clear(); M.seek(_tab.REF))
         ?}
      || __infat2.clear();
         __infat2.blank();
         __infat2.TREE:=0;
         _czy:=SM.M().M_ATR<>null;
         __infat2.LAB:=SM.M().KTM+' ['+{? _czy || SM.M().M_ATR().SYM || 'brak atrybutów dostawy' ?}+']';
         __infat2.M_ATR:={? _czy || $ SM.M().M_ATR || 'xxx' ?};
         __infat2.S:=SM.S;
         __infat2.SD:=SM.SD;
         __infat2.JM:=SM.M().J().KOD;
         __infat2.SQL:=$SM.M;
         {? _czy
         || _i:=0;
            {!
            |? _i+=1;
               {? ($('SM.M().M_ATR().SL_'+form(_i,-2,0,'99')))()<>null
               || __infat2[_i+3]:=($('SM.M().M_ATR().SL_'+form(_i,-2,0,'99')+'().NA'))();
                  {? _max<_i || _max:=_i ?};
                  _i<10
               || 0
               ?}
            !}
         ?};
         _refk:={? __infat2.add(1) || __infat2.ref() || null ?};
         _sum_s:=0;
         _sum_sd:=0;
         {? _refk<>null
         ||
            exec('sc_tymczas','magazyn_stan',SM.MAG,SM.M,'T');
            {? __sc.first()
            || {!
               |? {? __sc.S>0
                  ||
                     _dk_c:=exec('FindAndGet','#table',DK_C,__sc.DK_C,,"DK_C.SYM",'');
                     {? type_of(_dk_c)<>type_of('') | _dk_c='' || _dk_c:='brak cechy dostawy' ?};
                     _rdkc:={? __sc.DK_C='' || 'xxx' || __sc.DK_C ?};
                     __infat2.clear();
                     exec('sc_tmp_info','magazyn_stan');
                     {? __infat2.find_key(_refk,_dk_c,_rdkc)
                     || __infat2.S+=__sc.S;
                        __infat2.put(1)
                     || __infat2.blank();
                        __infat2.TREE:=_refk;
                        __infat2.LAB:=_dk_c;
                        __infat2.M_ATR:=_rdkc;
                        __infat2.S:=__sc.S;
                        {! _i..10 |! __infat2[_i+3]:=($('__sc.WAR'+form(_i,-2,0,'99')))() !};
                        __infat2.JM:=SM.M().J().KOD;
                        __infat2.SQL:=$SM.M;
                        __infat2.add(1)
                     ?};
                     _sum_s+=__sc.S
                  ?};
                  __sc.next()
               !}
            ?};
            exec('sc_tymczas','magazyn_stan',SM.MAG,SM.M,'T',,'Z');
            {? __sc.first()
            || {!
               |? {? __sc.S>0
                  ||
                     _dk_c:=exec('FindAndGet','#table','DK_C',__sc.DK_C,,"DK_C.SYM",'');
                     {? type_of(_dk_c)<>type_of('') | _dk_c='' || _dk_c:='brak cechy dostawy' ?};
                     _rdkc:={? __sc.DK_C='' || 'xxx' || __sc.DK_C ?};
                     __infat2.clear();
                     exec('sc_tmp_info','magazyn_stan');
                     {? __infat2.find_key(_refk,_dk_c,_rdkc)
                     ||
                        __infat2.SD+=DISP.SD;
                        __infat2.put(1)
                     ||
                        __infat2.blank();
                        __infat2.TREE:=_refk;
                        __infat2.LAB:=_dk_c;
                        __infat2.M_ATR:=_rdkc;
                        __infat2.SD:=DISP.SD;
                        {! _i..10 |! __infat2[_i+3]:=($('__sc.WAR'+form(_i,-2,0,'99')))() !};
                        __infat2.JM:=SM.M().J().KOD;
                        __infat2.SQL:=$SM.M;
                        __infat2.add(1)
                     ?};
                     _sum_sd+=DISP.SD
                  ?};
                  __sc.next()
               !}
            ?};
            {? __infat2.seek(_refk)
            ||
               __infat2.S:=_sum_s;
               __infat2.SD:=_sum_sd;
               __infat2.put
            ?}
         ?}
      ?};
      _tab.next()
   !}
?};
M.cntx_pop();
SM.cntx_pop();


__atr_s2:=__infat2.mk_sel('Stan wg cech (atrybutów dostaw)'@,'P',,'#infatrsmsel',,,30,0);
__infat2.win_fld(__atr_s2,,'LAB',,,18,,1,'Indeks/Atrybuty'@);
{! _i.._max
|! __infat2.win_fld(__atr_s2,,'WAR'+form(_i,-2,0,'99'),,,7,,1,'')
!};
::__infat2.win_fld(__atr_s2,,'S',,,8,3,1,'Stan');
__infat2.win_fld(__atr_s2,,'SD',,,8,3,1,'Dostępne'@);
__infat2.win_fld(__atr_s2,,'JM',,,3,,1,'jm'@);
__infat2.win_act(__atr_s2,0,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
__infat2.win_act(__atr_s2,0,'Formuła','Zwiń/rozwiń całość'@@,,'Zwijanie/rozwijanie całości'@,
          "exec('zwrw_all','#tree','__infat2','TREE',__winatr)");
__infat2.win_act(__atr_s2,0,'Formuła','Legenda'@@,,,"exec('legenda','color','__infat2#01')");
__infat2.win_act(__atr_s2,0,'Rekord',,,,"{? -menu_txt='dołącz' | -menu_txt='popraw'
                                          || {? __infat2.TREE=0
                                             || __infat2.actions(__atr_s2,'T',,1)
                                             || __infat2.actions(__atr_s2,'',,1)
                                             ?}
                                          ?};
                                          exec('rekprzed','color','__infat2#01')");
__infat2.win_act(__atr_s2,0,'Szukaj');
__infat2.win_act(__atr_s2,0,'Kolejność');

__infat2.win_fml(__atr_s2,,'LAB',,'ICON_BEFORE',"
         {? ~__infat2.TREE & __infat2.M_ATR<>'xxx'
         || 'xwin16.png:42'
         |? ~__infat2.TREE & __infat2.M_ATR='xxx'
         || 'xwin16.png:43'
         |? __infat2.TREE & __infat2.M_ATR<>'xxx'
         || 'xwin16.png:190'
         |? __infat2.TREE & __infat2.M_ATR='xxx'
         || 'xwin16.png:191'
         || ''
         ?}
     ");


__atr_sel:=__infat2.mk_sel('Stan wg cech (atrybutów dostaw)'@,'P',,'#infatrsmsel',,,30,1);
__winatr:=__atr_sel;

__infat2.win_fld(__atr_sel,,'LAB',,,18,,1,'Indeks/Atrybuty'@);
{! _i.._max
|! __infat2.win_fld(__atr_sel,,'WAR'+form(_i,-2,0,'99'),,,7,,1,'')
!};
__infat2.win_fld(__atr_sel,,'S',,,8,3,1,'Stan'@);
__infat2.win_fld(__atr_sel,,'SD',,,8,3,1,'Dostępne'@);
__infat2.win_fld(__atr_sel,,'JM',,,3,,1,'jm'@);
__infat2.win_act(__atr_sel,0,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
__infat2.win_act(__atr_sel,0,'Formuła','Zwiń/rozwiń całość'@@,,'Zwijanie/rozwijanie całości'@,
          "exec('zwrw_all','#tree','__infat2','TREE',__winatr)");
__infat2.win_act(__atr_sel,0,'Formuła','Legenda'@@,,,"exec('legenda','color','__infat2#01')",,,,,,'L');
__infat2.win_act(__atr_sel,0,'Rekord',,,,"{? -menu_txt='dołącz' | -menu_txt='popraw'
                                          || {? __infat2.TREE=0
                                             || __infat2.actions(__atr_sel,'T',,1)
                                             || __infat2.actions(__atr_sel,'',,1)
                                             ?}
                                          ?};
                                          exec('rekprzed','color','__infat2#01')");
__infat2.win_act(__atr_sel,0,'Szukaj');
__infat2.win_act(__atr_sel,0,'Kolejność');

__infat2.tr_fml(__atr_sel,,"{? _a || {? __infat2.TREE=0 || 1 || _a ?} || _a ?}");
__infat2.win_fml(__atr_sel,,'LAB',,'ICON_BEFORE',"
         {? ~__infat2.TREE & __infat2.M_ATR<>'xxx'
         || 'xwin16.png:42'
         |? ~__infat2.TREE & __infat2.M_ATR='xxx'
         || 'xwin16.png:43'
         |? __infat2.TREE & __infat2.M_ATR<>'xxx'
         || 'xwin16.png:190'
         |? __infat2.TREE & __infat2.M_ATR='xxx'
         || 'xwin16.png:191'
         || ''
         ?}
     ");
__infat2.win_sel(__atr_sel);
__infat2.clear();
~~


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.42]
:: OPIS: Wybór wydań i rozliczeń wyposażenia do generowania dokumentów magazynowych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;

_od:=ZKARO.DATA_OD;
_do:=ZKARO.DATA_DO;
_wydizwr:=ZKARO.WYDIZWR;

_Karo:=sql($"
   select
      KARO.KARO KARO,
      KARO.IL IL,
      KARO.REFERENCE REF
   from
      KARO
   where
      KARO.GENDK=''
      and (to_date(:_a) is null or KARO.DATA>=to_date(:_a)) and (to_date(:_b) is null or KARO.DATA<=to_date(:_b))
   order by
      KARO
",_od,_do);
{? _wydizwr='N'
||
:: pominięcie zapisów wydanych i zwróconych w wybranym okresie
   _loop:=_Karo.first();
   {!
   |? _loop
   |!
      _del:=0;
      {? _Karo.KARO=0
      ||
         _il:=_Karo.IL;
         _ilz:=0;
         _Karo.cntx_psh();
         _Karo.prefix(exec('FindAndGet','#table',KARO,_Karo.REF,,"#@.KARO.ref()",0));
         _loop:=_Karo.first();
         {!
         |? _loop
         |!
            _ilz+=_Karo.IL;
            _loop:=_Karo.next()
         !};
         _del:=_il=_ilz;
         _loop:=_del & _Karo.first();
         {!
         |? _loop
         |!
            _loop:=_Karo.del()
         !};
         _Karo.cntx_pop()
      ?};
      _loop:={? _del || _Karo.del() || _Karo.next() ?}
   !}
?};

_Karo1:=sql($"
   select
      MG.ODDZ ODDZ,
      KARO.DATA DATA,
      KARO.DATAZ DATAZ,
      KARO.TYP TYP,
      P.T T,
      OSOBA.NAZWISKO NAZWISKO,
      OSOBA.PIERWSZE PIERWSZE,
      M.KTM KTM,
      M.N N,
      KARO.IL IL,
      KARO.REFERENCE REF,
      'N' SEL
   from
      :_a
      join KARO using(:_a.REF,KARO.REFERENCE)
      join P using (KARO.P,P.REFERENCE)
      join OSOBA using (P.OSOBA,OSOBA.REFERENCE)
      join M using (KARO.M,M.REFERENCE)
      join MG using (KARO.MG,MG.REFERENCE)
   order by
      1,2,3
",_Karo);

_wer:=_Karo1.mk_sel('Wydania i rozliczenia wyposażenia'@,,,'karogendok',,,,,'U');
_Karo1.win_fld(_wer,,'SEL',,,,,,'Wybrano'@,,,2,,"'T'","'N'");
_Karo1.win_fld(_wer,,'DATA',,,10,,,'Data'@);
_Karo1.win_fld(_wer,,'TYP',,,10,,,'Typ'@);
_Karo1.win_fld(_wer,,'DATAZ',,,10,,,'Przewidywany zwrot'@);
_Karo1.win_fld(_wer,,'T',,,10,,,'Nr w aktach'@);
_Karo1.win_fld(_wer,,'NAZWISKO',,,10,,,'Nazwisko'@);
_Karo1.win_fld(_wer,,'PIERWSZE',,,10,,,'Imię'@);
_Karo1.win_fld(_wer,,'KTM',,,10,,,'Wyposażenie indeks'@);
_Karo1.win_fld(_wer,,'N',,,10,,,'Nazwa'@);
_Karo1.win_fld(_wer,,'IL',,,10,,,'Ilość'@);
_text:='Wybierz'@;
_fb:="
   _Karo1:=cur_tab(1,1);
   _Karo1.SEL:={? _Karo1.SEL='T' || 'N' || 'T' ?};
   _Karo1.put()
";
_fbg:="
   sel_nchk();
   1
";
_Karo1.win_act(_wer,,'Formuła',_text,,,_fb,,1,1,_fbg);
_Karo1.win_btn(_wer,'text='+_text+',btn_label_align=center,panel=right,align=begin','menu:W');
_fb:="
   _exit:=1;
   _Karo1:=cur_tab(1,1);
   _Karo1.cntx_psh();
   _loop:=_Karo1.first();
   {!
   |? _loop
   |!
      _exit:=_Karo1.SEL='T';
      _loop:=~_exit & _Karo1.next()
   !};
   _Karo1.cntx_pop();
   {? _exit
   ||
      sel_exit()
   ||
      FUN.info('Nie wybrano pozycji do generowania dokumentów.'@)
   ?};
   0
";
_text:='&Generuj dokument magazynowy'@;
_Karo1.win_act(_wer,,'Formuła',_text,,,_fb,,,1,_fb);
_Karo1.win_btn(_wer,'text='+_text+',btn_label_align=center,panel=bottom,align=end','menu:G');
_text:='&Anuluj'@;
_besc:=_Karo1.win_btn(_wer,'text='+_text+',btn_label_align=center,panel=bottom,align=end','key:Esc');
_Karo1.btn_opt(_besc,'tooltip='+exec('help_act_esc','#window'));
_Karo1.win_sel(_wer);
{? _Karo1.select()
||
   _loop:=_Karo1.first();
   {!
   |? _loop
   |!
      _loop:={? _Karo1.SEL='T' || _Karo1.next() || _Karo1.del() ?}
   !}
||
   _Karo1.erase();
   _Karo1.blank();
   _Karo1.SEL:='X';
   _Karo1.add()
?};

_Karo1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 a9dd8ee7e741ef520cb8d4a14365d45d03bd00d8e4ba6098a4e73a368f74208c3e9986d4b5f8a289ac80e22a3e6c61cb240fe0308a118c9b83937954d8ebe263ce4659fefbdbbf34aa7e77d6df5a5fae5a47c6cbb9072a77be4c8cec31d4cfc6b613fefa9e53fdeb36e95d182ba200e02b42574a23a82b972309a7668809bdde
