:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ctr_hbd_dhar.fml
:: Utworzony: 23.11.2015
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności CTR_HBD_DHAR - Tworzenie harmonogramu budżetu
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Tworzenie harmonogramów budżetowych - główna formuła czynności CTR_HBD_DHAR.
::----------------------------------------------------------------------------------------------------------------------
::# properties=LOOP,GRP_FIRM
::# parses=exec('parses_dok','dok_fks')
:: PARAMETRY WE:
::# kind=WE, symbol=TM_STAMP, type=STRING, name=Znacznik czasowy, required=N
:: PARAMETRY WY:
::# kind=WY, symbol=K_HARM_P, type=_K_HARM_P, name=Wskazanie na zadanie budżetowe, required=T
::# kind=WY, symbol=TM_STAMP, type=STRING, name=Znacznik czasowy, required=N
::# kind=WY, symbol=TYP, type=STRING, name=Typ zadania [UA], required=T
:: WARUNKI BRAMY:
::# condition=Uzupełnienie arkuszy, act_uid=CTR_HBD_DZAA, auto=T, formula=_a.K_HARM_P<>null & _a.K_HARM_P<>~~ & _a.TYP='U'
::# condition=Akceptacja arkuszy, act_uid=CTR_HBD_DZBA, auto=T, formula=_a.K_HARM_P<>null & _a.K_HARM_P<>~~ & _a.TYP='A'
_args:=params_get();
_we:=_args.in;
_wew:=_args.int;
_wy:=_args.out;
_mp:=_args.mp;
_akcja:=_mp.akcja();
{? _we.TM_STAMP<>~~
|| exec('k_harm_p_first','control',_wy,_we.TM_STAMP);
   _wy.TM_STAMP:=_we.TM_STAMP;
   _mp.save(,_wy);
   {? exec('k_harm_p_next','control',_we.TM_STAMP)
   || _mp.loop_continue()
   ?};
   _mp.done()
:: czynność startowa lub Dołącz z obszaru
|? _mp.pathProc() | _akcja='Dołącz'
|| _mp.trigRef('K_HARM');
   isKharm:=0;
   exec('kharm_edit','!ctr_hbd_dhar',1);
   {? K_HARM.f_active() || K_HARM.f_rfresh() ?};
   VAR_DEL.delete('isKharm')
:: popraw z pulpitu
|? _akcja='Popraw'
|| isKharm:=1;
   exec('kharm_edit','!ctr_hbd_dhar',0);
   ~~
:: kopia z pulpitu
|? _akcja='Kopia'
|| _mp.trigRef('K_HARM');
   exec('copyharm1','!ctr_hbd_dhar');
   {? K_HARM.f_active() || K_HARM.f_rfresh() ?};
   ~~
:: uruchom z pulpitu
|? _akcja='Uruchom'
|| {? exec('kharmstat','!ctr_hbd_dhar',1)
   || _wy.TM_STAMP:=tm_stamp();
      exec('k_harm_p_stamp','!ctr_hbd_dhar',_wy.TM_STAMP);
      exec('k_harm_p_first','control',_wy,_wy.TM_STAMP);
      _mp.save(,_wy);
      {? exec('k_harm_p_next','control',_wy.TM_STAMP)
      || _mp.loop_continue()
      ?};
      _mp.done()
   ?}
|? _mp.pathTodo()
|| menu_txt(,'Popraw');
   K_HARM.index('K_WERSJE');
   K_HARM.prefix();
   _ref:=_mp.getRefs();
   {? obj_len(_ref)>0 & K_HARM.seek(_ref[1])
   || isKharm:=1;
      exec('kharm_edit','!ctr_hbd_dhar',0)
   || FUN.info('Nie znaleziono harmonogramu.'@);
      _mp.error('Nie znaleziono harmonogramu.')
   ?};
   ~~
?};
1


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Opis na liście TODO czynności
::----------------------------------------------------------------------------------------------------------------------
_desc:='Utwórz harmonogram'@@;
_mp:=params_get().mp;
_refs:=_mp.getRefs();
{? var_press('_refs')>0 & obj_len(_refs)>0
|| _ref:=_refs[1];
   {? var_press('_ref')>0
   || K_HARM.cntx_psh(); K_HARM.prefix();
      {? K_HARM.seek(_ref)
      || _desc:='Utwórz %1'@@[exec('record','#to_string',K_HARM.ref())]
      ?};
      K_HARM.cntx_pop()
   ?}
?};
_desc


\be_kharm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przed redakcji pol tabeli K_HARM
::  OLD: \be_kharm/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? K_HARM.STATUS='P'
|| _ok:=1;
   {? -menu_txt()='popraw'
   || K_HARM_P.index('K_HARM'); K_HARM_P.prefix(K_HARM.ref());
      {? K_HARM_P.first()
      || {!
         |? _ok:=~exec('is_arkusz','control');
            _ok & K_HARM_P.next()
         !}
      ?}
   ?};
   _ok
?}


\bekhod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przed redakcja K_HARM.OD
::  OLD: \bekhod/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? UNPAR.PRF1 & exec('be_kharm','!ctr_hbd_dhar')
|| UNPAR.PRF1(); 1
?}


\bekhdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przed redakcja K_HARM.DO
::  OLD: \bekhdo/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? UNPAR.PRF2 & exec('be_kharm','!ctr_hbd_dhar')
|| UNPAR.PRF2(); 1
?}


\ba_kharm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja dolacz tabel K_HARM
::  OLD: \ba_kharm/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='CTR_HBD_DHAR';
_params.AKCJA:='Dołącz';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID);
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\bm_kharm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja popraw tabel K_HARM
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='CTR_HBD_DHAR';
_params.AKCJA:='Popraw';
_params.UIDREF:=K_HARM.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID);
exec('mp_run','#b__box',_params)


\kharm_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Edycja harmonogramu budżetowego
::   WE: _a - 1-add 0-popraw
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,XINFO);
SKID_MBN.win_sel('WER');
K_HARM.win_edit('RED');
{? _a
|| menu_txt(,'Dołącz');
   K_HARM.blank(0);
   K_HARM.FIRMA:=REF.S_FIRMA;
   K_HARM.ARKUSZ:=exec('arkusz','control');
   UNPAR.PRF1:=UNPAR.PRF2:=null
|| menu_txt(,'Popraw');
   UNPAR.PRF1:=K_HARM.OD().ROK;
   UNPAR.PRF2:=K_HARM.DO().ROK
?};
_naz:=K_HARM.NAZ;
{!
|? {? K_HARM.STATUS<>'P'
   || K_HARM.btn_eopt('RED','ZAK','state=grayed')
   || K_HARM.btn_eopt('RED','ZAK','state=normal')
   ?};
   {? K_HARM.edit("exec('arkharm','!ctr_hbd_dhar')")
   || _zwrot:={? _a
              || _ref:=exec('add','!ctr_hbd_dhar');
                 {? _ref & isKharm<2
                 || isKharm:=2;
                    menu_txt(,'Popraw');
                    exec('k_harm_p1','!ctr_hbd_dhar');
                    {? K_HARM.get() & K_HARM.STATUS='T'
                    || 0
                    || 1
                    ?}
                 ?}
              || K_HARM.put();
                 exec('desc_update','#b__box',K_HARM.uidref());
                 {? _naz<>K_HARM.NAZ
                 || K_HARM_P.cntx_psh();
                    K_HARM_P.index('K_HARM'); K_HARM_P.prefix(K_HARM.ref());
                    {? K_HARM_P.first()
                    || {!
                       |? exec('desc_update','#b__box',K_HARM_P.uidref());
                          K_HARM_P.next()
                       !}
                    ?};
                    K_HARM_P.cntx_pop()
                 ?};
                 0
              ?};
      {? ~_zwrot
      || exec('m4_kharm_edit','control_marza')
      ?};
      _zwrot
   ?}
!}


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodanie harmonogramu
::   WY: K_HARM.ref
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
{? isKharm=0
|| K_HARM.cntx_psh();
   K_HARM.prefix();
   _ref:={? K_HARM.add() || K_HARM.ref() || null ?};
   K_HARM.cntx_pop();
   {? _ref || _a:=0; isKharm:=1; K_HARM.seek(_ref) ?}
?};
_ref


\arkharm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Rekord po okna WER tabeli K_HARM
::  OLD: \arkharm/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=__CHK.record3(
   K_HARM,'SKID_MBN','Model',
   K_HARM,'K_WERSJE','Wersja',
   K_HARM,'NAZ',,
   UNPAR,'PRF1','Od roku',
   K_HARM,'OD','Od okresu',
   UNPAR,'PRF2','Do roku',
   K_HARM,'DO','Do okresu');
{? _r='' & K_HARM.SKID_MBN().TYP='P' & ~exec('chk_upr_plac','control')
|| FUN.info('Brak uprawnień do tworzenia harmonogramów\nopartych o model kadrowo-płacowy.'@);
   _r:='SKID_MBN'
?};
{? _r=''
|| _od:={? K_HARM.OD().NR=0
        || K_HARM.OD().ROK().POCZ_ROK
        |? OKRO_F.NR=K_HARM.OD().ROK().LOBR+1
        || K_HARM.OD().ROK().KON_ROK
        || OKRO_F.POCZ
        ?};
   _do:={? K_HARM.DO().NR=0
        || K_HARM.DO().ROK().POCZ_ROK
        |? OKRO_F.NR=K_HARM.DO().ROK().LOBR+1
        || K_HARM.DO().ROK().KON_ROK
        || OKRO_F.POCZ
        ?};
   {? _od>_do
   ||
      FUN.info('Błędny zakres okresów.'@);
      _r:='OD'
   ?}
?};
{? _r=''
|| _naz:=K_HARM.NAZ; _ref:=K_HARM.ref();
   K_HARM.cntx_psh(); K_HARM.index('K_WERSJE'); K_HARM.prefix(K_HARM.SKID_MBN,K_HARM.K_WERSJE,K_HARM.NAZ);
   {? K_HARM.first() & K_HARM.NAZ=_naz & (var_press('isKharm')<=0 | isKharm=0 | _ref<>K_HARM.ref())
   || FUN.info('Istnieje harmonogram o podanym modelu, wersji i nazwie.'@);
      _r:='NAZ'
   ?};
   K_HARM.cntx_pop()
?};
{? _r=''
|| SKID_MBP.cntx_psh();
   SKID_MBP.index('LP'); SKID_MBP.prefix(K_HARM.SKID_MBN);
   _size:=SKID_MBP.size();
   SKID_MBP.cntx_pop();
   {? _size>5
   || FUN.info('Model ma więcej niż 5 wymiarów.'@);
      _r:='SKID_MBN'
   ?}
?};
{? _r='' & K_HARM.OD().ROK<>K_HARM.DO().ROK & exec('rok_nstd','control')
|| FUN.info('Zakres zawiera rok niestandardowy i inne lata.'@);
   _r:='PRF1'
?};
{? _r='' & var_press('data')>0
|| _plus:=UNPAR.P4-data;
   _d_akc:=_d_uzu:=date(0,0,0);
   K_HARM_P.cntx_psh();
   K_HARM_P.index('K_HARM');
   K_HARM_P.prefix(old,0);
   {? K_HARM_P.first()
   || {! |?
            {? _r='' & K_HARM_P.ZN_UZU='T'
            || _d_uzu:=exec('dzienRob','kalendarz',K_HARM_P.D_P_UZU+_plus,1,1,0,1);
               {? _d_uzu=date(0,0,0)
               || FUN.info('Nie udało się ustalić planowanej daty uzupełnienia\n'+'ze względu na brak kalendarza.'@);
                  _r:='P4'
               ?}
            ?};
            {? _r='' & K_HARM_P.ZN_AKC='T'
            || _d_akc:=exec('dzienRob','kalendarz',K_HARM_P.D_P_AKC+_plus,1,1,0,1);
               {? _d_akc=date(0,0,0)
               || FUN.info('Nie udało się ustalić planowanej daty akceptacji\n'+'ze względu na brak kalendarza.'@);
                  _r:='P4'
               ?}
            ?};
            _r<>'' & K_HARM_P.next()
      !}
   ?};
   K_HARM_P.cntx_pop()
?};
_r


\k_harm_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Wyswietla pozycje harmonogramu planow
::  OLD: \k_harm_p/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=exec('arkharm','!ctr_hbd_dhar');
{? _r=''
|| menu_txt(,'Popraw');
   exec('add','!ctr_hbd_dhar');
   exec('k_harm_p1','!ctr_hbd_dhar');
   {? K_HARM.get() & K_HARM.STATUS='T'
   || 'key:Esc'
   || ''
   ?}
|| 'edit:'+_r
?}


\k_harm_p1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Wyswietla pozycje harmonogramu planuow
::----------------------------------------------------------------------------------------------------------------------
{? K_HARM.SKID_MBN().TYP='P' & ~exec('chk_upr_plac','control')
|| FUN.info('Brak uprawnień do przeglądania pozycji harmonogramów\nopartych o model kadrowo-płacowy.'@);
   return
?};
exec('ini_win_harm','control','POZ',UNPAR,'P10');
exec('init_kharm_var','control');
K_HARM_P.index('K_HARM'); K_HARM_P.prefix(K_HARM.ref());
K_HARM_P.win_edit('RED');
K_N_VIEW.win_dict('SLO');
_bez:=
{? K_HARM.STATUS='P'
|| 'W'
|? K_HARM.STATUS='G'
|| 'DuR'
|? K_HARM.STATUS='T'
|| 'DuRW'
|| 'DPuRW'
?};
K_HARM_P.dnd_sel('POZ',,'records.K_HARM_P',"exec('k_harm_przesun','!ctr_hbd_dhar',0)");
:: okno z przyciskami
_okn:=K_HARM_P.mk_edit(,,,,,,'wrapped');
_btn:=K_HARM_P.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=top,align=end,display=1'['Uruchom'@],"
   menu_txt(,'Uruchom');
   exec('add','!ctr_hbd_dhar');
   exec('kharmstat_akc','!ctr_hbd_dhar',1);
   {? K_HARM.get() & K_HARM.STATUS='T'
   || 'key:Esc'
   || ''
   ?}
");
_zamknij:=K_HARM_P.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=top,align=end,display=1'['Zamknij okno'@],"'key:Esc'");
K_HARM_P.btn_eopt(_okn,_zamknij,'tooltip='+exec('help_red_esc','#window','H'));
K_HARM_P.btn_eopt(_okn,_btn,'state='+{? DOK.A='T' || 'grayed' || 'normal' ?});
:: Okno grupowe
_grp:=K_HARM_P.grp_make('Pozycje harmonogramu',,'#kharmp3',,,,,'normal');
K_HARM_P.grp_sel(_grp,,'POZ');
K_HARM_P.grp_splt(_grp,,'horizontal','bottom',25);
K_HARM_P.grp_edit(_grp,K_HARM_P,_okn,,,,,,'maximized');
K_HARM_P.win_sel(_grp);
K_HARM_P.select(,,,_bez);
K_HARM_P.dnd_sel('POZ',,'records.K_HARM_P',"")


\k_harm_przesun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [22.26]
:: OPIS: formuła wykonywana w celu przesunięcia rekordów w drzewie jako przypisane pod wybrany rekord,
::       tabela K_HARM_P, okno POZ
::   WE: [_a] - tryb 0(domyślnie)-d&d, 1-akcja
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 0 ?};
{? ~_tryb
|| _dest:=dnd_info('dest_record');
   _sel:=dnd_info('dropped_records')
|| {? var_press('dest_record')=-1
   || dest_record:=_dest:=-1;
      K_HARM_P.cntx_psh();
      _win_acr:=K_HARM_P.mk_sel('Wybierz element docelowy','P',,,,,,1);
      K_HARM_P.win_fld(_win_acr,,'NAZ',,,,,,);
      K_HARM_P.win_act(_win_acr,0,'Formuła','&Wybierz'@@,,'Wybór docelowej pozycji'@,,"sel_exit",1,,,,'W');
      K_HARM_P.win_sel(_win_acr);
      {? K_HARM_P.select() || dest_record:=_dest:=K_HARM_P.ref() ?};
      K_HARM_P.cntx_pop()
   || _dest:=dest_record
   ?};
   {? K_HARM_P.sel_size()<=1 || {? var_press('dest_record')>-1 || &dest_record ?} ?};
   _sel:=tab_tmp(1,'REF','INTEGER','');
   _sel.blank();
   _sel.REF:=#K_HARM_P.ref();
   _sel.add(1)
?};

{? _sel.first()
|| {? _dest=null | (K_HARM_P.seek(_dest) & 'NP'*K_HARM_P.STATUS)
   || {!
      |? {? K_HARM_P.seek(_sel.REF,) & 'NPW'*K_HARM_P.STATUS & _dest<>K_HARM_P.ref()
         || K_HARM_P.K_HARM_P:=_dest;
            K_HARM_P.put()
         ?};
         _sel.next()
      !}
   ?}
?}


\k_harm_main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [22.26]
:: OPIS: formuła wykonywana w celu przesunięcia rekordów w drzewie jako główne, tabela K_HARM_P, okno POZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
K_HARM_P.K_HARM_P:=null;
K_HARM_P.put()


\t_k_harm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Triger dla tabeli K_HARM
::   WE: _a - 1-przed add 0-przed put
::----------------------------------------------------------------------------------------------------------------------
{? _a=1 | _a=0
|| OKRO_F.cntx_psh();
   K_HARM.ROK_OD:=K_HARM.OD().ROK;
   K_HARM.ROK_DO:=K_HARM.DO().ROK;
   OKRO_F.cntx_pop();
   K_HARM.STAT_NAZ:=exec('kharm_stat_naz','!ctr_hbd_dhar');
   K_HARM.ARKUSZOP:={? K_HARM.ARKUSZ='E' || 'Excel' || 'Google' ?};
   1
?}


\kharm_stat_naz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraza nazwę statusu harmonogramu
::----------------------------------------------------------------------------------------------------------------------
{? K_HARM.STATUS='Z' || 'wycofany'
|? K_HARM.STATUS='P' || 'w przygotowaniu'
|? K_HARM.STATUS='T' || 'w toku'
|? K_HARM.STATUS='K' || 'zakończony'
|| ''
?}


\bd_kharm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja usun tabeli K_HARM
::  OLD: \bd_kharm/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? K_HARM.STATUS<>'P'
|| FUN.info('Status harmonogramu %1.\nUsunięcie nie jest możliwe.'@ [K_HARM.STAT_NAZ])
|? FUN.ask('Czy usunąć harmonogram i jego pozycje?'@)
|| K_HARM_P.index('K_HARM'); K_HARM_P.prefix(K_HARM.ref(),0);
   {? K_HARM_P.first()
   || {!
      |? exec('bdkharm2','!ctr_hbd_dhar');
         K_HARM_P.del()
      !}
   ?};
   K_HARM.del()
?}


\bdkharm2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Pomocnicza do usun tabeli K_HARM
::  OLD: \bdkharm2/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_HARM_P.cntx_psh(); K_HARM_P.index('K_HARM'); K_HARM_P.prefix(K_HARM_P.K_HARM,K_HARM_P.ref());
{? K_HARM_P.first()
|| {!
   |? exec('bdkharm2','!ctr_hbd_dhar');
      K_HARM_P.del()
   !}
?};
K_HARM_P.cntx_pop()


\copy_harm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Akcja kopiuj tabeli K_HARM
::  OLD: \copy_harm/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy utworzyć kopię harmonogramu?'@)
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='CTR_HBD_DHAR';
   _params.AKCJA:='Kopia';
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID);
   _params.PROC_START:='T';
   exec('mp_run','#b__box',_params);
   USERS.f_clear()
?}


\copyharm1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Kopiowanie harmonogramu z dialogiem z użytkownikiem
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,XINFO);
K_HARM.cntx_psh();
K_HARM.win_edit('COPY');
old:=K_HARM.ref();
K_HARM_P.cntx_psh(); K_HARM_P.index('K_HARM'); K_HARM_P.prefix(old);
_data:=date(0,0,0);
{? K_HARM_P.first()
|| _data:={? K_HARM_P.D_P_UZU<>date(0,0,0) || K_HARM_P.D_P_UZU || K_HARM_P.D_P_AKC ?};
   {!
   |? {? K_HARM_P.ZN_UZU='T' & _data>K_HARM_P.D_P_UZU || _data:=K_HARM_P.D_P_UZU ?};
      {? K_HARM_P.ZN_AKC='T' & _data>K_HARM_P.D_P_AKC || _data:=K_HARM_P.D_P_AKC ?};
      K_HARM_P.next()
   !}
?};
K_HARM_P.cntx_pop();
UNPAR.P4:=data:=_data;
UNPAR.P4_BV:=UNPAR.P4_BE:=UNPAR.P4_AE:='';
K_HARM.STATUS:='P'; K_HARM.STATUS_K:='A';
K_HARM.ARKUSZ:=exec('arkusz','control');
{? K_HARM.edit("
      _r:=exec('arkharm','!ctr_hbd_dhar');
      {? _r='' || _r:=__CHK.record2(UNPAR,'P4','Data') ?};
      _r
   ")
|| _plus:=UNPAR.P4-_data;
   K_HARM.cntx_psh(); K_HARM.prefix();
   {? K_HARM.add()
   || _new:=K_HARM.ref();
      K_HARM.cntx_pop();
      K_HARM_P.index('K_HARM'); K_HARM_P.prefix(old,0);
      {? K_HARM_P.first()
      || t_KHARMP:=0;
         {!
         |? K_HARM_P.cntx_psh(); K_HARM_P.prefix();
            K_HARM_P.K_HARM:=_new;
            exec('kharmp_stat','control','N');
            K_HARM_P.EXCEL:=null;
            K_HARM_P.GOOGLEID:=K_HARM_P.LINK:='';
            K_HARM_P.DATA_UZU:=K_HARM_P.DATA_AKC:=K_HARM_P.D_R_UZU:=K_HARM_P.D_R_AKC:=date(0,0,0);
            K_HARM_P.UWAGI:='';
            K_HARM_P.ZN_RET:='N';
            K_HARM_P.TM_STAMP:='';
            {? K_HARM_P.ZN_UZU='T' || K_HARM_P.D_P_UZU:=exec('dzienRob','kalendarz',K_HARM_P.D_P_UZU+_plus,1,1,0,1) ?};
            {? K_HARM_P.ZN_AKC='T' || K_HARM_P.D_P_AKC:=exec('dzienRob','kalendarz',K_HARM_P.D_P_AKC+_plus,1,1,0,1) ?};
            {? K_HARM_P.add()
            || _rec:=K_HARM_P.ref()
            || _rec:=null
            ?};
            K_HARM_P.cntx_pop();
            {? _rec
            || K_N_VIEW.cntx_psh();
               K_N_VIEW.index('K_HARM_P'); K_N_VIEW.prefix(K_HARM_P.ref());
               {? K_N_VIEW.first()
               || exec('knv_copy1','control',K_N_VIEW.NAZ,_rec,'P','N')
               ?};
               K_N_VIEW.cntx_pop();
               exec('copyharm2','!ctr_hbd_dhar',_new,_rec,_plus)
            ?};
            K_HARM_P.next()
         !};
         VAR_DEL.delete('t_KHARMP')
      ?};
      exec('m4_kharm_edit','control_marza')
   || K_HARM.cntx_pop()
   ?}
?};
K_HARM.cntx_pop()


\copyharm2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Pomocnicza przy Akcja kopiuj tabeli K_HARM
::   WE: _a - docelowy harmonogram
::       _b - docelowa galaz
::       _c - ile dni dodac do planowanego zakonczenia
::  OLD: \copyharm2/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_HARM_P.cntx_psh();
K_HARM_P.index('K_HARM'); K_HARM_P.prefix(K_HARM_P.K_HARM,K_HARM_P.ref());
{? K_HARM_P.first()
|| {!
   |? K_HARM_P.cntx_psh(); K_HARM_P.prefix();
      K_HARM_P.K_HARM:=_a;
      K_HARM_P.K_HARM_P:=_b;
      exec('kharmp_stat','control','N');
      K_HARM_P.EXCEL:=null;
      K_HARM_P.GOOGLEID:=K_HARM_P.LINK:='';
      K_HARM_P.DATA_UZU:=K_HARM_P.DATA_AKC:=K_HARM_P.D_R_UZU:=K_HARM_P.D_R_AKC:=date(0,0,0);
      K_HARM_P.UWAGI:='';
      K_HARM_P.ZN_RET:='N';
      K_HARM_P.TM_STAMP:='';
      {? K_HARM_P.ZN_UZU='T' || K_HARM_P.D_P_UZU:=exec('dzienRob','kalendarz',K_HARM_P.D_P_UZU+_c,1,1,0,1) ?};
      {? K_HARM_P.ZN_AKC='T' || K_HARM_P.D_P_AKC:=exec('dzienRob','kalendarz',K_HARM_P.D_P_AKC+_c,1,1,0,1) ?};
      {? K_HARM_P.add()
      || _rec:=K_HARM_P.ref()
      || _rec:=null
      ?};
      K_HARM_P.cntx_pop();
      {? _rec
      || K_N_VIEW.cntx_psh();
         K_N_VIEW.index('K_HARM_P'); K_N_VIEW.prefix(K_HARM_P.ref());
         {? K_N_VIEW.first()
         || exec('knv_copy1','control',K_N_VIEW.NAZ,_rec,'P','N')
         ?};
         K_N_VIEW.cntx_pop();
         exec('copyharm2','!ctr_hbd_dhar',_a,_rec,_c)
      ?};
      K_HARM_P.next()
   !}
?};
K_HARM_P.cntx_pop()


\blkharm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Wartosc poczatkowa pola K_HARM_P.K_HARM
::  OLD: \blkharm/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_HARM.ref()


\be_khp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przed redakcja pol tabeli K_HARM_P
::   WE: [_a] - akroniom pola
::  OLD: \be_khp/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_pole:={? _ || _a || cur_afld() ?};
{? _pole='K_N_VIEW' & K_HARM_P.STATUS='N' |
   (_pole='ZN_UZU' | _pole='ZN_AKC' | _pole='KTO_UZU' | _pole='KTO_AKC') & (K_HARM_P.STATUS='N' | K_HARM_P.STATUS='P' | var_pres('CHGUSRU')>0)
|| 1
?}


\aekhpzn1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Po redakcji pol K_HARM_P.ZN?
::  OLD: \aekhpzn1/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_mu:=K_HARM_P.ZN_UZU='T';
_ma:=K_HARM_P.ZN_AKC='T';
{? fld='N'
|| {? cur_afld()='ZN_UZU'
   || K_HARM_P.KTO_UZU:=null;
      K_HARM_P.D_P_UZU:=date(0,0,0)
   || K_HARM_P.KTO_AKC:=null;
      K_HARM_P.D_P_AKC:=date(0,0,0)
   ?}
?};
K_HARM_P.efld_opt('RED','mark='+$_mu,K_HARM_P,'KTO_UZU');
K_HARM_P.efld_opt('RED','mark='+$_mu,K_HARM_P,'D_P_UZU');
K_HARM_P.efld_opt('RED','mark='+$_ma,K_HARM_P,'KTO_AKC');
K_HARM_P.efld_opt('RED','mark='+$_ma,K_HARM_P,'D_P_AKC');
win_disp();
1


\bvkhpdaty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przed wyswietl pol z datami tabeli K_HARM_P
::   WE: _a - akronim
::  OLD: \bvkhpdaty/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || return() ?};
{? _a='UZU'
|| {? K_HARM_P.ZN_UZU='T'
   || {? K_HARM_P.D_R_UZU=date(0,0,0) & K_HARM_P.D_P_UZU<date()
      || Color.rekprzed('K_HARM_P#01#03')
      |? K_HARM_P.DATA_UZU=date(0,0,0)
      || {? K_HARM_P.D_P_UZU<date() || Color.rekprzed('K_HARM_P#01#01') || '' ?}
      || {? K_HARM_P.D_P_UZU<K_HARM_P.DATA_UZU || Color.rekprzed('K_HARM_P#01#02') || '' ?}
      ?}
   || exec('findfnv','#color')
   ?}
|| {? K_HARM_P.ZN_AKC='T'
   || {? K_HARM_P.D_R_AKC=date(0,0,0) & K_HARM_P.D_P_AKC<date()
      || Color.rekprzed('K_HARM_P#01#03')
      |? K_HARM_P.DATA_AKC=date(0,0,0)
      || {? K_HARM_P.D_P_AKC<date() || Color.rekprzed('K_HARM_P#01#01') || '' ?}
      || {? K_HARM_P.D_P_AKC<K_HARM_P.DATA_AKC || Color.rekprzed('K_HARM_P#01#02') || '' ?}
      ?}
   || exec('findfnv','#color')
   ?}
?}


\bvkhpua
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przed wyswietl pol tabeli K_HARM_P
::   WE: _a - nazwa pola
::  OLD: \bvkhpua/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || return() ?};
{? UNPAR.P2
|| {? ~exec('bekhpua','!ctr_hbd_dhar',_a)
   || exec('findfnrd','color')
   || ''
   ?}
|| exec('bvkhpdaty','!ctr_hbd_dhar',_a+3)
?}


\bekhpkto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przed redakcja pol K_HARM_P.KTO?
::   WE: [_a] - akronim pola
::       [_b] - uzyta przed redakcja? [1]-tak 0-nie
::  OLD: \bekhpkto/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=cur_afld() ?};
{? var_press('_b')<=0 || _b:=1 ?};
{? exec('be_khp','!ctr_hbd_dhar',_a)
|| {? _b
   || USERS.win_dict('SLO1');
      USERS.clear();
      USERS.f_set('KOD',,'USERS.REFERENCE in (select REF from :_a) ',{? _a='KTO_UZU' || tmpKtoUzu || tmpKtoAkc ?})
   ?};
   {? _a='KTO_UZU'
   || K_HARM_P.ZN_UZU='T'
   || K_HARM_P.ZN_AKC='T'
   ?}
?}


\bekhpua
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przed redakcji pol tabeli K_HARM_P
::   WE: [_a] - akronim pola
::  OLD: \bekhpua/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=cur_afld() ?};
_typ:=_a+3;
_typ='UZU' & K_HARM_P.ZN_UZU='T' | _typ='AKC' & K_HARM_P.ZN_AKC='T'


\bvkhpkto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przed wyswietl pol K_HARM_P.KTO?
::   WE: _a - akronim pola
::  OLD: \bvkhpkto/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? (UNPAR.P2 | _a='KTO_UZU' & K_HARM_P.ZN_UZU='N' | _a='KTO_AKC' & K_HARM_P.ZN_AKC='N') & ~exec('bekhpkto','!ctr_hbd_dhar',_a,0)
|| exec('findfnrd','color')
|| ''
?}


\tmpKto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przygotowuje tabele używane do filtrowania użytkowników
::----------------------------------------------------------------------------------------------------------------------
{? var_press('tmpKtoUzu')<=0
|| _tab:=obj_new(2);
   _tab[1]:='CTR_HBD_DZAA';
   _tab[2]:='CTR_HBD_DZAP';
   tmpKtoUzu:=exec('usersWithAction','users',_tab,REF.FIRMA);
   &_tab
?};
{? var_press('tmpKtoAkc')<=0
|| _tab:=obj_new(2);
   _tab[1]:='CTR_HBD_DZBA';
   _tab[2]:='CTR_HBD_DZBP';
   tmpKtoAkc:=exec('usersWithAction','users',_tab,REF.FIRMA);
   &_tab
?}


\bm_k_harm_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przed modyfikacja K_HARM_P
::  OLD: \bm_k_harm_p/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
exec('tmpKto','!ctr_hbd_dhar');
UNPAR.P2:=1;
_put:=-menu_txt()='popraw';
KNViewAkc:='T';
KNView:=_put;
{? ~_put
|| K_HARM_P.blank(0);
   khpRoot:=K_HARM_P.ref()
?};
K_HARM_P.win_edit('RED');
{? K_HARM_P.edit("exec('ar_k_harm_p','!ctr_hbd_dhar')")
|| {? _put
   || K_HARM_P.put();
      exec('desc_update','#b__box',K_HARM_P.uidref())
   || {? KNView
      || K_HARM_P.put();
         exec('desc_update','#b__box',K_HARM_P.uidref())
      || KNView:=K_HARM_P.add()
      ?}
   ?}
?};
UNPAR.P2:=0;
USERS.f_clear();
VAR_DEL.delete('KNViewAkc','KNView','khpRoot')


\ar_k_harm_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Rekord po tabeli K_HARM_P
::  OLD: \ar_k_harm_p/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=__CHK.record2(
   K_HARM_P,
   'NAZ','Nazwa',
   'K_N_VIEW','Szablon widoku'
);
{? _r='' & K_HARM_P.K_HARM().SKID_MBN().CZY_SPR='T' & K_HARM_P.K_N_VIEW().UD_SKL=null
|| FUN.info('Harmonogram zawiera informacje ze sprawozdań a\n wybrany szablon nie dotyczy sprawozdań.'@);
   _r:='K_N_VIEW'
?};
{? _r='' & K_HARM_P.ZN_UZU='N' & K_HARM_P.ZN_AKC='N'
|| FUN.info('Nie wybrano uzupełnienia ani akceptacji.'@); _r:='ZN_UZU'
?};
{? _r='' & K_HARM_P.ZN_UZU='T'
|| {? ~K_HARM_P.KTO_UZU
   || FUN.info('Nie wskazano osoby uzupełniającej.'@); _r:='KTO_UZU'
   |? K_HARM_P.D_P_UZU=date(0,0,0)
   || FUN.info('Nie wskazano planowanej daty\nzakończenia uzupełniania planu.'@); _r:='D_P_UZU'
   ?}
?};
{? _r='' & K_HARM_P.ZN_AKC='T'
|| {? ~K_HARM_P.KTO_AKC
   || FUN.info('Nie wskazano osoby akceptującej.'@); _r:='KTO_AKC'
   |? K_HARM_P.D_P_AKC=date(0,0,0)
   || FUN.info('Nie wskazano planowanej daty\nzakończenia akceptacji planu.'@); _r:='D_P_AKC'
   ?}
?};
{? _r='' & K_HARM_P.ZN_UZU='T' & K_HARM_P.ZN_AKC='T' & K_HARM_P.D_P_UZU>K_HARM_P.D_P_AKC
|| FUN.info('Data planowanego zakończenia uzupełniania\npóźniejsza niż akceptacji.'@); _r:='D_P_UZU'
?};
{? _r=''
|| {? UNPAR.P1=1
   || K_HARM_P.K_HARM_P:=null
   |? UNPAR.P1=0 & var_press('khpRoot')>0
   || K_HARM_P.K_HARM_P:=khpRoot
   ?}
?};
_r


\change_user
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Zmiana uzytkownika uzupelniajacego/akceptujacego (przydzial zadania)
::  OLD: \change_user/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? K_HARM_P.STATUS='N' | K_HARM_P.STATUS='P'
|| FUN.info('Zadanie nie jest w toku.\nPrzydział zadań jest niedostępny.'@)
|| exec('tmpKto','!ctr_hbd_dhar');
   CHGUSRU:=K_HARM_P.KTO_UZU;
   CHGUSRA:=K_HARM_P.KTO_AKC;
   K_HARM_H.blank(1);
   UNPAR.P1:=1;
   UNPAR.P1_BV:=UNPAR.P1_BE:=UNPAR.P1_AE:='';
   _edit:=K_HARM_P.win_edit('?');
   K_HARM_P.win_edit('RED_PRZY');
   {? K_HARM_P.edit("exec('ar_change_user','!ctr_hbd_dhar')")
   || K_HARM_H.prefix();
      K_HARM_P.put();
      exec('set_user','#bi_todo',K_HARM_P.uidref(),'CTR_HBD_DZAA',K_HARM_P.KTO_UZU);
      exec('set_user','#bi_todo',K_HARM_P.uidref(),'CTR_HBD_DZBA',K_HARM_P.KTO_AKC);
      {? K_HARM_P.KTO_UZU<>CHGUSRU
      || K_HARM_H.K_HARM_P:=K_HARM_P.ref();
         K_HARM_H.USERS:=CHGUSRU;
         K_HARM_H.DATA:=date();
         K_HARM_H.CZAS:=time();
         K_HARM_H.TYP:='U';
         K_HARM_H.CAN_VIEW:=UNPAR.P1;
         K_HARM_H.add()
      ?};
      {? K_HARM_P.KTO_AKC<>CHGUSRA
      || K_HARM_H.K_HARM_P:=K_HARM_P.ref();
         K_HARM_H.USERS:=CHGUSRA;
         K_HARM_H.DATA:=date();
         K_HARM_H.CZAS:=time();
         K_HARM_H.TYP:='A';
         K_HARM_H.CAN_VIEW:=UNPAR.P1;
         K_HARM_H.add()
      ?}
   ?};
   K_HARM_P.win_edit(_edit);
   VAR_DEL.delete('CHGUSRU','CHGUSRA');
   UNPAR.P16:=UNPAR.P17:='';
   UNPAR.P16_BV:=UNPAR.P17_BV:=''
?}


\ar_change_user
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Po redakcji okna do przydzialu zadan
::  OLD: \ar_change_user/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? K_HARM_P.ZN_UZU='T' & ~K_HARM_P.KTO_UZU
|| FUN.info('Nie wskazano osoby uzupełniającej.'@);
   return('KTO_UZU')
|? K_HARM_P.ZN_AKC='T' & ~K_HARM_P.KTO_AKC
|| FUN.info('Nie wskazano osoby akceptującej.'@);
   return('KTO_AKC')
?};
_ile:=(K_HARM_P.ZN_UZU='T') + (K_HARM_P.ZN_AKC='T');
_spr:=(K_HARM_P.ZN_UZU='T' & K_HARM_P.KTO_UZU=CHGUSRU) +
      (K_HARM_P.ZN_AKC='T' & K_HARM_P.KTO_AKC=CHGUSRA);
{? _ile=_spr
|| FUN.info('Nie zmieniono przydziału zadania.'@);
   {? K_HARM_P.ZN_UZU='T'
   || 'KTO_UZU'
   || 'KTO_AKC'
   ?}
|| 1
?}


\gen_xlsx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przygotowuje dane dla tworzenia plikow excela
::  OLD: \gen_xlsx/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('can_gen_xlsx','!ctr_hbd_dhar')
|| K_N_VIEW.index('SKID_MBN'); K_N_VIEW.prefix(K_HARM.SKID_MBN,K_HARM_P.ref());
   {? K_N_VIEW.first()
   || {? K_N_VIEW.AKC='T'
      || {? K_HARM_P.sel_size() | FUN.ask('Czy przygotować arkusz do planowania?'@)
         || {? ~K_HARM_P.sel_size()
            || TTEXCEL:=exec('gen_tab_xlsx','!ctr_hbd_dhar')
            ?};
            exec('add_tab_xlsx','!ctr_hbd_dhar');
            {? ~K_HARM_P.sel_size()
            || exec('gen_all_xlsx','!ctr_hbd_dhar');
               VAR_DEL.delete('TTEXCEL')
            ?}
         ?}
      |? ~K_HARM_P.sel_size()
      || FUN.info('Widok modelu danych nie jest zaakceptowany.'@)
      ?}
   |? ~K_HARM_P.sel_size()
   || FUN.info('Brak widoku danych pozycji harmonogramu.'@)
   ?}
|? ~K_HARM_P.sel_size()
|| FUN.info('Nie można przygotować pliku do planowania.'@)
?}


\can_gen_xlsx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Czy mozna tworzy pliki excela dla pozycji harmonogramow
::  OLD: \can_gen_xlsx/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
(K_HARM_P.STATUS='N' | K_HARM_P.STATUS='P')
:: & K_HARM_P.K_N_VIEW().AKC='T'


\gen_tab_xlsx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Tworzy tabele tymczasowa na potrzeby generowania plikow xlsx
::  OLD: \gen_tab_xlsx/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1,
   'K_N_VIEW','INTEGER',,
   'PLIK','STRING[50]',,
   'REF','INTEGER',
);
_tab


\add_tab_xlsx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Dodaje informacje o plikach do tworzenia
::  OLD: \add_tab_xlsx/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
TTEXCEL.K_N_VIEW:=K_N_VIEW.ref();
TTEXCEL.PLIK:='';
TTEXCEL.REF:=#K_HARM_P.ref();
TTEXCEL.add()


\b_gen_xlsx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przygotowuje dane dla tworzenia plikow excela - przed akcja grupowa
::  OLD: \b_gen_xlsx/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Przygotować arkusze do planowania?'@)
|| TTEXCEL:=exec('gen_tab_xlsx','!ctr_hbd_dhar');
   KHPSel:=K_HARM_P.sel_size();
   1
?}


\a_gen_xlsx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przygotowuje dane dla tworzenia plikow excela - po akcji grupowej
::  OLD: \a_gen_xlsx/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
exec('gen_all_xlsx','!ctr_hbd_dhar');
_ok:=TTEXCEL.size();
FUN.info(
   'Liczba zanaczonych pozycji: %1\n'
   'Liczba przygotowanych arkuszy: %2\n'
   'Liczba nieprzygotowanych arkuszy: %3\n'@[$KHPSel,$_ok,$(KHPSel-_ok)]
);
VAR_DEL.delete('TTEXCEL','KHPSel')


\gen_all_xlsx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Tworzy pliki excela dla pozycji harmonogramow
::   WE: [_a] - zmieniac status? [1]-tak 0-nie
::  OLD: \gen_all_xlsx/skid_con.fml
:: ~OST: INBLGET,INBLPUT,INFERASE,INFEXISTS,INFOPEN,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
::_pyt:=FUN.choice('Operacje na arkuszu Google.',,'Utwórz','Wyślij dane','Pobierz dane');
::{? _pyt=1
::|| exec('gen_google','!ctr_hbd_dhar')
::|? _pyt=2
::|| exec('send_google','!ctr_hbd_dhar')
::|? _pyt=3
::|| exec('get_google','!ctr_hbd_dhar')
::?};
::return(0);
{? exec('interm','#system')
|| FUN.emsg(exec('interm_nacc_msg','#system'));
   return(0)
?};
{? _=0 || _a:=1 ?};
{? K_HARM.ARKUSZ='G'
|| K_HARM_P.cntx_psh();
   K_HARM_P.prefix();
   {? TTEXCEL.first()
   || PROGRESS.set(TTEXCEL.size(),'Przygotowanie arkusza ...');
      {!
      |? _ok:=1;
         {? K_HARM_P.seek(TTEXCEL.REF,)
         || _ok:=exec('gen_google','!ctr_hbd_dhar');
            {? _ok>0
            || {? _a || exec('kharmp_stat','control','P') ?};
               K_HARM_P.put()
            ?}
         ?};
         PROGRESS.next();
         _ok>0 & TTEXCEL.next()
      !};
      PROGRESS.close();
      {? _ok=-2
      || exec('config_error','gsheet')
      ?}
   ?};
   K_HARM_P.cntx_pop()
|| _ls:=0;
   _lp:=0;
   _lszab:=0;
   _szablon:='';
   {? TTEXCEL.first()
   || _f:=fopen('@'+tmp_dir()+'\\config.txt','w');
      {? _f
      || fwrite(_f,'[Param]');
         fwrite(_f,'odbc='+exec('odbc','control'));
         fwrite(_f,'firma='+REF.S_FIRMA().SYMBOL+'@'+$REF.S_FIRMA);
         fwrite(_f,'auto');
         fwrite(_f,'[Plan]');
         K_S_VIEW.index('K_S_VIEW'); K_S_VIEW.prefix();
         K_N_VIEW.index('SKID_MBN'); K_N_VIEW.prefix();
         {!
         |? {? K_N_VIEW.seek(TTEXCEL.K_N_VIEW,)
            || {? _lszab<>#K_N_VIEW.K_S_VIEW
               || _lszab:=#K_N_VIEW.K_S_VIEW;
                  _szablon:='s'+$_lszab+'.xlsx';
                  K_N_VIEW.K_S_VIEW().bl_get('SZABLON','@'+tmp_dir()+'\\'+_szablon,0)
               ?};
               TTEXCEL.PLIK:='p'+$TTEXCEL.REF+'.xlsx';
               TTEXCEL.put();
               fwrite(_f,'widok='+_szablon+'@'+TTEXCEL.PLIK+'@'+$K_N_VIEW.ref()+'@'+STR.maz2w95(K_N_VIEW.NAZ)+'@'+$#K_HARM.ref()+'@'+$TTEXCEL.REF)
            ?};
            TTEXCEL.next()
         !};
         fclose(_f);
         {? exec('run_exe','control')=0
         || K_HARM_P.cntx_psh();
            K_HARM_P.index('K_HARM'); K_HARM_P.prefix();
            {? TTEXCEL.first()
            || {!
               |? {? K_HARM_P.seek(TTEXCEL.REF,)
                  || {? K_HARM_P.bl_put('EXCEL','@'+tmp_dir()+'\\'+TTEXCEL.PLIK,0)
                     || {? _a || exec('kharmp_stat','control','P') ?};
                        K_HARM_P.put()
                     ?}
                  ?};
                  ferase('@'+tmp_dir+'\\'+TTEXCEL.PLIK,0);
                  {? K_N_VIEW.seek(TTEXCEL.K_N_VIEW,)
                  || {? fexists('@'+tmp_dir+'\\s'+$(#K_N_VIEW.ref())+'.xlsx',0)
                     || ferase('@'+tmp_dir+'\\s'+$(#K_N_VIEW.ref())+'.xlsx',0)
                     ?}
                  ?};
                  TTEXCEL.next()
               !}
            ?};
            K_HARM_P.cntx_pop()
         ?}
      ?}
   ?}
?}


\edit_xlsx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Edycja arkusza do wprowadzania planow
::  OLD: \edit_xlsx/skid_con.fml
:: ~OST: INBLEDIT
::----------------------------------------------------------------------------------------------------------------------
{? exec('cli_functions','#system')=0
|| FUN.emsg(exec('indevice_nacc_msg','#system'));
   return(0)
?};
{? exec('is_arkusz','control')
|| {? K_HARM.ARKUSZ='G'
   || exec('open_http','control',K_HARM_P.LINK)
   || {? K_HARM_P.STATUS='P'
      || K_HARM_P.bl_edit('EXCEL')
      || exec('bl_view','#blob',K_HARM_P,'EXCEL')
      ?}
   ?}
|| FUN.info('Arkusz nie jest przygotowany.'@)
?}


\send_xlsx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przygotowuje dane do wyslania plikow excela
::  OLD: \send_xlsx/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_ile:=0;
K_HARM_P.cntx_psh(); K_HARM_P.index('K_HARM'); K_HARM_P.prefix(K_HARM.ref());
{? K_HARM_P.first()
|| {!
   |? K_HARM_P.cntx_psh();
      K_HARM_P.prefix(K_HARM_P.K_HARM,K_HARM_P.ref());
      _jest:=K_HARM_P.first();
      K_HARM_P.cntx_pop();
      {? K_HARM_P.STATUS='P' & ~_jest & exec('is_arkusz','control')
      || {? K_HARM_P.ZN_UZU='T'
         || exec('kharmp_stat','control','W');
            K_HARM_P.D_R_UZU:=date()
         || exec('kharmp_stat','control','U');
            K_HARM_P.D_R_AKC:=date()
         ?};
         _ile+=K_HARM_P.put()
      ?};
      K_HARM_P.next()
   !}
?};
K_HARM_P.cntx_pop();
{? _ile
|| K_HARM.STATUS:='T';
   K_HARM.put()
?}


\bv_khp_zn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed wyświetleniem pól K_HARM_P.KTO_UZU i K_HRAM_P.KTO_AKC
::----------------------------------------------------------------------------------------------------------------------
{? app_info('web_sesid')<>'' || return(~~) ?};
_enabled:=fld()='T';
{? cur_afld()+3='UZU'
|| K_HARM_P.efld_opt('RED','enable='+$_enabled,K_HARM_P,'KTO_UZU');
   K_HARM_P.efld_opt('RED','enable='+$_enabled,K_HARM_P,'D_P_UZU')
|| K_HARM_P.efld_opt('RED','enable='+$_enabled,K_HARM_P,'KTO_AKC');
   K_HARM_P.efld_opt('RED','enable='+$_enabled,K_HARM_P,'D_P_AKC')
?}


\trig_k_harm_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MB] [12.30]
:: OPIS: Trigger przed/po add,put i przed del tabeli K_HARM_P
::   WE:  _a  - -1-przed add 1-po add -2-przed put 2-po put 3-del
::       [_b] - gdy _a=1 lub 2 czy udał się add,put
::  OLD: \t_k_harm_p/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_a=1 | _a=2) & _b=0 || return(~~) ?};
{? _a=2 & K_HARM_P.K_N_VIEW<>bfld('K_N_VIEW') || _a:=4 ?};
{? _a=3 | _a=4
|| K_HARM_P.K_N_VIEW();
   K_N_VIEW.index('K_HARM_P'); K_N_VIEW.prefix(K_HARM_P.ref());
   {? K_N_VIEW.first()
   || K_P_VIEW.index('SKID_MBP'); K_P_VIEW.prefix(K_N_VIEW.ref());
      K_E_VIEW.index('K_E_VIEW');
      {? K_P_VIEW.first()
      || {!
         |? K_E_VIEW.prefix(K_P_VIEW.ref());
            {? K_E_VIEW.first() || {! |? K_E_VIEW.del() !} ?};
            K_P_VIEW.del()
         !}
      ?};
      K_N_VIEW.del()
   ?}
?};
{? (_a=1 | _a=4) & var_pres('t_KHARMP')<=0
|| K_HARM_P.K_N_VIEW();
   exec('knv_copy1','control',K_N_VIEW.NAZ,K_HARM_P.ref(),'P','N')
?};
{? _a=-1 | _a=-2
|| K_HARM_P.STAT_NAZ:=exec('set_status','control')
?};
{? _a=1 | _a=2
|| {? _a=1 |
      K_HARM_P.KTO_AKC<>bfld('KTO_AKC') | K_HARM_P.KTO_UZU<>bfld('KTO_UZU') |
      K_HARM_P.AKTYWNY<>bfld('AKTYWNY') | K_HARM_P.STATUS<>bfld('STATUS')
   || exec('trig_khw','ctr_bha',1,1)
   ?}
|? _a=3
|| exec('trig_khw','ctr_bha',1,0)
?};
{? _a<0 | _a=3 || 1 || ~~ ?}


\br_k_harm_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Rekord przed K_HARM_P
::----------------------------------------------------------------------------------------------------------------------
_gray:='';
{? K_HARM.STATUS<>'P'
|| _gray+='DU'
?};
{? K_HARM_P.STATUS='N' | K_HARM_P.STATUS='P'
|| _gray+='YT'
?};
{? K_HARM_P.STATUS<>'N' & K_HARM_P.STATUS<>'P'
|| _gray+='R'
?};
{? K_HARM_P.STATUS='Z' | K_HARM_P.STATUS='A'
|| _gray+='YT'
?};
{? K_HARM_P.STATUS='Z'
|| _gray+='NA'
?};
{? K_HARM_P.LINK=''
|| _gray+='WB'
?};
K_HARM_H.index('K_HARM_P'); K_HARM_H.prefix(K_HARM_P.ref());
{? ~K_HARM_H.first()
|| _gray+='H'
?};
{? ~exec('is_arkusz','control')
|| _gray+='E'
?};
{? K_HARM_P.sel_size()=0
|| K_N_VIEW.index('SKID_MBN'); K_N_VIEW.prefix(K_HARM.SKID_MBN,K_HARM_P.ref());
   {? K_N_VIEW.first()
   || {? K_N_VIEW.AKC='T'
      || _gray+='A'
      || _gray+='NR'
      ?}
   || _gray+='AN'
   ?}
?};
K_HARM_P.actions_grayed('POZ',_gray);
K_N_VIEW.index('SKID_MBN'); K_N_VIEW.prefix(K_HARM.SKID_MBN,K_HARM_P.ref());
{? K_N_VIEW.first()
|| {? K_N_VIEW.AKC='T'
   || UNPAR.P16:='T'
   || UNPAR.P16:='N'
   ?}
|| UNPAR.P16:=''
?};
K_HARM_H.index('K_HARM_P');
K_HARM_H.prefix(K_HARM_P.ref());
{? K_HARM_H.first()
|| UNPAR.P17:='T'
|| UNPAR.P17:='N'
?};
K_HARM_U.index('K_HARM_P');
K_HARM_U.prefix(K_HARM_P.ref());
{? K_HARM_U.first()
|| UNPAR.P18:='T'
|| UNPAR.P18:='N'
?};
''


\k_harm_p_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Prezentuje widok danych dla pozycji harmonogramu
::  OLD: \k_harm_p_view/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K_N_VIEW.index('SKID_MBN'); K_N_VIEW.prefix(K_HARM.SKID_MBN,K_HARM_P.ref());
{? K_N_VIEW.first()
|| exec('k_p_view','control')
|| FUN.info('Brak widoku danych.'@)
?}


\bg_k_harm_p_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Przed akcja grupowa akceptacji/anulowania widoków harmonogramów
::   WE: _a - 1-akceptacja 0-wycofanie
::  OLD: \bg_k_harm_p_akc/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_pyt:={?  _a
      || 'Zaakceptować widoki danych zaznaczonych zadań?'@
      || 'Wycofanie akceptacji wiąże się z usunięciem istniejących arkuszy.\n\n'+
         'Wycofać akceptację widoków danych zaznaczonych zadań?'@
      ?};
{? FUN.ask(_pyt)
|| grkhptyp:=_a;
   grkhpsel:=K_HARM_P.sel_size();
   grkhpok:=0;
   1
?}


\ag_k_harm_p_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Po akcji grupowej akceptacji/anulowania widoków harmonogramów
::  OLD: \ag_k_harm_p_akc/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info(
   'Liczba zaznaczonych pozycji: '+$grkhpsel+'\n'+
   'Liczba '+{? grkhptyp=1 || 'zaakceptowanych pozycji' || 'anulowanych akceptacji' ?}+': '+$grkhpok+'\n'+
   'Liczba '+{? grkhptyp=1 || 'akceptacji' || 'anulowań akceptacji' ?}+' zkończonych niepowodzeniem: '+$(grkhpsel-grkhpok)
)


\kharmstat_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Zmiana statusu harmonogramu
::   WE: _a - 1-uruchomienie 0-cofnięcie uruchomienia
::  OLD: \kharmstat/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='CTR_HBD_DHAR';
   _params.AKCJA:='Uruchom';
   _params.UIDREF:=K_HARM.uidref();
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID);
   exec('mp_run','#b__box',_params)
|| _ref1:=K_HARM.ref();
   K_HARM.cntx_psh();
   K_HARM.f_next() | K_HARM.f_prev();
   _ref:=K_HARM.ref();
   K_HARM.cntx_pop();
   _stat:=K_HARM.STATUS;
   exec('kharmstat','!ctr_hbd_dhar',0);
   {? K_HARM.get() & K_HARM.STATUS<>_stat
   || K_HARM.f_rfresh();
      K_HARM.f_seek(_ref)
   || K_HARM.f_seek(_ref1)
   ?}
?}


\kharmstat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zmiana statusu harmonogramu
::   WE: _a - 1-uruchomienie 0-cofnięcie uruchomienia
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| {? K_HARM.STATUS='P'
   || K_HARM_P.index('K_HARM'); K_HARM_P.prefix(K_HARM.ref());
      K_N_VIEW.index('SKID_MBN'); K_N_VIEW.prefix(K_HARM.SKID_MBN);
      {? K_HARM_P.first()
      || _jest:=0;
         _brak:=exec('create_set','#array','STRING[10]');
         {!
         |? _akc:=K_N_VIEW.find_key(K_HARM_P.ref()) & K_N_VIEW.AKC='T';
            {? K_HARM.ARKUSZ='G'
            || {? K_HARM_P.KTO_UZU & K_HARM_P.KTO_UZU().GOOGLE=''
               || _brak.addIfNotExists(K_HARM_P.KTO_UZU().KOD)
               ?};
               {? K_HARM_P.KTO_AKC & K_HARM_P.KTO_AKC().GOOGLE=''
               || _brak.addIfNotExists(K_HARM_P.KTO_AKC().KOD)
               ?}
            ?};
            {? _jest=0 || _jest:=exec('is_arkusz','control') ?};
            _akc & K_HARM_P.next()
         !};
         {? _akc
         || {? _brak.TAB.first()
            || _bez:='';
               {!
               |? _bez+=_brak.TAB.E+',\n ';
                  _brak.TAB.next()
               !};
               FUN.info('Brak adresów email kont Google dla użytkowników:\n%1'@[_bez-3])
            || {? _jest
               || _pyt:=
                  choice('Istnieją przygotowane arkusze do planowania.\n'
                         'Czy ponownie je przygotować i zmienić status na \'Wysłany\'?'@,
                         'Uwaga'@,'ASK',0,0,3,'Tak'@,'Nie'@,'Anuluj'@)
               || _pyt:=choice('Czy przygotować i wysłać arkusze do planowana?'@,
                         'Uwaga'@,'ASK',0,0,2,'Tak'@,'Nie'@);
                  {? _pyt=1 || _pyt:=2 ?}
               ?};
               {? _pyt<>2
               || TTEXCEL:=exec('gen_tab_xlsx','!ctr_hbd_dhar');
                  {? K_HARM_P.first()
                  || {!
                     |? {? (~K_HARM_P.EXCEL | _pyt=0)
                        || K_N_VIEW.index('SKID_MBN'); K_N_VIEW.prefix(K_HARM.SKID_MBN,K_HARM_P.ref());
                           {? K_N_VIEW.first()
                           || exec('add_tab_xlsx','!ctr_hbd_dhar')
                           ?}
                        ?};
                        K_HARM_P.next()
                     !};
                     {? TTEXCEL.first()
                     || exec('gen_all_xlsx','!ctr_hbd_dhar')
                     ?}
                  ?};
                  VAR_DEL.delete('TTEXCEL');
                  exec('send_xlsx','!ctr_hbd_dhar')
               ?}
            ?}
         || FUN.info('Brak akceptacji wszystkich\nwidoków pozycji harmonogramu.'@)
         ?}
      || FUN.info('Brak pozycji harmonogramu.'@)
      ?};
      K_HARM.STATUS='T'
   |? K_HARM.STATUS='T'
   || FUN.info('Harmonogram jest już w toku.'@);
      1
   || FUN.info('Status harmonogramu %1 nie pozwala na jego uruchomienie.'@ [exec('kharm_stat_naz','!ctr_hbd_dhar')]);
      0
   ?}
|| {? K_HARM.STATUS='T'
   || {? FUN.ask('Czy zmienić status harmonogramu na \'Wycofany\'?'@)
      || K_HARM_P.index('K_HARM'); K_HARM_P.prefix(K_HARM.ref());
         {? K_HARM_P.first()
         || {!
            |? exec('kharmp_stat','control','Z');
               K_HARM_P.put();
               K_HARM_P.next()
            !}
         ?};
         exec('kharm_stat','control','Z')
      ?}
   |? K_HARM.STATUS='Z' | K_HARM.STATUS='K'
   || {? FUN.ask('Czy zmienić status harmonogramu na \'W toku\'?'@)
      || K_HARM_P.index('K_HARM'); K_HARM_P.prefix(K_HARM.ref());
         {? K_HARM_P.first()
         || {!
            |?
               exec('kharmp_stat','control','P');
               K_HARM_P.put();
               K_HARM_P.next()
            !}
         ?};
         exec('send_xlsx','!ctr_hbd_dhar');
         exec('kharm_stat','control','T')
      ?}
   |? K_HARM.STATUS='Z'
   || FUN.info('Harmonogram zaniechany.'@)
   |? K_HARM.STATUS='K'
   || FUN.info('Harmonogram zakończony.'@)
   ?}
?}


\k_harm_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przycisk Uruchom okna harmonogramu
::----------------------------------------------------------------------------------------------------------------------
_r:=exec('arkharm','!ctr_hbd_dhar');
{? _r=''
|| menu_txt(,'Uruchom');
   exec('add','!ctr_hbd_dhar');
   exec('kharmstat_akc','!ctr_hbd_dhar',1);
   {? K_HARM.get() & K_HARM.STATUS='T'
   || 'key:Esc'
   || ''
   ?}
|| 'edit:'+_r
?}


\btn_khp_view
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przycisk widoku danych
::----------------------------------------------------------------------------------------------------------------------
_r:=exec('ar_k_harm_p','!ctr_hbd_dhar');
{? _r=''
|| {? KNView
   || K_HARM_P.put()
   || KNView:=K_HARM_P.add()
   ?};
   exec('k_harm_p_view','!ctr_hbd_dhar');
   ''
|| 'edit:'+_r
?}


\br_k_harm_h
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Rekord przed K_HARM_P
::  OLD: \br_k_harm_h/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.K1:={? K_HARM_H.TYP='U' || 'Uzupełniał' || 'Akceptował' ?};
''


\ba_k_harm_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed akcja dolacz okna WER tabeli K_HARM_U
::  OLD: \ba_k_harm_u/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TabKUser');
TabKUser:=tab_tmp(2,
   'KOD','STRING[10]','Nazwa',
   'NAZ','STRING[50]','Login',
   'SEL','INTEGER',,
   'REF','INTEGER',
);
_i2:=TabKUser.ndx_tmp('',1,'SEL',,0);
_o:=TabKUser.mk_sel('Użytkownicy procesu budżetowania'@,'P',,,,,,,'U');
TabKUser.win_fld(_o,,'SEL',,,,,,,1,,2,,"1","0");
TabKUser.win_fld(_o,,'KOD',,,,,,'Login'@);
TabKUser.win_fld(_o,,'NAZ',,,,,,'Nazwa'@);
TabKUser.win_act(_o,,'Formuła','Zaznacz'@@,,,"{? TabKUser.SEL=0 || TabKUser.SEL:=1; TabKUser.put() ?}",,,,,,'Z');
TabKUser.win_act(_o,,'Formuła','Odznacz'@@,,,"{? TabKUser.SEL=1 || TabKUser.SEL:=0; TabKUser.put() ?}",,,,,,'O');
TabKUser.win_act(_o,,'Rekord',,,,"
   _gray:={? TabKUser.SEL || 'Z' || 'O' ?};
   _mark:={? TabKUser.SEL || 'O' || 'Z' ?};
   _wer:=TabKUser.win_sel('?');
   TabKUser.actions_grayed(_wer,_gray);
   TabKUser.actions(_wer,,_mark,1);
   ''
");
TabKUser.win_act(_o,,'Formuła','Kontynuuj'@@,,,"sel_exit()",,,,,,'K');
TabKUser.win_btn(_o,'text=%1,btn_label_align=center,panel=right,align=begin'['&Zaznacz'@],'menu:Z');
TabKUser.win_btn(_o,'text=%1,btn_label_align=center,panel=right,align=begin'['&Odznacz'@],'menu:O');
TabKUser.win_btn(_o,'text=%1,btn_label_align=center,panel=right,align=begin'['&Kontynuuj'@],'menu:K');
TabKUser.win_sel(_o);
USERS.cntx_psh();
USERS.index('USR_AKOD'); USERS.prefix('T');
{? USERS.first()
|| K_HARM_U.cntx_psh();
   K_HARM_U.index('K_HARM_P'); K_HARM_U.prefix(K_HARM_P.ref());
   {!
   |? {? ~K_HARM_U.find_key(USERS.ref()) &
         (exec('hasAction','users','CTR_HBD_DHAR',USERS.ref()) |
          exec('hasAction','users','CTR_HBD_DZAA',USERS.ref()) |
          exec('hasAction','users','CTR_HBD_DZBA',USERS.ref()))
      || TabKUser.REF:=#USERS.ref();
         TabKUser.KOD:=USERS.KOD;
         TabKUser.NAZ:=USERS.DANE;
         TabKUser.add()
      ?};
      USERS.next()
   !};
   K_HARM_U.cntx_pop()
?};
{? TabKUser.select()
|| TabKUser.index(_i2);
   TabKUser.prefix(1);
   {? TabKUser.first()
   || K_HARM_U.cntx_psh();
      K_HARM_U.index('K_HARM_P');
      K_HARM_U.prefix(K_HARM_P.ref());
      {!
      |? {? USERS.seek(TabKUser.REF,) & ~K_HARM_U.find_key(USERS.ref())
         || K_HARM_U.K_HARM_P:=K_HARM_P.ref();
            K_HARM_U.USERS:=USERS.ref();
            K_HARM_U.add()
         ?};
         TabKUser.next()
      !};
      K_HARM_U.cntx_pop()
   ?}
?};
USERS.cntx_pop()


\k_harm_p_stamp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia znacznik czasowy
::   WE: _a - znacznik czasowy
::----------------------------------------------------------------------------------------------------------------------
K_HARM_P.cntx_psh();
K_HARM_P.index('K_HARM'); K_HARM_P.prefix(K_HARM.ref());
{? K_HARM_P.first()
|| {!
   |? {? K_HARM_P.STATUS<>'P'
      || K_HARM_P.TM_STAMP:=_a;
         K_HARM_P.put()
      ?};
      K_HARM_P.next()
   !}
?};
K_HARM_P.cntx_pop()


\gen_google
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Generuje arkusz google do budżetowania
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
K_N_VIEW.index('SKID_MBN'); K_N_VIEW.prefix(K_HARM.SKID_MBN,K_HARM_P.ref());
{? K_N_VIEW.first()
|| K_HARM_P.GOOGLEID:=K_HARM_P.LINK:='';
   exec('GSheet','object');
   {? (_init:=GSheet.init(exec('koordynator','control')))>0
   || _size:=exec('gen_google_wym','control');
      _ele:=exec('gen_google_ele','control');
      GSheet.setGrid(3+_size.K+_ele.W,_size.W+_ele.K);
      TabNag.first('F');
      _obj:=GSheet.create(K_HARM_P.NAZ,TabNag.name());
      {? var_press('_obj')>0
      || exec('gen_google_nag','!ctr_hbd_dhar');
         exec('gen_google_typ','!ctr_hbd_dhar','K',3,_size.W);
         exec('gen_google_typ','!ctr_hbd_dhar','W',3+_size.K,0);
         GSheet.merge(3,0,3+_size.K-1,_size.W-1);
         _styl:=GSheet.newStyle();
         _styl.COLOR:=',183:222:232';
         GSheet.setStyle(3,0,3+_size.K-1,_size.W-1,_styl);
         _styl.COLOR:=',201:244:255';
         GSheet.setStyle(3+_size.K,_size.W,3+_size.K+_ele.W-1,_size.W+_ele.K-1,_styl);
         TabNag.srow:=3+_size.K+1;
         TabNag.scol:=_size.W;
         _styl.COLOR:='255:255:255,75:172:198';
         GSheet.repeat(TabNag.srow-1,TabNag.scol,TabNag.srow+_ele.W-2,TabNag.scol+_ele.K-1,'0',1);
         {? TabNag.first('K') & TabNag.first('W')
         || {!
            |? _fml:=TabNag.formula('K');
               {? _fml<>''
               || GSheet.repeat(TabNag.srow-1,TabNag.scol+TabNag.ccol-1,TabNag.srow+_ele.W-2,TabNag.scol+TabNag.ccol-1,_fml,2);
                  GSheet.setStyle(TabNag.srow-2,TabNag.scol+TabNag.ccol-1,TabNag.srow+_ele.W-2,TabNag.scol+TabNag.ccol-1,_styl)
               ?};
               TabNag.next('K')
            !}
         ?};
         GSheet.autoResize(0,_size.W+_ele.K,1);
         {? TabNag.first('K') & TabNag.first('W')
         || {!
            |? _fml:=TabNag.formula('W');
               {? _fml<>''
               || GSheet.repeat(TabNag.srow+TabNag.crow-2,TabNag.scol,TabNag.srow+TabNag.crow-2,TabNag.scol+_ele.K-1,_fml,2);
                  GSheet.setStyle(TabNag.srow+TabNag.crow-2,TabNag.scol-1,TabNag.srow+TabNag.crow-2,TabNag.scol-1+_ele.K,_styl)
               ?};
               TabNag.next('W')
            !}
         ?};
         GSheet.freeze(3+_size.K,_size.W);
         GSheet.setBorder(3,0,3+_size.K+_ele.W-1,_size.W+_ele.K,GSheet.newBorder('LTRBVH'));
         GSheet.setSheetProperties('',0);
         GSheet.execute();
         {? TabNag.first('F')
         || _first:=1;
            _lp:=0;
            {!
            |? {? _first
               || _first:=0
               || GSheet.duplicate(0,(_lp+=1),TabNag.name())
               ?};
               GSheet.repeat(2,0,2,0,TabNag.opis(),2);
               {? TabNag.first('K') & TabNag.first('W')
               || {!
                  |? _fml:=TabNag.formula('K');
                     {? _fml<>''
                     || GSheet.addProtectedRange(TabNag.srow-2,TabNag.scol+TabNag.ccol-1,TabNag.srow+_ele.W-2,TabNag.scol+TabNag.ccol-1,1,'')
                     ?};
                     TabNag.next('K')
                  !}
               ?};
               {? TabNag.first('K') & TabNag.first('W')
               || {!
                  |? _fml:=TabNag.formula('W');
                     {? _fml<>''
                     || GSheet.addProtectedRange(TabNag.srow+TabNag.crow-2,TabNag.scol-1,TabNag.srow+TabNag.crow-2,TabNag.scol-1+_ele.K,1,'')
                     ?};
                     TabNag.next('W')
                  !}
               ?};
               GSheet.addProtectedRange(0,0,2,_size.W+_ele.K-1,1,'');
               GSheet.addProtectedRange(2+_size.K,0,2+_size.K+_ele.W-1,_size.W-1,1,'');
               GSheet.addProtectedRange(3,_size.W-1,3+_size.K-1,_size.W-1+_ele.K,1,'');
               TabNag.next('F')
            !};
            GSheet.execute()
         ?};
         K_HARM_P.GOOGLEID:=_obj.ID;
         K_HARM_P.LINK:=_obj.LINK
      ?}
   || _ok:=_init
   ?}
?};
_ok


\gen_google_typ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Generowanie elementów
::   WE: _a - typ
::       _b - współrzędna wiersza
::       _c - współrzędna kolumny
::----------------------------------------------------------------------------------------------------------------------
GSheet.createRange(_b,_c,{? _a='K' || 1 || 2 ?});
_ile2:=1;
{? _a='K' || _row:=_b-1 || _col:=_c-1 ?};
{! _nr:=1..obj_len(TabNag.LISTA)
|! {? TabNag.LISTA[_nr].TYP=_a
   || _ile:=1;
      {! _nn:=(_nr+1)..obj_len(TabNag.LISTA)
      |! {? TabNag.LISTA[_nn].TYP=_a
         || _ile*=TabNag.LISTA[_nn].TAB.size()
         ?}
      !};
      {? TabNag.LISTA[_nr].TAB.first()
      || GSheet.addRow(); {? _a='K' || _row+=1; _col:=_c || _col+=1; _row:=_b ?};
         {! _j:=1.._ile2
         |! {? TabNag.LISTA[_nr].TAB.first()
            || {!
               |? {? _ile>1
                  || {? _a='K'
                     || GSheet.merge(_row,_col,_row,_col+_ile-1)
                     || GSheet.merge(_row,_col,_row+_ile-1,_col)
                     ?}
                  ?};
                  {! _i:=1.._ile
                  |! _opis:={? TabNag.LISTA[_nr].CZAS
                            || TabNag.LISTA[_nr].TAB.OPIS
                            || TabNag.LISTA[_nr].TAB.SYMBOL+' - '+TabNag.LISTA[_nr].TAB.OPIS
                            ?};
                     GSheet.addCell('\''+_opis); {? _a='K' || _col+=1 || _row+=1 ?}
                  !};
                  TabNag.LISTA[_nr].TAB.next()
               !}
            ?}
         !}
      ?};
      _ile2*=TabNag.LISTA[_nr].TAB.size()
   ?}
!};
_styl:=GSheet.newStyle();
{? _a='K'
|| _border:=GSheet.newBorder('LTRB');
   _styl.COLOR:=',250:191:143';
   _styl.BOLD:=1;
   _styl.FONTSIZE:=20;
::   GSheet.merge(0,0,0,_ile2+_c-1);
   GSheet.setStyle(0,0,0,_ile2+_c-1,_styl);
   GSheet.setBorder(0,0,0,_ile2+_c-1,_border);
   _styl.COLOR:=',252:213:180';
   _styl.BOLD:=0;
   _styl.FONTSIZE:=0;
::   GSheet.merge(1,0,1,_ile2+_c-1);
   GSheet.setStyle(1,0,1,_ile2+_c-1,_styl);
   GSheet.setBorder(1,0,1,_ile2+_c-1,_border);
   _styl.COLOR:=',253:233:217';
::   GSheet.merge(2,0,2,_ile2+_c-1);
   GSheet.setStyle(2,0,2,_ile2+_c-1,_styl);
   GSheet.setBorder(2,0,2,_ile2+_c-1,_border);
   _styl.COLOR:=',183:222:232';
   _styl.HALIGN:='LEFT';
   _styl.VALIGN:='MIDDLE';
   _styl.BOLD:=1;
   GSheet.setStyle(_b,_c,_row,_ile2+_c-1,_styl)
|| _styl.COLOR:=',183:222:232';
   _styl.HALIGN:='LEFT';
   _styl.VALIGN:='MIDDLE';
   _styl.BOLD:=1;
   GSheet.setStyle(_b,_c,_b+_ile2-1,_col,_styl);
   GSheet.addProtectedRange(_b,_c,_b+_ile2-1,_col,1,'')
?};
GSheet.saveRange()


\gen_google_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.02]
:: OPIS: Dodaje informacje nagłówkowe do arkusza google
::----------------------------------------------------------------------------------------------------------------------
GSheet.createRange(0,0,1);
GSheet.addRow(); GSheet.addCell(REF.FIRMA().OPIS);
GSheet.addRow(); GSheet.addCell(K_HARM_P.NAZ);
GSheet.addRow(); GSheet.addCell('');
GSheet.saveRange()

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:41 1938e8384cc4edadc60f20d808c8a6718264d06fa72c86611c1b4281fde59e9dbed1c3c67e79c9875620240ca8f73515d6d969792f07ca7d2abea526232bbac36bac6344605a74de856953e989914b0d7339336ee6d0382d7e13fca497cb6617a47699e0ca248ad33c60cf87be7222f50d52ba254acc42a7c9af3437e3d263db
