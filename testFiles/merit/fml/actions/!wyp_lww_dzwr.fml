:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !wyp_lww_dzwr.fml
:: Utworzony: 31.08.2017
:: Autor: GZ
::======================================================================================================================
:: Zawartość: Formuły czynności WYP_LWW_DZWR - Rejestracja zwrotu pracownikowi
::            Uwaga: większość kodu jest wspólna z czynnościami:
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Formuła główna czynności rejestracji zwrotu pracownikowi(WYP_LWW_DZWR)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::       context - [obj_new] obiekt służący do przekazywania kontekstu wywołania czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_int:=params_get().int;
_out:=params_get().out;
_mp:=params_get().mp;
_context:=params_get().context;

::# permissions=ODDZ,LMG,F_ZATR,UD_SKL

:: PARAMETRY WE:
::# kind=WE, symbol=KARO, type=_KARO, name=Wskazanie na wydanie wyposażenia, required=N, keyref=T
{? var_pres('KARO',_in)<>type_of(~~) & var_pres('KARO',_in)<>type_of(null()) || return() ?};
{? var_pres('KARO',_in)=type_of(~~) || _in.KARO:=null() ?};

:: PARAMETRY WY:
::# kind=WY, symbol=KARO, type=_KARO, name=Wskazanie na zwrot wyposażenia, required=N
{? var_pres('KARO',_out)<>type_of(~~) & var_pres('KARO',_out)<>type_of(null()) || return() ?};

:: Sprawdzenie rekordu zwrotu wyposażenia i ustawienie parametru wyjściowego
{? var_pres('KARO',_in)=type_of(null())
|| {? _in.KARO
   || {? exec('FindAndGet','#table',KARO,_in.KARO,,"TYP",'')<>'W'
      || _msg:='Niezgodność wywołania czynności.\nPrzekazany zapis obrotu wyposażeniem musi być zwrotem.'@@;
         FUN.emsg(_msg);
         _mp.error(_msg);
         return()
::      || _mp.save(exec('kind_out','#b_port'),'KARO',_in.KARO)
      ?}
::   || _msg:='Niezgodność wywołania czynności.\nPrzekazany parametr KARO nie może mieć wartości null().'@@;
::      FUN.emsg(_msg);
::      _mp.error(_msg);
::      return()
   ?}
?};

_keyRef:='';

:: Wyzwalacz, który po dodaniu nagłówka zlecenia:
:: - add/put: dodaje/aktualizuje rekord kluczowy nagłówka utworzonego zlecenia
::   del: usuwa rekord kluczowy nagłówka utworzonego zlecenia
:: - add/put: zapisuje parametr wyjściowy ZL - wskazanie na nagłówek utworzonego zlecenia
::   del: zapisuje parametr wyjściowy ZL - null()
:: - add/put: usuwa kluczowy rekord nagłówka zlecenia nadrzędnego
::   del: dodaje rekord kluczowy nagłówka zlecenia nadrzędnego
:: - aktualizuje opis na ToDo
_mp.trigRef('KARO',1,1,1,exec('kind_out','#b_port'),'KARO',_keyRef,$('KARO.uidref()<>\''+_keyRef+'\''));

:: pobranie keyref w celu przetworzenia w zależności od miejsca wywołania czynności
_keyRefs:=_mp.getRefs();
{? var_pres('[1]',_keyRefs)=type_of('') & _keyRefs[1]<>_keyRef
|| KARO.cntx_psh();
   KARO.clear();
   {? KARO.seek(_keyRefs[1])
   || _karo:=KARO.ref();
      _karo_uid:=KARO.uidref()
   || _karo:=null();
      _karo_uid:=''
   ?};
   KARO.cntx_pop()
|? _mp.akcja()='POPRAW' | _mp.akcja()='USUŃ' | _mp.akcja()='ZAKOŃCZ'
|| _karo:=_context.KARO;
   _karo_uid:=exec('FindAndGet','#table',KARO,_context.KARO,,"uidref()",'')
|| _karo:=null();
   _karo_uid:=''
?};
P.cntx_psh();

:: Ustawienie filtra i okna pracowników
_p6520:=exec('get','#params',6520,2,OPERATOR.USER);
exec('filtruj_p','wyp',1+_p6520,_p6520+1);
P.win_dict('WYP_SEL');

:: Wywołanie automatyczne, jest odpowiedni KeyRef, więc bezwarunkowe zakończenie redagowania zwrotu
{? _mp.isAutoRun() & _karo<>null()
|| KARO.cntx_psh();
   KARO.clear();
   {? KARO.seek(_karo)
   || KARO.STATUS:='Z';
      {? KARO.put()
      || _mp.done()
      ?}
   || _mp.cancel()
   ?};
   KARO.cntx_pop()

:: Wywołanie z listy ToDo, jest odpowiedni KeyRef, więc kontynuacja redagowania zwrotu
|? _mp.pathTodo() & _karo<>null()
|| {? exec('FindAndGet','#table',KARO,_karo,,"STATUS",'N')='Z'
   || FUN.info('Zakończono rejestrację zwrotu wyposażenia pracownikowi.'@);
      _mp.done()
   || ZKARO.KAROW:=_in.KARO;
::      _context:=obj_new('KARO','env_karo');
::      _context.KARO:=KARO.ref();
::      _env_karo.MAT_EDIT:=0;
::      _context.env_karo:=_env_karo;
::      params_set()
      _env_karo:=exec('env_karo','wyp_head');
      {? _in.KARO<>null
      || _env_karo.MAT_EDIT:=0
      || _env_karo.MAT_EDIT:=1
      ?};
      params_set('env_karo',_env_karo);
      {? exec('karor_db','wyp_head')
      || _karo:=exec('karor_dol','wyp_head')
      ?};
      KARO.cntx_psh();
      KARO.clear();
      {? KARO.seek(_karo)
      || _mp.keyRef(_karo_uid)
      ?};
      KARO.cntx_pop();
      {? _mp.isMicro()
      || _mp.cancel()
      |? _karo<>null
      || {? exec('FindAndGet','#table',KARO,_karo,,"STATUS",'N')='Z'
         || _mp.save(exec('kind_out','#b_port'),'KARO',_karo);
            _mp.done()
         ?}
      ?}
   ?}

:: Poprawianie zwrotu (obszar roboczy - zwrot przekazany kontekstem)
|? _mp.akcja()='POPRAW'
|| _mp.keyRef(_karo_uid);
   _status:=exec('FindAndGet','#table',KARO,_karo,,"STATUS",'N');
   _karo:=params_exec('karo_popraw_akcja','!wyp_lww_dzwr');
   {? _mp.isMicro()
   || _mp.cancel()
   |? _karo<>null()
   ||
      {? _status='Z'
      || _mp.done()
      |? _status='N'
      || _mp.save(exec('kind_out','#b_port'),'KARO',_karo);
         _mp.done()
      ?}
   ?}

:: Dodawanie (obszar roboczy - zwrot przekazany kontekstem)
|? _mp.akcja()='ZWRÓĆ'
|| KARO.cntx_psh();
   KARO.prefix();
   {? KARO.seek(_context.KARO)
   || _karo:=params_exec('karo_zwroc_akcja','!wyp_lww_dzwr');
      {? _mp.isMicro()
      || _mp.cancel()
      |? exec('FindAndGet','#table',KARO,_karo,,"STATUS",'N')='Z'
      || _mp.save(exec('kind_out','#b_port'),'KARO',_karo);
         _mp.done()
      ?}
   ?};
   KARO.cntx_pop()

:: Dodawanie (obszar roboczy - zwrot przekazany kontekstem)
|? _mp.akcja()='DOŁĄCZ'
|| _mp.keyRef(_karo_uid);
   _karo:=params_exec('karo_dolacz_akcja','!wyp_lww_dzwr');
   {? _mp.isMicro()
   || _mp.cancel()
   |? exec('FindAndGet','#table',KARO,_karo,,"STATUS",'N')='Z'
   || _out.KARO:=_karo;
      _mp.save(,_out);
      _mp.done()
   ?}

:: Dodawanie (obszar roboczy - zwrot przekazany kontekstem)
|? _mp.akcja()='ZWRÓĆ STAN'
|| _mp.keyRef(_karo_uid);
   _karo:=params_exec('karo_dolacz_stan','!wyp_lww_dzwr');
   {? _mp.isMicro()
   || _mp.cancel()
   |? exec('FindAndGet','#table',KARO,_karo,,"STATUS",'N')='Z'
   || _mp.save(exec('kind_out','#b_port'),'KARO',_karo);
      _mp.done()
   ?}

:: Wywołanie z panelu czynności - nowy proces, więc nowy zwrot
:: Wywołanie z listy ToDo, nie ma KeyRef, więc nowe zwrot
:: Dołączanie nowego zwrotu (obszar roboczy)
|? _mp.pathProc() | _mp.pathTodo()
|| _karo:=exec('karo_dolacz_proces','!wyp_lww_dzwr');
   {? _mp.isMicro()
   || _mp.cancel()
   |? _karo<>null()
   || {? exec('FindAndGet','#table',KARO,_karo,,"STATUS",'N')='Z'
      || _mp.save(exec('kind_out','#b_port'),'KARO',_karo);
         _mp.done()
      ?}
   || _mp.cancel()
   ?}

:: Wywołanie z panelu czynności - nowy proces, więc nowy zwrot
:: Wywołanie z listy ToDo, nie ma KeyRef, więc nowy zwrot
:: Dołączanie nowego zwrotu (obszar roboczy)
|? _mp.pathProc() | _mp.pathTodo()
|| _karo:=exec('karo_dolacz_proces','!wyp_lww_dzwr');
   {? _mp.isMicro()
   || _mp.cancel()
   |? _karo<>null()
   || {? exec('FindAndGet','#table',KARO,_karo,,"STATUS",'N')='Z'
      || _mp.save(exec('kind_out','#b_port'),'KARO',_karo);
         _mp.done()
      ?}
   || _mp.cancel()
   ?}

:: Usuwanie zwrotu (obszar roboczy - zwrot przekazany kontekstem)
|? _mp.akcja()='USUŃ'
|| _ok:=params_exec('karo_usun_akcja','!wyp_lww_dzwr');
   {? _ok
   || _mp.cancel()
   ?}

:: Zakończenie redagowania zwrotu (obszar roboczy - zwrot przekazany kontekstem)
|? _mp.akcja()='ZAKOŃCZ'
|| {? exec('blk_lock','#table','KARO',_karo,,,'Zapis obrotu wyposażeniem jest redagowany'@)
   || KARO.cntx_psh();
      KARO.clear();
      {? KARO.seek(_karo)
      || {? {? _mp.isGroup()
            || 1
            || FUN.ask('Czy zakończyć rejestrację zwrotu wyposażenia pracownikowi?'@)
            ?}
         || KARO.STATUS:='Z';
            {? KARO.put()
            || _mp.save(exec('kind_out','#b_port'),'KARO',_karo);
               _mp.done()
            ?}
         ?}
      || _mp.cancel()
      ?};
      KARO.cntx_pop()
   ?};
   exec('blk_unlock','#table','KARO',_karo)

:: Tutaj nie powinno dojść, więc błąd
|| _mp.error('Błędny kontekst wywołania czynności %1.'@@['WYP_LWW_DZWR'])
?};
P.cntx_pop();
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Opis dla czynności rejestracji rejestracji zwrotu pracownikowi(WYP_LWW_DZWR)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_desc:='';
_keyRefs:=_mp.getRefs();
_in:=_mp.load(exec('kind_in','#b_port'));

_karo:=null();

:: jest rekord kluczowy to ustawiam odpowiednie KARO
{? obj_len(_keyRefs)>0
||
   {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];
      {? type_of(_kref)>0
      ||
         {? ref_name(_kref)=KARO.name()
         || _karo:=exec('FindAndGet','#table',KARO,_kref,,,null())
         ?}
      ?}
   !}
?};

:: jest parametr wejściowy KARO
{? _karo=null() & var_pres('KARO',_in)=type_of(null())
|| _karo:=_in.KARO
?};

{? _karo<>null()
|| _material:=exec('FindAndGet','#table',KARO,_karo,,"{? M=null() || MGRP().KOD || M().KTM ?}",'');
   _pracownik:=exec('FindAndGet','#table',KARO,_karo,,"P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE",'');
   _desc:='Zredaguj zwrot wyposażenia %1 od pracownika %2'@@[_material,_pracownik]
|| _desc:='Zredaguj zwrot wyposażenia'@@
?};
_desc


\karo_dolacz_proces
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Dołączanie rekordu do KARO - z pulpitu lub todo
::----------------------------------------------------------------------------------------------------------------------
_res:=null();
POMOC.MGRP:=null();
POMOC.MGRW:=null();
ZKARO.MGRP:=null();
VAR1.M:='';
KARO.cntx_psh();
KARO.clear();
KARO.blank();
KARO.win_edit('RED_ZWR');
ZKARO.RODZORED:=1;
{? KARO.edit("exec('karorr_ra','wyp_head')")
|| KARO.STATUS:='Z';
   KARO.KARO:=#ZKARO.KAROW;
   KARO.cntx_psh();
   KARO.clear();
   KARO.add();
   _res:=KARO.ref();
   KARO.cntx_pop()
?};
KARO.cntx_pop();
POMOC.MGRP:=null();
POMOC.MGRW:=null();
return(_res)


\karo_zwroc_akcja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Redakcja wyposażenia z okn
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env_karo:=params_get().context.env_karo;
params_set('env_karo',_env_karo);
_res:=exec('karow_sro','wyp_head');
_res


\karo_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Dołączanie rekordu do KARO - z obszaru
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='WYP_LWW_DZWR';
_params.AKCJA:='DOŁĄCZ';
_params.PROC_START:='T';
_params.CONTEXT:=obj_new('KARO','env_karo');
_params.CONTEXT.KARO:=null();
_env_karo:=params_get().env_karo;
_env_karo.MAT_EDIT:=1;
_params.CONTEXT.env_karo:=_env_karo;
exec('mp_run','#b__box',_params);

KARO.cntx_psh();
params_exec('karow_prfx','wyp_head',VAR.TRYBRODZ);
KARO.seek(ZKARO.KAROW);
grp_disp(KARO,'WER_R',0);
KARO.cntx_pop();

KARO.cntx_psh();
params_exec('st_refresh','wyp_head',0);
KARO.cntx_pop()


\karo_zwroc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Dołączanie rekordu do KARO - z obszaru
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='WYP_LWW_DZWR';
_params.AKCJA:='ZWRÓĆ';
_params.PROC_START:='T';
_params.CONTEXT:=obj_new('KARO','env_karo');
_params.CONTEXT.KARO:=KARO.ref();
_env_karo:=params_get().env_karo;
_env_karo.MAT_EDIT:=1;
_params.CONTEXT.env_karo:=_env_karo;
exec('mp_run','#b__box',_params);
params_exec('st_refresh','wyp_head')


\karo_dolacz_akcja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Redakcja wyposażenia z okna zwrotów. W kontekście rekord zwrotu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env_karo:=params_get().context.env_karo;
_env_karo.MAT_EDIT:=0;
params_set('env_karo',_env_karo);
_karo:=null();
{? exec('karor_db','wyp_head')
|| _karo:=exec('karor_dol','wyp_head')
?};
_karo


\karo_dolacz_stan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Redakcja wyposażenia z okna stanu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env_karo:=params_get().context.env_karo;
_env_karo.MAT_EDIT:=0;
params_set('env_karo',_env_karo);
_res:=null;
{? VAR.TRYBRODZ=1
|| _karo_stan:=_env_karo.STANG
|| _karo_stan:=_env_karo.STAN
?};

:: Wyświetlam okno wyboru wydania
KARO.cntx_psh();
::exec('karow_prfx','wyp_head',VAR.TRYBRODZ,VAR.TRYBPRAC);
KARO.clear();
KARO.win_sel('SLO_WYD');
{? VAR.TRYBRODZ=1
|| {? _karo_stan.MGRP<>null()
   || KARO.f_set('DATA',,'"KARO"."P"=:_a and ("KARO"."STATUS"=\'T\' or "KARO"."STATUS"=\'D\')
                         and "KARO"."TYP"=\'W\' and "KARO"."MGRP"=:_b',
                         P.ref(),exec('FindAndGet','#table',MGRP,_karo_stan.MGRP,MGRP.name(),'ref()',null()))
   || KARO.f_set('DATA',,'"KARO"."P"=:_a and ("KARO"."STATUS"=\'T\' or "KARO"."STATUS"=\'D\')
                         and "KARO"."TYP"=\'W\' and "KARO"."MGRP" is null',
                         P.ref())
   ?}
|| KARO.f_set('DATA',,'"KARO"."P"=:_a and ("KARO"."STATUS"=\'T\' or "KARO"."STATUS"=\'D\')
                       and KARO.TYP=\'W\' and KARO.M=:_b',
                       P.ref(),exec('FindAndGet','#table',M,_karo_stan.M,M.name(),'ref()',null()))
?};
{? KARO.f_first
|| {!
   |? {? KARO.IL<=exec('obl_zwr','wyp_head','W')
      || KARO.f_del()
      || KARO.f_next()
      ?}
   !}
?};
{? KARO.select()
|| ZKARO.KAROW:=KARO.ref();
   ZKARO.IL:=KARO.IL;
   _res:=KARO.ref()
?};
KARO.f_clear();
KARO.cntx_pop();
{? _res<>null()
||
   _res:=null();
   KARO.cntx_psh();
   M.cntx_psh();
   exec('set_r_border','wyp_head');
   _p:=ZKARO.KAROW().P;
   _mgrp:=ZKARO.KAROW().MGRP;
   _mgr:=ZKARO.KAROW().M().MGR;
   _mm:=ZKARO.KAROW().M;
   _ktm:=ZKARO.KAROW().M().KTM;
   _kh:=ZKARO.KAROW().KH;
::zawsze powrot na to samo stanowisko z ktorego wyszlo wydanie
   _mg:=ZKARO.KAROW().MG;
   _dk:=ZKARO.KAROW().DK;
   _srdk:=ZKARO.KAROW().SRDK;
   _prdk:=ZKARO.KAROW().PRDK;
   _dkc:=ZKARO.KAROW().DK_C;
   _rdkc:=ZKARO.KAROW().RDKC;
   _ile:=ZKARO.KAROW().IL;
   _refw:=ZKARO.KAROW;
   _wyd:=ZKARO.KAROW().GENDK='' & ZKARO.KAROW().TYP='W';
   M.cntx_pop();
   KARO.cntx_pop();
::teraz podstawienie danych do nowej pozycji
   KARO.blank();
   KARO.P:=_p;
   POMOC.MGRW:=HELP.MGR:=_mgr;
   KARO.MGRP:=_mgrp;
   VAR1.M:=_ktm;
   KARO.M:=_mm;
   KARO.KH:=_kh;
   KARO.MG:=_mg;
   KARO.IL:=ZKARO.IL;
   KARO.TYP:='Z';
   KARO.KARO:=#ZKARO.KAROW;
   KARO.DK:=_dk;
   KARO.SRDK:=_srdk;
   KARO.PRDK:=_prdk;
   KARO.DK_C:=_dkc;
   KARO.RDKC:=_rdkc;
   DK.cntx_psh();
   ND.cntx_psh();
   DK_C.cntx_psh();
   M_ATR.cntx_psh();
   {? KARO.SRDK<>''
   || DK.clear();
      DK_C.clear();
      M_ATR.clear();
      {? DK.seek(KARO.SRDK,8+KARO.SRDK)
      || ND.use(ref_name(DK.N));
         DK_C.use(DK.DK_C().name());
         DK_C.seek(DK.DK_C);
         M_ATR.seek(DK_C.M_ATR)
      || DK_C.blank(1);
         M_ATR.blank(1)
      ?}
   || DK_C.blank(1);
      M_ATR.blank(1)
   ?};
   KARO.win_edit('RED_ZWR');
   {? KARO.edit("exec('karorr_ra','wyp_head')")
   || KARO.STATUS:='Z';
      KARO.prefix();
      _odp:=KARO.add();
      _res:=KARO.ref();
      _il:=KARO.IL;
      {? _odp & _wyd
      || _opc:={? (_ile-_il)=0 || 0 || 3 ?};
         _nrk:=exec('update','rezerwacje','KARO',_refw,KARO.MG,KARO.M,_ile-_il,_srdk,,,_opc);
         exec('aktu_rez','rezerwacje',KARO.M,_nrk,_ile);
         exec('obl_stan','magazyn_stan',KARO.M,1,KARO.MG)
      ?}
   ?};
   DK.cntx_pop();
   ND.cntx_pop();
   DK_C.cntx_pop();
   M_ATR.cntx_pop()
?};
_res


\karo_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Poprawianie rekordu w KARO - z obszaru
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='WYP_LWW_DZWR';
_params.AKCJA:='POPRAW';
_params.UIDREF:=KARO.uidref();
_params.CONTEXT:=obj_new('KARO','env_karo');
_params.CONTEXT.KARO:=KARO.ref();
_env_karo:=params_get().env_karo;
_env_karo.MAT_EDIT:=0;
_params.CONTEXT.env_karo:=_env_karo;
exec('mp_run','#b__box',_params)


\karo_popraw_akcja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Redakcja wyposażenia z okn
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env_karo:=params_get().context.env_karo;
params_set('env_karo',_env_karo);
_karo:=null();
{? exec('karor_pb','wyp_head')
|| {? exec('blk_lock','#table','KARO',KARO.ref(),,,'Zapis obrotu wyposażeniem jest redagowany'@)
   || VAR1.M:=KARO.M().KTM;
      {? KARO.edit("exec('karorr_ra','wyp_head')")
      || _rdk:=KARO.KARO;
         _ile:=KARO.IL;
         _upd:=0;
         KARO.cntx_psh();
         KARO.prefix();
         {? KARO.seek(_rdk,) & KARO.TYP='W' & KARO.GENDK=''
         || _upd:=1;
            _ref:=KARO.ref();
            _mag:=KARO.MG;
            _mat:=KARO.M;
            _srdk:=KARO.SRDK;
            _ile:=KARO.IL-_ile
         ?};
         KARO.cntx_pop();
         _ok:=KARO.put();
         {? _ok & _upd
         || KARO.cntx_psh();
            _nrk:=exec('update','rezerwacje','KARO',_ref,_mag,_mat,_ile,_srdk,,,3);
            exec('aktu_rez','rezerwacje',_mat,_nrk,fabs(_ile));
            exec('obl_stan','magazyn_stan',_mat,1,_mag);
            KARO.cntx_pop()
         ?};
         _karo:=KARO.ref()
      ?}
   ?};
   exec('blk_unlock','#table','KARO',KARO.ref())
?};
_karo


\karo_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Ususwanie rekordu z KARO - z obszaru
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='WYP_LWW_DZWR';
_params.AKCJA:='USUŃ';
_params.UIDREF:=KARO.uidref();
_params.CONTEXT:=obj_new('KARO','env_karo');
_params.CONTEXT.KARO:=KARO.ref();
_params.CONTEXT.env_karo:=params_get().env_karo;
exec('mp_run','#b__box',_params);

KARO.cntx_psh();
params_exec('karow_prfx','wyp_head',VAR.TRYBRODZ);
KARO.seek(ZKARO.KAROW);
grp_disp(KARO,'WER_R',0);
KARO.cntx_pop();

KARO.cntx_psh();
params_exec('st_refresh','wyp_head',0);
KARO.cntx_pop()


\karo_usun_akcja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Redakcja wyposażenia z okn
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env_karo:=params_get().context.env_karo;
params_set('env_karo',_env_karo);
_ok:=0;
_karo:=KARO.ref();
{? exec('blk_lock','#table','KARO',_karo,,,'Zapis obrotu wyposażeniem jest redagowany'@)
|| {? exec('karor_ub','wyp_head')
   || _rdk:=KARO.KARO;
      _ile:=KARO.IL;
      _upd:=0;
      KARO.cntx_psh();
      KARO.prefix();
      {? KARO.seek(_rdk,) & KARO.TYP='W' & KARO.GENDK=''
      || _upd:=1;
         _ref:=KARO.ref();
         _mag:=KARO.MG;
         _mat:=KARO.M;
         _srdk:=KARO.SRDK;
         _zwr:=exec('obl_zwr','wyp_head')-_ile;
         _ile:=KARO.IL-_zwr
      ?};
      KARO.cntx_pop();
      _ok:=KARO.del(,1);
      {? _ok & _upd
      || KARO.cntx_psh();

         _nrk:=exec('update','rezerwacje','KARO',_ref,_mag,_mat,_ile,_srdk,,,3);
         exec('aktu_rez','rezerwacje',_mat,_nrk,_ile);
         exec('obl_stan','magazyn_stan',_mat,1,_mag);
         KARO.cntx_pop()
      ?}
   ?}
?};
exec('blk_unlock','#table','KARO',_karo);
_ok


\karo_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Zakańczanie redakcji KARO - z obszaru
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='WYP_LWW_DZWR';
_params.AKCJA:='ZAKOŃCZ';
_params.UIDREF:=KARO.uidref();
_params.CONTEXT:=obj_new('KARO','env_karo');
_params.CONTEXT.KARO:=KARO.ref();
_params.CONTEXT.env_karo:=params_get().env_karo;
exec('mp_run','#b__box',_params)

:Sign Version 2.0 jowisz:1045 2023/12/12 06:51:04 611c06edebe34498f4336d10faffa250d3524159bdbf41ff089e27566391a262cd786714ebe4773519802ad21273f6f90c3ecb22d0e44b5d8ec183e39b1f58d0db05cb9ea6ecb6fed2e707e033d00539c46fd9ec0354ccdf5532fa940dba43f266b94ca67b6e95a5b60c8b00c96d48225c48e6e6f528c3e40554c5934b983b27
