:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ppl_pll_rppk.fml
:: Utworzony: 01.02.2016
:: Autor: TMR
::======================================================================================================================
:: Zawartość: Obsługa czynności PPL_PLL_RPPK - Przyg. podziału kosztów
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Przyg. podziału kosztów - główna formuła czynności.
::----------------------------------------------------------------------------------------------------------------------
::# kind=WE,   symbol=O,      type=_O,       name=Wskazanie na listę płac,     required=T, keyref=T
::
:: PARAMETRY WY:
::# kind=WY,   symbol=O,      type=_O,       name=Wskazanie na listę płac,     required=N
::# kind=WY,   symbol=RESULT, type=STRING,   name="Wynik czynności (OK, BŁĄD)", required=N
::
::# properties=SERVICE
::# permissions=F_ZATR,UD_SKL
::# parses=exec('parses','!ppl_pll_rppk')

_par:=params_get();
params_set(_par);
_mp:=_par.mp;
_in:=_par.in;
_out:=_par.out;

:: podczytanie wartości z parametrów wejściowych
_o_ref:={? var_pres('O',_in)=type_of(null()) || _in.O || null() ?};

:: sprawdzenie parametrów wyjściowych
{? var_pres('RESULT',_out)<>type_of(~~) & var_pres('RESULT',_out)<>type_of('') || return() ?};

:: powołanie potrzebnych obiektów
exec('dek_decl','dekret_aut');
exec('fl_decl','dekret_aut');
exec('sd_decl','dekret_aut');

_result:='';

_uidref:=exec('ref2uid','#table',_in.O);
{? _uidref=''
|| _result:=exec('error','!ppl_pll_rppk','Brak wskazania na kluczowy rekord czynności.'@);
   _mp.error(_result)
||
   _value:=exec('przygotuj','!ppl_pll_rppk',_in.O);
   {? type_of(_value)=type_of('')
   || _result:=_value;
::    Jeżeli zwrócony został komunikat o błędzie i jest to tryb serwisowy to zakończ
      {? _mp.isService()
      || _out.RESULT:='BŁĄD';
         _out.O:=_in.O;
         _mp.save(,_out);
         _mp.done()
      ?}
   |? _value
   || _out.RESULT:='OK';
      _out.O:=_in.O;
      _mp.save(,_out);
      _mp.done()
   || {? _mp.isMicro()
      || _mp.done()
      || _mp.keep()
      ?}
   ?}
?};

{? _result<>''
:  Obsługa błędów
|| {? ~_mp.isService()
   || FUN.emsg(_result)
   ?}
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Formuła opisu zadania.
::   WE:
::   WY: opis czynności na liście zadań
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));
_o_ref:={? var_pres('O',_in)=type_of(null()) || _in.O || null() ?};
_lt:='';

_desc:='';
O.cntx_psh();
O.prefix();
{? O.seek(_o_ref)
|| _lt+=~-O.LT
?};
O.cntx_pop();

{? +_lt
|| 'Przygotuj podział kosztów dla listy płac (%1)'@@[_lt]
|| 'Przygotuj podział kosztów dla listy płac'@@
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Zwraca treść komunikatu błędu
::   WE: [_a] [STRING] - dodatkowy tekst błędu
::   WY: treść komunikatu
::----------------------------------------------------------------------------------------------------------------------
_result:='Przygotowanie podziału kosztów nie jest możliwe.';
_text:={? var_pres('_a')=type_of('') || _a || '' ?};
_result+='\n'+_text;
_result


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Formuła ustalająca wartości parametrów sesji.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_mp:=params_get().mp;

{? ~_mp.isService() & var_pres('O',_in)=type_of(null()) & _in.O<>null()
|| _args:=__PARSES.args('ListaPłac');
   _args.REF:=_in.O;
   __PARSES.setVal('ListaPłac',_args)
?};
1


\setPorts
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Ustawia wymagane parametry wejściowe dla czynności jeśli czynność była uruchomiona z obszaru roboczego
::   WE: _a [OBJECT] - obiekt z parametrami zgodny z exec('mp_run_a','#b__box')
::   WY
::----------------------------------------------------------------------------------------------------------------------
_params:={? var_pres('_a')=117 || _a || return(~~) ?};
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'O',VAR.O);
~~


\przygotuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Przygotowuje podział kosztów dla wskazanej listy
::   WE: _a [REFERENCE] - Wskazanie na listę płac
::   WY: 0/1 lub napis będący komunikatem błędu
::  OLD: \wyp_cech/godziny.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_o_ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};

_mp:=params_get().mp;
_isMicro:=_mp.isMicro();
_isService:=_mp.isService();

{? (_isMicro | _mp.pathArea()) & ~_isService
|| {? ~FUN.ask('Czy rozpocząć przygotowanie podziału kosztów?'@)
   || return(_result)
   ?}
?};

_time_start:=_time_end:=time();
_o_sym:='';
_o_date:=date(0,0,0);

KT.cntx_psh();
O.cntx_psh();
O.prefix();
{? O.seek(_o_ref)
||
   _o_sym:=O.T().T;
   _o_date:=date(O.R,O.M,0)$8;
   _dalej:=0;

   exec('wybierz','lista_plac',_o_ref);

   {? ~exec('jest_ls','lista_plac',_o_ref)
   || _error_text:='Brak naliczonych składników na liście płac "%1".'@ [~-O.LT] + ' '+
                   'Przygotowanie podziału kosztów nie zostało przeprowadzone.'@;
      _result:=_error_text
   || {? exec('is_all_R_has_ATRDEFWD','!ppl_pll_rppk',~_isService)
      || _dalej:=1
      || _result:='Brak zdefiniowanych cech dla wszystkich rubryk z atrybutem "%1"'@ ['10013']
      ?}
   ?};

   {? _dalej
   ||
      KOMM.init(255);
      P.cntx_psh();
      LS.cntx_psh();
      NDX:=LS.ndx_tmp(,1,'RB',,1,'P',,1);
      LS.index(NDX);

::    usunięcie dotychczasowych zapisów
      exec('delete_ATRUSE_L','!ppl_pll_rppk',O.R,O.M,O.LT);
::    ustawienie masek
      ATR_WYRL.cntx_psh();
      ATRUSE_L.cntx_psh();
      ATR_WYRL.use('kwk'+'l'+($O.R+2)+form(O.M,-2));
      ATR_WYRL.index('LP');

      ATRUSE_L.use('kak'+'l'+($O.R+2)+form(O.M,-2));
      ATRUSE_L.index('LSPRRB');


      {? var_pres('ZAPIS')<100 || ZAPIS:=obj_new(@.CLASS.DEK_CLASS) ?};
      {? var_pres('SD_OB')<100 || SD_OB:=obj_new(@.CLASS.SD_CLASS) ?};
      set_virt(WAR,'set_fld',".OPIS:=~(-O.LT)+' '+R.RT;.ANALIT1:='L'+($O.R+2)+('0'+$O.M+2)+O.T().T", -1,-1);

      R.cntx_psh();
      R.index('RUBKOD');
      R.prefix();
      G.cntx_psh();
      _podz_rml:=G.ndx_tmp('',1,
         'FIRMA',,,
         'R',,,
         'M',,,
         'LT',,,
         'K','RN',,
         'P',,
      );
      _podz_rlt:=G.ndx_tmp('',1,
         'FIRMA',,,
         'R',,,
         'LT',,,
         'K','RN',,
         'P',,
      );

      {? ~_isService || PROGRESS.set(R.size()*2,'Przygotowanie podziału kosztów listy płac'@) ?};

      {! _ind:=1..2
      |!
         {? _ind=1
         ||
::  (1) - w pierwszym kroku sprawdzamy podział miesięczny
            G.use('godz'+('0000'+$O.R+4));
            G.index(_podz_rml);
            exec('create_podz_TAB','!ppl_pll_rppk')
          ||
::  (2) - w drugim kroku sprawdzamy podział stały
            G.use('godzstal');
            G.index(_podz_rlt)
          ?};
          FLAGA:=_ind;
          KWOTA:=0;
          PR_KWOTA:=0;
          PR_PROC:=0;
          PROJEKT:=null();
          {? R.first()
          || {!
             |? echo('Rubryka: %1'@ [R.RT]);
                exec('uzu_cec','cechy_dodatkowe','R');
                {? ~_isService || PROGRESS.next() ?};
                R.next()
             !}
          ?}
      !};
      echo();
      {? ~_isService || PROGRESS.close() ?};
      _time_end:=time();

      {? _isService
      || _result:=1
      ||
::       sprawdzenie komunikatów
         KOMM.select(,,,,,1);
         {? ~KOMM.TABisOK || KOMM.transfer() ?};
         KOMM.TAB.clear();
         {? KOMM.TAB.first()
         || _result:='Wystąpiły błędy podczas przygotowywania podziału.'
         || _result:=1
         ?}
      ?};
      ATRUSE_L.cntx_pop();
      ATR_WYRL.cntx_pop();
      G.cntx_pop();
      G.ndx_drop();
      R.cntx_pop();
      P.cntx_pop();
      &FLAGA;
      &KWOTA;
      &PR_KWOTA;
      &PR_PROC;
      &PROJEKT;
      exec('delete_podz_TAB','!ppl_pll_rppk');
      LS.ndx_drop(NDX); &NDX;
      LS.cntx_pop();
      obj_del(ZAPIS); &ZAPIS; obj_del(SD_OB); &SD_OB
   ?}
?};
O.cntx_pop();
KT.cntx_pop();

:: wyświetlenie wyniku przetwarzania z akcją "Zakończ" jeżli nie było błędów
{? ~_isService
||
   _REP:=tab_tmp(,
      'RESULT','STRING[200]','Wynik przetwarzania',
      'T_SUM','TIME','Całkowity czas przygotowania podziału'
   );

   _REP.T_SUM:=_time_end-_time_start;

   _act:=obj_new('done');
   params_set('act',_act);
   _act.done:=0;

:: okienko redagowania
   _wnd:=_REP.mk_edit('',0);
   _REP.win_esep(_wnd,'Lista płac %1 %2'@[_o_sym,_o_date]);
   {? type_of(_result)=type_of('')
   || _REP.RESULT:=_result;
      _width:={? +_REP.RESULT<50 || 50 || +_REP.RESULT ?};
      _width:={? _width>150 || 150 || +_REP.RESULT ?};
      _REP.win_efld(_wnd,,'RESULT',,,_width)
   || _REP.win_efld(_wnd,,'T_SUM',,,10);
      {? _result=1
      || _REP.win_ebtn(_wnd,'text='+exec('text_red_zakoncz','#window','PKD_A')+',display='+$(~_mp.isMicro()),
                      "params_get().act.done:=1;'key:Esc'")
      ?}
   ?};

   _REP.win_ebtn(_wnd,'text=&OK,display='+$(~_mp.isMicro())+'',"'key:Esc'");

:: okienko grupowe - konieczne do wyszarzania przycisków
   _grp:=_REP.grp_make('Podział kosztów'@,,,50,10,,,'normal');
   _REP.grp_edit(_grp,,_wnd,,,,,,'maximized',,1);
   _REP.win_sel(_grp);
   _REP.select();

   _act.done
||
   _result
?}


\delete_ATRUSE_L
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Usunięcie podziału kosztów dla wskazanej listy płac
::   WE: _a [INTEGER] - rok listy połac
::       _b [INTEGER] - miesiąc listy płac
::       _c [STRING]  - symbol listy płac
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_rok:={? var_pres('_a')=type_of(0)  || _a   || return(~~) ?};
_msc:={? var_pres('_b')=type_of(0)  || _b   || return(~~) ?};
 _lt:={? var_pres('_c')=type_of('') || ~-_c || return(~~) ?};

ATR_WYRL.cntx_psh();
ATR_WYRL.use('kwk'+'l'+($_rok+2)+form(_msc,-2));
ATR_WYRL.index('LP');

ATRUSE_L.cntx_psh();
ATRUSE_L.use('kak'+'l'+($_rok+2)+form(_msc,-2));
ATRUSE_L.index('LSPRRB');

ATRUSE_L.prefix(exec('ref_firma','ustawienia'),_lt);
{? ATRUSE_L.first()
|| {!
   |? ATR_WYRL.prefix(ATRUSE_L.ref());
      {? ATR_WYRL.first()
      || {! |?  ATR_WYRL.del() !}
      ?};
      ATRUSE_L.del()
   !}
?};
ATRUSE_L.cntx_pop();
ATR_WYRL.cntx_pop();
~~


\create_podz_TAB
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Tworzy tabelę __TAB wykorzystywaną do podziału kosztów
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__TAB')>100
|| obj_del(__TAB)
?};
__TAB:=tab_tmp(1,
               'PRAC','INTEGER','Ref pracownika',
               'RODZAJ','STRING[1]','Rodzaj',
               'SECTION','INTEGER','Nr sekcji w KOMM-ie'
              );
__TAB.index(__TAB.ndx_tmp('Ref prac',0,'PRAC',,0,'RODZAJ',,0))


\delete_podz_TAB
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Kasuje tabelę __TAB wykorzystywaną do podziału kosztów
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__TAB')>100
|| obj_del(__TAB);
   &__TAB
?}


\is_all_R_has_ATRDEFWD
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Sprawdza czy wszystkie rubryki z atrubutu 10013 mają uzupełnione cechy
::   WE: _a [INTEGER] - czy wyświetlać komunikaty (domyślnie tak)
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_msg:={? var_pres('_a')=type_of(0) || _a || 1 ?};
_dtk:=date(O.R,O.M,0);

:: rubryki kosztów do podzialu z atrybutu 10013.
_tabR:=__RUB.sys_rub(10013,_dtk);

_size:=_tabR.size();
_count:=0;

:: tworzymy nową unikatowa zmienna globalna i przypisujemy do niej obiekt kalsy JCQ
{? _msg
|| _var:=VAR_DEL.new(,"obj_new(@.CLASS.JCQ)");
   _KOMM:=($_var)();
   _KOMM.init(255)
?};

{? _tabR.first()
|| ATRDEFWD.cntx_psh();
   ATRDEFWD.index('AKTYWNY');
   {!
   |? ATRDEFWD.prefix('T',R.name(),_tabR.R);
      {? ATRDEFWD.first()
      || _count+=1
      || {? _msg
         || _komm:='Brak zdefiniowanych cech dla składnika: "%1"'[$_tabR.RN+' - ' +_tabR.RT];
            _KOMM.add(_komm,4)
         ?}
      ?};
      _tabR.next()
   !};
   ATRDEFWD.cntx_pop()
|| {? _msg || FUN.emsg('Brak zdefiniowanych rubryk dla atrybutu "10013 - Koszty do podziału"'@) ?}
?};

_result:={? _size || _count=_size || 0 ?};

{? _msg & _count<>_size
|| _KOMM.select(,,,,,1);
:: usuwamy dynamicznie powolana zmienna globalna
   {? var_pres('_var')>0 || VAR_DEL.delete(_var) ?}
?};

_result

:Sign Version 2.0 jowisz:1045 2023/08/24 13:12:17 d6ea4c6c7515a76e0b410c1e594ebde70aaf6979a2fb6f842abf198730f2d03cb0fc40eda129332a16c040fa8d1f1fd3db982dd455f980551f9440c293029464c96deaa6d5e113215d3617857d70e391ae3ad4be9e06ad3d04ab64dae0b5be4719d5ada9601d2bfb1ba276ec4e5959328029b9c7d67e97e9979c2c699de7fcdb
