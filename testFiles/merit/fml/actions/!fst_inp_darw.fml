:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fst_inp_darw.fml
:: Utworzony: 30.03.2016
:: Autor: PJ
::======================================================================================================================
:: Zawartość: Formuły czynności FST_INP_DARW - Wpr. arkuszy inwentar. środków
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wpr. arkuszy inwentar. środków - główna formuła czynności FST_INP_DARW.
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS
_akcja:=-menu_txt();
{? _akcja='zatwierdź'                || exec('srxd_zatwierdz','!fst_inp_darw')
|? _akcja='popraw'                   || exec('srxd_popraw','!fst_inp_darw')
|? _akcja='zatwierdź jako niedobór'  || exec('srxd_niedobor','!fst_inp_darw')
|? _akcja='dołącz nadmiar'           || exec('srxd_nadmiar','!fst_inp_darw')
|? _akcja='anuluj zatwierdzenie'     || exec('srxd_anuluj_zat','!fst_inp_darw')
?}


\srxd_blank
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Wypełnia pola tabeli SRXD wartościami z rejestru stanu
::----------------------------------------------------------------------------------------------------------------------
SRXD.DZ:=SRST.SRSR().DZ;
SRXD.GR:=1+SRST.GR().GR;
SRXD.GRS:=SRST.GR;
SRXD.KIND:=SRST.KIND;
SRXD.TREE:=null;
SRXD.GRP:=SRST.GRP;
SRXD.NF:=SRST.SRSR().NF;
SRXD.NRI:=SRST.NRI;
SRXD.NST:=SRST.NST;
SRXD.JORG:=SRXD.JORG_N:=SRST.JORG;
SRXD.ODD:=SRXD.ODD_N:=SRST.ODD;
SRXD.OSOBA:=SRXD.OSOBA_N:=SRST.OSOBA;
SRXD.PRC:=SRXD.PRC_N:=SRST.P;
SRXD.POM:=SRXD.POM_N:=SRST.POM;
SRXD.WARP:=SRST.WARP;
SRXD.WARF:=SRST.WARF;
SRXD.WARD:=SRSR.WARD;
SRXD.SRXA:=SRXA.ref();
SRXD.SRXI:=SRXA.SRXI;
SRXD.STATUS:='N';
SRDO_POM.PRCD:=EDIT_ES.PRCNAZ_N:=SRST.P().OSOBA().NAZWISKO;
SRDO_POM.PSTN:=EDIT_ES.STNAZ:=SRST.P().ST().ST;
SRDO_POM.PWYD:=EDIT_ES.WYDZNAZ:=SRST.P().WYDZIAL().SYMBOL


\srxd_generuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła generuje stany środków z danych wg definicji arkusza inwentaryzacyjnego
::   WE: _a - jeżeli _a i _a=1 to generowanie bezobługowe
::----------------------------------------------------------------------------------------------------------------------
{? SRXA.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return()
?};
{? SRXA.STATUS='T'
|| FUN.emsg('Bieżący arkusz jest zamknięty, generowanie pozycji nie jest możliwe.'@);
   return()
?};
SRXD.index('STATUS');
SRXD.prefix(SRXA.ref(),'D');
_size_d:=SRXD.size();
SRXD.index('SRXD');
SRXD.prefix(SRXA.ref());
_size:=SRXD.size();
{? _size>0 & _size>_size_d
|| FUN.emsg('Arkusz zawiera pozycje (nienadmiarowe), należy najpierw anulować istniejące pozycje.'@);
   return()
?};

SRD.KOMM:='T';
KOMM.init(150,,'Uwagi dotyczące generowania pozycji arkusza.'@);

{? SRXA.r_lock(1,1,1)
|| {? (_=0 | _a<>1) & ~FUN.ask('Wygenerować pozycje arkusza?'@)
   || SRXA.r_unlock();
      return()
   ?};

   _okr:=SRXA.SRXI().OKRO_F;
   SRST.cntx_psh();
:: j. księgowa
   {? SRXA.ODD<>null & SRXA.JORG=null & SRXA.POM=null & SRXA.OSOBA=null
   || {? SRXA.SRXI().R='W'
      || SRST.index('OKR_O_W');
         SRST.prefix(_okr,SRXA.ODD)
      || SRST.index('TREE');
         SRST.prefix(SRXA.SRXI().R,_okr,SRXA.ODD)
      ?}
:: j. organizacyjna
   |? SRXA.JORG<>null & SRXA.POM=null & SRXA.OSOBA=null
   || {? SRXA.SRXI().R='W'
      || SRST.index('JORG');
         SRST.prefix(_okr,SRXA.JORG)
      || SRST.index('JORG');
         SRST.prefix(_okr,SRXA.JORG,SRXA.SRXI().R)
      ?}
:: j. ksiegowa, j. organizacyjna i pomieszczenie
   |? SRXA.ODD<>null & SRXA.JORG<>null & SRXA.POM<>null & SRXA.OSOBA=null
   || {? SRXA.SRXI().R='W'
      || SRST.index('JORGPOM');
         SRST.prefix(_okr,SRXA.JORG,SRXA.POM)
      || SRST.index('JORGPOM');
         SRST.prefix(_okr,SRXA.JORG,SRXA.POM,SRXA.SRXI().R)
      ?}
:: j. księgowa i pomieszczenie
   |? SRXA.ODD<>null & SRXA.JORG=null & SRXA.POM<>null & SRXA.OSOBA=null
   || {? SRXA.SRXI().R='W'
      || SRST.index('ODDPOM');
         SRST.prefix(_okr,SRXA.POM,SRXA.ODD)
      || SRST.index('ODDPOM');
         SRST.prefix(_okr,SRXA.POM,SRXA.ODD,SRXA.SRXI().R)
      ?}
:: pomieszczenie
   |? SRXA.ODD=null & SRXA.JORG=null & SRXA.POM<>null & SRXA.OSOBA=null
   || {? SRXA.SRXI().R='W'
      || SRST.index('POM_R');
         SRST.prefix(_okr,SRXA.POM)
      || SRST.index('POM_R');
         SRST.prefix(_okr,SRXA.POM,SRXA.SRXI().R)
      ?}
:: jeden wspólny arkusz
   |? SRXA.ODD=null & SRXA.JORG=null & SRXA.POM=null & SRXA.OSOBA=null
   || {? SRXA.SRXI().R='W'
      || SRST.index('OKR_O_W');
         SRST.prefix(_okr)
      || SRST.index('TREE');
         SRST.prefix(SRXA.SRXI().R,_okr)
      ?}
:: j. księgowa, użytkownik
   |? SRXA.ODD<>null & SRXA.JORG=null & SRXA.POM=null & SRXA.OSOBA<>null
   || {? SRXA.SRXI().R='W'
      || SRST.index('USR1');
         SRST.prefix(_okr,SRXA.ODD,SRXA.OSOBA)
      || SRST.index('USR1');
         SRST.prefix(_okr,SRXA.ODD,SRXA.OSOBA,SRXA.SRXI().R)
      ?}
:: j. organizacyjna, użytkownik
   |? SRXA.JORG<>null & SRXA.POM=null & SRXA.OSOBA<>null
   || {? SRXA.SRXI().R='W'
      || SRST.index('USR2');
         SRST.prefix(_okr,SRXA.JORG,SRXA.OSOBA)
      || SRST.index('USR2');
         SRST.prefix(_okr,SRXA.JORG,SRXA.OSOBA,SRXA.SRXI().R)
      ?}
:: j. ksiegowa, j. organizacyjna, pomieszczenie, użytkownik
   |? SRXA.ODD<>null & SRXA.JORG<>null & SRXA.POM<>null & SRXA.OSOBA<>null
   || {? SRXA.SRXI().R='W'
      || SRST.index('USR3');
         SRST.prefix(_okr,SRXA.JORG,SRXA.POM,SRXA.OSOBA)
      || SRST.index('USR3');
         SRST.prefix(_okr,SRXA.JORG,SRXA.POM,SRXA.OSOBA,SRXA.SRXI().R)
      ?}
:: j. księgowa, pomieszczenie, użytkownik
   |? SRXA.ODD<>null & SRXA.JORG=null & SRXA.POM<>null & SRXA.OSOBA<>null
   || {? SRXA.SRXI().R='W'
      || SRST.index('USR4');
         SRST.prefix(_okr,SRXA.POM,SRXA.ODD,SRXA.OSOBA)
      || SRST.index('USR4');
         SRST.prefix(_okr,SRXA.POM,SRXA.ODD,SRXA.OSOBA,SRXA.SRXI().R)
      ?}
:: pomieszczenie, użytkownik
   |? SRXA.ODD=null & SRXA.JORG=null & SRXA.POM<>null & SRXA.OSOBA<>null
   || {? SRXA.SRXI().R='W'
      || SRST.index('USR5');
         SRST.prefix(_okr,SRXA.POM,SRXA.OSOBA)
      || SRST.index('USR5');
         SRST.prefix(_okr,SRXA.POM,SRXA.OSOBA,SRXA.SRXI().R)
      ?}
:: użytkownik
   |? SRXA.ODD=null & SRXA.JORG=null & SRXA.POM=null & SRXA.OSOBA<>null
   || {? SRXA.SRXI().R='W'
      || SRST.index('USR_ONLY');
         SRST.prefix(_okr,SRXA.OSOBA)
      || SRST.index('USR_ONLY');
         SRST.prefix(_okr,SRXA.OSOBA,SRXA.SRXI().R)
      ?}
   ?};
   {? SRST.first()
   || _size:=SRST.size();
      _licznik:=0;
      progress(0,'Trwa generowanie danych (arkusz %1)'@[$SRXA.NR],'Arkusz inwentaryzacji'@,0);
      {! |?
         _licznik+=1;
         _procent:=ceil((_licznik/_size)*100);
         _txt:='Trwa generowanie danych (arkusz %1)... %2 %%'@[$SRXA.NR,form(_procent)];
         progress(_procent,_txt,'Arkusz inwentaryzacji'@,0);
         {? SRST.R<>'S' & SRST.KIND='T'
         ||
:: test czy środek nie został już wygenerowany w innym arkuszu
            _gen:=exec('test_arkuszy','!fst_inp_darw',SRST.NRI,SRST.ODD);
            _lt:=exec('test_likwidacja','!fst_inp_darw',_okr);
            {? ~_gen & ~_lt
            || {? SRST.SRSR().DE<=SRXI.DS
               || SRXD.blank();
                  exec('srxd_blank','!fst_inp_darw');
                  SRXD.add();
:: dla zestawów dodawanie elementów składowych
                  {? SRST.GRP='T'
                  || _tree:=SRXD.ref();
                     _ref:=SRST.ref();
                     _r:=SRST.R;
                     _odd:=SRST.ODD;
                     SRST.cntx_psh();
                     SRST.index('TREE');
                     SRST.prefix(_r,_okr,_odd,_ref);
                     {? SRST.first()
                     || {! |?
                           SRXD.blank();
                           exec('srxd_blank','!fst_inp_darw');
                           SRXD.TREE:=_tree;
                           SRXD.add();
                           SRST.next()
                        !}
                     ?};
                     SRST.cntx_pop()
                  ?}
               ?}
            ?}
         ?};
         SRST.next()
      !};
      prgs_clr();
      SRXD.first()
   ?};
   SRST.cntx_pop();
   SRXA.r_unlock()
|| KOMM.add('Arkusz spisowy zablokowany przez innego użytkownika, generowanie danych niemożliwe.'@)
?};
{? ~KOMM.empty() || KOMM.select() ?};
SRD.KOMM:='N'


\srxd_anuluj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Anulowanie danych z arkusza inwentaryzacyjnego
::----------------------------------------------------------------------------------------------------------------------
{? SRXA.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return()
?};
{? SRXA.STATUS='T'
|| FUN.emsg('Bieżący arkusz jest zamknięty, anulowanie pozycji nie jest możliwe.'@);
   return()
?};

:: weryfikacja statusu pozycji arkusza
SRXD.cntx_psh();
SRXD.index('STATUS');
SRXD.prefix(SRXA.ref());
_size:=SRXD.size();
SRXD.prefix(SRXA.ref(),'N');
_size2:=SRXD.size();
SRXD.cntx_pop();
{? _size2<_size
|| FUN.emsg('Arkusz spisowy zawiera pozycje zatwierdzone, nadmiarowe lub niedobory '
            'dlatego nie można ich anulować.'@);
   return()
?};

_dalej:=1;
SRXD.index('SRXD');
SRXD.prefix(SRXA.ref());
{? ~SRXD.first()
|| FUN.emsg('Bieżący arkusz nie zawiera pozycji.'@);
   return()
|| SRXD.cntx_psh();
   SRXD.index('DOK_W');
   SRXD.prefix(SRXA.ref(),'T');
   {? SRXD.first()
   || FUN.emsg('Arkusz zawiera pozycje dla których wygenerowano dokumenty wartościowe.'
               'Anulowanie pozycji arkusza nie jest możliwe.'@);
      _dalej:=0
   ?};
   SRXD.index('DOK_L');
   SRXD.prefix(SRXA.ref(),'T');
   {? SRXD.first()
   || FUN.emsg('Arkusz zawiera pozycje dla których wygenerowano dokumenty zmiany właściwości.'
               'Anulowanie pozycji arkusza nie jest możliwe.'@);
      _dalej:=0
   ?};
   SRXD.cntx_pop()
?};

{? _dalej
|| {? ~FUN.ask('Anulować pozycje arkusza?'@)
   || _dalej:=0
   ?}
?};

{? ~_dalej || return() ?};

do();
   SRXD.prefix(SRXA.ref(),null);
   {? SRXD.first()
   || {! |?
         _tree:=SRXD.ref();
         SRXD.cntx_psh();
         SRXD.prefix(SRXA.ref(),_tree);
         {? SRXD.first()
         || {! |? SRXD.del() !}
         ?};
         SRXD.cntx_pop();
         SRXD.get();
         SRXD.del()
      !}
   ?};
end()


\srxd_zatwierdz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zatwierdza pozycje arkusza inwentaryzacyjnego
::----------------------------------------------------------------------------------------------------------------------
_id:=SRXD.NRI+' ('+SRXD.ODD().OD+'). ';
{? SRXA.SRXI().STATUS='T'
|| _txt:='Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@;
   {? SRD.KOMM<>'T' || FUN.emsg(_txt) || KOMM.add(_id+_txt) ?};
   return()
?};
{? SRXA.STATUS='T'
|| _txt:='Arkusz inwentaryzacyjny jest zamknięty, modyfikacja arkusza nie jest możliwa'@;
   {? SRD.KOMM<>'T' || FUN.emsg(_txt) || KOMM.add(_id+_txt) ?};
   return()
?};
{? SRXD.STATUS='T' | SRXD.STATUS='P'
|| _txt:='Bieżąca pozycja arkusza jest już zatwierdzona, lub zatwierdzona ze zmianami.'@;
:: dla akcji grupowej nie zapisuje informacji, by uniknąć zaśmiecania tabeli komunikatów
   {? SRD.KOMM<>'T' || FUN.emsg(_txt) ?};
   return()
?};
{? SRXD.STATUS='Z'
|| _txt:='Bieżąca pozycja arkusza została już zatwierdzona jako niedobór.'@;
   {? SRD.KOMM<>'T' || FUN.emsg(_txt) || KOMM.add(_id+_txt) ?};
   return()
?};
{? SRXD.STATUS='D'
|| _txt:='Bieżąca pozycja arkusza jest środkiem nadmiarowym i nie podlega zatwierdzaniu.'@;
   {? SRD.KOMM<>'T' || FUN.emsg(_txt) || KOMM.add(_id+_txt) ?};
   return()
?};
{? SRXD.GRP='T'
|| _grp:='N';
   {? SRD.KOMM<>'T'
   || _txt:='Pozycja jest zestawem środków, zatwierdzić także elementy składowe zestawu?'@;
      {? FUN.ask(_txt) || _grp:='T' ?}
   || _grp:='T';
      _txt:='Pozycja jest zestawem środków, zatwierdzone zostały także elementy składowe zestawu.'@;
      KOMM.add(_id+_txt)
   ?}
?};
SRXD.STATUS:='T';

:: utwrzenie zapisu w automatycznym arkuszu z natury
{? SRXD.SRXP=null
|| SRXD.SRXP:=exec('srxp_add_auto','fst',SRXD.NRI,SRXD.NST,SRXD.JORG,SRXD.ODD,SRXD.POM,SRXD.OSOBA)
?};

SRXD.put();
{? SRXD.GRP='T' & _grp='T'
|| SRXD.cntx_psh();
   _tree:=SRXD.ref();
   SRXD.index('SRXD');
   SRXD.prefix(SRXD.SRXA,_tree);
   {? SRXD.first()
   || {? SRD.KOMM='N'
      || SRD.KOMM:='T';
         KOMM.init(150,,'Uwagi dotyczące zatwierdzanych pozycji arkusza.'@)
      ?};
      {! |?
         exec('srxd_zatwierdz','!fst_inp_darw');
         SRXD.next()
      !};
      {? SRXD.sel_size()=0
      || {? ~KOMM.empty() || KOMM.select() ?};
         SRD.KOMM:='N'
      ?}
   ?};
   SRXD.cntx_pop()
?}


\srxd_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła poprawia pozycję arkusza inwentaryzacyjnego
::----------------------------------------------------------------------------------------------------------------------
{? SRXA.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return()
?};
{? SRXA.STATUS='T'
|| FUN.emsg('Arkusz inwentaryzacyjny jest zamknięty, modyfikacja arkusza nie jest możliwa'@);
   return()
?};
{? SRXD.STATUS='N'
|| FUN.emsg('Należy zatwierdzić pozycję przed modyfikacją danych.'@);
   return()
?};

{? SRXD.r_lock(1,1,1)
||
   {? SRXD.STATUS='T' |  SRXD.STATUS='P'
   || SRXD.win_edit('RED');
      {? FINFO.TOR_D='T'
      || SRXD.efld_opt('RED','enable=1',,'WARD')
      || SRXD.efld_opt('RED','enable=0',,'WARD')
      ?};

:: BEGIN Obsługa benefitów
         TAM_DOD.cntx_psh();
         TAM_DOD.index('TAM_DOD');
         TAM_DOD.prefix(exec('firma','ustawienia'),SRXD.GRS().ref());
         {? TAM_DOD.first()
         || _bnftt:=TAM_DOD.BNFTT
         || _bnftt:=null()
         ?};
         TAM_DOD.cntx_pop();
         EDIT_ES.BNFTT:=_bnftt;
         EDIT_ES.BENEFIT:={? _bnftt=null() || 'N' || 'T' ?};
         {? EDIT_ES.BENEFIT='T' || _enable:=1 || _enable:=0 ?};
         SRXD.efld_opt(SRXD.win_edit('?'), 'enable='+$_enable, EDIT_ES, 'PRCNAZ_N');
         SRXD.efld_opt(SRXD.win_edit('?'), 'enable='+$_enable, EDIT_ES, 'STNAZ');
         SRXD.efld_opt(SRXD.win_edit('?'), 'enable='+$_enable, EDIT_ES, 'WYDZNAZ');
         SRXD.efld_opt(SRXD.win_edit('?'), 'editable='+$~_enable,, 'OSOBA_N');
:: END Obsługa benefitów

      EDIT_ES.JORG:=SRXD.JORG_N().SYMBOL;
      EDIT_ES.PRCNAZ_N:=SRXD.PRC_N().OSOBA().NAZWISKO;
      EDIT_ES.STNAZ:=SRXD.PRC_N().ST().ST;
      EDIT_ES.WYDZNAZ:=SRXD.PRC_N().WYDZIAL().SYMBOL;
      SRDO_POM.PRCD:=SRXD.PRC().OSOBA().NAZWISKO;
      SRDO_POM.PSTN:=SRXD.PRC().ST().ST;
      SRDO_POM.PWYD:=SRXD.PRC().WYDZIAL().SYMBOL;
      SRXD.memo_get(,'UWAGI',0);

      {? SRXD.edit()
      || {? (SRXD.JORG<>SRXD.JORG_N) | (SRXD.ODD<>SRXD.ODD_N) | (SRXD.POM<>SRXD.POM_N) | (SRXD.OSOBA<>SRXD.OSOBA_N)
         || SRXD.STATUS:='P';
            {? (SRXD.JORG<>SRXD.JORG_N) || SRXD.JORG_M:='T' ?};
            {? (SRXD.ODD<>SRXD.ODD_N) || SRXD.ODD_M:='T' ?};
            {? (SRXD.POM<>SRXD.POM_N) || SRXD.POM_M:='T' ?};
            {? (SRXD.OSOBA<>SRXD.OSOBA_N) || SRXD.OSOBA_M:='T' ?}
         |? SRXD.STATUS='P' & SRXD.JORG=SRXD.JORG_N & SRXD.ODD=SRXD.ODD_N & SRXD.POM=SRXD.POM_N
            & SRXD.OSOBA=SRXD.OSOBA_N
         || SRXD.STATUS:='T';
            SRXD.JORG_M:='N';
            SRXD.ODD_M:='N';
            SRXD.POM_M:='N';
            SRXD.OSOBA_M:='N'
         ?};
         {? SRXD.put() || SRXD.memo_put() ?}
      ?}
   |? SRXD.STATUS='D'
   || SRXD.win_edit('NADMIAR');
      SRXD.memo_get(,'UWAGI',0);
      {? SRXD.edit("exec('chk_srxd_nad','!fst_inp_darw','EDIT')")
      || {? SRXD.SRXI=null || SRXD.SRXI:=SRXD.SRXA().SRXI ?};
         {? SRXD.put()
         || SRXD.memo_put(,'UWAGI')
         ?}
      ?}
   |? SRXD.STATUS='Z'
   || SRXD.win_edit('NIEDOBOR');
      SRXD.memo_get(,'UWAGI',0);
      {? SRXD.edit("")
      || {? SRXD.put()
         || SRXD.memo_put(,'UWAGI')
         ?}
      ?}
   ?};
   SRXD.r_unlock()
|| FUN.emsg('Zapis zablokowany przez innego użytkownika.'@)
?}


\srxd_niedobor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła oznacza pozycję arkusza inwentaryzacyjnego jako niedobór
::----------------------------------------------------------------------------------------------------------------------
{? SRXA.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return()
?};
{? SRXA.STATUS='T'
|| FUN.emsg('Arkusz inwentaryzacyjny jest zamknięty, modyfikacja arkusza nie jest możliwa'@);
   return()
?};
{? SRXD.STATUS='D'
|| FUN.emsg('Bieżąca pozycja jest nadmiarem, nie można jej zatwierdzić jako niedobór.'@);
   return()
?};
{? SRXD.STATUS='T'
|| FUN.emsg('Bieżąca pozycja została już zatwierdzona, nie można jej zatwierdzić jako niedobór.'@);
   return()
?};
{? SRXD.STATUS='P'
|| FUN.emsg('Bieżąca pozycja została już zatwierdzona (ze zmianiami w danych),\n'
            'nie można jej zatwierdzić jako niedobór.'@);
   return()
?};
{? SRXD.STATUS='Z'
|| FUN.emsg('Bieżąca pozycja została już zatwierdzona jako niedobór.'@);
   return()
?};
{? SRXD.r_lock(1,1,1)
||
   {? SRXD.GRP='T'
   || {? FUN.ask('Bieżąca pozycja jest zestawem środków, wszystkie elementy składowe zostaną\n'
                 'także oznaczone jako niedobory. Kontynuować?'@)
      || do();
            _ref:=SRXD.ref();
            SRXD.cntx_psh();
            SRXD.index('SRXD');
            SRXD.prefix(SRXD.SRXA,_ref);
            {? SRXD.first()
            || {! |?
                  SRXD.STATUS:='Z'; SRXD.put();
                  SRXD.next()
               !}
            ?};
            SRXD.cntx_pop();
            SRXD.STATUS:='Z'; SRXD.put();
         end()
      ?}
   || {? FUN.ask('Oznaczyć bieżącą pozycję jako niedobór?'@)
      || SRXD.STATUS:='Z';
         SRXD.put()
      ?}
   ?};
   SRXD.r_unlock()
|| FUN.emsg('Zapis zablokowany przez innego użytkownika.'@)
?}


\srxd_nadmiar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła dołącza nadmiarową pozycję do arkusza inwentaryzacyjnego
::----------------------------------------------------------------------------------------------------------------------
{? SRXA.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return()
?};
{? SRXA.STATUS='T'
|| FUN.emsg('Arkusz inwentaryzacyjny jest zamknięty, modyfikacja arkusza nie jest możliwa'@);
   return()
?};
SRXD.win_edit('NADMIAR');
{? FINFO.TOR_D='T'
|| SRXD.efld_opt('NADMIAR','enable=1',,'WARD')
|| SRXD.efld_opt('NADMIAR','enable=0',,'WARD')
?};
SRXD.blank();
EDIT_ES.JORG:='';
SRXD.memo_set('','UWAGI');
SRXD.STATUS:='D';
SRXD.SRXA:=SRXA.ref();
SRXD.SRXI:=SRXA.SRXI;
{? SRXA.JORG<>null || SRXD.JORG_N:=SRXA.JORG ?};
{? SRXA.ODD<>null || SRXD.ODD_N:=SRXA.ODD ?};
{? SRXA.POM<>null || SRXD.POM_N:=SRXA.POM ?};
{? SRXD.edit("exec('chk_srxd_nad','!fst_inp_darw','ADD')")
|| SRXD.add()
?};
SRXD.win_edit('RED')


\chk_srxd_nad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sprawdza poprawność wypełnienia okna redagowania środka nadmiarowego
::   WY: '' lub akronim pola do poprawienia
::----------------------------------------------------------------------------------------------------------------------
_wy:=__CHK.record(SRXD,,'NRI','JORG_N','ODD_N');
{? _wy='JORG_N' || _wy:='JORG' ?};
{? _wy=''
|| {? _a='ADD' || _nr:=exec('test_arkuszy','!fst_inp_darw',SRXD.NRI,SRXD.ODD_N)
   |? _a='EDIT' || _nr:=exec('test_arkuszy','!fst_inp_darw',SRXD.NRI,SRXD.ODD_N,SRXD.ref())
   ?};
   {? _nr
   || FUN.emsg('Środek o wskazanym numerze inwentarzowym występuje\n w jednym z arkuszy bieżącej'
               ' inwentaryzacji (arkusz nr %1).'@[$_nr]);
      _wy:='NRI'
   ?}
?};
{? _wy=''
|| {? (SRXA.ODD<>null & SRXA.ODD<>SRXD.ODD_N) || _wy:='JORG' ?};
   {? (SRXA.JORG<>null & SRXA.JORG<>SRXD.JORG_N) || _wy:='JORG' ?};
   {? (SRXA.POM<>null & SRXA.POM<>SRXD.POM_N) || _wy:='POM_N' ?};
   {? (SRXD.POM_N<>null & SRXA.ODD<>null & SRXD.POM_N().ODD<>SRXA.ODD) || _wy:='POM_N' ?};
   {? _wy<>''
   || FUN.emsg('Dane nadmiaru niezgodne z danymi w definicji arkusza.'@)
   ?}
?};
_wy


\srxd_na_zestaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zmienia bieżący rekord nadmiaru na zestaw
::----------------------------------------------------------------------------------------------------------------------
{? SRXA.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return()
?};
{? SRXA.STATUS='T'
|| FUN.emsg('Arkusz inwentaryzacyjny jest zamknięty, modyfikacja arkusza nie jest możliwa'@);
   return()
?};
{? SRXD.STATUS='D' & SRXD.GRP='N'
|| {? FUN.ask('Przekonwertować bieżący środek nadmiarowy na zestaw nadmiarowy?'@)
   || SRXD.GRP:='T';
      SRXD.put()
   ?}
|| FUN.emsg('Bieżący zapis nie jest nadmiarem, lub jest już nadmiarowym zestawem lub nadmiarowym elementem.'@)
?}


\srxd_na_element
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zmienia bieżący rekord nadmiaru na element
::----------------------------------------------------------------------------------------------------------------------
{? SRXA.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return()
?};
{? SRXA.STATUS='T'
|| FUN.emsg('Arkusz inwentaryzacyjny jest zamknięty, modyfikacja arkusza nie jest możliwa'@);
   return()
?};
{? SRXD.STATUS='D' & SRXD.GRP='N'
|| {? FUN.ask('Przekonwertować bieżący środek nadmiarowy na element zestawu nadmiarowego?'@)
   || SRXD.cntx_psh();
      SRXD.prefix();
      _win:=SRXD.mk_sel('Zestawy nadmiarowe w bieżącym arkuszu'@,'P',0,'_srxdnad',10,5,10,,'U',,,,,'normal');
      SRXD.win_fld(_win,SRXD,'NRI',,,18);
      SRXD.win_fld(_win,SRXD,'NST',,,30);
      SRXD.win_act(_win,,'Formuła','Wybierz'@,,'Wybór zetawu'@,,"sel_exit()",1,,,,'W');
      SRXD.index('GRP');
      SRXD.prefix(SRXA.ref(),'T');
      _ref:=null;
      {? SRXD.first()
      || SRXD.win_sel(_win);
         {? SRXD.select() || _ref:=SRXD.ref() ?}
      || FUN.emsg('W biezącym arkuszu brak zestawów środków.'@)
      ?};
      SRXD.cntx_pop();
      {? _ref
      || SRXD.GRP:='E';
         SRXD.TREE:=_ref;
         SRXD.put()
      ?}
   ?}
|| FUN.emsg('Bieżący zapis nie jest nadmiarem, lub jest już nadmiarowym zestawem lub nadmiarowym elementem.'@)
?}


\srxd_anuluj_zat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła anuluje zatwierdzenie pozycji w arkuszu inwentaryzacyjnym
::----------------------------------------------------------------------------------------------------------------------
_id:=SRXD.NRI+' ('+SRXD.ODD().OD+'). ';
{? SRXA.SRXI().STATUS='T'
|| _txt:='Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@;
   {? SRD.KOMM<>'T' || FUN.emsg(_txt) || KOMM.add(_id+_txt) ?};
   return()
?};
{? SRXA.STATUS='T'
|| _txt:='Arkusz inwentaryzacyjny jest zamknięty, modyfikacja arkusza nie jest możliwa'@;
   {? SRD.KOMM<>'T' || FUN.emsg(_txt) || KOMM.add(_id+_txt) ?};
   return()
?};
:: jezeli zestaw i operacja grupowa to przetwarza dalej ze względu na elementy składowe
{? SRXD.STATUS='N' & (SRXD.GRP<>'T' | (SRXD.GRP='T' & SRD.KOMM<>'T'))
|| _txt:='Bieżąca pozycja arkusza nie jest zatwierdzona.'@;
:: dla akcji grupowej nie zapisuje informacji, by uniknąć zaśmiecania tabeli komunikatów
   {? SRD.KOMM<>'T' || FUN.emsg(_txt) ?};
   return()
?};
{? SRXD.STATUS='D'
|| _txt:='Pozycji będących środkami nadmiarowymi nie można zatwierdzić ani anulować zatwierdzenia.'@;
   {? SRD.KOMM<>'T' || FUN.emsg(_txt) || KOMM.add(_id+_txt) ?};
   return()
?};
{? SRXD.STATUS='Z'
|| {? SRD.KOMM<>'T'
   || {? ~FUN.ask('Bieżąca pozycja (%1) została zatwierdzona jako niedobór,\n'
                  'przywrócić status: niezatwierdzony?'@[SRXD.NRI])
      || return()
      ?}
   || _txt:='Pozycja była zatwierdzona jako niedobór, przywrócono status: niezatwierdzony.'@;
      KOMM.add(_id+_txt)
   ?}
?};
{? SRXD.STATUS='P'
|| {? SRD.KOMM<>'T'
   || {? FUN.ask('Bieżąca pozycja została zatwierdzona ze zmodyfikowanymi danymi środka. Anulowanie\n'
                 'zatwierdzenia oznaczać będzie także wycofanie zmienionych danych. Kontynuować?'@)
      || SRXD.JORG_N:=SRXD.JORG;
         SRXD.ODD_N:=SRXD.ODD;
         SRXD.POM_N:=SRXD.POM;
         SRXD.OSOBA_N:=SRXD.OSOBA;
         SRXD.JORG_M:=SRXD.ODD_M:=SRXD.OSOBA_M:=SRXD.POM_M:='N'
      || return()
      ?}
   || _txt:='Pozycja została zatwierdzona z modyfikacjami. Anulowano zatwierdzenie i wycofano zmiany w danych'@;
      KOMM.add(_id+_txt);
      SRXD.JORG_N:=SRXD.JORG;
      SRXD.ODD_N:=SRXD.ODD;
      SRXD.POM_N:=SRXD.POM;
      SRXD.OSOBA_N:=SRXD.OSOBA;
      SRXD.JORG_M:=SRXD.ODD_M:=SRXD.OSOBA_M:=SRXD.POM_M:='N'
   ?}
?};
{? SRXD.GRP='T'
|| _grp:='N';
   {? SRD.KOMM<>'T'
   || _txt:='Pozycja jest zestawem środków, anulować zatwierdzenie także dla elementów składowych zestawu?'@;
      {? FUN.ask(_txt) || _grp:='T' ?}
   || _grp:='T';
      _txt:='Pozycja jest zestawem środków, anulowano zatwierdzenie także dla elementów składowych zestawu.'@;
      KOMM.add(_id+_txt)
   ?}
?};
SRXD.STATUS:='N';

:: usuwa pozycję z automatycznego arkusza z natury
{? SRXD.SRXP<>null
|| _srxp:=SRXD.SRXP;
   SRXD.SRXP:=null
|| _srxp:=null
?};
{? SRXD.put()
|| {? _srxp<>null
   || exec('srxp_del_auto','fst',_srxp)
   ?}
?};

{? SRXD.GRP='T' & _grp='T'
|| SRXD.cntx_psh();
   _tree:=SRXD.ref();
   SRXD.index('SRXD');
   SRXD.prefix(SRXD.SRXA,_tree);
   {? SRXD.first()
   || {? SRD.KOMM='N'
      || SRD.KOMM:='T';
         KOMM.init(150,,'Uwagi dotyczące anulowania zatwierdzonych pozycji arkusza.'@)
      ?};
      {! |?
         exec('srxd_anuluj_zat','!fst_inp_darw');
         SRXD.next()
      !};
      {? SRXD.sel_size()=0
      || {? ~KOMM.empty() || KOMM.select() ?};
         SRD.KOMM:='N'
      ?}
   ?};
   SRXD.cntx_pop()
?}


\srxd_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła usuwa pozycję nadmiarową w arkuszu inwentaryzacyjnym
::----------------------------------------------------------------------------------------------------------------------
{? SRXA.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return()
?};
{? SRXA.STATUS='T'
|| FUN.emsg('Arkusz inwentaryzacyjny jest zamknięty, modyfikacja arkusza nie jest możliwa'@);
   return()
?};
{? SRXD.STATUS<>'D'
|| FUN.emsg('Usuwać można jedynie pozycje nadmiarowe.'@);
   return()
?};

{? SRXD.r_lock(1,1,1)
|| {? FUN.ask('Usunąć wskazany środek nadmiarowy?'@)
   || SRXD.r_unlock();
      {? SRXD.SRXP<>null
      || SRXP.cntx_psh();
         SRXP.prefix();
         {? SRXP.seek(SRXD.SRXP,)
         || SRXP.WCZYTANY:='N';
            SRXP.put()
         ?};
         SRXP.cntx_pop()
      ?};
      SRXD.del()
   || SRXD.r_unlock()
   ?}
|| FUN.emsg('Środek nadmiarowy zablokowany przez innego użytkownika.'@)
?}


\srxa_zamknij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zamyka bieżący arkusz inwentaryzacyjny
::----------------------------------------------------------------------------------------------------------------------
{? SRXA.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return()
?};
{? SRXA.STATUS='T'
|| FUN.emsg('Arkusz inwentaryzacyjny jest już zamknięty.'@);
   return()
?};
_find:=0;
SRXD.cntx_psh();
SRXD.index('STATUS');
SRXD.prefix(SRXA.ref(),'N');
{? SRXD.first() || _find:=1 ?};
SRXD.cntx_pop();
{? _find
|| FUN.emsg('Arkusz zawiera niezatwierdzone pozycje. Zamknięcie arkusza niemożliwe.'@);
   return()
?};
{? SRXA.r_lock(1,1,1)
|| {? FUN.ask('Zamknąć arkusz spisowy nr %1?'@[$SRXA.NR])
   || SRXA.STATUS:='T';
      SRXA.put()
   ?};
   SRXA.r_unlock()
|| FUN.emsg('Arkusz spisowy zablokowany przez innego użytkownika.'@)
?}


\srxa_otworz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła otwiera bieżący arkusz inwentaryzacyjny
::----------------------------------------------------------------------------------------------------------------------
{? SRXA.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return()
?};
{? SRXA.STATUS='N'
|| FUN.emsg('Arkusz inwentaryzacyjny nie jest zamknięty.'@);
   return()
?};
{? FUN.ask('Otworzyć arkusz inwentaryzacyjny nr %1?'@[$SRXA.NR])
|| SRXA.STATUS:='N';
   SRXA.put()
?}


\srxd_b_record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła przed rekordem w oknie WER tabeli SRXD
::----------------------------------------------------------------------------------------------------------------------
{? SRXD.STATUS='D'
|| SRXD.win_edit('NADMIAR')
|| SRXD.win_edit('RED')
?};
{? SRXD.STATUS='N'
|| SRXD.actions('WER',,'Z',1)
|? SRXD.STATUS='T' | SRXD.STATUS='P' | SRXD.STATUS='Z'
|| SRXD.actions('WER',,'A',1)
|| SRXD.actions('WER',,'',1)
?};
EDIT_ES.JORG:=SRXD.JORG_N().SYMBOL;
exec('rekprzed','color','SRXD#01#')


\test_arkuszy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sprawdza czy środek nie został już wygenerowany w innym arkuszu bieżącej inwentaryzacji
::   WE: _a - numer inwentarzowy środka (STRING)
::       [_b] - jednostka księgowa (ODD.ref())
::   WY: numer arkusza w którym znaleziono środek, 0 - nie znaleziono środka w żadnym z arkuszy
::----------------------------------------------------------------------------------------------------------------------
_find:=0;
_odd:='';
_par_200:=PAR_SKID.get(200);
{? _>1 & _b<>null
|| ODD.cntx_psh();
   ODD.prefix();
   {? ODD.seek(_b) || _odd:=ODD.OD ?};
   ODD.cntx_pop()
?};
_ref:=SRXA.ref();
SRXA.cntx_psh();
SRXD.cntx_psh();
SRXA.index('SRXI');
SRXA.prefix(SRXI.ref());
{? SRXA.first()
|| {! |?
      {? _par_200='T' & _>1 & _b<>null
      || SRXD.index('ODDNRI');
         SRXD.prefix(SRXA.ref(),_b,_a,)
      || SRXD.index('NRI');
         SRXD.prefix(SRXA.ref(),_a,)
      ?};
      {? SRXD.first() & (_<3 | _c<>SRXD.ref()) || _find:=SRXA.NR ?};
      {? ~_find & _par_200='T' & _>1 & _b<>null
      || SRXD.index('N_ODDNRI');
         SRXD.prefix(SRXA.ref(),_b,_a,);
         {? SRXD.first() & (_<3 | _c<>SRXD.ref()) || _find:=SRXA.NR ?}
      ?};
      {? _find & SRXD.STATUS='D'
      || {? SRD.KOMM='T'
         || _txt:=_a+' ('+SRST.ODD().OD+')';
            KOMM.add('Pominięto: %3. W arkuszu nr %2 dodano już nadmiar o numerze inwentarzowym %1.'@[_a,$_find,_txt])
         ?}
      ?};
      SRXA.next()
   !}
?};
SRXD.cntx_pop();
SRXA.cntx_pop();
_find


\grp_srxd_zatw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła Grupa przed dla akcji Zatwierdź w oknie tabeli SRXD
::----------------------------------------------------------------------------------------------------------------------
{? SRXA.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return(0)
?};
{? SRXA.STATUS='T'
|| FUN.emsg('Arkusz inwentaryzacyjny jest zamknięty, modyfikacje arkusza nie są możliwe.'@);
   return(0)
?};

:: weryfikacja czy w zaznaczonych rekordach są pozycje będące zestawami
_dalej:=1;
SRXD.cntx_psh();
_tab:=SRXD.sel_aget();
{? _tab.first()
|| _grp:='N';
   {! |?
      SRXD.seek(_tab.REF,);
      {? SRXD.GRP='T' || _grp:='T' ?};
      _grp='N' & _tab.next()
   !};

   {? _grp='T'
   || _txt:='Wśród zaznaczonych rekordów są pozycje będące zestawami środków.\n'
            'Po przetworzeniu elementy składowe zestawów zostaną również zatwierdzone.'
            '\n\nKontynuować?'@;
      {? ~FUN.ask(_txt)
      || _dalej:=0
      ||
:: obsluga elementów składowych - zostaną odznaczone
         {? _tab.first()
         || {! |?
               SRXD.seek(_tab.REF,);
               {? SRXD.GRP='E' || SRXD.sel_del() ?};
               _tab.next()
            !}
         ?}
      ?}
   ?}
?};
SRXD.cntx_pop();
{? _dalej=0 || return(0) ?};

{? SRXA.r_lock(1,1,1)
|| {? ~FUN.ask('Zatwierdzić zaznaczone pozycje?'@)
   || SRXA.r_unlock();
      return(0)
   ?}
|| FUN.emsg('Arkusz zablokowany przez innego użytkownika. Akcja grupowa niemożliwa.'@);
   return(0)
?};

KOMM.init(150,,'Uwagi dotyczące zatwierdzanych pozycji arkusza.'@);
SRD.KOMM:='T';
1


\grp_srxd_zatw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła Grupa po dla akcji Zatwierdź w oknie tabeli SRXD
::----------------------------------------------------------------------------------------------------------------------
SRXA.r_unlock();
{? ~KOMM.empty() || KOMM.select() ?};
SRD.KOMM:='N';
1


\nad_zestaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła sprawdza czy rekord nadrzedny (zestaw) dla bieżącego elementu składowego jest zaznaczony
::   WE: 1/0
::----------------------------------------------------------------------------------------------------------------------
_mark:=0;
SRXD.cntx_psh();
SRXD.prefix();
_tree:=SRXD.TREE;
{? SRXD.seek(_tree,SRXD.name()) || _mark:=SRXD.sel_mark() ?};
SRXD.cntx_pop();
_mark


\grp_srxd_an_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła Grupa przed dla akcji Anuluj zatwierdzenie w oknie tabeli SRXD
::----------------------------------------------------------------------------------------------------------------------
{? SRXA.SRXI().STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return(0)
?};
{? SRXA.STATUS='T'
|| FUN.emsg('Arkusz inwentaryzacyjny jest zamknięty, modyfikacje arkusza nie są możliwe.'@);
   return(0)
?};

:: weryfikacja czy w zaznaczonych rekordach są pozycje z modyfikacjami, niedobory lub zestawy
_dalej:=1;
SRXD.cntx_psh();
_tab:=SRXD.sel_aget();
{? _tab.first()
|| _mod:=_nd:=_grp:=0;
   {! |?
      SRXD.seek(_tab.REF,);
      {? SRXD.STATUS='P' || _mod:=1 ?};
      {? SRXD.STATUS='Z' || _nd:=1 ?};
      {? SRXD.GRP='T' || _grp:=1 ?};
       _tab.next()
   !};
   {? _mod | _nd | _grp
   || _txt:='';
      {? _nd=1
      || _txt+='Wśród zaznaczonych rekordów są pozycje oznaczone jako niedobory.\n'
               'Po przetworzeniu zostanie im przywrócony status: niezatwierdzony.'@
      ?};
      {? _mod=1
      || {? _txt<>'' || _txt+='\n\n' ?};
         _txt+='Wśród zaznaczonych rekordów są pozycje zatwierdzone z modyfikacjami danych.\n'
               'Po przetworzeniu zmiany w danych zostaną anulowane.'@
      ?};
      {? _grp=1
      || {? _txt<>'' || _txt+='\n\n' ?};
         _txt+='Wśród zaznaczonych rekordów znajdują się zestawy środków.\n'
               'Anulowanie zatwierdzenia będzie dotyczyo także elementów składowych zestawów.'@
      ?};
      _txt+='\n\nKontynuować?'@;
      {? ~FUN.ask(_txt)
      || _dalej:=0
      ||
:: obsluga elementów składowych - zostaną odznaczone
         {? _tab.first()
         || {! |?
               SRXD.seek(_tab.REF,);
               {? SRXD.GRP='E' & exec('nad_zestaw','!fst_inp_darw')
               || SRXD.sel_del()
               ?};
               _tab.next()
            !}
         ?}
      ?}
   ?}
?};
SRXD.cntx_pop();
{? _dalej=0 || return(0) ?};

{? SRXA.r_lock(1,1,1)
|| {? ~FUN.ask('Anulować zatwierdzenie zaznaczonych pozycji?'@)
   || SRXA.r_unlock();
      return(0)
   ?}
|| FUN.emsg('Arkusz zablokowany przez innego użytkownika. Akcja grupowa niemożliwa.'@);
   return(0)
?};

KOMM.init(150,,'Uwagi dotyczące anulowania zatwierdzonych pozycji arkusza.'@);
SRD.KOMM:='T';
1


\grp_srxd_an_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła Grupa po dla akcji Anuluj zatwierdzenie  w oknie tabeli SRXD
::----------------------------------------------------------------------------------------------------------------------
SRXA.r_unlock();
{? ~KOMM.empty() || KOMM.select() ?};
SRD.KOMM:='N';
1


\srxd_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła wyświetla okno pozycji arkusza spisowego
::----------------------------------------------------------------------------------------------------------------------
SRXD.win_edit('RED');
{? FINFO.TOR_D='T'
|| SRXD.efld_opt('RED','enable=1',,'WARD')
|| SRXD.efld_opt('RED','enable=0',,'WARD')
?};
SRXD.display()


\utworz_arkusz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła tworzy automatycznie arkusz o zadanych parametrach
::   WE: _a - typ arkusza: 'K' - wg j. księgowych, 'O' - wg j. organizacyjnych, 'P' - wg pomieszczeń, 'U' - wg osób
::       _b - parametr tworzenia arkusza - wskazanie na j. ksiegowa, organizacyjna, pomieszczenie lub użytkownika(osobę)
::----------------------------------------------------------------------------------------------------------------------
SRXA.blank();
SRXA.memo_set('Arkusz wygenerowany automatycznie.');
SRXA.SRXI:=SRXI.ref();
SRXA.NR:=exec('get_nr','fst');
{? _a='K'
|| SRXA.ODD:=_b
|? _a='O'
|| SRXA.JORG:=_b;
   SKIDXODD.cntx_psh();
   SKIDXODD.index('UD_SKL');
   SKIDXODD.prefix(SRXA.JORG);
   {? SKIDXODD.first() & SKIDXODD.ODD<>null
   || SRXA.ODD:=SKIDXODD.ODD
   ?};
   SKIDXODD.cntx_pop();
   SRXA.POM:=null;
   SRXA.ODD:=null;
   SRXA.OSOBA:=null
|? _a='P'
|| SRXA.POM:=_b;
   SRXA.JORG:=null;
   SRXA.ODD:=null;
   SRXA.OSOBA:=null
|? _a='J'
|| SRXA.JORG:=null;
   {? SRXI.ODD=null || SRXA.ODD:=null || SRXA.ODD:=SRXI.ODD ?};
   SRXA.POM:=null;
   SRXA.OSOBA:=null
|? _a='U'
|| SRXA.OSOBA:=_b;
   SRXA.POM:=null;
   SRXA.JORG:=null;
   SRXA.ODD:=null
?};
SRXA.STATUS:='N';
{? SRXA.add() || SRXA.memo_put() ?}


\srxa_kreator
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Kreator arkuszy spisowych
::----------------------------------------------------------------------------------------------------------------------
{? SRXI.STATUS='T'
|| FUN.emsg('Bieżąca inwentaryzacja jest zamknięta, modyfikacje arkuszy nie są możliwe.'@);
   return()
?};

{? SRXI.r_lock(1,1,1)
||
   EDIT_ES.win_edit('ARKUSZE');
   {? ~EDIT_ES.edit()
   || SRXI.r_unlock();
      return()
   ?};

   {? EDIT_ES.R_SRXA='K'
   || {? SRXI.ODD<>null
      || exec('utworz_arkusz','!fst_inp_darw','K',SRXI.ODD)
      |? OPERATOR.DEPT<>null
      || exec('utworz_arkusz','!fst_inp_darw','K',OPERATOR.DEPT)
      || exec('odd_filtr','fst');
         {? ODD.f_first()
         || {! |?
               exec('utworz_arkusz','!fst_inp_darw','K',ODD.ref());
               ODD.f_next()
            !}
         ?}
      ?}
   |? EDIT_ES.R_SRXA='O'
   || _sql:='select distinct SRST.JORG as REF_JORG from SRST where SRST.OKRO_F=:_a AND SRST.JORG is not null';
      _tmp:=sql(_sql,SRXI.OKRO_F);
      {? _tmp.first()
      || {! |?
            UD_SKL.cntx_psh();
            UD_SKL.prefix();
            {? UD_SKL.seek(ref_num(_tmp.REF_JORG),ref_name(_tmp.REF_JORG))
            || _utworz:=1;
               {? SRXI.ODD<>null
               || SKIDXODD.cntx_psh();
                  SKIDXODD.index('UD_SKL');
                  SKIDXODD.prefix(UD_SKL.ref());
                  {? SKIDXODD.first() & SKIDXODD.ODD<>null & SKIDXODD.ODD<>SRXI.ODD
                  || _utworz:=0
                  ?};
                  SKIDXODD.cntx_pop()
               ?};
               {? _utworz || exec('utworz_arkusz','!fst_inp_darw','O',UD_SKL.ref()) ?}
            ?};
            UD_SKL.cntx_pop();
            _tmp.next()
         !}
      ?}
   |? EDIT_ES.R_SRXA='P'
   || POMI.index('POMSO');
      {? OPERATOR.DEPT<>null
      || POMI.prefix(REF.FIRMA,OPERATOR.DEPT)
      |? SRXI.ODD<>null
      || POMI.prefix(REF.FIRMA,SRXI.ODD)
      || POMI.prefix()
      ?};
      {? POMI.first()
      || {! |?
            SRST.cntx_psh();
            SRST.index('ODDPOM');
            SRST.prefix(SRXI.OKRO_F,POMI.ref());
            {? SRST.first() || _create:=1 || _create:=0 ?};
            SRST.cntx_pop();
            {? _create=1
            || exec('utworz_arkusz','!fst_inp_darw','P',POMI.ref())
            ?};
            POMI.next()
         !}
      ?}
   |? EDIT_ES.R_SRXA='J'
   || exec('utworz_arkusz','!fst_inp_darw','J')
   |? EDIT_ES.R_SRXA='U'
   || OSOBA.cntx_psh();
      OSOBA.index('OSOBA'); OSOBA.prefix();
      {? OSOBA.first()
      || {! |?
            SRST.cntx_psh();
            SRST.index('USR_ONLY');
            SRST.prefix(SRXI.OKRO_F,OSOBA.ref());
            {? SRST.first() || _create:=1 || _create:=0 ?};
            SRST.cntx_pop();
            {? _create
            || exec('utworz_arkusz','!fst_inp_darw','U',OSOBA.ref())
            ?};
            OSOBA.next()
         !}
      ?};
      OSOBA.cntx_pop()
   ?};

   {? EDIT_ES.SRXD_GEN='T'
   || {? ~SRXA.first()
      || FUN.emsg('Nie utworzono arkuszy, generowanie pozycji nie jest możliwe.'@);
         SRXI.r_unlock();
         return()
      ?};
      {! |?
         exec('srxd_generuj','!fst_inp_darw',1);
         SRXA.next()
      !}
   ?};
   SRXI.r_unlock()
|| FUN.emsg('Inwentaryzacja zablokowana przez innego użytkownika. Utworzenie arkuszy nie jest możliwe.'@)
?}


\be_srxd_pom_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRXD.POM_N
::----------------------------------------------------------------------------------------------------------------------
{? SRXD.KIND='N' || 0 || 1 ?}


\be_srxd_osoba_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Przed redakcją pola SRXD.OSOBA_N
::----------------------------------------------------------------------------------------------------------------------
{? SRXD.KIND='N' || 0 || 1 ?}


\test_likwidacja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KN [20.14]
:: OPIS: Formuła sprawdza czy dla środka istnieje dokument likwidacji z okresem obowiązywania takim jak
::       okres z którego pochodzą dane arkusza inwentaryzacyjnego
::   WE: _a - okres z którego pochodzą dane (OKRO_F.ref())
::   WY: 1 - istnieje dokument likwidacji, 0 - nie istnieje dokument likwidacji
::----------------------------------------------------------------------------------------------------------------------
_lt:=0;
_srsr:=SRST.SRSR;
_okr:=_a;
SRDO.cntx_psh();
SRDO.index('RODZOKR');
SRDO.prefix(_srsr, _okr);
{? SRDO.first()
|| {!
   |? {? SRDO.TYP=FINFO.SRXI_LT
      || _lt:=1
      ?};
      SRDO.next()
   !}
?};
SRDO.cntx_pop();
_lt


:Sign Version 2.0 jowisz:1045 2023/09/29 14:56:14 7887a6625a3d2e1cf96838429bcd0d7ed836fcb31e1798265030a5db0c3e0c88c495490a36eb661211b19729bb09ed3a9a798df9b9b1d6e6509ef4e7aebf8856e250e1099ba1ebc6e595a1f3a87f961ced3784cfa1a028c6337ee4c32f014c25e4da853e9a49f441487cdf701edb06f5b0c6694d20254cd80bbe6dc0e367cb4e
