:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_kprr.fml
:: Utworzony: 28.02.2017
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Redakcja projektów
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# kind=WE,   symbol=PROJTYPY,  type=_PROJTYPY,   name=Typ projektu,   required=N, fml_val="exec('sel','projtypy')"
::# kind=WE,   symbol=KH,        type=_KH,         name=Kontrahent,     required=N
::# kind=WY,   symbol=PROJEKTY,  type=_PROJEKTY,   name=Projekt,        required=N
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
_dialog:={? _mp.isService() || 0 || 1 ?};

exec('czytaj','#stalesys',,XINFO,'SLP');
exec('projekty_jorg','obiegi_proj');
BPMN.KK_DOM:='LMG';

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_area_zws_prj:=_mp.pathArea('ZWS_PRJ') | {? cur_kwin()='s_sel' | cur_kwin()='s_dict' || cur_tab(1,1)=PROJEKTY ?};
_area:=_area_zws_prj;
_proc:=_mp.pathProc();
_todo:=_mp.pathTodo() | _mp.pathArea() & (~_area & _dialog);

{? _todo
:: Ustawienie kontekstu wg instancji elementu w procesie
|| {? var_pres('PROJEKTY',_out)=type_of(null()) & _out.PROJEKTY
   || 1
   |? ~_mp.isMicro()
   || _akcja:='START_TODO'
   || _mp.error('Brak parametru wyjściowego PROJEKTY.'@)
   ?}
?};

:: Blokada kontrahenta
_kh:={? var_pres('KH',_in)=type_of(null()) || _in.KH || null() ?};
PROJ_ZM.KH_LOCK:={? _kh || 'T' || 'N' ?};

:: Wyzwalacz, który po dodaniu nagłówka dokumentu:
:: - add: dodaje rekord kluczowy nagłówka dokumentu
::   del: usuwa rekord kluczowy nagłówka dokumentu
:: - add: zapisuje parametr wyjściowy PROJEKTY = wskazanie na nagłówek korekty
::   del: zapisuje parametr wyjściowy PROJEKTY = null
:: {? _akcja='Dołącz'
::    | _akcja='Dołącz_etap'
::    | _proc
::    | _akcja='START_TODO'
:: || _mp.trigRef('PROJEKTY',,1,,exec('kind_out','#b_port'),'PROJEKTY')
:: ?};

{? _akcja='Dołącz'
   | _proc
   | _akcja='START_TODO'
:: Obsługa Dołącz - dołącz w oknie obszaru i start procesu z pulpitu
|| _projtypy:={? var_pres('PROJTYPY',_in)=type_of(null()) || _in.PROJTYPY || null() ?};

:: Parametr 'akcja' wykorzystywany w formułach przycisków 'Pozycje', 'Zakończ'
   params_set('out',_out,'mp',_mp,'akcja',_akcja);
   PROJZ.PROJZAKR:={? _kh || exec('projzakr_zewnetrzne','projekty') || '' ?};
   _proj_wyn:=exec('projekty_dol','!zws_par_kprr',_kh,_dialog);
   _out.PROJEKTY:=_proj_wyn;
   _mp.save(,_out);
   PROJZ.PROJZAKR:='';

:: Podczytanie parametrów wyjściowych
   _outa:=_mp.load(exec('kind_out','#b_port'));
   {? var_pres('PROJEKTY',_outa)<>type_of(~~) & _outa.PROJEKTY
:: Dodano projekt
   || _mp.done();
::    Ustawienie się na dodanym projekcie w widoku obszaru
      params_exec('projekty_seek','!zws_par_kprr',_area_zws_prj,_outa.PROJEKTY)
:: Wycofanie czynności bo nie dodano dokumentu
   || _mp.cancel()
   ?}

|? _akcja='Dołącz_etap'
   | _proc
   | _akcja='START_TODO'
:: Obsługa Dołącz - dołącz w oknie obszaru i start procesu z pulpitu
|| _projtypy:={? var_pres('PROJTYPY',_in)=type_of(null()) || _in.PROJTYPY || null() ?};

:: Parametr 'akcja' wykorzystywany w formułach przycisków 'Pozycje', 'Zakończ'
   params_set('out',_out,'mp',_mp,'akcja',_akcja);
   PROJZ.PROJZAKR:={? _kh || exec('projzakr_zewnetrzne','projekty') || '' ?};
   _proj_wyn:=exec('projekty_dol_etap','!zws_par_kprr',_kh,_dialog);
   _out.PROJEKTY:=_proj_wyn;
   _mp.save(,_out);
   PROJZ.PROJZAKR:='';

:: Podczytanie parametrów wyjściowych
   _outa:=_mp.load(exec('kind_out','#b_port'));
   {? var_pres('PROJEKTY',_outa)<>type_of(~~) & _outa.PROJEKTY
:: Dodano projekt
   || _mp.done();
::    Ustawienie się na dodanym projekcie w widoku obszaru
      {? _area_zws_prj & cur_win_id<>'P'
      || params_exec('projekty_seek','!zws_par_kprr',_area_zws_prj,_outa.PROJEKTY)
      ?}
:: Wycofanie czynności bo nie dodano dokumentu
   || _mp.cancel()
   ?}

|? _akcja='Popraw'
   | _todo
|| {? var_pres('PROJEKTY',_out)=type_of(null())
:: Uruchomione w procesie
   || PROJEKTY.cntx_psh();
      PROJEKTY.prefix();
      {? ~_dialog | PROJEKTY.seek(_out.PROJEKTY)
      ||
         params_set('out',_out,'mp',_mp,'akcja',_akcja);
         exec('projekty_pop','!zws_par_kprr',_dialog);

         _mp.descTodo()
      ?};
      PROJEKTY.cntx_pop()
   |? _todo
:: Uruchomione zadanie z listy todo i brak _out.FAKS wtedy zadanie wycofujemy
   || _mp.cancel()
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      params_set('out',_out,'mp',_mp,'akcja',_akcja);
      exec('projekty_pop','!zws_par_kprr',_dialog)

   ?}

|? _akcja='Usuń'
|| {? var_pres('PROJEKTY',_out)=type_of(null())
:: Uruchomione w procesie
   || _projekty:=null();
      PROJEKTY.cntx_psh();
      {? ~_area_zws_prj || PROJEKTY.prefix() ?};
      {? PROJEKTY.seek(_out.PROJEKTY)
      ||
         exec('projekty_usu','!zws_par_kprr',1,_dialog);

         {? ~_dialog | ~PROJEKTY.seek(_out.PROJEKTY)
::       Wycofuję instancję jeśli nie znaleziono dokumentu
         || _mp.cancel()
         ?};
         _projekty:=PROJEKTY.ref()
      ?};
      PROJEKTY.cntx_pop();
::    Ustawienie się na kolejnym dokumencie w widoku obszaru
      {? _area_zws_prj || {? _projekty || PROJEKTY.seek(_projekty) ?} ?}
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      exec('projekty_usu','!zws_par_kprr',1,_dialog);

      _mp.done()
   ?}

|? _akcja='Zakończ_wer' & _area_zws_prj
|| {? exec('projekty_zakoncz','!zws_par_kprr') || _mp.done() ?}

|| _mp.error('Nieobsługiwana ścieżka.'@)
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_out:=_mp.load(exec('kind_out','#b_port'));

{? var_pres('PROJEKTY',_out)=type_of(null()) & _out.PROJEKTY
|| 'Zakończ rejestrację projektu: %1'@@[exec('record','#to_string',_out.PROJEKTY)]
|| _in:=_mp.load(exec('kind_in','#b_port'));
   {? var_pres('KH',_in)=type_of(null()) & _in.KH
   || 'Zarejestruj projekt dla kontrahenta %1'@@[exec('record','#to_string',_in.KH)]
   || 'Zarejestruj projekt'@@
   ?}
?}


\projekty_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Zwraca okno redakcji tabeli PROJEKTY
::   WE: _a - PROJTYPY.R
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_wew:=exec('wewnetrzny','projtypy');
_win_akr:={? var_press('_b')=1 & _b
          || {? _a=_wew
             || 'RED_EW'
             || 'RED_EZ'
             ?}
          || {? _a=_wew
             || 'RED_WEW'
             || 'RED_ZEW'
             ?}
          ?};
:{? PROJEKTY.STAT_REJ='T' || _win_akr+='1' ?};
_title:={? _a=_wew
        || {? var_press('_b')=1 & _b
           || 'Etap projektu wewnętrznego'@
           || 'Projekt wewnętrzny'@
           ?}
        || {? var_press('_b')=1 & _b
           ||'Etap projektu zewnętrznego'@
           ||'Projekt zewnętrzny'@
           ?}
        ?};
_win_red:=PROJEKTY.mk_edit(_title,,'qweofdffkjggfd',,,'html_maximized');
{? var_press('_b')=1 & _b
||
   PROJEKTY.win_etab(_win_red,'Dane podstawowe'@);
   PROJEKTY.win_ewin(_win_red,,_win_akr);
   PROJEKTY.win_etab(_win_red,'Dane dodatkowe'@);
   PROJEKTY.win_ewin(_win_red,,'INNE_E');
   PROJEKTY.win_ebtn(_win_red,'text=%1, align=begin'['Planowane koszty'@@],"exec('main','!zws_prj_kosz')")
||
   PROJEKTY.win_etab(_win_red,'Dane podstawowe'@);
   PROJEKTY.win_ewin(_win_red,,_win_akr);
   PROJEKTY.win_etab(_win_red,'Opis'@);
   PROJEKTY.win_ewin(_win_red,,'OPIS');
   PROJEKTY.win_etab(_win_red,'Dane dodatkowe'@);
   PROJEKTY.win_ewin(_win_red,,'INNE');
   PROJEKTY.win_ebtn(_win_red,'text=%1, align=begin'['Uprawnienia'@@],"exec('main','!zws_prj_upra')");
   PROJEKTY.win_ebtn(_win_red,'text=%1, align=begin'['Planowane koszty'@@],"exec('main','!zws_prj_kosz')")
?};
{? PROJEKTY.KAL_POD='T'
||
   PROJEKTY.efld_opt(_win_red,'editable=0',,'PLANPRZ');
   PROJEKTY.efld_opt(_win_red,'editable=0',,'PLANKOS')
?};
{? exec('chk_role','!zws_prj_upra') &  exec('get','#params',800302)='T'
||
   PROJEKTY.efld_opt(_win_red,'editable=1',,'UPR')
||
   PROJEKTY.efld_opt(_win_red,'editable=0',,'UPR')
?};
_czy_wal:=(PROJEKTY.WAL<>exec('bl_nwal','ustawienia') | PROJEKTY.WAL=null());
_enwal:={? _czy_wal || 'enable=1' || 'enable=0' ?};
PROJEKTY.efld_opt(_win_red,_enwal,,'KRS');
PROJEKTY.efld_opt(_win_red,_enwal,,'P_VAL_P');
PROJEKTY.efld_opt(_win_red,_enwal,,'DTK');

_win_red


\projekty_win_edit_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Ustawia okno redakcji tabeli PROJEKTY, wymagane pola, okna słowników
::   WE: _a    - PROJTYPY.R
::       [_b]  - 0-bez Zakończ, 1-z Zakończ
::       _c    - 1-etap
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<>type_of(0) || _b:=1 ?};
{? var_pres('_c')<>type_of(0) || _c:=0 ?};
_win_red:=exec('projekty_win_edit','!zws_par_kprr',_a,_c);
exec('ok_esc','#window',PROJEKTY,_win_red,1,,,,,exec('help_red_ok','#window','Z'),exec('text_red_ok','#window'),
exec('help_red_esc','#window','A'));
PROJEKTY.win_edit(_win_red);
:: Ustawienia słowników
{? _a=exec('wewnetrzny','projtypy')
|| UD_SKL.win_dict('WYB');
   UD_SKL.actions('WYB','W')
|| KH.win_dict('WER_ROZ');
   KH.actions('WER_ROZ','R');
   KH_ODB.win_dict('WER')
?};
OSOBA.win_dict('WER1');
OSOBA.actions('WER1','W');
UDT.win_dict('WER_SLO');
UDT.actions('WER_SLO','W');
exec('ustaw_ww','eurusd',BEER.MW)


\projekty_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Sprawdza wypełnienie rekordu tabeli PROJEKTY
::   WE: _a - czy dialog (domyślnie 1 - z dialogami, wpp. 0)
::   WY: ''-prawidłowo wypełniony lub akronim nieprawidłowo wypełnionego pola
::----------------------------------------------------------------------------------------------------------------------
_dialog:={? var_pres('_a')=type_of(0) || _a || 1 ?};

_wyn:=__CHK.record(PROJEKTY,,'FIRMA','T');
{? _wyn=''
|| _wyn:=
      {? PROJEKTY.T().R=exec('wewnetrzny','projtypy')
      || {? PROJEKTY.UD_SKL<>null
            || __CHK.record(PROJEKTY,,'NAZWA')
            || __CHK.record3(UD_POM,'OKOSZ','Jednostka organizacyjna - symbol',PROJEKTY,'NAZWA','Nazwa')
         ?}
      || __CHK.record(PROJEKTY,,'KH','NAZWA')
      ?}
?};
{? _wyn='' & PROJEKTY.RDATA_DO<>date(0,0,0) & PROJEKTY.RDATA_OD>PROJEKTY.RDATA_DO
|| FUN.info('Data zakończenia projektu nie może być wcześniejsza od daty rozpoczęcia.'@);
   _wyn:='RDATA_DO'
?};
{? _wyn='' & PROJEKTY.RDAT_ZAM<>date(0,0,0) & PROJEKTY.RDAT_ROZ>PROJEKTY.RDAT_ZAM
|| FUN.info('Data zakończenia projektu nie może być wcześniejsza od daty rozpoczęcia.'@);
   _wyn:='RDAT_ZAM'
?};
{? _wyn='' & PROJEKTY.ID_KSG
|| _ref:=PROJEKTY.ref();
   PROJEKTY.cntx_psh();
   PROJEKTY.index('ID_KSG'); PROJEKTY.prefix(PROJEKTY.ID_KSG);
   {? PROJEKTY.first() & PROJEKTY.ref()<>_ref
   || FUN.info('Istnieje projekt o identyfikatorze księgowym: %1 w firmie: %2.'@[$PROJEKTY.ID_KSG,PROJEKTY.FIRMA().SYMBOL]);
      _wyn:='ID_KSG'
   ?};
   PROJEKTY.cntx_pop()
?};
{? _wyn='' & PROJEKTY.PLANPRZ<0
|| __CHK.err_fld(PROJEKTY,'PLANSPRZ',1,'Wartość nie może być ujemna.'@);
   _wyn:='PLANPRZ'
?};
{? _wyn='' & PROJEKTY.PLANKOS<0
|| __CHK.err_fld(PROJEKTY,'PLANKOS',1,'Wartość nie może być ujemna.'@);
   _wyn:='PLANKOS'
?};
{? _dialog=0 & _wyn='' & PROJEKTY.SLO_RODZ
|| exec('czytaj','#stalesys',,XINFO,'SLPRRODZ');
   _wsenv:=exec('wsenv','#mwapi');
   {? XINFO.SLPRRODZ=null()
   || _wsenv.add_error(
         'Wskazano pozycję w słowniku rodzajów projektów ale nie zdefiniowano tego słownika w parametrach pracy. '
         'Należy uzupełnić parametryzację systemu.'
      );
      _ret:='SLO_RODZ'
   |? PROJEKTY.SLO_RODZ().SLU<>XINFO.SLPRRODZ
   || _wsenv.add_error(
         'Nie znaleziono podanego rodzaju projektów w słowniku. Należy uzupełnić słownik rodzajów projektów.'
      );
      _ret:='SLO_RODZ'
   ?}
?};
:: Wyznaczenie numeru jeśli nie określony w trakcie redakcji nagłówka
:: !!! Wyznaczenie numeru ma być na końcu tej funkcji !!!
{? _wyn='' & PROJEKTY.NR=0 & PROJEKTY.SYM='' & PROJEKTY.POZ_PROJ=1
|| {? exec('wol_nr','numery','PROJEKTY',,1)
   || _wyn:='NR'
   ?}
?};
:: Jeżeli w dalszym ciągu nie ma numeru, to poważna awaria
{? _wyn='' & PROJEKTY.NR=0 & PROJEKTY.POZ_PROJ=1
|| _wyn:='NR'
?};
:: Sprawdzenie wypełnienia Identyfikatora księgowego
{? _wyn=''
|| _wyn:=__CHK.record(PROJEKTY,,'ID_KSG')
?};
{? _wyn='' & PROJEKTY.ID_KSG<0
|| _wyn:=__CHK.err_fld(PROJEKTY,'ID_KSG',1,'Wartość musi być dodatnia.'@)
?};
:: Sprawdzenie dat dla etapu projektu
:: a) dla etapów wyżej
{? _wyn='' & PROJEKTY.POZ_PROJ>1 & (PROJEKTY.RDATA_OD<>date(0,0,0) | PROJEKTY.RDAT_ROZ<>date(0,0,0))
||
   _rdata_od:=PROJEKTY.RDATA_OD;
   _rdat_roz:=PROJEKTY.RDAT_ROZ;
   _rdata_od_err:=date(0,0,0);
   _rdat_roz_err:=date(0,0,0);
   PROJEKTY.cntx_psh();
   PROJEKTY.index('KOL');
   _poziom:=PROJEKTY.POZ_PROJ-1;
   {!|?
      PROJEKTY.prefix(REF.FIRMA,PROJEKTY.RODZIC,(((_poziom)*3)+PROJEKTY.KOL)+'000');
      {? PROJEKTY.first()
      ||
         {!|?
            {? PROJEKTY.RDATA_OD<>date(0,0,0) & PROJEKTY.RDATA_OD>_rdata_od & PROJEKTY.RDATA_OD>_rdata_od_err
            ||
               _rdata_od_err:=PROJEKTY.RDATA_OD
            ?};
            {? PROJEKTY.RDAT_ROZ<>date(0,0,0) & PROJEKTY.RDAT_ROZ>_rdat_roz & PROJEKTY.RDAT_ROZ>_rdat_roz_err
            ||
               _rdat_roz_err:=PROJEKTY.RDAT_ROZ
            ?};
            PROJEKTY.next()
         !}
      ?};
      _poziom-=1;
      _poziom>0
   !};
   {? _rdata_od_err<>date(0,0,0)
   ||
      _wyn:=__CHK.err_fld(PROJEKTY,'RDATA_OD',
            1,'Planowana data realizacji etapu projektu nie powinna \nbyć wczesniejsza niż %1.'@[_rdata_od_err$4])
   ?};
   {? _rdat_roz_err<>date(0,0,0)
   ||
      _wyn:=__CHK.err_fld(PROJEKTY,'RDAT_ROZ',
            1,'Rzeczywista data realizacji etapu projektu nie powinna \nbyć wczesniejsza niż %1.'@[_rdat_roz_err$4])
   ?};
   PROJEKTY.cntx_pop()
?};
{? _wyn='' & PROJEKTY.POZ_PROJ>1 & (PROJEKTY.RDATA_DO<>date(0,0,0) | PROJEKTY.RDAT_ZAM<>date(0,0,0))
||
   _rdata_do:=PROJEKTY.RDATA_DO;
   _rdat_zam:=PROJEKTY.RDAT_ZAM;
   _rdata_do_err:=date(0,0,0);
   _rdat_zam_err:=date(0,0,0);
   PROJEKTY.cntx_psh();
   PROJEKTY.index('KOL');
   _poziom:=PROJEKTY.POZ_PROJ-1;
   {!|?
      PROJEKTY.prefix(REF.FIRMA,PROJEKTY.RODZIC,(((_poziom)*3)+PROJEKTY.KOL)+'000');
      {? PROJEKTY.first()
      ||
         {!|?
            {? PROJEKTY.RDATA_DO<>date(0,0,0) & PROJEKTY.RDATA_DO<_rdata_do &
            (PROJEKTY.RDATA_DO<_rdata_do_err | _rdata_do_err=date(0,0,0))
            ||
               _rdata_do_err:=PROJEKTY.RDATA_DO
            ?};
            {? PROJEKTY.RDAT_ZAM<>date(0,0,0) & PROJEKTY.RDAT_ZAM<_rdat_zam &
            (PROJEKTY.RDAT_ZAM<_rdat_zam_err | _rdat_zam_err=date(0,0,0))
            ||
               _rdat_zam_err:=PROJEKTY.RDAT_ZAM
            ?};
            PROJEKTY.next()
         !}
      ?};
      _poziom-=1;
      _poziom>0
   !};
   {? _rdata_do_err<>date(0,0,0)
   ||
      _wyn:=__CHK.err_fld(PROJEKTY,'RDATA_DO',
            1,'Planowana data realizacji etapu projektu nie powinna \nbyć późniejsza niż %1.'@[_rdata_do_err$4])
   ?};
   {? _rdat_zam_err<>date(0,0,0)
   ||
      _wyn:=__CHK.err_fld(PROJEKTY,'RDAT_ZAM',
            1,'Rzeczywista data realizacji etapu projektu nie powinna \nbyć późniejsza niż %1.'@[_rdat_zam_err$4])
   ?};
   PROJEKTY.cntx_pop()
?};
:: b) dla etapów niżej
{? _wyn='' & PROJEKTY.RDATA_OD<>date(0,0,0)
||
   _rdata_od:=PROJEKTY.RDATA_OD;
   _rdat_roz:=PROJEKTY.RDAT_ROZ;
   _rdata_od_err:=date(0,0,0);
   _rdat_roz_err:=date(0,0,0);
   PROJEKTY.cntx_psh();
   PROJEKTY.index('KOL');
   _poziom:=PROJEKTY.POZ_PROJ;
   _ref:=PROJEKTY.ref();
   PROJEKTY.prefix(REF.FIRMA,PROJEKTY.RODZIC,(((_poziom)*3)+PROJEKTY.KOL));
   {? PROJEKTY.first()
   ||
      {!|?
         {? PROJEKTY.RDATA_OD<>date(0,0,0) & PROJEKTY.RDATA_OD<_rdata_od
         & (PROJEKTY.RDATA_OD<_rdata_od_err | _rdata_od_err=date(0,0,0))
         & PROJEKTY.ref()<>_ref
         ||
            _rdata_od_err:=PROJEKTY.RDATA_OD
         ?};
         {? PROJEKTY.RDAT_ROZ<>date(0,0,0) & PROJEKTY.RDAT_ROZ<_rdat_roz
         & (PROJEKTY.RDAT_ROZ<_rdat_roz_err | _rdat_roz_err=date(0,0,0))
         & PROJEKTY.ref()<>_ref
         ||
            _rdat_roz_err:=PROJEKTY.RDAT_ROZ
         ?};
         PROJEKTY.next()
      !}
   ?};
   {? _rdata_od_err<>date(0,0,0)
   ||
      _wyn:=__CHK.err_fld(PROJEKTY,'RDATA_OD',
            1,'Planowana data realizacji nie powinna \nbyć późniejsza niż %1.'@[_rdata_od_err$4])
   ?};
   {? _rdat_roz_err<>date(0,0,0)
   ||
      _wyn:=__CHK.err_fld(PROJEKTY,'RDAT_ROZ',
            1,'Rzeczywista data realizacji nie powinna \nbyć późniejsza niż %1.'@[_rdat_roz_err$4])
   ?};
   PROJEKTY.cntx_pop()
?};
{? _wyn='' & PROJEKTY.RDATA_DO<>date(0,0,0)
||
   _ref:=PROJEKTY.ref();
   _rdata_do:=PROJEKTY.RDATA_DO;
   _rdat_zam:=PROJEKTY.RDAT_ZAM;
   _rdata_do_err:=date(0,0,0);
   _rdat_zam_err:=date(0,0,0);
   PROJEKTY.cntx_psh();
   PROJEKTY.index('KOL');
   _poziom:=PROJEKTY.POZ_PROJ;
   PROJEKTY.prefix(REF.FIRMA,PROJEKTY.RODZIC,(((_poziom)*3)+PROJEKTY.KOL));
   {? PROJEKTY.first()
   ||
      {!|?
         {? PROJEKTY.ref()<>_ref
         ||
            {? PROJEKTY.RDATA_DO<>date(0,0,0) & PROJEKTY.RDATA_DO>_rdata_do & PROJEKTY.RDATA_DO>_rdata_do_err
            ||
               _rdata_do_err:=PROJEKTY.RDATA_DO
            ?};
            {? PROJEKTY.RDAT_ZAM<>date(0,0,0) & PROJEKTY.RDAT_ZAM>_rdat_zam & PROJEKTY.RDAT_ZAM>_rdat_zam_err
            ||
               _rdat_zam_err:=PROJEKTY.RDAT_ZAM
            ?}
         ?};
         PROJEKTY.next()
      !}
   ?};
   {? _rdata_do_err<>date(0,0,0)
   ||
      _wyn:=__CHK.err_fld(PROJEKTY,'RDATA_DO',
            1,'Planowana data realizacji nie powinna \nbyć wcześniejsza niż %1.'@[_rdata_do_err$4])
   ?};
   {? _rdat_zam_err<>date(0,0,0)
   ||
      _wyn:=__CHK.err_fld(PROJEKTY,'RDAT_ZAM',
            1,'Rzeczywista data realizacji nie powinna \nbyć wcześniejsza niż %1.'@[_rdat_zam_err$4])
   ?};
   PROJEKTY.cntx_pop()
?};
{? _wyn='' & Plugin.runnable('ZWS_PROJ_002')
|| _wyn:=Plugin.run('ZWS_PROJ_002')
?};
_wyn


\projekty_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Projekty - Dołącz
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='ZWS_PAR_KPRR';
_params.AKCJA:='Dołącz';
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\projekty_dolacz_etap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Projekty - Dołącz
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='ZWS_PAR_KPRR';
_params.AKCJA:='Dołącz_etap';
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\projekty_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Projekty - Popraw
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='ZWS_PAR_KPRR';
_params.AKCJA:='Popraw';
_params.UIDREF:=PROJEKTY.uidref();

exec('mp_run','#b__box',_params)


\projekty_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Projekty - Usuń
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='ZWS_PAR_KPRR';
_params.AKCJA:='Usuń';
_params.UIDREF:=PROJEKTY.uidref();

exec('mp_run','#b__box',_params)


\projekty_wycofaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Projekty - Wycofaj - wycofanie zakończenia rejestracji projektu
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? PROJEKTY.STAT_REJ<>'T'
|| FUN.info('Nie zakończono rejestracji projektu.'@)
|? FUN.ask('Wycofać zakończenie rejestracji?'@)
|| PROJEKTY.STAT_REJ:='N';
   PROJEKTY.put()
?}


\projekty_zalaczniki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Projekty - Załączniki
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__CTR0');
{? var_pres('__CTR') > 0
|| __CTR0:=obj_ntab_add(__CTR)
?};
exec('sel_dok','dokum','PROJEKTY',,0,,1);
VAR_DEL.delete('__CTR');
{? var_pres('__CTR0') > 0
|| __CTR:=obj_ntab_add(__CTR0);
   VAR_DEL.delete('__CTR0')
?}


\projekty_hist_zmian
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Projekty - Historia zmian
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PROJHIST.index('D');
PROJHIST.prefix(PROJEKTY.ref(),'',);
PROJHIST.win_sel('WER');
PROJHIST.win_edit('RED');
{? PROJEKTY.A='T'
|| PROJHIST.select()
|| PROJHIST.select(,,,'dpu:d')
?}


\projekty_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Dodanie projektu
::   WE:  _a - null() lub KH.ref() lub SLO.ref()
::       [_b] - INTEGER - 0/[1] - czy pokazywać dialogi wymagające interakcji użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,XINFO,INFO);
_proj_ref:=null();
PROJEKTY.cntx_psh();
_dialog:={? var_pres('_b')=type_of(1) || _b || 1 ?};
{? _dialog || PROJEKTY.blank() ?};
_tm_s:=0;
{? PROJEKTY.SYM='' || PROJEKTY.SYM:='~'+$PROJEKTY.tm_stamp(); _tm_s:=1 ?};
{? PROJEKTY.KH=null || PROJEKTY.KH:=_a ?};
{? ~PROJEKTY.AR || PROJEKTY.AR:=date()~1 ?};
{? ~PROJEKTY.AM || PROJEKTY.AM:=date()~2 ?};
{? _dialog || PROJEKTY.T:=exec('sel','projtypy',PROJEKTY.KH) || _wsenv:=exec('wsenv','#mwapi') ?};
{? PROJEKTY.T=null()
|| PROJEKTY.cntx_pop();
   return()
?};

POM.cntx_psh();
POM.TAB:='PROJEKTY';
POM.TYPDOK:=PROJEKTY.T().KOD;
POM.NRT:=0;

_var_prj:=obj_new('PO_FIRST','BTN');
_var_prj.PO_FIRST:=1;
_var_prj.BTN:='OK';

params_set('context',params_get(),'var_prj',_var_prj);

:: Okno redakcji
{? _dialog
|| exec('projekty_win_edit_set','!zws_par_kprr',PROJEKTY.T().R);
   PROJEKTY.memo_set('','O');
   PROJEKTY.prefix();
   {? PROJEKTY.add()
   || PROJEKTY.r_lock(1);
      _data:=10+PROJEKTY.IDADD;
      _czas:=8+(11-PROJEKTY.IDADD);
      PROJEKTY.D_ADD:=date(#(4+_data),#(2+(5-_data)),#(_data+2));
      PROJEKTY.T_ADD:=time(#(2+_czas),#(2+(3-_czas)),#(_czas+2));
      PROJEKTY.STAT_REJ:='T';
      PROJEKTY.KOL:='001'+ (207*'0');
      PROJEKTY.RODZIC:=PROJEKTY.IDADD;
      PROJEKTY.put();
      {? _tm_s || PROJEKTY.SYM:='' ?};
      exec('proj_usr_oper','!zws_prj_upra');
      {? PROJEKTY.edit("exec('projekty_chk','!zws_par_kprr')")
      || {? _var_prj.BTN='OK' & PROJEKTY.put()
         || exec('projekty_plan_up_all','!zws_par_kprr');
            exec('projekty_ha_sz','!zws_par_kprr');
            PROJEKTY.memo_put(,'O');
            exec('projekty_zakoncz','!zws_par_kprr');
            _proj_ref:=PROJEKTY.ref()
         ?};
         PROJEKTY.r_unlock()
      || numer:=PROJEKTY.NR;
         oldnumer:=1;
         exec('nr_old','numery');
         exec('projusr_del','!zws_par_kprr');
         exec('prk_del','!zws_par_kprr');
         exec('prh_del','!zws_par_kprr');
         PROJEKTY.del()
      ?}
   ?}
|| PROJEKTY.memo_set('','O');
   PROJEKTY.prefix();
   {? PROJEKTY.add()
   || _data:=10+PROJEKTY.IDADD;
      _czas:=8+(11-PROJEKTY.IDADD);
      PROJEKTY.D_ADD:=date(#(4+_data),#(2+(5-_data)),#(_data+2));
      PROJEKTY.T_ADD:=time(#(2+_czas),#(2+(3-_czas)),#(_czas+2));
      PROJEKTY.STAT_REJ:='T';
      PROJEKTY.KOL:='001'+ (207*'0');
      PROJEKTY.RODZIC:=PROJEKTY.IDADD;
      _symbol:=PROJEKTY.SYM;
      PROJEKTY.NR:=0;
      PROJEKTY.NR:=exec('numer_new','numery','PACZKA');
      exec('znak','numery','PROJEKTY',1);
      {? _symbol<>'' || PROJEKTY.SYM:=_symbol ?};
      exec('proj_usr_oper','!zws_prj_upra');
      _res:=exec('projekty_chk','!zws_par_kprr',0);
      {? _res=''
      || PROJEKTY.put();
         exec('projekty_plan_up_all','!zws_par_kprr');
         exec('projekty_ha_sz','!zws_par_kprr');
         _wsenv.IDADD:=PROJEKTY.IDADD;
         _proj_ref:=PROJEKTY.ref()
      || exec('projusr_del','!zws_par_kprr');
         exec('prk_del','!zws_par_kprr');
         exec('prh_del','!zws_par_kprr');
         PROJEKTY.del();
         numer:=PROJEKTY.NR;
         oldnumer:=1;
         exec('nr_old','numery');
         _wsenv.add_error('Błąd wypełnienia pola: %1.'@[_res])
      ?}
   ?}
?};
POM.cntx_pop();
PROJEKTY.cntx_pop();
_proj_ref


\projekty_dol_etap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Dodanie projektu
::   WE:  _a - null() lub KH.ref() lub SLO.ref()
::       [_b] - INTEGER - 0/[1] - czy pokazywać dialogi wymagające interakcji użytkownika
::        _c - PROJEKT.NAZWA
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_nazwa:={? var_pres('_c')=type_of('') || _c || '' ?};
_rodzic:=PROJEKTY.RODZIC;
_pozycja:=PROJEKTY.POZ_PROJ;
_kolejn:=PROJEKTY.KOL;
_firma:=PROJEKTY.FIRMA;
_sym:=PROJEKTY.SYM;
_typ:=PROJEKTY.T;
_nr:=PROJEKTY.NR;
_kh:=PROJEKTY.KH;
_odb:=PROJEKTY.KH_ODB;
_udt:=PROJEKTY.UDT;
_rodz:=PROJEKTY.SLO_RODZ;
_han:=PROJEKTY.HAN;
_szef:=PROJEKTY.SZEF;
_pl:=PROJEKTY.PL;
_kk:=PROJEKTY.KK;
_ud_skl:=PROJEKTY.UD_SKL;
_proj_ref:=null();

PROJEKTY.cntx_psh();
_dialog:={? var_pres('_b')=type_of(1) || _b || 1 ?};
PROJEKTY.blank();
PROJEKTY.AR:=date()~1;
PROJEKTY.AM:=date()~2;
PROJEKTY.RODZIC:=_rodzic;
PROJEKTY.POZ_PROJ:=(_pozycja+1);
PROJEKTY.TREE:=#PROJEKTY.ref();
PROJEKTY.SYM:=_sym;
PROJEKTY.NR:=_nr;
PROJEKTY.KH:=_kh;
PROJEKTY.KH_ODB:=_odb;
PROJEKTY.UDT:=_udt;
PROJEKTY.SLO_RODZ:=_rodz;
PROJEKTY.HAN:=_han;
PROJEKTY.SZEF:=_szef;
PROJEKTY.PL:=_pl;
PROJEKTY.KK:=_kk;
PROJEKTY.UD_SKL:=_ud_skl;
PROJEKTY.T:=_typ;
PROJEKTY.NAZWA:=_nazwa;
PROJEKTY.UPR:='N';

{? PROJEKTY.POZ_PROJ>1
|| {? PROJEKTY.SYM*'['
   || PROJEKTY.SYM:=((PROJEKTY.SYM*'['-1)+PROJEKTY.SYM)
   ?};
   PROJEKTY.SYM+='['+$PROJEKTY.ID_KSG+']'
?};

PROJEKTY.cntx_psh();
PROJEKTY.index('POZ');
_prefix:=(_pozycja*3)+_kolejn;
PROJEKTY.prefix(_firma,_rodzic,PROJEKTY.POZ_PROJ,_prefix);
_numer:=PROJEKTY.size()+1;
PROJEKTY.cntx_pop();
PROJEKTY.KOL:=((_pozycja*3)+_kolejn) + (('00'+$_numer)+3)+((210-_pozycja*3-3)*'0');

{? ~_dialog || _wsenv:=exec('wsenv','#mwapi') ?};
{? PROJEKTY.T=null()
|| PROJEKTY.cntx_pop();
   return()
?};

POM.cntx_psh();
POM.TAB:='PROJEKTY';
POM.TYPDOK:=PROJEKTY.T().KOD;
POM.NRT:=0;

_var_prj:=obj_new('PO_FIRST','BTN');
_var_prj.PO_FIRST:=1;
_var_prj.BTN:='OK';

params_set('context',params_get(),'var_prj',_var_prj);

:: Okno redakcji
{? _dialog
|| exec('projekty_win_edit_set','!zws_par_kprr',PROJEKTY.T().R,,1);
   PROJEKTY.memo_set('','O');
   PROJEKTY.prefix();
   {? PROJEKTY.add()
   || PROJEKTY.r_lock(1);
      _data:=10+PROJEKTY.IDADD;
      _czas:=8+(11-PROJEKTY.IDADD);
      PROJEKTY.D_ADD:=date(#(4+_data),#(2+(5-_data)),#(_data+2));
      PROJEKTY.T_ADD:=time(#(2+_czas),#(2+(3-_czas)),#(_czas+2));
      PROJEKTY.STAT_REJ:='T';
      {? PROJEKTY.edit("exec('projekty_chk','!zws_par_kprr')")
      || {? _var_prj.BTN='OK' & PROJEKTY.put()
         || exec('projekty_plan_up_all','!zws_par_kprr');
            exec('projekty_ha_sz','!zws_par_kprr');
            PROJEKTY.memo_put(,'O');
            exec('projekty_zakoncz','!zws_par_kprr');
            _proj_ref:=PROJEKTY.ref();
            {? PROJEKTY.f_active > 0 ||PROJEKTY.f_rfresh ?};
            PROJEKTY.r_unlock()
         ?}
      ||
         PROJEKTY.del()
      ?}
   ?}
|| PROJEKTY.memo_set('','O');
   PROJEKTY.prefix();
   {? PROJEKTY.add()
   || _data:=10+PROJEKTY.IDADD;
      _czas:=8+(11-PROJEKTY.IDADD);
      PROJEKTY.D_ADD:=date(#(4+_data),#(2+(5-_data)),#(_data+2));
      PROJEKTY.T_ADD:=time(#(2+_czas),#(2+(3-_czas)),#(_czas+2));
      PROJEKTY.STAT_REJ:='T';
      _res:=exec('projekty_chk','!zws_par_kprr',0);
      {? _res=''
      || PROJEKTY.put(1);
         exec('projekty_plan_up_all','!zws_par_kprr');
         exec('projekty_ha_sz','!zws_par_kprr');
         _wsenv.IDADD:=PROJEKTY.IDADD;
         _proj_ref:=PROJEKTY.ref()
      || PROJEKTY.del();
         _wsenv.add_error('Błąd wypełnienia pola: %1.'@[_res])
      ?}
   ?}
?};
POM.cntx_pop();
PROJEKTY.cntx_pop();
{? PROJEKTY.f_active > 0 ||PROJEKTY.f_rfresh ?};
_proj_ref


\projekty_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Poprawa projektu
::   WE: [_a] - INTEGER - 0/[1] - czy pokazywać dialogi wymagające interakcji użytkownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_dialog:={? var_pres('_a')=type_of(1) || _a || 1 ?};
exec('czytaj','#stalesys',,XINFO,INFO);

_var_prj:=obj_new('PO_FIRST','BTN');
_var_prj.PO_FIRST:=0;
_var_prj.BTN:='OK';

exec('projekty_jorg','obiegi_proj');

params_set('context',params_get(),'var_prj',_var_prj);

:: Okno redakcji
exec('projekty_win_edit_set','!zws_par_kprr',PROJEKTY.T().R,PROJEKTY.STAT_REJ<>'T',PROJEKTY.POZ_PROJ<>1);
PROJHIST.index('D');
PROJHIST.prefix(PROJEKTY.ref(),'',);
_date1:=
   {? PROJEKTY.RDATA_OD<>date(0,0,0)
   || PROJEKTY.RDATA_OD
   || date(#(4+PROJEKTY.IDADD),#(2+(5-PROJEKTY.IDADD)),#(2+(8-PROJEKTY.IDADD)))
   ?};
_han1:=PROJEKTY.HAN;
_szef1:=PROJEKTY.SZEF;
PROJEKTY.memo_get(,'O');

_valid:={? _dialog
        || PROJEKTY.edit("exec('projekty_chk','!zws_par_kprr')")
        || _wsenv:=exec('wsenv','#mwapi');
           {? (_res:=exec('projekty_chk','!zws_par_kprr',0))=''
           || {? _var_prj.BTN='OK' & PROJEKTY.put()
              || PROJEKTY.memo_put(,'O')
              ?}
           || _wsenv.add_error(_res); 0
           ?}
        ?};

{? _valid
|| do();
   PROJEKTY.cntx_psh();
   PROJEKTY.prefix();
   PROJEKTY.STAT_REJ:='T';
   {? _var_prj.BTN='OK' & PROJEKTY.put()
   || exec('projekty_plan_up_all','!zws_par_kprr');
      PROJEKTY.memo_put(,'O');
      {? _han1<>PROJEKTY.HAN | _szef1<>PROJEKTY.SZEF
      || _date:=date();
         PROJHIST.blank();
         PROJHIST.PROJEKTY:=PROJEKTY.ref();
         PROJHIST.D:=_date;
         PROJHIST.HAN:=PROJEKTY.HAN;
         PROJHIST.SZEF:=PROJEKTY.SZEF;
         {? PROJHIST.find_key(_date)
         || PROJHIST.HAN:=PROJEKTY.HAN;
            PROJHIST.SZEF:=PROJEKTY.SZEF;
            PROJHIST.put()
         || PROJHIST.add()
         ?};
         PROJEKTY.put()
      ?}
   ?};
   PROJEKTY.cntx_pop();
   end()
?};
{? _dialog
||
   PROJEKTY.cntx_psh();
   PROJEKTY.get();
   exec('projekty_upr_ae','!zws_prj_upra');
   PROJEKTY.cntx_pop()
?}


\projekty_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Usunięcie projektu
::   WE: _a -  INTEGER - 0/[1] - komunikaty wymagające interakcji (1 - tak, 0 - nie)
::      [_b] - INTEGER - 0/[1] - czy pokazywać informacje w FUN (1) czy w envie web serwisu (0).
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_dialog:={? var_pres('_b')=type_of(1) || _b || 1 ?};
{? ~_dialog || _wsenv:=exec('wsenv','#mwapi') ?};
_rodzic:='';

{? ~(_lock:=PROJEKTY.r_lock(1,1,1))
|| {? _dialog
   || {? PROJEKTY.POZ_PROJ=1
      || FUN.info('Projekt zablokowany przez innego użytkownika.\nUsunięcie niemożliwe.'@)
      || FUN.info('Etap zablokowany przez innego użytkownika.\nUsunięcie niemożliwe.'@)
      ?};
      return(0)
   || {? PROJEKTY.POZ_PROJ=1
      || _wsenv.add_error('Projekt zablokowany przez innego użytkownika.\nUsunięcie niemożliwe.'@)
      || _wsenv.add_error('Etap zablokowany przez innego użytkownika.\nUsunięcie niemożliwe.'@)
      ?};
      return(0)
   ?}
?};

{? _a=0
| ~_dialog
| {? PROJEKTY.POZ_PROJ=1
  || FUN.ask('Usunąć projekt i wszystkie jego etapy?'@)
  || FUN.ask('Usunąć etap i wszystkie jego podetapy?'@)
  ?}
||
   {? _lock || PROJEKTY.r_unlock() ?};
   {? PROJEKTY.POZ_PROJ=1
   ||
      _sql:='select * from PROJEKTY
         where FIRMA=\'%1\' and RODZIC=\'%2\' and KOL like \'%3\' and REFERENCE<>\'%4\'
         order by FIRMA, RODZIC, POZ_PROJ, KOL'
         [$PROJEKTY.FIRMA,PROJEKTY.RODZIC,(((PROJEKTY.POZ_PROJ*3)+PROJEKTY.KOL)+'%'),$PROJEKTY.ref()];
      {? var_press('_sql_proj')>100 || obj_del(_sql_proj) ?};
      _sql_proj:=sql(_sql);
      do();
      {? _sql_proj.last()
      ||
         PROJEKTY.cntx_psh();
         PROJEKTY.prefix();
         {!|?
            {? PROJEKTY.seek(_sql_proj.REFERENCE)
            ||
               exec('prk_del','!zws_par_kprr');
               exec('prh_del','!zws_par_kprr');
               _rodzic:=PROJEKTY.RODZIC;
               {? PROJEKTY.count()>0
               || undo(); FUN.info('Etap %1 wykorzystywany w dokumentach.'@[PROJEKTY.SYM])
               || {? PROJEKTY.del(1,1)<1 || undo() ?}
               ?}
            || undo()
            ?};
            _sql_proj.prev()
         !};
         PROJEKTY.cntx_pop()
      ?};

      POM.TAB:='PROJEKTY';
      POM.TYPDOK:=PROJEKTY.T().KOD;
      POM.NRT:=0;
      numer:=PROJEKTY.NR;
      oldnumer:=1;
      exec('nr_old','numery');
      _rodzic:=PROJEKTY.RODZIC;
      exec('projusr_del','!zws_par_kprr');
      exec('prk_del','!zws_par_kprr');
      exec('prh_del','!zws_par_kprr');
      {? PROJEKTY.count()>0
      || undo(); FUN.info('Projekt %1 wykorzystywany w dokumentach.'@[PROJEKTY.SYM])
      ||
         {? PROJEKTY.del(1,1)>0
         || {? ~_dialog || _wsenv.add_info('Usunięto projekt'@) ?};exec('projekty_plan_up_all','!zws_par_kprr',_rodzic)
         || undo();{? ~_dialog || _wsenv.add_error('Nie usunięto projektu'@) ?}
         ?}
      ?};
      end()
   ||
      do();
      _rodzic:=PROJEKTY.RODZIC;
      _firma:=PROJEKTY.FIRMA;
      _sql:='select * from PROJEKTY
         where FIRMA=\'%1\' and RODZIC=\'%2\' and KOL like \'%3\'
         order by FIRMA, RODZIC, POZ_PROJ, KOL'
         [$PROJEKTY.FIRMA,PROJEKTY.RODZIC,(((PROJEKTY.POZ_PROJ*3)+PROJEKTY.KOL)+'%')];
      {? var_press('_sql_proj')>100 || obj_del(_sql_proj) ?};
      _sql_proj:=sql(_sql);
      {? _sql_proj.last()
      ||
         PROJEKTY.cntx_psh();
         PROJEKTY.prefix();
         {!|?
            {? PROJEKTY.seek(_sql_proj.REFERENCE)
            ||
               exec('prk_del','!zws_par_kprr');
               exec('prh_del','!zws_par_kprr');
               {? PROJEKTY.count()>0
               || undo();
                  {? ~_dialog
                  || _wsenv.add_error('Etap %1 wykorzystywany w dokumentach.'@[PROJEKTY.SYM])
                  || FUN.info('Etap %1 wykorzystywany w dokumentach.'@[PROJEKTY.SYM])
                  ?}
               || {? PROJEKTY.del(1,1)<1 || undo();{? ~_dialog || _wsenv.add_error('Nie usunięto etapu'@) ?} ?}
               ?}
            || undo()
            ?};
            _sql_proj.prev()
         !};
         PROJEKTY.cntx_pop()
      ?};
      {? ~_dialog & ~_wsenv.has_errors() || _wsenv.add_info('Usunięto projekt'@) ?};
      exec('projekty_plan_up_all','!zws_par_kprr',_rodzic);
      exec('clean_tree','projekty_view',_firma,_rodzic);
      exec('clean_tree','projekty_view',_firma,_rodzic);
      end()
   ?}
?}


\projekty_zakoncz_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Projekty - Zakończ - okno redagowania
::   WE: params_get()   - ustawiane w exec('projekty_dol','!zws_par_kprr')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().context.mp;
_var_prj:=params_get().var_prj;

_btnRuleResult:='';

_fld:=params_exec('projekty_edit_finisher','!zws_par_kprr',PROJEKTY.ref());
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| {? exec('projekty_zakoncz','!zws_par_kprr')
   || PROJEKTY.memo_put(,'O');
      _var_prj.BTN:='ZAKONCZ';
      _btnRuleResult:='key:F2';
      _mp.done()
   ?}
?};

_btnRuleResult


\projekty_zakoncz_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Projekty - Zakończ - okno wertowania
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='ZWS_PAR_KPRR';
_params.UIDREF:=PROJEKTY.uidref();
_params.AKCJA:='Zakończ_wer';

exec('mp_run','#b__box',_params)


\projekty_edit_finisher
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Kod wykańczający po FAKS.edit() w różnych kontekstach
::   WE: _a - PROJEKTY.ref()
::       params_get()   - ustawiane w exec('projekty_dol','!zws_par_kprr')
::----------------------------------------------------------------------------------------------------------------------
:: Sprawdzenie poprawności wypełnienia pól nagłówka dokumentu sprzedaży
params_exec('projekty_chk','!zws_par_kprr')


\projekty_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Zmienia status projektu na zakończona rejestracja
::   WE:
::   WY: 0-nie zmieniono statusu, 1-zmieniono status
::----------------------------------------------------------------------------------------------------------------------
{? PROJEKTY.STAT_REJ<>'T'
|| {? FUN.ask('Zakończyć rejestrację?'@)
   || PROJEKTY.STAT_REJ:='T';
      PROJEKTY.put()
   ?}
?}


\projekty_seek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Ustawia się na dokumencie _b jeśli aktywny obszar _a
::   WE: _a - obszar roboczy [0/1]
::       _b - FAKS.ref
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_area:=_a;
_ref:=_b;
_mp:=params_get().mp;

_f_active:=PROJEKTY.f_active();
{? _area & (_f_active=0 | ~PROJEKTY.f_seek(_ref)) & PROJEKTY.seek(_ref) || {? _f_active || PROJEKTY.f_add() ?} ?}


\projekty_nr_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Przed redakcją PROJEKTY.NR
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('wol_nr','numery','PROJEKTY');
{? exec('get','#params',800301)='T' || PROJEKTY.SYM:=PROJEKTY.ID_WEW; _wyn:=0; win_disp() ?};
_wyn


\projekty_nr_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: F3 PROJEKTY.NR
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('nr_dok','numery','PROJEKTY')


\projekty_nr_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Po redkacji PROJEKTY.NR
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('znak','numery','PROJEKTY')


\projekty_kh_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Przed redakcją PROJEKTY.KH
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PROJ_ZM.KH_LOCK<>'T'


\projekty_kh_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Po redakcji PROJEKTY.KH
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BEER.KH:=fld();
{? BEER.KH<>PROJEKTY.KH_ODB().KH
|| PROJEKTY.KH_ODB:=null()
?};
1


\projekty_kh_odb_wz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Wzorzec PROJEKTY.KH_ODB
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BEER.KH:=PROJEKTY.KH;
exec('kh_odb_f_set','kontrahent');
''


\projekty_kh_osob_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Przed redakcją PROJEKTY.KH_OSOB
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BEER.KH<>null()


\projekty_kh_osob_wz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Wzorzec PROJEKTY.KH_OSOB
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BEER.KH:=PROJEKTY.KH;
exec('kh_osob_f_set','kontrahent');
''


\projekty_kh_odb_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Przed redakcją PROJEKTY.KH_ODB
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
BEER.KH<>null()


\projekty_oddz_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: F3 PROJEKTY.ODDZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('sel_upr','users','ODDZ','KOD')
|| PROJEKTY.ODDZ:=ODDZ.KOD;
   {? exec('projekty_oddz_ae','!zws_par_kprr')
   || PROJEKTY.ODDZ
   ?}
?}


\projekty_oddz_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: po redakcji PROJEKTY.ODDZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_oddz:=exec('FindInSet','#table','ODDZ','KOD',PROJEKTY.ODDZ);
{? _oddz
|| _wyn:=1
|| FUN.info('Niezdefiniowany oddział.'@)
?};
_wyn


\projekty_rek_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Rekord przed tabeli PROJEKTY
::   WE: _a - 1-ostatni rekord w ramach odświeżenia, 0-wpp
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
||
   exec('projekty_win_edit_set','!zws_par_kprr',PROJEKTY.T().R,,PROJEKTY.POZ_PROJ<>1)
?};
exec('rekprzed','color','PROJEKTY#02')


\projekty_aktywuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Projekty - Aktywuj
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Otworzyć projekt i jego etapy?'@)
||
    _prefix:=((PROJEKTY.POZ_PROJ*3)+PROJEKTY.KOL);
   _rodzic:=PROJEKTY.RODZIC;
   PROJEKTY.cntx_psh();
   PROJEKTY.index('KOL');
   PROJEKTY.prefix(REF.FIRMA,_rodzic,_prefix);
   {? PROJEKTY.first()
   ||
      do();
      {!|?
         PROJEKTY.A:='T';
         {? ~PROJEKTY.put()
         || undo(); {? PROJEKTY.POZ_PROJ=1
                    || FUN.info('Nie można otworzyć projektu %1.'@[PROJEKTY.SYM])
                    || FUN.info('Nie można otworzyć etapu %1.'@[PROJEKTY.SYM])
                    ?}
         ?};
         PROJEKTY.next()
      !};
      end()
   ?};
   PROJEKTY.cntx_pop()
?}


\projekty_deaktywuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Projekty - Dezaktywuj
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Zamknąć projekt i jego etapy?'@)
||
   _prefix:=((PROJEKTY.POZ_PROJ*3)+PROJEKTY.KOL);
   _rodzic:=PROJEKTY.RODZIC;
   PROJEKTY.cntx_psh();
   PROJEKTY.index('KOL');
   PROJEKTY.prefix(REF.FIRMA,_rodzic,_prefix);
   {? PROJEKTY.first()
   ||
      do();
      {!|?
         PROJEKTY.A:='N';
         PROJEKTY.USER_ZAM:=OPERATOR.USER().KOD;
         PROJEKTY.DAT_ZAM:=date();
         PROJEKTY.GODZ_ZAM:=time();
         {? ~PROJEKTY.put()
         || undo(); {? PROJEKTY.POZ_PROJ=1
                    || FUN.info('Nie można zamknąć projektu %1.'@[PROJEKTY.SYM])
                    || FUN.info('Nie można zamknąć etapu %1.'@[PROJEKTY.SYM])
                    ?}
         ?};
         PROJEKTY.next()
      !};
      end()
   ?};
   PROJEKTY.cntx_pop()
?}


\projekty_legenda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Projekty - Legenda
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','PROJEKTY#01')


\projhist_reka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Rekord po PROJHIST
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PROJHIST.PROJEKTY:=PROJEKTY.ref();
__CHK.record(PROJHIST,,'D')


\projekty_akt_wg_hist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Aktualizacja projektu wg historii zmian
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PROJHIST.cntx_psh();
PROJHIST.index('D');
{? PROJHIST.first()
|| {? PROJEKTY.HAN<>PROJHIST.HAN | PROJEKTY.SZEF<>PROJHIST.SZEF
   || PROJEKTY.HAN:=PROJHIST.HAN;
      PROJEKTY.SZEF:=PROJHIST.SZEF;
      PROJEKTY.put()
   ?}
||
   PROJHIST.prefix(PROJEKTY.ref(),'T',);
   {? PROJHIST.first()
   ||
      PROJEKTY.HAN:=PROJHIST.HAN;
      PROJEKTY.SZEF:=PROJHIST.SZEF;
      PROJEKTY.put()
   ?}
?};
PROJHIST.cntx_pop();
exec('projekty_upr_ae','!zws_prj_upra');
1


\pop_proj_slo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.14]
:: OPIS: Poprawienie umowy z poziomu słownika użytkownika
::----------------------------------------------------------------------------------------------------------------------
{? exec('test_slo','slo_slu')=0
|| FUN.info('Poprawienie pozycji słownika niemożliwe w bieżącej firmie.'@);
   return(0)
?};
SLO.SLU();
RS.cntx_psh(); RS.index('RS'); RS.prefix();
{? RS.find_key(SLU.WZ,) & RS.TAB='PROJEKTY'
|| _sp:={? var_pres('slo_pop')>0 || _slo_pop:=slo_pop; 1 || 0 ?};
   _rs:={? var_pres('ref_slo')>0 || _ref_slo:=ref_slo; 1 || 0 ?};
   slo_pop:=1; ref_slo:=null; exec('slu_okn','slo_slu');
   _i:=RS.ref();
   {? (_r_szuk:=exec('wz_szuk','slo_slu'))
   || exec('cn_psh','slo_slu');
      {? exec('projekty_pop','!zws_par_kprr')
      || exec('cn_pop','slo_slu');
         {? var_pres('ref_slo')>0 & ref_slo<>null || SLO.seek(ref_slo) ?}; _h:=1;
         do();
         _k:=SLO.KOD; _t:=SLO.TR; _msg:='';
         {? _r_szuk<>-1 & ~RS.seek(_i)
         || undo();
            _msg:='Nie znaleziono rekordu tabeli RS.'@
         || _msg:=exec('akt_slo','slo_slu',_k,_t)
         ?};
         end();
         {? _msg<>'' || FUN.info(_msg) ?}
      || exec('cn_pop','slo_slu'); {? ref_slo<>null || SLO.seek(ref_slo) ?}
      ?}
   ?};
   {? _sp || slo_pop:=_slo_pop || VAR_DEL.delete('slo_pop') ?};
   {? _rs || ref_slo:=_ref_slo || VAR_DEL.delete('ref_slo') ?}
|| FUN.info('Akcja dostępna wyłącznie dla słowników o wzorcu Projekty.'@)
?};
exec('tab_f_rfresh','slo_filtr',SLO);
RS.cntx_pop();
1


\projekty_zakres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Projekty - Zakres
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Tab:=tab_tmp(2
   ,'LP'       ,'INTEGER'     ,'Lp'
   ,'PROJZAKR' ,'STRING[20]'  ,'Zakres');
{? +PROJZ.PROJZAKR
|| _ref:=PROJEKTY.ref();
   exec('projekty_f_set','projekty',__PRJVAR.TAB,__PRJVAR.TRYB);
   _txt:='%1 projekty'@[PROJZ.PROJZAKR];
   {? __PRJVAR.TRYB
   || _and:=0;
      {? PROJZ.PROJZKH='T' & PROJZ.KH
      || _txt+='\nkontrahenta %1'@[exec('record','#to_string',PROJZ.KH)];
         _and:=1
      ?};
      {? PROJZ.PROJWJO='T' & PROJZ.UD_SKL
      || _txt+={? _and || '\ni '@ || '\n' ?};
         _txt+='dotyczące %1'@[exec('record','#to_string',PROJZ.UD_SKL)]
      ?};
      FUN.info(_txt+'.')
   || FUN.info(_txt+'.')
   ?};
   __PRJVAR.TRYB:=~__PRJVAR.TRYB;
   PROJEKTY.f_rfresh();
   PROJEKTY.f_first()
|| FUN.info('Opcja niedostępna.'@)
?}


\projekty_udt_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.14]
:: OPIS: Przed redkacją PROJEKTY.UDT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
UDT.prefix();
UDT.f_clear();
_where:='UDT.FIRMA=:_a and UDT.ZAK=\'N\'';
_from:='';
UDT.f_set('SYM',,_where,REF.FIRMA);
1


\bl_proj_id_ksg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.14]
:: OPIS: Wartość początkowa PROJEKTY.ID_KSG
::----------------------------------------------------------------------------------------------------------------------
PROJEKTY.cntx_psh();
PROJEKTY.index('ID_KSG'); PROJEKTY.prefix();
_id:={? PROJEKTY.last()
     || PROJEKTY.ID_KSG+1
     || 1
     ?};
PROJEKTY.cntx_pop();
_id


\projekty_slo_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.28]
:: OPIS: Przed redagowaniem pól słownikowych tabeli PROJEKTY
::----------------------------------------------------------------------------------------------------------------------
_pole:=4-cur_afld();
{? ($('XINFO.SLPR'+_pole))()
|| ($('XINFO.SLPR'+_pole+'()'))()
?}


\projekty_slo_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.28]
:: OPIS: Po redakcji pól słownikowych tabeli PROJEKTY
::----------------------------------------------------------------------------------------------------------------------
{? fld()
|| _pole:=4-cur_afld();
   _slu:=($('XINFO.SLPR'+_pole));
   1
?};
1


\projekty_id_ksg_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Po redakcji pola ID_KSG
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab=PROJEKTY & PROJEKTY.ID_KSG<1
|| FUN.info('Wartość musi być dodatnia.'@); return(0)
|? _ref:=PROJEKTY.ref();
   PROJEKTY.cntx_psh();
   PROJEKTY.index('ID_KSG'); PROJEKTY.prefix(PROJEKTY.ID_KSG);
   {? PROJEKTY.first() & PROJEKTY.ref()<>_ref
   || FUN.info('Istnieje projekt o identyfikatorze księgowym: %1 w firmie: %2.'@[$PROJEKTY.ID_KSG,PROJEKTY.FIRMA().SYMBOL]);
      _wyn:=1
   || _wyn:=0
   ?};
   PROJEKTY.cntx_pop();
   _wyn
|| return(0)
?};
{? cur_tab=PROJEKTY & PROJEKTY.POZ_PROJ>1
|| {? PROJEKTY.SYM*'['
   || PROJEKTY.SYM:=((PROJEKTY.SYM*'['-1)+PROJEKTY.SYM)
   ?};
   PROJEKTY.SYM+='['+$PROJEKTY.ID_KSG+']'
?};
~~


\projekty_kal_pod_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Po redakcji pola KAL_POD
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
PR_KOS.cntx_psh();
PR_KOS.index('PR_KOS_P');
PR_KOS.prefix(PROJEKTY.ref());
{? PR_KOS.first() & PROJEKTY.KAL_POD='N'|| _wyn:=0 ?};
PR_KOS.cntx_pop();

::Do modyfikacji powyżej 23.25 - trzeba zmeinić defa
PROJEKTY.cntx_psh();
PROJEKTY.get();
_kal_pod:=PROJEKTY.KAL_POD;
PROJEKTY.cntx_pop();

_win_red:=cur_win();
{? PROJEKTY.KAL_POD='T'
||
   PROJEKTY.efld_opt(_win_red,'editable=0',,'PLANPRZ');
   PROJEKTY.efld_opt(_win_red,'editable=0',,'PLANKOS');
   exec('projekty_plan_up','!zws_par_kprr')
||
   PROJEKTY.efld_opt(_win_red,'editable=1',,'PLANPRZ');
   PROJEKTY.efld_opt(_win_red,'editable=1',,'PLANKOS');
   exec('pr_kos_cal','!zws_prj_kosz');
   {? _kal_pod='T' || PROJEKTY.PLANPRZ:=0 ?}
?};
win_disp();
_wyn


\projekty_plan_up
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Aktualizacja pól PLANKOS i PLANPRZ
::----------------------------------------------------------------------------------------------------------------------
_prefix:=((PROJEKTY.POZ_PROJ*3)+PROJEKTY.KOL);
_rodzic:=PROJEKTY.RODZIC;
_plankos:=0;
_planprz:=0;
PROJEKTY.cntx_psh();
PROJEKTY.index('KOL');
PROJEKTY.prefix(REF.FIRMA,_rodzic,_prefix);
{? PROJEKTY.first()
||
   {!|?
      {? PROJEKTY.KAL_POD='N' & PROJEKTY.IDADD<>_rodzic
      ||
         _plankos+=PROJEKTY.PLANKOS;
         _planprz+=PROJEKTY.PLANPRZ
      ?};
      PROJEKTY.next()
   !}
?};
PROJEKTY.cntx_pop();
PROJEKTY.PLANKOS:=_plankos;
PROJEKTY.PLANPRZ:=_planprz;
~~


\projekty_plan_up_all
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [21.14]
:: OPIS: Aktualizacja pól PLANKOS i PLANPRZ dla całej lini
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_a')=type_of('')
||
   {? _a=''
   || return(0)
   || _rodzic:=_a
   ?}
||
   _rodzic:=PROJEKTY.RODZIC
?};
PROJEKTY.cntx_psh();
PROJEKTY.index('POZ');
PROJEKTY.prefix(REF.FIRMA,_rodzic,);
{? PROJEKTY.last()
||
   {!|?
      {? PROJEKTY.KAL_POD='T'
      ||
         exec('projekty_plan_up','!zws_par_kprr');
         PROJEKTY.put()
      ?};
      PROJEKTY.prev()
   !}
?};
PROJEKTY.cntx_pop()


\projekty_ha_sz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Przypisanie pierwotnej wartości do PROJHIST
::----------------------------------------------------------------------------------------------------------------------
PROJHIST.cntx_psh();
PROJHIST.prefix();

PROJHIST.blank();
PROJHIST.PROJEKTY:=PROJEKTY.ref();
PROJHIST.D:=date();
PROJHIST.HAN:=PROJEKTY.HAN;
PROJHIST.SZEF:=PROJEKTY.SZEF;
PROJHIST.HA_SZ:='T';
PROJHIST.add();

PROJHIST.cntx_pop()


\projusr_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Usunięcie zapisów uprawnień
::----------------------------------------------------------------------------------------------------------------------
PROJUSR.cntx_psh();
PROJUSR.index('PROJ');
PROJUSR.prefix(PROJEKTY.ref());
{? PROJUSR.first()
|| {!|?
      PROJUSR.del();
      PROJUSR.first()
   !}
?};
PROJUSR.cntx_pop()


\projekty_p_val_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Usunięcie zapisów uprawnień
::----------------------------------------------------------------------------------------------------------------------
PROJEKTY.P_VAL_P:={? PROJEKTY.KRS<>0 || PROJEKTY.P_VAL*PROJEKTY.KRS || PROJEKTY.P_VAL ?};
1


\idz_do_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Przejście do dokumentu
:: ~OST: INFORK
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1);
{? _tab=ZK_P
|| _tab_u:=ZK_N;
   _ref:=ZK_P.N;
   _uid:="ZK_N.uidref()"
|? _tab=ZD_POZ
|| _tab_u:=ZD_NAG;
   _ref:=ZD_POZ.ZD_NAG;
   _uid:="ZD_NAG.uidref()"
|? _tab=DK
|| _tab_u:=ND;
   _ref:=DK.N;
   _uid:="ND.uidref()"
|| return(~~)
?};

_uidref:=exec('FindAndGet','#table',_tab_u,_ref,,_uid,'');

{? _uidref='' || FUN.info('Nie znaleziono projektu.'@); return(~~) ?};
{? exec('interm','#system')
|| _params:=exec('obj_ntab_set','#array',,'LINK',_uidref,'PROJ_REF',$PROJEKTY.ref());
   _link_interm:=link_uri(_params);
   cli_open_link(_link_interm)
|| _domain:='LSP';
   _color:=exec('FindInSet','#table','B_DOMAIN','SYMBOL',_domain,,"B_DOMAIN.COLOR",1,,'');
   mb_fork(,'START_PROCES'
      ,'color='+exec('color_conv','#convert',_color)
      ,'LINK',_uidref
      ,'PROJ_REF',$PROJEKTY.ref())
?};
~~


\prk_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PD] [22.26]
:: OPIS: Usuniecie wszystkich kosztów z projektu
::----------------------------------------------------------------------------------------------------------------------
PR_KOS.cntx_psh();
PR_KOS.index('PR_KOS_P');
PR_KOS.prefix(PROJEKTY.ref());
{? PR_KOS.first()
||
   {!|?
      PR_KOS.del();
      PR_KOS.first()
   !}
?};
PR_KOS.cntx_pop()


\prh_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PD] [22.26]
:: OPIS: Usuniecie wszystkich histori projektu
::----------------------------------------------------------------------------------------------------------------------
PROJHIST.cntx_psh();
PROJHIST.index('D');
PROJHIST.prefix(PROJEKTY.ref());
{? PROJHIST.first()
||
   {!|?
      PROJHIST.del();
      PROJHIST.first()
   !}
?};
PROJHIST.cntx_pop()

:Sign Version 2.0 jowisz:1045 2023/12/13 09:34:32 31a89a3acb59bf3781f5b3020776989d9ad513886bd6cf3edefbee9c3676b9826ada32c1c511bd3261b9e862ffa3c5b44345aab462ab93252c591c4a2566eb6f21219f29b0156a9380a31fc746c420632db6cec0522aa9d39e0cce640ef7c2bd69c07ef105450804965a7c7783a93c87997d11353c0b9379f148d0f276a41caf
