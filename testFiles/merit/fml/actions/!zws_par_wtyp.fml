:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_wtyp.fml
:: Utworzony: 14.09.2016
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Typy wniosków w obiegu
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formuła główna czynności ZWS_PAR_WTYP
::  OLD: \deftypdo/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.W_PORTAL:='N';
exec('def','obiegi_typy')


\deftypdo1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2008]
:: OPIS: Definiowanie typow wniosków w obiegu - wewnetrzna
::  OLD: \deftypdo1/skid_dob.fml
::----------------------------------------------------------------------------------------------------------------------
TYPOBIEG.cntx_psh(); TYPOBIEG.index('UNIK');
{? typobi=2
|| TYPOBIEG.prefix('Obieg wniosków','Obieg wniosków'); ETYPY.win_edit(exec('REDW','obiegi2'))
|| TYPOBIEG.prefix('Obieg delegacji','Obieg delegacji'); ETYPY.win_edit('REDD')
?};
OBIEGI.TYPOBIEG:={? TYPOBIEG.first() || TYPOBIEG.ref() || null ?};
OBIEGI.TYP_ID:='T';
TYPOBIEG.cntx_pop();
{? OBIEGI.TYPOBIEG
|| exec('tabkhini','kontrahent');
   ETYPY.index('UNIK_WP'); ETYPY.prefix(exec('bl_typ','obiegi',typobi),POMOC.W_PORTAL);
   ODD.win_dict('SLO'); HAN.win_dict('SLO'); REJ.win_dict('SLO1'); SKID_MBN.win_dict('WER')
?};
1


\etypy_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.42]
:: OPIS: Formuła przed akcją dołącz dla typów we wnioskach w obiegu
::----------------------------------------------------------------------------------------------------------------------
ETYPY.blank();
{? typobi=2
|| {? 'TPs'*POMOC.W_PORTAL
   || {? POMOC.W_PORTAL='T' || ETYPY.win_edit('REDWWP')
      |? POMOC.W_PORTAL='P' || ETYPY.win_edit('REDWPL')
      || ETYPY.win_edit('REDWPSEO')
      ?};
      ETYPY.AKTYWNY:='N';
      ETYPY.ED_TEMAT:='N';
      {? POMOC.W_PORTAL='s'
      || POMOC.RODZ_WP:=ETYPY.RODZ_WP:=9
      ?};
      exec('etypy_efld_opt','obiegi_typy','*',ETYPY,ETYPY.win_edit('?'),,'add')
   || ETYPY.win_edit(exec('REDW','obiegi2'))
   ?}
|| ETYPY.win_edit('REDD')
?};
{? ETYPY.edit("exec('rpoetypy','!zws_par_otyp')") || ETYPY.add() ?}


\etypy_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.42]
:: OPIS: Formuła przed akcją popraw dla typów we wnioskach w obiegu
::----------------------------------------------------------------------------------------------------------------------
{? typobi=2
|| {? 'TPs'*ETYPY.W_PORTAL
   || {? ETYPY.W_PORTAL='T' || ETYPY.win_edit('REDWWP')
      |? POMOC.W_PORTAL='P' || ETYPY.win_edit('REDWPL')
      || ETYPY.win_edit('REDWPSEO')
      ?};
      exec('etypy_efld_opt','obiegi_typy','*',ETYPY,ETYPY.win_edit('?'),,'put')
   || ETYPY.win_edit(exec('REDW','obiegi2'))
   ?}
|| ETYPY.win_edit('REDD')
?};
1


\edit_var_rodz_wp_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Przed wyświetleniem dla pola EDIT_VAR.RODZ_WP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('etypy_rodz_wp_tab','obiegi2');
EDIT_VAR.RODZ_WP:={? _tab.find_tab(,'KOD',,'=',ETYPY.RODZ_WP) || _tab.NAZWA || '' ?}


\edit_var_rodz_wp_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obsługa akcji F3 dla pola EDIT_VAR.RODZ_WP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('etypy_rodz_wp_tab','obiegi2');
_wys:=_tab.size();
{? _wys<5 || _wys:=5
|? _wys>30 || _wys:=30
?};
_win:=_tab.mk_sel('Rodzaje wniosków'@,,0,'#edit_var_rodz_',,,_wys);
_tab.win_fld(_win,,'KOD',,,3);
_tab.win_fld(_win,,'NAZWA',,,50);
_tab.win_act(_win,,'Formuła','Wybierz'@@,,,"sel_exit()",,1);
_tab.win_sel(_win);
{? _tab.select()
|| ETYPY.RODZ_WP:=_tab.KOD;
   win_disp()
?}


\etypy_grupa_wp_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obsługa akcji F3 dla pola ETYPY.GRUPA_WP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_grupa:=__RQ_GR.f3();
{? +_grupa
|| ETYPY.GRUPA_WP:=_grupa;
   win_disp()
?}


\etypy_wid_wp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Formuła na po edycji pola ETYPY.WID_WP
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ETYPY.W_PORTAL='s'
|| {? ETYPY.WID_WP='T'
   || ETYPY.RODZ_WP:=9
   || ETYPY.RODZ_WP:=0
   ?}
?};
exec('etypy_efld_opt','obiegi_typy')


\etypy_pob_def_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obsługa akcji "Pobierz definicje wniosków".
::       Pobiera z portalu wszystkie definicje wniosków, zarówno wersje pierwotne jak i przysłonięte wersje dla tenanta.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_types:=exec('types','portal_wnioski');
_type:=
   {? var_pres('W_PORTAL',POMOC)>0 & type_of(POMOC.W_PORTAL)=type_of('') & +POMOC.W_PORTAL=1
   || POMOC.W_PORTAL
   || _types.portal
   ?};

_param:=obj_new('showProgress','type');
_param.showProgress:=1;
_param.type:=_type;
KOMM.init(,,'Komunikaty podczas pobierania definicji wniosków'@);
exec('run_mwac','sync_mwa','PORTAL_HR_CFG','chr_PersonRequestType_GET',0,,_param);
KOMM.select()


\etypy_przywroc_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obsługa akcji "Przywróć" dla wybranego typu wniosku.
::       Kasuje bieżącą i przywraca bazową (portalową) wersję typu wniosku wraz ze schematem informacji dodatkowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_txt:='Funkcja przywraca bazową wersję definicji dla typu wniosku "%1".'@[ETYPY.NAZWA];
_txt+='\n';
_txt+='Przywrócenie spowoduje usunięcie bieżącej definicji dla wybranego typu wniosku.'@;
_txt+='\n\n';
_txt+='Czy chcesz kontunuować?'@;
{? __RQ_BT.exists(ETYPY.ID_WP_B)
|| {? FUN.ask(_txt)
   || _result:=exec('run_mwac','sync_mwa','PORTAL_HR_CFG','chr_PersonRequestParDefsDelete',1,,ETYPY.ID_WP);
      {? type_of(_result)=1 & _result
      || _param:=obj_new('id');
         _param.id:=ETYPY.ID_WP;
         _result:=exec('run_mwac','sync_mwa','PORTAL_HR_CFG','chr_PersonRequestType_GET',1,,_param)
      ?}
   ?}
|| FUN.info('Wybrany typ wniosku nie jest typem bazowym.'@)
?};
_result


\etypy_id_wp_b_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obsługa akcji F3 dla pola ETYPY.ID_WP_B - Typ bazowy
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__RQ_BT.f3()


\etypy_kop_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Akcja kopiuj dla okna wertowania 'WERWWP' tabeli ETYPY
::----------------------------------------------------------------------------------------------------------------------
_wyb:=FUN.choice(
   'Który typ wniosku chcesz skopiować',,
   'Wnioski &Macrologic',
   'Wnioski &HR Portal',
   'Wnioski &Paperless HR'
);
{? _wyb=0 || return() ?};
_ok:=1;
_params:= tab_tmp(,
   'ETYPYFIR', 'STRING[1]', 'Parametry dekretacji',
   'ETYP_ATR', 'STRING[1]', 'Schemat informacji dodatkowych',
   'ETYPYATT', 'STRING[1]', 'Typy załaczników'
);
_params.ETYPYFIR:='T'; _params.ETYP_ATR:='T'; _params.ETYPYATT:='N';
_win:=_params.mk_edit('Parametry kopiowania');
_params.win_efld(_win,,'ETYPYFIR',,,,,,,,,'check-box',,"'T'","'N'");
_params.win_efld(_win,,'ETYP_ATR',,,,,,,,,'check-box',,"'T'","'N'");
{? _wyb=3 & POMOC.W_PORTAL='P'
|| _params.win_efld(_win,,'ETYPYATT',,,,,,,,,'check-box',,"'T'","'N'");
   _params.ETYPYATT:='T'
?};
_btnok:=_params.win_ebtn(_win,'text='+'&OK'@+',panel=bottom,align=end',"'key:F2'");
_btnan:=_params.win_ebtn(_win,'text='+'&Anuluj'@+',panel=bottom,align=end',"'key:Esc'");
_params.btn_eopt(_win,_btnok,'tooltip='+exec('help_red_ok','#window','P'));
_params.btn_eopt(_win,_btnan,'tooltip='+exec('help_red_esc','#window','A'));
_params.win_edit(_win);
{? _params.edit()
|| ETYPY.cntx_psh();
   exec('KOMM','#object');
   KOMM.init(,,'Uwagi po kopiowaniu wniosków'@);
   ETYPY.index('UNIK_WP');
   ETYPY.prefix(ETYPY.TYPOBIEG,'N');
   ETYPY.prefix(ETYPY.TYPOBIEG,{? _wyb=1 || 'N' |? _wyb=2 || 'T' || 'P' ?});
   ETYPY.win_sel({? _wyb=1 || 'SLO_WYB' || 'SLO_WYBP' ?});
   {? ETYPY.select()
   || _etypyref:=ETYPY.ref();
      _jest:=0;
      {? _wyb<>1
      || _naz:=ETYPY.NAZWA;
         _id:=ETYPY.ID_WP;
         ETYPY.cntx_psh();
         ETYPY.index('UNIK_WP');
         ETYPY.prefix(ETYPY.TYPOBIEG,POMOC.W_PORTAL,_naz,);
         {? ETYPY.first()
         || _naz:=exec('new_naz','!zws_par_wtyp')
         ?};
         ETYPY.index('ID_WP'); ETYPY.prefix(_id,);
         {? ETYPY.first()
         || _id:=exec('new_id','!zws_par_wtyp')
         ?};
         ETYPY.cntx_pop()
      ?};
      ETYPY.AKTYWNY:='N';
      ETYPY.W_PORTAL:=POMOC.W_PORTAL;
      {? _wyb<>1
      || ETYPY.NAZWA:=_naz;
         ETYPY.ID_WP:=_id
      || ETYPY.ED_TEMAT:='N'
      ?};
      {? ETYPY.W_PORTAL='T' || ETYPY.win_edit('REDWWP') || ETYPY.win_edit('REDWPL') ?};
      {? _wyb<>1 | ETYPY.edit("exec('rpoetypy','!zws_par_otyp')")
      || ETYPY.prefix();
         ETYPY.add();
         {? _params.ETYPYFIR='T'
         || ETYPYFIR.cntx_psh();
            ETYPYFIR.index('UNIK');
            ETYPYFIR.prefix(_etypyref);
            {? ETYPYFIR.first()
            || {!
               |? ETYPYFIR.cntx_psh();
                  ETYPYFIR.prefix();
                  ETYPYFIR.ETYPY:=ETYPY.ref();
                  ETYPYFIR.add();
                  ETYPYFIR.cntx_pop();
                  ETYPYFIR.next()
               !}
            ?};
            ETYPYFIR.cntx_pop()
         ?};
         {? _params.ETYP_ATR='T' || exec('atr_copy','!zws_par_wtyp',_etypyref,ETYPY.ref()) ?};
         {? _params.ETYPYATT='T'
         || ETYPYATT.cntx_psh();
            ETYPYATT.index('SLO_NAZ');
            ETYPYATT.prefix(_etypyref);
            {? ETYPYATT.first()
            || {!
               |? ETYPYATT.cntx_psh();
                  ETYPYATT.prefix();
                  ETYPYATT.ETYPY:=ETYPY.ref();
                  _txt:=ETYPYATT.memo_txt(,1,'TYPESIGN');
                  {? ETYPYATT.add() & _txt<>''
                  || ETYPYATT.memo_set(_txt,'TYPESIGN');
                     ETYPYATT.memo_put(,'TYPESIGN')
                  ?};
                  ETYPYATT.cntx_pop();
                  ETYPYATT.next()
               !}
            ?};
            ETYPYATT.cntx_pop()
         ?}
      || FUN.info('Zrezygnowano z kopiowania wniosku')
      ?}
   ?};
   {? ~KOMM.empty() || KOMM.select() ?};
   ETYPY.cntx_pop()
?}


\atr_copy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Kopiuje przypisane ETYP_ATR z jednego do drugiego podanego ETYPY
::   WE: _a [ETYPY] - ref ETYPY, z którego kopiowane są ETYP_ATR
::       _b [ETYPY] - ref ETYPY, do którego kopiowane są ETYP_ATR
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ref1:=_a;
_ref2:=_b;
ETYP_ATR.cntx_psh();
ETYP_ATR.index('KOLZ');
ETYP_ATR.prefix(_ref1);
{? ETYP_ATR.first()
|| {! |?
   ETYP_ATR.TAT().NA;
   _tat1:=ETYP_ATR.TAT;
   ETYP_ATR.cntx_psh();
   ETYP_ATR.prefix();
   _wymag:=ETYP_ATR.WYMAG;
   _edit:=ETYP_ATR.EDIT;
   _slopole:=ETYP_ATR.SLOPOLE;
   _column:=ETYP_ATR.COLUMN;
   _row:=ETYP_ATR.ROW;
   _sec_idx:=ETYP_ATR.SEC_IDX;
   _section:=ETYP_ATR.SECTION;
   _hint:=ETYP_ATR.HINT;
   _max_leng:=ETYP_ATR.MAX_LENG;
   _width:=ETYP_ATR.WIDTH;
   _minvalue:=ETYP_ATR.MINVALUE;
   _maxvalue:=ETYP_ATR.MAXVALUE;
   _default:=ETYP_ATR.DEFAULT;
   _visible:=ETYP_ATR.VISIBLE;
   _tat:=exec('add_tat','!zws_par_wtyp',_tat1);
   {? _tat<>-1
   ||
      ETYP_ATR.blank();
      ETYP_ATR.ETYPY:=_ref2;
      ETYP_ATR.WYMAG:=_wymag;
      ETYP_ATR.EDIT:=_edit;
      ETYP_ATR.SLOPOLE:=_slopole;
      ETYP_ATR.TAT:=_tat;
      ETYP_ATR.COLUMN:=_column;
      ETYP_ATR.ROW:=_row;
      ETYP_ATR.SEC_IDX:=_sec_idx;
      ETYP_ATR.SECTION:=_section;

      ETYP_ATR.HINT:=_hint;
      ETYP_ATR.MAX_LENG:=_max_leng;
      ETYP_ATR.WIDTH:=_width;
      ETYP_ATR.MINVALUE:=_minvalue;
      ETYP_ATR.MAXVALUE:=_maxvalue;
      ETYP_ATR.DEFAULT:=_default;
      ETYP_ATR.VISIBLE:=_visible;
      ETYP_ATR.index('KOLZ');
      ETYP_ATR.prefix(ETYP_ATR.ETYPY,ETYP_ATR.ZDARZT,ETYP_ATR.KOL);
      {? ETYP_ATR.size()=1
      || {!
         |? ETYP_ATR.prefix();
            ETYP_ATR.KOL+=1;
            ETYP_ATR.prefix(ETYP_ATR.ETYPY,ETYP_ATR.ZDARZT,ETYP_ATR.KOL);
            ETYP_ATR.size()=1
         !}
      ?};

      ETYP_ATR.prefix();
      ETYP_ATR.add()
   ?};
   ETYP_ATR.cntx_pop();
   ETYP_ATR.next()
   !}
?};
ETYP_ATR.cntx_pop()


\add_tat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Tworzy nowy TAT na podstawie rekordu TAT starego typu
::   WE: _a - ref ETYP_ATR.TAT
::   WY: REF dodanego rekordy albo -1 dla złego typu atrybutu
::----------------------------------------------------------------------------------------------------------------------
_tat:=_a;
TAT.seek(_tat);
_ret:=0;
_na:=TAT.NA;
_opis:=TAT.OPIS;
_typ:=TAT.TYP;
_czy_prec:=TAT.TSEP;
_prec:=TAT.PREC;
_slu:=TAT.SLU;
_miejsce:=TAT.MIEJSCE;
TAT.blank();
_ost:=_na+1;
{? _ost='1' | _ost='2' | _ost='3' | _ost='4' | _ost='5' | _ost='6' | _ost='7' | _ost='8' | _ost='9' | _ost='0'
|| TAT.NA:=_na -1;
   TAT.NA+=$(1+(#_ost))
|| TAT.NA:=_na+'2'
?};
_na:=TAT.NA;
TAT.cntx_psh();
TAT.index('NA');
TAT.prefix(TAT.NA,);
_ost:=TAT.NA+1;
{? TAT.size()=1
|| _nr:=#_ost;
   _na:=TAT.NA-1;
   {!
   |? _nr+=1;
      TAT.NA:=_na+$_nr;
      {? +TAT.NA=20 & _nr>9|| TAT.NA:=_na-1 + $_nr ?};
      TAT.prefix(TAT.NA,);
      TAT.size()=1
   !};
   _na:=TAT.NA
?};
TAT.cntx_pop();
TAT.NA:=_na;
TAT.OPIS:=_opis;
TAT.CZY_PREC:=_czy_prec;
TAT.PREC:=_prec;
TAT.MIEJSCE:=_miejsce;
{? _typ='L' | _typ='D' | _typ='T' | _typ='C' | _typ='B'
|| TAT.TYP:=_typ
|? _typ='S'
|| TAT.TYP:='T';
   TAT.PORSLO:=exec('add_porslo','!zws_par_wtyp',_slu)
|? _typ='U' | _typ='X' | _typ='O'
|| _styp:={? _typ='U' || 'Schemat struktury'
          |? _typ='X' || 'Słownik tymczasowy'
          |? _typ='O' || {? TAT.W_PORTAL='T' || 'Etykieta' || 'Nagłówek' ?}
          ?};
   KOMM.add('Typ atrybutu %1 uniemożliwia automatyczne dodanie informacji dodatkowej %2. Należy dodać go ręcznie.'[_styp,ETYP_ATR.ID_WP]);
   _ret:=-1
|| TAT.TYP:=_typ
?};
{? _ret=0
|| TAT.prefix();
   TAT.add();
   _ret:=TAT.ref()
|| _ret:=-1
?};
_ret


\add_porslo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Dodaje nowe rekordy PORSLO na podstawie SLU
::   WE: _a [ETYPY] - ref SLU
::   WY: ref stworzonego PORSLO
::----------------------------------------------------------------------------------------------------------------------
_ref1:=_a;
PORSLO.cntx_psh();SLU.cntx_psh();SLO.cntx_psh();
SLU.seek(_ref1);
PORSLO.blank();
PORSLO.FIELD:=exec('customField','portal_slowniki');
PORSLO.OPIS:=SLU.OP;
::PORSLO.TYPE;
PORSLO.CODE:=SLU.NAZ;
::PORSLO.FORMULA;
PORSLO.FIRMA:=FIRMA.ref();
PORSLO.cntx_psh();
PORSLO.index('FIELD');
PORSLO.prefix(FIRMA.ref(),PORSLO.FIELD,PORSLO.TYPE,PORSLO.CODE);
{? PORSLO.size()>0
|| {! |?
   _ost:=PORSLO.CODE+1;
   {? _ost='1' | _ost='2' | _ost='3' | _ost='4' | _ost='5' | _ost='6' | _ost='7' | _ost='8' | _ost='9' | _ost='0'
   || PORSLO.CODE:=PORSLO.CODE-1;
      PORSLO.CODE+=$(1+(#_ost))
   || PORSLO.CODE+='2'
   ?};
   PORSLO.prefix(FIRMA.ref(),PORSLO.FIELD,PORSLO.TYPE,PORSLO.CODE);
   PORSLO.size()>0
   !}
?};
_code:=PORSLO.CODE;
PORSLO.cntx_pop();
PORSLO.CODE:=_code;
PORSLO.add();
_ref:=PORSLO.ref();
PORSLO.cntx_pop();SLU.cntx_pop();SLO.cntx_pop();
exec('add_porsloit','!zws_par_wtyp',_ref,_ref1);
_ref


\add_porsloit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Dodaje nowy rekord PORSLOIT na podstawie rekordów SLO
::   WE: _a - REF PORSLO
::       _b - REF SLU
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_slu:=_b;
PORSLOIT.cntx_psh();
SLO.cntx_psh();
SLO.index('SL');
SLO.prefix(_slu);
{? SLO.first()
|| {! |?
   PORSLOIT.VALUE:=SLO.KOD;
   PORSLOIT.DESC:=SLO.TR;
   PORSLOIT.PORSLO:=_ref;
   PORSLOIT.add();
   SLO.next()
   !}
?};
SLO.cntx_pop();
PORSLOIT.cntx_pop()


\etypy_kop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Akcja kopiuj dla okna wertowania 'WERWWP' tabeli ETYPY
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ETYPY.cntx_psh();
ETYPY.index('UNIK_WP');
ETYPY.prefix(ETYPY.TYPOBIEG,'N');
ETYPY.win_sel('SLO_WYB');
ETYPY.hdr_sel('Wnioski do kopiowania');
{? ETYPY.select()
|| _etypyref:=ETYPY.ref();
   _params:= tab_tmp(,
   'ETYPYFIR', 'STRING[1]', 'Parametry dekretacji',
   'ETYP_ATR', 'STRING[1]', 'Schemat informacji dodatkowych',
   'ETYPYDTP', 'STRING[1]', 'Obsługa projektów'
   );
   _params.ETYPYFIR:='T'; _params.ETYP_ATR:='T'; _params.ETYPYDTP:='T';
   _win:=_params.mk_edit('Parametry kopiowania');
   _params.win_efld(_win,,'ETYPYFIR',,,,,,,,,'check-box',,"'T'","'N'");
   _params.win_efld(_win,,'ETYP_ATR',,,,,,,,,'check-box',,"'T'","'N'");
   _params.win_efld(_win,,'ETYPYDTP',,,,,,,,,'check-box',,"'T'","'N'");
   _btnok:=_params.win_ebtn(_win,'text='+'&OK'@+',panel=bottom,align=end',"'key:F2'");
   _btnan:=_params.win_ebtn(_win,'text='+'&Anuluj'@+',panel=bottom,align=end',"'key:Esc'");
   _params.btn_eopt(_win,_btnok,'tooltip='+exec('help_red_ok','#window','P'));
   _params.btn_eopt(_win,_btnan,'tooltip='+exec('help_red_esc','#window','A'));
   _params.win_edit(_win);
   {? _params.edit()
   || _na:=ETYPY.NAZWA;
      _ost:=ETYPY.NAZWA+1;
      {? _ost='1' | _ost='2' | _ost='3' | _ost='4' | _ost='5' | _ost='6' | _ost='7' | _ost='8' | _ost='9' | _ost='0'
      || ETYPY.NAZWA:=_na-1;
         ETYPY.NAZWA+=$(1+(#_ost))
      || ETYPY.NAZWA:=_na+'2'
      ?};
      ETYPY.cntx_psh();
      ETYPY.index('UNIK_WP');
      ETYPY.prefix(ETYPY.TYPOBIEG,'N',ETYPY.NAZWA);
      _ost:=ETYPY.NAZWA+1;
      {? ETYPY.first()
      || _nr:=#_ost;
         _name:=ETYPY.NAZWA-1;
         {! |?
         _nr+=1;
         ETYPY.NAZWA:=_name+$_nr;
         {? +ETYPY.NAZWA=50 & _nr>9|| ETYPY.NAZWA:=_name-1 + $_nr ?};
         ETYPY.prefix(ETYPY.TYPOBIEG,'N',ETYPY.NAZWA);
         ETYPY.first()
         !}
      ?};
      _name:=ETYPY.NAZWA;
      ETYPY.cntx_pop();

      ETYPY.NAZWA:=_name;
      {? ETYPY.add()
      || {? _params.ETYP_ATR='T'
         || ETYP_ATR.cntx_psh();
            ETYP_ATR.index('TATZ');
            ETYP_ATR.prefix(_etypyref);
            {? ETYP_ATR.first()
            || {!
               |? ETYP_ATR.memo_get(,'OPIS');
                  ETYP_ATR.memo_get(,'DOPIS');
                  ETYP_ATR.cntx_psh();
                  ETYP_ATR.prefix();
                  ETYP_ATR.ETYPY:=ETYPY.ref();
                  {? ETYP_ATR.add()
                  || ETYP_ATR.memo_put(,'OPIS');
                     ETYP_ATR.memo_put(,'DOPIS')
                  ?};
                  ETYP_ATR.cntx_pop();
                  ETYP_ATR.next()
               !}
            ?};
            ETYP_ATR.cntx_pop()
          ?};

         {? _params.ETYPYDTP='T'
         || ETYPYDTP.cntx_psh();
            ETYPYDTP.index('UNIK');
            ETYPYDTP.prefix(_etypyref);
            {? ETYPYDTP.first()
            || {!
               |? ETYPYDTP.cntx_psh();
                  ETYPYDTP.prefix();
                  ETYPYDTP.ETYPY:=ETYPY.ref();
                  ETYPYDTP.add();
                  ETYPYDTP.cntx_pop();
                  ETYPYDTP.next()
               !}
            ?};
            ETYPYDTP.cntx_pop();

            ETYPYPOD.cntx_psh();
            ETYPYPOD.index('UNIK');
            ETYPYPOD.prefix(_etypyref);
            {? ETYPYPOD.first()
            || {!
               |? ETYPYPOD.cntx_psh();
                  ETYPYPOD.prefix();
                  ETYPYPOD.ETYPY:=ETYPY.ref();
                  ETYPYPOD.add();
                  ETYPYPOD.cntx_pop();
                  ETYPYPOD.next()
               !}
            ?};
            ETYPYPOD.cntx_pop()
         ?};

         {? _params.ETYPYFIR='T'
         || ETYPYFIR.cntx_psh();
            ETYPYFIR.index('UNIK');
            ETYPYFIR.prefix(_etypyref);
            {? ETYPYFIR.first()
            || {!
               |? ETYPYFIR.cntx_psh();
                  ETYPYFIR.prefix();
                  ETYPYFIR.ETYPY:=ETYPY.ref();
                  ETYPYFIR.add();
                  ETYPYFIR.cntx_pop();
                  ETYPYFIR.next()
               !}
            ?};
            ETYPYFIR.cntx_pop()
         ?}
      ?}
   ?}
?};
ETYPY.cntx_pop()


\pow_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MP [20.42]
:: OPIS: Akcja Powiązane procesy dla tabeli ETYPY
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ETYPPROC.cntx_psh();
ETYPPROC.index('DISP');
ETYPPROC.prefix(ETYPY.ref(),REF.FIRMA().SYMBOL);
ETYPPROC.win_sel('WER');
ETYPPROC.select();
ETYPPROC.cntx_pop()


\new_naz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca nową nazwę wniosku
::----------------------------------------------------------------------------------------------------------------------
_cur:=ETYPY.NAZWA;
_lp:=#(_cur+2);
{? _lp
|| _cur:=_cur-2
|? +_cur>48
|| _cur:=_cur-(+_cur-48)
?};
ETYPY.cntx_psh();
ETYPY.index('UNIK_WP');
{!
|? _lp+=1;
   _new:=_cur+(('0'+$_lp)+2);
   ETYPY.prefix(ETYPY.TYPOBIEG,ETYPY.W_PORTAL,_new,);
   ETYPY.first() & _lp<100
!};
ETYPY.cntx_pop();
_new


\new_id
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.37]
:: OPIS: Zwraca nową nazwę wniosku
::----------------------------------------------------------------------------------------------------------------------
_cur:=ETYPY.ID_WP;
_lp:=#(_cur+2);
{? _lp
|| _cur:=_cur-2
|? +_cur>48
|| _cur:=_cur-(+_cur-48)
?};
ETYPY.cntx_psh();
ETYPY.index('ID_WP');
{!
|? _lp+=1;
   _new:=_cur+(('0'+$_lp)+2);
   ETYPY.prefix(_new,);
   ETYPY.first() & _lp<100
!};
ETYPY.cntx_pop();
_new


:Sign Version 2.0 jowisz:1045 2023/08/25 11:56:11 da5b4dc468f2cd737388e1d4ded411294609bd888aac628ea2300cf8d90250ef95f3a13c3d699eaa05420f263a6f1f99ce1e477f169d2e4cc39170d5db6d5829f0c9652db4bc91995f4219ab6030be2d93691fd39771247ab65a835461df97eb475497481058561046edbbf6dba43a4dbe21eb299e024ca38c9c6c3deb232d2e
