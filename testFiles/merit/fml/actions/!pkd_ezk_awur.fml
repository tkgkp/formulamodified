:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_ezk_awur.fml
:: Utworzony: 26.11.2019
:: Autor: IS
::======================================================================================================================
:: Zawartość: Obsługa czynności PKD_EZK_AWUR - Zmieniające się wymiary urlopów.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Zmieniające się wymiary urlopów - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# properties=SERVICE
::# permissions=F_ZATR,UD_SKL
::
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
::
:: Czynność zbiera informacje o pracownikach, których wymiar urlopu ulega zmianie w okresie określonym parametrami
:: wejściowymi OD i DO. Dla czynności serwisowej wymagana jest co najmniej data OD.
:: Jeżeli data DO ma wartość 0/0/0, to uwzględnione będą wszystkie badania, kończące się po dacie OD.
::# kind=WE, symbol=OD, type=DATE, name=Data początkowa badanego okresu, required=N
::# kind=WE, symbol=DO, type=DATE, name=Data końcowa badanego okresu, required=N
::
:: Parametr wejściowy UD_SCH pozwala wskazać symbol schematu (typu PODZORG), który posłuży do ustalenia jednostki
:: organizacyjnej, przekazanej parametrem UD_SKL. Jeżeli parametr nie zostanie przekazany (ustawiony), to wybrany
:: zostanie schemat domyślny lub (jeżeli domyślny nie został określony) pierwszy (w kolejności alfabetycznej).
::# kind=WE, symbol=UD_SCH, type=STRING, name=Schemat organizacyjny, required=N, ^
::#    fml_val="exec('ud_sch_wybierz','schemat',,_a).SYMBOL"
::
:: Parametr wejściowy UD_SKL pozwala wskazać jednostkę organizacyjną, do której będzie ograniczony zakres przetwarzania.
:: Domyślnie przetwarzane będą wszystkie jednostki organizacyjne.
::# kind=WE, symbol=UD_SKL, type=STRING, name=Jednostka organizacyjna, required=N, ^
::#    fml_val="exec('ud_skl_wybierz','schemat',,,1,_a)"
::
:: Parametr wejściowy SQL_FROM umożliwia zbudowanie dodatkowych relacji na potrzeby dodatkowego warunku
:: (patrz SQL_WHERE).
:: Domyślnie przyjmuje wartość pustą.
::# kind=WE, symbol=SQL_FROM, type=STRING, name=Dodatkowe relacje filtra, required=N
::
:: Parametr wejściowy SQL_WHERE umożliwia dodatkowe ograniczenie listy współpracowników. Warunek może odwoływać się
:: do tabeli pracowników (poprzez alias "P" np. "P".ID>1000) oraz
:: do tabeli osób (poprzez alias "1OSOBA" np. "1OSOBA".PLEC='K').
:: Odwołania do innych tabel wymagają odpowiedniego użycia parametru SQL_FROM.
:: Domyślnie SQL_WHERE przyjmuje wartość pustą.
::# kind=WE, symbol=SQL_WHERE, type=STRING, name=Dodatkowy warunek filtra, required=N
::
:: Parametr wejściowy FML_TEST umożliwia dodatkową weryfikację wyboru współpracownika do przetwarzania. Jest treścią
:: formuły w formacie napisu. Jeżeli formuła zwróci wartość 0 to dany współpracownik nie będzie przetwarzany.
:: Formuła jest wykonywana przy ustawionych buforach tabel: P, OSOBA.
:: Domyślnie przyjmuje wartość '1'.
::# kind=WE, symbol=FML_TEST, type=STRING, name=Dodatkowy warunek wyboru, required=N
::
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
::
:: Wynik działania czynności. Parametr szczególnie istotny w przypadku uruchomienia czynności usługowej.
::# kind=WY, symbol=RESULT, type=STRING, name="Wynik czynności (OK,BŁĄD)", required=N
::
::# kind=WY, symbol=OD, type=DATE, name=Data początkowa badanego okresu, required=N
::# kind=WY, symbol=DO, type=DATE, name=Data końcowa badanego okresu, required=N
::
::# kind=WY, symbol=SUB, type=STRING, name=Temat, required=N
::# kind=WY, symbol=RCV, type=MEMO, name=Lista odbiorców, required=N
::# kind=WY, symbol=BODYH, type=MEMO, name=Treść w formacie HTML, required=N
::
:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
params_set(_par:=params_get());
_mp:=_par.mp;
_in:=_par.in;
_out:=_par.out;
_service:=_mp.isService();

_out.SUB:='Zmieniające się wymiary urlopów';
{? (_result:=exec('input_chk_get','personel_alerty',_service,_in,_out.SUB))=''
|| _ret:=exec('run','!pkd_ezk_awur',_service,_mp.buf_act.UID,_in,_out.SUB);
   _out.RESULT:='OK';
   _out.OD:=_in.OD;
   _out.DO:=_in.DO;
   _out.RCV:=_ret.RCV;
   _out.BODYH:=_ret.BODYH

|| {? ~_service
   || FUN.emsg(_result)
   ?};
   _out.RESULT:='BŁĄD'
?};
_mp.save(,_out);
_mp.done();

~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Zmieniające się wymiary urlopów - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().mp.load(exec('kind_in','#b_port'));
_d0:=date(0,0,0);
:: warunek na dopisanie jednostki organizacyjnej
_addUdSklInfo:=_in.UD_SKL<>~~ & _in.UD_SKL<>'';
:: warunek na dopisanie [*]
_addInfo:=(_in.SQL_FROM<>~~ & _in.SQL_FROM<>'') | (_in.SQL_WHERE<>~~ & _in.SQL_WHERE<>'')
   | (_in.FML_TEST<>~~ & _in.FML_TEST<>'');

{? _in.OD<>~~ & _in.OD<>_d0
|| {? _in.DO=_d0 | _in.DO=~~
   || {? _addUdSklInfo
      || {? _addInfo
         || 'Wymiary urlopów zmieniające się %1 i później %2 [*]'@@[_in.OD$1,_in.UD_SKL]
         || 'Wymiary urlopów zmieniające się %1 i później %2'@@[_in.OD$1,_in.UD_SKL]
         ?}
      || {? _addInfo
         || 'Wymiary urlopów zmieniające się %1 i później [*]'@@[_in.OD$1]
         || 'Wymiary urlopów zmieniające się %1 i później'@@[_in.OD$1]
         ?}
      ?}
   |? _in.OD=_in.DO
   || {? _addUdSklInfo
      || {? _addInfo
         || 'Wymiary urlopów zmieniające się %1 %2 [*]'@@[_in.OD$1,_in.UD_SKL]
         || 'Wymiary urlopów zmieniające się %1 %2'@@[_in.OD$1,_in.UD_SKL]
         ?}
      || {? _addInfo
         || 'Wymiary urlopów zmieniające się %1 [*]'@@[_in.OD$1]
         || 'Wymiary urlopów zmieniające się %1'@@[_in.OD$1]
         ?}
      ?}
   || {? _addUdSklInfo
      || {? _addInfo
         || 'Wymiary urlopów zmieniające się w okresie od %1 do %2 %3 [*]'@@
               [_in.OD$1,_in.DO$1,_in.UD_SKL]
         || 'Wymiary urlopów zmieniające się w okresie od %1 do %2 %3'@@
               [_in.OD$1,_in.DO$1,_in.UD_SKL]
         ?}
      || {? _addInfo
         || 'Wymiary urlopów zmieniające się w okresie od %1 do %2 [*]'@@[_in.OD$1,_in.DO$1]
         || 'Wymiary urlopów zmieniające się w okresie od %1 do %2'@@[_in.OD$1,_in.DO$1]
         ?}
      ?}
   ?}
|| 'Wymiary urlopów zmieniające się'@@
?}


\run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [20.14]
:: OPIS: Formuła odpowiedzialna za przetwarzanie danych. Formuła zakłada odpowiednie (względem parametrów wejściowych)
::       filtry na tabeli P. Tak przygotowaną listę pracowników zwraca w postaci tabeli HTML.
::   WE: _a [NUMBER] - czynność bezdialogowa (serwisowa) czy dialogowa  - 1/0
::       _b [STRING] - uid czynności
::       _c [OBJ]    - tablica nazwana z parametrami wejściowymi. Parametry powinny przejść weryfikację za pomocą
::                     funkcji \input_chk_get/personel_alerty.fml. Struktura tablicy:
::                     OD        [DATA]   - data początkowa
::                     DO        [DATA]   - data końcowa
::                     UD_SCH    [STRING] - schemat organizacyjny
::                     UD_SKL    [STRING] - jednostka organizacyjna
::                     SQL_FROM  [STRING] - dodatkowe relacje filtra
::                     SQL_WHERE [STRING] - dodatkowy warunek filtra
::                     FML_TEST  [STRING] - dodatkowy warunek wyboru
::       _d [STRING] - tytuł wiadomości e-mail
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_service:=_a;
_actUid:=_b;
_in:=_c;
_sub:=_d;

P.cntx_psh();
:: Założenie odpowiednich filtrów na tabelę P wg. tego co podano w _in:
exec('fltr_p_ud_sql','personel_alerty',_service,_in);
:: Wygenerowanie tabeli z danymi pracowników ze zmianą wymiaru urlopu:
_TAB:=exec('wym_url_zm','personel_alerty',_in.OD,_in.DO,_in.FML_TEST,'T');
P.f_clear();
P.cntx_pop();

_ret:=obj_new('RCV','BODYH');
_ret.RCV:=_ret.BODYH:='';

:: Pobranie listy adresatów:
_ret.RCV:=exec('emls_w_perm','personel_alerty',_actUid);

{? _TAB.first()
|| _th:="'<th [[STYLE_TABLE_TH]]>'+_a+'</th>'";
   _td:="'<td [[STYLE_TABLE_TD]]>'+_a+'</td>'";

   _ret.BODYH:=
      '<h3>'+
      {? _in.DO=date(0,0,0)
      || 'Pracownicy, którym wymiar urlopu zmienia się po %1 r.'@ [_in.OD$6]
      |? _in.OD=_in.DO
      || 'Pracownicy, którym wymiar urlopu zmienia się %1 r.'@ [_in.OD$6]
      || 'Pracownicy, którym wymiar urlopu zmienia się w okresie od %1 r. do %2 r.'@ [_in.OD$6,_in.DO$6]
      ?}+
      '</h3>\n'

      '<table [[STYLE_TABLE]]>\n'
      '<tr [[STYLE_TABLE_TR]]>'+
         _th('Lp.'@)+
         _th('Nazwisko'@)+
         _th('Imię'@)+
         _th('PESEL'@)+
         _th('Nr teczki'@)+
         _th('Data zatrudnienia'@)+
         _th('Data zwolnienia'@)+
         _th('Jednostka organizacyjna'@)+
         _th('Urlop bieżący - dni'@)+
         _th('Urlop uzupełniający - dni'@)+
         _th('Data nabycia prawa do urlopu uzupełniającego'@)+
      '</tr>\n';

   _lp:=0;
   {!
   |? _lp+=1;
      _ret.BODYH+=
         '<tr [[STYLE_TABLE_TR]]>'+
            _td($_lp)+
            _td(_TAB.NAZWISKO)+
            _td(_TAB.PIERWSZE)+
            _td(_TAB.PESEL)+
            _td(_TAB.T)+
            _td(_TAB.DZA$1)+
            _td(_TAB.DZ$1)+
            _td(_TAB.WYDZIAL)+
            _td($_TAB.LIM_AKT)+
            _td($_TAB.URL_DOD)+
            _td(_TAB.DATA_DOD$1)+
         '</tr>\n';
      _TAB.next()
   !};

   _ret.BODYH+=
      '</table>\n'
      '<p>'+'Ta wiadomość została wygenerowana automatycznie - prosimy na nią nie odpowiadać.'@+'</p>'
?};

{? ~_service
|| FUN.info(
      _sub+'\n\n'+
      'Analiza danych zakończona.'@+'\n'+
      'Liczba zapisów spełniających kryteria: %1.' [$_TAB.size()]
   )
?};

_ret

:Sign Version 2.0 jowisz:1048 2020/10/16 15:19:17 bbfa6569d180320e6664b543446e8fb1f249ce67a42f25dc335607cb5a6554277dc2cffbb18b9395f037001cc5eb9a7b5d31466c6a3e570611f53cab4783a09f5acfcbe5193212a63a0454a0a95250297429f97c58a1f9c31f6b19998e96f7ceba56dd2f93226510752d548f66a36a878a39288187beb059feca3ef5831fd35c
