:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fks_ksr_zbos.fml
:: Utworzony: 25.06.2015
:: Autor: MB
::======================================================================================================================
:: Zawartosc: Formuły czynności FKS_KSR_ZBOS - Zestawienie obrotów i sald
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zestawienie obrotów i sald - główna formuła czynności raportującej
::   WE: [_a] - [1]- z raportów
::               0 - z obszaru
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS
{? _=0 || _a:=1 ?};
params_set(params_get());
{? _a
|| exec('F','object');
   exec('RB','object')
?};
{? KS.prefix(SSTALE.AR); KS.first()
|| exec('wyb_odd','!fks_ksr_zbos');
   exec('rep_exec','#b_report','FKS_KSR_ZBOS','fks_ks_*',,1);
   exec('res_odd','!fks_ksr_zbos')
|| FUN.info('Nie zdefiniowano planu kont w bieżącym roku bilansowym.'@)
?}


\wyb_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: wybor jednostki ksiegowej dla wydrukow
::  OLD: \wyb_odd/fiks.fml
::----------------------------------------------------------------------------------------------------------------------
ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
{? ODD.size()>1
|| {? OPERATOR.DEPT<>0
   || OPERATOR.USER();
      exec('get_usersf','users');
      {? USERSF.LOCK='N'
      || _pyt:=FUN.choice(
            'Zestawienia drukować dla: '@,1,
            'Wszystkich jednostek księgowych'@,'Jedn. księgowej: %1'@[OPERATOR.DEPT().OD])
      || _pyt:=2
      ?};
      {? _pyt=1
      || WYDRUKI.ODD:=0;
         F.set_odd(null)
      |? _pyt=2
      || WYDRUKI.ODD:=OPERATOR.DEPT;
         F.set_odd(OPERATOR.DEPT)
      ?}
   || F.set_odd(OPERATOR.DEPT); WYDRUKI.ODD:=0
   ?}
|| WYDRUKI.ODD:=OPERATOR.DEPT
?}


\res_odd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Reset jednostki ksiegowej dla wydruków
::  OLD: \res_odd/fiks.fml
::----------------------------------------------------------------------------------------------------------------------
ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
{? ODD.size()>1
|| {? OPERATOR.DEPT<>0
   || F.resetodd()
   ?}
?}


\ks_anal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Dodaje rekordy do tabeli :RS, dla potrzeb wydruku ks_anal.rpm
::   WE: _a - :ROK   - KOD z tabeli ROK_F
::       _b - :SEP   - separator konta
::       _c - :RS    - uchwyt tabeli :RS
::       _d - :WAL   - kod waluty
::       _e - :WZ    - czy uwzgledniać parametr wzorca 'Scalanie'
::       _f - :ODD   - jednoska ksiegowa
::       _g - :UT_KS - Podsumowanie po kazdym poziomie (T/N)
::       _h - :SO    - BO (S)aldo/(O)broty
::       _i - :RK    - (1)pozabilansowe,(2)bilansowe,(3)wszystkie,(4)wynikowe,(5)wszystkie bez pozabilansowych
::       _j - :ZK    - (0)Prefix,(2)Maska, (3) Lista, (4)Zakres, (5)Schemat
::       _k - :PRFX  - Prefix
::       _l - :MASKA - Maska
::       _m - :KS_OD - (Zakres) Od konta
::       _n - :KS_DO - (Zakres) Do konta
::       _o - :SCH   - Schemat kont
::       _p - :PZ    - Druk. pozycje zerowe (T/N)
::       _q - :SYNT  - Dl. syntetyki
::       _r - :ZAM   - status okresu
::       _s - :RSCH  - ref Schematu kont
::       _t - :STAMP - USER tm_stamp
::       _u - :DOD   - od daty
::       _v - :DDO   - do daty
::       _w - :ZBO   - obroty narastajaco z BO
::       _x - :PS    - konta aktywno-pasywne z podwojnymi saldami (1/0)
::       _y - :BZ    - czy uwzglednic bilans zamkniecia (T/N)
::       _z - :KURS  - kurs waluty
::  OLD: \ks_anal/ks_anal.fml
::----------------------------------------------------------------------------------------------------------------------
_ee:=FINFO.NAROD().KOD;
{? var_pres('TABK')<=0
|| {? (SLU.index('NAZ');SLU.prefix();SLU.find_key('WALUTY'))
      & (SLO.index('SL');SLO.prefix();SLO.find_key(SLU.ref,_d))
   || exec('konta','dok_fks_zest',_a,SLO.ref,_i,'A',_j,{? _j=0 || _k |? _j=2 || _l |? _j=4 ||_m || '' ?},
                          {? _j=4 || _n || '' ?},
                          {? _j=5 & _o<>'' & _s>0
                          || {? KON_WYDR.seek(_s,KON_WYDR.name()) || KON_WYDR.ref || 0 ?}
                          || 0
                          ?}, _t)
   ?}
?};
_ndx:='';
{? var_pres('TABK')>0
   & (_ndx:=TABK.ndx_tmp('',1,'KSSYM',,0,'ANSYM',,0,'POZ',,0); TABK.index(_ndx); TABK.first())
   & (ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA,_a); ROK_F.first())
   & (SLU.index('NAZ');SLU.prefix();SLU.find_key('WALUTY'))
   & (SLO.index('SL');SLO.prefix();SLO.find_key(SLU.ref,_d))
   & (SLO.index('SL');SLO.prefix();SLO.find_key(SLU.ref,_ee))
   & (_f='' | (ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA); ODD.find_key(_f,_f)))
|| _tmp1:={? _j=2 | _j=0 | _j=4
          || exec('anal_kon','dok_fks_zest', ROK_F.ref(),_u,_v,_h,_w, SLO.find_key(SLU.ref,_d);SLO.ref,
                                      SLO.find_key(SLU.ref,_ee);SLO.ref, {? _f='' || null || ODD.ref() ?},
                                      _y,_x,
                                      {? _j=4 || _m || '' ?},
                                      {? _j=0 | _j=2
                                      || exec('str_sql','#sql',{? _j=0 || _k || _l ?})
                                      || _n+%255
                                      ?})
          || exec('anal_kon','dok_fks_zest', ROK_F.ref(),_u,_v,_h,_w, SLO.find_key(SLU.ref,_d);SLO.ref,
                                      SLO.find_key(SLU.ref,_ee);SLO.ref, {? _f='' || null || ODD.ref() ?},_y,_x)
          ?};
   _tmp1.index(_tmp1.ndx_tmp('',0,'KON',,0));
    _c.index(_c.ndx_tmp('',0,'KONTO',,0)); _kon:='';
   TABK.first();
   {!|? _c.blank; _c.REK:='P'; _c.KS:=TABK.KSSYM; _c.KONTO:=TABK.ANSYM; _c.KSSALDO:=TABK.KSSALDO;
        _c.OPIS:=exec('op_konta','dok_fks_zest',TABK.ANSYM,ROK_F.ref,{? TABK.POZ<0 || -1 || TABK.POZ ?},1,_q);
        {?  {? _s>0 || TABK.POZ>0 || TABK.POZ>0 & _g='N' ?}
        || _c.KONTO:=TABK.KSSYM;
           _c.POZ:=TABK.POZ;
           {!_it:=1..TABK.POZ|! {? ($('KA.K'+$(_it)))()<>''||_c.KONTO+=_b+($('KA.K'+$(_it)))() ?}!}
        |?  {? _s>0 || TABK.POZ=0 || TABK.POZ=0 | _g='T' ?}
        || _c.POZ:={? BUD.KS().SYM=TABK.KSSYM || BUD.POZ || 0 ?}
        || _c.KONTO:=TABK.KSSYM; _c.POZ:=-1
        ?};
        {? (_kon='' | _kon<>_c.KONTO) & (_tmp1.prefix(_c.KONTO);_tmp1.first())
        || {!|?
                _c.BOWN+=_tmp1.BOWN;
                _c.BOMA+=_tmp1.BOMA;
                _c.OBWN+=_tmp1.OBWN;
                _c.OBMA+=_tmp1.OBMA;
                _c.ONWN+=_tmp1.ONWN;
                _c.ONMA+=_tmp1.ONMA;
                _c.SAWN+=_tmp1.SWN;
                _c.SAMA+=_tmp1.SMA;
                _tmp1.next()
           !}
        ?};
        {? (_kon='' | _kon<>_c.KONTO) &
           (_p='T' | ( _p='N' & ( _c.BOWN<>0 | _c.BOMA<>0 | _c.OBWN<>0 | _c.OBMA<>0 | _c.ONWN<>0 | _c.ONMA<>0 )))
        || _kon:=_c.KONTO;
           {? ~_x & _c.KSSALDO='D'
           || {? _h='S'
              || _bwn:=_c.BOWN;
                 _bma:=_c.BOMA;
                 _c.BOWN:=F.SWn(_bwn,_bma);
                 _c.BOMA:=F.SMa(_bwn,_bma)
              ?};
              _swn:=_c.SAWN; _sma:=_c.SAMA;
              _c.SAWN:=F.SWn(_swn,_sma);
              _c.SAMA:=F.SMa(_swn,_sma)
           ?};
           {? _z<>1 & _z<>0
           || _c.BOWN:=(_c.BOWN/_z)$2;
              _c.BOMA:=(_c.BOMA/_z)$2;
              _c.OBWN:=(_c.OBWN/_z)$2;
              _c.OBMA:=(_c.OBMA/_z)$2;
              _c.ONWN:=(_c.ONWN/_z)$2;
              _c.ONMA:=(_c.ONMA/_z)$2;
              _c.SAWN:=(_c.SAWN/_z)$2;
              _c.SAMA:=(_c.SAMA/_z)$2
           ?};
           _c.add()
        ?};
        TABK.next()
   !}
?};
:: rekordy opisow
echo('Rekordy opisów'@);
_CeScal:=0;
{? _c.index(_c.ndx_tmp('',0,'KONTO',,0,'KONTO',,0)); _c.prefix(); _c.first()
|| {!|? {? _c.POZ>0
        || _kon:=_syn:=_c.KS; exec('op_konta','dok_fks_zest',_c.KONTO,ROK_F.ref,_c.POZ,1,_q);
           _CeScal:=exec('wz','!fks_ksr_zbos',_c.KS);
           {? _e & _CeScal=BILANSP.ASYNT || _c.POZ:=1 ?};
           {!_it:=0.._c.POZ-1 |! {? _it>0 &  ($('KA.K'+$(_it)))()<>'' || _kon+={?_b=',' || '' || _b ?}+($('KA.K'+$(_it)))() ?};
                                 _c.cntx_psh();
                                 {? ~_c.find_key(_kon,_kon)
                                 || _c.blank();
                                    _c.REK:='O';
                                    _c.KS:=_syn;
                                    _c.KONTO:=_kon;
                                    _c.OPIS:={? _it=0 || BUD.KS().NAZ || ($('KA.O'+$(_it+1)))()?};
                                    _c.SCAL:=_CeScal;
                                    _c.BOWN:={? _it>0|| +($('KA.K'+$(_it)))() || _q ?};
                                    _c.add()
                                 ?}; _c.cntx_pop()
           !}
        ?}; _c.next()
   !}
?};
:: rekordy podsumowan
echo('Rekordy podsumowań'@);
_CeScal:=0; _CeOpis:='';
{? _c.index(_c.ndx_tmp('',0,'REK',,0,'KONTO',,0)); _c.prefix('O'); _c.first()
|| _w:=obj_new(8);
   {!|? _k:=_c.KONTO;
        {? _g='T' | (_g='N' & _c.KS=_c.KONTO & _c.SCAL<>BILANSP.ASYNT)
        || _c.cntx_psh();
           _c.prefix('P',_k);
           _c.first();
           {!_i:=1..8 |! _w[_i]:=0 !};
           _i:=0;
           {!|? _w[1]+=_c.BOWN; _w[2]+=_c.BOMA;
                _w[3]+=_c.OBWN; _w[4]+=_c.OBMA;
                _w[5]+=_c.ONWN; _w[6]+=_c.ONMA;
                _w[7]+=_c.SAWN; _w[8]+=_c.SAMA;
                _i+=1;
                _c.next()
           !};
           _c.prefix();
           {? ~_c.find_key('S',_k)
           || _c.REK:='S';  _c.OPIS:='('+$_i+')'; _c.KONTO:=_k+'Ż';
              _c.OBWN:=_w[3]; _c.OBMA:=_w[4];
              _c.ONWN:=_w[5]; _c.ONMA:=_w[6];
              {? _x & _c.KSSALDO='D'
              || _c.BOWN:=_w[1];
                 _c.BOMA:=_w[2];
                 _c.SAWN:=_w[7];
                 _c.SAMA:=_w[8]
              || _c.BOWN:={? _h='S' || F.SWn(_w[1],_w[2]) || _w[1] ?};
                 _c.BOMA:={? _h='S' || F.SMa(_w[1],_w[2]) || _w[2] ?};
                 _c.SAWN:=F.SWn(_w[7],_w[8]);
                 _c.SAMA:=F.SMa(_w[7],_w[8])
           ?};
           _CePoz:=_c.POZ;
           _c.add() ?};
           _c.cntx_pop()
        |? _e & +_k=_c.SCAL
        || _CeScal:=_c.SCAL; _CeOpis:=_c.OPIS;
           _c.cntx_psh();
           _c.prefix('P',_k);
           _c.first();
           {!_i:=1..8 |! _w[_i]:=0 !};
           _i:=0;
           {!|? _w[1]+=_c.BOWN; _w[2]+=_c.BOMA;
                _w[3]+=_c.OBWN; _w[4]+=_c.OBMA;
                _w[5]+=_c.ONWN; _w[6]+=_c.ONMA;
                _w[7]+=_c.SAWN; _w[8]+=_c.SAMA;
                _i+=1;
                _c.del()
           !};
           _c.prefix();
           _c.REK:='P';
           _CePoz:=_c.POZ;
           {? _CePoz<BILANSP.ASYNT || _c.OPIS:='('+$_i+')'+' '+_CeOpis || _c.OPIS:='('+$_i+')' ?};
           _c.KONTO:=_k;
           _c.SCAL:=-_CeScal;
           _c.BOWN:=_w[1]; _c.BOMA:=_w[2];
           _c.OBWN:=_w[3]; _c.OBMA:=_w[4];
           _c.ONWN:=_w[5]; _c.ONMA:=_w[6];
           _c.SAWN:=_w[7]; _c.SAMA:=_w[8];
           _c.add();
           _c.cntx_pop()
        ?};
        {? _e & _CePoz<BILANSP.ASYNT & _c.KONTO<>_c.KS || _c.del() || _c.next() ?}
   !}
?};
_c.prefix();
{? _ndx<>'' || TABK.ndx_drop(_ndx) ?}


\bl_ksod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Wartość początkowa WYDRUKI.KSOD - podpowiada pierwsze konto syntetyczne
::  OLD: \bl_ksod/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
KS.cntx_psh;
KS.index('SYM');
KS.prefix(SSTALE.AO().ROK);
_a:={? KS.first || KS.ref || null ?};
KS.cntx_pop;
_a


\bl_ksdo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Wartość początkowa WYDRUKI.KSDO - podpowiada ostatnie konto syntetyczne
::  OLD: \bl_ksdo/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
KS.cntx_psh;
KS.index('SYM');
KS.prefix(SSTALE.AO().ROK);
_a:={? KS.last || KS.ref || null ?};
KS.cntx_pop;
_a


\ks_otwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Dodaje rekordy do tabeli :RS, dla potrzeb wydruku ks_otwa.rpm
::   WE: _a - :ROK   - KOD z tabeli ROK_F
::       _b - :SEP   - separator konta
::       _c - :RS    - uchwyt tabeli :RS
::       _d - :SA    - (S)yntetyka/(A)nalityka
::       _e - :WAL   - kod waluty
::       _f - :WALN  - kod waluty narodowej
::       _g - :ODD   - jednostka ksiegowa
::       _h - :UT_KS - Wyszczegolnienie korekt (T/N)
::       _i - :SO    - (S)aldo/(O)broty
::       _j - :RK    - (1)pozabilansowe,(2)bilansowe,(3)wszystkie,(4)wynikowe, (5)wszystkie bez pozabilansowych
::       _k - :PS    - Podwojne salda (T/N)
::       _l - :ZK    - (0)Prefix,(1)wszystkie,(2)Maska, (3) Lista, (4)Zakres, (5)Schemat
::       _m - :PRFX  - Prefix
::       _n - :MASKA - Maska
::       _o - :KS_OD - (Zakres) Od konta
::       _p - :KS_DO - (Zakres) Do konta
::       _q - :SCH   - Schemat kont
::       _r - :PZ    - Druk. pozycje zerowe (T/N)
::       _s - :SYNT  - Dl. syntetyki
::       _t - :ZAM   - status okresu
::       _u - :RSCH  - ref Schematu kont
::       _v - :STAMP - USER tm_stamp
::       _w - :KURS  - kurs waluty
::  OLD: \ks_otwa/ks_otwa.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TABK')<=0
|| {? (SLU.index('NAZ'); SLU.prefix(); SLU.find_key('WALUTY'))
      & (SLO.index('SL'); SLO.prefix(); SLO.find_key(SLU.ref,_e))
   || exec('konta','dok_fks_zest',_a,SLO.ref,_j,_d,_l,{? _l=0 || _m |? _l=2 || _n |? _l=4 ||_o || '' ?},
                          {? _l=4 || _p || '' ?},
                          {? _l=5 & _q<>'' & _u>0
                          || {? KON_WYDR.seek(_u,KON_WYDR.name()) || KON_WYDR.ref || 0 ?}
                          || 0
                          ?}, _v)
   ?}
?};
{? var_pres('TABK')>0
   & (TABK.index(TABK.ndx_tmp('',0,'KSSYM',,0,'ANSYM',,0)); TABK.first())
   & (ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA,_a); ROK_F.first())
|| _tmp1:=exec('bokor_konta','!fks_ksr_zbos','',_a,_e,_f,_g);
   _tmp1.index(_tmp1.ndx_tmp('',0,'KON',,0));
   _c.index(_c.ndx_tmp('',0,'KONTO',,0));
   _kon:='';
   {!
   |? _c.blank; _c.REK:='P'; _c.KS:=TABK.KSSYM; _c.KONTO:=TABK.ANSYM; _c.KSSALDO:=TABK.KSSALDO;
      _c.OPIS:=exec('op_konta','dok_fks_zest',TABK.ANSYM,ROK_F.ref,{? TABK.POZ<0 || -1 || TABK.POZ ?},1,_s);
      {? TABK.POZ>0
      || _c.KONTO:=TABK.KSSYM; _c.POZ:=TABK.POZ;
         {!_it:=1..TABK.POZ|! {? ($('KA.K'+$(_it)))()<>''||_c.KONTO+=_b+($('KA.K'+$(_it)))() ?}!}
      |? TABK.POZ=0
      || _c.POZ:={? BUD.KS().SYM=TABK.KSSYM & _d='A' || BUD.POZ || 0 ?}
      || _c.KONTO:=TABK.KSSYM; _c.POZ:=-1
      ?};
      {? (_kon='' | _kon<>_c.KONTO) & (_tmp1.prefix(_c.KONTO);_tmp1.first())
      || {!
         |? {? _h='T'
            || _c.BZWN+={? _i='S'
                        || F.SWn(_tmp1.BOWN+_tmp1.KBOWN,_tmp1.BOMA+_tmp1.KBOMA)
                        || _tmp1.BOWN+_tmp1.KBOWN
                        ?};
               _c.BZMA+={? _i='S'
                        || F.SMa(_tmp1.BOWN+_tmp1.KBOWN,_tmp1.BOMA+_tmp1.KBOMA)
                        || _tmp1.BOMA+_tmp1.KBOMA
                        ?};
               _c.KBOWN+=_tmp1.KBOWN;
               _c.KBOMA+=_tmp1.KBOMA
            ?};
            {? _i='S' & _h='N'
            || _c.BOWN+=F.SWn(_tmp1.BOWN+_tmp1.KBOWN,_tmp1.BOMA+_tmp1.KBOMA);
               _c.BOMA+=F.SMa(_tmp1.BOWN+_tmp1.KBOWN,_tmp1.BOMA+_tmp1.KBOMA)
            || _c.BOWN+=_tmp1.BOWN+{? _h='N' || _tmp1.KBOWN ?};
               _c.BOMA+=_tmp1.BOMA+{? _h='N' || _tmp1.KBOMA ?}
            ?};
            _tmp1.next()
         !}
      ?};
      {? (_kon='' | _kon<>_c.KONTO)
         & (_r='T' | ( _r='N' & ( _c.BOWN<>0 | _c.BOMA<>0 | _c.BZWN<>0 | _c.BZMA<>0 | _c.KBOWN<>0 | _c.KBOMA<>0)))
      || _kon:=_c.KONTO;
         {? _i='S' & {? _c.KSSALDO='D' || _k='N' || 1 ?}
         || {? _h='N'
            || _bwn:=_c.BOWN; _bma:=_c.BOMA;
               _c.BOWN:=F.SWn(_bwn,_bma);
               _c.BOMA:=F.SMa(_bwn,_bma)
            || _bzwn:=_c.BZWN; _bzma:=_c.BZMA;
               _c.BZWN:=F.SWn(_bzwn,_bzma);
               _c.BZMA:=F.SMa(_bzwn,_bzma)
            ?}
         ?};
         {? _w<>1 & _w<>0
         || _c.BOWN:=(_c.BOWN/_w)$2;
            _c.BOMA:=(_c.BOMA/_w)$2;
            _c.BZWN:=(_c.BZWN/_w)$2;
            _c.BZMA:=(_c.BZMA/_w)$2;
            _c.KBOWN:=(_c.KBOWN/_w)$2;
            _c.KBOMA:=(_c.KBOMA/_w)$2
         ?};
         _c.add()
      ?};
      TABK.next()
   !}
?};
:: rekordy opisow
{? _b='A' & _c.index(_c.ndx_tmp('',0,'KONTO',,0)); _c.prefix(); _c.first()
|| {!
   |? {? _c.POZ>0
      || _kon:=_syn:=_c.KS; exec('op_konta','dok_fks_zest',_c.KONTO,ROK_F.ref,_c.POZ,1);
         {! _it:=0.._c.POZ-1
         |! {? _it>0 &  ($('KA.K'+$(_it)))()<>''
            || _kon+=_b+($('KA.K'+$(_it)))()
            ?};
            _c.cntx_psh();
            {? ~(_c.find_key(_kon) & _c.KONTO=_kon)
            || _c.blank();
               _c.REK:='O';
               _c.KS:=_syn;
               _c.KONTO:=_kon;
               _c.OPIS:={? _it=0 || BUD.KS().NAZ || ($('KA.O'+$(_it+1)))()?};
               _c.BOWN:={? _it>0|| +($('KA.K'+$(_it)))() || _s ?};
               _c.add()
            ?};
            _c.cntx_pop()
         !}
      ?};
      _c.next()
   !}
?}


\bokor_konta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: tablica kont wchodzacych do wskazanego prefixu z wartosciami wskazanymi
::       w parametrach
::   WE: _a - prefix konta
::       _b - kod roku
::       _c - kod waluty
::       _d - kod waluty narodowej
::       _e - jednostka ksiegowa
::  OLD: \bokor_konta/konta.fml
::----------------------------------------------------------------------------------------------------------------------
SLU.index('NAZ'); SLU.prefix;
SLO.index('SL'); SLO.prefix();
{? SLU.find_key('WALUTY') & SLO.find_key(SLU.ref(),_c)
|| _c:=SLO.ref(); {? SLO.find_key(SLU.ref,_d) || _d:=SLO.ref() ?}
?};
sql('select /*+MASK_FILTER(POZ,:_h) MASK_FILTER(DOK,:_i) */ POZ.KON, '+
    'sum(case when POZ.STR=\'Wn\' and SLO.KOD=\'BO\' then case :_a when :_b then POZ.SUM '+
                                                                  'else POZ.SUMW end '+
                                                    'else 0 end) as BOWN,'+
    'sum(case when POZ.STR=\'Ma\' and SLO.KOD=\'BO\' then case :_a when :_b then POZ.SUM '+
                                                                  'else POZ.SUMW end '+
                                                    'else 0 end) as BOMA,'+
    'sum(case when POZ.STR=\'Wn\' and SLO.KOD=\'KOR_BO\' then case :_a when :_b then POZ.SUM '+
                                                                      'else POZ.SUMW end '+
                                                        'else 0 end) as KBOWN,'+
    'sum(case when POZ.STR=\'Ma\' and SLO.KOD=\'KOR_BO\' then case :_a when :_b then POZ.SUM '+
                                                                      'else POZ.SUMW end '+
                                                        'else 0 end) as KBOMA '+
    'from @POZ '+
    'join @DOK using (POZ.DOK, DOK.REFERENCE) '+
    'join DOK_REJ using (DOK.DOK_REJ, DOK_REJ.REFERENCE) '+
    'join SLO using (DOK_REJ.SLO, SLO.REFERENCE) '+
    {? _e='' || 'left '||''?}+'join ODD using (DOK.ODD, ODD.REFERENCE) '+
    'where DOK.ZP=\'T\' and POZ.KON like :_c||\'%\' and (SLO.KOD=\'BO\' or SLO.KOD=\'KOR_BO\') '+
    {? _e<>''|| 'and ODD.OD=\''+_e+'\'' || '' ?}+
    'and POZ.REFERENCE between :_f and :_g '+
    {? _c<>_d || 'and POZ.WAL=:_e '|| '' ?}+
    'group by POZ.KON',
     _c,_d,'\''+_a+'\'','\''+_b+'\'','\''+BB.refsql(_c)+'\'','\'pozy'+_b+'00\'',
     '\'pozy'+_b+'00'+%255+'\'','\'pozy'+_b+'00*\'','\'doku'+_b+'00*\'')


\ut_dok1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Po redagowaniu ROZNE.UT_DOK
::  OLD: \ut_dok1/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.UT_DOK=0 & ROZNE.UT_KS=0 || ROZNE.UT_ZN:=0 ?};
{? ROZNE.UT_DOK=0 || ROZNE.UT_ROZ1:=0 ?}; win_disp(); 1


\ut_ks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Po redagowaniu ROZNE.UT_KS
::  OLD: \ut_ks/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.UT_DOK=0 & ROZNE.UT_KS=0 || ROZNE.UT_ZN:=0 ?};
{? fld()=1
|| ROZNE.UT_SCAL:=0;
   ROZNE.efld_opt(ROZNE.win_edit('?'),'enable=0, editable=0',,'UT_SCAL')
|| ROZNE.UT_SCAL:=1;
   ROZNE.efld_opt(ROZNE.win_edit('?'),'enable=1, editable=1',,'UT_SCAL')
?};
win_disp; 1


\ut_roz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Po redagowaniu ROZNE.UT_ROZ1
::  OLD: \ut_roz1/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.UT_ROZR=0 || ROZNE.UT_ROZ2:=0 ?}; win_disp(); 1


\wz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [23.25]
:: OPIS: Formuła sprawdza, czy w budowie konta występuje słownik, którego wzorzec podlega scalaniu
::   WE: _a - prefix konta
::   WY: od którego znaku w symbolu analitycznego następuje scalanie
::----------------------------------------------------------------------------------------------------------------------
_ret:=0; _sep:=SSTALE.AR().SEP;
KS.cntx_psh(); BUD.cntx_psh(); SLU.cntx_psh(); RS.cntx_psh();
{? _
|| KS.index('SYM'); KS.prefix(SSTALE.AR,SSTALE.AR().SYNT+_a);
   {? KS.first()
   || _v_dl:=+KS.SYM; {? _sep<>',' || _v_dl+=1 ?};
      BUD.index('KS'); BUD.prefix(KS.ref); RS.index('RS');
      {? BUD.first()
      || {! |?
            BUD.SLU().SLU();
            RS.prefix();
            _ret:={? RS.find_key(SLU.WZ,) & RS.SCAL=1 || _v_dl ?};
            _v_dl+=SLU.DL;
            {? _sep<>',' || _v_dl+=1 ?};
            ~_ret & BUD.next()
         !}
      ?}
   ?}
?};
KS.cntx_pop(); BUD.cntx_pop(); SLU.cntx_pop(); RS.cntx_pop();
_ret:={? _ret>0 || _ret-1 || 0 ?}


\wz_scal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [23.25]
:: OPIS: Formuła włączenie/wyłączenia scalania dla wzorca
::----------------------------------------------------------------------------------------------------------------------
RS.SCAL:=~RS.SCAL; RS.put()


\ks_anal_zois
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Dodaje rekordy do tabeli :RS, dla potrzeb zakładki ZOIS
::   WE: _a - :ROK   - KOD z tabeli ROK_F
::       _b - :SEP   - separator konta
::       _c - :RS    - uchwyt tabeli :RS
::       _d - :WAL   - kod waluty
::       _e - :WZ    - czy uwzgledniać parametr wzorca 'Scalanie'
::       _f - :ODD   - jednoska ksiegowa
::       _g - :UT_KS - Podsumowanie po kazdym poziomie (T/N)
::       _h - :SO    - BO (S)aldo/(O)broty
::       _i - :RK    - (1)pozabilansowe,(2)bilansowe,(3)wszystkie,(4)wynikowe,(5)wszystkie bez pozabilansowych
::       _j - :ZK    - (0)Prefix,(2)Maska, (3) Lista, (4)Zakres, (5)Schemat
::       _k - :PRFX  - Prefix
::       _l - :MASKA - Maska
::       _m - :KS_OD - (Zakres) Od konta
::       _n - :KS_DO - (Zakres) Do konta
::       _o - :SCH   - Schemat kont
::       _p - :PZ    - Druk. pozycje zerowe (T/N)
::       _q - :SYNT  - Dl. syntetyki
::       _r - :ZAM   - status okresu
::       _s - :RSCH  - ref Schematu kont
::       _t - :STAMP - USER tm_stamp
::       _u - :DOD   - od daty
::       _v - :DDO   - do daty
::       _w - :ZBO   - obroty narastajaco z BO
::       _x - :PS    - konta aktywno-pasywne z podwojnymi saldami (1/0)
::       _y - :BZ    - czy uwzglednic bilans zamkniecia (T/N)
::       _z - :KURS  - kurs waluty
::----------------------------------------------------------------------------------------------------------------------
_ee:=FINFO.NAROD().KOD;
{? var_pres('TABK')<=0
|| {? (SLU.index('NAZ');SLU.prefix();SLU.find_key('WALUTY'))
      & (SLO.index('SL');SLO.prefix();SLO.find_key(SLU.ref,_d))
   || exec('konta','dok_fks_zest',_a,SLO.ref,_i,'A',_j,{? _j=0 || _k |? _j=2 || _l |? _j=4 ||_m || '' ?},
                          {? _j=4 || _n || '' ?},
                          {? _j=5 & _o<>'' & _s>0
                          || {? KON_WYDR.seek(_s,KON_WYDR.name()) || KON_WYDR.ref || 0 ?}
                          || 0
                          ?}, _t)
   ?}
?};
{? ROZNE.ANSLU<>null
|| exec('anslu_slo','fks_ksr');
   {? var_pres('TABK')>0
   || TABK.for_each("TMPANKON.prefix(TABK.ANSYM);
                     {? ~TMPANKON.first()
                     || TABK.del()
                     ?}")
   ?}
?};
VAR_DEL.delete('TMPANKON');
_ndx:='';
{? var_pres('TABK')>0
   & (_ndx:=TABK.ndx_tmp('',1,'KSSYM',,0,'ANSYM',,0,'POZ',,0); TABK.index(_ndx); TABK.first())
   & (ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA,_a); ROK_F.first())
   & (SLU.index('NAZ');SLU.prefix();SLU.find_key('WALUTY'))
   & (SLO.index('SL');SLO.prefix();SLO.find_key(SLU.ref,_d))
   & (SLO.index('SL');SLO.prefix();SLO.find_key(SLU.ref,_ee))
   & (_f='' | (ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA); ODD.find_key(_f,_f)))
|| _tmp1:={? _j=2 | _j=0 | _j=4
          || exec('anal_kon','dok_fks_zest', ROK_F.ref(),_u,_v,_h,_w, SLO.find_key(SLU.ref,_d);SLO.ref,
                                      SLO.find_key(SLU.ref,_ee);SLO.ref, {? _f='' || null || ODD.ref() ?},
                                      _y,_x,
                                      {? _j=4 || _m || '' ?},
                                      {? _j=0 | _j=2
                                      || exec('str_sql','#sql',{? _j=0 || _k || _l ?})
                                      || _n+%255
                                      ?})
          || exec('anal_kon','dok_fks_zest', ROK_F.ref(),_u,_v,_h,_w, SLO.find_key(SLU.ref,_d);SLO.ref,
                                      SLO.find_key(SLU.ref,_ee);SLO.ref, {? _f='' || null || ODD.ref() ?},_y,_x)
          ?};
   _tmp1.index(_tmp1.ndx_tmp('',0,'KON',,0));
    _c.index(_c.ndx_tmp('',0,'KONTO',,0)); _kon:='';
   TABK.first();
   AN.cntx_psh(); _mas:=SSTALE.AR().KOD; AN.use('koan__'+_mas); AN.index('SYM');
   {!|? _c.blank; _c.REK:='P'; _c.KS:=TABK.KSSYM; _c.KONTO:=TABK.ANSYM; _c.KSSALDO:=TABK.KSSALDO;
        _c.OPIS:={? ROZNE.T_TREE='O' & ROZNE.PAR4<>5
                 || AN.prefix(_c.KONTO);
                    {? AN.first()
                    || AN.OPIS
                    || ''
                    ?}
                 || exec('op_konta','dok_fks_zest',TABK.ANSYM,ROK_F.ref,{? TABK.POZ<0 || -1 || TABK.POZ ?},1,_q)
                 ?};
        {?  {? _s>0 || TABK.POZ>0 || TABK.POZ>0 & _g='N' ?}
        || _c.KONTO:=TABK.KSSYM;
           _c.POZ:=TABK.POZ;
           {!_it:=1..TABK.POZ|! {? ($('KA.K'+$(_it)))()<>''||_c.KONTO+=_b+($('KA.K'+$(_it)))() ?}!}
        |?  {? _s>0 || TABK.POZ=0 || TABK.POZ=0 | _g='T' ?}
        || _c.POZ:={? BUD.KS().SYM=TABK.KSSYM || BUD.POZ || 0 ?}
        || _c.KONTO:=TABK.KSSYM; _c.POZ:=-1
        ?};
        {? (_kon='' | _kon<>_c.KONTO) & (_tmp1.prefix(_c.KONTO);_tmp1.first())
        || {!|?
                _c.BOWN+=_tmp1.BOWN;
                _c.BOMA+=_tmp1.BOMA;
                _c.OBWN+=_tmp1.OBWN;
                _c.OBMA+=_tmp1.OBMA;
                _c.ONWN+=_tmp1.ONWN;
                _c.ONMA+=_tmp1.ONMA;
                _c.SAWN+=_tmp1.SWN;
                _c.SAMA+=_tmp1.SMA;
                _tmp1.next()
           !}
        ?};
        {? (_kon='' | _kon<>_c.KONTO) &
           (_p='T' | ( _p='N' & ( _c.BOWN<>0 | _c.BOMA<>0 | _c.OBWN<>0 | _c.OBMA<>0 | _c.ONWN<>0 | _c.ONMA<>0 )))
        || _kon:=_c.KONTO;
           {? ~_x & _c.KSSALDO='D'
           || {? _h='S'
              || _bwn:=_c.BOWN;
                 _bma:=_c.BOMA;
                 _c.BOWN:=F.SWn(_bwn,_bma);
                 _c.BOMA:=F.SMa(_bwn,_bma)
              ?};
              _swn:=_c.SAWN; _sma:=_c.SAMA;
              _c.SAWN:=F.SWn(_swn,_sma);
              _c.SAMA:=F.SMa(_swn,_sma)
           ?};
           {? _z<>1 & _z<>0
           || _c.BOWN:=(_c.BOWN/_z)$2;
              _c.BOMA:=(_c.BOMA/_z)$2;
              _c.OBWN:=(_c.OBWN/_z)$2;
              _c.OBMA:=(_c.OBMA/_z)$2;
              _c.ONWN:=(_c.ONWN/_z)$2;
              _c.ONMA:=(_c.ONMA/_z)$2;
              _c.SAWN:=(_c.SAWN/_z)$2;
              _c.SAMA:=(_c.SAMA/_z)$2
           ?};
           _c.add()
        ?};
        TABK.next()
   !};
   AN.cntx_pop()
?};
:: rekordy opisow
::echo('Rekordy opisów'@);
{? ROZNE.T_TREE<>'O'
|| _CeScal:=0;
   {? _c.index(_c.ndx_tmp('',0,'KONTO',,0,'KONTO',,0)); _c.prefix(); _c.first()
   || {!|? {? _c.POZ>0
           || _kon:=_syn:=_c.KS; exec('op_konta','dok_fks_zest',_c.KONTO,ROK_F.ref,_c.POZ,1,_q);
              {!_it:=0.._c.POZ-1 |! {? _it>0 &  ($('KA.K'+$(_it)))()<>'' || _kon+={?_b=',' || '' || _b ?}+($('KA.K'+$(_it)))() ?};
                                    _c.cntx_psh();
                                    {? ~_c.find_key(_kon,_kon)
                                    || _c.blank();
                                       _c.REK:='O';
                                       _c.KS:=_syn;
                                       _c.KONTO:=_kon;
                                       _c.OPIS:={? _it=0 || BUD.KS().NAZ || ($('KA.O'+$(_it+1)))()?};
                                       _c.SCAL:=_CeScal;
                                       _c.BOWN:={? _it>0|| +($('KA.K'+$(_it)))() || _q ?};
                                       _c.add()
                                    ?}; _c.cntx_pop()
              !}
           ?}; _c.next()
      !}
   ?}
?};
:: rekordy podsumowan
{? ROZNE.T_TREE<>'O'
|| echo('Rekordy podsumowań'@);
   _CeScal:=0;
   {? _c.index(_c.ndx_tmp('',0,'REK',,0,'KONTO',,0)); _c.prefix('O'); _c.first()
   || _w:=obj_new(8);
      {!|? _k:=_c.KONTO;
            _opis:=_c.OPIS;
           {? _g='T' | (_g='N' & _c.KS=_c.KONTO & _c.SCAL<>BILANSP.ASYNT)
           || _c.cntx_psh();
              _c.prefix('P',_k);
              _c.first();
              {!_i:=1..8 |! _w[_i]:=0 !};
              _i:=0;
              {!|? _w[1]+=_c.BOWN; _w[2]+=_c.BOMA;
                   _w[3]+=_c.OBWN; _w[4]+=_c.OBMA;
                   _w[5]+=_c.ONWN; _w[6]+=_c.ONMA;
                   _w[7]+=_c.SAWN; _w[8]+=_c.SAMA;
                   _i+=1;
                   _c.next()
              !};
              _c.prefix();
              {? ~_c.find_key('S',_k)
              || _c.REK:='S';
                 _c.OPIS:=_opis;
                 _c.KONTO:=_k+'Ż';
                 _c.OBWN:=_w[3]; _c.OBMA:=_w[4];
                 _c.ONWN:=_w[5]; _c.ONMA:=_w[6];
                 {? _x & _c.KSSALDO='D'
                 || _c.BOWN:=_w[1];
                    _c.BOMA:=_w[2];
                    _c.SAWN:=_w[7];
                    _c.SAMA:=_w[8]
                 || _c.BOWN:={? _h='S' || F.SWn(_w[1],_w[2]) || _w[1] ?};
                    _c.BOMA:={? _h='S' || F.SMa(_w[1],_w[2]) || _w[2] ?};
                    _c.SAWN:=F.SWn(_w[7],_w[8]);
                    _c.SAMA:=F.SMa(_w[7],_w[8])
              ?};
              _CePoz:=_c.POZ;
              _c.add() ?};
              _c.cntx_pop()
           ?};
           _c.del()
      !}
   ?}
?};
_c.prefix(); echo();
{? _ndx<>'' || TABK.ndx_drop(_ndx) ?}


:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 6029cc9a63479ef84b0242deaeba029b5cce48fe6380ea15aacd7791b06b1a8e4962a15ec4e973e3082ec3e341894bd5a35e54371358b83ff51a70661c511fe216bf8278ffe742d18d71c0df366a9ab02fc9a4bede3e999454bd24510b8635c65d4075152bc174abb88dd6476117afa067c55f99d5f89d6f2ff7b121cac19118
