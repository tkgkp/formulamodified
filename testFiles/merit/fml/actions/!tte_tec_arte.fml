:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !tte_tec_arte.fml
:: Utworzony: 13.04.2015
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły czynności TTE_TEC_ARTE - Akceptacja karty technologicznej
::            Uwaga: większość kodu jest wspólna z czynnością TTE_WTE_ARTE - w przypadku zmian modyfikować oba pliki
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Główna formuła czynności akceptacji karty technologicznej (TTE_TEC_ARTE)
::       Zadaniem formuły jest zaakceptowanie całej karty technologicznej
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

::# permissions=ODDZ

:: PARAMETRY WE:
::# kind=WE, symbol=TKTL, type=_TKTL, name=Wskazanie na kartę technologiczną, required=T, keyref=T
{? var_pres('TKTL',_in)<>type_of(~~) & var_pres('TKTL',_in)<>type_of(null()) || return() ?};
{? var_pres('TKTL',_in)=type_of(~~) || return() ?};
::# kind=WE, symbol=DEFAULT, type=STRING, name=Czy ustawiać kartę jako domyślną dla wszystkich jej produktów?, required=N, fml_val="exec('edit_boolean','#edit',_a,'Czy ustawić kartę jako domyślną dla wszystkich jej produktów?')"
{? var_pres('DEFAULT',_in)=type_of('') || _default:=(-_in.DEFAULT='tak' | -_in.DEFAULT='t') || _default:=-1 ?};

:: PARAMETRY WY:
::# kind=WY, symbol=TKTL, type=_TKTL, name=Wskazanie na kartę technologiczną, required=N
{? var_pres('TKTL',_out)<>type_of(~~) & var_pres('TKTL',_out)<>type_of(null()) || return() ?};

VAR.A_TORW:='T';

_can_continue:=1;
_clean_result:=params_exec('clean','!tte_tec_arte',_mp,_in);
_can_continue:=_clean_result.RESULT;
_tktl:=_clean_result.TKTL;

{? _can_continue>0
||
   {? _tktl<>null()
   ||
      {? exec('FindAndGet','#table',TKTL,_tktl,,"TORW",'')<>'T'
      || _msg:='Niezgodność wywołania czynności.\nNie można wykonać akceptacji dla wzorca technologii.';
         FUN.emsg(_msg);
         _mp.error(_msg)

      |? exec('FindAndGet','#table',TKTL,_tktl,,"ARCH",'')<>'N'
      || _msg:='Niezgodność wywołania czynności.\nNie można wykonać akceptacji dla karty archiwalnej.';
         FUN.emsg(_msg);
         _mp.error(_msg)

      ||
         exec('tktl_cntx_psh','tech_common');
         exec('tktl_use','tech_common',ref_name(_tktl)+3);
         TKTL.clear();

         {? TKTL.seek(_tktl)
         || VAR.A_KTL:=TKTL.ref();
::          Wywołanie z listy ToDo umożliwia podejrzenie elementów karty przed jej akceptacją
            {? _mp.pathTodo() & ~_mp.isAutoRun()
            || _mp.keep();
               {? exec('tktl_lock','tech_common',,'N') &
                  exec('tktl_lock','tech_common',,'O') &
                  exec('tktl_lock','tech_common',,'S') &
                  exec('tktl_lock','tech_common',,'P')
               || VAR.GRUPA:='N';
                  _red:=exec('tktl_display_red_full','tech_head','Akceptacja karty technologicznej'@,,1);
                  TKTL.win_edit(_red);
                  TKTL.display();
                  ~~
               ?};
               exec('tktl_unlock','tech_common',,'N');
               exec('tktl_unlock','tech_common',,'O');
               exec('tktl_unlock','tech_common',,'S');
               exec('tktl_unlock','tech_common',,'P')

            |? _mp.akcja()=''
            || _ok:=exec('tktl_akceptuj','!tte_tec_arte',TKTL.ref(),_mp,-1,_default);
               {? _ok=1
               || _out.TKTL:=TKTL.ref();
                  _mp.save(,_out);
                  _mp.done()
               ?}

            |? _mp.akcja()='MENU'
            || _ok:=exec('tktl_akceptuj','!tte_tec_arte',TKTL.ref(),_mp,0,_default);
               {? _ok=1
               || _out.TKTL:=TKTL.ref();
                  _mp.save(,_out);
                  _mp.done()
               ?}

            |? _mp.akcja()='BUTTON'
            || _ok:=exec('tktl_akceptuj','!tte_tec_arte',TKTL.ref(),_mp,0,_default);
               {? _ok=1
               || _out.TKTL:=TKTL.ref();
                  _mp.save(,_out);
                  _mp.done()
               ?}
            ?}
         ?};
         exec('tktl_cntx_pop','tech_common')
      ?}
   || _msg:='Nie przekazono karty technologicznej.';
      FUN.emsg(_msg);
      _mp.error(_msg)
   ?}
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Opis dla czynności akceptacji karty technologicznej (TTE_TEC_ARTE)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_desc:='';
_keyRefs:=_mp.getRefs();
_in:=_mp.load(exec('kind_in','#b_port'));

:: jest rekord kluczowy to ustawiam odpowiedniego TKTL
{? var_pres('[1]',_keyRefs)
|| _tmp:=exec('FindAndGet','#table',TKTL,_keyRefs[1],,"NRK+' ||| '+WER",'');
   _tab_tmp:=spli_str(_tmp,' ||| ');
   _desc:={? _tmp<>'' || 'Zaakceptuj kartę technologiczną %1 wer. %2'@@[_tab_tmp[1],_tab_tmp[2]] || '' ?}
::|| _desc:=exec('FindAndGet','#table',TKTL,_keyRefs[1],,"'Zaakceptuj kartę technologiczną %1 wer. %2'[NRK,WER]",'')

:: jest parametr wejściowy to ustawiam odpowiedniego TKTL
|? var_pres('TKTL',_in)
|| _tmp:=exec('FindAndGet','#table',TKTL,_in.TKTL,,"NRK+' ||| '+WER",'');
   _tab_tmp:=spli_str(_tmp,' ||| ');
   _desc:={? _tmp<>'' || 'Zaakceptuj kartę technologiczną %1 wer. %2'@@[_tab_tmp[1],_tab_tmp[2]] || '' ?}
::|| _desc:=exec('FindAndGet','#table',TKTL,_in.TKTL,,"'Zaakceptuj kartę technologiczną %1 wer. %2'[NRK,WER]",'')

?};
_desc


\action_menu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Akceptacja karty technologicznej - właściwa akcja z menu okna wertowania
::----------------------------------------------------------------------------------------------------------------------
_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:='TTE_TEC_ARTE';
_args.UIDREF:=TKTL.uidref();
_args.AKCJA:='MENU';
_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
_args.PROC_START:='N';

exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'TKTL',TKTL.ref());

exec('mp_run','#b__box',_args)


\action_button
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Akceptacja karty technologicznej - właściwa akcja z przycisku okna redakcyjnego
::----------------------------------------------------------------------------------------------------------------------
_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:='TTE_TEC_ARTE';
_args.UIDREF:=TKTL.uidref();
_args.AKCJA:='BUTTON';
_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
_args.PROC_START:='N';

exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'TKTL',TKTL.ref());

exec('mp_run','#b__box',_args);
_res:='';
TKTL.get();
{? TKTL.STAN='T'
|| _res:='key:Esc'
?};
_res


\tktl_akceptuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Akceptacja karty technologicznej (podstawowy kod)
::   WE: _a - TKTL.ref()
::       _b - obiekt odpowiedzialny za obsługę procesu
::       _c - wariant działania:
::            -1 - akceptacja bez pytania
::            0 - wyświetlać tylko pytanie o akceptację karty
::            1 - wyświetlać dodatkowo pytanie o podgląd karty
::       _d - czy ustawiać kartę jako domyślną:
::             1 - dla wszystkich jej produktów
::             0 - nie ustawiać jako domyślnej
::             -1 - ustawić tylko, gdy akceptowana karta jest jedyną aktywną technologią dla danego produktu
::   WY: 0 / 1
::----------------------------------------------------------------------------------------------------------------------
_tktl:=_a;
_mp:=_b;
_variant:=_c;
_default:=_d;

_res:=0;

_fast_akc:=0;
{? exec('get','#params',500405,type_of(''))='T'
|| _fast_akc:=1
?};

TKTL.cntx_psh();
TKTL.clear();
{? TKTL.seek(_tktl)
||
   _txt:='Akceptacja karty technologicznej %1 wer. %2'@[TKTL.NRK,TKTL.WER];
   {? _fast_akc=0 & TKTL.STAN='T'
   || FUN.emsg(exec('form','#string','L',_txt,'','Karta już zaakceptowana.'@))

   |? _fast_akc=0 & TKTL.STAT_N='N'
   || FUN.emsg(exec('form','#string','L',_txt,'','Najpierw należy zakończyć redakcję nagłówka karty.'@))

   |? _fast_akc=0 & ((TKTL.STAT_O='N' & TKTL.TYP().OPER='T') | TKTL.STAT_S='N' | TKTL.STAT_P='N')
   || _kropy:=obj_new(3); _kropy[1]:=_kropy[2]:=_kropy[3]:='';
      _kropa:=0;
      {? TKTL.STAT_O='N' & TKTL.TYP().OPER='T' || _kropa+=1; _kropy[_kropa]:='• '+'operacje'@ ?};
      {? TKTL.STAT_S='N' || _kropa+=1; _kropy[_kropa]:='• '+'surowce'@ ?};
      {? TKTL.STAT_P='N' || _kropa+=1; _kropy[_kropa]:='• '+'pozostałe dane'@ ?};
      _txt:=exec('form','#string','L',
         _txt,'','',
         'Najpierw należy zakończyć redakcję karty w następującym zakresie:'@,
         '',_kropy[1],_kropy[2],_kropy[3]
      );
      FUN.emsg(_txt)

   ||
::    Sprawdzana możliwość zablokowania karty w każdym zakresie
      {? exec('tktl_lock','tech_common',,'N') &
         exec('tktl_lock','tech_common',,'O') &
         exec('tktl_lock','tech_common',,'S') &
         exec('tktl_lock','tech_common',,'P')
      ||
         _res:=1;
         {? _variant=-1
         ||
            {? _res>0 & _fast_akc>0
            || _res:=exec('tktl_akceptuj_fast','!tte_tec_arte')
            ?};
            {? _res>0
            || TKTL.STAN:='T';
               _res:=TKTL.put()
            ?};
            {? _res>0
            || {? _default<>0
               || _res:=exec('default','!tte_tec_arte',TKTL.ref(),_default=1)
               ?}
            ?}

         |? _variant=0
         || {? FUN.ask('Czy zaakceptować kartę %1 wer. %2?'@[TKTL.NRK,TKTL.WER])
            || {? _res>0 & _fast_akc>0
               || _res:=exec('tktl_akceptuj_fast','!tte_tec_arte')
               ?};
               {? _res>0
               || TKTL.STAN:='T';
                  _res:=TKTL.put()
               ?};
               {? _res>0
               || {? _default<>0
                  || _res:=exec('default','!tte_tec_arte',TKTL.ref(),_default=1)
                  ?}
               ?};
               {? _res>0 & _fast_akc>0
               || _res:=exec('tktl_akceptuj_fast','!tte_tec_arte')
               ?}
            ?}

         |? _variant=1
         || _choice:=FUN.choice('Czy zaakceptować kartę %1 wer. %2?'@[TKTL.NRK,TKTL.WER],,'Podgląd'@,'Tak'@);
            {? _choice=1
            || _mp.keep();
               VAR.GRUPA:='N';
               _red:=exec('tktl_display_red_full','tech_head');
               TKTL.win_edit(_red);
               TKTL.display();
               ~~
            |? _choice=2
            || {? _res>0 & _fast_akc>0
               || _res:=exec('tktl_akceptuj_fast','!tte_tec_arte')
               ?};
               {? _res>0
               || TKTL.STAN:='T';
                  _res:=TKTL.put()
               ?};
               {? _res>0
               || {? _default<>0
                  || _res:=exec('default','!tte_tec_arte',TKTL.ref(),_default=1)
                  ?}
               ?};
               {? _res>0 & _fast_akc>0
               || _res:=exec('tktl_akceptuj_fast','!tte_tec_arte')
               ?}
            ?}
         ?};

         {? _res>0 & _fast_akc>0
         ||
            _run_cleaner:=0;

::          Uruchamiam cleanery dla potencjalnie wiszących zadań na TODO żeby popchnąć proces
::          dalej po szybkiej akceptacji karty
            {! _it:=1..10
            |? _run_cleaner:=0;
               {? exec('record_keyrefed','#b__box',TKTL.uidref(),'TTE_TEC_DRTE')
               || _run_cleaner:=1
               ?};
               {? exec('record_keyrefed','#b__box',TKTL.uidref(),'TTE_TEC_DRDP')
               || _run_cleaner:=1
               ?};
               {? exec('record_keyrefed','#b__box',TKTL.uidref(),'TTE_TEC_DRTS')
               || _run_cleaner:=1
               ?};
               {? exec('record_keyrefed','#b__box',TKTL.uidref(),'TTE_TEC_DRTO')
               || _run_cleaner:=1
               ?};
               {? exec('record_keyrefed','#b__box',TKTL.uidref(),'TTE_TEC_ARTE')
               || _run_cleaner:=1
               ?};
               {? _run_cleaner>0
               || exec('clean_record','#b__box',TKTL.uidref(),1)
               ?};
               _run_cleaner>0
            !}
         ?}
      ?};
      exec('tktl_unlock','tech_common',,'N');
      exec('tktl_unlock','tech_common',,'O');
      exec('tktl_unlock','tech_common',,'S');
      exec('tktl_unlock','tech_common',,'P')

   ?}
?};
TKTL.cntx_pop();

_res


\tktl_wycofaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Wycofanie akceptacji karty technologicznej
::   WE: [_a] - TKTL.ref() / bieżąca karta
::   WY: 0 / 1
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) || _tktl:=_a || _tktl:=TKTL.ref() ?};

_res:=0;

TKTL.cntx_psh();
TKTL.clear();
{? TKTL.seek(_tktl)
|| {? exec('tktl_used','tech_common',TKTL.ref())
   || FUN.emsg('Nie można wycofać akceptacji — karta została wykorzystana.'@)

   |? exec('tktl_corrected','tech_common',TKTL.ref())
   || FUN.emsg('Nie można wycofać akceptacji — karta była korygowana.'@)

   |? TKTL.STAN='N'
   || FUN.emsg('Nie można wycofać akceptacji — karta niezaakceptowana.'@)

   || _tab:=tab_tmp(,
         'STAN','INTEGER','Stan karty'@,
         'STAT_P','INTEGER','Pozostałe dane'@,
         'STAT_S','INTEGER','Surowce'@,
         'STAT_O','INTEGER','Operacje'@,
         'STAT_N','INTEGER','Nagłówek'@
      );
      _efld_opt:="
         {? _tab.STAN=0
         || _tab.efld_opt(_red,'enable=0',,'STAT_P');
            _tab.efld_opt(_red,'enable=0',,'STAT_S');
            _tab.efld_opt(_red,'enable=0',,'STAT_O');
            _tab.efld_opt(_red,'enable=0',,'STAT_N')
         || _tab.efld_opt(_red,'enable=1',,'STAT_P');
            _tab.efld_opt(_red,'enable=1',,'STAT_S');
            _tab.efld_opt(_red,'enable=1',,'STAT_O');
            _tab.efld_opt(_red,'enable=1',,'STAT_N')
         ?};
         ~~
      ";
      _formula:=$("_tab:=cur_tab(1,1);_red:=cur_win(1,1);"+_efld_opt);
      _tab.fld_fml('STAN','AFTER_EDIT',_formula);
      _tab.fld_fml('STAT_P','AFTER_EDIT',$(_formula+";{? _tab.STAT_P=0 || _tab.STAT_N:=0 ?};~~"));
      _tab.fld_fml('STAT_S','AFTER_EDIT',$(_formula+";{? _tab.STAT_S=0 || _tab.STAT_N:=0 ?};~~"));
      _tab.fld_fml('STAT_O','AFTER_EDIT',$(_formula+";{? _tab.STAT_O=0 || _tab.STAT_N:=0 ?};~~"));
      _tab.fld_fml('STAT_N','AFTER_EDIT',$(_formula+";{? _tab.STAT_N=1 || _tab.STAT_O:=_tab.STAT_S:=_tab.STAT_P:=1 ?};~~"));

      {? TKTL.STAN='P'
      || _red:=_tab.mk_edit('Wycofanie karty'@,,'wycofaj1');
         _tab.STAN:=1
      || _red:=_tab.mk_edit('Wycofanie karty'@,,'wycofaj2');
         _tab.STAN:=0;
         _tab.win_esep(_red,'Wycofanie akceptacji'@);
         _tab.win_efld(_red,,'STAN',,,,,,,,,'check-box',,"1","0")
      ?};
      _tab.STAT_N:=_tab.STAT_O:=_tab.STAT_S:=_tab.STAT_P:=0;
      _tab.win_esep(_red,'Wycofanie rejestracji'@);
      _tab.win_efld(_red,,'STAT_P',,,,,,,,,'check-box',,"1","0");
      _tab.win_efld(_red,,'STAT_S',,,,,,,,,'check-box',,"1","0");
      _tab.win_efld(_red,,'STAT_O',,,,,,,,,'check-box',,"1","0");
      _tab.win_efld(_red,,'STAT_N',,,,,,,,,'check-box',,"1","0");
      _tab.win_ebtn(_red,'text=%1,align=end'['&Zapisz'@],"'key:F2'");
      _tab.win_ebtn(_red,'text=%1,align=end'['&Anuluj'@],"'key:Esc'");
      ($("_tab:=_a;_red:=_b;"+_efld_opt))(_tab,_red);
      _tab.win_edit(_red);

      _valid:="
         _tab:=cur_tab(1,1);
         {? TKTL.STAN='P'
         || {? _tab.STAT_N=0 & _tab.STAT_O=0 & _tab.STAT_S=0 & _tab.STAT_P=0
            || FUN.info('Co najmniej jedno pole musi być zaznaczone.'@); 'STAT_P'
            || 1
            ?}
         || {? _tab.STAN=0
            || FUN.info('Pole musi być zaznaczone.'@); 'STAN'
            || 1
            ?}
         ?}
      ";

      {? _tab.edit(_valid)
      ||
::       Sprawdzana możliwość zablokowania karty w każdym zakresie
         {? exec('tktl_lock','tech_common',,'N') &
            exec('tktl_lock','tech_common',,'O') &
            exec('tktl_lock','tech_common',,'S') &
            exec('tktl_lock','tech_common',,'P')
         || TKTL.STAN:={? _tab.STAT_N & _tab.STAT_O & _tab.STAT_S & _tab.STAT_P || 'N' || 'P' ?};
            {? _tab.STAT_P || TKTL.STAT_P:='N' ?};
            {? _tab.STAT_S || TKTL.STAT_S:='N' ?};
            {? _tab.STAT_O || TKTL.STAT_O:='N' ?};
            {? _tab.STAT_N || TKTL.STAT_N:='N' ?};
            {? TKTL.put()
            || _res:=1
::               exec('default_off','!tte_tec_arte',TKTL.ref())
            ?}
         ?};
         exec('tktl_unlock','tech_common',,'N');
         exec('tktl_unlock','tech_common',,'O');
         exec('tktl_unlock','tech_common',,'S');
         exec('tktl_unlock','tech_common',,'P')
      ?}
   ?}
?};

TKTL.cntx_pop();

_res


\default
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Ustawia kartę jako domyślną dla jej produktów
::   WE: _a - TKTL.ref()
::       [_b] - ustawić jako domyślną: [1] - dla wszystkich produktów karty
::                                      0 - tylko dla produktów, dla których karta jest jedyną aktywną technologią
::----------------------------------------------------------------------------------------------------------------------
_tktl:=_a;
_set_all:={? var_pres('_b')=type_of(0) || _b || 1 ?};
_can_continue:=1;
_result:=0;

TKTLW.cntx_psh();
TKTLW.index('REF');
TKTLW.prefix(_tktl);
{? TKTLW.first()
|| {!
   |?
      {? _set_all=1
         | (exec('dflt_ktl','tech_prod',TKTLW.KTM,0,1)=null()
            & exec('is_tech','tech_common',TKTLW.KTM,1,0,1,TKTLW.ref())<>1)
      || _can_continue:=exec('tktlw_default','tech_prod',0)
      ?};
      TKTLW.next() & _can_continue>0
   !}
?};
TKTLW.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\default_off
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Usuwa znacznik domyślności dla wszystkich produktów karty
::   WE: _a - TKTL.ref()
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_tktl:=_a;
_result:=0;
_can_continue:=1;

TKTL.cntx_psh();
TKTL.prefix();
{? TKTL.seek(_tktl)
||
   TKTL.DEFAULT:='N';
   _can_continue:=TKTL.put();

   {? _can_continue>0
   ||
      TKTLW.cntx_psh();
      TKTLW.index('REF');
      TKTLW.prefix(_tktl);
      {? TKTLW.first()
      || {!
         |? TKTLW.DEFAULT:='N';
            _can_continue:=TKTLW.put();
            TKTLW.next() & _can_continue>0
         !}
      ?};
      TKTLW.cntx_pop()
   ?}
?};
TKTL.cntx_pop();
{? _can_continue>0
|| _result:=1
?};
_result


\tktl_akceptuj_fast
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Szybka akceptacja karty - nawija karcie potrzebne rzeczy
::       Kontekst pracy - bieżący rekord TKTL
::   WE: [_a] - INTEGER - 0/1 - czy wyświetlać dialogi
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_dialog:=1;
{? var_pres('_a')=type_of(0)
|| _dialog:=_a
?};

_result:=0;
_can_continue:=1;

_fast_akc:=0;
{? exec('get','#params',500405,type_of(''))='T'
|| _fast_akc:=1
?};

{? _can_continue>0
||
   {? _fast_akc>0
   ||
      {? _can_continue>0 & TKTL.STAT_O<>'T' & TKTL.TYP().OPER='T'
      ||
::       Walidacja operacji
         {? _can_continue>0
         || _can_continue:=exec('valid_op1','tech_oper',TKTL.ref(),_dialog)
         ?};
         {? _can_continue>0
         ||
::          Generuje następniki, jeżeli brak
            NASTOPER.cntx_psh();
            NASTOPER.index('OPER');
            NASTOPER.prefix('T',TKTL.ref());
            {? ~NASTOPER.first()
            || exec('er_tab','tech_oper',TKTL.ref());
               exec('gen_pow','tech_oper',TKTL.ref());
               exec('graph_oper','tech_oper',0)
            ?};
            NASTOPER.cntx_pop();
            ~~
         ?};
         {? _can_continue>0
         || _can_continue:=exec('valid_op','tech_oper',TKTL.ref(),0,_dialog)
         ?};
         {? _can_continue>0
         || _can_continue:=exec('valid_str','tech_oper',TKTL.ref(),_dialog)
         ?};
         {? _can_continue>0
         || _can_continue:=exec('spr_pdok','magdok_prod','TOPER','DOK',TKTL.ref(),'',_dialog,_dialog)
         ?};
         {? _can_continue>0
         || TKTL.STAT_O:='T'
         ?}
      ?};

      {? _can_continue>0 & TKTL.STAT_N<>'T'
      || TKTL.STAT_N:='T'
      ?};
      {? _can_continue>0 & TKTL.STAT_P<>'T'
      || _can_continue:=exec('valid','tech_prod',TKTL.ref());
         {? _can_continue>0
         || TKTL.STAT_P:='T'
         ?}
      ?};
      {? _can_continue>0 & TKTL.STAT_S<>'T'
      || _can_continue:=exec('valid_mat','tech_mater',TKTL.ref());
         {? _can_continue>0
         || TKTL.STAT_S:='T'
         ?}
      ?};
      ~~
   ?}
?};
{? _can_continue>0
|| _result:=1
?};
_result


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::       [_b] - tablica z parametrami wejściowymi
::   WY: obj_new() - obiekt wynikowy
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
{? var_pres('_b')>100
|| _in:=_b
|| _in:=params_get().in
?};
params_exec('tech_clean','tech_common',_mp,_in)


:Sign Version 2.0 jowisz:1045 2023/07/27 11:25:59 c4ffef07b048ff1a7cb6e62041091a09efd32a078538e71d4e6b77167821fcd10fc3cfba4a3fbba0191ef77bb6a047e1ecbcb8fcb48ce436a7527e3e250f703757db8e5a5dde47e704ef1842acdce44172f4fac2bc8d60daf89f41de3e68ce9c19d7bf4d26b72cbaf8cb450873799c8ee4449e4be9a309f9295e5ece76589579
