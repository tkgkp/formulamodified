:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !hbn_prz_xprl.fml
:: Utworzony: 15.02.2018
:: Autor: PJ
::======================================================================================================================
:: Zawartość: Formuły czynności HBN_PRZ_XPRL - eksport przelewów z listy płac
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.22]
:: OPIS: Eksport przelewów z listy płac - główna formuła czynności HBN_PRZ_XPRL.
::----------------------------------------------------------------------------------------------------------------------
::# kind=WE, symbol=O, type=_O, name=Wskazanie listy płac, required=N, keyref=T
::# kind=WY, symbol=RESULT, type=STRING, name="Stan eksportu przelewów (udany 'OK', nieudany 'ERR')", required=N
::# kind=WY, symbol=LISTA, type=STRING, name=Symbol listy płac, required=N
::# permissions=FJKS,HRB,HRP
_par:=params_get();
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

_ok:=1;
_sid:='';

{? var_pres('O',_in)>0 & _in.O
|| O.cntx_psh();
   O.prefix();
   {? O.seek(_in.O)
   || _sid:=exec('kbFromO','hbn')
   || FUN.info('Nie znaleziono listy płac.'@);
      _ok:=0
   ?}
|| FUN.info('Nie podano listy płac.'@);
   _ok:=0
?};
{? _ok
|| PB.use('pbxxxx');
   PB.index('PBKO');
   PB.prefix(_sid);
   {? ~PB.first()
   || {? FUN.ask('Nie znaleziono przelewów dla wynagrodzeń z listy płac: %1. Anulować zadanie?'@[~O.LT])
      || _ok:=-1
      || _ok:=0
      ?}
   || PB.cntx_psh();
      _brak:=0;
      {! |?
         {? PB.ZT<>'T' || _brak:=1 ?};
         _brak=0 & PB.next()
      !};
      PB.cntx_pop();
      {? _brak
      || {? FUN.ask('Nie wszystkie przelewy dla wynagrodzeń z listy płac: %1 są zatwierdzone. Anulować zadanie?'@[~O.LT])
         || _ok:=-1
         || _ok:=0
         ?}
      || PB.first();
::    weryfikacja uprawnień - typ przelewu
         {? ~exec('usr_hrp','b_perm',PB.KD)
         || FUN.info(
               'Brak uprawnień do typów przelewów '+
               {? PB.KD='HBN: Prosty' || 'krajowych i zagranicznych'
               |? PB.KD='HBN: US' || 'do US'
               |? PB.KD='HBN: ZUS' || 'do ZUS'
               || ''
               ?}+'. Anulować zadanie?'
            );
            _ok:=0
         ?};
::    weryfikacja uprawnień - rachnunek bankowy licencjobiorcy
         {? _ok>0 & ~exec('usr_hrb','b_perm',PB.RD)
         || FUN.info('Brak uprawnień do rachunku bankowego licencjobiorcy: %1.'@[PB.RD]);
            _ok:=0
         ?};
         {? _ok>0 & ~Perm.hasFull('FJKS',OPERATOR.USER)
         || _tab:=tab_tmp(1,
               'ODD','STRING[10]',
            );
            {? PB.first()
            || {!
               |? {? ~_tab.find_key(PB.ODD().OD,)
                  || _tab.ODD:=ODD.OD;
                     _tab.add()
                  ?};
                  PB.next()
               !};
               {? _tab.first()
               || {!
                  |?
::                weryfikacja uprawnień - jednostka księgowa
                     {? ~exec('usr_fjks','b_perm',_tab.ODD)
                     || FUN.info('Brak uprawnień do jednostki księgowej %1.'@[_tab.ODD]);
                        _ok:=0
                     ?};
                     _ok>0 & _tab.next()
                  !}
               ?}
            ?}
         ?};

         {? _ok=1
         || _win:=exec('create_win','!hbn_prz_xprl');
            PB.win_sel(_win);
            {? PB.select()
            || _ok:=exec('hbfmlexe','!hbn_prz_xprl',_sid,O.D)
            || _ok:=0
            ?}
         ?}
      ?}
   ?}
?};
{? var_pres('O',_in)>0 & _in.O
|| O.cntx_pop()
?};

{? _ok=1
|| _out.RESULT:='OK';
   _out.LISTA:='Wykonano eksport przelewów z listy płac: '+_sid;
   _mp.save(,_out);
   _mp.done()
|? _ok=-1
|| _out.RESULT:='ERR';
   _mp.save(,_out);
   _mp.done()
?}


\hbfmlexe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ??
:: OPIS: Formuła eksportująca płatności
::   WE: _a - identyfikator listy płac
::       _b - data listy płac
::  OLD: \hbfmlexe/proc_01.fml
::----------------------------------------------------------------------------------------------------------------------
_wy:=1;
{? var_pres('glob_size')>=0 || VAR_DEL.delete('glob_size') ?};
PB.cntx_psh();
_vref:=0;
PB.index('PBKO');
PB.prefix(_a);
_ok:=PB.first();
_size:=PB.size();
{? _ok
|| _vc:=1;
   {! |? {? PB.ZT= 'T' & PB.KW<0 || _vc:=0 ?}; _vc & PB.next() !};
   {? ~_vc
   || _vc:=~FUN.ask('Istnieją przelewy na kwoty ujemne.\nKontynuować?'@)
   || _vc:=0
   ?}
?};
{? _ok & ~_vc
|| PB.first();
   HBPKI.clear();
   HBPKI.cntx_psh();
   HBPKI.index('HBPKILP');
   _max:={? HBPKI.last()
         || HBPKI.NR
         || 0
         ?};
   {? _max<HBPKI.size() || _max:=HBPKI.size() ?};
   HBPKI.cntx_pop();
   VAR_DEL.delete('__fn');
   __fn:=tab_tmp(1,'NR','INTEGER','Nr',
                  'FILE','INTEGER','Uchwyt do pliku',
                  'LOC','INTEGER','Lokalny',
                  'PATH','STRING[255]','Ścieżka do pliku lokalnego',
                  'SERWER','STRING[255]','Ścieżka na serwerze');
   HBPKI.index('HBPKITP'); HBPKI.prefix(1,'E');
   {? HBPKI.first()
   || __TT_HBPKI:=tab_tmp(2,'BANK','STRING[8]','Numer banku','TYP','STRING[1]','Typ przelewu',
         'PD','STRING[40]','Nazwa pliku','IS_FILE','INTEGER','Czy istnieje plik','NR','INTEGER',
         'Nr specyfikacji','ID','INTEGER','ID');
      {! |?
         __TT_HBPKI.BANK:=HBPKI.KDB().NUMER;
         __TT_HBPKI.TYP:=HBPKI.TYP;
         __TT_HBPKI.PD:=HBPKI.PD;
         __TT_HBPKI.IS_FILE:=0;
         __TT_HBPKI.NR:=HBPKI.NR;
         __TT_HBPKI.ID:=#HBPKI.ref();
         __TT_HBPKI.add();
         HBPKI.next()
      !};
      _tyt:='x';
      __TT_HBPKI.win_sel(__TT_HBPKI.mk_sel(_tyt,,1))
   ?};
   {? PB.lock(1) & HBPKI.lock(0) & HBP.lock(0)
   || __nexp:=0;
      {? HBPKI.first()
      || {! |?
:: Jezeli dla specyfikacji sa platnosci
            _ref:=PB.ref();
            _cont:=0;
            {? PB.first()
            || {! |?
                  {? PB.NBD().NUMER=HBPKI.KDB().NUMER
                     &
                     ((PB.RODZ='KU' & HBPKI.TYP='U') | (PB.RODZ='KZ' & HBPKI.TYP='Z') | (PB.RODZ='K' & HBPKI.TYP='K') | PB.RODZ='W')
                     &
                     ((HBPKI.WAL='N' & 1+PB.RODZ='K') | (HBPKI.WAL='T' & 1+PB.RODZ='W' & ((PB.RODZZAGR().KOD<>'S' & HBPKI.TPK*'SEPA'=0) | (PB.RODZZAGR().KOD='S' & HBPKI.TPK*'SEPA'>0))))
                     &
                     (PB.ZT='T' & PB.KW>0)
                  || _cont:=1
                  ?};
                  _cont=0 & PB.next()
               !}
            ?};
            {? _cont
            || {? __TT_HBPKI.find_key(HBPKI.KDB().NUMER, HBPKI.TYP)
               || {! |?
                     {? ~(__TT_HBPKI.ID=#HBPKI.ref())
                     || __TT_HBPKI.next()
                     || 0
                     ?}
                  !}
               ?};
               exec('hb_export','!hbn_prz_xprl',HBPKI.ref(),_b)
            ?};
            HBPKI.next()
         !}
      ?};
      {? ~PB.size() || PAR_WYDR.RPAR1:=PAR_WYDR.RPAR2:=PAR_WYDR.RPAR3:=0 ?};
      HBPKI.clear();
      {? __fn.first()
      || {! |?
            {? __fn.FILE<>0 || fclose(__fn.FILE) ?};
            {? __fn.LOC=1 || fcopy(__fn.SERWER,__fn.PATH,1,0,1) ?};
            __fn.next()
         !}
      ?};
      PB.unlock(); HBPKI.unlock(); HBP.unlock();
      {? __nexp>0
      || FUN.info('Liczba wyeksportowanych zleceń: %1 z %2.'@[$__nexp,$_size])
      || FUN.emsg('Anulowano eksport, bądź brak zleceń spełniających kryteria.'@);
         _wy:=0
      ?}
   || PB.unlock(); HBPKI.unlock(); HBP.unlock();
      FUN.error('Uruchomienie eksportu zakończone niepowodzeniem!\nProszę spróbować ponownie.'@);
      _wy:=0
   ?}
?};
VAR_DEL.delete('__TT_HBPKI','__fn','__nexp');
PB.cntx_pop();
_wy


\hb_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA,PJ,KGS] [1998]
:: OPIS: Formula eksportujaca przelewy do pliku
::  OLD: \hb/hb.fml
::----------------------------------------------------------------------------------------------------------------------
b14:=b15:=ref1:=ref3:=b2:=b3:=b10:=b11:=b4:=b5:=b7:=l:=0;
a:=gexp:=1;
b9:='';

PB_OP.index('PB');
PB.cntx_psh();
 'a-pozycja wpisywanej wartości';
   'a4-maxymalna liczba przelewów w paczce';
   a5:=0;'znacznik kontynuowania pętli';
   {? HBPKI.PL().KDPL<>''
   || standard:={? +HBPKI.PL().SYS
                || 'fun:"'+HBPKI.PL().SYS+'"'
                || %PL.AD+%PL.CD+%PL.ED+%PL.LD+%PL.ND+
                   %PL.OD+%PL.SD+%PL.ZID+%PL.ZD+%PL.AM+
                   %PL.CM+%PL.EM+%PL.LM+%PL.NM+%PL.OM+
                   %PL.SM+%PL.ZIM+%PL.ZM
                ?}
   || standard:=''
   ?};
   b1:=HBPKI.ref();
   a4:=HBPKI.LR;
   {? a4=0 || a4:=9999; 'liczba przelewow w zasadzie bez ograniczen' ?};
   ROZNE.win_edit('EXP');
   ROZNE.hdr_edit();_txt:=' '+HBPKI.TPK;ROZNE.hdr_edit(_txt);
   {? 1+sys_name(0)='W' & HBPKI.FILELOC='T'
   || ROZNE.FILEPATH:=pth_dir({? HBPKI.FILELOC='T' || '@' || '' ?}+HBPKI.PD)
      +'\\'+HBPKI.PD
   || ROZNE.FILEPATH:=HBPKI.PD
   ?};
   _vpos:=HBPKI.PD*'.';
   {? _vpos
   || _vfm:='Pliki przelewów (*'+((_vpos-1)-HBPKI.PD)+')|*'
         +((_vpos-1)-HBPKI.PD)+'|'
   || ''
   ?};
   ROZNE.FILEMASK:=STR.maz2w95(_vfm)+'Wszystkie pliki (*.*)|*.*';
   _fchk:="__CHK.record3(ROZNE,'FILEPATH','Ścieżka do pliku',ROZNE,'EXP_DO','Przelewy do dnia')";
   {? __TT_HBPKI.IS_FILE | (ROZNE.EXP_DO:=date(_b~1,_b~2,0); ROZNE.edit(_fchk))
   || {? ~__TT_HBPKI.IS_FILE
      || _path:=__TT_HBPKI.PD;
         __TT_HBPKI.cntx_psh();
         __TT_HBPKI.prefix(__TT_HBPKI.BANK);
         {? __TT_HBPKI.first() & __TT_HBPKI.size()>1
         || {! |?
               {? __TT_HBPKI.PD=_path & ~__TT_HBPKI.IS_FILE || __TT_HBPKI.PD:=ROZNE.FILEPATH; __TT_HBPKI.put() ?};
               __TT_HBPKI.next()
            !}
         ?};
         __TT_HBPKI.cntx_pop();
         __TT_HBPKI.get()
      ?};
      {? ~__TT_HBPKI.IS_FILE
      || _wy_test:=0;
         {! |?
            _test_file:={? HBPKI.FILELOC='T' || '@' || '' ?}+ROZNE.FILEPATH;
            {? fexists(_test_file,{? HBPKI.FILELOC='T' || 0 || 1 ?})
            || {? FUN.ask('Plik o podanej nazwie:\n %1\njuż istnieje. Nadpisać?'@[_test_file])
               || _wy_test:=1
               || {? ~ROZNE.edit("chk_rec()")
                  || _wy_test:=2
                  ?}
               ?}
            || _wy_test:=1
            ?};
            _wy_test=0
         !};
         {? _wy_test=1
         || __fn.blank();
            __fn.NR:=__TT_HBPKI.NR;
            __fn.LOC:={? HBPKI.FILELOC='T' || 1 || 0 ?};
            {? HBPKI.FILELOC='T'
            || __fn.PATH:='@'+ROZNE.FILEPATH;
               __fn.SERWER:=$HBPKI.tm_stamp()+'.'+exec('fileext','#string',ROZNE.FILEPATH)
            || __fn.PATH:='';
               __fn.SERWER:=ROZNE.FILEPATH
            ?};
::          plik owierany zawsze po stronie serwera - jezeli ma byc lokalny to po zapisie jest kopiowany
            __fn.FILE:=fopen(__fn.SERWER,'bw',1);
            __fn.add();
            __TT_HBPKI.IS_FILE:=1;
            __TT_HBPKI.put();
            _path:=__TT_HBPKI.PD;
            _nr:=__TT_HBPKI.NR;
            __TT_HBPKI.cntx_psh();
            __TT_HBPKI.prefix(__TT_HBPKI.BANK);
            {? __TT_HBPKI.first() & __TT_HBPKI.size()>1
            || {! |?
                  {? __TT_HBPKI.PD=_path & ~__TT_HBPKI.IS_FILE
                  || __TT_HBPKI.IS_FILE:=1; __TT_HBPKI.NR:=_nr;
                     __TT_HBPKI.put()
                  ?};
                  __TT_HBPKI.next()
               !}
            ?};
            __TT_HBPKI.cntx_pop()
         ?}
      || _wy_test:=1
      ?};
      {? _wy_test=1
      || {? __fn.find_key(__TT_HBPKI.NR) || _tmp_fn:=__fn.FILE || _tmp_fn:=0 ?};
         {? handle:=_tmp_fn
         || b14:=b15:=0;'liczba znaków końca linii';
            ref1:=ref3:=0;'ref rekordu HBP';
            b9:='';'wartość formuły przypisanej do pozycji specyfikacji';
            b2:=0;'znacznik wystąpienia w specyfikacji nagłówka';
            b3:=0;'w specyfikacji wystąpił rekord';
            b10:=0;'w specyfikacji wystąpił rekord kontrolny';
            b11:=0;'numer pola stanowiącego rekord kontrolny';
            b4:=0;'numer pola stanowiącego nagłowek';
            b5:=0;'numer pola stanowiącego rekord';
            b7:=0;a:=1;l:=0;'l-licznik (nr w paczce)';
            HBP.cntx_psh();
            HBP.prefix();
            HBP.index('HBNAZWA');
            HBP.prefix(b1);
            {? HBP.first() || ref1:=ref3:=HBP.ref() ?};
            {! |?
               {? HBP.KP().KD='n' || b2:=1;b4:=HBP.NR ?};
               {? HBP.KP().KD='r' || b3:=1;b5:=HBP.NR ?};
               {? HBP.KP().KD='e' || b15+=1 ?};
               {? HBP.KP().KD='x' || b10:=1;b11:=HBP.NR ?};
               HBP.next()
            !};
            {? b15=0||b15:=1?};b14:=b15;
            HBP.cntx_pop();
            _ref:=PB.ref();
            {? PB.first()
            || {! |?
                  {? PB.NBD().NUMER=HBPKI.KDB().NUMER
                     & ((PB.RODZ='KU' & HBPKI.TYP='U') | (PB.RODZ='KZ' & HBPKI.TYP='Z') | (PB.RODZ='K' & HBPKI.TYP='K') | PB.RODZ='W')
                     & ((HBPKI.WAL='N' & 1+PB.RODZ='K') | (HBPKI.WAL='T' & 1+PB.RODZ='W'))
                     & (PB.DP<=ROZNE.EXP_DO & PB.ZT='T' & PB.KW>0)
                  || PB.D_EXP:=date(); PB.USER_EXP:=exec('usr_zar','dok_fks');
                     {? PB.DP<PB.D_EXP || PB.DP:=PB.D_EXP ?};
                     PB.CN:=time$3;
                     {? 10+PB.KD='PPL: Płace' | 10+PB.KD='PPL: Umowy'
                     || _v:=2-tm_form(PB.tm_stamp());
                        _id:=''; {! _i:=1..6 |! _id+=2+_v; _v:=3-_v !}; _id+=_v;
                        PB.TYT+=' TMS '+_id
                     ?};
                     PB.put();
                     {? b2=0 & b3=0 & b10<>0 || b15:=0 ?};
                     {! |?
                        HBP.prefix();
                        HBP.index('HBNAZWA');
                        HBP.prefix(b1);
                        {? HBP.first()
                        || {! |?
                              HBP.seek(ref1);
                              {? HBP.NR>={?b3||b5|?b10||b11?}||b2:=0 ?};
                              '------------------------Nagłówek----------------------------';
                              {? HBP.NR>=b4 & {? b5>0 || HBP.NR <b5 || 1 ?} & b2=1
                              || exec('zapis','!hbn_prz_xprl')
                              ?};
                              '-------------------------Rekord----------------------------';
                              {? HBP.NR>=b5 & {?b10>0 || HBP.NR<b11 || 1 ?} & b3=1
                              || exec('zapis','!hbn_prz_xprl')
                              ?};
                              '---Nie ma ani nagłówka ani rekordu ani rekordu kontrolnego---';
                              {? b2=0 & b3=0 & b4=0 & b5=0 & b10=0 & b11=0
                              || exec('zapis','!hbn_prz_xprl')
                              ?};
                              {? a5
                              || 0
                              || {? HBP.next()
                                 || ref1:=HBP.ref();1
                                 || 0
                                 ?}
                              ?}
                           !};'pętla po HBP';
                           a5:=0
                        ?};'HBP.first';
                        'warunek kontynuowania pętli';
                        b15<>0
                     !};
                     ref1:=ref3;b15:=b14;
                     {? gexp
                     || l+=1; __nexp+=1;
                        PB.NR:=l;
                        PB.PR:='T';'przelew poszedł';
                        _vref:=PB.ref();
::                      exec('use_tab','skid_pla',1,PB.KH);
::                      _plat:=exec('szukzap','skid_pla',exec('id_rek','skid_pla',PB));
                        PB.use('pb'+(4+$PB.DP));
                        PB.prefix();
                        {? PB.add()
                        ||
::                         {? _plat || exec('chsource','skid_pla',exec('id_rek','skid_pla',PB)) ?};
                           PB_OP.prefix(_vref);
                           {? PB_OP.first()
                           || {! |?
                                 PB_OP.PB:=PB.ref();
::                               _plat:=exec('szukzap','skid_pla',exec('id_rek','skid_pla',PB_OP));
                                 PB_OP.use('pop'+(4+$PB.DP));
                                 PB_OP.prefix();
                                 PB_OP.add();
                                 exec('upd_pb_zal','zaliczki');
::                               {? _plat || exec('chsource','skid_pla',exec('id_rek','skid_pla',PB_OP)) ?};
                                 PB_OP.use('popxxxx');
                                 PB_OP.del()
                              !}
                           ?};
                           PB_OP.use('popxxxx')
                        ?};
                        PB.use('pbxxxx');
                        PB.del();
                        {? PB.first() || a4>l || 0 ?}
                     || PB.next()
                     ?}
                  || PB.next()
                  ?}
               !};'pętla po PB'
            ?};
            PB.seek(_ref);
            {? b10
            ||
               '-----------------Rekord kontrolny !!!----------------';
               ref1:=ref3;b15:=b14;
               {! |? 'dopuki b15<>0';
                  HBP.prefix();
                  HBP.index('HBNAZWA');
                  HBP.prefix(b1);
                  {? HBP.first()
                  || {! |?
                        HBP.seek(ref1);
                        {? HBP.NR>=b11 & b10>0
                        || exec('zapis','!hbn_prz_xprl')
                        ?};
                        {? a5
                        || 0
                        || {? HBP.next()
                           || ref1:=HBP.ref();1
                           || 0
                           ?}
                        ?}
                     !};'pętla po HBP'
                  ?};'HBP.first';
                  b15<>0
               !}
            ?}; 'do if b10'
         ?}
      ?} ;'do _wy_test=1'
   ?};
::
   &a5;&standard;&b1;&a4;&b14;&b15;&ref1;&ref3;
   &b9;&b2;&b3;&b10;&b11;&b4;&b5;&b7;&a;&l; &gexp;
PB.cntx_pop()


\zapis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [??]
:: OPIS: Formuła wykonuje formułę przyporządkowaną do pozycji specyfikacji
::  OLD: \zapis/hb.fml
::----------------------------------------------------------------------------------------------------------------------
{? HBP.KP().KD='e' | HBP.KP().KD='l' || a:=1 ?};
{? HBP.KP().KD<>'n' &
   HBP.KP().KD<>'r' &
   HBP.KP().KD<>'x' &
   HBP.KP().KD<>'e' &
   HBP.KP().KD<>'l'
|| b9:=exec('format2','!hbn_prz_xprl');
   b9:=exec('polzn','homebank',b9,standard);
   fwrite(handle,b9)
|| ~~
?};
{? HBP.next()
|| ref1:=HBP.ref();
   {? HBP.NR>={? b10 || b11 || HBP.NR+1 ?}
   || b15:=0
   ?};
   HBP.prev()
|| b15:=0
?};
{? HBP.KP().KD='e'
|| fwrite(handle,%13+%10);a5:=1
?};
{? HBP.KP().KD='l'
|| fwrite(handle,%12);'wstawienie do pliku znaku nowej strony!!!'
?}


\format2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [??]
:: OPIS: Formuły (format1 i format2) formatują wynik działania formuły
::       przypisanej do pozycji sprawozdania zgodnie z wymaganiami co do pola zawartymi
::       w specyfikacji czyli uzupełniają go z odpowiedniej strony zerami bądż spacjami
::       do zadanej długości
::  OLD: \format2/hb.fml
::----------------------------------------------------------------------------------------------------------------------
{? HBP.DL='x'
|| exec('typwyn','hb')
|| {? +HBP.POL>0
   || s:=HBP.POL+1;
      {? s='_' || s:=' '?};
      s:=#HBP.DL*s;
      exec('typwyn','hb');
      exec('format1','!hbn_prz_xprl')
   ?}
?}


\format1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [??]
:: OPIS: Formuły (format1 i format2) formatują wynik działania formuły
::       przypisanej do pozycji sprawozdania zgodnie z wymaganiami co do pola zawartymi
::       w specyfikacji czyli uzupełniają go z odpowiedniej strony zerami bądż spacjami
::       do zadanej długości
::  OLD: \format1/hb.fml
::----------------------------------------------------------------------------------------------------------------------
f:=1+HBP.POL;
{? f='>'
|| (b13:=s+b13)+#HBP.DL
|| {? f='<' || #HBP.DL+(b13+s) ?}
?}


\war_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Warunek dla przelewow
::  OLD: \war_pb/hb.fml
::----------------------------------------------------------------------------------------------------------------------
PB_OP.cntx_psh();
_warunek:=(PB.KH<>null & -PB.WSK_S='t' & PB.WSK_S='T' &
           (PB_OP.index('PB'); PB_OP.prefix(PB.ref()); PB_OP.first()));
PB_OP.cntx_pop();
_warunek


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.22]
:: OPIS: Formuła na opis czynności na liście ToDo
::----------------------------------------------------------------------------------------------------------------------
_desc:='Eksport przelewów dla listy płac'@@;
_mp:=params_get().mp;
_we:=_mp.load(exec('kind_in','#b_port'));
{? var_pres('O',_we) & _we.O
|| _desc:='Eksport przelewów dla listy płac: %1'@@[exec('record','#to_string',_we.O)]
?};
_desc


\create_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.22]
:: OPIS: Formuła definiuje okno dla listy przelewów z płac do eksportu
::   WY: akronim okna tymczasowego
::----------------------------------------------------------------------------------------------------------------------
_win:=PB.mk_sel('Eksport przelewów z listy płac'@,'P',0,'_list_przel_exp',10,5,20,,'U',,,,,'normal');
PB.win_fld(_win,PB,'ODD','OD','ODDZIALY',10,,,'Jednostka księgowa'@,,'Jednostka księgowa'@);
PB.win_fld(_win,PB,'DP',,,10,,,'Data przelewu'@,,'Data przelewu'@);
PB.win_fld(_win,PB,'DZ',,,10,,,'Data utworzenia'@,,'Data utworzenia'@);
PB.win_fld(_win,PB,'W',,,23,,,'Odbiorca'@,,'Odbiorca'@);
PB.win_fld(_win,PB,'TYT',,,21,,,'Tytułem'@,,'Tytułem'@);
PB.win_fld(_win,PB,'WAL','KOD','SL',7,,,'Waluta'@,,'Waluta'@);
PB.win_fld(_win,PB,'KW',,,24,2,,'Kwota'@,,'Kwota'@);
PB.win_act(_win,,'Kolejność');
PB.win_act(_win,,'Formuła','Zakończ'@@,,,"sel_exit()",,,,,,'Z',0);
_btn:=PB.win_btn(_win,'text=%1,btn_label_align=center,panel=bottom,align=end'['Zakończ'@],'menu:Z');
PB.btn_opt(_btn,'tooltip=%1'[exec('help_red_zakoncz','#window','HBN_P')]);
_btn:=PB.win_btn(_win,'text=%1,btn_label_align=center,panel=bottom,align=end'['Anuluj'@],'key:Esc');
PB.btn_opt(_btn,'tooltip=%1'[exec('help_red_esc','#window','A')]);
_win


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [23.25]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego lub dokument jest zaakceptowany
::       zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
_wy:=_mp.load(exec('kind_out','#b_port'));
_keyRefs:=_mp.getRefs();
{? obj_len(_keyRefs)>0
|| {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];
      {? type_of(_kref)>0
      || {? ref_name(_kref)*'olistypl'>0
         || _record:=exec('FindAndGet','#table',O,_kref,,,null());
            {? _record=null()
            || _mp.done()
            || O.cntx_psh();
               {? O.seek(_record,ref_name(_record),1)
               || _sid:=exec('kbFromO','hbn');
                  {? _sid=''
                  || _mp.done()
                  || PB.cntx_psh();
                     PB.use('pbxxxx'); PB.index('PBKO'); PB.prefix(_sid);
                     {? ~PB.first()
                     || _mp.done()
                     ?};
                     PB.cntx_pop()
                  ?}
               || _mp.done()
               ?};
               O.cntx_pop()
            ?}
         ?}
      ?}
   !}
?};
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:37 907538d7b3a8c9f2bcb118215d84e953b3fa44ddcfc23f89864775c92a8c1db66b2883436868b80f3f3ba54878a49fe0730c55994de13e98635a83e133dd10dd540a8017b67f627a16c0f899e52ba9ca9bd01887a78060761a8f29d2f6ba7c494735415d8df7de134e478345a80b31c4bf4640f96ab9e4eb543018f62e2035ed
