:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ped_grp_aidp.fml
:: Utworzony: 16.09.2019
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa czynności PED_GRP_AIDP - Import dokumentacji pracowniczej.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Import dokumentacji pracowniczej - główna formuła czynności.
::       Czynność pozwala na:
::        * wskazanie katalogu bazowego i wybór pracowników, dla których będzie tworzona struktura katalogów
::          umożliwiająca import zawartych w niej dokumentów;
::        * wskazanie katalogu bazowego, z którego będą importowane dokumenty.
::       Opis poziomów struktury (w nawiasach kwadratowych podano maksymalną zakładaną długość):
::          1. [64] Pracownik (IP, Nazwisko, Imiona).
::          2. [ 2] Rodzaj dokumentacji (I / II + opis).
::          3. [ 5] Identyfikator części
::                   a) Dla rodzaju I: A, B, C, D + opis (nawet jeżeli istnieją podczęści).
::                   b) Dla rodzaju II: 6pkt1, 6pkt2, 6pkt3, 6pkt4 + opis.
::          4. [64] Typ załącznika (ref, opis).
::          5. [64] Pliki umieszczane przez użytkownika.
::       Dodatkowe założenia:
::          * Nazwa katalogu / pliku nie może przekraczać 64 znaków.
::          * Całkowita długość ścieżki dostępu do pliku (obsługiwana przez m.in. bl_put()) to 259 znaków. Ograniczenie
::            to związane jest z systemem operacyjnym.
::          * Całkowita maksymalna długość ścieżki dostępu do pliku w tworzonej strukturze wynosi:
::            => 1+64+1+2+1+5+1+64+1+64=204 (łącznie z separatorami).
::            => Ponieważ będzie to ścieżka lokalna, to na początku będzie @ (kolejny znak - razem 205).
::            => Ścieżka wskazana przez użytkownika nie może być zatem dłuższa niż 259-205=54.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL

:: Deklaracja wykorzystywanych klas.
exec('fun_decl','#message');
exec('JCQ_decl','#message');
exec('esign_decl','#esign');

popup(1,'Dokumentacja pracownicza',
   'Utworzenie struktury importu',
   'Przygotowanie struktury katalogów, z której może nastąpić import załączników',
   "exec('struct_main','!ped_grp_aidp')",

   'Import dokumentów',
   'Import dokumentów z przygotowanej wcześniej struktury katalogów',
   "exec('import_main','!ped_grp_aidp')"
)


\_cfg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Część wspólna konfiguracji przygotowania struktury i importu dokumentów.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('obj_ntab_set','#array',,
:: Nazwa sekcji dla mechanizmu "profile", w której zapamiętywane będą parametry pracy.
   'section','ZALACZ',
:: Nazwa parametru w profile'u.
   'parName','ImportDir',
:: Separator w ścieżce (po stronie klienta).
   'sep0',exec('sep','#file',0),
:: Formuła na nazwę katalogu na każdym z 4-ech poziomów. Wykorzystywana zarówno przy tworzeniu struktury jak i imporcie.
:: Ewentualne zmiany tutaj muszą być uwzględnione w kodzie poniżej.
:: Funkcja json_value() służy do "usunięcie" niewygodnych znaków.
   'dirName',"
   _sep:='-';
   _name:=
      {? _a=1 || form(P.IP,-8,0,'9.')+_sep+form(P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.DRUGIE)
      |? _a=2 || ZAOH.CZESC
      |? _a=3 || ZAOH.CZESC
      |? _a=4 || ($SLO_NAZ.ref()+8)+_sep+SLO_NAZ.NAZWA
      ?};
:: Znaki, które nie mogą znaleźć się w nazwie katalogu zamienimy na znak podkreślenia.
   _patt:=spli_str(' ,<,>,:,"",/,\\\\,|,?,*',',');
   64+gsub(gsub(_name,_patt,'_'),'__','_')",
:: Wskazanie na rekordu główny (w strukturze hierarchicznej) dokumentacji pracowniczej.
   'root',exec('zaoh_init','zalacz',exec('zaoh_path','zalacz','G0D'))
)


\struct_main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Formuła sterująca przygotowaniem struktury katalogów, z której może nastąpić import załączników.
::   WE:
::   WY:
:: ~OST: INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
_cfg:=exec('obj_ntab_set','#array',exec('_cfg','!ped_grp_aidp'),
:: Maksymalna długość ścieżki do katalogu (patrz komentarz w \main).
   'maxLen',54,
:: Uchwyt obiektu do obsługi napisów.
   'STR',obj_new(@.CLASS.STRING),
:: Uchwyt obiektu do obsługi komunikatów.
   'KOMM',obj_new(@.CLASS.JCQ),
:: Maksymalna liczba znaków komunikatu.
   'msgSize',255,
:: Definicja ikon dla komunikatów.
   'icon1','xwin16.png:13',
   'icon0','xwin16.png:14'
);

:: Wybór katalogu. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_baseDir:=exec('get','#profile',,_cfg.section,_cfg.parName);
_again:=1;
{!
|? _again
|! _again:=0;
   ctr_set('!application','filechooser','reset');
   ctr_set('!application','filechooser','setDialogTitle',
      'Wskaż katalog, w którym tworzone będą podkatalogi pracowników'@
   );
   ctr_set('!application','filechooser','setAcceptAllFileFilterUsed',0);
   ctr_set('!application','filechooser','setMultiSelectionEnabled',0);
   ctr_set('!application','filechooser','setFileSelectionMode','DIRECTORIES_ONLY');
   ctr_set('!application','filechooser','setCurrentDirectory',_baseDir);
   {? ctr_call('!application','filechooser','showSaveDialog')
   || _baseDir:=ctr_call('!application','filechooser','getSelectedFile');
      {? +_baseDir>_cfg.maxLen
      || FUN.info(
            'Całkowita długość ścieżki przekracza dopuszczalną wartość (%1).\n'
            'Wskaż katalog o krótszej ścieżce dostępu i spróbuj ponownie.'@ [$_cfg.maxLen]
         );
         _again:=1
      || exec('set','#profile',,_cfg.section,_cfg.parName,_baseDir)
      ?}
   || return()
   ?}
!};
:: Dla wygody, wybrany katalog poprzedzamy znakiem "lokalności".
_baseDir:='@'+_baseDir;

:: Wybór pracowników.  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='PKD';
_args.F_ZATR:='P';
_args.HDR_SEL:='Wybierz pracowników, dla których chesz utworzyć katalogi';
_args.GRP_IDENT:='ped_grp_aidp';
_args.GRP_MODE:='normal';
_args.WIELU:=1;
_wyb:=exec('wybierz','pracownik',_args);
{? ~_wyb.P.first()
|| return(0)
?};

:: Właściwe tworzenie struktury. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

:: Funkcja dodająca komunikat o nieutworzeniu katalogu.
:: _a [ARRAY]  - Tablica elementów nazwanych - patrz \_cfg.
:: _b [STRING] - Nazwa podkatalogu, który miał być utworzony.
:: _c [STRING] - Nazwa katalogu (z @ na początku), w którym miał być utworzony podkatalog.
_mderr:="
   _cfg:=_a;
   _subdir:=_b;
   _dir:=_c;

   _cfg.STR.split('Utworzenie podkatalogu %1 w katalogu %2 nie powiodło się.'@ [_subdir,1-_dir]);
   {!
   |? _cfg.STR.next()
   |! _cfg.KOMM.add(_cfg.STR.line(_cfg.msgSize))
   !};
   ~~
";

_cfg.KOMM.init(_cfg.msgSize);

ZAOH.cntx_psh();
ZAOH.index('LP');

ZAOTS.cntx_psh();
ZAOTS.index('PATH');
SLO_NAZ.cntx_psh();
SLO_NAZ.prefix();

OSOBA.cntx_psh();
OSOBA.prefix();
P.cntx_psh();
P.prefix();
{!
|? {? P.seek(_wyb.P.UID,)
   || P.OSOBA();
      _root:=_cfg.KOMM.sect_beg(
         '%1 %2, PESEL: %3, Teczka: %4, IP: %5 ' [OSOBA.NAZWISKO,OSOBA.PIERWSZE,OSOBA.PESEL,P.T,$P.IP]
      );

      _ok:=1;
      _dir:=_cfg.dirName(1);
      _path:=_baseDir+_cfg.sep0+_dir;
      {? fexists(_path,0)
      || _cfg.KOMM.add('Katalog "%1" już istnieje.'@ [1-_path]);
         _ok:=0
      |? (_pracDir:=fmkdir(_baseDir,_dir))=''
      || _mderr(_cfg,_dir,_baseDir);
         _ok:=0
      || ZAOH.prefix(_cfg.root);
         _loop:=ZAOH.first();
         {!
         |? _ok & _loop
         |! _dir:=_cfg.dirName(2);
            {? (_kindDir:=fmkdir(_pracDir,_dir))=''
            || _mderr(_cfg,_dir,_pracDir);
               _ok:=0
            || ZAOH.cntx_psh();
               ZAOH.prefix(ZAOH.ref());
               _loop:=ZAOH.first();
               {!
               |? _ok & _loop
               |! ZAOTS.prefix(ZAOH.PATH);
                  {? ZAOTS.first()
                  || _dir:=_cfg.dirName(3);
                     {? (_czDir:=fmkdir(_kindDir,_dir))=''
                     || _mderr(_cfg,_dir,_kindDir);
                        _ok:=0
                     || {!
                        |? ZAOTS.SLO_NAZ();
                           _dir:=_cfg.dirName(4);
                           {? fmkdir(_czDir,_dir)=''
                           || _mderr(_cfg,_dir,_czDir);
                              _ok:=0
                           || ZAOTS.next()
                           ?}
                        !}
                     ?}
                  ?};
                  _loop:=ZAOH.next()
               !};
               ZAOH.cntx_pop()
            ?};
            _loop:=ZAOH.next()
         !}
      ?};
      {? _ok
      || _cfg.KOMM.add('Utworzenie struktury zakończyło się sukcesem.'@)
      ?};
      _cfg.KOMM.sect_end();
      _cfg.KOMM.update(_root,,{? _ok || _cfg.icon1 || _cfg.icon0 ?})
   ?};
   _wyb.P.next()
!};
P.cntx_pop();
OSOBA.cntx_pop();

SLO_NAZ.cntx_pop();
ZAOTS.cntx_pop();
ZAOH.cntx_pop();

_cfg.KOMM.select('Raport z tworzenia struktury'@);

~~


\import_main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Formuła sterująca importem dokumentacji pracowniczej.
::   WE:
::   WY:
:: ~OST: INFILECHOOSER, INBLPUT
::----------------------------------------------------------------------------------------------------------------------
_cfg:=exec('obj_ntab_set','#array',exec('_cfg','!ped_grp_aidp'),
:: Opis dla załączanych plików.
   'opis','!!! Załącznik zaimportowany - wymaga weryfikacji !!!',
:: Uchwyt obiektu wspomagającej obsługę podpisu elektronicznego.
   'esign',obj_new(@.CLASS.ESIGN)
);

:: Wybór katalogu. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_baseDir:=exec('get','#profile',,_cfg.section,_cfg.parName);

ctr_set('!application','filechooser','reset');
ctr_set('!application','filechooser','setDialogTitle','Zaznacz katalog(-i) z dokumentami do importu'@);
ctr_set('!application','filechooser','setAcceptAllFileFilterUsed',0);
ctr_set('!application','filechooser','setMultiSelectionEnabled',1);
ctr_set('!application','filechooser','setFileSelectionMode','DIRECTORIES_ONLY');
ctr_set('!application','filechooser','setCurrentDirectory',_baseDir);
{? ctr_call('!application','filechooser','showOpenDialog')
|| _DPRAC:=ctr_call('!application','filechooser','getSelectedFiles')
|| return()
?};

OSOBA.cntx_psh();
OSOBA.prefix();
P.cntx_psh();
P.index('PRACOIP');
P.prefix(exec('ref_firma','ustawienia'),'P');
ZAOH.cntx_psh();
ZAOH.index('CZESC');
ZAOH.prefix();
SLO_TYP.cntx_psh();
SLO_TYP.prefix();
SLO_NAZ.cntx_psh();
SLO_NAZ.prefix();
ZALACZ.cntx_psh();
ZALACZ.prefix();

_LOG:=exec('import_log','!ped_grp_aidp');
_cfg.esign.start();

:: Analiza struktury katalogów wskazanych przez użytkownika. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_loop:=_DPRAC.first();
{!
|? _loop
|! _aprac:=spli_str(_DPRAC.DIR,_cfg.sep0);
   _dirPrac:=_aprac[obj_len(_aprac)];

   _msg:='';
   {? +_dirPrac<8
   || _msg:='Zbyt krótka nazwa katalogu.'@
   |? _ip:=#(8+_dirPrac);
      _ip=0
   || _msg:='Nazwa katalogu nie rozpoczyna sie od numeru identyfikacyjnego pracownika.'@
   |? ~P.find_key(_ip)
   || _msg:='Nie znaleziono pracownika o numerze identyfikacyjnym %1.'@ [$_ip]
   |? _pracDir:=_cfg.dirName(1);
      _pracDir<>_dirPrac
   || _msg:='Nazwa katalogu nie odpowiada aktualnym danym w systemie ("%1").'@ [_pracDir]
   ?};
   {? _msg=''
   || exec('import_run','!ped_grp_aidp',_cfg,_LOG,_DPRAC.DIR-(+_dirPrac),_dirPrac)
   || _LOG.blank();
      _LOG.DIR:=_DPRAC.DIR;
      _LOG.NAME:='';
      _LOG.TYPE:='d';
      _LOG.OK:='N';
      _LOG.memo_set(_msg,'MSG');
      {? _LOG.add()
      || _LOG.memo_put(,'MSG')
      ?}
   ?};
   obj_del(_aprac);
   _loop:=_DPRAC.next()
!};

:: Weryfikacja podpisów + aktualizacja daty w _LOG.  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_d0:=date(0,0,0);
_VERYF:=_cfg.esign.verify(1);
{? _VERYF.status=1 & _VERYF.TAB.first()
|| {!
   |? {? _VERYF.TAB.DTSIGN<>_d0 & _LOG.find_key(_VERYF.TAB.PATH,_VERYF.TAB.FORG,)
      || _LOG.DTSIGN:=_VERYF.TAB.DTSIGN;
         _LOG.put()
      ?};
      _VERYF.TAB.next()
   !}
?};
_cfg.esign.stop();

:: Właściwe załączanie plików.  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -- - - - - - - - - - -
_size:=_LOG.size();
_lp:=0;
_pb:=_pp:=0;
_loop:=_LOG.first();
{!
|? _loop
|! _lp+=1;
   _pb:=(100*_lp/_size)$2;
   {? _pp<>_pb
   || _pp:=_pb;
      progress(_pb,'Załączanie plików. Proszę czekać ...'@,'Przetwarzanie danych'@)
   ?};
   {? _LOG.OK='T'
   || {? P.seek(_LOG.P) & SLO_NAZ.seek(_LOG.SLO_NAZ)
      || ZALACZ.blank();
         exec('zalacz_bl','zalacz','P');
         ZALACZ.TYP_ZAL:=SLO_NAZ.ref();
         ZALACZ.DATA:=_LOG.DTCREATE;
         ZALACZ.DTSIGN:=_LOG.DTSIGN;
         ZALACZ.LOK:=_cfg.opis;
         {? ZALACZ.add() & ZALACZ.bl_put('ZAL','@'+_LOG.DIR+_cfg.sep0+_LOG.NAME)
         || _LOG.OK:='T';
            _LOG.ZALNEW:=$ZALACZ.ref()
         ?}
      || _LOG.OK:='N'
      ?};
      _LOG.put()
   ?};
   _loop:=_LOG.next()
!};
prgs_clr();

params_set('cfg',_cfg);
_LOG.select();

ZALACZ.cntx_pop();
SLO_NAZ.cntx_pop();
SLO_TYP.cntx_pop();
ZAOH.cntx_pop();
P.cntx_pop();
OSOBA.cntx_pop();

~~


\import_log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Formuła pomocnicza - przygotowuje strukturę i interfejs raportu z importu.
::   WE:
::   WY:
:: ~OST: INCLIEXEC, INBLPUT
::----------------------------------------------------------------------------------------------------------------------
_LOG:=tab_tmp(2,
:: Opis elementu.
   'DIR','STRING[255]','Katalog'@,
   'NAME','STRING[64]','Plik'@,
   'TYPE','STRING[1]','Typ elementu'@,
:: Wynik przetwarzania.
   'ELEM','STRING[64]','Element'@,
   'OK','STRING[1]','Status przetwarzania'@,
   'MSG','SYS_MEMO','Komunikat'@,
:: Dane rozszerzone.
   'IP','INTEGER','Identyfikator'@,
   'NAZWISKO','STRING['+$MS.fld_len(OSOBA,'NAZWISKO')+']','Nazwisko'@,
   'PIERWSZE','STRING['+$MS.fld_len(OSOBA,'PIERWSZE')+']','Imię'@,
   'RDS','STRING[2]','Rodzaj dokumentacji'@,
   'RDO','STRING['+$MS.fld_len(ZAOH,'NAZWA')+']','Opis dokumentacji'@,
   'CZS','STRING[5]','Część'@,
   'CZO','STRING['+$MS.fld_len(ZAOH,'NAZWA')+']','Opis części'@,
   'TZ','STRING['+$MS.fld_len(SLO_NAZ,'NAZWA')+']','Typ załącznika'@,
   'DTCREATE','DATE','Data powstania dokumentu'@,
   'DTSIGN','DATE','Data opatrzenia podpisem'@,
:: Pola techniczne.
   'P','STRING[16]','Wskazanie pracownika'@,
   'SLO_NAZ','STRING[16]','Wskazanie typu załącznika'@,
   'ZALNEW','STRING[16]','Wskazanie dołączonego załącznika'@,
   'ZALSRC','STRING[16]','Wskazanie identycznego załącznika'@
);

:: Okno wertowania.  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_ws:=_LOG.mk_sel('Raport z importu'@,,,'#edpimport',,,,,'U');
_LOG.win_fld(_ws,,'DIR',,,30,,,,,'Ścieżka do katalogu, w którym znajduje się plik'@);
_LOG.win_fld(_ws,,'NAME',,,15,,,,,'Nazwa pliku'@);
_LOG.win_fld(_ws,,'DTCREATE',,,-10,,,,,MS.comment(ZAOMEDA,'DTCREATE'));
_LOG.win_fld(_ws,,'DTSIGN',,,-10,,,,,MS.comment(ZAOMEDA,'DTSIGN'));
_LOG.win_fld(_ws,,'OK',,,-3,,,,,'Status przetwarzania [T/N/X]'@,2,,"'T'","'N'","'X'");
_LOG.win_fld(_ws,,'MSG',,,20,,,,,'Opis przetwarzania'@);
_LOG.win_fld(_ws,,'IP',,,-6,,,,,MS.comment(P,'IP'));
_LOG.win_fld(_ws,,'NAZWISKO',,,20,,,,,MS.comment(OSOBA,'NAZWISKO'));
_LOG.win_fld(_ws,,'PIERWSZE',,,15,,,,,MS.comment(OSOBA,'PIERWSZE'));
_LOG.win_fld(_ws,,'RDS',,,-3,,,,,'Symbol rodzaju dokumentacji'@);
_LOG.win_fld(_ws,,'CZS',,,-6,,,,,'Symbol części dokumentacji'@);
_LOG.win_fld(_ws,,'TZ',,,20,,,,,'Typ załącznika'@);
_LOG.win_act(_ws,,'Menu','Otwórz'@@,,'Otworzenie załącznika / pliku'@,,,,,,,'O');
_LOG.win_act(_ws,,'Formuła','Plik'@@,'Otwórz','Otworzenie pliku'@,"
   _par:=params_get();
   _cfg:=_par.cfg;
   _LOG:=cur_tab(1,1);
   {? _LOG.TYPE='f'
   || cli_exec(_LOG.DIR+_cfg.sep0+_LOG.NAME)
   ?}",,,,,,
   'P'
);
_LOG.win_act(_ws,,'Formuła','Zaimportowany załącznik'@@,'Otwórz','Otworzenie zaimportowanego załącznika'@,"
   _LOG:=cur_tab(1,1);
   {? _LOG.ZALNEW<>'' & ZALACZ.seek(_LOG.ZALNEW)
   || exec('bl_view','#blob',ZALACZ,'ZAL')
   ?}",,,,,,
   'Z'
);
_LOG.win_act(_ws,,'Formuła','Identyczny załącznik'@@,'Otwórz','Otworzenie identycznego załącznika'@,"
   _LOG:=cur_tab(1,1);
   {? _LOG.ZALSRC<>'' & ZALACZ.seek(_LOG.ZALSRC)
   || exec('bl_view','#blob',ZALACZ,'ZAL')
   ?}",,,,,,
   'I'
);
_LOG.win_act(_ws,,'Formuła','Załącz'@@,,'Załączenie pliku'@,"
   _par:=params_get();
   _cfg:=_par.cfg;
   _LOG:=cur_tab(1,1);
   {? _LOG.OK='X'
   || _gr:=_LOG.sel_size();
      {? _gr | FUN.ask('Czy na pewno załączyć plik z bieżącego wiersza?'@)
      || {? P.seek(_LOG.P) & SLO_NAZ.seek(_LOG.SLO_NAZ)
         || ZALACZ.blank();
            exec('zalacz_bl','zalacz','P');
            ZALACZ.DATA:=_LOG.DTCREATE;
            ZALACZ.DTSIGN:=_LOG.DTSIGN;
            ZALACZ.TYP_ZAL:=SLO_NAZ.ref();
            ZALACZ.LOK:=_cfg.opis;
            do();
            {? ZALACZ.add() & ZALACZ.bl_put('ZAL','@'+_LOG.DIR+_cfg.sep0+_LOG.NAME)
            || _LOG.ZALNEW:=$ZALACZ.ref();
               _LOG.OK:='T';
               _LOG.memo_set(,'MSG');
               {? _LOG.put()
               || _LOG.memo_put(,'MSG')
               ?}
            ?};
            end()
         ?}
      ?}
   ?}
   ",,,
   1,
   "FUN.ask('Czy na pewno chcesz załączyć pliki z zaznaczonych wierszy?'@)",,
   'Z'
);
_LOG.win_act(_ws,,'Formuła','Podpisz',,'Opatrzenie dokumentu podpisem elektronicznym',"
   _par:=params_get();
   _esign:=_par.cfg.esign;
   _LOG:=cur_tab(1,1);
   _gr:=_LOG.sel_size();
   _gotowy:=
      _LOG.OK='T' & -(_LOG.NAME+4)='.pdf' & _LOG.DTSIGN=date(0,0,0) & _LOG.ZALNEW<>'' & ZALACZ.seek(_LOG.ZALNEW);
   {? ~_gr
   || {? ~_gotowy
      || FUN.info(
            'Opatrzenie podpisem elektronicznym możliwe jest wyłącznie dla załączonych i niepodpisanych plików '
            'z rozszerzeniem PDF.\n'
            'Bieżący plik nie spełnia powyższych warunków.'@
         );
         return()
      ?};
      _esign.start()
   ?};
   {? _gotowy
   || _esign.s_blob_add(ZALACZ,'ZAL','ZAL','DTSIGN')
   ?};
   {? ~_gr
   || _esign.sign();
      _esign.stop();
      {? _LOG.ZALNEW<>'' & ZALACZ.seek(_LOG.ZALNEW) & _LOG.DTSIGN<>ZALACZ.DTSIGN
      || _LOG.DTSIGN:=ZALACZ.DTSIGN;
         _LOG.put()
      ?}
   ?}",,,
   1,"
   {? FUN.ask(
         'Za chwilę nastąpi próba opatrzenia podpisem elektronicznym zaznaczonych plików.\n'
         'Pod uwagę zostaną wzięte wyłacznie załączone i niepodpisane pliki z rozszerzeniem PDF.\n'
         'Czy na pewno chcesz kontynuować?'@
      )
   || _par:=params_get();
      _esign:=_par.cfg.esign;
      _esign.start();
      1
   ?}","
   _par:=params_get();
   _esign:=_par.cfg.esign;
   _LOG:=cur_tab(1,1);
   _esign.sign();
   _esign.stop();
   _LOG.cntx_psh();
   _loop:=_LOG.first();
   {!
   |? _loop
   |! {? _LOG.ZALNEW<>'' & ZALACZ.seek(_LOG.ZALNEW) & _LOG.DTSIGN<>ZALACZ.DTSIGN
      || _LOG.DTSIGN:=ZALACZ.DTSIGN;
         _LOG.put()
      ?};
      _loop:=_LOG.next()
   !};
   _LOG.cntx_pop()"
);
_LOG.win_act(_ws,,'Kolejność');
_LOG.win_act(_ws,,'Rekord',,,,"
   {? _a=1
   || _LOG:=cur_tab(1,1);
      _ws:=cur_win(1,1);
      _gr:=_LOG.sel_size();
      _ha:='';
      {? ~_gr & _LOG.OK<>'X'
      || _ha+='Z'
      ?};
      {? ~_gr & (_LOG.OK<>'T' | _LOG.DTSIGN<>date(0,0,0))
      || _ha+='P'
      ?};
      {? _LOG.TYPE='d'
      || _ha+='O(P)'
      ?};
      {? _LOG.ZALNEW=''
      || _ha+='O(Z)'
      ?};
      {? _LOG.ZALSRC=''
      || _ha+='O(I)'
      ?};
      _LOG.actions_grayed(_ws,_ha)
   ?}"
);
_mo:=_LOG.win_btn(_ws,'text=%1,icon=xwin16.png:190' ['Otwórz'@],'Menu');
_LOG.btn_menu(_ws,_mo,'menu:OP');
_LOG.btn_menu(_ws,_mo,'menu:OZ');
_LOG.btn_menu(_ws,_mo,'menu:OI');
_LOG.win_btn(_ws,'text=%1' ['Załącz'@],'menu:Z');
_LOG.win_btn(_ws,'text=%1' ['Podpisz'@],'menu:P');

_LOG.win_sel(_ws);

:: Okno redagowania. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
_width:=80;
_we:=_LOG.mk_edit('Pozycja raportu z importu'@);
_LOG.win_esep(_we,'Opis elementu'@);
_LOG.win_efld(_we,,'DIR',,,_width,,,,,'Ścieżka do katalogu, w którym znajduje się plik'@);
_LOG.win_efld(_we,,'NAME',,,_width,,,,,'Nazwa pliku'@);
_LOG.win_efld(_we,,'DTCREATE',,,,,,,,MS.comment(ZAOMEDA,'DTCREATE'));
_LOG.win_efld(_we,,'DTSIGN',,,,,,,,MS.comment(ZAOMEDA,'DTSIGN'));
_LOG.win_esep(_we,'Wynik przetwarzania'@);
_LOG.win_efld(_we,,'ELEM',,,_width,,,,,'Przetwarzany element'@);
_LOG.win_efld(_we,,'OK',,,,,,,,,'radio-buttons','left_label=1',
   'Plik został zaimportowany poprawnie'@,"'T'",
   'Import nie był możliwy lub się nie powiódł'@,"'N'",
   'Identyczny plik znajduje się już w danych'@,"'X'"
);
_LOG.win_efld(_we,,'MSG',,,_width,-5);
_LOG.win_esep(_we,'Pracownik'@);
_LOG.win_efld(_we,,'IP',,,16,,,,,MS.comment(P,'IP'));
_LOG.win_efld(_we,,'NAZWISKO',,,_width,,,,,MS.comment(OSOBA,'NAZWISKO'));
_LOG.win_efld(_we,,'PIERWSZE',,,_width,,,,,MS.comment(OSOBA,'PIERWSZE'));
_LOG.win_esep(_we,'Dokumentacja'@);
_LOG.win_efld(_we,,'RDS',,,16,,,,,'Symbol rodzaju dokumentacji'@);
_LOG.win_efld(_we,,'RDO',,,_width,,,,,'Opis rodzaju dokumentacji'@);
_LOG.win_efld(_we,,'CZS',,,16,,,,,'Symbol części'@);
_LOG.win_efld(_we,,'CZO',,,_width,,,,,'Opis części'@);
_LOG.win_efld(_we,,'TZ',,,_width);
{? prot_key()='wdrożenia'
|| _LOG.win_esep(_we,'Pola techniczne'@);
   _LOG.win_efld(_we,,'P');
   _LOG.win_efld(_we,,'SLO_NAZ');
   _LOG.win_efld(_we,,'ZALNEW');
   _LOG.win_efld(_we,,'ZALSRC')
?};
_LOG.win_edit(_we);

_LOG


\import_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Formuła importująca załączniki dla jednego (bieżącego) pracownika.
::       Uwaga: poprawność parametrów wejściowych nie jest weryfikowana.
::   WE: _a [ARRAY]  - Tablica elementów nazwanych z konfiguracją.
::       _b [TABLE]  - Uchwyt tabeli, w której zapisywany będzie raport z importu.
::       _c [STRING] - Pełna ścieżka do katalogu bazowego (łącznie z końcowym separatorem).
::       _d [STRING] - Nazwa aktualnie przetwarzanego katalogu (znajdującego się wewnątrz katalogu bazowego).
::   WY:
:: ~OST: INFDIR
::----------------------------------------------------------------------------------------------------------------------
_cfg:=_a;
_LOG:=_b;
_baseDir:=_c;
_pracDir:=_d;

_DIR:=fdir('@'+_baseDir+_pracDir,0,1);
{? type_of(_DIR)=type_of(~~)
|| return()
|? ~_DIR.first()
|| return()
?};

_DIR.index(_DIR.ndx_tmp(,,'TYPE',,,'DIR',,,'NAME',,));
_DIR.prefix('f,');
_size:=_DIR.size();
_lp:=0;
_pb:=_pp:=0;
_loop:=_DIR.first();
{!
|? _loop
|! _lp+=1;
   _pb:=(100*_lp/_size)$2;
   {? _pp<>_pb
   || _pp:=_pb;
      progress(_pb,_pracDir+'\n'+'Analiza plików. Proszę czekać ...'@,'Przetwarzanie danych'@)
   ?};

   _dtcreate:=date();
:: Czy w nazwie jest data utworzenia dokumentu?
   _dts:=exec('split_file_name','#file',_DIR.NAME).fn+8;
   _rok:=#(4+_dts);
   {? _rok>=1900
   || _mc:=#(2+(4-_dts));
      {? 1<=_mc & _mc<=12
      || _dzien:=#(_dts+2);
         {? 1<=_dzien & _dzien<=date(_rok,_mc,0)~3
         || _dtcreate:=date(_rok,_mc,_dzien)
         ?}
      ?}
   ?};

   _LOG.blank();
   _LOG.DIR:=_DIR.DIR;
   _LOG.NAME:=_DIR.NAME;
   _LOG.TYPE:=_DIR.TYPE;
   _LOG.DTCREATE:=_dtcreate;
:: Pracownik został zweryfikowany wcześniej.
   _LOG.IP:=P.IP;
   _LOG.NAZWISKO:=P.OSOBA().NAZWISKO;
   _LOG.PIERWSZE:=OSOBA.PIERWSZE;
   _LOG.P:=$P.ref();

   _path:=spli_str((+_baseDir)-_LOG.DIR,_cfg.sep0);
   _poziom:=obj_len(_path);
   _ok:=0;
   _msg:='';

   {? _poziom<4
   || _msg:=
         'Niespodziewany plik.\n'
         'Plik został umieszczony w nieprawidłowym katalogu.'@
   |? _poziom>4
   || _msg:=
         'Nieprawidłowa (zbyt głęboka) struktura katalogów.\n'
         'Plik został umieszczony w katalogu, który nie jest prawidłowym elementem struktury.'@

::    Weryfikacja nazwy katalogu na poziomie 2 - rodzaj dokumentu.
   |? ZAOH.prefix(_cfg.root);
      {? ZAOH.find_key(_path[2],)
      || _LOG.RDS:=ZAOH.CZESC;
         _LOG.RDO:=ZAOH.NAZWA;
         0
      || _msg:='Nieprawidłowy rodzaj dokumentacji.'@;
         1
      ?}
   || _LOG.ELEM:=_path[2]

::    Weryfikacja nazwy katalogu na poziomie 3 - symbol części.
   |? ZAOH.prefix(#ZAOH.ref());
      {? ZAOH.find_key(_path[3],)
      || _LOG.CZS:=ZAOH.CZESC;
         _LOG.CZO:=ZAOH.NAZWA;
         0
      || _msg:='Nieprawidłowy symbol części.'@;
         1
      ?}
   || _LOG.ELEM:=_path[3]

::    Weryfikacja nazwy katalogu na poziomie 4 - typ załącznika.
   |? {? +_path[4]<8
      || _msg:='Zbyt krótka nazwa katalogu.'@
      |? _sref:=8+_path[4];
         _hex:=1;
         {! _lph:=1 .. 8
         |? _hex
         |! _hex:='0123456789abcdef'*(1+((_lph-1)-_sref))
         !};
         ~_hex
      || _msg:='Nazwa katalogu nie rozpoczyna sie od numeru technicznego typu załącznika.'@
      |? ~SLO_NAZ.seek(form(SLO_NAZ.name(),8)+_sref)
      || _msg:='Nie znaleziono typu załącznika o numerze technicznym %1.'@ [_sref]
      |? SLO_NAZ.SLO_TYP().SYMBOL<>'ZAL'
      || _msg:=
            'Numer techniczny %1 nie jest związany ze słownikiem typu "ZAL" - dotyczy słownika "%2".'@
            [_sref,SLO_NAZ.SLO_TYP().SYMBOL]

      |? _zalDir:=_cfg.dirName(4);
         _zalDir<>_path[4]
      || _msg:='Nazwa katalogu nie odpowiada aktualnym danym w systemie ("%1").'@ [_zalDir]
      ?};
      {? _msg=''
      || _LOG.TZ:=SLO_NAZ.NAZWA;
         _LOG.SLO_NAZ:=$SLO_NAZ.ref();
         0
      || 1
      ?}
   || _LOG.ELEM:=_path[4]

::    Test unikalności.
   |? _fn:='@'+_LOG.DIR+_cfg.sep0+_LOG.NAME;
      _fh:=fopen(_fn,'br',,,1);
      {? _fh.is_open()
      || _hash:=hash(_fh,'sha1');
         _fh.fclose()
      || _hash:=''
      ?};
      obj_del(_fh);

      ZALACZ.find_tab(1,
         'P',,'=',P.ref(),
         'TYP_ZAL',,'=',SLO_NAZ.ref(),
         'ZAL_NAME',,'=',_DIR.NAME,
         'HASH',,'=',_hash
      )
   || _LOG.ZALSRC:=$ZALACZ.ref();
      _ok:=-1;
      _msg:='W dokumentacji pracowniczej znaleziono załącznik o identycznych parametrach (typ, nazwa, zawartość).'@

   || _ok:=1;
      _LOG.ZALNEW:=$ZALACZ.ref()
   ?};
   obj_del(_path);

   _LOG.OK:={? _ok=1 || 'T' |? _ok=0 || 'N' || 'X' ?};
   _LOG.memo_set(_msg,'MSG');
   do();
   {? _LOG.add() & _LOG.memo_put(,'MSG')
   || {? _ok & -(_LOG.NAME+4)='.pdf'
      || {? _cfg.esign.v_file_add(_fn)<1
         || undo()
         ?}
      ?}
   ?};
   end();

   _loop:=_DIR.next()
!};
prgs_clr();

~~

:Sign Version 2.0 jowisz:1045 2022/06/30 14:22:51 35b8879f122d1c29e5812fb034dcc6acf6e6572c4dad9eaa988a2482f754d05875bef8ff3d4502331abc22c54f6255aa3b2e8b436d337f3d89349ef914eb9b756d15d7d43cd71bcd68f2af235ebfb79a3dc78801b2aecc1797f023432700dc805e5c591050032caeef630de8efd8b59165e92da660e0bb8372fa7ab39f24073a
