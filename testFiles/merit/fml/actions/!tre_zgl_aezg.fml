:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !tre_zgl_aezg.fml
:: Utworzony: 06.03.2019
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły czynności TRE_ZGL_AEZG - Zamknięcie zgłoszenia rem.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Formuła główna czynności TRE_ZGL_AEZG - Zamknięcie zgłoszenia rem.
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::       context - [obj_new] obiekt służący do przekazywania kontekstu wywołania czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
_action:=_mp.akcja();
_context:=_mp.context;

::# permissions=ODDZ
::# properties=SERVICE
::# access=exec('access','!tre_zgl_aezg')

::# kind=WE, symbol=REM_ZGL, type=_REM_ZGL, name=Zgłoszenie remontowe, required=T, keyref=T
{? var_pres('REM_ZGL',_in)<>type_of(~~) & var_pres('REM_ZGL',_in)<>type_of(null())
|| _msg:='Błędny parametr wejściowy \'%1\' dla czynności %2.'@@['REM_ZGL','TRE_ZGL_AEZG'];
   FUN.error(_msg);
   _mp.error(_msg);
   return()
?};
{? var_pres('REM_ZGL',_in)=type_of(~~) || _in.REM_ZGL:=null() ?};
::# kind=WY, symbol=RESULT, type=STRING, name=Rezultat działania, required=N
::# kind=WY, symbol=REM_ZGL, type=_REM_ZGL, name=Utworzone zgłoszenie remontowe, required=N
{? var_pres('REM_ZGL',_out)<>type_of(~~) & var_pres('REM_ZGL',_out)<>type_of(null()) || return() ?};

_result:=0;
_clean_result:=params_exec('clean','!tre_zgl_aezg');
_can_continue:=_clean_result.RESULT;
_rem_zgl:=_clean_result.REM_ZGL;

REM_ZGL.cntx_psh();
REM_ZGL.prefix();

{? _can_continue>0 & _rem_zgl<>null()
|| _can_continue:=REM_ZGL.seek(_rem_zgl)
|| _can_continue:=0
?};

{? _can_continue>0
||
   _mp.keyRef(REM_ZGL.uidref());

   _ask:=1;
   _komm:=1;
   {? _mp.isAutoRun() |  _mp.isService()
   || _ask:=0;
      _komm:=0
   ?};
   {? _mp.isGroup()
   || _ask:=0;
      _komm:=0
   ?};

:: Obsługa w obszarze roboczym albo z listy zadań
   {? _ask>0
   || {? exec('blk_lock','#table','REM_ZGL',REM_ZGL.ref(),,,'Zgłoszenie jest redagowane'@)
      || {? FUN.ask('Czy zamknąć zgłoszenie %1?'@[REM_ZGL.SYM])
         || REM_ZGL.STAT_REJ:=exec('status_closed','remonty_zgloszenia');
            REM_ZGL.DT_ZAM:=date();
            REM_ZGL.TM_ZAM:=time();
            REM_ZGL.USR_ZAM:=OPERATOR.USER;
            {? REM_ZGL.put()
            || _result:=1;
               exec('plan_clear','remonty_plan')
            ?}
         ?}
      ?};
      exec('blk_unlock','#table','REM_ZGL',REM_ZGL.ref())

:: Obsługa automatyczna albo dla grupy rekordów (zamknięcie bez pytania)
   || {? exec('blk_lock','#table','REM_ZGL',REM_ZGL.ref())
      || REM_ZGL.STAT_REJ:=exec('status_closed','remonty_zgloszenia');
         REM_ZGL.DT_ZAM:=date();
         REM_ZGL.TM_ZAM:=time();
         REM_ZGL.USR_ZAM:=OPERATOR.USER;
         {? REM_ZGL.put()
         || _result:=1;
            exec('plan_clear','remonty_plan')
         ?}
      ?};
      exec('blk_unlock','#table','REM_ZGL',REM_ZGL.ref())
   ?};

   {? _result>0 | _mp.isMicro()
   || _out.RESULT:='OK';
::    Jeżeli zgłoszenia z portalu to zmiana statusu na edokumie
      {? REM_ZGL.SOURCE=exec('source_portal','remonty_zgloszenia')
         &  REM_ZGL.STAT_REJ=exec('status_closed','remonty_zgloszenia')
      || exec('edokum_update','remonty_zgloszenia',REM_ZGL.ref())
      ?};
::    Tworzenie powiązanego zgłoszenia
      {? REM_ZGL.STAT_REJ=exec('status_closed','remonty_zgloszenia') & REM_ZGL.GEN_POW='T'
         & ~exec('rem_zgl_czy_pow','remonty_zgloszenia')
      ||
         POM.TAB:='REM_ZGL';
         POM.TYPDOK:='ZGL';
         _uidref:=REM_ZGL.uidref();
         REM_ZGL.cntx_psh();
         REM_ZGL.NR:=0;
         REM_ZGL.STAT_REJ:=exec('status_new','remonty_zgloszenia');
         REM_ZGL.USR_WPR:=OPERATOR.USER; REM_ZGL.DT_WPR:=date(); REM_ZGL.TM_WPR:=time();
         REM_ZGL.USR_ZAT:=null(); REM_ZGL.DT_ZAT:=date(0,0,0); REM_ZGL.TM_ZAT:=time(0,0,0);
         REM_ZGL.USR_REA:=null(); REM_ZGL.DT_REA:=date(0,0,0); REM_ZGL.TM_REA:=time(0,0,0);
         REM_ZGL.USR_ZAM:=null(); REM_ZGL.DT_ZAM:=date(0,0,0); REM_ZGL.TM_ZAM:=time(0,0,0);
         REM_ZGL.REM_CYKL:=null();
         REM_ZGL.PLAN_PL:='N';
         REM_ZGL.PLAN_PX:='N';
         REM_ZGL.ZGL_NAD:=_uidref;
         {? REM_ZGL.ZGL_TOP=''
         || REM_ZGL.ZGL_TOP:=_uidref
         ?};
         _opis:='';
::      _opis:='Zgłoszenie skopiowane z: %1.\nOpis oryginalny:\n'[REM_ZGL.SYM];
         _opis+=REM_ZGL.memo_txt(,1,'OPIS');
         REM_ZGL.SOURCE:=exec('source_manual','remonty_zgloszenia');
         {? REM_ZGL.add()
         || REM_ZGL.memo_set(_opis,'OPIS');
::          Przypisuje numer zgłoszenia
            REM_ZGL.NR:=exec('numer_new','numery','PACZKA');
            exec('znak','numery','REM_ZGL',1);
            {? REM_ZGL.put()
            || REM_ZGL.memo_put(,'OPIS');
               {? _mp.isMicro()
               || _args:=exec('mp_run_a','#b__box');
                  _args.ACT_UID:='TRE_ZGL_DZGL';
                  _args.AKCJA:='POWIĄŻ';
                  _args.PROC_START:='T';
                  _args.CONTEXT:=obj_new('REM_ZGL','ENV_REM_ZGL');
                     _args.CONTEXT.REM_ZGL:=REM_ZGL.ref();
                  _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
::                  exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'REM_ZGL',REM_ZGL.ref());

                  exec('mp_run','#b__box',_args)


               ?}
            ?};
            _out.REM_ZGL:=REM_ZGL.ref();
            {? _ask>0
            || FUN.info('Utworzono powiązane zgłoszenie remontowe o symbolu: %1'@[REM_ZGL.SYM])
            ?}
         ?};
         REM_ZGL.cntx_pop();
         {? REM_ZGL.f_active()
         || REM_ZGL.f_rfresh()
         ?}
      ?};
      _mp.save(,_out);
      _mp.done()
   || {? _mp.isService()
      || _out.RESULT:='BŁĄD';
         _mp.save(,_out);
         _mp.done()
      ?}
   ?}
?};

REM_ZGL.cntx_pop();
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Opis dla czynności zamknięcia zgłoszenia remontowego (TRE_ZGL_AEZG)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_desc:='';
_keyRefs:=_mp.getRefs();

:: jest rekord kluczowy to ustawiam odpowiedniego REM_ZGL
{? var_pres('[1]',_keyRefs)
|| _tmp:=exec('FindAndGet','#table',REM_ZGL,_keyRefs[1],,"REM_ZGL.SYM",'');
   _desc:={? _tmp<>'' || 'Zamknij zgłoszenie remontowe: %1'@@[_tmp] || '' ?}
::|| _desc:=exec('FindAndGet','#table',REM_ZGL,_keyRefs[1],,
::      "'Zamknij zgłoszenie remontowe: %1'@@[REM_ZGL.SYM]",'')
|| _desc:='Zamknij nowe zgłoszenie remontowe'@@
?};
_desc


\access
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.42]
:: OPIS: Formuła ograniczajaca uprawnienia do czynności
::       Sprawdza czy dany użytkownik jest opiekunem zasobu
::       startowego danego obiektu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_user:=params_get().user;
_mp:=params_get().mp;

{? var_pres('REM_ZGL',_in)=type_of(~~) || _in.REM_ZGL:=null() ?};

_rem_zgl:=null();
{? _in.REM_ZGL<>null()
|| _rem_zgl:=_in.REM_ZGL
?};

_result:=0;
{? _rem_zgl<>null()
|| REM_ZAS.cntx_psh();
   REM_ZGL.cntx_psh();
   REM_ZGL.prefix();
   {? REM_ZGL.seek(_rem_zgl)
   || {? REM_ZGL.REM_ZAS<>null()
      || REM_ZGL.REM_ZAS();
         _result:=exec('chk_opiekun','zasoby',_user,)
      ||
::       Jeżeli zgłoszenie nie ma zasobu to zawsze zwracamy 1 żeby tu się nie powiesiło
         _result:=1
      ?}
   ?};
   REM_ZGL.cntx_pop();
   REM_ZAS.cntx_pop()
:: Jeżeli nie ma parametru to zawsze zwracamy 1 żeby się tu nie powiesiło
|| _result:=1
?};
_result


\action_close
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Akcja 'Zamknij' zgłoszeń remontowych
::----------------------------------------------------------------------------------------------------------------------
_can_continue:=1;
{? REM_ZGL.REM_ZAS<>null()
|| REM_ZAS.cntx_psh();
   REM_ZGL.REM_ZAS();
   _can_continue:=exec('chk_opiekun','zasoby',OPERATOR.USER);
   {? _can_continue=0
   || _what:=exec('REM_ZAS','#to_string');
      _choice:=FUN.choice(
         'Zasób: %1 posiada opiekunów. Tylko oni mogą zamykać zgłoszenia remontowe dotyczące tego zasobu.'@[_what],,
         'Opiekunowie'@
      );
      {? _choice>0
      || exec('rem_kato_select','zasoby',REM_ZAS.KAT)
      ?}
   ?};
   REM_ZAS.cntx_pop()
?};

{? _can_continue>0
||
   _args:=exec('mp_run_a','#b__box');
   _args.ACT_UID:='TRE_ZGL_AEZG';
   _args.UIDREF:=REM_ZGL.uidref();
   _args.AKCJA:='ZAMKNIJ';
   _args.PROC_START:='N';
   _args.CONTEXT:=obj_new('REM_ZGL'); _args.CONTEXT.REM_ZGL:=REM_ZGL.ref();

   _args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
   exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'REM_ZGL',REM_ZGL.ref());

   exec('mp_run','#b__box',_args);

   {? params_get().env_rem_zgl.FILTER='Z' & REM_ZGL.get() & REM_ZGL.STAT_REJ<>exec('status_completed','remonty_zgloszenia')
   || REM_ZGL.f_del()
   ?}
?};
~~


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: obj_new() - obiekt wynikowy
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

_can_continue:=1;
_obj:=obj_new('RESULT','REM_ZGL');
_obj.RESULT:=0;
_obj.REM_ZGL:=null();

_keyRefs:=_mp.getRefs();

{? obj_len(_keyRefs)>0
||
   {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];

      {? type_of(_kref)>0
      ||
         {? ref_name(_kref)=REM_ZGL.name()
         || _obj.REM_ZGL:=exec('FindAndGet','#table',REM_ZGL,_kref,,,null());

            {? _obj.REM_ZGL=null()
            ||
::             Nie znaleziono rekordu kluczowego powiązanego ze zgłoszeniem, więc robię error
               _can_continue:=0;
               exec('rem_zgl_deleted_in_proc','remonty_zgloszenia',_mp)
            ||
::             Sprawdzenie statusu rejestracji zgłoszenia, jeżeli równy 'closed', to popychanie
               _stat_verified:=exec('status_verified','remonty_zgloszenia');
               _stat_closed:=exec('status_closed','remonty_zgloszenia');
               _stat_rej:=exec('FindAndGet','#table',REM_ZGL,_obj.REM_ZGL,,"STAT_REJ",_stat_verified);
               {? _stat_rej=_stat_closed
               || _can_continue:=0;
                  FUN.info('Zgłoszenie remontowe zostało już zamknięte.'@);
                  _mp.done()
               ?}
            ?}
         ?}
      ||
::       Nie znaleziono rekordu kluczowego powiązanego ze zgłoszeniem, więc robię error
         _can_continue:=0;
         exec('rem_zgl_deleted_in_proc','remonty_zgloszenia',_mp)
      ?}
   !}
?};

{? _can_continue>0
||
:: jest parametr wejściowy REM_ZGL
   {? _obj.REM_ZGL=null() & var_pres('REM_ZGL',_in)=type_of(null())
   || _obj.REM_ZGL:=_in.REM_ZGL
   ?}
?};

{? _can_continue>0
|| _obj.RESULT:=1
?};

_obj

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:39 230e5223bdcbcd299e70d6c29906eaefc8f8736d8087642e00cbe4614725d420303ecf3db688fc5c1f513822bec575b420f8f45e75b760767743b669ed7f2aac8a739ac8863a9652b658a1d4176d5c686e93c78b56844c9d717f3183a1d330fb5284125d2aa38d8ab39de8aab3bc5d97743036999fa24422438641402735867e
