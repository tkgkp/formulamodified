:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lmg_zam_drzk.fml
:: Utworzony: 13.11.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Rejestracja zamówienia wewnętrznego
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ,ZWMG
::# access=exec('access','!lmg_zam_drzk')
::# parses=exec('parses','!lmg_zam_drzk')
::# condition=Nie wszystko zlecone, act_uid=TTE_PZL_DZWE, auto=N, formula=exec('nie_wszystko_zlecone','%gate',_a.ZK_N)

::# kind=WE,   symbol=TYPYZAM, type=_TYPYZAM, name=Typ zamówienia wewnętrznego,  required=N,    keyref=N, fml_val="exec('wyb_zam','zamowienia','W')"
::# kind=WE,   symbol=PD_K,    type=_PD_K,    name=Pozycja koszyka planu dostaw, required=N
::# kind=WE,   symbol=ZK_N,    type=_ZK_N,    name=Zamówienie wewnętrzne,        required=N
::# kind=WY,   symbol=ZK_N,    type=_ZK_N,    name=Zamówienie wewnętrzne,        required=N

_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_auto:=0;
_area_zam:=_mp.pathArea('LMG_ZAM');
_area:=_area_zam | _mp.pathArea('LZK_PLD');
_proc:=_mp.pathProc();
_todo:=_mp.pathTodo() | _mp.pathArea() & ~_area;
_autoakc:=exec('autoAkc','#b__box',_mp,600180,'LMG_ZAM_DRZA');

:: Przepisanie portu wejściowego ZK_N na wyjściowy ZK_N
{? var_pres('ZK_N',_in)=type_of(null()) & _in.ZK_N
   & (var_press('ZK_N',_out)<>type_of(null()) | _out.ZK_N=null())
|| _out.ZK_N:=_in.ZK_N;
   _mp.save(,_out)
?};

{? _todo
:: Ustawienie kontekstu wg instancji elementu w procesie
|| {? var_pres('ZK_N',_out)=type_of(null()) & _out.ZK_N
   || 1
   || {? ~_mp.isMicro()
      || _akcja:='START_TODO'
      || _mp.error('Brak parametru wyjściowego ZK_N.')
      ?}
   ?}
?};
_czy_zam:=var_pres('ZK_N',_out)=type_of(null()) & _out.ZK_N;

:: Sprawdzenie uprawnień
{? params_exec('permissions_chk','lmg',0)=0 || return() ?};

:: Wyzwalacz, który po dodaniu nagłówka dokumentu:
:: - add: dodaje rekord kluczowy nagłówka dokumentu
::   del: usuwa rekord kluczowy nagłówka dokumentu
:: - add: zapisuje parametr wyjściowy ZK_N = wskazanie na nagłówek zamówienia wewnętrznego
::   del: zapisuje parametr wyjściowy ZK_N = null
_mp.trigRef('ZK_N',,0,,exec('kind_out','#b_port'),'ZK_N');

{? _czy_zam & ~(exec('FindAndGet','#table',ZK_N,_out.ZK_N,,"name()",'')*'__')
||
   _mp.error('Zamówienie '+exec('FindAndGet','#table',ZK_N,_out.ZK_N,,"SYM",'')+' przesłane do archiwum. '
             'Redakcja niemożliwa.')
|? _akcja='Plan_dostaw'
|| {? var_press('PD_K',_in)<>type_of(null()) || _in.PD_K:=null() ?};
   exec('plz_bdod','zamowienia',_in.PD_K);
   _outa:=_mp.load(exec('kind_out','#b_port'));
   {? var_pres('ZK_N',_outa)<>type_of(~~) & _outa.ZK_N
   || PD_Z.RSQL:=$_outa.ZK_N
   || _mp.cancel()
   ?}

|? _akcja='Dołącz'
   | _proc
   | _akcja='START_TODO'
:: Obsługa Dołącz - dołącz w oknie obszaru i start procesu z pulpitu
|| {? var_pres('TYPYZAM',_in)=type_of(null()) & _in.TYPYZAM<>null()
   || BEER.TYPYZAM:=_in.TYPYZAM
   |? _proc | _akcja='START_TODO'
:: Wybór typu zamówienia
   || BEER.TYPYZAM:=null();
      _p3014:=exec('get','#params',3014,2,OPERATOR.USER);
      exec('typ_zamm','zamowienia',_p3014,'W')
   ?};

   {? BEER.TYPYZAM
   ||
::    Parametr 'akcja' wykorzystywany w formułach przycisków 'Pozycje', 'Zakończ'
      params_set('out',_out,'mp',_mp,'akcja',_akcja);
      exec('zam_dol','zamsiw_nag');

::    Podczytanie parametrów wyjściowych
      _outa:=_mp.load(exec('kind_out','#b_port'));
      {? var_pres('ZK_N',_outa)<>type_of(~~) & _outa.ZK_N
::    Dodano dokument
      ||
::       Ustawienie się na dodanym dokumencie w widoku obszaru
         {? _area_zam || ZK_N.seek(_outa.ZK_N) ?}
::    Wycofanie czynności bo nie dodano dokumentu
      || _mp.cancel()
      ?}
   ?}

|? _akcja='Kopiuj'
|| params_set('context',params_get());
   exec('zk_kopiuj','!lmg_zam_drzk')

|? _akcja='Popraw'
   | _todo
|| {? var_pres('ZK_N',_out)=type_of(null())
:: Uruchomione w procesie
   || ZK_N.cntx_psh();
      ZK_N.prefix();
      {? ZK_N.seek(_out.ZK_N)
      || {? ~_todo | ZK_N.STAT_REJ='N'
         || params_set('out',_out,'mp',_mp,'akcja',_akcja);
            exec('zam_pop','zamsiw_nag');
            _mp.descTodo()
         || FUN.info('Zamówienie już jest %1.'@[{? ZK_N.STAT_REJ='T' || 'zaakceptowane' || 'zakończone' ?}]);
            _mp.done()
         ?}
      ?};
      ZK_N.cntx_pop()
   |? _todo
:: Uruchomione zadanie z listy todo i brak _out.FAKS wtedy zadanie wycofujemy
   || _mp.cancel()
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      params_set('out',_out,'mp',_mp,'akcja',_akcja);
      exec('zam_pop','zamsiw_nag')

   ?}

|? _akcja='Usuń'
|| {? var_pres('ZK_N',_out)=type_of(null())
:: Uruchomione w procesie
   || _zknag:=null();
      ZK_N.cntx_psh();
      {? ~_area_zam || ZK_N.prefix() ?};
      {? ZK_N.seek(_out.ZK_N)
      ||
         exec('zam_usu','zamsiw_nag');

         {? ~ZK_N.seek(_out.ZK_N)
::       Wycofuję instancję jeśli nie znaleziono dokumentu
         || _mp.cancel()
         ?};
         _zknag:=ZK_N.ref()
      ?};
      ZK_N.cntx_pop();
::    Ustawienie się na kolejnym dokumencie w widoku obszaru
      {? _area_zam || {? _zknag || ZK_N.seek(_zknag) ?} ?}
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      exec('zam_usu','zamsiw_nag');

      _mp.done()
   ?}

|? _akcja='Zakończ_wer' & _area_zam
|| {? exec('zam_akc','zamsiw_nag',,_autoakc) || _mp.done() ?}

|| _mp.error('Nieobsługiwana ścieżka.')
?};

{? _area_zam || exec('zakr_set_wew','zamsiw_nag') ?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_out:=_mp.load(exec('kind_out','#b_port'));

{? var_pres('ZK_N',_out)<>type_of(~~) & _out.ZK_N
|| 'Zakończ rejestrację zamówienia wewnętrznego: %1'@@[exec('record','#to_string',_out.ZK_N)]
|| 'Zarejestruj zamówienie wewnętrzne'@@
?}


\zknag_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienie wewnętrzne - Dołącz
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_ZAM_DRZK';
_params.AKCJA:='Dołącz';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYPYZAM',BEER.TYPYZAM);

exec('mp_run','#b__box',_params)


\zknag_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienie wewnętrzne - Popraw
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_ZAM_DRZK';
_params.UIDREF:=ZK_N.uidref();
_params.AKCJA:='Popraw';

exec('mp_run','#b__box',_params)


\zknag_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienie wewnętrzne - Usuń
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_ZAM_DRZK';
_params.UIDREF:=ZK_N.uidref();
_params.AKCJA:='Usuń';
_params.GRUPA:=ZK_N.sel_size()>0;

exec('mp_run','#b__box',_params)


\zknag_pozycje_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienia wewnętrzne - Pozycje - okno wertowania
::----------------------------------------------------------------------------------------------------------------------
BPMN.END:=0;
params_exec('zam_poz','zamsiw_poz');
{? AreaTitle.area='LMG_ZAM' || exec('zakr_set_wew','zamsiw_nag') ?}


\zknag_zakoncz_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienie wewnętrzne - Zakocz - okno wertowania
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_ZAM_DRZK';
_params.UIDREF:=ZK_N.uidref();
_params.AKCJA:='Zakończ_wer';

exec('mp_run','#b__box',_params)


\zknag_kopiuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienie wewnętrzne - Kopiuj
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_ZAM_DRZK';
_params.AKCJA:='Kopiuj';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYPYZAM',ZK_N.T);

exec('mp_run','#b__box',_params)


\zk_kopiuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed kopiuj okna WER tabeli ZK_N, kopiowanie zamowienia
::  OLD: \zk_kopiuj/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_msg:='';
_ok:=1;
USERS_UP.index('MG');
USERS_UP.prefix(null,'ZAW');
{? ~USERS_UP.first()
|| _msg:='Brak magazynów do realizacji zamówień wewnętrznych.\nDołączenie zamówienia niemożliwe.'@;
   _ok:=0
?};

{? _ok=1
|| _tab:=obj_new('UPR_WWW','ZAM_WWW','COM_WWW');
   _upr_www:=_tab.UPR_WWW:='N';
   _zam_www:=_tab.ZAM_WWW:='';
   _com_www:=_tab.COM_WWW:='';
   {? Plugin.run('TYP_ZAM_WWW_001',_tab)
   || _upr_www:=_tab.UPR_WWW;
      _zam_www:=_tab.ZAM_WWW;
      _com_www:=_tab.COM_WWW
   ?};
   obj_del(_tab);
   _msg:='';
   {? _zam_www<>'' & ZK_N.T().T=_zam_www
   || {? _upr_www='N'
      || _msg+='Brak uprawnień do kopiowania zamówienia internetowego.'@
      |? _upr_www<>'T' & _com_www<>''
      || _msg+=_com_www
      ?}
   ?}
?};
{? _msg<>''
|| FUN.info(_msg)
|? exec('zam_lock','zamsiw_nag') & FUN.ask('Skopiować zamówienie?'@)
|| params_exec('zk_kopiuj1','!lmg_zam_drzk',ZK_N.ref())
?}


\zk_kopiuj1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: kopiowanie zamowienia
::   WE: _a  - ZK_N.ref
::   WY: ''
::  OLD: \zk_kopiuj1/zk.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;

VAR_DEL.delete('__aktmat');
__aktmat:=tab_tmp(1,'MAT','STRING[16]',''
           ,'ILR','REAL',''
           ,'NRK','INTEGER','');
_zkp:=tab_tmp(1,'MAT','STRING[16]','','ZKP','STRING[16]','');

__gen:=1;
_ctrlCN:=exec('get','#params',800850,2);
ZK_N.cntx_psh();
_mask_bie:=5-ZK_N.name();
_rodzaj:=ZK_N.T().R;

_zk_n:=obj_new(ZK_N.fld_num());
_zk_p:=obj_new(ZK_P.fld_num());
_zk_rn:=obj_new(ZK_RN.fld_num());
_zk_rp:=obj_new(ZK_RP.fld_num());
_fakso:=obj_new(FAKSO.fld_num());

_ref_old:=_a;
_ref_new:=null;

:: ref'y materialow do odtworzenia statusow zamowien
_mats:='';

:: kopiowanie naglowka

ZK_N.prefix();
{? ZK_N.seek(_a)
||
   {! _licz:=1..ZK_N.fld_num() |! _zk_n[_licz]:=ZK_N[_licz] !}
?};

:: obsluga memo
_memo:=ZK_N.memo_get('r','UW');
ZK_N.memo_get(,'UW');

ZK_N.blank();
{! _licz:=1..ZK_N.fld_num()
|! {? var_pres(ZK_N.fld_acr(_licz),ZK_N)<>var_pres('UW',ZK_N) || ZK_N[_licz]:=_zk_n[_licz] ?}
!};

:: wyznaczenie nowego numeru

BEER.TYPYZAM:=exec('FindInSet','#table','TYPYZAM','TYP',ZK_N.T().T,_rodzaj);
POM.TAB:='ZK_N';
POM.TYPDOK:=ZK_N.T().KOD;
ZK_N.NR:=0;
ZK_N.SYM:='';
ZK_N.R:=ST.AR;
ZK_N.M:=ST.AM;
ZK_N.DP:=date();
ZK_N.DT=ZK_N.DP;
ZK_N.DT:=ZK_N.DP+{? ~ZK_N.KH().DREA
                 || {? ZK_N.T().ILREA>0 || ZK_N.T().ILREA || 0 ?}
                 || {? KH.DREA>0 || KH.DREA || 0 ?}
                 ?};
ZK_N.PL_DATA:=ZK_N.DT;
ZK_N.PL_TIME:=time(0,0,0);
ZK_N.RR:=ZK_N.DT~1;
ZK_N.RM:=ZK_N.DT~2;
ZK_N.RT:=exec('NumberOfWeek','#datetime',ZK_N.DT);
_tran:=ZK_N.TRN;
_sam:=ZK_N.POJAZD;

:: zmiana wartosci pol naglowka tworzonego zamowienia
ZK_N.US:=OPERATOR.USER;
ZK_N.PR:=0;
ZK_N.AKC:='N';
ZK_N.STAT_REJ:='N';
ZK_N.KOLOR:=exec('kolor_rand','#color');
ZK_N.MG:=null();
ZK_N.EZAPOT:='';
ZK_N.OBI_POW:='';
ZK_N.OFE:=null;
ZK_N.LOTUSID:='';

_wal:=#ZK_N.WAL;
_krs:=ZK_N.KRS;
_kh:=ZK_N.KH;
_odb:=ZK_N.ODB;
_pl:=ZK_N.PL;

{? ZK_N.add() & ZK_N.r_lock(1,1,1)
||
:: obluga memo
   {? _memo.is_open || ZK_N.memo_put(_memo,'UW') ?};

   ZK_N.win_edit('REDW');
   TAZ.RAB_N_BE:=ZK_N.RAB;
   {? ZK_N.edit("params_exec('spr_nzam','zamsiw_nag')")
   || {? ZK_N.NR=0 || exec('fak_numer','numery','',0); exec('znak','numery','ZK_N') ?};
      do();
      ZK_N.ZNB:=ZK_N.ZNW:=ZK_N.ZNR:=ZK_N.ZBB:=ZK_N.ZBZ:='N';
      ZK_N.put();

      _ref_new:=ZK_N.ref();
      ZK_N.memo_put(,'UW');

::    kopiowanie pozycji
      ZK_P.index('TYPN');
      ZK_P.prefix(ZK_N.A,'Z',_ref_old,1);
      {? ZK_P.first()
      ||
         {!
         |? _zk_p_o:=ZK_P.ref();
            {! _licz:=1..ZK_P.fld_num() |! _zk_p[_licz]:=ZK_P[_licz] !};
            ZK_P.cntx_psh();
            ZK_P.prefix();
            {! _licz:=1..ZK_P.fld_num() |! ZK_P[_licz]:=_zk_p[_licz] !};

::          zmiana wartosci pol pozycji tworzonego zamowienia
            ZK_P.N:=_ref_new;
            ZK_P.A:='A';
            ZK_P.REZ:=0;
            ZK_P.SR:=0;
            ZK_P.ILR:=0;
            {? (ZK_P.RODZ='Z' | ZK_P.M().RODZ<>'U') & ZK_P.N().MG<>null || ZK_P.RMAG:=ZK_P.MG:=ZK_P.N().MG ?};
            ZK_P.ILP:=ZK_P.ILZ;
            _ldn:=exec('FindInSet','#table','USERREZ','UNIK',ZK_P.M().MGR,OPERATOR.USER,"@.USERREZ.LDNI",,,0);
            {? ~_ldn || _ldn:=exec('FindInSet','#table','USERREZ','UNIK',null(),OPERATOR.USER,"@.USERREZ.LDNI",,,0) ?};
            _zkndt:={? _ldn>0 || ZK_P.N().DP+_ldn || ZK_P.N().DT ?};
            {? ZK_P.N().DT>_zkndt || _zkndt:=ZK_P.N().DT ?};
            ZK_P.DT:={? _zkndt<date() || date() || _zkndt ?};
            ZK_P.PL_DATA:={? ZK_P.N().PL_DATA<date() || date() || ZK_P.N().PL_DATA ?};
::          aktualizacja transportu
            ZK_P.RR:=ZK_N.RR;
            ZK_P.RM:=ZK_N.RM;
            ZK_P.RT:=ZK_N.RT;
            {? _tran<>ZK_N.TRN || ZK_P.TRN:=ZK_N.TRN ?};
            {? _sam<>ZK_N.POJAZD || ZK_P.POJAZD:=ZK_N.POJAZD ?};
            ZK_P.SV:=exec('m_vat','material',ZK_P.M,ZK_N.KH,,ZK_N.DP~1,ZK_N.DP~2,,,,,FAKS.KRAJ_VAT);
            ZK_P.ZD_POZ:='';
            ZK_P.ILRB:=ZK_P.ILRW:=ZK_P.ILRD:=ZK_P.DOR:=0;
            ZK_P.ZNB:=ZK_P.ZNW:=ZK_P.ZNR:=ZK_P.ZBB:=ZK_P.ZBZ:='N';
            ZK_P.CZYBEZ:='T';
            ZK_P.ILBEZ:={? ~ZK_P.END || ZK_P.ILP || 0 ?};
            ZK_P.ODDT:=ZK_P.DODT:=date(0,0,0);
            {? (1+ZK_P.RMAG().TYP)<>'D' & ZK_P.DK_C<>null() || ZK_P.DK_C:=null() ?};
            ZK_P.US:=ZK_P.N().US;
            {? ZK_P.N().ZL<>null() || ZK_P.ZL:=ZK_P.N().ZL ?};
            ZK_P.KH:=ZK_P.N().KH;
            ZK_P.KH_ODB:=ZK_P.N().ODB;
            {? ZK_P.RMAG<>null() & ZK_P.RMAG().PAL='T' & ZK_P.N().MG=null() || ZK_P.RMAG:=ZK_P.MG:=null() ?};
            ZK_P.IL_ZT:=ZK_P.IL_TR:=0;
            ZK_P.PROJEKTY:=ZK_P.N().PROJEKTY;
            ZK_P.add();
            _zkp.blank(); _zkp.MAT:=$ZK_P.M; _zkp.ZKP:=$ZK_P.ref(); _zkp.add(1);
            __aktmat.clear();
            __aktmat.clear();
            {? __aktmat.find_key($ZK_P.M)
            || __aktmat.ILR+=ZK_P.ILP;
               {? __aktmat.NRK>ZK_P.NR || __aktmat.NRK:=ZK_P.NR ?};
               __aktmat.put(1)
            || __aktmat.blank();
               __aktmat.MAT:=$ZK_P.M;
               __aktmat.ILR:=ZK_P.ILP;
               __aktmat.NRK:=ZK_P.NR;
               __aktmat.add(1)
            ?};
            _mats+=$ZK_P.M;
            _zk_p_n:=ZK_P.ref();

::          kopiowanie informacji dodatkowych dla pozycji zamowienia klienta
            FAKSO.cntx_psh();
            FAKSO.use('fakto'+_mask_bie);
            FAKSO.index('ZK_P');
            FAKSO.prefix(_zk_p_o);
            {? FAKSO.first()
            ||
               {!
               |? {! _licz:=1 .. FAKSO.fld_num() |! _fakso[_licz]:=FAKSO[_licz] !};
                  FAKSO.cntx_psh();
                  FAKSO.prefix();
                  {! _licz:=1 .. FAKSO.fld_num() |! FAKSO[_licz]:=_fakso[_licz] !};
                  FAKSO.ZK_P:=_zk_p_n;
                  FAKSO.add();
                  FAKSO.cntx_pop();
                  FAKSO.next()
               !}
            ?};
            FAKSO.cntx_pop();

            ZK_P.cntx_pop();
            ZK_P.next()
         !}
      ?};

::    kopiowanie informacji dodatkowych dla naglowka zamowienia klienta
      FAKSO.cntx_psh();
      FAKSO.use('fakto'+_mask_bie);
      FAKSO.index('ZK_N');
      FAKSO.prefix(_ref_old);
      {? FAKSO.first()
      ||
         {!
         |? {! _licz:=1 .. FAKSO.fld_num() |! _fakso[_licz]:=FAKSO[_licz] !};
            FAKSO.cntx_psh();
            FAKSO.prefix();
            {! _licz:=1 .. FAKSO.fld_num() |! FAKSO[_licz]:=_fakso[_licz] !};
            FAKSO.ZK_N:=_ref_new;
            FAKSO.add();
            FAKSO.cntx_pop();
            FAKSO.next()
         !}
      ?};
      FAKSO.cntx_pop();
      _wyn:=do_state;
      end();
      ZK_N.r_unlock()
   ||
      exec('del_plat','faktury_plat',ZK_N.ref());
      {? do_state()<2 & ~Plugin.run('BEFORE_DELTAB_001',ZK_N.ref()) & do_state() || undo() ?};
::    usuwanie numeru
      numer:=ZK_N.NR;
      oldnumer:=1;
      exec('nr_old','numery');
      ZK_N.del(1);
      ZK_N.r_unlock()
   ?};
   MG.f_clear()
||
   FUN.info('Kopiowanie zamówienia nie powiodło się.'@)
?};
ZK_N.cntx_pop();

{? _wyn=1
||
   ZK_N.cntx_psh;
   ZK_N.prefix;
   {? ZK_N.seek(_ref_new) & ZK_N.r_lock(1,1,1)
   ||
::    przywrocenie rezerwacji kopiowanego zamowienia
      {? exec('aktywpoz','zamsiw_poz',ZK_N.ref(),1)
      || ZK_N.A:='A'; ZK_N.put(1)
      ?};
::    aktualizacja statusow zamowien
      __aktmat.clear();
      {? __aktmat.first()
      || {!
         |? _refm:=exec('FindAndGet','#table',M,__aktmat.MAT,,,null());
            exec('aktu_rez','rezerwacje',_refm,__aktmat.NRK,__aktmat.ILR,$_ref_new,_zkp);
            __aktmat.next()
         !}
      ?};
::    aktualizacja zamowienia
      exec('obl_warz','zamsiw_nag',_ref_new,1,0);
      ZK_P.index('TYPN');
      ZK_P.prefix('A','Z',_ref_new,1);
::Usunięcie powiązanego cennika jeśli nie jest już aktualny
      {? ZK_P.first & ZK_N.T().R='Z' & (_kh<>ZK_N.KH | _odb<>ZK_N.ODB | _wal<>ZK_N.WAL | _pl<>ZK_N.PL)
      ||
         {!|?
            {? ZK_P.TAR_H<>null()
            ||
               ZK_P.cntx_psh();
               TAR_H.cntx_psh();
               TAR_H.use(ref_name(ZK_P.TAR_H));
               _tar_h_tap:=$ZK_P.TAR_H().TAP;
               ZK_P.CENA:=0;
               ZK_P.CWAL:=0;
               VAR_DEL.delete('__TAP_LIST');
               exec('f3_ceny','zamsiw_poz',2);
               exec('bezpkwce','zamsiw_poz',1);
               {? var_pres('__TAP_LIST')=type_of('')
               & ( __TAP_LIST*_tar_h_tap)=0
               || ZK_P.cntx_pop();
                  ZK_P.TAR_H:=null();
                  ZK_P.TAR_TMS:=0;
                  ZK_P.put()
               || ZK_P.cntx_pop()
               ?};
               VAR_DEL.delete('__TAP_LIST');
               TAR_H.cntx_pop()
            ?};
            ZK_P.next()
         !}
      ?};

      {? ZK_P.first & ZK_N.T().R='Z' & (_kh<>ZK_N.KH | _odb<>ZK_N.ODB | _wal<>ZK_N.WAL | _pl<>ZK_N.PL)
       & _ctrlCN<>'B' & (_ctrlCN='T' | exec('ceny_mat_dok','ceny_dok',2,,ZK_N,1))
      ||
         _ma_cennik:='N';
         _choice:=2;
         _result:=spli_str(exec('fap_czy_cennik','faktury_wspolne',_kh,_odb,_pl,_wal,ZK_P),' ');
         _ma_cennik:=_result[1];
         _choice:=#_result[2];

         {? _ma_cennik='N' & _choice<>2
         || _ok:=1
         || {? _choice=0 ||
               _choice:=FUN.choice('Zmieniły się kryteria cenników.\nNależy wyznaczyć ponownie ceny.'@,,
                  'Wg &cenników'@,'Wg &dokumentu'@)
            |? _ma_cennik='N' & _choice=2
            || _msg:='Zmieniły się kryteria cenników.\nBrak cennika zgodnego z aktualnymi kryteriami.'@;
               FUN.info(_msg)
            ?};
            {!
            |?
               _ok:={? _choice || exec('ceny_mat_dok','ceny_dok',1,,ZK_N,,1,_choice=2,_wal<>ZK_N.WAL) || 0 ?};
               {? _ok=0
               || {? FUN.ask('Należy ustalić nowe ceny.\nW przeciwnym razie kopiowanie będzie anulowane.\n'
                             'Czy anulować kopiowanie?'@)
                  || exec('zam_usu','zamsiw_nag',1);
                     0
                  || 1
                  ?}
               || 0
               ?}
            !}
         ?}
      ?};
      ZK_N.r_unlock
   ?};
   ZK_N.cntx_pop;
   {? ~ZK_N.seek(_ref_new)
   ||
      FUN.info('Aktualnie zredagowane zamówienie nie jest dostępne w ustawionym zakresie widoku zamówień.'@)
   ?}
?};
obj_del(_zkp);
VAR_DEL.delete('__gen');
VAR_DEL.delete('__aktmat');
''


\access
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na uprawnienia do danych dla czynności
::   WE: params_get().in - parametry wejściowe czynności
::           params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::           params_get().mp - Menadżer Procesów
::   WY: 0 - użytkownik nie ma uprawnień do danych dla czynności
::       1 - użytkownik ma uprawnienia do danych czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_user:=params_get().user;
_mp:=params_get().mp;

_result:=1;
{? var_pres('TYPYZAM',_in)=type_of(null()) & _in.TYPYZAM<>null()
|| BEER.TYPYZAM:=_in.TYPYZAM;
   _p3014:=exec('get','#params',3014,2,_user);
   {? form(_p3014)<>'' & ~((' '+_p3014)*(' '+BEER.TYPYZAM().T+' '))
   || _result:=0;
      BEER.TYPYZAM:=null()
   ?}
?};
_result


\zknag_zakoncz_zkp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienie sprzedaży - Zakocz - okno wertowania - dla pozycji
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
exec('btn_EndPosition','okienka','LMG_ZAM_DRZK',BEER.ZK_N().uidref(),ZK_N
 ,'Zakończ_wer','Zakończyć rejestrację zamówienia %1?'@[BEER.ZK_N().SYM])


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Formuła ustala PARSES
::   WE: UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_out:=params_get().out;

{? var_pres('ZK_N',_out)=type_of(null()) & _out.ZK_N
|| ZK_N.cntx_psh();
   ZK_N.use(ref_name(_out.ZK_N));
   ZK_N.prefix();
   {? ZK_N.seek(_out.ZK_N)
   || __PARSES.setVal('OddzialLogProd',ZK_N.ODDZ)
   ?};
   ZK_N.cntx_pop()
|| _in:=params_get().in;
   {? var_pres('PD_K',_in)=type_of(null()) & _in.PD_K
   || PD_K.cntx_psh();
      PD_K.use(ref_name(_in.PD_K));
      PD_K.prefix();
      {? PD_K.seek(_in.PD_K)
      || __PARSES.setVal('OddzialLogProd',PD_K.MG().ODDZ)
      ?};
      PD_K.cntx_pop()
   ?}
?};

1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:37 715b470078167aa379b44e77d7fe5ea68752e84f06e969c1f4b5507cb442fdfee88f5d0253799c8da2459346d8bd3b672ebb2a245ddc116de9eb7a15aa8a8d5d95439a2c00750879691015c739fe66c67b4c204e3f252ee11877a795b1cd90aa7bd03c928d8e11a01bb66129459eedd38517b23d011b7266f3b7dd6be7fdbcba
