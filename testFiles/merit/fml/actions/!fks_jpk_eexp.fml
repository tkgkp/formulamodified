:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fks_jpk_eexp.fml
:: Utworzony: 30.08.2016
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności FKS_JPK_EEXP - Wysyłanie plików JPK
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Wysyłanie plików JPK - główna formuła czynności FKS_JPK_EEXP.
::----------------------------------------------------------------------------------------------------------------------
::# kind=WE, symbol=JPK, type=_JPK, name=Wskazanie na plik JPK, required=N, keyref=T
_args:=params_get();
_we:=_args.in;
_wew:=_args.int;
_wy:=_args.out;
_mp:=_args.mp;
_akcja:=_mp.akcja();
JPK.cntx_psh();
JPK.prefix();
{? var_pres('JPK',_we)<=0 | ~JPK.seek(_we.JPK)
|| {? ~_mp.isAutoRun()
   || FUN.info('Nie znaleziono pliku JPK.'@)
   ?};
   _mp.done()
|? _akcja='UPO'
|| {? JPK.AKC='T' & JPK.STAT='T'
   || _mp.done()
   ?}
|| params_set(_args);
   params_exec('set_win','!fks_jpk_eexp');
   JPK.display();
   {? JPK.AKC='T' & JPK.STAT='T'
   || _mp.done()
   ?}
?};
JPK.cntx_pop();
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Opis na liście TODO czynności
::----------------------------------------------------------------------------------------------------------------------
_desc:='Wyślij plik JPK'@@;
_mp:=params_get().mp;
_we:=_mp.load(exec('kind_in','#b_port'));
{? var_press('JPK',_we)>0
|| JPK.cntx_psh();
   JPK.prefix();
   {? JPK.seek(_we.JPK)
   || _desc:='Wyślij plik %1'@@[exec('record','#to_string',JPK.ref())]
   ?};
   JPK.cntx_pop()
?};
_desc


\set_win
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przygotowuje okno
::----------------------------------------------------------------------------------------------------------------------
_okn:=JPK.mk_edit('Jednolity Plik Kontrolny'@);
JPK.win_ewin(_okn,,'RED');
JPK.win_ebtn(_okn,'text=%1,btn_label_align=center,panel=bottom,align=begin,display=1'['&Pokaż dane'@],"
   exec('show_jpk','!fks_jpk_zprz');''
");
JpkBtnW:=JPK.win_ebtn(_okn,'text=%1, btn_label_align=center, panel=bottom, align=end, display=1'['Wyślij'@],"
   params_exec('send','!fks_jpk_eexp');
   exec('upd_btn','!fks_jpk_eexp');
   win_disp();
   ''
");
JpkBtnU:=JPK.win_ebtn(_okn,'text=%1, btn_label_align=center, panel=bottom, align=end, display=1'['Pobierz UPO'@],"
   VAR_DEL.delete('JpkInP'); JpkInP:=1;
   params_exec('jpk_upo','!fks_jpk_eexp');
   VAR_DEL.delete('JpkInP');
   exec('upd_btn','!fks_jpk_eexp');
   {? JPK.STAT='T'
   || 'key:Esc'
   || ''
   ?}
");
JpkBtnP:=JPK.win_ebtn(_okn,'text=%1, btn_label_align=center, panel=bottom, align=end, display=1'['Przyw&róć'@],"
   exec('jpk_ret','!fks_jpk_eexp');
   exec('upd_btn','!fks_jpk_eexp');
   win_disp();
   ''
");
_an:=JPK.win_ebtn(_okn,'text=%1, btn_label_align=center, panel=bottom, align=end, display=1'['&Anuluj'@],'key:Esc');
JPK.btn_eopt(_okn,_an,'tooltip='+exec('help_red_esc','#window','A'));
JPK.win_edit(_okn);
exec('upd_btn','!fks_jpk_eexp')


\upd_btn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia przyciski okna dla ToDo
::----------------------------------------------------------------------------------------------------------------------
{? JPK.get()
|| JPK.btn_eopt(JPK.win_edit('?'),JpkBtnW,'state='+{? JPK.STAT<>'N' || 'grayed' || 'normal' ?});
   JPK.btn_eopt(JPK.win_edit('?'),JpkBtnU,'state='+{? JPK.STAT<>'W' || 'grayed' || 'normal' ?});
   JPK.btn_eopt(JPK.win_edit('?'),JpkBtnP,'state='+{? JPK.STAT='N' || 'grayed' || 'normal' ?})
?};
~~


\save_todo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Zapisanie pliku konfiguracyjnego dla aplikacji wysylajacej pliki JPK
::   WE: _a - tryb
::       _b - sciezka do klucza
::       _c - sciezka do klucza SF
::  OLD: \save_todo/jpk.fml
:: ~OST: INFOPEN
::----------------------------------------------------------------------------------------------------------------------
{? Jpk.first()
|| exec('czytaj','#stalesys',,XINFO,'JPKPRXS','EDEKPRXN','EDEKPRXP','JPKLOG');
   _f:=fopen('@!Tmp/jpk/todo.txt','w',0);
   {? _f
   || fwrite(_f,'tryb='+${? _a=7 || 7 || _a ?});
      fwrite(_f,'sig='+{? var_pres('JpkSig')>0 & JpkSig=2 || '2' || '1' ?});
      {? _b<>''
      || fwrite(_f,'adres='+XINFO.JPKGATE);
         fwrite(_f,'klucz='+_b)
      ?};
      {? _c<>''
      || fwrite(_f,'adresSF='+XINFO.SF_GATE);
         fwrite(_f,'kluczSF='+_c)
      ?};
      {? XINFO.JPKPRXS='T'
      || fwrite(_f,'proxySystem=true')
      |? XINFO.EDEKPRXN<>'' & XINFO.EDEKPRXP
      || fwrite(_f,'proxyHost='+XINFO.EDEKPRXN);
         fwrite(_f,'proxyPort='+$XINFO.EDEKPRXP);
::         fwrite(_f,'proxyUser=user')
::         fwrite(_f,'proxyPass=pas')
         ~~
      ?};
      {? XINFO.JPKLOG<>'T'
      || fwrite(_f,'log=false')
      ?};
      fwrite(_f,'auto');
      fwrite(_f,'nip='+STR.gsub(XINFO.NIP,'-',''));
      fwrite(_f,'firma='+XINFO.NAZ);
      {!
      |? fwrite(_f,
            'JPK@'+$Jpk.LP+'@'+Jpk.RN+'@'+Jpk.FN+'@'+Jpk.TYP+'@'
            +STR.gsub($Jpk.DS,'/','-')+'T'+Jpk.TS$3+'@'+
            STR.gsub($Jpk.DOD,'/','-')+'@'+
            STR.gsub($Jpk.DDO,'/','-')+'@'+Jpk.VER+'@'
         );
         Jpk.next()
      !};
      fclose(_f);
      1
   ?}
?}


\send_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Przygotowanie do wyslania plików JPK
::  OLD: \send_init/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('Jpk','Jpk1','Jpk2');
Jpk:=tab_tmp(2,
   'LP','INTEGER',,
   'REF','INTEGER',,
   'FN','STRING[255]',,
   'RN','STRING[50]',,
   'TYP','STRING[5]',,
   'OKRES','STRING[7]',,
   'RODZAJ','STRING[10]',,
   'NR','INTEGER',,
   'DS','DATE',,
   'TS','TIME',,
   'DOD','DATE',,
   'DDO','DATE',,
   'VER','STRING[40]',
);
Jpk1:=Jpk.index('?');
Jpk2:=Jpk.ndx_tmp('',1,'RODZAJ',,0, 'OKRES',,0, 'NR',,0);
JpkLp:=0;
JpkSel:=JPK.sel_size();
JpkRef:=JpkUpo:=0;
1


\send_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Dodanie JPK do wyslania
::   WE: _a - zapisywać plik
::  OLD: \send_add/jpk.fml
:: ~OST: INBLGET,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_fn:=tmp_dir()+'/'+'JPK_'+JPK.TYP+'_'+STR.gsub(JPK.OD$3,'/','-')+'_'+$#JPK.ref()+'.xml';
_fld:={? JPK.TYP='SF' || 'JPK_SIG' || 'PLIK' ?};
{? _a=0 | JPK.bl_get(_fld,'@'+_fn,0)
|| Jpk.blank(1);
   Jpk.LP:=JpkLp+=1;
   Jpk.REF:=#JPK.ref();
   Jpk.FN:=_fn;
   Jpk.RN:=JPK.REF_ID;
   Jpk.TYP:={? JPK.TYP='SF' || 'JPKSF' |? JPK.CYKL='T' || 'JPK' || 'JPKAH' ?};
   Jpk.OKRES:=JPK.OKRES;
   Jpk.RODZAJ:=JPK.TYP;
   {? var_press('LP',HELPJPK)>0 || Jpk.NR:=JPK.LP ?};
   Jpk.DS:=JPK.D_GEN;
   Jpk.TS:=JPK.T_GEN;
   Jpk.DOD:=JPK.OD;
   Jpk.DDO:=JPK.DO;
   Jpk.VER:=JPK.ISTDEF().VER;
   Jpk.add()
?}


\b_send
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Przed akcja grupowa wyslania plików JPK
::  OLD: \b_send/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('can_send','!fks_jpk_eexp') & exec('send_pyt','!fks_jpk_eexp',2) & exec('send_init','!fks_jpk_eexp')
|| 1
?}


\send
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Wysłanie pliku JPK
::  OLD: \send/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('cli_functions','#system')=0
|| FUN.emsg(exec('indevice_nacc_msg','#system'));
   return(0)
?};
_ok:=1;
_gr:=JPK.sel_size();
{? JPK.AKC<>'T'
|| {? ~_gr
   || FUN.info('Plik JPK nie jest zaakceptowany.'@)
   ?}
|? JPK.STAT='W'
|| {? ~_gr
   || FUN.info('Plik JPK jest już wysłany'@)
   ?}
|? JPK.STAT='B'
|| {? ~_gr
   || FUN.info('Plik JPK jest już wysłany, ale zawiera błędy.'@)
   ?}
|? JPK.STAT='T'
|| {? ~_gr
   || FUN.info('Dla pliku JPK odebrano już UPO.'@)
   ?}
|? JPK.TYP='SF' & ~exec('is_sig','jpk_sf')
|| {? ~_gr
   || FUN.info('e-Sprawozdanie nie jest podpisane.'@)
   ?}
|? JPK.TYP='SF' & exec('czy_krs','jpk_sf')
|| {? ~_gr
   || FUN.info('Nie można wysłać e-Sprawozdania do KRS automatycznie.\nUżyj portalu %1.'@['https://ekrs.ms.gov.pl'])
   ?}
|? _gr | exec('can_send','!fks_jpk_eexp') & exec('send_pyt','!fks_jpk_eexp',1)
|| {? ~_gr
   || _ok:=exec('send_init','!fks_jpk_eexp')
   ?};
   {? _ok
   || _ok:=exec('send_add','!fks_jpk_eexp',1)
   ?};
   {? _ok & ~_gr
   || exec('send_end','!fks_jpk_eexp',7)
   ?}
?}


\a_send
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Po akcji grupowej wysyłania plików JPK
::  OLD: \a_send/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
params_exec('send_end','!fks_jpk_eexp',7)


\send_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Zakonczenie akcji wysylania JPK
::   WE: _a - tryb
::  OLD: \send_end/jpk.fml
:: ~OST: INFCOPY,INFMKDIR,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
{? Jpk.first()
|| _typ:=exec('jpk_typ','jpk');
   _key:={? _typ.jpk || tmp_dir()+'/jpk.pem' || '' ?};
   _keySF:={? _typ.sf || tmp_dir()+'/jpk_sf.pem' || '' ?};
   _jpk_sig:={? var_pres('JpkSig')<=0 || 1 || JpkSig ?};
   _dir:=pth_dir('jpk.jar');
   _lib:=fmkdir('@!Tmp', 'jpk');
   _lib:=fmkdir(_lib, 'lib');
   _ok:=1;
   {? _a=7
   || {? _typ.jpk || _ok*=fcopy(exec('get_pem','!fks_jpk_eexp'),'@'+_key,1,0,1) ?};
      {? _typ.sf || _ok*=fcopy(exec('get_pem','jpk_sf'),'@'+_keySF,1,0,1) ?};
      {? _jpk_sig=3
      || _ok*=fcopy('jpk.p12','@!Tmp/jpk.p12',1,0,1);
         {? _ok
         || _ok*=exec('settings_p12','jpk','@!Tmp/jpk/settings.xml',tmp_dir()+'/jpk.p12')
         ?};
         {? _ok
         || {? Jpk.first()
            || {!
               |? exec('set_jpk_nip','jpk',Jpk.FN);
                  Jpk.next()
               !}
            ?}
         ?}
      || _fn:={? _jpk_sig=1 || 'settings.xml' || 'settings_v.xml' ?};
         _ok*=fcopy(_fn,'@!Tmp/jpk/settings.xml',1,0,1)
      ?}
   ?};
   {? _lib<>'' & _dir<>''
   || echo('Kopiowanie bibliotek jar ...'@);
      _fc:="fcopy(_a+'/lib/'+_c,_b+'/'+_c,0,0,1)";
      _ok*=_fc(_dir,_lib,'json.jar');
      {? _a=7
      || _ok*=_fc(_dir,_lib,'axis.jar');
         _ok*=_fc(_dir,_lib,'commons-discovery-0.2.jar');
         _ok*=_fc(_dir,_lib,'commons-logging-1.0.4.jar');
         _ok*=_fc(_dir,_lib,'cryptodialogs.jar');
         _ok*=_fc(_dir,_lib,'cryptoengine.jar');
         _ok*=_fc(_dir,_lib,'cryptohelp.jar');
         _ok*=_fc(_dir,_lib,'cryptolibrary.jar');
         _ok*=_fc(_dir,_lib,'DJNativeSwing.jar');
         _ok*=_fc(_dir,_lib,'DJNativeSwing-SWT.jar');
         _ok*=_fc(_dir,_lib,'iaikPkcs11Wrapper.jar');
         _ok*=_fc(_dir,_lib,'iText-2.1.7.jar');
         _ok*=_fc(_dir,_lib,'jaxrpc.jar');
         _ok*=_fc(_dir,_lib,'jna_WindowUtils.jar');
         _ok*=_fc(_dir,_lib,'jna-4.0.0.jar');
         _ok*=_fc(_dir,_lib,'jpedal_lgpl.jar');
         _ok*=_fc(_dir,_lib,'kirutils.jar');
         _ok*=_fc(_dir,_lib,'MozillaInterfaces-1.8.1.3.jar');
         _ok*=_fc(_dir,_lib,'swing-layout-1.0_lightversion.jar');
         _ok*=_fc(_dir,_lib,'swt-4.5-win32-win32-x86.jar');
         _ok*=_fc(_dir,_lib,'swt-4.5-win32-win32-x86_64.jar');
         _ok*=_fc(_dir,_lib,'wsdl4j-1.5.1.jar')
      ?};
      _ok*=fcopy('jpk.jar','@!Tmp/jpk/jpk.jar',1,0,1);
      echo()
   || _ok:=0
   ?};
   {? _ok=0
   || FUN.info('Błąd konfiguracji środowiska.\nNie powiodło się kopiowania plików.'@)
   || exec('MBJAR','#object');
      {? exec('save_todo','!fks_jpk_eexp',_a,_key,_keySF) & ~(_ret:=MBJAR.JavaExec(tmp_dir()+'/jpk',1,'-jar','jpk.jar'); 0)
      || params_exec('send_end2','!fks_jpk_eexp');
         {? JpkSel
         || FUN.info(
               'Liczba zaznaczonych plików: '+$JpkSel+'\n'+
               {? _a=7
               || 'Liczba plików do wysłania: '+$Jpk.size()+'\n'+
                  'Liczba wysłanych plików: '+$JpkRef
               || 'Liczba UPO do pobrania: '+$Jpk.size()+'\n'+
                  'Liczba pobranych UPO: '+$JpkUpo
               ?}
            )
         |? (_txt:=JPK.memo_txt(,1,'MEMO'))<>''
         || FUN.info(_txt)
         ?}
      ?}
   ?}
|| FUN.info('Brak plików do '+{? _a=7 || 'wysłania' || 'pobrania UPO' ?}+'.')
?};
VAR_DEL.delete('Jpk','Jpk1','Jpk2','JpkLp','JpkSel','JpkRef','JpkUpo')


\send_end2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Uaktualnienie informacji o wyslaniu JPK
::  OLD: \send_end2/jpk.fml
:: ~OST: INFERASE
::----------------------------------------------------------------------------------------------------------------------
JPK.cntx_psh();
JPK.prefix();
{? Jpk.first()
|| {!
   |? {? JPK.seek(Jpk.REF,)
      || {? Jpk.RN=''
         || _fn:='@!Tmp/jpk/jpkref'+$Jpk.LP+'.txt';
            _jest:=fexists(_fn);
            {? _jest
            || JPK.REF_ID:=exec('read','!fks_jpk_eexp',_fn);
               JPK.STAT:='W';
               JPK.D_REF:=date();
               JPK.T_REF:=time();
               JPK.U_REF:=OPERATOR.USER().KOD;
               JpkRef+=1;
               JPK.put()
            ?}
         || _fn:='@!Tmp/jpk/jpkupo'+$Jpk.LP+'.txt';
            _jest:=fexists(_fn);
            {? _jest
            || JPK.bl_put('UPO',_fn,0,,'jpk.upo.'+$Jpk.LP+'.xml');
               JPK.STAT:='T';
               exec('set_upo_date','!fks_jpk_eexp',exec('read','!fks_jpk_eexp',_fn));
::               JPK.D_UPO:=date();
::               JPK.T_UPO:=time();
               JPK.U_UPO:=OPERATOR.USER().KOD;
               JpkUpo+=1;
               {? JPK.put()
               || {? var_pres('JpkInP')<=0
                  || {? var_pres('_params')>100
                     || obj_del(_params)
                     ?};
                     _params:=exec('mp_run_a','#b__box');
                     _params.ACT_UID:='FKS_JPK_EEXP';
                     _params.AKCJA:='UPO';
                     _params.UIDREF:=JPK.uidref();
                     _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
                     exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'JPK',JPK.ref());
                     _params.PROC_START:='N';
                     exec('mp_run','#b__box',_params)
                  ?}
               ?}
            ?}
         ?};
         _fn:='@!Tmp/jpk/jpkres'+$Jpk.LP+'.txt';
         _jest:=fexists(_fn);
         {? _jest
         || _res:=exec('read','!fks_jpk_eexp',_fn);
            JPK.memo_set(_res);
            JPK.memo_put();
            {? #(3+(7-_res))>=400
            || JPK.STAT:='B';
               JPK.put()
            ?}
         ?}
      ?};
      ferase('@!Tmp/jpk/jpkref'+$Jpk.LP+'.txt',0);
      ferase('@!Tmp/jpk/jpkupo'+$Jpk.LP+'.txt',0);
      ferase('@!Tmp/jpk/jpkres'+$Jpk.LP+'.txt',0);
      Jpk.next()
   !}
?};
JPK.cntx_pop()


\read
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Odczytuje zawartosc pliku
::   WE: _a - sciezka do pliku
::  OLD: \read/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
_txt:='';
_f:=fopen(_a,'ur',0);
{? _f
|| {!
   |? _line:=fread(_f);
      {? _line<>'\n'
      || _txt+=_line+'\n';
         1
      ?}
   !};
   fclose(_f)
?};
_txt-1


\set_upo_date
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Ustawia czas i date na podstawie UPO
::   WE: _a - upo
::  OLD: \set_upo_date/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_poz:=_a*'<DataWplyniecia>')<>0
|| _poz2:=_a*'</DataWplyniecia>';
   _d:=19+((_poz+15)-_a);
   _dt:=(_poz2-_poz-16)+((_poz+15)-_a);
   _poz:=_dt*'.';
   {? _poz>0
   || _d:=(_poz-1)+_dt;
      _poz:=_dt*'+';
      _dp:=_poz-_dt;
      _h:=#(2+_dp);
      _h:=2-_h
   |? (_poz:=_dt*'Z')>0
   || _h:=2
   |? (_poz:=_dt*'+')>0
   || _dp:=_poz-_dt;
      _h:=#(2+_dp)
   ?};
   JPK.D_UPO:=date( #(4+_d), #(2+(5-_d)), #(2+(8-_d)));
   JPK.T_UPO:=time( _h+#(2+(11-_d)), #(2+(14-_d)), #(2+(17-_d)) )
?}


\b_jpk_upo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Przed akcja grupowa pobierania UPO
::  OLD: \b_jpk_upo/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('can_send','!fks_jpk_eexp') & exec('upo_pyt','!fks_jpk_eexp',2) & exec('send_init','!fks_jpk_eexp')
|| 1
?}


\jpk_upo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Akcja Pobierz UPO
::  OLD: \jpk_upo/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
_gr:=JPK.sel_size();
{? JPK.AKC<>'T'
|| {? ~_gr
   || FUN.info('Plik JPK nie jest zaakceptowany.'@)
   ?}
|? JPK.STAT='T'
|| {? ~_gr
   || FUN.info('Plik JPK posiada już UPO.'@)
   ?}
|? JPK.STAT='N' | JPK.STAT=''
|| {? ~_gr
   || FUN.info('Plik JPK nie został jeszcze wysłany.'@)
   ?}
|? JPK.STAT='B'
|| {? ~_gr
   || FUN.info('Plik JPK został wysłany, ale zawiera błędy.'@)
   ?}
|? _gr | exec('can_send','!fks_jpk_eexp') & exec('upo_pyt','!fks_jpk_eexp',1)
|| {? ~_gr
   || _ok:=exec('send_init','!fks_jpk_eexp')
   ?};
   {? _ok
   || exec('send_add','!fks_jpk_eexp',0)
   ?};
   {? _ok & ~_gr
   || exec('send_end','!fks_jpk_eexp',7)
   ?}
?}


\a_jpk_upo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Po akcji grupowej pobierania UPO
::  OLD: \a_jpk_upo/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('send_end','!fks_jpk_eexp',4)


\jpk_ret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Akcja przywroc dla wyslanych plikow JPK
::  OLD: \jpk_ret/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
{? 'BWT'*JPK.STAT=0
|| FUN.info('Plik JPK nie był wysyłany.'@)
|? 'BW'*JPK.STAT>0 & FUN.ask('Czy przywrócić plik do ponownego wysłania?'@) |
   JPK.STAT='T' & choice('Pobrano już UPO dla pliku JPK.\n'+
                         'Przywrócenie spowoduje usunięcie UPO.\n\n'+
                         'Czy przywrócić plik do ponownego wysłania?','Uwaga','EXCLAM',,1,2,'Tak','NIE')=0
|| JPK.STAT:='N';
   JPK.REF_ID:='';
   JPK.memo_set('','MEMO');
   JPK.memo_put();
   JPK.UPO:=null;
   JPK.U_REF:='';
   JPK.U_UPO:='';
   JPK.put()
?}


\can_send
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Czy można wysylać pliki JPK
::  OLD: \can_send/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,XINFO,'JPKGATE');
{!
|? {? XINFO.JPKGATE=''
   || {? FUN.choice('Nie ustawiono adresu bramki MF.'@,,'Ustaw'@)
      || exec('edek_params','xml');
         1
      ?}
   ?}
!};
XINFO.JPKGATE<>''


\send_pyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Pytanie o wyslanie JPK na bramke
::   WE: _a - 1-pojedynczo 2-grupowo
::  OLD: \send_pyt/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
JpkSig:=exec('pyt','jpk',_a,1)


\upo_pyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Pytanie o pobranie UPO
::   WE: _a - 1-pojedyncze 2-grupowe
::  OLD: \upo_pyt/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pyt','jpk',_a,2)


\get_pem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Zwraca nazwę certyfikatu z kluczem publicznym dla podpisu RSA
::  OLD: \get_pem/jpk.fml
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.JPKGATE*'test'>0
|| 'jpk_test.pem'
|| 'jpk.pem'
?}


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.14]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
_keyRefs:=_mp.getRefs();
{? obj_len(_keyRefs)>0
|| {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];
      {? type_of(_kref)>0
      || {? ref_name(_kref)='jpk_plik'
         || _jpk:=exec('FindAndGet','#table',JPK,_kref,,,null);
            {? _jpk=null
            || _mp.done()
            ?}
         ?}
      ?}
   !}
?};
1

:Sign Version 2.0 jowisz:1045 2024/02/09 14:29:04 57164278454cb13694a97dad7700cc143dd4f093a7998fa78dde0955d6d434eb89f15246e6be2f7b9bece62e6efb4c8e20a9a0bfe02f9ad5fbe291ab51024fb69b66794beb994badedb60a7a6ae49030480abbdcfb8568f3f5b80a05b17a750d5a94f9c354b78ffebc11e48eb7bb3e648981701b99a590441331183a79de9cb5
