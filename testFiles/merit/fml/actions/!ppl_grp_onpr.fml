:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ppl_grp_onpr.fml
:: Utworzony: 02.03.2016
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa czynności PPL_GRP_ONPR - Nal. premii za publikacje.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Nal. premii za publikacje - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::
exec('__CHK','object');

_rub:=obj_new('RN','REF');

R.cntx_psh();
R.index('RUBKOD');
R.prefix();
_rub.RN:=170;
_rub.REF:={? R.find_key(_rub.RN) || R.ref() || null() ?};
R.cntx_pop();

{? _rub.REF=null()
|| FUN.emsg('W systemie brak rubryki nr %1.'@ [$_rub.RN]);
   return()
?};


::FUN.info(
::   'Naliczanie premii za publikacje naukowe jest operacją składającą się z następujących kroków:\n'
::   '1. Określenie roku, na który będą naliczane premie.\n'
::   '2. Wybór pracowników, dla których przeprowadzone zostaną obliczenia.\n'
::   '3. Właściwe wprowadzenie informacji do bazy danych.\n'@
::);


_rok:=0;
_PAR:=tab_tmp(,
 'ROK','INTEGER','Rok kalendarzowy'@,
 'WSZYSCY','INTEGER',''
);
_we:=_PAR.mk_edit('Podaj'@);
_PAR.win_esep(_we,'Dane podstawowe'@);
_PAR.win_efld(_we,,'ROK',,,4,0,,,,'Rok, na który będzie naliczana premia za publikacje.'@);
_PAR.win_efld(_we,,'WSZYSCY',,,,,,'Pracownicy bez publikacji'@,,
   'Uwzględniaj pracowników bez publikacji'@,'check-box',
   'check_label='+'Uwzględniaj'@,"1","0");
exec('ok_esc','#window',_PAR,_we);
_PAR.efld_opt(_we,'mark=1',,'ROK');
_PAR.win_edit(_we);
_PAR.ROK:=date()~1;
{? _PAR.edit(
      "  _PAR:=cur_tab();
         {? (_chk:=__CHK.record(_PAR,,'ROK'))<>''
         || return(_chk)
         ?};

         _maxr:=5+date()~1;
         {? _PAR.ROK<1900 | _PAR.ROK>_maxr
         || return(__CHK.err_fld(_PAR,'ROK',1,'Dozwolone wartości z przedziału %1-%2.'@ ['1900',$_maxr]))
         ?};
         ''
      "
   )
|| _rok:=_PAR.ROK;
   _wszyscy:=_PAR.WSZYSCY
?};
&_we;
obj_del(_PAR);
&_PAR;

{? _rok=0
|| return()
?};

PROGPREM.cntx_psh();
PROGPREM.index('ROKPKT');
PROGPREM.prefix(exec('ref_firma','ustawienia'),_rok);
{? ~PROGPREM.first()
|| FUN.emsg('Brak progów premii za publikacje na rok %1.\nUzupełnij brakujące dane i spróbuj ponownie.'@ [$_rok])

|? _args:=exec('wybierz_args','pracownik');
   _args.DOMAIN:='PPL';
   _args.F_ZATR:='P';
   _args.VIEW:='';
   _args.SQL_FROM:='';
   _args.SQL_WHERE:=
      'extract(year from P.DZA)<%1 and (P.DZ is null or %1<=extract(year from P.DZ))' [$_rok]+
      {? _wszyscy
      || ''
      || ' and "P".REFERENCE in '
         ' (select P_DNAUK.P from P_DNAUK join OS_DNAUK where extract(year from OS_DNAUK.DATA)=%1)' [$(_rok-1)]
      ?};
   _args.FML_TEST:='';
   _args.HDR_SEL:='';
   _ret:=exec('wybierz','pracownik',_args);
   ~(_ret.STATUS='' & _ret.P.first())
|| ~~

|| _P:=tab_tmp(1,
::    Pola identyfikujące pracownika.
      'T','STRING['+$MS.fld_len(P,'T')+']',MS.name(P,'T'),
      'IP','INTEGER',MS.name(P,'IP'),
      'NAZWISKO','STRING['+$MS.fld_len(OSOBA,'NAZWISKO')+']',MS.name(OSOBA,'NAZWISKO'),
      'PIERWSZE','STRING['+$MS.fld_len(OSOBA,'PIERWSZE')+']',MS.name(OSOBA,'PIERWSZE'),
::    Informacja o przetwarzaniu.
      'PKT','INTEGER','Punkty'@,
      'PRB','REAL','Premia przed'@,
      'PRA','REAL','Premia po'@,
      'STATUS','STRING[60]','Status'@
   );
   _P.fld_fml('T','DISPLAY_FORMAT',P.fld_fml('T','*DISPLAY_FORMAT'));

   LSS.cntx_psh();
   LSS.index('PROPOZYC');
   SLO_KOD.cntx_psh();
   SLO_KOD.prefix();
   OS_DNAUK.cntx_psh();
   OS_DNAUK.prefix();
   P_DNAUK.cntx_psh();
   P_DNAUK.index('PDT');
   OSOBA.cntx_psh();
   OSOBA.prefix();
   P.cntx_psh();
   P.prefix();

:   Publikacje z ubiegłego roku
   _dtppub:=date(_rok-1,1,1);
   _dtkpub:=date(_rok-1,12,31);
:   Limity z bieżącego roku
   _dtppr:=date(_rok,1,1);
   _dtkpr:=date(_rok,12,31);
   {!
   |? {? P.seek(_ret.P.SQL)
      || P.OSOBA();
         _P.blank();
         _P.T:=P.T;
         _P.IP:=P.IP;
         _P.NAZWISKO:=OSOBA.NAZWISKO;
         _P.PIERWSZE:=OSOBA.PIERWSZE;

         _sa_publikacje:=0;
:        Zliczanie punktow
         _P.PKT:=0;
         P_DNAUK.prefix(P.ref());
         {? P_DNAUK.find_ge(_dtppub)
         || {!
            |? {? P_DNAUK.OS_DNAUK().DATA<=_dtkpub
               || {? OS_DNAUK.TYP().KOD='PUBLIK'
                  || _sa_publikacje+=1;
                     _P.PKT+=P_DNAUK.PUNKTY
                  ?};
                  P_DNAUK.next()
               ?}
            !}
         ?};

         {? _wszyscy | _sa_publikacje
         ||
:           Ustalenie wysokości premii
            _P.PRA:={? PROGPREM.find_le(_P.PKT) || PROGPREM.PREMIA ?};

:           Zapisanie wysokości premii w stałych składnikach listy płac
            _kk:=exec('kk_hist','pracownik',P.ref(),_dtppr);
            LSS.prefix(P.ref(),_rub.RN,_kk,_dtppr);
            {? LSS.first()
:              Zapis już jest - ponowne naliczanie
            || _P.PRB:=LSS.KW;
               {? _P.PRA=0
:                 Nowa premia jest zerowa - usuwamy rekord
               || _P.STATUS:='Utrata premii'@;
                  LSS.del()

               |? _P.PRA<>LSS.KW
:                 Premia zmieniła się
               || _P.STATUS:='Zmiana kwoty premii'@;
                  LSS.KW:=_P.PRA;
                  LSS.put()
               || _P.STATUS:='Bez zmian'
               ?}

            |? _P.PRA>0
:              Zapisu jeszcze nie ma - pierwsze naliczanie
            || _P.STATUS:='Naliczenie premii'@;
               LSS.blank(1);
               LSS.P:=P.ref();
               LSS.S:=_rub.REF;
               LSS.OD:=_dtppr;
               LSS.DO:=_dtkpr;
               LSS.KW:=_P.PRA;
               LSS.KK:=_kk;
               LSS.add()
            ?};

            _P.add()
         ?}
      ?};
      _ret.P.next()
   !};

   P.cntx_pop();
   OSOBA.cntx_pop();
   P_DNAUK.cntx_pop();
   OS_DNAUK.cntx_pop();
   SLO_KOD.cntx_pop();
   LSS.cntx_pop();

:  Przygotowanie okienek z raportem wykonania
   _ws:=_P.mk_sel('Raport z przetwarzania'@,,,'#premnauklicz',,,,,'U',,,,,,,'on');
   _P.win_fld(_ws,,'T',,,,,,,,MS.comment(P,'T'));
   _P.win_fld(_ws,,'IP',,,,,,,,MS.comment(P,'IP'));
   _P.win_fld(_ws,,'NAZWISKO',,,,,,,,MS.comment(OSOBA,'NAZWISKO'));
   _P.win_fld(_ws,,'PIERWSZE',,,,,,,,MS.comment(OSOBA,'PIERWSZE'));
   _P.win_fld(_ws,,'PKT',,,-9,0,,,,'Punkty'@);
   _P.win_fld(_ws,,'PRB',,,-17,2,,,,'Premia przed naliczaniem'@);
   _P.win_fld(_ws,,'PRA',,,-17,2,,,,'Premia po naliczaniu'@);
   _P.win_fld(_ws,,'STATUS',,,60,,,,,'Status operacji'@);
   _P.win_sel(_ws);
   _P.select();

   ~~
?};

PROGPREM.cntx_pop();

~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:37 8db33dfbd0b8759fab243745a4e26e0dc2a3c89310bb880312494211b588e527a664e8d4398f69c372b272d1617df253c972b95f9ca7db3a27a10f12e02a59424573299f0f14d5cc976ef6bdcc30a8f224c3fb81716db0e79b6c4f7f559e5c7cd84579697b0c51ea85ded0991d58ffccac59ee882740eb2a35b6733fa849e0a1
