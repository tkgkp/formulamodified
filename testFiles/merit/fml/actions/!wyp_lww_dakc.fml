:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !wyp_lww_dakc.fml
:: Utworzony: 28.08.2017
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły czynności WYP_LWW_DAKC - Akceptacja wydania/zwrotu wyposażenia
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Formuła główna czynności akceptacji wydania/zwrotu wyposażenia (WYP_LWW_DAKC)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::       context - [obj_new] obiekt służący do przekazywania kontekstu wywołania czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_int:=params_get().int;
_out:=params_get().out;
_mp:=params_get().mp;
_context:=params_get().context;

::# permissions=ODDZ

:: PARAMETRY WE:
::# kind=WE, symbol=KARO, type=_KARO, name=Zapis obrotu wyposażeniem, required=T, keyref=T
{? var_pres('KARO',_in)<>type_of(~~) & var_pres('KARO',_in)<>type_of(null())
|| _msg:='Błędny parametr wejściowy \'%1\' dla czynności %2.'@@['KARO','WYP_LWW_DAKC'];
   FUN.error(_msg);
   _mp.error(_msg);
   return()
?};
{? var_pres('KARO',_in)=type_of(~~) || _in.KARO:=null() ?};

_result:=0;
_can_continue:=1;

KARO.cntx_psh(); KARO.clear();

_keyRefs:=_mp.getRefs();

_karo:=null();

{? obj_len(_keyRefs)>0
||
   {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];

      {? type_of(_kref)>0
      ||
         {? ref_name(_kref)=KARO.name()
         || _karo:=exec('FindAndGet','#table',KARO,_kref,,,null());

            {? _karo=null()
            ||
::             Nie znaleziono rekordu kluczowego powiązanego z KARO, więc robię error
               _can_continue:=0;
               exec('karo_deleted_in_proc','wyp_head',_mp)
            ?}
         ?}
      ||
::       Nie znaleziono rekordu kluczowego powiązanego z KARO, więc robię error
         _can_continue:=0;
         exec('karo_deleted_in_proc','wyp_head',_mp)
      ?}
   !}
?};

{? _can_continue>0
||
:: jest parametr wejściowy KARO
   {? _karo=null() & var_pres('KARO',_in)=type_of(null())
   || _karo:=_in.KARO
   ?}
?};

{? _can_continue>0 & _karo<>null()
|| _can_continue:=KARO.seek(_karo)
?};

{? _can_continue>0
||
   _ask:=1;
   _komm:=0;
   {? _mp.isAutoRun()
   || _ask:=0;
      _komm:=1
   ?};
   {? _mp.isGroup()
   || _ask:=0;
      _komm:=1
   ?};

   {? _mp.isAutoRun()
   || _env_karo:=exec('env_karo','wyp_head');
      params_set('env_karo',_env_karo);
      _result:=exec('karo_akceptuj','!wyp_lww_dakc',KARO.ref(),_ask,_komm)

   |? _mp.akcja()='AKCEPTUJ'
   || _env_karo:=_context.env_karo;
      params_set('env_karo',_env_karo);
      _result:=exec('karo_akceptuj','!wyp_lww_dakc',KARO.ref(),_ask,_komm)

:: Obsługa z TODO - wyświetlam okno umożliwiające podgląd KARO
   |? _mp.pathTodo()
   || DK_C.cntx_psh(); M_ATR.cntx_psh(); DK.cntx_psh(); ND.cntx_psh();
      DK_C.prefix(); M_ATR.prefix(); DK.prefix();
      _win:=exec('win_todo','!wyp_lww_dakc');
      KARO.win_edit(_win);
      VAR1.NAZWISKO:=KARO.P().OSOBA().NAZWISKO;
      {? KARO.SRDK<>''
      || {? DK.seek(KARO.SRDK,8+KARO.SRDK)
         || VAR1.DOST:=DK.DOST;
            {? DK.DK_C<>null() || DK_C.use(8+$DK.DK_C) ?};
            ND.use(8+$DK.N);
            DK_C.seek(DK.DK_C);
            M_ATR.seek(DK_C.M_ATR)
         || DK_C.blank(1);
            M_ATR.blank(1)
         ?}
      ?};
      POMOC.MGRW:=KARO.MGRP().MGR;
      _env_karo:=exec('env_karo','wyp_head');
      params_set('env_karo',_env_karo);
      KARO.display();
      DK_C.cntx_pop(); M_ATR.cntx_pop(); DK.cntx_pop(); ND.cntx_pop();
      {? KARO.get() & KARO.STATUS='T' || _result:=1 ?}

   || _msg:='Błędny kontekst wywołania czynności %1.'@@['WYP_LWW_DAKC'];
      FUN.error(_msg);
      _mp.error(_msg);
      KARO.cntx_pop();
      return()
   ?};

   {? _result>0 | _mp.isMicro()
   || _mp.done()
   ?}
?};
KARO.cntx_pop();
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Opis dla czynności akceptacji wydania/zwrotu wyposażenia (WYP_LWW_DAKC)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_desc:='';
_keyRefs:=_mp.getRefs();
_in:=_mp.load(exec('kind_in','#b_port'));

_karo:=null();

:: jest rekord kluczowy to ustawiam odpowiednie KARO
{? obj_len(_keyRefs)>0
||
   {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];
      {? type_of(_kref)>0
      ||
         {? ref_name(_kref)=KARO.name()
         || _karo:=exec('FindAndGet','#table',KARO,_kref,,,null())
         ?}
      ?}
   !}
?};

:: jest parametr wejściowy KARO
{? _karo=null() & var_pres('KARO',_in)=type_of(null())
|| _karo:=_in.KARO
?};

{? _karo<>null()
|| _typ:=exec('FindAndGet','#table',KARO,_karo,,"TYP",'');
   _material:=exec('FindAndGet','#table',KARO,_karo,,"{? M=null() || MGRP().KOD || M().KTM ?}",'');
   _pracownik:=exec('FindAndGet','#table',KARO,_karo,,"P().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE",'');
   {? _typ='W'
   || _desc:='Zaakceptuj wydanie wyposażenia %1 pracownikowi %2'@@[_material,_pracownik]
   || _desc:='Zaakceptuj zwrot wyposażenia %1 od pracownika %2'@@[_material,_pracownik]
   ?}
|| _desc:='Zaakceptuj zapis obrotu wyposażeniem'@@
?};
_desc


\win_todo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Tworzy okienko akceptacji
::   WY: akronim okna
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
::ATR.MJS:='KARO';
::{? KARO.DK_C<>null() & ref_name(KARO.DK_C)<>DK_C.name() || DK_C.use(ref_name(KARO.DK_C)) ?};
::_atryb:=exec('czytadkc','mat_atr',KARO.DK_C,KARO.RDKC);
:: Podczytuje M_ATR
::{? _atryb>0
::|| KARO.M().M_ATR()
::?};

_red:=KARO.mk_edit('Akceptacja zapisu obrotu wyposażeniem %1'@[exec('KARO','#to_string')],,'#karo_dakc_'+(-KARO.TYP));
KARO.win_ewin(_red,,{? KARO.TYP='W' || 'DISP' || 'DISP_ZWR' ?});

_btn:=KARO.win_ebtn(_red,'text=%1,align=end,display=1'['A&kceptuj'@],
   "{? params_exec('karo_akceptuj','!wyp_lww_dakc',KARO.ref(),1,0) || 'key:F2' || '' ?}"
);
KARO.btn_eopt(_red,_btn,'default=1');
_btn:=KARO.win_ebtn(_red,'text=%1,align=end,display=1'['&Anuluj'@],"'key:Esc'");

_red


\karo_akceptuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Wywołuje odpowiednią funkcję akceptacji KARO w zależności czy jest to wydanie czy zwrot
::       Funkcja wywoływana z formuły głównej oraz z okna ToDo
::   WE: _a - KARO.ref()
::       _b - Czy zadawać pytania (0/1)
::       _c - Czy komunikaty wrzucać do KOMM (0/1)
::----------------------------------------------------------------------------------------------------------------------
_karo:=_a;
_ask:=_b;
_komm:=_c;

_result:=0;
::KOMM.init(250,,'Akceptacja wydań/zwrotów');
{? exec('blk_lock','#table','KARO',_karo,,,'Zapis obrotu wyposażeniem jest redagowany'@,,_komm)
|| KARO.cntx_psh();
   KARO.prefix();
   {? KARO.seek(_karo)
   || {? KARO.TYP='W'
      ||
::       Wydanie
         _result:=params_exec('karorw_akc','!wyp_lww_dakc',_ask,_komm)
      ||
::       Zwrot
         _result:=params_exec('karorr_akc','!wyp_lww_dakc',_ask,_komm)
      ?}
   ?};
   KARO.cntx_pop()
?};
exec('blk_unlock','#table','KARO',_karo);

_result


\action_karorw_accept
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Akcja akceptacji KARO z okna wertowania wydań
::   WY: STRING
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:='WYP_LWW_DAKC';
_args.UIDREF:=KARO.uidref();
_args.AKCJA:='AKCEPTUJ';
{? KARO.sel_size()>0
|| _args.GRUPA:='T'
?};
_args.CONTEXT:=obj_new('KARO','env_karo');
_args.CONTEXT.KARO:=KARO.ref();
_args.CONTEXT.env_karo:=params_get().env_karo;

_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'KARO',KARO.ref());

exec('mp_run','#b__box',_args);

KARO.cntx_psh();
{? VAR.TRYBRODZ
|| _stan:=params_get().env_karo.STANG;
   _mgrp:=_stan.MGRP;
   {? exec('reload_karms','wyp_head',P.ref(),0)
   || exec('uzu_c_karms','wyp_head',0)
   ?};
   _stan.blank(1);
   _stan.MGRP:=_mgrp;
   _stan.find_rec();
   grp_disp(_stan,params_get().env_karo.WERG,1)
|| _stan:=params_get().env_karo.STAN;
   _material:=_stan.M;
   {? exec('reload_karms','wyp_head',P.ref(),1)
   || exec('uzu_c_karms','wyp_head',1)
   ?};
   _stan.blank(1);
   _stan.M:=_material;
   _stan.find_rec();
   grp_disp(_stan,params_get().env_karo.WER,1)
?};
KARO.cntx_pop();
~~


\action_karorr_accept
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Akcja akceptacji KARO z okna wertowania zwrotów
::   WY: STRING
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:='WYP_LWW_DAKC';
_args.UIDREF:=KARO.uidref();
_args.AKCJA:='AKCEPTUJ';
{? KARO.sel_size()>0
|| _args.GRUPA:='T'
?};
_args.CONTEXT:=obj_new('KARO','env_karo');
_args.CONTEXT.KARO:=KARO.ref();
_args.CONTEXT.env_karo:=params_get().env_karo;

_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'KARO',KARO.ref());

exec('mp_run','#b__box',_args);

KARO.cntx_psh();
params_exec('karow_prfx','wyp_head',VAR.TRYBRODZ);
KARO.seek(ZKARO.KAROW);
grp_disp(KARO,'WER_R',0);
KARO.cntx_pop();
KARO.cntx_psh();
{? VAR.TRYBRODZ
|| _stan:=params_get().env_karo.STANG;
   _mgrp:=_stan.MGRP;
   {? exec('reload_karms','wyp_head',P.ref(),0)
   || exec('uzu_c_karms','wyp_head',0)
   ?};
   _stan.blank(1);
   _stan.MGRP:=_mgrp;
   _stan.find_rec();
   grp_disp(_stan,params_get().env_karo.WERG,0)
|| _stan:=params_get().env_karo.STAN;
   _material:=_stan.M;
   {? exec('reload_karms','wyp_head',P.ref(),1)
   || exec('uzu_c_karms','wyp_head',1)
   ?};
   _stan.blank(1);
   _stan.M:=_material;
   _stan.find_rec();
   grp_disp(_stan,params_get().env_karo.WER,0)
?};
KARO.cntx_pop();
~~


\karorw_wyc_gb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Grupa przed wycofaniem akceptacji pozycji wydania w KARO
::   WY: 1/0 - czy kontynuowac
::  OLD: \karorw_wyc_gb/wypkaro.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy wycofać akceptację zaznaczonych pozycji?'@)
||
:: w przypadku akcji grupowej przygotowanie obiektu komunikatow
   KOMM.init(,,'Wycofanie akceptacji pozycji w kartotece'@);
   1
|| 0
?}


\karorw_wyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wycofanie akceptacji KARO typ  W w oknie wg MGRP
::       Akcja wykonywana dla biezacego rekordu KARO
::  OLD: \karow_wyc/wypkaro.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

_grp:=KARO.sel_size();
{? _grp | FUN.ask('Czy wycofać akceptację pozycji?'@)
||
   {? KARO.STATUS='T'
   ||
::    czy sa rozliczenia
      {? ~exec('czy_rozl4pos','wyp_head')
      ||
::       wycofanie akceptacji pozycji (i zakończenia rejestracji)
         KARO.STATUS:='Z';
         KARO.KTO:=OPERATOR.USER;
         KARO.put();

         KARO.cntx_psh();
         {? VAR.TRYBRODZ
         || _stan:=params_get().env_karo.STANG;
            _mgrp:=_stan.MGRP;
            {? exec('reload_karms','wyp_head',P.ref(),0)
            || exec('uzu_c_karms','wyp_head',0)
            ?};
            _stan.blank(1);
            _stan.MGRP:=_mgrp;
            _stan.find_rec();
            grp_disp(_stan,params_get().env_karo.WERG,1)
         || _stan:=params_get().env_karo.STAN;
            _material:=_stan.M;
            {? exec('reload_karms','wyp_head',P.ref(),1)
            || exec('uzu_c_karms','wyp_head',1)
            ?};
            _stan.blank(1);
            _stan.M:=_material;
            _stan.find_rec();
            grp_disp(_stan,params_get().env_karo.WER,1)
         ?};
         KARO.cntx_pop();

         {? _grp
         || KOMM.add('Pozycja z dnia %1 na ilość %2 została odakceptowana.'@
                     [$KARO.DATA,form(KARO.IL,,KARO.M().DOKL)],38
            )
         ?}
      || {? _grp
         || KOMM.add('Pozycja z dnia %1 na ilość %2 nie odakceptowana, ponieważ posiada zarejestrowane rozliczenie.'@
                     [$KARO.DATA,form(KARO.IL,,KARO.M().DOKL)],81
            )
         || FUN.emsg('Nie można odakceptować ponieważ posiada zarejestrowane rozliczenie.'@)
         ?}
      ?}
   |? KARO.STATUS='D'
   || {? _grp
      || KOMM.add('Do pozycji z dnia %1 na ilość %2 wygenerowano już dokumenty magazynowe.'@
                  [$KARO.DATA,form(KARO.IL,,KARO.M().DOKL)],81
         )
      || FUN.info('Dla pozycji wygenerowano już dokumenty magazynowe.\nOperacja niemożliwa.'@)
      ?}
   ||
      {? _grp
      || KOMM.add('Pozycja z dnia %1 na ilość %2 nie jest zaakceptowana.'@
                  [$KARO.DATA,form(KARO.IL,,KARO.M().DOKL)],81
         )
      || FUN.info('Pozycja nie jest zaakceptowana.'@)
      ?}
   ?}
?};
~~


\karorw_wyc_ga
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Grupa po wycofaniu akceptacji pozycji wydania w KARO
::  OLD: \karow_wyc_ga/wypkaro.fml
::----------------------------------------------------------------------------------------------------------------------
:: Wyswietlenie rezultatow akcji grupowej
KOMM.select();
~~


\karorw_akc_gb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Grupa przed akceptacją pozycji wydania w KARO
::   WY: 1/0 - czy kontynuowac
::  OLD: \karow_akc_gb/wypkaro.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy zaakceptować zaznaczone pozycje?'@)
||
:: w przypadku akcji grupowej przygotowanie obiektu komunikatow i danych do kontroli ilosci
   KOMM.init(,,'Akceptacja pozycji w kartotece'@);
   1
|| 0
?}


\karorw_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Akceptacja KARO typ  W w oknie wg MGRP
::       Akcja wykonywana dla biezacego rekordu KARO
::   WE: _a - Czy zadawać pytania (0/1)
::       _b - Czy komunikaty wrzucać do KOMM (0/1)
::   WY: 0 / 1
::  OLD: \karorw_akc/wypkaro.fml
::----------------------------------------------------------------------------------------------------------------------
_ask:=_a;
_komm:=_b;

_result:=0;
::formula ustawiajaca akceptacje pozycji
_setakc:="
   KARO.STATUS:='T';
   KARO.KTO:=OPERATOR.USER;
   KARO.put()
";
{? ~_ask | FUN.ask('Czy zaakceptować pozycję?'@)
||
   {? KARO.STATUS='Z'
   ||
::    dla tybu zwiazanego z pracownikiem rozbudowana kontrola dla trybu z kontrahentem tylko czesc pol
      {? (KARO.M<>null()) & ((KARO.M().MGRP=KARO.MGRP) | (VAR.TRYBPRAC=0))
      ||
         _srok:=1;
         {? KARO.M().M_ATR<>null
         || _srsr:=exec('atr_get_srsr','mat_atr',KARO.M().M_ATR);
            _srok:={? _srsr<> null()
                   || exec('chk_srsr','wyp_head',_srsr)
                   || 1
                   ?}
         ?};
::       kontrola ilosci tylko gdy M.MGRP<>null()
         {? _srok
         ||
            {? KARO.M().MGRP<>null() & (VAR.TRYBPRAC=1)
            ||
::          sprawdzenie czy nie przekroczy normatywow
               exec('prep_ctril','wyp_head',KARO.P);
               _ctril:=exec('find_4_ctril','wyp_head',KARO.MGRP);
               _max:=exec('max_il_ctril','wyp_head',_ctril,KARO.MGRP().CTRLIL,1);
               _il:={? type_of(_max) || {? _max<0 || 0 || _max ?} || 0 ?};
::          czy mozna zaakceptowac bez katroli
               _ok:=(_max=~~) | (exec('get','#params',700510)='N');
               {? ~_ok || _ok:=_il>=KARO.IL ?};
               {? _ok
               ||
::             akceptacja pozycji
                  _setakc();
                  _result:=1
               ||
::             opracowanie komunikatu zwracanego w przypadku niepowodzenia
                  _kom:='';
::             sprawdzenie czy nie przekracza normatywu pracownika
                  _pr:={? (_ctril<>2) & (_ctril<>0)
                       || exec('max_il_ctril','wyp_head',1,KARO.MGRP().CTRLIL)
                       || 0
                       ?};
::             jezeli ma byc kontrolowany normatyw osoby to sprawdzenie
                  {? KARO.MGRP().CTRLIL='O'
                  || _os:={? (_ctril<>1) & (_ctril<>0)
                           || exec('max_il_ctril','wyp_head',2,KARO.MGRP().CTRLIL)
                           || 0
                           ?};
                     {? _os<KARO.IL
                     || _kom:={? _pr<KARO.IL || 'przekroczony normatyw pracownika i osoby'@ || 'przekroczony normatyw osoby'@ ?}
                     ?}
                  || _kom:={? _pr<KARO.IL || 'przekroczony normatyw pracownika'@ || '' ?}
                  ?};
                  {? _komm
                  || KOMM.add('Pozycja z dnia %1 na ilość %2 nie zaakceptowana. Przyczyna: %3.'@
                              [$KARO.DATA,form(KARO.IL,,KARO.M().DOKL),_kom],81
                     )
                  || FUN.emsg('Nie można zaakceptować.\nPrzyczyna: %1.'@[_kom])
                  ?};
                  exec('drop_ctril','wyp_head')
               ?}
            ||
::          akceptacja bez kontroli ilosci bo pozycja nie dotyczy rodzaju
               _setakc();
               _result:=1
            ?}
         ?}
      ||
         {? _komm
         || KOMM.add('Pozycja z dnia %1 na ilość %2 nie zaakceptowana, '
                     'ponieważ nie podano na niej materiału należącego do danego rodzaju wyposażenia.'@
                     [$KARO.DATA,form(KARO.IL,,KARO.M().DOKL)],81
            )
         || FUN.emsg('Nie można zaakceptować ponieważ nie podano materiału należącego do danego rodzaju wyposażenia.'@)
         ?}
      ?}
   |? KARO.STATUS='D'
   ||
      {? _komm
      || KOMM.add('Dla pozycji z dnia %1 na ilość %2 wygenerowano już dokumenty magazynowe.'@
                  [$KARO.DATA,form(KARO.IL,,KARO.M().DOKL)],81
         )
      || FUN.info('Dla pozycji wygenerowano już dokumenty magazynowe.\nOperacja niemożliwa.'@)
      ?}
   |? KARO.STATUS='N'
   ||
      {? _komm
      || KOMM.add('Dla pozycji z dnia %1 na ilość %2 nie zakończono rejestrowania.'@
                  [$KARO.DATA,form(KARO.IL,,KARO.M().DOKL)],81
         )
      || FUN.info('Nie zakończono rejestrowania pozycji.'@)
      ?}
   ||
      {? _komm
      || KOMM.add('Pozycja z dnia %1 na ilość %2 już zaakceptowana.'@
                  [$KARO.DATA,form(KARO.IL,,KARO.M().DOKL)],110
         )
      || FUN.info('Pozycja jest już zaakceptowana.'@)
      ?};
      _result:=1
   ?}
?};
_result


\karorw_akc_ga
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Grupa po akceptacji pozycji wydania w KARO
::  OLD: \karorw_akc_ga/wypkaro.fml
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
~~


\karorr_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Akceptacja KARO typ  R/Z w oknie wg MGRP
::   WE: _a - Czy zadawać pytania (0/1)
::       _b - Czy komunikaty wrzucać do KOMM (0/1)
::   WY: 0 / 1
::  OLD: \karor_akc/wypkaro.fml
::----------------------------------------------------------------------------------------------------------------------
_ask:=_a;
_komm:=_b;

_result:=0;
{? KARO.STATUS='Z'
||
   {? ~_ask | FUN.ask('Czy zaakceptować pozycję?'@)
   ||
::    obliczenie dopuszczalnej ilosci do zwrotu
      exec('set_r_bord_cntp','wyp_head');
::    w ZKARO.IL dopusczalna ilosc jaka moze byc zwrocona
      {? KARO.IL<=ZKARO.IL
      ||
::       akceptacja pozycji
         KARO.STATUS:='T';
::         KARO.DATA:=date();
         KARO.KTO:=OPERATOR.USER;
         {? KARO.put() || _result:=1 ?};
::       ponowne przeliczenie danych dla pozycji wydania
         exec('set_r_bord_cntp','wyp_head');
         params_exec('stan4pos','wyp_head')
      || _msg:='Akceptacja tej pozycji spowodowałaby zwrócenie większej ilości niż pozostała z tego wydania.'@;
         {? _komm
         || KOMM.add(_msg,81)
         || FUN.emsg(_msg)
         ?}
      ?}
   ?}

|? KARO.STATUS='D'
|| _msg:='Dla pozycji wygenerowano już dokumenty magazynowe.\nOperacja niemożliwa.'@;
   {? _komm
   || KOMM.add(_msg,81)
   || FUN.info(_msg)
   ?}

|? KARO.STATUS='N'
|| _msg:='Nie zakończono rejestracji pozycji.'@;
   {? _komm
   || KOMM.add(_msg,81)
   || FUN.info(_msg)
   ?}

|| _msg:='Pozycja jest już zaakceptowana'@;
   {? _komm
   || KOMM.add(_msg,110)
   || FUN.info(_msg)
   ?};
   _result:=1
?};
_result


\karorr_wyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wycofanie akceptacji KARO typ  R/Z w oknie wg MGRP
::  OLD: \karor_wyc/wypkaro.fml
::----------------------------------------------------------------------------------------------------------------------
params_set(params_get());

{? KARO.STATUS='T'
||
   {? FUN.ask('Czy wycofać akceptację pozycji?'@)
   ||
      KARO.STATUS:='Z';
::      KARO.DATA:=date(0,0,0);
      KARO.KTO:=OPERATOR.USER;
      KARO.put();
::    ponowne przeliczenie danych dla pozycji wydania
      exec('set_r_bord_cntp','wyp_head');

      KARO.cntx_psh();
      params_exec('karow_prfx','wyp_head',VAR.TRYBRODZ);
      KARO.seek(ZKARO.KAROW);
      grp_disp(KARO,'WER_R',0);
      KARO.cntx_pop();
      KARO.cntx_psh();
      {? VAR.TRYBRODZ
      || _stan:=params_get().env_karo.STANG;
         _mgrp:=_stan.MGRP;
         {? exec('reload_karms','wyp_head',P.ref(),0)
         || exec('uzu_c_karms','wyp_head',0)
         ?};
         _stan.blank(1);
         _stan.MGRP:=_mgrp;
         _stan.find_rec();
         grp_disp(_stan,params_get().env_karo.WERG,0)
      || _stan:=params_get().env_karo.STAN;
         _material:=_stan.M;
         {? exec('reload_karms','wyp_head',P.ref(),1)
         || exec('uzu_c_karms','wyp_head',1)
         ?};
         _stan.blank(1);
         _stan.M:=_material;
         _stan.find_rec();
         grp_disp(_stan,params_get().env_karo.WER,0)
      ?};
      KARO.cntx_pop();
      ~~
   ?}
|? KARO.STATUS='D'
|| FUN.info('Dla pozycji wygenerowano już dokumenty magazynowe.\nOperacja niemożliwa.'@)
|| FUN.info('Pozycja jest już odakceptowana.'@)
?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 c1b335238b36db15f60508ab5b68d55c82d5f6ab4443691c02798e9cfad4e4a5509ff6456698ccb581901b0b8851031456083bd41713e6b49a7fa71ecead3f96c8ca1b27b11f668f2e2a3e1f3188792ca9bb1c73139c894c9a4f7ffada2e3ae3031514ec418ebec9913176bee274491721f21d98771b847c3a9091332f0b1da9
