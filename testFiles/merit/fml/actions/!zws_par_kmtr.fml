:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_kmtr.fml
:: Utworzony: 02.03.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Kartoteka materiałów i usług
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# kind=WY,   symbol=M,   type=_M,    name=Materiał/Usługa,   required=N
::# kind=WY,   symbol=R,   type=STRING,    name=Wyrób/Surowiec/Półfabrykat/Zewnętrzny,   required=N

:: UPRAWNIENIA
::# permissions=ODDZ

_out:=params_get().out;
_mp:=params_get().mp;
_context:=params_get().context;

:: Niejawny parametr
:: POMOC.MGR = null        - jeśli określamy przynależność do grupy w trakcie dodawania, poprawiania indeksu
::           = MGR.ref()   - jeśli dodawany, poprawiany indeks ma należeć do wskazanej grupy

:: Podczytanie INFO.KRAJ - kraj waluty opodatkowania
exec('czytaj','#stalesys',,INFO,'KRAJ');
{? INFO.KRAJ=null() || FUN.info('Nie wypełniono kraju w słownikach systemowych.'@); return() ?};
:: Podczytanie parametrów oddziału
KSTE.prefix; KSTE.first();

:: __M1 - wartość pola przed redakcją
VAR_DEL.delete('__M1');
__M1:=obj_new('PKWIU');

:: Obsługa Dołącz w webservice
{? _mp.akcja()='DołączMWA'
|| _wsenv:=exec('wsenv','#mwapi');
   exec('m_dol_mwa','!zws_par_kmtr',_context.BUFFERS.M);
   {? _wsenv.IDADD<>''
   || M.cntx_psh();
      M.index('IDADD');
      M.prefix(_wsenv.IDADD);
      {? M.first()
      || _out.M:=M.ref();
         _out.R:=M.R;
         _mp.save(,_out)
      ?};
      M.cntx_pop();
      _mp.done()
   ?}
:: Obsługa Popraw w webservice
|? _mp.akcja()='PoprawMWA'
|| exec('m_pop_mwa','!zws_par_kmtr',_context.BUFFERS.M)
:: Obsługa Dołącz, Popraw, Usuń poza procesem
|? _mp.isMicro()
|| _akcja:=_mp.akcja();
   {? _akcja='Dołącz' || exec('m_dol','!zws_par_kmtr')
   |? _akcja='Popraw' || exec('m_pop','!zws_par_kmtr')
   |? _akcja='Kopiuj' || exec('mat_powiel','!zws_par_kmtr')
   |? _akcja='Mobil'  || exec('add_ktm','!zws_par_kmtr')
   ?}
:: Obsługa Dołącz/Kopiuj w procesie
|| _krefs:=_mp.getRefs();
   {? var_pres('[1]',_krefs)=type_of(~~)
:: Standardowa obsługa - materiał będzie dodawany
   || {? ~_mp.pathArea()
      || _choice:=FUN.choice('Co chcesz dołączyć?'@,,'Materiał'@,'Usługę'@);
         POMOC.RODZ:={? _choice=1 || 'T' |? _choice=2 || 'U' || '' ?}
      ?};
      {? POMOC.RODZ='T' | POMOC.RODZ='U'
      || obj_del(_krefs);
         _mp.trigRef('M');
         _akcja:=_mp.akcja();
         {? _akcja='Dołącz' | _akcja='' || exec('m_dol','!zws_par_kmtr')
         |? _akcja='Kopiuj' || exec('mat_powiel','!zws_par_kmtr')
         ?};
         _krefs:=_mp.getRefs();
         {? var_pres('[1]',_krefs)<>type_of(~~)
::       Jest rekord kluczowy tzn., że w exec('m_dol','!zws_par_kmtr') dodano materiał/usługę
         || M.cntx_psh();
            M.prefix();
            {? M.seek(_krefs[1])
            || _out.M:=M.ref();
               _out.R:=M.R;
               _mp.save(,_out)
            ?};
            M.cntx_pop();
            _mp.done()
         ?}
      ?}
:: Obsługa niestandardowa - materiał już jest a czynność nie została zakończona z niewyjaśnionych przyczyn
   || M.cntx_psh();
      M.prefix();
      {? M.seek(_krefs[1])
      || _mp.done()
      || FUN.info('Nie znaleziono materiału/usługi.\nZadanie zostanie zakończone.'@);
         _mp.done()
      ?};
      M.cntx_pop()
   ?}
?};
VAR_DEL.delete('__M1')


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_krefs:=_mp.getRefs();

{? var_pres('[1]',_krefs)<>type_of(~~)
|| M.cntx_psh();
   M.prefix();
   {? M.seek(_krefs[1])
   || {? M.RODZ='T'
      || 'Zredaguj materiał: %1 - %2'@@[M.KTM,M.N]
      || 'Zredaguj usługę: %1 - %2'@@[M.KTM,M.N]
      ?}
   || 'Nie znaleziono materiału/usługi'@@
   ?};
   M.cntx_pop()
|| 'Dodaj materiał/usługę'@@
?}


\m_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Materiał/Usługa - Dołącz
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='ZWS_PAR_KMTR';
_params.AKCJA:='Dołącz';
_params.PROC_START:='T';

exec('mp_run','#b__box',_params)


\m_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Materiał/Usługa - Popraw
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='ZWS_PAR_KMTR';
_params.AKCJA:='Popraw';

exec('mp_run','#b__box',_params)


\m_kopiuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Materiał/Usługa - Kopiuj
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='ZWS_PAR_KMTR';
_params.AKCJA:='Kopiuj';
_params.PROC_START:='T';

exec('mp_run','#b__box',_params)


\m_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Obsługa dołącz materiał/usługę
::----------------------------------------------------------------------------------------------------------------------
:: Ustawienie okna redakcji
JM.win_dict('SLO');
exec('m_win_edit','material');
M.efld_opt(M.win_edit('?'),'mark=0',,'WS2');
POMOC.RODZTR:=null;
M.blank();
VAR.DEFSTATS:=null();
exec('ustawJMwym','jm');
exec('pr_dolm','!zws_par_kmtr');
_valid:="_result:=exec('chk_m','!zws_par_kmtr');
         {? _result=''
         || _result:=Plugin.run('M_VALID_001','ADD',0)
         ?};
         _result";
M.bl_file('RYS',1,'');
{? M.edit(_valid)
|| _bl_file:=M.bl_file('RYS');
   {? (POMOC.RODZ='T' & POMOC.M_ZAKR_T='N') | (POMOC.RODZ='U' & POMOC.M_ZAKR_U='N')
   || M.A:='N'
   ?};
   do();
   {? M.add() || exec('stats_akt','!zws_par_kmtr',M.ref(),VAR.DEFSTATS) ?};
   {? M.bl_file('RYS')<>''
   || M.bl_put('RYS',M.bl_file('RYS'));
      M.bl_file('RYS',1,'')
   ?};
   M.put();
   {? M.J2<>null() || exec('act_mjm','jm',M.ref(),M.J2,M.WS2,null()) ?};
   _odp:=exec('domM_MGRP','!zws_par_kmtr');
   exec('po_dolm','!zws_par_kmtr');
   exec('abcxyz_m_dod','!zws_par_kmtr',M.ref(),M_DOD.ABC,M_DOD.XYZ);
   end();
   {? _odp<>''
   || FUN.info('W schemacie atrybutów dla materiału domyślnego dla tego '
               'rodzaju wyposażenia brakuje następujących: \n%1'
               '.\nTen materiał nie może być domyślnym dla tego rodzaju wyposażenia.'
               '\nUsunięto zapis o domyślnym materiale.'@[_odp])
   ?}
?}


\m_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Obsługa popraw materiał/usługę
::----------------------------------------------------------------------------------------------------------------------
:: Ustawienie okna redakcji
JM.win_dict('SLO');
exec('m_win_edit','material');
M.efld_opt(M.win_edit('?'),{? M.J2<>null() || 'mark=1' || 'mark=0' ?},,'WS2');
D_HELP.POPM:=(M.count()-exec('ileprzyp','!zws_par_kmtr',M.ref())<=1);
exec('pr_popm','!zws_par_kmtr');
_valid:="_result:=exec('chk_m','!zws_par_kmtr');
         {? _result=''
         || _result:=Plugin.run('M_VALID_001','MOD',0)
         ?};
         _result";
M.memo_get(,'OPIS');
M.bl_file('RYS',1,'');
VAR_DEL.delete('M_ABSTORE_VALUE_PREV_B2B','M_ABSTORE_VALUE_PREV_B2C');
M_ABSTORE_VALUE_PREV_B2B:=M.ABSTORE;
M_ABSTORE_VALUE_PREV_B2C:=M.ABSTOREC;
_jm2:=M.J2;
{? exec('matrzpar','mat_atr',M.M_ATR) & M.IDMOB='D' & exec('tte_lic','tte')='T'
|| M.efld_opt(M.win_edit('?'),'enable=1',,'IDZP')
|| M.efld_opt(M.win_edit('?'),'enable=0',,'IDZP')
?};
{? ~exec('ctrlDok','!zws_par_kmtr',M.ref())
|| M.efld_opt(M.win_edit('?'),'editable=0',,'J2')
|| M.efld_opt(M.win_edit('?'),'editable=1',,'J2')
?};
VAR.DEFSTATS:=exec('statsM','statexam',M.ref());
exec('ustawJMwym','jm');
{? M.edit(_valid)
|| _bl_file:=M.bl_file('RYS');
   do();
   VAR_DEL.delete('M_ABSTORE_VALUE_PREV_B2B','M_ABSTORE_VALUE_PREV_B2C');
   {? M.put() || exec('stats_akt','!zws_par_kmtr',M.ref(),VAR.DEFSTATS) ?};
   {? M.bl_file('RYS')<>''
   || M.bl_put('RYS',M.bl_file('RYS'));
      M.bl_file('RYS',1,'')
   ?};
   M.memo_put(,'OPIS');
   {? M.J2<>null() | _jm2<>null() || exec('act_mjm','jm',M.ref(),M.J2,M.WS2,_jm2) ?};
   _odp:=exec('domM_MGRP','!zws_par_kmtr');
   exec('po_popm','!zws_par_kmtr');
   exec('abcxyz_m_dod','!zws_par_kmtr',M.ref(),M_DOD.ABC,M_DOD.XYZ);
   end();
   {? _odp<>''
   || FUN.info('W schemacie atrybutów dla materiału domyślnego dla tego '
               'rodzaju wyposażenia brakuje następujących: \n%1'
               '.\nTen materiał nie może być domyślnym dla tego rodzaju wyposażenia.'
               '\nUsunięto zapis o domyślnym materiale.'@[_odp])
   ?}
?};
D_HELP.POPM:=0;
M.efld_opt(M.win_edit('?'),'enable=1',,'IDZP');
M.efld_opt(M.win_edit('?'),'editable=1',,'J2');
~~


\be_m_ktm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2005]
:: OPIS: przed redakcja pola ktm
::  OLD: \be_m_ktm/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
{? -(1+menu_txt())='d' | VAR.M_POWIEL || D_HELP.POPM:=2 ?};
{? M.M_ATR_B<>null() & M.M_ATR_B().ADD=2
|| 0
|| ~(-(1+menu_txt())='p' & (+menu_txt())=6 & VAR.M_POWIEL=0 & D_HELP.POPM=0)
?}


\po_ktm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po redakcji pola indeks materialowy - sprawdzamy czy pole wypelnione i ewentualnie pozwalamy wrocic do budowy
::  OLD: \po_ktm/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
_ind_bud:={? M.M_ATR_B<>null || {? M.M_ATR_B().ADD=2 || 'T' || 'P' ?} || 'N' ?};
_wzm:={? _ind_bud='P' & M.M_ATR_B<>null & (M.M_ATR_B().ADD%*2)=0 || exec('readwzbs','!zws_par_kmtr','KTM','WZ') || '' ?};
{? fld()='' & _ind_bud='P' & M.M_ATR_B<>null
|| _popm:=D_HELP.POPM;
   D_HELP.POPM:=0;
   M.KTM:=_wzm;
   D_HELP.POPM:=_popm
?};
{? fld()='' & _ind_bud='N'
|| FUN.info('Niewypełnione pole Indeks.'@);
   0
|| {? M.CZY_CON='T' & M.C_SYM='' || M.C_SYM:=M.KTM ?};
   {? M.KTM<>'' & M.M_ATR_B<>null & M.KTM<>_wzm || __popktm:=1 || __popktm:=0 ?};
   win_disp;
   1
?}


\readwzbs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: odczyt wzorca budowy strukturalnej
::       struktura [](od_nr-do_nr)ss
::   WE: [_a] - akronim pola
::       [_b] - akronim pola wzorca kodu/nazwy
::       [_c] - wartosc do porownania
::   WY: wartosc wg kodu wzorca
::  OLD: \readwzbs/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>2 || _a:='' ?} || _a:='' ?};
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
{? _>=3 || {? type_of(_c)<>2 || _c:='' ?} || _c:='' ?};

_wyn:='';

_xxx:=obj_new(15); {! _i..15 |! _xxx[_i]:='' !};
_kod:=($('M.'+_a))();

{? D_HELP.POPM=1
|| _refm:=M.ref();
   M.cntx_psh();
   M.clear();
   {? M.seek(_refm)
   || _kod:=($('M.'+_a))();
      {! _i..10 |! _xxx[_i]:=($('M.WAR'+form(_i,-2,0,'99')))() !};
      _xxx[11]:=$M.M_ATR_B;
      _xxx[12]:=M.MGR;
      _xxx[13]:=M.MGRP;
      _xxx[14]:=M.MGAT;
      _xxx[15]:=M.MODM
   ?};
   M.cntx_pop()
?};

_wz:=($('M.M_ATR_B().'+_b))();
_autonr:=M.M_ATR_B().AUTONR;
_autodl:=M.M_ATR_B().AUTODL;
_czysp:=_b='WZN';

_czyzm:=_xxx[11]<>($M.M_ATR_B) | _xxx[12]<>M.MGR | _xxx[13]<>M.MGRP | _xxx[14]<>M.MGAT | _xxx[15]<>M.MODM;
{? ~_czyzm
|| _i:=0;
   {!
   |? _i+=1;
      _czyzm:=_xxx[_i]<>($('M.WAR'+form(_i,-2,0,'99')))();
      ~_czyzm & _i<10
   !}
?};
{? _czyzm
|| {!
   |? _ch:=1+_wz;
      _slotr:=0;
      {? _ch='['
      || _wz:=1-_wz;
         _nr:=_wz*']';
         _str:=((_nr-1)+_wz);
         {? _str+1='*' || _slotr:=1; _str-=1 ?};
         _war:='M.WAR'+form(#_str,-2,0,'99');
         _wz:=_nr-_wz;
::       ograniczenie kodu
         _ch:=1+_wz;
         {? _ch='('
         || _wz:=1-_wz;
            _nr:=_wz*')';
            _buf:=(_nr-1)+_wz;
            _wz:=_nr-_wz;
            _nr:=_buf*'-';
            _odn:=#((_nr-1)+_buf);
            _don:=#(_nr-_buf)
         || _odn:=0;
            _don:=0
         ?};
         _buf:=($_war)();
         {? _slotr & ($('M.M_ATR_B().SL_'+form(#_str,-2,0,'99')+'().TYP'))()='S'
         || _refslu:=($('M.M_ATR_B().SL_'+form(#_str,-2,0,'99')+'().SLU'))();
            _buf:=exec('FindInSet','#table','SLO','SL',_buf,_refslu,"@.SLO.TR",1,,_buf)
         ?};
         {? _odn
         || _wyn+=(1+_don-_odn)+((_odn-1)-_buf)+{? _czysp || ' ' || '' ?}
         || _wyn+=_buf+{? _czysp || ' ' || '' ?}
         ?}
      |? _ch='s'
      || _wz:=1-_wz;
         _nr:=_wz*'s';
         _war:=((_nr-1)+_wz)+{? _czysp || ' ' || '' ?};
         _wyn+=_war;
         _wz:=_nr-_wz
      |? _ch='M'
      || _slo:=_ch;
         _wz:=1-_wz;
         {! // 1..3
         |! _slo+=(1+_wz);
            _wz:=1-_wz
         !};
         _slo:={? _slo='MGRU' || 'MGR' || _slo ?};
         _war:={? _czysp
               || ($('M.'+_slo+'().NAZ'))()+' '
               || ($('M.'+_slo+'().KOD'))()
               ?};
         _wyn+=_war
      || _wz:=1-_wz
      ?};
      +_wz
   !};

:: autonumeracja
   {? _wyn<>'' & _autonr & _b<>'WZN'
   || {?  _c<>'' & (_c-_autodl)=_wyn
      || _wyn:=_c
      || _dl:=+_wyn;
         _new:=0;
         M.cntx_psh();
         M.index('MATKTM');
         M.prefix(_wyn);
         {? _autonr=2 & M.last()
         ||
::          bez uzupelniania luk
            {!
            |? _nr:=(_dl-M.KTM);
               {? (+_nr)=_autodl & exec('allDigit','#valid',_nr)
               || _new:=#_nr;
                  0
               || M.prev()
               ?}
            !}
         |? _autonr=1 & M.first()
         ||
::          z uzupelnianiem luk
            _buf:=0;
            {!
            |? _nr:=(_dl-M.KTM);
               {? (+_nr)=_autodl & exec('allDigit','#valid',_nr)
               || _new:=#_nr;
                  {? _new-_buf>1
                  || _new:=_buf;
                     0
                  || _buf:=_new;
                     M.next()
                  ?}
               || M.next()
               ?}
            !}
         ?};
         M.cntx_pop();
         _wyn:=_wyn+form(_new+1,-_autodl,0,'99')
      ?}
   ?}
|| _wyn:=_kod
?};
{? _b<>'WZN' || _wyn:=~-_wyn ?};
obj_del(_xxx);
_wyn


\ae_mn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Po redakcji pola M.N
::  OLD: \ae_mn/zam_pub.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.M_ATR_B<>null & M.M_ATR_B().WZN<>'' & form(M.N)=''
|| M.N:=exec('readwzbs','!zws_par_kmtr','N','WZN')
?};
{? M.CZY_CON='T' & M.C_OPIS='' || M.C_OPIS:=M.N ?};
1


\bl_jm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Wartosc poczatkowa pola M.J
::  OLD: \bl_jm/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.RODZ='U'
|| _par:=exec('get','#params',4045,2,OPERATOR.USER)
|| _par:=exec('get','#params',4042,2,OPERATOR.USER)
?};
JM.cntx_psh();
JM.index('KOD');
JM.prefix(_par,);
{? JM.first()
|| _jm:=JM.ref()
|| _jm:=null()
?};
JM.cntx_pop();
_jm


\bd_jm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem M.J
::  OLD: \bd_jm/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
''


\be_jm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed redakcja pola jednostka
::   WY: czy mozna edytowac pole
::  OLD: \be_jm/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
:: przed dolacz HELP.ADD:='T'
{? HELP.ADD<>'T'
||
   M.cntx_psh();
   {? M.count<=1
   || _wyn:=1
   ?};
   M.cntx_pop()
||
   _wyn:=1
?};
{? _wyn & cur_afld()='J' & M.J2<>null() || _wyn:=0 ?};
_wyn


\bl_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Wartosc poczatkowa pola M.VAT
::  OLD: \bl_vat/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
_par:=exec('get','#params',4043,2,OPERATOR.USER);
_slu:=exec('FindInSet','#table','SLU','NAZ','~STAWKI VAT '+KSTE.KRAJ().KOD);
{? _slu<>null()
|| SLO.index('SL');
   SLO.prefix(_slu,_par,);
   {? SLO.first()
   || SLO.ref()
   || null()
   ?}
|| null()
?}


\bl_t_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Wartość początkowa pól: MGR.RODZ, M.RODZ
::  OLD: \bl_t_u/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? -(6+menu_txt())='szukaj' || '' || POMOC.RODZ ?}


\bl_trrodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.42]
:: OPIS: Wartosc poczatkowa M.TR_RODZ
::----------------------------------------------------------------------------------------------------------------------
POMOC.RODZTR


\bl_grupa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: POMOC.MGR
::  OLD: \bl_grupa/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
HELP.ADD:='T';
HELP.MGR:=null;
{? POMOC.MGR<>null()
|| POMOC.MGR
|| {? POMOC.RODZ='U'
   || _par:=exec('get','#params',4044,2,OPERATOR.USER)
   || _par:=exec('get','#params',4041,2,OPERATOR.USER)
   ?};
   MGR.cntx_psh();
   MGR.index('MGR');
   MGR.prefix(_par,);
   {? MGR.first()
   || _mgr:=MGR.ref()
   || _mgr:=null()
   ?};
   MGR.cntx_pop();
   _mgr
?}


\bl_mgrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Wartość początkowa dla pola M.MGRP
::----------------------------------------------------------------------------------------------------------------------
POMOC.MGRP


\bd_grupa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: przed wyswietleniem M.MGR
::  OLD: \bd_grupa/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? (cur_kwin='s_sel' | cur_kwin='s_dict' | cur_kwin='s_SEL')
|| {? -cur_nfld()='kolor'
   || _wyn:=M.MGR().KOLOR+','+MGR.KOLOR
   || _wyn:=''
   ?}
|? exec('be_grupa','!zws_par_kmtr')=0
|| _wyn:=exec('findfnrd','color')
?};
_wyn


\be_grupa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: jezeli zmienna grupa ma wartosc to nie mozna edytowac tego pola
::       formula przed redakcja dla pola M.MGR
::  OLD: \be_grupa/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=POMOC.MGR=null;
{? _wyn=1
||
   {? -(1+menu_txt)='p' & (2+menu_txt)<>'Pr'
   ||
      _ed:=exec('get','#params',600010,2);
      {? _ed='N'
      ||
         M.cntx_psh();
         {? (M.count-exec('ileprzyp','!zws_par_kmtr',M.ref()))>1
         || _wyn:=0
         ?};
         M.cntx_pop()
      ?}
   ?}
?};
{? M.M_ATR_B<>null
|| _rozm:=exec('rozm_atr','mat_atr',M.M_ATR_B);
   {! _i:=1.._rozm |! ($('POM.SYM'+form(_i,-2,0,'99')))():=($('M.M_ATR_B().SL_'+form(_i,-2,0,'99')+'().NA'))() !}
?};
_wyn


\ileprzyp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: sprawdza ilosc wprowadzonych przelicznikow dla danego indeksu
::   WE: _a - M.ref
::   WY: ilosc przelicznikow
::  OLD: \ileprzyp/przelicz.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
M.cntx_psh();
MJM.cntx_psh();
MJM.index('JM');
MJM.prefix(_a);
_wyn:=MJM.size();
M.cntx_pop();
MJM.cntx_pop();
_wyn


\ae_grupa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po readkcji pola grupa mat. dla tabeli M - materialy
::   WY: czy mozna opuscic redakcje pola
::  OLD: \ae_grupa/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_ind_bud:={? M.M_ATR_B<>null || {? M.M_ATR_B().ADD=2 || 'T' || 'P' ?} || 'N' ?};
{? fld()=0
|| {? M.M_ATR_B().MGR<>null() & M.MGR=null()
   || FUN.info('W atrybutach ustalono wymaganą grupę materiałową.'@);
      M.MGR:=M.M_ATR_B().MGR
   || _wyn:=1
   ?}
|? M.RODZ<>M.MGR().RODZ
|| FUN.info({? M.RODZ='T'
            || 'Dla indeksu materiałowego'@+'\n'
            || 'Dla indeksu usługowego'@+'\n'
            ?}+{? M.RODZ='T' || 'należy podać grupę materiałową.'@ || 'należy podać grupę usługową.'@ ?});
   M.MGR:=null()
|| {? M.MGR<>M.MGRP().MGR & M.MGRP<>null
   || _msg:='Zmiana grupy wyzeruje: podgrupę'@;
      {? exec('get_par','#parametr',142)<>'N' || _msg+=', '+'gatunek'@ ?};
      {? exec('get_par','#parametr',143)<>'N' || _msg+=', '+'odmianę'@ ?};
      _msg+='. '+'Kontynuować?'@;
      {? FUN.ask(_msg)
      || M.MGRP:=null;
         {? exec('get_par','#parametr',142)<>'N' || ZMIENNE.MGAT:=''; M.MGAT:=null() ?};
         {? exec('get_par','#parametr',143)<>'N' || ZMIENNE.MODM:=''; M.MODM:=null() ?};
         _wyn:=1
      ?}
   || _wyn:=1
   ?}
?};
:: zabawy z dokladnosciami
_zmiana:=HELP.MGR=null() & M.MGR<>null | HELP.MGR<>M.MGR;
{? HELP.MGR=null & M.MGR<>null
|| _chdokl:={? M.J<>null() & M.J().DOKL>=0 & M.DOKL=M.J().DOKL & M.J().DOKL<>M.MGR().DOKL
            || FUN.ask('Dokładność ilości na grupie materiałowej jest inna niż na definicji jednostki miary.\n\n'
                       'Czy zmienić dokładność na dokładność z grupy materiałowej?'@)
            || 1
            ?};
   {? _chdokl || M.DOKL:=M.MGR().DOKL ?};
   M.DOKL_C:=M.MGR().DOKL_C;
   M.DOKL_S:=M.MGR().DOKL_S;
   M.DOKL_Z:=M.MGR().DOKL_Z;
   HELP.MGR:=M.MGR;
   M.PR_N:=M.MGR().PR_N;
   M.PR_M:=M.MGR().PR_M
|? HELP.MGR<>M.MGR
 & (M.DOKL<>M.MGR().DOKL | M.DOKL_C<>M.MGR().DOKL_C | M.DOKL_S<>M.MGR().DOKL_S | M.DOKL_Z<>M.MGR().DOKL_Z)
 & ({? M.J<>null() & M.J().DOKL>=0 & M.J().DOKL=M.DOKL
    || {? FUN.ask('Zmieniono grupę materiałową.\nCzy zmienić dokładności ceny materiału na dokładność z grupy?'@)
       || _opc:=3
       || _opc:=0
       ?}
    || _opc:=FUN.choice('Zmieniono grupę materiałową.\nCzy zmienić dokładności materiału na dokładności grupy?'@,,
                        'Dokładność ilości i ceny'@,'Dokładność &ilości'@,'Dokładność &ceny'@)
    ?})
|| {? _opc=1 | _opc=2 || M.DOKL:={? M.MGR=null() & M.J().DOKL>=0 || M.J().DOKL || M.MGR().DOKL ?} ?};
   {? _opc=1 | _opc=3 || M.DOKL_C:=M.MGR().DOKL_C; M.DOKL_S:=M.MGR().DOKL_S; M.DOKL_Z:=M.MGR().DOKL_Z ?};
   HELP.MGR:=M.MGR
|| HELP.MGR:=M.MGR
?};
{? _wyn
||
   {? var_pres('JPK_GTU',MGR)>0 & _zmiana
   || _mgr_gtu:=M.MGR().JPK_GTU;
      {? M.JPK_GTU<>_mgr_gtu
      || _m_gtu:=M.JPK_GTU;
         _m_gtu_kod:=M.JPK_GTU().KOD;
         M.JPK_GTU:=_mgr_gtu;
         {? M.JPK_GTU=null()
         || {? _m_gtu
            || FUN.info('Usunięto wartość pola GTU. Wartość przed usunięciem %1.'@[_m_gtu_kod])
            ?}
         || FUN.info('Wartość pola GTU została zmieniona na %1.'@[M.JPK_GTU().KOD])
         ?}
      ?}
   ?};
   {? M.M_ATR_B<>null & {? D_HELP.POPM || _ind_bud<>'P' || 1 ?}  & ~__popktm & (M.M_ATR_B().ADD%*2)=2
   || exec('akt_wgwz','!zws_par_kmtr',HELP.ADD='T' | D_HELP.POPM)
   ?};
   win_disp()
?};
_wyn


\akt_wgwz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizacja KTM i nazwy wg wzorca
::   WE: _a - 1-KTM i NAZ 0-tylko NAZ
::  OLD: \akt_wgwz/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a & M.M_ATR_B<>null || M.KTM:=exec('readwzbs','!zws_par_kmtr','KTM','WZ',{? D_HELP.POPM || DISP.KTM || '' ?}) ?};
{? M.M_ATR_B<>null & M.M_ATR_B().WZN<>'' & form(M.N)=''
|| M.N:=exec('readwzbs','!zws_par_kmtr','N','WZN')
?};
~~


\bd_mgrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: przed wyświetleniem M.MGRP
::  OLD: \bd_mgrp/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('be_mgrp','!zws_par_kmtr',1)=0
|| exec('findfnrd','color')
|| ''
?}


\be_mgrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed redakcją/wyświetleniem pola podgrupa M.MGRP
::   WE: _a - kontekst użycia: [0]-przed redakcją, 1-przed wyświetleniem
::  OLD: \be_mgrp/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_context:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_wyn:=M.MGR<>null();
__mgrp:=M.MGRP;
:: przyblokowanie edycji podgrupy jeśli na danym indeksie materiałowym zmieniamy schemat dostaw, a indeks jest domyślnym
:: indeksem dla podgrupy wyposażenia
{? _wyn=1 & HELP.ADD='N' & M.MGRP().M=(#M.ref()) & ATR.M_ATRWIN<>M.M_ATR || _wyn:=0 ?};
{? _wyn=1
||
   {? -(1+menu_txt)='p' & cur_tab(1,1)<>NORMWSP
   ||
      _ed:=exec('get','#params',600010,2);
      {? _ed='N'
      ||
         M.cntx_psh();
         {? M.count>1
         || _wyn:=0
         ?};
         M.cntx_pop()
      ?}
   ?}
?};
{? _wyn=1 & _context=0
|| {? exec('wyp_lic','wyp')='T' & POMOC.RODZ='T'
   || _red:=exec('mk_mgrp_edit','material');
      MGRP.win_edit(_red);
      exec('ZRODZO_MGRP','!zws_par_kmtr',1)
   || MGRP.win_edit('RED')
   ?}
?};
_wyn


\ae_mgrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: Po redagowaniu podgrupy dla materiału sprawdzenie czy atrybut pozwala na pomijanie wypelnienia informacji
::       o podgrupie, przy zmianie podgurpy zerowanie informacji o gatunku i odmianie jezeli sa one zalezne
::  OLD: \ae_mgrp/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
__mgrp:={? var_pres('__mgrp')=type_of(M.MGRP) || __mgrp || null() ?};
_wyn:=0;
_par:={? M.M_ATR_B<>null || {? M.M_ATR_B().ADD=2 || 'T' || 'P' ?} || 'N' ?};
_bud:=_par<>'N';

_czymgrp:=exec('czywe_wz','!zws_par_kmtr','MGRP',M.M_ATR_B().WZ,M.M_ATR_B().WZN);

{? ~_bud | (_bud & M.M_ATR_B<>null & ~_czymgrp)
|| _wyn:=1
|? _bud & _par='T' & M.M_ATR_B=null
|| FUN.info('Brak przypisanego pola wzorca indeksu materiałowego.'@);
   _wyn:=0
|| {? exec('get_par','#parametr',142)<>'N' & __mgrp<>fld || ZMIENNE.MGAT:=''; M.MGAT:=null() ?};
   {? exec('get_par','#parametr',143)<>'N' & __mgrp<>fld || ZMIENNE.MODM:=''; M.MODM:=null() ?};
   {? M.MGRP<>null() | M.M_ATR_B=null
   || _wyn:=1
   || FUN.info('Parametry wzorca indeksu materiałowego wymagają wypełnienia pola PODGRUPA.'@)
   ?}
?};
{? _wyn
|| VAR_DEL.delete('__mgrp');
   {? _bud & ~__popktm & (M.M_ATR_B().ADD%*2)=0 || exec('akt_wgwz','!zws_par_kmtr',HELP.ADD='T' | D_HELP.POPM) ?}
?};
MGRP.cntx_psh();
{? menu_txt()='Popraw' & M.MGRP().M=M.ref & M.MGRP().M_ATR<>null() & M.M_ATR=null()
|| M.M_ATR:=MGRP.M_ATR
?};
{? menu_txt()='Popraw' & M.MGRP().M=M.ref()
|| ZRODZO.WYPDOM:='T'
?};
MGRP.cntx_pop();
_enable:={? M.MGRP<>null() || 'enable=1' || ZRODZO.WYPDOM:='N'; 'enable=0' ?};
M.efld_opt(M.win_edit('?'),_enable,ZRODZO,'WYPDOM');
_wyn


\bl_eangm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wartosc poczatkowa pola M.KODK
::  OLD: \bl_eangm/mws.fml
::----------------------------------------------------------------------------------------------------------------------
:: W standardzie nie ma formuły do nadawania kodu kreskowego dla materiału (pola M.KODK)
:: Jeśli chcemy takową mieć trzeba ją zdefiniować i pamiętać, że będzie działać z dokładnością do magazynu
:: w parametrach pracy. W szczególności należy dostarczyć formuły dla każdego magazynu.
_form:=exec('eangform','kody_kresk',ST.MAG,'M','KODK');
{? _form<>'' || ($_form)() || '' ?}


\pr_kodkm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2010]
:: OPIS: Przed redakcja MKODK.KODK
::  OLD: \pr_kodkm/tkod.fml
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab=MKODK
|| {? MKODK.M().IDMOB='A' & (5+MKODK.RSQL)='dokce'
   || exec('FindAndGet','#table','DK_C',MKODK.RSQL,,"count()",0)=0
   || MKODK.RSQL=''
   ?}
|| 1
?} & (~BEER.EANP | cur_afld()='IL')


\po_kodkm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji pola M.KODK
::  OLD: \po_kodkm/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.KODK='' & (M.IDMOB<>'N' | M.GOMOB<>'N')
|| FUN.info('Zadeklarowano identyfikację indeksu materiałowego dla urządzeń mobilnych.\n'
    'Wymagane podanie kodu kreskowego indeksu materiałowego.'@);
   0
|| win_disp();
   1
?}


\bl_m_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: wartosc poczatkowa M.R
::   WY: 'H' lub 'P' - dla materialu, '' - dla uslugi
::  OLD: \bl_m_r/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.RODZ='T'
|| 'H'
|| ''
?}


\ae_m_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: po edycji rodzaju materialu w M
::   WY: 'W'-wyrob
::  OLD: \ae_m_r/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? fld<>'H' & fld<>'W' & fld<>'P' & fld<>'S'
|| FUN.info('Dozwolone wartości:\n'
       'H - wyrób zewnętrzny\n'
       'W - wyrób gotowy\n'
       'P - półprodukt\n'
       'S - surowiec'@);
   _wyn:=0
|| _wyn:=1
?};

_prod:=(exec('tte_lic','tte')='N');
_info1:=_info2:='';

TKTL.cntx_psh();
TMAT.cntx_psh();

{? _wyn
|| {? -menu_txt()='popraw'
   ||
::    ograniczenie warunku
      {? exec('get','#params',500740,2)<>'N'
::       & (fld()='H' | fld()='W')
      ||
::       Sprawdzamy czy material jest uzywany jako surowiec lub zamiennik surowca w kartach
::       technologicznych, jesli tak to nie moze stac sie wyrobem zewnetrznym lub wyrobem
         _args1:=exec('used_by_tktl_a','!zws_par_kmtr');
         _args1.M:=M.ref();
         _args1.CHK_PROD:=0;
         _args1.CHK_SUR:=1;
         _used_tktl:=exec('used_by_tktl','!zws_par_kmtr',_args1);
         {? _used_tktl>0
         || _info1:='Materiał występuje jako element karty technologicznej albo składowa'
                    ' — może być półproduktem albo surowcem.'@
         ?}
      ?}
   ?}
?};

{? _wyn
|| {? _prod=1 | fld()='H' | fld()='S'
   || M.LIMIT:=0
   ?};
   {? -menu_txt()='popraw'
   ||
:: wyłączenie warunku
      {? 1 | (fld()='H' | fld()='S')
      ||
::       Sprawdzamy czy material jest uzywany jako produkt karty, jesli tak to nie moze
::       stac sie surowcem lub wyrobem zewnetrznym
         _args2:=exec('used_by_tktl_a','!zws_par_kmtr');
         _args2.M:=M.ref();
         _args2.CHK_PROD:=1;
         _args2.CHK_SUR:=0;
         _used_tktl:=exec('used_by_tktl','!zws_par_kmtr',_args2);

         {? _used_tktl>0
         || _info2:='Materiał występuje jako produkt karty technologicznej albo komplet'
                    ' — może być półproduktem albo wyrobem gotowym.'@
         ?}
      ?}
   ?}
?};

{? _wyn
||
   {? _info1<>'' & _info2=''
   || {? (fld()='H' | fld()='W') || FUN.info(_info1); _wyn:=0 ?}
   |? _info1='' & _info2<>''
   || {? (fld()='H' | fld()='S') || FUN.info(_info2); _wyn:=0 ?}
   |? _info1<>'' & _info2<>''
   || {? (fld()='H' | fld()='W')
      || FUN.info('Materiał występuje jako element karty technologicznej i składowa'
                  ' — może być tylko półproduktem.'@);
         _wyn:=0
      |? (fld()='H' | fld()='S')
      || FUN.info('Materiał występuje jako produkt karty technologicznej i komplet'
                  ' — może być tylko półproduktem.'@);
         _wyn:=0
      ?}
   ?}
?};
TKTL.cntx_pop();
TMAT.cntx_pop();
win_disp();
_wyn


\used_by_tktl_a
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [12.41]
:: OPIS: Argumenty dla formuly used_by_tktl
::   WY: obj_new - tablica nazwana z argumentami
::  OLD: \used_by_tktl_a/tech.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=obj_new( 'M'
               ,'CHK_PROD'
               ,'CHK_SUR');
_args.M:=null();
_args.CHK_PROD:=1;
_args.CHK_SUR:=0;
_args


\used_by_tktl
::----------------------------------------------------------------------------------------------------------------------
:: DOST: PUBLIC
::  UTW: WH [12.41]
:: OPIS: Sprawdza czy podany material jest uzywany w kartach technologicznych jako surowiec
::       lub produkt karty
::       Sprawdza we wszystkich maskach!
::   WE: _a - M.ref()
::       _b - INTEGER - tryb sprawdza
::   WY: 1 - material jest uzywany w technologiach
::       0 - technologie nie uzywaja takiego materialu
::  OLD: \used_by_tktl/tech.fml
::----------------------------------------------------------------------------------------------------------------------

_result:=0;

:: Tworze obiekt z argumentami ktory przekaze do formuly for_each_mask
_args:=_a;


:: 1. Sprawdzam czy material jest uzywany jako produkt karty
{? _result=0 & _args.CHK_PROD
||
:: Tworze formule ktora wykonam we wszystkich maskach, formula jako _b dostanie _args
   _fml:="
      _args:=_b;
      _result:=0;

      TKTL.cntx_psh();
      TKTL.index('KARC');
      TKTL.prefix('T',_args.M);
      {? TKTL.size()>0
      || _result:=1
      ?};
      TKTL.cntx_pop();
      _result
   ";

:: Uruchamiam iteracje po wszystkich maskach
   {? exec('for_each_mask','#table',TKTL,_fml,,,_args,0)=0
   ||
::    Jesli w ktorejs masce znaleziono TKTL na taki M.ref() to zwracam 1
      _result:=1
   ?}
?};

:: 2. Sprawdzam czy material jest uzywany jako surowiec
{? _result=0 & _args.CHK_SUR
||
:: Tworze formule ktora wykonam we wszystkich maskach, formula jako _b dostanie _args
   _fml:="
      _args:=_b;
      _result:=0;

      TMAT.cntx_psh();
      TMAT.index('KTAN');
      TMAT.prefix(_args.M,'T');
      {? TMAT.size()>0
      || _result:=1
      ?};
      TMAT.cntx_pop();
      _result
   ";

:: Uruchamiam iteracje po wszystkich maskach
   {? exec('for_each_mask','#table',TMAT,_fml,,,_args,0)=0
   ||
::    Jesli w ktorejs masce znaleziono TMAT na taki M.ref() to zwracam 1
      _result:=1
   ?}
?};

:: 3. Sprawdzam czy material jest uzywany jako zamiennik surowca
{? _result=0 & _args.CHK_SUR
||
:: Tworze formule ktora wykonam we wszystkich maskach, formula jako _b dostanie _args
   _fml:="
      _args:=_b;
      _result:=0;

      TCHMAT.cntx_psh();
      TCHMAT.index('KTAN');
      TCHMAT.prefix(_args.M,'T');
      {? TCHMAT.size()>0
      || _result:=1
      ?};
      TCHMAT.cntx_pop();
      _result
   ";

:: Uruchamiam iteracje po wszystkich maskach
   {? exec('for_each_mask','#table',TCHMAT,_fml,,,_args,0)=0
   ||
::    Jesli w ktorejs masce znaleziono TCHMAT na taki M.ref() to zwracam 1
      _result:=1
   ?}
?};
_result


\bl_doklm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2011]
:: OPIS: wartosc poczatkowa M.DOKL
::  OLD: \bl_doklm/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.MGR<>null
|| POMOC.MGR().DOKL
|| POMOC.DOKL
?}


\bd_doklc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem M.DOKL, M.DOKL_C
::  OLD: \bd_doklc/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_dokl:=cur_afld()='DOKL';
{? {? ~_dokl || M.RODZ='U' || 0 ?} | exec('be_dokl','!zws_par_kmtr')=0
|| exec('findfnrd','color')
|| ''
?}


\be_dokl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed redakcja pola dokladnosc
::   WY: czy mozna edytowac pole
::  OLD: \be_dokl/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_brak_zm:=exec('get','#params',1150,2,OPERATOR.USER)='N';
{? _brak_zm & HELP.ADD<>'T'
||
   M.cntx_psh();
   {? (M.count-exec('ileprzyp','!zws_par_kmtr',M.ref()))<=1
   || _wyn:=1
   ?};
   M.cntx_pop()
||
   _wyn:=1
?};
_wyn


\ae_dokl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po redakcji pola M.DOKL
::  OLD: \ae_dokl/defin.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ae_mx','!zws_par_kmtr','DOKL',0)


\ae_mx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po redakcji pola M.x
::   WE: _a - akronim pola do sprawdzenia i zaookraglenia
::       _b - dokladnosc zaokraglenia
::  OLD: \ae_mx/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? ($('M.'+_a))()<0
|| FUN.info('Podaj wartość większą lub równą zero.'@);
   0
|? (4+_a)='DOKL' & ($('M.'+_a))()>10
|| FUN.info('Podaj wartość mniejszą lub równą 10.'@);
   0
|| ($('M.'+_a+':=M.'+_a+'$'+$_b))();
   1
?}


\zakr_mat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: formula na blanku dla pola M.A
::  OLD: \zakr_mat/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZAKR.MATU='N' || 'N' || 'T' ?}


\be_a_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: przed redakcja pola aktywny - dodano sprawdzenie czy na danym indeksie jest stan
::   WY: 1-wolno modyfikowac, 0-nie wolno
::  OLD: \be_a_m/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=ZAKR.MATU='W';
{? _wyn & M.A='T' & (1+menu_txt())='P' || _wyn:=exec('spr_stnm','!zws_par_kmtr',M.ref()) ?};
_wyn


\spr_stnm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdzenie czy na danym indeksie jest stan
::   WE: ref tabeli M
::   WY: 1-nie ma, 0-jest
::  OLD: \spr_stnm/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
SM.cntx_psh;
SM.clear;
SM.index('SMM');
SM.prefix(_a);
{? SM.first || {! |? {? SM.S>0 || _wyn:=0; 0 || SM.next ?} !} ?};
SM.cntx_pop;
_wyn


\m_kp_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: klawisz F3 M.KP
::  OLD: \m_kp_f3/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
exec('slownik','intrastat','007',M.KP)


\m_kp_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: po redakcji M.KP
::   WY: 1 - spelnione warunki, 0 - wpp
::  OLD: \m_kp_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
_return:=1;

:: sprawdzenie czy wartosc istnieje w slowniku 007
{? M.KP<>'' & exec('find_sl','intrastat','007',M.KP)=null || _return:=0 ?};

{? _return=0
|| FUN.info('Niedozwolona wartość pola Kraj pochodzenia.'@)
?};

_return


\m_ju_p_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed redakcja M.JU_P
::   WY: 1 - redakcja dozwolona, 0 - wpp
::  OLD: \m_ju_p_pr/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
INTRAST.JUKOD<>''


\m_ju_p_po
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: po redakcji M.JU_P
::   WY: 1 - warunki spelnione, 0 - wpp
::  OLD: \m_ju_p_po/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
fld(M.JU_P$6);

{? M.JU_P<0
||
   FUN.info('Przelicznik nie może być mniejszy od zera.'@);
   return(0)
||
   return(1)
?}


\bl_opakow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2010]
:: OPIS: Wartosc poczatkowa M.OPAKOW
::  OLD: \bl_opakow/opakow.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.OPAKOW


\be_m_opk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: przed redakcja pola M.OPAKOW
::  OLD: \be_m_opk/opakow.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=POMOC.OPAKOW<>'T';
{? _wyn=1 & -(1+menu_txt())<>'d'
||
   M_OPAKOW.index('OPAKOW');
   M_OPAKOW.prefix(M.ref());
   _wyn:=~M_OPAKOW.first()
?};
_wyn


\bd_m_unb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Przed wyswietl pola M.UNB
::  OLD: \bd_m_unb/slownik1.fml
::----------------------------------------------------------------------------------------------------------------------
exec('bd_m_xx','!zws_par_kmtr')


\bd_m_xx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Przed wyswietl pola M.??? - ograniczenia dla produkcji uproszczonej i rodzajow materialow
::  OLD: \bd_m_xx/slownik1.fml
::----------------------------------------------------------------------------------------------------------------------
{? (M.R='S' | M.R='P')
|| 1
|| exec('findfnv','#color')
?}


\be_m_unb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Przed redakcja pola M.UNB
::  OLD: \be_m_unb/slownik1.fml
::----------------------------------------------------------------------------------------------------------------------
exec('be_m_xx','!zws_par_kmtr')


\be_m_xx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Przed redakcja pola M.??? - ograniczenia dla produkcji uproszczonej i rodzajow materialow
::  OLD: \be_m_xx/slownik1.fml
::----------------------------------------------------------------------------------------------------------------------
(M.R='S' | M.R='P')


\pom_pr_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: po M.PR_M
::  OLD: \pom_pr_m/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.PR_M<0 || FUN.info('Procent nie może być liczbą ujemną.'@); 0
|? M.PR_M>=100 || FUN.info('Procent powinien być liczbą mniejszą od 100.'@); 0
|| 1
?}


\pom_pr_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: po M.PR_N
::  OLD: \pom_pr_n/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.PR_N<0 || FUN.info('Procent nie może być liczbą ujemną.'@); 0
|? M.PR_N>=100 || FUN.info('Procent powinien być liczbą mniejszą od 100.'@); 0
|| 1
?}


\fis_ktm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: wzorzec dla pola M.FIS_KTM wg formuly 300160
::  OLD: \fis_ktm/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wzorzec:='';
_par_fis:=exec('get','#params',300161,1);
_wzorzec:=_par_fis*'x'+'#';
_wzorzec


\bl_musl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: blank dla pola M.USL
::  OLD: \bl_musl/defin.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.USL


\bd_musl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: przed wyswietl dla pola M.USL
::  OLD: \bd_musl/defin.fml
::----------------------------------------------------------------------------------------------------------------------
''


\be_musl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: przed redakcja pola M.USL
::  OLD: \be_musl/defin.fml
::----------------------------------------------------------------------------------------------------------------------
1


\bl_doklc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wartosc poczatkowa M.DOKL_C
::  OLD: \bl_doklc/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.MGR<>null
|| POMOC.MGR().DOKL_C
|| POMOC.DOKL_C
?}


\ae_doklc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola M.DOKL_C
::  OLD: \ae_doklc/defin.fml
::----------------------------------------------------------------------------------------------------------------------
exec('ae_mx','!zws_par_kmtr','DOKL_C',0)


\pw_mcatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyswietleniem wzorca budowy indeksu
::   WY: 1 lub wyszarzenie
::  OLD: \pw_mcatr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
{? ATR.CZYSADKC
|| ''
|| exec('findfnrd','color')
?}


\pr_mcatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed redakcja wzorca budowy indeksu
::   WY: 0/1
::  OLD: \pr_mcatr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
POM.ATR_TYP:='C';
M_ATR.win_edit('RED');
ATR.CZYSADKC


\po_mcatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po zmianie M.M_ATR
::   WY: 1-ok 0-nie
::  OLD: \po_mcatr/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? (';AP'*M.IDMOB)>1 & M.M_ATR=null
|| _wga:=M.IDMOB='A';
   FUN.info({? _wga
            || 'Dla identyfikacji dostawy wg Atrybutów dostawy\nwymagane jest przypisanie zestawu atrybutów do indeksu materiałowego.\n\n'
               'Wybranie identyfikacji wg Atrybutów dostawy niemożliwe.'@
            || 'Dla identyfikacji dostawy wg Parti produkcyjnej\nwymagane jest przypisanie zestawu atrybutów do indeksu materiałowego.\n\n'
               'Wybranie identyfikacji wg Parti produkcyjnej niemożliwe.'@ ?});
   _wyn:=0
|? M.IDMOB='P' & ~exec('matrzpar','mat_atr',M.M_ATR)
|| FUN.info('Dla identyfikacji dostawy wg Partii produkcyjnej\n'
    'wymagane jest przypisanie zestawu atrybutów z jednym słownikiem typu PARTIE.\n\n'
    'Wybranie identyfikacji wg Partii produkcyjnej niemożliwe.'@);
   _wyn:=0
|? M.IDMOB='D' & M.IDZP & ~exec('matrzpar','mat_atr',M.M_ATR)
|| FUN.info('Dla identyfikacji dostawy wg Dostaw z uwzględnieniem partii produkcyjnej\n'
    'wymagane jest przypisanie zestawu atrybutów z jednym słownikiem typu PARTIE.\n\n'
    'Wybranie identyfikacji wg Dostaw z uwzględnieniem partii produkcyjnej niemożliwe.'@);
   _wyn:=0
|| {? exec('matrzpar','mat_atr',M.M_ATR) & M.IDMOB='D' & exec('tte_lic','tte')='T'
   || M.efld_opt(M.win_edit('?'),'enable=1',,'IDZP')
   || M.efld_opt(M.win_edit('?'),'enable=0',,'IDZP')
   ?};
   win_disp()
?};
_wyn


\pw_mbatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyswietleniem wzorca budowy indeksu
::   WY: 1 lub wyszarzenie
::  OLD: \pw_mbatr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.M_ATR_B<>null
|| ''
|| exec('findfnv','#color')
?}


\pr_mbatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed redakcja wzorca budowy indeksu
::   WY: 0/1
::  OLD: \pr_mbatr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
POM.ATR_TYP:='B';
M_ATR.win_edit('REDB');
(HELP.ADD='T' | D_HELP.POPM=1) & exec('FindInSet','#table','M_ATR','TYP','B')<>null()


\po_mbatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: po redakcja wzorca budowy indeksu
::   WY: 0/1
::  OLD: \po_mbatr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.M_ATR_B<>null()
|| _zmien:=0;
   {? M.MGR=null
   || M.MGR:=M.M_ATR_B().MGR;
      {? M.MGR<>null()
      || M.DOKL:=M.MGR().DOKL;
         M.DOKL_C:=M.MGR().DOKL_C;
         M.DOKL_S:=M.MGR().DOKL_S;
         M.DOKL_Z:=M.MGR().DOKL_Z;
         HELP.MGR:=M.MGR
      ?}
   ?};
   {? BEER.BADSEH=null() || BEER.BADSEH:=exec('lastbads','!zws_par_kmtr',M.M_ATR_B) ?};
   {? D_HELP.POPM=1
   || _m_atr:=M.M_ATR_B;
      _refm:=M.ref();
      M.cntx_psh();
      M.clear();
      {? M.seek(_refm) || _zmien:=M.M_ATR_B<>null() & _m_atr<>M.M_ATR_B ?};
      M.cntx_pop()
   ?};
   _null:=ATR.M_ATR_B=null();
   {? ATR.M_ATR_B<>M.M_ATR_B
   || ATR.M_ATR_B:=M.M_ATR_B;
      {? (M.M_ATR_B().ADD%*2)=0 & ~_null
      || M.KTM:='';
         M.N:=''
      ?};
      _zmien:=1;
      {! _i:=1..10 |! ($('M.WAR'+form(_i,-2,0,'99')))():='' !}
   ?};
   {? (_zmien | exec('niemawar','!zws_par_kmtr')) & ~M.M_ATR_B().EDIT
   || exec('budm_atr','!zws_par_kmtr')
   || _rozm:=exec('rozm_atr','mat_atr',M.M_ATR_B);
      {! _i.. exec('il_atr','mat_atr')
      |! {? _i<=_rozm
         || ($('POM.SYM'+form(_i,-2,0,'99')))():=($('M.M_ATR_B().SL_'+form(_i,-2,0,'99')+'().NA'))()
         || ($('POM.SYM'+form(_i,-2,0,'99')))():=''
         ?}
      !}
   ?};
   1
|? M.M_ATR_B().ADD<2
|| {! _i:=1..10
   |! {? M.M_ATR_B=null() || ($('POM.SYM'+form(_i,-2,0,'99')))():='' ?};
      ($('M.WAR'+form(_i,-2,0,'99')))():=''
   !}
|| 1
?}


\lastbads
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: szuka ostatniego podpietego badania wg wzorca atrybutow
::   WE: _a - wzorzec atrybutow indeksu
::   WY: ref BADSEH
::  OLD: \lastbads/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=null;
_firma:=exec('firma','ustawienia');
M.cntx_psh();
M.index('M_ATR_B');
M.prefix('T',_a);
{? M.last()
|| {!
   |? _wyn:=exec('FindInSet','#table','M_DOD','M_DOD',M.ref(),_firma,"M_DOD.BADSEH",,,null());
      _wyn=null & M.next()
   !}
?};
M.cntx_pop();
_wyn


\niemawar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy sa puste pola WAR - wszystkie
::   WY: 1-sa 0-nie
::  OLD: \niemawar/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=10;
{! _i..10 |! _wyn-=($('M.WAR'+form(_i,-2,0,'99')))()='' !};
~_wyn


\budm_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: klawisz obsługi/podglądu budowy indeksu materiałowego
::  OLD: \budm_atr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
_czymgr:=exec('czywe_wz','!zws_par_kmtr','MGRU',M.M_ATR_B().WZ,M.M_ATR_B().WZN);
{? M.M_ATR_B<>null
|| _edit:=M.win_edit('?');
   M.win_edit('REDBUD');
   M.efld_opt('REDBUD',{? _czymgr || 'mark=1' || 'mark=0' ?},,'MGR');
   _rozm:=exec('rozm_atr','mat_atr',M.M_ATR_B);
   {! _i.. exec('il_atr','mat_atr')
   |! {? _i<=_rozm
      || ($('POM.SYM'+form(_i,-2,0,'99')))():=($('M.M_ATR_B().SL_'+form(_i,-2,0,'99')+'().NA'))()
      || ($('POM.SYM'+form(_i,-2,0,'99')))():=''
      ?}
   !};
   _helpmgr:=HELP.MGR;
   {? M.MGR<>null() || HELP.MGR:=M.MGR ?};
   {? M.edit("exec('chk_medit','!zws_par_kmtr')")
   || {? M.MGR<>null() & (_helpmgr=null() | _helpmgr<>M.MGR)
      || M.DOKL:=M.MGR().DOKL;
         M.DOKL_C:=M.MGR().DOKL_C;
         M.DOKL_S:=M.MGR().DOKL_S;
         M.DOKL_Z:=M.MGR().DOKL_Z;
         HELP.MGR:=M.MGR
      ?};
      1
   || {? D_HELP.POPM=1 || M.get() || 1 ?};
      M.MGR:=_helpmgr
   ?};
   M.win_edit(_edit);
   exec('info_ktm','!zws_par_kmtr',HELP.ADD='T',M.KTM);
   M.M_ATR_B
|| FUN.info('Niewypełnione pole %1.\nOpcja niedostępna.'@['WZORZEC']);
   0
?}


\chk_medit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: Przed edycją pola odmiana w kartotece atrybutów
::   WY: akronim pola do edycji
::  OLD: \chk_medit/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
_chk:='';
_czymgrp:=exec('czywe_wz','!zws_par_kmtr','MGRP',M.M_ATR_B().WZ,M.M_ATR_B().WZN);
_czymgat:=exec('czywe_wz','!zws_par_kmtr','MGAT',M.M_ATR_B().WZ,M.M_ATR_B().WZN) & exec('get_par','#parametr',142)<>'B';
_czymodm:=exec('czywe_wz','!zws_par_kmtr','MODM',M.M_ATR_B().WZ,M.M_ATR_B().WZN) & exec('get_par','#parametr',143)<>'B';

{? _chk='' & M.KTM=''
|| FUN.info('Nie podano indeksu.'@);
   _chk:={? M.M_ATR_B().EDIT=1 | M.win_edit('?')='REDBUD' || 'WAR01' || 'KTM' ?}
|? _chk='' & M.N=''
|| FUN.info('Nie podano nazwy.'@);
   _chk:='N'
|? _chk='' & _czymgrp & M.MGRP=null()
|| {? M.MGR=null()
   || FUN.info('Niewypełniona grupa wg zdefiniowanego atrybutu.'@);
      _chk:='MGR'
   || FUN.info('Niewypełniona podgrupa wg zdefiniowanego atrybutu.'@);
      _chk:='MGRP'
   ?}
|? _chk='' & _czymgat & M.MGAT=null()
|| FUN.info('Niewypełniony gatunek wg zdefiniowanego atrybutu.'@);
    _chk:='MGAT'
|? _chk='' & _czymodm & M.MODM=null()
|| FUN.info('Niewypełniona odmiana wg zdefiniowanego atrybutu.'@);
    _chk:='MODM'
?};
_chk


\info_ktm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdza czy istnieje juz ktm o podanym kodzie
::  OLD: \info_ktm/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('chk_m_atr','!zws_par_kmtr',0)='' & M.KTM<>''
|| _ktm:=M.KTM;
   _ref:={? HELP.ADD='T' || null || M.ref() ?};
   M.cntx_psh();
   _rkt:=exec('FindInSet','#table','M','MATKTM',_ktm,_ktm);
   {? _rkt<>null & _rkt<>_ref
   || FUN.info('W kartotece istnieje już indeks o podanym kodzie.'@)
   ?};
   M.cntx_pop()
?};
~~


\chk_m_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: sprawdzenie wypelnienia wszystkich atrybutow dla M wg wzorca
::   WE: [_a] -1-komunikat (domyslnie) 0-brak komunikatu
::   WY: ''-jest OK 'WZ'-jesli nie OK
::  OLD: \chk_m_atr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=1 ?} || _a:=1 ?};

_wyn:='';
_rodz:={? M.RODZ='T' || 'materiałowego' || 'usługowego' ?};
{? M.M_ATR_B<>null & (M.M_ATR_B().ADD%*2)=0 & M.M_ATR_B().NOATR<>'T'
|| _nr:=exec('rozm_atr','mat_atr',M.M_ATR_B);
   _i:=0;
   {!
   |? _i+=1;
      {? ($('M.WAR'+form(_i,-2,0,'99')))()<>''
      || _i<_nr
      || _wyn:='M_ATR_B';
         0
      ?}
   !}
?};
{? _wyn='M_ATR_B' & _a
|| FUN.info('Nie podano wszystkich wymaganych atrybutów indeksu %1.'@[_rodz])
?};
_wyn


\wz_batr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: ustawia wzorzec dla pól WAR w przypadku bez slownikow upper
::   WY: wzorzec
::  OLD: \wz_batr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
_nr:=cur_afld()+2;
{? ($('M.M_ATR_B().SL_'+_nr+'().TYP'))()='S' || '' || 'u!' ?}


\pw_batr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyświetleniem wartości atrybutu dla budowy strukturalnej
::   WY: 1 lub wyszarzenie
::  OLD: \pw_batr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.M_ATR_B<>null
|| _nr:=#(cur_afld()+2);
   {? _nr<=exec('rozm_atr','mat_atr',M.M_ATR_B)
   || ''
   || exec('findfnv','#color')
   ?}
|| exec('findfnv','#color')
?}


\pr_batr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed redakcją wartości atrybutu dla budowy strukturalnej
::   WY: 0/1
::  OLD:\pr_batr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.M_ATR_B<>null & {? M.win_edit('?')='REDBUD' || 1 || M.M_ATR_B().EDIT ?}
|| POM.ATR_TYP:='B';
   _nr:=#(cur_afld()+2);
   _nr<=exec('rozm_atr','mat_atr',M.M_ATR_B)
|| 0
?}


\f3_batr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wybranie wartosci ze slownika atrybutow
::  OLD:\f3_batr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_nr:=(cur_afld()+2);
_typ:=($('M.M_ATR_B().SL_'+_nr+'().TYP'))();
{? M.M_ATR_B().NOATR='T' & ($('M.M_ATR_B().SL_'+_nr))()=null()
|| _wyn:=fld()
|? _typ='S'
|| SLO.cntx_psh();
   _slu:=($('M.M_ATR_B().SL_'+_nr+'().SLU'))();
   {? _slu<>null
   || ($('M.M_ATR_B().SL_'+_nr+'().SLU().NAZ'))();
      SLO.win_sel('ONE_SEL');
      SLO.index('SL');
      SLO.prefix(_slu);
      SLO.find_key(fld);
      {? SLO.select(,1,10)
      || _wyn:=SLO.KOD
      ?}
   ?};
   SLO.cntx_pop()
?};
{? _wyn<>'' & (~-_wyn)<>_wyn
|| FUN.info('Wskazano kod zawierający małe litery.\n'
            'Ponieważ indeks materiałowy może zawierać wyłącznie duże litery\nwybór takiego kodu niemożliwy.'@);
   _wyn:=''
?};
_wyn


\po_batr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: po redakcji wartosci atrybutu dla budowy strukturalnej
::   WY: 1 lub wyszarzenie
::  OLD:\po_batr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_acr:='SL_'+(3-cur_afld);
_typ:=($('M.M_ATR_B().'+_acr+'().TYP'))();
{? _typ='L'
|| _wyn:=exec('ctrltypp','#valid','N',fld());
   {? (~type_of(_wyn) & errno) | ~_wyn || _wyn:=0; FUN.info('Wymagana wartość liczbowa.'@) ?}
|? _typ='D'
|| _wyn:=exec('ctrltypp','#valid','D',fld());
   {? (~type_of(_wyn) & errno) | ~_wyn || _wyn:=0; FUN.info('Wymagana wartość typu data.'@) ?}
|? _typ='C'
|| _wyn:=exec('ctrltypp','#valid','G',fld());
   {? (~type_of(_wyn) & errno) | ~_wyn || _wyn:=0; FUN.info('Wymagana wartość typu czas.'@) ?}
|? _typ='T'
|| ''
|? _typ='S'
|| _upr:=exec('chk_role','#b__box',OPERATOR.USER,'ZWS_PAR_KSLO');
   SLU.cntx_psh();
   SLO.cntx_psh();
   _slu:=($('M.M_ATR_B().'+_acr+'().SLU'))();
   _naz:=($('M.M_ATR_B().'+_acr+'().SLU().NAZ'))();
   {? _slu<>null & fld<>''
   || SLU.cntx_psh();
      SLU.clear();
      {? SLU.seek(_slu)
      || SLO.index('SL');
         SLO.prefix(_slu);
         {? SLO.find_key(~-fld,)
         || ($('M.WAR'+(3-cur_afld)))():=~-SLO.KOD
         |? SLO.find_key(~-fld)
         || ($('M.WAR'+(3-cur_afld)))():=~-SLO.KOD
         || {? ~SLU.KDK & SLU.DL<>(+fld)
            || FUN.info('Wymagana długość kodu: %1 znaków.'@[$SLU.DL]);
               _wyn:=0
            |? SLU.KDK | (~SLU.KDK & SLU.DL=(+fld))
            || {? _upr & FUN.ask('Brak podanego kodu w słowniku: %1.\nCzy dodać kod do słownika?'@[SLU.NAZ])
               || SLO.cntx_psh();
                  SLO.clear();
                  SLO.blank();
                  SLO.SLU:=SLU.ref();
                  SLO.KOD:=~-fld;
                  ($('M.WAR'+(3-cur_afld)))():=~-SLO.KOD;
                  _wyn:=SLO.add(1);
                  SLO.cntx_pop()
               || FUN.info('Wymagana wartość ze słownika: %1.'@[_naz]);
                  _wyn:=0
               ?}
            || _wyn:=0
            ?}
         ?}
      || FUN.info('Nie znaleziono słownika.'@);
         _wyn:=0
      ?};
      SLU.cntx_pop()
   ?};
   SLU.cntx_pop();
   SLO.cntx_pop()
?};
{? _wyn
|| {? (~__popktm | M.KTM='') & M.M_ATR_B<>null() & ~(M.M_ATR_B().ADD%*2)
   || M.KTM:=exec('readwzbs','!zws_par_kmtr','KTM','WZ',{? D_HELP.POPM || DISP.KTM || '' ?})
   ?};
   {? M_ATR.WZN<>'' & (~__popktm | form(M.N)='') & M.M_ATR_B<>null() & ~(M.M_ATR_B().ADD%*2)
   || M.N:=exec('readwzbs','!zws_par_kmtr','N','WZN')
   ?};
   {? M.MGR=null || M.MGR:=M_ATR.MGR ?};
   M.M_ATR:=exec('cp_matr_matr','!zws_par_kmtr',M_ATR.M_ATR)
?};
_wyn


\cp_matr_matr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: Przypisanie atrybutu dostawy z atrybutu materiału
::   WE: _a - kod atrybutu dodstawy (string)
::   WY: relacja z atrybutem dostawy
::  OLD: \cp_matr_matr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
{? +M_ATR.M_ATR
|| M_ATR.cntx_psh();
   M_ATR.index('TYP');
   M_ATR.clear();
   M_ATR.prefix('C',_a,);
   {? M_ATR.first()
   || _ref:=M_ATR.ref()
   ?};
   M_ATR.cntx_pop()
?};
_ref


\m_rodzo_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wartosc poczatkowa M.RODZO
::  OLD: \m_rodzo_wp/wyprodzo.fml
::----------------------------------------------------------------------------------------------------------------------
null()


\m_rodzo_bv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Przed wyswietl M.RODZO
::   WY: kolor pola zalezny od mozliwosci edytowania
::  OLD: \m_rodzo_bv/wyprodzo.fml
::----------------------------------------------------------------------------------------------------------------------
''


\m_rodzo_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Przed redakcja M.RODZO
::   WY: 0/1 - czy edycja dozwolona
::  OLD: \m_rodzo_be/wyprodzo.fml
::----------------------------------------------------------------------------------------------------------------------
1


\m_rodzo_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Po redakcji M.RODZO
::   WY: 0/1 - czy mozna opuscic pole
::  OLD: \m_rodzo_ae/wyprodzo.fml
::----------------------------------------------------------------------------------------------------------------------
1


\bd_mgat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: przed wyswietleniem pola gatunek dla atrybutow materialu
::  OLD: \bd_mgat/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_zn:=exec('get_par','#parametr',142);
{? M.MGAT<>null || ZMIENNE.MGAT:=M.MGAT().KOD ?};
{? _zn='B'
 | _zn='G' & M.MGR=null()
 | _zn='P' & M.MGRP=null()
|| exec('findfnrd','color')
|| ''
?}


\bd_modm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: Przed wyswietleniem odmiany w atrybutach materialu
::  OLD: \bd_modm/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_zn:=exec('get_par','#parametr',143);
{? M.MODM<>null || ZMIENNE.MODM:=M.MODM().KOD ?};
{? _zn='B'
 | _zn='G' & M.MGR=null()
 | _zn='P' & M.MGRP=null()
 | _zn='O' & M.MGAT=null()
|| exec('findfnrd','color')
|| ''
?}


\bl_m_czy_con
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Wartosc poczatkowa M.CZY_CON
::  OLD: \bl_m_czy_con/zam_pub.fml
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.M_SCH & XINFO.CPV_SCH & XINFO.PBUD_SCH
|| 'T'
|| 'N'
?}


\be_m_czy_con
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Przed redakcja pola M.CZY_CON
::  OLD: \be_m_czy_con/zam_pub.fml
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.M_SCH & XINFO.CPV_SCH & XINFO.PBUD_SCH
|| __Mccon:=M.CZY_CON;
   1
|| FUN.info('Niewypełnione schematy danych dla\nzamówień publicznych w parametrach programu.'@);
   0
?}


\ae_m_czy_con
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Po redakcji M.CZY_CON
::  OLD: \ae_m_czy_con/zam_pub.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? M.CZY_CON='T' & __Mccon<>M.CZY_CON
|| {? M.C_SYM='' || M.C_SYM:=M.KTM ?};
   {? M.C_OPIS='' || M.C_OPIS:=M.N ?}
|? __Mccon<>M.CZY_CON
|| {? exec('czy_m_pow','!zws_par_kmtr')
   || M.CZY_CON:=__Mccon;
      _ok:=0
   || M.C_SYM:=M.C_OPIS:=UNPAR.P10:=UNPAR.P11:='';
      M.CPV:=M.POZ_BUD:=null
   ?}
?};
win_disp();
_ok


\czy_m_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Czy material jest zwiazany z struktura hierarchiczna
::  OLD: \czy_m_pow/zam_pub.fml
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.M_SCH
|| _ok:=1;
   UD_POW.index('TAB'); UD_POW.prefix(XINFO.M_SCH().UD_TYP);
   {! _i:=1..2
   |? _ok
   |! {? _i=1 & UD_POW.find_key('MI',#M.ref()) & UD_POW.UD_SKL |
         _i=2 & UD_POW.find_key('MW',#M.ref()) & UD_POW.UD_SKL
      || UD_SKL.prefix();
         {? UD_SKL.seek(UD_POW.UD_SKL)
         || _ok:=~exec('can_del_ud','schemat',2);
            {? _ok=0
            || FUN.info('Materiał jest związana z elementem\nschematu danych, który jest użyty w danych.\n'
                        'Zmiana znacznika niemożliwa.'@)
            ?}
         ?}
      ?}
   !};
   ~_ok
?}


\bv_m_c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Przed wyswietleniem pol controllingowych w tabeli M
::  OLD: \bv_m_c/zam_pub.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.CZY_CON<>'T' || exec('findfnrd','color') || '' ?}


\be_m_c
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Przed redagowaniem pol controllingowych w tabeli M
::  OLD: \be_m_c/zam_pub.fml
::----------------------------------------------------------------------------------------------------------------------
M.CZY_CON='T'


\pwmidmob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem IDMOB
::  OLD: \pwmidmob/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.KODK=''
 | {? HELP.ADD<>'T'
   || {? cur_afld()='GOMOB' || ~((';DAPZ'*M.IDMOB)>1) || 0 ?}
     | ~((';DAPZ'*M.IDMOB)>1) & exec('czymkodk','!zws_par_kmtr',M.ref())
   || {? cur_afld()='GOMOB' || ~((';DAPZ'*M.IDMOB)>1) || 0 ?}
   ?}
|| 0
|| ''
?}


\prmidmob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja IDMOB
::  OLD: \prmidmob/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
M.KODK<>'' & {? HELP.ADD<>'T'
             || {? cur_afld()='GOMOB' || (';DAPZ'*M.IDMOB)>1 || 1 ?} & ~exec('czymkodk','!zws_par_kmtr',M.ref())
             || {? cur_afld()='GOMOB' || (';DAPZ'*M.IDMOB)>1 || 1 ?}
             ?}


\pomidmob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redeakcji SP_IDMOB
::  OLD: \pomidmob/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? (';DAPZ'*M.IDMOB)>1
|| _prod:=exec('tte_lic','tte')='T';
   {? M.IDMOB='D' & _prod & exec('matrzpar','mat_atr',M.M_ATR)
   || M.efld_opt(M.win_edit('?'),'enable=1',,'IDZP')
   || M.efld_opt(M.win_edit('?'),'enable=0',,'IDZP')
   ?};
   {? ~_prod & (';PZ'*M.IDMOB)>1
   || FUN.info({? M.IDMOB='P' || 'Dla identyfikacji dostawy wg Parti produkcyjnej\n'
                                 'wymagane są uprawnienia do dziedziny Produkcja.\n\n'
                                 'Wybranie zadeklarowanej identyfikacji dostawy niemożliwe.'@
                              || 'Dla identyfikacji dostawy wg Zlecenia\n'
                                 'wymagane są uprawnienia do dziedziny Produkcja.\n\n'
                                 'Wybranie zadeklarowanej identyfikacji dostawy niemożliwe.'@
                                 ?});
      M.IDMOB:='N';
      _wyn:=0
   |? M.IDMOB='A' & M.M_ATR=null()
   || FUN.info('Dla identyfikacji dostawy wg Atrybutów dostawy\n'
       'wymagane jest przypisanie zestawu atrybutów.\n\n'
       'Wybranie identyfikacji wg Atrybutów dostawy niemożliwe.'@);
      M.IDMOB:='N';
      _wyn:=0
   |? M.IDMOB='P' & ~exec('matrzpar','mat_atr',M.M_ATR)
   || FUN.info('Dla identyfikacji dostawy wg Partii produkcyjnej\n'
       'wymagane jest przypisanie zestawu atrybutów z jednym słownikiem typu PARTIE.\n\n'
       'Wybranie identyfikacji wg Partii produkcyjnej niemożliwe.'@);
      M.IDMOB:='N';
      _wyn:=0
   |? M.R='S' & (';PZ'*M.IDMOB)>1
   || FUN.info({? M.IDMOB='P' || 'Dla identyfikacji dostawy wg Parti produkcyjnej\n'
                                 'wymagany jest indeks materiałowy, który nie jest surowcem.\n\n'
                                 'Wybranie zadeklarowanej identyfikacji dostawy niemożliwe.'@
                              || 'Dla identyfikacji dostawy wg Zlecenia\n'
                                 'wymagany jest indeks materiałowy, który nie jest surowcem.\n\n'
                                 'Wybranie zadeklarowanej identyfikacji dostawy niemożliwe.'@
                                 ?});
      M.IDMOB:='N';
      _wyn:=0
   || win_disp()
   ?}
|| M.efld_opt(M.win_edit('?'),'enable=0',,'IDZP');
   M.FOMOB:=null;
   M.FOIDE:=null;
   M.GOMOB:='N';
   M.IDZP:=0;
   win_disp()
?};
_wyn


\czymkodk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy istnieja MKODK dla M o kodach kreskowych roznych od podanego
::   WE: _a - M.ref()
::   WY: 1-tak 0-nie
::  OLD: \czymkodk/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
MKODK.cntx_psh();
MKODK.index('M');
MKODK.prefix(_a);
{? MKODK.first()
|| {!
   |? _wyn:=MKODK.D='N' & ~((';RO'*MKODK.IDMOB)>1);
      ~_wyn & MKODK.next()
   !}
?};
MKODK.cntx_pop();
:: dodatkowo sprawdza czy dany indeks nie znajduje sie najakis stanach magazynowych
{? ~_wyn
|| SM.cntx_psh();
   SM.index('SMM');
   SM.prefix(_a);
   {? SM.first()
   || {!
      |? _wyn:=(1+SM.MAG().TYP)='D';
         ~_wyn & SM.next()
      !}
   ?};
   SM.cntx_pop()
?};
_wyn


\pwmgomob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: przed wyswietleniem IDMOB
::  OLD: \pwmgomob/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~(';DAPZ'*M.IDMOB>1)
|| 0
|| ''
?}


\prmgomob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: przed redakcja GOMOB
::  OLD: \prmgomob/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
';DAPZ'*M.IDMOB>1


\pwfomob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem pola M.FOMOB
::  OLD: \pwfomob/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.KODK<>'' & (';DAPZ'*M.IDMOB)>1
|| 1
|| exec('findfnv','#color')
?}


\prfomob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja pola M.FOMOB
::  OLD: \prfomob/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.KODK<>'' & (';DAPZ'*M.IDMOB)>1
|| exec('fl_rodz','formula','X')
|| 0
?}


\pwfoide
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem pola M.FOIDE
::  OLD: \pwfoide/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.KODK<>'' & (';DAPZ'*M.IDMOB)>1
|| 1
|| exec('findfnv','#color')
?}


\prfoide
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja pola M.FOIDE
::  OLD: \prfoide/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.KODK<>'' & (';DAPZ'*M.IDMOB)>1
|| exec('fl_rodz','formula','Y')
|| 0
?}


\bl_r_prod
::----------------------------------------------------------------------------------------------------------------------
:: DOST: MBUILDER
::  UTW: WH [12.41]
:: OPIS: Wartosc poczatkowa pola M.R_PROD
::   WY: STRING
::  OLD: \bl_r_prod/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
ZAKR.R_PROD


\bl_r_komp
::----------------------------------------------------------------------------------------------------------------------
:: DOST: MBUILDER
::  UTW: WH [12.41]
:: OPIS: Wartosc poczatkowa pola M.R_KOMP
::   WY: STRING
::  OLD: \bl_r_komp/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
ZAKR.R_KOMP


\bl_r_own
::----------------------------------------------------------------------------------------------------------------------
:: DOST: MBUILDER
::  UTW: WH [18.22]
:: OPIS: Wartosc poczatkowa pola M.R_OWN
::   WY: STRING
::----------------------------------------------------------------------------------------------------------------------
ZAKR.R_OWN


\zbd_mgat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: Przed wyswietleniem zmiennej do gatunku w kartotece material
::  OLD: \zbd_mgat/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
exec('bd_mgat','!zws_par_kmtr')


\zbe_mgat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: Przed edycja zmiennej do gatunku w kartotece material
::  OLD: \zbe_mgat/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_zn:=exec('get_par','#parametr',142);
MGAT.index('GPK');
{? _zn='B'
 | _zn='G' & M.MGR=null()
 | _zn='P' & M.MGRP=null()
|| 0
|| {? _zn='G' || MGAT.prefix(M.MGR,null)
   |? _zn='P' || MGAT.prefix(null(),M.MGRP)
   || MGAT.prefix(null,null)
   ?};
   1
?}


\zf3_mgat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: Wyswietlenie slownika zmiennej do gatunku w kartotece material
::  OLD: \zf3_mgat/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ZMIENNE.MGAT:='';
{? MGAT.select
|| M.MGAT:=MGAT.ref();
   ZMIENNE.MGAT:=MGAT.KOD
|| ZMIENNE.MGAT:=M.MGAT().KOD
?}


\zae_mgat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: Po edycji zmiennej do gatunku w kartotece material
::  OLD: \zae_mgat/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_par:={? M.M_ATR_B<>null || {? M.M_ATR_B().ADD=2 || 'T' || 'P' ?} || 'N' ?};
_bud:=_par<>'N';
_czymgat:=exec('czywe_wz','!zws_par_kmtr','MGAT',M.M_ATR_B().WZ,M.M_ATR_B().WZN);

{? ~_bud | (_bud & M.M_ATR_B<>null & ~_czymgat)
|| {? ZMIENNE.MGAT=''
   || M.MGAT:=null;
      _wyn:=1
   || exec('zbe_mgat','!zws_par_kmtr');
      {? MGAT.find_key(ZMIENNE.MGAT,)
      || M.MGAT:=MGAT.ref();
         _wyn:=1
      |? MGAT.find_key(ZMIENNE.MGAT)
      || M.MGAT:=MGAT.ref();
         ZMIENNE.MGAT:=M.MGAT().KOD;
         _wyn:=1
      || FUN.info('Brak wartości w słowniku.'@);
         ZMIENNE.MGAT
      ?}
   ?}
|? _bud & _par='T' & M.M_ATR_B=null
|| FUN.info('Brak przypisanego pola wzorca indeksu materiałowego.'@);
   _wyn:=0
|| {? ZMIENNE.MGAT='' & M.M_ATR_B<>null
   || FUN.info('Parametry wzorca indeksu materiałowego wymagają wypełnienia pola GATUNEK.'@)
   || {? ZMIENNE.MGAT=''
      || _wyn:=1
      ?};
      exec('zbe_mgat','!zws_par_kmtr');
      {? ~_wyn & MGAT.find_key(ZMIENNE.MGAT,)
      || M.MGAT:=MGAT.ref();
         _wyn:=1
      ?};
      {? ~_wyn & MGAT.find_key(ZMIENNE.MGAT)
      || M.MGAT:=MGAT.ref();
         ZMIENNE.MGAT:=M.MGAT().KOD;
         _wyn:=1
      ?};
      {? ~_wyn
      || FUN.info('Brak wartości w słowniku.'@);
         ZMIENNE.MGAT
      ?}
   ?}
?};
{? _wyn & _bud & ~__popktm & (M.M_ATR_B().ADD%*2)=0 || exec('akt_wgwz','!zws_par_kmtr',HELP.ADD='T' | D_HELP.POPM) ?};
{? _wyn || exec('ae_mgat','!zws_par_kmtr') ?};
_wyn


\zbd_modm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: Przed wyswietleniem zmiennej do odmiany w kartotece material
::  OLD: \zbd_modm/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
exec('bd_modm','!zws_par_kmtr')


\zbe_modm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: Przed redakcja zmiennej do odmiany w kartotece material
::  OLD: \zbe_modm/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_zn:=exec('get_par','#parametr',143);
MODM.index('GPGK');
{? _zn='B'
 | _zn='G' & M.MGR=null()
 | _zn='P' & M.MGRP=null()
 | _zn='O' & M.MGAT=null()
|| 0
|| {? _zn='G' || MODM.prefix(M.MGR,null(),null())
   |? _zn='P' || MODM.prefix(null(),M.MGRP,null())
   |? _zn='O' || MODM.prefix(null(),null(),M.MGAT)
   || MODM.prefix(null(),null(),null())
   ?};
   1
?}


\zf3_modm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: Wyswietlenie slownika dla zmiennej do odmiany w kartotece material
::  OLD: \zf3_modm/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ZMIENNE.MODM:='';
{? MODM.select
|| M.MODM:=MODM.ref();
   ZMIENNE.MODM:=MODM.KOD
|| ZMIENNE.MODM:=M.MODM().KOD
?}


\zae_modm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: Po redakcji zmiennej do odmiany w kartotece material
::  OLD: \zae_modm/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_par:={? M.M_ATR_B<>null || {? M.M_ATR_B().ADD=2 || 'T' || 'P' ?} || 'N' ?};
_bud:=_par<>'N';
_czymodm:=exec('czywe_wz','!zws_par_kmtr','MODM',M.M_ATR_B().WZ,M.M_ATR_B().WZN);

{? ~_bud | (_bud & M.M_ATR_B<>null & ~_czymodm)
|| {? ZMIENNE.MODM=''
   || M.MODM:=null;
      _wyn:=1
   || exec('zbe_modm','!zws_par_kmtr');
      {? MODM.find_key(ZMIENNE.MODM,)
      || M.MODM:=MODM.ref();
         _wyn:=1
      |? MODM.find_key(ZMIENNE.MODM)
      || M.MODM:=MODM.ref();
         ZMIENNE.MODM:=M.MODM().KOD;
         _wyn:=1
      || FUN.info('Brak wartości w słowniku.'@);
         ZMIENNE.MODM
      ?}
   ?}
|? _bud & _par='T' & M.M_ATR_B=null
|| FUN.info('Brak przypisanego pola wzorca indeksu materiałowego.'@);
   _wyn:=0
|| {? ZMIENNE.MODM='' & M.M_ATR_B<>null
   || FUN.info('Parametry wzorca indeksu materiałowego wymagają wypełnienia pola ODMIANA.'@)
   || {? ZMIENNE.MODM=''
      || _wyn:=1
      ?};
      exec('zbe_modm','!zws_par_kmtr');
      {? ~_wyn & MODM.find_key(ZMIENNE.MODM,)
      || M.MODM:=MODM.ref();
         _wyn:=1
      ?};
      {? ~_wyn & MODM.find_key(ZMIENNE.MODM)
      || M.MODM:=MODM.ref();
         ZMIENNE.MODM:=M.MODM().KOD;
         _wyn:=1
      ?};
      {? ~_wyn
      || FUN.info('Brak wartości w słowniku.'@);
         ZMIENNE.MODM
      ?}
   ?}
?};
{? _wyn & _bud & ~__popktm & (M.M_ATR_B().ADD%*2)=0 || exec('akt_wgwz','!zws_par_kmtr',HELP.ADD='T' | D_HELP.POPM) ?};
_wyn


\pw_zatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed wyswietleniem wartosci atrybutu dla budowy strukturalnej
::   WY: 1 lub wyszarzenie
::  OLD: \pw_zatr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('findfnrd','color')


\pr_zatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przed redakcją wartości atrybutu dla budowy strukturalnej
::   WY: 0/1
::  OLD: \pr_zatr/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
{? M.M_ATR_B<>null
|| _nr:=#(cur_afld()+2);
   {? _nr<=exec('rozm_atr','mat_atr',M.M_ATR_B)
   || ($('POM.'+cur_afld()))():=($('M.M_ATR_B().SL_'+form(_nr,-2,0,'99')+'().NA'))()
   || ($('POM.'+cur_afld()))():=''
   ?};
   win_disp()
?};
0


\blbadseh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: wartosc poczatkowa BEER.BADSEH
::  OLD: \blbadseh/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
null


\pwbadseh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed wyswietleniem BEER.BADSEH
::  OLD: \pwbadseh/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',540101,2)='T'
|| ''
|| exec('findfnrd','color')
?}


\prbadseh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: przed redakcja BEER.BADSEH
::  OLD: \prbadseh/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',540101,2)='T'
|| 1
|| 0
?}


\pobadseh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: po redakcji BEER.BADSEH
::  OLD: \pobadseh/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
1


\istz_kodt_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem INTRAST.KODT
::   WY: kolor
::  OLD: \istz_kodt_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
INTRAST.KODT:='';
CN.cntx_psh();
CN.prefix();
_ok:=0;
M.cntx_psh;
{? M.KTM<>''
||
   M.index('MATKTM'); M.prefix(M.KTM,M.KTM); _ok:=M.first
?};
{? _ok & CN.seek(exec('daj_cn_ref','sklad',M.ref(),date()))
||
   INTRAST.KODT:=CN.KOD
?};
M.cntx_pop;
CN.cntx_pop();

exec('findfnrd','color')


\istz_opist_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem INTRAST.OPIST, ustawia wartosc INTRAST.OPIST, INTRAST.KODT
::   WY: kolor
::  OLD: \istz_opist_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
INTRAST.OPIST:='';
CN.cntx_psh();
CN.prefix();
_ok:=0;
M.cntx_psh;
{? M.KTM<>''
||
   M.index('MATKTM'); M.prefix(M.KTM,M.KTM); _ok:=M.first
?};
{? _ok & CN.seek(exec('daj_cn_ref','sklad',M.ref(),date()))
||
   INTRAST.OPIST:=CN.OPIS
?};
M.cntx_pop;
CN.cntx_pop();

exec('findfnrd','color')


\istz_jukod_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem INTRAST.JUKOD
::   WY: kolor
::  OLD: \istz_jukod_pw/ist01.fml
::----------------------------------------------------------------------------------------------------------------------
INTRAST.JUKOD:='';
CN.cntx_psh();
CN.prefix();
_ok:=0;
M.cntx_psh;
{? M.KTM<>''
||
   M.index('MATKTM'); M.prefix(M.KTM,M.KTM); _ok:=M.first
?};
{? _ok & CN.seek(exec('daj_cn_ref','sklad',M.ref(),date()))
||
   INTRAST.JUKOD:=CN.JU().KOD
?};
M.cntx_pop;
CN.cntx_pop();

exec('findfnrd','color')


\m_win_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Ustawia okno selekcji
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.RODZ='T'
|| M.win_sel('NL_WER')
|| M.win_sel('NL_WERU')
?}


\chk_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: kontrola wypelnienia pol dla materialu - tab. M
::  OLD: \chk_m/firma.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_ind_bud:={? M.M_ATR_B<>null || {? M.M_ATR_B().ADD=2 || 'T' || 'P' ?} || 'N' ?};
_bud:=_ind_bud='T' & {? HELP.ADD='T' || 1 || ATR.M_ATR_B<>null ?};

{? INFO.KRAJ<>null
|| {? ~_bud
   || {? M.CZY_CON='T'
      || _wyn:=__CHK.record(M,,'KTM','N','C_SYM','C_OPIS','P10','P11','J','MGR','VAT','WAL')
      || _wyn:=__CHK.record(M,,'KTM','N','J','VAT','MGR')
      ?}
   || {? M.CZY_CON='T'
      || _wyn:=__CHK.record(M,,'M_ATR_B','N','C_SYM','C_OPIS','P10','P11','J','MGR','VAT','WAL')
      || _wyn:=__CHK.record(M,,'M_ATR_B','N','J','VAT','MGR')
      ?}
   ?}
|| FUN.info('Niewypełniony kraj w stałych systemu.\nNie można określić słownika dla Stawek VAT.'@);
   _wyn:={? ~_bud  || 'KTM' || 'M_ATR_B' ?}
?};
{? _wyn='' & -(1+menu_txt())<>'p'
|| {? (_ind_bud='T' | (_ind_bud='P' & ~__popktm)) & M.M_ATR_B<>null & (M.M_ATR_B().ADD%*2)=0
   || M.KTM:=exec('readwzbs','!zws_par_kmtr','KTM','WZ')
   ?};
   _ktm:=M.KTM;
   M.cntx_psh();
   M.clear();
   M.index('MATKTM');
   M.prefix(_ktm,_ktm);
   {? M.first()
   ||
      FUN.info({? M.RODZ='T' || {? M.A='T' || 'Istnieje już aktywny materiał z indeksem: %1.'@[_ktm]
                                           || 'Istnieje już nieaktywny materiał z indeksem: %1.'@[_ktm] ?}
                             || 'Istnieje już usługa z indeksem: %1.'@[_ktm] ?}
         +{? M.M_ATR_B<>null || '\nNależy skorzystać z opcji Atrybuty.'@ || '' ?});
      _wyn:={? ~_bud || 'KTM' || 'M_ATR_B' ?}
   ?};
   M.cntx_pop
?};
{? _wyn='' & -(1+menu_txt())='p'
||
   _wyn:=exec('m_kody_chk','kody_kresk',M.ref(),M.KTM,M.KODK)
?};
{? _wyn='' & M.CZY_CON='T'
|| M.cntx_psh();
   _ref:=M.ref();
   M.index('C_SYM'); M.prefix(M.C_SYM,);
   {? M.first() & (-menu_txt()<>'popraw' | _ref<>M.ref())
   || FUN.info({? M.RODZ='T' || {? M.A='T' || 'Istnieje już aktywny materiał o symbolu\ndla controllingu: %1 (index: %2).'@[M.C_SYM,M.KTM]
                                           || 'Istnieje już nieaktywny materiał o symbolu\ndla controllingu: %1 (index: %2).'@[M.C_SYM,M.KTM] ?}
                             || 'Istnieje już usługa o symbolu\ndla controllingu: %1 (index: %2).'@[M.C_SYM,M.KTM] ?});
      _wyn:='C_SYM'
   ?};
   M.cntx_pop()
?};
:: dane do paragonu
{? M.FIS_KTM<>''
||
   _par_fis:=exec('get','#params',300161,1);
   {? +M.FIS_KTM>_par_fis
   ||
      FUN.info('Opis materiału/usługi na paragonie fiskalnym nie może przekroczyć %1 znaków.'@[$_par_fis]);
      _wyn:='FIS_KTM'
   ?};
   {? _wyn=''
   || _m_ktm:=exec('chk_fis_ktm','!zws_par_kmtr',M.ref,M.FIS_KTM,0);
      {? _m_ktm<>''
      || FUN.info('Podany opis pozycji paragonu jest przypisany do indeksu\n%1.'@[_m_ktm]);
         _wyn:='FIS_KTM'
      ?}
   ?}
?};
:: waga netto brutto
{? _wyn='' & M.WN<0
||
   FUN.info('Waga netto musi być większa lub równa zero.'@);
   _wyn:='WN'
?};
{? _wyn='' & M.WB<0
||
   FUN.info('Waga brutto musi być większa lub równa zero.'@);
   _wyn:='WB'
?};
{? _wyn='' & M.WN>0 & M.WB>0 & M.WN>M.WB
||
   FUN.info('Waga brutto musi być większa od wagi netto.'@);
   _wyn:='WB'
?};
{? _wyn='' & (M.f_active()=1 | M.f_active()=3) & FILTER.T_WPM*M.R=0
||
   FUN.info('Wprowadzone dane nie spełniają warunków filtra programowego.'@);
   _wyn:='R'
?};
{? _wyn='' & (M.f_active()=2 | M.f_active()=3) & ~M.f_test()
||
   FUN.info('Wprowadzone dane nie spełniają warunków filtra użytkownika.\n'
    'Indeks zostanie dodany, lecz nie będzie widoczny dla aktualnych ustawień filtra.\n'
    'Należy zmienić warunki filtra użytkownika.'@);
   _wyn:=''
?};
{? _wyn='' & ZAKR.R_PROD='T'
|| {? M.R='S' | M.R='H'
   || FUN.info('Wprowadzone dane nie spełniają warunków ograniczenia dziedziny.'@);
      _wyn:='R'
   ?}
?};
{? _wyn='' & ZAKR.R_KOMP='T'
||
   {? M.R='W' | M.R='H'
   || FUN.info('Wprowadzone dane nie spełniają warunków ograniczenia dziedziny.'@);
      _wyn:='R'
   ?}
?};

{? _wyn='' & M.TEMP_DO<M.TEMP_OD
|| FUN.info('Nieprawidłowy zakres temperatur.'@);
   _wyn:='TEMP_DO'
?};
:: sprawdzenie unikalnosci kodu M.KODK i MKODK.KODK dla MKODK.IL>0
{? _wyn='' & M.KODK<>'' & ~exec('unik_ean','kody_kresk','M',M.KODK,{? -(1+menu_txt())<>'p' || null || M.ref() ?})
||
   FUN.info('Podany kod kreskowy jest już wykorzystywany w systemie.\nNależy podać inny.'@);
   _wyn:={? BEER.EANP || 'KTM' || 'KODK' ?}
?};
:: sprawdzenie wypelnienia pola kod kreskowy w przypadku przypisanych kodow z kodami kreskowymi i il.zbiorcza
{? _wyn='' & (1+menu_txt())='P' & var_pres('__wsenv')<0 & cur_tab.name()='material' & M.KODK=''
|| MKODK.index('M');
   MKODK.prefix(M.ref());
   {? MKODK.first()
   || {!
      |? {? MKODK.IL>0 & MKODK.KODK<>''
         || FUN.info('Dla indeksu zostały przypisane kody kreskowe z określoną ilością zbiorczą.\nNależy podać kod kreskowy.'@);
            _wyn:={? BEER.EANP || {? ~_bud || 'KTM' || 'M_ATR_B' ?} || 'KODK' ?};
            0
         || MKODK.next()
         ?}
      !}
   ?}
?};
{? _wyn='' & {? HELP.ADD='T' || 1 || ATR.M_ATR_B<>null & M.M_ATR_B<>null ?}
|| _wyn:=exec('chk_m_atr','!zws_par_kmtr')
?};

_czymgat:=exec('czywe_wz','!zws_par_kmtr','MGAT',M.M_ATR_B().WZ,M.M_ATR_B().WZN);
_czymodm:=exec('czywe_wz','!zws_par_kmtr','MODM',M.M_ATR_B().WZ,M.M_ATR_B().WZN);

{? _wyn='' & _bud & ATR.M_ATR_B<>null & M.M_ATR_B<>null & _czymgat & ZMIENNE.MGAT=''
|| FUN.info('Parametry atrybutu wymagają wypełnienia pola gatunek.'@); _wyn:='MGAT'
?};
{? _wyn='' & _bud & ATR.M_ATR_B<>null & M.M_ATR_B<>null & _czymodm & ZMIENNE.MODM=''
|| FUN.info('Parametry atrybutu wymagają wypełnienia pola gatunek.'@); _wyn:='MODM'
?};

:: Kontrola pól, które przychodzą przez webservice, a w oknie są np. jako radio-button albo check-box
{? _wyn=''
|| {? M.RODZ='T' & M.R=''
   || FUN.emsg('Należy wypełnić pole \'Rodzaj materiału\'.');
      _wyn:='R'
   |? 'HWPS'*M.R=0
   || FUN.emsg('Rodzaj materiału musi mieć wartość: H-wyrób zewnętrzny, W-wyrób got., P-półprodukt, S-surowiec.'@);
      _wyn:='R'
   ?}
?};
:: Kontrola wymiarów i wagi paczki
{? _wyn=''
|| {? M.TR_L>0
   || {? M.TR_W<=0 || FUN.info('Nieprawidłowe wymiary paczki.\nNależy podać wszystkie albo żadnego.'@); _wyn:='TR_W'
      |? M.TR_H<=0 || FUN.info('Nieprawidłowe wymiary paczki.\nNależy podać wszystkie albo żadnego.'@); _wyn:='TR_H'
      ?}
   |? M.TR_W>0
   || {? M.TR_L<=0 || FUN.info('Nieprawidłowe wymiary paczki.\nNależy podać wszystkie albo żadnego.'@); _wyn:='TR_L'
      |? M.TR_H<=0 || FUN.info('Nieprawidłowe wymiary paczki.\nNależy podać wszystkie albo żadnego.'@); _wyn:='TR_H'
      ?}
   |? M.TR_H>0
   || {? M.TR_L<=0 || FUN.info('Nieprawidłowe wymiary paczki.\nNależy podać wszystkie albo żadnego.'@); _wyn:='TR_L'
      |? M.TR_W<=0 || FUN.info('Nieprawidłowe wymiary paczki.\nNależy podać wszystkie albo żadnego.'@); _wyn:='TR_W'
      ?}
   ?}
?};
{? _wyn=''
|| {? M.TR_L<0  || FUN.info('Wymiar nie może być liczbą ujemną.'@); _wyn:='TR_L'
   |? M.TR_W<0  || FUN.info('Wymiar nie może być liczbą ujemną.'@); _wyn:='TR_W'
   |? M.TR_H<0  || FUN.info('Wymiar nie może być liczbą ujemną.'@); _wyn:='TR_H'
   |? M.TR_KG<0 || FUN.info('Waga nie może być liczbą ujemną.'@); _wyn:='TR_KG'
   ?}
?};
{? _wyn='' & M.J2<>null() & M.WS2<=0
|| FUN.info('Dla drugiej jednostki ewidencyjnej należy podać przelicznik większy od zera.'@); _wyn:='WS2'
?};
{? _wyn='' & M.TWD<0
|| FUN.info('Ilość dni dla terminu ważności powinna być większa lub równa zero.'@); _wyn:='TWD'
?};
:: ustawienie ST.DOKL, ST.DOKL_C, ST.DOKL_S, ST.DOKL_Z
{? _wyn='' || exec('doklwg_m','material') ?};

_wyn


\chk_fis_ktm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [$12.10]
:: OPIS: sprawdza unikalnosc nazwy na paragonie
::   WE: _a-M.ref
::       _b-nazwa na paragonie
::       _c-=0-sprawdzanie od strony M, =1-sprawdzanie od strony M_SV
::       _d-=0-nie sprawdzac zapisow tymczasowych,=1-sprawdzac zapisy tymczasowe
::   WY: tresc komunikatu jesli brak unikalnosci
::  OLD: \chk_fis_ktm/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_d')<>type_of(1) || _d:=0 ?};

_wyn:='';
_cur_ref:=_a;
_fis_ktm:=_b;
{? _fis_ktm='' || return(_wyn) ?};
_m_ktm:='';
_sprfktm:=1;
{? -(1+menu_txt())='p' & _c=0
||
   M_SV.cntx_psh;
   M_SV.index('OD'); M_SV.prefix('0',M.ref);
   _sprfktm:=~M_SV.first;
   M_SV.cntx_pop
?};
{? _sprfktm
||
   M.cntx_psh();
   M.index('FIS_KTM');
   M.prefix(_fis_ktm,_fis_ktm);
   {? M.first()
   ||
      {!
      |?
         _m_ktm:=M.KTM+' w kartotece '+{? M.RODZ='T' || 'materiałowej' || 'usługowej' ?};
         M_SV.cntx_psh;
         M_SV.index('OD'); M_SV.prefix('0',M.ref);
         {? ~M_SV.first
         ||
            {? -(1+menu_txt())='p' | _d
            || {? _cur_ref<>M.ref() || _wyn:=_m_ktm ?}
            || _wyn:=_m_ktm
            ?}
         ?};
         M_SV.cntx_pop;
         _wyn='' & M.next
      !}
   ?};
   {? _wyn=''
   ||
      M_SV.cntx_psh;
      M_SV.index('FIS_KTM'); M_SV.prefix(_fis_ktm,_fis_ktm);
      {? M_SV.first
      ||
         {!
         |?
            {? M_SV.STATUS='0' | _d & M_SV.STATUS='1'
            ||
               _m_ktm:=M_SV.M().KTM+' w kartotece '+{? M.RODZ='T' || 'materiałowej' || 'usługowej' ?};
               {? _cur_ref<>M.ref() || _wyn:=_m_ktm ?}
            ?};
            _wyn='' & M_SV.next
         !}
      ?};
      M_SV.cntx_pop
   ?};
   M.cntx_pop()
?};
_wyn


\czywe_wz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: sprawdza czy podane pole jest we wzorcu WZ lub WZN
::   WE: _a - pole
::       _b - wzorzec kodu
::       _c - wzorzec nazwy
::   WY: 1 - jest 0 - nie ma
::  OLD: \czywe_wz/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------

_wyn:=0;

_wzk:=STR.gsub(_b,'s'+_a+'s','');
_wzn:=STR.gsub(_c,'s'+_a+'s','');

_wyn:=(_wzk+_wzn)*_a;

_wyn


\be_mgr_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przed edycja rodzaju grupy
::  OLD: \be_mgr_r/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? _wyn=1 & POMOC.RODZ<>''
||
   _wyn:=0
||
   M.cntx_psh();
   M.index('MGR');
   M.prefix(MGR.ref());
   {? M.first() & (1+menu_txt())<>'D'
   || FUN.info({? MGR.RODZ='T' || 'Ta grupa zawiera już materiały.\nZmiana rodzaju grupy niemożliwa.'@
                               || 'Ta grupa zawiera już usługi.\nZmiana rodzaju grupy niemożliwa.'@ ?});
      _wyn:=0
   ?};
   M.cntx_pop()
?};
_wyn


\ae_mgr_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po edycji rodzaju grupy
::  OLD: \ae_mgr_r/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? MGR.RODZ<>'T' & MGR.RODZ<>'U'
|| FUN.info('Dozwolone wartości: T lub U.'@);0
|| {? MGR.RODZ='U' || MGR.DOKL_C:=2 ?};
   win_disp();
   1
?}


\ae_mgr_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: kontrola zakresu dokladnosci dla grupy (0-10)
::  OLD: \ae_mgr_d/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? MGR.DOKL<0 | MGR.DOKL>10 || FUN.info('Dopuszczalny zakres dla dokładności: 0 - 10.'@);0 || 1 ?}


\pomgpr_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: po MGR.PR_M
::  OLD: \pomgpr_m/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? MGR.PR_M<0 || FUN.info('Procent nie może być liczbą ujemną.'@); 0
|? MGR.PR_M>=100 || FUN.info('Procent powinien być liczbą mniejszą od 100.'@); 0
|| 1
?}


\pomgpr_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: po MGR.PR_N
::  OLD: \pomgpr_n/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? MGR.PR_N<0 || FUN.info('Procent nie może być liczbą ujemną.'@); 0
|? MGR.PR_N>=100 || FUN.info('Procent powinien być liczbą mniejszą od 100.'@); 0
|| 1
?}


\mgr_kolor_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Przed wyswietl pola tabeli MGR.KOLOR
::   WY: String koloru
::  OLD: \mgr_kolor_bd/wsp_mag.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=MGR.KOLOR+','+MGR.KOLOR;
_wyn


\pwdoklc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed wyswietleniem pola MGR.DOKL_C
::  OLD: \pwdoklc/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? MGR.RODZ='T'
|| 1
|| exec('findfnv','#color')
?}


\prdoklc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: przed redakcja pola MGR.DOKL_C
::   WY: 0/1
::  OLD: \prdoklc/defin.fml
::----------------------------------------------------------------------------------------------------------------------
MGR.RODZ='T'


\ae_mgrdc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: kontrola zakresu dokladnosci dla grupy (0-10)
::  OLD: \ae_mgrdc/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? MGR.DOKL_C<0 | MGR.DOKL_C>10 || FUN.info('Dopuszczalny zakres dla dokładności: 0 - 10.'@); 0 || 1 ?}


\beformgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed edycja MGR
::  OLD: \beformgr/defin.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.KODMGR:=MGR.KOD;
1


\aftermgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po edycji MGR
::  OLD: \aftermgr/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_msk:=TAP.names();
TAP.cntx_psh();
{? _msk.first()
|| TAR.index('KOD');
   TAR.prefix();
   {? TAR.first()
   || {!
      |? {? _msk.first()
         || {!
            |? TAP.use(_msk.NAME);
               TAP.index('TMGR');
               TAP.prefix(TAR.ref(),MGR.ref());
               {? TAP.first()
               || {!
                  |? TAP.OP:={? TAP.MGR || TAP.MGR().KOD+{? TAP.MGRP || ' - '+TAP.MGRP().KOD || '' ?} || '' ?};
                     TAP.put(1);
                     TAP.next()
                  !}
               ?};
               _msk.next()
            !}
         ?};
         TAR.next()
      !}
   ?}
?};
TAP.cntx_pop();
obj_del(_msk);
exec('aktm_atr','!zws_par_kmtr');
1


\del_mgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja przed usun dla grup materialowych MGR - sprawdza czy sa powiazane podrupy MGRP
::  OLD: \del_mgr/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
{? MGR.count()>0
|| FUN.info('Grupa jest powiązana w systemie.\nUsunięcie niemożliwe.'@);0
||
   MGRP.index('MGR');
   MGRP.prefix(MGR.ref());
   {? MGRP.first()
   ||
      {? FUN.ask('Istnieją powiązane podgrupy. Usunąć?'@)
      ||
         {! |? MGRP.del()!}; 1
      || 0
      ?}
   || 1
   ?}
?}


\mgr_podg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: podgrupy dla grupy materialowej
::  OLD: \mgr_podg/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
_helpmgr:=HELP.MGR;
HELP.MGR:=MGR.ref();
MGRP.cntx_psh();
MGRP.index('MGR');
MGRP.prefix(MGR.ref());
MGRP.win_sel('WER');
MGRP.hdr_sel();
MGRP.hdr_sel(': '+MGR.KOD);
MGRP.select();
MGRP.cntx_pop();
HELP.MGR:=_helpmgr;
''


\mgr_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wyswietla materialy nalezace do grupy materialowej
::  OLD: \mgr_m/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
:: Zapamiętanie wartości zmiennych
_cntx:=obj_new('ZAKR_MATU','DHELP_POPM','POMOC_RODZ','POMOC_MGR'
              ,'POMOC_DOKL','POMOC_DOKLC','POMOC_DOKLS','POMOC_DOKLZ');
_cntx.ZAKR_MATU:=ZAKR.MATU;
_cntx.DHELP_POPM:=D_HELP.POPM;
_cntx.POMOC_RODZ:=POMOC.RODZ;
_cntx.POMOC_MGR:=POMOC.MGR;
_cntx.POMOC_DOKL:=POMOC.DOKL;
_cntx.POMOC_DOKLC:=POMOC.DOKL_C;
_cntx.POMOC_DOKLS:=POMOC.DOKL_S;
_cntx.POMOC_DOKLZ:=POMOC.DOKL_Z;

:: Ustawienie wartości zmiennych
ZAKR.MATU:='A';
D_HELP.POPM:=1;
POMOC.RODZ:=MGR.RODZ;
POMOC.MGR:=MGR.ref();
POMOC.DOKL:=MGR.DOKL;
POMOC.DOKL_C:=MGR.DOKL_C;
POMOC.DOKL_S:=MGR.DOKL_S;
POMOC.DOKL_Z:=MGR.DOKL_Z;

:: Redakcja materiałów/usług dla grupy
M.cntx_psh(); MGR.cntx_psh();

:: Zamienić na nowe okienka
:: Ustawienie okna wertowania tabeli M
exec('m_win_sel','!zws_par_kmtr');

M.index('AMGM');
M.prefix('T',POMOC.RODZ,MGR.ref());
M.hdr_sel();
M.hdr_sel(' dla grupy: '+MGR.KOD+' - '+MGR.NAZ);
_ind_mat:={? M.M_ATR_B<>null || {? M.M_ATR_B().ADD=2 || 'T' || 'P' ?} || 'N' ?};
M.select();

M.cntx_pop(); MGR.cntx_pop();

:: Przywrócenie wartości zmiennych
_cntx.ZAKR_MATU==ZAKR.MATU;
_cntx.DHELP_POPM==D_HELP.POPM;
_cntx.POMOC_RODZ==POMOC.RODZ;
_cntx.POMOC_MGR==POMOC.MGR;
_cntx.POMOC_DOKL==POMOC.DOKL;
_cntx.POMOC_DOKLC==POMOC.DOKL_C;
_cntx.POMOC_DOKLS==POMOC.DOKL_S;
_cntx.POMOC_DOKLZ==POMOC.DOKL_Z;
''


\mgr_zmien_kolor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Zmienia kolor na aktualnie zaznaczonej grupie materialowej
::  OLD: \mgr_zmien_kolor/wsp_mag.fml
::----------------------------------------------------------------------------------------------------------------------
exec('mgr_kol_zmien','!zws_par_kmtr',$MGR.ref());
~~


\mgr_kol_zmien
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Zmienia kolor grupie materialowej podanej w parametrze
::   WE: _a - Ref sql grupy materialowej - $MGR.ref()
::       _b - kolor na ktory chcemy zmienic, jesli nie podany wyswietla okienko wyboru
::  OLD: \mgr_kol_zmien/wsp_mag.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0
|| return()
?};
MGR.cntx_psh();
MGR.clear();
{? MGR.seek(_a,MGR.name())
|| {? _=2
   || MGR.KOLOR:=_b;
      MGR.put()
   || exec('mgr_kolor_f3','!zws_par_kmtr');
      MGR.put()
   ?}
?};
MGR.cntx_pop();
~~


\mgr_kolor_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Formula na F3 pola MGR.KOLOR
::  OLD: \mgr_kolor_f3/wsp_mag.fml
::----------------------------------------------------------------------------------------------------------------------
_q:=exec('edit_color','#edit',MGR.KOLOR);
{? _q<>''
|| MGR.KOLOR:=_q
?};
~~


\chk_mgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja rekord po dla tabeli MGR - grupy materialow
::  OLD: \chk_mgr/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=__CHK.record(MGR,,'KOD','NAZ','RODZ');
{? _wyn=''
||
   _rodz:=MGR.RODZ;
   _kod:=MGR.KOD;
   _ref:=MGR.ref();
   _ndx:=MGR.ndx_tmp(,,'RODZ',,,'KOD',,,'KOD',,);
   MGR.cntx_psh();
   MGR.index(_ndx);
   MGR.prefix(_rodz,_kod,_kod);
   {? MGR.first()
   ||
      {!
      |?
         {? MGR.ref()<>_ref | -(1+menu_txt)='d'
         || FUN.info({? _rodz='T'
                     || 'Istnieje już grupa materiałowa z kodem %1.'@[_kod]
                     || 'Istnieje już grupa usługowa z kodem %1.'@[_kod]
                     ?});
            _wyn:='KOD'
         ?};
         _wyn='' & MGR.next()
      !}
   ?};
   MGR.ndx_drop(_ndx);
   MGR.cntx_pop()
?};
{? _wyn=''
|| M.cntx_psh();
   M.index('MGR');
   M.prefix(MGR.ref());
   {? M.first()
   || {!
      |? _put:=0;
         {? M.PR_N=0 & MGR.PR_N<>0 || M.PR_N:=MGR.PR_N; _put:=1 ?};
         {? M.PR_M=0 & MGR.PR_M<>0 || M.PR_M:=MGR.PR_M; _put:=1 ?};
         {? _put || M.put(1) ?};
         M.next()
      !}
   ?};
   M.cntx_pop()
?};
_wyn


\pr_dolm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: przed dolaczeniem indeksu materialowego
::  OLD: \pr_dolm/wzorsl.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__popktm');
exec('m_win_edit','material');
M.btn_eopt('REDA','BUDOWA','state=normal');
M.btn_eopt('REDUA','BUDOWA','state=normal');
__popktm:=0;
GRSL.END:=0;
HELP.MGR:=null;
HELP.ADD:='T';
{? -(1+menu_txt())<>'d' & M.M_ATR_B<>null
|| {! _i..10 |! ($('POM.SYM'+form(_i,-2,0,'99')))():=($('M.M_ATR_B().SL_'+form(_i,-2,0,'99')+'().NA'))() !}
|| {! _i..10 |! ($('POM.SYM'+form(_i,-2,0,'99')))():='' !}
?};
ATR.CZYSADKC:=1;
ATR.M_ATR_B:=null;
ATR.MJS:='M_ATR';
ZMIENNE.MGAT:=ZMIENNE.MODM:='';
BEER.BADSEH:=null();
BEER.BNFTT:=null();
BEER.KK:=null();
UNPAR.P10:=UNPAR.P11:='';
ZRODZO.WYPDOM:='N';
M.efld_opt(M.win_edit('?'),'enable=1',ZRODZO,'WYPDOM');
DISP.KTM:='';
DISP.NKTM:='';
1


\po_dolm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: po dolaczeniu indeksu materialowego
::   WY: 1
::  OLD: \po_dolm/wzorsl.fml
::----------------------------------------------------------------------------------------------------------------------
exec('doklwg_m','material');

:: aktualizacja kodow materialowych
exec('m_kody_akt','kody_kresk',M.ref(),M.KTM,M.N,M.KODK);
:: aktualizacja pozycji zestawów badań jeżeli materiał posiada domyślny zestaw badań
exec('akt_bads','!zws_par_kmtr',M.ref(),BEER.BADSEH);
{? M.RODZ='T' & BEER.BADSEH<>null()
|| exec('badmseh_akt','!zws_par_kmtr',M.ref(),BEER.BADSEH)
?};
exec('bnftt_akt','!zws_par_kmtr',M.ref(),BEER.BNFTT);
exec('kk_akt','!zws_par_kmtr',M.ref(),BEER.KK);
{? M.IDMOB='A'
|| M_ATR.cntx_psh();
   M_ATR.clear();
   {? M_ATR.seek(M.M_ATR)
   || M_ATR.IDMOB:='T';
      M_ATR.put(1)
   ?};
   M_ATR.cntx_pop();
   {? FUN.ask('Dla danego indeksu wybrano identyfikację wg Atrybutów dostawy.\n'
              'Czy wygenerować kody identyfikujące zestawy atrybutów (wg wprowadzonych dla danego wzorca atrybutów)?'@)
   || exec('automkod','!zws_par_kmtr',M.ref(),M.M_ATR)
   ?}
?};
:: aktualzacja filtra (jezeli aktywny)
{? M.f_active<>0 || _ref:=M.ref(); M.f_add(); M.f_rfresh(); M.f_seek(_ref) ?};
1


\akt_bads
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: aktualizacja tabeli M_DOD
::   WE: _a - ref M
::       _b - zestaw badan
::  OLD: \akt_bads/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
_firma:=exec('firma','ustawienia');
M_DOD.cntx_psh();
M_DOD.index('M_DOD');
M_DOD.prefix(_firma,_a);
{? M_DOD.first()
|| M_DOD.BADSEH:=_b;
   {? exec('mdod_puste','!zws_par_kmtr')
   || M_DOD.del()
   || M_DOD.put(1)
   ?}
|? _b<>null()
|| M_DOD.blank();
   M_DOD.M:=_a;
   M_DOD.FIRMA:=_firma;
   M_DOD.BADSEH:=_b;
   M_DOD.add(1)
?};
M_DOD.cntx_pop();
{? _b<>null
|| BADMSEH.cntx_psh();
   BADMSEP.cntx_psh();
   BADSEP.cntx_psh();
   BADMSEH.index('MGRMBAD');
   BADMSEH.prefix(null,_a,_b);
   {? ~BADMSEH.first()
   || BADMSEH.blank();
      BADMSEH.MGR:=null;
      BADMSEH.M:=_a;
      BADMSEH.BADSEH:=_b;
      BADMSEH.STATS_Z:=BADMSEH.BADSEH().STATS_Z;
      BADMSEH.STATS_O:=BADMSEH.BADSEH().STATS_O;
      BADMSEH.STATS_N:=BADMSEH.BADSEH().STATS_N;
      BADMSEH.OPIS:='Dodano automatycznie.';
      {? BADMSEH.add(1)
      || _badmseh:=BADMSEH.ref();
         BADSEP.index('SEHPAR_');
         BADSEP.prefix(_b);
         {? BADSEP.first()
         || {!
            |? BADMSEP.blank();
               BADMSEP.BADMSEH:=_badmseh;
               BADMSEP.BADSEP:=BADSEP.ref();
               BADMSEP.BADPAR:=BADSEP.BADPAR;
               BADMSEP.SOURCE:=BADSEP.SOURCE;
               BADMSEP.VALLOW:=BADSEP.VALLOW;
               BADMSEP.VALHIGH:=BADSEP.VALHIGH;
               BADMSEP.VALTN:=BADSEP.VALTN;
               BADMSEP.add(1);
               BADSEP.next()
            !}
         ?}
      ?}
   ?};
   BADMSEH.cntx_pop();
   BADMSEP.cntx_pop();
   BADSEP.cntx_pop()
?};
~~


\badmseh_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PeKa [12.30]
:: OPIS: Dodaje materiały do zestawu badań materiałów
::   WE: _a - M.refernece
::       _b - Domyślny zestaw badań
::   WY: 1-dopisanie powiodlo sie, 0-wpp
::  OLD: \badmseh_akt/mat_atr.fml
::----------------------------------------------------------------------------------------------------------------------
_return:=0;

BADMSEH.cntx_psh();
BADMSEP.cntx_psh();
BADMSEH.clear();
BADMSEH.blank();
BADMSEH.M      :=_a;
BADMSEH.BADSEH :=_b;
BADMSEH.STATS_Z:=BADSEH.STATS_Z;
BADMSEH.STATS_O:=BADSEH.STATS_O;
BADMSEH.STATS_N:=BADSEH.STATS_N;
BADMSEH.OPIS   :='Dodano automatycznie.';
_return:=BADMSEH.add(1);
{? _return
|| _badmseh:=BADMSEH.ref();
:: przepisujemy domyslne parametry
   BADSEP.cntx_psh();
   BADSEP.index('SEHPAR_U');
   BADSEP.prefix(_b);
   {? BADSEP.first()
   || {!
      |? BADMSEP.blank();
         BADMSEP.BADMSEH:=_badmseh;
         BADMSEP.BADSEP:=BADSEP.ref();
         BADMSEP.BADPAR:=BADSEP.BADPAR;
         BADMSEP.SOURCE:=BADSEP.SOURCE;
         BADMSEP.VALLOW:=BADSEP.VALLOW;
         BADMSEP.VALHIGH:=BADSEP.VALHIGH;
         BADMSEP.VALTN:=BADSEP.VALTN;
         BADMSEP.add(1);
         BADSEP.next()
      !}
   ?};
   BADSEP.cntx_pop()
?};
BADMSEH.cntx_pop();
BADMSEP.cntx_pop();

_return


\automkod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.41]
:: OPIS: automatyczna generacja kodow na podstawie wprowadzonych zestawow atrybutow
::   WE: _a - ref M
::       _b - ref M_ATR
::  OLD: \automkod/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
DK_C.cntx_psh();
MKODK.cntx_psh();
DK_C.index('M_ATR');
DK_C.prefix(_b);
{? DK_C.first()
|| {!
   |? MKODK.index('RSQL');
      {? ~(DK_C.UZUP*'0') & ~MKODK.find_key($DK_C.ref(),$DK_C.ref(),_a)
      ||
         exec('mkodkadd','kody_kresk',_a,exec('mkodkKODK','kody_kresk',_a),$DK_C.ref())
      ?};
      DK_C.next()
   !}
?};
DK_C.cntx_pop();
MKODK.cntx_pop();
~~


\kodk_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: wartosc poczatkowa MKODK.M
::  OLD: \kodk_bl/tkod.fml
::----------------------------------------------------------------------------------------------------------------------
{? HELP.KODK<>'kh' & HELP.KODK<>'bl' || M.ref() || null ?}


\kodk_blk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: wartosc poczatkowa MKODK.KH
::  OLD: \kodk_blk/tkod.fml
::----------------------------------------------------------------------------------------------------------------------
{? HELP.KODK='kh'
|| KH.ref()
|? HELP.KODK='mkh'
|| MDOST.KH
|? HELP.KODK='bl'
|| DOKUM.KH
|| null
?}


\mkodk_ktm_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem MKODK.KTM
::   WY: kolor
::  OLD: \mkodk_ktm_pw/tkod.fml
::----------------------------------------------------------------------------------------------------------------------
_return:='';

{? var_pres('KOD',DEFINE)=type_of('')
||
   {? DEFINE.KOD<>''
   ||
      {? (-MKODK.KTM)=(-DEFINE.KOD)
      ||
         _return:=Color.fnd_kol('MKODK#01#02')
      |? (-MKODK.KTM)*(-DEFINE.KOD)
      ||
         _return:=Color.fnd_kol('MKODK#01#01')
      ?}
   ?}
?};

_return


\del_pkw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: przed usuń dla slownika PKWiU - sprawdza czy nie ma powiazan
::  OLD: \del_pkw/defin.fml
::----------------------------------------------------------------------------------------------------------------------
{? MPKW.count()>0
|| FUN.info('Pozycja jest powiązana z materiałem.\nUsunięcie niemożliwe.'@); 0
|| 1
?}


\chk_pkw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja rekord po dla tabeli podgrupy MGRP
::  OLD: \chk_pkw/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=__CHK.record(MPKW,,'KOD');
{? _wyn=''
||
   _kod:=MPKW.KOD;
   _ref:=MPKW.ref();
   MPKW.cntx_psh();
   _ndx:=MPKW.ndx_tmp(,,'KOD',,,'KOD',,);
   MPKW.index(_ndx);
   MPKW.prefix(_kod,_kod);
   {? MPKW.first()
   ||
      {!
      |?
         {? MPKW.ref()<>_ref | -(1+menu_txt)='d'
         || FUN.info('Istnieje już kod PKWiU %1.'@[_kod]); _wyn:='KOD'
         ?};
         _wyn='' & MPKW.next()
      !}
   ?};
   MPKW.ndx_drop(_ndx);
   MPKW.cntx_pop()
?};
_wyn


\bl_mgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: blank na wartosc poczatkowa
::  OLD: \bl_mgr/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
HELP.MGR


\del_mgrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: akcja przed usun dla podgrup materialowych MGRP
::  ODP: \del_mgrp/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? MGRP.count()>0
||
   FUN.info('Podgrupa jest powiązana w systemie.\nUsunięcie niemożliwe.'@);
   _wyn:=0
?};
_wyn


\chk_mgrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja rekord po dla tabeli podgrupy MGRP
::  OLD: \chk_mgrp/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
:: ze wzgledu na wzorce struktur dodano sprawdzenie powielenia kodu MGRP
_wyn:=
   {? form(MGRP.KOD)='' || FUN.info('Należy podać kod podgrupy.'@); 'KOD'
   |? form(MGRP.NAZ)='' || FUN.info('Należy podać nazwę podgrupy.'@); 'NAZ'
   || _kod:=MGRP.KOD; _ref:={? (1+menu_txt())='P' || MGRP.ref() || null ?};
      MGR.cntx_psh(); MGRP.cntx_psh();
      MGRP.index('KOD');
      MGRP.prefix(_kod,_kod);
      _wyn:={? MGRP.first() || _ref=null | _ref<>MGRP.ref() || 0 ?};
      _txt:={? _wyn=1 || {? MGRP.MGR().RODZ='T' || 'materiałowej: \"' || 'usługowej: \"' ?}+MGRP.MGR().NAZ+'\"' || '' ?};
      MGR.cntx_pop(); MGRP.cntx_pop();
      {? _wyn
      || FUN.info('Podany kod podgrupy już istnieje w grupie %1.\n'
          'Należy podać inny kod podgrupy.'@[_txt]); 'KOD'
      || ''
      ?}
   ?};
{? _wyn='' & 1+(-menu_txt())='p'
|| _msk:=TAP.names();
   MGR.cntx_psh();
   _mgr_kod:=MGRP.MGR().KOD;
   MGR.cntx_pop();
   TAP.cntx_psh();
   {? _msk.first()
   || TAR.index('KOD');
      TAR.prefix();
      {? TAR.first()
      || {!
         |? {? _msk.first()
            || {!
               |? TAP.use(_msk.NAME);
                  TAP.index('TMGR');
                  TAP.prefix(TAR.ref(),MGRP.MGR,MGRP.ref());
                  {? TAP.first()
                  || {!
                     |? TAP.OP:=_mgr_kod+' - '+MGRP.KOD;
                        TAP.put(1);
                        TAP.next()
                     !}
                  ?};
                  _msk.next()
               !}
            ?};
            TAR.next()
         !}
      ?}
   ?};
   TAP.cntx_pop();
   obj_del(_msk)
?};
{? _wyn='' & exec('wyp_lic','wyp')='T'
|| _wyn:=exec('rodzo_ra','!zws_par_kmtr')
?};
_wyn


\mgat_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: Dodawanie wartosci slownika gatunek
::  OLD: \mgat_add/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_zn:=exec('get_par','#parametr',142);
MGAT.blank();
{? _zn='G'
|| MGAT.MGR:=M.MGR
|? _zn='P'
|| MGAT.MGRP:=M.MGRP
?};
MGAT.win_edit('RED');
{? MGAT.edit()
||MGAT.add()
?}


\modm_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [12.30]
:: OPIS: Dodanie pozycji do kartoteki odmian
::  OLD: \modm_add/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
_zn:=exec('get_par','#parametr',143);
MODM.blank();
{? _zn='G'
|| MODM.MGR:=M.MGR
|? _zn='P'
|| MODM.MGRP:=M.MGRP
|? _zn='O'
|| MODM.MGAT:=M.MGAT
?};
MODM.win_edit('RED');
{? MODM.edit()
|| MODM.add()
?}


\pr_popm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przed redakcja materialu/uslugi
::  OLD: \pr_popm/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__popktm','__setw');
__popktm:=0;
:: Ustawienie okna redakcji
exec('m_win_edit','material');
{? M.f_active() & HELP.REFMAT<>null || M.f_seek(HELP.REFMAT) ?};
{? D_HELP.POPM
|| M.btn_eopt('REDA','BUDOWA','state=normal');
   M.btn_eopt('REDUA','BUDOWA','state=normal')
|| M.btn_eopt('REDA','BUDOWA','state=grayed');
   M.btn_eopt('REDUA','BUDOWA','state=grayed')
?};
__setw:={? M.SETW='P' || 2 || 1 ?};
DISP.KTM:=M.KTM;
DISP.NKTM:=M.N;
DISP.MGR:=M.MGR;
DISP.MGRP:=M.MGRP;
HELP.MGR:=M.MGR;
ATR.CZYSADKC:=exec('czysadkc','mat_atr',0);
ATR.M_ATR_B:=M.M_ATR_B;
ATR.MJS:='M_ATR';
BEER.BADSEH:=exec('FindInSet','#table','M_DOD','M_DOD',M.ref(),exec('firma','ustawienia'),"M_DOD.BADSEH",,,null());
BEER.BNFTT:=exec('FindInSet','#table','M_DOD','M_DOD',M.ref(),exec('firma','ustawienia'),"M_DOD.BNFTT",,,null());
BEER.KK:=exec('FindInSet','#table','M_DOD','M_DOD',M.ref(),exec('firma','ustawienia'),"M_DOD.KK",,,null());
HELP.ADD:='N';
ZRODZO.WYPDOM:={? M.MGRP<>null() & M.MGRP().M=(#M.ref()) || 'T' || 'N' ?};
ATR.M_ATRWIN:=M.M_ATR;
_enable:={? M.MGRP<>null() || 'enable=1' || ZRODZO.WYPDOM:='N'; 'enable=0' ?};
M.efld_opt(M.win_edit('?'),_enable,ZRODZO,'WYPDOM');
M.efld_opt(M.win_edit('?'),{? M.IDMOB='D' & (M.IDZP | ~exec('czymkodk','!zws_par_kmtr',M.ref()))
                           || 'enable=1'
                           || 'enable=0'
                           ?},,'IDZP');
1


\po_popm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: poprawa indeksu materialowego, obsluga zmiany indeksu w SM
::   WE: [_a] - 0(domyslnie) - po popraw 1-odtworz
::  OLD: \po_popm/wzorsl.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _a
|| DISP.MGR:=null;
   DISP.MGRP:=null
?};

_ktm:=M.KTM;
_nktm:=M.N;
_mgr:=M.MGR;
_mgrp:=M.MGRP;
_refm:=M.ref();
_zm_mgr:=#DISP.MGR<>#_mgr;
_zm_mgrp:=#DISP.MGRP<>#_mgrp;
exec('akt_bads','!zws_par_kmtr',M.ref(),BEER.BADSEH);
exec('bnftt_akt','!zws_par_kmtr',M.ref(),BEER.BNFTT);
exec('kk_akt','!zws_par_kmtr',M.ref(),BEER.KK);

exec('doklwg_m','material');
{? ~_a & exec('get','#params',600010,2)='T' & _zm_mgr
|| FUN.info('Uwaga. Zmieniono przypisanie grupy materiałowej dla indeksu materiałowego.\n'
    'Dla wersji wielofirmowej należy uruchomić funkcję aktualizacji grup materiałowych w kartotekach\n'
    'dla każdej obsługiwanej firmy.\n\n'
    'Funkcja dostępna w Obszarze roboczym: Materiały/Usługi, Funkcje>Aktualizuj grupy.'@)
?};

M.cntx_psh();
SM.cntx_psh();
BADMSEH.cntx_psh();
INP.cntx_psh();
PX_TEX.cntx_psh();

{? DISP.KTM<>_ktm | DISP.NKTM<>_nktm | _zm_mgr | _zm_mgrp | M.M_ATR_B<>null()
|| echo('Trwa aktualizacja kartotek ... dla %1'@[M.KTM]);
   _msk:=SM.names();
   _msk.clear();
   {? _msk.first()
   || {!
      |? SM.use(_msk.NAME);
         SM.index('SMM');
         SM.prefix(_refm);
         {? SM.first()
         || {!
            |? SM.KTM:=_ktm;
               SM.NKTM:=_nktm;
               SM.M_ATR:=SM.M().M_ATR_B;
               {! _wsk:=1..10 |! ($('SM.WAR'+form(_wsk,-2,0,'99')))():=($('SM.M().WAR'+form(_wsk,-2,0,'99')))() !};
               SM.MGR:=_mgr;
               SM.MGRP:=_mgrp;
               SM.put();
               SM.next()
            !}
         ?};
         _msk.next()
      !}
   ?};
   obj_del(_msk);
   _msk:=TAP.names();
   TAP.cntx_psh();
   {? _msk.first()
   || TAR.index('KOD');
      TAR.prefix();
      {? TAR.first()
      || {!
         |? {? _msk.first()
            || {!
               |? TAP.use(_msk.NAME);
                  TAP.index('TM');
                  TAP.prefix(TAR.ref(),_refm);
                  {? TAP.first()
                  || {!
                     |? TAP.OP:=TAP.M().KTM;
                        TAP.put(1);
                        TAP.next()
                     !}
                  ?};
                  _msk.next()
               !}
            ?};
            TAR.next()
         !}
      ?}
   ?};
   TAP.cntx_pop();
   obj_del(_msk);
   {? _zm_mgr
   || _msk:=INP.names();
      _msk.clear();
      {? _msk.first()
      || {!
         |? INP.use(_msk.NAME);
            INP.index('M');
            INP.prefix(_refm);
            {? INP.first()
            || {!
               |? {? (ref_name(INP.SC)+3)<>(INP.name()+3) || INP.SC:=null() ?};
                  INP.MGR:=_mgr;
                  INP.put(1);
                  INP.next()
               !}
            ?};
            _msk.next()
         !}
      ?};
      obj_del(_msk);
      _msk:=PX_TEX.names();
      _msk.clear();
      {? _msk.first()
      || {!
         |? PX_TEX.use(_msk.NAME);
            PX_TEX.index('MASYM');
            PX_TEX.prefix(_refm);
            {? PX_TEX.first()
            || {!
               |? {? PX_TEX.MGR=DISP.MGR | _a
                  || PX_TEX.MGR:=_mgr;
                     PX_TEX.put(1)
                  ?};
                  PX_TEX.next()
               !}
            ?};
            _msk.next()
         !}
      ?};
      obj_del(_msk)
   ?};
   echo()
?};
SM.cntx_pop();
M.cntx_pop();
BADMSEH.cntx_pop();
INP.cntx_pop();
PX_TEX.cntx_pop();

:: aktualizacja kodow materialowych
_dtzmtw:={? var_pres('__setw')>0 & __setw=1 & M.SETW='P'
         || tm_form(tm_stamp())
         || ''
         ?};
exec('m_kody_akt','kody_kresk',M.ref(),M.KTM,M.N,M.KODK,_dtzmtw);
:: aktualizacja kodow identyfikacyjnych
{? M.IDMOB='A'
|| M_ATR.cntx_psh();
   M_ATR.clear();
   {? M_ATR.seek(M.M_ATR)
   || M_ATR.IDMOB:='T';
      M_ATR.put(1)
   ?};
   M_ATR.cntx_pop()
?};
{? ~_a & M.f_active<>0 || _ref:=M.ref(); M.f_add(); M.f_rfresh(); M.f_seek(_ref) ?};
1


\m_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2006]
:: OPIS: przed usunieciem indeksu materialowego
::   WY: 1 - usunieto indeks, 0 - nie usunieto indeksu
::  OLD: \m_del/wzorsl.fml
::----------------------------------------------------------------------------------------------------------------------
_tow:=M.RODZ='T';
{? M.CZY_CON='T'
|| {? exec('m_sch','!zws_par_kmtr')
   || UD_POW.index('TAB'); UD_POW.prefix(XINFO.M_SCH().UD_TYP,'M',#M.ref());
      {? UD_POW.first()
      || {? _tow
         || FUN.info('Materiał jest użyty w schematach danych dla controllingu.'@)
         || FUN.info('Usługa jest użyta w schematach danych dla controllingu.'@)
         ?};
         return(0)
      ?}
   ?}
?};
_wyn:=0;
POM.RSQL:=$M.ref();
{? FUN.ask('Czy usunąć bieżący wiersz?'@)
||
   _sm_ns:=SM.names();
   _o_sm_ns:=OPAK_SM.names();
   do();
   exec('skl_usu','!zws_par_kmtr',M.ref());

:: dodatkowe kody
   exec('del_tpow','!zws_par_kmtr','MKODK','M',M.ref());
:: przeliczniki
   exec('del_tpow','!zws_par_kmtr','MJM','JM',M.ref());
:: materialy przypisane do magazynu
   exec('del_tpow','!zws_par_kmtr','MX','M',M.ref());
:: zamienniki towaru
   exec('del_ppow','!zws_par_kmtr','MZ',M.ref(),'M','MZ');
:: parametry wydrukow
   exec('del_ppow','!zws_par_kmtr','WYDRUKIL',M.ref(),'KTM_OD','KTM_DO');
:: opakowanie dla materialu
   exec('del_ppow','!zws_par_kmtr','M_OPAKOW',M.ref(),'M','OPAKOW');
:: domyslna stawka VAT
   exec('del_tpow','!zws_par_kmtr','M_KH_SV','MAT',M.ref());
:: tlumaczenia
   exec('del_tpow','!zws_par_kmtr','TRANSLAT','KOD',M.ref());
:: przypisanie do dostawcy
   exec('del_tpow','!zws_par_kmtr','MDOST','MREF',M.ref());
:: stany magazynowe
   exec('sm_del','!zws_par_kmtr',_sm_ns,M.ref());
:: zalaczniki
   exec('deladok','dokum','M');
:: przypisanie do zestawu badan
   M_DOD.index('M_DOD');
   M_DOD.prefix(exec('firma','ustawienia'),M.ref());
   {? M_DOD.first()
   || {!
      |? BADMSEH.index('M');
         BADMSEH.prefix(M.ref());
         {? BADMSEH.first()
         || {!
            |? BADMSEP.index('BADMHP');
               BADMSEP.prefix(BADMSEH.ref());
               {? BADMSEP.first() || {! |? BADMSEP.del() !} ?};
               BADMSEH.del()
            !}
         ?};
         {? M_DOD.BNFTT=null()
         || M_DOD.del()
         || M_DOD.BADSEH:=null();
            M_DOD.put(1);
            M_DOD.next()
         ?}
      !}
   ?};

   CON_DEF.index('CON_DEF6'); CON_DEF.prefix(M.ref());
   {? CON_DEF.first() || {! |? CON_DEF.del() !} ?};

   DOKUM.cntx_psh();
   DOKUM.index('DOKUM');
   DOKUM.prefix(REF.FIRMA,$M.ref);
   {? DOKUM.first()
   || undo('Rekord powiązany z załącznikami.\nUsunięcie niemożliwe.'@)
   |? M.count()<>0
   || undo();
      {? _tow
      || FUN.info('Materiał jest wykorzystywany w systemie.\nUsunięcie niemożliwe.'@)
      || FUN.info('Usługa jest wykorzystywana w systemie.\nUsunięcie niemożliwe.'@)
      ?}
   ?};
   DOKUM.cntx_pop();
:: sprawdzenie dla systemu WYPOSAZ
   {? M.RODZO().M=#M.ref()
   || undo('Materiał jest domyśnym dla rodzaju wyposażenia '
           '%1.\nUsunięcie niemożliwe.'@[M.RODZO().KOD])
   ?};
   {? do_state()=1
   || M.del();
      exec('doklwg_m','material');
      _wyn:=1
   ?};
   end()
?};
_wyn


\skl_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: Usunięcie struktur dla skladowych materialu
::       Uwaga: nie usuwa wystapien materialu jako skladowej
::   WE: _a - M.ref()
::  OLD: \skl_usu/mag_skl
::----------------------------------------------------------------------------------------------------------------------
{? exec('find_k_res','tech_head')
||
   M.cntx_psh(); TKTL.cntx_psh();
   TKTL.index('SKLAD');
   TKTL.prefix('T',_a,TPKTL.ref(),'N');
   {? TKTL.first()
   || {!
      |? _deleted:=exec('TKTL_usun','tech_head');
         _deleted & TKTL.first()
      !}
   ?};
   M.cntx_pop(); TKTL.cntx_pop()
?};
~~


\del_tpow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: usuwa rekordy powiazane wg indeksu
::   WE: _a - akronim tabeli
::       _b - akronim indeksu
::       _c - prefiks
::       [_d] - prefiks 2
::  OLD: \del_tpow/wzorsl.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=$(_a);
_ind:=$(_a+'.index('''+_b+''')');
{| _tab()
|! cntx_psh;
   clear;
   _ind();
   {? _=4 || prefix(_c,_d) || prefix(_c) ?};
   {? first() || {! |? del() !} ?};
   cntx_pop
|}


\del_ppow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: usuwa rekordy powiazane wg podanych pol
::   WE: _a - akronim tabeli
::       _b - pole do porownania
::       _c - pole do weryfikacji
::       [_d] - pole 2 do weryfikacji
::       ...
::       [_?] - pole ? do weryfikacji
::  OLD: \del_ppow/wzorsl.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=$(_a);
_len:=_-2;
_fld:=obj_new(_len);
{! _ii.._len |! _fld[_ii]:=$(_a+'.'+_[_ii+2]) !};

{| _tab()
|! cntx_psh;
   clear;
   {? first()
   || _ii:=1;
      {!
      |? {!
         |? {? _fld[_ii]()=_b
            || _next:=del();
               _ii:=1;
               0
            || _ii+=1;
               {? _ii<=_len
               || 1
               || _next:=next();
                  _ii:=1;
                  0
               ?}
            ?}
         !};
         _next
      !}
   ?};
   cntx_pop
|}


\sm_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2011]
:: OPIS: usuwanie zerowych SM dla wskazanego materialu
::   WE: _a - SM.names()
::       _b - M.ref()
::   WY: 0/1
::  OLD: \sm_del/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
SC.cntx_psh();
SM.cntx_psh();
{? _a.first()
||
   {!
   |?
      SM.use(_a.NAME);
      SM.index('SMM');
      SM.prefix(_b);
      {? SM.first()
      ||
         {!
         |?
            SC.use('stc__'+(_a.NAME+3));
            SC.index('SC');
            SC.prefix(SM.MAG,SM.M);
            {? SC.first()
            || _wyn:=0
            || {? SM.count()=0 || SM.del() ?}
            ?}
         !}
      ?};

      _wyn=1 & _a.next()
   !}
?};
SM.cntx_pop();
SC.cntx_pop();
_wyn


\m_trig_del_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [WW] [2011]
:: OPIS: Trigger przed usuń (ochrona złączeń nietrzymanych przez server - server trzyma tylko złączenia typu REFERENCE)
::       Nie dopuszcza do usunięcia rekordu, gdy jest wykorzystywany w innych tabelach
::   WY: 1 - usunięcie dozwolone, 0 - niedozwolone
::  OLD: \m_trig_del_b/wzorsl.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
::WYPOSAZ - wskazanie M jako domyślnego w polu RODZO.M (#M.ref())
{? _ok & M.RODZO().M=#M.ref() || _ok:=0 ?};
_ok


\m_trig_add_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.41]
:: OPIS: Trigger przed add dla tabeli M
::----------------------------------------------------------------------------------------------------------------------
M.KOLOR:=exec('kolor_rand','#color');
exec('M_trigger','!zws_par_kmtr')


\m_trig_put_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.41]
:: OPIS: Trigger przed put dla tabeli M
::----------------------------------------------------------------------------------------------------------------------
exec('M_trigger','!zws_par_kmtr')


\M_trigger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.41]
:: OPIS: Triggery dla tabeli M
::  OLD: \M/trigger.fml
::----------------------------------------------------------------------------------------------------------------------
:: Jeśli wyrób lub półfabrykat to ustawiam że materiał jest produktem
{? M.R='W' | M.R='P'
|| M.R_PROD:='T'
|| M.R_PROD:='N'
?};
:: Jeśli półfabrykat lub surowiec ustawiam ze materiał jest komponentem
{? M.R='P' | M.R='S'
|| M.R_KOMP:='T'
|| M.R_KOMP:='N'
?};
{? M.R='H'
|| M.R_OWN:='N'
|| M.R_OWN:='T'
?};
exec('oblMinMaxObj','transport_paczki',M);
1


\mgrp_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: Akcja Dolacz w MGRP
::  OLD: \rodz_add/wyprodzo.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rodzo_db','!zws_par_kmtr');
MGRP.win_edit('RED');
M.cntx_psh();
M.clear();
M.win_sel('SLO_M'); M.win_dict('SLO_M');
MGRP.blank();
POM.ATR_TYP:='C';
{? MGRP.edit("exec('chk_mgrp','!zws_par_kmtr')")
|| RODZO.add();
   {? RODZO.M<>0 & M.seek(RODZO.M,) & M.RODZO=null
   || M.RODZO:=RODZO.ref;
      M.put()
   ?}
?};
M.f_clear();
M.cntx_pop();
~~


\rodzo_db
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Przed dolacz RODZO
::  OLD: \rodzo_db/wyprodzo.fml
::----------------------------------------------------------------------------------------------------------------------
ZRODZO.M_M_ATR:=null();
ZRODZO.M:=null();
~~


\rodzo_ra
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Rekord po MGRP
::  OLD: \rodzo_ra/wyprodzo.fml
::----------------------------------------------------------------------------------------------------------------------
_odp:=chk_rec('KOD','NAZ');
{? _odp=''
||
   {? MGRP.M<>0
   || M.cntx_psh();
      M.clear();
      _mrodzo:={? M.seek(MGRP.M,)
               || M.MGRP
               || null()
               ?};
      M.cntx_pop()
   || _mrodzo:=MGRP.ref()
   ?};
   {? MGRP.ref()=_mrodzo | _mrodzo=null()
   ||
      {? (MGRP.M<>0) & (MGRP.M_ATR<>null())
      ||
::    sprawdzenie czy MGRP.M-->M_ATR zawiera wszystkie TAT z MGRP.M_ATR
         _odp:=exec('m_atr_1in2','wyp_head',MGRP.M_ATR,exec('rodzo_m_m_atr','!zws_par_kmtr',MGRP.M));
         {? _odp<>''
         || {? exec('rodzo_m_m_atr','!zws_par_kmtr',MGRP.M)=null()
            || _wyb:=FUN.choice('Do materiału domyślnego nie przypisano żadnego schematu atrybutów.'@,,
                                'Przypisz schemat wymagany'@,'Zmiana materiału'@);
               {? _wyb=1
               || M.cntx_psh();
                  M.clear();
                  M.seek(MGRP.M,);
                  M.M_ATR:=MGRP.M_ATR; M.put();
                  M.cntx_pop()
               |? _wyb=2
               || 'KTM'
               || 0
               ?}
            || FUN.emsg('W schemacie atrybutów dla materiału domyślnego dla tego '
                        'rodzaju wyposażenia brakuje następujących: \n%1'
                        '.\nTen materiał nie może być domyślnym dla tego rodzaju wyposażenia.'@[_odp]);
               'KTM'
            ?}
         || ''
         ?}
      || ''
      ?}
   || FUN.emsg('Wybrany materiał domyślny należy do innego rodzaju wyposażenia.\nWybierz inny.'@);
      MGRP.M:=0; ZRODZO.M:=null(); ZRODZO.M_M_ATR:=null();
      'KTM'
   ?}
|| _odp
?}


\rodzo_m_m_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Zwraca wartosc M.M_ATR dla podanego M
::   WE: #M.ref()
::   WY: M_ATR.ref()
::  OLD: \rodzo_m_m_atr/wyprodzo.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_<1) | (_a=~~) | (type_of(_a)<>type_of(0)) | (_a=0) || return(null()) ?};
M.cntx_psh(); M.clear();
_odp:={? M.seek(_a,) || M.M_ATR || null() ?};
M.cntx_pop();
_odp


\mgrp_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Po popraw i dołącz w MGRP
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh(); M.clear();
{? RODZO.M<>0 & M.seek(RODZO.M,) & M.RODZO=null
|| M.RODZO:=RODZO.ref;
   M.put()
?};
M.cntx_pop();
~~


\rodzo_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Akcja Popraw w RODZO
::  OLD: \rodzo_popraw/wyprodzo.fml
::----------------------------------------------------------------------------------------------------------------------
RODZO.win_edit('RED');
M.cntx_psh(); M.clear();
M.win_sel('SLO_M'); M.win_dict('SLO_M');
M.f_set('KTM',,'A=\'T\' and RODZ=\'T\'');
{? RODZO.edit("exec('rodzo_ra','!zws_par_kmtr')")
|| RODZO.put();
   {? RODZO.M<>0 & M.seek(RODZO.M,) & M.RODZO=null
   || M.RODZO:=RODZO.ref;
      M.put()
   ?}
?};
M.f_clear();
M.cntx_pop();
~~


\rodzo_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Rekord przed RODZO
::  OLD: \rodzo_rb/wyprodzo.fml
::----------------------------------------------------------------------------------------------------------------------
ZRODZO.M:=null(); ZRODZO.M_M_ATR:=null();
ZRODZO.M:=exec('rodzo_m_ref','!zws_par_kmtr',RODZO.M);
ZRODZO.M_M_ATR:=exec('rodzo_m_m_atr','!zws_par_kmtr',RODZO.M);
Color.rekprzed('RODZO#01#00')


\rodzo_m_ref
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Zwraca M.ref() dla Mpodanego #M.ref()
::   WE: #M.ref()
::   WY: M.ref()
::  OLD: \rodzo_m_ref/wyprodzo.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_<1) | (_a=~~) | (type_of(_a)<>type_of(0)) | (_a=0) || return(null()) ?};
M.cntx_psh(); M.clear();
_odp:={? M.seek(_a,) || M.ref() || null() ?};
M.cntx_pop();
_odp


\m_rek_przed
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Przed rekord tabeli M
::----------------------------------------------------------------------------------------------------------------------
_col_prefix:='M#01';
{? var_pres('_b')=type_of('') || _col_prefix:=_b ?};
{? _a | _col_prefix<>''
||
   {? M.M_ATR_B<>null
   || {! _i..10 |! ($('POM.SYM'+form(_i,-2,0,'99')))():=($('M.M_ATR_B().SL_'+form(_i,-2,0,'99')+'().NA'))() !}
   || {! _i..10 |! ($('POM.SYM'+form(_i,-2,0,'99')))():='' !}
   ?};
   ZMIENNE.MGAT:=M.MGAT().KOD;
   ZMIENNE.MODM:=M.MODM().KOD;
   HELP.REFMAT:=M.ref;
   ZRODZO.WYPDOM:={? M.MGRP<>null() & M.MGRP().M=(#M.ref()) || 'T' || 'N' ?};
   exec('ust_m','!zws_par_kmtr');
   exec('po_mws2','!zws_par_kmtr')
?};
{? _a
||
   {? cur_kwin()='s_dict' & M.win_dict('?')='SEL' || POMOC.RODZ:=M.RODZ ?};
   _rodz_null:=0;
   {? cur_kwin()='s_dict' & POMOC.RODZ='' || POMOC.RODZ:=M.RODZ; _rodz_null:=1 ?};
   exec('m_win_edit','material');
   {? _rodz_null || POMOC.RODZ:='' ?};
:: obsługa wyszarzania menu
   _grayed:='';
   {? M.sel_size()=0
   || {? M.A='T'
      || {? _grayed*'R(A)'=0 || _grayed:=gsub(_grayed,'R(N)',''); _grayed:='R(A)'+_grayed ?}
      || {? _grayed*'R(N)'=0 || _grayed:=gsub(_grayed,'R(A)',''); _grayed:='R(N)'+_grayed ?}
      ?};
:: ustawienie się na rekordzie M_DOD
      M_DOD.index('M_DOD');
      M_DOD.prefix(REF.FIRMA, M.ref());
      {? ~M_DOD.first() || M_DOD.blank() ?}
   ?};
:: obsługa wyszarzania menu dla Abstore
   {? M.ABSTORE = 'T' & M.ABSTOREC = 'T'     || _grayed+='N(B(WI))'
   |? M.ABSTORE = 'T' & M.ABSTOREC <> 'T'    || _grayed+='N(B(WO))'
   |? M.ABSTORE <> 'T' & M.ABSTOREC = 'T'    || _grayed+='N(B(AI))'
   |? M.ABSTORE <> 'T' & M.ABSTOREC <> 'T'   || _grayed+='N(B(AO))'
   ?};
   _no_et:={? ~exec('isDEFetyk','magazyn_mobi','M') || 'T' || '' ?};
   _grayed:=_no_et+_grayed;

   M.actions_grayed('NL_WER',_grayed)
?};
VAR.DEFSTATS:=exec('statsM','statexam',M.ref());
exec('ustawJMwym','jm');
M.efld_opt(M.win_edit('?'),'enable=1',,'IDZP');
{? _col_prefix='' || '' || exec('rekprzed','color',_col_prefix) ?}


\rodzo_m_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Przed redakcją RODZO.M
::   WY: 0/1 czy mozna redagowac
::  OLD: \rodzo_m_be/wyprodzo.fml
::----------------------------------------------------------------------------------------------------------------------
1


\rodzo_m_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Obsługa na F3 dla pola domyslny materiał w tabeli podgrup materiałowych
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
M.index('AMGRPM');
M.prefix('T','T',MGRP.ref());
M.win_sel('SEL'); M.win_dict('SEL');
M.hdr_sel(' materiałowe'@);
M.find_key(ZRODZO.KTM);
{? M.select(,1)
|| ZRODZO.M:=M.ref();
   ZRODZO.KTM:=M.KTM;
   ZRODZO.NAZ:=M.N
?};
M.cntx_pop();
~~


\rodzo_m_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Po redakcji RODZO.M
::  OLD: \rodzo_m_ae/wyprodzo.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
M.cntx_psh();
{? ZRODZO.KTM<>''
|| M.index('AMGRPM');
   M.prefix('T','T',MGRP.ref());
   _is:=M.find_key(ZRODZO.KTM,) | M.find_key(ZRODZO.KTM);
   {? _is
   || ZRODZO.KTM:=M.KTM;
      ZRODZO.NAZ:=M.N;
      ZRODZO.M:=M.ref();
      MGRP.M:=#M.ref()
   || ZRODZO.KTM:=ZRODZO.NAZ:='';
      ZRODZO.M:=M.ref();
      MGRP.M:=#M.ref()
   ?}
?};
:: Czy domyślny materiał nie należy do innej grupy materiałowej
{? ZRODZO.KTM=''
|| ZRODZO.KTM:='';
   ZRODZO.NAZ:='';
   ZRODZO.M:=null();
   MGRP.M:=0
|? ZRODZO.M<>null()
|| _czy:=1;
   M.index('ARODZ');
   M.prefix('T','T',ZRODZO.KTM,ZRODZO.KTM);
   {? ~M.first()
   || FUN.emsg('Nie znaleziono materiałun w kartotece. Wybierz inny'@);
      _wyn:=0
   ?};
   {? menu_txt()='Popraw'
   || _czy:=(ZRODZO.M().MGRP=MGRP.ref() | ZRODZO.M().MGRP=null())
   || _czy:=(ZRODZO.M().MGRP=null())
   ?};
   {? _czy
   || MGRP.M:=ZRODZO.M;
      ZRODZO.M_M_ATR:=exec('rodzo_m_m_atr','!zws_par_kmtr',MGRP.M)
   || FUN.emsg('Wybrany materiał należy do innego rodzaju wyposażenia.\nWybierz inny.'@);
      {? MGRP.M=ZRODZO.M || MGRP.M:=0 ?};
      ZRODZO.M:=null();
      ZRODZO.M_M_ATR:=null();
      _wyn:=0
   ?}
|| RODZO.M:=0;
   ZRODZO.M_M_ATR:=null()
?};
M.cntx_pop();
_wyn


\tnb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Po edycji pola ZWROT w MGRP, KARO, NORMWSP, PWOPOZ
::  OLD: \tnb/normatyw.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~('TNB'*fld()) || FUN.emsg('Dopuszczalne wartości to T, N, B.'@);0 || 1 ?}


\ind_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: poprawia ktm
::   WY: ''
::  OLD: \ind_edit/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
D_HELP.POPM:=1;
exec('pr_popm','!zws_par_kmtr');
M.cntx_psh();
_loop:=1;
{? exec('FindInSet','#table','M_ATR','TYP','B')=null()
|| M.win_edit('RED_KTM')
|| M.win_edit('RED_KTMA');
   M.btn_eopt('RED_KTMA','BUDOWA','state=normal')
?};
{!
|? _loop=1
|! _m_atr:=M.M_ATR;
   {? M.edit("_res:={? M.KTM='' & M.M_ATR_B().ADD=2 & exec('chk_m_atr','!zws_par_kmtr')<>''
                    || 'M_ATR_B'
                    |? exec('m_kody_chk','kody_kresk',M.ref(),M.KTM,M.KODK)=''
                    || {? M.M_ATR_B().ADD<>2 | exec('chk_m_atr','!zws_par_kmtr')=''
                       || ''
                       || 'M_ATR_B'
                       ?}
                    || 'KTM'
                    ?};
                    {? _res=''
                    || _res:=Plugin.run('M_VALID_001','MOD',0);
                       {? _res<>'' || _res:={? M.M_ATR_B().ADD=2 || 'M_ATR_B' || 'KTM' ?} ?}
                    ?};
                    _res")
   || M.M_ATR:=_m_atr;
      {? M.put(1)=0
      || FUN.info({? M.RODZ='T' || 'Materiał o indeksie %1 już istnieje.'@[M.KTM]
                                || 'Usługa o indeksie %1 już istnieje.'@[M.KTM] ?})
      || exec('po_popm','!zws_par_kmtr');
         M.put(1);
         _loop:=0
      ?}
   || _loop:=0
   ?}
!};
M.cntx_pop();
D_HELP.POPM:=0;
''


\mat_powiel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Powiela biezacy rekord tabeli M i udostepnia do redakcji (jak dla akcji Dolacz, ale z wypelnionym buforem)
::  OLD: \mat_powiel/magkop.fml
::----------------------------------------------------------------------------------------------------------------------
exec('m_win_edit','material');
{? exec('pr_dolm','!zws_par_kmtr')
||
:: UWAGA: jezeli nie chcesz, zeby pojawialy sie dane intrastat dla nowego rekordu -
::        wyczysc albo zmien zawartosc pola M.KTM, np. dopisz:  M.KTM:='';
   BEER.BADSEH:=exec('FindInSet','#table','M_DOD','M_DOD',M.ref(),exec('firma','ustawienia'),"M_DOD.BADSEH",,,null());
   BEER.BNFTT:=exec('FindInSet','#table','M_DOD','M_DOD',M.ref(),exec('firma','ustawienia'),"M_DOD.BNFTT",,,null());
   BEER.KK:=exec('FindInSet','#table','M_DOD','M_DOD',M.ref(),exec('firma','ustawienia'),"M_DOD.KK",,,null());
   VAR.M_POWIEL:=1;
   _src:=M.IDADD;
   _ref:=M.ref();
   M.hdr_edit(' — '+'kopia'@);
   M.CZY_CON:=exec('bl_m_czy_con','!zws_par_kmtr');
   M.C_SYM:=M.C_OPIS:='';
   M.CPV:=M.POZ_BUD:=null();
   M.IDMOB:='N';
   M.GOMOB:='N';
   M.IDZP:=0;
   M.FOMOB:=null();
   M.ABSTORE:='';
   M.ABSTOREC:='';
   ATR.M_ATR_B:=M.M_ATR_B;
   _valid:="_result:=exec('chk_m','!zws_par_kmtr');
            {? _result=''
            || _result:=Plugin.run('M_VALID_001','ADD',0)
            ?};
            _result";
   VAR.DEFSTATS:=exec('statsM','statexam',M.ref());
   exec('ustawJMwym','jm');
   {? M.edit(_valid)
   || M.COPY_SRC:=_src;
      {? M.add()
      || exec('stats_akt','!zws_par_kmtr',M.ref(),VAR.DEFSTATS);
         {? M.J2<>null() || exec('act_mjm','jm',M.ref(),M.J2,M.WS2,null()) ?};
         exec('po_dolm','!zws_par_kmtr');
         exec('m_sv_copy','!zws_par_kmtr',_ref,M.ref())
      ?}
   ?};
   VAR.M_POWIEL:=0
?};
~~


\ust_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: ustawienie zmiennych do displaya
::  OLD: \ust_m/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.BADSEH:=exec('FindInSet','#table','M_DOD','M_DOD',M.ref(),exec('firma','ustawienia'),"M_DOD.BADSEH",,,null());
BEER.BNFTT:=exec('FindInSet','#table','M_DOD','M_DOD',M.ref(),exec('firma','ustawienia'),"M_DOD.BNFTT",,,null());
BEER.KK:=exec('FindInSet','#table','M_DOD','M_DOD',M.ref(),exec('firma','ustawienia'),"M_DOD.KK",,,null());
ZMIENNE.MGAT:=M.MGAT().KOD;
ZMIENNE.MODM:=M.MODM().KOD;
VAR.DEFSTATS:=exec('statsM','statexam',M.ref());
exec('ustawJMwym','jm');
~~


\m_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.20]
:: OPIS: Znajduje typ drzewa dla materialow
::  OLD: \m_sch/zam_pub.fml
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.M_SCH=null
|| FUN.info('Brak wypełnionego schematu danych dla materiałów.'@);
   0
|| 1
?}


\mkodk_kodk_pw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed wyswietleniem MKODK.KODK
::   WY: kolor
::  OLD: \mkodk_kodk_pw/tkod.fml
::----------------------------------------------------------------------------------------------------------------------
_return:='';

{? var_pres('KOD',DEFINE)=type_of('')
||
   {? DEFINE.KOD<>''
   || {? (-MKODK.KODK)=(-DEFINE.KOD)
      ||
         _return:=Color.fnd_kol('MKODK#01#02')
      |? (-MKODK.KODK)*(-DEFINE.KOD)
      ||
         _return:=Color.fnd_kol('MKODK#01#01')
      ?}
   ?}
?};

_return


\be_czy_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2010]
:: OPIS: przed redakcja czy uwzgledniac w trasowkach
::  OLD: \be_czy_red/um.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? -(1+menu_txt())='p' &  USL.count()>0 || _wyn:=0 ?};
_wyn


\bd_mdost_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: przed wyswietleniem pol tabeli MDOST
::  OLD: \bd_mdost_fld/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
exec('upr_cscz','ceny',2,MDOST.SD)


\be_mdost_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: przed redakcja pol tabeli MDOST
::  OLD: \be_mdost_fld/ceny.fml
::----------------------------------------------------------------------------------------------------------------------
exec('upr_cscz','ceny',2,MDOST.SD)


\bl_mdost_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2011]
:: OPIS: akcja blank dla domyslnego dostawcy - zalozenie ze ustawiony jest odpowiedni zakres
::   WY: wartosc na blanku
::  OLD: \bl_mdost_d/defin.fml
::----------------------------------------------------------------------------------------------------------------------
MDOST.cntx_psh;
_wyn:={? -menu_txt='dołącz' & ~MDOST.first & TAZ.SD='D' || 'T' || 'N' ?};
MDOST.cntx_pop;
_wyn


\chk_mdst1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.10]
:: OPIS: akcja rekord po dla MDOST - wartiant cennik sprzedazy
::   WY: akronim blednie wypelnionego pola lub ''
::  OLD: \chk_mdst1/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=chk_rec('WAL');
:: obsluga podwojenia klucza indeksowego
{? _wyn=''
||
   _mat:=MDOST.M;
   _cur:={? -menu_txt='popraw' || MDOST.ref() || null ?};
   MDOST.cntx_psh();
   MDOST.index('M');
   MDOST.prefix(TAZ.SD,_mat,null,MDOST.WAL);
   {? -menu_txt='popraw'
   || {? MDOST.first() & _cur<>MDOST.ref() || _wyn:='WAL' ?}
   || {? MDOST.first() || _wyn:='WAL' ?}
   ?};
   {? _wyn='WAL'
   || FUN.emsg('Cena dla waluty %1\njest już zdefiniowana.'@[MDOST.WAL().KOD]);
      {? params_exec('jakiwal','eurusd','SLWAL','walut',1,'C',0)=0 || _wyn:='C1' ?}
   ?};
   MDOST.cntx_pop()
?};
{? _wyn='' & MDOST.C1=0 & MDOST.CMIN=0 || FUN.info('Należy podać co najmniej cenę pierwszą lub cenę minimalną.'@); _wyn:='C1' ?};
{? _wyn='' & MDOST.C1<0 || FUN.info('Cena nie może być mniejsza od zera.'@);_wyn:='C1' ?};
{? _wyn='' & MDOST.C2<0 || FUN.info('Cena nie może być mniejsza od zera.'@);_wyn:='C2' ?};
{? _wyn='' & MDOST.C3<0 || FUN.info('Cena nie może być mniejsza od zera.'@);_wyn:='C3' ?};
{? _wyn='' & MDOST.C4<0 || FUN.info('Cena nie może być mniejsza od zera.'@);_wyn:='C4' ?};
{? _wyn='' & MDOST.CMIN<0 || FUN.info('Cena nie może być mniejsza od zera.'@);_wyn:='CMIN' ?};
_wyn


\chk_mdst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja rekord po dla dostawcow MDOST - wariant dostawcy
::   WY: akronim blednie wypelnionego pola lub ''
::  OLD: \chk_mdst/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? _wyn=''
||
   _mat:=MDOST.M;
   _mat_kod:=MDOST.M().KTM;
   _kh_naz:=KH.SKR;
   _ref2:=null;
   _cur:={? -menu_txt='popraw' || MDOST.ref() || null ?};
:: obsluga podwojenia klucza indeksowego
   MDOST.cntx_psh();
   MDOST.index('M');
   MDOST.prefix(TAZ.SD,_mat,MDOST.KH,MDOST.WAL);
   {? -menu_txt='popraw'
   || {? MDOST.first() & _cur<>MDOST.ref() || _wyn:='KH' ?}
   || {? MDOST.first() || _wyn:='KH' ?}
   ?};
   {? _wyn='KH'
   || {? MDOST.KH().KOD<>''
      || FUN.emsg('Dostawca (%1) %2 z walutą %3 jest już zarejestrowany.'@[MDOST.KH().KOD,KH.NAZ,MDOST.WAL().KOD])
      || FUN.emsg('Dostawa z walutą %1 jest już zarejestrowana.'@[MDOST.WAL().KOD])
      ?}
   ?};
   MDOST.cntx_pop();
:: pilunje aby byl tylko jeden dostawca domyslny
   {? _wyn='' & MDOST.D='T'
   ||
      MDOST.cntx_psh();
      MDOST.index('DM');
      MDOST.prefix(TAZ.SD,'T',_mat);
      {? -menu_txt='popraw'
      || {? MDOST.first() & _cur<>MDOST.ref() || _wyn:='D'; _ref2:=MDOST.ref() ?}
      || {? MDOST.first() || _wyn:='D'; _ref2:=MDOST.ref() ?}
      ?};
:      {? _wyn='D' || FUN.emsg('Dostawcą domyślnym jest (%1) %2.'@[MDOST.KH().KOD,KH.NAZ]) ?};
:      {? _wyn='D' || FUN.emsg('Dla materiału %1 zmianiono domyślnego dostawcę z %2 na %3.'@[_mat_kod,MDOST.KH().SKR,_kh_naz]) ?};
      MDOST.cntx_pop()
   ?}
?};
{? _wyn='D' ||
   MDOST.cntx_psh(); MDOST.prefix();
   {? MDOST.seek(_ref2) || MDOST.D:='N'; MDOST.put() ?};
   FUN.emsg('Dla materiału %1 zmianiono domyślnego dostawcę z %2 na %3.'@[_mat_kod,MDOST.KH().SKR,_kh_naz]);
   MDOST.cntx_pop();
   _wyn:=''
?};
{? _wyn='' & MDOST.KH=null()
|| {? ~MDOST.C1 & ~MDOST.C2 & ~MDOST.C3 & ~MDOST.C4 & MDOST.EWZ<=0
   || FUN.info('Należy podać prawidłową wartość EWZ (więksżą od zera) lub podać choć jedną cenę.'@); _wyn:='EWZ'
   ?}
?};
{? _wyn='' & MDOST.C1<0 || FUN.info('Cena nie może być mniejsza od zera.'@);_wyn:='C1' ?};
{? _wyn='' & MDOST.C2<0 || FUN.info('Cena nie może być mniejsza od zera.'@);_wyn:='C2' ?};
{? _wyn='' & MDOST.C3<0 || FUN.info('Cena nie może być mniejsza od zera.'@);_wyn:='C3' ?};
{? _wyn='' & MDOST.C4<0 || FUN.info('Cena nie może być mniejsza od zera.'@);_wyn:='C4' ?};
{? _wyn='' & MDOST.ILDNI<0 || FUN.info('Ilość dni nie może być mniejsza od zera.'@);_wyn:='ILDNI' ?};
{? _wyn='' & MDOST.EWZ<0 || FUN.info('Ekonomiczna wielkość zamówienia nie może być mniejsza od zera.'@);_wyn:='EWZ' ?};
{? _wyn='' & MDOST.WAL=null & (MDOST.C1 | MDOST.C2 | MDOST.C3 | MDOST.C4)
|| FUN.info('Należy wypełnić walutę.'@);
   _wyn:='WAL'
?};
_wyn


\mdost_bs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RA [2008]
:: OPIS: rekord przed tabela MDOST
::   WY: kolor
::  OLD: \mdost_bs/magazyn1.fml
::----------------------------------------------------------------------------------------------------------------------
_win_sel:=MDOST.win_sel('?');
{? (MDOST.D='T' & MDOST.sel_size()=0) || MDOST.actions_grayed(_win_sel, 'O') || MDOST.actions_grayed(_win_sel, '') ?};
exec('rekprzed','color','M#03')


\pr_addmz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS: ustawienie wartosci zmiennej
::  OLD: \pr_addmz/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.SD:=0;1


\mz_szcz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: szczegoly dla zamiennikow
::  OLD: \mz_szcz/pommag.fml
::----------------------------------------------------------------------------------------------------------------------
MZ.cntx_psh();
{? 1+BEER.MENU_PTH='M'
|| exec('info_zam','magazyn_stan',1)
|| exec('info_zam','magazyn_stan',3)
?};
MZ.cntx_pop();
~~


\chk_mz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja rekord po dla slownika zamiennikow MZ
::  OLD: \chk_mz/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? MZ.MZ=null()
|| FUN.info('Należy podać zamiennik danego indeksu materiałowego.'@);
   _wyn:='MZ'
|? _wyn='' & MZ.MZ=HELP.KTM
|| FUN.info('Zamiennik musi być różny od materiału zamienianego.'@);
   _wyn:='MZ'
?};
_wyn


\mx_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: akcja dolacz dla tabeli MX
::  OLD: \mx_add/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
MG.cntx_psh();
MX.blank();
_statsM:=exec('statsM','statexam',MX.M);
MX.DEFSTATS:={? _statsM=null() || null() || _statsM ?};
MX.hdr_edit();
{? MX.edit("exec('chk_mx_redmg','!zws_par_kmtr')")
||
   MX.A:=MX.M().A;
   _statsM:=exec('statsM','statexam',MX.M);
   {? MX.DEFSTATS=null() || MX.DEFSTATS:={? _statsM=null() || MX.MG().DEFSTATS || _statsM ?} ?};
   MX.add()
?};
MG.cntx_pop();
''


\mx_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: akcja popraw dla tabeli MX
::  OLD: \mx_put/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
MX.hdr_edit();
MX.hdr_edit(' '+MG.SYM);
{? MX.edit("exec('chk_mx_redmg','!zws_par_kmtr')")
|| MX.A:=MX.M().A;
   MX.put()
?};
''


\chk_mx_redmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PS [17.00]
:: OPIS: Sprawdza poprawność wprowadzanych wartości w oknie wertowania REDMG tabeli MX.
::   WY: 0 - niepoprawne wartości
::       1 - poprawne wartości
::----------------------------------------------------------------------------------------------------------------------
{? MX.MG=null
|| FUN.info('Pole "Symbol" musi być wypełnione.\nNależy uzupełnić brakujące informacje.'@);
   'MG'
|| ''
?}


\rek_mst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: akcja rekord przed dla tabeli MST
::  OLD: \rek_mst/magazyn.fml
::----------------------------------------------------------------------------------------------------------------------
ST.MAG_SYM:=MST.MG().SYM;
''


\chk_mst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja rekord po dla slownika stanow min/max tab. MST
::  OLD: \chk_mst/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? ST.MAG_SYM<>'' || MST.MG:=exec('FindInSet','#table','MG','MAGAZYNY',ST.MAG_SYM,ST.MAG_SYM) ?};
{? _wyn='' & MST.MIN<0
||
   FUN.info('Stan minimalny nie może być ujemny.'@);
   _wyn:='MIN'
?};
{? _wyn='' & MST.MAX<0
||
   FUN.info('Stan maksymalny nie może być ujemny.'@);
   _wyn:='MAX'
?};
{? _wyn='' & MST.ZI<0
||
   FUN.info('Zapas informacyjny nie może być ujemny.'@);
   _wyn:='ZI'
?};
{? _wyn='' & MST.MAX>0 & MST.MAX<MST.MIN
||
   FUN.info('Stan minimalny nie może być większy od stanu maksymalnego.'@);
   _wyn:='MIN'
?};
{? _wyn='' & MST.MIN=0 & MST.MAX=0 & MST.ZI=0
||
   FUN.info('Pola stany minimalny, stan maksymalny, zapas informacyjny nie mogą być wszystkie zerowe.'@);
   _wyn:='MIN'
?};
{? _wyn=''
||

:: dla Popraw zapisuje biezacy ref
   {? -(1+menu_txt)='p'
   || _cur_ref:=MST.ref()
   || _cur_ref:=null
   ?};
   MST.cntx_psh();
   MST.index('MG');
   MST.prefix(MST.M,MST.MG);
   {? MST.first()
   ||
      {!
      |?
         {? _cur_ref<>MST.ref()
         ||
            {? MST.MG
            || FUN.info('Dla magazynu %1 dodano już rekord.\nPonowne dodanie niemożliwe.'@[MST.MG().SYM])
            || FUN.info('Dodano już zapis bez wskazanego magazynu.\nPonowne dodanie niemożliwe.'@)
            ?};
            _wyn:='MAG_SYM'
         ?};
         _wyn='' & MST.next()
      !}
   ?};
   MST.cntx_pop()

?};
_wyn


\bllpmmgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: przed redakcja pola MG_GRP.EANL
::  OLD: \bllpmmgr/mws.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
M_MG_GR.cntx_psh();
M_MG_GR.index('M');
M_MG_GR.prefix(M.ref());
_wyn+={? M_MG_GR.last() || M_MG_GR.LP || 0 ?};
M_MG_GR.cntx_pop();
_wyn


\rekm_mgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: Sprawdzenie czy wypelniono pole strefy magazynowania
::  OLD: \rekm_mgr/mws.fml
::----------------------------------------------------------------------------------------------------------------------
{? M_MG_GR.MG_GR=null
|| FUN.info('Należy podać strefę magazynowania.'@);
   'MG_GR'
|| ''
?}


\m_sv_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [$12.20]
:: OPIS: popraw w M_SV
::  OLD: \m_sv_pop/defin.fml
::----------------------------------------------------------------------------------------------------------------------
__od:=M_SV.OD;
1


\m_sv_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [$12.20]
:: OPIS: usun w M_SV
::  OLD: \m_sv_usu/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? FUN.ask('Czy usunąć bieżący wiersz?'@)
||
   M_SV.cntx_psh();
   _next:=M_SV.next();
   M_SV.cntx_pop();
   M_SV.cntx_psh();
   {? _next & ~M_SV.prev()
   ||
      FUN.info('Usunięcie pierwszego okresu niemożliwe.'@);
      _wyn:=0
   ?};
   M_SV.cntx_pop();
   {? _wyn=1
   ||
      do;
      M_SV.del();
      end
   ?}
?};
_wyn


\m_sv_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [$12.20]
:: OPIS: rekord po M_SV
::  OLD: \m_sv_rek/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=__CHK.record(M_SV,,'OD','VAT');
{? _wyn=''
||
:: sprawdzenie unikalnosci nazwy na paragonie
   _m_ktm:=exec('chk_fis_ktm','!zws_par_kmtr',M.ref,M_SV.FIS_KTM,1);
   {? _m_ktm<>''
   || FUN.info('Podany opis pozycji paragonu jest przypisany do indeksu\n%1.'@[_m_ktm]);
      _wyn:='FIS_KTM'
   ?}
?};
{? _wyn=''
||
   _add:=-(1+menu_txt)='d';
   _odrok:=M_SV.OD~1;
   _odmc:=M_SV.OD~2;
   OKR.index('OKR'); OKR.prefix(REF.FIRMA);
   _okrfirst:={? OKR.first || date(OKR.ROK,OKR.MC,1) || date(0,0,0) ?};

   {? _okrfirst=date(0,0,0) || FUN.info('Nie zdefiniowano okresow obrachunkowych.'@); return('OD') ?};

   {? M_SV.OD~3<>1 || FUN.info('Akceptowne są daty z pierwszym dniem miesiąca.'@); return('OD') ?};

   {? _add
   ||
      M_SV.cntx_psh;
      _zmod:=0;
      {? M_SV.find_key(M_SV.OD)
      ||
         FUN.info('Zdefiniowano już okres rozpoczynający się od dnia %1.'@[$M_SV.OD]);
         _wyn:='OD'
      |? ~M_SV.last & M_SV.OD<>_okrfirst
      ||
         FUN.info('Zmieniono wartość "Od daty" na pierwszy dzień obrachunkowy zdefiniowany w systemie.'@);
         _zmod:=1
      ?};
      M_SV.cntx_pop;
      {? _zmod || M_SV.OD:=_okrfirst ?};
      _wyn
   ||
      _ref:=M_SV.ref;
      _od:=M_SV.OD;
      M_SV.cntx_psh;
      {? M_SV.seek(_ref)
      ||
         {? M_SV.OD=_okrfirst & _od<>_okrfirst
         ||
            FUN.info('Zmiana daty w polu "Obowiązuje od" niedostępna dla pierwszego okresu.'@);
            _wyn:='OD'
         ?}
      ?};
      M_SV.cntx_pop;
      {? _wyn=''
      ||
         M_SV.cntx_psh;
         {? M_SV.find_key(M_SV.OD) & M_SV.ref<>_ref
         ||
            FUN.info('Zdefiniowano już okres rozpoczynający się od dnia %1.'@[$M_SV.OD]);
            _wyn:='OD'
         ?};
         M_SV.cntx_pop
      ?}
   ?}
?};
_wyn


\ae_mdost_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Po redakcji pól tabeli MDOST
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('mdost_set_efld_opt','!zws_par_kmtr');
1


\mdost_set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zaznacza wymagalne pola w MDOST
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? MDOST.SD='S'
|| _win_red:='RED1';
   {? MDOST.C1
   || MDOST.efld_opt(_win_red,'mark=1',,'C1');
      MDOST.efld_opt(_win_red,'mark=0',,'CMIN')
   |? MDOST.CMIN & MDOST.C1=0
   || MDOST.efld_opt(_win_red,'mark=0',,'C1');
      MDOST.efld_opt(_win_red,'mark=1',,'CMIN')
   || MDOST.efld_opt(_win_red,'mark=1',,'C1');
      MDOST.efld_opt(_win_red,'mark=1',,'CMIN')
   ?}
|? MDOST.SD='D'
|| _win_red:='RED';
   {? MDOST.KH=null() & MDOST.EWZ=0
   || MDOST.efld_opt(_win_red,'mark=1',,'EWZ');
      MDOST.efld_opt(_win_red,'mark=0',,'KH');
      MDOST.efld_opt(_win_red,'mark=1',,'KH','KOD')
   |? MDOST.KH=null()
   || MDOST.efld_opt(_win_red,'mark=1',,'EWZ');
      MDOST.efld_opt(_win_red,'mark=0',,'KH')
   || MDOST.efld_opt(_win_red,'mark=0',,'KH');
      MDOST.efld_opt(_win_red,'mark=1',,'KH','KOD');
      MDOST.efld_opt(_win_red,'mark=0',,'EWZ')
   ?}
?}


\initopak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: ustawia zmienna POMOC.OPAKOW
::  OLD: \initopak/defin.fml
::----------------------------------------------------------------------------------------------------------------------
POMOC.OPAKOW:='T';
1


\chk_m_opakow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: akcja rekord po dla M_OPAKOW
::  OLD: \chk_m_opakow/defin.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=__CHK.record(M_OPAKOW,,'OPAKOW');
{? _wyn=''
||
:: dla Popraw zapisuje biezacy ref
   {? -(1+menu_txt)='p'
   || _cur_ref:=M_OPAKOW.ref()
   || _cur_ref:=null
   ?};
   M_OPAKOW.cntx_psh();
   M_OPAKOW.index('M_OPAKOW');
   M_OPAKOW.prefix(M_OPAKOW.M,M_OPAKOW.OPAKOW().KTM);
   {? M_OPAKOW.first()
   ||
      {!
      |?
         {? _cur_ref<>M_OPAKOW.ref()
         ||
            _txt:='Dla materiału %1\ndodano już opakowanie %2'
                  '.\n\nPonowne dodanie niemożliwe.'@[M_OPAKOW.M().N,M_OPAKOW.OPAKOW().N];
            FUN.info(_txt);
            _wyn:='OPAKOW'
         ?};
         _wyn='' & M_OPAKOW.next()
      !}
   ?};
   M_OPAKOW.cntx_pop()
?};
{? _wyn='' & M_OPAKOW.POJ<=0 || FUN.info('Pojemność opakowania musi być większa od zera.'@); _wyn:='POJ' ?};
_wyn


\add_ktm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009+]
:: OPIS: dodanie indeksu materialowego do danego kodu kreskowego
::  OLD: \add_ktm/ean.fml
::----------------------------------------------------------------------------------------------------------------------
BEER.EANP:=1;
POMOC.MGR:=null;
HELP.MGR:=null;
{? EANP.M=null
|| _ok:=1;
   {? ~exec('unik_ean','kody_kresk','M',EANP.EAN,null)
   || _ok:=0;
      FUN.info('Błąd odczytu na urządzeniu mobilnym - unikalności kodu kreskowego.\n'
       'Podany kod kreskowy jest już wykorzystywany w systemie (indeksy materiałowe, lokalizacje, palety).\n'
       'Niemożliwe dodanie indeksu materiałowego o podanym kodzie.\n'
       'Operację należy anulować.'@)
   ?};
   {? _ok
   || _opc:=FUN.choice('Wybierz jedną z opcji'@,,'Nowy indeks','Kod dla indeksu'@);
      _ean:={? EANP.EAN=EANP.SCEAN || exec('mkodkKODK','kody_kresk','') || EANP.EAN ?};
      {? _opc=1
      || POMOC.RODZ:='T';
         POMOC.MGR:=null();
         ATR.CZYSADKC:=1;
         exec('pr_dolm','!zws_par_kmtr');
         M.clear();
         M.blank();
         M.KODK:=_ean;
::       Ustawienie okna redakcji
         exec('m_win_edit','material');
         _valid:="_result:=exec('chk_m','!zws_par_kmtr');
                  {? _result=''
                  || _result:=Plugin.run('M_VALID_001','ADD',0)
                  ?};
                  _result";
         M.bl_file('RYS',1,'');
         {? M.edit(_valid)
         || _bl_file:=M.bl_file('RYS');
            _oki:=0;
            do();
            _oki:=M.add(1);
            {? _oki || exec('stats_akt','!zws_par_kmtr',M.ref(),VAR.DEFSTATS) ?};
            {? M.bl_file('RYS')<>''
            || M.bl_put('RYS',M.bl_file('RYS'));
               M.bl_file('RYS',1,'')
            ?};
            M.put();
            _odp:=exec('domM_MGRP','!zws_par_kmtr');
            exec('po_dolm','!zws_par_kmtr');
            end();
            {? _odp<>''
            || FUN.info('W schemacie atrybutów dla materiału domyślnego dla tego '
                        'rodzaju wyposażenia brakuje następujących: \n%1'
                        '.\nTen materiał nie może być domyślnym dla tego rodzaju wyposażenia.'
                        '\nUsunięto zapis o domyślnym materiale.'@[_odp])
            ?};
            {? _oki
            || EANP.M:=M.ref();
               EANP.EAN:=M.KODK;
               EANP.put();
               exec('poaleanp','magazyn_mob',M.KODK,M.ref())
            ?}
         ?}
      |? _opc=2
      || M.index('ARODZ');
         M.prefix('T','T');
         M.win_sel('SEL');
         {? M.select()
          & (_refm:=M.ref(); {? M.KODK=''
                             || exec('add_kodk_mat','material',_ean)
                             || exec('mkodk_werm_dol','kody_kresk')<>null
                             ?})
         || EANP.M:=_refm;
            EANP.EAN:=_ean;
            EANP.put();
            exec('poaleanp','magazyn_mob',EANP.EAN,_refm)
         ?}
      ?}
   ?}
|| FUN.info('Pole materiał jest wypełnione.'@)
?};
BEER.EANP:=0;
~~


\all_mgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: odtworzenie infromacji o grupach materialowych na powiazanych tabelach
::  OLD: \all_mgr/wzorsl.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',600010,2)<>'T'
|| FUN.info('Funkcja niedostępna.'@+'\n'+
            'Aktulizacja informacji o grupach materiałowych jest zablokowana (parametr 600010).'@)
|? FUN.ask('Czy zaktualizować informacje o grupach materiałowych w kartotekach?'@)
|| _mat:=M.ref();
   M.cntx_psh();
   M.index('ARODZ');
   M.prefix('T');
   {? M.first()
   || {!
      |? BEER.BADSEH:=exec('FindInSet','#table','M_DOD','M_DOD'
                      ,M.ref(),exec('firma','ustawienia'),"M_DOD.BADSEH",,,null());
         BEER.BNFTT:=exec('FindInSet','#table','M_DOD','M_DOD'
                      ,M.ref(),exec('firma','ustawienia'),"M_DOD.BNFTT",,,null());
         BEER.KK:=exec('FindInSet','#table','M_DOD','M_DOD'
                      ,M.ref(),exec('firma','ustawienia'),"M_DOD.KK",,,null());
         exec('po_popm','!zws_par_kmtr',1);
         M.next()
      !}
   ?};
   M.cntx_pop();
   {? M.f_active()>0
   ||
      M.f_rfresh();
      M.f_seek(_mat)
   ?}
?}


\po_set_efld_mkodk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: po polach KOD, KODK
::----------------------------------------------------------------------------------------------------------------------
exec('set_efld_opt','kody_kresk');
''


\inf_mmag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2006]
:: OPIS: wyswietlanie dokumentow magazynowych dla materialu
::   WE: _a - przych ('T'), rozch ('N'), wszystkie ('')
::  OLD: \inf_mmag/firma.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('X_Xa')>100 || obj_del(X_Xa) ?};
undefine();
define('od',date(ST.AR,ST.AM,1),'Od daty:');
define('do',date(ST.AR,ST.AM,0),'Do daty:');
def_btn('text=%1, btn_label_align=center'['&Zapisz'@],"'key:F2'");
def_btn('text=%1, btn_label_align=center'['&Anuluj'@],"'key:Esc'");
_tyt:=
   {? _a='T' || 'Przychodowe dokumenty dla materiału'@
   |? _a='N' || 'Rozchodowe dokumenty dla materiału'@
             || 'Wszystkie dokumenty dla materiału'@
   ?}+' '+M.KTM+' w okresie'@;
{? def_edit("{? DEFINE.do>=DEFINE.od || '' || FUN.info('Błędny zakres dat.'@);'do' ?}",_tyt)
||
   X_Xa:=sql('
      select KH.KOD kontrah, MG.SYM magazyn, TYPYDOK.T typ, ND.NR nr, ND.SYM sym,  ND.D data, DK.P poz, M.KTM ktm,
      DK.IL ilosc, DK.C cena, DK.WAR wartosc, DK.REFERENCE refsql, KH.SKR khskr
      from @DK join @ND using (DK.N, ND.REFERENCE) join MG using (ND.MAG, MG.REFERENCE)
      join TYPYDOK using (ND.TYP, TYPYDOK.REFERENCE) join M using (DK.M, M.REFERENCE)
      left join KH using (ND.KH, KH.REFERENCE)
      where MG.ODDZ = \':_a\' and DK.M = :_b and DK.Z = \'T\'
      and (ND.D >= to_date(:_c) or to_date(:_c) is null) and (ND.D <= to_date(:_d) or to_date(:_d) is null)
      and (TYPYDOK.P= \':_e\' or \':_e\'=\'\' )
      order by 6, 4, 1, 2, 3',ST.ODDZ,M.ref,DEFINE.od,DEFINE.do,_a);
   exec('war_hid','ceny',X_Xa,'CENA','WARTOSC');

   _acr:=X_Xa.mk_sel(_tyt+' od %1 od %2'@[$DEFINE.od,$DEFINE.do],,0,'#inf_mmagx_xa',,,,,'U');
   X_Xa.win_fld(_acr,,'KONTRAH',,,8,,,'Kontrahent (Kod)'@);
   X_Xa.win_fld(_acr,,'KHSKR',,,8,,,'Kontrahent (Skrót)'@);
   X_Xa.win_fld(_acr,,'MAGAZYN',,,8,,,'Magazyn'@);
   X_Xa.win_fld(_acr,,'TYP',,,4,,,'Typ'@);
   X_Xa.win_fld(_acr,,'NR',,,4,,,'Numer'@);
   X_Xa.win_fld(_acr,,'SYM',,,20,,,'Symbol'@);
   X_Xa.win_fld(_acr,,'DATA',,,,,,'Data'@);
   X_Xa.win_fld(_acr,,'POZ',,,3,,,'Pozycja'@);
   X_Xa.win_fld(_acr,,'ILOSC',,,12,3,,'Ilość'@);
   X_Xa.win_fld(_acr,,'CENA',,,12,2,,'Cena'@);
   X_Xa.win_fld(_acr,,'WARTOSC',,,12,2,,'Wartość'@);
   _form:="_mask:=form(8+X_Xa.REFSQL);
           _nref:=BB.sqlint(X_Xa.REFSQL);
           M.cntx_psh();ND.cntx_psh();DK.cntx_psh();DK_L.cntx_psh();
           DK.use(_mask);ND.use('nagdo'+(_mask+3));DK_L.use('doklk'+(_mask+3));
           DK.clear();
           {? DK.seek(_nref,)
           || DK.N().SYM;
              exec('disp_dk','magdok_wspolne',1,$DK.N)
           ?};
           M.cntx_pop();DK.cntx_pop();ND.cntx_pop();DK_L.cntx_pop()";
   X_Xa.win_act(_acr,,'Formuła','&Pokaż dokument'@@,,'Wyświetlanie pozycji dokumentu'@,_form,,1,,,,'P');
   X_Xa.win_act(_acr,,'Kolejność');
   X_Xa.win_sel(_acr);
   {? X_Xa.size()
   || X_Xa.select()
   || _txt:=
         {? _a='T' || 'Brak przychodowych dokumentów dla materiału'@
         |? _a='N' || 'Brak rozchodowych dokumentów dla materiału'@
                   || 'Brak dokumentów dla materiału'@
         ?};
      FUN.info(_txt+' '+M.KTM+'\n w okresie od %1 do %2.'@[$DEFINE.od,$DEFINE.do])
   ?}
?};
VAR_DEL.delete('X_Xa');
undefine();
1


\m_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
::       [aj] [2009] PR/WRT/PRODUKCJ/10.20/0015
:: OPIS: Zmiana pola aktywny:
::       - sprawdzenie czy na danym indeksie jest stan
::       - sprawdzenie powiazan skladowych lub technologii, limitow zlecen, analiz wykonania
::  OLD: \m_akt/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? M.sel_size=0
|| _akt:=-menu_txt()*'nieaktywnych'=0;
   BEER.POB:=0;
:   {? M.A='T' & ~_akt
   {? ~_akt
   || {? FUN.ask('Przenieść indeks do nieaktywnych indeksów ?'@) || BEER.POB:=2 ?}
   || {? FUN.ask('Przenieść indeks do aktywnych indeksów ?'@) || BEER.POB:=1 ?}
   ?};
   {? BEER.POB>0 || exec('ini_kom','#message','Informacje o zmianie statusu aktywności.'@) ?}
?};
:: gdy M.sel_size>0 POMOC.POP ustawione przed akcja grupowa
{? BEER.POB=2
|| _ok:=exec('spr_stnm','!zws_par_kmtr',M.ref);
   {? _ok=0
   || exec('add_kom','#message','Indeks %1 jest na stanie. Zmiana na nieaktywny niemożliwa.'@[M.KTM],2)
   ?}
?};
{? _ok & BEER.POB=2
|| _ok:=~exec('whohasme','tech_mater',5);
   {? _ok=0
   || exec('add_kom','#message','Indeks %1 jest wykorzystany jako składowa lub w technologiach.'
         ' Przeniesienie do nieaktywnych niemożliwe.'@[M.KTM],2)
   ?}
?};
{? _ok & BEER.POB=2
|| _ok:=exec('whohasme','!zws_par_kmtr',M.ref());
   {? _ok=0
   || exec('add_kom','#message','Indeks %1 jest wykorzystany w limitach niezamkniętych zleceń.'@[M.KTM],2)
   ?}
?};
{? _ok & BEER.POB=2
|| _ok:=~exec('is_tech','tech_common',M.ref());
   {? _ok=0
   || exec('add_kom','#message','Indeks %1'
         ' jest wykorzystany jako produkt niearchiwalnej karty technologicznej.'@[M.KTM],2)
   ?}
?};
{? _ok & BEER.POB=2
|| _ok:=exec('w_analizach','!zws_par_kmtr',M.ref());
   {? _ok=0
   || exec('add_kom','#message','Indeks %1'
         ' jest wykorzystany w niearchiwalnych analizach wykonania produkcji.'@[M.KTM],2)
   ?}
?};
{? _ok & BEER.POB=2 & ( M.ABSTORE<>'' |  M.ABSTOREC<>'' )
||
   _ok:=0;
   exec('add_kom','#message','Indeks %1 jest wykorzystany w integracji abstore.'@[M.KTM],2)
?};
: sprawdzenie czy istnieja niezamkniete zlecenia na ten indeks materialowy
{? _ok & BEER.POB=2
|| _ok:=~exec('czy_zl_nzamk','!zws_par_kmtr',M.KTM)
?};
{? _ok & BEER.POB>0
||
   do();
   {? BEER.POB=1
   ||
      {? M.A='N'
      || M.A:='T';
         exec('add_kom','#message','Indeks %1. Zmieniono na aktywny.'@[M.KTM],1,,,1)
      ||
         exec('add_kom','#message','Indeks %1. Ma już status aktywny.'@[M.KTM],4,,,1)
      ?}
   ||
      {? M.A='T'
      || M.A:='N';
         exec('add_kom','#message','Indeks %1. Zmieniono na nieaktywny.'@[M.KTM],1,,,1)
      ||
         exec('add_kom','#message','Indeks %1. Ma już status nieaktywny.'@[M.KTM],4,,,1)
      ?}
   ?};
   M.cntx_psh();
   M.index('RODZ');
   M.prefix();
   {? M.put()
   ||
      MX.index('M');
      MX.prefix(M.ref);
      {? MX.first
      ||
         {! |? MX.A:=M.A;MX.put();MX.next !}
      ?}
   ?};
   M.cntx_pop();
   {? M.f_active()>0 & ~M.sel_size()
   || {? ZAKR.MATU='A' & M.A='N'
      || {? ~M.f_test() || M.f_del() ?}
      |? ZAKR.MATU='N' & M.A='T'
      || {? ~M.f_test() || M.f_del() ?}
      ?}
   ?};
   end()
?};
{? M.sel_size=0
|| exec('end_kom','#message');
   {? var_pres('TAB1')>0 & TAB1.first() || TAB1.select() ?};
   {? var_pres('TAB2')>0 & TAB2.first() || TAB2.select() ?}
?};
''


\m_aktgrp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: akcja aktywny dla materialow, uslug grupa przed
::   WY: 1/0
::  OLD: \m_aktgrp/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
_a:={? var_pres('_a')=type_of(0) || _a || 1 ?};

BEER.POB:=
   {? _a=1
   || FUN.ask('Przenieść zaznaczone pozycje do aktywnych indeksów?'@)
   || {? FUN.ask('Przenieść zaznaczone pozycje do nieaktywnych indeksów?'@) || 2 ?}
   ?};
{? BEER.POB>0 || exec('ini_kom','#message','Informacje o zmianie statusu aktywności.'@) ?};
BEER.POB


\m_aktpog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2008]
:: OPIS: po akcji grupowej - status aktywnosci
::  OLD: \m_aktpog/magazyn2.fml
::----------------------------------------------------------------------------------------------------------------------
exec('end_kom','#message')


\whohasme
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Sprawdza powiazania materialu z limitami zlecen w przygotowaniu i otwartych
::   WE: _a - M.ref()
::   WY: 1 - ok, brak powiazan; 0 - sa powiazania
::  OLD: \whohasme/zl_lim01.fml
::----------------------------------------------------------------------------------------------------------------------

_tab:=sql('
   select
      ZL.SYM
   from @ZLIM
      join ZL using(ZLIM.ZLEC, ZL.REFERENCE)
   where
      ZLIM.KTM=:_a and (ZL.STAN=\'N\' or ZL.STAN=\'O\')
',_a);

{? type_of(_tab)=type_of(~~) || exec('err_sql','#sql'); return(0) ?};

{? _tab.first() || 0 || 1 ?}


\w_analizach
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2011]
:: OPIS: Sprawdza, czy indeks materialowy NIE wystepuje w analizach wykonania produkcji (niearchiwalnych)
::   WE: _a - M.ref()
::   WY: 0 / 1 - brak powiazan
::  OLD: \w_analizach/plprod1.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=sql('
   select distinct 1
   from PLRELWYR join PLRELNAG
   where PLRELWYR.TOWAR=:_a and PLRELNAG.ARCH=\'N\'
',_a);
~_tab.first()


\czy_zl_nzamk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RS [2009+]
:: OPIS: weryfikacja czy istnieja niezamkniete zlecenia dla zadanego indeksu materialowego
::   WE: _a - indeks materialowy - M.KTM
::   WY: 1 - istnieja niezamkniete zlecenia dla tego indeksu materialowego
::       0 - brak niezamknietych zlecen dla tego indeksu materialowego
::  OLD: \czy_zl_nzamk/zlec5.fml
::----------------------------------------------------------------------------------------------------------------------
_ttab:=sql('
            select ZL.SYM, ZL.OPIS, ZL2.SYM as SYM2 from ZL
            join M using (ZL.KTM, M.REFERENCE)
            left join ZL as ZL2 using (ZL.NRNZL,ZL2.UNRZL)
            where M.KTM=\':_a\'
            and ZL.STAN<>\'Z\'
            ',_a);
{? _ttab.first()
||
: istnieja niezamkniete zlecenia na ten indeks materialowy
   {!
   |? _ms:='Symbol zlecenia: %1'@[_ttab.SYM]+' ';
      {? _ttab.SYM2<>''
      || _ms+='do zlecenia nadrzędnego: %1'@[_ttab.SYM2]+' '
      ?};
      _ms+='| '+'Opis: %1'@[_ttab.OPIS];
      exec('add_kom','#message',_ms,2,'Indeks materiałowy %1 jest wykorzystany w zleceniach produkcyjnych.'@[M.KTM]);
      _ttab.next()
   !};
   return(1)
?};
return(0)


\init_idm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: ustawia znaczniki IDMOB dla kartoteki materiałowej
::  OLD: \init_idm/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__idmat','__idwin','__idbtn');
__idmat:=tab_tmp(1,'KTM','STRING[50]',''
          ,'NAZ','STRING[255]',''
          ,'ATR','STRING[20]',''
          ,'MGR','STRING[10]',''
          ,'REF','STRING[16]',''
          ,'EAN','STRING[30]',''
          ,'IDM','STRING[1]',''
          ,'PRT','INTEGER','');
M.cntx_psh();
M.index('ARODZ');
M.prefix('T','T');
{? M.first()
|| {!
   |? {? ~((';DAPZ'*M.IDMOB)>1) & M.KODK<>''
      || __idmat.clear();
         __idmat.blank();
         __idmat.KTM:=M.KTM;
         __idmat.NAZ:=M.N;
         __idmat.ATR:=M.M_ATR().SYM;
         __idmat.MGR:=M.MGR().KOD;
         __idmat.REF:=$M.ref();
         __idmat.EAN:=M.KODK;
         __idmat.IDM:='';
         __idmat.PRT:=exec('matrzpar','mat_atr',M.M_ATR);
         __idmat.add(1)
      ?};
      M.next()
   !}
?};
__idwin:=__idmat.mk_sel('Indeksy materiałowe bez określenia identyfikacji dostaw'@,'P',,'mat_idmob',,,,,'U');

__idmat.win_fld(__idwin,,'KTM',,,20,,1,'Indeks materiałowy'@);
__idmat.win_fld(__idwin,,'NAZ',,,20,,1,'Nazwa'@);
__idmat.win_fld(__idwin,,'MGR',,,10,,1,'Grupa materiałowa'@);
__idmat.win_fld(__idwin,,'ATR',,,10,,1,'Zestaw atrybutów'@);
__idmat.win_fld(__idwin,,'EAN',,,20,,1,'Kod kreskowy'@);
__idmat.win_fld(__idwin,,'IDM',,,3,,1,'ID');
__idmat.win_act(__idwin,0,'Formuła','&Wybierz'@@,,,"exec('wyb_idm','!zws_par_kmtr',1)"
 ,,1,1,"exec('wyb_idm','!zws_par_kmtr',1)");
__idmat.win_act(__idwin,0,'Formuła','&Zrezygnuj z wyboru'@@,,,"exec('wyb_idm','!zws_par_kmtr',0)"
 ,,0,1,"exec('wyb_idm','!zws_par_kmtr',0)");
__idmat.win_act(__idwin,0,'Formuła','&Akceptuj'@@,,,"exec('akc_idm','!zws_par_kmtr')",,,,,,'A');
__idmat.win_act(__idwin,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','__idmat#01')");
__idmat.win_act(__idwin,0,'Szukaj',,,,,);
__idmat.win_act(__idwin,0,'Kolejność',,,,,);

__idmat.win_fml(__idwin,,'IDM',,'ICON_BEFORE',"
                {? __idmat.IDM='D' || __idmat.IDM:=''; 'xwin16.png:17'
                |? __idmat.IDM='A' || __idmat.IDM:=''; 'xwin16.png:91'
                |? __idmat.IDM='P' || __idmat.IDM:=''; 'xwin16.png:31'
                |? __idmat.IDM='Z' || __idmat.IDM:=''; 'xwin16.png:30'
                || ''
                ?}");
__idbtn:=__idmat.win_btn(__idwin,'text=%1, panel=bottom, align=begin'['&Akceptuj'@],'menu:A');

__idmat.win_sel(__idwin);

__idmat.clear();
{? __idmat.select()
|| {? __idmat.first()
   || {!
      |? {? (';DAPZ'*__idmat.IDM)>1 & (M.clear(); M.seek(__idmat.REF))
         || do();
            M.IDMOB:=__idmat.IDM;
            {? ~M.put(1) || undo() ?};
            {? M.IDMOB='A'
            || M_ATR.cntx_psh();
               M_ATR.clear();
               {? M_ATR.seek(M.M_ATR)
               || M_ATR.IDMOB:='T';
                  {? ~M_ATR.put(1) || undo() ?}
               ?};
               M_ATR.cntx_pop()
            ?};
            exec('add_idm','!zws_par_kmtr',M.ref(),__idmat.IDM);
            end()
         ?};
         __idmat.next()
      !}
   ?}
?};

M.cntx_pop();
VAR_DEL.delete('__idmat','__idwin','__idbtn');
~~


\wyb_idm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: wybor lub rezygnacja z wyboru zaznaczonych
::   WE: _a - 1-wybieramy 0-rezygnujemy
::  OLD: \wyb_idm/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_prod:=exec('tte_lic','tte')='T';
_tab:=__idmat.sel_aget();
_czyatr:=__idmat.ATR<>'';
_czyprt:=__idmat.PRT;
__idmat.sel_adel();
__idmat.cntx_psh();
_tab.clear();
{? _tab.first()
|| {? {? _a
      || {? _prod
         || (_opc:=FUN.choice('Wybierz typ identyfikacji dla zaznaczonych indeksów materiałowych\n\n'
                   'Uwaga. Indeksy materiałowe bez określonego zestawu atrybutów zostaną\n'
                   'pominięte w przypadku wyboru wg zestawu atrybutów\n'
                   'lub wg partii produkcyjnej (dodatkowo sprawdzane jest wystąpienie słownika typu PARTIE).'@
                   ,,'Wg &dostawy'@,'Wg zestawu &atrybutów'@,'Wg &partii produkcyjnej'@,'Wg &zlecenia'@))>0
         || (_opc:=FUN.choice('Wybierz typ identyfikacji dla zaznaczonych indeksów materiałowych\n\n'
                   'Uwaga. Indeksy materiałowe bez określonego zestawu atrybutów zostaną\n'
                   'pominięte w przypadku wyboru wg zestawu atrybutów.'@
                   ,,'Wg &dostawy'@,'Wg zest.&atrybutów'@))>0
         ?}
      || FUN.ask('Czy usunąć rodzaj identyfikacji dla zaznaczonych indeksów materiałowych?'@)
      ?}
   || {!
      |? {? (__idmat.clear(); __idmat.seek(_tab.REF,))
         || _czyatr:=__idmat.ATR<>'';
            {? ~_a | (_czyatr & _opc<>3) | (_czyatr & _czyprt) | (~_czyatr & _opc<>2 & _opc<>3)
            || __idmat.IDM:={? ~_a || '' || (_opc+'DAPZ')+1 ?};
               __idmat.put(1)
            ?}
         ?};
         _tab.next()
      !}
   ?}
|? {? _a
   || {? _czyatr & _prod & _czyprt
      || (_opc:=FUN.choice('Wybierz typ identyfikacji'@,
                 ,'Wg &dostawy'@,'Wg zestawu &atrybutów'@,'Wg &partii prod.'@,'Wg &zlecenia'@))>0
      |? _czyatr & _prod & ~_czyprt
      || (_opc:=FUN.choice('Wybierz typ identyfikacji'@,
                 ,'Wg &dostawy'@,'Wg zestawu &atrybutów'@,'Wg &zlecenia'@))>0
      |? _czyprt & _prod
      || (_opc:=FUN.choice('Wybierz typ identyfikacji'@,
                 ,'Wg &dostawy','Wg &partii produkcyjnej'@,'Wg &zlecenia'@))>0
      |? _prod
      || (_opc:=FUN.choice('Wybierz typ identyfikacji'@,
                 ,'Wg &dostawy'@,'Wg &zlecenia'@))>0
      |? _czyatr & ~_prod
      || (_opc:=FUN.choice('Wybierz typ identyfikacji'@,
                 ,'Wg &dostawy'@,'Wg zestawu &atrybutów'@))>0
      || (_opc:=FUN.choice('Wybierz typ identyfikacji'@,
                 ,'Wg &dostawy'@))>0
      ?}
   || FUN.ask('Czy usunąć rodzaj identyfikacji?'@)
   ?}
|| __idmat.IDM:={? ~_a
                || ''
                || {? _czyatr & _czyprt
                   || (_opc+'DAPZ')+1
                   |? _czyatr & ~_czyprt
                   || (_opc+'DAZ')+1
                   |? _czyprt
                   || (_opc+'DPZ')+1
                   || (_opc+'DZ')+1
                   ?}
                ?};
   __idmat.put(1)
?};
__idmat.cntx_pop();
obj_del(_tab);
~~


\akc_idm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: akceptacja przypisania typow kodow identyfikacyjnych
::  OLD: \akc_idm/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy zatwierdzić wybór przypisania typów identyfikacji dla indeksów materiałowych?'@)
|| sel_exit()
?};
''


\add_idm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: dodanie kodow identyfikacyjnych wg materialu i typy identyfikacji
::   WE: _a - ref materialu
::       _b - typ identyfikacji
::  OLD: \add_idm/ean2.fml
::----------------------------------------------------------------------------------------------------------------------
_mag:=sql('select
            MG.SYM, MG.REFERENCE REF
          from MG order by 1');

_scean:=exec('mkodkKODK','kody_kresk',_a);
exec('mkodkadd','kody_kresk',_a,_scean,$_a,0,1);

_dkc:=tab_tmp(1,'DKC','STRING[16]','');

_rok:=ST.AR;
_odd:=ST.ODDZ;
_old:=0;

exec('psh_cntx','powdok');
OKR.cntx_psh();
OKR.index('MC');
OKR.prefix(REF.FIRMA,1);
{? OKR.first()
|| _first:=1;
   {!
   |? echo('Przypisanie domyślnej identyfikacji dla Dostaw, Pozycji dokumentów, Pozycji reorganizacji.'@,
       'Indeks materiałowy: %1. Rok: %2.'@[M.KTM,form(OKR.ROK,,0,'99')]);
      exec('open','open_tab',_odd,form(OKR.ROK-2000,-2,0,'99'));
      _mag.clear();
      {? _mag.first()
      || {!
         |? _mgref:=exec('FindAndGet','#table','MG',_mag.REF,,,null());
            SC.index('SC');
            SC.prefix(_mgref,_a);
            {? SC.first()
            || {!
               |? SC.SCEAN:=_scean;
                  {? ~SC.put(1) || undo() || _old:=1 ?};
                  SC.next()
               !}
            ?};
            DK.index('DOKMAT');
            DK.prefix('T',_a,_mgref);
            {? DK.first()
            || {!
               |? DK.SCEAN:=_scean;
                  {? ~DK.put(1) || undo() || _old:=1 ?};
                  {? _b='A' & DK.DK_C<>null() & ~(DK.DK_C().UZUP*'0') & (_dkc.clear(); ~_dkc.find_key($DK.DK_C))
                  || {? ~exec('mkodkadd','kody_kresk',_a,exec('mkodkKODK','kody_kresk',_a),$DK.DK_C) || undo() ?};
                     _dkc.clear();
                     _dkc.DKC:=$DK.DK_C;
                     _dkc.add(1)
                  ?};
                  DK.next()
               !}
            ?};
            DK_L.index('SCEAN');
            DK_L.prefix('T',_mgref,_a);
            {? DK_L.first()
            || {!
               |? _dk_l:=DK_L.ref(); _oki:=DK_L.next();
                  DK_L.cntx_psh();
                  DK_L.prefix();
                  {? DK_L.seek(_dk_l) & DK_L.DK=null()
                  || DK_L.SCEAN:=_scean;
                     {? ~DK_L.put(1) || undo() || _old:=1 ?}
                  ?};
                  DK_L.cntx_pop();
                  _oki
               !}
            ?};
            {? _first
            || SL.index('MG');
               SL.prefix(_mgref,_a);
               {? SL.first()
               || {!
                  |? {? SL.IL<>0
                     || SLD.clear();
                        SLD.blank();
                        SLD.SCEAN:=_scean;
                        SLD.SL:=SL.ref();
                        SLD.IL:=SL.IL;
                        {? ~SLD.add(1) || undo() ?};
                        {? ~SLD.IL || SLD.del() ?}
                     ?};
                     SL.next()
                  !}
               ?}
            ?};
            _mag.next()
         !}
      ?};
      _first:=0;
      OKR.next()
   !}
?};
OKR.cntx_pop();

exec('open','open_tab',_odd,form(_rok-2000,-2,0,'99'));
{? ~_old || exec('mkodkadd','kody_kresk',_a,_scean,$_a,1,1) ?};
exec('pop_cntx','powdok');
echo();
obj_del(_dkc);
~~


\po_mdst_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Po polu kontrahent dla tabeli MDOST zapala/gasi gwiazdki
::----------------------------------------------------------------------------------------------------------------------
exec('mdost_set_efld_opt','!zws_par_kmtr');
{? (1+menu_txt())<>'P'
|| MDOST.MKODK:={? MDOST.KH<>null() & MDOST.M<>null()
                || exec('FindInSet','#table','MKODK','M_KK',MDOST.M,MDOST.KH)
                || null()
                ?}
?};
1


\bl_dokls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: wartosc poczatkowa M.DOKL_S
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.MGR<>null
|| POMOC.MGR().DOKL_S
|| POMOC.DOKL_S
?}


\bd_dokls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: przed wyswietleniem M.DOKL_S
::----------------------------------------------------------------------------------------------------------------------
{? exec('be_dokl','!zws_par_kmtr')=0
|| exec('findfnrd','color')
|| ''
?}


\ae_dokls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: po redakcji pola M.DOKL_S
::----------------------------------------------------------------------------------------------------------------------
exec('ae_mx','!zws_par_kmtr','DOKL_S',0)


\bl_doklz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: wartosc poczatkowa M.DOKL_S
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.MGR<>null
|| POMOC.MGR().DOKL_Z
|| POMOC.DOKL_Z
?}


\bd_doklz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: przed wyswietleniem M.DOKL_S
::----------------------------------------------------------------------------------------------------------------------
{? exec('be_dokl','!zws_par_kmtr')=0
|| exec('findfnrd','color')
|| ''
?}


\ae_doklz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: po redakcji pola M.DOKL_Z
::----------------------------------------------------------------------------------------------------------------------
exec('ae_mx','!zws_par_kmtr','DOKL_Z',0)


\podokl_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: kontrola zakresu dokladnosci dla grupy (0-10)
::----------------------------------------------------------------------------------------------------------------------
{? MGR.DOKL_S<0 | MGR.DOKL_S>10 || FUN.info('Dopuszczalny zakres dla dokładności: 0 - 10.'@); 0 || 1 ?}


\podokl_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.28]
:: OPIS: kontrola zakresu dokladnosci dla grupy (0-10)
::----------------------------------------------------------------------------------------------------------------------
{? MGR.DOKL_Z<0 | MGR.DOKL_Z>10 || FUN.info('Dopuszczalny zakres dla dokładności: 0 - 10.'@); 0 || 1 ?}


\dane_wypos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Edycja danych dla wyposażenia
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
MGRP.cntx_psh();
MGRP.win_edit('WYP');
{? MGRP.edit("exec('rodzo_ra','!zws_par_kmtr')")
|| MGRP.put()
?};
MGRP.cntx_pop();
M.cntx_pop()


\mgrp_dcu_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Obsługa F3 dla pola Domyślny czas użycia
::----------------------------------------------------------------------------------------------------------------------
popup(0,'Wybierz zakres czasu:','365',,"MGRP.DCU:=365",'182',,"MGRP.DCU:=182",'92',,"MGRP.DCU:=92",
'31',,"MGRP.DCU:=31")


\mgrp_bp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Przed popraw dla grup materiałowych
::----------------------------------------------------------------------------------------------------------------------
{? exec('czy_mgrp_pow','!zws_par_kmtr')
|| ZRODZO.DOL:=0
|| ZRODZO.DOL:=1
?};
{? exec('wyp_lic','wyp')='T' & HELP.MGR().RODZ='T'
|| _red:=exec('mk_mgrp_edit','material');
   MGRP.win_edit(_red)
|| MGRP.win_edit('RED')
?};
exec('ZRODZO_MGRP','!zws_par_kmtr');
~~


\mgrp_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Przed dołącz dla grup materiałowych
::----------------------------------------------------------------------------------------------------------------------
{? HELP.MGR=null()
|| FUN.info('Nie wybrano grupy materiałowej, nie można dołączyć podgrupy.'@);
   0
|| ZRODZO.DOL:=1;
   {? exec('wyp_lic','wyp')='T' & HELP.MGR().RODZ='T'
   || _red:=exec('mk_mgrp_edit','material');
      MGRP.win_edit(_red);
      exec('ZRODZO_MGRP','!zws_par_kmtr',1)
   || MGRP.win_edit('RED')
   ?}
?}


\mgrp_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [17.42]
:: OPIS: Przed wyświetl dla grup materiałowych
::----------------------------------------------------------------------------------------------------------------------
ZRODZO.DOL:=0;
exec('ZRODZO_MGRP','!zws_par_kmtr');
MGRP.display();
~~


\ZRODZO_MGRP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: Ustawia wartości dla zmiennej
::   WE: [_a] - 1-wartości puste 0(domyślnie) wg podgrupy
::----------------------------------------------------------------------------------------------------------------------
_blank:={? var_pres('_a')=type_of(0) || _a || 0 ?};
{? ~_blank & MGRP.M
|| M.cntx_psh();
   M.clear();
   {? M.seek(MGRP.M,)
   || ZRODZO.M:=M.ref;
      ZRODZO.KTM:=M.KTM;
      ZRODZO.NAZ:=M.N;
      ZRODZO.M_M_ATR:={? ~_blank || {? M.M_ATR<>null() || M.M_ATR || MGRP.M_ATR ?} || null() ?}
   ?};
   M.cntx_pop()
|| ZRODZO.M:=M.ref;
   ZRODZO.KTM:='';
   ZRODZO.NAZ:='';
   ZRODZO.M_M_ATR:=null()
?};

_enable:={? ZRODZO.DOL || 'enable=0' || 'enable=1' ?};
MGRP.efld_opt(MGRP.win_edit('?'),_enable,ZRODZO,'KTM');
MGRP.efld_opt(MGRP.win_edit('?'),_enable,ZRODZO,'NAZ');
MGRP.efld_opt(MGRP.win_edit('?'),_enable,ZRODZO,'M_M_ATR');
POM.ATR_TYP:='C';
~~


\domM_MGRP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPIS: Ustawia lub usuwa zapis o domyślnym indeksie dla podgrupy materiałowej - dotyczy wyposażenia
::   WY: komunikat lub pusty string
::----------------------------------------------------------------------------------------------------------------------
_res:='';
{? M.MGRP<>null() | (DISP.MGRP<>null() & M.MGRP<>DISP.MGRP)
|| _del:=0;
   _mgrp:=null();
   {? DISP.MGRP<>null()
   || _mgrp:=DISP.MGRP;
      {? DISP.MGRP().M=(#M.ref())
      || _del:=1
      ?}
   ?};
   {? _del
   || MGRP.cntx_psh();
      MGRP.prefix();
      {? MGRP.seek(_mgrp)
      || MGRP.M:={? _del=1 || 0 || #M.ref() ?};
         MGRP.put(1)
      ?};
      MGRP.cntx_pop()
   ?};
   _del:=0;
   {? M.MGRP<>null()
   || _mgrp:=M.MGRP;
      {? M.MGRP().M=(#M.ref())
      || {? ZRODZO.WYPDOM='N'
         || _del:=1
         || _res:=exec('m_atr_1in2','wyp_head',M.MGRP().M_ATR,M.M_ATR);
            {? _res<>''
            || _del:=1
            || {? ZRODZO.WYPDOM='T' || _del:=2 ?}
            ?}
         ?}
      |? ZRODZO.WYPDOM='T'
      || _res:=exec('m_atr_1in2','wyp_head',M.MGRP().M_ATR,M.M_ATR);
         {? _res<>''
         || _del:=1
         || _del:=2
         ?}
      ?}
   ?};
   {? _del
   || MGRP.cntx_psh();
      MGRP.prefix();
      {? MGRP.seek(_mgrp)
      || MGRP.M:={? _del=1 || 0 || #M.ref() ?};
         MGRP.put(1)
      ?};
      MGRP.cntx_pop()
   ?}
?};
_res


\czy_mgrp_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.02]
:: OPIS: Czy podgrupa ma jakieś materiały
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
M.index('AMGRPM');
M.prefix('T','T',MGRP.ref());
_wyn:=M.first();
M.cntx_pop();
_wyn


\pr_m_mkodk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.22]
:: OPIS: Przed redakcją pola indeks materiałowy
::----------------------------------------------------------------------------------------------------------------------
{? MKODK.M<>null() & HELP.KODK='mkh' || 0 || 1 ?}


\bl_mbatr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wartość początkowa pola M.M_ATR_B
::----------------------------------------------------------------------------------------------------------------------
{? POMOC.RODZ='U'
|| _par:=exec('get','#params',4032,2,OPERATOR.USER)
|| _par:=exec('get','#params',4031,2,OPERATOR.USER)
?};
M_ATR.cntx_psh();
M_ATR.index('TYP');
M_ATR.prefix('B',_par,);
{? M_ATR.first()
|| _m_atr:=M_ATR.ref()
|| _m_atr:=null()
?};
M_ATR.cntx_pop();
_m_atr


\aktm_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Aktualizuje zapisy M_ATR o grupach
::----------------------------------------------------------------------------------------------------------------------
_kod:=MGR.KOD;
_mgr:=MGR.ref();

MGR.cntx_psh();
M_ATR.cntx_psh();
M_ATR.index('MGR_KOD');
M_ATR.prefix(_kod,);
{? M_ATR.first()
|| {!
   |? _ref:=M_ATR.ref(); _ok:=M_ATR.next();
      M_ATR.cntx_psh();
      M_ATR.prefix();
      {? M_ATR.seek(_ref)
      || M_ATR.MGR:=_mgr;
         M_ATR.MGR_KOD:='';
         M_ATR.put(1)
      ?};
      M_ATR.cntx_pop();
      _ok
   !}
?};
MGR.cntx_pop();
M_ATR.cntx_pop();
~~


\pr_setw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Przed redakcją pola M.SETW
::----------------------------------------------------------------------------------------------------------------------
1


\m_pkwiu_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Przed redakcją M.PKWIU
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__M1.PKWIU:=M.PKWIU;
1


\m_pkwiu_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: Po redakcji M.PKWIU
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? __M1.PKWIU<>M.PKWIU
||
   _sp:='N'; {? M.PKWIU || _sp:=M.PKWIU().SP_WYM ?};
   M.SP_WYM:=_sp
?};
1


\m_dol_mwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Obsługa dołączenia materiału z poziomu webservice, jeśli ok - ustawia _wsenv.IDADD
::   WE: _a - tablica buforowa tabeli M
::----------------------------------------------------------------------------------------------------------------------
_buffer:=_a;

_wsenv:=exec('wsenv','#mwapi');
menu_txt(,'Dołącz');

M.cntx_psh();
M.prefix();
M.blank();
_buffer.set();
_chk:=exec('chk_m','!zws_par_kmtr');
{? _chk=''
|| _chk:=Plugin.run('M_VALID_001','ADD',1)
?};
{? _chk=''
|| {? M.add() || _wsenv.IDADD:=M.IDADD ?}
?};
M.cntx_pop();
~~


\m_pop_mwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Obsługa poprawienia materiału z poziomu webservice, jeśli ok - ustawia _wsenv.IDADD
::   WE: _a - tablica buforowa tabeli M
::----------------------------------------------------------------------------------------------------------------------
_buffer:=_a;

_wsenv:=exec('wsenv','#mwapi');
menu_txt(,'Popraw');

M.cntx_psh();
M.index('MATKTM');
M.prefix(_buffer.KTM,);
{? M.first()
|| _chk:='';
:: Nie można zmieniać jednostki miary, gdy są już powiązania
   {? _chk='' & M.count()<>0
   || {? M.J<>_buffer.J
      || _wsenv.add_error('Nie można zmienić jednostki miary dla indeksu %1.'@[M.KTM]);
         _chk:='J'
      ?}
   ?};
:: Nie można zmieniać grupy materiałowej, gdy parametr 600010='N' i są już powiązania
   POMOC.MGR:=null();
   {? _chk=''
   || {? M.MGR<>_buffer.MGR & exec('be_grupa','!zws_par_kmtr')=0
      || _wsenv.add_error('Nie można zmienić grupy materiałowej dla indeksu %1.'@[M.KTM]);
         _chk:='MGR'
      ?}
   ?};
   {? _chk=''
   || _buffer.set();
      _chk:=exec('chk_m','!zws_par_kmtr');
      {? _chk=''
      || _chk:=Plugin.run('M_VALID_001','MOD',1)
      ?};
      {? _chk=''
      || {? M.put() || _wsenv.IDADD:=M.IDADD ?}
      ?}
   ?}
?};
M.cntx_pop();
~~


\jpkgtu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14_01]
:: OPIS: Inicjuje słownik JPK_SLO
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('bl_js_wersja','jpk_v');
HELPJPK.SLO_TYP:='GTU';
exec('bw_jpk_slo','jpk_v')


\mgr_jpkgtu_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14_01]
:: OPIS: Przed redakcją MGR.JPK_GTU
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('jpkgtu','!zws_par_kmtr'); 1


\m_jpkgtu_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14_01]
:: OPIS: Przed redakcją M.JPK_GTU
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
MGR.cntx_psh();
_wyn:=M.MGR().JPK_GTU;
MGR.cntx_pop();
_wyn


\m_jpkgtu_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14_01]
:: OPIS: Przed redakcją M.JPK_GTU
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('jpkgtu','!zws_par_kmtr'); 1


\fap_jpkgtu_pr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.14_01]
:: OPIS: Przed redakcją FAP.JPK_GTU
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('jpkgtu','!zws_par_kmtr'); 1


\m_kh_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Wywołanie okienka wertowania z tabeli M bez powiązanych materiałów w tabeli MDOST
::   WE:
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
M.prefix();

M.win_sel('NL_WERS');

M.f_set('KTM',
   'LEFT JOIN MDOST using(M.reference, MDOST.M)',
   '(MDOST.reference IS NULL OR MDOST.SD = \'S\') AND M.A = \'T\' AND M.RODZ=\'T\'');

_buf:=sql('SELECT M as M FROM MDOST WHERE SD = \'D\'');
{? _buf.first()
|| {!
   |? {? M.f_seek(_buf.M) || M.f_del() ?};
      _buf.next()
   !}
?};
:MDOST.cntx_pop();
M.select();
M.f_clear();
M.cntx_pop();
~~


\m_mdost_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Wywołanie okienka wertowania z tabeli MDOST
::   WE:
::----------------------------------------------------------------------------------------------------------------------
MDOST.cntx_psh();
MDOST.prefix();
MDOST.win_sel('WERS');
MDOST.f_set(,
   'LEFT JOIN M using(MDOST.M, M.reference)',
   'MDOST.SD <> \'S\' AND M.A=\'T\'');
::MDOST.f_set(,,'MDOST.SD <> \'S\'');
MDOST.select();
MDOST.f_clear();
MDOST.cntx_pop();
~~


\po_mdost_kh_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Grupowa poprawa wielu rekordów z tabeli MDOST
::   WE:
::----------------------------------------------------------------------------------------------------------------------
_tab:=MDOST.sel_aget();

MDOST.cntx_psh();
BEER.cntx_psh();
MDOST.win_edit('REDS');
MDOST.hdr_edit('Grupowe poprawianie pozycji'@);
:MDOST.cntx_psh();
:BEER.cntx_psh();
MDOST.blank;
MDOST.D:='';
MDOST.WAL:=null();
BEER.blank;
MDOST.efld_opt('REDS','enable=1',BEER,'ACCESS');
MDOST.efld_opt('REDS','enable=0',,'ILDNI');
::MDOST.efld_opt('REDS','enable=1',BEER,'FCHG');
MDOST.efld_opt('REDS','mark=0',,'KH','KOD');
{? MDOST.edit("{? MDOST.ILDNI<0 & BEER.ACCESS='T' || FUN.info('Ilość dni nie może być ujemna.'@);'ILDNI'
               |? MDOST.D='T' || FUN.info('Dla pola Domyślny nie można ustawić wartości na Tak w przypadku zaznaczenia wielu pozycji. Zmiana możliwa wyłącznie za pomocą akcji Domyślny.'@);'D' || '' ?}")
||
   _dostawca   := {? MDOST.KH<>null || MDOST.KH().ref || null ?};
   _dostepnosc := MDOST.D;
   _termin     := MDOST.ILDNI;
   _mod        := BEER.ACCESS;
   _wal        := MDOST.WAL;
::   _forceChg   := BEER.FCHG;

   MDOST.cntx_psh();
   KOMM.init(250,100,'Kontrola powiązania materiału z kontrahentem');
   {? _tab.first ||
      {! |?
         exec('taz_sd_set','ceny');
         MDOST.seek(_tab.REF,);

         _prev_d:=MDOST.D;
         _prev_kh:=MDOST.KH;

         _mat:=MDOST.M;
         MDOST.cntx_psh();
         MDOST.index('DM');
         MDOST.prefix(TAZ.SD,'T',_mat);
         MDOST.first();
         _refD:=MDOST.ref;
         MDOST.cntx_pop();

         MDOST.cntx_psh();
         MDOST.index('M');
         MDOST.prefix(TAZ.SD,_mat,_dostawca,MDOST.WAL);
         MDOST.first();
         _refKH:=MDOST.ref;
         MDOST.cntx_pop();

         {? _dostawca<>null       || MDOST.KH     := _dostawca ?};
         {? _dostepnosc<>''       || MDOST.D      := _dostepnosc ?};
         {? _termin>=0 & _mod='T' || MDOST.ILDNI  := _termin ?};
         {? _wal<>null()          || MDOST.WAL    := _wal ?};
         _termin2:=MDOST.ILDNI;
         _dostepnosc2:=MDOST.D;

         _err:=exec('chk_mdst_gr','!zws_par_kmtr');

         {? _prev_kh=null & _prev_d='' ||
            MDOST.add()
         |? $MDOST.KH<>$_prev_kh & MDOST.D=_prev_d ||
            {? _err='KH' ||
::               {? _forceChg='T' ||
::                  MDOST.cntx_psh(); MDOST.prefix();
::                  _old_kh:='';
::                  {? MDOST.seek(_refD) & _dostepnosc<>'' || MDOST.D:='N'; MDOST.put(); _old_kh:=MDOST.KH().SKR ?};
::                  MDOST.cntx_pop();
:::               MDOST.D:='N'; MDOST.put();
::
::                  MDOST.cntx_psh(); MDOST.prefix();
:::               {? MDOST.seek(_refKH) || MDOST.D:=_prev_d; MDOST.put() ?}; MDOST.ILDNI:=_termin2;
::                  {? MDOST.seek(_refKH) || MDOST.D:=_dostepnosc2; MDOST.ILDNI:=_termin2; MDOST.put() ?};
::                  MDOST.cntx_pop();
::                  KOMM.add('Materiał %1 posiada już dostawcę %2. Zmiany wprowadzone dla istniejącego dostawcy.'[MDOST.M().KTM,MDOST.KH().SKR],4)
::               ||
                  KOMM.add('Materiał %1 posiada już dostawcę %2. Nie dokonywano zmian.'[MDOST.M().KTM,MDOST.KH().SKR],4)
::               ?}
            ?};
:            {? _err=''   || MDOST.add() ?}
            {? _err=''   || MDOST.put() ?}
         |? $MDOST.KH=$_prev_kh & MDOST.D<>_prev_d ||
            {? _err='D'  ||
::               {? _forceChg='T' ||
::                  MDOST.cntx_psh(); MDOST.prefix();
::                  _old_kh:='';
::                  {? MDOST.seek(_refD) || MDOST.D:='N'; MDOST.put(); _old_kh:=MDOST.KH().SKR ?};
::                  MDOST.cntx_pop();
::                  MDOST.put();
::                  KOMM.add('Dla materiału %1 zmieniono domyślnego dostawcę z %2 na %3.'[MDOST.M().KTM,_old_kh,MDOST.KH().SKR],4)
::               ||
                  KOMM.add('Materiał %1 posiada już domyślnego dostawcę. Nie dokonywano zmian.'[MDOST.M().KTM],4)
::               ?}
             ?};
            {? _err=''   || MDOST.put() ?}
         |? $MDOST.KH<>$_prev_kh & MDOST.D<>_prev_d ||
            {? _err='KH' ||
::               {? _forceChg='T' ||
::                  MDOST.cntx_psh(); MDOST.prefix();
::                  {? MDOST.seek(_refKH) || MDOST.D:=_dostepnosc; MDOST.put() ?};
::                  MDOST.cntx_pop();
::                  KOMM.add('Materiał %1 posiada już dostawcę %2. Zmiany wprowadzone dla istniejącego dostawcy.'[MDOST.M().KTM,MDOST.KH().SKR],4)
::               ||
                  KOMM.add('Materiał %1 posiada już dostawcę %2. Nie dokonywano zmian.'[MDOST.M().KTM,MDOST.KH().SKR],4)
::               ?}
            ?};
            {? _err='D'  ||
::               {? _forceChg='T' ||
::                  MDOST.cntx_psh(); MDOST.prefix();
::                  {? MDOST.seek(_refD) || MDOST.D:='N'; MDOST.put() ?};
::                  MDOST.cntx_pop();
:::                 MDOST.add()
::                  MDOST.put();
::                  KOMM.add('Dla materiału %1 zmieniono domyślnego dostawcę z %2 na %3.'[MDOST.M().KTM,_old_kh,MDOST.KH().SKR],4)
::               ||
                  KOMM.add('Materiał %1 posiada już domyślnego dostawcę. Nie dokonywano zmian.'[MDOST.M().KTM],4)
::               ?}
            ?};
            {? _err='KHD'||
::               {? _forceChg='T' ||
::                  MDOST.cntx_psh(); MDOST.prefix();
::                  _old_kh:='';
::                  {? MDOST.seek(_refD) || MDOST.D:='N'; MDOST.put(); _old_kh:=MDOST.KH().SKR ?};
::                  MDOST.cntx_pop();
::                  MDOST.cntx_psh(); MDOST.prefix();
::                  {? MDOST.seek(_refKH) || MDOST.D:='T'; MDOST.put() ?};
::                  MDOST.cntx_pop();
::                  KOMM.add('Materiał %1 posiada już dostawcę %2. Zmiany wprowadzone dla istniejącego dostawcy. Dla materiału %3 zmieniono domyślnego dostawcę z %4 na %5.'[MDOST.M().KTM,MDOST.KH().SKR,MDOST.M().KTM,_old_kh,MDOST.KH().SKR],4)
::               ||
                  KOMM.add('Materiał %1 posiada już dostawcę %2 oraz domyślnego dostawcę. Nie dokonywano zmian.'[MDOST.M().KTM,MDOST.KH().SKR],4)
::               ?}
            ?};
:            {? _err=''   || MDOST.add() ?}
            {? _err=''   || MDOST.put() ?}
         ||
            MDOST.put()
         ?};

         _tab.next
      !}
   ?};
   {? ~KOMM.empty() || KOMM.select() ?};
   MDOST.cntx_pop()
?};
MDOST.sel_adel;
MDOST.cntx_pop();
BEER.cntx_pop();
~~


\po_mdost_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Poprawa jednego rekordu z tabeli MDOST
::   WE:
::----------------------------------------------------------------------------------------------------------------------
{? MDOST.sel_size()=0 ||
   MDOST.cntx_psh();
   MDOST.win_edit('REDS');
   MDOST.hdr_edit('Grupowe poprawianie pozycji'@);
:   MDOST.cntx_psh();
   MDOST.efld_opt('REDS','enable=0',BEER,'ACCESS');
   MDOST.efld_opt('REDS','enable=1',,'ILDNI');
::   MDOST.efld_opt('REDS','enable=0',BEER,'FCHG');
   MDOST.efld_opt('REDS','mark=0',,'KH','KOD');
   _prev_d:=MDOST.D;
   _prev_kh:=MDOST.KH;

   _mat:=MDOST.M;
   MDOST.cntx_psh();
   MDOST.index('DM');
   MDOST.prefix(TAZ.SD,'T',_mat);
   MDOST.first();
   _ref:=MDOST.ref;
   MDOST.cntx_pop();

   {? MDOST.edit("{? MDOST.D='' || FUN.info('Należy zaznaczyć, czy kontrahent ma być domyślny.'@);'D'
                  |? MDOST.ILDNI>=0 || '' || FUN.info('Ilość dni nie może być ujemna.'@);'ILDNI' ?}")
   ||
      {? MDOST.D='' || MDOST.D:=_prev_d ?};
      {? MDOST.KH=null || MDOST.KH:=_prev_kh ?};
      exec('taz_sd_set','ceny');
      _err:=exec('chk_mdst_gr','!zws_par_kmtr');
      {? $MDOST.KH<>$_prev_d & MDOST.D=_prev_d ||
         {? _err='KH' || FUN.emsg('Materiał %1 posiada już dostawcę %2. Zmiana niemożliwa.'[MDOST.M().KTM,MDOST.KH().SKR]) ?};
         {? _err=''   || MDOST.put() ?}
      |? $MDOST.KH=$_prev_kh & MDOST.D<>_prev_d ||
         {? _err='D'  ||
            _old_dost:='';
            MDOST.cntx_psh(); MDOST.prefix();
            {? MDOST.seek(_ref) || MDOST.D:='N'; MDOST.put(); _old_dost:=MDOST.KH().SKR ?};
            MDOST.cntx_pop();
            MDOST.put();
            FUN.emsg('Dla materiału %1 zmieniono domyślnego dostawcę z %2 na %3.'[MDOST.M().KTM,_old_dost,MDOST.KH().SKR])
          ?};
         {? _err=''   || MDOST.put() ?}
      |? $MDOST.KH<>$_prev_kh & MDOST.D<>_prev_d ||
         {? _err='KH' || FUN.emsg('Materiał %1 posiada już dostawcę %2. Zmiana niemożliwa.'[MDOST.M().KTM,MDOST.KH().SKR]) ?};
         {? _err='D'  ||
            _old_dost:='';
            MDOST.cntx_psh(); MDOST.prefix();
            {? MDOST.seek(_ref) || MDOST.D:='N'; MDOST.put(); _old_dost:=MDOST.KH().SKR ?};
            MDOST.cntx_pop();
            MDOST.put();
            FUN.emsg('Dla materiału %1 zmieniono domyślnego dostawcę z %2 na %3.'[MDOST.M().KTM,_old_dost,MDOST.KH().SKR])
         ?};
         {? _err='KHD'|| FUN.emsg('Podany kontahent %1 jest już w systemie. Zmiana niemożliwa.'[MDOST.KH().SKR]) ?};
         {? _err=''   || MDOST.put() ?}
      ||
         MDOST.put()
      ?}
   ?};
   MDOST.cntx_pop()
:   MDOST.win_edit('RED')
?};
~~


\po_mdost_access
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Akcja Po redagowaniu na odblokowywanie pola Ilość dni w okienku redagowania REDS tabeli MDOST
::   WE:
::----------------------------------------------------------------------------------------------------------------------
_win_red:=MDOST.win_edit('?');
{? _win_red='REDS' ||
   _e1:='enable=1';
   _e0:='enable=0';
   {? BEER.ACCESS='T' ||
      MDOST.efld_opt(_win_red,_e1,,'ILDNI')
   |? BEER.ACCESS='N' ||
      MDOST.efld_opt(_win_red,_e0,,'ILDNI')
   ?}
?};
~~


\chk_mdst_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: akcja rekord po dla dostawcow MDOST - wariant dostawcy
::   WY: akronim blednie wypelnionego pola lub ''
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? _wyn=''
||
   _mat:=MDOST.M;
   _cur:={? -menu_txt='popraw' || MDOST.ref() || null ?};
:: obsluga podwojenia klucza indeksowego
   MDOST.cntx_psh();
   MDOST.index('M');
   MDOST.prefix(TAZ.SD,_mat,MDOST.KH,MDOST.WAL);
   {? -menu_txt='popraw'
   || {? MDOST.first() & _cur<>MDOST.ref() || _wyn:='KH' ?}
   || {? MDOST.first() || _wyn:='KH' ?}
   ?};
   MDOST.cntx_pop();
:: pilnuje aby byl tylko jeden dostawca domyslny
   {? MDOST.D='T' ||
      MDOST.cntx_psh();
      MDOST.index('DM');
      MDOST.prefix(TAZ.SD,'T',_mat);
      {? -menu_txt='popraw'
      || {? MDOST.first() & _cur<>MDOST.ref() || _wyn+='D' ?}
      || {? MDOST.first() || _wyn+='D' ?}
      ?};
      MDOST.cntx_pop()
   ?}
?};
_wyn


\chg_mdost_def_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Ustawienie domyślności dla pojedynczego rekordu
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? MDOST.sel_size()=0 ||
   MDOST.cntx_psh();
   _mat:=MDOST.M;

   MDOST.cntx_psh();
:  MDOST.blank();
   MDOST.index('DM'); MDOST.prefix(TAZ.SD,'T',_mat);
   MDOST.first();
   _ref:=MDOST.ref;
   MDOST.cntx_pop();

   _old_kh:='';
   MDOST.cntx_psh(); MDOST.prefix();
   {? MDOST.seek(_ref) || MDOST.D:='N'; MDOST.put(); _old_kh:=MDOST.KH().SKR ?};
   MDOST.cntx_pop();

   MDOST.D:='T';
   MDOST.put();
   {? _old_kh<>'' & _old_kh<>MDOST.KH().SKR ||
      FUN.emsg('Dla materiału %1 zmieniono domyślnego dostawcę z %2 na %3.'[MDOST.M().KTM,_old_kh,MDOST.KH().SKR])
   ?};
   MDOST.cntx_pop()
?};
~~


\chg_mdost_def_kh_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Ustawienie domyślności dla grupy rekordów
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=MDOST.sel_aget();

_tab_tmp:=exec('mdost_uniq_val','!zws_par_kmtr',_tab);

_tab_ref:=exec('mdost_uniq_val_nt','!zws_par_kmtr',_tab_tmp,'N');

MDOST.cntx_psh(); BEER.cntx_psh();
KOMM.init(250,100,'Kontrola powiązania materiału z kontrahentem');
{? _tab_ref.first ||
   {! |?
      exec('taz_sd_set','ceny');
      MDOST.seek(_tab_ref.REF,);
      _mat:=MDOST.M;

      MDOST.cntx_psh();
      MDOST.index('DM'); MDOST.prefix(TAZ.SD,'T',_mat);
      MDOST.first();
      _ref:=MDOST.ref;
      MDOST.cntx_pop();

      _old_kh:='';
      MDOST.cntx_psh(); MDOST.prefix();
      {? MDOST.seek(_ref) || MDOST.D:='N'; MDOST.put(); _old_kh:=MDOST.KH().SKR ?};
      MDOST.cntx_pop();

      MDOST.D:='T';
      MDOST.put();
      {? _old_kh<>'' & _old_kh<>MDOST.KH().SKR ||
         KOMM.add('Dla materiału %1 zmieniono domyślnego dostawcę z %2 na %3.'[MDOST.M().KTM,_old_kh,MDOST.KH().SKR],4)
      ?};

      _tab_ref.next
   !}
?};

_tab_ref2:=exec('mdost_uniq_val_nt','!zws_par_kmtr',_tab_tmp,'T');
{? _tab_ref2.first ||
   {! |?
      MDOST.seek(_tab_ref2.REF,);
      KOMM.add('Dla materiału %1 nie zmieniono domyślnego dostawcy, ponieważ zaznaczono dla niego więcej niż jednego dostawcę.'[MDOST.M().KTM],4);
      _tab_ref2.next()
   !}
?};

{? ~KOMM.empty() || KOMM.select() ?};

MDOST.sel_adel;
MDOST.cntx_pop(); BEER.cntx_pop();
~~


\po_m_mdost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Dołączanie jednego rekordu do tabeli MDOST na podstawie materiałów z tabeli M
::   WE:
::----------------------------------------------------------------------------------------------------------------------
{? MDOST.sel_size()=0 ||
   TAZ.SD:='D';
   MDOST.cntx_psh(); M.cntx_psh();
   MDOST.win_edit('REDS');
   MDOST.hdr_edit('Grupowe dołączanie danych'@);
:   MDOST.cntx_psh(); M.cntx_psh();
   MDOST.prefix();
   MDOST.blank();
   MDOST.D:='';
   MDOST.efld_opt('REDS','enable=0',BEER,'ACCESS');
   MDOST.efld_opt('REDS','enable=1',,'ILDNI');
::   MDOST.efld_opt('REDS','enable=0',BEER,'FCHG');
   MDOST.efld_opt('REDS','mark=1',,'KH','KOD');

   _mat:=M.ref;

   {? MDOST.edit("{? MDOST.KH=null || FUN.info('Należy wybrać dostawcę.'@);'KH'
                  |? MDOST.D='' || FUN.info('Należy zaznaczyć, czy kontrahent ma być domyślny.'@);'D'
                  |? MDOST.ILDNI<0 || FUN.info('Ilość dni nie może być ujemna.'@);'ILDNI' || '' ?}")
   ||
      {? MDOST.D='' || MDOST.D:='N' ?};
      exec('taz_sd_set','ceny');
      MDOST.M:=_mat;
      MDOST.add();
      {? M.f_seek(_mat) || M.f_del() ?}
   ?};
   MDOST.cntx_pop();M.cntx_pop()
?};
~~


\po_m_mdost_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Dołączanie wielu rekordów do tabeli MDOST na podstawie materiałów z tabeli M
::   WE:
::----------------------------------------------------------------------------------------------------------------------
_tab:=M.sel_aget();
TAZ.SD:='D';
_ref_mat:=tab_tmp(,'REF','STRING[100]','ref');

MDOST.cntx_psh(); BEER.cntx_psh(); M.cntx_psh();
MDOST.win_edit('REDS');
MDOST.hdr_edit('Grupowe dołączanie danych'@);
:MDOST.cntx_psh(); BEER.cntx_psh(); M.cntx_psh();
MDOST.prefix();
MDOST.blank;
MDOST.D:='';
BEER.blank;
MDOST.efld_opt('REDS','enable=0',BEER,'ACCESS');
MDOST.efld_opt('REDS','enable=1',,'ILDNI');
::MDOST.efld_opt('REDS','enable=0',BEER,'FCHG');
MDOST.efld_opt('REDS','mark=1',,'KH','KOD');
{? MDOST.edit("{? MDOST.KH=null || FUN.info('Należy wybrać dostawcę.'@);'KH'
               |? MDOST.D='' || FUN.info('Należy zaznaczyć, czy dostawca ma być domyślny.'@);'D'
               |? MDOST.ILDNI<0 || FUN.info('Ilość dni nie może być ujemna.'@);'ILDNI' || '' ?}")
||
   _dostawca   := MDOST.KH;
   _dostepnosc := MDOST.D;
   _termin     := MDOST.ILDNI;
   _mod        := BEER.ACCESS;
::   _forceChg   := BEER.FCHG;

   M.cntx_psh();
   KOMM.init(250,100,'Kontrola powiązania materiału z kontrahentem'@);
   {? _tab.first ||
      {! |?
         exec('taz_sd_set','ceny');
         M.seek(_tab.REF,);

         _mat:=M.ref;

         MDOST.KH:=_dostawca;
         MDOST.ILDNI:=_termin;
         MDOST.D:=_dostepnosc;
         MDOST.M:=_mat;
         MDOST.add();
         _ref_mat.REF:=$_mat;
         _ref_mat.add();
         _tab.next
      !}
   ?};
   {? ~KOMM.empty() || KOMM.select() ?};
   M.cntx_pop()
?};
M.sel_adel;
{? _ref_mat.first ||
   {! |?
      {? M.f_seek(_ref_mat.REF) || M.f_del() ?};
      _ref_mat.next
   !}
?};
MDOST.cntx_pop();
BEER.cntx_pop();
M.cntx_pop();
:{? M.f_active() || M.f_rfresh() ?};
~~


\mgrp_wb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: "Okienko - przed" dla okna tabeli MGRP.
::   WE: [_a] [STRING] - Akronim okna tabeli MGRP [domyślnie: 'SLO'].
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_wer:={? var_pres('_a')=type_of('') || _a || 'SLO' ?};

MGRP.win_fml(_wer,,'KOD',,'ICON_BEFORE',"Icon.icon_before(MGRP.IKONA)");
~~


\mgrp_wa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: "Okienko - po" dla okna tabeli MGRP.
::   WE: [_a] [STRING] - Akronim okna tabeli MGRP [domyślnie: 'SLO'].
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_wer:={? var_pres('_a')=type_of('') || _a || 'SLO' ?};

MGRP.win_fml(_wer,,'KOD',,'ICON_BEFORE');
~~


\mdost_uniq_val
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Przygotowanie tablicy refów z tabeli MDOST (rozdzielenie na duplikaty i nie)
::   WE: _a- tablica z refami do tabeli mdost
::   WY: tablica z refami rekordów, które się nie powtarzają
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;

:_tab_ref:=tab_tmp(,'REF','STRING[100]','MDOST_ref');
_tab_tmp:=tab_tmp(,'REF','STRING[100]','MDOST_ref','M','STRING[100]','Materiał','DUBEL','STRING[1]','Dubel');
_tab_tmp.index(_tab_tmp.ndx_tmp(,1,'M',,));
_tab_tmp.prefix();
{? _tab.first ||
   {! |?
      MDOST.seek(_tab.REF,);
      _tab_tmp.prefix($MDOST.M);
      {? _tab_tmp.first()
      || {? _tab_tmp.DUBEL<>'T'
         || _tab_tmp.DUBEL:='T'; _tab_tmp.put()
         ?}
      || _tab_tmp.REF:=$MDOST.ref; _tab_tmp.M:=$MDOST.M; _tab_tmp.DUBEL:='N'; _tab_tmp.add() ?};
      _tab.next()
   !}
?};
_tab_tmp


\mdost_uniq_val_nt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.42]
:: OPIS: Przygotowanie tablicy z duplikatami lub bez duplikatów
::   WE: _a- tablica z refami do tabeli mdost
::       _b - który zbiór ('N' - tylko unikalne (bez dubli), 'T' - nieunikalne (zdublowane)
::   WY: tablica z refami rekordów jednego rodzaju (duble, bez dubli)
::----------------------------------------------------------------------------------------------------------------------
_tab_tmp:=_a;
_pref:=_b;
_tab_ref:=tab_tmp(,'REF','STRING[100]','MDOST_ref');
_tab_tmp.index(_tab_tmp.ndx_tmp(,1,'DUBEL',,));
_tab_tmp.prefix(_pref);
{? _tab_tmp.first ||
   {! |?
      _tab_ref.REF:=_tab_tmp.REF; _tab_ref.add();
      _tab_tmp.next()
   !}
?};
_tab_ref


\bnftt_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.42]
:: OPIS: aktualizacja tabeli M_DOD o pole BNFTT
::   WE: _a - M.ref()
::       _b - BNFTT.ref()
::----------------------------------------------------------------------------------------------------------------------
_firma:=exec('firma','ustawienia');
M_DOD.cntx_psh();
M_DOD.index('M_DOD');
M_DOD.prefix(_firma,_a);
{? M_DOD.first()
|| M_DOD.BNFTT:=_b;
   {? exec('mdod_puste','!zws_par_kmtr')
   || M_DOD.del()
   || M_DOD.put(1)
   ?}
|? _b<>null()
|| M_DOD.blank();
   M_DOD.M:=_a;
   M_DOD.FIRMA:=_firma;
   M_DOD.BNFTT:=_b;
   M_DOD.add(1)
?};
M_DOD.cntx_pop();
~~


\m_trig_add_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Trigger po add dla tabeli M
::----------------------------------------------------------------------------------------------------------------------
exec('m_trig_put_a','!zws_par_kmtr');
~~


\m_trig_put_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Trigger po put dla tabeli M
::----------------------------------------------------------------------------------------------------------------------
~~


\pr_idzp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: Przed edycją pola identyfikacji dostawy IDZP dla tabeli M
::----------------------------------------------------------------------------------------------------------------------
{? exec('prmidmob','!zws_par_kmtr') & M.IDMOB='D'
|| 1
|| M.IDZP:=0;
   0
?}


\pr_mj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: przed redakcją pola M.J2
::----------------------------------------------------------------------------------------------------------------------
_j2:=M.J2; _ws2:=M.WS2;
M.cntx_psh();
_res:=M.J<>null() & {? HELP.ADD<>'T' || (M.count()-exec('ileprzyp','!zws_par_kmtr',M.ref()))>=1 || 1 ?};
M.cntx_pop();
M.J2:=_j2; M.WS2:=_ws2;
{? _res & HELP.ADD<>'T' & ~exec('ctrlDok','!zws_par_kmtr',M.ref()) || _res:=0 ?};
_res


\po_mj2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: po redakcji pola M.J2
::----------------------------------------------------------------------------------------------------------------------
{? M.J=M.J2
|| FUN.info('Jednostka musi być różna od podstawowej jednostki miary: %1.'@[M.J().KOD]);
   0
|| {? M.J2=null()
   || M.WS2:=0;
      M.efld_opt(M.win_edit('?'),'mark=0',,'WS2')
   || _ws2:=exec('FindInSet','#table','MJM','JM',M.J2,M.ref(),"@.MJM.PRZ",0);
      {? HELP.ADD<>'T' & _ws2>0
       & (M.WS2=0
        | (M.WS2<>_ws2 & FUN.ask('Istnieje w kartotece przelicznik.\nCzy przypisać jego wartość?'@)))
      || M.WS2:=_ws2
      ?};
      M.efld_opt(M.win_edit('?'),'mark=1',,'WS2')
   ?};
   1
?}


\pr_mws2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: przed redakcją pola M.WS2
::----------------------------------------------------------------------------------------------------------------------
M.J2<>null()


\po_mws2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: po redakcji pola M.WS2
::----------------------------------------------------------------------------------------------------------------------
_len:={? M.WS2>0 || +form(frac(M.WS2))-2 || 3 ?};
_form:='\"\'out_prec=%1\'\"'[$_len];
M.fld_fml('WS2','DISPLAY_FORMAT',($_form)());
1


\m_sv_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14_08]
:: OPIS: Historia stawkek VAT krajów
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,KST,'KRAJ');
__KRAJ_VAT:=null();
M_SV_K.index('OD');
M_SV_K.prefix('0',M.ref);
OKR.win_dict('WER_1');
OKR.actions('WER_1','W');
M_SV_K.hdr_sel({? M.RODZ='T' || ' materiału %1'@[M.KTM] || ' usługi %1'@[M.KTM] ?});
M_SV_K.win_sel('WER');
M_SV_K.select;
OKR.actions('WER_1','');
VAR_DEL.delete('__od','__KRAJ_VAT');
M_SV_K.hdr_sel()


\m_sv_k_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14_08]
:: OPIS: Popraw tabeli M_SV_K
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
__od:=M_SV_K.OD;
1


\m_sv_k_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14_08]
:: OPIS: Usuń tabeli M_SV_K
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? FUN.ask('Czy usunąć bieżący wiersz?'@)
||
   M_SV_K.cntx_psh();
   M_SV_K.index('OD');
   M_SV_K.prefix(M_SV_K.STATUS,M_SV_K.M,M_SV_K.KRAJ);
   _next:=M_SV_K.next();
   M_SV_K.cntx_pop();
   M_SV_K.cntx_psh();
   M_SV_K.index('OD');
   M_SV_K.prefix(M_SV_K.STATUS,M_SV_K.M,M_SV_K.KRAJ);
   {? _next & ~M_SV_K.prev()
   ||
      FUN.info('Usunięcie pierwszego okresu niemożliwe.'@);
      _wyn:=0
   ?};
   M_SV_K.cntx_pop();
   {? _wyn=1
   ||
      do;
      M_SV_K.del();
      end
   ?}
?};
_wyn


\m_sv_k_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14_08]
:: OPIS: Rekord po tabeli M_SV_K
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_wyn:=__CHK.record(M_SV_K,,'KRAJ','OD','VAT');
{? _wyn=''
||
:: sprawdzenie unikalnosci nazwy na paragonie
   _m_ktm:=exec('chk_fis_ktm','!zws_par_kmtr',M.ref,M_SV_K.FIS_KTM,1);
   {? _m_ktm<>''
   || FUN.info('Podany opis pozycji paragonu jest przypisany do indeksu\n%1.'@[_m_ktm]);
      _wyn:='FIS_KTM'
   ?}
?};
{? _wyn=''
||
   _add:=-(1+menu_txt)='d';
   _odrok:=M_SV_K.OD~1;
   _odmc:=M_SV_K.OD~2;
   OKR.index('OKR'); OKR.prefix(REF.FIRMA);
   _okrfirst:={? OKR.first || date(OKR.ROK,OKR.MC,1) || date(0,0,0) ?};

   {? _okrfirst=date(0,0,0) || FUN.info('Nie zdefiniowano okresow obrachunkowych.'@); return('OD') ?};

   {? M_SV_K.OD~3<>1 || FUN.info('Akceptowne są daty z pierwszym dniem miesiąca.'@); return('OD') ?};

   {? _add
   ||
      M_SV_K.cntx_psh;
      M_SV_K.index('OD');
      M_SV_K.prefix(M_SV_K.STATUS,M_SV_K.M,M_SV_K.KRAJ);
      _zmod:=0;
      {? M_SV_K.find_key(M_SV_K.OD)
      ||
         FUN.info('Zdefiniowano już okres rozpoczynający się od dnia %1.'@[$M_SV_K.OD]);
         _wyn:='OD'
      |? ~M_SV_K.last & M_SV_K.OD<>_okrfirst
      ||
         FUN.info('Zmieniono wartość "Od daty" na pierwszy dzień obrachunkowy zdefiniowany w systemie.'@);
         _zmod:=1
      ?};
      M_SV_K.cntx_pop;
      {? _zmod || M_SV_K.OD:=_okrfirst ?};
      _wyn
   ||
      _ref:=M_SV_K.ref;
      _od:=M_SV_K.OD;
      M_SV_K.cntx_psh;
      M_SV_K.index('OD');
      M_SV_K.prefix(M_SV_K.STATUS,M_SV_K.M,M_SV_K.KRAJ);
      {? M_SV_K.seek(_ref)
      ||
         {? M_SV_K.OD=_okrfirst & _od<>_okrfirst
         ||
            FUN.info('Zmiana daty w polu "Obowiązuje od" niedostępna dla pierwszego okresu.'@);
            _wyn:='OD'
         ?}
      ?};
      M_SV_K.cntx_pop;
      {? _wyn=''
      ||
         M_SV_K.cntx_psh;
         M_SV_K.index('OD');
         M_SV_K.prefix(M_SV_K.STATUS,M_SV_K.M,M_SV_K.KRAJ);
         {? M_SV_K.find_key(M_SV_K.OD) & M_SV_K.ref<>_ref
         ||
            FUN.info('Zdefiniowano już okres rozpoczynający się od dnia %1.'@[$M_SV_K.OD]);
            _wyn:='OD'
         ?};
         M_SV_K.cntx_pop
      ?}
   ?}
?};
_wyn


\m_sv_vat_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14_08]
:: OPIS: Przed redakcją M_SV.VAT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SLU.index('NAZ');
SLU.prefix();
SLU.find_key('~STAWKI VAT PL');
1


\m_sv_k_vat_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14_08]
:: OPIS: Przed redakcją M_SV_K.VAT
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
{? M_SV_K.KRAJ=null()
||
   0
||
   SLU.index('NAZ'); SLU.prefix();
   {? SLU.find_key('~STAWKI VAT %1'@[M_SV_K.KRAJ().SYM])
   ||
      SLO.hdr_sel(''); SLO.hdr_sel(SLU.OP); 1
   ?}
?}


\m_sv_k_kraj_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14_08]
:: OPIS: Wartość początkowa M_SV_K.KRAJ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__KRAJ_VAT


\m_sv_k_kraj_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14_08]
:: OPIS: Przed redakcją M_SV_K.KRAJ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
DPOZ.WPR_S:=$fld(); -menu_txt()='dołącz'


\m_sv_k_kraj_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.14_08]
:: OPIS: Po redakcji M_SV_K.KRAJ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? fld()=KST.KRAJ
||
   FUN.info('Należy podać kraj inny od kraju licencjobiorcy.'@);
   0

|? DPOZ.WPR_S=$fld()
||
   1
||
   __KRAJ_VAT:=fld();
   M_SV_K.VAT:=null()
?}


\ae_jm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: po podaniu jednostki miary dla materiału/usługi
::----------------------------------------------------------------------------------------------------------------------
{? M.MGR=null() & M.J().DOKL>-1 || M.DOKL:=M.J().DOKL ?};
1


\ctrlDok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: sprawdza czy indeks nie został wykorzystany na dokuemntach
::   WE: _a - ref M
::   WY: 1-jest ok 0-wykorzystany
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
{? _res & sql('select top 1 REFERENCE from @DK where DK.M=:_a',_a).first() || _res:=0 ?};
{? _res & sql('select top 1 REFERENCE from @FAP where FAP.M=:_a',_a).first() || _res:=0 ?};
{? _res & sql('select top 1 REFERENCE from @ZK_P where ZK_P.M=:_a',_a).first() || _res:=0 ?};
{? _res & sql('select top 1 REFERENCE from @ZD_POZ where ZD_POZ.M=:_a',_a).first() || _res:=0 ?};
{? _res & sql('select top 1 REFERENCE from @OFP where OFP.M=:_a',_a).first() || _res:=0 ?};
{? _res & sql('select top 1 REFERENCE from @REK_N where REK_N.M=:_a',_a).first() || _res:=0 ?};
{? _res & sql('select top 1 REFERENCE from @INP where INP.M=:_a',_a).first() || _res:=0 ?};
{? _res & sql('select top 1 REFERENCE from @PAL_POZ where PAL_POZ.M=:_a',_a).first() || _res:=0 ?};
{? _res & sql('select top 1 REFERENCE from @TR_ZL where TR_ZL.M=:_a',_a).first() || _res:=0 ?};
_res


\stats_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: aktualizacja tabeli M_DOD o pole DEFSTATS
::   WE: _a - M.ref()
::       _b - DEFSTATS.ref()
::----------------------------------------------------------------------------------------------------------------------
_firma:=exec('firma','ustawienia');
M_DOD.cntx_psh();
M_DOD.index('M_DOD');
M_DOD.prefix(_firma,_a);
{? M_DOD.first()
|| M_DOD.DEFSTATS:=_b;
   {? exec('mdod_puste','!zws_par_kmtr')
   || M_DOD.del()
   || M_DOD.put(1)
   ?}
|? _b<>null()
|| M_DOD.blank();
   M_DOD.M:=_a;
   M_DOD.FIRMA:=_firma;
   M_DOD.DEFSTATS:=_b;
   M_DOD.add(1)
?};
M_DOD.cntx_pop();
~~


\ae_mgat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: po uzupełnieniu pola MGAT
::----------------------------------------------------------------------------------------------------------------------
M.GATKOD:={? M.MGAT<>null() || M.MGAT().KOD || '' ?};
1


\m_kolor_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Przed wyświetleniem pola M.KOLOR
::   WY: STRING
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
_wyn:=M.KOLOR+','+M.KOLOR;
_wyn


\m_kol_zmien
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Zmienia kolor bieżącemu materiałowi
::   WE: [_a] - kolor na który chcemy zmienić, jesli nie podany wyświetla okienko wyboru
::----------------------------------------------------------------------------------------------------------------------
_kolor:='';
{? var_pres('_a')=type_of('')
|| _kolor:=_a
?};

{? _kolor<>''
|| M.KOLOR:=_kolor;
   M.put()
|| _q:=exec('edit_color','#edit',M.KOLOR);
   {? _q<>''
   || M.KOLOR:=_q;
      M.put()
   ?}
?};
~~


\mdod_puste
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Sprawdza, czy wszystkie pola M_DOD są null()
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? M_DOD.DEFSTATS=null() & M_DOD.BNFTT=null() & M_DOD.BADSEH=null() & M_DOD.KK=null() & M_DOD.ABC='' & M_DOD.XYZ=''
|| _wyn:=1
?};
_wyn


\kk_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: aktualizacja tabeli M_DOD o pole KK
::   WE: _a - M.ref()
::       _b - KK.ref()
::----------------------------------------------------------------------------------------------------------------------
_firma:=exec('firma','ustawienia');
M_DOD.cntx_psh();
M_DOD.index('M_DOD');
M_DOD.prefix(_firma,_a);
{? M_DOD.first()
|| M_DOD.KK:=_b;
   {? exec('mdod_puste','!zws_par_kmtr')
   || M_DOD.del()
   || M_DOD.put(1)
   ?}
|? _b<>null()
|| M_DOD.blank();
   M_DOD.M:=_a;
   M_DOD.FIRMA:=_firma;
   M_DOD.KK:=_b;
   M_DOD.add(1)
?};
M_DOD.cntx_pop();
~~


\idz_do_tktl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Przejście do technologii materiału
:: ~OST: INFORK
::----------------------------------------------------------------------------------------------------------------------
_uidref:=exec('FindAndGet','#table',TKTL,TKTLW.TKTL,,"TKTL.uidref()",'');

{? _uidref='' || FUN.info('Nie znaleziono technologii.'@); return(~~) ?};
{? exec('interm','#system')
|| _params:=exec('obj_ntab_set','#array',,'LINK',_uidref);
   _link_interm:=link_uri(_params);
   cli_open_link(_link_interm)
|| _domain:='TTE';
   _color:=exec('FindInSet','#table','B_DOMAIN','SYMBOL',_domain,,"B_DOMAIN.COLOR",1,,'');
   mb_fork(,'START_PROCES'
      ,'color='+exec('color_conv','#convert',_color)
      ,'LINK',_uidref)
?};
~~


\m_sv_copy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Kopiowanie tabel ze stawkami VAT
::   WE: _a - referencja źródłowa materiału
::       _b - nowy materiał
::----------------------------------------------------------------------------------------------------------------------
::historia stawek VAT
M_SV.cntx_psh();
M_SV.index('M');
M_SV.prefix(_a);
{? M_SV.first()
||
   {!|?
      M_SV.cntx_psh();
      M_SV.prefix();
      M_SV.M:=_b;
      M_SV.add();
      M_SV.cntx_pop();
      M_SV.next()
   !}
?};
M_SV.cntx_pop();
::historia stawek VAT wg krajów
M_SV_K.cntx_psh();
M_SV_K.index('M');
M_SV_K.prefix(_a);
{? M_SV_K.first()
||
   {!|?
      M_SV_K.cntx_psh();
      M_SV_K.prefix();
      M_SV_K.M:=_b;
      M_SV_K.add();
      M_SV_K.cntx_pop();
      M_SV_K.next()
   !}
?};
M_SV_K.cntx_pop();
::stawki VAT kontrahenta
M_KH_SV.cntx_psh();
M_KH_SV.index('MAT');
M_KH_SV.prefix(_a);
{? M_KH_SV.first()
||
   {!|?
      M_KH_SV.cntx_psh();
      M_KH_SV.prefix();
      M_KH_SV.M:=_b;
      M_KH_SV.add();
      M_KH_SV.cntx_pop();
      M_KH_SV.next()
   !}
?};
M_KH_SV.cntx_pop();
~~


\mz_rekprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [23.25]
:: OPIS: Rekord przed dla tabeli MZ (wykorzystane w oknie WER_ZLIM)
::----------------------------------------------------------------------------------------------------------------------
BEER.JM:=MZ.MZ().J;
exec('rek_zzdk','magazyn_stan');
~~


\abcxyz_m_dod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: aktualizacja tabeli M_DOD o pole ABC/XYZ
::   WE: _a - M.ref()
::       _b - ABC
::       _c - XYZ
::----------------------------------------------------------------------------------------------------------------------
_firma:=exec('firma','ustawienia');
M_DOD.cntx_psh();
M_DOD.index('M_DOD');
M_DOD.prefix(_firma,_a);
{? M_DOD.first()
|| M_DOD.ABC:=_b;
   M_DOD.XYZ:=_c;
   {? exec('mdod_puste','!zws_par_kmtr')
   || M_DOD.del()
   || M_DOD.put(1)
   ?}
|? _b<>'' | _c<>''
|| M_DOD.blank();
   M_DOD.M:=_a;
   M_DOD.FIRMA:=_firma;
   M_DOD.ABC:=_b;
   M_DOD.XYZ:=_c;
   M_DOD.add(1)
?};
M_DOD.cntx_pop();
~~

:Sign Version 2.0 jowisz:1045 2023/12/05 11:35:19 c7d14c1e1c31822015fe066fc2bea0f24224113fd38e8c5fe8e3aa61cbb16c9cf74170151161e90798f174dea8602d54e7fa90dcc796efd6bb30015332ed56828e2962a946ed3d95b36c9ad2e5a5ad15a3283d1b9799ec06a811a057cecdd905af2e9699f3310c3cafba44d486ae2125a9bc4a4dec94fefb7e606bb1e1c0c7bf
