:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_dos_prrb.fml
:: Utworzony: 20.04.2015
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa czynności PKD_DOS_PRRB - Rejestracja rach. bankowych.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rejestracja rachunków bankowych - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::
::# kind=WE,   symbol=OSOBA,     type=_OSOBA,   name=Wskazanie osoby,   required=T, keyref=T

_par:=params_get();
_mp:=_par.mp;
_in:=_par.in;
_akcja:=_mp.akcja();

_result:='';

_uidref:=exec('ref2uid','#table',_in.OSOBA);
{? _uidref=''
|| _result:=exec('error','!pkd_dos_prrb')

|? _mp.isMicro()
|| {? _akcja='START'
::    Wejście do okienka w ramach obszaru roboczego - uruchomienie procesu i pozostawienie go na liście zadań.
   || _mp.keyRef(_uidref);
      _mp.keep()

   |? _akcja='STOP'
::    Wyjście z okienka w ramach obszaru roboczego - anulowanie procesu.
   || _mp.delRef(_uidref);
      _mp.cancel()

   |? _akcja<>''
   || _result:='Czynność %1 nie obsługuje akcji %2.'@ [_mp.buf_act.UID,_akcja]

   ?}

|| {? _akcja='ZAKOŃCZ'
   || _mp.done()

   |? _mp.pathTodo()
   || _value:=exec('select','!pkd_dos_prrb',_in.OSOBA);
      {? type_of(_value)=type_of('')
      || _result:=_value
      |? _value
      || _mp.done()
      || _mp.keep()
      ?}
   ?}
?};

{? _result<>''
:  Obsługa błędów
|| _mp.error(_result);
   FUN.emsg(_result)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Rejestracja rachunków bankowych - formuła opisu zadania.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('desc','osoba',params_get().mp);

{? _tab.ZAW_DANE='T'
|| {? _tab.OBCY='T'
   || 'Zarejestruj rachunki bankowe: %1 %2: Paszport - %3'@@[_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT]
   |? +_tab.PESEL
   || 'Zarejestruj rachunki bankowe: %1 %2: PESEL - %3'@@[_tab.NAZWISKO,_tab.PIERWSZE,_tab.PESEL]
   || 'Zarejestruj rachunki bankowe: %1 %2: Data urodzenia - %3'@@[_tab.NAZWISKO,_tab.PIERWSZE,_tab.UR_DATA]
   ?}
|| 'Zarejestruj rachunki bankowe'@@
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Słownik komunikatów o błędach.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'Rejestrowanie rachunków bankowych niemożliwe.\nNie znaleziono osoby.'


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa czynności wywołanej z listy zadań
::   WE: _a - Wskazanie osoby.
::   WY: Komunikat o błędzie lub informacja o wyjściu z okna poprzez wywołanie sel_exit() - czyli "Zakończ".
::----------------------------------------------------------------------------------------------------------------------
OSOBA.cntx_psh();
OSOBA.prefix();
{? type_of(_a)=type_of(null()) & _a<>null() & OSOBA.seek(_a)
|| PKO.cntx_psh();
   PKO.index('_PKO');
   PKO.prefix(OSOBA.ref());

   PKO.win_sel('WERI');
   PKO.win_edit('RED');

   _ret:=PKO.select();
   PKO.cntx_pop()
|| _ret:=exec('error','!pkd_dos_prrb')
?};
OSOBA.cntx_pop();
_ret


\pko_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Rekord - przed".
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _par:=params_get();
   {? var_pres('_par')>100 &
      var_pres('cfg',_par)>100 &
      var_pres('done',_par.cfg)>100 &
      var_pres('noempty',_par.cfg.done)=type_of('') & var_pres('empty',_par.cfg.done)=type_of('')
   || _hid:=_par.cfg.done.noempty+':'+_par.cfg.done.empty
   || _hid:=''
   ?};
   _hid:={? PKO.UZ='T' || 'M' || '' ?}+_hid;
   PKO.actions_grayed('WER',_hid)
?};
0


\pko_n_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Wybór F3" dla pola PKO.N.
::   WE:
::   WY:
::  OLD: \wyb_os_ror/banki.fml
::----------------------------------------------------------------------------------------------------------------------
_ret:='';
OS_ROR.cntx_psh();
OS_ROR.index('OS_ROR');
OS_ROR.prefix(OSOBA.ref());
OS_ROR.win_sel('WYB');
OS_ROR.win_edit('RED');
OS_ROR.win_patt('RED');
{? OS_ROR.select() || _ret:=OS_ROR.N ?};
OS_ROR.cntx_pop();
_ret


\pko_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Dołącz" dla tabel PKO i OS_ROR.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);
{? _tab=PKO
|| PKO.efld_opt('RED','enable=0',,'UZ')
?};
_tab.blank();
{? _tab.edit("exec('pko_ae','!pkd_dos_prrb')")
|| do();
   exec('update_rbk','banki','D');
   _tab.add();
   end()
?};
~~


\pko_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Popraw" dla tabel PKO i OS_ROR.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);
{? _tab=PKO
|| PKO.efld_opt('RED','enable=0',,'UZ')
?};
_nrk:=_tab.N;
{? _tab.edit("exec('pko_ae','!pkd_dos_prrb')")
|| do();
   exec('update_rbk','banki','P',,_nrk);
   _tab.put();
   end()
?};
~~


\pko_ubg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji grupowej "Usuń - przed"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('del_ask','#table')


\pko_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Usuń" dla tabel PKO i OS_ROR.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);
{? _tab.sel_size() | exec('del_ask','#table')
|| do();
   exec('update_rbk','banki','U');
   _tab.del();
   end()
?};
~~


\pko_domyslny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Domyślny" dla tabel PKO.
::   WE:
::   WY:
::  OLD: \pko_uz/banki.fml
::----------------------------------------------------------------------------------------------------------------------
{? PKO.UZ='T' || return() ?};

do();
_ref:=PKO.ref();
PKO.cntx_psh();
PKO.index('_PKO');
PKO.prefix(OSOBA.ref());
{? PKO.first()
|| {!
   |? _uz:={? PKO.ref()=_ref || 'T' || 'N' ?};
      {? PKO.UZ<>_uz
      || PKO.UZ:=_uz;
         PKO.put()
      ?};
      PKO.next()
   !}
?};
PKO.cntx_pop();
end();
~~


\pko_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Rekord - po" dla tabel PKO i OS_ROR.
::       Sprawdzenie poprawności danych z dodatkowym uwzględnieniem zgodności numeru konta z formatem IBAN.
::   WE:
::   WY: Akronim w przypadku powrotu do redakcji lub 1 w przypadku poprawności danych.
::  OLD: \spr_pko/banki.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);
_popraw:=-menu_txt()='popraw';
_dolacz:=-menu_txt()='dołącz';

_chk:=__CHK.table(_tab,_popraw,,'N','R');
{? type_of(_chk)<>type_of(0) | ~_chk
|| return(_chk)
?};

{? exec('iban_ok','#id',_tab.N)
|| {? __CHK.record(_tab,1,'BA')<>''
   || FUN.emsg('Proszę poprawić numer konta lub dodać bank o podanym numerze do słownika.'@);
      return('BA')
   ?}
|| return('N')
?};

{? PKO.K<0
|| return(__CHK.err_fld(PKO,'K',1,'Wartość nie może być ujemna.'@))
?};

_chk:='';
_numer:=_tab.N;
_dane:='';
_ref:={? _popraw || PKO.ref() || null() ?};
PKO.cntx_psh();
PKO.index('_PKO');
PKO.prefix();
OSOBA.cntx_psh();
_loop:=PKO.first();
{!
|? _loop
|! {? _numer=PKO.N & PKO.ref()<>_ref
   || _chk:='N';
      _dane+='\n'+PKO.OSOBA().PIERWSZE+' '+PKO.OSOBA().NAZWISKO;
      P.cntx_psh();
      P.index('OSOZATR');
      P.prefix(exec('ref_firma','ustawienia'),PKO.OSOBA);
      _count:=sql(
            'select count(*) as L from P '+
            'where FIRMA=:_a and OSOBA=\':_b\'',
            exec('ref_firma','ustawienia'),$PKO.OSOBA
         );
       {? _count.L=1 || _dane+=' numer teczki:' || _dane+=' numery teczek:' ?};
      &_count;
      _loopT:=P.first();
      {!
      |? _loopT
      |! _dane+=' '+P.T+',';
         _loopT:=P.next()
      !};
      _dane-=1;
      P.cntx_pop()
   ?};
   _loop:=PKO.next()
!};
OSOBA.cntx_pop();
PKO.cntx_pop();
{? _popraw | _dolacz
|| PKO_ARCH.cntx_psh();
   OSOBA.cntx_psh();
   _loop:=PKO_ARCH.first();
   {!
   |? _loop
   |! {? _numer=PKO_ARCH.N
      || _chk:='N';
         _dane+='\n'+PKO_ARCH.OSOBA().PIERWSZE+' '+PKO_ARCH.OSOBA().NAZWISKO;
         P.cntx_psh();
         P.index('OSOZATR');
         P.prefix(exec('ref_firma','ustawienia'),PKO.OSOBA);
         _count:=sql(
               'select count(*) as L from P '+
               'where FIRMA=:_a and OSOBA=\':_b\'',
               exec('ref_firma','ustawienia'),$PKO.OSOBA
            );
         {? _count.L=1 || _dane+=' numer teczki:' || _dane+=' numery teczek:' ?};
         &_count;
         _loopT:=P.first();
         {!
         |? _loopT
         |! _dane+=' '+P.T+',';
            _loopT:=P.next()
         !};
         _dane-=1;
         P.cntx_pop()
      ?};
      _loop:=PKO_ARCH.next()
   !};
   OSOBA.cntx_pop();
   PKO_ARCH.cntx_pop()
?};
{? _chk<>''
|| {? FUN.ask('Konto o podanym numerze jest już przypisane do innego pracownika'
            ' lub znajduje się w jego archiwum: %1\nCzy kontynuować?'@[_dane])
   || _chk:=''
   ?}
?};
_chk


\pko_bw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Wyświetl - przed" dla tabeli PKO w okienku WER.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
PKO.efld_opt('RED','enable=1',,'UZ');
PKO.win_edit('RED');
PKO.display()


\pko_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Zakończ". Formuła wykonywana w dwóch środowiskach:
::          - po wywołaniu z listy zadań (okno wertowania tabeli PKO z doklejonym oknem redagowania tabeli OSOBA);
::          - w ramach obszaru roboczego (okno wertowania tabeli PKO jako składowa okna grupowego tabeli OSOBA).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(0,0)=PKO
|| sel_exit()

|| params_set(params_get());
   exec('pkd_run','pkd','ZAKOŃCZ')
?}


\pko_przegladaj_archiwum_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JAKOLTUN [21.14]
:: OPIS: Obsługa akcji "Archiwum".
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
PKO_ARCH.cntx_psh();
PKO_ARCH.index('ARCH');
PKO_ARCH.prefix(OSOBA.ref());
PKO_ARCH.win_sel('WER_ARCH');
PKO_ARCH.select(,1);
PKO_ARCH.cntx_pop();
~~


\pko_archiwizuj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JAKOLTUN [21.14]
:: OPIS: Obsługa akcji "Archiwizuj"
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);
{? _tab.sel_size() | exec('pko_arch_ask','!pkd_dos_prrb')
||
    do();
    PKO_ARCH.cntx_psh();
    PKO_ARCH.index('ARCH');
    PKO_ARCH.prefix();
    PKO_ARCH.OSOBA:=_tab.OSOBA;
    PKO_ARCH.N:=_tab.N;
    PKO_ARCH.BA:=_tab.BA;
    PKO_ARCH.DATA:=date();
    PKO_ARCH.add();
    PKO_ARCH.cntx_pop();
    exec('update_rbk','banki','U');
    _tab.del();
    end()
?};
~~


\pko_archiwizuj_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JAKOLTUN [21.14]
:: OPIS: Obsługa akcji grupowej "Archiwizuj"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('pko_arch_ask','!pkd_dos_prrb')


\pko_arch_przywroc_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JAKOLTUN [21.14]
:: OPIS: Obsługa akcji "Przywróć" w archiwum rachunków bankowych
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_tab:=cur_tab(1,1);
PKO.blank();
PKO.N:=_tab.N;
PKO.BA:=_tab.BA;
PKO.OSOBA:=_tab.OSOBA;
{? _tab=PKO_ARCH
|| PKO.efld_opt('RED','enable=0',,'UZ')
?};
{? PKO.edit("exec('pko_ae','!pkd_dos_prrb')")
|| do();
   exec('update_rbk','banki','D');
   PKO.add();
   _tab.del();
   end()
?};
~~


\pko_arch_ask
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JAKOLTUN [21.14]
:: OPIS: Wyświetla pytanie o zarchiwizowanie rekordu.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ile:=cur_tab(1,1).sel_size();
{? _ile=0
|| _txt:='Czy zarchiwizować bieżący wiersz?'@
|? _ile=1
|| _txt:='Czy zarchiwizować zaznaczony wiersz?'@
|| _txt:='Czy zarchiwizować zaznaczone wiersze?'@
?};
FUN.ask(_txt)


::----------------------------------------------------------------------------------------------------------------------
::  UTW: JAKOLTUN [21.14]
:: OPIS: Obsługa akcji "Usuń" w archiwum rachunków bankowych
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
\pko_arch_usun_b
_tab:=cur_tab(1,1);
{? _tab.sel_size() | exec('del_ask','#table')
|| do();
   _tab.del();
   end()
?};
~~


::----------------------------------------------------------------------------------------------------------------------
::  UTW: JAKOLTUN [21.14]
:: OPIS: Obsługa grupowej akcji "Usuń" w archiwum rachunków bankowych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
\pko_arch_usun_bg
exec('del_ask','#table')

:Sign Version 2.0 jowisz:1045 2023/07/27 07:24:08 dd52128c613970342886ff865aea7b9fa878aaa85d06617f549aac32fb34d746646f41f2432b5b9e3c793b1f4250b2636f1e5f93e7097d7f1be8fa94316599e3188628b7d7a6350d6167c8792f24f94774deeea91e2f3d38cc88c3dc3522186fa331872849cdd501e13f57e404277c1f0b49b1e94587190484ade694d63e4cb6
