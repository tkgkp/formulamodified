:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lum_umo_dprz.fml
:: Utworzony: 17.09.2019
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Rejestracja przewozu dla dla usług - dotyczy umowy cyklicznej i umowy miejskiej
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::       context - [obj_new] obiekt służący do przekazywania kontekstu wywołania czynności
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ
::# kind=WE,   symbol=POS,     type=_POS,     name=Posesja,                                required=N
::# kind=WE,   symbol=UP,      type=_UP,      name=Pozycja umowy cyklicznej,               required=N
::# kind=WE,   symbol=UPM,     type=_UPM,     name=Pozycja umowy miejskiej,                required=N
::# kind=WE,   symbol=RODZ,    type=STRING,   name=Rodzaj przewozu,                        required=N
::# kind=WY,   symbol=UPMZAD,  type=_UPMZAD,  name=Operacja dla usługi,                    required=N

_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
_context:=params_get().context;

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_area:=_mp.pathArea('LUM_UMO');
_proc:=_mp.pathProc();
_todo:=_mp.pathTodo() | (_mp.pathArea() & ~_area);
_auto:=_mp.isAutoRun();

_pos:={? var_pres('POS',_in)=type_of(null()) & _in.POS || _in.POS || null() ?};
_up:={? var_pres('UP',_in)=type_of(null()) & _in.UP || _in.UP || null() ?};
_upm:={? var_pres('UPM',_in)=type_of(null()) & _in.UPM || _in.UPM || null() ?};
_rodz:={? var_pres('RODZ',_in)=type_of('') & _in.RODZ<>'' || _in.RODZ || 'P' ?};

exec('init','lum');

:: Ustawienie kontekstu wg instancji elementu w procesie
{? _mp.pathTodo()
|| {? var_pres('UPMZAD',_out)=type_of(null()) & _out.UPMZAD
   || 1
   |? ~_mp.isMicro()
   || _akcja:='START_TODO'
   || _mp.error('Brak parametru wyjściowego UPMZAD.')
   ?}
?};

:: Sprawdzenie uprawnień
params_set('in',_in,'user',OPERATOR.USER,'mp',_mp);
{? exec('permissions','!lum_umo_dprz')=0
|| _mp.error('Brak uprawnień do uruchomienia czynności.'@);
   return()
?};

_mp.trigRef('UPMZAD',,1,,exec('kind_out','#b_port'),'UPMZAD');

{? (6+_akcja)='Dołącz'
   | _proc
   | _akcja='START_TODO'
|| _menu:={? (6+_akcja)='Dołącz' || 7-_akcja
          |? _rodz='P' || 'podstawienie'
          |? _rodz='Z' || 'wymiana'
          |? _rodz='Z' || 'zabranie'
          |? _rodz='I' || 'inne'
          || 'podstawienie'
          ?};
   params_set('context','D');
   exec('upmzad_add','!lum_umo_dprz',_menu);

::    Podczytanie parametrów wyjściowych
   _outa:=_mp.load(exec('kind_out','#b_port'));
   {? var_pres('UPMZAD',_outa)<>type_of(~~) & _outa.UPMZAD
::       Dodano dokument
   || {? exec('FindAndGet','#table',UPMZAD,_outa.UPMZAD,,"STAT_REJ='Z'",0)
      || _mp.done()
      ?};
::       Ustawienie się na dodanym dokumencie w widoku obszaru
      {? _area || UPMZAD.seek(_outa.UPMZAD) ?}
::       Wycofanie czynności bo nie dodano dokumentu
   || _mp.cancel()
   ?}

|? _akcja='Popraw'
   | _todo
|| params_set('context','P');
   {? var_pres('UPMZAD',_out)=type_of(null())
:: Uruchomione w procesie
   || UPMZAD.cntx_psh();
      UPMZAD.prefix();
      {? UPMZAD.seek(_out.UPMZAD)
      || {? ~_todo | UPMZAD.STAT_REJ='N'
         || exec('upmzad_mod','!lum_umo_dprz')
         ?};
         _mp.descTodo();
         {? exec('FindAndGet','#table',UPMZAD,_out.UPMZAD,,"STAT_REJ='Z'",0)
         || _mp.done()
         ?}
      ?};
      UPMZAD.cntx_pop()
   |? _todo
:: Uruchomione zadanie z listy todo i brak _out.UPMZAD wtedy zadanie wycofujemy
   || _mp.cancel()
   |? _mp.isMicro()
:: Uruchomione poza procesem
   || exec('upmzad_mod','!lum_umo_dprz');
      _mp.descTodo();
      {? var_pres('UPMZAD',_out)=type_of(null()) & exec('FindAndGet','#table',UPMZAD,_out.UPMZAD,,"STAT_REJ='Z'",0)
      || _mp.done()
      ?}
   ?}

|? _akcja='Zakończ_wer' & _area
|| {? exec('upmzad_akc','!lum_umo_dprz') || _mp.done() ?}

|? _akcja='Usuń'
|| {? var_pres('UPMZAD',_out)=type_of(null())
:: Uruchomione w procesie
   || _upmzad:=null();
      UPMZAD.cntx_psh();
      {? ~_area || UPMZAD.prefix() ?};
      {? UPMZAD.seek(_out.UPMZAD)
      ||
         exec('upmzad_del','!lum_umo_dprz');

         {? ~UPMZAD.seek(_out.UPMZAD)
::       Wycofuję instancję jeśli nie znaleziono dokumentu
         || _mp.cancel()
         ?};
         _upmzad:=UPMZAD.ref()
      ?};
      UPMZAD.cntx_pop();
::    Ustawienie się na kolejnym dokumencie w widoku obszaru
      {? _area || {? _upmzad || UPMZAD.seek(_upmzad) ?} ?}
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      exec('upmzad_del','!lum_umo_dprz');

      _mp.done()
   ?}

||
   _mp.error('Nieobsługiwana ścieżka.'@)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_out:=_mp.load(exec('kind_out','#b_port'));

{? var_pres('UPMZAD',_out)=type_of(null()) & _out.UPMZAD
|| _rodz:=exec('FindAndGet','#table',UPMZAD,_out.UPMZAD,,"RODZ",'');
   {? _rodz='P' || 'Zakończ rejestrację przewozu (podstawienie) dla usługi: %1'@@ [exec('record','#to_string',_out.UPMZAD)]
   |? _rodz='W' || 'Zakończ rejestrację przewozu (wymiana) dla usługi: %1'@@ [exec('record','#to_string',_out.UPMZAD)]
   |? _rodz='Z' || 'Zakończ rejestrację przewozu (zabranie) dla usługi: %1'@@ [exec('record','#to_string',_out.UPMZAD)]
   |? _rodz='N' || 'Zakończ rejestrację przewozu (inne) dla usługi: %1'@@ [exec('record','#to_string',_out.UPMZAD)]
   || 'Zakończ rejestrację przewozu (nieokreślone) dla usługi: %1'@@ [exec('record','#to_string',_out.UPMZAD)]
   ?}

::   _rodzaj:={? _rodz='P' || 'podstawienie'
::            |? _rodz='W' || 'wymiana'
::            |? _rodz='Z' || 'zabranie'
::            |? _rodz='N' || 'inne'
::            || 'nieokreślone'
::            ?};
::   'Zakończ rejestrację przewozu (%2) dla usługi: %1'@@ [exec('record','#to_string',_out.UPMZAD),_rodzaj]
|| 'Zarejestruj przewóz dla usługi'@@
?}


\permissions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Formuła na uprawnienia dla czynności
::   WE: params_get().in - parametry wejściowe czynności
::           params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::           params_get().mp - Menedżer Procesów
::   WY: 0 - użytkownik nie ma uprawnień do czynności
::       1 - użytkownik ma uprawnienia do czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_user:=params_get().user;
_mp:=params_get().mp;
_wyn:=1;
_wyn


\upmzad_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: dołączenie nowego przewozu
::   WE: [_a] - zamiast wywołania na podstawie menu
::  OLD: \qtras_add_qzad/qtrasy.fml
::----------------------------------------------------------------------------------------------------------------------
_act:={? var_pres('_a')=type_of('') || _a || menu_txt() ?};
{? var_press('__QPODT')<=0 || __QPODT:='UP' ?};

_ctrlslu:=exec('get','#params',100181,2);
_ref_slu:={? _ctrlslu<>'' || exec('FindInSet','#table','SLU','NAZ',_ctrlslu,,,1,,null()) || null() ?};
_form:="";
_context:=params_get.context;
params_set('context',_context);

{? {? __QPODT='UP' || UP.MJ=null() || UPMPOJ.M=null() ?}
|| FUN.info('Należy najpierw wskazać pozycję z usługą.\nDołączenie przewozu niemożliwe.'@);
   return(0)
?};

{? _ref_slu=null()
|| FUN.info('Wymagane ustawienie parametru aplikacyjnego 100181 - Słownik żądań.\nNiemożliwa edycja podstawień.'@);
   0
|| {? __QPODT='UP'
   ||
      UPMZAD.blank();
      UPMZAD.USER:=gsub(10+username(),'~',' ')+' '+$date()+' '+$time();
      UPMZAD.ID:=$UPMZAD.tm_stamp();
      UPMZAD.RUM:='UM';
      UPMZAD.TAB:='UP';
      UPMZAD.REF:=#UP.ref;
      UPMZAD.CRC:=UP.crc;
      UPMZAD.KH:=UP.UM().KH;
      UPMZAD.KH:=UP.UM().KH;
      UPMZAD.IDUM:=UP.UM().IDADD;
      _form:={? UP.OSLONA<>null() || "0" || "1" ?};
      {? (-_act)='podstawienie' | (-_act)='inne'
      ||  _kod:=exec('get','#params',100186,2);
          UPMZAD.POS:=UP.POS;
          UPMZAD.MIA:=UP.POS().MIA;
          UPMZAD.UL:=UP.POS().UL;
          UPMZAD.NEW_M:=UP.MJ;
          UPMZAD.DZI:=UP.POS().DZI;
          UPMZAD.NEW_IL:=UP.IL;
          UPMZAD.ONAG:=UP.OSLONA;
          UPMZAD.DP:=date();
          UPMZAD.RODZ:={? (-_act)='inne' || 'N' || 'P' ?};
          {? _kod<>'' || UPMZAD.SLO:=exec('FindInSet','#table','SLO','SL',_kod,_ref_slu,,1,,null()) ?}
      |? (-_act)='wymiana'
      ||  _kod:=exec('get','#params',100187,2);
          UPMZAD.POS:=UP.POS;
          UPMZAD.MIA:=UP.POS().MIA;
          UPMZAD.UL:=UP.POS().UL;
          UPMZAD.DZI:=UP.POS().DZI;
          UPMZAD.OLD_M:=UP.MJ;
          UPMZAD.OLD_IL:=UP.IL;
          UPMZAD.ONAG:=UP.OSLONA;
          UPMZAD.DP:=date();
          UPMZAD.RODZ:='W';
          {? _kod<>'' || UPMZAD.SLO:=exec('FindInSet','#table','SLO','SL',_kod,_ref_slu,,1,,null()) ?}
      |? (-_act)='zabranie'
      ||  _kod:=exec('get','#params',100188,2);
          UPMZAD.POS:=UP.POS;
          UPMZAD.MIA:=UP.POS().MIA;
          UPMZAD.UL:=UP.POS().UL;
          UPMZAD.DZI:=UP.POS().DZI;
          UPMZAD.OLD_M:=UP.MJ;
          UPMZAD.OLD_IL:=UP.IL;
          UPMZAD.ONAG:=UP.OSLONA;
          UPMZAD.DP:=date();
          UPMZAD.RODZ:='Z';
          {? _kod<>'' || UPMZAD.SLO:=exec('FindInSet','#table','SLO','SL',_kod,_ref_slu,,1,,null()) ?}
      ?}
   ||
      UPMZAD.blank();
      UPMZAD.USER:=gsub(10+username(),'~',' ')+' '+$date()+' '+$time();
      UPMZAD.ID:=$UPMZAD.tm_stamp();
      UPMZAD.RUM:='UMM';
      UPMZAD.TAB:='UPMPOJ';
      UPMZAD.REF:=#UPMPOJ.ref;
      UPMZAD.CRC:=UPMPOJ.crc;
      UPMZAD.IDUM:=UPM.UM().IDADD;
      _form:={? UPMPOJ.ONAG<>null() || "0" || "1" ?};
      {? (-_act)='podstawienie' | (-_act)='inne'
      ||  _kod:=exec('get','#params',100186,2);
          UPMZAD.POS:=UPM.POS;
          UPMZAD.MIA:=UPMZAD.POS().MIA;
          UPMZAD.UL:=UPMZAD.POS().UL;
          UPMZAD.NEW_M:=UPMPOJ.M;
          UPMZAD.DZI:=UPMZAD.POS().DZI;
          UPMZAD.NEW_IL:=UPMPOJ.IL;
          UPMZAD.ONAG:={? UPMPOJ.ONAG<>null() || UPMPOJ.ONAG || UPM.ONAG ?};
          UPMZAD.DP:=date();
          UPMZAD.RODZ:={? (-_act)='inne' || 'N' || 'P' ?};
          {? _kod<>'' || UPMZAD.SLO:=exec('FindInSet','#table','SLO','SL',_kod,_ref_slu,,1,,null()) ?}
      |? (-_act)='wymiana'
      ||  _kod:=exec('get','#params',100187,2);
          UPMZAD.POS:=UPM.POS;
          UPMZAD.MIA:=UPMZAD.POS().MIA;
          UPMZAD.UL:=UPMZAD.POS().UL;
          UPMZAD.DZI:=UPMZAD.POS().DZI;
          UPMZAD.OLD_M:=UPMPOJ.M;
          UPMZAD.OLD_IL:=UPMPOJ.IL;
          UPMZAD.ONAG:={? UPMPOJ.ONAG<>null() || UPMPOJ.ONAG || UPM.ONAG ?};
          UPMZAD.DP:=date();
          UPMZAD.RODZ:='W';
          {? _kod<>'' || UPMZAD.SLO:=exec('FindInSet','#table','SLO','SL',_kod,_ref_slu,,1,,null()) ?}
      |? (-_act)='zabranie'
      ||  _kod:=exec('get','#params',100188,2);
          UPMZAD.POS:=UPM.POS;
          UPMZAD.MIA:=UPMZAD.POS().MIA;
          UPMZAD.UL:=UPMZAD.POS().UL;
          UPMZAD.DZI:=UPMZAD.POS().DZI;
          UPMZAD.OLD_M:=UPMPOJ.M;
          UPMZAD.OLD_IL:=UPMPOJ.IL;
          UPMZAD.ONAG:={? UPMPOJ.ONAG<>null() || UPMPOJ.ONAG || UPM.ONAG ?};
          UPMZAD.DP:=date();
          UPMZAD.RODZ:='Z';
          {? _kod<>'' || UPMZAD.SLO:=exec('FindInSet','#table','SLO','SL',_kod,_ref_slu,,1,,null()) ?}
      ?}
   ?};
   UPMZAD.cntx_psh();
   UPMZAD.memo_set('','UW');
   UPMZAD.prefix();
   UPMZAD.fld_fml('ONAG','BEFORE_EDIT',_form);
   exec('upmzad_nag_win_edit_set','!lum_umo_dprz',1);
   {? UPMZAD.edit("exec('chk_upmzad','!lum_umo_dprz')")
   || {? UPMZAD.add()
      || UPMZAD.memo_put(,'UW')
      ?}
   ?};
   UPMZAD.fld_fml('ONAG','BEFORE_EDIT',"");
   UPMZAD.cntx_pop()
?};
''


\upmzad_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: modyfikacja przewozu
::----------------------------------------------------------------------------------------------------------------------
_context:=params_get.context;
params_set('context',_context);

UPMZAD.cntx_psh();
UPMZAD.get();
UPMZAD.prefix();
_form:={? UPMZAD.RUM='UM'
       || _form:={? exec('FindAndGet','#table',UP,UPMZAD.REF,,"OSLONA",null())<>null()
                 || "0"
                 || "1"
                 ?}
       || _form:={? exec('FindAndGet','#table',UPMPOJ,UPMZAD.REF,,"ONAG",null())<>null()
                 || "0"
                 || "1"
                 ?}
       ?};
UPMZAD.fld_fml('ONAG','BEFORE_EDIT',_form);
exec('upmzad_nag_win_edit_set','!lum_umo_dprz',1);
__QPODT:={? UPMZAD.RUM='UM' || 'UP' || 'UPMPOJ' ?};
{? UPMZAD.edit("exec('chk_upmzad','!lum_umo_dprz')")
|| {? UPMZAD.put(1)
   || UPMZAD.memo_put(,'UW')
   ?}
?};
UPMZAD.fld_fml('ONAG','BEFORE_EDIT',"");
UPMZAD.cntx_pop();
~~


\upmzad_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Zwraca okno redakcji tabeli UPMZAD
::   WE: [_a] - akronim okna
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || _a:='RED' ?};

_win_akr:=_a;
{? _win_akr='RED'
:: Tymczasowe okno redakcji
|| _win_red:=UPMZAD.mk_edit('Przewóz dla usługi'@,,,,,'html_maximized');
   UPMZAD.win_ewin(_win_red,,_win_akr);
   _win_red
|| _win_akr
?}


\upmzad_nag_win_edit_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Ustawia okno redakcji tabeli TR_NAG, wymagane pola, okna słowników
::   WE: [_a] - czy klawisz zakończ 1(domyślnie)-tak 0-nie
::       [_b] - 1-tryb Display 0-(domyślnie) nie
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || _a:=1 ?};
_disp:={? var_pres('_b')=type_of(0) || _b || 0 ?};

BPMN.END:=0;

_win_red:=exec('upmzad_win_edit','!lum_umo_dprz','RED');
{? ~_disp
|| {? UPMZAD.STAT_REJ='N'
   || _ff:="params_exec('priority_action_red','#b__box')";
      UPMZAD.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin'['Pr&iorytet'@],_ff);

      {? _a
      || _ff:="params_exec('upmzad_zakoncz_red','!lum_umo_dprz')";
         UPMZAD.win_ebtn(_win_red
          ,'text=%1,btn_label_align=center,panel=bottom,align=end'['&Zakończ'@],_ff)
      ?}
   ?};
   exec('ok_esc','#window',UPMZAD,_win_red,1)
?};
UPMZAD.win_edit(_win_red);
exec('set_efld_opt','!lum_umo_dprz',_win_red);
~~


\upmzad_zakoncz_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przewóz - Zakończ - okno redagowania
::   WE: params_get()
::   WY: 'key:F2' - jeśli pola nagłówka zamówienia sprzedaży prawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka zamówienia sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_context:=params_get.context;
params_set('context',_context);

_btnRuleResult:='';

_fld:=exec('chk_upmzad','!lum_umo_dprz');
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| {? exec('upmzad_akc','!lum_umo_dprz',,_context<>'D')
   || _btnRuleResult:='key:F2'
   ?}
?};
_btnRuleResult


\set_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: Zaznacza wymagalne pola w przewozie
::   WE: _a - akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
_win_red:={? var_pres('_a')=type_of('') || _a || UPMZAD.win_edit('?') ?};

{? UPMZAD.RODZ='Z'
|| UPMZAD.efld_opt(_win_red,'mark=0',,'NEW_M');
   UPMZAD.efld_opt(_win_red,'mark=0',,'NEW_IL');
   UPMZAD.efld_opt(_win_red,'editable=grayed',,'NEW_M');
   UPMZAD.efld_opt(_win_red,'editable=grayed',,'NEW_IL')
|? UPMZAD.RODZ='W'
|| UPMZAD.efld_opt(_win_red,'mark=1',,'NEW_M');
   UPMZAD.efld_opt(_win_red,'mark=1',,'NEW_IL');
   UPMZAD.efld_opt(_win_red,'editable=1',,'NEW_M');
   UPMZAD.efld_opt(_win_red,'editable=1',,'NEW_IL')
|| UPMZAD.efld_opt(_win_red,'mark=1',,'NEW_M');
   UPMZAD.efld_opt(_win_red,'mark=1',,'NEW_IL');
   UPMZAD.efld_opt(_win_red,'editable=1',,'NEW_M');
   UPMZAD.efld_opt(_win_red,'editable=1',,'NEW_IL');
   UPMZAD.efld_opt(_win_red,'editable=0',,'OLD_IL')
?};
UPMZAD.efld_opt(_win_red,'mark=1',,'RODZ');
UPMZAD.efld_opt(_win_red,'mark=1',,'DP');
1


\upmzad_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: zakończenie redakcji transportu
::   WE: [_a] - 0-z pytaniami(domyślnie) 1-bez
::       [_b] - 1-modyfikacja(domyślnie), 0-nie
::   WY: 1-zakończono rejestrację 0-nie
::----------------------------------------------------------------------------------------------------------------------
_auto:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_mode:={? var_pres('_b')=type_of(0) || _b || 1 ?};

_wyn:=0;
_fld:='';
exec('ini_kom','#message','Informacje o zakończeniu rejestracji przewozu dla usługi.'@);
__kom_gr:='Przewóz dla usługi'@;
{? ~_mode | (exec('upmzad_lock','!lum_umo_dprz') & UPMZAD.r_lock(1,1,1))
||
   {? UPMZAD.STAT_REJ='N'
   || {? (_auto | FUN.ask('Zakończyć rejestrację przewozu:\n%1?'@[exec('UPMZAD','#to_string')]))
      || UPMZAD.prefix();
         UPMZAD.STAT_REJ:='Z';
         {? ~_mode | UPMZAD.put()
         || _wyn:=1;
            _auto:=1;
            exec('add_kom','#message','Zakończono rejestrację przewozu'@,1)
         ?}
      ?}
   || exec('add_kom','#message'
        ,{? UPMZAD.STAT_REJ='Z'
         || 'Przewóz ma status zakończenia rejestracji'@
         || 'Nieprawidłowy status rejestracji przewozu'@
         ?},2);
      _wyn:=1
   ?};
   {? _mode || UPMZAD.r_unlock() ?}
?};
{? _wyn & (_auto | ~_mode) & var_pres('__kom_on')=type_of(1)
||
   __kom_on:=0
?};
exec('end_kom','#message');
_wyn


\chk_upmzad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: kontrola poprawności wypełnienia pól
::----------------------------------------------------------------------------------------------------------------------
_res:={? UPMZAD.RODZ='Z' || __CHK.record(UPMZAD,,'SLO','DP') || __CHK.record(UPMZAD,,'NEW_M','SLO','DP') ?};
{? _res='' & UPMZAD.NEW_IL<=0 & UPMZAD.RODZ<>'Z'
|| FUN.info('Należy podać ilość większą od zera.'@);
   _res:='NEW_IL'
?};
{? _res='' & __QPODT='UPMPOJ'
|| {? UPMZAD.RODZ='W' | UPMZAD.RODZ='Z'
   || {? UPMZAD.OLD_IL>UPMPOJ.IL
      || FUN.info('Dotychczasowa ilość nie może być większa od %1.'@[$UPMPOJ.IL]);
         _res:='OLD_IL'
      ?};
      {? _res='' & UPMZAD.OLD_IL<=0 & UPMPOJ.IL>0
      || FUN.info('Dotychczasowa ilość musi być większa od zera.'@);
         _res:='OLD_IL'
      ?};
      {? _res='' & UPMZAD.OLD_IL<0 & UPMPOJ.IL=0
      || FUN.info('Dotychczasowa ilość nie może być mniejsza od zera.'@);
         _res:='OLD_IL'
      ?}
   ?}
?};
{? _res='' & __QPODT='UP'
|| {? UPMZAD.RODZ='W' | UPMZAD.RODZ='Z'
   || {? UPMZAD.OLD_IL>UP.IL
      || FUN.info('Dotychczasowa ilość nie może być większa od %1.'@[$UP.IL]);
         _res:='OLD_IL'
      ?};
      {? _res='' & UPMZAD.OLD_IL<=0 & UP.IL>0
      || FUN.info('Dotychczasowa ilość musi być większa od zera.'@);
         _res:='OLD_IL'
      ?};
      {? _res='' & UPMZAD.OLD_IL<0 & UP.IL=0
      || FUN.info('Dotychczasowa ilość nie może być mniejsza od zera.'@);
         _res:='OLD_IL'
      ?}
   ?}
?};
_res


\add_blk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: dodanie zapis do tabeli blokad
::   WE: _a - UPMZAD.ref()
::   WY: 1 - zablokowano
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
UPMZAD.cntx_psh();
{?( #_a)>0 & (UPMZAD.clear(); UPMZAD.r_lock(1,1,1,#_a,ref_name(_a)) & UPMZAD.seek(_a)) & UPMZAD.r_lock(1,1,1)
|| _wyn:=1
?};
UPMZAD.cntx_pop();
_wyn



\upmzad_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: lock nagłówka przewozu
::   WE: _a - czy pytac o osobe blokujaca
::   WY: _wyn - 0-zablokowany 1-bez blokady
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=1 ?};

_wyn:=UPMZAD.r_lock(1,1,1);
{? _wyn=0 & _a & FUN.ask('Przewóz dla %1 obsługuje inny użytkownik.\nCzy chcesz zobaczyć kto?'@[exec('UPMZAD','#to_string')])
|| UPMZAD.r_lock(1,,1)
?};
UPMZAD.r_unlock();
_wyn


\upmzad_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: usuniecie przewozu
::   WE: [_a] - =1-usuwac zamowienie bez pytania, 0-wpp
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(1) || _a:=0 ?};

{? 'N'*UPMZAD.STAT_REJ & exec('upmzad_lock','!lum_umo_dprz') & UPMZAD.r_lock(1,1,1)
|| {? _a=1 | FUN.ask('Usunąć przewóz:\n%1?'@[exec('UPMZAD','#to_string')])
   || {? UPMZAD.r_lock(1)
      || UPMZAD.del(1)
      ?}
   ?};
   UPMZAD.r_unlock()
?};
1


\pr_dr_upmzad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.42]
:: OPIS: przed redakcją daty realizacji
::----------------------------------------------------------------------------------------------------------------------
UPMZAD.RODZ='N'


:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:40 b9ea2a785fb4034e5ee375b126687fadfff1f2e9d9e829452c6b305bb675f0727bd88a416e3a2bc4d2301cc13a8fe8071467657f5604728f272b2755e02170f77861f3f94f86534741d2bbe11748de4186b084254c7ffd35d41605caf6f40a6e698606201c45358e294a18d6ab1ff0a41e48dcbb63e5dc5a57bf29367c140a85
