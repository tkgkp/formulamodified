:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ppl_pll_rkor.fml
:: Utworzony: 15.12.2015
:: Autor: TMR
::======================================================================================================================
:: Zawartość: Obsługa czynności PPL_PLL_RKOR - Rej. korekt ZUS
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Rejestracja korekt ZUS - główna formuła czynności.
::   WE: P [REFERENCE] - Wskazanie na pracownika
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::# access=exec('run_cond_p','pkd')
::# parses=exec('parses','!ppl_pll_rkor')
::
::# kind=WE, symbol=P, type=_P, name=Wskazanie pracownika, required=T, keyref=T
::
::# kind=WY, symbol=P, type=_P, name=Wskazanie pracownika, required=N
::
_par:=params_get();
params_set(_par);
_mp:=_par.mp;
_in:=_par.in;
_out:=_par.out;
_akcja:=_mp.akcja();

_result:='';

_uidref:=exec('ref2uid','#table',_in.P);
{? _uidref=''
|| _result:=exec('error','!ppl_pll_rkor')

|? _mp.isMicro()
|| {? _akcja='START'
::    Wejście do okienka w ramach obszaru roboczego - uruchomienie procesu i pozostawienie go na liście zadań.
   || _mp.keyRef(_uidref);
      _mp.keep()

   |? _akcja='STOP'
::    Wyjście z okienka w ramach obszaru roboczego - anulowanie procesu.
   || _mp.delRef(_uidref);
      _mp.cancel()

   |? _akcja<>''
   || _result:='Czynność %1 nie obsługuje akcji %2.'@ [_mp.buf_act.UID,_akcja]

   ?}

|| {? _akcja='ZAKOŃCZ'
   || _out.P:=_in.P;
      _mp.save(,_out);
      _mp.done()

   |? _mp.pathTodo()
   || _value:=exec('select','!ppl_pll_rkor',_in.P);
      {? type_of(_value)=type_of('')
      || _result:=_value
      |? _value
      || _out.P:=_in.P;
         _mp.save(,_out);
         _mp.done()
      || _mp.keep()
      ?}
   ?}
?};

{? _result<>''
:  Obsługa błędów
|| _mp.error(_result);
   FUN.emsg(_result)
?};
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Rejestracja korekt ZUS - formuła opisu zadania.
::   WE:
::   WY: opis czynności na liście zadań
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('desc','pracownik',params_get().mp);
{? _tab.ZAW_DANE='T'
|| {? _tab.OBCY='T'
   || 'Zarejestruj korekty ZUS: %1 %2: Paszport - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PASZPORT,_tab.T,_tab.IP]
   |? +_tab.PESEL
   || 'Zarejestruj korekty ZUS: %1 %2: PESEL - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.PESEL,_tab.T,_tab.IP]
   || 'Zarejestruj korekty ZUS: %1 %2: Data urodzenia - %3, Numer teczki - %4, Identyfikator - %5'@@
         [_tab.NAZWISKO,_tab.PIERWSZE,_tab.UR_DATA,_tab.T,_tab.IP]
   ?}
|| 'Zarejestruj korekty ZUS'@@
?}


\error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Zwraca treść komunikatu błędu
::   WE:
::   WY: treść komunikatu
::----------------------------------------------------------------------------------------------------------------------
'Rejestrowanie korekt ZUS niemożliwe.\nNie znaleziono pracownika.'


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Obsługa czynności wywołanej z listy zadań.
::   WE: _a [REFERENCE] - Wskazanie pracownika.
::   WY: Komunikat o błędzie lub informacja o wyjściu z okna poprzez wywołanie sel_exit() - czyli "Zakończ".
::  OLD: \korn_sel/kor_zus.fml
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
P.prefix();
{? type_of(_a)=type_of(null()) & _a<>null() & P.seek(_a)
|| OSOBA.cntx_psh();
   P.OSOBA();
   VAR.O();
   KOR.cntx_psh();
   KORN.cntx_psh();
   KORN.index('KOR_NAPN');
   KORN.prefix(P.ref());
   KORN.win_sel(exec('wnd','!ppl_pll_rkor'));
   KORN.win_edit('RED');
   _ret:=KORN.select();
   KORN.cntx_pop();
   KOR.cntx_pop();
   OSOBA.cntx_pop()
|| _ret:=exec('error','!ppl_pll_rkor')
?};
P.cntx_pop();
_ret


\wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Przygotowanie okna wertowania korekt ZUS.
::----------------------------------------------------------------------------------------------------------------------
_mode:='maximized';

_wnd:=KORN.grp_make('Korekty ZUS',"mb_exec('GRP_EDISP_P_INFO_P')",'kor_zus_weri',,,,,_mode);
KORN.grp_edit(_wnd,P,'INFO_P',,,,,,_mode);
KORN.grp_splt(_wnd,,'horizontal','kor_zus');
KORN.grp_sel(_wnd,,'WER',,,,,,,,,,_mode,,1);

KORN.win_fml('WER',EDIT_VAR,'KORN_MCL',,'ICON_BEFORE',"exec('x_zalacz_icon','zalacz')");

_wnd


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Formuła ustalająca wartości parametrów sesji.
::   WE:
::   WY: 1 - Środowisko udało się ustalić (czynność może być uruchomiona).
::       0 - Środowiska nie udało się ustalić (czynność nie może być uruchomiona).
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;

_ret:=0;
{? var_pres('P',_in)=type_of(null()) & _in.P<>null()
|| P.cntx_psh();
   P.prefix();
   {? P.seek(_in.P)
   || _args:=__PARSES.args('F_ZATR');
      _args.REF:=P.F_ZATR;
      _ret:=__PARSES.setVal('F_ZATR',_args)
   ?};
   P.cntx_pop()
?};
_ret


\korn_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Obsługa akcji "Zakończ". Formuła wykonywana w dwóch środowiskach:
::       - po wywołaniu z listy zadań (okno wertowania tabeli KORN);
::       - w ramach obszaru roboczego (okno wertowania tabeli KORNN jako składowa okna grupowego tabeli P).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab(0,0)=KORN
|| sel_exit()

|| params_set(params_get());
   exec('pkd_run','pkd','ZAKOŃCZ')
?}


\korn_zus_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2010]
:: OPIS: Przed redakcją pola KORN.ZUS
::  OLD: \KORNZUS/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
KORN.ZW='T'


\korn_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Sprawdza poprawnosc rekordu wprowadzanego do tabeli KORN (rekord po)
::  OLD: \korn_spr/kor_zus.fml
::  OLD: \kor_err/kor_zus.fml - zmieniona obsługa komunikatów i przeniesiona tu
::----------------------------------------------------------------------------------------------------------------------
{? (_chk:=__CHK.record(KORN,,'ROK','MC','RU','MU','LT'))<>''
|| return(_chk)
?};

_msg_rok:='Wartość pola powinna być większa od 1998 i mniejsza, bądź równa od roku bieżącego.';
_msg_msc:='Pole może przyjmować wartości od 1 do 12.';

{? KORN.ROK<1999 | KORN.ROK>date()~1 || __CHK.err_fld(KORN,'ROK',1,_msg_rok)
|? KORN.MC<1 | KORN.MC>12 || __CHK.err_fld(KORN,'MC',1,_msg_msc)
|? KORN.RU<1999 | KORN.RU>date()~1 || __CHK.err_fld(KORN,'RU',1,_msg_rok)
|? KORN.MU<1 | KORN.MU>12 || __CHK.err_fld(KORN,'MU',1,_msg_msc)
|| {? KORN.ZW='N' & KORN.ZUS || KORN.ZUS:=0 ?}; 1
?}


\kor_nag_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KGS [2010]
:: OPIS: Wskazanie na nagłówek korekty
::   WY: KORN.ref
::  OLD: \__korn/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
KORN.ref()


\korn_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Funkcja wykonywana dla kazdego rekordu w okienku wertowania tabeli KORN. Ustala nazwe kazdego miesiaca.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::  OLD: \korn_msc/kor_zus.fml
::----------------------------------------------------------------------------------------------------------------------
exec('korn_efld_opt','!ppl_pll_rkor','*',KORN,'RED');
params_exec('korn_ar','!ppl_pll_rkor');

_msc:="
   _p:=(_m:=date(_a,_b,1)$8)*' ';
   (_p-_m)+' '+(_p+_m)
";

KORN.get();
EDIT_VAR.KORN_MCL:=_msc(KORN.ROK,KORN.MC);
EDIT_VAR.KORN_MCR:=_msc(KORN.RU,KORN.MU)


\korn_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Formuła wywoływana przez wybranie akcji "pOzycje" w okienku selekcji tabeli
::     : nagłówka korekt ZUS wybranego pracownika. Wyświetla okienko kartoteki korekt wys-
::     : tawianych do wybranego nagłówka.
::  OLD: \kor_sel/kor_zus.fml
::----------------------------------------------------------------------------------------------------------------------
{? KORN.ZW='T'
   & exec('chk_role','#b__box',OPERATOR.USER,'PPL_PLL_RKOR')
   & exec('is_korn_lt_writable','!ppl_pll_rkor',KORN.ref(),0)
|| exec('wylicz_zwrot','!ppl_pll_rkor')
?};

KOR.index('KOR_PRN');
KOR.prefix(@.KORN.ref);
KOR.first();
KOR.select()


\wylicz_zwrot
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [2006]
:: OPIS: Wyliczenie kwot podstaw i skladek w tabeli korekt dla podstawy
::       podanej przez ZUS
::  OLD: \wylicz_zwrot/kor_zus.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_korekta:=KORN.ZUS$2)>=0
||
   KOR.cntx_psh(); KOR.index('KOR_PRN'); KOR.prefix(KORN.ref);
   _dane:={? KOR.first() || 1 || 0 ?};
   KOR.cntx_pop();
   {? {? _dane
      || FUN.ask('Istnieją wyliczone pozycje korekt ZUS.\n'+'Czy wykonać aktualizację danych?'@)
      || FUN.ask('Czy wykonać automatyczne wyliczenie pozycji korekt ZUS?'@)
      ?}
   || _roku:=KORN.RU; _mu:=KORN.MU; _lista:=KORN.LT; _przesun:=KORN.MU<>KORN.MC;
      exec('czytaj','#stalesys',date(_roku,_mu,0),KST);
      podemer:=emerprac:=rentprac:=rentfirm:=podzdro:=zdrpobr:=0;
      podskor:=emerkor:=rentkor:=rentkorf:=0;
      rachper:=0; rachse:=0; rachsr:=0; rachsrf:=0; rachpkc:=0; rachskc:=0;
: wyliczenie wlasciwej podstawy do kwoty podanej z ZUS

      exec('licz_mc','!ppl_pll_rkor',_roku,_mu,_lista);
      _podstawa:=-(podemer+rachper+podskor-_korekta)$2;
      _kw1:=(_korekta*KST.PRFE/100/2$2-emerprac-rachse+emerkor)$2;
      _kw2:=(_korekta*KST.PRFRP/100$2-rentprac-rachsr+rentkor)$2;
      {? podzdro & (100*zdrpobr/podzdro)$2<>KST.PRKC
      || RAPLS.msg(P.T,P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,
           'Składka zdrowotna w miesiącu %1'@[date(_roku,_mu,0)$8],
           'nie jest wynikiem bezpośrednio przeliczonym z podstawy.'@,
           'Korekta dla ubezpieczenia Zdrowotnego nie zostanie uwzględniona na raportach.'@,
           'Należy zweryfikować pozycje korekty dotyczące składki zdrowotnej pobranej.'@);
         _kw3:=0
      || _kw3:=((podzdro+rachpkc-_kw1-_kw2)*KST.PRKC/100$2-zdrpobr-rachskc)$2
      ?};
      _kw4:=(_korekta*KST.PRFRF/100$2-rentfirm-rachsrf+rentkorf)$2;

      dodaj:="_result:=0;
              _korn_ref:={? var_pres('_a')=type_of(null())   || _a || return(_result) ?};
                   _rub:={? var_pres('_b')=type_of(0) & _b>0 || _b || return(_result) ?};
              _podstawa:={? var_pres('_c')=type_of(0)        || _c || 0               ?};
                 _kwota:={? var_pres('_d')=type_of(0)        || _d || 0               ?};

              KOR.prefix(_korn_ref,_rub);
              {? KOR.first()
              || KOR.POD:=_podstawa;
                 KOR.SKL:=_kwota;
                 KOR.put(1)
              || KOR.blank();
                 KOR.NAG:=_korn_ref;
                 KOR.RU:=__RUB.ref(_rub);
                 KOR.POD:=_podstawa;
                 KOR.SKL:=_kwota;
                 KOR.add(1)
              ?}";

      KOR.index('KOR_PRN');

::    zalozenie transakcji
      _mydo:=do_state()=0;
      {? _mydo || do() ?};
      _wyn:=~dodaj(KORN.ref,__RUB.sys_kod(571110),_podstawa,_kw1);
      _wyn+=(~dodaj(KORN.ref,__RUB.sys_kod(571210),_podstawa,_kw1));
      _wyn+=(~dodaj(KORN.ref,__RUB.sys_kod(571120),_podstawa,_kw2));
      _wyn+=(~dodaj(KORN.ref,__RUB.sys_kod(571220),_podstawa,_kw4));
      _wyn+=(~dodaj(KORN.ref,__RUB.sys_kod(574110),-(_kw1+_kw2),_kw3));
      {? _wyn || undo ?};
      {? _mydo || end() ?};
      KOR.prefix();
: sprawdzenie czy nie ma zaplaconych skladek w innych m-cach dla roku korekt
      {? exec('test_podstawa','!ppl_pll_rkor',_roku,_mu,_lista)>0
      || {? FUN.ask('W kolejnych miesiącach obliczono składki emerytalno-rentowe.\n'
                    'Czy wykonać automatyczne dodanie korekt ZUS?'@)
         || KORN.cntx_psh(); KORN.index('KOR_NAGU'); KOR.cntx_psh(); KOR.index('KOR_PRN');
            {! _m:=_mu+1..12 |!
               podemer:=emerprac:=rentprac:=rentfirm:=podzdro:=zdrpobr:=0;
               podskor:=emerkor:=rentkor:=rentkorf:=0;
               rachper:=0; rachse:=0; rachsr:=0; rachsrf:=0; rachpkc:=0; rachskc:=0;
               exec('licz_mc','!ppl_pll_rkor',_roku,_m,_lista);
               exec('czytaj','#stalesys',date(_roku,_m,0),KST);
               _dalej:=(podemer<>0 | rachper<>0 | podskor<>0);
               {? _dalej
               ||  _podstawa:=-(podemer+rachper+podskor)$2;
                   _kw1:=-(emerprac+rachse+emerkor)$2;
                   _kw2:=-(rentprac+rachsr+rentkor)$2;
                   _kw3:=((podzdro+rachpkc-_kw1-_kw2)*KST.PRKC/100$2-zdrpobr-rachskc)$2;
                   _kw4:=-(rentfirm+rachsrf+rentkorf)$2;
                   _kwpck:=-(_kw1+_kw2);
                   KORN.prefix(_roku,_m,P.ref,'T');
                   {? KORN.first()
                   ||
::                    zalozenie transakcji
                      _mydo:=do_state()=0;
                      {? _mydo || do() ?};
                      _wyn:=~dodaj(KORN.ref,__RUB.sys_kod(571110),_podstawa,_kw1);
                      _wyn+=(~dodaj(KORN.ref,__RUB.sys_kod(571210),_podstawa,_kw1));
                      _wyn+=(~dodaj(KORN.ref,__RUB.sys_kod(571120),_podstawa,_kw2));
                      _wyn+=(~dodaj(KORN.ref,__RUB.sys_kod(571220),_podstawa,_kw4));
                      _wyn+=(~dodaj(KORN.ref,__RUB.sys_kod(574110),_kwpck,_kw3));
                      {? _wyn || undo ?};
                      {? _mydo || end() ?}
                   ||
                      KORN.clear(); KORN.blank(); KORN.ROK:=KORN.RU:=_roku;
                      KORN.MC:=KORN.MU:=_m; KORN.LT:=_lista; KORN.ZW:='T';
                      {? _przesun
                      || {? _m-1
                         || KORN.MC:=_m-1
                         || KORN.MC:=12;
                            KORN.ROK:=_roku-1
                         ?}
                      ?};
                      {? KORN.add(1)
                      ||
::                       zalozenie transakcji
                         _mydo:=do_state()=0;
                         {? _mydo || do() ?};
                         _wyn:=~dodaj(KORN.ref,__RUB.sys_kod(571110),_podstawa,_kw1);
                         _wyn+=(~dodaj(KORN.ref,__RUB.sys_kod(571210),_podstawa,_kw1));
                         _wyn+=(~dodaj(KORN.ref,__RUB.sys_kod(571120),_podstawa,_kw2));
                         _wyn+=(~dodaj(KORN.ref,__RUB.sys_kod(571220),_podstawa,_kw4));
                         _wyn+=(~dodaj(KORN.ref,__RUB.sys_kod(574110),_kwpck,_kw3));
                         {? _wyn || undo ?};
                         {? _mydo || end() ?}
                      ?}
                   ?}
                ?}
             !};
             KOR.cntx_pop(); KORN.cntx_pop()
         ?}
      ?};
::   podczytanie stałych systemu dla bieżącej listy
     exec('dla_listy','stalesys');
     &dodaj; &podemer; &emerprac; &rentprac; &rentfirm; &podzdro; &zdrpobr;
     &podskor; &emerkor; &rentkor; &rentkorf;
     &rachper; &rachse; &rachsr; &rachsrf; &rachpkc; &rachskc;
     1
   ?}
?}


\licz_mc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [2006]
:: OPIS: Wyliczenie kwoty podstawy i skladek emerytalno-rentowych
::       i skladki zdrowotnej pracownika do wyliczenia korekty w danym m-cu
::   WE: _a - rok ubezpieczeniowy naglowka korekty
::     : _b - miesiac ubezpieczeniowy naglowka korekty
::     : _c - znak listy z naglowka korekty, na ktorej nastpi rozliczenie
::   WY:
::  OLD: \licz_mc/kor_zus.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(0) || return(0) ?};
{? var_pres('_b')<>type_of(0) || return(0) ?};
{? var_pres('_c')<>type_of('') || return(0) ?};
KU.cntx_psh();
KU.index('KARTAUB');
KU.prefix(P.FIRMA,P.OSOBA);
{? KU.find_key(_a,_b)
||
   podemer:=KU.S1; emerprac:=KU.S2;
   rentprac:=KU.S3;
   rentfirm:=KU.S5;
   podzdro:=KU.S13; zdrpobr:=KU.S14
?};
KU.cntx_pop();
RH.cntx_psh();
LS.cntx_psh();
O.cntx_psh();
RH.index('RACHDATA');
RH.prefix(exec('ref_firma','ustawienia'),P.OSOBA,_a,_b);
{? RH.first()
||
   _zlicz:="
      _kw:=0;
      _tab:=__RUB.sys_rub(_a);
      {? _tab.first()
      || {!
         |? LS.prefix(RH.ref(),_tab.RN);
            {? LS.first() || {!|? _kw+=LS.KW$2; LS.next() !} ?};
            _tab.next()
         !}
      ?};
      _kw
   ";

   {!
   |? {? 2+RH.ZC_INFO().TTUB().KOD='01'
      || LS.use(RH.O().LT);
         LS.index('ZLEC');
         RH.ZC_INFO();
         rachper+=_zlicz(56111);
         rachse+=_zlicz(57111);
         rachsr+=_zlicz(57112);
         rachsrf+=_zlicz(57122);
         {? ZC_INFO.KC='T' ||
            rachpkc+=_zlicz(56411);
            rachskc+=_zlicz(57411)
         ?}
      ?};
      RH.next()
   !}
?};
RH.cntx_pop();
LS.cntx_pop();
O.cntx_pop();
:wyliczenie kwot z korekt
podskor:=exec('kora_ikor_kor_zus','lista_licz',571110,1,_b,_c,_a);
emerkor:=exec('kora_ikor_kor_zus','lista_licz',571110,2,_b,_c,_a);
rentkor:=exec('kora_ikor_kor_zus','lista_licz',571120,2,_b,_c,_a);
rentkorf:=exec('kora_ikor_kor_zus','lista_licz',571220,2,_b,_c,_a);
1


\test_podstawa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR [2006]
:: OPIS: Sprawdzenie czy w miesiacach po miesiacu blokady podanej przez ZUS
::       byly wyliczone skladki emerytalno rentowe dla pracownika
::   WE: _a - rok ubezpieczeniowy naglowka korekty
::     : _b - miesiac ubezpieczeniowy naglowka korekty
::     : _c - znak listy z naglowka korekty, na ktorej nastapi rozliczenie
::   WY:
::  OLD: \test_podstawa/kor_zus.fml
::----------------------------------------------------------------------------------------------------------------------
podemer:=emerprac:=rentprac:=rentfirm:=podzdro:=zdrpobr:=0;
podskor:=emerkor:=rentkor:=rentkorf:=0;
rachper:=0; rachse:=0; rachsr:=0; rachsrf:=0; rachpkc:=0; rachskc:=0;
{? var_pres('_a')<>type_of(0) || return(0) ?};
{? var_pres('_b')<>type_of(0) || return(0) ?};
{? var_pres('_c')<>type_of('') || return(0) ?};
_test:=0;
_roku:=_a; _msc:=_b;
{! _mx:=_msc+1..12
|! exec('licz_mc','!ppl_pll_rkor',_roku,_mx,_c);
   _test+=(podemer<>0 | rachper<>0 | podskor<>0)
!};
_test


\kor_ru
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: rubryki opisujace skladki podlegajace korektom
::   WE:
::   WY: napis z numerami rubryk
::  OLD: \kor_ru/kor_zus.fml
::----------------------------------------------------------------------------------------------------------------------
__RUB.sys_sql(571110)+','+__RUB.sys_sql(571120)+','+
__RUB.sys_sql(571210)+','+__RUB.sys_sql(571220)+','+
__RUB.sys_sql(57210)+','+
__RUB.sys_sql(57310)+','+
__RUB.sys_sql(574110)


\kor_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [8.60]
:: OPIS: Sprawdza poprawnosc rekordu wprowadzanego do tabeli KOR (rekord po)
::  OLD: \kor_spr/kor_zus.fml
::----------------------------------------------------------------------------------------------------------------------
__CHK.record(KOR,,'RU','POD','SKL')


\korn_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Obsługa akcji "Po odświeżeniu" okna WER tabeli KORN w grupie. Ustawia akcje i przyciski.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ag:={? exec('is_korn_lt_writable','!ppl_pll_rkor',KORN.ref(),0) || '' || 'PU' ?};
_par:=params_get();
{? var_pres('_par')>100 &
   var_pres('cfg',_par)>100 &
   var_pres('done',_par.cfg)>100 &
   var_pres('noempty',_par.cfg.done)=type_of('') & var_pres('empty',_par.cfg.done)=type_of('')
|| _ag+=_par.cfg.done.noempty+':'+_par.cfg.done.empty
?};
KORN.actions_grayed('WER',_ag);
~~


\korn_zw_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Po redagowaniu pola KORN.ZW
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('korn_efld_opt','!ppl_pll_rkor')


\korn_db
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Przed dołączeniem rekordu KORN
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KORN.blank();
exec('korn_efld_opt','!ppl_pll_rkor','*',KORN,'RED')


\korn_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Przed poprawieniem rekordu KORN
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('is_korn_lt_writable','!ppl_pll_rkor',KORN.ref())=0
|| return(0)
?};
exec('korn_efld_opt','!ppl_pll_rkor','*',KORN,'RED')


\korn_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Formuła odpowiedzialna za dynamiczne ustawianie właściwości pól tabeli KORN. Formuła wywoływana jest w dwóch
::       kontekstach pracy:
::          - Po redagowaniu konkretnego pola, które determinuje właściwości wyświetlania innych pól.
::          - Przed wyświetleniem okna redagowania (przed właściwymi akcjami Dołącz, Popraw, Wyświetl), ustawia
::            właściwości wszystkich pól (wymagających tego).
::       Kontekst pracy jest określany na podstawie argumentu wywołania.
::   WE: [_a] [STRING] - Kontekst pracy:
::             '1' - Obsługa jednego pola [domyślnie].
::             '*' - Obsługa wszystkich pól.
::       [_b] [TABLE]  - Uchwyt tabeli, w oknie redagowania której znajdują sie pola. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęta bieżąca tabela.
::       [_c] [STRING] - Akronim okna, w którym mają być ustawione właściwości pól. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęte bieżące okno.
::       [_d] [STRING] - Akronim pola, którego wartość determinuje właściwości wyświetlania innych pól. Parametr ma
::             znaczenie wyłącznie dla _a='1'. [Domyślnie: bieżące pole].
::   WY: 0 - Błąd argumentów wywołania.
::       1 - Argumenty poprawne (właściwości ustawione).
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (_a='1' | _a='*') || _a || '1' ?};
{? var_pres('_b')=type_of(KORN)
|| _tab:=_b
|? _tryb='1'
|| _tab:=cur_tab(1,1)
|| return(0)
?};
{? var_pres('_c')=type_of('')
|| _we:=_c
|? _tryb='1'
|| _we:=cur_win(1,1)
|| return(0)
?};
{? var_pres('_d')=type_of('')
|| _fld:=_d
|? _tryb='1'
|| _fld:=cur_afld()
|| _fld:=''
?};

{? _fld='' | _fld='ZW'
|| _sval:=$(KORN.ZW='T');
   _tab.efld_opt(_we,'enable='+_sval,KORN,'ZUS')
?};

{? _fld='' | _fld='KN'
|| _sval:=$(KORN.KN='T');
   _tab.efld_opt(_we,'enable='+_sval,KORN,'N')
?};

1


\kor_ru_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Przed redagowanie pola KOR.RU - Składnik. Założenie filtra.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
R.f_set('RN',,'R.RN in (:_a)',exec('kor_ru','!ppl_pll_rkor'));
1


\kor_ru_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Po redagowaniu pola KOR.RU - Składnik. Zdjęcie filtra.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
R.f_clear();
1


\kor_bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Obsługa akcji "Okienko - przed" dla okien wertowania tabeli KOR.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
R.cntx_psh();
R.win_dict('SLO');
R.win_edit('RED');
_aid:='';
{? exec('is_korn_lt_writable','!ppl_pll_rkor',KORN.ref(),0)=0
|| _aid:='DUP:D'
?};
KOR.actions_grayed('WER',_aid);
1


\kor_ao
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Obsługa akcji "Okienko - po" dla okien wertowania tabeli KOR.
::       Jeżeli operator wszedł do pola KOR.RU (w formule przed redagowaniem założony został filtr) i zrezygnował
::       z redagowania (nacisnął ESC) to formuła po redagowaniu pola (zdejmująca filtr) nie wykonała się.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
R.f_clear();
R.cntx_pop();
1


\korn_ub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Przed usunięciem rekordu KORN
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('is_korn_lt_writable','!ppl_pll_rkor',KORN.ref())=0
|| return(0)
?};

_text:='Czy skasować korektę ZUS'@;
{? exec('kor_exist','!ppl_pll_rkor',KORN.ref())
|| _text+=' wraz z korektami składek'@
?};
_text+='?';

{? FUN.ask(_text)
|| KORN.del()
?}


\kor_exist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Sprawdza czy istnieją rekordy KOR dla podanego nagłówka korekty KORN
::   WE: _a - [REFERENCE] - KORN.ref
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};
KOR.cntx_psh();
KOR.index('KOR_PNR');
KOR.prefix(_ref);
_result:=KOR.first();
KOR.cntx_pop();
_result


\korn_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Wyzwalacz "przed usunięciem" tabeli KORN.
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZALACZ,'NAG',KORN.uidref()) &
exec('del_ndx','#table',KOR,'KOR_PNR',KORN.ref())


\is_korn_lt_writable
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Sprawdza czy lista przypisana do korekty ma status otwarty
::   WE: _a - [REFERENCE]  - wskazanie na KORN
::       _b - [INTEGER]    - czy wyświetlać komunikat?
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_ref:={? var_pres('_a')=type_of(null) || _a || return(0) ?};
_msg:={? var_pres('_b')=type_of(0)    || _b || 1         ?};

_result:=1;

KORN.cntx_psh();
KORN.prefix();
{? KORN.seek(_ref)
|| _result:=exec('o_writable','lista_plac',KORN.LT,0)
?};
KORN.cntx_pop();

{? _msg & _result=0
|| FUN.info('Lista płac jest zamknięta.\nModyfikacja korekty ZUS nie jest możliwa.'@)
?};

_result


\kor_db
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Przed dołączeniem rekordu KOR
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
exec('is_korn_lt_writable','!ppl_pll_rkor',KORN.ref())


\kor_pb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Przed poprawieniem rekordu KOR
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
exec('is_korn_lt_writable','!ppl_pll_rkor',KORN.ref())


\kor_ub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.00]
:: OPIS: Przed usunięciem rekordu KOR
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
exec('is_korn_lt_writable','!ppl_pll_rkor',KORN.ref())


\korn_zalaczniki_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Obsługa akcji "Załączniki - przed" w oknach tabeli KORN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('show_zalacz','zalacz','P','KORN',exec('chk_role','#b__box',OPERATOR.USER,'PPL_PLL_RKOR'))

:Sign Version 2.0 jowisz:1048 2020/10/16 15:19:19 d9414c88e0fa7ac5a3a0b527fbebe559b7e8e2002d01dcaa591847d001be73a8cd01563f50836d00359849e0afb8041d51dcc44a88134f63dd228920ff8674fcbc6f602ecabd1a904271ebf926f85e4b4537bb26f24ae53b96a104c14d94f4d2c30dc7ed72ee76e9c42be647c19ac7e152f7685dbfe0761a66ee5b96268c0347
