:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !prc_grp_dexp.fml
:: Utworzony: 31.05.2017
:: Autor: areKc
::======================================================================================================================
:: Zawartość: Formuły czynności PRC_GRP_DEXP - Export we/wy z Excela.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.28]
:: OPIS: Przygotowanie pliku do importu wejść i wyjść z arkusza Excel.
::   WE:
::   WY:
:: ~OST: INFILECHOOSER
::  OLD: /harmgr11.rpm
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL

:: Przygotowanie katalogu tymczasowego po stronie serwera
_inTerm:=exec('interm','#system');
{? ~exec('cli_functions','#system')
|| FUN.emsg('Funkcjonalność niedostępna dla klienta inTerm bez uruchomionego modułu inDevice.'@);
   return()
?};
{? _inTerm
|| _tmp_dir:=fmk_tmp_dir(0);
   {? type_of(_tmp_dir)<>type_of(~~)
   || _path:=_tmp_dir.get_path()
   || FUN.emsg('Nie udało się utworzyć katalogu tymczasowego po stronie serwera.'@);
      return()
   ?}
?};
FUN.info('Przed rozpoczęciem generowania harmonogramów należy zamknąć program Excel (jeśli jest otwarty).'@);
VAR_EDIT.ROK:=date()~1;
VAR_EDIT.MSC:=date()~2;
VAR_EDIT.efld_opt('PRDN_DAT','mark=1',,'ROK');
VAR_EDIT.efld_opt('PRDN_DAT','mark=1',,'MSC');
VAR_EDIT.win_edit('PRDN_DAT');
VAR_EDIT.fld_fml('ROK','AFTER_EDIT',"{? VAR_EDIT.ROK<=1900 || FUN.emsg('Błędna wartość w polu \"Rok\"'@); 0 || 1 ?}");
VAR_EDIT.fld_fml('MSC','AFTER_EDIT',
   "  {? VAR_EDIT.MSC<1 | VAR_EDIT.MSC>12
      || FUN.emsg('Błędna wartość w polu \"Miesiąc\"'@); 0
      || 1
      ?}
   "
);
{? VAR_EDIT.edit(
      "  {? VAR_EDIT.ROK<=1900 | VAR_EDIT.MSC<1 | VAR_EDIT.MSC>12
         || FUN.emsg('Błędna wartość parametru.'@);
            0
         || 1
         ?}
      "
   )
|| _lastkatal:=exec('get','#profile',,'Harmonogram','katalog do zapisu');
   _myKatal:={? _inTerm
             || _path
             || exec('filechooser','#file','Katalog do zapisu szablonów'@,0,,,,'DIRECTORIES_ONLY',,_lastkatal)
             ?};
   {? +_myKatal
   || {? ~_inTerm
      || exec('set','#profile',,'Harmonogram','katalog do zapisu',_myKatal)
      ?};
      _typ:=exec('szukaj_ud_typ','schemat','PODZORG');
      _sch:=exec('domyslny','schemat',_typ);
      UD_DEF.cntx_psh();
      UD_DEF.index('SYMBOL');
      UD_DEF.prefix(_sch);
      _skl:=exec('ud_skl_firma','schemat',_typ);
      _wer:=UD_DEF.mk_sel('Jednostki organizacyjne'@,'P',,'prc_grp_dexp',,,,1,,,,,,'maximized');
      UD_DEF.win_fld(_wer,,'UD_SKL','SYMBOL',,,,1,'Symbol'@,,'Symbol jednostki organizacyjnej'@);
      UD_DEF.win_fld(_wer,,'OPIS',,,,,1,'Opis'@,,'Nazwa jednostki organizacyjnej'@);
      UD_DEF.win_act(_wer,,'Formuła','Wybierz'@@,,,
         "  params_set(params_get());
            exec('generujExcel','!prc_grp_dexp',UD_DEF.UD_SKL().SYMBOL)
         ",,1,1,,,'W'
      );
      UD_DEF.win_act(_wer,,'Formuła','Zwiń/rozwiń'@@,,,
         "  exec('zwin_rozwin','#tree')
         ",,,,,,'Z',,'target=window'
      );
      UD_DEF.win_sel(_wer);
      exec('ud_def_root','schemat',_wer,_sch,_skl);
      params_set('katal',_myKatal);
      UD_DEF.select();
      UD_DEF.cntx_pop()
   ?}
?};
VAR_EDIT.fld_fml('ROK','AFTER_EDIT',"");
VAR_EDIT.fld_fml('MSC','AFTER_EDIT',"");
~~


\generujExcel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.28]
:: OPIS: Przygotowanie danych do pliku importu wejść i wyjść z arkusza Excel.
::   WE: _a - Symbol jednostki organizacyjnej
::   WY:
:: ~OST: INSYSEXEC, INFCOPY, INFERASE
::----------------------------------------------------------------------------------------------------------------------
_myKatal:=params_get().katal;
_inTerm:=exec('interm','#system');
_indevice:=exec('cli_functions','#system');
{? ~_inTerm
|| _myKatal:='@'+_myKatal
?};
_conv:=iconv('Windows-1250');
P.cntx_psh();
_PRAC:=exec('dostepne_p','schemat','PRC',{? +P_FILTER.F_ZATR().KOD || P_FILTER.F_ZATR().KOD || '*' ?},P_FILTER.STATUS);
{? _PRAC.first()
|| N.cntx_psh();
   N.index('NIEOBECN');

   _nazwa:=STR.maz2nop(_a);
   {? _nazwa*'>' | _nazwa*'<' | _nazwa*'%' | _nazwa*'$' | _nazwa*'\\' | _nazwa*'/' | _nazwa*'*' | _nazwa*'?' |
      _nazwa*':' | _nazwa*'|' | _nazwa*'(' | _nazwa*')' | _nazwa*'['  | _nazwa*']' | _nazwa*'{' | _nazwa*'}' |
      _nazwa*'"'
   || _nazwa:='wybrana_jednostka'
   ?};
   _nazwa:=$VAR_EDIT.ROK+(('0'+$VAR_EDIT.MSC)+2)+'_'+_nazwa;
   _ii:=0;
   _myKatal+='\\';
   {!
   |? _plik:=fopen(_myKatal+_nazwa+'.xls','r',0) & _ii<100
   |! fclose(_plik);
      _ii+=1;
      {? _ii>10 || _nazwa:=_nazwa-3 |? _ii>1 || _nazwa:=_nazwa-2 ?};
      _nazwa:=_nazwa+'_'+($_ii)
   !};
   _plik:=fopen(_myKatal+_nazwa+'.xls','w',0);
   {? ~_plik
   || FUN.emsg('%1\n%2'['Nie udało się otworzyć pliku: %1.'@[_nazwa],'Tworzenie harmonogramu zostanie przerwane.'@]);
      N.cntx_pop();
      P.cntx_pop();
      return()
   ?};
   fclose(_plik);
   {? _ii=100
   || FUN.emsg('%1\n%2'
         ['Zbyt dużo plików zaczynajacych się od: %1.'@[_nazwa-3],'Tworzenie harmonogramu zostanie przerwane.'@]
      );
      N.cntx_pop();
      P.cntx_pop();
      return()
   ?};
   _h1:=fopen('ustaw.txt','w',1);
   {? _h1
   || _wiersz1:='dane.txt'+'\r\n'+'dane'+'\r\n'+_nazwa+'.xls';
      fwrite(_h1,STR.maz2w95(_wiersz1));
      fclose(_h1);
      _pth_u:={? _inTerm & ~_indevice
              || _myKatal+exec('sep','#file',0)+'ustaw.txt'
              || '@!TMP\\ustaw.txt'
              ?};
      fcopy('ustaw.txt',_pth_u,1,,1)
   ?};
   _plik:=fopen('dane.txt','bw',1);
   {? ~_plik | ~_h1
   || FUN.emsg('Nie udało się otworzyć plików tymczasowych (ustaw.txt, dane.txt) do zapisu danych.'@);
      N.cntx_pop();
      P.cntx_pop();
      return()
   ?};

    VAR_DEL.delete('__EXC');
   __EXC:=tab_tmp(1,
      'N','INTEGER',,
      'O','STRING[2]',
   );
   __EXC.win_sel(__EXC.mk_sel(,,1));
   {! _x:=1..256
   |! _q:='ABCDEFGHIJKLMNOPQRSTUVWXYZ';
      _s:=_x%26;
      _n:=_x%*26;
      {? _n=0
      || _s-=1;
         _n:=26
      ?};
      __EXC.N:=_x;
      __EXC.O:=((_s+_q)+1)+((_n+_q)+1);
      __EXC.add()
   !};
   _wsp:="{? __EXC.find_key(_a) || __EXC.O+$_b || '?' ?}";
   _zap:="fwrite(_a,STR.maz2w95(_b))";
   _sep:=(%9);
   _kl:=(%13)+(%10);
   _razem:=
      "  _wyn:='';
         _lp:=0;
         {! _x:=1..256
         |! {? _a*(','+$_x+',')
            || {? _wyn=''
               || _wyn+='=SUMA('+{? __EXC.find_key(_x) || __EXC.O+$_b || '?' ?}
               || {? _lp<>25
                  || _wyn+=';'+{? __EXC.find_key(_x) || __EXC.O+$_b || '?' ?};
                     _lp+=1
                  || _wyn+=')+SUMA('+{? __EXC.find_key(_x) || __EXC.O+$_b || '?' ?};
                     _lp+=1
                  ?}
               ?}
            ?}
         !};
         _wyn+=')';
         _wyn
      ";
   _licz_if:=
      "  '=LICZ.JE»ELI('+{? __EXC.find_key(_a) || __EXC.O+$_c || '?' ?}+':'+
         {? __EXC.find_key(_b) || __EXC.O+$_c || '?' ?}+';'+(%34)+_d+(%42)+(%34)+')'
      ";

:: 1 wiersz
   _zap(_plik,_sep+'HARMONOGRAM PRACY'@+_sep+_kl);
:: 2 wiersz
   _zap(_plik,_sep+'wydział '@+_conv.to(_a)+', '+date(VAR_EDIT.ROK,VAR_EDIT.MSC,0)$8+_sep+_kl);
:: 3 wiersz
   _zap(_plik,_kl);
:: 4 wiersz
   _zap(_plik,'LEGENDA:'@+_sep+'UW - urlop wypoczynkowy'@+(3*_sep)+'kody urlopu wpisujemy w pole Praca od'@+_sep+_kl);
:: 5 wiersz
   _zap(_plik,_sep+'UB - urlop bezpłatny'@+_sep+_kl);
:: 6 wiersz
   _zap(_plik,_sep+'UM - urlop macierzyński'@+_sep+_kl);
:: 7 wiersz"
   _zap(_plik,_sep+'OP - opieka nad dzieckiem'@+_sep+_kl);
:: 8 wiersz
   _zap(_plik,_sep+'UO - urlop okolicznościowy'@+_sep+_kl);
:: 9 wiersz
   _zap(_plik,_sep+'UC - urlop wychowawczy'@+_sep+_kl);
:: 10 wiersz
   _zap(_plik,_sep+'CH - choroba'@+_sep+_kl);
:: 11 wiersz;
   _zap(_plik,_sep+'NN - nieobecność nieusprawiedliwiona'@+_sep+_kl);
:: 12 wiersz
   _zap(_plik,_sep+'NU - nieobecność usprawiedliwiona'@+_sep+_kl);
:: 13 wiersz
   _zap(_plik,_sep+'ZN - zwolnienie niepłatne - inne'@+_sep+_kl);
:: 14 wiersz
   _zap(_plik,_kl);
:: 15 wiersz
   _d1:=date(VAR_EDIT.ROK,VAR_EDIT.MSC,1);
   _d2:=date(VAR_EDIT.ROK,VAR_EDIT.MSC,0);
   _linia:=(3*_sep)+'Godziny'@+_sep;
   KAL_ROK.cntx_psh();
   KAL_ROK.index('KAL_NAZ');
   {? KAL_ROK.find_key(exec('ref_firma','ustawienia'),'standard','standard',VAR_EDIT.ROK)
   || KAL_DEF.cntx_psh();
      KAL_DEF.index('KAL_DEF');
      KAL_DEF.prefix(KAL_ROK.ref());
      {? KAL_DEF.first()
      || {!
         |? {? _d1<=KAL_DEF.DATA & KAL_DEF.DATA<=_d2
            || _dtyg:=(((KAL_DEF.DATA$7)*','-1)+(KAL_DEF.DATA$7));
               _linia+=(KAL_DEF.DATA$6-5)+' '+KAL_DEF.OPIS+{? KAL_DEF.OPIS*_dtyg || '' || ' '+_dtyg ?}+(3*_sep)
            ?};
            KAL_DEF.next()
         !}
      ?};
      KAL_DEF.cntx_pop()
   || FUN.emsg('%1\n%2'
         ['Brak kalendarza Standard na rok: %1.'@[$VAR_EDIT.ROK],'Tworzenie harmonogramu zostanie przerwane.'@]
      );
      KAL_ROK.cntx_pop();
      N.cntx_pop();
      P.cntx_pop();
      return()
   ?};
   KAL_ROK.cntx_pop();
   _linia+='PODSUMOWANIE: '@+_d1$8+_sep+_kl;
   _zap(_plik,_linia);
:: 16 wiersz
   _wiersz:=16;
   _linia:='Forma współpracy'+_sep+'ID'@+_sep+'współpracownik'@+_sep+'w miesiącu'@+_sep;
   _q1:=',';
   _kk:=4;
   {!
   |? _d1<=_d2
   |! _kk+=1;
      _linia+='Praca od'@+_sep;
      _kk+=1;
      _linia+='Praca do'@+_sep;
      _kk+=1;
      _q1+=($_kk+',');
      _linia+='Czas pracy'@+_sep;
      _d1+=1
   !};
   _linia+='Suma godzin'@+_sep+'UW'@+_sep+'UB'@+_sep+'UM'@+_sep+'OP'@+_sep+'UO'@+_sep+'UC'@+_sep+'CH'@+_sep+'NN'@+_sep;
   _linia+='NU'@+_sep+'ZN'@+_sep+_kl;
   _zap(_plik,_linia);
:: wiersze z danymi pracownikow - od 17 do ...
   {!
   |? _d1:=date(VAR_EDIT.ROK,VAR_EDIT.MSC,1);
      _d2:=date(VAR_EDIT.ROK,VAR_EDIT.MSC,0);
      {? P.seek(_PRAC.REF,,1)
      || {? P.DZA<=_d2 & (P.DZ=#0 | P.DZ>=_d1)
            &
            P.WYDZIAL().SYMBOL=_a
         || echo(P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE);
            _wiersz+=1;
            N.prefix('N',P.ref());
:: 1 kolumna
            _linia:=P.F_ZATR().KOD+_sep;
:: 2 kolumna
            _linia+=$P.IP+_sep;
:: 3 kolumna
            _linia+=_conv.to(OSOBA.NAZWISKO+' '+OSOBA.PIERWSZE)+_sep;
:: 4 kolumna
            {? P.KAL
            || __KAL.set_cal(P.KAL().NAZWA,_d1~1)
            || __KAL.set_cal('standard')
            ?};
            _ldr:=__KAL.w_days(_d1,_d2);
            _lgr:=exec('nominal','godziny',_d1,_d2,,,1);
            _linia+=form(_lgr,,2,'9,')+(_sep);
:: kolumny na pozostałe dni
            _kk:=4;
            _pierw:=_kk+1;
            {? var_pres('_TAB')>100 || obj_del(_TAB) ?};
            _TAB:=exec('gen_obecnosci','!prc_grp_dexp',P.ref(),_d1,_d2);
            {!
            |? _d1<=_d2
            |! {? var_pres('_wewy')<100
               || _wewy:=obj_new(4)
               ?};
               _wewy[1]:=_wewy[2]:=_wewy[3]:=_wewy[4]:=time(0,0,0);
               _kod:='';
               {? _TAB.find_key(_d1)
               || {? +_TAB.NIEO
                  || N.prefix('N',P.ref,_d1);
                     {? N.first() & N.PARTDAY='T'
                     || _ilg:='('+$N.NG+')'
                     || _ilg:=''
                     ?};
                     _kod:=_TAB.NIEO+_ilg
                  || _wewy[1]:=_TAB.WE;
                     _wewy[2]:=_TAB.WY
                  ?}
               ?};
               _kk+=1;
               _linia+={? _kod<>'' || _kod || _wewy[1]$1 ?}+_sep;
               _kwe:=_wsp(_kk,_wiersz);
               _kk+=1;
               _linia+=_wewy[2]$1+_sep;
               _kwy:=_wsp(_kk,_wiersz);
               _kk+=1;
               _linia+='=JE»ELI(T('+_kwe+')<>"";'+_kwe+';';
               _linia+='JE»ELI('+_kwe+'>'+_kwy+';'+_kwy+'+1-'+_kwe+';'+_kwy+'-'+_kwe+'))';
               _linia+=_sep;
               _d1+=1
            !};
            _ost:=_kk;
:: formuły sumujące
            _kk+=1;
:: suma godzin w miesiącu
            _linia+=_razem(_q1,_wiersz)+_sep;
            _kk+=1;
:: podsumowanie nieobecności
            _linia+=_licz_if(_pierw,_ost,_wiersz,'UW'@)+'/2'+_sep;
            _kk+=1;
            _linia+=_licz_if(_pierw,_ost,_wiersz,'UB'@)+'/2'+_sep;
            _kk+=1;
            _linia+=_licz_if(_pierw,_ost,_wiersz,'UM'@)+'/2'+_sep;
            _kk+=1;
            _linia+=_licz_if(_pierw,_ost,_wiersz,'OP'@)+'/2'+_sep;
            _kk+=1;
            _linia+=_licz_if(_pierw,_ost,_wiersz,'UO'@)+'/2'+_sep;
            _kk+=1;
            _linia+=_licz_if(_pierw,_ost,_wiersz,'UC'@)+'/2'+_sep;
            _kk+=1;
            _linia+=_licz_if(_pierw,_ost,_wiersz,'CH'@)+'/2'+_sep;
            _kk+=1;
            _linia+=_licz_if(_pierw,_ost,_wiersz,'NN'@)+'/2'+_sep;
            _kk+=1;
            _linia+=_licz_if(_pierw,_ost,_wiersz,'NU'@)+'/2'+_sep;
            _kk+=1;
            _linia+=_licz_if(_pierw,_ost,_wiersz,'ZN'@)+'/2'+_sep;
            _zap(_plik,_linia+_kl)
         ?}
      ?};
      _PRAC.next()
   !};
   {? P.f_active() || P.f_clear() ?};

   {? var_pres('_wewy')>100 || obj_del(_wewy) ?};
   echo();

   fclose(_plik);
   _pth_d:={? _inTerm & ~_indevice
           || _myKatal+exec('sep','#file',2)+'dane.txt'
           || '@!TMP\\dane.txt'
           ?};
   fcopy('dane.txt',_pth_d,1,,1);
   {? _indevice
   || {? sys_exec('2harmgr1.xls',,1)=0
      || FUN.emsg('Brak pliku 2harmgr1.xls.'@)
      || {? _inTerm
         || _myKatal:=params_get().katal;
            {? fcopy('@!TMP\\'+_nazwa+'.xls',_myKatal+_nazwa+'.xls',0,0,1)
            || ferase('@!TMP\\'+_nazwa+'.xls')
            ?};
            dlg_save(_myKatal+_nazwa+'.xls',0,_nazwa+'.xls')
         ||
            {? fcopy('@!TMP\\'+_nazwa+'.xls','@'+_myKatal+_nazwa+'.xls',0,0,1)
            || ferase('@!TMP\\'+_nazwa+'.xls')
            ?}
         ?}
      ?}
   || _nameZIP:='Załączniki'@+'_'+$SYSLOG.tm_stamp()+'.zip';
      fcopy('2harmgr1.xls',_myKatal+exec('sep','#file',2)+'2harmgr1.xls',1,,1);
      _arch:=_myKatal+exec('sep','#file',2)+_nameZIP;
      _file1:=fpack_add(_arch,_myKatal+exec('sep','#file',2)+'dane.txt');
      _file2:=fpack_add(_arch,_myKatal+exec('sep','#file',2)+'ustaw.txt');
      _file3:=fpack_add(_arch,_myKatal+exec('sep','#file',2)+'2harmgr1.xls');
      {? _file1>0 & _file2>0 & _file3>0
      || dlg_save(_arch,0,_nameZIP)
      ?}
   ?};
   N.cntx_pop()
|| FUN.emsg('Brak pracowników, dla których można przygotować plik w formacie Excel\n'
            'z danymi do importu wejść i wyjść.'@
   )
?};
P.cntx_pop()


\gen_obecnosci
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.28]
:: OPIS: Generuje tabelę odpowiadającą liście obecności dla pracownika na podstawie planu
::   WE: _a - P.ref
::       _b - od dnia
::       _c - do dnia
::   WY: _TAB - tabela tymczasowa z listą obecności pracownika
::  OLD: \gen_obecnosci/graf_kal.fml
::----------------------------------------------------------------------------------------------------------------------
_TAB:=tab_tmp(,
   'DATA','DATE','Data',
   'WE','TIME','Wejście',
   'WY','TIME','Wyjście',
   'CZAS','TIME','Czas',
   'ODB_P','TIME','Odbiór na wniosek pracownika',
   'ODB_F','TIME','Odbiór na wniosek pracodawcy',
   'NIEO','STRING[2]','Kod nieobecności'
);

exec('KAL_cpsh','grafik');
N.cntx_psh();
N.index('NIEOBECN');
N.prefix('N',_a);
H.cntx_psh();
H.index('_HISTKOD');
H.prefix(_a);
_dzien:=_b;

{? H.last()
|| H.P();
   {!
   |? _dzien<=_c
   |! _TAB.blank();
      _TAB.DATA:=_dzien;
      {? _dzien<P.DZA | (P.DZ<>#0 & P.DZ<_dzien)
      ||
:: data poza okresem zatrudnienia
         _TAB.WE:=_TAB.WY:=_TAB.CZAS:=time(0,0,0)
      || {? __KAL.set_cal(P.KAL,_TAB.DATA~1) & __KAL.get_day(_TAB.DATA)
         || _TAB.WE:=KAL_DEF.POCZATEK;
            _TAB.WY:=KAL_DEF.KONIEC;
:: uwzględnienie wymiaru zatrudnienia
            H.prefix(P.ref(),'Z');
            {? H.find_le(_dzien)
            || {? H.OD<=_dzien & (_dzien<=H.DO | H.DO=#0)
               || {? H.WY<>1 & __KAL.p_kin(_TAB.DATA)<>'T' & __KAL.grafik(_TAB.DATA)<>'T'
                  || _TAB.WY:=_TAB.WE+(*(((*KAL_DEF.CZAS/60)*H.WY$2)*60));
                     {? _TAB.WY>=time(24,0,0) || _TAB.WY:=_TAB.WY-time(24,0,0) ?}
                  ?}
               ?}
            ?}
         ?};
         {? _TAB.WE=_TAB.WY
         || _TAB.CZAS:=time(0,0,0)
         || {? _TAB.WE<_TAB.WY
            || _TAB.CZAS:=_TAB.WY-_TAB.WE
            || _TAB.CZAS:=_TAB.WY+time(24,0,0)-_TAB.WE
            ?}
         ?}
      ?};
:: uwzględnienie zapisów z nieobecności
      {? N.find_le(_dzien)
      || {? N.OD<=_dzien & _dzien<=N.DO
         || _TAB.NIEO:=exec('nieo_typ','grafik',N.NB().RN)
         ?}
      ?};
:: jeśli jest nieobecność to nie ma czasu pracy, ani odbiorów'
      {? +_TAB.NIEO
      || _TAB.WE:=_TAB.WY:=_TAB.CZAS:=_TAB.ODB_P:=_TAB.ODB_F:=time(0,0,0)
      ?};
      _TAB.add(1);
      _dzien+=1
   !}
?};
exec('KAL_cpop','grafik');
H.cntx_pop();
N.cntx_pop();
_TAB

:Sign Version 2.0 jowisz:1045 2022/06/30 14:22:53 38d629180f6093bef1772ab5088e4b2a113bebcd879e74f9f08fcac7dbb010b76b3d822070ead4faf2741aae5ff0227e7abb415a2a09379cdb7aec9d0f039088cd3ccf2403770c0548a0ba9ef4fb0bc7c955679b4903b8c92d91636d9be546950c741d5971d1f09069dae1de0ccff8e32ae202cdc06c2297ba42efd3fb417e3c
