:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fks_ksp_deat.fml
:: Utworzony: 02.10.2015
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności FKS_KSP_DEAT - Aktualizacja sprawozdań
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Aktulizacja sprawozdań - główna formuła czynności FKS_KSP_DEAT
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS
:: PARAMETRY WE:
::# kind=WE, symbol=FIRMA, type=_FIRMA, name=Wskazanie na firmę, required=N
::# kind=WE, symbol=W_SCH, type=_W_SCH, name=Wskazanie na strukturę, required=N
::# kind=WE, symbol=GR_SIK, type=_GR_SIK, name=Wskazanie na sprawozdanie, required=N, fml_val="exec('in_gr_sik','sprfin',_a,_b)"
::# kind=WE, symbol=POWIAZANE, type=NUMBER, name=Z powiązanymu sprawozdaniami (1/0), required=N
::# kind=WE, symbol=OKRES_OD, type=_OKRO_F, name=Okres bilansowy od, required=N
::# kind=WE, symbol=OKRES_DO, type=_OKRO_F, name=Okres bilansowy do, required=N
::# kind=WE, symbol=ZAPISYWAC, type=NUMBER, name=Zapisywać wartości algorytmu (1/0), required=N
::# kind=WE, symbol=ZAMYKAC, type=NUMBER, name=Zamykać zaktualizowane okresy sprawozdawcze (1/0), required=N
::# kind=WE, symbol=TYLKO_MC, type=NUMBER, name=Tylko wartości miesięczne (1/0), required=N
::# kind=WE, symbol=ILE_OKR, type=NUMBER, name=Liczba okresów wstecz od bieżącej daty, required=N
::# kind=WE, symbol=WART_JEDN, type=STRING, name=Aktualizacja wartości jednostkowych (T/N), required=N
::# kind=WE, symbol=WART_WYL, type=STRING, name=Aktualizacja wartości wyłączeniowych (T/N), required=N
::# kind=WE, symbol=WART_SKONS, type=STRING, name=Aktualizacja wartości skonsolidowanych (T/N), required=N
:: PARAMETRY WY:
::# kind=WY, symbol=GR_SIK, type=_GR_SIK, name=Wskazanie na sprawozdanie, required=T
::# kind=WY, symbol=OKRES_OD, type=_OKRO_F, name=Okres bilansowy od, required=T
::# kind=WY, symbol=OKRES_DO, type=_OKRO_F, name=Okres bilansowy do, required=T
:: WŁAŚCIWOŚCI CZYNNOŚCI
::# properties=SERVICE,GRP_FIRM
_args:=params_get();
_in:=_args.in;
_out:=_args.out;
_mp:=_args.mp;
_akcja:=_mp.akcja();
_ar:=SSTALE.AR;
_ao:=SSTALE.AO;
_firma:=REF.FIRMA;
{? _akcja='Procedura' || _context:=params_get().context ?};
REF.FIRMA:=REF.S_FIRMA;
REF.W_SCH:=null;
GR_SIK.cntx_psh();
GR_SIK.index('SAKCEPT');
GR_SIK.prefix(REF.GRUPA,'T'); _is:=GR_SIK.first();
GR_SIK.prefix(REF.FIRMA,'T'); _is+=GR_SIK.first();
_ok:=1;
{? ~_is
|| _ok:=-1;
   {? _mp.isAutoRun() | _mp.isService()
   || _mp.error('Brak zaakceptowanych sprawozdań.')
   || {? _akcja='Procedura'
      || _context.WYNIK:='Brak zaakceptowanych sprawozdań.'
      |? _akcja='Aktualizuj'
      || FUN.info('Brak zaakceptowanych sprawozdań.\n\n'
         'Aktualizacja wykonuje się tylko\ndla zaakceptowanych sprawozdań.'@)
      ?}
   ?}
|| {? var_press('FIRMA',_in)>0 || REF.FIRMA:=_in.FIRMA ?};
   REF.W_SCH:={? var_press('W_SCH',_in)>0 || _in.W_SCH || null ?};
   SIK.GR_SIK:={? var_press('GR_SIK',_in)>0 || _in.GR_SIK || null ?};
   OKRESY.AKT_POW:={? var_press('POWIAZANE',_in)>0 & _in.POWIAZANE || 'T' || 'N' ?};
   OKRESY.OKRES_OD:={? var_press('OKRES_OD',_in)>0 || _in.OKRES_OD || null ?};
   OKRESY.OKRES_DO:={? var_press('OKRES_DO',_in)>0 || _in.OKRES_DO || null ?};
   {? ~OKRESY.OKRES_OD & OKRESY.OKRES_DO
   || OKRO_F.cntx_psh();
      OKRO_F.index('ROK'); OKRO_F.prefix(OKRESY.OKRES_DO().ROK);
      {? OKRO_F.first() || OKRESY.OKRES_OD:=OKRO_F.ref() ?};
      OKRO_F.cntx_pop()
   ?};
   OKRESY.CZY_PAR:={? var_press('ZAPISYWAC',_in)>0
                   || {? _in.ZAPISYWAC || 'T' || 'N' ?}
                   || PAR_SKID.get(28)
                   ?};
   OKRESY.AKT_INNE:=var_press('TYLKO_MC',_in)>0 & _in.TYLKO_MC;
   OKRESY.ZAM:=var_press('ZAMYKAC',_in)>0 & _in.ZAMYKAC;
   OKRESY.KONS1:={? var_press('WART_JEDN',_in)>0 & 1+_in.WART_JEDN='T' || 'T' || 'N' ?};
   OKRESY.KONS2:={? var_press('WART_WYL',_in)>0 & 1+_in.WART_WYL='T' || 'T' || 'N' ?};
   OKRESY.KONS3:={? var_press('WART_SKONS',_in)>0 & 1+_in.WART_SKONS='T' || 'T' || 'N' ?};
   {? OKRESY.KONS1='N' & OKRESY.KONS2='N' & OKRESY.KONS3='N'
   || OKRESY.KONS1:='T'
   ?};
   {? _mp.pathTodo()
   || _key:=_mp.getRefs();
      {? _key[1]<>~~
      || _str:=spli_str(_key[1],'#');
         {? obj_len(_str)=4
         || GR_SIK.prefix();
            SIK.GR_SIK:={? _str[1]<>'' & GR_SIK.seek(BIT.sqlint(_str[1]),) || GR_SIK.ref() || null ?};
            OKRO_F.prefix();
            SIK.OKRES_OD:={? _str[2]<>'' & OKRO_F.seek(BIT.sqlint(_str[2]),) || OKRO_F.ref() || null ?};
            SIK.OKRES_DO:={? _str[3]<>'' & OKRO_F.seek(BIT.sqlint(_str[3]),) || OKRO_F.ref() || null ?}
         || _ok:=0
         ?}
      || _ok:=2
      ?}
   || _ok:=2
   ?}
?};

{? _ok>0
|| {? _mp.isService()
   || {? ~OKRESY.OKRES_OD | ~OKRESY.OKRES_DO | SIK.GR_SIK().AKC='N'
      || _wstecz:={? var_press('ILE_OKR',_in)>0 || _in.ILE_OKR || 1 ?};
         OKRO_F.cntx_psh();
         OKRO_F.index('KON'); OKRO_F.prefix(REF.FIRMA);
         {? OKRO_F.find_ge(date())
         || OKRESY.OKRES_DO:=OKRO_F.ref();
            OKRESY.ROK1:=OKRO_F.ROK;
            OKRESY.OKRES_OD:=OKRO_F.ref();
            {! _i:=1.._wstecz
            |? OKRO_F.prev() & OKRO_F.ROK=OKRESY.ROK1
            |! OKRESY.OKRES_OD:=OKRO_F.ref()
            !}
         || _ok:=-1;
            _mp.error('Nie znaleziono okresu dla daty '+$date()+'.')
         ?};
         OKRO_F.cntx_pop()
      ?}
   |? _akcja=''
   || OKRESY.ROK1:={? OKRESY.OKRES_OD || OKRESY.OKRES_OD().ROK |? OKRESY.OKRES_DO || OKRESY.OKRES_DO().ROK || SSTALE.AR ?};
      _ok:=exec('get_par','!fks_ksp_deat',1);
      {? _ok || _ok:=2 ?}
   ?}
?};
SIK.WYL:='N';
{? _ok>0
|| SSTALE.AO:=OKRESY.OKRES_DO;
   SSTALE.AR:=OKRESY.OKRES_DO().ROK;
   OKRESY.ROK1:=SSTALE.AR;
   {? _ar<>SSTALE.AR | _ao<>SSTALE.AO
   || exec('open_tabele','open_tab','F')
   ?};
   {? _ok=2
   || _mp.keyRef(exec('get_key','sprfin'));
      _mp.keep()
   ?};
   {? SIK.GR_SIK
   || _out.GR_SIK:=SIK.GR_SIK
   ?};
   _out.OKRES_OD:=OKRESY.OKRES_OD;
   _out.OKRES_DO:=OKRESY.OKRES_DO;
   _mp.save(,_out);
   _auto:=AUTO:=_mp.isAutoRun() | _mp.isService();
   {? OKRESY.KONS1='N' & OKRESY.KONS2='N' & OKRESY.KONS3='N'
   || OKRESY.KONS1:='T'
   ?};
   {? exec('generuj','!fks_ksp_deat')
   || _mp.done()
   ?};
   {? _auto=0
   || echo();
      {? _akcja='Procedura'
      || _context.WYNIK:='Aktualizacja danych zakończona.'
      |? _akcja='Aktualizuj'
      || FUN.info('Aktualizacja danych zakończona.'@)
      ?}
   ?};
   VAR_DEL.delete('AUTO');
   1
|? _ok=0
|| _mp.cancel()
?};
GR_SIK.cntx_pop();
REF.FIRMA:=_firma;
{? _ar<>SSTALE.AR | _ao<>SSTALE.AO
|| SSTALE.AR:=_ar;
   SSTALE.AO:=_ao;
   exec('open_tabele','open_tab','F')
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Formuła na opis czynności na liście ToDo
::----------------------------------------------------------------------------------------------------------------------
_desc:='';
_args:=params_get();
_mp:=_args.mp;
_keys:=_mp.getRefs();
_in:=_mp.load(exec('kind_in','#b_port'));
_gr_sik:={? var_press('GR_SIK',_in)>0 || _in.GR_SIK || null ?};
_od:={? var_press('OKRES_OD',_in)>0 || _in.OKRES_OD || null ?};
_do:={? var_press('OKRES_DO',_in)>0 || _in.OKRES_DO || null ?};
GR_SIK.prefix();
OKRO_F.prefix();
{? obj_len(_keys)=1 & _keys[1]<>~~
|| _key:=spli_str(_keys[1],'#');
   {? _key[1]<>'' & GR_SIK.seek(BIT.sqlint(_key[1]),) || _gr_sik:=GR_SIK.ref() ?};
   {? _key[2]<>'' & OKRO_F.seek(BIT.sqlint(_key[2]),) || _od:=OKRO_F.ref() ?};
   {? _key[3]<>'' & OKRO_F.seek(BIT.sqlint(_key[3]),) || _do:=OKRO_F.ref() ?}
?};
{? _gr_sik & GR_SIK.seek(_gr_sik)
|| {? ~_od
   || {? _do & OKRO_F.seek(_do)
      || _desc:='Aktualizuj sprawozdanie: %1 od Bilans otwarcia do %2 %3'@@[GR_SIK.SKROT,OKRO_F.NAZ,OKRO_F.ROK().NAZ]
      || _desc:='Aktualizuj sprawozdanie: %1 od Bilans otwarcia'@@[GR_SIK.SKROT]
      ?}
   |? OKRO_F.seek(_od)
   || {? _do & OKRO_F.seek(_do)
      || _desc:='Aktualizuj sprawozdanie: %1 od %2 do %3 %4'@@[GR_SIK.SKROT,OKRO_F.NAZ,OKRO_F.NAZ,OKRO_F.ROK().NAZ]
      || _desc:='Aktualizuj sprawozdanie: %1 od %2'@@[GR_SIK.SKROT,OKRO_F.NAZ]
      ?}
   || {? _do & OKRO_F.seek(_do)
      || _desc:='Aktualizuj sprawozdanie: %1 do %2 %3'@@[GR_SIK.SKROT,OKRO_F.NAZ,OKRO_F.ROK().NAZ]
      || _desc:='Aktualizuj sprawozdanie: %1'@@[GR_SIK.SKROT]
      ?}
   ?}
|| {? ~_od
   || {? _do & OKRO_F.seek(_do)
      || _desc:='Aktualizuj sprawozdania od Bilans otwarcia do %1 %2'@@[OKRO_F.NAZ,OKRO_F.ROK().NAZ]
      || _desc:='Aktualizuj sprawozdania od Bilans otwarcia'@@
      ?}
   |? OKRO_F.seek(_od)
   || {? _do & OKRO_F.seek(_do)
      || _desc:='Aktualizuj sprawozdania od %1 do %2 %3'@@[OKRO_F.NAZ,OKRO_F.NAZ,OKRO_F.ROK().NAZ]
      || _desc:='Aktualizuj sprawozdania od %1'@@[OKRO_F.NAZ]
      ?}
   || {? _do & OKRO_F.seek(_do)
      || _desc:='Aktualizuj sprawozdania do %1 %2'@@[OKRO_F.NAZ,OKRO_F.ROK().NAZ]
      || _desc:='Aktualizuj sprawozdania'@@
      ?}
   ?}
?};
_desc


\get_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawienie parametrów czynności
::   WE: _a - czy dla konsolidacji
::----------------------------------------------------------------------------------------------------------------------
{? ~OKRESY.OKRES_DO || OKRESY.OKRES_DO:=SSTALE.AO ?};
{? ~OKRESY.OKRES_OD & OKRESY.OKRES_DO
|| OKRO_F.cntx_psh();
   OKRO_F.index('ROK'); OKRO_F.prefix(OKRESY.OKRES_DO().ROK);
   {? OKRO_F.first() || OKRESY.OKRES_OD:=OKRO_F.ref() ?};
   OKRO_F.cntx_pop()
?};
{? OKRESY.KONS1<>'T' & OKRESY.KONS2<>'T' & OKRESY.KONS3<>'T'
|| OKRESY.KONS1:='T'
?};
W_SCH.win_sel('SLO');
OKRESY.win_edit(exec('win_aktualiz','!fks_ksp_deat',_a));
OKRESY.efld_opt('AKTUALIZ','mark='+$(REF.S_FIRMA=REF.GRUPA),REF,'FIRMA');
OKRESY.efld_opt('AKTUALIZ','mark='+$(REF.S_FIRMA=REF.GRUPA),REF,'W_SCH');
OKRESY.efld_opt('AKTUALIZ','enable='+$(REF.S_FIRMA=REF.GRUPA),REF,'W_SCH');
{? OKRESY.edit("exec('okr_od_a','sprfin')")
|| {? OKRESY.KONS1='N' & OKRESY.KONS2='N' & OKRESY.KONS3='N'
   || OKRESY.KONS1:='T'
   ?};
   exec('dod_okr','!fks_ksp_deat');
   1
?}


\win_aktualiz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Zwraca okno parametrów aktualizacji sprawozdań
::   WE: _a - czy dla konsolidacji
::----------------------------------------------------------------------------------------------------------------------
{? var_press('Konsolid')<=0 & _a=0
|| 'AKTUALIZ'
|| _win:=OKRESY.mk_edit('Parametry aktualizacji',,'grsikaktkon');
   OKRESY.win_ewin(_win,,'AKTUALIZ');
   OKRESY.win_ewin(_win,,'KONSOLID');
   _btn:=OKRESY.win_ebtn(_win,'text=%1, btn_label_align=center, panel=bottom, align=end'['OK'@],"'key:F2'");
   OKRESY.btn_eopt(_win,_btn,'tooltip='+exec('help_red_ok','#window','P'));
   _an:=OKRESY.win_ebtn(_win,'text=%1, btn_label_align=center, panel=bottom, align=end'['&Anuluj'@],'key:Esc');
   OKRESY.btn_eopt(_win,_an,'tooltip='+exec('help_red_esc','#window','A'));
   _win
?}


\dod_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.30]
:: OPIS: Funkcja tworzy okresy sprawozdawcze dla podanego zakresu okresow
::       obrachunkowych
::  OLD: \dod_okr/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
OKRO_F.cntx_psh(); ROK_F.cntx_psh();
OKRO_F.index('ROK'); OKRO_F.prefix(OKRESY.ROK1);
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
_dalej:=0;
{? ROK_F.seek(OKRESY.ROK1) & OKRO_F.seek(OKRESY.OKRES_OD)
|| {!|? _nazwa:=ROK_F.NAZ+'-'+form(OKRO_F.NR,2,0)+' ('+OKRO_F.NAZ+')';
        {? exec('dod_ospr','okresy',ROK_F.ref,OKRO_F.NR,OKRO_F.NR,_nazwa,'M')
        || _dalej:=1;
           {? OKRESY.OKRES_OD=OKRO_F.ref
           || OKRESY.OKR_RAP1:=OKRESY.OKR_RAP
           ?}
        ?};
        {? _dalej
        || {? OKRO_F.ref=OKRESY.OKRES_DO
           || OKRESY.OKR_RAP2:=OKRESY.OKR_RAP;
              0
           || OKRO_F.next
           ?}
        ?}
   !}
?};
OKRO_F.cntx_pop();
ROK_F.cntx_pop();
_dalej


\akt_menu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Aktualizacja sprawozdań z okna obszaru roboczego
::----------------------------------------------------------------------------------------------------------------------
SIK.GR_SIK:=GR_SIK.ref();
OKRESY.AKT_POW:='N';
exec('po_sgr','!fks_ksp_deat');
OKRESY.ROK1:=SSTALE.AR;
OKRESY.AKT_INNE:=0;
OKRO_F.cntx_psh();
OKRO_F.index('ROK'); OKRO_F.prefix(OKRESY.ROK1);
{? OKRO_F.first()
|| OKRESY.OKRES_OD:=OKRO_F.ref()
?};
OKRO_F.cntx_pop();
OKRESY.OKRES_DO:=SSTALE.AO;
OKRESY.KONS1:='T';
OKRESY.KONS2:=OKRESY.KONS3:='N';
{? exec('get_par','!fks_ksp_deat',0)
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='FKS_KSP_DEAT';
   _params.AKCJA:='Aktualizuj';
   _params.UIDREF:=exec('get_key','sprfin');
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FIRMA',REF.FIRMA);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'W_SCH',REF.W_SCH);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'GR_SIK',SIK.GR_SIK);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'POWIAZANE',OKRESY.AKT_POW='T');
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OKRES_OD',OKRESY.OKRES_OD);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'OKRES_DO',OKRESY.OKRES_DO);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZAPISYWAC',OKRESY.CZY_PAR='T');
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYLKO_MC',OKRESY.AKT_INNE);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZAMYKAC',OKRESY.ZAM);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'WART_JEDN',OKRESY.KONS1);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'WART_WYL',OKRESY.KONS2);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'WART_SKONS',OKRESY.KONS3);
   exec('mp_run','#b__box',_params)
?}


\beaktpow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Przed redakcja pola OKRES.AKT_POW
::  OLD: \beaktpow/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? SIK.GR_SIK<>null
|| {? OKRESY.AKT_POW='' || OKRESY.AKT_POW:='N' ?};
   1
?}


\wokres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2010]
:: OPIS:
::  OLD: \wokres/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? OKRESY.WOKRES='Z'
|| {? REF.S_FIRMA=REF.GRUPA
   || __F_ref:='S';
      {? REF.FIRMA().TYP<>'S' & REF.FIRMA().TYP<>'W' | REF.FIRMA().Z='T'
      || REF.GRUPA()
      ?}
   ?};
   1
?}


\po_sgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Po redakcji pola SIK.GR_SIK
::  OLD: \po_sgr/wskaznik.fml
::----------------------------------------------------------------------------------------------------------------------
exec('akt_pow','!fks_ksp_deat');
{? SIK.GR_SIK<>null & SIK.GR_SIK().FIRMA<>REF.GRUPA
|| OKRESY.KONS1:='T';
   OKRESY.KONS2:=OKRESY.KONS2:='N'
?};
_enabled:=SIK.GR_SIK=null | SIK.GR_SIK().FIRMA=REF.GRUPA;
OKRESY.efld_opt('AKTUALIZ','enable='+$_enabled,OKRESY,'KONS2');
OKRESY.efld_opt('AKTUALIZ','enable='+$_enabled,OKRESY,'KONS3');
1


\akt_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Ustawienie pola zmiennej OKRESY.AKT_POW
::  OLD: \akt_pow/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? SIK.GR_SIK=null
|| OKRESY.AKT_POW:=''
|? OKRESY.AKT_POW=''
|| OKRESY.AKT_POW:='N'
?};
1


\generuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Formula ustawienia parametrow do aktualizacji danych do sprawozdan
::   WE: [jesli aktualizacja bez podawania parametrow
::        _a - od okresu
::        _b - do okresu]
::  OLD: \generuj/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('F')<0 || exec('def_objf','fiksobi') ?};
_firma:=REF.FIRMA;
GR_SIK.clear;
_dalej:=1;
_ok:=0;
{? var_press('AUTO')<=0 || AUTO:=_>0 ?};
rok_agr:=null;
OKRESY.CZYMC:='T';
OKRESY.CZYROK:=OKRESY.CZYPOL:=OKRESY.CZYKWA:=OKRESY.CZYINN:={? OKRESY.AKT_INNE || 'T' || 'N' ?};
OKRESY.ZAMMC:=OKRESY.ZAMROK:=OKRESY.ZAMPOL:=OKRESY.ZAMKWA:=OKRESY.ZAMINN:={? OKRESY.ZAM || 'T' || 'N' ?};
SIK.AKC:=WYRAZ.AKCEPT:='T';
{? MLEX.FIKSB
|| {? SSTALE.CZ<>''
   || __Kodcz:=SSTALE.CZ
   || ML_CZ.cntx_psh();
      ML_CZ.prefix(OKRESY.OKRES_OD().ROK);
      {? ML_CZ.first & ML_CZ.size=1
      || __Kodcz:=ML_CZ.SYM
      || FUN.error('Nie podano części budżetu w parametrach pracy.\nAktualizacja przerwana'@);
         _dalej:=_ok:=0
      ?};
      ML_CZ.cntx_pop()
   ?}
?};
SIK.AKC:=WYRAZ.AKCEPT:='N';
{? _dalej
|| __OneF:=0;
   {? REF.FIRMA().TYP<>'S' & FIRMA.TYP<>'W' & REF.W_SCH
   || W_STR.index('FIRMA'); W_STR.prefix(REF.W_SCH,REF.FIRMA);
      {? W_STR.first()
      || _ok:=exec('generuj_str','!fks_ksp_deat')
      ?}
   || __OneF:=1;
      _ok:=exec('generuj_firma','!fks_ksp_deat')
   ?}
?};
{? MLEX.FIKSB || VAR_DEL.delete('__Kodcz' ) ?};
VAR_DEL.delete('AUTO','__OneF','TT_AGR','AN_OBR','rok_agr');
set_virt(F,'sprfml',"1",type_of(''));
_ok


\generuj_str
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Aktualizacja danych dla struktury grupy kapitałowej
::  OLD: \generuj_str/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
W_STR.cntx_psh();
W_STR.index('TREE'); W_STR.prefix(REF.W_SCH,W_STR.ref());
{? W_STR.first()
|| {!
   |? {? W_STR.FIRMA().TYP='S' | FIRMA.TYP='W'
      || REF.FIRMA:=FIRMA.ref();
         _o1:=OKRESY.OKRES_OD;
         _o2:=OKRESY.OKRES_DO;
         _r:=OKRESY.ROK1;
         {? FIRMA.Z<>'T'
         || OKRESY.OKRES_OD:=exec('okro_f_f','konsolidacja',_o1,FIRMA.ref());
            OKRESY.OKRES_DO:=exec('okro_f_f','konsolidacja',_o2,FIRMA.ref())
         ?};
         OKRESY.ROK1:=OKRESY.OKRES_OD().ROK;
         {? OKRESY.OKRES_OD().ROK=OKRESY.OKRES_DO().ROK
         || _ok:=exec('generuj_firma','!fks_ksp_deat')
         || OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(OKRESY.OKRES_OD().ROK);
            {? OKRO_F.last()
            || OKRESY.OKRES_DO:=OKRO_F.ref();
               _ok:=exec('generuj_firma','!fks_ksp_deat')
            ?};
            OKRO_F.prefix(OKRESY.OKRES_DO().ROK);
            {? OKRO_F.first()
            || OKRESY.ROK1:=OKRO_F.ROK;
               OKRESY.OKRES_OD:=OKRO_F.ref();
               OKRESY.OKRES_DO:=_o2;
               _ok:=exec('generuj_firma','!fks_ksp_deat')
            ?};
            OKRO_F.cntx_pop()
         ?};
         OKRESY.OKRES_OD:=_o1;
         OKRESY.OKRES_DO:=_o2;
         OKRESY.ROK1:=_r
      || _ok:=exec('generuj_str','!fks_ksp_deat')
      ?};
      _ok & W_STR.next()
  !}
?};
W_STR.cntx_pop();
{? _ok
|| _firma:=REF.FIRMA;
   REF.FIRMA:=W_STR.FIRMA;
   exec('generuj_str_skons','!fks_ksp_deat');
   {? UNPAR.P17='T'
   || {? SIK.WERSJE_W
      || exec('generuj_usun','!fks_ksp_deat',SIK.WERSJE_W().KOD)
      || WERSJE_W.index('KOD'); WERSJE_W.prefix();
         {? WERSJE_W.first()
         || {!
            |? exec('generuj_usun','!fks_ksp_deat',WERSJE_W.KOD);
               exec('generuj_str1','!fks_ksp_deat',WERSJE_W.KOD);
               WERSJE_W.next()
            !}
         ?}
      ?}
   ?};
   REF.FIRMA:=_firma
?};
_ok


\generuj_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Usuwanie wartosci sprawozdan firmy do grupy
::   WE: [_a] - kod wariantu planu (WERSJE_W.ref()) lub bez argumentu wykonanie
::       [_b] - firma
::  OLD: \generuj_usun/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_okresp:=OKRESY.OKRES_OD().NR;
_okresk:=OKRESY.OKRES_DO().NR;
{? var_press('_b')<=0 || _b:=W_STR.FIRMA ?};
OSPR.clear(); _ok:=1;
OSPR.index('ROK_NAZ'); OSPR.prefix(OKRESY.ROK1().FIRMA,OKRESY.ROK1);
{? OSPR.first()
|| _wykon:={? var_press('_a')<=0
           || exec('wykon_firmy','konsolidacja',_b,REF.W_SCH)
           || exec('plan_firmy','konsolidacja',REF.W_SCH,W_STR.FIRMA,_a)
           ?};
   WARTOSCI.use('wsik_'+OSPR.ROK().KOD);
   {? OKRESY.CZYMC='T'
   || OSPR.prefix(OKRESY.ROK1().FIRMA,OKRESY.ROK1,'M');
      {? OSPR.first()
      || {!
         |? {? OSPR.OKRES_OD().NR>=_okresp & OSPR.OKRES_DO().NR<=_okresk
            || {? SIK.GR_SIK
               || exec('generuj_usun2','!fks_ksp_deat',SIK.GR_SIK,_wykon)
               || exec('generuj_usun1','!fks_ksp_deat',REF.GRUPA,_wykon)
               ?}
            ?};
            OSPR.next()
         !}
      || _ok:=0
      ?}
   ?}
?};
{? _ok & (OKRESY.CZYROK='T' | OKRESY.CZYPOL='T' | OKRESY.CZYKWA='T' | OKRESY.CZYINN='T')
|| OSPR.prefix(OKRESY.ROK1().FIRMA,OKRESY.ROK1);
   {? OSPR.first()
   || {!
      |? {? OSPR.TYP<>'M' & OSPR.OKRES_OD().NR>=_okresp & OSPR.OKRES_DO().NR<=_okresk
         || {? (OKRESY.CZYROK='T' & OSPR.TYP='R') |
               (OKRESY.CZYPOL='T' & OSPR.TYP='P') |
               (OKRESY.CZYKWA='T' & OSPR.TYP='K') |
               (OKRESY.CZYINN='T' & OSPR.TYP='I')
            || {? SIK.GR_SIK
               || exec('generuj_usun2','!fks_ksp_deat',SIK.GR_SIK,_wykon)
               || exec('generuj_usun1','!fks_ksp_deat',REF.GRUPA,_wykon)
               ?}
            ?}
         ?};
         OSPR.next()
      !}
   ?}
?};
_ok


\generuj_usun2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Usuwanie wartosci sprawozdan firmy do grupy
::   WE: _a - sprawozdanie
::       _b - wykonanie
::  OLD: \generuj_usun2/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.index('GRUPA'); DEFW.prefix(_a);
GR_KOL.index('LP2'); GR_KOL.prefix(_a,'F');
{? DEFW.first()
|| {!
   |? {? GR_KOL.first()
      || {!
         |? WARTOSCI.index('OKRES');
            WARTOSCI.prefix(OSPR.ref(),_b,DEFW.ref(),GR_KOL.ref());
            {? WARTOSCI.first()
            || {! |? WARTOSCI.del() !}
            ?};
            GR_KOL.next()
         !}
      ?};
      DEFW.next()
   !}
?}


\generuj_usun1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Usuwanie wartosci sprawozdan firmy do grupy
::   WE: _a - firma
::       _b - wykonanie
::  OLD: \generuj_usun1/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
GR_SIK.cntx_psh(); GR_SIK.index('SAKCEPT'); GR_SIK.prefix(_a,'T');
{? GR_SIK.first()
|| {!
   |? exec('generuj_usun2','!fks_ksp_deat',GR_SIK.ref(),_b);
      GR_SIK.next()
   !}
?};
GR_SIK.cntx_pop()


\generuj_str1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Aktualizacja danych dla struktury grupy kapitałowej
::   WE: [_a] - kod wariantu
::  OLD: \generuj_str1/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
W_STR.cntx_psh();
_wykon:={? _=0
        || exec('wykon_firmy','konsolidacja',W_STR.FIRMA,REF.W_SCH)
        || exec('plan_firmy','konsolidacja',REF.W_SCH,W_STR.FIRMA,_a)
        ?};
_grupa:=W_STR.FIRMA;
W_STR.index('TREE'); W_STR.prefix(REF.W_SCH,W_STR.ref());
{? W_STR.first()
|| {!
   |? _ok:={? _=0
           || exec('generuj_suma','!fks_ksp_deat',_wykon,_grupa)
           || exec('generuj_suma','!fks_ksp_deat',_wykon,_grupa,_a)
           ?};
      _ok & W_STR.next()
   !}
?};
W_STR.cntx_pop()


\generuj_suma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Dodanie wartosci sprawozdan firmy do grupy
::   WE:  _a  - wykonanie grupy
::        _b  - grupa
::       [_c] - kod wariantu planu
::  OLD: \generuj_suma/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_okresp:=OKRESY.OKRES_OD().NR;
_okresk:=OKRESY.OKRES_DO().NR;
_rf:=exec('rok_f_f','konsolidacja',OKRESY.ROK1);
OSPR.clear();
OSPR.index('ROK_NAZ'); OSPR.prefix(OKRESY.ROK1().FIRMA,ROK_F.ref());
_ok:={? OSPR.first()
     || 1
     || exec('tmp_uwa','!fks_ksp_deat','Brak okresów raportowania dla podanego roku!');0
     ?};
{? _ok
|| _wykon:={? _=3
           || exec('plan_firmy','konsolidacja',{? W_STR.FIRMA().TYP='S' | FIRMA.TYP='W' || null || REF.W_SCH ?},W_STR.FIRMA,_c)
           || exec('wykon_firmy','konsolidacja',W_STR.FIRMA,{? W_STR.FIRMA().TYP='S' | FIRMA.TYP='W' || null || REF.W_SCH ?})
           ?};
   {? OKRESY.CZYMC='T'
   || OSPR.prefix(OKRESY.ROK1().FIRMA,OKRESY.ROK1,'M');
      {? OSPR.first()
      || {!
         |? {? OSPR.OKRES_OD().NR>=_okresp & OSPR.OKRES_DO().NR<=_okresk
            || exec('generuj_suma2','!fks_ksp_deat',_a,_b,_wykon);
               {? OKRESY.ZAMMC='T' & OSPR.ZAM='N' || OSPR.ZAM:='T'; OSPR.put() ?}
            ?};
            {? OKRESY.ZAMMC='T' & OSPR.ZAM='N' || OSPR.ZAM:='T'; OSPR.put() ?};
            OSPR.next()
         !}
      || _ok:=0
      ?}
   ?}
?};
{? _ok & (OKRESY.CZYROK='T' | OKRESY.CZYPOL='T' | OKRESY.CZYKWA='T' | OKRESY.CZYINN='T')
|| OSPR.prefix(OKRESY.ROK1().FIRMA,OKRESY.ROK1);
   {? OSPR.first()
   || {!
      |? {? OSPR.TYP<>'M' & OSPR.OKRES_OD().NR>=_okresp & OSPR.OKRES_DO().NR<=_okresk
         || OSPR.cntx_psh();
            {? (OKRESY.CZYROK='T' & OSPR.TYP='R') |
               (OKRESY.CZYPOL='T' & OSPR.TYP='P') |
               (OKRESY.CZYKWA='T' & OSPR.TYP='K') |
               (OKRESY.CZYINN='T' & OSPR.TYP='I')
            || exec('generuj_suma2','!fks_ksp_deat',_a,_b,_wykon);
               {? ( (OSPR.TYP='R' & OKRESY.CZYROK='T' & OKRESY.ZAMROK='T') |
                    (OSPR.TYP='P' & OKRESY.CZYPOL='T' & OKRESY.ZAMPOL='T') |
                    (OSPR.TYP='K' & OKRESY.CZYKWA='T' & OKRESY.ZAMKWA='T') |
                    (OSPR.TYP='I' & OKRESY.CZYINN='T' & OKRESY.ZAMINN='T'))
                  & OSPR.ZAM='N'
               || OSPR.ZAM:='T';
                  OSPR.put()
               ?}
            ?};
            OSPR.cntx_pop()
         ?};
         OSPR.next()
      !}
   ?}
?};
_ok


\generuj_suma1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Dodanie wartosci sprawozdan firmy do grupy
::   WE: _a - sprawozdanie
::       _b - okres firmy
::       _c - wykonanie firmy
::       _d - okres grupy
::       _e - wykonaie grupy
::       _f - kod roku grupy
::  OLD: \generuj_suma1/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_mnoznik:={? W_STR.FIRMA().TYP='W' || -1 || 1 ?};
DEFW.index('GRUPA'); DEFW.prefix(_a);
GR_KOL.index('LP2'); GR_KOL.prefix(_a,'F');
{? DEFW.first()
|| {!
   |? {? GR_KOL.first()
      || {!
         |? WARTOSCI.index('OKRES');
            {? W_STR.ODD
            || WARTOSCI.prefix(_b,_c,DEFW.ref(),GR_KOL.ref(),W_STR.ODD)
            || WARTOSCI.prefix(_b,_c,DEFW.ref(),GR_KOL.ref(),null)
            ?};
            {? WARTOSCI.first()
            || {!
               |? _w:=_mnoznik*WARTOSCI.WARTOSC*W_STR.WSP/100;
                  WARTOSCI.cntx_psh();
                  WARTOSCI.use('wsik_'+_f);
                  WARTOSCI.index('OKRES');
                  WARTOSCI.prefix(_d,_e,DEFW.ref(),GR_KOL.ref(),null,WARTOSCI.ZN,WARTOSCI.KOD);
                  {? WARTOSCI.first()
                  || WARTOSCI.WARTOSC+=_w;
                     WARTOSCI.put()
                  || WARTOSCI.OKRES:=_d;
                     WARTOSCI.WERSJA:=_e;
                     WARTOSCI.ODD:=null;
                     WARTOSCI.WARTOSC:=_w;
                     WARTOSCI.prefix();
                     WARTOSCI.add()
                  ?};
                  WARTOSCI.cntx_pop();
                  WARTOSCI.next()
               !}
            ?};
            GR_KOL.next()
         !}
      ?};
      DEFW.next()
   !}
?}


\generuj_suma2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Dodanie wartosci sprawozdan firmy do grupy
::   WE: _a - wykonanie grupy
::       _b - grupa
::       _c - wykonanie firmy
::  OLD: \generuj_suma2/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_ospr_gr:=OSPR.ref();
_rkod:=OSPR.ROK().KOD;
{? W_STR.FIRMA().TYP='S' | FIRMA.TYP='W'
|| _ospr:=exec('ospr_fg','konsolidacja',OSPR.ref(),'F',W_STR.FIRMA);
   OSPR.cntx_psh(); OSPR.prefix();
   {? OSPR.seek(_ospr)
   || WARTOSCI.use('wsik_'+OSPR.ROK().KOD)
   ?};
   OSPR.cntx_pop()
|| _ospr:=OSPR.ref();
   WARTOSCI.use('wsik_'+OSPR.ROK().KOD)
?};
OSPR.cntx_psh();
{? SIK.GR_SIK
|| exec('generuj_suma1','!fks_ksp_deat',SIK.GR_SIK,_ospr,_c,_ospr_gr,_a,_rkod);
   OSPR.prefix(); OSPR.seek(_ospr_gr); REF.WYKON:=_a; OKRESY.OKR_RAP:=_ospr_gr;
   exec('akt_kol','!fks_ksp_deat')
|| GR_SIK.cntx_psh(); GR_SIK.index('SAKCEPT'); GR_SIK.prefix(REF.GRUPA,'T');
   {? GR_SIK.first()
   || {!
      |? exec('generuj_suma1','!fks_ksp_deat',GR_SIK.ref(),_ospr,_c,_ospr_gr,_a,_rkod);
         OSPR.prefix(); OSPR.seek(_ospr_gr); REF.WYKON:=_a; OKRESY.OKR_RAP:=_ospr_gr;
         exec('akt_kol','!fks_ksp_deat');
         GR_SIK.next()
      !}
   ?};
   GR_SIK.cntx_pop()
?};
OSPR.cntx_pop()


\generuj_firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Aktualizacja danych dla firmy (REF.FIRMA)
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
{? OKRESY.KONS1='T'
|| SIK.WYL:='T';
   set_virt(F,'sprfml',"1",type_of(''));
   _ok:=exec('generuj_firma0','!fks_ksp_deat')
?};
{? OKRESY.KONS2='T' & _ok
|| VAR_DEL.delete('KonFirm');
   KonFirm:=exec('create_hash','#array','STRING[35]','INTEGER');
   set_virt(F,'sprfml',"
      {? SIK.FORM_WYL=null
      || 1
      |? (_firma:=KonFirm.get(_a))<>~~
      || {? REF.FIRMAWYL=null
         || _firma<>0
         || _firma=#REF.FIRMAWYL
         ?}
      || _firma:=($SIK.FORM_WYL().FORMULA)(_a);
         KonFirm.put(_a,_firma);
         {? REF.FIRMAWYL=null
         || _firma<>null
         || _firma=REF.FIRMAWYL
         ?}
      ?}
   ",type_of(''));
   SIK.WYL:='W';
   _firma:=REF.FIRMAWYL;
   FIRMA.cntx_psh();
   FIRMA.index('SYMBOL2'); FIRMA.prefix('S');
   {? FIRMA.first()
   || {!
      |? {? REF.FIRMA<>FIRMA.ref()
         || REF.FIRMAWYL:=FIRMA.ref();
            FIRMA.cntx_psh();
            _ok:=exec('generuj_firma0','!fks_ksp_deat');
            FIRMA.cntx_pop()
         ?};
         _ok & FIRMA.next()
      !}
   ?};
   {? _ok
   || REF.FIRMAWYL:=null;
      _ok:=exec('generuj_firma0','!fks_ksp_deat')
   ?};
   FIRMA.cntx_pop();
   REF.FIRMAWYL:=_firma;
   VAR_DEL.delete('KonFirm')
?};
set_virt(F,'sprfml',"1",type_of(''));
{? OKRESY.KONS3='T' & _ok
|| _ok:=exec('generuj_skonsolid','!fks_ksp_deat')
?};
_ok


\generuj_firma0
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Aktualizacja danych dla firmy (REF.FIRMA)
::  OLD: \generuj_firma/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
REF.WYKON:=exec('wykon_firmy','konsolidacja',REF.FIRMA);
_lok:={? SIK.GR_SIK<>null
      || {? OKRESY.AKT_POW='T'
         || exec('sikfirst','!fks_ksp_deat')
         || {? GR_SIK.FIRMA<>REF.GRUPA
            || 'sprawozdanie lokalne';
               GR_SIK.r_lock(1,1)
            || 'sprawozdanie dla całej grupowe';
               exec('r_lock_spr_gr','!fks_ksp_deat',REF.FIRMA,GR_SIK.ref(),1,1)
            ?}
         ?}
      || exec('lock_sik','!fks_ksp_deat',1,REF.FIRMA)
      ?};
{? _lok
|| SIK.CZAS:=time(); SIK.DATA_A:=date();
   id_tmp:=tm_form(TMPSIK.tm_stamp);
   _gr_sik:=SIK.GR_SIK;
   SIK_LAST:=SIK_ERR:=0; SIK_ECHO:='';
   {? SIK.GR_SIK<>null & OKRESY.AKT_POW='T'
   || TT_SIK.cntx_psh();
      SIK_LAST:=~TT_SIK.next();
      TT_SIK.cntx_pop();
      SIK_LICZ:=0;
      exec('sik_echo','!fks_ksp_deat')
   ?};
   {!
   |? {? OKRESY.CZYMC='T'
      || {? SIK.GR_SIK<>null
         || exec('tmp_gr','!fks_ksp_deat',id_tmp)
         || exec('generuj_firma1','!fks_ksp_deat',REF.S_FIRMA);
            {? REF.S_FIRMA<>REF.GRUPA
            || exec('generuj_firma1','!fks_ksp_deat',REF.GRUPA)
            ?}
         ?};
         exec('for_inf','!fks_ksp_deat');
         exec('put_okr','!fks_ksp_deat',1, OKRESY.OKRES_OD);
         exec('put_okr','!fks_ksp_deat',0, OKRESY.OKRES_DO)
      ?};
      aktsprwd:=1;
:: TODO: Aktualizacja planów do sprawozdań
::      {? UNPAR.P17='T' || exec('aktualizacja','plan_spr') ?};
      _ok:=exec('akt_wsk','!fks_ksp_deat');
      &aktsprwd;
      TMPSIK.index('ID');
      TMPSIK.prefix(id_tmp);
      {? TMPSIK.first || {!|? TMPSIK.del !} ?};
      {? var_pres('ALG')>100 || obj_del(ALG); &ALG ?};
      {? var_pres('POL')>100 || obj_del(POL); &POL ?};
      {? var_pres('SIKVAT')>100 || obj_del(SIKVAT); &SIKVAT ?};
      {? var_pres('ustalfiz')>100 || obj_del(ustalfiz); &ustalfiz ?};
      SIK.GR_SIK<>null & OKRESY.AKT_POW='T' & SIK_ERR=0 & exec('sik_next','!fks_ksp_deat')
   !};
   {? SIK.GR_SIK<>null & OKRESY.AKT_POW='T' & SIK_ERR=0 || exec('sik_unlock','!fks_ksp_deat') ?};
   SIK.GR_SIK:=_gr_sik;
   VAR_DEL.delete('id_tmp','SIK_LAST','SIK_ECHO','SIK_ERR')
|| _ok:=0;
   {? AUTO=0
   || {? SIK.GR_SIK=null
      || FUN.info('Inny użytkownik dokonuje operacji na sprawozdaniach.'@)
      || FUN.info('Inny użytkownik dokonuje operacji na sprawozdaniu.'@)
      ?}
   ?}
?};
_ok


\generuj_firma1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Aktualizacja danych dla firmy (REF.FIRMA)
::   WE: _a - firma
::  OLD: \generuj_firma1/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
GR_SIK.cntx_psh(); GR_SIK.index('AKCEPT'); GR_SIK.prefix(_a,'IF','T');
{? GR_SIK.first()
|| {!
   |? SIK.GR_SIK:=GR_SIK.ref();
      GR_SIK.cntx_psh();
      exec('tmp_gr','!fks_ksp_deat',id_tmp);
      GR_SIK.cntx_pop();
      GR_SIK.next()
   !};
   SIK.GR_SIK:=null
?};
GR_SIK.cntx_pop()


\sikfirst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Utworzenie tabeli tymczasowej z lista sprawozdan wymaganych do aktualizacji
::       jednego sprawozdania
::   WY: 1-utworzenie tabali powiodlo sie 0-nie
::  OLD: \sikfirst/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TT_SIK','TT_IND');
TT_SIK:=tab_tmp(3,
   'GR_SIK','REAL','Sprawozdanie',
   'DEFW','REAL','Wiersz',
   'GR_KOL','REAL','Kolumna',
   'LP','INTEGER','Lp'
);
TT_IND:=TT_SIK.ndx_tmp(,,'LP',,1);
TT_IND2:=TT_SIK.ndx_tmp(,,'GR_SIK',,1,'LP',,0);
TT_SIK.GR_SIK:=#SIK.GR_SIK;
TT_SIK.LP:=0;
TT_SIK.add();
licznik:=1;
GR_KOL.index('LP2'); GR_KOL.prefix(SIK.GR_SIK,'F');
DEFW.index('KOLEJ2'); DEFW.prefix(SIK.GR_SIK);
DEFA.index('WIERSZ');
{? GR_KOL.first()
|| {!
   |? {? DEFW.first()
      || {!
         |? DEFA.prefix(DEFW.ref(),GR_KOL.LP);
            {? DEFA.first()
            || {!
               |? exec('sik_defw','!fks_ksp_deat',1,SIK.GR_SIK);
                  DEFA.next()
               !}
            ?};
            DEFW.next()
         !}
      ?};
      GR_KOL.next()
   !}
?};
TT_SIK.index(TT_IND2);
{? TT_SIK.first()
|| {!
   |? TT_SIK.prefix(TT_SIK.GR_SIK);
      {? TT_SIK.last()
      || _ost:=TT_SIK.ref();
         {? TT_SIK.first()
         || {!
            |? TT_SIK.ref()<>_ost & TT_SIK.del()
            !}
         ?}
      ?};
      TT_SIK.prefix();
      TT_SIK.next()
   !}
?};
TT_SIK.index(TT_IND);
{? TT_SIK.first()
|| {? exec('sik_lock','!fks_ksp_deat')
   || _ok:=GR_SIK.seek(TT_SIK.GR_SIK,);
      {? _ok || SIK.GR_SIK:=GR_SIK.ref() ?};
      _ok
   || exec('sik_unlock','!fks_ksp_deat'); 0
   ?}
?}


\sik_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Blokuje rekordy sprawozdan zapisanych w tabeli tymczasowej TT_SIK
::  OLD: \sik_lock/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
TT_SIK.cntx_psh();
{? TT_SIK.first()
|| GR_SIK.cntx_psh();
   GR_SIK.prefix();
   {!
   |?  _ok:=0;
       {? GR_SIK.seek(TT_SIK.GR_SIK,)
       || _ok:={? GR_SIK.FIRMA<>REF.GRUPA
               || 'sprawozdanie lokalne';
                  GR_SIK.r_lock(1,1)
               || 'sprawozdanie dla całej grupowe';
                  exec('r_lock_spr_gr','!fks_ksp_deat',REF.FIRMA,GR_SIK.ref(),1,1)
               ?}
       ?};
      _ok & TT_SIK.next()
   !};
   GR_SIK.cntx_pop()
?};
TT_SIK.cntx_pop();
_ok


\sik_unlock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Odblokowuje rekordy sprawozdan zapisanych w tabeli tymczasowej TT_SIK
::  OLD: \sik_unlock/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
GR_SIK.cntx_psh();
{? var_pres('TT_SIK')>100 & TT_SIK.first()
|| GR_SIK.prefix();
   {!
   |? {? GR_SIK.seek(TT_SIK.GR_SIK,)
      || {? GR_SIK.FIRMA<>REF.GRUPA
         || 'sprawozdanie lokalne';
            GR_SIK.r_unlock()
         || 'sprawozdanie dla całej grupowe';
            exec('r_unlock_spr_gr','!fks_ksp_deat',REF.FIRMA,GR_SIK.ref())
         ?}
      ?};
      TT_SIK.next()
   !}
?};
GR_SIK.cntx_pop()


\sik_defw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Dodaje sprawozdania do aktualizacji w oparciu o biezacy skladnik algorytmu
::   WE: _a - poziom rekurencji
::       _b - wskazanie na sprawozdan
::  OLD: \sik_defw/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.cntx_psh(); DEFA.cntx_psh(); GR_KOL.cntx_psh();
{? DEFA.ARGUMENT().GRUPA<>SIK.GR_SIK
|| _ok:=1;
   {? TT_SIK.find_key(#DEFW.GRUPA,#DEFA.ARGUMENT,#DEFA.ARG_KOL)
   || {? TT_SIK.LP>=_a
      || _ok:=0
      || TT_SIK.LP:=_a;
         TT_SIK.add();
         _ok:=0
      ?}
   || TT_SIK.GR_SIK:=#DEFW.GRUPA;
      TT_SIK.DEFW:=#DEFA.ARGUMENT;
      TT_SIK.GR_KOL:=#DEFA.ARG_KOL;
      TT_SIK.LP:=_a;
      TT_SIK.add()
   ?};
   {? _ok
   || DEFA.prefix(DEFW.ref(),DEFA.ARG_KOL().LP);
      {? DEFA.first()
      || {!
         |? exec('sik_defw','!fks_ksp_deat',DEFW.cntx_psh();_z:={? DEFA.ARGUMENT().GRUPA=_b || _a || _a+1 ?};DEFW.cntx_pop();_z,DEFW.GRUPA);
            DEFA.next()
         !}
      ?}
   ?}
?};
GR_KOL.cntx_pop(); DEFA.cntx_pop(); DEFW.cntx_pop()


\sik_next
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Ustawienie nastepnego sprawozdania do aktualizacji
::   WY: czy ustawiono nastepne sprawozdanie?
::  OLD: \sik_next/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? TT_SIK.next() & GR_SIK.seek(TT_SIK.GR_SIK,)
|| exec('sik_echo','!fks_ksp_deat');
   TT_SIK.cntx_psh();
   SIK_LAST:=~TT_SIK.next();
   TT_SIK.cntx_pop();
   SIK.GR_SIK:=GR_SIK.ref();
   1
?}


\sik_echo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Ustawienie tekstu wyswietlanego w echo 2
::  OLD: \sik_echo/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
SIK_LICZ+=1;
SIK_ECHO:='Sprawozdanie '+$SIK_LICZ+' z '+$TT_SIK.size()


\lock_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Blokowanie rekordow sprawozdan firmy
::   WE: _a - bez komunikatow o blokowaniu 1-tak 0-nie
::       _b - firma
::  OLD: \lock_sik/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? _b=REF.GRUPA
|| GR_SIK.lock(1,_a,1)
|| _ok:=1;
   GR_SIK.cntx_psh();
   GR_SIK.index('SKROT');
   GR_SIK.prefix(_b);
   {? GR_SIK.first()
   || {!
      |? _ok:={? GR_SIK.FIRMA<>REF.GRUPA
              || 'sprawozdanie lokalne';
                 GR_SIK.r_lock(1,_a,1)
              || 'sprawozdanie dla całej grupowe';
                 exec('r_lock_spr_gr','!fks_ksp_deat',REF.FIRMA,GR_SIK.ref(),1,_a,1)
              ?};
         _ok & GR_SIK.next()
      !}
   ?};
   GR_SIK.cntx_pop();
   {? _ok=0 || exec('unlock_sik','!fks_ksp_deat',_b) ?};
   _ok
?}


\unlock_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Odblokowani rekordow sprawozdan firmy
::   WE: _a - firma
::  OLD: \unlock_sik/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=REF.GRUPA
|| GR_SIK.unlock()
|| GR_SIK.cntx_psh();
   GR_SIK.index('SKROT');
   GR_SIK.prefix(_a);
   {? GR_SIK.first()
   || {!
      |? {? GR_SIK.FIRMA<>REF.GRUPA
         || 'sprawozdanie lokalne';
            GR_SIK.r_unlock()
         || 'sprawozdanie dla całej grupowe';
            exec('r_unlock_spr_gr','!fks_ksp_deat',REF.FIRMA,GR_SIK.ref())
         ?};
         GR_SIK.next()
      !}
   ?};
   GR_SIK.cntx_pop()
?}


\tmp_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Wyszukanie wierszy podstawowych dla sprawozdania
::   WE: _a - identyfikator dla tabeli TMPSIK
::  OLD: \tmp_gr/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.GR_SIK();
echo('Trwa wyszukiwanie wierszy podstawowych (%1)'@[GR_SIK.SKROT],SIK_ECHO);
DEFW.index('KOLEJ2');
DEFW.prefix(GR_SIK.ref());
{? DEFW.first()
|| {!
   |? DEFW.cntx_psh();
      exec('tmp_wier','!fks_ksp_deat',GR_SIK.ref(),DEFW.ref(),_a);
      DEFW.cntx_pop(); DEFW.next()
   !}
?};
echo(,SIK_ECHO)


\tmp_wier
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Wyszukanie wierszy podstawowych zwiazanych z algorytmem wiersza
::   WE: _a  - sprawozdanie (GR_SIK.ref)
::       _b  - wiersz (DEFW.ref)
::       _c  - identyfikator dla tabeli TMPSIK
::  OLD: \tmp_wier/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
TMPSIK.index('TEXT1'); TMPSIK.prefix(_c,'DEFW'); _nid:=$#_a+'+'+$#_b;
{? TMPSIK.find_key(_nid,) || return ?};
DEFW.prefix();
{? DEFW.seek(_b)
|| _alg:=DEFW.ALGORYTM;
   DEFA.index('LP');
   GR_KOL.index('LP2'); GR_KOL.prefix(_a,'F');
   {? GR_KOL.first()
   || {!
      |? _kol:=GR_KOL.ref();
         {? _alg='F'
         || exec('tmp_add','!fks_ksp_deat',_b,_c,_kol)
         || DEFA.prefix(_b,_kol);
            {? DEFA.first()
            || {!
               |? _ref:=DEFA.ref();
                  {? DEFA.ARGUMENT().GRUPA<>SIK.GR_SIK
                  || exec('tmp_wier','!fks_ksp_deat',DEFW.GRUPA,DEFA.ARGUMENT,_c)
                  ?};
                  DEFA.prefix(_b,_kol); DEFA.seek(_ref) &  DEFA.next()
               !}
            ?}
         ?};
         GR_KOL.prefix(_a);
         GR_KOL.seek(_kol) & GR_KOL.next()
      !}
   ?};
   TMPSIK.ID:=_c;
   TMPSIK.T1:='DEFW';
   TMPSIK.T2:=_nid;
   TMPSIK.add()
?}


\tmp_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Wyszukanie wierszy podstawowych zwiazanych z algorytmem wiersza
::   WE: _a - wiersz (DEFW.ref)
::       _b - identyfikator dla tabeli TMPSIK
::       _c - kolumny (GR_KOL.ref())
::  OLD: \tmp_add/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
ALG_PAR.index('ALG_PAR1'); ALG_PAR.prefix(REF.FIRMA,_a,_c);
{? ALG_PAR.first()
|| TMPSIK.index('TEXT1'); TMPSIK.prefix(_b);
   {!
   |? _s:=ALG_PAR.SYSTEM+'#'+$(#_a)+'#';
      {? ~TMPSIK.find_key(_s) || TMPSIK.blank(); TMPSIK.ID:=_b; TMPSIK.T1:=_s; TMPSIK.add() ?};
      ALG_PAR.next()
   !}
?}


\for_inf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Uruchomienie obliczania algorytmow z systemu IF
::  OLD: \for_inf/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? SIK.GR_SIK<>null
|| _s:='FKS#';
   {!
   |? _i:=_s*'#'; _sys:=(_i-1)+_s; _s:=_i-_s;
      TMPSIK.index('TEXT1');
      TMPSIK.prefix(id_tmp,_sys);
      {? TMPSIK.first() || exec('for_poj','!fks_ksp_deat',_sys) ?};
      _s<>''
   !}
|| exec('for_poj','!fks_ksp_deat','FKS')
?}


\for_poj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Uruchomienie obliczania algorytmow z systemu IF dla parametrow
::       wybranego systemu
::   WE: _a - nazwa systemu
::  OLD: \for_poj/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('put_par','!fks_ksp_deat',50,'2')
|| exec('for_sys','!fks_ksp_deat',_a,#SIK.GR_SIK,id_tmp,SIK.DATA_A,SIK.CZAS,
      #OKRESY.OKRES_OD,#OKRESY.OKRES_DO,OKRESY.CZY_PAR);
   {!
   |? exec('get_par','#parametr',50)<>'0'
   !};
   exec('put_par','!fks_ksp_deat',50,'0')
?}


\for_sys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Obliczenie parametrow po wykonaniu instrukcji fork z systemu IF
::   WE: _a - nazwa systemu
::       _b - numer sprawozdania ($GR_SIK.ref)
::       _c - identyfikator dla tabeli TMPSIK
::       _d - data aktualizacji
::       _e - czas aktualizacji
::       _f - od okresu (#OKRO_F.ref)
::       _g - od okresu (#OKRO_F.ref)
::       _h - czy zapisywac wartosci algorytmow
::  OLD: \for_sys/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
exec('put_par','!fks_ksp_deat',50,'1');
OKRO_F.prefix();
{? OKRO_F.seek(_f,) || OKRESY.OKRES_OD:=OKRO_F.ref() ?};
{? OKRO_F.seek(_g,) || OKRESY.OKRES_DO:=OKRO_F.ref() ?};
{? OKRESY.OKRES_OD<>null & OKRESY.OKRES_DO<>null
|| OKRESY.ROK1:=OKRESY.OKRES_OD().ROK;
   SIK.DATA_A:=_d; SIK.CZAS:=_e; id_tmp:=_c; OKRESY.CZY_PAR:=_h;
   _ok:=1;
   {? _b<>0
   || GR_SIK.cntx_psh(); GR_SIK.prefix();
      _ok:={? GR_SIK.seek(_b,) || SIK.GR_SIK:=GR_SIK.ref(); 1 || 0 ?};
      GR_SIK.cntx_pop()
   || SIK.GR_SIK:=null
   ?};
   {? _ok
   || {? _a='FKS'
      || SSTALE.AR:=OKRESY.ROK1; SSTALE.AO:=OKRESY.OKRES_OD;
         exec('open_tabele','open_tab')
      ?};
      exec('alg_par','!fks_ksp_deat',_a); exec('oblicz','!fks_ksp_deat',_a)
   ?}
?};
exec('put_par','!fks_ksp_deat',50,'0')


\put_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Formula ustawia parametr globalny w tabeli PARAMETR
::       UWAGA: Modyfikowany jest parametr wzorca dla wszystkich firm.
::              Jesli, firma, ma zdefiniowana wlasna wartosc parametru, zmiana nie bedzie widoczna
::
:: WE: _a  - numer parametru
::     _b  - tresc parametru
::    [_c] - opis parametru (wymagane jesli to nowy parametr)
::    [_d] - Cirrus ID                                               (ignorowany jesli parametr juz istnieje)
::    [_e] - czy dostepny w XS: 1 - tak, 0 -(domyslne) nie           (ignorowany jesli parametr juz istnieje)
::    [_f] - czy dopuszczalny lokalny: 1 - tak, 0 - (domyslne) nie   (ignorowany jesli parametr juz istnieje)
::  OLD: \put_par/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~(var_pres('_a')=type_of(0) & _a>0) || return(0) ?};
{? var_pres('_b')<>type_of('') || return(0) ?};
_opis:={? var_pres('_c')=type_of('') & +form(_c) || form(_c) || '' ?};
_ciid:={? var_pres('_d')=type_of('') & +form(_d) || form(_d) || '' ?};
_cirr:={? var_pres('_e')=type_of(0) & _e=1 || _e || 0 ?};
_loca:={? var_pres('_f')=type_of(0) & _f=1 || _f || 0 ?};
PARAMS.index('FIRMA');
PARAMS.prefix();
{? PARAMS.find_key(null,_a)
|| PARAMS.TRESC:=_b;
   {? +_opis || PARAMS.OPIS:=_opis ?};
   PARAMS.put(1)
|? _opis>0
|| PARAMS.NUMER:=_a;
   PARAMS.TRESC:=_b;
   PARAMS.OPIS:=_opis;
   PARAMS.ID:=_ciid;
   PARAMS.CIRR:=_cirr;
   PARAMS.FIRMA:=null;
   PARAMS.LOKALNY:=_loca;
   PARAMS.add(1)
|| return(0)
?};
exec('load_par','#parametr');
PARAMETR.index(PARNUMER);
PARAMETR.find_key(_a)


\alg_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przepisanie parametrow wierszy do tabeli ALG i wywolanie obliczen
::       parametrow
::   WE: _a - system
::  OLD: \alg_par/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ALG')<=0
|| ALG:=tab_tmp(11,'SYSTEM','STRING[10]','System',
               'FOR','STRING[8]',,
               'P1','STRING[100]',,
               'P2','STRING[35]',,
               'P3','STRING[35]',,
               'P4','STRING[35]',,
               'P5','STRING[35]',,
               'P6','STRING[35]',,
               'P7','STRING[35]',,
               'P8','STRING[35]',,
               'WYL','STRING[1]',,
               'KOL','INTEGER',,
               'WIE','INTEGER',,
               'WAR','REAL',,
               'FORWYL','INTEGER',,
               'TYP','STRING[1]',
               )
|| ALG.erase()
?};
{? var_pres('POL')<=0
|| POL:=tab_tmp(7,'DEFW','REAL',,
               'GR_KOL','REAL',,
               'KOD','STRING[35]',,
               'TR','STRING[80]',,
               'ALG','REAL',,
               'ALG_PAR','REAL',,
               'WSP','REAL',
               )
|| POL.erase()
?};
{? SIK.GR_SIK=null
|| exec('alg_par1','!fks_ksp_deat',REF.S_FIRMA,_a);
   {? REF.S_FIRMA<>REF.GRUPA || exec('alg_par1','!fks_ksp_deat',REF.GRUPA,_a) ?}
?};
TMPSIK.index('TEXT1');
TMPSIK.prefix(id_tmp,_a+'#');
DEFW.prefix();
{? TMPSIK.first()
|| {!
   |? _ref:=((TMPSIK.T1*'#')-TMPSIK.T1)-1;
      {? DEFW.seek(#_ref,)
      || exec('zap_wier','!fks_ksp_deat',_a)
      ?};
      TMPSIK.next()
   !}
?};
: _wer:=ALG.mk_sel(,'P');
: ALG.win_fld(_wer,,'SYSTEM',,,10);
: ALG.win_fld(_wer,,'FOR',,,8);
: ALG.win_fld(_wer,,'P1',,,10);
: ALG.win_fld(_wer,,'P2',,,5);
: ALG.win_fld(_wer,,'P3',,,5);
: ALG.win_fld(_wer,,'P4',,,5);
: ALG.win_fld(_wer,,'P5',,,5);
: ALG.win_fld(_wer,,'P6',,,5);
: ALG.win_fld(_wer,,'P7',,,5);
: ALG.win_fld(_wer,,'P8',,,5);
: ALG.win_fld(_wer,,'WAR',,,10,2);
: ALG.win_act(_wer,0,'Kolejność');
: ALG.win_sel(_wer);
: {? ALG.first() || ALG.select() ?};
echo(,SIK_ECHO)


\alg_par1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przepisanie parametrow wierszy do tabeli ALG i wywolanie obliczen
::       parametrow
::   WE: _a - firma
::       _b - system
::  OLD: \alg_par1/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
GR_SIK.index('AKCEPT');
GR_SIK.prefix(_a,_b,'T');
{? GR_SIK.first()
|| {!
   |? DEFW.index('KOLEJ2');
      DEFW.prefix(GR_SIK.ref,0);
      {? DEFW.first()
      || echo('Trwa wyszukiwanie parametrów obliczeń (%1)'@[DEFW.GRUPA().SKROT]);
         {! |? exec('zap_wier','!fks_ksp_deat',_b);  DEFW.next() !}
      ?};
      GR_SIK.next()
   !}
?}


\oblicz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Wywolanie obliczen parametrow - petla po okresach (typu 'M')
::   WE: _a - system
::  OLD: \oblicz/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_okresp:=OKRESY.OKRES_OD().NR;
_okresk:=OKRESY.OKRES_DO().NR;
OSPR.index('ROK_NAZ'); OSPR.prefix(REF.FIRMA,OKRESY.ROK1);
_ar:=SSTALE.AR; _ao:=SSTALE.AO;
{? OSPR.first()
|| {!
   |? {? OSPR.TYP='M' & OSPR.OKRES_OD().NR>=_okresp & OSPR.OKRES_DO().NR<=_okresk
      || OSPR.cntx_psh();
         OKRESY.OKR_RAP:=OSPR.ref();
         OKRESY.CZYSPRZ:=exec('jest_sprzedana','konsolidacja',null,OSPR.ref());
         SIK.OKRES:=OKRESY.OKR_RAP().OKRES_OD;
         _ok:=1;
         SSTALE.AR:=OSPR.ROK;
         SSTALE.AO:=OSPR.OKRES_OD;
         exec('open_tabele','open_tab');
         {? var_pres('rok_agr')>0 & rok_agr<>SSTALE.AR & SIK.GR_SIK=null
         || exec('agregacja','!fks_ksp_deat');
            rok_agr:=SSTALE.AR
         ?};
         _rok:=SIK.OKRES().ROK().KOD;
         WARTOSCI.use('wsik_'+_rok);
         W_ALGPAR.use('walg_'+_rok);
         ALG.prefix();
         {? ALG.first() || {! |? ALG.WAR:=0; ALG.put(); ALG.next() !} ?};
         {? _ok & ALG.first()
         || _odd:=OPERATOR.DEPT;
            OPERATOR.DEPT:=null;
            exec('oblicz2','!fks_ksp_deat',_a);
            {? PAR_SKID.get(12)='T'
            || ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
               {? ODD.first()
               || {!
                  |? ALG.prefix();
                     {? ALG.first() || {! |? ALG.WAR:=0; ALG.put(); ALG.next() !} ?};
                     _od:=OPERATOR.DEPT;
                     {? _a='FKS' || _wal:=SSTALE.WAL ?};
                     OPERATOR.DEPT:=ODD.ref();
                     ODD.cntx_psh();
                     exec('oblicz2','!fks_ksp_deat',_a);
                     OPERATOR.DEPT:=_od;
                     {? _a='FKS' || SSTALE.WAL:=_wal ?};
                     ODD.cntx_pop();
                     ODD.next()
                  !}
               ?}
            ?};
            OPERATOR.DEPT:=_odd
         ?};
         OSPR.cntx_pop()
      ?};
      OSPR.next()
   !}
?};
{? (SSTALE.AR<>_ar | SSTALE.AO<>_ao) & #_ar & #_ao
|| SSTALE.AR:=_ar; SSTALE.AO:=_ao;
   exec('open_tabele','open_tab')
?};
echo(,SIK_ECHO)


\oblicz2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Obliczenie parametrow - petla po tabeli ALG
::   WE: _a - nazwa systemu
::  OLD: \oblicz2/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
t_echo:='';
ALG.prefix();
{? ALG.find_key('FKS','VA') || exec('utw_vat','!fks_ksp_deat') ?};
{? ALG.first()
|| {!|? _v:=1;   _skrot:=ALG.FOR;
        t_echo:='PARAMETR '+OSPR.NAZWA+
           {? OPERATOR.DEPT=null
           || '  Wszystkie jednostki księgowe'
           || '  Jednostka księgowa: '+OPERATOR.DEPT().OD
           ?}+
           '   ('+_skrot+', '+ALG.P1+', '+ALG.P2+', '+ALG.P3+', '+ALG.P4+', '+ALG.P5+', '+ALG.P6+
           ', '+ALG.P7+', '+ALG.P8+')';
        echo(t_echo,SIK_ECHO);
        {? ALG.SYSTEM='FKS' & OPERATOR.DEPT
        || {? (_skrot*'SALD'>0) | (_skrot*'OBROT'>0) | ((4+_skrot)*'BO'>0)
              | (_skrot)*'ROZNI'>0 | (_skrot)*'ZM_STAN'>0
::Poczatek modyfikacji dla Maclex Fiks 04-10-2009 AK [1120]
              | (_skrot)*'SALB'>0  | (_skrot)*'OBRB'>0
::Koniec modyfikacji dla MacLex Fiks
           || {? ALG.P3<>'' & OPERATOR.DEPT().OD<>ALG.P3 || _v:=0 ?}
           |? _skrot='DL_NALEZ' | _skrot='DL_ZOBOW'
           || {? ALG.P1<>'' & OPERATOR.DEPT().OD<>ALG.P1 || _v:=0 ?}
           |? (3+(~-_skrot)='VAT') | (3+(~-_skrot)='VAN') | _skrot='WYNIKF'
           || {? ALG.P4<>'' & OPERATOR.DEPT().OD<>ALG.P4 || _v:=0 ?}
           ?}
        ?};
        {? _v
        || SIK.P1:=ALG.P1;
           SIK.P2:=ALG.P2;
           SIK.P3:=ALG.P3;
           SIK.P4:=ALG.P4;
           SIK.P5:=ALG.P5;
           SIK.P6:=ALG.P6;
           SIK.P7:=ALG.P7;
           SIK.P8:=ALG.P8;
           FORMULA.index('FORMULA4');
           FORMULA.prefix();
           SIK.FORM_WYL:={? ALG.FORWYL & FORMULA.seek(ALG.FORWYL,) || FORMULA.ref() || null ?};
           {? FORMULA.find_key('#',ALG.FOR)
           || SIK.FORMULA:=FORMULA.ref;
              _x:=FORMULA.FORMULA;
              SLO.cntx_psh();
              _od:=OPERATOR.DEPT;
              {? _a='FKS' || _wal:=SSTALE.WAL ?};
              _w:=($_x)();
              OPERATOR.DEPT:=_od;
              {? _a='FKS' || SSTALE.WAL:=_wal ?};
              SLO.cntx_pop();
              {? type_of(_w)=1 || ALG.WAR:=_w || ALG.WAR:=0 ?};
              ALG.put()
           ?}
        ?};
        ALG.next()
   !}
?};
&t_echo;
: ALG.select();
{? SIK.GR_SIK=null || exec('zapam','!fks_ksp_deat') || exec('zapam2','!fks_ksp_deat') ?}


\zap_wier
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Wywolanie przepisania parametrow wiersza sprawozdania do tabeli ALG
::   WE: _a - system
::  OLD: \zap_wier/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_wyl:={? SIK.WYL='W' || 'T' || 'N' ?};
ALG_PAR.index('ALG_PAR3');
ALG_PAR.prefix(REF.FIRMA,DEFW.ref,OKRESY.OKRES_OD().ROK().NAZ,);
{? ALG_PAR.first()
|| {!
   |? {? ALG_PAR.SYSTEM=_a & ALG_PAR.WYL=_wyl &
         (_wyl='N' | REF.FIRMAWYL=null |
          ALG_PAR.FIRMAWYL<>null & ALG_PAR.FIRMAWYL=REF.FIRMAWYL |
          ALG_PAR.FIRMAWYL=null
         )
      || _wszedl:=0;
         {? ALG_PAR.SYSTEM='FKS' & 2+ALG_PAR.FORMULA().SKROT='^A'
         || {? DEFW.SLU<>null
            || AN_SLU.index('SLU_AN');
               SLO.index('SL'); SLO.prefix(DEFW.SLU().SLU);
               {? SLO.first()
               || {!
                  |? {? DEFW.MASKA='' | exec('spr_mask','dok_fks',DEFW.MASKA,SLO.KOD)
                     || _maska:=ALG_PAR.P1;
                        {! |? _maska+1='?' |! _maska:=_maska-1 !};
                        AN_SLU.prefix(FINFO.NAROD,DEFW.SLU().SLU,SLO.ref(),{? _l:=_maska*'?'
                                                                           || (_l-1)+_maska
                                                                           || _maska
                                                                           ?});
                        {? AN_SLU.first()
                        || _konto:=null;
                           {!
                           |? AN_SLU.AN();
                              {? _konto<>AN.ref() & F.spr_mask(_maska,AN.SYM)
                              || _wszedl:=1; exec('zap_poj','!fks_ksp_deat',AN.SYM,SLO.KOD,SLO.TR)
                              ?};
                              _konto:=AN.ref();
                              AN_SLU.next()
                           !}
                        ?}
                     ?};
                     SLO.next()
                  !}
               ?}
            ?};
            {? ~_wszedl
            || OSPR.cntx_psh(); OSPR.index('ROK_NAZ'); OSPR.prefix(REF.FIRMA,OKRESY.ROK1);
               WARTOSCI.cntx_psh(); W_ALGPAR.cntx_psh();
               _okresp:=OKRESY.OKRES_OD().NR;
               _okresk:=OKRESY.OKRES_DO().NR;
               {? OSPR.first()
               || {!
                  |? {? OSPR.OKRES_OD().NR>=_okresp & OSPR.OKRES_DO().NR<=_okresk &
                        ((OKRESY.CZYROK='T' & OSPR.TYP='R') | (OKRESY.CZYPOL='T' & OSPR.TYP='P') |
                         (OKRESY.CZYKWA='T' & OSPR.TYP='K') | (OKRESY.CZYINN='T' & OSPR.TYP='I') |
                         (OKRESY.CZYMC='T' & OSPR.TYP='M'))
                     || OKRESY.OKR_RAP:=OSPR.ref();
                        _rok:=OKRESY.OKR_RAP().ROK().KOD;
                        WARTOSCI.use('wsik_'+_rok);
                        W_ALGPAR.use('walg_'+_rok);
                        exec('walg_def','!fks_ksp_deat',#DEFW.ref())
                     ?};
                     OSPR.next()
                  !}
               ?};
               WARTOSCI.cntx_pop(); W_ALGPAR.cntx_pop(); OSPR.cntx_pop()
            ?}
         || exec('zap_alg','!fks_ksp_deat')
         ?}
      ?};
      ALG_PAR.next()
   !}
?}


\zap_alg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przepisania parametrow wiersza sprawozdania do tabeli ALG
::   WE: _a - sprawozdanie (GR_SIK.ref)
::  OLD: \zap_alg/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? ALG_PAR.AKTYWNA='T'
|| {? DEFW.SLU<>null
   || SLO.index('SL');
      SLO.prefix(DEFW.SLU().SLU);
      DEFW.SLU().SLU();
      {? SLO.first()
      || {!
         |? SLO.cntx_psh();
            {? DEFW.MASKA='' | exec('spr_mask','dok_fks',DEFW.MASKA,SLO.KOD)
            || exec('zap_poj','!fks_ksp_deat',SLU.NAZ,SLO.KOD,SLO.TR)
            ?};
            SLO.cntx_pop();
            SLO.next()
         !}
      ?}
   |? DEFW.TAB<>''
   || ($(DEFW.TAB+'.index(\''+DEFW.INDEX+'\')'))();
      ($(DEFW.TAB+'.prefix('+DEFW.PREFIX+')'))();
      {? ($(DEFW.TAB+'.first'))()
      || {!
         |? _kod:=($(DEFW.KODF))();
            {? DEFW.MASKA='' | exec('spr_mask','dok_fks',DEFW.MASKA,_kod)
            || exec('zap_poj','!fks_ksp_deat','',_kod,($(DEFW.TR))())
            ?};
            ($(DEFW.TAB+'.next()'))()
         !}
      ?}
   || exec('zap_poj','!fks_ksp_deat','','','')
   ?}
?}


\zapam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przepisanie obliczonych wartosci z tabeli ALG do tabeli WARTOSCI
::  OLD: \zapam/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
echo('Trwa zapis wartości parametrów..'@,SIK_ECHO);
DEFW.prefix();
GR_KOL.prefix();
ALG.prefix();
{? _>1 || POL.prefix(_a,_b) || POL.prefix() ?};
{? POL.first()
|| _ref:=_defw:=_gr_kol:=0; _kod:=_tr:=''; _war:=_war_s:=0;
   {!
   |? {? _defw<>0 & (_defw<>POL.DEFW | _gr_kol<>POL.GR_KOL | _kod<>POL.KOD)
      || {? DEFW.seek(_defw,) & GR_KOL.seek(_gr_kol,)
         || {? _defw<>POL.DEFW | _gr_kol<>POL.GR_KOL
            || SIK.WARTOSC:=_war_s;
               {? _kod='' || exec('war_wsp','!fks_ksp_deat') || SIK.WARTOSC1:=((_war_s/DEFW.ZAOKR)$DEFW.DOKL) ?};
               exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref,GR_KOL.ref,OPERATOR.DEPT,
                                        'R',SIK.WARTOSC,SIK.WARTOSC1);
               _war_s:=0
            ?};
            {? _kod<>''
            || SIK.WARTOSC:=_war;
               {? _kod='' || exec('war_wsp','!fks_ksp_deat') || SIK.WARTOSC1:=((_war/DEFW.ZAOKR)$DEFW.DOKL) ?};
               exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref,GR_KOL.ref,OPERATOR.DEPT,
                                     'R',SIK.WARTOSC,SIK.WARTOSC1,_kod,_tr)
            ?}
         ?};
         _defw:=_gr_kol:=0; _kod:=_tr:=''; _war:=0
      ?};
      {? ALG.seek(POL.ALG,)
      || {? _ref<>POL.DEFW || exec('walg_def','!fks_ksp_deat',POL.DEFW); _ref:=POL.DEFW ?};
         exec('walg_add','!fks_ksp_deat',POL.ALG_PAR,ALG.WAR*POL.WSP);
         {? _defw=0 || _defw:=POL.DEFW; _gr_kol:=POL.GR_KOL; _kod:=POL.KOD; _tr:=POL.TR ?};
         _sum:=POL.WSP*ALG.WAR;
         _war+=_sum; _war_s+=_sum;
         {? _war$2=0 || _kod:=_tr:='' ?}
      ?};
      POL.next()
   !};
   {? DEFW.seek(_defw,) & GR_KOL.seek(_gr_kol,)
   || SIK.WARTOSC:=_war_s;
      {? _kod='' || exec('war_wsp','!fks_ksp_deat') || SIK.WARTOSC1:=((_war_s/DEFW.ZAOKR)$DEFW.DOKL) ?};
      exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref,GR_KOL.ref,OPERATOR.DEPT,
                               'R',SIK.WARTOSC,SIK.WARTOSC1);
      {? _kod<>''
      || SIK.WARTOSC:=_war;
         {? _kod='' || exec('war_wsp','!fks_ksp_deat') || SIK.WARTOSC1:=((_war/DEFW.ZAOKR)$DEFW.DOKL) ?};
         exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref,GR_KOL.ref,OPERATOR.DEPT,
                               'R',SIK.WARTOSC,SIK.WARTOSC1,_kod,_tr)
      ?}
   ?}
?}


\zapam2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Przepisanie obliczonych wartosci z tabeli ALG do tabeli TMPSIK
::  OLD: \zapam2/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
echo('Trwa zapis wartości parametrów..'@,SIK_ECHO);
DEFW.prefix();
GR_KOL.prefix();
ALG.prefix();
{? POL.first()
|| _ref:=_defw:=_gr_kol:=0; _kod:=_tr:=''; _war:=0;
   {!
   |? {? _defw<>0 & (_defw<>POL.DEFW | _gr_kol<>POL.GR_KOL | _kod<>POL.KOD)
      || exec('tmp_zap','!fks_ksp_deat',_defw,_gr_kol,_kod,_tr,_war);
         _defw:=_gr_kol:=0; _kod:=_tr:=''; _war:=0
      ?};
      {? ALG.seek(POL.ALG,)
      || {? _ref<>POL.DEFW || exec('walg_def','!fks_ksp_deat',POL.DEFW,0); _ref:=POL.DEFW ?};
         {? ALG.WAR$2<>0
         || exec('walg_add','!fks_ksp_deat',POL.ALG_PAR,ALG.WAR*POL.WSP);
            _war+=POL.WSP*ALG.WAR;
            {? _war$2=0 || _defw:=_gr_kol:=0; _kod:=_tr:='' ?}
         ?};

         {? _defw=0 || _defw:=POL.DEFW; _gr_kol:=POL.GR_KOL; _kod:=POL.KOD; _tr:=POL.TR ?}
      ?};
      POL.next()
   !};
   {? _war$2<>0
   || exec('tmp_zap','!fks_ksp_deat',_defw,_gr_kol,_kod,_tr,_war)
   ?}
?};
:_wer:=TMPSIK.mk_sel(,'P',);
:TMPSIK.win_fld(_wer,,'T1',,,40);
:TMPSIK.win_fld(_wer,,'WAR',,,12,2);
:TMPSIK.win_sel(_wer);
:TMPSIK.select();
1


\tmp_zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Zapisanie wartosci do tabeli TMPSIK
::   WE: _a - wiersz (#DEFW.ref)
::       _b - kolumna (#GR_KOL.ref)
::       _c - kod wiersza
::       _d - tresc wiersza
::       _e - wartosc
::  OLD: \tmp_zap/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
TMPSIK.prefix(id_tmp);
TMPSIK.blank();
TMPSIK.ID:=id_tmp;
OKRESY.OKR_RAP();
TMPSIK.T1:='#'+$_a+'#'+$_b+'#'+$(#OSPR.ref)+'#'+$(#OPERATOR.DEPT)+'#';
TMPSIK.T2:=_c+'#'+_d;
TMPSIK.WAR:=_e;
TMPSIK.add()


\zap_poj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Wywolanie dodania rekordu do tabeli ALG
::   WE: _a - nazwa slownika dla wiersza opartego na slowniku
::       _b - kod wiersza opartego na kartotece/slowniku
::       _c - tresc wiersza opartego na kartotece/slowniku
::  OLD: \zap_poj/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_skr:=ALG_PAR.FORMULA().SKROT;
_p1:=ALG_PAR.P1; _p5:=ALG_PAR.P5; _p6:=ALG_PAR.P6;
{? ALG_PAR.SYSTEM='FKS' & (1+_skr='_' | 1+_skr='^')
|| _for:=ALG_PAR.FORMULA().FORMULA;
   {? 2+_skr<>'^A' || {? 1+_skr='_' || _p1:=_b |? 1+_skr='^' || _p5:=_a; _p6:=_b ?} || _p1:=_a ?};
   _i:=(6-_for)*''''; _k:=~((_i-1)+(6-_for));
   {? 5+form(_for)='exec(' & form((7+(+_k))-_for)=',''!fks_ksp_deat'')'
   || FORMULA.index('FORMULA4'); FORMULA.prefix();
      {? _k<>'' & FORMULA.find_key('#',_k) & FORMULA.SKROT=_k || _skr:=_k ?}
   ?}
?};
{? _skr='ZM_STAN'
|| exec('alg_add','!fks_ksp_deat','BO',_p1,_p5,_p6,_b,_c);
   exec('alg_add','!fks_ksp_deat','SALDO1',_p1,_p5,_p6,_b,_c,-1)
|| exec('alg_add','!fks_ksp_deat',_skr,_p1,_p5,_p6,_b,_c)
?}


\alg_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Dodanie rekordu do tabeli ALG
::   WE: _a - skrot formuly
::       _b - parametr 1
::       _c - parametr 5
::       _d - parametr 6
::       _e - kod wiersza opartego na kartotece/slowniku
::       _f - tresc wiersza opartego na kartotece/slowniku
::      [_g - dodatkowy wspolczynnik do obliczen]
::  OLD: \alg_add/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~ALG.find_key(ALG_PAR.SYSTEM,_a,_b,ALG_PAR.P2,ALG_PAR.P3,ALG_PAR.P4,_c,_d,ALG_PAR.P7,ALG_PAR.P8,ALG_PAR.WYL)
|| ALG.blank();
   ALG.SYSTEM:=ALG_PAR.SYSTEM;
   ALG.FOR:=_a;
   ALG.P1:=_b;
   ALG.P2:=ALG_PAR.P2;
   ALG.P3:=ALG_PAR.P3;
   ALG.P4:=ALG_PAR.P4;
   ALG.P5:=_c;
   ALG.P6:=_d;
   ALG.P7:=ALG_PAR.P7;
   ALG.P8:=ALG_PAR.P8;
   ALG.WYL:=ALG_PAR.WYL;
   ALG.FORWYL:=#ALG_PAR.FORM_WYL;
   ALG.KOL:=#ALG_PAR.GR_KOL;
   ALG.WIE:=#ALG_PAR.DEFW;
   _skr:=ALG_PAR.FORMULA().SKROT;
   ALG.TYP:={? 1+_skr='^' || 'W' |? 1+_skr='_' || 'T' || 'K' ?};
   {? ALG.add()
   || POL.DEFW:=#ALG_PAR.DEFW;
      POL.KOD:=_e;
      POL.TR:=_f;
      POL.GR_KOL:=#ALG_PAR.GR_KOL;
      POL.ALG:=#ALG.ref();
      POL.ALG_PAR:=#ALG_PAR.ref();
      POL.WSP:=ALG_PAR.WSP*{? _>6 || _g || 1 ?};
      POL.add()
   ?}
|| {? ~POL.find_key(#ALG_PAR.DEFW,#ALG_PAR.GR_KOL,_e,_f,#ALG.ref(),#ALG_PAR.ref(),ALG_PAR.WSP*{? _>6 || _g || 1 ?})
   || POL.DEFW:=#ALG_PAR.DEFW;
      POL.KOD:=_e;
      POL.TR:=_f;
      POL.GR_KOL:=#ALG_PAR.GR_KOL;
      POL.ALG:=#ALG.ref();
      POL.ALG_PAR:=#ALG_PAR.ref();
      POL.WSP:=ALG_PAR.WSP*{? _>6 || _g || 1 ?};
      POL.add()
   ?}
?}


\walg_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.60]
:: OPIS: Usuniecie wartosci dla parametru
::  OLD: \walg_del/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
W_ALGPAR.index('W_ALGPAR');
{? ALG_PAR.WYL<>'T'
|| W_ALGPAR.prefix(ALG_PAR.ref,OKRESY.OKR_RAP,OPERATOR.DEPT)
|| W_ALGPAR.prefix(ALG_PAR.ref,OKRESY.OKR_RAP,OPERATOR.DEPT,REF.FIRMAWYL)
?};
{? W_ALGPAR.first() || {!|? W_ALGPAR.del() !} ?}


\walg_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.60]
:: OPIS: Usuniecie wartosci parametrow dla wiersza
::   WE:  _a  - ref DEFW (REAL)
::       [_b] - czy kasowac wartosci [1]-tak 0-jesli z innego sprawozdania nie, wpp tak
::       [_c] - czesc (ref ML_CZ)
::  OLD: \walg_def/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<=0 || _b:=1 ?};
{? MLEX.FIKSB=0 || _c:=null |? _>=3 || {? type_of(_c)<>7 || _c:=null ?} || _c:=exec('ref_cz','ml_spra') ?};
{? DEFW.ALGORYTM='F'
|| DEFW.cntx_psh();
   DEFW.prefix();
   _ref:={? DEFW.seek(_a,) || _gr:=DEFW.GRUPA; DEFW.ref() || null ?};
   DEFW.cntx_pop();
   {? _ref
   || {? _b | _gr=SIK.GR_SIK
      || WARTOSCI.cntx_psh();
         {? var_press('__Kodcz')>0
         || WARTOSCI.index('KODCZ'); WARTOSCI.prefix(REF.WYKON,_ref,OKRESY.OKR_RAP,OPERATOR.DEPT,_c,'T')
         || WARTOSCI.index('KOD'); WARTOSCI.prefix(REF.WYKON,_ref,OKRESY.OKR_RAP,OPERATOR.DEPT,'T')
         ?};
         {? WARTOSCI.first || {!|? WARTOSCI.del() !} ?};
         WARTOSCI.cntx_pop()
      ?};
      ALG_PAR.cntx_psh();
      ALG_PAR.index('ALG_PAR6');
      ALG_PAR.prefix(REF.FIRMA,{? REF.WYKON().WYKON='W' || 'T' || 'N' ?},_ref);
      {? ALG_PAR.first()  || {!|? exec('walg_del','!fks_ksp_deat'); ALG_PAR.next()  !} ?};
      ALG_PAR.cntx_pop()
   ?}
?}


\war_wsp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Ustalenie wartosci wiersza typu F przed zapisem do tabeli
::  OLD: \war_wsp/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? DEFW.WSPOLF<>''
|| _x:=DEFW.WSPOLF;
   DEFW.cntx_psh();
   _kol:=WYRAZ.KOLUMNA; _war:=($_x)()*SIK.WARTOSC;
   DEFW.cntx_pop();
   SIK.WARTOSC:=_war$2; WYRAZ.KOLUMNA:=_kol
|? DEFW.WSPOL<>0
|| SIK.WARTOSC:=(SIK.WARTOSC*DEFW.WSPOL)$2
?};
SIK.WARTOSC1:=(SIK.WARTOSC/DEFW.ZAOKR)$DEFW.DOKL


\walg_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.60]
:: OPIS: Dodanie wartosci parametrow dla wiersza
::   WE: _a - ref ALG_PAR (REAL)
::       _b - wartosc
::  OLD: \walg_add/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? OKRESY.CZY_PAR='T' & ~OKRESY.CZYSPRZ
|| ALG_PAR.prefix();
   {? ALG_PAR.seek(_a,)
   || W_ALGPAR.index('W_ALGPAR');
      W_ALGPAR.prefix();
      {? ALG_PAR.WYL<>'T' & W_ALGPAR.find_key(ALG_PAR.ref(),OKRESY.OKR_RAP,OPERATOR.DEPT) |
         ALG_PAR.WYL='T' & W_ALGPAR.find_key(ALG_PAR.ref(),OKRESY.OKR_RAP,OPERATOR.DEPT,REF.FIRMAWYL)
      || W_ALGPAR.WAR+=_b;
         W_ALGPAR.put()
      || W_ALGPAR.blank();
         W_ALGPAR.ALG_PAR:=ALG_PAR.ref();
         W_ALGPAR.OSPR:=OKRESY.OKR_RAP;
         W_ALGPAR.ODD:=OPERATOR.DEPT;
         W_ALGPAR.WAR:=_b;
         {? ALG_PAR.WYL='T'
         || W_ALGPAR.FIRMA:=ALG_PAR.FIRMA;
            W_ALGPAR.FIRMAWYL:=REF.FIRMAWYL
         ?};
         W_ALGPAR.add()
      ?}
   ?}
?}


\put_okr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [2006]
:: OPIS: Zapisuje okres od i okres do ostatnio wykonanej aktualizacji sprawozdan przez uzytkownika
::   WE: _a - 1 od, 0 do
::       _b - OKRO_F.ref()
::  OLD: \put_okr/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? WARIANTY.index('STALE'); WARIANTY.prefix(REF.FIRMA,STALE.ref()); WARIANTY.first()
|| {? {? _a || WARIANTY.AOKR_OD || WARIANTY.AOKR_DO ?}<>_b
   || {? _a
      || WARIANTY.AOKR_OD:=_b
      || WARIANTY.AOKR_DO:=_b
      ?};
      WARIANTY.put()
   ?}
?}


\akt_wsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Formula aktualizacji wartosci wierszy (tabela WARTOSCI)
::  OLD: \akt_wsk/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_odd:=OPERATOR.DEPT;
::{? FL.SYSTEM<>'IF' || exec('oblicz','!fks_ksp_deat',_a) ?};
::Poczatek modyfikacji dla Maclex Fiks 04-10-2009 AK [1120]
{? var_pres('__ML_SUM')<0 || __ML_SUM:=-1 ?};
{? MLEX.FIKSB=1 & __ML_SUM>-1 || exec('ml_sum_t','!fks_ksp_deat') ?};
::Koniec modyfikacji dla MacLex
_okresp:=OKRESY.OKRES_OD().NR;
_okresk:=OKRESY.OKRES_DO().NR;
_firma:={? REF.FIRMA().Z='T' || REF.GRUPA || REF.FIRMA ?};
OSPR.clear();
OSPR.index('ROK_NAZ'); OSPR.prefix(_firma,OKRESY.ROK1);
_ok:={? OSPR.first()
     || 1
     || exec('tmp_uwa','!fks_ksp_deat','Brak okresów raportowania dla firmy '+REF.FIRMA().SYMBOL+' w '+OKRESY.ROK1().NAZ+' roku.');0
     ?};
{? _ok
|| {? OKRESY.CZYMC='T'
   || OSPR.prefix(_firma,OKRESY.ROK1,'M');
      {? OSPR.first()
      || {!
         |? {? OSPR.OKRES_OD().NR>=_okresp & OSPR.OKRES_DO().NR<=_okresk
            || OSPR.cntx_psh();
               OKRESY.OKR_RAP:=OSPR.ref;   SIK.OKRES:=OKRESY.OKR_RAP().OKRES_OD;
               OKRESY.CZYSPRZ:=exec('jest_sprzedana','konsolidacja',null,OSPR.ref());
               {? SIK.GR_SIK
               || exec('akt_gr','!fks_ksp_deat')
               || exec('a_wskaz','!fks_ksp_deat')
               ?};
               exec('akt_kol','!fks_ksp_deat');
               OSPR.cntx_pop();
               {? OKRESY.ZAMMC='T' & OSPR.ZAM='N' || OSPR.ZAM:='T'; OSPR.put() ?}
            ?};
            {? OKRESY.ZAMMC='T' & OSPR.ZAM='N' || OSPR.ZAM:='T'; OSPR.put() ?};
            OSPR.next()
         !}
      || _ok:=0
      ?}
   ?}
?};
{? _ok & (OKRESY.CZYROK='T' | OKRESY.CZYPOL='T' | OKRESY.CZYKWA='T' | OKRESY.CZYINN='T')
|| OSPR.prefix(_firma,OKRESY.ROK1);
   {? OSPR.first()
   || {!
      |? {? OSPR.TYP<>'M' & OSPR.OKRES_OD().NR>=_okresp & OSPR.OKRES_DO().NR<=_okresk
         || OSPR.cntx_psh();
            OKRESY.OKR_RAP:=OSPR.ref();
            OKRESY.CZYSPRZ:=0;
            SIK.OKRES:=OKRESY.OKR_RAP().OKRES_OD;
            {? (OKRESY.CZYROK='T' & OSPR.TYP='R') |
               (OKRESY.CZYPOL='T' & OSPR.TYP='P') |
               (OKRESY.CZYKWA='T' & OSPR.TYP='K') |
               (OKRESY.CZYINN='T' & OSPR.TYP='I')
            || OSPR.cntx_psh();
               {? SIK.GR_SIK || exec('akt_gr','!fks_ksp_deat') || exec('a_wskaz','!fks_ksp_deat') ?};
               exec('akt_kol','!fks_ksp_deat');
               OSPR.cntx_pop();
               {? ( (OSPR.TYP='R' & OKRESY.CZYROK='T' & OKRESY.ZAMROK='T') |
                    (OSPR.TYP='P' & OKRESY.CZYPOL='T' & OKRESY.ZAMPOL='T') |
                    (OSPR.TYP='K' & OKRESY.CZYKWA='T' & OKRESY.ZAMKWA='T') |
                    (OSPR.TYP='I' & OKRESY.CZYINN='T' & OKRESY.ZAMINN='T')
                  ) & OSPR.ZAM='N'
               || OSPR.ZAM:='T';
                  OSPR.put()
               ?}
            ?};
            OSPR.cntx_pop()
         ?};
         OSPR.next()
      !}
   ?}
?};
OPERATOR.DEPT:=_odd;
TMPSIK.index('TEXT1');
TMPSIK.prefix(id_tmp,'UWAGA');
{? SIK.GR_SIK<>null
|| {? GR_SIK.FIRMA<>REF.GRUPA
   || GR_SIK.r_unlock()
   || exec('r_unlock_spr_gr','!fks_ksp_deat',REF.FIRMA,GR_SIK.ref())
   ?}
|| exec('unlock_sik','!fks_ksp_deat',REF.FIRMA)
?};
{? AUTO=0
|| {? TMPSIK.first()
   || SIK_LAST:=SIK_ERR:=1;
      exec('sik_unlock','!fks_ksp_deat');
      _wer:=TMPSIK.mk_sel('Lista błędów aktualizacji'@,,,'tmpsik_wer');
      TMPSIK.win_fld(_wer,,'T2',,,40,,,'Opis'@);
      TMPSIK.win_fld(_wer,,'T3',,,80,,,'Opis dodatkowy'@);
      TMPSIK.win_sel(_wer);
      TMPSIK.win_edit();
      TMPSIK.select()
   ?}
?};
echo(,SIK_ECHO);
_ok


\akt_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [7.60]
:: OPIS: Formula nalicza wartosci dla wybranego sprawozdania
::  OLD: \akt_gr/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_rok:=OKRESY.OKR_RAP().ROK().KOD;
wartzaok:=wskzaokr:=wskdokl:=w_zakr1:=0;
WARTOSCI.use('wsik_'+_rok);
W_ALGPAR.use('walg_'+_rok);
_odd:=OPERATOR.DEPT;
OPERATOR.DEPT:=null;
exec('akt_gr2','!fks_ksp_deat');
{? PAR_SKID.get(12)='T'
|| ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
   {? ODD.first()
   || {!
      |? OPERATOR.DEPT:=ODD.ref();
         ODD.cntx_psh();
         exec('akt_gr2','!fks_ksp_deat');
         ODD.cntx_pop();
         ODD.next()
      !}
   ?}
?};
&wartzaok; &wskzaokr; &wskdokl; &w_zakr1;
OPERATOR.DEPT:=_odd;
echo(,SIK_ECHO)


\akt_gr3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AZ [1020] 30.06.2008 Maclex
:: OPIS: Nowa funkcja aktualizujaca wskazniki
::   WE:
::   WY:
:: HIST:
::  OLD: \akt_gr3/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? __ML_SUM=-1
|| exec('akt_gr3','!fks_ksp_deat')
|| exec('akt_gr3','!fks_ksp_deat');
   exec('ml_sum_t','!fks_ksp_deat')
?}


\akt_gr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS:
::  OLD: \akt_gr2/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
DEFW.index('KOLEJ2');
DEFW.prefix(SIK.GR_SIK);
{? DEFW.first()
|| {!
   |? DEFW.cntx_psh();
      exec('akt_wier','!fks_ksp_deat',SIK.GR_SIK,DEFW.ref());
      DEFW.cntx_pop();
      DEFW.next()
   !}
?}


\akt_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Aktualizuje wartosci wierszy dla kolumn z algorytmem (dla okresach)
::  OLD: \akt_kol/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? SIK.GR_SIK
|| exec('akt_kol_firma','!fks_ksp_deat',SIK.GR_SIK().FIRMA)
|| exec('akt_kol_firma','!fks_ksp_deat',REF.FIRMA);
   exec('akt_kol_firma','!fks_ksp_deat',REF.GRUPA)
?}


\akt_kol_firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Aktualizuje wartosci wierszy dla kolumn z algorytmem (dla okresach)
::   WE: _a - firma (FIRMA.ref())
::  OLD: \akt_kol_firma/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
GR_SIK.cntx_psh();
{? SIK.GR_SIK
|| GR_SIK.index('SAKCEPT'); GR_SIK.prefix();
   _jest:=GR_SIK.seek(SIK.GR_SIK)
|| GR_SIK.index('SAKCEPT'); GR_SIK.prefix(_a,'T');
   _jest:=GR_SIK.first()
?};
ODD.index('ODDZIALY'); ODD.prefix(_a);
_odd:=OPERATOR.DEPT;
{? _jest
|| {!
   |? {? exec('kol_ma_alg','sprfin')
      || OPERATOR.DEPT:=null;
         exec('akt_kol2','!fks_ksp_deat');
         {? ODD.first()
         || {!
            |? OPERATOR.DEPT:=ODD.ref();
               exec('akt_kol2','!fks_ksp_deat');
               ODD.next()
            !}
         ?}
      ?};
      SIK.GR_SIK=null & GR_SIK.next()
   !}
?};
OPERATOR.DEPT:=_odd;
GR_SIK.cntx_pop()


\akt_kol2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Aktualizuje wartosci wierszy dla kolumn z algorytmem (dla okresu i oddzialu)
::  OLD: \akt_kol2/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
GR_KOL.cntx_psh();
GR_KOL.index('KOLEJ'); GR_KOL.prefix(GR_SIK.ref(),0);
{? GR_KOL.last()
|| GR_KOL.prefix(GR_SIK.ref());
   {? GR_KOL.next()
   || {!
      |? DEFW.cntx_psh();
         DEFW.index('GRUPA'); DEFW.prefix(GR_SIK.ref());
         {? DEFW.first()
         || {!
            |? exec('akt_kol3','!fks_ksp_deat',1);
               {? DEFW.TAB<>'' | DEFW.SLU
               || {? DEFW.SLU
                  || SLO.index('SL'); SLO.prefix(DEFW.SLU().SLU);
                     {? SLO.first()
                     || {!
                        |? {? DEFW.MASKA='' | exec('spr_mask','dok_fks',DEFW.MASKA,SLO.KOD,SLO.TR)
                           || exec('akt_kol3','!fks_ksp_deat',1,SLO.KOD,SLO.TR)
                           ?};
                           SLO.next()
                        !}
                     ?}
                  |? DEFW.TAB<>''
                  || ($(DEFW.TAB+'.index(\''+DEFW.INDEX+'\')'))();
                     ($(DEFW.TAB+'.prefix('+DEFW.PREFIX+')'))();
                     {? ($(DEFW.TAB+'.first'))()
                     || {!
                        |? _kod:=($(DEFW.KODF))();
                           {? DEFW.MASKA='' | exec('spr_mask','dok_fks',DEFW.MASKA,_kod)
                           || exec('akt_kol3','!fks_ksp_deat',1,_kod,($(DEFW.TR))())
                           ?};
                           ($(DEFW.TAB+'.next()'))()
                        !}
                     ?}
                  ?}
               ?};
               DEFW.next()
            !}
         ?};
         DEFW.cntx_pop();
         GR_KOL.next()
      !}
   ?}
?};
GR_KOL.cntx_pop()


\akt_kol3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Aktualizuje wartosci wierszy dla kolumn z algorytmem (dla okresu, oddzialu, kolumny i wiersza)
::   WE:  _a  - zapisac wartosc
::       [_b] - kod - dodatkowy słownik
::       [_c] - tresc - dodatkowy slownik
::       [_d] - czesc (ref ML_CZ)
::  OLD: \akt_kol3/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
{? MLEX.FIKSB=0 || _d:=null |? _>=4 || {? type_of(_d)<>7 || _d:=null ?} || _d:=exec('ref_cz','ml_spra') ?};
DEFK.index('LP'); DEFK.prefix(GR_KOL.ref());
{? DEFK.first()
|| WARTOSCI.cntx_psh();
   WARTOSCI.use('wsik_'+OKRESY.OKR_RAP().ROK().KOD);
   {? GR_KOL.ALGORYTM='S'
   || _wartosc:=0;
      {!
      |? {? var_press('__Kodcz')>0
         || WARTOSCI.index('OKRESCZ'); WARTOSCI.prefix(OKRESY.OKR_RAP,REF.WYKON,_d)
         || WARTOSCI.index('OKRES'); WARTOSCI.prefix(OKRESY.OKR_RAP,REF.WYKON)
         ?};
         _defw:={? DEFK.DEFW || DEFK.DEFW || DEFW.ref() ?};
         {? _>1 & WARTOSCI.find_key(_defw,DEFK.ARGUMENT,OPERATOR.DEPT,'T',_b) |
           _=1 & WARTOSCI.find_key(_defw,DEFK.ARGUMENT,OPERATOR.DEPT,'N')
         || _wartosc+=WARTOSCI.WARTOSC*DEFK.WSP
         ?};
         DEFK.next()
      !}
   |? GR_KOL.ALGORYTM='I'
   || _wartosc:=1;
      {!
      |? {? var_press('__Kodcz')>0
         || WARTOSCI.index('OKRESCZ'); WARTOSCI.prefix(OKRESY.OKR_RAP,REF.WYKON,_d)
         || WARTOSCI.index('OKRES'); WARTOSCI.prefix(OKRESY.OKR_RAP,REF.WYKON)
         ?};
         _defw:={? DEFK.DEFW || DEFK.DEFW || DEFW.ref() ?};
         {? _>1 & WARTOSCI.find_key(_defw,DEFK.ARGUMENT,OPERATOR.DEPT,'T',_b) |
           _=1 & WARTOSCI.find_key(_defw,DEFK.ARGUMENT,OPERATOR.DEPT,'N')
         || _wartosc*=WARTOSCI.WARTOSC*DEFK.WSP
         || _wartosc:=0
         ?};
         DEFK.next()
      !}
   || _w1:=_w2:=0;
      {? var_press('__Kodcz')>0
      || WARTOSCI.index('OKRESCZ'); WARTOSCI.prefix(OKRESY.OKR_RAP,REF.WYKON,_d)
      || WARTOSCI.index('OKRES'); WARTOSCI.prefix(OKRESY.OKR_RAP,REF.WYKON)
      ?};
      DEFK.index('LP2'); DEFK.prefix(GR_KOL.ref(),'L');
      {? DEFK.first()
      || {!
         |? _defw:={? DEFK.DEFW || DEFK.DEFW || DEFW.ref() ?};
            {? _>1 & WARTOSCI.find_key(_defw,DEFK.ARGUMENT,OPERATOR.DEPT,'T',_b) |
              _=1 & WARTOSCI.find_key(_defw,DEFK.ARGUMENT,OPERATOR.DEPT,'N')
            || _w1+=WARTOSCI.WARTOSC*DEFK.WSP
            ?};
            DEFK.next()
         !}
      ?};
      DEFK.prefix(GR_KOL.ref(),'M');
      {? DEFK.first()
      || {!
         |? _defw:={? DEFK.DEFW || DEFK.DEFW || DEFW.ref() ?};
            {? _>1 & WARTOSCI.find_key(_defw,DEFK.ARGUMENT,OPERATOR.DEPT,'T',_b) |
               _=1 & WARTOSCI.find_key(_defw,DEFK.ARGUMENT,OPERATOR.DEPT,'N')
            || _w2+=WARTOSCI.WARTOSC*DEFK.WSP
            ?};
            DEFK.next()
         !}
      ?};
      _wartosc:={? _w2=0 || 0 || _w1/_w2 ?}
   ?};
   {? _a
   || {? GR_KOL.DZ_DEFW='N'
      || _zaokr:={? GR_KOL.ZAOKR || GR_KOL.ZAOKR || 1 ?}; _dokl:=GR_KOL.DOKL
      || _zaokr:={? DEFW.ZAOKR || DEFW.ZAOKR || 1 ?}; _dokl:=DEFW.DOKL
      ?};
      {? DEFW.ALGORYTM='P'
      || _wartosc:=0; _wzaok:=0
      || _wzaok:=(_wartosc/_zaokr)$_dokl
      ?};
      {? _>1
      || exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref(),GR_KOL.ref(),OPERATOR.DEPT,'R',_wartosc,_wzaok,_b,_c)
      || exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref(),GR_KOL.ref(),OPERATOR.DEPT,'R',_wartosc,_wzaok)
      ?}
   ?};
   WARTOSCI.cntx_pop();
   _wartosc
?}


\be_w_sch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przed redakcja pola REF.W_SCH
::  OLD: \be_w_sch/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
REF.FIRMA & REF.FIRMA().TYP<>'S' & REF.FIRMA().TYP<>'W'


\a_wskaz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL
:: OPIS: Formula wywoluje obliczenia dla wierszy zaakceptowanych sprawozdan
::       Wymagane ustawienie zmiennych: OKRESY.OKR_RAP
::  OLD: \a_wskaz/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
OSPR.DATAF:=SIK.DATA_A;
OSPR.put();
_rok:=OKRESY.OKR_RAP().ROK().KOD;
WARTOSCI.use('wsik_'+_rok);
W_ALGPAR.use('walg_'+_rok);
DEFW.clear();
DEFW.index('KOLEJ');
{? DEFW.first()
|| {!
   |? echo('Proszę czekać ....'@);
      {? DEFW.GRUPA().AKC='T' & (GR_SIK.FIRMA=REF.S_FIRMA | GR_SIK.FIRMA=REF.GRUPA)
      || DEFW.cntx_psh();
         _a:=DEFW.ref;
         exec('b_wskaz','sprfin',DEFW.ref,DEFW.ALGORYTM);
         DEFW.cntx_pop();
         DEFW.seek(_a)
      ?};
      DEFW.next()
   !}
|| exec('tmp_uwa','!fks_ksp_deat','Brak definicji wierszy.')
?}


\ml_sum_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AZ [10.20] 21.05.2008 Maclex
:: OPIS: Mofyfikuje tabele TMPSIK dla sprawozdań typu suma kolumn w wierszu
::   WE:
::   WY:
::  OLD: \ml_sum_t/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
TMPSIK.index('TEXT1');
{|TMSIK|! {? first()
          || {!|? TMPSIK.prefix(id_tmp,T1);
                  {? TMPSIK.first()
                  || {!|? _t1:=(+T1)-TMPSIK.T1;
                          TMPSIK.WAR:=exec('kol_sum','!fks_ksp_deat',FORM,GRSIK,T1,_t1);
                          TMPSIK.put();
                          TMPSIK.next()
                     !}
                  ?};
                  next()
              !}
          ?}
|}


\kol_sum
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AZ [10.20] 21.05.2008 Maclex
:: OPIS: Obsluga "kolumny sumacyjnej". Funkcja dla argumentow przekazanych parametrami wylicza wartosc kolumny sumacyjnej.
::       Funkcje wyliczajaca kolumne sumacyjna nalezy umieszaczac w algorytmie do obliczen wspolczynnika dla danego
::       wiersza. Kolumny sumacyjne sa wyliczane po aktualizacji wierszy sprawozdania w kolejnosci rosnacej wartosci
::       GR_KOL.LP
::   WE: _a - STRING z algorytmem obliczeniowym postaci, gdzie  K1W1*K2W2 oznacza pomnoz pierwszy wiersz z pierwszej
::            kolumny * drugi wiersz z drugiej kolumny. Jesli napiszemy K1+K2 to taki zapis oznacza dodaj kolumne
::            pierwsza aktualnego wiersza do kolumny drugiej aktualnie przetwarzanego wiersza sprawozdania.
::       _b - #GR_SIK
::       _c -
::   WY: 0/1
:: HIST:
::  OLD: \kol_sum/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
_str:=~-(STR.gsub(STR.gsub(_a,' ',''),' ','')); _gdzie:=_size:=_i:=_stop:=_j:=0; _max:=+_a; _maxsep:=6; _tmpstr:=_wyn:='';
_znak:=obj_new(_maxsep); _znak[1]:='('; _znak[2]:=')'; _znak[3]:='+'; _znak[4]:='-';_znak[5]:='*'; _znak[6]:='/';
_substr:=obj_new(_max); {!_i:=1.._max|!_substr[_i]:=''!}; _subzn:=obj_new(_max);{!_i:=1.._max|!_subzn[_i]:=''!};
_gdziemin:=256; _dalej:=1; _warzaok:=0;
::Podzial stringu z formula na podstringi
{!|?
   _stop:=_gdzie:=0; _gdziemin:=256;
   {!_i:=1.._maxsep |! _gdzie:=_str*_znak[_i]; {?_gdzie & _gdzie<_gdziemin||_gdziemin:=_gdzie?}!};
    {?_gdziemin<256 & _gdziemin>0
       || _tmpstr:=_gdziemin+_str; _str:=_gdziemin-_str;
          _j+=1;_substr[_j]:=(_gdziemin-1)+_tmpstr; _subzn[_j]:=_tmpstr+1; _tmpstr:='';
          _stop:=1
    ?};
    {?_stop=0||_j+=1; _substr[_j]:=_str; _str:=''?};
   _str<>''
!};
{!_i:=1.._j|!_wyn+=exec('wart_kom','!fks_ksp_deat',_substr[_i],_b,_c,_d)+_subzn[_i] !};
_wyn:=_wyn;
($_wyn)()


\wart_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AZ [10.20] 21.05.2008 Maclex
:: OPIS: Funckcja sprawdza wartosc przekazana parametrem _a jest wskazaniem na komorke sprawozdania. Jesli tak
::       to zwracana jest jej wartosc dla aktualnie przetwarzanego okresu sprawozdawczego, jesli nie to funkcja
::       zwraca wartosc wejsciowa
::   WE: _a - STRING z algorytmem
::       _b - ref grupy wskaznikow - GR_SIK.ref()
::       _c - ref kolumny - GR_KOL.ref()
::       _d - ref wiersza wskaznika  - DEFW.ref();
::   WY:
:: HIST:
::  OLD: \wart_kom/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=''; _kol:=_wiersz:=0; _kolref:=_wref:=null(); _dalej:=1;
{?(1+_a)='K' & _a*'K'
  ||{?_a*'W'
      ||_kol:=#(1-(((_a*'W')-1)+_a));
        _wiersz:=#(_a+((+_a)-(_a*'W')))
      ||_kol:=#(1-_a);
        _cc:=#(1-(((1-_c)*'#')+_c));
        {|DEFW|! cntx_psh(); prefix(); {? seek(_cc,name())||_wiersz:=LP?}; cntx_pop()|}
      ?};
     {?_dalej & _kol & type_of(_kol)=1
      || {|GR_KOL|! cntx_psh(); index('LP'); prefix(_b,_kol);{?first()& size()=1||_kolref:=ref();_dalej:=1?};cntx_pop() |}
      ||_dalej:=0
      ?};
     {?_dalej & _wiersz & type_of(_wiersz)=1
       ||{|DEFW|! cntx_psh(); index('LP'); prefix(_b,_wiersz); {?first()& size()=1||_wref:=ref();_dalej:=1?}; cntx_pop()|}
       ||_dalej:=0
     ?};
     {? _dalej
     ||{|TMPSIK|!
         _pref:='#'+$(_cc)+'#'+$(#_kolref)+_d;
         cntx_psh(); index('TEXT1');prefix(id_tmp,_pref);
         _size:=size();
         {? first()
            ||_wyn:=form(WAR,,0,'9.')
            ||_wyn:='0.00'
         ?};
        cntx_pop()
       |}
     ?}
  || _wyn:=_a
?};
_wyn


\akt_wier
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [7.60]
:: OPIS: Formula nalicza wartosci dla wiersza wybranego sprawozdania
::   WY: _a - ref GR_SIK sprawozdania obliczanego
::       _b - ref DEFW wiersza
::      [_c - lp GR_KOL ]
::  OLD: \akt_wier/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_wynik:=0; _alg:=DEFW.ALGORYTM;
_m:=OKRESY.OKR_RAP().TYP='M';
DEFW.prefix();
{? DEFW.seek(_b)
|| _wskzaokr:=DEFW.ZAOKR; _wskdokl:=DEFW.DOKL;
   {? _a=SIK.GR_SIK
   ||  {? OPERATOR.DEPT=null()
       ||  echo('WIERSZ  (%1) %2 Wszystkie jednostki księgowe %3 %4 '@[form(DEFW.KOLEJ),OSPR.NAZWA,SIK.GR_SIK().NAZWA,DEFW.NAZWA],SIK_ECHO)
       ||  echo('WIERSZ  (%1) %2 Jednostka księgowa: %5 %3 %4 '@[form(DEFW.KOLEJ),OSPR.NAZWA,SIK.GR_SIK().NAZWA,DEFW.NAZWA,OPERATOR.DEPT().OD],SIK_ECHO)
       ?}
   ?};
   _dwspol:=DEFW.WSPOL; _dwspolf:=DEFW.WSPOLF;
   _czy_defa:=0;
   DEFA.index('LP');
   GR_KOL.index('LP2');
   {? _=2 || GR_KOL.prefix(_a,'F') || GR_KOL.prefix(_a,'F',_c) ?};
   ALG_PAR.index('ALG_PAR1');
   ALG_PAR.cntx_psh();
   {? GR_KOL.first()
   || {!
      |?  ALG_PAR.prefix(REF.FIRMA,DEFW.ref(),GR_KOL.ref(),OKRESY.ROK1().NAZ,);
         _alg_par:=ALG_PAR.first();
         _kol:=GR_KOL.ref(); _lp_kol:=GR_KOL.LP;
         _wynik:=_wynik_z:=_czy_m:=_licznik:=_mianown:=0;
         {? _alg='F' & _alg_par
         || _wynik:={? _m || exec('tmp_obl','!fks_ksp_deat',#_b,#_kol) || exec('d_wskaz','sprfin',_b,_kol) ?};
            _wynik_z:=((_wynik/_wskzaokr)$_wskdokl)
         |? _alg='P'
         || exec('zapisz','sprfin',OKRESY.OKR_RAP,DEFW.ref(),GR_KOL.ref(),OPERATOR.DEPT,'R',0,0,'','')
         |? _alg='R' | (_alg='F' & ~_alg_par)
         || _wynik:={? _m || exec('e_wskaz','sprfin',_b,_kol) || exec('d_wskaz','sprfin',_b,_kol) ?};
            _wynik_z:=((_wynik/_wskzaokr)$_wskdokl)
         || DEFA.prefix(_b,_kol);
            {? _czy_defa:=DEFA.first()
            || {? _alg='I' || _wynik:=_wynik_z:=1 ?};
               {!
               |? _ref:=DEFA.ref(); _wspol:=DEFA.WSP; _lm:=DEFA.LM;
                  _zaokr:=DEFA.ARGUMENT().ZAOKR; _dokl:=DEFA.ARGUMENT().DOKL;
                  {? DEFA.ARGUMENT().GRUPA<>SIK.GR_SIK
                  || _w:=_wspol*exec('akt_wier','!fks_ksp_deat',DEFA.ARGUMENT().GRUPA,DEFA.ARGUMENT,DEFA.ARG_KOL().LP);
                     w_zkr1:=_wspol*wartzaok
                  || _w:=exec('e_wskaz','sprfin',DEFA.ARGUMENT,DEFA.ARG_KOL,1)
                  ?};
                  {? _alg='S'
                  || _wynik+=_w;
                     {? _wskzaokr=_zaokr & _wskdokl=_dokl
                     || _wynik_z+=(w_zkr1$_wskdokl)
                     || _wynik_z+=((_w/_wskzaokr)$_wskdokl)
                     ?}
                  |? _alg='I'  || _wynik*=_w
                  |? _alg='W'  || {? _lm='L' || _licznik+=_w || _czy_m:=1;_mianown+=_w ?}
                  ?};
                  DEFA.prefix(_b,_kol);
                  DEFA.seek(_ref) &  DEFA.next()
               !}
            || {? 'SWI'*_alg>0
               || _wynik:={? _m || exec('e_wskaz','sprfin',_b,_kol) || exec('d_wskaz','sprfin',_b,_kol) ?};
                  _wynik_z:=((_wynik/_wskzaokr)$_wskdokl)
               ?}
            ?}
         ?};
         {? _alg='W' & _czy_defa
         || {? _czy_m=1 & _mianown<>0  || _wynik:=_licznik/_mianown
            |? _czy_m=0                || _wynik:=_licznik
            |? _czy_m=1 & _mianown=0   || _wynik:=0
            ?}
         ?};
         {? _alg='I' | _alg='W' || _wynik_z:=(_wynik$_wskdokl) ?};
         {? _alg<>'P'
         || wartzaok:=_wynik_z;
            {? _a=SIK.GR_SIK
            || WYRAZ.WIERSZ:=_b;
               wskzaokr:=_wskzaokr; wskdokl:=_wskdokl;
               {? _m & _alg='F' & _alg_par
               || exec('tmp2war','!fks_ksp_deat',_b,_kol)
               || exec('b_wskaz4','sprfin',_wynik,_kol);
                  {? ~_m & _alg='F' & _alg_par || exec('upd_slo_wier','!fks_ksp_deat',_kol) ?}
               ?}
            || {? _dwspol<>0 || _wynik:=_wynik*_dwspol; _wynik_z:=_wynik_z*_dwspol ?};
               {? _dwspolf<>''
               || SIK.WARTOSC:=_wynik; SIK.WARTOSC1:=_wynik_z;
                  _x:=($_dwspolf)(); _wynik:=_wynik*_x; _wynik_z:=_wynik_z*_x
               ?}
            ?}
         ?};
         {? _=2 || GR_KOL.prefix(_a,'F') || GR_KOL.prefix(_a,'F',_c) ?};
         GR_KOL.seek(_kol) & GR_KOL.next()
      !}
   ?};
   ALG_PAR.cntx_pop()
?};
_wynik$2


\tmp_obl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Zwraca wartosc z  tabeli TMPSIK
::   WE: _a - wiersz (#DEFW.ref)
::       _b - kolumna (#GR_KOL.ref)
::       _c - kod wiersza
::   WY: wartosc
::  OLD: \tmp_obl/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_war:=0;
TMPSIK.index('TEXT1');
TMPSIK.prefix(id_tmp,'#'+$_a+'#'+$_b+'#'+$(#OSPR.ref)+'#'+$(#OPERATOR.DEPT)+'#');
{? REF.WYKON().FIRMA().Z='T' & OPERATOR.DEPT=null
|| {? TMPSIK.first()
   || _war:=TMPSIK.WAR
   || DEFW.prefix(); GR_KOL.prefix();
      K_WERSJE.index('CZY_SYS'); K_WERSJE.prefix('T'); K_WERSJE.first();
      {? DEFW.seek(_a,) & GR_KOL.seek(_b,)
      || W_MODEL.index('GR_SIK'); W_MODEL.prefix(DEFW.GRUPA);
         {? W_MODEL.first()
         || K__NAG.index('UNIK1');
            K__NAG.prefix(REF.GRUPA,W_MODEL.SKID_MBN,K_WERSJE.ref(),OSPR.ROK);
            {? K__NAG.first()
            || W_UD_SPR.index('DEFW'); W_UD_SPR.prefix(DEFW.GRUPA,DEFW.ref());
               _ud_defw:={? W_UD_SPR.first() || W_UD_SPR.UD_SKL || null ?};
               W_UD_SPR.index('GR_KOL'); W_UD_SPR.prefix(DEFW.GRUPA,GR_KOL.ref());
               _ud_grkol:={? W_UD_SPR.first() || W_UD_SPR.UD_SKL || null ?};
               _ud_firma:=null;
               UD_TYP.index('SYMBOL'); UD_TYP.prefix();
               {? UD_TYP.find_key('SPR_FIR',)
               || UD_SKL.index('SYMBOL');
                  UD_SKL.prefix(UD_TYP.ref(),REF.WYKON().FIRMA().SYMBOL,FIRMA.SYMBOL);
                  {? UD_SKL.first()
                  || _ud_firma:=UD_SKL.ref()
                  ?}
               ?};
               {? _ud_defw & _ud_grkol & _ud_firma
               || OKRO_F.cntx_psh();
                  OSPR.OKRES_OD();
                  K__POZ.use('yb'+exec('maska','control'));
                  OKRO_F.cntx_pop();
                  K__POZ.index('K__NAG');
                  K__POZ.prefix(K__NAG.ref(),OSPR.OKRES_OD,_ud_defw,_ud_grkol,_ud_firma);
                  {? K__POZ.first()
                  || _war:=0;
                     {! |? _war+=K__POZ.WART; K__POZ.next() !};
                     TMPSIK.ID:=id_tmp;
                     TMPSIK.T1:='#'+$_a+'#'+$_b+'#'+$(#OSPR.ref)+'#'+$(#OPERATOR.DEPT)+'#';
                     TMPSIK.WAR:=_war;
                     TMPSIK.add()
                  ?}
               ?}
            ?}
         ?}
      ?}
   ?}
|| {? TMPSIK.first()
   || {!|? _war+=TMPSIK.WAR; TMPSIK.next() !}
   ?}
?};
_war


\tmp2war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Wyszukanie wierszy podstawowych zwiazanych z algorytmem wiersza
::   WE: _a - wiersz (DEFW.ref)
::       _b - kolumna (GR_KOL.ref)
::       _c - algorytm kolumny
::  OLD: \tmp2war/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
TMPSIK.index('TEXT1');
TMPSIK.prefix(id_tmp,'#'+$(#_a)+'#'+$(#_b)+'#'+$(#OSPR.ref)+'#'+$(#OPERATOR.DEPT)+'#');
_war:=0;
{? DEFW.seek(_a)
|| exec('kas_war','!fks_ksp_deat',OKRESY.OKR_RAP,_a,_b,OPERATOR.DEPT,'T');
   {? TMPSIK.first()
   || {!
      |? _i:=(TMPSIK.T2*'#'); _kod:=(_i-1)+TMPSIK.T2; _tr:=_i-TMPSIK.T2;
         SIK.WARTOSC:=TMPSIK.WAR; SIK.WARTOSC1:=((TMPSIK.WAR/DEFW.ZAOKR)$DEFW.DOKL);
         exec('war_wsp','!fks_ksp_deat');
         exec('zapisz','sprfin',OKRESY.OKR_RAP,_a,_b,OPERATOR.DEPT,'R',
         SIK.WARTOSC,SIK.WARTOSC1,_kod,_tr);
         _war+=TMPSIK.WAR;
         TMPSIK.next()
      !}
   ?};
   {? ((DEFW.SLU<>null | DEFW.TAB<>'') & _war$2<>0) | _war$2=0
   || SIK.WARTOSC:=_war; SIK.WARTOSC1:=((_war/DEFW.ZAOKR)$DEFW.DOKL);
      exec('war_wsp','!fks_ksp_deat');
      exec('zapisz','sprfin',OKRESY.OKR_RAP,_a,_b,OPERATOR.DEPT,'R',SIK.WARTOSC,SIK.WARTOSC1)
   ?}
?}


\upd_slo_wier
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Aktualizuje wartosci wierszy opartych na tabeli lub slowniku dla okresow innych niz miesieczne
::   WE: _a - wskazanie na kolumne
::  OLD: \upd_slo_wier/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? WYRAZ.WIERSZ().TAB<>'' | DEFW.SLU
|| {? DEFW.SLU
   || SLO.index('SL'); SLO.prefix(DEFW.SLU().SLU);
      {? SLO.first()
      || {!
         |? {? DEFW.MASKA='' | exec('spr_mask','dok_fks',DEFW.MASKA,SLO.KOD)
            || exec('upd_slo_wier1','!fks_ksp_deat',WYRAZ.WIERSZ,_a,SLO.KOD,SLO.TR)
            ?};
            SLO.next()
         !}
      ?}
   |? DEFW.TAB<>''
   || ($(DEFW.TAB+'.index(\''+DEFW.INDEX+'\')'))();
      ($(DEFW.TAB+'.prefix('+DEFW.PREFIX+')'))();
      {? ($(DEFW.TAB+'.first'))()
      || {!
         |? _kod:=($(DEFW.KODF))();
            {? DEFW.MASKA='' | exec('spr_mask','dok_fks',DEFW.MASKA,_kod)
            || exec('upd_slo_wier1','!fks_ksp_deat',WYRAZ.WIERSZ,_a,_kod,($(DEFW.TR))())
            ?};
            ($(DEFW.TAB+'.next()'))()
         !}
      ?}
   ?}
?}


\upd_slo_wier1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2009]
:: OPIS: Aktualizuje wartosci wierszy opartych na tabeli lub slowniku dla okresow innych niz miesieczne.
::       Funkcja pomocnicza
::   WE: _a - wskazanie na wiersz
::       _b - wskazanie na kolumne
::       _c - kod
::       _d - tresc
::  OLD: \upd_slo_wier1/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
_rodzaj:=WYRAZ.WIERSZ().DOKRES;
_wartosc:=0;
_okr:=OKRESY.OKR_RAP;
{? _rodzaj='K'
|| OKRESY.OKR_RAP().OKRES_DO().ROK();
   exec('dod_ospr','okresy',ROK_F.ref,OKRO_F.NR,OKRO_F.NR,'','M');
   _wartosc+=exec('e_wskaz','sprfin',_a,_b,0,_c);
   {? _wartosc$2=0 & OKRESY.OKR_RAP().OKRES_DO().KON=date(0,0,0)
   || OKRO_F.index('ROK');
      OKRO_F.prefix(OKRESY.OKR_RAP().ROK);
      {? OKRO_F.prev()
      || exec('dod_ospr','okresy',OKRO_F.ROK,OKRO_F.NR,OKRO_F.NR,'','M');
         _wartosc+=exec('e_wskaz','sprfin',_a,_b,0,_c)
      ?}
   ?};
   _wartosc
|? _rodzaj='P'
|| OKRESY.OKR_RAP().OKRES_OD().ROK();
   exec('dod_ospr','okresy',ROK_F.ref,OKRO_F.NR,OKRO_F.NR,'','M');
   _wartosc+=exec('e_wskaz','sprfin',_a,_b,0,_c)
|? _rodzaj='Z'
|| OKRESY.OKR_RAP().OKRES_DO().ROK();
   exec('dod_ospr','okresy',ROK_F.ref,OKRO_F.NR,OKRO_F.NR,'','M');
   _w2:=exec('e_wskaz','sprfin',_a,_b,0,_c);
   OKRESY.OKR_RAP().OKRES_OD().ROK();
   exec('dod_ospr','okresy',ROK_F.ref,OKRO_F.NR,OKRO_F.NR,'','M');
   _w1:=exec('e_wskaz','sprfin',_a,_b,0,_c);
   _wartosc+=_w2-_w1
|? _rodzaj='S'
|| OKRO_F.index('ROK');
   OKRO_F.prefix(OKRESY.OKR_RAP().ROK);
   _od:=OKRESY.OKR_RAP().OKRES_OD().NR;
   _do:=OKRESY.OKR_RAP().OKRES_DO().NR;
   {? OKRO_F.find_key(_od)
   || {!|?  exec('dod_ospr','okresy',OKRO_F.ROK,OKRO_F.NR,OKRO_F.NR,'','M');
            _wartosc+=exec('e_wskaz','sprfin',_a,_b,0,_c);
            {? OKRO_F.NR<_do || OKRO_F.next() || 0 ?}
      !}
   ?}
?};
OKRESY.OKR_RAP:=_okr;
exec('b_wskaz4','sprfin',_wartosc,_b,_c,_d)


\kas_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.10]
:: OPIS: Formula kasujaca wartosci dla wiersza
:: WE: _a - okres spr. (ref OSPR)
::     _b - wiersz (ref DEFW)
::     _c - kolumna (ref GR_KOL)
::     _d - jednostka ksiegowa (ref ODD)
::     _e - wartosc wiersza / slownika (N/T)
::     [_f] - czesc (ref ML_CZ)
::  OLD: \kas_war/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
{? MLEX.FIKSB=0 || _f:=null |? _>=6 || {? type_of(_f)<>7 || _f:=null ?} || _f:=exec('ref_cz','ml_spra') ?};
{? var_press('__Kodcz')>0
|| WARTOSCI.index('OKRESCZ'); WARTOSCI.prefix(_a,REF.WYKON,_f,_b,_c,_d,_e)
|| WARTOSCI.index('OKRES'); WARTOSCI.prefix(_a,REF.WYKON,_b,_c,_d,_e)
?};
{? WARTOSCI.first() || {!|? WARTOSCI.del() !} ?}


\tmp_uwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.60]
:: OPIS: Dodanie komunikatu o bledzie do tabeli TMPSIK
::   WE: _a - tresc komunikatu
::       [_b - dodatkowy opis - np. zmienna t_echo z opisem algorytmu]
::  OLD: \tmp_uwa/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
TMPSIK.prefix();
TMPSIK.blank();
TMPSIK.T1:='UWAGA'; TMPSIK.T2:=_a;TMPSIK.T3:={? _=2 || _b || '' ?}; TMPSIK.ID:=id_tmp;
TMPSIK.add()


\stale
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Aktualizacja stalych uzytkownika dla systemu FIKS
::  OLD: \stale/skid_akt.fml
::----------------------------------------------------------------------------------------------------------------------
SSTALE.WAL:=SIK.WALUTA; {? SIK.ODDZIAL || OPERATOR.DEPT:=SIK.ODDZIAL ?}


\agregacja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PB [12.30]
:: OPIS: Formula tworzaca tabele tymczasowa TT_AGR na potrzeby szybszych obliczeń sprawozdań definiowalych.
::       Wykorzystywana w metodach .Obr, .Saldo, .Obr1
::  OLD: \agregacja/fiksobi.fml
::----------------------------------------------------------------------------------------------------------------------
SSTALE.AR();
_a:=0; _b:=ROK_F.LOBR+1;
_que_sql:='select ';
{! i:=_a .. _b
|! _que_sql+='SUMW as W'+$i+', '+'SUMW as M'+$i+', '
!};
_que_sql+=' KON as SYM,';
_que_sql+=' SLO.KOD as WAL,';
_que_sql+=' ODD.OD as ODDZIAL, ODD';
_que_sql+=' from POZ join SLO using (POZ.WAL, SLO.REFERENCE) join ODD using (POZ.ODD, ODD.REFERENCE)';
_que_sql+=' where 0=1 order by WAL, SYM, ODDZIAL';
VAR_DEL.delete('TT_AGR','AN_OBR');
TT_AGR:=sql(_que_sql);
AN_OBR:=sql('select NR, WN, MA, SYM, SLO.KOD as WAL, ODD.OD as ODDZIAL, ODD '+
            'from OBR '+
            'join AN using (OBR.AN, AN.REFERENCE) '+
            'join ODD using (OBR.ODD, ODD.REFERENCE) '+
            'join OKRO_F using (OBR.OKRO, OKRO_F.REFERENCE) '+
            'join SLO using (AN.WAL, SLO.REFERENCE) '+
            'order by WAL, SYM, ODDZIAL, NR');
{? type_of(AN_OBR)=type_of(SYSLOG) & AN_OBR.first()
|| {!
   |? echo('Agregacja obrotów na kontach %1'@[AN_OBR.SYM]);
      TT_AGR.blank(1);
      TT_AGR.SYM:=AN_OBR.SYM;
      TT_AGR.WAL:=AN_OBR.WAL;
      TT_AGR.ODDZIAL:=AN_OBR.ODDZIAL;
      TT_AGR.ODD:=AN_OBR.ODD;
      {!
      |? TT_AGR[2*AN_OBR.NR+1]+=AN_OBR.WN; TT_AGR[2*AN_OBR.NR+2]+=AN_OBR.MA;
         AN_OBR.next & TT_AGR.SYM=AN_OBR.SYM & TT_AGR.WAL=AN_OBR.WAL & TT_AGR.ODDZIAL=AN_OBR.ODDZIAL
      !};
      TT_AGR.add();
      ~(TT_AGR.SYM=AN_OBR.SYM & TT_AGR.WAL=AN_OBR.WAL & TT_AGR.ODDZIAL=AN_OBR.ODDZIAL) | AN_OBR.next()
   !}
|| VAR_DEL.delete('TT_AGR','AN_OBR')
?};
echo()


\lista_formul
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: FORMUŁY algorytmów sprawozdń
::----------------------------------------------------------------------------------------------------------------------


\psalbpg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [8.70] 18.11.2005 Maclex
:: OPIS: PERSALDO (SALDO "ZWARTE") na koniec okresu obrachunkowego  sik.okres, liczone
::       na podstawie struktur budzetowych
::   WE:
::   WY:
:: HIST:
::  OLD: \psalbpg/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',6))=''
|| BF.set_odd(OPERATOR.DEPT);
   exec('wartosc_bud','!fks_ksp_deat',0,SIK.OKRES().NR);
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || F.SWn(SIK.WN,SIK.MA)
   || F.SMa(SIK.WN,SIK.MA)
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu '+_e,t_echo);
   0
?}


\obrbpg2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ACH [8.71] 21.07.2006 Maclex
:: OPIS: OBROTY z okresu sik.okres, liczone na podstawie struktur budzetowych
::   WE:
::   WY:
:: HIST:
::  OLD: \obrbpg2/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',6))=''
|| BF.set_odd(OPERATOR.DEPT);
   exec('wartosc_bud','!fks_ksp_deat',SIK.OKRES().NR,SIK.OKRES().NR);
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\obrbpg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [8.70] 18.11.2005 Maclex
:: OPIS: OBROTY narestajaco od poczatku roku do okresu sik.okres, liczone na podsta-
::       wie struktur budzetowych
::   WE:
::   WY:
:: HIST:
::  OLD: \obrbpg/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',6))=''
|| BF.set_odd(OPERATOR.DEPT);
   exec('wartosc_bud','!fks_ksp_deat',0,SIK.OKRES().NR);
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\wartosc_bud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [8.70] 18.11.2005 Maclex
:: OPIS: Wyliczenie wartosci na podstawie struktur budzetowych OBRXX
::   WE: _a - number, numer okresu poczatkowego, w ramach wybranego roku bilansowego
::       _b - number, numer okresu końcowego, w ramach wybranego roku bilansowego
::   WY:
:: HIST:
::  OLD: \wartosc_bud/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN+=BF.Kw(MLEX_OKN.BUD_PATH,MLEX_OKN.TAB_BUD,MLEX_OKN.TYP,_a,_b);
SIK.MA+=BF.Km(MLEX_OKN.BUD_PATH,MLEX_OKN.TAB_BUD,MLEX_OKN.TYP,_a,_b)


\rbpersal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [7.52] 01.01.2002 Maclex
:: OPIS: PERSALDO (SALDO "ZWARTE") na koniec okresu obrachunkowego  sik.okres, liczone
::       tylko dla wyroznikow, przy zalozeniu ze dla danej pozycji wyroznik towarzyszacy
::       ma wartosci okreslone parametrami _a i _b
::   WE: _a - ref slownika wyroznikow towarzyszacych
::       _b - kod pozycji w slowniku wyroznikow towarzyszacych
::   WY:
:: HIST:
::  OLD: \rbpersal/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{|SLUAPPL|!
 cntx_psh();
 index('NAZ');
 clear;
 _find:=find_key('F',_a);
 {? _find=1 ||_ref_wyr:=ref ||_ref_wyr:=null()?};
 cntx_pop()
|};
{? (_e:=exec('parametr','!fks_ksp_deat',1))='' & _ref_wyr <> null()
|| F.set_odd(OPERATOR.DEPT);
   exec('wartosc2','!fks_ksp_deat',0,SIK.OKRES().NR,_ref_wyr,_b,null,'',null,'');
   {? SIK.STRONA='Wn'
   || F.SWn(SIK.WN,SIK.MA)
   || F.SMa(SIK.WN,SIK.MA)
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu '+_e,t_echo);
   0
?}


\rbsaldo2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [7.52] 01.01.2002 Maclex
:: OPIS: SALDO "ROZWARTE" liczone dla kont o podwojnych saldach na koniec okresu  obrachunkowego  sik.okres, liczone
::       tylko dla wyroznikow, przy zalozeniu ze dla danej pozycji wyroznik towarzyszacy ma wartosci
::       okreslone parametrami _a i _b
::   WE: _a - ref slownika wyroznikow towarzyszacych
::       _b - kod pozycji w slowniku wyroznikow towarzyszacych
::   WY:
:: HIST:
::  OLD: \rbsaldo2/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{|SLUAPPL|!
 cntx_psh();
 index('NAZ');
 clear;
 _find:=find_key('F',_a);
 {? _find=1 ||_ref_wyr:=ref ||_ref_wyr:=null()?};
 cntx_pop()
|};
{? (_e:=exec('parametr','!fks_ksp_deat',1))='' & _ref_wyr <> null()
|| FB2.set_odd(OPERATOR.DEPT);
   {? SIK.STRONA='Wn'
   || FB2.WP2('Wn',SIK.KONTO,SIK.OKRES().NR,SIK.NR_SL,SIK.KOD_WYR,_ref_wyr,_b)
   || FB2.WP2('Ma',SIK.KONTO,SIK.OKRES().NR,SIK.NR_SL,SIK.KOD_WYR,_ref_wyr,_b)
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu '+_e,t_echo);
   0
?}


\wartosc2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [7.52] 01.01.2002 Maclex
:: OPIS: Wyliczenie wartosci w SIK.WN, MA dla funkcji uzywajacych wyroznikow
::       stowarzyszonych
::   WE:
::   WY:
:: HIST:
::  OLD: \wartosc2/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN+=FB2.WK('Wn',SIK.KONTO,_a,_b,SIK.NR_SL,SIK.KOD_WYR,_c,_d);
SIK.MA+=FB2.WK('Ma',SIK.KONTO,_a,_b,SIK.NR_SL,SIK.KOD_WYR,_c,_d)


\psalb_mlgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [1030] 20.08.2008 MacLex
:: OPIS: PerSaldo na koniec okresu dla hierarchii slownikow
::   WE:
::   WY:
:: HIST:
::  OLD: \psalb_mlgr/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',8))=''
|| BF.set_odd(OPERATOR.DEPT);
   exec('wartosc_mlgr','!fks_ksp_deat',0,SIK.OKRES().NR);
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || F.SWn(SIK.WN,SIK.MA)
   || F.SMa(SIK.WN,SIK.MA)
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu '+_e,t_echo);
   0
?}


\obrb_mlgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [1030] 20.08.2008 MacLex
:: OPIS: Obroty narastajaco na koniec okresu dla hierarchii slownikow
::   WE:
::   WY:
:: HIST:
::  OLD: \obrb_mlgr/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',8))=''
|| BF.set_odd(OPERATOR.DEPT);
   exec('wartosc_mlgr','!fks_ksp_deat',0,SIK.OKRES().NR);
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\obrbm_mlgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [1030] 20.08.2008 MacLex
:: OPIS: Obroty okresu dla hierarchii slownikow
::   WE:
::   WY:
:: HIST:
::  OLD: \obrbm_mlgr/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',8))=''
|| BF.set_odd(OPERATOR.DEPT);
   exec('wartosc_mlgr','!fks_ksp_deat',SIK.OKRES().NR,SIK.OKRES().NR);
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\wartosc_mlgr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [1030] 24.08.2008 Maclex
:: OPIS: Wyliczenie wartosci na podstawie struktur budzetowych ML_OBRTR
::   WE: _a - number, numer okresu poczatkowego, w ramach wybranego roku bilansowego
::       _b - number, numer okresu końcowego, w ramach wybranego roku bilansowego
::   WY:
:: HIST:
::  OLD: \wartosc_mlgr/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
_maska2:={? SIK.P8<>'' || exec('repl_substr','#string',SIK.P8,'?','_') || '' ?};
SIK.WN+=BF.MLGR_Obr(MLEX_OKN.BUD_PATH,'Wn',SIK.WALUTA().KOD,MLEX_OKN.TYP,_a,_b,MLEX_OKN.MLGR_REF,MLEX_OKN.MLGR_POZ,_maska2);
SIK.MA+=BF.MLGR_Obr(MLEX_OKN.BUD_PATH,'Ma',SIK.WALUTA().KOD,MLEX_OKN.TYP,_a,_b,MLEX_OKN.MLGR_REF,MLEX_OKN.MLGR_POZ,_maska2)


\ml_rbwnal_zob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [1030] 20.08.2008 MacLex
:: OPIS: Wyliczenie wartosci zobowiazan/naleznosci wymagalnych na koniec okresu
::   WE:
::   WY:
:: HIST:
::  OLD: \ml_rbwnal_zob/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',9))=''
|| BF.set_odd(OPERATOR.DEPT);
   exec('wart_roz','!fks_ksp_deat',SIK.OKRES().KON,0,exec('pocz_rok','ml_spra',SIK.OKRES().ROK().NAZ));
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu '+_e,t_echo);
   0
?}


\ml_rbnnal_zob_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [1030] 20.08.2008 MacLex
:: OPIS: Wyliczenie wartosci zobowiazan/naleznosci niewymagalnych na koniec okresu - saldo rozzwarte
::   WE:
::   WY:
:: HIST:
::  OLD: \ml_rbnnal_zob_r/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',9))=''
|| BF.set_odd(OPERATOR.DEPT);
   exec('wart_roz','!fks_ksp_deat',SIK.OKRES().KON,0,exec('pocz_rok','ml_spra',SIK.OKRES().ROK().NAZ),'N','N');
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu '+_e,t_echo);
   0
?}


\ml_rb_nal_zob_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WS [2011]
:: OPIS: Wyliczenie wartosci zobowiazan/naleznosci wszystkich na koniec okresu - saldo rozzwarte
::  OLD: \ml_rb_nal_zob_r/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',9))=''
|| BF.set_odd(OPERATOR.DEPT);
   exec('wart_roz','!fks_ksp_deat',SIK.OKRES().KON,0,exec('pocz_rok','ml_spra',SIK.OKRES().ROK().NAZ),'W','N');
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu '+_e,t_echo);
   0
?}


\ml_rbwnal_zob_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [1030] 20.08.2008 MacLex
:: OPIS: Wyliczenie wartosci zobowiazan/naleznosci wymagalnych na koniec okresu - saldo rozzwarte
::   WE:
::   WY:
:: HIST:
::  OLD: \ml_rbwnal_zob_r/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',9))=''
|| BF.set_odd(OPERATOR.DEPT);
   exec('wart_roz','!fks_ksp_deat',SIK.OKRES().KON,0,exec('pocz_rok','ml_spra',SIK.OKRES().ROK().NAZ),'T','N');
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu '+_e,t_echo);
   0
?}


\ml_rbpnal_zob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [1030] 20.08.2008 MacLex
:: OPIS: Wyliczenie wartosci zobowiazan/naleznosci wymagalnych na koniec poprzedniego roku - saldo zwarte
::   WE:
::   WY:
:: HIST:  Pawelm - poprawki 2009-09-17
::  OLD: \ml_rbpnal_zob/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',9))=''
|| BF.set_odd(OPERATOR.DEPT);
   exec('wart_roz','!fks_ksp_deat',SIK.OKRES().KON,1,exec('pocz_rok','ml_spra',SIK.OKRES().ROK().NAZ));
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu '+_e,t_echo);
   0
?}


\wart_roz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [1020] 24.06.2008
:: OPIS: Wyliczenie wartosci na podstawie naleznosci/zobowiazan wg wyroznikow
::   WE: _a - data na kiedy
::       _b - czy tylko z poprzednich lat
::       _c - data poczatku roku
::       _d - czy wymagalne
::       _e - czy saldo zwarte
::   WY:
:: HIST:
::  OLD: \wart_roz/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
_czy_wym:={?var_pres('_d')<0||'T'||_d?};
_czy_zw:={?var_pres('_e')<0||'T'||_e?};
SIK.WN+=BF.RObr_pg(SIK.P1,'Wn',SIK.WALUTA().KOD,SIK.TYP,MLEX_OKN.TYP,_a,_b,_c,_czy_wym,_czy_zw);
SIK.MA+=BF.RObr_pg(SIK.P1,'Ma',SIK.WALUTA().KOD,SIK.TYP,MLEX_OKN.TYP,_a,_b,_c,_czy_wym,_czy_zw)


\ml_nal_zob_h
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WS [12.30]
:: OPIS: Wyliczenie wartosci zobowiazan/naleznosci wymagalnych na koniec okresu (hierarchie)
::   WE:
::   WY:
::  OLD: \ml_nal_zob_h/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',6))=''
|| BF.set_odd(OPERATOR.DEPT);
   exec('wart_nzh','!fks_ksp_deat',SIK.OKRES().KON,0,exec('pocz_rok','ml_spra',SIK.OKRES().ROK().NAZ));
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu '+_e,t_echo);
   0
?}


\wart_nzh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WS [12.30]
:: OPIS: Wyliczenie wartosci na podstawie naleznosci/zobowiazan z hierarchii
::   WE: _a - data na kiedy
::       _b - czy tylko z poprzednich lat
::       _c - data poczatku roku
::       _d - czy wymagalne
::       _e - czy saldo zwarte
::  OLD: \wart_nzh/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
_czy_wym:={? var_pres('_d')<0 || 'T' || _d ?};
_czy_zw:={? var_pres('_e')<0 || 'T' || _e ?};
SIK.WN+=BF.RObr_hr(SIK.P1,'Wn',SIK.WALUTA().KOD,SIK.P5,MLEX_OKN.TYP,_a,_b,_c,_czy_wym,_czy_zw);
SIK.MA+=BF.RObr_hr(SIK.P1,'Ma',SIK.WALUTA().KOD,SIK.P5,MLEX_OKN.TYP,_a,_b,_c,_czy_wym,_czy_zw)


\ml_rbnz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [1020] 16.06.2008 MacLex
:: OPIS: Wyliczenie wartosci zobowiazan/naleznosci do sprawozdan Rb-N,Z
::  OLD: \ml_rbnz/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',7))=''
|| BF.set_odd(OPERATOR.DEPT);
:  SIK.P8 - T - wymagalne, N - niewymagalne - brak lub inny znak dzialanie dotychczasowe - wszystko
   exec('wartosc_rbnz','!fks_ksp_deat',SIK.OKRES().KON,SIK.P8);
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu '+_e,t_echo);
   0
?}


\ml_rbnzr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [1122] 29-07-2011 Maclex
:: OPIS: Wyliczenie wartosci zobowiazan/naleznosci do sprawozdan Rb-N,Z rozwarte
::  OLD: \ml_rbnzr/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',7))=''
|| BF.set_odd(OPERATOR.DEPT);
:  SIK.P8 - T - wymagalne, N - niewymagalne - brak lub inny znak dzialanie dotychczasowe - wszystko
   exec('wartosc_rbnzr','!fks_ksp_deat',SIK.OKRES().KON,SIK.P8);
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu '+_e,t_echo);
   0
?}


\ml_rbrn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [1122] 02-08-2011 Maclex
:: OPIS: Wyliczenie wartosci zobowiazan/naleznosci do sprawozdan Rb-N,Z rozwarte nie rozliczone
::  OLD: \ml_rbrn/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',7))=''
|| BF.set_odd(OPERATOR.DEPT);
:  SIK.P8 - T - wymagalne, N - niewymagalne - brak lub inny znak dzialanie dotychczasowe - wszystko
   exec('wart_rbrn','!fks_ksp_deat',SIK.OKRES().KON,SIK.P8);
   BF.resetodd();
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu '+_e,t_echo);
   0
?}


\wartosc_rbnzr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [1122] 29-07-2011 Maclex
:: OPIS: Wyliczenie wartosci na podstawie naleznosci/zobowiazan wg wyroznikow rozwarte saldo
::   WE: _a - data na kiedy
::       _b - [T/N/W] - Tak - wymagalne / N - niewymagalne / W lub puste - wszystkie
::  OLD: \wartosc_rbnzr/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
SIK.WN+=BF.ROb_wroz(SIK.P1,'Wn',SIK.WALUTA().KOD,SIK.TYP,SIK.P6,SIK.P7,_a,_b);
SIK.MA+=BF.ROb_wroz(SIK.P1,'Ma',SIK.WALUTA().KOD,SIK.TYP,SIK.P6,SIK.P7,_a,_b)


\wart_rbrn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Pawelm [1122] 02-08-2011 Maclex
:: OPIS: Wyliczenie wartosci na podstawie naleznosci/zobowiazan wg wyroznikow nierozliczone rozwarte
::   WE: _a - data na kiedy
::       _b - [T/N/W] - Tak - wymagalne / N - niewymagalne / W lub puste - wszystkie
::  OLD: \wart_rbrn/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
SIK.WN+=BF.ROb_wron(SIK.P1,'Wn',SIK.WALUTA().KOD,SIK.TYP,SIK.P6,SIK.P7,_a,_b);
SIK.MA+=BF.ROb_wron(SIK.P1,'Ma',SIK.WALUTA().KOD,SIK.TYP,SIK.P6,SIK.P7,_a,_b)


\wartosc_rbnz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK [1020] 24.06.2008
:: OPIS: Wyliczenie wartosci na podstawie naleznosci/zobowiazan wg wyroznikow
::   WE: _a - data na kiedy
::       _b - [T/N/W] - Tak - wymagalne / N - niewymagalne / W lub puste - wszystkie
::  OLD: \wartosc_rbnz/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=2 || {? type_of(_b)<>2 || _b:='' ?} || _b:='' ?};
SIK.WN+=BF.RObr_wyr(SIK.P1,'Wn',SIK.WALUTA().KOD,SIK.TYP,SIK.P6,SIK.P7,_a,_b);
SIK.MA+=BF.RObr_wyr(SIK.P1,'Ma',SIK.WALUTA().KOD,SIK.TYP,SIK.P6,SIK.P7,_a,_b)


\persaldo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza persaldo (SALDO "ZWARTE") na koniec okresu ustawionego
::       w zmiennej SIK.OKRES (OKRO_F.ref) i na podstawie zawartosci zmiennych:
::       SIK.P1 - maska konta; SIK.P2 - strona (Wn/Ma); SIK.P3 - skrot jednostki ksiegowej
::       SIK.P4 - symbol waluty obcej
::       SIK.P5 - nazwa slownika wyroznikow; SIK.P6 - kod wyroznika
::  OLD: \persaldo/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',1))=''
|| F.set_odd(OPERATOR.DEPT);
   exec('wartosc','!fks_ksp_deat',0,SIK.OKRES().NR);
   {? SIK.STRONA='Wn'
   || F.SWn(SIK.WN,SIK.MA)
   || F.SMa(SIK.WN,SIK.MA)
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu '+_e,t_echo);
   0
?}


\saldo2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza saldo (SALDO "ROZWARTE") na koniec okresu ustawionego
::       w zmiennej SIK.OKRES (OKRO_F.ref) i na podstawie zawartosci zmiennych:
::       SIK.P1 - maska konta; SIK.P2 - strona (Wn/Ma); SIK.P3 - skrot jednostki ksiegowej
::       SIK.P4 - symbol waluty obcej
::       SIK.P5 - nazwa slownika wyroznikow; SIK.P6 - kod wyroznika
::  OLD: \saldo2/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',1))=''
|| F.set_odd(OPERATOR.DEPT);
   {? SIK.STRONA='Wn'
   || F.WP2('Wn',SIK.KONTO,SIK.OKRES().NR,SIK.NR_SL,SIK.KOD_WYR)
   || F.WP2('Ma',SIK.KONTO,SIK.OKRES().NR,SIK.NR_SL,SIK.KOD_WYR)
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\roznica
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza roznice obrotow narastajaco na koniec okresu ustawionego
::       w zmiennej SIK.OKRES (OKRO_F.ref) i na podstawie zawartosci zmiennych:
::       SIK.P1 - maska konta; SIK.P2 - strona (Wn/Ma); SIK.P3 - skrot jednostki ksiegowej
::       SIK.P4 - symbol waluty obcej
::       SIK.P5 - nazwa slownika wyroznikow; SIK.P6 - kod wyroznika
::  OLD: \roznica/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',1))=''
|| F.set_odd(OPERATOR.DEPT);
   exec('wartosc','!fks_ksp_deat',0,SIK.OKRES().NR);
   {? SIK.STRONA='Wn'
   || SIK.WN-SIK.MA
   || SIK.MA-SIK.WN
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\roznicao
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza roznice obrotow okresu ustawionego
::       w zmiennej SIK.OKRES (OKRO_F.ref) i na podstawie zawartosci zmiennych:
::       SIK.P1 - maska konta; SIK.P2 - strona (Wn/Ma); SIK.P3 - skrot jednostki ksiegowej
::       SIK.P4 - symbol waluty obcej
::       SIK.P5 - nazwa slownika wyroznikow; SIK.P6 - kod wyroznika
::  OLD: \roznicao/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',1))=''
|| F.set_odd(OPERATOR.DEPT);
   exec('wartosc','!fks_ksp_deat',SIK.OKRES().NR,SIK.OKRES().NR);
   {? SIK.STRONA='Wn'
   || SIK.WN-SIK.MA
   || SIK.MA-SIK.WN
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\obroty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza obroty narastajaco na koniec okresu ustawionego
::       w zmiennej SIK.OKRES (OKRO_F.ref) i na podstawie zawartosci zmiennych:
::       SIK.P1 - maska konta; SIK.P2 - strona (Wn/Ma); SIK.P3 - skrot jednostki ksiegowej
::       SIK.P4 - symbol waluty obcej
::       SIK.P5 - nazwa slownika wyroznikow; SIK.P6 - kod wyroznika
::  OLD: \obroty/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',1))=''
|| F.set_odd(OPERATOR.DEPT);
   exec('wartosc','!fks_ksp_deat',0,SIK.OKRES().NR);
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\obroty_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza obroty narastajaco bez BO na koniec okresu ustawionego
::       w zmiennej SIK.OKRES (OKRO_F.ref) i na podstawie zawartosci zmiennych:
::       SIK.P1 - maska konta; SIK.P2 - strona (Wn/Ma); SIK.P3 - skrot jednostki ksiegowej
::       SIK.P4 - symbol waluty obcej
::       SIK.P5 - nazwa slownika wyroznikow; SIK.P6 - kod wyroznika
::  OLD: \obroty_b/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',1))=''
|| F.set_odd(OPERATOR.DEPT);
   {? SIK.OKRES().NR>0
   || exec('wartosc','!fks_ksp_deat',1,SIK.OKRES().NR)
   ?};
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\obroty_o
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza obroty okresu ustawionego
::       w zmiennej SIK.OKRES (OKRO_F.ref) i na podstawie zawartosci zmiennych:
::       SIK.P1 - maska konta; SIK.P2 - strona (Wn/Ma); SIK.P3 - skrot jednostki ksiegowej
::       SIK.P4 - symbol waluty obcej
::       SIK.P5 - nazwa slownika wyroznikow; SIK.P6 - kod wyroznika
::  OLD: \obroty_o/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',1))=''
|| F.set_odd(OPERATOR.DEPT);
   exec('wartosc','!fks_ksp_deat',SIK.OKRES().NR,SIK.OKRES().NR);
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\bo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza bilans otwarcia (SALDO "ZWARTE") z okresu nr 0
::       na podstawie zawartosci zmiennych:
::       SIK.P1 - maska konta; SIK.P2 - strona (Wn/Ma); SIK.P3 - skrot jednostki ksiegowej
::       SIK.P4 - symbol waluty obcej
::       SIK.P5 - nazwa slownika wyroznikow; SIK.P6 - kod wyroznika
::  OLD: \bo/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',1))=''
|| F.set_odd(OPERATOR.DEPT);
   exec('wartosc','!fks_ksp_deat',0,0);
   {? SIK.STRONA='Wn'
   || F.SWn(SIK.WN,SIK.MA)
   || F.SMa(SIK.WN,SIK.MA)
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\bo2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza bilans otwarcia (SALDO "ROZWARTE") z okresu nr 0
::       na podstawie zawartosci zmiennych:
::       SIK.P1 - maska konta; SIK.P2 - strona (Wn/Ma); SIK.P3 - skrot jednostki ksiegowej
::       SIK.P4 - symbol waluty obcej
::       SIK.P5 - nazwa slownika wyroznikow; SIK.P6 - kod wyroznika
::  OLD: \bo2/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',1))=''
|| F.set_odd(OPERATOR.DEPT);
   {? SIK.STRONA='Wn'
   || F.WP2('Wn',SIK.KONTO,0,SIK.NR_SL,SIK.KOD_WYR)
   || F.WP2('Ma',SIK.KONTO,0,SIK.NR_SL,SIK.KOD_WYR)
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\saldo1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza saldo bez obrotow w rejestrze ~BZ na koniec okresu ustawionego
::       w zmiennej SIK.OKRES (OKRO_F.ref) i na podstawie zawartosci zmiennych:
::       SIK.P1 - maska konta; SIK.P2 - strona (Wn/Ma); SIK.P3 - skrot jednostki ksiegowej
::       SIK.P4 - symbol waluty obcej
::       SIK.P5 - nazwa slownika wyroznikow; SIK.P6 - kod wyroznika
::  OLD: \saldo1/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',1))=''
|| F.set_odd(OPERATOR.DEPT);
   exec('wartosc','!fks_ksp_deat',0,SIK.OKRES().NR);
   exec('wart_bz','!fks_ksp_deat',0,SIK.OKRES().NR,'~BZ');
   {? SIK.STRONA='Wn'
   || F.SWn(SIK.WN,SIK.MA)
   || F.SMa(SIK.WN,SIK.MA)
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\roznica1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza roznice obrotow narastajaco bez obrotow w rejestrze ~BZ
::       na koniec okresu ustawionego w zmiennej SIK.OKRES (OKRO_F.ref)
::       i na podstawie zawartosci zmiennych:
::       SIK.P1 - maska konta; SIK.P2 - strona (Wn/Ma); SIK.P3 - skrot jednostki ksiegowej
::       SIK.P4 - symbol waluty obcej
::       SIK.P5 - nazwa slownika wyroznikow; SIK.P6 - kod wyroznika
::  OLD: \roznica1/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',1))=''
|| F.set_odd(OPERATOR.DEPT);
   exec('wartosc','!fks_ksp_deat',0,SIK.OKRES().NR);
   exec('wart_bz','!fks_ksp_deat',0,SIK.OKRES().NR,'~BZ');
   {? SIK.STRONA='Wn'
   || SIK.WN-SIK.MA
   || SIK.MA-SIK.WN
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\roznico1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza roznice obrotow bez obrotow w rejestrze ~BZ
::       w okresie ustawionym w zmiennej SIK.OKRES (OKRO_F.ref)
::       i na podstawie zawartosci zmiennych:
::       SIK.P1 - maska konta; SIK.P2 - strona (Wn/Ma); SIK.P3 - skrot jednostki ksiegowej
::       SIK.P4 - symbol waluty obcej
::       SIK.P5 - nazwa slownika wyroznikow; SIK.P6 - kod wyroznika
::  OLD: \roznico1/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',1))=''
|| F.set_odd(OPERATOR.DEPT);
   exec('wartosc','!fks_ksp_deat',SIK.OKRES().NR,SIK.OKRES().NR);
   exec('wart_bz','!fks_ksp_deat',SIK.OKRES().NR,SIK.OKRES().NR,'~BZ');
   {? SIK.STRONA='Wn'
   || SIK.WN-SIK.MA
   || SIK.MA-SIK.WN
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\obroty1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza narastajaco obroty bez obrotow w rejestrze ~BZ
::       na koniec okresu ustawionego w zmiennej SIK.OKRES (OKRO_F.ref)
::       i na podstawie zawartosci zmiennych:
::       SIK.P1 - maska konta; SIK.P2 - strona (Wn/Ma); SIK.P3 - skrot jednostki ksiegowej
::       SIK.P4 - symbol waluty obcej
::       SIK.P5 - nazwa slownika wyroznikow; SIK.P6 - kod wyroznika
::  OLD: \obroty1/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',1))=''
|| F.set_odd(OPERATOR.DEPT);
   exec('wartosc','!fks_ksp_deat',0,SIK.OKRES().NR);
   exec('wart_bz','!fks_ksp_deat',0,SIK.OKRES().NR,'~BZ');
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\obrot_o1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza obroty bez obrotow w rejestrze ~BZ
::       w okresie ustawionym w zmiennej SIK.OKRES (OKRO_F.ref)
::       i na podstawie zawartosci zmiennych:
::       SIK.P1 - maska konta; SIK.P2 - strona (Wn/Ma); SIK.P3 - skrot jednostki ksiegowej
::       SIK.P4 - symbol waluty obcej
::       SIK.P5 - nazwa slownika wyroznikow; SIK.P6 - kod wyroznika
::  OLD: \obrot_o1/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',1))=''
|| F.set_odd(OPERATOR.DEPT);
   exec('wartosc','!fks_ksp_deat',SIK.OKRES().NR,SIK.OKRES().NR);
   exec('wart_bz','!fks_ksp_deat',SIK.OKRES().NR,SIK.OKRES().NR,'~BZ');
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\dl_nalez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza saldo naleznosci dlugoterminowych  (z terminem
::       dluzszym niz rok) na koniec okresu ustawionego w SSTALE.AO
::       i na podstawie zawartosci zmiennych:
::       SIK.P1 - skrot jednostki ksiegowej;  SIK.P2 - symbol waluty obcej
::  OLD: \dl_nalez/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_e:=exec('parametr','!fks_ksp_deat',2))=''
|| F.set_odd(OPERATOR.DEPT);
   exec('d_nalzob','!fks_ksp_deat','N',SSTALE.AO().KON)
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\dl_zobow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza saldo zobowiazan dlugoterminowych  (z terminem dluzszym niz rok) na koniec
::       okresu ustawionego w SSTALE.AO i na podstawie zawartosci zmiennych:
::       SIK.P1 - skrot jednostki ksiegowej;  SIK.P2 - symbol waluty obcej
::  OLD: \dl_zobow/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_e:=exec('parametr','!fks_ksp_deat',2))=''
|| F.set_odd(OPERATOR.DEPT);
   exec('d_nalzob','!fks_ksp_deat','Z',SSTALE.AO().KON)
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\d_nalzob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS, AK
:: OPIS: naleznosci i zobowiazania dlugoterminowe
::   WE: _a  czy Naleznosci(_a=N), czy Zobowiazania(_a=Z)
::       _b  stan na dzien
::  OLD: \d_nalzob/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
_kwota:=0;
_nz:=_a;
_stan_na:=_b;
OP.index('STAN_O');
{? OPERATOR.DEPT
|| OP.prefix(SSTALE.WAL,OPERATOR.DEPT)
|| OP.prefix(SSTALE.WAL)
?};
{? OP.first()
|| {!|?
      {? (OP.TZ-_stan_na) > 365 & OP.STAN='N'
      || {? ((1+OP.TYP)=_nz)
         || _wn:=_ma:=0;
            ZAP_OP.index('OP');
            ZAP_OP.prefix(OP.ref);
            _jest:=ZAP_OP.first;
            {! |? _jest
            |! {? ZAP_OP.DATA<=_stan_na
               || _wn+=ZAP_OP.WN;
                  _ma+=ZAP_OP.MA;
                  _jest:=ZAP_OP.next
               || _jest:=0
               ?}
            !};
            _kwota+={? _nz='Z' || F.SMa(_wn,_ma) || F.SWn(_wn,_ma) ?}
         ?}
      ?};
      OP.next()
   !}
?};
_kwota


\vat_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formula zwracajaca wartosc sprzedazy lub vatu w okresie
::  WE: _a - symbole stawek VAT
::      _b - to co ma liczyc (N - netto, V- vat, B-brutto
::  OLD: \vat_sik/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
exec('vat','!fks_ksp_deat',SIK.OKRES().NR,_a,_b,SIK.P4,SIK.P3,SIK.P1,SIK.P2)


\vatn_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formula zwracajaca wartosc sprzedazy lub vatu narastajaco od poczatku roku
::  WE: _a - symbole stawek VAT
::      _b - to co ma liczyc (N - netto, V- vat, B-brutto
::  OLD: \vatn_sik/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
exec('vatn','!fks_ksp_deat',_a,_b,SIK.P4,SIK.P3,SIK.P1,SIK.P2)


\vat1_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formula zwracajaca wartosc sprzedazy lub vatu w aktualnym okresie
::       Uwzglednia wszystkie stawki oprocz podanych w parametrze _a
::   WE: _a - symbole stawek pomijanych w obliczeniach
::       _b - to co ma liczyc (N - netto, V- vat, B-brutto
::  OLD: \vat1_sik/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
exec('vat','!fks_ksp_deat',SIK.OKRES().NR,_a,_b,SIK.P4,SIK.P3,SIK.P1,SIK.P2,1)


\vatn1_sik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formula zwracajaca wartosc sprzedazy lub vatu narastajaco od poczatku roku.
::       Uwzglednia wszystkie stawki oprocz podanych w parametrze _a
::   WE: _a - symbole stawek pomijanych w obliczeniach
::       _b - to co ma liczyc (N - netto, V- vat, B-brutto
::  OLD: \vatn1_sik/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
exec('vatn','!fks_ksp_deat',_a,_b,SIK.P4,SIK.P3,SIK.P1,SIK.P2,1)


\podatek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Formu-la zwraca stawke podatku dochodowego od osob prawnych dla
::       aktualnego roku ustawionego dla SSTALE.AO
::  OLD: \podatek/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SSTALE.AO().ROK().PD


\wynikf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS [7.20]
:: OPIS: Formula liczy wynik finansowy na podstawie sald kont
::       oznaczonych w planie kont (tabela KS) jako wynikowe.
::       Dla kont wynikowych aktywnych liczy saldo Wn, dla kont wynikowych
::       pasywnych liczy saldo Ma. Moze tez uwzgledniac saldo konta wyniku
::       finansowego. Odzial ustawiony w zmiennej OPERATOR.DEPT
::       Waluta ustawiona w zmiennej SSTALE.WAL
::   WE: _a - czy uwzgledniac konto wyniku finansowego
::       _b - maska konta wyniku finansowego
::       _c - skrot waluty obcej
::       _d - skrot jednostki ksiegowej
::   WY: liczba Zysk (wielkosc dodatnia), strata (wielkosc ujemna)
::  OLD: \wynikf/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',4))=''
|| SIK.WN:=exec('wynikf1','!fks_ksp_deat',SIK.P1,SIK.P2)
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo)
?};
SIK.WN$2


\wynikf1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JS [7.20]
:: OPIS: Formula liczy wynik finansowy na podstawie sald kont
::       oznaczonych w planie kont (tabela KS) jako wynikowe.
::       Dla kont wynikowych aktywnych liczy saldo Wn, dla kont wynikowych
::       pasywnych liczy saldo Ma. Moze tez uwzgledniac saldo konta wyniku
::       finansowego. Odzial ustawiony w zmiennej OPERATOR.DEPT
::       Waluta ustawiona w zmiennej SSTALE.WAL
::   WE: _a - czy uwzgledniac konto wyniku finansowego
::       _b - maska konta wyniku fiannsowego
::   WY: liczba Zysk (wielkosc dodatnia), strata (wielkosc ujemna)
::  OLD: \wynikf1/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
KS.index('SYM');
KS.prefix(BILANSP.AROK);
{? KS.first()
|| {! |?  {? KS.TYP='BW'
          || KS.cntx_psh();
             SIK.KONTO:=KS.SYM;
             F.Obr(SIK.KONTO,0,SSTALE.AO().NR);
             SIK.WN+=F.SWn(F.wn,F.ma);
             SIK.MA+=F.SMa(F.wn,F.ma);
             KS.cntx_pop()
          ?};
          KS.next()
    !}
?};
{? _=2 & type_of(_a)=2 & type_of(_b)=2
|| {? _a='Tak'
   || SIK.KONTO:=_b;
      F.Obr(SIK.KONTO,0,SSTALE.AO().NR);
      SIK.WN+=F.SWn(F.wn,F.ma);
      SIK.MA+=F.SMa(F.wn,F.ma)
   ?}
?};
SIK.MA-SIK.WN


\wartosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza obroty w podanym zakresie okresow
::   WE: _a - od okresu
::       _b - do okresu
::  OLD: \wartosc/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
{? SIK.NR_SL<>null
|| F.WObr(SIK.KONTO,_a,_b,SIK.NR_SL,SIK.KOD_WYR);
   SIK.WN+=F.wn;
   SIK.MA+=F.ma
|| F.Obr(SIK.KONTO,_a,_b);
   SIK.WN+=F.wn;
   SIK.MA+=F.ma
?}


\wart_bz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Funkcja oblicza obroty dokumentow w podanym zakresie okresow
::       i we wskazanych rejestrach
::   WE: _a - od okresu
::       _b - do okresu
::       _c - symbol rejestrów
::  OLD: \wart_bz/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
F.WDOrej(SIK.KONTO,_a,_b,_c,SIK.NR_SL,SIK.KOD_WYR);
SIK.WN-=F.DWObr();
SIK.MA-=F.DMObr()


\parametr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [?????]
:: OPIS: Ustawienie pol zmiennej SIK na potrzeby funkcji obliczajcych
::   WE: _a - wariant parametrow
::  OLD: \parametr/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| '--- obroty i salda ---- ';
   _e:='';
   SIK.P2:=~-SIK.P2;
   {? SIK.P2<>'' & (SIK.P1<>'' | SIK.P5<>'')
   || SIK.KONTO:=SIK.P1;
      {? SIK.P3<>''
      || ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
         {? ODD.find_key(SIK.P3)
         || SIK.ODDZIAL:=ODD.ref
         || _e:='(niewłaściwy symbol jednostki księgowej)'
         ?}
       || SIK.ODDZIAL:=null
       ?};
       {? 'waluta'; _e='' & SIK.P4<>''
       || SLO.index('SL');
          SLO.prefix(FINFO.SLWAL().SLU);
          {? SLO.find_key(SIK.P4)
          || SIK.WALUTA:=SLO.ref
          || _e:='(niewłaściwy symbol waluty)'
          ?}
       || SIK.WALUTA:=FINFO.NAROD
       ?};
       {? _e='' & (1+SIK.P2)='W'
       || SIK.STRONA:='Wn';1
       |? _e='' & (1+SIK.P2)='M'
       || SIK.STRONA:='Ma';1
       || _e:='(niewłaściwy symbol strony konta)'
       ?};
       {? SIK.P5<>''
       || SLUAPPL.cntx_psh();
          SLUAPPL.index('NAZ');
          SLUAPPL.prefix('F');
          SIK.NR_SL:={? SLUAPPL.find_key(SIK.P5) & SLUAPPL.SLU().NAZ=SIK.P5
                     || SLUAPPL.ref()
                     || _e:='(niewłaściwy słownik wyróżników)';null
                     ?};
          SLUAPPL.cntx_pop()
       || SIK.NR_SL:=null
       ?};
       {? SIK.P6<>''
       || SIK.KOD_WYR:=SIK.P6
       || SIK.KOD_WYR:=''
       ?}
    || _e:='(niewłaściwe parametry konta)'
    ?};
    {? _e='' || exec('stale','!fks_ksp_deat') ?};
    _e
|? _a=2
|| '--- należności i zobowiązania długoterminowe ---- ';
   _e:='';
   {? SIK.P1<>''
   || ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
      {? ODD.find_key(SIK.P1)
      || SIK.ODDZIAL:=ODD.ref
      || _e:='(niewłaściwy symbol jednostki księgowej)'
      ?}
   || SIK.ODDZIAL:=null
   ?};
   {? 'waluta'; _e='' & SIK.P2<>''
   || SLO.index('SL');
      SLO.prefix(FINFO.SLWAL().SLU);
      {? SLO.find_key(SIK.P2)
      || SIK.WALUTA:=SLO.ref
      || _e:='(niewłaściwy symbol waluty)'
      ?}
   || SIK.WALUTA:=FINFO.NAROD
   ?};
   {? _e='' || exec('stale','!fks_ksp_deat') ?};
   _e
|? _a=4
|| '--- wynik finansowy ---- ';
   _e:='';
   {? 'waluta'; SIK.P3<>''
   || SLO.index('SL');
      SLO.prefix(FINFO.SLWAL().SLU);
      {? SLO.find_key(SIK.P3)
      || SIK.WALUTA:=SLO.ref
      || _e:='(niewłaściwy symbol waluty)'
      ?}
   || SIK.WALUTA:=FINFO.NAROD
   ?};
   {? _e='' & SIK.P4<>''
   || ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
      {? ODD.find_key(SIK.P4)
      || SIK.ODDZIAL:=ODD.ref
      || _e:='(niewłaściwy symbol jednostki księgowej)'
      ?}
   || SIK.ODDZIAL:=null
   ?};
   {? _e='' || exec('stale','!fks_ksp_deat') ?};
   _e
|? _a=5
|| '--- slada i obroty rozrachunkow po terminie ---- ';
   _e:='';
   SIK.P2:=~-SIK.P2;
   {? _e='' & (1+SIK.P2)='W'
   || SIK.STRONA:='Wn';1
   |? _e='' & (1+SIK.P2)='M'
   || SIK.STRONA:='Ma';1
   || _e:='(niewłaściwy symbol strony konta)'
   ?};
   SIK.KONTO:=SIK.P1;
   {? _e='' & SIK.P3<>''
   || ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
      {? ODD.find_key(SIK.P3)
      || SIK.ODDZIAL:=ODD.ref
      || _e:='(niewłaściwy symbol jednostki księgowej)'
      ?}
   || SIK.ODDZIAL:=null
   ?};
   {? 'waluta'; _e='' & SIK.P4<>''
   || SLO.index('SL');
      SLO.prefix(FINFO.SLWAL().SLU);
      {? SLO.find_key(SIK.P4)
      || SIK.WALUTA:=SLO.ref
      || _e:='(niewłaściwy symbol waluty)'
      ?}
   || SIK.WALUTA:=FINFO.NAROD
   ?};
   SIK.TYP:=SIK.P5;
   SIK.ILE1:=#SIK.P6;
   SIK.ILE2:=#SIK.P7;
   {? _e='' || exec('stale','!fks_ksp_deat') ?};
   _e
::Poczatek modyfikacji dla Maclex Fiks 09-10-2009 AK [1120]
|? _a=6
|| '--- salda i obroty na strukturach budzetowych OBRXX ---- ';
   _e:='';
   SIK.P2:=~-SIK.P2;
   {? SIK.P2<>'' & (SIK.P1<>'' | SIK.P5<>'')
   || MLEX_OKN.BUD_PATH:=SIK.P1;
      {? 'oddział'; SIK.P3<>''
      || ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
         {? ODD.find_key(SIK.P3)
         || SIK.ODDZIAL:=ODD.ref
         || _e:='(niewłaściwy symbol oddziału)'
         ?}
      || SIK.ODDZIAL:=null
      ?};
      {? 'waluta'; _e='' & SIK.P4<>''
      || SLO.index('SL');
         SLO.prefix(FINFO.SLWAL().SLU);
         {? SLO.find_key(SIK.P4)
         || SIK.WALUTA:=SLO.ref
         || _e:='(niewłaściwy symbol waluty)'
         ?}
      || SIK.WALUTA:=FINFO.NAROD
      ?};
      {? _e='' & (1+SIK.P2)='W'
      || SIK.STRONA:='Wn';1
      |? _e='' & (1+SIK.P2)='M'
      || SIK.STRONA:='Ma';1
      || _e:='(niewłaściwy symbol strony konta)'
      ?};
      {? SIK.P5<>''
      || MLEX_OKN.TAB_BUD:=SIK.P5
      || MLEX_OKN.TAB_BUD:=''
      ?};
      {? SIK.P6<>''
      || MLEX_OKN.TYP:=SIK.P6
      || MLEX_OKN.TYP:=''
      ?}
   ?};
   {? _e='' || exec('stale','!fks_ksp_deat') ?};
   _e
|? _a=7
|| '--- salda i obroty na na rozrachunkach w wyroznikami ---- ';
   _e:='';
   SIK.P2:=~-SIK.P2;
   {? SIK.P2<>'' & (SIK.P1<>'' | SIK.P6<>'')
   || SIK.KONTO:=SIK.P1;
      {? SIK.P3<>''
      || ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
         {? ODD.find_key(SIK.P3)
         || SIK.ODDZIAL:=ODD.ref
         || _e:='(niewłaściwy symbol jednostki księgowej)'
         ?}
      || SIK.ODDZIAL:=null
      ?};
      {? 'waluta'; _e='' & SIK.P4<>''
      || SLO.index('SL');
         SLO.prefix(FINFO.SLWAL().SLU);
         {? SLO.find_key(SIK.P4)
         || SIK.WALUTA:=SLO.ref
         || _e:='(niewłaściwy symbol waluty)'
         ?}
      || SIK.WALUTA:=FINFO.NAROD
      ?};
      {? _e='' & (1+SIK.P2)='W'
      || SIK.STRONA:='Wn';1
      |? _e='' & (1+SIK.P2)='M'
      || SIK.STRONA:='Ma';1
      || _e:='(niewłaściwy symbol strony konta)'
      ?};
      SIK.TYP:=SIK.P5;
      {? SIK.P6<>''
      || SLUAPPL.cntx_psh();
         SLUAPPL.index('NAZ');
         SLUAPPL.prefix('F');
         SIK.NR_SL:={? SLUAPPL.find_key(SIK.P6) & SLUAPPL.SLU().NAZ=SIK.P6
                    || SLUAPPL.ref()
                    || _e:='(niewłaściwy słownik wyróżników)';null
                    ?};
         SLUAPPL.cntx_pop()
      || SIK.NR_SL:=null
      ?};
      {? SIK.P7<>''
      || SIK.KOD_WYR:=SIK.P7
      || SIK.KOD_WYR:=''
      ?}
   || _e:='(niewłaściwe parametry konta)'
   ?};
   {? _e='' || exec('stale','!fks_ksp_deat') ?};
   _e
|? _a=8
|| '--- salda i obroty na hierarchiach slownikow ---- ';
::   msg;
   _e:='';
   SIK.P2:=~-SIK.P2;
   {? SIK.P2<>'' & (SIK.P1<>'' | SIK.P5<>'')
   || MLEX_OKN.BUD_PATH:=SIK.P1;
      {? 'oddział'; SIK.P3<>''
      || ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
         {? ODD.find_key(SIK.P3)
         || SIK.ODDZIAL:=ODD.ref
         || _e:='(niewłaściwy symbol oddziału)'
         ?}
      || SIK.ODDZIAL:=null
      ?};
      {? 'waluta'; _e='' & SIK.P4<>''
      || SLO.index('SL');
         SLO.prefix(FINFO.SLWAL().SLU);
         {? SLO.find_key(SIK.P4)
         || SIK.WALUTA:=SLO.ref
         || _e:='(niewłaściwy symbol waluty)'
         ?}
      || SIK.WALUTA:=FINFO.NAROD
      ?};
      {? _e='' & (1+SIK.P2)='W'
      || SIK.STRONA:='Wn';1
      |? _e='' & (1+SIK.P2)='M'
      || SIK.STRONA:='Ma';1
      || _e:='(niewłaściwy symbol strony konta)'
      ?};
      {? SIK.P5<>''
      || ML_GR.cntx_psh(); ML_GR.index('ML_GRAKT'); ML_GR.prefix(SSTALE.AR,'T','T',SIK.P5);

         {?ML_GR.first()|| MLEX_OKN.MLGR_REF:=$ML_GR.ref()?};
         ML_GR.cntx_pop()
      || MLEX_OKN.MLGR_REF:=''
      ?};
      {? SIK.P6<>''
      || MLEX_OKN.TYP:=SIK.P6
      || MLEX_OKN.TYP:=''
      ?};
      {? SIK.P7<>''
      || MLEX_OKN.MLGR_POZ:=#SIK.P7
      || MLEX_OKN.MLGR_POZ:=''
      ?}
   ?};
   {? _e='' || exec('stale','!fks_ksp_deat') ?};
   _e
|? _a=9
|| '--- saldo rozrachunkow przeterminowanych wg ML_POZB ---- ';
  _e:='';
  SIK.P2:=~-SIK.P2;
 {? SIK.P2<>'' & (SIK.P1<>'' | SIK.P6<>'')
 ||SIK.KONTO:=SIK.P1;
   MLEX_OKN.BUD_PATH:=SIK.P1;
   {? SIK.P3<>''
   || ODD.index('ODDZIALY'); ODD.prefix(REF.FIRMA);
      {? ODD.find_key(SIK.P3)
      || SIK.ODDZIAL:=ODD.ref
      || _e:='(niewłaściwy symbol jednostki księgowej)'
      ?}
    || SIK.ODDZIAL:=null
    ?};
    {? 'waluta'; _e='' & SIK.P4<>''
    || SLO.index('SL');
       SLO.prefix(FINFO.SLWAL().SLU);
       {? SLO.find_key(SIK.P4)
       || SIK.WALUTA:=SLO.ref
       || _e:='(niewłaściwy symbol waluty)'
       ?}
    || SIK.WALUTA:=FINFO.NAROD
    ?};
    {? _e='' & (1+SIK.P2)='W'
    || SIK.STRONA:='Wn';1
    |? _e='' & (1+SIK.P2)='M'
    || SIK.STRONA:='Ma';1
    || _e:='(niewłaściwy symbol strony konta)'
    ?};
    {? SIK.P5<>''
    || MLEX_OKN.TYP:=SIK.P5
    || MLEX_OKN.TYP:=''
    ?};
    SIK.TYP:=SIK.P6
    || _e:='(niewłaściwe parametry konta)'
    ?};
    {? _e='' || exec('stale','!fks_ksp_deat') ?};
    _e
::  Koniec modyfikacji dla Maclex Fiks
?}


\vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK
:: OPIS: Funkcja podaje wartosc netto, brutto lub VAT liczona na podstawie
::       zapytania w tabeli SIKVAT z podanego okresu
::   WE: _a - numer okresu
::       _b  stawka vat - string,          (pusty lub brak - wszystkie)
::       _c  Netto/Brutto/Vat - znak,      (pusty lub brak - V)
::       _d  jednostka ksiegowa - string (symbol),    (pusty lub brak - wszystkie)
::       _e  rejestr - string (symbol),    (pusty lub brak - wszystkie)
::       _f  klasa ewidencji - string,     (pusty lub brak - wszystkie)
::       _g  grupa podatkowa - string      (pusty lub brak - wszystkie)
::     [ _h  czy liczyc wartosci dla stawek roznych niz w parametrze _b]
::  OLD: \vat/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
_netto:=_brutto:=_vat:=0;
{? var_pres('SIKVAT')>0
|| SIKVAT.prefix(_a,_f);
   {? SIKVAT.first()
   || {!|? {? (SIKVAT.ODZ=_d | _d='') &
              ( _b='' | (_=7 & (~-SIKVAT.SVAT)*(~-_b)>0) | (_=8 & (~-_b)*(~-(2+SIKVAT.SVAT))=0)) &
              ((~- SIKVAT.REJ)*(~-_e)>0 | _e='') &
              ((~- SIKVAT.GRPOD)*(~-_g)>0 | _g='')
           || _netto+=SIKVAT.NETTO; _vat+=SIKVAT.PODAT; _brutto+=SIKVAT.PODAT+SIKVAT.NETTO
           ?};
           SIKVAT.next()
      !}
   ?}
?};
{? _c='N' || _netto |? _c='B' || _brutto || _vat ?}


\vatn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AK
:: OPIS: Funkcja podaje wartosc netto, brutto lub VAT liczona na podstawie
::       zapytania w tabeli SIKVAT - narastajaco
::   WE: _a  stawka vat - string,          (pusty lub brak - wszystkie)
::       _b  Netto/Brutto/Vat - znak,      (pusty lub brak - V)
::       _c  jednostka ksiegowa - string (symbol),    (pusty lub brak - wszystkie)
::       _d  rejestr - string (symbol),    (pusty lub brak - wszystkie)
::       _e  klasa ewidencji - string,     (pusty lub brak - wszystkie)
::       _f  grupa podatkowa - string      (pusty lub brak - wszystkie)
::     [ _g  czy liczyc wartosci dla stawek roznych niz w parametrze _a]
::  OLD: \vatn/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
_war:=0;
{? _=6
|| {! _i:=1..SIK.OKRES().NR |! _war+=exec('vat','!fks_ksp_deat',_i,_a,_b,_c,_d,_e,_f) !}
|| {! _i:=1..SIK.OKRES().NR |! _war+=exec('vat','!fks_ksp_deat',_i,_a,_b,_c,_d,_e,_f,1) !}
?};
_war


\zm_stan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Artur Makos [AMK] [7.41]
:: OPIS: Funkcja oblicza zmiane stanu -
::       (persaldo bilansu otwarcia)-(saldo bez BZ na koniec okresu obrachunkowego)
::  OLD: \zm_stan/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
exec('bo','!fks_ksp_deat')-exec('saldo1','!fks_ksp_deat')


\r_obroty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Funkcja oblicza roznice obrotow rozrachunkow dla podanych parametrow
::   WY: obliczona wartosc
::  OLD: \r_obroty/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
exec('utw_vat','!fks_ksp_deat',1)


\r_saldo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.10]
:: OPIS: Funkcja oblicza saldo roznicy obrotow rozrachunkow dla podanych parametrow
::   WY: obliczona wartosc
::  OLD: \r_saldo/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
exec('utw_vat','!fks_ksp_deat',2)


\rwart1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Funkcja pomocnicza do \r_obroty i \r_saldo
::   WE: _a - 1 - roznica obrotow, 2 - saldo
::   WY: obliczona wartosc
::  OLD: \rwart1/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
SIK.WN:=SIK.MA:=0;
{? (_e:=exec('parametr','!fks_ksp_deat',5))=''
|| F.set_odd(OPERATOR.DEPT);
   exec('utw_vat','!fks_ksp_deat',SIK.KONTO,SIK.WALUTA,SIK.TYP,SIK.ILE1,SIK.ILE2,OKRESY.OKRES_DO().KON,_a);
   {? SIK.STRONA='Wn'
   || SIK.WN
   || SIK.MA
   ?}
|| exec('tmp_uwa','!fks_ksp_deat','Błędne parametry algorytmu \n'+_e,t_echo);
   0
?}


\rwart2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Funkcja oblicza roznice obrotow badz saldo rozrachunkow na zmienne SIK.WN i SIK.MA
::   WE: _a - konto
::       _b - waluta
::       _c - typ rozrachunkow (NAL/ZOB/INN/RMK/NOD/ZOB)
::       _d - poczatek przedzialu (powyzej ilu dni po terminie)
::       _e - koniec przedzialu (ponizej ilu dni po terminie lub 0 - tzn. wszystkie
::            powyzej _d)
::       _f - data (stan na dzien)
::       _g - 1 - roznica obrotow, 2 - saldo
::  OLD: \rwart2/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
{! |?_a+1='?'|! _a:=_a-1 !};
_pref:={? _l:=_a*'?' || (_l-1)+_a || _a ?};
OP.cntx_psh();
{? OPERATOR.DEPT
|| OP.index('KON_O'); OP.prefix(_b,OPERATOR.DEPT,_pref)
|| OP.index('KON');   OP.prefix(_b,_pref)
?};
{? OP.first()
|| {!|? {? (~_l | F.spr_mask(_a,OP.AN)) &
           {? +OP.TYP=3 || OP.TYP=_c || (1+OP.TYP)=(1+_c) ?} &
           _f-OP.TZ>=_d & (_f-OP.TZ<_e | _e=0)
        || F.RObr(OP.ref,_f);
           {? F.rma$2<>F.rwn$2
           || {? _g=1
              || SIK.WN+=(F.rwn-F.rma); SIK.MA+=(F.rma-F.rwn)
              || SIK.WN+=F.SWn(F.rwn,F.rma); SIK.MA+=F.SMa(F.rwn,F.rma)
              ?}
           || 0
           ?}
        ?};
        OP.next()
   !}
?};
OP.cntx_pop()


\utw_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL [8.50]
:: OPIS: Zapytanie do obliczen funkcji aktualizujacych zw. z VAT-em
::  OLD: \utw_vat/sik_for.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('SIKVAT')>100 || obj_del(SIKVAT); &SIKVAT ?};
okres:=SIK.OKRES().NR;
rok:=OKRO_F.ROK().NAZ;
SIKVAT:=sql('select '+
   'ODD.OD as ODZ, D_OKR.NR as OKRES, KVAT.SYM as KLVAT, RVAT.SYM as REJ, SLO_GR.KOD as GRPOD,'+
   'SLO_ST.KOD as SVAT, sum(SUM2) as NETTO, sum(VAT) as PODAT '+
   'from PVAT left join SLO as SLO_GR using (PVAT.GRVAT, SLO_GR.REFERENCE) '+
   'left join SLO as SLO_ST using (PVAT.STVAT, SLO_ST.REFERENCE) '+
   'join DVAT using (PVAT.DVAT, DVAT.REFERENCE) '+
   'join ODD using (DVAT.ODD, ODD.REFERENCE) '+
   'join OKRO_F as D_OKR using (DVAT.OBR, D_OKR.REFERENCE) '+
   'join ROK_F as D_ROK using (D_OKR.ROK, D_ROK.REFERENCE) '+
   'join RVAT using (DVAT.RVAT, RVAT.REFERENCE) '+
   'join KVAT using (RVAT.KVAT, KVAT.REFERENCE) '+
   'join SLO as SLO_KR using (DVAT.KRAJ, SLO_KR.REFERENCE) '+
   'where D_ROK.NAZ='''+rok+''' AND D_OKR.NR<='+$okres+' AND SLO_KR.KOD=''PL'''+
   {? OPERATOR.DEPT=null || '' || 'AND ODD.OD='''+OPERATOR.DEPT().OD+'''' ?}+
   ' group by ODD.OD, D_OKR.NR, KVAT.SYM, RVAT.SYM, SLO_GR.KOD, SLO_ST.KOD');
_vat_ind1:=SIKVAT.ndx_tmp('',1,'OKRES',,0,'KLVAT',,0,'REJ',,0,'GRPOD',,0,'SVAT',,0);
SIKVAT.index(_vat_ind1);
:_wer:=SIKVAT.mk_sel(,'P');
:SIKVAT.win_fld(_wer,,'ODZ');
:SIKVAT.win_fld(_wer,,'OKRES');
:SIKVAT.win_fld(_wer,,'KLVAT');
:SIKVAT.win_fld(_wer,,'REJ');
:SIKVAT.win_fld(_wer,,'SVAT');
:SIKVAT.win_fld(_wer,,'NETTO',,,12,2);
:SIKVAT.win_fld(_wer,,'PODAT',,,12,2);
:SIKVAT.win_sel(_wer);
:SIKVAT.select();
&rok; &okres


\generuj_skonsolid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Dodanie wartosci jednostkowe i wyłączeniowe firmy
::   WE:  _a  - wykonanie grupy
::        _b  - grupa
::       [_c] - kod wariantu planu
::----------------------------------------------------------------------------------------------------------------------
_okresp:=OKRESY.OKRES_OD().NR;
_okresk:=OKRESY.OKRES_DO().NR;
_rf:=exec('rok_f_f','konsolidacja',OKRESY.ROK1);
OSPR.index('ROK_NAZ'); OSPR.prefix(OKRESY.ROK1().FIRMA,OKRESY.ROK1);
_ok:={? OSPR.first()
     || 1
     || exec('tmp_uwa','!fks_ksp_deat','Brak okresów raportowania dla podanego roku!');0
     ?};
{? _ok
|| {? OKRESY.CZYMC='T'
   || OSPR.prefix(REF.FIRMA,ROK_F.ref(),'M');
      {? OSPR.first()
      || {!
         |? {? OSPR.OKRES_OD().NR>=_okresp & OSPR.OKRES_DO().NR<=_okresk
            || exec('generuj_skonsolid2','!fks_ksp_deat');
               {? OKRESY.ZAMMC='T' & OSPR.ZAM='N' || OSPR.ZAM:='T'; OSPR.put() ?}
            ?};
            {? OKRESY.ZAMMC='T' & OSPR.ZAM='N' || OSPR.ZAM:='T'; OSPR.put() ?};
            OSPR.next()
         !}
      || _ok:=0
      ?}
   ?}
?};
{? _ok & (OKRESY.CZYROK='T' | OKRESY.CZYPOL='T' | OKRESY.CZYKWA='T' | OKRESY.CZYINN='T')
|| OSPR.prefix(REF.FIRMA,ROK_F.ref());
   {? OSPR.first()
   || {!
      |? {? OSPR.TYP<>'M' & OSPR.OKRES_OD().NR>=_okresp & OSPR.OKRES_DO().NR<=_okresk
         || OSPR.cntx_psh();
            {? (OKRESY.CZYROK='T' & OSPR.TYP='R') |
               (OKRESY.CZYPOL='T' & OSPR.TYP='P') |
               (OKRESY.CZYKWA='T' & OSPR.TYP='K') |
               (OKRESY.CZYINN='T' & OSPR.TYP='I')
            || exec('generuj_skonsolid2','!fks_ksp_deat');
               {? ( (OSPR.TYP='R' & OKRESY.CZYROK='T' & OKRESY.ZAMROK='T') |
                    (OSPR.TYP='P' & OKRESY.CZYPOL='T' & OKRESY.ZAMPOL='T') |
                    (OSPR.TYP='K' & OKRESY.CZYKWA='T' & OKRESY.ZAMKWA='T') |
                    (OSPR.TYP='I' & OKRESY.CZYINN='T' & OKRESY.ZAMINN='T'))
                  & OSPR.ZAM='N'
               || OSPR.ZAM:='T';
                  OSPR.put()
               ?}
            ?};
            OSPR.cntx_pop()
         ?};
         OSPR.next()
      !}
   ?}
?};
_ok


\generuj_skonsolid2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Dodanie wartosci jednostkowe i wyłączeniowe firmy
::----------------------------------------------------------------------------------------------------------------------
_ospr:=OSPR.ref();
WARTOSCI.use('wsik_'+OSPR.ROK().KOD);
OSPR.cntx_psh();
SIK.WYL:='S';
_sch:={? REF.FIRMA=REF.GRUPA || REF.W_SCH || null ?};
_wyk:=exec('wykon_firmy','konsolidacja',REF.FIRMA,_sch);
{? SIK.GR_SIK
|| exec('generuj_usun2','!fks_ksp_deat',SIK.GR_SIK,_wyk);
   exec('generuj_skonsolid1','!fks_ksp_deat',SIK.GR_SIK,_ospr,'T');
   exec('generuj_skonsolid1','!fks_ksp_deat',SIK.GR_SIK,_ospr,'W');
   OKRESY.OKR_RAP:=OSPR.ref();
   exec('akt_kol','!fks_ksp_deat')
|| GR_SIK.cntx_psh(); GR_SIK.index('SAKCEPT'); GR_SIK.prefix(REF.GRUPA,'T');
   {? GR_SIK.first()
   || {!
      |? exec('generuj_usun2','!fks_ksp_deat',GR_SIK.ref(),_wyk);
         exec('generuj_skonsolid1','!fks_ksp_deat',GR_SIK.ref(),_ospr,'T');
         exec('generuj_skonsolid1','!fks_ksp_deat',GR_SIK.ref(),_ospr,'W');
         OKRESY.OKR_RAP:=OSPR.ref();
         exec('akt_kol','!fks_ksp_deat');
         GR_SIK.next()
      !}
   ?};
   GR_SIK.cntx_pop()
?};
OSPR.cntx_pop()


\generuj_skonsolid1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Dodanie wartosci jednostkowe i wyłączeniowe firmy
::   WE: _a - sprawozdanie
::       _b - okres firmy
::       _c - typ wartosci - J-jednostkowe, W-wyłączeniowe
::----------------------------------------------------------------------------------------------------------------------
_sch:={? REF.FIRMA=REF.GRUPA || REF.W_SCH || null ?};
SIK.WYL:=_c;
_src:=exec('wykon_firmy','konsolidacja',REF.FIRMA,_sch);
SIK.WYL:='S';
_des:=exec('wykon_firmy','konsolidacja',REF.FIRMA,_sch);
_mnoznik:={? _c='W' || -1 || 1 ?};
DEFW.index('GRUPA'); DEFW.prefix(_a);
GR_KOL.index('LP2'); GR_KOL.prefix(_a,'F');
{? DEFW.first()
|| {!
   |? {? GR_KOL.first()
      || {!
         |? WARTOSCI.index('OKRES');
            WARTOSCI.prefix(_b,_src,DEFW.ref(),GR_KOL.ref(),null);
            {? WARTOSCI.first()
            || {!
               |? _w:=_mnoznik*WARTOSCI.WARTOSC;
                  WARTOSCI.cntx_psh();
                  WARTOSCI.index('OKRES');
                  WARTOSCI.prefix(_b,_des,DEFW.ref(),GR_KOL.ref(),null,WARTOSCI.ZN,WARTOSCI.KOD);
                  {? WARTOSCI.first()
                  || WARTOSCI.WARTOSC+=_w;
                     WARTOSCI.put()
                  || WARTOSCI.OKRES:=_b;
                     WARTOSCI.WERSJA:=_des;
                     WARTOSCI.ODD:=null;
                     WARTOSCI.WARTOSC:=_w;
                     WARTOSCI.prefix();
                     WARTOSCI.add()
                  ?};
                  WARTOSCI.cntx_pop();
                  WARTOSCI.next()
               !}
            ?};
            GR_KOL.next()
         !}
      ?};
      DEFW.next()
   !}
?}


\generuj_str_skons
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.42]
:: OPIS: Aktualizacja danych dla struktury grupy kapitałowej z uwzględnieniem konsolidacji
::----------------------------------------------------------------------------------------------------------------------
{? OKRESY.KONS1='T'
|| SIK.WYL:='T';
   exec('generuj_usun','!fks_ksp_deat');
   exec('generuj_str1','!fks_ksp_deat')
?};
{? OKRESY.KONS2='T'
|| SIK.WYL:='W';
   _firma:=REF.FIRMAWYL;
   FIRMA.cntx_psh();
   FIRMA.index('EWID'); FIRMA.prefix('T');
   {? FIRMA.first()
   || {!
      |? REF.FIRMAWYL:=FIRMA.ref();
         FIRMA.cntx_psh();
         exec('generuj_usun','!fks_ksp_deat');
         exec('generuj_str1','!fks_ksp_deat');
         FIRMA.cntx_pop();
         FIRMA.next()
      !}
   ?};
   REF.FIRMAWYL:=null;
   exec('generuj_usun','!fks_ksp_deat');
   exec('generuj_str1','!fks_ksp_deat');
   FIRMA.cntx_pop();
   REF.FIRMAWYL:=_firma
?};
{? OKRESY.KONS3='T'
|| exec('generuj_skonsolid','!fks_ksp_deat')
?}


\r_lock_spr_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TOCIK [21.14]
:: OPIS: Blokuje rekord tabeli pośredniej dla sprawozdania grupowego w danej firmie
::   WE: _a - firma
::       _b - sprawozdanie
::       _c - par 1. r_lock (mode)
::       _d - par 2. r_lock (no_msg)
::       [_e] - par 3. r_lock (count_no_lock)
::   WY: Czy blokada się udała
::----------------------------------------------------------------------------------------------------------------------
{? _<5 || _e:=0 ?};
GR_SIK_L.index('FIRMA');
GR_SIK_L.prefix(_a,_b);
{? ~GR_SIK_L.first()
|| GR_SIK_L.blank();
   GR_SIK_L.F_AKT:=_a;
   GR_SIK_L.GR_SIK:=_b;
   GR_SIK_L.add
?};
GR_SIK_L.r_lock(_c,_d,_e)


\r_unlock_spr_gr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TOCIK [21.14]
:: OPIS: Odblokowuje rekord tabeli pośredniej dla sprawozdania grupowego w danej firmie
::   WE: _a - firma
::       _b - sprawozdanie
::----------------------------------------------------------------------------------------------------------------------
GR_SIK_L.index('FIRMA');
GR_SIK_L.prefix(_a,_b);
GR_SIK_L.first() & GR_SIK_L.r_lock(1,1) & GR_SIK_L.del()


:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:41 454635a7c68da23a434f4022773933bece4825dd17cd8b8aada08ab0ff5b0fe1c2d3115fa69402340b32419ed431c98bb5bacf434abbe0372cbfce99785a7dbece3501f72c265287e42eabaa1fb688ab9c4bb7dc41e54eb4629612e56d128722eb18a92c5bd136fd33225a6945eac70cc18abec4dab1e7519cda2242e8bd054a
