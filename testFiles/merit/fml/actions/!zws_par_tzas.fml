:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_tzas.fml
:: Utworzony: 17.02.2015
:: Autor: TS
::======================================================================================================================
:: Zawartosc: Formuły czynności ZWS_PAR_TZAS - Zasoby produkcyjne
::            Obsługa tabel: TWRKPLC, TWRKZBR, TWRKZPO
::            Formuły użyte w innych czynnościach i bibliotekach znajdują się w pliku zasoby.fml
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Formuła główna czynności parametryzacyjnej (nieprocesowej) - zasoby produkcyjne
::  TAG: <CZYNNOŚĆ><LISTA>
::----------------------------------------------------------------------------------------------------------------------
exec('__KAL','object');

Cntx.psh(TWRKPLC,TWRKZBR,TWRKZPO,R_WZCZ);

R_WZCZ.index('R_WZWND');

TWRKPLC.win_fml('WER',REMONTY,'ZASOB',,'ICON_BEFORE',"{? REMONTY.ZASOB='T' || REMONTY.ZASOB:=''; 'xwin16.png:31' || REMONTY.ZASOB:=''; '' ?}");
TWRKPLC.win_sel('GRP');
TWRKPLC.win_edit('RED');
TWRKZBR.win_edit();

VAR.GRUPA:='N';
TWRKPLC.index('KOD');
TWRKPLC.prefix();
TWRKPLC.f_clear();
TWRKPLC.first();
TWRKZBR.index('SYM');
TWRKZBR.prefix();
TWRKZBR.first();

TWRKPLC.select();
exec('chkk_r_wzcz','!zws_par_tzas');
Cntx.pop(TWRKPLC,TWRKZBR,TWRKZPO,R_WZCZ);
TWRKPLC.f_clear();
~~


::======================================================================================================================
:: Formuły obsługi tabeli TWRKPLC (stanowiska produkcyjne)
::======================================================================================================================


\kalczesc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MKO [8.70]
:: OPIS: TWRKPLC - Formuła przed redakcją pola KAL
::   WY: 0 / 1
::  OLD: \kalczesc/wrkplc.fml
::  TAG: <MBUILDER><BE>
::----------------------------------------------------------------------------------------------------------------------
TWRKPLC.KAL().CZESC<>'T'


\twrkplc_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: TWRKPLC - Dołączanie zapisu w tabeli
::  OLD: \twrkplc_dol/slownik1.fml
::  TAG: <MBUILDER><ADD>
::----------------------------------------------------------------------------------------------------------------------
TWRKPLC.blank();
VAR.DPE:=VAR.DKE:=date(0,0,0);
{? TWRKPLC.edit("exec('twrkplc_ar','!zws_par_tzas')")
|| {? TWRKPLC.add()
   || exec('projdost','zasoby',$TWRKPLC.ref(),VAR.DPE,VAR.DKE,'D',1,1);
      exec('twrkplc_f_add','!zws_par_tzas')
   ?}
?};
~~


\twrkplc_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: TWRKPLC - Poprawianie zapisu w tabeli
::  OLD: \twrkplc_pop/slownik1.fml
::  TAG: <MBUILDER><PUT>
::----------------------------------------------------------------------------------------------------------------------
PROJDOST.index('ZRODLOZ');
PROJDOST.prefix($TWRKPLC.ref(),$TWRKPLC.ref(),'D');
{? PROJDOST.first()
|| VAR.DPE:=PROJDOST.POCZATEK; VAR.DKE:=PROJDOST.KONIEC; _add:=2
|| VAR.DPE:=date(0,0,0); VAR.DKE:=date(0,0,0); _add:=1
?};
_wyd:=TWRKPLC.WYD;
{? TWRKPLC.edit("exec('twrkplc_ar','!zws_par_tzas')")
||
   do();
   {? TWRKPLC.put()
   || exec('projdost','zasoby',$TWRKPLC.ref(),VAR.DPE,VAR.DKE,'D',1,_add);
      exec('twrkplc_pop','zasoby');
::    Pętla po ZGP dla danego stanowiska - aktualizacja wydziału w PROD_REJ
::    Wyzwolenie trigera exec('update_4rej','zl_wyk') dla każdego ZGP
      {? TWRKPLC.WYD<>_wyd
      || ZGP.index('OPD');
         ZGP.prefix(TWRKPLC.ref());
         {? ZGP.first()
         || FUN.prg_start(ZGP.size(),'Aktualizacja zapisów do rejestracji wykonań.'@,,,1);
            {!
            |? FUN.prg_next();
               ZGP.put();
               ZGP.next()
            !};
            FUN.prg_stop()
         ?}
      ?}
   ?};
   end();
   ~~
?};
~~


\twrkplc_f_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2006]
:: OPIS: TWRKPLC - Dodanie rekordu do filtra
::  OLD: \twrkplc_f_add/slownik1.fml
::----------------------------------------------------------------------------------------------------------------------
{? TWRKPLC.f_active()>0 || TWRKPLC.f_add(); TWRKPLC.f_rfresh() ?};
~~


\twrkplc_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: TWRKPLC - Usuwanie zapisu z tabeli
::  OLD: \twrkplc_usu/slownik1.fml
::  TAG: <MBUILDER><DEL>
::----------------------------------------------------------------------------------------------------------------------
{? exec('f_zsb_stan','zasoby')
|| FUN.info('Nie można usunąć stanowiska.'@+'\n\n'+'Stanowisko jest zdefiniowane jako zasób.'@)
|? exec('twrk_usu_chk','!zws_par_tzas',TWRKPLC)=0
|| FUN.info('Nie można usunąć stanowiska.'@+'\n\n'+'Stanowisko jest powiązane z danymi.'@)
|| {? FUN.ask('Czy usunąć wskazane stanowisko?'@)
   || do();
      {? exec('projdost_del','zasoby',$TWRKPLC.ref())
      || exec('usun_all','kaledit',TWRKPLC);
         TWRKPLC.del()
      ?};
      end()
   ?}
?};
~~


\twrk_usu_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Sprawdzenie, czy można usunąć zasób (TWRKPLC, TWRKZBR) - nie ma innych powiązań niż R_WZCZ
::   WE: _a - alias do tabeli zasobów
::   WY: 0 / 1 (nie można / można usunąć)
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a.testlink(2);
_tab.prefix('R_WZCZ');
{? _tab.first() || _tab.del() ?};
_tab.prefix('TWRKZPO');
{? _tab.first() || _tab.del() ?};
_tab.prefix();
~_tab.first()


\leg_stan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009]
:: OPIS: TWRKPLC - Legenda dla ikon w oknie wertowania stanowisk produkcyjnych
::  OLD: \leg_stan/skid_rem.fml
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
exec('legenda','color','TWRKPLC#01')


\prn_wrkpl
::----------------------------------------------------------------------------------------------------------------------
:: OPIS: TWRKPLC - wydruk słownika stanowisk pracy
::  OLD: \prn_wrkpl/drukujp.fml
::  TAG: <MBUILDER><REPORT>
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','ZWS_PAR_TZAS','tte_drukwrk*',,1);
~~


\twrkplbr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009]
:: OPIS: TWRKPLC - Formula na rekord przed w tabeli - okno wertowania WER
::  OLD: \twrkplbr/skid_rem.fml
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
{? exec('f_zsb_stan','zasoby')
|| REMONTY.ZASOB:='T';
   TWRKPLC.actions_grayed('WER','')
|| REMONTY.ZASOB:='N';
   TWRKPLC.actions_grayed('WER','R')
?}


\twrkplc_disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2011]
:: OPIS: TWRKPLC - Wyświetlenie zapisu z tabeli
::  OLD: \twrkplc_disp/slownik1.fml
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
PROJDOST.index('ZRODLOZ');
PROJDOST.prefix($TWRKPLC.ref(),$TWRKPLC.ref(),'D');
{? PROJDOST.first()
|| VAR.DPE:=PROJDOST.POCZATEK; VAR.DKE:=PROJDOST.KONIEC
|| VAR.DPE:=date(0,0,0); VAR.DKE:=date(0,0,0)
?};
TWRKPLC.display();
~~


\twrkplc_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2008]
:: OPIS: TWRKPLC - 'Po rekord' w oknie wertowania tabeli
::  OLD: \twrkplc_ar/slownik1.fml
::  TAG: <MBUILDER><CHK>
::----------------------------------------------------------------------------------------------------------------------
exec('chk_twrkplc','zasoby',-menu_txt()='popraw')


\twrkplc_trigger_ap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [12.30]
:: OPIS: Aktualizuje pola w tabeli TWRKZPO po aktualizacji rekordu TWRKPLC
::       Trigger po put()
::  OLD: \zpo_update/wrkplc.fml
::       \TWRKPLC/trigger.fml
::  TAG: <MBUILDER><TRIGGER>
::----------------------------------------------------------------------------------------------------------------------
_bef_kod:=bfld('KOD');
_bef_naz:=bfld('NA');
_bef_wyd:=bfld('WYD');

{? _bef_kod<>TWRKPLC.KOD | _bef_naz<>TWRKPLC.NA | _bef_wyd<>TWRKPLC.WYD
|| SLO.cntx_psh();
   TWRKPLC.cntx_psh();
   TWRKZPO.cntx_psh();
   TWRKZPO.index('ELEMENTG');

   TWRKZPO.prefix(TWRKPLC.ref());
   {? TWRKZPO.first()
   || {!
      |? TWRKZPO.KOD_:=TWRKPLC.KOD;
         TWRKZPO.NAZ_:=TWRKPLC.NA;
         TWRKZPO.WYD_:=TWRKPLC.WYD().KOD;
         _can_continue:=TWRKZPO.put();
         TWRKZPO.next() & _can_continue>0
      !}
   ?};
   TWRKPLC.cntx_pop();
   TWRKZPO.cntx_pop();
   SLO.cntx_pop();
   ~~
?};

:: Aktualizacja zasobu w planie operacyjnym
exec('plres_update','po_plan',$TWRKPLC.ref());
~~


\twrkplc_after_refresh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Formuła after_refresh w oknie grupowym zasobów (dla tebeli TWRKPLC)
::----------------------------------------------------------------------------------------------------------------------
grp_disp(R_WZCZ,'ZAS')


\twrkplc_rwzcz_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Formuła przed obsługą w oknie grupowym dla (zakładka R_WZCZ dla TWRKPLC)
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(TWRKPLC,'WER')
|| '#disable'
|| R_WZCZ.prefix(TWRKPLC.name(),TWRKPLC.ref(),'N','N');
   {? ~R_WZCZ.size()
   || exec('dod_kal_czesc','kaledit',TWRKPLC)
   ?};
   R_WZCZ.win_edit('KAL');
   {? _a
   || exec('r_wzcz_fld_fml','kaledit',TWRKPLC);
      __KAL.set_cal(TWRKPLC.KAL)
   ?};
   ~~
?}


\twrkplc_rwzcz_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Formuła po obsłudze w oknie grupowym dla (zakładka R_WZCZ dla TWRKPLC)
::----------------------------------------------------------------------------------------------------------------------
exec('r_wzcz_fld_fml','kaledit')


::======================================================================================================================
:: Formuły obsługi tabeli TWRKZBR (gniazda produkcyjne)
::======================================================================================================================


\twrkzbr_trig_pa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [17.00]
:: OPIS: Trigger tabeli TWRKZBR (po put)
::   WY: 0/1
::  TAG: <MBUILDER>
::----------------------------------------------------------------------------------------------------------------------
exec('plres_update','po_plan',$TWRKZBR.ref())


\twrkzbwy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: TWRKZBR - Przed redakcją pola wydział dla gniazd - możliwe jeżeli stanowiska składowe nie mają wydziałów
::  OLD: \twrkzbwy/wrkplc.fml
::  TAG: <MBUILDER><BE>
::----------------------------------------------------------------------------------------------------------------------
{? -menu_txt()='dołącz' || return(1) ?};
TWRKZPO.cntx_psh();
TWRKZPO.index('GRUPA');
TWRKZPO.prefix(TWRKZBR.ref());
_wyn:=1;
{? TWRKZPO.first()
|| {!
   |? {? TWRKZPO.ELEMENT().WYD<>null() || _wyn:=0 ?};
      TWRKZPO.next()
   !}
?};
TWRKZPO.cntx_pop();
_wyn


\kalczesc_zbr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2011]
:: OPIS: TWRKZBR - Przed wyświetl, redaguj pola KAL
::   WY: 0 / 1
::  OLD: \kalczesc_zbr/wrkplc.fml
::  TAG: <MBUILDER><BD><BE>
::----------------------------------------------------------------------------------------------------------------------
TWRKZBR.KAL().CZESC<>'T'


\twzbr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: TWRKZBR - Akcja po dołącz, popraw
::  OLD: \twzbr/wrkplc.fml
::  TAG: <MBUILDER><ADD><PUT>
::----------------------------------------------------------------------------------------------------------------------
TWRKZBR.f_rfresh();
1


\twrkzbch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: TWRKZBR - Akcja po rekord po dla grup
::  OLD: \twrkzbch/wrkplc.fml
::  TAG: <MBUILDER><CHK>
::----------------------------------------------------------------------------------------------------------------------
exec('chk_twrkzbr','zasoby',-menu_txt()='popraw')


\get_twrkzbr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [2010]
:: OPIS: TWRKZBR - Zwraca ref
::   WY: TWRKZBR.ref()
::  OLD: \get_twrkzbr/wrkplc.fml
::----------------------------------------------------------------------------------------------------------------------
TWRKZBR.ref()


\twrkzbr_after_refresh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Formuła after_refresh w oknie grupowym zasobów (dla tebeli TWRKZBR)
::----------------------------------------------------------------------------------------------------------------------
grp_disp(R_WZCZ,'ZAS')


\twrkzbr_rwzcz_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Formuła przed obsługą w oknie grupowym dla (zakładka R_WZCZ dla TWRKZBR)
::----------------------------------------------------------------------------------------------------------------------
{? grp_empty(TWRKZBR,'WER')
|| '#disable'
|| R_WZCZ.prefix(TWRKZBR.name(),TWRKZBR.ref(),'N','N');
   {? ~R_WZCZ.size()
   || exec('dod_kal_czesc','kaledit',TWRKZBR)
   ?};
   R_WZCZ.win_edit('KAL');
   {? _a
   || exec('r_wzcz_fld_fml','kaledit',TWRKZBR);
      __KAL.set_cal(TWRKZBR.KAL)
   ?};
   ~~
?}


\twrkzbr_rwzcz_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: Formuła po obsłudze w oknie grupowym dla (zakładka R_WZCZ dla TWRKZBR)
::----------------------------------------------------------------------------------------------------------------------
exec('r_wzcz_fld_fml','kaledit')


\twrkzbr_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.00]
:: OPIS: TWRKZBR - Usuwanie zapisu z tabeli
::----------------------------------------------------------------------------------------------------------------------
{? exec('twrk_usu_chk','!zws_par_tzas',TWRKZBR)=0
|| FUN.info('Nie można usunąć gniazda.'@+'\n\n'+'Gniazdo jest powiązane z danymi.'@)
|| {? FUN.ask('Czy usunąć wskazane gniazdo?'@)
   || do();
      exec('usun_all','kaledit',TWRKZBR);
      TWRKZPO.cntx_psh();
      TWRKZPO.index('GRUPA');
      TWRKZPO.prefix(TWRKZBR.ref());
      {? TWRKZPO.first() || {! |? TWRKZPO.del() !} ?};
      TWRKZPO.cntx_pop();
      TWRKZBR.del();
      end()
   ?}
?};
~~


::======================================================================================================================
:: Formuły obsługi tabeli TWRKZPO (elementy gniazda produkcyjnego)
::======================================================================================================================


\twrk_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: TWRKZPO - Selekcja elementów gniazda
::  OLD: \twrk_poz/wrkplc.fml
::  TAG: <MBUILDER><LISTA>
::----------------------------------------------------------------------------------------------------------------------
TWRKPLC.cntx_psh();
TWRKZPO.cntx_psh();

_var_a_wyd:=VAR.A_WYD;
VAR.A_WYD:=TWRKZBR.WYD;

TWRKZPO.win_sel('WER');
TWRKZPO.index('GRUPA');
TWRKZPO.prefix(TWRKZBR.ref());
TWRKZPO.select();

VAR.A_WYD:=_var_a_wyd;

TWRKPLC.cntx_pop(); TWRKPLC.f_clear();
TWRKZPO.cntx_pop();
~~


\be_elem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: TWRKZPO - Przed redakcją elementu gniazda
::   WE: \be_elem/wrkplc.fml
::  TAG: <MBUILDER><BE>
::----------------------------------------------------------------------------------------------------------------------
_wyd:=VAR.A_WYD;
VAR.A_WYD:=TWRKZBR.WYD;
TWRKPLC.f_clear();
exec('twrkplc_filter_wye','zasoby');
VAR.A_WYD:=_wyd;
1


\zpoelpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: TWRKZPO - Po redakcji elementu gniazda produkcyjnego.
::  OLD: \zpoelpo/wrkplc.fml
::  TAG: <MBUILDER><AE>
::----------------------------------------------------------------------------------------------------------------------
TWRKZPO.KOD_:=TWRKZPO.ELEMENT().KOD;
TWRKZPO.WYD_:=TWRKZPO.ELEMENT().WYD().KOD;
TWRKZPO.NAZ_:=TWRKZPO.ELEMENT().NA;
1


\twzpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: TWRKZPO - Akcja po dołącz, popraw
::  OLD: \twzpo/twrkplc.fml
::----------------------------------------------------------------------------------------------------------------------
TWRKZBR.f_rfresh();
1


\ust_dom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2011]
:: OPIS: TWRKZPO - Ustawia domyślne stanowisko w ramach grupy.
::  OLD: \ust_dom/twrkplc.fml
::  TAG: <MBUILDER><AKCJA>
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy na pewno ustawić stanowisko jako domyślne?'@)
|| _twrkzpo:=TWRKZPO.ref();
   TWRKZPO.cntx_psh();
   {? TWRKZPO.first()
   || {!
      |? {? TWRKZPO.ref()=_twrkzpo
         || TWRKZPO.DEFAULT:='T'
         || TWRKZPO.DEFAULT:='N'
         ?};
         TWRKZPO.put();
         TWRKZPO.next()
      !}
   ?};
   TWRKZPO.cntx_pop()
?};
~~


\twrkzpch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MLAK [2008]
:: OPIS: TWRKZPO - Akcja po rekord
::  OLD: \twrkzpch/wrkplc.fml
::  TAG: <MBUILDER><CHK>
::----------------------------------------------------------------------------------------------------------------------
exec('chk_twrkzpo','zasoby',-menu_txt()='popraw')


\chkk_r_wzcz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Sprawdza poprawność wzorców czasu pracy (kalendarzy) przypiasnych do zasobów produkcyjnych
::----------------------------------------------------------------------------------------------------------------------
_tab_tmp:=tab_tmp(2
                  ,'REF' ,'STRING[16]' ,'Ref wzorca(KAL_WZOR.ref)'
                  ,'ROK' ,'INTEGER'    ,'Rok'
);
R_WZCZ.cntx_psh();
KAL_DEF.cntx_psh();
R_WZCZ.use('r_wzczas');
{? REF.FIRMA=null
|| KAL_DEF.use('kal_d__')
|| KAL_DEF.use('kal_d'+($REF.FIRMA+2))
?};
KAL_DEF.index('KAL_DATA');
KOMM.init(255,,'Kalendarze zasobów');

{! _loop:=1..2
|!
   {? var_pres('_tab')>100 || obj_del(_tab) ?};
   {? _loop=1
   || _tab:=TWRKPLC
   || _tab:=TWRKZBR
   ?};

   _tab.cntx_psh();
   {? _tab=TWRKPLC
   || _tab.index('KOD')
   || _tab.index('SYM')
   ?};
   _tab.prefix();
   {? _tab.first()
   || {!
      |?
         _kod:={? _tab=TWRKPLC
               || _tab.KOD
               || _tab.SYMBOL
               ?};
         _nazwa:={? _tab=TWRKPLC
                  || _tab.NA
                  || _tab.NAZWA
                  ?};
::       Znajuje wzorce czasu pracy powiązane z zasobem
         R_WZCZ.cntx_psh();
         R_WZCZ.index('R_WZWND');
         R_WZCZ.prefix(_tab.name(),_tab.ref(),'N','N');
         {? R_WZCZ.first()
         || {!
            |?
::             Określam datę zakończenia obowiązywania wzorca
               R_WZCZ.cntx_psh();
               {? R_WZCZ.next()
               || _data_do:=R_WZCZ.OD-1
               || _data_do:=date(date()~1,12,31)
               ?};
               R_WZCZ.cntx_pop();

::             Pomijam starsze wzorce (zakończone wcześniej niż pół roku od daty dzisiejszsej)
               _data_od:=date()-183;
               {? _data_do>_data_od
               ||
                  _rok:=_data_od~1;
                  {!
                  |?
                     KAL_ROK.cntx_psh();
                     KAL_ROK.index('KAL_ROK');
                     KAL_ROK.prefix(R_WZCZ.KAL,_rok);
                     {? KAL_ROK.first()
                     || KAL_WZOR.cntx_psh();
                        KAL_WZOR.index('KAL_WZOR');
                        KAL_WZOR.prefix(REF.FIRMA,KAL_ROK.WZORZEC,KAL_ROK.WZORZEC);
::                      Pomijam wzorce, które już zostały oznaczone jako błędne
                        {? KAL_WZOR.first() & ~_tab_tmp.find_key($KAL_WZOR.ref(),_rok)
                        || KAL_OPIS.cntx_psh();
                           KAL_OPIS.index('KAL_OPIS');
                           KAL_OPIS.prefix(KAL_WZOR.ref(),KAL_ROK.ROK);
                           {? KAL_OPIS.first()
                           || _result:=1;
::                            Szukam wzorców z nieprawidłową datą końcową
                              {? KAL_OPIS.find_tab('first','KONIEC',,'=',time(24,0,0))
                              ||
                                 {!
                                 |?
                                    _data:=exec('str2date','#convert',KAL_OPIS.DATA);
                                    {? _data=date(0,0,0) | (_data<>date(0,0,0) & _data>_data_od & _data<_data_do)
                                    || _result:=0;
                                       _tab_tmp.REF:=$KAL_OPIS.WZORZEC;
                                       _tab_tmp.ROK:=KAL_OPIS.ROK;
                                       _tab_tmp.add();
                                       KOMM.add('Kalendarz \'%1 (%2)\' posiada zdefiniowane wzorce, które mogą powodować błędy - pole \'Początek dnia pracy\' '
                                                'lub \'Koniec dnia pracy\' przyjmuje wartość \'24:00\')'@[R_WZCZ.KAL().NAZWA,$_rok],3)
                                    ?};
                                    _result>0 & KAL_OPIS.find_tab('next','KONIEC',,'=',time(24,0,0))
                                 !}
                              ?};
::                            Szukam wzorców z nieprawidłową datą początkową
                              {? _result>0 & KAL_OPIS.find_tab('first','POCZATEK',,'=',time(24,0,0))
                              ||
                                 {!
                                 |?
                                    _data:=exec('str2date','#convert',KAL_OPIS.DATA);
                                    {? _data=date(0,0,0) | (_data<>date(0,0,0) & _data>_data_od & _data<_data_do)
                                    || _result:=0;
                                       _tab_tmp.REF:=$KAL_OPIS.WZORZEC;
                                       _tab_tmp.ROK:=KAL_OPIS.ROK;
                                       _tab_tmp.add();
                                       KOMM.add('Kalendarz \'%1 (%2)\' posiada zdefiniowane wzorce, które mogą powodować błędy - pole \'Początek dnia pracy\' '
                                                'lub \'Koniec dnia pracy\' przyjmuje wartość \'24:00\')'@[R_WZCZ.KAL().NAZWA,$_rok],3)
                                    ?};
                                    _result>0 & KAL_OPIS.find_tab('next','POCZATEK',,'=',time(24,0,0))
                                 !}
                              ?}
                           ?};
                           KAL_OPIS.cntx_pop()
                        ?};
                        KAL_WZOR.cntx_pop()
                     ?};
                     KAL_ROK.cntx_pop();
                     _rok+=1;
                     _rok<=_data_do~1
                  !}
               ?};
               R_WZCZ.next()
            !}
         ?};
::       Sprawdzam dni poza wzorcem
         _result:=1;
         R_WZCZ.prefix(_tab.name(),_tab.ref(),'T','N');
         {? R_WZCZ.first()
         || {!
            |?
::             Poczytanie rekordu KAL_DEF
               KAL_DEF.prefix(R_WZCZ.KAL,R_WZCZ.OD~1,R_WZCZ.OD);
               {? KAL_DEF.first()
               || {? R_WZCZ.OD<date(date()~1,12,31) & R_WZCZ.OD>date()-183 & (KAL_DEF.KONIEC=time(24,0,0) |  KAL_DEF.POCZATEK=time(24,0,0))
                  || KOMM.add('Zasób \'%1 (%2)\' posiada zdefiniowane dni poza wzorcami, które mogą powodować błędy - pole \'Początek dnia pracy\' '
                              'lub \'Koniec dnia pracy\' przyjmuje wartość \'24:00\')'@[_nazwa,_kod],3);
                     _result:=0
                  ?}
               ?};
               R_WZCZ.next() & _result>0
            !}
         ?};

         R_WZCZ.cntx_pop();
         _tab.next()
      !}
   ?};
   _tab.cntx_pop()
!};
R_WZCZ.cntx_pop();
KAL_DEF.cntx_pop();
KOMM.select();
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:40 5538921c7bb743cf51e03df26e0ee86075937eb5afebeca968fb1c8389a995174905ede2cda02550073923db52e542029aac0152bfa155dab3f53d7cb04a4f6fbc462809d6604941e084748801550aa7ba5b5b8748615074f49df207b0386daa2de419bd8c66c276324035a8580f1fed2f75a476e2630c27a9de3779a9fb7ffa
