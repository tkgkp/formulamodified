:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !tte_wkj_dpro.fml
:: Utworzony: 28.07.2022
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły czynności TTE_WKJ_DPRO - Rejestracja problemów prod.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Formuła główna czynności rejestracji problemu produkcyjnego (TTE_WKJ_DPRO)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::       context - [obj_new] obiekt służący do przekazywania kontekstu wywołania czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_int:=params_get().int;
_out:=params_get().out;
_mp:=params_get().mp;
_context:=params_get().context;

:: PARAMETRY WE:
::# kind=WE, symbol=EK_PROB, type=_EK_PROB, name=Problem produkcyjny, required=N, keyref=T
{? var_pres('EK_PROB',_in)<>type_of(~~) & var_pres('EK_PROB',_in)<>type_of(null()) || return() ?};
{? var_pres('EK_PROB',_in)=type_of(~~) || _in.EK_PROB:=null() ?};

:: PARAMETRY WY:
::# kind=WY, symbol=EK_PROB, type=_EK_PROB, name=Problem produkcyjny, required=N
{? var_pres('EK_PROB',_out)<>type_of(~~) & var_pres('EK_PROB',_out)<>type_of(null()) || return() ?};

:: W przypadku obecności parametru wejściowego - przepchnięcie na wyjście i zakończenie czynności
{? _in.EK_PROB<>null()
|| _out.EK_PROB:=_in.EK_PROB;
   _mp.save(,_out);
   _mp.done()
:: Rejestrowanie problemu - na podstawie bieżącego kontekstu dodanie rekordu i zakończenie czynności
:: Zakładamy obecność zmiennej context o strukturze PROD_REJ,EK_SLOP,DESC,RESULT
|| _ek_prob:=exec('problem_add_core','!tte_wkj_dpro',_context.PROD_REJ,_context.EK_SLOP,_context.DESC);
   {? _ek_prob<>null()
   || _out.EK_PROB:=_ek_prob;
      _context.RESULT:=1;
      _mp.save(,_out);
      _mp.done()
   ?}
?};

~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Opis dla czynności rejestracji problemu produkcyjnego (TTE_WKJ_DPRO)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_desc:='';
_desc:='Zarejestruj problem produkcyjny'@@;
_desc


\problem_add_core
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Dodaje problem - część zasadnicza, dialog odbywa się wcześniej
::   WE: _a - PROD_REJ.ref()
::       _b - EK_SLOP.ref() - problem wybrany ze słownika
::       _c - dodatkowy opis problemu
::   WY: EK_PROB.ref() / null()
::----------------------------------------------------------------------------------------------------------------------
_prod_rej:=_a;
_ek_slop:=_b;
_desc:=_c;

_ek_prob:=null();

PROD_REJ.cntx_psh(); PROD_REJ.prefix();
EK_PROB.cntx_psh(); EK_PROB.prefix();
{? PROD_REJ.seek(_prod_rej)
|| EK_PROB.blank();
   EK_PROB.PX_POZ:=PROD_REJ.PX_POZ;
   EK_PROB.PL_OPER:=PROD_REJ.PL_OPER;
   EK_PROB.ZL:=PROD_REJ.ZL;
   EK_PROB.ZGP:=exec('get_zgp','prod_rej');
   EK_PROB.GROP:=PROD_REJ.GROP;

   ZGP.cntx_psh();
   EK_PROB.WYD:={? EK_PROB.ZGP<>null() & EK_PROB.ZGP().PFAZ().WYD || PROD_REJ.ZGP().PFAZ().WYD
                |? EK_PROB.ZL<>null() || EK_PROB.ZL().JORG
                || null()
                ?};
   EK_PROB.PLACE:={? EK_PROB.ZGP<>null() || EK_PROB.ZGP().PLACE || null() ?};
   ZGP.cntx_pop();

   EK_PROB.PROBLEM:='T';

   EK_PROB.ZGL_US:=OPERATOR.USER;
   EK_PROB.ZGL_D:=date();
   EK_PROB.ZGL_T:=time();
   EK_PROB.EK_SLOP:=_ek_slop;
   EK_PROB.memo_set(_desc,'ZGL_DESC');

   _ok:=EK_PROB.add();
   {? _ok
   || _ek_prob:=EK_PROB.ref();
      EK_PROB.memo_put(,'ZGL_DESC')
   ?}
?};

EK_PROB.cntx_pop();
PROD_REJ.cntx_pop();

_ek_prob

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:40 2f82b1faf23292d55819d22fd677e0566b988b24f3749addb99647329484851d82e764bdb78ebf44dfe9d5677b75154d8f0fd4428a47791e2a308e86f310f88eb37ee4af2be83e52d7691ef2d1abaf963426046decbb7c19002465d577d0ea00972eb7c467508b8c24e181aa5f62f61afd55385459f7ce7e78470cee34d3df46
