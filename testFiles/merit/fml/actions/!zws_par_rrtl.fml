:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_rrtl.fml
:: Utworzony: 07.05.2020
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły czynności ZWS_PAR_RRTL - Ustawienia rejestru tłumaczeń.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Ustawienia rejestru tłumaczeń - główna formuła czynności.
::----------------------------------------------------------------------------------------------------------------------
RT_KONF.cntx_psh();
RT_KONF.f_clear();
RT_KONF.clear();
RT_KONF.index('UNIQUE');

RT_KONF.win_sel('WER');
RT_KONF.select();

RT_KONF.cntx_pop();
~~


\_rt_jezyk_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

:: sprawdź wypełnienie pól i unikalność indeksów
__CHK.validate(RT_JEZYK,$("_a.table(_b,"+$_mode+")"))


\_rt_jezyk_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli RT_JEZYK.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_rt_jezyk_chk','!zws_par_rrtl',0)


\_rt_jezyk_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli RT_JEZYK.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
exec('_rt_jezyk_chk','!zws_par_rrtl',1)


\_rt_jezyk_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wyzwalacz przed usunięciem wiersza tabeli RT_JEZYK.
::   WE:
::   WY: 0/1 - wiersz może/nie może być usunięty
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',RT_TEKST,'FK1',RT_JEZYK.SLO_KOD)


\_rt_konf_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(RT_KONF,
:: sprawdź wypełnienie pól i unikalność indeksów
   $("_a.table(_b,"+$_mode+",,'TABELA','POLE','AUTO','DL_SPR')"),
:: kontrola dopuszczalnych wartości
   "_a.in_set(_b,'AUTO',,'T','N')",
   "_a.in_set(_b,'DL_SPR',,'N','?','T')",
:: sprawdź, czy istnienije kolumna o podanym akronimie
   "exec('rt_konf_pole_ae','!zws_par_rrtl')",
:: sprawdź formułę dyskryminatora
   {? form(RT_KONF.WARTOSC)<>''
   || "_a.record(_b,,'FORMULA')"
   ?},
:: testuj formułę dyskryminatora
   {? form(RT_KONF.WARTOSC)<>''
   || "  {? (_chk:=exec('rt_konf_formula_chk','rt_lib',0))=''
         || return(1)
         ?};
         _a.err_msg(_chk);
         'FORMULA'
      "
   ?},
:: sprawdź długość tekstu tłumaczenia
   {? RT_KONF.DL_SPR<>'N'
   || "_a.record(_b,,'DL_OBCY')"
   ?},
   {? RT_KONF.DL_SPR<>'N'
   || "  {? _b.DL_OBCY>=1 & _b.DL_OBCY<=255
         || return(1)
         ?};
         _a.err_incorrect(MS.name(_b,'DL_SPR'));
         'DL_OBCY'
      "
   ?}
)


\_rt_konf_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Przed zapisem wiersza tabeli RT_KONF.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? form(RT_KONF.WARTOSC)=''
|| RT_KONF.memo_set('','FORMULA')
?};

{? RT_KONF.AUTO='T'
|| RT_KONF.OPIS:=exec('rt_konf_opis','!zws_par_rrtl',RT_KONF.TABELA,RT_KONF.POLE)
?};

{? RT_KONF.DL_SPR='N'
|| RT_KONF.DL_OBCY:=0
?};

1


\_rt_konf_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wyzwalacz przed dołączeniem wiersza tabeli RT_KONF.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
{? exec('_rt_konf_chk','!zws_par_rrtl',0)<>0
|| exec('_rt_konf_modb','!zws_par_rrtl')
?}


\_rt_konf_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wyzwalacz przed poprawieniem wiersza tabeli RT_KONF.
::   WE:
::   WY: 0/1 - wiersz błędny/poprawny
::----------------------------------------------------------------------------------------------------------------------
{? exec('_rt_konf_chk','!zws_par_rrtl',1)<>0
|| exec('_rt_konf_modb','!zws_par_rrtl')
?}


\_rt_konf_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wyzwalacz przed usunięciem wiersza tabeli RT_KONF.
::   WE:
::   WY: 0/1 - wiersz może/nie może być usunięty
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',RT_TEKST,'UNIQUE',RT_KONF.ref())


\rt_jezyk_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Rekord przed okienka tabeli RT_JEZYK. Ewentualne wyłączenie akcji "Popraw".
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? _a=0 || return() ?};

_aid:='';
RT_TEKST.cntx_psh();
RT_TEKST.index('FK1');
RT_TEKST.prefix(RT_JEZYK.SLO_KOD);
{? RT_TEKST.first()
|| _aid:='P'
?};
RT_TEKST.cntx_pop();

RT_JEZYK.actions_grayed(cur_win(1,1),_aid);
~~


\rt_jezyk_wb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Przed wyświetleniem okienka tabeli RT_JEZYK.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
RT_JEZYK.win_edit('RED');
1


\rt_jezyk_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Dołączanie wiersza tabeli RT_JEZYK. Pozwala na aktualizację zawartości rejestru.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_ret:=exec('wybierz_kody','ext_slo','JEZRTL',1);
{? _ret.OK=0 | SLO_KOD.seek(_ret.WYBOR.REF,,1)=0
|| return()
?};

RT_JEZYK.blank();
RT_JEZYK.SLO_KOD:=SLO_KOD.ref();
_chk:=exec('_rt_jezyk_chk','!zws_par_rrtl',0);
{? type_of(_chk)=type_of(0) & _chk<>0 & RT_JEZYK.add()
|| exec('akt_rt_tekst','!zws_par_rrtl',~~,RT_JEZYK.SLO_KOD)
?};
~~


\rt_jezyk_popraw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Poprawianie wiersza tabeli RT_JEZYK. Pozwala na aktualizację zawartości rejestru.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_ret:=exec('wybierz_kody','ext_slo','JEZRTL',1,RT_JEZYK.SLO_KOD().KOD);
{? _ret.OK=0 | SLO_KOD.seek(_ret.WYBOR.REF,,1)=0
|| return()
?};

RT_JEZYK.SLO_KOD:=SLO_KOD.ref();
_chk:=exec('_rt_jezyk_chk','!zws_par_rrtl',1);
{? type_of(_chk)=type_of(0) & _chk<>0 & RT_JEZYK.put()
|| exec('akt_rt_tekst','!zws_par_rrtl',~~,RT_JEZYK.SLO_KOD)
?};
~~


\rt_konf_tabela_pt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wzorzec pola TABELA w wierszu tabeli RT_KONF. Dostępne tylko wielkie litery, cyfry i znaki.
::   WE:
::   WY: wzorzec edycji pola
::----------------------------------------------------------------------------------------------------------------------
'Uu!'


\rt_konf_tabela_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Przed wyświetleniem pola TABELA w wierszu tabeli RT_KONF. Steruje dostępnością pozostałych pól.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_enable:=$('RT_KONF.efld_opt(RT_KONF.win_edit(\'?\'),\'enable=%1\',,_a)'
   [$(RT_KONF.TABELA<>'' & var_pres(RT_KONF.TABELA)=type_of(SYSLOG))]
);

_enable('POLE');
_enable('WARTOSC');
_enable('FORMULA');

1


\rt_konf_tabela_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Przed edycją pola TABELA w wierszu tabeli RT_KONF. Blokuje możliwość zmiany jeśli określono wartość pola POLE.
::   WE:
::   WY: 0/1 - pole zablokowane/dostępne do edycji
::----------------------------------------------------------------------------------------------------------------------
form(RT_KONF.POLE)=''


\rt_konf_tabela_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Po edycji pola TABELA wiersza tabeli RT_KONF.
::   WE:
::   WY: 1 w przypadku, gdy wartość pola jest pusta lub jest akronimem tabeli, wpp 0
::----------------------------------------------------------------------------------------------------------------------
{? RT_KONF.TABELA=''
|| return(1)
?};

{? (_chk:=exec('rt_konf_tabela_chk','rt_lib'))<>''
:: tabela nie istnieje
|| __CHK.err_msg(_chk);
   return(0)
?};

{? RT_KONF.AUTO='T'
|| RT_KONF.OPIS:=exec('rt_konf_opis','!zws_par_rrtl',RT_KONF.TABELA,RT_KONF.POLE)
?};

exec('rt_konf_tabela_bd','!zws_par_rrtl');

1


\rt_konf_tabela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Zwraca listę tabel dostępnych do wykorzystania.
::   WE:
::   WY: alias tabeli tymczasowej
::----------------------------------------------------------------------------------------------------------------------
: tabela tymczasowa umożliwiająca wybór
exec('tab_list','#table')


\rt_konf_tabela_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Obsługa przycisku pola TABELA w wierszu tabeli RT_KONF. Pozwala na wybór zdefiniowanej tabeli.
::   WE:
::   WY: akronim wybranej tabeli lub ~~ w przypadku rezygnacji
::----------------------------------------------------------------------------------------------------------------------
:: lista tabel dostępnych do wyboru
_BUF:=exec('rt_konf_tabela','!zws_par_rrtl');

: wybór zestawu
_BUF.find_key(RT_KONF.TABELA);
{? _BUF.select(,1)
|| _BUF.SYMBOL
|| ~~
?}


\rt_konf_pole_pt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Wzorzec pola POLE w wierszu tabeli RT_KONF. Dostępne tylko wielkie litery, cyfry i znaki.
::   WE:
::   WY: wzorzec edycji pola
::----------------------------------------------------------------------------------------------------------------------
'Uu!'


\rt_konf_pole_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Po edycji pola POLE wiersza tabeli RT_KONF.
::   WE:
::   WY: 1 w przypadku, gdy wartość pola jest pusta lub jest akronimem pola tabeli, wpp 0
::----------------------------------------------------------------------------------------------------------------------
{? RT_KONF.TABELA='' | RT_KONF.POLE=''
|| return(1)
?};

{? (_chk:=exec('rt_konf_pole_chk','rt_lib'))<>''
:: kolumna nie istnieje lub jest błędnego typu
|| __CHK.err_msg(_chk);
   return(0)
?};

{? RT_KONF.AUTO='T'
|| RT_KONF.OPIS:=exec('rt_konf_opis','!zws_par_rrtl',RT_KONF.TABELA,RT_KONF.POLE)
?};

1


\rt_konf_pole_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Obsługa przycisku pola POLE w wierszu tabeli RT_KONF. Pozwala na wybór zdefiniowanego pola.
::   WE:
::   WY: akronim wybranego pola lub ~~ w przypadku rezygnacji
::----------------------------------------------------------------------------------------------------------------------
{? RT_KONF.TABELA='' | var_pres(RT_KONF.TABELA)<>type_of(SYSLOG)
|| return()
?};
_TAB:=($RT_KONF.TABELA)();

: tabela tymczasowa umożliwiająca wybór
_BUF:=exec('wyb_symbol_tab','#stalesys');
_BUF.hdr_sel('Dostępne pola'@);

: lista pól napisowych
_lim:=_TAB.fld_num();
{! _num:=1.._lim
|! _acr:=_TAB.fld_acr(_num);
   {? var_pres(_acr,_TAB)=27
   || _BUF.blank();
      _BUF.SYMBOL:=_acr;
      _BUF.OPIS:=_TAB.fld_name(_num);
      _BUF.add()
   ?}
!};

: wybór zestawu
_BUF.find_key(RT_KONF.POLE);
{? _BUF.select(,1)
|| _BUF.SYMBOL
|| ~~
?}


\rt_konf_wartosc_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Przed wyświetleniem pola WARTOSC w wierszu tabeli RT_KONF. Ustawia znacznik wymogu danych dla pola FORMULA.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
RT_KONF.efld_opt(RT_KONF.win_edit('?'),'mark=%1,enable=%1'[$(form(RT_KONF.WARTOSC)<>'')],,'FORMULA');
1


\rt_konf_wartosc_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Po edycji pola WARTOSC wiersza tabeli RT_KONF. Ustawia znacznik wymogu danych dla pola FORMULA.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('rt_konf_wartosc_bd','!zws_par_rrtl')


\rt_konf_auto_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Po edycji pola AUTO wiersza tabeli RT_KONF. Przy włączonej opcji tworzy automatyczny opis.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? RT_KONF.AUTO='T'
|| RT_KONF.OPIS:=exec('rt_konf_opis','!zws_par_rrtl',RT_KONF.TABELA,RT_KONF.POLE)
?};
1


\rt_konf_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Tworzy tekst komentarza opisu
::   WE: _a STRING - akronim tabeli
::       _b STRING - akronim pola
::   WY: tekst komentarza (opisu)
::----------------------------------------------------------------------------------------------------------------------
{? _a='' | _b=''
|| return('')

|? var_pres(_a)<>type_of(SYSLOG)
|| return('Nieznana tabela.')

|? var_pres(_b,($_a)())<0
|| return('Nieistniejące pole.')
?};

'%1 (%2)'[exec('fldLabel','#field',_a,_b),"_a.comment()"(($_a)())]


\rt_konf_opis_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Przed edycją pola OPIS w wierszu tabeli RT_KONF. Blokuje możliwość zmiany, jeśli opis jest automatyczny.
::   WE:
::   WY: 0/1 - pole zablokowane/dostępne do edycji
::----------------------------------------------------------------------------------------------------------------------
RT_KONF.AUTO<>'T'


\rt_konf_dl_spr_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Przed wyświetleniem pola DL_SPR w wierszu tabeli RT_KONF. Steruje dostępnością pola DL_OBCY.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
RT_KONF.efld_opt(RT_KONF.win_edit('?'),'mark=%1,enable=%1'[$(RT_KONF.DL_SPR<>'N')],,'DL_OBCY');
1


\rt_konf_dl_spr_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Po edycji pola DL_SPR wiersza tabeli RT_KONF.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('rt_konf_dl_spr_bd','!zws_par_rrtl');
{? RT_KONF.DL_SPR<>'N' & RT_KONF.DL_OBCY=0
|| RT_KONF.DL_OBCY:=MS.fld_len(RT_KONF.TABELA,RT_KONF.POLE)
?};
1


\rt_konf_dl_obcy_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Przed edycją pola DL_OBCY w wierszu tabeli RT_KONF. Blokuje możliwość zmiany, jeśli wyłączono kontrolę.
::   WE:
::   WY: 0/1 - pole zablokowane/dostępne do edycji
::----------------------------------------------------------------------------------------------------------------------
RT_KONF.DL_SPR<>'N'


\rt_konf_wb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Przed wyświetleniem okienka tabeli RT_KONF.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
RT_KONF.win_edit('RED');
RT_KONF.win_patt('WZO');
1


\rt_konf_wa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Po wyświetleniu okienka tabeli RT_KONF.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('rt_konf_x_fml_be','!zws_par_rrtl',"*");
1


\rt_konf_x_fml_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Ustawia formułę przed edycją pól TABELA, POLE, WARTOŚĆ tabeli RT_KONF.
::   WE: _a FORMULA - treść formuły
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów i stałe
_fml:=_a;
_be:='BEFORE_EDIT';

RT_KONF.fld_fml('TABELA',_be,_a);
RT_KONF.fld_fml('POLE',_be,_a);
RT_KONF.fld_fml('WARTOSC',_be,_a);
RT_KONF.fld_fml('FORMULA',_be,_a);

1


\rt_konf_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Przed dołączeniem wiersza tabeli RT_KONF. Odblokowuje pola.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('rt_konf_x_fml_be','!zws_par_rrtl',"*");
1


\rt_konf_dolacz_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Po dołączeniu wiersza tabeli RT_KONF. Pozwala na aktualizację zawartości rejestru.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('akt_rt_tekst','!zws_par_rrtl',RT_KONF.ref(),~~);
~~


\rt_konf_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Przed poprawieniem wiersza tabeli RT_KONF. Ewentualnie blokuje pola.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
RT_TEKST.cntx_psh();
RT_TEKST.index('UNIQUE');
RT_TEKST.prefix(RT_KONF.ref());
exec('rt_konf_x_fml_be','!zws_par_rrtl',{? RT_TEKST.first() || "0" || "*" ?});
RT_TEKST.cntx_pop();
1


\rt_konf_popraw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Po poprawieniu wiersza tabeli RT_KONF. Pozwala na aktualizację zawartości rejestru.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('akt_rt_tekst','!zws_par_rrtl',RT_KONF.ref(),~~);
~~


\akt_rt_tekst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Po dołączeniu lub poprawieniu wiersza tabeli RT_KONF. Pozwala na aktualizację zawartości rejestru.
::   WE: _a RT_KONF/~~ - wskazanie ustawień lub ~~
::       _b SLO_KOD/~~ - wskazanie języka tłumaczeń lub ~~
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? exec('chk_role','#b__box',OPERATOR.USER,'ZWS_PAR_ARTL')=0
:: brak uprawnień do zmian w zawartości rejestru
|| return()
?};

{? FUN.ask('Czy aktualizować zawartość rejestru tłumaczeń?'@)
|| exec('aktualizuj','rt_lib',_a,_b,1)
?};
~~


\rt_konf_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Kontrola poprawności danych wiersza tabeli RT_KONF.
::   WE:
::   WY: wynik _rt_konf_chk
::----------------------------------------------------------------------------------------------------------------------
exec('_rt_konf_chk','!zws_par_rrtl',-menu_txt()='popraw')


\rt_konf_wstaw_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Akcja "Wstaw" okienka tabeli RT_KONF. Dodaje konfigurację dla wybranych pól.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: lista dostępnych do wyboru kolumn
_BUF:=tab_tmp(2,
   'TABELA','STRING[8]',  'Tabela'@,
   'POLE',  'STRING[8]',  'Pole'@,
   'OPIS',  'STRING[128]','Opis'@
);

RT_KONF.cntx_psh();
RT_KONF.index('UNIQUE');
RT_KONF.prefix();

:: lista tabel dostępnych do wyboru
_TAB:=exec('rt_konf_tabela','!zws_par_rrtl');
_loop:=_TAB.first();
{!
|? _loop
|! _sym:=_TAB.SYMBOL;
   _DEF:=($_sym)();
   _lim:="_a.fld_num()"(_DEF);
:: przeglądaj pola tabeli
   {! _num:=1.._lim
   |! _acr:="_a.fld_acr(_b)"(_DEF,_num);
      {? var_pres(_acr,_DEF)=27 & ~RT_KONF.find_key(_sym,_acr,)
::       dodaj brakujące pole napisowe
      || _BUF.blank();
         _BUF.TABELA:=_sym;
         _BUF.POLE:=_acr;
         _BUF.OPIS:='%1 (%2)'["_a.fld_name(_b)"(_DEF,_num),"_a.comment()"(_DEF)];
         _BUF.add()
      ?}
   !};
   obj_del(_DEF);
   _loop:=_TAB.next()
!};
obj_del(_TAB);

:: utwórz i ustaw okienko wyboru dostępnych kolumn
_wnd:=_BUF.mk_sel('Dostępne pola'@,'P',0,'#rrtl_wstaw_sel',,,,,'U');
_BUF.win_fld(_wnd,,'TABELA',,,-10);
_BUF.win_fld(_wnd,,'POLE',,,-10);
_BUF.win_fld(_wnd,,'OPIS');
_BUF.win_act(_wnd,,'Formuła','Wybierz'@,,,
   "  _BUF:=cur_tab(1,1);
      {? RT_KONF.find_key(_BUF.TABELA,_BUF.POLE,)
      || return(1)
      ?};
      RT_KONF.blank();
      RT_KONF.TABELA:=_BUF.TABELA;
      RT_KONF.POLE:=_BUF.POLE;
      RT_KONF.add()
   ",
   "  cur_tab(1,1).del();
      0
   ",
   1,1,,,'W'
);
_BUF.win_act(_wnd,,'Szukaj');
_BUF.win_act(_wnd,,'Kolejność');
_BUF.win_sel(_wnd);

:: utwórz i ustaw okienko podglądu
_wnd:=_BUF.mk_edit('Dostępne pole'@,0,'#rrtl_wstaw_red',40,15);
_BUF.win_esep(_wnd,'Dane podstawowe'@);
_BUF.win_efld(_wnd,,'TABELA',,,40);
_BUF.win_efld(_wnd,,'POLE',,,40);
_BUF.win_efld(_wnd,,'OPIS',,,40);
exec('ok_esc','#window',_BUF,_wnd);
_BUF.win_edit(_wnd);

:: utwórz i ustaw okienko wyszukiwania
_wnd:=_BUF.mk_edit('Dostępne pole'@,0,'#rrtl_wstaw_pat',40,15);
_BUF.win_esep(_wnd,'Dane podstawowe'@);
_BUF.win_efld(_wnd,,'TABELA');
_BUF.win_efld(_wnd,,'POLE');
exec('ok_esc','#window',_BUF,_wnd);
_BUF.win_patt(_wnd);

:: wybierz
_BUF.select();

:: porządki
RT_KONF.cntx_pop();
obj_del(_BUF);
~~


\rt_konf_jezyki_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Akcja "Języki tłumaczeń" okienka tabeli RT_KONF. Definiuje języki wykorzystywane w tłumaczeniach.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
RT_JEZYK.cntx_psh();
RT_JEZYK.index('KOD');
RT_JEZYK.clear();

RT_JEZYK.win_sel('WER');
RT_JEZYK.select();

RT_JEZYK.cntx_pop();
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:39 c04efc8139b67c5c7d63af722a0228eba0e46ad508fdfecedad158228f798b03a5bbf8922ec58592df85ace935c7ff36ebddfc2ffc58bbc1d8ef144785784451f59ae21c506aac0de6b3646731ca74b5cd49933ea6d223dfd3f25d620e51fbdb324732a8b30611295ad087706d543fdb783498c599224d7116328d4e84eacd7d
