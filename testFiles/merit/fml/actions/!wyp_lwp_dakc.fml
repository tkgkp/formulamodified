:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !wyp_lwp_dakc.fml
:: Utworzony: 05.09.2017
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły czynności WYP_LWP_DAKC - Akceptacja polecenia wydania wyposażenia
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Formuła główna czynności akceptacji wydania/zwrotu wyposażenia (WYP_LWW_DAKC)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::       context - [obj_new] obiekt służący do przekazywania kontekstu wywołania czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_int:=params_get().int;
_out:=params_get().out;
_mp:=params_get().mp;
_context:=params_get().context;

::# permissions=ODDZ
::# properties=SERVICE

:: PARAMETRY WE:
::# kind=WE, symbol=POLWO, type=_POLWO, name=Polecenie wydania wyposażenia, required=T, keyref=T
{? var_pres('POLWO',_in)<>type_of(~~) & var_pres('POLWO',_in)<>type_of(null())
|| _msg:='Błędny parametr wejściowy \'%1\' dla czynności %2.'@@['POLWO','WYP_LWP_DAKC'];
   FUN.error(_msg);
   _mp.error(_msg);
   return()
?};
{? var_pres('POLWO',_in)=type_of(~~) || _in.POLWO:=null() ?};
:: PARAMETRY WY:
::# kind=WY, symbol=RESULT,   type=STRING,   name=Wynik działania,               required=N

_result:=0;
_can_continue:=1;

POLWO.cntx_psh(); POLWO.clear();

_keyRefs:=_mp.getRefs();

_polwo:=null();

{? obj_len(_keyRefs)>0
||
   {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];

      {? type_of(_kref)>0
      ||
         {? ref_name(_kref)=POLWO.name()
         || _polwo:=exec('FindAndGet','#table',POLWO,_kref,,,null());

            {? _polwo=null()
            ||
::             Nie znaleziono rekordu kluczowego powiązanego z POLWO, więc robię error
               _can_continue:=0;
               exec('polwo_deleted_in_proc','wyp_polwo',_mp)
            ?}
         ?}
      ||
::       Nie znaleziono rekordu kluczowego powiązanego z POLWO, więc robię error
         _can_continue:=0;
         exec('polwo_deleted_in_proc','wyp_polwo',_mp)
      ?}
   !}
?};

{? _can_continue>0
||
:: jest parametr wejściowy POLWO
   {? _polwo=null() & var_pres('POLWO',_in)=type_of(null())
   || _polwo:=_in.POLWO
   ?}
?};

{? _can_continue>0 & _polwo<>null()
|| _can_continue:=POLWO.seek(_polwo)
?};

{? _can_continue>0
||
   _ask:=1;
   _komm:=0;
   {? _mp.isAutoRun()
   || _ask:=0;
      _komm:=1
   ?};
   {? _mp.isGroup()
   || _ask:=0;
      _komm:=1
   ?};
   {? _mp.isService()
   || _ask:=0
   ?};

   {? _mp.akcja()='AKCEPTUJ' | _mp.isAutoRun() | _mp.isService()
   || _res_obj:=exec('polwo_akcept','!wyp_lwp_dakc',POLWO.ref(),_ask,_komm,_mp.isService(),_mp);
      _result:=_res_obj.ACCEPTED;
      {? _res_obj.RESULT>0
      || _mp.save(exec('kind_out','#b_port'),'RESULT','OK')
      || _mp.save(exec('kind_out','#b_port'),'RESULT','BŁĄD')
      ?}

:: Obsługa z TODO - wyświetlam okno umożliwiające podgląd POLWO
   |? _mp.pathTodo()
   || _win:=exec('win_todo','!wyp_lwp_dakc');
      POLWO.win_edit(_win);
      VAR1.NAZWISKO:=POLWO.P().OSOBA().NAZWISKO;
      POLWO.display();
      {? POLWO.get() & POLWO.AKCEPT='T' || _result:=1 ?}

   || _msg:='Nie obsłużony kontekst wywołania czynności %1.'@@['WYP_LWP_DAKC'];
      FUN.error(_msg);
      _mp.error(_msg);
      POLWO.cntx_pop();
      return()
   ?};

   {? _result>0 | _mp.isMicro() | _mp.isService()
   || _mp.done()
   ?}
?};
{? _can_continue=0
|| _mp.save(exec('kind_out','#b_port'),'RESULT','BŁĄD')
?};
POLWO.cntx_pop();
~~


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Opis dla czynności akceptacji polecenia wydania (WYP_LWP_DAKC)
::       UWAGA: do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: zwraca opis Zadania
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;

_keyRefs:=_mp.getRefs();
_in:=_mp.load(exec('kind_in','#b_port'));

:: Jest rekord kluczowy to ustawiam odpowiednie POLWO
{? var_pres('[1]',_keyRefs)
|| _tmp:=exec('FindAndGet','#table',POLWO,_keyRefs[1],,"exec('record','#to_string',ref())",'');
   _desc:={? _tmp<>'' || 'Zaakceptuj polecenie wydania wyposażenia: %1'@@[_tmp] || '' ?}
::|| _desc:=exec('FindAndGet','#table',POLWO,_keyRefs[1],,
::      "'Zaakceptuj polecenie wydania wyposażenia: %1'[exec('record','#to_string',ref())]",''
::   )

:: nie ma nic...
|| _desc:='Zaakceptuj polecenie wydania wyposażenia'@@
?};

_desc


\action_accept
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Akcja akceptacji poleceń wydania (czynność)
::----------------------------------------------------------------------------------------------------------------------
_args:=exec('mp_run_a','#b__box');
_args.ACT_UID:='WYP_LWP_DAKC';
_args.UIDREF:=POLWO.uidref();
_args.AKCJA:='AKCEPTUJ';
{? POLWO.sel_size()>0
|| _args.GRUPA:='T'
?};

_args.PORTS_IN:=exec('portsIn','#b__box',_args.ACT_UID);
exec('portsInSet','#b__box',_args.PORTS_IN,_args.ACT_UID,'POLWO',POLWO.ref());

exec('mp_run','#b__box',_args);
~~


\polwo_akc_gb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Grupa przed akceptacja polecen
::   WY: 0/1 - kontynuowac
::  OLD: \polwo_akc_gb/nadzor.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy akceptować zaznaczone polecenia?'@)
||
   KOMM.init(,,'Akceptacja poleceń wydania wyposażenia'@);
::   {? (exec('get','#params',700510,2,null())='N')
::   || KOMM.add('Akceptacja przy wyłączonej kontroli ilości.'@,4)
::   ?};
   sel_nchk();
   1
|| 0
?}


\polwo_akc_ga
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Grupa po akceptacja polecen
::  OLD: \polwo_akc_ga/nadzor.fml
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
~~


\polwo_akcept
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Akceptacja biezacego polecenia
::   WE: _a - POLWO.ref()
::       _b - INTEGER - Czy zadawać pytania (0/1)
::       _c - INTEGER - Czy komunikaty wrzucać do KOMM (0/1)
::       _d - INTEGER - Czy czynność uruchomiona serwisem
::       [_e] - obj_new - Obiekt menadżera procesów
::   WY: 0 / 1 - czy zaakceptowano
::  OLD: \polwo_akcept/nadzor.fml
::----------------------------------------------------------------------------------------------------------------------
_polwo:=_a;
_ask:=_b;
_komm:=_c;
_service:=_d;
_mp:=~~;
{? var_pres('_e')>100
|| _mp:=_e
?};

_result:=obj_new('ACCEPTED','RESULT');
_result.ACCEPTED:=0;
_result.RESULT:=1;

POLWO.cntx_psh(); POLWO.prefix();

{? POLWO.seek(_polwo)
|| {? POLWO.AKCEPT='T'
   || _msg:='Polecenie %1 już zaakceptowane.'@[POLWO.SYM];
      {? _service>0
      || _result.RESULT:=0
      |? _komm>0
      || KOMM.add(_msg,110)
      || FUN.emsg(_msg)
      ?};
      _result.ACCEPTED:=1

   |? POLWO.STAT_REJ='N'
   || _msg:='Nie zakończono rejestracji polecenia %1.'@[POLWO.SYM];
      {? _service>0
      || _result.RESULT:=0
      |? _komm>0
      || KOMM.add(_msg,81)
      || FUN.emsg(_msg)
      ?}
   ||
      {? exec('czy_poz','wyp_polwo')
      ||
         {? ~_ask | FUN.ask('Czy zaakceptować polecenie?'@)
         ||
::          sprawdzenie ilosci dla wszystkich pozycji
::          ilosc nie moze przekraczac normatywow (stany u pracownika nie sa brane pod uwage)
            _ok:={? exec('get','#params',700510,2,null())='N'
                 || 1
                 ||
                    exec('prep_norm','normatyw',POLWO.P,POLWO.DATA_W);
                    PWOPOZ.cntx_psh();
                    PWOPOZ.index('PRODZO'); PWOPOZ.prefix(POLWO.ref());
                    _err:=0;
                    {? ~_komm || KOMM.init(,,'Sprawdzenie pozycji polecenia wydania') ?};
                    {? PWOPOZ.first()
                    || {!
                       |? _err+=(~exec('pwopoz_chk_il','wyp_polwo',0,0));
                          PWOPOZ.next()
                       !}
                    ?};
                    PWOPOZ.cntx_pop();
                    exec('drop_norm','normatyw');
                    {? ~_komm || KOMM.select() ?};
                    _err=0
                 ?};
            {? _ok
            || _result.ACCEPTED:=1;
               POLWO.AKCEPT:='T';
               _result.RESULT:=POLWO.put()
            || _msg:='Polecenie %1 przekracza normatyw.'@[POLWO.SYM];
               {? _service>0
               || _result.RESULT:=0
               |? _komm
               || KOMM.add(_msg,81)
               ?}
            ?}
         ?}

      || _msg:='Polecenie %1 nie ma pozycji.'@[POLWO.SYM];
         {? _service>0
         || _result.RESULT:=0
         |? _komm>0
         || KOMM.add(_msg,81)
         || FUN.emsg(_msg)
         ?}
      ?}
   ?}
|| _result.RESULT:=0
?};
POLWO.cntx_pop();
_result


\polwo_wyc_gb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Grupa przed wycofaniem akceptacji polecen
::   WY: 0/1 - kontynuowac
::  OLD: \polwo_wyc_gb/nadzor.fml
::----------------------------------------------------------------------------------------------------------------------
_upr_dakc:=exec('chk_role','#b__box',OPERATOR.USER,'WYP_LWP_DAKC');
_upr_dpwy:=exec('chk_role','#b__box',OPERATOR.USER,'WYP_LWP_DPWY');

{? _upr_dakc & _upr_dpwy
|| _ask:=FUN.choice('Wybierz jedną z opcji wycofania akceptacji lub zakończenia poleceń wydania:'@
                    ,,'Akceptację i &zakończenie'@,'&Akceptację'@);
   {? _ask=1 || _ask:=3 ?}
|? _upr_dakc
|| _ask:=FUN.ask('Wycofać akceptację zaznaczonych poleceń wydania?'@);
   {? _ask || _ask:=2 ?}
|? _upr_dpwy
|| _ask:=FUN.ask('Wycofać zakończenie rejestracji zaznaczonych poleceń wydania?'@)
?};

params_get().env_polwo.WYCOFAJ:=_ask;

{? _ask>0
|| KOMM.init(,,'Wycofanie akceptacji poleceń wydania wyposażenia'@);
   1
|| 0
?}


\polwo_wyc_ga
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Grupa po wycofaniu akceptacji polecen
::  OLD: \polwo_wyc_ga/nadzor.fml
::----------------------------------------------------------------------------------------------------------------------
KOMM.select();
~~


\polwo_wyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Wycofanie akceptacji biezacego polecenia
::  OLD: \polwo_wyc/nadzor.fml
::----------------------------------------------------------------------------------------------------------------------
_upr_dakc:=exec('chk_role','#b__box',OPERATOR.USER,'WYP_LWP_DAKC');
_upr_dpwy:=exec('chk_role','#b__box',OPERATOR.USER,'WYP_LWP_DPWY');

_grp:=(POLWO.sel_size()>0);

{? _grp
|| _ask:=params_get().env_polwo.WYCOFAJ
|| {? _upr_dakc & _upr_dpwy & POLWO.AKCEPT='T'
   || _ask:=FUN.choice('Wybierz jedną z opcji wycofania akceptacji lub zakończenia polecenia wydania %1:'@[POLWO.SYM]
                       ,,'Akceptację i &zakończenie'@,'&Akceptację'@);
      {? _ask=1 || _ask:=3 ?}
   |? _upr_dakc & POLWO.AKCEPT='T'
   || _ask:=FUN.ask('Wycofać akceptację polecenia wydania %1?'@[POLWO.SYM]);
      {? _ask || _ask:=2 ?}
   |? _upr_dpwy & POLWO.AKCEPT='N' & POLWO.STAT_REJ='T'
   || _ask:=FUN.ask('Wycofać zakończenie rejestracji polecenia wydania %1?'@[POLWO.SYM])
   || _ask:=-1
   ?}
?};

:: 1 (01) - samo zakończenie
:: 2 (10) - sama akceptacja
:: 3 (11) - akceptacja i zakończenie

{? exec('blk_lock','#table','POLWO',POLWO.ref(),,,'Polecenie wydania jest redagowane')
||
   {? _ask=2 & POLWO.AKCEPT<>'T'
   || {? _grp || KOMM.add('Polecenie %1 nie jest zaakceptowane'@[POLWO.SYM],110) ?}
   |? _ask=3 & POLWO.STAT_REJ<>'T'
   || {? _grp || KOMM.add('Rejestracja polecenia %1 nie została zakończona'@[POLWO.SYM],110) ?}
   |? (_ask=2 | _ask=3)
   ||
::    czy z polecenia nie bylo generacji jesli byla to nie mozna odakceptowac
      {? (~exec('czy_generowalo','!wyp_lwp_dakc')) & (POLWO.DATA_G=date(0,0,0))
      ||
         {? _grp
         || {? POLWO.AKCEPT='T'
            || KOMM.add('Wycofano akceptację polecenia %1.'@[POLWO.SYM],38)
            || KOMM.add('Wycofano rejestrację polecenia %1.'@[POLWO.SYM],38)
            ?}
         ?};
         POLWO.AKCEPT:='N';
         {? _ask=3 || POLWO.STAT_REJ:='N' ?};
         POLWO.put()
      ||
         {? _grp
         || KOMM.add('Polecenie %1 było użyte do generacji pozycji w kartotece wydań. Najpierw usuń tamte pozycje'@
                     [POLWO.SYM],81)
         || FUN.emsg('Polecenie wykorzystane do generacji pozycji w kartotece wydań.'
                     '\nNajpierw należy usunąć wygenerowane pozycje.'@)
         ?}
      ?}
   |? _ask=1 & POLWO.STAT_REJ='T'
   || POLWO.STAT_REJ:='N';
      POLWO.put();
      {? _grp || KOMM.add('Wycofano rejestrację polecenia %1.'@[POLWO.SYM],38) ?}
   |? _ask=-1
   || _msg:='Brak uprawnień do wycofania rejestracji polecenia wydania %1.'@[POLWO.SYM];
      {? _grp
      || KOMM.add(_msg,81)
      || FUN.emsg(_msg)
      ?}
   ?};
   exec('blk_unlock','#table','POLWO',POLWO.ref())
?}


\czy_generowalo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WW [12.10]
:: OPIS: Czy POLWO wygenerowalo jakies pozycje w KARO
::   WY: 1/0 tek/nie, -1 - bledny parametr
::  OLD: \czy_generowalo/nadzor.fml
::----------------------------------------------------------------------------------------------------------------------
{? (_<1) || _a:=POLWO.ref() ?};
{? ref_name(_a)=POLWO.name()
||
   PWOPOZ.cntx_psh(); PWOPOZ.index('PRODZO'); PWOPOZ.prefix(_a);
   KARO.cntx_psh();
   KARO.index('PWOPOZ');
   _odp:=0;
   {? PWOPOZ.first()
   ||
      {!
      |?
         KARO.prefix(PWOPOZ.ref());
         _odp+=KARO.first();
         (_odp=0) & PWOPOZ.next()
      !}
   ?};
   KARO.cntx_pop();
   PWOPOZ.cntx_pop();
   _odp
|| -1
?}


\win_todo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Tworzy okienko akceptacji
::   WY: akronim okna
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_red:=POLWO.mk_edit('Akceptacja polecenia wydania wyposażenia'@,,'#polwo_dakc');
POLWO.win_ewin(_red,,'RED');

POLWO.win_ebtn(_red,'text=%1,align=begin,display=1'['Poz&ycje'@],"exec('btn_pwopoz','!wyp_lwp_dakc')");

_btn:=POLWO.win_ebtn(_red,'text=%1,align=end,display=1'['A&kceptuj'@],
   "_res:=exec('polwo_akcept','!wyp_lwp_dakc',POLWO.ref(),1,0,0);
   {? _res.RESULT>0 & _res.ACCEPTED>0 || 'key:F2' || '' ?}"
);
POLWO.btn_eopt(_red,_btn,'default=1');
_btn:=POLWO.win_ebtn(_red,'text=%1,align=end,display=1'['&Anuluj'@],"'key:Esc'");

_red


\btn_pwopoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [17.42]
:: OPIS: Selekcja pozycji polecenia wydania (z poziomu okna akceptacji nagłówka polecenia wydania)
::----------------------------------------------------------------------------------------------------------------------
PWOPOZ.index('PRODZOK');
PWOPOZ.prefix(POLWO.ref());
PWOPOZ.win_sel('WER');
PWOPOZ.win_edit('RED');
PWOPOZ.select(,,,'DPU:DG');
''

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 dcf38a5d7ea156827c1782d2f05e79b0fbf704247bbba657707d09de478e071b052cf2d430c596eac7c3495df53e26f35467161b00e5765d3a29c386fe6bcd5a5f43c03e8edeca5deadc8c7a6390eb3eac4cd2f971bafd7b45865b15b879128aa33b98b4d085306f734910faad8bcabc827b457a694f50883d85cd5672bc1534
