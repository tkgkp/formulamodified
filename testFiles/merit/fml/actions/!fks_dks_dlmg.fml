:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fks_dks_dlmg.fml
:: Utworzony: 19.08.2015
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Formuły czynności FKS_DKS_DLMG - Dekretacja dokumentów magazynowych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dekretacja dokumentów magazynowych - główna formuła czynności FKS_DKS_DLMG.
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS,FREJ
::# parses=exec('parses','!fks_dks_dlmg')
::# access=exec('uprawnienia','!fks_dks_dlmg')
::
:: PARAMETRY WE:
::# kind=WE, symbol=ND, type=_ND, name=Wskazanie na nagłówek dokumentu magazynowego, required=T, keyref=T

:: PARAMETRY WY:
::# kind=WY, symbol=DOK, type=_DOK, name=Wskazanie na nagłówek dokumentu księgowego, required=T
_args:=params_get();
_we:=_args.in;
_mp:=_args.mp;
_akcja:=_mp.akcja();
{? var_pres('ND',_we)
|| _wew:=_args.int;
   _wy:=_args.out;
   exec('fl_decl','dekret_aut');
   exec('dek_decl','dekret_aut');
   exec('sd_decl','dekret_aut');
   _mp.descTodo();
   _auto:=_mp.isAutoRun();
   _ref:=BB.sqlint($_we.ND); _nam:=form(($_we.ND)-8);
   {? _ref<>0 & _nam<>''
   || exec('upr_set','ceny');
      ND.cntx_psh(); ND.use(_nam); ND.prefix();
      {? ND.seek(_ref,_nam)
      || {? ND.STAT_REJ='T'
         || {? _akcja='Dekretuj'
            || _ref:=ND.ref();
               ND.cntx_psh(); exec('nd_dekret2','!fks_dks_dlmg'); ND.cntx_pop();
               {? ND.seek(_ref) & ND.ZAK='T'
               || _wy.DOK:=DOK.ref();
                  _mp.save(,_wy);
                  _mp.done()
               ?}
            |? _mp.pathTodo() | _mp.isAutoRun()
            || menu_txt(,'Popraw');
               POMOC.OKR:=SSTALE.AO;
               EKSG.ODD:=POMOC.OKR().POCZ;
               EKSG.DOD:=POMOC.OKR().KON;
               EKSG.SYS:='LMG';
               EKSG.WS:=EKSG.WT:='N';
               exec('nd_win_edit_set','dok_fks_aut_dok');
               {? _mp.isAutoRun()
               || BtnDek:=1
               || BtnDek:=0;
                  ND.display()
               ?};
               {? BtnDek & exec('nd_dekret','!fks_dks_dlmg',~_mp.pathTodo() & ~_mp.isAutoRun(),~_mp.isAutoRun())
               || _wy.DOK:=DOK.ref();
                  _mp.save(,_wy);
                  _mp.done()
               ?};
               VAR_DEL.delete('BtnDek')
            ?}
         || {? _akcja<>'Dekretuj'
            || FUN.info('Dokument magazynowy nie ma statusu "zaakceptowany".'@)
            ?}
         ?}
      || {? _akcja<>'Dekretuj'
         || FUN.info('Nie znaleziono dokumentu magazynowego.'@)
         ?};
         _wy.DOK:=null;
         _mp.save(,_wy);
         _mp.done()
      ?};
      ND.cntx_pop()
   || {? _akcja<>'Dekretuj'
      || FUN.info('Nie znaleziono dokumentu magazynowego.'@)
      ?};
      _wy.DOK:=null;
      _mp.save(,_wy);
      _mp.done()
   ?}
|| {? _akcja<>'Dekretuj'
   || FUN.info('Nie znaleziono dokumentu magazynowego.'@)
   ?};
   _wy.DOK:=null;
   _mp.save(,_wy);
   _mp.done()
?};
1


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Formuła na opis czynności na liście ToDo
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));
_desc:='Zadekretuj dokument magazynowy'@@;
{? var_pres('ND',_in)<>type_of(~~) & _in.ND<>null
|| ND.cntx_psh(); ND.use(ref_name(_in.ND)); ND.prefix();
   {? ND.seek(_in.ND)
   || _desc:='Zadekretuj dokument magazynowy: %1'@@[ND.SYM]
   ?};
   ND.cntx_pop()
?};
_desc


\nd_dekret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dekretacja dokumentu magazynowego
::   WE: _a - Pytanie o dekretowanie
::       _b - Wyśwetlać podsumowanie
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
{? ND.STAT_REJ<>'T'
|| {? _b
   || FUN.info('Nie zaakceptowano dokumentu \'%1\'.'@[ND.SYM])
   ?}
|? ~(ND.MAG=null | ND.MAG().KSG='T')
|| {? _b
   || FUN.info('Wybrany dokument nie jest dekretowany \'%1\'.'@[ND.SYM])
   ?}
|? ND.ZAK='T'
|| {? _b
   || FUN.info('Dokument \'%1\' jest już zadekretowany.'@[ND.SYM])
   ?};
   _ok:=1
|? ~_a | FUN.ask('Zadekretować dokument','',1,'Nie','Tak')
|| {? ND.r_lock(1,1)
   || {? ND.get()
      || {? exec('initWARL','dok_fks_aut_dok',SSTALE.AR,'LMG','LM')
         || exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji dokumentów magazynowych');
            ND.cntx_psh(); _ref:=ND.ref();
            exec('nd_dekret1','!fks_dks_dlmg');
            ND.cntx_pop();
            {? ND.seek(_ref) & ND.ZAK='T'
            || {? _b || FUN.info('Dokument zadekretowany.'@) ?};
               _ok:=1
            ?};
            exec('done','dok_fks_aut_dok')
         ?}
      || {? _b
         || FUN.info('Dekretowanie dokumentu nie powiodło się.\n'
                     'Nie znaleziono dokumentu \'%1\'.'@[ND.SYM])
         ?}
      ?};
      ND.r_unlock()
   || {? _b || FUN.info('Dokument obsługuje inny operator.'@) ?}
   ?}
?};
_ok


\nd_dekret1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dekretacja dokumentu magazynowego - wewnętrzna
::----------------------------------------------------------------------------------------------------------------------
exec('set_fld','dok_fks_aut_dok','O','LM');
exec('nd_dekret2','!fks_dks_dlmg')


\nd_dekret2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Dekretacja dokumentu magazynowego - wewnętrzna
::----------------------------------------------------------------------------------------------------------------------
{? exec('spr_war','dok_fks_aut_dok',SSTALE.AR,'LMG','LM',$ND.TYP)
|| exec('set_fld','dok_fks_aut_dok','N','LM');
   exec('pozycje','dok_fks_aut_dok',SSTALE.AR,'LMG','LM',$ND.TYP)
?}


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła ustala PARSES dla czynności na podstawie rekordu tabeli ND,
::       wskazanie na rekord tabeli ND jest przekazane poprzez parametr ND czynności.
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_maska:='';
_in:=params_get().in;
_out:=params_get().out;
{? var_pres('ND',_in) & var_pres('ND',_in)=type_of(null()) & _in.ND<>null()
|| _maska:=form(($_in.ND)-8);
   _ref:=BB.sqlint($_in.ND);
   ND.cntx_psh();
   ND.use(_maska);
   ND.prefix();
   {? ND.seek(_ref,_maska)
   || _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:='LMG';
      _args.DATA:=ND.D;
      __PARSES.setVal('OkresRok',_args);
      __PARSES.setVal('OddzialLogProd',ND.ODDZ);
      _result:=1
   ?};
   ND.cntx_pop()
|| _result:=1
?};
_result


\uprawnienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła na uprawnienia do danych dla czynności
::   WE: params_get().in - parametry wejściowe czynności
::           params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::           params_get().mp - Menadżer Procesów
::   WY: 0 - użytkownik nie ma niezbędnych uprawnień do danych czynności
::       1 - użytkownik ma uprawnienia do dancyh czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_user:=params_get().user;
_mp:=params_get().mp;

_result:=0;
USERS.cntx_psh();
USERS.clear();
{? USERS.seek(_user)
|| {? exec('usr_fjks_any','b_perm',USERS.ref())
   || _result:=1
   ?}
?};
USERS.cntx_pop();
_result


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [19.02]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::       [_b] - tablica z parametrami wejściowymi
::   WY: obj_new() - obiekt wynikowy
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};

{? var_pres('_b')>100
|| _we:=_b
|| _we:=params_get().in
?};

_can_continue:=1;
_obj:=obj_new('RESULT','ND');
_obj.RESULT:=0;
_obj.ND:=null();

_wy:=_mp.load(exec('kind_out','#b_port'));
_keyRefs:=_mp.getRefs();
{? obj_len(_keyRefs)>0
|| {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];
      {? type_of(_kref)>0
      || {? 5+ref_name(_kref)='nagdo'
         || _obj.ND:=exec('FindAndGet','#table',ND,_kref,,,null());
            {? _obj.ND=null()
            || _can_continue:=0;
               _wy.DOK:=null;
               _mp.save(,_wy);
               _mp.done()
            ?}
         ?}
      ?}
   !}
?};

{? _can_continue>0
||
:: jest parametr wejściowy FAKS
   {? _obj.ND=null() & var_pres('ND',_we)=type_of(null())
   || _obj.ND:=_we.ND
   ?}
?};

{? _can_continue>0
||
   {? _obj.ND=null()
   ||
::    Nie było key refa ani parametru wejściowego, robię error
      _can_continue:=0;
      _msg:='Dokument nie został przekazany do czynności.'@;
      {? _mp.isService()=0 & _mp.CLEANER=0
      || {? _mp.isGroup()
         || KOMM.add(_msg,2,,1)
         || FUN.emsg(_msg)
         ?}
      ?};
      _mp.error(_msg)
   ?}
?};

{? _can_continue>0
|| _obj.RESULT:=1
?};
_obj

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:40 26c5ce203d16d83d991a19c157aa4bf4017fcb006a394070aac31671b89686f351b55ea8da2bf9b1535b3e08917a60042515fe69209d23319f93da287ff25db2c49eea11911aebf8ca81025fab6a2d417c8997b81588e3d45a4c6fa3bb509bf0a0cd16f9230a024d9ca446a1120768aeaa2289ae9a8b918300f674ebcc0d806e
