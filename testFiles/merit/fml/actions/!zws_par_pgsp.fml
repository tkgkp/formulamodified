:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_pgsp.fml
:: Utworzony: 26.02.2020
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Formuły czynności ZWS_PAR_PGSP - Grupy składników płacowych.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Grupy składników płacowych - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('MBJAR','#object');
exec('__RUB','object');

_tabs:=obj_new('nr','ref1','ref2');
_tabs.nr:=1;

params_set(
   'tabs',_tabs
);

GSXM.cntx_psh();
GSXM.index('VIEW');
GSXM.prefix('GSPN',);
GSXW.cntx_psh();
GSPP.cntx_psh();
GSPP.index('GSPNRN');
GSPP.win_edit('RED');
GSPN.cntx_psh();
GSPN.prefix(exec('ref_firma','ustawienia'));
GSPN.win_sel(exec('gspn_wnd','!zws_par_pgsp'));
GSPN.win_edit('RED');
GSPN.win_patt('SZUK');
GSPN.dnd_sel('WER',,'records.GSPN',"exec('gspn_dnd','!zws_par_pgsp')");
GSPN.dnd_sel('WER',,'records.GSPP',"exec('gspn_dnd','!zws_par_pgsp')");
GSPN.select();
GSPN.dnd_sel('WER',,'records.GSPP',"");
GSPN.dnd_sel('WER',,'records.GSPN',"");
GSPN.f_clear();
GSPN.cntx_pop();
GSPP.cntx_pop();
GSXW.cntx_pop();
GSXM.cntx_pop();
~~


\gspn_wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła buduje okno grupowe do obsługi grup składników płacowych.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_mode:='maximized_with_title';

_grp:=GSPN.grp_make('Definicja grup składników płacowych'@,,'#gspgrp',,,,,'maximized');

:: I-sza zakładka
GSPN.grp_sel(_grp,GSPN,'WER','Grupy'@,
   "  params_set(params_get());
      grp_disp(GSPP,'WER');
      grp_disp(GSXW,'WER4GV')
   ",,,
   20,
   "  {? _a
      || _tabs:=params_get().tabs;
         {? _tabs.nr<>1
         || _tabs.nr:=1;
::          W ramach obsługi II-giej na tabelę GSPN zakładany jest filtr - upewnijmy się, że tutaj będzie wyłączony.
            GSPN.f_clear();
            GSPN.index('LP');
            GSPN.prefix(exec('ref_firma','ustawienia'));
::          Ustawienie / przywrócenie aktywnego rekordu (tabela GSPN występuje na obu zakładkach).
            {? _tabs.ref1=~~
            || GSPN.first()
            || GSPN.seek(_tabs.ref1)
            ?}
         ?}
      ?}
   ",
   "  {? _a
::       Zapamiętanie aktywnego rekordu tabeli GSPN na bieżącej zakładce.
      || _tabs:=params_get().tabs.ref1:=GSPN.ref()
      ?}
   ",,,
   _mode
);
GSPN.tab_splt(_grp,,'horizontal','gspp');
GSPN.grp_sel(_grp,GSPP,'WER',,,,,,
   "  {? grp_empty(GSPN,'WER')
      || return('#disable')
      ?};
      GSPP.prefix(GSPN.ref())
   ",,,,
   _mode
);
GSPN.tab_splt(_grp,'gspp','vertical','gspw',',66%');

GSPN.grp_sel(_grp,GSXW,'WER4GV',,,,,,
   "  {? grp_empty(GSPN,'WER')
      || return('#disable')
      ?};
      GSXW.index('OPIS');
      GSXW.prefix(GSPN.FIRMA,GSPN.uidref())
   ","GSXW.prefix()",,,
   _mode
);

:: II-ga zakładka
GSPN.grp_sel(_grp,GSXM,'WER','Widoki'@,
   "  params_set(params_get());
      grp_disp(GSPN,'VIEW')
   ",,,,
   "  {? _a
      || _tabs:=params_get().tabs;
         {? _tabs.nr<>2
         || _tabs.nr:=2;
::          Ustawienie / przywrócenie aktywnego rekordu (tabela GSXM występuje na obu zakładkach).
            {? _tabs.ref2=~~
            || GSXM.first()
            || GSXM.seek(_tabs.ref2)
            ?};
            GSPN.first()
         ?}
      ?}
   ",
   "  {? _a
::       Zapamiętanie aktywnego rekordu tabeli GSPN na bieżącej zakładce.
      || _tabs:=params_get().tabs.ref2:=GSXM.ref()
      ?}
   ",,,
   _mode
);
GSPN.tab_splt(_grp,,'vertical','gspw',',33%');
GSPN.grp_sel(_grp,GSPN,'VIEW',,,,,,
   "  {? grp_empty(GSXM,'WER')
      || return('#disable')
      ?};
      {? ~_a
      || GSPN.sel_adel()
      ?};
      GSPN.prefix();
      GSPN.f_set('LP',,
         '""GSPN"".FIRMA=:_a and '
         '('':'' || ""GSPN"".%1 || ""GSPN"".REFERENCE) in (select GSXW.N from GSXW where GSXW.GSXM=:_b)'
         [GSPN.idadd_acr()],
         exec('ref_firma','ustawienia'),GSXM.ref()
      );
      ~~
   ",,,,
   _mode
);

_grp


\gspn_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli GSPN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('gspn_chk','!zws_par_pgsp',0)
:: Sprawdzenie wypełnienia wymaganych pól powiodło się - zajmijmy się polem LP. Zakładamy, że jego wartość jest
:: poprawna. Należy jedynie zrobić dla niego miejsce.
|| exec('add_before','#order',GSPN,'LP','LP',GSPN.LP,GSPN.FIRMA)
?}


\gspn_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli GSPN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('gspn_chk','!zws_par_pgsp',1)


\gspn_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Usuń - przed" dla tabeli GSPN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? GSPN.SYSTEM='T'
|| undo('(GSPN) Zapis systemowy. Usunięcie niemożliwe.'@);
   return(0)
?};
exec('del_ndx','#table',GSXW,'N',GSPN.FIRMA,GSPN.uidref()) &
exec('del_ndx','#table',GSPP,'GSPNR',GSPN.ref())


\gspn_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Usuń - po" dla tabeli GSPN.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};
:: Przenumerowanie elementów.
exec('del_after','#order',GSPN,'LP','LP',bfld('LP'),bfld('FIRMA'));
~~


\gspn_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli GSPN.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po" (tutaj: wywoływana
::       bezpośrednio z akcji "Dołącz" i "Popraw").
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
{? ~_put
:: Ponieważ indeks po polu LP jest unikalny, to na czas weryfikacji unikalności zadbajmy o nią ręcznie (wartość -1 nie
:: powinna wystąpić w "normalnej" eksploatacji).
|| _lp:=-1;
   GSPN.LP==_lp
?};

_ret:=__CHK.validate(GSPN,
   $("_a.table(_b,"+$_put+",,'FIRMA','SYSTEM','SYMBOL','TYTK','TYTW','KAT')"),
   $("{? ',$NETTO,$BRUTTO,'*(',%1,' [_b.SYMBOL]) | exec('valid_acronim','#string',~-_b.SYMBOL)
:: Formuła \\valid_acronim/#string.fml dopuszcza jedynie wielkie litery. Ponieważ na portalu mogą być również małe,
:: to na czas weryfikacji zamieńmy wszystkie na duże.
      || 1
      || _a.err_fld(_b,'SYMBOL',1,'"+
            'Symbol musi rozpoczynać się od wielkiej litery.\n'
            'Może zawierać wyłącznie litery, cyfry i znak podkreślenia.'@+"'
         );
         'SYMBOL'
      ?}
   "),
   "  {? _b.KOLOR=''
      || ''
      |? (_msg:=exec('valid_rgb_dec','#color',_b.KOLOR,1))<>''
      || _a.err_fld(_b,'KOLOR',1,_msg)
      || ''
      ?}
   ",
   "_a.in_set(_b,'SYSTEM',,'T','N')",
   "_a.in_set(_b,'KAT',,'I','+','-','X')"
);
{? ~_put
:: Przywracamy pierwotną wartość.
|| GSPN.LP==_lp
?};
_ret


\gspn_symbol_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Przed redagowaniem pola GSPN.SYMBOL.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
GSPN.SYSTEM<>'T' & ~(-menu_txt()='popraw' & exec('get_id','#sync_id','PORTAL_GSPN_ID',GSPN.uidref(),,1).first())


\gspn_kolor_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Przed wyświetleniem" dla pola GSPN.KOLOR.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'%1,%1' [GSPN.KOLOR]


\gspn_kolor_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "F3" dla pola GSPN.KOLOR.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('edit_color','#edit',GSPN.KOLOR)


\gspn_akcje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Funkcja dla bieżącego rekordu tabeli GSPN określa dostępność akcji w oknie wertowania.
::   WE:
::   WY: Tablica z elementami nazwanymi.
::----------------------------------------------------------------------------------------------------------------------
_akcje:=obj_new('usun','wyzej','nizej');
{! _lp:=1 .. obj_len(_akcje)
:: Wstępnie - wszystkie akcje są niedostępne.
|! _akcje[_lp]:=0
!};

{? GSPN.get()
|| _akcje.usun:=GSPN.SYSTEM<>'T';
   GSPN.cntx_psh();
   GSPN.index('LP');
   GSPN.prefix(GSPN.FIRMA);
   _lp:=GSPN.LP;
   _akcje.wyzej:=GSPN.find_key(_lp-1);
   _akcje.nizej:=GSPN.find_key(_lp+1);
   GSPN.cntx_pop()
?};

_akcje


\gspn_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Dołącz - przed" w oknach wertowania tabeli GSPN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dolacz','#order','LP','before',,"exec('gspn_chk','!zws_par_pgsp',0)")


\gspn_dolaczza_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Dołącz za - przed" w oknach wertowania tabeli GSPN.
::       Dołączany rekord zostanie umieszczony PO bieżącym, musi zatem otrzymać numer o 1 większy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dolacz','#order','LP','after',,"exec('gspn_chk','!zws_par_pgsp',0)")


\gspn_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Popraw - przed" w oknach wertowania tabeli GSPN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? GSPN.edit("exec('gspn_chk','!zws_par_pgsp',1)")
|| GSPN.put()
?}


\gspn_usun_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Usuń - grupa przed" w oknach wertowania tabeli GSPN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
sel_nchk();
exec('del_ask','#table')


\gspn_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Usuń - przed" w oknach wertowania tabeli GSPN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_grp:=GSPN.sel_size();
{? GSPN.SYSTEM='T'
|| {? ~_grp
   || FUN.info('Zapis systemowy. Usunięcie niemożliwe.'@)
   ?}
|? exec('opis_uzyty','#sync_id','PORTAL_O_P_ID',GSPN.uidref(),'^')
|| {? ~_grp
   || FUN.info('Zapis użyty na portalu. Usunięcie niemożliwe.'@)
   ?}
|? _grp | exec('del_ask','#table')
|| GSPN.del()
?}


\gspn_wyzej_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Przesuń wyżej" w oknach tabeli GSPN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('gspn_akcje','!zws_par_pgsp').wyzej
|| melody();
   return()
?};
exec('przesun','#order','LP','W')


\gspn_nizej_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Przesuń niżej" w oknach tabeli GSPN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('gspn_akcje','!zws_par_pgsp').nizej
|| melody();
   return()
?};
exec('przesun','#order','LP','N')


\gspn_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Rekord - przed" w oknie WER i VIEW tabeli GSPN.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _ws:=cur_win(1,1);
   {? _ws='WER'
   || _akcje:=exec('gspn_akcje','!zws_par_pgsp');
      _ha:='';
      {? ~GSPN.sel_size() & ~_akcje.usun
      || _ha+='U'
      ?};
      {? ~_akcje.wyzej | ~_akcje.nizej
      || _ha+='E('+{? ~_akcje.wyzej || 'W' || '' ?}+{? ~_akcje.nizej || 'N' || '' ?}+')'
      ?};
      GSPN.actions_grayed(_ws,_ha)
   |? _ws='VIEW'
   || _ha:=':';
      {? GSXM.MAX>0
      || GSXW.cntx_psh();
         GSXW.index('GSXM');
         GSXW.prefix(GSXM.ref(),GSPN.FIRMA);
         _size:=GSXW.size();
         GSXW.cntx_pop();
         {? GSXM.MAX<=_size
         || _ha:='D'
         ?}
      ?};
      GSPN.actions_grayed(_ws,_ha)
   ?}
?};
0


\gspn_dnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa drag&drop w oknach tabeli GSPN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: Numery przenoszonych rekordów (REF, CRC, POS).
_SRC:=dnd_info('dropped_records');
{? type_of(_SRC)=type_of(~~)
|| return(0)
?};

:: Złączenie do rekordu, nad którym upuszczono przenoszone rekordy
:: lub null() dla upuszczenia poza wierszami z rekordami.
_dest:=dnd_info('dest_record');

:: Maska, z której pochodzą przenoszone rekordy.
_name:=dnd_info('table_name');

{? _name=GSPN.name() & FUN.ask('Zmiana kolejności grup.'@+'\n'+'Kontynuować?'@)
:: Zmiana kolejności grup.
|| _firma:=exec('ref_firma','ustawienia');
   GSPN.cntx_psh();
   GSPN.index('LP');
   GSPN.prefix(_firma);
   do();
   {? GSPN.last() & (_dest=null() | _dest=GSPN.ref())
::    Upuszczane rekordy (poza wierszami lub nad ostatnim) znajdą się na końcu.
   || _min:=_lp:=GSPN.LP+1;
      _loop:=_SRC.first();
      {!
      |? _loop
      |! {? GSPN.seek(_SRC.REF,)
         || {? _min>GSPN.LP
            || _min:=GSPN.LP
            ?};
            GSPN.LP:=_lp;
            _lp+=GSPN.put()
         ?};
         _loop:=_SRC.next()
      !};
      exec('del_after','#order',GSPN,'LP','LP',_min,_firma)

::    Sprawdzamy, czy upuszczenie miało miejsce na zaznaczone rekordy (i doszłoby do zapętlenia).
   |? _SRC.cntx_psh();
      _SRC.index(_SRC.ndx_tmp(,,'REF',,));
      _loop:=_SRC.find_key(_dest);
      _SRC.cntx_pop();
      _loop
   || melody()

   || _min:=~~;
      {? _SRC.first()
      || {!
         |? {? GSPN.seek(_SRC.REF)
            || {? _min=~~ | _min>GSPN.LP
               || _min:=GSPN.LP
               ?};
               _SRC.next()
            ?}
         !}
      ?};
      _lp:={? GSPN.seek(_dest) || GSPN.LP || ~~ ?};

      {? _min=~~ | _lp=~~
::       Coś poszło nie tak ...
      || undo();
         melody()

      ||
::       Jeżeli choć jeden z upuszczonych rekordów ma LP mniejsze niż LP rekordu _dest, to rekordy należy dodawać
::       PO _dest, w przeciwnym razie PRZED _dest. Innymi słowy: upuszczony rekord uzyska numer rekordu źródłowego
::       lub o 1 większy.
         _start:=_lp+(_min<_lp);
::       Przygotowanie miejsca na upuszczone rekordy.
         {? GSPN.last()
         || _size:=_SRC.size();
            {!
            |? {? GSPN.LP>=_start
               || GSPN.LP+=_size;
                  GSPN.put();
                  GSPN.prev()
               ?}
            !}
         ?};
::       Właściwe przenoszenie rekordów.
         {? _SRC.first()
         || {!
            |? {? GSPN.seek(_SRC.REF,)
               || GSPN.LP:=_start;
                  _start+=GSPN.put()
               ?};
               _SRC.next()
            !}
         ?};
::       I przenumerowanie - usunięcie wolnych miejsc po przeniesionych rekordach.
         exec('del_after','#order',GSPN,'LP','LP',_min,_firma)

      ?}
   ?};
   {? ~end()
   || melody()
   ?};
   GSPN.cntx_pop()

|? _name=GSPP.name() & FUN.ask('Zmiana grupy dla zaznaczonych składników płacowych.'@+'\n'+'Kontynuować?'@)
:: Przenoszenie składników między grupami.
|| {? _dest=null()
   || melody()
   |? _SRC.first()
   || GSPP.cntx_psh();
      GSPP.prefix();
      {!
      |? {? GSPP.seek(_SRC.REF,)
         || {? GSPP.GSPN=_dest
            || melody()
            || GSPP.GSPN:=_dest;
               GSPP.put()
            ?}
         ?};
         _SRC.next()
      !};
      GSPP.cntx_pop()
   ?}
?};

~~


\gspp_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Dołącz - przed" dla tabeli GSPP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('gspp_modb','!zws_par_pgsp') & exec('gspp_chk','!zws_par_pgsp',0)


\gspp_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.14]
:: OPIS: Wyzwalacz "Dołącz - po" dla tabeli GSPP.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};
exec('gswn_update','!zws_par_pgsp',GSPP.FIRMA,GSPP.R);
~~


\gspp_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wyzwalacz "Popraw - przed" dla tabeli GSPP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('gspp_modb','!zws_par_pgsp') & exec('gspp_chk','!zws_par_pgsp',1)


\gspp_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.14]
:: OPIS: Wyzwalacz "Popraw - po" dla tabeli GSPP.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};
{? bfld('FIRMA')<>GSPP.FIRMA | bfld('R')<>GSPP.R
:: Zmiana firmy nie powinna mieć miejsca, ale na wszelki wypadek ...
|| exec('gswn_update','!zws_par_pgsp',bfld('FIRMA'),bfld('R'));
   exec('gswn_update','!zws_par_pgsp',GSPP.FIRMA,GSPP.R)
?};
~~


\gspp_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.14]
:: OPIS: Wyzwalacz "Usuń - po" dla tabeli GSPP.
::   WE: _a [INTEGER] - Wynik właściwej operacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};
exec('gswn_update','!zws_par_pgsp',bfld('FIRMA'),bfld('R'));
~~


\gspp_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól w tabeli GSPP.
::       Wykorzystywana w wyzwalaczach "Dołącz - przed" i "Popraw - przed" oraz akcji "Rekord - po".
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw.
::----------------------------------------------------------------------------------------------------------------------
_put:=var_pres('_a')=type_of(0) & _a;
:: Pole FIRMA uzupełniane automatycznie na podstawie GSPN.FIRMA.
__CHK.validate(GSPP,
   $("_a.table(_b,"+$_put+",,'GSPN','R','MINUS')"),
   "_a.in_set(_b,'MINUS',,'T','N')"
)


\gspp_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli GSPP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? GSPP.GSPN
|| GSPN.cntx_psh();
   GSPN.prefix();
   GSPP.FIRMA:=GSPP.GSPN().FIRMA;
   GSPN.cntx_pop()
?};
1


\gspp_gspn_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Wartość początkowa pola GSPP.GSPN.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
GSPN.ref()


\gspp_dolacz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Dołącz - przed" w oknach wertowania tabeli GSPP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
R.cntx_psh();
R.index('RUBKOD');
R.prefix();
R.f_set('RN',,'"R".REFERENCE not in (select GSPP.R from GSPP where GSPP.FIRMA=:_a)',exec('ref_firma','ustawienia'));
GSPP.blank();
{? GSPP.edit("exec('gspp_chk','!zws_par_pgsp',0)")
|| GSPP.add()
?};
R.f_clear();
R.cntx_pop();
~~


\gspp_popraw_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Obsługa akcji "Popraw - przed" w oknach wertowania tabeli GSPP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
R.cntx_psh();
R.index('RUBKOD');
R.prefix();
R.f_set('RN',,'"R".REFERENCE not in (select GSPP.R from GSPP where GSPP.R<>:_a)',GSPP.R);
{? GSPP.edit("exec('gspp_chk','!zws_par_pgsp',1)")
|| GSPP.put()
?};
R.f_clear();
R.cntx_pop();
~~


\gswn_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.14]
:: OPIS: Aktualizacja definicji elementów warunków współpracy po zmianach listy składników w grupach składników
::       płacowych.
::   WE: _a [REFERENCE] - Firma.
::       _b [REFERENCE] - Rubryka.
::   WY: 0 - Błędne parametry wywołania.
::       1 - Parametry wywołania poprawne.
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) & _a<>null() & ref_tab(_a)=FIRMA
|| _firma:=_a
|| return(0)
?};
{? var_pres('_b')=type_of(null()) & _b<>null() & ref_tab(_b)=R
|| _rref:=_b
|| return(0)
?};

BNFTT.cntx_psh();
BNFTT.index('FR');
BNFTT.prefix(_firma,_rref);
{? BNFTT.first()
|| GSWN.cntx_psh();
   GSWN.index('BNFTT');
   GSWN.prefix(BNFTT.FIRMA,BNFTT.ref());
   {? GSWN.first()
   || GSWN.put(,1)
   ?};
   GSWN.cntx_pop()
?};
BNFTT.cntx_pop();

1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:41 4c5f339222154002dad073d6cf1b6eef8afdc2355c53cfbac722c0601063b600e9e2bd0fbaac5dd761854cdc26395238960f2050ea0c0a5b2ebfe4eb866a37fd701a701125f26cff80b8a5667544254bb19c3977c428350038a100a0eea08672b8aba3e14d763215c38e17c37a9fb5df03c797af036f19487e7d2f46a370d719
