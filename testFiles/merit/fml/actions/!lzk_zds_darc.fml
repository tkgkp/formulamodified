:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lzk_zds_darc.fml
:: Utworzony: 21.09.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: Formuły czynności LZK_ZDS_DARC - Archiwizacja zamówienia dostaw
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ,LZK
::# kind=WE, symbol=ZD_NAG,  type=_ZD_NAG, name=Zamówienie dostaw,                  required=N,    keyref=T
::# kind=WE, symbol=DNI,     type=NUMBER,  name=Ilość dni wstecz do archiwizacji,   required=N
::# kind=WE, symbol=PROCENT, type=NUMBER,  name=Procent realizacji do archiwizacji, required=N
::# kind=WE, symbol=ODDZIAL, type=STRING,  name=Kod oddziału do archiwizacji,       required=N,    fml_val="exec('oddzial','!lzk_zds_darc')"
::# kind=WE, symbol=MAXZAM,  type=NUMBER,  name=Maksymalna liczba do archiwizacji,  required=N
::# kind=WY, symbol=ZD_NAG,  type=_ZD_NAG, name=Zamówienie dostaw,                  required=N,    keyref=T
::# kind=WY, symbol=IL_SERV, type=NUMBER,  name=Ilość zarchiwizowanych zamówień,    required=N,    keyref=N
::# properties=SERVICE

_mp:=params_get().mp;
_in:=params_get().in;
_out:=params_get().out;

{? var_pres('DNI',_in)<>type_of(0) | _in.DNI<0
|| _in.DNI:=-1;
   _mp.save('IN')
?};
{? var_pres('PROCENT',_in)<>type_of(0) | _in.PROCENT<0 | _in.PROCENT>100
|| _in.PROCENT:=-1;
   _mp.save('IN')
?};
{? var_pres('MAXZAM',_in)<>type_of(0) | _in.MAXZAM<=0
|| _in.MAXZAM:=-1;
   _mp.save('IN')
?};
_typ_oddzial:=var_pres('ODDZIAL',_in)<>type_of('');
{? _typ_oddzial | (+_in.ODDZIAL)>1 | ~exec('isLetter','#string',_in.ODDZIAL,1)
|| _in.ODDZIAL:={? _typ_oddzial || '' || '!' ?};
   _mp.save('IN')
?};
_max:=_in.MAXZAM;

exec('init_zds','lzk');

:: WSTĘPNE WALIDACJE
_clean_result:=params_exec('clean','!lzk_zds_darc',_mp,_in);
_can_continue:=_clean_result.RESULT;
{? _can_continue=0
|| return()
?};

_akcja:=_mp.akcja();
_auto:=_akcja<>'Archiwizuj' & _mp.isAutoRun();
_service:=_mp.isService();
_grupa:=_mp.isGroup();

{? _service & ((_in.DNI<0 & _in.PROCENT<0) | _in.ODDZIAL='!')
|| _mp.error('Nieprawidłowe parametry dla czynności serwisowej.')
|? ~_service & ~(var_pres('ZD_NAG',_in)=type_of(null()) & _in.ZD_NAG)
|| _mp.error('Brak wymaganego parametru ZD_NAG.')
|| ZD_NAG.cntx_psh();
   ZD_NAG.prefix();
   _ok:=1;
   {? ~_service
   || ZD_NAG.use(ref_name(_in.ZD_NAG));
      ZD_NAG.prefix();
      {? ~ZD_NAG.seek(_in.ZD_NAG)
      || _ok:=0;
         _mp.error('Nie znaleziono zamówienia dostaw.')
      ?}
   ?};

   {? _ok
   || _mp.trigRef('ZD_NAG',,1,,exec('kind_out','#b_port'),'ZD_NAG');
      params_set('mp',_mp,'in',_in,'out',_out);
      {? _akcja='Archiwizuj' | _auto | _service
      || exec('archiwizuj','!lzk_zds_darc',{? _service || 2 || _auto ?},_in.DNI,_in.PROCENT,_in.ODDZIAL,_grupa,_max)
      |? _mp.pathTodo() | _mp.pathArea() & _akcja=''
      || _win_red:=exec('zdnag_win_edit','zamdst_nag','RED');
         _ff:="params_exec('zdnag_pozycje_todo','!lzk_zds_darc')";
         ZD_NAG.win_ebtn(_win_red,'text=&Pozycje,btn_label_align=center,panel=bottom,align=begin,display=1',_ff);
         _ff:="params_exec('zdnag_archiwum_todo','!lzk_zds_darc'); 'key:Esc'";
         ZD_NAG.win_ebtn(_win_red,'text=Arc&hiwizuj,btn_label_align=center,panel=bottom,align=end,display=1',_ff);
         _ff:="'key:Esc'";
         ZD_NAG.win_ebtn(_win_red,'text=&Anuluj,btn_label_align=center,panel=bottom,align=end,display=1',_ff);
         ZD_NAG.win_edit(_win_red);
         ZD_NAG.display()
      || _mp.error('Nieobsługiwana ścieżka.')
      ?}
   ?};
   ZD_NAG.cntx_pop()
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));

{? var_pres('ZD_NAG',_in)<>type_of(~~) & _in.ZD_NAG
|| 'Zarchiwizuj zamówienie dostaw: %1'@@[exec('record','#to_string',_in.ZD_NAG)]
|| ''
?}


\zdnag_archiwizuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienie dostaw - Archiwizuj
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_tab:=ZD_NAG.sel_aget();
ZD_NAG.sel_adel();

{? _tab.size()
|| _ok:=FUN.ask('Ilość zamówień do archiwizacji: %1.\n'
                'Operacja może być czasochłonna.\n\nCzy kontynuować?'@[$_tab.size()])
|| _ok:=2
?};

{? _ok=2
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='LZK_ZDS_DARC';
   _params.UIDREF:=ZD_NAG.uidref();
   _params.AKCJA:='Archiwizuj';
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZD_NAG',ZD_NAG.ref());
   exec('mp_run','#b__box',_params)
|? _ok=1
|| exec('ini_kom','#message','Archiwizacja zamówień'@);
   KOMM.init(250,,'Archiwizacja zamówień - menadżer procesów');
   ZD_NAG.cntx_psh();
   _tab.clear();
   {? _tab.first()
   || {!
      |? {? (ZD_NAG.clear(); ZD_NAG.seek(_tab.REF,))
         || _params:=exec('mp_run_a','#b__box');
            _params.ACT_UID:='LZK_ZDS_DARC';
            _params.UIDREF:=ZD_NAG.uidref();
            _params.AKCJA:='Archiwizuj';
            _params.GRUPA:='T';
            _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
            exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZD_NAG',ZD_NAG.ref());
            exec('mp_run','#b__box',_params);
            obj_del(_params)
         ?};
         _tab.next()
      !}
   ?};
   ZD_NAG.cntx_pop();
   exec('end_kom','#message');
   KOMM.select()
?};
obj_del(_tab)


\zdnag_archiwum_todo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Dokument sprzedaży - Archiwizuj z todo
::   WE: params_get()   - ustawiane w exec('main','!lzk_zds_darc')
::----------------------------------------------------------------------------------------------------------------------
params_exec('archiwizuj','!lzk_zds_darc');
''


\zdnag_pozycje_todo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienie dostaw - Pozycje z todo
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
exec('zd_poz','zamdst_poz',0);
''


\archiwizuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienie dostaw - Archiwizacja zamówienia dostaw
::   WE: [_a] - 1-automatycznie 0-nie(domyślnie) 2-serwisowa
::       [_b] - ilość dni wstecz
::       [_c] - procent realizacji zamówienia
::       [_d] - oddzial lub pusty string
::       [_e] - czy grupa rekordów
::       [_f] - maksymalna liczba zamówień do pojedynczej archiwizacji
::       params_get()
::  OLD: \zd_arch/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_auto:={? var_pres('_a')=type_of(1) || _a || 0 ?};
_dni:={? var_pres('_b')=type_of(1) || _b || 0 ?};
_procent:={? var_pres('_c')=type_of(1) || _c || 0 ?};
_oddzial:={? var_pres('_d')=type_of('') || _d || '' ?};
_grupa:={? var_pres('_e')=type_of(0) || _e || 0 ?};
_maxzam:={? var_pres('_f')=type_of(0) & _auto=2 || _f || -1 ?};

_mp:=params_get().mp;
_in:=params_get().in;
_out:=params_get().out;

_result:=0;

_txt:={? _auto<>2 & ZD_NAG.OBI_POW<>''
      || '\n\nUwaga. Zamówienie powiązane z dokumentem w obiegu.'@
      || ''
      ?};
{? _auto=2
||
:: czynność serwisowa
   exec('openzd_psh','open_tab');
   _oddz:=ST.ODDZ;
   _today:=date();
   ODDZ.cntx_psh();
   ODDZ.index('KOD2');
   {? _oddzial<>'' || ODDZ.prefix(_oddzial,) || ODDZ.prefix() ?};
   {? ODDZ.first()
   || {!
      |? ST.ODDZ:=ODDZ.KOD;
         exec('openzd','open_tab',ODDZ.KOD+'__');
         ZD_NAG.cntx_psh();
         ZD_NAG.index('SYM');
         ZD_NAG.prefix();
         {? ZD_NAG.first()
         || {!
            |? _ref:=ZD_NAG.ref();
               _oki:=ZD_NAG.next();
               ZD_NAG.cntx_psh();
               ZD_NAG.clear();
               {? (#_ref)>0 & ZD_NAG.r_lock(1,1,1,#_ref,ref_name(_ref)) & (ZD_NAG.seek(_ref);ZD_NAG.r_unlock();1)
                 & {? _dni>=0 || ZD_NAG.DATA<=(_today-_dni) || 1 ?} & {? _procent>=0 || ZD_NAG.PR>=_procent || 1 ?}
               || _old:=ZD_NAG.uidref();
                  _result+=(_new:=exec('zd_arch','!lzk_zds_darc'))<>'';
                  exec('uidref_update','#b__box',_old,exec('FindAndGet','#table',ZD_NAG,_new,,"uidref()",''));
                  {? _new<>''
                  ||
::                   Uruchamian cleanera - czyszcze pozostałe po zamówieniu zadania na TODO
                     exec('clean_record','#b__box',exec('FindAndGet','#table',ZD_NAG,_new,,"uidref()",''),0)
                  ?}
               ?};
               ZD_NAG.cntx_pop();
               _oki & (_maxzam<=0 | _result<_maxzam)
            !}
         ?};
         ZD_NAG.cntx_pop();
         ODDZ.next()
      !}
   ?};
   ODDZ.cntx_pop();
   exec('openzd_pop','open_tab');
   ST.ODDZ:=_oddz;
   _out.ZD_NAG:=null();
   _out.IL_SERV:=_result;
   _mp.save(,_out);
   _mp.done()
|? _auto | _grupa | FUN.ask('Zarchiwizować zamówienie dostaw %1%2 '@[ZD_NAG.SYM,_txt])
|| _old:=ZD_NAG.uidref();
   _new:=exec('zd_arch','!lzk_zds_darc',_grupa);
   ZD_NAG.cntx_psh();
   {? _new<>''
   || _result:=1;
      exec('uidref_update','#b__box',_old,exec('FindAndGet','#table',ZD_NAG,_new,,"uidref()",''));
::     Uruchamian cleanera - czyszcze pozostałe po zamówieniu zadania na TODO
      exec('clean_record','#b__box',exec('FindAndGet','#table',ZD_NAG,_new,,"uidref()",''),0);
      _out.ZD_NAG:=exec('FindAndGet','#table',ZD_NAG,_new,,,null())
   ?};
   _out.IL_SERV:=_result;
   _mp.save(,_out);
   ZD_NAG.cntx_pop();
   _mp.done()
?};
_result


\zd_arch
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: archiwizacja zamowien dostaw
::   WE: [_a] - czy grupa rekordów 1-tak 0-nie (domyślnie)
::   WY: ref sql-owy zamówienia lub pusty string
::  OLD: \zd_arch/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_msgs:={? _>0 & type_of(_a)=1 || _a || 0 ?};

_result:='';
_do_state:=do_state();
ZD_NAG.cntx_psh();
ZD_POZ.cntx_psh();
ZD_RN.cntx_psh();
ZD_RP.cntx_psh();
{? var_pres('__il_zzam')=1 || __il_zzam+=1 ?};
{? (ZD_NAG.name()+3)=(ST.ODDZ+'__')
|| {? exec('zam_lock','zamdst_nag') & ZD_NAG.r_lock(1,1,1)
   ||
      _ref:=ZD_NAG.ref;
      _sym:=ZD_NAG.SYM;
      ZD_NAG.cntx_psh();
      ZD_NAG.clear();
      {? _do_state=0 || do() ?};
      _result:=exec('one_zamd','!lzk_zds_darc',ZD_NAG.ref,ZD_NAG.EZAPOT,ZD_NAG.OBI_POW);
      {? _result<>'' & _msgs
      || exec('add_kom','#message'
          ,'Zamówienie %1 przeniesiono do archiwum.'@[_sym]
          ,1,'Archiwizacja zamówień',__lp+=1)
      ?};
      {? var_pres('__il_pzam')=1 || __il_pzam+=1 ?};
      {? _do_state=0 || end() ?};
      ZD_NAG.cntx_pop();
      ZD_NAG.r_unlock()
   ?}
|| {? {? ~_msgs
      || FUN.ask('Przywrócić status aktywności danego zamówienia?'
                 '\n\nUWAGA - Pozycje zamówienia zostaną rozpisane'
                 '\nwg nowej kolejności.'@) & exec('zam_lock','zamdst_nag') & ZD_NAG.r_lock(1,1,1)
      || exec('zam_lock','zamdst_nag') & ZD_NAG.r_lock(1,1,1)
      ?}
   ||
      _sym:=ZD_NAG.SYM;
      ZD_NAG.cntx_psh();
      {? _do_state=0 || do() ?};
      _result:=exec('one_zamd','!lzk_zds_darc',ZD_NAG.ref,ZD_NAG.EZAPOT,ZD_NAG.OBI_POW);
      {? _result<>'' & _msgs
      || exec('add_kom','#message'
          ,'Zamówienie %1 przywrócono z archiwum.'@[_sym]
          ,1,'Przywrócenie zamówień',__lp+=1)
      ?};
      {? var_pres('__il_pzam')=1 || __il_pzam+=1 ?};
      {? _do_state=0 || {? ~end() || _result:='' ?} ?};
      ZD_NAG.cntx_pop();
      ZD_NAG.r_unlock()
   ?}
?};
ZD_NAG.cntx_pop();
ZD_POZ.cntx_pop();
ZD_RN.cntx_pop();
ZD_RP.cntx_pop();
_result


\one_zamd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: przeniesienie jednego zamowenia dostaw
::   WE:  _a - ZD_NAG.ref
::        _b - ref SQL-owy EDOKUM
::        _c - ZD_NAG.OBI_POW
::   WY: ref sql-owy utworzonego zamówienia lub pusty string
::  OLD: \one_zamd/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_result:='';
_mask_bie:=5-ZD_NAG.name();
{? 6-ZD_NAG.name()='__'
|| _mask_kop:=ST.ODDZ+(2-$(ZD_NAG.DATA~1))
|| _mask_kop:=ST.ODDZ+'__'
?};

_zd_nag:=obj_new(ZD_NAG.fld_num());
_zd_poz:=obj_new(ZD_POZ.fld_num());
_zd_rn:=obj_new(ZD_RN.fld_num());
_zd_rp:=obj_new(ZD_RP.fld_num());
_fakso:=obj_new(FAKSO.fld_num());
_proj:=obj_new(PROJ2ZDP.fld_num());

_ref_old:=_a;
_ref_new:=null;
_zdnuio:=_zdnuin:='';

VAR_DEL.delete('X_Xa','__zd_poz');

X_Xa:=tab_tmp(2
   ,'REF_OLD','INTEGER','ref old'
   ,'NAME_OLD','STRING[8]','Name old'
   ,'REF_NEW','INTEGER','ref new'
   ,'NAME_NEW','STRING[8]','Name new'
   ,'ZK_RPR','INTEGER','ref'
   ,'ZK_RPN','STRING[8]','Name'
);

__zd_poz:=tab_tmp(1
   ,'R_OLD','STRING[16]','Refsql_old'
   ,'R_NEW','STRING[16]','Refsql_new'
);

:: kopiowanie naglowka
ZD_NAG.prefix();
{? ZD_NAG.seek(_a)
|| _zdnuio:=ZD_NAG.uidref();
   {! _licz:=1..ZD_NAG.fld_num() |! _zd_nag[_licz]:=ZD_NAG[_licz] !}
|| undo()
?};

:: obsluga memo
  _memo:=ZD_NAG.memo_get('r','UW');

exec('openzd','open_tab',_mask_kop);
ZD_NAG.prefix;
ZD_NAG.blank();
{! _licz:=1..ZD_NAG.fld_num()
|! {? var_pres(ZD_NAG.fld_acr(_licz),ZD_NAG)<>var_pres('UW',ZD_NAG) || ZD_NAG[_licz]:=_zd_nag[_licz] ?}
!};
{? ZD_NAG.add()
|| _ref_new:=ZD_NAG.ref;
   _zdnuin:=ZD_NAG.uidref();
   _result:=$ZD_NAG.ref();
   {? _c<>'' || exec('arch_zap','zamowienia',_b,$_ref_new,_c,_zdnuin) ?};
   {? _memo.is_open || ZD_NAG.memo_put(_memo,'UW') ?}
|| undo
?};
:: aktualizacja wpisów dla reklamacji
exec('changeUID','reklamacje',REK_N,'ZAM','ZAM_DOK',_zdnuio,_zdnuin);
exec('changeUID','reklamacje',REK_D,'DK_REF','DK_REF',_zdnuio,_zdnuin);

:: kopiowanie realizacji
  _zdrp:=tab_tmp(1,'ZDP','STRING[16]','','OLD','STRING[16]','','NEW','STRING[16]','');
  exec('openzd','open_tab',_mask_bie);
  ZD_RN.index('ZAM');
  ZD_RN.prefix(_ref_old);
  {? ZD_RN.first()
  ||
     {!
     |? _rn_old:=ZD_RN.ref;
        {! _licz:=1..ZD_RN.fld_num() |! _zd_rn[_licz]:=ZD_RN[_licz] !};
        ZD_RN.cntx_psh();
        exec('openzd','open_tab',_mask_kop);
        ZD_RN.clear();
        ZD_RN.blank();
        {! _licz:=1..ZD_RN.fld_num() |! {? type_of(ZD_RN[_licz])<>0 || ZD_RN[_licz]:=_zd_rn[_licz] ?} !};
        ZD_RN.ZD_NAG:=_ref_new;
        ZD_RN.add();
        _rn:=ZD_RN.ref;
        _rn_news:=$ZD_RN.ref();
        _rn_nd:=ZD_RN.ND;
        ZD_RN.cntx_pop();

        {? _rn_nd<>''
        ||
           ND.cntx_psh();
           DK.cntx_psh();
           ND.use(8+_rn_nd);
           DK.use('dokma'+((8+_rn_nd)+3));
           ND.prefix();
           {? ND.r_lock(1,1,1,BB.sqlint(_rn_nd),form(8+_rn_nd)) & ND.seek(_rn_nd,form(8+_rn_nd))
           ||
              DK.index('DOKMAG');
              DK.prefix(ND.ref());
              {? DK.first()
              ||
                 {!
                 |?
                    {? DK.ZAM_RN=$_rn_old
                    ||
                       DK.ZAM_RN:=_rn_news;
                       DK.put()
                    ?};
                    DK.next()
                 !}
              ?};
              ND.r_unlock()
           || ND.r_unlock();
              undo();
              FUN.info('Powiązany dokument %1 realizacji zamówienia '
                       'obsługuje inny użytkownik.'@[ZD_RN.SPZ])
           ?};
           DK.cntx_pop();
           ND.cntx_pop()
        ?};

        exec('openzd','open_tab',_mask_bie);
        ZD_RP.clear();
        ZD_RP.index('POZ');
        ZD_RP.prefix(_rn_old);
        {? ZD_RP.first()
        ||
           {!
           |?
              {! _licz:=1..ZD_RP.fld_num() |! _zd_rp[_licz]:=ZD_RP[_licz] !};
              _old_r:=$ZD_RP.ref();
              _old_z:=$ZD_RP.ZD_POZ;
              _ouid:=ZD_RP.uidref();

              ZD_RP.cntx_psh();

              X_Xa.blank();
              X_Xa.REF_OLD:=#ZD_RP.ZD_POZ;
              X_Xa.NAME_OLD:=ZD_RP.ZD_POZ().name;
              X_Xa.add();

              ZD_POZ.cntx_psh();
              exec('openzd','open_tab',_mask_kop);
              ZD_POZ.cntx_pop();

              ZD_RP.clear();
              ZD_RP.blank();
              {! _licz:=1..ZD_RP.fld_num() |! ZD_RP[_licz]:=_zd_rp[_licz] !};
              ZD_RP.ZD_RN:=_rn;
              ZD_RP.ZD_POZ:=null();
              ZD_RP.add();
              _nuid:=ZD_RP.uidref();
              _zdrp.clear();
              _zdrp.blank();
              _zdrp.ZDP:=_old_z;
              _zdrp.OLD:=_old_r;
              _zdrp.NEW:=$ZD_RP.ref();
              _zdrp.add(1);

              X_Xa.ZK_RPR:=ZD_RP.ref;
              X_Xa.ZK_RPN:=ZD_RP.name();
              X_Xa.put();

              ZD_RP.cntx_pop();
::            aktualizacja wpisów dla reklamacji
              exec('changeUID','reklamacje',REK_N,'ZAM_ZRP','ZAM_ZRP',_ouid,_nuid);
              exec('changeUID','reklamacje',REK_D,'DR_REF','DR_REF',_ouid,_nuid);
              ZD_RP.next()
           !}
        ?};
        exec('openzd','open_tab',_mask_bie);
        ZD_RN.seek(_rn_old);
        ZD_RN.next()
     !}
  ?};

:: kopiowanie pozycji

   exec('openzd','open_tab',_mask_bie);
   ZD_POZ.index('POZ');
   ZD_POZ.prefix(_ref_old);
   {? ZD_POZ.first()
   ||
      {!
      |?
         _zd_p_o:=ZD_POZ.ref();
         _zd_uio:=ZD_POZ.uidref();
         _zd_pold:=$ZD_POZ.ref();
         {! _licz:=1..ZD_POZ.fld_num() |! _zd_poz[_licz]:=ZD_POZ[_licz] !};

         ZD_POZ.cntx_psh();
         exec('openzd','open_tab',_mask_kop);
         ZD_POZ.clear();
         {! _licz:=1..ZD_POZ.fld_num() |! ZD_POZ[_licz]:=_zd_poz[_licz] !};
         ZD_POZ.ZD_NAG:=_ref_new;
         ZD_POZ.KH:=ZD_POZ.ZD_NAG().KH;
         ZD_POZ.KH_MSC:=ZD_POZ.ZD_NAG().KH_MSC;
         ZD_POZ.add();
         {? ZD_POZ.name()+2='__' || exec('obl_stan','magazyn_stan',ZD_POZ.M,1,ZD_POZ.MG) ?};
         _zd_p_n:=ZD_POZ.ref();
         _zd_uin:=ZD_POZ.uidref();

::       aktualizacja wpisów dla dyspozycji transportowych
         exec('updateUID','transport_wspolne',_zdnuio,_zd_uio,_zdnuin,_zd_uin);
::       aktualizacja wpisów dla reklamacji
         exec('changeUID','reklamacje',REK_N,'ZAM_POZ','ZAM_POZ',_zd_uio,_zd_uin);
         exec('changeUID','reklamacje',REK_D,'DP_REF','DP_REF',_zd_uio,_zd_uin);

::       aktualizacja pola PROJ2ZDP.PROJZDP
:: DRO: [rr] wyłączone
::         exec('proj2zdp_arch','skid_prm',_zd_p_o,_zd_p_n);
::       aktualizacja pozycji zamowienia sprzedazy
         ZK_P.cntx_psh;
         ZK_P.index('ZD_POZ'); ZK_P.prefix($_zd_p_o);
         {? ZK_P.first
         ||
            {!
            |?
               ZK_P.cntx_psh;
               ZK_P.prefix;
               ZK_P.ZD_POZ:=$_zd_p_n;
               ZK_P.put;
               ZK_P.cntx_pop;
               ZK_P.first
            !}
         ?};
         ZK_P.cntx_pop;
         OKR.cntx_psh;
         OKR.index('MC'); OKR.prefix(REF.FIRMA,1);
         {? OKR.first
         ||
            {!
            |?
               ZK_P.cntx_psh;
               ZK_P.use('zkpoz'+ST.ODDZ+($OKR.ROK+2));
               ZK_P.index('ZD_POZ'); ZK_P.prefix($_zd_p_o);
               {? ZK_P.first
               ||
                  {!
                  |?
                     ZK_P.cntx_psh;
                     ZK_P.prefix;
                     ZK_P.ZD_POZ:=$_zd_p_n;
                     ZK_P.put;
                     ZK_P.cntx_pop;
                     ZK_P.first
                  !}
               ?};
               ZK_P.cntx_pop;
               OKR.next
            !}
         ?};
         OKR.cntx_pop;

         __zd_poz.blank();
         __zd_poz.R_OLD:=$_zd_p_o;
         __zd_poz.R_NEW:=$_zd_p_n;
         __zd_poz.add();

         X_Xa.prefix(#_zd_p_o,ref_name(_zd_p_o));
         {? X_Xa.first()
         ||
            {!
            |?
               X_Xa.REF_NEW:=#ZD_POZ.ref;
               X_Xa.NAME_NEW:=ZD_POZ.name();
               X_Xa.put();
               X_Xa.next()
            !}
         ?};

::       kopiowanie informacji dodatkowych dla pozycji zamowienia dostawy
         FAKSO.cntx_psh();
         FAKSO.use('fakto'+_mask_bie);
         FAKSO.index('ZD_POZ');
         FAKSO.prefix(_zd_p_o);
         {? FAKSO.first()
         ||
            {!
            |? {! _licz:=1 .. FAKSO.fld_num() |! _fakso[_licz]:=FAKSO[_licz] !};
               FAKSO.cntx_psh();
               FAKSO.use('fakto'+_mask_kop);
               FAKSO.clear();
               {! _licz:=1 .. FAKSO.fld_num() |! FAKSO[_licz]:=_fakso[_licz] !};
               FAKSO.ZD_POZ:=_zd_p_n;
               FAKSO.add();
               FAKSO.cntx_pop();
               FAKSO.next()
            !}
         ?};
         FAKSO.cntx_pop();

::       aktualizacja zlaczen dla planow dostaw
         exec('zam_arch','zamowienia',_ref_old,_zd_p_o,_ref_new,_zd_p_n);
::       aktualizacja FAP2DK - powiązań realizacji usługowych z fakturami zakupowymi
         FAP2DK.cntx_psh();
         _zdrp.clear();
         {? _zdrp.first()
         || {!
            |? FAP2DK.index('ZD_RP');
               FAP2DK.prefix(_zdrp.OLD);
               {? FAP2DK.first()
               || {!
                  |? _ref:=FAP2DK.ref(); _next:=FAP2DK.next();
                     FAP2DK.cntx_psh();
                     FAP2DK.prefix();
                     {? FAP2DK.seek(_ref)
                     || FAP2DK.ZD_RP:=_zdrp.NEW;
                        FAP2DK.put(1)
                     ?};
                     FAP2DK.cntx_pop();
                     _next
                  !}
               ?};
               _zdrp.next()
            !}
         ?};
         FAP2DK.cntx_pop();
::       aktualizacja pozycji dokumentow magazynowych
         _actodd:=1+(ZD_NAG.name()+3);
         OKR.cntx_psh();
         ND.cntx_psh();
         DK.cntx_psh();
         OKR.index('MC');
         OKR.prefix(REF.FIRMA,1);
         {? OKR.first()
         || {!
            |? ND.use('nagdo'+_actodd+form(OKR.ROK-2000,-2,0,'99'));
               DK.use('dokma'+_actodd+form(OKR.ROK-2000,-2,0,'99'));
               _zdrp.clear();
               _zdrp.prefix(_zd_pold);
               {? _zdrp.first()
               || {!
                  |? DK.index('ZAM_RP');
                     DK.prefix(_zdrp.OLD);
                     {? DK.first
                     || {!
                        |? DK.cntx_psh();
                           DK.prefix();
                           DK.ZAM_RP:=_zdrp.NEW;
                           DK.put(1);
                           DK.cntx_pop();
                           DK.first()
                         !}
                     ?};
                     _zdrp.next()
                  !}
               ?};
               OKR.next()
            !}
         ?};
         OKR.cntx_pop();
         ND.cntx_pop();
         DK.cntx_pop();

         ZD_POZ.cntx_pop();
         ZD_POZ.next()
      !}
   ?};
   obj_del(_zdrp);

:: kopiowanie informacji dodatkowych dla naglowka zamowienia klienta
   FAKSO.cntx_psh();
   FAKSO.use('fakto'+_mask_bie);
   FAKSO.index('ZD_NAG');
   FAKSO.prefix(_ref_old);
   {? FAKSO.first()
   ||
      {!
      |? {! _licz:=1 .. FAKSO.fld_num() |! _fakso[_licz]:=FAKSO[_licz] !};
         FAKSO.cntx_psh();
         FAKSO.use('fakto'+_mask_kop);
         FAKSO.clear();
         {! _licz:=1 .. FAKSO.fld_num() |! FAKSO[_licz]:=_fakso[_licz] !};
         FAKSO.ZD_NAG:=_ref_new;
         FAKSO.add();
         FAKSO.cntx_pop();
         FAKSO.next()
      !}
   ?};
   FAKSO.cntx_pop();

:: odtwarzanie powiazan dokumentow
   exec('refsql_update','dokum',$_ref_old,$_ref_new);

:: odtwarzanie powizan

  _odtw:="
   ZDP_POZ.index('ZD_POZ');
   ZDP_POZ.prefix(_a,_a);
   {? ZDP_POZ.first()
   ||
      {!
      |?
         ZDP_POZ.cntx_psh();
         ZDP_POZ.clear();
         ZDP_POZ.ZD_POZ:=_b;
         ZDP_POZ.put();
         ZDP_POZ.cntx_pop();
         ZDP_POZ.first()
      !}
   ?};
   ''
  ";
:: petla po wszystkich okresach i wymiana w polu ZDP_POZ.ZD_POZ z OLD na NEW
   OKR.cntx_psh();
   __zd_poz.clear();
   {? __zd_poz.first()
   ||
      {!
      |?
::       pozycje potwierdzen
::       w biezacej masce
         ZDP_POZ.use('zdptp'+ST.ODDZ+'__');
         _odtw(__zd_poz.R_OLD,__zd_poz.R_NEW);
::       w archiwum
         OKR.index('MC');
         OKR.prefix(REF.FIRMA,1);
         {? OKR.first()
         ||
            {!
            |?
               ZDP_POZ.use('zdptp'+ST.ODDZ+($OKR.ROK+2));
               _odtw(__zd_poz.R_OLD,__zd_poz.R_NEW);
               OKR.next()
            !}
         ?};
         __zd_poz.next()
      !}
   ?};
   OKR.cntx_pop();

   exec('openzd','open_tab',_mask_kop);
   X_Xa.clear();
   {? X_Xa.first()
   ||
      {!
      |?
::       pozycje realizacji
         ZD_RP.prefix();
         {? ZD_RP.seek(X_Xa.ZK_RPR,X_Xa.ZK_RPN)
         ||
            ZD_POZ.prefix();
            {? ZD_POZ.seek(X_Xa.REF_NEW,X_Xa.NAME_NEW)
            || ZD_RP.ZD_POZ:=ZD_POZ.ref;
                 ZD_RP.M:=ZD_RP.ZD_POZ().M;
               ZD_RP.put()
            ?}
         ?};
         X_Xa.next()
      !}
   ?};

:: aktualizacja powiazan w dzienniku edi
  {? do_state()<>2 || exec('edi_i_akt_dok','edi_wspolne',BB.refsql(_ref_old),BB.refsql(_ref_new)) ?};

:: kasowanie zamowienia
  exec('openzd','open_tab',_mask_bie);

  ZD_NAG.prefix();
  {? ZD_NAG.seek(_a)
  ||
::   realizacje
     ZD_RN.index('ZAM');
     ZD_RN.prefix(_ref_old);
     {? ZD_RN.first()
     ||
        {!
        |?
           ZD_RP.index('POZ');
           ZD_RP.prefix(ZD_RN.ref);
           {? ZD_RP.first()
           ||
              {!|?
                 ZD_RP.del()
              !}
           ?};
           ZD_RN.del()
        !}
     ?};

::   pozycje

      ZD_POZ.index('POZ');
      ZD_POZ.prefix(_ref_old);
      {? ZD_POZ.first()
      ||
         {!
         |? {? ZD_POZ.count()>0
            ||
               FAKSO.cntx_psh();
               FAKSO.use('fakto'+_mask_bie);
               FAKSO.index('ZD_POZ');
               FAKSO.prefix(ZD_POZ.ref);
               {? FAKSO.first() || {! |? FAKSO.del() !} ?};
               FAKSO.cntx_pop()
            ?};
            _mref:=ZD_POZ.M;
            _mgref:=ZD_POZ.MG;
            _del:=ZD_POZ.del();
            {? ZD_POZ.name()+2='__' || exec('obl_stan','magazyn_stan',_mref,1,_mgref) ?};
            _del
         !}
      ?};

      {? ZD_NAG.count()>0
      ||
         FAKSO.cntx_psh();
         FAKSO.use('fakto'+_mask_bie);
         FAKSO.index('ZD_NAG');
         FAKSO.prefix(ZD_NAG.ref);
         {? FAKSO.first() || {! |? FAKSO.del() !} ?};
         FAKSO.cntx_pop()
     ?};
     {? do_state()<2 & ~Plugin.run('BEFORE_DELTAB_001',ZD_NAG.ref()) & do_state() || undo() ?};
     ZD_NAG.del(1);

::   przywrocenie rezerwacji kopiowanego zamowienia

     {? _mask_bie<>ST.ODDZ+'__'
     ||
        exec('open','open_tab',ST.ODDZ,2-$(ST.AR));
        ZD_NAG.clear();
        1
:: status
     ?}
  || undo()
  ?};
  exec('openzd','open_tab',_mask_bie);
_result


\zdnag_przywroc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienie dostaw - Archiwizuj
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_tab:=ZD_NAG.sel_aget();
ZD_NAG.sel_adel();

{? _tab.size()
|| _ok:=FUN.ask('Ilość zamówień do przeniesienia z archiwum: %1.\n'
                'Operacja może być czasochłonna.\n\nCzy kontynuować?'@[$_tab.size()])
|| _ok:=2
?};
{? _ok=2
|| exec('zd_arch','!lzk_zds_darc')
|? _ok=1
|| exec('ini_kom','#message','Przywrócenie zamówień');
   ZD_NAG.cntx_psh();
   _tab.clear();
   {? _tab.first()
   || {!
      |? {? (ZD_NAG.clear(); ZD_NAG.seek(_tab.REF,))
         || exec('zd_arch','!lzk_zds_darc',1)
         ?};
         _tab.next()
      !}
   ?};
   ZD_NAG.cntx_pop();
   exec('end_kom','#message')
?};
obj_del(_tab)


\oddzial
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na wartość parametru ODDZIAL
::   WY: ODDZ.KOD
::----------------------------------------------------------------------------------------------------------------------
_wyn:=~~;
ODDZ.cntx_psh();
ODDZ.index('KOD');
ODDZ.prefix();
ODDZ.win_sel('SEL');
{? ODDZ.select() || _wyn:=ODDZ.KOD ?};
ODDZ.cntx_pop();
_wyn


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::       [_b] - tablica z parametrami wejściowymi
::   WY: obj_new() - obiekt wynikowy
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
{? var_pres('_b')>100
|| _in:=_b
|| _in:=params_get().in
?};
params_exec('zd_clean','zamdst_nag',_mp,_in)

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 9810fc2f782e7a53f1fc96ed704bac92e170d9de0d6e5fbfda43e6bd8c9cc53f7ae8c9992a31d21e5e32bee734cf420e69ff06e7363e384a8282242b3d1fb7564b4e8885fa8999c72f23ca63f31c7b6343506cfac9fcac6e5f921ff41227cfb84ff2a336d5086ccf560a8c627b7402a8a8984ad44e275da8e8579fd1d30cea47
