:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !kas_dok_ddok.fml
:: Utworzony: 08.03.2016
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Rejestracja dokumentu kasowego
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ,KAS
::# parses=exec('parses','!kas_dok_ddok')
::# kind=WE,   symbol=RAPORT,    type=_RAPORT,     name=Raport kasowy,      required=N,  keyref=T
::# kind=WE,   symbol=MBWPL,     type=_MBWPL,      name=Wpłata gotówkowa,   required=N
::# kind=WE,   symbol=FAKS,      type=_FAKS,       name=Dokument sprzedaży, required=N
::# kind=WY,   symbol=DOKUMENT,  type=_DOKUMENT,   name=Raport kasowy,      required=N

_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
_context:=params_get().context;

exec('init','kas');

:: Uruchomiona akcja
_akcja:=_mp.akcja();

{? var_pres('MBWPL',_in)<>type_of(null())
|| _mbwpl:=null()
|| _mbwpl:=_in.MBWPL
?};
{? var_pres('RAPORT',_in)<>type_of(null())
|| _raport:=null()
|| _raport:=_in.RAPORT
?};
{? var_pres('FAKS',_in)<>type_of(null())
|| _faktura:=null()
|| _faktura:=_in.FAKS
?};

{? _akcja='' & _faktura
||
   _p300241:=exec('get','#params',300241);
   {? _p300241='N' |  _p300241='P' & ~FUN.ask('Czy utworzyć zapis w kasie?'@)
   ||
      _mp.done();
      return()
   ?}
?};

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_area_kas:=_mp.pathArea('KAS_DOK') | _mp.pathArea('KAS_MUL');
_area:=_area_kas;
_proc:=_mp.pathProc();
_todo:=_mp.pathTodo() | _mp.pathArea() & ~_area;
_grupa:=_mp.isGroup();

{? _todo
:: Ustawienie kontekstu wg instancji elementu w procesie
|| {? var_pres('DOKUMENT',_out)=type_of(null()) & _out.DOKUMENT
   || 1
   |? ~_mp.isMicro()
   || _akcja:='START_TODO'
   || _mp.error('Brak parametru wyjściowego RAPORT.')
   ?}
?};

:: Sprawdzenie uprawnień
::{? params_exec('permissions_chk','lsp','!lsp_fak_drfp')=0 || return() ?};

:: Wyzwalacz, który po dodaniu nagłówka dokumentu:
:: - add: dodaje rekord kluczowy nagłówka dokumentu
::   del: usuwa rekord kluczowy nagłówka dokumentu
:: - add: zapisuje parametr wyjściowy FAKS = wskazanie na nagłówek korekty
::   del: zapisuje parametr wyjściowy FAKS = null
_mp.trigRef('DOKUMENT',,1,,exec('kind_out','#b_port'),'DOKUMENT');

{? (_mbwpl<>null() | _faktura<>null()) & _raport=null()
|| ST.ROK_F:=exec('rok_find','edkonto',{? ST.AR<>0 || date(ST.AR,ST.AM,1) || date() ?});
   _raport:=exec('find_raport','kasa_wspolne',ST.STANKAS().KOD,exec('data_got','faktury_plat',_faktura),'otwarty');
   {? _raport=null()
   || _raport:=exec('find_raport','kasa_wspolne',ST.STANKAS().KOD,exec('data_got','faktury_plat',_faktura),'zakończony')
   ?}
?};

:: Uruchomiona automatycznie
_auto:=_faktura<>null() & _mp.isAutoRun();

{? _mbwpl<>null()
  & (_akcja='Wpłata' | _proc | _todo)
|| {? _raport=null()
   || _mp.error('Dla wpłaty gotówkowej brak parametru wejściowego RAPORT.')
   ||
::    Dokument wg wpłat gotówkowych
      {? _akcja<>'Wpłata'
      || exec('kas_open','kasa_raport',#(3+(3-ref_name(_raport))),(2+(6-ref_name(_raport))));
         RAPORT.prefix();
         _ok:=RAPORT.seek(_raport)
      || _ok:=1
      ?};
      {? _ok
      || exec('akcwplgt','!kas_dok_ddok');
         {? exec('FindAndGet','#table',MBWPL,_mbwpl,,"STAN='R' & RSQL<>''",0)
         || _mp.done()
         ?}
      || _mp.cancel()
      ?}
   ?}

|? _faktura<>null()
   & (_akcja='Faktura' | _proc | _todo)
|| {? _raport=null()
   || FUN.info('Brak otwartego lub zakończonego raportu kasowego wg daty dokumentu sprzedaży.'@);
      _mp.cancel()
   ||
::    Dokument wg wpłat gotówkowych
      {? _akcja<>'Faktura'
      || exec('kas_open','kasa_raport',#(3+(3-ref_name(_raport))),(2+(6-ref_name(_raport))));
         RAPORT.prefix();
         _ok:=RAPORT.seek(_raport)
      || _ok:=1
      ?};
      {? _ok
      || _msk:=ref_name(_faktura)+3;
         _akt:=FAKS.name()+3;
         FAKS.cntx_psh();
         {? _msk<>_akt || exec('fak_open','open_tab',1+_msk,1-_msk) ?};
         FAKS.prefix();
         {? FAKS.seek(_faktura)
         || {? exec('kas_gen','kasa_wspolne',{? _auto || 'N' || 'T' ?},_raport)
            || _mp.done()
            || _mp.cancel()
            ?}
         ?};
         {? _msk<>_akt || exec('fak_open','open_tab',1+_akt,1-_akt) ?};
         FAKS.cntx_pop()
      || _mp.cancel()
      ?}
   ?}

|? _akcja='Dołącz'
   | _proc
   | _akcja='START_TODO'
:: Obsługa Dołącz - dołącz w oknie obszaru i start procesu z pulpitu
||
   RAPORT.cntx_psh();
   _continue:=
      {? _raport
      || RAPORT.prefix();
         RAPORT.seek(_raport)
      || {? _akcja='START_TODO'
            | _proc
::       Nie przekazano parametru wejściowego RAPORT lub raport zgodny z parametrem wejściowym został usunięty
         || _stKasowe:=__PARSES.getVal('StKasowe');
            RAPORT.index('NUMER');
            RAPORT.prefix();
            RAPORT.f_clear();
            RAPORT.f_set('NUM_RAP',,'RAPORT.STATUS=\':_a\' or RAPORT.STATUS=\':_b\''
               ,exec('rap_stat','kasa_raport',0),exec('rap_stat','kasa_raport',1));
            RAPORT.win_sel('RAP_WYB');
            RAPORT.hdr_sel();
            RAPORT.hdr_sel(' '+_stKasowe.NAZWA);
            {? RAPORT.select()
            || {? RAPORT.STATUS<>exec('rap_stat','kasa_raport',0) & RAPORT.STATUS<>exec('rap_stat','kasa_raport',1)
               || FUN.info('Należy wybrać raport otwarty lub zakończony.'@)
               || _raport:=RAPORT.ref()
               ?}
            ?};
            RAPORT.f_clear();
            _raport<>null()
         || _mp.error('Brak parametru wejściowego RAPORT.');
            0
         ?}
      ?};

   {? _continue
   ||
      DOKUMENT.cntx_psh();
      DOKUMENT.index('RAPORT');
      DOKUMENT.prefix(_raport);
      POZDOK.cntx_psh();
::    Parametr 'akcja' wykorzystywany w formułach przycisków 'Pozycje', 'Zakończ'
      params_set('in',_in,'out',_out,'mp',_mp,'akcja',_akcja);
      exec('dolacz','!kas_dok_ddok');
      POZDOK.cntx_pop();
      DOKUMENT.cntx_pop();

::    Podczytanie parametrów wyjściowych
      _outa:=_mp.load(exec('kind_out','#b_port'));
      {? var_pres('DOKUMENT',_outa)<>type_of(~~) & _outa.DOKUMENT
::    Dodano dokument
      ||
::       Ustawienie się na dodanym dokumencie w widoku obszaru
         {? _mp.pathArea() || DOKUMENT.seek(_outa.DOKUMENT) ?}
::    Wycofanie czynności bo nie dodano dokumentu
      || _mp.cancel()
      ?}
   ?};
   RAPORT.cntx_pop()

|? _akcja='Popraw'
   | _todo
||
   {? var_pres('DOKUMENT',_out)=type_of(null())
:: Uruchomione w procesie
   ||
      DOKUMENT.cntx_psh();
      DOKUMENT.prefix();
      {? DOKUMENT.seek(_out.DOKUMENT)
      ||
         DOKUMENT.index('RAPORT');
         DOKUMENT.prefix(DOKUMENT.RAPORT)
      ?};
      POZDOK.cntx_psh();
      {? DOKUMENT.seek(_out.DOKUMENT)
      ||
         _continue:=1;
         {? _todo
         ||
            _continue:=exec('FindAndGet','#table',RAPORT,DOKUMENT.RAPORT,,"
               {? RAPORT.r_lock(1,1)
               || ROZNE.BLOK_RAP:=1
               || FUN.info('Dokument %1'
                     '\njest obsługiwany przez innego użytkownika.'@[exec('record','#to_string',DOKUMENT.ref())])
               ?}",0)
         ?};

         {? _continue
         ||
            {? exec('rap_code','kasa_raport',DOKUMENT.RAPORT().STATUS)<>0
             & exec('rap_code','kasa_raport',DOKUMENT.RAPORT().STATUS)<>1
            || {? ROZNE.BLOK_RAP || RAPORT.r_unlock(); ROZNE.BLOK_RAP:=0 ?};
               FUN.info('Raport kasowy został zamknięty.\nZadanie zostanie zakończone.'@);
               _mp.done()

            ||
               params_set('out',_out,'mp',_mp,'akcja',_akcja);
               exec('popraw','!kas_dok_ddok');

               _mp.descTodo();

               {? _todo
               ||
                  exec('FindAndGet','#table',RAPORT,DOKUMENT.RAPORT,,"RAPORT.r_unlock()",0);
                  ROZNE.BLOK_RAP:=0
               ?}
            ?}
         ?}
      ?};
      POZDOK.cntx_pop();
      DOKUMENT.cntx_pop()

   |? _todo
:: Uruchomione zadanie z listy todo i brak _out.DOKUMENT wtedy zadanie wycofujemy
   || _mp.cancel()
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      params_set('out',_out,'mp',_mp,'akcja',_akcja);
      exec('popraw','!kas_dok_ddok')
   ?}

|? _akcja='Usuń'
|| {? var_pres('DOKUMENT',_out)=type_of(null())
:: Uruchomione w procesie
   || _dokument:=null();
      DOKUMENT.cntx_psh();
      {? _mp.pathArea()=0 || DOKUMENT.prefix() ?};
      {? DOKUMENT.seek(_out.DOKUMENT)
      ||
         exec('usun','!kas_dok_ddok');

         {? ~DOKUMENT.seek(_out.DOKUMENT)
::       Wycofuję instancję jeśli nie znaleziono dokumentu
         || _mp.cancel()
         ?};
         _dokument:=DOKUMENT.ref()
      ?};
      DOKUMENT.cntx_pop();
::    Ustawienie się na kolejnym dokumencie w widoku obszaru
      {? _mp.pathArea() || {? _dokument || DOKUMENT.seek(_dokument) ?} ?}
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      exec('usun','!kas_dok_ddok');

      _mp.done()
   ?}

|? _akcja='clean'
||
   {? var_pres('DOKUMENT',_out)=type_of(null())
:: Uruchomione w procesie
   || DOKUMENT.cntx_psh();
      DOKUMENT.prefix();
      {? DOKUMENT.seek(_out.DOKUMENT)
      ||
         {? exec('rap_code','kasa_raport',DOKUMENT.RAPORT().STATUS)<>0
          & exec('rap_code','kasa_raport',DOKUMENT.RAPORT().STATUS)<>1
         ||
            _mp.done()
         ?}
      ?};
      DOKUMENT.cntx_pop()
   ?}

|? _akcja='Zakończ_wer' & _mp.pathArea()
|| {? exec('zakoncz','kasa_dokument') || _mp.done() ?}

|? _akcja='Wycofaj'
|| exec('wycofaj','kasa_dokument')

|? _akcja='DołączMWA'
|| DOKUMENT.cntx_psh(); POZDOK.cntx_psh();
   _wsenv:=exec('wsenv','#mwapi');
   _buffers:=_context.BUFFERS;

   _dokument:=exec('addDok_mwa','kasa_wspolne',_buffers);
   {? _dokument<>null()
   || {? exec('addpoz_mwa','kasa_wspolne',_buffers.POZDOK, _dokument)
      || DOKUMENT.prefix();
         {? DOKUMENT.seek(_dokument,ref_name(_dokument))
         ||
            {? DOKUMENT.STAT_REJ:='Z'; DOKUMENT.put()
            ||
               exec('kp_kw','kasa_dokument',1)
;
               _mp.save('OUT','DOKUMENT',DOKUMENT.ref());
               _mp.done();
               _wsenv.IDADD:=DOKUMENT.IDADD
            ?}
         ?}
      ?}
   ?};
   DOKUMENT.cntx_pop(); POZDOK.cntx_pop()

|? _akcja='UsuńMWA'
|| DOKUMENT.cntx_psh(); POZDOK.cntx_psh();
   _wsenv:=exec('wsenv','#mwapi');
   _res:=0;
   {? DOKUMENT.STAT_REJ='N'
   || _context.RESULT:=1
   || exec('wycofaj','kasa_dokument');
      _context.RESULT:=1
   ?};
   {? _context.RESULT>0
   || _context.RESULT:=exec('dok_usu','!kas_dok_ddok',1)
   ?};
   DOKUMENT.cntx_pop(); POZDOK.cntx_pop()

|| _mp.error('Nieobsługiwana ścieżka.')
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_out:=_mp.load(exec('kind_out','#b_port'));

{? var_pres('DOKUMENT',_out)=type_of(null()) & _out.DOKUMENT
|| 'Zakończ rejestrację dokumentu kasowego: %1'@@[exec('record','#to_string',_out.DOKUMENT)]
|| _in:=_mp.load(exec('kind_in','#b_port'));
   {? var_pres('FAKS',_in)=type_of(null()) & _in.FAKS
   || 'Zarejestruj dokument kasowy na podstawie dokumentu sprzedaży: %1'@@[exec('record','#to_string',_in.FAKS)]
   |? var_pres('MBWPL',_in)=type_of(null()) & _in.MBWPL
   || 'Zarejestruj dokument kasowy na podstawie wpłaty gotówkowej: %1'@@[exec('record','#to_string',_in.MBWPL)]
   || 'Zarejestruj dokument kasowy'@@
   ?}
?}


\dokument_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Rejestracja dokumentu kasowego - Dołącz
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='KAS_DOK_DDOK';
_params.AKCJA:='Dołącz';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'RAPORT',RAPORT.ref());

exec('mp_run','#b__box',_params)


\dokument_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Rejestracja dokumentu kasowego - Popraw
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='KAS_DOK_DDOK';
_params.UIDREF:=DOKUMENT.uidref();
_params.AKCJA:='Popraw';

exec('mp_run','#b__box',_params)


\dokument_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Rejestracja dokumentu kasowego - Usuń
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='KAS_DOK_DDOK';
_params.UIDREF:=DOKUMENT.uidref();
_params.AKCJA:='Usuń';

exec('mp_run','#b__box',_params)


\dokument_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Rejestracja dokumentu kasowego - Zakończ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='KAS_DOK_DDOK';
_params.UIDREF:=DOKUMENT.uidref();
_params.AKCJA:='Zakończ_wer';

exec('mp_run','#b__box',_params)


\dokument_wycofaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PS [17.00]
:: OPIS: Rejestracja dokumentu kasowego - Wycofaj
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='KAS_DOK_DDOK';
_params.UIDREF:=DOKUMENT.uidref();
_params.AKCJA:='Wycofaj';

exec('mp_run','#b__box',_params)


\dokument_clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: Rejestracja dokumentu kasowego - clean
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='KAS_DOK_DDOK';
_params.UIDREF:=DOKUMENT.uidref();
_params.AKCJA:='clean';

exec('mp_run','#b__box',_params)


\dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dokument kasowy - Dołącz
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('o_dokdol','!kas_dok_ddok')


\o_dokdol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: na akcje dolacz w tabeli dokumentów
::   WS - 01-28-2010 - wprowadzono nowa sciezke edycji z wyborem typu operacji przed redakcja dokumentu
::      dzieki temu mozna profilowac okno redakcji w zaleznosci od rodzaju operacji
::      Funkcjonalnosc niezbedna do wdycji dokumentow budzetowych ale dostepna rowiez dla pracy nie budzetowej
::   WE: [_a] 1 - dokument KWT, 2 - dokument zwykly, 0 lub brak dzialanie standardowe
::  OLD: \o_dokdol/okna.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=0 ?};

_mp:=params_get().mp;
_in:=params_get().in;

RAPORT.cntx_psh();
{? var_pres('RAPORT',_in)=type_of(null()) & _in.RAPORT
|| RAPORT.prefix();
   RAPORT.seek(_in.RAPORT)
?};

_typ:={? _a=1 || 'KWT' || '' ?};

exec('tmpdpom','kasa_wspolne',2);
MLKAS.OPER:=null;

_wyn:=
   {? exec('czy_euro','waluty',STANKAS.WALUTA().SYM,0)
   || {? KPARAM.OKD='T'
      || KOPERKAS.index('STANKAS1');
         USRCONST.STANKAS();
         KOPERKAS.prefix(STANKAS.ref());
         KOPERKAS.find_key(8+SLOSLU.OPER);
         KOPERKAS.win_sel('SLO');
         {? KOPERKAS.select(,1)
         || KOPERKAS.OPER();
            MLKAS.OPER:=OPER.ref();
            _typ:=OPER.TYP_DOK
         || RAPORT.cntx_pop();
            return(0)
         ?}
      ?};
      Popraw:=0;
      1
   || FUN.info('Pozycja raportu nie może być dołączona.\n '
         'Domyślna waluta stanowiska należy\n'
         'do zabronionych walut unii walutowej.'@);
      0
   ?};

{? _wyn
||
   _var_dokumentpop:=exec('var_dokumentpop','!kas_dok_ddok');
   _var_dokumentpop.PO_FIRST:=1;

:: Parmater 'context' wykorzystywany w
:: - exec('dokument_zakoncz_red','kasa_dokument')
:: - exec('dokument_edit_finisher','kasa_dokument')
:: Parametr 'var_raportpop' wykorzystywany w:
:: - exec('dokument_edit_finisher','kasa_dokument')
   params_set('context',params_get(),'var_dokumentpop',_var_dokumentpop);

   DOKUMENT.blank();
   {? ~params_get().mp.pathArea()
   || DOKUMENT.RAPORT:=RAPORT.ref()
   ?};
   SLOSLU.OPER:=MLKAS.OPER().KOD;
   {? SLOSLU.OPER<>'' || exec('oper_aft','kasa_wspolne') ?};
   exec('dok_kurb','kasa_dokument',1);

   exec('dokument_win_edit_set','kasa_dokument',,_typ);

   _wyn:={? DOKUMENT.edit("exec('dok_chk','kasa_dokument')")
         || {? _var_dokumentpop.PO_FIRST=1
            || {? ~_mp.pathArea('KAS_DOK') || DOKUMENT.prefix() ?};
               {? DOKUMENT.add()
               || ROZNE.BLOK_RAP:=DOKUMENT.r_lock(1,1,1);
                  exec('o_dokpoz','kasa_pozdok')
               ?}
            ?};
            DOKUMENT.r_unlock()
         || {? _var_dokumentpop.PO_FIRST=2
            || DOKUMENT.r_unlock()
            ?};
            0
         ?}
?};

RAPORT.cntx_pop();

_wyn


\popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dokument kasowy - Popraw
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('o_dokpop','!kas_dok_ddok')


\o_dokpop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: na akcje popraw w tabeli dokumentów
::   WE:
::   WY:
::  OLD: \o_dokpop/okna.fml
::----------------------------------------------------------------------------------------------------------------------
Popraw:=1;
exec('tmpdpom','kasa_wspolne',2);
DOKUMENT.OPER();
:: DRO_TODO_AWI_MOD_____: zmienić obsługę jednopozycyjnego
{? 0& OPER.CZY1_POZ='T' & (DOKUMENT.DOK_NUM=0 | OPER.CZY_BLOK='N')
|| exec('o_dokpoz','kasa_pozdok',1); 0
|? DOKUMENT.DOK_NUM<>0 & DOKUMENT.OPER().CZY_BLOK='T'
|| FUN.info('Wystawiono %1 nr %2.\nModyfikacja niemożliwa.'@[DOKUMENT.TYP_DOK,$DOKUMENT.DOK_NUM]); 0
|| WAL.cntx_psh;
   _st_wal:=STANKAS.WALUTA; _st_waln:=STANKAS.WALUTA().SYM;
   _ww:={? _st_wal=null | (_st_wal<>null & _st_waln<>KINFO.NAROD().KOD) || 'W' || '' ?};
   WAL.cntx_pop;

   {? DOKUMENT.TYP_DOK='KWT'
   || {? STANKAS.CZY_ZDEP='T'
      || MLEX.AKT:=DOKUMENT.AKT().SYM;
         MLEX.WPL:=DOKUMENT.WPL().O
      || MLEX.AKT:=DOKUMENT.AKT_NDEP;
         MLEX.WPL:=DOKUMENT.WPL_NDEP
      ?}
   ?};

   _var_dokumentpop:=exec('var_dokumentpop','!kas_dok_ddok');
   _var_dokumentpop.PO_FIRST:=0;

:: Parmater 'context' wykorzystywany w
:: - exec('dokument_zakoncz_red','kasa_dokument')
:: - exec('dokument_edit_finisher','kasa_dokument')
:: Parametr 'var_dokumentpop' wykorzystywany w:
:: - exec('dokument_edit_finisher','kasa_dokument')
   params_set('context',params_get(),'var_dokumentpop',_var_dokumentpop);

   exec('dokument_win_edit_set','kasa_dokument',,DOKUMENT.TYP_DOK);

   _kurs:=DOKUMENT.KURS;
   {? DOKUMENT.edit("exec('dok_chk','kasa_dokument')")
   || {? DOKUMENT.STAT_REJ='N'
      || do();
         {? DOKUMENT.put()
            & _kurs<>DOKUMENT.KURS
         ||
            POZDOK.index('DOKUMENT');
            _loop:=POZDOK.first();
            {!
            |? _loop
            |!
               exec('licz_kwpln','kasa_pozdok');
               _loop:=POZDOK.put() & POZDOK.next()
            !};
            exec('poz_calc','kasa_pozdok')
         ?};
         end()
      ?}
   ?}
?}


\var_dokumentpop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zmiennna var_dokumentpop
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
obj_new('PO_FIRST')


\usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Dokument kasowy - Usun
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('dok_usu','!kas_dok_ddok')


\dok_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Usuwanie dokumentow
::  OLD: \dok_usu/vat_ks.fml
::   WE: 0/1- jeśli nie ma pytać i ma zwrócić wynik (webserwisy)
::----------------------------------------------------------------------------------------------------------------------
_sel_size:=DOKUMENT.sel_size();
_ok:=1;
_ws:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_wyn:=0;
:: sprawdzenie powiazania z wplata gotowkowa
_wplatgot:=0;
{? exec('FindInSet','#table','MBWPL','RSQL',$DOKUMENT.ref(),$DOKUMENT.ref())
|| _wplatgot:=1;
   FUN.info('Dokument powstał na podstawie wpłaty gotówkowej.\n'
            'Jego usunięcie spowoduję zmianę statusu wpłaty gotówkowej\n'
            'na niezarejestrowaną w raporcie kasowym.'@)
?};
{? USRCONST.STANKAS().STANKAS().CZY_SMIN='N'
|| BO.PR_WAL:=0; _srodki:=exec('srodki','kasa_wspolne',DOKUMENT.WALUTA().SYM); _kw_dok:=DOKUMENT.KW_WAL;
   {? DOKUMENT.PLUS_MIN='-' || _kw_dok:=(-1)*_kw_dok ?};
   _ok:=((_srodki-_kw_dok)$2>=0);
   {? ~_ok & ~_sel_size
   || FUN.info('Usunięcie dokumentu spowodowałoby powstanie niedozwolonego\n'
               'na danym stanowisku kasowym ujemnego salda dla waluty %1.'@[DOKUMENT.WALUTA().SYM])
   ?}
?};
{? _ok & (_sel_size | FUN.ask('Usunąć dokument?'@)| _ws)
|| do();
   DOKUMENT.cntx_psh();
   POZDOK.index('DOKUMENT'); POZDOK.prefix(DOKUMENT.ref());
   {? POZDOK.first()
   || {!
      |?
         VPD.index('VPD'); VPD.prefix(POZDOK.ref());
         {? VPD.first ||  {! |? VPD.del !} ?};
         EZALPOZ.index('ZRODLO'); EZALPOZ.prefix(REF.FIRMA,$POZDOK.ref(),$POZDOK.ref());
         {? EZALPOZ.first()
         || {? ~exec('upd_ezal','kasa_pozdok',1)
            || {? ~_sel_size
               || FUN.info('Zaliczka powiązana z przynajmniej jedną pozycją\n'
                           'dokumentu kasowego jest zamknięta lub\n'
                           'edytowana przez innego operatora.'@)
               ?};
               undo()
            ?}
         ?};
         exec('del_d','kasa_pozdok');
         POZDOK.del()
      !}
   ?};
   DOKUMENT.cntx_pop();
   {? _wplatgot || exec('stwplhan','kasa_wplaty',$DOKUMENT.ref()) ?};
   _wyn:=DOKUMENT.del();
   {? var_pres('licz_gr')>0 || licz_gr+=1 ?};
   end();
   exec('dok_suma','kasa_wspolne')
?};
{? _ws || _wyn ?}

\dokusgbe
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula poczatkowa dla grupowego usuwania dokumentow
::  OLD: \dokusgbe/vat_ks.fml
::----------------------------------------------------------------------------------------------------------------------
licz_gr:=0; ile_zazn:=DOKUMENT.sel_size();
_pyt:=FUN.ask('Czy usunąć zaznaczone dokumenty?'@);
{? ~_pyt || &licz_gr; &ile_zazn ?};
_pyt


\dokusgae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula koncowa dla grupowego usuwania dokumentow
::  OLD: \dokusgae/vat_ks.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Liczba zaznaczonych dokumentów: %1\n'
   'Liczba usuniętych dokumentów: %2'@[$ile_zazn,$licz_gr]);
&licz_gr; &ile_zazn; 1


\ad_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Po akcji Wyswietl dla tabeli DOKUMENT
::  OLD: \ad_dok/okna.fml
::----------------------------------------------------------------------------------------------------------------------
_dispdok:=1;

:: DRO_TODO_AWI_OK______: zostawić jeśli robimy obsługę budżetową
{? DOKUMENT.TYP_DOK='KWT'
|| {? STANKAS.CZY_ZDEP='T'
   || MLEX.AKT:=DOKUMENT.AKT().SYM;
      MLEX.WPL:=DOKUMENT.WPL().O
   || MLEX.AKT:=DOKUMENT.AKT_NDEP;
      MLEX.WPL:=DOKUMENT.WPL_NDEP
   ?}
?};

{? DOKUMENT.OPER().CZY1_POZ='T'
|| dsp_dok:=1;
   POZDOK.index('DOKUMENT');
   POZDOK.prefix(DOKUMENT.ref);
   {? POZDOK.first()
   || _win_dokument:=exec('dokument_win_edit','kasa_dokument',DOKUMENT.TYP_DOK,0);
      _win_pozdok:=exec('pozdok_win_edit','kasa_pozdok',0);

      _title:='Dokument kasowy'@;

      _win_red:=DOKUMENT.mk_edit(_title,,'dokumentonepoz');
      DOKUMENT.win_ewin(_win_red,,_win_dokument);
      DOKUMENT.win_ecol(_win_red);
      DOKUMENT.win_ewin(_win_red,POZDOK,_win_pozdok,'Pozycja'@);
      DOKUMENT.win_edit(_win_red);
      exec('set_efld_opt','kasa_dokument',_win_red,DOKUMENT);
      exec('set_efld_opt','kasa_pozdok',_win_red,DOKUMENT)
   ?}
|| exec('dokument_win_edit_set','kasa_dokument',,DOKUMENT.TYP_DOK)
?};

DOKUMENT.display();

VAR_DEL.delete('dsp_dok')


\selwplgt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przeniesienie wplat gotowkowych do arkusza kasowego
::  OLD: \selwplgt/mobhan.fml
::----------------------------------------------------------------------------------------------------------------------
MBWPL.win_sel('SEL');
MBWPL.index('STANZAL');
MBWPL.prefix('P','',);
MBWPL.select()


\dokument_wplaty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Rejestracja dokumentu kasowego na podstawie wpłaty gotówkowej - Wpłata
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='KAS_DOK_DDOK';
_params.AKCJA:='Wpłata';

_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'MBWPL',MBWPL.ref());
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'RAPORT',RAPORT.ref());
exec('mp_run','#b__box',_params)


\akcwplgt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.10]
:: OPIS: przeniesienie wplat gotowkowych na raport kasowy
::   WY: 1-przeniesiono 0-nie
::  OLD: \akcwplgt/mobhan.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_tab:=MBWPL.sel_aget();
MBWPL.sel_adel();
MBWPL.cntx_psh();
{? _tab.size()
|| _tab.clear();
   {? _tab.first() & FUN.ask('Czy zarejestrowć zaznaczone wpłaty gotówkowe w raporcie kasowym?'@)
   ||
::    wybor operacji kasowej
      DOKUMENT.cntx_psh();
      POZDOK.cntx_psh();
      ST.POZOPER:=null;
      _oper:=exec('oper_f3','kasa_wspolne',1);
      {? _oper<>''
      || POZOPER.index('OPER');
         POZOPER.prefix(OPER.ref);
         POZOPER.win_sel('WER2');
         __blamws:=1;
         POZOPER.win_edit('RED'+{? KPARAM.CZY_B='T' || '1' || '2' ?});
         _wyn:=POZOPER.select(,,,{? PAR_SKID.get(80)='N' || 'F' || '' ?});
         VAR_DEL.delete('__blamws');

         ST.POZOPER:={? _wyn || POZOPER.ref() || null ?}
      ?};
      {? ST.POZOPER<>null
      || {!
         |? {? (MBWPL.clear(); MBWPL.seek(_tab.REF,)) & MBWPL.STAN='P'
            || _rDok:=exec('addDok','kasa_wspolne',RAPORT.ref(),INFO.NAROD,1);
               do();
               {? _rDok=null() | ~exec('addPoz','kasa_wspolne',_rDok,ST.POZOPER,MBWPL.WAR,MBWPL.WAR,1) || undo() ?};
               end()
            ?};
            _tab.next()
         !}
      ?};
      DOKUMENT.cntx_pop();
      POZDOK.cntx_pop()
   ?}
|? FUN.ask('Czy zarejestrować wpłatę gotówkową w raporcie kasowym?'@)
||
:: wybor operacji kasowej
   DOKUMENT.cntx_psh();
   POZDOK.cntx_psh();
   ST.POZOPER:=null;
   _oper:=exec('oper_f3','kasa_wspolne',1);
   {? _oper<>''
   || POZOPER.index('OPER');
      POZOPER.prefix(OPER.ref);
      POZOPER.win_sel('WER2');
      __blamws:=1;
      POZOPER.win_edit('RED'+{? KPARAM.CZY_B='T' || '1' || '2' ?});
      _wyn:=POZOPER.select(,,,{? PAR_SKID.get(80)='N' || 'F' || '' ?});
      VAR_DEL.delete('__blamws');

     ST.POZOPER:={? _wyn || POZOPER.ref() || null ?}
   ?};
   {? ST.POZOPER<>null
   || _rDok:=exec('addDok','kasa_wspolne',RAPORT.ref(),INFO.NAROD,1);
      do();
      {? _rDok=null() | ~exec('addPoz','kasa_wspolne',_rDok,ST.POZOPER,MBWPL.WAR,MBWPL.WAR,1) || undo() ?};
      end()
   ?};
   DOKUMENT.cntx_pop();
   POZDOK.cntx_pop()
?};
MBWPL.cntx_pop();
~~


\faks_do_kasy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Rejestracja dokumentu kasowego na podstawie Faktury sprzedaży
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy utworzyć zapis w raporcie kasowym na podstawie dokumentu sprzedaży?'@)
|| _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='KAS_DOK_DDOK';
   _params.AKCJA:='Faktura';

   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FAKS',FAKS.ref());
   exec('mp_run','#b__box',_params)
?}


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła ustala PARSES
::   WE: UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;

_result:=1;

{? var_pres('RAPORT',_in)=type_of(null()) & _in.RAPORT
|| _result:=0;
   _stKasowe_kod:=#(3+(8+$_in.RAPORT+5));
   {? _stKasowe_kod
   || __PARSES.setVal('StKasowe',_stKasowe_kod);
      _result:=1
   ?}
?};

_result


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::   WY: 0 - nie można iść dalej
::       1 - można iść dalej
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};

_can_continue:=1;
_result:=0;

_keyRefs:=_mp.getRefs();
_can_continue:=1;

{? obj_len(_keyRefs)>0
||
   {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];

      {? type_of(_kref)>0
      ||
         {? 3+ref_name(_kref)=3+DOKUMENT.name()
         || _dokument:=exec('FindAndGet','#table',DOKUMENT,_kref,,,null());

            {? _dokument=null()
            ||
::             Nie znaleziono dokumentu kasowego powiązanego z rekordem kluczowym
               _can_continue:=0;
               _msg:='Nie znalezionu dokumentu kasowego.\nZadanie zostanie zakończone.'@;
               {? _mp.isService()=0
               || FUN.emsg(_msg)
               ?};
               _mp.done()
            ?};
            {? _can_continue
            ||
               _raport:=exec('FindAndGet','#table',DOKUMENT,_kref,,"DOKUMENT.RAPORT",null());
               _status:=exec('FindAndGet','#table',RAPORT,_kref,,"RAPORT.STATUS",~~);
               {? _status=~~
                  | exec('rap_code','kasa_raport',_status)<>0 & exec('rap_code','kasa_raport',_status)<>1
               ||
::                kończymy rejestrację dokumentu kasowego bo raport kasowy jest zamknięty
                  _msg:={? BI_PREL.DESC='' || ' ' || ': "'+BI_PREL.DESC+'" ' ?};
                  _msg:='Raport kasowy został zamknięty.\nZadanie%1zostanie zakończone.'@[_msg];
                  {? _mp.isService()=0
                  || FUN.emsg(_msg)
                  ?};
                  _mp.done()
               ?}
            ?}
         ?}
      ?}
   !}
?};
{? _can_continue>0
|| _result:=1
?};
_result


\clean_raport
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.02]
:: OPIS: Czyści listę zadań dotyczącą dokumentów zamkniętego raportu kasowego _a
::   WE: _a - RAPORT.ref()
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_raport:=_a;

RAPORT.cntx_psh();
RAPORT.use(ref_name(_raport));
RAPORT.prefix();
{? RAPORT.seek(_raport) & RAPORT.STATUS=exec('rap_stat','kasa_raport',2)
||
   DOKUMENT.cntx_psh();
   DOKUMENT.use((3+DOKUMENT.name())+(RAPORT.name()+5));
   DOKUMENT.index('RAPORT');
   DOKUMENT.prefix(RAPORT.ref());
   _loop:=DOKUMENT.first();
   {!
   |? _loop
   |!
      {? DOKUMENT.STAT_REJ<>'Z'
      ||
         DOKUMENT.cntx_psh();
         params_exec('dokument_clean','!kas_dok_ddok');
         DOKUMENT.cntx_pop()
      ?};
      _loop:=DOKUMENT.next()
   !};
   DOKUMENT.cntx_pop()
?};
RAPORT.cntx_pop()

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:37 d6281a0506ef6ce3a3ac878173a3cc478000090eacd2aa3ba001e4a14f0a875e2e458c2a320cd06cc6fac072d08ac88fa774fa4e69b199ee5e8c755b07ae06c98ea2888e2cdcead784a20e48f2e2a83b631cb650a31feba34ff59363257639a413cad5b3ee6ff6cd0de3c99585dc404bd7aa11918326e1a795dde4748e8a766e
