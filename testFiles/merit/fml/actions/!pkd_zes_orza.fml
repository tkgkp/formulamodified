:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !pkd_zes_orza.fml
:: Utworzony: 25.05.2016
:: Autor: areKc
::======================================================================================================================
:: Zawartość: Formuły czynności PKD_ZES_ORZA - Wydruk zaświadczeń
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Wydruk zaświadczeń - główna formuła czynności.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL
::
{? ~exec('dostepny_u','f_zatr',,,'P',1)
|| return()
|? __PARSES.getVal('F_ZATR').KOD<>'P'
|| _args:=__PARSES.args('F_ZATR');
   _args.KOD:='P';
   __PARSES.setVal('F_ZATR',_args)
?};
{? exec('lic','#b_domain','PEP')
||
::   _for:="exec('dokumenty_grupowe','paperless_grp',,'Inne',,'T')";
   _for:="{? exec('cli_functions','#system')
          || _par:=params_get();
             {? var_pres('_par')>100 & var_pres('PEP',_par)>0 & obj_ntab(_par.PEP) & var_pres('active',_par.PEP)>0
             || _par.PEP.active:=1
             ?};
             sel_exit()
          || FUN.emsg(exec('indevice_nacc_msg','#system'))
          ?}";

   _icon:='|document-list-wheel,0:0:0';
   _obj:=exec('obj_ntab_set','#array',,'N','Paperless &HR'@,'W','H','F',_for,'I',_icon,'R','PEP')
|| _obj:=~~
?};
exec('rep_exec','#b_report','PKD_ZES_ORZA','pkd_zasw*',,1,,,,,_obj)


\wybierz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Wydruk zaświadczeń - funkcja do wyboru pracowniów, dla których przygotowujemy zaświadczenie.
::   WE: _a  - brak parametru przerywa sprawdzanie, null lub wartość inna niż _P - wydruk z menu, _P - wydruk w procesie
::      [_b] [ARRAY] - tablica z elementami zgodna z exec('wybierz_args','pracownik').
::   WY: 0 - przerywamy wybór pracowników / 1 - nie przerywamy wyboru pracowników
::----------------------------------------------------------------------------------------------------------------------
{? _<1 || _a:=null()
|? type_of(_a)<>7 || return(0)
?};
_args:={? var_pres('_b')=117 || _b || ~~ ?};

_ok:=0;
{? _a=null()
|| {? var_press('__PRAC')>100
   || {? __PRAC.P.size()=1
      || & __PRAC;
         __PRAC:=exec('wybierz_parses','pracownik','PKD',_args);
         _ok:=__PRAC.P.first()
      |? __PRAC.P.size()>1
      || _ok:=__PRAC.P.next()
      ?}
   || __PRAC:=exec('wybierz_parses','pracownik','PKD',_args);
      _ok:=__PRAC.P.first()
   ?};
   _prac:=__PRAC.P.SQL
|| _prac:=_a;
   _ok:=1
?};
P.clear();
{? _ok & P.seek(_prac) || 1 || 0 ?}


\aneks_do_umowy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Wybór aneksów do umowy o pracę do drukowania zaświadczeń.
::   WE:
::   WY: tabela z aneksami do wydrukowania
::----------------------------------------------------------------------------------------------------------------------
Cntx.psh(P,H_UM,H,UD_DEF);
{? +P_FILTER.STATUS
|| UD_FIR.cntx_psh();
   UD_FIR.index('UD_SKL');
   UD_FIR.prefix(exec('firma','ustawienia'));
   _ud_skl:={? UD_FIR.first() || UD_FIR.UD_SKL || null() ?};
   UD_FIR.cntx_pop()
|| _ud_skl:=__PARSES.getVal('JednostkaOrganizacyjna').REF
?};
UD_DEF.seek(exec('szukaj_ud_def','schemat',exec('domyslny','schemat','PODZORG'),_ud_skl).REF,,1);

_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='PKD';
_args.F_ZATR:=__PARSES.getVal('F_ZATR').KOD;
_args.VIEW:={? +P_FILTER.STATUS || P_FILTER.STATUS || __PARSES.getVal('ZakresDanych') ?};

_tab:=tab_tmp(1,
   'P','STRING[16]','Pracownik',
   'H','STRING[16]','Aneks do umowy o pracę',
   'PPSF_H','STRING[16]','Praca zdalna',
   'PPSF_ADR','STRING[240]','Adresy pracy zdalnej',
   'CFG','STRING[6]','Parametry PPSF',
   'LP','INTEGER','Kolejność'
);
_tabh:=_tab.ndx_tmp(,1,'H',,);
_tabp:=_tab.ndx_tmp(,1,'P',,);
_tablp:=_tab.ndx_tmp(,1,'LP',,);

_werp:=P.mk_sel('Pracownicy'@,,0,'anekspracowni',0,0,30,,'U',,,,,'maximized');
_werum:=H_UM.mk_sel('Umowy'@,,0,'aneksumowy',90,0,10,,'U',,,,,'maximized');
_werh:=H.mk_sel('Aneks do umowy'@,,0,'aneksaneks',90,25,10,,'U',,,,,'maximized');

{? __ppsf.czyPPSF
|| Cntx.psh(PPSF_H,PPSF_ADR);
   PPSF_H.index('PRAC_AKT');
   exec('wybor_do_druku_aneksu','ppsf',__ppsf.obj)
|| __ppsf.obj.jestH:=__ppsf.obj.jestA:=0;
   __ppsf.obj.brakH:=__ppsf.obj.brakA:=0;
   __ppsf.obj.drukH:=__ppsf.obj.drukA:=0;
   __ppsf.obj.PPSF_H:=__ppsf.obj.PPSF_ADR:='';
   __ppsf.obj.CFG:='000000';
   __ppsf.obj.pobierz:=""
?};

params_set('args',_args,'werum',_werum,'werh',_werh,'tab',_tab,'tabh',_tabh,'tabp',_tabp,'werp',_werp,'obj',__ppsf.obj);
:: okno - pracownicy
P.win_fld(_werp,,'T',,,-10,,1,'Identyfikator'@);
P.win_fld(_werp,,'OSOBA','NAZWISKO',,20,,1,'Nazwisko'@);
P.win_fld(_werp,,'OSOBA','PIERWSZE',,20,,1,'Imię'@);
P.win_fld(_werp,,'WYDZIAL','SYMBOL',,-20,,1,'Jednostka organizacyjna'@);
P.win_fld(_werp,,'ZA',,,3,,1,'Zatrudniony'@,,,2,,"'T'","'N'");
P.win_act(_werp,,'Formuła','Drukuj'@@,,,"sel_exit()",,,,,,'D',,'target=window,icon=print');
P.win_act(_werp,,'Kolejność');
P.win_act(_werp,,'Rekord',,,,
   "   params_set(_par:=params_get());
      _par.tab.index(_par.tabp);
      _par.tab.find_key($P.ref())
   "
);
P.win_btn(_werp,'text=%1,panel=bottom,align=end'['Drukuj'@],'menu:D');
P.win_btn(_werp,'text=%1,panel=bottom,align=end'['Anuluj'@],'key:Esc');
:: okno - umowy o pracę
H_UM.win_fld(_werum,,'OD',,,-13,,1,'Data rozpoczęcia'@);
H_UM.win_fld(_werum,,'DO',,,-13,,1,'Data zakończenia'@);
H_UM.win_fld(_werum,,'RU','K',,5,,1,'Typ'@);
H_UM.win_fld(_werum,,'NUMER',,,15,,1,'Numer umowy'@);
H_UM.win_fld(_werum,H,'PRZEDST',,,45,,1,'Przedstawiciel pracodawcy'@);
H_UM.win_act(_werum,,'Okienko',,,,
   "  win_set('cur_row_pos=-1',H_UM,params_get().werum)
   "
);
H_UM.win_act(_werum,,'Rekord',,,,
   "   params_set(_par:=params_get());
      H.index('HISTUM');
      H.prefix(H_UM.ref());
      H.last();
      grp_disp(H,_par.werh)
   "
);
:: okno - aneksy do umowy
H.win_fld(_werh,,'OD',,,-13,,1,'Data rozpoczęcia'@);
H.win_fld(_werh,,'DO',,,-13,,1,'Data zakończenia'@);
H.win_fld(_werh,,'KZ','KZ',,2,,1,'Kod'@);
H.win_fld(_werh,,'RU','K',,2,,1,'Typ'@);
H.win_fld(_werh,,'ST','ST',,20,,1,'Stanowisko'@);
H.win_fld(_werh,,'WYDZIAL','SYMBOL',,-20,,1,'Jednostka organizacyjna'@);
H.win_fld(_werh,,'RWY',,,5,3,1,'Wymiar'@);
H.win_fld(_werh,,'S1',,,-12,2,1,'Stawka wynagrodzenia'@);
H.win_act(_werh,,'Formuła','Wybierz'@@,,,
   "   params_set(_par:=params_get());
      _par.tab.P:=$H.P;
      _par.tab.H:=$H.ref();
      _par.obj.pobierz();
      _par.tab.PPSF_H:=_par.obj.PPSF_H;
      _par.tab.PPSF_ADR:=_par.obj.PPSF_ADR;
      _par.tab.CFG:=_par.obj.CFG;
      {? (~+|_par.obj.PPSF_H & H.prev()) | +|_par.obj.PPSF_H
      || _par.tab.LP:=_par.tab.size()+1;
         {? _par.tab.add() || P.actions_grayed(_par.werp,'') ?}
      ?};
      grp_disp(P,_par.werp)
   ",,1,0,,,'W'
);
H.win_act(_werh,,'Formuła','W&ycofaj'@@,,,
   "   params_set(_par:=params_get());
       _par.tab.index(_par.tabh);
      {? _par.tab.find_key($H.ref()) || _par.tab.del() ?};
      P.actions_grayed(_par.werp,{? _par.tab.size() || '' || 'D' ?});
      grp_disp(P,_par.werp)
   ",,,0,,,'Y'
);
H.win_act(_werh,,'Okienko',,,,
   "  win_set('cur_row_pos=-1',H,params_get().werh)
   "
);
H.win_act(_werh,,'Rekord',,,,
   "  _par:=params_get();
      _par.tab.index(_par.tabh);
      {? _par.tab.find_key($H.ref())
      || _gray:='W'
      || {? __ppsf.czyPPSF
         || Cntx.psh(H,PPSF_H);
            PPSF_H.index('PRAC_AKT');
            PPSF_H.prefix();
            _wh:=''+\"
               PPSF_H.P=:_a and
               PPSF_H.AKT='T' and
               PPSF_H.DRUK_U='T' and
               PPSF_H.ORIGIN='U' and
               (PPSF_H.OD<=to_date(:_c) or to_date(:_c) is null) and
               (PPSF_H.DO>=to_date(:_b) or PPSF_H.DO is null)
            \";
            {? ~PPSF_H.f_set(,,_wh,P.ref(),H.OD,H.DO)
            || PPSF_H.f_set(,,'0=1')
            ?}
         ?};
         _gray:=
            {? H.prev()
            || 'Y'
            || {? {? __ppsf.czyPPSF || ~PPSF_H.f_first() || 1 ?}
               || 'WY'
               || ''
               ?}
            ?};
         {? __ppsf.czyPPSF || Cntx.pop(H,PPSF_H) ?}
      ?};
      H.actions_grayed(_par.werh,_gray)
   "
);
H.win_btn(_werh,'text=%1,panel=right,align=begin'['Wybierz'@],'menu:W');
H.win_btn(_werh,'text=%1,panel=right,align=begin'['W&ycofaj'@],'menu:Y');
:: okno grupowe
_grpp:=P.grp_make('Aneks do umowy o pracę'@,
   "  params_set(_par:=params_get());
      P.actions_grayed(_par.werp,'D');
      exec('filtruj_p','schemat',_par.args.DOMAIN,UD_DEF.ref(),_par.args.F_ZATR,'',_par.args.VIEW);
      P.f_first();
      H_UM.index('OD');
      H.index('HISTUM')
   ",'wybaneksum',,,,,'maximized'
);
P.win_sel(_grpp);
P.grp_sel(_grpp,P,_werp,,
   "  params_set(_par:=params_get());
      grp_disp(H_UM,_par.werum)
   ",,,30,,,,,'maximized'
);

P.grp_splt(_grpp,,'vertical','umowy');
P.grp_sel(_grpp,H_UM,_werum,,
   "  params_set(_par:=params_get());
      grp_disp(H,params_get().werh)
   ",,,12,
   "  H_UM.index('OD');
      H_UM.prefix({? P.f_get() || P.ref() || null() ?});
      {? H_UM.last()
      || 1
      || H.index('HISTUM');
         H.prefix({? H_UM.get() || H_UM.ref() || null() ?});
         H.last();
         params_set(_par:=params_get());
         grp_disp(H,params_get().werh)
      ?}
   ",,,,'maximized'
);

P.grp_splt(_grpp,'umowy','horizontal','aneksy');
P.grp_sel(_grpp,H,_werh,,,,,15,
   "  H.index('HISTUM');
      H.prefix({? H_UM.get() || H_UM.ref() || null() ?});
      H.last()
   ",,,,'maximized'
);

{? ~P.select()
   & _tab.size()
   & FUN.ask('Niektóre aneksy do umowy zostały wybrane do wydruku.'@+'\n'+'Czy na pewno zrezygnować?'@)
|| _tab.erase()
?};

Cntx.pop(P,H_UM,H,UD_DEF);
{? __ppsf.czyPPSF
|| Cntx.pop(PPSF_H,PPSF_ADR);
   {? PPSF_H.f_active() || PPSF_H.f_clear() ?};
   {? PPSF_ADR.f_active() || PPSF_ADR.f_clear() ?}
?};
_tab.index(_tablp);
_tab


\umowa_o_prace
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Wybór umowy o pracę do drukowania zaświadczeń.
::   WE:
::   WY: tabela z umowami o pracę do wydrukowania
::----------------------------------------------------------------------------------------------------------------------
{? __ppsf
|| PPSF_H.cntx_psh();
   PPSF_H.index('PRAC_AKT')
?};
_ppsfObj:=obj_new('jest','pobierz','PPSF_H');

P.cntx_psh();
H_UM.cntx_psh();
UD_DEF.cntx_psh();
{? +P_FILTER.STATUS
|| UD_FIR.cntx_psh();
   UD_FIR.index('UD_SKL');
   UD_FIR.prefix(exec('firma','ustawienia'));
   _ud_skl:={? UD_FIR.first() || UD_FIR.UD_SKL || null() ?};
   UD_FIR.cntx_pop()
|| _ud_skl:=__PARSES.getVal('JednostkaOrganizacyjna').REF
?};
UD_DEF.seek(exec('szukaj_ud_def','schemat',exec('domyslny','schemat','PODZORG'),_ud_skl).REF,,1);

_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='PKD';
_args.F_ZATR:=__PARSES.getVal('F_ZATR').KOD;
_args.VIEW:={? +P_FILTER.STATUS || P_FILTER.STATUS || __PARSES.getVal('ZakresDanych') ?};

_tab:=tab_tmp(1,
   'P','STRING[16]','Pracownik',
   'UM','STRING[16]','Umowa o pracę',
   'PPSF_H','STRING[16]','Praca zdalna',
   'LP','INTEGER','Kolejność'
);
_tabum:=_tab.ndx_tmp(,1,'UM',,);
_tabp:=_tab.ndx_tmp(,1,'P',,);
_tablp:=_tab.ndx_tmp(,1,'LP',,);

_werp:=P.mk_sel('Pracownicy'@,,0,'anekspracowni',0,0,30,,'U',,,,,'maximized');
_werum:=H_UM.mk_sel('Umowy'@,,0,'aneksumowy',90,0,30,,,,,,,'maximized');

params_set('args',_args,'werum',_werum,'tab',_tab,'tabum',_tabum,'tabp',_tabp,'werp',_werp,'ppsfObj',_ppsfObj);

P.win_fld(_werp,,'T',,,-10,,1,'Identyfikator'@);
P.win_fld(_werp,,'OSOBA','NAZWISKO',,20,,1,'Nazwisko'@);
P.win_fld(_werp,,'OSOBA','PIERWSZE',,20,,1,'Imię'@);
P.win_fld(_werp,,'WYDZIAL','SYMBOL',,-20,,1,'Jednostka organizacyjna'@);
P.win_fld(_werp,,'ZA',,,3,,1,'Zatrudniony'@,,,2,,"'T'","'N'");
P.win_act(_werp,,'Formuła','Drukuj'@@,,,"sel_exit()",,,,,,'D',,'target=window,icon=print');
P.win_act(_werp,,'Kolejność');
P.win_act(_werp,,'Rekord',,,,
   "  params_set(_par:=params_get());
      _par.tab.index(_par.tabp);
      _par.tab.find_key($P.ref())
   "
);
P.win_btn(_werp,'text=%1,panel=bottom,align=end'['Drukuj'@],'menu:D');
P.win_btn(_werp,'text=%1,panel=bottom,align=end'['Anuluj'@],'key:Esc');

H_UM.win_fld(_werum,,'OD',,,-13,,1,'Data rozpoczęcia'@);
H_UM.win_fld(_werum,,'DO',,,-13,,1,'Data zakończenia'@);
H_UM.win_fld(_werum,,'RU','K',,5,,1,'Typ'@);
H_UM.win_fld(_werum,,'NUMER',,,15,,1,'Numer umowy'@);
H_UM.win_fld(_werum,H,'PRZEDST',,,45,,1,'Przedstawiciel pracodawcy'@);
H_UM.win_act(_werum,,'Okienko',,,,"win_set('cur_row_pos=-1',H_UM,params_get().werum)");
H_UM.win_act(_werum,,'Formuła','Wybierz'@@,,,
   "  params_set(_par:=params_get());
      _par.tab.P:=$H_UM.P;
      _par.tab.UM:=$H_UM.ref();
      _par.tab.LP:=_par.tab.size()+1;
      _par.ppsfObj.pobierz();
      _par.tab.PPSF_H:=
         {? _par.ppsfObj.jest
         || _par.ppsfObj.PPSF_H
         || ''
         ?};
      {? _par.tab.add() || P.actions_grayed(_par.werp,'') ?};
      grp_disp(P,_par.werp)
   ",,1,0,,,'W'
);
H_UM.win_act(_werum,,'Formuła','W&ycofaj'@@,,,
   "  params_set(_par:=params_get());
      _par.tab.index(_par.tabum);
      {? _par.tab.find_key($H_UM.ref()) || _par.tab.del() ?};
      P.actions_grayed(_par.werp,{? _par.tab.size() || '' || 'D' ?});
      grp_disp(P,_par.werp)
   ",,,0,,,'Y'
);
H_UM.win_act(_werum,,'Rekord',,,,
   "  H.index('HISTUM');
      H.prefix(H_UM.ref());
      H.first();
      _tab:=params_get();
      _tab.tab.index(_tab.tabum);
      _gray:={? _tab.tab.find_key($H_UM.ref()) || 'W' || 'Y' ?};
      H_UM.actions_grayed(params_get().werum,_gray)
   "
);
H_UM.win_btn(_werum,'text=%1,panel=right,align=begin'['Wybierz'@],'menu:W');
H_UM.win_btn(_werum,'text=%1,panel=right,align=begin'['W&ycofaj'@],'menu:Y');

:: Praca zdalna
{? __ppsf
|| exec('wybor_do_druku_umowy','ppsf',_ppsfObj)
|| _ppsfObj.pobierz:="";
   _ppsfObj.jest:=0;
   _ppsfObj.PPSF_H:=''
?};

:: okna grupowe
_grpp:=P.grp_make('Umowa o pracę'@,
   "  params_set(_par:=params_get());
      P.actions_grayed(_par.werp,'D');
      exec('filtruj_p','schemat',_par.args.DOMAIN,UD_DEF.ref(),_par.args.F_ZATR,'',_par.args.VIEW);
      P.f_first();
      H_UM.index('OD');
      H.index('HISTUM');
      H.prefix(H_UM.ref())
   ",'wybaneksum',,,,,'maximized'
);

P.win_sel(_grpp);
P.grp_sel(_grpp,P,_werp,,
   "  params_set(_par:=params_get());
      grp_disp(H_UM,_par.werum)
   ",,,30,,,,,'maximized'
);
P.grp_splt(_grpp,,'vertical','umowy');
P.grp_sel(_grpp,H_UM,_werum,,,,,30,
   "  H_UM.prefix({? P.f_get() || P.ref() || null() ?});
      H_UM.last()
   ",,,,'maximized'
);

{? ~P.select()
   & _tab.size()
   & FUN.ask('Niektóre umowy zostały wybrane do wydruku.'@+'\n'+'Czy na pewno zrezygnować?'@)
|| _tab.erase()
?};

UD_DEF.cntx_pop();
H_UM.cntx_pop();
P.cntx_pop();
{? __ppsf
|| PPSF_H.cntx_pop();
   PPSF_H.f_clear()
?};
_tab.index(_tablp);
_tab


\info_o_warunkach
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
::  MOD: MicKoc 09.10.2021
:: OPIS: Wybór pracownika do drukowania zaświadczenia: informacja warunkach pracy.
::   WE: _a [INTEGER] - czy wywołanie jako Paperless
::       _b [STRING] - wskazanie na pracownika uidref
::       _c [INTEGER] - dla Paperless, 0 - pierwsze wywołanie, 1 - kolejne
::   WY: tabela z przygotowanymi informacjami o warunkach pracy
::----------------------------------------------------------------------------------------------------------------------
_paperless:=var_pres('_a')=type_of(0) & _a;
_prac:={? var_pres('_b')>100 & var_pres('UID',_b)=27 & +_b.UID & P.seek(_b.UID,) || P.ref() || 0 ?};
_czy_paperless:=var_pres('_c')=type_of(0) & _c;
{? _paperless & _prac & _czy_paperless
|| return(1)
|? _paperless & ~_prac
|| return(0)
?};
UD_DEF.cntx_psh();
UD_DEF.index('SYMBOL');
{? +P_FILTER.STATUS
|| UD_FIR.cntx_psh();
   UD_FIR.index('UD_SKL');
   UD_FIR.prefix(exec('firma','ustawienia'));
   _ud_skl:={? UD_FIR.first() || UD_FIR.UD_SKL || null() ?};
   UD_FIR.cntx_pop()
|| _ud_skl:=__PARSES.getVal('JednostkaOrganizacyjna').REF
?};
UD_DEF.seek(exec('szukaj_ud_def','schemat',exec('domyslny','schemat','PODZORG'),_ud_skl).REF,,1);

_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='PKD';
_args.F_ZATR:=__PARSES.getVal('F_ZATR').KOD;
_args.VIEW:={? +P_FILTER.STATUS || P_FILTER.STATUS || __PARSES.getVal('ZakresDanych') ?};

_tab:=tab_tmp(1,
   'P','STRING[16]','Pracownik',
   'XR','STRING[16]','Instancja',
   'NR','INTEGER','Nr raportu'
);
_tabp:=_tab.ndx_tmp(,1,'P',,);
_tabxr:=_tab.ndx_tmp(,1,'XR',,,'NR',,);

_BUFF:=tab_tmp(1,
   'N','INTEGER',,
   'ID','STRING[8]',,
   'LB','STRING[50]',,
   'ZP','STRING[127]',,
   'ZW','STRING[127]',,
   'ED','INTEGER',
);

_HELP:=tab_tmp(1,
   'ID','STRING[8]',,
   'ZW','STRING[127]',
);

_werp:=P.mk_sel('Pracownicy'@,,0,'infowarprac',0,0,30,,'U',,1,,,'maximized');
_werb:=_BUFF.mk_sel('Warunki zatrudnienia'@,,,'#buffwarprac',,,,,,,1,,,'maximized');
_werh:=_HELP.mk_sel('',,,'#helpwar',,,20,,,,1,,,'maximized');

params_set(
   'args',_args,
   'tab',_tab,
   'tabp',_tabp,
   'tabxr',_tabxr,
   'werp',_werp,
   'BUFF',_BUFF,
   'werb',_werb,
   'HELP',_HELP,
   'werh',_werh,
   'grup',0,
   'paperless',_paperless,
   'prac',_prac,
   'czy_paperless',_czy_paperless
);
:: okno - pracownicy
P.win_fld(_werp,,'T',,,-10,,1,'Identyfikator'@);
P.win_fld(_werp,,'OSOBA','NAZWISKO',,20,,1,'Nazwisko'@);
P.win_fld(_werp,,'OSOBA','PIERWSZE',,20,,1,'Imię'@);
P.win_fld(_werp,,'WYDZIAL','SYMBOL',,-20,,1,'Jednostka organizacyjna'@);
P.win_fld(_werp,,'ZA',,,3,,1,'Zatrudniony'@,,,2,,"'T'","'N'");
P.win_act(_werp,,'Formuła','Drukuj'@@,,,"sel_exit()",,,,,,'D',,'target=window,icon=print');
P.win_act(_werp,,'Kolejność');
P.win_act(_werp,,'Rekord',,,,
   "  params_set(_par:=params_get());
      _par.tab.index(_par.tabp);
      _par.tab.find_key($P.ref())
   "
);
P.win_btn(_werp,'text=%1,panel=bottom,align=end'['Drukuj'@],'menu:D');
P.win_btn(_werp,'text=%1,panel=bottom,align=end'['Anuluj'@],'key:Esc');
:: okno - wyświetlenie parametrów do redagowania
_BUFF.win_fld(_werb,XR_PAR,'WARTOSC',,,95,,,,1);
_BUFF.win_act(_werb,0,'Formuła','Edytuj'@@,,,,
   "  params_exec('edytuj_a','!pkd_zes_orza')
   ",1,,,,'E'
);
_BUFF.win_act(_werb,0,'Formuła','Wybór'@@,,,
   "  params_set(_par:=params_get());
      {? _par.BUFF.ID='' | _par.BUFF.ED || return(0) ?};
      _par.HELP.win_sel(_par.werh);
      _par.HELP.hdr_sel();
      _par.HELP.hdr_sel(_par.BUFF.LB);
      _par.HELP.prefix(_par.BUFF.ID,_par.BUFF.ID);
      _par.HELP.find_key(_par.BUFF.ZW);
      _par.HELP.select(,1)
   ",
   "  params_get().BUFF.put()
   ",,,,,'W'
);
_BUFF.win_act(_werb,,'Okienko',,,,
   "  win_set('cur_row_pos=-1',params_get().BUFF,params_get().werb)
   "
);
_BUFF.win_act(_werb,0,'Rekord',,,,
   "  _par:=params_get();
      XR_PAR.WARTOSC:=
         {? +_par.BUFF.ZW || form(_par.BUFF.ZP+' '+_par.BUFF.ZW+'.')
         |? _par.BUFF.ED || form(_par.BUFF.ZP+'.')
         || _par.BUFF.LB
         ?};
      _gray:={? _par.BUFF.ID='' | _par.BUFF.ED || 'WE' || '' ?};
      _gray+={? _par.grup
             || 'AY'
             |? _par.tab.find_key($P.ref())
             || 'A'
             || 'Y'
             ?};
      _par.BUFF.actions_grayed(_par.werb,_gray);
      _par.BUFF.ID=''
   "
);
{? _paperless
|| _BUFF.win_act(_werb,,'Formuła','Akceptuj'@@,,,
      "  params_set(_par:=params_get());
         _par.tab.P:=$P.ref();
         {? _par.tab.add()
         || params_exec('akceptuj_warunki','!pkd_zes_orza');
            P.actions_grayed(_par.werp,'')
         ?};
         sel_exit()
      ",,,0,,,'A',,'target=window'
   )
|| _BUFF.win_act(_werb,,'Formuła','Akceptuj'@@,,,
      "  params_set(_par:=params_get());
         _par.tab.P:=$P.ref();
         {? _par.tab.add()
         || params_exec('akceptuj_warunki','!pkd_zes_orza');
            P.actions_grayed(_par.werp,'');
            grp_disp(P,_par.werp)
         ?}
      ",,,0,,,'A',,'target=window'
   );
   _BUFF.win_act(_werb,,'Formuła','W&ycofaj'@@,,,
      " params_set(_par:=params_get());
         _par.tab.index(_par.tabp);
         exec('del_par','rap_zew',__xr_ins,_par.tab.NR);
         _par.tab.del();
         P.actions_grayed(_par.werp,{? _par.tab.size() || '' || 'D' ?});
         grp_disp(P,_par.werp)
      ",,,0,,,'Y',,'target=window'
   )
?};
_BUFF.win_btn(_werb,'text=%1,panel=right,align=begin'['Edytuj'@],'menu:E');
_BUFF.win_btn(_werb,'text=%1,panel=right,align=begin'['Wybór'@],'menu:W');
_BUFF.win_btn(_werb,'text=%1,panel=bottom,align=end'['Akceptuj'@],'menu:A');
_BUFF.win_btn(_werb,'text=%1,panel=bottom,align=end'['W&ycofaj'@],'menu:Y');

_add:="
   _BUFF:=params_get().BUFF;
   _BUFF.blank();
   {! _arg:=1.._  |! {? type_of(_[_arg])=type_of(_BUFF[_arg]) || _BUFF[_arg]:=_[_arg] ?} !};
   _BUFF.add()
";
_num:=9;
_add(_num+=1,'Normy czasu pracy:');
_add(_num+=1,'NCP_SYSP','(?) system czasu pracy','Obowiązuje');
_add(_num+=1,'NCP_NDOB','(?) norma dobowa','Dobowa norma czasu pracy wynosi');
_add(_num+=1,'NCP_NTYG','(?) norma tygodniowa','Tygodniowa norma czasu pracy wynosi');

      _add(_num+=1,'NCP_WDOB','(?) wymiar dobowy','Dobowy wymiar czasu pracy wynosi');
      _add(_num+=1,'NCP_WTYG','(?) wymiar tygodniowy','Tygodniowy wymiar czasu pracy wynosi');
      _add(_num+=1,'NCP_WDOW','(?) wypoczynek dobowy','Wymiar dobowego wypoczynku');
      _add(_num+=1,'NCP_WTYW','(?) wypoczynek tygodniowy','Wymiar tygodniowego wypoczynku');

_add(_num+=1,'NCP_MIES','(?) okres rozliczeniowy','Długość okresu rozliczeniowego wynosi');
_add(_num+=1,'NCP_GODZ','(?) godziny pracy','Praca wykonywana jest');

      _add(_num+=1,'NCP_PPRA','(?) przerwy w pracy','Przysługujące przerwy w pracy');
      _add(_num+=1,'NCP_ZPGN','(?) praca w godzinach nadliczbowych','Zasady pracy w godzinach nadliczbowych');
      _add(_num+=1,'NCP_RPGN','(?) rekompensata za godziny nadliczbowe','Rekompensata za godziny nadliczbowe');
      _add(_num+=1,'NCP_PZNZ','(?) przechodzenie ze zmiany na zmianę','Zasady przechodzenia ze zmiany na zmianę');
      _add(_num+=1,'NCP_PMMP','(?) przemieszczanie się między miejscami pracy','Przemieszczanie się między miejscami pracy');

_add(_num+=1,,'Wypłata wynagrodzenia:');
_add(_num+=1,'WW_ZASAD','(?) częstotliwość wypłat','Wynagrodzenie wypłaca się');
_add(_num+=1,'WW_DODAT','(?) wypłata dodatków',
   'Wynagrodzenie i dodatek za pracę w godzinach nadliczbowych oraz inne świadczenia wypłacane są');
_add(_num+=1,'WW_WOLNE','(?) wypłata w dniu wolnym',
   'Jeżeli ustalony dzień wypłaty jest dniem wolnym od pracy, wynagrodzenie wypłaca się');
_add(_num+=1,'WW_PRZEL','(?) przelew wynagrodzenia',
   'Wynagrodzenie wypłacane jest przelewem na rachunek bankowy, wskazany przez pracownika','w oświadczeniu');

      _add(_num+=1,'WW_INNE','(?) inne składniki wynagrodzenia','Inne składniki wynagrodzenia');
      _add(_num+=1,'WW_SPRZ','(?) świadczenia pieniężne i rzeczowe','Świadczenia pieniężne i rzeczowe');

_add(_num+=1,,'Zasady rozwiązania stosunku pracy:');
_add(_num+=1,'WYPOKRES','(?) długość okresu',
   'Umowa o pracę może być rozwiązana z zachowaniem okresu wypowiedzenia trwającego');
_add(_num+=1,'WYPDZIEN','(?) koniec okresu',
   'Okres wypowiedzenia winien upływać');
_add(_num+=1,'WYPSAD','Odwołanie do Sądu:','Termin odwołania się do Sądu Pracy');
_add(_num+=1,'WYPINNE','(?)');
_add(_num+=1,,'Urlop wypoczynkowy:');
_add(_num+=1,'UW_1','(?)');
_add(_num+=1,'UW_2','(?)');
_add(_num+=1,'UW_3','(?)');
_add(_num+=1,'UW_4','(?)');

      _add(_num+=1,,'Inne:');
      _add(_num+=1,'IN_SZKOL','(?) szkolenia','Szkolenia');
      _add(_num+=1,'IN_UZBIO','(?) układ zbiorowy','Układ zbiorowy');
      _add(_num+=1,'IN_ZIUSP','(?) nazwa instytucji ubezpieczenia społecznego','Nazwa instytucji ubezpieczenia społecznego');

{? __ppsf
|| _add(_num+=1,,'Kontrola trzeźwości:');
   _add(_num+=1,'KOT','(?)');
   _add(_num+=1,,'Warunki pracy zdalnej:');
   _add(_num+=1,'PR_ZD_0','(?)');
   _add(_num+=1,'TMP01','(?)',,,1);
   _add(_num+=1,'PR_ZD_UD','(?)');
   _add(_num+=1,'TMP02','(?)',,,1);
   _add(_num+=1,'PR_ZD_OO','(?)')
?};

_HELP.index(_HELP.ndx_tmp(,1,'ID',,0,'ID',,0,'ZW',,0));
_HELP.win_fld(_werh,,'ZW',,,120,,,,1);
_HELP.win_act(_werh,1,'Dołącz',,,,,,1);
_HELP.win_act(_werh,1,'Rekord',,,,,
   " cur_tab(1,1).ID:=params_get().BUFF.ID; +form(cur_tab(1,1).ZW)
   "
);
_HELP.win_act(_werh,0,'Formuła','Wybierz'@@,,,
   "  params_get().BUFF.ZW:=cur_tab(1,1).ZW
   ",
   "  sel_exit()
   ",1,,,,'W'
);
_HELP.win_act(_werh,0,'Rekord',,,,,
   "  cur_tab(1,1).ID:=params_get().BUFF.ID; +form(cur_tab(1,1).ZW)
   "
);
_HELP.win_act(_werh,0,'Dołącz');
_HELP.win_act(_werh,0,'Popraw');
_HELP.win_act(_werh,0,'Usuń');
_help_bak:='warphlp.txt';
{? {? _file:=fopen(_help_bak,'r',1) || fclose(_file); 1 ?}
|| _HELP.import(_help_bak,1,0,'|',,1024,'ID',,1,,'ZW',,2,)
?};
:: okno grupowe
_grpp:=P.grp_make('Informacja o warunkach pracy'@,
   "  _par:=params_get();
      P.actions_grayed(_par.werp,'D');
      exec('filtruj_p','schemat',_par.args.DOMAIN,UD_DEF.ref(),_par.args.F_ZATR,'',_par.args.VIEW);
      {? _par.paperless & _par.prac || P.f_seek(_par.prac,) || P.f_first() ?}
   ",'wybwarprac',,,,,'maximized'
);
P.win_sel(_grpp);
{? ~_paperless
|| P.grp_sel(_grpp,P,_werp,,
      "  params_set(_par:=params_get());
         grp_disp(_par.BUFF,_par.werb)
      ",,,30,,,,,'maximized'
   );
   P.grp_splt(_grpp,,'vertical','umowy')
?};
_BUFF.first();
P.grp_sel(_grpp,_BUFF,_werb,,,,,,
   "  params_set(_par:=params_get());
      _par.grup:=P.sel_aget().size();
      {? P.f_get() || exec('szczegoly_warunk','!pkd_zes_orza',_par.BUFF) || _par.BUFF.erase() ?};
      _par.BUFF.hdr_sel();
      _par.BUFF.hdr_sel(' - '+P.OSOBA().NAZWISKO+' '+P.OSOBA().PIERWSZE+' ('+|P.T+')');
      _par.BUFF.first()
   ",,,,'maximized'
);
{? _paperless & _prac || P.seek(_prac,) ?};
{? ~P.select(,_paperless & _prac)
   & _tab.size()
   & FUN.ask('Niektóre informacje zostały przygotowane do wydruku.'@+'\n'+'Czy na pewno zrezygnować?'@)
|| _tab.erase()
?};
UD_DEF.cntx_pop();
_HELP.clear();
_HELP.export('warphlp.txt',0,'|',,1024,'ID',,1,,'ZW',,2,);
_HELP.ndx_drop();
_tab.ndx_drop();
_tab.size()


\szczegoly_warunk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Przygotowanie informacji szczegółowych do drukowania zaświadczenia: informacja warunkach pracy.
::   WE: _a - tabela, do której zapisujemy zebrane informacje
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ustaw:="
   _a.blank();
   _a.ID:=_b;
   {? _a.find_rec()
   || _a.ZW:=_c;
   _a.put()
   ?}
";

{? _a.first()
|| {!
   |? _a.ZW:='';
      _a.put();
      _a.next()
   !}
?};

H.index('_HISTKOD');
H.prefix(P.ref,'Z');
{? H.find_le(date())
|| _datakal:=date()
|| _datakal:=P.DZA
?};
_norma:=exec('norma','godziny',_datakal);

_ustaw(_a,'NCP_SYSP','podstawowy system pracy');
_ustaw(_a,'NCP_NDOB','%1 %2'[$_norma,{? _norma=1 || 'godzina' || 'godzin' ?}]);
" 'można odkomentować np. na życzenie klienta najczęściej stosowane opcje';
_ustaw(_a,'NCP_NTYG','40 godzin w przeciętnie 5-dniowym tygodniu pracy');
_ustaw(_a,'NCP_MIES','4 miesiące');
_ustaw(_a,'NCP_GODZ','od poniedziałku do piątku w godzinach od 9:00 do 17:00');
";
_ustaw(_a,'WW_ZASAD','raz w miesiącu, w ostatnim dniu danego miesiąca');
_ustaw(_a,'WW_DODAT','najpóźniej w najbliższym terminie płatności przypadającym po dacie ustalenia ich wysokości');
_ustaw(_a,'WW_WOLNE','w dniu poprzedzającym');
_ustaw(_a,'WW_PRZEL','w oświadczeniu');

_okres:=_dzien:='';
H.prefix(P.ref(),'Z');
{? H.find_le(date())
|| _ru:=H.RU().K;
   '_rdat - uwzględnia wyrok Sądu Najwyższego z 19 grudnia 1996 r. (I PKN 47/96, OSNAPiUS1997/17/310)';
   {! _ii:=1..obj_len(__KA) |! __KA[_ii]:=0 !};
   _rdat:=
      "  {? _a~3=(_b+1)~3
         || _rdat:=(((_b+1)~1-_a~1)*12+(_b+1)~2-_a~2);
            __KA.year+=_rdat%12;
            __KA.month+=_rdat%*12
         || __KAL.rdat(_a,_b);
            __KA.year+=__KAL.year;
            __KA.month+=__KAL.month;
            __KA.day+=__KAL.day
         ?}
      ";
      _do:="{? _a=#0 | _a>_b || _b || _a ?}";
      _licz:=
         "  _dt:=date(2016,2,22);
            _where:={? _>3 & _d=_dt || 'and (P.DZ>to_date(\\\'2016-02-22\\\') or P.DZ is null)' || '' ?};
            _tab:=sql(
               'select P.DZA, P.DZ '+
               'from P join F_ZATR using (P.F_ZATR,F_ZATR.REFERENCE) join OSOBA using (P.OSOBA,OSOBA.REFERENCE)'+
               'where P.FIRMA=:_c and F_ZATR.KOD=\\\':_a\\\' and P.OSOBA=:_b '+_where+' '+
               'order by P.DZA',
               'P',P.OSOBA,exec('ref_firma','ustawienia')
            );
' _a - funkcja ustalająca datę do (funkcja _do)';
' _b - funkcja sumująca (funkcja _sum)';
' _c - data graniczna końca okresu';
' _d - data związana ze zmianą K.p. od 2016/02/22, brak parametru - jeżeli nie dotyczy';
            {? _tab.first()
            || {? _tab.DZA<=_c
               || _od:={? _>3 & _d=_dt & _tab.DZA<_dt || _dt || _tab.DZA ?};
                  _do:=_a(_tab.DZ,_c);
                  _loop:=_tab.next();
                  {!
                  |? _loop
                  |! {? _tab.DZA<=_c
                     || {? _tab.DZA<=_do & (_tab.DZ=#0 | _tab.DZ>_do)
                        || _do:=_a(_tab.DZ,_c)
                        |? _tab.DZA>_do
                        || _b(_od,_do);
                           _od:=_tab.DZA;
                           _do:=_a(_tab.DZ,_c)
                        ?};
                        _loop:=_tab.next()
                     || _loop:=0
                     ?}
                  !};
                  _b(_od,_do);
                  __KA.month+=__KA.day%30;
                  __KA.day:=__KA.day%*30;
                  __KA.year+=__KA.month%12;
                  __KA.month:=__KA.month%*12
               ?}
            ?}
         ";

   {? _ru='A' | _ru='D'
   || 'okres probny i zastepstwo';
      {? H.DO-P.DZA+1<=14 | _ru='D'
      || _okres:='3 dni'
      || _rdat(P.DZA,H.DO);
         _okres:={? __KA.month<3 || '1 tydzień' || '2 tygodnie' ?};
         _dzien:='w sobotę'
      ?}
   |? _ru='B'
   ||  'czas okreslony';
      '_dt - data nowelizacji KP wprowadzająca okresy wypowiedzenia jak dla umów na czas nieokreślony';
      _dt:=date(2016,2,22);
      {? H.OD>=_dt & P.DZA>=_dt
         || _licz(_do,_rdat,{? date()<=H.DO || date() || H.DO ?});
         {? __KA.year>=3
         || _okres:='3 miesiące';
            _dzien:='w ostatni dzień miesiąca'
         |? __KA.year*12+__KA.month>=6
         || _okres:='1 miesiąc';
            _dzien:='w ostatni dzień miesiąca'
         || _okres:='2 tygodnie';
            _dzien:='w sobotę'
         ?}
      || {? H.DO>=_dt
            || _licz(_do,_rdat,{? date()<=H.DO || date() || H.DO ?},{? H.UMOWA().OD<_dt || _dt || P.DZA ?});
            {? __KA.year>=3
            || _okres:='3 miesiące';
               _dzien:='w ostatni dzień miesiąca'
            |? __KA.year*12+__KA.month>=6
            || _okres:='1 miesiąc';
               _dzien:='w ostatni dzień miesiąca'
            || _okres:='2 tygodnie';
               _dzien:='w sobotę'
            ?}
            || _licz(_do,_rdat,H.DO);
            {? __KA.year*12+__KA.month>6 | (__KA.month=6 & __KA.day>0)
            || _okres:='2 tygodnie';
               _dzien:='w sobotę'
            ?}
         ?}
      ?}
   |? _ru='C'
   || 'nie okreslony';
      _licz(_do,_rdat,{? H.DO=#0 | date()<=H.DO || date() || H.DO ?});
      {? __KA.year>=3
      || _okres:='3 miesiące';
         _dzien:='w ostatni dzień miesiąca'
      |? __KA.year*12+__KA.month>=6
      || _okres:='1 miesiąc';
         _dzien:='w ostatni dzień miesiąca'
      || _okres:='2 tygodnie';
         _dzien:='w sobotę'
      ?}
   ?}
?};

_ustaw(_a,'WYPOKRES',_okres);
_ustaw(_a,'WYPDZIEN',_dzien);
_txt:='(odwołanie do Sądu Pracy składa się w terminie 21 dni od dnia doręczenia pisma)';
_ustaw(_a,'WYPSAD',_txt);

KART_URL.prefix(P.ref(),date()~1);
{? KART_URL.first()
|| _lim:=KART_URL.LIM_AKT;
   {? _lim
   || _ustaw(_a,'UW_1','Wymiar urlopu wypoczynkowego wynosi %1 dni' [$_lim]);
      _od:={? P.NAB_URL<date(date()~1,1,1) || date(date()~1,1,1) || P.NAB_URL ?}$6;
      _ustaw(_a,'UW_2','Urlop wypoczynkowy w tym wymiarze przysługuje od dnia %1' [_od])
   ?};
   {? KART_URL.DATA_DOD<>#0
   || _ustaw(_a,'UW_3',
             {? date()<KART_URL.DATA_DOD
             || 'Z dniem %1 wymiar urlopu zostanie zwiększony do %2 dni'
                  [KART_URL.DATA_DOD$6,$(KART_URL.LIM_AKT+KART_URL.URL_DOD)]
             || 'Z dniem %1 wymiar urlopu został zwiększony do %2 dni'
                  [KART_URL.DATA_DOD$6,$(KART_URL.LIM_AKT+KART_URL.URL_DOD)]
             ?}
      )
   ?};
  {? KART_URL.DATA_NSP<>#0
  || _ustaw(_a,'UW_4',
            {? date()<KART_URL.DATA_NSP
            || 'Z dniem %1 wymiar urlopu zostanie zwiększony dodatkowo o %2 dni' [KART_URL.DATA_NSP$6,$KART_URL.URL_NSP]
            || 'Z dniem %1 wymiar urlopu został zwiększony dodatkowo o %2 dni' [KART_URL.DATA_NSP$6,$KART_URL.URL_NSP]
            ?}
     )
  ?}
?};
_ppsf_ud:=_ppsf_oo:='';
{? __ppsf
|| PPSF_H.prefix(P.ref(),'T',);
   PPSF_ADR.prefix(P.ref(),'T',);
   {? PPSF_H.first() | PPSF_ADR.first()
   || _ppsf_h:='';
      _ppsf_hd:='';
      _ppsf_adr:='';
      _ppsf:=~~;
      _adresy:=PPSF_ADR.size()>0;
      _czyY:=-1;
      _ppsf:=obj_new(PPSF_H.size()+_adresy);
      _licz:=0; {! _licz:=1..obj_len(_ppsf) |! _ppsf[_licz]:='' !};
      _licz:=0;
      _len:=0;
      {? PPSF_H.first()
      || {!
         |? {? (PPSF_H.DO=#0 | PPSF_H.DO>H.OD) & (PPSF_H.OD<H.DO | H.DO=#0)
            || _licz+=1;
               _ppsf_h:=exec('opis_warp','ppsf','harm');
               _ppsf_hd:=exec('opis_warp','ppsf','dnih');
               _ppsf[_licz]:='Praca zdalna wykonywana '+_ppsf_h+_ppsf_hd;
               _ppsf[_licz]+='.';
               _ppsf_oo+={? +PPSF_H.OO || PPSF_H.OO+', ' || '' ?};
               _len+=1
            ?};
            PPSF_H.next()
         !}
      ?};
      {? PPSF_ADR.first()
      || _licz+=1;
         {!
         |? {? (PPSF_ADR.DO=#0 | PPSF_ADR.DO>H.OD) & (PPSF_ADR.OD<H.DO | H.DO=#0)
            || _ppsf_adr+=exec('opis_warp','ppsf','adres');
               _ppsf_adr+=', ';
               _czyY+=1
            ?};
            PPSF_ADR.next()
         !};
         _len+=(_czyY>=0);
         _ppsf_adr-=2;
         _ppsf_adr+='.';
         _ppsf[_licz]:=' Adres%1 świadczenia pracy: %2'@[{? _czyY || 'y' || '' ?},_ppsf_adr]
      ?};
      {? _len
      || _tmp:=_ppsf;
         &_ppsf;
         _ppsf:=obj_new(_len);
         {! _licz:=1.._len |! _ppsf[_licz]:=_tmp[_licz] !}
      ?};
      _ppsf_ud:=H.WYDZIAL().SYMBOL+' '+UD_SKL.OPIS
   ?};
   _ppsf_oo:={? +_ppsf_oo || _ppsf_oo-2 || '' ?};
   _ustaw(_a,'TMP01',exec('opis_warp','ppsf','ppsf_ud'));
   _ustaw(_a,'TMP02',exec('opis_warp','ppsf','ppsf_oo'))
?};
_ustaw(_a,'PR_ZD_UD',&_ppsf_ud);
_ustaw(_a,'PR_ZD_OO',&_ppsf_oo)


\akceptuj_warunki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Zapisanie do XR_PAR informacji szczegółowych do drukowania zaświadczenia: informacja warunkach pracy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_BUFF:=params_get().BUFF;
_tab:=params_get().tab;
exec('ins_par','rap_zew',__xr_ins,cnt+=1,
   'P_REF',$P.ref(),
   'F_NAZWA',KST.NAZWA,
   'MIEJSCE',PAR_WYDR.MIEJSC,
   'DATA',date()$4,
   'F_ULICA',exec('ulica','stalesys'),
   'F_POCZTA',exec('poczta','stalesys'),
   'F_REGON',KST.REG,
   'F_NIP',KST.NIP,
   'F_NKP',KST.NKP,
   'F_LOGO',{? PAR_WYDR.LOGO || exec('tmp_cp_logo','img_blob') || '' ?}

);
exec('ins_par','rap_zew',__xr_ins,cnt,
   'NAZWISKO',OSOBA.NAZWISKO,
   'IMIE',OSOBA.PIERWSZE,
   'DRUGIEIM',OSOBA.DRUGIE,
   'PLEC',OSOBA.PLEC,
   'STANOWIS',P.ST().ST
);

{? _BUFF.first()
|| {!
   |? _txtB:='';
      _txtA:='';
      {? _BUFF.ID='PR_ZD_UD'
      || _txtB:=exec('opis_warp','ppsf','ppsf_ud')+': ';
         _txtA:='.'
      ?};
      {? _BUFF.ID='PR_ZD_OO'
      || _txtB:=exec('opis_warp','ppsf','ppsf_oo')+': ';
         _txtA:='.'
      ?};
      {? +_BUFF.ZW & +_BUFF.ID & ~_BUFF.ED
      || exec('ins_par','rap_zew',__xr_ins,cnt,_BUFF.ID,_txtB+_BUFF.ZW+_txtA)
      ?};
      _BUFF.next()
   !}
?};
{? __ppsf
|| exec('ins_par','rap_zew',__xr_ins,cnt,'PRACA_ZD',$__xr_ins);
   exec('ins_par','rap_zew',__xr_ins,cnt,'PRACA_ZW',$cnt)
|| exec('ins_par','rap_zew',__xr_ins,cnt,'PRACA_ZD','')
?};
_tab.XR:=$__xr_ins;
_tab.NR:=cnt;
_tab.put();
_BUFF.first()


\przeszeregowanie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Wybór pracowników do drukowania zaświadczeń o przeszeregowanie.
::   WE:
::   WY: tabela z listą pracowników do wydrukowania zaświadczenia
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.cntx_psh();
{? +P_FILTER.STATUS
|| UD_FIR.cntx_psh();
   UD_FIR.index('UD_SKL');
   UD_FIR.prefix(exec('firma','ustawienia'));
   _ud_skl:={? UD_FIR.first() || UD_FIR.UD_SKL || null() ?};
   UD_FIR.cntx_pop()
|| _ud_skl:=__PARSES.getVal('JednostkaOrganizacyjna').REF
?};
UD_DEF.seek(exec('szukaj_ud_def','schemat',exec('domyslny','schemat','PODZORG'),_ud_skl).REF,,1);

_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='PKD';
_args.F_ZATR:=__PARSES.getVal('F_ZATR').KOD;
_args.VIEW:={? +P_FILTER.STATUS || P_FILTER.STATUS || __PARSES.getVal('ZakresDanych') ?};

_tab:=tab_tmp(1,
   'P','STRING[16]','Pracownik',
   'H','STRING[16]','Aneks do umowy o pracę',
   'LP','INTEGER','Kolejność'
);
_tabp:=_tab.ndx_tmp(,1,'P',,);
_tablp:=_tab.ndx_tmp(,1,'LP',,);

_param:=tab_tmp(,
   'DD','DATE','Data decyzji',
   'OD','DATE','Zakres od',
   'DO','DATE','Zakres do'
);
_param.fld_fml('DD','AFTER_EDIT',
   "  {? fld=#0
      || FUN.emsg(\'Proszę podać datę decyzji.\');
         cur_tab(1,1).DD:=date(,,1); 0
      || 1
      ?}
   "
);
_param.fld_fml('OD','AFTER_EDIT',
   "  {? cur_tab(1,1).OD>cur_tab(1,1).DO
      || FUN.emsg(\'Data początkowa badanego okresu nie może być późniejsza od daty końcowej.\'@);
         cur_tab(1,1).OD:=cur_tab(1,1).DO; 0
      || 1
      ?}
   "
);
_param.fld_fml('DO','AFTER_EDIT',
   "  {? cur_tab(1,1).OD>cur_tab(1,1).DO
      || FUN.emsg(\'Data końcowa badanego okresu nie może być wcześniejsza od daty poczatkowej.\'@);
         cur_tab(1,1).DO:=cur_tab(1,1).OD; 0
      || 1
      ?}
   "
);
_param.DD:=_param.OD:=date(,,1);
_param.DO:=date(,,0);
_param.add();

_werp:=P.mk_sel('Pracownicy'@,,,'przeszerprac',0,0,30,,'U',,,,,'maximized');
_redpar:=_param.mk_edit('Parametry wydruku',0,'redprzeszereg',,,'maximized');

params_set('args',_args,'tab',_tab,'tabp',_tabp,'werp',_werp,'param',_param);

P.win_fld(_werp,,'T',,,-10,,1,'Identyfikator'@);
P.win_fld(_werp,,'OSOBA','NAZWISKO',,20,,1,'Nazwisko'@);
P.win_fld(_werp,,'OSOBA','PIERWSZE',,20,,1,'Imię'@);
P.win_fld(_werp,,'WYDZIAL','SYMBOL',,-20,,1,'Jednostka organizacyjna'@);
P.win_fld(_werp,,'ZA',,,3,,1,'Zatrudniony'@,,,2,,"'T'","'N'");
P.win_act(_werp,,'Formuła','Wybierz'@@,,,
   "  _par:=params_get();
      _par.tab.P:=$P.ref();
      _par.tab.H:='';
      _par.tab.LP:=_par.tab.size()+1;
      _par.tab.add()
   ",,1,1,,,'W'
);
P.win_act(_werp,,'Formuła','Wybierz ws&zystkich'@@,,,
   "  _par:=params_get();
      _par.tab.index(_par.tabp);
      {? P.f_first()
      || {!
         |? {? ~_par.tab.find_key($P.ref())
            || _par.tab.P:=$P.ref();
               _par.tab.H:='';
               _par.tab.LP:=_par.tab.size()+1;
               _par.tab.add()
            ?};
            P.f_next()
         !};
         P.f_first()
      ?}
  ",,,1,,,'Z'
);
P.win_act(_werp,,'Formuła','W&ycofaj'@@,,,
   "  params_set(_par:=params_get());
      _par.tab.index(_par.tabp);
      {? _par.tab.find_key($P.ref()) || _par.tab.del() ?};
      grp_disp(P,_par.werp)
   ",,,1,,,'Y'
);
P.win_act(_werp,,'Formuła','Drukuj'@@,,,"sel_exit()",,,,,,'D',,'target=window,icon=print');
P.win_act(_werp,,'Kolejność');
P.win_act(_werp,,'Rekord',,,,
   "  _par:=params_get();
      _gray:={? _par.tab.size() || '' || 'D' ?};
      _par.tab.index(_par.tabp);
      _gray+={? _par.tab.find_key($P.ref()) || 'W' || 'Y' ?};
      _gray+={? P.sel_size() || 'Z' || {? P.f_size()=_par.tab.size() || 'Z' || '' ?} ?};
      P.actions_grayed(_par.werp,_gray);
      _par.tab.index(_par.tabp);
      _par.tab.find_key($P.ref())
   "
);
P.win_act(_werp,,'Okienko',,,,
   "  win_set('cur_row_pos=-1',P,params_get().werp)
   "
);
P.win_btn(_werp,'text=%1,panel=bottom,align=end'['Drukuj'@],'menu:D');
P.win_btn(_werp,'text=%1,panel=bottom,align=end'['Anuluj'@],'key:Esc');

_param.win_esep(_redpar,'Decyzja'@);
_param.win_efld(_redpar,,'DD',,,11,,,'Z dnia'@);
_param.win_esep(_redpar,'Zmiana wynagrodzenia w okresie'@);
_param.win_efld(_redpar,,'OD',,,11,,,'Data od'@);
_param.win_efld(_redpar,,'DO',,,11,,,'Data do'@);
_param.win_ebtn(_redpar,'text=%1,panel=bottom,align=end'['Szukaj'@],'key:F2');

_grpp:=P.grp_make('Przeszeregowanie'@,
   "  params_set(_par:=params_get());
      exec('filtruj_p','schemat',_par.args.DOMAIN,UD_DEF.ref(),_par.args.F_ZATR,'',_par.args.VIEW);
      exec('czy_przeszereg','!pkd_zes_orza',_par.param.OD,_par.param.DO);
      grp_disp(P,_par.werp)
   ",'grpprzeszer',,,,,'maximized'
);
P.win_sel(_grpp);
P.grp_edit(_grpp,_param,_redpar,,,
   "  params_set(_par:=params_get());
      {? edit_start()
      || exec('filtruj_p','schemat',_par.args.DOMAIN,UD_DEF.ref(),_par.args.F_ZATR,'',_par.args.VIEW);
         exec('czy_przeszereg','!pkd_zes_orza',_par.param.OD,_par.param.DO);
         win_activate('przeszereg');
         grp_disp(P,_par.werp)
      || sel_exit()
      ?}
   ",,,'maximized'
);
P.grp_splt(_grpp,,'vertical','przszergowani',',25%');
P.grp_sel(_grpp,P,_werp,,,20,,30,,,,,'maximized','przeszereg');

{? ~P.select()
   & _tab.size()
   & FUN.ask('Niektórzy pracownicy zostali wybrani do wydruku.'@+'\n'+'Czy na pewno zrezygnować?'@)
|| _tab.erase()
|| param[1]:=_param.DD;
   param[2]:=_param.OD;
   param[3]:=_param.DO
?};
UD_DEF.cntx_pop();
_tab.index(_tablp);
_tab


\czy_przeszereg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Wyszukanie pracowników mających przeszeregowanie w podanym okresie i usunięcie nie spełniających krteyrium
::   WE: _a - początkek okresu
::       _b - koniec okresu
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FORMULA.cntx_psh();
H.cntx_psh();
H.index('_HISTKOD');

_test:=obj_new('S1','S2','S3','S4','ST','S2T','S2P','S3T','S3P','WAL1','WAL2','WAL3','WAL4');

{? P.f_first()
|| {!
   |? H.prefix(P.ref(),'Z');
      {? H.find_le(_b) & H.OD>=_a
      || _test.S1:=H.S1;
         _test.S2:=H.S2;
         _test.S3:=H.S3;
         _test.S4:=H.S4;
         _test.ST:=H.ST;
         _test.S2T:=H.S2T;
         _test.S2P:=H.S2P().NAZWA;
         _test.S3T:=H.S3T;
         _test.S3P:=H.S3P().NAZWA;
         _test.WAL1:={? H.CZYWAL='T' || H.WAL().KOD || 'zł' ?};
         _test.WAL2:={? H.CZYWAL2='T' || H.WAL().KOD || 'zł' ?};
         _test.WAL3:={? H.CZYWAL3='T' || H.WAL().KOD || 'zł' ?};
         _test.WAL4:={? H.CZYWAL4='T' || H.WAL().KOD || 'zł' ?};
         {? H.prev()
         || _wal1:={? H.CZYWAL='T' || H.WAL().KOD || 'zł' ?};
            _wal2:={? H.CZYWAL2='T' || H.WAL().KOD || 'zł' ?};
            _wal3:={? H.CZYWAL3='T' || H.WAL().KOD || 'zł' ?};
            _wal4:={? H.CZYWAL4='T' || H.WAL().KOD || 'zł' ?};
            {? _test.S1<>H.S1 | _test.S2<>H.S2 | _test.S3<>H.S3 | _test.S4<>H.S4 | _test.ST<>H.ST
               | _test.S2T<>H.S2T | _test.S2P<>H.S2P().NAZWA | _test.S3T<>H.S3T | _test.S3P<>H.S3P().NAZWA
               | _wal1<>_test.WAL1 | _wal2<>_test.WAL2 | _wal3<>_test.WAL3 | _wal4<>_test.WAL4
            || P.f_next()
            || P.f_del()
            ?}
         || P.f_del()
         ?}
      || P.f_del()
      ?}
   !}
?};
H.cntx_pop();
FORMULA.cntx_pop();
obj_del(_test);
P.f_first()


\zas_rodzinny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Wybór pracowników do drukowania zaświadczeń do zasiłku rodzinnego.
::   WE: _a [INTEGER] - czy wywołanie jako Paperless
::       _b [STRING] - wskazanie na pracownika uidref
::       _c [INTEGER] - dla Paperless, 0 - pierwsze wywołanie, 1 - kolejne
::   WY: tabela z listą pracowników do wydrukowania zaświadczenia
::----------------------------------------------------------------------------------------------------------------------
_paperless:=var_pres('_a')=type_of(0) & _a;
_prac:={? var_pres('_b')=type_of(null()) & P.seek(_b) || P.ref() || 0 ?};
_czy_paperless:=var_pres('_c')=type_of(0) & _c;
_tab:=tab_tmp(1,
   'P','STRING[16]','Pracownik',
   'LP','INTEGER','Kolejność'
);
_tabp:=_tab.ndx_tmp(,1,'P',,);
_tablp:=_tab.ndx_tmp(,1,'LP',,);
{? _paperless & _prac & ~_czy_paperless
|| _tab.P:=$P.ref();
   _tab.LP:=1;
   _tab.add();
   return(_tab)
?};
UD_DEF.cntx_psh();
{? +P_FILTER.STATUS
|| UD_FIR.cntx_psh();
   UD_FIR.index('UD_SKL');
   UD_FIR.prefix(exec('firma','ustawienia'));
   _ud_skl:={? UD_FIR.first() || UD_FIR.UD_SKL || null() ?};
   UD_FIR.cntx_pop()
|| _ud_skl:=__PARSES.getVal('JednostkaOrganizacyjna').REF
?};
UD_DEF.seek(exec('szukaj_ud_def','schemat',exec('domyslny','schemat','PODZORG'),_ud_skl).REF,,1);

_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='PKD';
_args.F_ZATR:=__PARSES.getVal('F_ZATR').KOD;
_args.VIEW:={? +P_FILTER.STATUS || P_FILTER.STATUS || __PARSES.getVal('ZakresDanych') ?};

_args.WIELU:=~_paperless;
_args.SQL_WHERE:={? _paperless
                 || ''+"P.PORTAL='T' and USERSF.PORTAL2='T'"
                 || ''
                 ?};
_args.SQL_FROM:={? _paperless
                || ''+"JOIN OSOBA using(P.OSOBA, OSOBA.REFERENCE)
                       JOIN USERS using(USERS.OSOBA, OSOBA.REFERENCE)
                       JOIN USERSF using(USERSF.USERS, USERS.REFERENCE)"
                || ''
                ?};

_param:=tab_tmp(,
   'ROK','INTEGER','Zaświadczenie z roku'
);
_param.fld_fml('ROK','AFTER_EDIT',
   "  {? fld()<=1900
      || FUN.emsg(\'Proszę podać poprawny rok do wydruku.\');
         cur_tab(1,1).ROK:=date()~1; 0
      || 1
      ?}
   "
);

_param.ROK:=date()~1;
_param.add();

_werp:=P.mk_sel('Pracownicy'@,,,'zaswrodzprac',0,0,30,,'U',,,,,'maximized');
_redpar:=_param.mk_edit('Parametry wydruku',0,'redzaswrodzp',,,'maximized');

params_set(
   'args',_args,
   'tab',_tab,
   'tabp',_tabp,
   'werp',_werp,
   'param',_param,
   'paperless',_paperless,
   'prac',_prac,
   'czy_paperless',_czy_paperless
);

P.win_fld(_werp,,'T',,,-10,,1,'Identyfikator'@);
P.win_fld(_werp,,'OSOBA','NAZWISKO',,20,,1,'Nazwisko'@);
P.win_fld(_werp,,'OSOBA','PIERWSZE',,20,,1,'Imię'@);
P.win_fld(_werp,,'WYDZIAL','SYMBOL',,-20,,1,'Jednostka organizacyjna'@);
P.win_fld(_werp,,'ZA',,,3,,1,'Zatrudniony'@,,,2,,"'T'","'N'");
{? _paperless
|| P.win_act(_werp,,'Formuła','Dalej'@@,,,
      "  _par:=params_get();
         _par.tab.index(_par.tabp);
         {? _par.tab.find_key($P.ref())
         || _par.tab.del()
         || _par.tab.P:=$P.ref();
            _par.tab.LP:=_par.tab.size()+1;
            _par.tab.add()
         ?};
         sel_exit()
      ",,1,,,,'D',,'target=window'
   )
|| P.win_act(_werp,,'Formuła','Wybierz'@@,,,
   "  _par:=params_get();
      _par.tab.index(_par.tabp);
      {? _par.tab.find_key($P.ref())
      || _par.tab.del()
      || _par.tab.P:=$P.ref();
         _par.tab.LP:=_par.tab.size()+1;
         _par.tab.add()
      ?}
   ",,1,1,,,'W'
);
P.win_act(_werp,,'Formuła','Drukuj'@@,,,
   "  _tab:=params_get().tab;
      {? ~_tab.size()
      || _tab.P:=$P.ref();
         _tab.LP:=1;
         _tab.add()
      ?};
      sel_exit()
   ",,,,,,'D',,'target=window,icon=print'
   )
?};
P.win_act(_werp,,'Kolejność');
P.win_act(_werp,,'Rekord',,,,
   "  _par:=params_get();
      _par.tab.index(_par.tabp);
      _par.tab.find_key($P.ref())
   "
);
P.win_act(_werp,,'Okienko',,,,
   "  win_set('cur_row_pos=-1',P,params_get().werp)
   "
);
{? _paperless
|| P.win_btn(_werp,'text=%1,panel=bottom,align=end'['Dalej'@],'menu:D')
|| P.win_btn(_werp,'text=%1,panel=bottom,align=end'['Drukuj'@],'menu:D')
?};
P.win_btn(_werp,'text=%1,panel=bottom,align=end'['Anuluj'@],'key:Esc');

_param.win_esep(_redpar,'Zaświadczenie za rok');
_param.win_efld(_redpar,,'ROK',,,11,,,'Rok');
_param.win_ebtn(_redpar,'text=%1,panel=bottom,align=end'['Ok'@],'key:F2');

_grpp:=P.grp_make('Zaświadczenie do zasiłku rodzinnego'@,
   "  params_set(_par:=params_get());
      exec('filtruj_p','schemat',
         _par.args.DOMAIN,
         UD_DEF.ref(),
         _par.args.F_ZATR,
         '',
         _par.args.VIEW,
         _par.args.SQL_FROM,
         _par.args.SQL_WHERE
      );
      grp_disp(P,_par.werp)
   ",'grpzaswprzep',,,,,'maximized'
);
P.win_sel(_grpp);
P.grp_edit(_grpp,_param,_redpar,,,
   "  params_set(_par:=params_get());
      {? edit_start()
      || exec('filtruj_p','schemat',
            _par.args.DOMAIN,
            UD_DEF.ref(),
            _par.args.F_ZATR,
            '',
            _par.args.VIEW,
            _par.args.SQL_FROM,
            _par.args.SQL_WHERE
         );
         win_activate('zasrodzin');
         grp_disp(P,_par.werp)
      || sel_exit()
      ?}
   ",,,'maximized'
);
P.grp_splt(_grpp,,'vertical','zaswrodz',',25%');
P.grp_sel(_grpp,P,_werp,,,20,,30,,,,,'maximized','zasrodzin');

{? ~P.select()
   & _tab.size()
   & FUN.ask('Niektórzy pracownicy zostali wybrani do wydruku.'@+'\n'+'Czy na pewno zrezygnować?'@)
|| _tab.erase()
|| par.ROK:=_param.ROK
?};
UD_DEF.cntx_pop();
_tab.index(_tablp);
_tab


\sw_do_wystaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Wybór pracowników do drukowania informacji o terminach wystawienia świadectw pracy.
::   WE:
::   WY: tabela z listą pracowników do wydrukowania informacji
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.cntx_psh();
{? +P_FILTER.STATUS
|| UD_FIR.cntx_psh();
   UD_FIR.index('UD_SKL');
   UD_FIR.prefix(exec('firma','ustawienia'));
   _ud_skl:={? UD_FIR.first() || UD_FIR.UD_SKL || null() ?};
   UD_FIR.cntx_pop()
|| _ud_skl:=__PARSES.getVal('JednostkaOrganizacyjna').REF
?};
UD_DEF.seek(exec('szukaj_ud_def','schemat',exec('domyslny','schemat','PODZORG'),_ud_skl).REF,,1);

_args:=exec('wybierz_args','pracownik');
_args.DOMAIN:='PKD';
_args.F_ZATR:=__PARSES.getVal('F_ZATR').KOD;
_args.VIEW:={? +P_FILTER.STATUS || P_FILTER.STATUS || __PARSES.getVal('ZakresDanych') ?};

_tab:=tab_tmp(1,
   'P','STRING[16]','Pracownik',
   'LP','INTEGER','Kolejność'
);
_tabp:=_tab.ndx_tmp(,1,'P',,);
_tablp:=_tab.ndx_tmp(,1,'LP',,);

_param:=tab_tmp(,
   'OD','DATE','Zakres od',
   'DO','DATE','Zakres do'
);
_param.fld_fml('OD','AFTER_EDIT',
   "  {? cur_tab(1,1).OD=#0
      || FUN.emsg(\'Data początkowa okresu musi być podana.\'@);
         cur_tab(1,1).OD:=date(,,0)+1; 0
      |? cur_tab(1,1).OD>cur_tab(1,1).DO
      || FUN.emsg(\'Data początkowa badanego okresu nie może być późniejsza od daty końcowej.\'@);
         cur_tab(1,1).OD:=date(,,0)+1; 0
      || 1
      ?}
   "
);
_param.fld_fml('DO','AFTER_EDIT',
   "  {? cur_tab(1,1).DO=#0
      || FUN.emsg(\'Data końcowa okresu musi być podana.\'@);
         cur_tab(1,1).DO:=date(cur_tab(1,1).OD~1,cur_tab(1,1).OD~2,0); 0
      |? cur_tab(1,1).OD>cur_tab(1,1).DO
      || FUN.emsg(\'Data końcowa badanego okresu nie może być wcześniejsza od daty poczatkowej.\'@);
         cur_tab(1,1).DO:=date(cur_tab(1,1).OD~1,cur_tab(1,1).OD~2,0); 0
      || 1
      ?}
   "
);
_param.OD:=date(,,0)+1;
_param.DO:=date(_param.OD~1,_param.OD~2,0);
_param.add();

_werp:=P.mk_sel('Pracownicy'@,,,'swdowystaw',0,0,30,,'U',,,,,'maximized');
_redpar:=_param.mk_edit('Parametry wydruku',0,'redswdowys',,,'maximized');

params_set('args',_args,'tab',_tab,'tabp',_tabp,'werp',_werp,'param',_param);

P.win_fld(_werp,,'T',,,-10,,1,'Identyfikator'@);
P.win_fld(_werp,,'OSOBA','NAZWISKO',,20,,1,'Nazwisko'@);
P.win_fld(_werp,,'OSOBA','PIERWSZE',,20,,1,'Imię'@);
P.win_fld(_werp,,'WYDZIAL','SYMBOL',,-20,,1,'Jednostka organizacyjna'@);
P.win_fld(_werp,,'ZA',,,3,,1,'Zatrudniony'@,,,2,,"'T'","'N'");
P.win_act(_werp,,'Formuła','Wybierz'@@,,,
   "  _par:=params_get();
      _par.tab.P:=$P.ref();
      _par.tab.LP:=_par.tab.size()+1;
      _par.tab.add()
   ",,1,1,,,'W'
);
P.win_act(_werp,,'Formuła','Wybierz ws&zystkich'@@,,,
   "  _par:=params_get();
      _par.tab.index(_par.tabp);
      {? P.f_first()
      || {!
         |? {? ~_par.tab.find_key($P.ref())
            || _par.tab.P:=$P.ref();
               _par.tab.LP:=_par.tab.size()+1;
               _par.tab.add()
            ?};
            P.f_next()
         !};
         P.f_first()
      ?}
  ",,,1,,,'Z'
);
P.win_act(_werp,,'Formuła','W&ycofaj'@@,,,
   "  params_set(_par:=params_get());
      _par.tab.index(_par.tabp);
      {? _par.tab.find_key($P.ref()) || _par.tab.del() ?};
      grp_disp(P,_par.werp)
   ",,,1,,,'Y'
);
P.win_act(_werp,,'Formuła','Drukuj'@@,,,"sel_exit()",,,,,,'D',,'icon=print');
P.win_act(_werp,,'Kolejność');
P.win_act(_werp,,'Rekord',,,,
   "  _par:=params_get();
      _gray:={? _par.tab.size() || '' || 'D' ?};
      _par.tab.index(_par.tabp);
      _gray+={? _par.tab.find_key($P.ref()) || 'W' || 'Y' ?};
      _gray+={? P.sel_size() || 'Z' || {? P.f_size()=_par.tab.size() || 'Z' || '' ?} ?};
      P.actions_grayed(_par.werp,_gray);
      _par.tab.index(_par.tabp);
      _par.tab.find_key($P.ref())
   "
);
P.win_act(_werp,,'Okienko',,,,
   "  win_set('cur_row_pos=-1',P,params_get().werp)
   "
);
P.win_btn(_werp,'text=%1,panel=bottom,align=end'['Drukuj'@],'menu:D');
P.win_btn(_werp,'text=%1,panel=bottom,align=end'['Anuluj'@],'key:Esc');

_param.win_esep(_redpar,'Świadectwa Pracy do wydrukowania w okresie:'@);
_param.win_efld(_redpar,,'OD',,,11,,,'Data od'@);
_param.efld_opt(_redpar,'mark=1',,'OD');
_param.win_efld(_redpar,,'DO',,,11,,,'Data do'@);
_param.efld_opt(_redpar,'mark=1',,'DO');
_param.win_ebtn(_redpar,'text=%1,panel=bottom,align=end'['Szukaj'@],'key:F2');

_grpp:=P.grp_make('Świadectwa Pracy do wydrukowania.'@,
   "  params_set(_par:=params_get());
      exec('filtruj_p','schemat',_par.args.DOMAIN,UD_DEF.ref(),_par.args.F_ZATR,'',_par.args.VIEW);
      exec('sw_lista_prac','!pkd_zes_orza',_par.param.OD,_par.param.DO);
      grp_disp(P,_par.werp)
   ",'grpswdowydr',,,,,'maximized'
);
P.win_sel(_grpp);
P.grp_edit(_grpp,_param,_redpar,,,
   "  params_set(_par:=params_get());
      {? edit_start()
      || exec('filtruj_p','schemat',_par.args.DOMAIN,UD_DEF.ref(),_par.args.F_ZATR,'',_par.args.VIEW);
         exec('sw_lista_prac','!pkd_zes_orza',_par.param.OD,_par.param.DO);
         win_activate('pswdowystaw');
         grp_disp(P,_par.werp)
      || sel_exit()
      ?}
   ",,,'maximized'
);
P.grp_splt(_grpp,,'vertical','przszergowani',',25%');
P.grp_sel(_grpp,P,_werp,,,20,,30,,,,,'maximized','pswdowystaw');

{? ~P.select()
   & _tab.size()
   & FUN.ask('Niektórzy pracownicy zostali wybrani do wydruku.'@+'\n'+'Czy na pewno zrezygnować?'@)
|| _tab.erase()
|| __data.OD:=_param.OD;
   __data.DO:=_param.DO
?};
UD_DEF.cntx_pop();
_tab.index(_tablp);
_tab


\sw_lista_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Wyszukanie pracowników, którym należy wydrukować świadectwo pracy w podanym okresie
::   WE: _a - początkek okresu
::       _b - koniec okresu
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? P.f_first()
|| {!
   |? _dswp:=exec('czy_swiadectwo','!pkd_zes_orza').DSWP;
      {? _dswp<>#0 &(_dswp>=_a & _dswp<=_b)
      || P.f_add();
         P.f_next()
      || P.f_del()
      ?}
   !}
?}


\czy_swiadectwo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: warunek kwalifikacji do drukowania informacji, które świadectwa pracy należy wydrukować
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_par:=obj_new('UMOWY','DSWP');
_fum:="H_UM.RU().K+': '+H_UM.OD$2+' - '+H_UM.DO$2";
H_UM.cntx_psh();
H.cntx_psh();
H_UM.index('OD');
H_UM.prefix(P.ref());
:: Data wejscia w zycie nowelizacji.
_dt:=date(2011,3,21);
_dp:=_d24:=_par.DSWP:=#0;
_par.UMOWY:='';
_dn:=H_UM.first();
{!
|? _dn
|! {? 'ABD'*H_UM.RU().K & H_UM.SW<>'T'
   || {? _dp=#0
      ||
:: Pierwsza umowa
         {? H_UM.DO<_dt
         || _dn:=0
:: Pierwsza umowa na czas okreslony zakonczona przed data wejsca w zycie nowelizacji wg starych zasad
         || _par.UMOWY+=_fum();
:: Pierwsza umowa na czas okreslony, zawarta przed lub po dacie wejsca w zycie nowelizacji
:: Ale jezeli przed to w dniu wejscia w zycie nowelizacji byla pierwsza umowa - wg nowych zasad
            H.index('HISTUM');
            H.prefix(H_UM.ref());
            H.first();
            _dp:=H.PODPIS;
            _d24:=date((_dp~1)+2,_dp~2,1)+(_dp~3)-2;
            _dn:=H_UM.next()
         ?}
      ||
:: Kolejna umowa
         _par.UMOWY+='^'+_fum();
         {? H_UM.DO>=_d24
         || _par.DSWP:=H_UM.DO;
:: Umowa na czas okreslony, konczy sie po 24 miesiącach
            _dn:=0
         || _dn:=H_UM.next()
         ?}
      ?}
   || _dn:=0
   ?}
!};
H.cntx_pop();
H_UM.cntx_pop();
_par


\urlop2swiadectwa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.22]
:: OPIS: Ustalenie liczby dni urlopu i ekwiwalentu do świadectwa pracy.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KART_URL.cntx_psh();
KART_URL.index('PRAC_ROK');
KART_URL.prefix(P.ref(),DEFINE.UDO~1);
{? KART_URL.first()
|| _nowy:=(2004<=KART_URL.ROK);
   {? ~_nowy & (KART_URL.LIM_AKT | KART_URL.URL_NSP)
   ||
:: Urlop wypoczynkowy
      _zal:=KART_URL.LIM_ZAL-nieo[16];
      _tzal:={? _zal<0 || 0 || _zal ?};
      nieo[1]:=nieo[1]-_tzal;
      {? nieo[1]<0 || _niew_zal:=|nieo[1]; nieo[1]:=0 || _niew_zal:=0 ?};
      ekw-=_niew_zal;
      {? ekw<0 || ekw:=0 ?};
      nieo[1]+=ekw;
      nieo[2]:=nieo[4]:=0;
:: Urlop dodatkowy
      _zalnsp:=KART_URL.NSP_ZAL-nieo[24];
      _tzalnsp:={? _zalnsp<0 || 0 || _zalnsp ?};
      nieo[22]:=nieo[22]-_tzalnsp;
      {? nieo[22]<0 || _nie_nsp:=|nieo[22]; nieo[22]:=0 || _nie_nsp:=0 ?};
      ekw_nsp-=_nie_nsp;
      {? ekw_nsp<0 || ekw_nsp:=0 ?};
      nieo[22]+=ekw_nsp;
      nieo[23]:=0
   |? _nowy
   ||
:: Urlop wypoczynkowy
      _zal:=KART_URL.LIM_ZAL-nieo[16];
      _tzal:={? _zal<0 || 0 || _zal ?};
      nieo[1]-=_tzal;
      {? nieo[1]<0 || nieo[1]:=0 ?};
      _zal:=KART_URL.LIM_ZALG-nieo[17];
      _tzal:={? _zal<0 || 0 || _zal ?};
      nieo[2]:=nieo[2]-_tzal;
      {? nieo[2]<0 || _niew_zal:=|nieo[2]; nieo[2]:=0 || _niew_zal:=0 ?};
      ekw-=_niew_zal;
      {? ekw<0 || ekw:=0 ?};
      nieo[2]+=ekw;
      nieo[1]+=ekw/fnorma(DEFINE.UDO);
:: Urlop dodatkowy
      _zalnsp:=KART_URL.NSP_ZAL-nieo[24];
      _tzalnsp:={? _zalnsp<0 || 0 || _zalnsp ?};
      nieo[22]-=_tzalnsp;
      {? nieo[22]<0 || nieo[22]:=0 ?};
      _zalnsp:=KART_URL.NSP_ZALG-nieo[25];
      _tzalnsp:={? _zalnsp<0 || 0 || _zalnsp ?};
      nieo[23]:=nieo[23]-_tzalnsp;
      {? nieo[23]<0 || _nie_nsp:=|nieo[23]; nieo[23]:=0 || _nie_nsp:=0 ?};
      ekw_nsp-=_nie_nsp;
      {? ekw_nsp<0 || ekw_nsp:=0 ?};
      nieo[23]+=ekw_nsp;
      nieo[22]+=ekw_nsp/fnorma(DEFINE.UDO)
   ?};
   nieo[12]:=ekw+ekw_nsp;
   nieo[13]:=
      {? _nowy
      || {? nieo[12]=1 || 'godzinę'
         |? '234'*(($nieo[12])+1) || 'godziny'
         || 'godzin'
         ?}
      || {? nieo[12]=1 || 'dzień' || 'dni' ?}
      ?};
   {? _nowy || nieo[14]:=(nieo[12]/fnorma(DEFINE.UDO))$2 ?}
?};
KART_URL.cntx_pop();
nieo[1]+=nieo[3];
nieo[2]+=nieo[4];
nieo[1]:=nieo[1]$2;
~~


\edytuj_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [22.26]
:: OPIS: Akcja "Edytuj" okienka warunków zatrudnienia.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_BUFF:=params_get().BUFF;
{? _BUFF.ID=''
|| return(0)
?};

:: utwórz tabelę do edycji pośredniej warunków zatrudnienia
_TAB:=tab_tmp(1,'ZW','STRING[127]',,'ZP','SYS_MEMO',);
_wnd:=_TAB.mk_edit('Edycja informacji'@,,'#zes_orza_buff');
_TAB.win_esep(_wnd,'Warunki zatrudnienia'@);
_TAB.win_efld(_wnd,,'ZP',,,50,-5,1);
_TAB.win_efld(_wnd,,'ZW',,,50);
exec('ok_esc','#window',_TAB,_wnd,,,,,,,exec('text_red_ok','#window'));
_TAB.win_edit(_wnd);

_TAB.memo_set(_BUFF.ZP,'ZP');
_TAB.ZW:=_BUFF.ZW;
{? _TAB.edit()
|| _BUFF.ZW:=_TAB.ZW;
   _BUFF.put()
?};
~~

:Sign Version 2.0 jowisz:1045 2023/07/21 13:25:24 9dbc362c8e998724d2926767dbd9f0423688dba070721330b356a9330143ccb96f0d006147e6791cf271876cdfee08a5935bb6ff2e08b53a3a68c88ed47648107c3c19dc1ad341b08e840e33001ba44b79eb1fe4a45a4b434225ca638479c6630a97bcf01a19bd6836a2ee9afb79eadf30f643adaa28cdb1db508bff9eae80a3
