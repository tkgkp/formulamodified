:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !fks_dks_dpls.fml
:: Utworzony: 08.06.2016
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności FKS_DKS_DPLS - Dekretacja listy płac
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dekretacja listy płac - główna formuła czynności FKS_DKS_DPLS.
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS,FREJ
:: PARAMETRY WE:
::# kind=WE, symbol=O, type=_O, name=Wskazanie na listę płac, required=T, keyref=T
:: PARAMETRY WY:
::# kind=WY, symbol=DOK, type=_DOK, name=Wskazanie na dokument księgowy, required=T
_mp:=params_get().mp;
_args:=params_get();
_we:=_args.in;
_wy:=_args.out;
_akcja:=-_mp.akcja();

{? var_pres('O',_we)>0
|| exec('fl_decl','dekret_aut');
   exec('dek_decl','dekret_aut');
   exec('sd_decl','dekret_aut');
   _mp.descTodo();
   _auto:=_mp.isAutoRun();
   O.cntx_psh();
   O.prefix();
   {? O.seek(_we.O)
   || {? (_zam:=O.Z<>'T') | (_jest:=O.DOK<>'') | (_sum:=O.T().T='SUM') |
         ( _zlec:=O.F_ZATR().KOD='Z' & exec('one_rh_dok','dok_fks_aut_dok'))
      || {? ~_auto
         || {? _zam
            || FUN.info('Lista płac: %1 jest otwarta.'@[~-O.LT])
            |? _jest
            || FUN.info('Lista płac: %1 jest już zadekretowana.'@[~-O.LT])
            |? _sum
            || FUN.info('Lista płac: %1 typu SUM nie podlega dekretacji.'@[~-O.LT])
            |? _zlec
            || FUN.info(
                  'Zadekretowano rachunki umów-zleceń dla listy płac: %1.\n'
                  'Dekretacja całej listy nie jest możliwa.'@[~-O.LT]
               )
            ?}
         ?};
         _wy.DOK:=null;
         _mp.save(,_wy);
         _mp.done()
      |? _akcja='dekretuj'
      || _ref:=O.ref();
         O.cntx_psh();
         exec('dekretuj','!fks_dks_dpls');
         O.cntx_pop();
         {? O.seek(_ref) & O.DOK<>''
         || _wy.DOK:=DOK.ref();
            _mp.save(,_wy);
            _mp.done()
         ?}
      |? _mp.pathTodo() | _mp.isAutoRun()
      || POMOC.OKR:=SSTALE.AO;
         EKSG.SYS:='PPL';
         {? _mp.isAutoRun()
         || BtnDek:=1
         || BtnDek:=0;
            _title:='Lista płac - dekretowanie'@;
            _win:=O.mk_edit(_title,,'_o_dekret');
            O.win_ewin(_win,,'RED');
            _par:='text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Dekretuj'@];
            _btndek:=O.win_ebtn(_win,_par,"BtnDek:=1; 'key:Esc'");
            _par:='text=%1,btn_label_align=center,panel=bottom,align=end,display=1'['&Anuluj'@];
            _btnan:=O.win_ebtn(_win,_par,"BtnDek:=0; 'key:Esc'");
            O.btn_eopt(_win,_btndek,'tooltip='+'Dekretuj listę płac'@);
            O.btn_eopt(_win,_btnan,'tooltip='+exec('help_red_esc','#window','A'));
            O.win_edit(_win);
            O.display()
         ?};
         {? BtnDek
         || _rodz:={? O.F_ZATR().KOD='Z' || 'Kl' || 'KL' ?};
            {? exec('initWARL','dok_fks_aut_dok',SSTALE.AR,'PPL',_rodz)
            || exec('init','dok_fks_aut_dok','Informacje o błędach dekretacji listy płac'@);
               SSTALE.AO();
               O.cntx_psh();
               _ref:=O.ref();
               exec('dekretuj','!fks_dks_dpls');
               O.cntx_pop();
               {? O.seek(_ref) & O.DOK<>''
               || _wy.DOK:=DOK.ref();
                  _mp.save(,_wy);
                  _mp.done();
                  {? ~_mp.isAutoRun() || FUN.info('Lista płac została zadekretowana.'@) ?}
               || {? ~_mp.isAutoRun() || FUN.info('Dekretowanie listy płac nie powiodło się.'@) ?}
               ?}
            ?}
         ?};
         VAR_DEL.delete('BtnDek')
      ?}
   || {? _akcja<>'dekretuj' || FUN.info('Nie znaleziono listy płac.'@) ?};
      _wy:=_args.out;
      _wy.DOK:=null;
      _mp.save(,_wy);
      _mp.done()
   ?};
   O.cntx_pop()
|| {? _akcja<>'dekretuj' || FUN.info('Nie znaleziono listy płac.'@) ?};
   _wy:=_args.out;
   _wy.DOK:=null;
   _mp.save(,_wy);
   _mp.done()
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Formuła na opis czynności na liście ToDo
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_in:=_mp.load(exec('kind_in','#b_port'));
O.cntx_psh(); O.prefix();
{? var_pres('O',_in)=type_of(null()) & _in.O & O.seek(_in.O,)
|| _desc:='Zadekretuj listę płac: %1'@@[exec('record','#to_string',_in.O)]
|| _desc:='Zadekretuj listę płac'@@
?};
O.cntx_pop();
_desc


\dekretuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Funkcja dekretująca
::----------------------------------------------------------------------------------------------------------------------
:: sprawdzenie czy wszystkie dane sa ustawione dla naglowka zgodnie z kontrola bledow DEK_NAG.SPR
:: i ustawienie odpowiedniego schematu dekretacji DEK_NAG i przepisanie z stalych rejestru/oddzialu
{? O.r_lock(1,1,1)
|| exec('FUNKCJE','object');
   _licz:=var_press('__licz')>0;
   _optym:=var_press('__optym')>0;
   _grp:=var_press('__grp')>0;
   {? ~_licz || __licz:=1 ?};
   {? ~_optym || __optym:=0 ?};
   {? ~_grp || __grp:='' ?};
   _rodz:={? O.F_ZATR().KOD='Z' || 'Kl' || 'KL' ?};
   exec('set_fld','dok_fks_aut_dok','O',_rodz);
   {? exec('spr_war','dok_fks_aut_dok',SSTALE.AR,'PPL',_rodz)
   || exec('set_fld','dok_fks_aut_dok','N',_rodz);
      {? +DEK_NAG.TYP
      || exec('pozycje','dok_fks_aut_dok',SSTALE.AR,'PPL',_rodz,$O.T().ref)
      || exec('pozycje','dok_fks_aut_dok',SSTALE.AR,'PPL',_rodz)
      ?}
   ?};
   {? ~_licz || &__licz ?};
   {? ~_optym || &__optym ?};
   {? ~_grp || &__grp ?};
   O.r_unlock()
?}


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [19.02]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
_wy:=_mp.load(exec('kind_out','#b_port'));
_keyRefs:=_mp.getRefs();
{? obj_len(_keyRefs)>0
|| {! _it:=1..obj_len(_keyRefs)
   |! _kref:=_keyRefs[_it];
      {? type_of(_kref)>0
      || {? 8+ref_name(_kref)='olistypl'
         || _o:=exec('FindAndGet','#table',O,_kref,,,null());
            {? _o=null()
            || _wy.DOK:=null;
               _mp.save(,_wy);
               _mp.done()
            ?}
         ?}
      ?}
   !}
?};
1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:38 0795db2aea907fb839f200ccfabfcba645fc6852160b996cc6525fe02a49b76567a0db801d415f524de53fa75be2a1ab694a1af213c8f35ca416237ba9c13f76d4348e2d7476bc8231a07620ed3e118137f8fd4db7de923ecb171c66862f76c3b4859a8f5192327a0a851fcdc113bc99d103bff4c6fe67354d122663fd34e5a7
