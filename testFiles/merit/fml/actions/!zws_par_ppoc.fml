:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !zws_par_ppoc.fml
:: Utworzony: 20.06.2017
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Formuły czynności ZWS_PAR_PPOC - Parametry działania - oceny.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2011]
:: OPIS: Parametry działania - oceny - główna formuła czynności.
::   WE:
::   WY:
::  OLD: \zz_par/zz_view.fml
::----------------------------------------------------------------------------------------------------------------------
exec('init','poc');
exec('czytaj','#stalesys',,KST,'W_PRN','SZ_PRN');

_tae:='AFTER_EDIT';
_zz_par:=exec('save_fml_type','#field',ZZ_PAR,_tae);

ZZ_MET.cntx_psh();
ZZ_MET.prefix();
ZZ_MET.win_dict('SLO');

_ae:="exec('zz_par_x_ae','!zws_par_ppoc')";
ZZ_PAR.fld_fml('TRYB',_tae,_ae);
ZZ_PAR.fld_fml('OGR_RODZ',_tae,_ae);
ZZ_PAR.fld_fml('TYP',_tae,_ae);
ZZ_PAR.fld_fml('TYP_KOMP',_tae,_ae);
ZZ_PAR.fld_fml('TYP_PROF',_tae,_ae);
ZZ_PAR.fld_fml('MET',_tae,_ae);
ZZ_PAR.fld_fml('MET_KOMP',_tae,_ae);
ZZ_PAR.fld_fml('MET_PROF',_tae,_ae);
ZZ_PAR.fld_fml('WAR',_tae,_ae);
ZZ_PAR.fld_fml('WAR_KOMP',_tae,_ae);
ZZ_PAR.fld_fml('WAR_KRYT',_tae,_ae);
ZZ_PAR.fld_fml('WAR_PROF',_tae,_ae);

ZZ_PAR.win_edit('POC');
exec('zz_par_efld_opt','!zws_par_ppoc','*',ZZ_PAR,'POC');
{? ZZ_PAR.edit("
      _chk:=__CHK.record(ZZ_POM,,'MET_XX');
      {? type_of(_chk)=type_of(0) & _chk
      || __CHK.record(KST,,'W_PRN','SZ_PRN')
      || _chk
      ?}
   ")
|| ZZ_PAR.MET_XX:=ZZ_POM.MET_XX().KOD;
:: Normalizacja ustawień po edycji.
   {? ~(ZZ_PAR.TRYB='T' & ZZ_PAR.OGR_RODZ='N')
   || ZZ_PAR.TRYB_MOD:='N'
   ?};
   {? ZZ_PAR.TYP='T'
   || ZZ_PAR.TYP_KOMP:=ZZ_PAR.TYP_PROF:='N'
   || ZZ_PAR.TYP:={? ZZ_PAR.TYP_KOMP<>'T' & ZZ_PAR.TYP_PROF<>'T' || 'T' || 'N' ?}
   ?};
   {? ZZ_PAR.MET='T'
   || ZZ_PAR.MET_KOMP:=ZZ_PAR.MET_PROF:='N'
   || ZZ_PAR.MET:={? ZZ_PAR.MET_KOMP<>'T' & ZZ_PAR.MET_PROF<>'T' || 'T' || 'N' ?}
   ?};
   {? ZZ_PAR.WAR='T'
   || ZZ_PAR.WAR_KOMP:=ZZ_PAR.WAR_KRYT:=ZZ_PAR.WAR_PROF:='N'
   ?};
   {? ZZ_PAR.WAR_KOMP='N'
   || ZZ_PAR.WAR_KOMW:=ZZ_PAR.WAR_KOMN:='N'
   ?};
   {? ZZ_PAR.WAR_KRYT='N'
   || ZZ_PAR.WAR_KRYW:=ZZ_PAR.WAR_KRYN:='N'
   ?};
   {? ZZ_PAR.WAR_PROF='N'
   || ZZ_PAR.WAR_PROW:=ZZ_PAR.WAR_PRON:='N'
   ?};
   ZZ_PAR.WAR:={? ZZ_PAR.WAR_KOMP<>'T' & ZZ_PAR.WAR_KRYT<>'T' & ZZ_PAR.WAR_PROF<>'T' || 'T' || 'N' ?};

:: Wymuszony zapis.
   PARAMETR.cntx_psh();
   PARAMETR.index(PARNUMER);
   PARAMETR.prefix();
   {! _fld:=1 .. ZZ_PAR.fld_num()
   |! _acr:=ZZ_PAR.fld_acr(_fld);
      {? (_par:=exec('fld2par','phr_tab',_acr))>0 & PARAMETR.find_key(_par)
      || _val:=($('ZZ_PAR.'+_acr))();
         {? type_of(_val)=type_of(0)
         || _val:=$_val
         ?};
         {? PARAMETR.TRESC<>_val
         || PARAMETR.TRESC:=_val;
            {? PARAMETR.put()
            || PAR_SKID.TAB_PAR[_par].TRESC:=_val
            ?}
         ?}
      ?}
   !};
   PARAMETR.cntx_pop();
   exec('zapisz','#stalesys',1,KST,'W_PRN','SZ_PRN')
?};

ZZ_MET.cntx_pop();

exec('restore_fml_type','#field',ZZ_PAR,_tae,_zz_par);

~~


\zz_par_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Formuła odpowiedzialna za dynamiczne ustawianie właściwości pól tabeli ZZ_PAR.
::       Formuła wywoływana jest w dwóch kontekstach pracy:
::          - Po redagowaniu konkretnego pola, które determinuje właściwości wyświetlania innych pól.
::          - Przed wyświetleniem okna redagowania (przed właściwymi akcjami Dołącz, Popraw, Wyświetl), ustawia
::            właściwości wszystkich pól (wymagających tego).
::       Kontekst pracy jest określany na podstawie argumentu wywołania.
::   WE:  _a  [STRING] - Kontekst pracy:
::             '1' - Obsługa jednego pola [domyślnie].
::             '*' - Obsługa wszystkich pól.
::       [_b] [TABLE]  - Uchwyt tabeli, w oknie redagowania której znajdują sie pola. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęta bieżąca tabela.
::       [_c] [STRING] - Akronim okna, w którym mają być ustawione właściwości pól. Jeżeli _a='1', parametr jest
::             opcjonalny - zostanie przyjęte bieżące okno.
::       [_d] [STRING] - Akronim pola, którego wartość determinuje właściwości wyświetlania innych pól. Parametr ma
::             znaczenie wyłącznie dla _a='1'. [Domyślnie: bieżące pole].
::   WY: 0 - Błąd argumentów wywołania.
::       1 - Argumenty poprawne (właściwości ustawione).
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of('') & (_a='1' | _a='*') || _a || '1' ?};
{? var_pres('_b')=type_of(ZZ_PAR)
|| _TAB:=_b
|? _tryb='1'
|| _TAB:=cur_tab(1,1)
|| return(0)
?};
{? var_pres('_c')=type_of('')
|| _we:=_c
|? _tryb='1'
|| _we:=cur_win(1,1)
|| return(0)
?};
{? var_pres('_d')=type_of('')
|| _fld:=_d
|? _tryb='1'
|| _fld:=cur_afld()
|| _fld:=''
?};

{? _fld='' | _fld='TRYB' | _fld='OGR_RODZ'
|| _sval:=$(ZZ_PAR.TRYB='T' & ZZ_PAR.OGR_RODZ='N');
   _TAB.efld_opt(_we,'enable='+_sval,,'TRYB_MOD')
?};
{? _fld='' | _fld='TYP'
|| _sval:=$(ZZ_PAR.TYP<>'T');
   _TAB.efld_opt(_we,'enable='+_sval,,'TYP_KOMP');
   _TAB.efld_opt(_we,'enable='+_sval,,'TYP_PROF')
?};
{? _fld='' | _fld='MET'
|| _sval:=$(ZZ_PAR.MET<>'T');
   _TAB.efld_opt(_we,'enable='+_sval,,'MET_KOMP');
   _TAB.efld_opt(_we,'enable='+_sval,,'MET_PROF')
?};
{? _fld='' | _fld='WAR'
|| _sval:=$(ZZ_PAR.WAR<>'T');
   _TAB.efld_opt(_we,'enable='+_sval,,'WAR_KOMP');
   _TAB.efld_opt(_we,'enable='+_sval,,'WAR_KRYT');
   _TAB.efld_opt(_we,'enable='+_sval,,'WAR_PROF');
   {? _fld<>''
   || exec('zz_par_efld_opt','!zws_par_ppoc','1',_TAB,_we,'WAR_KOMP');
      exec('zz_par_efld_opt','!zws_par_ppoc','1',_TAB,_we,'WAR_KRYT');
      exec('zz_par_efld_opt','!zws_par_ppoc','1',_TAB,_we,'WAR_PROF')
   ?}
?};
{? _fld='' | _fld='WAR_KOMP'
|| _sval:=$(ZZ_PAR.WAR<>'T' & ZZ_PAR.WAR_KOMP='T');
   _TAB.efld_opt(_we,'enable='+_sval,,'WAR_KOMW');
   _TAB.efld_opt(_we,'enable='+_sval,,'WAR_KOMN')
?};
{? _fld='' | _fld='WAR_KRYT'
|| _sval:=$(ZZ_PAR.WAR<>'T' & ZZ_PAR.WAR_KRYT='T');
   _TAB.efld_opt(_we,'enable='+_sval,,'WAR_KRYW');
   _TAB.efld_opt(_we,'enable='+_sval,,'WAR_KRYN')
?};
{? _fld='' | _fld='WAR_PROF'
|| _sval:=$(ZZ_PAR.WAR<>'T' & ZZ_PAR.WAR_PROF='T');
   _TAB.efld_opt(_we,'enable='+_sval,,'WAR_PROW');
   _TAB.efld_opt(_we,'enable='+_sval,,'WAR_PRON')
?};

1


\zz_par_x_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.42]
:: OPIS: Po redagowaniu wybranych pól zmiennej ZZ_PAR.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_acr:=cur_afld();
_efld:=1;

{? _acr='TYP' & ZZ_PAR.TYP='N' & ZZ_PAR.TYP_KOMP='N' & ZZ_PAR.TYP_PROF='N'
|| ZZ_PAR.TYP_KOMP:='T';
   ZZ_PAR.TYP_PROF:='T'
|? (_acr='TYP_KOMP' | _acr='TYP_PROF') & ZZ_PAR.TYP_KOMP='N' & ZZ_PAR.TYP_PROF='N'
|| ZZ_PAR.TYP:='T';
   exec('zz_par_efld_opt','!zws_par_ppoc','1',,,'TYP');
   _efld:=0

|? _acr='MET' & ZZ_PAR.MET='N' & ZZ_PAR.MET_KOMP='N' & ZZ_PAR.MET_PROF='N'
|| ZZ_PAR.MET_KOMP:='T';
   ZZ_PAR.MET_PROF:='T'
|? (_acr='MET_KOMP' | _acr='MET_PROF') & ZZ_PAR.MET_KOMP='N' & ZZ_PAR.MET_PROF='N'
|| ZZ_PAR.MET:='T';
   exec('zz_par_efld_opt','!zws_par_ppoc','1',,,'MET');
   _efld:=0

|? _acr='WAR' & ZZ_PAR.WAR='N' & ZZ_PAR.WAR_KOMP='N' & ZZ_PAR.WAR_KRYT='N' & ZZ_PAR.WAR_PROF='N'
|| ZZ_PAR.WAR_KOMP:='T';
   ZZ_PAR.WAR_KRYT:='T';
   ZZ_PAR.WAR_PROF:='T'
|? (_acr='WAR_KOMP' | _acr='WAR_KRYT' | _acr='WAR_PROF') &
   ZZ_PAR.WAR_KOMP='N' & ZZ_PAR.WAR_KRYT='N' & ZZ_PAR.WAR_PROF='N'
|| ZZ_PAR.WAR:='T';
   exec('zz_par_efld_opt','!zws_par_ppoc','1',,,'WAR');
   _efld:=0
?};

{? _efld
|| exec('zz_par_efld_opt','!zws_par_ppoc')
|| 1
?}

:Sign Version 2.0 jowisz:1028 2019/06/07 15:56:06 ab143d676f036ac15272d1a37b2a373d023ce777902d1ba34acec678ba0e0291eed7082528f4f1177a9a32d5d24ab57d40ef7dfb497ed422e76fad09eef11b24a63abf75cd4f3f5a2757647f1cf9b7f716105b3cd6cb1f60fb5f1cc74d83fd968692c20e5faf628cf6bba8afa5042e20fe9d800a1ac1a92ca1a243be218a4129
