:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lsp_fak_drza.fml
:: Utworzony: 27.04.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Rejestracja zaliczki sprzedaży
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ,LSP,TARS
::# parses=exec('parses','!lsp_fak_drza')
::# kind=WE,   symbol=FAKS,      type=_FAKS,    name=Dokument sprzedaży,            required=N, keyref=T
::# kind=WE,   symbol=TYPYSP,    type=_TYPYSP,  name=Typ dokumentu sprzedaży,       required=N, fml_val="exec('typysp','!lsp_fak_drza')", fml_exp="exec('typysp_export','typysp',_a)"
::# kind=WE,   symbol=KW_ZAL,    type=NUMBER,   name=Kwota zaliczki,                required=N
::# kind=WE,   symbol=MBWPL,     type=_MBWPL,   name=Wpłata gotówkowa,              required=N
::# kind=WE,   symbol=ZK_N,      type=_ZK_N,    name=Zamówienie sprzedaży,          required=N
::# kind=WE,   symbol=ZLF,       type=STRING,   name=Dotyczy zlecenia fakturowania, required=N, fml_val="exec('zlf','faktury_wspolne')"
::# kind=WE,   symbol=FAKZ,      type=_FAKZ,    name=Zlecenie fakturowania,         required=N
::# kind=WE,   symbol=EDOKUM,    type=_EDOKUM,  name=Dokument w obiegu,             required=N
::# kind=WE,   symbol=ZLP,       type=_ZLP,     name=Zgłoszenie jednorazowe,        required=N, keyref=T
::# kind=WY,   symbol=FAKS,      type=_FAKS,    name=Dokument sprzedaży,            required=N
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;
_context:=params_get().context;

exec('init_fak','lsp');

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_area_lsp_fak:=_mp.pathArea('LSP_FAK') | _mp.pathArea('LSS_POS');
_area_lum_zgl:=_mp.pathArea('LUM_ZGL');
_area:=_area_lsp_fak | _area_lum_zgl;
_proc:=_mp.pathProc();
_todo:=_mp.pathTodo() | _mp.pathArea() & ~_area;
_grupa:=_mp.isGroup();
_autoakc:=exec('autoAkc','#b__box',_mp,300080,'LSP_FAK_EASP');

{? _todo
:: Ustawienie kontekstu wg instancji elementu w procesie
|| {? var_pres('FAKS',_out)=type_of(null()) & _out.FAKS
   || FAKS.use(ref_name(_out.FAKS));
      FAKS.prefix();
      {? FAKS.seek(_out.FAKS)
      || exec('set_cntx','lsp',FAKS.AR,FAKS.AM,FAKS.ODDZ)
      ?}
   |? ~_mp.isMicro()
   || _akcja:='START_TODO'
   || _mp.error('Brak parametru wyjściowego FAKS.'@)
   ?}
?};

_wplata:={? var_pres('MBWPL',_in)=type_of(null()) || _in.MBWPL || null() ?};
_zk_n:={? var_pres('ZK_N',_in)=type_of(null()) || _in.ZK_N || null() ?};
_typysp_t:={? var_pres('TYPYSP',_in)=type_of(null())
           || exec('FindAndGet','#table',TYPYSP,_in.TYPYSP,,"TYPYSP.T")
           || ''
           ?};
_edokum:={? var_pres('EDOKUM',_in)=type_of(null()) || _in.EDOKUM || null() ?};

{? _zk_n & exec('FindAndGet','#table',ZK_N,_zk_n,,"STAT_REJ='A'",0)
||
   FUN.info('Anulowano zamówienie %1.\nWystawienie faktury zaliczkowej niemożliwe.'@[exec('record','#to_string',_in.ZK_N)]);
   _mp.error('Anulowano zamówienie %1. Wystawienie faktury zaliczkowej niemożliwe.'[exec('record','#to_string',_in.ZK_N)]);
   return()
?};

:: Sprawdzenie uprawnień
{? params_exec('permissions_chk','lsp','!lsp_fak_drza')=0 || return() ?};

:: Wyzwalacz, który po dodaniu nagłówka dokumentu:
:: - add: dodaje rekord kluczowy nagłówka dokumentu
::   del: usuwa rekord kluczowy nagłówka dokumentu
:: - add: zapisuje parametr wyjściowy FAKS = wskazanie na nagłówek korekty
::   del: zapisuje parametr wyjściowy FAKS = null
_mp.trigRef('FAKS',,1,,exec('kind_out','#b_port'),'FAKS');
_zafakt:=var_pres('FAKS',_out)=type_of(null()) & _out.FAKS;

{? ~_zafakt & _edokum<>null()
||
   _ctrl:=exec('ctrlEDOKUM','faktury_nag',_edokum,'S','Z');
   {? ~_ctrl
   || _mp.error('Niepoprawny parametr EDOKUM - typ dokumentu w obiegu niezgodny z czynnością.'@)
   |? _ctrl=-1
   || _mp.done()
   |? _ctrl=2
   || FUN.info('Dokument w obiegu nie został zaakceptowany.'@);
      _mp.cancel()
   || params_set('out',_out,'mp',_mp,'akcja',_akcja);
      _faks:=params_exec('GenWgEDOKUM','faktury_nag',_edokum,'S','Z',_typysp_t)
   ?}

|? _zk_n<>null() &
   (_akcja='Zamówienie'
    | _proc
    | _akcja='START_TODO')
||
   {? exec('FindAndGet','#table',ZK_N,_zk_n,,"T().R",'')<>'Z'
   || FUN.info('Wystawienie faktury zaliczkowej dostępne wyłącznie dla zamówienia sprzedaży.'@);
      _mp.cancel()
   |? exec('FindAndGet','#table',ZK_N,_zk_n,,"STAT_REJ='T' & #ZK_N.E=2",0) & exec('ctrlZamFaks','magdok_wspolne',_zk_n)
   || FUN.info('Zamówienie jest zrealizowane oraz zafakturowane - wystawienie faktury zaliczkowej nie jest dostępne.'@);
      _mp.done()
   ||
::    zaliczka na podstawie wpłaty gotówkowej
      ZK_N.cntx_psh();
      ZK_N.use(ref_name(_zk_n));
      ZK_N.prefix();
      {? ZK_N.seek(_zk_n)
      || {? ~exec('spr_zam','faktury_zalicz')
         || _mp.cancel()
         |? ~exec('upr_cscz','ceny')
         || FUN.info('Brak uprawnień do wartości sprzedaży.\nDodawanie faktur zaliczkowych niedostępne.'@);
            _mp.cancel()
         ||
            params_set('out',_out,'mp',_mp,'akcja',_akcja);
            exec('wyst_zzl','faktury_zalicz',,_typysp_t);

::          Podczytanie parametrów wyjściowych
            _outa:=_mp.load(exec('kind_out','#b_port'));
            {? var_pres('FAKS',_outa)<>type_of(~~) & _outa.FAKS
::          Dodano dokument
            ||
::             Korekta FAPOW
               exec('faks_sym','faktury_zalicz',$_outa.FAKS);
::             Ustawienie się na dodanym dokumencie w widoku obszaru
               params_exec('seek_dok','faktury_wspolne',_area_lsp_fak,_outa.FAKS)
::             Wycofanie czynności bo nie dodano dokumentu
            || _mp.cancel()
            ?}
         ?}
      ?};
      ZK_N.cntx_pop()
   ?}

|? _wplata<>null() &
   (_akcja='Wpłata'
    | _proc
    | _akcja='START_TODO')
||
   {? exec('FindAndGet','#table',MBWPL,_wplata,,"ZAL",'')<>''
   || {? FUN.ask('Wystawiono już zaliczkę do wpłaty.\nCzy chcesz ją zobaczyć?'@)
      || exec('displayZal','!lsp_fak_drza')
      ?};
      _mp.done()
   |? exec('FindAndGet','#table',MBWPL,_wplata,,"STAN",'')<>'P'
   || FUN.info('Wystawienie zaliczki dostępne tylko dla wpłaty gotówkowej o statusie Pobrane.'@);
      _mp.cancel()
   ||
::    zaliczka na podstawie wpłaty gotówkowej
      MBWPL.cntx_psh();
      MBWPL.prefix();
      {? MBWPL.seek(_wplata)
      || params_set('out',_out,'mp',_mp,'akcja',_akcja);
         exec('fzmbwpl','faktury_zalicz',,_typysp_t);

::       Podczytanie parametrów wyjściowych
         _outa:=_mp.load(exec('kind_out','#b_port'));
         {? var_pres('FAKS',_outa)<>type_of(~~) & _outa.FAKS
::       Dodano dokument
         ||
::          Korekta FAPOW
            exec('faks_sym','faktury_zalicz',$_outa.FAKS);
::          Ustawienie się na dodanym dokumencie w widoku obszaru
            params_exec('seek_dok','faktury_wspolne',_area_lsp_fak,_outa.FAKS)
::          Wycofanie czynności bo nie dodano dokumentu
         || _mp.cancel()
         ?}
      ?};
      MBWPL.cntx_pop()
   ?}

|? _akcja='Dołącz'
   | _proc
   | _akcja='START_TODO'
||
:: Obsługa Dołącz - dołącz w oknie obszaru i start procesu z pulpitu
   _kw_zal:={? var_pres('KW_ZAL',_in)=type_of(1) || _in.KW_ZAL || 0 ?};
   _typysp_t:=
      {? var_pres('TYPYSP',_in)=type_of(null())
      || exec('FindAndGet','#table',TYPYSP,_in.TYPYSP,,"TYPYSP.T")
      || ''
      ?};
   TAZ.RAB_N_BE:=0;
   BEER.WYSTFAKS:=null;
   HELP.WHERE:='L';

:: Parametry 'out', 'mp', 'akcja' wykorzystywany w formułach przycisków 'Pozycje', 'Zakończ'
   params_set('in',_in,'out',_out,'mp',_mp,'akcja',_akcja,'context',_context);
   _kh_par:=_faks_par:=null();
   {? var_pres('FAKS',_in)=type_of(null()) & _in.FAKS
   || FAKS.cntx_psh();
      FAKS.use(ref_name(_in.FAKS));
      FAKS.prefix();
      {? FAKS.seek(_in.FAKS)
      || {? FAKS.STAT_REJ<>'A' & FAKS.WHERE='L' & FAKS.T().KOR='N' & FAKS.STAT_REJ='T'
         || {? FUN.ask('Kolejna zaliczka do %1?'@[FAKS.SYM]) || _kh_par:=FAKS.KH; _faks_par:=FAKS.ref() ?}
         ?}
      ?};
      FAKS.cntx_pop()
   ?};

   {? _akcja='Dołącz' | _kh_par & _faks_par
   || exec('wyst_zal','faktury_zalicz',_kh_par,_faks_par,'L',,_kw_zal)
   || exec('wyst_zal','faktury_zalicz',,,'L',1,_kw_zal)
   ?};

:: Podczytanie parametrów wyjściowych
   _outa:=_mp.load(exec('kind_out','#b_port'));
   {? var_pres('FAKS',_outa)<>type_of(~~) & _outa.FAKS
:: Dodano dokument
   ||
::    Ustawienie się na dodanym dokumencie w widoku obszaru
      params_exec('seek_dok','faktury_wspolne',_area_lsp_fak,_outa.FAKS)
:: Wycofanie czynności bo nie dodano dokumentu
   || _mp.cancel()
   ?}

|? _akcja='Popraw'
   | _todo
||
   {? var_pres('FAKS',_out)=type_of(null())
:: Uruchomione w procesie
   || FAKS.cntx_psh();
      FAKS.prefix();
      {? FAKS.seek(_out.FAKS)
      || exec('faks_win_edit_set','faktury_nag');

         params_set('out',_out,'mp',_mp,'akcja',_akcja);
         exec('fak_pop','faktury_nag');

         _mp.descTodo()
      ?};
      FAKS.cntx_pop()
   |? _mp.isMicro()
:: Uruchomione poza procesem
   || {? ~_todo
      || params_set('out',_out,'mp',_mp,'akcja',_akcja);
         exec('fak_pop','faktury_nag')
      |? _akcja='Zakończ_wer'
      || {? exec('faks_zakoncz','faktury_nag',,_autoakc) || _mp.done() ?}
      || _mp.cancel()
      ?}
   |? _todo
:: Uruchomione zadanie z listy todo i brak _out.FAKS wtedy zadanie wycofujemy
   || _mp.cancel()
   ?}

|? _akcja='Usuń'
|| {? var_pres('FAKS',_out)=type_of(null())
:: Uruchomione w procesie
   || _faks:=null();
      FAKS.cntx_psh();
      {? ~_area_lsp_fak || FAKS.prefix() ?};
      {? FAKS.seek(_out.FAKS)
      ||
         exec('usun_fak','faktury_nag',{? _grupa || 2 || 1 ?});

         {? ~FAKS.seek(_out.FAKS)
::       Wycofuję instancję jeśli nie znaleziono dokumentu
         || _mp.cancel()
         ?};
         _faks:=FAKS.ref()
      ?};
      FAKS.cntx_pop();
::    Ustawienie się na kolejnym dokumencie w widoku obszaru
      {? ~_area_lsp_fak || {? _faks || FAKS.seek(_faks) ?} ?}
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      exec('usun_fak','faktury_nag',{? _grupa || 2 || 1 ?});

      _mp.done()
   ?}

|? _akcja='Zakończ_wer' & (_area_lsp_fak | _area_lum_zgl)
||
   {? exec('faks_zakoncz','faktury_nag',_grupa,_autoakc) || _mp.done() ?}
||
   _mp.error('Nieobsługiwana ścieżka.'@)
?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_out:=_mp.load(exec('kind_out','#b_port'));

{? var_pres('FAKS',_out)=type_of(null()) & _out.FAKS
|| 'Zakończ rejestrację zaliczkowego dokumentu sprzedaży: %1'@@[exec('record','#to_string',_out.FAKS)]
|| _in:=_mp.load(exec('kind_in','#b_port'));
   {? var_pres('ZK_N',_in)=type_of(null()) & _in.ZK_N
   || 'Zarejestruj zaliczkowy dokument sprzedaży na podstawie zamówienia sprzedaży: %1'@@[exec('record','#to_string',_in.ZK_N)]
   |? var_pres('MBWPL',_in)=type_of(null()) & _in.MBWPL
   || 'Zarejestruj zaliczkowy dokument sprzedaży na podstawie wpłaty gotówkowej: %1'@@[exec('record','#to_string',_in.MBWPL)]
   |? var_pres('FAKZ',_in)=type_of(null()) & _in.FAKZ
   || 'Zarejestruj zaliczkowy dokument sprzedaży wg zlecenia fakturowania: %1'@@ [exec('record','#to_string',_in.FAKZ)]
   |? var_pres('EDOKUM',_in)=type_of(null()) & _in.EDOKUM
   || 'Zarejestruj zaliczkowy dokument sprzedaży wg dokumentu w obiegu: %1'@@ [exec('record','#to_string',_in.EDOKUM)]
   || 'Zarejestruj zaliczkowy dokument sprzedaży'@@
   ?}
?}


\permissions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła na uprawnienia dla czynności
::   WE: params_get().in - parametry wejściowe czynności
::           params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::           params_get().mp - Menedżer Procesów
::   WY: 0 - użytkownik nie ma uprawnień do czynności
::       1 - użytkownik ma uprawnienia do czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_user:=params_get().user;
_mp:=params_get().mp;

_wyn:=1;

:: Sprawdzenie uprawnień do typu dokumentu
{? _wyn & var_pres('TYPYSP',_in)=type_of(null()) & _in.TYPYSP
|| _typysp_t:=exec('FindAndGet','#table',TYPYSP,$_in.TYPYSP,,"TYPYSP.T",'');
   _wyn:=
      {? _typysp_t<>''
      || {? exec('FindInSet','#table','T2STS','UNIK',ST.STS)<>null()
         || exec('FindInSet','#table','T2STS','UNIK',_in.TYPYSP,ST.STS)<>null()
         || _where:=exec('tsp_where','typysp','L',,,,_typysp_t);
            exec('tsp_upr','typysp',_where,,0,,1,,_user)<>null()
         ?}
      || 1
      ?}
?};

_wyn


\faks_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Faktura pozostała - Dołącz
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LSP_FAK_DRZA';
_params.AKCJA:='Dołącz';
_params.PROC_START:='T';
{? {? FAKS.f_active() || FAKS.f_get() || FAKS.get() ?}
|| _params.UIDREF:=FAKS.uidref();
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'FAKS',FAKS.ref())
?};

exec('mp_run','#b__box',_params);

FAKS.f_rfresh()


\typysp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła na wartość parametru TYPYSP
::   WY: TYPYSP.ref()
::----------------------------------------------------------------------------------------------------------------------
BEER.SZ:='S';
exec('tsp_fak','typysp','L')


\zaliczka_wpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zaliczka do wpłaty gotówkowej
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LSP_FAK_DRZA';
_params.AKCJA:='Wpłata';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'MBWPL',MBWPL.ref());

exec('mp_run','#b__box',_params)


\zaliczka_zkn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zaliczka do wpłaty gotówkowej
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LSP_FAK_DRZA';
_params.AKCJA:='Zamówienie';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZK_N',ZK_N.ref());

exec('mp_run','#b__box',_params)


\displayZal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Wyświetla zaliczkę do wpłaty gotówkowej
::----------------------------------------------------------------------------------------------------------------------
FAKS.cntx_psh();
FAKS.use(form(8+MBWPL.ZAL));
{? FAKS.seek(MBWPL.ZAL)
|| exec('faks_win_edit_set','faktury_nag',1);
   exec('dispWithFakso','fakso','FAKS')
?};
FAKS.cntx_pop();
~~


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.28]
:: OPIS: Formuła ustala PARSES
::   WE: UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;

{? var_pres('ZK_N',_in)=type_of(null()) & _in.ZK_N
|| ZK_N.cntx_psh();
   ZK_N.use(ref_name(_in.ZK_N));
   ZK_N.prefix();
   {? ZK_N.seek(_in.ZK_N)
   || __PARSES.setVal('OddzialLogProd',ZK_N.ODDZ)
   ?};
   ZK_N.cntx_pop()
|? var_pres('FAKZ',_in)=type_of(null()) & _in.FAKZ
|| FAKZ.cntx_psh();
   FAKZ.use(ref_name(_in.FAKZ));
   FAKZ.prefix();
   {? FAKZ.seek(_in.FAKZ)
   || __PARSES.setVal('OddzialLogProd',FAKZ.ODDZ);
      _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:='LSP';
      _args.AR:=FAKZ.AR;
      _args.AM:=FAKZ.AM;
      __PARSES.setVal('OkresRok',_args)
   ?};
   FAKZ.cntx_pop()
|? var_pres('EDOKUM',_in)=type_of(null()) & _in.EDOKUM
|| EDOKUM.cntx_psh();
   EDOKUM.use(ref_name(_in.EDOKUM));
   EDOKUM.prefix();
   {? EDOKUM.seek(_in.EDOKUM)
   ||
::      __PARSES.setVal('OddzialLogProd',FAKZ.ODDZ);
      _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:='LSP';
      _args.AR:=EDOKUM.DW~1;
      _args.AM:=EDOKUM.DW~2;
      __PARSES.setVal('OkresRok',_args)
   ?};
   EDOKUM.cntx_pop()
?};

1

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:40 5a05b2ffefc0a7b085f1ba3df4fa3afd1dd20a8f878e75c24593f4cae651aa577b373b230c9d3dc10d87cd46d51a14004180d24e141922c7054fa953ff8bd9cbc75983b1274338468a205fc921c9482abe44e6a0ae9883ecf3be28774eb9d7824da1dfce471de2345aa141d6acbb32ec2e95ab01b5ab2012e1c13f383b184ee9
