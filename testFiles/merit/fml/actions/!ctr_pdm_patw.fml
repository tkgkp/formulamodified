:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !ctr_pdm_patw.fml
:: Utworzony: 04.01.2016
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności CTR_PDM_PATW - Aktualizacja wartości controllingowych
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Aktualizacja wartości controllingowych - główna formuła czynności CTR_PDM_PATW
::----------------------------------------------------------------------------------------------------------------------
:: WŁAŚCIWOŚCI CZYNNOŚCI
::# properties=SERVICE,GRP_FIRM
:: PARAMETRY WE:
::# kind=WE, symbol=OKR_OD, type=_OKRO_F, name=Początkowy okres aktualizacji, required=N
::# kind=WE, symbol=OKR_DO, type=_OKRO_F, name=Końcowy okres aktualizacji, required=N
::# kind=WE, symbol=GRFUN, type=STRING, name=Symbol grupy lub fukncji aktualizacji, required=N
::# kind=WE, symbol=WSTECZ, type=NUMBER, name=Liczba okresów wstecz, required=N
::# kind=WE, symbol=BIEZACY, type=STRING, name=Od bieżącego (powiązany z parametrem WSTECZ) [T/N] , required=N
::# kind=WE, symbol=STOP, type=STRING, name=Zatrzymać przy błędach [T/N], required=N
::# kind=WE, symbol=ERROR, type=STRING, name=Zapisywać informacje o błędach [T/N], required=N
:: PARAMETRY WY:
::# kind=WY, symbol=OK, type=STRING, name=Czy aktualizacja zakończona sukcesem [T/N], required=T
::# kind=WY, symbol=SUB, type=STRING, name=Temet wiadomości e-mail, required=T
::# kind=WY, symbol=BODYH, type=MEMO, name=Treść wiadomości e-mail, required=T
_args:=params_get();
_we:=_args.in;
_wy:=_args.out;
_mp:=_args.mp;
CON_FUN.cntx_psh();
{? var_press('GRFUN',_we)>0
|| CON_FUN.prefix();
   CON_FUN.index('UNIK'); CON_FUN.prefix(REF.FIRMA,_we.GRFUN,);
   {? CON_FUN.first()
   || UD_POM.CON_FUN:=CON_FUN.ref();
      ConFunM:=0
   || UD_POM.CON_FUN:=null()
   ?}
|| UD_POM.CON_FUN:=null
?};
{? var_press('OKR_OD',_we)>0
|| UD_POM.OKR_POCZ:=_we.OKR_OD;
   UD_POM.ROK_POCZ:=UD_POM.OKR_POCZ().ROK
|| UD_POM.OKR_POCZ:=null;
   UD_POM.ROK_POCZ:=null
?};
{? var_press('OKR_DO',_we)>0
|| UD_POM.OKR_KON:=_we.OKR_DO;
   UD_POM.ROK_KON:=UD_POM.OKR_KON().ROK
|| UD_POM.OKR_KON:=null;
   UD_POM.ROK_KON:=null
?};
UD_POM.PRZERWIJ:={? var_press('STOP',_we)>0 || _we.STOP='T' ?};
UD_POM.ZAP_ERR:={? var_press('ERROR',_we)>0 || _we.ERROR='T' || 1 ?};
_wstecz:={? var_press('WSTECZ',_we)>0 || _we.WSTECZ || -1 ?};
_biezacy:={? var_press('BIEZACY',_we)>0 || _we.BIEZACY || 'T' ?};
{? (~UD_POM.OKR_POCZ | ~UD_POM.OKR_KON) & _wstecz<>-1
|| OKRO_F.cntx_psh();
   OKRO_F.index('KON'); OKRO_F.prefix(REF.FIRMA);
   {? OKRO_F.find_ge(date())
   || {? _biezacy<>'T'
      || OKRO_F.prev()
      ?};
      UD_POM.OKR_KON:=UD_POM.OKR_POCZ:=OKRO_F.ref();
      UD_POM.ROK_KON:=OKRO_F.ROK;
      {! _i:=1.._wstecz
      |? OKRO_F.prev()
      |! UD_POM.OKR_POCZ:=OKRO_F.ref()
      !};
      UD_POM.ROK_POCZ:=OKRO_F.ROK
   |? _mp.isService()
   || _mp.error('Nie znaleziono okresu dla daty '+$date()+'.')
   ?};
   OKRO_F.cntx_pop()
?};
_ok:=0;
{? UD_POM.CON_FUN & UD_POM.CON_FUN().AKT='N'
|| {? CON_FUN.CON_RODF=null
   || _msg:='Wybrana grupa \''+CON_FUN.SYM+'\' jest nieaktywna.'
   || _msg:='Wybrana funkcja \''+CON_FUN.SYM+'\' jest nieaktywna.'
   ?};
   {? _mp.isAutoRun() | _mp.isService()
   || _mp.error(_msg)
   || FUN.info(_msg)
   ?}
|? ~UD_POM.CON_FUN | ~UD_POM.OKR_POCZ | ~UD_POM.OKR_KON
|| {? _mp.isAutoRun() | _mp.isService()
   || _msg:='Nie ustalono: '+
            {? ~UD_POM.CON_FUN || 'grupy lub funkcji, ' || '' ?}+
            {? ~UD_POM.OKR_POCZ || 'okresu od, ' || '' ?}+
            {? ~UD_POM.OKR_KON || 'okresu do, ' || '' ?};
      _mp.error(_msg-2)
   || UD_POM.win_edit('MOD_OKR');
      {? _mp.pathTodo()
      || _keys:=_mp.getRefs();
         {? obj_len(_keys)=1 & _keys[1]<>~~
         || CON_FUNL.cntx_psh();
            CON_FUNL.prefix();
            {? CON_FUNL.seek(_keys[1])
            || CON_FUN.cntx_psh();
               CON_FUN.index('UNIK'); CON_FUN.prefix(REF.FIRMA,CON_FUNL.GRFUN,);
               {? CON_FUN.first()
               || UD_POM.CON_FUN:=CON_FUN.ref()
               ?};
               CON_FUN.cntx_pop();
               UD_POM.OKR_POCZ:=CON_FUNL.OKR_POCZ;
               UD_POM.ROK_POCZ:=CON_FUNL.OKR_POCZ().ROK;
               UD_POM.OKR_KON:=CON_FUNL.OKR_KON;
               UD_POM.ROK_KON:=CON_FUNL.OKR_KON().ROK;
               UD_POM.PRZERWIJ:=CON_FUNL.PRZERWIJ;
               UD_POM.ZAP_ERR:=CON_FUNL.ZAP_ERR
            ?};
            CON_FUNL.cntx_pop()
         ?}
      ?};
      {? ~UD_POM.OKR_POCZ
      || UD_POM.OKR_POCZ:=SSTALE.AO;
         UD_POM.ROK_POCZ:=UD_POM.OKR_POCZ().ROK
      ?};
      {? ~UD_POM.OKR_KON
      || UD_POM.OKR_KON:=SSTALE.AO;
         UD_POM.ROK_KON:=UD_POM.OKR_KON().ROK
      ?};
      CON_FUN.win_sel('WER');
      CON_FUN.index('DISP'); CON_FUN.prefix(REF.FIRMA);
      {? UD_POM.edit("exec('spr_par_aktual','!ctr_pdm_patw')")
      || _ok:=1
      ?}
   ?}
|| _ok:=1
?};
{? _ok
|| {? _mp.isAutoRun() | _mp.isService() || conalert:=1 ?};
   _ok:=exec('uruchom_fun','!ctr_pdm_patw',~_mp.isAutoRun() & ~_mp.isService());
   {? _ok
   || _wy.OK:={? var_press('ConFunOK')>0 & ConFunOK || 'T' || 'N' ?};
      _wy.SUB:=exec('hed_akt_con','!ctr_pdm_patw');
      _wy.BODYH:=exec('bod_akt_con','!ctr_pdm_patw');
      _mp.save(,_wy);
      _mp.done()
   |? var_press('ConFunL')>0
   || CON_FUNL.cntx_psh();
      CON_FUNL.prefix();
      {? CON_FUNL.seek(ConFunL)
      || _mp.delRefs(0);
         _mp.keyRef(CON_FUNL.uidref())
      ?};
      CON_FUNL.cntx_pop()
   ?};
   VAR_DEL.delete('conalert')
?};
CON_FUN.cntx_pop();
VAR_DEL.delete('ConFunL','ConFunM')


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Formuła na opis czynności na liście ToDo
::----------------------------------------------------------------------------------------------------------------------
_desc:='Aktualizuj wartości controllingowe'@@;
_args:=params_get();
_mp:=_args.mp;
_keys:=_mp.getRefs();
_in:=_mp.load(exec('kind_in','#b_port'));
_grfun:='';
{? obj_len(_keys)=1 & _keys[1]<>~~
|| CON_FUNL.cntx_psh();
   CON_FUNL.prefix();
   {? CON_FUNL.seek(_keys[1])
   || _grfun:=CON_FUNL.GRFUN
   ?};
   CON_FUNL.cntx_pop()
|? var_press('GRFUN',_in)>0
|| _grfun:=_in.GRFUN
?};
{? _grfun<>''
|| CON_FUN.cntx_psh();
   CON_FUN.index('UNIK'); CON_FUN.prefix(REF.FIRMA,_grfun,);
   {? CON_FUN.first()
   || _desc:='Aktualizuj wartości controllingowe: %1 - %2'@@[CON_FUN.SYM,CON_FUN.OPIS]
   ?};
   CON_FUN.cntx_pop()
?};
_desc


\uruchom_cfun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Uruchamianie funkcji do aktualizacji danych
::  OLD: \uruchom_cfun/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='CTR_PDM_PATW';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'GRFUN',CON_FUN.SYM);
exec('mp_run','#b__box',_params)


\be_con_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Przed redagowanie UD_POM.CON_FUN
::----------------------------------------------------------------------------------------------------------------------
var_press('ConFunM')<=0 | ConFunM


\be_przerwij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przed redakcja i na wyswietl dla pola UD_POM.PRZERWIJ
::  OLD: \be_przerwij/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_POM.ZAP_ERR


\ae_zap_err
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Po redakcji pola UD_POM.ZAP_ERR
::  OLD: \ae_zap_err/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~UD_POM.ZAP_ERR || UD_POM.PRZERWIJ:=0 ?};
win_disp(); 1


\spr_par_aktual
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Uruchamianie funkcji do aktualizacji danych
::  OLD: \spr_par_aktual/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_r:=__CHK.record3(
   UD_POM,'CON_FUN','Element',
   UD_POM,'ROK_POCZ','Rok od',
   UD_POM,'OKR_POCZ','Okres od',
   UD_POM,'ROK_KON','Rok do',
   UD_POM,'OKR_KON','Okres do'
);
{? _r=''
|| {?  ~UD_POM.ROK_POCZ | ~UD_POM.ROK_KON | ~UD_POM.OKR_POCZ | ~UD_POM.OKR_KON |
       ~(OKRO_F.index('ROK'); OKRO_F.prefix(UD_POM.ROK_POCZ); OKRO_F.seek(UD_POM.OKR_POCZ)) |
       ~(OKRO_F.prefix(UD_POM.ROK_KON); OKRO_F.seek(UD_POM.OKR_KON)) |
       UD_POM.ROK_POCZ().POCZ_ROK>UD_POM.ROK_KON().POCZ_ROK |
       (UD_POM.ROK_POCZ=UD_POM.ROK_KON & UD_POM.OKR_POCZ().NR>UD_POM.OKR_KON().NR)
   || FUN.info('Nie wprowadzono poprawnie przedziału okresów.'@); 'ROK_POCZ'
   || ''
   ?}
|| _r
?}


\uruchom_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Uruchamianie funkcji do aktualizacji danych
::   WE: _a - pokazywać dialogi? 1-tak 0-nie
::  OLD: \uruchom_fun/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
ConFunOK:=1;
fun_cont:=1; lp_run:=1;
exec('ini_kom','!ctr_pdm_patw');
exec('ini_tmp_run','!ctr_pdm_patw');
exec('uruchom_cfun1','!ctr_pdm_patw',0,CON_FUN.TREE,CON_FUN.SYM);
{? var_pres('conalert')>0 | ~_a
|| exec('tmp_run_exec','!ctr_pdm_patw');
   KOM_CON.index(ndx_con4); KOM_CON.prefix(3);
   {? KOM_CON.first()
   || ConFunOK:=0;
      {? UD_POM.ZAP_ERR
      || _ref_nag:=exec('zap_error','!ctr_pdm_patw')
      ?}
   ?}
|| exec('ini_tmp_run_okn','!ctr_pdm_patw');
   {? TMP_RUN.first() || TMP_RUN.select() ?};
   KOM_CON.index(ndx_con4); KOM_CON.prefix(3);
   {? KOM_CON.first()
   || ConFunOK:=0;
      KOM_CON.index(ndx_con1); KOM_CON.prefix();
      _ok:=KOM_CON.select();
      {? UD_POM.ZAP_ERR || exec('zap_error','!ctr_pdm_patw') ?}
   ?}
?};
VAR_DEL.delete('KOM_CON','ndx_con1','ndx_con2','ndx_con3','ndx_con4','ndx_con5','con_user','con_data','con_time');
VAR_DEL.delete('fun_cont','TMP_RUN','lp_run');
echo();
_ok


\ini_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tabelka z komentarzami - inicjalizacja
::  OLD: \ini_kom/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
KOM_CON:=tab_tmp(3,'TREE','TREE_REF','',
                   'SYM','STRING[20]','Symbol',
                   'OPIS','STRING[150]','Opis',
                   'GRUPBL','INTEGER','',
                   'SYM_NAD','STRING[20]','Symbol',
                   'ROK_F','INTEGER','Rok',
                   'OKRO_F','INTEGER','Okres',
                   'SKID_MBN','INTEGER','Model',
                   'FIRMA','INTEGER','Firma',
                   'FIRMASYM','STRING[4]','Firma',
                   'DOKSQL','STRING[20]','Dokument'
                 );
_wer:=KOM_CON.mk_sel('Komunikaty'@,'N',0,'kom_con_wer',,,,1);
KOM_CON.win_fld(_wer,,'SYM',,,20,,,,1,,,,,,,'mobile_header=1,mobile_visible=1');
{? REF.S_FIRMA=REF.GRUPA
|| KOM_CON.win_fld(_wer,,'FIRMASYM',,,5,,,,,,,,,,,'mobile_visible=1');
   KOM_CON.win_fld(_wer,,'OPIS',,,93,,,,,,,,,,,'mobile_visible=1')
|| KOM_CON.win_fld(_wer,,'OPIS',,,100,,,,,,,,,,,'mobile_visible=1')
?};
KOM_CON.win_act(_wer,,'Okienko',,,,"exec('zwrw_all','#tree','KOM_CON','TREE')");
KOM_CON.win_act(_wer,,'Formuła','Zwiń/&rozwiń całość'@@,,'Zwijanie/rozwijanie całości'@,"exec('zwrw_all','#tree','KOM_CON','TREE')",,1,,,,'R');
KOM_CON.win_act(_wer,,'Formuła','Zakończ'@@,,,"sel_exit()",,,,,,'Z');
KOM_CON.win_act(_wer,,'Formuła','Legenda'@@,,'Opis znaczenia ikon'@,,"exec('legenda','color','KOM_CON#')",,,,,'L');
KOM_CON.win_fml(_wer,,'SYM',,'ICON_BEFORE',"{? KOM_CON.GRUPBL=1
                                            || 'xwin16.png:50'
                                            |? KOM_CON.GRUPBL=2
                                            || 'xwin16.png:32'
                                            || 'xwin16.png:4'
                                            ?}");
_zakoncz:=KOM_CON.win_btn(_wer,'text=%1,btn_label_align=center,panel=bottom,align=end'['OK'@],'menu:Z');
KOM_CON.btn_opt(_zakoncz,'tooltip=Zatwierdź komunikaty i zamknij okno.'@);
_btn:=KOM_CON.win_btn(_wer,'text=%1,btn_label_align=center,panel=bottom,align=end'['Anuluj'@],'key:Esc');
KOM_CON.btn_opt(_btn,'tooltip='+exec('help_red_esc','#window','A'));
KOM_CON.win_sel(_wer);
ndx_con1:=KOM_CON.index('?');
ndx_con2:=KOM_CON.ndx_tmp('',1,'SYM',,0,'SYM',,0);
ndx_con3:=KOM_CON.ndx_tmp('',1,'OPIS',,0,'OPIS',,0);
ndx_con4:=KOM_CON.ndx_tmp('',1,'GRUPBL',,0);
ndx_con5:=KOM_CON.ndx_tmp('',1,'TREE',,0,'OPIS',,0,'OPIS',,0);
con_user:=OPERATOR.USER().KOD;
con_data:=date();
con_time:=time();
1


\ini_tmp_run
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tabelka funkcjami uruchamianymi - inicjalizacja
::  OLD: \ini_tmp_run/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
TMP_RUN:=tab_tmp(1,
   'LP','INTEGER','Lp.',
   'SYM','STRING[20]','Symbol',
   'OPIS','STRING[80]','Opis',
   'RODZAJ','STRING[30]','Rodzaj',
   'RUN','INTEGER','',
   'CON_FUN','INTEGER',''
)


\uruchom_cfun1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Uruchamianie funkcji do aktuaizacji danych - wewnetrzna
::   WE: _a - 1/0 - czy ustawiac na pierwszym elemencie w dziedzinie
::       _b - ref nadrzednego
::       _c - symbol nadrzednego
::  OLD: \uruchom_cfun1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.cntx_psh();
CON_FUN.index('DISP'); CON_FUN.prefix(REF.FIRMA,_b);
{? ~_a | (_a & CON_FUN.first())
|| {! |?
      {? CON_FUN.AKT='T'
      || exec('add_kom','dok_fks',{? CON_FUN.CON_RODF=null || 1 || 2 ?},CON_FUN.SYM,_c,CON_FUN.OPIS,0,null,null,null,'');
         {? CON_FUN.CON_RODF=null
         || exec('uruchom_cfun1','!ctr_pdm_patw',1,CON_FUN.ref(),_c)
         || CON_FUN.CON_RODF();
            exec('uruchom_cfun2','!ctr_pdm_patw')
         ?}
      ?};
      _a=1 & CON_FUN.next()
   !}
?};
CON_FUN.cntx_pop()


\ini_tmp_run_okn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tabelka funkcjami uruchamianymi - inicjalizacja okienka
::  OLD: \ini_tmp_run_okn/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_wys:={? TMP_RUN.size()<=25 || TMP_RUN.size() || 25 ?};
_wer:=TMP_RUN.mk_sel('Komunikaty'@,'N',0,'tmp_run_wer',,,_wys);
TMP_RUN.win_fld(_wer,,'SYM');
TMP_RUN.win_fld(_wer,,'OPIS',,,79);
TMP_RUN.win_fld(_wer,,'RODZAJ',,,20);
TMP_RUN.win_fml(_wer,,'SYM',,'ICON_BEFORE',"{? TMP_RUN.RUN=0
                                            || 'xwin16.png:76'
                                            |? TMP_RUN.RUN=1
                                            || 'xwin16.png:38'
                                            |? TMP_RUN.RUN=-1
                                            || 'xwin16.png:85'
                                            || ''
                                            ?}");
TMP_RUN.win_act(_wer,,'Okienko',,,,"exec('tmp_run_exec','!ctr_pdm_patw')");
TMP_RUN.win_sel(_wer);
1


\tmp_run_exec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tabelka funkcjami uruchamianymi - uruchamianie funkcji
::  OLD: \tmp_run_exec/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_FUN.cntx_psh();
CON_FUN.prefix();
{? TMP_RUN.first()
|| {? CON_FUN.seek(TMP_RUN.CON_FUN,CON_FUN.name()) || exec('echo_fun','!ctr_pdm_patw') ?};
   win_set('cur_row_pos=-1'); win_disp();
   {!
   |? {? CON_FUN.seek(TMP_RUN.CON_FUN,CON_FUN.name())
      || CON_FUN.CON_RODF();
         TMP_RUN.RUN:=-1; TMP_RUN.put();
         win_set('cur_row_pos=-1'); win_disp();
         exec('tmp_run_exec1','!ctr_pdm_patw');
         TMP_RUN.RUN:=1; TMP_RUN.put()
      ?};
      win_set('cur_row_pos=-1'); win_disp();
      ~exec('czy_przerwij','!ctr_pdm_patw') & TMP_RUN.next()
   !}
?};
CON_FUN.cntx_pop();
echo(); sel_exit()


\zap_error
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Zapisywanie komunikatow o bledach
::   WY: ref naglowka (CON_FUNL) w przypadku dodania pierwszego bledu
::  OLD: \zap_error/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=null;
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix();
OKRO_F.cntx_psh(); OKRO_F.prefix();
SKID_MBN.cntx_psh(); SKID_MBN.prefix();
FIRMA.cntx_psh(); FIRMA.prefix();
CON_FUNZ.cntx_psh();
KOM_CON.index(ndx_con4); KOM_CON.prefix(3);
{? KOM_CON.first()
|| {? exec('add_log','!ctr_pdm_patw')
   || CON_FUNZ.use('conp'+(4+$CON_FUNL.DATA));
      CON_FUN.cntx_psh(); CON_FUN.index('UNIK'); CON_FUN.prefix(REF.FIRMA);
      {! |?
         {? CON_FUN.find_key(KOM_CON.SYM_NAD,KOM_CON.SYM_NAD)
         || CON_FUNZ.prefix();
            CON_FUNZ.blank(1);
            CON_FUNZ.CON_FUNL:=CON_FUNL.ref();
            CON_FUNZ.SYM:=CON_FUN.SYM;
            CON_FUNZ.OPIS_FUN:=CON_FUN.OPIS;
            CON_FUNZ.OPIS:=KOM_CON.OPIS;
            {? KOM_CON.ROK_F & ROK_F.seek(KOM_CON.ROK_F,ROK_F.name()) || CON_FUNZ.ROK_F:=ROK_F.ref() ?};
            {? KOM_CON.OKRO_F & OKRO_F.seek(KOM_CON.OKRO_F,OKRO_F.name()) || CON_FUNZ.OKRO_F:=OKRO_F.ref() ?};
            {? KOM_CON.SKID_MBN & SKID_MBN.seek(KOM_CON.SKID_MBN,SKID_MBN.name()) || CON_FUNZ.SKID_MBN:=SKID_MBN.ref() ?};
            {? KOM_CON.FIRMA & FIRMA.seek(KOM_CON.FIRMA,FIRMA.name()) || CON_FUNZ.FIRMA:=FIRMA.ref() ?};
            CON_FUNZ.DOKSQL:=KOM_CON.DOKSQL;
            {? CON_FUNZ.add() || _zwrot:=CON_FUNL.ref() ?}
         ?};
         KOM_CON.next()
      !};
      CON_FUN.cntx_pop()
   ?}
?};
CON_FUNZ.cntx_pop();
ROK_F.cntx_pop(); OKRO_F.cntx_pop(); SKID_MBN.cntx_pop(); FIRMA.cntx_pop();
_zwrot


\echo_fun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Echo - uruchamianie funkcji
::  OLD: \echo_fun/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.OPIS=''
|| echo('Trwa wykonywanie funkcji %1'@[CON_FUN.SYM])
|| echo('Trwa wykonywanie funkcji %1 -%2'@[CON_FUN.SYM,CON_FUN.OPIS ])
?}


\czy_przerwij
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdza, czy przerwac aktualizacje (pojawily sie bledy)
::  OLD: \czy_przerwij/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_POM.PRZERWIJ
|| KOM_CON.cntx_psh();
   KOM_CON.index(ndx_con4); KOM_CON.prefix(3);
   _przerwij:=KOM_CON.first();
   KOM_CON.cntx_pop();
   _przerwij
|| 0
?}


\uruchom_cfun2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Uruchamianie funkcji do aktuaizacji danych - wewnetrzna
::  OLD: \uruchom_cfun2/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
TMP_RUN.blank(1);
TMP_RUN.LP:=lp_run; lp_run+=1;
TMP_RUN.SYM:=CON_FUN.SYM;
TMP_RUN.OPIS:=CON_FUN.OPIS;
TMP_RUN.RODZAJ:=CON_FUN.CON_RODF().TYP;
TMP_RUN.CON_FUN:=#CON_FUN.ref();
TMP_RUN.add()


\tmp_run_exec1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tabelka funkcjami uruchamianymi - uruchamianie funkcji - wewnetrzna
::  OLD: \tmp_run_exec1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('echo_fun','!ctr_pdm_patw');
{? CON_RODF.NUM_TYP=1
|| exec('petla','!ctr_pdm_patw','exec(\'del_skidxd\',\'!ctr_pdm_patw\')',0,'1','1',0,1)
|? CON_RODF.NUM_TYP=2
|| exec('petla','!ctr_pdm_patw','exec(\'kontrola_emag\',\'!ctr_pdm_patw\')',0,'1','1',0,0)
|? CON_RODF.NUM_TYP=3
|| exec('tab_dok','dok_fks',1,0);
   exec('petla','!ctr_pdm_patw','exec(\'spr_zgod\',\'!ctr_pdm_patw\')',1,'1','1',0,1);
   exec('tab_dokd','dok_fks')
|? CON_RODF.NUM_TYP=4
|| exec('petla','!ctr_pdm_patw','exec(\'kontrola_kasa\',\'!ctr_pdm_patw\',OKRO_F.ref())',0,'1','1',0,0)
|? CON_RODF.NUM_TYP=5
|| exec('petla','!ctr_pdm_patw','exec(\'kontrola_kali\',\'!ctr_pdm_patw\',OKRO_F.ref())',0,'1','1',0,0)
|? CON_RODF.NUM_TYP=6 | CON_RODF.NUM_TYP=31
|| exec('cfun_upd_wart','!ctr_pdm_patw',CON_RODF.NUM_TYP=6)
|? CON_RODF.NUM_TYP=7
|| exec('cfun_upd_def','!ctr_pdm_patw')
|? CON_RODF.NUM_TYP=9
|| exec('mod_przekszt','!ctr_pdm_patw')
|? CON_RODF.NUM_TYP=10
|| {? exec('m4_dok_podz_spr','control_marza')
   || zm_znak:=0;
      exec('petla','!ctr_pdm_patw',
           'exec(\'podz_auto\',\'!ctr_pdm_patw\')',1,'exec(\'spr_podz_auto\',\'!ctr_pdm_patw\')','1',0,1);
      VAR_DEL.delete('zm_znak')
   ?}
|? CON_RODF.NUM_TYP=11
|| {? CON_FUN.MODEL<>null
   || exec('petla','!ctr_pdm_patw','exec(\'nal_srod\',\'!ctr_pdm_patw\',OKRO_F.ref(),CON_FUN.MODEL)',0,'1','1',0,0)
   || exec('petla','!ctr_pdm_patw','exec(\'nal_srod\',\'!ctr_pdm_patw\',OKRO_F.ref(),SKID_MBN.ref())',0,'1','1',1,0)
   ?}
|? CON_RODF.NUM_TYP=12
|| {? CON_FUN.MODEL<>null
   || exec('petla','!ctr_pdm_patw','exec(\'nal_plan_am\',\'!ctr_pdm_patw\',OKRO_F.ref(),CON_FUN.MODEL)',0,'1','1',0,0)
   || exec('petla','!ctr_pdm_patw','exec(\'nal_plan_am\',\'!ctr_pdm_patw\',OKRO_F.ref(),SKID_MBN.ref())',0,'1','1',1,0)
   ?}
|? CON_RODF.NUM_TYP=13
|| {? CON_FUN.MODEL<>null
   || exec('petla','!ctr_pdm_patw','exec(\'nal_prac\',\'!ctr_pdm_patw\',OKRO_F.ref(),CON_FUN.MODEL)',0,'1','1',0,0)
   || exec('petla','!ctr_pdm_patw','exec(\'nal_prac\',\'!ctr_pdm_patw\',OKRO_F.ref(),SKID_MBN.ref())',0,'1','1',1,0)
   ?}
|? CON_RODF.NUM_TYP=14
|| {? CON_FUN.MODEL<>null
   || exec('petla','!ctr_pdm_patw','exec(\'nal_zlec\',\'!ctr_pdm_patw\',OKRO_F.ref(),CON_FUN.MODEL)',0,'1','1',0,0)
   || exec('petla','!ctr_pdm_patw','exec(\'nal_zlec\',\'!ctr_pdm_patw\',OKRO_F.ref(),SKID_MBN.ref())',0,'1','1',1,0)
   ?}
|? CON_RODF.NUM_TYP=15
|| exec('aktual_knag','!ctr_pdm_patw',1)
|? CON_RODF.NUM_TYP=16
|| exec('aktual_knag','!ctr_pdm_patw',2)
|? CON_RODF.NUM_TYP=17
|| exec('petla','!ctr_pdm_patw','exec(\'podz_awyc\',\'!ctr_pdm_patw\')',1,'1','1',0,1)
|? CON_RODF.NUM_TYP=18
|| exec('petla','!ctr_pdm_patw','exec(\'sprdokkon\',\'!ctr_pdm_patw\')',1,'1','1',0,1)
|? CON_RODF.NUM_TYP=19
|| exec('kopia_danych','!ctr_pdm_patw')
|? CON_RODF.NUM_TYP=20
|| exec('alokacja','!ctr_pdm_patw')
|? CON_RODF.NUM_TYP=21
|| exec('erase_alok','!ctr_pdm_patw')
|? CON_RODF.NUM_TYP=22
|| exec('form_zew','!ctr_pdm_patw')
|? CON_RODF.NUM_TYP=23
|| exec('petla','!ctr_pdm_patw','exec(\'kontrola_estra\',\'!ctr_pdm_patw\')',1,'1','1',0,0)
|? CON_RODF.NUM_TYP=24
|| exec('akt_war_wsk','!ctr_pdm_patw','exec(\'akt_war_wsk2\',\'!ctr_pdm_patw\')')
|? CON_RODF.NUM_TYP=25
|| exec('akt_war_wsk','!ctr_pdm_patw','exec(\'del_war_wsk\',\'!ctr_pdm_patw\')')
|? CON_RODF.NUM_TYP=26
|| exec('imp_war','!ctr_pdm_patw')
|? CON_RODF.NUM_TYP=27
|| ~~
::   exec('agr_plan_pro','skid_ktr')
|? CON_RODF.NUM_TYP=28
|| exec('agr_amor','!ctr_pdm_patw')
|? CON_RODF.NUM_TYP=29
|| exec('erase_agreg','!ctr_pdm_patw')
|? CON_RODF.NUM_TYP=30
|| exec('agr_merit','!ctr_pdm_patw')
|? CON_RODF.NUM_TYP=32
|| exec('cfun_proces','!ctr_pdm_patw')
|? CON_RODF.NUM_TYP=33
|| exec('k_noty_agr','!ctr_pdm_patw')
|? CON_RODF.NUM_TYP=34
|| VAR_DEL.delete('Ud','OkrDel');
   Ud:=obj_new(5);
   OkrDel:=exec('create_set','#array','INTEGER');
   K_WERSJE.index('CZY_SYS'); K_WERSJE.prefix('T'); K_WERSJE.first();
   exec('petla','!ctr_pdm_patw',$"exec('akt_spr','!ctr_pdm_patw')",1,'1','1',0,1);
   VAR_DEL.delete('Ud','OkrDel')
?}


\imp_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Importowanie wartosci z pliku tekstowego
::  OLD: \imp_war/skid_ktr.fml
:: ~OST: INFEXISTS,INFOPEN
::----------------------------------------------------------------------------------------------------------------------
_dalej:=1;
{? exec('cli_functions','#system')=0
|| _ret:=exec('add_kom','dok_fks',3,'',CON_FUN.SYM,exec('indevice_nacc_msg','#system'),0,null,null,null,'');
   return(_ret)
?};
_dalej:={? CON_FUN.PAR02=0
        || fexists(CON_FUN.FILE,1)
        || fexists('@'+CON_FUN.PATH+'\\'+CON_FUN.FILE,0)
        ?};
{? ~_dalej
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono podanego pliku wejściowego z danymi.',0,null,null,null,'')
|? var_pres('conalert')>0 & CON_FUN.PAR02<>0
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'W przypadku uruchamiania cyklicznego importu danych plik wejściowy musi być zlokalizowany na serwerze.',0,null,null,null,'')
|| _uchwyt:={? CON_FUN.PAR02=0
            || fopen(CON_FUN.FILE,'r',1)
            || fopen('@'+CON_FUN.PATH+'\\'+CON_FUN.FILE,'r',0)
            ?};
   {? _uchwyt
   || _dalej:={? CON_FUN.PAR03 || _str:=fread(_uchwyt); _str<>'\n' || 1 ?};
      {? _dalej
      || SKID_MBP.cntx_psh();
         SKID_MBP.index('LP'); SKID_MBP.prefix(CON_FUN.SKIDMWE);
         ile_wym:=SKID_MBP.size();
         SKID_MBP.cntx_pop();
         exec('mapa_imp','!ctr_pdm_patw');
         {? ile_wym
         || {! |?
               _str:=fread(_uchwyt);
               _str:={? CON_FUN.PAR05=1
                     || utf8_maz(_str)
                     |? CON_FUN.PAR05=2
                     || STR.w952maz(_str)
                     || _str
                     ?};
               {? _str<>'\n' & +|_str
               || _nr:=0;
                  MAPA_IMP.blank(1);
                  {! _licz:=1..ile_wym
                  |! _i:=_str*'\t'; _kod:=(_i-1)+_str; _str:=_i-_str;
                     ($('MAPA_IMP.WYM'+form(_licz,-2)+':=_a'))(_kod)
                  !};
                  _ile:=CON_FUN.OKR_KON().NR-CON_FUN.OKR_POCZ().NR+1;
                  {!
                  |? MAPA_IMP.NR:=_nr;
                     _ile_o:={? _ile>12 || 12 || _ile ?};
                     {! _licz:=1..(_ile_o)
                     |! {? _str<>''
                        || _i:=_str*'\t';
                           _war:={? _i=0 || _str || (_i-1)+_str ?}; _war:=STR.gsub(_war,' ',''); _war:=STR.gsub(_war,',','.');
                           {? _i=0 || _str:='' || _str:=_i-_str ?};
                           ($('MAPA_IMP.WAR'+form(_licz,-2)+':=#_a'))(_war)
                        || ($('MAPA_IMP.WAR'+form(_licz,-2)+':=_a'))(0)
                        ?}
                     !};
                     {? _ile_o<12
                     || {! _licz:=_ile_o+1..12
                        |! ($('MAPA_IMP.WAR'+form(_licz,-2)+':=_a'))(0)
                        !}
                     ?};
                     MAPA_IMP.add();
                     exec('chk_elem_map','!ctr_pdm_patw');
                     MAPA_IMP.put();
                     _nr+=1;
                     _ile-=_ile_o
                  !}
               ?};
               _str<>'\n'
            !}
         ?}
      ?};
      {? MAPA_IMP.first()
      || imp_dane:=0;
         {? CON_FUN.PAR04 & var_pres('conalert')<=0
         || MAPA_IMP.prefix(0);
            MAPA_IMP.select()
         || imp_dane:=1
         ?};
         {? imp_dane || exec('import','!ctr_pdm_patw') ?}
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie wczytano wartości z podanego pliku wejściowego z danymi.',0,null,null,null,'')
      ?};
      VAR_DEL.delete('MAPA_IMP','ndx_map1','ndx_map2','ile_wym','MAPAIMPE','imp_dane'); fclose(_uchwyt)
   || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Błąd otwarcia podanego pliku wejściowego z danymi.',0,null,null,null,'')
   ?}
?}


\mapa_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tabela z wartosciami importowanymi
::  OLD: \mapa_imp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('MAPA_IMP', 'MAPAIMPE');
MAPA_IMP:=tab_tmp(17,'NR','INTEGER','',
                     'LP','INTEGER','',
                     'WYM01','STRING[16]','',
                     'WYM02','STRING[16]','',
                     'WYM03','STRING[16]','',
                     'WYM04','STRING[16]','',
                     'WYM05','STRING[16]','',
                     'WYM06','STRING[16]','',
                     'WYM07','STRING[16]','',
                     'WYM08','STRING[16]','',
                     'WYM09','STRING[16]','',
                     'WYM10','STRING[16]','',
                     'WYM11','STRING[16]','',
                     'WYM12','STRING[16]','',
                     'WYM13','STRING[16]','',
                     'WYM14','STRING[16]','',
                     'WYM15','STRING[16]','',
                     'WYM01REF','INTEGER','',
                     'WYM02REF','INTEGER','',
                     'WYM03REF','INTEGER','',
                     'WYM04REF','INTEGER','',
                     'WYM05REF','INTEGER','',
                     'WYM06REF','INTEGER','',
                     'WYM07REF','INTEGER','',
                     'WYM08REF','INTEGER','',
                     'WYM09REF','INTEGER','',
                     'WYM10REF','INTEGER','',
                     'WYM11REF','INTEGER','',
                     'WYM12REF','INTEGER','',
                     'WYM13REF','INTEGER','',
                     'WYM14REF','INTEGER','',
                     'WYM15REF','INTEGER','',
                     'OPIS01','STRING[60]','',
                     'OPIS02','STRING[60]','',
                     'OPIS03','STRING[60]','',
                     'OPIS04','STRING[60]','',
                     'OPIS05','STRING[60]','',
                     'OPIS06','STRING[60]','',
                     'OPIS07','STRING[60]','',
                     'OPIS08','STRING[60]','',
                     'OPIS09','STRING[60]','',
                     'OPIS10','STRING[60]','',
                     'OPIS11','STRING[60]','',
                     'OPIS12','STRING[60]','',
                     'OPIS13','STRING[60]','',
                     'OPIS14','STRING[60]','',
                     'OPIS15','STRING[60]','',
                     'WAR01','REAL','W1',
                     'WAR02','REAL','W2',
                     'WAR03','REAL','W3',
                     'WAR04','REAL','W4',
                     'WAR05','REAL','W5',
                     'WAR06','REAL','W6',
                     'WAR07','REAL','W7',
                     'WAR08','REAL','W8',
                     'WAR09','REAL','W9',
                     'WAR10','REAL','W10',
                     'WAR11','REAL','W11',
                     'WAR12','REAL','W12',
                     'WAR13','REAL','W13',
                     'WAR14','REAL','W14',
                     'ERROR','INTEGER',''
                 );

ndx_map1:=MAPA_IMP.index('?');
ndx_map2:=MAPA_IMP.ndx_tmp('',1,'ERROR',,0,'NR',,0,'LP',,0);
_okno:=MAPA_IMP.mk_sel('Wartości dla controllingu'@,'T',,'mapa_imp_sel');
_edit:=MAPA_IMP.mk_edit('Wartości dla controllingu'@,,'mapa_imp_red');
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(CON_FUN.SKIDMWE);
{! _i:=1..ile_wym
|! MAPA_IMP.fld_fml('WYM'+form(_i,-2),'BEFORE_DISPLAY',"exec('flddisp','color','MAPA_IMP#01')");
   MAPA_IMP.fld_fml('OPIS'+form(_i,-2),'BEFORE_DISPLAY',"exec('flddisp','color','MAPA_IMP#01')");
   _szer:={? ile_wym<=5 || 6 || 3 ?}*(-1);
   _etyk:={? SKID_MBP.find_key(_i) || SKID_MBP.NAZ || '' ?};
   MAPA_IMP.win_fld(_okno,,'WYM'+form(_i,-2),,,_szer,,,_etyk);
   MAPA_IMP.win_efld(_edit,,'WYM'+form(_i,-2),,,,,,_etyk);
   MAPA_IMP.win_efld(_edit,,'OPIS'+form(_i,-2),,,,,,,1)
!};
SKID_MBP.cntx_pop();
_szer:={? ile_wym<=5 || 5 || 4 ?}*(-1);
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(CON_FUN.ROK1);
_przes:=(CON_FUN.OKR_POCZ().NR-1);
_ile_o:=_ile:=CON_FUN.OKR_KON().NR-CON_FUN.OKR_POCZ().NR+1;
{? _ile_o>12 || _ile_o:=12 ?};
{! _i:=1.._ile_o
|! _etyk:={? OKRO_F.find_key(_i+_przes) || OKRO_F.NAZ || '' ?};
   MAPA_IMP.win_fld(_okno,,'WAR'+form(_i,-2),,,_szer,2,,_etyk);
   MAPA_IMP.win_efld(_edit,,'WAR'+form(_i,-2),,,,,,_etyk);
   ($('POMOC.K'+$_i+':=_a'))(_etyk);
   MAPA_IMP.fld_opt(_okno,'col_name="%1"'[($('POMOC.K'+$_i))()],,'WAR'+form(_i,-2))
!};
OKRO_F.cntx_pop();
{? _ile>12
|| __OMAX:=_ile%12+{? _ile%*12 || 1 || 0 ?};
   __OPOZ:=0;
   MAPA_IMP.win_act(_okno,0,'Formuła','Poprzednie okresy'@@,,'Wyświetla poprzednie okresy'@,,"
      __OPOZ+=1;
      {? __OPOZ=__OMAX || __OPOZ:=0 ?};
      MAPA_IMP.prefix(__OPOZ);
      _przes:=CON_FUN.OKR_POCZ().NR-1+__OPOZ*12;
      {! _i:=1..12
      |! _etyk:={? OKRO_F.find_key(_i+_przes) || OKRO_F.NAZ || '' ?};
         ($('POMOC.K'+$_i+':=_a'))(_etyk)
      !}
   ",,,,,'P');
   MAPA_IMP.win_act(_okno,0,'Formuła','Następne okresy'@@,,'Wyświetla następne okresy'@,,"
      __OPOZ-=1;
      {? __OPOZ<0 || __OPOZ:=__OMAX-1 ?};
      MAPA_IMP.prefix(__OPOZ);
      _przes:=CON_FUN.OKR_POCZ().NR-1+__OPOZ*12;
      {! _i:=1..12
      |! _etyk:={? OKRO_F.find_key(_i+_przes) || OKRO_F.NAZ || '' ?};
         ($('POMOC.K'+$_i+':=_a'))(_etyk)
      !}
   ",,,,,'N')
?};
MAPA_IMP.win_act(_okno,0,'Formuła','Importuj dane'@@,,'Import danych do modelu'@,,"exec('imp_dane','!ctr_pdm_patw')",1,,,,'I');
MAPA_IMP.win_btn(_okno,'text='+'Importuj dane'@+',btn_label_align=center,panel=right,align=begin','menu:I');
MAPA_IMP.win_act(_okno,0,'Formuła','Anuluj import'@@,,'Anulowanie importu'@,,"exec('an_imp_dane','!ctr_pdm_patw')",,,,,'A');
MAPA_IMP.win_btn(_okno,'text='+'Anuluj import'@+',btn_label_align=center,panel=right,align=begin','menu:A');
MAPA_IMP.win_act(_okno,0,'Formuła','Legenda'@@,,'Opis znaczenia kolorów wierszy'@,,"exec('legenda','color','MAPA_IMP#01')",,,,,'L');
MAPA_IMP.win_act(_okno,0,'Formuła','Szczegóły'@@,,'Opisy błędów'@,,"exec('imp_opis_bl','!ctr_pdm_patw')",,,,,'S');
MAPA_IMP.win_act(_okno,0,'Rekord',,,,"exec('rek_opis_bl','!ctr_pdm_patw')");
MAPA_IMP.win_act(_okno,,'Kolejność');
MAPA_IMP.win_sel(_okno);
MAPA_IMP.win_edit(_edit);
MAPAIMPE:=tab_tmp(2,'MAPA_IMP','INTEGER','',
                    'OPIS','STRING[150]','Opis'
                 );
_wer:=MAPAIMPE.mk_sel('Komunikaty'@,'P',0,'mapa_impe_wer');
MAPAIMPE.win_fld(_wer,,'OPIS',,,120);
MAPAIMPE.win_sel(_wer)


\chk_elem_map
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdza prawidlowosc elementow mapy - import danych
::  OLD: \chk_elem_map/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_SCH.cntx_psh();
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(CON_FUN.SKIDMWE);
UD_SKL.cntx_psh(); UD_SKL.index('SYMBOL');
{! _i:=1..ile_wym
|! nr_wym:=_i;
   _skl:=($('MAPA_IMP.WYM'+form(_i,-2)))();
   {? _skl=''
   || _opis:='Schemat '+UD_SCH.SYMBOL+' - nie wybrano elementu.';
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,_opis,0,null,null,null,'');
      MAPAIMPE.MAPA_IMP:=#MAPA_IMP.ref(); MAPAIMPE.OPIS:=_opis; MAPAIMPE.add();
      MAPA_IMP.ERROR:=1
   || {? SKID_MBP.find_key(_i)
      || UD_SKL.prefix(SKID_MBP.UD_SCH().UD_TYP,_skl,_skl);
         {? UD_SKL.first()
         || exec('chk_elem_map1','!ctr_pdm_patw')
         || _opis:='W schemacie '+UD_SCH.SYMBOL+' nie znaleziono elementu o symbolu '+_skl+'.';
            exec('add_kom','dok_fks',3,'',CON_FUN.SYM,_opis,0,null,null,null,'');
            MAPAIMPE.MAPA_IMP:=#MAPA_IMP.ref(); MAPAIMPE.OPIS:=_opis; MAPAIMPE.add();
            MAPA_IMP.ERROR:=1
         ?}
      ?}
   ?}
!};
UD_SKL.cntx_pop(); SKID_MBP.cntx_pop(); UD_SCH.cntx_pop();
VAR_DEL.delete('nr_wym')


\chk_elem_map1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie elementow przy imporcie
::  OLD: \chk_elem_map1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? UD_SKL.AKTYWNY<>'T'
|| _opis:='Element schematu '+UD_SCH.SYMBOL+' o symbolu '+UD_SKL.SYMBOL+' ('+UD_SKL.OPIS+') nie jest aktywny.';
   exec('add_kom','dok_fks',3,'',CON_FUN.SYM,_opis,0,null,null,null,'');
   MAPAIMPE.MAPA_IMP:=#MAPA_IMP.ref(); MAPAIMPE.OPIS:=_opis; MAPAIMPE.add();
   MAPA_IMP.ERROR:=1; _zwrot:=0
?};
{? UD_SKL.LISTA<>'T'
|| _opis:='Element schematu '+UD_SCH.SYMBOL+' o symbolu '+UD_SKL.SYMBOL+' ('+UD_SKL.OPIS+') nie jest wykorzystywany w ewidencji.';
   exec('add_kom','dok_fks',3,'',CON_FUN.SYM,_opis,0,null,null,null,'');
   MAPAIMPE.MAPA_IMP:=#MAPA_IMP.ref(); MAPAIMPE.OPIS:=_opis; MAPAIMPE.add();
   MAPA_IMP.ERROR:=1; _zwrot:=0
?};
UD_DEF.cntx_psh();
UD_DEF.index('PODTEC'); UD_DEF.prefix(UD_SCH.ref(),UD_SKL.ref());
{? ~UD_DEF.first()
|| _opis:='Element o symbolu '+UD_SKL.SYMBOL+' ('+UD_SKL.OPIS+') nie jest wykorzystywany w schemacie '+UD_SCH.SYMBOL+'.';
   exec('add_kom','dok_fks',3,'',CON_FUN.SYM,_opis,0,null,null,null,'');
   MAPAIMPE.MAPA_IMP:=#MAPA_IMP.ref(); MAPAIMPE.OPIS:=_opis; MAPAIMPE.add();
   MAPA_IMP.ERROR:=1; _zwrot:=0
?};
($('MAPA_IMP.OPIS'+form(nr_wym,-2)+':=UD_SKL.OPIS'))();
{? _zwrot || ($('MAPA_IMP.WYM'+form(nr_wym,-2)+'REF:=#UD_SKL.ref()'))() ?};
UD_DEF.cntx_pop()


\imp_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Import danych z pliku
::  OLD: \imp_dane/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
imp_dane:=1; sel_exit()


\an_imp_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Anulowanie importu danych z pliku tekstowego
::  OLD: \an_imp_dane/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
sel_exit()


\imp_opis_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przegladanie opisow bledow przy imporcie danych
::  OLD: \imp_opis_bl/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
MAPAIMPE.prefix(#MAPA_IMP.ref());
MAPAIMPE.select()


\rek_opis_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przegladanie opisow bledow - pokazywanie lub ukrywanie akcji
::  OLD: \rek_opis_bl/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
MAPAIMPE.prefix(#MAPA_IMP.ref());
{? MAPAIMPE.first()
|| MAPA_IMP.actions(MAPA_IMP.win_sel('?'),'','',1)
|| MAPA_IMP.actions(MAPA_IMP.win_sel('?'),'S','',1)
?}


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Import danych z pliku tekstowego
::  OLD: \import/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
MAPA_IMP.index(ndx_map2); MAPA_IMP.prefix(0);
{? MAPA_IMP.first()
|| SKID_MBN.cntx_psh(); CON_FUN.SKIDMWE();
   K_WERSJE.cntx_psh(); CON_FUN.KWER1();
   ROK_F.cntx_psh(); CON_FUN.ROK1();
   K__NAG.cntx_psh();
   K__NAG.index('UNIK1'); K__NAG.prefix(REF.FIRMA,SKID_MBN.ref(),K_WERSJE.ref(),ROK_F.ref());
   _dalej:={? K__NAG.first()
           || 1
           || exec('add_knag','control')
           ?};
   {? _dalej
   || {? K__NAG.r_lock(1,1)
      || do();
         K__POZ.cntx_psh();
         K__WAR.cntx_psh();
         {? CON_FUN.PAR01 || exec('del_docel_imp','!ctr_pdm_patw') ?};
         exec('docel_imp','!ctr_pdm_patw');
         K__POZ.cntx_pop(); K__WAR.cntx_pop();
         end();
         K__NAG.r_unlock()
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja agregacji wartości dla modelu '+SKID_MBN.KOD+' wersji '+K_WERSJE.SYM+' i roku '+ROK_F.NAZ+' jest obsługiwana przez innego operatora.',
              0,ROK_F.ref(),null,SKID_MBN.ref(),'')
      ?}
   ?};
   K__NAG.cntx_pop(); SKID_MBN.cntx_pop(); K_WERSJE.cntx_pop(); ROK_F.cntx_pop()
?}


\del_docel_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Kasowanie danych docelowych przed importem z pliku tekstowego
::  OLD: \del_docel_imp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
wi:=obj_new(15);
{! _i:=1..15 |! wi[_i]:=null !};
UD_SKL.cntx_psh(); UD_SKL.prefix();
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(CON_FUN.ROK1);
CON_FUN.OKR_POCZ();
{!
|? {? (K_WERSJE.CZY_SYS='N' | exec('can_fun_run','control',1)) & MAPA_IMP.first()
   || _maska:=exec('maska','control');
      K__POZ.use('yb'+_maska); K__POZ.index('RODZAJ');
      K__WAR.use('yx'+_maska); K__WAR.index('K__POZ');
      {!
      |? _ok:=1;
         {! _i:=1..ile_wym
         |? _ok
         |! _skl:=($('MAPA_IMP.WYM'+form(_i,-2)+'REF'))();
            {? _skl<>0 & UD_SKL.seek(_skl,UD_SKL.name())
            || wi[_i]:=UD_SKL.ref()
            || _ok:=0
            ?}
         !};
         {? _ok
         || K__POZ.prefix(0,K__NAG.ref(),OKRO_F.ref(),wi[1],wi[2],wi[3],wi[4],wi[5],wi[6],wi[7],wi[8],wi[9],wi[10],wi[11],wi[12],wi[13],wi[14],wi[15]);
            {? K__POZ.first()
            || K__WAR.prefix(K__POZ.ref());
               {? K__WAR.first()
               || {! |?
                     _delr:=K__WAR.del(,1);
                     {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
                  !}
               ?};
               _delr:=K__POZ.del(,1);
               {? _delr=0 || undo() ?}
            ?}
         ?};
         MAPA_IMP.next()
      !}
   ?};
   OKRO_F.ref()<>CON_FUN.OKR_KON & OKRO_F.next()
!};
OKRO_F.cntx_pop(); UD_SKL.cntx_pop();
VAR_DEL.delete('wi')


\docel_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Zapisywanie danych docelowych
::  OLD: \docel_imp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_przes:=CON_FUN.OKR_POCZ().NR;
wym:=obj_new(15);
{! _i:=1..15 |! wym[_i]:=null !};
UD_SKL.cntx_psh(); UD_SKL.prefix();
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(CON_FUN.ROK1);
CON_FUN.OKR_POCZ();
{!
|? {? K_WERSJE.CZY_SYS='N' | exec('can_fun_run','control',1)
   || K__POZ.use('yb'+exec('maska','control'));
      _nr:=OKRO_F.NR-_przes;
      _prfx:=_nr%12;
      _nr:=_nr-_prfx*12+1;
      MAPA_IMP.prefix(0,_prfx);
      {? MAPA_IMP.first()
      || {! |?
            _ok:=1;
            _war:=($('MAPA_IMP.WAR'+form(_nr,-2)))();
            {! _i:=1..ile_wym
            |? _ok
            |! _skl:=($('MAPA_IMP.WYM'+form(_i,-2)+'REF'))();
               {? _skl<>0 & UD_SKL.seek(_skl,UD_SKL.name())
               || wym[_i]:=UD_SKL.ref()
               || _ok:=0
               ?}
            !};
            {? _ok || exec('k__poz','control',_war) ?};
            MAPA_IMP.next()
         !}
      ?}
   ?};
   OKRO_F.ref()<>CON_FUN.OKR_KON & OKRO_F.next()
!};
OKRO_F.cntx_pop(); UD_SKL.cntx_pop();
VAR_DEL.delete('wym')


\add_log
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodanie nagłówka w logu uruchamiania funkcji aktualizacji
::----------------------------------------------------------------------------------------------------------------------
CON_FUNL.index('DISP');
CON_FUNL.prefix(REF.S_FIRMA); CON_FUNL.blank(1);
CON_FUNL.USER:=con_user;
CON_FUNL.DATA:=con_data;
CON_FUNL.GODZ:=con_time;
CON_FUNL.FIRMA:=REF.S_FIRMA;
CON_FUN.cntx_psh();
CON_FUNL.GRFUN:=UD_POM.CON_FUN().SYM;
CON_FUN.cntx_pop();
CON_FUNL.OKR_POCZ:=UD_POM.OKR_POCZ;
CON_FUNL.OKR_KON:=UD_POM.OKR_KON;
CON_FUNL.PRZERWIJ:=UD_POM.PRZERWIJ;
CON_FUNL.ZAP_ERR:=UD_POM.ZAP_ERR;
{? CON_FUNL.add()
|| ConFunL:=CON_FUNL.ref();
   1
?}


\petla
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Uruchamianie funkcji dla przedzialu okresow
::   WE: _a - uruchamiana funkcja (dla okresu obrachunkowego)
::       _b - zapamietywanie i przywracanie roku i okresu obrachunkowego ze stalych systemu
::            i otwieranie masek tabel
::       _c - funkcja uruchamiana dla roku bilansowego
::       _d - funkcja uruchamiana dla okresu obrachunkowego
::       _e - czy wewnatrz okresu petla po modelach
::       _f - czy petla po firmach (dla wersji czapowej)
::  OLD: \petla/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _b || _okres:=SSTALE.AO; _rok:=SSTALE.AR ?};
SKID_MBN.cntx_psh(); SKID_MBN.prefix();
{? CON_FUN.MODEL<>null || CON_FUN.MODEL() ?};
ROK_F.cntx_psh(); OKRO_F.cntx_psh();
{? REF.S_FIRMA=REF.GRUPA
|| _firma:=REF.FIRMA;
   {? _f & ~CON_FUN.FIRMAWYB
   || FIRMA.cntx_psh();
      FIRMA.index('EWID'); FIRMA.prefix('T');
      {? FIRMA.first()
      || {!
         |? FIRMA.cntx_psh();
            {? FIRMA.Z<>'T'
            || REF.FIRMA:=FIRMA.ref();
               exec('petla_firma','!ctr_pdm_patw',_a,_b,_c,_d,_e)
            ?};
            FIRMA.cntx_pop();
            FIRMA.next()
         !}
      ?};
      FIRMA.cntx_pop()
   || {? CON_FUN.FIRMAWYB || REF.FIRMA:=CON_FUN.FIRMAWYB ?};
       exec('petla_firma','!ctr_pdm_patw',_a,_b,_c,_d,_e)
   ?};
   REF.FIRMA:=_firma
|| ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
   OKRO_F.index('ROK');
   {? ROK_F.seek(UD_POM.ROK_POCZ)
   || {! |?
         ROK_F.cntx_psh();
         OKRO_F.prefix(ROK_F.ref());
         {? (ROK_F.ref()=UD_POM.ROK_POCZ & OKRO_F.seek(UD_POM.OKR_POCZ)) | (ROK_F.ref()<>UD_POM.ROK_POCZ & OKRO_F.first())
         || {? ($_c)()
            || {!
               |? {? exec('can_fun_run','control')
                  || UD_POM.OKRO_F:=OKRO_F.ref();
                     OKRO_F.cntx_psh();
                     {? _b || SSTALE.AO:=OKRO_F.ref(); SSTALE.AR:=ROK_F.ref(); exec('open_tabele','open_tab') ?};
                     {? ($_d)()
                     || {? _e
                        || exec('petla_modele','!ctr_pdm_patw',_a)
                        || ($_a)()
                        ?}
                     ?};
                     OKRO_F.cntx_pop()
                  ?};
                  OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
               !}
            ?}
         ?};
         ROK_F.cntx_pop();
         ROK_F.ref()<>UD_POM.ROK_KON & ROK_F.next()
      !}
   ?}
?};
OKRO_F.cntx_pop(); ROK_F.cntx_pop();
{? _b
|| SSTALE.AO:=_okres; SSTALE.AR:=_rok;
   exec('open_tabele','open_tab')
?};
SKID_MBN.cntx_pop();
1


\petla_firma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Uruchamianie funkcji dla przedzialu okresow - w petli po firmach
::   WE: _a - uruchamiana funkcja (dla okresu obrachunkowego)
::       _b - zapamietywanie i przywracanie roku i okresu obrachunkowego ze stalych systemu
::            i otwieranie masek tabel
::       _c - funkcja uruchamiana dla roku bilansowego
::       _d - funkcja uruchamiana dla okresu obrachunkowego
::       _e - czy wewnatrz okresu petla po modelach
::  OLD: \petla_firma/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_sp_rok:=null; _ok_rok:=0;
ROK_F.cntx_psh();
OKRO_F_G.cntx_psh(); OKRO_F_G.index('OKRO_F_G');
OKRO_F.cntx_psh(); OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.S_FIRMA); UD_POM.OKR_POCZ();
{! |?
   UD_POM.OKRO_F:=OKRO_F.ref();
   OKRO_F.cntx_psh();
   OKRO_F_G.prefix(OKRO_F.ref(),REF.FIRMA);
   {? OKRO_F_G.first()
   || OKRO_F_G.OKRO_F().ROK();
      {? _sp_rok=null | ROK_F.ref()<>_sp_rok
      || _sp_rok:=ROK_F.ref(); _ok_rok:=($_c)()
      ?};
      {? _ok_rok
      || {? _b || SSTALE.AO:=OKRO_F.ref(); SSTALE.AR:=ROK_F.ref(); exec('open_tabele','open_tab') ?};
         {? ($_d)()
         || {? _e
            || exec('petla_modele','!ctr_pdm_patw',_a)
            || ($_a)()
            ?}
         ?}
      ?}
   || FIRMA.cntx_psh();
      _firsym:=REF.FIRMA().SYMBOL;  _firsym1:=REF.S_FIRMA().SYMBOL;
      _firma:=REF.FIRMA; REF.FIRMA:=REF.S_FIRMA; REF.FIRMA();
      OKRO_F.cntx_psh();
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,
           'Nie znaleziono okresu obrachunkowego w firmie '+_firsym+
           ' dla okresu '+OKRO_F.NAZ+'/'+OKRO_F.ROK().NAZ+' w firmie '+_firsym1+'.',
           0,ROK_F.ref(),OKRO_F.ref(),null,'');
      OKRO_F.cntx_pop();
      REF.FIRMA:=_firma;
      FIRMA.cntx_pop()
   ?};
   OKRO_F.cntx_pop();
   OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
!};
OKRO_F_G.cntx_pop(); OKRO_F.cntx_pop(); ROK_F.cntx_pop()


\petla_modele
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Petla po modelach z uruchamianiem funkcji
::   WE: _a - uruchamiana funkcja
::  OLD: \petla_modele/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBN.cntx_psh(); SKID_MBN.index('KOD'); SKID_MBN.prefix();
{? SKID_MBN.first()
|| {!
   |? ($_a)();
      SKID_MBN.next()
   !}
?};
SKID_MBN.cntx_pop()


\sprdokkon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdza czy w okresie nie ma dokumentow przeznaczonych do controllingu, ktore
::       nie sa zaakceptowane ksiegowo
::  OLD: \sprdokkon/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh();
{? CON_FUN.ODD
|| DOK.index('CON1_O'); DOK.prefix(CON_FUN.ODD,'N')
|| DOK.index('PR'); DOK.prefix('N')
?};
exec('sprdokkon1','!ctr_pdm_patw',1);
DOK.index('PR');
{? CON_FUN.ODD
|| DOK.prefix('T','N',CON_FUN.ODD)
|| DOK.prefix('T','N')
?};
exec('sprdokkon1','!ctr_pdm_patw',2);
DOK.cntx_pop()


\sprdokkon1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdza czy w okresie nie ma dokumentow przeznaczonych do controllingu, ktore
::       nie sa zaakceptowane ksiegowo - wewnetrzna
::   WE: _a - 1 - niezakceptowane
::            2 - zaakceptowane ale nie zaksiegowane
::  OLD: \sprdokkon1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? DOK.first()
|| {!
   |? {? DOK.r_lock(1,1)
      || {? CON_FUN.WAR_KSIE='' | (CON_FUN.WAR_KSIE<>'' & ($CON_FUN.WAR_KSIE)())
         || _sys:={? +DOK.ZAR & DOK.ZAR*':' || (DOK.ZAR*':'-1)+DOK.ZAR || '' ?};
            {? (CON_FUN.PAR01 & (_sys='FKS' | _sys='IF' | _sys='OBG')) |
               (CON_FUN.PAR02 & (_sys='LSP' | _sys='LMG')) |
               (CON_FUN.PAR03 & _sys='PDK') |
               (CON_FUN.PAR04 & _sys='KASA') |
               (CON_FUN.PAR05 & _sys='FST')
            || OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
               {? _a=1
               || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Dokument jest niezaakceptowany - '+DOK.NK+' ('+
                       $SSTALE.AO().NR+'/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
                       0,SSTALE.AR,SSTALE.AO,null,$DOK.ref())
               || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Dokument jest niezaksięgowany - '+DOK.NK+' ('+
                       $SSTALE.AO().NR+'/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
                       0,SSTALE.AR,SSTALE.AO,null,$DOK.ref())
               ?};
               OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
            ?}
         ?};
         DOK.r_unlock()
      || OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
         exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Dokument obsługuje inny operator - '+DOK.NK+' ('+$SSTALE.AO().NR+
              '/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
              0,SSTALE.AR,SSTALE.AO,null,$DOK.ref());
         OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
      ?};
      DOK.next()
   !}
?}


\spr_podz_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Automatyczne tworzenie podzialow - sprawdzenie czy jest zdefiniowany automat
::  OLD: \spr_podz_auto/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1; zm_znak:=0;
UD_POM.AUTOKSIE:=null;
{? REF.FIRMA().Z='T'
|| _zwrot:=0
|? CON_FUN.PAR01=1 | (CON_FUN.PAR02=1 & CON_FUN.PAR10=0) | (CON_FUN.PAR04=1 & CON_FUN.PAR10=0) |
   CON_FUN.PAR03=1 | CON_FUN.PAR05=1 | CON_FUN.PAR06=1 | CON_FUN.PAR07=1 | CON_FUN.PAR08=1
|| FIRMA.cntx_psh();
   CON_FUNP.cntx_psh(); CON_FUNP.index('UNIK');
   {? REF.FIRMA().TYP='W'
   || _symbol:=FIRMA.SYMBOL-1; zm_znak:=1;
      FIRMA.cntx_psh();
      FIRMA.index('SYMBOL'); FIRMA.prefix(_symbol,_symbol);
      {? ~FIRMA.first() || _zwrot:=0 ?};
      {? _zwrot
      || ROK_F.cntx_psh();
         ROK_F.index('ROKPOCZ'); ROK_F.prefix(FIRMA.ref(),ROK_F.POCZ_ROK);
         {? ROK_F.first()
         || CON_FUNP.prefix(CON_FUN.ref(),FIRMA.ref(),ROK_F.ref())
         || _zwrot:=0
         ?};
         ROK_F.cntx_pop()
      ?};
      FIRMA.cntx_pop()
   || CON_FUNP.prefix(CON_FUN.ref(),REF.FIRMA,ROK_F.ref())
   ?};
   {? _zwrot
   || {? CON_FUNP.first() & CON_FUNP.AUTOKSIE().TYP='K' & AUTOKSIE.A='T'
      || UD_POM.AUTOKSIE:=CON_FUNP.AUTOKSIE
      || FIRMA.cntx_psh();
         exec('add_kom','dok_fks',3,'',CON_FUN.SYM,
              {? REF.S_FIRMA=REF.GRUPA
              || 'Brak zdefiniowanej prawidłowej, zaakceptowanej formuły automatycznej rejestracji'+
                 ' dla firmy '+REF.FIRMA().SYMBOL+' i roku '+ROK_F.NAZ+'.'
              || 'Brak zdefiniowanej prawidłowej, zaakceptowanej formuły automatycznej rejestracji dla roku '+ROK_F.NAZ+'.'
              ?},
              0,ROK_F.ref(),null,null,'');
         FIRMA.cntx_pop();
         _zwrot:=0
      ?}
   ?};
   CON_FUNP.cntx_pop(); FIRMA.cntx_pop()
?};
_zwrot


\podz_auto
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Automatyczne tworzenie podzialow
::  OLD: \podz_auto/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,XINFO);
SKIDXD.cntx_psh();
DOK.cntx_psh(); DOK.index('PR');
{? CON_FUN.ODD || DOK.prefix('T','T',CON_FUN.ODD) || DOK.prefix('T','T') ?};
{? DOK.first()
|| {!
   |? {? DOK.r_lock(1,1)
      || {? CON_FUN.WAR_KSIE='' | (CON_FUN.WAR_KSIE<>'' & ($CON_FUN.WAR_KSIE)())
         || {? ~CON_FUN.PAR09
            || SKIDXD.index('AUT1');
               {? CON_FUN.MODEL=null
               || SKIDXD.prefix('T',DOK.ref())
               || SKIDXD.prefix('T',DOK.ref(),CON_FUN.MODEL)
               ?};
               {? SKIDXD.first() || {! |? SKIDXD.del() !} ?}
            ?};
            {? CON_FUN.PAR10
            || SKIDXD.cntx_psh(); SKIDXD.index('M4_PODZ2'); SKIDXD.prefix(DOK.ref(),'T');
               _ile_m4:=SKIDXD.size();
               SKIDXD.cntx_pop()
            ?};
            DOK.WSK_XD:='N'; DOK.put();
            _sys:={? +DOK.ZAR & DOK.ZAR*':' || (DOK.ZAR*':'-1)+DOK.ZAR || '' ?};
            {? (_sys='FKS' | _sys='OBG' | _sys='HBN') & CON_FUN.PAR01=1
            || exec('oblicz_f','dok_fks',AUTOKSIE.NAZ)
            |? (_sys='LMG') & (1+DOK.DOKZRODL)='M'
            || {? CON_FUN.PAR04=1
               || exec('oblicz_f','dok_fks',AUTOKSIE.NAZ)
               |? CON_FUN.PAR04=2
               || exec('podz_mag','!ctr_pdm_patw')
               ?}
            |? (_sys='LSP' | _sys='LZK') & (1+DOK.DOKZRODL='D' | 1+DOK.DOKZRODL='P' | 1+DOK.DOKZRODL='K')
            || {? REF.S_FIRMA=REF.GRUPA
               || {? CON_FUN.PAR02=1 || exec('oblicz_f','dok_fks',AUTOKSIE.NAZ) ?}
               || exec('podz_spzak','!ctr_pdm_patw')
               ?}
            |? _sys='FST'
            || {? CON_FUN.PAR08=1
               || exec('oblicz_f','dok_fks',AUTOKSIE.NAZ)
               |? CON_FUN.PAR08=2 & 2+DOK.DOKZRODL='EF'
               || {? CON_FUN.MODEL=null
                  || exec('petla_modele','!ctr_pdm_patw','exec(\'podz_amor\',\'!ctr_pdm_patw\')')
                  || CON_FUN.MODEL(); exec('podz_amor','!ctr_pdm_patw')
                  ?}
               ?}
            |? _sys='KAS'
            || {? CON_FUN.PAR05=1
               || exec('oblicz_f','dok_fks',AUTOKSIE.NAZ)
               |? CON_FUN.PAR05=2
               || {? 3+DOK.DOKZRODL='kpo' | 3+DOK.DOKZRODL='kpd'
                  || exec('podz_kasa_vat','!ctr_pdm_patw')
                  |? 3+DOK.DOKZRODL='kdo'
                  || exec('podz_kasa_dok','!ctr_pdm_patw')
                  |? 3+DOK.DOKZRODL='krp'
                  || exec('podz_kasa_rap','!ctr_pdm_patw')
                  ?}
               ?}
            |? _sys='PPL'
            || {? REF.S_FIRMA=REF.GRUPA
               || {? CON_FUN.PAR06=1 || exec('oblicz_f','dok_fks',AUTOKSIE.NAZ) ?}
               || exec('podz_kali','!ctr_pdm_patw')
               ?}
            ?};
            {? CON_FUN.PAR10
            || SKIDXD.cntx_psh(); SKIDXD.index('M4_PODZ2'); SKIDXD.prefix(DOK.ref(),'T');
               {? _ile_m4=SKIDXD.size()
               || exec('m4_dok_podz','control_marza')
               ?};
               SKIDXD.cntx_pop()
            ?}
         ?};
         DOK.r_unlock()
      || OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
         exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Dokument obsługuje inny operator - '+DOK.NK+' ('+$SSTALE.AO().NR+
              '/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',0,
              SSTALE.AR,SSTALE.AO,null,$DOK.ref());
         OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
      ?};
      DOK.next()
   !}
?};
SKIDXD.cntx_pop(); DOK.cntx_pop()


\podz_mag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tworzenie podzialow dla dokumentow magazynowych
::  OLD: \podz_mag/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_reffak:=#(4-DOK.DOKZRODL);
ND.cntx_psh(); ND.use('nagdo'+(3+(1-DOK.DOKZRODL))); ND.prefix();
DK.cntx_psh(); DK.use('dokma'+(3+(1-DOK.DOKZRODL)));
DK_L.cntx_psh(); DK_L.use('doklk'+(3+(1-DOK.DOKZRODL)));
{? ND.seek(_reffak,ND.name())
|| DK.index('DOKMAG'); DK.prefix(ND.ref());
   {? CON_FUN.PAR10 & exec('m4_czy_def_mag','control_marza')
   || exec('m4_podz_mag','control_marza')
   || {? CON_FUN.MODEL=null
      || CON_DEF.index('CON_DEF2'); CON_DEF.prefix(ND.TYP,0)
      || CON_DEF.index('CON_DEF4'); CON_DEF.prefix(ND.TYP,0,CON_FUN.MODEL)
      ?};
      {? DK.first() & CON_DEF.first()
      || {! |?
            {? CON_DEF.first()
            || {! |?
                  {? CON_DEF.FORMPOCZ<>'' || ($CON_DEF.FORMPOCZ)() ?};
                  exec('add_condef','!ctr_pdm_patw');
                  CON_DEF.next()
               !}
            ?};
            DK.next()
         !}
      ?}
   ?}
|| OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
   exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono dokumentu źródłowego dla '+DOK.NK+' ('+$SSTALE.AO().NR+
        '/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',0,SSTALE.AR,SSTALE.AO,null,$DOK.ref());
   OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
?};
ND.cntx_pop(); DK.cntx_pop(); DK_L.cntx_pop()


\add_condef
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tworzenie podzialow dla CON_DEF
::  OLD: \add_condef/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
SKIDXD.blank(1);
SKIDXD.SKID_MB:=CON_DEF.SKID_MB;
SKIDXD.DOK:=DOK.ref();
{? CON_DEF.SKID_MB<>null
|| CON_DEF.SKID_MB();
   SKID_MBP.cntx_psh();
   SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
   _ile_wym:=SKID_MBP.size();
   SKID_MBP.cntx_pop();
   {? _ile_wym=0
   || SKID_MBN.cntx_psh();
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Błędna definicja modelu '+CON_DEF.SKID_MB().KOD+'.',0,null,null,CON_DEF.SKID_MB,'');
      SKID_MBN.cntx_pop();
      _ok:=0
   || SKIDXD.PBUD:={? CON_DEF.ZN_PBUD='T'
                   || CON_DEF.PBUD_S
                   |? CON_DEF.PBUD_F<>null
                   || exec('con_def_fml','!ctr_pdm_patw',CON_DEF.PBUD_F().FORMULA,1)
                   || null
                   ?};
      {? _ile_wym>1
      || SKIDXD.JORG:={? CON_DEF.ZN_JORG='T'
                      || CON_DEF.JORG_S
                      |? CON_DEF.JORG_F<>null
                      || exec('con_def_fml','!ctr_pdm_patw',CON_DEF.JORG_F().FORMULA,2)
                      || null
                      ?}
      ?};
      {? _ile_wym>2
      || SKIDXD.OKOSZ:={? CON_DEF.ZN_OKOSZ='T'
                       || CON_DEF.OKOSZ_S
                       |? CON_DEF.OKOSZ_F<>null
                       || exec('con_def_fml','!ctr_pdm_patw',CON_DEF.OKOSZ_F().FORMULA,3)
                       || null
                       ?}
      ?};
      {? _ile_wym>3
      || SKIDXD.WYM4:={? CON_DEF.ZN_WYM4='T'
                      || CON_DEF.WYM4_S
                      |? CON_DEF.WYM4_F<>null
                      || exec('con_def_fml','!ctr_pdm_patw',CON_DEF.WYM4_F().FORMULA,4)
                      || null
                      ?}
      ?};
      {? _ok>0 & _ile_wym>4
      || SKIDXD.WYM5:={? CON_DEF.ZN_WYM5='T'
                      || CON_DEF.WYM5_S
                      |? CON_DEF.WYM5_F<>null
                      || exec('con_def_fml','!ctr_pdm_patw',CON_DEF.WYM5_F().FORMULA,5)
                      || null
                      ?}
      ?}
   ?};
   {? ~exec('spr_wym','control',CON_DEF.SKID_MB,1,_ile_wym) || _ok:=0 ?};
   {? CON_DEF.KW_F=null
   || OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Błędna definicja tworzenia podziału dla dokumentu '+DOK.NK+' ('+
           $SSTALE.AO().NR+'/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
           0,SSTALE.AR,SSTALE.AO,CON_DEF.SKID_MB,$DOK.ref());
       OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop();
      _ok:=0
   ?}
|| OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
   exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Błędna definicja tworzenia podziału dla dokumentu '+DOK.NK+' ('+
        $SSTALE.AO().NR+'/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
        0,SSTALE.AR,SSTALE.AO,CON_DEF.SKID_MB,$DOK.ref());
    OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop();
   _ok:=0
?};
{? _ok
|| SKIDXDUD.cntx_psh();
   SKIDXDUD.index('POZ'); SKIDXDUD.prefix(SKIDXD.PBUD);
   SKIDXD.JM:={? SKIDXDUD.first() || SKIDXDUD.JM || null ?};
   SKIDXDUD.cntx_pop();
   SKIDXD.WAL:=exec('wal_nar','dok_fks');
   SKIDXD.GEN_AUT:='T';
   SKIDXD.cntx_psh();
   SKIDXD.index('UNIK');
   SKIDXD.prefix(SKIDXD.GEN_AUT,SKIDXD.DOK,SKIDXD.SKID_MB,SKIDXD.PBUD,SKIDXD.JORG,SKIDXD.OKOSZ,SKIDXD.WYM4,SKIDXD.WYM5,SKIDXD.WAL,SKIDXD.JM);
   _prec:=exec('zaokr','control',SKIDXD.PBUD);
   _wart:=(($CON_DEF.KW_F().FORMULA)()*CON_DEF.KW_P/100)$_prec;
   {? SKIDXD.first()
   || SKIDXD.WART+=_wart;
      _ok:=SKIDXD.put();
      SKIDXD.cntx_pop()
   || SKIDXD.cntx_pop();
      SKIDXD.WART:=_wart;
      _ok:=SKIDXD.add()
   ?};
   {? ~_ok
   || OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nieudane dodanie podziału dla dokumentu '+DOK.NK+' ('+$SSTALE.AO().NR+
           '/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
           0,SSTALE.AR,SSTALE.AO,CON_DEF.SKID_MB,$DOK.ref());
      OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
   ?}
?}


\con_def_fml
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.28]
:: OPIS: Zwraca UD_SKL na podstawie formuły
::   WE: _a - formuła (napis)
::       _b - nr wymiaru
::----------------------------------------------------------------------------------------------------------------------
_wyn:=($_a)();
{? type_of(_wyn)=type_of(null)
|| _wyn
|? type_of(_wyn)=type_of('')
|| _ud:=null;
   SKID_MBP.cntx_psh();
   SKID_MBP.index('LP'); SKID_MBP.prefix(CON_DEF.SKID_MB,_b);
   {? SKID_MBP.first()
   || UD_SKL.cntx_psh();
      UD_SCH.cntx_psh();
      UD_SKL.index('SYMBOL'); UD_SKL.prefix(SKID_MBP.UD_SCH().UD_TYP,_wyn,);
      {? UD_SKL.first()
      || _ud:=UD_SKL.ref()
      ?};
      UD_SCH.cntx_pop();
      UD_SKL.cntx_pop()
   ?};
   SKID_MBP.cntx_pop();
   _ud
|| null
?}


\podz_spzak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tworzenie podzialow dla dokumentow sprzedazy i zakupu
::  OLD: \podz_spzak/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
FAKS.cntx_psh();
FAP.cntx_psh();
_maska:=(3+(1-DOK.DOKZRODL));
FAKS.use('faktu'+_maska);
FAP.use('fakpo'+_maska);
{? 1+DOK.DOKZRODL='K' | 1+DOK.DOKZRODL='P'
|| VAR_DEL.delete('FAKS_POW');
   FAKS_POW:=sql('select FAKS.SYM, FAKS.REFERENCE REF from FAKS where FAKS.DOK=\':_a\'',$DOK.ref);
   _typ:='';
   {? FAKS_POW.first()
   || FAKS.use(form(8+FAKS_POW.REF));
      {? FAKS.seek(BB.sqlint(FAKS_POW.REF),)
      || _typ:=FAKS.SZ
      ?}
   ?};
   {? _typ<>''
   || {? (_typ='S' & CON_FUN.PAR02=1) | (_typ='Z' & CON_FUN.PAR03=1)
      || exec('podz_dekr','!ctr_pdm_patw')
      || {? FAKS_POW.first()
         || {!
            |? FAKS.use(form(8+FAKS_POW.REF));
               FAP.use('fakpo'+(FAKS.name()+3));
               {? FAKS.seek(BB.sqlint(FAKS_POW.REF),)
               || exec('spzak_poz','!ctr_pdm_patw')
               ?};
               FAKS_POW.next()
            !}
         ?}
      ?}
   ?};
   VAR_DEL.delete('FAKS_POW')
|| FAKS.prefix();
   {? FAKS.seek(#(4-DOK.DOKZRODL),FAKS.name())
   || exec('spzak_poz','!ctr_pdm_patw')
   || OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono dokumentu źródłowego dla '+DOK.NK+' ('+$SSTALE.AO().NR+
           '/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',0,SSTALE.AR,SSTALE.AO,null,$DOK.ref());
      OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
   ?}
?};
FAP.cntx_pop();
FAKS.cntx_pop()


\spzak_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [19.22]
:: OPIS: Tworzenie podzialow dla dokumentow sprzedazy i zakupu - pozycje
::----------------------------------------------------------------------------------------------------------------------
{? FAKS.SZ='S' &  CON_FUN.PAR02=2 & CON_FUN.PAR10 & exec('m4_czy_def_sprz','control_marza')
|| exec('m4_podz_sprz','control_marza')
|? (FAKS.SZ='S' & CON_FUN.PAR02=1) | (FAKS.SZ='Z' & CON_FUN.PAR03=1)
|| exec('podz_dekr','!ctr_pdm_patw')
|? (FAKS.SZ='S' & CON_FUN.PAR02=2) | (FAKS.SZ='Z' & CON_FUN.PAR03=2)
|| {? CON_FUN.MODEL=null
   || CON_DEF.index('CON_DEF1'); CON_DEF.prefix(FAKS.T,0)
   || CON_DEF.index('CON_DEF3'); CON_DEF.prefix(FAKS.T,0,CON_FUN.MODEL)
   ?};
   FAP.index('FAP'); FAP.prefix(FAKS.ref());
   {? FAP.first() & CON_DEF.first()
   || {!
      |? {? CON_DEF.first()
         || {!
            |? {? CON_DEF.FORMPOCZ<>'' || ($CON_DEF.FORMPOCZ)() ?};
               exec('add_condef','!ctr_pdm_patw');
               CON_DEF.next()
            !}
         ?};
         FAP.next()
      !}
   ?}
?}


\podz_dekr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tworzenie podzialow na podstawie dekretow
::  OLD: \podz_dekr/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
POZ.cntx_psh(); POZ.index('DOK'); POZ.prefix(DOK.ref());
{? POZ.first() || exec('oblicz_f','dok_fks',AUTOKSIE.NAZ) ?};
POZ.cntx_pop()


\podz_amor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przepisywanie podzialow z amortyzacji na dokumenty ksiegowe
::  OLD: \podz_amor/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
KTRWN.cntx_psh();
KTRWN.index('KTRWN'); KTRWN.prefix(REF.FIRMA,SKID_MBN.ref(),'r',ROK_F.ref(),OKRO_F.ref());
{? KTRWN.first()
|| KTRWP.cntx_psh();
   KTRWP.use('kontwa'+ROK_F.KOD); KTRWP.index('KTRWODD'); KTRWP.prefix(KTRWN.ref(),DOK.ODD);
   {? KTRWP.first()
   || {!
      |? exec('add_ktrwp','!ctr_pdm_patw');
         KTRWP.next()
      !}
   ?};
   KTRWP.cntx_pop()
?};
KTRWN.cntx_pop();
1


\add_ktrwp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tworzenie podzialow dla amortyzacji
::  OLD: \add_ktrwp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
SKIDXD.blank(1);
SKIDXD.DOK:=DOK.ref();
SKIDXD.SKID_MB:=KTRWP.SKID_MB;
{? KTRWP.SKID_MB<>null
|| KTRWP.SKID_MB();
   SKID_MBP.cntx_psh();
   SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
   _ile_wym:=SKID_MBP.size();
   SKID_MBP.cntx_pop();
   {? _ile_wym=0
   || SKID_MBN.cntx_psh();
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Błędna definicja modelu '+KTRWP.SKID_MB().KOD+'.',0,SSTALE.AR,
           SSTALE.AO,KTRWP.SKID_MB,$DOK.ref());
      SKID_MBN.cntx_pop();
      _ok:=0
   || SKIDXD.PBUD:=KTRWP.PBUD;
      {? _ile_wym>1 || SKIDXD.JORG:=KTRWP.JORG ?};
      {? _ile_wym>2 || SKIDXD.OKOSZ:=KTRWP.OKOSZ ?};
      {? _ile_wym>3 || SKIDXD.WYM4:=KTRWP.WYM4 ?};
      {? _ile_wym>4 || SKIDXD.WYM5:=KTRWP.WYM5 ?}
   ?};
   {? ~exec('spr_wym','control',KTRWP.SKID_MB,1,_ile_wym) || _ok:=0 ?}
|| OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
   exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Błędna definicja tworzenia podziału dla dokumentu '+DOK.NK+' ('+
        $SSTALE.AO().NR+'/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
        0,SSTALE.AR,SSTALE.AO,KTRWP.SKID_MB,$DOK.ref());
   OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop();
   _ok:=0
?};
{? _ok
|| SKIDXDUD.cntx_psh();
   SKIDXDUD.index('POZ'); SKIDXDUD.prefix(SKIDXD.PBUD);
   SKIDXD.JM:={? SKIDXDUD.first() || SKIDXDUD.JM || null ?};
   SKIDXDUD.cntx_pop();
   SKIDXD.WAL:=exec('wal_nar','dok_fks');
   SKIDXD.GEN_AUT:='T';
   SKIDXD.cntx_psh();
   SKIDXD.index('UNIK');
   SKIDXD.prefix(SKIDXD.GEN_AUT,SKIDXD.DOK,SKIDXD.SKID_MB,SKIDXD.PBUD,SKIDXD.JORG,SKIDXD.OKOSZ,SKIDXD.WYM4,SKIDXD.WYM5,SKIDXD.WAL,SKIDXD.JM);
   {? SKIDXD.first()
   || SKIDXD.WART+=KTRWP.KWOTA;
      _ok:=SKIDXD.put();
      SKIDXD.cntx_pop()
   || SKIDXD.cntx_pop();
      SKIDXD.WART:=KTRWP.KWOTA;
      _ok:=SKIDXD.add()
   ?};
   {? ~_ok
   || OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nieudane dodanie podziału dla dokumentu '+DOK.NK+' ('+$SSTALE.AO().NR+
           '/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
           0,SSTALE.AR,SSTALE.AO,SKIDXD.SKID_MB,$SKIDXD.DOK);
      OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
   ?}
?}


\podz_kasa_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tworzenie podzialow dla dokumentow VAT w raporcie kasowym
::  OLD: \podz_kasa_vat/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_maska:=5+(3-DOK.DOKZRODL);
RAPORT.cntx_psh(); RAPORT.use('krp'+_maska); RAPORT.index('NUMER'); RAPORT.prefix();
DOKUMENT.cntx_psh(); DOKUMENT.use('kdo'+_maska); DOKUMENT.index('RAPORT'); DOKUMENT.prefix();
POZDOK.cntx_psh(); POZDOK.use('kpd'+_maska); POZDOK.index('DOKUMENT'); POZDOK.prefix();
VPD.cntx_psh(); VPD.use('vpd'+_maska); VPD.index('VPD'); VPD.prefix();
{? POZDOK.seek(#(8-DOK.DOKZRODL),'kpd'+_maska) & POZDOK.POZOPER().VAT='T'
|| POZDOK.DOKUMENT().RAPORT();
   VPD.prefix(POZDOK.ref());
   exec('petla_con_def','!ctr_pdm_patw')
|| OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
   exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono dokumentu źródłowego dla '+DOK.NK+' ('+$SSTALE.AO().NR+
        '/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
        0,SSTALE.AR,SSTALE.AO,null,$DOK.ref());
   OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
?};
RAPORT.cntx_pop(); DOKUMENT.cntx_pop(); POZDOK.cntx_pop(); VPD.cntx_pop()


\podz_kasa_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tworzenie podzialow dla dokumentow w raporcie kasowym (oprocz dokumentow VAT)
::  OLD: \podz_kasa_dok/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_maska:=5+(3-DOK.DOKZRODL);
RAPORT.cntx_psh(); RAPORT.use('krp'+_maska); RAPORT.index('NUMER'); RAPORT.prefix();
DOKUMENT.cntx_psh(); DOKUMENT.use('kdo'+_maska); DOKUMENT.index('RAPORT'); DOKUMENT.prefix();
POZDOK.cntx_psh(); POZDOK.use('kpd'+_maska); POZDOK.index('DOKUMENT');
VPD.cntx_psh(); VPD.use('vpd'+_maska); VPD.index('VPD'); VPD.prefix();
{? (3+DOK.DOKZRODL)='kdo' & DOKUMENT.seek(#(8-DOK.DOKZRODL),'kdo'+_maska)
|| POZDOK.prefix(DOKUMENT.ref());
   {? POZDOK.first()
   || {! |?
         {? POZDOK.POZOPER().VAT<>'T' || exec('petla_con_def','!ctr_pdm_patw') ?};
         POZDOK.next()
      !}
   ?}
|| OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
   exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono dokumentu źródłowego dla '+DOK.NK+' ('+$SSTALE.AO().NR+
        '/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
        0,SSTALE.AR,SSTALE.AO,null,$DOK.ref());
   OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
?};
RAPORT.cntx_pop(); DOKUMENT.cntx_pop(); POZDOK.cntx_pop(); VPD.cntx_pop()


\podz_kasa_rap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tworzenie podzialow dla dokumentow w raporcie kasowym (oprocz dokumentow VAT)
::  OLD: \podz_kasa_rap/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_maska:=5+(3-DOK.DOKZRODL);
RAPORT.cntx_psh(); RAPORT.use('krp'+_maska); RAPORT.index('NUMER'); RAPORT.prefix();
DOKUMENT.cntx_psh(); DOKUMENT.use('kdo'+_maska); DOKUMENT.index('RAPORT'); DOKUMENT.prefix();
POZDOK.cntx_psh(); POZDOK.use('kpd'+_maska); POZDOK.index('DOKUMENT');
VPD.cntx_psh(); VPD.use('vpd'+_maska); VPD.index('VPD'); VPD.prefix();
{? (3+DOK.DOKZRODL='krp') & RAPORT.seek(#(8-DOK.DOKZRODL),'krp'+_maska)
|| DOKUMENT.prefix(RAPORT.ref());
   {? DOKUMENT.first()
   || {! |?
         POZDOK.prefix(DOKUMENT.ref());
         {? POZDOK.first()
         || {! |?
               {? POZDOK.POZOPER().VAT<>'T' || exec('petla_con_def','!ctr_pdm_patw') ?};
               POZDOK.next()
            !}
         ?};
         DOKUMENT.next()
      !}
   ?}
|| OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
   exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono dokumentu źródłowego dla '+DOK.NK+' ('+$SSTALE.AO().NR+
        '/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
        0,SSTALE.AR,SSTALE.AO,null,$DOK.ref());
   OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
?};
RAPORT.cntx_pop(); DOKUMENT.cntx_pop(); POZDOK.cntx_pop(); VPD.cntx_pop()


\petla_con_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tworzenie podzialow dla dokumentow w raporcie kasowym - petla po CON_DEF
::  OLD: \petla_con_def/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.MODEL=null
|| CON_DEF.index('LP'); CON_DEF.prefix(POZOPER.ref())
|| CON_DEF.index('SKID_MB'); CON_DEF.prefix(POZOPER.ref(),CON_FUN.MODEL)
?};
{? CON_DEF.first()
|| {! |?
      {? CON_DEF.FORMPOCZ<>'' || ($CON_DEF.FORMPOCZ)() ?};
      exec('add_condef','!ctr_pdm_patw');
      CON_DEF.next()
   !}
?}


\podz_kali
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tworzenie podzialow dla dokumentow ksiegowania list plac i umow zlecen
::  OLD: \podz_kali/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('okr_14','!ctr_pdm_patw',SSTALE.AO)
|| O.cntx_psh(); CON_KK.cntx_psh(); SKID_MBN.cntx_psh();
   O.index('LISTYDOK'); O.prefix($DOK.ref());
   {? O.first()
   || {? CON_FUN.PAR06=1
      || exec('podz_dekr','!ctr_pdm_patw')
      |? CON_FUN.PAR06=2
      || SSTALE.AO();
         {! |?
            _rok:=OKRO_F.POCZ~1; _mies:=OKRO_F.NR;
            CON_KK.use('cxnw'+($_rok+2)+(('0'+($_mies))+2));
            {? CON_FUN.MODEL=null
            || SKID_MBN.index('EWID'); SKID_MBN.prefix('T','O');
               {? SKID_MBN.first()
               || {! |?
                     SKID_MBN.cntx_psh();
                     mod_nadrz:=SKID_MBN.ref();
                     {? exec('szuk_mod_podrz','!ctr_pdm_patw') || exec('podz_con_kk','!ctr_pdm_patw',1) ?};
                     SKID_MBN.cntx_pop();
                     SKID_MBN.next()
                  !}
               ?}
            || CON_FUN.MODEL(); mod_nadrz:=SKID_MBN.ref();
               {? exec('szuk_mod_podrz','!ctr_pdm_patw') || exec('podz_con_kk','!ctr_pdm_patw',1) ?}
            ?};
            O.next()
         !}
      ?}
   || {? CON_FUN.PAR07=1
      || exec('podz_dekr','!ctr_pdm_patw')
      |? CON_FUN.PAR07=2
      || RH.cntx_psh();
         RH.index('DOKUMENT'); RH.prefix(exec('ref_firma','ustawienia'),$DOK.ref());
         {? RH.first()
         || SSTALE.AO();
            {! |?
               _rok:=OKRO_F.POCZ~1; _mies:=OKRO_F.NR;
               CON_KK.use('cxnw'+($_rok+2)+(('0'+($_mies))+2));
               {? CON_FUN.MODEL=null
               || SKID_MBN.index('EWID'); SKID_MBN.prefix('T','O');
                  {? SKID_MBN.first()
                  || {! |?
                        SKID_MBN.cntx_psh();
                        mod_nadrz:=SKID_MBN.ref();
                        {? exec('szuk_mod_podrz','!ctr_pdm_patw') || exec('podz_con_kk','!ctr_pdm_patw',2) ?};
                        SKID_MBN.cntx_pop();
                        SKID_MBN.next()
                     !}
                  ?}
               || CON_FUN.MODEL(); mod_nadrz:=SKID_MBN.ref();
                  SKID_MBN.cntx_psh();
                  {? exec('szuk_mod_podrz','!ctr_pdm_patw') || exec('podz_con_kk','!ctr_pdm_patw',2) ?};
                  SKID_MBN.cntx_pop()
               ?};
               RH.next()
            !}
         ?};
         RH.cntx_pop()
      ?}
   ?};
   O.cntx_pop(); CON_KK.cntx_pop(); SKID_MBN.cntx_pop();
   VAR_DEL.delete('mod_nadrz','stanprac')
?}


\podz_con_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tworzenie podzialow dla list plac lub umow zlecen
::   WE: _a - 1 - lista plac
::            2 - umowa zlecenie
::  OLD: \podz_con_kk/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| CON_KK.index('CON_KKL'); CON_KK.prefix(O.ref(),SKID_MBN.ref())
|| CON_KK.index('CON_KKR'); CON_KK.prefix(RH.ref(),SKID_MBN.ref())
?};
{? CON_KK.first()
|| {! |?
      exec('add_skidxdconkk','!ctr_pdm_patw');
      CON_KK.next()
   !}
?}


\szuk_mod_podrz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Szukanie modelu podrzednego dla modelu z bufora
::  OLD: \szuk_mod_podrz/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBN.index('TREE_KOD'); SKID_MBN.prefix(SKID_MBN.ref(),'P'); SKID_MBN.first()


\add_skidxdconkk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Tworzenie podzialow dla list plac i umow zlecen
::  OLD: \add_skidxdconkk/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
SKIDXD.blank(1);
SKIDXD.DOK:=DOK.ref();
SKIDXD.SKID_MB:=mod_nadrz; SKIDXD.SKID_MB();
SKID_MBP.cntx_psh();
SKID_MBP.index('LP'); SKID_MBP.prefix(mod_nadrz);
_ile_wym:=SKID_MBP.size();
SKID_MBP.cntx_pop();
{? _ile_wym=0
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Błędna definicja modelu '+SKID_MB.KOD+'.',0,null,null,SKID_MBN.ref(),'');
   _ok:=0
|| SKIDXD.PBUD:=CON_KK.POZ_BUD;
   {? _ile_wym>1 || SKIDXD.JORG:=CON_KK.PODZORG ?};
   {? _ile_wym>2 || SKIDXD.OKOSZ:=CON_KK.OB_KOSZ ?};
   {? _ile_wym>3 || SKIDXD.WYM4:=CON_KK.WYM4 ?};
   {? _ile_wym>4 || SKIDXD.WYM5:=CON_KK.WYM5 ?};
   {? ~exec('spr_wym','control',mod_nadrz,1,_ile_wym) || _ok:=0 ?}
?};
{? _ok
|| SKIDXDUD.cntx_psh();
   SKIDXDUD.index('POZ'); SKIDXDUD.prefix(SKIDXD.PBUD);
   SKIDXD.JM:={? SKIDXDUD.first() || SKIDXDUD.JM || null ?};
   SKIDXDUD.cntx_pop();
   SKIDXD.WAL:=exec('wal_nar','dok_fks');
   SKIDXD.GEN_AUT:='T';
   SKIDXD.cntx_psh();
   SKIDXD.index('UNIK');
   SKIDXD.prefix(SKIDXD.GEN_AUT,SKIDXD.DOK,SKIDXD.SKID_MB,SKIDXD.PBUD,SKIDXD.JORG,SKIDXD.OKOSZ,SKIDXD.WYM4,SKIDXD.WYM5,SKIDXD.WAL,SKIDXD.JM);
   {? SKIDXD.first()
   || SKIDXD.WART+=CON_KK.KW;
      _ok:=SKIDXD.put();
      SKIDXD.cntx_pop()
   || SKIDXD.cntx_pop();
      SKIDXD.WART:=CON_KK.KW;
      _ok:=SKIDXD.add()
   ?};
   {? ~_ok
   || OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nieudane dodanie podziału dla dokumentu '+DOK.NK+' ('+$SSTALE.AO().NR+
           '/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
           0,SSTALE.AR,SSTALE.AO,null,$DOK.ref());
      OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
   ?}
?}


\okr_14
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie czy rok z okresu przekazanego parametrem ma 14 okresow
::       (12 miesiecy + BO + BZ)
::   WE: _a - ref okresu
::  OLD: \okr_14/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix();
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
{? _a<>null & OKRO_F.seek(_a)
|| OKRO_F.ROK(); OKRO_F.prefix(ROK_F.ref());
   _zwrot:=(OKRO_F.size()=14)
?};
ROK_F.cntx_pop(); OKRO_F.cntx_pop();
_zwrot


\spr_zgod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Kontrola zgodnosci podzialow i kont
::  OLD: \spr_zgod/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh(); DOK.index('PR');
{? CON_FUN.ODD || DOK.prefix('T','T',CON_FUN.ODD) || DOK.prefix('T','T') ?};
{? DOK.first()
|| {!
   |? {? DOK.r_lock(1,1)
      || DOK.WSK_XD:='N'; DOK.put();
         KONT_ZG.erase();
         {? exec('spr_dok','dok_fks',0)
         || DOK.WSK_XD:='T'; DOK.put()
         || OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
            exec('add_kom','dok_fks',3,'',CON_FUN.SYM,
                 'Brak zgodności podziałów controllingowych z dekretami w dokumencie '+DOK.NK+' ('+$SSTALE.AO().NR+'/'+
                 SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
                 0,SSTALE.AR,SSTALE.AO,null,$DOK.ref());
            OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
         ?};
         DOK.r_unlock()
      || OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
         exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Dokument obsługuje inny operator - '+DOK.NK+' ('+$SSTALE.AO().NR+'/'+
              SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',
              0,SSTALE.AR,SSTALE.AO,null,$DOK.ref());
         OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
      ?};
      DOK.next()
   !}
?};
DOK.cntx_pop()


\del_skidxd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Kasowanie automatycznych SKIDXD podczas agregacji danych
::  OLD: \del_skidxd/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKIDXD.cntx_psh();
SKIDXD.use('skxd'+ROK_F.KOD+form(OKRO_F.NR,-2));
{? CON_FUN.ODD
|| SKIDXD.index('AUT2O');
   {? CON_FUN.MODEL<>null
   || SKIDXD.prefix(CON_FUN.ODD,'T',CON_FUN.MODEL)
   || SKIDXD.prefix(CON_FUN.ODD,'T')
   ?}
|| SKIDXD.index('AUT2');
   {? CON_FUN.MODEL<>null
   || SKIDXD.prefix('T',CON_FUN.MODEL)
   || SKIDXD.prefix('T')
   ?}
?};
{? SKIDXD.first() || {! |? SKIDXD.del() !} ?};
SKIDXD.cntx_pop()


\podz_awyc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wycofanie akceptacji controllingowej dla dokumentow
::  OLD: \podz_awyc/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.ODD
|| DOK.index('CON1_O'); DOK.prefix(CON_FUN.ODD)
|| DOK.index('PR'); DOK.prefix()
?};
{? DOK.first()
|| {!
   |? {? DOK.r_lock(1,1)
      || DOK.WSK_XD:='N'; DOK.put(); DOK.r_unlock()
      || OKRO_F.cntx_psh(); ROK_F.cntx_psh(); REJ.cntx_psh();
         exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Dokument obsługuje inny operator - '+DOK.NK+' ('+$SSTALE.AO().NR+
              '/'+SSTALE.AR().NAZ+', rejestr '+DOK.REJ().KOD+' numer '+$DOK.NR+').',0,SSTALE.AR,SSTALE.AO,null,$DOK.ref());
         OKRO_F.cntx_pop(); ROK_F.cntx_pop(); REJ.cntx_pop()
      ?};
      DOK.next()
   !}
?}


\aktual_knag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Agregacja danych
::   WE: _a - 1 - agregacja dla dokumentow ksiegowych
::            2 - agregacja dla pracownikow (CON_KK)
::  OLD: \aktual_knag/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBN.cntx_psh();
K_WERSJE.cntx_psh(); K_WERSJE.index('CZY_SYS'); K_WERSJE.prefix('T');
{? K_WERSJE.first()
|| VAR_DEL.delete('LastDOK');
   LastDOK:=obj_new('DOK','ERR');
   LastDOK.DOK:=null;
   LastDOK.ERR:=0;
   do();
   {? CON_FUN.MODEL=null
   || SKID_MBN.index('EWID'); SKID_MBN.prefix('T','O');
      {? SKID_MBN.first()
      || {!
         |? {? _a=1 & REF.S_FIRMA=REF.GRUPA
            || exec('uruchom_firmy','!ctr_pdm_patw','exec(\'aktual_knag4\',\'!ctr_pdm_patw\')')
            || exec('aktual_knag1','!ctr_pdm_patw',_a)
            ?};
            SKID_MBN.next()
         !}
      ?}
   || CON_FUN.MODEL();
      {? _a=1 & REF.S_FIRMA=REF.GRUPA
      || exec('uruchom_firmy','!ctr_pdm_patw','exec(\'aktual_knag4\',\'!ctr_pdm_patw\')')
      || exec('aktual_knag1','!ctr_pdm_patw',_a)
      ?}
   ?};
   {? ~end()
   || {? var_pres('LastDOK')>0 & LastDOK.ERR=358 & LastDOK.DOK
      || _kom:='Agregacja została przerwana przez blokowanie dokumentu księgowego.'@;
         DOK.cntx_psh();
         DOK.use(ref_name(LastDOK.DOK));
         DOK.prefix();
         {? DOK.seek(LastDOK.DOK)
         || _kom+=' Ostatnio przetworzony dokument: %1 (%2) %3 z %4'@[DOK.REJ().KOD,DOK.REJ().ODD().OD,$DOK.NR,$DOK.DTW]
         ?};
         DOK.cntx_pop();
         exec('add_kom','dok_fks',3,'',CON_FUN.SYM,_kom,0,null,null,null,'')
      ?}
   ?};
   VAR_DEL.delete('LastDOK')
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Brak zdefiniowanej wersji dla wykonania.',0,null,null,null,'')
?};
K_WERSJE.cntx_pop(); SKID_MBN.cntx_pop()


\uruchom_firmy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Uruchamianie funkcji opcjonalnie w petli po firmach
::   WE: _a - uruchamiana funkcja (dla okresu obrachunkowego)
::  OLD: \uruchom_firmy/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? REF.S_FIRMA=REF.GRUPA
|| _firma:=REF.FIRMA;
   {? ~CON_FUN.FIRMAWYB
   || FIRMA.cntx_psh();
      FIRMA.index('EWID'); FIRMA.prefix('T');
      {? FIRMA.first()
      || {!
         |? REF.FIRMA:=FIRMA.ref();
            ($_a)();
            FIRMA.next()
         !}
      ?};
      FIRMA.cntx_pop()
   || REF.FIRMA:=CON_FUN.FIRMAWYB;
      ($_a)()
   ?};
   REF.FIRMA:=_firma
|| ($_a)()
?}


\usu_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Usuwanie wartosci zagregowanych dla przedzialu okresow
::  OLD: \usu_mod/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_pocz:=UD_POM.OKR_P; _kon:=UD_POM.OKR_K;
K__NAG.cntx_psh(); K__NAG.index('UNIK1');
ROK_F.cntx_psh();
OKRO_F.cntx_psh(); OKRO_F.index('FIRMA_NR'); OKRO_F.prefix(REF.S_FIRMA); UD_POM.OKR_POCZ();
{!
|? OKRO_F.cntx_psh(); OKRO_F.ROK();
   K__NAG.prefix(REF.S_FIRMA,SKID_MBN.ref(),K_WERSJE.ref(),ROK_F.ref());
   {? K__NAG.first()
   || UD_POM.OKR_P:=UD_POM.OKR_K:=OKRO_F.ref(); exec('usu_mod2','control', '0')
   ?};
   OKRO_F.cntx_pop();
   OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
!};
OKRO_F.cntx_pop(); ROK_F.cntx_pop(); K__NAG.cntx_pop();
UD_POM.OKR_P:=_pocz; UD_POM.OKR_K:=_kon


\aktual_knag1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Agregacja danych - wewnetrzna
::   WE: _a - 1 - agregacja dla dokumentow ksiegowych
::            2 - agregacja dla pracownikow (CON_KK)
::  OLD: \aktual_knag1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBN.cntx_psh();
{? _a=1
|| _dalej:=1
|| SKID_MBN.index('TREE_KOD'); SKID_MBN.prefix(SKID_MBN.ref(),'P'); _dalej:=SKID_MBN.first()
?};
{? _dalej
|| ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
   _rkon:=UD_POM.OKR_KON().ROK; _dalej:=1;
   UD_POM.OKR_POCZ().ROK();
   {!
   |? exec('aktual_knag3','!ctr_pdm_patw',_a);
      ROK_F.ref()<>UD_POM.ROK_KON & ROK_F.next()
   !};
   ROK_F.cntx_pop()
?};
SKID_MBN.cntx_pop()


\aktual_knag2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Agregacja danych - wewnetrzna
::   WE: _a - 1 - agregacja dla dokumentow ksiegowych
::            2 - agregacja dla pracownikow (CON_KK)
::  OLD: \aktual_knag2/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh(); OKRO_F.cntx_psh();
{? REF.S_FIRMA<>REF.GRUPA || exec('ust_okr_knag','!ctr_pdm_patw') ?};
{? UD_POM.OKR_P<>null & UD_POM.OKR_K<>null
|| {? REF.S_FIRMA<>REF.GRUPA || exec('usu_mod2','control','0') ?};
   {? _a=1
   || exec('agreguj','!ctr_pdm_patw')
   || exec('agreguj_conkk','!ctr_pdm_patw')
   ?}
|| undo()
?};
ROK_F.cntx_pop(); OKRO_F.cntx_pop()


\aktual_knag3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Agregacja danych - wewnetrzna
::   WE: _a - 1 - agregacja dla dokumentow ksiegowych
::            2 - agregacja dla pracownikow (CON_KK)
::  OLD: \aktual_knag3/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_dalej:=1; _firma:=REF.FIRMA; REF.FIRMA:=REF.S_FIRMA;
K__NAG.cntx_psh(); K__NAG.index('UNIK1');
ROK_F.cntx_psh();
{? REF.S_FIRMA=REF.GRUPA || OKRO_F_G.ROK_F_G() ?};
K__NAG.prefix(REF.FIRMA,SKID_MBN.ref(),K_WERSJE.ref(),ROK_F.ref());
{? ~K__NAG.first() || _dalej:=exec('add_knag','control')  ?};
{? K__NAG.first()
|| {? K__NAG.r_lock(1,1)
   || ROK_F.cntx_pop(); REF.FIRMA:=_firma;
      exec('aktual_knag2','!ctr_pdm_patw',_a);
      K__NAG.r_unlock()
   || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja agregacji wartości dla modelu '+SKID_MBN.KOD+' wersji '+K_WERSJE.SYM+' i roku '+ROK_F.NAZ+' jest obsługiwana przez innego operatora.',
           0,ROK_F.ref(),null,SKID_MBN.ref(),'');
      ROK_F.cntx_pop(); undo()
   ?}
|| ROK_F.cntx_pop(); undo()
?};
REF.FIRMA:=_firma;
K__NAG.cntx_pop()


\ust_okr_knag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Ustawianie okresow
::  OLD: \ust_okr_knag/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh(); OKRO_F.cntx_psh();
OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
UD_POM.OKR_P:=UD_POM.OKR_K:=null;
{? ROK_F.ref()=UD_POM.ROK_POCZ & UD_POM.ROK_POCZ<>UD_POM.ROK_KON
|| UD_POM.OKR_P:=UD_POM.OKR_POCZ;
   {? OKRO_F.last() || UD_POM.OKR_K:=OKRO_F.ref() ?}
|? ROK_F.ref()=UD_POM.ROK_KON & UD_POM.ROK_POCZ<>UD_POM.ROK_KON
|| {? OKRO_F.first() || UD_POM.OKR_P:=OKRO_F.ref() ?};
   UD_POM.OKR_K:=UD_POM.OKR_KON
|| UD_POM.OKR_P:=UD_POM.OKR_POCZ; UD_POM.OKR_K:=UD_POM.OKR_KON
?};
ROK_F.cntx_pop(); OKRO_F.cntx_pop()


\agreguj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Aktualizacja wartosci dla przedzialu okresow - wewnetrzna
::  OLD: \agreguj/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? REF.S_FIRMA<>REF.GRUPA || K__NAG.ROK_F() ?};
OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
{? OKRO_F.seek(UD_POM.OKR_P)
|| {!
   |? {? exec('can_fun_run','control',1)
      || exec('agreguj1','!ctr_pdm_patw')
      ?};
      OKRO_F.ref()<>UD_POM.OKR_K & OKRO_F.next()
   !}
?}


\agreguj1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Aktualizacja wartosci dla przedzialu okresow - wewnetrzna
::  OLD: \agreguj1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
DOK.cntx_psh(); SKIDXD.cntx_psh(); K__POZ.cntx_psh(); K__WAR.cntx_psh();
_maska:=exec('maska','control');
K__POZ.use('yb'+_maska); K__POZ.index('K__NAG');
K__WAR.use('yx'+_maska); K__WAR.index('K__POZ');
_a:=ROK_F.KOD; _b:=form(OKRO_F.NR,-2);
DOK.use('doku'+_a+_b);
SKIDXD.use('skxd'+_a+_b); SKIDXD.index('SKIDXD');
DOK.index('CON');
{? CON_FUN.ODD<>null || DOK.prefix('T','T','T',CON_FUN.ODD) || DOK.prefix('T','T','T') ?};
{? DOK.first()
|| {!
   |? {? var_pres('LastDOK')>0 || LastDOK.DOK:=DOK.ref() ?};
      SKIDXD.prefix(DOK.ref(),K__NAG.SKID_MB);
      exec('agreguj_f','!ctr_pdm_patw');
      DOK.next()
   !}
?};
K__POZ.cntx_pop(); K__WAR.cntx_pop(); DOK.cntx_pop(); SKIDXD.cntx_pop();
{? var_pres('LastDOK')>0
|| LastDOK.ERR:=errno()
?}


\agreguj_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Aktualizacja wartosci dla przedzialu okresow - wewnetrzna (dokumenty ksiegowe)
::  OLD: \agreguj_f/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
wym:=obj_new(15);
{? SKIDXD.first()
|| {!
   |? {? SKIDXD.PBUD<>null
      || {! _i:=1..15 |! wym[_i]:=null !};
         {? exec('spr_wym','control',SKIDXD.SKID_MB,1)
         || exec('ustaw_tree','!ctr_pdm_patw',1);
            {? exec('k__poz','control',SKIDXD.WART)
            || exec('add_zap','control',1)
            ?}
         ?}
      ?};
      SKIDXD.next()
   !}
?};
VAR_DEL.delete('wym')


\ustaw_tree
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Ustawia wartosci w zmiennych wym[1]-wym[6]
::   WE: _a - 1 - dokumenty ksiegowe
::            2 - wartosci dla pracownikow
::            3 - agregacja planow dla projektow
::            4 - agregacja amortyzacji
::  OLD: \ustaw_tree/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
wym[1]:={? _a=1 || SKIDXD.PBUD |? _a=2 || CON_KK.POZ_BUD |? _a=3 || PROJZGWP.POZYCJA1 || KTRWP.PBUD ?};
wym[2]:={? _a=1 || SKIDXD.JORG |? _a=2 || CON_KK.PODZORG |? _a=3 || PROJZGWP.POZYCJA2 || KTRWP.JORG ?};
wym[3]:={? _a=1 || SKIDXD.OKOSZ |? _a=2 || CON_KK.OB_KOSZ |? _a=3 || PROJZGWP.POZYCJA3 || KTRWP.OKOSZ ?};
wym[4]:={? _a=1 || SKIDXD.WYM4 |? _a=2 || CON_KK.WYM4 |? _a=3 || PROJZGWP.POZYCJA4 || KTRWP.WYM4 ?};
wym[5]:={? _a=1 || SKIDXD.WYM5 |? _a=2 || CON_KK.WYM5 |? _a=3 || PROJZGWP.POZYCJA5 || KTRWP.WYM5 ?};
wym[6]:={? _a=2 || CON_KK.WYM6 || null ?}


\aktual_knag4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Agregacja danych dla dokumentow ksiegowych - wewnetrzna - uruchamiana w czapie
::  OLD: \aktual_knag4/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('petla_firma','!ctr_pdm_patw','exec(\'aktual_knag5\',\'!ctr_pdm_patw\')',0,'1','1',0)


\aktual_knag5
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Agregacja danych dla dokumentow ksiegowych - wewnetrzna - uruchamiana w czapie
::  OLD: \aktual_knag5/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
OKRO_F.ROK();
UD_POM.OKR_P:=UD_POM.OKR_K:=OKRO_F.ref();
exec('aktual_knag3','!ctr_pdm_patw',1)


\alokacja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Alokacja danych
::  OLD: \alokacja/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_dalej:=1; pbud_alo:=null;
SKID_MBN.cntx_psh(); SKID_MBP.cntx_psh();
SKID_MBE.cntx_psh(); SKID_MBE.index('TYP');
SKID_MBK.cntx_psh(); SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref());
{? SKID_MBK.first()
|| {! |?
      SKID_MBK.SKID_MBP().SKID_MBN();
      {? SKID_MBP.UD_SCH().UD_TYP().SYMBOL='POZ_BUD'
      || {? SKID_MBK.PBUD=null
         || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie wybrano docelowej pozycji budżetowej.',0,null,null,SKID_MBN.ref(),''); _dalej:=0
         || pbud_alo:=SKID_MBK.PBUD
         ?};
         SKID_MBE.prefix(SKID_MBK.ref(),1);
         {? ~SKID_MBE.first()
         || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie wybrano żadnej źródłowej pozycji budżetowej.',0,null,null,SKID_MBN.ref(),''); _dalej:=0
         ?};
         SKID_MBE.prefix(SKID_MBK.ref(),3);
         {? ~SKID_MBE.first()
         || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie wybrano żadnej pozycji budżetowej stanowiącej klucz.',0,null,null,SKID_MBN.ref(),''); _dalej:=0
         ?}
      || {? SKID_MBK.SOURCE=2
         || SKID_MBE.prefix(SKID_MBK.ref(),1);
            {? ~SKID_MBE.first()
            || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie wybrano żadnej pozycji źródłowej dla schematu "'+SKID_MBP.NAZ+'".',0,null,null,SKID_MBN.ref(),''); _dalej:=0
            ?}
         ?};
         {? SKID_MBK.DEST=2
         || SKID_MBE.prefix(SKID_MBK.ref(),2);
            {? ~SKID_MBE.first()
            || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie wybrano żadnej pozycji docelowej dla schematu "'+SKID_MBP.NAZ+'".',0,null,null,SKID_MBN.ref(),''); _dalej:=0
            ?}
         ?}
      ?};
      SKID_MBK.next()
   !}
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono definicji alokacji danych.',0,null,null,null,''); _dalej:=0
?};
SKID_MBK.cntx_pop(); SKID_MBE.cntx_pop();
SKID_MBN.cntx_pop(); SKID_MBP.cntx_pop();
{? UD_POM.ROK_POCZ<>UD_POM.ROK_KON
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Funkcja może być uruchomiona dla okresów z jednego roku obrachunkowego.',1,null,null,null,''); _dalej:=0
?};
{? _dalej
|| CALO_NAG.cntx_psh();
   cn_ind:=CALO_NAG.ndx_tmp('',1,'TM_STAMP',,0,'ROK_F',,0,'OKRO_F',,0);
   CALO_POZ.cntx_psh();
   K__NAG.cntx_psh(); K__NAG.index('UNIK1'); K__NAG.prefix(REF.FIRMA,CON_FUN.SKIDMWE,CON_FUN.KWER1,UD_POM.ROK_POCZ);
   {? K__NAG.first()
   || {? K__NAG.r_lock(1,1)
      || ROZNE.K_WE:=K__NAG.ref();
         SKID_MBP.cntx_psh();
         SKID_MBP.index('LP'); SKID_MBP.prefix(CON_FUN.SKIDMWE);
         _ile_wym:=SKID_MBP.size();
         SKID_MBP.cntx_pop();
         {? _ile_wym
         || _ms:=_md:=0;
            SKID_MBP.cntx_psh(); UD_SCH.cntx_psh(); UD_TYP.cntx_psh();
            SKID_MBK.cntx_psh(); SKID_MBK.index('UNIK');
            K__POZ.cntx_psh();
            OKRO_F.cntx_psh(); ROK_F.cntx_psh();
            OKRO_F.index('ROK'); OKRO_F.prefix(UD_POM.ROK_POCZ);
            zn_czas:=tm_form(CON_FUN.tm_stamp()); zn_data:=date(); zn_godz:=time();
            {? OKRO_F.seek(UD_POM.OKR_POCZ)
            || {!
               |? {? exec('can_fun_run','control',1)
                  || K__POZ.use('yb'+exec('maska','control'));
                     {? ~_ms || exec('mapa_alok','!ctr_pdm_patw',1); _ms:=1 ?};
                     OKRO_F.cntx_psh();
                     K__POZ.index('K__NAG'); K__POZ.prefix(K__NAG.ref(),OKRO_F.ref());
                     {? K__POZ.first() & exec('calo_nag','!ctr_pdm_patw',1)
                     || CALO_POZ.use('cc'+(4+$CALO_NAG.DATA)+form(CALO_NAG.DATA~2,-2)); CALO_POZ.index('DISP');
                        {!
                        |? exec('alokacja1','!ctr_pdm_patw',_ile_wym,1);
                           K__POZ.next()
                        !}
                     ?};
                     OKRO_F.cntx_pop()
                  ?};
                  OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
               !}
            ?};
            {? OKRO_F.seek(UD_POM.OKR_POCZ)
            || {!
               |? {? exec('can_fun_run','control',1)
                  || OKRO_F.cntx_psh();
                     K__POZ.use('yb'+exec('maska','control'));
                     K__POZ.index('K__NAG'); K__POZ.prefix(K__NAG.ref(),OKRO_F.ref());
                     {? K__POZ.first() & exec('calo_nag','!ctr_pdm_patw',1)
                     || CALO_POZ.use('cc'+(4+$CALO_NAG.DATA)+form(CALO_NAG.DATA~2,-2)); CALO_POZ.index('DISP');
                        CALO_POZ.cntx_psh();
                        CALO_POZ.index('DISP'); CALO_POZ.prefix(CALO_NAG.ref(),1);
                        _dalej:=CALO_POZ.first();
                        CALO_POZ.cntx_pop();
                        {? _dalej & K__POZ.first()
                        || {? ~_md || exec('mapa_alok','!ctr_pdm_patw',2); _md:=1 ?};
                           {!
                           |? exec('alokacja1','!ctr_pdm_patw',_ile_wym,2);
                              K__POZ.next()
                           !}
                        ?};
                        exec('calo_nag','!ctr_pdm_patw',2)
                     ?};
                     OKRO_F.cntx_pop()
                  ?};
                  OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
               !}
            ?};
            OKRO_F.cntx_pop(); ROK_F.cntx_pop();
            SKID_MBK.cntx_pop(); SKID_MBP.cntx_pop(); UD_SCH.cntx_pop(); UD_TYP.cntx_pop();
            K__POZ.cntx_pop();
            exec('alo_ustal_kwoty','!ctr_pdm_patw');
            exec('alo_zapis','!ctr_pdm_patw')
         ?};
         K__NAG.r_unlock()
      || SKID_MBN.cntx_psh(); K_WERSJE.cntx_psh(); ROK_F.cntx_psh();
         exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja agregacji wartości dla modelu '+CON_FUN.SKIDMWE().KOD+
              ' wersji '+CON_FUN.KWER1().SYM+' i roku '+UD_POM.ROK_POCZ().NAZ+' jest obsługiwana przez innego operatora.',
              0,UD_POM.ROK_POCZ,null,CON_FUN.SKIDMWE,'');
         SKID_MBN.cntx_pop(); K_WERSJE.cntx_pop(); ROK_F.cntx_pop()
      ?}
   || SKID_MBN.cntx_psh(); K_WERSJE.cntx_psh(); ROK_F.cntx_psh();
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono definicji agregacji wartości dla modelu '+
           CON_FUN.SKIDMWE().KOD+' wersji '+CON_FUN.KWER1().SYM+' i roku '+UD_POM.ROK_POCZ().NAZ+'.',
           0,UD_POM.ROK_POCZ,null,CON_FUN.SKIDMWE,'');
      SKID_MBN.cntx_pop(); K_WERSJE.cntx_pop(); ROK_F.cntx_pop()
   ?};
   VAR_DEL.delete('MAPA_EL','zn_czas','zn_data','zn_godz'); K__NAG.cntx_pop();
   CALO_NAG.cntx_pop(); CALO_NAG.ndx_drop(); VAR_DEL.delete('cn_ind');
   CALO_POZ.cntx_pop()
?};
VAR_DEL.delete('pbud_alo')


\mapa_alok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Mapa danych do alokacji
::   WE: _a - 1 - dane zrodlowe
::            2 - docelowe i klucze
::  OLD: \mapa_alok/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('MAPA_EL')<=0
|| MAPA_EL:=tab_tmp(4,'TYP','INTEGER','',
                      'UD_TYP','STRING[20]','',
                      'UD_SCH','STRING[20]','',
                      'UD_SKL','STRING[20]',''
                    )
?};
MAPA_EL.prefix();
SKID_MBP.cntx_psh(); UD_SCH.cntx_psh(); UD_TYP.cntx_psh(); UD_DEF.cntx_psh(); UD_SKL.cntx_psh();
SKID_MBE.cntx_psh(); SKID_MBE.index('ELEM');
SKID_MBK.cntx_psh(); SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref());
{? SKID_MBK.first()
|| {! |?
      {? SKID_MBK.SKID_MBP().UD_SCH().UD_TYP().SYMBOL='POZ_BUD' | SKID_MBK.SOURCE=2 | SKID_MBK.DEST=2
      || UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref());
         {? UD_DEF.first()
         || {! |?
               UD_DEF.cntx_psh();
               UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref(),UD_DEF.ref());
               {? ~UD_DEF.first()
               || {? UD_TYP.SYMBOL='POZ_BUD'
                  || {? _a=1
                     || exec('mapa_alok1','!ctr_pdm_patw',1)
                     || exec('mapa_alok1','!ctr_pdm_patw',3)
                     ?}
                  || {? _a=1 & SKID_MBK.SOURCE=2 || exec('mapa_alok1','!ctr_pdm_patw',1) ?};
                     {? _a=2 & SKID_MBK.DEST=2 || exec('mapa_alok1','!ctr_pdm_patw',2) ?}
                  ?}
               ?};
               UD_DEF.cntx_pop();
               UD_DEF.next()
            !}
         ?}
      ?};
      SKID_MBK.next()
   !}
?};
SKID_MBK.cntx_pop(); SKID_MBP.cntx_pop(); UD_SCH.cntx_pop(); UD_TYP.cntx_pop(); UD_DEF.cntx_pop(); UD_SKL.cntx_pop(); SKID_MBE.cntx_pop();
VAR_DEL.delete('dod_el')


\mapa_alok1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Mapa danych do alokacji - wewnetrzna
::   WE: _a - 1 - dane zrodlowe
::            2 - dane docelowe
::            3 - dane klucza
::  OLD: \mapa_alok1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
dod_el:=0;
exec('mapa_alok2','!ctr_pdm_patw',_a);
{? dod_el
|| UD_DEF.UD_SKL();
   MAPA_EL.blank(1);
   MAPA_EL.UD_TYP:=$UD_TYP.ref();
   MAPA_EL.UD_SCH:=$UD_SCH.ref();
   MAPA_EL.UD_SKL:=$UD_SKL.ref();
   MAPA_EL.TYP:={? _a=1 || 1 || 2 ?};
   MAPA_EL.add()
?}


\mapa_alok2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Mapa danych do alokacji - wewnetrzna
::   WE: _a - 1 - dane zrodlowe
::            2 - dane docelowe
::            3 - dane klucza
::  OLD: \mapa_alok2/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBE.index('ELEM'); SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL,_a);
{? SKID_MBE.first()
|| dod_el:=1
|| UD_DEF.cntx_psh(); UD_DEF.prefix();
   {? UD_DEF.UD_DEF & UD_DEF.seek(UD_DEF.UD_DEF,UD_DEF.name()) || exec('mapa_alok2','!ctr_pdm_patw',_a) ?};
   UD_DEF.cntx_pop()
?}


\calo_nag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Obsluga tabeli CALO_NAG
::   WE: _a - 1 - dolaczanie rekordu
::            2 - kasowanie jesli niewykorzystywany
::   WY: 1/0 - czy operacja sie powiodla (dla dodawania)
::  OLD: \calo_nag/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| CALO_NAG.index(cn_ind); CALO_NAG.prefix(zn_czas,OKRO_F.ROK,OKRO_F.ref());
   {? CALO_NAG.first()
   || 1
   || CALO_NAG.blank(1);
      CALO_NAG.CON_FUN:=CON_FUN.ref();
      CALO_NAG.DATA:=zn_data;
      CALO_NAG.GODZ:=zn_godz;
      CALO_NAG.ROK_F:=OKRO_F.ROK;
      CALO_NAG.OKRO_F:=OKRO_F.ref();
      CALO_NAG.TM_STAMP:=zn_czas;
      CALO_NAG.USER:=OPERATOR.USER().KOD;
      CALO_NAG.K_WERSJE:=CON_FUN.KWER1;
      CALO_NAG.add()
   ?}
|| {? CALO_NAG.count()=0 || CALO_NAG.del() ?}
?}


\alokacja1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Alokacja danych - wewnetrzna
::   WE: _a - liczba wymiarow
::       _b - 1 - dane zrodlowe
::            2 - dane klucza
::  OLD: \alokacja1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
SKID_MBK.cntx_psh(); SKID_MBK.index('UNIK');
{! _i:=1.._a
|? _ok
|! SKID_MBK.prefix(CON_FUN.ref(),CON_FUN.SKIDMWE,_i);
   {? SKID_MBK.first()
   || SKID_MBK.SKID_MBP().UD_SCH().UD_TYP();
      _elem:=$($('K__POZ.WYMIAR'+form(_i,-2)))();
      {? UD_TYP.SYMBOL='POZ_BUD'
      || MAPA_EL.prefix(_b,$UD_TYP.ref(),$UD_SCH.ref(),_elem);
         _ok:=MAPA_EL.first()
      || {? _b=1
         || {? SKID_MBK.SOURCE=2
            || MAPA_EL.prefix(_b,$UD_TYP.ref(),$UD_SCH.ref(),_elem);
               _ok:=MAPA_EL.first()
            ?}
         || {? SKID_MBK.DEST=2
            || MAPA_EL.prefix(_b,$UD_TYP.ref(),$UD_SCH.ref(),_elem);
               _ok:=MAPA_EL.first()
            |? SKID_MBK.DEST=1 & SKID_MBK.SOURCE=2
            || MAPA_EL.prefix(1,$UD_TYP.ref(),$UD_SCH.ref(),_elem);
               _ok:=MAPA_EL.first()
            ?}
         ?}
      ?}
   ?}
!};
{? _ok || exec('calo_poz','!ctr_pdm_patw',_b) ?};
SKID_MBK.cntx_pop()


\alo_ustal_kwoty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Ustalanie kwot do alokacji
::  OLD: \alo_ustal_kwoty/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CALO_POZ.cntx_psh(); CALO_NAG.cntx_psh();
CALO_NAG.index('TM_STAMP'); CALO_NAG.prefix(zn_czas);
{? CALO_NAG.first()
|| _wielokr:=0; _ind1:=_tmp_pr1:=_cal_pr1:=_tab1:='';
   SKID_MBK.cntx_psh();
   SKID_MBK.index('UNIK'); SKID_MBK.prefix(CALO_NAG.CON_FUN);
   SKID_MBP.cntx_psh(); SKID_MBP.prefix();
   {? SKID_MBK.first()
   || {! |?
         {? SKID_MBK.WYM_WIEL
         || _wielokr+=1; _lp:=form(SKID_MBK.SKID_MBP().LP,-2);
            _ind1+=('\'WYM'+_lp+'\',,,');
            _tmp_pr1+=('$CALO_POZ.WYM'+_lp+',');
            _cal_pr1+=('CALO_POZ.WYM'+_lp+',');
            _tab1+=('\'REFPOZ'+_lp+'\',\'STRING[16]\',\'\',')
         ?};
         SKID_MBK.next()
      !}
   ?};
   {? _wielokr
   || _tab:='TMP_ALOK:=tab_tmp('+($(_wielokr+1))+',\'RODZAJ\',\'INTEGER\',\'\','+_tab1+'\'WAR\',\'REAL\',\'\')';
      ($_tab)();
      _tmp_pr1:=_tmp_pr1-1;
      _tmp_prf:='TMP_ALOK.prefix(_a,'+_tmp_pr1+')';
      _ind1:=_ind1-1;
      _ind:='CALO_POZ.ndx_tmp(\'\',1,\'CALO_NAG\',,0,\'RODZAJ\',,0,'+_ind1+')';
      _index:=($_ind)();
      _cal_pr1:=_cal_pr1-1;
      _cal_prf:='CALO_POZ.prefix(CALO_NAG.ref(),_a,'+_cal_pr1+')'
   ?};
   {! |?
      CALO_POZ.use('cc'+(4+$CALO_NAG.DATA)+form(CALO_NAG.DATA~2,-2));
      {? _wielokr
      || TMP_ALOK.erase();
         CALO_POZ.index(_index); CALO_POZ.prefix(CALO_NAG.ref(),1);
         {? CALO_POZ.first()
         || {! |?
               ($_tmp_prf)(1);
               {? ~TMP_ALOK.first()
               || CALO_POZ.cntx_psh();
                  ($_cal_prf)(1);
                  {? CALO_POZ.first()
                  || _war:=0;
                     {! |? _war+=CALO_POZ.WAR; CALO_POZ.next() !};
                     {? SKID_MBK.first()
                     || {! |?
                           {? SKID_MBK.WYM_WIEL
                           || _nr:=form(SKID_MBK.SKID_MBP().LP,-2);
                              _form:='TMP_ALOK.REFPOZ'+_nr+':=$CALO_POZ.WYM'+_nr;
                              ($_form)()
                           ?};
                           SKID_MBK.next()
                        !}
                     ?};
                     TMP_ALOK.RODZAJ:=1;
                     TMP_ALOK.WAR:=_war;
                     TMP_ALOK.add()
                  ?};
                  CALO_POZ.cntx_pop()
               ?};
               CALO_POZ.next()
            !}
         ?};
         CALO_POZ.prefix(CALO_NAG.ref(),2);
         {? CALO_POZ.first()
         || {! |?
               ($_tmp_prf)(2);
               {? ~TMP_ALOK.first()
               || CALO_POZ.cntx_psh();
                  ($_cal_prf)(2);
                  {? CALO_POZ.first()
                  || _war:=0;
                     {! |? _war+=CALO_POZ.WAR; CALO_POZ.next() !};
                     {? SKID_MBK.first()
                     || {! |?
                           {? SKID_MBK.WYM_WIEL
                           || _nr:=form(SKID_MBK.SKID_MBP().LP,-2);
                              _form:='TMP_ALOK.REFPOZ'+_nr+':=$CALO_POZ.WYM'+_nr;
                              ($_form)()
                           ?};
                           SKID_MBK.next()
                        !}
                     ?};
                     TMP_ALOK.RODZAJ:=2;
                     TMP_ALOK.WAR:=_war;
                     TMP_ALOK.add()
                  ?};
                  CALO_POZ.cntx_pop()
               ?};
               CALO_POZ.next()
            !}
         ?};
         _alok:=0;
         CALO_POZ.prefix(CALO_NAG.ref(),2);
         {? CALO_POZ.first()
         || {! |?
               _war:=_war_alo:=0;
               ($_tmp_prf)(1);
               {? TMP_ALOK.first() || _war_alo:=TMP_ALOK.WAR ?};
               ($_tmp_prf)(2);
               {? TMP_ALOK.first() || _war:=TMP_ALOK.WAR ?};
               {? _war<>0
               || CALO_POZ.PROC:=(CALO_POZ.WAR/_war*100)$6;
                  _prec:=exec('zaokr','control',CALO_POZ.WYM01);
                  CALO_POZ.WAR_DOC:=(CALO_POZ.PROC*_war_alo/100)$_prec;
                  {? CALO_POZ.put() || _alok+=CALO_POZ.WAR_DOC ?};
                  CALO_POZ.cntx_psh();
                  ($_cal_prf)(2);
                  _dopisz:=~CALO_POZ.next();
                  CALO_POZ.cntx_pop();
                  {? _dopisz
                  || {? _alok<>_war_alo
                     || CALO_POZ.WAR_DOC+=(_war_alo-_alok);
                        CALO_POZ.put()
                     ?};
                     _alok:=0
                  ?}
               ?};
               CALO_POZ.next()
            !}
         ?}
      || CALO_POZ.index('DISP'); CALO_POZ.prefix(CALO_NAG.ref(),1);
         _war_alo:=_war:=0;
         {? CALO_POZ.first()
         || {! |?
               _war_alo+=CALO_POZ.WAR;
               CALO_POZ.next()
            !}
         ?};
         CALO_POZ.prefix(CALO_NAG.ref(),2);
         {? CALO_POZ.first()
         || {! |?
               _war+=CALO_POZ.WAR;
               CALO_POZ.next()
            !}
         ?};
         {? _war<>0
         || _alok:=0;
            CALO_POZ.prefix(CALO_NAG.ref(),2);
            {? CALO_POZ.first()
            || {! |?
                  CALO_POZ.PROC:=(CALO_POZ.WAR/_war*100)$6;
                  _prec:=exec('zaokr','control',CALO_POZ.WYM01);
                  CALO_POZ.WAR_DOC:=(CALO_POZ.PROC*_war_alo/100)$_prec;
                  _alok+=CALO_POZ.WAR_DOC;
                  CALO_POZ.put();
                  CALO_POZ.next()
               !};
               {? _alok<>_war_alo & CALO_POZ.last()
               || CALO_POZ.WAR_DOC+=(_war_alo-_alok);
                  CALO_POZ.put()
               ?}
            ?}
         ?}
      ?};
      CALO_NAG.next()
   !};
   SKID_MBP.cntx_pop(); SKID_MBK.cntx_pop()
?};
CALO_NAG.cntx_pop(); CALO_POZ.cntx_pop();
CALO_POZ.ndx_drop();
VAR_DEL.delete('TMP_ALOK')


\alo_zapis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Zapisanie kwot docelowych
::  OLD: \alo_zapis/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('pbud_alo')>0 & pbud_alo<>null
|| K__POZ.cntx_psh(); ROZNE.K_WE();
   K__WAR.cntx_psh();
   CALO_POZ.cntx_psh(); CALO_NAG.cntx_psh(); CALO_NAG.index('TM_STAMP'); CALO_NAG.prefix(zn_czas);
   {! _co:=1..2
   |! {! _i:=1..2
      |! {? CALO_NAG.first() & (_i=2 | (_i=1 & CON_FUN.PAR01))
         || {!
            |? CALO_NAG.OKRO_F();
               K__POZ.use('yb'+exec('maska','control')); K__POZ.index('RODZAJ');
               K__WAR.use('yx'+exec('maska','control')); K__WAR.index('K__POZ');
               CALO_POZ.use('cc'+(4+$CALO_NAG.DATA)+form(CALO_NAG.DATA~2,-2));
               CALO_POZ.index('DISP'); CALO_POZ.prefix(CALO_NAG.ref(),_co);
               {? CALO_POZ.first()
               || {!
                  |? {? _i=1
                     || exec('alo_del','!ctr_pdm_patw')
                     || exec('alo_zapis1','!ctr_pdm_patw',_co)
                     ?};
                     CALO_POZ.next()
                  !}
               ?};
               CALO_NAG.next()
            !}
         ?}
      !}
   !};
   CALO_NAG.cntx_pop(); CALO_POZ.cntx_pop(); K__POZ.cntx_pop(); K__WAR.cntx_pop()
?}


\alo_zapis1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Zapisanie kwot docelowych - wewnetrzna
::   WE: _a - 1 - zminusowanie danych zrodlowych
::            2 - dopisanie danych docelowych
::  OLD: \alo_zapis1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| K__POZ.prefix(1,ROZNE.K_WE,CALO_NAG.OKRO_F,
                 CALO_POZ.WYM01,CALO_POZ.WYM02,CALO_POZ.WYM03,CALO_POZ.WYM04,CALO_POZ.WYM05,
                 CALO_POZ.WYM06,CALO_POZ.WYM07,CALO_POZ.WYM08,CALO_POZ.WYM09,CALO_POZ.WYM10,
                 CALO_POZ.WYM11,CALO_POZ.WYM12,CALO_POZ.WYM13,CALO_POZ.WYM14,CALO_POZ.WYM15)
|| K__POZ.prefix(1,ROZNE.K_WE,CALO_NAG.OKRO_F,
                 pbud_alo,CALO_POZ.WYM02,CALO_POZ.WYM03,CALO_POZ.WYM04,CALO_POZ.WYM05,
                 CALO_POZ.WYM06,CALO_POZ.WYM07,CALO_POZ.WYM08,CALO_POZ.WYM09,CALO_POZ.WYM10,
                 CALO_POZ.WYM11,CALO_POZ.WYM12,CALO_POZ.WYM13,CALO_POZ.WYM14,CALO_POZ.WYM15)
?};
{? K__POZ.first()
|| {? _a=1
   || K__POZ.WART+=(-1)*CALO_POZ.WAR
   || K__POZ.WART+=CALO_POZ.WAR_DOC
   ?};
   K__POZ.put()
|| K__POZ.blank(1);
   K__POZ.K__NAG:=ROZNE.K_WE;
   K__POZ.OKRES:=CALO_NAG.OKRO_F;
   K__POZ.WYMIAR01:={? _a=1 || CALO_POZ.WYM01 || pbud_alo?};
   K__POZ.WYMIAR02:=CALO_POZ.WYM02;
   K__POZ.WYMIAR03:=CALO_POZ.WYM03;
   K__POZ.WYMIAR04:=CALO_POZ.WYM04;
   K__POZ.WYMIAR05:=CALO_POZ.WYM05;
   K__POZ.WYMIAR06:=CALO_POZ.WYM06;
   K__POZ.WYMIAR07:=CALO_POZ.WYM07;
   K__POZ.WYMIAR08:=CALO_POZ.WYM08;
   K__POZ.WYMIAR09:=CALO_POZ.WYM09;
   K__POZ.WYMIAR10:=CALO_POZ.WYM10;
   K__POZ.WYMIAR11:=CALO_POZ.WYM11;
   K__POZ.WYMIAR12:=CALO_POZ.WYM12;
   K__POZ.WYMIAR13:=CALO_POZ.WYM13;
   K__POZ.WYMIAR14:=CALO_POZ.WYM14;
   K__POZ.WYMIAR15:=CALO_POZ.WYM15;
   {? _a=1
   || K__POZ.WART:=(-1)*CALO_POZ.WAR
   || K__POZ.WART:=CALO_POZ.WAR_DOC
   ?};
   K__POZ.RODZAJ:=1;
   K__POZ.add()
?}


\alo_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Zapisanie kwot docelowych - wewnetrzna (kasowanie docelowych alokacji)
::  OLD: \alo_del/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
K__POZ.prefix(1,ROZNE.K_WE,CALO_NAG.OKRO_F,
              pbud_alo,CALO_POZ.WYM02,CALO_POZ.WYM03,CALO_POZ.WYM04,CALO_POZ.WYM05,
              CALO_POZ.WYM06,CALO_POZ.WYM07,CALO_POZ.WYM08,CALO_POZ.WYM09,CALO_POZ.WYM10,
              CALO_POZ.WYM11,CALO_POZ.WYM12,CALO_POZ.WYM13,CALO_POZ.WYM14,CALO_POZ.WYM15);
{? K__POZ.first()
|| do();
   K__WAR.prefix(K__POZ.ref());
   {? K__WAR.first()
   || {! |?
         _delr:=K__WAR.del(,1);
         {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
      !}
   ?};
   _delr:=K__POZ.del(,1);
   {? _delr=0 || undo() ?};
   end()
?}


\calo_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Dodawanie rekordow do tabeli CALO_POZ
::   WE: _a - 1 - dane zrodlowe
::            2 - dane docelowe
::  OLD: \calo_poz/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? K__POZ.WART<>0
|| CALO_POZ.prefix();
   CALO_POZ.blank(1);
   CALO_POZ.CALO_NAG:=CALO_NAG.ref();
   CALO_POZ.RODZAJ:=_a;
   CALO_POZ.WAR:=K__POZ.WART;
   CALO_POZ.WYM01:=K__POZ.WYMIAR01;
   CALO_POZ.WYM02:=K__POZ.WYMIAR02;
   CALO_POZ.WYM03:=K__POZ.WYMIAR03;
   CALO_POZ.WYM04:=K__POZ.WYMIAR04;
   CALO_POZ.WYM05:=K__POZ.WYMIAR05;
   CALO_POZ.WYM06:=K__POZ.WYMIAR06;
   CALO_POZ.WYM07:=K__POZ.WYMIAR07;
   CALO_POZ.WYM08:=K__POZ.WYMIAR08;
   CALO_POZ.WYM09:=K__POZ.WYMIAR09;
   CALO_POZ.WYM10:=K__POZ.WYMIAR10;
   CALO_POZ.WYM11:=K__POZ.WYMIAR11;
   CALO_POZ.WYM12:=K__POZ.WYMIAR12;
   CALO_POZ.WYM13:=K__POZ.WYMIAR13;
   CALO_POZ.WYM14:=K__POZ.WYMIAR14;
   CALO_POZ.WYM15:=K__POZ.WYMIAR15;
   CALO_POZ.add()
?}


\erase_alok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Kasowanie pozycji pochodzacych z alokacji
::  OLD: \erase_alok/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_dalej:=1;
{? UD_POM.ROK_POCZ<>UD_POM.ROK_KON
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Funkcja może być uruchomiona dla okresów z jednego roku obrachunkowego.',1,null,null,null,''); _dalej:=0
?};
{? _dalej
|| K__NAG.cntx_psh(); K__NAG.index('UNIK1'); K__NAG.prefix(REF.FIRMA,CON_FUN.SKIDMWE,CON_FUN.KWER1,UD_POM.ROK_POCZ);
   {? K__NAG.first()
   || {? K__NAG.r_lock(1,1)
      || K__POZ.cntx_psh();
         K__WAR.cntx_psh();
         OKRO_F.cntx_psh(); ROK_F.cntx_psh();
         OKRO_F.index('ROK'); OKRO_F.prefix(UD_POM.ROK_POCZ);
         {? OKRO_F.seek(UD_POM.OKR_POCZ)
         || {!
            |? {? exec('can_fun_run','control',1)
               || K__POZ.use('yb'+exec('maska','control')); K__POZ.index('RODZAJ');
                  K__WAR.use('yx'+exec('maska','control')); K__WAR.index('K__POZ');
                  OKRO_F.cntx_psh();
                  {? CON_FUN.PBUD=null
                  || K__POZ.prefix(1,K__NAG.ref(),OKRO_F.ref())
                  || K__POZ.prefix(1,K__NAG.ref(),OKRO_F.ref(),CON_FUN.PBUD)
                  ?};
                  {? K__POZ.first()
                  || do();
                     {!
                     |? K__WAR.prefix(K__POZ.ref());
                        {? K__WAR.first()
                        || {!
                           |? _delr:=K__WAR.del(,1);
                              {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
                           !}
                        ?};
                        _delr:=K__POZ.del(,1);
                        {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
                     !};
                     end()
                  ?};
                  OKRO_F.cntx_pop()
               ?};
               OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
            !}
         ?};
         OKRO_F.cntx_pop(); ROK_F.cntx_pop(); K__POZ.cntx_pop(); K__WAR.cntx_pop();
         K__NAG.r_unlock()
      || SKID_MBN.cntx_psh(); K_WERSJE.cntx_psh(); ROK_F.cntx_psh();
         exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja agregacji wartości dla modelu '+CON_FUN.SKIDMWE().KOD+
              ' wersji '+CON_FUN.KWER1().SYM+' i roku '+UD_POM.ROK_POCZ().NAZ+' jest obsługiwana przez innego operatora.',
              0,UD_POM.ROK_POCZ,null,CON_FUN.SKIDMWE,'');
         SKID_MBN.cntx_pop(); K_WERSJE.cntx_pop(); ROK_F.cntx_pop()
      ?}
   || SKID_MBN.cntx_psh(); K_WERSJE.cntx_psh(); ROK_F.cntx_psh();
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono definicji agregacji wartości dla modelu '+
           CON_FUN.SKIDMWE().KOD+' wersji '+CON_FUN.KWER1().SYM+' i roku '+UD_POM.ROK_POCZ().NAZ+'.',
           0,UD_POM.ROK_POCZ,null,CON_FUN.SKIDMWE,'');
      SKID_MBN.cntx_pop(); K_WERSJE.cntx_pop(); ROK_F.cntx_pop()
   ?};
   K__NAG.cntx_pop()
?};
VAR_DEL.delete('pbud_alo')


\kopia_danych
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Kopiowanie danych do wersji planowanej
::  OLD: \kopia_danych/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_warobl1:=CON_FUN.KWER1().K_W_OBL;
_warobl2:=CON_FUN.KWER2().K_W_OBL;
{? CON_FUN.PAR02=0
|| VAR_DEL.delete('__UD_F','__UD_P','__UD_OK','__funtab','__UD_IS');
   exec('b_get_fun_leaf','!ctr_pdm_patw');
   exec('fun_leaf','!ctr_pdm_patw',3)
?};
SKID_MBK.cntx_psh();
SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref());
{? SKID_MBK.first()
|| K__NAG.cntx_psh(); K__NAG.index('UNIK1'); K__NAG.prefix(REF.FIRMA,CON_FUN.SKIDMWE,CON_FUN.KWER1,CON_FUN.ROK1);
   {? K__NAG.first()
   || {? K__NAG.r_lock(1,1)
      || K_WERSJE.cntx_psh();
         _wsys:=CON_FUN.KWER2().CZY_SYS='T';
         K_WERSJE.cntx_pop();
         ROZNE.K_WE:=K__NAG.ref(); ROZNE.OKRES_WY:=null;
         SKID_MBP.cntx_psh();
         SKID_MBP.index('LP'); SKID_MBP.prefix(CON_FUN.SKIDMWE);
         _ile_wym:=SKID_MBP.size();
         SKID_MBP.cntx_pop();
         {? _ile_wym
         || exec('mapa_danych','!ctr_pdm_patw');
            SKID_MBP.cntx_psh(); UD_SCH.cntx_psh(); UD_TYP.cntx_psh();
            SKID_MBK.cntx_psh(); SKID_MBK.index('UNIK');
            K__POZ.cntx_psh();
            ROZNE.K_WE();
            OKRO_F.cntx_psh(); ROK_F.cntx_psh();
            OKRO_F.index('ROK'); OKRO_F.prefix(CON_FUN.ROK1);
            {? OKRO_F.seek(CON_FUN.OKR_POCZ)
            || _rok:=OKRO_F.ROK().NAZ;
                {!
                |? __Kpoz:=null;
                   {? var_pres('__UD_IS')>0 || __UD_IS.erase() ?};
                   echo('Kopiowanie danych dla okresu %1  %2...'@[OKRO_F.NAZ,_rok]);
                   OKRO_F.cntx_psh();
                   exec('szuk_okr_wy','!ctr_pdm_patw');
                   {? ROZNE.OKRES_WY=null | _wsys & exec('can_fun_run','control',1,ROZNE.OKRES_WY)
                   || 0
                   || K__POZ.use('yb'+exec('maska','control'));
                      {? ~CON_FUN.PAR01 | (CON_FUN.PAR01 & exec('erase_source','!ctr_pdm_patw'))
                      || K__POZ.index('K__NAG'); K__POZ.prefix(ROZNE.K_WE,OKRO_F.ref());
                         {? K__POZ.first()
                         || _lp:=0;
                             _max:=K__POZ.size();
                             {! |?
                               _lp+=1;
                               echo('Kopiowanie danych dla okresu %1 %2 (%3/%4)'@[OKRO_F.NAZ,_rok,$_lp,$_max]);
                               OKRO_F.cntx_psh();
                               exec('kopia_danych1','!ctr_pdm_patw',_ile_wym);
                               OKRO_F.cntx_pop();
                               {? CON_FUN.PAR02=0
                               || OKRO_F.cntx_psh();
                                  exec('kopia_danych2','!ctr_pdm_patw');
                                  OKRO_F.cntx_pop()
                               ?};
                               K__POZ.next()
                            !}
                         ?}
                      ?}
                   ?};
                   OKRO_F.cntx_pop();
                   OKRO_F.ref()<>CON_FUN.OKR_KON & OKRO_F.next()
               !}
            ?};
            echo();
            OKRO_F.cntx_pop(); ROK_F.cntx_pop();
            SKID_MBK.cntx_pop(); SKID_MBP.cntx_pop(); UD_SCH.cntx_pop(); UD_TYP.cntx_pop();
            K__POZ.cntx_pop()
         ?};
         K__NAG.r_unlock()
      || SKID_MBN.cntx_psh(); K_WERSJE.cntx_psh(); ROK_F.cntx_psh();
         exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja agregacji wartości dla modelu '+
              CON_FUN.SKIDMWE().KOD+' wersji '+CON_FUN.KWER1().SYM+' i roku '+CON_FUN.ROK1().NAZ+
              ' jest obsługiwana przez innego operatora.',
              0,CON_FUN.ROK1,null,CON_FUN.SKIDMWE,'');
         SKID_MBN.cntx_pop(); K_WERSJE.cntx_pop(); ROK_F.cntx_pop()
      ?}
   || SKID_MBN.cntx_psh(); K_WERSJE.cntx_psh(); ROK_F.cntx_psh();
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono definicji agregacji wartości dla modelu '+
           CON_FUN.SKIDMWE().KOD+' wersji '+CON_FUN.KWER1().SYM+' i roku '+CON_FUN.ROK1().NAZ+'.',
           0,CON_FUN.ROK1,null,CON_FUN.SKIDMWE,'');
      SKID_MBN.cntx_pop(); K_WERSJE.cntx_pop(); ROK_F.cntx_pop()
   ?};
   VAR_DEL.delete('MAPA_EL'); K__NAG.cntx_pop()
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono definicji kopiowania danych.',0,null,null,null,'')
?};
SKID_MBK.cntx_pop();
{? CON_FUN.PAR02=0
|| VAR_DEL.delete('__UD_F','__UD_P','__UD_OK','__funtab','__UD_IS','__Kpoz');
   exec('a_get_fun_leaf','!ctr_pdm_patw')
?}


\b_get_fun_leaf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Przed wywolaniem get_fun_leaf
::   WE: _a - element
::       _b - wariant obliczen
::  OLD: \b_get_fun_leaf/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
getFun:=tab_tmp(2,
   'UD_DEF','INTEGER',,
   'K_W_OBL','INTEGER',,
   'MEMO','SYS_MEMO',
)


\a_get_fun_leaf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Po wykonaniu get_fun_leaf
::  OLD: \a_get_fun_leaf/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('getFun')


\fun_leaf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Naliczanie wartosci funkcji na poziomie lisci
::   WE: _a - 1 - dla naglowka wartosci
::            2 - dla funkcji
::            3 - dla funkcji kopiującej
::  OLD: \fun_leaf/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| K__NAG.SKID_MB();
   K__NAG.K_WERSJE()
|? _a=2
|| CON_FUN.SKIDMWE();
   CON_FUN.K_WERSJE()
|? _a=3
|| CON_FUN.SKIDMWE();
   CON_FUN.KWER1()
?};

K__NAG.cntx_psh(); K__POZ.cntx_psh(); K__WAR.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
OKRO_F.index('ROK'); OKRO_F.prefix();
{? _a=1
|| K__NAG.ROK_F();
   OKRO_F.prefix(K__NAG.ROK_F);
   OKRO_F.first();
   UD_POM.OKR_POCZ:=OKRO_F.ref();
   OKRO_F.last();
   UD_POM.OKR_KON:=OKRO_F.ref()
|| K__NAG.index('UNIK1'); K__NAG.prefix(REF.FIRMA,SKID_MBN.ref(),K_WERSJE.ref())
?};
_rok:=null;
SKIDXDUD.index('POZ'); SKIDXDUD.prefix();
UD_POM.OKR_POCZ().ROK();
{!
|? {? _rok<>OKRO_F.ROK
   || _ok:=0;
      {? _a=1 | K__NAG.find_key(ROK_F.ref())
      || _ok:=1
      ?};
      _rok:=OKRO_F.ROK
   ?};
   {? _ok
   || K__POZ.use('yb'+exec('maska','control'));
      K__WAR.use('yx'+exec('maska','control'));
      K__WAR.index('K__POZ');
      K__POZ.index('RODZAJ');
      K__POZ.prefix(4,K__NAG.ref(),OKRO_F.ref());
      {? K__POZ.first()
      || {!
         |? K__POZ.prefix(4,K__NAG.ref(),OKRO_F.ref(),K__POZ.WYMIAR01);
            K__POZ.cntx_psh();
            K__POZ.last();
            K__POZ.prefix(4,K__NAG.ref(),OKRO_F.ref());
            {? K__POZ.next()
            || _ref:=K__POZ.ref()
            || _ref:=null
            ?};
            K__POZ.cntx_pop();
            SKIDXDUD.prefix(K__POZ.WYMIAR01);
            {? SKIDXDUD.first() & SKIDXDUD.ONLY_L='N'
            || K__POZ.prefix(4,K__NAG.ref(),OKRO_F.ref(),K__POZ.WYMIAR01);
               {? K__POZ.first()
               || {!
                  |? K__WAR.prefix(K__POZ.ref());
                     {? K__WAR.first() || {! |? K__WAR.del() !} ?};
                     K__POZ.del()
                  !}
               ?}
            ?};
            K__POZ.prefix(4,K__NAG.ref(),OKRO_F.ref());
            _ref & K__POZ.seek(_ref)
         !}
      ?}
   ?};
   OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
!};
K__NAG.cntx_pop(); K__POZ.cntx_pop(); K__WAR.cntx_pop();
_funtab:=tab_tmp(1,
   'SYM','STRING[16]','Symbol',
   'LP','INTEGER','LP',
   'REF','INTEGER','REF'
);
__Fun:='';
_i_sym:=_funtab.index('?');
_i_lp:=_funtab.ndx_tmp('',,'LP',,);
::_funtab.win_sel(_funtab.mk_sel(,,1));
SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
{? SKID_MBP.first()
|| UD_DEF.index('SCHSYM'); UD_DEF.prefix(SKID_MBP.UD_SCH);
   K_FORM.index('K_W_OBL');
   SKIDXDUD.index('POZ'); SKIDXDUD.prefix(); K_WERSJE.prefix();
   {? UD_DEF.first()
   || {!
      |? _ud_skl:=UD_DEF.UD_SKL;
         _ud_def:=UD_DEF.ref();
         {? _a=1 | _a=2 & (CON_FUN.K_WERSJE | K_WERSJE.first()) | _a=3 & CON_FUN.KWER1
         || {!
            |? SKIDXDUD.prefix(_ud_skl);
               _tak:={? SKIDXDUD.first() & SKIDXDUD.ONLY_L='T'
                     || K_FORM.prefix(_ud_def,K_WERSJE.K_W_OBL);
                        {? K_FORM.first()
                        || K_FORM.TYP<>'W'
                        || UD_DEF.cntx_psh(); UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_DEF.UD_SCH,UD_DEF.ref()); _l:=UD_DEF.first(); UD_DEF.cntx_pop(); _l
                        ?}
                     ?};
               {? _tak
               || _fml:=exec('get_fun_leaf','!ctr_pdm_patw');
                  _lp:=1;
                  __Fun:='';
                  _funtab.erase();
                  _funtab.index(_i_sym);
                  {!
                  |? _p:=_fml*'[';
                     {? _p
                     || __Fun+=(_p-1)+_fml;
                        _fml:=_p-_fml;
                        _p:=_fml*']';
                        _sym:=(_p-1)+_fml;
                        UD_DEF.cntx_psh();
                        UD_DEF.index('SCHSYM'); UD_DEF.prefix(SKID_MBP.UD_SCH,_sym,_sym);
                        {? UD_DEF.first()
                        || {? ~_funtab.find_key(UD_DEF.SYMBOL,)
                           || _funtab.SYM:=UD_DEF.SYMBOL;
                              _funtab.LP:=_lp; _lp+=1;
                              _funtab.REF:=#UD_DEF.UD_SKL;
                              _funtab.add()
                           ?};
                           __Fun+='w['+$_funtab.LP+']'
                        ?};
                        UD_DEF.cntx_pop();
                        _fml:=_p-_fml;
                        1
                     || __Fun+=_fml;
                        0
                     ?}
                  !};
                  VAR_DEL.delete('w');
                  w:=obj_new(_funtab.size());
::            _funtab.select();
                  K__NAG.cntx_psh(); K__POZ.cntx_psh(); K__WAR.cntx_psh();
                  ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
                  OKRO_F.index('ROK'); OKRO_F.prefix();
                  {? _a=1
                  || K__NAG.ROK_F();
                     OKRO_F.prefix(K__NAG.ROK_F);
                     OKRO_F.first();
                     UD_POM.OKR_POCZ:=OKRO_F.ref();
                     OKRO_F.last();
                     UD_POM.OKR_KON:=OKRO_F.ref()
                  || K__NAG.index('UNIK1'); K__NAG.prefix(REF.FIRMA,SKID_MBN.ref(),K_WERSJE.ref())
                  ?};
                  _rok:=null;
                  UD_POM.OKR_POCZ().ROK();
                  {!
                  |? echo('Procesowanie wartości formułowych dla liści: %1 dla %2 %3'@[UD_DEF.SYMBOL,OKRO_F.NAZ,OKRO_F.ROK().NAZ]);
                     {? _rok<>OKRO_F.ROK
                     || _ok:=0;
                        {? _a=1 | K__NAG.find_key(ROK_F.ref())
                        || _ok:=1
                        ?};
                        _rok:=OKRO_F.ROK
                     ?};
                     {? _ok
                     || K__POZ.use('yb'+exec('maska','control'));
                        K__POZ.index('K__NAG');
                        K__WAR.use('yx'+exec('maska','control'));
                        K__WAR.index('K__POZ');
                        K__POZ.prefix(K__NAG.ref(),OKRO_F.ref(),_ud_skl);
                        {? K__POZ.first()
                        || {!
                           |? K__WAR.prefix(K__POZ.ref());
                              {? K__WAR.first() || {! |? K__WAR.del !} ?};
                              K__POZ.del()
                           !}
                        ?};
                        _funtab.index(_i_lp); _funtab.prefix();
                        {? _funtab.first()
                        || {!
                           |? K__POZ.prefix(K__NAG.ref(),OKRO_F.ref(),_funtab.REF);
                              {? K__POZ.first()
                              || {!
                                 |? K__POZ.cntx_psh();
                                    K__POZ.index('WYM1OST');
                                    K__POZ.prefix(K__NAG.ref(),OKRO_F.ref(),
                                       K__POZ.WYMIAR02,K__POZ.WYMIAR03,K__POZ.WYMIAR04,K__POZ.WYMIAR05,K__POZ.WYMIAR06,
                                       K__POZ.WYMIAR07,K__POZ.WYMIAR08,K__POZ.WYMIAR09,K__POZ.WYMIAR10,K__POZ.WYMIAR11,
                                       K__POZ.WYMIAR12,K__POZ.WYMIAR13,K__POZ.WYMIAR14,K__POZ.WYMIAR15
                                    );
                                    {? ~K__POZ.find_key(_ud_skl)
                                    || _funtab.cntx_psh();
                                       {? _funtab.first()
                                       || {!
                                          |? w[_funtab.LP]:={? K__POZ.find_key(_funtab.REF) || K__POZ.WART || 0 ?};
                                             _funtab.next()
                                          !};
                                          _w:=($__Fun)();
                                          {? _w
                                          || K__POZ.WYMIAR01:=_ud_skl;
                                             K__POZ.WART:=_w;
                                             K__POZ.RODZAJ:=4;
                                             K__POZ.add()
                                          ?}
                                       ?};
                                       _funtab.cntx_pop()
                                    ?};
                                    K__POZ.cntx_pop();
                                    K__POZ.next()
                                 !}
                              ?};
                              _funtab.next()
                           !}
                        ?}
                     ?};
                     OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
                  !};
                  K__NAG.cntx_pop(); K__POZ.cntx_pop(); K__WAR.cntx_pop();
                  _funtab.erase()
               ?};
               _a=2 & CON_FUN.K_WERSJE=null & K_WERSJE.next()
            !}
         ?};
         UD_DEF.next()
      !}
   ?}
?};
VAR_DEL.delete('w');
exec('cfun_nar','!ctr_pdm_patw',_a);
echo()


\get_fun_leaf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Pobiera funkcje wykonywana na lisciach
::  OLD: \get_fun_leaf/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
_f:=exec('get_fun_leaf0','!ctr_pdm_patw',UD_DEF.ref(),K_WERSJE.K_W_OBL);
{? _f<>''
|| return(_f)
?};
K_FORM.prefix(UD_DEF.ref(),K_WERSJE.K_W_OBL);
_first:=K_FORM.first();
{? _first & K_FORM.TYP='F'
|| _fml:=K_FORM.memo_txt(0,1,'F');
   {!
   |? _p:=_fml*'[';
      {? _p
      || _f+=(_p-1)+_fml;
         _fml:=_p-_fml;
         _p:=_fml*']';
         _sym:=(_p-1)+_fml;
         UD_DEF.cntx_psh();
         UD_DEF.index('SCHSYM'); UD_DEF.prefix(SKID_MBP.UD_SCH,_sym,_sym);
         {? UD_DEF.first()
         || _f1:=exec('get_fun_leaf','!ctr_pdm_patw');
            _f+={? _f1='' || '['+UD_DEF.SYMBOL+']' || '('+_f1+')' ?}
         ?};
         UD_DEF.cntx_pop();
         _fml:=_p-_fml;
         1
      || _f+=_fml;
         0
      ?}
   !}
|? _first & K_FORM.TYP='W'
|| _f:='['+UD_DEF.SYMBOL+']'
|| UD_DEF.cntx_psh();
   UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_DEF.ref());
   {? UD_DEF.first()
   || {!
      |? {? UD_DEF.ZN_AGR<>'~'
         || _zn:=UD_DEF.ZN_AGR;
            {? _zn='*' | _zn='/'
            || _f:={? _f<>'' || '( '+_f+' )'+_zn || '' ?}+'('+exec('get_fun_leaf','!ctr_pdm_patw')+')'
            || _f+={? _f<>'' | _zn='-' || _zn || '' ?}+'('+exec('get_fun_leaf','!ctr_pdm_patw')+')'
            ?}
         ?};
         UD_DEF.next()
      !}
   || _f:='['+UD_DEF.SYMBOL+']'
   ?};
   UD_DEF.cntx_pop()
?};
exec('add_fun_leaf','!ctr_pdm_patw',UD_DEF.ref(),K_WERSJE.K_W_OBL,_f);
_f


\get_fun_leaf0
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Zwraca formule dla wariantu obliczen z tabeli tymczasowej
::   WE: _a - element
::       _b - wariant obliczen
::  OLD: \get_fun_leaf0/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('getFun')>0
|| {? getFun.find_key(#_a,_b)
   || getFun.memo_txt(0,1,'MEMO')
   || ''
   ?}
|| ''
?}


\add_fun_leaf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Dodaje formule dla wariantu obliczen do tabeli tymczasowej
::   WE: _a - element
::       _b - wariant obliczen
::       _c - formula
::  OLD: \add_fun_leaf/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('getFun')>0
|| getFun.UD_DEF:=#_a;
   getFun.K_W_OBL:=#_b;
   {? getFun.add()
   || getFun.memo_set(_c);
      getFun.memo_put()
   ?}
?}


\cfun_nar_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Tworzy tabelę na potrzeby naliczania wartości narastająco
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('KPoz');
KPoz:=tab_tmp(16,
   'R','INTEGER',,
   'W01','INTEGER',,
   'W02','INTEGER',,
   'W03','INTEGER',,
   'W04','INTEGER',,
   'W05','INTEGER',,
   'W06','INTEGER',,
   'W07','INTEGER',,
   'W08','INTEGER',,
   'W09','INTEGER',,
   'W10','INTEGER',,
   'W11','INTEGER',,
   'W12','INTEGER',,
   'W13','INTEGER',,
   'W14','INTEGER',,
   'W15','INTEGER',,
   'N','REAL',,
   'NB','REAL',,
   'REF','INTEGER',,
   'MASKA','STRING[6]',
)


\cfun_nar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Naliczenie wartosci narastajaco dla zagregowanych podzialow
::   WE: _a typ
::  OLD: \cfun_nar/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
exec('cfun_nar_tab','!ctr_pdm_patw');
{? _a=1 | _a<>1 & CON_FUN.SKIDMWE
|| {? _a=1
   || K__NAG.SKID_MB();
      UD_POM.ROK_POCZ:=UD_POM.ROK_KON:=K__NAG.ROK_F;
      OKRO_F.cntx_psh();
      OKRO_F.index('ROK');
      OKRO_F.prefix(K__NAG.ROK_F);
      UD_POM.OKR_POCZ:={? OKRO_F.first() || OKRO_F.ref() || null ?};
      UD_POM.OKR_KON:={? OKRO_F.last() || OKRO_F.ref() || null ?};
      OKRO_F.cntx_pop()
   || CON_FUN.SKIDMWE()
   ?};
   exec('cfun_nar1','!ctr_pdm_patw',_a)
|| SKID_MBN.index('KOD');
   SKID_MBN.prefix();
   {? SKID_MBN.first()
   || {!
      |? exec('cfun_nar1','!ctr_pdm_patw',_a);
         SKID_MBN.next()
      !}
   ?}
?};
VAR_DEL.delete('KPoz')


\cfun_nar1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Naliczenie wartosci narastajaco dla zagregowanych podzialow
::   WE: _a - typ
::  OLD: \cfun_nar1/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=1 | _a=2 & CON_FUN.K_WERSJE | _a=3 & CON_FUN.KWER1
|| {? _a=1
   || K__NAG.K_WERSJE()
   |? _a=2
   || CON_FUN.K_WERSJE()
   || CON_FUN.KWER1()
   ?};
   exec('cfun_nar2','!ctr_pdm_patw')
|| K_WERSJE.index('KALK_SYM');
   K_WERSJE.prefix('N');
   {? K_WERSJE.first()
   || {!
      |? exec('cfun_nar2','!ctr_pdm_patw');
         K_WERSJE.next()
      !}
   ?}
?}


\cfun_nar2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Naliczenie wartosci narastajaco dla zagregowanych podzialow
::  OLD: \cfun_nar2/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
KPoz.erase();
K__NAG.cntx_psh();
K__NAG.index('UNIK1');
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
_rok:=null;
_ok:=0;
_start:=null;
{? ROK_F.first()
|| UD_POM.ROK_POCZ();
   {!
   |? {? _rok<>OKRO_F.ROK
      || {? _rok<>null || KPoz.erase() ?};
         _rok:=OKRO_F.ROK;
         K__NAG.prefix(REF.FIRMA,SKID_MBN.ref(),K_WERSJE.ref(),ROK_F.ref());
         _ok:=K__NAG.first();
         OKRO_F.prefix(ROK_F.ref());
         OKRO_F.first()
      ?};
      {? _start=null
      || OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
         UD_POM.OKR_POCZ();
         _start:=UD_POM.OKR_POCZ;
         {? OKRO_F.prev()
         || exec('cfun_nar_add','!ctr_pdm_patw',1)
         ?};
         UD_POM.OKR_POCZ()
      ?};
      {!
      |? exec('cfun_nar_add','!ctr_pdm_patw',0);
         exec('cfun_nar_upd','!ctr_pdm_patw');
         OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
      !};
      ROK_F.ref()<>UD_POM.ROK_KON & ROK_F.next()
   !}
?};
K__NAG.cntx_pop()


\cfun_nar_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Dodanie wartości do tabeli tymczasowej na potrzeby naliczania wartości narastająco
::   WE: _a - Czy init? 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_sprz:=exec('jest_sprzedana','konsolidacja');
_maska:=exec('maska','control');
K__POZ.cntx_psh();
K__POZ.use('yb'+_maska);
K__POZ.index('OKRES'); K__POZ.prefix(K__NAG.ref(),OKRO_F.NR);
{? K__POZ.first()
|| {!
   |? {? KPoz.find_key(K__POZ.RODZAJ,K__POZ.WYMIAR01,K__POZ.WYMIAR02,K__POZ.WYMIAR03,K__POZ.WYMIAR04,K__POZ.WYMIAR05,
                       K__POZ.WYMIAR06,K__POZ.WYMIAR07,K__POZ.WYMIAR08,K__POZ.WYMIAR09,K__POZ.WYMIAR10,K__POZ.WYMIAR11,
                       K__POZ.WYMIAR12,K__POZ.WYMIAR13,K__POZ.WYMIAR14,K__POZ.WYMIAR15
         )
      || KPoz.REF:=#K__POZ.ref();
         KPoz.MASKA:=_maska;
         {? _sprz
         || KPoz.N:=0;
            KPoz.NB:=0
         || KPoz.N+=K__POZ.WART;
            KPoz.NB+=K__POZ.WART
         ?};
         KPoz.put()
      || KPoz.blank(1);
         KPoz.N:={? _a || K__POZ.WART_N || K__POZ.WART ?};
         {? OKRO_F.NR
         || KPoz.NB:={? _a || K__POZ.WART_NB || K__POZ.WART ?}
         ?};
         {? ~_sprz & (KPoz.N | KPoz.NB)
         || KPoz.REF:=#K__POZ.ref();
            KPoz.MASKA:=_maska;
            KPoz.R:=K__POZ.RODZAJ;
            KPoz.W01:=K__POZ.WYMIAR01;
            KPoz.W02:=K__POZ.WYMIAR02;
            KPoz.W03:=K__POZ.WYMIAR03;
            KPoz.W04:=K__POZ.WYMIAR04;
            KPoz.W05:=K__POZ.WYMIAR05;
            KPoz.W06:=K__POZ.WYMIAR06;
            KPoz.W07:=K__POZ.WYMIAR07;
            KPoz.W08:=K__POZ.WYMIAR08;
            KPoz.W09:=K__POZ.WYMIAR09;
            KPoz.W10:=K__POZ.WYMIAR10;
            KPoz.W11:=K__POZ.WYMIAR11;
            KPoz.W12:=K__POZ.WYMIAR12;
            KPoz.W13:=K__POZ.WYMIAR13;
            KPoz.W14:=K__POZ.WYMIAR14;
            KPoz.W15:=K__POZ.WYMIAR15;
            KPoz.add()
         ?}
      ?};
      K__POZ.next()
   !}
?};
K__POZ.cntx_pop()


\cfun_nar_upd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Aktualizacja wartości na potrzeby naliczania wartości narastająco
::----------------------------------------------------------------------------------------------------------------------
_maska:=exec('maska','control');
K__POZ.cntx_psh();
K__POZ.use('yb'+_maska);
K__POZ.index('OKRES'); K__POZ.prefix(K__NAG.ref(),OKRO_F.NR);
K__WAR.use('yx'+_maska);
K__WAR.index('K__POZ');
{? KPoz.first()
|| {!
   |? {? KPoz.MASKA=_maska
      || {? K__POZ.seek(KPoz.REF,)
         || K__POZ.WART_N:=KPoz.N;
            K__POZ.WART_NB:=KPoz.NB;
            {? K__POZ.WART=0 & K__POZ.WART_N=0 & K__POZ.WART_NB=0 & OKRO_F.NR<>0
            || K__WAR.prefix(K__POZ.ref());
               {? K__WAR.first()
               || K__POZ.put()
               || K__POZ.del()
               ?}
            || K__POZ.put()
            ?}
         ?}
      |? KPoz.N | KPoz.NB | OKRO_F.NR=0
      || K__POZ.blank(1);
         K__POZ.RODZAJ:=KPoz.R;
         K__POZ.OKRES:=OKRO_F.ref();
         K__POZ.K__NAG:=K__NAG.ref();
         K__POZ.WYMIAR01:=exec('ud_skl','schemat',KPoz.W01);
         K__POZ.WYMIAR02:=exec('ud_skl','schemat',KPoz.W02);
         K__POZ.WYMIAR03:=exec('ud_skl','schemat',KPoz.W03);
         K__POZ.WYMIAR04:=exec('ud_skl','schemat',KPoz.W04);
         K__POZ.WYMIAR05:=exec('ud_skl','schemat',KPoz.W05);
         K__POZ.WYMIAR06:=exec('ud_skl','schemat',KPoz.W06);
         K__POZ.WYMIAR07:=exec('ud_skl','schemat',KPoz.W07);
         K__POZ.WYMIAR08:=exec('ud_skl','schemat',KPoz.W08);
         K__POZ.WYMIAR09:=exec('ud_skl','schemat',KPoz.W09);
         K__POZ.WYMIAR10:=exec('ud_skl','schemat',KPoz.W10);
         K__POZ.WYMIAR11:=exec('ud_skl','schemat',KPoz.W11);
         K__POZ.WYMIAR12:=exec('ud_skl','schemat',KPoz.W12);
         K__POZ.WYMIAR13:=exec('ud_skl','schemat',KPoz.W13);
         K__POZ.WYMIAR14:=exec('ud_skl','schemat',KPoz.W14);
         K__POZ.WYMIAR15:=exec('ud_skl','schemat',KPoz.W15);
         K__POZ.WART:=0;
         K__POZ.WART_N:=KPoz.N;
         K__POZ.WART_NB:=KPoz.NB;
         K__POZ.add()
      ?};
      KPoz.next()
   !}
?};
K__POZ.cntx_pop()


\szuk_okr_wy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Szuka okresu wyjsciowego dla okresu z bufora (kopiowanie danych)
::  OLD: \szuk_okr_wy/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? ROZNE.OKRES_WY=null
|| ROZNE.OKRES_WY:=CON_FUN.OKR_DOC
|| ROK_F.cntx_psh(); OKRO_F.cntx_psh();
   ROZNE.OKRES_WY().ROK(); ROZNE.OKRES_WY:=null;
   OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
   {? OKRO_F.next()
   || ROZNE.OKRES_WY:=OKRO_F.ref()
   || ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
      {? ROK_F.next()
      || OKRO_F.prefix(ROK_F.ref());
         {? OKRO_F.first() & OKRO_F.next() || ROZNE.OKRES_WY:=OKRO_F.ref() ?}
      ?}
   ?};
   OKRO_F.cntx_pop(); ROK_F.cntx_pop()
?}


\erase_source
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Kasowanie danych docelowych przed kopiowaniem
::   WY: 1/0 - czy operacja sie powiodla
::  OLD: \erase_source/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
ROK_F.cntx_psh(); OKRO_F.cntx_psh();
ROZNE.OKRES_WY().ROK();
UD_POM.OKR_P:=UD_POM.OKR_K:=OKRO_F.ref();
K__NAG.cntx_psh(); K__NAG.index('UNIK1'); K__NAG.prefix(REF.FIRMA,CON_FUN.SKIDMWE,CON_FUN.KWER2,ROK_F.ref());
{? K__NAG.first()
|| {? K__NAG.r_lock(1,1)
   || do(); exec('usu_mod2','control', '0'); end();
      K__NAG.r_unlock()
   || SKID_MBN.cntx_psh(); K_WERSJE.cntx_psh();
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja agregacji wartości dla modelu '+CON_FUN.SKIDMWE().KOD+
           ' wersji '+CON_FUN.KWER2().SYM+' i roku '+ROK_F.NAZ+' jest obsługiwana przez innego operatora.',
           0,ROK_F.ref(),null,CON_FUN.SKIDMWE,'');
      SKID_MBN.cntx_pop(); K_WERSJE.cntx_pop();
      _zwrot:=0
   ?}
?};
K__NAG.cntx_pop(); ROK_F.cntx_pop(); OKRO_F.cntx_pop();
_zwrot


\kopia_danych1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Kopiowanie danych do wersji planowanej - wewnetrzna
::   WE: _a - liczba wymiarow
::  OLD: \kopia_danych1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_error:=_wsp:=0;
{! _i:=1.._a
|? ~_error
|! SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref(),CON_FUN.SKIDMWE,_i);
   {? SKID_MBK.first()
   || SKID_MBK.SKID_MBP().UD_SCH().UD_TYP();
      {? SKID_MBK.SP_KOP=1
      || {? UD_TYP.SYMBOL='POZ_BUD' || _wsp:=SKID_MBK.WSPOL ?}
      || _elem:=$($('K__POZ.WYMIAR'+form(_i,-2)))();
         MAPA_EL.prefix($UD_TYP.ref(),$UD_SCH.ref(),_elem);
         {? MAPA_EL.first()
         || {? UD_TYP.SYMBOL='POZ_BUD' || _wsp:=MAPA_EL.WSP ?}
         || _error:=1
         ?}
      ?}
   ?}
!};
{? ~_error
|| ROZNE.OKRES_WY().ROK();
   K__NAG.cntx_psh(); K__NAG.index('UNIK1'); K__NAG.prefix(REF.FIRMA,CON_FUN.SKIDMWE,CON_FUN.KWER2,ROK_F.ref());
   {? ~K__NAG.first()
   || CON_FUN.SKIDMWE(); CON_FUN.KWER2();
      _dalej:=exec('add_knag','control')
   ?};
   {? K__NAG.first()
   || {? K__NAG.r_lock(1,1)
      || K__POZ.cntx_psh();
         ROZNE.OKRES_WY();
         K__POZ.use('yb'+exec('maska','control'));
         _wart:=(K__POZ.WART*_wsp);
         wym:=obj_new(15);
         {! _i:=1..15 |! wym[_i]:=($('K__POZ.WYMIAR'+form(_i,-2)))() !};
         exec('kop_el_wy','!ctr_pdm_patw',_i);
         exec('k__poz','control',_wart);
         K__POZ.cntx_pop();
         VAR_DEL.delete('wym');
         K__NAG.r_unlock()
      || SKID_MBN.cntx_psh(); K_WERSJE.cntx_psh();
         exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja agregacji wartości dla modelu '+CON_FUN.SKIDMWE().KOD+
              ' wersji '+CON_FUN.KWER2().SYM+' i roku '+ROK_F.NAZ+' jest obsługiwana przez innego operatora.',
              0,ROK_F.ref(),null,CON_FUN.SKIDMWE,'');
         SKID_MBN.cntx_pop(); K_WERSJE.cntx_pop()
      ?}
   ?};
   K__NAG.cntx_pop()
?}


\kop_el_wy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Zmienia element docelowy na ustawiony przez uzytkownika podczas kopiowania danych
::   WE: _a - liczba wymiarow
::  OLD: \kop_el_wy/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.cntx_psh();
SKID_MBP.cntx_psh(); SKID_MBP.index('LP');
UD_SKL.cntx_psh(); UD_SKL.prefix();
SKID_MBK.cntx_psh(); SKID_MBK.index('UNIK');
SKID_MBS.cntx_psh(); SKID_MBS.index('UNIK');
{! _i:=1.._a
|! SKID_MBK.prefix(CON_FUN.ref(),CON_FUN.SKIDMWE,_i);
   {? SKID_MBK.first()
   || SKID_MBS.prefix(SKID_MBK.ref(),wym[_i]);
      {? SKID_MBS.first() || wym[_i]:=SKID_MBS.EL_WY ?}
   ?}
!};
SKID_MBK.cntx_pop(); SKID_MBS.cntx_pop(); UD_SKL.cntx_pop();
UD_DEF.cntx_pop(); SKID_MBP.cntx_pop();
VAR_DEL.delete('znal_wy')


\mapa_danych
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Mapa danych do kopiowania
::  OLD: \mapa_danych/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
MAPA_EL:=tab_tmp(3,'UD_TYP','STRING[20]','',
                   'UD_SCH','STRING[20]','',
                   'UD_SKL','STRING[20]','',
                   'WSP','REAL',''
                 );
SKID_MBP.cntx_psh(); UD_SCH.cntx_psh(); UD_TYP.cntx_psh(); UD_DEF.cntx_psh(); UD_SKL.cntx_psh();
SKID_MBE.cntx_psh(); SKID_MBE.index('ELEM');
SKID_MBK.cntx_psh(); SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref());
{? SKID_MBK.first()
|| {! |?
      {? SKID_MBK.SP_KOP=2
      || SKID_MBK.SKID_MBP().UD_SCH().UD_TYP();
         UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref());
         {? UD_DEF.first()
         || {! |?
               _lisc:=_wej:=_byl_pop:=0;

               UD_DEF.cntx_psh();
               UD_DEF.prefix(UD_SCH.ref(),UD_DEF.ref());
               {? ~UD_DEF.first()
               || exec('mapa_el_add','!ctr_pdm_patw');
                  UD_DEF.cntx_pop()
               || UD_DEF.cntx_pop();
                  K_FORM.index('K_W_OBL');
                  K_FORM.prefix(UD_DEF.ref(), SKID_MBK.CON_FUN().KWER1().K_W_OBL);
                  {? K_FORM.first & K_FORM.TYP='W' || exec('mapa_el_add','!ctr_pdm_patw') ?}
               ?};

               UD_DEF.next()
            !}
         ?}
      ?};
      SKID_MBK.next()
   !}
?};
SKID_MBK.cntx_pop(); SKID_MBP.cntx_pop(); UD_SCH.cntx_pop(); UD_TYP.cntx_pop(); UD_DEF.cntx_pop(); UD_SKL.cntx_pop(); SKID_MBE.cntx_pop();
VAR_DEL.delete('dod_el','wsp_el')


\mapa_el_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Mapa danych do kopiowania - pomocnicza
::  OLD: \mapa_el_add/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
dod_el:=wsp_el:=0;
exec('mapa_danych1','!ctr_pdm_patw');
{? dod_el
|| UD_DEF.UD_SKL();
   MAPA_EL.blank(1);
   MAPA_EL.UD_TYP:=$UD_TYP.ref();
   MAPA_EL.UD_SKL:=$UD_SKL.ref();
   MAPA_EL.UD_SCH:=$UD_SCH.ref();
   MAPA_EL.WSP:=wsp_el;
   MAPA_EL.add()
?}


\mapa_danych1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Mapa danych do kopiowania - wewnetrzna
::  OLD: \mapa_danych1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBE.index('ELEM'); SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
{? SKID_MBE.first()
|| dod_el:=1; wsp_el:=SKID_MBE.WSP
?};
UD_DEF.cntx_psh(); UD_DEF.prefix();
{? UD_DEF.UD_DEF & UD_DEF.seek(UD_DEF.UD_DEF,UD_DEF.name())
|| exec('mapa_danych1','!ctr_pdm_patw')
?};
UD_DEF.cntx_pop()


\kopia_danych2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Kopia danych dla elementow obliczanych formulowo
::  OLD: \kopia_danych2/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? __Kpoz<>K__POZ.WYMIAR01
|| __Kpoz:=K__POZ.WYMIAR01;
   exec('map_tab','!ctr_pdm_patw');
   K__POZ.cntx_psh();
   __UD_P.prefix(K__POZ.WYMIAR01);
   {? __UD_P.first()
   || {!
      |? UD_DEF.prefix(); SKID_MBP.prefix();
         {? __UD_F.seek(__UD_P.UD_F,) & UD_DEF.seek(__UD_F.UD_DEF,) & SKID_MBP.seek(__skid_mbp)
         || _ud_skl:=UD_DEF.UD_SKL;
            UD_SKL.prefix(); UD_SKL.seek(__UD_F.UD_WY,);
            _ud_skl2:=UD_SKL.ref();
            {? UD_DEF.seek(__UD_F.UD_DEF,)
            || CON_FUN.KWER1();
               _fml:=exec('get_fun_leaf','!ctr_pdm_patw');
               _lp:=1;
               __Fun:='';
               __funtab.erase();
               __funtab.index(__i_sym);
               {!
               |? _p:=_fml*'[';
                  {? _p
                  || __Fun+=(_p-1)+_fml;
                     _fml:=_p-_fml;
                     _p:=_fml*']';
                     _sym:=(_p-1)+_fml;
                     UD_DEF.cntx_psh();
                     UD_DEF.index('SCHSYM'); UD_DEF.prefix(SKID_MBP.UD_SCH,_sym,_sym);
                     {? UD_DEF.first()
                     || {? ~__funtab.find_key(UD_DEF.SYMBOL,)
                        || __funtab.SYM:=UD_DEF.SYMBOL;
                           __funtab.LP:=_lp; _lp+=1;
                           __funtab.REF:=#UD_DEF.UD_SKL;
                           __funtab.add()
                        ?};
                        __Fun+='w['+$__funtab.LP+']'
                     ?};
                     UD_DEF.cntx_pop();
                     _fml:=_p-_fml;
                     1
                  || __Fun+=_fml;
                     0
                  ?}
               !};
               VAR_DEL.delete('w'); w:=obj_new(_lp); {! _i:=1.._lp |! w[_i]:=0 !};
               __funtab.index(__i_lp); __funtab.prefix();
               {? __funtab.first()
               || {!
                  |? K__POZ.prefix(K__NAG.ref(),OKRO_F.ref(),__funtab.REF);
                     {? K__POZ.first()
                     || {!
                        |? K__POZ.cntx_psh();
                           K__POZ.index('WYM1OST');
                           K__POZ.prefix(K__NAG.ref(),OKRO_F.ref(),
                              K__POZ.WYMIAR02,K__POZ.WYMIAR03,K__POZ.WYMIAR04,K__POZ.WYMIAR05,K__POZ.WYMIAR06,
                              K__POZ.WYMIAR07,K__POZ.WYMIAR08,K__POZ.WYMIAR09,K__POZ.WYMIAR10,K__POZ.WYMIAR11,
                              K__POZ.WYMIAR12,K__POZ.WYMIAR13,K__POZ.WYMIAR14,K__POZ.WYMIAR15
                           );
                           {? ~__UD_IS.find_key(K__POZ.cur_prfx()+','+$#_ud_skl)
                           || __UD_IS.S:=K__POZ.cur_prfx()+','+$#_ud_skl;
                              __UD_IS.add();
                              __funtab.cntx_psh();
                              {? __funtab.first()
                              || {!
                                 |? w[__funtab.LP]:={? K__POZ.find_key(__funtab.REF) || K__POZ.WART || 0 ?};
                                    __funtab.next()
                                 !};
                                 no_msg(1); on_error(2); errno();
                                 _w:=($__Fun)(); _err:=errno();
                                 on_error(0); no_msg(0);
                                 {? _err || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Błąd '+$_err+' przy obliczaniu elementu '+UD_SKL.SYMBOL+' ('+UD_SKL.OPIS+') (szczegóły w control.log).',0,null,null,null,'') ?};
                                 {? _err=0 & _w
                                 || ROZNE.OKRES_WY().ROK();
                                    K__NAG.cntx_psh(); K__NAG.index('UNIK1'); K__NAG.prefix(REF.FIRMA,CON_FUN.SKIDMWE,CON_FUN.KWER2,ROK_F.ref());
                                    {? ~K__NAG.first()
                                    || CON_FUN.SKIDMWE(); CON_FUN.KWER2();
                                       _dalej:=exec('add_knag','control')
                                    ?};
                                    {? K__NAG.first()
                                    || {? K__NAG.r_lock(1,1)
                                       || K__POZ.cntx_psh();
                                          ROZNE.OKRES_WY();
                                          K__POZ.use('yb'+exec('maska','control'));
                                          _wart:=(_w*__UD_F.WSP);
                                          wym:=obj_new(15);
                                          {! _i:=1..15 |! wym[_i]:=($('K__POZ.WYMIAR'+form(_i,-2)))() !};
                                          wym[1]:=_ud_skl;
                                          exec('kop_el_wy','!ctr_pdm_patw',__L_wym);
                                          K_FORM.index('K_W_OBL'); K_FORM.prefix();
                                          UD_DEF.cntx_psh(); UD_DEF.index('PODTEC'); UD_DEF.prefix(__ud_sch,wym[1]);
                                          {? UD_DEF.first()
                                          || {? ~K_FORM.find_key(UD_DEF.ref(),CON_FUN.KWER2().K_W_OBL) | K_FORM.TYP='W'
                                             || _jest:=0;
                                                UD_DEF.index('SYMBOL'); UD_DEF.prefix(__ud_sch,#UD_DEF.ref());
                                                {? ~UD_DEF.first() || exec('k__poz','control',_wart) ?}
                                             ?}
                                          ?};
                                          UD_DEF.cntx_pop();
                                          K__POZ.cntx_pop();
                                          VAR_DEL.delete('wym');
                                          K__NAG.r_unlock()
                                       || SKID_MBN.cntx_psh(); K_WERSJE.cntx_psh();
                                          exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja agregacji wartości dla modelu '+
                                               CON_FUN.SKIDMWE().KOD+' wersji '+CON_FUN.KWER2().SYM+' i roku '+ROK_F.NAZ+
                                               ' jest obsługiwana przez innego operatora.',
                                               0,ROK_F.ref(),null,CON_FUN.SKIDMWE,'');
                                          SKID_MBN.cntx_pop(); K_WERSJE.cntx_pop()
                                       ?}
                                    ?};
                                    K__NAG.cntx_pop()
                                 ?}
                              ?};
                              __funtab.cntx_pop()
                           ?};
                           K__POZ.cntx_pop();
                           K__POZ.next()
                        !}
                     ?};
                     __funtab.next()
                  !}
               ?}
            ?}
         ?};
         __UD_P.next()
      !}
   ?};
   K__POZ.cntx_pop();
   VAR_DEL.delete('w')
?};
1


\map_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Kopia danych dla elementow obliczanych formulowo
::  OLD: \map_tab/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__UD_F')<=0
|| __UD_F:=tab_tmp(1,
      'UD_SKL','INTEGER','',
      'UD_DEF','INTEGER','',
      'UD_WY','INTEGER',,
      'N_WE','STRING[50]',,
      'N_WY','STRING[50]',,
      'WSP','INTEGER',
   );
   __UD_P:=tab_tmp(1,
      'UD_SKL','INTEGER','',
      'UD_F','INTEGER',''
   );
   __funtab:=tab_tmp(1,
      'SYM','STRING[16]','Symbol',
      'LP','INTEGER','LP',
      'REF','INTEGER','REF'
   );
   __UD_IS:=tab_tmp(1,
      'S','STRING[100]',''
   );
   __Fun:='';
   __i_sym:=__funtab.index('?');
   __i_lp:=__funtab.ndx_tmp('',,'LP',,);
   SKID_MBP.cntx_psh();
   SKID_MBP.index('LP');
   SKID_MBP.prefix(CON_FUN.SKIDMWE);
   __L_wym:=SKID_MBP.size();
   SKID_MBP.prefix(CON_FUN.SKIDMWE,1);
   {? SKID_MBP.first()
   || __skid_mbp:=SKID_MBP.ref();
      __ud_sch:=SKID_MBP.UD_SCH;
      SKID_MBK.cntx_psh(); SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref(),CON_FUN.SKIDMWE,1);
      {? SKID_MBK.first()
      || {? SKID_MBK.SP_KOP=1
         || _wsp:=SKID_MBK.WSPOL
         ?};
         SKID_MBS.cntx_psh();
         SKID_MBS.index('UNIK'); SKID_MBS.prefix(SKID_MBK.ref());
         UD_DEF.cntx_psh();
         UD_DEF.index('PODTEC'); UD_DEF.prefix(SKID_MBP.UD_SCH);
         {? UD_DEF.first()
         || {!
            |? _jest:=0;
               SKIDXDUD.index('POZ'); SKIDXDUD.prefix();
               {? (~SKIDXDUD.find_key(UD_DEF.UD_SKL) | SKIDXDUD.ONLY_L='N') &
                  (SKID_MBK.SP_KOP=1 | (_jest:=SKID_MBS.find_key(UD_DEF.UD_SKL)) )
               || UD_DEF.cntx_psh(); UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_DEF.ref());
                  _tre:=UD_DEF.first();
                  UD_DEF.cntx_pop();
                  K_FORM.index('K_W_OBL'); K_FORM.prefix();
                  CON_FUN.KWER1();
                  {? _tre & (~K_FORM.find_key(UD_DEF.ref(),K_WERSJE.K_W_OBL) | K_FORM.TYP<>'W') |
                    ~_tre & K_FORM.find_key(UD_DEF.ref(),K_WERSJE.K_W_OBL) & K_FORM.TYP='F'
                  || __UD_F.UD_SKL:=UD_DEF.UD_SKL;
                     __UD_F.UD_DEF:=UD_DEF.ref();
                     __UD_F.UD_WY:={? _jest || SKID_MBS.EL_WY || UD_DEF.UD_SKL ?};
                     __UD_F.N_WE:=UD_DEF.SYMBOL;
                     __UD_F.N_WY:={? _jest || SKID_MBS.EL_WY().SYMBOL || UD_DEF.UD_SKL().SYMBOL ?};
                     __UD_F.WSP:=
                     {? SKID_MBK.SP_KOP=1
                     || SKID_MBK.WSPOL
                     || SKID_MBE.index('ELEM'); SKID_MBE.prefix(SKID_MBK.ref(),UD_DEF.UD_SKL);
                        {? SKID_MBE.first()
                        || SKID_MBE.WSP
                        || SKID_MBK.WSPOL
                        ?}
                     ?};
                     __UD_F.add();
                     _fml:=exec('get_fun_leaf','!ctr_pdm_patw');
                     {!
                     |? _p:=_fml*'[';
                        {? _p
                        || _fml:=_p-_fml;
                           _p:=_fml*']';
                           _sym:=(_p-1)+_fml;
                           UD_DEF.cntx_psh();
                           UD_DEF.index('SCHSYM'); UD_DEF.prefix(SKID_MBP.UD_SCH,_sym,_sym);
                           {? UD_DEF.first()
                           || __UD_P.UD_F:=__UD_F.ref();
                              __UD_P.UD_SKL:=UD_DEF.UD_SKL;
                              __UD_P.add()
                           ?};
                           UD_DEF.cntx_pop();
                           _fml:=_p-_fml;
                           1
                        || 0
                        ?}
                     !}
                  ?}
               ?};
               UD_DEF.next()
            !}
         ?};
         UD_DEF.cntx_pop();
         SKID_MBS.cntx_pop()
      ?};
      SKID_MBK.cntx_pop()
   ?};
   SKID_MBP.cntx_pop();
   __UD_P.win_sel(__UD_P.mk_sel(,,1));
   _o:=__UD_F.mk_sel(,,1);
   __UD_F.win_act(_o,,'Formuła','Pozycje'@@,,,"__UD_P.prefix(); __UD_P.select()");
   __UD_F.win_sel(_o);
::   __UD_F.select();
   __UD_P.prefix();
   1
?}


\mod_przekszt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przeksztalcenie wartosci dla modeli
::  OLD: \mod_przekszt/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
K_WERSJE.cntx_psh(); K_WERSJE.index('SYM'); K_WERSJE.prefix();
{? CON_FUN.KWER1=null
|| {? K_WERSJE.first()
   || {!
      |? K_WERSJE.cntx_psh();
         exec('mod_przekszt1','!ctr_pdm_patw');
         K_WERSJE.cntx_pop();
         K_WERSJE.next()
      !}
   ?}
|| CON_FUN.KWER1();
   exec('mod_przekszt1','!ctr_pdm_patw')
?};
K_WERSJE.cntx_pop()


\mod_przekszt1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przeksztalcenie wartosci dla modeli - wewnetrzna
::  OLD: \mod_przekszt1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBN.cntx_psh();
K__NAG.cntx_psh(); K__NAG.index('UNIK1'); opis_agr:='';
OKRO_F.cntx_psh(); ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
_rkon:=UD_POM.OKR_KON().ROK; _dalej:=1;
UD_POM.OKR_POCZ().ROK();
{! |?
   ROZNE.K_WE:=ROZNE.K_WY:=null;
   CON_FUN.SKIDMWE();
   K__NAG.prefix(REF.FIRMA,SKID_MBN.ref(),K_WERSJE.ref(),ROK_F.ref());
   {? ~K__NAG.first()
   || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono definicji agregacji wartości dla modelu '+SKID_MBN.KOD+' wersji '+K_WERSJE.SYM+' i roku '+ROK_F.NAZ+'.',0,SSTALE.AR,null,SKID_MBN.ref(),'');
      _dalej:=0
   ?};
   {? _dalej
   || {? K__NAG.r_lock(1,1)
      || ROZNE.K_WE:=K__NAG.ref()
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja agregacji wartości dla modelu '+SKID_MBN.KOD+' wersji '+K_WERSJE.SYM+' i roku '+ROK_F.NAZ+' jest obsługiwana przez innego operatora.',
              0,SSTALE.AR,null,SKID_MBN.ref(),'');
         _dalej:=0
      ?}
   ?};
   {? _dalej
   || CON_FUN.SKIDMWY();
      K__NAG.prefix(REF.FIRMA,SKID_MBN.ref(),K_WERSJE.ref(),ROK_F.ref());
      {? ~K__NAG.first() || _dalej:=exec('add_knag','control') ?};
      {? K__NAG.first()
      || {? K__NAG.r_lock(1,1)
         || ROZNE.K_WY:=K__NAG.ref()
         || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja agregacji wartości dla modelu '+SKID_MBN.KOD+' wersji '+K_WERSJE.SYM+' i roku '+ROK_F.NAZ+' jest obsługiwana przez innego operatora.',
                 0,SSTALE.AR,null,SKID_MBN.ref(),'');
            _dalej:=0
         ?}
      ?}
   ?};
   {? _dalej & ROZNE.K_WE<>null & ROZNE.K_WY<>null
   || ROK_F.cntx_psh(); OKRO_F.cntx_psh();
      exec('ust_okr_knag','!ctr_pdm_patw');
      {? UD_POM.OKR_P<>null & UD_POM.OKR_K<>null || exec('przekszt','!ctr_pdm_patw') ?};
      ROK_F.cntx_pop(); OKRO_F.cntx_pop()
   ?};
_dalej & ROK_F.ref()<>UD_POM.ROK_KON & ROK_F.next()
!};
ROK_F.cntx_pop(); OKRO_F.cntx_pop();
unlock_r();
K__NAG.cntx_pop(); SKID_MBN.cntx_pop()


\przekszt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przeksztalcenie wartosci dla modeli
::  OLD: \przekszt/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.PAR02=0
|| VAR_DEL.delete('__UD_F','__UD_P','__UD_OK','__funtab','__UD_IS','__LKWOBL');
   exec('b_get_fun_leaf','!ctr_pdm_patw');
   exec('fun_leaf','!ctr_pdm_patw',3)
?};
UD_SKL.cntx_psh(); UD_SKL.prefix();
SKID_PMO.cntx_psh();
SKID_PMO.index('SKIDMBWE'); SKID_PMO.prefix(REF.FIRMA,CON_FUN.SKIDMWE,CON_FUN.SKIDMWY);
{? SKID_PMO.first()
|| OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(UD_POM.OKR_P().ROK);
   {? OKRO_F.seek(UD_POM.OKR_P)
   || _rok:=OKRO_F.ROK().NAZ;
      VAR_DEL.delete('wym'); wym:=obj_new(15);
      {!
      |? {? K_WERSJE.CZY_SYS='N' | exec('can_fun_run','control',1)
         || __Kpoz:=null;
            {? var_pres('__UD_IS')>0 || __UD_IS.erase() ?};
            echo('Kopiowanie danych dla okresu %1 %2...'@[OKRO_F.NAZ,_rok]);
            OKRO_F.cntx_psh();
            K__POZ.cntx_psh();
            ROZNE.K_WE();
            K__POZ.use('yb'+exec('maska','control')); K__POZ.index('K__NAG'); K__POZ.prefix(ROZNE.K_WE,OKRO_F.ref());
            K__WAR.cntx_psh();
            K__WAR.use('yx'+exec('maska','control')); K__WAR.index('K__POZ'); K__WAR.prefix();
            {? K__POZ.first()
            || _max:=K__POZ.size();
               _lp:=0;
               {! |?
                  _warunek:=1;
                  {? CON_FUN.WAR_KSIE<>'' || _warunek:=($CON_FUN.WAR_KSIE)() ?};
                  {? _warunek
                  || _lp+=1;
                     echo('Kopiowanie danych dla okresu %1 %2(%3/%4)'@[OKRO_F.NAZ,_rok,$_lp,$_max]);
                     K__POZ.cntx_psh();
                     exec('przekszt1','!ctr_pdm_patw',1);
                     K__POZ.cntx_pop();
                     {? CON_FUN.PAR02=0 || exec('przekszt3','!ctr_pdm_patw') ?}
                  ?};
                  K__POZ.next()
               !}
            ?};
            K__POZ.cntx_pop(); K__WAR.cntx_pop();
            OKRO_F.cntx_pop()
         ?};
         OKRO_F.ref()<>UD_POM.OKR_K & OKRO_F.next()
      !};
      VAR_DEL.delete('wym')
   ?};
   OKRO_F.cntx_pop()
|| SKID_MBN.cntx_psh();
   exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Brak definicji przekształcenia podziałów z modelu '+
        CON_FUN.SKIDMWE().KOD+' na model '+CON_FUN.SKIDMWY().KOD+'.',0,null,null,CON_FUN.SKIDMWE,'');
   SKID_MBN.cntx_pop()
?};
SKID_PMO.cntx_pop(); UD_SKL.cntx_pop();
{? CON_FUN.PAR02=0
|| VAR_DEL.delete('__UD_F','__UD_P','__UD_OK','__funtab','__UD_IS','__LKWOBL');
   exec('a_get_fun_leaf','!ctr_pdm_patw')
?}


\przekszt1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przeksztalcenie wartosci dla modeli - wewnetrzna
::   WE: _a - czy zapisy tez kopiowac
::          [_b] - sprawdzenie czy wejscie
::  OLD: \przekszt1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _=1 || _b:=0 ?};
OKRO_F.cntx_psh(); OKRO_F.prefix();
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(CON_FUN.SKIDMWY);
SKID_PMP.cntx_psh(); SKID_PMP.index('UNIK');
{? SKID_MBP.first()
|| {! _i:=1..15 |! wym[_i]:=null !};
   _ok:=1;
   {! |?
      SKID_PMP.prefix(SKID_PMO.ref(),SKID_MBP.ref());
      {? SKID_PMP.first()
      || {? ~exec('przekszt2','!ctr_pdm_patw') || _ok:=0 ?}
      || UD_SCH.cntx_psh();
         exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Brak pozycji definicji przekształcenia podziałów do schematu '+
              SKID_MBP.UD_SCH().SYMBOL+'.',0,null,null,CON_FUN.SKIDMWY,'');
         UD_SCH.cntx_pop();
         _ok:=0
      ?};
      SKID_MBP.next()
   !};
   {? _ok
   || _kpold:=K__POZ.ref();
      _rodzaj:=K__POZ.RODZAJ;
      K__POZ.OKRES(); _wart:=K__POZ.WART; ROZNE.K_WY();
      K__POZ.cntx_psh();
      K__POZ.use('yb'+exec('maska','control')); K__POZ.index('K__NAG'); K__POZ.prefix();
      _jest:=0;
      {? _b
      || K_FORM.index('K_W_OBL'); K_FORM.prefix();
         UD_DEF.cntx_psh(); UD_DEF.index('PODTEC'); UD_DEF.prefix(__ud_sch,wym[1]);
         {? UD_DEF.first()
         || {? ~K_FORM.find_key(UD_DEF.ref,K_WERSJE.K_W_OBL) | K_FORM.TYP<>'F'
            || UD_DEF.index('SYMBOL'); UD_DEF.prefix(__ud_sch,#UD_DEF.ref());
               _jest:=UD_DEF.first()
            || _jest:=1
            ?}
         ?};
         UD_DEF.cntx_pop()
      ?};
      {? ~_jest & _a & exec('k__poz','control',_wart,,_rodzaj)
      || _kpnew:=K__POZ.ref();
         K__WAR.cntx_psh();
         ROZNE.K_WY();
         _maska:=exec('maska','control');
         ROZNE.K_WE();
         K__WAR.use('yx'+exec('maska','control')); K__WAR.index('K__POZ'); K__WAR.prefix(_kpold);
         {? K__WAR.first()
         || {!
            |? K__WAR.cntx_psh();
               K__WAR.use('yx'+_maska); K__WAR.prefix();
               K__WAR.K__POZ:=_kpnew; K__WAR.add();
               K__WAR.cntx_pop();
               K__WAR.next()
            !}
         ?};
         K__WAR.cntx_pop()
      ?};
      K__POZ.cntx_pop()
   ?}
?};
SKID_MBP.cntx_pop(); SKID_PMP.cntx_pop(); OKRO_F.cntx_pop()


\przekszt2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Przeksztalcenie wartosci dla modeli - wewnetrzna
::   WY: 1/0 - czy udalo sie przeksztalcenie
::  OLD: \przekszt2/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0; _el_wy:=null;
SKID_MBP.cntx_psh();
ROZNE.EL_WE:=($('K__POZ.WYMIAR'+form(SKID_PMP.WYMWE().LP,-2)))();
SKID_MBP.cntx_pop();
{? ROZNE.EL_WE<>null
|| ROZNE.EL_WE(); _el_wy:=null;
   {? SKID_PMP.RODZ_WY='W'
   || _el_wy:=ROZNE.EL_WE
   |? SKID_PMP.RODZ_WY='F'
   || _el_wy:=($SKID_PMP.FORMULA)()
   || UD_CECH.cntx_psh(); UD_CECH.index('UNIK'); UD_CECH.prefix(SKID_PMP.SCH_WE,SKID_PMP.SCH_WY);
      {? UD_CECH.first()
      || ROK_F.cntx_psh(); OKRO_F.cntx_psh(); K__POZ.OKRES().ROK();
         UD_WCECH.cntx_psh();
         UD_WCECH.index('DISP'); UD_WCECH.prefix(UD_CECH.ref(),ROZNE.EL_WE);
         {? UD_WCECH.find_le(ROK_F.POCZ_ROK,OKRO_F.NR) || _el_wy:=UD_WCECH.UD_SKLWY ?};
         ROK_F.cntx_pop(); OKRO_F.cntx_pop();
         {? _el_wy=null & SKID_PMP.EL_DOM<>null || _el_wy:=SKID_PMP.EL_DOM ?};
         UD_WCECH.cntx_pop()
      |? SKID_PMP.EL_DOM<>null
      || _el_wy:=SKID_PMP.EL_DOM
      || UD_SCH.cntx_psh();
         exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Brak definicji cechy ze schematu '+SKID_PMP.SCH_WE().SYMBOL+
              ' na schemat '+SKID_PMP.SCH_WY().SYMBOL+'.',0,null,null,null,'');
         UD_SCH.cntx_pop()
      ?};
      UD_CECH.cntx_pop()
   ?};
   {? _el_wy=null
   || UD_SCH.cntx_psh(); UD_SKL.cntx_psh();
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,
           'Przekształcenie ze schematu '+SKID_PMP.SCH_WE().SYMBOL+' na schemat '+SKID_PMP.SCH_WY().SYMBOL+
           ' - nieustalony element wyjściowy dla '+ROZNE.EL_WE().SYMBOL+'.',0,null,null,null,'');
      UD_SCH.cntx_pop(); UD_SKL.cntx_pop()
   || {? exec('spr_akt','control',_el_wy,SKID_MBP.UD_SCH)
      || wym[SKID_MBP.LP]:=_el_wy; _zwrot:=1
      ?}
   ?}
?};
_zwrot


\przekszt3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Przeksztalcenie wartosci dla modeli obliczanych formulowo
::  OLD: \przekszt3/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? __Kpoz<>K__POZ.WYMIAR01
|| __Kpoz:=K__POZ.WYMIAR01;
   exec('map_tab1','!ctr_pdm_patw');
   K__POZ.cntx_psh();
   __UD_P.prefix(K__POZ.WYMIAR01);
   {? __UD_P.first()
   || {!
      |? UD_DEF.prefix(); SKID_MBP.prefix();
         {? __UD_F.seek(__UD_P.UD_F,) & UD_DEF.seek(__UD_F.UD_DEF,) & SKID_MBP.seek(__skid_mbp)
         || _ud_skl:=UD_DEF.UD_SKL;
            __ud_sch:=SKID_MBP.UD_SCH;
            UD_SKL.prefix(); UD_SKL.seek(__UD_F.UD_WY,);
            _ud_skl2:=UD_SKL.ref();
            {? UD_DEF.seek(__UD_F.UD_DEF,)
            || _fml:=exec('get_fun_leaf','!ctr_pdm_patw');
               _lp:=1;
               __Fun:='';
               __funtab.erase();
               __funtab.index(__i_sym);
               {!
               |? _p:=_fml*'[';
                  {? _p
                  || __Fun+=(_p-1)+_fml;
                     _fml:=_p-_fml;
                     _p:=_fml*']';
                     _sym:=(_p-1)+_fml;
                     UD_DEF.cntx_psh();
                     UD_DEF.index('SCHSYM'); UD_DEF.prefix(SKID_MBP.UD_SCH,_sym,_sym);
                     {? UD_DEF.first()
                     || {? ~__funtab.find_key(UD_DEF.SYMBOL,)
                        || __funtab.SYM:=UD_DEF.SYMBOL;
                           __funtab.LP:=_lp; _lp+=1;
                           __funtab.REF:=#UD_DEF.UD_SKL;
                           __funtab.add()
                        ?};
                        __Fun+='w['+$__funtab.LP+']'
                     ?};
                     UD_DEF.cntx_pop();
                     _fml:=_p-_fml;
                     1
                  || __Fun+=_fml;
                     0
                  ?}
               !};
               VAR_DEL.delete('w'); w:=obj_new(_lp); {! _i:=1.._lp |! w[_i]:=0 !};
               __funtab.index(__i_lp); __funtab.prefix();
               {? __funtab.first()
               || {!
                  |? K__POZ.prefix(ROZNE.K_WE,OKRO_F.ref(),__funtab.REF);
                     {? K__POZ.first()
                     || {!
                        |? K__POZ.cntx_psh();
                           K__POZ.index('WYM1OST');
                           K__POZ.prefix(ROZNE.K_WE,OKRO_F.ref(),
                              K__POZ.WYMIAR02,K__POZ.WYMIAR03,K__POZ.WYMIAR04,K__POZ.WYMIAR05,K__POZ.WYMIAR06,
                              K__POZ.WYMIAR07,K__POZ.WYMIAR08,K__POZ.WYMIAR09,K__POZ.WYMIAR10,K__POZ.WYMIAR11,
                              K__POZ.WYMIAR12,K__POZ.WYMIAR13,K__POZ.WYMIAR14,K__POZ.WYMIAR15
                           );
                           {? ~__UD_IS.find_key(K__POZ.cur_prfx()+','+$#_ud_skl)
                           || __UD_IS.S:=K__POZ.cur_prfx()+','+$#_ud_skl;
                              __UD_IS.add();
                              __funtab.cntx_psh();
                              {? __funtab.first()
                              || _f:='($__Fun)()';
                                 {!
                                 |? w[__funtab.LP]:={? K__POZ.find_key(__funtab.REF) || K__POZ.WART || 0 ?};
                                    __funtab.next()
                                 !};
                                 no_msg(1); on_error(2); errno();
                                 _w:=($_f)(); _err:=errno();
                                 no_msg(0); on_error(0);
                                 {? _err || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Blad '+$_err+' przy obliczaniu elementu '+UD_SKL.SYMBOL+' ('+UD_SKL.OPIS+') (szczegóły w control.log).',0,null,null,null,'') ?};
                                 {? _err=0 & _w
                                 || K__POZ.WYMIAR01:=_ud_skl;
                                    K__POZ.WART:=_w;
                                    exec('przekszt1','!ctr_pdm_patw',0,1)
                                 ?}
                              ?};
                              __funtab.cntx_pop()
                           ?};
                           K__POZ.cntx_pop();
                           K__POZ.next()
                        !}
                     ?};
                     __funtab.next()
                  !}
               ?}
            ?}
         ?};
         __UD_P.next()
      !}
   ?};
   K__POZ.cntx_pop()
?};
1


\map_tab1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Przeksztalcenie wartosci dla modeli obliczanych formulowo
::  OLD: \map_tab1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__UD_F')<=0 | var_press('__LKWOBL')<=0 | K_WERSJE.K_W_OBL<>__LKWOBL
|| __LKWOBL:=K_WERSJE.K_W_OBL;
   VAR_DEL.delete('__UD_F','__UD_P','__funtab','__UD_IS');
   __UD_F:=tab_tmp(1,
      'UD_SKL','INTEGER','',
      'UD_DEF','INTEGER','',
      'UD_WY','INTEGER',,
      'N_WE','STRING[50]',,
      'N_WY','STRING[50]',,
      'WSP','INTEGER',
   );
   __UD_P:=tab_tmp(1,
      'UD_SKL','INTEGER','',
      'UD_F','INTEGER',''
   );
   __funtab:=tab_tmp(1,
      'SYM','STRING[16]','Symbol',
      'LP','INTEGER','LP',
      'REF','INTEGER','REF'
   );
   __UD_IS:=tab_tmp(1,
      'S','STRING[100]',''
   );
   __i_sym:=__funtab.index('?');
   __i_lp:=__funtab.ndx_tmp('',,'LP',,);
   __Fun:='';
   SKID_MBP.cntx_psh();
   SKID_MBP.index('LP');
   SKID_MBP.prefix(CON_FUN.SKIDMWE);
   __L_wym:=SKID_MBP.size();
   SKID_MBP.prefix(CON_FUN.SKIDMWE,1);
   {? SKID_MBP.first()
   || __skid_mbp:=SKID_MBP.ref();
      __ud_sch:=SKID_MBP.UD_SCH;
      UD_DEF.cntx_psh();
      UD_DEF.index('PODTEC'); UD_DEF.prefix(SKID_MBP.UD_SCH);
      {? UD_DEF.first()
      || {!
         |? UD_DEF.cntx_psh(); UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_DEF.ref());
            _tre:=UD_DEF.first();
            UD_DEF.cntx_pop();
            K_FORM.index('K_W_OBL'); K_FORM.prefix();
            SKIDXDUD.index('POZ'); SKIDXDUD.prefix();
            {? (~SKIDXDUD.find_key(UD_DEF.UD_SKL) | SKIDXDUD.ONLY_L='N') &
               _tre & (~K_FORM.find_key(UD_DEF.ref(),K_WERSJE.K_W_OBL) | K_FORM.TYP<>'W') |
               ~_tre & K_FORM.find_key(UD_DEF.ref(),K_WERSJE.K_W_OBL) & K_FORM.TYP='F'
            || __UD_F.UD_SKL:=UD_DEF.UD_SKL;
               __UD_F.UD_DEF:=UD_DEF.ref();
               __UD_F.N_WE:=UD_DEF.SYMBOL;
               __UD_F.add();
               _fml:=exec('get_fun_leaf','!ctr_pdm_patw');
               {!
               |? _p:=_fml*'[';
                  {? _p
                  || _fml:=_p-_fml;
                     _p:=_fml*']';
                     _sym:=(_p-1)+_fml;
                     UD_DEF.cntx_psh();
                     UD_DEF.index('SCHSYM'); UD_DEF.prefix(SKID_MBP.UD_SCH,_sym,_sym);
                     {? UD_DEF.first()
                     || __UD_P.UD_F:=__UD_F.ref();
                        __UD_P.UD_SKL:=UD_DEF.UD_SKL;
                        __UD_P.add()
                     ?};
                     UD_DEF.cntx_pop();
                     _fml:=_p-_fml;
                     1
                  || 0
                  ?}
               !}
            ?};
            UD_DEF.next()
         !}
      ?};
      UD_DEF.cntx_pop()
   ?};
   SKID_MBP.cntx_pop()
?}


\form_zew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Wykonanie formul zewnetrznych
::  OLD: \form_zew/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.FORM_INI<>'' || ($CON_FUN.FORM_INI)() ?};
{? CON_FUN.PAR01
|| _formrok:={? CON_FUN.FORM_ROK='' || '1' || CON_FUN.FORM_ROK ?};
   _formokr:={? CON_FUN.FORM_OKR='' || '1' || CON_FUN.FORM_OKR ?};
   exec('petla','!ctr_pdm_patw',CON_FUN.FORM,0,_formrok,_formokr,0,1)
|| ($CON_FUN.FORM)()
?};
{? CON_FUN.FORM_KON<>'' || ($CON_FUN.FORM_KON)() ?}


\erase_agreg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Kasowanie agregacji podzialow
::  OLD: \erase_agreg/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBN.cntx_psh(); SKID_MBN.prefix(); CON_FUN.SKIDMWE();
SKID_MBP.cntx_psh();
SKID_MBP.index('LP'); SKID_MBP.prefix(CON_FUN.SKIDMWE);
ile_wym:=SKID_MBP.size(); all_usu:=obj_new(ile_wym);
SKID_MBP.cntx_pop();
{? ile_wym
|| {! _i:=1..ile_wym |! all_usu[_i]:=1 !};
   exec('mapa_usu','!ctr_pdm_patw');
   {? var_pres('MAPAUSU')>0
   || _fml:="exec('usun_wybrane','control')"
   || _fml:=~~
   ?};
   exec('agregacja','!ctr_pdm_patw','1', '0,1,2,4,5,6,7'+{? CON_FUN.PAR01 || ',3' || '' ?},_fml)
?};
VAR_DEL.delete('MAPAUSU','ile_wym','all_usu');
SKID_MBN.cntx_pop()


\mapa_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Mapa danych do skasowania
::  OLD: \mapa_usu/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_czy_map:=0;
SKID_MBK.cntx_psh();
SKID_MBK.index('UNIK'); SKID_MBK.prefix(CON_FUN.ref());
{? SKID_MBK.first()
|| {!
   |? {? SKID_MBK.SP_KOP<>1 || _czy_map:=1; all_usu[SKID_MBK.SKID_MBP().LP]:=0 ?};
      SKID_MBK.next()
   !}
?};
SKID_MBK.cntx_pop();
{? _czy_map
|| MAPAUSU:=tab_tmp(2,
      'NRWYM','INTEGER','',
      'UD_SKL','STRING[20]','',
      'CZY_USU','INTEGER',''
   )
?}


\agregacja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Agregacja - formula uniwersalna
::   WE: _a - uruchamiana formula
::       _b - rodzaj wartosci agregowanych (zgodne z K__POZ.RODZAJ), string z wartosciami oddzielonymi przecinkami
::       _c - formuła czy usuwać
::  OLD: \agregacja/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
K__NAG.cntx_psh(); K__NAG.index('UNIK1'); CON_FUN.KWER1();
OKRO_F.cntx_psh(); ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
_rkon:=UD_POM.OKR_KON().ROK;
UD_POM.OKR_POCZ().ROK();
{!
|? K__NAG.prefix(REF.FIRMA,SKID_MBN.ref(),K_WERSJE.ref(),ROK_F.ref());
   {? ~K__NAG.first() || exec('add_knag','control') ?};
   {? K__NAG.first()
   || {? K__NAG.r_lock(1,1)
      || K__POZ.cntx_psh();
         ROK_F.cntx_psh(); OKRO_F.cntx_psh();
         exec('ust_okr_knag','!ctr_pdm_patw');
         {? UD_POM.OKR_P<>null & UD_POM.OKR_K<>null
         || exec('usu_mod2','control', _b,{? var_press('_c') || _c || ~~ ?});
            ($_a)()
         ?};
         ROK_F.cntx_pop(); OKRO_F.cntx_pop(); K__POZ.cntx_pop();
         K__NAG.r_unlock()
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja agregacji wartości dla modelu '+SKID_MBN.KOD+' wersji '+K_WERSJE.SYM+' i roku '+ROK_F.NAZ+' jest obsługiwana przez innego operatora.',
              0,ROK_F.ref(),null,SKID_MBN.ref(),'')
      ?}
   ?};
   ROK_F.ref()<>UD_POM.ROK_KON & ROK_F.next()
!};
ROK_F.cntx_pop(); OKRO_F.cntx_pop(); K__NAG.cntx_pop()


\k_noty_agr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Funkcja agregacji not do wartosci dla controllingu
::  OLD: \k_noty_agr/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
K__NOTY.cntx_psh();
K__PNOTY.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
OKRO_F.index('ROK');
K__NAG.index('UNIK1');
SKID_MBN.index('EWID_KOD'); SKID_MBN.prefix('T');
K_WERSJE.index('KALK_SYM'); K_WERSJE.prefix('N');
{? ROK_F.first()
|| UD_POM.ROK_POCZ();
   {!
   |? {? CON_FUN.KWER1 | K_WERSJE.first()
      || {? CON_FUN.KWER1 || CON_FUN.KWER1() ?};
         {!
         |? {? CON_FUN.SKIDMWE | SKID_MBN.first()
            || {? CON_FUN.SKIDMWE || CON_FUN.SKIDMWE() ?};
               {!
               |? K__NAG.prefix(REF.FIRMA,SKID_MBN.ref(),K_WERSJE.ref(),ROK_F.ref());
                  {? K__NAG.first()
                  || {!
                     |? OKRO_F.prefix(ROK_F.ref());
                        {? OKRO_F.first()
                        || {? ROK_F.ref()=UD_POM.ROK_POCZ || UD_POM.OKR_POCZ() ?};
                           {!
                           |? {? exec('can_fun_run','control',1)
                              || K__POZ.use('yb'+exec('maska','control'));
                                 K__POZ.index('RODZAJ');
                                 K__WAR.use('yx'+exec('maska','control'));
                                 K__WAR.index('K__POZ');
                                 K__POZ.prefix(5,K__NAG.ref(),OKRO_F.ref());
                                 {? K__POZ.first()
                                 || {!
                                    |? K__WAR.prefix(K__POZ.ref());
                                       {? K__WAR.first() || {! |? K__WAR.del !} ?};
                                       K__POZ.del()
                                    !}
                                 ?}
                              ?};
                              UD_POM.OKR_KON<>OKRO_F.ref() & OKRO_F.next()
                           !}
                        ?};
                        K__NAG.next()
                     !}
                  ?};
                  CON_FUN.SKIDMWE=null & SKID_MBN.next()
               !}
            ?};
            CON_FUN.KWER1=null & K_WERSJE.next()
         !}
      ?};
      UD_POM.ROK_KON<>ROK_F.ref() & ROK_F.next()
   !}
?};
{? ROK_F.first()
|| UD_POM.ROK_POCZ();
   {!
   |? _ostM:=null;
      K__NOTY.use('notyco'+ROK_F.KOD);
      K__PNOTY.use('notypo'+ROK_F.KOD);
      {? CON_FUN.SKIDMWE & CON_FUN.KWER1
      || K__NOTY.index('SKID_MBN');
         K__NOTY.prefix('T',CON_FUN.SKIDMWE,CON_FUN.KWER1)
      |? CON_FUN.SKIDMWE
      || K__NOTY.index('SKID_MBN');
         K__NOTY.prefix('T',CON_FUN.SKIDMWE)
      |? CON_FUN.KWER1
      || K__NOTY.index('K_WERSJE');
         K__NOTY.prefix('T',CON_FUN.KWER1)
      || K__NOTY.index('SKID_MBN');
         K__NOTY.prefix('T')
      ?};
      K__PNOTY.index('K__NOTY');
      {? K__NOTY.first()
      || {!
         |? {? K__NOTY.SKID_MBN<>_ostM | K__NOTY.K_WERSJE<>_ostW
            || _ostM:=K__NOTY.SKID_MBN;
               _ostW:=K__NOTY.K_WERSJE;
               K__NOTY.SKID_MBN();
               K__NOTY.K_WERSJE();
               K__NAG.index('UNIK1');
               K__NAG.prefix(REF.FIRMA,SKID_MBN.ref(),K_WERSJE.ref(),ROK_F.ref());
               {? ~K__NAG.first() || exec('add_knag','control') ?}
            ?};
            {? K__NAG.first()
            || OKRO_F.prefix(ROK_F.ref());
               {? OKRO_F.first()
               || {? ROK_F.ref()=UD_POM.ROK_POCZ || UD_POM.OKR_POCZ() ?};
                  {!
                  |? {? exec('can_fun_run','control',1)
                     || K__POZ.use('yb'+exec('maska','control'));
                        K__POZ.index('RODZAJ');
                        K__WAR.use('yx'+exec('maska','control'));
                        K__WAR.index('K__POZ');
                        K__WAR.prefix();
                        K__POZ.prefix(5,K__NAG.ref(),OKRO_F.ref());
                        K__PNOTY.prefix(K__NOTY.ref(),OKRO_F.ref());
                        {? K__PNOTY.first()
                        || {!
                           |? {? K__POZ.find_key(K__PNOTY.WYM1,K__PNOTY.WYM2,K__PNOTY.WYM3,K__PNOTY.WYM4,K__PNOTY.WYM5)
                              || K__POZ.WART+=K__PNOTY.WART;
                                 _ok:=K__POZ.put()
                              || K__POZ.blank();
                                 K__POZ.K__NAG:=K__NAG.ref();
                                 K__POZ.OKRES:=OKRO_F.ref();
                                 K__POZ.WART:=K__PNOTY.WART;
                                 K__POZ.WYMIAR01:=K__PNOTY.WYM1;
                                 K__POZ.WYMIAR02:=K__PNOTY.WYM2;
                                 K__POZ.WYMIAR03:=K__PNOTY.WYM3;
                                 K__POZ.WYMIAR04:=K__PNOTY.WYM4;
                                 K__POZ.WYMIAR05:=K__PNOTY.WYM5;
                                 K__POZ.RODZAJ:=5;
                                 _ok:=K__POZ.add()
                              ?};
                              {? _ok
                              || K__WAR.blank(1);
                                 K__WAR.K__POZ:=K__POZ.ref();
                                 K__WAR.SYM:=K__NOTY.SYM;
                                 K__WAR.DATA:=K__NOTY.DO;
                                 K__WAR.OPIS:=K__NOTY.OPIS;
                                 K__WAR.REF_DOK:=$K__NOTY.ref();
                                 K__WAR.KW:=K__PNOTY.WART;
                                 K__WAR.RODZAJ:=5;
                                 K__WAR.add()
                              ?};
                              K__PNOTY.next()
                           !}
                        ?}
                     ?};
                     UD_POM.OKR_KON<>OKRO_F.ref() & OKRO_F.next()
                  !}
               ?}
            ?};
            K__NOTY.next()
         !}
      ?};
      UD_POM.ROK_KON<>ROK_F.ref() & ROK_F.next()
   !}
?};
K__NOTY.cntx_pop();
K__PNOTY.cntx_pop()


\akt_war_wsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Aktualizacja i kasowanie wartosci dla wskaznikow pomocniczych
::   WE: _a - uruchamiana funkcja (aktualizacyjna lub kasujaca dane)
::  OLD: \akt_war_wsk/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_dalej:=1;
{? UD_POM.ROK_POCZ<>UD_POM.ROK_KON
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Funkcja może być uruchomiona dla okresów z jednego roku obrachunkowego.',1,null,null,null,''); _dalej:=0
?};
{? _dalej
|| {? CON_FUN.MODEL=null
   || SKID_MBN.cntx_psh(); SKID_MBN.index('EWID_KOD'); SKID_MBN.prefix('T');
      {? SKID_MBN.first()
      || {! |?
            exec('akt_war_wsk1','!ctr_pdm_patw',_a);
            SKID_MBN.next()
         !}
      ?};
      SKID_MBN.cntx_pop()
   || CON_FUN.MODEL(); exec('akt_war_wsk1','!ctr_pdm_patw',_a)
   ?}
?}


\akt_war_wsk1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Aktualizacja i kasowanie wartosci dla wskaznikow pomocniczych - wewnetrzna
::   WE: _a - uruchamiana funkcja (aktualizacyjna lub kasujaca dane)
::  OLD: \akt_war_wsk1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.K_WERSJE=null
|| K_WERSJE.cntx_psh();
   K_WERSJE.index('SYM'); K_WERSJE.prefix();
   {? K_WERSJE.first()
   || {! |?
         ($_a)();
         K_WERSJE.next()
      !}
   ?};
   K_WERSJE.cntx_pop()
|| CON_FUN.K_WERSJE(); ($_a)()
?}


\akt_war_wsk2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Aktualizacja wartosci dla wskaznikow pomocniczych - wewnetrzna
::  OLD: \akt_war_wsk2/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBN.cntx_psh(); K_WERSJE.cntx_psh();
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
UD_POM.OKR_POCZ().ROK();
K__NAG.cntx_psh();
K__NAG.index('UNIK1'); K__NAG.prefix(REF.FIRMA,SKID_MBN.ref(),K_WERSJE.ref(),ROK_F.ref());
{? ~K__NAG.first()
|| exec('add_knag','control')
?};
{? K__NAG.first()
|| {? K__NAG.r_lock(1,1)
   || {? exec('mapa_wsk','!ctr_pdm_patw')
      || {? CON_FUN.PAR01
         || exec('akt_war_wsk4','!ctr_pdm_patw')
         || exec('akt_war_wsk3','!ctr_pdm_patw',0);
            exec('akt_war_wsk3','!ctr_pdm_patw',1);
            exec('akt_war_wsk3','!ctr_pdm_patw',3)
         ?}
      ?};
      K__NAG.r_unlock()
   || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja agregacji wartości dla modelu '+SKID_MBN.KOD+' wersji '+K_WERSJE.SYM+' i roku '+ROK_F.NAZ+' jest obsługiwana przez innego operatora.',
           0,ROK_F.ref(),null,SKID_MBN.ref(),'')
   ?}
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono definicji agregacji wartości dla modelu '+SKID_MBN.KOD+' wersji '+K_WERSJE.SYM+' i roku '+ROK_F.NAZ+'.',
        0,ROK_F.ref(),null,SKID_MBN.ref(),'')
?};
ROK_F.cntx_pop(); SKID_MBN.cntx_pop(); K_WERSJE.cntx_pop(); K__NAG.cntx_pop();
VAR_DEL.delete('MAPA_WSK')


\mapa_wsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Mapa wskaznikow
::  OLD: \mapa_wsk/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
MAPA_WSK:=tab_tmp(5,'CON_WSK','STRING[20]','',
                    'OKRO_F','STRING[20]','',
                    'UD_TYP','STRING[20]','',
                    'UD_SCH','STRING[20]','',
                    'UD_SKL','STRING[20]','',
                    'UD_SKLI','INTEGER',''
                 );
CON_NWSK.cntx_psh();
CON_NWSK.index('UNIK'); CON_NWSK.prefix(REF.FIRMA,ROK_F.ref(),SKID_MBN.ref(),K_WERSJE.ref());
{? CON_NWSK.first()
|| _zwrot:=1;
   CON_WSK.cntx_psh(); CON_WSK.index('UNIK');
   OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(UD_POM.ROK_POCZ);
   UD_POM.OKR_POCZ();
   {! |?
      CON_WSK.prefix(CON_NWSK.ref(),OKRO_F.ref());
      {? CON_WSK.first()
      || {! |?
            {? exec('spr_pbud_wsk','!ctr_pdm_patw') || exec('mapa_wsk1','!ctr_pdm_patw') ?};
            CON_WSK.next()
         !}
      ?};
      OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
   !};
   OKRO_F.cntx_pop(); CON_WSK.cntx_pop()
?};
CON_NWSK.cntx_pop();
_zwrot


\mapa_wsk1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Mapa wskaznikow - wewnetrzna
::  OLD: \mapa_wsk1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.cntx_psh(); UD_DEF.index('PODTEC');
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
{? SKID_MBP.first() & SKID_MBP.size()>1
|| {! |?
      {? SKID_MBP.LP>1
      || _elem:={? SKID_MBP.LP=2 || CON_WSK.JORG
                |? SKID_MBP.LP=3 || CON_WSK.OKOSZ
                |? SKID_MBP.LP=4 || CON_WSK.WYM4
                || CON_WSK.WYM5
                ?};
         SKID_MBP.UD_SCH().UD_TYP();
         UD_DEF.prefix(UD_SCH.ref(),_elem);
         {? UD_DEF.first()
         || UD_DEF.cntx_psh(); UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref(),UD_DEF.ref());
            {? UD_DEF.first()
            || UD_DEF.cntx_pop(); exec('mapa_wsk2','!ctr_pdm_patw')
            || UD_DEF.cntx_pop(); exec('mapa_wsk_add','!ctr_pdm_patw')
            ?}
         ?}
      ?};
      SKID_MBP.next()
   !}
?};
SKID_MBP.cntx_pop(); UD_DEF.cntx_pop()


\mapa_wsk2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Mapa wskaznikow - wewnetrzna
::  OLD: \mapa_wsk2/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_DEF.cntx_psh();
UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref(),UD_DEF.ref());
{? UD_DEF.first()
|| {! |?
      UD_DEF.cntx_psh(); UD_DEF.index('SYMBOL'); UD_DEF.prefix(UD_SCH.ref(),UD_DEF.ref());
      {? UD_DEF.first()
      || UD_DEF.cntx_pop(); exec('mapa_wsk2','!ctr_pdm_patw')
      || UD_DEF.cntx_pop(); exec('mapa_wsk_add','!ctr_pdm_patw')
      ?};
      UD_DEF.next()
   !}
?};
UD_DEF.cntx_pop()


\mapa_wsk_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Mapa wskaznikow - dodawanie rekordow
::  OLD: \mapa_wsk_add/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? UD_DEF.UD_SKL().LISTA='T' & UD_SKL.AKTYWNY='T'
|| MAPA_WSK.prefix();
   MAPA_WSK.prefix($CON_WSK.ref(),$OKRO_F.ref(),$UD_TYP.ref(),$UD_SCH.ref(),$UD_SKL.ref());
   {? ~MAPA_WSK.first()
   || MAPA_WSK.blank(1);
      MAPA_WSK.CON_WSK:=$CON_WSK.ref();
      MAPA_WSK.OKRO_F:=$OKRO_F.ref();
      MAPA_WSK.UD_TYP:=$UD_TYP.ref();
      MAPA_WSK.UD_SCH:=$UD_SCH.ref();
      MAPA_WSK.UD_SKL:=$UD_SKL.ref();
      MAPA_WSK.UD_SKLI:=#UD_SKL.ref();
      MAPA_WSK.add()
   ?}
?}


\spr_pbud_wsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie pozycji budzetowej z definicji wskaznikow
::   WY: 1/0 - pozycja jest zdefiniowana poprawnie / niepoprawnie
::  OLD: \spr_pbud_wsk/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0;
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(CON_NWSK.SKID_MBN,1);
{? SKID_MBP.first()
|| UD_DEF.cntx_psh();
   UD_DEF.index('PODTEC'); UD_DEF.prefix(SKID_MBP.UD_SCH,CON_WSK.PBUD);
   {? UD_DEF.first()
   || _zwrot:=1;
      UD_DEF.UD_SKL();
      {? UD_SKL.AKTYWNY<>'T' || _zwrot:=0 ?};
      {? _zwrot
      || _sym:=UD_DEF.SYMBOL;
         UD_DEF.cntx_psh();
         UD_DEF.index('SYMBOL'); UD_DEF.prefix(SKID_MBP.UD_SCH,UD_DEF.ref());
         {? UD_DEF.first() || _zwrot:=0 ?};
         UD_DEF.cntx_pop()
      ?}
   ?};
   UD_DEF.cntx_pop()
?};
SKID_MBP.cntx_pop();
{? ~_zwrot
|| SKID_MBN.cntx_psh();
   exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja wskaźników dla modelu '+CON_NWSK.SKID_MBN().KOD+
        ' wersji '+K_WERSJE.SYM+' i roku '+ROK_F.NAZ+' - nieprawidłowo zdefiniowana pozycja budżetowa wskaźnika.',
        0,ROK_F.ref(),null,CON_NWSK.SKID_MBN,'');
   SKID_MBN.cntx_pop()
?};
_zwrot


\akt_war_wsk3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Aktualizacja wartosci dla wskaznikow pomocniczych - wewnetrzna
::   WE: _a - 0 - dolaczanie wskaznikow dla wierszy zwyklych
::            1 - dolaczanie wskaznikow dla wierszy powstalych z alokacji
::            3 - wartosci z harmonogramow budzetowych
::  OLD: \akt_war_wsk3/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_NWSK.cntx_psh();
CON_NWSK.index('UNIK'); CON_NWSK.prefix(REF.FIRMA,ROK_F.ref(),SKID_MBN.ref(),K_WERSJE.ref());
{? CON_NWSK.first()
|| CON_WSK.cntx_psh(); CON_WSK.index('UNIK');
   K__POZ.cntx_psh();
   OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(UD_POM.ROK_POCZ);
   UD_POM.OKR_POCZ();
   {!
   |? {? exec('can_fun_run','control',1)
      || K__POZ.use('yb'+exec('maska','control'));
         K__POZ.index('RODZAJ');
         K__POZ.prefix(_a,K__NAG.ref(),OKRO_F.ref());
         {? K__POZ.first()
         || {!
            |? CON_WSK.prefix(CON_NWSK.ref(),OKRO_F.ref());
               {? CON_WSK.first()
               || {!
                  |? exec('add_wsk','!ctr_pdm_patw');
                     CON_WSK.next()
                  !}
               ?};
               K__POZ.next()
            !}
         ?}
      ?};
      OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
   !};
   OKRO_F.cntx_pop(); K__POZ.cntx_pop(); CON_WSK.cntx_pop()
?};
CON_NWSK.cntx_pop()


\add_wsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Dodawanie wierszy wskaznikowych
::  OLD: \add_wsk/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
{? SKID_MBP.first() & SKID_MBP.size()>1
|| _ok:=1;
   {! |?
      {? SKID_MBP.LP>1
      || SKID_MBP.UD_SCH().UD_TYP();
         _elem:={? SKID_MBP.LP=2 || K__POZ.WYMIAR02
                |? SKID_MBP.LP=3 || K__POZ.WYMIAR03
                |? SKID_MBP.LP=4 || K__POZ.WYMIAR04
                || K__POZ.WYMIAR05
                ?};
         MAPA_WSK.prefix($CON_WSK.ref(),$OKRO_F.ref(),$UD_TYP.ref(),$UD_SCH.ref(),$_elem);
         _ok:=MAPA_WSK.first()
      ?};
      _ok & SKID_MBP.next()
   !};
   {? _ok || exec('add_wsk1','!ctr_pdm_patw') ?}
|| exec('add_wsk1','!ctr_pdm_patw')
?};
SKID_MBP.cntx_pop()


\add_wsk1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Dodawanie wierszy wskaznikowych - wewnetrzna
::  OLD: \add_wsk1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
K__POZ.cntx_psh(); K__POZ.index('RODZAJ');
K__POZ.prefix(2,K__POZ.K__NAG,OKRO_F.ref(),CON_WSK.PBUD,K__POZ.WYMIAR02,K__POZ.WYMIAR03,K__POZ.WYMIAR04,K__POZ.WYMIAR05);
{? K__POZ.first()
|| K__POZ.RODZAJ:=2;
   K__POZ.WART:=CON_WSK.WART; K__POZ.put()
|| K__POZ.RODZAJ:=2;
   K__POZ.WYMIAR01:=CON_WSK.PBUD;
   K__POZ.WART:=CON_WSK.WART;
   K__POZ.add()
?};
K__POZ.cntx_pop()


\akt_war_wsk4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [$1210]
:: OPIS: Aktualizacja wartosci dla wskaznikow pomocniczych - wewnetrzna
::       Wykonywana dla wszystkich "lisci"
::  OLD: \akt_war_wsk4/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_NWSK.cntx_psh();
CON_NWSK.index('UNIK'); CON_NWSK.prefix(REF.FIRMA,ROK_F.ref(),SKID_MBN.ref(),K_WERSJE.ref());
{? CON_NWSK.first()
|| CON_WSK.cntx_psh(); CON_WSK.index('UNIK');
   K__POZ.cntx_psh();
   OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(UD_POM.ROK_POCZ);
   UD_POM.OKR_POCZ();
   {!
   |? {? exec('can_fun_run','control',1)
      || K__POZ.use('yb'+exec('maska','control')); K__POZ.index('RODZAJ');
         CON_WSK.prefix(CON_NWSK.ref(),OKRO_F.ref());
         {? CON_WSK.first()
         || {! |?
               exec('add_wsk2','!ctr_pdm_patw');
               CON_WSK.next()
            !}
         ?}
      ?};
      OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
   !};
   OKRO_F.cntx_pop(); K__POZ.cntx_pop(); CON_WSK.cntx_pop()
?};
CON_NWSK.cntx_pop()


\add_wsk2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Dodawanie wierszy wskaznikowych - dla wszystkich elementow
::  OLD: \add_wsk2/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
{? SKID_MBP.first()
|| wlp_wym:=1; wil_wym:=SKID_MBP.size();
   K__POZ.cntx_psh(); K__POZ.index('K__NAG'); K__POZ.prefix();
   K__POZ.blank(1);
   K__POZ.RODZAJ:=2;
   K__POZ.K__NAG:=K__NAG.ref();
   K__POZ.OKRES:=OKRO_F.ref();
   K__POZ.WYMIAR01:=CON_WSK.PBUD;
   K__POZ.WART:=CON_WSK.WART;
   {? wil_wym=1
   || K__POZ.add(1)
   || UD_SKL.cntx_psh(); UD_SKL.prefix();
      exec('add_wsk3','!ctr_pdm_patw');
      UD_SKL.cntx_pop()
   ?};
   K__POZ.cntx_pop();
   VAR_DEL.delete('wlp_wym','wil_wym')
?};
SKID_MBP.cntx_pop()


\add_wsk3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Dodawanie wierszy wskaznikowych - dla wszystkich elementow - wewnetrzna
::  OLD: \add_wsk3/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
wlp_wym+=1;
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref(),wlp_wym);
{? SKID_MBP.first()
|| SKID_MBP.UD_SCH().UD_TYP();
   MAPA_WSK.cntx_psh(); MAPA_WSK.prefix($CON_WSK.ref(),$OKRO_F.ref(),$UD_TYP.ref(),$UD_SCH.ref());
   {? MAPA_WSK.first()
   || {! |?
         {? UD_SKL.seek(MAPA_WSK.UD_SKLI,UD_SKL.name())
         || ($('K__POZ.WYMIAR0'+$wlp_wym+':=UD_SKL.ref()'))();
            {? wlp_wym<wil_wym
            || _wym:=wlp_wym; exec('add_wsk3','!ctr_pdm_patw'); wlp_wym:=_wym
            || K__POZ.cntx_psh(); K__POZ.prefix();
               K__POZ.add(1);
               K__POZ.cntx_pop()
            ?}
         ?};
         MAPA_WSK.next()
      !}
   ?};
   MAPA_WSK.cntx_pop()
?};
SKID_MBP.cntx_pop()


\del_war_wsk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Kasowanie wartosci dla wskaznikow pomocniczych - wewnetrzna
::  OLD: \del_war_wsk/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBN.cntx_psh(); K_WERSJE.cntx_psh();
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
UD_POM.OKR_POCZ().ROK();
K__NAG.cntx_psh(); K__NAG.index('UNIK1'); K__NAG.prefix(REF.FIRMA,SKID_MBN.ref(),K_WERSJE.ref(),ROK_F.ref());
{? K__NAG.first()
|| {? K__NAG.r_lock(1,1)
   || K__POZ.cntx_psh();
      OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix(UD_POM.ROK_POCZ);
      {!
      |? {? exec('can_fun_run','control',1)
         || K__POZ.use('yb'+exec('maska','control')); K__POZ.index('RODZAJ');
            K__POZ.prefix(2,K__NAG.ref(),OKRO_F.ref());
            {? K__POZ.first() || {! |? K__POZ.del() !} ?}
         ?};
         OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
      !};
      OKRO_F.cntx_pop(); K__POZ.cntx_pop();
      K__NAG.r_unlock()
   || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja agregacji wartości dla modelu '+SKID_MBN.KOD+' wersji '+K_WERSJE.SYM+' i roku '+ROK_F.NAZ+' jest obsługiwana przez innego operatora.',
           0,ROK_F.ref(),null,SKID_MBN.ref(),'')
   ?}
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono definicji agregacji wartości dla modelu '+SKID_MBN.KOD+' wersji '+K_WERSJE.SYM+' i roku '+ROK_F.NAZ+'.',
         0,ROK_F.ref(),null,SKID_MBN.ref(),'')
?};
ROK_F.cntx_pop(); SKID_MBN.cntx_pop(); K_WERSJE.cntx_pop(); K__NAG.cntx_pop()


\hed_akt_con
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Formula na naglowek - aktualizacja danych controllingowych
::  OLD: \hed_akt_con/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
'Aktualizacja danych controllingowych'


\bod_akt_con
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Formula na tresc maila - aktualizacja danych controllingowych
::  OLD: \bod_akt_con/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_tekst:='<BR><BR>';
_tekst+='<CENTER><H2>Komunikaty powstałe podczas aktualizacji</H2></CENTER>'+'<BR><BR>';
CON_FUNL.cntx_psh();
CON_FUNL.prefix();
{? var_press('ConFunL')>0 & CON_FUNL.seek(ConFunL)
|| _tekst+='<ol type ="1">';
   CON_FUNZ.cntx_psh(); CON_FUNZ.use('conp'+(4+$CON_FUNL.DATA));
   CON_FUNZ.index('DISP'); CON_FUNZ.prefix(CON_FUNL.ref());
   {? CON_FUNZ.first()
   || _tekst+='<table align=\"center\" valign=\"top\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\"  width=\"100%\">';
      _tekst+='<tr class="head">'+
              '<td align=left>Funkcja</td>'+
              '<td align=left>Rok</td>'+
              '<td align=left>Okres</td>'+
              '<td align=left>Model</td>'+
              '<td align=left>Opis</td>';
      {!
      |? _tekst+='<tr class="wiersz">'+
                 '<td align=left>'+CON_FUNZ.SYM+'</td>'+
                 '<td align=left>'+{? CON_FUNZ.ROK_F || CON_FUNZ.ROK_F().NAZ || '' ?}+'</td>'+
                 '<td align=left>'+{? CON_FUNZ.OKRO_F || CON_FUNZ.OKRO_F().NAZ || '' ?}+'</td>'+
                 '<td align=left>'+{? CON_FUNZ.SKID_MBN || CON_FUNZ.SKID_MBN().KOD || '' ?}+'</td>'+
                 '<td align=left>'+CON_FUNZ.OPIS+'</td>';
         CON_FUNZ.next()
      !};
      _tekst+='</table><BR>'
   ?};
   CON_FUNZ.cntx_pop();
   _tekst+='</ol>'
?};
CON_FUNL.cntx_pop();
_tekst+='<BR><BR>';
_tekst


\cfun_upd_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Uruchomienie funkcji aktualizacji wartosci danych controllingowych
::   WE: _a - z przetwarzaniem kostki
::  OLD: \cfun_upd_wart/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
exec('b_get_fun_leaf','!ctr_pdm_patw');
exec('fun_leaf','!ctr_pdm_patw',2);
exec('a_get_fun_leaf','!ctr_pdm_patw');
{? exec('can_run','control',0)
|| _f:=exec('fconfig_prolog','control');
   {? _f
   || _ok:=0;
      SKID_MBN.cntx_psh(); SKID_MBN.prefix(); CON_FUN.SKIDMWE();
      K_WERSJE.index('SYM'); K_WERSJE.prefix(); CON_FUN.K_WERSJE();
      exec('k_insmbn','konsolidacja');
      {? K_INSMBN.CZY_INST<>'T'
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie zainstalowano kostki dla modelu '+SKID_MBN.KOD+'.',0,null,null,SKID_MBN.ref(),'')
      || {? CON_FUN.K_WERSJE | K_WERSJE.first()
         || {!
            |? _r:=exec('spr_tree','!ctr_pdm_patw',CON_FUN.SKIDMWE,K_WERSJE.ref(),1);
               {? _r
               || exec('fconfig_value','control',_f,2,0)
               || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Aktualizacja modelu '+SKID_MBN.KOD+' ('+K_WERSJE.SYM+') nie powiodła się.',0,null,null,null,'')
               ?};
               _ok+=_r;
               CON_FUN.K_WERSJE=null & K_WERSJE.next()
            !}
         ?};
         {? _a || exec('fconfig_proces','control',_f) ?}
      ?};
      fclose(_f);
      {? _ok & exec('run_exe','control')
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Aktualizacja modelu danych nie powiodła się.',0,null,null,null,'')
      ?};
      SKID_MBN.cntx_pop()
   || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie zasilono modelu danych. Nie utworzono pliku konfiguracyjnego.',0,null,null,null,'')
   ?}
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie ustawiono adresów serwerów w parametrach programu.',0,null,null,null,'')
?}


\spr_tree
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [1210]
:: OPIS: Sprawdza, czy wszystkie elementy wymiarow wartosci zagregowanych wystepuja w drzewie.
::       Jesli chociaz jeden element nie wystepuje w drzewie funkcja zwraca 0.
::       Uruchamiana jest dla przedzialu lat i okresow z parametrow uruchomienia.
::   WE: _a - ref modelu
::       _b - ref wersji
::       _c - 1/0 - zapisywac komunikaty o bledach
::  OLD: \spr_tree/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
UD_DEF.cntx_psh(); UD_DEF.index('PODTEC');
UD_SCH.cntx_psh(); UD_SCH.prefix();
SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(_a);
_ile_wym:=SKID_MBP.size();
UD_SKL.cntx_psh(); UD_SKL.prefix();
K__NAG.cntx_psh(); K__NAG.index('UNIK1');
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
OKRO_F.cntx_psh(); OKRO_F.index('ROK');
{? ROK_F.seek(UD_POM.ROK_POCZ) & _ile_wym
|| {! |?
      ROK_F.cntx_psh();
      OKRO_F.prefix(ROK_F.ref());
      {? (ROK_F.ref()=UD_POM.ROK_POCZ & OKRO_F.seek(UD_POM.OKR_POCZ)) | (ROK_F.ref()<>UD_POM.ROK_POCZ & OKRO_F.first())
      || K__NAG.prefix(REF.FIRMA,_a,_b,ROK_F.ref());
         {? K__NAG.first()
         || K__POZ.cntx_psh(); K__POZ.use('yb'+K__NAG.KOD); K__POZ.index('K__NAG');
            {! |?
               OKRO_F.cntx_psh();
               K__POZ.prefix(K__NAG.ref(),OKRO_F.ref());
               {? K__POZ.first()
               || {! |?
                     {! _i:=1.._ile_wym
                     |! SKID_MBP.prefix(_a,_i);
                        {? SKID_MBP.first()
                        || ($('K__POZ.WYMIAR'+form(_i,-2)+'()'))();
                           SKID_MBP.UD_SCH();
                           UD_DEF.prefix(UD_SCH.ref(),UD_SKL.ref());
                           {? ~UD_DEF.first()
                           || {? _c || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Element o symbolu '+UD_SKL.SYMBOL+' ('+UD_SKL.OPIS+') nie jest wykorzystywany w schemacie '+UD_SCH.SYMBOL+'.',0,null,null,null,'') ?};
                              _zwrot:=0
                           ?}
                        ?}
                     !};
                     K__POZ.next()
                  !}
               ?};
               OKRO_F.cntx_pop();
               OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
            !};
            K__POZ.cntx_pop()
         ?}
      ?};
      ROK_F.cntx_pop();
      ROK_F.ref()<>UD_POM.ROK_KON & ROK_F.next()
   !}
?};
OKRO_F.cntx_pop(); ROK_F.cntx_pop();
K__NAG.cntx_pop(); UD_SKL.cntx_pop(); SKID_MBP.cntx_pop(); UD_SCH.cntx_pop(); UD_DEF.cntx_pop();
_zwrot


\cfun_upd_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Uruchomienie funkcji aktualizacji modeli/modelu
::  OLD: \cfun_upd_def/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('can_run','control',0)
|| _f:=exec('fconfig_prolog','control');
   {? _f
   || SKID_MBN.cntx_psh(); SKID_MBN.prefix(); CON_FUN.SKIDMWE();
      exec('k_insmbn','konsolidacja');
      {? K_INSMBN.CZY_INST<>'T'
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie zainstalowano kostki dla modelu '+SKID_MBN.KOD+'.',0,null,null,SKID_MBN.ref(),'')
      || exec('fconfig_cube','control',_f,2)
      ?};
      fclose(_f);
      {? exec('run_exe','control')
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Aktualizacja modelu danych nie powiodła się.',0,null,null,null,'')
      ?};
      SKID_MBN.cntx_pop()
   || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie zasilono modelu danych. Nie utworzono pliku konfiguracyjnego.',0,null,null,null,'')
   ?}
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie ustawiono adresów serwerów w parametrach programu.',0,null,null,null,'')
?}


\cfun_proces
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2011]
:: OPIS: Uruchomienie funkcji przetwarzania wartosci danych controllingowych
::  OLD: \cfun_proces/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('can_run','control',0)
|| _f:=exec('fconfig_prolog','control');
   {? _f
   || SKID_MBN.cntx_psh(); SKID_MBN.prefix(); CON_FUN.SKIDMWE();
      exec('k_insmbn','konsolidacja',CON_FUN.SKIDMWE);
      {? CON_FUN.SKIDMWE & K_INSMBN.CZY_INST<>'T'
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie zainstalowano kostki dla modelu '+SKID_MBN.KOD+'.',0,null,null,SKID_MBN.ref(),'')
      || exec('fconfig_proces','control',_f)
      ?};
      fclose(_f);
      {? exec('run_exe','control')
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Aktualizacja modelu danych nie powiodła się.',0,null,null,null,'')
      ?};
      SKID_MBN.cntx_pop()
   || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie zasilono modelu danych. Nie utworzono pliku konfiguracyjnego.',0,null,null,null,'')
   ?}
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie ustawiono adresów serwerów w parametrach programu.',0,null,null,null,'')
?}


\nar4dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.30]
:: OPIS: Uzupelnienie wartosci narastajaco dla modelu z dokumentami
::   WE: _a - tabela tymczasowa (:RS)
::  OLD: \nar4dok/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a.first()
|| K_INSMBN.index('SKID_MBN');
   {!
   |? _dok:=_a.DOKUMENT;
      _a.prefix(_a.DIM_1,_a.DIM_2,_a.DIM_3,_a.DIM_4,_a.DIM_5,_a.DIM_6,_a.DIM_7,_a.DIM_8,_a.DIM_9,
                _a.DIM_10,_a.DIM_11,_a.DIM_12,_a.DIM_13,_a.DIM_14,_a.DIM_15,_a.OKRES,_a.RODZAJ,'brak');
      {? ~_a.first()
      || K__POZ.use('yb'+(6+(2-_dok)));
         K__WAR.use(8+_dok);
         K__WAR.prefix();
         {? K__WAR.seek(BB.sqlint(_dok),)
         || _f:='';
            K_INSMBN.prefix(K__WAR.K__POZ().K__NAG().SKID_MB);
            {? K_INSMBN.first() & K_INSMBN.CZY_NAR='T'
            || SKIDXDUD.index('POZ');
               SKIDXDUD.prefix(K__POZ.WYMIAR01);
               {? SKIDXDUD.first() & SKIDXDUD.F_NAR
               || _f:=SKIDXDUD.F_NAR().FORMULA
               ?}
            ?};
            _a.DOKUMENT:='brak';
            {? _f<>''
            || _a.WARTOSC:=-K__POZ.WART_N;
               _a.WARTOSCN:=($_f)(K__POZ.WART_N,1);
               _a.WARTOSCB:=($_f)(K__POZ.WART_NB,0);
               _a.WARTOSC+=_a.WARTOSCN
            || _a.WARTOSC:=0;
               _a.WARTOSCN:=K__WAR.K__POZ().WART_N;
               _a.WARTOSCB:=K__POZ.WART_NB
            ?};
            _a.add()
         ?}
      ?};
      _a.prefix(_a.DIM_1,_a.DIM_2,_a.DIM_3,_a.DIM_4,_a.DIM_5,_a.DIM_6,_a.DIM_7,_a.DIM_8,_a.DIM_9,
                _a.DIM_10,_a.DIM_11,_a.DIM_12,_a.DIM_13,_a.DIM_14,_a.DIM_15,_a.OKRES,_a.RODZAJ);
      _a.last();
      _a.prefix();
      _a.next()
   !};
   OKRO_F.index('ROK'); OKRO_F.prefix();
   Tab:=_a;
   Alfabet:='0123456789ABCDEFGHIJKLMNOPRSTUWXYZ';
   _a.for_each("
      {? Tab.DOKUMENT<>'brak' & OKRO_F.seek(BIT.sqlint(Tab.OKRES),)
      || Tab.DOKUMENT:='z'+(((OKRO_F.NR+1)+Alfabet)+1)+(2-Tab.DOKUMENT);
         Tab.put()
      ?}
   ");
   VAR_DEL.delete('Tab','Alfabet')
?}


\wersje_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Podmienia pseldo MDX na MDX dla wersji kalkulowanych
::   WE: _a - tabela zwrocona przez zapytanie sql w porcedurze wpudowanej (:RS)
::  OLD: \wersje_k/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a.first()
|| K_WERSJE.index('SYM'); K_WERSJE.prefix();
   {!
   |? _fml:=_a.memo_txt(0,1,'MDX');
      _mdx:='';
      {!
      |? _p:=_fml*'[';
         {? _p
         || {? 1+(_p-_fml)='['
            || _mdx+=(_p-1)+_fml;
               _fml:=(_p+1)-_fml;
               _p:=_fml*']]';
               _mdx+=(_p-1)+_fml;
               _fml:=(_p+1)-_fml;
               1
            || _mdx+=_p+_fml;
               _fml:=_p-_fml;
               _p:=_fml*']';
               {? _p
               || _kod:=(_p+_fml)-1;
                  {? K_WERSJE.find_key(_kod,)
                  || _mdx+='Wersja].[Wersja].&['+$K_WERSJE.ref()+']'
                  ?};
                  _fml:=_p-_fml;
                  1
               ?}
            ?}
         ?}
      !};
      _a.memo_set(_mdx+_fml);
      _a.memo_put();
      _a.next()
   !}
?}


\kwarprc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.10]
:: OPIS: Aktualizacja refsql-a dokumentu (K__WAR) w zapytaniu sql pobierajacym dane do kostek olap
::   WE: _a - wynik zapytania (:RS)
::  OLD: \kwarprc/skid_con.fml
::----------------------------------------------------------------------------------------------------------------------
OKRO_F.index('ROK'); OKRO_F.prefix();
Alfabet:='0123456789ABCDEFGHIJKLMNOPRSTUWXYZ';
Tab:=_a;
_a.for_each("
   {? Tab.REF<>'brak' & OKRO_F.seek(BIT.sqlint(Tab.OKRES),)
   || Tab.REF:='z'+(((OKRO_F.NR+1)+Alfabet)+1)+(2-Tab.REF);
      Tab.put()
   ?}
");
VAR_DEL.delete('Tab','Alfabet')


\nal_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Naliczenie podzialow controllingowych dla pracownikow
::   WE: _a - ref okresu dla ktorego maja byc naliczane dane
::       _b - ref modelu dla controllingu (pusty - wszystkie)
::----------------------------------------------------------------------------------------------------------------------
{? exec('jest','#stalesys',KST_PAR)
|| exec('CON','object');
   exec('__F_ZATR','object');
   CON_KG.cntx_psh(); G.cntx_psh();
   OKRO_F.cntx_psh(); OKRO_F.prefix();
   SKID_MBN.cntx_psh(); SKID_MBN.prefix();
   {? _a<>null & OKRO_F.seek(_a) & OKRO_F.POCZ<>date(0,0,0) & exec('okr_14','!ctr_pdm_patw',OKRO_F.ref())
   || _rok:=OKRO_F.POCZ~1; _mies:=OKRO_F.NR;
      CON_KG.use('cog'+($_rok+2)+(('0'+($_mies))+2)); CON_KG.index('CON_KMP'); CON_KG.prefix();
      {? ~CON_KG.size() & (_b=KST_PAR.SKID_MB | _b=null)
      || _licznik:=1;
         G.use('godz'+('0000'+$_rok+4)); G.index('MSCRODZ');
         {!
         |? {? _licznik || G.prefix(exec('ref_firma','ustawienia'),_mies,'G') || G.prefix(exec('ref_firma','ustawienia'),_mies,'A') ?};
            CON.ustaw(KST_PAR.SKID_MB);
            {? G.first() || {! |? exec('wyp_kg','!ctr_pdm_patw',_b); G.next() !} ?};
            _licznik-=1; _licznik>=0
         !}
      ?};
      exec('generuj_dane','!ctr_pdm_patw',_rok,_mies,_b)
   ?};
   OKRO_F.cntx_pop(); SKID_MBN.cntx_pop();
   CON_KG.cntx_pop(); G.cntx_pop()
?}


\wyp_kg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2008]
:: OPIS: Wypelnienie danych tabeli CON_KG danymi z tabeli G
::   WE: _a - ref modelu
::  OLD: \wyp_kg/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_KG.blank();
CON_KG.P:=G.P;
CON_KG.SKID_MB:=_a;
CON_KG.R:=G.K; CON_KG.W:=G.G; CON_KG.D:=G.D; CON_KG.G:=G.ref();
exec('ustaw_conkg','godziny',G.P,G.D,_a);
CON_KG.add()


\generuj_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Formula wylicza dla kazdego pracownika dane do kontrolingu.
::   WE: _a - rok
::       _b - miesiac
::       _c - ref modelu dla controllingu (pusty - wszystkie)
::  OLD: \generuj_dane/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_nadzien:=date(_a,_b,0);
CON_KH.cntx_psh(); CON_KK.cntx_psh(); CON_KG.cntx_psh(); O.cntx_psh(); LS.cntx_psh();
CON_KH.index('CON_KHF'); CON_KH.prefix(); _ok:=1;
SKID_MBN.cntx_psh();
CON_KK.use('cxnw'+($_a+2)+(('0'+($_b))+2));
CON_KG.use('cog'+($_a+2)+(('0'+($_b))+2));
G.use('godz'+('0000'+$_a+4)); G.index('MSCDKW');
{? _c=null
|| CON_KK.index('CON_KKP'); CON_KK.prefix('P')
|| SKID_MBN.index('TREE_KOD'); SKID_MBN.prefix(_c,'P');
   {? SKID_MBN.first()
   || CON_KK.index('CON_KKB');
      CON_KK.prefix('P',SKID_MBN.ref());
      {? CON_KK.first() || {! |? {? CON_KK.RH=null || CON_KK.del() || CON_KK.next() ?} !} ?}
   ?}
?};
_kw_ls:="LS.prefix(P.ref(),_a); _wyn:=0;
         {? LS.first() || {! |? _wyn+=LS.KW; LS.next() !} ?};
         _wyn";
_profil:=exec('tab_profil','!ctr_pdm_patw');
_ind:=_profil.ndx_tmp(,1,'R',,,'P',,);
_ind_rn:=_profil.ndx_tmp(,1,'RN',,,'G',,,'POZ_BUD',,);
mod_skop:=null;
{? _c=null
|| SKID_MBN.index('EWID'); SKID_MBN.prefix('T','P')
|| SKID_MBN.index('TREE_KOD'); SKID_MBN.prefix(_c,'P')
?};
{? SKID_MBN.first()
|| {! |?
      {? SKID_MBN.SKID_MBN<>0
      || mod_skop:=SKID_MBN.ref();
         exec('ustal_wym_prac','!ctr_pdm_patw');
         SKID_MBN.cntx_psh(); SKID_MBN.prefix();
         {? wym_prac & SKID_MBN.seek(SKID_MBN.SKID_MBN,SKID_MBN.name())
         || CON.ustaw(SKID_MBN.ref());
            CON_KW.index('CON_HR');
            KZ.index('KARTAZR'); KZ.prefix(REF.FIRMA,_a,_b);
            {? KZ.first()
            || _size:=KZ.size(); _licz:=0;
               {! |? _licz+=1;
                  {? P.seek(KZ.P)
                  || progress((100*_licz/_size),'\nTrwa przetwarzanie danych...'@,'Wyliczenie danych do controllingu, model: %1'[SKID_MBN.KOD]);
                     _PODZORG:={? CON.spr_t('PODZORG','UD_TYP','POLE')<>'' || #exec('h_find','pracownik','WYDZIAL',_nadzien) ?};
                     {? SKID_MBN.ref()=KST_PAR.SKID_MB
                     || G.prefix(P.ref(),_b,'G');
                        {? G.first
                        || CON_KG.index('CON_GRD');
                           {! |?
                              CON_KG.prefix(G.ref);
                              {? ~CON_KG.first || exec('wyp_kg','!ctr_pdm_patw',KST_PAR.SKID_MB) ?};
                              G.next()
                           !}
                        ?}
                     ?};
                     CON.godz(); CON.proc(); _profil.erase;
                     CON_KH.index('CON_KHF'); CON_KH.prefix('F',SKID_MBN.ref);
                     _profil.index(_ind);
                     exec('zaladuj','!ctr_pdm_patw',_profil,0,_PODZORG,_nadzien);
                     CON_KH.index('CON_KHP'); CON_KH.prefix('P',P.ref(),SKID_MBN.ref());
                     exec('zaladuj','!ctr_pdm_patw',_profil,1,_PODZORG,_nadzien);
                     {? ~_profil.first()
                     || OSOBA.cntx_psh();
                        exec('add_kom','dok_fks',3,'',CON_FUN.SYM,P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' - brak schematów dla modelu '+SKID_MBN.KOD+' na dzień '+$_nadzien+'.',0,null,null,SKID_MBN.ref(),'');
                        OSOBA.cntx_pop()
                     ?};
                     _profil.index(_ind_rn);
                     VAR_DEL.delete('tabzus');
                     O.index('LISTYPLA');
                     O.prefix(REF.FIRMA,__F_ZATR.O,_a,_b);
                     {? _profil.first() & O.first()
                     || {! |?
                           {? O.T().T<>'SUM'
                           || LS.use(O.LT); LS.index('PRACNRRU');
                              {? _profil.first
                              || VAR_DEL.delete('tabzus');
                                 exec('kali_oblicz','!ctr_pdm_patw',_profil,1)
                              ?}
                           ?};
                           O.next()
                        !}
                     ?}
                  ?};
                  _ok & KZ.next()
               !}
            ?}
         ?};
         SKID_MBN.cntx_pop()
      ?};
      _ok & _c=null & SKID_MBN.next()
   !}
?};
&_profil; prgs_clr;
SKID_MBN.cntx_pop(); CON_KH.cntx_pop(); CON_KK.cntx_pop(); CON_KG.cntx_pop(); O.cntx_pop(); LS.cntx_pop();
VAR_DEL.delete('tabzus','mod_skop','wym_prac','typ_prac')


\tab_profil
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Utworzenie tabeli tymczasowej profilu do wyliczen
::   WY: alias do tabeli tymczasowej
::  OLD: \tab_profil/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_profil:=tab_tmp(3,
   'RN'       ,'INTEGER','Numer rubryki',
   'G'        ,'STRING[1]','Czy z godzin?',
   'POZ_BUD'  ,'INTEGER','Ref - pozycja budzetowa',
   'R'        ,'INTEGER','Ref - rubryki',
   'CON_KH'   ,'INTEGER','Ref - historia schematu',
   'OB_KOSZ'  ,'INTEGER','Ref - obiekt kosztowy',
   'PODZORG'  ,'INTEGER','Ref - jednostka org.',
   'WYM4'     ,'INTEGER','Ref - wymiar 4',
   'WYM5'     ,'INTEGER','Ref - wymiar 5',
   'W'        ,'STRING[1]','5',
   'PROC'     ,'INTEGER','Procent',
   'ZUS'      ,'STRING[1]','Narzuty ZUS',
   'CZY_FOR'  ,'STRING[1]','Czy formula dla pozycji bud.',
   'FORM'     ,'STRING[250]','Tresc formuly',
   'P'        ,'INTEGER','Czy dane dla pracownika',
   'N_POZ_B'  ,'INTEGER','Pozycja budzetowa dla wyliczanej wartosci',
   'RK'       ,'STRING[1]','Klasa rubryki'
)


\ustal_wym_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Ustala, ktory wymiar jest wymiarem ze stanowiskami i pracownikami
::  OLD: \ustal_wym_prac/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
wym_prac:=0; typ_prac:=null;
UD_SCH.cntx_psh(); UD_SCH.prefix();
UD_TYP.cntx_psh(); UD_TYP.prefix();
SKID_MBP.cntx_psh();
SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
{? SKID_MBP.last()
|| {! |?
      {? SKID_MBP.UD_SCH().UD_TYP().SYMBOL='STANPRAC'
      || wym_prac:=SKID_MBP.LP; typ_prac:=UD_TYP.ref()
      ?};
      wym_prac=0 & SKID_MBP.prev()
   !}
?};
SKID_MBP.cntx_pop(); UD_SCH.cntx_pop(); UD_TYP.cntx_pop()


\zaladuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Utworzenie pomocniczej tabeli okreslajacej schemat kontrolingu dla kazdego pracownika.
::       Zaladowany jest najpierw schemat firmy a pozniej nalozony ewentualny schemat przypisany
::       dla pracownika.
::   WE: _a - alias pomocniczej tabeli - schematu kontrolingu do wyliczen
::       _b - pobierz dane: 0 - firmowe; 1 - pracownika
::       _c - domyslna jednosta organizacyjna
::       _d - data dla historii schematu
::       _e - 1 - wywolanie dla rachunku UZ
::   WY:  0 - nie znaleziono schematu dla podanej daty
::       -1 - blad zwiazany z polem "formula dla pozycji budzetowej"
::        1 - dzialanie prawidlowe
::  OLD: \zaladuj/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<100 || return(0) ?};
{? var_pres('_b')<>type_of(0) || return(0) ?};
{? var_pres('_c')<>type_of(0) || return(0) ?};
{? var_pres('_d')<>type_of(date) || return(0) ?};
{? var_pres('_e')<>type_of(0) || _e:=0 ?};
{? CON_KH.find_le(_d)
|| _koniec:=1;
   {? CON_KW.prefix(CON_KH.ref()); CON_KW.first()
   || {? ~_e
      || {? CON_KH.CZY_FIR='N'
         || {? _a.first()
            || {!
               |? {? ~_a.P || _a.del() || _a.next() ?}
               !}
            ?}
         ?}
      ?};
      {! |?
         {? ~_e | (CON_KW.UZ='T')
         || _a.blank();
            _a.R:=#CON_KW.R; _a.POZ_BUD:=#exec('ust_poz_bud','!ctr_pdm_patw');
            _a.RN:=CON_KW.R().RN; _a.RK:=R.RK; _a.W:=CON_KW.W; _a.PROC:=CON_KW.PROC; _a.G:=CON_KW.G;
            _a.ZUS:=CON_KW.ZUS; _a.CZY_FOR:=CON_KW.CZY_FOR; _a.P:=_b; _a.N_POZ_B:=#CON_KW.N_POZ_B;
            {? CON.T_MBP.first & CON.T_MBP.next
            || {!
               |? {? CON.T_MBP.UD_TYP<>'PODZORG'
                  || ($('_a'+'.'+CON.T_MBP.POLE))(_a):=#($('CON_KW.'+CON.T_MBP.POLE))()
                  || ($('_a'+'.'+CON.T_MBP.POLE))(_a):=
                        {? ($('CON_KW.'+CON.T_MBP.POLE))() || #($('CON_KW.'+CON.T_MBP.POLE))() || _c ?}
                  ?}; CON.T_MBP.next
               !}
            ?};
            {? _a.POZ_BUD=0 || _koniec:=-1 ?};
            _a.add();
            {? _b || {! |? {? _a.find_key(_a.R,0) || _a.del(); 1 ?} !} ?}
         ?};
         CON_KW.next()
      !}
   ?}; _koniec
|| 0
?}


\ust_poz_bud
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Funkcja ustawia pozycje budzetowa bezposrednio lub poprzez formule
::       dla tabeli CON_KW.
::   WY: złaczenie do slownika UD_SKL lub null jesli bledna formula
::  OLD: \ust_poz_bud/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? CON_KW.CZY_FOR='T'
|| _wyn:=exec('form_err','!ctr_pdm_patw');
   {? type_of(_wyn)<>7
   || _tekst:=('Niepoprawna wartość formuły: Pozycja budżetowa w schemacie '+
               {? CON_KH.F='P' || CON_KH.P().OSOBA().PIERWSZE+' '+OSOBA.NAZWISKO
               |? CON_KH.F='Z' || CON_KH.P().OSOBA().PIERWSZE+' '+OSOBA.NAZWISKO
               |? CON_KH.F='R' || 'rachunku do umowy zlecenia'
               || 'firmy'
               ?}+' dla rubryki: '+CON_KW.R().RT+'.');
      exec('add_kom','dok_fks',3,'',CON_FUN.SYM,_tekst,0,null,null,null,'');
      return(null)
   || UD_TYP.index('SYMBOL'); UD_TYP.prefix();
      UD_SKL.cntx_psh(); UD_SKL.index('SYMBOL');
      {? UD_TYP.find_key('POZ_BUD','POZ_BUD')
      || UD_SKL.prefix(UD_TYP.ref()); UD_SKL.first();
         {? ~UD_SKL.seek(_wyn) || _wyn:=null ?}
      || _wyn:=null
      ?};
      UD_SKL.cntx_pop()
   ?}; _wyn
|| CON_KW.POZ_BUD
?}


\form_err
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Sprawdzenie poprawności wprowadzonej formuly zwracajacej pozycje budzetowa
::  OLD: \form_err/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
on_error(2); _wyn:=($CON_KW.FORM)();
{? in_error()
|| _tekst:='Wystąpił błąd w formule ustawiajacej pozycję budżetową schematu '+
           {? CON_KW.CON_KH().P
           || CON_KH.P().OSOBA().PIERWSZE+' '+OSOBA.NAZWISKO
           || 'firmy'
           ?}+' dla rubryki '+CON_KW.R().RT+'.';
   exec('add_kom','dok_fks',3,'',CON_FUN.SYM,_tekst,0,null,null,null,'');
   on_error();
   return(null)
|| on_error(); _wyn
?}


\kali_oblicz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Podstawowe wyliczenia
::   WE: _a : alias do tabeli tymczasowej
::       _b : 1 - dla pracownika
::            0 - dla rachunku UZ
::  OLD: \kali_oblicz/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<100 || return(0) ?};
{? var_pres('_b')<>type_of(0) || return(0) ?};
_profil:=_a;
{! |?
   _rubryka:=_profil.RN; _wyn:=0;
   {? _b
   || LS.prefix(P.ref(),_rubryka);
      {? LS.first() || {! |? _wyn+=LS.KW; LS.next() !} ?}
   || LS.prefix(RH.ref(),_rubryka);
      {? LS.first() || {! |? _wyn+=LS.KW; LS.next() !} ?}
   ?};
   {? _wyn
   || _kwota:=_wyn;
      {! |?
         {? _profil.ZUS='N'
         || {? _profil.G='T'
            || {? _profil.RK='R'
               ||  CON.wyl_godz(_profil.RN,_profil.POZ_BUD,_profil.R)
               || _profil.prefix(_rubryka,'T');
                  {! |?
                     CON.wyl_g(_wyn,_profil.POZ_BUD,_profil.R,_profil.W,_profil.N_POZ_B);
                     _profil.next
                  !}
               ?}
            || _profil.prefix(_rubryka,'N',_profil.POZ_BUD);
               _koniec:=_kwota;
               {! |?
                  _wyn:=(_profil.PROC/100)*_kwota$2;
                  _koniec-=_wyn;
                  {? _kwota>0 & _koniec<0 |
                     _kwota<0 & _koniec>0
                  || _wyn+=_koniec; _koniec:=0
                  ?};
                  _bud:=_profil.POZ_BUD;
                  _org:=_profil.PODZORG; _ob:=_profil.OB_KOSZ; _wym4:=_profil.WYM4; _wym5:=_profil.WYM5;
                  _proc:=_profil.PROC;
                  _r:=_profil.R; _z:=_profil.W; _npb:=_profil.N_POZ_B; _stop:=_profil.next;
                  {? ~_stop & _koniec || _wyn+=_koniec ?};
                  exec('dodaj','control',_bud,_org,_ob,_r,_wyn,_z,_b,_npb,_proc,,_wym4,_wym5,SKID_MBN.ref());
                  _stop
               !}
            ?}
         || {? var_pres('tabzus')<0
            || {? _b
               || tabzus:=sql('select N_POZ_B, PODZORG, OB_KOSZ, WYM4, WYM5, sum(KW) KW, sum(0) PROC
                               from CON_KK
                               where CON_KK.P=:_a and CON_KK.O=:_b and CON_KK.Z=\'T\' and CON_KK.SKID_MB=:_c
                               group by N_POZ_B, PODZORG, OB_KOSZ, WYM4, WYM5
                               order by 1,2',P.ref(),O.ref(),mod_skop)
               || tabzus:=sql('select N_POZ_B, PODZORG, OB_KOSZ, WYM4, WYM5, sum(KW) KW, sum(0) PROC
                               from CON_KK
                               where CON_KK.RH=:_a and CON_KK.Z=\'T\' and CON_KK.SKID_MB=:_b
                               group by N_POZ_B ,PODZORG, OB_KOSZ, WYM4, WYM5
                               order by 1,2',RH.ref(),SKID_MBN.ref())
               ?};
               {? tabzus.first
               || all_zus:=0;
                  {! |? all_zus+=tabzus.KW; tabzus.next() !};
                  tabzus.for_each("tabzus.PROC:=(tabzus.KW/all_zus*100);
                                   tabzus.N_POZ_B:=$BIT.sqlint(tabzus.N_POZ_B);
                                   tabzus.PODZORG:=$BIT.sqlint(tabzus.PODZORG);
                                   tabzus.OB_KOSZ:=$BIT.sqlint(tabzus.OB_KOSZ);
                                   tabzus.WYM4:=$BIT.sqlint(tabzus.WYM4);
                                   tabzus.WYM5:=$BIT.sqlint(tabzus.WYM5);
                                   tabzus.put()");
                  &all_zus
               ?}
            ?};
            {? tabzus.first()
            || _koniec:=_kwota;
               {! |?
                  _wyn:=(tabzus.PROC/100)*_kwota$2;
                  _koniec-=_wyn;
                  {? _kwota>0 & _koniec<0 |
                     _kwota<0 & _koniec>0
                  || _wyn+=_koniec; _koniec:=0
                  ?};
                  _org:=#tabzus.PODZORG; _ob:=#tabzus.OB_KOSZ;
                  _wym4:=#tabzus.WYM4; _wym5:=#tabzus.WYM5;
                  _poz_bud:=#tabzus.N_POZ_B; _proc:=tabzus.PROC;
                  {? ~_poz_bud || _poz_bud:=_profil.POZ_BUD ?};
                  _stop:=tabzus.next();
                  {? ~_stop & _koniec || _wyn+=_koniec ?};
                  exec('dodaj','control',_poz_bud,_org,_ob,_profil.R,_wyn,_profil.W,_b,0,_proc,,_wym4,_wym5,SKID_MBN.ref());
                  _stop
               !}
            ?}
         ?}; _profil.prefix(_rubryka);
         _profil.next
      !}
   ?}; _profil.prefix(); _profil.next
!}


\nal_zlec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Naliczenie podzialow controllingowych dla zleceniobiorcow
::   WE: _a - ref okresu dla ktorego maja byc naliczane dane
::       _b - ref modelu dla controllingu (pusty - wszystkie)
::  OLD: \nal_zlec/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('jest','#stalesys',KST_PAR)
|| exec('CON','object');
   CON_KH.cntx_psh();
   CON_KK.cntx_psh();
   OKRO_F.cntx_psh();
   OKRO_F.prefix();
   SKID_MBN.cntx_psh();
   SKID_MBN.index('EWID');
   SKID_MBN.prefix('T','O');
   {? _a<>null & OKRO_F.seek(_a) & OKRO_F.POCZ<>date(0,0,0) & exec('okr_14','!ctr_pdm_patw',OKRO_F.ref())
   || exec('__F_ZATR','object');
      _rok:=OKRO_F.POCZ~1;
      _mies:=OKRO_F.NR;
      __F_ZATR.mod('Z');
      P.cntx_psh();
      P.index('F_ZATR');
      P.prefix(REF.FIRMA,__F_ZATR.P);
      {? P.first()
      || profilc:=exec('tab_profil','!ctr_pdm_patw');
         ind_c1:=profilc.ndx_tmp(,1,'R',,,'P',,);
         ind_c2:=profilc.ndx_tmp(,1,'RN',,,'G',,,'POZ_BUD',,);
         ZC.cntx_psh();
         ZC.index('ZLECPRZ');
         RH.cntx_psh();
         RH.index('RACHUNKC');
         {!
         |? ZC.prefix(P.ref());
            {? ZC.first()
            || {!
               |? RH.prefix(ZC.ref(),_rok,_mies);
                  {? RH.first()
                  || {!
                     |? exec('rh_generuj','!ctr_pdm_patw',_b);
                        RH.next()
                     !}
                  ?};
                  ZC.next()
               !}
            ?};
            P.next()
         !};
         ZC.cntx_pop();
         RH.cntx_pop();
         VAR_DEL.delete('profilc','ind_c1','ind_c2')
      ?};
      P.cntx_pop();
      __F_ZATR.mod('P')
   ?};
   OKRO_F.cntx_pop();
   SKID_MBN.cntx_pop();
   CON_KH.cntx_pop();
   CON_KK.cntx_pop()
?}


\rh_generuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [2006]
:: OPIS: Wyliczenie kwot do kontrolingu dla rachunku UZ
::       ustawiony PRZ, RH
::       _a - ref modelu dla controllingu (pusty - wszystkie)
::  OLD: \rh_generuj/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
CON_KK.use('cxnw'+($RH.R+2)+(('0'+($RH.M))+2)); _ok:=1;
CON_KK.index('CON_KKR');
{? _a=null
|| CON_KK.prefix(RH.ref())
|| SKID_MBN.index('TREE_KOD'); SKID_MBN.prefix(_a,'P');
   {? SKID_MBN.first()
   || CON_KK.index('CON_KKR');
      CON_KK.prefix(RH.ref(), SKID_MBN.ref());
      {? CON_KK.first() || {! |? CON_KK.del() !} ?}
   ?}
?};
_PODZORG:=#P.WYDZIAL;
profilc.erase();
O.cntx_psh();
LS.cntx_psh();
LS.use(RH.O().LT);
LS.index('ZLEC');
mod_skop:=null;
{? _a=null
|| SKID_MBN.index('EWID'); SKID_MBN.prefix('T','P')
|| SKID_MBN.index('TREE_KOD'); SKID_MBN.prefix(_a,'P')
?};
{? SKID_MBN.first()
|| {! |?
      {? SKID_MBN.SKID_MBN<>0
      || mod_skop:=SKID_MBN.ref();
         exec('ustal_wym_prac','!ctr_pdm_patw');
         SKID_MBN.cntx_psh(); SKID_MBN.prefix();
         {? wym_prac & SKID_MBN.seek(SKID_MBN.SKID_MBN,SKID_MBN.name())
         || CON.ustaw(SKID_MBN.ref());
            CON_KW.index('CON_HR');
            CON_KH.index('CON_KHF'); CON_KH.prefix('F',SKID_MBN.ref());
            profilc.erase; profilc.index(ind_c1);
            {? exec('zaladuj','!ctr_pdm_patw',profilc,0,_PODZORG,RH.DWY,1)=-1
            || _ok:=0
            || CON_KH.index('CON_KHP'); CON_KH.prefix('Z',P.ref(),SKID_MBN.ref());
               {? exec('zaladuj','!ctr_pdm_patw',profilc,1,_PODZORG,RH.DWY)=-1
               || _ok:=0
               || profilc.prefix();
                  {? profilc.first() || {! |? profilc.P:=0; profilc.G:='N'; profilc.put(); profilc.next() !} ?};
                  CON_KH.index('CON_KHR'); CON_KH.prefix('R',RH.ref(),SKID_MBN.ref());
                  {? exec('zaladuj','!ctr_pdm_patw',profilc,1,_PODZORG,RH.DWY)=-1
                  || _ok:=0
                  || VAR_DEL.delete('tabzus');
                     profilc.index(ind_c2);
                     {? profilc.first
                     || UD_SKL.prefix();
                        exec('kali_oblicz','!ctr_pdm_patw',profilc,0)
                     ?}
                  ?}
               ?}
            ?}
         ?};
         SKID_MBN.cntx_pop()
      ?};
      _ok & _a=null & SKID_MBN.next()
   !}
?};
O.cntx_pop();
LS.cntx_pop();
VAR_DEL.delete('tabzus')


\agreguj_conkk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Agregacja danych dla pracownikow i zleceniobiorcow
::  OLD: \agreguj_conkk/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
UD_POM.OKR_P();
_zwrot:=0;
OKRO_F.cntx_psh(); OKRO_F.index('ROK'); OKRO_F.prefix();
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
OKRO_F.ROK();
OKRO_F.prefix(ROK_F.ref());
_zwrot:=(OKRO_F.size()=14);
{? _zwrot
|| K__POZ.cntx_psh(); K__WAR.cntx_psh(); CON_KK.cntx_psh();
   wym:=obj_new(15);
   {!
   |? {? OKRO_F.POCZ<>date(0,0,0) & exec('can_fun_run','control',1)
      || _maska:=exec('maska','control');
         K__POZ.use('yb'+_maska); K__WAR.use('yx'+_maska); K__WAR.prefix();
         _rok:=OKRO_F.POCZ~1; _mies:=OKRO_F.NR;
         CON_KK.use('cxnw'+($_rok+2)+(('0'+($_mies))+2));
         CON_KK.index('CON_KKB'); CON_KK.prefix('P',SKID_MBN.ref());
         {? CON_KK.first()
         || {! |?
               {? CON_KK.POZ_BUD<>null
               || {! _i:=1..15 |! wym[_i]:=null !};
                  {? exec('spr_wym','control',SKID_MBN.ref(),2)
                  || exec('ustaw_tree','!ctr_pdm_patw',2);
                     {? exec('k__poz','control',CON_KK.KW)
                     || exec('add_zap','control',2)
                     ?}
                  ?}
               ?};
               CON_KK.next()
            !}
         ?};
         CON_KK.prefix('Z',SKID_MBN.ref());
         {? CON_KK.first()
         || {! |?
               {? CON_KK.POZ_BUD<>null
               || {! _i:=1..15 |! wym[_i]:=null !};
                  {? exec('spr_wym','control',SKID_MBN.ref(),2)
                  || exec('ustaw_tree','!ctr_pdm_patw',2);
                     {? exec('k__poz','control',CON_KK.KW)
                     || exec('add_zap','control',2)
                     ?}
                  ?}
               ?};
               CON_KK.next()
            !}
         ?}
      ?};
      OKRO_F.ref()<>UD_POM.OKR_K & OKRO_F.next()
   !};
   K__POZ.cntx_pop(); K__WAR.cntx_pop(); CON_KK.cntx_pop();
   VAR_DEL.delete('wym')
?};
ROK_F.cntx_pop(); OKRO_F.cntx_pop()


\kontrola_kali
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Funkcja kontroli list plac i rachunkow z kalego
::   WE: _a - ref analizowanego okresu
::  OLD: \kontrola_kali/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh();
OKRO_F.cntx_psh(); OKRO_F.prefix();
{? _a<>null & OKRO_F.seek(_a) & OKRO_F.POCZ<>date(0,0,0) & exec('okr_14','!ctr_pdm_patw',OKRO_F.ref())
|| _rok:=OKRO_F.POCZ~1; _mies:=OKRO_F.NR; OKRO_F.ROK();
   O.cntx_psh();
   exec('__F_ZATR','object');
   __F_ZATR.mod('P');
   O.index('LISTYPLA');
   O.prefix(exec('ref_firma','ustawienia'),__F_ZATR.O,_rok,_mies);
   {? O.first()
   || {! |?
         {? O.T().T<>'SUM' & O.Z='T' & O.DOK=''
         || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Zamknięta lista płac o symbolu '+O.LT+' ('+$O.R+'/'+$O.M+') nie jest zadekretowana.',
                 0,ROK_F.ref(),OKRO_F.ref(),null,'')
         ?};
         O.next()
      !}
   ?};
   O.cntx_pop();
   RH.cntx_psh();
   RH.index('DOK'); RH.prefix(exec('ref_firma','ustawienia'),_rok,_mies,'','');
   {? RH.first()
   || {! |?
         ZC.cntx_psh();
         exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Wypłata do umowy o numerze '+RH.ZLE().NU+' ('+$RH.R+'/'+$RH.M+
              ') nie jest zadekretowana.',0,ROK_F.ref(),OKRO_F.ref(),null,'');
         ZC.cntx_pop();
         RH.next()
      !}
   ?};
   RH.cntx_pop()
?};
OKRO_F.cntx_pop(); ROK_F.cntx_pop()


\nal_plan_am
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Naliczenie podzialow controllingowych dla planow amortyzacji.
::   WE: _a - ref okresu dla ktorego maja byc naliczane dane
::       _b - ref modelu (jesli nie zadeklarowany to ze zmiennej ZM.SKID_MBN)
::  OLD: \nal_plan_am/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('set_plan','control');
{? K_ES.SRSP
|| exec('SRD','object');
   KTRWN.cntx_psh(); KTRWP.cntx_psh();
   SRD.maski(K_ES.SRSP().MASKA);
   OKRO_F.cntx_psh(); OKRO_F.prefix();
   SKID_MBN.cntx_psh(); SKID_MBN.prefix();
   {? _=2 || ZM.SKID_MBN:=_b ?};
   {? _a<>null & OKRO_F.seek(_a) & OKRO_F.POCZ<>date(0,0,0) &
      _b<>null & SKID_MBN.seek(ZM.SKID_MBN)
   || _okres:=OKRO_F.ref(); _rok:=OKRO_F.ROK; OKRO_F.ROK();
      _okr_rok:=OKRO_F.RES; _okr_mc:=OKRO_F.OES;
      SKID_MBP.cntx_psh(); SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
      {? SKID_MBP.first()
      || do();
         exec('opiszwym','control');
         ZM.PLAN:=K_ES.SRSP().MASKA;
         KTRWN.index('KTRWN'); KTRWN.prefix(REF.FIRMA,ZM.SKID_MBN,ZM.PLAN,_rok,_okres);
         KTRWP.use('kontwa'+ROK_F.KOD);
         {? KTRWN.first()
         || KTRWP.index('KTRWP'); KTRWP.prefix(KTRWN.ref());
            {? KTRWP.first()
            || {!
               |? _delr:=KTRWP.del(,1);
                  {? _delr=1 || 0 |? _delr=0 || undo(); 0 || 1 ?}
               !}
            ?};
            _delr:=KTRWN.del(,1); {? _delr=0 || undo(); 0 ?}
         ?};
         SRST.index('ROKOKRES'); SRST.prefix(_okr_rok,_okr_mc);
         {? SRST.first()
         || _dalej:=-1;
            {!
            |? {? SRST.AMOF
               || {? _dalej=-1
                  || KTRWN.index('KTRWN'); KTRWN.prefix(REF.FIRMA,ZM.SKID_MBN,ZM.PLAN,_rok,_okres);
                     {? KTRWN.first()
                     || _dalej:=1
                     || KTRWN.blank(1);
                        KTRWN.FIRMA:=REF.FIRMA;
                        KTRWN.ROK_F:=_rok;
                        KTRWN.OKRO_F:=_okres;
                        KTRWN.SKID_MB:=ZM.SKID_MBN;
                        KTRWN.PLAN:=ZM.PLAN;
                        KTRWN.DATA:=date();
                        _dalej:=KTRWN.add()
                     ?}
                  ?};
                  {? _dalej>0
                  || exec('oblicz1','!ctr_pdm_patw',SRST.SRSR().uidref(),_okres,SRST.AMOF)
                  ?}
               ?};
               SRST.next()
            !}
         ?};
         end()
      ?};
      SKID_MBP.cntx_pop()
   ?};
   OKRO_F.cntx_pop(); SKID_MBN.cntx_pop();
   KTRWN.cntx_pop(); KTRWP.cntx_pop()
|| exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie znaleziono planu amortyzacji',0,_rok,_okres,null,'')
?};
1


\oblicz1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGO [2006]
:: OPIS: Funkcja wylicza podzialy wartosc amortyzacji dla pojedynczego srodka (ustawionego w buforze rekordu SRSR)
::   WE: _a - uidref srodka dla ktorego robione sa wyliczenia
::       _b - ref okresu amortyzacji
::       _c - kwota amortyzacji
::  OLD: \oblicz1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_od:=KTRWN.OKRO_F().POCZ; _do:=KTRWN.OKRO_F().KON;
_ktrn_ref:=null;
_liczyc:=0; _razem:=0; _pr100:=0; _ilosc:=0;
_kwota:=_c;
{? ZM.PLAN='r'
:: wyczyszczenie starych obliczen
|| KTRWP.index('KTRWS'); KTRWP.prefix(KTRWN.ref(),_a,);
   {? KTRWP.first() || {! |? KTRWP.del() !} ?}
?};
{? _kwota<>0
|| KTRWP.prefix(); KTRD.index('KTRD');
:: wyliczenia dla schematu dla środka
   KTRD.prefix(SRSR.ref(),ZM.SKID_MBN); _jest:=KTRD.first();
:: wyliczenia dla domyslnego schematu
   {? ~_jest || KTRD.prefix(null,ZM.SKID_MBN); _jest:=KTRD.first() ?};
   {? _jest
   || {!
      |? KTRWP.blank();
         KTRWP.SROD_ID:=_a;
         KTRWP.ODD:=SRST.ODD;
         KTRWP.TYP:='A';
         KTRWP.KTRWN:=KTRWN.ref();
         {? K_ES.W1<>'' || KTRWP.PBUD:={? KTRD.PBUD<>null || KTRD.PBUD || ($(KTRD.FPBUD))() ?} ?};
         {? K_ES.W2<>'' || KTRWP.JORG:={? KTRD.JORG<>null || KTRD.JORG || ($(KTRD.FJORG))() ?} ?};
         {? K_ES.W3<>'' || KTRWP.OKOSZ:={? KTRD.OKOSZ<>null || KTRD.OKOSZ || ($(KTRD.FOKOSZ))() ?} ?};
         {? K_ES.W4<>'' || KTRWP.WYM4:={? KTRD.WYM4<>null || KTRD.WYM4 || ($(KTRD.FWYM4))() ?} ?};
         {? K_ES.W5<>'' || KTRWP.WYM5:={? KTRD.WYM5<>null || KTRD.WYM5 || ($(KTRD.FWYM5))() ?} ?};
         _procent:=KTRP.UDZIAL;
         KTRWP.KWOTA:=((_kwota*KTRD.UDZIAL)/100)$2;
         _pr100+=KTRD.UDZIAL;
         _razem+=KTRWP.KWOTA;
         KTRWP.add();
         KTRD.next()
      !};
      {? _kwota<>_razem & _pr100=100
      || KTRWP.KWOTA+=(_kwota-_razem);
         KTRWP.put()
      ?}
   ?}
?};
1


\skid_mbn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2010]
:: OPIS: Formula na wartosc poczatkowa pola KTRN.SKID_MBN
::  OLD: \skid_mbn/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
ZM.SKID_MBN


\zm_plan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [2010]
:: OPIS:
::  OLD: \zm_plan/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
ZM.PLAN


\agr_amor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Agregacja podzialow dla planow amortyzacji
::  OLD: \agr_amor/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBN.cntx_psh(); SKID_MBN.prefix(); CON_FUN.SKIDMWE();
exec('agregacja','!ctr_pdm_patw','exec(\'agr_amor1\',\'!ctr_pdm_patw\')', '6');
SKID_MBN.cntx_pop()


\agr_amor1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Agregacja podzialow dla amortyzacji - wewnetrzna
::  OLD: \agr_amor1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('set_plan','control');
_plan:=K_ES.SRSP().MASKA;
wym:=obj_new(15);
K__POZ.cntx_psh(); K__WAR.cntx_psh();
KTRWN.cntx_psh(); KTRWN.index('KTRWPL'); KTRWP.cntx_psh();
OKRO_F.index('ROK'); OKRO_F.prefix(ROK_F.ref());
{? OKRO_F.seek(UD_POM.OKR_P)
|| {!
   |? {? exec('can_fun_run','control',1)
      || _maska:=exec('maska','control');
         K__POZ.use('yb'+_maska); K__POZ.index('RODZAJ');
         K__WAR.use('yx'+_maska); K__WAR.index('K__POZ');
         KTRWN.prefix(REF.FIRMA,_plan,SKID_MBN.ref(),ROK_F.ref(),OKRO_F.ref());
         {? KTRWN.first()
         || {! |?
               KTRWP.use('kontwa'+ROK_F.KOD); KTRWP.index('KTRPL'); KTRWP.prefix(_plan,KTRWN.ref());
               {? KTRWP.first()
               || {!
                  |? {? KTRWP.PBUD<>null & exec('spr_wym','control',SKID_MBN.ref(),4)
                     || {! _i:=1..15 |! wym[_i]:=null !};
                        exec('ustaw_tree','!ctr_pdm_patw',4);
                        exec('k__poz','control',KTRWP.KWOTA,,6)
                     ?};
                     KTRWP.next()
                  !}
               ?};
               KTRWN.next()
            !}
         ?}
      ?};
      OKRO_F.ref()<>UD_POM.OKR_K & OKRO_F.next()
   !}
?};
KTRWN.cntx_pop(); KTRWP.cntx_pop();
K__POZ.cntx_pop(); K__WAR.cntx_pop();
VAR_DEL.delete('wym')


\nal_srod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Naliczenie podzialow controllingowych dla srodkow trwalych
::   WE: _a - ref okresu dla ktorego maja byc naliczane dane
::       _b - ref modelu (jesli nie zadeklarowany to ze zmiennej ZM.SKID_MBN)
::  OLD: \nal_srod/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_model:=ZM.SKID_MBN; _plan:=ZM.PLAN; _rok:=VAR.ROK_F; _okres:=VAR.OKRO_F;
OKRO_F.cntx_psh(); OKRO_F.prefix();
{? _a<>null & OKRO_F.seek(_a) & OKRO_F.POCZ<>date(0,0,0)
|| {? _=2 || ZM.SKID_MBN:=_b ?};
   ZM.PLAN:='r';
   OKRO_F.ROK(); VAR.ROK_F:=ROK_F.ref(); VAR.OKRO_F:=OKRO_F.ref();
   KTRWP.use('kontwa'+ROK_F.KOD);
   exec('SRD','object');
   SRD.maski(ZM.PLAN);
   exec('opiszwym','control');
   exec('przelicz','!ctr_pdm_patw',2)
?};
OKRO_F.cntx_pop();
ZM.SKID_MBN:=_model; ZM.PLAN:=_plan; VAR.ROK_F:=_rok; VAR.OKRO_F:=_okres


\przelicz
::----------------------------------------------------------------------------------------------------------------------
:: UTW: MGO  [2006]
:: OPIS: Funkcja wylicza wartosc amortyzacji dla podzialu
::  OLD: \przelicz/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
KTRWN.cntx_psh();
KTRWN.index('KTRWN'); KTRWN.prefix(REF.FIRMA,ZM.SKID_MBN,ZM.PLAN,VAR.ROK_F,VAR.OKRO_F);
{? ~KTRWN.first()
|| KTRWN.blank(1);
   KTRWN.SKID_MB:=ZM.SKID_MBN;
   KTRWN.PLAN:=ZM.PLAN;
   KTRWN.ROK_F:=VAR.ROK_F;
   KTRWN.OKRO_F:=VAR.OKRO_F;
   KTRWN.DATA:=VAR.OKRO_F().POCZ;
   KTRWN.FIRMA:=REF.FIRMA;
   KTRWN.add(1)
?};
{? KTRWN.first()
|| exec('oblicz','!ctr_pdm_patw');
   {? KTRWN.count()=0 || KTRWN.del() ?}
|| {? _a=1
   || FUN.info('Nie zdefiniowano pozycji obliczeń na bieżący okres.\nPrzeliczenie nie jest możliwe.'@)
   || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nie zdefiniowano pozycji obliczeń. Przeliczenie podziałów dla amortyzacji nie jest możliwe.',0,null,null,null,'')
   ?}
?};
KTRWN.cntx_pop();
1


\oblicz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MGO [2006]
:: OPIS: Funkcja wylicza wartosc amortyzacji dla podzialu
::  OLD: \oblicz/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
KTRWP.cntx_psh();
SRST.index('OKR_O_W');
{? OPERATOR.DEPT
|| SRST.prefix(VAR.OKRO_F,OPERATOR.DEPT)
|| SRST.prefix(VAR.OKRO_F)
?};
{? SRST.first()
|| {!
   |? {? SRST.GRP<>'E'
      || exec('oblicz1','!ctr_pdm_patw',SRST.SRSR().uidref(),VAR.OKRO_F,SRST.AMOF)
      ?};
      SRST.next()
   !}
?};
KTRWP.cntx_pop();
{? ~KTRWP.first()
|| ZM.AMOR:=ZM.RAZEM:=0
?};
1


\kontrola_estra
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Funkcja kontroli dokumentow z srodkow trwalych
::  OLD: \kontrola_estra/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? OKRO_F.POCZ<>date(0,0,0)
|| DOK.cntx_psh();
   DOK.index('DOKZRODL'); DOK.prefix('EF','EF');
   {? ~DOK.first()
   || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Amortyzacja finansowa w miesiącu '+$OKRO_F.NR+'/'+ROK_F.NAZ+' nie jest zadekretowana.',0,ROK_F.ref(),OKRO_F.ref(),null,'')
   ?};
   DOK.cntx_pop()
?}


\kontrola_emag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Funkcja kontroli dokumentow logistycznych
::  OLD: \kontrola_emag/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
{? OKRO_F.POCZ<>date(0,0,0)
|| ND.cntx_psh();
   TYPYDOK.cntx_psh(); TYPYDOK.index('TYP'); TYPYDOK.prefix();
   ODDZ.cntx_psh(); ODDZ.index('KOD'); ODDZ.prefix();
   CON_DEF.cntx_psh(); CON_DEF.index('CON_DEF2');
   {? TYPYDOK.first()
   || {! |?
         {? ODDZ.first()
         || {! |?
               CON_DEF.prefix(TYPYDOK.ref(),0);
               {? CON_DEF.first()
               || ND.use('nagdo'+ODDZ.KOD+(2-$(OKRO_F.POCZ~1)));
                  ND.index('CONTROL'); ND.prefix(TYPYDOK.ref(),OKRO_F.POCZ~1,OKRO_F.POCZ~2,'T','N');
                  {? ND.first()
                  || {! |?
                        exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Dokument magazynowy '+ND.SYM+' typu '+TYPYDOK.T+' ('+$OKRO_F.NR+'/'+ROK_F.NAZ+') nie jest zadekretowany.',
                             0,ROK_F.ref(),OKRO_F.ref(),null,'');
                        ND.next()
                     !}
                  ?}
               ?};
               ODDZ.next()
            !}
         ?};
         TYPYDOK.next()
      !}
   ?};
   TYPYDOK.cntx_pop(); ND.cntx_pop();
   TYPYSP.cntx_psh(); TYPYSP.index('TYPYSP'); TYPYSP.prefix();
   CON_DEF.index('CON_DEF1');
   {? TYPYSP.first()
   || {! |?
         {? ODDZ.first()
         || {! |?
               CON_DEF.prefix(TYPYSP.ref(),0);
               {? CON_DEF.first()
               || FAKS.use('faktu'+ODDZ.KOD+(2-$(OKRO_F.POCZ~1)));
                  FAKS.index('CONTROL'); FAKS.prefix(TYPYSP.ref(),OKRO_F.POCZ~1,OKRO_F.POCZ~2,'T','N');
                  {? FAKS.first()
                  || {! |?
                        exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Dokument '+{? TYPYSP.ZAK='T' || 'zakupu ' || 'sprzedaży ' ?}+FAKS.SYM+' typu '+TYPYSP.T+' ('+$OKRO_F.NR+'/'+ROK_F.NAZ+') nie jest zadekretowany.',
                             0,ROK_F.ref(),OKRO_F.ref(),null,'');
                        FAKS.next()
                     !}
                  ?}
               ?};
               ODDZ.next()
            !}
         ?};
         TYPYSP.next()
      !}
   ?};
   TYPYSP.cntx_pop();
   ODDZ.cntx_pop(); CON_DEF.cntx_pop()
?}


\kontrola_kasa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Funkcja kontroli dokumentow w kasie
::   WE: _a - ref analizowanego okresu
::  OLD: \kontrola_kasa/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
ROK_F.cntx_psh(); RAPORT.cntx_psh();
OKRO_F.cntx_psh(); OKRO_F.prefix();
{? _a<>null & OKRO_F.seek(_a) & OKRO_F.POCZ<>date(0,0,0)
|| OKRO_F.ROK();
   STANKAS.cntx_psh();
   STANKAS.index('KOD'); STANKAS.prefix();
   {? STANKAS.first()
   || {! |?
         _maska:=form(STANKAS.KOD,-3)+(form(ROK_F.KOD)+2);
         RAPORT.use('krp'+_maska); RAPORT.index('DATA'); RAPORT.prefix();
         {? RAPORT.find_ge(OKRO_F.POCZ) & RAPORT.DATA_OD<=OKRO_F.KON
         || {! |?
               {? RAPORT.STATUS=exec('rap_stat','kasa_raport',2)
               || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Raport kasowy na stanowisku '+STANKAS.NAZWA+' o numerze '+$RAPORT.NUM_RAP+' jest niezadekretowany.',
                       0,ROK_F.ref(),OKRO_F.ref(),null,'')
               |? RAPORT.STATUS=exec('rap_stat','kasa_raport',5)
               || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Raport kasowy na stanowisku '+STANKAS.NAZWA+' o numerze '+$RAPORT.NUM_RAP+' jest zadekretowany częściowo.',
                       0,ROK_F.ref(),OKRO_F.ref(),null,'')
               ?};
               RAPORT.next() & RAPORT.DATA_OD<=OKRO_F.KON
            !}
         ?};
         STANKAS.next()
      !}
   ?};
   STANKAS.cntx_pop()
?};
OKRO_F.cntx_pop(); ROK_F.cntx_pop(); RAPORT.cntx_pop()


\agr_merit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Uruchamianie funkcji do tworzenia wartosci zagregowanych na podstawie kartotek źródłowych
::  OLD: \agr_xpertis/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBP.cntx_psh();
SKID_MBP.index('LP'); SKID_MBP.prefix(CON_FUN.SKIDMWE);
ile_wym:=SKID_MBP.size();
SKID_MBP.cntx_pop();
SKID_MBN.cntx_psh(); SKID_MBN.prefix(); CON_FUN.SKIDMWE();
K_WERSJE.cntx_psh(); K_WERSJE.prefix(); CON_FUN.KWER1();
K__NAG.cntx_psh(); K__NAG.index('UNIK1');
OKRO_F.cntx_psh(); OKRO_F.index('ROK');
ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
_dalej:=1;
UD_POM.OKR_POCZ().ROK();
{!
|? K__NAG.prefix(REF.FIRMA,SKID_MBN.ref(),K_WERSJE.ref(),ROK_F.ref());
   {? ~K__NAG.first() || _dalej:=exec('add_knag','control') ?};
   {? K__NAG.first()
   || {? K__NAG.r_lock(1,1)
      || exec('agr_merit1','!ctr_pdm_patw');
         K__NAG.r_unlock()
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Definicja agregacji wartości dla modelu '+SKID_MBN.KOD+' wersji '+K_WERSJE.SYM+' i roku '+ROK_F.NAZ+' jest obsługiwana przez innego operatora.',
              0,ROK_F.ref(),null,SKID_MBN.ref(),'')
      ?}
   ?};
   ROK_F.ref()<>UD_POM.ROK_KON & ROK_F.next()
!};
SKID_MBN.cntx_pop(); K__NAG.cntx_pop(); ROK_F.cntx_pop(); OKRO_F.cntx_pop(); K_WERSJE.cntx_pop();
VAR_DEL.delete('ile_wym')


\agr_merit1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Uruchamianie funkcji do tworzenia wartosci zagregowanych na podstawie kartotek źródłowych - wewnetrzna
::  OLD: \agr_xpertis1/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
K__POZ.cntx_psh();
ROK_F.cntx_psh();
OKRO_F.prefix(ROK_F.ref());
{? (ROK_F.ref()=UD_POM.ROK_POCZ & OKRO_F.seek(UD_POM.OKR_POCZ)) | (ROK_F.ref()<>UD_POM.ROK_POCZ & OKRO_F.first())
|| {!
   |? _maska:=exec('maska','control');
      K__POZ.use('yb'+_maska); K__POZ.index('K__NAG');
      {? exec('can_fun_run','control',1)
      || OKRO_F.cntx_psh();
         exec('agr_merit2','!ctr_pdm_patw');
         OKRO_F.cntx_pop()
      ?};
      OKRO_F.ref()<>UD_POM.OKR_KON & OKRO_F.next()
   !}
?};
ROK_F.cntx_pop(); K__POZ.cntx_pop()


\agr_merit2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Uruchamianie funkcji do tworzenia wartosci zagregowanych na podstawie kartotek źródłowych - wewnetrzna
::  OLD: \agr_xpertis2/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
SKID_MBX.cntx_psh();
SKID_MBX.index('UNIK'); SKID_MBX.prefix(CON_FUN.ref());
{? SKID_MBX.first()
|| wym:=obj_new(15); {! _i:=1..15 |! wym[_i]:=null !};
   {! |?
      {! _i:=1..ile_wym
      |! wym[_i]:={? ($('SKID_MBX.WYM'+form(_i,-2)+'R'))()=1
                  || ($('SKID_MBX.WYM'+form(_i,-2)+'S'))()
                  || ($('($SKID_MBX.WYM'+form(_i,-2)+'F)()'))()
                  ?}
      !};
      {? exec('spr_wym_xp','!ctr_pdm_patw')
      || _wart:=($SKID_MBX.FORM_KW)();
         {? _wart<>0 || exec('k__poz','control',_wart,1) ?}
      ?};
      SKID_MBX.next()
   !};
   VAR_DEL.delete('wym')
?};
SKID_MBX.cntx_pop()


\spr_wym_xp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2011]
:: OPIS: Sprawdzanie wymiarow
::  OLD: \spr_wym_xp/skid_ktr.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
UD_SKL.cntx_psh(); UD_SKL.prefix();
{! _i:=1..ile_wym
|! {? wym[_i]=null
   || exec('msg_null_skl','control',_i,0,CON_FUN.SKIDMWE); _zwrot:=0
   || {? UD_SKL.seek(wym[_i])
      || {? exec('szuk_wym','control',CON_FUN.SKIDMWE,_i)
         || _zwrot:=exec('spr_akt','control',UD_SKL.ref(),UD_SCH.ref())
         ?}
      || exec('add_kom','dok_fks',3,'',CON_FUN.SYM,'Nieudane dodanie podziału - nie znaleziono wymiaru numer '+$_i,0,null,null,CON_FUN.SKIDMWE,'');
         _zwrot:=0
      ?}
   ?}
!};
UD_SKL.cntx_pop();
_zwrot


\akt_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [1410]
:: OPIS: Aktualizacja modelu ze sprawozdań
::----------------------------------------------------------------------------------------------------------------------
{? CON_FUN.SKIDMWE
|| SKID_MBN.prefix();
   CON_FUN.SKIDMWE();
   exec('akt_spr2','!ctr_pdm_patw')
|| SKID_MBN.index('SPR');
   SKID_MBN.prefix('T');
   {? SKID_MBN.first()
   || {!
      |? exec('akt_spr2','!ctr_pdm_patw');
         SKID_MBN.next()
      !}
   ?}
?}


\akt_spr2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [1410]
:: OPIS: Aktualizacja modelu ze sprawozdań - dla modelu
::----------------------------------------------------------------------------------------------------------------------
K__NAG.index('UNIK1');
{? REF.S_FIRMA=REF.GRUPA
|| ROK_F.cntx_psh();
   OKRO_F.cntx_psh();
   ROK_F.prefix();
   OKRO_F.prefix();
   UD_POM.OKRO_F().ROK();
   K__NAG.prefix(REF.S_FIRMA,SKID_MBN.ref(),K_WERSJE.ref(),ROK_F.ref());
   {? ~K__NAG.first() || exec('add_knag','control',,,,REF.S_FIRMA) ?};
   OKRO_F.cntx_pop();
   ROK_F.cntx_pop()
|| K__NAG.prefix(REF.S_FIRMA,SKID_MBN.ref(),K_WERSJE.ref(),ROK_F.ref());
   {? ~K__NAG.first() || exec('add_knag','control') ?}
?};
{? K__NAG.first()
|| OKRO_F.cntx_psh();
   OKRO_F.prefix();
   OKRO_F.seek(UD_POM.OKRO_F);
   K__POZ.use('yb'+exec('maska','control'));
   OKRO_F.cntx_pop();
   K__POZ.index('RODZAJ');
   {? OkrDel.addIfNotExists(#UD_POM.OKRO_F)
   || K__POZ.prefix(0,K__NAG.ref(),UD_POM.OKRO_F);
      {? K__POZ.first() || {! |? K__POZ.del !} ?}
   ?};
   SKID_MBP.index('LP'); SKID_MBP.prefix(SKID_MBN.ref());
   _udt3:={? SKID_MBP.find_key(3) || SKID_MBP.UD_SCH().UD_TYP || null ?};
   _udt4:={? SKID_MBP.find_key(4) || SKID_MBP.UD_SCH().UD_TYP || null ?};
   _udt5:={? SKID_MBP.find_key(5) || SKID_MBP.UD_SCH().UD_TYP || null ?};
   UD_SKL.index('SYMBOL'); UD_SKL.prefix();
   Ud[3]:={? UD_SKL.find_key(_udt3,REF.FIRMA().SYMBOL,) || UD_SKL.ref() || null ?};
   _udtyp:=obj_new('T','W','S');
   _udtyp.T:={? UD_SKL.find_key(_udt4,'Jednostkowe') || UD_SKL.ref() || null ?};
   _udtyp.W:={? UD_SKL.find_key(_udt4,'Wyłączeniowe') || UD_SKL.ref() || null ?};
   _udtyp.S:={? UD_SKL.find_key(_udt4,'Skonsolidowane') || UD_SKL.ref() || null ?};
   UD_SKL.prefix(_udt5);
   _udfir:={? UD_SKL.find_key(REF.FIRMA().SYMBOL) || UD_SKL.ref() || null ?};
   OSPR.index('OKRES3');
   OSPR.prefix(REF.FIRMA,SSTALE.AR,SSTALE.AO,SSTALE.AO);
   {? OSPR.first()
   || GR_KOL.index('LP2');
      DEFW.index('ALGORYTM');
      WARTOSCI.index('WERSJA');
      W_MODEL.index('SKID_MBN'); W_MODEL.prefix(SKID_MBN.ref());
      {? W_MODEL.first()
      || {!
         |? GR_KOL.prefix(W_MODEL.GR_SIK,'F');
            {? GR_KOL.first()
            || {!
               |? W_UD_SPR.index('GR_KOL'); W_UD_SPR.prefix(W_MODEL.GR_SIK,GR_KOL.ref());
                  Ud[2]:={? W_UD_SPR.first() || W_UD_SPR.UD_SKL || null ?};
                  DEFW.prefix(W_MODEL.GR_SIK,'F');
                  {? DEFW.first()
                  || {!
                     |? W_UD_SPR.index('DEFW'); W_UD_SPR.prefix(W_MODEL.GR_SIK,DEFW.ref());
                        Ud[1]:={? W_UD_SPR.first() || W_UD_SPR.UD_SKL || null ?};
                        WARTOSCI.prefix(DEFW.ref(),GR_KOL.ref(),null,'','N',OSPR.ref());
                        {? WARTOSCI.first()
                        || {!
                           |? _typ:=WARTOSCI.WERSJA().WYKON;
                              {? _typ<>'W' | WERSJE.FIRMAWYL
                              || Ud[4]:={? _typ='T' || _udtyp.T |? _typ='W' || _udtyp.W || _udtyp.S ?};
                                 Ud[5]:={? WERSJE.FIRMAWYL & UD_SKL.find_key(WERSJE.FIRMAWYL().SYMBOL) || UD_SKL.ref() || _udfir ?};
                                 K__POZ.prefix(0,K__NAG.ref(),UD_POM.OKRO_F,Ud[1],Ud[2],Ud[3],Ud[4],Ud[5]);
                                 {? K__POZ.first()
                                 || K__POZ.WART+=WARTOSCI.WARTOSC;
                                    K__POZ.put()
                                 || K__POZ.blank(1);
                                    K__POZ.K__NAG:=K__NAG.ref();
                                    K__POZ.OKRES:=UD_POM.OKRO_F;
                                    {! _ii:=1..5
                                    |! ($('K__POZ.WYMIAR0'+$_ii+':=_a'))(Ud[_ii])
                                    !};
                                    K__POZ.WART:=WARTOSCI.WARTOSC;
                                    K__POZ.add()
                                 ?}
                              ?};
                              WARTOSCI.next()
                           !}
                        ?};
                        DEFW.next()
                     !}
                  ?};
                  GR_KOL.next()
               !}
            ?};
            W_MODEL.next()
         !}
      ?}
   ?}
?}

:Sign Version 2.0 jowisz:1045 2023/10/11 14:51:28 57921456a7e85dc1ba2b404f25a36bcb1033dd3bc129037868bb4f43f6b1822c1efb89cff17b16e5debd997ff6f9067ba84555e4e8d5dfc0c316f12ac7d5f1b8899389605d7c1d9a99bba7b113505386cc5fe8b0bbf5ef65646d7e828392513ef0c340c8e3b1f509bc9f49966e8d00a1ee5a30c5cd1ff1a6fbc7dca5c23494ab
