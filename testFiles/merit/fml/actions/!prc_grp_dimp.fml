:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !prc_grp_dimp.fml
:: Utworzony: 29.05.2017
:: Autor: areKc
::======================================================================================================================
:: Zawartość: Formuły czynności PRC_GRP_DIMP - Import we/wy z Excela.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.28]
:: OPIS: Import wejść i wyjść do Excel.
::   WE:
::   WY:
::  OLD: /harmgr12.rpm
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL

{? FUN.ask('%1\n%2'['Pliki do importu powinny być w formacie \'csv\'.'@,'Czy wykonać import danych z pliku?'@])
|| _bledy:=0;
   _conv:=iconv('Windows-1250');
   _path:='';
   _tmp_dir:=fmk_tmp_dir(0);
   {? type_of(_tmp_dir)<>type_of(~~)
   || _pth:=_tmp_dir.get_path();
      {? _pth<>''
      || _sep:=exec('sep','#file',1);
         _path:=_pth
      ?}
   || FUN.emsg('Nie udało się utworzyć katalogu tymczasowego po stronie serwera.'@)
   ?};

   _user:=
      {? _psep:=username()*'~'
      || _psep-1
      |? _psep:=username()*'.'
      || _psep-1
      || +username()
      ?}+username();
   _naz_sciez:='Harmonogram pracy - podstawowy - lokalny katalog do pliku *.csv';
   _sciez:=exec('get','#profile',,_user,_naz_sciez);
   _naz_plk:='Harmonogram pracy - podstawowy - nazwa pliku importowanego';
   _nazw:=exec('get','#profile',,_user,_naz_plk);

   _name_plk:=dlg_upload(_path,0,'.csv');
   _path_op:=_path+_sep+_name_plk;

   {? +_name_plk
   || {? var_pres('_TG')>100 || obj_del(_TG) ?};
      _TG:=tab_tmp(1,
         'D','DATE',,
         'O','STRING[20]',,
         'IP','INTEGER',,
         'P','STRING[50]',,
         'NB','STRING[2]',,
         'WE','TIME',,
         'WY','TIME',,
         'GP','TIME',,
         'GS','TIME',,
         'POMIN','STRING[1]',,
         'ERROR','STRING[1]',,
         'OPIS','STRING[30]',,
         'F_ZATR','STRING[1]',,
         'BL','STRING[1]','Zablokowany (T/N)'
      );

      _TG.index(_TG.ndx_tmp(,1,'P',,,'IP',,,'D',,));
      _wer:=_TG.mk_sel('','P',0,'impweyexcel',,,,,'U',,,,,'maximized');
      _TG.win_fld(_wer,,'D',,,10,,1,'Data'@,,'Data zdarzenia'@);
      _TG.win_fld(_wer,,'O',,,10,,1,'Opis'@,,'Opis zdarzenia'@);
      _TG.win_fld(_wer,,'F_ZATR',,,10,,1,'Forma współpracy'@,,'Rodzaj formy współpracy'@);
      _TG.win_fld(_wer,,'IP',,,10,,1,'Identyfikator'@,,'Identyfikator współpracownika'@);
      _TG.win_fld(_wer,,'P',,,20,,1,'Współpracownik'@,,'Dane współpracownika'@);
      _TG.win_fld(_wer,,'NB',,,5,,1,'Nieobecność'@,,'Rodzaj nieobecności'@);
      _TG.win_fld(_wer,,'WE',,,8,,0,'Wejście'@,,'Godzina wejścia'@);
      _TG.win_fld(_wer,,'WY',,,8,,0,'Wyjście'@,,'Godzina wyjścia'@);
      _TG.win_fld(_wer,,'GP',,,5,,1,'Praca'@,,'Czas pracy'@);
      _TG.win_fld(_wer,,'POMIN',,,,,,'Pomiń'@,,'Czy pominąć podczas importu [T/N]'@,2,,"'T'","'N'");
      _TG.win_fld(_wer,,'ERROR',,,,,,'Błąd'@,,'Czy zapis jest z błędem [T/N]'@,2,,"'T'","'N'");
      _TG.win_fld(_wer,,'BL',,,,,,'Zablokowany'@,,'Założona blokada (T/N)'@,2,,"'T'","'N'");
      _TG.win_fld(_wer,,'OPIS',,,25,,1,'Opis błędu'@,,'Informacja o błędzie'@);
      _TG.win_act(_wer,0,'Formuła','Popraw'@@,,'Poprawienie godziny wejścia i wyjścia',
         "  _red:=cur_tab().mk_edit('Godziny wejścia i wyjścia');
            cur_tab().win_esep(_red,'Parametry');
            cur_tab().win_efld(_red,,'WE',,,9,,,'Wejście',,'Godzina wejścia'@);
            cur_tab().win_efld(_red,,'WY',,,9,,,'Wyjscie',,'Godzina wyjścia'@);
            cur_tab().win_efld(_red,,'POMIN',,,,,,
               'Czy pominąć podczas importu?'@,,
               'Czas pracy zostanie pominięty podczas importu [T/N].'@,
               'check-box',
               'check_label=%1'['Pomiń'@],
               \"'T'\",
               \"'N'\"
            );
            cur_tab().win_efld(_red,,'ERROR',,,,,1,
               'Czy dane są z błędem?'@,,
               'Błędny zapis czasu pracy [T/N].'@,
               'check-box','check_label=%1'['Błąd'@],
               \"'T'\",
               \"'N'\"
            );
            exec('ok_esc','#window',cur_tab(),_red);
            cur_tab().win_edit(_red);
            {? cur_tab().edit()
            || {? cur_tab().WE<=cur_tab().WY
               || cur_tab().GP:=cur_tab().WY-cur_tab().WE
               || cur_tab().GP:=cur_tab().WY+time(24,0,0)-cur_tab().WE
               ?};
               cur_tab().put()
            ?}
         ",,,,,,'P'
      );
      _TG.win_act(_wer,0,'Formuła','Z&mień'@@,,'Zmiana wartości pola \"Pomiń\" w wierszu.'@,
         "  cur_tab().POMIN:={? cur_tab().POMIN='T' || 'N' || 'T' ?};
            cur_tab().put()
         ",,,1,,,'M'
      );

      _TG.win_act(_wer,0,'Formuła','Współpracownicy'@@,,'Zmiana wartości pola \"Pomiń\" dla współpracownika'@,
         "  _tab:=sql('select distinct IP, P, \\'?\\' as POMIN, \\'?\\' as POM, ERROR from :_a order by 2',cur_tab());
            cur_tab().cntx_psh();
            cur_tab().index(cur_tab().ndx_tmp('Pracownik',1,'IP',,,'D',,));
            {? _tab.first()
            || {!
               |? cur_tab().prefix(_tab.IP);
                  cur_tab().first();
                  _zn:=cur_tab().POMIN;
                  {! |? {? cur_tab().POMIN=_zn || cur_tab().next() || _zn:='?'; 0 ?} !};
                  _tab.POMIN:=_tab.POM:=_zn;
                  _tab.put();
                  _tab.next()
               !}
            ?};
            _wer:=_tab.mk_sel('Współpracownicy do importu'@,,,,,,,,'U',,,,,'maximized');
            _tab.win_fld(_wer,,'IP',,,5,,,'Identyfikator'@,,'Identyfikator pracownika.'@);
            _tab.win_fld(_wer,,'P',,,25,,,'Współpracownik'@,,'Dane współpracownika.'@);
            _tab.win_fld(_wer,,'POMIN',,,,,,'Pomiń'@,,'Czy pomijać pdczas importu [T/N].'@,2,,\"'T'\",\"'N'\",\"'?'\");
            _tab.win_act(_wer,,'Formuła','Z&mień'@,,'Zmiana wartości pola \"Pomiń\" dla współpracownika.'@,
               \" cur_tab().POMIN:=
                     {? cur_tab().POMIN='T'
                     || 'N'
                     |? cur_tab().POMIN='N' & cur_tab().POM='?'
                     || '?'
                     || 'T'
                     ?};
                  cur_tab().put()
               \",,,1,,,'M'
            );
            _tab.win_act(_wer,,
               'Formuła',
               'Zapisz'@,,
               'Zapisanie zmiany wartości pola \"Pomiń\" dla współpracowników.'@,
               \" sel_exit()
               \",,,,,,'Z'
            );
            _tab.win_act(_wer,,'Rekord',,,,
               \" {? cur_tab().ERROR='T'
                  || cur_tab().actions_grayed(cur_win(),'M')
                  || cur_tab().actions_grayed(cur_win(),'')
                  ?};
                  {? cur_tab().POMIN<>cur_tab().POM
                  || Color.fnd_kol('R_REJ_WW#01#02')
                  ?}
               \"
            );
            _tab.win_act(_wer,,'Formuła','Legenda',,,
               \" exec('legenda','color','R_REJ_WW#01#02')
               \",,,,,,'L'
            );
            _tab.win_btn(_wer,'text=%1,align=begin'['Z&mień'@],'menu:M');
            _tab.win_btn(_wer,'text=%1,icon=xwin16.png:13,panel=bottom,align=end'['OK'@],'menu:Z');
            _tab.win_btn(_wer,'text=%1,icon=xwin16.png:14,panel=bottom,align=end'['Anuluj'@],'key:Esc');
            _tab.win_sel(_wer);
            {? _tab.select()
            || {? _tab.first()
               || {!
                  |? {? _tab.POMIN<>_tab.POM & _tab.POMIN<>'?'
                     || cur_tab().prefix(_tab.IP);
                        {? cur_tab().first()
                        || {!
                           |? {? cur_tab().BL='N'
                              || cur_tab().POMIN:=_tab.POMIN;
                                 cur_tab().put()
                              ?};
                              cur_tab().next()
                           !}
                        ?}
                     ?};
                     _tab.next()
                  !}
               ?}
            ?};
            cur_tab().cntx_pop();
            cur_tab().ndx_drop()
         ",,1,,,,'W'
      );
      _TG.win_act(_wer,0,'Formuła','Test danych'@@,,,,
         "  params_set(params_get());
            exec('test_danych','!prc_grp_dimp')
         ",,,,,'T');
      _TG.win_act(_wer,0,'Formuła','Zapisz'@@,,,,"sel_exit()",,,,,'Z');
      _TG.win_act(_wer,0,'Formuła','Legenda'@@,,,
         "  exec('legenda','color','R_REJ_WW#01#')
         ",,,,,,
         'L',,'target=window'
      );
      _TG.win_act(_wer,0,'Kolejność');
      _TG.win_act(_wer,0,'Rekord',,,,
         "  {? cur_tab().BL='T'
            || cur_tab().actions_grayed(cur_win(),'PM');
               Color.fnd_kol('R_REJ_WW#01#02')
            |? cur_tab().ERROR='T'
            || Color.fnd_kol('R_REJ_WW#01#01')
            |? cur_tab().POMIN='T'
            || cur_tab().actions_grayed(cur_win(),'P');
               Color.fnd_kol('R_REJ_WW#01#02')
            || cur_tab().actions_grayed(cur_win(),'')
            ?}
         ");
      _TG.win_btn(_wer,'text=%1,align=begin'['Popraw'@],'menu:P');
      _TG.win_btn(_wer,'text=%1,align=begin'['Z&mień'@],'menu:M');
      _TG.win_btn(_wer,'text=%1,align=begin'['Współpracownicy'@],'menu:W');
      _TG.win_btn(_wer,'text=%1,panel=bottom,align=end'['Test danych'@],'menu:T');
      _TG.win_btn(_wer,'text=%1,icon=xwin16.png:13,panel=bottom,align=end'['OK'@],'menu:Z');
      _TG.win_btn(_wer,'text=%1,icon=xwin16.png:14,panel=bottom,align=end'['Anuluj'@],'key:Esc');
      _TG.win_sel(_wer);

      {? var_pres('LINIA')>0 || obj_del(LINIA) ?};
      LINIA:=obj_new(256);

      _czytaj:=
         "  _dl:=+_a;
            _txt:='';
            _li:=1;
            {! _ii:=1..obj_len(LINIA) |! LINIA[_ii]:='' !};
            {! _ii:=0..(_dl-1)
            |! {? (1+(_ii-_a))<>';'
               || _txt:=_txt+(1+(_ii-_a))
               || LINIA[_li]:=_txt;
                  _txt:='';
                  _li+=1
               ?}
            !};
            {? +_txt || LINIA[_li]:=_txt ?};
            1
         ";
      _g_t:=
         "  _txt:=_a;
            _gg:=_mm:=_ss:=0;
            {? +_txt
            || _poz:=_txt*':';
               {? _poz=0
               || _gg:=#_txt;
                  _txt:=''
               || _gg:=#((_poz-1)+_txt);
                  _txt:=_poz-_txt
               ?}
            ?};
            {? +_txt
            || _poz:=_txt*':';
               {? _poz=0
               || _mm:=#_txt;
                  _txt:=''
               || _mm:=#((_poz-1)+_txt);
                  _txt:=_poz-_txt
               ?}
            ?};
            {? +_txt
            || _poz:=_txt*':';
               {? _poz=0
               || _ss:=#_txt;
                  _txt:=''
               || _ss:=#((_poz-1)+_txt);
                  _txt:=_poz-_txt
               ?}
            ?};
            time(_gg,_mm,_ss)
         ";
      _g_d:=
         "  _rok:=_mc:=_dn:=0;
            {? +_a=10
            || _rok:=#(4+_a);
               _mc:=#(2+(5-_a));
               _dn:=#(_a+2)
            |? +_a=8
            || _rok:=#(4+_a);
               _mc:=#(2+(4-_a));
               _dn:=#(_a+2)
            ?};
            _ret:=date(0,0,0);
            {? _rok
            || {? 1<=_mc & _mc<=12
               || _ld:=date(_rok,_mc,0)~3;
                  {? _d<=_ld
                  || _ret:=date(_rok,_mc,_dn)
                  ?}
               ?}
            ?};
            _ret
         ";
:: Pobranie danych z pliku
      P.cntx_psh();
      P.index('PRACOIP');
      P.prefix(exec('ref_firma','ustawienia'));
      {? _plik:=fopen(_path_op,'r')
      || _TG.erase();
         _licz:=0;
         {!
         |? ~_bledy & (_wiersz:=fread(_plik))<>'\n'
         |! _licz+=1;
            {? _licz=2
            || _czytaj(_wiersz);
               _txt:=STR.w952maz(LINIA[2]);
               {? _txt*'styczeń' || _mc:=1
               |? _txt*'luty' || _mc:=2
               |? _txt*'marzec' || _mc:=3
               |? _txt*'kwiecień' || _mc:=4
               |? _txt*'maj' || _mc:=5
               |? _txt*'czerwiec' || _mc:=6
               |? _txt*'lipiec' || _mc:=7
               |? _txt*'sierpień' || _mc:=8
               |? _txt*'wrzesień' || _mc:=9
               |? _txt*'październik' || _mc:=10
               |? _txt*'listopad' || _mc:=11
               |? _txt*'grudzień' || _mc:=12
               || _mc:=0
               ?};
               {? ~_mc
               || FUN.emsg('%1\n%2'['Błędny format importowanych danych %1.'@[_txt],'Import zostanie przerwany.'@]);
                  _bledy:=1
               ?};
               _rok:=#(LINIA[2]+4)
            |? _licz>14
            || _czytaj(_wiersz);
               echo(_conv.to(LINIA[3]));
               _d1:=date(_rok,_mc,1);
               _d2:=date(_rok,_mc,0);
               {!
               |? _d1<=_d2
               |! _TG.blank();
                  _TG.ERROR:='N';
                  _TG.D:=_d1;
                  _TG.O:=((_d1$7*',')-1)+(_d1$7);
                  _TG.F_ZATR:=LINIA[1];
                  _TG.IP:=#LINIA[2];
                  _TG.P:=
                     {? P.find_key(_TG.F_ZATR,_TG.IP)
                     || _prac:=P.ref();
                        P.OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE
                     || _prac:=null();
                        LINIA[3]
                     ?};
                  _TG.POMIN:=_TG.BL:={? _prac & exec('isBlokada','prc_rozlicz',_prac,_TG.D) || 'T' || 'N' ?};
                  _TG.WY:=_g_t(LINIA[((_d1~3)*3)+3]);
                  _TG.GP:=_g_t(LINIA[((_d1~3)*3)+4]);
                  _x:=((~-LINIA[((_d1~3)*3)+2]));
                  {? '^NU^UW^UO^OP^UB^UC^UM^ZN^CH^NN^'*('^'+_x+'^')
                  || _TG.NB:=_x;
                     _TG.WE:=_TG.WY:=_TG.GP:=time(0,0,0)
                  || _TG.WE:=_g_t(_x)
                  ?};
                  {? _TG.WE<>*0 | _TG.WY<>*0 | +_TG.NB
                  || _TG.add()
                  ?};
                  _d1+=1
               !}
            ?}
         !};
         fclose(_plik);
         echo()
      ?};
      params_set('name_plk',_name_plk,'TG',_TG,'wer',_wer);

      {? ~_bledy
      || exec('test_danych','!prc_grp_dimp');
         {? _TG.select()
         || {? _rok>0 & FUN.ask('Zapisać dane z pliku: %1, w kartotece dni przepracowanych?'@[(~-_name_plk)])
            || _TG.index(_TG.ndx_tmp(,1,'IP',,,'D',,));
:: zapisanie danych z importu
               _TAB:=sql('select distinct IP from :_a order by 1',_TG);
:: usunięcie z listy pracowników pomijanych - jeśli nie ma żadnego zapisu dla pracownika to pomijamy
               {? _TAB.first()
               || {!
                  |? _TG.prefix(_TAB.IP);
                     _pomin:=1;
                     {? _TG.first()
                     || {!
                        |? {? _TG.POMIN='N'
                           || _pomin:=0
                           ?};
                           _pomin & _TG.next()
                        !}
                     ?};
                     {? _pomin || _TAB.del(1,1)=2 || _TAB.next() ?}
                  !}
               ?};

:: Definicja okna do wyświetlania komunikatów.
               _width:=MS.fld_len('OSOBA','NAZWISKO')+MS.fld_len('OSOBA','PIERWSZE')+MS.fld_len('P','T')+15;
               KOMM.init(_width,,' Uwagi do wprowadzanych danych po imporcie we/wy z arkusza Excel.'@,'');

               {? _TAB.first()
               || _kas_obec:=FUN.ask('%1\n%2'
                     ['Czy usunąć zapisy z kartoteki dni przepracowanych przed importem godzin z pliku?'@,
                      'Kasowanie dotyczy danych z wybranych dni.'@]
                  );
                  _TG.first();
:: sprawdzamy czy w danym miesiącu można wprowadzać obecności
                  {? __HARM.mc_otw(_TG.D,0,0,1)
                  || {!
                     |? _TG.prefix(_TAB.IP);
                        {? _TG.first() & P.find_key(_TG.F_ZATR,_TG.IP)
                        || _komm:=
                              obj_new('lp','closed','blocked','ok','lpadd','cempty','bempty','okempty','locked','lempty'
                           );
                           _komm.cempty:=_komm.bempty:=_komm.okempty:=_komm.lempty:=0;
                           _komm.lp:=KOMM.sect_beg(
                              ' %1 %2 %3:'[P.OSOBA().NAZWISKO,P.OSOBA().PIERWSZE,'[nr teczki - %1]'@[form(P.T)]],
                              'xwin16.png:100'
                           );
                           KOMM.sect_end();
                           _komm.closed:=KOMM.sect_beg(' Zamknięty miesiąc, aktualizacja niemożliwa'@,'xwin16.png:157');
                           KOMM.sect_end();
                           KOMM.chngroot(_komm.closed,_komm.lp);
                           _komm.blocked:=KOMM.sect_beg(
                              ' Dane przeniesione do rozliczenia, aktualizacja niemożliwa'@,
                              'xwin16.png:157'
                           );
                           KOMM.sect_end();
                           KOMM.chngroot(_komm.blocked,_komm.lp);
                           _komm.ok:=KOMM.sect_beg(' Dane zaktualizowane'@,'xwin16.png:1');
                           KOMM.sect_end();
                           KOMM.chngroot(_komm.ok,_komm.lp);
                           _komm.locked:=KOMM.sect_beg(' Dane zablokowane'@,'xwin16.png:157');
                           KOMM.sect_end();
                           KOMM.chngroot(_komm.locked,_komm.lp);

                           {? exec('get_msc_status','grafik',_TG.D)='Z'
                           || _komm.lpadd:=KOMM.add(' '+$_TG.D,'xwin16.png:83');
                              KOMM.chngroot(_komm.lpadd,_komm.closed);
                              _komm.cempty+=1
                           || {!
                              |? {? (P.DZ=#0 | P.DZ>=_TG.D) & P.DZA<=_TG.D
                                 || {? _TG.POMIN='T'
                                    || _komm.lpadd:=KOMM.add(' '+$_TG.D,'xwin16.png:83');
                                       KOMM.chngroot(_komm.lpadd,_komm.locked);
                                       _komm.lempty+=1
                                    |? __HARM.mc_zam_prac(_TG.D)
                                    || _komm.lpadd:=KOMM.add(' '+$_TG.D,'xwin16.png:83');
                                       KOMM.chngroot(_komm.lpadd,_komm.blocked);
                                       _komm.bempty+=1
                                    || _komm.lpadd:=KOMM.add(' '+$_TG.D,'xwin16.png:83');
                                       _komm.okempty+=1;
                                       KOMM.chngroot(_komm.lpadd,_komm.ok);
                                       {? _kas_obec || exec('usun_wewy','prc_wewy',P.ref(),_TG.D~1,_TG.D~2,,_TG.D) ?};
:: import zapisów tylko w okresie pracy
                                       exec('save2wewy','prc_wewy',
                                          P.ref(),
                                          _TG.D,
                                          _TG.WE,
                                          {? _TG.WY<_TG.WE || _TG.D+1 || _TG.D ?},
                                          _TG.WY,,,,
                                          'SYS_3'
                                       )
                                    ?}
                                 ?};
                                 _TG.next()
                              !}
                           ?}
                        ?};
                        {? ~_komm.cempty || KOMM.del(_komm.closed) ?};
                        {? ~_komm.bempty || KOMM.del(_komm.blocked) ?};
                        {? ~_komm.okempty || KOMM.del(_komm.ok) ?};
                        {? ~_komm.lempty || KOMM.del(_komm.locked) ?};
                        obj_del(_komm);
                        _TAB.next()
                     !}
                  || FUN.info('Zamknięty okres rozliczeniowy - import zabroniony.'@)
                  ?}
               ?};
               KOMM.select(,,,,,0)
            ?}
         ?}
      ?};
      P.cntx_pop();
      _TG.ndx_drop();
      {? var_pres('_TG')>100 || obj_del(_TG) ?}
   ?}
?};
~~


\test_danych
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.28]
:: OPIS: Sprawdzenie poprawności danych podczas importu wejść i wyjść do Excel.
::   WE: _a - tabela z danymi do sprawdzenia
::   WY:
::  OLD: /harmgr12.rpm
::----------------------------------------------------------------------------------------------------------------------
P.cntx_psh();
P.index('PRACOIP');
P.prefix(exec('ref_firma','ustawienia'));
_TG:=params_get().TG;
_name_plk:=params_get().name_plk;
_sep:=(%9);
_zap:="fwrite(_a,_b)";
_kl:=(%13)+(%10);
:: sprawdzenie poprawności danych
_TG.cntx_psh();
_TG.index(_TG.ndx_tmp(,1,'D',,,'P',,,'IP',,));
_nazwa:=STR.maz2w95('ERROR_'+(_name_plk-4)+'.txt');
_iter:=0;
{!
|? _plik:=fopen(_nazwa,'br',1)
|! fclose(_plik);
   _iter+=1;
   _nazwa:=1-_nazwa;
   _nazwa:=($_iter)+_nazwa
!};
_plik:=fopen(_nazwa,'bw',1);
_err:=0;
:: lista pracowników nie znalezionych w kartotece współpracowników
{? _TG.first()
|| _pomip:=',';
   {!
   |? {? _TG.POMIN='N' & ~P.find_key(_TG.F_ZATR,_TG.IP)
      || _TG.POMIN:=_TG.ERROR:='T';
         _TG.OPIS:='nie znaleziono współpracownika'@;
         _TG.put();
         {?  ~(_pomip*(','+$_TG.IP+','))
         || _pomip+=$_TG.IP+',';
            _linia:=$_TG.IP+_sep+_TG.P+_sep;
            _err:=1;
            _zap(_plik,_linia+_sep+'nie znaleziono współpracownika'@+_kl)
         ?}
      ?};
      _TG.next()
   !}
?};
{? _err=1 || _zap(_plik,_kl) ?};
:: godziny pracy w dniu, w którym zarejestrowano nieobecność
_dt:=date(0,0,0);
{? _TG.first()
|| {!
   |? {? _TG.POMIN='N'
      || {? _dt<>_TG.D
         || _dt:=_TG.D;
            {? var_pres('_tmp1')>0 || obj_del(_tmp1) ?};
            _tmp1:=sql(
               'select P.IP as IP '
               'from N join P '
               'where N.FIRMA=:_a and  N.KOR=\'N\' and N.OD<=to_date(:_b) and to_date(:_b)<=N.DO',
               exec('ref_firma','ustawienia'),_TG.D
            );
            _itmp1:=_tmp1.ndx_tmp(,,'IP',,)
         ?};
         {? P.find_key(_TG.F_ZATR,_TG.IP)
         || _linia:=$_TG.IP+_sep+_TG.P+_sep+_TG.D$1+_sep;
            _tmp1.index(_itmp1);
            {? (*_TG.WE<>0 | *_TG.WY<>0) & _tmp1.find_key(P.IP)
            || _err:=1;
               _TG.POMIN:=_TG.ERROR:='T';
               _TG.OPIS:='import godzin w dniu nieobecności'@;
               _TG.put();
               _zap(_plik,_linia+'import godzin w dniu nieobecności'@+_kl)
            ?}
         ?}
      ?};
      _TG.next()
   !}
?};
{? var_pres('_tmp1')>0 || obj_del(_tmp1) ?};
{? _err=1 || _zap(_plik,_kl) ?};
:: nieobecność w dniu, w którym nie ma nieobecności w tabeli z nieobecnościami lub nieobecność jest innego rodzaju
_dt:=date(0,0,0);
{? _TG.first()
|| {!
   |? {? _TG.POMIN='N'
      || {? _dt<>_TG.D
         || _dt:=_TG.D;
            {? var_pres('_tmp1')>0 || obj_del(_tmp1) ?};
            _tmp1:=sql(
               'select P.IP as IP, R.RN as RN '
               'from N join P join R '
               'where N.FIRMA=:_a and N.OD<=to_date(:_b) and to_date(:_b)<=N.DO',
               exec('ref_firma','ustawienia'),_TG.D
            );
            _itmp1:=_tmp1.ndx_tmp(,,'IP',,)
         ?};
         {? +_TG.NB
         || {? P.find_key(_TG.F_ZATR,_TG.IP)
            || _linia:=$_TG.IP+_sep+_TG.P+_sep+_TG.D$1+_sep;
               _nieob:=
                  {? _TG.NB='UW' || ','+__RUB.sys_sql(111)+','
                  |? _TG.NB='UB' || ','+__RUB.sys_sql(112)+','
                  |? _TG.NB='UM' || ','+__RUB.sys_sql(115)+','
                  |? _TG.NB='UO' || ','+__RUB.sys_sql(1161)+','
                  |? _TG.NB='OP' || ','+__RUB.sys_sql(1162)+','+__RUB.sys_sql(1225)+','
                  |? _TG.NB='UC' || ','+__RUB.sys_sql(114)+','
                  |? _TG.NB='CH' || ','+__RUB.sys_sql(126)+','
                  |? _TG.NB='NN' || ','+__RUB.sys_sql(1321)+','
                  |? _TG.NB='NU' || ','+__RUB.sys_sql(1322)+','+','+__RUB.sys_sql(1323)+','
                  |? _TG.NB='ZN' || ','+__RUB.sys_sql(124)+','
                  || '0'
                  ?};
               _brak:=1;
               _tmp1.index(_itmp1);
               {? _tmp1.find_key(P.IP)
               || _brak:=0;
                  {? ~(_nieob*(','+$_tmp1.RN+','))
                  || _err:=1;
                     _TG.POMIN:=_TG.ERROR:='T';
                     _TG.OPIS:='inny rodzaj nieobecności'@;
                     _TG.put();
                     _zap(_plik,_linia+'inny rodzaj nieobecności'@+_kl)
                  ?}
               ?};
               {? _brak=1
               || _err:=1;
                  _TG.POMIN:=_TG.ERROR:='T';
                  _TG.OPIS:='brak nieobecności'@;
                  _TG.put();
                  _zap(_plik,_linia+'brak nieobecności'@+_kl)
               ?}
            ?}
         ?}
      ?};
      _TG.next()
   !}
?};
_TG.cntx_pop();

{? var_pres('_tmp1')>0 || obj_del(_tmp1) ?};
{? _err=1 || _zap(_plik,_kl) ?};
fclose(_plik);
P.cntx_pop();
~~

:Sign Version 2.0 jowisz:1045 2022/06/30 14:22:53 7e10e91cff63caf6bfd02202f2477019aae72b4202e7c68497696c0dfcba2a573b632766b4853faaf5e90eb4b8f35fc69b5263efaee9573d7c6e5ccceb9e146fb61a16a0668b5ce450efea86d02a8cab33f22bf011086a896931543e9e33e10c17eb13e0d7eddaf3057d7df13682a6d3ff91f407fcfc107d66698676ce00dc6d
