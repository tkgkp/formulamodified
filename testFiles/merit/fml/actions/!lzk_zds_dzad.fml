:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !lzk_zds_dzad.fml
:: Utworzony: 08.09.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Rejestracja zamówienia dostaw
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła główna czynności
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
::# permissions=ODDZ,LZK,LMG,TARD
::# access=exec('access','!lzk_zds_dzad')
::# parses=exec('parses','!lzk_zds_dzad')
::# kind=WE,   symbol=TYPYZAM, type=_TYPYZAM, name=Typ zamówienia dostaw,              required=N, fml_val="exec('wyb_zam','zamowienia','D')"
::# kind=WE,   symbol=ZK_N,    type=_ZK_N,    name=Wzorzec zamówienia do utworzenia,   required=N
::# kind=WE,   symbol=ZD_NAG,  type=_ZD_NAG,  name=Zamówienie dostaw,                  required=N, keyref=T
::# kind=WE,   symbol=PD_K,    type=_PD_K,    name=Pozycja zkoszyka planu dostaw,      required=N
::# kind=WY,   symbol=ZD_NAG,  type=_ZD_NAG,  name=Zamówienie dostaw,                  required=N
_in:=params_get().in;
_out:=params_get().out;
_mp:=params_get().mp;

exec('init_zds','lzk');

:: Przepisanie portu wejściowego ZD_NAG na wyjściowy ZD_NAG
{? var_pres('ZD_NAG',_in)=type_of(null()) & _in.ZD_NAG
   & (var_pres('ZD_NAG',_out)<>type_of(null()) | _out.ZD_NAG=null())
|| _out.ZD_NAG:=_in.ZD_NAG;
   _mp.save(,_out)
?};

:: Czy utworzono zamówienie dostaw? [0/1]
_czy_zam:=var_pres('ZD_NAG',_out)=type_of(null()) & _out.ZD_NAG;
_czy_zin:=var_pres('ZD_NAG',_in)=type_of(null()) & _in.ZD_NAG;

:: WSTĘPNE WALIDACJE
_clean_result:=params_exec('clean','!lzk_zds_dzad',_mp,_in);
_can_continue:=_clean_result.RESULT;
{? _can_continue=0
|| return()
?};

:: Uruchomiona akcja
_akcja:=_mp.akcja();
_auto:=0;
_area_zds:=_mp.pathArea('LZK_ZDS');
_area:=_area_zds | _mp.pathArea('LZK_PLD') | _mp.pathArea('LSP_ZKN');
_proc:=_mp.pathProc();
_todo:=_mp.pathTodo() | _mp.pathArea() & ~_area;
_autoakc:=exec('autoAkc','#b__box',_mp,200180,'LZK_ZDS_AZAD');

{? _todo
:: Ustawienie kontekstu wg instancji elementu w procesie
|| {? _czy_zam
   || 1
   || {? ~_mp.isMicro()
      || _akcja:='START_TODO'
      || _mp.error('Brak parametru wyjściowego ZD_NAG.')
      ?}
   ?}
?};

:: Sprawdzenie uprawnień
{? params_exec('permissions_chk','lzk','')=0 || return() ?};

:: Wyzwalacz, który po dodaniu nagłówka dokumentu:
:: - add: dodaje rekord kluczowy nagłówka dokumentu
::   del: usuwa rekord kluczowy nagłówka dokumentu
:: - add: zapisuje parametr wyjściowy ZD_NAG = wskazanie na nagłówek zamówienia dostawy
::   del: zapisuje parametr wyjściowy ZD_NAG = null
_mp.trigRef('ZD_NAG',,1,,exec('kind_out','#b_port'),'ZD_NAG');

:: Zamówienie
{? ~_czy_zam & var_pres('ZK_N',_in)=type_of(null()) & _in.ZK_N
|| _akcja:='Zamówienie';
   _auto:=_mp.isAutoRun()
?};

{? _czy_zam & ~(exec('FindAndGet','#table',ZD_NAG,_out.ZD_NAG,,"name()",'')*'__')
||
   _mp.error('Zamówienie '+exec('FindAndGet','#table',ZD_NAG,_out.ZD_NAG,,"SYM",'')+' przesłane do archiwum. '
             'Redakcja niemożliwa.')
|? _czy_zin & ~(exec('FindAndGet','#table',ZD_NAG,_in.ZD_NAG,,"name()",'')*'__')
||
   _mp.error('Zamówienie '+exec('FindAndGet','#table',ZD_NAG,_in.ZD_NAG,,"SYM",'')+' przesłane do archiwum. '
             'Redakcja niemożliwa.')
|? _akcja='Zamówienie'
|| {? var_pres('TYPYZAM',_in)=type_of(null()) & _in.TYPYZAM<>null() || BEER.TYPYZAM:=_in.TYPYZAM ?};
   params_set('out',_out,'mp',_mp,'akcja',_akcja);
   {? exec('zk2zd','!lzk_zds_dzad',_in.ZK_N,_auto,_in.TYPYZAM)=0
   ||
::    Zamówienie bez pozycji i zostało usunięte
      _mp.cancel()
   ||
::    Podczytanie parametrów wyjściowych
      _outa:=_mp.load(exec('kind_out','#b_port'));
      {? var_pres('ZD_NAG',_outa)<>type_of(~~) & _outa.ZD_NAG
::    Dodano dokument
      ||
::       ustawienie się na zamówieniu lub zakończenie procesu dla czynności automatycznej
         {? _auto & {? ZD_NAG.seek(_outa.ZD_NAG) || ZD_NAG.STAT_REJ<>'N' || 0 ?}
         || _mp.done()
         |? _area_zds
         || ZD_NAG.seek(_outa.ZD_NAG)
         ?}
::    Wycofanie czynności bo nie dodano dokumentu
      || _mp.cancel()
      ?}
   ?}

|? _akcja='Plan_dostaw'
|| {? var_pres('PD_K',_in)<>type_of(null()) || _in.PD_K:=null() ?};
   exec('plz_bdod','zamowienia',_in.PD_K);
   _outa:=_mp.load(exec('kind_out','#b_port'));
   {? var_pres('ZD_NAG',_outa)<>type_of(~~) & _outa.ZD_NAG
   || PD_Z.RSQL:=$_outa.ZD_NAG
   || _mp.cancel()
   ?}

|? _akcja='Dołącz'
   | _proc
   | _akcja='START_TODO'
:: Obsługa Dołącz - dołącz w oknie obszaru i start procesu z pulpitu
|| {? var_pres('TYPYZAM',_in)=type_of(null()) & _in.TYPYZAM<>null()
   || BEER.TYPYZAM:=_in.TYPYZAM
   |? _proc | _akcja='START_TODO'
:: Wybór typu zamówienia
   || BEER.TYPYZAM:=null();
      _p3024:=exec('get','#params',3024,2,OPERATOR.USER);
      exec('typ_zamm','zamowienia',_p3024,'D')
   ?};

   {? BEER.TYPYZAM
   ||
::    Parametr 'akcja' wykorzystywany w formułach przycisków 'Pozycje', 'Zakończ'
      _plan:=_akcja='Plan_dostaw';
      params_set('out',_out,'mp',_mp,'akcja',_akcja);

      exec('zdnag_dol','zamdst_nag');

::    Podczytanie parametrów wyjściowych
      _outa:=_mp.load(exec('kind_out','#b_port'));
      {? var_pres('ZD_NAG',_outa)<>type_of(~~) & _outa.ZD_NAG
::    Dodano dokument
      ||
::       Ustawienie się na dodanym dokumencie w widoku obszaru
         {? _area || ZD_NAG.seek(_outa.ZD_NAG) ?};
::       Zapisanie informacji dla planu dostaw
         {? _plan
         || __Plz.cntx_psh();
            _plz:=__Plz.ref();
            _params:=exec('plz_a','zamowienia');
            _params.TAB:=__Plz;
            _params.DD:=ZD_NAG.DTPREAL;
            _params.DZ:=ZD_NAG.DATA;
            _params.SYM:=ZD_NAG.SYM;
            _params.KH_SKR:=ZD_NAG.KH().SKR;
            _params.WAL:=ZD_NAG.WAL().KOD;
            _params.KRS:=ZD_NAG.KRS;
            _params.R:='D';
            _params.ZAM_REF:=$ZD_NAG.ref();
            {? exec('plz_add','zamowienia',_params)
            ||
               _plz:=__Plz.ref()
            ?};
            __Plz.cntx_pop();
            __Plz.seek(_plz)
         ?}

::    Wycofanie czynności bo nie dodano dokumentu
      || _mp.cancel()
      ?}
   ?}

|? _akcja='Kopiuj'
||
   exec('zd_kopiuj','!lzk_zds_dzad')

|? _akcja='Popraw'
   | _todo
|| {? var_pres('ZD_NAG',_out)=type_of(null())
:: Uruchomione w procesie
   || ZD_NAG.cntx_psh();
      ZD_NAG.prefix();
      {? ZD_NAG.seek(_out.ZD_NAG)
      ||
         params_set('out',_out,'mp',_mp,'akcja',_akcja);
         exec('zdnag_pop','zamdst_nag');

         _mp.descTodo()
      ?};
      ZD_NAG.cntx_pop()
   |? _todo
:: Uruchomione zadanie z listy todo i brak _out.FAKS wtedy zadanie wycofujemy
   || _mp.cancel()
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      params_set('out',_out,'mp',_mp,'akcja',_akcja);
      exec('zdnag_pop','zamdst_nag')

   ?}

|? _akcja='Usuń'
   | _akcja='Usuń_z_planu'
|| {? var_pres('ZD_NAG',_out)=type_of(null())
:: Uruchomione w procesie
   || _zdnag:=null();
      ZD_NAG.cntx_psh();
      _rec:=exec('rec_after_del','#table',ZD_NAG);
      {? ~_area_zds || ZD_NAG.prefix() ?};
      {? ZD_NAG.seek(_out.ZD_NAG)
      ||
         _wyn:=exec('zdnag_usu','zamdst_nag',_akcja='Usuń_z_planu');

         {? ~ZD_NAG.seek(_out.ZD_NAG)
::       Wycofuję instancję jeśli nie znaleziono dokumentu
         || _mp.cancel()
         ?};
         _zdnag:=ZD_NAG.ref()
      ?};
      ZD_NAG.cntx_pop();
      {? _wyn=1 & _rec<>null() || ZD_NAG.seek(_rec) ?};
::    Ustawienie się na kolejnym dokumencie w widoku obszaru
      {? _area_zds || {? _zdnag || ZD_NAG.seek(_zdnag) ?} ?}
   |? _mp.isMicro()
:: Uruchomione poza procesem
   ||
      _rec:=exec('rec_after_del','#table',ZD_NAG);
      _wyn:=exec('zdnag_usu','zamdst_nag',1);
      {? _wyn=1 & _rec<>null() || ZD_NAG.seek(_rec) ?};

      _mp.done()
   ?}

|? _akcja='Zakończ_wer' & _area_zds
|| {? exec('zakoncz','zamdst_nag',_autoakc) || _mp.done() ?}

|| _mp.error('Nieobsługiwana ścieżka.')
?};

{? _area_zds & ZD_NAG.sel_size()=0 || exec('zakr_set','zamdst_nag') ?}


\desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Formuła TO-DO
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       mp  - obiekt odpowiedzialny za obsługę procesu
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_out:=_mp.load(exec('kind_out','#b_port'));

{? var_pres('ZD_NAG',_out)<>type_of(~~) & _out.ZD_NAG
|| 'Zakończ rejestrację zamówienia dostawy: %1'@@[exec('record','#to_string',_out.ZD_NAG)]
|| _in:=_mp.load(exec('kind_in','#b_port'));
   {? var_pres('ZD_NAG',_in)=type_of(null()) & _in.ZD_NAG
   || 'Zakończ rejestrację zamówienia dostawy: %1'@@[exec('record','#to_string',_in.ZD_NAG)]
   |? var_pres('ZK_N',_in)<>type_of(~~)
   || {? _in.ZK_N
      || _tmp:=exec('FindAndGet','#table',ZK_N,_in.ZK_N,,"{? T().R='Z' || 'S' || 'W' ?}",'');
         {? _tmp<>'' ||
            {? _tmp='S' || 'Zarejestruj zamówienie dostawy na podstawie zamówienia sprzedaży: %1'@@
                           [exec('FindAndGet','#table',ZK_N,_in.ZK_N,,"exec('record','#to_string',ZK_N.ref())",'')]
            |? _tmp='W' || 'Zarejestruj zamówienie dostawy na podstawie zamówienia wewnętrznego: %1'@@
                           [exec('FindAndGet','#table',ZK_N,_in.ZK_N,,"exec('record','#to_string',ZK_N.ref())",'')]
            ?}
         || ''
         ?}
::      || 'Zarejestruj zamówienie dostawy na podstawie zamówienia %1'@@[exec('FindAndGet','#table',ZK_N,_in.ZK_N,
::            ,"{? T().R='Z' || 'sprzedaży: ' || 'wewnętrznego: ' ?}+exec('record','#to_string',ZK_N.ref())",'')]
      || ''
      ?}
   || 'Zarejestruj zamówienie dostawy'@@
   ?}
?}


\zdnag_dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zamówienie dostaw - Dołącz
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_DZAD';
_params.AKCJA:='Dołącz';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYPYZAM',BEER.TYPYZAM);

exec('mp_run','#b__box',_params)


\zdnag_popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zamówienie dostaw - Popraw
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_DZAD';
_params.UIDREF:=ZD_NAG.uidref();
_params.AKCJA:='Popraw';

exec('mp_run','#b__box',_params)


\zdnag_usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zamówienie dostaw - Usuń
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_DZAD';
_params.UIDREF:=ZD_NAG.uidref();
_params.AKCJA:='Usuń';
_params.GRUPA:=ZD_NAG.sel_size()>0;

exec('mp_run','#b__box',_params)


\zdnag_pozycje_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zamówienia dostaw - Pozycje - okno wertowania
::   WE: [_a] - ZD_POZ.uidref(), na którym ma stanąć selektor
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('')
|| _a:=''
?};
BPMN.END:=0;
exec('zd_poz','zamdst_poz',,_a);
{? AreaTitle.area='LZK_ZDS' || exec('zakr_set','zamdst_nag') ?}


\zdnag_zakoncz_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zamówienie dostaw - Zakocz - okno wertowania
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_DZAD';
_params.UIDREF:=ZD_NAG.uidref();
_params.AKCJA:='Zakończ_wer';

exec('mp_run','#b__box',_params)


\zdnag_kopiuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zamówienie dostaw - Kopiuj
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_DZAD';
_params.AKCJA:='Kopiuj';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYPYZAM',ZD_NAG.T);

exec('mp_run','#b__box',_params)


\zd_kopiuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: przed kopiuj okna WER tabeli ZD_NAG, kopiowanie zamowienia dostawy
::  OLD: \zd_kopiuj/zd.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('zam_lock','zamdst_nag') & ZD_NAG.r_lock(1,1,1)
||
   {? exec('czyuprmg','!lzk_zds_dzad') & FUN.ask('Skopiować zamówienie?'@)
   ||
      _nowe:=ZD_NAG.ST='N';
      ZD_NAG.cntx_psh();
      _wyn:=exec('zd_kopiuj1','!lzk_zds_dzad',ZD_NAG.ref());
      ZD_NAG.cntx_pop();
      ZD_NAG.r_unlock();
      {? _wyn<>null & ~ZD_NAG.seek(_wyn)
      || FUN.info('Zamówienie zostało skopiowane.\n'@+
                  'Status nowego zamówienia został ustawiony jako NOWE.\n\n'@+
                  'Aktualnie zredagowane zamówienie nie jest dostępne w ustawionym zakresie widoku zamówień.'@)
      |? _wyn<>null
      || FUN.info('Zamówienie zostało skopiowane.\n'@+
          {? _nowe || '' || 'Status nowego zamówienia został ustawiony jako NOWE.'@ ?})
      ?}
   ?};
   ZD_NAG.r_unlock()
?}


\zd_kopiuj1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: awi [2008]
:: OPIS: kopiowanie zamowienia dostawy
::   WE:  _a  - ZD_NAG.ref
::   WY: ref nowego zamowienia lub null
::  OLD: \zd_kopiuj1/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_mask_bie:=5-ZD_NAG.name();

_zd_nag:=obj_new(ZD_NAG.fld_num());
_zd_poz:=obj_new(ZD_POZ.fld_num());
_zd_rn:=obj_new(ZD_RN.fld_num());
_zd_rp:=obj_new(ZD_RP.fld_num());
_fakso:=obj_new(FAKSO.fld_num());

_ref_old:=_a;
_ref_new:=null;

:: kopiowanie naglowka

ZD_NAG.prefix();
{? ZD_NAG.seek(_a)
||
   {! _licz:=1..ZD_NAG.fld_num() |! _zd_nag[_licz]:=ZD_NAG[_licz] !}
||
   return(null)
?};
:: obsluga memo
_memo:=ZD_NAG.memo_get('r','UW');
ZD_NAG.memo_get(,'UW');

ZD_NAG.blank();
{! _licz:=1..ZD_NAG.fld_num()
|! {?  var_pres(ZD_NAG.fld_acr(_licz),ZD_NAG)<>var_pres('UW',ZD_NAG) || ZD_NAG[_licz]:=_zd_nag[_licz] ?}
!};

:: wyznaczenie nowego numeru
BEER.TYPYZAM:=ZD_NAG.T;
POM.TAB:='ZD_NAG';
POM.TYPDOK:=ZD_NAG.T().KOD;
ZD_NAG.DATA:=date();
ZD_NAG.R:=ZD_NAG.DATA~1;
ZD_NAG.M:=ZD_NAG.DATA~2;
ZD_NAG.DTPREAL:=date(0,0,0);
ZD_NAG.D_POTW:=date(0,0,0);
ZD_NAG.K:=exec('zwr_okr','#datetime',date(ZD_NAG.R,ZD_NAG.M,1),5);

:: zmiana wartosci pol naglowka tworzonego zamowienia

ZD_NAG.ST:='N';
ZD_NAG.STAN:='N';
ZD_NAG.PR:=0;
ZD_NAG.STAT_REJ:='N';
ZD_NAG.ZRE:='N';
ZD_NAG.US:=OPERATOR.USER;
ZD_NAG.DR:=date();
ZD_NAG.CR:=time();
ZD_NAG.EDI_R:='N';
ZD_NAG.EDI_W:='N';
ZD_NAG.POTW:='N';
ZD_NAG.TRN:='N';
ZD_NAG.OBI_POW:='';
ZD_NAG.EZAPOT:='';
ZD_NAG.BL_STAT:=exec('zdnag_blstat_bl','zamdst_nag');

do;
{? ZD_NAG.add()
||
   {? _memo.is_open || ZD_NAG.memo_put(_memo,'UW') ?};
   ZD_NAG.NR:=0;
   ZD_NAG.NR:=exec('numer_new','numery');
   exec('znak','numery','ZD_NAG');
   ZD_NAG.BL_STAT:=exec('zdnag_blstat_bl','zamdst_nag');
   ZD_NAG.put();
   _ref_new:=ZD_NAG.ref;
   ZD_NAG.memo_put(,'UW');
   _wyn:=1
||
   undo()
?};

:: kopiowanie pozycji

ZD_POZ.index('POZ');
ZD_POZ.prefix(_ref_old);
{? ZD_POZ.first()
||
   {!
   |? _zd_p_o:=ZD_POZ.ref();
      {! _licz:=1..ZD_POZ.fld_num() |! _zd_poz[_licz]:=ZD_POZ[_licz] !};
      ZD_POZ.cntx_psh();
      ZD_POZ.clear();
      {! _licz:=1..ZD_POZ.fld_num() |! ZD_POZ[_licz]:=_zd_poz[_licz] !};

::    zmiana wartosci pol pozycji tworzonego zamowienia

      ZD_POZ.ZD_NAG:=_ref_new;
      ZD_POZ.IL_ZRE:=0;
      ZD_POZ.IL_KOR+=ZD_POZ.IL_ZAM;
      ZD_POZ.IL_ZAM:=0;
      ZD_POZ.US:=null();
      ZD_POZ.DK:=date(0,0,0);
      ZD_POZ.CK:=time(0,0,0);
      ZD_POZ.D_POTW:=date(0,0,0);
      ZD_POZ.KH:=ZD_POZ.ZD_NAG().KH;
      ZD_POZ.KH_MSC:=ZD_POZ.ZD_NAG().KH_MSC;
      ZD_POZ.IL_ZT:=ZD_POZ.IL_TR:=0;
      ZD_POZ.PROJEKTY:=ZD_POZ.ZD_NAG().PROJEKTY;

      ZD_POZ.add();
      _zd_p_n:=ZD_POZ.ref();

::    kopiowanie informacji dodatkowych dla pozycji zamowienia dostawy

      FAKSO.cntx_psh();
      FAKSO.use('fakto'+_mask_bie);
      FAKSO.index('ZD_POZ');
      FAKSO.prefix(_zd_p_o);
      {? FAKSO.first()
      ||
         {!
         |? {! _licz:=1 .. FAKSO.fld_num() |! _fakso[_licz]:=FAKSO[_licz] !};
            FAKSO.cntx_psh();
            FAKSO.clear();
            {! _licz:=1 .. FAKSO.fld_num() |! FAKSO[_licz]:=_fakso[_licz] !};
            FAKSO.ZD_POZ:=_zd_p_n;
            FAKSO.add();
            FAKSO.cntx_pop();
            FAKSO.next()
         !}
      ?};
      FAKSO.cntx_pop();
      ZD_POZ.cntx_pop();
      ZD_POZ.next()
   !}
?};

:: kopiowanie informacji dodatkowych dla naglowka zamowienia klienta

FAKSO.cntx_psh();
FAKSO.use('fakto'+_mask_bie);
FAKSO.index('ZD_NAG');
FAKSO.prefix(_ref_old);
{? FAKSO.first()
||
   {!
   |? {! _licz:=1 .. FAKSO.fld_num() |! _fakso[_licz]:=FAKSO[_licz] !};
      FAKSO.cntx_psh();
      FAKSO.clear();
      {! _licz:=1 .. FAKSO.fld_num() |! FAKSO[_licz]:=_fakso[_licz] !};
      FAKSO.ZD_NAG:=_ref_new;
      FAKSO.add();
      FAKSO.cntx_pop();
      FAKSO.next()
   !}
?};
FAKSO.cntx_pop();

:: aktualizacja zamowienia

{? ZD_NAG.seek(_ref_new) || exec('aktu_zam','zamdst_wspolne',_ref_new) ?};
_wyn:=_ref_new;

end;

_wyn


\czyuprmg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2009]
:: OPIS: sprawdza czy magazyny z pozycji zamowienia sa uprawnione dla danego uzytkownika
::   WY: 1-jest OK 0-nie jest dobrze
::  OLD: \czyuprmg/zd.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
_tab:=tab_tmp(,'SQL','STRING[16]',''
       ,'SYM','STRING[10]','');
ZD_POZ.cntx_psh();
ZD_POZ.index('POZ');
ZD_POZ.prefix(ZD_NAG.ref);
{? ZD_POZ.first()
|| {!
   |? {? ZD_POZ.MG<>null & (~exec('usr_upr','b_perm','MG',ZD_POZ.MG,OPERATOR.USER) | ZD_POZ.MG().ODDZ<>ST.ODDZ)
      || _tab.clear();
         {? ~_tab.find_key($ZD_POZ.MG)
         || _tab.blank();
            _tab.SQL:=$ZD_POZ.MG;
            _tab.SYM:=ZD_POZ.MG().SYM;
            _tab.add(1)
         ?};
         _wyn:=0
      ?};
      ZD_POZ.next()
   !}
?};
ZD_POZ.cntx_pop();
{? ~_wyn
|| _sym:='';
   _tab.clear();
   {? _tab.first() || {! |? _sym+=_tab.SYM+', ';_tab.next() !} ?};
   _sym:=(_sym-2)+'.';
   FUN.info('Brak uprawnień do magazynu(ów):\n%1\n Kopia niemożliwa.'@[_sym])
?};
obj_del(_tab);
_wyn


\zdnag_zamowienie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienie dostaw - Zamówienie sprzedaży
::----------------------------------------------------------------------------------------------------------------------
_typyzam:=BEER.TYPYZAM;

_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LZK_ZDS_DZAD';
_params.AKCJA:='Zamówienie';
_params.PROC_START:='T';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'ZK_N',ZK_N.ref());

exec('mp_run','#b__box',_params);
BEER.TYPYZAM:=_typyzam;
{? AreaTitle.area='LMG_ZAM'
|| exec('zakr_set_wew','zamsiw_nag')
|? AreaTitle.area='LSP_ZKN'
|| exec('zakr_set','zamsiw_nag')
?}


\zk2zd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MZ [2009]
:: OPIS: utworzenie zamowienia dostaw z zamowienia klienta lub wewnętrznego
::   WE: [_a] - ref zamówienia
::       [_b] - czy automatyczna
::       [_c] - typ zamówienia
::  OLD: \zk2zd/zkd.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(null()) || _zkn:=_a || _zkn:=ZK_N.ref() ?};
{? var_pres('_b')=type_of(0) || _auto:=_b || _auto:=0 ?};
{? var_pres('_c')=type_of(null()) & _c<>null() || BEER.TYPYZAM:=_c || BEER.TYPYZAM:=null() ?};

_wyn:=0;

ZK_N.cntx_psh();
ZK_N.clear();
_ok:={? ZK_N.seek(_zkn) || 1 || 0 ?};

_sym:='';
{? _ok & exec('zam_lock','zamsiw_nag') & ZK_N.r_lock(1,1,1)
||
   _ok:=1;
   ZK_N.cntx_psh(); ZK_P.cntx_psh;
   _zdp2zkp:=0;
   ZK_P.index('TYPN');
   ZK_P.prefix('A','Z',ZK_N.ref(),1);
   {? ZK_P.first()
   ||
      {!
      |?
         {? ~_zdp2zkp || _zdp2zkp:=ZK_P.ZD_POZ<>'' ?};
         ~_zdp2zkp & ZK_P.next
      !}
   ?};
   _p3012:=exec('get','#params',3012,2,OPERATOR.USER);
   {? _p3012='N'
   ||
      _zdp2zkp:=0
   |? _p3012='T'
   ||
      _zdp2zkp:=1
   ||
      {? _zdp2zkp
      ||
         _zdp2zkp:=FUN.choice('W zamówieniu jest co najmniej jedna pozycja powiązana'
                              'z dedykowanym zamówieniem dostawy.'@
                             +'\nWybierz opcję tworzenia zamówienia dostawy:'@
                             +'\n\nA - dostawa dedykowana dla wszystkich pozycji'@
                             +'\n\nB - dostawa dedykowana dla niepowiązanych pozycji'@
                             +'\n\nC - bez dostaw dedykowanych.'@,,'A','B','C');
         {? _zdp2zkp || {? _zdp2zkp=3 || _zdp2zkp:=0 ?} || _ok:=0 ?}
      ||
         _zdp2zkp:=FUN.ask('Czy dostawy tworzonego zamówienia są dedykowane dla zamówienia %1?'@[ZK_N.SYM])
      ?}
   ?};

   _pom_tab:=POM.TAB;
   _pom_tdk:=POM.TYPDOK;
   _beer_tz:=BEER.TYPYZAM;
   _beer_mw:=BEER.MW;
   _beer_sz:=BEER.SZ;

   POM.TAB:='ZD_NAG';

   BEER.MW:='W';
   BEER.SZ:='Z';

   MG.f_clear();
   MG.clear();
   MG.f_set('SYM,NAZ','join USERS_UP','USERS_UP.USERS=:_a and USERS_UP.AKR=\'MG\' and \"MG\".ODDZ=\':_b\'',OPERATOR.USER,ST.ODDZ);

   ZD_NAG.cntx_psh();
   ZD_NAG.clear();
   ZD_NAG.blank();
   exec('zd_pst','zamdst_nag');
   {? _ok & (BEER.TYPYZAM<>null() | exec('wyb_zam','zamowienia','D')<>null())
   || {? BEER.TYPYZAM=null() || BEER.TYPYZAM:=TYPYZAM.ref() ?};
      ZD_NAG.T:=BEER.TYPYZAM;
      POM.TYPDOK:=BEER.TYPYZAM().KOD;
::    dane wg ZK_N
      ZD_NAG.MG:=ZK_N.MG;
      ZD_NAG.ZKON:=ZK_N.ZKON;
      ZD_NAG.WAL:=ZK_N.WAL;
      ZD_NAG.KRS:=ZK_N.KRS;
      ZD_NAG.RTK:=ZK_N.RTK;
      ZD_NAG.NTK:=ZK_N.NTK;
      ZD_NAG.DTK:=ZK_N.DTK;
      ZD_NAG.ZDSWD:=ZK_N.ZDSWD;

      ZD_NAG.win_edit('RED');
      {? ZD_NAG.add() & ZD_NAG.r_lock(1,1,1)
      || exec('inf_dod','fakso',0,'zdnag');
         _sym:=exec('zkp2zd_poz','!lzk_zds_dzad',ZK_N.ref(),ZD_NAG.ref(),_zdp2zkp);

         {? _sym=''
         ||
            _wyn:=0;
::          usuwanie numeru i naglowka
            {? do_state()<2 & ~Plugin.run('BEFORE_DELTAB_001',ZD_NAG.ref()) & do_state() || undo() ?};
            ZD_NAG.r_unlock();
            numer:=ZD_NAG.NR;
            oldnumer:=1;
            exec('nr_old','numery');
            ZD_NAG.del(1)
         ||
            _wyn:=1;
            _new_zam:=ZD_NAG.ref();

            _var_zdnagpop:=exec('var_zdnagpop','zamdst_nag');
            _var_zdnagpop.KH:=ZD_NAG.KH;
            _var_zdnagpop.WAL:=ZD_NAG.WAL;
            _var_zdnagpop.KRS:=ZD_NAG.KRS;
            _var_zdnagpop.MG:=ZD_NAG.MG;
            _var_zdnagpop.KH_MSC:=ZD_NAG.KH_MSC;
            _var_zdnagpop.D_POTW:=ZD_NAG.D_POTW;
            _var_zdnagpop.PO_FIRST:=0;

            params_set('context',params_get(),'var_zdnagpop',_var_zdnagpop);

            exec('zdnag_win_edit_set','zamdst_nag');
            _spr:='nie automatyczna';
            _nag_edit:=0;

            {? _auto
            || _spr:=exec('zdnag_chk','zamdst_nag');
               {? _spr=''
               || {? ZD_NAG.NR=0 || exec('fak_numer','numery','',0); exec('znak','numery','ZD_NAG'); ZD_NAG.put(1) ?};

                  {? ~exec('zdstan','zamdst_nag','Akceptuj',_auto) || _spr:='nie można zakończyć' ?}
               ?}
            ?};
            {? _spr<>''
            || _nag_edit:=ZD_NAG.edit("params_exec('zdnag_chk','zamdst_nag')")
            ?};
            {? _nag_edit & _spr<>''
            || {? ZD_NAG.NR=0 || exec('fak_numer','numery','',0); exec('znak','numery','ZD_NAG'); ZD_NAG.put(1) ?};
               params_set('context',params_get(),'var_zdnagpop',_var_zdnagpop);
               {? ZD_NAG.STAT_REJ='N' || exec('zdnag_pop_po','zamdst_nag') ?};
               _sym:=ZD_NAG.SYM;
               exec('war_zam','zamdst_wspolne',ZD_NAG.ref(),1);
               ''
            |? _spr=''
            || exec('war_zam','zamdst_wspolne',ZD_NAG.ref(),1);
               _sym:=ZD_NAG.SYM;
               ''
            || _sym:='';
               exec('zdnag_usu','zamdst_nag',2)
            ?};
            ZD_NAG.r_unlock()
         ?}
      ||
         FUN.info('Nieudana próba zablokowania tabeli nagłówków zamówień dostaw.\nSpróbuj ponownie.'@)
      ?}
   ?};
   ZD_NAG.cntx_pop();
   POM.TAB:=_pom_tab;
   POM.TYPDOK:=_pom_tdk;
   BEER.TYPYZAM:=_beer_tz;
   BEER.MW:=_beer_mw;
   BEER.SZ:=_beer_sz;

   {? _sym<>'' || FUN.info('Utworzono zamówienie dostawy %1.'@[_sym]) ?};

   MG.f_clear();
   ZK_N.cntx_pop(); ZK_P.cntx_pop;
   ZK_N.r_unlock()
?};
ZK_N.cntx_pop();

_wyn


\zkp2zd_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: utworzenie pozycji zamówienia dostaw na podstawie pozycji zamówienia sprzedaży
::   WE: _a - ref ZK_N-a
::       _b - ref ZD_NAG-a
::       _c - wartość _zdp2zkp
::----------------------------------------------------------------------------------------------------------------------
_czy_rez:=-1;
_czy_rea:=-1;
_zdp2zkp:=_c;
_sym:=$ZD_NAG.ref();
ZD_NAG.cntx_psh();
ZD_POZ.cntx_psh();
ZD_POZ.index('POZ');
ZD_POZ.prefix(_b);

:: przepisanie pozycji ZK_P
ZK_P.index('TYPN');
ZK_P.prefix('A','Z',_a,1);
{? ZK_P.first()
||
   {!
   |?
      {? _czy_rez<0 & ZK_P.SR>0
      ||
         {? FUN.ask('Pozycje zamówienia mają aktywne rezerwacje.'@
                   +'\nPomniejszać ilość zamówienia do dostawcy o ilość zarezerwowaną?'@)
         || _czy_rez:=1
         || _czy_rez:=0
         ?}
      ?};
      {? _czy_rea<0 & ZK_P.ILP<>ZK_P.ILZ
      ||
         {? FUN.ask('Pozycje zamówienia były realizowane.'@
                   +'\nPomniejszać ilość zamówienia do dostawcy o ilość zrealizowaną?'@)
         || _czy_rea:=1
         || _czy_rea:=0
         ?}
      ?};
      _ilz:={? _czy_rea=1 || ZK_P.ILP || ZK_P.ILZ ?};
      _il:=_ilz-{? _czy_rez=1 || ZK_P.SR || 0 ?};
      ZD_POZ.blank();
      ZD_POZ.M:=ZK_P.M;
      {? ZD_POZ.MG=null || ZD_POZ.MG:={? ZD_POZ.M().RODZ='T' || ZK_P.RMAG || null() ?} ?};
      ZD_POZ.DK_C:={? ZD_POZ.MG=null | (1+ZD_POZ.MG().TYP)<>'D'
                   || null
                   || ZK_P.DK_C
                   ?};
      {? ZK_P.T2<>'N' & ZK_P.IL2<>0
      ||
         ZD_POZ.IL_KOR:=ZD_POZ.IL_POZ:=ZD_POZ.IL:=_il;
         ZD_POZ.JM:=ZK_P.JM;
         ZD_POZ.J2:=ZK_P.J2;
         ZD_POZ.IL2:=ZK_P.IL2;
         ZD_POZ.T2:='G';
         ZD_POZ.WS2:=_il/ZK_P.IL2
      ||
         ZD_POZ.IL_KOR:=ZD_POZ.IL_POZ:=ZD_POZ.IL:=ZD_POZ.IL2:=_il;
         ZD_POZ.JM:=ZD_POZ.J2:=ZK_P.JM;
         ZD_POZ.T2:='N';
         ZD_POZ.WS2:=1
      ?};
      ZD_POZ.TRN:=ZD_POZ.ZD_NAG().TRN;
      ZD_POZ.POJAZD:=ZD_POZ.ZD_NAG().POJAZD;
      exec('taz_sd_set','ceny');
      {? {? exec('ctdt','ceny')<>'T' || exec('fo8008x1','ceny')='T' || exec('fo8008x3','ceny')='T' ?}
      ||
         KALK.JM:=KALK.J2:=ZD_POZ.M().J; KALK.WS2:=1;
         {? ZD_POZ.MG<>null() & ZD_POZ.MG().IL='T'
         || ZD_POZ.CENA:=0;
            ZD_POZ.KRS:=0;
            ZD_POZ.CWAL:=0
         || exec('stplicz','ceny',ZD_POZ.IL);
            {? ZD_POZ.ZD_NAG().WAL=INFO.NAROD
            || exec('ceny_mat','ceny_mat',ZD_POZ.M,ZD_NAG.KH,'ZD_POZ.CENA',0,,'','N',INFO.NAROD,'',,0,,,0,0,0)
            || exec('ceny_mat','ceny_mat',ZD_POZ.M,ZD_NAG.KH,'ZD_POZ.CWAL',0,,'','T',ZD_NAG.WAL,'ZD_POZ.CWAL',ZD_NAG.KRS,0,,,0,0,0)
            ?}
         ?};
         exec('zdp_obl','zamdst_poz')
      ?};
      {? ZD_POZ.IL_KOR>0
      ||
         ZD_POZ.KH:=ZD_POZ.ZD_NAG().KH;
         ZD_POZ.KH_MSC:=ZD_POZ.ZD_NAG().KH_MSC;
         {? ZD_POZ.add()
         || exec('inf_dod','fakso',0,'zdpoz');
            {? (_zdp2zkp=1 | _zdp2zkp=2) & ZK_P.ZD_POZ='' & ZD_POZ.M().RODZ='T'
            ||
               ZK_P.ZD_POZ:=$ZD_POZ.ref;
               ZK_P.put
            ?}
         ?}
      ?};
      ZK_P.next()
   !};
   exec('war_zam','zamdst_wspolne',ZD_POZ.ZD_NAG)
?};

{? ~ZD_POZ.first()
||
   FUN.info('Brak pozycji do zamówienia. Zamówienie nie zostanie utworzone.'@);
   _sym:=''
?};
ZD_NAG.cntx_pop();
ZD_POZ.cntx_pop();
_sym


\access
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Formuła na uprawnienia do danych dla czynności
::   WE: params_get().in - parametry wejściowe czynności
::           params_get().user - użytkownik dla którego sprawdzane są uprawnienia
::           params_get().mp - Menadżer Procesów
::   WY: 0 - użytkownik nie ma uprawnień do danych dla czynności
::       1 - użytkownik ma uprawnienia do danych czynności
::----------------------------------------------------------------------------------------------------------------------
_in:=params_get().in;
_user:=params_get().user;
_mp:=params_get().mp;

_result:=1;
{? var_pres('TYPYZAM',_in)=type_of(null()) & _in.TYPYZAM<>null()
|| BEER.TYPYZAM:=_in.TYPYZAM;
   _p3024:=exec('get','#params',3024,2,OPERATOR.USER);
   {? form(_p3024)<>'' & ~((' '+_p3024)*(' '+BEER.TYPYZAM().T+' '))
   || _result:=0;
      BEER.TYPYZAM:=null()
   ?}
?};
_result


\zdnag_zakoncz_zdp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Zamówienie dostaw - Zakocz - okno wertowania ZD_POZ
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
exec('btn_EndPosition','okienka','LZK_ZDS_DZAD',ZD_NAG.uidref(),ZD_NAG
 ,'Zakończ_wer','Zakończyć rejestrację zamówienia %1?'@[ZD_NAG.SYM]);
~~


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.14]
:: OPIS: Formuła ustala PARSES
::   WE: UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::       int - [obj_new] - parametry wewnętrzne czynności
::       out - [obj_new] - parametry wyjściowe czynności
::       mp  - obiekt odpowiedzialny za obsługę procesu
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_out:=params_get().out;

{? var_pres('ZD_NAG',_out)=type_of(null()) & _out.ZD_NAG
|| ZD_NAG.cntx_psh();
   ZD_NAG.use(ref_name(_out.ZD_NAG));
   ZD_NAG.prefix();
   {? ZD_NAG.seek(_out.ZD_NAG)
   || __PARSES.setVal('OddzialLogProd',ZD_NAG.ODDZ)
   ?};
   ZD_NAG.cntx_pop()
|| _in:=params_get().in;

   {? var_pres('ZK_N',_in)=type_of(null()) & _in.ZK_N
   || ZK_N.cntx_psh();
      ZK_N.use(ref_name(_in.ZK_N));
      ZK_N.prefix();
      {? ZK_N.seek(_in.ZK_N)
      || __PARSES.setVal('OddzialLogProd',ZK_N.ODDZ)
      ?};
      ZK_N.cntx_pop()
   |? var_pres('ZD_NAG',_in)=type_of(null()) & _in.ZD_NAG
   || ZD_NAG.cntx_psh();
      ZD_NAG.use(ref_name(_in.ZD_NAG));
      ZD_NAG.prefix();
      {? ZD_NAG.seek(_in.ZD_NAG)
      || __PARSES.setVal('OddzialLogProd',ZD_NAG.ODDZ)
      ?};
      ZD_NAG.cntx_pop()
   |? var_pres('PD_K',_in)=type_of(null()) & _in.PD_K
   || PD_K.cntx_psh();
      PD_K.prefix();
      {? PD_K.seek(_in.PD_K)
      || MG.cntx_psh();
         __PARSES.setVal('OddzialLogProd',PD_K.MG().ODDZ);
         MG.cntx_pop()
      ?};
      PD_K.cntx_pop()
   ?}
?};

1


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Funkcja czyszcząca czynności - w razie potrzeby jak nie ma rekordu kluczowego zrobi done albo cancel
::       Dodatkowo może być wywoływana przez czynność czyszczącą zadania na TODO
::   WE: [_a] - _mp - obiekt Menadżera procesów
::       [_b] - tablica z parametrami wejściowymi
::   WY: obj_new() - obiekt wynikowy
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')>100
|| _mp:=_a
|| _mp:=params_get().mp
?};
{? var_pres('_b')>100
|| _in:=_b
|| _in:=params_get().in
?};
params_exec('zd_clean','zamdst_nag',_mp,_in)

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:40 4ab0f22490c9482e085f5fae65065cd034954d63e85bae7f074c188b9accb97fde0083c204126fac3fdc6cdba0e9ba64f71de80aa2eca052c5540a19be3d27979ac770b59fbc6e4e2a01277ef9337bc2bb3130dddf6ef4ba6884d0d5a4ab020ba13f99aa118c0c581fd7b1dd375764687fdca7eb60db87a5190b78c830377db6
