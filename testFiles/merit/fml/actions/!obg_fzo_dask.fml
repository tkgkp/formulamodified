:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: !obg_fzo_dask.fml
:: Utworzony: 03.10.2016
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły czynności OBG_FZO_DASK - Skanowanie zbiorcze faktur w obiegu
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [17.00]
:: OPIS: Skanowanie zbiorcze faktur w obiegu - główna formuła czynności OBG_FZO_DASK
::----------------------------------------------------------------------------------------------------------------------
::# permissions=FJKS
::# properties=LOOP,~RUNMICRO

:: PARAMETRY WE:
::# kind=WE, symbol=TYP_DOK, type=STRING, name=Typ dokumentu, required=N, fml_val="exec('wybor_typu','obiegi',1,_a)", fml_exp="exec('etypy_fml_exp','obiegi2',1,_a)"
::# kind=WE, symbol=TM_STAMP, type=STRING, name=Znacznik czasowy, required=N

:: PARAMETRY WY:
::# kind=WY, symbol=EDOKUM, type=_EDOKUM, name=Wskazanie na fakturę w obiegu, required=N
::# kind=WY, symbol=WAL, type=_SLO, name=Waluta, required=N
::# kind=WY, symbol=NETTO, type=NUMBER, name=Wartość netto, required=N
::# kind=WY, symbol=BRUTTO, type=NUMBER, name=Wartość brutto, required=N
::# kind=WY, symbol=B_PREL, type=STRING, name=Element w procesie, required=N
::# kind=WY, symbol=B_PRELS, type=STRING, name=Symbol elementu w procesie, required=N
::# kind=WY, symbol=DEKR, type=STRING, name=Dekretacja, required=N
::# kind=WY, symbol=STATUS, type=STRING, name=Status, required=N
::# kind=WY, symbol=TM_STAMP, type=STRING, name=Znacznik czasowy, required=N

:: WARUNKI BRAMY:
::# condition=Rejestracja faktury, act_uid=OBG_FZO_DARK, auto=T, formula=_a.EDOKUM<>null

exec('czytaj','#stalesys');
_args:=params_get();
_we:=_args.in;
_wew:=_args.int;
_wy:=_args.out;
_mp:=_args.mp;

{? _mp.pathProc() || exec('init','obg') ?};
{? var_press('TM_STAMP',_we)>0
|| _tm:=_we.TM_STAMP;
   {? (_ok:=exec('first','!obg_fzo_dask',_tm,_wy))
   || _wy.TM_STAMP:=_tm;
      _mp.save(,_wy);
      {? _ok=2
      || _mp.loop_continue()
      ?};
      _mp.done()
   ?}
|| _typ:=null;
   _typ_naz:={? var_press('TYP_DOK',_we)>0 || _we.TYP_DOK || ~~ ?};
   {? _typ_naz=~~
   || _typ_naz:=exec('wybor_typu','obiegi',1,~~)
   ?};
   {? _typ_naz<>~~
   || _obj:=exec('obj_typ_dok','obiegi2');
      _obj.set(_typ_naz);
      _nazwa:=_obj.NAZWA;
      _w_portal:=_obj.W_PORTAL;
      ETYPY.cntx_psh(); ETYPY.index('UNIK_WP'); ETYPY.prefix(exec('bl_typ','obiegi',1),_w_portal);
      _typ:={? ETYPY.find_key(_nazwa,) || ETYPY.ref() || null ?};
      ETYPY.cntx_pop()
   ?};
   {? _typ
   || _tm:=tm_stamp();
      params_exec('ustaw_bprel','obiegi');
      exec('skan_zb','!obg_fzo_dask',_typ,_tm,_we);
      {? (_ok:=exec('first','!obg_fzo_dask',_tm,_wy))
      || _wy.TM_STAMP:=_tm;
         _mp.save(,_wy);
         {? _ok=2
         || _mp.loop_continue()
         ?};
         _mp.done()
      ?}
   ?}
?};
~~


\first
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia pierwszą fakturę w obiegu
::   WE: _a - tm_stamp
::       _b - wyjscie czynności
::----------------------------------------------------------------------------------------------------------------------
_ok:=0;
EDOKUM.cntx_psh();
EDOKUM.index('TM_STAMP'); EDOKUM.prefix(_a,);
{? EDOKUM.first()
|| _b.EDOKUM:=EDOKUM.ref();
   EDOKUM.prefix();
   EDOKUM.TM_STAMP+='1';
   _ok:=EDOKUM.put();
   {? _ok
   || EDOKUM.prefix(_a,);
      _ok:={? EDOKUM.first() || 2 || 1 ?}
   ?}
?};
EDOKUM.cntx_pop();
_ok


\skan_zb_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Skanowanie zbiorcze - akcja
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='OBG_FZO_DASK';
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID);
_params.PROC_START:='T';
exec('mp_run','#b__box',_params)


\skan_zb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.41]
:: OPIS: Skanowanie zbiorcze faktur wraz z tworzeniem faktur w obiegu i opcjonalnym rozpoznawaniem OCR
::   WE: _a - typ faktury
::       _b - znacznik czasowy
::       _c - wejscie procesu
::  OLD: \skan_zb/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
::_typf:=exec('skan_zb_typ','skid_do1'); {? _typf=null || return(0) ?};
_typf:=_a;
_edok:=EDOKUM.ref();
exec('skan_erase','skanuj');
exec('run_java_exec','dok_fks','skaner.jar',0);
_count:=0;
_dir:='@!Tmp';
_skany:=exec('read_skaner_txt','skanuj',_dir);
{? _skany.first()
|| {!
   |? {? _plik:=fopen(_dir+'/'+_skany.FILE,'br',0)
      || _fak:=exec('add_new_fak','!obg_fzo_dask',_typf,_skany.CODE,_b,_c);
         {? _fak<>null
         || {? EDOKUM.bl_put('EDOKUM',_plik,,,_skany.FILE)
            || _count+=1
            ?}
         ?};
         fclose(_plik)
      ?};
      _skany.next()
   !}
?};
VAR_DEL.delete('PominAll');
&_skany;
:: czyszczenie katalogu tymczasowego ze skanow, jesli sa
exec('skan_erase','skanuj',_dir);
:: komunikat
{? _count=1
|| FUN.info('Dodano 1 fakturę w obiegu.'@)
|? _count>1
|| FUN.info('Dodano %1 faktur w obiegu.'@[$_count])
?};
{? EDOKUM.f_active()
|| EDOKUM.f_rfresh();
   EDOKUM.f_seek(_edok)
?};
1


\add_new_fak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [12.41]
:: OPIS: Formula dodaje pusta fakture
::   WE: _a - ref typu
::       _b - symbol z kodu kreskowego
::       _c - znacznik czasowy
::       _d - wejscie czynnosci
::   WY: ref EDOKUM
::  OLD: \add_new_fak/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.blank();
EDOKUM.FIRMA:=REF.FIRMA;
EDOKUM.ROK_F:=SSTALE.AR;
EDOKUM.TM_STAMP:=_c;
EDOKUM.ALERTY:='T';
EDOKUM.AUTOMAT:=2;
EDOKUM.DATAW:=date();
EDOKUM.WAL:=FINFO.NAROD;
SKID.SL_KH:='';
EDOKUM.bl_file('EDOKUM',1); EDOKUM.bl_file('EPODPIS',1);
EDOKUM.memo_set('','UW_OPDL');
OBIEGI.DEL_ETAT:='';
EDOKUM.TYP:=_a;
EDOKUM.TYP();
{? EDOKUM.ODD=null || EDOKUM.ODD:=exec('one_odd','obiegi') ?};
{? EDOKUM.ODD=null || EDOKUM.ODD:=exec('edokum_odd','obiegi2') ?};
EDOKUM.TYPOBIEG:=EDOKUM.TYP().TYPOBIEG;
EDOKUM.DOSTAWCA:=OPERATOR.USER().OSOBA;
EDOKUM.USERS:=OPERATOR.USER;
EDOKUM.DO:=date();
EDOKUM.UNIK_ID:=tm_stamp();
EDOKUM.PLATNOSC:=ETYPY.PLATNOSC;
exec('aeslpdob','obiegi');
_duplikat:=0;
{? _b<>''
|| EDOKUM.BARCODE:=_b;
   EDOKUM.cntx_psh();
   EDOKUM.index('BARCODE');
   EDOKUM.prefix(_b,);
   {? EDOKUM.first()
   || {? ~FUN.ask('Skan faktury z odczytanym kodem kreskowym '+_b + '\n'
                 +'istnieje już w bazie faktur (dokument: %1). Kontynuować?'@[EDOKUM.ID])
      || _duplikat:=1
      ?}
   ?};
   EDOKUM.cntx_pop()
?};
{? _duplikat=0 & EDOKUM.add()
|| {? ETYPY.AUT_ID='T' & EDOKUM.ID=''
   || VAR_DEL.delete('id_edok');
      exec('ustal_numer','obiegi',1,SSTALE.AR,1,0);
      EDOKUM.ID:={? var_pres('id_edok')>0 || id_edok || '' ?};
      EDOKUM.put()
   ?};
   EDOKUM.memo_put(,'UW_OPDL');
   exec('dol_edokos','obiegi',_d);
   {? EDOKUM.TYP().ATR_G1R>0
   || exec('edk_atr_dolacz','obiegi',0)
   ?};
   EDOKUM.ref()
|| null
?}


\date4xml
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Zwraca date na podstawie napisu z xml-a
::   WE: _a - data z xml-a
::            18-09-2014, 18/09/2014, 18.09.2014
::            2014-09-18, 2014/09/18, 2014.09.18
::            18 wrzesień 2014
::   WY: data
::  OLD: \date4xml/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
_sep:='-/.';
_a:=STR.gsub(_a,'(','');
_a:=STR.gsub(_a,')','');
_a:=STR.gsub(_a,',','');
_a:=STR.gsub(_a,';','');
_a:=STR.gsub(_a,':','');
_a:=STR.gsub(_a,' ','');
_data:={? _znak:=exec('char_in_string','!obg_fzo_dask',_a,_sep)
       || _tab:=spli_str(_a,_znak+_sep+1);
          {? obj_len(_tab)=3
          || _msg:=no_msg(1); errno; on_error(3);
             _dt:={? +_tab[1]=4
                  || date(#_tab[1],#_tab[2],#_tab[3])
                  |? +_tab[3]=4
                  || date(#_tab[3],#_tab[2],#_tab[1])
                  || date(0,0,0)
                  ?};
             no_msg(_msg); on_error(); _err:=errno;
             {? _err<>0 || _dt:=date(0,0,0) ?};
             _dt
          || date(0,0,0)
          ?}
       || date(0,0,0)
       ?};
{? _data<>date(0,0,0)
|| _data
|| _mc:=exec('mc2tab','!obg_fzo_dask');
   _nr:=exec('str_in_string','!obg_fzo_dask',_a,_mc);
   {? _nr
   || _poz:=_a*_mc[_nr];
      {? _poz>0
      || _poz:=_poz-1;
         _d:=_poz+_a;
         _r:=(_poz+(+_mc[_nr]))-_a;
          _msg:=no_msg(1); errno; on_error(3);
          _dt:=date(#exec('tylko_cyfry','!obg_fzo_dask',_r),_nr,#exec('tylko_cyfry','!obg_fzo_dask',_d));
          no_msg(_msg); on_error(); _err:=errno;
          {? _err<>0 || _dt:=date(0,0,0) ?};
          _dt
      || date(0,0,0)
      ?}
   || date(0,0,0)
   ?}
?}


\kw_vat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Zwraca kwote pozycji VAT
::   WE: _a - napis z kwota
::  OLD: \kw_vat/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=STR.gsub(_a,'*','');
_sep:='';
_wyn:='';
{! _i:=+_a//-1..1
|! _zn:=(_i+_a)+1;
   {? _zn<>' '
   || {? _zn='.' | _zn=','
      || {? _sep=''
         || _sep:=_zn;
            _wyn:='.'+_wyn
         ?}
      || _wyn:=_zn+_wyn
      ?}
   ?}
!};
#_wyn


\plat4xml
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Zwraca forme platnosci na podstawie napisu z xml-a
::   WE: _a - platnosc z xml-a (np.: przelew)
::   WY: SLO.ref
::  OLD: \plat4xml/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.SLP
|| _ref:=null();
   SLO.cntx_psh(); ZR_SLO.cntx_psh();
   SLO.index('SL'); SLO.prefix(XINFO.SLP);
   ZR_SLO.index('SLO_NR'); ZR_SLO.prefix();
   {? SLO.first()
   || {!
      |? {? ZR_SLO.find_key(SLO.ref(),3) & -_a*ZR_SLO.WAR || _ref:=SLO.ref() ?};
         _ref=null() & SLO.next()
      !}
   ?};
   SLO.cntx_pop(); ZR_SLO.cntx_pop();
   _ref
|| null
?}


\tylko_cyfry
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Zwraca napis z samymi cyframi
::   WE: _a - napis
::   WY: napis tylko z cyframi
::  OLD: \tylko_cyfry/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
_bez:='';
_ile:=+_a;
{! _i:=1.._ile
|! _zn:=(_i+_a)+1;
   {? '0123456789'*_zn>0
   || _bez+=_zn
   ?}
!};
_bez


\char_in_string
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Czy znaki w napisie
::   WE: _a - napis
::       _b - poszukiwane znaki
::   WY: ktory znak wystepuje w napisie 1,2,... lub 0-gdy zaden
::  OLD: \char_in_string/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
_nr:=0;
{! _iter:=1..+_b
|? _nr=0
|!  _znak:=_iter+_b+1;
    {? _a*_znak>0
    || _nr:=_iter
    ?}
!};
_nr


\mc2tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Zwraca tablece z nazwami miesiecy
::  OLD: \mc2tab/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
_mc:=obj_new(12);
_mc[1]:='styczeń';
_mc[2]:='luty';
_mc[3]:='marzec';
_mc[4]:='kwiecień';
_mc[5]:='maj';
_mc[6]:='czerwiec';
_mc[7]:='lipiec';
_mc[8]:='sierpień';
_mc[9]:='wrzesień';
_mc[10]:='październik';
_mc[11]:='listopad';
_mc[12]:='grudzień';
_mc


\str_in_string
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Czy w napisie wystepuje napis z tablicy
::   WE: _a - napis
::       _b - tablica napisow
::   WY: ktory napis z tablicy wystepuje w napisie 1,2,.. lub 0-gdy zaden
::  OLD: \str_in_string/skid_do1.fml
::----------------------------------------------------------------------------------------------------------------------
_nr:=0;
{! _iter:=1..obj_len(_b)
|? _nr=0
|!  {? _a*_b[_iter]>0
    || _nr:=_iter
    ?}
!};
_nr


\obg_prn_label
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Wydruk etykiet do skanowania
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','OBG_FZO_DASK','obg_bar_ark*','Wydruki etykiet do skanowania',1)

:Sign Version 2.0 jowisz:1048 2023/06/23 14:09:39 c4433002e39988645baa20f96676e9e25a5d627841ecc94f1504b982d784c3594b167b54322133510d99978d5dd4bd042e9099cff5afa0613663e01a12d76c4dabb9b829378702070b08634c8ea7dc2ff08d199c89fdff16e7a0e2aabf21d4ce43bd435b9ed52f24027ea0fea2f72ec9b7b5fb74ec3bfc6fd1ce1d1e52ccc66e
