:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrze�one
::======================================================================================================================
:: Nazwa pliku: !pkd_grp_btgb.fml
:: Utworzony: 17.04.2023
:: Autor: MicKoc [22.26]
::======================================================================================================================
:: Zawartość: Grupowe generowanie badań kontroli trzeźwości
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Grupowe generowanie badań kontroli trzeźwości
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::# permissions=F_ZATR,UD_SKL

exec('init','pkd');

{? ~__F_ZATR.upr('P')
|| FUN.info('Brak wymaganego dostępu do formy współpracy "%1".'@ ['P']);
   return()
?};

_txt:=exec('uprawnieniawrap','pkd','Kontroli trzeźwości','PKD_EZK_ORKT');
{? +|_txt
|| FUN.emsg('Brak wymaganych uprawnień do informacji o:%1'@[_txt]);
   return()
?};

P_FILTER.UD_SCH:=exec('domyslny','schemat','PODZORG');

_JOS:=exec('jos_create','pkd_grp');

_cfg:=obj_new('nav','lastref');
_cfg.nav:=obj_new('main','side');
: main - okno ze współpracownikami
: side - okno ze strukturą hierarchiczną
_cfg.nav.side:=_JOS.WS;

_ud_skl:=__PARSES.getVal('JednostkaOrganizacyjna').SYMBOL;
params_set(
   'cfg',_cfg,
   'JOS',_JOS,
   'ud_skl',_ud_skl
);
exec('pkd_conf_cntx','pkd','psh');

Cntx.psh(OSOBA,P,UD_SCH,UD_SKL,UD_DEF);
Cntx.clr(UD_SCH,UD_SKL,UD_DEF);
P.win_edit();

_wnd:=exec('wnd','!pkd_grp_btgb',_JOS,_cfg);

_JOS.TAB.win_sel(_wnd);
_JOS.TAB.select();

Cntx.pop(OSOBA,P,UD_SCH,UD_SKL,UD_DEF);
exec('pkd_conf_cntx','pkd','pop');
VAR_DEL.delete('__dane');
P.f_rfresh();
~~


\kot_test_generuj_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [12.51]
::  MOD: MicKoc [22.26]
:: OPIS: Generowanie badań, formuła po
::   WE:
::   WY:
::  OLD: \kot_test_generuj_a/kontrola_trzezwosci.fml
::----------------------------------------------------------------------------------------------------------------------
_zaznaczono:=0;
{? P.sel_size()=0 || sel_add() ?};
_zaznaczono:=P.sel_size();
_PRAC:=P.sel_aget();

{? ~_PRAC.first() || P.sel_adel(); return(0) ?};

KOT_TEST.cntx_psh();
KOT_TEST.win_edit('RED_GB');
KOT_TEST.clear();
KOT_TEST.blank(1);
KOT_TEST.hdr_edit();
{? KOT_TEST.edit("exec('kot_test_ra','!pkd_ezk_orkt')")
|| KOMM.init(,,'Komunikaty dla generowanego badania (%1 %2)'@[$KOT_TEST.DATA, KOT_TEST.GODZ$3]);

   _sect:=obj_new('ok','nieob','add','seek','dubelek');
   {! _lp:=1 .. obj_len(_sect)
   |! _sect[_lp]:=obj_new('id','lp');
      _sect[_lp].lp:=0
   !};

   _sect.ok.id:=KOMM.add('Pracownicy z prawidłowo utworzonym badaniem',1);
   _sect.dubelek.id:=KOMM.add('Pracownicy z istniejącym już badaniem na wskazaną datę i godzinę',35);
   _sect.nieob.id:=KOMM.add('Pracownicy nieobecni na datę badania',91);
   _sect.add.id:=KOMM.add('Pracownicy, dla których utworzenie badania nie powiodło się',14);
   _sect.seek.id:=KOMM.add('Nieodnalezieni pracownicy',15);

   _kom:="
      _sect:=_a;
      _sect.lp+=1;
      _new:=KOMM.add(' %1 %2 [nr teczki: %3]'[P.OSOBA().NAZWISKO,OSOBA.PIERWSZE,form(P.T)]);
      KOMM.chngroot(_new,_sect.id)
   ";

   P.cntx_psh();
   P.prefix();
   FUN.prg_start(_PRAC.size(),'Tworzenie badań ...'@);
   {!
   |? {? P.seek(_PRAC.REF,,1)
      || {? ~exec('czy_jest','nieobecnosc',P.ref(),KOT_TEST.DATA)
         || _firma:=exec('ref_firma','#firma');
            KOT_TEST.FIRMA:=_firma;
            KOT_TEST.OSOBA:=P.OSOBA;
            {? KOT_TEST.KOT_URZA
            || KOT_TEST.KOT_JM:=KOT_TEST.KOT_URZA().KOT_JM;
               KOT_TEST.KOT_RODZ:=KOT_TEST.KOT_JM().KOT_RODZ
            || KOT_TEST.KOT_JM:=KOT_TEST.KOT_RODZ:=null()
            ?};

            KOT_TEST.cntx_psh();
            KOT_TEST.index('UNIQ');
            KOT_TEST.prefix(_firma,KOT_TEST.OSOBA,KOT_TEST.DATA,KOT_TEST.GODZ);
            _dubelek:=KOT_TEST.first();
            KOT_TEST.cntx_pop();

            {? _dubelek
            || _kom(_sect.dubelek)
            |? no_msg(1); _add:=KOT_TEST.add(1); no_msg(0); _add
            || _kom(_sect.ok)
            || _kom(_sect.add)
            ?}
         || _kom(_sect.nieob)
         ?}
      ?};
      FUN.prg_next();
      _PRAC.next()
   !};
   P.cntx_pop();
   FUN.prg_stop();

:: usunięcie pustych gałęzi KOMMa
   {! _lp:=1 .. obj_len(_sect)
   |! {? _sect[_lp].lp=0
      || KOMM.del(_sect[_lp].id)
      ?}
   !};
   KOMM.select()
?};
KOT_TEST.cntx_pop();
P.sel_adel();
1


\wnd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Definicja okienek
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_JOS:=_a;
_cfg:=_b;
VAR_DEL.delete('__dane');
__dane:=~~;
: Najpierw zwykłe okno do prezentacji współpracowników.
_acr:='WYNIK_BT';
: użyj istniejące okienko
{? (_ws:=__WND.SEL.get(P,_acr))='';1
|| _ws:=P.mk_sel(,'P',,'#wynikibadantrz',,,,,'U','T');
   P.win_fld(_ws,,'T',,,9,,,,,MS.comment(P,'T'));
   P.win_fld(_ws,,'IP',,,-5,,,,,MS.comment(P,'IP'));
   P.win_fld(_ws,,'OSOBA','NAZWISKO',,20,,,,,MS.comment(OSOBA,'NAZWISKO'));
   P.win_fld(_ws,,'OSOBA','PIERWSZE',,15,,,,,MS.comment(OSOBA,'PIERWSZE'));
   P.win_fld(_ws,,'OSOBA','PESEL',,11,,,,,MS.comment(OSOBA,'PESEL'));
   P.win_fld(_ws,,'OSOBA','DOWOD',,11,,,'Dowód osobisty'@,,MS.comment(OSOBA,'DOWOD'));
   P.win_fld(_ws,,'F_ZATR','KOD',,-2,,,MS.name(P,'F_ZATR'),,MS.comment(F_ZATR,'KOD'));
   P.win_fld(_ws,,'WYDZIAL','SYMBOL',,-16,,,MS.name(P,'WYDZIAL'),,'Symbol jednostki organizacyjnej'@);
   P.win_fld(_ws,,'ST','ST',,18,,,MS.name(P,'ST'),,MS.comment(STN,'ST'));
   P.win_fld(_ws,,'ZA',,,-5,,,MS.name(P,'ZA'),,MS.comment(P,'ZA'),2,,"'T'","'N'");

   _fgeneruj:="params_set(params_get()); exec('kot_test_generuj_a','!pkd_grp_btgb'); 0";
   P.win_act(_ws,,'Formuła','Generuj'@@,,'Generowanie badań kontroli trzeźwosci.'@,
      _fgeneruj,,1,1,_fgeneruj,,'G');
   P.win_act(_ws,,'Menu','Szukaj'@@,,,,,,,,,'S');
   P.win_act(_ws,,'Formuła','Szukaj dokładnie'@@,'#S','Szukanie zapisu zgodnego ze zredagowanym wzorcem'@,
      "exec('p_ustaw_ezk','szukaj')","exec('p_d','szukaj')",,,,,'S');
   P.win_act(_ws,,'Formuła','Szukaj &kontekstowo'@@,'#S','Szukanie zapisu zgodnego ze zredagowanym wzorcem'@,
      "exec('p_ustaw_ezk','szukaj')","exec('p_k','szukaj')",,,,,'K');
   P.win_act(_ws,,'#F3',,,,"exec('p_ustaw_ezk','szukaj')","exec('p_f3_wnd','szukaj')");
   P.win_act(_ws,,'Kolejność');

   P.win_btn(_ws,'text='+'Generuj'@+',btn_label_align=center,panel=right,align=begin','menu:G');

   __WND.SEL.put(P,_acr,_ws)
?};

_cfg.nav.main:=_ws;

: Teraz okno grupowe.
_mode:='maximized';

_wnd:=_JOS.TAB.grp_make('Grupowe przygotowanie terminu badań'@,
:  Po wyświetleniu (załaduj kontrolkę, wyświetl drzewko).
   "  _par:=params_get();
      params_set(_par);
      _cfg:=_par.cfg;
      _ud_skl:=_par.ud_skl;
      _JOS:=_par.JOS;
      exec('jos_fill','pkd_grp',_JOS,P_FILTER.UD_SCH,_ud_skl);
      grp_disp(_JOS.TAB,_cfg.nav.side,1,1)
   ",'pkd_grp_azat'
);

: Struktura.
_JOS.TAB.grp_sel(_wnd,_JOS.TAB,_cfg.nav.side,,
:  Po odświeżeniu (wyświetl współpracowników).
   "  _par:=params_get();
      params_set(_par);
      _cfg:=_par.cfg;
      grp_disp(P,_cfg.nav.main,1,1)
   ",,,18,,,,,_mode,_cfg.nav.side
);

: Współpracownicy.
_JOS.TAB.grp_splt(_wnd,,'vertical','p',',25%');
_JOS.TAB.grp_sel(_wnd,P,_cfg.nav.main,,"",,,,
:  Przed obsługą (ustaw filtr na tabeli P).
: !!! Proteza. Zapamiętujemy numer rekordu tabeli _JOS.TAB, dla którego odświeżany był widok współpracowników.
   "  _par:=params_get();
      _JOS:=_par.JOS;
      _cfg:=_par.cfg;
      {? _cfg.lastref<>_JOS.TAB.ref() & UD_DEF.seek(_JOS.TAB.UD_DEF)
      || _cfg.lastref:=_JOS.TAB.ref();
         _where:={? _JOS.TAB.TYP='S' || '\"P\".ST=\\\''+_JOS.TAB.STN+'\\\'' || '' ?};
         exec('filtruj_p','schemat','PKD',UD_DEF.ref(),P_FILTER.F_ZATR().KOD,'',P_FILTER.STATUS,,_where)
      ?}
   ",,,,_mode,_cfg.nav.main
);

_wnd

:Sign Version 2.0 jowisz:1045 2023/04/28 15:59:40 39c9953b6e1bd22d51fc4eb5be38ee4e3e799497f17eeb681d6dc9add402ccdf9b9633c190f46bcb9dfdd552013775df43a8a4243903bf4427287afcbdac3e124a6754d47a95dc44344a50af78df72b9793db184bc01b92899d41c0bfab7ef200425932cd54dac4fc7b5c5b7580e0954baa134736855881640a1d2849e08e12b
