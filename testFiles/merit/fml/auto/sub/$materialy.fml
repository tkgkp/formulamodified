:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: $materialy.fml
:: Utworzony: 26.02.2019
:: Autor: GZ
:: Systemy:
::======================================================================================================================
:: Zawartość: Skrypty automatyzujące obsługę materiałów
::======================================================================================================================


\obszar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [19.02]
:: OPIS:
::   WE: _a - obiekt testujący
::----------------------------------------------------------------------------------------------------------------------
:: @GIVEN
_test_driver:=_a;
:: @WHEN
_test_driver.control('!leftmenu', 'open', 'Wspólne\\Obszary\\Materiały/Usługi', 1);

_test_driver.app_wait_for_change()


\dolacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [19.02]
:: OPIS:
::   WE: _a - obiekt testujący
::       [_b] - tabela z danymi
::----------------------------------------------------------------------------------------------------------------------
:: @GIVEN
_test_driver:=_a;
_ile_mat_przed:=exec('policz_materialy','$materialy',_test_driver);
_ktm:='';
{? _>1 & type_of(_b) = type_of(SYSLOG)
|| _dane_ogolne:=_b
|| _dane_ogolne:=~~
?};
:: @WHEN
_test_driver.menu('Dołącz');
{? type_of(_dane_ogolne) = type_of(SYSLOG)
|| exec('wypelnij_dane','$materialy',_test_driver,_dane_ogolne)
?};
_test_driver.send('', '{F2}', '');
_ktm_mat:=_test_driver.state('fld:@M.KTM').value;
_ktm_z_bazy:=_test_driver.execute("M.KTM");
_test_driver.assert_true('KTM materiału inny niż bazie',_ktm_mat=_ktm_z_bazy);


_ile_mat_po:=exec('policz_materialy','$materialy',_test_driver);
:: @THEN
_test_driver.assert_true('Pojawiło się okno dialogowe',~_test_driver.exist('dbtn:OK'));
_test_driver.assert_equals('Liczba materiałów się nie zwiększyła po dodaniu',_ile_mat_po,_ile_mat_przed+1);
_test_driver.assert_true('Pusty KTM materiału',_ktm_mat<>'');
{? type_of(_b)>0
|| _test_driver.assert_true('KTM materiału inny niż dodany',_ktm_mat=_dane_ogolne.KTM)
|| _test_driver.assert_true('KTM materiału inny niż dodany',_ktm_mat='AUTOTEST')
?};

_ktm_mat


\szukaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [19.02]
:: OPIS:
::   WE: _a - obiekt testujący
::       _b - KTM materiału do wyszukania
::----------------------------------------------------------------------------------------------------------------------
:: @GIVEN
_test_driver:=_a;
_ktm_mat:=_b;
:: @WHEN

_test_driver.menu('Szukaj wg kodu');
_test_driver.send(_ktm_mat, '{F2}', 'fld:@KOD');

_znalazl:=~_test_driver.exist('dbtn:OK');
:: @THEN
_test_driver.assert_true('Nie znaleziono materiału',_znalazl);
_znalazl


\wyswietl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [19.02]
:: OPIS:
::   WE: _a - obiekt testujący
::----------------------------------------------------------------------------------------------------------------------
:: @GIVEN
_test_driver:=_a;
:: @WHEN
_test_driver.send('', '{SPACE}', '');
_test_driver.send('', '{ESC}', '')


\popraw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [19.02]
:: OPIS:
::   WE: _a - obiekt testujący
::       _b - KTM materiału
::----------------------------------------------------------------------------------------------------------------------
:: @GIVEN
_test_driver:=_a;
_ktm_mat:={? _>1 & type_of(_b)=type_of('') || _b || '' ?};
:: @WHEN
{? _ktm_mat<>''
|| exec('szukaj','$materialy',_test_driver,_ktm_mat)
?};
_test_driver.menu('Popraw');
_test_driver.click('fld:@M.N');
_stara_nazwa:=_test_driver.execute("M.N");
_test_driver.send(_stara_nazwa+'02', '', 'fld:@M.N');
_test_driver.send('', '{F2}', '')


\usun
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [19.02]
:: OPIS:
::   WE: _a - obiekt testujący
::       _b - ktm
::----------------------------------------------------------------------------------------------------------------------
:: @GIVEN
_test_driver:=_a;
_ktm:={? _>1 & type_of(_b)=type_of('') || _b || '' ?};
:: @WHEN
{? _ktm<>''
|| exec('szukaj','$materialy',_test_driver,_ktm)
?};
_test_driver.menu('Usuń');
_test_driver.click('dbtn:Tak')


\policz_materialy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [19.02]
:: OPIS:
::   WE: _a - obiekt testujący
::   WY: M.size
::----------------------------------------------------------------------------------------------------------------------
:: @GIVEN
_test_driver:=_a;
:: @WHEN
_fml:="M.cntx_psh();
       M.prefix();
       _size:=M.size();
       M.cntx_pop();
       _size";
_size:=_test_driver.execute(_fml);
:: @THEN
_size


\wypelnij_dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [21.37]
:: OPIS: Wypełnia okno zaimportowanymi danymi
::   WE: _a - obiekt testujący
::       _b - tabela z danymi
::----------------------------------------------------------------------------------------------------------------------
:: @GIVEN
_test_driver:=_a;
{? _>1 & type_of(_b) = type_of(SYSLOG)
|| _dane_d:=_b
|| return()
?};
:: @WHEN
_test_driver.click('fld:@M.KTM');
_test_driver.send(_dane_d.KTM,'','fld:@M.KTM');
_test_driver.click('fld:@M.N');
_test_driver.send(_dane_d.N,'','fld:@M.N');
_test_driver.click('fld:@M.FIS_KTM');
_test_driver.send(_dane_d.FIS_KTM,'','fld:@M.FIS_KTM');
_test_driver.click('fld:@M.J.KOD');
_test_driver.send(_dane_d.JM_KOD,'','fld:@M.J.KOD');
:: F3
_test_driver.click('fld:@M.M_ATR.SYM');
_test_driver.send(_dane_d.MATR_SYM,'','fld:@M.M_ATR.SYM');
_test_driver.click('fld:@M.VAT.KOD');
_test_driver.send(_dane_d.VAT_KOD,'','fld:@M.VAT.KOD');


_test_driver.click('fld:@M.PKWIU.KOD');
_test_driver.send(_dane_d.PKWIU,'','fld:@M.PKWIU.KOD');

_test_driver.click('fld:@M.MGR.KOD');
_test_driver.send(_dane_d.MGR_KOD,'','fld:@M.MGR.KOD');

{? _dane_d.MGR_KOD<>''
|| _test_driver.click('fld:@M.MGRP.KOD');
   _test_driver.send(_dane_d.MGRP_KOD,'','fld:@M.MGRP.KOD')
?};

_test_driver.click('fld:@ZMIENNE.MGAT');
_test_driver.send(_dane_d.MGAT,'','fld:@ZMIENNE.MGAT');

_test_driver.click('fld:@ZMIENNE.MODM');
_test_driver.send(_dane_d.MODM,'','fld:@ZMIENNE.MODM');

_test_driver.click('fld:@M.KODK');
_test_driver.send(_dane_d.KODK,'','fld:@M.KODK');

_test_driver.click('fld:@M.WN');
_test_driver.send($_dane_d.WN,'','fld:@M.WN');
_test_driver.click('fld:@M.WB');
_test_driver.send($_dane_d.WB,'','fld:@M.WB');

{? _dane_d.DOKL<>0
|| _test_driver.click('fld:@M.DOKL');
   _test_driver.send($_dane_d.DOKL,'','fld:@M.DOKL')
?};
{? _dane_d.DOKL_C<>0
|| _test_driver.click('fld:@M.DOKL_C');
   _test_driver.send($_dane_d.DOKL_C,'','fld:@M.DOKL_C')
?};
{? _dane_d.DOKL_S<>0
|| _test_driver.click('fld:@M.DOKL_S');
   _test_driver.send($_dane_d.DOKL_S,'','fld:@M.DOKL_S')
?};
{? _dane_d.DOKL_Z<>0
|| _test_driver.click('fld:@M.DOKL_Z');
   _test_driver.send($_dane_d.DOKL_Z,'','fld:@M.DOKL_Z')
?};

_test_driver.click('fld:@M.PR_M');
_test_driver.send($_dane_d.PR_M,'','fld:@M.PR_M');
_test_driver.click('fld:@M.PR_N');
_test_driver.send($_dane_d.PR_N,'','fld:@M.PR_N');

:: radio
:: H W P S
{? _dane_d.R='W'
|| _test_driver.click('fld:@M.R(ndx=2)')
|? _dane_d.R='P'
|| _test_driver.click('fld:@M.R(ndx=3)')
|? _dane_d.R='S'
|| _test_driver.click('fld:@M.R(ndx=4)')
|| _test_driver.click('fld:@M.R(ndx=1)')
?};
_test_driver.click('fld:@M.OPAKOW');
{? _dane_d.OPAKOW='1' | _dane_d.OPAKOW='T'
|| _test_driver.send('checked', '', 'fld:@M.OPAKOW')
|| _test_driver.send('unchecked', '', 'fld:@M.OPAKOW')
?};

:: radio
:: W P
_test_driver.click('fld:@M.SETW');
{? _dane_d.SETW = 'P'
|| _test_driver.click('fld:@M.SETW(ndx=2)')
|| _test_driver.click('fld:@M.SETW(ndx=1)')
?};


_test_driver.click('fld:@M.CZY_TW');
{? _dane_d.CZY_TW='1' | _dane_d.CZY_TW='T'
|| _test_driver.send('checked', '', 'fld:@M.CZY_TW')
|| _test_driver.send('unchecked', '', 'fld:@M.CZY_TW')
?};

::zmiana zakładki
_test_driver.click('etab:@Dane dodatkowe');


:: F3
_test_driver.click('fld:@BEER.BADSEH.N');
_test_driver.send(_dane_d.BADSEH_N,'','fld:@BEER.BADSEH.N');

_test_driver.click('fld:@M.OSL');
_test_driver.send(_dane_d.OSL,'','fld:@M.OSL');

_test_driver.click('fld:@M.JPK_GTU.KOD');
_test_driver.send(_dane_d.GTU_KOD,'','fld:@M.JPK_GTU.KOD');

_test_driver.click('fld:@M.OO');
_test_driver.send(_dane_d.OO,'','fld:@M.OO');
_test_driver.click('fld:@M.SP_WYM');
_test_driver.send(_dane_d.SP_WYM,'','fld:@M.SP_WYM');

{? _dane_d.WYPDOM<>''
|| {? _dane_d.WYPDOM='1' | _dane_d.WYPDOM='T'
   || _test_driver.send('checked', '', 'fld:@ZRODZO.WYPDOM')
   || _test_driver.send('unchecked', '', 'fld:@ZRODZO.WYPDOM')
   ?}
?};

::check
{? _dane_d.WYPDOM<>''
|| {? _dane_d.GOMOB='1' | _dane_d.GOMOB='T'
   || _test_driver.send('checked', '', 'fld:@M.GOMOB')
   || _test_driver.send('unchecked', '', 'fld:@M.GOMOB')
   ?}
?};
:: radio DAPZN
{? _dane_d.IDMOB='D'
|| _test_driver.click('fld:@M.IDMOB(ndx=2)')
|? _dane_d.IDMOB='A'
|| _test_driver.click('fld:@M.IDMOB(ndx=3)')
|? _dane_d.IDMOB='P'
|| _test_driver.click('fld:@M.IDMOB(ndx=4)')
|? _dane_d.IDMOB='Z'
|| _test_driver.click('fld:@M.IDMOB(ndx=4)')
|| _test_driver.click('fld:@M.IDMOB(ndx=1)')
?};

::F3
{? _dane_d.SKROT<>''
|| _test_driver.click('fld:@M.FOMOB.SKROT');
   _test_driver.send(_dane_d.SKROT,'','fld:@M.FOMOB.SKROT')
?};

{? _dane_d.UNB<>0
|| _test_driver.click('fld:@M.UNB');
   _test_driver.send(_dane_d.UNB,'','fld:@M.UNB')
?};

:: Brakuje transportu
{? _dane_d.KODT<>''
|| _test_driver.click('fld:@INTRAST.KODT');
   _test_driver.send(_dane_d.KODT,'','fld:@INTRAST.KODT')
?};

_test_driver.click('fld:@M.KP');
_test_driver.send(_dane_d.KP,'','fld:@M.KP');

{? _dane_d.JUKOD<>''
|| _test_driver.click('fld:@INTRAST.JUKOD');
   _test_driver.send(_dane_d.JUKOD,'','fld:@INTRAST.JUKOD')
?};

{? _dane_d.JU_P<>0
|| _test_driver.click('fld:@M.JU_P');
   _test_driver.send($_dane_d.JU_P,'','fld:@M.JU_P')
?};


{? _dane_d.SZER<>0
|| _test_driver.click('fld:@M.SZER');
 _test_driver.send($_dane_d.SZER,'','fld:@M.SZER')
?};

{? _dane_d.DLUG<>0
|| _test_driver.click('fld:@M.DLUG');
   _test_driver.send($_dane_d.DLUG,'','fld:@M.DLUG')
?};

{? _dane_d.WYS<>0
|| _test_driver.click('fld:@M.WYS');
   _test_driver.send($_dane_d.WYS,'','fld:@M.WYS')
?};

{? _dane_d.ILOBJ<>0
|| _test_driver.click('fld:@M.ILOBJ');
   _test_driver.send($_dane_d.ILOBJ,'','fld:@M.ILOBJ')
?};

_test_driver.click('fld:@M.TEMP_OD');
_test_driver.send($_dane_d.TEMP_OD,'','fld:@M.TEMP_OD');
_test_driver.click('fld:@M.TEMP_DO');
_test_driver.send($_dane_d.TEMP_DO,'','fld:@M.TEMP_DO');

:: Radio T N ''
{? _dane_d.ABSTORE='T'
|| _test_driver.click('fld:@M.ABSTORE(ndx=1)')
|? _dane_d.ABSTORE='N'
|| _test_driver.click('fld:@M.ABSTORE(ndx=2)')
|| _test_driver.click('fld:@M.ABSTORE(ndx=3)')
?};

:: Radio T N ''
{? _dane_d.ABSTOREC='T'
|| _test_driver.click('fld:@M.ABSTOREC(ndx=1)')
|? _dane_d.ABSTOREC='N'
|| _test_driver.click('fld:@M.ABSTOREC(ndx=2)')
|| _test_driver.click('fld:@M.ABSTOREC(ndx=3)')
?};

_test_driver.click('etab:@Opis');

::_test_driver.click('fld:@M.OPIS');
::_test_driver.send(_dane_d.OPIS,'','fld:@M.OPIS');
~~

:Sign Version 2.0 jowisz:1045 2021/09/17 15:17:03 b4b0e49d07a621decc78b55ade7a35cad7a33657ed0a930db5736e4180439cdc61e57ebc6b41fe4fcaa3d8fa9b20b4103c39a0a207f762dd0cb175c0b62ef7c9b62348f53f66e42bdcb9d043437d7643022c85f0367e1ee2efa7f36ad3cdc0c456cd48c298b870645dc5526c45ee315d9029316ac949b30fc12a7906f1f99b19
