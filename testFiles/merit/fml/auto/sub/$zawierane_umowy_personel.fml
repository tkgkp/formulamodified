:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: $zawierane_umowy_personel.fml
:: Utworzony: 08.11.2018
:: Autor: ARTSLO
:: Systemy:
::======================================================================================================================
:: Zawartość:
::======================================================================================================================
\bf_h_um_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO
:: OPIS: bufor na dane do umowy potrzebne do zatrudnienia pracownika
::----------------------------------------------------------------------------------------------------------------------
return(tab_tmp(1,
:: Zakładka: Dane osobowo-pracownicze
:: Sekcja: Dane pracownika
'T','STRING[9]','Numer teczki',
'NAZWA','STRING[20]','Forma naboru',
'ZD','STRING[150]','Zawód wykonywany',
'SYM','STRING[35]','Konto kosztów',
'UPR','STRING[8]','Grupa uprawnień symbol',
'NR','INTEGER','Projekt',

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Umowa
'NUMER','STRING[20]','Numer',
'K','STRING[1]','Rodzaj',
'P_OD','STRING[10]','Data rozpoczęcia',
'P_DO','STRING[10]','Data zakończenia',
'OD','STRING[10]','Początek obowiązywania',
'DO','STRING[10]','Koniec obowiązywania',
'PRZYG','STRING[10]','Data przygotowania',
'PODPIS','STRING[10]','Data zawarcia',
'WYM_UZAS','STRING[1]','Wymagane uzasadnienie',
'OKR_UZAS','STRING[8]','Art. 25(1)',
'UZASDN','STRING[150]','Treść uzasadnienia',
'PRZEDST','STRING[150]','Przedstawiciel pracodawcy',

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Zatrudnienie
'PMP','STRING[1]','Podstawowe miejsce pracy?',
'H_WYD','STRING[16]','Jednostka organizacyjna',
'ST','STRING[80]','Stanowisko',
'KOD','STRING[8]','Pozycja w organizacji',
'SP','STRING[1]','Szczególne warunki/charakter pracy',
'CP','STRING[9]','Charakter pracy',
'RWYL','INTEGER','Wymiar zatrudnienia (licznik)',
'RWYM','INTEGER','Wymiar zatrudnienia (mianownik)',
'MIEJSCE','STRING[100]','Miejsce pracy',
'MAC','STRING[1]','Czy praca w trakcue urlopu T/N',
'WYL','INTEGER','Wymiar zatrudnienia (licznik)',
'WYM','INTEGER','Wymiar zatrudnienia (mianownik)',

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Płaca zadanicza
'S1','REAL','Kwota (płaca zasadnicza/stawka godzinowa)',
'KA','STRING[20]','Kategoria (płaca zasadnicza/tawka godzinowa)',
'CZYWAL','STRING[1]','Waluta (płaca zasadnicza/stawka godzinowa)',

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Dodatek funkcyjny
'S2','REAL','Kwota (dodatek funkcyjny/dodatek brygadzistowski)',
'S2T','STRING[1]','Procent (dodatek funkcyjny/dodatek brygadzistowski)',
'S2P','STRING[127]','Podstawa (dodatek funkcyjny/dodatek brygadzistowski)',
'KADOD','STRING[20]','Kategoria (dodatek funkcyjny/dodatek brygadzistowski)',
'CZYWAL2','STRING[1]','Waluta (dodatek funkcyjny/dodatek brygadzistowski)',

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Dodatek
'S3','REAL','Dodatek',
'S3T','STRING[1]','Procent (dodatek)',
'S3P','STRING[127]','Podstawa (dodatek funkcyjny/dodatek brygadzistowski)',
'CZYWAL3','STRING[1]','Waluta (dodatek funkcyjny/dodatek brygadzistowski)',

:: Zakładka: Warunki zatrudnienia
:: Sekcja: Wynagrodzenie w walucie obcej
'ZWAL','STRING[5]','Kod banku',
'WAL','STRING[3]','Trzycyfrowe oznaczenie waluty',

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Obsługa nadgodzin
'CZY_NADG','STRING[1]','Nadgodziny (obsługa nadgodzin)',
'DOP_NADG','REAL','Dopełnienie ponad wymiar (obsługa nadgodzin)',
'DOP_ST','REAL','Dopełnienie średniotygodniowe (obsługa nadgodzin)',

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Prawa autorskie
'PAT','STRING[1]','Przychód (prawa autorskie)',
'PAW','REAL','Kwota/Procent (prawa autorskie)',

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Adres w dokumencie
'MIASTO','STRING[30]','Adres osoby',
::zbadać

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Planowanie
'GRAFIK','STRING[1]','Grafik',

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Oddelegowanie do pracy za granicą
'ODDEL','STRING[1]','Oddelegowanie',
'KODDEL','STRING[1]','Praca w kilku krajach',

:: Zakładka: Oddelegowania do pracy za granicą
:: Sekcja: Dane podstawowe
'O_OD','STRING[10]','Data od',
'O_DO','STRING[10]','Data do',
'NAZ','STRING[40]','Kraj',
'MIEJ','STRING[150]','Miejsce oddelegowania',
'ZAKWM','STRING[150]','Miejsce zakwaterowania',

:: Zakładka: Oddelegowania do pracy za granicą
:: Sekcja: Dane do rozliczenia
'KODODD','STRING[8]','Tabela kursów',
'POD','STRING[1]','Podatek',
'ZUS','STRING[1]','Składki ZUS',
'ZAKW','STRING[1]','Koszty zakwaterowania',
'ST_NOC','REAL','Stawka za nocleg',
'SYM_ODD','STRING[3]','Waluta rozliczenia noclegu',

:: Zakładka: Oddelegowania do pracy za granicą
:: Sekcja: Zastępstwo
'ZAST','STRING[1]','Zastępstwo',
'T_ODD','STRING[9]','Numer teczki'))


\bf_badanie
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [19.22]
:: OPIS: bufor na dane badań lekarskich do uzupełnienia okna RED tabeli BDO
::----------------------------------------------------------------------------------------------------------------------
return(tab_tmp(1,
'DTS','STRING[10]','Data skierowania',
'KOD','STRING[8]','Typ badania',
'NRO','STRING[20]','Numer orzeczenia',
'DTO','STRING[10]','Data orzeczenia',
'KOD_1','STRING[9]','Wynik orzeczenia',
'DTUZ','STRING[10]','Data utraty zdolności',
'DTNB','STRING[10]','Data następnego badania',
'OPNIS','STRING[150]','Okres pracy na innym stanowisku',
'UWAGI','STRING[150]','Uwagi lekarza',
'ADNOT','STRING[150]','Adnotacje'))


\ustaw_par_obszaru
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [19.22]
:: OPIS: Formuła ustawia parametry obszaru (schemat, forma współpracy) poprzez kontrolkę
:: AREA: [PKD_ZAT]
::   WE: _a - wskazanie na obiekt testowy
::       _b [STRING] - wybrany schemat (string powinien zawierać reprezentacje refa UD_SCH)
::       _c [STRING] - wybrana forma współpracy (string powinien zawierać reprezentacje refa F_ZATR)
::----------------------------------------------------------------------------------------------------------------------
_test_driver:=_a;
_test_driver.logger.info('START WYWOŁANIE: \\ustaw_par_obszaru/$zawierane_umowy_personel.fml (time: '+$date()+' '+(time()$3)+')');
_schemat:=_b;
_form_wsp:=_c;
_test_driver.control('wnd:selektor>ctr:selektor', 'setValueOf', 'schCB@panel', _b, 1, 1);
_test_driver.control('wnd:selektor>ctr:selektor', 'setValueOf', 'formCB@panel', _c, 1, 1);
_test_driver.logger.info('KONIEC WYWOŁANIE: \\ustaw_par_obszaru/$zawierane_umowy_personel.fml (time: '+$date()+' '+(time()$3)+')');
~~


\wybierz_umowe
::----------------------------------------------------------------------------------------------------------------------
::   UTW: ARTSLO [19.22]
::  OPIS: Formuła wybierająca osobę z listy po imieniu, nazwisku i numerze pesel
::  AREA: [PKD_ZAT]
:: TABLE: [P]
::    WE: _a - wskazanie na obiekt testowy
::        _b [STRING] - numer teczki
::        _c [STRING] - nazwisko wybieranej osoby
::        _d [STRING] - imię wybieranej osoby
::        _e [STRING] - numer pesel wybieranej osoby
::----------------------------------------------------------------------------------------------------------------------
:: @GIVEN
_test_driver:=_a;
_test_driver.logger.info('START WYWOŁANIE: \\wybierz_umowe/$zawierane_umowy_personel.fml (time: '+$date()+' '+(time()$3)+')');
_teczka:=_b;
_nazwisko:=_c;
_imie:=_d;
_pesel:=_e;

:: @WHEN
_test_driver.click('wnd:PKD_ZAT');
_test_driver.assert('Brak okienka z umowami', 'wnd:PKD_ZAT', 'title', '');
_test_driver.filter('@P.T', _teczka, '@P.OSOBA.NAZWISKO', _nazwisko, '@P.OSOBA.PIERWSZE', _imie, '@P.OSOBA.PESEL', _pesel);
_test_driver.click('fld:@P.T(row=1)');

:: @THEN
_test_driver.assert_true('Niezgadza się nazwisko',_test_driver.state('fld:@P.T(row=1)').value=_teczka);
_test_driver.assert_true('Niezgadza się nazwisko',_test_driver.state('fld:@P.OSOBA.NAZWISKO(row=1)').value=_nazwisko);
_test_driver.assert_true('Niezgadza się imię',_test_driver.state('fld:@P.OSOBA.PIERWSZE(row=1)').value=_imie);
_test_driver.assert_true('Niezgadza się pesel',_test_driver.state('fld:@P.OSOBA.PESEL(row=1)').value=_pesel);
_test_driver.logger.info('KONIEC WYWOŁANIE: \\wybierz_umowe/$zawierane_umowy_personel.fml (time: '+$date()+' '+(time()$3)+')');
~~


\dolacz_umowe
::----------------------------------------------------------------------------------------------------------------------
::   UTW: ARTSLO
::  OPIS: elementarny test dodania umowy o prace
::  AREA: [PKD_ZAT]
:: TABLE: [H_UM], [H], [OS_ADRES], [P], [OSOBA]
::    WE: _a - wskazanie na obiekt testowy
::        _b - dane dotyczace osoby do wpisania zgodne ze strukturą w \bf_os_add/$dane_osobowe.fml
::        _c - dane dotyczace umowy do wpisania zgodne ze strukturą w \bf_h_um_add/$dane_osobowe.fml
::        _d - uruchomienie z pulpitu poprzez proces / z obszaru poprzez dołącz [1/0]
::        _e - jeśli dostepne są różne procesy akronim którym chcemy uruchomić
::        _f - zakończenie wprowadzania umowy lub nie [1/0]
::    WY: [1/0] - powodzenie operacji/porażka lub wystąpienie błędu
::----------------------------------------------------------------------------------------------------------------------
::GIVEN
_test_driver:=_a;
_test_driver.logger.info('START WYWOŁANIE: \\dolacz_umowe/$zawierane_umowy_personel.fml (time: '+$date()+' '+(time()$3)+')');
_osoba:=_b;
_umowa:=_c;
_proces:=_d;
_pro_acr:=_e;
_zatrudnij:=_f;
_wynik:=1;

::WHEN
{? ~_proces
|| _test_driver.click('btn:aa6479479000000');
   {? (_test_driver.exist('wnd:@tmp.aasdfjeoifjjeaf') &
      _test_driver.state('wnd:@tmp.aasdfjeoifjjeaf').title='Procesy') |
      _test_driver.exist('btn:@Uruchom')
   || _test_driver.filter('@tmp.UID', _pro_acr);
      _test_driver.click('fld:@tmp.UID(row=1)');
      _test_driver.assert('Brak procesu '+_pro_acr+'.', 'fld:@tmp.UID(row=1)', 'value', _pro_acr);
      _test_driver.click('btn:@Uruchom')
   ?}
?};
_test_driver.assert('', 'wnd:@P.e_tmp', 'state', 'restored', 'title', 'Zawieranie umowy o pracę', 'type', 'e');
_test_driver.click('btn:@Osoba');
_test_driver.filter('@OSOBA.NAZWISKO', _osoba.NAZWISKO, '@OSOBA.PIERWSZE', _osoba.PIERWSZE, '@OSOBA.PESEL', _osoba.PESEL);
_test_driver.click('fld:@OSOBA.NAZWISKO(row=1)');
_test_driver.menu('Wybierz');

:: Zakładka: Dane osobowo-pracownicze
:: Sekcja: Dane pracownika
_test_driver.click('fld:@P.T');
_test_driver.send(_umowa.T, '', 'fld:@P.T');

::Oprogramować wybieranie ze słownika zawód wykonywany, forma naboru, konto kosztów i projekt
_test_driver.click('fld:@P.ZAW.ZD');
_test_driver.send(_umowa.ZD, '', 'fld:@P.ZAW.ZD');
{? _umowa.UPR<>''
|| _test_driver.click('fld:@P.GP_DEF.SYMBOL');
   _test_driver.send(_umowa.UPR, '', 'fld:@P.GP_DEF.SYMBOL')
?};

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Umowa
_test_driver.click('etab:@Warunki zatrudnienia');

:: ominiecie nieprawidlowego podczytania pola przez driver
:: po zmianie zakladki mimo stoimy na polu H_UM.NUMER to driver uwaza ze stoimy na P.ZAW.ZD z poprzedniej zakladki
_test_driver.click('fld:@H_UM.RU.K');
_test_driver.click('fld:@H_UM.NUMER');
:: koniec ominiecia problemu

_test_driver.send(_umowa.NUMER, '', 'fld:@H_UM.NUMER');
_test_driver.click('fld:@H_UM.RU.K');
_test_driver.send(_umowa.K, '', 'fld:@H_UM.RU.K');
_test_driver.click('fld:@H_UM.P_OD');
_test_driver.send(_umowa.P_OD, '', 'fld:@H_UM.P_OD');
_test_driver.click('fld:@H_UM.P_DO');
_test_driver.send(_umowa.P_DO, '', 'fld:@H_UM.P_DO');
_test_driver.click('fld:@H_UM.OD');
_test_driver.send(_umowa.OD, '', 'fld:@H_UM.OD');
_test_driver.click('fld:@H_UM.DO');
_test_driver.send(_umowa.DO, '', 'fld:@H_UM.DO');
_test_driver.click('fld:@H.PRZYG');
_test_driver.send(_umowa.PRZYG, '', 'fld:@H.PRZYG');
_test_driver.click('fld:@H.PODPIS');
_test_driver.send(_umowa.PODPIS, '', 'fld:@H.PODPIS');
{? _umowa.WYM_UZAS='T'
|| _test_driver.click('fld:@H_UM.WYM_UZAS');
   _test_driver.send('checked', '', 'fld:@H_UM.WYM_UZAS');
   _test_driver.click('fld:@H_UM.OKR_UZAS.KOD');
   _test_driver.send(_umowa.OKR_UZAS, '', 'fld:@H_UM.OKR_UZAS.KOD');
   _test_driver.click('fld:@H_UM.UZASDN');
   _test_driver.send(_umowa.UZASADN, '', 'fld:@H_UM.UZASDN')
?};
_test_driver.click('fld:@H.PRZEDST');
_test_driver.send(_umowa.PRZEDST, '', 'fld:@H.PRZEDST');

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Zatrudnienie
_test_driver.click('fld:@H.PMP');
{? _umowa.PMP='T'
|| _test_driver.send('checked', '', 'fld:@H.PMP')
|| _test_driver.send('unchecked', '', 'fld:@H.PMP')
?};
_test_driver.click('fld:@EDIT_VAR.H_WYD');
_test_driver.send(_umowa.H_WYD, '', 'fld:@EDIT_VAR.H_WYD');
_test_driver.click('fld:@EDIT_VAR.H_ST.ST');
{? _umowa.ST<>''
|| _test_driver.send(_umowa.ST, '', 'fld:@EDIT_VAR.H_ST.ST')
|| _test_driver.send('', '{F3}', 'fld:@EDIT_VAR.H_ST.ST');
   _test_driver.click('fld:@STO.STN.ST(row=1)');
   _test_driver.menu('wybierz')
?};
::PAR_SKID.get(313)='T';
::_test_driver.click('fld:@EDIT_VAR.H_PSTO.KOD');
::_test_driver.send('', '{F3}', 'fld:@EDIT_VAR.H_PSTO.KOD');
::_test_driver.click('fld:@PSTO.POZWORG.OPIS(row=1)');
::_test_driver.menu('wybierz');
_test_driver.click('fld:@H.SP');
{? _umowa.SP='T'
|| _test_driver.send('checked', '', 'fld:@H.SP')
|| _test_driver.send('unchecked', '', 'fld:@H.SP')
?};
_test_driver.click('fld:@H.CP.CP');
_test_driver.send(_umowa.CP, '', 'fld:@H.CP.CP');
_test_driver.click('fld:@H.RWYL');
_test_driver.send($_umowa.RWYL, '', 'fld:@H.RWYL');
_test_driver.click('fld:@H.RWYM');
_test_driver.send($_umowa.RWYM, '', 'fld:@H.RWYM');
_test_driver.click('fld:@H.MIEJSCE');
_test_driver.send(_umowa.MIEJSCE, '', 'fld:@H.MIEJSCE');
_test_driver.click('fld:@H.MAC');
{? _umowa.MAC='T'
|| _test_driver.send('checked', '', 'fld:@H.MAC');
   _test_driver.click('fld:@H.WYL');
   _test_driver.send($_umowa.WYL, '', 'fld:@H.WYL');
   _test_driver.click('fld:@H.WYM');
   _test_driver.send($_umowa.WYM, '', 'fld:@H.WYM')
|| _test_driver.send('unchecked', '', 'fld:@H.MAC')
?};

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Płaca zadanicza
_test_driver.click('fld:@H.S1');
_test_driver.send($_umowa.S1, '', 'fld:@H.S1');
_test_driver.click('fld:@H.OS_ADRES.MIASTO');
_test_driver.click('fld:@H.KA');
_test_driver.send(_umowa.KA, '', 'fld:@H.KA');
_test_driver.click('fld:@H.CZYWAL');

{? _umowa.CZYWAL='T'
|| _test_driver.send('checked', '', 'fld:@H.CZYWAL')
|| _test_driver.send('unchecked', '', 'fld:@H.CZYWAL')
?};

_test_driver.click('fld:@H.S2');
_test_driver.send($_umowa.S2, '', 'fld:@H.S2');
{? _umowa.S2<>0
|| _test_driver.click('fld:@H.S2T');
   {? _umowa.S2T='T'
   || _test_driver.send('checked', '', 'fld:@H.S2T');
      _test_driver.click('fld:@H.S2P.NAZWA');
      _test_driver.send(_umowa.S2P, '', 'fld:@H.S2P.NAZWA')
   || _test_driver.send('unchecked', '', 'fld:@H.S2T')
   ?};
   _test_driver.click('fld:@H.CZYWAL2');

   {? _umowa.CZYWAL2='T'
   || _test_driver.send('checked', '', 'fld:@H.CZYWAL2')
   || _test_driver.send('unchecked', '', 'fld:@H.CZYWAL2')
   ?}
?};

_test_driver.click('fld:@H.S3');
_test_driver.send($_umowa.S3, '', 'fld:@H.S3');
{? _umowa.S3<>0
|| {? _umowa.S3T='T'
   || _test_driver.click('fld:@H.S3T');
      _test_driver.send('checked', '', 'fld:@H.S3T');
      _test_driver.click('fld:@H.S3P.NAZWA');
      _test_driver.send(_umowa.S3P, '', 'fld:@H.S3P.NAZWA')
   || _test_driver.click('fld:@H.S3T');
      _test_driver.send('unchecked', '', 'fld:@H.S3T')
   ?};
   _test_driver.click('fld:@H.CZYWAL3');
   {? _umowa.CZYWAL3='T'
   || _test_driver.send('checked', '', 'fld:@H.CZYWAL3')
   || _test_driver.send('unchecked', '', 'fld:@H.CZYWAL3')
   ?}
?};

:: Zakładka: Warunki zatrudnienia
:: Sekcja: Wynagrodzenie w walucie obcej
{? _umowa.CZYWAL3='T' | _umowa.CZYWAL2='T' | _umowa.CZYWAL='T'
|| _test_driver.click('fld:@H.ZWAL.KOD');
   _test_driver.send(_umowa.ZWAL, '{TAB}', 'fld:@H.ZWAL.KOD');
   _test_driver.click('fld:@H.WAL.KOD');
   _test_driver.send(_umowa.WAL, '', 'fld:@H.WAL.KOD')
?};

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Obsługa nadgodzin
{? _umowa.CZY_NADG='T'
|| _test_driver.click('fld:@H.CZY_NADG');
   _test_driver.send('checked', '', 'fld:@H.CZY_NADG');
   _test_driver.click('fld:@H.DOP_NADG');
   _test_driver.send($_umowa.DOP_NADG, '', 'fld:@H.DOP_NADG');
   _test_driver.click('fld:@H.DOP_ST');
   _test_driver.send($_umowa.DOP_ST, '', 'fld:@H.DOP_ST')
?};
:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Prawa autorskie
{? _umowa.PAT<>''
|| _test_driver.click('fld:@H.PAT(ndx='+_umowa.PAT+')');
   _test_driver.send(_umowa.PAT, '', 'fld:@H.PAT')
|| _test_driver.click('fld:@H.PAT(ndx=1)');
   _test_driver.send('1', '', 'fld:@H.PAT')
?};
{? _umowa.PAT='2' | _umowa.PAT='3'
|| _test_driver.click('fld:@H.PAW');

   _test_driver.send($_umowa.PAW, '', 'fld:@H.PAW')
?};

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Adres w dokumencie
_test_driver.click('fld:@H.OS_ADRES.MIASTO');
_test_driver.send('', '{F3}', 'fld:@H.OS_ADRES.MIASTO');
_test_driver.assert('', 'wnd:@OS_ADRES.SLO', 'state', 'restored', 'sum_row_allowed', 'true', 'sum_row_enabled', 'false', 'title', 'Adresy', 'type', 's');
{? _umowa.MIASTO='Wybierz'
|| _test_driver.click('fld:@OS_ADRES.OD(row=1)');
   _test_driver.send('', '{SPACE}', '');
   _test_driver.assert('', 'wnd:@OS_ADRES.RED', 'title', 'Adres', 'type', 'e');
   _test_driver.send('', '{ESC}', '');
   _test_driver.menu('wybierz')
|| _test_driver.menu('Dołącz');
:: dołączamy placeholder
   _test_driver.assert('', 'wnd:@OS_ADRES.RED', 'state', 'restored', 'title', 'Adres', 'type', 'e');
   _test_driver.click('fld:@OS_ADRES.KRAJ.NAZ');
   _test_driver.send('Polska', '', 'fld:@OS_ADRES.KRAJ.NAZ');
   _test_driver.click('fld:@OS_ADRES.WOJEWODZ');
   _test_driver.send('mazowieckie', '', 'fld:@OS_ADRES.WOJEWODZ');
   _test_driver.click('fld:@OS_ADRES.POWIAT');
   _test_driver.send('warszawski zachodni', '', 'fld:@OS_ADRES.POWIAT');
   _test_driver.click('fld:@OS_ADRES.GMINA');
   _test_driver.send('Błonie', '', 'fld:@OS_ADRES.GMINA');
   _test_driver.click('fld:@OS_ADRES.MIASTO');
   _test_driver.send('Warszawa', '', 'fld:@OS_ADRES.MIASTO');
   _test_driver.click('fld:@OS_ADRES.DOM');
   _test_driver.send('25', '', 'fld:@OS_ADRES.DOM');
   _test_driver.send('', '{F2}', '');
   _test_driver.menu('wybierz')
?};

:: Zakładka: Warunki Zatrudnienia
:: Sekcja: Planowanie
_test_driver.click('fld:@P.GRAFIK');
{? _umowa.GRAFIK='T'
|| _test_driver.send('checked', '', 'fld:@P.GRAFIK')
|| _test_driver.send('unchecked', '', 'fld:@P.GRAFIK')
?};

:: Zakładka: Oddelegowania do pracy za granicą
:: Sekcja: Dane podstawowe
:: brak części dla oddelegowań

:: Dokonujemy zatrudnienia
{? _zatrudnij=1
|| {? _test_driver.state('btn:@Akceptuj').enable='true'
   || _test_driver.click('btn:@Akceptuj');
      _test_driver.assert('', 'wnd:@P.e_tmp', 'state', 'restored', 'title', 'Wydruk umowy o pracę', 'type', 'e');
      _test_driver.click('btn:@Akceptuj');
      _test_driver.assert('', 'wnd:@P.e_tmp', 'state', 'restored', 'title', 'Rejestracja umowy o pracę', 'type', 'e');
      _test_driver.click('btn:@Zatrudnij')
   || _test_driver.click('btn:@Zapisz');
      _test_driver.click('wnd:PKD_ZAT');
      {? _test_driver.state('btn:aa9721900000000').enable='true'
      || _test_driver.click('btn:aa9721900000000');
         _test_driver.assert('', 'wnd:@P.e_tmp', 'title', 'Rejestracja umowy o pracę', 'type', 'e');
         _test_driver.click('btn:@Zapisz')
      ?}
   ?}
|| _test_driver.click('btn:@Zapisz');
   _test_driver.click('wnd:PKD_ZAT')
?};

::THEN
:: sprawdzenie czy wywołanie jest z innej aplikacji czy z wewnątrz
{? var_pres('P')<0 || _wew:=0 || _wew:=1 ?};


_sql_dP:='select IP from P join OSOBA join F_ZATR where OSOBA.NAZWISKO=\''+_osoba.NAZWISKO+'\' and OSOBA.PIERWSZE=\''+_osoba.PIERWSZE+'\''+' and OSOBA.PESEL=\''+_osoba.PESEL+'\' and F_ZATR.TYP=\'P\'';
_sql_mP:='select IP from P join OSOBA join F_ZATR where OSOBA.NAZWISKO=\''+_osoba.NAZWISKO+'\' and OSOBA.PIERWSZE=\''+_osoba.PIERWSZE+'\''+' and OSOBA.PESEL=\''+_osoba.PESEL+'\' and F_ZATR.TYP=\'p\'';
_sql_dP2:='\'select IP from P join OSOBA join F_ZATR where OSOBA.NAZWISKO=\\\''+_osoba.NAZWISKO+'\\\' and OSOBA.PIERWSZE=\\\''+_osoba.PIERWSZE+'\\\''+' and OSOBA.PESEL=\\\''+_osoba.PESEL+'\\\' and F_ZATR.TYP=\\\'P\\\'\'';
_sql_mP2:='\'select IP from P join OSOBA join F_ZATR where OSOBA.NAZWISKO=\\\''+_osoba.NAZWISKO+'\\\' and OSOBA.PIERWSZE=\\\''+_osoba.PIERWSZE+'\\\''+' and OSOBA.PESEL=\\\''+_osoba.PESEL+'\\\' and F_ZATR.TYP=\\\'p\\\'\'';

{? _zatrudnij=1
|| {? _wew
   || _wynik_dP:=(sql(_sql_dP)).first();
      _wynik_mP:=(sql(_sql_mP)).first();
      _wynik:=(_wynik_dP=1 & _wynik_mP=0)
   || _wynik_dP:=_test_driver.execute($('$((sql('+_sql_dP2+')).first())'));
      _wynik_mP:=_test_driver.execute($('$((sql('+_sql_mP2+')).first())'));
      _wynik:=(_wynik_dP='1' & _wynik_mP='0')
   ?};
   _test_driver.assert_true('Nie udało się zatrudnić pracownika'+_osoba.NAZWISKO,_wynik=1)
|| {? _wew
   || _wynik:=(sql(_sql_mP)).first()
   || _wynik:=_test_driver.execute($('$((sql('+_sql_mP2+')).first())'))
   ?};
   _test_driver.assert_true('Nie udało się zarejestrować umowy'+_osoba.NAZWISKO,{? _wew || _wynik=1 || _wynik='1' ?})
?};
_test_driver.logger.info('KONIEC WYWOŁANIE: \\dolacz_umowe/$zawierane_umowy_personel.fml (time: '+$date()+' '+(time()$3)+')');
return(_wynik)


\dolacz_badanie
::----------------------------------------------------------------------------------------------------------------------
::   UTW: ARTSLO [19.22]
::  OPIS: Formuła realizująca dolaczenie rekordu badań lekarskich dla pracownika z obaszaru Zawierane umowy (personel)
::  AREA: [PKD_ZAT]
:: TABLE: [BDO]
::    WE: _a - wskazanie na obiekt testujący
::        _b - struktura z danymi badania lekarskiego
::    WY: [1/0] - powodzenie operacji/porażka lub wystąpienie błędu
::----------------------------------------------------------------------------------------------------------------------
:: @GIVEN
_test_driver:=_a;
_test_driver.logger.info('START WYWOŁANIE: \\dolacz_badanie/$zawierane_umowy_personel.fml (time: '+$date()+' '+(time()$3)+')');
_badanie:=_b;

:: @WHEN
_test_driver.assert('', 'wnd:PKD_ZAT', 'title', '', 'type', 's');
_test_driver.assert_true('Brak dostępu do zakładki Badania lekarskie',_test_driver.exist('gtab:@Badania lekarskie'));
_test_driver.click('gtab:@Badania lekarskie');
_test_driver.click('btn:DOŁĄCZ');
_test_driver.assert('', 'wnd:@BDO.RED', 'title', 'Badanie lekarskie', 'type', 'e');
exec('uzupelnij_pole','$lib_base',_test_driver,'PoleEdycji','fld:@BDO.DTS',_badanie.DTS,0 );
exec('uzupelnij_pole','$lib_base',_test_driver,'PoleEdycji','fld:@BDO.TYP.KOD',_badanie.KOD,0 );
exec('uzupelnij_pole','$lib_base',_test_driver,'PoleEdycji','fld:@BDO.NRO',_badanie.NRO,0 );
exec('uzupelnij_pole','$lib_base',_test_driver,'PoleEdycji','fld:@BDO.DTO',_badanie.DTO,0 );
exec('uzupelnij_pole','$lib_base',_test_driver,'PoleEdycji','fld:@BDO.WYNIK.KOD',_badanie.KOD_1,0 );
exec('uzupelnij_pole','$lib_base',_test_driver,'PoleEdycji','fld:@BDO.DTUZ',_badanie.DTUZ,1 );
exec('uzupelnij_pole','$lib_base',_test_driver,'PoleEdycji','fld:@BDO.DTNB',_badanie.DTNB,1 );
exec('uzupelnij_pole','$lib_base',_test_driver,'PoleEdycji','fld:@BDO.OPNIS',_badanie.OPNIS,1 );
exec('uzupelnij_pole','$lib_base',_test_driver,'PoleEdycji','fld:@BDO.UWAGI',_badanie.UWAGI,1 );
exec('uzupelnij_pole','$lib_base',_test_driver,'PoleEdycji','fld:@BDO.ADNOT',_badanie.ADNOT,1 );
_test_driver.click('btn:OK');

::@THEN
_test_driver.click('fld:@BDO.DTO(row=1)');
_test_driver.send('', '{SPACE}', '');
_wyn:=_test_driver.assert('', 'wnd:@BDO.RED', 'title', 'Badanie lekarskie', 'type', 'e');
_test_driver.send('', '{ESC}', '');
_test_driver.logger.info('KONIEC WYWOŁANIE: \\dolacz_badanie/$zawierane_umowy_personel.fml (time: '+$date()+' '+(time()$3)+')');
_wyn

:Sign Version 2.0 jowisz:1048 2023/06/23 14:12:17 c02ef66249adafce1ea835820a0d64dfbb7b7d8182172d6e1e059d0c100a042e58b9af981229665a977f29e0637268aa4ad979223c455c9817679cb8a67cb6c1f5c43f9f0e3398776541fc4b3cfc891a80f744198b016fbfaecc664f5a1df071a11f9ad6a858fcad7513111716de8d6003ee4cd0150d4ec0edc28d957856cc73
