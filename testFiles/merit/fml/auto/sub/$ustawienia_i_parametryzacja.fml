:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: $ustawienia_i_parametryzacja.fml
:: Utworzony: 19.05.2020
:: Autor: ARTSLO
:: Systemy:
::======================================================================================================================
:: Zawartość:
::======================================================================================================================
\bf_imp_xls_zes
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [20.42]
:: OPIS: bufor na listę gałęzi do importu z Ustawień i parametryzacji
::----------------------------------------------------------------------------------------------------------------------
return(tab_tmp(1,
'NR','INTEGER','Nr porządkowy',
'KOD','STRING[36]','Kod gałęzi na potrzeby importu z xls',
'PATH','STRING[36]','Położenie w drzewie - informacyjne'))


\xls_import_z_galezi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARTSLO [20.42]
:: AREA: [ZWS_PAR]
:: OPIS: Formuła rozpoczyna import danych z plików excel z konkretnej galezi
::   WE: _a - wskazanie na obiekt testowy
::       _b - obiekt z ustawieniami importu
::       _c - kod gałęzi z której wykonujemy import do warunku dodatkowego
::       _d - wartość po której szukamy danej gałęzi
::       _e - czy przed importem uruchomic WYBIERZ [0 - nie uruchamiac / 1 - uruchamiać]
::   WY: obiekt z informacją czy były komunikaty
::----------------------------------------------------------------------------------------------------------------------
::GIVEN
_test_driver:=_a;
_test_driver.logger.info('START WYWOŁANIE: \\xls_import_galaz/$administracja.fml (time: '+$date()+' '+(time()$3)+')');
_set:=_b;
_wynik:=obj_new('blokujace','warunkowe','KOM');
_wynik.blokujace:=_wynik.warunkowe:=0;
_kod:=_c;
_value:=_d;
_wybierz:=_e;

_drzewo:=obj_new('title','branch_el');
_drzewo.title:='Parametryzacja';
_drzewo.branch_el:=obj_new(1);
_drzewo.branch_el[1]:=obj_new('kod','search_value');
_drzewo.branch_el[1].kod:='NAZWA';
_drzewo.branch_el[1].search_value:=_value;
_dodatkowy_war:='_test_driver.execute("{? __FP_KON.TREE.TAB.FP_DID=\''+_kod+'\' || \'1\' || \'0\' ?} ")=\'1\'';

::WHEN

{? exec('search_tree','$lib_base',_test_driver,'Parametryzacja','NAZWA',_value,_dodatkowy_war)
|| {? _wybierz
   || _test_driver.menu('Wybierz');
      _test_driver.send('', '{ESC}', '')
   ?};
   _test_driver.click('btn:@Importuj')
|| return()
?};

exec('wait','$lib_base',_test_driver,,'(oczekiwanie na inicjalizację importu)');

:: fragment dodany na potrzeby ominięcia błędu okienka z kontrolką :::::::::::::::::::::::::::::::::::::::::::::::::::::
_test_driver.win_action('maximize');
_test_driver.win_action('restore');
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

:: Wybór ustawień importu
{? _set.NADPISUJ='T'
|| _test_driver.click('fld:@tmp.MODE(ndx=1)');
   _test_driver.send('1', '', 'fld:@tmp.MODE')
|| _test_driver.click('fld:@tmp.MODE(ndx=2)');
   _test_driver.send('2', '', 'fld:@tmp.MODE')
?};

:: szczegóły komunikatów na razie nie obsługiwane
::{? _set.SZCZEGOLY='T'
::|| _test_driver.click('fld:@tmp.DETAILS');
::   _test_driver.send('unchecked', '', 'fld:@tmp.DETAILS')
::?};

_test_driver.send('','{F2}','');
{? _set.NADPISUJ='T' & _test_driver.exist('dbtn:Tak')
|| _test_driver.click('dbtn:Tak')
?};

_test_driver.ctrl_call_ret('!application>ctr:filechooser', 'showOpenDialog', 'int', '1');
_test_driver.ctrl_call_ret('!application>ctr:filechooser', 'getSelectedFile', 'string', _set.DIR);
_warunek:="{? _a.exist('dial:') & (23+(_a.state('dial:').message))='Zapis procesu przerwany'
         || {? _a.exist('dbtn:Zamknij')
            || _a.click('dbtn:Zamknij')
            |? _a.exist('dbtn:OK')
            || _a.click('dbtn:OK')
            ?}
         ?};
         ~(_a.exist('wnd:@tmp.#xls_import_nag'))";
exec('wait','$lib_base',_test_driver,_warunek,'(oczekiwanie na zakończenie importu)');

::THEN
:: sprawdzenie istanienia komunikatów do importu
_test_driver.assert('', 'wnd:@tmp.#xls_import_nag', 'title', 'Podsumowanie importu', 'type', 's');
_test_driver.click('btn:@Wszystkie komunikaty');
_test_driver.assert('', 'wnd:@tmp.#xls_import_his', 'title', 'Historia importu', 'type', 's');

::sprawdzam czy wogóle są jakieś komunikaty
_sa_komunikaty:=_test_driver.execute("{? cur_tab.size()>0 || '1' || '0' ?}");

{? _sa_komunikaty='1'
||
:: komunikaty blokujące walidacje
   _test_driver.filter('@tmp.RESVALID', '~1');
   _test_driver.click('fld:@tmp.RESVALID(row=1)');
   {? _test_driver.state('fld:@tmp.RESVALID(row=1)').value<>''
   || _wynik.blokujace:=1
   ?};

::komunikaty nie blokujące walidacji
   _test_driver.filter('@tmp.RESVALID', '1');
   _test_driver.click('fld:@tmp.RESVALID(row=1)');
   {? _test_driver.state('fld:@tmp.RESVALID(row=1)').value<>''
   || _wynik.warunkowe:=1
   ?}
?};

::opuszczenie okna wszystkich komunikatów
_test_driver.send('', '{ESC}', '');
_obiekt_json:=_test_driver.execute("params_exec('import_kom', '$wspolne',,1,'json')");
_json_sparsowany:=json_parse(_obiekt_json);
_wynik.KOM:=exec('bf_xls_kom','$wspolne');
{? ~(type_of(_json_sparsowany)=type_of(~~))
|| {! _n:=1..obj_len(_json_sparsowany)
   |! _wynik.KOM.MESSAGE:=_json_sparsowany[_n].MESSAGE;
      _wynik.KOM.FILE:=_json_sparsowany[_n].FILE;
      _wynik.KOM.SHEET:=_json_sparsowany[_n].SHEET;
      _wynik.KOM.ROW:=_json_sparsowany[_n].ROW;
      _wynik.KOM.add()
   !}
?};

::opuszczenie mechanizmu
_test_driver.send('', '{ESC}', '');

_test_driver.logger.info('KONIEC WYWOŁANIE: \\xls_import_galaz/$administracja.fml (time: '+$date()+' '+(time()$3)+')');
return(_wynik)

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:05 d571a9393278492b94d957452e002753df0509935201597543c1be5790ca28763c497d452809d61088be696614575abb40917c7956a3123c9fe9dd4deb158306661e83d5b6ee5517b7843096012d8f61b93dca1dbdcddcf34b6da646cf5f4c3ea41ceede1f4cb07eb6839a2870b4e94abb4fe485dc80e9e44f9c6d4652577af1
