:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: $test_%release.fml
:: Utworzony: 29.04.2020
:: Autor: WHAN
::======================================================================================================================
:: Zawartość: Testy automatyczne dla kontroli z pliku %release
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: Główna metoda obsługująca kontrole z pliku %release
::   WE: [_a] - tryb, 0 - domyślnie, wyświetlanie błędów, 1 - zgłaszanie do Lacidy, 2 - raport do stringa
::       [_b] - user do Lacidy
::       [_c] - hasło do Lacidy
::       [_d] - user do MBuilder
::       [_e] - hasło do MBuilder
::       [_f] - user do svn
::       [_g] - hasło do svn
::----------------------------------------------------------------------------------------------------------------------
{? _ >0 & type_of(_a)=type_of(0)
|| _report_mode:=_a
|| _report_mode:=0
?};
_credentials:=obj_new('userM','passM','userL','passL','userS','passS');
{? _ >1 & type_of(_b)=type_of('')
|| _credentials.userL:=_b
|| _credentials.userL:=''
?};
{? _ >2 & type_of(_c)=type_of('')
|| _credentials.passL:=_c
|| _credentials.passL:=''
?};
{? var_pres('_d')=type_of('')
|| _credentials.userM:=_d
|| _credentials.userM:=''
?};
{? var_pres('_e')=type_of('')
|| _credentials.passM:=_e
|| _credentials.passM:=''
?};
{? var_pres('_f')=type_of('')
|| _credentials.userS:=_f
|| _credentials.userS:=''
?};
{? var_pres('_g')=type_of('')
|| _credentials.passS:=_g
|| _credentials.passS:=''
?};
{? _report_mode=1
|| _log_file:=fopen('/auto/merit/robot/system/admin/$test_%release.log','uw',0)
|| _log_file:=fopen('$test_%release.log','uw',1)
?};
_res:=~~;
fwrite(_log_file,'INFO: Rozpoczęcie testu: test_%release ' + form(date()) + ' ' +form(time()));

:: Tablica z nazwami przeprowadzanych kontroli
_controls_names:=exec('controls_names','$test_%release',1);
_ndx_contr:=_controls_names.ndx_tmp(,1,'NR',,);
_controls_names.index(_ndx_contr);

_controls_names.first();
_RES_TAB:=obj_new(_controls_names.size());
exec('execute_controls','$test_%release',_controls_names,_RES_TAB,_log_file,_report_mode);

:: podział pliku z różnymi rodzajami wyjątków
fwrite(_log_file,'INFO: Podział pliku $%release_exceptions.csv');
{? exec('split_exceptions','$test_%release',_controls_names,_log_file)
||
   _EXC_TAB:=exec('exceptions_tab_init','$test_%release',_controls_names);
: import wyjątków
   {? _report_mode
   || exec('import_exc','$test_%release',_EXC_TAB,_controls_names,0)
   || exec('import_exc','$test_%release',_EXC_TAB,_controls_names,1)
   ?};
   fwrite(_log_file,'INFO: Usunięcie wyjątków z tabel wynikowych');
   exec('del_from_tab','$test_%release',_RES_TAB,_EXC_TAB,_log_file);
::   export błędów do csv
   fwrite(_log_file,'INFO: Eksport plików wynikowych do folderu tymczasowego');
   exec('export','$test_%release',_RES_TAB);
   {? _report_mode=0
   || exec('show_res','$test_%release',_controls_names,_RES_TAB)
   |? _report_mode=1
::   zgłoszenia błędów do Lacidy
   || _logi:=exec('logger','$test_mbuilder',_credentials.userM,_credentials.passM);
      exec('report_to_lacida','$test_%release',_controls_names,_RES_TAB,_log_file,_credentials,_logi)
   |? _report_mode=2
   || _res:=exec('report_to_string','$test_%release',_controls_names,_RES_TAB)
   ?}
?};
fwrite(_log_file,'INFO: Zakończenie testu: test_%release ' + form(date()) + ' ' +form(time()));
fclose(_log_file);
_res


\exec_main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: Główna metoda obsługująca kontrole z pliku %release - wywołanie z poziomu robota testującego
::   WE: _a - test driver
::----------------------------------------------------------------------------------------------------------------------
::@GIVEN
_test_driver:=_a;
_timeout:=_test_driver.timeout;
_test_driver.timeout:=900000;
_app:=_test_driver.app_activate();
USERS_Z.index('USERS_Z');
USERS_Z.prefix('Lacida');
{? USERS_Z.first()
||

   USERS_Z.prefix('Lacida');
   {? USERS_Z.first()
   ||
      _userL:=USERS_Z.LOGIN;
      _passL:=USERS_Z.HASLO
   ?};
   USERS_Z.prefix('svn');
   {? USERS_Z.first()
   ||
      _userS:=USERS_Z.LOGIN;
      _passS:=USERS_Z.HASLO
   ?};
   USERS_Z.prefix('mbuilder');
   {? USERS_Z.first()
   ||
      _test_driver.execute($('exec(\'main\',\'$test_%release\',1,\''+_userL+'\',\''+_passL+'\',\''
                              +USERS_Z.LOGIN+'\',\''+USERS_Z.HASLO+'\',\''+_userS+'\',\''+_passS+'\')'))
   ?}
?};
_test_driver.timeout:=_timeout


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: eksport błędów do csv
::   WE: _a - tablica z tabelami do eksportu
::   WY:
:: ~OST: INEXPORT,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_RES_TAB:=_a;

{? type_of(_RES_TAB[1])=118
||
   _RES_TAB[1].export('@'+tmp_dir()+exec('sep','#file')+'pth.csv',,,'UTF-8,header,nopth',,
   'DIR'  ,,1,,
   'PTH'  ,,2,,
   'NRL'  ,,3,,
   'LINES',,4,,
   'LINEM',,5,,
   'TYPE' ,,6,,
   'EL'   ,,7,,
   'OPIS' ,,8,,
   'OK'   ,,9, )
?};
{? type_of(_RES_TAB[2])=118
||
   _RES_TAB[2].export('@'+tmp_dir()+exec('sep','#file')+'macro.csv',,,'UTF-8,header,nopth',,
   'NRL'  ,,1,,
   'LINES',,2,,
   'LINEM',,3,,
   'TAB'  ,,4,,
   'FLD'  ,,5,,
   'OPIS' ,,6,,
   'OK'   ,,7, )
?};
{? type_of(_RES_TAB[3])=118
||
   _RES_TAB[3].export('@'+tmp_dir()+exec('sep','#file')+'wf.csv',,,'UTF-8,header,nopth',,
   'T_AKR'  ,,1 ,,
   'T_NAZWA',,2 ,,
   'T_KAT'  ,,3 ,,
   'T_WSP'  ,,4 ,,
   'F_AKR'  ,,5 ,,
   'F_TYP'  ,,6 ,,
   'F_NAZWA',,7 ,,
   'F_KAT'  ,,8 ,,
   'F_WSP'  ,,9 ,,
   'OPIS'   ,,10,,
   'OK'     ,,11, )
?};
{? type_of(_RES_TAB[4])=118
||
   {? type_of(_RES_TAB[4])<>type_of(~~)
   || _RES_TAB[4].export('@'+tmp_dir()+exec('sep','#file')+'mfiles.csv',,,'UTF-8,header,nopth',,
   'DIR'  ,,1 ,,
   'FILE' ,,2 , )
   ?}
?};
{? type_of(_RES_TAB[5])=118
||
   _RES_TAB[5].export('@'+tmp_dir()+exec('sep','#file')+'eol.csv',,,'UTF-8,header,nopth',,
   'DIR'  ,,1 ,,
   'FILE' ,,2 ,,
   'SIZE' ,,3 ,,
   'LINES',,4 ,,
   'ERR'  ,,5 ,,
   'OPIS' ,,6 ,,
   'OK'   ,,7 , )
?};
{? type_of(_RES_TAB[6])=118
||
   _RES_TAB[6].export('@'+tmp_dir()+exec('sep','#file')+'def_f.csv',,,'UTF-8,header,nopth',,
   'NAME',,1 ,,
   'PROC',,2 ,,
   'FILE',,3 ,,
   'TYPE',,4 ,,
   'OPIS',,5 ,,
   'OK'  ,,6 , )
?};
{? type_of(_RES_TAB[9])=118
||
   _RES_TAB[9].export('@'+tmp_dir()+exec('sep','#file')+'def__a_ae.csv',,,'UTF-8,header,nopth',,
      'TAB'    ,,1 ,,
      'WND'    ,,2 ,,
      'EMPTY'  ,,3 ,,
: Formuła
      'FMLB'   ,,4 ,,
      'PROC'   ,,5 ,,
      'FILE'   ,,6 ,,
      'TEXT'   ,,7 ,,
:  Parametr
      'P1W'    ,,8 ,,
      'P1K'    ,,9 ,,
: Wynik
      'TYPE'   ,,10,,
      'OPIS'   ,,11,,
      'OK'     ,,12, )
?};
{? type_of(_RES_TAB[7])=118
||
   _RES_TAB[7].export('@'+tmp_dir()+exec('sep','#file')+'def_flat.csv',,,'UTF-8,header,nopth',,
      'TZ'    ,,1 ,,
      'TAB'   ,,2 ,,
      'TW'    ,,3 ,,
      'WND'   ,,4 ,,
      'OK'    ,,5 , )
?};
{? type_of(_RES_TAB[8])=118
||
   _RES_TAB[8].export('@'+tmp_dir()+exec('sep','#file')+'def_twa.csv',,,'UTF-8,header,nopth',,
      'TAB'    ,,1 ,,
      'WND'    ,,2 ,,
      'EMPTY'  ,,3 ,,
      'PATH'   ,,4 ,,
      'KIND'   ,,5 ,,
      'ACTION' ,,6 ,,
      'CHAR'   ,,7 ,,
      'TYPE'   ,,8 ,,
      'OPIS'   ,,9 ,,
      'OK'     ,,10, )
?};
~~


\controls_names
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: tworzenie tabeli z nazwami kontroli
::   WE:
::   WY: tabela zawierająca kontrole
::----------------------------------------------------------------------------------------------------------------------
_controls_table:=tab_tmp(3,
   'NR'  ,'INTEGER','Numer porządkowy',
   'NAME','STRING[50]','Nazwa kontroli'@,
   'DESCRIPT','STRING[100]','Opis kontroli'@,
   'FORMULA','STRING[50]','Formuła wykonywana przy kontroli'@,
   'WHEN','STRING[50]','cyfry dni tygodnia w których ma się wykonywać test'@,
::                      lub napis 'koniec_miesiąca'
   'NR_RES','INTEGER','Liczba wykrytych błędów'@
);


::'Deklaracja ścieżek','Kontrola deklaracji ścieżek (pliki *.pth i *.pti)',exec('pth','%release',1)
::'macro.use','Kontrola poprawnosci pliku macro.use',exec('macro','%release',1)
::'Odwołania tabel wspólnych','Kontrola odwołań tabel wspólnych do tabel firmowych',exec('wf','%release',1)
::'Pliki warstwy .m','Lista plików warstwy .m',exec('mfiles','%release',1)
::'Końce linii','Kontrola końców linii',exec('eol','%release',1)
::'DEF: Formuły','Kontrola wywołań formuł z definicji',exec('def_f','%release',1)
::'DEF: "Rekord - przed" _a','"Rekord - przed" - kontrola parametru',exec('def__a_ae','%release',1)
::'DEF: Flat design','Kontrola flat design w oknach',exec('def_flat','%release',1)
::'DEF: Nazwy akcji okien wertowania','Kontrola nazw akcji okien wertowania',exec('def_twa','%release',1)
_release:=1;
_controls_table.NR:=1;
_controls_table.NAME:='Deklaracja ścieżek';
_controls_table.DESCRIPT:='Kontrola deklaracji ścieżek (pliki *.pth i *.pti)';
_controls_table.FORMULA:='exec(\'pth\',\'%release\',1)';
{? _release || _controls_table.WHEN:='1,2,3,4,5' || _controls_table.WHEN:='5' ?};
_controls_table.add();
_controls_table.NR:=2;
_controls_table.NAME:='macro.use';
_controls_table.DESCRIPT:='Kontrola poprawnosci pliku macro.use';
_controls_table.FORMULA:='exec(\'macro\',\'%release\',1)';
{? _release || _controls_table.WHEN:='1,2,3,4,5' || _controls_table.WHEN:='5' ?};
_controls_table.add();
_controls_table.NR:=3;
_controls_table.NAME:='Odwołania tabel wspólnych';
_controls_table.DESCRIPT:='Kontrola odwołań tabel wspólnych do tabel firmowych';
_controls_table.FORMULA:='exec(\'wf\',\'%release\',1)';
{? _release || _controls_table.WHEN:='1,2,3,4,5' || _controls_table.WHEN:='1,2,3,4,5' ?};
_controls_table.add();
_controls_table.NR:=4;
_controls_table.NAME:='Pliki warstwy .m';
_controls_table.DESCRIPT:='Lista plików warstwy .m';
_controls_table.FORMULA:='exec(\'mfiles\',\'%release\',1)';
{? _release || _controls_table.WHEN:='1,2,3,4,5' || _controls_table.WHEN:='5' ?};
_controls_table.add();
_controls_table.NR:=5;
_controls_table.NAME:='Końce linii';
_controls_table.DESCRIPT:='Kontrola końców linii';
_controls_table.FORMULA:='exec(\'eol\',\'%release\',1)';
{? _release || _controls_table.WHEN:='1,2,3,4,5' || _controls_table.WHEN:='koniec_miesiąca' ?};
_controls_table.add();
_controls_table.NR:=6;
_controls_table.NAME:='DEF: Formuły';
_controls_table.DESCRIPT:='Kontrola wywołań formuł z definicji';
_controls_table.FORMULA:='exec(\'def_f\',\'%release\',1)';
{? _release || _controls_table.WHEN:='1,2,3,4,5' || _controls_table.WHEN:='5' ?};
_controls_table.add();
_controls_table.NR:=9;
_controls_table.NAME:='DEF: Rekord - przed _a';
_controls_table.DESCRIPT:='"Rekord - przed" - kontrola parametru';
_controls_table.FORMULA:='exec(\'def__a_ae\',\'%release\',1)';
_controls_table.WHEN:='nie wykonywać';
_controls_table.add();
_controls_table.NR:=7;
_controls_table.NAME:='DEF: Flat design';
_controls_table.DESCRIPT:='Kontrola flat design w oknach';
_controls_table.FORMULA:='exec(\'def_flat\',\'%release\',1)';
{? _release || _controls_table.WHEN:='1,2,3,4,5' || _controls_table.WHEN:='5' ?};
_controls_table.add();
_controls_table.NR:=8;
_controls_table.NAME:='DEF: Nazwy akcji okien wertowania';
_controls_table.DESCRIPT:='Kontrola nazw akcji okien wertowania';
_controls_table.FORMULA:='exec(\'def_twa\',\'%release\',1)';
{? _release || _controls_table.WHEN:='1,2,3,4,5' || _controls_table.WHEN:='5' ?};
_controls_table.add();
::exec('select','#table',_controls_table);
_controls_table


\svn_blame
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: Formuła pokazująca autora zmiany danej linii w pliku
::   WE:  _a  [STRING] - Pełna ścieżka dostępu do pliku.
::       [_b] [NUMBER] - Numer linii w pliku.
::   WY:
:: ~OST: INENVGET,INFERASE,INFOPEN,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_out:='';
{? var_pres('_a')=type_of('')
|| _path:=_a;
   {? var_pres('_b')=type_of(0)
   || _line:=_b;
      _blame_path:=tmp_dir()+exec('sep','#file')+'blame2.txt';
      _cmd:='@'+envget('@COMSPEC')+' /c '+'c:\\auto\\tools\\svn_blame2.bat '+_path+' '+_blame_path;
      system(_cmd,1);
      {? _blame_txt:=fopen('@'+_blame_path,'r',0,0)
      || {! _i:=1.._line |!
         _line:=fread(_blame_txt)
         !};
         _out:=11+(6-_line);
         _out:=gsub(_out,' ','')
      ?};
      fclose(_blame_txt);
      ferase('@'+_blame_path,0)
   || return('') ?}
|| return('')
?};
_out


\split_exceptions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: podział pliku $%release_exceptions.csv
::   WE: _a - tablica z nazwami kontroli
::       _b - uchwyt pliku z logami
::   WY:
:: ~OST: INFOPEN,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_controls_names:=_a;
_log_file:=_b;
_exc_csv:='$%release_exceptions.csv';
_file_exc:=fopen(_exc_csv,'ur',1);
_line_number:=0;
{? _file_exc
   ||
      {! |?
::         odczytanie linii z nazwą kontroli
         _linia:=fread(_file_exc); _line_number+=1;
         {? _linia<>'\n' ||
            _linia_split:=spli_str(_linia,';');
            _controls_names.first();
            {? _controls_names.find_tab(,'NAME',,'=',_linia_split[1])
            ||
               fwrite(_log_file,'INFO: Import wyjątków kontroli: '+$_controls_names.NR+';'+_controls_names.NAME+'; '
                                       +_controls_names.DESCRIPT+'; '+_controls_names.FORMULA);

               _file_name:='exc_'+spli_str(_controls_names.FORMULA,'\'')[2]+'.csv';
               _file_exc_part:=fopen('@'+tmp_dir()+exec('sep','#file')+_file_name,'uw');
::      odczytanie linii z nagłówkami tabeli
               _linia:=fread(_file_exc); _line_number+=1;
               fwrite(_file_exc_part,_linia);
::      odczytanie wierszy wyjątków
               {! |?
                  _linia:=fread(_file_exc); _line_number+=1;
                  obj_del(_linia_split);
                  _linia_split:=spli_str(_linia,';');
                  {? gsub(_linia,';','')<>12*'#@#@#@' || fwrite(_file_exc_part,_linia) ?};
                  _linia_split[1]<>'#@#@#@' & _linia<>((12*'#@#@#@;')-1)
               !};
               obj_del(_linia_split);
               fclose(_file_exc_part)
            ||
               fwrite(_log_file,'ERROR: Błędna struktura pliku '+_exc_csv +' linia nr: ' + $_line_number)
            ?}
         ?};
         _linia<>'\n'
      !}
   ||
   fwrite(_log_file,'ERROR: Błąd przy odczycie pliku '+_exc_csv);
   return(0)
?};
fclose(_file_exc);
1


\del_from_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: Funkcja usuwająca rekord z tabeli
::   WE: _a - tablica z tabelami kontroli
::       _b - tablica z tabelami wyjątków
::       _c - uchwyt pliku z logami
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_RES_TAB:=_a;
_EXC_TAB:=_b;
_log_file:=_c;
:: _i - nr kontroli
::   {! _i:=2..2
{! _i:=1..obj_len(_RES_TAB)
|!
   {? type_of(_RES_TAB[_i])=118 & _EXC_TAB[_i].size()>0
   ||
      _EXC_TAB[_i].first();
::      _j - nr wiersza wyjątku dla kontroli _j
      {! _j:=1.._EXC_TAB[_i].size()
      |!
         _conditions:='';
::         _h -  nr pola dla kontroli  _j
         {! _h:=1..obj_len(_EXC_TAB[_i])
         |!
            _fld:=_EXC_TAB[_i][_h];
            _fld_acr:=_EXC_TAB[_i].fld_acr(_h);
            {? var_pres(_fld_acr,_EXC_TAB[_i],)=22
::            INTEGER
            ||
               {?  _fld<>0
               ||
                  _fld_value:=$_fld;
                  _conditions+='\''+_fld_acr+'\',,\'=\',' +_fld_value +','
               ?}
            |? var_pres(_fld_acr,_EXC_TAB[_i],)=27
::               STRING
            ||
               {?  _fld<>'*'
               ||
                  _fld_value:=_fld;
                  _fld_value:=gsub(_fld_value,'\\','\\\\');
                  _fld_value:=gsub(_fld_value,'\'','\\\'');
                  _fld_value:=gsub(_fld_value,(%9),'\\t');
                  _conditions+='\''+_fld_acr+'\',,\'=\',\'' +_fld_value +'\','
               ?}
            |? var_pres(_fld_acr,_EXC_TAB[_i],)=36
::               SYS_MEMO
            ||
               {?  _EXC_TAB[_i].memo_txt(0,1,_fld_acr)<>'*'
               ||
::                  _fld_value:=_EXC_TAB[_i].memo_line(_fld_acr);
                  _fld_value:=_EXC_TAB[_i].memo_txt(0,1,_fld_acr);
                  _fld_value:=gsub(_fld_value,'\\','\\\\');
                  _fld_value:=gsub(_fld_value,'\'','\\\'');
                  _fld_value:=gsub(_fld_value,(%10),'\\n');
                  _fld_value:=gsub(_fld_value,(%13),'');
                  _fld_value:=gsub(_fld_value,(%9),'\\t');
::                  ograniczenie bufora
                  {? +_fld_value > 7000 || _fld_value:=7000+_fld_value ?};
                  {? %(_fld_value+1)=13 || _fld_value:=_fld_value-1 ?};
                  _conditions+='\''+_fld_acr+'\',,\':*\',\'' +_fld_value +'\','
               ?}
            || fwrite(_log_file,'ERROR: Nieobsługiwany typ pola. UWAGA: Porównanie pola zostanie pominięte.')
            ?}
         !};
         _conditions:=_conditions-1;
         params_set('RES_TAB',_RES_TAB[_i]);
         _formula:=('_par:=params_get(0); {? _par.RES_TAB.find_tab(\'first\','+_conditions+') || _par.RES_TAB.del() || 0 ?}');
         {? _conditions=''
         || _formula:='_par:=params_get(0); {! |? _par.RES_TAB.first(); _par.RES_TAB.del() !}'
         ?};
         _formula:=$_formula;
         _formula();
         _EXC_TAB[_i].next()
      !}
   ?};
~~
!};
~~


\import_exc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: funkcja importująca tabele z wyjątkami
::   WE: _a - tablica z tabelami z wyjątkami
::       _b - tablica z nazwami kontroli
::       _c - 0/1 czy usuwać pliki po imporcie
::   WY:
:: ~OST: INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_EXC_TAB:=_a;
_controls_names:=_b;
_del:=_c;
_controls_names.cntx_psh();
_controls_names.first();
{! |?

   _file_name:='exc_'+spli_str(_controls_names.FORMULA,'\'')[2]+'.csv';
   _file_path:='@'+tmp_dir()+exec('sep','#file')+_file_name;
   _file:=fopen(_file_path,'ur');

   _fields:='';
   {! _i:=1..obj_len(_EXC_TAB[_controls_names.NR])
   |!
      _fields+='\''+_EXC_TAB[_controls_names.NR].fld_acr(_i)+'\',,'+$_i+',,'
   !};
   params_set('EXC_TAB',_EXC_TAB);
   _formula:=$('_par:=params_get(0); _par.EXC_TAB['+$_controls_names.NR+'].import(\''+gsub(_file_path,'\\','\\\\')+'\',,,,\'UTF-8*,nopth,header\',,'+
   _fields-1 + ')'
   );
   _formula();

::   exec('select','#table',_EXC_TAB[_controls_names.NR]);
   fclose(_file);
   {? _del || ferase(_file_path) ?};
   _controls_names.next()
!};
_controls_names.cntx_pop();
1


\exceptions_tab_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: inicjalizacja tabel z wyjątkami
::   WE: _a - tablica z nazwami kontroli
::   WY:    - tablica z zainicjalizowanymi tabelami wyjątków
::----------------------------------------------------------------------------------------------------------------------
_controls_names:=_a;
_controls_names.cntx_psh();
_controls_names.first();
_exceptions_tab:=obj_new(_controls_names.size());
{! |?
   _file_name:='exc_'+spli_str(_controls_names.FORMULA,'\'')[2]+'.csv';
::   pth
   {? _controls_names.NR=1
   ||
      _exceptions_tab[_controls_names.NR]:=tab_tmp(3,
   'DIR','STRING[64]','Katalog'@,
   'PTH','STRING[64]','Plik'@,
   'NRL','INTEGER','Nr linii'@,
   'LINES','STRING[255]','Linia'@,
   'LINEM','SYS_MEMO','Linia'@,
   'TYPE','STRING[1]','Typ'@,
   'EL','STRING[64]','Element'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
)
::   macro.use
   |? _controls_names.NR=2
   ||
      _exceptions_tab[_controls_names.NR]:=tab_tmp(1,
   'NRL','INTEGER','Nr linii'@,
   'LINES','STRING[255]','Linia'@,
   'LINEM','SYS_MEMO','Linia'@,
   'TAB','STRING[10]','Tabela'@,
   'FLD','STRING[10]','Pole'@,
   'OPIS','STRING[255]','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
)
::    wf
   |? _controls_names.NR=3
   ||
      _exceptions_tab[_controls_names.NR]:=
      tab_tmp(3,
   'T_AKR','STRING[8]','Tabela'@,
   'T_NAZWA','STRING[8]','Nazwa'@,
   'T_KAT','STRING[64]','Katalog'@,
   'T_WSP','STRING[1]','Wspólna'@,
   'F_AKR','STRING[8]','Pole'@,
   'F_TYP','STRING[9]','Typ'@,
   'F_NAZWA','STRING[8]','Nazwa'@,
   'F_KAT','STRING[64]','Katalog'@,
   'F_WSP','STRING[64]','Wspólna'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
)
::   mfiles
   |? _controls_names.NR=4
   ||
      _exceptions_tab[_controls_names.NR]:=tab_tmp(2,
      'DIR','STRING[64]','Katalog'@,
      'FILE','STRING[64]','Plik'@
   )
::   eol
   |? _controls_names.NR=5
   ||
      _exceptions_tab[_controls_names.NR]:=tab_tmp(2,
   'DIR','STRING[64]','Katalog'@,
   'FILE','STRING[64]','Plik'@,
   'SIZE','INTEGER','Rozmiar'@,
   'LINES','INTEGER','Liczba linii'@,
   'ERR','INTEGER','Liczba błędów'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
)
::   def_f
   |? _controls_names.NR=6
   ||
      _exceptions_tab[_controls_names.NR]:=tab_tmp(1,
   'NAME','STRING[31]','Nazwa formuły'@,
   'PROC','STRING[31]','Nazwa procedury'@,
   'FILE','STRING[31]','Nazwa pliku'@,
   'TYPE','STRING[1]','Typ błędu'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
)
::: def__a_ae
   |? _controls_names.NR=9
   ||
      _exceptions_tab[_controls_names.NR]:=tab_tmp(4,
   'TAB','STRING[8]','Tabela'@,
   'WND','STRING[8]','Okno'@,
   'EMPTY','STRING[1]','Akcja dla pustej dziedziny'@,
::: Formuła
   'FMLB','STRING[31]','Formuła'@,
   'PROC','STRING[31]','Nazwa procedury'@,
   'FILE','STRING[31]','Nazwa pliku'@,
   'TEXT','SYS_MEMO','Treść formuły'@,
:::  Parametr
   'P1W','STRING[255]','Wartość parametru'@,
   'P1K','STRING[60]','Komentarz do parametru'@,
::: Wynik
   'TYPE','STRING[1]','Typ błędu'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
)
::: def_flat
   |? _controls_names.NR=7
   ||
      _exceptions_tab[_controls_names.NR]:=tab_tmp(5,
   'TZ','STRING[8]','Zasób'@,
   'TAB','STRING[8]','Akronim'@,
   'TW','STRING[12]'@,'Typ okna'@,
   'WND','STRING[8]','Okno'@,
   'OK','STRING[1]','Flat design'@
)
::   def_twa
   |? _controls_names.NR=8
   ||
      _exceptions_tab[_controls_names.NR]:=tab_tmp(6,
   'TAB','STRING[8]','Tabela'@,
   'WND','STRING[8]','Okno'@,
   'EMPTY','STRING[1]','Pusta dziedzina'@,
   'PATH','STRING[8]','Ścieżka'@,
   'KIND','STRING[1]','Rodzaj'@,
   'ACTION','STRING[40]','Akcja'@,
   'CHAR','STRING[1]','Wyróżnik'@,
   'TYPE','STRING[1]','Typ błędu'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
)

   ?};
   _controls_names.next()
!};
_controls_names.cntx_pop();
_exceptions_tab


\execute_controls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: funkcja importująca tabele z wyjątkami
::   WE: _a - tablica z nazwami kontroli
::       _b - tablica z tabelemi do wyników kontroli
::       _c - plik log
::       _d - tryb, 0 - domyślnie, wyświetlanie błędów, 1 - zgłaszanie do Lacidy, 2 - raport do stringa
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_controls_names:=_a;
_RES_TAB:=_b;
_log_file:=_c;
_report_mode:=_d;

:'Deklaracja ścieżek','Kontrola deklaracji ścieżek (pliki *.pth i *.pti)',exec('pth','%release',1)
_controls_names.first();
{? _controls_names.WHEN* $ (date()~4)
   | (_controls_names.WHEN*'koniec_miesiąca' & (date()~2<>(date()+1)~2))
   | _report_mode=0
|| fwrite(_log_file,'INFO: Rozpoczęcie kontroli z pliku test_%release: '+$_controls_names.NR+'; '+_controls_names.NAME+'; '
   +_controls_names.DESCRIPT+'; '+_controls_names.FORMULA);
   _RES_TAB[_controls_names.NR]:=exec('pth','%release',1);
   _ndx_pth:=_RES_TAB[_controls_names.NR].ndx_tmp(,1,'OK',,);
   _RES_TAB[_controls_names.NR].index(_ndx_pth);
   _RES_TAB[_controls_names.NR].prefix('N',)
||
   _RES_TAB[_controls_names.NR]:=0
?};

:'macro.use','Kontrola poprawnosci pliku macro.use',exec('macro','%release',1)
_controls_names.next();
{? _controls_names.WHEN* $ (date()~4)
   | (_controls_names.WHEN*'koniec_miesiąca' & (date()~2<>(date()+1)~2))
   | _report_mode=0
|| fwrite(_log_file,'INFO: Rozpoczęcie kontroli z pliku test_%release: '+$_controls_names.NR+'; '+_controls_names.NAME+'; '
   +_controls_names.DESCRIPT+'; '+_controls_names.FORMULA);
   _RES_TAB[_controls_names.NR]:=exec('macro','%release',1);
   _ndx_macro:=_RES_TAB[_controls_names.NR].ndx_tmp(,1,'OK',,);
   _RES_TAB[_controls_names.NR].index(_ndx_macro);
   _RES_TAB[_controls_names.NR].prefix('N',)
||
   _RES_TAB[_controls_names.NR]:=0
?};


:'Odwołania tabel wspólnych','Kontrola odwołań tabel wspólnych do tabel firmowych',exec('wf','%release',1)
_controls_names.next();
{? _controls_names.WHEN* $ (date()~4)
   | (_controls_names.WHEN*'koniec_miesiąca' & (date()~2<>(date()+1)~2))
   | _report_mode=0
|| fwrite(_log_file,'INFO: Rozpoczęcie kontroli z pliku test_%release: '+$_controls_names.NR+'; '+_controls_names.NAME+'; '
   +_controls_names.DESCRIPT+'; '+_controls_names.FORMULA);
   _RES_TAB[_controls_names.NR]:=exec('wf','%release',1);
   _ndx_wf:=_RES_TAB[_controls_names.NR].ndx_tmp(,1,'OK',,);
   _RES_TAB[_controls_names.NR].index(_ndx_wf);
   _RES_TAB[_controls_names.NR].prefix('N',)
||
   _RES_TAB[_controls_names.NR]:=0
?};

:'Pliki warstwy .m','Lista plików warstwy .m',exec('mfiles','%release',1)
_controls_names.next();
{? _controls_names.WHEN* $ (date()~4)
   | (_controls_names.WHEN*'koniec_miesiąca' & (date()~2<>(date()+1)~2))
   | _report_mode=0
|| fwrite(_log_file,'INFO: Rozpoczęcie kontroli z pliku test_%release: '+$_controls_names.NR+'; '+_controls_names.NAME+'; '
   +_controls_names.DESCRIPT+'; '+_controls_names.FORMULA);
   _RES_TAB[_controls_names.NR]:=exec('mfiles','%release',1)
||
   _RES_TAB[_controls_names.NR]:=0
?};

:'Końce linii','Kontrola końców linii',exec('eol','%release',1)
_controls_names.next();
{? _controls_names.WHEN* $ (date()~4)
   | (_controls_names.WHEN*'koniec_miesiąca' & (date()~2<>(date()+1)~2))
   | _report_mode=0
|| fwrite(_log_file,'INFO: Rozpoczęcie kontroli z pliku test_%release: '+$_controls_names.NR+'; '+_controls_names.NAME+'; '
   +_controls_names.DESCRIPT+'; '+_controls_names.FORMULA);
   _RES_TAB[_controls_names.NR]:=exec('eol','%release',1);
   _ndx_eol:=_RES_TAB[_controls_names.NR].ndx_tmp(,1,'OK',,);
   _RES_TAB[_controls_names.NR].index(_ndx_eol);
   _RES_TAB[_controls_names.NR].prefix('N',)
||
   _RES_TAB[_controls_names.NR]:=0
?};

:'DEF: Formuły','Kontrola wywołań formuł z definicji',exec('def_f','%release',1)
_controls_names.next();
{? _controls_names.WHEN* $ (date()~4)
   | (_controls_names.WHEN*'koniec_miesiąca' & (date()~2<>(date()+1)~2))
   | _report_mode=0
|| fwrite(_log_file,'INFO: Rozpoczęcie kontroli z pliku test_%release: '+$_controls_names.NR+'; '+_controls_names.NAME+'; '
   +_controls_names.DESCRIPT+'; '+_controls_names.FORMULA);
   _RES_TAB[_controls_names.NR]:=exec('def_f','%release',1);
   _ndx_def_f:=_RES_TAB[_controls_names.NR].ndx_tmp(,1,'OK',,);
   _RES_TAB[_controls_names.NR].index(_ndx_def_f);
   _RES_TAB[_controls_names.NR].prefix('N',)
||
   _RES_TAB[_controls_names.NR]:=0
?};

:'DEF: Flat design','Kontrola flat design w oknach',exec('def_flat','%release',1)
_controls_names.next();
{? _controls_names.WHEN* $ (date()~4)
   | (_controls_names.WHEN*'koniec_miesiąca' & (date()~2<>(date()+1)~2))
   | _report_mode=0
|| fwrite(_log_file,'INFO: Rozpoczęcie kontroli z pliku test_%release: '+$_controls_names.NR+'; '+_controls_names.NAME+'; '
   +_controls_names.DESCRIPT+'; '+_controls_names.FORMULA);
   _RES_TAB[_controls_names.NR]:=exec('def_flat','%release',1);
   _ndx_def_flat:=_RES_TAB[_controls_names.NR].ndx_tmp(,1,'OK',,);
   _RES_TAB[_controls_names.NR].index(_ndx_def_flat);
   _RES_TAB[_controls_names.NR].prefix('N',)
||
   _RES_TAB[_controls_names.NR]:=0
?};

:'DEF: Nazwy akcji okien wertowania','Kontrola nazw akcji okien wertowania',exec('def_twa','%release',1)
_controls_names.next();
{? _controls_names.WHEN* $ (date()~4)
   | (_controls_names.WHEN*'koniec_miesiąca' & (date()~2<>(date()+1)~2))
   | _report_mode=0
|| fwrite(_log_file,'INFO: Rozpoczęcie kontroli z pliku test_%release: '+$_controls_names.NR+'; '+_controls_names.NAME+'; '
   +_controls_names.DESCRIPT+'; '+_controls_names.FORMULA);
   _RES_TAB[_controls_names.NR]:=exec('def_twa','%release',1);
   _ndx_def_twa:=_RES_TAB[_controls_names.NR].ndx_tmp(,1,'OK',,);
   _RES_TAB[_controls_names.NR].index(_ndx_def_twa);
   _RES_TAB[_controls_names.NR].prefix('N',)
||
   _RES_TAB[_controls_names.NR]:=0
?};

:'DEF: "Rekord - przed" _a','"Rekord - przed" - kontrola parametru',exec('def__a_ae','%release',1)
_controls_names.next();
{? _controls_names.WHEN* $ (date()~4)
   | (_controls_names.WHEN*'koniec_miesiąca' & (date()~2<>(date()+1)~2))
   | _report_mode=0
|| fwrite(_log_file,'INFO: Rozpoczęcie kontroli z pliku test_%release: '+$_controls_names.NR+'; '+_controls_names.NAME+'; '
   +_controls_names.DESCRIPT+'; '+_controls_names.FORMULA);
   _RES_TAB[_controls_names.NR]:=exec('def__a_ae','%release',1);
   _ndx_def_a_ae:=_RES_TAB[_controls_names.NR].ndx_tmp(,1,'OK',,);
   _RES_TAB[_controls_names.NR].index(_ndx_def_a_ae);
   _RES_TAB[_controls_names.NR].prefix('N',)
||
   _RES_TAB[_controls_names.NR]:=0
?};
~~


\report_to_lacida
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: funkcja importująca tabele z wyjątkami
::   WE: _a - tablica z nazwami kontroli
::       _b - tablica z tabelemi wyników kontroli
::       _c - plik log
::       _d - tablica z poświadczeniami
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_controls_names:=_a;
_RES_TAB:=_b;
_log_file:=_c;
_credentials:=_d;
_args:=exec('zglos_defekt_args','$lib_base');
_user_trans:=exec('user_trans','$lib_base');
_args.LOGIN:=_credentials.userL;
_args.PASS:=_credentials.passL;
_logi:=_e;
_controls_names.first();
{! |?
   {? _controls_names.WHEN* $ (date()~4) | (_controls_names.WHEN*'koniec_miesiąca' & (date()~2<>(date()+1)~2) )
   ||
      {? _controls_names.NR=1 & type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
      || _RES_TAB[_controls_names.NR].first();
         {! |?
            _args.RODZAJ:='Błąd Działania';
            _author:=exec('svn_blame','$test_%release',
            'C:\\auto\\wersja_rrxx\\17xx\\pth\\all'
            +exec('sep','#file')+_RES_TAB[_controls_names.NR].PTH,
            _RES_TAB[_controls_names.NR].NRL);
            {? _author='' | _author='-'  | _author='awi' | _author='izafij' | _author='pjaskul'
            || ~~
            || _args.WYKON:=_author
            ?};
            _args.WERYFIK:='grzabkie';
            _args.NAZ:='ERROR: '+_controls_names.DESCRIPT;
            _args.MEMO:=exec('description','$test_%release',_RES_TAB[_controls_names.NR],_controls_names.NR);
            exec('zglos_defekt_bez_dubli','$lib_base',_args);
            fwrite(_log_file,'INFO: ZGŁOSZENIE BŁĘDU '+_controls_names.DESCRIPT+': WYKONUJĄCY: '+_args.WYKON+' OPIS: '+ gsub(_args.MEMO,'\n','\t'));
            _RES_TAB[_controls_names.NR].next()
         !}
      |? _controls_names.NR=2 & type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
      || _RES_TAB[_controls_names.NR].first();
         {! |?
            _args.RODZAJ:='Błąd Działania';
            _author:=exec('svn_blame','$test_%release',
            'C:\\auto\\wersja_rrxx\\17xx\\pth'
            +exec('sep','#file')+'macro.use',
            _RES_TAB[_controls_names.NR].NRL);
            {? _author='' | _author='-'  | _author='awi' | _author='izafij' | _author='pjaskul'
            || ~~
            || _args.WYKON:=_author
            ?};
            _args.WERYFIK:='grzabkie';
            _args.NAZ:='ERROR: '+_controls_names.DESCRIPT;
            _args.MEMO:=exec('description','$test_%release',_RES_TAB[_controls_names.NR],_controls_names.NR);
            exec('zglos_defekt_bez_dubli','$lib_base',_args);
            fwrite(_log_file,'INFO: ZGŁOSZENIE BŁĘDU '+_controls_names.DESCRIPT+': WYKONUJĄCY: '+_args.WYKON+' OPIS: '+ gsub(_args.MEMO,'\n','\t'));
            _RES_TAB[_controls_names.NR].next()
         !}
      |? _controls_names.NR=3 & type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
      ||
         {! |?
            _args.RODZAJ:='Błąd Działania';
            _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,_RES_TAB[_controls_names.NR].T_AKR,'tabela');
            {? _args.WYKON='' || _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,
                                    _RES_TAB[_controls_names.NR].T_AKR,'') ?};
            {? _args.WYKON='' || _args.WYKON:='grzabkie' ?};
            {? _user_trans.find_tab('first','BUILDER',,'=',_args.WYKON) || _args.WYKON:=_user_trans.LACIDA ?};
            _args.WERYFIK:='grzabkie';
            _args.NAZ:='ERROR: '+_controls_names.DESCRIPT;
            _args.MEMO:=exec('description','$test_%release',_RES_TAB[_controls_names.NR],_controls_names.NR);
            exec('zglos_defekt_bez_dubli','$lib_base',_args);
            fwrite(_log_file,'INFO: ZGŁOSZENIE BŁĘDU '+_controls_names.DESCRIPT+': WYKONUJĄCY: '+_args.WYKON+' OPIS: '+ gsub(_args.MEMO,'\n','\t'));
            _RES_TAB[_controls_names.NR].next()
         !}
      |? _controls_names.NR=4 & type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
      ||
         {! |?
            _args.RODZAJ:='Błąd Działania';
            _author:=exec('svn_blame','$test_%release',
            'C:\\auto\\wersja_rrxx\\17xx'+ gsub(_RES_TAB[_controls_names.NR].DIR,'/auto/merit','')
            +exec('sep','#file')+_RES_TAB[_controls_names.NR].FILE,
            1);
            {? _author='' | _author='-'  | _author='awi' | _author='izafij' | _author='pjaskul'
            || ~~
            || _args.WYKON:=_author
            ?};
            _args.WERYFIK:='grzabkie';
            _args.NAZ:='ERROR: '+_controls_names.DESCRIPT;
            _args.MEMO:=exec('description','$test_%release',_RES_TAB[_controls_names.NR],_controls_names.NR);
            exec('zglos_defekt_bez_dubli','$lib_base',_args);
            fwrite(_log_file,'INFO: ZGŁOSZENIE BŁĘDU '+_controls_names.DESCRIPT+': WYKONUJĄCY: '+_args.WYKON+' OPIS: '+ gsub(_args.MEMO,'\n','\t'));
            _RES_TAB[_controls_names.NR].next()
         !}
      |? _controls_names.NR=5 & type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
      ||
         {? 1
         || _res:=exec('correct_eol','$test_%release',_RES_TAB[_controls_names.NR],_credentials);
            {? _res*'BŁĄD'
            || _sub:='BŁĄD. Błąd poprawy końców linii.'
            || _sub:='OK. Poprawiono końce linii.'
            ?};
            exec('mail_send','$lib_base',_sub,_res,pth_dir('autotran.cfg')+'/autotran_eol.cfg')
         ||
         {! |?
::      szukanie pierwszego złego końca linii
            _line_opis:=_RES_TAB[_controls_names.NR].memo_line('OPIS');
            _first_bad_line:=#spli_str(_line_opis,' ')[1];
            _args.RODZAJ:='Błąd Działania';
            _author:=exec('svn_blame','$test_%release',
            'C:\\auto\\wersja_rrxx\\17xx'+ gsub(_RES_TAB[_controls_names.NR].DIR,'/auto/merit','')
            +exec('sep','#file')+_RES_TAB[_controls_names.NR].FILE,
            _first_bad_line);
            {? _author='' | _author='-'  | _author='awi' | _author='izafij' | _author='pjaskul'
            || ~~
            || _args.WYKON:=_author
            ?};
            _args.WERYFIK:='grzabkie';
            _args.NAZ:='ERROR: '+_controls_names.DESCRIPT;
            _args.MEMO:=exec('description','$test_%release',_RES_TAB[_controls_names.NR],_controls_names.NR);
            exec('zglos_defekt_bez_dubli','$lib_base',_args);
            fwrite(_log_file,'INFO: ZGŁOSZENIE BŁĘDU '+_controls_names.DESCRIPT+': WYKONUJĄCY: '+_args.WYKON+' OPIS: '+ gsub(_args.MEMO,'\n','\t'));
            _RES_TAB[_controls_names.NR].next()
         !}
         ?}
      |? _controls_names.NR=6 & type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
      ||
         {! |?
            _args.RODZAJ:='Błąd Działania';
            _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,_RES_TAB[_controls_names.NR].NAME,
                     _RES_TAB[_controls_names.NR].PROC);
            {? _args.WYKON='' || _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,
                                    _RES_TAB[_controls_names.NR].NAME,'formuła') ?};
            {? _args.WYKON='' || _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,
                                    _RES_TAB[_controls_names.NR].NAME,'') ?};
            _days:=exec('days_after_mod','$test_mbuilder',_logi,_RES_TAB[_controls_names.NR].NAME,_args.WYKON);
            {? _args.WYKON='' || _args.WYKON:='grzabkie' ?};
            {? _user_trans.find_tab('first','BUILDER',,'=',_args.WYKON) || _args.WYKON:=_user_trans.LACIDA ?};
            _args.WERYFIK:='grzabkie';
            _args.NAZ:='ERROR: '+_controls_names.DESCRIPT;
            _args.MEMO:=exec('description','$test_%release',_RES_TAB[_controls_names.NR],_controls_names.NR);
            {? _days=-1 | _days>1
            || exec('zglos_defekt_bez_dubli','$lib_base',_args);
               fwrite(_log_file,'INFO: ZGŁOSZENIE BŁĘDU '+_controls_names.DESCRIPT+': WYKONUJĄCY: '+_args.WYKON+' OPIS: '+ gsub(_args.MEMO,'\n','\t'))
            ?};
            _RES_TAB[_controls_names.NR].next()
         !}
      |? _controls_names.NR=9 & type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
      ||
         {! |?
            _args.RODZAJ:='Błąd Działania';
            _args.WYKON:='grzabkie';
            _args.WERYFIK:='grzabkie';
            _args.NAZ:='ERROR: '+_controls_names.DESCRIPT;
            _args.MEMO:=exec('description','$test_%release',_RES_TAB[_controls_names.NR],_controls_names.NR);
:            kontrola wyłączona ze zgłaszania
:            exec('zglos_defekt_bez_dubli','$lib_base',_args);
:            fwrite(_log_file,'INFO: ZGŁOSZENIE BŁĘDU '+_controls_names.DESCRIPT+': WYKONUJĄCY: '+_args.WYKON+' OPIS: '+ gsub(_args.MEMO,'\n','\t'));
            _RES_TAB[_controls_names.NR].next()
         !}
      |? _controls_names.NR=7 & type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
      ||
         {! |?
            _args.RODZAJ:='Błąd Działania';
            _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,_RES_TAB[_controls_names.NR].TZ,
                              _RES_TAB[_controls_names.NR].WND);
            {? _args.WYKON='' || _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,
                                    _RES_TAB[_controls_names.NR].TZ,'') ?};
            _days:=exec('days_after_mod','$test_mbuilder',_logi,_RES_TAB[_controls_names.NR].TZ,_args.WYKON);
            {? _args.WYKON='' || _args.WYKON:='grzabkie' ?};
            {? _user_trans.find_tab('first','BUILDER',,'=',_args.WYKON) || _args.WYKON:=_user_trans.LACIDA ?};
            _args.WERYFIK:='grzabkie';
            _args.NAZ:='ERROR: '+_controls_names.DESCRIPT;
            _args.MEMO:=exec('description','$test_%release',_RES_TAB[_controls_names.NR],_controls_names.NR);
            {? _days=-1 | _days>1
            || exec('zglos_defekt_bez_dubli','$lib_base',_args);
               fwrite(_log_file,'INFO: ZGŁOSZENIE BŁĘDU '+_controls_names.DESCRIPT+': WYKONUJĄCY: '+_args.WYKON+' OPIS: '+ gsub(_args.MEMO,'\n','\t'))
            ?};
            _RES_TAB[_controls_names.NR].next()
         !}
      |? _controls_names.NR=8 & type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
      ||
         {! |?
            _args.RODZAJ:='Błąd Działania';
            _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,_RES_TAB[_controls_names.NR].TAB,
                          _RES_TAB[_controls_names.NR].WND);
            {? _args.WYKON='' || _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,
                                    _RES_TAB[_controls_names.NR].TAB,'') ?};
            {? _args.WYKON='' || _args.WYKON:='grzabkie' ?};
            {? _user_trans.find_tab('first','BUILDER',,'=',_args.WYKON) || _args.WYKON:=_user_trans.LACIDA ?};
            _args.WERYFIK:='grzabkie';
            _args.NAZ:='ERROR: '+_controls_names.DESCRIPT;
            _args.MEMO:=exec('description','$test_%release',_RES_TAB[_controls_names.NR],_controls_names.NR);
            exec('zglos_defekt_bez_dubli','$lib_base',_args);
            fwrite(_log_file,'INFO: ZGŁOSZENIE BŁĘDU '+_controls_names.DESCRIPT+': WYKONUJĄCY: '+_args.WYKON+' OPIS: '+ gsub(_args.MEMO,'\n','\t'));
            _RES_TAB[_controls_names.NR].next()
         !}
      ?}
   ?};
   _controls_names.next()
!};
~~


\show_res
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [21.14]
:: OPIS: Metoda pokazująca wyniki testu. Tylko przy wywołaniu bez zbłaszania błędów do Lacidy.
::   WE: _a - tabela z nazwami kontroli
::       _b - tabela z wynikami kontroli
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_controls_names:=_a;
_RES_TAB:=_b;
_controls_names.first();
{! |?
   _controls_names.NR_RES:={? type_of(_RES_TAB[_controls_names.NR])=type_of(~~)
                           || 0
                           || _RES_TAB[_controls_names.NR].size()
                           ?};
   _controls_names.put();
   _controls_names.next()
!};
{? _controls_names.last & _controls_names.NAME='DEF: Rekord - przed _a' || _controls_names.del ?};
_win:=_controls_names.mk_sel('Zestaw testów automatycznych'@,'T',0,'wer',,,,,'U','T',,0,,'maximized');
_controls_names.win_fld(_win,_controls_names,'NR',,,);
_controls_names.win_fld(_win,_controls_names,'NAME',,,);
_controls_names.win_fld(_win,_controls_names,'DESCRIPT',,,);
_controls_names.win_fld(_win,_controls_names,'NR_RES',,,);
_controls_names.win_sel(_win);
params_set('controls_names',_controls_names,'RES_TAB',_RES_TAB);
_controls_names.win_act(_win,,'Formuła','Pokaż błędy'@,,,
         "_par:=params_get();{? '4,8'*($cur_tab(1,1).NR)>0
                             || _opis:=''
                             || _opis:='OPIS'
                             ?};  exec('select','$test_%release',_par.RES_TAB[_par.controls_names.NR],,,_par.controls_names.DESCRIPT,,0,_opis)",,1);
_controls_names.select()


\report_to_string
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: zwraca raport z błędami jako wynik
::   WE: _a - tablica z nazwami kontroli
::       _b - tablica z tabelemi wyników kontroli
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_controls_names:=_a;
_RES_TAB:=_b;
_result:='';
_controls_names.first();
{! |?
   {? type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
   || _RES_TAB[_controls_names.NR].first();
      {! |?
         _result+='ERROR: '+_controls_names.DESCRIPT+'\n';
         _result+=exec('description','$test_%release',_RES_TAB[_controls_names.NR],_controls_names.NR);
         _RES_TAB[_controls_names.NR].next()
      !}
   ?};
   _controls_names.next()
!};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry + WHAN [12.10]
:: OPIS: Tworzy okienko dla podanej tabeli i wyświetla
::   WE:  _a  - wskazanie na tabelę / obiekt (tablica, tablica nazwana)
::       [_b] - drzewko? (dla tabeli domyślnie 0-nie, dla obiektu 1-tak)
::       [_c] - maska tabeli
::       [_d] - tytuł okienka
::       [_e] - lista kolumn (domyślnie wszystkie, które uda się dodać, dla obiektu predefiniowana lista)
::              użycie analogicznie jak w \select_action/#table.fml
::       [_f] - czy dodawać nazwę tabeli do tytułu okna, domyślnie dodawana nazwa
::       [_g] - akronim pola SYSMEMO, jeśli chcemy by dodać akcję opis z wyświetlaniem tego pola, domyślnie brak akcji
::   WY: wybrany rekord
::UWAGA: Parametry bez [] są wymagane, formuła może nie sprawdzać czy zostały podane i może wystąpić błąd.
::  OLD: \select/libfml.fml
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of(SYSLOG)
|| _tab:=_a;
   _tree:={? var_pres('_b')=1 || _b || 0 ?};
   _fields:={? var_pres('_e')=type_of('') || _fields:=_e || _fields:='' ?};
   {? var_pres('_f')=type_of(0)
   || _add_name:=_f
   || _add_name:=1
   ?};
   {? var_pres('_g')=type_of('')
   || _sys_memo:=_g
   || _sys_memo:=''
   ?}
|? type_of(_a)>100
|| _tab:=json_tparse(json_obj(_a));
   _tree:={? var_pres('_b')=1 || _b || 1 ?};
   _fields:=
      {? var_pres('_e')=type_of('')
      || _fields:=_e
      || _fields:='NAME[50],NTRUNC[TN][-5],TYPE,VAL[50],VTRUNC[TN][-5],INDEX,BVAL'
      ?}
|| return('Błędna wartość parametru')
?};
_mask:={? var_pres('_c')=2 || _c || ~~ ?};
_title:={? var_pres('_d')=type_of('') || _d || '' ?};

_tab.cntx_psh();
{? _mask<>~~ || _tab.use(_mask) ?};
_ref:=null();
_win:={? _tree>0 || _tab.mk_sel({? _add_name || _tab.name()+ ' - ' || '' ?} +_title,'P',_fields='',
                     form('#sellib'+_tab.name()),,,,1)
                 || _tab.mk_sel({? _add_name || _tab.name()+ ' - ' || '' ?}+_title,'P',_fields='',
                     form('#sellib'+_tab.name()),,,,0,'U')
      ?};
{? _win<>''
||
:: nalezy tymczasowo wylaczyc formuly na wyswietl
   _fmle:=obj_new(_tab.fld_num());
   {! _fld:=1.._tab.fld_num()
   |! _fmle[_fld]:=_tab.fld_fml(_tab.fld_acr(_fld),'BEFORE_DISPLAY',"~~")
   !};

:: dodanie pól, gdy lista jest podana
   _column_width:=0;
   {? _fields<>''
   || _split:=spli_str(_fields,',');
      {! _it:=1..obj_len(_split)
      |!
         _fld_split:=_split[_it];
         _ciapek:=0;
         {? _fld_split*'[TN]'>0
         || _fld_split:=gsub(_fld_split,'[TN]','');
            _ciapek:=1
         ?};

         {? (_s1:=_fld_split*'[') & (_s2:=_fld_split*']')
         || _width:=#(_s1-((_s2-1)+_fld_split));
            {? _width=0
            || _width:=_column_width
            || _fld_split:=gsub(_fld_split,'['+$_width+']','')
            ?}
         || _width:=_column_width
         ?};

         {! _fld:=1.._tab.fld_num()
         |! _fld_acr:=_tab.fld_acr(_fld);
            {? _fld_acr=_fld_split
            || {? _ciapek>0
               || _tab.win_fld(_win,,_fld_acr,,,_width,,,,,,2,,"'T'","'N'")
               || _tab.win_fld(_win,,_fld_acr,,,_width)
               ?}
            ?}
         !}
      !}
   ?};
   {? _sys_memo<>''
   || _opis:='cur_tab(1,1).win_edit(\'\');'
      +'_win_edit:=cur_tab(1,1).mk_edit(\''+_sys_memo+'\',0);'
      +'cur_tab(1,1).win_efld(_win_edit,,\''+_sys_memo+'\',,,80,-20,0,,,,,);'
      +'cur_tab(1,1).win_edit(_win_edit);'
      +'cur_tab(1,1).edit()';
      _tab.win_act(_win,,'Formuła','Opis'@,,,$_opis,,1,,,,'O');
      _tab.win_act(_win,,'Wyświetl',,,,$_opis);
::      _tab.win_act(_win,,'Wyświetl',,,,"exec('display','#table',cur_tab(1,1),cur_tab(1,1).ref())");
      _tab.win_act(_win,,'Rekord',,,,$('cur_tab(1,1).memo_get(,\''+_sys_memo+'\')'))
   ||
      _tab.win_act(_win,,'Wyświetl',,,,"exec('display','#table',cur_tab(1,1),cur_tab(1,1).ref())")
   ?};

   _tab.win_act(_win,,'Kolejność');
   _tab.win_sel(_win);
   {? _tab.select(,1,10,,,)
   || _ref:=_tab.ref()
   ?};
:: teraz trzeba przywrocić poprzednią obsługę
   {! _fld:=1.._tab.fld_num()
   |! _tab.fld_fml(_tab.fld_acr(_fld),'BEFORE_DISPLAY',_fmle[_fld])
   !}
?};
_tab.cntx_pop();
_ref


\get_big
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [21.14]
:: OPIS: Zwraca pierwszą wielką literę lub pusty string gdy nie znaleziono
::   WE: _a - wyraz do analizy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_big:='ABCDEFGHIJKLMNOPQRSTUVWXYZĄĆĘŁŃÓŚŹŻ';
{! _i:=1..+_a
|! _znak:=_i+_a+1;
   {? _big*_znak
   || return(_znak)
   ?}
!};
''


\get_num
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [21.14]
:: OPIS: Zwraca pierwszą cyfrę w napisie lub pusty string gdy nie znaleziono
::   WE: _a - cyfra
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_num:='1234567890';
{! _i:=1..+_a
|! _znak:=_i+_a+1;
   {? _num*_znak
   || return(_znak)
   ?}
!};
''


\description
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Zwraca opis błędu na podstawie tabeli
::   WE: _a - tabela z wynikami kontroli (_RES_TAB[_controls_names.NR])
::       _b - nr kontroli (_controls_names.NR)
::       _c - 0 - opis do Lacidy, 1* - opis skrócony
::   WY: [STRING] opis błędu
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_nr:=_b;
_short:={? var_pres('_c')=type_of(1) || _c || 1 ?};
_descr:='';
{? _nr=1
|| {? ~_short
   || _descr+='[ŚCIEŻKA]\n'
            +gsub(_tab.DIR,'/auto/merit','')+exec('sep','#file')+_tab.PTH+'\n\n'
            +'[PARAMETRY]\n\n[KROKI]\n\n[REZULTAT AKTUALNY]\n'
            +'Podczas testów automatycznych wykryty został błąd: \n'
   ?};
      _descr+='Błąd w deklaracji ścieżek: \n'
            +'Plik: '+_tab.PTH+'\n'
            +'Linia ('+$_tab.NRL+'): '+_tab.LINES+'\n'
            +'Element: '+_tab.EL+'\n'
            +'Opis: '+(7000+_tab.memo_txt(0,1,'OPIS'))+'\n'
            +{? _tab.memo_txt(0,1,'OPIS')*'będzie szukany w katalogu'
             || 'Należy sprawdzić przykrywanie deklarowanej ścieżki\n\n'
             || ''
             ?};
   {? ~_short
   || _descr+='[REZULTAT OCZEKIWANY]\nUsunięcie błędu deklaracji ścieżek'
   ?}
|? _nr=2
|| {? ~_short
   || _descr+='[ŚCIEŻKA]\n'
            + pth_dir('macro.use')+exec('sep','#file')+'macro.use\n\n'
            +'[PARAMETRY]\n\n[KROKI]\n\n[REZULTAT AKTUALNY]\n'
            +'Podczas testów automatycznych wykryty został błąd: \n'
   ?};
      _descr+='Błąd w pliku: macro.use\n'
            +'Linia ('+$_tab.NRL+'): '+_tab.LINES+'\n'
            +'Opis: '+_tab.OPIS+'\n\n';
   {? ~_short
   || _descr+='[REZULTAT OCZEKIWANY]\nUsunięcie błędu w pliku macro.use'
   ?}
|? _nr=3
|| {? ~_short
   || _descr+='[ŚCIEŻKA]\n\n'
            +'[PARAMETRY]\n\n[KROKI]\n\n[REZULTAT AKTUALNY]\n'
            +'Podczas testów automatycznych wykryty został błąd: \n'
   ?};
      _descr+='Błąd zależności między tabelami\n'
            +'Akronim tabeli: '+_tab.T_AKR+'\n'
            +'Nazwa tabeli: '+_tab.T_NAZWA+'\n'
            +'Opis: '+(7000+_tab.memo_txt(0,1,'OPIS'))+'\n\n';
   {? ~_short
   || _descr+='[REZULTAT OCZEKIWANY]\nUsunięcie błędu zależności między tabelami'
   ?}
|? _nr=4
|| {? ~_short
   || _descr+='[ŚCIEŻKA]\n\n'
            +'[PARAMETRY]\n\n[KROKI]\n\n[REZULTAT AKTUALNY]\n'
            +'Podczas testów automatycznych wykryty został błąd: \n'
   ?};
      _descr+='Błąd występowania pliku warstwy .m\n'
            +'Plik: '+_tab.FILE+'\n'
            +'Ścieżka: '+_tab.DIR+'\n\n';
   {? ~_short
   || _descr+='[REZULTAT OCZEKIWANY]\nUsunięcie błędu występowania pliku warstwy .m'
   ?}
|? _nr=5
|| {? ~_short
   || _descr+='[ŚCIEŻKA]\n\n'
            +gsub(_tab.DIR,'/auto/merit','')+exec('sep','#file')+_tab.FILE+'\n\n'
            +'[PARAMETRY]\n\n[KROKI]\n\n[REZULTAT AKTUALNY]\n'
            +'Podczas testów automatycznych wykryty został błąd: \n'
   ?};
      _descr+='Błąd występowania złych końców linii\n'
            +'Plik: '+_tab.FILE+'\n'
            +'Ścieżka: '+_tab.DIR+'\n'
            +'Liczba błędów: '+$_tab.ERR+'\n'
            +'Opis: '+(7000+_tab.memo_txt(0,1,'OPIS'))+'\n\n';
   {? ~_short
   || _descr+='[REZULTAT OCZEKIWANY]\nUsunięcie błędu występowania złych końców linii'
   ?}
|? _nr=6
|| {? ~_short
   || _descr+='[ŚCIEŻKA]\n\n'
            +'[PARAMETRY]\n\n[KROKI]\n\n[REZULTAT AKTUALNY]\n'
            +'Podczas testów automatycznych wykryty został błąd definicji: \n'
   ?};
      _descr+='Błąd podczas kontroli wywołań formuł z definicji\n'
            +'Nazwa formuły: '+_tab.NAME+'\n'
            +'Nazwa procedury: '+_tab.PROC+'\n'
            +'Nazwa pliku: '+_tab.FILE+'\n'
            +'Opis: '+(7000+_tab.memo_txt(0,1,'OPIS'))+'\n\n';
   {? ~_short
   || _descr+='[REZULTAT OCZEKIWANY]\nUsunięcie błędu wywołań formuł z definicji'
   ?}
|? _nr=7
|| {? ~_short
   || _descr+='[ŚCIEŻKA]\n\n'
            +'[PARAMETRY]\n\n[KROKI]\n\n[REZULTAT AKTUALNY]\n'
            +'Podczas testów automatycznych i analizy definicji wykryty został błąd: \n'
   ?};
      _descr+='Błąd podczas kontroli flat design w oknach redagowania i wertowania.\n'
            +'Zasób (Tabela/Zmienna): '+_tab.TZ+'\n'
            +'Akronim tabeli: '+_tab.TAB+'\n'
            +'Typ okna: '+_tab.TW+'\n'
            +'Okno: '+_tab.WND+'\n\n';
   {? ~_short
   || _descr+='[REZULTAT OCZEKIWANY]\nUsunięcie błędu wyglądu okna'
   ?}
|? _nr=8
|| _wyroznik:='';
   {? _tab.ACTION*'&'
   ||   _wyroznik:=1+(_tab.ACTION*'&'-_tab.ACTION)
   || _big:=exec('get_big','$test_%release',_tab.ACTION);
     {? %_big
     || _wyroznik:=_big
     || _num:=exec('get_num','$test_%release',_tab.ACTION);
        {? %_num
        || _wyroznik:=_num
        ?}
     ?}
   ?};
   {? ~_short
   || _descr+='[ŚCIEŻKA]\n\n'
            +'[PARAMETRY]\n\n[KROKI]\n\n[REZULTAT AKTUALNY]\n'
            +'Podczas testów automatycznych i analizy definicji wykryty został błąd: \n'
   ?};
      _descr+='Błąd podczas kontroli akcji okien wertowania.\n'
            +'Akronim tabeli: '+_tab.TAB+'\n'
            +'Okno: '+_tab.WND+'\n'
            +{? _tab.EMPTY='T' || 'Akcja dla PUSTEJ dziedziny'
             |? _tab.EMPTY='N' || 'Akcja dla NIEPUSTEJ dziedziny'
             || 'Akcja dla pustej dziedziny: '+_tab.EMPTY ?}+'\n'
            +{? _tab.PATH<>'' || 'Ścieżka: ' + _tab.PATH+'\n' || ''?}
            +'Akcja: '+_tab.ACTION+'\n'
            +'Wyróżnik wynikający z nazwy akcji: '+_wyroznik+'\n'
            +'Wyróżnik: '+_tab.CHAR+'\n'
            +'Opis: '+(7000+_tab.memo_txt(0,1,'OPIS'))+'\n\n';
   {? ~_short
   || _descr+='[REZULTAT OCZEKIWANY]\nUsunięcie błędu akcji okien wertowania'
   ?}
|? _nr=9
|| {? ~_short
   || _descr+='[ŚCIEŻKA]\n\n'
            +'[PARAMETRY]\n\n[KROKI]\n\n[REZULTAT AKTUALNY]\n'
            +'Podczas testów automatycznych i analizy definicji wykryty został błąd: \n'
   ?};
      _descr+='Błąd podczas kontroli parametrów akcji "Rekord przed"\n'
            +'Nazwa procedury: '+_tab.PROC+'\n'
            +'Nazwa pliku: '+_tab.FILE+'\n'
            +'Opis: '+(7000+_tab.memo_txt(0,1,'OPIS'))+'\n'
            +'Nazwa tabeli: '+_tab.TAB+'\n'
            +'Nazwa okna: '+_tab.WND+'\n'
            +'Nazwa formuły: '+_tab.FMLB+'\n\n';
   {? ~_short
   || _descr+='[REZULTAT OCZEKIWANY]\nUsunięcie błędu parametrów'
   ?}
?};
_descr


\correct_eol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS:
::   WE: _a - tabela z wynikami kontroli
::       _b - tablica z poswiadczeniami
::   WY: [STRING] wynik poprawy
:: ~OST: INENVGET,INFERASE,INFEXISTS,INFOPEN
::----------------------------------------------------------------------------------------------------------------------
_RES:=_a;
_credentials:=_b;
_result:='';
_sep_loc:=exec('sep','#file',0);
_sep_serv:=exec('sep','#file',1);
_main_pth_serv:=((pth_dir()*(_sep_serv+'pth'))-1)+pth_dir();
_main_pth_lok:='C:\\auto\\wersja_rrxx\\17xx\\';
::_main_pth_lok:='C:\\auto\\wersja_rrxx\\17xx_test\\';
:: update repozytorium
_cmd:='@'+envget('@COMSPEC')+' /c '+'c:\\auto\\tools\\svn_update.bat ';
system(_cmd,1);
_conv:=iconv('Windows-1250');
_RES.f_clear;
{? _RES.first
|| {! |?
      _pth_serv:=_RES.DIR+_sep_serv+_RES.FILE;
      _pth_lok:=_main_pth_lok+(+_main_pth_serv+1-_RES.DIR)+_sep_loc+_RES.FILE;
      {? fexists(_pth_serv) & fexists('@'+_pth_lok)
      ||
         _file_serv:=fopen(_pth_serv,'r',,,1);
         _file_lok:=fopen('@'+_pth_lok,'r',,,1);
         _hash_check:=hash(_file_serv,'sha1')=hash(_file_lok,'sha1');
         _file_serv.fclose();
         _file_lok.fclose();
         {? _hash_check
         || _py_res:=exec('py_system','$lib_base','eol.py',1,_pth_lok,1);
            {? _py_res.sys=0
            ||
::            plik z wiadomością svn
               _pth_mess:=_main_pth_lok+'svn_message'+$SYSLOG.tm_stamp()+'.txt';
               _res_svn:=_main_pth_lok+'svn_res'+$SYSLOG.tm_stamp()+'.txt';
               _f_mess:=fopen('@'+_pth_mess,'w',0,,1);
               _f_mess.fwrite(_conv.to('3270174233920462'));
               _f_mess.fwrite(_conv.to('Poprawa końców linii'));
               _f_mess.fclose();
               &_f_mess;
::            commit na svn
               _cmd:='svn commit "'+_pth_lok+'" --file "'+_pth_mess+'"';
               _par:=' --username '+_credentials.userS+
                     ' --password '+_credentials.passS+
                     ' --no-auth-cache'+
                     ' --non-interactive'+
                     ' --trust-server-cert';
               _cmd:='@'+envget('@COMSPEC')+' /u /c '+_cmd+_par+' > "'+_res_svn+'"';
               {? system(_cmd,1)=0
               || _file:=fopen('@'+_res_svn,'r',0);
                  _res_svn_cmd:='';
                  {? _file
                  || {!
                     |? (_wiersz:=_conv.from(fread(_file)));
                        _wiersz<>'\n'
                     |! _res_svn_cmd+=_wiersz
                     !};
                     fclose(_file)
                  || _res_svn_cmd+='error'
                  ?};
                  {? -_res_svn_cmd*'failed' | -_res_svn_cmd*'error'
                  || _result+='BŁĄD. Błąd komendy svn commit dla pliku '+_pth_lok
                  || _result+='OK. Poprawiono końce linii w pliku '+_pth_lok
                  ?};
                  _result+='\n'+_res_svn_cmd
               || _result+='BŁĄD. Błąd komendy commit dla pliku '+_pth_lok
               ?};
               ferase('@'+_pth_mess);
               ferase('@'+_res_svn)
            || _result+='BŁĄD. Błąd skryptu python eol.py na pliku: "'+_pth_lok+'"'
            ?}
         || _result+='BŁĄD. Niezgodność pliku na serwerze: "'+_pth_serv
                     +'" i pliku lokalnego: "'+_pth_lok+'"'
         ?}
      || _result+='BŁĄD. Nie można odnaleść pliku '+{? fexists(_pth_serv)=0 || _pth_serv+' ' || ''?}+
                                                    {? fexists(_pth_lok)=0 || _pth_lok+' ' || '' ?}
      ?};
      _result+='\n';
      _RES.next()
   !}
?};
&_conv;
_result


:Sign Version 2.0 jowisz:1048 2023/06/23 14:12:56 6eb476d9f9abc0c2adb3af1b891fc36849aa58055498c327e08410034ce09eb1bd494dd8e3be4f9aa8fba5f3c8170d3c82344d9ae08e2fe299cdedeb89d137751580c11983d5de22f2e3f9a53d3bcc79cc3b05edd6b1437372b3791e502a6cc29c288b6dc3ecdbc5864b104bcabdf88d8af93a7c071483b57bd2c7b7fc66e011
