:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: $test_mbuilder.fml
:: Utworzony: 21.05.2020
:: Autor: WHAN
::======================================================================================================================
:: Zawartość: Testy automatyczne dla kontroli wykonywanych przez AMK
::======================================================================================================================

\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: Główna metoda obsługująca kontrole z pliku %mbuilder
::   WE: [_a] - 1/0 czy zgłaszać błąd do Lacidy, domyślnie 0
::       [_b] - user do Lacidy
::       [_c] - hasło do Lacidy
::       [_d] - user do MacroBulidera
::       [_e] - hasło do MacroBulidera
:: ~OST: INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of(0)
|| _report_to_lacida:=_a
|| _report_to_lacida:=0
?};
{? var_pres('_b')=type_of('')
|| _userL:=_b
|| _userL:=''
?};
{? var_pres('_c')=type_of('')
|| _passL:=_c
|| _passL:=''
?};
{? var_pres('_d')=type_of('')
|| _userM:=_d
|| _userM:=''
?};
{? var_pres('_e')=type_of('')
|| _passM:=_e
|| _passM:=''
?};
{? _report_to_lacida
::|| _log_file:=fopen('$test_mbuilder.log','uw',1)
|| _log_file:=fopen('/auto/merit/robot/system/admin/$test_mbuilder.log','uw',0)
|| _log_file:=fopen('$test_mbuilder.log','uw',1)
?};
fwrite(_log_file,'INFO: Rozpoczęcie testu: test_mbuilder ' + form(date()) + ' ' +form(time()));
:: Tablica z nazwami przeprowadzanych kontroli
_controls_names:=exec('controls_names','$test_mbuilder',1);
_ndx_contr:=_controls_names.ndx_tmp(,1,'NR',,);
_controls_names.index(_ndx_contr);

_controls_names.first();
_RES_TAB:=obj_new(_controls_names.size());
exec('execute_controls','$test_mbuilder',_controls_names,_RES_TAB,_log_file,_userM,_passM,_report_to_lacida);
{? type_of(_RES_TAB[2])=118 || exec('correct','$test_mbuilder',_RES_TAB[2]) ?};

: podział pliku z różnymi rodzajami wyjątków
fwrite(_log_file,'INFO: Podział pliku $mbuilder_exceptions.csv');
{? exec('split_exceptions','$test_mbuilder',_controls_names,_log_file)
||
   _EXC_TAB:=exec('exceptions_tab_init','$test_mbuilder',_controls_names);
: import wyjątków
   {? _report_to_lacida
   || exec('import_exc','$test_mbuilder',_EXC_TAB,_controls_names,0)
   || exec('import_exc','$test_mbuilder',_EXC_TAB,_controls_names,1)
   ?};
   fwrite(_log_file,'INFO: Usunięcie wyjątków z tabel wynikowych');
   exec('del_from_tab','$test_%release',_RES_TAB,_EXC_TAB,_log_file);
:   export błędów do csv
   fwrite(_log_file,'INFO: Eksport plików wynikowych do folderu tymczasowego');
   exec('export','$test_mbuilder',_RES_TAB);
   {? _report_to_lacida=0
   ||
::      FUN.info('W celu dodania wyjątku błędu do tabeli wyjątków należy \nprzejść do katalogu '+tmp_dir()
::      +'\nodnaleźć rekordy które chcemy dodać do wyjątków \noraz skopiować je do pliku \\merit\\fml\\auto\\csv\\$mbuilder_exceptions.csv.'
::      +'\n\nUwaga znak "*" lub "0" oznacza brak znaczenia kolumny odpowiednio dla typów STRING i SYS_MEMO oraz INTEGER.');
      _controls_names.prefix(6);
      {? _controls_names.first || _controls_names.del() ?};
      _controls_names.prefix();
      exec('show_res','$test_mbuilder',_controls_names,_RES_TAB)
   ?};
:   zgłoszenia błędów do Lacidy
   {? _report_to_lacida
   || _logi:=exec('logger','$test_mbuilder',_userM,_passM);
      exec('report_to_lacida','$test_mbuilder',_controls_names,_RES_TAB,_log_file,_userL,_passL,_logi)
   ?}
?};
fwrite(_log_file,'INFO: Zakończenie testu: test_mbuilder ' + form(date()) + ' ' +form(time()));
fclose(_log_file);
~~


\exec_main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: Główna metoda obsługująca kontrole z pliku %mbuilder - wywołanie z poziomu robota testującego
::   WE: _a - test driver
::----------------------------------------------------------------------------------------------------------------------
::@GIVEN
_test_driver:=_a;
_timeout:=_test_driver.timeout;
_test_driver.timeout:=900000;
_test_file_merit:=pth_dir('$test_mbuilder.fml')+exec('sep','#file')+'$test_mbuilder.fml';
_userL:='';
_passL:='';
{? var_pres('USERS_Z')>0
|| USERS_Z.index('USERS_Z');
   USERS_Z.prefix('Lacida');
   {? USERS_Z.first()
   ||
      _userL:=USERS_Z.LOGIN;
      _passL:=USERS_Z.HASLO
   ?};
   USERS_Z.prefix('mbuilder');
   {? USERS_Z.first()
   ||
      _test_driver.execute($('exec(\'main\',\'$test_mbuilder\',1,\''+_userL+'\',\''+_passL+'\',\''
                              +USERS_Z.LOGIN+'\',\''+USERS_Z.HASLO+'\')'))
   ?}
||
   _test_driver.execute($('exec(\'main\',\'$test_mbuilder\',0)'))
?};
_test_driver.timeout:=_timeout


\controls_names
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: tworzenie tabeli z nazwami kontroli
::   WE:
::   WY: tabela zawierająca kontrole
::----------------------------------------------------------------------------------------------------------------------
_controls_table:=tab_tmp(3,
   'NR'  ,'INTEGER','Numer porządkowy',
   'NAME','STRING[50]','Nazwa kontroli'@,
   'DESCRIPT','STRING[100]','Opis kontroli'@,
   'FORMULA','STRING[50]','Formuła wykonywana przy kontroli'@,
   'FILE','STRING[50]','Plik w którym jest formuła kontrolna'@,
   'EXEC_DAY','INTEGER','Nr dnia tygodnia wykonania testu, 0-codziennie'@,
   'NR_RES','INTEGER','Liczba wykrytych błędów'@
);


::1;   Ikony Ok Anuluj Zakoncz;   Przyciski Ok Anuluj Zakończ bez odpowiednich ikonek;   a1;   amk
::2;   Nazwy akcji;   Nazwa przycisku nie zawiera się w nazwie akcji ani nazwa akcji nie zawiera się w nazwie przycisku;   a5;   amk
::3;   Ikony z błędnymi ikonami - xmenu16_png;   Przyciski z ikonkami z pliku xmenu16.png;   a9;   amk
::4;   Okna skalowane;   Okna skalowane;   scaled;   spr_anim
::5;   Okna poza FullHD;   Okna poza FullHD;   fullhd;   spr_anim

_release:=1;
::_controls_table.NR:=1;
::_controls_table.NAME:='Ikony Ok Anuluj Zakończ';
::_controls_table.DESCRIPT:='Przyciski Ok Anuluj Zakończ bez odpowiednich ikonek';
::_controls_table.FORMULA:='a1';
::_controls_table.FILE:='amk';
::{? _release || _controls_table.EXEC_DAY:=0 || _controls_table.EXEC_DAY:=5 ?};
::_controls_table.add();
_controls_table.NR:=1;
_controls_table.NAME:='Nazwy akcji';
_controls_table.DESCRIPT:='Nazwa przycisku nie zawiera się w nazwie akcji ani nazwa akcji nie zawiera się w nazwie przycisku';
_controls_table.FORMULA:='a5';
_controls_table.FILE:='amk';
{? _release || _controls_table.EXEC_DAY:=0 || _controls_table.EXEC_DAY:=5 ?};
_controls_table.add();
_controls_table.NR:=2;
_controls_table.NAME:='Ikony z błędnymi ikonami - xmenu16_png';
_controls_table.DESCRIPT:='Przyciski z ikonkami z pliku xmenu16.png';
_controls_table.FORMULA:='a9';
_controls_table.FILE:='amk';
{? _release || _controls_table.EXEC_DAY:=0 || _controls_table.EXEC_DAY:=5 ?};
_controls_table.add();
_controls_table.NR:=3;
_controls_table.NAME:='Okna skalowane';
_controls_table.DESCRIPT:='Okna skalowane';
_controls_table.FORMULA:='scaled';
_controls_table.FILE:='spr_anim';
{? _release || _controls_table.EXEC_DAY:=0 || _controls_table.EXEC_DAY:=5 ?};
_controls_table.add();
_controls_table.NR:=4;
_controls_table.NAME:='Okna poza FullHD';
_controls_table.DESCRIPT:='Okna poza FullHD';
_controls_table.FORMULA:='fullhd';
_controls_table.FILE:='spr_anim';
{? _release || _controls_table.EXEC_DAY:=0 || _controls_table.EXEC_DAY:=5 ?};
_controls_table.add();
_controls_table.NR:=5;
_controls_table.NAME:='Dodanie pól IDADD';
_controls_table.DESCRIPT:='Automatyczne dodanie pól IDADD';
_controls_table.FORMULA:='idadd';
_controls_table.FILE:='amk';
_controls_table.EXEC_DAY:=0;
_controls_table.add();
::exec('select','#table',_controls_table);
_controls_table


\exceptions_tab_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: inicjalizacja tabel z wyjątkami
::   WE: _a - tablica z nazwami kontroli
::   WY:    - tablica z zainicjalizowanymi tabelami wyjątków
::----------------------------------------------------------------------------------------------------------------------
_controls_names:=_a;
_controls_names.cntx_psh();
_controls_names.first();
_exceptions_tab:=obj_new(_controls_names.size());
{! |?
   _file_name:='exc_'+_controls_names.FORMULA+'.csv';
::   pth
::   {? _controls_names.NR=1
::   ||
::      _exceptions_tab[_controls_names.NR]:=tab_tmp(,
::      'NUM','INTEGER','Lp.',
::      'VAR','STRING[7]','Tabela/Zmienna',
::      'NAZWA','STRING[8]','Nazwa',
::      'AKRONIM','STRING[8]','Akronim',
::      'TYP','STRING[3]','Typ okienka',
::      'OKNO_A','STRING[8]','Akronim okienka',
::      'NR','STRING[3]','Numer przycisku',
::      'KIND','STRING[60]','Rodzaj',
::      'REF','INTEGER','Ref',
::      'REF2','INTEGER','Ref2')
::   |? _controls_names.NR=2
   {? _controls_names.NR=1
   ||
      _exceptions_tab[_controls_names.NR]:=tab_tmp(,
      'NUM','INTEGER','Lp.',
      'VAR','STRING[7]','Tabela/Zmienna',
      'NAZWA','STRING[8]','Nazwa',
      'AKRONIM','STRING[8]','Akronim',
      'OKNO_A','STRING[8]','Akronim okienka',
      'KIND','STRING[60]','Rodzaj',
      'REF','INTEGER','Ref',
      'REF2','INTEGER','Ref2',
      'OPIS','STRING[255]','Powód')
   |? _controls_names.NR=2
   ||
      _exceptions_tab[_controls_names.NR]:=tab_tmp(,
      'NUM','INTEGER','Lp.',
      'VAR','STRING[7]','Tabela/Zmienna',
      'NAZWA','STRING[8]','Nazwa',
      'AKRONIM','STRING[8]','Akronim',
      'TYP','STRING[3]','Typ okienka',
      'OKNO_A','STRING[8]','Akronimokienka',
      'NR','STRING[3]','Numer przycisku',
      'KIND','STRING[60]','Rodzaj',
      'REF','INTEGER','Ref',
      'REF2','INTEGER','Ref2')
   |? _controls_names.NR=3
   ||
      _exceptions_tab[_controls_names.NR]:=tab_tmp(6,
      'NUM','INTEGER','Lp.',
      'VAR','STRING[7]','Tabela/Zmienna',
      'LOC','STRING[8]','Localna/Globalna',
      'AKRONIM','STRING[8]','Akronim',
      'TYP','STRING[1]','Redagowania/Wertowania','WIN',
      'STRING[8]','Akronim okienka',
      'REF','INTEGER','Ref',
      'NLOOK','INTEGER','Flat design',
      'S1','INTEGER',)
   |? _controls_names.NR=4
   ||
      _exceptions_tab[_controls_names.NR]:=tab_tmp(6,
      'NUM','INTEGER','Lp.',
      'VAR','STRING[7]','Tabela/Zmienna',
      'LOC','STRING[8]','Localna/Globalna',
      'AKRONIM','STRING[8]','Akronim',
      'TYP','STRING[1]','Redagowania/Wertowania',
      'WIN','STRING[8]','Akronim okienka',
      'REF','INTEGER','Ref',
      'NLOOK','INTEGER','Flat design',
      'TCALL','STRING[1]','Wywołanie',
      'W','INTEGER','W',
      'H','INTEGER','H',
      'GR','STRING[1]','GR',
      'S1','INTEGER',)
   |? _controls_names.NR=5
   ||
      _exceptions_tab[_controls_names.NR]:=tab_tmp(2,
      'NUM','INTEGER','Lp.',
      'RES','INTEGER',)
   ?};
   _controls_names.next()
!};
_controls_names.cntx_pop();
_exceptions_tab


\execute_controls
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: funkcja wykonująca kontrole
::   WE: _a - tablica z nazwami kontroli
::       _b - tablica z tabelemi do wyników kontroli
::       _c - plik log
::       _d - login
::       _e - hasło
::       _f - czy zgłaszac do lacidy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_controls_names:=_a;
_RES_TAB:=_b;
_log_file:=_c;
_login:=_d;
_pass:=_e;
_report_to_lacida:=_f;

VAR_DEL.delete('__ODBC');
:: polaczenie ODBC do buildera
{? _report_to_lacida=0
||
   __ODBC:=odbc_conn('mbuilder')
::__ODBC:=odbc_conn('mbuilder_local')
|| __ODBC:=odbc_conn('DRIVER=MacroBASE_r_20;UID='+_login+';PWD='+_pass+
                  ';AS=1;PTH=;ASNAME=mbrrxx;ASGROUP=rrxx;ASADDRESS=wawskaz120.abs.assecobs.pl;'
                  +'ASPORT=5580;ASCERTUSE=0;ASCERTPTH=;TPWD=0',,,'UTF16')
?};
{? var_pres('__ODBC')<0 | var_pres('__ODBC')=type_of(~~) || return() ?};
{? _controls_names.first()
||
   {! |?
      {? (_report_to_lacida=0 & _controls_names.NR<>6)
         | (_report_to_lacida=1 & _controls_names.EXEC_DAY=0)
         | (_report_to_lacida=1 & _controls_names.EXEC_DAY=date()~4)
      ||
         fwrite(_log_file,'INFO: Rozpoczęcie kontroli z pliku test_mbuilder: '+$_controls_names.NR+'; '
         +_controls_names.NAME+'; '+_controls_names.DESCRIPT+'; '+_controls_names.FORMULA);
         {? _controls_names.NR=6
         ||
            _exc:=exec('exc_tabs','!zws_par_rlog');
            {? _exc<>''
            ||
               __ODBC.prm_set(1,_exc);
               _RES_TAB[_controls_names.NR]:=__ODBC.exec_tab('{call '+_controls_names.FORMULA+'@mbuilder(?)}')
            ?}
         ||
            _RES_TAB[_controls_names.NR]:=__ODBC.exec_tab('{call '+_controls_names.FORMULA+'@mbuilder()}')
         ?}
::      exec('select','#table',_RES_TAB[_controls_names.NR])
      ||
         _RES_TAB[_controls_names.NR]:=0
      ?};
      _controls_names.next()
   !}
?}


\split_exceptions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: podział pliku $mbuilder_exceptions.csv
::   WE: _a - tablica z nazwami kontroli
::       _b - uchwyt pliku z logami
::       _c - nazwa
::   WY:
:: ~OST: INFOPEN,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_controls_names:=_a;
_log_file:=_b;
_exc_csv:='$mbuilder_exceptions.csv';
_file_exc:=fopen(_exc_csv,'ur',1);
_line_number:=0;
{? _file_exc
   ||
      {! |?
::         odczytanie linii z nazwą kontroli
         _linia:=fread(_file_exc); _line_number+=1;
         {? _linia<>'\n' ||
            _linia_split:=spli_str(_linia,';');
            _controls_names.first();
            {? _controls_names.find_tab(,'NAME',,'=',_linia_split[1])
            ||
               fwrite(_log_file,'INFO: Import wyjątków kontroli: '+$_controls_names.NR+';'+_controls_names.NAME+'; '
                                       +_controls_names.DESCRIPT+'; '+_controls_names.FORMULA);

               _file_name:='exc_'+_controls_names.FORMULA+'.csv';
               _file_exc_part:=fopen('@'+tmp_dir()+exec('sep','#file')+_file_name,'uw');
::      odczytanie linii z nagłówkami tabeli
               _linia:=fread(_file_exc); _line_number+=1;
               fwrite(_file_exc_part,_linia);
::      odczytanie wierszy wyjątków
               {! |?
                  _linia:=fread(_file_exc); _line_number+=1;
                  obj_del(_linia_split);
                  _linia_split:=spli_str(_linia,';');
                  {? gsub(_linia,';','')<>12*'#@#@#@' || fwrite(_file_exc_part,_linia) ?};
                  _linia_split[1]<>'#@#@#@' & _linia<>((12*'#@#@#@;')-1)
               !};
               obj_del(_linia_split);
               fclose(_file_exc_part)
            ||
               fwrite(_log_file,'ERROR: Błędna struktura pliku '+_exc_csv +' linia nr: ' + $_line_number)
            ?}
         ?};
         _linia<>'\n'
      !}
   ||
   fwrite(_log_file,'ERROR: Błąd przy odczycie pliku '+_exc_csv);
   return(0)
?};
fclose(_file_exc);
1


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: eksport błędów do csv
::   WE: _a - tablica z tabelami do eksportu
::   WY:
:: ~OST: INEXPORT,INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_RES_TAB:=_a;
{? type_of(_RES_TAB[1])=118
||
   _RES_TAB[1].export('@'+tmp_dir()+exec('sep','#file')+'a5.csv',,,'UTF-8,header,nopth',,
   'NUM',,1,,
   'VAR',,2,,
   'NAZWA',,3,,
   'AKRONIM',,4,,
   'OKNO_A',,5,,
   'KIND',,6,,
   'REF',,7,,
   'REF2',,8,,
   'OPIS',,9, )
?};
{? type_of(_RES_TAB[2])=118
||
   _RES_TAB[2].export('@'+tmp_dir()+exec('sep','#file')+'a9.csv',,,'UTF-8,header,nopth',,
   'NUM'    ,,1,,
   'VAR'    ,,2,,
   'NAZWA'  ,,3,,
   'AKRONIM',,4,,
   'TYP'    ,,5,,
   'OKNO_A' ,,6,,
   'NR'     ,,7,,
   'KIND'   ,,8,,
   'REF'    ,,9,,
   'REF2'   ,,10, )
?};
{? type_of(_RES_TAB[3])=118
||
   _RES_TAB[3].export('@'+tmp_dir()+exec('sep','#file')+'scaled.csv',,,'UTF-8,header,nopth',,
   'NUM'    ,,1,,
   'VAR'    ,,2,,
   'LOC'    ,,3,,
   'AKRONIM',,4,,
   'TYP'    ,,5,,
   'WIN'    ,,6,,
   'REF'    ,,7,,
   'NLOOK'  ,,8,,
   'S1'     ,,9, )
?};
{? type_of(_RES_TAB[4])=118
||
   _RES_TAB[4].export('@'+tmp_dir()+exec('sep','#file')+'fullhd.csv',,,'UTF-8,header,nopth',,
   'NUM'    ,,1,,
   'VAR'    ,,2,,
   'LOC'    ,,3,,
   'AKRONIM',,4,,
   'TYP'    ,,5,,
   'WIN'    ,,6,,
   'REF'    ,,7,,
   'NLOOK'  ,,8,,
   'TCALL'  ,,9,,
   'W'      ,,10,,
   'H'      ,,11,,
   'GR'     ,,12,,
   'S1'     ,,13, )
?};
~~


\import_exc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: funkcja importująca tabele z wyjątkami
::   WE: _a - tablica z tabelami z wyjątkami
::       _b - tablica z nazwami kontroli
::       _c - 0/1 czy usuwać pliki po imporcie
::   WY:
:: ~OST: INTMPDIR
::----------------------------------------------------------------------------------------------------------------------
_EXC_TAB:=_a;
_controls_names:=_b;
_del:=_c;
_controls_names.cntx_psh();
_controls_names.first();
{! |?

   _file_name:='exc_'+_controls_names.FORMULA+'.csv';
   _file_path:='@'+tmp_dir()+exec('sep','#file')+_file_name;
   _file:=fopen(_file_path,'ur');

   _fields:='';
   {! _i:=1..obj_len(_EXC_TAB[_controls_names.NR])
   |!
      _fields+='\''+_EXC_TAB[_controls_names.NR].fld_acr(_i)+'\',,'+$_i+',,'
   !};
   params_set('EXC_TAB',_EXC_TAB);
   _formula:=$('_par:=params_get(0); _par.EXC_TAB['+$_controls_names.NR+'].import(\''+gsub(_file_path,'\\','\\\\')+'\',,,,\'UTF-8*,nopth,header\',,'+
   _fields-1 + ')'
   );
   _formula();

::   exec('select','#table',_EXC_TAB[_controls_names.NR]);
   fclose(_file);
   {? _del || ferase(_file_path) ?};
   _controls_names.next()
!};
_controls_names.cntx_pop();
1


\report_to_lacida
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: funkcja importująca tabele z wyjątkami
::   WE: _a - tablica z nazwami kontroli
::       _b - tablica z tabelemi wyników kontroli
::       _c - plik log
::       _d - użytkownik Lacidy
::       _e - hasło użytkownika Lacidy
::       _f - tablica ze zmianami w builderze
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_controls_names:=_a;
_RES_TAB:=_b;
_log_file:=_c;
_args:=exec('zglos_defekt_args','$lib_base');
_user_trans:=exec('user_trans','$lib_base');
_args.LOGIN:=_d;
_args.PASS:=_e;
_logi:=_f;
_controls_names.first();
{! |?
:: Ikony dla OK, Zakoncz przestaly miec znaczenie
::   {? _controls_names.NR=1 & type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
::   ||
::      {! |?
::         _args.RODZAJ:='Błąd Działania';
::         _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,_RES_TAB[_controls_names.NR].AKRONIM,
::                     _RES_TAB[_controls_names.NR].OKNO_A);
::         {? _args.WYKON='' || _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,
::                                 _RES_TAB[_controls_names.NR].AKRONIM,'') ?};
::         {? _args.WYKON='' || _args.WYKON:='grzabkie' ?};
::         {? _user_trans.find_tab('first','BUILDER',,'=',_args.WYKON) || _args.WYKON:=_user_trans.LACIDA ?};
::         _args.WERYFIK:='grzabkie';
::         _args.NAZ:='ERROR: '+_controls_names.DESCRIPT;
::         _args.MEMO:=
::            '[ŚCIEŻKA]\n\n'
::            +'[PARAMETRY]\n\n[KROKI]\n\n[REZULTAT AKTUALNY]\n'
::            +'Podczas testów automatycznych wykryta została błędna ikona : \n'
::            +_RES_TAB[_controls_names.NR].VAR+':\n'
::            +'Nazwa: '+ _RES_TAB[_controls_names.NR].NAZWA+'\n'
::            +'Akronim: '+ _RES_TAB[_controls_names.NR].AKRONIM+'\n'
::            +'Typ okienka [E/W]: '+ _RES_TAB[_controls_names.NR].TYP+'\n'
::            +'Akronim okienka: '+ _RES_TAB[_controls_names.NR].OKNO_A+'\n'
::            +'Numer przycisku: '+ _RES_TAB[_controls_names.NR].NR+'\n\n'
::            +'[REZULTAT OCZEKIWANY]\nPoprawa błędnej ikony przed kolejną sesją testów'
::            +' lub gdy błąd jest niezasany dodanie do wyjątków w pliku \\merit\\fml\\auto\\csv\\$mbuilder_exceptions.csv.'
::            +' (aby to wykonać należy uruchomić formułę : exec(\'main\',\'$test_mbuilder\') )'
::            ;
::         exec('zglos_defekt_bez_dubli','$lib_base',_args);
::         fwrite(_log_file,'INFO: ZGŁOSZENIE BŁĘDU '+_controls_names.DESCRIPT+': WYKONUJĄCY: '+_args.WYKON+' OPIS: '+ gsub(_args.MEMO,'\n','\t'));
::         exec('select','#table',_args);
::         _RES_TAB[_controls_names.NR].next()
::      !}
::   |? _controls_names.NR=2 & type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
::   ||
   {? _controls_names.NR=1 & type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
   ||
      {! |?
         _args.RODZAJ:='Błąd Działania';
         _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,_RES_TAB[_controls_names.NR].AKRONIM,
                           _RES_TAB[_controls_names.NR].OKNO_A);
         {? _args.WYKON='' || _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,
                                 _RES_TAB[_controls_names.NR].AKRONIM,'') ?};
         {? _args.WYKON='' || _args.WYKON:='grzabkie' ?};
         {? _user_trans.find_tab('first','BUILDER',,'=',_args.WYKON) || _args.WYKON:=_user_trans.LACIDA ?};
         _args.WERYFIK:='grzabkie';
         _args.NAZ:='ERROR: '+_controls_names.DESCRIPT;
         _args.MEMO:=
            '[ŚCIEŻKA]\n\n'
            +'[PARAMETRY]\n\n[KROKI]\n\n[REZULTAT AKTUALNY]\n'
            +'Podczas testów automatycznych wykryto, że nazwa przycisku nie zawiera się w nazwie akcji '
            +'ani nazwa akcji nie zawiera się w nazwie przycisku.: \n'
            +'Typ [Tabela/Zmienna]: '+_RES_TAB[_controls_names.NR].VAR+'\n'
            +'Nazwa: '+ _RES_TAB[_controls_names.NR].NAZWA+'\n'
            +'Akronim: '+ _RES_TAB[_controls_names.NR].AKRONIM+'\n'
            +'Akronim okienka: '+ _RES_TAB[_controls_names.NR].OKNO_A+'\n'
            +'[nazwa akcji, nazwa przycisku]: '+ _RES_TAB[_controls_names.NR].OPIS+'\n\n'
            +'[REZULTAT OCZEKIWANY]\nPoprawa błędnej nazwy akcji/przycisku przed kolejną sesją testów'
            ;
         exec('zglos_defekt_bez_dubli','$lib_base',_args);
         fwrite(_log_file,'INFO: ZGŁOSZENIE BŁĘDU '+_controls_names.DESCRIPT+': WYKONUJĄCY: '+_args.WYKON+' OPIS: '+ gsub(_args.MEMO,'\n','\t'));
::         exec('select','#table',_args);
         _RES_TAB[_controls_names.NR].next()
      !}
   |? _controls_names.NR=2 & type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
   ||
      {! |?
         _args.RODZAJ:='Błąd Działania';
         _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,_RES_TAB[_controls_names.NR].AKRONIM,
                           _RES_TAB[_controls_names.NR].OKNO_A);
         {? _args.WYKON='' || _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,
                                 _RES_TAB[_controls_names.NR].AKRONIM,'') ?};
         {? _args.WYKON='' || _args.WYKON:='grzabkie' ?};
         {? _user_trans.find_tab('first','BUILDER',,'=',_args.WYKON) || _args.WYKON:=_user_trans.LACIDA ?};
         _args.WERYFIK:='grzabkie';
         _args.NAZ:='ERROR: '+_controls_names.DESCRIPT;
         _args.MEMO:=
            '[ŚCIEŻKA]\n\n'
            +'[PARAMETRY]\n\n[KROKI]\n\n[REZULTAT AKTUALNY]\n'
            +'Podczas testów automatycznych wykryta została błędna ikona z xmenu16.png :\n'
            +_RES_TAB[_controls_names.NR].VAR+':\n'
            +'Nazwa: '+ _RES_TAB[_controls_names.NR].NAZWA+'\n'
            +'Akronim: '+ _RES_TAB[_controls_names.NR].AKRONIM+'\n'
            +'Typ okienka: '+ _RES_TAB[_controls_names.NR].TYP+'\n'
            +'Akronim okienka: '+ _RES_TAB[_controls_names.NR].OKNO_A+'\n'
            +'Numer przycisku: '+ _RES_TAB[_controls_names.NR].NR+'\n\n'
            +'[REZULTAT OCZEKIWANY]\nPoprawa błędnej ikony przed kolejną sesją testów'
            ;
         exec('zglos_defekt_bez_dubli','$lib_base',_args);
         fwrite(_log_file,'INFO: ZGŁOSZENIE BŁĘDU '+_controls_names.DESCRIPT+': WYKONUJĄCY: '+_args.WYKON+' OPIS: '+ gsub(_args.MEMO,'\n','\t'));
::         exec('select','#table',_args);
         _RES_TAB[_controls_names.NR].next()
      !}
   |? _controls_names.NR=3 & type_of(_RES_TAB[_controls_names.NR])=118 & type_of(_RES_TAB[_controls_names.NR])<>type_of(~~) & _RES_TAB[_controls_names.NR].first()
   ||
      {! |?
         _args.RODZAJ:='Błąd Działania';
         _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,_RES_TAB[_controls_names.NR].AKRONIM,_RES_TAB[_controls_names.NR].WIN);
         {? _args.WYKON='' || _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,
                                 _RES_TAB[_controls_names.NR].AKRONIM,'') ?};
         {? _args.WYKON='' || _args.WYKON:='grzabkie' ?};
         {? _user_trans.find_tab('first','BUILDER',,'=',_args.WYKON) || _args.WYKON:=_user_trans.LACIDA ?};
         _args.WERYFIK:='grzabkie';
         _args.NAZ:='ERROR: '+_controls_names.DESCRIPT;
         _args.MEMO:=
            '[ŚCIEŻKA]\n\n'
            +'[PARAMETRY]\n\n[KROKI]\n\n[REZULTAT AKTUALNY]\n'
            +'Podczas testów automatycznych wykryte zostało okno skalowane:\n'
            +_RES_TAB[_controls_names.NR].VAR+':\n'
            +'Nazwa: '+ _RES_TAB[_controls_names.NR].NAZWA+'\n'
            +'Akronim: '+ _RES_TAB[_controls_names.NR].AKRONIM+'\n'
            +'Typ okienka: '+ _RES_TAB[_controls_names.NR].TYP+'\n'
            +'Akronim okienka: '+ _RES_TAB[_controls_names.NR].WIN+'\n\n'
            +'[REZULTAT OCZEKIWANY]\nPoprawa błędnego okna przed kolejną sesją testów'
            ;
         exec('zglos_defekt_bez_dubli','$lib_base',_args);
         fwrite(_log_file,'INFO: ZGŁOSZENIE BŁĘDU '+_controls_names.DESCRIPT+': WYKONUJĄCY: '+_args.WYKON+' OPIS: '+ gsub(_args.MEMO,'\n','\t'));
::         exec('select','#table',_args);
         _RES_TAB[_controls_names.NR].next()
      !}
   |? _controls_names.NR=4 & type_of(_RES_TAB[_controls_names.NR])=118 & _RES_TAB[_controls_names.NR].first()
   ||
      {! |?
::      Okna poza FullHD
         _args.RODZAJ:='Błąd Działania';
         _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,_RES_TAB[_controls_names.NR].AKRONIM,
                           _RES_TAB[_controls_names.NR].WIN);
         {? _args.WYKON='' || _args.WYKON:=exec('last_modify','$test_mbuilder',_logi,
                                 _RES_TAB[_controls_names.NR].AKRONIM,'') ?};
         {? _args.WYKON='' || _args.WYKON:='grzabkie' ?};
         {? _user_trans.find_tab('first','BUILDER',,'=',_args.WYKON) || _args.WYKON:=_user_trans.LACIDA ?};
         _args.WERYFIK:='grzabkie';
         _args.NAZ:='ERROR: '+_controls_names.DESCRIPT;
         _args.MEMO:=
            '[ŚCIEŻKA]\n\n'
            +'[PARAMETRY]\n\n[KROKI]\n\n[REZULTAT AKTUALNY]\n'
            +'Podczas testów automatycznych wykryte zostało okno przekraczające rozmiar FullHD:\n'
            + {? _RES_TAB[_controls_names.NR].VAR='T' || 'Tabela' || 'Zmienna' ?} +':\n'
            +'Akronim: '+ _RES_TAB[_controls_names.NR].AKRONIM+'\n'
            +'Typ okienka: '+ _RES_TAB[_controls_names.NR].TYP+'\n'
            +'Akronim okienka: '+ _RES_TAB[_controls_names.NR].WIN+'\n\n'
            +'[REZULTAT OCZEKIWANY]\nPoprawa błędnego okna przed kolejną sesją testów'
            ;
         exec('zglos_defekt_bez_dubli','$lib_base',_args);
         fwrite(_log_file,'INFO: ZGŁOSZENIE BŁĘDU '+_controls_names.DESCRIPT+': WYKONUJĄCY: '+_args.WYKON+' OPIS: '+ gsub(_args.MEMO,'\n','\t'));
::         exec('select','#table',_args);
         _RES_TAB[_controls_names.NR].next()
      !}
   ?};
   _controls_names.next()
!};
~~


\correct
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: Poprawia kontrolę a1 z pliku amk. Usuwa wrażliwośc kontroli na wyróżniki oraz wielkość liter
::   WE: _a - tabela z kontroli a1 z pliku amk
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
{? _tab.first()
|| {! |?
      _split:=spli_str(_tab.OPIS,', ');
      {? form(gsub(-_split[1],'&',''))=form(gsub(-_split[2],'&',''))
      || _dalej:=_tab.del(,0)
      || _dalej:=_tab.next()
      ?};
      &_split;
      _dalej
   !}
?}


\logger
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: Pobiera tabelę z logami modyfikacji z MacroBuildera wersji rozwojowej poprzez odbc
::   WE: _a [STRING] - login mbuilder
::       _b [STRING] - hasło mbuilder
::   WY: tabela z logami
::----------------------------------------------------------------------------------------------------------------------
_login:=_a;
_pass:=_b;
VAR_DEL.delete('__ODBC');
:: polaczenie ODBC do buildera
::__ODBC:=odbc_conn('mbuilder');
::__ODBC:=odbc_conn('mbuilder_local');
__ODBC:=odbc_conn('DRIVER=MacroBASE_r_20;UID='+_login+';PWD='+_pass+
                  ';AS=1;PTH=;ASNAME=mbrrxx;ASGROUP=rrxx;ASADDRESS=wawskaz120.abs.assecobs.pl;'
                  +'ASPORT=5580;ASCERTUSE=0;ASCERTPTH=;TPWD=0',,,'UTF16');
{? var_pres('__ODBC')<0 | var_pres('__ODBC')=type_of(~~) || return() ?};
_query:='select * from "LOG" where DATA>to_date(\''+$(date()-30)+'\')';
_tab:=__ODBC.exec_tab(_query,0);
_tab.ndx_tmp(,1,'DATA',,0);
::exec('select','#table',_tab);
_tab


\last_modify
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: Wyszukuje ostatniego modyfikującego z tabeli z logami przekazanej przez parametr
::   WE: _a - tabela z logami
::       _b [STRING] - akronim
::       _c [STRING] - fraza wyszukiwana dodatkowo w polu DESCR w celu
::   WY: [STRING] kod użytkownika
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_acr:=_b;
_phrase:=_c;
_kod:='';
{? _a.find_tab('first','KEY',,':*',_acr+',','DESCR',,'like','%'+_phrase+',%') || _kod:=_a.USER ?};
_kod


\days_after_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [20.42]
:: OPIS: Oblicza liczbę dni od modyfikacji
::   WE: _a - tabela z logami
::       _b [STRING] - akronim
::       _c [STRING] - użytkownik
::   WY: [INTEGER] liczba dni od modyfikacji do dzisiaj / -1 gdy nie znaleziono
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_acr:=_b;
_user:=_c;
_days:=-1;
{? _a.find_tab('first','KEY',,':*',_acr,'USER',,'like','%'+_user+'%') || _days:=date()-_a.DATA ?};
_days


\show_res
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [21.14]
:: OPIS:
::   WE: _a - _controls_names
::       _b - _RES_TAB
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_controls_names:=_a;
_RES_TAB_OLD:=_b;
_RES_TAB_NEW:=exec('exceptions_tab_init','$test_mbuilder',_controls_names);

{! _ii:=1..obj_len(_RES_TAB_OLD)
|!
   {? type_of(_RES_TAB_OLD[_ii])=118 & _RES_TAB_OLD[_ii].first()
   ||
      {! |?
         {! _jj:=1.._RES_TAB_NEW[_ii].fld_num()
         |!
            _RES_TAB_NEW[_ii][_jj]:=_RES_TAB_OLD[_ii][_jj]
         !};
         _RES_TAB_NEW[_ii].add();
         _RES_TAB_OLD[_ii].next()
      !}
   ?}
!};
_controls_names.first();
{! |?
   _controls_names.NR_RES:=_RES_TAB_NEW[_controls_names.NR].size();
   _controls_names.put();
   _controls_names.next()
!};
_win:=_controls_names.mk_sel('Zestaw testów automatycznych'@,'T',0,'wer',,,,,'U','T',,0,,'maximized');
_controls_names.win_fld(_win,_controls_names,'NR',,,);
_controls_names.win_fld(_win,_controls_names,'NAME',,,);
_controls_names.win_fld(_win,_controls_names,'DESCRIPT',,,);
_controls_names.win_fld(_win,_controls_names,'NR_RES',,,);
_controls_names.win_sel(_win);
params_set('controls_names',_controls_names,'RES_TAB',_RES_TAB_NEW);
_controls_names.win_act(_win,,'Formuła','Pokaż błędy'@,,,
         "_par:=params_get(); exec('select','$test_%release',_par.RES_TAB[_par.controls_names.NR],,,_par.controls_names.DESCRIPT,,0,'')",,1);
_controls_names.select()

:Sign Version 2.0 jowisz:1048 2023/06/23 14:12:56 47944066f4f393d7e64380d6d445a28a007944e1655705e2fdcd8dc065ea1988b45f0466b9dcbfdeb5f242f6de92474fdace6a6c618dd081f73151c3f909f4aa7242d07fa0299faa160a5483fa0978b2d0f93fc6eea00385ba61f37cfd3a130882d4b0bf74fd6e19d0876a9c97e73b8780a89615a27de198e34abee46391cbda
