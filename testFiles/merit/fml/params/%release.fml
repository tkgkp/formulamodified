:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: %release.fml
:: Utworzony: 06.06.2017
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Formuły weryfikujące wybrane elementy systemu. Do wykorzystania przed emisją.
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Główna procedura wyboru zakresu testów.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('interm','#system')>0
|| FUN.emsg(exec('interm_nacc_msg','#system'));
   return('')
?};

on_error(0);
popup(1,'Dostępne procedury'@,
   'Składnia'@,'Kontrola poprawności składni'@,"exec('form_chk','%release')",
   'Deklaracja ścieżek'@,'Kontrola deklaracji ścieżek (pliki *.pth i *.pti)',"exec('pth','%release')",
   'macro.use','Kontrola poprawnosci pliku macro.use'@,"exec('macro','%release')",
   'Odwołania tabel wspólnych'@,'Kontrola odwołań tabel wspólnych do tabel firmowych'@,"exec('wf','%release')",
   'Zadania potransferowe'@,'Kontrola zadań potransferowych w pliku roboczym'@,"exec('upgrade','%release')",
   'Pliki warstwy .m'@,'Lista plików warstwy .m'@,"exec('mfiles','%release')",
   'IDADD','Kontrola pól typu IDADD'@,"exec('idadd','%release')",
   'Końce linii'@,'Kontrola końców linii'@,"exec('eol','%release')",
   'Formuły powtórzone lub z nieprawidłowymi nazwami'@,
   'Formuły powtórzone lub z nieprawidłowymi nazwami w plikach FML'@,
   "exec('dubelki_fml','%release')",
   '-',,,
   'Dziedziny do aktualizacji'@,'Dziedziny wymagające aktualizacji'@,"exec('dom2update','%release')",
   'Procesy do aktualizacji'@,'Procesy wymagające aktualizacji'@,"exec('proc2update','%release')",
   '-',,,
   'DEF: Formuły'@,'Kontrola wywołań formuł z definicji'@,"exec('def_f','%release')",
   'DEF: "Rekord - przed" _a'@,'"Rekord - przed" - kontrola parametru'@,"exec('def__a_ae','%release')",
   'DEF: "Wyzwalacz - po" _a'@,'"Wyzwalacz - po" - kontrola parametru'@,"exec('def__a_triga','%release')",
   'DEF: Komentarze pól tabel/zmiennych'@,'Kontrola komentarzy pól tabel/zmiennych'@,"exec('def_xp_comm','%release')",
   'DEF: Flat design'@,'Kontrola flat design w oknach'@,"exec('def_flat','%release')",
   'DEF: Nazwy akcji okien wertowania'@,'Kontrola nazw akcji okien wertowania'@,"exec('def_twa','%release')",
   'DEF: Akcja "Zmiany"'@,'Kontrola występowania akcji "Zmiany"'@,"exec('def_tw_zmiany','%release')",
   '-',,,
   'tran_dir.tra *','Przygotowanie pliku z katalogami (do transferu z Xpertis''a)'@,"exec('tran_dir','%release')",
   'Raporty - tłumaczenia'@+' *','Przygotowanie pliku z tytułami raportów dla systemu tłumaczeń'@,
      "exec('rep_titles','%release')"
)


\_crc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.02]
:: OPIS: Formuła zwraca wartość skrótu dla wskazanego pliku.
::   WE:  _a  [STRING] - Nazwa pliku.
::       [_b] [STRING] - Rodzaj skrótu (patrz argument 'kind' funkcji hash)) [domyślnie: 'sha512']
::   WY: Skrót pliku.
::----------------------------------------------------------------------------------------------------------------------
_fn:=_a;
_kind:={? var_pres('_b')=type_of('') || _b || 'sha512' ?};

_crc:='';

{? fexists(_fn,1)
|| _fh:=fopen(_fn,'br',1,1,1);
   {? _fh.is_open()
   || _crc:=hash(_fh,_kind);
      _fh.fclose()
   ?}
?};

_crc


\form_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Kontrola poprawności składni.
::   WE: [_a] [NUMBER] - czy pomijać wyświetlanie okienek, domyślnie=0
::   WY: tabela _TAB
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;

rep_tran();
_TAB:=form_chk();
{? type_of(_TAB)=type_of(~~)
|| return()
?};

_ws:=_TAB.mk_sel('Błędy składni'@,,,'#relfchk',,,,,'U');
_TAB.win_fld(_ws,,'FILE_N',,,15);
_TAB.win_fld(_ws,,'FORM_N',,,15);
_TAB.win_fld(_ws,,'CLASS_N',,,15);
_TAB.win_fld(_ws,,'METH_N',,,15);
_TAB.win_fld(_ws,,'ERR_LINE',,,7);
_TAB.win_fld(_ws,,'ERR_COL',,,3);
_TAB.win_fld(_ws,,'ERR_DESC',,,64);
_TAB.win_act(_ws,,'Formuła','Pokaż &autora'@@,,,
   "  _TAB:=cur_tab(1,1);
      {? _TAB.FILE_N<>''
      || _dir:=pth_dir(_TAB.FILE_N);
         _path:=_dir+exec('sep','#file')+_TAB.FILE_N;
         exec('svn_blame','%release',_path,_TAB.ERR_LINE)
      ?}
   ",,,,,,
   'A'
);
_TAB.win_btn(_ws,'text=%1' ['Pokaż &autora'@],'menu:A');
_TAB.win_act(_ws,,'Szukaj');
_TAB.win_act(_ws,,'Kolejność');
_TAB.win_act(_ws,,'Rekord',,,,
   "  {? _a
      || _TAB:=cur_tab(1,1);
         _ga:={? _TAB.FILE_N='' || 'A' || '' ?};
         _TAB.actions_grayed(cur_win(1,1),_ga)
      ?}
   "
);
_TAB.win_sel(_ws);
_TAB.win_edit(_TAB.mk_edit('Błąd składni'@,1,'#relfchk'));
{? ~_batch || _TAB.select() ?};
_TAB


\pth
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Test deklaracji ścieżek uruchomionego systemu.
::   WE: [_a] [NUMBER] - Przetwarzanie wsadowe (bez wyświetlanie okienek) [0*/1]
::   WY: Tabela tymczasowa z wynikami analizy.
:: ~OST: INEXEDIR
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;

:: Tabela wyników.
_RES:=tab_tmp(3,
   'DIR','STRING[64]','Katalog'@,
   'PTH','STRING[64]','Plik'@,
   'NRL','INTEGER','Nr linii'@,
   'LINES','STRING[255]','Linia'@,
   'LINEM','SYS_MEMO','Linia'@,
   'TYPE','STRING[1]','Typ'@,
   'EL','STRING[64]','Element'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
);

:: Nazwa użytkownika (do analizy katalogów, których nazwa poprzedzona jest znakiem >).
_user:=username();
_user:={? _poz:=_user*'~' || (_poz-1)+_user || 10+_user ?};

:: Przygotowanie tabeli tymczasowej z nazwami tabel stałych.
_TAB:=tab_tmp(1,'NAME','STRING[8]','Nazwa');
{! _lp:=1 .. tab_num()
|! {? tab_real(_lp)
   || _TAB.blank();
      _TAB.NAME:=tab_alias(_lp).name(1);
      _TAB.add()
   ?}
!};

:: Tablica z zamiennikami znaków dla zapytań SQL (emulacja wyrażeń regularnych).
_patt:=obj_new(3);
_patt[1]:='_';
_patt[2]:='?';
_patt[3]:='*';
_rept:=obj_new(3);
_rept[1]:='\\_';
_rept[2]:='_';
_rept[3]:='%';

:: Tablica z zamiennikami znaków w nazwach plików. Wymienione metaznaki są zamieniane na konkretny znak - 'ą'.
:: Wybór znaku nie jest przypadkowy:
::    - Na pewno nie występuje w nazwach plików, a więc nie ma obawy, że zdublujemy inną ścieżkę.
::       Przykład
::          DIR1 a*.xml
::          DIR2 *.xml
::       Przyjęcie znaku 'a' doprowadziłoby do błędnego zanegowania drugiej linii.
::    - Nie stwarza problemów dla funkcji pth_dir().
_patf:=obj_new(2);
_patf[1]:='?';
_patf[2]:='*';
_repf:='ą';

:: Katalog lokalny: jako napis i jako tablica.
_dirl:=gsub(exe_dir(),%92,'/');
_dirla:=spli_str(_dirl,'/');

_linux:=sys_name(1)='U_LINUX';

_obj:=exec('read_pth','%release');

_dir:=gsub(_obj.base,%92,'/');
_dira:=spli_str(_dir,'/');

_again:=_obj.PTH.first();
{!
|? _again
|! _linia:=_obj.PTH.memo_txt(,1,'LINIA');
   {? 1+_linia=':'
::    Tabele.  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   || STR.split(_linia);
::    Deklarowany katalog elementu (najprawdopodobniej ścieżka względna).
      _dirdw:=STR.get_word();
::    Katalog elementu (ścieżka bezwzględna).
      _dirdb:=exec('r2a','%release',_dirdw,_dir,_dira,_dirl,_dirla,_user,_linux);
      {? fexists(_dirdb)<>2
      || ~~
      || {!
         |? STR.next()
         |! _el:=STR.get_word();
            {? _el+4='.mdb'
            || _el:=_el-4
            ?};
            {? _el<>'*'
            || _jest:=0;
               _els:='';
               {? _el*'?'>0 | _el*'*'>0
::                W deklaracji są metaznaki - szukamy wszystkich 'pasujących' tabel.
               || _TAB.f_set('NAME',,'NAME like \':_a\' escape \'\\\'',gsub(_el,_patt,_rept));
                  {? _TAB.f_first()
                  || _jest:=1;
                     {!
                     |? _elr:=gsub(_TAB.NAME,_patf,_repf);
::                      Rzeczywisty katalog elementu.
                        _dirr:=gsub(pth_dir(':'+_elr+'.mdb'),%92,'/');
                        {? ~_linux
::                         Jeżeli to nie jest Linux, to zamieniamy wszystkie litery na małe,
::                         żeby porównywać małe z małymi.
                        || _dirr:=-_dirr
                        ?};
                        {? _dirr<>_dirdb
                        || _jest:=0
                        ?};
                        _els+='Tabela %1 będzie szukana w katalogu %2 (%3)'@ [_TAB.NAME,_dirr,$(_dirr=_dirdb)]+'\n';
                        _TAB.f_next()
                     !}
                  || _els+='W definicji brak tabeli o podanej nazwie.'@
                  ?};
                  _TAB.f_clear()

::                Brak metaznaków.
               |? _TAB.find_key(_el,)
               || _dirr:=gsub(pth_dir(':'+_el+'.mdb'),%92,'/');
                  {? ~_linux
::                   Jeżeli to nie jest Linux, to zamieniamy wszystkie litery na małe,
::                   żeby porównywać małe z małymi.
                  || _dirr:=-_dirr
                  ?};
                  _jest:=_dirr=_dirdb;
                  _els+='Tabela %1 będzie szukana w katalogu %2 (%3)'@ [_el,_dirr,$(_dirr=_dirdb)]+'\n'
               || _els+='W definicji brak tabeli o podanej nazwie.'@
               ?};
               _RES.blank();
               _RES.DIR:=_dir;
               _RES.PTH:=_obj.PTH.PTH;
               _RES.NRL:=_obj.PTH.NRL;
               _RES.LINES:=_linia;
               _RES.memo_set(_linia,'LINEM');
               _RES.TYPE:='T';
               _RES.EL:=_el;
               _RES.memo_set(_dirdw+' -> '+_dirdb+'\n'+_els,'OPIS');
               _RES.OK:={? _jest || 'T' || 'N' ?};
               _RES.add();
               _RES.memo_put(,'LINEM');
               _RES.memo_put(,'OPIS')
            ?}
         !}
      ?}

::    Pozostałe pliki. - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   || STR.split(_linia);
::    Deklarowany katalog elementu (najprawdopodobniej ścieżka względna).
      _dirdw:=STR.get_word();
::    Katalog elementu (ścieżka bezwzględna).
      _lok:={? 1+_dirdw='@' || '@' || '' ?};
      _dirdb:=exec('r2a','%release',_dirdw,_dir,_dira,_dirl,_dirla,_user,_linux);

      {? fexists(_dirdb)<>2
      || _RES.blank();
         _RES.DIR:=_dir;
         _RES.PTH:=_obj.PTH.PTH;
         _RES.NRL:=_obj.PTH.NRL;
         _RES.LINES:=_linia;
         _RES.memo_set(_linia,'LINEM');
         _RES.TYPE:='F';
         _RES.memo_set(_dirdw+' -> '+_dirdb+'\n'+'Brak dostępu do katalogu.'@,'OPIS');
         _RES.OK:='N';
         _RES.add();
         _RES.memo_put(,'LINEM');
         _RES.memo_put(,'OPIS')
      || {!
         |? STR.next()
         |! _el:=STR.get_word();
            _elr:=gsub(_el,_patf,_repf);
::          Rzeczywisty katalog elementu.
            _dirr:=gsub(pth_dir(_lok+_elr),%92,'/');
            {? ~_linux
::             Jeżeli to nie jest Linux, to zamieniamy wszystkie litery na małe, żeby porównywać małe z małymi.
            || _dirr:=-_dirr
            ?};

            _RES.blank();
            _RES.DIR:=_dir;
            _RES.PTH:=_obj.PTH.PTH;
            _RES.NRL:=_obj.PTH.NRL;
            _RES.LINES:=_linia;
            _RES.memo_set(_linia,'LINEM');
            _RES.TYPE:='F';
            _RES.EL:=_el;
            _RES.memo_set(_dirdw+' -> '+_dirdb+'\n'+ 'Plik %1 będzie szukany w katalogu %2'@ [_elr,_dirr],'OPIS');
            _RES.OK:={? _dirr=_dirdb || 'T' || 'N' ?};
            _RES.add();
            _RES.memo_put(,'LINEM');
            _RES.memo_put(,'OPIS')
         !}
      ?}
   ?};
   _again:=_obj.PTH.next()
!};

{? ~_batch
|| _widok:="""
      _akcja:='""+_a+""';

      _par:=params_get();
      _RES:=_par.RES;
      _ws:=_par.ws;

      {? _akcja='P'
      || _where:='OK=\\\\'T\\\\'';
         _ga:='W(P):W(P)';
         _hdr:='zapisy poprawne'@
      |? _akcja='B'
      || _where:='OK=\\\\'N\\\\'';
         _ga:='W(B):W(B)';
         _hdr:='zapisy błędne'@
      || _where:='';
         _ga:='W(W):W(W)';
         _hdr:='wszystkie zapisy'@
      ?};

      _RES.f_set('DIR,PTH,NRL',,_where);
      _RES.actions_grayed(_ws,_ga);
      _RES.hdr_sel();
      _RES.hdr_sel(' - '+_hdr);
      ~~
   """;

   _ws:=_RES.mk_sel('Deklaracje ścieżek'@,,,'#relpthy',,,,,'U');
   _RES.win_fld(_ws,,'DIR',,,32);
   _RES.win_fld(_ws,,'PTH',,,16);
   _RES.win_fld(_ws,,'NRL',,,6);
   _RES.win_fld(_ws,,'LINES',,,80);
   _RES.win_fld(_ws,,'TYPE',,,2);
   _RES.win_fld(_ws,,'EL',,,8);
   _RES.win_fld(_ws,,'OK',,,,,,,,'Zapis poprawny [T/N]'@,2,,"'T'","'N'");
   {! _empty:=0 .. 1
   |! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
      _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
      _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
      _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
   !};
   _RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
   _RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
   _RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
   _RES.win_act(_ws,,'Formuła','Pokaż &autora'@@,,,
      "  _RES:=params_get().RES;
         _path:=_RES.DIR+exec('sep','#file')+_RES.PTH;
         exec('svn_blame','%release',_path,_RES.NRL)
      ",,,,,,
      'A'
   );
   _RES.win_btn(_ws,'text=%1' ['Pokaż &autora'@],'menu:A');
   _RES.win_act(_ws,,'Szukaj');
   _RES.win_act(_ws,,'Kolejność');
   _RES.win_act(_ws,,'Rekord',,,,"cur_tab(1,1).OK='N'");
   _RES.win_sel(_ws);
   _we:=_RES.mk_edit('Deklaracja ścieżki'@,,'#relpthy');
   _RES.win_esep(_we,'Dane podstawowe'@);
   _RES.win_efld(_we,,'DIR',,,80);
   _RES.win_efld(_we,,'PTH',,,80);
   _RES.win_efld(_we,,'NRL',,,80);
   _RES.win_efld(_we,,'LINEM',,,80);
   _RES.win_efld(_we,,'TYPE',,,80);
   _RES.win_efld(_we,,'EL',,,80);
   _RES.win_efld(_we,,'OPIS',,,80,-5);
   _RES.win_efld(_we,,'OK',,,,,,,,,'check-box','check_label="%1"' ['Tak, zapis jest poprawny'@],"'T'","'N'");
   _RES.win_edit(_we);

   params_set(
      'RES',_RES,
      'ws',_ws
   );
   ($_widok('B'))();
   _RES.select()
?};

_RES


\read_pth
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.14]
:: OPIS: Przygotowanie obiektu z tabelą tymczasową, w której są wszystkie linie deklaracji ścieżek.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new('PTH','sep','base','pti_dir','read','select');

_obj.PTH:=tab_tmp(3,
   'LP','INTEGER','Lp.',
   'PTH','STRING[64]','Nazwa pliku z deklaracją ścieżek',
   'NRL','INTEGER','Numer linii w pliku z deklaracją ścieżek',
   'DIR','SYS_MEMO','Katalog, w którym znajduje się plik z deklaracją ścieżek',
   'LINIA','SYS_MEMO','Treść linii w pliku z deklaracją ścieżek'
);

_obj.sep:=exec('sep','#file',1);

_obj.base:=pth_dir();

:: Metoda zwracająca ścieżkę do zadanego pliku PTI.
:: !!! Do poprawy. Obecnie przyjęto uproszczenie: ścieżka jest ustalana na podstawie tego czy plik istnieje w bieżącym
:: katalogu czy nie - bez analizy deklaracji ścieżek.
_obj.pti_dir:="
   _fn:='%1%2%3' [.base,.sep,_a];
   {? fexists(_fn,0)
   || .base
   || pth_dir(_a)
   ?}
";

_obj.read:="
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.14]
:: OPIS: Metoda wczytująca deklaracje ścieżek z wskazanego pliku.
::   WE: _a [STRING] - Nazwa pliku z deklaracją ścieżek.
::       _b [STRING] - Katalog, w którym znajduje się plik.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
   _pth:=_a;
   _dir:=_b;
   _fn:='%1%2%3' [_dir,.sep,_pth];
   _fh:=fopen(_fn,'r',0,1,1,1);
   {? _fh.is_open()
   || _nrl:=0;
      {!
      |? (_linia:=_fh.fread())<>'\n'
      |! _nrl+=1;
         {? 1+_linia=';' | _linia=''
         || ~~
         |? _linia*'#include'=1
         || _el:=spli_str(form(8-_linia),' ');
            {! _lp:=1 .. obj_len(_el)
            |! _pti:='%1.pti' [form(_el[_lp])];
               .read(_pti,.pti_dir(_pti))
            !};
            obj_del(_el)
         || .PTH.blank();
            .PTH.LP:=.PTH.size()+1;
            .PTH.memo_set(_dir,'DIR');
            .PTH.PTH:=_pth;
            .PTH.NRL:=_nrl;
            .PTH.memo_set(_linia,'LINIA');
            .PTH.add() & .PTH.memo_put(,'DIR') & .PTH.memo_put(,'LINIA')
         ?}
      !};
      _fh.fclose()
   ?}
";

_obj.select:="
   _ws:=.PTH.mk_sel(,,,'#relpth',,,,,'U');
   .PTH.win_fld(_ws,,'LP',,,-7);
   .PTH.win_fld(_ws,,'DIR',,,40  );
   .PTH.win_fld(_ws,,'PTH',,,-16);
   .PTH.win_fld(_ws,,'NRL',,,-5);
   .PTH.win_fld(_ws,,'LINIA',,,80);
   .PTH.win_act(_ws,,'Szukaj');
   .PTH.win_act(_ws,,'Kolejność');
   .PTH.win_sel(_ws);
   .PTH.win_edit(.PTH.mk_edit(,1,'#relpth'));
   .PTH.select()
";

_obj.read('%1.pth'[app_info('def_name')],_obj.base);

_obj


\r2a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Zamiana ścieżki względnej na bezwzględną.
::       Procedura wewnętrzna - brak weryfikacji parametrów wywołania.
::   WE: _a [STRING] - Ścieżka względna.
::       _b [STRING] - Katalog, z którego pochodzi analizowana deklaracja ścieżek (napis).
::       _c [ARRAY]  - Katalog, z którego pochodzi analizowana deklaracja ścieżek (tablica).
::       _d [STRING] - Katalog lokalny (napis).
::       _e [ARRAY]  - Katalog lokalny (tablica).
::       _f [STRING] - Nazwa użytkownika.
::       _g [NUMBER] - Czy Linux?
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_dirdw:=_a;
_dir:=_b;
_dira:=_c;
_dirl:=_d;
_dirla:=_e;
_user:=_f;
_linux:=_g;

_dirdw:=gsub(_a,%92,'/');
{? _dirdw+1='/'
|| _dirdw:=_dirdw-1
?};

_dirdb:='';
_prfx:='';

{? 1+_dirdw='>'
:: Jeżeli 'katalog użytkownika' to urealniamy zapis.
|| _dirdw:=(1-_dirdw)+'/'+_user
|? 1+_dirdw='@'
|| _dirdw:=1-_dirdw;
   _prfx:='@'
|? 1+_dirdw=':'
|| _dirdw:=1-_dirdw;
   _prfx:=':'
?};

_up:=0;

_dirdwa:=spli_str(_dirdw,'/');
{? _dirdwa[1]='.'
:: Przypadek szczególny - wskazanie bieżącego katalogu.
|| _dirdb:={? _prfx='@' || _dirl || _dir ?}

|| {! _lp:=1 .. obj_len(_dirdwa)
:: W przypadku ścieżek względnych liczymy ile katalogów 'w górę' trzeba wejść.
   |? _dirdwa[_lp]='..'
   |! _up+=1
   !};
   {? _up
::    A jednak względna.
   || {? _prfx<>'@'
::       Jeżeli katalog nie jest lokalny, to jest względny w stosunku do analizowanego pliku (pth/pti).
      || {! _lp:=1 .. obj_len(_dira)-_up
         |! _dirdb+=_dira[_lp]+'/'
         !}
      |? _prfx='@'
::       Jeżeli katalog jest lokalny, to jest względny w stosunku do katalogu z klientem.
      || {! _lp:=1 .. obj_len(_dirla)-_up
         |! _dirdb+=_dirla[_lp]+'/'
         !}
      ?};
      {! _lp:=_up+1 .. obj_len(_dirdwa)
      |! _dirdb+=_dirdwa[_lp]+'/'
      !}
   || _dirdb:=_dirdw
   ?};
   {? _dirdb+1='/'
   || _dirdb:=_dirdb-1
   ?}
?};
obj_del(_dirdwa);
{? ~_linux
:: Jeżeli to nie jest Linux, to zamieniamy wszystkie litery na małe, żeby porównywać małe z małymi.
|| _dirdb:=-_dirdb
?};

_dirdb


\macro
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.28]
:: OPIS: Test pliku macro.use.
::   WE: [_a] [NUMBER] - czy pomijać wyświetlanie okienek, domyślnie=0
::   WY: tabela _RES
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of(0)
|| _skip_window:=_a
|| _skip_window:=0
?};
_fn:='macro.use';
_fh:=fopen(_fn,'r',1,1,1);
{? ~_fh.is_open()
|| return()
?};

_RES:=tab_tmp(1,
   'NRL','INTEGER','Nr linii'@,
   'LINES','STRING[255]','Linia'@,
   'LINEM','SYS_MEMO','Linia'@,
   'TAB','STRING[10]','Tabela'@,
   'FLD','STRING[10]','Pole'@,
   'OPIS','STRING[255]','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
);

_nrl:=0;
{!
|? (_linia:=_fh.fread())<>'\n'
|! _nrl+=1;
   {? 1+_linia=%92
   || _txt:='';
      _tab:='';
      _fld:='';

      _buf:=_linia;
      _p1:=_buf*'.';
      {? _p1
      || _tab:=1-((_p1-1)+_buf);
         _buf:=_p1-_buf;
         _p2:=_buf*' ';
         _fld:={? _p2 || (_p2-1)+_buf || _buf ?};
         {? var_pres(_tab,@)<>type_of(@.CLASS.DBF_T)
         || _txt:='Brak tabeli.'@
         |? _type:=var_pres(_fld,($_tab)());
            _type<0
         || _txt:='Brak pola.'@
         |? _type<>26
         || _txt:='Pole nie jest typu złączeniowego.'@
         ?}

      || _txt:='Nieprawidłowa budowa.'@
      ?};

      _RES.blank();
      _RES.NRL:=_nrl;
      _RES.LINES:=_linia;
      _RES.memo_set(_linia,'LINEM');
      _RES.TAB:=_tab;
      _RES.FLD:=_fld;
      _RES.OPIS:=_txt;
      _RES.OK:={? _txt='' || 'T' || 'N' ?};
      _RES.add();
      _RES.memo_put(,'LINEM')
   ?}
!};
_fh.fclose();

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='P'
   || _where:='OK=\\\\'T\\\\'';
      _ga:='W(P):W(P)';
      _hdr:='zapisy poprawne'@
   |? _akcja='B'
   || _where:='OK=\\\\'N\\\\'';
      _ga:='W(B):W(B)';
      _hdr:='zapisy błędne'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie zapisy'@
   ?};

   _RES.f_set('NRL',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_ws:=_RES.mk_sel('macro.use'@,,,'#relmacrouse',,,,,'U');
_RES.win_fld(_ws,,'NRL',,,5);
_RES.win_fld(_ws,,'LINES',,,80);
_RES.win_fld(_ws,,'TAB',,,10);
_RES.win_fld(_ws,,'FLD',,,10);
_RES.win_fld(_ws,,'OPIS',,,40);
_RES.win_fld(_ws,,'OK',,,,,,,,'Zapis poprawny [T/N]'@,2,,"'T'","'N'");
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
_RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_act(_ws,,'Formuła','Pokaż &autora'@@,,,
   "  _RES:=params_get().RES;
      _fn:='macro.use';
      _path:=pth_dir(_fn)+exec('sep','#file')+_fn;
      exec('svn_blame','%release',_path,_RES.NRL)
   ",,,,,,
   'A'
);
_RES.win_btn(_ws,'text=%1' ['Pokaż &autora'@],'menu:A');
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');
_RES.win_act(_ws,,'Rekord',,,,"cur_tab(1,1).OK='N'");
_RES.win_sel(_ws);

params_set(
   'RES',_RES,
   'ws',_ws
);
($_widok('B'))();
{? ~_skip_window || _RES.select() ?};
_RES


\wf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Test relacji tabel firmowych i wspólnych.
::       Tabele wspólne nie mogą sie odwoływać do tabel firmowych.
::       Zakładamy taką budowę deklaracji ścieżek (pliki *.pth i *.pti), w której wymienione są wszystkie tabele
::       wspólne.
::   WE: [_a] [NUMBER] - czy pomijać wyświetlanie okienek, domyślnie=0
::   WY: tabela _RES
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of(0)
|| _skip_window:=_a
|| _skip_window:=0
?};
_RES:=tab_tmp(3,
   'T_AKR','STRING[8]','Tabela'@,
   'T_NAZWA','STRING[8]','Nazwa'@,
   'T_KAT','STRING[64]','Katalog'@,
   'T_WSP','STRING[1]','Wspólna'@,
   'F_AKR','STRING[8]','Pole'@,
   'F_TYP','STRING[9]','Typ'@,
   'F_NAZWA','STRING[8]','Nazwa'@,
   'F_KAT','STRING[64]','Katalog'@,
   'F_WSP','STRING[64]','Wspólna'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
);

:: Szukamy ścieżki tabeli firmowej. Tabela o nazwie 'ąąąąąąąą.mdb' na pewno nie jest tabelą wspólną.
_pthF:=pth_dir(':ąąąąąąąą.mdb');

_ST:=tab_tmp(1,
   'AKR','STRING[8]','Akronim'@,
   'NAZWA','STRING[8]','Nazwa'@,
   'KATALOG','STRING[64]','Katalog'@,
   'NR','INTEGER','Numer'@,
   'WSP','STRING[1]','Tabela wspólna'@
);

:: Przygotowanie listy wszystkich tabel i określenie ich typu (wspólna / firmowa).
{! _nrt:=1 .. tab_num()
|! {? tab_real(_nrt)
   || _ST.blank();
      _ST.AKR:=tab_acr(_nrt);
      _ST.NAZWA:=tab_alias(_nrt).name(1);
      _ST.KATALOG:=pth_dir(':%1.mdb' [gsub(_ST.NAZWA,'?','_')]);
      _ST.NR:=_nrt;
      _ST.WSP:={? _ST.KATALOG<>_pthF || 'T' || 'N' ?};
      _ST.add()
   ?}
!};

:: Analiza tabel wspólnych.
_loop:=_ST.first();
{!
|? _loop
|! _TAB:=tab_alias(_ST.NR);
   {! _nrf:=1 .. _TAB.fld_num()
   |! {? (_akr:=_TAB.fld_join(_nrf))<>''
      || _RES.blank();
         _RES.T_AKR:=_ST.AKR;
         _RES.T_NAZWA:=_ST.NAZWA;
         _RES.T_KAT:=_ST.KATALOG;
         _RES.T_WSP:=_ST.WSP;
         _RES.F_AKR:=_TAB.fld_acr(_nrf);
         _RES.F_TYP:='_'+_akr;

         _ST.cntx_psh();
         {? _ST.find_key(_akr,)
         || _RES.F_NAZWA:=_ST.NAZWA;
            _RES.F_KAT:=_ST.KATALOG;
            _RES.F_WSP:=_ST.WSP
         || ~~
         ?};
         _ST.cntx_pop();

         _RES.OK:={? _ST.WSP='T' & _RES.F_WSP='N' || 'N' || 'T' ?};
         _RES.add();
         _RES.memo_set(
            {? _RES.T_WSP='T'
            || {? _RES.F_WSP='T'
               || 'Tabela wspólna %1 poprzez pole %2 odwołuje się do tabeli wspólnej %3.'@ [_RES.T_AKR,_RES.F_AKR,_akr]
               || 'Tabela wspólna %1 poprzez pole %2 odwołuje się do tabeli firmowej %3.'@ [_RES.T_AKR,_RES.F_AKR,_akr]
               ?}
            || {? _RES.F_WSP='T'
               || 'Tabela firmowa %1 poprzez pole %2 odwołuje się do tabeli wspólnej %3.'@ [_RES.T_AKR,_RES.F_AKR,_akr]
               || 'Tabela firmowa %1 poprzez pole %2 odwołuje się do tabeli firmowej %3.'@ [_RES.T_AKR,_RES.F_AKR,_akr]
               ?}
            ?},'OPIS'
         );
         _RES.memo_put(,'OPIS')
      ?}
   !};
   obj_del(_TAB);
   _loop:=_ST.next()
!};

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='P'
   || _where:='OK=\\\\'T\\\\'';
      _ga:='W(P):W(P)';
      _hdr:='zapisy poprawne'@
   |? _akcja='B'
   || _where:='OK=\\\\'N\\\\'';
      _ga:='W(B):W(B)';
      _hdr:='zapisy błędne'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie zapisy'@
   ?};

   _RES.f_set('T_AKR,T_NAZWA,F_AKR',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_ws:=_RES.mk_sel('Zależności między tabelami'@,,,'#relwf',,,,,'U');
_RES.win_fld(_ws,,'T_AKR');
_RES.win_fld(_ws,,'T_NAZWA');
_RES.win_fld(_ws,,'F_AKR');
_RES.win_fld(_ws,,'F_TYP');
_RES.win_fld(_ws,,'OPIS',,,90);
_RES.win_fld(_ws,,'OK',,,-3,,,,,,2,,"'T'","'N'");
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
_RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');
_RES.win_sel(_ws);

_szer:=64;
_we:=_RES.mk_edit('Zależność między tabelami'@,,'#relwf');
_RES.win_esep(_we,'Tabela'@);
_RES.win_efld(_we,,'T_AKR',,,_szer);
_RES.win_efld(_we,,'T_NAZWA',,,_szer);
_RES.win_efld(_we,,'T_KAT',,,_szer);
_RES.win_efld(_we,,'T_WSP',,,,,,,,,'check-box','check_label="%1"' ['Tak, tabela jest wspólna'@],"'T'","'N'");
_RES.win_esep(_we,'Relacja'@);
_RES.win_efld(_we,,'F_AKR',,,_szer);
_RES.win_efld(_we,,'F_TYP',,,_szer);
_RES.win_efld(_we,,'F_NAZWA',,,_szer);
_RES.win_efld(_we,,'F_KAT',,,_szer);
_RES.win_efld(_we,,'F_WSP',,,,,,,,,'check-box','check_label="%1"' ['Tak, tabela jest wspólna'@],"'T'","'N'");
_RES.win_esep(_we,'Opis i status'@);
_RES.win_efld(_we,,'OPIS',,,_szer,-3);
_RES.win_efld(_we,,'OK',,,,,,,,,'check-box','check_label="%1"' ['Tak, zapis jest poprawny'@],"'T'","'N'");
_RES.win_edit(_we);

params_set(
   'RES',_RES,
   'ws',_ws
);
($_widok('B'))();
{? ~_skip_window || _RES.select() ?};
_RES


\mfiles
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła pokazująca listę plików warstwy .m.
::   WE: [_a] [NUMBER] - czy pomijać wyświetlanie okienek, domyślnie=0
::   WY: tabela _RES lub ~~ gdy warstwa .m nie zawiera  plików
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of(0)
|| _skip_window:=_a
|| _skip_window:=0
?};
_PLIKI:=files('*.m.*');
{? _PLIKI.first()
|| _RES:=tab_tmp(2,
      'DIR','STRING[64]','Katalog'@,
      'FILE','STRING[64]','Plik'@
   );

   {!
   |? _RES.blank();
      _RES.FILE:=_PLIKI.FILENAME;
      _RES.DIR:=pth_dir(_RES.FILE);
      _RES.add();
      _PLIKI.next()
   !};

   _ws:=_RES.mk_sel('Pliki warstwy .m'@,,1,'#rel_m',,,,,'U');
   _RES.win_act(_ws,,'Usuń',,,'Usunięcie pliku z dysku'@,
      "  _RES:=cur_tab(1,1);
         _grp:=_RES.sel_size();
         {? _grp | FUN.ask('Czy na pewno chcesz usunąć bieżący plik z dysku?'@)
         || ferase(_RES.FILE,1)
         ?}
      ",,,
      1,
      "FUN.ask('Czy na pewno chcesz usunąć zaznaczone pliki z dysku?'@)"
   );
   _RES.win_act(_ws,,'Formuła','Prze&glądaj'@@,,'Przeglądanie treści pliku'@,"txt_view(cur_tab(1,1).FILE,1)",,1,,,,'G');
   _RES.win_act(_ws,,'Szukaj');
   _RES.win_act(_ws,,'Kolejność');
   _RES.win_sel(_ws);
   _RES.win_edit(_RES.mk_edit('Plik w warstwie .m'@,1,'#rel_m'));
   {? ~_skip_window || _RES.select() ?};
   return(_RES)
|| {? ~_skip_window || FUN.info('Warstwa .m nie zawiera plików.'@) ?}
?};
~~


\idadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Kontrola pól typu IDADD.
::   WE: [_a] [NUMBER] - czy pomijać wyświetlanie okienek, domyślnie=0
::   WY: tabela _RES
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of(0)
|| _skip_window:=_a
|| _skip_window:=0
?};
_RES:=tab_tmp(1,
   'TAB','STRING[8]','Akronim tabeli'@,
   'COMMENT','STRING[60]','Komentarz do tabeli'@,
   'FLD','STRING[8]','Akronim pola'@,
   'OK','STRING[1]','Zapis poprawny'@
);

:: Błąd kategoryzacji :(.
_exc:=exec('exc_tabs','!zws_par_rlog');

{! _lp:=1 .. tab_num()
|! {? tab_real(_lp) & _exc*(_acr:=tab_acr(_lp))=0 & '0123456789'*(1+tab_alias(_lp).name(1))=0
   || _RES.blank();
      _RES.TAB:=_acr;
      _RES.COMMENT:=($_RES.TAB)().comment();
      _RES.FLD:=($_RES.TAB)().idadd_acr();

      _RES.OK:={? _RES.FLD='' || 'N' || 'T' ?};
      _RES.add()
   ?}
!};

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='P'
   || _where:='OK=\\\\'T\\\\'';
      _ga:='W(P):W(P)';
      _hdr:='zapisy poprawne'@
   |? _akcja='B'
   || _where:='OK=\\\\'N\\\\'';
      _ga:='W(B):W(B)';
      _hdr:='zapisy błędne'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie zapisy'@
   ?};

   _RES.f_set('TAB,FLD',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_ws:=_RES.mk_sel('Pola typu IDADD'@,,,'#relidadd',,,,,'U');
_RES.win_fld(_ws,,'TAB',,,8);
_RES.win_fld(_ws,,'COMMENT',,,60);
_RES.win_fld(_ws,,'FLD',,,8);
_RES.win_fld(_ws,,'OK',,,-3,,,,,,2,,"'T'","'N'");
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
_RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');
_RES.win_sel(_ws);

_we:=_RES.mk_edit('Pole typu IDADD'@,,'#relidadd');
_RES.win_esep(_we,'Dane podstawowe'@);
_RES.win_efld(_we,,'TAB');
_RES.win_efld(_we,,'COMMENT');
_RES.win_efld(_we,,'FLD');
_RES.win_efld(_we,,'OK',,,,,,,,,'check-box','check_label="%1"' ['Tak, tabela posiada pole typu IDADD'@],"'T'","'N'");
_RES.win_edit(_we);

params_set(
   'RES',_RES,
   'ws',_ws
);
($_widok('B'))();
{? ~_skip_window || _RES.select() ?};
_RES


\eol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła sprawdza poprawność końców linii.
::   WE: [_a] [NUMBER] - czy pomijać wyświetlanie okienek, domyślnie=0
::   WY: tabela _RES
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of(0)
|| _skip_window:=_a
|| _skip_window:=0
?};
{? ~_skip_window & ~FUN.ask('Operacja bardzo czasochłonna.'@+'\n'+'Na pewno chcesz kontynuować?'@)
|| return()
?};

_BUF:=tab_tmp(1
   ,'LP','INTEGER','Lp.'@
   ,'TEXT','SYS_MEMO','Treść'@
);
_BUF.blank();
_BUF.add();

_RES:=tab_tmp(2,
   'DIR','STRING[64]','Katalog'@,
   'FILE','STRING[64]','Plik'@,
   'SIZE','INTEGER','Rozmiar'@,
   'LINES','INTEGER','Liczba linii'@,
   'ERR','INTEGER','Liczba błędów'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
);

_maski:=spli_str('*.fml|*.rp[mi]|*.sql|*.prc','|');

_len:=obj_len(_maski);
_prg:=obj_new('ts','delta','step','size','proc1','proc2','bf','bl','ks','ds');
_prg.ts:=time();
_prg.proc1:=-1;
_prg.bf:=0;
_prg.bl:=0;
_prg.ks:=0;
_prg.ds:=0;
{! _lpm:=1 .. _len
|! _prg.delta:=(_lpm-1)*(100/_len);
   _PLIKI:=files(_maski[_lpm]);
   {? _PLIKI.first()
   || _prg.step:=0;
      _prg.size:=_PLIKI.size();
      {!
      |? _dir:=pth_dir(_PLIKI.FILENAME);
         _size:=0;
         _lines:=0;
         _err:=0;
         _opis:='';

         _prg.step+=1;
         _prg.proc2:=(_prg.delta+_prg.step*100/(_prg.size*_len))$0;
         {? _prg.proc1<>_prg.proc2
         || _prg.proc1:=_prg.proc2;
            progress(_prg.proc1,
               'Plików zweryfikowanych wyrażeniem regularnym: %1'@ [$_prg.ks]+'\n'+
               'Plików zweryfikowanych na podstawie zawartości: %1'@ [$_prg.ds]+'\n'+
               '\n'+
               'Niepoprawnych plików: %1'@ [$_prg.bf]+'\n'+
               'Niepoprawnych linii: %1'@ [$_prg.bl]+'\n'+
               '\n'+
               'Maska przetwarzanych plików: %1'@ [_maski[_lpm]]+'\n'+
               '\n'+
               'Proszę czekać [%1%%] ...'@ [form(_prg.proc1$2,3,0,'9.')],
               'Analiza plików'@
            );
            echo(,(time()-_prg.ts)$3)
         ?};

         _fh:=fopen(_PLIKI.FILENAME,'ur',1,1,1,1);
         {? _fh.is_open()
         || _BUF.memo_put(_fh,'TEXT');
            _ok:=regex_match(_BUF.memo_txt(,1,'TEXT'),'\r(?!\n)|(?<!\r)\n').pos=0;
            _fh.fclose()
         || _ok:=-1
         ?};
         obj_del(_fh);

         {? _ok
         || _prg.ks+=1;
            _opis+='Plik zweryfikowany wyrażeniem regularnym.'@
         || _prg.ds+=1;
            _fh:=fopen(_PLIKI.FILENAME,'br',1,0,1,1);
            {? _fh.is_open()
            || _lines:=1;
               {!
               |? (_bajt:=_fh.fread())>-1
               |! _size+=1;
                  {? _bajt=13
                  || {? (_bajt:=_fh.fread())>-1
                     || _size+=1;
                        {? _bajt<>10
                        || _opis+='%1 '@ [$_lines];
                           _err+=1
                        ?}
                     || _opis+='%1 '@ [$_lines];
                        _err+=1
                     ?};
                     _lines+=1
                  |? _bajt=10
                  || _opis+='%1 '@ [$_lines];
                     _err+=1;
                     _lines+=1
                  ?}
               !};
               _fh.fclose()
            || _opis+='Otwarcie pliku nie powiodło się'@;
               _err+=1
            ?};
            obj_del(_fh)
         ?};

         _RES.blank();
         _RES.DIR:=_dir;
         _RES.FILE:=_PLIKI.FILENAME;
         _RES.SIZE:=_size;
         _RES.LINES:=_lines;
         _RES.ERR:=_err;
         _RES.OK:={? _RES.ERR || 'N' || 'T' ?};
         {? _RES.add() & _opis<>''
         || _RES.memo_set(_opis,'OPIS');
            _RES.memo_put(,'OPIS')
         ?};

         _prg.bl+=_err;
         {? _err
         || _prg.bf+=1
         ?};

         _PLIKI.next()
      !}
   ?};
   obj_del(_PLIKI)
!};
echo();
prgs_clr();
{? ~_skip_window || FUN.info(
   'Plików zweryfikowanych na podstawie "skrótu": %1'@ [$_prg.ks]+'\n'+
   'Plików zweryfikowanych na podstawie zawartości: %1'@ [$_prg.ds]+'\n'+
   '\n'+
   'Niepoprawnych plików: %1'@ [$_prg.bf]+'\n'+
   'Niepoprawnych linii: %1'@ [$_prg.bl]+'\n'+
   '\n'+
   'Czas przetwarzania: %1'@ [(time()-_prg.ts)$3]
)
?};

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='P'
   || _where:='OK=\\\\'T\\\\'';
      _ga:='W(P):W(P)';
      _hdr:='zapisy poprawne'@
   |? _akcja='B'
   || _where:='OK=\\\\'N\\\\'';
      _ga:='W(B):W(B)';
      _hdr:='zapisy błędne'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie zapisy'@
   ?};

   _RES.f_set('DIR,FILE',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_ws:=_RES.mk_sel('Końce linii'@,,,'#releol',,,,,'U');
_RES.win_fld(_ws,,'DIR',,,32);
_RES.win_fld(_ws,,'FILE',,,16);
_RES.win_fld(_ws,,'SIZE',,,16);
_RES.win_fld(_ws,,'LINES',,,6);
_RES.win_fld(_ws,,'ERR',,,6);
_RES.win_fld(_ws,,'OPIS',,,40);
_RES.win_fld(_ws,,'OK',,,-3,,,,,,2,,"'T'","'N'");
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
_RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_act(_ws,,'Formuła','Pokaż &autora'@@,,,
   "  _RES:=params_get().RES;
      _path:=_RES.DIR+exec('sep','#file')+_RES.FILE;
      _nrl:=spli_str(_RES.memo_txt(,1,'OPIS'),' ');
      exec('svn_blame','%release',_path,#_nrl[1])
   ",,,,,,
   'A'
);
_RES.win_btn(_ws,'text=%1' ['Pokaż &autora'@],'menu:A');
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');
_RES.win_sel(_ws);

_we:=_RES.mk_edit('Końce linii'@,,'#releol');
_RES.win_esep(_we,'Plik'@);
_RES.win_efld(_we,,'DIR',,,64);
_RES.win_efld(_we,,'FILE',,,64);
_RES.win_efld(_we,,'SIZE',,,64);
_RES.win_efld(_we,,'LINES',,,64);
_RES.win_efld(_we,,'ERR',,,64);
_RES.win_efld(_we,,'OPIS',,,64,-5);
_RES.win_efld(_we,,'OK',,,,,,,,,'check-box','check_label="%1"' ['Tak, końce linii są poprawne'@],"'T'","'N'");
_RES.win_edit(_we);

params_set(
   'RES',_RES,
   'ws',_ws
);
($_widok('B'))();
{? ~_skip_window || _RES.select() ?};
_RES


\def_f
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Kontrola poprawności wywołań formuł z definicji.
::   WE: [_a] [NUMBER] - czy pomijać wyświetlanie okienek, domyślnie=0
::   WY: tabela _RES
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of(0)
|| _skip_window:=_a
|| _skip_window:=0
?};
progress(,'Proszę czekać ...'@,'Analiza definicji systemu'@,1);
_def:=app_info('def_name');
_CD:=comp_def('%1.def' [_def],,1);
prgs_clr();
{? type_of(_CD)=type_of(~~)
|| return(0)
?};

:: F - Formuła
_CD.f_set('CODE,KEY,NR^',,'CODE=\'F\'');
{? ~_CD.f_first()
|| FUN.emsg('Przeprowadzenie analizy definicji nie powiodło się.'@);
   return(0)
?};

:: Opis elementów typu "F" (w polu _CD.TXT):
::    1 - Puste.
::    2 - Kod, tutaj F.
::    3 - Nazwa formuły.
::    4 - Komentarz.
::    5 - Nazwa pliku.
::    6 - Nazwa procedury.
::    7 - ???
::    8 - Formuła zawsze zapisywana w definicji [0/1].
::    9 - ???

::_fh:=fopen('def.txt','uw',1,1,1);
::{? _fh.is_open()
::|| _txt:='';
::   {!
::   |? _txt:=_CD.TXT+_txt;
::      {? _CD.NR=1
::      || _fh.fwrite(_txt);
::         _txt:=''
::      ?};
::      _CD.f_next()
::   !};
::   _fh.fclose()
::?};

_RES:=tab_tmp(1,
   'NAME','STRING[31]','Nazwa formuły'@,
   'PROC','STRING[31]','Nazwa procedury'@,
   'FILE','STRING[31]','Nazwa pliku'@,
   'TYPE','STRING[1]','Typ błędu'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
);
_PROC:=tab_tmp(2,
   'PROC','STRING[31]','Nazwa procedury'@,
   'FILE','STRING[31]','Nazwa pliku'@,
   'ERR','STRING[255]',''
);

_prg:=obj_new('ts','step','size','proc','calc');
_prg.ts:=time();
_prg.step:=0;
_prg.size:=_CD.f_size();

_txt:='';
{!
|? _prg.step+=1;
   _prg.calc:=(_prg.step*100/_prg.size)$0;
   {? _prg.proc<>_prg.calc
   || _prg.proc:=_prg.calc;
      progress(_prg.proc,'Proszę czekać [%1%%] ...'@ [form(_prg.proc,3,0,'9.')],'Analiza wywołań formuł'@)
   ?};
   echo(,(time()-_prg.ts)$3);

   _txt:=_CD.TXT+_txt;
   {? _CD.NR=1
   || _arr:=spli_str(_txt,'\t');
      _opis:='';
      _RES.blank();
      _RES.NAME:=_arr[3];
      _RES.PROC:=_arr[6];
      _RES.FILE:=_arr[5];
      {? ~fexists('%1.fml' [_RES.FILE],1)
      || _RES.TYPE:='F';
         _opis:='Nie odnaleziono pliku %1.fml'@ [_RES.FILE]
      |? {? ~_PROC.find_key('~~',_RES.FILE,)
         || _fh:=fopen('%1.fml' [_RES.FILE],'ur',1,,1,1);
            {? _fh.is_open()
            || {!
               |? (_linia:=_fh.fread())<>'\n'
               |! {? 1+_linia='\\'
                  || _rule:=spli_str(1-_linia,' ')[1];
                     _PROC.blank();
                     _PROC.PROC:=_rule;
                     _PROC.FILE:=_RES.FILE;
                     _PROC.ERR:=exec('valid_rule_name','#string',_PROC.PROC);
                     _PROC.add()
                  ?}
               !};
               _fh.fclose();
               _PROC.blank();
               _PROC.PROC:='~~';
               _PROC.FILE:=_RES.FILE;
               _PROC.add()
            ?};
            obj_del(_fh)
         ?};
         ~_PROC.find_key(_RES.PROC,_RES.FILE,)
      || _RES.TYPE:='P';
         _opis:='W pliku %1.fml nie odnaleziono procedury \\%2.'@ [_RES.FILE,_RES.PROC]
      |? +_PROC.ERR
      || _RES.TYPE:='N';
         _opis:=_PROC.ERR
      ?};
      _RES.OK:={? _RES.TYPE='' || 'T' || 'N' ?};
      {? _RES.add() & _opis<>''
      || _RES.memo_set(_opis,'OPIS');
         _RES.memo_put(,'OPIS')
      ?};
      obj_del(_arr);
      _txt:=''
   ?};

   _CD.f_next()
!};
echo();
prgs_clr();

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='P'
   || _where:='OK=\\\\'T\\\\'';
      _ga:='W(P):W(P)';
      _hdr:='zapisy poprawne'@
   |? _akcja='B'
   || _where:='OK=\\\\'N\\\\'';
      _ga:='W(B):W(B)';
      _hdr:='zapisy błędne'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie zapisy'@
   ?};

   _RES.f_set('NAME',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_ws:=_RES.mk_sel('Formuły z definicji'@,,,'#reldef_f',,,,,'U');
_RES.win_fld(_ws,,'NAME',,,,,,,,'Nazwa formuły w MacroBUILDER-ze'@);
_RES.win_fld(_ws,,'PROC',,,,,,,,'Nazwa procedury w pliku'@);
_RES.win_fld(_ws,,'FILE',,,,,,,,'Nazwa pliku (bez rozszerzenia .fml).'@);
_RES.win_fld(_ws,,'TYPE',,,-3,,,,,'Kod typu błędu: F - brak pliku / P - brak procedury'@);
_RES.win_fld(_ws,,'OPIS',,,60,,,,,'Opis błędu'@);
_RES.win_fld(_ws,,'OK',,,-3,,,,,'Zapis poprawny [T/N]'@,2,,"'T'","'N'");
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
_RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');
_RES.win_sel(_ws);

_szer:=40;
_we:=_RES.mk_edit('Formuła z definicji'@,,'#reldef_f');
_RES.win_esep(_we,'Dane podstawowe'@);
_RES.win_efld(_we,,'NAME',,,_szer,,,,,'Nazwa formuły w MacroBUILDER-ze'@);
_RES.win_efld(_we,,'PROC',,,_szer,,,,,'Nazwa procedury w pliku'@);
_RES.win_efld(_we,,'FILE',,,_szer,,,,,'Nazwa pliku (bez rozszerzenia .fml).'@);
_RES.win_esep(_we,'Wynik'@);
_RES.win_efld(_we,,'OPIS',,,_szer,-5,,,,'Opis błędu'@);
_RES.win_efld(_we,,'OK',,,,,,,,,'check-box','check_label="%1"' ['Tak, zapis jest poprawny'@],"'T'","'N'");
_RES.win_edit(_we);

params_set(
   'RES',_RES,
   'ws',_ws
);
($_widok('B'))();
{? ~_skip_window || _RES.select() ?};
_RES


\def__a_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Kontrola parametru w akcji "Rekord - przed".
::   WE: [_a] [NUMBER] - czy pomijać wyświetlanie okienek, domyślnie=0
::   WY: tabela _RES
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of(0)
|| _skip_window:=_a
|| _skip_window:=0
?};
progress(,'Proszę czekać ...'@,'Analiza definicji systemu'@,1);
_def:=app_info('def_name');
_CD:=comp_def('%1.def' [_def],,1);
prgs_clr();
{? type_of(_CD)=type_of(~~)
|| return(0)
?};

:: TWAB - Akcja okienka wertowania tabeli niepusta dziedzina
:: TWAE - Akcja okienka wertowania tabeli pusta dziedzina
_CD.f_set('CODE,KEY,NR^',,'(CODE=\'TWAB\' or CODE=\'TWAE\') and KEY like \'%,r\'');
{? ~_CD.f_first()
|| FUN.emsg('Przeprowadzenie analizy definicji nie powiodło się.'@);
   return(0)
?};

_RES:=tab_tmp(4,
   'TAB','STRING[8]','Tabela'@,
   'WND','STRING[8]','Okno'@,
   'EMPTY','STRING[1]','Akcja dla pustej dziedziny'@,
:: Formuła
   'FMLB','STRING[31]','Formuła'@,
   'PROC','STRING[31]','Nazwa procedury'@,
   'FILE','STRING[31]','Nazwa pliku'@,
   'TEXT','SYS_MEMO','Treść formuły'@,
::  Parametr
   'P1W','STRING[255]','Wartość parametru'@,
   'P1K','STRING[60]','Komentarz do parametru'@,
:: Wynik
   'TYPE','STRING[1]','Typ błędu'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
);

_get:="
   _CD:=_a;
   _txt:='';
   {? _CD.first()
   || {!
      |? _txt+=_CD.TXT;
         _CD.next()
      !}
   ?};
   _txt
";

_prg:=obj_new('ts','step','size','proc','calc');
_prg.ts:=time();
_prg.step:=0;
_prg.size:=_CD.f_size();
_txt:='';
{!
|? _prg.step+=1;
   _prg.calc:=(_prg.step*100/_prg.size)$0;
   {? _prg.proc<>_prg.calc
   || _prg.proc:=_prg.calc;
      progress(_prg.proc,'Proszę czekać [%1%%] ...'@ [form(_prg.proc,3,0,'9.')],'Analiza akcji okien wertowania'@)
   ?};
   echo(,(time()-_prg.ts)$3);

   _txt:=_CD.TXT+_txt;
   {? _CD.NR=1
   || _arr:=spli_str(_txt,'\t');
      {? _arr[16]<>''
::       Zdefiniowana formuła "przed".
      || _opis:='';
         _text:='';
         _RES.blank();
         _RES.TAB:=_arr[4];
         _RES.WND:=_arr[6];
         _RES.EMPTY:={? _arr[7]='E' || 'T' || 'N' ?};
         _RES.FMLB:=_arr[16];

         _CD.cntx_psh();
::       Szukamy informacji o formule. Zakładamy, że na pewno istnieje.
         _CD.prefix(_RES.FMLB,'','F',);
         _txt:=_get(_CD);
         {? _txt<>''
         || obj_del(_arr);
            _arr:=spli_str(_txt,'\t');
            _RES.PROC:=_arr[6];
            _RES.FILE:=_arr[5];
            {? ~fexists('%1.fml' [_RES.FILE],1)
            || _text:='Nie odnaleziono pliku %1.fml'@ [_RES.FILE]
            |? ~exec('is_fun','#file',_RES.FILE,_RES.PROC)
            || _text:='W pliku %1.fml nie odnaleziono procedury \\%2.'@ [_RES.FILE,_RES.PROC]
            || _text:='\\%1\n%2' [_RES.PROC,exec('get_formula','libfml',_RES.PROC,_RES.FILE,1)]
            ?}
         ?};
::       Szukamy informacji o pierwszym parametrze formuły.
         _CD.prefix(_RES.FMLB+',1','','FP',);
         _txt:=_get(_CD);
         {? _txt<>''
         || obj_del(_arr);
            _arr:=spli_str(_txt,'\t');
            _RES.P1W:=_arr[4];
            _RES.P1K:=_arr[5]
         ?};
         _CD.cntx_pop();

         {? _RES.P1W=''
         || _RES.TYPE:='B';
            _opis:='Brak parametru.'
         |? _RES.P1W<>'_a'
         || _RES.TYPE:='W';
            _opis:='Wartość parametru różna od oczekiwanej.'
         ?};

         _RES.OK:={? _RES.TYPE='' || 'T' || 'N' ?};
         {? _RES.add()
         || {? _text<>''
            || _RES.memo_set(_text,'TEXT');
               _RES.memo_put(,'TEXT')
            ?};
            {? _opis<>''
            || _RES.memo_set(_opis,'OPIS');
               _RES.memo_put(,'OPIS')
            ?}
         ?}
      ?};
      obj_del(_arr);
      _txt:=''
   ?};

   _CD.f_next()
!};
echo();
prgs_clr();

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='P'
   || _where:='OK=\\\\'T\\\\'';
      _ga:='W(P):W(P)';
      _hdr:='zapisy poprawne'@
   |? _akcja='B'
   || _where:='OK=\\\\'N\\\\'';
      _ga:='W(B):W(B)';
      _hdr:='zapisy błędne'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie zapisy'@
   ?};

   _RES.f_set('TAB,WND,EMPTY,FMLB',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_ws:=_RES.mk_sel('Formuły "Rekord - przed"'@,,,'#rel_bd',,,,,'U');
_RES.win_fld(_ws,,'TAB',,,,,,,,'Akronim tabeli'@);
_RES.win_fld(_ws,,'WND',,,,,,,,'Akronim okna'@);
_RES.win_fld(_ws,,'EMPTY',,,-3,,,,,'Akcja dla pustej dziedziny? [T/N]'@,2,,"'T'","'N'","''");
_RES.win_fld(_ws,,'FMLB',,,20,,,,,'Nazwa formuły w MacroBUILDER-ze'@);
_RES.win_fld(_ws,,'PROC',,,20,,,,,'Nazwa procedury'@);
_RES.win_fld(_ws,,'FILE',,,20,,,,,'Nazwa pliku'@);
_RES.win_fld(_ws,,'TYPE',,,-3,,,,,'Kod typu błędu [B - brak parametru / W - nieprawidłowa wartość]'@);
_RES.win_fld(_ws,,'OPIS',,,60,,,,,'Opis błędu'@);
_RES.win_fld(_ws,,'OK',,,-3,,,,,'Zapis poprawny [T/N]'@,2,,"'T'","'N'");
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
_RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');

_wed:=_RES.mk_edit('Formuła "Rekord - przed"'@,,'#rel_bd');
_RES.win_efld(_wed,,'TEXT',,,171,-18,1,,1);

_grp:=_RES.grp_make('Parametr akcji "Rekord - przed"'@,,'#rel_bdgrp',,,,,'normal');
_RES.grp_sel(_grp,,_ws,,"params_set(_par:=params_get()); grp_edisp(_par.RES,_par.wed)",,,12,"","",,,'maximized');
_RES.grp_splt(_grp,,'horizontal','TEXT');
_RES.grp_edit(_grp,,_wed,,"","params_get().RES.memo_get(,'TEXT')","",,'maximized');

_RES.win_sel(_grp);

_szer:=80;
_we:=_RES.mk_edit('Parametr akcji "Rekord - przed"'@,,'#rel_bdp');
_RES.win_esep(_we,'Dane podstawowe'@);
_RES.win_efld(_we,,'TAB',,,_szer,,,,,'Akronim tabeli'@);
_RES.win_efld(_we,,'WND',,,_szer,,,,,'Akronim okna'@);
_RES.win_efld(_we,,'EMPTY',,,,,,,,,'check-box','check_label="%1"' ['Tak, akcja dla pustej dziedziny'@],"'T'","'N'");
_RES.win_efld(_we,,'FMLB',,,_szer,,,,,'Nazwa formuły w MacroBUILDER-ze'@);
_RES.win_efld(_we,,'PROC',,,_szer,,,,,'Nazwa procedury w pliku'@);
_RES.win_efld(_we,,'FILE',,,_szer,,,,,'Nazwa pliku'@);
_RES.win_efld(_we,,'TEXT',,,_szer,-5,,,,'Treść formuły'@);
_RES.win_efld(_we,,'P1W',,,_szer,,,,,'Wartość parametru'@);
_RES.win_efld(_we,,'P1K',,,_szer,,,,,'Komentarz'@);
_RES.win_esep(_we,'Wynik'@);
_RES.win_efld(_we,,'OPIS',,,_szer,-5,,,,'Opis błędu(-ów)'@);
_RES.win_efld(_we,,'OK',,,,,,,,,'check-box','check_label="%1"' ['Tak, zapis jest poprawny'@],"'T'","'N'");
_RES.win_edit(_we);

params_set(
   'RES',_RES,
   'ws',_ws,
   'wed',_wed
);
($_widok('B'))();
{? ~_skip_window || _RES.select() ?};
_RES


\def__a_triga
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Kontrola parametru w wyzwalaczach "po".
::   WE: [_a] [NUMBER] - czy pomijać wyświetlanie okienek, domyślnie=0
::   WY: tabela _RES
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of(0)
|| _skip_window:=_a
|| _skip_window:=0
?};
progress(,'Proszę czekać ...'@,'Analiza definicji systemu'@,1);
_def:=app_info('def_name');
_CD:=comp_def('%1.def' [_def],,1);
prgs_clr();
{? type_of(_CD)=type_of(~~)
|| return(0)
?};

:: TTAA - Trigger add po
:: TTPA - Trigger put po
:: TTDA - Trigger del po
:: TTMA - Trigger memo_put po
_CD.f_set('CODE,KEY,NR^',,'CODE=\'TTAA\' or CODE=\'TTDA\' or CODE=\'TTMA\' or CODE=\'TTPA\'');
{? ~_CD.f_first()
|| {? ~_skip_window || FUN.emsg('Przeprowadzenie analizy definicji nie powiodło się.'@) ?};
   return(0)
?};

:: Opis elementów typu "TTAA", "TTDA", "TTMA" i "TTPA" (w polu _CD.TXT).
::    1 - Puste
::    2 - Kod.
::    3 - Nazwa tabeli.
::    4 - Akronim tabeli.
::    5 - Formuła.
::    6 - Komentarz.

_RES:=tab_tmp(4,
   'TAB','STRING[8]','Tabela'@,
   'TRIG','STRING[1]','Wyzwalacz'@,
:: Formuła
   'FML','STRING[31]','Formuła'@,
   'PROC','STRING[31]','Nazwa procedury'@,
   'FILE','STRING[31]','Nazwa pliku'@,
   'TEXT','SYS_MEMO','Treść formuły'@,
::  Parametr
   'P1W','STRING[255]','Wartość parametru'@,
   'P1K','STRING[60]','Komentarz do parametru'@,
:: Wynik
   'TYPE','STRING[1]','Typ błędu'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
);

_get:="
   _CD:=_a;
   _txt:='';
   {? _CD.first()
   || {!
      |? _txt+=_CD.TXT;
         _CD.next()
      !}
   ?};
   _txt
";

_prg:=obj_new('ts','step','size','proc','calc');
_prg.ts:=time();
_prg.step:=0;
_prg.size:=_CD.f_size();
_txt:='';
{!
|? _prg.step+=1;
   _prg.calc:=(_prg.step*100/_prg.size)$0;
   {? _prg.proc<>_prg.calc
   || _prg.proc:=_prg.calc;
      progress(_prg.proc,'Proszę czekać [%1%%] ...'@ [form(_prg.proc,3,0,'9.')],'Analiza akcji okien wertowania'@)
   ?};
   echo(,(time()-_prg.ts)$3);

   _txt:=_CD.TXT+_txt;
   {? _CD.NR=1
   || _arr:=spli_str(_txt,'\t');
      _opis:='';
      _text:='';
      _RES.blank();
      _RES.TAB:=_arr[4];
      _RES.TRIG:=1+(2-_CD.CODE);
      _RES.FML:=_arr[5];

      _CD.cntx_psh();
::    Szukamy informacji o formule. Zakładamy, że na pewno istnieje.
      _CD.prefix(_RES.FML,'','F',);
      _txt:=_get(_CD);
      {? _txt<>''
      || obj_del(_arr);
         _arr:=spli_str(_txt,'\t');
         _RES.PROC:=_arr[6];
         _RES.FILE:=_arr[5];
         {? ~fexists('%1.fml' [_RES.FILE],1)
         || _text:='Nie odnaleziono pliku %1.fml'@ [_RES.FILE]
         |? ~exec('is_fun','#file',_RES.FILE,_RES.PROC)
         || _text:='W pliku %1.fml nie odnaleziono procedury \\%2.'@ [_RES.FILE,_RES.PROC]
         || _text:='\\%1\n%2' [_RES.PROC,exec('get_formula','libfml',_RES.PROC,_RES.FILE,1)]
         ?}
      ?};
::    Szukamy informacji o pierwszym parametrze formuły.
      _CD.prefix(_RES.FML+',1','','FP',);
      _txt:=_get(_CD);
      {? _txt<>''
      || obj_del(_arr);
         _arr:=spli_str(_txt,'\t');
         _RES.P1W:=_arr[4];
         _RES.P1K:=_arr[5]
      ?};
      _CD.cntx_pop();

      {? _RES.P1W=''
      || _RES.TYPE:='B';
         _opis:='Brak parametru.'
      |? _RES.P1W<>'_a'
      || _RES.TYPE:='W';
         _opis:='Wartość parametru różna od oczekiwanej.'
      ?};

      _RES.OK:={? _RES.TYPE='' || 'T' || 'N' ?};
      {? _RES.add()
      || {? _text<>''
         || _RES.memo_set(_text,'TEXT');
            _RES.memo_put(,'TEXT')
         ?};
         {? _opis<>''
         || _RES.memo_set(_opis,'OPIS');
            _RES.memo_put(,'OPIS')
         ?}
      ?};
      obj_del(_arr);
      _txt:=''
   ?};

   _CD.f_next()
!};
echo();
prgs_clr();

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='P'
   || _where:='OK=\\\\'T\\\\'';
      _ga:='W(P):W(P)';
      _hdr:='zapisy poprawne'@
   |? _akcja='B'
   || _where:='OK=\\\\'N\\\\'';
      _ga:='W(B):W(B)';
      _hdr:='zapisy błędne'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie zapisy'@
   ?};

   _RES.f_set('TAB,TRIG,FML',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_ws:=_RES.mk_sel('Formuły w wyzwalaczach "po"'@,,,'#reltriga',,,,,'U');
_RES.win_fld(_ws,,'TAB',,,,,,,,'Akronim tabeli'@);
_RES.win_fld(_ws,,'TRIG',,,3,,,,,'Typ wyzwalacza [A/P/D/M]'@);
_RES.win_fld(_ws,,'FML',,,20,,,,,'Nazwa formuły w MacroBUILDER-ze'@);
_RES.win_fld(_ws,,'PROC',,,20,,,,,'Nazwa procedury'@);
_RES.win_fld(_ws,,'FILE',,,20,,,,,'Nazwa pliku'@);
_RES.win_fld(_ws,,'TYPE',,,-3,,,,,'Kod typu błędu [B - brak parametru / W - nieprawidłowa wartość]'@);
_RES.win_fld(_ws,,'OPIS',,,60,,,,,'Opis błędu'@);
_RES.win_fld(_ws,,'OK',,,-3,,,,,'Zapis poprawny [T/N]'@,2,,"'T'","'N'");
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
_RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');

_wed:=_RES.mk_edit('Formuła w wyzwalaczu "po"'@,,'#reltriga');
_RES.win_efld(_wed,,'TEXT',,,171,-18,1,,1);

_grp:=_RES.grp_make('Parametr wyzwalaczy "po"'@,,'#reltrigagrp',,,,,'normal');
_RES.grp_sel(_grp,,_ws,,"params_set(_par:=params_get()); grp_edisp(_par.RES,_par.wed)",,,12,"","",,,'maximized');
_RES.grp_splt(_grp,,'horizontal','TEXT');
_RES.grp_edit(_grp,,_wed,,"","params_get().RES.memo_get(,'TEXT')","",,'maximized');

_RES.win_sel(_grp);

_szer:=80;
_we:=_RES.mk_edit('Parametr wyzwalacza "po"'@,,'#reltrigap');
_RES.win_esep(_we,'Dane podstawowe'@);
_RES.win_efld(_we,,'TAB',,,_szer,,,,,'Akronim tabeli'@);
_RES.win_efld(_we,,'TRIG',,,,,,,,,'radio-buttons',,
   'Add'@,"'A'",
   'Put'@,"'P'",
   'Del'@,"'U'",
   'Memo'@,"'M'"
);
_RES.win_efld(_we,,'FML',,,_szer,,,,,'Nazwa formuły w MacroBUILDER-ze'@);
_RES.win_efld(_we,,'PROC',,,_szer,,,,,'Nazwa procedury w pliku'@);
_RES.win_efld(_we,,'FILE',,,_szer,,,,,'Nazwa pliku'@);
_RES.win_efld(_we,,'TEXT',,,_szer,-5,,,,'Treść formuły'@);
_RES.win_efld(_we,,'P1W',,,_szer,,,,,'Wartość parametru'@);
_RES.win_efld(_we,,'P1K',,,_szer,,,,,'Komentarz'@);
_RES.win_esep(_we,'Wynik'@);
_RES.win_efld(_we,,'OPIS',,,_szer,-5,,,,'Opis błędu(-ów).'@);
_RES.win_efld(_we,,'OK',,,,,,,,,'check-box','check_label="%1"' ['Tak, zapis jest poprawny'@],"'T'","'N'");
_RES.win_edit(_we);

params_set(
   'RES',_RES,
   'ws',_ws,
   'wed',_wed
);
($_widok('B'))();
{? ~_skip_window || _RES.select() ?};
_RES


\def_xp_comm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Kontrola komentarzy pól tabeli / zmiennych.
::   WE: [_a] [NUMBER] - czy pomijać wyświetlanie okienek, domyślnie=0
::   WY: tabela _RES
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of(0)
|| _skip_window:=_a
|| _skip_window:=0
?};
progress(,'Proszę czekać ...'@,'Analiza definicji systemu'@,1);
_def:=app_info('def_name');
_CD:=comp_def('%1.def' [_def],,1);
prgs_clr();
{? type_of(_CD)=type_of(~~)
|| return(0)
?};

:: TP - Pole tabeli
:: ZP - Pole zmiennej
_CD.f_set('CODE,KEY,NR^',,'CODE=\'TP\' or CODE=\'ZP\'');
{? ~_CD.f_first()
|| FUN.emsg('Przeprowadzenie analizy definicji nie powiodło się.'@);
   return(0)
?};

:: Opis elementów typu "TP" i "ZP" (w polu _CD.TXT):
::    1 - Puste
::    2 - Kod (tutaj TP lub ZP).
::    3 - Nazwa tabeli.
::    4 - Akronim tabeli.
::    5 - Nazwa pola
::    6 - Nr pola w strukturze.
::    7 - Akronim pola.
::    8 - Nazwa słownika.
::    9 - Typ pola.
::   10 - Długość pola.
::   11 - Formuła na wzorzec.
::   12 - Komentarz.
::   13 - Formuła na wartość początkową.
::   14 - Formuła przed wyświetleniem.
::   15 - Formuła przed redagowaniem.
::   16 - Formuła na F3.
::   17 - Formuła po redagowaniu.
::   18 - Kolumna.
::   19 - ???.
::   20 - Format redagowania.
::   21 - Format wyświetlania.
::   22 - Podsumowanie.

_RES:=tab_tmp(5,
   'TZ','STRING[8]','Zasób'@,
   'TAB','STRING[8]','Akronim'@,
   'FLD','STRING[8]','Pole'@,
   'FTYPE','STRING[12]','Typ'@,
   'COMM','STRING[60]','Komentarz'@,
   'OK','STRING[1]','Pole z komentarzem'@
);

_prg:=obj_new('ts','step','size','proc','calc');
_prg.ts:=time();
_prg.step:=0;
_prg.size:=_CD.f_size();

_txt:='';
{!
|? _prg.step+=1;
   _prg.calc:=(_prg.step*100/_prg.size)$0;
   {? _prg.proc<>_prg.calc
   || _prg.proc:=_prg.calc;
      progress(_prg.proc,'Proszę czekać [%1%%] ...'@ [form(_prg.proc,3,0,'9.')],'Analiza pól tabel i zmiennych'@)
   ?};
   echo(,(time()-_prg.ts)$3);

   _txt:=_CD.TXT+_txt;
   {? _CD.NR=1
   || _arr:=spli_str(_txt,'\t');

      _RES.blank();
      _RES.TZ:={? 1+_arr[2]='T' || 'Tabela'@ || 'Zmienna'@ ?};
      _RES.TAB:=_arr[4];
      _RES.FLD:=_arr[7];
      _RES.FTYPE:=_arr[9];
      _RES.COMM:=_arr[12];
      _RES.OK:={? _RES.COMM='' || 'N' || 'T' ?};
      _RES.add();

      obj_del(_arr);
      _txt:=''
   ?};

   _CD.f_next()
!};
echo();
prgs_clr();

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='P'
   || _where:='OK=\\\\'T\\\\'';
      _ga:='W(P):W(P)';
      _hdr:='zapisy poprawne'@
   |? _akcja='B'
   || _where:='OK=\\\\'N\\\\'';
      _ga:='W(B):W(B)';
      _hdr:='zapisy błędne'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie zapisy'@
   ?};

   _RES.f_set('TZ,TAB,FLD',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_ws:=_RES.mk_sel('Komentarze pól tabel/zmiennych'@,,,'#rel_xp_comm',,,,,'U');
_RES.win_fld(_ws,,'TZ',,,,,,,,'Typ zasobu: Tabela/Zmienna'@);
_RES.win_fld(_ws,,'TAB',,,,,,,,'Akronim zasobu'@);
_RES.win_fld(_ws,,'FLD',,,,,,,,'Akronim pola'@);
_RES.win_fld(_ws,,'FTYPE',,,,,,,,'Typ pola'@);
_RES.win_fld(_ws,,'COMM',,,,,,,,'Komentarz pola'@);
_RES.win_fld(_ws,,'OK',,,-3,,,,,'Pole z komentarzem [T/N]'@,2,,"'T'","'N'");
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
_RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');
_RES.win_sel(_ws);

params_set(
   'RES',_RES,
   'ws',_ws
);
($_widok('B'))();
{? ~_skip_window || _RES.select() ?};
_RES


\def_flat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Kontrola flat design w oknach redagowania i wertowania.
::   WE: [_a] [NUMBER] - czy pomijać wyświetlanie okienek, domyślnie=0
::   WY: tabela _RES
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of(0)
|| _skip_window:=_a
|| _skip_window:=0
?};
progress(,'Proszę czekać ...'@,'Analiza definicji systemu'@,1);
_def:=app_info('def_name');
_CD:=comp_def('%1.def' [_def],,1);
prgs_clr();
{? type_of(_CD)=type_of(~~)
|| return(0)
?};

:: TW - Okienko wertowania tabeli
:: TR - Okienko redagowania tabeli
:: ZR - Okienko redagowania zmiennej
_CD.f_set('CODE,KEY,NR^',,'CODE=\'TW\' or CODE=\'TR\' or CODE=\'ZR\'');
{? ~_CD.f_first()
|| FUN.emsg('Przeprowadzenie analizy definicji nie powiodło się.'@);
   return(0)
?};

_RES:=tab_tmp(5,
   'TZ','STRING[8]','Zasób'@,
   'TAB','STRING[8]','Akronim'@,
   'TW','STRING[12]'@,'Typ okna'@,
   'WND','STRING[8]','Okno'@,
   'OK','STRING[1]','Flat design'@
);

_prg:=obj_new('ts','step','size','proc','calc');
_prg.ts:=time();
_prg.step:=0;
_prg.size:=_CD.f_size();

_txt:='';
{!
|? _prg.step+=1;
   _prg.calc:=(_prg.step*100/_prg.size)$0;
   {? _prg.proc<>_prg.calc
   || _prg.proc:=_prg.calc;
      progress(_prg.proc,'Proszę czekać [%1%%] ...'@ [form(_prg.proc,3,0,'9.')],'Analiza okien'@)
   ?};
   echo(,(time()-_prg.ts)$3);

   _txt:=_CD.TXT+_txt;
   {? _CD.NR=1
   || _arr:=spli_str(_txt,'\t');

      _RES.blank();
      _RES.TZ:={? 1+_arr[2]='T' || 'Tabela'@ || 'Zmienna'@ ?};
      _RES.TAB:=_arr[4];
      {? _CD.CODE+1='R'
      || _RES.TW:='Redagowania'@;
         _RES.WND:=_arr[5];
         _RES.OK:={? _arr[22]='1' || 'T' || 'N' ?}
      || _RES.TW:='Wertowania'@;
         _RES.WND:=_arr[6];
         _RES.OK:={? _arr[40]='1' || 'T' || 'N' ?}
      ?};
      _RES.add();
      obj_del(_arr);
      _txt:=''
   ?};
   _CD.f_next()
!};
echo();
prgs_clr();

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='P'
   || _where:='OK=\\\\'T\\\\'';
      _ga:='W(P):W(P)';
      _hdr:='zapisy poprawne'@
   |? _akcja='B'
   || _where:='OK=\\\\'N\\\\'';
      _ga:='W(B):W(B)';
      _hdr:='zapisy błędne'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie zapisy'@
   ?};

   _RES.f_set('TZ,TAB,TW,WND',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_ws:=_RES.mk_sel('Flat design'@,,,'#relflat',,,,,'U');
_RES.win_fld(_ws,,'TZ',,,,,,,,'Typ zasobu: Tabela/Zmienna'@);
_RES.win_fld(_ws,,'TAB',,,,,,,,'Akronim zasobu'@);
_RES.win_fld(_ws,,'TW',,,,,,,,'Typ okna: Redagowania/Wertowania'@);
_RES.win_fld(_ws,,'WND',,,,,,,,'Akronim okna'@);
_RES.win_fld(_ws,,'OK',,,-3,,,,,'Flat design [T/N]'@,2,,"'T'","'N'");
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
_RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');
_RES.win_sel(_ws);

params_set(
   'RES',_RES,
   'ws',_ws
);
($_widok('B'))();
{? ~_skip_window || _RES.select() ?};
_RES


\def_twa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Kontrola poprawności nazw akcji okien wertowania.
::   WE: [_a] [NUMBER] - czy pomijać wyświetlanie okienek, domyślnie=0
::   WY: tabela _RES
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of(0)
|| _skip_window:=_a
|| _skip_window:=0
?};
progress(,'Proszę czekać ...'@,'Analiza definicji systemu'@,1);
_def:=app_info('def_name');
_CD:=comp_def('%1.def' [_def],,1);
prgs_clr();
{? type_of(_CD)=type_of(~~)
|| return(0)
?};

:: TWAB - Akcja okienka wertowania tabeli niepusta dziedzina
:: TWAE - Akcja okienka wertowania tabeli pusta dziedzina
_CD.f_set('CODE,KEY,NR^',,'CODE=\'TWAB\' or CODE=\'TWAE\'');
{? ~_CD.f_first()
|| FUN.emsg('Przeprowadzenie analizy definicji nie powiodło się.'@);
   return(0)
?};

:: Opis elementów typu "TWAB" i "TWAE" (w polu _CD.TXT):
::    1 - Puste.
::    2 - Kod, tutaj TWAB lub TWAE.
::    3 - Nazwa tabeli.
::    4 - Akronim tabeli.
::    5 - Nieużywane (zawsze N).
::    6 - Akronim okna.
::    7 - Dziedzina: E - pusta / B - niepusta
::    8 - Poziom menu.
::    9 - Ścieżka dostępu (dla akcji zagłębionych).
::   10 - Nazwa akcji (dla akcji standardowych może być pusta).
::   11 - Wyróznik.
::   12 - Nazwa menu nadrzędnego.
::   13 - Typ akcji ('f'ormuła/'m'enu/'d'ołącz/'p'opraw/'u'sun/'r'ekord/'o'kno/'s'zukaj/'k'olejnosc/...)
::   14 - Numer porządkowy.
::   15 - Podpowiedź.
::   16 - Formuła - przed.
::   17 - Formuła - po.
::   18 - Akcja grupowa ('T'/'N'/'').
::   19 - Grupa - przed.
::   20 - Grupa - po.
::   21 - Nieużywane.
::   22 - Ikona.
::   23 - Identyfikator dostępu.
::   24 - Akcja na belce? [0/1]
::   25 - Akcja wyróżniona dla niepustej dziedziny? [0/1]
::   26 - Akcja wyróżniona dla pustej dziedziny? [0/1]

_RES:=tab_tmp(6,
   'TAB','STRING[8]','Tabela'@,
   'WND','STRING[8]','Okno'@,
   'EMPTY','STRING[1]','Pusta dziedzina'@,
   'PATH','STRING[8]','Ścieżka'@,
   'KIND','STRING[1]','Rodzaj'@,
   'ACTION','STRING[40]','Akcja'@,
   'CHAR','STRING[1]','Wyróżnik'@,
   'TYPE','STRING[1]','Typ błędu'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
);

_prg:=obj_new('ts','step','size','proc','calc');
_prg.ts:=time();
_prg.step:=0;
_prg.size:=_CD.f_size();

_txt:='';
{!
|? _prg.step+=1;
   _prg.calc:=(_prg.step*100/_prg.size)$0;
   {? _prg.proc<>_prg.calc
   || _prg.proc:=_prg.calc;
      progress(_prg.proc,'Proszę czekać [%1%%] ...'@ [form(_prg.proc,3,0,'9.')],'Analiza nazw akcji okien wertowania'@)
   ?};
   echo(,(time()-_prg.ts)$3);

   _txt:=_CD.TXT+_txt;
   {? _CD.NR=1
   || _arr:=spli_str(_txt,'\t');
      _opis:='';
      _RES.blank();
      _RES.TAB:=_arr[4];
      _RES.WND:=_arr[6];
      _RES.EMPTY:={? _arr[7]='E' || 'T' || 'N' ?};
      _RES.PATH:=_arr[9];
      _RES.KIND:=_arr[13];
      _RES.ACTION:=form(_arr[10]);
      _RES.CHAR:=_arr[11];
      {? _RES.ACTION<>'' & _RES.ACTION+1<>'&' & 2+_RES.ACTION<>'--'
      || _duza:=0;
         _mala:=0;
         {! _lp:=1 .. +_RES.ACTION
         |? _mala=0 | _duza=0
         |! _znak:=(_lp+_RES.ACTION)+1;
            {? ~_mala & 'a'<=_znak & _znak<='ż'
            || _mala:=_lp
            |? ~_duza & 'A'<=_znak & _znak<='Ż'
            || _duza:=_lp
            ?}
         !};
         {? _mala>0 & _mala<_duza
         || _RES.TYPE:='1';
            _opis:='Nazwa akcji powinna zaczynać się od dużej litery.'@
         |? ~_duza
         || _RES.TYPE:='W';
            _opis:='Nazwa akcji nie zawiera wyrożnika.'@
         |? _poz:=_RES.ACTION*'&';
            _wyr:=~-{? _poz || 1+(_poz-_RES.ACTION) || (_duza+_RES.ACTION)+1 ?};
            _wyr<>_RES.CHAR
         || _RES.TYPE:='Z';
            _opis:='Brak zgodności nazwy akcji z wyróżnikiem.'@
         ?}
      ?};

      _RES.OK:={? _RES.TYPE='' || 'T' || 'N' ?};
      {? _RES.add() & _opis<>''
      || _RES.memo_set(_opis,'OPIS');
         _RES.memo_put(,'OPIS')
      ?};
      obj_del(_arr);
      _txt:=''
   ?};

   _CD.f_next()
!};
echo();
prgs_clr();

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='P'
   || _where:='OK=\\\\'T\\\\'';
      _ga:='W(P):W(P)';
      _hdr:='zapisy poprawne'@
   |? _akcja='B'
   || _where:='OK=\\\\'N\\\\'';
      _ga:='W(B):W(B)';
      _hdr:='zapisy błędne'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie zapisy'@
   ?};

   _RES.f_set('TAB,WND,EMPTY,PATH,KIND,ACTION',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_ws:=_RES.mk_sel('Akcje okien wertowania'@,,,'#rel_def_twa',,,,,'U');
_RES.win_fld(_ws,,'TAB',,,,,,,,'Akronim tabeli'@);
_RES.win_fld(_ws,,'WND',,,,,,,,'Akronim okna'@);
_RES.win_fld(_ws,,'EMPTY',,,-3,,,,,'Akcja dla pustej dziedziny? [T/N]'@,2,,"'T'","'N'");
_RES.win_fld(_ws,,'PATH',,,7,,,,,'Ścieżka dostępu dla pozycji menu'@);
_RES.win_fld(_ws,,'KIND',,,-3,,,,,'Kod rodzaju akcji'@);
_RES.win_fld(_ws,,'ACTION',,,30,,,,,'Nazwa akcji'@);
_RES.win_fld(_ws,,'CHAR',,,-2,,,,,'Wyróznik akcji'@);
_RES.win_fld(_ws,,'TYPE',,,-3,,,,,'Kod typu błędu [1/W/Z]'@);
_RES.win_fld(_ws,,'OPIS',,,60,,,,,'Opis błędu'@);
_RES.win_fld(_ws,,'OK',,,-3,,,,,'Zapis poprawny [T/N]'@,2,,"'T'","'N'");
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
_RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');
_RES.win_sel(_ws);

_szer:=40;
_we:=_RES.mk_edit('Akcja okna wertowania'@,,'#rel_def_twa');
_RES.win_esep(_we,'Dane podstawowe'@);
_RES.win_efld(_we,,'TAB',,,_szer,,,,,'Akronim tabeli'@);
_RES.win_efld(_we,,'WND',,,_szer,,,,,'Akronim okna'@);
_RES.win_efld(_we,,'EMPTY',,,,,,,,,'check-box','check_label="%1"' ['Tak, akcja dla pustej dziedziny'@],"'T'","'N'");
_RES.win_efld(_we,,'PATH',,,_szer,,,,,'Ścieżka dostępu dla pozycji menu'@);
_RES.win_efld(_we,,'KIND',,,,,,,,,'radio-buttons',,
   'Menu'@,"'m'",
   'Formuła'@,"'f'",
   'Dołącz'@,"'d'",
   'Popraw'@,"'p'",
   'Usuń'@,"'u'",
   'Szukaj'@,"'s'",
   'Kolejność'@,"'k'",
   'Rekord'@,"'r'",
   'Okienko'@,"'o'",
   'Wyświetl'@,"'w'",
   'F3'@,"'3'",
   'Dołącz za'@,"%19",
   '+Słownik'@,"'+'"
);
_RES.win_efld(_we,,'ACTION',,,_szer,,,,,'Nazwa akcji'@);
_RES.win_efld(_we,,'CHAR',,,_szer,,,,,'Wyróznik akcji'@);
_RES.win_esep(_we,'Wynik'@);
_RES.win_efld(_we,,'OPIS',,,_szer,-5,,,,'Opis błędu(-ów).'@);
_RES.win_efld(_we,,'OK',,,,,,,,,'check-box','check_label="%1"' ['Tak, zapis jest poprawny'@],"'T'","'N'");
_RES.win_edit(_we);

params_set(
   'RES',_RES,
   'ws',_ws
);
($_widok('B'))();
{? ~_skip_window || _RES.select() ?};
_RES


\def_tw_zmiany
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.42]
:: OPIS: Test występowania akcji "Zmiany" w oknach wertowania.
::   WE: [_a] [NUMBER] - czy pomijać wyświetlanie okienek, domyślnie=0
::   WY: tabela _RES
::----------------------------------------------------------------------------------------------------------------------
{? _>0 & type_of(_a)=type_of(0)
|| _skip_window:=_a
|| _skip_window:=0
?};
progress(,'Proszę czekać ...'@,'Analiza definicji systemu'@,1);
_def:=app_info('def_name');
_CD:=comp_def('%1.def' [_def],,1);
prgs_clr();
{? type_of(_CD)=type_of(~~)
|| return(0)
?};

:: TW   - Okienko wertowania tabeli
:: TWAB - Akcja okienka wertowania tabeli niepusta dziedzina
:: TWAE - Akcja okienka wertowania tabeli pusta dziedzina
_CD.f_set('CODE,KEY,NR^',,'CODE=\'TW\' or CODE=\'TWAB\' or CODE=\'TWAE\'');
{? ~_CD.f_first()
|| FUN.emsg('Przeprowadzenie analizy definicji nie powiodło się.'@);
   return(0)
?};

:: Opis elementów dla typów "TWAB" i "TWAE" - patrz formuła \def_twa.
:: Opis (wybranych) elementów typu "TW" (w polu _CD.TXT):
::    1 - Puste.
::    2 - Kod, tutaj TW.
::    3 - Nazwa tabeli.
::    4 - Akronim tabeli.
::    5 - Okno grupowe [T/N].
::    6 - Akronim okna.
::    7 - Komentarz.
::    8 - Tytuł.
::    .
::   13 - Okno grupowe [T/N].
::   14 - Formuła na "Wypełnienie"
::   21 - Wyrównanie etykiet [P/L/]
::   22 - Wyróżniona akcja niepustej dziedziny
::   23 - Wyróżniona akcja pustej dziedziny
::   ..
::   41 - Wywołanie (M=jTerm / W=webTerm)
::   ..
::   51 - ???

_RES:=tab_tmp(3,
   'TAB','STRING[8]','Tabela'@,
   'WND','STRING[8]','Okno'@,
   'EMPTY','STRING[1]','Pusta dziedzina'@,
   'PATH','STRING[8]','Ścieżka'@,
   'ACTION','STRING[40]','Akcja'@,
   'CHAR','STRING[1]','Wyróżnik'@,
   'COMMENT','STRING[60]','Komentarz'@,
   'FMLB','STRING[31]','Formuła - przed'@,
   'FMLA','STRING[31]','Formuła - po'@,
   'TYPE','STRING[1]','Typ błędu'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
);

_prg:=obj_new('ts','step','size','proc','calc');
_prg.ts:=time();
_prg.step:=0;
_prg.size:=_CD.f_size();

_txt:='';
{!
|? _prg.step+=1;
   _prg.calc:=(_prg.step*100/_prg.size)$0;
   {? _prg.proc<>_prg.calc
   || _prg.proc:=_prg.calc;
      progress(_prg.proc,'Proszę czekać [%1%%] ...'@ [form(_prg.proc,3,0,'9.')],'Analiza okien wertowania'@)
   ?};
   echo(,(time()-_prg.ts)$3);

   _txt:=_CD.TXT+_txt;
   {? _CD.NR=1
   || _arr:=spli_str(_txt,'\t');
      _act:='';
      _opis:='';
      {? _arr[2]='TW' & _arr[41]='M'
      || {? _arr[5]='N' & ~_RES.find_key(_arr[4],_arr[6],'',)
         || _RES.blank();
            _RES.TAB:=_arr[4];
            _RES.WND:=_arr[6];
::          Wstępnie zakładamy, że akcji nie ma.
            _RES.TYPE:='-';
            _opis:='Brak akcji "Zmiany".'@;
            _act:='add'
         ?}
      |? (_arr[2]='TWAB' | _arr[2]='TWAE') & _arr[13]='f'
      || _akcja:=gsub(-_arr[10],'&','');
         {? _akcja='zmiany'
         || {? ~_RES.find_key(_arr[4],_arr[6],'',)
            || _RES.blank();
               _RES.TAB:=_arr[4];
               _RES.WND:=_arr[6];
               _act:='add'
            || _RES.TYPE:='';
               _opis:='!';
               _act:='put'
            ?};
            _RES.EMPTY:={? _arr[7]='E' || 'T' || 'N' ?};
            _RES.PATH:=_arr[9];
            _RES.ACTION:=_arr[10];
            _RES.CHAR:=_arr[11];
            _RES.COMMENT:=_arr[15];
            _RES.FMLB:=_arr[16];
            _RES.FMLA:=_arr[17];

            {? ~(_RES.ACTION='Zmian&y' & _RES.CHAR='Y')
            || _RES.TYPE:={? _RES.TYPE='' || 'N' || 'X' ?};
               _opis+='Niestandardowa nazwa lub wyróżnik akcji.'@+'\n'
            ?};
            {? ~(_RES.FMLB='ZMIANY()' | _RES.FMLA='ZMIANY()')
            || _RES.TYPE:={? _RES.TYPE='' || 'F' || 'X' ?};
               _opis+='Niestandardowa formuła.'@+'\n'
            ?};
            {? _RES.COMMENT<>'Informacje o modyfikacjach bieżącego zapisu'
            || _RES.TYPE:={? _RES.TYPE='' || 'C' || 'X' ?};
               _opis+='Niestandardowy komentarz.'@+'\n'
            ?}
         ?}
      ?};
      {? _act<>''
      || _RES.OK:={? _RES.TYPE='' || 'T' || 'N' ?};
         {? {? _act='put' || _RES.put() || _RES.add() ?} & _opis<>''
         || {? 1+_opis='!'
            || _opis:=1-_opis
            ?};
            _RES.memo_set(_opis,'OPIS');
            _RES.memo_put(,'OPIS')
         ?}
      ?};

      obj_del(_arr);
      _txt:=''
   ?};

   _CD.f_next()
!};
echo();
prgs_clr();

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='P'
   || _where:='OK=\\\\'T\\\\'';
      _ga:='W(P):W(P)';
      _hdr:='zapisy poprawne'@
   |? _akcja='B'
   || _where:='OK=\\\\'N\\\\'';
      _ga:='W(B):W(B)';
      _hdr:='zapisy błędne'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie zapisy'@
   ?};

   _RES.f_set('TAB,WND,EMPTY,PATH,ACTION',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_ws:=_RES.mk_sel('Akcja "Zmiany" w oknach wertowania'@,,,'#rel_tw_zmiany',,,,,'U');
_RES.win_fld(_ws,,'TAB',,,,,,,,'Akronim tabeli'@);
_RES.win_fld(_ws,,'WND',,,,,,,,'Akronim okna'@);
_RES.win_fld(_ws,,'EMPTY',,,-3,,,,,'Akcja dla pustej dziedziny? [T/N]'@,2,,"'T'","'N'","''");
_RES.win_fld(_ws,,'PATH',,,7,,,,,'Ścieżka dostępu dla pozycji menu'@);
_RES.win_fld(_ws,,'ACTION',,,30,,,,,'Nazwa akcji'@);
_RES.win_fld(_ws,,'CHAR',,,-2,,,,,'Wyróznik akcji'@);
_RES.win_fld(_ws,,'COMMENT',,,20,,,,,'Komentarz'@);
_RES.win_fld(_ws,,'FMLB',,,20,,,,,'Nazwa formuły - przed'@);
_RES.win_fld(_ws,,'FMLA',,,20,,,,,'Nazwa formuły - po'@);
_RES.win_fld(_ws,,'TYPE',,,-3,,,,,'Kod typu błędu [-/N/F/C/X]'@);
_RES.win_fld(_ws,,'OPIS',,,60,,,,,'Opis błędu'@);
_RES.win_fld(_ws,,'OK',,,-3,,,,,'Zapis poprawny [T/N]'@,2,,"'T'","'N'");
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
_RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');
_RES.win_sel(_ws);

_we:=_RES.mk_edit('Akcja "Zmiany" w oknie wertowania'@,,'#rel_tw_zmiany');
_RES.win_esep(_we,'Dane podstawowe'@);
_RES.win_efld(_we,,'TAB',,,,,,,,'Akronim tabeli'@);
_RES.win_efld(_we,,'WND',,,,,,,,'Akronim okna'@);
_RES.win_efld(_we,,'EMPTY',,,,,,,,,'check-box','check_label="%1"' ['Tak, akcja dla pustej dziedziny'@],"'T'","'N'");
_RES.win_efld(_we,,'PATH',,,,,,,,'Ścieżka dostępu dla pozycji menu'@);
_RES.win_efld(_we,,'ACTION',,,,,,,,'Nazwa akcji'@);
_RES.win_efld(_we,,'CHAR',,,2,,,,,'Wyróznik akcji'@);
_RES.win_efld(_we,,'COMMENT',,,,,,,,'Komentarz'@);
_RES.win_efld(_we,,'FMLB',,,,,,,,'Formuła przed akcją'@);
_RES.win_efld(_we,,'FMLA',,,,,,,,'Formuła po akcji'@);
_RES.win_efld(_we,,'OPIS',,,40,-5,,,,'Opis błędu(-ów).'@);
_RES.win_efld(_we,,'OK',,,,,,,,,'check-box','check_label="%1"' ['Tak, zapis jest poprawny'@],"'T'","'N'");
_RES.win_edit(_we);

params_set(
   'RES',_RES,
   'ws',_ws
);
($_widok('B'))();
{? ~_skip_window || _RES.select() ?};
_RES


\tran_dir
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.02]
:: OPIS: Formuła odpowiedzialna za generowanie pliku z katalogami (do transferu z Xpertis'a).
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_cfg:=exec('get_cfg','tran_cp');

_fn:=_cfg.dirs;

_crcb:=exec('_crc','%release',_fn);
exec('t_dirs','tran_cp');
_crca:=exec('_crc','%release',_fn);

{? _crcb=_crca
|| FUN.info('Plik %1 z katalogu %2 NIE został zmieniony.'@ [_fn,pth_dir(_fn)])
|| FUN.info('Plik %1 z katalogu %2 został zmieniony.'@ [_fn,pth_dir(_fn)])
?};

~~


\rep_titles
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.02]
:: OPIS: Przygotowanie pliku z tytułami raportów dla systemu tłumaczeń.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_fn:='rep_titles.fml';

:: Najpierw usuńmy wszystkie *.rpt (w ramach generowania i tak kompilujemy raporty).
_ok:=1;
_FILES:=files('*.rpt');
_loop:=_FILES.first();
{!
|? {? 1+_FILES.FILENAME<>'_'
   || _ok:=_ok & ferase(_FILES.FILENAME,1)
   ?};
   _loop:=_FILES.next()
!};
{? ~_ok
|| FUN.emsg('Usunięcie plików *.rpt nie powiodło się.\nPrzygotowanie tłumaczeń nie jest możliwe.'@);
   return()
?};

_crcb:=exec('_crc','%release',_fn);
exec('gen_rep_titles','#b_report',1,1);
_crca:=exec('_crc','%release',_fn);

{? _crcb=_crca
|| FUN.info('Plik %1 z katalogu %2 NIE został zmieniony.'@ [_fn,pth_dir(_fn)])
|| FUN.info('Plik %1 z katalogu %2 został zmieniony.'@ [_fn,pth_dir(_fn)])
?};

~~


\svn_blame
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.14]
:: OPIS: Formuła do obsługi mechanizmu pokazującego autora zmian.
::   WE:  _a  [STRING] - Pełna ścieżka dostępu do pliku.
::       [_b] [NUMBER] - Numer linii w pliku, która ma być wyróżniona.
::   WY:
:: ~OST: INFEXISTS,INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('')
|| _path:=_a
|| return()
?};
_line:={? var_pres('_b')=type_of(0) || '/line:%1' [$_b] || '' ?};

_profile:='develop.upf';
_sekcja:='SVN';
_parametr:='TortoiseProc';
_proc:=exec('get','#profile',_profile,_sekcja,_parametr);
{? _proc='' | fexists('@'+_proc,0)<>1
|| _proc:=exec('filechooser','#file','Wskaż plik TortoiseProc.exe',0,'exe','Pliki wykonywalne (*.exe)',,'FILES_ONLY');
   {? _proc=''
   || return()
   ?};
   exec('set','#profile',_profile,_sekcja,_parametr,_proc)
?};

_cmd:='%1 /command:blame /closeonend /startrev:1 /endrev:-1 /path:"%2" %3' [_proc,_path,_line];

system(_cmd);

~~


\dom2update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Dziedziny, które wymagają aktualizacji ze względu na nowe lub istotnie zmienione czynności.
::   WE: [_a] [NUMBER] - Tryb wsadowy (bez okna z wynikiem) [0*/1].
::       [_b] [STRING] - Ścieżka dostępu do katalogu lokalnego (ale bez @) z plikami czynności OSTATNIO wyemitowanej
::                       wersji. Jeżeli parametr nie zostanie podany, a tryb nie jest wsadowy, to użytkownik będzie
::                       musiał podać ją dialogowo.
::   WY: Tabela z wynikami przetwarzania lub treść komunikatu błędu.
:: ~OST: INFDIR,INFEXISTS,INFILECHOOSER,INFOPEN
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;

_verE:=obj_new('dir','sep','FILE');
_verE.dir:={? var_pres('_b')=type_of('') || _b || '' ?};
_verE.sep:=exec('sep','#file',0);

{? _batch
|| {? _verE.dir=''
   || return('Brak ścieżki dostępu do katalogu z plikami czynności.'@)
   |? fexists('@'+_verE.dir)<>2
   || return('Nieprawidłowa ścieżka dostępu do katalogu z plikami czynności.'@)
   ?}

|| _profile:='develop.upf';
   _sekcja:='DOM2UPDATE';
   _parametr:='DIR';
   {? _verE.dir=''
   || _verE.dir:=exec('get','#profile',_profile,_sekcja,_parametr)
   ?};
   _dir:=exec('filechooser','#file',
      'Folder z plikami czynności ostatnio wyemitowanej wersji'@,0,'',,0,'DIRECTORIES_ONLY',,_verE.dir);
   {? _dir=''
   || return('Rezygnacja')
   |? _verE.dir<>_dir
   || _verE.dir:={? _dir+1=_verE.sep || _dir-1 || _dir ?};
      exec('set','#profile',_profile,_sekcja,_parametr,_verE.dir)
   ?}
?};

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

_verE.FILE:=fdir('@'+_verE.dir,1);
_verE.FILE.f_set('NAME',,'TYPE=\'f\' and NAME like \'!___\____\_____.fml\' escape \'\\\'   ' );
{? ~_verE.FILE.f_first()
|| _msg:='Brak plików czynności poprzedniej wersji.'@;
   {? ~_batch
   || FUN.error(_msg)
   ?};
   return(_msg)
?};

_ACTION:=app_info('task');
{? ~_ACTION.first()
|| _msg:='Brak czynności w definicji systemu.'@;
   {? ~_batch
   || FUN.error(_msg)
   ?};
   return(_msg)
?};

_RES:=tab_tmp(1,
   'SYMBOL','STRING[12]','Symbol czynności'@,
   'NAZWA','STRING[30]','Nazwa czynności'@,
   'DANE','STRING[1]','Dane aplikacji'@,
   'STATUS','STRING[10]','Status'@,
   'OPIS','SYS_MEMO','Opis'@
::   Nowa / Zmieniona / Bez zmian / Nadmiar
);

:: Domeny wymagające aktualizacji.
_dom2upd:='';

B_ACTION.cntx_psh();
B_ACTION.index('UNIK');
B_ACTION.prefix();

_prg:=obj_new('ts','step','size','proc','calc');
_prg.ts:=time();
_prg.step:=0;
_prg.size:=_ACTION.size();
{!
|? _prg.step+=1;
   _prg.calc:=(_prg.step*100/_prg.size)$0;
   {? ~_batch
   || {? _prg.proc<>_prg.calc
      || _prg.proc:=_prg.calc;
         progress(_prg.proc,'Proszę czekać [%1%%] ...'@ [form(_prg.proc,3,0,'9.')],'Analiza definicji czynności'@)
      ?};
      echo(,(time()-_prg.ts)$3)
   ?};

   _opis:='';
   _fn:='!%1.fml' [-_ACTION.SYMBOL];
   _hashW:=
      {? fexists(_fn,1)
      || exec('hash_core','#b_action',_fn)
      || _opis+=' '+'Brak pliku czynności na dysku.'@;
         ''
      ?};

   _RES.blank();
   _RES.SYMBOL:=_ACTION.SYMBOL;
   _RES.NAZWA:=_ACTION.NAME;
   _RES.DANE:='N';
   {? ~B_ACTION.find_key(_ACTION.SYMBOL,)
   || _opis+=' '+'Brak czynności w danych aplikacji (B_ACTION).'@
   |? _hashW<>B_ACTION.PAR_HASH
   || _opis+=' '+'Dane aplikacji (B_ACTION) wymagają aktualizacji.'@
   || _RES.DANE:='T'
   ?};
   {? _verE.FILE.f_find(_fn,)
   || {? _hashW=exec('hash_core','#b_action',fopen('@%1%2%3' [_verE.dir,_verE.sep,_fn],'ur',0,0,1))
      || _RES.STATUS:='Bez zmian'
      || _RES.STATUS:='Zmiana';
         _opis+=' '+'W czynności zmieniły się parametry - wymagana jest aktualizacja.'@
      ?}
   || _RES.STATUS:='Nowa'
   ?};
   {? _RES.STATUS<>'Bez zmian' & _dom2upd*'.%1'[_ACTION.B_DOM]=0
   || _dom2upd+='.%1' [_ACTION.B_DOM]
   ?};
   _RES.add();
   {? _opis<>''
   || _RES.memo_set(|_opis,'OPIS');
      _RES.memo_put()
   ?};

   _ACTION.next()
!};
echo();
prgs_clr();

B_ACTION.cntx_pop();

_ret:=1-_dom2upd;

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

_FILE:=files('!???_???_????.fml',1);
{? _FILE.first()
|| {!
   |? _act:=~(1-_FILE.FILENAME-4);
      {? ~_RES.find_key(_act,)
      || _RES.blank();
         _RES.SYMBOL:=_act;
         _RES.STATUS:='Nadmiar';
         _RES.add();
         _RES.memo_set('Nadmiarowy plik (bez czynności) na dysku.'@,'OPIS');
         _RES.memo_put()
      ?};
      _FILE.next()
   !}
?};

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

{? _batch
|| return(_RES)
?};

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='N'
   || _where:='DANE=\\\\'T\\\\' or STATUS=\\\\'Bez zmian\\\\'';
      _ga:='W(N):W(N)';
      _hdr:='niewymagające aktualizacji'@
   |? _akcja='Z'
   || _where:='DANE=\\\\'N\\\\' or NOT STATUS=\\\\'Bez zmian\\\\'';
      _ga:='W(Z):W(Z)';
      _hdr:='wymagające aktualizacji'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie'@
   ?};

   _RES.f_set('SYMBOL',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_ws:=_RES.mk_sel('Czynności'@,,,'#reldom2update',,,,,'U');
_RES.win_fld(_ws,,'SYMBOL');
_RES.win_fld(_ws,,'NAZWA');
_RES.win_fld(_ws,,'DANE',,,-3,,,,,'Dane aktualne [T/N]'@,2,,"'T'","'N'");
_RES.win_fld(_ws,,'STATUS');
_RES.win_fld(_ws,,'OPIS',,,90);
_RES.win_act(_ws,,'Formuła','Dziedziny do &aktualizacji'@@,,,
   $("exec('edit_memo','#edit','"+_ret+"','Dziedziny do aktualizacji',,,,,0,0)"),,,,,,
   'A'
);
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &niezmienione'@@,'Widok'@,,$_widok('N'),,,,,,'N');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &zmienione'@@,'Widok'@,,$_widok('Z'),,,,,,'Z');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');
_RES.win_btn(_ws,'text=%1' ['Pokaż &niezmienione'@],'menu:WN');
_RES.win_btn(_ws,'text=%1' ['Pokaż &zmienione'@],'menu:WZ');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_btn(_ws,'text=%1,panel=bottom' ['Dziedziny do &aktualizacji'@],'menu:A');
_RES.win_sel(_ws);
_RES.win_edit(_RES.mk_edit('Czynność'@,1,'#reldom2update'));

params_set(
   'RES',_RES,
   'ws',_ws
);
($_widok('Z'))();
_RES.select();

_RES


\proc2update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Procesy, które wymagają aktualizacji.
::   WE: [_a] [NUMBER] - Tryb wsadowy (bez okna z wynikiem) [0*/1].
::       [_b] [STRING] - Ścieżka (lokalna) dostępu do katalogu z plikami *.graphml.
::                       Jeżeli parametr nie zostanie podany, a tryb nie jest wsadowy, to użytkownik będzie musiał
::                       podać ją dialogowo.
::   WY:
:: ~OST: INFEXISTS,INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;

_dir:={? var_pres('_b')=type_of('') || _b || '' ?};

{? _batch
|| {? _dir=''
   || return('Brak ścieżki dostępu do katalogu z plikami *.graphml.'@)
   |? fexists('@'+_dir)<>2
   || return('Nieprawidłowa ścieżka dostępu do katalogu z plikami *.graphml.'@)
   ?}

|| _profile:='develop.upf';
   _sekcja:='PROC2UPDATE';
   _parametr:='DIR';
   {? _dir=''
   || _dir:=exec('get','#profile',_profile,_sekcja,_parametr)
   ?};
   _ret:=exec('filechooser','#file','Folder z plikami *.graphml bieżącej wersji'@,0,'',,0,'DIRECTORIES_ONLY',,_dir);
   {? _ret=''
   || return('Rezygnacja')
   |? _dir<>_ret
   || _dir:=_ret;
      exec('set','#profile',_profile,_sekcja,_parametr,_dir)
   ?}
?};

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

:: Tabela wynikowa.
_RES:=tab_tmp(3,
   'PROC','STRING[255]','Nazwa procesu'@,
   'ACT','STRING[12]','Symbol czynności',
   'HASH','STRING[40]','Hash czynności w procesie'@,
   'OK','STRING[1]','Definicja aktualna'@
);

:: Tabela pomocnicza.
_ACT:=tab_tmp(1,
   'UID','STRING[12]','Symbol czynności',
   'HASH','STRING[40]','Hash czynności na dysku'@
);

:: Tabela z wszystkimi plikami z katalogu.
_TFILE:=exec('dir','#file','@'+_dir);
{? ~_TFILE.first()
|| _msg:='Brak plików w katalogu.'@;
   {? ~_batch
   || FUN.error(_msg)
   ?};
   return(_msg)
?};

_sep:=exec('separator','#b_export');

_prg:=obj_new('ts','step','size','proc','calc');
_prg.ts:=time();
_prg.step:=0;
_prg.size:=_TFILE.size();
{!
|? _prg.step+=1;
   _prg.calc:=(_prg.step*100/_prg.size)$0;
   {? ~_batch
   || {? _prg.proc<>_prg.calc
      || _prg.proc:=_prg.calc;
         progress(_prg.proc,'Proszę czekać [%1%%] ...'@ [form(_prg.proc,3,0,'9.')],'Analiza plików *.graphml'@)
      ?};
      echo(,(time()-_prg.ts)$3)
   ?};
   {? _TFILE.FILENAME+8='.graphml'
   || _gml:=exec('get_info','#b_export','@'+_TFILE.FILEPATH,1);
      {? type_of(_gml)=type_of(@.CLASS.FILE_T)
      || {!
         |? _linia:=_gml.fread(); _linia<>'\n'
         |! {? _linia<>''
            || _split:=spli_str(_linia,_sep);
               {? _split[1]*'obj_actchk'
               || _obj:=exec('read_object','#b_export',_linia);
                  {? ~_RES.find_key(_TFILE.FILENAME,_obj.OBJ.ACTION_UID,_obj.OBJ.ACTION_HASH,)
                  || {? ~_ACT.find_key(_obj.OBJ.ACTION_UID,)
                     || _ACT.UID:=_obj.OBJ.ACTION_UID;
                        _ACT.HASH:=exec('hash_core','#b_action','!%1.fml' [-_ACT.UID]);
                        _ACT.add()
                     ?};
                     _RES.blank();
                     _RES.PROC:=_TFILE.FILENAME;
                     _RES.ACT:=_obj.OBJ.ACTION_UID;
                     _RES.HASH:=_obj.OBJ.ACTION_HASH;
                     _RES.OK:={? _RES.HASH=_ACT.HASH || 'T' || 'N' ?};
                     _RES.add()
                  ?};
                  obj_del(_obj)
               ?};
               obj_del(_split)
            ?}
         !};
         obj_del(_gml)
      ?}
   ?};
   _TFILE.next()
!};
echo();
prgs_clr();

{? _batch
|| return(_RES)
?};

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='P'
   || _where:='OK=\\\\'T\\\\'';
      _ga:='W(P):W(P)';
      _hdr:='niewymagające aktualizacji'@
   |? _akcja='B'
   || _where:='OK=\\\\'N\\\\'';
      _ga:='W(B):W(B)';
      _hdr:='wymagające aktualizacji'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie'@
   ?};

   _RES.f_set('PROC,ACT',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_ws:=_RES.mk_sel('Definicje procesów'@,,,'#relproc2update',,,,,'U');
_RES.win_fld(_ws,,'PROC',,,80);
_RES.win_fld(_ws,,'ACT');
_RES.win_fld(_ws,,'OK',,,,,,,,'Definicja czynności w procesie jest aktualna [T/N]'@,2,,"'T'","'N'");
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
_RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');
_RES.win_sel(_ws);

params_set(
   'RES',_RES,
   'ws',_ws
);
($_widok('B'))();
_RES.select();

_RES


\upgrade
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Kontrola formuł potransferowych (przed emisją) w roboczej wersji pliku (upgrade_rrxx.fml).
::   WE: [_a] [NUMBER] - Tryb wsadowy (bez okna z wynikiem) [0*/1].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;

_init:='init';
_fn:='upgrade_%1' [-gsub(exec('wersja','#system'),'.','')];
{? fexists('%1.fml' [_fn],1)<>1
|| _msg:='Brak pliku roboczego (%1.fml) z formułami potransferowymi.'@ [_fn];
   {? ~_batch
   || FUN.error(_msg)
   ?};
   return(_msg)
?};

{? ~exec('is_fun','#file',_fn,_init)
|| _msg:='Brak formuły \\%1 w pliku roboczym (%2.fml) z formułami potransferowymi.'@ [_init,_fn];
   {? ~_batch
   || FUN.error(_msg)
   ?};
   return(_msg)
?};

_vp:=var_pres('__UPG');
{? _vp>100
|| _kopiaUPG:=__UPG;
   obj_del(__UPG)
|? _vp>=0
|| _kopiaUPG:=__UPG
?};

__UPG:=obj_new('RES','add_task','off_task','__prevupg','id_ver');
__UPG.__prevupg:='';
__UPG.RES:=tab_tmp(1,
   'LP','INTEGER','Lp.'@,
   'NAME','STRING[31]','Formuła'@,
   'DESCR','SYS_MEMO','Opis formuły'@,
   'AUTO','STRING[1]','Automatyczna'@,
   'MF','STRING[1]','Wielofirmowa'@,
   'DOMAIN','STRING[3]','Dziedzina'@,
   'VER','INTEGER','Wersja'@,
   'REQUIRED','STRING[1]','Wymagana'@,
   'MANUAL','STRING[31]','Zadanie manualne'@,
   'NOFIRM','INTEGER','Bez 000'@,
   'ONLYACT','STRING[1]','Zadanie aktualizacyjne'@,
   'OPIS','SYS_MEMO','Opis'@,
   'OK','STRING[1]','Zapis poprawny'@
);
:: _a name     [STRING] - nazwa formuły potransferowej (z bieżącego pliku).
:: _b auto     [STRING] - formuła automatyczna: T [domyślnie] / N
:: _c mf       [STRING] - formuła wielofirmowa: T [domyślnie] / N
:: _d domain   [STRING] - kod dziedziny produktowej (informacyjnie)
:: _e ver      [NUMBER] - wersja formuły
:: _f required [STRING] - czy zadanie musi być wykonane
:: _g manual   [STRING] - kod powiązanego zadania manualne w ramach wersji
:: _h nofirm   [NUMBER] - dla zadań jednofirmowych pomija firmę '000' (wartość 1), 0-domyślna wartość
:: _i onlyact  [STRING] - zadanie aktualizacyjne dla danej wersji: T-tak, N-nie (domyślnie)
__UPG.add_task:=$("
   _fn:='"+_fn+"';
   _lp:=.RES.size()+1;
   .RES.memo_set(,'DESCR');
   _opis:='';
   .RES.blank();
   .RES.LP:=_lp;
   .RES.NAME:=_a;
   .RES.OK:='N';
   {? ~exec('is_fun','#file',_fn,.RES.NAME)
   || _opis:='W pliku %1.fml brak formuły %2.' [_fn,.RES.NAME]
   || {? exec('is_fun','#file',_fn,'%1_desc' [.RES.NAME])
      || .RES.memo_set(exec('%1_desc'[.RES.NAME],_fn),'DESCR')
      || _opis+='W pliku %1.fml brak formuły %2. ' [_fn,'%1_desc'[.RES.NAME]]
      ?};
      .RES.AUTO:={? var_pres('_b')=type_of('') & (_b='T' | _b='N') || _b || 'T' ?};
      .RES.MF:={? var_pres('_c')=type_of('') & (_c='T' | _c='N') || _c || 'T' ?};
      .RES.DOMAIN:={? var_pres('_d')=type_of('') || _d || '???' ?};
      .RES.VER:={? var_pres('_e')=type_of(0) || _e || 0 ?};
      .RES.REQUIRED:={? var_pres('_f')=type_of('') & (_f='T' | _f='N') || _f || 'N' ?};
      .RES.MANUAL:={? var_pres('_g')=type_of('') || _g || '' ?};
      .RES.NOFIRM:={? var_pres('_h')=type_of(0) || _h || 0 ?};
      .RES.ONLYACT:={? var_pres('_i')=type_of('') & (_i='T' | _i='N') || _i || 'N' ?};
      {? .RES.VER>0
      || _opis+='Niezerowa wersja. '
      ?};
      {? .RES.MANUAL<>'' & ~exec('is_fun','#file',_fn,.RES.MANUAL)
      || _opis+='Brak zadania manualnego %1.' [.RES.MANUAL]
      ?};
      {? .RES.ONLYACT='T'
      || _opis+='Zadanie aktualizacyjne. '
      ?};
      _curupg:={? .RES.AUTO='T' || 'A' || 'M' ?}+{? .RES.MF='T' || '0' || '1' ?};
      {? .__prevupg<>'' & _curupg<.__prevupg
      || _opis+=
            'Zaburzona kolejność zadań ('+
            {? 1+_curupg<>1+.__prevupg
            || 'zadanie automatyczne po manualnym'
            || 'zadanie wielofirmowe po jednofirmowym'
            ?}+'). '
      ?};
      .__prevupg:=_curupg
   ?};
   {? _opis=''
   || .RES.OK:='T'
   ?};
   .RES.memo_set(_opis,'OPIS');
   .RES.add() & .RES.memo_put(,'DESCR') & .RES.memo_put(,'OPIS')
");

::  _a  name   [STRING] - nazwa formuły potransferowej.
:: [_b] op     [STRING] - operator porównania, jeden z '<', '<=', '=' [domyślnie: '<'].
:: [_c] ver    [STRING] - wartość do porównania - domyślnie symbol bieżącej wersji.
:: Zarówno oprogramowanie weryfikacji jak i sama weryfikacja metody off_task() będą bardzo czasochłonne.
:: Weryfikacja na razie nie będzie przeprowadzana (możze kiedyś, jak będzie troche czasu ...).
__UPG.off_task:="";

__UPG.id_ver:="";

exec(_init,_fn);

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='P'
   || _where:='OK=\\\\'T\\\\'';
      _ga:='W(P):W(P)';
      _hdr:='zapisy poprawne'@
   |? _akcja='B'
   || _where:='OK=\\\\'N\\\\'';
      _ga:='W(B):W(B)';
      _hdr:='zapisy błędne'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie zapisy'@
   ?};

   _RES.f_set('LP',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_RES:=__UPG.RES;
_ws:=_RES.mk_sel('Formuły potransferowe [%1.fml]'@ [_fn],,,'#upgrade',,,,,'U');
_RES.win_fld(_ws,,'LP',,,-4,,,,,'Liczba porządkowa'@);
_RES.win_fld(_ws,,'NAME',,,,,,,,'Nazwa formuły potransferowej'@);
_RES.win_fld(_ws,,'DESCR',,,,,,,,'Opis formuły potransferowej'@);
_RES.win_fld(_ws,,'OPIS',,,80);
_RES.win_fld(_ws,,'OK',,,,,,,,'Zapis poprawny [T/N]'@,2,,"'T'","'N'");
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
_RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');
_RES.win_sel(_ws);
_we:=_RES.mk_edit('Formuła potransferowa [%1.fml]'@ [_fn],,'#upgrade');
_RES.win_esep(_we,'Dane podstawowe'@);
_RES.win_efld(_we,,'LP');
_RES.win_efld(_we,,'NAME',,,33);
_RES.win_efld(_we,,'DESCR',,,80,-5);
_RES.win_efld(_we,,'AUTO',,,,,,,,,'check-box','check_label="%1"' ['Tak, formuła automatyczna'@],"'T'","'N'");
_RES.win_efld(_we,,'MF',,,,,,,,,'check-box','check_label="%1"' ['Tak, formuła wielofirmowa'@],"'T'","'N'");
_RES.win_efld(_we,,'DOMAIN',,,33);
_RES.win_efld(_we,,'VER');
_RES.win_efld(_we,,'REQUIRED',,,,,,,,,'check-box','check_label="%1"' ['Tak, zadanie jest wymagalne'@],"'T'","'N'");
_RES.win_efld(_we,,'MANUAL',,,33);
_RES.win_efld(_we,,'NOFIRM');
_RES.win_efld(_we,,'ONLYACT',,,,,,,,,'check-box','check_label="%1"' ['Tak, zadanie aktualizacyjne'@],"'T'","'N'");
_RES.win_esep(_we,'Status'@);
_RES.win_efld(_we,,'OPIS',,,80,-5);
_RES.win_efld(_we,,'OK',,,,,,,,,'check-box','check_label="%1"' ['Tak, zapis jest poprawny'@],"'T'","'N'");
_RES.win_edit(_we);

{? ~_batch
|| params_set(
      'RES',_RES,
      'ws',_ws
   );
   ($_widok('B'))();
   _RES.select()
?};

obj_del(__UPG);
{? _vp>=0
|| __UPG:=_kopiaUPG
|| &__UPG
?};

_RES


\dubelki_fml
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Formuła sprawdza, czy w plikach FML nie występują powtórzone formuły.
::   WE: [_a] [NUMBER] - Tryb wsadowy (bez okna z wynikiem) [0*/1].
::   WY: Tabela z wynikiem.
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;

_RES:=tab_tmp(2,
   'FILE','STRING[64]','Nazwa pliku'@,
   'RULE','STRING[31]','Nazwa formuły'@,
   'ERR','STRING[255]','Komunikat'@,
   'COUNT','INTEGER','Wystąpień'@,
   'LINES','SYS_MEMO','Numery linii'@,
   'OK','STRING[1]','Zapis poprawny'@
);

{? ~_batch & ~FUN.ask('Operacja czasochłonna.'@+'\n'+'Na pewno chcesz kontynuować?'@)
|| return(_RES)
?};

_PLIKI:=files('*.fml');

_prg:=obj_new('step','size','proc','ts','rc','i0','i1','i2');
_prg.step:=0;
_prg.size:=_PLIKI.size();
_prg.proc:=-1;
_prg.ts:=time();
_prg.rc:=_prg.i0:=_prg.i1:=_prg.i2:=0;

_loop:=_PLIKI.first();
{!
|? _loop
|! _prg.step+=1;
   _proc:=(_prg.step*100/(_prg.size))$0;
   {? ~_batch & _prg.proc<>_proc
   || _prg.proc:=_proc;
      progress(
         _prg.proc,
         'Plików przetworzonych: %1 / %2'@ [$_prg.step,$_prg.size]+'\n'+
         '\n'+
         'Formuł znalezionych: %1'@ [$_prg.rc]+'\n'+
         'w tym:'@+'\n'+
         ' - formuł unikalnych: %1'@ [$_prg.i1]+'\n'+
         ' - formuł powtórzonych: %1'@ [$_prg.i0]+'\n'+
         ' - formuł z nieprawidłową nazwą: %1'@ [$_prg.i2]+'\n'+
         '\n'+
         'Proszę czekać [%1%%] ...'@ [form(_prg.proc$2,3,0,'9.')],
         'Formuły powtórzone lub z nieprawidłowymi nazwami - analiza plików'@
      );
      echo(,(time()-_prg.ts)$3)
   ?};
   _fh:=fopen(_PLIKI.FILENAME,'ur',1,1,1);
   {? _fh.is_open()
   || _nrl:=0;
      {!
      |? (_line:=_fh.fread())<>'\n'
      |! _nrl+=1;
         {? 1+_line='\\'
         || _rule:=spli_str(1-_line,' ')[1];
            {? 1+_rule<>'"' & 1+_rule<>'\''
::             Jeżeli pierwszym znakiem "nazwy" procedury jest podwójny cudzysłów lub apostrof, to przyjmijmy, że jednak
::             nie jest to nazwa, tylko kontynuacja formuły / napisu.
            || _prg.rc+=1;
               {? _RES.find_key(_PLIKI.FILENAME,_rule,)
               || _RES.COUNT+=1;
                  _RES.memo_set('%1 %2' [_RES.memo_txt(,1,'LINES'),$_nrl],'LINES');
                  _RES.OK:='N';
                  _RES.put() & _RES.memo_put(,'LINES');
                  _prg.i0+=1;
                  _prg.i1-=1
               || _RES.blank();
                  _RES.FILE:=_PLIKI.FILENAME;
                  _RES.RULE:=_rule;
                  _RES.ERR:=exec('valid_rule_name','#string',_RES.RULE);
                  _RES.COUNT:=1;
                  _RES.memo_set($_nrl,'LINES');
                  _RES.OK:={? _RES.ERR='' || 'T' || 'N' ?};
                  _RES.add() & _RES.memo_put(,'LINES');
                  _prg.i1+=1;
                  _prg.i2+=_RES.OK='N'
               ?}
            ?}
         ?}
      !};
      _fh.fclose()
   ?};
   obj_del(_fh);
   _loop:=_PLIKI.next()
!};
{? _batch
|| return(_RES)
|| prgs_clr()
?};

:: - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

_widok:="""
   _akcja:='""+_a+""';

   _par:=params_get();
   _RES:=_par.RES;
   _ws:=_par.ws;

   {? _akcja='P'
   || _where:='OK=\\\\'T\\\\'';
      _ga:='W(P):W(P)';
      _hdr:='zapisy poprawne'@
   |? _akcja='B'
   || _where:='OK=\\\\'N\\\\'';
      _ga:='W(B):W(B)';
      _hdr:='zapisy błędne'@
   || _where:='';
      _ga:='W(W):W(W)';
      _hdr:='wszystkie zapisy'@
   ?};

   _RES.f_set('FILE,RULE',,_where);
   _RES.actions_grayed(_ws,_ga);
   _RES.hdr_sel();
   _RES.hdr_sel(' - '+_hdr);
   ~~
""";

_ws:=_RES.mk_sel('Formuły powtórzone lub z nieprawidłowymi nazwami'@,,,'#reldubelki',,,,,'U');
_RES.win_fld(_ws,,'FILE');
_RES.win_fld(_ws,,'RULE');
_RES.win_fld(_ws,,'ERR',,,20);
_RES.win_fld(_ws,,'COUNT');
_RES.win_fld(_ws,,'LINES',,,40);
_RES.win_fld(_ws,,'OK',,,-3,,,,,'Zapis poprawny [T/N]'@,2,,"'T'","'N'");
{! _empty:=0 .. 1
|! _RES.win_act(_ws,_empty,'Menu','Widok'@@,,,,,,,,,'W');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &poprawne'@@,'Widok'@,,$_widok('P'),,,,,,'P');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &błędne'@@,'Widok'@,,$_widok('B'),,,,,,'B');
   _RES.win_act(_ws,_empty,'Formuła','Pokaż &wszystkie'@@,'Widok'@,,$_widok('W'),,,,,,'W')
!};
_RES.win_act(_ws,,'Formuła','Pokaż &autora'@@,,,
   "  _RES:=cur_tab(1,1);
      {? _RES.FILE<>''
      || _dir:=pth_dir(_RES.FILE);
         _path:=_dir+exec('sep','#file')+_RES.FILE;
         _lines:=spli_str(_RES.memo_txt(,1,'LINES'),' ');
         exec('svn_blame','%release',_path,#_lines[obj_len(_lines)])
      ?}
   ",,,,,,
   'A'
);
_RES.win_btn(_ws,'text=%1' ['Pokaż &poprawne'@],'menu:WP');
_RES.win_btn(_ws,'text=%1' ['Pokaż &błędne'@],'menu:WB');
_RES.win_btn(_ws,'text=%1' ['Pokaż &wszystkie'@],'menu:WW');
_RES.win_btn(_ws,'text=%1' ['Pokaż &autora'@],'menu:A');
_RES.win_sel(_ws);

params_set(
   'RES',_RES,
   'ws',_ws
);
($_widok('B'))();
_RES.select();

_RES


\trn_tp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [21.37]
:: OPIS: Zmiany struktur danych (tabel / pól) w stosunku do ostatnio wyemitowanej wersji (wersja robocza).
::   WE:
::   WY:
:: ~OST: INFEXISTS,INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
_profile:='develop.upf';
_sekcja:='TRN_TP';
_parametr:='DEF';
_defpp:=exec('get','#profile',_profile,_sekcja,_parametr);
_defpd:=exec('filechooser','#file','Plik z definicją ostatnio wyemitowanej wersji'@,1,,,0,'FILES_ONLY',0,_defpp);
{? _defpd=''
|| return('Rezygnacja.'@)
|? fexists('@%1' [_defpd],0)<>1
|| return('Brak dostępu do pliku "%1".' [_defpd])
|? _defpd<>_defpp
|| exec('set','#profile',_profile,_sekcja,_parametr,_defpd)
?};
_defb:=app_info('def_name');

progress(,'Proszę czekać ...'@,'Analiza definicji systemu'@,1);
_CD:=comp_def('@%1' [_defpd],'%1.def' [_defb],0,1);
::_CD:=comp_def('%1.def' [_defb],'@%1' [_defpd],1,0);
prgs_clr();
{? type_of(_CD)=type_of(~~)
|| return('Analiza zmian definicji systemu nie powiodła się.'@)
?};

:: Zmiany w tabelach (T) i/lub polach (TP) + wersja (S).
_CD.f_set('CODE,KEY,NR^,C',,'CODE=\'S\' or CODE=\'T\' or CODE=\'TP\'');
{? ~_CD.f_first()
|| FUN.emsg('Brak analizowanych zmian.'@);
   return(0)
?};

_RES:=tab_tmp(2,
   'TACR','STRING[8]','Akronim tabeli'@,
   'FACR','STRING[8]','Akronim pola'@,

   'TNAMEB','STRING[8]','Nazwa tabeli przed zmianą'@,
   'TNAMEA','STRING[8]','Nazwa tabeli po zmianie'@,

   'TYPEB','STRING[9]','Typ przed zmianą'@,
   'LENB','INTEGER','Długość przed zmianą'@,
   'TYPEA','STRING[9]','Typ po zmianie'@,
   'LENA','INTEGER','Długość po zmianie'@,
   'FMBL','STRING[60]','Formuła na wartość początkową'@,
   'STATUS','STRING[10]','Status'@
);

_pver:='';
{!
|? _txt:=_CD.TXT;
   _key:=_CD.KEY;
   _key2:=_CD.KEY2;
   _code:=_CD.CODE;
   _change:=_CD.C;
   _nr:=_CD.NR;
   {!
   |? (_next:=_CD.next()) & _CD.KEY=_key & _CD.KEY2=_key2 & _CD.CODE=_code & _change=_CD.C & _CD.NR=_nr+1
   |! _txt+=_CD.TXT;
      _nr:=_CD.NR
   !};
   {? _next
   || _CD.prev()
   ?};
   _details:=spli_str(_txt,'\t');

   {? _code='S'
::    Zapamiętajmy wersję poprzedniej definicji.
   || {? _change='-'
      || _pver:=_details[17]
      ?}

   |? _code='T'
   || _tacr:=_details[4];
      _tname:=_details[3];
      {? ~_RES.find_key(_tacr,'',)
      || _RES.blank();
         _RES.TACR:=_tacr;
         {? _change='+'
         || _RES.TNAMEA:=_tname;
            _RES.STATUS:='Nowa'
         |? _change='-'
         || _RES.TNAMEA:=_tname;
            _RES.STATUS:='Usunięta'
         ?};
         _RES.add()
      |? _RES.STATUS='Nowa'
::       Coś się zmieniło.
::       Ze względu na kolejność przeglądania danych, jeżeli wcześniej istniał już zapis dotyczący tej tabeli, to teraz
::       przetwarzamy zapis typu "-".
      || _RES.TNAMEB:=_tname;
         {? _RES.TNAMEB=_RES.TNAMEA
         || _RES.del()
         || _RES.STATUS:='Zmieniona';
            _RES.put()
         ?}
      |? _RES.STATUS='Usunięta'
::       Taka sytuacja nie powinna mieć miejsca.
      || debug()
      ?}

   |? _code='TP'
   || _tacr:=_details[4];
      {? _RES.find_key(_tacr,'',) & _RES.STATUS<>'Zmieniona'
::       Dla "nowej" tabeli każde pole jest nowe, a dla "usuniętej" każde jest usunięte - logowanie tego faktu na
::       poziomie pól nie ma sensu.
      || ~~
      |? _facr:=_details[7];
         _ftype:=_details[9];
         _flen:=#_details[10];
         _fmbl:=_details[13];
         ~_RES.find_key(_tacr,_facr,)
      || _RES.blank();
         _RES.TACR:=_tacr;
         _RES.FACR:=_facr;
         {? _change='+'
         || _RES.STATUS:='Nowe';
            _RES.TYPEA:=_ftype;
            _RES.LENA:=_flen
         || _RES.STATUS:='Usunięte';
            _RES.TYPEB:=_ftype;
            _RES.LENB:=_flen
         ?};
         _RES.FMBL:=_fmbl;
         _RES.add()
      |? _RES.STATUS='Nowe'
::       Coś się zmieniło.
::       Ze względu na kolejność przeglądania danych, jeżeli wcześniej istniał już zapis dotyczący tego pola, to teraz
::       przetwarzamy zapis typu "-".
      || _RES.TYPEB:=_ftype;
         _RES.LENB:=_flen;
         {? _RES.TYPEB<>_RES.TYPEA | (_RES.TYPEB='STRING' & _RES.LENB<>_RES.LENA)
         || _RES.STATUS:='Zmienione';
            _RES.put()
         || _RES.del()
         ?}
      |? _RES.STATUS='Usunięte'
::       Taka sytuacja nie powinna mieć miejsca.
      || debug()
      ?}
   ?};

   obj_del(_details);
   _CD.f_next()
!};

{? _RES.first()
:: Usuńmy zapisy "techniczne" - informacje o nowych tabelach.
|| {!
   |? {? _RES.FACR='' & _RES.TNAMEB=''
      || _RES.del(,1)=2
      || _RES.next()
      ?}
   !}
?};

::_CD.f_clear();
::_ws:=_CD.mk_sel('comp_def',,,,,,,,'U');
::_CD.win_fld(_ws,,'KEY');
::_CD.win_fld(_ws,,'KEY2');
::_CD.win_fld(_ws,,'CODE');
::_CD.win_fld(_ws,,'C');
::_CD.win_fld(_ws,,'NR');
::_CD.win_fld(_ws,,'TXT',,,40);
::_CD.win_act(_ws,,'Szukaj');
::_CD.win_act(_ws,,'Kolejność');
::_CD.win_sel(_ws);
::_CD.win_edit(_CD.mk_edit(,1));
::_CD.select();

_ws:=_RES.mk_sel('Zmiany struktur w stosunku do DEF-a %1'@ [_pver],,,,,,,,'U');
_RES.win_fld(_ws,,'TACR',,,,,,'Tabela'@,,'Akronim tabeli'@);
_RES.win_fld(_ws,,'TNAMEB',,,-10,,,'Nazwa przed'@,,'Nazwa tabeli przed zmianą'@);
_RES.win_fld(_ws,,'TNAMEA',,,-10,,,'Nazwa po'@,,'Nazwa tabeli po zmianie'@);
_RES.win_fld(_ws,,'FACR',,,,,,'Pole'@,,'Akronim pola'@);
_RES.win_fld(_ws,,'TYPEB',,,-10,,,'Typ przed'@,,'Typ pola przed zmianą'@);
_RES.win_fld(_ws,,'LENB',,,-5,,,'Długość przed'@,,'Długość pola przed zmianą'@);
_RES.win_fld(_ws,,'TYPEA',,,-10,,,'Typ po'@,,'Typ pola po zmianie'@);
_RES.win_fld(_ws,,'LENA',,,-5,,,'Długość po'@,,'Długość pola po zmianie'@);
_RES.win_fld(_ws,,'FMBL',,,40,,,'Formuła na wartość początkową'@,,'Nazwa formuły na wartość początkową'@);
_RES.win_fld(_ws,,'STATUS');
_RES.win_act(_ws,,'Szukaj');
_RES.win_act(_ws,,'Kolejność');
_RES.win_sel(_ws);
_RES.win_edit(_RES.mk_edit(,1));
_RES.select();

''

:Sign Version 2.0 jowisz:1045 2023/06/02 09:38:28 1c50271f209087630ab0522c1d1570af700f61d34e17fb733603f74bb78a3d1cc939284d54ba55b5dd040ceffca526435510585f9f46ee7cf7fe7d1b90322dbcc5ae9b7ac6de89d4d094d3cd631c716217f96f5872ca9cdbf3df387fcad3df9a6526583558eca8945f61d14069813859ae9991d1cd927810345daeeb40855fb4
