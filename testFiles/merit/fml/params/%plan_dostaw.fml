:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: %plan_dostaw.fml
:: Utworzony: 18.05.2015
:: Autor: [rr]
::======================================================================================================================
:: Zawartość: formuły planu dostaw
::======================================================================================================================


:: formuły planu dostaw: BUFOR
\mmin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formula bufora planu dostaw - stan minimalny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mmin/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   MST.trig_a('add',$("exec('mmin_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   MST.trig_a('put',$("exec('mmin_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   MST.trig_b('del',$("exec('mmin_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   MST.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   MST.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   MST.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('mmin_init','%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('mmin_display','%plan_dostaw',_a)
?}


\mmin_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a add - stan minimalny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mmin_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? MST.MIN
|| exec('pd_buf_add','plan_dostaw',date(0,0,0),time(0,0,0),_a,'',MST.MG,MST.M,null(),MST.MIN,0,$MST.ref())
?};
~~


\mmin_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - stan minimalny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mmin_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? MST.MIN
|| {? MST.MIN<>bfld('MIN') | MST.MG<>bfld('MG')
   || exec('pd_buf_put','plan_dostaw',date(0,0,0),time(0,0,0),_a,'',MST.MG,MST.M,null(),MST.MIN,0,$MST.ref())
   ?}
|| exec('pd_buf_del','plan_dostaw',_a,$MST.ref())
?};
~~


\mmin_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - stan minimalny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mmin_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$MST.ref())


\mmin_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formula startowa - stan minimalny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mmin_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

MST.cntx_psh();
MST.prefix();
_loop:=MST.first();
{!
|? _loop
|!
   {? MST.MIN
   || exec('pd_buf_add','plan_dostaw',date(0,0,0),time(0,0,0),_a,'',MST.MG,MST.M,null(),MST.MIN,0,$MST.ref())
   ?};
   _loop:=MST.next()
!};
MST.cntx_pop()


\mmin_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wyświetla informacje dotyczące zapisu w PD_BUF - stan minimalny
::  OLD: \mmin_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? PD_BUF.REF<>''
||
   MST.cntx_psh();
   MST.prefix();
   {? MST.seek(PD_BUF.REF)
   ||
      MST.index('MG'); MST.prefix(PD_BUF.M,PD_BUF.MG);
      MST.win_sel('WER');
      MST.select(,,,'dupv:d')
   ?};
   MST.cntx_pop()
?}


\mmax
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formula bufora planu dostaw - stan maksymalny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mmax/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   MST.trig_a('add',$("exec('mmax_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   MST.trig_a('put',$("exec('mmax_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   MST.trig_b('del',$("exec('mmax_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   MST.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   MST.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   MST.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('mmax_init','%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('mmax_display','%plan_dostaw',_a)
?}


\mmax_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a add - stan maksymalny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mmax_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? MST.MAX
|| exec('pd_buf_add','plan_dostaw',date(0,0,0),time(0,0,0),_a,'',MST.MG,MST.M,null(),MST.MAX,0,$MST.ref())
?};
~~


\mmax_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - stan maksymalny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mmax_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? MST.MAX
|| {? MST.MAX<>bfld('MAX') | MST.MG<>bfld('MG')
   || exec('pd_buf_put','plan_dostaw',date(0,0,0),time(0,0,0),_a,'',MST.MG,MST.M,null(),MST.MAX,0,$MST.ref())
   ?}
|| exec('pd_buf_del','plan_dostaw',_a,$MST.ref())
?};
~~


\mmax_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - stan maksymalny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mmax_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$MST.ref())


\mmax_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuła startowa - stan maksymalny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mmax_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

MST.cntx_psh();
MST.prefix();
_loop:=MST.first();
{!
|? _loop
|!
   {? MST.MAX
   || exec('pd_buf_add','plan_dostaw',date(0,0,0),time(0,0,0),_a,'',MST.MG,MST.M,null(),MST.MAX,0,$MST.ref())
   ?};
   _loop:=MST.next()
!};
MST.cntx_pop()


\mmax_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wyświetla informacje dotyczące zapisu w PD_BUF - stan maksymalny
::  OLD: \mmax_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? PD_BUF.REF<>''
||
   MST.cntx_psh();
   MST.prefix();
   {? MST.seek(PD_BUF.REF)
   ||
      MST.index('MG'); MST.prefix(PD_BUF.M,PD_BUF.MG);
      MST.win_sel('WER');
      MST.select(,,,'dupv:d')
   ?};
   MST.cntx_pop()
?}


\mzi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuła bufora planu dostaw - zapas informacyjny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mzi/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   MST.trig_a('add',$("exec('mzi_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   MST.trig_a('put',$("exec('mzi_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   MST.trig_b('del',$("exec('mzi_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   MST.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   MST.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   MST.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('mzi_init','%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('mzi_display','%plan_dostaw',_a)
?}


\mzi_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a add - zapas informacyjny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mzi_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? MST.ZI
|| exec('pd_buf_add','plan_dostaw',date(0,0,0),time(0,0,0),_a,'',MST.MG,MST.M,null(),MST.ZI,0,$MST.ref())
?};
~~


\mzi_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - zapas informacyjny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mzi_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? MST.ZI
|| {? MST.ZI<>bfld('ZI') | MST.MG<>bfld('MG')
   || exec('pd_buf_put','plan_dostaw',date(0,0,0),time(0,0,0),_a,'',MST.MG,MST.M,null(),MST.ZI,0,$MST.ref())
   ?}
|| exec('pd_buf_del','plan_dostaw',_a,$MST.ref())
?};
~~


\mzi_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - zapas informacyjny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mzi_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$MST.ref())


\mzi_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuła startowa - zapas informacyjny
::   WE: _a - PD_BUF_D.KOD
::  OLD: \mzi_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

MST.cntx_psh();
MST.prefix();
_loop:=MST.first();
{!
|? _loop
|!
   {? MST.ZI
   || exec('pd_buf_add','plan_dostaw',date(0,0,0),time(0,0,0),_a,'',MST.MG,MST.M,null(),MST.ZI,0,$MST.ref())
   ?};
   _loop:=MST.next()
!};
MST.cntx_pop()


\mzi_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wyświetla informacje dotyczące zapisu w PD_BUF - zapas informacyjny
::  OLD: \mzi_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? PD_BUF.REF<>''
||
   MST.cntx_psh();
   MST.prefix();
   {? MST.seek(PD_BUF.REF)
   ||
      MST.index('MG'); MST.prefix(PD_BUF.M,PD_BUF.MG);
      MST.win_sel('WER');
      MST.select(,,,'dupv:d')
   ?};
   MST.cntx_pop()
?}


\pdk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuła bufora planu dostaw - koszyk planów dostaw
::   WE: _a - PD_BUF_D.KOD
::  OLD: \pdk/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   PD_K.trig_a('add',$("exec('pdk_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   PD_K.trig_a('put',$("exec('pdk_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   PD_K.trig_b('del',$("exec('pdk_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   PD_K.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   PD_K.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   PD_K.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('pdk_init','%plan_dostaw',_a)
:: wyświetlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('pdk_display','%plan_dostaw',PD_BUF.REF)
?}


\pdk_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a add - koszyk planów dostaw
::   WE: _a - PD_BUF_D.KOD
::  OLD: \pdk_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? PD_K.IL
|| MG.cntx_psh();
   exec('pd_buf_add','plan_dostaw',PD_K.DD,time(0,0,0),_a,PD_K.MG().ODDZ,PD_K.MG,PD_K.M,PD_K.DK_C,PD_K.IL,1,$PD_K.ref());
   MG.cntx_pop()
?};
~~


\pdk_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - stan magazynowy
::   WE: _a - PD_BUF_D.KOD
::  OLD: \pdk_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? PD_K.IL & PD_K.ILP & PD_K.CZY_ZAM='N'
|| {? PD_K.DD<>bfld('DD') | PD_K.MG<>bfld('MG') | PD_K.DK_C<>bfld('DK_C') | PD_K.IL<>bfld('IL') | PD_K.ILP<>bfld('ILP')
      | PD_K.CZY_ZAM<>bfld('CZY_ZAM') | PD_K.CZY_ZL<>bfld('CZY_ZL')
   || MG.cntx_psh();
      exec('pd_buf_put','plan_dostaw',PD_K.DD,time(0,0,0),_a,PD_K.MG().ODDZ,PD_K.MG,PD_K.M,PD_K.DK_C,PD_K.ILP,1,$PD_K.ref());
      MG.cntx_pop()
   ?}
|| exec('pd_buf_del','plan_dostaw',_a,$PD_K.ref())
?};
~~


\pdk_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - koszyk planów dostaw (przychód)
::   WE: _a - PD_BUF_D.KOD
::  OLD: \pdk_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$PD_K.ref())


\pdk_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formula startowa - koszyk planow dostaw (przychod)
::   WE: _a - PD_BUF_D.KOD
::  OLD: \pdk_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

PD_N.cntx_psh(); PD_K.cntx_psh();
PD_K.prefix();
_loop1:=PD_K.first();
{!
|? _loop1
|!
   {? PD_K.IL & PD_K.CZY_ZAM='N' & PD_K.CZY_ZL='N'
   || exec('pd_buf_add','plan_dostaw',PD_K.DD,time(0,0,0),_a,PD_K.PD_N().ODDZ,PD_K.MG,PD_K.M,PD_K.DK_C,PD_K.IL,1,$PD_K.ref())
   ?};
   _loop1:=PD_K.next()
!};
PD_N.cntx_pop(); PD_K.cntx_pop()


\pdk_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wyswietla informacje dotyczace zapisu w PD_BUF - koszyk planow dostaw (przychod)
::   WE: _a - $SC.ref()
::  OLD: \pdk_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

{? _ref<>''
||
   PD_K.cntx_psh();
   PD_K.use(8+_ref);
   PD_K.prefix();
   {? PD_K.seek(_ref)
   ||
      _atrmjs:=ATR.MJS;
      ATR.MJS:='PD_K';
      {? PD_K.DK_C<>null() | PD_K.RDKC<>''
      || ATR.M_ATR:=PD_K.DK_C().M_ATR;
         exec('czytadkc','mat_atr',PD_K.DK_C,PD_K.RDKC)
      || M_ATR.blank(0);
         ATR.MJS:='M_ATR'
      ?};
      {? exec('tte_lic','tte')='T'
      || PD_K.win_edit('RED_PROD')
      || PD_K.win_edit('RED')
      ?};
      PD_K.display();
      ATR.MJS:=_atrmjs
   ?};
   PD_K.cntx_pop()
?}


\pdkr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formula bufora planu dostaw - koszyk planow dostaw (rozchod)
::   WE: _a - PD_BUF_D.KOD
::  OLD: \pdkr/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   PD_K.trig_a('add',$("exec('pdkr_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   PD_K.trig_a('put',$("exec('pdkr_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   PD_K.trig_b('del',$("exec('pdkr_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   PD_K.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   PD_K.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   PD_K.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('pdkr_init','%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('pdkr_display','%plan_dostaw',PD_BUF.REF)
?}


\pdkr_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a add - koszyk planów dostaw (rozchód)
::   WE: _a - PD_BUF_D.KOD
::  OLD: \pdkr_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? PD_K.IL & PD_K.Z_MG
|| MG.cntx_psh();
   exec('pd_buf_add','plan_dostaw',PD_K.DD,time(0,0,0),_a,PD_K.Z_MG().ODDZ,PD_K.Z_MG,PD_K.M,PD_K.DK_C,PD_K.IL,-1,$PD_K.ref());
   MG.cntx_pop()
?};
~~


\pdkr_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - stan magazynowy
::   WE: _a - PD_BUF_D.KOD
::  OLD: \pdkr_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? PD_K.IL & PD_K.CZY_ZAM='N' & PD_K.CZY_ZL='N' & PD_K.Z_MG
|| {? PD_K.DD<>bfld('DD') | PD_K.Z_MG<>bfld('Z_MG') | PD_K.DK_C<>bfld('DK_C') | PD_K.IL<>bfld('IL')
      | PD_K.CZY_ZAM<>bfld('CZY_ZAM') | PD_K.CZY_ZL<>bfld('CZY_ZL')
   || MG.cntx_psh();
      exec('pd_buf_put','plan_dostaw',PD_K.DD,time(0,0,0),_a,PD_K.Z_MG().ODDZ,PD_K.Z_MG,PD_K.M,PD_K.DK_C,PD_K.IL,-1,$PD_K.ref());
      MG.cntx_pop()
   ?}
|| exec('pd_buf_del','plan_dostaw',_a,$PD_K.ref())
?};
~~


\pdkr_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - koszyk planow dostaw (rozchod)
::   WE: _a - PD_BUF_D.KOD
::  OLD: \pdkr_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$PD_K.ref())


\pdkr_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuła startowa - koszyk planów dostaw (rozchód)
::   WE: _a - PD_BUF_D.KOD
::  OLD: \pdkr_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

PD_N.cntx_psh(); PD_K.cntx_psh();
PD_K.prefix();
_loop1:=PD_K.first();
{!
|? _loop1
|!
   {? PD_K.IL & PD_K.CZY_ZAM='N' & PD_K.CZY_ZL='N' & PD_K.Z_MG
   || exec('pd_buf_add','plan_dostaw',PD_K.DD,time(0,0,0),_a,PD_K.Z_MG().ODDZ,PD_K.Z_MG,PD_K.M,PD_K.DK_C,PD_K.IL,-1,$PD_K.ref())
   ?};
   _loop1:=PD_K.next()
!};
PD_N.cntx_pop(); PD_K.cntx_pop()


\pdkr_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wyświetla informacje dotyczące zapisu w PD_BUF - koszyk planów dostaw (rozchód)
::   WE: _a - $SC.ref()
::  OLD: \pdkr_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

{? _ref<>''
||
   PD_K.cntx_psh();
   PD_K.use(8+_ref);
   PD_K.prefix();
   {? PD_K.seek(_ref)
   ||
      {? exec('tte_lic','tte')='T'
      || PD_K.win_edit('RED_PROD')
      || PD_K.win_edit('RED')
      ?};
      PD_K.display()
   ?};
   PD_K.cntx_pop()
?}


\pxsur
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: formuła bufora planu dostaw - zapotrzebowania do planu strategicznego
::   WE: _a - PD_BUF_D.KOD
::  OLD: \pxsur/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wl.
{? PD_Z.PAR='T'
||
   PX_SUR.trig_a('add',$("exec('pxsur_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   PX_SUR.trig_b('del',$("exec('pxsur_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wyl.
|? PD_Z.PAR='N'
||
   PX_SUR.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   PX_SUR.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('pxsur_init','%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('pxsur_display','%plan_dostaw',PD_BUF.REF)
?}


\pxsur_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: trig_a add - zapotrzebowania do planu strategicznego
::   WE: _a - PD_BUF_D.KOD
::  OLD: \pxsur_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? PX_SUR.ZL=null() & PX_SUR.IL & PX_SUR.PX_VER=exec('get_mainversion','px_ver')
|| exec('pd_buf_add','plan_dostaw'
      ,PX_SUR.STARTD
      ,PX_SUR.STARTT
      ,_a
      ,PX_SUR.ODDZ
      ,PX_SUR.MG
      ,PX_SUR.M
      ,PX_SUR.DK_C
      ,{? PX_SUR.IL<0 || -PX_SUR.IL || PX_SUR.IL ?}
      ,{? PX_SUR.IL<0 || 1 || -1 ?}
      ,$PX_SUR.ref()
   )
?};
~~


\pxsur_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: trig_a put - zapotrzebowania do planu strategicznego
::   WE: _a - PD_BUF_D.KOD
::  OLD: \pxsur_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$PX_SUR.ref())


\pxsur_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: formuła startowa - zapotrzebowania do planu strategicznego (tylko wersja główna planu)
::   WE: _a - PD_BUF_D.KOD
::  OLD: \pxsur_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

exec('mainversion_chk','px_ver');

PX_SUR.cntx_psh();
PX_SUR.index('PXPOZMC');
PX_SUR.prefix(exec('get_mainversion','px_ver'));
{? PX_SUR.first()
|| {!
   |? {? PX_SUR.ZL=null() & PX_SUR.IL
      || exec('pd_buf_add','plan_dostaw'
            ,PX_SUR.STARTD
            ,PX_SUR.STARTT
            ,_a
            ,PX_SUR.ODDZ
            ,PX_SUR.MG
            ,PX_SUR.M
            ,PX_SUR.DK_C
            ,{? PX_SUR.IL<0 || -PX_SUR.IL || PX_SUR.IL ?}
            ,{? PX_SUR.IL<0 || 1 || -1 ?}
            ,$PX_SUR.ref()
         )
      ?};
      PX_SUR.next()
   !}
?};
PX_SUR.cntx_pop();
~~


\pxsur_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: wyświetla informacje dotyczące zapisu w PD_BUF - zapotrzebowania do planu strategicznego
::   WE: _a - $PX_SUR.ref()
::  OLD: \pxsur_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
_px_sur:=_a;

{? _px_sur<>''
||
   PX_SUR.cntx_psh();
   PX_SUR.clear();
   {? PX_SUR.seek(_px_sur)
   || PX_SUR.win_edit('RED');
      PX_SUR.display()
   ?};
   PX_SUR.cntx_pop()
?};
~~


\rez
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuła bufora planu dostaw - rezerwacje
::   WE: _a - PD_BUF_D.KOD
::       _b - typ rezerwacji
::  OLD: \rez/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   REZ.trig_a('add',$("exec('rez_aadd','%plan_dostaw','"+_a+"','"+_b+"')"),-(PD_Z.TRIGNAME+_a));
   REZ.trig_a('put',$("exec('rez_aput','%plan_dostaw','"+_a+"','"+_b+"')"),-(PD_Z.TRIGNAME+_a));
   REZ.trig_b('del',$("exec('rez_bdel','%plan_dostaw','"+_a+"','"+_b+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   REZ.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   REZ.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   REZ.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('rez_init','%plan_dostaw',_a,_b)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('rez_display','%plan_dostaw',_a,PD_BUF.REF)
?}


\rez_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a add - rezerwacje
::   WE: _a - PD_BUF_D.KOD
::       _b - typ rezerwacji
::  OLD: \rez_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
_continue:=1;
{? _b='Z' & exec('get','#params',100704)='T'
||
   _continue:=exec('FindAndGet','#table',ZK_N,REZ.ZK_N,,"T().R='W' & TYPYZAM.T<>exec('get','#params',500011)",0)
?};
{? _continue>0 & REZ.POZSQL='' & REZ.TYP=_b & REZ.ILR & REZ.RODZ='B'
|| exec('pd_buf_add','plan_dostaw',REZ.ODDT,time(0,0,0),_a,(REZ.name()-2)+1,REZ.MG,REZ.M,REZ.DK_C,REZ.ILR,-1,$REZ.ref())
?};
~~


\rez_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - rezerwacje
::   WE: _a - PD_BUF_D.KOD
::       _b - typ rezerwacji
::  OLD: \rez_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
_continue:=1;
{? _b='Z' & exec('get','#params',100704)='T'
||
   _continue:=exec('FindAndGet','#table',ZK_N,REZ.ZK_N,,"T().R='W' & TYPYZAM.T<>exec('get','#params',500011)",0)
?};
{? _continue>0 & REZ.TYP=_b
|| {? REZ.POZSQL='' & REZ.ILR  & REZ.RODZ='B'
   || {? REZ.ODDT<>bfld('ODDT')
         | REZ.MG<>bfld('MG')
         | REZ.DK_C<>bfld('DK_C')
         | REZ.ILR<>bfld('ILR')
         | REZ.RODZ<>bfld('RODZ')
      || exec('pd_buf_put','plan_dostaw',REZ.ODDT,time(0,0,0),_a,(REZ.name()-2)+1,REZ.MG,REZ.M,REZ.DK_C,REZ.ILR,-1,$REZ.ref())
      ?}
   || exec('pd_buf_del','plan_dostaw',_a,$REZ.ref())
   ?}
?};
~~


\rez_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - rezerwacje
::   WE: _a - PD_BUF_D.KOD
::       _b - typ rezerwacji
::  OLD: \rez_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? REZ.TYP=_b || exec('pd_buf_del','plan_dostaw',_a,$REZ.ref()) || 1 ?}


\rez_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formula startowa - rezerwacje
::   WE: _a - PD_BUF_D.KOD
::       _b - typ rezerwacji
::  OLD: \rez_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

REZ.cntx_psh(); ODDZ.cntx_psh();
ODDZ.index('KOD2'); ODDZ.prefix();
{? ODDZ.first()
||
   _skip_zk_wew_zlim:=exec('get','#params',100704)='T';
   __p500011:=exec('get','#params',500011);
   _loop:=ODDZ.first();
   {!
   |? _loop
   |!
      REZ.use('rezz'+ODDZ.KOD+'__');
      REZ.index('NRK'); REZ.prefix(_b,);
      _loop1:=REZ.first();
      {!
      |? _loop1
      |!
         _continue:=1;
         {? REZ.TYP='Z' & _skip_zk_wew_zlim
         ||
            _continue:=exec('FindAndGet','#table',ZK_N,REZ.ZK_N,,"T().R='W' & TYPYZAM.T<>__p500011",0)
         ?};
         {? _continue>0 & REZ.ILR & REZ.RODZ='B'
         || exec('pd_buf_add','plan_dostaw',REZ.ODDT,time(0,0,0),_a,ODDZ.KOD,REZ.MG,REZ.M,REZ.DK_C,REZ.ILR,-1,$REZ.ref())
         ?};
         _loop1:=REZ.next()
      !};
      _loop:=ODDZ.next()
   !};
   VAR_DEL.delete('__p500011')
?};
REZ.cntx_pop(); ODDZ.cntx_pop()


\rez_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wyświetla informacje dotyczące zapisu w PD_BUF - rezerwacje
::   WE: _a - kod
::       _b - $REZ.ref()
::  OLD: \rez_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
_kod:=_a;
_ref:=_b;

_atrmjs:=ATR.MJS;
ATR.MJS:='REZ';

{? _ref<>''
||
   REZ.cntx_psh();
   REZ.use(7+_ref);
   REZ.prefix();
   {? REZ.seek(_ref)
   ||
      BEER.RODZR:=REZ.RODZ;
      {? _kod='REZ_MAG'
::    ilosci w wydaniu - magazyn
      || REZ.win_edit('ILW');
         REZ.display()
      |? _kod='REZ_SPR'
::    ilosci w wydaniu - sprzedaz
      || REZ.win_edit('ILW');
         REZ.display()
      |? _kod='REZ_TMP'
::    rezerwacje tymczasowe
      || REZ.win_edit('TYM');
         REZ.display()
      |? _kod='REZ_ZAM' | _a='REZ_WEW'
::    rezerwacje zamowien sprzedazy, wewnetrznych
      || {? exec('czytadkc','mat_atr',REZ.DK_C,REZ.RDKC) || 'DISP' || 'RED' ?};
         exec('wys_rezy','rezerwacje')
      || REZ.win_edit('DISP');
         REZ.display()
      ?}
   ?};
   REZ.cntx_pop()
?};
ATR.MJS:=_atrmjs;
~~


\sc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formula bufora planu dostaw - stan magazynowy
::   WE: _a - PD_BUF_D.KOD
::  OLD: \sc/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   SC.trig_a('add',$("exec('sc_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   SC.trig_a('put',$("exec('sc_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   SC.trig_b('del',$("exec('sc_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   SC.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   SC.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   SC.trig_b('del',"",-(PD_Z.TRIGNAME+_a));
   ND.trig_a('put',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('sc_init','%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('sc_display','%plan_dostaw',PD_BUF.REF)
?}


\sc_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a add - stan magazynowy
::   WE: _a - PD_BUF_D.KOD
::  OLD: \sc_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? SC.S
|| exec('pd_buf_add','plan_dostaw',SC.D,time(0,0,0),_a,ST.ODDZ,SC.MAG,SC.M,SC.DK_C,SC.S,1,$SC.ref())
?};
~~


\sc_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - stan magazynowy
::   WE: _a - PD_BUF_D.KOD
::  OLD: \sc_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? SC.S
|| {? SC.S<>bfld('S')
   || exec('pd_buf_put','plan_dostaw',SC.D,time(0,0,0),_a,ST.ODDZ,SC.MAG,SC.M,SC.DK_C,SC.S,1,$SC.ref())
   |? SC.STATS<>bfld('STATS')
   || exec('pd_p_refresh','plan_dostaw',SC.M,PD_BUF.tm_stamp())
   ?}
|| exec('pd_buf_del','plan_dostaw',_a,$SC.ref())
?};
~~


\sc_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - stan magazynowy
::   WE: _a - PD_BUF_D.KOD
::  OLD: \sc_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$SC.ref())


\sc_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuła startowa - stan magazynowy
::   WE: _a - PD_BUF_D.KOD
::  OLD: \sc_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

_Tab:=SC.names();

SC.cntx_psh(); ODDZ.cntx_psh();
_loop:=_Tab.first();
{!
|? _loop
|!
   SC.use(_Tab.NAME);
   ODDZ.index('KOD2'); ODDZ.prefix((_Tab.NAME-2)+1);
   {? ODDZ.first()
   ||
      SC.prefix();
      _loop1:=SC.first();
      {!
      |? _loop1
      |!
         {? SC.S
         || exec('pd_buf_add','plan_dostaw',SC.D,time(0,0,0),_a,ODDZ.KOD,SC.MAG,SC.M,SC.DK_C,SC.S,1,$SC.ref())
         ?};
         _loop1:=SC.next()
      !}
   ?};
   _loop:=_Tab.next()
!};
SC.cntx_pop(); ODDZ.cntx_pop()


\sc_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wyświetla informacje dotyczące zapisu w PD_BUF - stan magazynowy
::   WE: _a - $SC.ref()
::  OLD: \sc_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

{? _ref<>''
||
   SC.cntx_psh(); SM.cntx_psh();
   SC.use(8+_ref);
   SC.prefix();
   {? SC.seek(_ref)
   ||
      SM.index('SM'); SM.prefix(SC.MAG,SC.M);
      {? SM.first()
      || _beermg:=BEER.MG;
         _beerm:=BEER.M;
         BEER.MG:=SM.MAG;
         BEER.M:=SM.M;
         SC.index('SRDK'); SC.prefix(SC.SRDK); SC.first();
         _czyatr:=ATR.CZY_ATR;
         ATR.CZY_ATR:=0;
         SC.win_sel('WER');
         SC.select(,,,'NF(MBQ)');
         ATR.CZY_ATR:=_czyatr;
         BEER.MG:=_beermg;
         BEER.M:=_beerm
      ?}
   ?};
   SC.cntx_pop(); SM.cntx_pop()
?}


\tw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuła bufora planu dostaw - termin ważności
::   WE: _a - PD_BUF_D.KOD
::  OLD: \tw/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   SL.trig_a('add',$("exec('tw_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   SL.trig_a('put',$("exec('tw_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   SL.trig_b('del',$("exec('tw_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   SL.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   SL.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   SL.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('tw_init','%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('tw_display','%plan_dostaw',PD_BUF.REF)
?}


\tw_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a add - termin ważności
::   WE: _a - PD_BUF_D.KOD
::  OLD: \tw_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------

{? SL.IL & SL.TW<>date(0,0,0)
|| exec('pd_buf_add','plan_dostaw',SL.TW,time(0,0,0),_a,ST.ODDZ,SL.MG,SL.M,null(),SL.IL,-1,$SL.ref())
?};
~~


\tw_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - termin ważności
::   WE: _a - PD_BUF_D.KOD
::  OLD: \tw_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? SL.IL & SL.TW<>date(0,0,0)
|| {? SL.IL<>bfld('IL') | SL.TW<>bfld('TW')
   || exec('pd_buf_put','plan_dostaw',SL.TW,time(0,0,0),_a,ST.ODDZ,SL.MG,SL.M,null(),SL.IL,-1,$SL.ref())
   ?}
|| exec('pd_buf_del','plan_dostaw',_a,$SL.ref())
?};
~~


\tw_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - termin ważności
::   WE: _a - PD_BUF_D.KOD
::  OLD: \tw_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$SL.ref())


\tw_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuła startowa - termin ważności
::   WE: _a - PD_BUF_D.KOD
::  OLD: \tw_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

_Tab:=SL.names();

SL.cntx_psh(); ODDZ.cntx_psh();
_loop:=_Tab.first();
{!
|? _loop
|!
   SL.use(_Tab.NAME);
   ODDZ.index('KOD2'); ODDZ.prefix((_Tab.NAME-2)+1);
   {? ODDZ.first()
   ||
      SL.prefix();
      _loop1:=SL.first();
      {!
      |? _loop1
      |!
         {? SL.IL & SL.TW<>date(0,0,0)
         || exec('pd_buf_add','plan_dostaw',SL.TW,time(0,0,0),_a,ST.ODDZ,SL.MG,SL.M,null(),SL.IL,-1,$SL.ref())
         ?};
         _loop1:=SL.next()
      !}
   ?};
   _loop:=_Tab.next()
!};
SL.cntx_pop(); ODDZ.cntx_pop()


\tw_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wyświetla informacje dotyczące zapisu w PD_BUF - termin ważności
::   WE: _a - $SL.ref()
::  OLD: \tw_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

{? _ref<>''
||
   SL.cntx_psh();
   SL.use(8+_ref);
   SL.prefix();
   {? SL.seek(_ref)
   ||
      SL.index('MG'); SL.prefix(SL.MG,SL.M,SL.EANL,SL.TW);
      SL.win_sel('SLO');
      SL.select(,,,'TP:P')
   ?};
   SL.cntx_pop()
?}


\zk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuła bufora planu dostaw - zamówienia
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'-sprzedaży, 'W'ewnętrzne
::  OLD: \zk/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   ZK_P.trig_a('add',$("exec('zk_aadd','%plan_dostaw','"+_a+"','"+_b+"')"),-(PD_Z.TRIGNAME+_a));
   ZK_P.trig_a('put',$("exec('zk_aput','%plan_dostaw','"+_a+"','"+_b+"')"),-(PD_Z.TRIGNAME+_a));
   ZK_P.trig_b('del',$("exec('zk_bdel','%plan_dostaw','"+_a+"','"+_b+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   ZK_P.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   ZK_P.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   ZK_P.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('zk_init','%plan_dostaw',_a,_b)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('zk_display','%plan_dostaw',PD_BUF.REF)
?}


\zk_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a add - zamowienia
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'przedaży, 'W'ewnętrzne
::  OLD: \zk_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ZK_P.name()+2)='__'
||
   _continue:=1;
   {? _b='W' & exec('get','#params',100704)='T'
   ||
      _continue:=exec('FindAndGet','#table',ZK_N,ZK_P.N,,"T().R='W' & TYPYZAM.T<>exec('get','#params',500011)",0)
   ?};
   {? _continue>0 & ~ZK_P.END & ZK_P.A<>'Z' & ZK_P.RODZ=_b & (ZK_P.ILP-ZK_P.ILRB)>0
   || exec('pd_buf_add','plan_dostaw',
         ZK_P.PL_DATA,
         ZK_P.PL_TIME,
         _a,
         ST.ODDZ,
         ZK_P.RMAG,
         ZK_P.M,
         ZK_P.DK_C,
         ZK_P.ILP-ZK_P.ILRB,
         -1,
         $ZK_P.ref()
      )
   ?}
?};
~~


\zk_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - zamowienia
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'przedaży, 'W'ewnętrzne
::  OLD: \zk_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ZK_P.name()+2)='__'
||
   {? ZK_P.RODZ=_b
   ||
      _continue:=1;
      {? _b='W' & exec('get','#params',100704)='T'
      ||
         _continue:=exec('FindAndGet','#table',ZK_N,ZK_P.N,,"T().R='W' & TYPYZAM.T<>exec('get','#params',500011)",0)
      ?};
      {? _continue>0 & ~ZK_P.END & ZK_P.A<>'Z' & (ZK_P.ILP-ZK_P.ILRB)>0
      ||
         {? ZK_P.M<>bfld('M')
         ||
            exec('pd_buf_del','plan_dostaw',_a,$ZK_P.ref());
            exec('pd_buf_add','plan_dostaw',
               ZK_P.PL_DATA,
               ZK_P.PL_TIME,
               _a,
               ST.ODDZ,
               ZK_P.RMAG,
               ZK_P.M,
               ZK_P.DK_C,
               ZK_P.ILP-ZK_P.ILRB,
               -1,
               $ZK_P.ref())

         |? ZK_P.A<>bfld('A')
            | ZK_P.DT<>bfld('DT')
            | ZK_P.PL_DATA<>bfld('PL_DATA')
            | ZK_P.PL_TIME<>bfld('PL_TIME')
            | ZK_P.RMAG<>bfld('RMAG')
            | ZK_P.DK_C<>bfld('DK_C')
            | ZK_P.ILP<>bfld('ILP')
            | ZK_P.ILRB<>bfld('ILRB')
         ||
            exec('pd_buf_put','plan_dostaw',
               ZK_P.PL_DATA,
               ZK_P.PL_TIME,
               _a,
               ST.ODDZ,
               ZK_P.RMAG,
               ZK_P.M,
               ZK_P.DK_C,
               ZK_P.ILP-ZK_P.ILRB,
               -1,
               $ZK_P.ref())
         ?}
      ||
         exec('pd_buf_del','plan_dostaw',_a,$ZK_P.ref())
      ?}
   ?}
?};
~~


\zk_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - zamówienia
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'-sprzedaży, 'W'ewnętrzne
::  OLD: \zk_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZK_P.RODZ=_b || exec('pd_buf_del','plan_dostaw',_a,$ZK_P.ref()) || 1 ?}


\zk_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuła startowa - zamówienia
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'przedazy, 'W'ewnętrzne
::  OLD: \zk_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

ZK_P.cntx_psh(); ODDZ.cntx_psh();
ODDZ.index('KOD2'); ODDZ.prefix();
{? ODDZ.first()
||
   _skip_zk_wew_zlim:=exec('get','#params',100704)='T';
   __p500011:=exec('get','#params',500011);
   _loop:=ODDZ.first();
   {!
   |? _loop
   |!
      ZK_P.use('zkpoz'+ODDZ.KOD+'__');
      ZK_P.index('RODZ'); ZK_P.prefix(_b);
      _loop1:=ZK_P.first();
      {!
      |? _loop1
      |!
         _continue:=1;
         {? _b='W' & _skip_zk_wew_zlim
         ||
            _continue:=exec('FindAndGet','#table',ZK_N,ZK_P.N,,"T().R='W' & TYPYZAM.T<>__p500011",0)
         ?};
         {? _continue>0 & ~ZK_P.END & ZK_P.A<>'Z' & (ZK_P.ILP-ZK_P.ILRB)>0
         || exec('pd_buf_add','plan_dostaw',
               ZK_P.PL_DATA,
               ZK_P.PL_TIME,
               _a,
               ODDZ.KOD,
               ZK_P.RMAG,
               ZK_P.M,
               ZK_P.DK_C,
               ZK_P.ILP-ZK_P.ILRB,
               -1,
               $ZK_P.ref()
            )
         ?};
         _loop1:=ZK_P.next()
      !};
      _loop:=ODDZ.next()
   !};
   VAR_DEL.delete('__p500011')
?};
ZK_P.cntx_pop(); ODDZ.cntx_pop()


\zk_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wyświetla informacje dotyczace zapisu w PD_BUF - zamówienia
::   WE: _a - $ZK_P.ref()
::  OLD: \zk_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

{? _ref<>''
||
   ZK_P.cntx_psh(); ZK_N.cntx_psh();
   ZK_P.use(8+_ref); ZK_N.use('zknag'+(8+_ref+3));
   ZK_P.prefix();
   {? ZK_P.seek(_ref)
   ||
      exec('wys_pozy','zamsiw_poz',1)
   ?};
   ZK_P.cntx_pop(); ZK_N.cntx_pop()
?}


\wew
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuła bufora planu dostaw - zamówienia wewnętrzne z przesunięciem
::   WE: _a - PD_BUF_D.KOD
::  OLD: \wew/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   ZK_N.trig_a('put',$("exec('wewn_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   ZK_P.trig_a('add',$("exec('wew_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   ZK_P.trig_a('put',$("exec('wew_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   ZK_P.trig_b('del',$("exec('wew_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   ZK_N.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   ZK_P.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   ZK_P.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   ZK_P.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('wew_init','%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('wew_display','%plan_dostaw',PD_BUF.REF)
?}


\wewn_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a add - zamowienia wewnetrzne z przesunieciem
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'-sprzedaży, 'W'ewnetrzne
::  OLD: \wewn_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ZK_N.name()+2)='__' & ZK_N.T().R='W' & ZK_N.MD<>bfld('MD')
|| PD_Z.TRIG_NAG:='zk_n';
   ZK_P.cntx_psh();
   ZK_P.index('TYPN');
   ZK_P.prefix('A','Z',ZK_N.ref(),1);
   _loop:=ZK_P.first();
   {!
   |? _loop
   |!
      _loop:=ZK_P.put() & ZK_P.next()
   !};
   ZK_P.cntx_pop();
   PD_Z.TRIG_NAG:=''
?};
~~


\wew_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a add - zamowienia wewnetrzne z przesunieciem
::   WE: _a - PD_BUF_D.KOD
::  OLD: \wew_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ZK_P.name()+2)='__' & ZK_P.RODZ='W'
|| ZK_N.cntx_psh();
   {? ~ZK_P.END & ZK_P.N().MD & ZK_P.ILP>0
   || exec('pd_buf_add','plan_dostaw',ZK_P.DT,time(0,0,0),_a,ST.ODDZ,ZK_N.MD,ZK_P.M,ZK_P.DK_C,ZK_P.ILP,1,$ZK_P.ref())
   ?};
   ZK_N.cntx_pop()
?};
~~


\wew_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - zamowienia wewnetrzne z przesunieciem
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'-sprzedaży, 'W'ewnetrzne
::  OLD: \wew_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ZK_P.name()+2)='__' & ZK_P.RODZ='W'
||
   {? PD_Z.TRIG_NAG='zk_n'
   || _md:=ZK_N.MD;
      _anulowane:=ZK_N.STAT_REJ='A'
   || _anulowane:=0;
      ZK_N.cntx_psh();
      _rr:=#ZK_P.N;
      _rn:=ref_name(ZK_P.N);
      {? _rr>0 & ZK_N.r_lock(1,1,1,_rr,_rn)
      || _md:=ZK_P.N().MD;
         _anulowane:=ZK_N.STAT_REJ='A'
      || _md:=null
      ?};
      ZK_N.cntx_pop()
   ?};
   {? ~ZK_P.END & ZK_P.ILP>0 & _md & ~_anulowane
   ||
      {? PD_Z.TRIG_NAG='zk_n'
         | ZK_P.DT<>bfld('DT')
         | ZK_P.DK_C<>bfld('DK_C')
         | ZK_P.ILP<>bfld('ILP')
      || {? PD_Z.TRIG_NAG='zk_n'
         || exec('pd_buf_put','plan_dostaw',ZK_P.DT,time(0,0,0),_a,ST.ODDZ,_md,ZK_P.M,ZK_P.DK_C,ZK_P.ILP,1,$ZK_P.ref())
         || exec('pd_buf_put','plan_dostaw',ZK_P.DT,time(0,0,0),_a,ST.ODDZ,_md,ZK_P.M,ZK_P.DK_C,ZK_P.ILP,1,$ZK_P.ref())
         ?}
      ?}
   || exec('pd_buf_del','plan_dostaw',_a,$ZK_P.ref())
   ?}
?};
~~


\wew_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - zamowienia wewnetrzne z przesunieciem
::   WE: _a - PD_BUF_D.KOD
::  OLD: \wew_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$ZK_P.ref())


\wew_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formula startowa - zamowienia wewnetrzne z przesunieciem
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'-sprzedaży, 'W'ewnetrzne
::  OLD: \wew_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

ZK_N.cntx_psh(); ZK_P.cntx_psh(); ODDZ.cntx_psh();
ODDZ.index('KOD2'); ODDZ.prefix();
{? ODDZ.first()
||
   _loop:=ODDZ.first();
   {!
   |? _loop
   |!
      ZK_N.use('zknag'+ODDZ.KOD+'__');
      ZK_P.use('zkpoz'+ODDZ.KOD+'__');
      ZK_P.index('RODZ'); ZK_P.prefix('W');
      _loop1:=ZK_P.first();
      {!
      |? _loop1
      |!
         {? ~ZK_P.END & ZK_P.N().MD & ZK_P.ILP>0
         || exec('pd_buf_add','plan_dostaw',ZK_P.DT,time(0,0,0),_a,ODDZ.KOD,ZK_N.MD,ZK_P.M,ZK_P.DK_C,ZK_P.ILP,1,$ZK_P.ref())
         ?};
         _loop1:=ZK_P.next()
      !};
      _loop:=ODDZ.next()
   !}
?};
ZK_N.cntx_pop(); ZK_P.cntx_pop(); ODDZ.cntx_pop()


\wew_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wyswietla informacje dotyczace zapisu w PD_BUF - zamowienia wewnetrzne z przesunieciem
::   WE: _a - $ZK_P.ref()
::  OLD: \wew_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zk_display','%plan_dostaw',_a)


\zd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formula bufora planu dostaw - zamowienia dostaw
::   WE: _a - PD_BUF_D.KOD
::  OLD: \zd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   ZD_NAG.trig_a('put',$("exec('zdn_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   ZD_POZ.trig_a('add',$("exec('zd_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   ZD_POZ.trig_a('put',$("exec('zd_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   ZD_POZ.trig_b('del',$("exec('zd_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   ZD_NAG.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   ZD_POZ.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   ZD_POZ.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   ZD_POZ.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('zd_init','%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('zd_display','%plan_dostaw',PD_BUF.REF)
?}


\zdn_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a add - zamowienia dostaw
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'-sprzedaży, 'W'ewnetrzne
::  OLD: \zd_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ZD_NAG.name()+2)='__'
   & (ZD_NAG.DTPREAL<>bfld('DTPREAL') | ZD_NAG.STAN='M' | ZD_NAG.STAN='Q')
|| PD_Z.TRIG_NAG:='zd_nag';
   ZD_NAG.cntx_psh();
   ZD_POZ.cntx_psh();
   ZD_POZ.use('zdpoz'+(ref_name(ZD_NAG.ref())+3));
   ZD_POZ.index('POZ');
   ZD_POZ.prefix(ZD_NAG.ref());
   _loop:=ZD_POZ.first();
   {!
   |? _loop
   |!
      _loop:=ZD_POZ.put() & ZD_POZ.next()
   !};
   ZD_NAG.cntx_pop();
   ZD_POZ.cntx_pop();
   PD_Z.TRIG_NAG:=''
?};
~~


\zd_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a add - zamowienia dostaw
::   WE: _a - PD_BUF_D.KOD
::  OLD: \zd_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ZD_POZ.name()+2)='__'
||
   ZD_NAG.cntx_psh();
   _jmz:=ZD_POZ.WS2<>1 & ZD_POZ.M().J2=null() & ZD_POZ.M().J<>ZD_POZ.JM;
   _ilpoz:={? ZD_POZ.END
           || 0
           |? _jmz & ZD_POZ.WS2<>1
           || ZD_POZ.IL_POZ*ZD_POZ.WS2 $ ZD_POZ.M().DOKL
           || ZD_POZ.IL_POZ
           ?};
   _il:=
      {? ZD_POZ.END
      || 0
      |? ZD_POZ.ZRE='T'
      || 0
      || exec('obl_ptw','zamdst_ptw',$ZD_POZ.ref(),1,0);
         {? __zdp_sum.IL_PTW>0
         || _ilpoz-__zdp_sum.IL_PTW+__zdp_sum.IL_REA
         || _ilpoz
         ?}
      ?};
   {? _il>0
   || _d_potw:={? ZD_POZ.D_POTW<>date(0,0,0)
               || ZD_POZ.D_POTW
               || _msk:=form(8+$ZD_POZ.ZD_NAG);
                  _irf:=#ZD_POZ.ZD_NAG;
                  _blk:=ZD_NAG.r_lock(1,1,1,_irf,_msk);
                  {? _blk || ZD_POZ.ZD_NAG().DTPREAL || date() ?}
               ?};
      exec('pd_buf_add','plan_dostaw',_d_potw,time(0,0,0),_a,ST.ODDZ,ZD_POZ.MG,ZD_POZ.M,ZD_POZ.DK_C,_il,1,$ZD_POZ.ref())
   ?};
   ZD_NAG.cntx_pop()
?};
~~


\zd_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - zamowienia dostaw
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'-sprzedaży, 'W'ewnetrzne
::  OLD: \zd_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ZD_POZ.name()+2)='__'
||
:: DRO:[rr] brak
   _jmz:=ZD_POZ.WS2<>1 & ZD_POZ.M().J2=null() & ZD_POZ.M().J<>ZD_POZ.JM;
   _ilpoz:={? ZD_POZ.END
           || 0
           |? _jmz & ZD_POZ.WS2<>1
           || ZD_POZ.IL_POZ*ZD_POZ.WS2 $ ZD_POZ.M().DOKL
           || ZD_POZ.IL_POZ
           ?};
   _il:=
      {? ZD_POZ.END
      || 0
      |? ZD_POZ.ZRE='T'
      || 0
      || exec('obl_ptw','zamdst_ptw',$ZD_POZ.ref(),1,0);
         {? __zdp_sum.IL_PTW>0
         || _ilpoz-__zdp_sum.IL_PTW+__zdp_sum.IL_REA
         || _ilpoz
         ?}
      ?};
   {? _il>0
   ||
      {? PD_Z.TRIG_NAG='zd_nag'
      || _d_potw:={? ZD_POZ.D_POTW<>date(0,0,0) || ZD_POZ.D_POTW || ZD_NAG.DTPREAL ?};
         exec('pd_buf_put','plan_dostaw',_d_potw,time(0,0,0),_a,ST.ODDZ,ZD_POZ.MG,ZD_POZ.M,ZD_POZ.DK_C,_il,1,$ZD_POZ.ref())
      || ZD_NAG.cntx_psh();
         ZD_NAG.use(ref_name(ZD_POZ.ZD_NAG));
         _d_potw:={? ZD_POZ.D_POTW<>date(0,0,0)
                  || ZD_POZ.D_POTW
                  || _msk:=form(8+$ZD_POZ.ZD_NAG);
                     _irf:=#ZD_POZ.ZD_NAG;
                     _blk:=ZD_NAG.r_lock(1,1,1,_irf,_msk);
                     {? _blk || ZD_POZ.ZD_NAG().DTPREAL || date() ?}
                  ?};
         exec('pd_buf_put','plan_dostaw',_d_potw,time(0,0,0),_a,ST.ODDZ,ZD_POZ.MG,ZD_POZ.M,ZD_POZ.DK_C,_il,1,$ZD_POZ.ref());
         ZD_NAG.cntx_pop()
      ?}
   || exec('pd_buf_del','plan_dostaw',_a,$ZD_POZ.ref())
   ?}
?};
~~


\zd_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - zamowienia dostaw
::   WE: _a - PD_BUF_D.KOD
::  OLD: \zd_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$ZD_POZ.ref())


\zd_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formula startowa - zamowienia dostaw
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'-sprzedaży, 'W'ewnetrzne
::  OLD: \zd_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

_st_oddz:=ST.ODDZ;
ZD_NAG.cntx_psh(); ZD_POZ.cntx_psh(); ODDZ.cntx_psh();
ODDZ.index('KOD2'); ODDZ.prefix();
{? ODDZ.first()
||
   _loop:=ODDZ.first();
   {!
   |? _loop
   |!
      ZD_NAG.use('zdnag'+ODDZ.KOD+'__');
      ZD_POZ.use('zdpoz'+ODDZ.KOD+'__');
      ZD_POZ.index('POZ'); ZD_POZ.prefix();
      _loop1:=ZD_POZ.first();
      ST.ODDZ:=ODDZ.KOD;
      {!
      |? _loop1
      |! _jmz:=ZD_POZ.WS2<>1 & ZD_POZ.M().J2=null() & ZD_POZ.M().J<>ZD_POZ.JM;
         _ilpoz:={? ZD_POZ.END
                 || 0
                 |? _jmz & ZD_POZ.WS2<>1
                 || ZD_POZ.IL_POZ*ZD_POZ.WS2 $ ZD_POZ.M().DOKL
                 || ZD_POZ.IL_POZ
                 ?};
         _il:=
            {? ZD_POZ.END
            || 0
            |? ZD_POZ.ZRE='T'
            || 0
            || exec('obl_ptw','zamdst_ptw',$ZD_POZ.ref(),1,0);
               {? __zdp_sum.IL_PTW>0
               || _ilpoz-__zdp_sum.IL_PTW+__zdp_sum.IL_REA
               || _ilpoz
               ?}
            ?};
         {? _il>0
         || _d_potw:={? ZD_POZ.D_POTW<>date(0,0,0)
                     || ZD_POZ.D_POTW
                     || _msk:=form(8+$ZD_POZ.ZD_NAG);
                        _irf:=#ZD_POZ.ZD_NAG;
                        _blk:=ZD_NAG.r_lock(1,1,1,_irf,_msk);
                        {? _blk || ZD_POZ.ZD_NAG().DTPREAL || date() ?}
                     ?};
            exec('pd_buf_add','plan_dostaw',_d_potw,time(0,0,0),_a,ODDZ.KOD,ZD_POZ.MG,ZD_POZ.M,ZD_POZ.DK_C,_il,1,$ZD_POZ.ref())
         ?};
         _loop1:=ZD_POZ.next()
      !};
      _loop:=ODDZ.next()
   !}
?};
ST.ODDZ:=_st_oddz;
ZD_NAG.cntx_pop(); ZD_POZ.cntx_pop(); ODDZ.cntx_pop()


\zd_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wyswietla informacje dotyczace zapisu w PD_BUF - zamowienia dostaw
::   WE: _a - $ZD_POZ.ref()
::  OLD: \zd_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

{? _ref<>''
|| _atrmjs:=ATR.MJS;
   ZD_POZ.cntx_psh();
   ZD_POZ.use(8+_ref);
   ZD_POZ.prefix();
   {? ZD_POZ.seek(_ref)
   || M.cntx_psh();
      D_HELP.M_ZDPOZ:=ZD_POZ.M().KTM;
      exec('zdpo_wys','zamdst_poz');
      M.cntx_pop()
   ?};
   ZD_POZ.cntx_pop();
   ATR.MJS:=_atrmjs
?}


\zl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: Formula bufora planu dostaw - produkt zlecenia
::       Produkt zlecenia w niezrealizowanej ilosci dostepny na wewnetrzny termin realizacji
::       Dotyczy tylko zlecen produkcyjnych
::   WE: _a - PD_BUF_D.KOD
::  OLD: \zl/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wl.
{? PD_Z.PAR='T'
||
   ZL.trig_a('add',$("exec('zl_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   ZL.trig_a('put',$("exec('zl_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   ZL.trig_b('del',$("exec('zl_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wyl.
|? PD_Z.PAR='N'
||
   ZL.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   ZL.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   ZL.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('zl_init','%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('zl_display','%plan_dostaw',PD_BUF.REF)
?}


\zl_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: trig_a add - produkt zlecenia
::   WE: _a - PD_BUF_D.KOD
::  OLD: \zl_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZL.TYP().WP='P' & ZL.IL>0
   & ZL.RP='T'
::   & (ZL.RODZAJ='P' & ZL.NRNZL=0 | ZL.RODZAJ='Z' | ZL.RODZAJ='P' & exec('is_separate_zl','zl_link',ZL.ref()))
|| exec('pd_buf_add','plan_dostaw',
      ZL.PL_DATA,
      ZL.PL_TIME,
      _a,
      ZL.ODDZ,
      ZL.MG,
      ZL.KTM,
      ZL.DK_C,
      ZL.IL,
      1,
      $ZL.ref()
   )
?};
~~


\zl_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: trig_a put - produkt zlecenia
::   WE: _a - PD_BUF_D.KOD
::  OLD: \zl_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZL.TYP().WP='P' & ZL.STAN<>'Z' & ZL.ILPDOK>0
   & ZL.RP='T'
::   & (ZL.RODZAJ='P' & ZL.NRNZL=0 | ZL.RODZAJ='Z' | ZL.RODZAJ='P' & exec('is_separate_zl','zl_link',ZL.ref()))
|| {? ZL.ILPDOK<>bfld('ILPDOK') |
      ZL.MG<>bfld('MG') |
      ZL.PL_DATA<>bfld('PL_DATA') |
      ZL.PL_TIME<>bfld('PL_TIME') |
      ZL.STAN<>bfld('STAN')
   || exec('pd_buf_put','plan_dostaw',
         ZL.PL_DATA,
         ZL.PL_TIME,
         _a,
         ZL.ODDZ,
         ZL.MG,
         ZL.KTM,
         ZL.DK_C,
         ZL.ILPDOK,
         1,
         $ZL.ref()
      )
   ?}
|| exec('pd_buf_del','plan_dostaw',_a,$ZL.ref())
?};
~~


\zl_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: trig_b del - produkt zlecenia
::   WE: _a - PD_BUF_D.KOD
::  OLD: \zl_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$ZL.ref())


\zl_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: formula startowa - produkt zlecenia
::   WE: _a - PD_BUF_D.KOD
::  OLD: \zl_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

:: Zlecenia produkcyjne, niezamknięte, do których raportowany jest produkt
ZL.cntx_psh();
ZL.clear();
{? ZL.first()
|| {!
   |?
      {? ZL.TYP().WP='P' & ZL.STAN<>'Z' & ZL.ILPDOK>0
         & ZL.RP='T'
::         & (ZL.RODZAJ='P' & ZL.NRNZL=0 | ZL.RODZAJ='Z' | ZL.RODZAJ='P' & exec('is_separate_zl','zl_link',ZL.ref()))
      || exec('pd_buf_add','plan_dostaw',
            ZL.PL_DATA,
            ZL.PL_TIME,
            _a,
            ZL.ODDZ,
            ZL.MG,
            ZL.KTM,
            ZL.DK_C,
            ZL.ILPDOK,
            1,
            $ZL.ref()
         )
      ?};
      ZL.next()
   !}
?};
ZL.cntx_pop();
~~


\zl_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: wyświetla informacje dotyczące zapisu w PD_BUF - produkt zlecenia
::   WE: _a - $ZL.ref()
::  OLD: \zl_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a<>''
||
   ZL.cntx_psh();
   ZL.clear();
   {? ZL.seek(_a)
   || exec('zl_display','zl_head')
   ?};
   ZL.cntx_pop()
?};
~~


\zlim
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: formula bufora planu dostaw - zapotrzebowania do zlecenia
::   WE: _a - PD_BUF_D.KOD
::       _b - limit(T)/nielimit(N)
::  OLD: \zlim/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wl.
{? PD_Z.PAR='T'
||
   ZLIM.trig_a('add',$("exec('zlim_aadd','%plan_dostaw','"+_a+"','"+_b+"')"),-(PD_Z.TRIGNAME+_a));
   ZLIM.trig_a('put',$("exec('zlim_aput','%plan_dostaw','"+_a+"','"+_b+"')"),-(PD_Z.TRIGNAME+_a));
   ZLIM.trig_b('del',$("exec('zlim_bdel','%plan_dostaw','"+_a+"','"+_b+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wyl.
|? PD_Z.PAR='N'
||
   ZLIM.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   ZLIM.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   ZLIM.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('zlim_init','%plan_dostaw',_a,_b)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('zlim_display','%plan_dostaw',PD_BUF.REF)
?}


\zlim_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: trig_a add - zapotrzebowania do zlecenia
::   WE: _a - PD_BUF_D.KOD
::       _b - limit(T)/nielimit(N)
::  OLD: \zlim_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZLIM.LIMIT=_b
||
   ZL.cntx_psh(); GROP.cntx_psh();
   _il:=ZLIM.LIL;

   exec('pd_buf_add','plan_dostaw',
      ZLIM.STARTD,
      ZLIM.STARTT,
      _a,
      {? ZLIM.GROP<>null() || ZLIM.GROP().ODDZ || ZLIM.ZLEC().ODDZ ?},
      ZLIM.MG,
      ZLIM.KTM,
      ZLIM.DK_C,
      _il,
      {? ZLIM.SO='S' || -1 || 1 ?},
      $ZLIM.ref()
   );
   ZL.cntx_pop(); GROP.cntx_pop()
?};
~~


\zlim_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: trig_a put - zapotrzebowania do zlecenia
::   WE: _a - PD_BUF_D.KOD
::       _b - limit(T)/nielimit(N)
::  OLD: \zlim_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZLIM.LIMIT=_b
||
   ZL.cntx_psh(); GROP.cntx_psh();
   _p100704:=exec('get','#params',100704);
   {? _p100704='T'
      & {? ZLIM.GROP<>null() || ZLIM.GROP().STATUS='Z' || ZLIM.ZLEC().STAN='Z' ?}
   ||
::    zamknięte zlecenia / grupa operacji
      exec('pd_buf_del','plan_dostaw',_a,$ZLIM.ref())
   |? _p100704='N' & ZLIM.LIMIT='T' & ZLIM.AKC='T' & ZLIM.SO='S'
   ||
::    akceptowane limity usuwamy, bo są do nich zamówienia
      exec('pd_buf_del','plan_dostaw',_a,$ZLIM.ref())
   |? ZLIM.AKC='Z'
   ||
::    niezaakceptowane limity i wszystkie nielimity do zamknietego zlecenia usuwamy
      exec('pd_buf_del','plan_dostaw',_a,$ZLIM.ref())
   ||
      {? ZLIM.LIL<>bfld('LIL') |
         ZLIM.MG<>bfld('MG') |
         ZLIM.STARTD<>bfld('STARTD') |
         ZLIM.STARTT<>bfld('STARTT') |
         ZLIM.AKC<>bfld('AKC') |
         ZLIM.SO<>bfld('SO') |
         ZLIM.LIMIT='N' |
         _p100704='T' & ZLIM.LIMIT='T' & ZLIM.SO='S'
      ||
::       ustal ilość pobraną, gdy nielimitowany
         {? ZLIM.LIMIT='N' |  _p100704='T' & ZLIM.LIMIT='T' & ZLIM.SO='S'
         || _il_pob:=ZLIM.IL_RW-ZLIM.IL_ZW
         || _il_pob:=0
         ?};

         _il:=ZLIM.LIL-_il_pob;

         {? _il<>0
         ||
            ZL.cntx_psh(); GROP.cntx_psh();
            exec('pd_buf_put','plan_dostaw',
               ZLIM.STARTD,
               ZLIM.STARTT,
               _a,
               {? ZLIM.GROP<>null() || ZLIM.GROP().ODDZ || ZLIM.ZLEC().ODDZ ?},
               ZLIM.MG,
               ZLIM.KTM,
               ZLIM.DK_C,
               _il,
               {? ZLIM.SO='S' || -1 || 1 ?},
               $ZLIM.ref()
            );
            ZL.cntx_pop(); GROP.cntx_pop()
         || exec('pd_buf_del','plan_dostaw',_a,$ZLIM.ref())
         ?}
      ?}
   ?};
   ZL.cntx_pop(); GROP.cntx_pop()
?};
~~


\zlim_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: trig_b del - zapotrzebowania do zlecenia
::   WE: _a - PD_BUF_D.KOD
::       _b - limit(T)/nielimit(N)
::  OLD: \zlim_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$ZLIM.ref())


\zlim_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: formuła startowa - zapotrzebowania do zlecenia
::   WE: _a - PD_BUF_D.KOD
::       _b - limit(T)/nielimit(N)
::  OLD: \zlim_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

Cntx.psh(ZL,ZLIM,GROP);

__p100704:=exec('get','#params',100704);

_formula:=$("
   ZLIM.for_each(\"
      {? ZLIM.LIMIT='"+_b+"'
         & (ZLIM.AKC='N' | ZLIM.LIMIT='N' | ZLIM.SO='O' | __p100704='T')
         & {? ZLIM.GROP<>null() || ZLIM.GROP().STATUS<>'Z' || ZLIM.ZLEC().STAN<>'Z' ?}
      ||
::       ustal ilość pobraną, gdy nielimitowany
         {? ZLIM.LIMIT='N' | __p100704='T' & ZLIM.LIMIT='T' & ZLIM.SO='S'
         || _il_pob:=ZLIM.IL_RW-ZLIM.IL_ZW
         || _il_pob:=0
         ?};

         _il:=ZLIM.LIL-_il_pob;

         exec('pd_buf_add','plan_dostaw',
            ZLIM.STARTD,
            ZLIM.STARTT,
            '"+_a+"',
            {? ZLIM.GROP<>null() || ZLIM.GROP().ODDZ || ZLIM.ZLEC().ODDZ ?},
            ZLIM.MG,
            ZLIM.KTM,
            ZLIM.DK_C,
            _il,
            {? ZLIM.SO='S' || -1 || 1 ?},
            $ZLIM.ref()
         )
      ?}
   \")
");

exec('for_each_mask','#table',ZLIM,_formula);

Cntx.pop(ZL,ZLIM,GROP);
VAR_DEL.delete('__p100704');
~~


\zlim_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: wyswietla informacje dotyczace zapisu w PD_BUF - zapotrzebowania do zlecenia
::   WE: _a - $ZLIM.ref()
::  OLD: \zlim_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
_zlim:=_a;

{? _zlim<>''
||
   _formula:="
      _a_zlec:=VAR.A_ZLEC;
      _a_grop:=VAR.A_GROP;
      VAR.A_ZLEC:=ZLIM.ZLEC;
      VAR.A_GROP:=ZLIM.GROP;
      exec('bs_zlimw','zl_limit');
      VAR.A_ZLEC:=_a_zlec;
      VAR.A_GROP:=_a_grop;
      ~~
   ";
   exec('FindAndGet','#table',ZLIM,_zlim,,_formula,~~)
?};
~~


:: formuły planu dostaw: STAN MAGAZYNOWY
\inf_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - informacje
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \inf/pd_d.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Informacje';
_args.LEG_KOD:='PDA#01#02#INF';
_args.T:="exec('inf_t','%plan_dostaw',_a,_b)";
_args.K:="exec('inf_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('inf_i','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\inf_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: informacje - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \inf_t/pd_d.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\inf_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: termin waznosci - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \inf_k/pd_d.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\inf_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: informacje - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \inf_i/pd_d.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',7)


\pdkp_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw (przychod) - koszyk planu dostaw
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \pdkp/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Koszyk planu dostaw (przychód)';
_args.LEG_KOD:='PDA#01#02#PDKP';
_args.T:="exec('pdkp_t','%plan_dostaw',_a,_b)";
_args.K:="exec('pdkp_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('pdkp_i','%plan_dostaw',_a,_b)";
_args.S:="exec('pdkp_s','%plan_dostaw',_a,_b)";
_args.V:="exec('pdkp_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\pdkp_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: koszyk planu dostaw (przychod) - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuły planu dostaw
::  OLD: \pdkp_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\pdkp_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: koszyk planu dostaw (przychod) - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pdkp_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\pdkp_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: koszyk planu dostaw (przychod) - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pdkp_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\pdkp_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: koszyk planu dostaw (przychod) - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pdkp_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); PD_K.cntx_psh(); MG.cntx_psh(); KH.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         PD_K.use(8+PD_BUF.REF);
         PD_K.prefix();
         {? PD_K.seek(PD_BUF.REF)
         || _kh:={? PD_K.KH || ', od '+PD_K.KH().SKR || '' ?};
            _mg:={? PD_K.Z_MG || ', z mag.'+PD_K.Z_MG().SYM || '' ?};
            _opis:='Data zam.: '+$PD_K.DZ+_kh+_mg+', id: '+$PD_K.ID
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='P';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('pdkp_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILP:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('pdkp_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); PD_K.cntx_pop(); MG.cntx_pop(); KH.cntx_pop()


\pdkp_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: koszyk planu dostaw (przychod) - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pdkp_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pdk_display','%plan_dostaw',cur_tab(1,1).REF)


\pdkr_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - koszyk planu dostaw (rozchod)
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \pdkr/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Koszyk planu dostaw (rozchód)';
_args.LEG_KOD:='PDA#01#02#PDKR';
_args.T:="exec('pdkr_t','%plan_dostaw',_a,_b)";
_args.K:="exec('pdkr_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('pdkr_i','%plan_dostaw',_a,_b)";
_args.S:="exec('pdkr_s','%plan_dostaw',_a,_b)";
_args.V:="exec('pdkr_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\pdkr_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: koszyk planu dostaw (rozchod) - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pdkr_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\pdkr_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: koszyk planu dostaw - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pdkr_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~Podstawowy')


\pdkr_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: koszyk planu dostaw (rozchod) - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pdkr_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\pdkr_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: koszyk planu dostaw (rozchod) - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pdkr_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); PD_K.cntx_psh(); MG.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         PD_K.use(8+PD_BUF.REF);
         PD_K.prefix();
         {? PD_K.seek(PD_BUF.REF)
         || _opis:='Data zam.:'+$PD_K.DZ+', id: '+$PD_K.ID
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='R';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('pdkr_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILR:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('pdkr_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); PD_K.cntx_pop(); MG.cntx_pop()


\pdkr_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: koszyk planu dostaw (rozchod) - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pdkr_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pdk_display','%plan_dostaw',cur_tab(1,1).REF)


\pxsur_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: formuly planu dostaw - zapotrzebowanie do planu strategicznego
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \pxsur/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Zapotrzebowanie do planu strategicznego';
_args.LEG_KOD:='PDA#01#02#PXSUR';
_args.T:="exec('pxsur_t','%plan_dostaw',_a,_b)";
_args.K:="exec('pxsur_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('pxsur_i','%plan_dostaw',_a,_b)";
_args.S:="exec('pxsur_s','%plan_dostaw',_a,_b)";
_args.V:="exec('pxsur_v','%plan_dostaw',_a,_b)";
_args.O:="exec('pxsur_o','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\pxsur_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do planu strategicznego - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pxsur_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\pxsur_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do planu strategicznego - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pxsur_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\pxsur_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do planu strategicznego - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pxsur_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',159)


\pxsur_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do planu strategicznego - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pxsur_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PX_SUR.cntx_psh(); PX_SUR.clear();
PX_POZ.cntx_psh(); PX_POZ.clear();
PX_OBJ.cntx_psh();
PD_BUF.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         {? PX_SUR.seek(PD_BUF.REF)
         || {? PX_POZ.seek(PX_SUR.PX_POZ)
            || _opis:=PX_POZ.PX_GRP().SYMBOL
            ?}
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:={? PD_BUF.WSP=-1 || 'R' || 'P' ?};
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('pxsur_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         {? PD_BUF.WSP=-1 || _params.ILR:=PD_BUF.IL; _params.ILP:=0 || _params.ILR:=0; _params.ILP:=PD_BUF.IL ?};
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('pxsur_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop();
PX_SUR.cntx_pop();
PX_POZ.cntx_pop();
PX_OBJ.cntx_pop();
~~


\pxsur_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do planu strategicznego - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \pxsur_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pxsur_display','%plan_dostaw',cur_tab(1,1).REF)


\pxsur_o
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do planu strategicznego - formula obslugi powiadomienia
::       Formula nieaktywna - zmienic wynik na 1, gdy bedzie uzywana
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - oryginalne parametry formuly planu dostaw
::  OLD: \pxsur_o/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
{? _b.B.DISPLAY
||
   PX_SUR.cntx_psh(); PX_SUR.clear();
   PX_POZ.cntx_psh(); PX_POZ.clear();
   PX_OBJ.cntx_psh();

   {? PX_SUR.seek(cur_tab(1,1).REF)
   || {? PX_POZ.seek(PX_SUR.PX_POZ)
      || _opis:=PX_POZ.PX_GRP().SYMBOL;
         _args:=exec('add_komm_a','px_komm');
         _args.MESSAGE:='Brak materiału dla: '+_opis;
::         _args.TYP:=exec('type_error','px_komm');
::         _args.TYP:=exec('type_warning','px_komm');
         _args.TYP:=exec('type_info','px_komm');
         _args.SRC_KIND:=exec('src_plan_prefix','px_komm')+' brak materiału';
         _args.PX_VER:=PX_POZ.PX_VER;
::         _args.PX_GRP:=PX_POZ.PX_GRP;
::         _args.PX_CUP:=PX_POZ.PX_CUP;
::         _args.PX_OBJ:=PX_POZ.PX_OBJ;
         exec('add_komm','px_komm',_args)
      ?}
   ?};

   PX_SUR.cntx_pop();
   PX_POZ.cntx_pop();
   PX_OBJ.cntx_pop()
?};
0


\rez_mag_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - ilosc w wydaniu - dokumentym magazynowe
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \rez_mag/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Ilość w wydaniu - magazyn';
_args.LEG_KOD:='PDA#01#02#REZMG';
_args.T:="exec('rez_mag_t','%plan_dostaw',_a,_b)";
_args.K:="exec('rez_mag_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('rez_mag_i','%plan_dostaw',_a,_b)";
_args.S:="exec('rez_mag_s','%plan_dostaw',_a,_b)";
_args.V:="exec('rez_mag_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\rez_mag_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: ilosc w wydaniu - dokumentym magazynowe - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_mag_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\rez_mag_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: ilosc w wydaniu - dokumentym magazynowe - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_mag_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\rez_mag_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: ilosc w wydaniu - dokumentym magazynowe - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_mag_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',185)


\rez_mag_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: ilosc w wydaniu - dokumenty magazynowe - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_mag_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); REZ.cntx_psh(); ND.cntx_psh(); DK.cntx_psh(); KH.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         REZ.use(7+PD_BUF.REF);
         REZ.prefix();
         {? REZ.seek(PD_BUF.REF)
         ||
            {? (4+REZ.REFSQL)='karo'
            || KARO.prefix();
               {? KARO.seek(REZ.REFSQL)
               || _kh:={? KARO.KH || KARO.KH().SKR+' ' || '' ?};
                  _opis:=_kh+' wyposażenie: '+KARO.P().OSOBA().NAZWISKO+' '+KARO.P().OSOBA().PIERWSZE+' id: '+
                     $KARO.P().IP
               ?}
            |? REZ.DK<>null()
            || DK.use(ref_name(REZ.DK));
               DK.prefix();
               {? DK.seek(REZ.DK)
               || ND.use(ref_name(DK.N));
                  _kh:={? DK.N().KH || ND.KH().SKR+' ' || '' ?};
                  _opis:=_kh+ND.TYP().T+' - '+$ND.NR+' poz.'+$DK.P
               ?}
            ?}
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='R';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('rez_mag_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILR:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('rez_mag_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); REZ.cntx_pop(); ND.cntx_pop(); DK.cntx_pop(); KH.cntx_pop()


\rez_mag_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: ilosc w wydaniu - dokumentym magazynowe - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_mag_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rez_display','%plan_dostaw',_b.A,cur_tab(1,1).REF)


\rez_spr_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - ilosc w wydaniu - faktury typu G
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \rez_spr/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Ilość w wydaniu - sprzedaż';
_args.LEG_KOD:='PDA#01#02#REZSP';
_args.T:="exec('rez_spr_t','%plan_dostaw',_a,_b)";
_args.K:="exec('rez_spr_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('rez_spr_i','%plan_dostaw',_a,_b)";
_args.S:="exec('rez_spr_s','%plan_dostaw',_a,_b)";
_args.V:="exec('rez_spr_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\rez_spr_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: ilosc w wydaniu - faktury typu G - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_spr_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\rez_spr_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: ilosc w wydaniu - faktury typu G - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_spr_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\rez_spr_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: ilosc w wydaniu - faktury typu G - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_spr_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',185)


\rez_spr_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: ilosc w wydaniu - faktury typu G - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_spr_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); REZ.cntx_psh(); FAKS.cntx_psh(); FAP.cntx_psh(); KH.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         REZ.use(7+PD_BUF.REF);
         REZ.prefix();
         {? REZ.seek(PD_BUF.REF)
         ||
            FAP.use(ref_name(REZ.FAP));
            FAP.prefix();
            {? FAP.seek(REZ.FAP)
            || FAKS.use(ref_name(FAP.FAKS));
               _kh:={? FAP.FAKS().KH || FAKS.KH().SKR+' ' || '' ?};
               _opis:=_kh+FAKS.T().T+' - '+$FAKS.NR+' poz.'+$FAP.POZ
            ?}
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='R';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('rez_spr_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILR:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('rez_spr_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); REZ.cntx_pop(); FAKS.cntx_pop(); FAP.cntx_pop(); KH.cntx_pop()


\rez_spr_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: ilosc w wydaniu - faktury typu G - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_spr_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rez_display','%plan_dostaw',_b.A,cur_tab(1,1).REF)


\rez_tmp_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - rezerwacje tymczasowe
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \rez_tmp/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Rezerwacja tymczasowa';
_args.LEG_KOD:='PDA#01#02#REZTMP';
_args.T:="exec('rez_tmp_t','%plan_dostaw',_a,_b)";
_args.K:="exec('rez_tmp_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('rez_tmp_i','%plan_dostaw',_a,_b)";
_args.S:="exec('rez_tmp_s','%plan_dostaw',_a,_b)";
_args.V:="exec('rez_tmp_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\rez_tmp_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje tymczasowe - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_tmp_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\rez_tmp_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje tymczasowe - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_tmp_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\rez_tmp_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje tymczasowe - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_tmp_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',16)


\rez_tmp_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje tymczasowe - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_tmp_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); REZ.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         REZ.use(7+PD_BUF.REF);
         REZ.prefix();
         {? REZ.seek(PD_BUF.REF)
         || _opis:='Użytkownik: '+REZ.US().KOD+', dla: '+REZ.KH().SKR+', ważna do: '+$REZ.DODT
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='R';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('rez_tmp_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILR:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('rez_tmp_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); REZ.cntx_pop()


\rez_tmp_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje tymczasowe - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_tmp_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rez_display','%plan_dostaw',_b.A,cur_tab(1,1).REF)


\rez_wew_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - rezerwacje zamowien wewnetrznych
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \rez_wew/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Rezerwacja zam. wewnętrznych';
_args.LEG_KOD:='PDA#01#02#REZWEW';
_args.T:="exec('rez_wew_t','%plan_dostaw',_a,_b)";
_args.K:="exec('rez_wew_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('rez_wew_i','%plan_dostaw',_a,_b)";
_args.S:="exec('rez_wew_s','%plan_dostaw',_a,_b)";
_args.V:="exec('rez_wew_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\rez_wew_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje zamowien wewnetrznych - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_wew_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\rez_wew_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje zamowien wewnetrznych - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_wew_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\rez_wew_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje zamowien wewnetrznych - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_wew_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',61)


\rez_wew_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje zamowien wewnetrznych - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_wew_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); REZ.cntx_psh(); ZK_N.cntx_psh(); ZK_P.cntx_psh(); KH.cntx_psh(); ZL.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix('REZ_ZAM',_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         {? (4+PD_BUF.REF)='rezz'
         || REZ.use(form(8+PD_BUF.REF));
            REZ.prefix();
            {? REZ.seek(PD_BUF.REF) & REZ.ZK_P<>null()
            || ZK_P.use(ref_name(REZ.ZK_P));
               ZK_P.prefix();
               {? ZK_P.seek(REZ.ZK_P) & ZK_P.RODZ='W'
               ||
                  ZK_N.use(ref_name(ZK_P.N));
                  _zl:={? ZK_P.ZL || ', zlecenie: '+ZK_P.ZL().SYM || '' ?};
                  _opis:=ZK_P.N().SYM+' poz.'+$ZK_P.POZ+_zl;

                  _params.MG:=PD_BUF.MG().SYM;
                  _params.ODDZ:=PD_BUF.ODDZ;
                  _params.D:=PD_BUF.D;
                  _params.T:=PD_BUF.T;
                  _params.PRZY_ROZ:='R';
                  _params.PD_D_KOD:=_pdd_kod;
                  _params1.PAR:='T';
                  _params.TYP:=exec('rez_wew_pl','%plan_dostaw',_pdd_kod,_params1);
                  _params.O:=_opis;
                  _params.ILR:=PD_BUF.IL;
                  _params.DK_C:=$PD_BUF.DK_C;
                  _params1.PAR:='I'; _params1.DEF:=0;
                  _params.ICO:=exec('rez_wew_pl','%plan_dostaw',_pdd_kod,_params1);
                  _params.REF:=PD_BUF.REF;
                  exec('pda_add','plan_dostaw',_params)
               ?}
            ?}
         || ZK_P.use(form(8+PD_BUF.REF));
            ZK_P.prefix();
            {? ZK_P.seek(PD_BUF.REF) & ZK_P.RODZ='W'
            || ZK_N.use(ref_name(ZK_P.N));
               _zl:={? ZK_P.ZL || ', zlecenie: '+ZK_P.ZL().SYM || '' ?};
               _opis:=ZK_P.N().SYM+' poz.'+$ZK_P.POZ+_zl;

               _params.MG:=PD_BUF.MG().SYM;
               _params.ODDZ:=PD_BUF.ODDZ;
               _params.D:=PD_BUF.D;
               _params.T:=PD_BUF.T;
               _params.PRZY_ROZ:='R';
               _params.PD_D_KOD:=_pdd_kod;
               _params1.PAR:='T';
               _params.TYP:=exec('rez_wew_pl','%plan_dostaw',_pdd_kod,_params1);
               _params.O:=_opis;
               _params.ILR:=PD_BUF.IL;
               _params.DK_C:=$PD_BUF.DK_C;
               _params1.PAR:='I'; _params1.DEF:=0;
               _params.ICO:=exec('rez_wew_pl','%plan_dostaw',_pdd_kod,_params1);
               _params.REF:=PD_BUF.REF;
               exec('pda_add','plan_dostaw',_params)
            ?}
         ?}
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); REZ.cntx_pop(); ZK_N.cntx_pop(); ZK_P.cntx_pop(); KH.cntx_pop(); ZL.cntx_pop()


\rez_wew_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje zamowien wewnetrznych - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_wew_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rez_display','%plan_dostaw',_b.A,cur_tab(1,1).REF)


\rez_zam_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - rezerwacje zamowien sprzedazy
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \rez_zam/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Rezerwacja zam. sprzedaży';
_args.LEG_KOD:='PDA#01#02#REZZAM';
_args.T:="exec('rez_zam_t','%plan_dostaw',_a,_b)";
_args.K:="exec('rez_zam_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('rez_zam_i','%plan_dostaw',_a,_b)";
_args.S:="exec('rez_zam_s','%plan_dostaw',_a,_b)";
_args.V:="exec('rez_zam_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\rez_zam_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje zamowien sprzedazy - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_zam_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\rez_zam_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje zamowien sprzedazy - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_zam_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\rez_zam_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje zamowien sprzedazy - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_zam_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',61)


\rez_zam_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje zamowien sprzedazy - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_zam_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); REZ.cntx_psh(); ZK_N.cntx_psh(); ZK_P.cntx_psh(); KH.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         {? (4+PD_BUF.REF)='rezz'
         || REZ.use(form(8+PD_BUF.REF));
            REZ.prefix();
            {? REZ.seek(PD_BUF.REF) & REZ.ZK_P<>null()
            || ZK_P.use(ref_name(REZ.ZK_P));
               ZK_P.prefix();
               {? ZK_P.seek(REZ.ZK_P) & ZK_P.RODZ='Z'
               ||
                  ZK_N.use(ref_name(ZK_P.N));
                  _kh:={? ZK_P.N().KH || ZK_N.KH().SKR+' ' || '' ?};
                  _opis:=_kh+ZK_N.T().T+' - '+$ZK_N.NR+' poz.'+$ZK_P.POZ;

                  _params.MG:=PD_BUF.MG().SYM;
                  _params.ODDZ:=PD_BUF.ODDZ;
                  _params.D:=PD_BUF.D;
                  _params.T:=PD_BUF.T;
                  _params.PRZY_ROZ:='R';
                  _params.PD_D_KOD:=_pdd_kod;
                  _params1.PAR:='T';
                  _params.TYP:=exec('rez_zam_pl','%plan_dostaw',_pdd_kod,_params1);
                  _params.O:=_opis;
                  _params.ILR:=PD_BUF.IL;
                  _params.DK_C:=$PD_BUF.DK_C;
                  _params1.PAR:='I'; _params1.DEF:=0;
                  _params.ICO:=exec('rez_zam_pl','%plan_dostaw',_pdd_kod,_params1);
                  _params.REF:=PD_BUF.REF;
                  exec('pda_add','plan_dostaw',_params)
               ?}
            ?}
         || ZK_P.use(form(8+PD_BUF.REF));
            ZK_P.prefix();
            {? ZK_P.seek(PD_BUF.REF) & ZK_P.RODZ='Z'
            || ZK_N.use(ref_name(ZK_P.N));
               _kh:={? ZK_P.N().KH || ZK_N.KH().SKR+' ' || '' ?};
               _opis:=_kh+ZK_N.T().T+' - '+$ZK_N.NR+' poz.'+$ZK_P.POZ;

               _params.MG:=PD_BUF.MG().SYM;
               _params.ODDZ:=PD_BUF.ODDZ;
               _params.D:=PD_BUF.D;
               _params.T:=PD_BUF.T;
               _params.PRZY_ROZ:='R';
               _params.PD_D_KOD:=_pdd_kod;
               _params1.PAR:='T';
               _params.TYP:=exec('rez_zam_pl','%plan_dostaw',_pdd_kod,_params1);
               _params.O:=_opis;
               _params.ILR:=PD_BUF.IL;
               _params.DK_C:=$PD_BUF.DK_C;
               _params1.PAR:='I'; _params1.DEF:=0;
               _params.ICO:=exec('rez_zam_pl','%plan_dostaw',_pdd_kod,_params1);
               _params.REF:=PD_BUF.REF;
               exec('pda_add','plan_dostaw',_params)
            ?}
         ?}
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); REZ.cntx_pop(); ZK_N.cntx_pop(); ZK_P.cntx_pop(); KH.cntx_pop()


\rez_zam_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: rezerwacje zamowien sprzedazy - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \rez_zam_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rez_display','%plan_dostaw',_b.A,cur_tab(1,1).REF)


\sc_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - stany dostaw
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \sc/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Stan dostawy';
_args.LEG_KOD:='PDA#01#02#SC';
_args.T:="exec('sc_t','%plan_dostaw',_a,_b)";
_args.K:="exec('sc_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('sc_i','%plan_dostaw',_a,_b)";
_args.S:="exec('sc_s','%plan_dostaw',_a,_b)";
_args.V:="exec('sc_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\sc_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: stany dostaw - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \sc_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\sc_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: stany dostaw - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \sc_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\sc_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: stany dostaw - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \sc_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\sc_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: stany dostaw - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \sc_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); ND.cntx_psh(); DK.cntx_psh(); SC.cntx_psh(); KH.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();

{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         SC.use(8+PD_BUF.REF);
         SC.prefix();
         {? SC.seek(PD_BUF.REF)
         ||
            DK.use(SC.NDK);
            DK.index('DOST3');
            DK.prefix(SC.MAG,SC.M,SC.RDK,SC.NDK,'T');
            {? DK.first()
            || ND.use(ref_name(DK.N));
               _kh:={? DK.N().KH || ND.KH().SKR+' ' || '' ?};
               _opis:=_kh+ND.TYP().T+' - '+$ND.NR+' poz.'+$DK.P
            ?}
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='P';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('sc_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILP:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('sc_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); ND.cntx_pop(); DK.cntx_pop(); SC.cntx_pop(); KH.cntx_pop()


\sc_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: stany dostaw - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \sc_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('sc_display','%plan_dostaw',cur_tab(1,1).REF)


\tw_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - termin waznosci
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \tw/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Termin ważności';
_args.LEG_KOD:='PDA#01#02#TW';
_args.T:="exec('tw_t','%plan_dostaw',_a,_b)";
_args.K:="exec('tw_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('tw_i','%plan_dostaw',_a,_b)";
_args.S:="exec('tw_s','%plan_dostaw',_a,_b)";
_args.V:="exec('tw_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\tw_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: termin waznosci - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \tw_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\tw_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: termin waznosci - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \tw_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\tw_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: termin waznosci - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \tw_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\tw_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: termin waznosci - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \tw_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); SL.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         SL.use(8+PD_BUF.REF);
         SL.prefix();
         {? SL.seek(PD_BUF.REF)
         || _opis:='Do: '+$SL.TW+', lokalizacja: '+SL.EANL().KOD
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='R';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('tw_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILR:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('tw_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); SL.cntx_pop()


\tw_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: termin waznosci - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \tw_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('tw_display','%plan_dostaw',cur_tab(1,1).REF)


\zk_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - zamowienia sprzedazy
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \zk/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Zamówienie sprzedaży';
_args.LEG_KOD:='PDA#01#02#ZK';
_args.T:="exec('zk_t','%plan_dostaw',_a,_b)";
_args.K:="exec('zk_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('zk_i','%plan_dostaw',_a,_b)";
_args.S:="exec('zk_s','%plan_dostaw',_a,_b)";
_args.V:="exec('zk_v','%plan_dostaw',_a,_b)";
_args.DD:="exec('zk_dd','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\zk_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zk_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\zk_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zk_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~Standardowy')


\zk_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zk_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\zk_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zk_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); ZK_N.cntx_psh(); ZK_P.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         ZK_P.use(8+PD_BUF.REF);
         ZK_P.prefix();
         {? ZK_P.seek(PD_BUF.REF)
         ||
            ZK_N.use(ref_name(ZK_P.N));
            _opis:=ZK_P.N().KH().SKR+' '+ZK_N.SYM+' poz.'+$ZK_P.POZ
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='R';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('zk_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILP:=0;
         _params.ILR:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('zk_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); ZK_N.cntx_pop(); ZK_P.cntx_pop()


\zk_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zk_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zk_display','%plan_dostaw',cur_tab(1,1).REF)


\zk_dd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula dostawy dedykowanej
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zk_dd/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pddd_tab1_a','plan_dostaw');
PD_BUF.cntx_psh(); ZK_N.cntx_psh(); ZK_P.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK)
   || _opis:='';
      ZK_P.use(8+PD_BUF.REF);
      ZK_P.prefix();
      {? ZK_P.seek(PD_BUF.REF)
      ||
         ZK_N.use(ref_name(ZK_P.N));
         _wew:=ZK_P.N().T().R='W';
         _opis:={? _wew || 'Zamówienie wewnętrzne' || ZK_N.KH().SKR ?}+' '+ZK_N.SYM+' poz.'+$ZK_P.POZ;
         _params.D:=ZK_P.DT;
         _params.ZAM:=_opis;
         _params.IL:={? ~ZK_P.END || ZK_P.ILP || 0 ?};
         _params.ZK_P:=$ZK_P.ref();
         _params.DD:='N';
         _params.PD_K_DD:='';
         PD_K_DD.index('PD_K_DD'); PD_K_DD.prefix(_paramsb.PD_K,$ZK_P.ref());
         _loop1:=PD_K_DD.first();
         {!
         |? _loop1
         |!
            _params.DD:='T';
            _params.PD_K_DD:=$PD_K_DD.ref();
            _loop1:=PD_K_DD.next()
         !};
         exec('pddd_tab1_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   || _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); ZK_N.cntx_pop(); ZK_P.cntx_pop()


\wewr_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - zamowienia wewnetrzne (rozchod)
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \wewr/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Zamówienie wewnętrzne (rozchód)';
_args.LEG_KOD:='PDA#01#02#WEWR';
_args.T:="exec('wewr_t','%plan_dostaw',_a,_b)";
_args.K:="exec('wewr_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('wewr_i','%plan_dostaw',_a,_b)";
_args.S:="exec('wewr_s','%plan_dostaw',_a,_b)";
_args.V:="exec('wewr_v','%plan_dostaw',_a,_b)";
_args.DD:="exec('zk_dd','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\wewr_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia wewnetrzne (rozchod) - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \wewr_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\wewr_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia wewnetrzne (rozchod) - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \wewr_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\wewr_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia wewnetrzne (rozchod) - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \wewr_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\wewr_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia wewnetrzne (rozchod) - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \wewr_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); ZK_N.cntx_psh(); ZK_P.cntx_psh(); ZL.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         ZK_P.use(8+PD_BUF.REF);
         ZK_P.prefix();
         {? ZK_P.seek(PD_BUF.REF)
         ||
            ZK_N.use(ref_name(ZK_P.N));
            _zkn_sym:=ZK_P.N().SYM;
            _zkn:=exec('zkn_pierwotny','%plan_dostaw',ZK_P.ref());
            {? _zkn<>'' & _zkn<>_zkn_sym || _zkn:=', z zam. '+_zkn || '' ?};
            _zl:={? ZK_P.ZL || ', zlec.: '+ZK_P.ZL().SYM || '' ?};
            _opis:=_zkn_sym+' poz.'+$ZK_P.POZ+_zl+_zkn
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='R';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('wewr_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILR:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('wewr_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); ZK_N.cntx_pop(); ZK_P.cntx_pop(); ZL.cntx_pop()


\wewr_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia wewnetrzne (rozchod) - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \wewr_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('wew_display','%plan_dostaw',cur_tab(1,1).REF)


\wewp_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - zamowienia wewnetrzne (przychod)
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \wewp/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Zamówienie wewnętrzne (przychód)';
_args.LEG_KOD:='PDA#01#02#WEWP';
_args.T:="exec('wewp_t','%plan_dostaw',_a,_b)";
_args.K:="exec('wewp_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('wewp_i','%plan_dostaw',_a,_b)";
_args.S:="exec('wewp_s','%plan_dostaw',_a,_b)";
_args.V:="exec('wewp_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\wewp_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia wewnetrzne (przychod) - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \wewp_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\wewp_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia wewnetrzne (przychod) - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \wewp_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\wewp_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia wewnetrzne (przychod) - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \wewp_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\wewp_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia wewnetrzne (przychod) - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \wewp_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); ZK_N.cntx_psh(); ZK_P.cntx_psh(); ZL.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         ZK_P.use(8+PD_BUF.REF);
         ZK_P.prefix();
         {? ZK_P.seek(PD_BUF.REF)
         || ZK_N.use(ref_name(ZK_P.N));
            _zl:={? ZK_P.ZL || ', zlecenie: '+ZK_P.ZL().SYM || '' ?};
            _opis:=ZK_P.N().SYM+' poz.'+$ZK_P.POZ+_zl
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='P';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('wewp_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILP:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('wewp_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); ZK_N.cntx_pop(); ZK_P.cntx_pop(); ZL.cntx_pop()


\wewp_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia wewnetrzne (przychod) - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \wewp_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('wew_display','%plan_dostaw',cur_tab(1,1).REF)


\zd_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - zamowienia dostaw
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \zd/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Zamówienie dostawy';
_args.LEG_KOD:='PDA#01#02#ZD';
_args.T:="exec('zd_t','%plan_dostaw',_a,_b)";
_args.K:="exec('zd_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('zd_i','%plan_dostaw',_a,_b)";
_args.S:="exec('zd_s','%plan_dostaw',_a,_b)";
_args.V:="exec('zd_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\zd_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zd_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\zd_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zd_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\zd_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zd_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\zd_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zd_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); ZD_NAG.cntx_psh(); ZD_POZ.cntx_psh(); KH.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         ZD_POZ.use(8+PD_BUF.REF);
         ZD_POZ.prefix();
         {? ZD_POZ.seek(PD_BUF.REF)
         || ZD_NAG.use(ref_name(ZD_POZ.ZD_NAG));
            _kh:={? ZD_POZ.ZD_NAG().KH || ZD_NAG.KH().SKR+' ' || '' ?};
            _opis:=ZD_NAG.SYM+' poz.'+$ZD_POZ.POZ
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='P';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('zd_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILP:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('zd_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); ZD_NAG.cntx_pop(); ZD_POZ.cntx_pop(); KH.cntx_pop()


\zd_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zd_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zd_display','%plan_dostaw',cur_tab(1,1).REF)


\zl_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: formuly planu dostaw - produkt zlecenia
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \zl/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Zlecenie (produkt)';
_args.LEG_KOD:='PDA#01#02#ZL';
_args.T:="exec('zl_t','%plan_dostaw',_a,_b)";
_args.K:="exec('zl_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('zl_i','%plan_dostaw',_a,_b)";
_args.S:="exec('zl_s','%plan_dostaw',_a,_b)";
_args.V:="exec('zl_v','%plan_dostaw',_a,_b)";
_args.P:="exec('zl_p','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\zl_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: produkt zlecenia - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zl_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\zl_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: produkt zlecenia - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zl_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\zl_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: produkt zlecenia - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zl_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\zl_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: produkt zlecenia - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zl_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); ZL.cntx_psh(); ZL.clear();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         {? ZL.seek(PD_BUF.REF)
         || _opis+=ZL.SYM+' '+ZL.OPIS
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='P';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('zl_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILP:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('zl_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); ZL.cntx_pop()


\zl_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: produkt zlecenia - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zl_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zl_display','%plan_dostaw',cur_tab(1,1).REF)


\zl_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: produkt zlecenia - formula na poprawianie zrodla danych
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - oryginalne parametry formuly planu dostaw
::  OLD: \zl_p/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
{? _b.B.DISPLAY
||
   ZL.cntx_psh();
   {? ZL.seek(cur_tab(1,1).REF)
   ||
      exec('zl_popraw_term','zl_head',ZL.ref())
   ?};
   ZL.cntx_pop()
?};
1


\zlimn_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: formuly planu dostaw - zapotrzebowanie do zlecenia (surowce nielimitowane)
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \zlimn/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Zapotrzebowanie do zlecenia/grupy (nielimitowane)';
_args.LEG_KOD:='PDA#01#02#ZLIMN';
_args.T:="exec('zlim_t','%plan_dostaw',_a,_b)";
_args.K:="exec('zlimn_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('zlimn_i','%plan_dostaw',_a,_b)";
_args.S:="exec('zlimn_s','%plan_dostaw',_a,_b)";
_args.V:="exec('zlim_v','%plan_dostaw',_a,_b)";
_args.P:="exec('zlim_p','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\zlim_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do zlecenia - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zlim_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\zlimn_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do zlecenia (surowce nielimitowane) - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zlimn_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\zlimn_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do zlecenia (surowce nielimitowane) - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zlimn_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\zlimn_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do zlecenia (surowce nielimitowane) - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zlimn_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); ZLIM.cntx_psh(); ZL.cntx_psh(); GROP.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:=exec('FindAndGet','#table',ZLIM,PD_BUF.REF,,
            "{? GROP<>null() || GROP().KOD+' '+@.GROP.OPIS || ZLEC().SYM+' '+ZL.OPIS ?}",'')+
            {? PD_BUF.WSP=-1 || ' - surowiec' || ' - odpad/koprodukt' ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:={? PD_BUF.WSP=-1 || 'R' || 'P' ?};
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('zlimn_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         {? PD_BUF.WSP=-1 || _params.ILR:=PD_BUF.IL || _params.ILP:=PD_BUF.IL ?};
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('zlimn_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); ZLIM.cntx_pop(); ZL.cntx_pop(); GROP.cntx_pop()


\zlim_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do zlecenia - formula na poprawianie zrodla danych
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zlim_p/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
{? _b.B.DISPLAY
||
   exec('edit_datetime','zl_limit',cur_tab(1,1).REF)
?};
1


\zlim_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do zlecenia - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zlim_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zlim_display','%plan_dostaw',cur_tab(1,1).REF)


\zlimt_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: formuly planu dostaw - zapotrzebowanie do zlecenia (surowce limitowane)
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \zlimt/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Zapotrzebowanie do zlecenia/grupy (limitowane)';
_args.LEG_KOD:='PDA#01#02#ZLIMT';
_args.T:="exec('zlim_t','%plan_dostaw',_a,_b)";
_args.K:="exec('zlimt_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('zlimt_i','%plan_dostaw',_a,_b)";
_args.S:="exec('zlimt_s','%plan_dostaw',_a,_b)";
_args.V:="exec('zlim_v','%plan_dostaw',_a,_b)";
_args.P:="exec('zlim_p','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\zlimt_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do zlecenia (surowce limitowane) - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zlimt_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\zlimt_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do zlecenia (surowce limitowane) - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zlimt_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\zlimt_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [12.30]
:: OPIS: zapotrzebowanie do zlecenia (surowce limitowane) - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zlimt_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); ZLIM.cntx_psh(); ZL.cntx_psh(); GROP.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:=exec('FindAndGet','#table',ZLIM,PD_BUF.REF,,
            "{? GROP<>null() || GROP().KOD+' '+@.GROP.OPIS || ZLEC().SYM+' '+ZL.OPIS ?}",'')+
            {? PD_BUF.WSP=-1 || ' - surowiec' || ' - odpad/koprodukt' ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:={? PD_BUF.WSP=-1 || 'R' || 'P' ?};
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('zlimt_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         {? PD_BUF.WSP=-1 || _params.ILR:=PD_BUF.IL; _params.ILP:=0 || _params.ILR:=0; _params.ILP:=PD_BUF.IL ?};
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('zlimt_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); ZLIM.cntx_pop(); ZL.cntx_pop(); GROP.cntx_pop()


:: formuły planu dostaw: CECHY MATERIAŁÓW
\brak_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - brak stanu
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \brak/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Cecha stanu - brak';
_args.LEG_KOD:='PDA#01#01#BRAK';
_args.K:="exec('brak_k','%plan_dostaw',_a,_b)";
_args.I:="exec('brak_i','%plan_dostaw',_a,_b)";
_args.C1:="exec('brak_c1','%plan_dostaw',_a,_b)";
_args.C2:="exec('brak_c2','%plan_dostaw',_a,_b)";
_args.C3:="exec('brak_c3','%plan_dostaw',_a,_b)";
_args.STAT:="exec('brak_stat','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\brak_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: brak stanu - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \brak_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~Krytyczny')


\brak_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: brak stanu - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \brak_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',213)


\brak_c1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: brak stanu - formula cech stanu wg magazynu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \brak_c1/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;
_txt:=_a.TXT;

_Tab:=exec('pda_tab2_wsk','plan_dostaw','TAB');
_ndx:=exec('pda_tab2_wsk','plan_dostaw','NDX1');
_Tab.cntx_psh();
_Tab.index(_ndx);
_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
_params2:=exec('tab3_add_a','plan_dostaw');
_tmform:=exec('autil_tm_form','plan_dostaw',_paramsb.TM_STAMP);
_params1.PAR:='I'; _params1.DEF:=0;
_ico:=exec('brak_pl','%plan_dostaw',_pdd_kod,_params1);
_loop:=_Tab.first();
{!
|? _loop
|!
   _mg:=_Tab.MG;
   _Tab.cntx_psh();
   _chk_stan:=1;
   _od:=_Tab.D;
   _ot:=_Tab.T;
   {? _Tab.next()
   || _chk_stan:=_mg<>_Tab.MG;
      {? _od<_tmform.D & _tmform.D<_Tab.D
      || _od:=_Tab.D;
         _ot:=_Tab.T
      ?}
   ?};
   _Tab.cntx_pop();
   {? (_chk_stan | exec('autil_dwo','plan_dostaw',_tmform.D,time(0,0,0),_od,_ot))
      & _Tab.STAN_MG<0
   ||
      _params.TYPSTAN:=exec('ts_mg','plan_dostaw');
      _params.STAN_ICO:={? _Tab.STMG_ICO='' || _ico || _Tab.STMG_ICO ?};
      _params.PROBLEM:='T';
      {? exec('pda_put','plan_dostaw',_params)
      || _params2.REF:=$_Tab.ref();
         _params2.TYPSTAN:=_params.TYPSTAN;
         _params2.KOD:=_pdd_kod;
         _params2.SORT:=PD_D.SORT;
         _params2.CECHA:=_txt;
         _params2.WAR:=0;
         _params2.STAN:=_Tab.STAN_MG;
         _params2.ROZNICA:=_params2.STAN-_params2.WAR;
         _params2.ICO:=_ico;
         _params2.PROBLEM:='T';
         exec('tab3_add','plan_dostaw',_params2)
      ?}
   ?};
   _loop:=_Tab.next()
!};
_Tab.cntx_pop()


\brak_c2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: brak stanu - formula cech stanu wg dat
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \brak_c2/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;
_txt:=_a.TXT;

_Tab:=exec('pda_tab2_wsk','plan_dostaw','TAB');
_ndx:=exec('pda_tab2_wsk','plan_dostaw','NDX2');
_Tab.cntx_psh();
_Tab.index(_ndx);
_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
_params2:=exec('tab3_add_a','plan_dostaw');
_tmform:=exec('autil_tm_form','plan_dostaw',_paramsb.TM_STAMP);
_params1.PAR:='I'; _params1.DEF:=0;
_ico:=exec('brak_pl','%plan_dostaw',_pdd_kod,_params1);
_ts:=exec('ts_d','plan_dostaw');
_tcs:=exec('tcs_brak','plan_dostaw');
_loop:=_Tab.first();
{!
|? _loop
|!
   _Tab.cntx_psh();
   _chk_stan:=1;
   _od:=_Tab.D;
   _ot:=_Tab.T;
   {? _Tab.next()
   || _chk_stan:=0;
      {? _od<_tmform.D & _tmform.D<_Tab.D
      || _od:=_Tab.D ;
         _ot:=_Tab.T
      ?}
   ?};
   _Tab.cntx_pop();
   {? (_chk_stan | exec('autil_dwo','plan_dostaw',_tmform.D,time(0,0,0),_od,_ot))
      & _Tab.STAN_D<0
   ||
      _pd_pow:=exec('pd_pow_stan','plan_dostaw',PD_N.ref(),PD_P.ref(),_ts,_tcs,_Tab.REF);
      _problem:=_pd_pow.PROBLEM;
      _opis:=_pd_pow.OPIS;
      obj_del(_pd_pow);
      _params2.REF:=$_Tab.ref();
      _params2.TYPSTAN:=_ts;
      _params2.KOD:=_pdd_kod;
      _params2.SORT:=PD_D.SORT;
      _params2.CECHA:=_txt;
      _params2.WAR:=0;
      _params2.STAN:=_Tab.STAN_D;
      _params2.ROZNICA:=_params2.STAN-_params2.WAR;
      _params2.ICO:=_ico;
      _params2.PROBLEM:=_problem;
      _params2.OPIS:=_opis;
      {? exec('tab3_add','plan_dostaw',_params2)
      ||
         _params.PROBLEM:=_problem;
         _params.TYPSTAN:=_ts;
         _params.STAN_ICO:=exec('stan_ico','plan_dostaw',_Tab.ref(),_ts);
         exec('pda_put','plan_dostaw',_params)
      ?}
   ?};
   _loop:=_Tab.next()
!};
_Tab.cntx_pop()


\brak_c3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.41]
:: OPIS: brak stanu - formula cech stanu wg atrybutow
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \brak_c3/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;
_txt:=_a.TXT;

_Tab:=exec('pda_tab2_wsk','plan_dostaw','TAB');
_ndx:=exec('pda_tab2_wsk','plan_dostaw','NDX4');
_Tab.cntx_psh();
_Tab.index(_ndx);
_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
_params2:=exec('tab3_add_a','plan_dostaw');
_tmform:=exec('autil_tm_form','plan_dostaw',_paramsb.TM_STAMP);
_params1.PAR:='I'; _params1.DEF:=0;
_ico:=exec('brak_pl','%plan_dostaw',_pdd_kod,_params1);
_loop:=_Tab.first();
{!
|? _loop
|!
   _dk_c:=_Tab.DK_C;
   _Tab.cntx_psh();
   _chk_stan:=1;
   _od:=_Tab.D;
   _ot:=_Tab.T;
   {? _Tab.next()
   || _chk_stan:=_dk_c<>_Tab.DK_C;
      {? _od<_tmform.D & _tmform.D<_Tab.D
      || _od:=_Tab.D;
         _ot:=_Tab.T
      ?}
   ?};
   _Tab.cntx_pop();
   {? (_chk_stan | exec('autil_dwo','plan_dostaw',_tmform.D,time(0,0,0),_od,_ot))
      & _Tab.STAN_DKC<0
   ||
      _params.TYPSTAN:=exec('ts_dkc','plan_dostaw');
      _params.STAN_ICO:={? _Tab.DKC_ICO='' || _ico || _Tab.DKC_ICO ?};
      _params.PROBLEM:='T';
      {? exec('pda_put','plan_dostaw',_params)
      || _params2.REF:=$_Tab.ref();
         _params2.TYPSTAN:=_params.TYPSTAN;
         _params2.KOD:=_pdd_kod;
         _params2.SORT:=PD_D.SORT;
         _params2.CECHA:=_txt;
         _params2.WAR:=0;
         _params2.STAN:=_Tab.STAN_DKC;
         _params2.ROZNICA:=_params2.STAN-_params2.WAR;
         _params2.ICO:=_ico;
         _params2.PROBLEM:='T';
         exec('tab3_add','plan_dostaw',_params2)
      ?}
   ?};
   _loop:=_Tab.next()
!};
_Tab.cntx_pop()


\brak_stat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: brak stanu - stan pozycji planu dostawy
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;
{? _paramsb.STAT<>'' || return() ?};
_txt:=_a.TXT;
:: braki
_paramsb.ILP:=0;
_paramsb.ILR:=0;
_paramsb.STAN:=0;
_stan:=_ilp:=_ilr:=_ilp_s:=_ilr_s:=0;
_stat:=1;
_Tab3t:=exec('pda_tab3_wsk','plan_dostaw','TAB');
_Tab3t.cntx_psh();
_Tab3t.index(exec('pda_tab3_wsk','plan_dostaw','NDX2'));
_Tab2t:=exec('pda_tab2_wsk','plan_dostaw','TAB');
_Tab2t.cntx_psh();
_wg_mg:=exec('FindInSet','#table','PD_MG','WER',null(),'T',"1",,PD_N.ref(),0);
_Tab2t.index(exec('pda_tab2_wsk','plan_dostaw',{? _wg_mg || 'NDX1' || 'NDX2' ?}));
_Tab2t.prefix();
_loop:=_Tab2t.first();
_mg:=_Tab2t.MG;
{!
|? _loop
|!
   {? _wg_mg & _Tab2t.MG<>_mg
   ||
      _stan:=_ilp:=_ilr:=0;
      _stat:=1;
      _mg:=_Tab2t.MG
   ?};
:: obliczanie stanu
   _ilp+=_Tab2t.ILP;
   _ilr+=_Tab2t.ILR;
   _stan:=_ilp-_ilr;
   _ilp_s+=_Tab2t.ILP;
   _ilr_s+=_Tab2t.ILR;
:: analiza problemów
   _problem:=0;
   _Tab3t.prefix($_Tab2t.ref(),{? _wg_mg || exec('ts_mg','plan_dostaw') || exec('ts_d','plan_dostaw') ?});
   _loop:=_Tab3t.first();
   {!
   |? _loop
   |!
      _problem:=_Tab3t.PROBLEM='T';
      _loop:=_problem=0 & _Tab3t.next()
   !};
   {? _problem & _stat & _stan<0
   ||
      _stat:=0;
      {? _paramsb.STAT_DA=date(0,0,0) | _paramsb.STAT_DA>_Tab2t.D
      ||
         _paramsb.STAT_DA:=_Tab2t.D;
         _paramsb.STAT_IL:=-_stan;
         _paramsb.MG:={? _wg_mg || _Tab2t.MG || '' ?};
         _paramsb.ILP:=_ilp;
         _paramsb.ILR:=_ilr
      ?}
   ?};
   _loop:=_Tab2t.next()
!};
{? ~_wg_mg | _paramsb.MG=''
||
   _paramsb.ILP:=_ilp_s;
   _paramsb.ILR:=_ilr_s
?};
_paramsb.STAN:=_paramsb.ILP-_paramsb.ILR;
:: ilosc problemow wg magazynow + wg atrybutow
_Tab2t.index(exec('pda_tab2_wsk','plan_dostaw','NDX3'));
_Tab2t.prefix('T');
_p_count:=0;
_loop:=_Tab2t.first();
{!
|? _loop
|!
   _p_count+=_Tab2t.P_COUNT;
   _loop:=_Tab2t.next()
!};
_paramsb.STAT_MG:=_p_count;
_paramsb.STAT:={? _paramsb.STAT_DA=date(0,0,0) & _paramsb.STAT_MG=0 || 'A' || 'P' ?};
_Tab2t.cntx_pop();
_Tab3t.cntx_pop()


\mmin_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - stan minimalny
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \mmin/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Cecha stanu - poniżej minimalnego';
_args.LEG_KOD:='PDA#01#01#MMIN';
_args.K:="exec('mmin_k','%plan_dostaw',_a,_b)";
_args.I:="exec('mmin_i','%plan_dostaw',_a,_b)";
_args.C1:="exec('mmin_c1','%plan_dostaw',_a,_b)";
_args.STAT:="exec('brak_stat','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\mmin_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: stan minimalny - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \mmin_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\mmin_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: stan minimalny - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \mmin_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',195)


\mmin_c1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: stan minimalny - formula cech stanu wg magazynu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \mmin_c1/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;
_txt:=_a.TXT;

_Tab:=exec('pda_tab2_wsk','plan_dostaw','TAB');
_ndx:=exec('pda_tab2_wsk','plan_dostaw','NDX1');
_Tab.cntx_psh();
_Tab.index(_ndx);
:: _min_og - stan maksymalny ogolny, _min_mg - stan maksymalny dla danego magazynu
_min_og:=_min_mg:=0;
:: _mgs - lista magazynow dla ktorych ustalono stan maksymalny
_mgs:=_mgs1:=_mg:='';
:: _ref - $MST.ref()
_ref:='';
_ts:=exec('ts_mg','plan_dostaw');
_tcs:=exec('tcs_min','plan_dostaw');
PD_BUF.cntx_psh();
PD_BUF.index('KODMGMDT');
PD_BUF.prefix(_pdd_kod,null(),_paramsb.M);
{? PD_BUF.first()
|| _min_og:=PD_BUF.IL;
   _ref:=PD_BUF.REF;
   USERS_UP.cntx_psh();
   USERS_UP.index('MG'); USERS_UP.prefix(OPERATOR.USER,'MG');
   _loop:=USERS_UP.first();
   {!
   |? _loop
   |!
      {? USERS_UP.MG().KOOP='N' & exec('pd_buf_zastosuj','plan_dostaw',USERS_UP.MG) || _mgs+=form(MG.SYM,-8) ?};
      _loop:=USERS_UP.next()
   !};
   USERS_UP.cntx_pop()
|| PD_BUF.index('KOD_MDT');
   PD_BUF.prefix(_pdd_kod,_paramsb.M);
   _loop:=PD_BUF.first();
   {!
   |? _loop
   |!
      {? PD_BUF.MG().KOOP='N' & exec('pd_buf_zastosuj','plan_dostaw') || _mgs+=form(MG.SYM,-8) ?};
      _loop:=PD_BUF.next()
   !}
?};
_mgs1:=_mgs;
{? _mgs<>''
||
   _params:=exec('pda_a1','plan_dostaw');
   _params1:=exec('pda_a','plan_dostaw');
   _params2:=exec('tab3_add_a','plan_dostaw');
   _tmform:=exec('autil_tm_form','plan_dostaw',_paramsb.TM_STAMP);
   _params1.PAR:='I'; _params1.DEF:=0;
   _ico:=exec('mmin_pl','%plan_dostaw',_pdd_kod,_params1);
   _loop:=_Tab.first();
   {!
   |? _loop
   |!
      {? _Tab.MG<>'' & _mgs*_Tab.MG
      ||
         {? _mg<>_Tab.MG
         ||
            _mg:=exec('FindInSet','#table','MG','MAGAZYNY',_Tab.MG,_Tab.MG);
            PD_BUF.index('KODMGMDT'); PD_BUF.prefix(_pdd_kod,_mg,_paramsb.M);
            _min_mg:={? PD_BUF.first() || PD_BUF.IL || 0 ?};
            _mg:=_Tab.MG
         ?};
         _Tab.cntx_psh();
         _chk_stan:=1;
         _od:=_Tab.D;
         _ot:=_Tab.T;
         {? _Tab.next()
         || _chk_stan:=_mg<>_Tab.MG;
            {? _od<_tmform.D & _tmform.D<_Tab.D
            || _od:=_Tab.D;
               _ot:=_Tab.T
            ?}
         ?};
         _Tab.cntx_pop();
         {? (_chk_stan | exec('autil_dwo','plan_dostaw',_tmform.D,time(0,0,0),_od,_ot))
            & (_min_mg & _Tab.STAN_MG<_min_mg | _min_mg=0 & _min_og & _Tab.STAN_MG<_min_og)
         ||
            _pd_pow:=exec('pd_pow_stan','plan_dostaw',PD_N.ref(),PD_P.ref(),_ts,_tcs,_Tab.REF);
            _problem:=_pd_pow.PROBLEM;
            _opis:=_pd_pow.OPIS;
            obj_del(_pd_pow);
            _params2.REF:=$_Tab.ref();
            _params2.TYPSTAN:=_ts;
            _params2.KOD:=_pdd_kod;
            _params2.SORT:=PD_D.SORT;
            _params2.CECHA:=_txt;
            _params2.WAR:={? _min_mg || _min_mg || _min_og ?};
            _params2.STAN:=_Tab.STAN_MG;
            _params2.ROZNICA:=_params2.STAN-_params2.WAR;
            _params2.ICO:=_ico;
            _params2.PROBLEM:=_problem;
            _params2.OPIS:=_opis;
            {? exec('tab3_add','plan_dostaw',_params2)
            ||
               _params.PROBLEM:=_problem;
               _params.TYPSTAN:=_ts;
               _params.STAN_ICO:=exec('stan_ico','plan_dostaw',_Tab.ref(),_ts);
               exec('pda_put','plan_dostaw',_params)
            ?};
            _mgs1:=gsub(_mgs1,form(_Tab.MG,-8),'')
         ||
            _Tab.cntx_psh();
            {? _Tab.D<=_tmform.D | _Tab.prev() & _Tab.MG=_mg
            || _mgs1:=gsub(_mgs1,form(_Tab.MG,-8),'')
            ?};
            _Tab.cntx_pop()
         ?}
      ?};
      _loop:=_Tab.next()
   !};
:: dodanie zapisow do tabeli analizy zapasow dla pozostalych magazynow
   {!
   |? _mgs1<>''
   |!
      _kod:='INF';
      _params.MG:=form(8+_mgs1); _mgs1:=8-_mgs1;
      _params.ODDZ:=exec('FindInSet','#table','MG','MAGAZYNY',_params.MG,_params.MG,"MG.ODDZ",,,'');
      _params.D:=date();
      _mg:=exec('FindInSet','#table','MG','MAGAZYNY',_params.MG,_params.MG);
      PD_BUF.index('KODMGMDT'); PD_BUF.prefix(_pdd_kod,_mg,_paramsb.M);
      _min_mg:={? PD_BUF.first() || PD_BUF.IL || 0 ?};
      _params.PRZY_ROZ:='P';
      _params.PD_D_KOD:=_kod;
      _params1.PAR:='T';
      _params.TYP:=exec('inf_pl','%plan_dostaw',_kod,_params1);
      _params.TYPSTAN:=exec('ts_mg','plan_dostaw');
      _params.STAN_ICO:=_ico;
      _params.PROBLEM:='T';
      _params1.PAR:='I'; _params1.DEF:=0;
      _params.ICO:=exec('inf_pl','%plan_dostaw',_kod,_params1);
      _params.REF:=PD_BUF.REF;
      _exe:=exec('pda_add','plan_dostaw',_params);
      {? _exe.ADD
      || {? _Tab.seek(_exe.REF) || exec('pda_put','plan_dostaw',_params) ?};
         _params2.REF:=$_exe.REF;
         _params2.TYPSTAN:=_params.TYPSTAN;
         _params2.KOD:=_pdd_kod;
         _params2.SORT:=PD_D.SORT;
         _params2.CECHA:=_txt;
         _params2.WAR:={? _min_mg || _min_mg || _min_og ?};
         _params2.STAN:=0;
         _params2.ROZNICA:=_params2.STAN-_params2.WAR;
         _params2.ICO:=_ico;
         _params2.PROBLEM:='T';
         exec('tab3_add','plan_dostaw',_params2)
      ?};
      &_exe
   !}
?};
PD_BUF.cntx_pop();
_Tab.cntx_pop()


\mzi_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - zapas informacyjny
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \mzi/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Cecha stanu - poniżej zapasu informacyjnego';
_args.LEG_KOD:='PDA#01#01#MZI';
_args.K:="exec('mzi_k','%plan_dostaw',_a,_b)";
_args.I:="exec('mzi_i','%plan_dostaw',_a,_b)";
_args.C1:="exec('mzi_c1','%plan_dostaw',_a,_b)";
_args.STAT:="exec('brak_stat','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\mzi_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: stan minimalny - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \mzi_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\mzi_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: stan minimalny - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \mzi_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',208)


\mzi_c1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zapas informacyjny - formula cech stanu wg magazynu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \mzi_c1/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;
_txt:=_a.TXT;

_Tab:=exec('pda_tab2_wsk','plan_dostaw','TAB');
_ndx:=exec('pda_tab2_wsk','plan_dostaw','NDX1');
_Tab.cntx_psh();
_Tab.index(_ndx);
:: _min_og - ZI ogolny, _min_mg - ZI dla danego magazynu
_zi_og:=_zi_mg:=0;
:: _mgs - lista magazynow dla ktorych ustalono stan maksymalny
_mgs:=_mgs1:=_mg:='';
:: _ref - $MST.ref()
_ref:='';
PD_BUF.cntx_psh();
PD_BUF.index('KODMGMDT');
PD_BUF.prefix(_pdd_kod,null(),_paramsb.M);
{? PD_BUF.first()
|| _zi_og:=PD_BUF.IL;
   _ref:=PD_BUF.REF;
   USERS_UP.cntx_psh();
   USERS_UP.index('MG'); USERS_UP.prefix(OPERATOR.USER,'MG');
   _loop:=USERS_UP.first();
   {!
   |? _loop
   |!
      {? exec('pd_buf_zastosuj','plan_dostaw',USERS_UP.MG) || _mgs+=form(USERS_UP.MG().SYM,-8) ?};
      _loop:=USERS_UP.next()
   !};
   USERS_UP.cntx_pop()
|| PD_BUF.index('KOD_MDT');
   PD_BUF.prefix(_pdd_kod,_paramsb.M);
   _loop:=PD_BUF.first();
   {!
   |? _loop
   |!
      {? exec('pd_buf_zastosuj','plan_dostaw') || _mgs+=form(PD_BUF.MG().SYM,-8) ?};
      _loop:=PD_BUF.next()
   !}
?};
_mgs1:=_mgs;
{? _mgs<>''
||
   _params:=exec('pda_a1','plan_dostaw');
   _params1:=exec('pda_a','plan_dostaw');
   _params2:=exec('tab3_add_a','plan_dostaw');
   _tmform:=exec('autil_tm_form','plan_dostaw',_paramsb.TM_STAMP);
   _params1.PAR:='I'; _params1.DEF:=0;
   _ico:=exec('mzi_pl','%plan_dostaw',_pdd_kod,_params1);
   _loop:=_Tab.first();
   {!
   |? _loop
   |!
      {? _Tab.MG<>'' & _mgs*_Tab.MG
      ||
         _mgs1:=gsub(_mgs1,form(_Tab.MG,-8),'');
         {? _mg<>_Tab.MG
         ||
            _mg:=exec('FindInSet','#table','MG','MAGAZYNY',_Tab.MG,_Tab.MG);
            PD_BUF.index('KODMGMDT'); PD_BUF.prefix(_pdd_kod,_mg,_paramsb.M);
            _zi_mg:={? PD_BUF.first() || PD_BUF.IL || 0 ?};
            _mg:=_Tab.MG
         ?};
         _Tab.cntx_psh();
         _chk_stan:=1;
         _od:=_Tab.D;
         _ot:=_Tab.T;
         {? _Tab.next()
         || _chk_stan:=_mg<>_Tab.MG;
            {? _od<_tmform.D & _tmform.D<_Tab.D
            || _od:=_Tab.D;
               _ot:=_Tab.T
            ?}
         ?};
         _Tab.cntx_pop();
         {? (_chk_stan | exec('autil_dwo','plan_dostaw',_tmform.D,time(0,0,0),_od,_ot))
            & (_zi_mg & _Tab.STAN_MG<_zi_mg | _zi_og & _Tab.STAN_MG<_zi_og)
         ||
            _params.TYPSTAN:=exec('ts_mg','plan_dostaw');
            _params.STAN_ICO:={? _Tab.STMG_ICO='' ||  _ico || _Tab.STMG_ICO ?};
            _params.PROBLEM:='T';
            {? exec('pda_put','plan_dostaw',_params)
            || _params2.REF:=$_Tab.ref();
               _params2.TYPSTAN:=_params.TYPSTAN;
               _params2.KOD:=_pdd_kod;
               _params2.SORT:=PD_D.SORT;
               _params2.CECHA:=_txt;
               _params2.WAR:={? _zi_mg || _zi_mg || _zi_og ?};
               _params2.STAN:=_Tab.STAN_MG;
               _params2.ROZNICA:=_params2.STAN-_params2.WAR;
               _params2.ICO:=_ico;
               _params2.PROBLEM:='T';
               exec('tab3_add','plan_dostaw',_params2)
            ?}
         ?}
      ?};
      _loop:=_Tab.next()
   !};
:: dodanie zapisow do tabeli analizy zapasow dla pozostalych magazynow
   {!
   |? _mgs1<>''
   |!
      _kod:='INF';
      _params.MG:=form(8+_mgs1); _mgs1:=8-_mgs1;
      _params.ODDZ:=exec('FindInSet','#table','MG','MAGAZYNY',_params.MG,_params.MG,"MG.ODDZ",,,'');
      _mg:=exec('FindInSet','#table','MG','MAGAZYNY',_params.MG,_params.MG);
      PD_BUF.index('KODMGMDT'); PD_BUF.prefix(_pdd_kod,_mg,_paramsb.M);
      _zi_mg:={? PD_BUF.first() || PD_BUF.IL || 0 ?};
      _params.PRZY_ROZ:='P';
      _params.PD_D_KOD:=_kod;
      _params1.PAR:='T';
      _params.TYP:=exec('inf_pl','%plan_dostaw',_kod,_params1);
      _params.TYPSTAN:=exec('ts_mg','plan_dostaw');
      _params.STAN_ICO:=_ico;
      _params.PROBLEM:='T';
      _params1.PAR:='I'; _params1.DEF:=0;
      _params.ICO:=exec('inf_pl','%plan_dostaw',_kod,_params1);
      _params.REF:=PD_BUF.REF;
      _exe:=exec('pda_add','plan_dostaw',_params);
      {? _exe.ADD
      || _params2.REF:=$_exe.REF;
         _params2.TYPSTAN:=_params.TYPSTAN;
         _params2.KOD:=_pdd_kod;
         _params2.SORT:=PD_D.SORT;
         _params2.CECHA:=_txt;
         _params2.WAR:={? _zi_mg || _zi_mg || _zi_og ?};
         _params2.STAN:=0;
         _params2.ROZNICA:=_params2.STAN-_params2.WAR;
         _params2.ICO:=_ico;
         exec('tab3_add','plan_dostaw',_params2)
      ?};
      &_exe
   !}
?};
PD_BUF.cntx_pop();
_Tab.cntx_pop()


\mmax_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - stan maksymalny
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \mmax/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Cecha stanu - powyżej maksymalnego';
_args.LEG_KOD:='PDA#01#01#MMAX';
_args.K:="exec('mmax_k','%plan_dostaw',_a,_b)";
_args.I:="exec('mmax_i','%plan_dostaw',_a,_b)";
_args.C1:="exec('mmax_c1','%plan_dostaw',_a,_b)";
_args.STAT:="exec('brak_stat','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\mmax_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: stan maksymalny - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \mmax_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\mmax_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: stan maksymalny - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \mmax_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',201)


\mmax_c1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: stan maksymalny - formula cech stanu wg magazynu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \mmax_c1/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;
_txt:=_a.TXT;

_Tab:=exec('pda_tab2_wsk','plan_dostaw','TAB');
_ndx:=exec('pda_tab2_wsk','plan_dostaw','NDX1');
_Tab.cntx_psh();
_Tab.index(_ndx);
:: _max_og - stan maksymalny ogolny, _max_mg - stan maksymalny dla danego magazynu
_max_og:=_max_mg:=0;
:: _mgs - lista magazynow dla ktorych ustalono stan maksymalny
_mgs:=_mgs1:=_mg:='';
:: _ref - $MST.ref()
_ref:='';
PD_BUF.cntx_psh();
PD_BUF.index('KODMGMDT');
PD_BUF.prefix(_pdd_kod,null(),_paramsb.M);
{? PD_BUF.first()
|| _max_og:=PD_BUF.IL;
   _ref:=PD_BUF.REF;
   USERS_UP.cntx_psh();
   USERS_UP.index('MG'); USERS_UP.prefix(OPERATOR.USER,'MG');
   _loop:=USERS_UP.first();
   {!
   |? _loop
   |!
      {? USERS_UP.MG().KOOP='N' & exec('pd_buf_zastosuj','plan_dostaw',USERS_UP.MG) || _mgs+=form(MG.SYM,-8) ?};
      _loop:=USERS_UP.next()
   !};
   USERS_UP.cntx_pop()
|| PD_BUF.index('KOD_MDT');
   PD_BUF.prefix(_pdd_kod,_paramsb.M);
   _loop:=PD_BUF.first();
   {!
   |? _loop
   |!
      {? PD_BUF.MG().KOOP='N' & exec('pd_buf_zastosuj','plan_dostaw') || _mgs+=form(MG.SYM,-8) ?};
      _loop:=PD_BUF.next()
   !}
?};
_mgs1:=_mgs;
{? _mgs<>''
||
   _params:=exec('pda_a1','plan_dostaw');
   _params1:=exec('pda_a','plan_dostaw');
   _params2:=exec('tab3_add_a','plan_dostaw');
   _tmform:=exec('autil_tm_form','plan_dostaw',_paramsb.TM_STAMP);
   _params1.PAR:='I'; _params1.DEF:=0;
   _ico:=exec('mmax_pl','%plan_dostaw',_pdd_kod,_params1);
   _loop:=_Tab.first();
   {!
   |? _loop
   |!
      {? _Tab.MG<>'' & _mgs*_Tab.MG
      ||
         _mgs1:=gsub(_mgs1,form(_Tab.MG,-8),'');
         {? _mg<>_Tab.MG
         ||
            _mg:=exec('FindInSet','#table','MG','MAGAZYNY',_Tab.MG,_Tab.MG);
            PD_BUF.index('KODMGMDT'); PD_BUF.prefix(_pdd_kod,_mg,_paramsb.M);
            _max_mg:={? PD_BUF.first() || PD_BUF.IL || 0 ?};
            _mg:=_Tab.MG
         ?};
         _Tab.cntx_psh();
         _chk_stan:=1;
         _od:=_Tab.D;
         _ot:=_Tab.T;
         {? _Tab.next()
         || _chk_stan:=_mg<>_Tab.MG;
            {? _od<_tmform.D & _tmform.D<_Tab.D
            || _od:=_Tab.D;
               _ot:=_Tab.T
            ?}
         ?};
         _Tab.cntx_pop();
         {? (_chk_stan | exec('autil_dwo','plan_dostaw',_tmform.D,time(0,0,0),_od,_ot))
            & (_max_mg & _Tab.STAN_MG>_max_mg | _max_mg=0 & _max_og & _Tab.STAN_MG>_max_og)
         ||
            _params.TYPSTAN:=exec('ts_mg','plan_dostaw');
            _params.STAN_ICO:={? _Tab.STMG_ICO='' || _ico || _Tab.STMG_ICO ?};
            _params.PROBLEM:='T';
            {? exec('pda_put','plan_dostaw',_params)
            || _params2.REF:=$_Tab.ref();
               _params2.TYPSTAN:=_params.TYPSTAN;
               _params2.KOD:=_pdd_kod;
               _params2.SORT:=PD_D.SORT;
               _params2.CECHA:=_txt;
               _params2.WAR:={? _max_mg || _max_mg || _max_og ?};
               _params2.STAN:=_Tab.STAN_MG;
               _params2.ROZNICA:=_params2.STAN-_params2.WAR;
               _params2.ICO:=_ico;
               _params2.PROBLEM:='T';
               exec('tab3_add','plan_dostaw',_params2)
            ?}
         ?}
      ?};
      _loop:=_Tab.next()
   !};
:: dodanie zapisow do tabeli analizy zapasow dla pozostalych magazynow
   {!
   |? _mgs1<>''
   |!
      _kod:='INF';
      _params.MG:=form(8+_mgs1); _mgs1:=8-_mgs1;
      _params.ODDZ:=exec('FindInSet','#table','MG','MAGAZYNY',_params.MG,_params.MG,"MG.ODDZ",,,'');
      _mg:=exec('FindInSet','#table','MG','MAGAZYNY',_params.MG,_params.MG);
      PD_BUF.index('KODMGMDT'); PD_BUF.prefix(_pdd_kod,_mg,_paramsb.M);
      _max_mg:={? PD_BUF.first() || PD_BUF.IL || 0 ?};
      _params.PRZY_ROZ:='P';
      _params.PD_D_KOD:=_kod;
      _params1.PAR:='T';
      _params.TYP:=exec('inf_pl','%plan_dostaw',_kod,_params1);
      _params.O:='';
      _params.ILP:=0;
      _params.ILR:=0;
      _params.TYPSTAN:=exec('ts_mg','plan_dostaw');
      _params.STAN_ICO:=_ico;
      _params.PROBLEM:='T';
      _params.DK_C:='';
      _params1.PAR:='I'; _params1.DEF:=0;
      _params.ICO:=exec('inf_pl','%plan_dostaw',_kod,_params1);
      _params.REF:=PD_BUF.REF;
      _exe:=exec('pda_add','plan_dostaw',_params);
      {? _exe.ADD
      || _params2.REF:=$_exe.REF;
         _params2.TYPSTAN:=_params.TYPSTAN;
         _params2.KOD:=_pdd_kod;
         _params2.SORT:=PD_D.SORT;
         _params2.CECHA:=_txt;
         _params2.WAR:={? _max_mg || _max_mg || _max_og ?};
         _params2.STAN:=0;
         _params2.ROZNICA:=_params2.STAN-_params2.WAR;
         _params2.ICO:=_ico;
         _params2.PROBLEM:='T';
         exec('tab3_add','plan_dostaw',_params2)
      ?};
      &_exe
   !}
?};
PD_BUF.cntx_pop();
_Tab.cntx_pop()


:: formuły planu dostaw: UZUPEŁNIENIA KOSZYKA
\uzu_zi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formula planu dostaw - uzupelnienie stanow EWZ po osiagnieciu ZI
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \uzu_zi/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.UI:="exec('uzu_zi_ui','%plan_dostaw',_a,_b)";
_args.U:="exec('uzu_zi_u','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\uzu_zi_ui
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: uzupelnienie stanow EWZ po osiagnieciu ZI - formula uzupelnienia stanow - inicjujaca
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \uzu_zi_ui/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;
_pytaj:=1;
{? _pytaj & PD_Z.TYPYZAM<>null() || BEER.TYPYZAM:=PD_Z.TYPYZAM; _pytaj:=0 ?};

:: wybor typu zamowienia
{? _pytaj || exec('wyb_zam','zamowienia','PD') ?};
BEER.TYPYZAM


\uzu_zi_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: uzupelnienie stanow EWZ po osiagnieciu ZI - formula uzupelnienia stanow
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \uzu_zi_u/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_Tab2:=exec('pda_tab2_wsk','plan_dostaw','TAB');
_t2_ndx1:=exec('pda_tab2_wsk','plan_dostaw','NDX1');
_Tab3:=exec('pda_tab3_wsk','plan_dostaw','TAB');
_t3_ndx1:=exec('pda_tab3_wsk','plan_dostaw','NDX1');
_params:=exec('pd_k_add_a','plan_dostaw');
_wal:=exec('bl_wal','ustawienia');
_date:=date();
_sectbeg:=1;
_max_og:=_max_mg:=0;
PD_BUF.index('KODMGMDT');
PD_BUF.prefix('MMAX',null(),PD_P.M);
{? PD_BUF.first()
|| _max_og:=PD_BUF.IL
?};

_Tab2.cntx_psh();
_Tab2.index(_t2_ndx1);
_Tab2.prefix();
_ok:=1;
_mgs:='';
_loop:=_Tab2.first();
{!
|? _loop
|!
   _Tab3.index(_t3_ndx1);
   _Tab3.prefix($_Tab2.ref(),exec('ts_mg','plan_dostaw'),'MZI',);
   {? _Tab3.first() & _Tab2.MG<>'' & (_mgs*('_'+_Tab2.MG+'_'))=0
   ||
      _dd:={? _Tab2.D<_date || _date || _Tab2.D ?};
      _params.PD_N:=PD_N.ref();
      _params.PD_P:=PD_P.ref();
      _params.DD:=_dd;
      _params.MG:=exec('autil_mg4dost','plan_dostaw',_Tab2.PD_D_KOD,_Tab2.REF,_Tab2.MG);
      {? _params.MG=null()
      || {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
         __kom.add('Brak uprawnionego magazynu. Uzupełnienie stanów po przekroczeniu zapasu informacyjnego przerwane.'
            '\nNależy sprawdzić funkcję autil_mg4dost w pliku plan_dostaw.fml czy obsługuje formułę: %1.'@
            [_Tab2.PD_D_KOD]);
         _ok:=0
      ?};
      _params.Z_MG:=null();
      _params.M:=PD_P.M;
      _params.DK_C:=null();
      _dost:=exec('dost','ceny_mat',PD_P.M,_dd,_wal,1,-1);
      {? _dost.EWZ>0
      || _params.IL:=_dost.EWZ
      || {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
         __kom.add('Nie określono EWZ. Uzupełnienie stanów po przekroczeniu zapasu informacyjnego przerwane.'@);
         _ok:=0
      ?};
      _dz:=_params.DD-_dost.ILDNI;
      {? _dz<date() || _params.DD:=_params.DD+(_date-_dz) ?};
      _shift:=0;
      {!
      |? exec('spr_kal','faktury_plat',_params.DD,0)>0
      |!
         _params.DD+=1;
         _shift+=1
      !};
      _params.DZ:=_params.DD-(_dost.ILDNI+_shift);
      {!
      |? exec('spr_kal','faktury_plat',_params.DZ,0)>0
      |!
         _params.DZ+=1
      !};
      _params.KH:=_dost.KH;
      _params.CENA:=_dost.CENA;
      _params.WAL:=_wal;
      _params.TYPYZAM:=BEER.TYPYZAM;
      &_dost;
      {? _ok & _params.IL>0 & exec('pd_k_add','plan_dostaw',_params)
      || {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
         __kom.add('Dodano do koszyka: %1 %2.'@[form(_params.IL),PD_K.JM().KOD],7);
         _mgs+=('_'+_Tab2.MG+'_')
      ?}
   ?};
   _loop:=_ok & _Tab2.next()
!};

{? _sectbeg=0 || __kom.sect_end() ?};
_Tab2.cntx_pop();
1


\uzu_min
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formula planu dostaw - uzupelnienie stanow minimalnych do maksymalnych
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \uzu_min/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.UI:="exec('uzu_min_ui','%plan_dostaw',_a,_b)";
_args.U:="exec('uzu_min_u','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\uzu_min_ui
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: uzupelnienie stanow minimalnych do maksymalnych - formula uzupelnienia stanow - inicjujaca
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \uzu_min_ui/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;
_pytaj:=1;
{? _pytaj & PD_Z.TYPYZAM<>null() || BEER.TYPYZAM:=PD_Z.TYPYZAM; _pytaj:=0 ?};

:: wybor typu zamowienia
{? _pytaj || exec('wyb_zam','zamowienia','PD') ?};
{? BEER.TYPYZAM
||
   _ts:=exec('ts_mg','plan_dostaw');
   _tcs:=exec('tcs_min','plan_dostaw');
:: PD_POW - usunięcie zapisów z wcześniejszej analaizy
   exec('pd_pow_del','plan_dostaw',PD_P.PD_N,PD_P.ref(),_ts,_tcs,_paramsb.SEL);
   1
?}


\uzu_min_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: uzupelnienie stanow minimalnych do maksymalnych - formula uzupelnienia stanow
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \uzu_min_u/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_Tab2:=exec('pda_tab2_wsk','plan_dostaw','TAB');
_t2_ndx1:=exec('pda_tab2_wsk','plan_dostaw','NDX1');
_Tab3:=exec('pda_tab3_wsk','plan_dostaw','TAB');
_t3_ndx1:=exec('pda_tab3_wsk','plan_dostaw','NDX1');
_params:=exec('pd_k_add_a','plan_dostaw');
_wal:=exec('bl_wal','ustawienia');
_date:=date();
_sectbeg:=1;
_max_og:=_max_mg:=0;
PD_BUF.index('KODMGMDT');
PD_BUF.prefix('MMAX',null(),PD_P.M);
{? PD_BUF.first()
|| _max_og:=PD_BUF.IL
?};

_ts:=exec('ts_mg','plan_dostaw');
_tcs:=exec('tcs_min','plan_dostaw');

_Tab2.cntx_psh();
_Tab2.index(_t2_ndx1);
_Tab2.prefix();
_ok:=1;
_mgs:='';
_loop:=_Tab2.first();
{!
|? _loop
|!
   _Tab3.index(_t3_ndx1);
   _Tab3.prefix($_Tab2.ref(),exec('ts_mg','plan_dostaw'),'MMIN',);
   {? _Tab3.first() & _Tab2.MG<>'' & (_mgs*('_'+_Tab2.MG+'_'))=0
   ||
      _dd:={? _Tab2.D<_date || _date || _Tab2.D ?};
      _params.PD_N:=PD_N.ref();
      _params.PD_P:=PD_P.ref();
      _params.DD:=_dd;
      _params.MG:=exec('autil_mg4dost','plan_dostaw',_Tab2.PD_D_KOD,_Tab2.REF,_Tab2.MG);
      {? _params.MG=null()
      || {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
         __kom.add('Brak uprawnionego magazynu. Uzupełnienie do stanów maksymalnych przerwane.'
            '\nNależy sprawdzić funkcję autil_mg4dost w pliku plan_dostaw.fml czy obsługuje formułę: %1.'@
            [_Tab2.PD_D_KOD]);
         _ok:=0
      ?};
      {? _ok
      ||
         _params.Z_MG:=null();
         _params.M:=PD_P.M;
         _params.DK_C:=null();
         PD_BUF.index('KODMGMDT'); PD_BUF.prefix('MMAX',_params.MG,PD_P.M);
         _max_mg:={? PD_BUF.first() || PD_BUF.IL || 0 ?};
         _il:={? _max_mg || _max_mg || _max_og ?};
         {? _il
         || _stan:=_Tab2.STAN_MG;
            _mg:=_Tab2.MG;
            _Tab2.cntx_psh();
            {!
            |? {? _Tab2.D<=_params.DD & _Tab2.MG=_mg
               || _stan:=_Tab2.STAN_MG
               ?};
               _Tab2.next()
            !};
            _Tab2.cntx_pop();
            _params.IL:=_il-_stan
         || {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
            __kom.add('Nie określono stanu maksymalnego. Uzupełnienie do stanów maksymalnych przerwane.'@);
            _ok:=0
         ?}
      ?};
      _continue:=1;
      {? _ok
      ||
         _dost:=exec('dost','ceny_mat',PD_P.M,_dd,_wal,1,_il);
         _dz:=_params.DD-_dost.ILDNI;
         {? _dz<date() || _params.DD:=_params.DD+(_date-_dz) ?};
         _shift:=0;
         {!
         |? exec('spr_kal','faktury_plat',_params.DD,0)>0
         |!
            _params.DD+=1;
            _shift+=1
         !};
         _params.DZ:=_params.DD-(_dost.ILDNI+_shift);
         {!
         |? exec('spr_kal','faktury_plat',_params.DZ,0)>0
         |!
            _params.DZ+=1
         !};
         _pd_pow_ref1:=_Tab2.REF;
         _pd_pow_opis:='';
         {? _params.DD>_dd
         ||
            _Tab2.cntx_psh();
            _Tab2.prefix(_Tab2.MG,);
            {? _Tab2.find_le(_params.DD,time(23,59,59)) & _Tab2.STAN_MG>=_il
            ||
               _pd_pow_ref2:=_Tab2.REF;
               _pd_pow_opis:='Stan osiągnie stan maksymalny w dniu %1 przed możliwą dostawą w dniu %2.[%3;%4;%5]'@[
                  form(_Tab2.D),form(_params.DD),date()$1,time()$1,_pdd_kod];
               {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
               __kom.add(_pd_pow_opis,7);
::    uzupełnienie PD_POW
               exec('pd_pow_add','plan_dostaw',_params.PD_N,_params.PD_P,_ts,_tcs,_pd_pow_ref1,_pd_pow_ref2,
                  _pd_pow_opis);
               _continue:=0
            ?};
            _Tab2.cntx_pop()
         ?}
      ?};
      {? _ok & _continue
      ||
         _params.KH:=_dost.KH;
         _params.CENA:=_dost.CENA;
         _params.WAL:=_wal;
         _params.TYPYZAM:=BEER.TYPYZAM;
         {? _params.IL>0
         ||
            _pd_k:=exec('pd_k_add','plan_dostaw',_params);
            {? _pd_k
            ||
               _pd_pow_ref2:=$_pd_k;
               _pd_pow_opis:='W dniu %1 dodano do koszyka: %2 %3.[%4;%5;%6]'@[_params.DD$1,form(_params.IL),
                  PD_K.JM().KOD,date()$1,time()$1,_pdd_kod];
               {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
               __kom.add(_pd_pow_opis,7);
::    uzupełnienie PD_POW
               exec('pd_pow_add','plan_dostaw',_params.PD_N,_params.PD_P,_ts,_tcs,_pd_pow_ref1,_pd_pow_ref2,
                  _pd_pow_opis);
               _mgs+=('_'+_Tab2.MG+'_')
            ?}
         ?}
      ?};
      {? var_pres('_dost')=type_of(obj_new('obj')) || obj_del(_dost) ?}
   ?};
   _loop:=_ok & _Tab2.next()
!};

{? _sectbeg=0 || __kom.sect_end() ?};
_Tab2.cntx_pop();
1


\uzu_brak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formula planu dostaw - uzupelnienie brakow
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \uzu_brak/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.UI:="exec('uzu_brak_ui','%plan_dostaw',_a,_b)";
_args.U:="exec('uzu_brak_u','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\uzu_brak_ui
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: uzupelnienie brakow - formula uzupelnienia stanow - inicjujaca
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \uzu_brak_ui/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;
_pytaj:=1;
{? _pytaj & PD_Z.TYPYZAM<>null() || BEER.TYPYZAM:=PD_Z.TYPYZAM; _pytaj:=0 ?};

:: wybor typu zamowienia
{? _pytaj || exec('wyb_zam','zamowienia','PD') ?};
{? BEER.TYPYZAM | BEER.TYPYZAMW
||
   _ts:=exec('ts_d','plan_dostaw');
   _tcs:=exec('tcs_brak','plan_dostaw');
:: PD_POW - usunięcie zapisów z wcześniejszej analaizy
   exec('pd_pow_del','plan_dostaw',PD_P.PD_N,PD_P.ref(),_ts,_tcs,_paramsb.SEL);
   1
?}


\uzu_brak_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: uzupelnienie brakow - formula uzupelnienia stanow
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \uzu_brak_u/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_Tab:=exec('pda_tab2_wsk','plan_dostaw','TAB');
_ndx:=exec('pda_tab2_wsk','plan_dostaw','NDX2');
_stany_env:=exec('pda_stany_wsk','plan_dostaw','ENV');
_params:=exec('pd_k_add_a','plan_dostaw');
_wal:=exec('bl_wal','ustawienia');
_date:=date();
_sectbeg:=1;
_one_pd_k:=1;
_one_pd_k_d:=date(0,0,0);
_one_pd_k_plus:=0;
_max_plus:=0;

MG.cntx_psh();
:: \pd_k_zmg_be/plan_dostaw.fml - ustawia filtr tabeli MG na magazyny do przesunięć,
:: kolejne formuły nie mogą go unieważnić, w przeciwnym przypadku formułę trzeb przesunąć bezpośrednio
:: przed wywołanie MG.f_find(_z_mg,)
_mm:=BEER.TYPYZAMW & exec('pd_k_zmg_be','plan_dostaw','W');

_ts:=exec('ts_d','plan_dostaw');
_tcs:=exec('tcs_brak','plan_dostaw');

_ok:=1;

_Tab.cntx_psh();
_Tab.index(_ndx);
_Tab.prefix();

{? _one_pd_k=0 & _Tab.last() & _Tab.STAN_D<0
||
   _max_plus:=-_Tab.STAN_D

|? _one_pd_k=1 & _Tab.last() & _Tab.STAN_D<0
||
   _one_pd_k_d:=_Tab.D;
   _one_pd_k_plus:=-_Tab.STAN_D;
   _tab_ref:=_Tab.REF;
   _tab_mg:=_Tab.MG;
   _tab_pd_d_kod:=_Tab.PD_D_KOD;
   _loop:=_Tab.first();
   {!
   |? _loop
   |!
      _loop:=
         {? _Tab.D>=date() & _Tab.STAN_D<0
         || _one_pd_k_d:=_Tab.D;
            _tab_ref:=_Tab.REF;
            _tab_mg:=_Tab.MG;
            _tab_pd_d_kod:=_Tab.PD_D_KOD;
            0
         || _Tab.next()
         ?}
   !};
   _dd_wstepna:=exec('autil_date','plan_dostaw',_one_pd_k_d,0);
   _il:=_one_pd_k_plus;
   _dost:=exec('dost','ceny_mat',PD_P.M,_dd_wstepna,_wal,1,_il);
   _params.PD_N:=PD_N.ref();
   _params.PD_P:=PD_P.ref();
   _params.DZ:=exec('autil_date','plan_dostaw',_dd_wstepna,_dost.ILDNI);
   _params.DD:=
      {? (_dd_wstepna-_params.DZ)<_dost.ILDNI
      || exec('autil_date','plan_dostaw',_params.DZ+_dost.ILDNI,0,1)
      || _dd_wstepna
      ?};
   _one_pd_k_d:=_params.DD;
   _continue:=1;
   _pd_pow_ref1:=_tab_ref;
   _pd_pow_opis:='';
   _params.KH:=_dost.KH;
   _params.MG:=exec('autil_mg4dost','plan_dostaw',_tab_pd_d_kod,_tab_ref,_tab_mg);
   {? _params.MG=null()
   ||
      {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
      __kom.add('Brak uprawnionego magazynu. Uzupełnienie braków przerwane.'@);
      __kom.add(' Należy sprawdzić funkcję autil_mg4dost w pliku plan_dostaw.fml czy obsługuje formułę:'
         ' %1.'@[_tab_pd_d_kod]);
      _ok:=0
   ?};
   {? _ok
   ||
:: dodanie do koszyka
      _params.Z_MG:=null();
      _params.M:=PD_P.M;
      _params.DK_C:=null();
      _params.IL:=_il;
      _params.WAL:=_dost.WAL;
      {? _params.WAL=INFO.NAROD
      ||
         _params.CWAL:=0;
         _params.KRS:=0;
         _params.CENA:=_dost.CENA
      ||
         _params.CWAL:=_dost.CENA;
         _params.KRS:=0;
         _params.CENA:=0
      ?};
      _params.TYPYZAM:=BEER.TYPYZAM;
      _pd_k:=exec('pd_k_add','plan_dostaw',_params);
      {? _pd_k
      ||
:: uzupełnienie PD_POW
         _pd_pow_ref2:=$_pd_k;
         _pd_pow_opis:='W dniu %1 dodano do koszyka: %2 %3.[%4;%5;%6]'@[_params.DD$1,form(PD_K.IL),PD_K.JM().KOD,
            date()$1,time()$1,_pdd_kod];
         {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
         __kom.add(_pd_pow_opis,7);
         exec('pd_pow_add','plan_dostaw',_params.PD_N,_params.PD_P,_ts,_tcs,_pd_pow_ref1,_pd_pow_ref2,
            _pd_pow_opis);
:: aktualizacja stanu magazynu do przesunięć
         _stany_env.aktualizuj_stan(_tab_mg,'',_params.DD,_params.IL);
:: aktualizacja stanu dostępnego
         _stany_env.aktualizuj_stan_dostepny($_pd_k,_params.DD,_params.IL)
      ?}
   ?};
   obj_del(_dost)
?};
::
:: analiza stanów
::
_plus:=0;
_loop:=_Tab.first();
{!
|? _loop
|!
   {? _one_pd_k & _one_pd_k_d<>date(0,0,0) & _Tab.D>=_one_pd_k_d || _plus:=_one_pd_k_plus ?};
   _anal:=_Tab.STAN_D+_plus<0;
   _Tab.cntx_psh();
   _next:=_Tab.next();
   _anal:=_anal & _next & _Tab.D>_date;
   _Tab.cntx_pop();
:: dostawy
   {? BEER.TYPYZAM
         &
      _Tab.STAN_D+_plus<0 & (_Tab.D>=_date | _next=0 | _anal)
   ||
      _dd_wstepna:=exec('autil_date','plan_dostaw',_Tab.D,0);
      _il:=-_Tab.STAN_D-_plus;
      {? _il>_max_plus || _il:=_max_plus ?};
      _dost:=exec('dost','ceny_mat',PD_P.M,_dd_wstepna,_wal,1,_il);
      _params.PD_N:=PD_N.ref();
      _params.PD_P:=PD_P.ref();
      _params.DZ:=exec('autil_date','plan_dostaw',_dd_wstepna,_dost.ILDNI);
      _params.DD:=
         {? (_dd_wstepna-_params.DZ)<_dost.ILDNI
         || exec('autil_date','plan_dostaw',_params.DZ+_dost.ILDNI,0,1)
         || _dd_wstepna
         ?};
      _continue:=1;
      _pd_pow_ref1:=_Tab.REF;
      _pd_pow_opis:='';
      {? _continue>0
      ||
:: sprawdzenie czy jest stan dostępny w wymaganej dacie lub przyszłości
:: jeśli jest stan dostępny nie będzie tworzony zapis w koszyku
         _stan_dostepny:=_stany_env.stan_dostepny();
         {? _stan_dostepny.D<>date(0,0,0)
         ||
:: uzupełnienie PD_POW
            _pd_pow_ref2:=_stan_dostepny.REF;
            _pd_pow_opis:=
               {? _stan_dostepny.D=_params.DD
               ||
                  'Stan będzie dostępny w dniu %1.[%2;%3;%4]'@[
                     form(_stan_dostepny.D),date()$1,time()$1,_pdd_kod]
               ||
                  'Stan będzie dostępny w dniu %1 przy czym możliwa jest dostawa na dzień %2.[%3;%4;%5]'@[
                     form(_stan_dostepny.D),form(_params.DD),date()$1,time()$1,_pdd_kod]
               ?};
            {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
            __kom.add(_pd_pow_opis,7);
            exec('pd_pow_add','plan_dostaw',_params.PD_N,_params.PD_P,_ts,_tcs,_pd_pow_ref1,_pd_pow_ref2,_pd_pow_opis);
            _continue:=0
         ?};
         obj_del(_stan_dostepny)
      ?};
      {? _continue>0 & _il>0 & _one_pd_k=0
      ||
         _params.KH:=_dost.KH;
         _params.MG:=exec('autil_mg4dost','plan_dostaw',_Tab.PD_D_KOD,_Tab.REF,_Tab.MG);
         {? _params.MG=null()
         ||
            {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
            __kom.add('Brak uprawnionego magazynu. Uzupełnienie braków przerwane.'@);
            __kom.add(' Należy sprawdzić funkcję autil_mg4dost w pliku plan_dostaw.fml czy obsługuje formułę:'
               ' %1.'@[_Tab.PD_D_KOD]);
            _ok:=0
         ?};
         {? _ok
         ||
:: dodanie do koszyka
            _params.Z_MG:=null();
            _params.M:=PD_P.M;
            _params.DK_C:=null();
            _params.IL:=_il; _plus+=_params.IL; _max_plus-=_params.IL;
            _params.WAL:=_dost.WAL;
            {? _params.WAL=INFO.NAROD
            ||
               _params.CWAL:=0;
               _params.KRS:=0;
               _params.CENA:=_dost.CENA
            ||
               _params.CWAL:=_dost.CENA;
               _params.KRS:=0;
               _params.CENA:=0
            ?};
            _params.TYPYZAM:=BEER.TYPYZAM;
            _pd_k:=exec('pd_k_add','plan_dostaw',_params);
            {? _pd_k
            ||
:: uzupełnienie PD_POW
               _pd_pow_ref2:=$_pd_k;
               _pd_pow_opis:='W dniu %1 dodano do koszyka: %2 %3.[%4;%5;%6]'@[_params.DD$1,form(PD_K.IL),PD_K.JM().KOD,
                  date()$1,time()$1,_pdd_kod];
               {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
               __kom.add(_pd_pow_opis,7);
               exec('pd_pow_add','plan_dostaw',_params.PD_N,_params.PD_P,_ts,_tcs,_pd_pow_ref1,_pd_pow_ref2,
                  _pd_pow_opis);
:: aktualizacja stanu magazynu do przesunięć
               _stany_env.aktualizuj_stan(_Tab.MG,'',_params.DD,_params.IL);
:: aktualizacja stanu dostępnego
               _stany_env.aktualizuj_stan_dostepny($_pd_k,_params.DD,_params.IL)
            ?}
         ?}
      ?};
      &_dost
   ?};
:: przesunięcia
   {? _mm & _Tab.MG<>''
   ||
      _dd:={? _Tab.D<_date || _date || _Tab.D ?};
      _mg:=_Tab.MG;
      _mg_stan:=_stany_env.pobierz_stan(_mg,'',_dd);
      {? _mg_stan<0
      ||
         PD_MG.cntx_psh();
         {? exec('get','#params',600400,2)='N'
         ||
            _oddz:=exec('FindInSet','#table','MG','MAGAZYNY',_mg,,"MG.ODDZ",1,,'');
            PD_MG.index('ODDZ_MM');
            PD_MG.prefix(_oddz,PD_N.ref(),null(),'T')
         ||
            PD_MG.index('MM');
            PD_MG.prefix(PD_N.ref(),null(),'T')
         ?};
         _loop:=PD_MG.first();
         {!
         |? _loop
         |!
            _z_mg:=PD_MG.MG().SYM;
            {? MG.f_find(_z_mg,) & _mg<>_z_mg
            ||
               _z_mg_stan:=_stany_env.pobierz_stan(_z_mg,'',_dd);
               {? _z_mg_stan>0
               ||
:: magazyn do przesunięć ma ilość do przesunięcia
                  _params.PD_N:=PD_N.ref();
                  _params.PD_P:=PD_P.ref();
                  _params.DD:=_params.DZ:=_dd;
                  _params.MG:=exec('autil_mg4dost','plan_dostaw',_Tab.PD_D_KOD,_Tab.REF,_Tab.MG);
                  {? _params.MG=null()
                  ||
                     {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
                     __kom.add('Brak uprawnionego magazynu. Uzupełnienie braków przerwane.'@);
                     __kom.add('Należy sprawdzić funkcję autil_mg4dost w pliku plan_dostaw.fml czy obsługuje formułę'
                        ': %1.'@[_Tab.PD_D_KOD]);
                     _ok:=0
                  ?};

                  _params.Z_MG:=PD_MG.MG;
                  _params.M:=PD_P.M;
                  _params.DK_C:=null();
                  _params.IL:={? -_mg_stan<_z_mg_stan || -_mg_stan || _z_mg_stan ?};
:: aktualizacja stanu magazynu do przesunięć
                  _stany_env.aktualizuj_stan(_z_mg,'',_dd,-_params.IL);
                  _stany_env.aktualizuj_stan(_mg,'',_dd,_params.IL);
                  _params.TYPYZAM:=BEER.TYPYZAMW;
                  {? _params.TYPYZAM & _ok & _params.IL>0 & exec('pd_k_add','plan_dostaw',_params)
                  ||
                     {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
                     __kom.add('Przesunięto %1 %2 z magazynu %3 do magazynu %4.'@[form(PD_K.IL),PD_K.JM().KOD,
                        _z_mg,_mg]);
                     _mg_stan+=_params.IL
                  ?}
               ?}
            ?};
            _loop:=_mg_stan<0 & PD_MG.next()
         !};
         PD_MG.cntx_pop()
      ?}
   ?};
   _loop:=_ok & _Tab.next()
!};

{? _mm || MG.f_clear() ?};
{? _sectbeg=0 || __kom.sect_end() ?};
MG.cntx_pop();
_Tab.cntx_pop();
1


\uzu_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.41]
:: OPIS: formula planu dostaw - uzupelnienie brakow wg cech
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \uzu_atr/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.UI:="exec('uzu_atr_ui','%plan_dostaw',_a,_b)";
_args.U:="exec('uzu_atr_u','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\uzu_atr_ui
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.41]
:: OPIS: uzupelnienie brakow wg cech - formula uzupelnienia stanow - inicjujaca
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \uzu_atr_ui/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;
_pytaj:=1;
{? _pytaj & PD_Z.TYPYZAM<>null() || BEER.TYPYZAM:=PD_Z.TYPYZAM; _pytaj:=0 ?};

:: wybor typu zamowienia
{? _pytaj || exec('wyb_zam','zamowienia','PD') ?};
BEER.TYPYZAM


\uzu_atr_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.41]
:: OPIS: uzupelnienie brakow wg cech - formula uzupelnienia stanow
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \uzu_atr_u/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_Tab:=exec('pda_tab2_wsk','plan_dostaw','TAB');
_ndx:=exec('pda_tab2_wsk','plan_dostaw','NDX4');
_params:=exec('pd_k_add_a','plan_dostaw');
_wal:=exec('bl_wal','ustawienia');
_date:=date();
_sectbeg:=1;

_Tab.cntx_psh();

_Tab.index(_ndx);
_Tab.prefix();

_ok:=1;
_plus:=0;
_loop:=_Tab.first();
_dk_c:=_Tab.DK_C;
{!
|? _loop
|!
   _anal:=_Tab.STAN_D+_plus<0;
   _Tab.cntx_psh();
   _next:=_Tab.next();
   _anal:=_anal & _next & _Tab.D>_date;
   _Tab.cntx_pop();
   {? _Tab.STAN_DKC+_plus<0 & (_Tab.D>=_date | _next=0 | _anal)
   ||
      _dd:={? _Tab.D<_date || _date || _Tab.D ?};
      _il:=-_Tab.STAN_DKC-_plus;
      _dost:=exec('dost','ceny_mat',PD_P.M,_dd,_wal,1,_il);
      _params.PD_N:=PD_N.ref();
      _params.PD_P:=PD_P.ref();
      _params.DD:=_dd;
      _dz:=_params.DD-_dost.ILDNI;
      {? _dz<date() || _params.DD:=_params.DD+(_date-_dz) ?};
      _shift:=0;
      {!
      |? exec('spr_kal','faktury_plat',_params.DD,0)>0
      |!
         _params.DD+=1;
         _shift+=1
      !};
      _params.DZ:=_params.DD-(_dost.ILDNI+_shift);
      {!
      |? exec('spr_kal','faktury_plat',_params.DZ,0)>0
      |!
         _params.DZ+=1
      !};
      _params.KH:=_dost.KH;
      _params.MG:=exec('autil_mg4dost','plan_dostaw',_Tab.PD_D_KOD,_Tab.REF,_Tab.MG,'DOSTAWY');
      {? _params.MG=null()
      || {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
         __kom.add('Brak uprawnionego magazynu. Uzupełnienie braków przerwane.'
            '\nNależy sprawdzić funkcję autil_mg4dost w pliku plan_dostaw.fml czy obsługuje formułę: %1.'@
            [_Tab.PD_D_KOD]);
         _ok:=0
      ?};
      _params.Z_MG:=null();
      _params.M:=PD_P.M;
      _params.DK_C:=exec('FindAndGet','#table',DK_C,_Tab.DK_C,,,null());
      _params.IL:=_il; _plus+=_params.IL;
      _params.CENA:=_dost.CENA;
      _params.WAL:=_wal;
      _params.TYPYZAM:=BEER.TYPYZAM;
      &_dost;
      {? _ok & _params.IL>0 & exec('pd_k_add','plan_dostaw',_params)
      || {? _sectbeg || __kom.sect_beg(PD_P.M().KTM); _sectbeg:=0 ?};
         __kom.add('Dodano do koszyka: %1 %2.'@[form(PD_K.IL),PD_K.JM().KOD])
      ?}
   ?};
   _ok:=_Tab.next();
   {? _ok & _dk_c<>_Tab.DK_C || _plus:=0; _dk_c:=_Tab.DK_C ?};
   _loop:=_ok
!};

{? _sectbeg=0 || __kom.sect_end() ?};
_Tab.cntx_pop();
1


\dd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: uruchamia formuly dostawy dedykowanej
::   WE: _a - argument - wynik formuly exec('pda_a','pda')
::  OLD: \dd/pd_d.fml
::----------------------------------------------------------------------------------------------------------------------
_paramsa:=_a;

_paramsa.TYP:='S';
_paramsa.PAR:='DD';

exec('core_d','plan_dostaw',_paramsa)


\zdp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.42]
:: OPI: formula bufora planu dostaw - potwierdzenia zamowienia dostaw
::   WE: _a - PD_BUF_D.KOD
::  OLD: \zdp/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   ZDP_NAG.trig_a('put',$("exec('zdpn_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   ZDP_POZ.trig_a('add',$("exec('zdp_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   ZDP_POZ.trig_a('put',$("exec('zdp_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   ZDP_POZ.trig_b('del',$("exec('zdp_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   ZDP_NAG.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   ZDP_POZ.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   ZDP_POZ.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   ZDP_POZ.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('zdp_init','%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('zdp_display','%plan_dostaw',PD_BUF.REF)
?}


\zdpzdn_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.51]
:: OPIS: trig_a add - potwierdzenia zamowienia dostaw - zamowienie dostawy
::   WE: _a - PD_BUF_D.KOD
::   WY:
::  OLD: \zdpzdn_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ZD_NAG.name()+2)='__'
   & ZD_NAG.STAN<>bfld('STAN')
|| PD_Z.TRIG_NAG:='zdpzdn_put';
   ZD_POZ.cntx_psh();
   ZD_POZ.index('POZ');
   ZD_POZ.prefix(ZD_NAG.ref());
   _loop:=ZD_POZ.first();
   {!
   |? _loop
   |!
      ZDP_POZ.cntx_psh();
      ZDP_POZ.index('ZD_POZ');
      ZDP_POZ.prefix($ZD_POZ.ref());
      _loop:=ZDP_POZ.first();
      {!
      |? _loop
      |!
         ZDP_POZ.put();
         _loop:=ZDP_POZ.next()
      !};
      ZDP_POZ.cntx_pop();
      _loop:=ZD_POZ.next()
   !};
   ZD_POZ.cntx_pop();
   PD_Z.TRIG_NAG:=''
?};
~~


\zdpzd_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - potwierdzenia zamowienia dostaw - potwierdzana pozycja
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'-sprzedaży, 'W'ewnetrzne
::  OLD: \zdpzd_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ZD_POZ.name()+2)='__'
   & (ZD_POZ.MG<>bfld('MG')
      | ZD_POZ.DK_C<>bfld('DK_C'))
|| PD_Z.TRIG_NAG:='zd_poz';
   ZDP_POZ.cntx_psh();
   ZDP_POZ.use('zdptp'+(ZD_POZ.name()+3));
   ZDP_POZ.index('ZD_POZ');
   ZDP_POZ.prefix($ZD_POZ.ref());
   _loop:=ZDP_POZ.first();
   {!
   |? _loop
   |!
      _loop:=ZDP_POZ.put() & ZDP_POZ.next()
   !};
   ZDP_POZ.cntx_pop();
   PD_Z.TRIG_NAG:=''
?};
~~


\zdpn_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - potwierdzenia zamowienia dostaw - naglowek
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'-sprzedaży, 'W'ewnetrzne
::  OLD: \zdpn_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ZDP_NAG.name()+2)='__'
   & (ZDP_NAG.D_WYS<>bfld('D_WYS') & bfld('D_REA')=date(0,0,0) & ZDP_NAG.D_REA=date(0,0,0)
      | ZDP_NAG.D_REA<>bfld('D_REA'))
|| PD_Z.TRIG_NAG:='zdp_nag';
   ZDP_POZ.cntx_psh();
   ZDP_POZ.index('ZDP_NAG');
   ZDP_POZ.prefix(ZDP_NAG.ref());
   _loop:=ZDP_POZ.first();
   {!
   |? _loop
   |!
      _loop:=ZDP_POZ.put() & ZDP_POZ.next()
   !};
   ZDP_POZ.cntx_pop();
   PD_Z.TRIG_NAG:=''
?};
~~


\zdp_zdrp_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.51]
:: OPIS: trig_a add - potwierdzenia zamowienia dostaw - pozycja realizacji
::   WE: _a - PD_BUF_D.KOD
::       _b - $ZDP_POZ.ref()
::   WY:
::  OLD: \zdp_zdrp_aadd/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:={? var_pres('_b')=type_of('') || _b || ZD_RP.ZDP_POZ ?};
{? (8+_ref+2)='__'
||
   ZDP_POZ.cntx_psh();
   ZDP_POZ.use(8+_ref);
   ZDP_POZ.prefix();
   {? ZDP_POZ.seek(_ref) || ZDP_POZ.put() ?};
   ZDP_POZ.cntx_pop()
?};
~~


\zdp_zdrp_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.51]
:: OPIS: trig_a put - potwierdzenia zamowienia dostaw - pozycja realizacji
::   WE: _a - PD_BUF_D.KOD
::   WY:
::  OLD: \zdp_zdrp_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zdp_zdrp_aadd','%plan_dostaw');
~~


\zdp_zdrp_adel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.51]
:: OPIS: trig_a del - potwierdzenia zamowienia dostaw - pozycja realizacji
::   WE: _a - PD_BUF_D.KOD
::   WY:
::  OLD: \zdp_zdrp_adel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zdp_zdrp_aadd','%plan_dostaw',,bfld('ZDP_POZ'));
~~


\zdp_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a add - potwierdzenia zamowienia dostaw
::   WE: _a - PD_BUF_D.KOD
::  OLD: \zdp_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ZDP_POZ.name()+2)='__'
||
   _il:=ZDP_POZ.IL-ZDP_POZ.ILMG;
   {? _il>0 & ~ZDP_POZ.END & ZDP_POZ.ZD_POZ<>'' & ~exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"END",0)
   || ZDP_NAG.cntx_psh();
      {? ZDP_POZ.ZD_POZ<>''
      || ZD_POZ.cntx_psh();
         ZD_POZ.use(8+ZDP_POZ.ZD_POZ);
         ZD_POZ.clear();
         {? ZD_POZ.seek(ZDP_POZ.ZD_POZ,8+ZDP_POZ.ZD_POZ)
         || _date:={? ZDP_POZ.D_WYS<>date(0,0,0)
                   || ZDP_POZ.D_WYS
                   || {? ZDP_POZ.ZDP_NAG().D_REA=date(0,0,0) || ZDP_NAG.D_WYS || ZDP_NAG.D_REA ?}
                   ?};
            _mg:=ZD_POZ.MG;
            _ktm:=ZD_POZ.M;
            _dkc:=ZD_POZ.DK_C;
            exec('pd_buf_add','plan_dostaw',_date,time(0,0,0),_a,ST.ODDZ,_mg,_ktm,_dkc,_il,1,$ZDP_POZ.ref());
            ZD_POZ.put()
         ?};
         ZD_POZ.cntx_pop()
      ?};
      ZDP_NAG.cntx_pop()
   ?}
?};
~~


\zdp_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - potwierdzenia zamowienia dostaw
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'-sprzedaży, 'W'ewnetrzne
::  OLD: \zdp_aput/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
{? (ZDP_POZ.name()+2)='__'
||
   _il:=
      {? PD_Z.TRIG_NAG='zdpzdn_put' & (ZD_NAG.STAN='M' | ZD_NAG.STAN='Q')
      || 0
      || ZDP_POZ.IL-ZDP_POZ.ILMG
      ?};
   {? _il>0 & ~ZDP_POZ.END & ZDP_POZ.ZD_POZ<>'' & ~exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"END",0)
   || {? PD_Z.TRIG_NAG='zd_poz'
      || ZDP_NAG.cntx_psh();
         ZDP_NAG.use(ref_name(ZDP_POZ.ZDP_NAG));
         _date:={? ZDP_POZ.D_WYS<>date(0,0,0)
                || ZDP_POZ.D_WYS
                || {? ZDP_POZ.ZDP_NAG().D_REA=date(0,0,0) || ZDP_NAG.D_WYS || ZDP_NAG.D_REA ?}
                ?};
         exec('pd_buf_put','plan_dostaw',_date,time(0,0,0),_a,ST.ODDZ,ZD_POZ.MG,ZD_POZ.M,ZD_POZ.DK_C,_il,1,$ZDP_POZ.ref());
         ZDP_NAG.cntx_pop()
      |? ZDP_POZ.ZD_POZ<>''
      || ZD_POZ.cntx_psh();
         ZD_POZ.use(8+ZDP_POZ.ZD_POZ);
         ZD_POZ.clear();
         {? ZD_POZ.seek(ZDP_POZ.ZD_POZ,8+ZDP_POZ.ZD_POZ)
         || _mg:=ZD_POZ.MG;
            _ktm:=ZD_POZ.M;
            _dkc:=ZD_POZ.DK_C;
            {? PD_Z.TRIG_NAG='zdp_nag'
            || _date:={? ZDP_POZ.D_WYS<>date(0,0,0)
                      || ZDP_POZ.D_WYS
                      || {? ZDP_POZ.ZDP_NAG().D_REA=date(0,0,0) || ZDP_NAG.D_WYS || ZDP_NAG.D_REA ?}
                      ?};
               exec('pd_buf_put','plan_dostaw',_date,time(0,0,0),_a,ST.ODDZ,_mg,_ktm,_dkc,_il,1,$ZDP_POZ.ref())
            || ZDP_NAG.cntx_psh();
               ZDP_NAG.use(ref_name(ZDP_POZ.ZDP_NAG));
               _date:={? ZDP_POZ.D_WYS<>date(0,0,0)
                      || ZDP_POZ.D_WYS
                      || {? ZDP_POZ.ZDP_NAG().D_REA=date(0,0,0) || ZDP_NAG.D_WYS || ZDP_NAG.D_REA ?}
                      ?};
               exec('pd_buf_put','plan_dostaw',_date,time(0,0,0),_a,ST.ODDZ,_mg,_ktm,_dkc,_il,1,$ZDP_POZ.ref());
               ZDP_NAG.cntx_pop();
               ZD_POZ.put()
            ?}
         ?};
         ZD_POZ.cntx_pop()
      ?}
   || exec('pd_buf_del','plan_dostaw',_a,$ZDP_POZ.ref())
   ?}
?};
~~


\zdp_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: trig_a put - potwierdzenia zamowienia dostaw
::   WE: _a - PD_BUF_D.KOD
::  OLD: \zdp_bdel/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$ZDP_POZ.ref())


\zdp_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formula startowa - potwierdzenia zamowienia dostaw
::   WE: _a - PD_BUF_D.KOD
::       _b - 'S'-sprzedaży, 'W'ewnetrzne
::  OLD: \zdp_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

_st_oddz:=ST.ODDZ;
ZDP_NAG.cntx_psh(); ZDP_POZ.cntx_psh(); ODDZ.cntx_psh(); ZD_POZ.cntx_psh();
ODDZ.index('KOD2'); ODDZ.prefix();
{? ODDZ.first()
||
   _loop:=ODDZ.first();
   {!
   |? _loop
   |!
      ZDP_NAG.use('zdptn'+ODDZ.KOD+'__');
      ZDP_POZ.use('zdptp'+ODDZ.KOD+'__');
      ZDP_POZ.index('ZD_POZ'); ZDP_POZ.prefix();
      _loop1:=ZDP_POZ.first();
      ST.ODDZ:=ODDZ.KOD;
      {!
      |? _loop1
      |!
         _il:=ZDP_POZ.IL-ZDP_POZ.ILMG;
         {? _il>0 & ~ZDP_POZ.END & ZDP_POZ.ZD_POZ<>'' & ~exec('FindAndGet','#table',ZD_POZ,ZDP_POZ.ZD_POZ,,"END",0)
         || {? ZDP_POZ.ZD_POZ<>''
            || ZD_POZ.use(8+ZDP_POZ.ZD_POZ);
               ZD_POZ.clear();
               {? ZD_POZ.seek(ZDP_POZ.ZD_POZ,8+ZDP_POZ.ZD_POZ)
               || _mg:=ZD_POZ.MG;
                  _ktm:=ZD_POZ.M;
                  _dkc:=ZD_POZ.DK_C;
                  _date:={? ZDP_POZ.D_WYS<>date(0,0,0)
                         || ZDP_POZ.D_WYS
                         || {? ZDP_POZ.ZDP_NAG().D_REA=date(0,0,0) || ZDP_NAG.D_WYS || ZDP_NAG.D_REA ?}
                         ?};
                  exec('pd_buf_put','plan_dostaw',_date,time(0,0,0),_a,ODDZ.KOD,_mg,_ktm,_dkc,_il,1,$ZDP_POZ.ref())
               ?}
            ?}
         ?};
         _loop1:=ZDP_POZ.next()
      !};
      _loop:=ODDZ.next()
   !}
?};
ST.ODDZ:=_st_oddz;
ZDP_NAG.cntx_pop(); ZDP_POZ.cntx_pop(); ODDZ.cntx_pop(); ZD_POZ.cntx_pop()


\zdp_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: wyswietla informacje dotyczace zapisu w PD_BUF - potwierdzenia zamowienia dostaw
::   WE: _a - $ZDP_POZ.ref()
::  OLD: \zdp_display/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

{? _ref<>''
||
   ZDP_POZ.cntx_psh();
   ZDP_POZ.use(8+_ref);
   ZDP_POZ.prefix();
   {? ZDP_POZ.seek(_ref)
   ||
      ZDP_POZ.win_edit('SZUK');
      ZDP_POZ.display()
   ?};
   ZDP_POZ.cntx_pop()
?}


\zdp_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: formuly planu dostaw - zamowienia dostaw
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \zdp/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Potwierdzenia zamówień';
_args.LEG_KOD:='PDA#01#02#ZDP';
_args.T:="exec('zdp_t','%plan_dostaw',_a,_b)";
_args.K:="exec('zdp_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('zd_i','%plan_dostaw',_a,_b)";
_args.S:="exec('zdp_s','%plan_dostaw',_a,_b)";
_args.V:="exec('zdp_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\zdp_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zdp_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\zdp_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zdp_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\zdp_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zdp_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\zdp_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zdp_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); ZDP_NAG.cntx_psh(); ZDP_POZ.cntx_psh(); ZD_NAG.cntx_psh(); ZD_POZ.cntx_psh(); KH.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         ZDP_POZ.use(8+PD_BUF.REF);
         ZDP_POZ.prefix();
         {? ZDP_POZ.seek(PD_BUF.REF)
         || ZDP_NAG.use(ref_name(ZDP_POZ.ZDP_NAG));
            ZD_POZ.use(8+ZDP_POZ.ZD_POZ);
            ZD_POZ.prefix();
            {? ZD_POZ.seek(ZDP_POZ.ZD_POZ)
            ||
               ZD_NAG.use(ref_name(ZD_POZ.ZD_NAG));
               _kh:={? ZD_POZ.ZD_NAG().KH || ZD_NAG.KH().SKR+' ' || '' ?};
               _opis:=ZDP_POZ.ZDP_NAG().SYM+' do zam.: '+_kh+ZD_NAG.SYM+' poz.'+$ZD_POZ.POZ
            ?}
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='P';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('zdp_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILP:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('zdp_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); ZDP_NAG.cntx_pop(); ZDP_POZ.cntx_pop(); ZD_NAG.cntx_pop(); ZD_POZ.cntx_pop(); KH.cntx_pop()


\zdp_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: zamowienia dostaw - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \zdp_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zdp_display','%plan_dostaw',cur_tab(1,1).REF)


\odzam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: formuła bufora planu dostaw - zapotrzebowanie wyposażenia
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   ODZAM.trig_a('put',$("exec('odzamn_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   ODZAMPT.trig_a('add',$("exec('odzam_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   ODZAMPT.trig_a('put',$("exec('odzam_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   ODZAMPT.trig_b('del',$("exec('odzam_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   ODZAM.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   ODZAMPT.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   ODZAMPT.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   ODZAMPT.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('odzam_init','%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('odzam_display','%plan_dostaw',PD_BUF.REF)
?}


\odzamn_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: trig_a add - zapotrzebowanie wyposażenia
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
{? ODZAM.DATA_W<>bfld('DATA_W')
   | ODZAM.MG<>bfld('MG')
   | ODZAM.STAN<>bfld('STAN')
||
   PD_Z.TRIG_NAG:='odzam';
   ODZAMPT.cntx_psh();
   ODZAMPT.index('LGTR');
   ODZAMPT.prefix(ODZAM.ref());
   _loop:=ODZAMPT.first();
   {!
   |? _loop
   |!
      _loop:=ODZAMPT.put() & ODZAMPT.next()
   !};
   ODZAMPT.cntx_pop();
   PD_Z.TRIG_NAG:=''
?};
~~


\odzam_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: trig_a add - zapotrzebowanie wyposażenia
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
{? ODZAMPT.ODZAM
||
   MG.cntx_psh();
   ODZAM.cntx_psh();
   ODZAMPT.ODZAM();
   {? ODZAM.MG & ODZAM.STAN='T' & ODZAM.DATA_W>=date()
      & ODZAMPT.M & (ODZAMPT.IL+ODZAMPT.IL_D)>0
   ||
      exec('pd_buf_add','plan_dostaw',
         ODZAM.DATA_W,
         time(0,0,0),
         _a,
         ODZAM.MG().ODDZ,
         ODZAM.MG,
         ODZAMPT.M,
         ODZAMPT.DK_C,
         ODZAMPT.IL+ODZAMPT.IL_D,
         -1,
         $ODZAMPT.ref()
         )
   ?};
   ODZAM.cntx_pop();
   MG.cntx_pop()
?};
~~


\odzam_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: trig_a put - zapotrzebowanie wyposażenia
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
{? ODZAMPT.ODZAM
||
   MG.cntx_psh();
   ODZAM.cntx_psh();
   {? PD_Z.TRIG_NAG='' || ODZAMPT.ODZAM() ?};
   {? ODZAM.MG & ODZAM.STAN='T' & ODZAM.DATA_W>=date()
      & ODZAMPT.M & (ODZAMPT.IL+ODZAMPT.IL_D)>0
   ||
      {? ODZAMPT.M<>bfld('M')
      ||
         exec('pd_buf_del','plan_dostaw',_a,$ODZAMPT.ref());
         exec('pd_buf_add','plan_dostaw',
            ODZAM.DATA_W,
            time(0,0,0),
            _a,
            ODZAM.MG().ODDZ,
            ODZAM.MG,
            ODZAMPT.M,
            ODZAMPT.DK_C,
            ODZAMPT.IL+ODZAMPT.IL_D,
            -1,
            $ODZAMPT.ref()
            )

      |? PD_Z.TRIG_NAG='odzam'
         | (ODZAMPT.IL+ODZAMPT.IL_D)<>(bfld('IL')+bfld('IL_D'))
         | ODZAMPT.DK_C<>bfld('DK_C')
      ||
         exec('pd_buf_put','plan_dostaw',
            ODZAM.DATA_W,
            time(0,0,0),
            _a,
            ODZAM.MG().ODDZ,
            ODZAM.MG,
            ODZAMPT.M,
            ODZAMPT.DK_C,
            ODZAMPT.IL+ODZAMPT.IL_D,
            -1,
            $ODZAMPT.ref()
            )
      ?}
   ||
      exec('pd_buf_del','plan_dostaw',_a,$ODZAMPT.ref())
   ?};
   ODZAM.cntx_pop();
   MG.cntx_pop()
||
   exec('pd_buf_del','plan_dostaw',_a,$ODZAMPT.ref())
?};
~~


\odzam_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: trig_a put - zapotrzebowanie wyposażenia
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$ODZAMPT.ref())


\odzam_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: formuła startowa - zapotrzebowanie wyposażenia
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

MG.cntx_psh();
ODZAM.cntx_psh();
ODZAMPT.cntx_psh();
ODZAM.index('SSYM');
ODZAM.prefix('T');
_loop:=ODZAM.first();
{!
|? _loop
|!
   ODZAMPT.index('LGTR');
   ODZAMPT.prefix(ODZAM.ref());
   _loop1:=ODZAMPT.first();
   {!
   |? _loop1
   |!
      {? ODZAM.MG & ODZAM.DATA_W>=date()
         & ODZAMPT.M & (ODZAMPT.IL+ODZAMPT.IL_D)>0
      ||
         exec('pd_buf_add','plan_dostaw',
            ODZAM.DATA_W,
            time(0,0,0),
            _a,
            ODZAM.MG().ODDZ,
            ODZAM.MG,
            ODZAMPT.M,
            ODZAMPT.DK_C,
            ODZAMPT.IL+ODZAMPT.IL_D,
            -1,
            $ODZAMPT.ref()
            )
      ?};
      _loop1:=ODZAMPT.next()
   !};
   _loop:=ODZAM.next()
!};
ODZAMPT.cntx_pop();
ODZAM.cntx_pop();
MG.cntx_pop()


\odzam_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: wyświetla informacje dotyczace zapisu w PD_BUF - zapotrzebowanie wyposażenia
::   WE: _a - $ZK_P.ref()
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

{? _ref<>''
||
   ODZAM.cntx_psh();
   ODZAMPT.cntx_psh();
   ODZAMPT.prefix();
   {? ODZAMPT.seek(_ref) & ODZAMPT.ODZAM
   ||
      _dokl:=ODZAMPT.M().DOKL;
      ODZAMPT.ODZAM();
      ZNADZOR.OSOBA:=ODZAMPT.P().OSOBA;
      ZZAOP.IL_O:=ODZAMPT.IL;
      ZZAOP.IL_W:=ZZAOP.IL_O+ODZAMPT.IL_D;
      _title:='Zapotrzebowanie wyposażenia'@;
      _win_red:=ODZAMPT.mk_edit(_title,,'zap_wyp_disp');
      ODZAMPT.win_etab(_win_red,'Pozycja'@);
      ODZAMPT.win_esep(_win_red,'Pracownik'@);
      ODZAMPT.win_efld(_win_red,ZNADZOR,'OSOBA','NAZWISKO',,70,,,'Nazwisko'@);
      ODZAMPT.win_efld(_win_red,ZNADZOR,'OSOBA','PIERWSZE',,70,,,'Imię'@);
      ODZAMPT.win_esep(_win_red,'Materiał'@);
      ODZAMPT.win_efld(_win_red,,'M','KTM',,70,,,'Indeks'@);
      ODZAMPT.win_efld(_win_red,,'M','N',,70,,,'Nazwa'@);
      ODZAMPT.win_esep(_win_red,'Ilość'@);
      ODZAMPT.win_efld(_win_red,ZZAOP,'IL_O','PIERWSZE',,15,_dokl,,'Ilość'@);
      ODZAMPT.win_efld(_win_red,,'IL_D','PIERWSZE',,15,_dokl,,'Ilość dodatkowa'@);
      ODZAMPT.win_efld(_win_red,ZZAOP,'IL_W','PIERWSZE',,15,_dokl,,'Razem'@);
      ODZAMPT.win_etab(_win_red,'Nagłówek'@);
      ODZAMPT.win_ewin(_win_red,ODZAM,'RED');
      ODZAMPT.win_edit(_win_red);
      ODZAMPT.display()
   ?};
   ODZAMPT.cntx_pop();
   ODZAM.cntx_pop()
?}


\odzam_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: formuly planu dostaw - zapotrzebowanie wyposażenia
::   WE: _a - PD_D.KOD
::       _b - _params
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Zapotrzebowanie wyposażenia';
_args.LEG_KOD:='PDA#01#02#ODZAM';
_args.T:="exec('odzam_t','%plan_dostaw',_a,_b)";
_args.K:="exec('odzam_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('odzam_i','%plan_dostaw',_a,_b)";
_args.S:="exec('odzam_s','%plan_dostaw',_a,_b)";
_args.V:="exec('odzam_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\odzam_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: zapotrzebowanie wyposażenia - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\odzam_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS:  zapotrzebowanie wyposażenia- formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\odzam_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: zapotrzebowanie wyposażenia - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\odzam_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: zapotrzebowanie wyposażenia - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh();
ODZAM.cntx_psh();
ODZAMPT.cntx_psh();
P.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         ODZAMPT.prefix();
         {? ODZAMPT.seek(PD_BUF.REF)
         ||
            _opis:=
               {? ODZAMPT.P
               ||
                  P.use(ref_name(ODZAMPT.P));
                  ODZAMPT.M().KTM+' - '+ODZAMPT.P().OSOBA().NAZWISKO
               ||
                  ODZAMPT.M().KTM
               ?}
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='R';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('odzam_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILP:=0;
         _params.ILR:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('odzam_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
P.cntx_pop();
ODZAMPT.cntx_pop();
ODZAM.cntx_pop();
PD_BUF.cntx_pop()


\odzam_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: zapotrzebowanie wyposażenia - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
exec('odzam_display','%plan_dostaw',cur_tab(1,1).REF)


\zkn_pierwotny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: Zwraca symbol pierwotnego zamówienia, z którym pośrednio przez limity zleceń powiązana jest
::       pozycja zamówienia wewnętrznego
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_zk_p:=_a;
_wyn:='';
ZK_P.cntx_psh(); ZLZAM.cntx_psh();
ZK_P.use(ref_name(_zk_p));
ZK_P.prefix();
{? ZK_P.seek(_zk_p)
|| {? ZK_P.ZLIM
   || _zlec:=exec('FindAndGet','#table',ZLIM,ZK_P.ZLIM,,"ZLEC",null());
      ZLZAM.index('SRC');
      ZLZAM.prefix(_zlec,'Z');
      {? ZLZAM.first()
      || {!
         |? {? ZLZAM.ZAMPOZ<>''
            || _wyn+=exec('zkn_pierwotny','%plan_dostaw',exec('FindAndGet','#table',ZK_P,ZLZAM.ZAMPOZ,,,null()))+'+'
            ?};
            ZLZAM.next()
         !}
      ?}
   || _wyn:=exec('FindAndGet','#table',ZK_N,ZK_P.N,,"SYM",'')+'+'
   ?}
?};
ZK_P.cntx_pop(); ZLZAM.cntx_pop();
_wyn-1


\stat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.02]
:: OPIS: uruchamia formuly pozycji planu - formuła na:
::       - PD_P.STAT_MG - Stan
::       - PD_P.STAT_DA - Brak - data
::       - PD_P.STAT_IL - Brak - ilość
::   WE: _a - argument - wynik formuly exec('pda_a','pda')
::----------------------------------------------------------------------------------------------------------------------
_paramsa:=_a;

_paramsa.TYP:='C';
_paramsa.PAR:='STAT';

exec('core_d','plan_dostaw',_paramsa)


\twb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: formuła bufora planu dostaw - termin ważności magazyny bez wymiarów
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   SC.trig_a('add',$("exec('twb_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   SC.trig_a('put',$("exec('twb_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   SC.trig_b('del',$("exec('twb_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   SC.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   SC.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   SC.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('twb_init','%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('twb_display','%plan_dostaw',PD_BUF.REF)
?}


\twb_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: trig_a add - termin ważności magazyn bez wymiarów
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
{? SC.MAG().SL='N' & SC.M().SETW='P' & SC.S>0 & SC.TW<>date(0,0,0)
|| exec('pd_buf_add','plan_dostaw',SC.TW,time(0,0,0),_a,ST.ODDZ,SC.MAG,SC.M,SC.DK_C,SC.S,-1,$SC.ref())
?};
~~


\twb_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: trig_a put - termin ważności magazyn bez wymiarów
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
{? SC.MAG().SL='N' & SC.M().SETW='P' & SC.S>0 & SC.TW<>date(0,0,0)
|| {? SC.S<>bfld('S') | SC.TW<>bfld('TW')
   || exec('pd_buf_put','plan_dostaw',SC.TW,time(0,0,0),_a,ST.ODDZ,SC.MAG,SC.M,SC.DK_C,SC.S,-1,$SC.ref())
   ?}
|| exec('pd_buf_del','plan_dostaw',_a,$SC.ref())
?};
~~


\twb_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: trig_a put - termin ważności magazyn bez wymiarów
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$SC.ref())


\twb_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: formuła startowa - termin ważności magazyn bez wymiarów
::   WE: _a - PD_BUF_D.KOD
::  OLD: \sc_init/pd_buf.fml
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

_Tab:=SC.names();

SC.cntx_psh(); ODDZ.cntx_psh();
_loop:=_Tab.first();
{!
|? _loop
|!
   SC.use(_Tab.NAME);
   ODDZ.index('KOD2'); ODDZ.prefix((_Tab.NAME-2)+1);
   {? ODDZ.first()
   ||
      SC.prefix();
      _loop1:=SC.first();
      {!
      |? _loop1
      |!
         {? SC.MAG().SL='N' & SC.M().SETW='P' & SC.S>0 & SC.TW<>date(0,0,0)
         || exec('pd_buf_put','plan_dostaw',SC.TW,time(0,0,0),_a,ODDZ.KOD,SC.MAG,SC.M,SC.DK_C,SC.S,-1,$SC.ref())
         ?};
         _loop1:=SC.next()
      !}
   ?};
   _loop:=_Tab.next()
!};
SC.cntx_pop(); ODDZ.cntx_pop()


\twb_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: wyświetla informacje dotyczące zapisu w PD_BUF - termin ważności magazyn bez wymiarów
::   WE: _a - $SC.ref()
::----------------------------------------------------------------------------------------------------------------------
exec('sc_display','%plan_dostaw',_a)


\twb_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: formuly planu dostaw - termin ważności magazyny bez wymiarów
::   WE: _a - PD_D.KOD
::       _b - _params
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Termin ważności';
_args.LEG_KOD:='PDA#01#02#TW';
_args.T:="exec('twb_t','%plan_dostaw',_a,_b)";
_args.K:="exec('twb_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('twb_i','%plan_dostaw',_a,_b)";
_args.S:="exec('twb_s','%plan_dostaw',_a,_b)";
_args.V:="exec('twb_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\twb_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [12.30]
:: OPIS: termin ważności magazyny bez wymiarów - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \tw_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\twb_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: termin ważności magazyny bez wymiarów - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\twb_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: termin ważności magazyny bez wymiarów - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\twb_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: termin ważności magazyny bez wymiarów - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); SC.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         SC.use(8+PD_BUF.REF);
         SC.prefix();
         {? SC.seek(PD_BUF.REF)
         || _opis:='Do: '+$SC.TW+', magazyn: '+SC.MAG().SYM
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='R';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('twb_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILR:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('twb_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop(); SC.cntx_pop()


\twb_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: termin ważności magazyny bez wymiarów - formula na wyświetl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
exec('twb_display','%plan_dostaw',cur_tab(1,1).REF)


\pdpow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: formuła bufora planu dostaw - dane powiązane
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   PD_POW.trig_a('add',$("exec('pdpow_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   PD_POW.trig_a('put',$("exec('pdpow_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   PD_POW.trig_b('del',$("exec('pdpow_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   PD_POW.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   PD_POW.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   PD_POW.trig_b('del',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('pdpow_init','%plan_dostaw',_a)
:: wyświetlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('pdpow_display','%plan_dostaw',PD_BUF.REF)
?}


\pdpow_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: trig_a add - dane powiązane
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
{? PD_POW.ILP | PD_POW.ILR
||
   PD_P.cntx_psh();
   _oddz:=''; '???';
   _mg:=null(); '???';
   _mat:=PD_POW.PD_P().M;
   _dk_c:=null(); '???';
   {? PD_POW.ILP
   ||
      exec('pd_buf_add','plan_dostaw',PD_POW.D,PD_POW.T,_a,_oddz,_mg,_mat,_dk_c,PD_POW.ILP,1,$PD_POW.ref())
   ||
      exec('pd_buf_add','plan_dostaw',PD_POW.D,PD_POW.T,_a,_oddz,_mg,_mat,_dk_c,PD_POW.ILR,-1,$PD_POW.ref())
   ?};
   PD_P.cntx_pop()
?};
~~


\pdpow_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: trig_a put - dane powiązane
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
{? (PD_POW.ILP | PD_POW.ILR)
      &
   (PD_POW.ILP<>bfld('ILP') | PD_POW.ILR<>bfld('ILR'))
||
   PD_P.cntx_psh();
   _oddz:=''; '???';
   _mg:=null(); '???';
   _mat:=PD_POW.PD_P().M;
   _dk_c:=null(); '???';
   {? PD_POW.ILP<>bfld('ILP')
   ||
      exec('pd_buf_put','plan_dostaw',PD_POW.D,PD_POW.T,_a,_oddz,_mg,_mat,_dk_c,PD_POW.ILP,1,$PD_POW.ref())
   ||
      exec('pd_buf_add','plan_dostaw',PD_POW.D,PD_POW.T,_a,_oddz,_mg,_mat,_dk_c,PD_POW.ILR,-1,$PD_POW.ref())
   ?};
   PD_P.cntx_pop()
||
   exec('pd_buf_del','plan_dostaw',_a,$PD_POW.ref())
?};
~~


\pdpow_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: trig_a put - dane powiązane
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$PD_POW.ref())


\pdpow_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: formula startowa - dane powiązane
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

PD_P.cntx_psh();
PD_POW.cntx_psh();
PD_POW.prefix();
_loop1:=PD_POW.first();
{!
|? _loop1
|!
   _oddz:=''; '???';
   _mg:=null(); '???';
   _mat:=PD_POW.PD_P().M;
   _dk_c:=null(); '???';
   {? PD_POW.ILP
   ||
      exec('pd_buf_put','plan_dostaw',PD_POW.D,PD_POW.T,_a,_oddz,_mg,_mat,_dk_c,PD_POW.ILP,1,$PD_POW.ref())

   |? PD_POW.ILR
   ||
      exec('pd_buf_add','plan_dostaw',PD_POW.D,PD_POW.T,_a,_oddz,_mg,_mat,_dk_c,PD_POW.ILR,-1,$PD_POW.ref())
   ?};
   _loop1:=PD_POW.next()
!};
PD_POW.cntx_pop();
PD_P.cntx_pop()


\pdpow_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: wyswietla informacje dotyczace zapisu w PD_BUF - dane powiązane
::   WE: _a - $PD_POW.ref()
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

{? _ref<>''
||
   PD_K.cntx_psh();
   PD_K.use(8+_ref);
   PD_K.prefix();
   {? PD_K.seek(_ref)
   ||
      _atrmjs:=ATR.MJS;
      ATR.MJS:='PD_K';
      {? PD_K.DK_C<>null() | PD_K.RDKC<>''
      || ATR.M_ATR:=PD_K.DK_C().M_ATR;
         exec('czytadkc','mat_atr',PD_K.DK_C,PD_K.RDKC)
      || M_ATR.blank(0);
         ATR.MJS:='M_ATR'
      ?};
      {? exec('tte_lic','tte')='T'
      || PD_K.win_edit('RED_PROD')
      || PD_K.win_edit('RED')
      ?};
      PD_K.display();
      ATR.MJS:=_atrmjs
   ?};
   PD_K.cntx_pop()
?}


\pdpow_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: formuly planu dostaw - dane powiązane
::   WE: _a - PD_D.KOD
::       _b - _params
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Dane powizane';
_args.LEG_KOD:='PDA#01#02#PDPOW';
_args.T:="exec('pdpow_t','%plan_dostaw',_a,_b)";
_args.K:="exec('pdpow_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('pdpow_i','%plan_dostaw',_a,_b)";
_args.S:="exec('pdpow_s','%plan_dostaw',_a,_b)";
_args.V:="exec('pdpow_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\pdpow_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: dane powiązane - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuły planu dostaw
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\pdpow_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: dane powiązane - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\pdpow_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: dane powiązane - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\pdpow_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: dane powiązane - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_POW.cntx_psh();
PD_BUF.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();
{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         PD_POW.prefix();
         {? PD_POW.seek(PD_BUF.REF)
         ||
            {? PD_POW.KOD='UZU_BRAK' || _opis:='Uzupełnienie braków' ?}
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:={? PD_BUF.WSP=1 || 'P' || 'R' ?};
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('pdpow_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILP:=0;
         _params.ILR:=0;
         {? PD_BUF.WSP=1
         || _params.ILP:=PD_BUF.IL
         || _params.ILR:=PD_BUF.IL
         ?};
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('pdpow_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop();
PD_POW.cntx_pop()


\pdpow_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [20.42]
:: OPIS: dane powiązane - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
exec('pdk_display','%plan_dostaw',cur_tab(1,1).REF)


\sc_ndst_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: formuly planu dostaw - stany dostaw - niedostępne
::   WE: _a - PD_D.KOD
::       _b - _params
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Stan dostawy (niedostępny)';
_args.LEG_KOD:='PDA#01#02#SC';
_args.T:="exec('sc_ndst_t','%plan_dostaw',_a,_b)";
_args.K:="exec('sc_ndst_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('sc_ndst_i','%plan_dostaw',_a,_b)";
_args.S:="exec('sc_ndst_s','%plan_dostaw',_a,_b)";
_args.V:="exec('sc_ndst_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\sc_ndst_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: stany dostaw - niedostępne - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\sc_ndst_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: stany dostaw - niedostępne - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\sc_ndst_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: stany dostaw - niedostępne - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\sc_ndst_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: stany dostaw - niedostępne - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \sc_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;
_pdd_bis:=2+_b.A;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh(); ND.cntx_psh(); DK.cntx_psh(); SC.cntx_psh(); KH.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_bis,_paramsb.M);
_loop:=PD_BUF.first();
_par:=exec('get','#params',100703,2);
_deftab:=0;
{? _par<>''
|| _deftab:=1;
   _stats:=tab_tmp(1,'ID','STRING[31]','');
   _tabs:=%8;
   STATS.cntx_psh();
   STATS.index('AKN');
   STATS.prefix('T');
   {? STATS.first()
   || {!
      |? {? (_par+_tabs)*(STATS.N+_tabs)
         || _stats.blank();
            _stats.ID:=STATS.IDADD;
            _stats.add(1)
         ?};
         STATS.next()
      !}
   ?};
   STATS.cntx_pop();
   {? ~_stats.size() || _loop:=0 ?}
|| _loop:=0
?};

{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:=''; _oki:=0;
         SC.use(8+PD_BUF.REF);
         SC.prefix();
         {? SC.seek(PD_BUF.REF)
          & (SC.MAG().TYP*'DOST')>0
          & (_stats.clear(); _stats.prefix(SC.STATS().IDADD); _stats.first())
         ||
            _status:='Status: %1 '@[SC.STATS().N];
            DK.use(SC.NDK);
            DK.index('DOST3');
            DK.prefix(SC.MAG,SC.M,SC.RDK,SC.NDK,'T');
            {? DK.first()
            || ND.use(ref_name(DK.N));
               _kh:={? DK.N().KH || ND.KH().SKR+' ' || '' ?};
               _opis:=_kh+ND.TYP().T+' - '+$ND.NR+' poz.'+$DK.P
            ?};
            _opis:='%1 [%2]'[_status,_opis];
            _oki:=1
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='P';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('sc_ndst_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILP:=-PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('sc_ndst_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         {? _oki || exec('pda_add','plan_dostaw',_params) ?}
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
{? _deftab || obj_del(_stats) ?};
PD_BUF.cntx_pop(); ND.cntx_pop(); DK.cntx_pop(); SC.cntx_pop(); KH.cntx_pop()


\sc_ndst_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: stany dostaw - niedostępne - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::----------------------------------------------------------------------------------------------------------------------
exec('sc_display','%plan_dostaw',cur_tab(1,1).REF)


\psp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: formula bufora planu dostaw - plany sprzedaży
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
:: triggery wł.
{? PD_Z.PAR='T'
||
   PSP.trig_a('add',$("exec('psp_aadd','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   PSP.trig_a('put',$("exec('psp_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   PSP.trig_b('del',$("exec('psp_bdel','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a));
   PS.trig_a('put',$("exec('ps_aput','%plan_dostaw','"+_a+"')"),-(PD_Z.TRIGNAME+_a))
:: triggery wył.
|? PD_Z.PAR='N'
||
   PSP.trig_a('add',"",-(PD_Z.TRIGNAME+_a));
   PSP.trig_a('put',"",-(PD_Z.TRIGNAME+_a));
   PSP.trig_b('del',"",-(PD_Z.TRIGNAME+_a));
   PS.trig_a('put',"",-(PD_Z.TRIGNAME+_a))
:: czyszczenie bufora
|? PD_Z.PAR='E'
||
   exec('pd_buf_erase','plan_dostaw',_a)
:: inicjacja danych
|? PD_Z.PAR='S'
||
   exec('psp_init','%plan_dostaw',_a)
:: wyswietlenie pozycji bufora
|? PD_Z.PAR='D'
||
   exec('psp_display','%plan_dostaw',PD_BUF.REF)
?}


\psp_aadd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: trig_a add - plan sprzedaży
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
{? PSP.PS().PD='T' & PSP.M<>null()
||
   _pd_buf_d:={? PSP.PSOKR<>null()
              || PSP.PSOKR().DO
              || date(PSP.PS().R,12,31)
              ?};
   _pd_buf_il:=PSP.IL-PSP.ILW;
   {? _pd_buf_il<0 || _pd_buf_il:=0 ?};

   exec('pd_buf_add','plan_dostaw',_pd_buf_d,time(0,0,0),_a,ST.ODDZ,null(),PSP.M,null(),_pd_buf_il,1,$PSP.ref())
?};
~~


\psp_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: trig_a put - plan sprzedaży
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
{? PSP.PS().PD='T' & PSP.M<>null()
||
   _pd_buf_d:={? PSP.PSOKR<>null()
              || PSP.PSOKR().DO
              || date(PSP.PS().R,12,31)
              ?};
   _pd_buf_il:=PSP.IL-PSP.ILW;
   {? _pd_buf_il<0 || _pd_buf_il:=0 ?};

   exec('pd_buf_put','plan_dostaw',_pd_buf_d,time(0,0,0),_a,ST.ODDZ,null(),PSP.M,null(),_pd_buf_il,1,$PSP.ref())
?};
~~


\psp_bdel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: trig_a put - plan sprzedaży
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_del','plan_dostaw',_a,$PSP.ref())


\ps_aput
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: trig_a put - plan sprzedaży
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
PSP.cntx_psh();
exec('psp_open','plsprz');
PSP.index('PS');
PSP.prefix(PS.ref());
{? PSP.first()
||
   {!|?
      {? PS.PD='T' & PSP.M<>null()
      ||
         _pd_buf_d:={? PSP.PSOKR<>null()
                    || PSP.PSOKR().DO
                    || date(PSP.PS().R,12,31)
                    ?};
         _pd_buf_il:=PSP.IL-PSP.ILW;
         {? _pd_buf_il<0 || _pd_buf_il:=0 ?};

         PD_BUF.cntx_psh();
         PD_BUF.index('REF');
         PD_BUF.prefix(_a,$PSP.ref());
         _first:=PD_BUF.first();
         PD_BUF.cntx_pop();
         {? _first
         || exec('pd_buf_put','plan_dostaw',_pd_buf_d,time(0,0,0),_a,ST.ODDZ,null(),PSP.M,null(),_pd_buf_il,1,$PSP.ref())
         || exec('pd_buf_add','plan_dostaw',_pd_buf_d,time(0,0,0),_a,ST.ODDZ,null(),PSP.M,null(),_pd_buf_il,1,$PSP.ref())
         ?}
      |? PS.PD='N' & PSP.M<>null()
      || exec('pd_buf_del','plan_dostaw',_a,$PSP.ref())
      ?};
      PSP.next()
   !}
?};
PSP.cntx_pop();
~~


\psp_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: formuła startowa - plan sprzedaży
::   WE: _a - PD_BUF_D.KOD
::----------------------------------------------------------------------------------------------------------------------
exec('pd_buf_erase','plan_dostaw',_a);

_Tab:=PSP.names();

PSP.cntx_psh(); PS.cntx_psh(); PSOKR.cntx_psh(); ODDZ.cntx_psh();
_loop:=_Tab.first();
{!
|? _loop
|!
   PSP.use(_Tab.NAME);
   ODDZ.index('KOD2'); ODDZ.prefix((_Tab.NAME-2)+1);
   {? ODDZ.first()
   ||
      PSP.prefix();
      _loop1:=PSP.first();
      {? _loop1 || PS.use(8+$PSP.PS) ?};
      {!
      |? _loop1
      |!
         {? PSP.PS().PD='T' & PSP.M<>null()
         ||
            _pd_buf_d:={? PSP.PSOKR<>null()
                       || PSP.PSOKR().DO
                       || date(PSP.PS().R,12,31)
                       ?};
            _pd_buf_il:=PSP.IL-PSP.ILW;
            {? _pd_buf_il<0 || _pd_buf_il:=0 ?};

            exec('pd_buf_add','plan_dostaw',_pd_buf_d,time(0,0,0),_a,ODDZ.KOD,null(),PSP.M,null(),_pd_buf_il,1,$PSP.ref())
         ?};
         _loop1:=PSP.next()
      !}
   ?};
   _loop:=_Tab.next()
!};
PSP.cntx_pop();  PS.cntx_pop(); PSOKR.cntx_pop(); ODDZ.cntx_pop()


\psp_display
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: wyświetla informacje dotyczące zapisu w PD_BUF - plany sprzedaży
::   WE: _a - $PSP.ref()
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;

{? _ref<>''
||
   PSP.cntx_psh(); PS.cntx_psh();
   PSP.use(8+_ref);
   PSP.prefix();
   {? PSP.seek(_ref)
   ||
      PS.use(8+$PSP.PS);
      PSP.win_edit('RED');
      PSP.display()
   ?};
   PSP.cntx_pop(); PS.cntx_pop()
?}


\psp_pl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: formuly planu dostaw - plany sprzedaży
::   WE: _a - PD_D.KOD
::       _b - _params
::  OLD: \sc/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_argsorg:=obj_new('A','B');
_argsorg.A:=_a;
_argsorg.B:=_b;

_args:=exec('core_a','plan_dostaw');

_args.TXT:='Plan sprzedaży';
_args.LEG_KOD:='PDA#01#02#PSP';
_args.T:="exec('psp_t','%plan_dostaw',_a,_b)";
_args.K:="exec('psp_k','%plan_dostaw',_a,_b)";
::_args.I:="exec('psp_i','%plan_dostaw',_a,_b)";
_args.S:="exec('psp_s','%plan_dostaw',_a,_b)";
_args.V:="exec('psp_v','%plan_dostaw',_a,_b)";

exec('core','plan_dostaw',_args,_argsorg)


\psp_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: plany sprzedaży - formula tekstu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \sc_t/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_a.TXT


\psp_k
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: plany sprzedaży - formula koloru
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \sc_k/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_kolor','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'~BRAK')


\psp_i
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: plany sprzedaży - formula ikony
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \sc_i/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('autil_ikona','color',_b.B.DEF,_a.LEG_KOD,_a.TXT,'xwin16.png',110)


\psp_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: plany sprzedaży - formula stanu
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \sc_s/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
_pdd_kod:=_b.A;
_paramsb:=_b.B;

_params:=exec('pda_a1','plan_dostaw');
_params1:=exec('pda_a','plan_dostaw');
PD_BUF.cntx_psh();PSP.cntx_psh();PS.cntx_psh();
PD_BUF.index('KOD_MDT'); PD_BUF.prefix(_pdd_kod,_paramsb.M);
_loop:=PD_BUF.first();

{!
|? _loop
|!
   {? exec('autil_dwo','plan_dostaw',PD_BUF.D,PD_BUF.T,_paramsb.DK,_paramsb.TK) & _paramsb.skip_chk(PD_BUF.REF)
   ||
      {? exec('pd_buf_zastosuj','plan_dostaw')
      ||
         _opis:='';
         PSP.use(8+PD_BUF.REF);
         PSP.prefix();
         {? PSP.seek(PD_BUF.REF)
         ||
            PS.use(8+$PSP.PS);
            _opis:='Plan sprzedaży - '+PSP.PS().S
         ?};
         _params.MG:=PD_BUF.MG().SYM;
         _params.ODDZ:=PD_BUF.ODDZ;
         _params.D:=PD_BUF.D;
         _params.T:=PD_BUF.T;
         _params.PRZY_ROZ:='R';
         _params.PD_D_KOD:=_pdd_kod;
         _params1.PAR:='T';
         _params.TYP:=exec('psp_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.O:=_opis;
         _params.ILR:=PD_BUF.IL;
         _params.DK_C:=$PD_BUF.DK_C;
         _params1.PAR:='I'; _params1.DEF:=0;
         _params.ICO:=exec('psp_pl','%plan_dostaw',_pdd_kod,_params1);
         _params.REF:=PD_BUF.REF;
         exec('pda_add','plan_dostaw',_params)
      ?};
      _loop:=PD_BUF.next()
   ||
      _loop:=0
   ?}
!};
PD_BUF.cntx_pop();PSP.cntx_pop();PS.cntx_pop()


\psp_v
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [12.30]
:: OPIS: plany sprzedaży - formula na wyswietl
::   WE: _a - exec('core_a','plan_dostaw')
::       _b - orginalne parametry formuly planu dostaw
::  OLD: \sc_v/pd_df.fml
::----------------------------------------------------------------------------------------------------------------------
exec('psp_display','%plan_dostaw',cur_tab(1,1).REF)

:Sign Version 2.0 jowisz:1045 2024/01/16 11:07:40 bb50c10e3ee19fc1f1b57d50ec8bfb4ac352d79dad39fdc8650562166d9733e2a7249585da8df2fb87f7c24e075a4f21174c43bb76c6195c918185e3fb95f383430f7e63a1c69b438a6f5c8ab3f69f1b89227f21ab351ebbfca7d7bcd271b53d0a6e67186898a1560d960d00739260c499b2029c6209e1324b3898d72ec1107e
