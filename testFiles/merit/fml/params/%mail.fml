:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: %mail.fml
:: Utworzony: 07.03.2019
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły obsługi zdarzeń typu komunikat wychodzący (wysyłanie e-maili)
::======================================================================================================================


\role_email
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Formuła zwraca listę adresów e-mail użytkowników przypisanych do roli, na której leży zdarzenie
::       Sposób użycia - wpisanie do pola 'Do': $params_exec('role_email','%mail')
::       UWAGA: jeżeli żaden przetwarzany użytkownik nie ma wypełnionego pola USERS.EMAIL, to formuła zwróci pustą listę
::   WY: lista adresów e-mail oddzielonych przecinkami
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_b_prel:=_mp.b_prel;

_result:='';

B_ROLE.cntx_psh(); B_USRROL.cntx_psh(); USERS.cntx_psh();
B_ROLE.prefix();
{? B_ROLE.seek(exec('FindAndGet','#table',B_PREL,_b_prel,,"B_ROLE",null()))
|| B_USRROL.index('UNIK');
   B_USRROL.prefix(REF.FIRMA,B_ROLE.ref());
   {? B_USRROL.first()
   || {!
      |? _email:=B_USRROL.USERS().EMAIL;
         {? _email<>''
         || _result+=_email+','
         ?};
         B_USRROL.next()
      !}
   ?}
?};
B_ROLE.cntx_pop(); B_USRROL.cntx_pop(); USERS.cntx_pop();
_result


\rem_zgl_to
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Formuła zwraca listę adresów, które mają dostawać e-maile o stanie zgłoszenia remontowego
::       Sposób użycia - wpisanie do pola 'Do': $exec('rem_zgl_to','%mail',_a.p01)
::       albo: $exec('rem_zgl_to','%mail',params_get().in.p01)
::       UWAGA: jeżeli przetwarzana osoba albo kontrahent nie ma zdefiniowanego adresu e-mail,
::              to formuła zwróci pustą listę
::   WE: _a - REM_ZGL.ref()
::   WY: lista adresów e-mail oddzielonych przecinkami
::----------------------------------------------------------------------------------------------------------------------
_rem_zgl:=_a;

_result:='';
REM_ZGL.cntx_psh();
REM_ZGL.prefix();
{? REM_ZGL.seek(_rem_zgl)
||
:: Osoba zgłaszająca
   _email:=exec('email','osoba',REM_ZGL.OS_WA);
   {? _email<>'' || _result+=_email+',' ?};
:: Kontrahent
   _email:=exec('FindAndGet','#table',KH,REM_ZGL.KH,,"EM",'');
   {? _email<>'' || _result+=_email+',' ?};
:: Użytkownik zasobu - na różne daty
   _email:=exec('rem_zasu_email','zasoby',REM_ZGL.REM_ZAS,REM_ZGL.DT_WA);
   {? _email<>'' & _result*_email=0 || _result+=_email+',' ?};
   _email:=exec('rem_zasu_email','zasoby',REM_ZGL.REM_ZAS,REM_ZGL.DT_WPR);
   {? _email<>'' & _result*_email=0 || _result+=_email+',' ?};
   _email:=exec('rem_zasu_email','zasoby',REM_ZGL.REM_ZAS,REM_ZGL.DT_ZAM);
   {? _email<>'' & _result*_email=0 || _result+=_email+',' ?};
   ~~
?};
REM_ZGL.cntx_pop();
_result


\rem_zgl_cc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Formuła zwraca listę adresów, które mają dostawać e-mail 'do wiadomości' o stanie zgłoszenia remontowego
::       Sposób użycia - wpisanie do pola 'DW': $exec('rem_zgl_cc','%mail',_a.p01)
::       albo: $exec('rem_zgl_cc','%mail',params_get().in.p01)
::       UWAGA: jeżeli żaden przetwarzany użytkownik nie ma wypełnionego pola USERS.EMAIL, to formuła zwróci pustą listę
::   WE: _a - REM_ZGL.ref()
::   WY: lista adresów e-mail oddzielonych przecinkami
::----------------------------------------------------------------------------------------------------------------------
_rem_zgl:=_a;

_result:='';
REM_ZGL.cntx_psh();
REM_ZGL.prefix();
{? REM_ZGL.seek(_rem_zgl)
||
:: Opiekunowie zasobów
   {? REM_ZGL.REM_ZAS<>null()
   || REM_ZGL.REM_ZAS();
      REM_KATO.index('REM_KAT');
      REM_KATO.prefix(REM_ZAS.KAT);
      {? REM_KATO.first()
      || {!
         |? {? REM_KATO.USERS<>null()
            || REM_KATO.USERS();
               _email:=USERS.EMAIL;
               {? _email<>''
               || {? _result*_email=0 || _result+=_email+',' ?}
               || {? USERS.OSOBA<>null()
                  || _email:=exec('email','osoba',USERS.OSOBA);
                     {? _email<>'' & _result*_email=0 || _result+=_email+',' ?}
                  ?}
               ?}
            ?};
            REM_KATO.next()
         !}
      ?}
   ?}
?};
REM_ZGL.cntx_pop();
_result


\rem_zgl_sub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Formuła zwraca temat wiadomości o stanie zgłoszenia remontowego
::       Sposób użycia - wpisanie do pola 'Temat': $exec('rem_zgl_sub','%mail',_a.p01)
::       albo: $exec('rem_zgl_sub','%mail',params_get().in.p01)
::   WE: _a - REM_ZGL.ref()
::----------------------------------------------------------------------------------------------------------------------
_rem_zgl:=_a;

_result:='';
REM_ZGL.cntx_psh();
REM_ZGL.prefix();
{? REM_ZGL.seek(_rem_zgl)
|| {? REM_ZGL.STAT_REJ=exec('status_new','remonty_zgloszenia')
   || _result:='Wprowadzono zgłoszenie: %1'[REM_ZGL.SYM]
   |? REM_ZGL.STAT_REJ=exec('status_ended','remonty_zgloszenia')
   || _result:='Zakończono rejestrację zgłoszenie: %1'[REM_ZGL.SYM]
   |? REM_ZGL.STAT_REJ=exec('status_verified','remonty_zgloszenia')
   || _result:='Zweryfikowano zgłoszenie: %1'[REM_ZGL.SYM]
   |? REM_ZGL.STAT_REJ=exec('status_closed','remonty_zgloszenia')
   || _result:='Zamknięto zgłoszenie: %1'[REM_ZGL.SYM]
   ?}
?};
REM_ZGL.cntx_pop();
_result


\rem_zgl_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Formuła zwraca treść wiadomości o stanie zgłoszenia remontowego (do części tekstowej e-maila)
::       Sposób użycia - wpisanie do pola 'Treść': $exec('rem_zgl_txt','%mail',_a.p01)
::       albo: $exec('rem_zgl_txt','%mail',params_get().in.p01)
::   WE: _a - REM_ZGL.ref()
::----------------------------------------------------------------------------------------------------------------------
_rem_zgl:=_a;

_result:='';
REM_ZGL.cntx_psh();
REM_ZGL.prefix();
{? REM_ZGL.seek(_rem_zgl)
|| _result:=
      'Zgłoszenie: %1\n'
      'Tytuł: %2\n'
      '%3\n\n'
      'Wynik weryfikacji: %4\n'
      '%5'
      [  REM_ZGL.SYM,
         REM_ZGL.TYTUL,
         REM_ZGL.memo_txt(,,'OPIS'),
         {? REM_ZGL.WERYFIK='T' || 'Potwierdzenie' || 'Odrzucenie' ?},
         REM_ZGL.memo_txt(,,'WOPIS')
      ]
?};
REM_ZGL.cntx_pop();
_result


\rem_zgl_html
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Formuła zwraca treść wiadomości o stanie zgłoszenia remontowego (do części HTML e-maila)
::       Sposób użycia - wpisanie do pola 'Treść html': $exec('rem_zgl_html','%mail',_a.p01)
::       albo: $exec('rem_zgl_html','%mail',params_get().in.p01)
::   WE: _a - REM_ZGL.ref()
::----------------------------------------------------------------------------------------------------------------------
_rem_zgl:=_a;

_result:='';
REM_ZGL.cntx_psh();
REM_ZGL.prefix();
{? REM_ZGL.seek(_rem_zgl)
|| _result:=
      '<h2>Zgłoszenie: %1</h2>'
      '<h4>Tytuł: %2</h4>'
      '<p>%3</p>'
      '<h4>Wynik weryfikacji: %4</h4>'
      '<p>%5</p>'
      [  REM_ZGL.SYM,
         REM_ZGL.TYTUL,
         gsub(REM_ZGL.memo_txt(,,'OPIS'),'\n','<br>'),
         {? REM_ZGL.WERYFIK='T' || 'Potwierdzenie' || 'Odrzucenie' ?},
         gsub(REM_ZGL.memo_txt(,,'WOPIS'),'\n','<br>')
      ]
?};
REM_ZGL.cntx_pop();
_result


\rem_gwar_to
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.42]
:: OPIS: Formuła zwraca listę adresów, które mają dostawać e-maile o upłynięciu gwarancji
::       Sposób użycia - wpisanie do pola 'Do': $exec('rem_gwar_to','%mail',_a.p01)
::       albo: $exec('rem_gwar_to','%mail',params_get().in.p01)
::       UWAGA: jeżeli przetwarzana osoba albo użytkownik nie ma zdefiniowanego adresu e-mail,
::              to formuła zwróci pustą listę
::   WE: _a - REM_GWAR.ref()
::   WY: STRING - lista adresów e-mail oddzielonych przecinkami
::----------------------------------------------------------------------------------------------------------------------
_rem_gwar:=_a;

_result:='';
REM_GWAR.cntx_psh();
REM_GWAR.prefix();
{? REM_GWAR.seek(_rem_gwar)
||
:: Użytkownik zasobu - na bieżącą datę
   _email:=exec('rem_zasu_email','zasoby',REM_GWAR.REM_ZAS,date());
   {? _email<>'' & _result*_email=0 || _result+=_email+',' ?};
   ~~
?};
REM_GWAR.cntx_pop();
_result


\rem_gwar_cc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.42]
:: OPIS: Formuła zwraca listę adresów, które mają dostawać e-maile o upłynięciu gwarancji
::       Sposób użycia - wpisanie do pola 'Do': $exec('rem_gwar_to','%mail',_a.p01)
::       albo: $exec('rem_gwar_to','%mail',params_get().in.p01)
::       UWAGA: jeżeli przetwarzana osoba albo użytkownik nie ma zdefiniowanego adresu e-mail,
::              to formuła zwróci pustą listę
::   WE: _a - REM_GWAR.ref()
::   WY: STRING - lista adresów e-mail oddzielonych przecinkami
::----------------------------------------------------------------------------------------------------------------------
_rem_gwar:=_a;

_result:='';
REM_GWAR.cntx_psh();
REM_GWAR.prefix();
{? REM_GWAR.seek(_rem_gwar)
||
:: Opiekunowie zasobów
   {? REM_GWAR.REM_ZAS<>null()
   || REM_GWAR.REM_ZAS();
      REM_KATO.index('REM_KAT');
      REM_KATO.prefix(REM_ZAS.KAT);
      {? REM_KATO.first()
      || {!
         |? {? REM_KATO.USERS<>null()
            || REM_KATO.USERS();
               _email:=USERS.EMAIL;
               {? _email<>''
               || {? _result*_email=0 || _result+=_email+',' ?}
               || {? USERS.OSOBA<>null()
                  || _email:=exec('email','osoba',USERS.OSOBA);
                     {? _email<>'' & _result*_email=0 || _result+=_email+',' ?}
                  ?}
               ?}
            ?};
            REM_KATO.next()
         !}
      ?}
   ?};
   ~~
?};
REM_GWAR.cntx_pop();
_result


\rem_gwar_sub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.42]
:: OPIS: Formuła zwraca temat wiadomości o upłynięciu gwarancji
::       Sposób użycia - wpisanie do pola 'Do': $exec('rem_gwar_sub','%mail',_a.p01)
::       albo: $exec('rem_gwar_sub','%mail',params_get().in.p01)
::   WE: _a - REM_GWAR.ref()
::   WY: STRING - temat wiadomości
::----------------------------------------------------------------------------------------------------------------------
_rem_gwar:=_a;

_result:='';
REM_GWAR.cntx_psh();
REM_GWAR.prefix();
{? REM_GWAR.seek(_rem_gwar)
||
   _chk:=exec('rem_gwar_chk','zasoby');
   {? _chk=1
   || _result:='Ostrzeżenie o upływającej gwarancji zasobu: %1'@[exec('record','#to_string',REM_GWAR.REM_ZAS)]
   |? _chk=2
   || _result:='Informacja o wygasłej gwarancji zasobu: %1'@[exec('record','#to_string',REM_GWAR.REM_ZAS)]
   ?};
   ~~
?};
REM_GWAR.cntx_pop();
_result


\rem_gwar_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.42]
:: OPIS: Formuła zwraca treść wiadomości o upłynięciu gwarancji (do części tekstowej e-maila)
::       Sposób użycia - wpisanie do pola 'Treść': $exec('rem_gwar_txt','%mail',_a.p01)
::       albo: $exec('rem_gwar_txt','%mail',params_get().in.p01)
::   WE: _a - REM_GWAR.ref()
::----------------------------------------------------------------------------------------------------------------------
_rem_gwar:=_a;

_result:='';
REM_ZAS.cntx_psh();
REM_GWAR.cntx_psh();
REM_GWAR.prefix();
{? REM_GWAR.seek(_rem_gwar)
|| REM_GWAR.REM_ZAS();
   _dokl:=REM_ZAS.PRZ_DOKL;
   _result:='Zasób: %1\n'@[exec('record','#to_string',REM_GWAR.REM_ZAS)];
   _result+='Symbol gwarancji: %1\n'@[REM_GWAR.SYMBOL];

   {? REM_GWAR.DUR_MODE='D' | REM_GWAR.DUR_MODE='O'
   || _left:=REM_GWAR.DUR_DATE-date();
      {? _left>=0
      || _result+='Gwarancja upływa w dniu: %1\n'@[$REM_GWAR.DUR_DATE];
         _result+='Pozostało dni: %1\n'@[$_left]
      || _result+='Gwarancja upłynęła w dniu: %1\n'@[$REM_GWAR.DUR_DATE]
      ?}
   ?};
   {? REM_GWAR.DUR_MODE='P' | REM_GWAR.DUR_MODE='O'
   ||
      _left:=REM_GWAR.DUR_PRZE-REM_ZAS.PRZ;
      _jm:=REM_GWAR.REM_ZAS().PRZ_JM().KOD;
      {? _left>0
      || _result+='Gwarancja upływa przy przebiegu: %1 %2. Aktualny przebieg: %3 %4\n'@[form(REM_GWAR.DUR_PRZE,,_dokl),_jm,form(REM_ZAS.PRZ,,_dokl),_jm];
         _result+='Pozostało przebiegu: %1 %2\n'@[$_left,_jm]
      || _result+='Gwarancja upłynęła przy przebiegu: %1 %2. Aktualny przebieg: %3 %4\n'@[form(REM_GWAR.DUR_PRZE,,_dokl),_jm,form(REM_ZAS.PRZ,,_dokl),_jm]
      ?}
   ?};
   _memo:=REM_GWAR.memo_txt(,1,'DESC');
   {? _memo<>''
   || _result+='\nUwagi do gwarancji: %1'@[_memo]
   ?}
?};
REM_GWAR.cntx_pop();
REM_ZAS.cntx_pop();
_result


\rem_gwar_html
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.42]
:: OPIS: Formuła zwraca treść wiadomości o upłynięciu gwarancji (do części html e-maila)
::       Sposób użycia - wpisanie do pola 'Treść': $exec('rem_zgl_html','%mail',_a.p01)
::       albo: $exec('rem_zwar_html','%mail',params_get().in.p01)
::   WE: _a - REM_GWAR.ref()
::----------------------------------------------------------------------------------------------------------------------
_rem_gwar:=_a;

_result:='';
REM_ZAS.cntx_psh();
REM_GWAR.cntx_psh();
REM_GWAR.prefix();
{? REM_GWAR.seek(_rem_gwar)
||
   REM_GWAR.REM_ZAS();
   _dokl:=REM_ZAS.PRZ_DOKL;
   _uri_desk:=exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',REM_ZAS.uidref()));
   _uri_html:=exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',REM_ZAS.uidref()),XINFO.LINK_INT);
   _result:=
            '<h1>Zasób: %1</h1>'
            '<h2><font size="5">Symbol gwarancji: %2</font></h2>'
            ''[exec('record','#to_string',REM_GWAR.REM_ZAS),REM_GWAR.SYMBOL];
   {? REM_GWAR.DUR_MODE='D' | REM_GWAR.DUR_MODE='O'
   ||
      _left:=REM_GWAR.DUR_DATE-date();
      {? _left>=0
      || _result+='Gwarancja upływa w dniu: %1'[$REM_GWAR.DUR_DATE];
         _result+='Pozostało dni: %1'[$_left]
      || _result+='Gwarancja upłynęła w dniu: %1'[$REM_GWAR.DUR_DATE]
      ?}
   ?};
   {? REM_GWAR.DUR_MODE='P' | REM_GWAR.DUR_MODE='O'
   ||
      _left:=REM_GWAR.DUR_PRZE-REM_ZAS.PRZ;
      _jm:=REM_GWAR.REM_ZAS().PRZ_JM().KOD;
      {? _left>0
      || _result+='Gwarancja upływa przy przebiegu: %1 %2. Aktualny przebieg: %3 %4'[form(REM_GWAR.DUR_PRZE,,_dokl),_jm,form(REM_ZAS.PRZ,,_dokl),_jm];
         _result+='Pozostało przebiegu: %1 %2'[$_left,_jm]
      || _result+='Gwarancja upłynęła przy przebiegu: %1 %2. Aktualny przebieg: %3 %4'[form(REM_GWAR.DUR_PRZE,,_dokl),_jm,form(REM_ZAS.PRZ,,_dokl),_jm]
      ?}
   ?};
   _memo:=REM_GWAR.memo_txt(,1,'DESC');
   {? _memo<>''
   || _memo:=gsub(_memo,'\n','<br>');
      _result+='<p>Uwagi do gwarancji:&nbsp;</p><p>%1</p>'[_memo]
   ?};
   {? _uri_html<>''
   || _result+='[[BODY_BUTTON2(%1,Link do zasobu (desktop),Link do zasobu,%2,Link do zasobu (html),Link do zasobu)]]'[_uri_desk,_uri_html]
   || _result+='[[BODY_BUTTON(%1,Link do zasobu,Link do zasobu)]]'[_uri_desk]
   ?}
?};
REM_GWAR.cntx_pop();
REM_ZAS.cntx_pop();
_result


\obg_to
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.14]
:: OPIS: Formuła zwraca listę adresów, które mają dostawać e-maile o dokumencie w obiegu do akceptacji/przekazania.
::       Sposób użycia - wpisanie do pola 'Do': $params_exec('obg_to','%mail',_a.p01,'P')
::       albo: $params_exec('obg_to','%mail',params_get().in.p01,'A')
::       UWAGA: jeżeli przetwarzana osoba albo kontrahent nie ma zdefiniowanego adresu e-mail,
::              to formuła zwróci pustą listę
::   WE: _a - EDOKUM.ref()
::       _b - 'P' - Przekazanie, 'A' - Akceptacja
::       [_c] - 0/1 - Przydziel automatycznie
::       [_d] - B_PREL - z przekazania
::   WY: Treść wiadmości.
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
{? _=0 | _a=~~ | _a=null || return('') ?};
{? var_press('_c')<=0 || _c:=0 ?};
_edokum:=_a; _msg:=_b;
_add:=1;
_result:='';
EDOKUM.cntx_psh(); USERS.cntx_psh();
EDOKUM.use(8+$_edokum); EDOKUM.index('ODD');
EDOKUM.prefix();
{? EDOKUM.seek(_edokum)
|| {? _msg='A'
   || _b_prel:={? var_pres('_d')>0 || _d || EDOKUM.B_PREL ?};
      EDOKUSER.cntx_psh(); EDOKUSER.index('UNIK');
      EDOKUSER.prefix(EDOKUM.ref(),_b_prel,);
      {? EDOKUSER.first()
      || {!
         |? _add:=1;
            {? _add || _add:=exec('usr_fjks','b_perm',EDOKUM.ODD().OD,EDOKUSER.USERS) ?};
            {? _add || _add:=exec('akt_rola_us','obiegi_akc',EDOKUSER.USERS,_mp.b_prel) ?};
            {? _add || _result+=EDOKUSER.USERS().EMAIL+',' ?};
            EDOKUSER.next()
         !}
      ?};
      EDOKUSER.cntx_pop()
   ?};
   {? _result='' & _c
   || USERS.index('OSOBA'); USERS.prefix();
      {? USERS.seek(_mp.user)
      || _add:=1;
         {? _add || _add:=exec('usr_fjks','b_perm',EDOKUM.ODD().OD,USERS.ref()) ?};
         {? _add || _add:=exec('akt_rola_us','obiegi_akc',USERS.ref(),_mp.b_prel) ?};
         {? _add || _result+=USERS.EMAIL+',' ?}
      ?}
   ?};
   {? _result=''
   || _add:=1;
      USERS.index('OSOBA'); USERS.prefix();
      {? USERS.first()
      || {!
         |? _add:=1;
            {? _add || _add:=exec('usr_fjks','b_perm',EDOKUM.ODD().OD,USERS.ref()) ?};
            {? _add || _add:=exec('akt_rola_us','obiegi_akc',USERS.ref(),_mp.b_prel) ?};
            {? _add || _result+=USERS.EMAIL+',' ?};
            USERS.next()
         !}
      ?}
   ?};
   {? _result='' || _result:=params_exec('role_email','%mail') ?}
?};
EDOKUM.cntx_pop(); USERS.cntx_pop();
_result


\obg_sub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.14]
:: OPIS: Formuła zwraca zawartość tytułu wiadmości e-mail o dokumencie w obiegu do akceptacji/przekazania.
::       Sposób użycia - wpisanie do pola 'Do': $exec('obg_sub','%mail',_a.p01,'P')
::       albo: $exec('obg_sub','%mail',params_get().in.p01,'A')
::       UWAGA: jeżeli przetwarzana osoba albo kontrahent nie ma zdefiniowanego adresu e-mail,
::              to formuła zwróci pustą listę
::   WE: _a - EDOKUM.ref()
::       _b - 'P' - Przekazanie, 'A' - Akceptacja
::   WY: lista adresów e-mail oddzielonych przecinkami
::----------------------------------------------------------------------------------------------------------------------
{? _=0 | _a=~~ | _a=null || return('') ?};
_edokum:=_a;
_msg:=_b;
_typ:=_result:='';
EDOKUM.cntx_psh();
EDOKUM.use(8+$_edokum); EDOKUM.index('ODD'); EDOKUM.prefix();
{? EDOKUM.seek(_edokum)
|| OSOBA.cntx_psh(); OSOBA.index('OSOBA'); OSOBA.prefix();
   ETYPY.cntx_psh(); ETYPY.index('UNIK'); ETYPY.prefix();
   _result:={? EDOKUM.TYP().TYPOBIEG().NAZWA='Obieg faktur'
            || {? _msg='P'
               || 'Faktura do przekazania: '
               |? _msg='A'
               || 'Faktura do akceptacji: '
               ?}+
               EDOKUM.SYM+', data sprzedaży '+$EDOKUM.DOP+', otrzymano '+$EDOKUM.DO+
               ', typ '+EDOKUM.TYP().NAZWA
            |? EDOKUM.TYP().TYPOBIEG().NAZWA='Obieg wniosków'
            || {? _msg='P'
               || 'Wniosek do przekazania: '
               |? _msg='A'
               || 'Wniosek do akceptacji: '
               ?}+
               EDOKUM.ID+', data operacji '+$EDOKUM.DOP+', typ '+EDOKUM.TYP().NAZWA
            |? EDOKUM.TYP().TYPOBIEG().NAZWA='Obieg delegacji'
            || {? _msg='P'
               || 'Delegacja do przekazania: '
               |? _msg='A'
               || 'Delegacja do akceptacji: '
               ?}+EDOKUM.ID+', data polecenia '+$EDOKUM.DATAW+
               ', delegowany '+EDOKUM.DOSTAWCA().NAZWISKO+' '+OSOBA.PIERWSZE+
               ', typ '+EDOKUM.TYP().NAZWA
            ?};
    OSOBA.cntx_pop(); ETYPY.cntx_pop()
?};
EDOKUM.cntx_pop();
_result


\obg_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.14]
:: OPIS: Formuła zwraca zawartość wiadmości e-mail dokumentu w obiegu do akceptacji/przekazania.
::       Sposób użycia - wpisanie do pola 'Treść': $exec('obg_txt','%mail',_a.p01,'P')
::       albo: $exec('obg_txt','%mail',params_get().in.p01,'A')
::   WE: _a - EDOKUM.ref()
::       _b - 'P' - Przekazanie, 'A' - Akceptacja
::   WY: treść wiadomości
::----------------------------------------------------------------------------------------------------------------------
{? _=0 | _a=~~ | _a=null || return('') ?};
_edokum:=_a;
_msg:=_b;
_typ:=_tekst:='';

EDOKUM.cntx_psh();
EDOKUM.use(8+$_edokum); EDOKUM.index('ODD'); EDOKUM.prefix();
{? EDOKUM.seek(_edokum)
|| _typ:=EDOKUM.TYP().TYPOBIEG().NAZWA;
   _tekst+='<BR>';
   _tekst+='<CENTER><H3><font color="black">'+REF.FIRMA().OPIS+'</font></H3></CENTER>';
   {? _typ='Obieg faktur'
   || _tekst+='<CENTER><H3>Faktura do '+{? _msg='P' || 'przekazania' || 'akceptacji' ?}+'</CENTER><BR>'
   |? _typ='Obieg wniosków'
   || _tekst+='<CENTER><H3>Wniosek do '+{? _msg='P' || 'przekazania' || 'akceptacji' ?}+'</CENTER><BR>'
   |? _typ='Obieg delegacji'
   || _tekst+='<CENTER><H3>Delegacja do '+{? _msg='P' || 'przekazania' || 'akceptacji' ?}+'</CENTER><BR>'
   ?};
   _tekst+='<table align=\"center\" valign=\"top\" border=\"2\" cellspacing=\"0\" cellpadding=\"0\">';
   {? _typ='Obieg faktur'
   || _tekst+='<tr  class=\"head3\"><td colspan=\"2\">Dane ogólne</td></tr>'+
              '<tr><td>Jedn. ks.</td>'+
              '<td width=\"300\" class=\"wiersz\">'+EDOKUM.ODD().OD+'</td></tr>';

      _tekst+='<tr><td>Typ faktury</td>'+
              '<td class=\"wiersz\">'+EDOKUM.TYP().NAZWA+'</td></tr>'+
              '<tr><td>Identyfikator</td>'+
              '<td class=\"wiersz\">'+EDOKUM.ID+'</td></tr>';

      _tekst+='<tr><td>Symbol</td>'+
              '<td class=\"wiersz\">'+EDOKUM.SYM+'</td></tr>'+
              '<tr><td>Korekta</td>'+
              '<td class=\"wiersz\">'+{? EDOKUM.KOREKTA='T' || 'Tak' || 'Nie' ?}+'</td></tr>'+
              '<tr><td>Symbol dokumentu korygowanego</td>'+
              '<td class=\"wiersz\">'+EDOKUM.SYM_KOR+'</td></tr>';

      _tekst+='<tr><td>Przyczyna korekty</td>'+
              '<td class=\"wiersz\">'+EDOKUM.KOR_PRZY+'</td></tr>'+
              '<tr><td>Okres korygowanej faktury</td>'+
              '<td class=\"wiersz\">'+EDOKUM.KOR_OKR+'</td></tr>';

      _tekst+='<tr><td>Data sprzedaży</td>'+
              '<td class=\"wiersz\">'+$EDOKUM.DOP+'</td></tr>'+
              '<tr><td>Data wystawienia</td>'+
              '<td class=\"wiersz\">'+$EDOKUM.DW+'</td></tr>'+
              '<tr><td>Data otrzymania</td>'+
              '<td class=\"wiersz\">'+$EDOKUM.DO+'</td></tr>';

      _tekst+='<tr><td>Waluta transakcji</td>'+
              '<td class=\"wiersz\">'+EDOKUM.WAL().KOD+'</td></tr>'+
              '<tr><td>Wartość netto</td>';

      _tekst+='<td class=\"wiersz\">'+form(EDOKUM.NETTO,,2,' ,')+'</td></tr>'+
              '<tr><td>Wartość brutto</td>'+
              '<td class=\"wiersz\">'+form(EDOKUM.WART,,2,' ,')+'</td></tr>';

      _tekst+='<tr class=\"head3\"><td colspan=\"2\">Kontrahent</td></tr>';

      _tekst+='<tr><td>Kod</td>'+
              '<td class=\"wiersz\">'+EDOKUM.KHKH().KOD+'</td></tr>'+
              '<tr><td>Skrót</td>'+
              '<td class=\"wiersz\">'+EDOKUM.KHKH().SKR+'</td></tr>'+
              '<tr><td>Nazwa</td>'+
              '<td class=\"wiersz\">'+EDOKUM.KHKH().NAZ+'</td></tr>'+
              '<tr><td>Miasto</td>'+
              '<td class=\"wiersz\">'+EDOKUM.MIASTO+'</td></tr>';

      _tekst+='<tr><td>Ulica</td>'+
              '<td class=\"wiersz\">'+EDOKUM.UL+'</td></tr>'+
              '<tr><td>Poczta</td>'+
              '<td class=\"wiersz\">'+EDOKUM.POCZ+'</td></tr>';

      _tekst+='<tr><td>Handlowiec</td>'+
              '<td class=\"wiersz\">'+EDOKUM.HAN().NAZ+'</td></tr>'
              '<tr><td>Sposób płatności</td>'+
              '<td class=\"wiersz\">'+EDOKUM.PLATNOSC().TR+'</td></tr>';

      _tekst+='<tr><td>Termin płatności</td>'+
              '<td class=\"wiersz\">'+$EDOKUM.TP+'</td></tr>'+
              '<tr><td>Wymagany split payment</td>'+
              '<td class=\"wiersz\">'+{? EDOKUM.SP_WYM='T' || 'Tak' || 'Nie' ?}+'</td></tr>'+
              '<tr><td>Opis</td>'+
              '<td class=\"wiersz\">'+EDOKUM.TR+'</td></tr></table><BR>';

       EVAT.cntx_psh();
       EVAT.index('EDOKUM'); EVAT.prefix(EDOKUM.ref());
       {? EVAT.first()
       || _tekst+='<table align=\"center\" valign=\"top\" border=\"2\" cellspacing=\"0\" cellpadding=\"0\">'+
                  '<tr  class=\"head3\"><td colspan=\"4\">Pozycje VAT</td></tr>';
          _tekst+='<tr class=\"head3\">'+
                  '<td>Kwota netto</td>'+
                  '<td>% VAT</td>'+
                  '<td>Kwota VAT</td>'+
                  '<td>Kwota brutto</td></tr>';
          {!
          |? _tekst+='<tr class=\"wiersz\">'+
                     '<td class=\"wiersz\">'+form(EVAT.NETTO,,2,' ,')+'</td>'+
                     '<td class=\"wiersz\">'+EVAT.PR().KOD+'</td>'+
                     '<td class=\"wiersz\">'+form(EVAT.VAT,,2,' ,')+'</td>'+
                     '<td class=\"wiersz\">'+form(EVAT.BRUTTO,,2,' ,')+'</td></tr>';
             EVAT.next()
          !};
          _tekst+='</table><BR>'
       ?};
       EVAT.cntx_pop()
   |? _typ='Obieg wniosków'
   || _tekst+='<tr  class=\"head3\"><td colspan=\"2\">Dane ogólne</td></tr>'+
              '<tr><td>Jedn. ks.</td>'+
              '<td width=\"300\" class=\"wiersz\">'+EDOKUM.ODD().OD+'</td></tr>';

      _tekst+='<tr><td>Typ wniosku</td>'+
              '<td class=\"wiersz\">'+EDOKUM.TYP().NAZWA+'</td></tr>'+
              '<tr><td>Operacja z dnia</td>'+
              '<td class=\"wiersz\">'+$EDOKUM.DOP+'</td></tr>'+
              '<tr><td>Identyfikator</td>'+
              '<td class=\"wiersz\">'+EDOKUM.ID+'</td></tr>'+
              '<tr><td>Osoba</td>'+
              '<td class=\"wiersz\">'+EDOKUM.DOSTAWCA().NAZWISKO+' '+EDOKUM.DOSTAWCA().PIERWSZE+'</td></tr>';

      _tekst+='<tr  class=\"head3\"><td colspan=\"2\">Wartość</td></tr>'+
               '<tr><td>Waluta transakcji</td>'+
              '<td class=\"wiersz\">'+EDOKUM.WAL().KOD+'</td></tr>'+
              '<tr><td>Wartość netto</td>';

      _tekst+='<td class=\"wiersz\">'+
              {? EDOKUM.TYP().CZY_WAR=2 | EDOKUM.TYP().CZY_WAR=3 || form(EDOKUM.NETTO,,2,' ,') || '----' ?}+'</td></tr>'+
              '<tr><td>Wartość brutto</td>'+
              '<td class=\"wiersz\">'+
              {? EDOKUM.TYP().CZY_WAR=1 |EDOKUM.TYP().CZY_WAR=3 || form(EDOKUM.WART,,2,' ,') || '----' ?}+'</td></tr>'+
              '<tr><td>Termin płatności</td>'+
              '<td class=\"wiersz\">'+$EDOKUM.TP+'</td></tr>';

      _tekst+='<tr class=\"head3\"><td colspan=\"2\">Kontrahent</td></tr>'+
              '<tr><td>NIP</td>'+
              '<td class=\"wiersz\">'+EDOKUM.KHKH().SNIP+'</td></tr>'+
              '<tr><td>Kod</td>'+
              '<td class=\"wiersz\">'+EDOKUM.KHKH().KOD+'</td></tr>'+
              '<tr><td>Nazwa</td>'+
              '<td class=\"wiersz\">'+EDOKUM.KHKH().SKR+'</td></tr>';

      _tekst+='<tr class=\"head3\"><td colspan=\"2\">Opis</td></tr>'+
              '<tr><td>Temat</td>'+
              '<td class=\"wiersz\">'+EDOKUM.TR+'</td></tr>';
      _tekst+='</table><BR>'
   |? _typ='Obieg delegacji'
   || _tekst+='<tr  class=\"head3\"><td colspan=\"2\">Parametry delegacji</td></tr>';

      _tekst+='<tr><td>Typ wniosku</td>'+
              '<td width=\"300\" class=\"wiersz\">'+EDOKUM.TYP().NAZWA+'</td></tr>'+
              '<tr><td>Data polecenia wyjazdu</td>'+
              '<td class=\"wiersz\">'+$EDOKUM.DW+'</td></tr>';
      _tekst+='<tr><td>Identyfikator</td>'+
              '<td class=\"wiersz\">'+EDOKUM.ID+'</td></tr>'+
              '<tr><td>Delegowany</td>'+
              '<td class=\"wiersz\">'+EDOKUM.DOSTAWCA().NAZWISKO + ' '+EDOKUM.DOSTAWCA().PIERWSZE+'</td></tr>';

      _tekst+='<tr  class=\"head3\"><td colspan=\"2\">Czas trwania delegacji</td></tr>'+
              '<tr><td>Od dnia</td>'+
              '<td class=\"wiersz\">'+$EDOKUM.DATA_OD+'</td></tr>'+
              '<tr><td>Do dnia</td>'+
              '<td class=\"wiersz\">'+$EDOKUM.DATA_DO+'</td></tr>'+
              '<tr><td>Data rozliczenia</td>'+
              '<td class=\"wiersz\">'+$EDOKUM.DOP+'</td></tr>';

      _tekst+='<tr  class=\"head3\"><td colspan=\"2\">Delegacja</td></tr>'+
              '<tr><td>Cel delegacji</td>'+
              '<td class=\"wiersz\">'+EDOKUM.DEL_CEL().TR+'</td></tr>'+
              '<tr><td>Opis delegacji</td>'+
              '<td class=\"wiersz\">'+EDOKUM.TR+'</td></tr>'+
              '<tr><td>Miejsce delegacji</td>'+
              '<td class=\"wiersz\">'+EDOKUM.DEL_MIE+'</td></tr>';

      _tekst+='<tr class=\"head3\"><td colspan=\"2\">Kontrahent</td></tr>'+
              '<tr><td>NIP</td>'+
              '<td class=\"wiersz\">'+EDOKUM.KHKH().SNIP+'</td></tr>'+
              '<tr><td>Kod</td>'+
              '<td class=\"wiersz\">'+EDOKUM.KHKH().KOD+'</td></tr>'+
              '<tr><td>Nazwa</td>'+
              '<td class=\"wiersz\">'+EDOKUM.KHKH().SKR+'</td></tr>';
      _tekst+='</table><BR>'
   ?}
?};
EDOKUM.cntx_pop();
_tekst


\obe_to
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.14]
:: OPIS: Formuła zwraca listę adresów, które mają dostawać e-maile o wniosku w obiegu do akceptacji/przekazania.
::       Sposób użycia - wpisanie do pola 'Do': $params_exec('obe_to','%mail',_a.p01,'P')
::       albo: $params_exec('obe_to','%mail',params_get().in.p01,'A')
::       UWAGA: jeżeli przetwarzana osoba albo kontrahent nie ma zdefiniowanego adresu e-mail,
::              to formuła zwróci pustą listę
::   WE: _a - EDOKUM.ref()
::       _b - 'P' - Przekazanie, 'A' - Akceptacja
::       [_c] - 0/1 - Przydziel automatycznie
::       [_d] - B_PREL - z przekazania
::   WY: Treść wiadmości.
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
{? _=0 || return('') ?};
{? var_press('_c')<=0 || _c:=0 ?};
_edokum:=_a; _msg:=_b;
_add:=1;
_result:='';
EDOKUM.cntx_psh(); USERS.cntx_psh();
EDOKUM.use(8+$_edokum); EDOKUM.index('ODD');
EDOKUM.prefix();
{? EDOKUM.seek(_edokum)
|| {? _msg='A'
   || _b_prel:={? var_pres('_d')>0 || _d || EDOKUM.B_PREL ?};
      EDOKUSER.cntx_psh(); EDOKUSER.index('UNIK');
      EDOKUSER.prefix(EDOKUM.ref(),_b_prel,);
      {? EDOKUSER.first()
      || {!
         |? _add:=1;
            {? _add || _add:=exec('akt_rola_us','obiegi_akc',EDOKUSER.USERS,_mp.b_prel) ?};
            {? _add || _result+=EDOKUSER.USERS().EMAIL+',' ?};
            EDOKUSER.next()
         !}
      ?};
      EDOKUSER.cntx_pop()
   ?};
   {? _result='' & _c
   || USERS.index('OSOBA'); USERS.prefix();
      {? USERS.seek(_mp.user)
      || _add:=1;
         {? _add || _add:=exec('akt_rola_us','obiegi_akc',USERS.ref(),_mp.b_prel) ?};
         {? _add || _result+=USERS.EMAIL+',' ?}
      ?}
   ?};
   {? _result=''
   || _add:=1;
      USERS.index('OSOBA'); USERS.prefix();
      {? USERS.first()
      || {!
         |? _add:=1;
            {? _add || _add:=exec('akt_rola_us','obiegi_akc',USERS.ref(),_mp.b_prel) ?};
            {? _add || _result+=USERS.EMAIL+',' ?};
            USERS.next()
         !}
      ?}
   ?};
   {? _result='' || _result:=params_exec('role_email','%mail') ?}
?};
EDOKUM.cntx_pop(); USERS.cntx_pop();
_result


\tag_outlook_private
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.14]
:: OPIS: Zwraca tag dla wiadomości interperowany przez Outlook - wiadomość o charakterze prywatnym
::   WY: STRING
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
'Sensitivity=private'


\tag_outlook_important
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.14]
:: OPIS: Zwraca tag dla wiadomości interperowany przez Outlook - wiadomość o wysokiej ważności
::   WY: STRING
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
'Importance=high'


\zlp_to
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.14]
:: OPIS: Formuła zwraca listę adresów, które mają dostawać e-maile o braku KPO do zgłoszenia jednorazowego
::       Sposób użycia - wpisanie do pola 'Do': $exec('zlp_to','%mail',_a.p01)
::       albo: $exec('zlp_to','%mail',params_get().in.p01)
::       UWAGA: jeżeli przetwarzany kontrahent nie ma zdefiniowanego adresu e-mail,
::              to formuła zwróci pustą listę
::   WE: _a - ZLP.ref() / $ZLP.ref() / ZLP.uidref()
::   WY: STRING - lista adresów e-mail oddzielonych przecinkami
::----------------------------------------------------------------------------------------------------------------------
_zlp:=_a;

_formula:="
   {? ZLP.MAIL<>''
   || ZLP.MAIL
   || ZLP.KH().EM
   ?}
";
_result:=exec('FindAndGet','#table',ZLP,_zlp,,_formula,'');

_result


\zlp_sub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwraca temat wiadomości o braku KPO do zgłoszenia jednorazowego
::       Sposób użycia - wpisanie do pola 'Do': $exec('zlp_sub','%mail',_a.p01)
::       albo: $exec('zlp_sub','%mail',params_get().in.p01)
::   WE: _a - ZLP.ref() / $ZLP.ref() / ZLP.uidref()
::   WY: STRING - temat wiadomości
::----------------------------------------------------------------------------------------------------------------------
_zlp:=_a;

_result:='Informacje na temat zamówienia usługi '+form(date())+' '+(time$3);

_result


\zlp_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwraca treść wiadomości o braku KPO do zgłoszenia jednorazowego
::       Sposób użycia - wpisanie do pola 'Treść': $exec('zlp_txt','%mail',_a.p01)
::       albo: $exec('zlp_txt','%mail',params_get().in.p01)
::   WE: _a - ZLP.ref() / $ZLP.ref() / ZLP.uidref()
::----------------------------------------------------------------------------------------------------------------------
_result:=exec('zlp_html','%mail',_a);
_result:=gsub(_result,'<p>','\n');
_result:=gsub(_result,'</p>','\n');
_result:=gsub(_result,'<br>','\n');
_result:=gsub(_result,'<font color="black">','');
_result:=gsub(_result,'<font color="green">','');
_result:=gsub(_result,'<ol>','\n');
_result:=gsub(_result,'</ol>','\n');
_result:=gsub(_result,'<li>','');
_result:=gsub(_result,'</li>','\n');
_result


\zlp_html
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [20.14]
:: OPIS: Formuła zwraca treść wiadomości o braku KPO do zgłoszenia jednorazowego
::       Sposób użycia - wpisanie do pola 'Treść html': $exec('zlp_html','%mail',_a.p01)
::       albo: $exec('zlp_hml','%mail',params_get().in.p01)
::   WE: _a - ZLP.ref() / $ZLP.ref() / ZLP.uidref()
::----------------------------------------------------------------------------------------------------------------------
_zlp:=_a;

_formula:=$("
   _service:=ZLP.MJ().N;
   _sender:=ZLP.KH().NAZ;
   _serviceId:='';
   _info:=exec('zlp2TR_NAG','transport_wspolne',ZLP.uidref(),1);
   _date:=_info.DATE;
   _time:=_info.TIME;
   _vehicle:=_info.NR_REJ;
   VAR.POD:=exec('kpo_kh3_domyslny','odpady');
   _carrier:=VAR.POD().NAZ;
   _carrierId:=VAR.POD().NRREJDBO;
   VAR.POD:=exec('kpo_kh2_domyslny','odpady');
   _receiver:=VAR.POD().NAZ;
   _receiverId:=VAR.POD().NRREJDBO;
   VAR.MPD:=exec('kpo_khodb2_domyslny','odpady',VAR.POD);
   _receiverEup:=VAR.MPD().NRMPDBDO;
   _wasteCode:=ZLP.ODP().KOD;
   _wasteName:=ZLP.ODP().NAZ;
   _remarks1:=ZLP.U;
   _remarks2:='';
   '"+
   '<p>'
   '<font color="black">'
   'Usługa: %1'
   '<br>Kontrahent: %2'
::   '<br>Id_zlecenia: %3'
   '%3'
   '</p>'

   '<p>'
   '<font color="black">'
   'W związku ze złożonym zamówieniem na realizację usługi wywozu odpadów, poniżej przekazujemy dane '
   'do utworzenia Karty Przekazania Odpadu w Systemie BDO (https://rejestr-bdo.mos.gov.pl/User/Login/Login): '
   '</p>'

   '<ol>'

   '<li>termin realizacji usługi – data: <font color="green">%4, <font color="black">przewidywana godz. uruchomienia: <font color="green">%5<font color="black"></li>'

   '<li>numer rejestracyjny pojazdu transportującego odpad: <font color="green">%6<font color="black"></li>'

   '<li>transportujący odpad: <font color="green"> %7<font color="black">, nr BDO: <font color="green">%8<font color="black"></li>'
   '<li>przejmujący odpad: <font color="green">%9<font color="black">, nr BDO: <font color="green">%10<font color="black">'
   ', nr miejsca prowadzenia działalności: <font color="green">%11<font color="black"></li>'

   '<li>kod odpadu: <font color="green">(%12) %13<font color="black">'
   '<br>Kod odpadu deklaruje zamawiający z klauzulą: „W przypadku gdy w kontenerze odpady są inne niż deklarowane (inny kod odpadu) kontener ten może zostać nie odebrany, '
   'a zamawiający zostanie obciążony kosztami dodatkowego transportu”.</li>'
   '</ol>'

   '<p>%14</p><p>%15</p>'+
   "'
   [  _service,
      _sender,
      _serviceId,
      $_date,
      $_time,
      _vehicle,
      _carrier,
      _carrierId,
      _receiver,
      _receiverId,
      _receiverEup,
      _wasteCode,
      _wasteName,
      _remarks1,
      _remarks2
   ]"
);
_result:=exec('FindAndGet','#table',ZLP,_zlp,,_formula,'');

_result


\rek_n_to
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Formuła zwraca listę adresów, które mają dostawać e-maile o stanie reklamacji
::       Sposób użycia - wpisanie do pola 'Do': $exec('rek_n_to','%mail',_a.p01)
::       albo: $exec('rek_n_to','%mail',params_get().in.p01)
::       UWAGA: jeżeli przetwarzana osoba albo kontrahent nie ma zdefiniowanego adresu e-mail,
::              to formuła zwróci pustą listę
::   WE: _a - REK_N.ref()
::   WY: lista adresów e-mail oddzielonych przecinkami
::----------------------------------------------------------------------------------------------------------------------
_rek_n:=_a;

_result:='';
REK_N.cntx_psh();
REK_N.use(ref_name(_rek_n));
REK_N.prefix();
{? REK_N.seek(_rek_n)
||
:: E-mail zapisany w danych kontaktowych
   _email:=REK_N.EM;
   {? _email<>'' || _result+=_email+',' ?};
:: Kontrahent
   _email:=exec('FindAndGet','#table',KH,REK_N.KH,,"EM",'');
   {? _email<>'' || _result+=_email+',' ?};
   ~~
?};
REK_N.cntx_pop();
_result


\rek_n_cc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Formuła zwraca listę adresów, które mają dostawać e-mail 'do wiadomości' o stanie reklamacji
::       Sposób użycia - wpisanie do pola 'DW': $exec('rem_zgl_cc','%mail',_a.p01)
::       albo: $exec('rem_zgl_cc','%mail',params_get().in.p01)
::       UWAGA: jeżeli żaden przetwarzany użytkownik nie ma wypełnionego pola USERS.EMAIL, to formuła zwróci pustą listę
::   WE: _a - REK_N.ref()
::   WY: lista adresów e-mail oddzielonych przecinkami
::----------------------------------------------------------------------------------------------------------------------
_rek_n:=_a;

_result:='';
REK_N.cntx_psh();
REK_N.use(ref_name(_rek_n));
REK_N.prefix();
{? REK_N.seek(_rek_n)
||
:: Opiekun reklamacji
   {? REK_N.OSR<>null()
   || REK_N.OSR();
      _email:=USERS.EMAIL;
      {? _email<>''
      || {? _result*_email=0 || _result+=_email+',' ?}
      || {? USERS.OSOBA<>null()
         || _email:=exec('email','osoba',USERS.OSOBA);
            {? _email<>'' & _result*_email=0 || _result+=_email+',' ?}
         ?}
      ?}
   ?}
?};
REK_N.cntx_pop();
_result


\rek_n_sub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Formuła zwraca temat wiadomości o stanie reklamacji
::       Sposób użycia - wpisanie do pola 'Temat': $exec('rek_n_sub','%mail',_a.p01)
::       albo: $exec('rek_n_sub','%mail',params_get().in.p01)
::   WE: _a - REK_N.ref()
::----------------------------------------------------------------------------------------------------------------------
_rek_n:=_a;

_result:='';
REK_N.cntx_psh();
REK_N.use(ref_name(_rek_n));
REK_N.prefix();
{? REK_N.seek(_rek_n)
|| {? REK_N.STAT_REJ='N'
   || _result:='Wprowadzono reklamację: %1'[REK_N.SYM]
   |? REK_N.STAT_REJ='Z'
   || _result:='Przyjęto reklamację: %1'[REK_N.SYM]
   |? REK_N.STAT_REJ='T'
   || _result:='Zakończono weryfikację reklamacji: %1'[REK_N.SYM]
   |? REK_N.STAT_REJ='X'
   || _result:='Zamknięto reklamację: %1'[REK_N.SYM]
   ?}
?};
REK_N.cntx_pop();
_result


\rek_n_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Formuła zwraca treść wiadomości o stanie reklamacji (do części tekstowej e-maila)
::       Sposób użycia - wpisanie do pola 'Treść': $exec('rek_n_txt','%mail',_a.p01)
::       albo: $exec('rek_n_txt','%mail',params_get().in.p01)
::   WE: _a - REK_N.ref()
::----------------------------------------------------------------------------------------------------------------------
_rek_n:=_a;

_result:='';
REK_N.cntx_psh();
REK_N.use(ref_name(_rek_n));
REK_N.prefix();
{? REK_N.seek(_rek_n)
|| _result:=
      'Reklamacja: %1\n'
      '%2\n\n'
      '%3\n'
      '%4\n'
      '%5'
      [  REK_N.SYM,
         REK_N.OP+{? +REK_N.memo_txt(,,'OPIS') || '\n'+REK_N.memo_txt(,,'OPIS') || '' ?},
         {? REK_N.STAT_REJ='Z'
         || 'Data przyjęcia: '+form(REK_N.DP)
         |? REK_N.STAT_REJ='T'
         || 'Data weryfikacji: '+form(REK_N.DZ)
         |? REK_N.STAT_REJ='X'
         || 'Data zamknięcia: '+form(REK_N.DX)
         || ''
         ?},
         {? REK_N.STAT_REJ='T' || 'Wynik weryfikacji: '+{? REK_N.RESULT='T' || 'Akceptacja' || 'Odrzucenie' ?} || '' ?},
         {? REK_N.STAT_REJ='T'
         || REK_N.memo_txt(,,'RES_OPIS')
         |? REK_N.STAT_REJ='X'
         || REK_N.memo_txt(,,'X_OPIS')
         || ''
         ?}

      ]
?};
REK_N.cntx_pop();
_result


\rek_n_html
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.14]
:: OPIS: Formuła zwraca treść wiadomości o stanie zgłoszenia remontowego (do części HTML e-maila)
::       Sposób użycia - wpisanie do pola 'Treść html': $exec('rek_n_html','%mail',_a.p01)
::       albo: $exec('rek_n_html','%mail',params_get().in.p01)
::   WE: _a - REK_N.ref()
::----------------------------------------------------------------------------------------------------------------------
_rek_n:=_a;

_result:='';
REK_N.cntx_psh();
REK_N.use(ref_name(_rek_n));
REK_N.prefix();
{? REK_N.seek(_rek_n)
|| _result:=
      '<h2>Reklamacja: %1</h2>'
      '<p>%2</p>'
      '<h4>%3</h4>'
      '<h4>%4</h4>'
      '<p>%5</p>'
      [  REK_N.SYM,
         REK_N.OP+{? +REK_N.memo_txt(,,'OPIS') || '<br>'+gsub(REK_N.memo_txt(,,'OPIS'),'\n','<br>') || '' ?},
         {? REK_N.STAT_REJ='Z'
         || 'Data przyjęcia: '+form(REK_N.DP)
         |? REK_N.STAT_REJ='T'
         || 'Data weryfikacji: '+form(REK_N.DZ)
         |? REK_N.STAT_REJ='X'
         || 'Data zamknięcia: '+form(REK_N.DX)
         || ''
         ?},
         {? REK_N.STAT_REJ='T' || 'Wynik weryfikacji: '+{? REK_N.RESULT='T' || 'Akceptacja' || 'Odrzucenie' ?} || '' ?},
         {? REK_N.STAT_REJ='T'
         || gsub(REK_N.memo_txt(,,'RES_OPIS'),'\n','<br>')
         |? REK_N.STAT_REJ='X'
         || gsub(REK_N.memo_txt(,,'X_OPIS'),'\n','<br>')
         || ''
         ?}
      ]
?};
REK_N.cntx_pop();
_result


\admin_get_mail
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [22.26]
:: OPIS: Zwraca e-maile administratorów
::   WY: STRING
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_result:='';
B_ROLE.cntx_psh();
USERS.cntx_psh();
B_ROLE.index('UNIK');
B_ROLE.prefix(REF.FIRMA,'Administrator',);
{? B_ROLE.first()
||
   B_USRROL.cntx_psh();
   B_USRROL.index('WER1');
   B_USRROL.prefix(REF.FIRMA,B_ROLE.ref());
   {? B_USRROL.first()
   || {!
      |?
         _is_modelator:=0;
         {? exec('chk_role','#b__box',B_USRROL.USERS,'ZPR_PRO_MODE')
         || _is_modelator:=1
         ?};
         {? exec('chk_role','#b__box',B_USRROL.USERS,'ZPR_PRO_MODW')
         || _is_modelator:=1
         ?};

         {? _is_modelator & B_USRROL.USERS().EMAIL<>'' & USERS.AKT='T'
         || {? _result*(USERS.EMAIL+',')=0
            || _result+=USERS.EMAIL+','
            ?}
         ?};
         B_USRROL.next()
      !}
   ?};
   B_USRROL.cntx_pop()
?};
B_ROLE.cntx_pop();
USERS.cntx_pop();
{? _result<>''
|| _result:=_result-1
?};
_result


\error_update_portalu_html
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Formuła zwraca treść wiadomości o błędzie aktualizacji uprawnień Portal HR (do części HTML e-maila)
::       Sposób użycia - wpisanie do pola 'Treść html': $exec('error_update_portalu_html','%mail',_a.p01)
::       albo: $exec('error_update_portalu_html','%mail',params_get().in.p01)
::   WE: _a - USERSF.uidref()
::----------------------------------------------------------------------------------------------------------------------
_usersf:=_a;

_uri_desk:=exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',_usersf));
_uri_html:=exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',_usersf),XINFO.LINK_INT);

_result:=
   '<p>Podczas aktualizacji uprawnień użytkowników Portal HR wystąpił błąd.\n'
   'Szczegóły można sprawdzić w widoku użytkowników portalowych.</p>';

{? _uri_html<>''
|| _result+='[[BODY_BUTTON2(%1,Link do użytkownika (desktop),Link do użytkownika,%2,Link do użytkownika (html),Link do użytkownika)]]'[_uri_desk,_uri_html]
|| _result+='[[BODY_BUTTON(%1,Link do użytkownika,Link do użytkownika)]]'[_uri_desk]
?};

_result


\error_update_portalu_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [23.25]
:: OPIS: Formuła zwraca treść wiadomości o błędzie aktualizacji uprawnień Portal HR (do części TXT e-maila)
::       Sposób użycia - wpisanie do pola 'Treść': $exec('error_update_portalu_txt','%mail',_a.p01)
::       albo: $exec('error_update_portalu_txt','%mail',params_get().in.p01)
::   WE: _a - USERSF.uidref()
::----------------------------------------------------------------------------------------------------------------------
_usersf:=_a;

::_uri_desk:=exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',_usersf));
::_uri_html:=exec('link_uri','#system',exec('obj_ntab_set','#array',,'LINK',_usersf),XINFO.LINK_INT);

_result:=
   'Podczas aktualizacji uprawnień użytkowników Portal HR wystąpił błąd.\n'
   'Szczegóły można sprawdzić w widoku użytkowników portalowych.';

::{? _uri_html<>''
::|| _result+='[[BODY_BUTTON2(%1,Link do użytkownika (desktop),Link do użytkownika,%2,Link do użytkownika (html),Link do użytkownika)]]'[_uri_desk,_uri_html]
::|| _result+='[[BODY_BUTTON(%1,Link do użytkownika,Link do użytkownika)]]'[_uri_desk]
::?};

_result

:Sign Version 2.0 jowisz:1045 2024/02/08 17:05:05 08a01f6d8ce99d77dcb8ccb3804d1404395d5568cc94c391a49e0a44537199dd313b5ef215f947d28129ac42c54bfbdd72355fba492baaf7f6bb7987a8912faae4cb8e2c110a2500c34ef08055f2986c80a7a39b70eb819d8efc236cf4ffe111a320484ec0c874ec55c1dfb859fddd5620b99190796a5aba9641857e2b0a47f0
