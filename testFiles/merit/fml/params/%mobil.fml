:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: %mobil.fml
:: Utworzony: 11.02.2021
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi operacji mobilnych
::======================================================================================================================

\conv_dat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: conwersja napisu typu data RRRRMMDD na format z podziałem
::   WE: [_a] - wartość lub domyślnie EANW.WAR
::       [_b] - separator domyślnie '/'
::   WY: sformatowany zapis daty RRRRsMMsDD
::----------------------------------------------------------------------------------------------------------------------
_dat:={? var_pres('_a')=type_of('') || _a || EANW.WAR ?};
_sep:={? var_pres('_b')=type_of('') & (+_b)=1 || _b || '/' ?};
_res:='';

{? (+_dat)=6 & exec('allDigit','#valid',_dat,1)
|| _yy:=2000+#(2+_dat);  _mm:=#(2+(2-_dat)); _dd:=#(_dat+2);
   {? _mm>0 & _mm<=12 & _dd>0 & _dd<=31
   || no_msg(1);
      on_error(3);
      _var:=date(_yy,_mm,_dd);
      {? ~in_error() || _res:=form(_var) ?};
      on_error(0);
      no_msg(0)
   ?};
   {? _sep<>'/' || _res:=gsub(_res,'/',_sep) ?}
?};
_res


\conv_real
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: conwersja napisu na liczbę rzeczywistą
::   WE: [_a] - wartość lub domyślnie EANW.WAR
::       [_b] - precyzja jako string lub liczba
::   WY: sformatowany zapis daty int.frac
::----------------------------------------------------------------------------------------------------------------------
 _var:={? var_pres('_a')=type_of('') || _a || EANW.WAR ?};
_frac:={? var_pres('_b')=type_of('') & (+_b) || #_b
       |? var_pres('_b')=type_of(0) & _b>=0 & _b<6 || _b
       || #(EANW.KOD+1)
       ?};
_res:='';
_len:=+_var;
{? _len>0 & _len<=_frac || _var:=(_frac-_len+1)*'0'+_var; _len:=+_var ?};
{? _len>0 & _len>_frac & exec('allDigit','#valid',_var,1)
|| _res:=form(#((_var-_frac)+'.'+(_var+_frac)))
?};
_res


\dod_il2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: przepisanie do pola druga ilość
::   WE: [_a] - wartość lub domyślnie EANW.WAR
::       [_b] - precyzja jako string lub liczba domyślnie EANW.KOD
::----------------------------------------------------------------------------------------------------------------------
_var:={? var_pres('_a')=type_of('') & _a<>'' || _a || EANW.WAR ?};
_frac:={? var_pres('_b')=type_of('') & (+_b) || #_b
       |? var_pres('_b')=type_of(0) & _b>=0 & _b<6 || _b
       || #(EANW.KOD+1)
       ?};
_war:=0;
_len:=+_var;
{? _len>0 & _len<=_frac || _var:=(_frac-_len+1)*'0'+_var; _len:=+_var ?};
{? _len>0 & _len>_frac & exec('allDigit','#valid',_var,1)
|| _war:=#((_var-_frac)+'.'+(_var+_frac))
?};

_tab:=ref_tab(EANX.UIDGS1);
_put:=0;

{? _war>0 & _tab=DK
|| {? DK.M().J2<>null()
   ||
::    druga jednostka ewidencyjna
      _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,DK.M().J2,DK.M().J);
      _j2:=DK.M().J2().KOD;
      _il2:=0;
      {? _j2='kg'  || _il2:=_war
      |? _j2='t'   || _il2:=_war/1000
      |? _j2='g'   || _il2:=_war*1000
      |? _j2='dag' || _il2:=_war*100
      ?};
      {? _il2>0
      || DK.T2:='M';
         DK.J2:=DK.M().J2;
         DK.IL2:=(DK.IL*_il2) $_dokl_s;
         DK.WS2:=DK.IL/DK.IL2;
         _put:=1
      ?}
   ||
::    jednostka przelicznikowa o ile istnieje
      _dokl_s:=0;
      _il2:=0;
      _jm:=null();
      {? (_kod:='kg'; _jm:=exec('FindInSet','#table','JM','KOD',_kod,_kod); _jm<>null())
        & exec('FindInSet','#table','MJM','JM',_jm,DK.M)<>null()
      || _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,_jm,DK.M().J);
         _il2:=_war
      |? (_kod:='t'; _jm:=exec('FindInSet','#table','JM','KOD',_kod,_kod); _jm<>null())
        & exec('FindInSet','#table','MJM','JM',_jm,DK.M)<>null()
      || _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,_jm,DK.M().J);
         _il2:=_war/1000
      |? (_kod:='g'; _jm:=exec('FindInSet','#table','JM','KOD',_kod,_kod); _jm<>null())
        & exec('FindInSet','#table','MJM','JM',_jm,DK.M)<>null()
      || _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,_jm,DK.M().J);
         _il2:=_war*1000
      |? (_kod:='dag'; _jm:=exec('FindInSet','#table','JM','KOD',_kod,_kod); _jm<>null())
        & exec('FindInSet','#table','MJM','JM',_jm,DK.M)<>null()
      || _dokl_s:=exec('jaka_dok_mjm','jm',DK.M,_jm,DK.M().J);
         _il2:=_war*100
      ?};
      {? _il2>0
      || DK.T2:={? DK.T2<>'R' || 'G' || 'R' ?};
         DK.J2:=_jm;
         DK.IL2:=(DK.IL*_il2) $_dokl_s;
         DK.WS2:=DK.IL/DK.IL2;
         _put:=1
      ?}
   ?};
   {? _put || DK.put(1)?}
?};
1


\digitCTRL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca cyfrę kontrolną dla podanego ciągu cyfr - algorytm mod 10/3
::   WE: [_a] - kod, dla którego ma zostać zwrócona cyfra kontrolna
::   WY: cyfra kontrolna (znak) lub pusty napis jak się nie udało
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_str:={? var_pres('_a')=type_of('') || _a || '' ?};
_len:=+_str;
{? _len>0
|| _sum:=0;
   _err:=0;
   _wsp:=3;
   {!
   |? _ch:=1+_str; _str:=1-_str;
      {? exec('isDigit','#string',_ch)
      || _sum+=_wsp*(#_ch);
         {? _wsp=3 || _wsp:=1 || _wsp:=3 ?}
      || _err:=1
      ?};
      ~_err & _str<>''
   !};
   _res:={? _err || '' || $((10-(_sum%*10))%*10) ?}
?};
_res


\infoEANP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [RR.xx]
:: OPIS: zwraca informację dodatkową dla pozycji operacji
::   WE: [_a] - EANN idadd
::       [_b] - M idadd
::       [_c] - EANL idadd
::       [_d] - kod identyfikujący dostawę
::       [_e] - PAL idadd
::       [_f] - rodzaj wyniku:
::                1-stany wg wymiarów
::                2-atrybut indeksu
::   WY: informacja dodatkowa
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_eannR:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_mat_R:={? var_pres('_b')=type_of(null()) || _b || null() ?};
_lok_R:={? var_pres('_c')=type_of(null()) || _c || null() ?};
_scean:={? var_pres('_d')=type_of('') || _d || '' ?};
_pal_R:={? var_pres('_e')=type_of(null()) || _e || null() ?};
_r_res:={? var_pres('_f')=type_of(0) & _f>=0 & _f<3 || _f || 0 ?};

{? _r_res=1 & _mat_R<>null()
||
:: Przykład obliczenia stanów dla podanych parametrów
   _dokl_m:=exec('FindAndGet','#table',M,_mat_R,,"DOKL",0);
   _jm:=exec('FindAndGet','#table',M,_mat_R,,"J().KOD",0);
   _stn:=0;
   _rok:=form((date()~1)-2000,-2,0,'99');
   exec('mag_psh','open_tab');
   exec('stan_psh','open_tab');
   exec('mag_open','open_tab',ST.ODDZ,_rok);
   exec('stan_open','open_tab',ST.ODDZ,_rok);
   {? _scean<>''
   || SLD.index('SCEAN');
      SLD.prefix(_scean,);
      {? SLD.first()
      || {!
         |? {? (_mat_R=null() | SLD.SL().M=_mat_R)
             & (_lok_R=null() | SLD.SL().EANL=_lok_R)
             & (_pal_R=null() | SLD.SL().PAL=_pal_R)
            || _stn+=SLD.IL
            ?};
            SLD.next()
         !}
      ?}
   || SL.index('S2');
      SL.prefix(_mat_R);
      {? SL.first()
      || {!
         |? {? (_lok_R=null() | SL.EANL=_lok_R)
             & (_pal_R=null() | SL.PAL=_pal_R)
            || _stn+=SL.IL
            ?};
            SL.next()
         !}
      ?}
   ?};
   exec('mag_pop','open_tab');
   exec('stan_pop','open_tab');
   _res:='Stan dostępny: %1 [%2]'@[form(_stn,,_dokl_m,'99'),_jm]
|? _r_res=2 & _mat_R<>null()
||
:: Przykład zwrócenia informacji zapisanej na atrybutach indeksów
   M.cntx_psh();
   M.prefix();
   {? M.seek(_mat_R) & M.M_ATR_B<>null()
   || _ch:='';
      {! _ii:=1..10
      |! _war:=($('M.WAR%1'[form(_ii,-2,0,'99')]))();
         {? _war<>''
         || _acr:=($('M.M_ATR_B().SL_%1().NA'[form(_ii,-2,0,'99')]))();
            {? _acr<>'' || _acr+=':' ?};
            _res+='%3%1%2'[_acr,_war,_ch];
            _ch:=', '
         ?}
      !}
   ?};
   M.cntx_pop()
?};
_res

:Sign Version 2.0 jowisz:1045 2024/02/14 14:27:37 8159561ec43263c62a22bf95031bcbd852dd157370229c387acb6ca2cfb102d036ded7b8661efab427b951331e61c62b6c45df8f6903a17e3d155f9998ca2639240d977b51e66d6fa34c626e7391b0907c4ea247b97aa2a4321bb29e19cec22b51930e6291b7832b0ef08a5645489dc6ed91ed068406d1fc2b431c46f8a9ce2d
