:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: %remonty.fml
:: Utworzony: 02.08.2019
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do parametryzacji dziedziny gospodarki remontowej
::======================================================================================================================


\info2desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Ustala treść na ToDo dla czynności ręcznej, której parametr jest typu MEMO z zawartością JSON
::       Ustala także termin realizacji zapisu na ToDo
::       Parametr JINFO wystawiany jest przez czynność TRE_CKL_GCKL - Obsługa zdarzeń cyklicznych
::       Przykładowe użycie na ToDo:
::        params_exec('info2todo','%remonty','p01')
::   WE: _a - symbol parametru, np. 'p01'
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_par:=_a;

_desc:='';
_in:=_mp.load(exec('kind_in','#b_port'));

:: Wyciąga dane z JSON i ustala opis i - o ile można - deadline
{? var_pres(_par,_in)
|| _json:=($('_a.'+_par))(_in);
   _obj:=json_parse(_json);
   _deadline:=exec('str2date','#convert',_obj.DEADLINE);
   {? _deadline<>date(0,0,0)
   || _mp.set_deadline(_deadline);
      _desc:='Wykonaj \'%1\' dla zasobu \'%2\' do dnia %3.'@@
            [_obj.REM_KATG.SYMBOL,_obj.REM_ZAS.SYMBOL,_obj.DEADLINE]
   || _desc:='Wykonaj \'%1\' dla zasobu \'%2\'.'@@
            [_obj.REM_KATG.SYMBOL,_obj.REM_ZAS.SYMBOL]
   ?}
?};
_desc


\info2main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Ustala treść formuły głównej dla czynności ręcznej, której parametr jest typu MEMO z zawartością JSON
::       Ustala także termin realizacji zapisu na ToDo
::       Parametr JINFO wystawiany jest przez czynność TRE_CKL_GCKL - Obsługa zdarzeń cyklicznych
::       Przykładowe użycie na ToDo:
::        params_exec('info2main','%remonty','p01')
::   WE: _a - symbol parametru, np. 'p01'
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().mp;
_par:=_a;

_result:=1;
_ask:='';
_in:=_mp.load(exec('kind_in','#b_port'));

:: Wyciąga dane z JSON
{? var_pres(_par,_in)
|| _json:=($('_a.'+_par))(_in);
   _obj:=json_parse(_json);
   _deadline:=exec('str2date','#convert',_obj.DEADLINE);
   {? _deadline<>date(0,0,0)
   || _ask:='Czy wykonano \'%1\' dla zasobu \'%2\' do dnia %3?'@
            [_obj.REM_KATG.SYMBOL,_obj.REM_ZAS.SYMBOL,_obj.DEADLINE]
   || _ask:='Czy wykonano \'%1\' dla zasobu \'%2\'?'@
            [_obj.REM_KATG.SYMBOL,_obj.REM_ZAS.SYMBOL]
   ?};
   _result:=FUN.ask(_ask)
|| FUN.emsg('Nie można ustalić wartości parametru %1, czynność zostanie zakończona.'@[_par])
?};
_result


\info2sub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Formuła zwraca temat wiadomości o stanie zgłoszenia remontowego
::       Sposób użycia - wpisanie do pola 'Temat': $exec('info2sub','%remonty',_a.p01)
::       albo: $exec('info2sub','%remonty',params_get().in.p01)
::   WE: _a - JSON - Parametr JINFO wystawiany jest przez czynność TRE_CKL_GCKL - Obsługa zdarzeń cyklicznych
::----------------------------------------------------------------------------------------------------------------------
_json:=_a;
_obj:=json_parse(_json);

_deadline:=exec('str2date','#convert',_obj.DEADLINE);
{? _deadline<>date(0,0,0)
|| _sub:='Wykonaj \'%1\' dla zasobu \'%2\' do dnia %3.'
         [_obj.REM_KATG.SYMBOL,_obj.REM_ZAS.SYMBOL,_obj.DEADLINE]
|| _sub:='Wykonaj \'%1\' dla zasobu \'%2\'.'
         [_obj.REM_KATG.SYMBOL,_obj.REM_ZAS.SYMBOL]
?};
_sub


\info2txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Formuła zwraca treść wiadomości o stanie zgłoszenia remontowego (do części tekstowej e-maila)
::       Sposób użycia - wpisanie do pola 'Treść': $exec('info2txt','%remonty',_a.p01)
::       albo: $exec('info2txt','%remonty',params_get().in.p01)
::   WE: _a - JSON - Parametr JINFO wystawiany jest przez czynność TRE_CKL_GCKL - Obsługa zdarzeń cyklicznych
::----------------------------------------------------------------------------------------------------------------------
_json:=_a;
_obj:=json_parse(_json);

_deadline:=exec('str2date','#convert',_obj.DEADLINE);
{? _deadline<>date(0,0,0)
|| _txt:='Wykonaj \'%1\' dla zasobu \'%2\' do dnia %3.'
         [_obj.REM_KATG.SYMBOL,_obj.REM_ZAS.SYMBOL,_obj.DEADLINE]
|| _txt:='Wykonaj \'%1\' dla zasobu \'%2\'.'
         [_obj.REM_KATG.SYMBOL,_obj.REM_ZAS.SYMBOL]
?};
_txt


\info2html
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.42]
:: OPIS: Formuła zwraca treść wiadomości o stanie zgłoszenia remontowego (do części HTML e-maila)
::       Sposób użycia - wpisanie do pola 'Treść html': $exec('info2html','%remonty',_a.p01)
::       albo: $exec('info2html','%remonty',params_get().in.p01)
::   WE: _a - JSON - Parametr JINFO wystawiany jest przez czynność TRE_CKL_GCKL - Obsługa zdarzeń cyklicznych
::----------------------------------------------------------------------------------------------------------------------
_json:=_a;
_obj:=json_parse(_json);

_deadline:=exec('str2date','#convert',_obj.DEADLINE);
{? _deadline<>date(0,0,0)
|| _html:='<p>Wykonaj <b>%1</b> dla zasobu <b>%2</b> do dnia <b>%3</b>.</p>'
         [_obj.REM_KATG.SYMBOL,_obj.REM_ZAS.SYMBOL,_obj.DEADLINE]
|| _html:='<p>Wykonaj <b>%1</b> dla zasobu <b>%2</b>.</p>'
         [_obj.REM_KATG.SYMBOL,_obj.REM_ZAS.SYMBOL]
?};
_html


\info2to
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.14]
:: OPIS: Formuła zwraca listę adresów, które mają dostawać e-maile o zasobie remontowym
::       Sposób użycia - wpisanie do pola 'Do': $exec('info2to','%remonty',_a.p01)
::       albo: $exec('info2to','%remonty',params_get().in.p01)
::       UWAGA: jeżeli przetwarzana osoba albo kontrahent nie ma zdefiniowanego adresu e-mail,
::              to formuła zwróci pustą listę
::   WE: _a - JSON - Parametr JINFO wystawiany jest przez czynność TRE_CKL_GCKL - Obsługa zdarzeń cyklicznych
::   WY: lista adresów e-mail oddzielonych przecinkami
::----------------------------------------------------------------------------------------------------------------------
_json:=_a;
_obj:=json_parse(_json);

_result:='';
REM_ZAS.cntx_psh();
REM_ZAS.prefix();
{? REM_ZAS.seek(_obj.REM_ZAS.Ref)
||
:: Kontrahent
   _email:=exec('FindAndGet','#table',KH,REM_ZAS.KH,,"EM",'');
   {? _email<>'' || _result+=_email+',' ?};
:: Użytkownik zasobu - na bieżącą datę
   _email:=exec('rem_zasu_email','zasoby',REM_ZAS.ref(),date());
   {? _email<>'' & _result*_email=0 || _result+=_email+',' ?};
   ~~
?};
REM_ZAS.cntx_pop();
_result


\info2cc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [21.14]
:: OPIS: Formuła zwraca listę adresów, które mają dostawać e-mail 'do wiadomości' o zasobie remontowym
::       Sposób użycia - wpisanie do pola 'DW': $exec('info2cc','%remonty',_a.p01)
::       albo: $exec('info2cc','%remonty',params_get().in.p01)
::       UWAGA: jeżeli żaden przetwarzany użytkownik nie ma wypełnionego pola USERS.EMAIL, to formuła zwróci pustą listę
::   WE: _a - JSON - Parametr JINFO wystawiany jest przez czynność TRE_CKL_GCKL - Obsługa zdarzeń cyklicznych
::   WY: lista adresów e-mail oddzielonych przecinkami
::----------------------------------------------------------------------------------------------------------------------
_json:=_a;
_obj:=json_parse(_json);

_result:='';
REM_ZAS.cntx_psh();
REM_ZAS.prefix();
{? REM_ZAS.seek(_obj.REM_ZAS.Ref)
||
:: Opiekunowie zasobów
   REM_KATO.index('REM_KAT');
   REM_KATO.prefix(REM_ZAS.KAT);
   {? REM_KATO.first()
   || {!
      |? {? REM_KATO.USERS<>null()
         || REM_KATO.USERS();
            _email:=USERS.EMAIL;
            {? _email<>''
            || {? _result*_email=0 || _result+=_email+',' ?}
            || {? USERS.OSOBA<>null()
               || _email:=exec('email','osoba',USERS.OSOBA);
                  {? _email<>'' & _result*_email=0 || _result+=_email+',' ?}
               ?}
            ?}
         ?};
         REM_KATO.next()
      !}
   ?}
?};
REM_ZAS.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2021/04/09 15:27:24 98c6de30716af6a98fd3c0a4e943abd57353db02a2847e4d2d4b2ea21f4e4b903092ea2b528bfd84eb594c563274a53807d4b100fcc63ba82fa6e8b1420890c3b853a5050a15701a807cf42a5a2cc9cd5968e2becb88747d580727c5d2eda326ba290c6f8e31e84cc38535781d0aa39c3975d1ab525b376fd4938cfc80230c2b
