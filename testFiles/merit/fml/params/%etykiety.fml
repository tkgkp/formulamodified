:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: %etykiety.fml
:: Utworzony: 28.07.2022
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi etykiet
::======================================================================================================================

\tagi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Tworzy domyślmne tagi dla obsługi etykiet
::----------------------------------------------------------------------------------------------------------------------
_add:="URZ_TAG.cntx_psh();
       URZ_TAG.index('URZ_TAG');
       URZ_TAG.prefix(_a,);
       {? URZ_TAG.first()
       || URZ_TAG.OPIS:=_b;
          URZ_TAG.FORMULA:=_c;
          URZ_TAG.RODZAJ:=_d;
          URZ_TAG.put(1)
       || URZ_TAG.blank();
          URZ_TAG.KOD:=_a;
          URZ_TAG.OPIS:=_b;
          URZ_TAG.FORMULA:=_c;
          URZ_TAG.RODZAJ:=_d;
          URZ_TAG.add(1)
       ?};
       URZ_TAG.cntx_pop()";

URZ_TAG.index('URZ_TAG');
URZ_TAG.prefix();
_add('<NRI>','Numer inwentarzowy środka lub elementu','SRST.NRI','DF');
_add('<NST>','Nazwa środka lub elementu','SRST.NST','DF');
_add('<FIRMA>','Nazwa skrócona firmy','XINFO.SKROT','DW');
_add('<GRUPA>','Grupa środka','SRST.GR().GR','DF');
_add('<ODD>','Jednostka księgowa środka lub elementu','SRST.ODD().OD','DF');
_add('<JORG>','Jednostka organizacyjna środka lub elementu','SRST.JORG().SYMBOL','DF');
_add('<STX>','Znak ASCII nr 2','%2','T');
_add('<CR>','Znak ASCII nr 13','%13','T');
_add('<LF>','Znak ASCII nr 10','%10','T');
_add('<SOH>','Znak ASCII nr 1','%1','T');
_add('<HEIGHT>','Wysokość etykiety w punktach (EPL2)','$(URZ_LAB.ROZM_Y*8)','T');
_add('<HEIGHT_MM>','Wysokość etykiety w mm (TSPL)','$(URZ_LAB.ROZM_Y)','T');
_add('<WIDTH>','Szerokość etykiety w punktach (EPL2)','$(URZ_LAB.ROZM_X*8)','T');
_add('<WIDTH_MM>','Szerokość etykiety w mm (TSPL)','$(URZ_LAB.ROZM_X)','T');
_add('<HOLE>','Odstęp między etykietami w punktach (EPL2)','$(URZ_LAB.ODSTEP*8)','T');
_add('<HOLE_MM>','Odstęp między etykietami w mm (TSPL)','$(URZ_LAB.ODSTEP)','T');
_add('<TIMESTMP>','Znacznik czasowy','exec(\'obiegi_etyk\',\'urzadzenia\')','T');
:: Logistyka
_add('<GS1code:??>','Kod kreskowy wg standardu GS1','exec(\'tagGS1\',\'urzadzenia\',_a,0)','DL');
_add('<GS1name:??>','Zapis alfanumeryczny wg standardu GS1','exec(\'tagGS1\',\'urzadzenia\',_a,1)','DL');
_add('<GS1desc:??>','Dana której dotyczy kod wg standardu GS1','exec(\'tagGS1\',\'urzadzenia\',_a,2)','DL');
_add('<KTM>','Indeks materiałowy','exec(\'material\',\'%etykiety\',\'KTM\')','DL');
_add('<NAZ>','Indeks materiałowy - nazwa','exec(\'material\',\'%etykiety\',\'N\')','DL');
_add('<KODK>','Indeks materiałowy - kod kreskowy','exec(\'material\',\'%etykiety\',\'KODK\')','DL');
_add('<JM>','Jednostka miary','exec(\'material\',\'%etykiety\',\'J().KOD\')','DL');
_add('<JM2>','Druga jednostka miary','exec(\'material\',\'%etykiety\',\'J2().KOD\')','DL');
_add('<M_WN>','Waga netto (indeks materiałowy)','$exec(\'material\',\'%etykiety\',\'WN\')','DL');
_add('<M_WB>','Waga brutto (indeks materiałowy)','$exec(\'material\',\'%etykiety\',\'WB\')','DL');
_add('<TPAL>','Typ palety','exec(\'paleta\',\'%etykiety\',\'TPAL().TYP\')','DL');
_add('<PAL>','Kod palety','exec(\'paleta\',\'%etykiety\',\'KODK\')','DL');
_add('<ILOSC>','Ilość','exec(\'ilosc\',\'%etykiety\',0)','DL');
_add('<ILOSC2>','Ilość druga','exec(\'ilosc\',\'%etykiety\',1)','DL');
_add('<LOK_SYM>','Lokalizacja w magazynie - symbol','exec(\'lokalizacja\',\'%etykiety\',\'KOD\')','DL');
_add('<LOK_EAN>','Lokalizacja w magazynie - kod kreskowy','exec(\'lokalizacja\',\'%etykiety\',\'EAN\')','DL');
_add('<LOK_OPI>','Lokalizacja w magazynie - opis','exec(\'lokalizacja\',\'%etykiety\',\'OP\')','DL');
_add('<MG_SYM>','Magazyn - symbol','exec(\'lokalizacja\',\'%etykiety\',\'MG().SYM\')','DL');
_add('<MG_NAZ>','Magazyn - nazwa','exec(\'lokalizacja\',\'%etykiety\',\'MG().NAZ\')','DL');
_add('<PAL_RODZ>','Struktura palety','exec(\'m_paleta\',\'%etykiety\',1)','DL');
_add('<PAL_KTM>','Jednorodna paleta: indeks','exec(\'m_paleta\',\'%etykiety\',2)','DL');
_add('<PAL_NAZ>','Jednorodna paleta: nazwa','exec(\'m_paleta\',\'%etykiety\',3)','DL');
_add('<PAL_KODK>','Jednorodna paleta: kod kreskowy','exec(\'m_paleta\',\'%etykiety\',4)','DL');
_add('<PAL_IL>','Jednorodna paleta: ilość','exec(\'m_paleta\',\'%etykiety\',5)','DL');
_add('<PAL_JM>','Jednorodna paleta: ilość','exec(\'m_paleta\',\'%etykiety\',6)','DL');
_add('<PARTIA_SYM>','Partia produkcyjna oznaczenie','exec(\'partia\',\'%etykiety\',1)','DL');
_add('<PARTIA_EAN>','Partia produkcyjna kod kreskowy','exec(\'partia\',\'%etykiety\',2)','DL');
_add('<ID_DOST>','Identyfikator dostawy','exec(\'id_dost\',\'%etykiety\')','DL');
_add('<USR_KOD>','Identyfikator dostawy','exec(\'user\',\'%etykiety\',0)','DL');
_add('<USR_DANE>','Identyfikator dostawy','exec(\'user\',\'%etykiety\',1)','DL');
~~


\material
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca dane związane z materiałem w zależności od miejsca wywołania
::   WE: [_a] - kod pola do zwrócenia (domyślnie) KODK-kod kreskowy
::   WY: wartość pola
::----------------------------------------------------------------------------------------------------------------------
_fld:={? var_pres('_a')=type_of('') || _a || 'KODK' ?};
_flb:={? _wsk:=(_fld*'()') || (_wsk-1)+_fld || _fld ?};
_res:='';

{? var_pres(_flb,M)>0
|| _eand:=EANX.EAND;
   _beertab:=BEER.TAB;
   {? _eand<>'' & (BEER.TAB:=_eand; exec('Struct','libfml',,'BEER.TAB',1)<>'')
   || {? BEER.TAB<>'PAL'
      || _atrmjs:=ATR.MJS;
         ATR.MJS:=BEER.TAB;
         _afl:=exec('acr2acr','mat_atr');
         {? BEER.TAB='DK_L' & DK_L.DK<>null() || _afl:='DK().M' ?};
         _acr:={? BEER.TAB='M' || '%1.%2'[BEER.TAB,_fld] || '%1.%2().%3'[BEER.TAB,_afl,_fld] ?};
         ATR.MJS:=_atrmjs;
         _res:={? BEER.TAB='M' | var_pres(_afl,($BEER.TAB)())>0 | _afl*'().' || ($_acr)() || '' ?}
      || _res:=PAL.MKTM
      ?}
   ?};
   BEER.TAB:=_beertab
?};
_res


\ilosc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca dane związane z materiałem w zależności od miejsca wywołania
::   WE: [_a] - 1-druga jednostka, 0 (domyślnie) - ewidencyjna
::   WY: wartość pola
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_res:='';

_eand:=EANX.EAND;
_beertab:=BEER.TAB;
{? _eand<>'' & (BEER.TAB:=_eand; exec('Struct','libfml',,'BEER.TAB',1)<>'')
|| _afl:={? ~_typ
         || {? BEER.TAB='EANP'     || 'ILS'
            |? BEER.TAB='SC'       || 'S'
            |? BEER.TAB='PROD_REJ' || {? PROD_REJ.ILW>0 || 'ILW' || 'IL' ?}
            || 'IL'
            ?}
         || {? BEER.TAB='EANP'     || 'ILS2'
            |? BEER.TAB='SC'       || 'S2'
            |? BEER.TAB='PROD_REJ' || {? PROD_REJ.ILW>0 || 'ILW' || 'IL' ?}
            || 'IL2'
            ?}
         ?};
   _acr:={? BEER.TAB='DK_L' || 'fabs(%1.%2)'[BEER.TAB,_afl] || '%1.%2'[BEER.TAB,_afl] ?};
   _res:={? var_pres(_afl,($BEER.TAB)())>0 || $($_acr)() || '' ?}
?};
BEER.TAB:=_beertab;
_res


\ilosc2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca dane związane z materiałem w zależności od miejsca wywołania
::   WE: [_a] - 1-druga jednostka, 0 (domyślnie) - ewidencyjna
::   WY: wartość pola
::----------------------------------------------------------------------------------------------------------------------
_typ:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_res:='';

_eand:=EANX.EAND;
_beertab:=BEER.TAB;
{? _eand<>'' & (BEER.TAB:=_eand; exec('Struct','libfml',,'BEER.TAB',1)<>'')
|| _afl:={? ~_typ
         || {? BEER.TAB='EANP' || 'ILS'
            |? BEER.TAB='SC'   || 'S'
            || 'IL'
            ?}
         || {? BEER.TAB='EANP' || 'ILS2'
            |? BEER.TAB='SC'   || 'S2'
            || 'IL2'
            ?}
         ?};
   _acr:={? BEER.TAB='DK_L' || 'fabs(%1.%2)'[BEER.TAB,_afl] || '%1.%2'[BEER.TAB,_afl] ?};
   _res:={? var_pres(_afl,($BEER.TAB)())>0 || $($_acr)() || '' ?}
?};
BEER.TAB:=_beertab;
_res


\paleta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca dane związane z paletą w zależności od miejsca wywołania
::   WE: [_a] - kod pola do zwrócenia (domyślnie) KODK-kod kreskowy
::   WY: wartość pola
::----------------------------------------------------------------------------------------------------------------------
_fld:={? var_pres('_a')=type_of('') || _a || 'KODK' ?};
_flb:={? _wsk:=(_fld*'()') || (_wsk-1)+_fld || _fld ?};
_res:='';

{? var_pres(_flb,PAL)>0
|| _eand:=EANX.EAND;
   _beertab:=BEER.TAB;
   {? _eand<>'' & (BEER.TAB:=_eand; exec('Struct','libfml',,'BEER.TAB',1)<>'')
   || _afl:='PAL';
      _acr:={? BEER.TAB='PAL'
            || '%1.%2'[BEER.TAB,_fld]
            || '%1.%2().%3'[BEER.TAB,_afl,_fld]
            ?};
      _res:={? var_pres(_afl,($BEER.TAB)())>0 | _afl*'().' | BEER.TAB='PAL' || ($_acr)() || '' ?}
   ?};
   BEER.TAB:=_beertab
?};
_res


\dane
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca dane związane z miejscem wywołania do wyboru etykiety
::   WE: _a - kod wywołania
::       _b - rodzaj danej 0-KOD, 1-OPIS, 2-IL, 3-uidref M, 4-IL2, 5-uidref KH
::   WY: wartość pola
::----------------------------------------------------------------------------------------------------------------------
_kod:={? var_pres('_a')=type_of('') || _a || '' ?};
_rfl:={? var_pres('_b')=type_of(0) & _b>=0 & _b<6 || _b || -1 ?};
_res:='';

{? _kod<>'' & _rfl>=0
|| {? _kod='DK'
   || {? _rfl=0 || _res:=DK.M().KTM
      |? _rfl=1 || _res:=DK.M().N
      |? _rfl=2 || _res:=DK.IL
      |? _rfl=3 || _res:=DK.M().uidref()
      |? _rfl=4 || _res:=DK.IL2
      |? _rfl=5 || _res:=DK.N().KH().uidref()
      ?}
   |? _kod='DK_L'
   || {? _rfl=0 || _res:={? DK_L.DK<>null() || DK_L.DK().M().KTM || DK_L.M().KTM ?}
      |? _rfl=1 || _res:={? DK_L.DK<>null() || DK_L.DK().M().N || DK_L.M().N ?}
      |? _rfl=2 || _res:=DK_L.IL
      |? _rfl=3 || _res:={? DK_L.DK<>null() || DK_L.DK().M().uidref() || DK_L.M().uidref() ?}
      |? _rfl=4 || _res:=DK_L.IL2
      |? _rfl=5 || _res:={? DK_L.DK<>null() || DK_L.DK().N().KH().uidref() || '' ?}
      ?}
   |? _kod='ND'
   || {? _rfl=0 || _res:=ND.SYM
      |? _rfl=1 || _res:=ND.KH().SKR
      |? _rfl=2 || _res:=1
      |? _rfl=3 || ''
      |? _rfl=4 || _res:=1
      |? _rfl=5 || _res:=ND.KH().uidref()
      ?}
   |? _kod='SC'
   || {? _rfl=0 || _res:=SC.M().KTM
      |? _rfl=1 || _res:=SC.M().N
      |? _rfl=2 || _res:=SC.S
      |? _rfl=3 || _res:=SC.M().uidref()
      |? _rfl=4 || _res:=SC.S2
      |? _rfl=5 || _res:=''
      ?}
   |? _kod='M'
   || {? _rfl=0 || _res:=M.KTM
      |? _rfl=1 || _res:=M.N
      |? _rfl=2 || _res:=1
      |? _rfl=3 || _res:=M.uidref()
      |? _rfl=4 || _res:=1
      |? _rfl=5 || _res:=''
      ?}
   |? _kod='MKODK'
   || {? _rfl=0 || _res:=MKODK.M().KTM
      |? _rfl=1 || _res:=MKODK.M().N
      |? _rfl=2 || _res:=1
      |? _rfl=3 || _res:=MKODK.M().uidref()
      |? _rfl=4 || _res:=1
      |? _rfl=5 || _res:=''
      ?}
   |? _kod='EANL'
   || {? _rfl=0 || _res:=EANL.KOD
      |? _rfl=1 || _res:=EANL.OP
      |? _rfl=2 || _res:=1
      |? _rfl=3 || _res:=''
      |? _rfl=4 || _res:=1
      |? _rfl=5 || _res:=''
      ?}
   |? _kod='EANP'
   || {? _rfl=0 || _res:={? EANP.M<>null() || EANP.M().KTM |? EANP.PAL<>null() || EANP.PAL().KODK || '' ?}
      |? _rfl=1 || _res:={? EANP.M<>null()
                         || EANP.M().N
                         |? EANP.PAL<>null()
                         || 'Typ palety: %1'@[EANP.PAL().TPAL().TYP]
                         || ''
                         ?}
      |? _rfl=2 || _res:=EANP.ILS
      |? _rfl=3 || _res:={? EANP.M<>null() || EANP.M().uidref() |? EANP.PAL<>null() || EANP.PAL().uidref() || '' ?}
      |? _rfl=4 || _res:=EANP.ILS2
      |? _rfl=5 || _res:=EANP.EANN().KH().uidref()
      ?}
   |? _kod='PAL'
   || {? _rfl=0 || _res:=PAL.KODK
      |? _rfl=1 || _res:='Paleta typu: %1'[PAL.TPAL().TYP]
      |? _rfl=2 || _res:=1
      |? _rfl=3 || _res:=''
      |? _rfl=4 || _res:=1
      |? _rfl=5 || _res:=''
      ?}
   |? _kod='PROD_REJ'
   || {? _rfl=0 || _res:=PROD_REJ.M().KODK
      |? _rfl=1 || _res:=PROD_REJ.M().N
      |? _rfl=2 || _res:={? PROD_REJ.ILW>0 || PROD_REJ.ILW || PROD_REJ.IL ?}
      |? _rfl=3 || _res:=PROD_REJ.M().uidref()
      |? _rfl=4 || _ilw:={? PROD_REJ.ILW>0 || PROD_REJ.ILW || PROD_REJ.IL ?};
                   {? PROD_REJ.M().J2<>null()
                   || _ws2:=exec('oblWSP','jm',PROD_REJ.M);
                      _dokl:={? PROD_REJ.M<>null || exec('jaka_dok_m','jm',PROD_REJ.M) || 3 ?};
                      _dokl_s:=exec('jaka_dok_mjm','jm',PROD_REJ.M,PROD_REJ.M().J2,PROD_REJ.M().J);
                      {? _dokl_s<0 || _dokl_s:=_dokl ?};
                      _res:={? _ws2>0 || _ilw/_ws2 $ (_dokl_s+1) || 0 ?};
                      roundmet(BEER.MDOKL)
                   || _res:=0
                   ?}
      |? _rfl=5 || _res:=PROD_REJ.KH().uidref()
      ?}
   |? _kod='ZPARN'
   || {? _rfl=0 || _res:=ZPARN.KTM().KODK
      |? _rfl=1 || _res:=ZPARN.KTM().N
      |? _rfl=2 || _res:=ZPARN.IL
      |? _rfl=3 || _res:=ZPARN.KTM().uidref()
      |? _rfl=4 || {? ZPARN.KTM().J2<>null()
                   || _ws2:=exec('oblWSP','jm',ZPARN.KTM);
                      _dokl:={? ZPARN.KTM<>null || exec('jaka_dok_m','jm',ZPARN.KTM) || 3 ?};
                      _dokl_s:=exec('jaka_dok_mjm','jm',ZPARN.KTM,ZPARN.KTM().J2,ZPARN.KTM().J);
                      {? _dokl_s<0 || _dokl_s:=_dokl ?};
                      _res:={? _ws2>0 || _ilw/_ws2 $ (_dokl_s+1) || 0 ?};
                      roundmet(BEER.MDOKL)
                   || _res:=0
                   ?}
      |? _rfl=5 || _res:=''
      ?}
   |? _kod='USERS'
   || _rodz:={? USERS.EKIOSK='T' || '[e]' || '' ?}+{? USERS.MOBIL='T' || '[m]' || '' ?};
      {? _rfl=0 || _res:=USERS.IP
      |? _rfl=1 || _res:='%1 %2'[USERS.DANE,_rodz]
      |? _rfl=2 || _res:=1
      |? _rfl=3 || _res:=''
      |? _rfl=4 || _res:=1
      |? _rfl=5 || _res:=''
      ?}
   || {? _rfl=2
       | _rfl=4 || _res:=0
                || _res:=''
      ?}
   ?}
?};
_res


\eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Tworzy domyślne systemowe miejsca wywoałania dla obsługi etykiet
::----------------------------------------------------------------------------------------------------------------------
_add:="_kod:=(8+(_a+(8*'_')))+(8+(_b+(8*'_')));
       EANT.cntx_psh();
       EANT.index('KOD');
       EANT.prefix(_kod,);
       {? EANT.first()
       || EANT.TAB:=_a;
          EANT.SUB:=_b;
          EANT.IND:=_c;
          EANT.OPIS:=_d;
          {? EANT.SYS='N' | EANT.LOG='' || EANT.LOG:=_e ?};
          EANT.GRP:=_f;
          EANT.DOM:=_g;
          EANT.put(1)
       || EANT.blank();
          EANT.KOD:=_kod;
          EANT.TAB:=_a;
          EANT.SUB:=_b;
          EANT.IND:=_c;
          EANT.OPIS:=_d;
          EANT.LOG:=_e;
          EANT.A:='T';
          EANT.SYS:='T';
          EANT.GRP:=_f;
          EANT.DOM:=_g;
          EANT.add(1)
       ?};
       EANT.cntx_pop()";

EANT.index('KOD');
EANT.prefix();
_add('DK_L','','','Dokument / Reorganizacja - dana pozycja','','','T');
_add('DK','DK_L','DK','Dokument / Reorganizacja - wszystkie pozycje','exec(\'mgWithDim\',\'%etykiety\',ST.MAG)','','T');
_add('DK','','','Dokument magazynowy - dana pozycja','','','T');
_add('DK_LN','DK_L','DK_LNLOK','Reorganizacja - pozycje','','','T');
_add('EANN','EANP','EANN','Operacja mobilna - wszystkie pozycje','','','T');
_add('EANP','','','Operacja mobilna - dana pozycja','','','T');
_add('ND','DK_L','CZYPAL','Dokument magazynowy - pozycje','exec(\'mgWithDim\',\'%etykiety\',ST.MAG)','NDPOZ','T');
_add('ND','DK','DOKMAG','Dokument magazynowy - pozycje','~exec(\'mgWithDim\',\'%etykiety\',ST.MAG)','NDPOZ','T');
_add('SC','','','Dostawa - dana pozycja','','','T');
_add('M','','','Indeks materiałowy','M.RODZ=\'T\'','','T');
_add('MKODK','','','Kod identyfikujący indeks materiałowy','','','T');
_add('EANL','','','Lokalizacja magazynu','','','T');
_add('MG','EANL','S1','Lokalizacje w magazynie','MG.SL=\'T\'','','T');
_add('PAL','','','Paleta','','','T');
_add('PROD_REJ','','','Rejestracja wykonania produkcji','','','T');
_add('ZL','','','Zlecenia produkcyjne/warsztatowe','','','T');
_add('ZPARN','','','Partie produkcyjne','','','T');
_add('USERS','','','Użytkownik','','','T');
_add('@','USERS','','Użytkownicy','USERS.IP<>\'\'','','T');
~~


\lokalizacja
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca dane związane z lokalizacją w zależności od miejsca wywołania
::   WE: [_a] - kod pola do zwrócenia (domyślnie) KOD-kod kreskowy
::   WY: wartość pola
::----------------------------------------------------------------------------------------------------------------------
_fld:={? var_pres('_a')=type_of('') || _a || 'KOD' ?};
_flb:={? _wsk:=(_fld*'()') || (_wsk-1)+_fld || _fld ?};
_res:='';

{? var_pres(_flb,EANL)>0
|| _acr:='%1.%2'['EANL',_fld];
   _res:=($_acr)()
?};
_res


\mgWithDim
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Kontroluje, czy magazyn jest z wymiarami i ewentualnie uzupełnia dane o domyślne wpisy
::   WE: [_a] - magazyn
::   WY: 1-magazyn z wymiarami, 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:=0;
_beermg:=BEER.MG;
BEER.MG:={? var_pres('_a')=type_of(null()) || _a || null() ?};
{? BEER.MG<>null() & BEER.MG().SL='T'
|| _res:=1;
   {? EANX.EAND='ND' | EANX.EAND='DK'
   || ND.cntx_psh();
      DK.cntx_psh();
      {? EANX.EAND='ND'
      || DK.index('DOKMAG');
         DK.prefix(ND.ref());
         {? DK.first()
         || {!
            |? exec('autoDK_L','magdok_wspolne');
               DK.next()
            !}
         ?}
      |? EANX.EAND='DK'
      || exec('autoDK_L','magdok_wspolne')
      ?};
      ND.cntx_pop();
      DK.cntx_pop()
   ?}
?};
BEER.MG:=_beermg;
_res


\szablonyZPL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Szablony logistyczne w języku ZPL
::   WE: _a - wskazanie na etykietę
::   WY: 1-wybrano 0-nie
::----------------------------------------------------------------------------------------------------------------------
_res:='';

VAR_DEL.delete('__szanzpl','__szapzpl');
__szanzpl:=tab_tmp(1,'OPIS','STRING[50]','Opis szablonu'
            ,'WYM','STRING[20]','Wymiary etykiety');
__szapzpl:=tab_tmp(2,'SQL','STRING[16]','Wskazanie na nagłówek szablonu'
            ,'LP','INTEGER','Lp'
            ,'POZ','STRING[255]','Treść linii'
            ,'LOG','STRING[255]','Treść warunku');

_addn:="__szanzpl.cntx_psh();
        __szanzpl.prefix();
        __szanzpl.blank();
        __szanzpl.OPIS:=_a;
        __szanzpl.WYM:=_b;
        _res:={? __szanzpl.add(1) || $__szanzpl.ref() || '' ?};
        __szanzpl.cntx_pop();
        _res";
_addp:="__szapzpl.cntx_psh();
        __szapzpl.prefix();
        __szapzpl.blank();
        __szapzpl.SQL:=_a;
        __szapzpl.LP:=_b;
        __szapzpl.POZ:=_c;
        __szapzpl.LOG:={? var_pres('_d')=type_of('') || _d || '' ?};
        __szapzpl.add(1);
        __szapzpl.cntx_pop()";

_nag:=_addn('Lokalizacja w magazynie','mm: 70 x 50');
{? _nag<>''
|| _addp(_nag,1,'^XA');
   _addp(_nag,2,'^CFB,40,20');
   _addp(_nag,3,'^FO20,20^FD<LOK_SYM>^FS');
   _addp(_nag,4,'^CFA,30,10');
   _addp(_nag,5,'^FO20,80^FD<LOK_OPI>^FS');
   _addp(_nag,6,'^CFA,40,20');
   _addp(_nag,7,'^FO20,130^FDMAGAZYN: <MG_SYM>^FS');
   _addp(_nag,8,'^CFA,20,10');
   _addp(_nag,9,'^FO20,170^FD<MG_NAZ>^FS');
   _addp(_nag,10,'^CFC,20');
   _addp(_nag,11,'^BY3,2,150');
   _addp(_nag,12,'^FO20,210^BC^FD<LOK_EAN>^FS');
   _addp(_nag,13,'^XZ')
?};
_nag:=_addn('Indeks materiałowy','mm: 70 x 50');
{? _nag<>''
|| _addp(_nag,1,'^XA');
   _addp(_nag,2,'^CFB,30,10');
   _addp(_nag,3,'^FO10,20^FD<KTM>^FS');
   _addp(_nag,4,'^CFA,20,5');
   _addp(_nag,5,'^FO10,70^FD<NAZ>^FS');
   _addp(_nag,6,'^CFA,20,10');
   _addp(_nag,7,'^FO10,110^FDJednostka miary: [<JM>]^FS');
   _addp(_nag,8,'^FO10,130^FDWaga netto: <M_WN> [kg]^FS');
   _addp(_nag,9,'^FO10,150^FDWaga brutto: <M_WB> [kg]^FS');
   _addp(_nag,10,'^CFC,20');
   _addp(_nag,11,'^BY2,2,180');
   _addp(_nag,12,'^FO20,190^BC^FD<KODK>^FS');
   _addp(_nag,13,'^XZ')
?};
_nag:=_addn('Dostawa w magazynie','mm: 70 x 50');
{? _nag<>''
|| _addp(_nag,1,'^XA');
   _addp(_nag,2,'^CFB,30,10');
   _addp(_nag,3,'^FO10,20^FD<KTM>^FS');
   _addp(_nag,4,'^CFA,20,5');
   _addp(_nag,5,'^FO10,70^FD<NAZ>^FS');
   _addp(_nag,6,'^CFA,40,20');
   _addp(_nag,7,'^FO20,130^FDILOSC: <ILOSC> [<JM>]^FS');
   _addp(_nag,10,'^CFC,20');
   _addp(_nag,11,'^BY2,2,180');
   _addp(_nag,12,'^FO20,190^BC^FD<KODK>^FS');
   _addp(_nag,13,'^XZ')
?};
_nag:=_addn('Paleta','mm: 70 x 50');
{? _nag<>''
|| _addp(_nag,1,'^XA');
   _addp(_nag,2,'^CFA,30,20');
   _addp(_nag,3,'^FO20,20^FDTYP PALETY: <TPAL>^FS');
   _addp(_nag,4,'^CFA,30,10');
   _addp(_nag,5,'^FO20,65^FD<PAL_RODZ>^FS');
   _addp(_nag,6,'^CFC,20');
   _addp(_nag,7,'^BY3,2,100');
   _addp(_nag,8,'^FO20,100^BC^FD<PAL>^FS');
   _addp(_nag,9,'^CFA,30,20');
   _addp(_nag,10,'^FO20,240^FD<PAL_KTM>^FS','exec(\'m_paleta\',\'%etykiety\',1)=\'Jednorodna\'');
   _addp(_nag,11,'^CFA,20,10');
   _addp(_nag,12,'^FO20,270^FD<PAL_NAZ>^FS','exec(\'m_paleta\',\'%etykiety\',1)=\'Jednorodna\'');
   _addp(_nag,13,'^BY2,2,60');
   _addp(_nag,14,'^FO20,300^BC^FD<PAL_KODK>^FS','exec(\'m_paleta\',\'%etykiety\',1)=\'Jednorodna\'');
   _addp(_nag,15,'^FO320,365^FDILOSC:<PAL_IL> <PAL_JM>^FS','exec(\'m_paleta\',\'%etykiety\',1)=\'Jednorodna\'');
   _addp(_nag,16,'^XZ')
?};
_nag:=_addn('Dane użytkownika','mm: 70 x 50');
{? _nag<>''
|| _addp(_nag,1,'^XA');
   _addp(_nag,6,'^CFA,40,12');
   _addp(_nag,7,'^FO20,60^FD<USR_DANE>^FS');
   _addp(_nag,10,'^CFC,20');
   _addp(_nag,11,'^BY2,2,180');
   _addp(_nag,12,'^FO20,120^BC^FD<USR_KOD>^FS');
   _addp(_nag,13,'^XZ')
?};
_win:=__szanzpl.mk_sel('Przykładowe szablony logistyczne [język ZPL]'@,'P',,'#szazpl',,,,,'U');
__szanzpl.win_fld(_win,,'OPIS',,,30,,1,'Opis etykiety'@);
__szanzpl.win_fld(_win,,'WYM',,,20,,1,'Wymiary etykiety'@);
__szanzpl.win_act(_win,,'Formuła','Wybierz'@@,,,,"sel_exit",1,,);
__szanzpl.win_act(_win,,'Szukaj');
__szanzpl.win_sel(_win);

__szanzpl.prefix();
{? __szanzpl.select() || _res:=$__szanzpl.ref() ?};
_res


\m_paleta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca dane związane z paletą, która jest w buforze
::   WE: [_a] - rodzaj: 1-struktura palety
::                    , 2-KTM dla jednorodnej
::                    , 3-Nazwa dla jednorodnej
::                    , 4-kod kreskowy dla jednorodnej
::                    , 5-ilość dla jednorodnej
::   WY: wartość typu string
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_pal:=PAL.ref();
_rfl:={? var_pres('_a')=type_of(0) & _a>0 & _a<7 || _a || -1 ?};

{? _pal<>null() & _rfl>0
|| PAL.cntx_psh();
   PAL_POZ.cntx_psh();
   PAL.prefix();
   {? PAL.seek(_pal)
   || _no_one:=PAL.MKTM='<KILKA POZYCJI>';
      {? _rfl=1 || {? _no_one || _res:='Niejednorodna' || _res:='Jednorodna' ?}
      |? _rfl=2 || {? _no_one || '' || _res:=exec('FindInSet','#table','M','MATKTM',PAL.MKTM,,"@.M.KTM",1,,'') ?}
      |? _rfl=3 || {? _no_one || '' || _res:=exec('FindInSet','#table','M','MATKTM',PAL.MKTM,,"@.M.N",1,,'') ?}
      |? _rfl=4 || {? _no_one || '' || _res:=exec('FindInSet','#table','M','MATKTM',PAL.MKTM,,"@.M.KODK",1,,'') ?}
      |? _rfl=5 || {? _no_one
                   || '0'
                   || _sum:=0;
                      _ch:=PAL.name()+1; {? _ch='y' || _ch:='t' ?};
                      {? PAL.AKT='T'
                      || PAL_POZ.use('paletyp')
                      || PAL_POZ.use('pale%1%2'[_ch,form(PAL.AR-2000,-2,0,'99')])
                      ?};
                      PAL_POZ.index('PAL');
                      PAL_POZ.prefix(_pal);
                      {? PAL_POZ.first() || {! |? _sum+=PAL_POZ.IL; PAL_POZ.next() !} ?};
                      _res:=$_sum
                   ?}
      |? _rfl=6 || {? _no_one || '' || _res:=exec('FindInSet','#table','M','MATKTM',PAL.MKTM,,"@.M.J().KOD",1,,'') ?}
      ?}
   ?};
   PAL.cntx_pop();
   PAL_POZ.cntx_pop()
?};
_res


\partia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca dane związane z partią
::   WE: [_a] - rodzaj: 1-kod partii
::                    , 2-kod kreskowy partii
::   WY: wartość typu string
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_zparn:={? EANX.EAND='ZPARN' || ZPARN.ref()
        |? EANX.EAND='DK'    || DK.PARTIA
        |? EANX.EAND='DK_L'  || DK_L.DK().PARTIA
        || null()
        ?};
_rfl:={? var_pres('_a')=type_of(0) & _a>0 & _a<3 || _a || -1 ?};

{? _zparn<>null() & _rfl>0
|| ZPARN.cntx_psh();
   ZPARN.prefix();
   {? ZPARN.seek(_zparn)
   || {? _rfl=1 || _res:=ZPARN.SYM
      |? _rfl=2 || _res:=ZPARN.ZPEAN
      ?}
   ?};
   ZPARN.cntx_pop()
?};
_res


\pobAtrybut
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca atrybut na podstawie przypisania do GS1
::   WE: _a - kod GS1
::   WY: wartość typu string
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_gs1:={? var_pres('_a')=type_of('') & (+_a)>0 || _a || '' ?};
_atrm_atr:=ATR.M_ATR;
_atrdk_c:=ATR.DK_C;
ATR.DK_C:={? EANX.EAND='ZPARN' || ZPARN.DK_C
          |? EANX.EAND='DK'    || DK.DK_C
          |? EANX.EAND='DK_L'  || DK_L.DK().DK_C
          |? EANX.EAND='SC'    || SC.DK_C
          |? EANX.EAND='ZL'    || ZL.DK_C
          || null()
          ?};
ATR.M_ATR:=ATR.DK_C().M_ATR;
M_ATR.cntx_psh();
{? ATR.M_ATR<>null()
|| _wsk:=0;
   {!
   |? _wsk+=1;
      {? ($('ATR.M_ATR().GS1%1'[form(_wsk,-2,0,'99')]))()=_gs1
      || _res:=($('ATR.DK_C().WAR%1'[form(_wsk,-2,0,'99')]))();
         _wsk:=10
      ?};
      _wsk<10
   !}
?};
M_ATR.cntx_pop();
ATR.DK_C:=_atrdk_c;
ATR.M_ATR:=_atrm_atr;
_res


\id_dost
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca dane związane z identyfikatorem dostawy w zależności od miejsca wywołania
::   WY: wartość pola
::----------------------------------------------------------------------------------------------------------------------
_res:='';

_eand:=EANX.EAND;
_beertab:=BEER.TAB;
{? _eand<>''
 & (BEER.TAB:=_eand; exec('Struct','libfml',,'BEER.TAB',1)<>'')
 & ~(';ND;MG;DK_LN;EANN;PROD_REJ;'*(';%1;'[BEER.TAB]))
|| _afl:={? BEER.TAB='M'     || 'KODK'
         |? BEER.TAB='MKODK' || 'KODK'
         |? BEER.TAB='EANL'  || 'EAN'
         |? BEER.TAB='PAL'   || 'KODK'
         || 'SCEAN'
         ?};
   _acr:='%1.%2'[BEER.TAB,_afl];
   _res:={? var_pres(_afl,($BEER.TAB)())>0 || $($_acr)() || '' ?}
?};
BEER.TAB:=_beertab;
_res


\user
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: zwraca dane związane z użytkownikiem w zależności od miejsca wywołania
::   WE: [_a] - wartość do zwrócenia (domyślnie) IP-kod kreskowy-0, 1-dane
::       [_b] - numer kolejnego przypisania w strukturze tabeli 1(domyślnie)-pierwszy, 2-...
::   WY: wartość pola
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_opc:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_lpu:={? var_pres('_b')=type_of(0) || _b || 1 ?};

_eand:=EANX.EAND;
_beertab:=BEER.TAB;
{? _eand<>'' & (_opc=0 | _opc=1)
 & (BEER.TAB:=_eand; exec('Struct','libfml',,'BEER.TAB',1)<>'')
 & (';USERS;ND;DK_LN;ZL;DK;DK_L;'*(';%1;'[BEER.TAB]))
|| _afl:={? BEER.TAB='ND' | BEER.TAB='DK_LN'  || 'US'
         |? BEER.TAB='ZL' & _lpu=1            || 'POWOL'
         |? BEER.TAB='ZL' & _lpu=2            || 'ZATW'
         |? BEER.TAB='ZL' & _lpu=3            || 'CLOSED'
         |? BEER.TAB='DK'                     || 'N().US'
         |? BEER.TAB='DK_L' & DK_L.DK<>null() || 'DK().N().US'
         |? BEER.TAB='DK_L'                   || 'DK_LN().US'
         || ''
         ?};
   _acr:={? BEER.TAB='USERS'
         || '%1.%2'[BEER.TAB,{? ~_opc || 'IP' |? _opc=1 || 'DANE' || '' ?}]
         || '%1.%2().%3'[BEER.TAB,_afl,{? ~_opc || 'IP' |? _opc=1 || 'DANE' || '' ?}]
         ?};
   _res:=$($_acr)()
?};
BEER.TAB:=_beertab;
_res


\testAutoEtyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Test automatycznego wydruku etykiet
::----------------------------------------------------------------------------------------------------------------------
_eant:=exec('FindAndGet','#table',EANT,'eantxxx 00000007',,,null());
_urz_lab:=exec('FindAndGet','#table',URZ_LAB,'urzadzel00000009',,,null());
_urz:=exec('FindAndGet','#table',URZ,'urzadzen00000002',,,null());
FUN.info(exec('etykieta','param_wydr','ND',_eant,_urz_lab,_urz,0))

:Sign Version 2.0 jowisz:1048 2023/06/23 14:15:44 598243079c1b066f6b2373f907e0f8d8d19af265ad423217a936dd467151074c762efeaeb94eb1922d0e87f405a7d67eeda27b399b6a91e6f8fc9db309532fcf2dcbe4711e685b27d9282648ed087f31ec2a46a282275900ca697cbefa3521aa8ca2196dc2540a63013c2d0804bae93c3da0c6ad36cc9420ac3d1af3eea0362a
