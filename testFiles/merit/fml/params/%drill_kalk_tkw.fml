:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: %drill_kalk_tkw.fml
:: Utworzony: 27.05.2015
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły wyświetlające szczegóły dla pozycji kalkulacji (drill-down)
::            Wyciąganie danych z tabel KALMAT, KALTLS, KALTOU, KALTTO, KALWRK
::======================================================================================================================


\drill_mat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Szczegóły kalkulacji technologii dla surowców
::       Formuła działa w kontekście bieżącej kalkulacji technologii
::       Dla porównania kalkulacji bierze VAR.A_KKTL i VAR.A_PKKTL
::       [_a] - typ wyświetlanych materiałów: 'S' - surowce, 'O' - odpady, [''] - wszystko
::  OLD: \drill_mat/tex_kalk.fml
::----------------------------------------------------------------------------------------------------------------------
_so:={? var_pres('_a')=type_of('') || _a || '' ?};
{? _so='' || _so:='SO' ?};
{? VAR.A_PKKTL=null()
||
   KALMAT.f_clear();
   KALMAT.clear();
   KALMAT.index('KSN');
::   KALMAT.prefix(KKTL.ref());
   _where:='KALMAT.KKTL=:_a';
   _where+={? _so='S'|| ' and IL>=0 ' |? _so='O' || 'and IL<0 ' || '' ?};
   KALMAT.f_set(,,_where,KKTL.ref());
   KALMAT.win_edit('RED');
   KALMAT.win_patt('WZOR');
   KALMAT.win_sel('WER');
   KALMAT.select();
   KALMAT.f_clear()
||
   _kalmat:=tab_tmp(1,
      'M','STRING[16]','$M.ref()',
      'KTM','STRING[50]','Kod surowca',
      'N','STRING[100]','Nazwa surowca',
      'J','STRING[10]','JM',
      'PRICE','REAL','Cena',
      'IL','REAL','Ilość',
      'WAR','REAL','Wartość',
      'POCH','STRING[1]','Pochodzenie',
      'P_PRICE','REAL','Cena',
      'P_IL','REAL','Ilość',
      'P_WAR','REAL','Wartość',
      'P_POCH','STRING[1]','Pochodzenie'
   );

   KALMAT.index('KSN');

   KALMAT.prefix(VAR.A_KKTL);
   {? KALMAT.first()
   ||
      {!
      |?
         {? _so*'S'>0 & KALMAT.IL>=0 | _so*'O'>0 & KALMAT.IL<0
         || _kalmat.blank();
            _kalmat.M:=$KALMAT.PT;
            _kalmat.KTM:=KALMAT.PT().KTM;
            _kalmat.N:=M.N;
            _kalmat.J:=M.J().KOD;
            _kalmat.PRICE:=KALMAT.PRICE;
            _kalmat.IL:=KALMAT.IL;
            _kalmat.WAR:=KALMAT.IL*KALMAT.PRICE;
            _kalmat.POCH:=KALMAT.POCH;
            _kalmat.add()
         ?};
         KALMAT.next()
      !}
   ?};

   KALMAT.prefix(VAR.A_PKKTL);
   {? KALMAT.first()
   ||
      {!
      |?
         {? _so*'S'>0 & KALMAT.IL>=0 | _so*'O'>0 & KALMAT.IL<0
         || _kalmat.prefix($KALMAT.PT);
            {? _kalmat.first()
            ||
               _kalmat.P_PRICE:=KALMAT.PRICE;
               _kalmat.P_IL:=KALMAT.IL;
               _kalmat.P_WAR:=KALMAT.IL*KALMAT.PRICE;
               _kalmat.P_POCH:=KALMAT.POCH;
               _kalmat.put()
            ||
               _kalmat.blank();
               _kalmat.M:=$KALMAT.PT;
               _kalmat.KTM:=KALMAT.PT().KTM;
               _kalmat.N:=M.N;
               _kalmat.J:=M.J().KOD;
               _kalmat.P_PRICE:=KALMAT.PRICE;
               _kalmat.P_IL:=KALMAT.IL;
               _kalmat.P_WAR:=KALMAT.IL*KALMAT.PRICE;
               _kalmat.P_POCH:=KALMAT.POCH;
               _kalmat.add()
            ?}
         ?};
         KALMAT.next()
      !}
   ?};

   _ndx:=_kalmat.ndx_tmp(,,'KTM',,);
   _kalmat.index(_ndx);
   _kalmat.prefix();

   _wer:=_kalmat.mk_sel('Ceny surowców pobrane do kalkulacji'@,'N',0,'kalmat_wer',1,15);
   _kalmat.win_fld(_wer,,'KTM',,,20,,,'Kod surowca'@);
   _kalmat.win_fld(_wer,,'N',,,40,,,'Nazwa'@);
   _kalmat.win_fld(_wer,,'J',,,5,,,'jm'@);
   _kalmat.win_fld(_wer,,'PRICE',,,15,2,,'Cena'@);
   _kalmat.win_fld(_wer,,'IL',,,15,2,,'Ilość'@);
   _kalmat.win_fld(_wer,,'WAR',,,15,2,,'Wartość'@);
   _kalmat.win_fld(_wer,,'POCH',,,2,,,'Pochodzenie'@);
   _kalmat.win_fld(_wer,,'P_PRICE',,,15,2,,'Cena por.'@);
   _kalmat.win_fld(_wer,,'P_IL',,,15,2,,'Ilość por.'@);
   _kalmat.win_fld(_wer,,'P_WAR',,,15,2,,'Wartość por.'@);
   _kalmat.win_fld(_wer,,'P_POCH',,,2,,,'Pochodzenie'@);
   _kalmat.win_act(_wer,,'Formuła','Legenda'@@,,,"exec('legenda','color','$%1'['Różnice cen surowców'@])",,,,,,'L');
   _kalmat.win_act(_wer,,'Rekord',,,,"{? cur_tab(1,1).PRICE<>cur_tab(1,1).P_PRICE || exec('findtmp','#color') || ~~ ?}");
   _kalmat.win_sel(_wer);
   _kalmat.select()
?};
~~


\drill_rob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Szczegóły kalkulacji technologii dla robocizny
::       Formuła działa w kontekście bieżącej kalkulacji technologii
::       Dla porównania kalkulacji bierze VAR.A_KKTL i VAR.A_PKKTL
::  OLD: \drill_rob/tex_kalk.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.A_PKKTL=null()
||
:: wariant nieobsługiwany
   {? 0
   || _sqlt:=sql('
         select
            nvl(TTOPER.KOD,TOPER.REFERENCE) as KOD
           ,TTOPER.NA as NA
           ,TTOPER.PLATNE as PLATNE
           ,TOPER.PLNH as PLNH
           ,SUM(TOPER.NTIME) as NTIME
           ,SUM(TOPER.PLNX) as PLNX
        from
           TOPER left outer join TTOPER using(TOPER.OPER, TTOPER.REFERENCE)
        where
           TOPER.NRK=:_a
        and
           TOPER.PZ=\'P\'
        and
           TOPER.WEW=\'T\'
        group by
           TTOPER.KOD
          ,TTOPER.NA
          ,TTOPER.PLATNE
          ,TOPER.PLNH
          ,TOPER.REFERENCE
        order by KOD, NA
      ',TKTL.ref()
      );

      {? _sqlt.first()
      || {!
         |?
            _names:=exec('tpz_names','tech_oper',_sqlt.KOD);
            {? _names.KOD<>'???' || _sqlt.KOD:=_names.KOD ?};
            {? _names.NA<>'???' || _sqlt.NA:=_names.NA ?};
            {? _sqlt.PLATNE='A'
            || _sqlt.NTIME:=KKTL.NRK().XJM;
               _sqlt.PLNX:=_sqlt.NTIME*_sqlt.PLNH
            ?};
            _sqlt.put();
            obj_del(_names);
            _sqlt.next()
         !}
      ?};
      {? type_of(_sqlt)=type_of(SYSLOG)
      || _size:={? _sqlt.size()<40 || _sqlt.size() || 39 ?}+1;
         _win:=_sqlt.mk_sel('Robocizna uwzględniona w kalkulacji'@,'P',0,'#drillrobkktl',,1,_size);
         _sqlt.win_sel(_win);
         _sqlt.win_fld(_win,,'KOD'  ,,, 8, ,,'Kod'@);
         _sqlt.win_fld(_win,,'NA'   ,,,35, ,,'Nazwa'@);
         _sqlt.win_fld(_win,,'PLNH' ,,,10,2,,'Stawka'@);
         _sqlt.win_fld(_win,,'NTIME',,,10,4,,'Norma[czas/ilość]'@);
         _sqlt.win_fld(_win,,'PLATNE' ,,,1,,,'Płatne'@);
         _sqlt.win_fld(_win,,'PLNX' ,,,10,2,,'Koszt'@);
         _sqlt.select()
      ?}
   ||
      KALTTO.index('KON');
      KALTTO.prefix(KKTL.ref());
      KALTTO.first();
      KALTTO.win_edit('');
      KALTTO.win_sel('WER');
      KALTTO.select()
   ?}

||
   _kaltto:=tab_tmp(1,
      'TTOPER','STRING[16]','$TTOPER.ref()',
      'KOD','STRING[10]','Kod operacji',
      'NA','STRING[50]','Nazwa operacji',
      'STAWKA','REAL','Stawka',
      'IL','REAL','Ilość',
      'WAR','REAL','Wartość',
      'P_STAWKA','REAL','Stawka',
      'P_IL','REAL','Ilość',
      'P_WAR','REAL','Wartość'
   );

   KALTTO.index('KO');

   KALTTO.prefix(VAR.A_KKTL);
   {? KALTTO.first()
   || {!
      |?
         _kaltto.blank();
         _kaltto.TTOPER:=$KALTTO.TTOPER;
         _kaltto.KOD:=KALTTO.TTOPER().KOD;
         _kaltto.NA:=TTOPER.NA;
         _kaltto.STAWKA:=KALTTO.STAWKA;
         _kaltto.IL:=KALTTO.IL;
         _kaltto.WAR:=KALTTO.STAWKA*KALTTO.IL;
         _kaltto.add();
         KALTTO.next()
      !}
   ?};

   KALTTO.prefix(VAR.A_PKKTL);
   {? KALTTO.first()
   || {!
      |?
         _kaltto.prefix($KALTTO.TTOPER);
         {? _kaltto.first()
         ||
            _kaltto.P_STAWKA:=KALTTO.STAWKA;
            _kaltto.P_IL:=KALTTO.IL;
            _kaltto.P_WAR:=KALTTO.STAWKA*KALTTO.IL;
            _kaltto.put()
         ||
            _kaltto.blank();
            _kaltto.TTOPER:=$KALTTO.TTOPER;
            _kaltto.KOD:=KALTTO.TTOPER().KOD;
            _kaltto.NA:=TTOPER.NA;
            _kaltto.P_STAWKA:=KALTTO.STAWKA;
            _kaltto.P_IL:=KALTTO.IL;
            _kaltto.P_WAR:=KALTTO.STAWKA*KALTTO.IL;
            _kaltto.add()
         ?};
         KALTTO.next()
      !}
   ?};

   _ndx:=_kaltto.ndx_tmp(,,'KOD',,);
   _kaltto.index(_ndx);
   _kaltto.prefix();

   _wer:=_kaltto.mk_sel('Stawki pobrane do kalkulacji'@,'N',0,'kaltto_wer',,15,,,'U');
   _kaltto.win_fld(_wer,,'KOD',,,10,,,'Kod operacji'@);
   _kaltto.win_fld(_wer,,'NA',,,50,,,'Nazwa operacji'@);
   _kaltto.win_fld(_wer,,'IL',,,15,4,,'Ilość'@);
   _kaltto.win_fld(_wer,,'STAWKA',,,15,2,,'Stawka'@);
   _kaltto.win_fld(_wer,,'WAR',,,15,2,,'Koszt'@);
   _kaltto.win_fld(_wer,,'P_IL',,,-15,4,,'Ilość porównywana'@);
   _kaltto.win_fld(_wer,,'P_STAWKA',,,-15,2,,'Stawka porównywana'@);
   _kaltto.win_fld(_wer,,'P_WAR',,,-15,2,,'Koszt porównywany'@);
   _kaltto.win_sel(_wer);
   _kaltto.select()
?};
~~


\drill_usl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Szczegóły kalkulacji technologii dla usług (kooperacji)
::       Formuła działa w kontekscie bieżącej kalkulacji technologii
::       Dla porównania kalkulacji bierze VAR.A_KKTL i VAR.A_PKKTL
::  OLD: \drill_usl/tex_kalk.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.A_PKKTL=null()
||
:: wariant nieobsługiwany
   {? 0
   ||
      _sqlt:=sql('
         select
            nvl(TTOUT.KOD,TOPER.REFERENCE) as KOD
           ,TTOUT.NA as NA
           ,TTOUT.CENA as CENA
        from
           TOPER left outer join TTOUT using(TOPER.TTOUT, TTOUT.REFERENCE)
        where
           TOPER.NRK=:_a
        and
           TOPER.WEW=\'N\'
        and
           TOPER.PZ=\'P\'
        group by
           TTOUT.KOD
          ,TTOUT.NA
          ,TTOUT.CENA
          ,TOPER.REFERENCE
        order by KOD, NA
      ',TKTL.ref()
      );

      {? type_of(_sqlt)=type_of(SYSLOG)
      || _size:={? _sqlt.size()<40 || _sqlt.size() || 39 ?}+1;
         _win:=_sqlt.mk_sel('Stawki usług pobrane do kalkulacji'@,'P',0,'#drillrobusu',,1,_size);
         _sqlt.win_sel(_win);
         _sqlt.win_fld(_win,,'KOD'  ,,, 8, ,,'Kod'@);
         _sqlt.win_fld(_win,,'NA'   ,,,35, ,,'Nazwa'@);
         _sqlt.win_fld(_win,,'CENA' ,,,10,2,,'Cena'@);
         _sqlt.select()
      ?}
   || KALTOU.index('KTN');
      KALTOU.prefix(KKTL.ref());
      KALTOU.first();
      KALTOU.win_edit('');
      KALTOU.win_sel('WER');
      KALTOU.select()
   ?}
||
   _kaltou:=tab_tmp(1,
      'TTOUT','STRING[16]','$TTOPER.ref()',
      'KOD','STRING[10]','Kod operacji',
      'NA','STRING[50]','Nazwa operacji',
      'CENA','REAL','Cena',
      'IL','REAL','Ilość',
      'WAR','REAL','Wartość',
      'P_CENA','REAL','Cena',
      'P_IL','REAL','Ilość',
      'P_WAR','REAL','Wartość');

   KALTOU.index('KT');

   KALTOU.prefix(VAR.A_KKTL);
   {? KALTOU.first()
   || {!
      |?
         _kaltou.blank();
         _kaltou.TTOUT:=$KALTOU.TTOUT;
         _kaltou.KOD:=KALTOU.TTOUT().KOD;
         _kaltou.NA:=TTOUT.NA;
         _kaltou.CENA:=TTOUT.CENA;
         _kaltou.IL:=KALTOU.IL;
         _kaltou.WAR:=KALTOU.TTOUT().CENA*KALTOU.IL;
         _kaltou.add();
         KALTOU.next()
      !}
   ?};

   KALTOU.prefix(VAR.A_PKKTL);
   {? KALTOU.first()
   || {!
      |?
         _kaltou.prefix($KALTOU.TTOUT);
         {? _kaltou.first()
         ||
            _kaltou.P_CENA:=KALTOU.TTOUT().CENA;
            _kaltou.P_IL:=KALTOU.IL;
            _kaltou.P_WAR:=KALTOU.TTOUT().CENA*KALTOU.IL;
            _kaltou.put()
         ||
            _kaltou.blank();
            _kaltou.TTOUT:=$KALTOU.TTOUT;
            _kaltou.KOD:=KALTOU.TTOUT().KOD;
            _kaltou.NA:=TTOUT.NA;
            _kaltou.P_CENA:=TTOUT.CENA;
            _kaltou.P_IL:=KALTOU.IL;
            _kaltou.P_WAR:=KALTOU.TTOUT().CENA*KALTOU.IL;
            _kaltou.add()
         ?};
         KALTOU.next()
      !}
   ?};

   _ndx:=_kaltou.ndx_tmp(,,'KOD',,);
   _kaltou.index(_ndx);
   _kaltou.prefix();

   _wer:=_kaltou.mk_sel('Taryfikator usług (w kooperacji)'@,'N',0,'kaltou_wer',,15);
   _kaltou.win_fld(_wer,,'KOD',,,10,,,'Kod'@);
   _kaltou.win_fld(_wer,,'NA',,,50,,,'Nazwa'@);
   _kaltou.win_fld(_wer,,'CENA',,,15,2,,'Cena'@);
   _kaltou.win_fld(_wer,,'IL',,,15,4,,'Ilość'@);
   _kaltou.win_fld(_wer,,'WAR',,,15,2,,'Wartość'@);
   _kaltou.win_fld(_wer,,'P_CENA',,,15,2,,'Cena por.'@);
   _kaltou.win_fld(_wer,,'P_IL',,,15,4,,'Ilość por.'@);
   _kaltou.win_fld(_wer,,'P_WAR',,,15,2,,'Wartość por.'@);
   _kaltou.win_sel(_wer);
   _kaltou.select()
?};
~~


\drill_utl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Szczegóły kalkulacji technologii dla N-P-U
::       Formuła działa w kontekście bieżącej kalkulacji technologii
::       Dla porównania kalkulacji bierze VAR.A_KKTL i VAR.A_PKKTL
::  OLD: \drill_utl/tex_kalk.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.A_PKKTL=null()
||
   KALTLS.index('KT');
   KALTLS.prefix(KKTL.ref());
   KALTLS.first();
   KALTLS.win_edit('');
   KALTLS.win_sel('WER');
   KALTLS.select()
||
   _kaltls:=tab_tmp(2,
      'TTLS','STRING[16]','$M.ref()',
      'BYL','STRING[1]','Czy juz byl',
      'RODZ','STRING[1]','Rodzaj',
      'KOD','STRING[10]','Kod narzędzia',
      'NA','STRING[40]','Nazwa narzędzia',
      'KOSZT','REAL','Koszt',
      'IL','REAL','Ilość',
      'WAR','REAL','Wartość',
      'P_KOSZT','REAL','Koszt',
      'P_IL','REAL','Ilość',
      'P_WAR','REAL','Wartość');

   KALTLS.index('KT');

   KALTLS.prefix(VAR.A_KKTL);
   {? KALTLS.first()
   || {!
      |?
         _kaltls.blank();
         _kaltls.TTLS:=$KALTLS.M;
         _kaltls.KOD:=KALTLS.M().KTM;
         _kaltls.NA:=KALTLS.M().N;
         _kaltls.RODZ:=MGR.KOD;
         _kaltls.KOSZT:=KALTLS.KOSZT;
         _kaltls.IL:=KALTLS.IL;
         _kaltls.WAR:=KALTLS.KOSZT*KALTLS.IL;
         _kaltls.BYL:='N';
         _kaltls.add();
         KALTLS.next()
      !}
   ?};

   KALTLS.prefix(VAR.A_PKKTL);
   {? KALTLS.first()
   || {!
      |?
         _kaltls.prefix($KALTLS.M,'N');
         {? _kaltls.first()
         || _kaltls.clear();
            _kaltls.P_KOSZT:=KALTLS.KOSZT;
            _kaltls.P_IL:=KALTLS.IL;
            _kaltls.P_WAR:=KALTLS.KOSZT*KALTLS.IL;
            _kaltls.BYL:='T';
            _kaltls.put()
         || _kaltls.clear();
            _kaltls.blank();
            _kaltls.TTLS:=$KALTLS.M;
            _kaltls.KOD:=KALTLS.M().KTM;
            _kaltls.NA:=KALTLS.M().N;
            _kaltls.RODZ:=MGR.KOD;
            _kaltls.P_KOSZT:=KALTLS.KOSZT;
            _kaltls.P_IL:=KALTLS.IL;
            _kaltls.P_WAR:=KALTLS.KOSZT*KALTLS.IL;
            _kaltls.BYL:='T';
            _kaltls.add()
         ?};
         KALTLS.next()
      !}
   ?};

   _ndx:=_kaltls.ndx_tmp(,,'KOD',,);
   _kaltls.index(_ndx);
   _kaltls.prefix();

   _wer:=_kaltls.mk_sel('Ceny N-P-U pobrane do kalkulacji'@,'N',0,'kaltls_wer',,15);
   _kaltls.win_fld(_wer,,'RODZ',,,2,,,'NPU'@);
   _kaltls.win_fld(_wer,,'KOD',,,10,,,'Symbol'@);
   _kaltls.win_fld(_wer,,'NA',,,40,,,'Nazwa'@);
   _kaltls.win_fld(_wer,,'KOSZT',,,15,2,,'Cena'@);
   _kaltls.win_fld(_wer,,'IL',,,15,4,,'Ilość'@);
   _kaltls.win_fld(_wer,,'WAR',,,15,2,,'Wartość'@);
   _kaltls.win_fld(_wer,,'P_KOSZT',,,15,2,,'Cena por.'@);
   _kaltls.win_fld(_wer,,'P_IL',,,15,4,,'Ilość por.'@);
   _kaltls.win_fld(_wer,,'P_WAR',,,15,2,,'Wartość por.'@);
   _kaltls.win_sel(_wer);
   _kaltls.select()
?};
~~


\drill_wrk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [2009]
:: OPIS: Szczegóły kalkulacji technologii dla stanowisk
::       Formuła działa w kontekście bieżącej kalkulacji technologii
::       Dla porównania kalkulacji bierze VAR.A_KKTL i VAR.A_PKKTL
::  OLD: \drill_wrk/tex_kalk.fml
::----------------------------------------------------------------------------------------------------------------------
{? VAR.A_PKKTL=null()
||
   KALWRK.index('KP');
   KALWRK.prefix(KKTL.ref());
   KALWRK.first();
   KALWRK.win_edit('');
   KALWRK.win_sel('WER');
   KALWRK.select()
||
   _kalwrk:=tab_tmp(1,
      'PLACE','STRING[16]','$TWRKPLC.ref()',
      'KOD','STRING[10]','Kod operacji',
      'NA','STRING[60]','Nazwa operacji',
      'KH','REAL','Koszt godziny prac',
      'IL','REAL','Ilość',
      'WAR','REAL','Wartość',
      'P_KH','REAL','koszt godziny pracy',
      'P_IL','REAL','Ilość',
      'P_WAR','REAL','Wartość');

   KALWRK.index('KP');

   KALWRK.prefix(VAR.A_KKTL);
   {? KALWRK.first()
   || {!
      |?
         _kalwrk.blank();
         _kalwrk.PLACE:=$KALWRK.PLACE;
         _kalwrk.KOD:=KALWRK.PLACE().KOD;
         _kalwrk.NA:=TWRKPLC.NA;
         _kalwrk.KH:=KALWRK.KH;
         _kalwrk.IL:=KALWRK.IL;
         _kalwrk.WAR:=KALWRK.IL*KALWRK.KH;
         _kalwrk.add();
         KALWRK.next()
      !}
   ?};

   KALWRK.prefix(VAR.A_PKKTL);
   {? KALWRK.first()
   || {!
      |?
         _kalwrk.prefix($KALWRK.PLACE);
         {? _kalwrk.first()
         ||
            _kalwrk.P_KH:=KALWRK.KH;
            _kalwrk.P_IL:=KALWRK.IL;
            _kalwrk.P_WAR:=KALWRK.IL*KALWRK.KH;
            _kalwrk.put()
         ||
            _kalwrk.blank();
            _kalwrk.PLACE:=$KALWRK.PLACE;
            _kalwrk.KOD:=KALWRK.PLACE().KOD;
            _kalwrk.NA:=TWRKPLC.NA;
            _kalwrk.P_KH:=KALWRK.KH;
            _kalwrk.P_IL:=KALWRK.IL;
            _kalwrk.P_WAR:=KALWRK.IL*KALWRK.KH;
            _kalwrk.add()
         ?};
         KALWRK.next()
      !}
   ?};

   _ndx:=_kalwrk.ndx_tmp(,,'KOD',,);
   _kalwrk.index(_ndx);
   _kalwrk.prefix();

   _wer:=_kalwrk.mk_sel('Koszty stanowisk pobrane do kalkulacji'@,'N',0,'kalwrk_wer',,15);
   _kalwrk.win_fld(_wer,,'KOD',,,10,,,'Stanowisko'@);
   _kalwrk.win_fld(_wer,,'NA',,,50,,,'Nazwa stanowiska'@);
   _kalwrk.win_fld(_wer,,'IL',,,15,4,,'Ilość'@);
   _kalwrk.win_fld(_wer,,'KH',,,15,2,,'Koszt /h'@);
   _kalwrk.win_fld(_wer,,'WAR',,,15,2,,'Wartość'@);
   _kalwrk.win_fld(_wer,,'P_IL',,,15,4,,'Ilość por.'@);
   _kalwrk.win_fld(_wer,,'P_KH',,,15,2,,'Koszt /h por.'@);
   _kalwrk.win_fld(_wer,,'P_WAR',,,15,2,,'Wartość por.'@);
   _kalwrk.win_sel(_wer);
   _kalwrk.select()
?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:15:44 94a138f2ce45f91fdb2177e917e255577692480de7db81a1ce6f0469811fac4f1a75f98287b5c93ebddcce0ca8f1e4baed29b98b74dd0f1f7983ec07add3f13d52d1ec463f37a00e20fb638cad1b00d4e884399f51685f886a231f3d08a1f912d467e2244aebbe609e81453f367dd7f43adcc943e3ef9f77502333e22b50e0b7
