:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_selodp.fml
:: Utworzony: 23.04.2019
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu definicji typów selekcji
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='SELODP';
_def.DOMAIN:=exec('name','#b_domain','LUM');
_def.FUNPAR:='ZWS_LUM_TSEL';

_def.FILE:='umowy_cykliczne.xlsx';
_def.SHEET:='Typy selekcji - odpady=1,1';
_def.NAME:='Typy selekcji - odpady'@;
_def.DESC:='Typy selekcji - odpady';

_def.PREFIX:="exec('prefix','xls_selodp')";
_def.TABLE:="exec('table','xls_selodp')";
_def.FIELDS:="exec('fields','xls_selodp',_a)";

_def.BEFORE:="SELODP.cntx_psh()";
_def.AFTER:="SELODP.cntx_pop()";
_def.SELECT:="exec('select','xls_selodp',_a)";

_def.EXPORT:="exec('export','xls_selodp',_a,_b)";
_def.IMPORT:="exec('import','xls_selodp',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_selodp',_a,_b,_c)";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
SELODP.index('TYP');
SELODP.prefix();
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
SELODP


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('SELTYP_O','Oddział',1,,'1-znakowy kod oddziału'@);
_def.define('SELTYP_K','Opis typu',1,,'Opis typu selekcji - maksymalnie 80 znaków.'@);
_def.define('ODP_K','Odpad - Kod',0,,'Kod odpadu'@);
_def.define('ODP_P','Odpad - Podział',0,,'Odpad podział - jeden znak'@);
_def.define('CZ','Czcionka',0,,'Kolor czcionka w formacie RR:GG:BB.'@);
_def.define('TLO','Tło',0,,'Tło czcionki w formacie RR:GG:BB.'@);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

SELODP.index('TYP');
SELODP.prefix();
{? _validate.ACTION='add'
||
   SELODP.blank();
   SELODP.SELTYP:=_validate.OBJ.SELTYP;
   SELODP.ODP:=_validate.OBJ.ODP
?};

SELODP.CZ:=_obj.CZ;
SELODP.TLO:=_obj.TLO;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.SELTYP_O.VALUE:=SELODP.SELTYP().ODDZ;
_excel.write_async('ODDZ',exec('FindInSet','#table','ODDZ','KOD',SELODP.SELTYP().ODDZ,,,1));
_table.SELTYP_K.VALUE:=SELODP.SELTYP().OP;
_excel.write_async('SELTYP',SELODP.SELTYP);
_table.ODP_K.VALUE:=SELODP.ODP().KOD;
_table.ODP_P.VALUE:=SELODP.ODP().PODZ;
_table.CZ.VALUE:=SELODP.CZ;
_table.TLO.VALUE:=SELODP.TLO;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('SELTYP','ODP');

{? _obj.SELTYP_K=''
|| _result.msg_empty('SELTYP_K');
   _result.RESULT:=0
|? (+_obj.SELTYP_O)<>1 | ~(exec('isLetter','#string',_obj.SELTYP_O,1) | exec('isDigit','#string',_obj.SELTYP_O))
|| _result.msg_inset('SELTYP_O','mała litera','cyfra'); _result.RESULT:=0
|? ~(_obj.ODP_K<>'' & _obj.ODP_P<>'')
|| _result.MSG:='Nie podano kodu lub podziału odpadu.'@;
   _result.RESULT:=0
?};

{? _result.RESULT & _obj.SELTYP_K<>'' & _obj.SELTYP_O<>''
|| SELTYP.cntx_psh();
   SELTYP.index('OPIS');
   SELTYP.prefix(_obj.SELTYP_O,_obj.SELTYP_K,);
   {? SELTYP.first()
   || _result.OBJ.SELTYP:=SELTYP.ref()
   || _result.MSG:='Nie znaleziono typu selekcji %1 w oddziale %2.'@[_obj.SELTYP_K,_obj.SELTYP_O];
      _result.RESULT:=0
   ?};
   SELTYP.cntx_pop()
?};

{? _result.RESULT
|| ODP.cntx_psh();
   ODP.index('KOD');
   ODP.prefix(_obj.ODP_K,_obj.ODP_K,_obj.ODP_P,);
   {? ODP.first()
   || _result.OBJ.ODP:=ODP.ref()
   || _result.MSG:='Nie znaleziono odpadu o kodzie %1.'@[_obj.ODP_K];
      _result.RESULT:=0
   ?};
   ODP.cntx_pop()
?};

{? _result.RESULT=1
||
   SELODP.index('TYP');
   SELODP.prefix(_result.OBJ.SELTYP,_result.OBJ.ODP);
   {? SELODP.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_selodp',_obj,_mode,_result)
      ?}
   || _result.ACTION:='add';
      exec('record','xls_selodp',_obj,_mode,_result)
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=SELODP.add(1)
   |? _validate.ACTION='put'
   || _result:=SELODP.put(1)
   ?}
?};
{? _result=0
|| _validate.MSG:={? _validate.ACTION='add'
                  || 'Dodanie selekcji odpadów nie powiodło się.'@
                  || 'Modyfikacja selekcji odpadów nie powiodła się.'@
                  ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(3,'ODDZ','STRING[1]','Oddział'
   ,'OP','STRING[80]','Opis'
   ,'ODP','STRING[10]','Kod odpadu'
   ,'NAZ','STRING[120]','Nazwa odpadu'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'ODDZ',,,'OP',,,'ODP',,);

SELODP.cntx_psh();
SELODP.index('TYP');
SELODP.prefix();
{? SELODP.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$SELODP.ref();
      _selected.prefix($SELODP.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.OP:=SELODP.SELTYP().OP;
      _tab.ODDZ:=SELODP.SELTYP().ODDZ;
      _tab.ODP:=SELODP.ODP().KOD;
      _tab.ODP:=SELODP.ODP().NAZ;
      _tab.add();
      SELODP.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'ODDZ,OP,ODP,NAZ',20,'Wybór odpadów dla typów selekcji do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
SELODP.cntx_pop();
_result

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:50 9828fbd70bbc902aa46a93d86852122dc6206cc07d08d1f1859e4952d983e1fc54e0cc91cbff8839696344e1f6e9d139abd899e873733d256ee00578577f5233c003e203a9c59345aa808d77d9809f357453afeb6608c64b02ff8528084f31e714286fc34726603096fe75d53d315a493ed36f6e1108d664579965bf8ffa609b
