:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_krub.fml
:: Utworzony: 19.07.2018
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu rubryk kalkulacji kart technologicznych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='KRUB';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='ZWS_PAR_TTKT';

_def.FILE:='produkcja_kalkulacje.xlsx';
_def.SHEET:='Rubryki kalkulacyjne'@+'=1,1';
_def.NAME:='Rubryki kalkulacyjne'@;
_def.DESC:='Rubryki kalkulacyjne do wyliczania TKW na podstawie kart technologicznych'@;

_def.PREFIX:="KRUB.index('NR'); KRUB.prefix()";
_def.TABLE:="KRUB";
_def.FIELDS:="exec('fields','xls_krub',_a)";

_def.BEFORE:="KRUB.cntx_psh()";
_def.AFTER:="KRUB.cntx_pop()";
_def.SELECT:="exec('select','xls_krub',_a)";

_def.EXPORT:="exec('export','xls_krub',_a,_b)";
_def.VALIDATE:="exec('validate','xls_krub',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_krub',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('NR','Numer'@,0,,'Numer rubryki (liczba naturalna)'@,,0);
_def.define('OPIS','Opis'@,1,,'Opis (max. 50 znaków)'@);
_def.define('PRINTED','Na wydruku'@,1,,'[T]/[N]'@);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
KRUB.prefix();
{? _validate.ACTION='add'
|| KRUB.blank();
   KRUB.NR:=_obj.NR
?};
KRUB.OPIS:=_obj.OPIS;
KRUB.PRINTED:=_obj.PRINTED;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.NR.VALUE:=KRUB.NR;
_table.OPIS.VALUE:=KRUB.OPIS;
_table.PRINTED.VALUE:=KRUB.PRINTED;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_int:=int(_obj.NR);

:: Błędy
{? +_obj.PRINTED=0 | 'TN'*_obj.PRINTED=0
|| _result.msg_inset('PRINTED','T','N');
   _result.RESULT:=0
?};
{? _int<exec('minint','#math') | _int>exec('maxint','#math')
|| _result.msg_range('NR',exec('minint','#math'),exec('maxint','#math'));
   _result.RESULT:=0
?};

:: Ostrzeżenia
{? _int<>_obj.NR
|| _result.msg_int('NR')
?};

:: OK
{? _result.RESULT>0
|| KRUB.index('NR');
   KRUB.prefix(_obj.NR);
   {? KRUB.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_krub',_obj,_mode,_result);
         {? exec('chk_krub','tech_kalk',1)<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_krub',_obj,_mode,_result);
      {? exec('chk_krub','tech_kalk',0)<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=KRUB.add(1)
   |? _validate.ACTION='put'
   || _result:=KRUB.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie rubryki kalkulacji o numerze %1 nie powiodło się.'@[$_obj.NR]
   || _validate.MSG:='Poprawa rubryki kalkulacji o numerze %1 nie powiodła się.'@[$_obj.NR]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,
   'NR','INTEGER','Numer'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'OPIS','STRING[50]','Opis'
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'NR',,);

KRUB.cntx_psh();
KRUB.index('NR');
KRUB.prefix();
{? KRUB.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$KRUB.ref();
      _selected.prefix($KRUB.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.NR:=KRUB.NR;
      _tab.OPIS:=KRUB.OPIS;
      _tab.add();
      KRUB.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'NR,OPIS',20,'Wybór rubryk kalkulacji do eksportu'@);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
KRUB.cntx_pop();
_result

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:48 e2c705abab6987646b70cd681c287611bdfff9c5ed5144bc1e39906b56cfbb7e808afa29a129c45fcd357a7b196b95ec336de10db385e3634f75460f188e6fa38e7cd110298a4bf7c9a200f16843a3935e48ed93720e1598d2a3ddd1efe1eb522514594a3302a0481923e68b65c1f4fde42d0c7ae16e0280c33e08f8337e5109
