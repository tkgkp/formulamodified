:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_tchmat.fml
:: Utworzony: 13.08.2020
:: Autor: AKUL
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu zamienników surowców kart technologicznych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TCHMAT';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='TKTL';
_def.HIDDEN:='T';
_def.SKIP:='T';
_def.ADD_ROWS:=0;

_def.FILE:='produkcja_technologie.xlsx';
_def.SHEET:='Zamienniki surowca'@+'=1,1';
_def.NAME:='Zamienniki surowca technologicznego'@;
_def.DESC:='Zamienniki surowca technologicznego'@;

_def.PREFIX:="TCHMAT.index('NSL'); TCHMAT.prefix()";
_def.TABLE:="TCHMAT";
_def.FIELDS:="exec('fields','xls_tchmat',_a)";

_def.BEFORE:="TCHMAT.cntx_psh();DK_C.cntx_psh()";
_def.AFTER:="{? _a.is_import() || exec('tktl_import_clear','tech_common',_a.excel)?};TCHMAT.cntx_pop();DK_C.cntx_pop()";

_def.EXPORT:="exec('export','xls_tchmat',_a,_b)";
_def.VALIDATE:="exec('validate','xls_tchmat',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_tchmat',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_edit:=0;
_def.define('TKTL_NRK','Nr karty'@,_edit);
_def.define('TKTL_WER','Wersja karty'@,_edit);
_def.define('NROP','Nr operacji'@,_edit);
_def.define('SRC','Nr surowca'@,_edit,,,type_of(0),0);
_def.define('LP','Lp'@,_edit,,,,0);
_def.define('GRKTM','Grupa/KTM'@,_edit,,'Znacznik, czy grupa technologiczna (G), czy pojedynczy surowiec (K)');
_def.define('TGRP','Grupa technologiczna'@,_edit);
_def.define('TGDFLT','Domyślny KTM'@,_edit,,'Element grupy technologicznej');
_def.define('PT','Produkt'@,_edit);
_def.define('WARN','Norma materiałowa netto'@,_edit,,,,ST.DOKL);
_def.define('WARB','Norma materiałowa brutto'@,_edit,,,,ST.DOKL);
_def.define('KTL_NRK','Nr karty dla półfabrykatu'@,_edit);
_def.define('KTL_WER','Wersja karty dla półfabrykatu'@,_edit);
_def.define('EXIST','Występowanie'@,_edit,,'Formuła określająca wystąpienie surowca w procesie');
_def.define('FORMN','Formuła normy netto'@,_edit);
_def.define('FORMB','Formuła normy brutto'@,_edit);
_def.define('DJM','Dodatkowa jednostka miary'@,_edit);
_def.define('DWARN','Dodatkowa norma netto'@,_edit,,,,ST.DOKL);
_def.define('DWARB','Dodatkowa norma brutto'@,_edit,,,,ST.DOKL);
_def.define('DFORMN','Formuła na dodatkową normę netto'@,_edit);
_def.define('DFORMB','Formuła na dodatkową normę brutto'@,_edit);
_def.define('POW','Powierzony'@,_edit,,'Znacznik, czy surowiec powierzony (T) czy własny (N)');
_def.define('COEF','Przelicznik jednostek miary'@,_edit,,,type_of(''));
_def.define('UNB','Uzysk'@,_edit,,'Uzysk (netto / brutto)',type_of(''));
_def.define('OPIS','Opis'@,_edit);
_def.define('PARTIA','Partiowany'@,_edit,,'Czy będzie obowiązywała identyfikacja partii w wyrobie - [T]/[N]');
_def.define('ACT','Aktualny'@,_edit,,'Znacznik aktualności elementu - [T]/[N]');
_def.define('CRE_TIME','Czas powołania elementu'@,_edit,,,type_of(''));
_def.define('OD','Obowiązuje od'@,_edit);
_def.define('USER','Zmieniał'@,_edit,,'Operator, który zmieniał element');
_def.define('CAUSE','Powód zmiany'@,_edit);
_def.define('MAG','Z magazynu'@,_edit,,'Czy pobierany z magazynu: Niepobierany z magazynu, generowane podzlecenie - [N],
   Pobierany z magazynu, nie jest generowane podzlecenie - [T], Pobierany z magazynu, generowane podzlecenie - [P]');
_def.define('DFLT_KTL','Domyślna technologia'@,_edit,,'Domyślna technologia na półfabrykat - [T]/[N]');
_def.define('DK_C','Cecha'@,_edit);
_def.define('ATR_MASK','Maska atrybutów'@,_edit);
_def.define('MODE_DST','Tryb śledzenia dostaw'@,_edit,,'Śledzenie dostaw: możliwy automat (A), ręczne (R)');
_def.define('MOD_TIME','Czas modyfikacji elementu'@,_edit,,,type_of(''));
_def.define('PRZ','Przelicznik'@,_edit,,'Przelicznik jednostek miary',type_of(''));
_def.define('XJMP','Procentowa zawartość'@,_edit,,'Procentowa zawartość surowca',type_of(''));
_def.define('DXJMP','Dod. procentowa zawartość'@,_edit,,'Dodatkowa procentowa zawartość surowca',type_of(''));
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TCHMAT.prefix();
{? _validate.ACTION='add'
|| TCHMAT.blank();
   TCHMAT.NRK:=_validate.OBJ.NRK;
   TCHMAT.SRC:=_validate.OBJ.SRC;
   TCHMAT.LP:=_obj.LP
?};
TCHMAT.NROP:=_validate.OBJ.NROP;
TCHMAT.GRKTM:=_obj.GRKTM;
TCHMAT.TGRP:=_validate.OBJ.TGRP;
TCHMAT.TGDFLT:=_validate.OBJ.TGDFLT;
TCHMAT.PT:=_validate.OBJ.PT;
TCHMAT.WARN:=_obj.WARN;
TCHMAT.WARB:=_obj.WARB;
TCHMAT.KTL:=_validate.OBJ.KTL;
TCHMAT.EXIST:=_obj.EXIST;
TCHMAT.FORMN:=_obj.FORMN;
TCHMAT.FORMB:=_obj.FORMB;
TCHMAT.DJM:=_validate.OBJ.DJM;
TCHMAT.DWARN:=_obj.DWARN;
TCHMAT.DWARB:=_obj.DWARB;
TCHMAT.DFORMN:=_obj.DFORMN;
TCHMAT.DFORMB:=_obj.DFORMB;
TCHMAT.POW:=_obj.POW;
TCHMAT.COEF:=exec('str2real','#convert',_obj.COEF);
TCHMAT.UNB:=exec('str2real','#convert',_obj.UNB);
TCHMAT.OPIS:=_obj.OPIS;
TCHMAT.PARTIA:=_obj.PARTIA;
TCHMAT.ACT:=_obj.ACT;
TCHMAT.CRE_TIME:=#_obj.CRE_TIME;
TCHMAT.OD:=_obj.OD;
TCHMAT.USER:=_validate.OBJ.USER;
TCHMAT.CAUSE:=_validate.OBJ.CAUSE;
TCHMAT.MAG:=_obj.MAG;
TCHMAT.DFLT_KTL:=_obj.DFLT_KTL;
TCHMAT.DK_C:=_validate.OBJ.DK_C;
TCHMAT.RDKC:={? TCHMAT.DK_C<>null() || $TCHMAT.DK_C || '' ?};
TCHMAT.ATR_MASK:=_obj.ATR_MASK;
TCHMAT.MODE_DST:=_obj.MODE_DST;
TCHMAT.RKTL:={? TCHMAT.KTL<>null() || $TCHMAT.KTL || '' ?};
TCHMAT.MOD_TIME:=#_obj.MOD_TIME;
TCHMAT.PRZ:=exec('str2real','#convert',_obj.PRZ);
TCHMAT.XJMP:=exec('str2real','#convert',_obj.XJMP);
TCHMAT.DXJMP:=exec('str2real','#convert',_obj.DXJMP);
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;

_table.TKTL_NRK.VALUE:=TCHMAT.NRK().NRK;
_table.TKTL_WER.VALUE:=TCHMAT.NRK().WER;
:: Wyszukuje nowy nr operacji z tablicy mapującej
_table.NROP.VALUE:={? __TOPER_MAP.find_key(TCHMAT.NROP().UNROP)
                   || $__TOPER_MAP.NEW
                   || ''
                   ?};
_table.SRC.VALUE:=TCHMAT.SRC().LP;
_table.LP.VALUE:=TCHMAT.LP;
_table.GRKTM.VALUE:=TCHMAT.GRKTM;
_table.TGRP.VALUE:=TCHMAT.TGRP().GR;_excel.write_async('TTG',TCHMAT.TGRP);
_table.TGDFLT.VALUE:=TCHMAT.TGDFLT().PT().KTM;_excel.write_async('TTGP',TCHMAT.TGDFLT);
_table.PT.VALUE:=TCHMAT.PT().KTM;
_table.WARN.VALUE:=TCHMAT.WARN;
_table.WARB.VALUE:=TCHMAT.WARB;
_table.KTL_NRK.VALUE:=TCHMAT.KTL().NRK;
_table.KTL_WER.VALUE:=TCHMAT.KTL().WER;
_table.EXIST.VALUE:=TCHMAT.EXIST;
_table.FORMN.VALUE:=TCHMAT.FORMN;
_table.FORMB.VALUE:=TCHMAT.FORMB;
_table.DJM.VALUE:=TCHMAT.DJM().KOD;
_table.DWARN.VALUE:=TCHMAT.DWARN;
_table.DWARB.VALUE:=TCHMAT.DWARB;
_table.DFORMN.VALUE:=TCHMAT.DFORMN;
_table.DFORMB.VALUE:=TCHMAT.DFORMB;
_table.POW.VALUE:=TCHMAT.POW;
_table.COEF.VALUE:=exec('to_string','#convert',TCHMAT.COEF);
_table.UNB.VALUE:=exec('to_string','#convert',TCHMAT.UNB);
_table.OPIS.VALUE:=TCHMAT.OPIS;
_table.PARTIA.VALUE:=TCHMAT.PARTIA;
_table.ACT.VALUE:=TCHMAT.ACT;
_table.CRE_TIME.VALUE:=$TCHMAT.CRE_TIME;
_table.OD.VALUE:=TCHMAT.OD;
_table.USER.VALUE:=TCHMAT.USER().KOD;
_table.CAUSE.VALUE:=TCHMAT.CAUSE().NAZ;
_table.MAG.VALUE:=TCHMAT.MAG;
_table.DFLT_KTL.VALUE:=TCHMAT.DFLT_KTL;
{? TCHMAT.DK_C<>null()
|| DK_C.use(ref_name(TCHMAT.DK_C));
   _table.DK_C.VALUE:=TCHMAT.DK_C().SYM;
   _excel.write_async('TDK_C',TCHMAT.DK_C)
|| _table.DK_C.VALUE:=''
?};
_table.ATR_MASK.VALUE:=TCHMAT.ATR_MASK;
_table.MODE_DST.VALUE:=TCHMAT.MODE_DST;
_table.MOD_TIME.VALUE:=$TCHMAT.MOD_TIME;
_table.PRZ.VALUE:=exec('to_string','#convert',TCHMAT.PRZ);
_table.XJMP.VALUE:=exec('to_string','#convert',TCHMAT.XJMP);
_table.DXJMP.VALUE:=exec('to_string','#convert',TCHMAT.DXJMP);
:: Translacje parametrów dla półproduktu
TCHMAT.cntx_psh();
TPARTRA.cntx_psh();
TPARTRA.use('txptr___');
TPARTRA.cntx_psh();
TPARTRA.index('SUR');
TPARTRA.prefix(null(),TCHMAT.ref());
{? TPARTRA.first()
||
   {!
   |?
      _excel.write_async('TPARTRA',TPARTRA.ref());
      TPARTRA.next()
   !}
?};
TPARTRA.cntx_pop();
TPARTRA.cntx_pop();
TCHMAT.cntx_pop();

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('NRK','NROP','SRC','TGRP','TGDFLT','PT','KTL','PFAZ','DJM','WYD','USER','CAUSE','DK_C');
_imp_err:=0;
_check:=1;

:: Sprawdzam czy do karty zgłoszony został błąd
{? __TKTL_ERR.find_key(_obj.TKTL_NRK,_obj.TKTL_WER,)
|| _imp_err:=1
?};
:: Jeżeli wcześniej został zgłoszony błąd to wychodzę wcześniej bez dodatkowej walidacji
{? _imp_err>0
|| _result.RESULT:=0
||
:: Wyszukanie refów powiązanych rekordów
   _result.OBJ.NRK:={? _obj.TKTL_NRK='' | _obj.TKTL_WER=''
                    || null()
                    || exec('FindInSet','#table','TKTL','NRK',_obj.TKTL_WER,'T',,1,_obj.TKTL_NRK,null())
                    ?};
   _result.OBJ.NROP:={? _obj.NROP='' | _obj.NROP='0'
                     || null()
                     || exec('FindInSet','#table','TOPER','UNROP',#_obj.NROP,,,,,null())
                     ?};
   _result.OBJ.SRC:={? _obj.SRC=0
                    || null()
                    || exec('FindInSet','#table','TMAT','NNL',_obj.SRC,_result.OBJ.NRK,,,_result.OBJ.NROP,null())
                    ?};
   _result.OBJ.TGRP:={? _obj.TGRP=''
                     || null()
                     || exec('FindInSet','#table','TTG','GR',_obj.TGRP,,,1,,null())
                     ?};
   _result.OBJ.TGDFLT:={? _obj.TGDFLT='' | _result.OBJ.TGRP=null()
                       || null()
                       || _pt:=exec('FindInSet','#table','M','MATKTM',_obj.TGDFLT,,,1,,null());
                          exec('FindInSet','#table','TTGP','GRS',_pt,_result.OBJ.TGRP,,,,null())
                       ?};
   _result.OBJ.PT:={? _obj.PT=''
                   || null()
                   || exec('FindInSet','#table','M','MATKTM',_obj.PT,,,1,,null())
                   ?};
   _result.OBJ.KTL:={? _obj.KTL_NRK='' | _obj.KTL_WER=''
                    || null()
                    || exec('FindInSet','#table','TKTL','NRK',_obj.KTL_WER,'T',,1,_obj.KTL_NRK,null())
                    ?};
   _result.OBJ.DJM:={? _obj.DJM=''
                    || null()
                    || exec('FindInSet','#table','JM','KOD',_obj.DJM,,,1,,null())
                    ?};
   _result.OBJ.USER:={? _obj.USER=''
                     || null()
                     || exec('FindInSet','#table','USERS','USR_KKOD',_obj.USER,,,1,,null())
                     ?};
   _result.OBJ.CAUSE:={? _obj.CAUSE=''
                      || null()
                      || exec('FindInSet','#table','TTXCAUSE','NAZ',_obj.CAUSE,,,1,,null())
                      ?};
   _result.OBJ.DK_C:={? _obj.DK_C=''
                     || null()
                     ||
::                      Sprawdzam czy symbol cechy znajduje się w tabeli mapującej
                        {? __DK_C_MAP.find_key(_obj.DK_C,)
                        || exec('FindAndGet','#table','DK_C',__DK_C.REF,,,null())
                        || null()
                        ?}
                     ?};
:: Ostrzeżenia
   {? _obj.USER<>'' & _result.OBJ.USER=null()
   || _result.msg_norec('USER')
   ?};

:: Błędy
   {? _result.OBJ.NRK=null()
   || _result.msg_norec('TKTL_NRK');
      _result.RESULT:=0
   ?};
   {? _obj.NROP<>'' & _obj.NROP<>'0' & _result.OBJ.NROP=null()
   || _result.msg_norec('NROP');
      _result.RESULT:=0
   ?};
   {? _result.OBJ.SRC=null()
   || _result.msg_norec('SRC');
      _result.RESULT:=0
   ?};
   {? _obj.TGRP<>'' & _result.OBJ.TGRP=null()
   || _result.msg_norec('TGRP');
      _result.RESULT:=0
   ?};
   {? _obj.TGDFLT<>'' & _result.OBJ.TGDFLT=null()
   || _result.msg_norec('TGDFLT');
      _result.RESULT:=0
   ?};
   {? _obj.PT<>'' & _result.OBJ.PT=null()
   || _result.msg_norec('PT');
      _result.RESULT:=0
   ?};
   {? _obj.KTL_NRK<>'' & _obj.KTL_WER<>'' & _result.OBJ.KTL=null()
   || _result.msg_norec('KTL');
      _result.RESULT:=0
   ?};
   {? _obj.DJM<>'' & _result.OBJ.DJM=null()
   || _result.msg_norec('DJM');
      _result.RESULT:=0
   ?};
   {? _obj.CAUSE<>'' & _result.OBJ.CAUSE=null()
   || _result.msg_norec('CAUSE');
      _result.RESULT:=0
   ?};
   {? _obj.DK_C<>'' & _result.OBJ.DK_C=null()
   || _result.msg_norec('DK_C');
      _result.RESULT:=0
   ?};

   {? +_obj.GRKTM=0 | 'GK'*_obj.GRKTM=0
   || _result.msg_inset('GK','G','K');
      _result.RESULT:=0
   ?};
   {? +_obj.POW=0 | 'TN'*_obj.POW=0
   || _result.msg_inset('POW','T','N');
      _result.RESULT:=0
   ?};
   {? +_obj.PARTIA=0 | 'TN'*_obj.PARTIA=0
   || _result.msg_inset('PARTIA','T','N');
      _result.RESULT:=0
   ?};
   {? +_obj.ACT=0 | 'TN'*_obj.ACT=0
   || _result.msg_inset('ACT','N','T');
      _result.RESULT:=0
   ?};
   {? +_obj.MAG=0 | 'TNP'*_obj.MAG=0
   || _result.msg_inset('MAG','T','N','P');
      _result.RESULT:=0
   ?};
   {? +_obj.DFLT_KTL=0 | 'TN'*_obj.DFLT_KTL=0
   || _result.msg_inset('DFLT_KTL','T','N');
      _result.RESULT:=0
   ?};
   {? +_obj.MODE_DST=0 | 'AR'*_obj.MODE_DST=0
   || _result.msg_inset('MODE_DST','A','R');
      _result.RESULT:=0
   ?}
?};

:: OK
{? _result.RESULT>0
|| TCHMAT.index('NSL');
   TCHMAT.prefix(_result.OBJ.NRK,_result.OBJ.SRC,_obj.LP);
   {? TCHMAT.first()
   || {? _mode=0
      || _result.RESULT:=0;
         _check:=0;
         _result.MSG:='Technologia %1 (wer.%2) posiada już zamiennik surowca technologicznego o numerze %3 '
                      'przypisany do surowca %4.'@[_obj.TKTL_NRK,_obj.TKTL_WER,$_obj.LP,
                      exec('FindAndGet','#table',TMAT,_result.OBJ.SRC,,"$TMAT.LP+'. '+TMAT.PT().N",'')]
      || _result.ACTION:='put';
         exec('record','xls_tchmat',_obj,_mode,_result);
         exec('start_tpar','tech_param',exec('FindAndGet','#table','TKTL',TCHMAT.NRK,,"TKTL.KTM",null()));
         {? exec('tchm_edt','tech_mater',TCHMAT,0,1)<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_tchmat',_obj,_mode,_result);
      exec('start_tpar','tech_param',exec('FindAndGet','#table','TKTL',TCHMAT.NRK,,"TKTL.KTM",null()));
      {? exec('tchm_edt','tech_mater',TCHMAT,1,1)<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
{? _result.RESULT<=0 & _check>0 & _imp_err=0
||
:: Jak błąd to ustawiam znacznik błędu na karcie technologicznej
   {? _result.OBJ.NRK<>null()
   || TKTL.cntx_psh();
      TKTL.prefix();
      {? TKTL.seek(_result.OBJ.NRK)
      || TKTL.IMP_ERR:='T';
         TKTL.put();
         _result.MSG+='\nKarta %1 (wer. %2) oraz wszystkie jej elementy, które zostały do tej pory zaimportowane'
                      'zostaną usunięte.'@[TKTL.NRK,TKTL.WER];
::       Dodaję kartę do listy ignorowanych kart przy imporcie
         __TKTL_ERR.NRK:=_obj.TKTL_NRK;
         __TKTL_ERR.WER:=_obj.TKTL_WER;
         __TKTL_ERR.add()
      ?};
      TKTL.cntx_pop()
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| EXCEL_ENV.ID_GRP:=$TCHMAT.NRK;
   {? _validate.ACTION='add'
   || _result:=TCHMAT.add(1)
   |? _validate.ACTION='put'
   || _result:=TCHMAT.put(1)
   ?}
|| EXCEL_ENV.ID_GRP:=''
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie zamiennika surowca %3 do karty technologicznej %1 (%2) nie powiodło się.'@
                     [_obj.TKTL_NRK,_obj.TKTL_WER,_obj.PT]
   || _validate.MSG:='Poprawa zamiennika surowce %3 do karty technologicznej %1 (%2) nie powiodła się.'@
                     [_obj.TKTL_NRK,_obj.TKTL_WER,_obj.PT]
   ?}
?};
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 4cdc3561810df37d31c44930429e1c1f6a0beb35d4f5ccfe96d8a16bce9bcee00be4f3687fd35ab40e3367bd6709fa26dcfc7fb33248295baec0f9f2cd5dfe6d807bafc2db3656a3c561c15c630936018958ffd83b9b77945dc51f9ea9d474f66584a81eb5c595081308c6b5643ca5d641e23b8f3360818b7eaeb2c3c68350a5
