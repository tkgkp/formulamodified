:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_schemat_upr.fml
:: Utworzony: 19.09.2019
:: Autor: wesos
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu uprawnień do schematów danych
::======================================================================================================================


\init_upr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [19.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='UPR_SCHMT';
_def.FUNPAR:='ZWS_USRUPR';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:='uprawnienia.xlsx';
_def.SHEET:='Schematy danych=1,1';
_def.NAME:='Uprawnienia do schematów danych'@;
_def.DESC:='Uprawnienia do schematów danych';
_def.SELECT:="exec('select','xls_schemat_upr',_a,_b,'SCHMT')";
_def.PREFIX:="exec('prefix','xls_users_up','SCHMT')";
: źródło danych
_def.TABLE:="UDB_UPR";

: prolog
_def.BEFORE:="
   USERS.cntx_psh();
   USERS.prefix();
   UD_SKL.cntx_psh();
   UDB_SYS.cntx_psh();
   UDB_SYS.prefix();
   UDB_UPR.cntx_psh();
   UDB_UPR.prefix();
   UDB_UPR.index('W_SKL');
   UDB_UPR.f_set('USERS(KOD),UDB_SYS(UDB_GRP),UD_SKL(SYMBOL)','join USERS join UDB_SYS','USERS.AKT=\'\'T\'\' and USERS.JTERM=\'\'T\'\'');
   ~~
";

: epilog
_def.AFTER:="
   UDB_UPR.f_clear();
   UDB_UPR.cntx_pop();
   UDB_SYS.cntx_pop();
   UD_SKL.cntx_pop();
   USERS.cntx_pop();
   exec('perm_upd','tran_upr','UD_SKL');
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('USERS',  MS.name(UDB_UPR,'USERS'),  1,,MS.comment(UDB_UPR,'USERS'));
   _env.define('UDB_GRP',MS.name(UDB_SYS,'UDB_GRP'),1,,MS.comment(UDB_SYS,'UDB_GRP'));
   _env.define('UD_TYP', MS.name(UDB_SYS,'UD_TYP'), 1,,MS.comment(UDB_SYS,'UD_TYP'));
   _env.define('UD_SKL', MS.name(UDB_UPR,'UD_SKL'), 1,,MS.comment(UDB_UPR,'UD_SKL'));
   _env.define('DOSTEP', MS.name(UDB_UPR,'DOSTEP'), 1,,MS.comment(UDB_UPR,'DOSTEP'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _tab:=_env.table();
   {? UDB_UPR.USERS().AKT<>'T' | UDB_UPR.USERS().JTERM<>'T' | UDB_UPR.DOMYSLNY<>'T'
   || return(0)
   ?};
   {? __SelUsers.first()
   || _result:=__SelUsers.find_key($_tab.USERS)
   || _result:=1
   ?};
   _buf.UDB_GRP.VALUE:=UDB_UPR.UDB_SYS().UDB_GRP().SYMBOL;
   _buf.UD_TYP.VALUE:=UDB_UPR.UDB_SYS().UD_TYP().SYMBOL;
   _buf.UD_SKL.VALUE:=UDB_UPR.UD_SKL().SYMBOL;
   _buf.USERS.VALUE:=UDB_UPR.USERS().KOD;
   _buf.DOSTEP.VALUE:=UDB_UPR.DOSTEP;
   _result
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate_upr','xls_schemat',_a,_b,_c)";
_def.IMPORT:="exec('import_upr','xls_schemat',_a,_b,_c)";
~~


\validate_upr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [19.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.UDB_GRP='' || 'UDB_GRP'
   |? _buf.UD_TYP=''  || 'UD_TYP'
   |? _buf.UD_SKL=''  || 'UD_SKL'
   |? _buf.USERS=''   || 'USERS'
   |? _buf.DOSTEP=''  || 'DOSTEP'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? ('TN?'*_buf.DOSTEP)=0
|| _val.msg_inset('DOSTEP','T','N','?');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(UDB_GRP,'SYMBOL');
{? +_buf.UDB_GRP>_max
|| _val.msg_length('UDB_GRP',_max);
   _buf.UDB_GRP:=_max+_buf.UDB_GRP
?};
_max:=MS.fld_len(UD_TYP,'SYMBOL');
{? +_buf.UD_TYP>_max
|| _val.msg_length('UD_TYP',_max);
   _buf.UD_TYP:=_max+_buf.UD_TYP
?};
_max:=MS.fld_len(UD_SKL,'SYMBOL');
{? +_buf.UD_SKL>_max
|| _val.msg_length('UD_SKL',_max);
   _buf.UD_SKL:=_max+_buf.UD_SKL
?};
_max:=MS.fld_len(USERS,'KOD');
{? +_buf.USERS>_max
|| _val.msg_length('USERS',_max);
   _buf.USERS:=_max+_buf.USERS
?};

: weryfikacja spójności referencyjnej
{? (_typ:=exec('szukaj_ud_typ','schemat',_buf.UD_TYP))=null
|| _val.msg_norec('UD_TYP');
   _val.RESULT:=0;
   return()
?};
{? (_skl:=exec('szukaj_ud_skl','schemat',_typ,_buf.UD_SKL))=null
|| _val.msg_norec('UD_SKL');
   _val.RESULT:=0;
   return()
?};
{? ~USERS.find_tab(,'KOD',,'=',_buf.USERS)
|| _val.msg_norec('USERS');
   _val.RESULT:=0;
   return()
|| {? USERS.AKT<>'T' | (USERS.JTERM<>'T' & USERS.EKIOSK<>'T')
   || _val.MSG:='Ustawienie uprawnień niemożliwe.';
      _val.RESULT:=0;
      return()
   ?};
   _usr:=USERS.ref()
?};
{? ~UDB_SYS.find_tab(,'UDB_GRP','SYMBOL','=',_buf.UDB_GRP,'UD_TYP',,'=',_typ)
|| _val.msg_norec('UDB_SYS');
   _val.RESULT:=0;
   return()
|| _sys:=UDB_SYS.ref()
?};

_ref:=null;
{? UDB_UPR.find_tab(,
      'UDB_SYS',,'=',_sys,
      'UD_SKL',,'=',_skl,
      'USERS',,'=',_usr
   )
|| _ref:=UDB_UPR.ref()
?};

: optymalizacja importu i standaryzacja kodu
_obj:=_val.OBJ:=obj_new('UDB_UPR','UDB_SYS','UD_SKL','USERS','to_str');
_obj.to_str:="'%1/%2: %3 - %4'[_a.UDB_GRP,_a.UD_TYP,_a.UD_SKL,_a.USERS]";
_obj.UDB_UPR:=_ref;
_obj.UDB_SYS:=_sys;
_obj.UD_SKL:=_skl;
_obj.USERS:=_usr;

{? _ref=null
|| _val.ACTION:='add'
|| _val.ACTION:='put'
?};
~~


\import_upr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [19.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~l
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;

_set:="
   _a.UDB_SYS:=_c.UDB_SYS;
   _a.UD_SKL:=_c.UD_SKL;
   _a.USERS:=_c.USERS;
   _a.DOSTEP:=_b.DOSTEP
";

{? _val.ACTION='put' & _mod
:  włączono tryb nadpisywania
|| {? UDB_UPR.seek(_obj.UDB_UPR)
   || _set(UDB_UPR,_buf,_obj);
      {? ~UDB_UPR.put(1)
      || _val.msg_update(_obj.to_str(_buf));
         _val.RESULT:=0
      ?}
   || _val.msg_norec(,UDB_SYS.comment());
      _val.RESULT:=0
   ?}

|? _val.ACTION='add'
:  brak ograniczeń
|| UDB_UPR.blank();
   _set(UDB_UPR,_buf,_obj);
   {? ~UDB_UPR.add(1)
   || _val.msg_insert(_obj.to_str(_buf));
      _val.RESULT:=0
   ?}
?};
~~


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: wesos [19.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::       _b - obj_new - środowisko mechanizmu`
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;
_excel:=_b;

exec('select','xls_users_up',_selected,_excel,'SCHMT')

:Sign Version 2.0 jowisz:1028 2019/10/14 09:22:01 a507835de68d9cb0b311a6c69304a314b64aedc63f35530ce949504baecd47efab55a5064cac4257b9d9523119dd3170a96e93adbec9a1a8e86a9708137be0b047dfffa2b654753efc415cb137dd5643266fcb8dab60d574a3de7a991c7c1b89061a30274dae4c68c774471c60c28966ae43d42cdc454ca06f68862f1c9f3db3
