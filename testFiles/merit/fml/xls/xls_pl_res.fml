:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_pl_res.fml
:: Utworzony: 07.08.2018
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu zasobów planu operacyjnego
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='PL_RES';
_def.DOMAIN:=exec('name','#b_domain','TPP');
_def.FUNPAR:='ZWS_PAR_TOZA';

_def.FILE:='produkcja_planowanie.xlsx';
_def.SHEET:='Zasoby planu oper.'@+'=1,1';
_def.NAME:='Zasoby planu operacyjnego'@;
_def.DESC:='Zasoby planu operacyjnego'@;

_def.PREFIX:="PL_RES.index('SYM'); PL_RES.prefix()";
_def.TABLE:="PL_RES";
_def.FIELDS:="exec('fields','xls_pl_res',_a)";

_def.BEFORE:="PL_RES.cntx_psh()";
_def.AFTER:="PL_RES.cntx_pop()";
_def.SELECT:="exec('select','xls_pl_res',_a)";

_def.EXPORT:="exec('export','xls_pl_res',_a,_b)";
_def.VALIDATE:="exec('validate','xls_pl_res',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_pl_res',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('TYP',MS.name(PL_RES,'TYP'),0,,
   MS.comment(PL_RES,'TYP')+'\n'+'(max. %1 znaków)'@[$MS.fld_len(PL_RES,'TYP')]
);
_def.define('SYM',MS.name(PL_RES,'SYM'),0,,MS.name(PL_RES,'SYM')+' '+'(max. %1 znaków)'@[$MS.fld_len(PL_RES,'SYM')]);
_def.define('NAZ',MS.name(PL_RES,'NAZ'),0,,MS.name(PL_RES,'NAZ')+' '+'(max. %1 znaków)'@[$MS.fld_len(PL_RES,'NAZ')]);
_def.define('PARALLEL',MS.name(PL_RES,'PARALLEL'),1,,'[0]/[1]');
_def.define('LAYERS',MS.name(PL_RES,'LAYERS'),1,,'[T]/[N]');
_def.define('RESOURCE','Zasób'@,1);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
PL_RES.prefix();
{? _validate.ACTION='add'
|| PL_RES.blank();
   PL_RES.TYP:=_obj.TYP;
   PL_RES.SYM:=_obj.SYM;
   PL_RES.NAZ:=_obj.NAZ
?};
PL_RES.PARALLEL:=_obj.PARALLEL;
PL_RES.LAYERS:=_obj.LAYERS;
PL_RES.FROM_STA:=_validate.OBJ.FROM_STA;
PL_RES.FROM_GNI:=_validate.OBJ.FROM_GNI;
PL_RES.FROM_BRY:=_validate.OBJ.FROM_BRY;
PL_RES.FROM_WYD:=_validate.OBJ.FROM_WYD;
PL_RES.REF:=_validate.OBJ.REF;
PL_RES.KAL_NAZW:=_validate.OBJ.KAL_NAZW;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

{? PL_RES.TYP='P'
|| _result:=0
|| _result:=1;
   _table.TYP.VALUE:=PL_RES.TYP;
   _table.SYM.VALUE:=PL_RES.SYM;
   _table.NAZ.VALUE:=PL_RES.NAZ;
   _table.PARALLEL.VALUE:=PL_RES.PARALLEL;
   _table.LAYERS.VALUE:=PL_RES.LAYERS;
   {? PL_RES.FROM_STA<>null()
   || _table.RESOURCE.VALUE:=PL_RES.FROM_STA().KOD;
      _excel.write_async('TWRKPLC',PL_RES.FROM_STA)
   |? PL_RES.FROM_GNI<>null()
   || _table.RESOURCE.VALUE:=PL_RES.FROM_GNI().SYMBOL;
      _excel.write_async('TWRKZBR',PL_RES.FROM_GNI)
   |? PL_RES.FROM_BRY<>null()
   || _table.RESOURCE.VALUE:=PL_RES.FROM_BRY().KOD;
      _excel.write_async('ZLBR',PL_RES.FROM_BRY)
   |? PL_RES.FROM_WYD<>null()
   || _table.RESOURCE.VALUE:=PL_RES.FROM_WYD().SYMBOL;
      _excel.write_async('UD_SKL',PL_RES.FROM_WYD)
   ?}
?};
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('REF','KAL_NAZW','FROM_STA','FROM_GNI','FROM_BRY','FROM_WYD');
_result.OBJ.REF:='';
_result.OBJ.KAL_NAZW:=_result.OBJ.FROM_STA:=_result.OBJ.FROM_GNI:=_result.OBJ.FROM_BRY:=_result.OBJ.FROM_WYD:=null();
{? _obj.TYP='S'
|| _result.OBJ.FROM_STA:=exec('FindInSet','#table','TWRKPLC','KOD',_obj.RESOURCE,,,1);
   _result.OBJ.REF:=$_result.OBJ.FROM_STA;
   _result.OBJ.KAL_NAZW:=exec('FindAndGet','#table',TWRKPLC,_result.OBJ.FROM_STA,,"KAL",null())
|? _obj.TYP='G'
|| _result.OBJ.FROM_GNI:=exec('FindInSet','#table','TWRKZBR','SYM',_obj.RESOURCE,,,1);
   _result.OBJ.REF:=$_result.OBJ.FROM_GNI;
   _result.OBJ.KAL_NAZW:=exec('FindAndGet','#table',TWRKZBR,_result.OBJ.FROM_GNI,,"KAL",null())
|? _obj.TYP='B'
|| _result.OBJ.FROM_BRY:=exec('FindInSet','#table','ZLBR','KOD',_obj.RESOURCE,,,1);
   _result.OBJ.REF:=$_result.OBJ.FROM_BRY;
   _result.OBJ.KAL_NAZW:=exec('FindAndGet','#table',ZLBR,_result.OBJ.FROM_BRY,,"KAL",null())
|? _obj.TYP='W'
|| _ud_typ:=null();
   UD_TYP.cntx_psh();
   UD_TYP.index('SYMBOL');
   UD_TYP.prefix('PODZORG');

   {? UD_TYP.first() || _ud_typ:=UD_TYP.ref() ?};
   UD_TYP.cntx_pop();
   _result.OBJ.FROM_WYD:=exec('FindInSet','#table','UD_SKL','AKTYWNY',_obj.RESOURCE,_ud_typ,,1,'T');
   _result.OBJ.REF:=$_result.OBJ.FROM_WYD;
:: KALENDARZE WYDZIAŁÓW???
   ~~
?};

:: Błędy
{? +_obj.TYP=0 | 'SGBW'*_obj.TYP=0
|| _result.msg_inset('TYP','B','G','S','W');
   _result.RESULT:=0
?};
{? (_obj.TYP='S' & _result.OBJ.FROM_STA=null()) |
   (_obj.TYP='G' & _result.OBJ.FROM_GNI=null()) |
   (_obj.TYP='B' & _result.OBJ.FROM_BRY=null()) |
   (_obj.TYP='W' & _result.OBJ.FROM_WYD=null())
|| _result.msg_norec('RESOURCE')
?};
{? +_obj.PARALLEL=0 | '01'*_obj.PARALLEL=0
|| _result.msg_inset('PARALLEL','0','1');
   _result.RESULT:=0
?};
{? _obj.LAYERS=''
|| _obj.LAYERS:='N'
?};
{? +_obj.LAYERS=0 | 'TN'*_obj.LAYERS=0
|| _result.msg_inset('LAYERS','T','N');
   _result.RESULT:=0
?};

_chk:="''";

:: OK
{? _result.RESULT>0
|| PL_RES.index('SYM');
   PL_RES.prefix(_obj.TYP,_obj.SYM,);
   {? PL_RES.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_pl_res',_obj,_mode,_result);
         {? _chk(1)<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_pl_res',_obj,_mode,_result);
      {? _chk(0)<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=PL_RES.add(1)
   |? _validate.ACTION='put'
   || _result:=PL_RES.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie zasobu %1 nie powiodło się.'@[_obj.SYM]
   || _validate.MSG:='Poprawa zasobu %1 nie powiodła się.'@[_obj.SYM]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(2
   ,'TYP','STRING[1]','Typ zasobu'@
   ,'SYM','STRING[60]','Symbol zasobu'@
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'@
   ,'NAZ','STRING[80]','Nazwa zasobu'@
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'TYP',,,'SYM',,);

PL_RES.cntx_psh();
PL_RES.index('SYM');
PL_RES.prefix();
{? PL_RES.first()
|| {!
   |? {? PL_RES.TYP<>'P'
      || _tab.blank();
         _tab.REF:=$PL_RES.ref();
         _selected.prefix($PL_RES.ref());
         {? _selected.first()
         || _tab.SELECTED:='T'
         || _tab.SELECTED:='N'
         ?};
         _tab.TYP:=PL_RES.TYP;
         _tab.SYM:=PL_RES.SYM;
         _tab.NAZ:=PL_RES.NAZ;
         _tab.add()
      ?};
      PL_RES.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'TYP,SYM,NAZ',20,'Wybór zasobów planu operacyjnego do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
PL_RES.cntx_pop();
_result

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:49 716f6e41adce02acc280f1e40eb9da4a9ffcdf01690c00de38c563c4d4a6d0945b90290b3f20627e01b0fde0af29f23eba9cef3b568d24c20a2a6895cc85bc0198cd73438639494e7d8d379e49d4684d9febc6fb6ae5a1bc38982070dcaf8582b43aa9cf539840099cdaefece3d4a0fe898d488d773f43d2fa66d27a01dd56ab
