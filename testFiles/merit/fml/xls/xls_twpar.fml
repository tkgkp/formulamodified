:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_twpar.fml
:: Utworzony: 12.08.2020
:: Autor: AKUL
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu parametrów produktu kart technologicznych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TWPAR';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='TKTL';
_def.HIDDEN:='T';
_def.SKIP:='T';
_def.ADD_ROWS:=0;

_def.FILE:='produkcja_technologie.xlsx';
_def.SHEET:='Parametry wyrobów'@+'=1,1';
_def.NAME:='Parametry wyrobów'@;
_def.DESC:='Wartości parametrów dla produktów karty'@;

_def.PREFIX:="TWPAR.index('TPR'); TWPAR.prefix()";
_def.TABLE:="TWPAR";
_def.FIELDS:="exec('fields','xls_twpar',_a)";

_def.BEFORE:="TWPAR.cntx_psh()";
_def.AFTER:="{? _a.is_import() || exec('tktl_import_clear','tech_common',_a.excel) ?};TWPAR.cntx_pop()";

_def.EXPORT:="exec('export','xls_twpar',_a,_b)";
_def.VALIDATE:="exec('validate','xls_twpar',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_twpar',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_edit:=0;
_def.define('TKTL_NRK','Nr karty'@,_edit);
_def.define('TKTL_WER','Wersja karty'@,_edit);
_def.define('KTM','Produkt'@,_edit);
_def.define('DEFAULT','Domyślny'@,_edit,,'Domyślny produkt karty - [T]/[N]');
_def.define('NRP','Numer parametru'@,_edit,,,type_of(0),0);
_def.define('VAL','Wartość'@,_edit);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TWPAR.prefix();
{? _validate.ACTION='add'
|| TWPAR.blank();
   TWPAR.TKTLW:=_validate.OBJ.TKTLW;
   TWPAR.KTM:=_validate.OBJ.KTM;
   TWPAR.TPAR:=_validate.OBJ.TPAR
?};
TWPAR.VAL:=_obj.VAL;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.TKTL_NRK.VALUE:=TWPAR.TKTLW().TKTL().NRK;
_table.TKTL_WER.VALUE:=TWPAR.TKTLW().TKTL().WER;
_table.KTM.VALUE:=TWPAR.TKTLW().KTM().KTM;
_table.DEFAULT.VALUE:=TWPAR.TKTLW().DEFAULT;
_table.NRP.VALUE:=TWPAR.TPAR().NRP;
_table.VAL.VALUE:=TWPAR.VAL;

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('TKTLW','TPAR','KTM');
_imp_err:=0;
_check:=1;

:: Sprawdzam czy do karty zgłoszony został błąd
{? __TKTL_ERR.find_key(_obj.TKTL_NRK,_obj.TKTL_WER,)
|| _imp_err:=1
?};
:: Jeżeli wcześniej został zgłoszony błąd to wychodzę wcześniej bez dodatkowej walidacji
{? _imp_err>0
|| _result.RESULT:=0
||
:: Wyszukanie refów powiązanych rekordów
   _tktl:={? _obj.TKTL_NRK='' | _obj.TKTL_WER=''
          || null()
          || exec('FindInSet','#table','TKTL','NRK',_obj.TKTL_WER,'T',,1,_obj.TKTL_NRK,null())
          ?};
   _result.OBJ.KTM:={? _obj.KTM=''
                    || null()
                    || exec('FindInSet','#table','M','MATKTM',_obj.KTM,,,1,,null())
                    ?};
   _result.OBJ.TKTLW:={? _tktl=null() | _result.OBJ.KTM=null()
                      || null()
                      || _tktlw:=exec('FindInSet','#table','TKTLW','REF',_obj.DEFAULT,_tktl,,1,_result.OBJ.KTM,null());
::                       Jak nie odnaleziono rekordu to sprawdzam jeszcze tabelę mapującą, bo mógł się zmienić
::                       znacznik domyślności
                         {? _tktlw=null()
                         || {? __TKTLW_MAP.find_key(_obj.TKTL_NRK,_obj.TKTL_WER,_obj.KTM,_obj.DEFAULT,)
                            || _tktlw:=exec('FindAndGet','#table','TKTLW',__TKTLW_MAP.REF,,,null())
                            ?}
                         ?};
                         _tktlw
                      ?};
   _result.OBJ.TPAR:={? _obj.NRP<0
                     || null()
                     || exec('FindInSet','#table','TPAR','NN',_obj.NRP,_tktl,,,,null())
                     ?};
:: Błędy
   {? _result.OBJ.TKTLW=null()
   || _result.msg_norec('TKTL_NRK');
      _result.RESULT:=0
   ?};
   {? _result.OBJ.TPAR=null()
   || _result.msg_norec('TPAR');
      _result.RESULT:=0
   ?}
?};

:: OK
{? _result.RESULT>0
||
   TWPAR.index('TPR');
   TWPAR.prefix(_result.OBJ.TKTLW,_result.OBJ.TPAR);
   {? TWPAR.first()
   || {? _mode=0
      || _result.RESULT:=0;
         _check:=0;
         _result.MSG:='Technologia %1 (wer.%2) posiada już paramet technologiczny o numerze %3 przypisany do '
                      'produktu \'%4\'.'@[_obj.TKTL_NRK,_obj.TKTL_WER,$_obj.NRP,_obj.KTM]
      || _result.ACTION:='put';
         exec('record','xls_twpar',_obj,_mode,_result)
      ?}
   || _result.ACTION:='add';
      exec('record','xls_twpar',_obj,_mode,_result)
   ?}
?};
{? _result.RESULT<=0 & _check>0 & _imp_err=0
||
:: Jak błąd to ustawiam znacznik błędu na karcie technologicznej
   {? _tktl<>null()
   || TKTL.cntx_psh();
      TKTL.prefix();
      {? TKTL.seek(_tktl)
      || TKTL.IMP_ERR:='T';
         TKTL.put();
         _result.MSG+='\nKarta %1 (wer. %2) oraz wszystkie jej elementy, które zostały do tej pory zaimportowane '
                      'zostaną usunięte.'@[TKTL.NRK,TKTL.WER];
::       Dodaję kartę do listy ignorowanych kart przy imporcie
         __TKTL_ERR.NRK:=_obj.TKTL_NRK;
         __TKTL_ERR.WER:=_obj.TKTL_WER;
         __TKTL_ERR.add()
      ?};
      TKTL.cntx_pop()
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| EXCEL_ENV.ID_GRP:=exec('FindAndGet','#table','TKTLW',TWPAR.TKTLW,,"$TKTLW.TKTL",'');
   {? _validate.ACTION='add'
   || _result:=TWPAR.add(1)
   |? _validate.ACTION='put'
   || _result:=TWPAR.put(1)
   ?}
|| EXCEL_ENV.ID_GRP:=''
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie parametru do wersji wyrobu \'%3\' karty technologicznej %1 (%2) nie powiodło się.'@
                     [_obj.TKTL_NRK,_obj.TKTL_WER,_obj.KTM]
   || _validate.MSG:='Poprawa parametru do wersji wyrobu \'%3\' karty technologicznej %1 (%2) nie powiodła się.'@
                     [_obj.TKTL_NRK,_obj.TKTL_WER,_obj.KTM]
   ?}
?};
_result

:Sign Version 2.0 jowisz:1048 2020/10/16 15:26:07 a6e9a889bf73cb5763173355ef5b0c9bfd77263adb217efe2c882b33500e27b3158f7346cbb87d9d7cdf3761f8bd5b35add5eec4180e8f76f84e2b76f33dc2f2a9c41041beed809a6f0a41202a898bafb0230ad7688dc7326fc86f51e15c42eae094756f4b82fca9aca1846125e3b070f0003ffdc9dfa1e264d41b11a1035216
