:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_pgrupy.fml
:: Utworzony: 13.08.2018
:: Autor: GZ
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu grup pracowników
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='PGRUPY';
_def.DOMAIN:=exec('name','#b_domain','WYP');
_def.FUNPAR:='ZWS_PAR_WGPR';

_def.FILE:='parametryzacja.xlsx';
_def.SHEET:='Grupy pracowników'@+'=1,1';
_def.NAME:='Grupy pracowników'@;
_def.DESC:='Grupy pracowników'@;

_def.PREFIX:="PGRUPY.index('SYM'); PGRUPY.prefix()";
_def.TABLE:="PGRUPY";
_def.FIELDS:="exec('fields','xls_pgrupy',_a)";

_def.BEFORE:="PGRUPY.cntx_psh()";
_def.AFTER:="PGRUPY.cntx_pop()";
_def.SELECT:="exec('select','xls_pgrupy',_a)";

_def.EXPORT:="exec('export','xls_pgrupy',_a,_b)";
_def.VALIDATE:="exec('validate','xls_pgrupy',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_pgrupy',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('SYM','Symbol'@,0,,'Symbol (max. %1 znaków)'@['20']);
_def.define('NAZWA','Nazwa'@,0,,'Nazwa (max. %1 znaków)'@['100']);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
PGRUPY.prefix();
{? _validate.ACTION='add'
|| PGRUPY.blank();
   PGRUPY.SYM:=_obj.SYM
?};
PGRUPY.NAZWA:=_obj.NAZWA;

~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;

_table.SYM.VALUE:=PGRUPY.SYM;
_table.NAZWA.VALUE:=PGRUPY.NAZWA;

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_chk:="
   _chk:=__CHK.record(PGRUPY,,'SYM');
   {? _chk=''
   || _chk:=__CHK.index(PGRUPY,_a)
   ?};
   _chk
";

_result.RESULT:=1;

_result.OBJ:=obj_new('SYM','NAZWA');

:: Ostrzeżenia
{? +_obj.NAZWA>100
|| _result.msg_length('NAZWA',100)
?};
{? +_obj.SYM>20
|| _result.msg_length('SYM',20)
?};

:: OK
PGRUPY.index('SYM');
PGRUPY.prefix(_obj.SYM,);
{? PGRUPY.first()
|| {? _mode=0
   || _result.RESULT:=0
   || _result.ACTION:='put';
      exec('record','xls_pgrupy',_obj,_mode,_result);
      {? _chk(1)<>''
      || _result.RESULT:=0
      ?}
   ?}
|| _result.ACTION:='add';
   exec('record','xls_pgrupy',_obj,_mode,_result);
   {? _chk(0)<>''
   || _result.RESULT:=0
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=PGRUPY.add(1)
   |? _validate.ACTION='put'
   || _result:=PGRUPY.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie grupy pracowników %1 nie powiodło się.'@[$_obj.SYM]
   || _validate.MSG:='Poprawa grupy pracowników %1 nie powiodła się.'@[$_obj.SYM]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,
   'SYM','STRING[20]','Symbol'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'NAZWA','STRING[100]','Nazwa'
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'SYM',,);

PGRUPY.cntx_psh();
PGRUPY.index('SYM');
PGRUPY.prefix();
{? PGRUPY.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$PGRUPY.ref();
      _selected.prefix($PGRUPY.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.SYM:=PGRUPY.SYM;
      _tab.NAZWA:=PGRUPY.NAZWA;
      _tab.add();
      PGRUPY.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'SYM,NAZWA',20,'Wybór grup pracowników do eksportu'@);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
PGRUPY.cntx_pop();
_result

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:49 0917dde53e7702317e83ad9b3d9d4ec9239144843560c2f69ddae1de74cac414c86ea2a78585421a7a6b968de6814ce22f34f71b73c424c5a9a5ad4dd96975cef5e1220779715c32bedd340c6917e27425c8388f5ce17c74d43c299a22a4dcbf4d9c0d055718e4040c7f17b09a065f6b782e71f63071daaaba423a6a4edc3a60
