:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_px_set.fml
:: Utworzony: 09.08.2018
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu zestawów planu strategicznego
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='PX_SET';
_def.DOMAIN:=exec('name','#b_domain','TPP');
_def.FUNPAR:='ZWS_PAR_ZTAW';

_def.FILE:='produkcja_planowanie.xlsx';
_def.SHEET:='Zestawy planu'@+'=1,1';
_def.NAME:='Zestawy planu strategicznego'@;
_def.DESC:='Zestawy planu strategicznego'@;

_def.PREFIX:="PX_SET.index('SYMBOL'); PX_SET.prefix()";
_def.TABLE:="PX_SET";
_def.FIELDS:="exec('fields','xls_px_set',_a)";

_def.BEFORE:="PX_SET.cntx_psh()";
_def.AFTER:="PX_SET.cntx_pop()";
_def.SELECT:="exec('select','xls_px_set',_a)";

_def.EXPORT:="exec('export','xls_px_set',_a,_b)";
_def.VALIDATE:="exec('validate','xls_px_set',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_px_set',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('SYMBOL',MS.name(PX_SET,'SYMBOL'),0,,
   MS.name(PX_SET,'SYMBOL')+' '+'(max. %1 znaków)'@[$MS.fld_len(PX_SET,'SYMBOL')]
);
_def.define('DEFAULT',MS.name(PX_SET,'DEFAULT'),1,,'[T]/[N]');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
PX_SET.prefix();
{? _validate.ACTION='add'
|| PX_SET.blank();
   PX_SET.SYMBOL:=_obj.SYMBOL
?};
PX_SET.DEFAULT:=_obj.DEFAULT;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.SYMBOL.VALUE:=PX_SET.SYMBOL;
_table.DEFAULT.VALUE:=PX_SET.DEFAULT;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

exec('mainversion_chk','px_ver');

:: Ostrzeżenia
_max:=MS.fld_len(PX_SET,'SYMBOL');
{? +_obj.SYMBOL>_max
|| _result.msg_length('SYMBOL',_max)
?};

:: Błędy
{? +_obj.DEFAULT=0 | 'TN'*(_obj.DEFAULT)=0
|| _result.msg_inset('DEFAULT','T','N');
   _result.RESULT:=0
?};

_chk:="''";

:: OK
{? _result.RESULT>0
|| PX_SET.index('SYMBOL');
   PX_SET.prefix(_obj.SYMBOL,);
   {? PX_SET.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_px_set',_obj,_mode,_result);
         {? _chk(1)<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_px_set',_obj,_mode,_result);
      {? _chk(0)<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=PX_SET.add(1)
   |? _validate.ACTION='put'
   || _result:=PX_SET.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie zestawu %1 nie powiodło się.'@[$_obj.SYMBOL]
   || _validate.MSG:='Poprawa zestawu %1 nie powiodła się.'@[$_obj.SYMBOL]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1
   ,'SYMBOL','STRING[100]',MS.name(PX_SET,'SYMBOL')
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'@
   ,'DEFAULT','STRING[1]',MS.name(PX_SET,'DEFAULT')
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'SYMBOL',,);

PX_SET.cntx_psh();
PX_SET.index('SYMBOL');
PX_SET.prefix();
{? PX_SET.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$PX_SET.ref();
      _selected.prefix($PX_SET.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.SYMBOL:=PX_SET.SYMBOL;
      _tab.DEFAULT:=PX_SET.DEFAULT;
      _tab.add();
      PX_SET.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'SYMBOL,DEFAULT',20,'Wybór zestawu planu strategicznego do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
PX_SET.cntx_pop();
_result


\init_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='PX_SETU';
_def.DOMAIN:=exec('name','#b_domain','TPP');
_def.FUNPAR:='ZWS_PAR_ZTAW';

_def.FILE:='produkcja_planowanie.xlsx';
_def.SHEET:='Użytkownicy zestawów planu'@+'=1,1';
_def.NAME:='Użytkownicy zestawów planu strategicznego'@;
_def.DESC:='Użytkownicy zestawów planu strategicznego'@;

_def.PREFIX:="PX_SETU.index('PX_SET'); PX_SETU.prefix()";
_def.TABLE:="PX_SETU";
_def.FIELDS:="exec('fields_u','xls_px_set',_a)";

_def.BEFORE:="PX_SETU.cntx_psh()";
_def.AFTER:="PX_SETU.cntx_pop()";

_def.EXPORT:="exec('export_u','xls_px_set',_a,_b)";
_def.VALIDATE:="exec('validate_u','xls_px_set',_a,_b,_c)";
_def.IMPORT:="exec('import_u','xls_px_set',_a,_b,_c)";
~~


\fields_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('PX_SET',MS.name(PX_SETU,'PX_SET'),0,,
   MS.name(PX_SETU,'PX_SET')+' '+'(max. %1 znaków)'@[$MS.fld_len(PX_SET,'SYMBOL')]
);
_def.define('USERS',MS.name(PX_SETU,'USERS'),0,,
   MS.name(PX_SETU,'USERS')+' '+'(max. %1 znaków)'@[$MS.fld_len(USERS,'KOD')]
);
~~


\record_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
PX_SETU.prefix();
{? _validate.ACTION='add'
|| PX_SETU.blank();
   PX_SETU.PX_SET:=_validate.OBJ.PX_SET;
   PX_SETU.USERS:=_validate.OBJ.USERS
?};
~~


\export_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.PX_SET.VALUE:=PX_SETU.PX_SET().SYMBOL; _excel.write_async('PX_SET',PX_SETU.PX_SET);
_table.USERS.VALUE:=PX_SETU.USERS().KOD;      _excel.write_async('USERS',PX_SETU.USERS);
_result


\validate_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNml
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

exec('mainversion_chk','px_ver');

_result.RESULT:=1;

_result.OBJ:=obj_new('PX_SET','USERS');
_result.OBJ.PX_SET:=exec('FindInSet','#table','PX_SET','SYMBOL',_obj.PX_SET,,"PX_SET.ref()",1);
_result.OBJ.USERS:=exec('FindInSet','#table','USERS','USR_KKOD',_obj.USERS,,"USERS.ref()",1);

:: Błędy
{? _result.OBJ.PX_SET=null()
|| _result.msg_norec('PX_SET');
   _result.RESULT:=0
?};
{? _result.OBJ.USERS=null()
|| _result.msg_norec('USERS');
   _result.RESULT:=0
?};

_chk:="''";

:: OK
{? _result.RESULT>0
|| PX_SETU.index('PX_SET');
   PX_SETU.prefix(_result.OBJ.PX_SET,_result.OBJ.USERS);
   {? PX_SETU.first()
   ||
::    Nie ma czego poprawiać
      ~~
   || _result.ACTION:='add';
      exec('record_u','xls_px_set',_obj,_mode,_result);
      {? _chk(0)<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\import_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukfml
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=PX_SETU.add(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie zestawu %1 dla użytkownika %2 nie powiodło się.'@[_obj.PX_SET,_obj.USERS]
   ?}
?};
_result


\select_u
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GZ [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1
   ,'SYMBOL','STRING[100]',MS.name(PX_SET,'SYMBOL')
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'@
   ,'DEFAULT','STRING[1]',MS.name(PX_SET,'DEFAULT')
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'SYMBOL',,);

PX_SET.cntx_psh();
PX_SET.index('SYMBOL');
PX_SET.prefix();
{? PX_SET.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$PX_SET.ref();
      _selected.prefix($PX_SET.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.SYMBOL:=PX_SET.SYMBOL;
      _tab.DEFAULT:=PX_SET.DEFAULT;
      _tab.add();
      PX_SET.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'SYMBOL,DEFAULT',20,'Wybór zestawu planu strategicznego do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
PX_SET.cntx_pop();
_result

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:42 d7bfcf604138452a4f6e2cc8e787498b191234d0792235fadaec8a54e1c0f63d88f0b533fc0ab070d8b6a033317d7ea92ea02dc361606202e8c2dab8e08fbe4f73f55bc26c15034fa11834970070c919e99557de3544cb3c86292bdd2e8d2e86eb29b657ff0f8bc9dffcdbdac76b9430dba66a6a7a997c2904a43b7481465d6a
