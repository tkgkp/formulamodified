:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_t2sts.fml
:: Utworzony: 31.07.2018
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu typy dokumentów sprzedaży, zakupów przypisane do stanowisk
::======================================================================================================================


\init_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='T2STS';
_def.DOMAIN:=exec('name','#b_domain','LSP');
_def.FUNPAR:='ZWS_PAR_LTDS';

_def.FILE:='sprzedaz.xlsx';
_def.SHEET:='Typy dokumentów st.sprzed.=1,1';
_def.NAME:='Typy dokumentów dla stanowiska sprzedaży'@;
_def.DESC:='Typy dokumentów dla stanowiska sprzedaży';

_def.PREFIX:="exec('prefix','xls_t2sts','S')";
_def.TABLE:="exec('table','xls_t2sts')";
_def.FIELDS:="exec('fields','xls_t2sts',_a,'S')";

_def.BEFORE:="T2STS.cntx_psh()";
_def.AFTER:="T2STS.cntx_pop()";
_def.SELECT:="exec('select','xls_t2sts',_a,'S')";

_def.EXPORT:="exec('export','xls_t2sts',_a,_b,'S')";
_def.IMPORT:="exec('import','xls_t2sts',_a,_b,_c,'S')";
_def.VALIDATE:="exec('validate','xls_t2sts',_a,_b,_c,'S')";
~~


\init_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='T2STZ';
_def.DOMAIN:=exec('name','#b_domain','LZK');
_def.FUNPAR:='ZWS_PAR_LTDZ';

_def.FILE:='zakupy.xlsx';
_def.SHEET:='Typy dokumentów st.zakupu=1,1';
_def.NAME:='Typy dokumentów dla stanowiska zakupu'@;
_def.DESC:='Typy dokumentów dla stanowiska zakupu';

_def.PREFIX:="exec('prefix','xls_t2sts','Z')";
_def.TABLE:="exec('table','xls_t2sts')";
_def.FIELDS:="exec('fields','xls_t2sts',_a,'Z')";

_def.BEFORE:="T2STS.cntx_psh()";
_def.AFTER:="T2STS.cntx_pop()";
_def.SELECT:="exec('select','xls_t2sts',_a,'Z')";

_def.EXPORT:="exec('export','xls_t2sts',_a,_b,'Z')";
_def.IMPORT:="exec('import','xls_t2sts',_a,_b,_c,'Z')";
_def.VALIDATE:="exec('validate','xls_t2sts',_a,_b,_c,'Z')";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa zakres eksportowanych danych
::   WE: _a - 'S'-sprzedaż 'Z'-zakup
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
T2STS.index('SZ');
T2STS.prefix(_a);
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
T2STS


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('STS','Stanowisko',0,,'Kod stanowiska: 8 znakowy kod - duże litery.');
_def.define('T','Typ dokument',0,,'Typ dokumentu: 8 znakowy kod - duze litery');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::       _d - 'S'-sprzedaż 'Z'-zakup
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

T2STS.index('SZ');
T2STS.prefix(_d);
{? _validate.ACTION='add'
||
   T2STS.blank()
?};

T2STS.STS:=_validate.OBJ.STS;
T2STS.T:=_validate.OBJ.T;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::       _c - 'S'-sprzedaż 'Z'-zakup
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
T2STS.cntx_psh();
{? _c='S'
|| _table.STS.VALUE:=T2STS.STS().KOD; _excel.write_async('STS',T2STS.STS);
   _table.T.VALUE:=T2STS.T().T; _excel.write_async('TYPYSP',T2STS.T)
|| _table.STS.VALUE:=T2STS.STS().KOD; _excel.write_async('STZ',T2STS.STS);
   _table.T.VALUE:=T2STS.T().T; _excel.write_async('TYPYZAK',T2STS.T)
?};
T2STS.cntx_pop();
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::       _d - 'S'-sprzedaż 'Z'-zakup
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('STS','T');

_result.OBJ.STS:={? _obj.STS='' || null() || exec('FindInSet','#table','STS','KOD',_obj.STS,,,1) ?};
{? _result.OBJ.STS=null()
|| _result.MSG:={? _obj.STS=''
                || 'Nie podano stanowiska %2 dla typu dokumentu %1.'@[_obj.T,{? _d='S' || 'sprzedaży'@ || 'zakupu'@ ?}]
                || 'Nie znaleziono stanowiska %2 %1.'@[_obj.STS,{? _d='S' || 'sprzedaży'@ || 'zakupu'@ ?}]
                ?};
   _result.RESULT:=0
|? exec('FindAndGet','#table',STS,_result.OBJ.STS,,"SZ",'')<>_d
|| _result.MSG:='Podany stanowisko nie jest stanowiskiem %1.'@[{? _d='S' || 'sprzedaży'@ || 'zakupu'@ ?}];
   _result.RESULT:=0
?};
_result.OBJ.T:={? _obj.T='' || null() || exec('FindInSet','#table','TYPYSP','TYPYKOD',_obj.T,,,1) ?};
{? _result.OBJ.T=null()
|| _result.MSG:={? _obj.T=''
                || 'Nie podano typu dokumentu dla stanowiska %2 %1.'@[_obj.STS,{? _d='S' || 'sprzedaży'@ || 'zakupu'@ ?}]
                || 'Nie znaleziono typu dokumentu %1.'@[_obj.T]
                ?};
   _result.RESULT:=0
|? exec('FindAndGet','#table',TYPYSP,_result.OBJ.T,,"ZAK",'')<>{? _d='S' || 'N' || 'T' ?}
|| _result.MSG:='Podany typ dokumentu nie jest dokumentem %1.'@[{? _d='S' || 'sprzedaży'@ || 'zakupu'@ ?}];
   _result.RESULT:=0
?};


{? _result.RESULT=1
||
   T2STS.index('UNIK');
   T2STS.prefix(_result.OBJ.STS,_result.OBJ.T);
   {? T2STS.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_t2sts',_obj,_mode,_result,_d)
      ?}
   || _result.ACTION:='add';
      exec('record','xls_t2sts',_obj,_mode,_result,_d)
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::       _d - 'S'-sprzedaż 'Z'-zakup
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=T2STS.add(1)
   |? _validate.ACTION='put'
   || _result:=T2STS.put(1)
   ?}
?};
{? _result=0
|| _validate.MSG:={? _validate.ACTION='add'
                  || 'Dodanie typu dokumentu dla stanowiska %1 nie powiodło się.'@[{? _d='S' || 'sprzedaży'@ || 'zakupu'@ ?}]
                  || 'Modyfikacja typu dokumentu dla stanowiska %1 nie powiodła się.'@[{? _d='S' || 'sprzedaży'@ || 'zakupu'@ ?}]
                  ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::       _b - 'S'-sprzedaż 'Z'-zakup
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'STS','STRING[8]','Stanowisko'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'T','STRING[8]','Typ dokumentu');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'STS',,,'T',,);

STS.cntx_psh();
TYPYSP.cntx_psh();
T2STS.cntx_psh();
T2STS.index('T');
T2STS.prefix();
{? T2STS.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$T2STS.ref();
      _selected.prefix($T2STS.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.STS:=T2STS.STS().KOD;
      _tab.T:=T2STS.T().T;
      _tab.add();
      T2STS.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'STS,T',20,'Wybór typów dokumentów dla stanowiska %1'@[{? _b='S' || 'sprzedaży'@ || 'zakupu'@ ?}],1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
STS.cntx_pop();
TYPYSP.cntx_pop();
T2STS.cntx_pop();
_result

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:43 4a5924563f91176deb3c3269097ec860440b94fcbcebe07691df27295e240a684bdd4aed7d77a557b5758587c57133b4b49d2a25a6a8a61cc907b655dc9e28424c7756f7403674a3755ee78a601053bf15c9b274c2c30469988b17930d0947830266d77bffc83b312adc2563f4808c44a743662ddf1a45c0d37766a2e0986cc3
