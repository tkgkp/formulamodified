:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_users.fml
:: Utworzony: 02.07.2018
:: Autor: WH
:: Systemy:
::======================================================================================================================
:: Zawartość:
::======================================================================================================================

\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - obiekt z definicją, który należy zasilić - wynik działania exec('args_init','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='B_USRROL';
_def.LOCK:=0;

_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_USERS';
_def.FILE:='users.xlsx';
_def.SHEET:='Role użytkowników'@+'=1,3';
_def.NAME:='Role użytkowników'@;
_def.DESC:='Role użytkowników'@;

_def.PREFIX:="B_USRROL.index('UNIK');B_USRROL.prefix(REF.FIRMA)";
_def.TABLE:="B_USRROL";
_def.FIELDS:="exec('fields','xls_role_usr',_a)";

_def.BEFORE:="B_USRROL.cntx_psh()";
_def.AFTER:="B_USRROL.cntx_pop()";
_def.SELECT:="exec('select','xls_role_usr',_a)";

_def.EXPORT:="exec('export','xls_role_usr',_a,_b)";
_def.VALIDATE:="exec('validate','xls_role_usr',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_role_usr',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Zwraca eksportowane pola tabeli i ich atrybuty w excel
::   WE: _a - obiekt z definicją pól który należy zasilić - wynik działania exec('args_fields','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_tooltip:=MS.name(USERS,'KOD')+' '+'(max. %1 znaków). '@[$MS.fld_len(USERS,'KOD')];
_tooltip+='Wymagane jeżeli Login WWW pusty.'@;
_def.define('USERS_K','Login'@,1,,_tooltip);

_tooltip:=MS.name(USERS,'WEBLOGIN')+' '+'(max. %1 znaków). '@[$MS.fld_len(USERS,'WEBLOGIN')];
_tooltip+='Wymagane jeżeli Login pusty.'@;
_def.define('USERS_W','Login WWW'@,1,,_tooltip);

_tooltip:=MS.name(B_ROLE,'NAME')+' '+'(max. %1 znaków). '@[$MS.fld_len(B_ROLE,'NAME')];
_tooltip+='Wymagane.'@;
_def.define('B_ROLE','Rola'@,1,,_tooltip);

~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól tabeli MacroBASE
::                      każdy obiekt ma taką strukturę:
::                        _obj_bridge.NAZWA_POLA.VALUE - wartość która będzie zapisana w EXCEL
::                        _obj_bridge.NAZWA_POLA.EDITABLE - czy komórka będzie edytowalna
::                        _obj_bridge.NAZWA_POLA.COLOR - kolor w formacie html czyli #ffffff
::                      Aktualny wewnętrzny obiekt można podejrzeć tu: exec('filler_obj_core','#excel_imex')
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_obj_bridge:=_b;
_result:=0;
{? B_USRROL.B_ROLE<>null() & B_USRROL.USERS<>null()
|| _result:=1;
   _obj_bridge.B_ROLE.VALUE:=B_USRROL.B_ROLE().NAME; _excel.write_async('B_ROLE',B_USRROL.B_ROLE);
   _obj_bridge.USERS_K.VALUE:=B_USRROL.USERS().KOD;
   _obj_bridge.USERS_W.VALUE:=B_USRROL.USERS().WEBLOGIN;
   _excel.write_async('USERS',B_USRROL.USERS)
?};
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER   - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obj_new() - obiekt z resultem, wynik działania exec('args_valid','#excel_imex').
::                        Obiekt ten jest przekazywany do formuły na IMPORT. Pole RESULT decyduje czy formuła
::                        na import się wykona. Pole MSG służy to odpisania komunikatu
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_can_continue:=1;
:: Walidacja wartości z Excel, czy są w nim pola których się spodziewam i czy mają dobre wartości
{? _obj.B_ROLE=''
|| _can_continue:=0;
   _result.msg_empty('B_ROLE')
?};
{? _obj.USERS_K='' & _obj.USERS_W=''
|| _can_continue:=0;
   _result.MSG:='Brak wartości w kolumnach: %1 i %2'@[_result.name('USERS_K'),_result.name('USERS_W')]
?};

_b_role:=null();
{? _can_continue>0
|| _b_role:=exec('FindInSet','#table','B_ROLE','UNIK',_obj.B_ROLE,REF.FIRMA,,1);
   {? _b_role=null()
   || _can_continue:=0;
      _result.msg_norec('B_ROLE')
   ?}
?};

_users:=null();
{? _can_continue>0
|| {? _obj.USERS_K<>''
   ||
::    Szukam użytkownika po kodzie
      _users:=exec('FindInSet','#table','USERS','USR_KKOD',_obj.USERS_K,,,1)
   ?};

   {? _users=null()
   ||
::    Szukam użytkownika po webloginie
      {? _obj.USERS_W<>''
      || _users:=exec('FindInSet','#table','USERS','WEBLOGIN',_obj.USERS_W,,,1)
      ?}
   ?};

   {? _users=null()
   || _can_continue:=0;
      _result.msg_norec('USERS_K')
   ?}
?};

{? _can_continue>0
|| _max:=MS.fld_len(B_ROLE,'NAME');
   {? +_obj.B_ROLE>_max
   || _result.msg_length('B_ROLE',_max);
      _can_continue:=0
   ?}
?};

{? _can_continue>0
|| _max:=MS.fld_len(USERS,'KOD');
   {? +_obj.USERS_K>_max
   || _result.msg_length('USERS_K',_max);
      _can_continue:=0
   ?}
?};

{? _can_continue>0
|| _max:=MS.fld_len(USERS,'WEBLOGIN');
   {? +_obj.USERS_W>_max
   || _result.msg_length('USERS_W',_max);
      _can_continue:=0
   ?}
?};

{? _can_continue>0
||
:: Sprawdzam czy użytkownik jest aktywny. Nieaktywnym nie dodajemy ról
:: bo podczas synchronizacji z serwerem i tak wszystkie powiązania są cięte
   _akt:=exec('FindAndGet','#table',USERS,_users,,"AKT",'');
   {? _akt='N'
   || _can_continue:=0;
      _what:='';
      {? _obj.USERS_K<>''
      || _what:=_obj.USERS_K
      ?};
      {? _what='' & _obj.USERS_W=''
      || _what:=_obj.USERS_W
      ?};
      _result.MSG:='Użytkownik: %1 jest nieaktywny. Rola: %2 nie została mu nadana.'@[_what,_obj.B_ROLE]
   ?}
?};

{? _can_continue>0
||
   B_USRROL.index('UNIK');
   B_USRROL.prefix(REF.FIRMA,_b_role,_users);
   {? B_USRROL.first()=0
   || _buffer:=exec('buffer','#b_usrrol');
      _buffer.FIRMA:=REF.FIRMA;
      _buffer.B_ROLE:=_b_role;
      _buffer.USERS:=_users;
      _buffer.STARTD:=date();
      _buffer.STARTT:=time();
      _buffer.TM_START:=exec('create','#tm_stamp',_buffer.STARTD,_buffer.STARTT);
      _result.OBJ:=_buffer;
      _result.ACTION:='add'
   ?}
?};
{? _can_continue=0
|| _result.RESULT:=0
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt z resultem walidatora i resultem importu, wynik działania exec('args_valid','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

{? _result.ACTION='add'
||
   _buffer:=_result.OBJ;
   {? exec('add','#b_usrrol',_buffer)<>null()
   || _result.RESULT:=1
   || _result.RESULT:=0
   ?};
   {? _result.RESULT=0
   || _result.msg_insert('Rola %1 dla użytkownika %2'@[_obj.B_ROLE,_obj.USERS])
   ?}
?};
~~


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,
   'B_ROLE','STRING[255]','Rola'@
   ,'USERS','STRING[255]','Login'@
   ,'WEBLOGIN','STRING[255]','Login WWW'@
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'@
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'B_ROLE',,,'USERS',,);

B_USRROL.cntx_psh();
B_USRROL.index('UNIK');
B_USRROL.prefix(REF.FIRMA);
{? B_USRROL.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$B_USRROL.ref();
      _selected.prefix($B_USRROL.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.B_ROLE:=B_USRROL.B_ROLE().NAME;
      _tab.USERS:=B_USRROL.USERS().KOD;
      _tab.WEBLOGIN:=USERS.WEBLOGIN;
      _tab.add();
      B_USRROL.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'B_ROLE,USERS,WEBLOGIN',30,'Wybór użytkowników roli do eksportu'@);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
B_USRROL.cntx_pop();
_result

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:42 7e479b78c11922618eb386d688c67c4ce7d8bb331f0c6465af5b3da48718ad9969a9d422591bb9da14d7cf5717434ef0b8c63643961593fd54d9b844bfca3718175d39f4e012dd1897e7413beef1ed9b3934666ff4a6640c06b32763cbffaba6d0ff8cdbeb05675d6adc15eb832945f6fa6319cd31d1c516d0e16b5a27078dc7
