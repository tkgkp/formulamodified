:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_opldod.fml
:: Utworzony: 10.12.2021
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu definicji opłat dodatkowych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TAXS';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_PAR_OPLD';
_def.FILE:='oplaty_dodatkowe.xlsx';
_def.SHEET:='Definicja opłat dodatkowych=1,1';
_def.NAME:='Definicja opłat dodatkowych'@;
_def.DESC:='Definicja opłat dodatkowych';
_def.TABLE:="exec('table','xls_opldod')";
_def.FIELDS:="exec('fields','xls_opldod',_a)";
_def.EXPORT:="exec('export','xls_opldod',_a,_b)";
_def.IMPORT:="exec('import','xls_opldod',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_opldod',_a,_b,_c)";
_def.SELECT:="exec('select','xls_opldod',_a)";
_def.PREFIX:="TAXS.index('TAX'); TAXS.prefix()";
_def.BEFORE:="TAXS.cntx_psh()";
_def.AFTER:="TAXS.cntx_pop()";
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Określa zakres eksportowanych danych
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
TAXS


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('TAX','Kod opłaty dodatkowej',0,,'Kod opłaty dodatkowej do 8 znaków: duże litery',type_of(''));
_def.define('DESC','Opis opłaty',0,,'Opis opłaty');
_def.define('OKR','Okres naliczania',1,,
'Okres naliczania:
N - nieokreślony
M - miesięcny
K - kwartalny
P - półroczny
R - roczny
D - dwumiesięczny
');
_def.define('AKT','Czy aktywna?',1,,'Czy aktywna [T/N]');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TAXS.prefix();
{? _validate.ACTION='add'
|| TAXS.blank();
   TAXS.TAX:=_obj.TAX;
   TAXS.DESC:=_obj.DESC
?};

TAXS.OKR:=_obj.OKR;
TAXS.AKT:=_obj.AKT;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;

_table.TAX.VALUE:=TAXS.TAX;
_table.DESC.VALUE:=TAXS.DESC;
_table.OKR.VALUE:=TAXS.OKR;
_table.AKT.VALUE:=TAXS.AKT;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

{? _obj.TAX='' | (+_obj.TAX)>8 | _obj.TAX<>(~-_obj.TAX)
|| _result.MSG:='Nieprawidłowa wartość KODU OPŁATY %1.'@[_obj.TAX];
   _result.MSG:=0
?};
{? _obj.DESC=''
|| _result.MSG:='Nie podano OPISU OPŁATY.'@;
   _result.MSG:=0
?};
{? ((';NMKPRD'*_obj.OKR)>1) || _obj.OKR:='N' ?};
{? ((';NT'*_obj.AKT)>1) || _obj.AKT:='T' ?};

{? _result.RESULT=1
||
   TAXS.index('UNIK');
   TAXS.prefix(_obj.TAX,);
   {? TAXS.first()
   ||
      {? _mode=0
      ||
         _result.RESULT:=0
      ||
         _result.ACTION:='put';
         exec('record','xls_opldod',_obj,_mode,_result);
         {? __CHK.record(TAXS,,'TAX','DESC')<>''
         ||
            _result.RESULT:=0
         ?}
      ?}
   ||
      _result.ACTION:='add';
      exec('record','xls_opldod',_obj,_mode,_result);
      {? __CHK.record(TAXS,,'TAX','DESC')<>''
      ||
         _result.RESULT:=0
      ?}
   ?}
?};
_result


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      _result:=TAXS.add(1)

   |? _validate.ACTION='put'
   ||
      _result:=TAXS.put(1)
   ?}
?};
{? _result=0
||
   {? _validate.ACTION='add'
   ||
      FUN.info('Dodanie definicji Opłaty dodatkowej %1 nie powiodło się.'@[_obj.TAX])
   ||
      FUN.info('Poprawa definicji Opłaty dodatkowej %1 nie powiodła się.'@[_obj.TAX])
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'TAX','STRING[20]','Kod opłaty'
   ,'DESC','STRING[255]','Opis opłaty'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano?');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'TAX',,);

TAXS.cntx_psh();
TAXS.index('TAX');
TAXS.prefix();
{? TAXS.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$TAXS.ref();
      _selected.prefix($TAXS.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.TAX:=TAXS.TAX;
      _tab.DESC:=TAXS.DESC;
      _tab.add();
      TAXS.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'TAX,DESC',30,'Wybór definicji Opłat dodatkowych do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
TAXS.cntx_pop();

_result


\init_ver
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TAXO';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_PAR_OPLD';
_def.FILE:='oplaty_dodatkowe.xlsx';
_def.SHEET:='Wersje opłat dodatkowych=1,1';
_def.NAME:='Wersje opłat dodatkowych'@;
_def.DESC:='Wersje opłat dodatkowych';
_def.TABLE:="exec('table_ver','xls_opldod')";
_def.FIELDS:="exec('fields_ver','xls_opldod',_a)";
_def.EXPORT:="exec('export_ver','xls_opldod',_a,_b)";
_def.IMPORT:="exec('import_ver','xls_opldod',_a,_b,_c)";
_def.VALIDATE:="exec('validate_ver','xls_opldod',_a,_b,_c)";
_def.SELECT:="";
_def.PREFIX:="TAXO.index('TAXS'); TAXO.prefix()";
_def.BEFORE:="TAXO.cntx_psh()";
_def.AFTER:="TAXO.cntx_pop()";
~~


\table_ver
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Określa zakres eksportowanych danych
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
TAXO


\fields_ver
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('TAX','Kod opłaty dodatkowej',0,,'Kod opłaty dodatkowej do 8 znaków: duże litery',type_of(''));
_def.define('OD','Data od',0,,'Data od');
_def.define('DO','Data do',1,,'Data do');
_def.define('AKT','Czy aktywna?',1,,'Czy aktywna [T/N]');
~~


\record_ver
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TAXO.index('TAXS');
TAXO.prefix();
{? _validate.ACTION='add'
||
   TAXO.blank();
   TAXO.TAXS:=_validate.OBJ.TAXS
?};

TAXO.OD:=_obj.OD;
TAXO.DO:=_obj.DO;
TAXO.AKT:=_obj.AKT;
~~


\export_ver
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;

_table.TAX.VALUE:=TAXO.TAXS().TAX;  _excel.write_async('TAXS',TAXO.TAXS);
_table.OD.VALUE:=TAXO.OD;
_table.DO.VALUE:={? TAXO.DO=date(0,0,0) || date(1900,1,1) || TAXO.DO ?};
_table.AKT.VALUE:=TAXO.AKT;
_result


\validate_ver
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('TAXS');
{? var_pres('OD',_obj)<>type_of(date()) | _obj.OD=date(1900,1,1) || _obj.OD:=date(0,0,0) ?};
{? var_pres('DO',_obj)<>type_of(date()) | _obj.DO=date(1900,1,1) || _obj.DO:=date(0,0,0) ?};

_result.OBJ.TAXS:={? _obj.TAX='' || null() || exec('FindInSet','#table','TAXS','UNIK',_obj.TAX,,,1) ?};
{? _result.OBJ.TAXS=null()
|| _result.MSG:={? _obj.TAX=''
                || 'Nie podano KODU OPŁATY DODATKOWEJ'@
                || 'Nie znaleziono OPŁATY DODATKOWEJ %1.'@[_obj.TAX]
                ?};
   TAXXYZ.TAXS:=_result.OBJ.TAXS;
   _result.RESULT:=0
|| TAXXYZ.TAXS:=_result.OBJ.TAXS
?};
{? _obj.OD=date(0,0,0)
|| _result.MSG:='Nieprawidłowa wartość DATA OBOWIĄZYWANIA OD %1.'@[_obj.OD];
   _result.RESULT:=0
?};
{? _obj.DO<>date(0,0,0) & _obj.DO<_obj.OD
|| _result.MSG:='Nieprawidłowa wartość DATA OBOWIĄZYWANIA DO %1.'@[_obj.OD];
   _result.RESULT:=0
?};
{? ~exec('ctrltaxo','oplaty_def',TAXXYZ.TAXS,null(),_obj.OD,_obj.DO)
|| _result.MSG:='Nieprawidłowy zakres dat.'@;
   _result.RESULT:=0
?};

{? ((';NT'*_obj.AKT)>1) || _obj.AKT:='T' ?};

{? _result.RESULT=1
||
   TAXO.index('TAXS');
   TAXO.prefix(TAXXYZ.TAXS,_obj.OD);
   {? TAXO.first()
   ||
      {? _mode=0
      ||
         _result.RESULT:=0
      ||
         _result.ACTION:='put';
         exec('record_ver','xls_opldod',_obj,_mode,_result);
         {? __CHK.record(TAXO,,'OD')<>''
         ||
            _result.RESULT:=0
         ?}
      ?}
   ||
      _result.ACTION:='add';
      exec('record_ver','xls_opldod',_obj,_mode,_result);
      {? __CHK.record(TAXO,,'OD')<>''
      ||
         _result.RESULT:=0
      ?}
   ?}
?};
_result


\import_ver
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      _result:=TAXO.add(1)

   |? _validate.ACTION='put'
   ||
      _result:=TAXO.put(1)
   ?}
?};
{? _result=0
||
   {? _validate.ACTION='add'
   ||
      FUN.info('Dodanie wersji Opłaty dodatkowej nie powiodło się.')
   ||
      FUN.info('Poprawa wersji Opłaty dodatkowej nie powiodła się.')
   ?}
?};
_result


\init_ats
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TAXTS';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_PAR_OPLD';
_def.FILE:='oplaty_dodatkowe.xlsx';
_def.SHEET:='Atrybuty opłat dodatkowych=1,1';
_def.NAME:='Atrybuty opłat dodatkowych'@;
_def.DESC:='Atrybuty opłat dodatkowych';
_def.TABLE:="exec('table_ats','xls_opldod')";
_def.FIELDS:="exec('fields_ats','xls_opldod',_a)";
_def.EXPORT:="exec('export_ats','xls_opldod',_a,_b)";
_def.IMPORT:="exec('import_ats','xls_opldod',_a,_b,_c)";
_def.VALIDATE:="exec('validate_ats','xls_opldod',_a,_b,_c)";
_def.SELECT:="";
_def.PREFIX:="TAXT.index('TAXS'); TAXT.prefix()";
_def.BEFORE:="TAXT.cntx_psh()";
_def.AFTER:="TAXT.cntx_pop()";
~~


\table_ats
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Określa zakres eksportowanych danych
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
TAXT


\fields_ats
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('TAX','Kod opłaty dodatkowej',0,,'Kod opłaty dodatkowej do 8 znaków: duże litery',type_of(''));
_def.define('KOD','Kod atrybutu',0,,'Kod atrybutu do 8 znaków: duże litery',type_of(''));
_def.define('DESC','Opis atrybutu',0,,'Opis atrybutu',type_of(''));
_def.define('R','Typ atrybutu',0,,
'Typ atrybutu:
C - stała/formuła
M - indeks materiałowy
N - nagłówek
');
_def.define('RV','Typ wartości',0,,
'Typ wartości:
R - liczba
S - napis
D - data
T - czas
L - logika
F - formuła
');
_def.define('RP','Precyzja lub długość napisu',1,,'Precyzja lub długość napisu - większa lub równa 0');
_def.define('FORM','Treść formuły',1,,'Treść formuły');
_def.define('AKT','Czy aktywny?',1,,'Czy aktywny [T/N]');
_def.define('VALR','Wartość liczby',1,,'Domyślna wartość liczby');
_def.define('VALS','Wartość napisu',1,,'Domyślna wartość napisu');
_def.define('VALD','Wartość daty',1,,'Domyślna wartość daty');
_def.define('VALT','Wartość czasu',1,,'Domyślna wartość czasu');
_def.define('VALL','Wartość logiki',1,,'Domyślna wartość logiki [T/N]');
_def.define('CTRL','Czy kontrolować',1,,'CZy kontrolować [T/N]');
_def.define('RNP','Dotyczy nagłowka/pozycji',1,,
'Typ wartości:
brak - atrybut niezwiązany z dokumentem
N - nagłówek
P - pozycja
');
~~


\record_ats
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TAXT.index('TAXS');
TAXT.prefix();
{? _validate.ACTION='add'
||
   TAXT.blank();
   TAXT.TAXS:=_validate.OBJ.TAXS;
   TAXT.KOD:=_obj.KOD
?};
TAXT.DESC:=_obj.DESC;
TAXT.R:=_obj.R;
TAXT.RV:=_obj.RV;
TAXT.RP:=_obj.RP;
TAXT.FORM:=_obj.FORM;
TAXT.AKT:=_obj.AKT;
TAXT.VALR:=_obj.VALR;
TAXT.VALS:=_obj.VALS;
TAXT.VALD:=_obj.VALD;
TAXT.VALT:=_obj.VALT;
TAXT.VALL:=_obj.VALL;
TAXT.CTRL:=_obj.CTRL;
TAXT.RNP:=_obj.RNP;
~~


\export_ats
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
{? TAXT.TAXO=null()
|| _table.TAX.VALUE:=TAXT.TAXS().TAX;  _excel.write_async('TAXS',TAXT.TAXS);
   _table.KOD.VALUE:=TAXT.KOD;
   _table.DESC.VALUE:=TAXT.DESC;
   _table.R.VALUE:=TAXT.R;
   _table.RV.VALUE:=TAXT.RV;
   _table.RP.VALUE:=TAXT.RP;
   _table.FORM.VALUE:=TAXT.FORM;
   _table.AKT.VALUE:=TAXT.AKT;
   _table.VALR.VALUE:=TAXT.VALR;
   _table.VALS.VALUE:=TAXT.VALS;
   _table.VALD.VALUE:=TAXT.VALD;
   _table.VALT.VALUE:=TAXT.VALT;
   _table.VALL.VALUE:=TAXT.VALL;
   _table.CTRL.VALUE:=TAXT.CTRL;
   _table.RNP.VALUE:=TAXT.RNP
?};
_result


\validate_ats
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('TAXS');

_result.OBJ.TAXS:={? _obj.TAX='' || null() || exec('FindInSet','#table','TAXS','UNIK',_obj.TAX,,,1) ?};
{? _result.OBJ.TAXS=null()
|| _result.MSG:={? _obj.TAX=''
                || 'Nie podano KODU OPŁATY DODATKOWEJ'@
                || 'Nie znaleziono OPŁATY DODATKOWEJ %1.'@[_obj.TAX]
                ?};
   TAXXYZ.TAXS:=_result.OBJ.TAXS;
   _result.RESULT:=0
|| TAXXYZ.TAXS:=_result.OBJ.TAXS
?};
{? _obj.KOD='' | ~exec('valid_acronim','#string',_obj.KOD,8)
|| _result.MSG:='Nieprawidłowa wartość KOD ATRYBUTU %1.'@[_obj.KOD];
   _result.RESULT:=0
?};
{? _obj.R='' | ~((';CMN'*_obj.R)>1) | (+_obj.R)>1
|| _result.MSG:='Nieprawidłowa wartość TYP ATRYBUTU %1.'@[_obj.R];
   _result.RESULT:=0
?};
{? _obj.RV='' | ~((';RSDTLF'*_obj.RV)>1) | (+_obj.RV)>1
|| _result.MSG:='Nieprawidłowa wartość TYP WARTOŚCI %1.'@[_obj.RV];
   _result.RESULT:=0
?};
{? _obj.RNP<>'' & ~((';NP'*_obj.RNP)>1)
|| _result.MSG:='Nieprawidłowa wartość MIEJSCE WPROWADZANIA %1.'@[_obj.RNP];
   _result.RESULT:=0
?};

{? _obj.RP<0 | (';DTLF'*_obj.RV)>1 || _obj.RP:=0 ?};
{? ((';NT'*_obj.AKT)>1) || _obj.AKT:='T' ?};

{? _result.RESULT=1
||
   TAXT.index('UNIK');
   TAXT.prefix(TAXXYZ.TAXS,null(),_obj.KOD);
   {? TAXT.first()
   ||
      {? _mode=0
      ||
         _result.RESULT:=0
      ||
         _result.ACTION:='put';
         exec('record_ats','xls_opldod',_obj,_mode,_result);
         {? __CHK.record(TAXT,,'KOD')<>''
         ||
            _result.RESULT:=0
         ?}
      ?}
   ||
      _result.ACTION:='add';
      exec('record_ats','xls_opldod',_obj,_mode,_result);
      {? __CHK.record(TAXT,,'KOD')<>''
      ||
         _result.RESULT:=0
      ?}
   ?}
?};
_result


\import_ats
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      _result:=TAXT.add(1)

   |? _validate.ACTION='put'
   ||
      _result:=TAXT.put(1)
   ?}
?};
{? _result=0
||
   {? _validate.ACTION='add'
   ||
      FUN.info('Dodanie atrybutu %1 Opłaty dodatkowej nie powiodło się.'@[_obj.KOD])
   ||
      FUN.info('Poprawa atrybutu %1 Opłaty dodatkowej nie powiodła się.'@[_obj.KOD])
   ?}
?};
_result


\init_ato
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TAXTO';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_PAR_OPLD';
_def.FILE:='oplaty_dodatkowe.xlsx';
_def.SHEET:='Atrybuty wersji opłat=1,1';
_def.NAME:='Atrybuty wersji opłat'@;
_def.DESC:='Atrybuty wersji opłat';
_def.TABLE:="exec('table_ato','xls_opldod')";
_def.FIELDS:="exec('fields_ato','xls_opldod',_a)";
_def.EXPORT:="exec('export_ato','xls_opldod',_a,_b)";
_def.IMPORT:="exec('import_ato','xls_opldod',_a,_b,_c)";
_def.VALIDATE:="exec('validate_ato','xls_opldod',_a,_b,_c)";
_def.SELECT:="";
_def.PREFIX:="TAXT.index('TAXS'); TAXT.prefix()";
_def.BEFORE:="TAXT.cntx_psh()";
_def.AFTER:="TAXT.cntx_pop()";
~~


\table_ato
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Określa zakres eksportowanych danych
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
TAXT


\fields_ato
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('TAX','Kod opłaty dodatkowej',0,,'Kod opłaty dodatkowej do 8 znaków: duże litery',type_of(''));
_def.define('DVER','Data obowiązywania wersji',0,,'Data obowiązywania wersji',type_of(date()));
_def.define('KOD','Kod atrybutu',0,,'Kod atrybutu do 8 znaków: duże litery',type_of(''));
_def.define('DESC','Opis atrybutu',0,,'Opis atrybutu',type_of(''));
_def.define('R','Typ atrybutu',0,,
'Typ atrybutu:
C - stała/formuła
M - indeks materiałowy
N - nagłówek
');
_def.define('RV','Typ wartości',0,,
'Typ wartości:
R - liczba
S - napis
D - data
T - czas
L - logika
F - formuła
');
_def.define('RP','Precyzja lub długość napisu',1,,'Precyzja lub długość napisu - większa lub równa 0');
_def.define('FORM','Treść formuły',1,,'Treść formuły');
_def.define('AKT','Czy aktywny?',1,,'Czy aktywny [T/N]');
_def.define('VALR','Wartość liczby',1,,'Domyślna wartość liczby');
_def.define('VALS','Wartość napisu',1,,'Domyślna wartość napisu');
_def.define('VALD','Wartość daty',1,,'Domyślna wartość daty');
_def.define('VALT','Wartość czasu',1,,'Domyślna wartość czasu');
_def.define('VALL','Wartość logiki',1,,'Domyślna wartość logiki [T/N]');
_def.define('CTRL','Czy kontrolować',1,,'CZy kontrolować [T/N]');
_def.define('RNP','Dotyczy nagłowka/pozycji',1,,
'Typ wartości:
brak - atrybut niezwiązany z dokumentem
N - nagłówek
P - pozycja
');
~~


\record_ato
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TAXT.index('TAXS');
TAXT.prefix();
{? _validate.ACTION='add'
||
   TAXT.blank();
   TAXT.TAXS:=_validate.OBJ.TAXS;
   TAXT.TAXO:=_validate.OBJ.TAXO;
   TAXT.KOD:=_obj.KOD
?};
TAXT.DESC:=_obj.DESC;
TAXT.R:=_obj.R;
TAXT.RV:=_obj.RV;
TAXT.RP:=_obj.RP;
TAXT.FORM:=_obj.FORM;
TAXT.AKT:=_obj.AKT;
TAXT.VALR:=_obj.VALR;
TAXT.VALS:=_obj.VALS;
TAXT.VALD:=_obj.VALD;
TAXT.VALT:=_obj.VALT;
TAXT.VALL:=_obj.VALL;
TAXT.CTRL:=_obj.CTRL;
TAXT.RNP:=_obj.RNP;
~~


\export_ato
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
{? TAXT.TAXO<>null()
|| _table.TAX.VALUE:=TAXT.TAXS().TAX;  _excel.write_async('TAXS',TAXT.TAXS);
   _table.DVER.VALUE:=TAXT.TAXO().OD;  _excel.write_async('TAXO',TAXT.TAXO);
   _table.KOD.VALUE:=TAXT.KOD;
   _table.DESC.VALUE:=TAXT.DESC;
   _table.R.VALUE:=TAXT.R;
   _table.RV.VALUE:=TAXT.RV;
   _table.RP.VALUE:=TAXT.RP;
   _table.FORM.VALUE:=TAXT.FORM;
   _table.AKT.VALUE:=TAXT.AKT;
   _table.VALR.VALUE:=TAXT.VALR;
   _table.VALS.VALUE:=TAXT.VALS;
   _table.VALD.VALUE:=TAXT.VALD;
   _table.VALT.VALUE:=TAXT.VALT;
   _table.VALL.VALUE:=TAXT.VALL;
   _table.CTRL.VALUE:=TAXT.CTRL;
   _table.RNP.VALUE:=TAXT.RNP
|| _result:=0
?};
_result


\validate_ato
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('TAXS','TAXO');
{? var_pres('DVER',_obj)<>type_of(date()) | _obj.DVER=date(1900,1,1) || _obj.DVER:=date(0,0,0) ?};

_result.OBJ.TAXS:={? _obj.TAX='' || null() || exec('FindInSet','#table','TAXS','UNIK',_obj.TAX,,,1,,null()) ?};
{? _result.OBJ.TAXS=null()
|| _result.MSG:={? _obj.TAX=''
                || 'Nie podano KODU OPŁATY DODATKOWEJ'@
                || 'Nie znaleziono OPŁATY DODATKOWEJ %1.'@[_obj.TAX]
                ?};
   TAXXYZ.TAXS:=_result.OBJ.TAXS;
   _result.RESULT:=0
|| TAXXYZ.TAXS:=_result.OBJ.TAXS
?};
{? TAXXYZ.TAXS<>null() & _obj.DVER<>date(0,0,0)
|| _result.OBJ.TAXO:=exec('FindInSet','#table','TAXO','TAXS',_obj.DVER,TAXXYZ.TAXS,,,,null());
   {? _result.OBJ.TAXO=null() || _result.MSG:='Nie znaleziono WERSJI OPŁATY DODATKOWEJ dla daty %1.'@[$_obj.DVER] ?}
|| _result.MSG:='Nie podano daty WERSJI'@;
   _result.RESULT:=0
?};
{? _obj.KOD='' | ~exec('valid_acronim','#string',_obj.KOD,8)
|| _result.MSG:='Nieprawidłowa wartość KOD ATRYBUTU %1.'@[_obj.KOD];
   _result.RESULT:=0
?};
{? _obj.R='' | ~((';CMN'*_obj.R)>1) | (+_obj.R)>1
|| _result.MSG:='Nieprawidłowa wartość TYP ATRYBUTU %1.'@[_obj.R];
   _result.RESULT:=0
?};
{? _obj.RV='' | ~((';RSDTLF'*_obj.RV)>1) | (+_obj.RV)>1
|| _result.MSG:='Nieprawidłowa wartość TYP WARTOŚCI %1.'@[_obj.RV];
   _result.RESULT:=0
?};
{? _obj.RNP<>'' & ~((';NP'*_obj.RNP)>1)
|| _result.MSG:='Nieprawidłowa wartość MIEJSCE WPROWADZANIA %1.'@[_obj.RNP];
   _result.RESULT:=0
?};

{? _obj.RP<0 | (';DTLF'*_obj.RV)>1 || _obj.RP:=0 ?};
{? ((';NT'*_obj.AKT)>1) || _obj.AKT:='T' ?};

{? _result.RESULT=1
||
   TAXT.index('UNIK');
   TAXT.prefix(TAXXYZ.TAXS,_result.OBJ.TAXO,_obj.KOD);
   {? TAXT.first()
   ||
      {? _mode=0
      ||
         _result.RESULT:=0
      ||
         _result.ACTION:='put';
         exec('record_ato','xls_opldod',_obj,_mode,_result);
         {? __CHK.record(TAXT,,'KOD')<>''
         ||
            _result.RESULT:=0
         ?}
      ?}
   ||
      _result.ACTION:='add';
      exec('record_ato','xls_opldod',_obj,_mode,_result);
      {? __CHK.record(TAXT,,'KOD')<>''
      ||
         _result.RESULT:=0
      ?}
   ?}
?};
_result


\import_ato
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      _result:=TAXT.add(1)

   |? _validate.ACTION='put'
   ||
      _result:=TAXT.put(1)
   ?}
?};
{? _result=0
||
   {? _validate.ACTION='add'
   ||
      FUN.info('Dodanie atrybutu %1 Wersji opłaty dodatkowej nie powiodło się.'@[_obj.KOD])
   ||
      FUN.info('Poprawa atrybutu %1 Wersji opłaty dodatkowej nie powiodła się.'@[_obj.KOD])
   ?}
?};
_result


\init_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TAXN';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_PAR_OPLD';
_def.FILE:='oplaty_dodatkowe.xlsx';
_def.SHEET:='Warunki naliczania opłaty=1,1';
_def.NAME:='Warunki naliczania opłaty'@;
_def.DESC:='Warunki naliczania opłaty';
_def.TABLE:="exec('table_war','xls_opldod')";
_def.FIELDS:="exec('fields_war','xls_opldod',_a)";
_def.EXPORT:="exec('export_war','xls_opldod',_a,_b)";
_def.IMPORT:="exec('import_war','xls_opldod',_a,_b,_c)";
_def.VALIDATE:="exec('validate_war','xls_opldod',_a,_b,_c)";
_def.SELECT:="";
_def.PREFIX:="TAXN.index('TAXS'); TAXN.prefix()";
_def.BEFORE:="TAXN.cntx_psh()";
_def.AFTER:="TAXN.cntx_pop()";
~~


\table_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Określa zakres eksportowanych danych
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
TAXN


\fields_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('TAX','Kod opłaty dodatkowej',0,,'Kod opłaty dodatkowej do 8 znaków: duże litery',type_of(''));
_def.define('GRP','Kod grupy warunków',0,,'Kod grupy warunków: duże litery',type_of(''));
_def.define('ODDT','Data obowiązywania od',0,,'Data obowiązywania warunku',type_of(date()));
_def.define('DODT','Data obowiązywania do',0,,'Data obowiązywania warunku',type_of(date()));
_def.define('LP','Liczba porządkowa',0,,'Kolejność w grupie warunków',type_of(0));
_def.define('ANDOR','Alternatywa lub koniunkcja',0,,'& alternatywa lub | koniunkcja',type_of(''));
_def.define('YESNO','Równy lub różny',0,,'= równy lub <> różny',type_of(''));
_def.define('ROP','Warunek ogólny',0,,
'Rodzaje warunku ogólnego:
NN - Nie dotyczy
S - Sprzedaż
Z - Zakupy
M - Magazyny
TN - Magazyn - rozchód
TT - Magazyn - przychód
');
_def.define('R','Warunek szczegółowy',0,,
'Rodzaje warunku szczegółowego:
K - Kontrahent
O - Odbiorca
M - Magazyn
S - Stanowisko sprzedaży
Z - Stanowisko zakupów
T - Dokument magazynowy
X - Dokument sprzedaży
Y - Dokument zakupu
F - Formuła warunków
');
_def.define('KH','Kod kontrahenta',1,,'Kod Kontrahenta');
_def.define('KH_ODB','Kod odbiorcy',1,,'Kod Odbiorcy');
_def.define('MG','Symbol magazynu',1,,'Symbol magazynu');
_def.define('SP','Symbol stanowiska sprzedaży/zakupów',1,,'Symbol stanowiska sprzedaży/zakupów');
_def.define('TYPYDOK','Typ dokumentu magazynowego',1,,'Typ dokumentu magazynowego');
_def.define('TYPYSP','Typ dokumentu sprzedaży/zakupów',1,,'Typ dokumentu sprzedaży/zakupów');
_def.define('FORM','Treść formuły',1,,'Treść formuły');
~~


\record_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TAXN.index('TAXS');
TAXN.prefix();
{? _validate.ACTION='add'
||
   TAXN.blank();
   TAXN.TAXS:=_validate.OBJ.TAXS;
   TAXN.GRP:=_obj.GRP;
   TAXN.OD:=_obj.ODDT;
   TAXN.DO:=_obj.DODT
?};
TAXN.LP:=_obj.LP;
TAXN.ANDOR:=_obj.ANDOR;
TAXN.YESNO:=_obj.YESNO;
TAXN.ROP:=_obj.ROP;
TAXN.R:=_obj.R;
TAXN.KH:=_validate.OBJ.KH;
TAXN.KH_ODB:=_validate.OBJ.KH_ODB;
TAXN.MG:=_validate.OBJ.MG;
TAXN.SP:=_validate.OBJ.SP;
TAXN.TM:=_validate.OBJ.TYPYDOK;
TAXN.TSZ:=_validate.OBJ.TYPYSP;
TAXT.FORM:=_obj.FORM;
~~


\export_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.TAX.VALUE:=TAXN.TAXS().TAX;  _excel.write_async('TAXS',TAXN.TAXS);
_table.GRP.VALUE:=TAXN.GRP;
_table.ODDT.VALUE:=TAXN.OD;
_table.DODT.VALUE:={? TAXN.DO=date(0,0,0) || date(1900,1,1) || TAXN.DO ?};
_table.LP.VALUE:=TAXN.LP;
_table.ANDOR.VALUE:=TAXN.ANDOR;
_table.YESNO.VALUE:=TAXN.YESNO;
_table.ROP.VALUE:=TAXN.ROP;
_table.R.VALUE:=TAXN.R;
_table.KH.VALUE:=TAXN.KH().KOD;
_table.KH_ODB.VALUE:=TAXN.KH_ODB().KOD;
_table.MG.VALUE:=TAXN.MG().SYM;
_table.SP.VALUE:=TAXN.SP().KOD;
_table.TYPYDOK.VALUE:=TAXN.TM().T;
_table.TYPYSP.VALUE:=TAXN.TSZ().T;
_table.FORM.VALUE:=TAXN.FORM;
_result


\validate_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('TAXS','KH','KH_ODB','MG','SP','TYPYDOK','TYPYSP');
{? var_pres('ODDT',_obj)<>type_of(date()) | _obj.ODDT=date(1900,1,1) || _obj.ODDT:=date(0,0,0) ?};
{? var_pres('DODT',_obj)<>type_of(date()) | _obj.DODT=date(1900,1,1) || _obj.DODT:=date(0,0,0) ?};
{? _obj.ROP<>'NN' || _obj.R:='!' ?};
_result.OBJ.KH:=null(); _result.OBJ.KH_ODB:=null();
_result.OBJ.MG:=null(); _result.OBJ.SP:=null();
_result.OBJ.TYPYDOK:=null(); _result.OBJ.TYPYSP:=null();

_result.OBJ.TAXS:={? _obj.TAX='' || null() || exec('FindInSet','#table','TAXS','UNIK',_obj.TAX,,,1) ?};
{? _result.OBJ.TAXS=null()
|| _result.MSG:={? _obj.TAX=''
                || 'Nie podano KODU OPŁATY DODATKOWEJ'@
                || 'Nie znaleziono OPŁATY DODATKOWEJ %1.'@[_obj.TAX]
                ?};
   TAXXYZ.TAXS:=_result.OBJ.TAXS;
   _result.RESULT:=0
|| TAXXYZ.TAXS:=_result.OBJ.TAXS
?};
{? _obj.GRP='' | (+_obj.GRP)>10 | _obj.GRP<>(~-_obj.GRP)
|| _result.MSG:='Nieprawidłowa wartość KODU GRUPY WARUNKÓW %1.'@[_obj.GRP];
   _result.RESULT:=0
?};
{? _obj.ODDT=date(0,0,0)
|| _result.MSG:='Nieprawidłowa wartość DATA OBOWIĄZYWANIA OD %1.'@[_obj.ODDT];
   _result.RESULT:=0
?};
{? _obj.DODT<>date(0,0,0) & _obj.DODT<_obj.ODDT
|| _result.MSG:='Nieprawidłowa wartość DATA OBOWIĄZYWANIA DO %1.'@[_obj.ODDT];
   _result.RESULT:=0
?};

{? _obj.ROP<>'NN' & _obj.ROP<>'TN' & _obj.ROP<>'TT' & _obj.ROP<>'S' & _obj.ROP<>'Z' & _obj.ROP<>'M'
|| _result.MSG:='Nieprawidłowa wartość WARUNKU OGÓLNEGO %1.'@[_obj.ROP];
   _result.RESULT:=0
?};
{? _obj.ROP='NN' & ~((';KOMSZXYF'*_obj.R)>1)
|| _result.MSG:='Nieprawidłowa wartość WARUNKU SZCZEGÓŁOWEGO %1.'@[_obj.R];
   _result.RESULT:=0
?};
{? _result.RESULT & (';KOMSZXY'*_obj.R)>1
|| {? _obj.R='K' | _obj.R='O'
   || {? _obj.KH=''
       | (_ref:=exec('FindInSet','#table','KH','KOD',_obj.KH,2,,1,,null()); _ref=null())
      || _result.MSG:='Niepodano lub nie znaleziono KOTRAHENTA %1.'@[_obj.KH];
         _result.RESULT:=0
      || _result.OBJ.KH:=_ref
      ?}
   ?};
   {? _obj.R='O'
   || {? _result.OBJ.KH=null()
       | _obj.KH_ODB=''
       | (_ref:=exec('FindInSet','#table','KH_ODB','KH_ODB',_obj.KH_ODB,_result.OBJ.KH,,1,,null()); _ref=null())
      || _result.MSG:='Niepodano lub nie znaleziono ODBIORCY KOTRAHENTA %1.'@[_obj.KH_ODB];
         _result.RESULT:=0
      || _result.OBJ.KH_ODB:=_ref
      ?}
   ?};
   {? _obj.R='M'
   || {? _obj.MG=''
       | (_ref:=exec('FindInSet','#table','MG','MAGAZYNY',_obj.MG,,,1,,null()); _ref=null())
      || _result.MSG:='Niepodano lub nie znaleziono MAGAZYNU %1.'@[_obj.MG];
         _result.RESULT:=0
      || _result.OBJ.MG:=_ref
      ?}
   ?};
   {? _obj.R='S'
   || {? _obj.SP=''
       | (_ref:=exec('FindInSet','#table','STS','SZ',_obj.MP,'S',,1,,null()); _ref=null())
      || _result.MSG:='Niepodano lub nie znaleziono STANOWISKA SPRZEDAŻY %1.'@[_obj.SP];
         _result.RESULT:=0
      || _result.OBJ.SP:=_ref
      ?}
   ?};
   {? _obj.R='Z'
   || {? _obj.SP=''
       | (_ref:=exec('FindInSet','#table','STS','SZ',_obj.MP,'Z',,1,,null()); _ref=null())
      || _result.MSG:='Niepodano lub nie znaleziono STANOWISKA ZAKUPU %1.'@[_obj.SP];
         _result.RESULT:=0
      || _result.OBJ.SP:=_ref
      ?}
   ?};
   {? _obj.R='T'
   || {? _obj.TYPYDOK=''
       | (_ref:=exec('FindInSet','#table','TYPYDOK','TYP',_obj.TYPYDOK,,,1,,null()); _ref=null())
      || _result.MSG:='Niepodano lub nie znaleziono TYPU DOKUMENTU MAGAZYNOWEGO %1.'@[_obj.TYPYDOK];
         _result.RESULT:=0
      || _result.OBJ.TYPYDOK:=_ref
      ?}
   ?};
   {? _obj.R='X'
   || {? _obj.TYPYSP=''
       | (_ref:=exec('FindInSet','#table','TYPYSP','SPRZAK',_obj.TYPYSP,'N',,1,,null()); _ref=null())
      || _result.MSG:='Niepodano lub nie znaleziono TYPU DOKUMENTU SPRZEDAŻY %1.'@[_obj.TYPYSP];
         _result.RESULT:=0
      || _result.OBJ.TYPYSP:=_ref
      ?}
   ?};
   {? _obj.R='Y'
   || {? _obj.TYPYSP=''
       | (_ref:=exec('FindInSet','#table','TYPYSP','SPRZAK',_obj.TYPYSP,'T',,1,,null()); _ref=null())
      || _result.MSG:='Niepodano lub nie znaleziono TYPU DOKUMENTU ZAKUPU %1.'@[_obj.TYPYSP];
         _result.RESULT:=0
      || _result.OBJ.TYPYSP:=_ref
      ?}
   ?}
?};

{? _result.RESULT=1
||
   TAXN.index('GRP');
   TAXN.prefix(TAXXYZ.TAXS,_obj.GRP,_obj.GRP,_obj.ODDT,_obj.LP);
   {? TAXN.first()
   ||
      {? _mode=0
      ||
         _result.RESULT:=0
      ||
         _result.ACTION:='put';
         exec('record_war','xls_opldod',_obj,_mode,_result);
         {? __CHK.record(TAXN,,'GRP')<>''
         ||
            _result.RESULT:=0
         ?}
      ?}
   ||
      _result.ACTION:='add';
      exec('record_war','xls_opldod',_obj,_mode,_result);
      {? __CHK.record(TAXN,,'GRP')<>''
      ||
         _result.RESULT:=0
      ?}
   ?}
?};
_result


\import_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      _result:=TAXN.add(1)

   |? _validate.ACTION='put'
   ||
      _result:=TAXN.put(1)
   ?}
?};
{? _result=0
||
   {? _validate.ACTION='add'
   ||
      FUN.info('Dodanie warunku z grupy %1 nie powiodło się.'@[_obj.GRP])
   ||
      FUN.info('Poprawa warunku z grupy %1 nie powiodła się.'@[_obj.GRP])
   ?}
?};
_result

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:42 7c73911312f850290eda82ecb391b2934b82cd23ab64a6c04e30ee00d1381a82f1b004977b5f59e5db58a2ff9600bb5edf960d7bdb4409aa117b4bfd51f565cfba24503c46724d03377c415f513c2284c54fd27d2a1c4cab822f75c247577e05a8e78b0ea6e5c34e7dbb7c3e697572f8328fe0a4ca7cfa5f275e398b152434bd
