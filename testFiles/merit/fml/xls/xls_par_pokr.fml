:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_par_pokr.fml
:: Utworzony: 13.08.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu słownika składników okresowych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='PAR_POKR';
_def.FUNPAR:='ZWS_PAR_PSOK';
_def.DOMAIN:=exec('name','#b_domain','PPL');
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.SHEET:='Składniki okresowe=1,1';
_def.NAME:='Składniki okresowe'@;
_def.DESC:='Składniki okresowe';

: źródło danych
_def.TABLE:="PAR_POKR";

: prolog
_def.BEFORE:="
   R.cntx_psh();
   R.prefix();
   PAR_POKR.cntx_psh();
   PAR_POKR.f_clear();
   PAR_POKR.index('PAR_POKR');
   PAR_POKR.prefix(REF.FIRMA);
   ~~
";

: epilog
_def.AFTER:="
   PAR_POKR.cntx_pop();
   R.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('R',      MS.name(PAR_POKR,'R'),      0,,MS.comment(PAR_POKR,'R'),type_of(0),0);
   _env.define('R_N',    MS.name(PAR_POKR,'R_N'),    0,,MS.comment(PAR_POKR,'R_N'),type_of(0),0);
   _env.define('RP',     MS.name(PAR_POKR,'RP'),     1,,MS.comment(PAR_POKR,'RP'));
   _env.define('RZ',     MS.name(PAR_POKR,'RZ'),     1,,MS.comment(PAR_POKR,'RZ'));
   _env.define('KZ',     MS.name(PAR_POKR,'KZ'),     1,,MS.comment(PAR_POKR,'KZ'));
   _env.define('WZ_OD',  MS.name(PAR_POKR,'WZ_OD'),  1,,MS.comment(PAR_POKR,'WZ_OD'));
   _env.define('WZ_DO',  MS.name(PAR_POKR,'WZ_DO'),  1,,MS.comment(PAR_POKR,'WZ_DO'));
   _env.define('DZ_12',  MS.name(PAR_POKR,'DZ_12'),  1,,MS.comment(PAR_POKR,'DZ_12'));
   _env.define('PTZO',   MS.name(PAR_POKR,'PTZO'),   1,,MS.comment(PAR_POKR,'PTZO'));
   _env.define('CZY_FM', MS.name(PAR_POKR,'CZY_FM'), 1,,MS.comment(PAR_POKR,'CZY_FM'));
   _env.define('FM',     MS.name(PAR_POKR,'FM'),     1,,MS.comment(PAR_POKR,'FM'));
   _env.define('CZY_PKN',MS.name(PAR_POKR,'CZY_PKN'),1,,MS.comment(PAR_POKR,'CZY_PKN'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.R.VALUE:=PAR_POKR.R().RN;
   _buf.R_N.VALUE:=PAR_POKR.R_N().RN;
   _buf.RP.VALUE:=PAR_POKR.RP;
   _buf.RZ.VALUE:=PAR_POKR.RZ;
   _buf.KZ.VALUE:=PAR_POKR.KZ;
   _buf.WZ_OD.VALUE:=PAR_POKR.WZ_OD;
   _buf.WZ_DO.VALUE:=PAR_POKR.WZ_DO;
   _buf.DZ_12.VALUE:=PAR_POKR.DZ_12;
   _buf.PTZO.VALUE:=PAR_POKR.PTZO;
   _buf.FM.VALUE:=PAR_POKR.FM;
   _buf.CZY_FM.VALUE:=PAR_POKR.CZY_FM;
   _buf.CZY_PKN.VALUE:=PAR_POKR.CZY_PKN;
   _env.write_async('RUBRYKI',exec('r','xls__util'));
   _env.write_async('RUBRYKI',exec('r','xls__util'));
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_par_pokr',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_par_pokr',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.R=0         || 'R'
   |? _buf.RP=''       || 'RP'
   |? _buf.RZ=''       || 'RZ'
   |? _buf.KZ=''       || 'KZ'
   |? _buf.DZ_12=''    || 'DZ_12'
   |? _buf.PTZO=''     || 'PTZO'
   |? _buf.CZY_FM=''   || 'CZY_FM'
   |? _buf.CZY_PKN=''  || 'CZY_PKN'
   |? _buf.CZY_FM='T'  || {? _buf.FM=''
                          || 'FM'
                          || ''
                          ?}
   |? _buf.CZY_PKN='T' || {? _buf.R_N=0
                          || 'R_N'
                          || ''
                          ?}
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? _buf.R<0
|| _val.msg_range('R',0);
   _val.RESULT:=0;
   return()

|? _buf.R_N<0
|| _val.msg_range('R_N',0);
   _val.RESULT:=0;
   return()

|? ('SMKPRI'*_buf.RP)=0
|| _val.msg_inset('RP','S','M','K','P','R','I');
   _val.RESULT:=0;
   return()

|? ('TN'*_buf.RZ)=0
|| _val.msg_inset('RZ','T','N');
   _val.RESULT:=0;
   return()

|? ('BNW'*_buf.KZ)=0
|| _val.msg_inset('KZ','B','N','W');
   _val.RESULT:=0;
   return()

|? ('TN'*_buf.DZ_12)=0
|| _val.msg_inset('DZ_12','T','N');
   _val.RESULT:=0;
   return()

|? ('TN'*_buf.PTZO)=0
|| _val.msg_inset('PTZO','T','N');
   _val.RESULT:=0;
   return()

|? ('TN'*_buf.CZY_FM)=0
|| _val.msg_inset('CZY_FM','T','N');
   _val.RESULT:=0;
   return()

|? ('TN'*_buf.CZY_PKN)=0
|| _val.msg_inset('CZY_PKN','T','N');
   _val.RESULT:=0;
   return()

|? _buf.WZ_OD<>date(0,0,0) & _buf.WZ_DO<>date(0,0,0) & _buf.WZ_DO<_buf.WZ_OD
|| _val.MSG:='Data "%1" nie może być wcześniejsza od daty "%2".'@
      [MS.name(PAR_POKR,'WZ_DO'),MS.name(PAR_POKR,'WZ_OD')];
   _val.RESULT:=0;
   return()
?};

{? _buf.FM<>''
|| _err:=form_chk($_buf.FM);
   {? _err.first()
   || _val.MSG:='Formuła ma nieprawidłową składnię. Znak: %1, %2.'@
         [$_err.ERR_COL,_err.ERR_DESC];
      _val.RESULT:=0;
      return()
   ?}
?};

: weryfikacja spójności referencyjnej i logicznej
{? ~R.find_tab(,'RN',,'=',_buf.R)
|| _val.msg_norec('R');
   _val.RESULT:=0;
   return()

|? R.CHO<>'N'
|| _val.MSG:='Składnik %1 musi być zdefiniowany jako "Nie wliczany do zasiłku".'@[$_buf.R];
   _val.RESULT:=0;
   return()

|| _rub:=R.ref()
?};

_rub_n:=null;
{? _buf.R_N<>0
|| {? ~R.find_tab(,'RN',,'=',_buf.R_N)
   || _val.msg_norec('R_N');
      _val.RESULT:=0;
      return()

   |? _buf.R=_buf.R_N
   || _val.MSG:='Wartość "%1" musi być różna od wartości "%2".'@
         [MS.name(PAR_POKR,'R_N'),MS.name(PAR_POKR,'R')];
      _val.RESULT:=0;
      return()

   |? R.CHO<>'N'
   || _val.MSG:='Składnik %1 musi być zdefiniowany jako "Nie wliczany do zasiłku".'@[$_buf.R_N];
      _val.RESULT:=0;
      return()

   || _rub_n:=R.ref()
   ?}
?};

_ref:=null;
{? PAR_POKR.find_tab(,'R',,'=',_rub)
|| _ref:=PAR_POKR.ref()
?};

: dalsza weryfikacja spójności logicznej
{? _rub<>null & PAR_POKR.find_tab(,'R_N',,'=',_rub) & PAR_POKR.ref()<>_rub
|| _val.MSG:='Rubryka "%1" jest wykorzystywana jako składnik nominalny.'@[$_buf.R];
   _val.RESULT:=0;
   return()
|? _rub_n<>null & PAR_POKR.find_tab(,'R',,'=',_rub_n) & PAR_POKR.ref()<>_rub_n
|| _val.MSG:='Rubryka "%1" jest już wykorzystywana.'@[$_buf.R_N];
   _val.RESULT:=0;
   return()
?};

: optymalizacja importu i standaryzacja kodu
_obj:=_val.OBJ:=obj_new('PAR_POKR','R','R_N','to_str');
_obj.to_str:="'%1'[$_a.R]";
_obj.R:=_rub;
_obj.R_N:=_rub_n;
_obj.PAR_POKR:=_ref;

{? _ref=null
|| _val.ACTION:='add'
|| _val.ACTION:='put'
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;

_set:="
   _a.R:=_c.R;
   _a.R_N:=_c.R_N;
   _a.RP:=_b.RP;
   _a.RZ:=_b.RZ;
   _a.KZ:=_b.KZ;
   _a.WZ_OD:=_b.WZ_OD;
   _a.WZ_DO:=_b.WZ_DO;
   _a.DZ_12:=_b.DZ_12;
   _a.PTZO:=_b.PTZO;
   _a.FM:=_b.FM;
   _a.CZY_FM:=_b.CZY_FM;
   _a.CZY_PKN:=_b.CZY_PKN;
   _a.FIRMA:=REF.FIRMA;
   ~~
";

{? _val.ACTION='put' & _mod
:  włączono tryb nadpisywania
|| {? PAR_POKR.seek(_obj.PAR_POKR)
   || _set(PAR_POKR,_buf,_obj);
      {? ~PAR_POKR.put(1)
      || _val.msg_update(_obj.to_str(_buf));
         _val.RESULT:=0
      ?}
   || _val.msg_norec(,PAR_POKR.comment());
      _val.RESULT:=0
   ?}

|? _val.ACTION='add'
:  brak ograniczeń
|| PAR_POKR.blank();
   _set(PAR_POKR,_buf,_obj);
   {? ~PAR_POKR.add(1)
   || _val.msg_insert(_obj.to_str(_buf));
      _val.RESULT:=0
   ?}
?};
~~

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:42 1b0eb386b8e5e151b2d56111a40e79272d293d3aaad14784053eea372b10216e9ccdaca71a45da87d0adcc236bc5f123ad6053c98057d345517234a24e735bd80d20c7cbbcaa52c40a7e6b96bee04160e50143a5290dda56a4d29a05213ea7fd5491125c65902950fd3da5eb5e39f6b4b5335efd0c7207adadc576fa0d2347d7
