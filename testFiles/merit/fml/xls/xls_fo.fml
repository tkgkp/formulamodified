:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: Nowy1.fml
:: Utworzony: 02.07.2018
:: Autor: WH
:: Systemy:
::======================================================================================================================
:: Zawartość:
::======================================================================================================================

\init_usr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - obiekt z definicją, który należy zasilić - wynik działania exec('args_init','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='FO_USR';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_FO_USER';
:: Redagowalność wyłączona ze względu na trudność w zapanowaniu nad walidacją wartości parametrów które przychodzą z Excel
_def.ADD_ROWS:=0;
_def.FILE:='parametryzacja.xlsx';
_def.SHEET:='Uniwersalne parametry (użytk.)'@+'=1,3';
_def.NAME:='Uniwersalne parametry (użytkownika)'@;
_def.DESC:='Uniwersalne parametry (użytkownika)'@;
_def.TABLE:="FO_USR.clear();FO_USR";
_def.BEFORE:="exec('before_usr','xls_fo')";
_def.AFTER:="FO_USR.cntx_pop()";
_def.FIELDS:="exec('FO_USR_fields','xls_fo',_a)";
_def.EXPORT:="exec('export','xls_fo',_a,_b,'U')";
_def.IMPORT:="exec('import','xls_fo',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_fo',_a,_b,_c,'U')";
~~


\init_app
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - obiekt z definicją, który należy zasilić - wynik działania exec('args_init','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='FO_DEF';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_FO_APPL';
:: Redagowalność wyłączona ze względu na trudność w zapanowaniu nad walidacją wartości parametrów które przychodzą z Excel
_def.ADD_ROWS:=0;
_def.FILE:='parametryzacja.xlsx';
_def.SHEET:='Uniwersalne parametry (apl.)'@+'=1,3';
_def.NAME:='Uniwersalne parametry (aplikacyjne)'@;
_def.DESC:='Uniwersalne parametry (aplikacyjne)'@;
_def.TABLE:="FO_DEF.clear();FO_DEF";
_def.BEFORE:="exec('before_def','xls_fo')";
_def.PREFIX:="FO_DEF.prefix('A')";
_def.AFTER:="FO_DEF.cntx_pop()";
_def.FIELDS:="exec('FO_DEF_fields','xls_fo',_a)";
_def.EXPORT:="exec('export','xls_fo',_a,_b,'A')";
_def.IMPORT:="exec('import','xls_fo',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_fo',_a,_b,_c,'A')";
~~


\FO_USR_fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Zwraca eksportowane pola tabeli i ich atrybuty w excel
::   WE: _a - obiekt z definicją pól który należy zasilić - wynik działania exec('args_fields','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('NR'   ,'Numer'@       ,0,,'Numer parametru\nNieredagowalne'@,,0);
_def.define('NAME' ,'Nazwa'@       ,0,,'Nazwa parametru\nNieredagowalne'@);
_def.define('WDR'  ,'Wdrożeniowe?'@,0,,'Czy parametr wdrożeniowy (T/N)\nNieredagowalne'@);
_def.define('USER' ,'Użytkownik'@  ,0,,'Użytkownik\nNieredagowalne'@);
_def.define('VALUE','Wartość'@     ,0,,'Wartość parametru\nNieredagowalne'@);
~~


\FO_DEF_fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Zwraca eksportowane pola tabeli i ich atrybuty w excel
::   WE: _a - obiekt z definicją pól który należy zasilić - wynik działania exec('args_fields','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('NR'   ,'Numer'@       ,0,,'Numer parametru\nNieredagowalne'@,,0);
_def.define('NAME' ,'Nazwa'@       ,0,,'Nazwa parametru\nNieredagowalne'@);
_def.define('WDR'  ,'Wdrożeniowe?'@,0,,'Czy parametr wdrożeniowy (T/N)\nNieredagowalne'@);
_def.define('VALUE','Wartość'@     ,0,,'Wartość parametru\nNieredagowalne'@);
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::       _c - STRING - czy dotyczy FO_USR, czy FO_DEF
::   WY: 0 - nie zapisywać tego rekordu do Ecel
::       1 - zapisywać
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_obj:=_b;
_kind:=_c;

_table:=~~;
{? _kind='A'
|| _table:=FO_DEF
|? _kind='U'
|| _table:=FO_USR
?};

_result:=1;
_interface:=exec('interface','#params',_kind);

{? type_of(_interface)>0
||
   _obj.NR.VALUE:=_table.NR;
   _obj.NR.EDITABLE:=0;
   _obj.WDR.VALUE:=_table.WDR;
   _obj.WDR.EDITABLE:=0;
   _obj.NAME.VALUE:=_interface.name();
   _obj.NAME.EDITABLE:=0;
   {? _interface.VAL_MEMO<>''
   || _obj.VALUE.VALUE:=_interface.VAL_MEMO
   || _obj.VALUE.VALUE:=_interface.VAL_FML
   ?};
   {? _kind='U'
   || _obj.USER.VALUE:=_table.USERS().KOD;
      _excel.write_async('USERS',_table.USERS)
   ?}
|| _result:=0
?};
_result


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt z resultem walidatora i resultem importu, wynik działania exec('args_valid','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;
_interface:=_result.OBJ;

_can_continue:=1;

{? _mode>0 & type_of(_interface)>100
|| _excel_value:=($_obj.VALUE)();
   _result.RESULT:=_interface.save(_excel_value);
   _user:=_interface.user();
   _msg:='';
   {? _user<>''
   || _msg:='dla użytkownika: %1'@[_user]
   ?};
   {? _result.RESULT<=0
   || _result.MSG:='Nie udało się poprawić wartości parametru nr %1 %2'@[$_interface.nr(),_msg]
   ?}
?};
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord. Wypełnia bufor tabeli FO_USR lub FO_DEF
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER   - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obj_new() - obiekt z resultem, wynik działania exec('args_valid','#excel_imex').
::                        Obiekt ten jest przekazywany do formuły na IMPORT. Pole RESULT decyduje czy formuła
::                        na import się wykona. Pole MSG służy to odpisania komunikatu
::       _d - STRING - czy dotyczy FO_USR, czy FO_DEF
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;
_kind:=_d;

{? _kind='A'
|| _dom:=_result.env.ZWS_FO_APPL_DOM
|| _dom:=_result.env.ZWS_FO_USER_DOM
?};

_can_continue:=1;

:: Walidacja wartości z Excel, czy są w nim pola których się spodziewam i czy mają dobre wartości
{? _obj.NR=0
|| _can_continue:=0;
   _result.MSG:='Nie zaimportowano wartości parametru. Kolumna: %1 nie może być pusta'@['Numer'@]
?};
{? _obj.WDR=''
|| _can_continue:=0;
   _result.MSG:='Nie zaimportowano wartości parametru. Kolumna: %1 nie może być pusta'@['Wdrożeniowe?'@]
?};
{? _obj.VALUE=''
|| _can_continue:=0;
   _result.MSG:='Nie zaimportowano wartości parametru. Kolumna: %1 nie może być pusta'@['Wartość'@]
?};

_users:=null();
_fo_def:=null();
_interface:=~~;

_excel_value:=~~;

:: Poprawa wydajności - ponieważ wartości w Excel nie są nigdy redagowalne nie trzeba
:: sprawdzać składni formuł na wartości
::{? _can_continue>0
::||
:::: Sprawdzam składnię
::   _can_continue:=exec('valid_formula','#field',_obj.VALUE,0);
::   {? _can_continue=0
::   || {? _kind='A'
::      || _result.MSG:='Nie zaimportowano wartości parametru: %1. Kolumna: %2 ma niepoprawną składnię'@[$_obj.NR,'Wartość'@]
::      |? _kind='U'
::      || _result.MSG:='Nie zaimportowano wartości parametru: %1 dla użytkownika %2. Kolumna: %3 ma niepoprawną składnię'@[$_obj.NR,_obj.USER,'Wartość'@]
::      ?}
::   ?}
::?};

{? _can_continue>0
|| _excel_value:=($_obj.VALUE)();
   {? type_of(_excel_value)<=0
   || _can_continue:=0;
      _result.MSG:='Nie zaimportowano wartości parametru. Kolumna: %1 ma niepoprawną składnię'@['Wartość'@]
   ?}
?};

{? _can_continue>0
||
:: Prefiksuję w zależności od rodzaju
   {? _kind='A'
   || _table:=FO_DEF;
      _table.prefix(_kind,_obj.WDR,_obj.NR)
   |? _kind='U'
   || _table:=FO_USR;
      _users:=null();
      _fo_def:=null();
      {? _can_continue>0
      || _users:=exec('FindInSet','#table','USERS','USR_KKOD',_obj.USER);
         _fo_def:=exec('FindInSet','#table','FO_DEF','NR',_obj.NR,'U',,,_obj.WDR);

         {? _users=null()
         || _can_continue:=0;
            _result.MSG:='Nie znaleziono użytkownika: %1'@[_obj.USER]
         ?};
         {? _fo_def=null()
         || _can_continue:=0;
            _result.MSG:='Nie znaleziono parametru nr: %1'@[$_obj.NR]
         ?}
      ?};
      _table.prefix(_users,_obj.WDR,_obj.NR)
   ?}
?};
{? _can_continue>0
|| {? ~_table.first() | (_dom<>'' & ~exec('bind_check','#params',_table.ref(),_dom))
   || _can_continue:=0
   ?}
?};
{? _can_continue>0
||
::    Jest rekord FO, tworzę jego interfejs
   _interface:=exec('interface','#params',_kind);
   {? type_of(_interface)>100
   ||
      _result.OBJ:=_interface;
      {? _mode>0
      || _get:=_interface.get();
         {? type_of(_get)=type_of(_excel_value) & _get=_excel_value
         ||
::             Wartość się nie zmieniła, więc tak naprawdę nic nie muszę robić
            _can_continue:=0
         ?}
      ?}
   ?}
?};
{? _can_continue>0
||
   {? type_of(_interface)<=0
   ||
::    Jeżeli obiekt się nie zainicjował, to znak że w bieżących formułach FO
::    nie ma takiej formuły lub nie jest w wybranych dziedzinach , w takim wypadku nie importuję wartości
      _can_continue:=0
   ?}
?};
{? _can_continue<=0
|| _result.RESULT:=0
?};
~~


\before_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.14]
:: OPIS: Formuła przed importem dla parametrów aplikacyjnych
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
{? cli_ver()<>'cgi'
|| exec('init','params')
?};
FO_DEF.cntx_psh();FO_DEF.index('NR');
~~


\before_usr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [20.14]
:: OPIS: Formuła przed importem dla parametrów użytkownika
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
{? cli_ver()<>'cgi'
|| exec('init','params')
?};
exec('upgrade_usr','#params');
FO_USR.cntx_psh();FO_USR.index('USERS');
~~

:Sign Version 2.0 jowisz:1045 2024/01/30 14:07:56 0f1cd78c40cbdd6a47a4ea144efb723599eb4106ccb24027a78b692e8ed0b367ec64c1a34f0603ad6d04147521aeaa3934055eb9857b25f5e400c8009748335449403afc5b45e0ed1a6dec29a848f8d5a680343610c19e452ee70506c016955fc5c3ee9cc081c49ca8f9cb6d0068b83797619015e3d239e34b6ad318525035a1
