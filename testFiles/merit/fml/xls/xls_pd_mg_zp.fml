:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_pd_mg_zp.fml
:: Utworzony: 19.04.2021
:: Autor: AKUL
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu pozycji zestawów formuł planu dostaw
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='PD_MG_ZP';
_def.DOMAIN:=exec('name','#b_domain','LZK');
_def.FUNPAR:='ZWS_PLAN_DST';

_def.FILE:='plan_dostaw.xlsx';
_def.SHEET:='Pozycje zestawów magazynów=1,1';
_def.NAME:='Pozycje zestawów magazynów'@;
_def.DESC:='Pozycje zestawów magazynów';
_def.TABLE:="PD_MG_ZP";
_def.FIELDS:="exec('fields','xls_pd_mg_zp',_a)";
_def.EXPORT:="exec('export','xls_pd_mg_zp',_a,_b)";
_def.IMPORT:="exec('import','xls_pd_mg_zp',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_pd_mg_zp',_a,_b,_c)";
_def.SELECT:="exec('select','xls_pd_mg_zp',_a)";
_def.PREFIX:="PD_MG_ZP.index('MM'); PD_MG_ZP.prefix()";
_def.BEFORE:="PD_MG_ZP.cntx_psh()";
_def.AFTER:="PD_MG_ZP.cntx_pop()";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('PD_MG_ZN','Zestaw',0);
_def.define('MG','Magazyn',0);
_def.define('MM','Przesunięcie magazynowe',0);
_def.define('SORT','Kolejność');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
PD_MG_ZP.prefix();
{? _validate.ACTION='add'
|| PD_MG_ZP.blank();
   PD_MG_ZP.MG:=_validate.OBJ.MG;
   PD_MG_ZP.PD_MG_ZN:=_validate.OBJ.PD_MG_ZN;
   PD_MG_ZP.MM:=_obj.MM
?};
PD_MG_ZP.SORT:=_obj.SORT;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;

_table.PD_MG_ZN.VALUE:=PD_MG_ZP.PD_MG_ZN().NAZ; _excel.write_async('PD_MG_ZN',PD_MG_ZP.PD_MG_ZN);
_table.MG.VALUE:=PD_MG_ZP.MG().SYM; _excel.write_async('MG',PD_MG_ZP.MG);
_table.MM.VALUE:=PD_MG_ZP.MM;
_table.SORT.VALUE:=PD_MG_ZP.SORT;

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('PD_MG_ZN','MG');

::Błędy
_result.OBJ.PD_MG_ZN:=exec('FindInSet','#table','PD_MG_ZN','UNIK',_obj.PD_MG_ZN,,,1,,null());
{? _result.OBJ.PD_MG_ZN=null()
|| _result.MSG:='Nie znaleziono nagłówka zestawu magazynów o nazwie %1.'@[_obj.PD_MG_ZN];
   _result.RESULT:=0;
   return(~~)
?};
_result.OBJ.MG:=exec('FindInSet','#table','MG','MAGAZYNY',_obj.MG,,,1,,null());
{? _result.OBJ.MG=null()
|| _result.MSG:='Nie znaleziono magazynu o kodzie %1.'@[_obj.MG];
   _result.RESULT:=0;
   return(~~)
?};
{? +_obj.MM=0 | 'TN'*_obj.MM=0
|| _result.msg_inset('MM','T','N');
   _result.RESULT:=0
?};

{? _result.RESULT=1
|| PD_MG_ZP.index('UNIK');
   PD_MG_ZP.prefix(_obj.MM,_result.OBJ.PD_MG_ZN,_result.OBJ.MG);
   {? PD_MG_ZP.first()
   ||
      {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_pd_mg_zp',_obj,_mode,_result);
         {? __CHK.record(PD_MG_ZP,,'PD_MG_ZN','MG','MM')<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_pd_mg_zp',_obj,_mode,_result);
      {? __CHK.record(PD_MG_ZP,,'PD_MG_ZN','MG','MM')<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
:: Sprawdzenie uprawnień użytkownika do magazynu, oddziału
{? _result.RESULT=1
|| PD_MG_ZN.cntx_psh();
   MG.cntx_psh();
   PD_MG_ZP.PD_MG_ZN();
   PD_MG_ZP.MG();
   {? PD_MG_ZN.USER<>null()
   || USERS.cntx_psh();
      PD_MG_ZN.USER();
      USERS_UP.cntx_psh();
      {? PD_MG_ZP.MM<>'T'
      || _oddz:=exec('FindInSet','#table','ODDZ','KOD2',MG.ODDZ,,,,,null());
         {? _oddz<>null()
         || USERS_UP.index('ODDZ');
            USERS_UP.prefix(USERS.ref(),'ODDZ',_oddz);
            {? ~USERS_UP.first()
            || _result.MSG:='Użytkownik %1 nie posiada uprawnień do magazynu %3 i/lub oddziału %2.'@
                            [USERS.KOD,MG.ODDZ,MG.SYM];
               _result.RESULT:=0
            ?}
         ?}
      ?};
      {? _result.RESULT=1
      || USERS_UP.index('MAG');
         USERS_UP.prefix(USERS.ref(),{? PD_MG_ZP.MM='T' || 'ZAW' || 'MG' ?},MG.ref());
         {? ~USERS_UP.first()
         || {? PD_MG_ZP.MM='T'
            || USERS_UP.prefix(null(),'ZAW',MG.ref());
               {? ~USERS_UP.first()
               || _result.MSG:='Użytkownik %1 nie posiada uprawnień do magazynu realizującego '
                               'zamówienie wewnętrzne %2.'@[USERS.KOD,MG.SYM];
                  _result.RESULT:=0
               ?}
            || _result.MSG:='Użytkownik %1 nie posiada uprawnień do magazynu %2.'@[USERS.KOD,MG.SYM];
               _result.RESULT:=0
            ?}
         ?}
      ?};
      USERS_UP.cntx_pop();
      USERS.cntx_pop()
   ?};
   MG.cntx_pop();
   PD_MG_ZN.cntx_pop()
?};

_result


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=PD_MG_ZP.add(1)
   |? _validate.ACTION='put'
   || _result:=PD_MG_ZP.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || FUN.info('Dodanie pozycji zestawu magazynów (zestaw: %1, magazyn: %2) nie powiodło się.'@[_obj.PD_MG_ZN,_obj.MG])
   || FUN.info('Poprawa pozycji zestawu magazynów (Zestaw: %1, magazyn: %2) powiodła się.'@[_obj.PD_MG_ZN,_obj.MG])
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [21.37]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1
   ,'ZN','STRING[100]','Zestaw'
   ,'ODDZ','STRING[10]','Oddział'
   ,'SYM','STRING[8]','Magazyn'
   ,'NAZWA','STRING[60]','Nazwa'
   ,'MM','STRING[1]','Przesunięcie magazynowe'
   ,'SORT','STRING[10]','Kolejność do przesunięć'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'ZN',,,'SYM',,,'SORT',,);

MG.cntx_psh();
PD_MG_ZP.cntx_psh();
PD_MG_ZP.index('MM');
PD_MG_ZP.prefix();
{? PD_MG_ZP.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$PD_MG_ZP.ref();
      _selected.prefix($PD_MG_ZP.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      PD_MG_ZP.MG();
      _tab.ZN:=PD_MG_ZP.PD_MG_ZN().NAZ;
      _tab.SORT:=PD_MG_ZP.SORT;
      _tab.MM:=PD_MG_ZP.MM;
      _tab.ODDZ:=MG.ODDZ;
      _tab.SYM:=MG.SYM;
      _tab.NAZWA:=MG.NAZ;
      _tab.add();
      PD_MG_ZP.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'ZN,ODDZ,SYM,NAZWA,MM[TN],SORT',20,'Wybór pozycji zestawów magazynów planu dostaw do eksportu'@,1);
{? _result>0
|| _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
PD_MG_ZP.cntx_pop();
MG.cntx_pop();

_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:12 0561af927e5887e2b8ab20f84a4481b736943824d8bcecec90ebb4b033e8ee5132349274c94bfe95436e90300701df198091e2e8ed0c93a997cbf9279a43536f5a306b534db8b24a7c1e7d9314e83909aaed773c8bd85f4ed29618eb8315d68a023744182df194c2873eb68af8ee2f3974b183ce8f817fe3fa914fec8305e687
