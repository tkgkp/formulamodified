:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_pfaz.fml
:: Utworzony: 22.10.2018
:: Autor:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu faz produkcji
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='PFAZ';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='ZWS_PAR_TFAZ';

_def.FILE:='produkcja.xlsx';
_def.SHEET:='Fazy produkcji'@+'=1,1';
_def.NAME:='Fazy produkcji'@;
_def.DESC:='Fazy produkcji'@;

_def.PREFIX:="exec('prefix','xls_pfaz')";
_def.TABLE:="exec('table','xls_pfaz')";
_def.FIELDS:="exec('fields','xls_pfaz',_a)";

_def.BEFORE:="PFAZ.cntx_psh()";
_def.AFTER:="PFAZ.cntx_pop()";
_def.SELECT:="exec('select','xls_pfaz',_a)";

_def.EXPORT:="exec('export','xls_pfaz',_a,_b)";
_def.VALIDATE:="exec('validate','xls_pfaz',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_pfaz',_a,_b,_c)";
~~

\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
PFAZ.index('KOD');
PFAZ.prefix();
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
PFAZ


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('KOD','Kod'@,0,,'Kod (max. 10 znaki)'@);
_def.define('OPIS','Opis'@,1,,'Opis (max. 30 znaków)'@);
_def.define('WYD','Wydział'@,1);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
PFAZ.prefix();
{? _validate.ACTION='add'
|| PFAZ.blank()
?};
PFAZ.KOD:=_obj.KOD;
PFAZ.OPIS:=_obj.OPIS;
PFAZ.WYD:=_validate.OBJ.WYD;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.KOD.VALUE:=PFAZ.KOD;
_table.OPIS.VALUE:=PFAZ.OPIS;
_table.WYD.VALUE:=PFAZ.WYD().KOD;
_excel.write_async('SLO',PFAZ.WYD);
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('WYD');
{? _obj.WYD<>''
||
  _result.OBJ.WYD := exec('FindInSet','#table','SLO','SL',_obj.WYD,XINFO.SLWYDZIA,"SLO.ref()",1)
||
  _result.OBJ.WYD := null()
?};

:: Błędy
{? _obj.WYD<>'' & _result.OBJ.WYD=null()
|| _result.msg_norec('WYD');
   _result.RESULT:=0
?};

{? (+_obj.KOD)>10
||
  _result.msg_length('KOD',10);
  _result.RESULT:=0
?};

:: OK
{? _result.RESULT>0
|| PFAZ.index('KOD');
   PFAZ.prefix(_obj.KOD,);
   {? PFAZ.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_pfaz',_obj,_mode,_result);
         {? exec('pfazarec','fazy',1)<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_pfaz',_obj,_mode,_result);
      {? exec('pfazarec','fazy',0)<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=PFAZ.add(1)
   |? _validate.ACTION='put'
   || _result:=PFAZ.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie fazy produkcji o kodzie %1 nie powiodło się.'@[$_obj.KOD]
   || _validate.MSG:='Poprawa fazy produkcji o kodzie %1 nie powiodła się.'@[$_obj.KOD]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,
   'KOD','STRING[10]','Kod'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'OPIS','STRING[30]','Opis'
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

PFAZ.cntx_psh();
PFAZ.index('KOD');
PFAZ.prefix();
{? PFAZ.first()
|| {!
   |?  _tab.blank();
       _tab.REF:=$PFAZ.ref();
       _selected.prefix($PFAZ.ref());
       {? _selected.first()
       || _tab.SELECTED:='T'
       || _tab.SELECTED:='N'
       ?};
       _tab.KOD:=PFAZ.KOD;
       _tab.OPIS:=PFAZ.OPIS;
       _tab.add();
       PFAZ.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'KOD,OPIS',20,'Wybór faz produkcji do eksportu'@);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
PFAZ.cntx_pop();
_result

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:49 603477c51970178ba1732b82100d080e06be66e35ac6012d5a8938d928bc50eecee0ad18b7035d6f71277e3464fb4c382bfcb8972f6a3f22c761218c6f3ed56f5448bff9afca39bbe288c12740e284d24ccb3012c2d18bc3ed2279cd1ad3cc7e13edea551db4a57ae2edd5271d78a6023ff224dd3219be9fbc9cf50475084f71
