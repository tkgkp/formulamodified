:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_tktlw.fml
:: Utworzony: 14.08.2020
:: Autor: AKUL
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu wersji wyrobów kart technologicznych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TKTLW';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='TKTL';
_def.HIDDEN:='T';
_def.SKIP:='T';
_def.ADD_ROWS:=0;

_def.FILE:='produkcja_technologie.xlsx';
_def.SHEET:='Wersje wyrobów'@+'=1,1';
_def.NAME:='Wersje wyrobów'@;
_def.DESC:='Wersje wyrobów do karty technologicznej'@;


_def.PREFIX:="TKTLW.index('TP'); TKTLW.prefix()";
_def.TABLE:="TKTLW";
_def.FIELDS:="exec('fields','xls_tktlw',_a)";

_def.BEFORE:="{? _a.is_export() || TKTLW.f_clear() ?}; TKTLW.cntx_psh()";
_def.AFTER:="{? _a.is_import() || exec('tktl_import_clear','tech_common',_a.excel) ?};TKTLW.cntx_pop()";

_def.EXPORT:="exec('export','xls_tktlw',_a,_b)";
_def.VALIDATE:="exec('validate','xls_tktlw',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_tktlw',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_edit:=0;
_def.define('TKTL_NRK','Nr karty'@,_edit);
_def.define('TKTL_WER','Wersja karty'@,_edit);
_def.define('KTM','Produkt'@,_edit);
_def.define('DEFAULT','Domyślny'@,_edit,,'Domyślny produkt karty - [T]/[N]');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TKTLW.prefix();
{? _validate.ACTION='add'
|| TKTLW.blank();
   TKTLW.TKTL:=_validate.OBJ.TKTL;
   TKTLW.KTM:=_validate.OBJ.KTM
?};
:: Sprawdzam czy do produktu jest przypisana karta domyślna, jeżeli tak to importuje bieżącą jako niedomyślną
TKTLW.DEFAULT:={? _obj.DEFAULT='T'
               || TKTLW.cntx_psh();
                  TKTLW.clear();
                  {? TKTLW.find_tab(,'KTM',,'=',TKTLW.KTM,'DEFAULT',,'=','T')
                  || _def:='N'
                  || _def:='T'
                  ?};
                  TKTLW.cntx_pop();
                  _def
               || 'N'
               ?};
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;

_table.TKTL_NRK.VALUE:=TKTLW.TKTL().NRK;
_table.TKTL_WER.VALUE:=TKTLW.TKTL().WER;
_table.KTM.VALUE:=TKTLW.KTM().KTM;
_table.DEFAULT.VALUE:=TKTLW.DEFAULT;
:: Parametry wyrobu
TKTLW.cntx_psh();
TWPAR.cntx_psh();
TWPAR.use('txwpr___');
TWPAR.cntx_psh();
TWPAR.index('TPR');
TWPAR.prefix(TKTLW.ref);
{? TWPAR.first()
||
   {!
   |?
      _excel.write_async('TWPAR',TWPAR.ref());
      TWPAR.next()
   !}
?};
TWPAR.cntx_pop();
TWPAR.cntx_pop();
TKTLW.cntx_pop();

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('TKTL','KTM');
_imp_err:=0;
_check:=1;

:: Sprawdzam czy do karty zgłoszony został błąd
{? __TKTL_ERR.find_key(_obj.TKTL_NRK,_obj.TKTL_WER,)
|| _imp_err:=1
?};
:: Jeżeli wcześniej został zgłoszony błąd to wychodzę wcześniej bez dodatkowej walidacji
{? _imp_err>0
|| _result.RESULT:=0
||
:: Wyszukanie refów powiązanych rekordów
   _result.OBJ.TKTL:={? _obj.TKTL_NRK='' | _obj.TKTL_WER=''
                     || null()
                     || exec('FindInSet','#table','TKTL','NRK',_obj.TKTL_WER,'T',,1,_obj.TKTL_NRK,null())
                     ?};
   _result.OBJ.KTM:={? _obj.KTM=''
                    || null()
                    || exec('FindInSet','#table','M','MATKTM',_obj.KTM,,,1,,null())
                    ?};
:: Błędy
   {? _result.OBJ.TKTL=null()
   || _result.msg_norec('TKTL_NRK');
      _result.RESULT:=0
   ?};

   {? _obj.KTM<>'' & _result.OBJ.KTM=null()
   || _result.msg_norec('KTM');
      _result.RESULT:=0
   ?};

   {? +_obj.DEFAULT=0 | 'TN'*_obj.DEFAULT=0
   || _result.msg_inset('DEFAULT','N','T');
      _result.RESULT:=0
   ?}
?};
:: OK
{? _result.RESULT>0
||
   _valid:="
      _chk:=__CHK.record(TKTLW,,'KTM');

      {? _chk=''
      || M.cntx_psh();
         _jm:=TKTLW.KTM().J;
         _grupa:=TKTLW.KTM().MGR;

         TKTLW.cntx_psh();
         TKTLW.index('REF');
         TKTLW.prefix(TKTLW.TKTL);
         {? TKTLW.first()
         || {? TKTLW.KTM().MGR<>_grupa
            || FUN.emsg('Produkt musi należeć do grupy: %1.'@[TKTLW.KTM().MGR().KOD]);
               _chk:='KTM'
            |? TKTLW.KTM().J<>_jm
            || FUN.emsg('Produkt musi mieć jednostkę miary: %1.'@[TKTLW.KTM().J().KOD]);
               _chk:='KTM'
            ?}
         ?};
         TKTLW.cntx_pop();
         M.cntx_pop()
      ?};
      _chk
   ";
   TKTLW.index('REF');
   TKTLW.prefix(_result.OBJ.TKTL,_result.OBJ.KTM,_obj.DEFAULT,);
   {? TKTLW.first()
   || {? _mode=0
      || _result.RESULT:=0;
         _check:=0;
         _result.MSG:='Technologia %1 (wer.%2) posiada już wersję wyrobu dotyczącą produktu \'%3\'.'@
                      [_obj.TKTL_NRK,_obj.TKTL_WER,_obj.KTM]
      || _result.ACTION:='put';
         exec('record','xls_tktlw',_obj,_mode,_result);
         {? _valid()<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_tktlw',_obj,_mode,_result);
      {? _valid()<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
{? _result.RESULT<=0 & _check>0 & _imp_err=0
||
:: Jak błąd to ustawiam znacznik błędu na karcie technologicznej
   {? _result.OBJ.TKTL<>null()
   || TKTL.cntx_psh();
      TKTL.prefix();
      {? TKTL.seek(_result.OBJ.TKTL)
      || TKTL.IMP_ERR:='T';
         TKTL.put();
         _result.MSG+='\nKarta %1 (wer. %2) oraz wszystkie jej elementy, które zostały do tej pory zaimportowane '
                      'zostaną usunięte.'@[TKTL.NRK,TKTL.WER];
::       Dodaje kartę do listy ignorowanych kart przy imporcie
         __TKTL_ERR.NRK:=_obj.TKTL_NRK;
         __TKTL_ERR.WER:=_obj.TKTL_WER;
         __TKTL_ERR.add()
      ?};
      TKTL.cntx_pop()
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| EXCEL_ENV.ID_GRP:=$TKTLW.TKTL;
   {? _validate.ACTION='add'
   || _result:=TKTLW.add(1);
::    Jeżeli znacznik domyślności został zmieniony to dopisuje kartę wyrobów do tabeli mapującej, żeby dało się ją
::    później odnaleźć
      {? _result>0 & TKTLW.DEFAULT<>_obj.DEFAULT
      || {? ~__TKTLW_MAP.find_key(_obj.TKTL_NRK,_obj.TKTL_WER,_obj.KTM,_obj.DEFAULT)
         || __TKTLW_MAP.NRK:=_obj.TKTL_NRK;
            __TKTLW_MAP.WER:=_obj.TKTL_WER;
            __TKTLW_MAP.KTM:=_obj.KTM;
            __TKTLW_MAP.DEFAULT:=_obj.DEFAULT;
            __TKTLW_MAP.REF:=$TKTLW.ref();
            __TKTLW_MAP.add()
         ?}
      ?};
::    Jeżeli zmienionno znacznik domyślności dla wyrobu danej karty to poprawiam zapis na TKTL bo mógł się zmienić
      {? _result>0 & __TKTLW_MAP.find_key(_obj.TKTL_NRK,_obj.TKTL_WER,)
      ||
         TKTL.cntx_psh();
         TKTL.clear();
         {? TKTL.seek(TKTLW.TKTL)
         || TKTLW.cntx_psh();
            TKTLW.index('TP');
            TKTLW.prefix(TKTL.ref());
            _size:=TKTLW.size();
            _count:=0;
            {? TKTLW.first()
            || {!
               |?
                  {? TKTLW.DEFAULT='T' || _count+=1 ?};
                  TKTLW.next()
               !}
            ?};
            {? _count=0
            || _default:='N'
            |? _size=_count
            || _default:='T'
            || _default:='P'
            ?};
            TKTL.DEFAULT:=_default;
            TKTL.put();

            TKTLW.cntx_pop()
         ?};
         TKTL.cntx_pop()
      ?}
   |? _validate.ACTION='put'
   || _result:=TKTLW.put(1)
   ?}
|| EXCEL_ENV.ID_GRP:=''
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie wersji wyrobu %3 do karty technologicznej %1 (%2) nie powiodło się.'@
                     [_obj.TKTL_NRK,_obj.TKTL_WER,_obj.KTM]
   || _validate.MSG:='Poprawa wersji wyrobu %3 do karty technologicznej %1 (%2) nie powiodła się.'@
                     [_obj.TKTL_NRK,_obj.TKTL_WER,_obj.KTM]
   ?}
?};
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 e027c34c6995c6d8799e27f44864f5902888fc1947b86ed531a55e51166d2361cf3a81f33fe99e853d3a903e377808dde30a7954acd2ec53d83d2653e489fa51111c95cc164f2a9652744a568908d77540ba8199215999d779200f8f3b10064d48b6cf85533da62a69d5e28c3fee98118239d4738e0acf88962471fbee672df0
