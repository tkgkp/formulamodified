:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_tytuln.fml
:: Utworzony: 13.08.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu tytułów naukowych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='TYTULN';
_def.FUNPAR:='ZWS_PAR_PTNA';
_def.DOMAIN:=exec('name','#b_domain','PKD');
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.SHEET:='Tytuły naukowe=1,1';
_def.NAME:='Tytuły naukowe'@;
_def.DESC:='Tytuły naukowe';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="TYTULN";

: prolog
_def.BEFORE:="
   TYTULN.cntx_psh();
   TYTULN.f_clear();
   TYTULN.index('KOD');
   TYTULN.prefix();
   ~~
";

: epilog
_def.AFTER:="
   TYTULN.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('KOD',    MS.name(TYTULN,'KOD'),    1,,MS.comment(TYTULN,'KOD'));
   _env.define('NAZ',    MS.name(TYTULN,'NAZ'),    1,,MS.comment(TYTULN,'NAZ'));
   _env.define('NAUKOWY',MS.name(TYTULN,'NAUKOWY'),1,,MS.comment(TYTULN,'NAUKOWY'));
   _env.define('POZIOM', MS.name(TYTULN,'POZIOM'), 1,,MS.comment(TYTULN,'POZIOM'),,0);
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.KOD.VALUE:=TYTULN.KOD;
   _buf.NAZ.VALUE:=TYTULN.NAZ;
   _buf.NAUKOWY.VALUE:=TYTULN.NAUKOWY;
   _buf.POZIOM.VALUE:=TYTULN.POZIOM;
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_tytuln',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_tytuln',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.KOD=''      || 'KOD'
   |? _buf.NAZ=''      || 'NAZ'
   |? _buf.NAUKOWY=''  || 'NAUKOWY'
   |? _buf.NAUKOWY='T' || {? _buf.POZIOM=0
                          || 'POZIOM'
                          || ''
                          ?}
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? ('TN'*_buf.NAUKOWY)=0
|| _val.msg_inset('NAUKOWY','T','N');
   _val.RESULT:=0;
   return()

|? _buf.NAUKOWY='N' & _buf.POZIOM>0
|| _val.MSG:='Poziom może być określony tylko dla tytułu naukowego.'@;
   _val.RESULT:=0;
   return()

|? _buf.NAUKOWY='T' & TYTULN.find_tab(,'POZIOM',,'=',_buf.POZIOM,'KOD',,'<>',_buf.KOD)
|| _val.MSG:='Znaleziono inny tytuł naukowy o tym samym poziomie (%1).'@[$_buf.POZIOM];
   _val.RESULT:=0;
   return()

|? _buf.POZIOM<0
|| _val.msg_range('POZIOM',0);
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(TYTULN,'KOD');
{? +_buf.KOD>_max
|| _val.msg_length('KOD',_max);
   _buf.KOD:=_max+_buf.KOD
?};
_max:=MS.fld_len(TYTULN,'NAZ');
{? +_buf.NAZ>_max
|| _val.msg_length('NAZ',_max);
   _buf.NAZ:=_max+_buf.NAZ
?};

_ref:=null;
{? TYTULN.find_tab(,'KOD',,'=',_buf.KOD)
|| _ref:=TYTULN.ref()
?};

: optymalizacja importu i standaryzacja kodu
_obj:=_val.OBJ:=obj_new('TYTULN','to_str');
_obj.to_str:="'%1 - %2'[_a.KOD,_a.NAZ]";
_obj.TYTULN:=_ref;

{? _ref=null
|| _val.ACTION:='add'
|| _val.ACTION:='put'
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;

_set:="
   _a.KOD:=_b.KOD;
   _a.NAZ:=_b.NAZ;
   _a.NAUKOWY:=_b.NAUKOWY;
   _a.POZIOM:=_b.POZIOM;
   ~~
";

{? _val.ACTION='put' & _mod
:  włączono tryb nadpisywania
|| {? TYTULN.seek(_obj.TYTULN)
   || _set(TYTULN,_buf);
      {? ~TYTULN.put(1)
      || _val.msg_update(_obj.to_str(_buf));
         _val.RESULT:=0
      ?}
   || _val.msg_norec(,TYTULN.comment());
      _val.RESULT:=0
   ?}

|? _val.ACTION='add'
:  brak ograniczeń
|| TYTULN.blank();
   _set(TYTULN,_buf);
   {? ~TYTULN.add(1)
   || _val.msg_insert(_obj.to_str(_buf));
      _val.RESULT:=0
   ?}
?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 11cc8cf0d3cb9e509925af8e9ee3a4a4a80b2a8c5fbb0bc6538ce084df88fa7464882804eb237aa02aba9aa998cf0c895f775e142f4a572147b9f4b4f24d90c2639269b7650ad44ee1439f7a15816163d58a4110fef952d5eeae096c2427b817eaf597e5d0eaa50fb5dd9b73a597c7c2fa702102cd6e4116541cbc3074331984
