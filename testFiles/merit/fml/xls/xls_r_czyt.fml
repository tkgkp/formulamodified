:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_r_czyt.fml
:: Utworzony: 13.09.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu rodzajów czytników
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='R_CZYT';
_def.FUNPAR:='ZWS_PAR_PPRC';
_def.DOMAIN:=exec('name','#b_domain','PRC');
_def.FILE:=exec('def_per_prc_xlsx','xls__init');
_def.SHEET:='Dostawcy czytników=1,1';
_def.NAME:='Dostawcy czytników'@;
_def.DESC:='Dostawcy czytników';

: źródło danych
_def.TABLE:="R_CZYT";

: prolog
_def.BEFORE:="
   R_CZYT.cntx_psh();
   R_CZYT.index('R_CZYT');
   R_CZYT.prefix();
   ~~
";

: epilog
_def.AFTER:="
   R_CZYT.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('N',      MS.name(R_CZYT,'N'),      1,,MS.comment(R_CZYT,'N'));
   _env.define('C',      MS.name(R_CZYT,'C'),      1,,MS.comment(R_CZYT,'C'));
   _env.define('F',      MS.name(R_CZYT,'F'),      1,,MS.comment(R_CZYT,'F'));
   _env.define('K',      MS.name(R_CZYT,'K'),      1,,MS.comment(R_CZYT,'K'));
   _env.define('P',      MS.name(R_CZYT,'P'),      1,,MS.comment(R_CZYT,'P'));
   _env.define('FORMULA',MS.name(R_CZYT,'FORMULA'),1,,MS.comment(R_CZYT,'FORMULA'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.N.VALUE:=R_CZYT.N;
   _buf.C.VALUE:=R_CZYT.C;
   _buf.F.VALUE:=R_CZYT.F;
   _buf.K.VALUE:=R_CZYT.K().O;
   _buf.P.VALUE:=R_CZYT.P;
   _buf.FORMULA.VALUE:=R_CZYT.FORMULA().SKROT;
   _env.write_async('R_KLKW',R_CZYT.K);
   _env.write_async('FORMULA',R_CZYT.FORMULA);
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_r_czyt',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_r_czyt',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.N='' || 'N'
   |? _buf.C='' || 'C'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(R_CZYT,'N');
{? +_buf.N>_max
|| _val.msg_length('N',_max);
   _buf.N:=_max+_buf.N
?};
_max:=MS.fld_len(R_CZYT,'C');
{? +_buf.C>_max
|| _val.msg_length('C',_max);
   _buf.C:=_max+_buf.C
?};
_max:=MS.fld_len(R_CZYT,'F');
{? +_buf.F>_max
|| _val.msg_length('F',_max);
   _buf.F:=_max+_buf.F
?};
_max:=MS.fld_len(R_CZYT,'P');
{? +_buf.P>_max
|| _val.msg_length('P',_max);
   _buf.P:=_max+_buf.P
?};
_max:=MS.fld_len(R_KLKW,'O');
{? +_buf.K>_max
|| _val.msg_length('K',_max);
   _buf.K:=_max+_buf.K
?};
_max:=MS.fld_len(FORMULA,'SKROT');
{? +_buf.FORMULA>_max
|| _val.msg_length('FORMULA',_max);
   _buf.FORMULA:=_max+_buf.FORMULA
?};

: weryfikacja spójności referencyjnej
_r_klkw:=0;
{? _buf.K<>''
|| {? R_KLKW.find_tab(,'O',,'=',_buf.K)
   || _r_klkw:=R_KLKW.ref()
   || _val.msg_norec('K');
      _val.RESULT:=0;
      return()
   ?}
?};
_formula:=0;
{? _buf.FORMULA<>''
|| {? FORMULA.find_tab(,'RODZAJ',,'=','X','SKROT',,'=',_buf.FORMULA)
   || _formula:=FORMULA.ref()
   || _val.msg_norec('FORMULA');
      _val.RESULT:=0;
      return()
   ?}
?};

_ref:=null;
{? R_CZYT.find_tab(,'N',,'=',_buf.N,'C',,'=',_buf.C)
|| _ref:=R_CZYT.ref()
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 - %2'[_a.N,_a.C]",
   'K',_r_klkw,
   'FORMULA',_formula
);

{? _ref=null
|| _val.ACTION:='add'
|| _val.ACTION:='put'
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,R_CZYT,"
   _a.N:=_b.N;
   _a.C:=_b.C;
   _a.F:=_b.F;
   _a.K:=_c.K;
   _a.P:=_b.P;
   _a.FORMULA:=_c.FORMULA;
   ~~
");
~~

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:50 e3b5df4f19d6b2cba60c4a9476b55601d1030e5f02c0354277b5051c64f01ee1c50d43856591cd2ca0cbdce2e57451de0d1500f0fa91a94b8700e100929b4ec7b8cf0d2738c2f836ca95b796218faa0cffae9b839620663a8f368147d15a93eb7c71e0ecc90e711002fc3357df532eda80b2439583ff41531ad128f3a940b36f
