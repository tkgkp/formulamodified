:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_pl_wzor.fml
:: Utworzony: 07.08.2018
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu widoków planu operacyjnego
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='PL_WZOR';
_def.DOMAIN:=exec('name','#b_domain','TPP');
_def.FUNPAR:='ZWS_PAR_TOWZ';

_def.FILE:='produkcja_planowanie.xlsx';
_def.SHEET:='Widoki planu operacyjnego'@+'=1,1';
_def.NAME:='Widoki planu operacyjnego'@;
_def.DESC:='Widoki planu operacyjnego'@;

_def.PREFIX:="PL_WZOR.index('LP'); PL_WZOR.prefix()";
_def.TABLE:="PL_WZOR";
_def.FIELDS:="exec('fields','xls_pl_wzor',_a)";

_def.BEFORE:="PL_WZOR.cntx_psh()";
_def.AFTER:="PL_WZOR.cntx_pop()";
_def.SELECT:="exec('select','xls_pl_wzor',_a)";

_def.EXPORT:="exec('export','xls_pl_wzor',_a,_b)";
_def.VALIDATE:="exec('validate','xls_pl_wzor',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_pl_wzor',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('LP',MS.name(PL_WZOR,'LP'),0,,
   MS.name(PL_WZOR,'LP'),type_of(0),0
);

_def.define('AKT',MS.name(PL_WZOR,'AKT'),0,,
   MS.name(PL_WZOR,'AKT')+' '+'(max. %1 znaków)'@[$MS.fld_len(PL_WZOR,'AKT')]
);

_def.define('NAZWA',MS.name(PL_WZOR,'NAZWA'),0,,
   MS.name(PL_WZOR,'NAZWA')+' '+'(max. %1 znaków)'@[$MS.fld_len(PL_WZOR,'NAZWA')]
);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
PL_WZOR.prefix();
{? _validate.ACTION='add'
|| PL_WZOR.blank();
   PL_WZOR.LP:=_obj.LP;
   PL_WZOR.NAZWA:=_obj.NAZWA;
   PL_WZOR.AKT:=_obj.AKT
?};
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.LP.VALUE:=PL_WZOR.LP;
_table.AKT.VALUE:=PL_WZOR.AKT;
_table.NAZWA.VALUE:=PL_WZOR.NAZWA;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

:: Ostrzeżenia
_max:=MS.fld_len(PL_WZOR,'NAZWA');
{? +_obj.NAZWA>_max
|| _result.msg_length('NAZWA',_max)
?};

:: OK
{? _result.RESULT>0
|| PL_WZOR.index('NAZWA');
   PL_WZOR.prefix(_obj.NAZWA,);
   {? PL_WZOR.first()
   ||
::    Nie ma co poprawiać
      ~~
   || _result.ACTION:='add';
      exec('record','xls_pl_wzor',_obj,_mode,_result);
      {? exec('chk_pl_wzor','po_param',0)<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=PL_WZOR.add(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.msg_insert('NAZWA')
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,
   'NAZWA','STRING[15]','Nazwa'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'NAZWA',,);

PL_WZOR.cntx_psh();
PL_WZOR.index('LP');
PL_WZOR.prefix();
{? PL_WZOR.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$PL_WZOR.ref();
      _selected.prefix($PL_WZOR.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.NAZWA:=PL_WZOR.NAZWA;
      _tab.add();
      PL_WZOR.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'NAZWA',15,'Wybór widoków planu operacyjnego do eksportu'@);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
PL_WZOR.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 618df260137b629446de45baf55a527ae703ad7ee5767c8bb446d73618254a9f183d47a0ca7365fa7ac5aa4962f4cff47111034b8c9c1782b3a4fc32858d9f19a67d648125182d33d8f1a14b83595505e9419dfebfc44ae659c9221f1b15f28b07a406aeb23b20aa72b2b76a5e401176b6ac6d2e107616fc99727fc5cbbcfb3b
