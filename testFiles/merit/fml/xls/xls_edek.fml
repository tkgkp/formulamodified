:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_mbn.fml
:: Utworzony: 05.09.2018
:: Autor: MB
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu modeli danych
::======================================================================================================================


\filename
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Nazwa pliku do eksportu modeli danych
::   WE: _a - obszar
::----------------------------------------------------------------------------------------------------------------------
{? _a='JPK'
|| 'jpk.xlsx'
|| 'edeklaracje_'+(-_a)+'.xlsx'
?}


\funpar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: ID z parametryzatora dla definicji modeli
::----------------------------------------------------------------------------------------------------------------------
{? _a='FKS'
|| 'ZWS_VED_EDEK'
|? _a='PPL'
|| 'ZWS_EDE_SCHE'
|| 'ZWS_JPK_SCHE'
?}


\set_val
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Ustawia zmienne na podstawie obszaru
::   WE: _a - obszar
::----------------------------------------------------------------------------------------------------------------------
{? _a='JPK'
|| BPMN.SYM_DOM:='FKS'; SKID.ISTDEF:='J'
|| BPMN.SYM_DOM:=_a; SKID.ISTDEF:='D'
?}


\edeklaracje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: _a - środowisko eksportu
::       _b - obszar
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
{? _b<>'JPK'
|| _env.init( $('exec(\'VAT_VER\',\'xls_edek\',_a,\''+_b+'\')') )
?};
_env.init( $('exec(\'ISTDEF\',\'xls_edek\',_a,\''+_b+'\')') );
~~


\VAT_VER
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obszar
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='VAT_VER_'+_b;
_def.DOMAIN:=exec('name','#b_domain',_b);
_def.FILE:=exec('filename','xls_edek',_b);
_def.FUNPAR:=exec('funpar','xls_edek',_b);
_def.HIDDEN:='T';
_def.ADD_ROWS:=0;
_def.SHEET:='Wersje edeklaracji=1,1';
_def.NAME:='Wersje edeklaracji';
_def.DESC:='Wersje edeklaracji';
_def.MULTIFIR:='T';

_def.PREFIX:=$('exec(\'set_val\',\'xls_edek\',\''+_b+'\'); VAT_VER.index(\'VER_NR\'); VAT_VER.prefix(BPMN.SYM_DOM)');
_def.TABLE:="VAT_VER";
_def.FIELDS:="exec('VAT_VER_fld','xls_edek',_a)";

_def.BEFORE:=$('exec(\'set_val\',\'xls_edek\',\''+_b+'\'); VAT_VER.cntx_psh()');
_def.AFTER:="VAT_VER.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('VAT_VER_exp','xls_edek',_a,_b)";
_def.VALIDATE:="exec('VAT_VER_valid','xls_edek',_a,_b,_c)";
_def.IMPORT:="exec('VAT_VER_imp','xls_edek',_a,_b,_c)";
~~


\VAT_VER_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('OD','Data',0,,'Data od kiedy obowiązuje wersja deklaracji');
_def.define('NAZWA','Nazwa',0,,'15 znakowy nazwa wersji deklaracji');
_def.define('NR','Numer wersji',0,,'Numer wersji e-deklaracji');
_def.define('NRF','Numer formularza',0,,'Numer wersji formularza papierowego');
_def.define('WIERSZ','Wiersze',0,,'120 znakowy zestaw wiersze elastycznych na deklaracjach');
~~


\VAT_VER_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.OD.VALUE:=VAT_VER.OD;
_table.NAZWA.VALUE:=VAT_VER.NAZWA;
_table.NR.VALUE:=VAT_VER.NR;
_table.NRF.VALUE:=VAT_VER.NRF;
_table.WIERSZ.VALUE:=VAT_VER.WIERSZ;
_result


\VAT_VER_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=0;
{? _table.OD=date(0,0,0) || _fld:='OD'
|? _table.NAZWA='' || _fld:='NAZWA'
|| _fld:=''
?};
{? _fld<>''
|| _result.msg_empty(_fld); return()
?};
{? exec('prfx_rodzaj','xml')*(_table.NAZWA+'|')=0

|| _result.msg_norec('NAZWA'); return()
?};
_nr:=_table.NR;
VAT_VER.index('VER_NR');
VAT_VER.prefix(BPMN.SYM_DOM,_table.NAZWA,_table.NAZWA,_nr);
{? VAT_VER.first()
|| {? _mode=0
   || return()
   || _result.ACTION:='put'
   ?}
|| _result.ACTION:='add'
?};
_result.RESULT:=1;
{? _result.ACTION='add' || VAT_VER.blank(1) ?};
VAT_VER.SYSTEM:=BPMN.SYM_DOM;
VAT_VER.OD:=_table.OD;
VAT_VER.NAZWA:=_table.NAZWA;
VAT_VER.NR:=_nr;
VAT_VER.NRF:=_table.NRF;
VAT_VER.WIERSZ:=_table.WIERSZ;
~~


\VAT_VER_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=VAT_VER.add(1)
   |? _validate.ACTION='put'
   || _result:=VAT_VER.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie wersji edeklaracji nie powiodło się.'@
   || _validate.MSG:='Poprawa wersji edeklaracji nie powiodła się.'@
   ?}
?};
_result


\ISTDEF
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obszar: FKS, PPL
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
exec('set_val','xls_edek',_b);
_def.ID:='ISTDEF_'+_b;
_def.DOMAIN:=exec('name','#b_domain',BPMN.SYM_DOM);
_def.FUNPAR:=exec('funpar','xls_edek',_b);
_def.FILE:=exec('filename','xls_edek',_b);
_typ:={? _b='JPK' || 'JPK' || 'e-deklaracji' ?};
_def.SHEET:='Schematy '+_typ+'=1,1';
_def.NAME:='Schematy '+_typ;
_def.DESC:='Schematy '+_typ;
_def.MULTIFIR:='T';

_def.PREFIX:=$('exec(\'set_val\',\'xls_edek\',\''+_b+'\'); ISTDEF.index(\'VER\'); ISTDEF.prefix(BPMN.SYM_DOM,SKID.ISTDEF)');
_def.TABLE:="ISTDEF";
_def.FIELDS:="exec('ISTDEF_fld','xls_edek',_a)";

_def.BEFORE:=$('exec(\'set_val\',\'xls_edek\',\''+_b+'\'); ISTDEF.cntx_psh();EdekTyp:=exec(\'prfx_rodzaj\',\'xml\')');
_def.AFTER:="ISTDEF.cntx_pop();VAR_DEL.delete('EdekTyp')";
_def.SELECT:=$('exec(\'set_val\',\'xls_edek\',\''+_b+'\'); exec(\'ISTDEF_select\',\'xls_edek\',_a)');

_def.EXPORT:="exec('ISTDEF_exp','xls_edek',_a,_b)";
_def.VALIDATE:="exec('ISTDEF_valid','xls_edek',_a,_b,_c)";
_def.IMPORT:="exec('ISTDEF_imp','xls_edek',_a,_b,_c)";

~~


\ISTDEF_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(4,
   'RODZ','STRING[6]','Typ',
   'VER','STRING[40]','Nazwa',
   'NR','INTEGER','Wersja',
   'DATA','DATE','Data',
   'REF','STRING[16]','ref',
   'SELECTED','STRING[1]','sel'
);

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'RODZ',,);

ISTDEF.cntx_psh();
ISTDEF.index('DATA'); ISTDEF.prefix(BPMN.SYM_DOM,SKID.ISTDEF);
{? ISTDEF.first()
|| {!
   |? _tab.blank(1);
      _tab.RODZ:=ISTDEF.RODZAJ;
      _tab.VER:=ISTDEF.VER;
      _tab.NR:=ISTDEF.NR().NR;
      _tab.DATA:=ISTDEF.DATA;
      _tab.REF:=$ISTDEF.ref();
      _tab.SELECTED:={? _selected.find_key(_tab.REF,) || 'T' || 'N' ?};
      _tab.add();
      ISTDEF.next()
   !}
?};
ISTDEF.cntx_pop();

_result:=exec('select_action','#table',_tab,'RODZ[10],VER[40],'+{? SKID.ISTDEF='D' || 'NR[5],' || '' ?}+'DATA[10]',10,'Wybór schematów do eksportu'@,1);
{? _result>0
||
   _selected.erase();
   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};

_result


\ISTDEF_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('RODZAJ','Typ',0,,'6 znakowy rodzaj deklaracji');
_def.define('VER','Nazwa',0,,'20 znakowa nazwa');
_def.define('XMLNS','Adres schematu XSD',0,,'255 znakowy adres internetowy');
{? SKID.ISTDEF='D'
|| _def.define('NR','Numer wersji',0,,'Numer wersji deklaracji',type_of(1))
?};
_def.define('DATA','Data',0,,'Data, od której obowiazuja struktury e-Deklaracji');
{? SKID.ISTDEF='J'
|| _def.define('R','Odczyt',0,,'Znacznik, czy dostępny odczyt z xml-a')
?};
_def.define('FILE','Nazwa pliku',0,,'Nazwa pliku z definicją schematu',type_of(''));
~~


\ISTDEF_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::       _c - obszar
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.RODZAJ.VALUE:=ISTDEF.RODZAJ;
_table.VER.VALUE:=ISTDEF.VER;
_table.XMLNS.VALUE:=ISTDEF.XMLNS;
{? var_press('NR',_table)>0
|| _table.NR.VALUE:=ISTDEF.NR().NR;    _excel.write_async('VAT_VER_'+BPMN.SYM_DOM,ISTDEF.NR)
?};
_table.DATA.VALUE:=ISTDEF.DATA;
{? var_press('R',_table)>0
|| _table.R.VALUE:=ISTDEF.R
?};
_name:=-ISTDEF.VER+'.txt';
_name:=gsub(_name,'(','');
_name:=gsub(_name,')','');
_name:=gsub(_name,' ','_');
_table.FILE.VALUE:=_name;
exec('edek_exp','xml',{? _excel.DIR_ON_SERVER || '' || '@' ?}+_excel.DIR+'/'+_name);
_result


\ISTDEF_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
:: ~OST: INFEXISTS
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=0;
{? _table.RODZAJ='' || _fld:='RODZAJ'
|? _table.VER='' || _fld:='VER'
|? _table.XMLNS='' || _fld:='XMLNS'
|? _table.FILE='' || _fld:='FILE'
|| _fld:=''
?};
{? _fld<>''
|| _result.msg_empty(_fld); return()
?};
{? EdekTyp*(_table.RODZAJ+'|')=0
|| _result.msg_norec('RODZAJ'); return()
?};
{? var_press('NR',_table)>0
|| VAT_VER.index('VER_NR'); VAT_VER.prefix(BPMN.SYM_DOM,_table.RODZAJ,_table.RODZAJ,_table.NR);
   _nr:={? VAT_VER.first() || VAT_VER.ref() || null ?};
   {? _nr=null
   || _result.msg_norec('NR'); return()
   ?}
|| _nr:=null
?};
_dir:=EXCEL_ENV.DIR;
_file:=_table.FILE;
_prfx:={? EXCEL_ENV.DIR_ON_SERVER || '' || '@' ?};
{? +_file>64
|| _result.MSG:='Za długa nazwa pliku %1.'@[_file]; return()
|? ~fexists(_prfx+_dir+'/'+_file)
|| _result.MSG:='Brak pliku %1 w lokalizacji %2.'@[_file,_dir]; return()
?};
ISTDEF.index('DATA');
ISTDEF.prefix(BPMN.SYM_DOM,SKID.ISTDEF,_table.RODZAJ,_nr,_table.DATA,_table.VER,);
{? ISTDEF.first()
|| return()
|| _result.ACTION:='add'
?};
{? _result.ACTION='add' || ISTDEF.blank() ?};
ISTDEF.SYSTEM:=BPMN.SYM_DOM;
ISTDEF.VER:=_table.VER;
ISTDEF.XMLNS:=_table.XMLNS;
ISTDEF.IST_ISTK:=SKID.ISTDEF;
ISTDEF.RODZAJ:=_table.RODZAJ;
ISTDEF.DATA:=_table.DATA;
ISTDEF.NR:=_nr;
ISTDEF.R:={? var_press('R',_table)>0 || _table.R || 'N' ?};
{? SKID.ISTDEF='D' & exec('ar_dedek','xml',_result.ACTION='add')='' |
   SKID.ISTDEF='J' & exec('ar_jpk_def','jpk',_result.ACTION='add')=''
|| _result.RESULT:=1
?};
~~


\ISTDEF_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| _result:=ISTDEF.add(1)
?};
{? _result
|| _dir:=EXCEL_ENV.DIR;
   _file:=_table.FILE;
   _result:=exec('edek_imp','xml',{? EXCEL_ENV.DIR_ON_SERVER || '' || '@' ?}+_dir+'/'+_file,1)
?};
{? _result=0
|| _validate.MSG:='Dodanie schematu e-deklaracji nie powiodło się.'@
?};
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 c51fae7aa1e27f146a045dfea27bdef768ce14490203cd6351d8fc53ac6f250d82022d5c0da4449600067f22bc4f6de0e224a67e31ae3484ce985013d2719dc975153ee6ea0ac7746ee96b2e518607656b5bfae43aeb63ed6a6410a0fe6224e817d0be2da399ab3f66f6e2429edf810d7e2f7d15faa00a8b9674d50431f61c1e
