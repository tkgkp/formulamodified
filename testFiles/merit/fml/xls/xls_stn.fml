:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_stn.fml
:: Utworzony: 14.08.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu opisów stanowisk
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='STN';
_def.FUNPAR:='ZWS_PAR_PSTN';
_def.DOMAIN:=exec('name','#b_domain','PKD');
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.SHEET:='Stanowiska=1,1';
_def.NAME:='Stanowiska'@;
_def.DESC:='Stanowiska';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="STN";

: prolog
_def.BEFORE:="
   S_ZUS.cntx_psh();
   S_ZUS.prefix();
   SLO_KOD.cntx_psh();
   SLO_KOD.prefix();
   STN.cntx_psh();
   STN.f_clear();
   STN.index('STANONAZ');
   STN.prefix();
   ~~
";

: epilog
_def.AFTER:="
   STN.cntx_pop();
   SLO_KOD.cntx_pop();
   S_ZUS.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('ST',      MS.name(STN,'ST'),      1,,MS.comment(STN,'ST'));
   _env.define('Z',       MS.name(STN,'Z'),       1,,MS.comment(STN,'Z'));
   _env.define('K',       MS.name(STN,'K'),       1,,MS.comment(STN,'K'));
   _env.define('SP',      MS.name(STN,'SP'),      1,,MS.comment(STN,'SP'));
   _env.define('URL_NAUK',MS.name(STN,'URL_NAUK'),1,,MS.comment(STN,'URL_NAUK'));
   _env.define('SLO_KOD', MS.name(STN,'SLO_KOD'), 1,,MS.comment(STN,'SLO_KOD'));
   _env.define('RP',      MS.name(STN,'RP'),      1,,MS.comment(STN,'RP'));
   _env.define('S_ZUS',   MS.name(STN,'S_ZUS'),   1,,MS.comment(STN,'S_ZUS'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.ST.VALUE:=STN.ST;
   _buf.Z.VALUE:=STN.Z;
   _buf.K.VALUE:=STN.K;
   _buf.SP.VALUE:=STN.SP;
   _buf.URL_NAUK.VALUE:=STN.URL_NAUK;
   _buf.SLO_KOD.VALUE:=STN.SLO_KOD().KOD;
   _buf.RP.VALUE:=STN.RP().KOD;
   _buf.S_ZUS.VALUE:=STN.S_ZUS().KOD;
   _env.write_async('SLO_KOD',STN.SLO_KOD);
   _env.write_async('SLO_KOD',STN.RP);
   _env.write_async('S_ZUS',STN.S_ZUS);
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_stn',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_stn',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.ST=''       || 'ST'
   |? _buf.Z=''        || 'Z'
   |? _buf.K=''        || 'K'
   |? _buf.SP=''       || 'SP'
   |? _buf.URL_NAUK='' || 'URL_NAUK'
   |? _buf.SP='T'      || {? _buf.S_ZUS='' || 'S_ZUS'
                          |? _buf.RP=''    || 'RP'
                          || ''
                          ?}
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? ('TN'*_buf.Z)=0
|| _val.msg_inset('Z','T','N');
   _val.RESULT:=0;
   return()

|? ('TN'*_buf.K)=0
|| _val.msg_inset('K','T','N');
   _val.RESULT:=0;
   return()

|? ('TN'*_buf.SP)=0
|| _val.msg_inset('SP','T','N');
   _val.RESULT:=0;
   return()

|? ('TN'*_buf.URL_NAUK)=0
|| _val.msg_inset('URL_NAUK','T','N');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(STN,'ST');
{? +_buf.ST>_max
|| _val.msg_length('ST',_max);
   _buf.ST:=_max+_buf.ST
?};

: weryfikacja spójności referencyjnej
_kod:=null;
{? _buf.SLO_KOD<>''
|| {? (_kod:=exec('kod','ext_slo','STN_TYP',_buf.SLO_KOD))=null
   || _val.msg_norec('SLO_KOD');
      _val.RESULT:=0;
      return()
   ?}
?};
_rp:=null;
{? _buf.RP<>''
|| {? (_rp:=exec('kod','ext_slo','RODZPRAC',_buf.RP))=null
   || _val.msg_norec('RP');
      _val.RESULT:=0;
      return()
   ?}
?};
_zus:=null;
{? _buf.S_ZUS<>''
|| {? ~S_ZUS.find_tab(,'RODZAJ',,'=',_buf.RP,'KOD',,'=',_buf.S_ZUS)
   || _val.msg_norec('S_ZUS');
      _val.RESULT:=0;
      return()
   || _zus:=S_ZUS.ref()
   ?}
?};

_ref:=null;
{? STN.find_tab(,'ST',,'=',_buf.ST)
|| _ref:=STN.ref()
?};

: optymalizacja importu i standaryzacja kodu
_obj:=_val.OBJ:=obj_new('STN','SLO_KOD','RP','S_ZUS','to_str');
_obj.to_str:="'%1'[_a.ST]";
_obj.SLO_KOD:=_kod;
_obj.RP:=_rp;
_obj.S_ZUS:=_zus;
_obj.STN:=_ref;

{? _ref=null
|| _val.ACTION:='add'
|| _val.ACTION:='put'
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~l
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;

_set:="
   _a.ST:=_b.ST;
   _a.Z:=_b.Z;
   _a.K:=_b.K;
   _a.SP:=_b.SP;
   _a.URL_NAUK:=_b.URL_NAUK;
   _a.SLO_KOD:=_c.SLO_KOD;
   _a.RP:=_c.RP;
   _a.S_ZUS:=_c.S_ZUS;
   ~~
";

{? _val.ACTION='put' & _mod
:  włączono tryb nadpisywania
|| {? STN.seek(_obj.STN)
   || _set(STN,_buf,_obj);
      {? ~STN.put(1)
      || _val.msg_update(_obj.to_str(_buf));
         _val.RESULT:=0
      ?}
   || _val.msg_norec(,STN.comment());
      _val.RESULT:=0
   ?}

|? _val.ACTION='add'
:  brak ograniczeń
|| STN.blank();
   _set(STN,_buf,_obj);
   {? ~STN.add(1)
   || _val.msg_insert(_obj.to_str(_buf));
      _val.RESULT:=0
   ?}
?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 7539ef9719909cff96dfd4d53befdd904dd5bf5d8017971946053adad5f8232aa02c71768c7e3d8b81be11aef2c9a898e2e611f8c5e67e09fec703a602619313ee30ef4c9c6d48b5ce2bb051ce88e54c8c76c6be8d99e3ec7aec77bee051b7cc7f60d663a1d7f52f24bde2caf22ba56ab37adb4313ed2e976e25432c4588dc8a
