:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_xinfo.fml
:: Utworzony: 10.09.2018
:: Autor: JK
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu wartości stałych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::       _b [STRING] - identyfikator
::       _c [STRING] - opis w języku polskim
::       _d [STRING] - symbol dziedziny produktowej
::       _e [STRING] - symbol funkcji parametryzacji
::       _f [STRING] - nazwa pliku
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_def:=_a;
_uid:=-_b;
_txt:=_c;
_dom:=_d;
_fun:=_e;

_def.ID:=~_uid;
_def.FUNPAR:=_fun;
_def.DOMAIN:=exec('name','#b_domain',_dom);
_def.NAME:=_def.env.LANG_PARAMS.translate(_txt);
_def.FILE:={? var_press('_f')=2 || _f || exec('def_kst_xlsx','xls__init')?};
_def.SHEET:='%1=1,1'[_txt];
_def.DESC:=_txt;
_def.ADD_ROWS:=0;

: źródło danych, prolog, epilog
_def.TABLE:=$('exec(\'%1_table\',\'xls_xinfo\',_a)'[_uid]);
_def.TAB_IMP:="KST_WAR";
_def.BEFORE:=$('exec(\'%1_before\',\'xls_xinfo\',_a)'[_uid]);
_def.AFTER:=$('exec(\'%1_after\',\'xls_xinfo\',_a)'[_uid]);

: definicja kolumn, zawartość wiersza
_def.FIELDS:=$(
   '_a.define(\'DATE\',\'Data zmiany\',0);'
   'exec(\'%1_fields\',\'xls_xinfo\',_a)'[_uid]
);
_def.EXPORT:=$(
   '_date:=_a.table().DATE;'
   '_b.DATE.VALUE:=_date;'
   'exec(\'%1_export\',\'xls_xinfo\',_a,_b,_date)'[_uid]
);

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:=$('exec(\'%1_validate\',\'xls_xinfo\',_a,_b,_c)'[_uid]);
_def.IMPORT:=$('exec(\'%1_import\',\'xls_xinfo\',_a,_b,_c,{? _a.DATE<>date(0,0,0) || _a.DATE || null ?})'[_uid]);
~~


\red_hbn_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Zwraca alias tabeli tymczasowej zawierającej daty zmian wybranych stałych systemu (kolumna DATE).
::   WE: _a [INTEGER] - tryb wykonywania formuły
::   WY: alias tabeli
::----------------------------------------------------------------------------------------------------------------------
_TAB:=exec('daty_zmian','#stalesys',,XINFO,
   'SL_RPZ'
);
_TAB


\red_hbn_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Prolog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
SLU.cntx_psh();
SLU.prefix();
~~


\red_hbn_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Epilog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
SLU.cntx_pop();
~~


\red_hbn_fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Definicja kolumn akrusza Excel.
::   WE: _a [OBJECT] - obiekt definiujący pola
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_xls:=_a;
_xls.define('SL_RPZ',MS.name(XINFO,'SL_RPZ'),1,,MS.comment(XINFO,'SL_RPZ'));
~~


\red_hbn_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia tablicę wartościami, które będą zapisane w arkuszu Excel.
::       Użycie: export
::   WE: _a [OBJECT] - środowisko mechanizmu
::       _b [OBJECT] - tablica nazwana z wartościami pól
::       _c [DATA] - data, na którą mają być ustalone wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_env:=_a;
_buf:=_b;
_date:=_c;

: niezbędne podczytanie wartości stałych
exec('czytaj','#stalesys',_date,XINFO);

: wartości stałych do zapisania
_buf.SL_RPZ.VALUE:=XINFO.SL_RPZ().NAZ;

: uzupełnij arkusz o powiązane wiersze
_env.write_async('SLU',XINFO.SL_RPZ);

1


\red_hbn_validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: weryfikacja spójności referencyjnej
{? _buf.SL_RPZ<>''
|| {? SLU.find_tab(,'NAZ',,'=',_buf.SL_RPZ)
   || _slrpz:=SLU.ref()
   || _val.msg_norec('SL_RPZ');
      _val.RESULT:=0;
      return()
   ?}
|| _slrpz:=null
?};


: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',null,
   "'%1'[$_a.DATE]",
   'SL_RPZ',_slrpz
);

~~


\red_hbn_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje stałych na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::       _d [DATA] - data, na którą mają być zapisane wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;
_date:=_d;

: ustaw wartości stałych

{? _buf.SL_RPZ<>''
|| XINFO.SL_RPZ:=_obj.SL_RPZ
|| XINFO.SL_RPZ:=null
?};


: zapisz zmianę stałych z właściwą datą
exec('zapisz','#stalesys',_date,
   XINFO,'SL_RPZ'
);
~~


\dokuwiki_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Zwraca alias tabeli tymczasowej zawierającej daty zmian wybranych stałych systemu (kolumna DATE).
::   WE: _a [INTEGER] - tryb wykonywania formuły
::   WY: alias tabeli
::----------------------------------------------------------------------------------------------------------------------
_TAB:=exec('daty_zmian','#stalesys',,XINFO
   ,'DOKUWIKI'
);
_TAB


\dokuwiki_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Prolog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
~~


\dokuwiki_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Epilog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
~~


\dokuwiki_fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Definicja kolumn akrusza Excel.
::   WE: _a [OBJECT] - obiekt definiujący pola
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_xls:=_a;
_xls.define('DOKUWIKI',   MS.name(XINFO,'DOKUWIKI'),   1,,MS.comment(XINFO,'DOKUWIKI'));
~~


\dokuwiki_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia tablicę wartościami, które będą zapisane w arkuszu Excel.
::       Użycie: export
::   WE: _a [OBJECT] - środowisko mechanizmu
::       _b [OBJECT] - tablica nazwana z wartościami pól
::       _c [DATA] - data, na którą mają być ustalone wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_env:=_a;
_buf:=_b;
_date:=_c;

: niezbędne podczytanie wartości stałych
exec('czytaj','#stalesys',_date,XINFO);

: wartości stałych do zapisania
_buf.DOKUWIKI.VALUE:=XINFO.DOKUWIKI;

1


\dokuwiki_validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',null,
   "'%1'[$_a.DATE]"
);
~~


\dokuwiki_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje stałych na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::       _d [DATA] - data, na którą mają być zapisane wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;
_date:=_d;

: ustaw wartości stałych
XINFO.DOKUWIKI:=_buf.DOKUWIKI;

: zapisz zmianę stałych z właściwą datą
exec('zapisz','#stalesys',_date,XINFO,'DOKUWIKI');
~~


\CONTROL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='CONTROL';
_def.DOMAIN:=exec('name','#b_domain','CTR');
_def.FUNPAR:='ZWS_PAR_OLAP';
_def.FILE:='stale_systemu.xlsx';
_def.SHEET:='Stałe - Controlling=1,1';
_def.NAME:='Stałe - Controlling';
_def.DESC:='Stałe - Controlling';

_def.PREFIX:="K_INFO.index('K_INFO'); K_INFO.prefix()";
_def.TABLE:="K_INFO";
_def.FIELDS:="exec('CONTROL_fld','xls_xinfo',_a)";

_def.BEFORE:="K_INFO.cntx_psh()";
_def.AFTER:="K_INFO.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('CONTROL_exp','xls_xinfo',_a,_b)";
_def.VALIDATE:="exec('CONTROL_valid','xls_xinfo',_a,_b,_c)";
_def.IMPORT:="exec('CONTROL_imp','xls_xinfo',_a,_b,_c)";
~~


\CONTROL_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_xls:=_a;
_xls.define('SQL_PTH',MS.name(K_INFO,'SQL_PTH'),1,,MS.comment(K_INFO,'SQL_PTH'));
_xls.define('OLAP_PTH',MS.name(K_INFO,'OLAP_PTH'),1,,MS.comment(K_INFO,'OLAP_PTH'));
_xls.define('DOMENA',MS.name(K_INFO,'DOMENA'),1,,MS.comment(K_INFO,'DOMENA'));
_xls.define('OLAP_USR',MS.name(K_INFO,'OLAP_USR'),1,,MS.comment(K_INFO,'OLAP_USR'),type_of(0),0);
~~


\CONTROL_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.SQL_PTH.VALUE:=K_INFO.SQL_PTH;
_table.OLAP_PTH.VALUE:=K_INFO.OLAP_PTH;
_table.DOMENA.VALUE:=K_INFO.DOMENA;
_table.OLAP_USR.VALUE:=K_INFO.OLAP_USR;
_result


\CONTROL_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

K_INFO.index('K_INFO'); K_INFO.prefix();
{? K_INFO.first()
|| {? _mode=0
   || _result.RESULT:=0
   || _result.ACTION:='put'
   ?}
|| _result.ACTION:='add'
?};
{? _result.RESULT=1
|| {? _result.ACTION='add' || K_INFO.blank() ?};
   __SQL_PTH:=K_INFO.SQL_PTH;
   __OLAP_PTH:=K_INFO.OLAP_PTH;

   K_INFO.SQL_PTH:=_table.SQL_PTH;
   K_INFO.OLAP_PTH:=_table.OLAP_PTH;
   K_INFO.DOMENA:=_table.DOMENA;
   K_INFO.OLAP_USR:=_table.OLAP_USR;
   {? exec('spr_param','control')<>''
   || _result.RESULT:=0
   ?}
?};
~~


\CONTROL_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=K_INFO.add(1)
   |? _validate.ACTION='put'
   || _result:=K_INFO.put(1)
   ?}
?};
{? _result=0
|| _validate.MSG:='Edycja ustawień serwera OLAP nie powiodła sią.'
?};
_result


\red_del_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Zwraca alias tabeli tymczasowej zawierającej daty zmian wybranych stałych systemu (kolumna DATE).
::   WE: _a [INTEGER] - tryb wykonywania formuły
::   WY: alias tabeli
::----------------------------------------------------------------------------------------------------------------------
_TAB:=exec('daty_zmian','#stalesys',,
   XINFO,'SLU_WYD','SLU_INNY','SLU_CEL','CZY_CEL','BDEKRDEL','KURSTYPD','EDI_DIET',
   'CZY_WYC','DIETA','RYCZ_NOC','RYCZ_KOM','SNIAD','OBIAD','KOLACJA','ZRYCZKOM','ZSNIAD'
);
_TAB


\red_del_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Prolog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
SLU.cntx_psh();
SLU.prefix();
SLO.cntx_psh();
SLO.prefix();
~~


\red_del_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Epilog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_pop();
SLU.cntx_pop();
~~


\red_del_fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Definicja kolumn akrusza Excel.
::   WE: _a [OBJECT] - obiekt definiujący pola
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_xls:=_a;

_xls.define('SLU_WYD',MS.name(XINFO,'SLU_WYD'),1,,MS.comment(XINFO,'SLU_WYD'));
_xls.define('SLU_INNY',MS.name(XINFO,'SLU_INNY'),1,,MS.comment(XINFO,'SLU_INNY'));
_xls.define('SLU_CEL',MS.name(XINFO,'SLU_CEL'),1,,MS.comment(XINFO,'SLU_CEL'));
_xls.define('CZY_CEL',MS.name(XINFO,'CZY_CEL'),1,,MS.comment(XINFO,'CZY_CEL'),type_of(0),0);
_xls.define('BDEKRDEL',MS.name(XINFO,'BDEKRDEL'),1,,MS.comment(XINFO,'BDEKRDEL'));
_xls.define('KURSTYPD',MS.name(XINFO,'KURSTYPD'),1,,MS.comment(XINFO,'KURSTYPD'));
_xls.define('EDI_DIET',MS.name(XINFO,'EDI_DIET'),1,,MS.comment(XINFO,'EDI_DIET'),type_of(0),0);
_xls.define('CZY_WYC',MS.name(XINFO,'CZY_WYC'),1,,MS.comment(XINFO,'CZY_WYC'),type_of(0),0);
_xls.define('DIETA',MS.name(XINFO,'DIETA'),1,,MS.comment(XINFO,'DIETA'),type_of(0),2);
_xls.define('RYCZ_NOC',MS.name(XINFO,'RYCZ_NOC'),1,,MS.comment(XINFO,'RYCZ_NOC'),type_of(0),0);
_xls.define('RYCZ_KOM',MS.name(XINFO,'RYCZ_KOM'),1,,MS.comment(XINFO,'RYCZ_KOM'),type_of(0),0);
_xls.define('SNIAD',MS.name(XINFO,'SNIAD'),1,,MS.comment(XINFO,'SNIAD'),type_of(0),0);
_xls.define('OBIAD',MS.name(XINFO,'OBIAD'),1,,MS.comment(XINFO,'OBIAD'),type_of(0),0);
_xls.define('KOLACJA',MS.name(XINFO,'KOLACJA'),1,,MS.comment(XINFO,'KOLACJA'),type_of(0),0);

_xls.define('ZRYCZKOM',MS.name(XINFO,'ZRYCZKOM'),1,,MS.comment(XINFO,'ZRYCZKOM'),type_of(0),0);
_xls.define('ZSNIAD',MS.name(XINFO,'ZSNIAD'),1,,MS.comment(XINFO,'ZSNIAD'),type_of(0),0);
_xls.define('ZOBIAD',MS.name(XINFO,'ZOBIAD'),1,,MS.comment(XINFO,'ZOBIAD'),type_of(0),0);
_xls.define('ZKOLACJA',MS.name(XINFO,'ZKOLACJA'),1,,MS.comment(XINFO,'ZKOLACJA'),type_of(0),0);
_xls.define('PRC_NOCL',MS.name(XINFO,'PRC_NOCL'),1,,MS.comment(XINFO,'PRC_NOCL'),type_of(0),0);

~~


\red_del_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia tablicę wartościami, które będą zapisane w arkuszu Excel.
::       Użycie: export
::   WE: _a [OBJECT] - środowisko mechanizmu
::       _b [OBJECT] - tablica nazwana z wartościami pól
::       _c [DATA] - data, na którą mają być ustalone wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_env:=_a;
_buf:=_b;
_date:=_c;

: niezbędne podczytanie wartości stałych
exec('czytaj','#stalesys',_date,XINFO);

: wartości stałych do zapisania
_buf.SLU_WYD.VALUE:=XINFO.SLU_WYD().NAZ;
_buf.SLU_INNY.VALUE:=XINFO.SLU_INNY().NAZ;
_buf.SLU_CEL.VALUE:=XINFO.SLU_CEL().NAZ;
_buf.CZY_CEL.VALUE:=XINFO.CZY_CEL;
_buf.BDEKRDEL.VALUE:=XINFO.BDEKRDEL().KOD;
_buf.KURSTYPD.VALUE:=XINFO.KURSTYPD;

_buf.EDI_DIET.VALUE:=XINFO.EDI_DIET;
_buf.CZY_WYC.VALUE:=XINFO.CZY_WYC;
_buf.DIETA.VALUE:=XINFO.DIETA;
_buf.RYCZ_NOC.VALUE:=XINFO.RYCZ_NOC;
_buf.RYCZ_KOM.VALUE:=XINFO.RYCZ_KOM;
_buf.SNIAD.VALUE:=XINFO.SNIAD;
_buf.OBIAD.VALUE:=XINFO.OBIAD;
_buf.KOLACJA.VALUE:=XINFO.KOLACJA;
_buf.ZRYCZKOM.VALUE:=XINFO.ZRYCZKOM;
_buf.ZSNIAD.VALUE:=XINFO.ZSNIAD;
_buf.ZOBIAD.VALUE:=XINFO.ZOBIAD;
_buf.ZKOLACJA.VALUE:=XINFO.ZKOLACJA;
_buf.PRC_NOCL.VALUE:=XINFO.PRC_NOCL;


: uzupełnij arkusz o powiązane wiersze
_env.write_async('SLO',XINFO.BDEKRDEL);
_env.write_async('SLU',XINFO.SLU_WYD);
_env.write_async('SLU',XINFO.SLU_INNY);
_env.write_async('SLU',XINFO.SLU_CEL);
1


\red_del_validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: błędne wartości
{? _buf.DIETA<0
|| _val.msg_range('DIETA',0);
   _val.RESULT:=0;
   return()
|? _buf.RYCZ_NOC<0
|| _val.msg_range('RYCZ_NOC',0);
   _val.RESULT:=0;
   return()
|? _buf.RYCZ_KOM<0
|| _val.msg_range('RYCZ_KOM',0);
   _val.RESULT:=0;
   return()
|? _buf.SNIAD<0 | _buf.SNIAD>100
|| _val.msg_range('SNIAD',0);
   _val.RESULT:=0;
   return()
|? _buf.OBIAD<0 | _buf.OBIAD>100
|| _val.msg_range('OBIAD',0);
   _val.RESULT:=0;
   return()
|? _buf.KOLACJA<0 | _buf.KOLACJA>100
|| _val.msg_range('KOLACJA',0);
   _val.RESULT:=0;
   return()
|? (_buf.SNIAD+_buf.OBIAD+_buf.KOLACJA)>100
|| _val.msg_range('SNIAD+OBIAD+KOLACJA',0);
   _val.RESULT:=0;
   return()
?};

: weryfikacja spójności referencyjnej
{? _buf.BDEKRDEL<>''
|| {? SLO.find_tab(,'KOD',,'=',_buf.BDEKRDEL)
   || _bdekrdel:=SLO.ref()
   || _val.msg_norec('BDEKRDEL');
      _val.RESULT:=0;
      return()
   ?}
|| _bdekrdel:=null
?};

{? _buf.SLU_WYD<>''
|| {? SLU.find_tab(,'NAZ',,'=',_buf.SLU_WYD)
   || _slu_wyd:=SLU.ref()
   || _val.msg_norec('SLU_WYD');
      _val.RESULT:=0;
      return()
   ?}
|| _slu_wyd:=null
?};

{? _buf.SLU_INNY<>''
|| {? SLU.find_tab(,'NAZ',,'=',_buf.SLU_INNY)
   || _slu_inny:=SLU.ref()
   || _val.msg_norec('SLU_INNY');
      _val.RESULT:=0;
      return()
   ?}
|| _slu_inny:=null
?};

{? _buf.SLU_CEL<>''
||
   {? SLU.find_tab(,'NAZ',,'=',_buf.SLU_CEL)
   || _slu_cel:=SLU.ref()
   || _val.msg_norec('SLU_CEL');
      _val.RESULT:=0;
      return()
   ?}
|| _slu_cel:=null
?};
: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',null,
   "'%1'[$_a.DATE]",
   'BDEKRDEL',_bdekrdel,
   'SLU_WYD',_slu_wyd,
   'SLU_INNY',_slu_inny,
   'SLU_CEL',_slu_cel
);

~~


\red_del_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje stałych na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::       _d [DATA] - data, na którą mają być zapisane wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;
_date:=_d;

: ustaw wartości stałych
{? _buf.SLU_WYD<>'' || XINFO.SLU_WYD:=_obj.SLU_WYD || XINFO.SLU_WYD:=null ?};
{? _buf.SLU_INNY<>'' || XINFO.SLU_INNY:=_obj.SLU_INNY || XINFO.SLU_INNY:=null ?};
{? _buf.SLU_CEL<>'' || XINFO.SLU_CEL:=_obj.SLU_CEL || XINFO.SLU_CEL:=null ?};
XINFO.CZY_CEL:=_buf.CZY_CEL;
{? _buf.BDEKRDEL<>'' || XINFO.BDEKRDEL:=_obj.BDEKRDEL || XINFO.BDEKRDEL:=null ?};
XINFO.KURSTYPD:=_buf.KURSTYPD;
XINFO.EDI_DIET:=_buf.EDI_DIET;
XINFO.CZY_WYC:=_buf.CZY_WYC;
XINFO.DIETA:=_buf.DIETA;
XINFO.RYCZ_NOC:=_buf.RYCZ_NOC;
XINFO.RYCZ_KOM:=_buf.RYCZ_KOM;
XINFO.SNIAD:=_buf.SNIAD;
XINFO.OBIAD:=_buf.OBIAD;
XINFO.KOLACJA:=_buf.KOLACJA;
XINFO.ZRYCZKOM:=_buf.ZRYCZKOM;
XINFO.ZSNIAD:=_buf.ZSNIAD;
XINFO.ZOBIAD:=_buf.ZOBIAD;
XINFO.ZKOLACJA:=_buf.ZKOLACJA;
XINFO.PRC_NOCL:=_buf.PRC_NOCL;

: zapisz zmianę stałych z właściwą datą
exec('zapisz','#stalesys',_date,
   XINFO,'SLU_WYD','SLU_INNY','SLU_CEL','CZY_CEL','BDEKRDEL','KURSTYPD','EDI_DIET',
   'CZY_WYC','DIETA','RYCZ_NOC','RYCZ_KOM','SNIAD','OBIAD','KOLACJA','ZRYCZKOM',
   'ZSNIAD','ZOBIAD','ZKOLACJA','PRC_NOCL'
);
~~


\red_fks_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Zwraca alias tabeli tymczasowej zawierającej daty zmian wybranych stałych systemu (kolumna DATE).
::   WE: _a [INTEGER] - tryb wykonywania formuły
::   WY: alias tabeli
::----------------------------------------------------------------------------------------------------------------------
_TAB:=exec('daty_zmian','#stalesys',,
           XINFO,'SLAVAT','SLU_PROJ',
           FINFO,'B_VAT','B_VAT','KURS_TYP','OKRROZ','TODS_DOM','TODS_DOM','TODS_UST','TODS_UST','B_WYDR',
                 'B_WYDR','GRUPYRMK','GRUPYRMP'
          );
_TAB


\red_fks_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Prolog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
SLO.cntx_psh();
SLO.prefix();
SLU.cntx_psh();
SLU.prefix();
~~


\red_fks_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Epilog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
SLU.cntx_pop();
SLO.cntx_pop();
~~


\red_fks_fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Definicja kolumn akrusza Excel.
::   WE: _a [OBJECT] - obiekt definiujący pola
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_xls:=_a;

_xls.define('SLAVAT',MS.name(XINFO,'SLAVAT'),1,,MS.comment(XINFO,'SLAVAT'));
_xls.define('B_VAT',MS.name(FINFO,'B_VAT'),1,,MS.comment(FINFO,'B_VAT'));
_xls.define('KURS_TYP',MS.name(FINFO,'KURS_TYP'),1,,MS.comment(FINFO,'KURS_TYP'));
_xls.define('OKRROZ',MS.name(FINFO,'OKRROZ'),1,,MS.comment(FINFO,'OKRROZ'),type_of(0),0);
_xls.define('GRUPYRMK',MS.name(FINFO,'GRUPYRMK'),1,,MS.comment(FINFO,'GRUPYRMK'));
_xls.define('GRUPYRMP',MS.name(FINFO,'GRUPYRMP'),1,,MS.comment(FINFO,'GRUPYRMP'));
_xls.define('SLU_PROJ',MS.name(XINFO,'SLU_PROJ'),1,,MS.comment(XINFO,'SLU_PROJ'));
_xls.define('TODS_DOM',MS.name(FINFO,'TODS_DOM'),1,,MS.comment(FINFO,'TODS_DOM'));
_xls.define('TODS_UST',MS.name(FINFO,'TODS_UST'),1,,MS.comment(FINFO,'TODS_UST'));
_xls.define('B_WYDR',MS.name(FINFO,'B_WYDR'),1,,MS.comment(FINFO,'B_WYDR'));
~~


\red_fks_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia tablicę wartościami, które będą zapisane w arkuszu Excel.
::       Użycie: export
::   WE: _a [OBJECT] - środowisko mechanizmu
::       _b [OBJECT] - tablica nazwana z wartościami pól
::       _c [DATA] - data, na którą mają być ustalone wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_env:=_a;
_buf:=_b;
_date:=_c;

: niezbędne podczytanie wartości stałych
exec('czytaj','#stalesys',_date,XINFO,FINFO);

: wartości stałych do zapisania

_buf.SLAVAT.VALUE:=XINFO.SLAVAT().NAZ;
_buf.B_VAT.VALUE:=FINFO.B_VAT().KOD;

_buf.KURS_TYP.VALUE:=FINFO.KURS_TYP;
_buf.OKRROZ.VALUE:=FINFO.OKRROZ;

_buf.GRUPYRMK.VALUE:=FINFO.GRUPYRMK().SLU().NAZ;
_buf.GRUPYRMP.VALUE:=FINFO.GRUPYRMP().SLU().NAZ;
_buf.SLU_PROJ.VALUE:=XINFO.SLU_PROJ().NAZ;

_buf.TODS_DOM.VALUE:=FINFO.TODS_DOM().KOD;
_buf.TODS_UST.VALUE:=FINFO.TODS_UST().KOD;
_buf.B_WYDR.VALUE:=FINFO.B_WYDR().KOD;

: uzupełnij arkusz o powiązane wiersze
_env.write_async('SLU',XINFO.SLAVAT);
_env.write_async('SLO',FINFO.B_VAT);
_env.write_async('SLU',XINFO.SLU_PROJ);
_env.write_async('SLO',FINFO.TODS_DOM);
1


\red_fks_validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;


: weryfikacja spójności referencyjnej
{? _buf.SLAVAT<>''
|| {? SLU.find_tab(,'NAZ',,'=',_buf.SLAVAT)
   || _slavat:=SLU.ref()
   || _val.msg_norec('SLAVAT');
      _val.RESULT:=0;
      return()
   ?}
|| _slavat:=null
?};

{? _buf.B_VAT<>''
|| {? SLO.find_tab(,'KOD',,'=',_buf.B_VAT)
   || _bvat:=SLO.ref()
   || _val.msg_norec('B_VAT');
      _val.RESULT:=0;
      return()
   ?}
|| _bvat:=null
?};

{? _buf.SLU_PROJ<>''
|| {? SLU.find_tab(,'NAZ',,'=',_buf.SLU_PROJ)
   || _sluproj:=SLU.ref()
   || _val.msg_norec('SLU_PROJ');
      _val.RESULT:=0;
      return()
   ?}
|| _sluproj:=null
?};

{? _buf.TODS_DOM<>''
|| {? SLO.find_tab(,'KOD',,'=',_buf.TODS_DOM)
   || _todsdom:=SLO.ref()
   || _val.msg_norec('TODS_DOM');
      _val.RESULT:=0;
      return()
   ?}
|| _todsdom:=null
?};

{? _buf.TODS_UST<>''
|| {? SLO.find_tab(,'KOD',,'=',_buf.TODS_UST)
   || _todsust:=SLO.ref()
   || _val.msg_norec('TODS_UST');
      _val.RESULT:=0;
      return()
   ?}
|| _todsust:=null
?};

{? _buf.B_WYDR<>''
|| {? SLO.find_tab(,'KOD',,'=',_buf.B_WYDR)
   || _bwydr:=SLO.ref()
   || _val.msg_norec('B_WYDR');
      _val.RESULT:=0;
      return()
   ?}
|| _bwydr:=null
?};

SLUAPPL.index('NAZ'); SLUAPPL.prefix();
{? _buf.GRUPYRMK<>''
|| {? SLU.find_tab(,'NAZ',,'=',_buf.GRUPYRMK) & SLUAPPL.find_key('F',SLU.NAZ,)
   || _grmk:=SLUAPPL.ref()
   || _val.msg_norec('GRUPYRMK');
      _val.RESULT:=0;
      return()
   ?}
|| _grmk:=null
?};

{? _buf.GRUPYRMP<>''
|| {? SLU.find_tab(,'NAZ',,'=',_buf.GRUPYRMP) & SLUAPPL.find_key('F',SLU.NAZ,)
   || _grmp:=SLUAPPL.ref()
   || _val.msg_norec('GRUPYRMP');
      _val.RESULT:=0;
      return()
   ?}
|| _grmp:=null
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',null,
   "'%1'[$_a.DATE]",
   'SLAVAT',_slavat,
   'B_VAT',_bvat,
   'SLU_PROJ',_sluproj,
   'TODS_DOM',_todsdom,
   'TODS_UST',_todsust,
   'B_WYDR',_bwydr,
   'GRUPYRMK',_grmk,
   'GRUPYRMP',_grmp,
);

~~


\red_fks_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje stałych na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::       _d [DATA] - data, na którą mają być zapisane wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;
_date:=_d;

: ustaw wartości stałych
{? _buf.SLAVAT<>'' || XINFO.SLAVAT:=_obj.SLAVAT || XINFO.SLAVAT:=null ?};
{? _buf.B_VAT<>'' || FINFO.B_VAT:=_obj.B_VAT || FINFO.B_VAT:=null ?};
FINFO.KURS_TYP:=_buf.KURS_TYP;
FINFO.OKRROZ:=_buf.OKRROZ;

FINFO.GRUPYRMK:={? _buf.GRUPYRMK<>'' || _obj.GRUPYRMK || null ?};
FINFO.GRUPYRMP:={? _buf.GRUPYRMP<>'' || _obj.GRUPYRMP || null ?};

{? _buf.SLU_PROJ<>'' || XINFO.SLU_PROJ:=_obj.SLU_PROJ || XINFO.SLU_PROJ:=null ?};
{? _buf.TODS_DOM<>'' || FINFO.TODS_DOM:=_obj.TODS_DOM || FINFO.TODS_DOM:=null ?};
{? _buf.TODS_UST<>'' || FINFO.TODS_UST:=_obj.TODS_UST || FINFO.TODS_UST:=null ?};
{? _buf.B_WYDR<>'' || FINFO.B_WYDR:=_obj.B_WYDR || FINFO.B_WYDR:=null ?};

: zapisz zmianę stałych z właściwą datą
exec('zapisz','#stalesys',_date,
   XINFO,'SLAVAT','SLU_PROJ',
   FINFO,'B_VAT','B_VAT','KURS_TYP','OKRROZ','TODS_DOM','TODS_DOM','TODS_UST','TODS_UST','B_WYDR','B_WYDR','GRUPYRMK','GRUPYRMP'
);
~~

:Sign Version 2.0 jowisz:1028 2019/10/14 09:22:02 33f56a09afa332e8be08c9a7a4d76d9120b4b1c969b1545b98224812bdb33b092369e45fba072745a4ed3217aa95a787f6a1f40335ba9eb33971d58ae1a5764355940328c50762a350c05224db18d394e44bc5fc8d3dbd993763a58b0eeb342285f69798d2281f721de468086dee9bc1c173b5c217b69222ab41650eddf7be92
