:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_px_view.fml
:: Utworzony: 08.08.2018
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu widoków planu strategicznego
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='PX_VIEW';
_def.DOMAIN:=exec('name','#b_domain','TPP');
_def.FUNPAR:='ZWS_PAR_DWID';

_def.FILE:='produkcja_planowanie.xlsx';
_def.SHEET:='Widoki planu strategicznego'@+'=1,1';
_def.NAME:='Widoki planu strategicznego'@;
_def.DESC:='Widoki planu strategicznego'@;

_def.PREFIX:="PX_VIEW.index('SYMBOL'); PL_WZOR.prefix()";
_def.TABLE:="PX_VIEW";
_def.FIELDS:="exec('fields','xls_px_view',_a)";

_def.BEFORE:="PX_VIEW.cntx_psh()";
_def.AFTER:="PX_VIEW.cntx_pop()";
_def.SELECT:="exec('select','xls_px_view',_a)";

_def.EXPORT:="exec('export','xls_px_view',_a,_b)";
_def.VALIDATE:="exec('validate','xls_px_view',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_px_view',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('SYMBOL',MS.name(PX_VIEW,'SYMBOL'),0,,
   MS.name(PX_VIEW,'SYMBOL')+' '+'(max. %1 znaków)'@[$MS.fld_len(PX_VIEW,'SYMBOL')]
);
_def.define('LEVEL',MS.name(PX_VIEW,'LEVEL'),1,,MS.comment(PX_VIEW,'LEVEL'));
_def.define('OFFSET',MS.name(PX_VIEW,'OFFSET'),1,,MS.comment(PX_VIEW,'OFFSET'));
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
PX_VIEW.prefix();
{? _validate.ACTION='add'
|| PX_VIEW.blank();
   PX_VIEW.SYMBOL:=_obj.SYMBOL
?};
PX_VIEW.LEVEL:=_obj.LEVEL;
PX_VIEW.OFFSET:=_obj.OFFSET;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.SYMBOL.VALUE:=PX_VIEW.SYMBOL;
_table.LEVEL.VALUE:=PX_VIEW.LEVEL;
_table.OFFSET.VALUE:=PX_VIEW.OFFSET;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

exec('mainversion_chk','px_ver');

:: Ostrzeżenia
_max:=MS.fld_len(PX_VIEW,'SYMBOL');
{? +_obj.SYMBOL>_max
|| _result.msg_length('SYMBOL',_max)
?};

:: Błędy
{? +_obj.LEVEL=0 | 'RKMTD'*_obj.LEVEL=0
|| _result.msg_inset('LEVEL','R','K','M','T','D');
   _result.RESULT:=0
?};

:: OK
{? _result.RESULT>0
|| PX_VIEW.index('SYMBOL');
   PX_VIEW.prefix(_obj.SYMBOL,);
   {? PX_VIEW.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_px_view',_obj,_mode,_result);
         {? exec('validate','px_view',1)<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_px_view',_obj,_mode,_result);
      {? exec('validate','px_view',0)<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=PX_VIEW.add(1)
   |? _validate.ACTION='put'
   || _result:=PX_VIEW.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie widoku %1 nie powiodło się.'@[$_obj.SYMBOL]
   || _validate.MSG:='Poprawa widoku %1 nie powiodła się.'@[$_obj.SYMBOL]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,
   'SYMBOL','STRING[15]','Symbol'@
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'SYMBOL',,);

PX_VIEW.cntx_psh();
PX_VIEW.index('SYMBOL');
PX_VIEW.prefix();
{? PX_VIEW.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$PX_VIEW.ref();
      _selected.prefix($PX_VIEW.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.SYMBOL:=PX_VIEW.SYMBOL;
      _tab.add();
      PX_VIEW.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'SYMBOL',15,'Wybór widoków planu strategicznego do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
PX_VIEW.cntx_pop();
_result

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:42 2b0de6bc21acd372c6a378950dda90dc047f67436dda5a9fbd03e32cf8101f3f0a57593ef32bcfc4e3297283e523ccbc8dd888c727a13b9da6e4adea3388516a75cdbc96e6dc5a03b2b0a5c019c39dbabd15e54614ff4124e537b342c7b45dc6723068fbd1fa43d36053789f63522a8f756bd5303030dc20f1fc73f00ce152ca
