:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_b_acion.fml
:: Utworzony: 21.11.2018
:: Autor: MW
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu konfiguracji czynności - tylko formuły wdrożeniowe
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='B_ACTION_K1';
_def.DOMAIN:=exec('name','#b_domain','ZPR');
_def.FUNPAR:='';
_def.MULTIFIR:='T';

_def.FILE:='procesy.xlsx';
_def.SHEET:='Czynności - konfig. wspólna'@+'=1,1';
_def.NAME:='Czynności - konfiguracja wspólna'@;
_def.DESC:='Czynności - konfiguracja wspólna'@;

_def.PREFIX:="exec('prefix','xls_b_action')";
_def.TABLE:="exec('table','xls_b_action')";
_def.FIELDS:="exec('fields','xls_b_action',_a)";

_def.BEFORE:="__TASK:=app_info('task');B_ACTION.cntx_psh()";
_def.AFTER:="VAR_DEL.delete('__TASK');B_ACTION.cntx_pop()";
_def.SELECT:="exec('select','xls_b_action',_a)";

_def.EXPORT:="exec('export','xls_b_action',_a,_b)";
_def.VALIDATE:="exec('validate','xls_b_action',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_b_action',_a,_b,_c)";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
B_ACTION.index('UNIK');
B_ACTION.prefix();
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
B_ACTION


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('UID','Identyfikator',1,,'12 znakowy Identyfikator');
_def.define('WDR_DESC','Formuła wdrożeniowa aktywna',1,,'[T]/[N]');
_def.define('FWTODO','Formuła wdrożeniowa',1,,'255 znakowa formuła');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
B_ACTION.prefix();
{? _validate.ACTION='add'
||
   B_ACTION.blank()
?};
B_ACTION.UID:=_obj.UID;
B_ACTION.WDR_DESC:=_obj.WDR_DESC;
B_ACTION.FWTODO:=_obj.FWTODO;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=0;

{? exec('is_def','#b_action',B_ACTION.UID,__TASK)>0
|| _result:=1;
   _table.UID.VALUE:=B_ACTION.UID;
   _table.WDR_DESC.VALUE:=B_ACTION.WDR_DESC;
   {? B_ACTION.WDR_DESC='T' | B_ACTION.WDR_DESC='N'
   || _table.WDR_DESC.VALUE:=B_ACTION.WDR_DESC
   || _table.WDR_DESC.VALUE:='N'
   ?};
   _table.FWTODO.VALUE:=B_ACTION.FWTODO
?};
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

{? (+_obj.UID)>12 || _result.msg_length('UID',12); _result.RESULT:=0 ?};
{? (+_obj.FWTODO)>255 || _result.msg_length('FWTODO',255); _result.RESULT:=0 ?};

B_ACTION.index('UNIK');
B_ACTION.prefix(_obj.UID,);
{? B_ACTION.first()
||
   {? _mode=0
   ||
       _result.RESULT:=0
   ||
      _result.ACTION:='put';
      exec('record','xls_b_action',_obj,_mode,_result)
   ?}
||
  _result.RESULT:=0
:: nie dopisujemy
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      _result:=B_ACTION.add(1)
   |? _validate.ACTION='put'
   ||
      _result:=B_ACTION.put(1)
   ?}
?};
{? _result=0
||

   {? _validate.ACTION='add'
   ||
      _validate.MSG:=''
::      _validate.MSG:='Dodanie konfiguracji czynności "%1" nie powiodło się.'@[_obj.UID]
:: nie dopisujemy
   ||
      _validate.MSG:='Poprawa konfiguracji czynności "%1" nie powiodła się.'@[_obj.UID]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(2,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'UID','STRING[12]','Identyfikator'
   ,'NAME','STRING[30]','Nazwa');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'UID',,);

B_ACTION.cntx_psh();
B_ACTION.index('UNIK');
B_ACTION.prefix();
{? B_ACTION.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$B_ACTION.ref();
      _selected.prefix($B_ACTION.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.UID:=B_ACTION.UID;
      _tab.NAME:=B_ACTION.NAME;
      _tab.add();
      B_ACTION.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'UID,NAME',20,'Wybór czynności do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
B_ACTION.cntx_pop();

_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 0adfabeb5e5d4c0ed422579fe6c635b45c9a097bafa29109534918ddd6309d53ac67773ec56f87e113ae4a2a9d73aa1a2f9c800c93d54086cb7226c251600bdcafee1851a69a2a8069f9b59c8cbcd81f0407c102e9ffa54b09c06d8ed3fff279cac1873a29f0c4cb9dda1f94000f3bbf8e0c5860d0ef777c9ce30e114302a510
