:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_badpar.fml
:: Utworzony: 02.08.2018
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu definicji stanowisk fiskalnych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='FIS';
_def.DOMAIN:=exec('name','#b_domain','LSP');
_def.FUNPAR:='ZWS_FIS_DEF';

_def.FILE:='sprzedaz.xlsx';
_def.SHEET:='Stanowiska fiskalne=1,1';
_def.NAME:='Stanowiska fiskalne'@;
_def.DESC:='Stanowiska fiskalne';

_def.PREFIX:="exec('prefix','xls_fis')";
_def.TABLE:="exec('table','xls_fis')";
_def.FIELDS:="exec('fields','xls_fis',_a)";

_def.BEFORE:="FIS.cntx_psh()";
_def.AFTER:="FIS.cntx_pop()";
_def.SELECT:="exec('select','xls_fis',_a)";

_def.EXPORT:="exec('export','xls_fis',_a,_b)";
_def.IMPORT:="exec('import','xls_fis',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_fis',_a,_b,_c)";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
FIS.index('KOD');
FIS.prefix();
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
FIS


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('KOD','Stanowisko',0,,'Nazwa stanowiska fiskalnego - 20 znaków.');
_def.define('AS','Serwer aplikacji',1,,'Czy serwer aplikacji? (T/N).');
_def.define('PORT','Port',1,,
'(COM1) - COM1
(COM2) - COM2
(COM3) - COM3
(COM4) - COM4
(LPT1) - LPT1
(LPT2) - LPT2
(MDEV) - wpisany w pole mdevice
');
_def.define('MDEV','mdevice',1,,'Port jeżeli wypełniono MDEV - 60 znaków.');
_def.define('MODE','Tryb otwarcia',1,,'Tryb otwarcia.');
_def.define('TYPFISK','Typ drukarki',1,,
'Typ urządzenia:
(thermal) - Posnet thermal
(posnet) - Posnet
(elzab) - Elzab
(torell) - Torell
');
_def.define('K1','Komentarz I',1,,'Komentarz I.');
_def.define('K2','Komentarz II',1,,'Komentarz II.');
_def.define('K3','Komentarz III',1,,'Komentarz III.');
_def.define('A','Stawka VAT A',1,,'Kod stawki VAT A.');
_def.define('B','Stawka VAT B',1,,'Kod stawki VAT B.');
_def.define('C','Stawka VAT C',1,,'Kod stawki VAT C.');
_def.define('D','Stawka VAT D',1,,'Kod stawki VAT D.');
_def.define('E','Stawka VAT E',1,,'Kod stawki VAT E.');
_def.define('F','Stawka VAT F',1,,'Kod stawki VAT F.');
_def.define('ZW','Stawka VAT Zw.',1,,'Kod stawki VAT Zw.');
_def.define('ASKDRPAR','Pytanie o wydruk',1,,'Czy pytanie o drukowanie na drukarce fiskalnej? - (T/N)');
_def.define('HEADER','Nagłówek paragonu',1,,'Tylko POSNET - Nagłówek paragonu');
_def.define('FOOTER','Stopka paragonu',1,,'Tylko POSNET - Linie informacyjne w stopce paragonu');
_def.define('TSAI','Adres IP',1,,'Terminal SIX - Adres IP');
_def.define('TSP','Port terminala',1,,'Terminal SIX - Numer portu terminala');
_def.define('TSNS','Numer sprzedawcy',1,,'Terminal SIX - Numer sprzedawcy przekazywany do terminala');
_def.define('POSFG','Gotówka',1,,'POS - Forma płatności gotówką');
_def.define('POSFK','Karta',1,,'POS - Forma płatności kartą');
_def.define('POSTR','Typ rabatu',1,,
'POS - Typ rabatu w nagłówku:
(P) - procentowy (suma)
(S) - procentowy (kaskadowy)
(K) - kwotowy (od ceny)
');
_def.define('KH_KOD','Domyślny kontrahent',1,,'POS - Kod domyślnego kontrahenta');
_def.define('POSTD','Typ dokumentu',1,,'POS - Typ dokumentu sprzedaży');
_def.define('POSWAL','Waluta handlowa',1,,'POS - Kod waluty handlowej');
_def.define('TSTYP','Typ terminala',1,,'POS - Typ terminala: six, polcard');
_def.define('TSCASHBA','Maksymalna kwota cashback',1,,
'POS - Maksymalna kwota jaką użytkownik może wypłacić, 0-wyłączona');
_def.define('POSCZYN','Wpływ na stan magazynowy',1,,'POS - Wpływ na stan magazynow');
_def.define('POSAUTO','Automatyczne wybieranie stanu',1,,'POS - Automatyczne wybieranie stanu');
_def.define('POSPHOTO','Zdjęcie materiału',1,,'POS - Komunikat z potwierdzeniem materiału ze zdjęciem');
_def.define('POSTDW','Wybór typu',1,,'POS - Wybór typu dokumentu bezpośrednio w widoku POSa');
_def.define('POSCNW','Wybór ceny z cennika',1,,'POS - Możliwość wyboru ceny z cennika');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

FIS.index('KOD');
FIS.prefix();
{? _validate.ACTION='add'
||
   FIS.blank();
   FIS.KOD:=_obj.KOD
?};

FIS.AS:=_obj.AS;
FIS.PORT:=_obj.PORT;
FIS.MDEV:=_obj.MDEV;
FIS.MODE:=_obj.MODE;
FIS.TYPFISK:='fis_'+_obj.TYPFISK;
FIS.K1:=_obj.K1;
FIS.K2:=_obj.K2;
FIS.K3:=_obj.K3;
FIS.A:=_validate.OBJ.A;
FIS.B:=_validate.OBJ.B;
FIS.C:=_validate.OBJ.C;
FIS.D:=_validate.OBJ.D;
FIS.E:=_validate.OBJ.E;
FIS.F:=_validate.OBJ.F;
FIS.ZW:=_validate.OBJ.ZW;
FIS.ASKDRPAR:=_obj.ASKDRPAR;
FIS.HEADER:={? _obj.TYPFISK='posnet' || _obj.HEADER || '' ?};
FIS.FOOTER:={? _obj.TYPFISK='posnet' || _obj.FOOTER || '' ?};
FIS.TSAI:=_obj.TSAI;
FIS.TSP:=_obj.TSP;
FIS.TSNS:=_obj.TSNS;
FIS.POSFG:=_validate.OBJ.POSFG;
FIS.POSFK:=_validate.OBJ.POSFK;
FIS.POSTR:=_obj.POSTR;
FIS.KH_KOD:=_obj.KH_KOD;
FIS.POSTD:=_validate.OBJ.POSTD;
FIS.POSWAL:=_validate.OBJ.POSWAL;
{? FIS.KH_KOD<>''
|| _kh:=exec('FindInSet','#table','KH','KOD',FIS.KH_KOD,2,,1);
   {? _kh<>null()
   || FIS.POSDK:=_kh;
      FIS.KH_KOD:=''
   ?}
|? FIS.POSDK<>null()
|| FIS.POSDK:=null()
?};
FIS.TSTYP:=_obj.TSTYP;
FIS.TSCASHBA:=_obj.TSCASHBA;
FIS.POSCZYN:=_obj.POSCZYN;
FIS.POSAUTO:=_obj.POSAUTO;
FIS.POSPHOTO:=_obj.POSPHOTO;
FIS.POSTDW:=_obj.POSTDW;
FIS.POSCNW:=_obj.POSCNW;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.KOD.VALUE:=FIS.KOD;
_table.AS.VALUE:=FIS.AS;
_table.PORT.VALUE:=FIS.PORT;
_table.MDEV.VALUE:=FIS.MDEV;
_table.MODE.VALUE:=FIS.MODE;
_table.TYPFISK.VALUE:=4-FIS.TYPFISK;
_table.K1.VALUE:=FIS.K1;
_table.K2.VALUE:=FIS.K2;
_table.K3.VALUE:=FIS.K3;
_table.A.VALUE:=FIS.A().KOD; _excel.write_async('SLO',FIS.A);
_table.B.VALUE:=FIS.B().KOD; _excel.write_async('SLO',FIS.B);
_table.C.VALUE:=FIS.C().KOD; _excel.write_async('SLO',FIS.C);
_table.D.VALUE:=FIS.D().KOD; _excel.write_async('SLO',FIS.D);
_table.E.VALUE:=FIS.E().KOD; _excel.write_async('SLO',FIS.E);
_table.F.VALUE:=FIS.F().KOD; _excel.write_async('SLO',FIS.F);
_table.ZW.VALUE:=FIS.ZW().KOD; _excel.write_async('SLO',FIS.ZW);
_table.ASKDRPAR.VALUE:=FIS.ASKDRPAR;
_table.HEADER.VALUE:=FIS.HEADER;
_table.FOOTER.VALUE:=FIS.FOOTER;
_table.TSAI.VALUE:=FIS.TSAI;
_table.TSP.VALUE:=FIS.TSP;
_table.TSNS.VALUE:=FIS.TSNS;
_table.POSFG.VALUE:={? FIS.POSFG<>null() || FIS.POSFG().SLU().NAZ+'/'+FIS.POSFG().KOD || '' ?};
_excel.write_async('SLO',FIS.POSFG);
_table.POSFK.VALUE:={? FIS.POSFK<>null() || FIS.POSFK().SLU().NAZ+'/'+FIS.POSFK().KOD || '' ?};
_excel.write_async('SLO',FIS.POSFK);
_table.POSTR.VALUE:=FIS.POSTR;
_table.KH_KOD.VALUE:=FIS.POSDK().KOD;
_table.POSTD.VALUE:=FIS.POSTD().T;  _excel.write_async('TYPYSP',FIS.POSTD);
_table.POSWAL.VALUE:={? FIS.POSWAL<>null() || FIS.POSWAL().SLU().NAZ+'/'+FIS.POSWAL().KOD || '' ?};
_excel.write_async('SLO',FIS.POSWAL);
_table.TSTYP.VALUE:=FIS.TSTYP;
_table.TSCASHBA.VALUE:=FIS.TSCASHBA;
_table.POSCZYN.VALUE:=FIS.POSCZYN;
_table.POSAUTO.VALUE:=FIS.POSAUTO;
_table.POSPHOTO.VALUE:=FIS.POSPHOTO;
_table.POSTDW.VALUE:=FIS.POSTDW;
_table.POSCNW.VALUE:=FIS.POSCNW;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_slusv:=exec('slusv','xls_fis');

_result.RESULT:=1;

{? _slusv=null()
|| _result.MSG:='Brak zdefiniowanego słownika stawek VAT.';
   _result.RESULT:=0
?};
{? (+_obj.KOD)>20 || _result.msg_length('KOD',20); _result.RESULT:=0 ?};
{? (+_obj.AS)<>1 | ~((';TN'*_obj.AS)>1) || _result.msg_inset('AS','T','N'); _result.RESULT:=0 ?};
{? (+_obj.PORT)<>4 | ~((';;COM1;COM2;COM3;COM4;LPT1;LPT2;MDEV;'*(';'+_obj.PORT+';'))>1)
|| _result.msg_inset('PORT','COM1','COM2','COM3','COM4','LPT1','LPT2','MDEV'); _result.RESULT:=0
?};
{? (+_obj.TYPFISK)=0 | ~((';;thermal;posnet;elzab;torell;'*(';'+_obj.TYPFISK+';'))>1)
|| _result.msg_inset('TYPFISK','thermal','posnet','elzab','torell'); _result.RESULT:=0
?};
{? (+_obj.ASKDRPAR)<>1 | ~((';TN'*_obj.ASKDRPAR)>1) || _result.msg_inset('ASKDRPAR','T','N'); _result.RESULT:=0 ?};
{? (+_obj.POSTR)<>1 | ~((';PSK'*_obj.POSTR)>1) || _result.msg_inset('POSTR','P','S','K'); _result.RESULT:=0 ?};
{? (+_obj.KH_KOD)>8 || _result.msg_length('KH_KOD',8); _result.RESULT:=0 ?};

_result.OBJ:=obj_new('A','B','C','D','E','F','ZW','POSFG','POSFK','POSTD','POSWAL');

_res:=0;
_result.OBJ.A:={? _slusv<>null() & +(_obj.A)>0 || _res:=1; exec('FindInSet','#table','SLO','SL',_obj.A,_slusv,,1) || null() ?};
{? _res & _result.OBJ.A=null() || _result.MSG:='Nie znaleziono podanej stawki VAT %1.'@[_obj.A]; _result.RESULT:=0 ?};
_res:=0;
_result.OBJ.B:={? _slusv<>null() & +(_obj.B)>0 || _res:=1; exec('FindInSet','#table','SLO','SL',_obj.B,_slusv,,1) || null() ?};
{? _res & _result.OBJ.B=null() || _result.MSG:='Nie znaleziono podanej stawki VAT %1.'@[_obj.B]; _result.RESULT:=0 ?};
_res:=0;
_result.OBJ.C:={? _slusv<>null() & +(_obj.C)>0 || _res:=1; exec('FindInSet','#table','SLO','SL',_obj.C,_slusv,,1) || null() ?};
{? _res & _result.OBJ.C=null() || _result.MSG:='Nie znaleziono podanej stawki VAT %1.'@[_obj.C]; _result.RESULT:=0 ?};
_res:=0;
_result.OBJ.D:={? _slusv<>null() & +(_obj.D)>0 || _res:=1; exec('FindInSet','#table','SLO','SL',_obj.D,_slusv,,1) || null() ?};
{? _res & _result.OBJ.D=null() || _result.MSG:='Nie znaleziono podanej stawki VAT %1.'@[_obj.D]; _result.RESULT:=0 ?};
_res:=0;
_result.OBJ.E:={? _slusv<>null() & +(_obj.E)>0 || _res:=1; exec('FindInSet','#table','SLO','SL',_obj.E,_slusv,,1) || null() ?};
{? _res & _result.OBJ.E=null() || _result.MSG:='Nie znaleziono podanej stawki VAT %1.'@[_obj.E]; _result.RESULT:=0 ?};
_res:=0;
_result.OBJ.F:={? _slusv<>null() & +(_obj.F)>0 || _res:=1; exec('FindInSet','#table','SLO','SL',_obj.F,_slusv,,1) || null() ?};
{? _res & _result.OBJ.F=null() || _result.MSG:='Nie znaleziono podanej stawki VAT %1.'@[_obj.F]; _result.RESULT:=0 ?};
_res:=0;
_result.OBJ.ZW:={? _slusv<>null() & +(_obj.ZW)>0 || _res:=1; exec('FindInSet','#table','SLO','SL',_obj.ZW,_slusv,,1) || null() ?};
{? _res & _result.OBJ.ZW=null() || _result.MSG:='Nie znaleziono podanej stawki VAT %1.'@[_obj.ZW]; _result.RESULT:=0 ?};

{? _obj.POSFG<>''
|| _wsk:=_obj.POSFG*'/';
   {? ~_wsk
   || _result.MSG:='Niepoprawny zapis płatności gotówką %1. Wymaga użycia separatora \"/\".'@[_obj.POSFG];
      _result.RESULT:=0
   || _slu:=form((_wsk-1)+_obj.POSFG);
      _kod:=form(_wsk-_obj.POSFG);
      _slu:={? _slu<>'' || exec('FindInSet','#table','SLU','NAZ',_slu,,,1) || null() ?};
      {? _slu<>null()
      || {? _kod<>''
         || _result.OBJ.POSFG:=exec('FindInSet','#table','SLO','SL',_kod,_slu,,1);
            {? _result.OBJ.POSFG=null()
            || _result.MSG:='Nie znaleziono płatności gotówką %1.'@[_obj.POSFG];
               _result.RESULT:=0
            ?}
         || _result.MSG:='Nie podano kodu płatności gotówką %1.'@[_obj.POSFG];
            _result.RESULT:=0
         ?}
      || _result.MSG:='Nie znaleziono płatności gotówką %1.'@[_obj.POSFG];
         _result.RESULT:=0
      ?}
   ?}
|| _result.OBJ.POSFG:=null()
?};

{? _obj.POSFK<>''
|| _wsk:=_obj.POSFK*'/';
   {? ~_wsk
   || _result.MSG:='Niepoprawny zapis płatności kartą %1. Wymaga użycia separatora \"/\".'@[_obj.POSFK];
      _result.RESULT:=0
   || _slu:=form((_wsk-1)+_obj.POSFK);
      _kod:=form(_wsk-_obj.POSFK);
      _slu:={? _slu<>'' || exec('FindInSet','#table','SLU','NAZ',_slu,,,1) || null() ?};
      {? _slu<>null()
      || {? _kod<>''
         || _result.OBJ.POSFK:=exec('FindInSet','#table','SLO','SL',_kod,_slu,,1);
            {? _result.OBJ.POSFK=null()
            || _result.MSG:='Nie znaleziono płatności kartą %1.'@[_obj.POSFK];
               _result.RESULT:=0
            ?}
         || _result.MSG:='Nie podano kodu płatności kartą %1.'@[_obj.POSFK];
            _result.RESULT:=0
         ?}
      || _result.MSG:='Nie znaleziono płatności gotówką %1.'@[_obj.POSFK];
         _result.RESULT:=0
      ?}
   ?}
|| _result.OBJ.POSFK:=null()
?};

{? _obj.POSWAL<>''
|| _wsk:=_obj.POSWAL*'/';
   {? ~_wsk
   || _result.MSG:='Niepoprawny zapis waluty handlowej %1. Wymaga użycia separatora \"/\".'@[_obj.POSWAL];
      _result.RESULT:=0
   || _slu:=form((_wsk-1)+_obj.POSWAL);
      _kod:=form(_wsk-_obj.POSWAL);
      _slu:={? _slu<>'' || exec('FindInSet','#table','SLU','NAZ',_slu,,,1) || null() ?};
      {? _slu<>null()
      || {? _kod<>''
         || _result.OBJ.POSWAL:=exec('FindInSet','#table','SLO','SL',_kod,_slu,,1);
            {? _result.OBJ.POSWAL=null()
            || _result.MSG:='Nie znaleziono waluty handlowej %1.'@[_obj.POSWAL];
               _result.RESULT:=0
            ?}
         || _result.MSG:='Nie podano kodu waluty handlowej %1.'@[_obj.POSWAL];
            _result.RESULT:=0
         ?}
      || _result.MSG:='Nie znaleziono waluty handlowej %1.'@[_obj.POSWAL];
         _result.RESULT:=0
      ?}
   ?}
|| _result.OBJ.POSWAL:=null()
?};

_result.OBJ.POSTD:={? _obj.POSTD='' || null() || exec('FindInSet','#table','TYPYSP','TYPYKOD',_obj.POSTD,,,1) ?};
{? _result.OBJ.POSTD<>null() & exec('FindAndGet','#table',TYPYSP,_result.OBJ.POSTD,,"ZAK",'')<>'N'
|| _result.MSG:='Podany typ dokumentu %1 nie jest dokumentem sprzedaży.'@[_obj.POSTD];
   _result.RESULT:=0
?};

{? _result.RESULT=1
||
   FIS.index('KOD');
   FIS.prefix(_obj.KOD,);
   {? FIS.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_fis',_obj,_mode,_result)
      ?}
   || _result.ACTION:='add';
      exec('record','xls_fis',_obj,_mode,_result)
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=FIS.add(1)
   |? _validate.ACTION='put'
   || _result:=FIS.put(1)
   ?}
?};
{? _result=0
|| _validate.MSG:={? _validate.ACTION='add'
                  || 'Dodanie stanowiska fiskalnego %1 nie powiodło się.'@[FIS.KOD]
                  || 'Modyfikacja stanowiska fiskalnego %1 nie powiodła się.'@[FIS.KOD]
                  ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'KOD','STRING[60]','Stanowisko'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'TYPFISK','STRING[20]','Typ drukarki'
   ,'PORT','STRING[4]','Port');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

FIS.cntx_psh();
FIS.index('KOD');
FIS.prefix();
{? FIS.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$FIS.ref();
      _selected.prefix($FIS.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:=FIS.KOD;
      _tab.TYPFISK:=FIS.TYPFISK;
      _tab.PORT:=FIS.PORT;
      _tab.add();
      FIS.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'KOD,TYPFISK,PORT',20,'Wybór stanowisk fiskalnych do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
FIS.cntx_pop();
_result


\slusv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Zwraca słownik tawek VAT
::   WY: SLU.ref() lub null()
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_res:=null();
{? KSTE.KRAJ=null() | INFO.KRAJ=null() || exec('czytaj','#stalesys',,INFO) ?};
{? KSTE.KRAJ<>null
|| _res:=exec('FindInSet','#table','SLU','NAZ','~STAWKI VAT '+KSTE.KRAJ().KOD,,,1)
|| _res:=exec('FindInSet','#table','SLU','NAZ','~STAWKI VAT '+INFO.KRAJ().KOD,,,1)
?};
_res

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 772237f40d389430501249428cd6d485769efa97209b0fb73fc24d3db16570cf5032e37ea11abbbee462c6ec160136d214c174de314f7e8ad99a4396f0338ee00f08b99cc1d34c0e5d3d7f55087f83b44e9c54ae91cdc00ed3ed652eaa2b457905f873cc5542a17e4e73321c8989ebcbc417f49788eb8e4a26d0e1ca70cd2297
