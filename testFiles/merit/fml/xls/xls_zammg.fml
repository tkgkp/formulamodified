:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_zammg.fml
:: Utworzony: 27.07.2018
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu magazyny do realizacji zamówień
::======================================================================================================================


\init_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='ZAMMGZ';
_def.DOMAIN:=exec('name','#b_domain','LSP');
_def.FUNPAR:='ZWS_PAR_LTZM';

_def.FILE:='sprzedaz.xlsx';
_def.SHEET:='Magazyny dla zam.sprzedaży=1,1';
_def.NAME:='Magazyny do realizacji zamówień sprzedaży'@;
_def.DESC:='Magazyny do realizacji zamówień sprzedaży';

_def.PREFIX:="exec('prefix','xls_zammg','Z')";
_def.TABLE:="exec('table','xls_zammg')";
_def.FIELDS:="exec('fields','xls_zammg',_a)";

_def.BEFORE:="USERS_UP.cntx_psh()";
_def.AFTER:="USERS_UP.cntx_pop()";
_def.SELECT:="exec('select','xls_zammg',_a,'Z')";

_def.EXPORT:="exec('export','xls_zammg',_a,_b)";
_def.IMPORT:="exec('import','xls_zammg',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_zammg',_a,_b,_c,'Z')";
~~


\init_w
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='ZAMMGW';
_def.DOMAIN:=exec('name','#b_domain','LMG');
_def.FUNPAR:='ZWS_PAR_LTWM';

_def.FILE:='magazyn.xlsx';
_def.SHEET:='Magazyny dla zam.wewnętrznych=1,1';
_def.NAME:='Magazyny do realizacji zamówień wewnętrznych'@;
_def.DESC:='Magazyny do realizacji zamówień wewnętrznych';

_def.PREFIX:="exec('prefix','xls_zammg','W')";
_def.TABLE:="exec('table','xls_zammg')";
_def.FIELDS:="exec('fields','xls_zammg',_a)";

_def.BEFORE:="USERS_UP.cntx_psh()";
_def.AFTER:="USERS_UP.cntx_pop()";
_def.SELECT:="exec('select','xls_zammg',_a,'W')";

_def.EXPORT:="exec('export','xls_zammg',_a,_b)";
_def.IMPORT:="exec('import','xls_zammg',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_zammg',_a,_b,_c,'W')";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa zakres eksportowanych danych
::   WE: _a - rodzaj zamówień
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
USERS_UP.index('MGNR');
USERS_UP.prefix(null,{? _a='Z' || 'ZAM' || 'ZAW' ?});

~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
USERS_UP


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('MG','Magazyn',0,,'Symbol magazynu: 8 znakowy kod - duże litery.');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::       _d - rodzaj zamówień
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

USERS_UP.index('MGNR');
USERS_UP.prefix(null,{? _d='Z' || 'ZAM' || 'ZAW' ?});

{? _validate.ACTION='add'
|| USERS_UP.blank();
   USERS_UP.USERS:=null();
   USERS_UP.AKR:={? _d='Z' || 'ZAM' || 'ZAW' ?}
?};

USERS_UP.MG:=_validate.OBJ.MG;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.MG.VALUE:=USERS_UP.MG().SYM; _excel.write_async('MG',USERS_UP.MG);
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::       _d - rodzaj zamówień
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('MG');

_result.OBJ.MG:={? _obj.MG='' || null() || exec('FindInSet','#table','MG','MAGAZYNY',_obj.MG,,,1) ?};
{? _result.OBJ.MG=null()
|| _result.MSG:={? _obj.MG=''
                || 'Nie podano magazynu dla uprawnień do zamówień.'@
                || 'Nie znaleziono magazynu %1.'@[_obj.MG]
                ?};
   _result.RESULT:=0
?};

{? _result.RESULT=1
||
   USERS_UP.index('MGS');
   USERS_UP.prefix(null,{? _d='Z' || 'ZAM' || 'ZAW' ?},_obj.MG,);

   {? USERS_UP.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_zammg',_obj,_mode,_result,_d)
      ?}
   || _result.ACTION:='add';
      exec('record','xls_zammg',_obj,_mode,_result,_d)
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=USERS_UP.add(1)
   |? _validate.ACTION='put'
   || _result:=USERS_UP.put(1)
   ?}
?};
{? _result=0
|| _validate.MSG:='Dodanie uprawnień do realizacji zamówień w magazynie %1 nie powiodło się.'@[USERS_UP.MG().SYM]
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::       _b - rodzaj zamówień
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'MG','STRING[8]','Magazyn'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'NAZ','STRING[40]','Nazwa');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'MG',,);

MG.cntx_psh();
USERS_UP.cntx_psh();
USERS_UP.index('MGS');
USERS_UP.prefix(null,{? _b='Z' || 'ZAM' || 'ZAW' ?});

{? USERS_UP.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$USERS_UP.ref();
      _selected.prefix($USERS_UP.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.MG:=USERS_UP.MG().SYM;
      _tab.NAZ:=USERS_UP.MG().NAZ;
      _tab.add();
      USERS_UP.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'MG,NAZ',20,'Wybór magazynów do realizacji zamówień %1'@[{? _b='Z' || 'sprzedaży'@ || 'wewnętrznych'@ ?}],1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
MG.cntx_pop();
USERS_UP.cntx_pop();
_result

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:43 3b5df09cbaba1983343164384d5ac892089c88bb84a407a0f38e7c12aa073bb53dabf43150c771d05a7c0024ded156bddb2bb26b0e53fe959094f92493cd1260e790b083e9287152732c55bef2e83531e4c755e18a7a80801164f34776c00bc2d4a8637cdff27b4c730bdf98e4a00d8cec05f2f0ab36ddaceca6610487906bb4
