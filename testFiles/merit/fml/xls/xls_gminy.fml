:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_gminy.fml
:: Utworzony: 15.01.2019
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu gmin
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_def:=_a;

_def.ID:='GMINY';
_def.FUNPAR:='';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_pak_xlsx','xls__init');
_def.SHEET:='Gminy=1,1';
_def.NAME:='Gminy'@;
_def.DESC:='Gminy';
_def.HIDDEN:='T';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="GMINY";

: prolog
_def.BEFORE:="
   GMINY.cntx_psh();
   GMINY.f_clear();
   GMINY.index('G');
   GMINY.prefix();
   POWIATY.cntx_psh();
   POWIATY.index('WOJEWODZ');
   POWIATY.prefix();
   WOJEWODZ.cntx_psh();
   WOJEWODZ.index('WOJNAZWA');
   WOJEWODZ.prefix();
   ~~
";

: epilog
_def.AFTER:="
   WOJEWODZ.cntx_pop();
   POWIATY.cntx_pop();
   GMINY.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('NAZWA',MS.name(GMINY,'NAZWA'),1,,MS.comment(GMINY,'NAZWA'));
   _env.define('KOD',MS.name(GMINY,'KOD'),1,,MS.comment(GMINY,'KOD'));
   _env.define('POWIAT',MS.name(GMINY,'POWIAT'),1,,MS.comment(GMINY,'POWIAT'));
   _env.define('WOJEWODZ',MS.name(POWIATY,'WOJEWODZ'),1,,MS.comment(POWIATY,'WOJEWODZ'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.NAZWA.VALUE:=GMINY.NAZWA;
   _buf.KOD.VALUE:=GMINY.KOD;
   _buf.POWIAT.VALUE:=GMINY.POWIAT().NAZWA;
   _buf.WOJEWODZ.VALUE:=GMINY.POWIAT().WOJEWODZ().NAZWA;
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_gminy',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_gminy',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.NAZWA=''    || 'NAZWA'
   |? _buf.POWIAT=''   || 'POWIAT'
   |? _buf.WOJEWODZ='' || 'WOJEWODZ'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(GMINY,'NAZWA');
{? +_buf.NAZWA>_max
|| _val.msg_length('NAZWA',_max);
   _buf.NAZWA:=_max+_buf.NAZWA
?};
_max:=MS.fld_len(GMINY,'KOD');
{? +_buf.KOD>_max
|| _val.msg_length('KOD',_max);
   _buf.KOD:=_max+_buf.KOD
?};
_max:=MS.fld_len(POWIATY,'NAZWA');
{? +_buf.POWIAT>_max
|| _val.msg_length('POWIAT',_max);
   _buf.POWIAT:=_max+_buf.POWIAT
?};
_max:=MS.fld_len(WOJEWODZ,'NAZWA');
{? +_buf.WOJEWODZ>_max
|| _val.msg_length('WOJEWODZ',_max);
   _buf.WOJEWODZ:=_max+_buf.WOJEWODZ
?};

: weryfikacja spójności referencyjnej
_wojewodz:=null;
{? ~WOJEWODZ.find_tab(,'NAZWA',,'=',_buf.WOJEWODZ)
|| _val.msg_norec('WOJEWODZ');
   _val.RESULT:=0;
   return()
|| _wojewodz:=WOJEWODZ.ref()
?};
_powiat:=null;
{? ~POWIATY.find_tab(,
      'WOJEWODZ',,'=',_wojewodz,
      'NAZWA',,'=',_buf.POWIAT
   )
|| _val.msg_norec('POWIAT');
   _val.RESULT:=0;
   return()
|| _powiat:=POWIATY.ref()
?};

_ref:=null;
{? GMINY.find_tab(,
      'POWIAT',,'=',_powiat,
      'NAZWA',,'=',_buf.NAZWA
   )
|| _ref:=GMINY.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 (%2, %3)'[_a.NAZWA,_a.POWIAT,_a.WOJEWODZ]",
   'POWIAT',_powiat
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,GMINY,"
   _a.NAZWA:=_b.NAZWA;
   _a.KOD:=_b.KOD;
   _a.POWIAT:=_c.POWIAT;
   ~~
");
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:12 83f1a01ff5d2c5cc10ea2cd9f813f21a879486930a1317d17fcca3c22e0fc99899451747b042403188a753b742c0fe0c229082793705b62996aadcdb9c698eb3976c1475a309c00bcc1bf024fa8118a6ba3418c177128c687354a026efbb764b51d6b7d749b3f2ff30c88ab18a21717ed582224f54cf9bc052e3017365bed1fa
