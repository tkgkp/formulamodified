:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_okro.fml
:: Utworzony: 27.08.2018
:: Autor: AMK
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi windykacji
::======================================================================================================================


\filename
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Nazwa pliku do eksportu okresów
::----------------------------------------------------------------------------------------------------------------------
'windykacja.xlsx'


\SER_DEF
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='SER_DEF';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.FUNPAR:='ZWS_PAR_FRUM';
_def.FILE:=exec('filename','xls_windyk');
_def.SHEET:='Komentarze kor. i umów=1,1';
_def.NAME:='Komentarze korespondencji i umów';
_def.DESC:='Komentarze korespondencji i umów';
_def.MULTIFIR:='T';

_def.PREFIX:="SER_DEF.index('SER_DEFT'); SER_DEF.prefix()";
_def.TABLE:="SER_DEF";
_def.FIELDS:="exec('SER_DEF_fld','xls_windyk',_a)";

_def.BEFORE:="SER_DEF.cntx_psh()";
_def.AFTER:="SER_DEF.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('SER_DEF_exp','xls_windyk',_a,_b)";
_def.VALIDATE:="exec('SER_DEF_valid','xls_windyk',_a,_b,_c)";
_def.IMPORT:="exec('SER_DEF_imp','xls_windyk',_a,_b,_c)";
~~


\SER_DEF_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('T','Typ',1,,'Typ komentarza (Wezwanie, Nota, Potwierdzenie salda, Inne, Umowa)');
_def.define('ST','St',1,,'Stopień wezwania do zapłaty lub typ dla potwierdzenia salda',type_of(0),0);
_def.define('KOD','Kod',1,,'Kod komentarza');
_def.define('OP','Opis',1,,'Opis komentarza (tytuł)');
~~


\SER_DEF_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.T.VALUE:=SER_DEF.T;
_table.ST.VALUE:=SER_DEF.ST;
_table.KOD.VALUE:=SER_DEF.KOD;
_table.OP.VALUE:=SER_DEF.OP;
_result


\SER_DEF_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

{? |_table.T=''
|| _result.MSG:='Nie wprowadzono typu komentarza %1.'@[_table.KOD];
   _result.RESULT:=0
|| SER_KOR.TYP:=(1+_table.T)
?};
{? _result.RESULT & _table.KOD=''
|| _result.MSG:='Nie wprowadzono kodu komentarza.';
   _result.RESULT:=0
?};

{? _result.RESULT
|| SER_DEF.index('SER_DEFT'); SER_DEF.prefix(1+_table.T,_table.KOD,);
   {? SER_DEF.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'; menu_txt(,'Popraw')
      ?}
   || _result.ACTION:='add'; menu_txt(,'Dołącz')
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || SER_DEF.blank() ?};
      SER_DEF.T:=_table.T;
      SER_DEF.ST:=_table.ST;
      SER_DEF.KOD:=_table.KOD;
      SER_DEF.OP:=_table.OP;
      {? exec('aeserdef','rozrach')<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\SER_DEF_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=SER_DEF.add(1)
   |? _validate.ACTION='put'
   || _result:=SER_DEF.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie komentarza korespondencji %1 nie powiodło się.'@[_table.KOD]
   || _validate.MSG:='Poprawa komentarza korespondencji %1 nie powiodła się.'@[_table.KOD]
   ?}
?};
_result


\SER_DEFW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='SER_DEFW';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.FUNPAR:='ZWS_PAR_FRSE';
_def.FILE:=exec('filename','xls_windyk');
_def.SHEET:='Komentarze dla języków=1,1';
_def.NAME:='Komentarze dla języków';
_def.DESC:='Komentarze dla języków';
_def.MULTIFIR:='T';

_def.PREFIX:="SER_DEFW.index('SERDEFW3'); SER_DEFW.prefix()";
_def.TABLE:="SER_DEFW";
_def.FIELDS:="exec('SER_DEFW_fld','xls_windyk',_a)";

_def.BEFORE:="SER_DEFW.cntx_psh()";
_def.AFTER:="SER_DEFW.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('SER_DEFW_exp','xls_windyk',_a,_b)";
_def.VALIDATE:="exec('SER_DEFW_valid','xls_windyk',_a,_b,_c)";
_def.IMPORT:="exec('SER_DEFW_imp','xls_windyk',_a,_b,_c)";
~~


\SER_DEFW_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('T','Typ',1,,'Typ komentarza (Wezwanie, Nota, Potwierdzenie salda, Inne)');
_def.define('KOD','Kod',1,,'Kod komentarza');
_def.define('JEZYK','Język',1,,'Język komentarza');
_def.define('TEKST','Tekst',1,,'Opis dla komentarza w danym języku (notatka)');
~~


\SER_DEFW_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;

_excel.write_async('SER_DEF',SER_DEFW.SER_DEF);
_excel.write_async('SLO',SER_DEFW.JEZYK);
_table.T.VALUE:=SER_DEFW.SER_DEF().T;
_table.KOD.VALUE:=SER_DEF.KOD;
_table.JEZYK.VALUE:=SER_DEFW.JEZYK().KOD;
_table.TEKST.VALUE:=SER_DEFW.memo_txt(,1,'TEKST');

_result


\SER_DEFW_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1; _jezyk:=_ser_def:=null;

{? XINFO.SLJEZYK=0
|| _result.MSG:='Nie zdefiniowano słownika języków.'@;
   _result.RESULT:=0
|| XINFO.SLJEZYK()
?};
{? _result.RESULT & |_table.T=''
|| _result.MSG:='Nie wprowadzono typu komentarza %1.'@[_table.KOD];
   _result.RESULT:=0
|| SER_KOR.TYP:=(1+_table.T)
?};
{? _result.RESULT & _table.KOD=''
|| _result.MSG:='Nie wprowadzono kodu komentarza.'@;
   _result.RESULT:=0
?};
{? _result.RESULT
|| SER_DEF.index('SER_DEFT'); SER_DEF.prefix(_table.T,_table.KOD);
   {? SER_DEF.first()
   || _ser_def:=SER_DEF.ref()
   || _result.MSG:='Nie znaleziono komentarza.'@;
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT & _table.JEZYK=''
|| _result.MSG:='Nie wprowadzono języka komentarza.'@;
   _result.RESULT:=0
?};
{? _result.RESULT
|| SLO.index('SL'); SLO.prefix(XINFO.SLJEZYK,_table.JEZYK,);
   {? SLO.first()
   || _jezyk:=SLO.ref()
   || _result.MSG:='Nie znaleziono w słowniku języka o kodzie: %1.'@[_table.JEZYK];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT
|| SER_DEFW.index('SERDEFW1'); SER_DEFW.prefix(_ser_def,_jezyk);
   {? SER_DEFW.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || SER_DEFW.blank() ?};
      SER_DEFW.SER_DEF:=_ser_def;
      SER_DEFW.JEZYK:=_jezyk
   ?}
?};
~~


\SER_DEFW_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=SER_DEFW.add(1)
   |? _validate.ACTION='put'
   || _result:=SER_DEFW.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie komentarza %1 dla języka %2 nie powiodło się.'@[_table.T,_table.JEZYK]
   || _validate.MSG:='Poprawa komentarza %1 dla języka %2 nie powiodła się.'@[_table.T,_table.JEZYK]
   ?}
|| SER_DEFW.memo_set(_table.TEKST);
   SER_DEFW.memo_put(,'TEKST');
   SER_DEFW.put()
?};
_result


\SER_TM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='SER_TM';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.FUNPAR:='ZWS_PAR_FRST';
_def.FILE:=exec('filename','xls_windyk');
_def.SHEET:='Tryby monitowania=1,1';
_def.NAME:='Tryby monitowania';
_def.DESC:='Tryby monitowania';
_def.MULTIFIR:='T';

_def.PREFIX:="SER_TM.index('KOD'); SER_TM.prefix()";
_def.TABLE:="SER_TM";
_def.FIELDS:="exec('SER_TM_fld','xls_windyk',_a)";

_def.BEFORE:="SER_TM.cntx_psh()";
_def.AFTER:="SER_TM.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('SER_TM_exp','xls_windyk',_a,_b)";
_def.VALIDATE:="exec('SER_TM_valid','xls_windyk',_a,_b,_c)";
_def.IMPORT:="exec('SER_TM_imp','xls_windyk',_a,_b,_c)";
~~


\SER_TM_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('KOD','Kod',1,,'Kod trybu monitowania');
_def.define('OPIS','Opis',1,,'Opis trybu monitowania');
_def.define('ILE','Po terminie',1,,'Ile dni po terminie rozpocząć monitowanie',,0);
_def.define('TYP','Typ trybu monitowania',1,,'Typ trybu monitowania (0 - wg odstępów, 1 - wg dni zwłoki)',,0);
_def.define('ODSTEP','Minimalny odstęp od poprzedniego monitu',1,,'Minimalny odstęp od poprzedniego monitu',,0);
~~


\SER_TM_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.KOD.VALUE:=SER_TM.KOD;
_table.OPIS.VALUE:=SER_TM.OPIS;
_table.ILE.VALUE:=SER_TM.ILE;
_table.TYP.VALUE:=SER_TM.TYP;
_table.ODSTEP.VALUE:=SER_TM.ODSTEP;
_result


\SER_TM_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

{? _table.KOD=''
|| _result.MSG:='Nie wprowadzono kodu trybu monitowania.'@;
   _result.RESULT:=0
?};
{? _result.RESULT
|| SER_TM.index('KOD'); SER_TM.prefix(_table.KOD,_table.KOD);
   {? SER_TM.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || SER_TM.blank() ?};
      SER_TM.KOD:=_table.KOD;
      SER_TM.OPIS:=_table.OPIS;
      SER_TM.ILE:=_table.ILE;
      SER_TM.TYP:=_table.TYP;
      SER_TM.ODSTEP:=_table.ODSTEP;
      {? exec('chk_tm','rozrach_kor')<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\SER_TM_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=SER_TM.add(1)
   |? _validate.ACTION='put'
   || _result:=SER_TM.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie trybu monitowania %1 nie powiodło się.'@[_table.KOD]
   || _validate.MSG:='Poprawa trybu monitowania %1 nie powiodła się.'@[_table.KOD]
   ?}
?};
_result


\SER_TPOZ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='SER_TPOZ';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.FUNPAR:='ZWS_PAR_FRST';
_def.FILE:=exec('filename','xls_windyk');
_def.SHEET:='Poziomy trybów monitowania=1,1';
_def.NAME:='Poziomy trybów monitowania';
_def.DESC:='Poziomy trybów monitowania';
_def.MULTIFIR:='T';

_def.PREFIX:="SER_TPOZ.index('SER_TPOX'); SER_TPOZ.prefix()";
_def.TABLE:="SER_TPOZ";
_def.FIELDS:="exec('SER_TPOZ_fld','xls_windyk',_a)";

_def.BEFORE:="SER_TPOZ.cntx_psh()";
_def.AFTER:="SER_TPOZ.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('SER_TPOZ_exp','xls_windyk',_a,_b)";
_def.VALIDATE:="exec('SER_TPOZ_valid','xls_windyk',_a,_b,_c)";
_def.IMPORT:="exec('SER_TPOZ_imp','xls_windyk',_a,_b,_c)";
~~


\SER_TPOZ_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('SER_TM','Tryb monitowania',1,,'Tryb monitowania');
_def.define('LP','Lp',1,,'Kolejna liczba porządkowa poziomu monitowania w ramach trybu',,0);
_def.define('ILE','Po terminie',1,,'Ile dni po terminie monitować',,0);
_def.define('SER_DEF','Typ monitu',1,,'Wzorzec wezwania do zapłaty');
_def.define('MIN_POZ','Minimalna l. pozycji',1,,'Minimalna liczba pozycji monitu',,0);
_def.define('BL','Typ blokady',1,,'Jaki typ blokowania ustawia generacja monitu (""-brak, "W"arunkowa, "B"ezwarunkowa)');
~~


\SER_TPOZ_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;

_excel.write_async('SER_TM',SER_TPOZ.SER_TM);
_excel.write_async('SER_DEF',SER_TPOZ.SER_DEF);

_table.SER_TM.VALUE:=SER_TPOZ.SER_TM().KOD;
_table.LP.VALUE:=SER_TPOZ.LP;
_table.ILE.VALUE:=SER_TPOZ.ILE;
_table.SER_DEF.VALUE:=SER_TPOZ.SER_DEF().KOD;
_table.MIN_POZ.VALUE:=SER_TPOZ.MIN_POZ;
_table.BL.VALUE:=SER_TPOZ.BL;

_result


\SER_TPOZ_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;

_ser_tm:=_ser_def:=null;
_result.RESULT:=1;
{? _table.SER_TM=''
|| _result.MSG:='Nie wprowadzono kodu trybu monitowania.'@;
   _result.RESULT:=0
?};
{? _result.RESULT
|| SER_TM.index('KOD'); SER_TM.prefix(_table.SER_TM,_table.SER_TM);
   {? SER_TM.first()
   || _ser_tm:=SER_TM.ref()
   || _result.MSG:='Nie znaleziono trybu monitowania: %1.'@[_table.SER_TM];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT & _table.SER_DEF=''
|| _result.MSG:='Nie wprowadzono kodu komentarza wezwania.'@;
   _result.RESULT:=0
?};
{? _result.RESULT
|| SER_DEF.index('SER_DEFT'); SER_DEF.prefix('W',_table.SER_DEF,);
   {? SER_DEF.first()
   || _ser_def:=SER_DEF.ref()
   || _result.MSG:='Nie znaleziono komentarza wezwania o kodzie: %1.'@[_table.SER_DEF];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT & _table.LP<=0
|| _result.MSG:='Nie wprowadzono lp. poziomu trybu monitowania: %1.'@[_table.SER_TM];
   _result.RESULT:=0
?};
{? _result.RESULT
|| SER_TPOZ.index('SER_TPOZ'); SER_TPOZ.prefix(_ser_tm,_table.LP);
   {? SER_TPOZ.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || SER_TPOZ.blank() ?};
      SER_TPOZ.SER_TM:=_ser_tm;
      SER_TPOZ.LP:=_table.LP;
      SER_TPOZ.ILE:=_table.ILE;
      SER_TPOZ.SER_DEF:=_ser_def;
      SER_TPOZ.MIN_POZ:=_table.MIN_POZ;
      SER_TPOZ.BL:=_table.BL
   ?}
?};
~~


\SER_TPOZ_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=SER_TPOZ.add(1)
   |? _validate.ACTION='put'
   || _result:=SER_TPOZ.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie poziomu trybu monitowania %1 nie powiodło się.'@[_table.SER_TM]
   || _validate.MSG:='Poprawa poziomu trybu monitowania %1 nie powiodła się.'@[_table.SER_TM]
   ?}
?};
_result


\SER_WART1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='SER_WART1';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.FUNPAR:='ZWS_PAR_FRST';
_def.FILE:=exec('filename','xls_windyk');
_def.SHEET:='Minimalne wartości monitu=1,1';
_def.NAME:='Minimalne wartości monitu';
_def.DESC:='Minimalne wartości monitu';
_def.MULTIFIR:='T';

_def.PREFIX:="SER_WART.index('SERWART4'); SER_WART.prefix(null)";
_def.TABLE:="SER_WART";
_def.FIELDS:="exec('SER_WART1_fld','xls_windyk',_a)";

_def.BEFORE:="SER_WART.cntx_psh()";
_def.AFTER:="SER_WART.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('SER_WART1_exp','xls_windyk',_a,_b)";
_def.VALIDATE:="exec('SER_WART1_valid','xls_windyk',_a,_b,_c)";
_def.IMPORT:="exec('SER_WART1_imp','xls_windyk',_a,_b,_c)";
~~


\SER_WART1_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('SER_TM','Tryb monitowania',1,,'Tryb monitowania');
_def.define('SER_TPOZ','Lp',1,,'Kolejna liczba porządkowa poziomu monitowania w ramach trybu',type_of(0),0);
_def.define('WAL','Waluta',1,,'Waluta');
_def.define('KW_GR','Kwota',1,,'Kwota graniczna',,2);
~~


\SER_WART1_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;

_excel.write_async('SER_TPOZ',SER_WART.SER_TPOZ);
_excel.write_async('SER_TM',SER_WART.SER_TPOZ().SER_TM);
_excel.write_async('SLO',SER_WART.WAL);
_table.SER_TM.VALUE:=SER_WART.SER_TPOZ().SER_TM().KOD;
_table.SER_TPOZ.VALUE:=SER_WART.SER_TPOZ().LP;
_table.WAL.VALUE:=SER_WART.WAL().KOD;
_table.KW_GR.VALUE:=SER_WART.KW_GR;
_result


\SER_WART1_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;
_ser_tm:=_ser_tpz:=_wal:=null;
{? _table.SER_TM=''
|| _result.MSG:='Nie wprowadzono kodu trybu monitowania.'@;
   _result.RESULT:=0
?};
{? _result.RESULT
|| SER_TM.index('KOD'); SER_TM.prefix(_table.SER_TM,_table.SER_TM);
   {? SER_TM.first()
   || _ser_tm:=SER_TM.ref()
   || _result.MSG:='Nie znaleziono trybu monitowania: %1.'@[_table.SER_TM];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT & _table.SER_TPOZ<=0
|| _result.MSG:='Nie wprowadzono lp. poziomu trybu monitowania: %1.'@[$_table.SER_TPOZ];
   _result.RESULT:=0
?};
{? _result.RESULT
|| SER_TPOZ.index('SER_TPOZ'); SER_TPOZ.prefix(_ser_tm,_table.SER_TPOZ);
   {? SER_TPOZ.first()
   || _ser_tpz:=SER_TPOZ.ref()
   || _result.MSG:='Nie znaleziono poziomu %1 trybu monitowania %2.'@[$_table.SER_TPOZ,_table.SER_TM];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT & ~XINFO.SLWAL
|| _result.MSG:='W systemie brak jest ustawionego słownika walut.'@;
   _result.RESULT:=0
?};
{? _result.RESULT & _table.WAL=''
|| _result.MSG:='Nie wprowadzono kodu waluty poziomu %1 trybu monitowania %2.'@[$_table.SER_TPOZ,_table.SER_TM];
   _result.RESULT:=0
?};
{? _result.RESULT
|| SLO.index('SL'); SLO.prefix(XINFO.SLWAL,_table.WAL,);

   {? SLO.first()
   || _wal:=SLO.ref()
   || _result.MSG:='W słowniku walut nie znaleziono waluty o kodzie %1.'@[_table.WAL];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT
|| SER_WART.index('SERWART1'); SER_WART.prefix(null,_ser_tpz,_wal,0);
   {? SER_WART.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || SER_WART.blank() ?};
      SER_WART.SER_SCH:=null;
      SER_WART.SER_TPOZ:=_ser_tpz;
      SER_WART.WAL:=_wal;
      SER_WART.KW_GR:=_table.KW_GR;
      SER_WART.TYP_TERM:=0
   ?}
?};
~~


\SER_WART1_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=SER_WART.add(1)
   |? _validate.ACTION='put'
   || _result:=SER_WART.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie minimalnej wartości monitu nie powiodło się (poziom %1 tryb %2).'@[$_table.SER_TPOZ,_table.SER_TM]
   || _validate.MSG:='Poprawa minimalnej wartości monitu nie powiodła się (poziom %1 tryb %2).'@[$_table.SER_TPOZ,_table.SER_TM]
   ?}
?};
_result


\SER_SCH
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='SER_SCH';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.FUNPAR:='ZWS_PAR_FRSW';
_def.FILE:=exec('filename','xls_windyk');
_def.SHEET:='Schematy windykacyjne=1,1';
_def.NAME:='Schematy windykacyjne';
_def.DESC:='Schematy windykacyjne';
_def.MULTIFIR:='T';

_def.PREFIX:="SER_SCH.index('KOD'); SER_SCH.prefix()";
_def.TABLE:="SER_SCH";
_def.FIELDS:="exec('SER_SCH_fld','xls_windyk',_a)";

_def.BEFORE:="SER_SCH.cntx_psh()";
_def.AFTER:="SER_SCH.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('SER_SCH_exp','xls_windyk',_a,_b)";
_def.VALIDATE:="exec('SER_SCH_valid','xls_windyk',_a,_b,_c)";
_def.IMPORT:="exec('SER_SCH_imp','xls_windyk',_a,_b,_c)";
~~


\SER_SCH_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('KOD','Kod',1,,'Kod schematu windykacyjnego');
_def.define('OPIS','Opis',1,,'Opis schematu');
_def.define('CZY_MON','Monitować?',1,,'Znacznik, czy generować wezwania do zapłaty (monity)');
_def.define('SER_TM','Tryb monitowania',1,,'Indywidualny tryb monitowania');
_def.define('CZY_BL','Czy blokować?',1,,'Znacznik, czy blokować kontrahenta (T/N)');
_def.define('BL_WAR','Blokada warunkowa',1,,'Zn., jak blokować warunkowo ("F"ormułowo, przez tryb "M"onitow.)');
_def.define('FOR_WAR','Formuła do blokowania warunkowego',1,,'Formuła do ustalenia blokady warunkowej');
_def.define('BL_BWR','Blokada bezwarunkowa',1,,'Znacznik, czy blokować kontrahenta bezwarunkowo ("F"ormułowo, przez tryb "M"onitow.)');
_def.define('FOR_BWR','Formuła do blokowania bezwarunkowego',1,,'Formuła do ustalenia blokady bezwarunkowej');
_def.define('CZY_ODS','Noty odsetkowe?',1,,'Znacznik, czy naliczać odsetki dla kontrahenta w notach odsetkowych (T/N)');
_def.define('CZY_ODS1','Wezwania do zapłaty?',1,,'Znacznik, czy naliczać odsetki dla kontrahenta w wezwaniach (T/N)');
_def.define('ODS','Typ tabeli odsetek',1,,'Indywidualny typ tabeli odsetek');
_def.define('DNI_ODS','Od jakiej ilości dni od terminu płatności',1,,'Od jakiej liczby dni po term. pł. uwzględniać w nocie',type_of(0),0);
_def.define('CZY_ZWPL','Czy zwłoka w płatności',1,,'Znacznik, czy zwłoka w płatnościach elektronicznych (T/N)');
_def.define('ZW_PL','Zwłoka w płatności',1,,'Liczba dni zwłoki w płatnościach elektronicznych',type_of(0),0);
_def.define('ODSPNOTA','Odsetki przed terminem płatności w notach',1,,'Znacznik, czy naliczać odsetki przed terminem w nocie odsetkowych (T/N)',type_of(''));
_def.define('ODSPWEZW','Odsetki przed terminem płatności w wezwaniach',1,,'Znacznik, czy naliczać odsetki przed terminem w wezwaniach do zapłaty (T/N)',type_of(''));
_def.define('RATY_NOT','Uwzględnianie płatności ratalnych w notach',1,,'Znacznik, czy uwzględniać płatności ratalne w nocie odsetkowych (T/N)',type_of(''));
_def.define('RATY_WEZ','Uwzględnianie płatności ratalnych w wezwaniach do zapłaty',1,,'Znacznik, czy uwzględniać płatności ratalne w wezwaniach (T/N)',type_of(''));
~~


\SER_SCH_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;

_excel.write_async('SER_TM',SER_SCH.SER_TM);
_excel.write_async('FORMULA',SER_SCH.FOR_WAR);
_excel.write_async('FORMULA',SER_SCH.FOR_BWR);
_excel.write_async('SLO',SER_SCH.ODS);
_table.KOD.VALUE:=SER_SCH.KOD;
_table.OPIS.VALUE:=SER_SCH.OPIS;
_table.CZY_MON.VALUE:=SER_SCH.CZY_MON;
_table.SER_TM.VALUE:={? SER_SCH.SER_TM || SER_SCH.SER_TM().KOD || '' ?};
_table.CZY_BL.VALUE:=SER_SCH.CZY_BL;
_table.BL_WAR.VALUE:=SER_SCH.BL_WAR;
_table.FOR_WAR.VALUE:={? SER_SCH.FOR_WAR || SER_SCH.FOR_WAR().SKROT || '' ?};
_table.BL_BWR.VALUE:=SER_SCH.BL_BWR;
_table.FOR_BWR.VALUE:={? SER_SCH.FOR_BWR || SER_SCH.FOR_BWR().SKROT || '' ?};
_table.CZY_ODS.VALUE:=SER_SCH.CZY_ODS;
_table.CZY_ODS1.VALUE:=SER_SCH.CZY_ODS1;
_table.ODS.VALUE:={? SER_SCH.ODS || SER_SCH.ODS().KOD || '' ?};
_table.DNI_ODS.VALUE:=SER_SCH.DNI_ODS;
_table.CZY_ZWPL.VALUE:=SER_SCH.CZY_ZWPL;
_table.ZW_PL.VALUE:=SER_SCH.ZW_PL;
_table.ODSPNOTA.VALUE:={? SER_SCH.ODSPNOTA || 'T' || 'N' ?};
_table.ODSPWEZW.VALUE:={? SER_SCH.ODSPWEZW || 'T' || 'N' ?};
_table.RATY_NOT.VALUE:={? SER_SCH.RATY_NOT || 'T' || 'N' ?};
_table.RATY_WEZ.VALUE:={? SER_SCH.RATY_WEZ || 'T' || 'N' ?};
_result


\SER_SCH_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1; _ser_tm:=_ods:=null;

{? _table.KOD=''
|| _result.MSG:='Nie wprowadzono kodu schematu windykacyjnego.'@;
   _result.RESULT:=0
?};
{? _result.RESULT & _table.SER_TM<>''
|| SER_TM.index('KOD'); SER_TM.prefix(_table.SER_TM,_table.SER_TM);
   {? SER_TM.first()
   || _ser_tm:=SER_TM.ref()
   || _result.MSG:='Nie znaleziono trybu monitowania: %1.'@[_table.SER_TM];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT & _table.ODS<>'' & ~FINFO.SL_ODS
|| _result.MSG:='W systemie brak jest ustawionego słownika typów tabel odsetek.'@;
   _result.RESULT:=0
?};
{? _result.RESULT & _table.ODS<>''
|| SLO.index('SL'); SLO.prefix(FINFO.SL_ODS().SLU,_table.ODS,);
   {? SLO.first()
   || _ods:=SLO.ref()
   || _result.MSG:='W systemie brak jest typu tabeli odsetek: %1.'@[_table.ODS];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT
|| SER_SCH.index('KOD'); SER_SCH.prefix(_table.KOD);
   {? SER_SCH.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || SER_SCH.blank(1) ?};
      SER_SCH.KOD:=_table.KOD;
      SER_SCH.OPIS:=_table.OPIS;
      SER_SCH.CZY_MON:=~-_table.CZY_MON;
      SER_SCH.SER_TM:=_ser_tm;
      SER_SCH.CZY_BL:=~-_table.CZY_BL;
      SER_SCH.BL_WAR:=~-_table.BL_WAR;
      SER_SCH.FOR_WAR:=exec('FindInSet','#table','FORMULA','FORMULA4',_table.FOR_WAR,'B',,1);
      SER_SCH.BL_BWR:=~-_table.BL_BWR;
      SER_SCH.FOR_BWR:=exec('FindInSet','#table','FORMULA','FORMULA4',_table.FOR_BWR,'B',,1);
      SER_SCH.CZY_ODS:=~-_table.CZY_ODS;
      SER_SCH.CZY_ODS1:=~-_table.CZY_ODS1;
      SER_SCH.ODS:=_ods;
      SER_SCH.DNI_ODS:=_table.DNI_ODS;
      SER_SCH.CZY_ZWPL:=~-_table.CZY_ZWPL;
      SER_SCH.ZW_PL:=_table.ZW_PL;
      SER_SCH.ODSPNOTA:=(-_table.ODSPNOTA='t');
      SER_SCH.ODSPWEZW:=(-_table.ODSPWEZW='t');
      SER_SCH.RATY_NOT:=(-_table.RATY_NOT='t');
      SER_SCH.RATY_WEZ:=(-_table.RATY_WEZ='t');
      {? exec('chk_sch','!zws_par_frsw')<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\SER_SCH_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=SER_SCH.add(1)
   |? _validate.ACTION='put'
   || _result:=SER_SCH.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie schematu windykacyjnego %1 nie powiodło się.'@[_table.KOD]
   || _validate.MSG:='Poprawa schematu windykacyjnego %1 nie powiodła się.'@[_table.KOD]
   ?}
?};
_result


\SER_WART2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='SER_WART2';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.FUNPAR:='ZWS_PAR_FRST';
_def.FILE:=exec('filename','xls_windyk');
_def.SHEET:='Minimalne kwoty w nocie=1,1';
_def.NAME:='Minimalne kwoty odsetek w nocie';
_def.DESC:='Minimalne kwoty odsetek w nocie dla schematu windykacyjnego';
_def.MULTIFIR:='T';

_def.PREFIX:="SER_WART.index('SERWART5'); SER_WART.prefix(null)";
_def.TABLE:="SER_WART";
_def.FIELDS:="exec('SER_WART2_fld','xls_windyk',_a)";

_def.BEFORE:="SER_WART.cntx_psh()";
_def.AFTER:="SER_WART.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('SER_WART2_exp','xls_windyk',_a,_b)";
_def.VALIDATE:="exec('SER_WART2_valid','xls_windyk',_a,_b,_c)";
_def.IMPORT:="exec('SER_WART2_imp','xls_windyk',_a,_b,_c)";
~~


\SER_WART2_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('KOD','Schemat windykacyjny',1,,'Kod schematu windykacyjnego');
_def.define('WAL','Waluta',1,,'Waluta');
_def.define('KW_GR','Kwota',1,,'Kwota graniczna',,2);
_def.define('PRZEDPO','Przed czy po terminie',1,,'Przed czy po terminie płatności');
~~


\SER_WART2_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;

_excel.write_async('SER_SCH',SER_WART.SER_SCH);
_excel.write_async('SLO',SER_WART.WAL);
_table.KOD.VALUE:=SER_WART.SER_SCH().KOD;
_table.WAL.VALUE:=SER_WART.WAL().KOD;
_table.KW_GR.VALUE:=SER_WART.KW_GR;
_table.PRZEDPO.VALUE:={? SER_WART.TYP_TERM=0 || 'Po' || 'Przed' ?};
_result


\SER_WART2_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;
_ser_sch:=_wal:=null;
{? _table.KOD=''
|| _result.MSG:='Nie wprowadzono kodu schematu windykacyjnego.'@;
   _result.RESULT:=0
?};
{? _result.RESULT
|| SER_SCH.index('KOD'); SER_SCH.prefix(_table.KOD,);
   {? SER_SCH.first()
   || _ser_sch:=SER_SCH.ref()
   || _result.MSG:='Nie znaleziono schematu windykacyjnego: %1.'@[_table.KOD];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT & ~XINFO.SLWAL
|| _result.MSG:='W systemie brak jest ustawionego słownika walut.'@;
   _result.RESULT:=0
?};
{? _result.RESULT & _table.WAL=''
|| _result.MSG:='Nie wprowadzono kodu waluty poziomu %1 trybu monitowania %2.'@[$_table.SER_TPOZ,_table.SER_TM];
   _result.RESULT:=0
?};
{? _result.RESULT
|| SLO.index('SL'); SLO.prefix(XINFO.SLWAL,_table.WAL,);

   {? SLO.first()
   || _wal:=SLO.ref()
   || _result.MSG:='W słowniku walut nie znaleziono waluty o kodzie %1.'@[_table.WAL];
      _result.RESULT:=0
   ?}
?};
_przedpo:={? -_table.PRZEDPO='po' || 0 || 1 ?};
{? _result.RESULT
|| SER_WART.index('SERWART1'); SER_WART.prefix(_ser_sch,null,_wal,_przedpo);
   {? SER_WART.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || SER_WART.blank() ?};
      SER_WART.SER_SCH:=_ser_sch;
      SER_WART.SER_TPOZ:=null;
      SER_WART.WAL:=_wal;
      SER_WART.KW_GR:=_table.KW_GR;
      SER_WART.TYP_TERM:=_przedpo
   ?}
?};
~~


\SER_WART2_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=SER_WART.add(1)
   |? _validate.ACTION='put'
   || _result:=SER_WART.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie minimalnej kwoty odsetek w nocie dla schematu %1 nie powiodło się.'@[_table.KOD]
   || _validate.MSG:='Poprawa minimalnej kwoty odsetek w nocie dla schematu %1 nie powiodła się.'@[_table.KOD]
   ?}
?};
_result


\ODS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='ODS';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.FUNPAR:='ZWS_PAR_FRTO';
_def.FILE:=exec('filename','xls_windyk');
_def.SHEET:='Tabele odsetek=1,1';
_def.NAME:='Tabele odsetek';
_def.DESC:='Tabele odsetek';
_def.MULTIFIR:='T';

_def.PREFIX:="ODS.index('DISP'); ODS.prefix()";
_def.TABLE:="ODS";
_def.FIELDS:="exec('ODS_fld','xls_windyk',_a)";

_def.BEFORE:="ODS.cntx_psh()";
_def.AFTER:="ODS.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('ODS_exp','xls_windyk',_a,_b)";
_def.VALIDATE:="exec('ODS_valid','xls_windyk',_a,_b,_c)";
_def.IMPORT:="exec('ODS_imp','xls_windyk',_a,_b,_c)";
~~


\ODS_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('ZM','Data zmiany',1,,'Data wprowadzenia danej tabeli odsetek (pocz. obowiązywania)');
_def.define('WSK','% roczny',1,,'Wskaźnik roczny odsetek',type_of(0),2);
_def.define('MIAN','Liczba dni',1,,'Mianownik roczny (liczba dni w roku)',type_of(0),0);
_def.define('DWSK','Wskaźnik dzienny',1,,'Wskaźnik dzienny naliczania odsetek',type_of(0),4);
_def.define('TYP','Typ',1,,'Typ tabeli odsetek');
_def.define('WAL','Waluta',1,,'Waluta');
_def.define('WSK_PL','Wskażnik roczny - podmiot leczniczy',1,,'Wskaźnik roczny odsetek dla podmiotów leczniczych',type_of(0),2);
_def.define('DWSK_PL','Wskaźnik dzienny - podmiot leczniczy',1,,'Wskaźnik dzienny naliczania odsetek dla podmiotu leczniczego',type_of(0),4);

~~


\ODS_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_excel.write_async('SLO',ODS.TYP);
_excel.write_async('SLO',ODS.WAL);
_table.ZM.VALUE:=ODS.ZM;
_table.WSK.VALUE:=ODS.WSK;
_table.MIAN.VALUE:=ODS.MIAN;
_table.DWSK.VALUE:=ODS.DWSK;
_table.TYP.VALUE:=ODS.TYP().KOD;
_table.WAL.VALUE:=ODS.WAL().KOD;
_table.WSK_PL.VALUE:=ODS.WSK_PL;
_table.DWSK_PL.VALUE:=ODS.DWSK_PL;

_result


\ODS_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_ods:=_wal:=null;
{? ~FINFO.SL_ODS
|| _result.MSG:='W systemie brak jest ustawionego słownika typów tabel odsetek.'@;
   _result.RESULT:=0
?};
{? _result.RESULT & |_table.TYP=''
|| _result.MSG:='Nie wprowadzono typu tabeli odsetek.'@;
   _result.RESULT:=0
?};
{? _result.RESULT & _table.TYP<>''
|| SLO.index('SL'); SLO.prefix(FINFO.SL_ODS().SLU,_table.TYP,);
   {? SLO.first()
   || _ods:=SLO.ref()
   || _result.MSG:='W systemie brak jest typu tabeli odsetek: %1.'@[_table.TYP];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT & ~XINFO.SLWAL
|| _result.MSG:='W systemie brak jest ustawionego słownika walut.'@;
   _result.RESULT:=0
?};
{? _result.RESULT & _table.WAL=''
|| _result.MSG:='Nie wprowadzono kodu waluty tabeli odsetek: %1.'@[_table.TYP];
   _result.RESULT:=0
?};
{? _result.RESULT
|| SLO.index('SL'); SLO.prefix(XINFO.SLWAL,_table.WAL,);

   {? SLO.first()
   || _wal:=SLO.ref()
   || _result.MSG:='W słowniku walut nie znaleziono waluty o kodzie %1.'@[_table.WAL];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT & _table.ZM=date(0,0,0)
|| _result.MSG:='Data zmiany tabeli odsetek %1 nie może być zerowa.'@[_table.TYP];
   _result.RESULT:=0
?};

{? _result.RESULT
|| ODS.index('DATA'); ODS.prefix(_ods,_wal,_table.ZM);
   {? ODS.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'; menu_txt(,'Popraw')
      ?}
   || _result.ACTION:='add'; menu_txt(,'Dołącz')
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || ODS.blank() ?};
      ODS.ZM:=_table.ZM;
      ODS.WSK:=_table.WSK$2;
      ODS.MIAN:=_table.MIAN$0;
      ODS.DWSK:=_table.DWSK$4;
      ODS.TYP:=_ods;
      ODS.WAL:=_wal;
      ODS.WSK_PL:=_table.WSK_PL$2;
      ODS.DWSK_PL:=_table.DWSK_PL$4;
      {? exec('spr_ods','!zws_par_frto')<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\ODS_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=ODS.add(1)
   |? _validate.ACTION='put'
   || _result:=ODS.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie tabeli odsetek %1 nie powiodło się.'@[_table.TYP]
   || _validate.MSG:='Poprawa tabeli odsetek %1 nie powiodła się.'@[_table.TYP]
   ?}
?};
_result


\ZDARZT
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='ZDARZT';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_PAR_KKKA';
_def.FILE:=exec('filename','xls_cd_kh');
_def.SHEET:='Typy kontaktów z kontrahentami=1,1';
_def.NAME:='Typy kontaktów z kontrahentami';
_def.DESC:='Typy kontaktów z kontrahentami';
_def.MULTIFIR:='T';

_def.PREFIX:="ZDARZT.index('ZDARZT'); ZDARZT.prefix('N')";
_def.TABLE:="ZDARZT";
_def.FIELDS:="exec('ZDARZT_fld','xls_windyk',_a)";

_def.BEFORE:="ZDARZT.cntx_psh()";
_def.AFTER:="ZDARZT.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('ZDARZT_exp','xls_windyk',_a,_b)";
_def.VALIDATE:="exec('ZDARZT_valid','xls_windyk',_a,_b,_c)";
_def.IMPORT:="exec('ZDARZT_imp','xls_windyk',_a,_b,_c)";
~~


\ZDARZT_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('ZDARZ','Nazwa',1,,'Nazwa');
_def.define('RODZINF','Rodzaj zdarzenia',1,,'Rodzaj zdarzenia: Dokument prosty lub Dokument definiowalny');
_def.define('ICON','Ikona',1,,'Ikona');
_def.define('RODZ','Sposób kontaktu',1,,'Sposób kontaktu: Mail, Pismo, Spotkanie, Telefon, Inny');
_def.define('RODZAJ_K','Rodzaj kontaktu',1,,'Rodzaj kontaktu: (W) Wychodzący, (P) Przychodzący, (N) Wewnętrzny, () Nieokreślony');
_def.define('SLIMVAT','Umowa SLIM VAT',1,,'1 znakowy T lub N');
_def.define('WYB_DAT','Wprowadzanie zakresu dat',1,,'');
_def.define('WYB_OSK','Wybór osoby kontaktowej',1,,'');
~~


\ZDARZT_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.ZDARZ.VALUE:=ZDARZT.ZDARZ;
_table.RODZINF.VALUE:=ZDARZT.RODZINF().NAZ;
_table.ICON.VALUE:=ZDARZT.ICON;
_table.RODZ.VALUE:=ZDARZT.RODZ;
_table.RODZAJ_K.VALUE:=ZDARZT.RODZAJ_K;
_table.SLIMVAT.VALUE:=ZDARZT.SLIMVAT;
_table.WYB_DAT.VALUE:=ZDARZT.WYB_DAT;
_table.WYB_OSK.VALUE:=ZDARZT.WYB_OSK;
_result


\ZDARZT_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
OBIEGI.TYP_ID:='K';

exec('rodzinf_add','!zws_par_kkka');

_result.RESULT:=1;


{? _table.ZDARZ=''
|| _result.MSG:='Nie wprowadzono nazwy typu kontaktu z kontrahentem.'@;
   _result.RESULT:=0
?};
{? _result.RESULT
|| ZDARZT.index('ZDARZT'); ZDARZT.prefix('N',_table.ZDARZ,);
   {? ZDARZT.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'; menu_txt(,'Popraw')
      ?}
   || _result.ACTION:='add'; menu_txt(,'Dołącz')
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || ZDARZT.blank() ?};
      ZDARZT.SYS:='N';
      ZDARZT.ZDARZ:=_table.ZDARZ;
      ZDARZT.RODZINF:=exec('FindInSet','#table','RODZINF','UNIK',_table.RODZINF,,,1);
      ZDARZT.ICON:=_table.ICON;
      ZDARZT.RODZ:=_table.RODZ;
      ZDARZT.RODZAJ_K:=_table.RODZAJ_K;
      ZDARZT.SLIMVAT:=_table.SLIMVAT;
      ZDARZT.WYB_DAT:=_table.WYB_DAT;
      ZDARZT.WYB_OSK:=_table.WYB_OSK;
      {? exec('spr_zdarzt','!zws_par_kkka')<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\ZDARZT_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=ZDARZT.add(1)
   |? _validate.ACTION='put'
   || _result:=ZDARZT.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie typu kontaktu z kontrahentem %1 nie powiodło się.'@[_table.ZDARZ]
   || _validate.MSG:='Poprawa typu kontaktu z kontrahentem %1 nie powiodła się.'@[_table.ZDARZ]
   ?}
?};
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 cbddb45ae1e723c9be9f2b6e8a601e16c600bcce8ff95443343891743a7d92ce31fe7b1464849910fe47df3390085f0be0dc3f0190d79c6e19e59ce812a56ca0a793aea40546026399648ac5f675fe6eb6d6aa0224920af9c4a1943b0cae13d4f02696dbcef6d5aefd5a4ae3a5f919391346b21c45a016ce9a1d86e858d11a98
