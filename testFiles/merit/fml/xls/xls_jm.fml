:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_jm.fml
:: Utworzony: 11.07.2018
:: Autor: Mario
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu jednostek miar
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='JM';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_PAR_KDJM';
_def.MULTIFIR:='T';

_def.FILE:='parametryzacja.xlsx';
_def.SHEET:='Jednostki miary=1,1';
_def.NAME:='Jednostki miary'@;
_def.DESC:='Jednostki miary';

_def.PREFIX:="exec('prefix','xls_jm')";
_def.TABLE:="exec('table','xls_jm')";
_def.FIELDS:="exec('fields','xls_jm',_a)";

_def.BEFORE:="JM.cntx_psh()";
_def.AFTER:="JM.cntx_pop()";
_def.SELECT:="exec('select','xls_jm',_a)";

_def.EXPORT:="exec('export','xls_jm',_a,_b)";
_def.VALIDATE:="exec('validate','xls_jm',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_jm',_a,_b,_c)";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
JM.index('KOD');
JM.prefix();
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
JM


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('KOD','Kod',1,,'10 znakowy kod');
_def.define('NAZ','Nazwa',1,,'20 znakowa Nazwa');
_def.define('DOKL','Dokładność',1,,'Domyślna dokładność dla jednostki miary',,0);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
JM.prefix();
{? _validate.ACTION='add'
||
   JM.blank()
?};

JM.KOD:=_obj.KOD;
JM.NAZ:=_obj.NAZ;
JM.DOKL:=_obj.DOKL;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.KOD.VALUE:=JM.KOD;
_table.NAZ.VALUE:=JM.NAZ;
_table.DOKL.VALUE:=JM.DOKL;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

{? (+_obj.KOD)>10 || _result.msg_length('KOD',10); _result.RESULT:=0 ?};
{? _obj.DOKL<-1 || _result.msg_range('DOKL',,-2); _result.RESULT:=0 ?};

JM.index('KOD');
JM.prefix(_obj.KOD,);
{? JM.first()
||
   {? _mode=0
   || _result.RESULT:=0
   ||
      _result.ACTION:='put';
      exec('record','xls_jm',_obj,_mode,_result);
      BEER.JMDOKL:=_obj.DOKL;
      {? exec('chk_jm','jm','put')<>''
      ||
         _result.RESULT:=0
      ?}
   ?}
||
   _result.ACTION:='add';
   exec('record','xls_jm',_obj,_mode,_result);
   BEER.JMDOKL:=_obj.DOKL;
   {? exec('chk_jm','jm','add')<>''
   || _result.RESULT:=0
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      _result:=JM.add(1)
   |? _validate.ACTION='put'
   ||
      _result:=JM.put(1)
   ?}
?};
{? _result=0
||

   {? _validate.ACTION='add'
   ||
      _validate.MSG:='Dodanie jednostki miary o kodzie %1 nie powiodło się.'@[_obj.KOD]
   ||
      _validate.MSG:='Poprawa jednostki miary o kodzie %1 nie powiodła się.'@[_obj.KOD]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(2,'KOD','STRING[20]','Kod'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'NAZ','STRING[20]','Nazwa'
   ,'DOKL','INTEGER','Dokładność');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

JM.cntx_psh();
JM.index('KOD');
JM.prefix();
{? JM.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$JM.ref();
      _selected.prefix($JM.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:=JM.KOD;
      _tab.NAZ:=JM.NAZ;
      _tab.DOKL:=JM.DOKL;
      _tab.add();
      JM.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'KOD,NAZ,DOKL',20,'Wybór jednostek miar do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
JM.cntx_pop();

_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 5689f982a58e7f1f59d8e89b99f8fd8f88ecdd1dfb8893a29abb7f27281e0a76094c212b3b4d073d8e510015bf70d03ad69f8a800a652a65d515a38e4a0e4494749c4ded6436f2918251a1200ab38b0917316c779234b28dc98afda33885f360e8186c33edf4daf656de1f47f74d531571560699e11f53a6be631b83618a5ee5
