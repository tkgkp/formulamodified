:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_twrkzbr.fml
:: Utworzony: 26.07.2018
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu gniazd
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TWRKZBR';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='ZWS_PAR_TZAS';

_def.FILE:='produkcja.xlsx';
_def.SHEET:='Gniazda'@+'=1,1';
_def.NAME:='Gniazda'@;
_def.DESC:='Gniazda produkcyjne'@;

_def.PREFIX:="TWRKZBR.index('SYM'); TWRKZBR.prefix()";
_def.TABLE:="TWRKZBR";
_def.FIELDS:="exec('fields','xls_twrkzbr',_a)";

_def.BEFORE:="TWRKZBR.cntx_psh()";
_def.AFTER:="TWRKZBR.cntx_pop()";
_def.SELECT:="exec('select','xls_twrkzbr',_a)";

_def.EXPORT:="exec('export','xls_twrkzbr',_a,_b)";
_def.VALIDATE:="exec('validate','xls_twrkzbr',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_twrkzbr',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_define:=$(
   '_a.define(_b,'
   '{? var_pres(\'_d\')=type_of(\'\') || _d || exec(\'fldLabel\',\'#field\',TWRKZBR,_b) ?},_c,,'
   '{? var_pres(\'_e\')=type_of(\'\') || _e || exec(\'fldComment\',\'#field\',TWRKZBR,_b) ?})'
);
_define(_def,'SYMBOL',0,,'Symbol (max. 20 znaków)'@);
_define(_def,'NAZWA',1,,'Nazwa (max. 60 znaków)'@);
_define(_def,'WYD',1);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TWRKZBR.prefix();
{? _validate.ACTION='add'
|| TWRKZBR.blank();
   TWRKZBR.SYMBOL:=_obj.SYMBOL
?};
TWRKZBR.NAZWA:=_obj.NAZWA;
TWRKZBR.WYD:=_validate.OBJ.WYD;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.SYMBOL.VALUE:=TWRKZBR.SYMBOL;
_table.NAZWA.VALUE:=TWRKZBR.NAZWA;
_table.WYD.VALUE:=TWRKZBR.WYD().KOD;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('WYD');
_result.OBJ.WYD:=exec('FindInSet','#table','SLO','SL',_obj.WYD,XINFO.SLWYDZIA,"SLO.ref()",1);

:: Ostrzeżenia
{? +_obj.NAZWA>60
|| _result.msg_length('NAZWA',60)
?};
{? +_obj.SYMBOL>20
|| _result.msg_length('SYMBOL',20)
?};

:: Błędy
{? _obj.WYD<>'' & _result.OBJ.WYD=null()
|| _result.msg_norec('WYD');
   _result.RESULT:=0
?};

:: OK
{? _result.RESULT>0
|| TWRKZBR.index('SYM');
   TWRKZBR.prefix(_obj.SYMBOL,);
   {? TWRKZBR.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_twrkzbr',_obj,_mode,_result);
         {? exec('chk_twrkzbr','zasoby',1)<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_twrkzbr',_obj,_mode,_result);
      {? exec('chk_twrkzbr','zasoby',0)<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=TWRKZBR.add(1);
::    Przypisuje kalendarz cząstkowy
      _nazwa:=%255+$TWRKZBR.ref();
      KAL_NAZW.cntx_psh();
      KAL_NAZW.index('KAL_NAZW');
      KAL_NAZW.prefix(exec('ref_firma','ustawienia'));
      {? KAL_NAZW.find_key(_nazwa,_nazwa)
      || TWRKZBR.KAL:=KAL_NAZW.ref();
         TWRKZBR.put()
      || KAL_NAZW.blank();
         KAL_NAZW.NAZWA:=_nazwa;
         KAL_NAZW.CZESC:='T';
         {? KAL_NAZW.add(1)
         || TWRKZBR.KAL:=KAL_NAZW.ref();
            TWRKZBR.put()
         ?}
      ?};
      KAL_NAZW.cntx_pop()
   |? _validate.ACTION='put'
   || _result:=TWRKZBR.put(1)
   ?};
   {? _result>0 & TWRKZBR.KAL=null()
   || R_WZCZ.index('R_WZWND');
      R_WZCZ.prefix(TWRKZBR.name(),TWRKZBR.ref(),'N','N');
      {? ~R_WZCZ.size()
      || exec('dod_kal_czesc','kaledit',TWRKZBR)
      ?}
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie gniazda o kodzie %1 nie powiodło się.'@[_obj.KOD]
   || _validate.MSG:='Poprawa gniazda o kodzie %1 nie powiodła się.'@[_obj.KOD]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,
   'SYMBOL','STRING[20]','Symbol'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'NAZWA','STRING[60]','Nazwa'
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'SYMBOL',,);

TWRKZBR.cntx_psh();
TWRKZBR.index('SYM');
TWRKZBR.prefix();
{? TWRKZBR.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$TWRKZBR.ref();
      _selected.prefix($TWRKZBR.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.SYMBOL:=TWRKZBR.SYMBOL;
      _tab.NAZWA:=TWRKZBR.NAZWA;
      _tab.add();
      TWRKZBR.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'SYMBOL,NAZWA',20,'Wybór gniazd do eksportu'@);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
TWRKZBR.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2021/04/09 15:28:03 b11359761957563f0e6e5d71439b985bc9d1832a0b923a48717c0269d6a45a874e70f8719e341b51125ef6f72be21d1d41e10af189ff050d5c7bca74749324f9ae48d44fb5e4c40916abd73da5f2c7011a90de022f7e4fa3617aab285dc89afb15e397ea48d6fd0a64ab824bc20b53e9eefcb95fb05049c2dc27ce0e8a4b8481
