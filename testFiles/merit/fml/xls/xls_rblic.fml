:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_rblic.fml
:: Utworzony: 30.08.2018
:: Autor: IFZ
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu rachunków bankowych licencjobiorcy
::======================================================================================================================


\filename
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Nazwa pliku do eksportu struktur księgowych
::----------------------------------------------------------------------------------------------------------------------
'licencjobiorca.xlsx'


\SKID_RBK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='SKID_RBK';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('filename','xls_rblic');
_def.SHEET:='Rachunki bankowe licencjobiorcy=1,1';
_def.NAME:='Rachunki bankowe licencjobiorcy';
_def.DESC:='Rachunki bankowe licencjobiorcy';
_def.FUNPAR:='ZWS_PAR_ALIC';

_def.PREFIX:="SKID_RBK.index('TAB'); SKID_RBK.prefix()";
_def.TABLE:="exec('SKID_RBK_tab','xls_rblic',_a)";
_def.TAB_IMP:="SKID_RBK";
_def.FIELDS:="exec('SKID_RBK_fld','xls_rblic',_a)";

_def.BEFORE:="exec('RB','object'); SKID_RBK.cntx_psh()";
_def.AFTER:="SKID_RBK.cntx_pop()";
_def.SELECT:="exec('SKID_RBK_select','xls_rblic',_a)";

_def.EXPORT:="exec('SKID_RBK_exp','xls_rblic',_a,_b)";
_def.VALIDATE:="exec('SKID_RBK_valid','xls_rblic',_a,_b,_c)";
_def.IMPORT:="exec('SKID_RBK_imp','xls_rblic',_a,_b,_c)";
~~


\SKID_RBK_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('N','Numer rachunku bank.',1,,'50 znakowy nr rachunku'@);
_def.define('KOD','Kod księgowy',1,,'8 znakowy kod banku'@);
_def.define('BANK','Bank',1,,'8 znakowy kod banku'@);
_def.define('RD','Rachunek domyślny',1,,'Czy rachunek domyślny? T/N'@);
_def.define('KRAJ','Kraj banku',1,,'2 znakowy kod kraju'@);
_def.define('WAL','Waluta rachunku',1,,'2 lub 3 znakowy kod waluty'@);
_def.define('INNWAL','Płatności w innej walucie',1,,'Czy płatność w innej walucie? T/N'@);
_def.define('RS','Rachunek dla subkont',1,,'Czy rachunek wiodący? T/N'@);
_def.define('NRS','Numer dla subkont',1,,'10 znakowy symbol'@);
_def.define('AKTYWNY','Aktywny',1,,'Czy rachunek aktywny? T/N'@);
_def.define('OPIS','Opis',1,,'255 znakowy opis rachunku bankowego'@);
_def.define('SWIFT','SWIFT',1,,'11 znakowy swift'@);
_def.define('VAT','VAT',1,,'Czy rachunek na VAT? T/N'@);
~~


\SKID_RBK_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Zwraca tabelę do eksportu aktywnych rachunków bankowych licencjobiorcy dla bieżącej firmy
::   WE: _a - tryb pracy: 1-eksport wszystkiego, 2-eksport jednego rekordu
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| sql('select SKID_RBK.REFERENCE as REF, (\':\' || SKID_RBK.IDADD || SKID_RBK.REFERENCE) as UIDREF from SKID_RBK where TAB=\':_a\'',REF.FIRMA().SYMBOL+'INFO')
|| SKID_RBK
?}


\SKID_RBK_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano?'
   ,'BANK','STRING[80]','Oddział prowadzący rachunek'
   ,'N','STRING[50]','Rachunek bankowy'
   ,'KOD','STRING[8]','Kod księgowy');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'BANK',,);

SKID_RBK.cntx_psh();
SKID_RBK.index('TAB');
SKID_RBK.prefix();
{? SKID_RBK.first()
|| {!
   |?
      {? SKID_RBK.TAB=REF.FIRMA().SYMBOL+'INFO'
      || _tab.blank();
         _tab.REF:=$SKID_RBK.ref();
         _selected.prefix($SKID_RBK.ref());
         {? _selected.first()
         || _tab.SELECTED:='T'
         || _tab.SELECTED:='N'
         ?};
         _tab.BANK:=SKID_RBK.BANK().NB;
         _tab.N:=SKID_RBK.N;
         _tab.KOD:=SKID_RBK.KOD;
         _tab.add()
      ?};
      SKID_RBK.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'BANK,N,KOD',30,'Wybór rachunków bankowych licencjobiorcy do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
SKID_RBK.cntx_pop();
_result


\SKID_RBK_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async()l
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_tab:=_excel.table();
_result:=1;
{? _tab=SKID_RBK | SKID_RBK.seek(_tab.REF)
|| _table.N.VALUE:=SKID_RBK.N;
   _table.KOD.VALUE:=SKID_RBK.KOD;
   _table.BANK.VALUE:=SKID_RBK.BANK().NUMER; _excel.write_async('B',SKID_RBK.BANK);
   _table.RD.VALUE:=SKID_RBK.RD;
   _table.KRAJ.VALUE:=SKID_RBK.KRAJ().SYM; _excel.write_async('KRAJE',SKID_RBK.KRAJ);
   _table.WAL.VALUE:=SKID_RBK.WAL().KOD; _excel.write_async('SLO',SKID_RBK.WAL);
   _table.INNWAL.VALUE:=SKID_RBK.INNWAL;
   _table.RS.VALUE:=SKID_RBK.RS;
   _table.NRS.VALUE:=SKID_RBK.NRS;
   _table.AKTYWNY.VALUE:=SKID_RBK.AKTYWNY;
   _table.OPIS.VALUE:=SKID_RBK.OPIS;
   _table.SWIFT.VALUE:=SKID_RBK.SWIFT;
   _table.VAT.VALUE:=SKID_RBK.VAT
?};
_result


\SKID_RBK_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukcml
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=SKID_RBK.add(1)
   |? _validate.ACTION='put'
   || _result:=SKID_RBK.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie rachunku bankowego %1 nie powiodło się.'@[_obj.KOD]
   || _validate.MSG:='Poprawa rachunku bankowego %1 nie powiodła się.'@[_obj.KOD]
   ?}
?};
_result


\SKID_RBK_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;

_fld:=
   {? _table.KRAJ='' || 'KRAJ'
   |? _table.KOD='' || 'KOD'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _result.msg_empty(_fld);
   _result.RESULT:=0;
   return()
?};

_fld:=
   {? _table.VAT<>'' & _table.VAT<>'T' & _table.VAT<>'N' || _fld:='VAT'
   |? _table.INNWAL<>'' & _table.INNWAL<>'T' & _table.INNWAL<>'N' || _fld:='INNWAL'
   |? _table.AKTYWNY<>'' & _table.AKTYWNY<>'T' & _table.AKTYWNY<>'N' || _fld:='AKTYWNY'
   |? _table.RS<>'' & _table.RS<>'T' & _table.RS<>'N' || _fld:='RS'
   |? _table.RD<>'' & _table.RD<>'T' & _table.RD<>'N' || _fld:='RD'
   || ''
   ?};
{? _fld<>''
|| _result.msg_value(_fld,'Dozwolone wartości: niewypełnione pole, T, N.');
   _result.RESULT:=0;
   return()
?};

SKID_RBK.index('TAB');
SKID_RBK.prefix(null,REF.FIRMA().SYMBOL+'INFO',REF.FIRMA().SYMBOL+'INFO',0,null,_table.N,_table.N);
{? SKID_RBK.first()
|| {? _mode=0
   || _result.RESULT:=0
   || _result.ACTION:='put'
   ?}
|| _result.ACTION:='add'
?};
{? _result.RESULT=1
|| {? _result.ACTION='add' || SKID_RBK.blank() ?};
   SKID_RBK.TAB:=REF.FIRMA().SYMBOL+'INFO';
   SKID_RBK.N:=_table.N;
   SKID_RBK.KOD:=_table.KOD;
   SKID_RBK.REF:=0;
   SKID_RBK.BANK:=exec('FindInSet','#table','B','BANKID',_table.BANK,,,1);
   SKID_RBK.RD:=_table.RD;
   SKID_RBK.KRAJ:=exec('FindInSet','#table','KRAJE','KRAJE',_table.KRAJ,,,1);
   SKID_RBK.WAL:=exec('FindInSet','#table','SLO','SL',_table.WAL,XINFO.SLWAL);
   SKID_RBK.INNWAL:=_table.INNWAL;
   SKID_RBK.RS:=_table.RS;
   SKID_RBK.NRS:=_table.NRS;
   SKID_RBK.AKTYWNY:=_table.AKTYWNY;
   SKID_RBK.OPIS:=_table.OPIS;
   SKID_RBK.SWIFT:=_table.SWIFT;
   SKID_RBK.VAT:=_table.VAT
?};
~~

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:42 82b8a43d9dc1e7d04477645b5278cbd10869f6bdc9ffa87a401863fec4b1b9e36f4ca55b7be9f7ad32f54586b90ae988b7dd3c14a2c712ac853dfe5044cec10319afcc12bd40b52cbd713b6226c2df33cab71c1d82d8a683c7299fa564f24c0bdf05ab190851f4fd04f4656551c71125f4f08d54f2b8436d996a9dc7d011455c
