:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_ppk_uza.fml
:: Utworzony: 02.07.2019
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu umów o zarządzanie PPK.
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.22]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='PPK_UZA';
_def.FUNPAR:='ZWS_PAR_PUMO';
_def.DOMAIN:=exec('name','#b_domain','PPK');
_def.FILE:=exec('def_per_ppk_xlsx','xls__init');
_def.SHEET:='Umowy o zarządzanie PPK=1,1';
_def.NAME:='Umowy o zarządzanie PPK'@;
_def.DESC:='Umowy o zarządzanie PPK';
_def.ADD_ROWS:=0;

: źródło danych
_def.TABLE:="PPK_UZA";

: prolog
_def.BEFORE:=
   "  ADRES.cntx_psh();
      ADRES.index('ADRES');
      ADRES.prefix();
      PPK_UZA.cntx_psh();
      PPK_UZA.index('OD');
      PPK_UZA.prefix(exec('ref_firma','ustawienia'));
      ~~
   ";

: epilog
_def.AFTER:=
   "  PPK_UZA.cntx_pop();
      ADRES.cntx_pop();
      ~~
   ";

: definicja kolumn

_def.FIELDS:=
   "  _env:=_a;
      _env.define('DZ',    MS.name(PPK_UZA,'DZ'),    1,,MS.comment(PPK_UZA,'DZ'));
      _env.define('NUMER', MS.name(PPK_UZA,'NUMER'), 1,,MS.comment(PPK_UZA,'NUMER'));
      _env.define('ADRES', MS.name(PPK_UZA,'ADRES'), 1,,MS.comment(PPK_UZA,'ADRES'));
      _env.define('OD',    MS.name(PPK_UZA,'OD'),    1,,MS.comment(PPK_UZA,'OD'));
      _env.define('DO',    MS.name(PPK_UZA,'DO'),    1,,MS.comment(PPK_UZA,'DO'));
      _env.define('IDR',   MS.name(PPK_UZA,'IDR'),   1,,MS.comment(PPK_UZA,'IDR'));
      _env.define('IDF',   MS.name(PPK_UZA,'IDF'),   1,,MS.comment(PPK_UZA,'IDF'));
      _env.define('KOM',   MS.name(PPK_UZA,'KOM'),   1,,MS.comment(PPK_UZA,'KOM'));
      _env.define('OWD',   MS.name(PPK_UZA,'OWD'),   1,,MS.comment(PPK_UZA,'OWD'));
      _env.define('PARRAP',MS.name(PPK_UZA,'PARRAP'),1,,MS.comment(PPK_UZA,'PARRAP'));
      ~~
   ";

: zawartość wiersza
_def.EXPORT:=
   "  _env:=_a;
      _buf:=_b;
      _buf.DZ.VALUE:=PPK_UZA.DZ;
      _buf.NUMER.VALUE:=PPK_UZA.NUMER;
      _buf.ADRES.VALUE:=PPK_UZA.ADRES().NAZWA;
      _env.write_async('ADRES',PPK_UZA.ADRES);
      _buf.OD.VALUE:=PPK_UZA.OD;
      _buf.DO.VALUE:=PPK_UZA.DO;
      _buf.IDR.VALUE:=PPK_UZA.IDR;
      _buf.IDF.VALUE:=PPK_UZA.IDF;
      _buf.KOM.VALUE:=PPK_UZA.memo_txt(0,1,'KOM');
      _buf.OWD.VALUE:=PPK_UZA.memo_txt(0,1,'OWD');
      _buf.PARRAP.VALUE:=PPK_UZA.memo_txt(0,1,'PARRAP');
      1
   ";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_ppk_uza',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_ppk_uza',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.22]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_buf:=_a;
_update:=_b;
_validate:=_c;

_d0:=date(0,0,0);
: błędy krytyczne
_fld:=
   {? _buf.DZ=_d0   || 'DZ'
   |? _buf.NUMER='' || 'NUMER'
   |? _buf.ADRES='' || 'ADRES'
   |? _buf.OD=_d0   || 'OD'
   |? _buf.IDR=''   || 'IDR'
   || ''
   ?};
{? _fld<>''
|| _validate.msg_empty(_fld);
   _validate.RESULT:=0;
   return()
?};
{? _buf.IDR<>'N' & _buf.IDF=''
|| _validate.msg_empty('IDF');
   _validate.RESULT:=0;
   return()
?};

: błędne wartości
{? _buf.OD<_buf.DZ
|| _validate.msg_value('OD',
      'Data "%1" nie może być wcześniejsza niż "%2" (%3).' [MS.name(PPK_UZA,'OD'),MS.name(PPK_UZA,'DZ'),$_buf.DZ]
   );
   _validate.RESULT:=0;
   return()
?};
{? _buf.DO<>_d0 & _buf.DO<_buf.OD
|| _validate.msg_value('DO',
      'Data "%1" nie może być wcześniejsza niż "%2" (%3).' [MS.name(PPK_UZA,'DO'),MS.name(PPK_UZA,'OD'),$_buf.OD]
   );
   _validate.RESULT:=0;
   return()
?};
{? +_buf.IDR<>1 | 'NDPKI'*_buf.IDR=0
|| _validate.msg_inset('IDR','N','D','P','K','I');
   _validate.RESULT:=0;
   return()
?};

_slo_typ:=exec('slo_typ','ext_slo','PPK_IF');
{? ADRES.find_key(_slo_typ,_buf.ADRES,)
|| _adres:=ADRES.ref()
|| _validate.msg_value('ADRES','Nie znaleziono instytucji finansowej o wskazanej nazwie.');
   _validate.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(PPK_UZA,'NUMER');
{? +_buf.NUMER>_max
|| _validate.msg_length('NUMER',_max);
   _buf.NUMER:=_max+_buf.NUMER
?};
_max:=MS.fld_len(PPK_UZA,'IDF');
{? +_buf.IDF>_max
|| _validate.msg_length('IDF',_max);
   _buf.IDF:=_max+_buf.IDF
?};

: wybór akcji
_ref:=null();
{? PPK_UZA.find_key(_buf.OD)
|| _ref:=PPK_UZA.ref();
   {? _update
   || _validate.ACTION:='put'
   || _validate.RESULT:=0
   ?}
|| _validate.ACTION:='add'
?};

: optymalizacja importu
_validate.OBJ:=exec('obj_ntab_set','#array',,
   'ref',_ref,
   'tostr','%1 (%2)' [_buf.ADRES,$_buf.OD],
   'ADRES',_adres
);

~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.22]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_buf:=_a;
_update:=_b;
_validate:=_c;

_d0:=date(0,0,0);
{? _validate.ACTION='add'
|| PPK_UZA.blank()
?};

PPK_UZA.FIRMA:=exec('ref_firma','ustawienia');
PPK_UZA.DZ:=_buf.DZ;
PPK_UZA.NUMER:=_buf.NUMER;
PPK_UZA.ADRES:=_validate.OBJ.ADRES;
PPK_UZA.OD:=_buf.OD;
PPK_UZA.DO:=_buf.DO;
PPK_UZA.IDR:=_buf.IDR;
PPK_UZA.IDF:=_buf.IDF;
PPK_UZA.memo_set(_buf.KOM,'KOM');
PPK_UZA.memo_set(_buf.OWD,'OWD');
PPK_UZA.memo_set(_buf.PARRAP,'PARRAP');

_ret:=exec('check','overlap',_validate.OBJ.ref,PPK_UZA,,,2,,,'OD',PPK_UZA.FIRMA);
{? _ret=''
|| {? _validate.ACTION='add'
   || {? ~(PPK_UZA.add(1) & PPK_UZA.memo_put(,'KOM') & PPK_UZA.memo_put(,'OWD') & PPK_UZA.memo_put(,'PARRAP'))
      || _validate.msg_insert(_validate.OBJ.tostr);
         _validate.RESULT:=0
      ?}
   |? _validate.ACTION='put'
   || {? PPK_UZA.DO<>_d0
      || PPK_UMO.cntx_psh();
         PPK_UMO.index('OD');
         PPK_UMO.prefix(PPK_UZA.ref());
         {? PPK_UMO.first()
         || {? (PPK_UMO.DO=_d0 & PPK_UZA.DO<>_d0) |
               (PPK_UMO.DO<>_d0 & PPK_UZA.DO<>_d0 & PPK_UZA.DO<PPK_UMO.DO)
            || _validate.msg_update(_validate.OBJ.tostr);
               _validate.MSG+='\n'+'Zmiana nie jest możliwa ze względu na istniejące umowy o prowadzenie.';
               _validate.RESULT:=0
            ?}
         ?};
         PPK_UMO.cntx_pop();
         {? ~_validate.RESULT
         || return()
         ?}
      ?};

      {? ~(PPK_UZA.put(1) & PPK_UZA.memo_put(,'KOM') & PPK_UZA.memo_put(,'OWD') & PPK_UZA.memo_put(,'PARRAP'))
      || _validate.msg_update(_validate.OBJ.tostr);
         _validate.RESULT:=0
      ?}
   || _validate.RESULT:=0
   ?}
|| {? _validate.ACTION='add'
   || _validate.msg_insert(_validate.OBJ.tostr,_ret)
   |? _validate.ACTION='put'
   || _validate.msg_update(_validate.OBJ.tostr,_ret)
   ?};
   _validate.MSG+='\n'+_ret;
   _validate.RESULT:=0
?};

~~

:Sign Version 2.0 jowisz:1048 2020/10/16 15:26:06 8bb37d410e34e6e3ff2918199f96124a1cc6d6b5c30b2a10cb96cb4fb64161eb4f7c8d62e6229967d316ff477c905c2083cb45a1151dee5cffd3b5e7b8b255edde1d049c28c9e974778e7b02ab7038e08d933850aa33b02883344aaa34b741a0c6bac881d5370b1239b1692f4bf296b6c62f33310ef31d7f4f271dd8166c5f79
