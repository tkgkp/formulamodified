:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_spr_fin.fml
:: Utworzony: 28.08.2018
:: Autor: JK
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu sprawozdań finansowych
::======================================================================================================================


\filename
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Nazwa pliku do eksportu
::----------------------------------------------------------------------------------------------------------------------
'sprawozdania_finansowe.xlsx'


\GR_SIK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='GR_SIK';
_def.FUNPAR:='ZWS_PAR_FSPR';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.FILE:=exec('filename','xls_spr_fin');
_def.SHEET:='Nagłówki sprawozdań'@+'=1,1';
_def.NAME:='Sprawozdania finansowe - Nagłówki'@;
_def.DESC:='Sprawozdania finansowe - Nagłówki'@;

_def.PREFIX:="{? GR_SIK.f_active() || GR_SIK.f_clear() ?}; GR_SIK.index('SKROT'); GR_SIK.prefix(REF.FIRMA)";
_def.TABLE:="GR_SIK";
_def.FIELDS:="exec('GR_SIK_fld','xls_spr_fin',_a)";

_def.BEFORE:="GR_SIK.cntx_psh()";
_def.AFTER:="GR_SIK.cntx_pop()";
_def.SELECT:="exec('GR_SIK_select','xls_spr_fin',_a)";

_def.EXPORT:="exec('GR_SIK_exp','xls_spr_fin',_a,_b)";
_def.VALIDATE:="exec('GR_SIK_valid','xls_spr_fin',_a,_b,_c)";
_def.IMPORT:="exec('GR_SIK_imp','xls_spr_fin',_a,_b,_c)";
~~


\GR_SIK_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('SKROT','Skrót',1,,'10 znakowy kod sprawozdania');
_def.define('NAZWA','Nazwa',1,,'40 znakowy nazwa sprawozdania');
_def.define('ZAOKR','Wsk. zaokrąglenia',1,,'7 cyfrowy wskaźnik zaokrąglenia',,0);
_def.define('DOKL','Dokładność',1,,'1 cyfrowa domyślna dokładność',,0);
_def.define('UID','Identyfikator w modelu',1,,'10 znakowy id. w modelu danych');
_def.define('TYP_KLIK',
   'Qlik Sense',1,,'2 znakowy sposób użycia w Qlik Sense:\n'
   'TB - Bilans, TR - RZiS, TK - Koszty rodzajowe, TW - Wskaźniki\n'
   'NN - Brak użycia w Qlik Sense\n\n'
);
_def.define('E_KOD','e-Kod',1,,'50 znakowy e-Kod');
~~


\GR_SIK_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;
_result:=0;

_tab:=tab_tmp(1,
   'SKROT','STRING[10]','Skrót',
   'NAZWA','STRING[40]','Nazwa',
   'REF','STRING[16]','SQL ref',
   'SELECTED','STRING[1]','Czy wybrano'
   );

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'SKROT',,);

GR_SIK.cntx_psh();
GR_SIK.index('SKROT');
GR_SIK.prefix();
{? GR_SIK.first()
|| {!
   |? {? GR_SIK.FIRMA=REF.FIRMA | GR_SIK.FIRMA=null
      || _tab.blank();
         _tab.REF:=$GR_SIK.ref();
         _selected.prefix($GR_SIK.ref());
         {? _selected.first()
         || _tab.SELECTED:='T'
         || _tab.SELECTED:='N'
         ?};
         _tab.SKROT:=GR_SIK.SKROT;
         _tab.NAZWA:=GR_SIK.NAZWA;
         _tab.add()
      ?};
      GR_SIK.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'SKROT[10],NAZWA[40]',40,'Wybór Nagłówków sprawozdań do eksportu'@,1);
{? _result>0
|| _selected.erase();
   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
GR_SIK.cntx_pop();
_result


\GR_SIK_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;

_table.SKROT.VALUE:=GR_SIK.SKROT;
_table.NAZWA.VALUE:=GR_SIK.NAZWA;
_table.ZAOKR.VALUE:=GR_SIK.ZAOKR;
_table.DOKL.VALUE:=GR_SIK.DOKL;
_table.UID.VALUE:=GR_SIK.UID;
_table.TYP_KLIK.VALUE:=GR_SIK.TYP_KLIK;
_table.E_KOD.VALUE:=GR_SIK.E_KOD;

DEFA.cntx_psh(); DEFA.index('LP');
DEFW.cntx_psh(); DEFW.index('GRUPA'); DEFW.prefix(GR_SIK.ref());
{? DEFW.first()
|| {! |?
      _excel.write_async('DEFW',DEFW.ref());
      DEFA.prefix(DEFW.ref());
      {? DEFA.first()
      || {! |?
            DEFA.cntx_psh(); GR_SIK.cntx_psh(); GR_KOL.cntx_psh(); DEFW.cntx_psh();
            _excel.write_async('DEFA',DEFA.ref());
            DEFA.cntx_pop(); GR_SIK.cntx_pop(); GR_KOL.cntx_pop(); DEFW.cntx_pop();
            DEFA.next()
         !}
      ?};
      DEFW.next()
   !}
?};
DEFW.cntx_pop(); DEFA.cntx_pop();

GR_KOL.cntx_psh(); GR_KOL.index('LP'); GR_KOL.prefix(GR_SIK.ref());
{? GR_KOL.first()
|| {!
   |? _excel.write_async('GR_KOL',GR_KOL.ref());
      GR_KOL.next()
   !}
?};
GR_KOL.cntx_pop();

DEFK.cntx_psh(); DEFK.index('LP');
GR_KOL.cntx_psh(); GR_KOL.index('LP'); GR_KOL.prefix(GR_SIK.ref());
{? GR_KOL.first()
|| {! |?
      DEFK.prefix(GR_KOL.ref());
      {? DEFK.first()
      || {!
         |? _excel.write_async('DEFK',DEFK.ref());
            DEFK.next()
         !}
      ?};
      GR_KOL.next()
   !}
?};
GR_KOL.cntx_pop(); DEFK.cntx_pop();

_result


\GR_SIK_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;

: wychwyć błędy krytyczne
_fld:=
   {? _table.SKROT='' || 'SKROT'
   |? _table.NAZWA='' || 'NAZWA'
   |? _table.UID='' || 'UID'
   |? _table.TYP_KLIK='' || 'TYP_KLIK'
   || ''
   ?};
{? _fld<>''
|| _result.msg_empty(_fld);
   _result.RESULT:=0
|? 'TB,TR,TK,TW,NN,'*(_table.TYP_KLIK+',')=0
|| _result.msg_inset('TYP_KLIK','TB','TR','TK','TW','NN');
   _result.RESULT:=0
?};
{? _result.RESULT
|| GR_SIK.index('NAZWA'); GR_SIK.prefix(REF.FIRMA,_table.NAZWA,);
   {? GR_SIK.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || GR_SIK.blank() ?};
      GR_SIK.SYSTEM:='FKS';
      GR_SIK.SKROT:=_table.SKROT;
      GR_SIK.NAZWA:=_table.NAZWA;
      GR_SIK.AKC:='N';
      GR_SIK.ZAOKR:=_table.ZAOKR;
      GR_SIK.DOKL:=_table.DOKL;
      GR_SIK.FIRMA:=REF.FIRMA;
      GR_SIK.UID:=_table.UID;
      GR_SIK.TYP_KLIK:=_table.TYP_KLIK;
      GR_SIK.E_KOD:=_table.E_KOD
   ?}
?};
~~


\GR_SIK_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \KS_ZEST_import/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=GR_SIK.add(1)
   |? _validate.ACTION='put'
   || _result:=GR_SIK.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie sprawozdania o nazwie %1 nie powiodło się.'@[_table.NAZWA]
   || _validate.MSG:='Poprawa sprawozdania o nazwie %1 nie powiodła się.'@[_table.NAZWA]
   ?}
?};
_result


\GR_KOL
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='GR_KOL';
_def.FUNPAR:='ZWS_PAR_FSPR';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.FILE:=exec('filename','xls_spr_fin');
_def.SHEET:='Kolumny sprawozdań'@+'=1,1';
_def.NAME:='Sprawozdania finansowe - Kolumny'@;
_def.DESC:='Sprawozdania finansowe - Kolumny'@;
_def.HIDDEN:='T';

_def.PREFIX:="GR_KOL.index('NAZWA'); GR_KOL.prefix()";
_def.TABLE:="GR_KOL";
_def.FIELDS:="exec('GR_KOL_fld','xls_spr_fin',_a)";

_def.BEFORE:="GR_KOL.cntx_psh()";
_def.AFTER:="GR_KOL.cntx_pop()";
_def.SELECT:="";
::_def.SELECT:="exec('GR_KOL_select','xls_spr_fin',_a)";

_def.EXPORT:="exec('GR_KOL_exp','xls_spr_fin',_a,_b)";
_def.VALIDATE:="exec('GR_KOL_valid','xls_spr_fin',_a,_b,_c)";
_def.IMPORT:="exec('GR_KOL_imp','xls_spr_fin',_a,_b,_c)";
~~


\GR_KOL_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('GRUPA','Sprawozdanie',1,,'wskazanie na nagłówek sprawozdania'@);
_def.define('LP','Lp.',1,,'11 cyfrowa liczba porządkowa'@,,0);
_def.define('NAZWA','Nazwa',1,,'60 znakowa nazwa kolumny'@);
_def.define('ALGORYTM','Algorytm',1,,'1 znakowy typ algorytmy F/S/W/I'@);
_def.define('KOLEJ','Kolejność',1,,'11 cyfrowy znacznik kolejności'@,,0);
_def.define('DOKL','Dokładność',1,,'11 cyfrowy dokładność wyliczonej wartości'@,,0);
_def.define('ZAOKR','Zaokrąglenie',1,,'11 cyfrowe zaokrąglenie wartości'@,,0);
_def.define('DZ_DEFW','Dokładność i zaokrąglenia jak dla wiersza',1,,'1 znakowy znacznik'@);
_def.define('E_KOD','e-Kod',1,,'50 znakowy e-Kod');
~~


\GR_KOL_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;
_result:=0;

_tab:=tab_tmp(1,'GRUPA','STRING[10]','Nagłowek'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'LP','INTEGER','Lp.'
   ,'NAZWA','STRING[60]','Nazwa');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'GRUPA',,,'LP',,);

GR_KOL.cntx_psh();
GR_KOL.index('LP');
GR_KOL.prefix();
{? GR_KOL.first()
|| {!
   |? {? GR_KOL.GRUPA().FIRMA=null | GR_KOL.GRUPA().FIRMA=REF.FIRMA
      || _tab.blank();
         _tab.REF:=$GR_KOL.ref();
         _selected.prefix($GR_KOL.ref());
         {? _selected.first()
         || _tab.SELECTED:='T'
         || _tab.SELECTED:='N'
         ?};
         _tab.GRUPA:=GR_KOL.GRUPA().SKROT;
         _tab.LP:=GR_KOL.LP;
         _tab.NAZWA:=GR_KOL.NAZWA;
         _tab.add()
      ?};
      GR_KOL.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'GRUPA,LP,NAZWA',20,'Wybór kolumn sprawozdań do eksportu'@,1);
{? _result>0
|| _selected.erase();
   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
GR_KOL.cntx_pop();
_result


\GR_KOL_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;
_table.GRUPA.VALUE:=GR_KOL.GRUPA().SKROT;
_table.LP.VALUE:=GR_KOL.LP;
_table.NAZWA.VALUE:=GR_KOL.NAZWA;
_table.ALGORYTM.VALUE:=GR_KOL.ALGORYTM;
_table.KOLEJ.VALUE:=GR_KOL.KOLEJ;
_table.DOKL.VALUE:=GR_KOL.DOKL;
_table.ZAOKR.VALUE:=GR_KOL.ZAOKR;
_table.DZ_DEFW.VALUE:=GR_KOL.DZ_DEFW;
_table.E_KOD.VALUE:=GR_KOL.E_KOD;

_result


\GR_KOL_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  OLD: \KS_ZEST_valid/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;


: wychwyć błędy krytyczne
_fld:=
   {? _table.LP=0 || 'LP'
   |? _table.NAZWA='' || 'NAZWA'
   || ''
   ?};
{? _fld<>''
|| _result.msg_empty(_fld);
   _result.RESULT:=0
?};

{? _result.RESULT
|| _grsik:=exec('FindInSet','#table','GR_SIK','SKROT',_table.GRUPA,REF.FIRMA,,0);
   {? _grsik=null
   || _result.MSG:='Nie znaleziono nagłówek sprawozdania: %1'@[_table.GRUPA];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT
|| GR_KOL.index('NAZWA'); GR_KOL.prefix(_grsik,_table.NAZWA,);
   {? GR_KOL.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || GR_KOL.blank() ?};
      GR_KOL.GRUPA:=_grsik;
      GR_KOL.LP:=_table.LP;
      GR_KOL.NAZWA:=_table.NAZWA;
      GR_KOL.ALGORYTM:=_table.ALGORYTM;
      GR_KOL.KOLEJ:=_table.KOLEJ;
      GR_KOL.DOKL:=_table.DOKL;
      GR_KOL.ZAOKR:=_table.ZAOKR;
      GR_KOL.DZ_DEFW:=_table.DZ_DEFW;
      GR_KOL.E_KOD:=_table.E_KOD;
      GR_SIK.cntx_psh();
      {? GR_KOL.E_KOD<>'' & GR_KOL.GRUPA().E_KOD=''
      || GR_KOL.E_KOD:=''
      ?};
      GR_SIK.cntx_pop()
   ?}
?};
~~


\GR_KOL_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \KS_ZEST_import/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=GR_KOL.add(1)
   |? _validate.ACTION='put'
   || _result:=GR_KOL.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie GR_KOL %1 nie powiodło się.'@[_table.NAZWA]
   || _validate.MSG:='Poprawa GR_KOL %1 nie powiodła się.'@[_table.NAZWA]
   ?}
?};
_result


\DEFW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='DEFW';
_def.FUNPAR:='ZWS_PAR_FSPR';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.FILE:=exec('filename','xls_spr_fin');
_def.SHEET:='Definicje wierszy'@+'=1,1';
_def.NAME:='Sprawozdania finansowe - Definicje wierszy'@;
_def.DESC:='Sprawozdania finansowe - Definicje wierszy'@;
_def.HIDDEN:='T';

_def.PREFIX:="DEFW.index('GRUPA'); DEFW.prefix()";
_def.TABLE:="DEFW";
_def.FIELDS:="exec('DEFW_fld','xls_spr_fin',_a)";

_def.BEFORE:="DEFW.cntx_psh()";
_def.AFTER:="DEFW.cntx_pop()";
_def.SELECT:="";
::_def.SELECT:="exec('DEFW_select','xls_spr_fin',_a)";

_def.EXPORT:="exec('DEFW_exp','xls_spr_fin',_a,_b)";
_def.VALIDATE:="exec('DEFW_valid','xls_spr_fin',_a,_b,_c)";
_def.IMPORT:="exec('DEFW_imp','xls_spr_fin',_a,_b,_c)";
~~


\DEFW_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('GRUPA','Grupa',1,,'Wskazanie na nagłowek sprawozdania'@);
_def.define('LP','Lp.',1,,'11 cyfrowa liczba porządkowa'@,,0);
_def.define('KOD','Kod',1,,'15 znakowy kod wiersza'@);
_def.define('NAZWA','Nazwa',1,,'80 znakowa nazwa wiersza'@);
_def.define('WSPOL','Współczynnik',1,,'27 cyfrowa liczba współczynnika'@,,0);
_def.define('WSPOLF','Współczynnik-formuła',1,,'255 znakowy współcz. formułowy'@);
_def.define('ALGORYTM','Algorytm',1,,'1 znakowy typ wiersza'@);
_def.define('KOLEJ','Kolejność obliczeń',1,,'11 cyfrowe pole z kolejnościa obliczeń'@,,0);
_def.define('ZAOKR','Wsk. zaokrąglenia',1,,'7 cyfrowy wskaźnik zaokrąglenia'@,,0);
_def.define('DOKL','Dokładność',1,,'1 cyfrowa liczba dokładności'@,,0);
_def.define('TAB','Tabela',1,,'8 znakowy akronim tabeli'@);
_def.define('INDEX','Index',1,,'8 znakowy indeks tabeli'@);
_def.define('PREFIX','Prefix',1,,'60 znakowy prefiks tabeli'@);
_def.define('KODF','Pole - Kod',1,,'60 znakowy kod'@);
_def.define('TR','Pole - Nazwa',1,,'60 znakowa treść'@);
_def.define('SLU','Słownik',1,,'wskazanie na słownik użytkownika'@);
_def.define('MASKA','Maska',1,,'100 znakowa maska pozycji w słowniku'@);
_def.define('DOKRES','Dane dla okresu',1,,'1 znakowy parametr'@);
_def.define('PLIK','Plik',1,,'plik z algorytmem wiersza'@);
_def.define('ANA_TYP','Przychód / koszt',1,,'1 znakowy znacznik'@);
_def.define('VAL_TYP','Typ wartości',1,,'znacznik typu wartości'@);
_def.define('JM','Jednostka miary',1,,'wskazanie na jednostkę miary'@);
_def.define('DEFW_NAD','Wiersz nadrzędny',1,,'11 cyfrowy ref wiersza nadrzędnego'@,,0);
_def.define('UID','Identyfikator w modelu',1,,'16 znakowy unikalny id w modelu danych'@);
_def.define('E_KOD','e-Kod',1,,'50 znakowy e-Kod');
~~


\DEFW_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;
_result:=0;

_tab:=tab_tmp(1,'GRUPA','STRING[10]','Nagłowek'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'LP','INTEGER','Lp.'
   ,'NAZWA','STRING[80]','Nazwa');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'GRUPA',,,'LP',,);

DEFW.cntx_psh();
DEFW.index('GRUPA');
DEFW.prefix();
{? DEFW.first()
|| {!
   |? {? DEFW.GRUPA().FIRMA=null | DEFW.GRUPA().FIRMA=REF.FIRMA
      || _tab.blank();
         _tab.REF:=$DEFW.ref();
         _selected.prefix($DEFW.ref());
         {? _selected.first()
         || _tab.SELECTED:='T'
         || _tab.SELECTED:='N'
         ?};
         _tab.GRUPA:=DEFW.GRUPA().SKROT;
         _tab.LP:=DEFW.LP;
         _tab.NAZWA:=DEFW.NAZWA;
         _tab.add()
      ?};
      DEFW.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'GRUPA,LP,NAZWA',20,'Wybór wierszy sprawozdań do eksportu'@,1);
{? _result>0
|| _selected.erase();
   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
DEFW.cntx_pop();
_result


\DEFW_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::----------------------------------------------------------------------------------------------------------------------
_Interm:= exec('interm','#system');
_excel:=_a;
_table:=_b;
_result:=1;
_table.GRUPA.VALUE:=DEFW.GRUPA().SKROT;
_table.LP.VALUE:=DEFW.LP;
_table.KOD.VALUE:=DEFW.KOD;
_table.NAZWA.VALUE:=DEFW.NAZWA;
_table.WSPOL.VALUE:=DEFW.WSPOL;
_table.WSPOLF.VALUE:=DEFW.WSPOLF;
_table.ALGORYTM.VALUE:=DEFW.ALGORYTM;
_table.KOLEJ.VALUE:=DEFW.KOLEJ;
_table.ZAOKR.VALUE:=DEFW.ZAOKR;
_table.DOKL.VALUE:=DEFW.DOKL;
_table.TAB.VALUE:=DEFW.TAB;
_table.INDEX.VALUE:=DEFW.INDEX;
_table.PREFIX.VALUE:=DEFW.PREFIX;
_table.KODF.VALUE:=DEFW.KODF;
_table.TR.VALUE:=DEFW.TR;
_table.SLU.VALUE:=DEFW.SLU().SLU().NAZ; _excel.write_async('SLU',DEFW.SLU().SLU);
_table.MASKA.VALUE:=DEFW.MASKA;
_table.DOKRES.VALUE:=DEFW.DOKRES;
_table.PLIK.VALUE:={? DEFW.PLIK<>null()
                   || _plik:=DEFW.bl_info('PLIK','NAME');
                     {? _plik<>''
                     || _slash:=exec('sep','#file');
                        {? _Interm
                        || _path:=_excel.DIR+_slash+_plik
                        || _path:='@'+_excel.DIR+_slash+_plik
                        ?};
                        DEFW.bl_get('PLIK',_path);
                        _plik
                     ?}
                   || ''
                   ?};
_table.ANA_TYP.VALUE:=DEFW.ANA_TYP;
_table.VAL_TYP.VALUE:=DEFW.VAL_TYP;
_table.JM.VALUE:=DEFW.JM().KOD; _excel.write_async('JM',DEFW.JM);
_table.DEFW_NAD.VALUE:=DEFW.DEFW_NAD;
_table.UID.VALUE:=DEFW.UID;
_table.E_KOD.VALUE:=DEFW.E_KOD;

_result


\DEFW_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  OLD: \KS_ZEST_valid/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;

_fld:={? _table.NAZWA='' || 'NAZWA'
      |? _table.KOD='' || 'KOD'
      || ''
      ?};
{? _fld<>''
:  katastrofa
|| _result.msg_empty(_fld);
   _result.RESULT:=0
?};
{? _result.RESULT
|| _grsik:=exec('FindInSet','#table','GR_SIK','SKROT',_table.GRUPA,REF.FIRMA,,0);
   {? _grsik=null
   || _result.MSG:='Nie znaleziono nagłówek sprawozdania: %1'@[_table.GRUPA];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT
|| DEFW.index('GRUPA'); DEFW.prefix(_grsik,_table.KOD);
   {? DEFW.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || DEFW.blank() ?};
      DEFW.GRUPA:=_grsik;
      DEFW.LP:=_table.LP;
      DEFW.KOD:=_table.KOD;
      DEFW.NAZWA:=_table.NAZWA;
      DEFW.WSPOL:=_table.WSPOL;
      DEFW.WSPOLF:=_table.WSPOLF;
      DEFW.ALGORYTM:=_table.ALGORYTM;
      DEFW.KOLEJ:=_table.KOLEJ;
      DEFW.ZAOKR:=_table.ZAOKR;
      DEFW.DOKL:=_table.DOKL;
      DEFW.TAB:=_table.TAB;
      DEFW.INDEX:=_table.INDEX;
      DEFW.PREFIX:=_table.PREFIX;
      DEFW.KODF:=_table.KODF;
      DEFW.TR:=_table.TR;
      DEFW.SLU:=exec('FindInSet','#table','SLUAPPL','NAZ',_table.SLU,,,1);
      DEFW.MASKA:=_table.MASKA;
      DEFW.DOKRES:=_table.DOKRES;
      DEFW.ANA_TYP:=_table.ANA_TYP;
      DEFW.VAL_TYP:=_table.VAL_TYP;
      DEFW.JM:=exec('FindInSet','#table','JM','KOD',_table.JM,,,1);
      DEFW.DEFW_NAD:=_table.DEFW_NAD;
      DEFW.UID:=_table.UID;
      DEFW.E_KOD:=_table.E_KOD;
      GR_SIK.cntx_psh();
      {? DEFW.E_KOD<>'' & DEFW.GRUPA().E_KOD=''
      || DEFW.E_KOD:=''
      ?};
      GR_SIK.cntx_pop()
   ?}
?};
~~


\DEFW_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \KS_ZEST_import/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_Interm:= exec('interm','#system');
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=DEFW.add(1)
   |? _validate.ACTION='put'
   || _result:=DEFW.put(1)
   ?}
?};

{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie DEFW o kodzie %1 nie powiodło się.'@[_table.KOD]
   || _validate.MSG:='Poprawa DEFW o kodzie %1 nie powiodła się.'@[_table.KOD]
   ?}
|| {? _table.PLIK<>''
   || _slash:=exec('sep','#file');
      _file:=EXCEL_ENV.DIR+_slash+_table.PLIK;
      {? ~_Interm || _file:='@'+_file ?};
      {? fexists(_file)
      || DEFW.bl_put('PLIK', _file)
      ?}
   ?}
?};
_result


\DEFA
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='DEFA';
_def.FUNPAR:='ZWS_PAR_FSPR';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.FILE:=exec('filename','xls_spr_fin');
_def.SHEET:='Algorytmy dla pozycji'@+'=1,1';
_def.NAME:='Sprawozdania finansowe - Algorytmy dla pozycji'@;
_def.DESC:='Sprawozdania finansowe - Algorytmy dla pozycji'@;
_def.HIDDEN:='T';

_def.PREFIX:="DEFA.index('LP'); DEFA.prefix()";
_def.TABLE:="DEFA";
_def.FIELDS:="exec('DEFA_fld','xls_spr_fin',_a)";

_def.BEFORE:="DEFA.cntx_psh(); GR_SIK.cntx_psh(); DEFW.cntx_psh(); GR_KOL.cntx_psh()";
_def.AFTER:="DEFA.cntx_pop(); GR_SIK.cntx_pop(); DEFW.cntx_pop(); GR_KOL.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('DEFA_exp','xls_spr_fin',_a,_b)";
_def.VALIDATE:="exec('DEFA_valid','xls_spr_fin',_a,_b,_c)";
_def.IMPORT:="exec('DEFA_imp','xls_spr_fin',_a,_b,_c)";
~~


\DEFA_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('GRUPA','Grupa',1,,'Nagłówek sprawozdania',2);
_def.define('WYR','Wiersz',1,,'Wiersz sprawozdania',2);
_def.define('KOLLP','Kolumna Lp.',1,,'Lp. kolumny sprawozdania',1);
_def.define('KOL','Kolumna',1,,'Kolumna sprawozdania',2);
_def.define('LP','Lp.',1,,'Kolejna liczba porządkowa',1,0);
_def.define('LM','Typ',1,,'1 znakowy typ algorytmu dla wierszy',2);
_def.define('WSP','Współczynnik',1,,'27 cyfrowy współczynnik przez który mnożona jest wartość',1);
_def.define('GR_ARG','Grupa',1,,'Nagłówek sprawozdania - argument',2);
_def.define('ARGUMENT','Argument',1,,'Wiersz będący argumentem danego algorytmu',2);
_def.define('ARGKOLLP','Lp. kolumny argumentu',1,,'Lp. kolumny będącej argumentem danego algorytmu',1);
_def.define('ARG_KOL','Kolumna argumentu',1,,'Kolumna będąca argumentem danego algorytmu',2);
_def.define('LM_OPIS','Opis algorytmu',1,,'10 znakowy opis algorytmu planu dostaw',2);
~~


\DEFA_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;
{? DEFA.ARGUMENT
|| GR_SIK.cntx_psh(); DEFW.cntx_psh(); GR_KOL.cntx_psh(); DEFA.cntx_psh();
   _excel.write_async('GR_SIK',DEFA.ARGUMENT().GRUPA);
   GR_SIK.cntx_pop(); DEFW.cntx_pop(); GR_KOL.cntx_pop(); DEFA.cntx_pop()
?};
GR_SIK.cntx_psh(); DEFW.cntx_psh(); GR_KOL.cntx_psh(); DEFA.cntx_psh();
_table.GRUPA.VALUE:=DEFA.WYR().GRUPA().SKROT;
_table.WYR.VALUE:=DEFA.WYR().KOD;
_table.KOLLP.VALUE:=DEFA.KOL().LP;
_table.KOL.VALUE:=DEFA.KOL().NAZWA;
_table.LP.VALUE:=DEFA.LP;
_table.LM.VALUE:=DEFA.LM;
_table.WSP.VALUE:=DEFA.WSP;
_table.GR_ARG.VALUE:=DEFA.ARGUMENT().GRUPA().SKROT;
_table.ARGUMENT.VALUE:=DEFA.ARGUMENT().KOD;
_table.ARGKOLLP.VALUE:=DEFA.ARG_KOL().LP;
_table.ARG_KOL.VALUE:=DEFA.ARG_KOL().NAZWA;
_table.LM_OPIS.VALUE:=DEFA.LM_OPIS;
GR_SIK.cntx_pop(); DEFW.cntx_pop(); GR_KOL.cntx_pop(); DEFA.cntx_pop();
_result


\DEFA_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  OLD: \KS_ZEST_valid/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;

_grupa:=exec('FindInSet','#table','GR_SIK','SKROT',_table.GRUPA,REF.FIRMA,,0);
{? _grupa=null
|| _result.MSG:='Nie znaleziono nagłówka sprawozdania: %1'@[_table.GRUPA];
   _result.RESULT:=0
?};
{? _result.RESULT
|| _defw:=exec('FindInSet','#table','DEFW','GRUPA',_table.WYR,_grupa,,1);
   {? _defw=null
   || _result.MSG:='Nie znaleziono definicji wiersza: %1'@[_table.WYR];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT
|| _grkol:=exec('FindInSet','#table','GR_KOL','LP',_table.KOL,_grupa,,1,_table.KOLLP);
   {? _grkol=null
   || _result.MSG:='Nie znaleziono kolumny sprawozdania: %1'@[_table.KOL];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT
|| _gr_arg:=exec('FindInSet','#table','GR_SIK','SKROT',_table.GR_ARG,REF.FIRMA,,0);
   {? _gr_arg=null
   || _result.MSG:='Nie znaleziono nagłówka sprawozdania: %1'@[_table.GR_ARG];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT
|| _defwarg:=exec('FindInSet','#table','DEFW','GRUPA',_table.ARGUMENT,_gr_arg,,1);
   {? _defwarg=null
   || _result.MSG:='Nie znaleziono definicji wiersza: %1'@[_table.ARGUMENT];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT
|| _kolarg:=exec('FindInSet','#table','GR_KOL','LP',_table.ARG_KOL,_gr_arg,,1,_table.ARGKOLLP);
   {? _kolarg=null
   || _result.MSG:='Nie znaleziono kolumny sprawozdania: %1'@[_table.ARG_KOL];
      _result.RESULT:=0
   ?}
?};

{? _result.RESULT
|| DEFA.index('LP'); DEFA.prefix(_defw,_grkol,_table.LP);
   {? DEFA.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || DEFA.blank() ?};
      DEFA.WYR:=_defw;
      DEFA.KOL:=_grkol;
      DEFA.LP:=_table.LP;
      DEFA.LM:=_table.LM;
      DEFA.WSP:=_table.WSP;
      DEFA.ARGUMENT:=_defwarg;
      DEFA.ARG_KOL:=_kolarg;
      DEFA.LM_OPIS:=_table.LM_OPIS
   ?}
?};
~~


\DEFA_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \KS_ZEST_import/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=DEFA.add(1)
   |? _validate.ACTION='put'
   || _result:=DEFA.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie DEFA %1 nie powiodło się.'@[_table.LM_OPIS]
   || _validate.MSG:='Poprawa DEFA %1 nie powiodła się.'@[_table.LM_OPIS]
   ?}
?};
_result


\DEFK
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='DEFK';
_def.FUNPAR:='ZWS_PAR_FSPR';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.FILE:=exec('filename','xls_spr_fin');
_def.SHEET:='Algorytmy dla kolumn'@+'=1,1';
_def.NAME:='Sprawozdania finansowe - Algorytmy dla kolumn'@;
_def.DESC:='Sprawozdania finansowe - Algorytmy dla kolumn'@;
_def.HIDDEN:='T';

_def.PREFIX:="DEFK.index('LP'); DEFK.prefix()";
_def.TABLE:="DEFK";
_def.FIELDS:="exec('DEFK_fld','xls_spr_fin',_a)";

_def.BEFORE:="DEFK.cntx_psh()";
_def.AFTER:="DEFK.cntx_pop()";
_def.SELECT:="";
::_def.SELECT:="exec('DEFK_select','xls_spr_fin',_a)";

_def.EXPORT:="exec('DEFK_exp','xls_spr_fin',_a,_b)";
_def.VALIDATE:="exec('DEFK_valid','xls_spr_fin',_a,_b,_c)";
_def.IMPORT:="exec('DEFK_imp','xls_spr_fin',_a,_b,_c)";
~~


\DEFK_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('GR_KOLLP','Lp. kolumny podstawowej',1,,'Lp. kolumny podstawowej');
_def.define('GR_KOL','Kolumna podstawowa',1,,'Wskzanie na kolumnę, parametr algorytmu');
_def.define('GRUPA','Grupa',1,,'Wskzanie na nagłówek');
_def.define('ARGUMENT','Algorytm',1,,'Wskazanie na kolumnę sprawozdania');

_def.define('DEFW','Wiersz',1,,'Wskzanie na wiersz sprawozdania');
_def.define('LM','Typ',1,,'1 znakowy znacznik typu parametru');
_def.define('WSP','Współczynnik',1,,'27 cyfrowa liczba porządkowa');
_def.define('LP','Liczba porządkowa',1,,'11 cyfrowa liczba porządkowa',,0);
~~


\DEFK_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;
_result:=0;

_tab:=tab_tmp(1,'LM','STRING[1]','Typ'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'KOLUMNA','INTEGER','Lp. kolumny'
   ,'NAZWAK','STRING[60]','Nazwa kolumny'
   ,'WIERSZ','INTEGER','Lp.wiersza'
   ,'NAZWAW','STRING[80]','Nazwa wiersza'
   ,'WSP','INTEGER','Współczynnik');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,);

DEFK.cntx_psh();
DEFK.index('LP');
DEFK.prefix();
{? DEFK.first()
|| {!
   |? {? DEFK.DEFW().GRUPA().FIRMA=null | DEFK.DEFW().GRUPA().FIRMA=REF.FIRMA
      || _tab.blank();
         _tab.REF:=$DEFK.ref();
         _selected.prefix($DEFK.ref());
         {? _selected.first()
         || _tab.SELECTED:='T'
         || _tab.SELECTED:='N'
         ?};
         _tab.LM:=DEFK.LM;
         _tab.KOLUMNA:=DEFK.GR_KOL().LP;
         _tab.NAZWAK:=DEFK.GR_KOL().NAZWA;
         _tab.WIERSZ:=DEFK.DEFW().LP;
         _tab.NAZWAW:=DEFK.DEFW().NAZWA;
         _tab.WSP:=DEFK.WSP;
         _tab.add()
      ?};
      DEFK.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'LM,KOLUMNA,NAZWAK,WIERSZ,NAZWAW,WSP',20,'Wybór algorytmów dla kolumn do eksportu'@,1);
{? _result>0
|| _selected.erase();
   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
DEFK.cntx_pop();
_result


\DEFK_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;
_table.GR_KOLLP.VALUE:=DEFK.GR_KOL().LP;
_table.GRUPA.VALUE:=DEFK.GR_KOL().GRUPA().SKROT;
_table.GR_KOL.VALUE:=DEFK.GR_KOL().NAZWA;
_table.ARGUMENT.VALUE:=DEFK.ARGUMENT().NAZWA;
_table.DEFW.VALUE:=DEFK.DEFW().KOD;
_table.LM.VALUE:=DEFK.LM;
_table.WSP.VALUE:=DEFK.WSP;
_table.LP.VALUE:=DEFK.LP;
_result


\DEFK_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  OLD: \KS_ZEST_valid/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;

_grupa:=exec('FindInSet','#table','GR_SIK','SKROT',_table.GRUPA,REF.FIRMA,,0);
{? _grupa=null
|| _result.MSG:='Nie znaleziono nagłówek sprawozdania: %1'@[_table.GRUPA];
   _result.RESULT:=0
?};
{? _result.RESULT
|| _grkol:=exec('FindInSet','#table','GR_KOL','LP',_table.GR_KOL,_grupa,,1,#_table.GR_KOLLP);
   {? _grkol=null
   || _result.MSG:='Nie znaleziono kolumny sprawozdania: %1'@[_table.GR_KOL];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT
|| DEFK.index('LP'); DEFK.prefix(_grkol,_table.LP);
   {? DEFK.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || DEFK.blank() ?};
      DEFK.GR_KOL:=_grkol;
      DEFK.ARGUMENT:=_grkol;
      DEFK.DEFW:=exec('FindInSet','#table','DEFW','GRUPA',_table.DEFW,_grupa,,1);
      DEFK.LM:=_table.LM;
      DEFK.WSP:=_table.WSP;
      DEFK.LP:=_table.LP;
      {? exec('ar_defk','!zws_par_fspr',_result.ACTION='add')<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\DEFK_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \KS_ZEST_import/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=DEFK.add(1)
   |? _validate.ACTION='put'
   || _result:=DEFK.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie DEFK %1 nie powiodło się.'[_table.LP]
   || _validate.MSG:='Poprawa DEFK %1 nie powiodła się.'[_table.LP]
   ?}
?};
_result


\W_SCH
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='W_SCH';
_def.FUNPAR:='ZWS_PAR_FSPR';
_def.FILE:=exec('def_kst_xlsx','xls__init');
_def.FUNPAR:='ZWS_PAR_ASGR';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.SHEET:='Schemat grupy kapitałowej'@+'=1,1';
_def.NAME:='Schemat grupy kapitałowej'@;
_def.DESC:='Schemat grupy kapitałowej'@;
_def.MULTIFIR:='T';

_def.PREFIX:="W_SCH.index('NAZ'); W_SCH.prefix()";
_def.TABLE:="W_SCH";
_def.FIELDS:="exec('W_SCH_fld','xls_spr_fin',_a)";

_def.BEFORE:="W_SCH.cntx_psh()";
_def.AFTER:="W_SCH.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('W_SCH_exp','xls_spr_fin',_a,_b)";
_def.VALIDATE:="exec('W_SCH_valid','xls_spr_fin',_a,_b,_c)";
_def.IMPORT:="exec('W_SCH_imp','xls_spr_fin',_a,_b,_c)";
~~


\W_SCH_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('NAZ','Nazwa',1,,'40 znakowa nazwa schematu grupy kapitałowej');
~~


\W_SCH_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;
_table.NAZ.VALUE:=W_SCH.NAZ;
_result


\W_SCH_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  OLD: \KS_ZEST_valid/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
W_SCH.index('NAZ');
W_SCH.prefix(_table.NAZ);
{? W_SCH.first()
|| {? _mode=0
   || _result.RESULT:=0
   || _result.ACTION:='put'
   ?}
|| _result.ACTION:='add'
?};
{? _result.RESULT=1
|| {? _result.ACTION='add' || W_SCH.blank() ?};
   W_SCH.NAZ:=_table.NAZ
?};
~~


\W_SCH_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \KS_ZEST_import/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=W_SCH.add(1)
   |? _validate.ACTION='put'
   || _result:=W_SCH.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie W_SCH o nazwie %1 nie powiodło się.'[_table.NAZ]
   || _validate.MSG:='Poprawa W_SCH o nazwie %1 nie powiodła się.'[_table.NAZ]
   ?}
?};
_result


\ALG_PAR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='ALG_PAR';
_def.FILE:=exec('filename','xls_spr_fin');
_def.FUNPAR:='ZWS_PAR_FSPR';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.SHEET:='Parametry wierszy'@+'=1,1';
_def.NAME:='Sprawozdania finansowe - Parametry wierszy'@;
_def.DESC:='Sprawozdania finansowe - Parametry wierszy'@;

_def.PREFIX:="ALG_PAR.index('ALG_PAR6'); ALG_PAR.prefix(REF.FIRMA)";
_def.TABLE:="exec('ALG_PAR_tab','xls_spr_fin',_a)";
_def.TAB_IMP:="ALG_PAR";
_def.FIELDS:="exec('ALG_PAR_fld','xls_spr_fin',_a)";

_def.BEFORE:="ALG_PAR.cntx_psh()";
_def.AFTER:="ALG_PAR.cntx_pop()";
_def.SELECT:="exec('ALG_PAR_select','xls_spr_fin',_a)";

_def.EXPORT:="exec('ALG_PAR_exp','xls_spr_fin',_a,_b)";
_def.VALIDATE:="exec('ALG_PAR_valid','xls_spr_fin',_a,_b,_c)";
_def.IMPORT:="exec('ALG_PAR_imp','xls_spr_fin',_a,_b,_c)";
~~


\ALG_PAR_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('DEFWGR','Wiersz grupa',1,,'Grupa wiersza sprawozdania',2);
_def.define('DEFW','Wiersz',1,,'Wiersz sprawozdania',2);
_def.define('GR_KOLLP','Lp. kolumny zestawienia',1,,'Lp. kolumny sprawozdania',1);
_def.define('GR_KOL','Kolumna zestawienia',1,,'Kolumna sprawozdania',2);
_def.define('AKTYWNA','Aktywna',1,,'1 znakowy znacznik, czy algorytm aktywny',2);
_def.define('LP','Lp.',1,,'11 cyfrowa kolejna liczba porządkowa',1);
_def.define('FORMULA','Formuła',1,,'Formuła uniwersalna dla algorytmu',2);
_def.define('P1','Parametr 1',1,,'100 znakowy pierwszy parametr algorytmu',2);
_def.define('P2','Parametr 2',1,,'35 znakowy drugi parametr algorytmu',2);
_def.define('P3','Parametr 3',1,,'35 znakowy trzeci parametr algorytmu',2);
_def.define('P4','Parametr 4',1,,'35 znakowy czwarty parametr algorytmu',2);
_def.define('P5','Parametr 5',1,,'35 znakowy piąty parametr algorytmu',2);
_def.define('P6','Parametr 6',1,,'35 znakowy szósty parametr algorytmu',2);
_def.define('P7','Parametr 7',1,,'35 znakowy siódmy parametr algorytmu',2);
_def.define('P8','Parametr 8',1,,'35 znakowy ósmy parametr algorytmu',2);
_def.define('ROK','Obowiązuje w roku',1,,'Rok obowiązywania algorytmu',2);
_def.define('WSP','Współczynnik',1,,'27 cyfrowy współczynnik',1);
_def.define('SYSTEM','System',1,,'10 znakowy system',2);
_def.define('KS_IN_P1','Konto w parametrze 1',1,,'1 znakowy znacznik, czy zawiera maskę',2);
_def.define('WYL','Wyłączenia',1,,'1 znakowy znacznik, czy algorytm wyłączeń',2);
_def.define('FIRMAWYL','Firma wyłączenia',1,,'Wskazanie na firmę wyłączenia',2);
_def.define('FORM_WYL','Formuła firmy wyłączenia',1,,'wskazanie na formułę wyłączenia',2);
_def.define('MIEJSCE','Miejsce powstania',1,,'1 znakowy znacznik Firma lub Grupa',2);
~~


\ALG_PAR_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Zwraca tabelę do eksportu listy parametrów bieżącej firmy
::   WE: _a - tryb pracy: 1-eksport wszystkiego, 2-eksport jednego rekordu
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| sql('select ALG_PAR.REFERENCE as REF, (\':\' || ALG_PAR.IDADD || ALG_PAR.REFERENCE) as UIDREF from ALG_PAR join DEFW using (ALG_PAR.DEFW,DEFW.REFERENCE) join '+
       'GR_SIK using (DEFW.GRUPA,GR_SIK.REFERENCE) where GR_SIK.FIRMA=:_a',REF.FIRMA)
|| ALG_PAR
?}


\ALG_PAR_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;
_result:=0;

_tab:=tab_tmp(1,'GRUPA','STRING[10]','Grupa'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'ROK','STRING[20]','Rok'
   ,'LP','INTEGER','Lp.'
   ,'FORMULA','STRING[8]','Formuła');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'GRUPA',,,'ROK',,);
ALG_PAR.cntx_psh();
ALG_PAR.index('ALG_PAR1'); ALG_PAR.prefix();
{? ALG_PAR.first()
|| {! |?
      {? ALG_PAR.DEFW().GRUPA().FIRMA=REF.FIRMA
      || _tab.blank();
         _tab.REF:=$ALG_PAR.ref();
         _selected.prefix($ALG_PAR.ref());
         {? _selected.first()
         || _tab.SELECTED:='T'
         || _tab.SELECTED:='N'
         ?};
         _tab.GRUPA:=ALG_PAR.DEFW().GRUPA().SKROT;
         _tab.ROK:=ALG_PAR.ROK().NAZ;
         _tab.LP:=ALG_PAR.LP;
         _tab.FORMULA:=ALG_PAR.FORMULA().SKROT;
         _tab.add()
      ?};
      ALG_PAR.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'GRUPA,ROK,LP,FORMULA',20,'Wybór parametrów wierszy sprawozdań do eksportu'@,1);
{? _result>0
|| _selected.erase();
   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
ALG_PAR.cntx_pop();
_result


\ALG_PAR_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;
_tab:=_excel.table();
{? _tab=ALG_PAR | ALG_PAR.seek(_tab.REF)
|| _table.DEFWGR.VALUE:=ALG_PAR.DEFW().GRUPA().SKROT; _excel.write_async('GR_SIK',ALG_PAR.DEFW().GRUPA);
   _table.DEFW.VALUE:=ALG_PAR.DEFW().KOD;
   _table.GR_KOLLP.VALUE:=ALG_PAR.GR_KOL().LP;
   _table.GR_KOL.VALUE:=ALG_PAR.GR_KOL().NAZWA;
   _table.AKTYWNA.VALUE:=ALG_PAR.AKTYWNA;
   _table.LP.VALUE:=ALG_PAR.LP;
   _table.FORMULA.VALUE:=ALG_PAR.FORMULA().SKROT; _excel.write_async('FORMULA',ALG_PAR.FORMULA);
   _table.P1.VALUE:=ALG_PAR.P1;
   _table.P2.VALUE:=ALG_PAR.P2;
   _table.P3.VALUE:=ALG_PAR.P3;
   _table.P4.VALUE:=ALG_PAR.P4;
   _table.P5.VALUE:=ALG_PAR.P5;
   _table.P6.VALUE:=ALG_PAR.P6;
   _table.P7.VALUE:=ALG_PAR.P7;
   _table.P8.VALUE:=ALG_PAR.P8;
   _table.ROK.VALUE:=ALG_PAR.ROK().NAZ; _excel.write_async('ROK_F',ALG_PAR.ROK);
   _table.WSP.VALUE:=ALG_PAR.WSP;
   _table.SYSTEM.VALUE:=ALG_PAR.SYSTEM;
   _table.KS_IN_P1.VALUE:=ALG_PAR.KS_IN_P1;
   _table.WYL.VALUE:=ALG_PAR.WYL;
   _table.FIRMAWYL.VALUE:=ALG_PAR.FIRMAWYL().SYMBOL;
   _table.FORM_WYL.VALUE:=ALG_PAR.FORM_WYL().SKROT; _excel.write_async('FORMULA',ALG_PAR.FORM_WYL);
   _table.MIEJSCE.VALUE:=ALG_PAR.MIEJSCE
?};
_result


\ALG_PAR_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  OLD: \KS_ZEST_valid/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;

_grupa:=exec('FindInSet','#table','GR_SIK','SKROT',_table.DEFWGR,REF.FIRMA,,0);
{? _grupa=null
|| _result.MSG:='Nie znaleziono nagłówek sprawozdania: %1'@[_table.DEFWGR];
   _result.RESULT:=0
?};
{? _result.RESULT
|| _defw:=exec('FindInSet','#table','DEFW','GRUPA',_table.DEFW,_grupa,,1);
   {? _defw=null
   || _result.MSG:='Nie znaleziono definicji wiersza: %1'@[_table.DEFW];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT
|| _grkol:=exec('FindInSet','#table','GR_KOL','LP',_table.GR_KOL,_grupa,,1,_table.GR_KOLLP);
   {? _grkol=null
   || _result.MSG:='Nie znaleziono kolumny sprawozdania: %1'@[_table.GR_KOL];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT
|| _rok:=exec('FindInSet','#table','ROK_F','NAZWA',_table.ROK,REF.FIRMA,,1);
   {? _rok=null
   || _result.MSG:='Nie znaleziono roku o nazwie: %1'@[_table.ROK];
      _result.RESULT:=0
   ?}
?};
{? _result.RESULT
|| ALG_PAR.index('ALG_PAR6');
   ALG_PAR.prefix(REF.FIRMA,_table.WYL,_defw,_grkol,_rok,_table.MIEJSCE,_table.LP);
   {? ALG_PAR.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || ALG_PAR.blank() ?};
      ALG_PAR.FIRMA:=REF.FIRMA;
      ALG_PAR.DEFW:=_defw;
      ALG_PAR.GR_KOL:=_grkol;
      ALG_PAR.AKTYWNA:=_table.AKTYWNA;
      ALG_PAR.LP:=_table.LP;
      ALG_PAR.FORMULA:=exec('FindInSet','#table','FORMULA','FORMULA4',_table.FORMULA,'#',,1);
      ALG_PAR.P1:=_table.P1;
      ALG_PAR.P2:=_table.P2;
      ALG_PAR.P3:=_table.P3;
      ALG_PAR.P4:=_table.P4;
      ALG_PAR.P5:=_table.P5;
      ALG_PAR.P6:=_table.P6;
      ALG_PAR.P7:=_table.P7;
      ALG_PAR.P8:=_table.P8;
      ALG_PAR.ROK:=_rok;
      ALG_PAR.WSP:=_table.WSP;
      ALG_PAR.SYSTEM:=_table.SYSTEM;
      ALG_PAR.KS_IN_P1:=_table.KS_IN_P1;
      ALG_PAR.WYL:=_table.WYL;
      ALG_PAR.FIRMAWYL:=exec('FindInSet','#table','FIRMA','SYMBOL',_table.FIRMAWYL,,,1);
      ALG_PAR.FORM_WYL:=exec('FindInSet','#table','FORMULA','FORMULA4',_table.FORM_WYL,'w',,1);
      ALG_PAR.MIEJSCE:=_table.MIEJSCE
   ?}
?};
~~


\ALG_PAR_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \KS_ZEST_import/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=ALG_PAR.add(1)
   |? _validate.ACTION='put'
   || _result:=ALG_PAR.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie ALG_PAR %1 nie powiodło się.'[$_table.LP]
   || _validate.MSG:='Poprawa ALG_PAR %1 nie powiodła się.'[$_table.LP]
   ?}
?};
_result


\W_STR
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='W_STR';
_def.FUNPAR:='ZWS_PAR_FSPR';
_def.FILE:=exec('def_kst_xlsx','xls__init');
_def.FUNPAR:='ZWS_PAR_ASGR';
_def.DOMAIN:=exec('name','#b_domain','FKS');
_def.SHEET:='Struktura grupy kapitałowej'@+'=1,1';
_def.NAME:='Struktura grupy kapitałowej'@;
_def.DESC:='Struktura grupy kapitałowej'@;

_def.PREFIX:="W_STR.index('FIRMA'); W_STR.prefix(REF.FIRMA)";
_def.TABLE:="W_STR";
_def.FIELDS:="exec('W_STR_fld','xls_spr_fin',_a)";

_def.BEFORE:="W_STR.cntx_psh()";
_def.AFTER:="W_STR.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('W_STR_exp','xls_spr_fin',_a,_b)";
_def.VALIDATE:="exec('W_STR_valid','xls_spr_fin',_a,_b,_c)";
_def.IMPORT:="exec('W_STR_imp','xls_spr_fin',_a,_b,_c)";
~~


\W_STR_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('W_SCH','Schemat',1,,'Wskazanie na schemat grupy kapitałowej');
_def.define('ODD','Jednostka księgowa',1,,'Wskazanie na jednostkę');
_def.define('OPIS','Opis',1,,'Opis elementu struktury grupy');
_def.define('WSP','Współczynnik [%]',1,,'5 cyforowy współczynnik udziału firmy w elemencie grupy');
_def.define('TREE','Drzewo',1,,'Wskazanie na element nadrzędny');
~~


\W_STR_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;

_table.W_SCH.VALUE:=W_STR.W_SCH().NAZ; _excel.write_async('W_SCH',W_STR.W_SCH);
_table.ODD.VALUE:=W_STR.ODD().OD; _excel.write_async('ODD',W_STR.ODD);
_table.OPIS.VALUE:=W_STR.OPIS;
_table.WSP.VALUE:=W_STR.WSP;
_table.TREE.VALUE:=W_STR.TREE;

_result


\W_STR_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  OLD: \KS_ZEST_valid/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;
_odd:=exec('FindInSet','#table','ODD','ODDZIALY',_table.ODD,REF.FIRMA,,1);
{? _odd=null
|| _result.MSG:='Nie znaleziono oddziału %1'@[_table.ODD];
   _result.RESULT:=0
?};

_wsch:={? _table.W_SCH=''
       || null
       || exec('FindInSet','#table','W_SCH','NAZ',_table.W_SCH,,,1)
       ?};

{? _wsch=null
|| _result.MSG:='Nie znaleziono schematu grupy kapitałowej: %1'@[_table.W_SCH];
   _result.RESULT:=0
?};
{? _result.RESULT
|| W_STR.index('FIRMA'); W_STR.prefix(_wsch,REF.FIRMA,_odd);
   {? W_STR.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || W_STR.blank() ?};
      W_STR.W_SCH:=_wsch;
      W_STR.TREE:=#_table.TREE;
      W_STR.FIRMA:=REF.FIRMA;
      W_STR.ODD:=_odd;
      W_STR.OPIS:=_table.OPIS;
      W_STR.WSP:=_table.WSP
   ?}
?};
~~


\W_STR_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::  OLD: \KS_ZEST_import/xls_ks.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=W_STR.add(1)
   |? _validate.ACTION='put'
   || _result:=W_STR.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie W_STR %1 nie powiodło się.'@[_table.OPIS]
   || _validate.MSG:='Poprawa W_STR %1 nie powiodła się.'@[_table.OPIS]
   ?}
?};
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 d394b0bf7f329bb38c5249728d51c613fbced4116c239c0054c5df4f35e6c1ac375af645efc17292761ae19e10428cfcb3be1284874cfa6f542f06308bcaf2f29e7377d232bc720ae82a3ebaa9ebc8dad03aeda24f7a3c27eecf0592a8b0d73033334ec53847623b632211f8d38a4add451088fef5e51d9c8a301dace0b577cd
