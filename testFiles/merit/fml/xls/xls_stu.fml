:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_stu.fml
:: Utworzony: 09.01.2019
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu definicji statusów umów
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='STU';
_def.DOMAIN:=exec('name','#b_domain','LUM');
_def.FUNPAR:='ZWS_PAR_USTU';

_def.FILE:='umowy_cykliczne.xlsx';
_def.SHEET:='Statusy umów=1,1';
_def.NAME:='Statusy umów'@;
_def.DESC:='Statusy umów';

_def.PREFIX:="exec('prefix','xls_stu')";
_def.TABLE:="exec('table','xls_stu')";
_def.FIELDS:="exec('fields','xls_stu',_a)";

_def.BEFORE:="STU.cntx_psh()";
_def.AFTER:="STU.cntx_pop()";
_def.SELECT:="exec('select','xls_stu',_a)";

_def.EXPORT:="exec('export','xls_stu',_a,_b)";
_def.IMPORT:="exec('import','xls_stu',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_stu',_a,_b,_c)";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
STU.index('KOD');
STU.prefix();
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
STU


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('KOD','Kod',0,,'Kod statusy umowy (wymagany) - 1 znak.'@);
_def.define('NAZ','Nazwa',0,,'Nazwa statusu umowy (wymagana) - maksymalnie 30 znaków.'@);
_def.define('A','Aktywna umowa',0,,'Umowa aktywna? [T/N].'@);
_def.define('F','Formuła przed',0,,'Formuła wykonywana przed - maksymalnie 255 znaków.'@);
_def.define('FP','Formuła po',0,,'Formuła wykonywana po - maksymalnie 255 znaków.'@);
_def.define('GZ','Generować zgłoszenia',0,,'Czy generować zgłoszenia? [T/N].'@);
_def.define('RODZ','Rodzaj umowy',0,,
'Rodzaj umowy:
(N) - Nowa
(E) - Aneksowana
brak - Inna
'@);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

STU.index('KOD');
STU.prefix();
{? _validate.ACTION='add'
||
   STU.blank();
   STU.KOD:=_obj.KOD;
   STU.NAZ:=_obj.NAZ
?};

STU.A:=_obj.A;
STU.F:=_obj.F;
STU.FP:=_obj.FP;
STU.GZ:=_obj.GZ;
STU.RODZ:=_obj.RODZ;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.KOD.VALUE:=STU.KOD;
_table.NAZ.VALUE:=STU.NAZ;
_table.A.VALUE:=STU.A;
_table.F.VALUE:=STU.F;
_table.FP.VALUE:=STU.FP;
_table.GZ.VALUE:=STU.GZ;
_table.RODZ.VALUE:=STU.RODZ;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

{? (+form(_obj.KOD))<>1     || _result.msg_empty('KOD'); _result.RESULT:=0
|? (+form(_obj.NAZ))=0      || _result.msg_empty('NAZ'); _result.RESULT:=0
|? ~((';TN'*_obj.A)>1)      || _result.msg_inset('A','T','N'); _result.RESULT:=0
|? ~((';TN'*_obj.GZ)>1)     || _result.msg_inset('GZ','T','N'); _result.RESULT:=0
|? _obj.RODZ<>'' & ~((';NE'*_obj.RODZ)>1) || _result.msg_inset('RODZ','N','E','pusta wartość'); _result.RESULT:=0
?};

{? _result.RESULT=1
||
   STU.index('KOD');
   STU.prefix(_obj.KOD,);
   {? STU.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_stu',_obj,_mode,_result)
      ?}
   || _result.ACTION:='add';
      exec('record','xls_stu',_obj,_mode,_result)
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=STU.add(1)
   |? _validate.ACTION='put'
   || _result:=STU.put(1)
   ?}
?};
{? _result=0
|| _validate.MSG:={? _validate.ACTION='add'
                  || 'Dodanie statusu umowy %1 nie powiodło się.'@[STU.KOD]
                  || 'Modyfikacja statusu umowy %1 nie powiodła się.'@[STU.KOD]
                  ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'KOD','STRING[1]','Kod'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'NAZ','STRING[30]','Nazwa'
   ,'GZ','STRING[1]','Generować zgłoszenia?'
   ,'RODZ','STRING[1]','Rodzaj'
   ,'F','STRING[255]','Formuła przed'
   ,'FP','STRING[255]','Formuła po');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

STU.cntx_psh();
STU.index('KOD');
STU.prefix();
{? STU.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$STU.ref();
      _selected.prefix($STU.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:=STU.KOD;
      _tab.NAZ:=STU.NAZ;
      _tab.RODZ:=STU.RODZ;
      _tab.GZ:=STU.GZ;
      _tab.F:=STU.F;
      _tab.FP:=STU.FP;
      _tab.add();
      STU.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'KOD,NAZ,RODZ,GZ,F,FP',20,'Wybór statusów umów do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
STU.cntx_pop();
_result

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:51 84db57301118fb3d0cc9451b3f5af3f1f9bd1b6271deab071d02d04f5f5fcd5987616c61184294c6d73cd49cdaa07aeb884bcdd2ce8a1cb7a31d99dbb502fab8086ea75851e3c5f9c4f53a1954f29d93345484cd9a05a9e4cb0011fbe2fefba7012c95e45e1b06c6fa016d17de58829e6b021a8fc5050690b234fa6f2ea5908d
