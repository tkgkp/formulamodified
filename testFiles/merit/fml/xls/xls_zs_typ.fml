:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_zs_typ.fml
:: Utworzony: 05.08.2020
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu konfiguracji
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='ZS_TYP';
_def.FUNPAR:='ZWS_PAR_PZSL';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:='zaleznosci_sluzbowe.xlsx';
_def.SHEET:='Typy zależności=1,1';
_def.NAME:='Typy zależności'@;
_def.DESC:='Typy zależności';
_def.ADD_ROWS:=0;
_def.HIDDEN:='N';

: źródło danych
_def.TABLE:="ZS_TYP";

: prolog
_def.BEFORE:="
   _arg:=_a;
   ZS_TYP.cntx_psh();
   {? _arg.is_import()
   || ZS_TYP.index('UNIQUE')
   || ZS_TYP.index('TREE')
   ?};
   ZS_TYP.prefix(exec('ref_firma','ustawienia'));
   ~~
";

: epilog
_def.AFTER:="
   ZS_TYP.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('SLO_KOD', MS.name(ZS_TYP,'SLO_KOD'),0,, MS.comment(ZS_TYP,'SLO_KOD'));
   _env.define('NAZWA',   MS.name(SLO_KOD,'NAZWA'),0,,  MS.comment(SLO_KOD,'NAZWA'));
   _env.define('KOD_NAD', MS.name(ZS_TYP,'KOD_NAD'),0,, MS.comment(ZS_TYP,'KOD_NAD'));
   _env.define('DOMYSLNY',MS.name(ZS_TYP,'DOMYSLNY'),0,,MS.comment(ZS_TYP,'DOMYSLNY'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="exec('export','xls_zs_typ',_a,_b)";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_zs_typ',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_zs_typ',_a,_b,_c)";
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Ustawia wartości w polach bufora danych i asynchronicznie zapisuje powiązane dane.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_buf:=_b;
ZS_TYP.SLO_KOD();
_buf.SLO_KOD.VALUE:=SLO_KOD.KOD;
_buf.NAZWA.VALUE:=SLO_KOD.NAZWA;
_buf.KOD_NAD.VALUE:=ZS_TYP.KOD_NAD().KOD;
_buf.DOMYSLNY.VALUE:=ZS_TYP.DOMYSLNY;

:: opisy typów zależności służbowych
_env.write_async('SLO_KOD',ZS_TYP.SLO_KOD);
_env.write_async('SLO_KOD',ZS_TYP.KOD_NAD);

1


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.SLO_KOD=''  || 'SLO_KOD'
   |? _buf.DOMYSLNY='' || 'DOMYSLNY'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

:: błędne wartości
{? ('TN'*(1+_buf.DOMYSLNY))=0
|| _val.msg_inset('DOMYSLNY','T','N');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(SLO_KOD,'KOD');
{? +_buf.SLO_KOD>_max
|| _val.msg_length('SLO_KOD',_max);
   _buf.SLO_KOD:=_max+_buf.SLO_KOD
?};
{? +_buf.KOD_NAD>_max
|| _val.msg_length('KOD_NAD',_max);
   _buf.KOD_NAD:=_max+_buf.KOD_NAD
?};

{? (_kod:=exec('kod','ext_slo','TYPPOZ',_buf.SLO_KOD))=null
|| _val.msg_norec('SLO_KOD');
   _val.RESULT:=0;
   return()
?};

_nad:=null;
{? _buf.KOD_NAD<>''
|| {? (_nad:=exec('kod','ext_slo','TYPPOZ',_buf.KOD_NAD))=null()
   || _val.msg_norec('KOD_NAD');
      _val.RESULT:=0;
      return()
   ?}
?};

_ref:=null;
{? ZS_TYP.find_key(_kod)
|| _ref:=ZS_TYP.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 %2'[_a.SLO_KOD,_a.KOD_NAD]",
   'SLO_KOD',_kod,
   'KOD_NAD',_nad
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,ZS_TYP,"
   _a.FIRMA:=exec('ref_firma','ustawienia');
   _a.SLO_KOD:=_c.SLO_KOD;
   _a.KOD_NAD:=_c.KOD_NAD;
   _a.DOMYSLNY:=_b.DOMYSLNY;
   ~~
");
~~

:Sign Version 2.0 jowisz:1048 2021/04/09 15:28:03 c77a40753cb016dd6d169f82ff6999a2ace607cb56f89544212475571cf9c5f53c0b4927fbef155c5605a731b14d9a43e818d391f4511045cdc9aee204dd871896a62d53218bcd13817784ebdde53390f63a24bcc46d4c243ed1903a8051755646c1ec7d6e9ae90b943c988ce8be2336d30cc451d70ac7248cabb1b2500e1df9
