:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_baselinker.fml
:: Utworzony: 21.08.2020
:: Autor: PD
:: Systemy:
::======================================================================================================================
:: Zawartość:
::======================================================================================================================
\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='BASELINKER';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_PAR_BASL';

_def.FILE:='parametryzacja.xlsx';
_def.SHEET:='Kanały sprzedaży=1,1';
_def.NAME:='Kanały sprzedaży'@;
_def.DESC:='Kanały sprzedaży';

_def.PREFIX:="exec('prefix','xls_baselinker')";
_def.TABLE:="exec('table','xls_baselinker')";
_def.FIELDS:="exec('fields','xls_baselinker',_a)";

_def.BEFORE:="BASLIN_K.cntx_psh()";
_def.AFTER:="BASLIN_K.cntx_pop()";
_def.SELECT:="exec('select','xls_baselinker',_a)";

_def.EXPORT:="exec('export','xls_baselinker',_a,_b)";
_def.VALIDATE:="exec('validate','xls_baselinker',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_baselinker',_a,_b,_c)";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
BASLIN_K.prefix();
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
BASLIN_K


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('ID','ID',1,,'20 znakowy identyfikator');
_def.define('NAME','Nazwa',1,,'100 znakowa nazwa');
_def.define('DESC','Opis',1,,'100 znakowy opis');
_def.define('AKT','Aktywność',1,,'T/N czy kanał aktywny');
_def.define('TYPE','Typ',1,,'K/Z czy kanał sprzedaży czy źródło zamówienia');
_def.define('TYPYZAM','Typ zamówienia',1,,'8 znakowy kod typu zamówienia');
_def.define('ODDZ','Oddział',1,,'1 znakowy kod oddziału');
_def.define('ZK_N_ID','Identyfikator zamówienia',1,,'20 znakowy identyfikator ostatniego zamówienia');
_def.define('TAR_ID','Cennik domyślny',1,,'20 znakowy identyfikator domyślnego cennika');
_def.define('MG_ID','Magazyn domyślny',1,,'20 znakowy identyfikator domyślnego magazynu');
_def.define('EFAK','Przesyłanie e-faktury',1,,'2 znakowy znacznik kiedy należy przesyłać e-fakturę');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
BASLIN_K.prefix();
{? _validate.ACTION='add'
||
   BASLIN_K.blank()
?};

BASLIN_K.ID:=_obj.ID;
BASLIN_K.NAME:=_obj.NAME;
BASLIN_K.DESC:=_obj.DESC;
BASLIN_K.AKT:=_obj.AKT;
BASLIN_K.TYPE:=_obj.TYPE;
BASLIN_K.TYPYZAM:=(
TYPYZAM.cntx_psh();
TYPYZAM.index('TYPN');
TYPYZAM.prefix(_obj.TYPYZAM);
_wyn:={? _obj.TYPYZAM='' | ~TYPYZAM.first() || null() || TYPYZAM.ref() ?};
TYPYZAM.cntx_pop();
_wyn);
BASLIN_K.ODDZ:=(
ODDZ.cntx_psh();
ODDZ.index('KOD');
ODDZ.prefix(_obj.ODDZ);
_wyn:={? _obj.ODDZ='' | ~ODDZ.first() || null() || ODDZ.ref() ?};
ODDZ.cntx_pop();
_wyn);
BASLIN_K.ZK_N_ID:=_obj.ZK_N_ID;
BASLIN_K.TAR_ID:=_obj.TAR_ID;
BASLIN_K.MG_ID:=_obj.MG_ID;
BASLIN_K.EFAK:=_obj.EFAK;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.ID.VALUE:=BASLIN_K.ID;
_table.NAME.VALUE:=BASLIN_K.NAME;
_table.DESC.VALUE:=BASLIN_K.DESC;
_table.AKT.VALUE:=BASLIN_K.AKT;
_table.TYPE.VALUE:=BASLIN_K.TYPE;
_table.TYPYZAM.VALUE:=(
TYPYZAM.cntx_psh();
_wyn:={? BASLIN_K.TYPYZAM || BASLIN_K.TYPYZAM().T || '' ?};
TYPYZAM.cntx_pop();
_wyn);
_table.ODDZ.VALUE:=(
ODDZ.cntx_psh();
_wyn:={? BASLIN_K.ODDZ || BASLIN_K.ODDZ().KOD || '' ?};
ODDZ.cntx_pop();
_wyn);
_table.ZK_N_ID.VALUE:=BASLIN_K.ZK_N_ID;
_table.TAR_ID.VALUE:=BASLIN_K.TAR_ID;
_table.MG_ID.VALUE:=BASLIN_K.MG_ID;
_table.EFAK.VALUE:=BASLIN_K.EFAK;

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

{? (+_obj.ID)>20 || _result.msg_length('ID',20); _result.RESULT:=0 ?};
{? (+_obj.NAME)>100 || _result.msg_length('NAME',100); _result.RESULT:=0 ?};
{? (+_obj.DESC)>100 || _result.msg_length('DESC',100); _result.RESULT:=0 ?};
{? _obj.AKT<>'N' & _obj.AKT<>'T' || _result.msg_inset('AKT','N','T');_result.RESULT:=0 ?};
{? _obj.TYPE<>'K' & _obj.TYPE<>'Z' || _result.msg_inset('TYPE','K','Z');_result.RESULT:=0 ?};
{? (+_obj.TYPYZAM)>8 || _result.msg_length('TYPYZAM',8); _result.RESULT:=0 ?};
{? (+_obj.ODDZ)>1 || _result.msg_length('ODDZ',1); _result.RESULT:=0 ?};
{? (+_obj.ZK_N_ID)>20 || _result.msg_length('ZK_N_ID',20); _result.RESULT:=0 ?};
{? (+_obj.TAR_ID)>20 || _result.msg_length('TAR_ID',20); _result.RESULT:=0 ?};
{? (+_obj.MG_ID)>20 || _result.msg_length('MG_ID',20); _result.RESULT:=0 ?};
{? (+_obj.EFAK)>2 || _result.msg_length('EFAK',2); _result.RESULT:=0 ?};

{? _obj.NAME='' || _result.msg_empty('NAME'); _result.RESULT:=0 ?};
{? _obj.DESC='' || _result.msg_empty('DESC'); _result.RESULT:=0 ?};

BASLIN_K.index('NAME');
BASLIN_K.prefix(_obj.TYPE,_obj.NAME,);
{? BASLIN_K.first()
||
   {? _mode=0
   || _result.RESULT:=0
   ||
      _result.ACTION:='put';
      exec('record','xls_abs_sta',_obj,_mode,_result)
   ?}
||
   _result.ACTION:='add';
   exec('record','xls_abs_sta',_obj,_mode,_result)
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      BASLIN_K.prefix();
      _result:=BASLIN_K.add(1)
   |? _validate.ACTION='put'
   ||
      BASLIN_K.prefix();
      _result:=BASLIN_K.put(1)
   ?}
?};
{? _result=0
||

   {? _validate.ACTION='add'
   ||
      _validate.MSG:='Dodanie %1 nie powiodło się.'@[_obj.NAZ]
   ||
      _validate.MSG:='Poprawa %1 nie powiodła się.'@[_obj.NAZ]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(2,'NAME','STRING[100]','Nazwa'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'TYPE','STRING[1]','Typ'
   ,'ID','STRING[20]','ID'
   );

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'NAME',,);

BASLIN_K.cntx_psh();
BASLIN_K.index('NAME');
BASLIN_K.prefix();
{? BASLIN_K.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$BASLIN_K.ref();
      _selected.prefix($BASLIN_K.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.NAME:=BASLIN_K.NAME;
      _tab.TYPE:=BASLIN_K.TYPE;
      _tab.ID:=BASLIN_K.ID;
      _tab.add();
      BASLIN_K.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'NAME',20,'Wybór kanłów sprzedaży i źródeł zamówień do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
BASLIN_K.cntx_pop();

_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 492bfda5e2325f238ee9fcf91979e9b5833b8d6d0e93a3d31f2c28d2b091828f0b0c140f9c8dcfec22561b79d4a9bff32d93c0e74fdcb5669c73acddf966d09d132e2935a4afa330f69a24fbb8f1267211292e519f0b6b2655df6860d3adc3e48672010edbbcf479b8ea49b652bfd715cae3a6f337f64c606c81ca4e5b2ae411
