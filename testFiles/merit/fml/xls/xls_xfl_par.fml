:!UTF-8
:: (c) Asseco Business Solutions S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_xfl_par.fml
:: Utworzony: 03.02.2021
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu konfiguracji
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_def:=_a;

_def.ID:='XFL_PAR';
_def.FUNPAR:='ZWS_PAR_XFL';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_xfl_xlsx','xls__init');
_def.SHEET:='Parametry filtrów=1,1';
_def.NAME:='Parametry filtrów'@;
_def.DESC:='Parametry filtrów';
_def.ADD_ROWS:=0;
_def.HIDDEN:='N';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="XFL_PAR";

: prolog
_def.BEFORE:="
   XFL_PAR.cntx_psh();
   XFL_PAR.f_clear();
   XFL_PAR.clear();
   XFL_PAR.index('KOD_NR');
   XFL_DEF.cntx_psh();
   XFL_DEF.f_clear();
   XFL_DEF.clear();
   XFL_DEF.index('KOD');
   ~~
";

: epilog
_def.AFTER:="
   XFL_DEF.cntx_pop();
   XFL_PAR.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('KOD',     MS.name(XFL_PAR,'KOD'),0,,     MS.comment(XFL_PAR,'KOD'),type_of(''));
   _env.define('XFL_DEF', MS.name(XFL_PAR,'XFL_DEF'),0,, MS.comment(XFL_PAR,'XFL_DEF'),type_of(''));
   _env.define('NUMER',   MS.name(XFL_PAR,'NUMER'),0,,   MS.comment(XFL_PAR,'NUMER'),,0);
   _env.define('SYMBOL',  MS.name(XFL_PAR,'SYMBOL'),0,,  MS.comment(XFL_PAR,'SYMBOL'));
   _env.define('NAZWA',   MS.name(XFL_PAR,'NAZWA'),0,,   MS.comment(XFL_PAR,'NAZWA'));
   _env.define('OPIS',    MS.name(XFL_PAR,'OPIS'),0,,    MS.comment(XFL_PAR,'OPIS'));
   _env.define('WIDOCZNY',MS.name(XFL_PAR,'WIDOCZNY'),0,,MS.comment(XFL_PAR,'WIDOCZNY'));
   _env.define('WYMAGANY',MS.name(XFL_PAR,'WYMAGANY'),0,,MS.comment(XFL_PAR,'WYMAGANY'));
   _env.define('TYP',     MS.name(XFL_PAR,'TYP'),0,,     MS.comment(XFL_PAR,'TYP'));
   _env.define('DLUGOSC', MS.name(XFL_PAR,'DLUGOSC'),0,, MS.comment(XFL_PAR,'DLUGOSC'),,0);
   _env.define('PRECYZJA',MS.name(XFL_PAR,'PRECYZJA'),0,,MS.comment(XFL_PAR,'PRECYZJA'),,0);
   _env.define('OKIENKO', MS.name(XFL_PAR,'OKIENKO'),0,, MS.comment(XFL_PAR,'OKIENKO'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="exec('export','xls_xfl_par',_a,_b)";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_xfl_par',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_xfl_par',_a,_b,_c)";
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Ustawia wartości w polach bufora danych i asynchronicznie zapisuje powiązane dane.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_env:=_a;
_buf:=_b;

_buf.KOD.VALUE:=XFL_PAR.KOD;
_buf.XFL_DEF.VALUE:=XFL_PAR.XFL_DEF().KOD;
_buf.NUMER.VALUE:=XFL_PAR.NUMER;
_buf.SYMBOL.VALUE:=XFL_PAR.SYMBOL;
_buf.NAZWA.VALUE:=XFL_PAR.NAZWA;
_buf.OPIS.VALUE:=XFL_PAR.memo_txt(,1,'OPIS');
_buf.WIDOCZNY.VALUE:=XFL_PAR.WIDOCZNY;
_buf.WYMAGANY.VALUE:=XFL_PAR.WYMAGANY;
_buf.TYP.VALUE:=XFL_PAR.TYP;
_buf.DLUGOSC.VALUE:=XFL_PAR.DLUGOSC;
_buf.PRECYZJA.VALUE:=XFL_PAR.PRECYZJA;
_buf.OKIENKO.VALUE:=XFL_PAR.memo_txt(,1,'OKIENKO');

_env.write_async('XFL_DEF',XFL_PAR.XFL_DEF);

1


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.KOD=''      || 'KOD'
   |? _buf.XFL_DEF=''  || 'XFL_DEF'
   |? _buf.SYMBOL=''   || 'SYMBOL'
   |? _buf.NAZWA=''    || 'NAZWA'
   |? _buf.WIDOCZNY='' || 'WIDOCZNY'
   |? _buf.WYMAGANY='' || 'WYMAGANY'
   |? _buf.TYP=''      || 'TYP'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

:: błędne wartości
{? ('TN'*(1+_buf.WIDOCZNY))=0
|| _val.msg_inset('WIDOCZNY','T','N');
   _val.RESULT:=0;
   return()
?};
{? ('TN'*(1+_buf.WYMAGANY))=0
|| _val.msg_inset('WYMAGANY','T','N');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(XFL_PAR,'KOD');
{? +_buf.KOD>_max
|| _val.msg_length('KOD',_max);
   _buf.KOD:=_max+_buf.KOD
?};
_max:=MS.fld_len(XFL_DEF,'KOD');
{? +_buf.XFL_DEF>_max
|| _val.msg_length('XFL_DEF',_max);
   _buf.XFL_DEF:=_max+_buf.XFL_DEF
?};
_max:=MS.fld_len(XFL_PAR,'SYMBOL');
{? +_buf.SYMBOL>_max
|| _val.msg_length('SYMBOL',_max);
   _buf.SYMBOL:=_max+_buf.SYMBOL
?};
_max:=MS.fld_len(XFL_PAR,'NAZWA');
{? +_buf.NAZWA>_max
|| _val.msg_length('NAZWA',_max);
   _buf.NAZWA:=_max+_buf.NAZWA
?};
_max:=MS.fld_len(XFL_PAR,'WIDOCZNY');
{? +_buf.WIDOCZNY>_max
|| _val.msg_length('WIDOCZNY',_max);
   _buf.WIDOCZNY:=_max+_buf.WIDOCZNY
?};
_max:=MS.fld_len(XFL_PAR,'WYMAGANY');
{? +_buf.WYMAGANY>_max
|| _val.msg_length('WYMAGANY',_max);
   _buf.WYMAGANY:=_max+_buf.WYMAGANY
?};

: weryfikacja spójności referencyjnej
_def:=null;
{? XFL_DEF.find_key(_buf.XFL_DEF,)
|| _def:=XFL_DEF.ref()
|| _val.msg_norec('XFL_DEF');
   _val.RESULT:=0;
   return()
?};

_ref:=null;
{? XFL_PAR.find_tab(,'KOD',,'=',_buf.KOD)
|| _ref:=XFL_PAR.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 - %2'[_a.KOD,_a.NAZWA]",
   'XFL_DEF',_def
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,XFL_PAR,"
   _a.KOD:=_b.KOD;
   _a.XFL_DEF:=_c.XFL_DEF;
   _a.NUMER:=_b.NUMER;
   _a.SYMBOL:=_b.SYMBOL;
   _a.NAZWA:=_b.NAZWA;
   _a.memo_set(_b.OPIS,'OPIS');
   _a.WIDOCZNY:=_b.WIDOCZNY;
   _a.WYMAGANY:=_b.WYMAGANY;
   _a.TYP:=_b.TYP;
   _a.DLUGOSC:=_b.DLUGOSC;
   _a.PRECYZJA:=_b.PRECYZJA;
   _a.memo_set(_b.OKIENKO,'OKIENKO');
   ~~
",'OPIS,OKIENKO');
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:12 76deae7f03202321c93b74e4c1b44be524947dfb0693a5224864ac5538cabd6a2b637430e76894f583ec1783b1e1c5702b2a1ed0f8f53108414156ee27c8b1fc15b5414195c77b578bea7066dc5e45c621e417384454c9eea19e98e3382bf6a367860f8e2699a8b1618c0add90bf432d02ae7ee8d880fd16ec0f4334ca3c738e
