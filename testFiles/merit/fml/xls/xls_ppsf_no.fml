:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_ppsf_no.fml
:: Utworzony: 19.04.2023
:: Autor: IS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu typów oświadczeń pracy zdalnej
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='PPSF_NO';
_def.FUNPAR:='ZWS_PAR_PPZO';
_def.DOMAIN:=exec('name','#b_domain','PRC');
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.SHEET:='Typy ośw. pracy poza siedzibą=1,1';
_def.NAME:='Typy ośw. pracy poza siedzibą'@;
_def.DESC:='Typy oświadczeń pracy poza siedzibą';

: źródło danych
_def.TABLE:="PPSF_NO";

: prolog
_def.BEFORE:="
   PPSF_NO.cntx_psh();
   PPSF_NO.index('KOD');
   PPSF_NO.prefix(exec('firma','ustawienia'));
   ~~
";

: epilog
_def.AFTER:="
   PPSF_NO.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _tStr:=type_of('');
   _env.define('KOD',    MS.name(PPSF_NO,'KOD'),1,,    MS.comment(PPSF_NO,'KOD'),_tStr);
   _env.define('OPIS',   MS.name(PPSF_NO,'OPIS'),1,,   MS.comment(PPSF_NO,'OPIS'),_tStr);
   _env.define('SYSTEM', MS.name(PPSF_NO,'SYSTEM'),1,, MS.comment(PPSF_NO,'SYSTEM'),_tStr);
   _env.define('W1',     MS.name(PPSF_NO,'W1'),1,,     MS.comment(PPSF_NO,'W1'),_tStr);
   _env.define('TR1',    MS.name(PPSF_NO,'TR1'),1,,    MS.comment(PPSF_NO,'TR1'),_tStr);
   _env.define('W2',     MS.name(PPSF_NO,'W2'),1,,     MS.comment(PPSF_NO,'W2'),_tStr);
   _env.define('TR2',    MS.name(PPSF_NO,'TR2'),1,,    MS.comment(PPSF_NO,'TR2'),_tStr);
   _env.define('W3',     MS.name(PPSF_NO,'W3'),1,,     MS.comment(PPSF_NO,'W3'),_tStr);
   _env.define('TR3',    MS.name(PPSF_NO,'TR3'),1,,    MS.comment(PPSF_NO,'TR3'),_tStr);
   _env.define('W4',     MS.name(PPSF_NO,'W4'),1,,     MS.comment(PPSF_NO,'W4'),_tStr);
   _env.define('TR4',    MS.name(PPSF_NO,'TR4'),1,,      MS.comment(PPSF_NO,'TR4'),_tStr);
   _env.define('W5',     MS.name(PPSF_NO,'W5'),1,,       MS.comment(PPSF_NO,'W5'),_tStr);
   _env.define('TR5',    MS.name(PPSF_NO,'TR5'),1,,      MS.comment(PPSF_NO,'TR5'),_tStr);
   _env.define('W6',     MS.name(PPSF_NO,'W6'),1,,       MS.comment(PPSF_NO,'W6'),_tStr);
   _env.define('TR6',    MS.name(PPSF_NO,'TR6'),1,,      MS.comment(PPSF_NO,'TR6'),_tStr);
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.KOD.VALUE:=PPSF_NO.KOD;
   _buf.OPIS.VALUE:=PPSF_NO.OPIS;
   _buf.SYSTEM.VALUE:=PPSF_NO.SYSTEM;
   _buf.W1.VALUE:=PPSF_NO.W1;
   _buf.TR1.VALUE:=PPSF_NO.TR1;
   _buf.W2.VALUE:=PPSF_NO.W2;
   _buf.TR2.VALUE:=PPSF_NO.TR2;
   _buf.W3.VALUE:=PPSF_NO.W3;
   _buf.TR3.VALUE:=PPSF_NO.TR3;
   _buf.W4.VALUE:=PPSF_NO.W4;
   _buf.TR4.VALUE:=PPSF_NO.TR4;
   _buf.W5.VALUE:=PPSF_NO.W5;
   _buf.TR5.VALUE:=PPSF_NO.TR5;
   _buf.W6.VALUE:=PPSF_NO.W6;
   _buf.TR6.VALUE:=PPSF_NO.TR6;
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_ppsf_no',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_ppsf_no',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.KOD=''            || 'KOD'
   |? _buf.OPIS=''           || 'OPIS'
   |? _buf.SYSTEM=''         || 'SYSTEM'
   |? _buf.W1=''             || 'W1'
   |? _buf.TR1=''            || 'TR1'
   |? +_buf.TR2 & _buf.W2='' || 'W2'
   |? +_buf.W2 & _buf.TR2='' || 'TR2'
   |? +_buf.TR3 & _buf.W3='' || 'W3'
   |? +_buf.W3 & _buf.TR3='' || 'TR3'
   |? +_buf.TR4 & _buf.W4='' || 'W4'
   |? +_buf.W4 & _buf.TR4='' || 'TR4'
   |? +_buf.TR5 & _buf.W5='' || 'W5'
   |? +_buf.W5 & _buf.TR5='' || 'TR5'
   |? +_buf.TR6 & _buf.W6='' || 'W6'
   |? +_buf.W6 & _buf.TR6='' || 'TR6'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? ('NT'*_buf.SYSTEM)=0
|| _val.msg_inset('SYSTEM','N','T');
   _val.RESULT:=0;
   return()
|? ('NT'*_buf.W1)=0
|| _val.msg_inset('W1','N','T');
   _val.RESULT:=0;
   return()
|? +_buf.W2 & ('NT'*_buf.W2)=0
|| _val.msg_inset('W2','N','T');
   _val.RESULT:=0;
   return()
|? +_buf.W3 & ('NT'*_buf.W3)=0
|| _val.msg_inset('W3','N','T');
   _val.RESULT:=0;
   return()
|? +_buf.W4 & ('NT'*_buf.W4)=0
|| _val.msg_inset('W4','N','T');
   _val.RESULT:=0;
   return()
|? +_buf.W5 & ('NT'*_buf.W5)=0
|| _val.msg_inset('W5','N','T');
   _val.RESULT:=0;
   return()
|? +_buf.W6 & ('NT'*_buf.W6)=0
|| _val.msg_inset('W6','N','T');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(PPSF_NO,'KOD');
{? +_buf.KOD>_max
|| _val.msg_length('KOD',_max);
   _buf.KOD:=_max+_buf.KOD
?};
_max:=MS.fld_len(PPSF_NO,'OPIS');
{? +_buf.OPIS>_max
|| _val.msg_length('OPIS',_max);
   _buf.OPIS:=_max+_buf.OPIS
?};

: weryfikacja spójności referencyjnej
_ref:=null;
{? PPSF_NO.find_tab(,
      'KOD',,'=',_buf.KOD,
      'FIRMA',,'=',exec('firma','ustawienia')
   )
|| _ref:=PPSF_NO.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 %2'[_a.KOD,_a.OPIS]"
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,PPSF_NO,"
   _a.KOD:=_b.KOD;
   _a.OPIS:=_b.OPIS;
   _a.SYSTEM:=_b.SYSTEM;
   _a.W1:=_b.W1;
   _a.TR1:=_b.TR1;
   _a.W2:=_b.W2;
   _a.TR2:=_b.TR2;
   _a.W3:=_b.W3;
   _a.TR3:=_b.TR3;
   _a.W4:=_b.W4;
   _a.TR4:=_b.TR4;
   _a.W5:=_b.W5;
   _a.TR5:=_b.TR5;
   _a.W6:=_b.W6;
   _a.TR6:=_b.TR6;
   ~~
");
~~

:Sign Version 2.0 jowisz:1045 2023/04/28 15:59:47 74fcbf605fec34a984b51c8dd145cc93734c2e965498d468e69de26bff587bceffdf574906bcc599ab656a297a4a2c4bcf202200c72194635a9ead3e660b7aacf30befd60af10a83a88e53932353e99346e0042d6322ad879bd661a8d1f0aed839f3c7b0d176a4dd5f35bb3fc14b8895646d48fcdd159bf1237604c99f63e16a
