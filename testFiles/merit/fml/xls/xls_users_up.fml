:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_users_up.fml
:: Utworzony: 21.08.2019
:: Autor: MW
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu i importu uprawnień do danych - tabela USERS_UP
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_USRUPR';

_def.FILE:='uprawnienia.xlsx';

_def.TAB_IMP:="USERS_UP";

_def.BEFORE:="USERS_UP.cntx_psh()";

exec('SelUsersTab','xls_users_up');

~~


\init_oddz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
exec('init','xls_users_up',_def);

_def.ID:='UPR_ODDZ';

_def.SHEET:='Oddziały=1,1';
_def.NAME:='Uprawnienia do oddziałów'@;
_def.DESC:='Uprawnienia do oddziałów';

_def.TABLE:="exec('table','xls_users_up','ODDZ')";
_def.FIELDS:="exec('fields','xls_users_up',_a,'ODDZ')";

_def.PREFIX:="exec('prefix','xls_users_up','ODDZ')";
_def.EXPORT:="exec('export','xls_users_up',_a,_b,'ODDZ')";

_def.VALIDATE:="exec('validate','xls_users_up',_a,_b,_c,'ODDZ')";
_def.IMPORT:="exec('import','xls_users_up',_a,_b,_c,'ODDZ')";
_def.AFTER:="USERS_UP.cntx_pop();
             {? _a.KIND='IMPORT'
             || exec('user_upraw_usun_blad','users_upraw','ODDZ');
                exec('usr_upr_napraw','users_upraw','ODDZ')
             ?}";

_def.SELECT:="exec('select','xls_users_up',_a,_b,'ODDZ')";

~~


\init_mg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
exec('init','xls_users_up',_def);

_def.ID:='UPR_MG';

_def.SHEET:='Magazyny=1,1';
_def.NAME:='Uprawnienia do magazynów'@;
_def.DESC:='Uprawnienia do magazynów';

_def.TABLE:="exec('table','xls_users_up','MG')";
_def.FIELDS:="exec('fields','xls_users_up',_a,'MG')";

_def.PREFIX:="exec('prefix','xls_users_up','MG')";
_def.EXPORT:="exec('export','xls_users_up',_a,_b,'MG')";

_def.VALIDATE:="exec('validate','xls_users_up',_a,_b,_c,'MG')";
_def.IMPORT:="exec('import','xls_users_up',_a,_b,_c,'MG')";
_def.AFTER:="USERS_UP.cntx_pop();
             {? _a.KIND='IMPORT'
             || exec('user_upraw_usun_blad','users_upraw','MG');
                exec('usr_upr_napraw','users_upraw','MG')
             ?}";

_def.SELECT:="exec('select','xls_users_up',_a,_b,'MG')";

~~


\init_sts
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
exec('init','xls_users_up',_def);

_def.ID:='UPR_STS';

_def.SHEET:='Stanowiska sprzedaży=1,1';
_def.NAME:='Uprawnienia do stanowisk sprzedaży'@;
_def.DESC:='Uprawnienia do stanowisk sprzedaży';

_def.TABLE:="exec('table','xls_users_up','STS')";
_def.FIELDS:="exec('fields','xls_users_up',_a,'STS')";

_def.PREFIX:="exec('prefix','xls_users_up','STS')";
_def.EXPORT:="exec('export','xls_users_up',_a,_b,'STS')";

_def.VALIDATE:="exec('validate','xls_users_up',_a,_b,_c,'STS')";
_def.IMPORT:="exec('import','xls_users_up',_a,_b,_c,'STS')";
_def.AFTER:="USERS_UP.cntx_pop();
             {? _a.KIND='IMPORT'
             || exec('user_upraw_usun_blad','users_upraw','STS');
                exec('usr_upr_napraw','users_upraw','STS')
             ?}";

_def.SELECT:="exec('select','xls_users_up',_a,_b,'STS')";

~~


\init_stz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
exec('init','xls_users_up',_def);

_def.ID:='UPR_STZ';

_def.SHEET:='Stanowiska zakupu=1,1';
_def.NAME:='Uprawnienia do stanowisk zakupu'@;
_def.DESC:='Uprawnienia do stanowisk zakupu';

_def.TABLE:="exec('table','xls_users_up','STZ')";
_def.FIELDS:="exec('fields','xls_users_up',_a,'STZ')";

_def.PREFIX:="exec('prefix','xls_users_up','STZ')";
_def.EXPORT:="exec('export','xls_users_up',_a,_b,'STZ')";

_def.VALIDATE:="exec('validate','xls_users_up',_a,_b,_c,'STZ')";
_def.IMPORT:="exec('import','xls_users_up',_a,_b,_c,'STZ')";
_def.AFTER:="USERS_UP.cntx_pop();
             {? _a.KIND='IMPORT'
             || exec('user_upraw_usun_blad','users_upraw','STZ');
                exec('usr_upr_napraw','users_upraw','STZ')
             ?}";

_def.SELECT:="exec('select','xls_users_up',_a,_b,'STZ')";

~~


\init_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
exec('init','xls_users_up',_def);

_def.ID:='UPR_ZAM';

_def.SHEET:='Magazyny real. zamów. sprzed.=1,1';
_def.NAME:='Uprawnienia do magazynów realizujących zamówienia sprzedaży'@;
_def.DESC:='Uprawnienia do magazynów realizujących zamówienia sprzedaży';

_def.TABLE:="exec('table','xls_users_up','ZAM')";
_def.FIELDS:="exec('fields','xls_users_up',_a,'ZAM')";

_def.PREFIX:="exec('prefix','xls_users_up','ZAM')";
_def.EXPORT:="exec('export','xls_users_up',_a,_b,'ZAM')";

_def.VALIDATE:="exec('validate','xls_users_up',_a,_b,_c,'ZAM')";
_def.IMPORT:="exec('import','xls_users_up',_a,_b,_c,'ZAM')";
_def.AFTER:="USERS_UP.cntx_pop();
             {? _a.KIND='IMPORT'
             || exec('user_upraw_usun_blad','users_upraw','ZAM');
                exec('usr_upr_napraw','users_upraw','ZAM')
             ?}";

_def.SELECT:="exec('select','xls_users_up',_a,_b,'ZAM')";

~~


\init_zaw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
exec('init','xls_users_up',_def);

_def.ID:='UPR_ZAW';

_def.SHEET:='Magazyny real. zamów. wewn.=1,1';
_def.NAME:='Uprawnienia do magazynów realizujących zamówienia wewnętrzne'@;
_def.DESC:='Uprawnienia do magazynów realizujących zamówienia wewnętrzne';

_def.TABLE:="exec('table','xls_users_up','ZAW')";
_def.FIELDS:="exec('fields','xls_users_up',_a,'ZAW')";

_def.PREFIX:="exec('prefix','xls_users_up','ZAW')";
_def.EXPORT:="exec('export','xls_users_up',_a,_b,'ZAW')";

_def.VALIDATE:="exec('validate','xls_users_up',_a,_b,_c,'ZAW')";
_def.IMPORT:="exec('import','xls_users_up',_a,_b,_c,'ZAW')";
_def.AFTER:="USERS_UP.cntx_pop();
             {? _a.KIND='IMPORT'
             || exec('user_upraw_usun_blad','users_upraw','ZAW');
                exec('usr_upr_napraw','users_upraw','ZAW')
             ?}";

_def.SELECT:="exec('select','xls_users_up',_a,_b,'ZAW')";

~~


\init_trrodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.37]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
exec('init','xls_users_up',_def);

_def.ID:='UPR_TRRODZ';

_def.SHEET:='Kategorie transportu=1,1';
_def.NAME:='Uprawnienia do kategorii transportu'@;
_def.DESC:='Uprawnienia do kategorii transportu';

_def.TABLE:="exec('table','xls_users_up','TR_RODZ')";
_def.FIELDS:="exec('fields','xls_users_up',_a,'TR_RODZ')";

_def.PREFIX:="exec('prefix','xls_users_up','TR_RODZ')";
_def.EXPORT:="exec('export','xls_users_up',_a,_b,'TR_RODZ')";

_def.VALIDATE:="exec('validate','xls_users_up',_a,_b,_c,'TR_RODZ')";
_def.IMPORT:="exec('import','xls_users_up',_a,_b,_c,'TR_RODZ')";
_def.AFTER:="USERS_UP.cntx_pop();
             exec('user_upraw_usun_blad','users_upraw','TR_RODZ');
             exec('usr_upr_napraw','users_upraw','TR_RODZ')";

_def.SELECT:="exec('select','xls_users_up',_a,_b,'TR_RODZ')";

~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Określa zakres eksportowanych danych
::   WE: _a - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TR_RODZ)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | (_a<>'ODDZ' & _a<>'MG' & _a<>'STS' & _a<>'STZ' & _a<>'ZAM' & _a<>'ZAW'
   & _a<>'FZ' & _a<>'SCHMT' & _a<>'TR_RODZ')
|| _a:='ODDZ'
?};
_rodz:=_a;
__SelUsers.prefix(_rodz);
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Określa uchwyt do tabeli
::   WE: _a - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TR_RODZ)
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') | (_a<>'ODDZ' & _a<>'MG' & _a<>'STS' & _a<>'STZ' & _a<>'ZAM' & _a<>'ZAW'
   & _a<>'TR_RODZ')
|| _a:='ODDZ'
?};
_rodz:=_a;
exec('TabUsersUp','users_upraw',_rodz)



\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::       _b - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TR_RODZ)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_b')<>type_of('') | (_b<>'ODDZ' & _b<>'MG' & _b<>'STS' & _b<>'STZ' & _b<>'ZAM' & _b<>'ZAW'
   & _b<>'TR_RODZ')
|| _b:='ODDZ'
?};
_def:=_a;
_rodz:=_b;

_tooltip:=MS.name(USERS_UP,'USERS')+' '+'(max. %1 znaków). '@[$MS.fld_len(USERS,'KOD')];
_tooltip+='Pole wymagane'@;
_def.define('USER','Użytkownik'@,1,,_tooltip);

{? _rodz='MG' | _rodz='ZAM' | _rodz='ZAW'
|| _tooltip:=MS.name(USERS_UP,'MG')+' '+'(max. %1 znaków). '@[$MS.fld_len(MG,'SYM')];
   _tooltip+='Pole wymagane'@;
   _def.define('MG','Magazyn'@,1,,_tooltip)
|? _rodz='STS'
|| _tooltip:=MS.name(USERS_UP,'STS')+' '+'(max. %1 znaków). '@[$MS.fld_len(STS,'KOD')];
   _tooltip+='Pole wymagane'@;
   _def.define('STS','Stanowisko sprzedaży'@,1,,_tooltip)
|? _rodz='STZ'
|| _tooltip:=MS.name(USERS_UP,'STZ')+' '+'(max. %1 znaków). '@[$MS.fld_len(STS,'KOD')];
   _tooltip+='Pole wymagane'@;
   _def.define('STZ','Stanowisko zakupów'@,1,,_tooltip)
|? _rodz='TR_RODZ'
|| _tooltip:=MS.name(USERS_UP,'TR_RODZ')+' '+'(max. %1 znaków). '@[$MS.fld_len(TR_RODZ,'KOD')];
   _tooltip+='Pole wymagane'@;
   _def.define('TR_RODZ','Kategoria transportu'@,1,,_tooltip)
|| _tooltip:=MS.name(USERS_UP,'ODDZ')+' '+'(max. %1 znaków). '@[$MS.fld_len(ODDZ,'KOD')];
   _tooltip+='Pole wymagane'@;
   _def.define('ODDZ','Oddział'@,1,,_tooltip)
?};

_tooltip:='Uprawniony (max. 1 znak). '@;
_tooltip+='Dozwolone wartości: T/N'@;
_def.define('DOSTEP','Czy uprawniony?'@,1,,_tooltip);

{? _rodz='ZAM' | _rodz='ZAW'
|| _tooltip:=MS.name(USERS_UP,'DOM')+' (max. 1 znak). '@;
   _tooltip+='Dozwolone wartości: T/N'@;
   _def.define('DOMYSL','Czy domyślny?'@,1,,_tooltip);
   _tooltip:=MS.name(USERS_UP,'NR')+' (liczba nieujemna). ';
   _tooltip+='Pole wymagane'@;
   _def.define('NR','Priorytet magazynu'@,1,,_tooltip,type_of(0),0)
?};

_tooltip:='Pełne uprawnienia (max. 1 znak). '@;
_tooltip+='Dozwolone wartości: T/N'@;
_def.define('PELNE','Czy pełne uprawnienia?'@,1,,_tooltip);

~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::       _c - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TR_RODZ)
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_c')<>type_of('') | (_c<>'ODDZ' & _c<>'MG' & _c<>'STS' & _c<>'STZ' & _c<>'ZAM' & _c<>'ZAW'
   & _c<>'TR_RODZ')
|| _c:='ODDZ'
?};

_excel:=_a;
_obj:=_b;
_rodz:=_c;
_tab:=_excel.table();

{? __SelUsers.first()
|| _result:=__SelUsers.find_key(_tab.USER_REF)
|| _result:=1
?};

{? _result
|| _obj.USER.VALUE:=_tab.USER_KOD;
   {? _rodz='MG' | _rodz='ZAM' | _rodz='ZAW'
   || _obj.MG.VALUE:=_tab.KOD
   |? _rodz='STS'
   || _obj.STS.VALUE:=_tab.KOD
   |? _rodz='STZ'
   || _obj.STZ.VALUE:=_tab.KOD
   |? _rodz='TR_RODZ'
   || _obj.TR_RODZ.VALUE:=_tab.KOD
   || _obj.ODDZ.VALUE:=_tab.KOD
   ?};
   {? _rodz='ZAM' | _rodz='ZAW'
   || {? _tab.DOM='T' | _tab.DOM='N'
      || _obj.DOMYSL.VALUE:=_tab.DOM
      || _obj.DOMYSL.VALUE:='N'
      ?};
      _obj.NR.VALUE:=_tab.NR
   ?};
   _obj.DOSTEP.VALUE:=_tab.ACCESS;
   _obj.PELNE.VALUE:=_tab.FULL
?};

_result


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::       _d - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TR_RODZ)
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_d')<>type_of('') | (_d<>'ODDZ' & _d<>'MG' & _d<>'STS' & _d<>'STZ' & _d<>'ZAM' & _d<>'ZAW'
   & _d<>'TR_RODZ')
|| _d:='ODDZ'
?};

_def:=_a;
_obj:=_a;
_mode:=_b;
_validate:=_c;
_rodz:=_d;

USERS_UP.prefix();
{? _validate.ACTION='add'
|| USERS_UP.blank()
?};
USERS_UP.USERS:=_validate.OBJ.USER;
USERS_UP.AKR:=_rodz;
USERS_UP.ODDZ:=_validate.OBJ.ODDZ;
USERS_UP.MG:=_validate.OBJ.MG;
USERS_UP.STS:=_validate.OBJ.STS;
USERS_UP.STZ:=_validate.OBJ.STZ;
USERS_UP.TR_RODZ:=_validate.OBJ.TR_RODZ;
{? _rodz='ZAM' | _rodz='ZAW'
|| USERS_UP.DOM:=_obj.DOMYSL;
   USERS_UP.NR:=_obj.NR
|| USERS_UP.DOM:='N';
   USERS_UP.NR:=0
?};
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER   - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obj_new() - obiekt z resultem, wynik działania exec('args_valid','#excel_imex').
::                        Obiekt ten jest przekazywany do formuły na IMPORT. Pole RESULT decyduje czy formuła
::                        na import się wykona. Pole MSG służy to odpisania komunikatu
::       _d - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TR_RODZ)
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_d')<>type_of('') | (_d<>'ODDZ' & _d<>'MG' & _d<>'STS' & _d<>'STZ' & _d<>'ZAM' & _d<>'ZAW'
   & _d<>'TR_RODZ')
|| _d:='ODDZ'
?};

_obj:=_a;
_mode:=_b;
_result:=_c;
_rodz:=_d;

_can_continue:=1;
:: Walidacja wartości z Excel, czy są w nim pola których się spodziewam i czy mają dobre wartości
{? _obj.USER=''
|| _can_continue:=0;
   _result.msg_empty('USER')
?};
{? (_rodz='MG' | _rodz='ZAM' | _rodz='ZAW') &_obj.MG=''
|| _can_continue:=0;
   _result.msg_empty('MG')
?};
{? _rodz='ODDZ' & _obj.ODDZ=''
|| _can_continue:=0;
   _result.msg_empty('ODDZ')
?};
{? _rodz='STS' & _obj.STS=''
|| _can_continue:=0;
   _result.msg_empty('STS')
?};
{? _rodz='STZ' & _obj.STZ=''
|| _can_continue:=0;
   _result.msg_empty('STZ')
?};
{? _rodz='TR_RODZ' & _obj.TR_RODZ=''
|| _can_continue:=0;
   _result.msg_empty('TR_RODZ')
?};

_user:=null();
{? _can_continue
|| _user:=exec('FindInSet','#table','USERS','USR_KKOD',_obj.USER,,,1);
   {? _user=null()
   || _can_continue:=0;
      _result.msg_norec('USER')
   ?}
?};

_oddz:=null();
{? _rodz='ODDZ' & _can_continue
|| _oddz:=exec('FindInSet','#table','ODDZ','KOD2',_obj.ODDZ,,,1);
   {? _oddz=null()
   || _can_continue:=0;
      _result.msg_norec('ODDZ')
   ?}
?};

_mg:=null();
{? (_rodz='MG' | _rodz='ZAM' | _rodz='ZAW') & _can_continue
|| _mg:=exec('FindInSet','#table','MG','MAGAZYNY',_obj.MG,,,1);
   {? _mg=null()
   || _can_continue:=0;
      _result.msg_norec('MG')
   ?}
?};

_sts:=null();
{? _rodz='STS' & _can_continue
|| _sts:=exec('FindInSet','#table','STS','SZ',_obj.STS,'S',,1);
   {? _sts=null()
   || _can_continue:=0;
      _result.msg_norec('STS')
   ?}
?};

_stz:=null();
{? _rodz='STZ' & _can_continue
|| _stz:=exec('FindInSet','#table','STS','SZ',_obj.STZ,'Z',,1);
   {? _stz=null()
   || _can_continue:=0;
      _result.msg_norec('STZ')
   ?}
?};

_tr_rodz:=null();
{? _rodz='TR_RODZ' & _can_continue
|| _tr_rodz:=exec('FindInSet','#table','TR_RODZ','KOD',_obj.TR_RODZ,,,1);
   {? _tr_rodz=null()
   || _can_continue:=0;
      _result.msg_norec('TR_RODZ')
   ?}
?};

{? _obj.DOSTEP<>'T' & _obj.DOSTEP<>'N'
|| _can_continue:=0;
   _result.msg_inset('DOSTEP','T','N')
?};

{? _obj.PELNE<>'T' & _obj.PELNE<>'N'
|| _can_continue:=0;
   _result.msg_inset('PELNE','T','N')
?};

{? _rodz='ZAM' | _rodz='ZAW'
|| {? _obj.DOMYSL<>'T' & _obj.DOMYSL<>'N'
   || _can_continue:=0;
      _result.msg_inset('DOMYSL','T','N')
   ?}
?};

{? _rodz='ZAM' | _rodz='ZAW'
|| {? type_of(_obj.NR)=type_of(0) & int(_obj.NR)=_obj.NR
   || {? _obj.NR<0 | _obj.NR>exec('maxint','#math')
      || _can_continue:=0;
         _result.msg_range('NR',0,exec('maxint','#math'))
      ?}
   || _can_continue:=0;
      _result.msg_int('NR')
   ?}
?};

{? _can_continue & (_obj.DOSTEP='T' | _obj.PELNE='T')
|| {? ~exec('user_upraw_dostep','users_upraw',_rodz,_user)
   || _can_continue:=0;
      _msg:='Użytkownik nie może mieć uprawnienia, nie ma odpowiedniej roli.'@;
      {? _obj.PELNE='T'
      || _result.msg_value('PELNE',_msg)
      || _result.msg_value('DOSTEP',_msg)
      ?}
   ?}
?};

_bperm_ref:=exec('bperm_ref','users_upraw',_rodz);
B_PERM_U.index('USER');
B_PERM_U.prefix(REF.FIRMA,_user,_bperm_ref);
{? ~B_PERM_U.first()
|| _can_continue:=0
?};

_result.RESULT:=_can_continue;

:: OK
{? _result.RESULT & _obj.PELNE='T'
|| {? B_PERM_U.FULL='T'
   || {? (_rodz='ZAM' | _rodz='ZAW') & _obj.DOMYSL='T'
      || _result.ACTION:='mgdom';
         _result.OBJ:=obj_new('USER','PELNE', 'MG_DOM');
         _result.OBJ.USER:=_user;
         _result.OBJ.PELNE:='T';
         _result.OBJ.MG_DOM:=_mg
      ?}
   || {? (_rodz='ZAM' | _rodz='ZAW') & _obj.DOMYSL='T'
      || _result.ACTION:='padd_mgdom';
         _result.OBJ:=obj_new('USER','PELNE', 'MG_DOM');
         _result.OBJ.USER:=_user;
         _result.OBJ.PELNE:='T';
         _result.OBJ.MG_DOM:=_mg
      || _result.ACTION:='padd';
         _result.OBJ:=obj_new('USER','PELNE');
         _result.OBJ.USER:=_user;
         _result.OBJ.PELNE:='T'
      ?}
   ?}
|? _result.RESULT & (_mode=1 | _obj.DOSTEP='T')
|| {? _rodz='MG' | _rodz='ZAM' | _rodz='ZAW'
   || USERS_UP.index('MAG')
   || USERS_UP.index(_rodz)
   ?};
   {? _rodz='MG' | _rodz='ZAM' | _rodz='ZAW'
   || USERS_UP.prefix(_user,_rodz,_mg)
   |? _rodz='STS'
   || USERS_UP.prefix(_user,_rodz,_sts)
   |? _rodz='STZ'
   || USERS_UP.prefix(_user,_rodz,_stz)
   |? _rodz='TR_RODZ'
   || USERS_UP.prefix(_user,_rodz,_tr_rodz)
   || USERS_UP.prefix(_user,_rodz,_oddz)
   ?};
   {? USERS_UP.first()
   || {? _obj.DOSTEP='N'
      || _result.ACTION:='del';
         _result.OBJ:=obj_new('USER','PELNE');
         _result.OBJ.USER:=_user;
         {? B_PERM_U.FULL='T'
         || _result.OBJ.PELNE:='N'
         || _result.OBJ.PELNE:=''
         ?}
      |? _obj.DOSTEP='T' & (_rodz='ZAM' | _rodz='ZAW') & (USERS_UP.DOM<>_obj.DOMYSL | USERS_UP.NR<>_obj.NR)
      || _result.ACTION:='put';
         _result.OBJ:=obj_new('USER','ODDZ','MG','STS','STZ','TR_RODZ','PELNE');
         _result.OBJ.USER:=_user;
         _result.OBJ.ODDZ:=_oddz;
         _result.OBJ.MG:=_mg;
         _result.OBJ.STS:=_sts;
         _result.OBJ.STZ:=_stz;
         _result.OBJ.TR_RODZ:=_tr_rodz;
         {? _mode=1 & B_PERM_U.FULL='T'
         || _result.OBJ.PELNE:='N'
         || _result.OBJ.PELNE:=''
         ?};
         exec('record','xls_users_up',_obj,_mode,_result,_rodz)
      |? _mode=1 & B_PERM_U.FULL='T'
      || _result.ACTION:='pdel';
         _result.OBJ:=obj_new('USER','PELNE');
         _result.OBJ.USER:=_user;
         _result.OBJ.PELNE:='N'
      ?}
   || {? _obj.DOSTEP='T'
      || _result.ACTION:='add';
         _result.OBJ:=obj_new('USER','ODDZ','MG','STS','STZ','TR_RODZ','PELNE');
         _result.OBJ.USER:=_user;
         _result.OBJ.ODDZ:=_oddz;
         _result.OBJ.MG:=_mg;
         _result.OBJ.STS:=_sts;
         _result.OBJ.STZ:=_stz;
         _result.OBJ.TR_RODZ:=_tr_rodz;
         {? _mode=1 & B_PERM_U.FULL='T'
         || _result.OBJ.PELNE:='N'
         || _result.OBJ.PELNE:=''
         ?};
         exec('record','xls_users_up',_obj,_mode,_result,_rodz)
      |? _mode=1 & B_PERM_U.FULL='T'
      || _result.ACTION:='pdel';
         _result.OBJ:=obj_new('USER','PELNE');
         _result.OBJ.USER:=_user;
         _result.OBJ.PELNE:='N'
      ?}
   ?}
?};

~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::       _d - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TR_RODZ)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_d')<>type_of('') | (_d<>'ODDZ' & _d<>'MG' & _d<>'STS' & _d<>'STZ' & _d<>'ZAM' & _d<>'ZAW'
   & _d<>'TR_RODZ')
|| _d:='ODDZ'
?};

_obj:=_a;
_mode:=_b;
_validate:=_c;
_rodz:=_d;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=USERS_UP.add(1);
      {? _result & (_rodz='ZAM' | _rodz='ZAW') & USERS_UP.DOM='T'
      || exec('user_upraw_ustaw_domysl','users_upraw',_rodz,USERS_UP.USERS,USERS_UP.MG)
      ?}
   |? _validate.ACTION='put'
   || _result:=USERS_UP.put(1);
      {? _result & (_rodz='ZAM' | _rodz='ZAW') & USERS_UP.DOM='T'
      || exec('user_upraw_ustaw_domysl','users_upraw',_rodz,USERS_UP.USERS,USERS_UP.MG)
      ?}
   |? _validate.ACTION='del'
   || {? USERS_UP.count()=0 & USERS_UP.del(1,1)<>0
      || _result:=1
      ?}
   |? _validate.ACTION='padd' | _validate.ACTION='padd_mgdom'
   || B_PERM_U.FULL:='T';
      B_PERM_U.ACCESS:='T';
      _result:=B_PERM_U.put();
      {? _result
      || exec('user_upraw_ustaw_pelne','users_upraw',_rodz,_validate.OBJ.USER);
         {? _validate.ACTION='padd_mgdom'
         || exec('user_upraw_ustaw_domysl','users_upraw',_rodz,_validate.OBJ.USER,_validate.OBJ.MG_DOM)
         ?}
      ?}
   |? _validate.ACTION='mgdom'
   || exec('user_upraw_ustaw_domysl','users_upraw',_rodz,_validate.OBJ.USER,_validate.OBJ.MG_DOM);
      _result:=1
   ?};
   {? ((_validate.ACTION='add' | _validate.ACTION='put' | _validate.ACTION='del') & _validate.OBJ.PELNE='N'
      & _result) | _validate.ACTION='pdel'
   || B_PERM_U.FULL:='N';
      _result:=B_PERM_U.put()
   ?}
?};

{? _result=0
|| _validate.MSG:='';
   {? _validate.ACTION='add'
   || {? _rodz='MG'
      || _validate.MSG:='Dodanie uprawnienia użytkownika %1 do magazynu %2 nie powiodło się.'@[_obj.USER,_obj.MG]
      |? _rodz='STS'
      || _validate.MSG:='Dodanie uprawnienia użytkownika %1 do stanowiska sprzedaży %2 nie powiodło się.'@
                        [_obj.USER,_obj.STS]
      |? _rodz='STZ'
      || _validate.MSG:='Dodanie uprawnienia użytkownika %1 do stanowiska zakupu %2 nie powiodło się.'@
                        [_obj.USER,_obj.STZ]
      |? _rodz='ZAM'
      || _validate.MSG:='Dodanie uprawnienia użytkownika %1 do magazynu %2 realizującego zamówienia sprzedaży nie powiodło się.'@
                        [_obj.USER,_obj.MG]
      |? _rodz='ZAW'
      || _validate.MSG:='Dodanie uprawnienia użytkownika %1 do magazynu %2 realizującego zamówienia wewnętrzne nie powiodło się.'@
                        [_obj.USER,_obj.MG]
      |? _rodz='TR_RODZ'
      || _validate.MSG:='Dodanie uprawnienia użytkownika %1 do kategorii transportu %2 nie powiodło się.'@
                        [_obj.USER,_obj.TR_RODZ]
      || _validate.MSG:='Dodanie uprawnienia użytkownika %1 do oddziału %2 nie powiodło się.'@[_obj.USER,_obj.ODDZ]
      ?}
   |? _validate.ACTION='del'
   || {? _rodz='MG'
      || _validate.MSG:='Usunięcie uprawnienia użytkownika %1 do magazynu %2 nie powiodło się.'@[_obj.USER,_obj.MG]
      |? _rodz='STS'
      || _validate.MSG:='Usunięcie uprawnienia użytkownika %1 do stanowiska sprzedaży %2 nie powiodło się.'@
                        [_obj.USER,_obj.STS]
      |? _rodz='STZ'
      || _validate.MSG:='Usunięcie uprawnienia użytkownika %1 do stanowiska zakupu %2 nie powiodło się.'@
                        [_obj.USER,_obj.STZ]
      |? _rodz='ZAM'
      || _validate.MSG:='Usunięcie uprawnienia użytkownika %1 do magazynu %2 realizującego zamówienia sprzedaży nie powiodło się.'@
                        [_obj.USER,_obj.MG]
      |? _rodz='ZAW'
      || _validate.MSG:='Usunięcie uprawnienia użytkownika %1 do magazynu %2 realizującego zamówienia wewnętrzne nie powiodło się.'@
                        [_obj.USER,_obj.MG]
      |? _rodz='TR_RODZ'
      || _validate.MSG:='Usunięcie uprawnienia użytkownika %1 do kategorii transportu %2 nie powiodło się.'@
                        [_obj.USER,_obj.TR_RODZ]
      || _validate.MSG:='Usunięcie uprawnienia użytkownika %1 do oddziału %2 nie powiodło się.'@[_obj.USER,_obj.ODDZ]
      ?}
   |? _validate.ACTION='put'
   || {? _rodz='ZAM'
      || _validate.MSG:='Poprawienie uprawnienia użytkownika %1 do magazynu %2 realizującego zamówienia sprzedaży nie powiodło się.'@
                        [_obj.USER,_obj.MG]
      |? _rodz='ZAW'
      || _validate.MSG:='Poprawienie uprawnienia użytkownika %1 do magazynu %2 realizującego zamówienia wewnętrzne nie powiodło się.'@
                        [_obj.USER,_obj.MG]
      ?}
   |? _validate.ACTION='padd' | _validate.ACTION='padd_mg_dom'
   || {? _rodz='MG'
      || _validate.MSG:='Dodanie uprawnienia użytkownika %1 do wszystkich magazynów nie powiodło się.'@[_obj.USER]
      |? _rodz='STS'
      || _validate.MSG:='Dodanie uprawnienia użytkownika %1 do wszystkich stanowisk sprzedaży nie powiodło się.'@
                        [_obj.USER]
      |? _rodz='STZ'
      || _validate.MSG:='Dodanie uprawnienia użytkownika %1 do wszystkich stanowisk zakupu nie powiodło się.'@
                        [_obj.USER]
      |? _rodz='ZAM'
      || _validate.MSG:='Dodanie uprawnienia użytkownika %1 do wszystkich magazynów realizujących zamówienia sprzedaży nie powiodło się.'@
                        [_obj.USER]
      |? _rodz='ZAW'
      || _validate.MSG:='Dodanie uprawnienia użytkownika %1 do wszystkich magazynów realizujących zamówienia wewnętrzne nie powiodło się.'@
                        [_obj.USER]
      |? _rodz='TR_RODZ'
      || _validate.MSG:='Dodanie uprawnienia użytkownika %1 do wszystkich kategorii transportu nie powiodło się.'@
                        [_obj.USER]
      || _validate.MSG:='Dodanie uprawnienia użytkownika %1 do wszystkich oddziałów nie powiodło się.'@[_obj.USER]
      ?}
   ?};
   {? ((_validate.ACTION='add' | _validate.ACTION='put' | _validate.ACTION='del') & _validate.OBJ.PELNE='N')
      | _validate.ACTION='pdel'
   || {?_validate.MSG<>''
      || _validate.MSG+=' '
      ?};
      {? _rodz='MG'
      || _validate.MSG+='Usunięcie uprawnienia użytkownika %1 do wszystkich magazynów nie powiodło się.'@[_obj.USER]
      |? _rodz='STS'
      || _validate.MSG+='Usunięcie uprawnienia użytkownika %1 do wszystkich stanowisk sprzedaży nie powiodło się.'@
                        [_obj.USER]
      |? _rodz='STZ'
      || _validate.MSG+='Usunięcie uprawnienia użytkownika %1 do wszystkich stanowisk zakupu nie powiodło się.'@
                        [_obj.USER]
      |? _rodz='ZAM'
      || _validate.MSG+='Usunięcie uprawnienia użytkownika %1 do wszystkich magazynów realizujących zamówienia sprzedaży nie powiodło się.'@
                        [_obj.USER]
      |? _rodz='ZAW'
      || _validate.MSG+='Usunięcie uprawnienia użytkownika %1 do wszystkich magazynów realizujących zamówienia wewnętrzne nie powiodło się.'@
                        [_obj.USER]
      |? _rodz='TR_RODZ'
      || _validate.MSG+='Usunięcie uprawnienia użytkownika %1 do wszystkich kategorii transportu nie powiodło się.'@
                        [_obj.USER]
      || _validate.MSG+='Usunięcie uprawnienia użytkownika %1 do wszystkich oddziałów nie powiodło się.'@[_obj.USER]
      ?}
   ?}
|| {? _validate.ACTION='padd' | _validate.ACTION='padd_mgdom'
   || {? _rodz='MG'
      || _validate.MSG:='Dodano uprawnienie użytkownika %1 do wszystkich magazynów.'@[_obj.USER]
      |? _rodz='STS'
      || _validate.MSG:='Dodano uprawnienie użytkownika %1 do wszystkich stanowisk sprzedaży.'@[_obj.USER]
      |? _rodz='STZ'
      || _validate.MSG:='Dodano uprawnienie użytkownika %1 do wszystkich stanowisk zakupu.'@[_obj.USER]
      |? _rodz='ZAM'
      || _validate.MSG:='Dodano uprawnienie użytkownika %1 do wszystkich magazynów realizujących zamówienia sprzedaży.'@
                        [_obj.USER]
      |? _rodz='ZAW'
      || _validate.MSG:='Dodano uprawnienie użytkownika %1 do wszystkich magazynów realizujących zamówienia wewnętrzne.'@
                        [_obj.USER]
      |? _rodz='TR_RODZ'
      || _validate.MSG:='Dodano uprawnienie użytkownika %1 do wszystkich kategorii transportu.'@[_obj.USER]
      || _validate.MSG:='Dodano uprawnienie użytkownika %1 do wszystkich oddziałów.'@[_obj.USER]
      ?}
   |? ((_validate.ACTION='add' | _validate.ACTION='put' | _validate.ACTION='del') & _validate.OBJ.PELNE='N')
      | _validate.ACTION='pdel'
   || {? _rodz='MG'
      || _validate.MSG:='Usunięto uprawnienie użytkownika %1 do wszystkich magazynów.'@[_obj.USER]
      |? _rodz='STS'
      || _validate.MSG:='Usunięto uprawnienie użytkownika %1 do wszystkich stanowisk sprzedaży.'@[_obj.USER]
      |? _rodz='STZ'
      || _validate.MSG:='Usunięto uprawnienie użytkownika %1 do wszystkich stanowisk zakupu.'@[_obj.USER]
      |? _rodz='ZAM'
      || _validate.MSG:='Usunięto uprawnienie użytkownika %1 do wszystkich magazynów realizujących zamówienia sprzedaży.'@
                        [_obj.USER]
      |? _rodz='ZAW'
      || _validate.MSG:='Usunięto uprawnienie użytkownika %1 do wszystkich magazynów realizujących zamówienia wewnętrzne.'@
                        [_obj.USER]
      |? _rodz='TR_RODZ'
      || _validate.MSG:='Usunięto uprawnienie użytkownika %1 do wszystkich kategorii transportu.'@[_obj.USER]
      || _validate.MSG:='Usunięto uprawnienie użytkownika %1 do wszystkich oddziałów.'@[_obj.USER]
      ?}
   ?};
   _validate.MSG:=''
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::       _b - obj_new - środowisko mechanizmu
::       _c - rodzaj uprawnienia (ODDZ, MG, STS, STZ, ZAM, ZAW, TARS, TARD, ZAM, ZAW, FJKS, HRB, HRP)
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_c')<>type_of('') | (_c<>'ODDZ' & _c<>'MG' & _c<>'STS' & _c<>'STZ' & _c<>'ZAM' & _c<>'ZAW'
   & _c<>'TARS' & _c<>'TARD' & _c<>'KAS' & _c<>'MKAS' & _c<>'FJKS' & _c<>'HRB' & _c<>'HRP' & _c<>'FZ'
   & _c<>'SCHMT' & _c<>'TR_RODZ')
|| _c:='ODDZ'
?};

_selected:=_a;
_excel:=_b;
_rodz:=_c;
_result:=0;

_tab:=tab_tmp(2,
   'KOD','STRING[20]','Login'@
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'DANE','STRING[50]','Dane'@
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

USERS.cntx_psh();
USERS.index('USR_AKOD');
USERS.prefix('T');
{? USERS.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$USERS.ref();
      __SelUsers.prefix(_rodz,$USERS.ref());
      {? __SelUsers.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:=USERS.KOD;
      _tab.DANE:=USERS.DANE;
      _tab.add();
      USERS.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'KOD,DANE',30,'Wybór użytkowników do eksportu uprawnień'@);
{? _result>0
||
   __SelUsers.prefix(_rodz);
   {!
   |? __SelUsers.first()
   |! __SelUsers.del(1,1)
   !};

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         __SelUsers.prefix(_rodz,_tab.REF);
         {? __SelUsers.first()=0
         || __SelUsers.blank();
            __SelUsers.RODZ:=_rodz;
            __SelUsers.USER_REF:=_tab.REF;
            __SelUsers.add()
         ?};
         _tab.next()
      !};
      _excel.TAB_HEAD.HAS_SEL:='X';
      _excel.TAB_HEAD.SELECTED:='T'
   || _excel.TAB_HEAD.HAS_SEL:='N'
   ?}
?};
USERS.cntx_pop();
_result


\SelUsersTab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.42]
:: OPIS: Tworzy tymczasową tabelę służacą do wyboru użytkowników dla eksportu uprawnień
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('__SelUsers')<>0
|| VAR_DEL.delete('__SelUsers')
?};

__SelUsers:=tab_tmp(2
             ,'RODZ','STRING[4]','Rodzaj'
             ,'USER_REF','STRING[16]','SQL ref');
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:12 721c272c6017f8bc049e24f2f5a475d3ed56548d40f8e93459de1248353ce042f5092a08fd6c97101a75aac7252c80e4fc89b9860ff68d6df5b75686b3a3236f8505fd96ff832015c175f4fcf6d7da9190e3bf1dc342d908d4b0389f04a51e21e6837f3777faa4128ffbfb6d07ccbd6052aec09fadf7384a81059eaeb469c200
