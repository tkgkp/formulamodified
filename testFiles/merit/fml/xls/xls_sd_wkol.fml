:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_sd_wkol.fml
:: Utworzony: 12.03.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu konfiguracji
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='SD_WKOL';
_def.FUNPAR:='ZWS_PAR_ASDZ';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_sd_zes_xlsx','xls__init');
_def.SHEET:='Kolumny zestawów=1,1';
_def.NAME:='Obiekty zestawów danych'@;
_def.DESC:='Obiekty zestawów danych';
_def.ADD_ROWS:=0;
_def.HIDDEN:='T';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="SD_WKOL";

: prolog
_def.BEFORE:="
   SD_WKOL.cntx_psh();
   SD_WKOL.f_clear();
   {? _a.is_export()
   || SD_WKOL.index('NUMER')
   || SD_WKOL.index('KOD')
   ?};
   SD_WKOL.clear();
   SD_WREK.cntx_psh();
   SD_WREK.index('KOD');
   SD_WREK.prefix();
   SD_XSLO.cntx_psh();
   SD_XSLO.index('KOD');
   SD_XSLO.prefix();
   ~~
";

: epilog
_def.AFTER:="
   SD_XSLO.cntx_pop();
   SD_WREK.cntx_pop();
   SD_WKOL.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('SYSTEM', MS.name(SD_WKOL,'SYSTEM'),0,, MS.comment(SD_WKOL,'SYSTEM'));
   _env.define('KOD',    MS.name(SD_WKOL,'KOD'),0,,    MS.comment(SD_WKOL,'KOD'));
   _env.define('SD_WREK',MS.name(SD_WKOL,'SD_WREK'),0,,MS.comment(SD_WKOL,'SD_WREK'),type_of(''));
   _env.define('SD_WKOL',MS.name(SD_WKOL,'SD_WKOL'),0,,MS.comment(SD_WKOL,'SD_WKOL'),type_of(''));
   _env.define('NUMER',  MS.name(SD_WKOL,'NUMER'),0,,  MS.comment(SD_WKOL,'NUMER'),,0);
   _env.define('SYMBOL', MS.name(SD_WKOL,'SYMBOL'),0,, MS.comment(SD_WKOL,'SYMBOL'));
   _env.define('NAZWA',  MS.name(SD_WKOL,'NAZWA'),0,,  MS.comment(SD_WKOL,'NAZWA'));
   _env.define('OPIS',   MS.name(SD_WKOL,'OPIS'),0,,   MS.comment(SD_WKOL,'OPIS'));
   _env.define('SD_XSLO',MS.name(SD_WKOL,'SD_XSLO'),0,,MS.comment(SD_WKOL,'SD_XSLO'),type_of(''));
   _env.define('FML',    MS.name(SD_WKOL,'FML'),0,,    MS.comment(SD_WKOL,'FML'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.SYSTEM.VALUE:=SD_WKOL.SYSTEM;
   _buf.KOD.VALUE:=SD_WKOL.KOD;
   _buf.SD_WREK.VALUE:=SD_WKOL.SD_WREK().KOD;
   _buf.SD_WKOL.VALUE:='';
   {? SD_WKOL.SD_WKOL<>0
   || _ref:=SD_WKOL.ref();
      {? SD_WKOL.seek(SD_WKOL.SD_WKOL,,1)
      || _env.write_async('SD_WKOL',SD_WKOL.ref());
         _buf.SD_WKOL.VALUE:=SD_WKOL.KOD
      ?};
      SD_WKOL.seek(_ref)
   ?};
   _buf.NUMER.VALUE:=SD_WKOL.NUMER;
   _buf.SYMBOL.VALUE:=SD_WKOL.SYMBOL;
   _buf.NAZWA.VALUE:=SD_WKOL.NAZWA;
   _buf.OPIS.VALUE:=SD_WKOL.memo_txt(,1,'OPIS');
   _buf.SD_XSLO.VALUE:=SD_WKOL.SD_XSLO().KOD;
   _buf.FML.VALUE:=SD_WKOL.memo_txt(,1,'FML');
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_sd_wkol',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_sd_wkol',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.SYSTEM=''  || 'SYSTEM'
   |? _buf.KOD=''     || 'KOD'
   |? _buf.SD_WREK='' || 'SD_WREK'
   |? _buf.SYMBOL=''  || 'SYMBOL'
   |? _buf.NAZWA=''   || 'NAZWA'
   |? _buf.SD_XSLO='' || 'SD_XSLO'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

:: błędne wartości
{? ('TN'*(1+_buf.SYSTEM))=0
|| _val.msg_inset('SYSTEM','T','N');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(SD_WKOL,'SYSTEM');
{? +_buf.SYSTEM>_max
|| _val.msg_length('SYSTEM',_max);
   _buf.SYSTEM:=_max+_buf.SYSTEM
?};
_max:=MS.fld_len(SD_WKOL,'KOD');
{? +_buf.KOD>_max
|| _val.msg_length('KOD',_max);
   _buf.KOD:=_max+_buf.KOD
?};
_max:=MS.fld_len(SD_WREK,'KOD');
{? +_buf.SD_WREK>_max
|| _val.msg_length('SD_WREK',_max);
   _buf.SD_WREK:=_max+_buf.SD_WREK
?};
_max:=MS.fld_len(SD_WKOL,'SYMBOL');
{? +_buf.SYMBOL>_max
|| _val.msg_length('SYMBOL',_max);
   _buf.SYMBOL:=_max+_buf.SYMBOL
?};
_max:=MS.fld_len(SD_WKOL,'NAZWA');
{? +_buf.NAZWA>_max
|| _val.msg_length('NAZWA',_max);
   _buf.NAZWA:=_max+_buf.NAZWA
?};
_max:=MS.fld_len(SD_XSLO,'KOD');
{? +_buf.SD_XSLO>_max
|| _val.msg_length('SD_XSLO',_max);
   _buf.SD_XSLO:=_max+_buf.SD_XSLO
?};

: weryfikacja spójności referencyjnej
_kol:=null;
SD_WKOL.index('KOD');
{? SD_WKOL.find_key(_buf.SD_WKOL,)
|| _kol:=#SD_WKOL.ref()
|? _buf.SD_WKOL<>''
|| _val.msg_norec('SD_WKOL');
   _val.RESULT:=0;
   return()
?};
_rek:=null;
{? SD_WREK.find_key(_buf.SD_WREK,)
|| _rek:=SD_WREK.ref()
|| _val.msg_norec('SD_WREK');
   _val.RESULT:=0;
   return()
?};
_slo:=null;
{? SD_XSLO.find_key(_buf.SD_XSLO,)
|| _slo:=SD_XSLO.ref()
|| _val.msg_norec('SD_XSLO');
   _val.RESULT:=0;
   return()
?};

_ref:=null;
{? (SD_WKOL.index('KOD'); SD_WKOL.find_key(_buf.KOD,)) |
   (SD_WKOL.index('SYMBOL'); SD_WKOL.find_key(_buf.SYMBOL,))
|| _ref:=SD_WKOL.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1'[_a.KOD]",
   'SD_WREK',_rek,
   'SD_WKOL',_kol,
   'SD_XSLO',_slo
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,SD_WKOL,"
   _a.SYSTEM:=_b.SYSTEM;
   _a.KOD:=_b.KOD;
   _a.SD_WREK:=_c.SD_WREK;
   _a.SD_WKOL:=_c.SD_WKOL;
   _a.NUMER:=_b.NUMER;
   _a.SYMBOL:=_b.SYMBOL;
   _a.NAZWA:=_b.NAZWA;
   _a.memo_set(_b.OPIS,'OPIS');
   _a.SD_XSLO:=_c.SD_XSLO;
   _a.memo_set(_b.FML,'FML');
   ~~
",'OPIS,FML');
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:12 1613bffec17ab264ce90cd602f766e982e33946037878092e7cb12a71caecfd7fd49546c49dd96e5a24677dc78d4b5b6c31ebfe7842971f0a1e51902e0bb20e7c584553c079834127eba0db48e61a379e965cf19a0800754106803d1fa57dd38cc8e74c38427b249b6c342d25eecf2593d01301fa0124a62e02e9b6b678d1c21
