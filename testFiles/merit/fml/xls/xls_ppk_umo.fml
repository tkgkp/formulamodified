:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_ppk_umo.fml
:: Utworzony: 03.07.2019
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu umów o prowadzenie PPK.
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.22]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='PPK_UMO';
_def.FUNPAR:='ZWS_PAR_PUMO';
_def.DOMAIN:=exec('name','#b_domain','PPK');
_def.FILE:=exec('def_per_ppk_xlsx','xls__init');
_def.SHEET:='Umowy o prowadzenie PPK=1,1';
_def.NAME:='Umowy o prowadzenie PPK'@;
_def.DESC:='Umowy o prowadzenie PPK';
_def.ADD_ROWS:=0;

: źródło danych
_def.TABLE:="PPK_UMO";

: prolog
_def.BEFORE:=
   "  PPK_UZA.cntx_psh();
      PPK_UZA.index('OD');
      PPK_UZA.prefix();
      PPK_UMO.cntx_psh();
      PPK_UMO.index(PPK_UMO.ndx_tmp(,,'PPK_UZA','FIRMA',,'PPK_UZA',,,'OD',,));
      PPK_UMO.prefix(exec('ref_firma','ustawienia'));
      ~~
   ";

: epilog
_def.AFTER:=
   "  _ndx:=PPK_UMO.index('?');
      PPK_UMO.cntx_pop();
      PPK_UMO.ndx_drop(_ndx);
      PPK_UZA.cntx_pop();
      ~~
   ";

: definicja kolumn

_def.FIELDS:=
   "  _env:=_a;
      _tDT:=type_of(date());
      _env.define('PPK_UZA',MS.name(PPK_UMO,'PPK_UZA'), 1,,'Data początku obowiązywania umowy o zarządzanie',_tDT);
      _env.define('DZ',     MS.name(PPK_UMO,'DZ'),      1,,MS.comment(PPK_UMO,'DZ'),_tDT);
      _env.define('NUMER',  MS.name(PPK_UMO,'NUMER'),   1,,MS.comment(PPK_UMO,'NUMER'));
      _env.define('OD',     MS.name(PPK_UMO,'OD'),      1,,MS.comment(PPK_UMO,'OD'),_tDT);
      _env.define('DO',     MS.name(PPK_UMO,'DO'),      1,,MS.comment(PPK_UMO,'DO'),_tDT);
      ~~
   ";

: zawartość wiersza
_def.EXPORT:=
   "  _env:=_a;
      _buf:=_b;

      _buf.PPK_UZA.VALUE:=PPK_UMO.PPK_UZA().OD;
      _env.write_async('PPK_UZA',PPK_UMO.PPK_UZA);
      _buf.DZ.VALUE:=PPK_UMO.DZ;
      _buf.NUMER.VALUE:=PPK_UMO.NUMER;
      _buf.OD.VALUE:=PPK_UMO.OD;
      _buf.DO.VALUE:=PPK_UMO.DO;
      1
   ";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_ppk_umo',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_ppk_umo',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.22]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_buf:=_a;
_update:=_b;
_validate:=_c;

_d0:=date(0,0,0);
: błędy krytyczne
_fld:=
   {? _buf.PPK_UZA=_d0 || 'PPK_UZA'
   |? _buf.DZ=_d0      || 'DZ'
   |? _buf.NUMER=''    || 'NUMER'
   |? _buf.OD=_d0      || 'OD'
   || ''
   ?};
{? _fld<>''
|| _validate.msg_empty(_fld);
   _validate.RESULT:=0;
   return()
?};

_firma:=exec('firma','ustawienia');
{? PPK_UZA.find_key(_firma,_buf.PPK_UZA)
|| _ppk_uza:=PPK_UZA.ref()
|| _validate.msg_value('PPK_UZA','Nie znaleziono umowy o zarządzanie rozpoczynającej się w dniu %1.' [$_buf.PPK_UZA]);
   _validate.RESULT:=0;
   return()
?};

{? _buf.OD<_buf.DZ
|| _validate.msg_value('OD',
      'Data "%1" nie może być wcześniejsza niż "%2".' [MS.name(PPK_UMO,'OD'),MS.name(PPK_UMO,'DZ')]
   );
   _validate.RESULT:=0;
   return()
?};

{? _buf.DO<>_d0 & _buf.DO<_buf.OD
|| _validate.msg_value('DO',
      'Data "%1" nie może być wcześniejsza niż "%2" (%3).'
      [MS.name(PPK_UMO,'DO'),MS.name(PPK_UMO,'OD'),$_buf.OD]
   );
   _validate.RESULT:=0;
   return()
?};

{? _buf.OD<PPK_UZA.OD
|| _validate.msg_value('OD',
      '"%1" umowy o prowadzenie nie może być wcześniejsza niż "%2" umowy o zarządzanie.'
      [MS.name(PPK_UMO,'OD'),MS.name(PPK_UZA,'OD')]
   );
   _validate.RESULT:=0;
   return()
?};

{? PPK_UZA.DO<>_d0 & (PPK_UZA.DO<_buf.DO | _buf.DO=_d0)
|| _validate.msg_value('DO',
      '"%1 umowy o prowadzenie nie może być wcześniejsza niż "%2" umowy o zarządzanie.'
      [MS.name(PPK_UMO,'OD'),MS.name(PPK_UZA,'OD')]
   );
   _validate.RESULT:=0;
   return()
?};

: wybór akcji
_ref:=null();
{? PPK_UMO.find_key(_ppk_uza,_buf.OD)
|| _ref:=PPK_UMO.ref();
   {? _update
   || _validate.ACTION:='put'
   || _validate.RESULT:=0
   ?}
|| _validate.ACTION:='add'
?};

: optymalizacja importu
_validate.OBJ:=exec('obj_ntab_set','#array',,
   'ref',_ref,
   'tostr','%1' [$_buf.OD],
   'PPK_UZA',_ppk_uza
);

~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [19.22]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_buf:=_a;
_update:=_b;
_validate:=_c;

{? _validate.ACTION='add'
|| PPK_UMO.blank();
   PPK_UMO.PPK_UZA:=_validate.OBJ.PPK_UZA
?};

PPK_UMO.DZ:=_buf.DZ;
PPK_UMO.NUMER:=_buf.NUMER;
PPK_UMO.OD:=_buf.OD;
PPK_UMO.DO:=_buf.DO;

_ret:=exec('check','overlap',_validate.OBJ.ref,PPK_UMO,,,2,,,'OD',PPK_UMO.PPK_UZA);
{? _ret=''
|| {? _validate.ACTION='add'
   || {? ~PPK_UMO.add(1)
      || _validate.msg_insert(_validate.OBJ.tostr);
         _validate.RESULT:=0
      ?}
   |? _validate.ACTION='put'
   || {? ~PPK_UMO.put(1)
      || _validate.msg_update(_validate.OBJ.tostr);
         _validate.RESULT:=0
      ?}
   || _validate.RESULT:=0
   ?}
|| {? _validate.ACTION='add'
   || _validate.msg_insert(_validate.OBJ.tostr,_ret)
   |? _validate.ACTION='put'
   || _validate.msg_update(_validate.OBJ.tostr,_ret)
   ?};
   _validate.MSG+='\n'+_ret;
   _validate.RESULT:=0
?};

~~

:Sign Version 2.0 jowisz:1048 2020/10/16 15:26:06 29e3ad088c3dae15d9d5535afbb09d383b0c94c97c13e9f38fcd8e0878b0743ad7b0870200ecac2046cdb3cfd69ac7db62892129a2ebb35ae1b90c85f898e7cdaea675b42f43983f6a649132d9376f38d9bcf7f84eb1b0c7d1c3c28b6f394383a930b3512a2976cea084888dd5bd6adfedbd1fd9a90e9503b98b69bd0c6056e1
