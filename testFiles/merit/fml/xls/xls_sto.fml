:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_sto.fml
:: Utworzony: 16.08.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu stanowisk w jednostkach organizacyjnych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='STO';
_def.FUNPAR:='ZWS_PAR_PSTO';
_def.DOMAIN:=exec('name','#b_domain','PKD');
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.SHEET:='Stanowiska w jednostkach=1,1';
_def.NAME:='Stanowiska w jednostkach'@;
_def.DESC:='Stanowiska w jednostkach';

: źródło danych
_def.TABLE:="STO";

: prolog
_def.BEFORE:="
   ROK_F.cntx_psh();
   ROK_F.prefix();
   UD_SKL.cntx_psh();
   UD_SKL.prefix();
   STN.cntx_psh();
   STN.prefix();
   KK.cntx_psh();
   KK.prefix();
   STO.cntx_psh();
   STO.f_clear();
   STO.index('ST');
   STO.prefix();
   ~~
";

: epilog
_def.AFTER:="
   STO.cntx_pop();
   KK.cntx_pop();
   STN.cntx_pop();
   UD_SKL.cntx_pop();
   ROK_F.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('UD_SKL',MS.name(STO,'UD_SKL'),1,,MS.comment(STO,'UD_SKL'));
   _env.define('STN',   MS.name(STO,'STN'),   1,,MS.comment(STO,'STN'));
   _env.define('STATUS',MS.name(STO,'STATUS'),1,,MS.comment(STO,'STATUS'));
   _env.define('KK',    MS.name(STO,'KK'),    1,,MS.comment(STO,'KK'));
   _env.define('ROK_F', MS.name(KK,'ROK_F'),  1,,MS.comment(KK,'ROK_F'));
   _env.define('SYSTEM',MS.name(KK,'SYSTEM'), 1,,MS.comment(KK,'SYSTEM'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.UD_SKL.VALUE:=STO.UD_SKL().SYMBOL;
   _buf.STN.VALUE:=STO.STN().ST;
   _buf.STATUS.VALUE:=STO.STATUS;
   _buf.KK.VALUE:=STO.KK().SYM;
   _buf.ROK_F.VALUE:=STO.KK().ROK_F().NAZ;
   _buf.SYSTEM.VALUE:=STO.KK().SYSTEM;
   _env.write_async('UD_SKL',STO.UD_SKL);
   _env.write_async('STN',STO.STN);
   _env.write_async('KK',STO.KK);
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_sto',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_sto',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.UD_SKL='' || 'UD_SKL'
   |? _buf.STN=''    || 'STN'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(UD_SKL,'SYMBOL');
{? +_buf.UD_SKL>_max
|| _val.msg_length('UD_SKL',_max);
   _buf.UD_SKL:=_max+_buf.UD_SKL
?};
_max:=MS.fld_len(STN,'ST');
{? +_buf.STN>_max
|| _val.msg_length('STN',_max);
   _buf.STN:=_max+_buf.STN
?};

: weryfikacja spójności referencyjnej
{? (_skl:=exec('szukaj_ud_skl','schemat','PODZORG',_buf.UD_SKL))=null
|| _val.msg_norec('UD_SKL');
   _val.RESULT:=0;
   return()
?};
{? ~STN.find_tab(,'ST',,'=',_buf.STN)
|| _val.msg_norec('STN');
   _val.RESULT:=0;
   return()
|| _stn:=STN.ref()
?};
_rf:=null;
{? _buf.ROK_F<>''
|| {? ~ROK_F.find_tab(,
         'FIRMA',,'=',REF.FIRMA,
         'NAZ',,'=',_buf.ROK_F
      )
   || _val.msg_norec('ROK_F');
      _val.RESULT:=0;
      return()
   || _rf:=ROK_F.ref()
   ?}
?};
_kk:=null;
{? _buf.KK<>''
|| {? ~KK.find_tab(,
         'FIRMA',,'=',REF.FIRMA,
         'SYSTEM',,'=',_buf.SYSTEM,
         'ROK_F',,'=',_rf,
         'SYM',,'=',_buf.KK
      )
   || _val.msg_norec('KK');
      _val.RESULT:=0;
      return()
   || _kk:=KK.ref()
   ?}
?};

_ref:=null;
{? STO.find_tab(,'UD_SKL',,'=',_skl,'STN',,'=',_stn)
|| _ref:=STO.ref()
?};

: optymalizacja importu i standaryzacja kodu
_obj:=_val.OBJ:=obj_new('STO','UD_SKL','STN','KK','to_str');
_obj.to_str:="'%1: %2'[_a.UD_SKL,_a.STN]";
_obj.UD_SKL:=_skl;
_obj.STN:=_stn;
_obj.KK:=_kk;
_obj.STO:=_ref;

{? _ref=null
|| _val.ACTION:='add'
|| _val.ACTION:='put'
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~l
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;

_set:="
   _a.UD_SKL:=_c.UD_SKL;
   _a.STN:=_c.STN;
   _a.KK:=_c.KK;
   _a.STATUS:=_b.STATUS;
   ~~
";

{? _val.ACTION='put' & _mod
:  włączono tryb nadpisywania
|| {? STO.seek(_obj.STO)
   || _set(STO,_buf,_obj);
      {? ~STO.put(1)
      || _val.msg_update(_obj.to_str(_buf));
         _val.RESULT:=0
      ?}
   || _val.msg_norec(,STO.comment());
      _val.RESULT:=0
   ?}

|? _val.ACTION='add'
:  brak ograniczeń
|| STO.blank();
   _set(STO,_buf,_obj);
   {? ~STO.add(1)
   || _val.msg_insert(_obj.to_str(_buf));
      _val.RESULT:=0
   ?}
?};
~~

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:51 e111a8b92ebacac7da2ccafeeed0dfecb4bca3daf34ccb77b09ec8a3f4750e0a3ae2f8d8f48632408685a5313efe69ff11f785ef1630a88e5cac9e933ea4a5b2353a9b4802b8d2b12b3e679a986fd21db403e20af75b8637bdc4966fc1726ecc30cc146809e6696a7a0aa9c94b66e2be577909eb3bc1d82907919ba49f842b05
