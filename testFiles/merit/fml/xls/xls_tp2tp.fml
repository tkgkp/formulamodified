:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_tp2tp.fml
:: Utworzony: 23.08.2022
:: Autor: [MW]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu powiązań typów dokumentów
::======================================================================================================================


\init_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TP2TP_1';
_def.DOMAIN:=exec('name','#b_domain','LSP');
_def.FUNPAR:='ZWS_PAR_LTDS';

_def.FILE:='sprzedaz.xlsx';
_def.SHEET:='Typy dok. sprz. i koryg.=1,1';
_def.NAME:='Powiązanie typów dokumentów sprzedaży i korygujących'@;
_def.DESC:='Powiązanie typów dokumentów sprzedaży i korygujących';

_def.PREFIX:="exec('prefix','xls_tp2tp',1)";
_def.TABLE:="exec('table','xls_tp2tp')";
_def.FIELDS:="exec('fields_1','xls_tp2tp',_a)";

_def.BEFORE:="exec('before_1','xls_tp2tp',_a)";
_def.AFTER:="exec('after_1','xls_tp2tp',_a)";
_def.SELECT:="";

_def.EXPORT:="exec('export','xls_tp2tp',_a,_b,1)";
_def.IMPORT:="exec('import','xls_tp2tp',_a,_b,_c,1)";
_def.VALIDATE:="exec('validate_1','xls_tp2tp',_a,_b,_c)";
~~


\init_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TP2TP_2';
_def.DOMAIN:=exec('name','#b_domain','LSP');
_def.FUNPAR:='ZWS_PAR_LTDS';

_def.FILE:='sprzedaz.xlsx';
_def.SHEET:='Typy dok. koryg. i zwrotu =1,1';
_def.NAME:='Powiązanie typów dokumentów korygujących i zwrotu'@;
_def.DESC:='Powiązanie typów dokumentów korygujących i zwrotu';

_def.PREFIX:="exec('prefix','xls_tp2tp',2)";
_def.TABLE:="exec('table','xls_tp2tp')";
_def.FIELDS:="exec('fields_2','xls_tp2tp',_a)";

_def.BEFORE:="exec('before_2','xls_tp2tp',_a)";
_def.AFTER:="exec('after_2','xls_tp2tp',_a)";
_def.SELECT:="";

_def.EXPORT:="exec('export','xls_tp2tp',_a,_b,2)";
_def.IMPORT:="exec('import','xls_tp2tp',_a,_b,_c,2)";
_def.VALIDATE:="exec('validate_2','xls_tp2tp',_a,_b,_c)";
~~

\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Określa zakres eksportowanych danych
::   WE: _a -  1 (sprzedaż->korekta) / 2 (korekta->zwrot)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_jak:=1;
{? var_pres('_a')=type_of(0) & (_a=1 | _a=2)
|| _jak:=_a
?};
{? _jak=2
|| TP2TP.index('T2')
|| TP2TP.index('T1')
?};
TP2TP.prefix(_jak);
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
TP2TP


\fields_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('T1','Dok. sprzedaż',,,'Typ dokumentu sprzedaży');
_def.define('T1_NAZ','Nazwa sprzedaż',,,'Nazwa dokumentu sprzedaży');
_def.define('T2','Dok. korekta',,,'Typ dokumentu korygujacego');
_def.define('T2_NAZ','Nazwa korekta',,,'Nazwa dokumentu korygujacego');
~~


\fields_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('T1','Dok. korekta',,,'Typ dokumentu korygujacego');
_def.define('T1_NAZ','Nazwa korekta',,,'Nazwa dokumentu korygujacego');
_def.define('T2','Dok. zwrotu',,,'Typ dokumentu zwrotu');
_def.define('T2_NAZ','Nazwa zwrotu',,,'Nazwa dokumentu zwrotu');
~~

\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::       _d -  1 (sprzedaż->korekta) / 2 (korekta->zwrot)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
_jak:=1;
{? var_pres('_d')=type_of(0) & (_d=1 | _d=2)
|| _jak:=_d
?};

{? _jak=2
|| TP2TP.index('T2')
|| TP2TP.index('T1')
?};
TP2TP.prefix(_jak);
{? _validate.ACTION='add'
|| TP2TP.blank();
   TP2TP.RODZ:=_jak
?};

TP2TP.TPS1:=_validate.OBJ.TPS1;
{? _jak=2
|| TP2TP.TPM2:=_validate.OBJ.TPM2
|| TP2TP.TPS2:=_validate.OBJ.TPS2
?};
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::       _c -  1 (sprzedaż->korekta) / 2 (korekta->zwrot)
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_jak:=1;
{? var_pres('_c')=type_of(0) & (_c=1 | _c=2)
|| _jak:=_c
?};

_result:=1;
TP2TP.cntx_psh();
_table.T1.VALUE:=TP2TP.TPS1().T;
_excel.write_async('TYPYSP',TP2TP.TPS1);
_table.T1_NAZ.VALUE:=TP2TP.TPS1().NAZ;
{? _jak=2
|| _table.T2.VALUE:=TP2TP.TPM2().T;
   _excel.write_async('TYPYDOK',TP2TP.TPM2);
   _table.T2_NAZ.VALUE:=TP2TP.TPM2().NAZ
|| _table.T2.VALUE:=TP2TP.TPS2().T;
   _excel.write_async('TYPYSP',TP2TP.TPS2);
   _table.T2_NAZ.VALUE:=TP2TP.TPS2().NAZ
?};
TP2TP.cntx_pop();
_result


\validate_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('TPS1','TPS2');

_result.OBJ.TPS1:=null();
{? _obj.T1=''
|| _result.MSG:='Nie podano typu dokumentu sprzedaży.'@;
   _result.RESULT:=0
|| _result.OBJ.TPS1:=exec('FindInSet','#table','TYPYSP','TYPYSP',_obj.T1,'N',,1,'N',null());
   {? _result.OBJ.TPS1=null()
   || _result.MSG:='Nie znaleziono typu dokumentu sprzedaży %1.'@[_obj.T1];
      _result.RESULT:=0
   ?}
?};

_result.OBJ.TPS2:=null();
{? _obj.T2=''
|| _result.MSG:='Nie podano typu dokumentu korygującego sprzedaż.'@;
   _result.RESULT:=0
|| _result.OBJ.TPS2:=exec('FindInSet','#table','TYPYSP','TYPYSP',_obj.T2,'N',,1,'T',null());
   {? _result.OBJ.TPS2=null()
   || _result.MSG:='Nie znaleziono typu dokumentu korygującego sprzedaż %1.'@[_obj.T2];
      _result.RESULT:=0
   ?}
?};

{? _result.RESULT=1
|| TYPYSP.cntx_psh();
   TYPYSP.prefix();
   TYPYSP.seek(_result.OBJ.TPS1);
   _ue1:=TYPYSP.UE;
   _zal1:=TYPYSP.ZAL;
   _fis1:=TYPYSP.FIS;
   _spp1:=TYPYSP.SPP;
   _vatzpoz1:=TYPYSP.VATZPOZ;
   TYPYSP.seek(_result.OBJ.TPS2);
   _ue2:=TYPYSP.UE;
   _zal2:=TYPYSP.ZAL;
   _fis2:=TYPYSP.FIS;
   _spp2:=TYPYSP.SPP;
   _vatzpoz2:=TYPYSP.VATZPOZ;
   _his2:=TYPYSP.HIS;
   TYPYSP.cntx_pop();
   {? _his2='T'
   || _result.MSG:='Typ dokumentu %1 jest korektą historyczną %1.'@[_obj.T2];
      _result.RESULT:=0
   |? _ue1<>_ue2 | _zal1<>_zal2 | _fis1<>_fis2 | _spp1<>_spp2 | _vatzpoz1<>_vatzpoz2
   || _result.MSG:='Typ dokumentu %1 nie może być korektą dla typu dokumentu %2 - mają różne cechy.'@[_obj.T2,_objT1];
      _result.RESULT:=0
   ?}
?};

{? _result.RESULT=1
|| {? TP2TP_IMP1<>''
   || TP2TP_IMP1+=' '
   ?};
   TP2TP_IMP1+=_obj.T1+','+_obj.T2;
   TP2TP.index('T1');
   TP2TP.prefix(1,_result.OBJ.TPS1,_result.OBJ.TPS2);
   {? TP2TP.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_tp2tp',_obj,_mode,_result,1)
      ?}
   || _result.ACTION:='add';
      exec('record','xls_tp2tp',_obj,_mode,_result,1)
   ?}
?};
~~


\validate_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [23.25]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('TPS1','TPM2');

_result.OBJ.TPS1:=null();
{? _obj.T1=''
|| _result.MSG:='Nie podano typu dokumentu korygującego.'@;
   _result.RESULT:=0
|| _result.OBJ.TPS1:=exec('FindInSet','#table','TYPYSP','TYPYSP',_obj.T1,'N',,1,'T',null());
   {? _result.OBJ.TPS1=null()
   || _result.MSG:='Nie znaleziono typu dokumentu korygującego %1.'@[_obj.T1];
      _result.RESULT:=0
   ?}
?};

_result.OBJ.TPM2:=null();
{? _obj.T2=''
|| _result.MSG:='Nie podano typu dokumentu zwrotu.'@;
   _result.RESULT:=0
|| _fml:="{? TYPYDOK.Z='T' & TYPYDOK.P='T' || TYPYDOK.ref() || null() ?}";
   _result.OBJ.TPM2:=exec('FindInSet','#table','TYPYDOK','TYP',_obj.T2,,_fml,1,,null());
   {? _result.OBJ.TPM2=null()
   || _result.MSG:='Nie znaleziono typu dokumentu zwrotu %1.'@[_obj.T2];
      _result.RESULT:=0
   ?}
?};

{? _result.RESULT=1
|| TYPYSP.cntx_psh();
   TYPYSP.prefix();
   TYPYSP.seek(_result.OBJ.TPS1);
   _kor1:=TYPYSP.KOR;
   TYPYSP.cntx_pop();
   TYPYDOK.cntx_psh();
   TYPYDOK.prefix();
   TYPYDOK.seek(_result.OBJ.TPM2);
   _dn2:=TYPYDOK.DN;
   _ds2:=TYPYDOK.DS;
   _td2:=TYPYDOK.TD;
   TYPYDOK.cntx_pop();
   {? _kor1='Z'
   || _result.MSG:='Typ dokumentu %1 jest korektą zbiorczą %1.'@[_obj.T1];
      _result.RESULT:=0
   |? _dn2<>'T' | _ds2<>'N' | _td2<>''
   || _result.MSG:='Typy dokumentu %1 nie może być zwrotem dla korekty - na ma odpowiednich cech.'@[_obj.T2];
      _result.RESULT:=0
   ?}
?};

{? _result.RESULT=1
|| {? TP2TP_IMP2<>''
   || TP2TP_IMP2+=' '
   ?};
   TP2TP_IMP2+=_obj.T1+','+_obj.T2;
   TP2TP.index('T2');
   TP2TP.prefix(2,_result.OBJ.TPS1,_result.OBJ.TPM2);
   {? TP2TP.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_tp2tp',_obj,_mode,_result,2)
      ?}
   || _result.ACTION:='add';
      exec('record','xls_tp2tp',_obj,_mode,_result,2)
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=TP2TP.add(1)
   |? _validate.ACTION='put'
   || _result:=TP2TP.put(1)
   ?}
?};
{? _result=0
|| _validate.MSG:='Dodanie powiązania typów dokumentów nie powiodło się.'@
?};
_result


\before_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Przed importem z Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
{? _def.KIND='IMPORT'
|| VAR_DEL.delete('TP2TP_IMP1');
   TP2TP_IMP1:=''
?};
TP2TP.cntx_psh()


\before_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Przed importem z Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
{? _def.KIND='IMPORT'
|| VAR_DEL.delete('TP2TP_IMP2');
   TP2TP_IMP2:=''
?};
TP2TP.cntx_psh()


\after_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Po imporcie z Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

{? _def.KIND='IMPORT'
|| {?_def.excel.IMP_MODE
   || TP2TP.index('T1');
      TP2TP.prefix(1);
      {? TP2TP.first()
      || {!
         |? {?(' '+TP2TP_IMP1+' ')*(' '+TP2TP.TPS1().T+','+TP2TP.TPS2().T+' ')=0
            || TP2TP.cntx_psh();
              _next:=TP2TP.next();
               TP2TP.cntx_pop();
               _vv:=exec('args_valid','#excel_imex',_def.excel);
               _msg:='Typ dokumentu sprzedaży %1 i korekty %2'@[TP2TP.TPS1().T,TP2TP.TPS2().T];
               _vv.blank();
               {?_vv.RESULT:=(TP2TP.del(1,1)>0)
               || _msg+=' - usunięto powiązanie.'@
               || _msg+=' - nie udało się usunąć powiązania.'@
               ?};
               _vv.MSG:=_msg;
               exec('history_add_imp','#excel_imex',_vv,_def.excel);
               obj_del(_vv);
               _next
            || TP2TP.next()
            ?}
         !}
      ?}
   ?};
   VAR_DEL.delete('TP2TP_IMP1')
?};

TP2TP.cntx_pop()


\after_2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Po imporcie z Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

{? _def.KIND='IMPORT'
|| {?_def.excel.IMP_MODE
   || TP2TP.index('T2');
      TP2TP.prefix(2);
      {? TP2TP.first()
      || {!
         |? {?(' '+TP2TP_IMP2+' ')*(' '+TP2TP.TPS1().T+','+TP2TP.TPM2().T+' ')=0
            || TP2TP.cntx_psh();
              _next:=TP2TP.next();
               TP2TP.cntx_pop();
               _vv:=exec('args_valid','#excel_imex',_def.excel);
               _msg:='Typ dokumentu korekty %1 i zwrotu %2'@[TP2TP.TPS1().T,TP2TP.TPM2().T];
               _vv.blank();
               {?_vv.RESULT:=(TP2TP.del(1,1)>0)
               || _msg+=' - usunięto powiązanie.'@
               || _msg+=' - nie udało się usunąć powiązania.'@
               ?};
               _vv.MSG:=_msg;
               exec('history_add_imp','#excel_imex',_vv,_def.excel);
               obj_del(_vv);
               _next
            || TP2TP.next()
            ?}
         !}
      ?}
   ?};
   VAR_DEL.delete('TP2TP_IMP2')
?};

TP2TP.cntx_pop()

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:12 346a96738b38e559930a837a7acb48357ef16c5748119154f986727ff4aa5d883fecfca3c6c5a35c66169453e9512fb21d68a6c1485197474df8cab98bf437826d69c411cb576b3df5d1336401b371db0ccf1b562759df81531d7d92baf867db251a9aece3fb5367f4816892d677596044509523ee1e77db5c8cbd17d239809b
