:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_tpartra.fml
:: Utworzony: 12.08.2020
:: Autor: AKUL
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu translacji parametrów kart technologicznych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TPARTRA';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='TKTL';
_def.HIDDEN:='T';
_def.SKIP:='T';
_def.ADD_ROWS:=0;

_def.FILE:='produkcja_technologie.xlsx';
_def.SHEET:='Translacje parametrów'@+'=1,1';
_def.NAME:='Translacje parametrów'@;
_def.DESC:='Transalcje parametrów dla półproduktów'@;

_def.PREFIX:="TPARTRA.index('SURPAR'); TPARTRA.prefix()";
_def.TABLE:="TPARTRA";
_def.FIELDS:="exec('fields','xls_tpartra',_a)";

_def.BEFORE:="TPARTRA.cntx_psh()";
_def.AFTER:="{? _a.is_import() || exec('tktl_import_clear','tech_common',_a.excel) ?};TPARTRA.cntx_pop()";

_def.EXPORT:="exec('export','xls_tpartra',_a,_b)";
_def.VALIDATE:="exec('validate','xls_tpartra',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_tpartra',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_edit:=0;
_def.define('TKTL_NRK','Nr karty surowca'@,_edit);
_def.define('TKTL_WER','Wersja karty surowca'@,_edit);
_def.define('UNROP','Unikalny nr operacji'@,_edit,,,type_of(''));
_def.define('SUR','Nr surowca'@,_edit,,,type_of(0),0);
_def.define('ZAM','Nr zamiennika'@,_edit,,,type_of(0),0);
_def.define('KTL_NRK','Nr karty parametru'@,_edit);
_def.define('KTL_WER','Wersja karty parametru'@,_edit);
_def.define('PAR','Nr parametru'@,_edit,,,type_of(0),0);
_def.define('TRANS','Translacja'@,_edit,'Formuła translacji parametru'@);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TPARTRA.prefix();
{? _validate.ACTION='add'
|| TPARTRA.blank();
   TPARTRA.ZAM:=_validate.OBJ.ZAM;
   TPARTRA.SUR:={? TPARTRA.ZAM=null()|| _validate.OBJ.SUR || null() ?};
   TPARTRA.PAR:=_validate.OBJ.PAR;
   TPARTRA.RTPAR:={? TPARTRA.PAR<>null() || $TPARTRA.PAR || '' ?}
?};
TPARTRA.TRANS:=_obj.TRANS;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.TKTL_NRK.VALUE:={? TPARTRA.ZAM<>null()
                       || TPARTRA.ZAM().NRK().NRK
                       || TPARTRA.SUR().NRK().NRK
                       ?};
_table.TKTL_WER.VALUE:={? TPARTRA.ZAM<>null()
                       || TPARTRA.ZAM().NRK().WER
                       || TPARTRA.SUR().NRK().WER
                       ?};
_table.SUR.VALUE:={? TPARTRA.ZAM<>null()
                  || TPARTRA.ZAM().SRC().LP
                  || TPARTRA.SUR().LP
                  ?};
:: Wyszukuje nowy nr operacji z tablicy mapującej
_table.UNROP.VALUE:={? __TOPER_MAP.find_key(TPARTRA.SUR().NROP().UNROP)
                    || $__TOPER_MAP.NEW
                    || ''
                    ?};
_table.ZAM.VALUE:=TPARTRA.ZAM().LP;
_table.KTL_NRK.VALUE:=TPARTRA.PAR().NRK().NRK;
_table.KTL_WER.VALUE:=TPARTRA.PAR().NRK().WER;
_table.PAR.VALUE:=TPARTRA.PAR().NRP;
_table.TRANS.VALUE:=TPARTRA.TRANS;

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('SUR','ZAM','PAR');
_imp_err:=0;
_check:=1;

:: Sprawdzam czy do karty zgłoszony został błąd
{? __TKTL_ERR.find_key(_obj.TKTL_NRK,_obj.TKTL_WER,) | __TKTL_ERR.find_key(_obj.KTL_NRK,_obj.KTL_WER,)
|| _imp_err:=1
?};
:: Jeżeli wcześniej został zgłoszony błąd to wychodzę wcześniej bez dodatkowej walidacji
{? _imp_err>0
|| _result.RESULT:=0
||
:: Wyszukanie refów powiązanych rekordów
   _tktl:={? _obj.TKTL_NRK='' | _obj.TKTL_WER=''
          || null()
          || exec('FindInSet','#table','TKTL','NRK',_obj.TKTL_WER,'T',,1,_obj.TKTL_NRK,null())
          ?};
   _result.OBJ.SUR:={? _tktl=null() | _obj.SUR<=0
                    || null()
                    || _oper:=exec('FindInSet','#table','TOPER','UNROP',#_obj.UNROP,,,,,null());
                       exec('FindInSet','#table','TMAT','NNL',_obj.SUR,_tktl,,,_oper,null())
                    ?};
   _result.OBJ.ZAM:={? _result.OBJ.SUR=null() | _obj.ZAM<=0
                    || null()
                    || exec('FindInSet','#table','TCHMAT','NSL',_obj.ZAM,_tktl,,,_result.OBJ.SUR,null())
                    ?};
   _result.OBJ.PAR:={? _obj.KTL_NRK='' | _obj.KTL_WER='' | _obj.PAR<0
                    || null()
                    || _ktl:=exec('FindInSet','#table','TKTL','NRK',_obj.KTL_WER,'T',,1,_obj.KTL_NRK,null());
                       exec('FindInSet','#table','TPAR','NN',_obj.PAR,_ktl,,,,null())
                    ?};
:: Błędy
   {? _obj.SUR>0 & _result.OBJ.SUR=null()
   || _result.msg_norec('SUR');
      _result.RESULT:=0
   ?};
   {? _obj.ZAM>0 & _result.OBJ.ZAM=null()
   || _result.msg_norec('ZAM');
      _result.RESULT:=0
   ?};
   {? _result.OBJ.PAR=null()
   || _result.msg_norec('PAR');
      _result.RESULT:=0
   ?}
?};

:: OK
{? _result.RESULT>0
||
   TPARTRA.index('SURPAR');
   TPARTRA.prefix($_result.OBJ.PAR,_result.OBJ.PAR,_result.OBJ.SUR,_result.OBJ.ZAM);
   {? TPARTRA.first()
   || {? _mode=0
      || _result.RESULT:=0;
         _check:=0;
         _result.MSG:='Technologia %1 (wer.%2) posiada już translację parametru o numerze %3 przypisany do %4.'@
            [_obj.TKTL_NRK,_obj.TKTL_WER,$_obj.PAR,
            {? _result.OBJ.ZAM<>null()
            || 'zamiennika surowca '@+exec('FindAndGet','#table',TMAT,_result.OBJ.SUR,,"$TMAT.LP+'. '+TMAT.PT().N",'')
               +' - '+exec('FindAndGet','#table',TCHMAT,_result.OBJ.ZAM,,"$TCHMAT.LP+'. '+TCHMAT.PT().N",'')
            || 'surowca '@+exec('FindAndGet','#table',TMAT,_result.OBJ.SUR,,"$TMAT.LP+'. '+TMAT.PT().N",'')
            ?}]
      || _result.ACTION:='put';
         exec('record','xls_tpartra',_obj,_mode,_result)
      ?}
   || _result.ACTION:='add';
      exec('record','xls_tpartra',_obj,_mode,_result)
   ?}
?};
{? _result.RESULT<=0 & _check>0 & _imp_err=0
||
:: Jak błąd to ustawiam znacznik błędu na karcie technologicznej
   {? _tktl<>null()
   || TKTL.cntx_psh();
      TKTL.prefix();
      {? TKTL.seek(_tktl)
      || TKTL.IMP_ERR:='T';
         TKTL.put();
         _result.MSG+='\nKarta %1 (wer. %2) oraz wszystkie jej elementy, które zostały do tej pory zaimportowane '
                      'zostaną usunięte.'[TKTL.NRK,TKTL.WER];
::       Dodaję kartę do listy ignorowanych kart przy imporcie
         __TKTL_ERR.NRK:=_obj.TKTL_NRK;
         __TKTL_ERR.WER:=_obj.TKTL_WER;
         __TKTL_ERR.add()
      ?};
      TKTL.cntx_pop()
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| EXCEL_ENV.ID_GRP:={? TPARTRA.SUR<>null()
                     || exec('FindAndGet','#table','TMAT',TPARTRA.SUR,,"$TMAT.NRK",'')
                     || exec('FindAndGet','#table','TCHMAT',TPARTRA.ZAM,,"$TCHMAT.NRK",'')
                     ?};
   {? _validate.ACTION='add'
   || _result:=TPARTRA.add(1)
   |? _validate.ACTION='put'
   || _result:=TPARTRA.put(1)
   ?}
|| EXCEL_ENV.ID_GRP:=''
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie translacji parametrów karty technologicznej %1 (%2) nie powiodło się.'@
                     [_obj.TKTL_NRK,_obj.TKTL_WER]
   || _validate.MSG:='Poprawa translacji parametrów karty technologicznej %1 (%2) nie powiodła się.'@
                     [_obj.TKTL_NRK,_obj.TKTL_WER]
   ?}
?};
_result

:Sign Version 2.0 jowisz:1048 2020/10/16 15:26:06 826ecf07ccf71de63ef27e3561332236a99d8ade8cc84bd67fd0e7c311503464dcb56a8ebe0a2588a409047626c3f42294efc8ff897a4c6cd6965ad818291cc4be4e47ba2e42a08d21947aece40ab57cac66f6c826b1689b911e7d5f8fdfc2c6921b9f3a94096a466b0ba5e3adbb2b2f9e564ba8648707e8ba5b2edc3795f327
