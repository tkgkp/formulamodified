:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_badsep.fml
:: Utworzony: 30.07.2018
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu pozycji zestawu badań
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='BADSEP';
_def.DOMAIN:=exec('name','#b_domain','LMG');
_def.FUNPAR:='ZWS_PAR_KBAD';

_def.FILE:='logistyka_badania.xlsx';
_def.SHEET:='Pozycje zestawu badań=1,1';
_def.NAME:='Pozycje zestawu badań'@;
_def.DESC:='Pozycje zestawu badań';

_def.PREFIX:="exec('prefix','xls_badsep')";
_def.TABLE:="exec('table','xls_badsep')";
_def.FIELDS:="exec('fields','xls_badsep',_a)";

_def.BEFORE:="BADSEP.cntx_psh()";
_def.AFTER:="BADSEP.cntx_pop()";
_def.SELECT:="exec('select','xls_badsep',_a)";

_def.EXPORT:="exec('export','xls_badsep',_a,_b)";
_def.IMPORT:="exec('import','xls_badsep',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_badsep',_a,_b,_c)";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
BADSEP.index('SEHPAR_U');
BADSEP.prefix();
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
BADSEP


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('BADSEH','Zestaw badań',0,,'Nazwa zestawu badań - 60 znaków.');
_def.define('BADPAR','Zestaw badań',0,,'Nazwa parametru badania - 60 znaków.');
_def.define('SOURCE','Metodyka',0,,'Domyślne źródło/metodyka pomiaru');
_def.define('VALLOW','Wartość od',0,,'Domyślna wartość parametru - dolna wartość');
_def.define('VALHIGH','Wartość do',0,,'Domyślna wartość parametru - górna wartość');
_def.define('VALTN','Wartość T/N',0,,'Domyślna wartość parametru - (T/N)');
_def.define('DRUK_DK','Wydruk na dokumentach',0,,'Czy drukować na pozycjach dokumentów magazynowych? - (T/N)');
_def.define('DRUK_FAP','Wydruk na fakturach',0,,'Czy drukować na pozycjach dokumentów sprzedaży? - (T/N)');
_def.define('CZY_DEF','Domyślna',0,,'Czy określono wartość domyślną?');
_def.define('DEF_VAL','Wartość domyślna',0,,'Wartość domyślna parametru');
_def.define('DEF_CURD','Wg daty bieżącej',0,,'Czy wartość domyślna ustalana na podstawie aktualnej daty');
_def.define('DEF_DNI','Ilość dni',0,,'Odchylenie wartości domyślnej od aktualnej daty (ilość dni)');
_def.define('CYKL_CO','Cykliczność - co ilość',0,,'Czy parametr generowany cylicznie (co X ilość)');
_def.define('IL_CO','Cykl - co ilość',0,,'Co jaki cykl (ilość) generować parmetr');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

BADSEP.index('SEHPAR_U');
BADSEP.prefix();
{? _validate.ACTION='add'
||
   BADSEP.blank();
   BADSEP.BADSEH:=_validate.OBJ.BADSEH;
   BADSEP.BADPAR:=_validate.OBJ.BADPAR
?};

BADSEP.SOURCE:=_obj.SOURCE;
BADSEP.VALLOW:=_obj.VALLOW;
BADSEP.VALHIGH:=_obj.VALHIGH;
BADSEP.VALTN:=_obj.VALTN;
BADSEP.DRUK_DK:=_obj.DRUK_DK;
BADSEP.DRUK_FAP:=_obj.DRUK_FAP;
BADSEP.CZY_DEF:=_obj.CZY_DEF;
BADSEP.DEF_VAL:=_obj.DEF_VAL;
BADSEP.DEF_CURD:=_obj.DEF_CURD;
BADSEP.DEF_DNI:=_obj.DEF_DNI;
BADSEP.CYKL_CO:=_obj.CYKL_CO;
BADSEP.IL_CO:=_obj.IL_CO;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.BADSEH.VALUE:=BADSEP.BADSEH().N; _excel.write_async('BADSEH',BADSEP.BADSEH);
_table.BADPAR.VALUE:=BADSEP.BADPAR().N; _excel.write_async('BADPAR',BADSEP.BADPAR);
_table.SOURCE.VALUE:=BADSEP.SOURCE;
_table.VALLOW.VALUE:=BADSEP.VALLOW;
_table.VALHIGH.VALUE:=BADSEP.VALHIGH;
_table.VALTN.VALUE:=BADSEP.VALTN;
_table.DRUK_DK.VALUE:=BADSEP.DRUK_DK;
_table.DRUK_FAP.VALUE:=BADSEP.DRUK_FAP;
_table.CZY_DEF.VALUE:=BADSEP.CZY_DEF;
_table.DEF_VAL.VALUE:=BADSEP.DEF_VAL;
_table.DEF_CURD.VALUE:=BADSEP.DEF_CURD;
_table.DEF_DNI.VALUE:=BADSEP.DEF_DNI;
_table.CYKL_CO.VALUE:=BADSEP.CYKL_CO;
_table.IL_CO.VALUE:=BADSEP.IL_CO;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

{? ~(+_obj.SOURCE)   || _result.msg_empty('SOURCE'); _result.RESULT:=0 ?};
{? ~(+_obj.DRUK_DK)  || _result.msg_inset('DRUK_DK','T','N'); _result.RESULT:=0 ?};
{? ~(+_obj.CZY_DEF) || _result.msg_inset('CZY_DEF','T','N'); _result.RESULT:=0 ?};
{? +_obj.DEF_CURD>0 & 'TN'*_obj.DEF_CURD=0 || _result.msg_inset('DEF_CURD','T','N');_result.RESULT:=0 ?};
{? ~(+_obj.CYKL_CO) || _result.msg_inset('CYKL_CO','T','N'); _result.RESULT:=0 ?};

_result.OBJ:=obj_new('BADSEH','BADPAR');

_result.OBJ.BADSEH:={? _obj.BADSEH='' || null() || exec('FindInSet','#table','BADSEH','NN',_obj.BADSEH,,,1) ?};
{? _result.OBJ.BADSEH=null()
|| _result.MSG:={? _obj.BADSEH=''
                || 'Nie podano zestawu badań.'@
                || 'Nie znaleziono zastawu badań %1.'@[_obj.BADSEH]
                ?};
   _result.RESULT:=0
?};

_result.OBJ.BADPAR:={? _obj.BADPAR='' || null() || exec('FindInSet','#table','BADPAR','N',_obj.BADPAR,,,1) ?};
{? _result.OBJ.BADPAR=null()
|| _result.MSG:={? _obj.BADPAR=''
                || 'Nie podano parametru badań.'@
                || 'Nie znaleziono parametru badań %1.'@[_obj.BADPAR]
                ?};
   _result.RESULT:=0
?};

{? _result.RESULT=1
||
   BADSEP.index('SEHPAR_U');
   BADSEP.prefix(_result.OBJ.BADSEH,_result.OBJ.BADPAR);
   {? BADSEP.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_badsep',_obj,_mode,_result);
         {? exec('chkbadsp','statexam',_result.ACTION)<>'' || _result.RESULT:=0 ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_badsep',_obj,_mode,_result);
      {? exec('chkbadsp','statexam',_result.ACTION)<>'' || _result.RESULT:=0 ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=BADSEP.add(1)
   |? _validate.ACTION='put'
   || _result:=BADSEP.put(1)
   ?}
?};
{? _result=0
|| _validate.MSG:={? _validate.ACTION='add'
                  || 'Dodanie pozycji zestawu badań %1 nie powiodło się.'@[BADSEP.BADSEH().N]
                  || 'Modyfikacja pozycji zestawu badań %1 nie powiodła się.'@[BADSEP.BADSEH().N]
                  ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(2,'N','STRING[60]','Zestaw'
   ,'PAR','STRING[60]','Parametr'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'SOURCE','STRING[255]','Metodyka');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'N',,,'PAR',,);

BADSEH.cntx_psh();
BADPAR.cntx_psh();
BADSEP.cntx_psh();
BADSEP.index('SEHPAR_');
BADSEP.prefix();
{? BADSEP.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$BADSEP.ref();
      _selected.prefix($BADSEP.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.N:=BADSEP.BADSEH().N;
      _tab.PAR:=BADSEP.BADPAR().N;
      _tab.SOURCE:=BADSEP.SOURCE;
      _tab.add();
      BADSEP.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'N,PAR',20,'Wybór pozycji zestawu badań do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
BADSEH.cntx_pop();
BADPAR.cntx_pop();
BADSEP.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 de79f57b114074debfb41ffe8ce1b8edb6610bd6ca92a359c468dd54cd341e58287047a023bad3453c64573f66f82269a9416d73c36b6a23853ffb95d84bef06217a68137906f9b68e9ee0164cd0112c02f176bfa6f19cd6b6637dcf21909ce265ccae66272facb12685713b68a68b1b55b85e3c4e11b3c1a75b0aa39eae7d5f
