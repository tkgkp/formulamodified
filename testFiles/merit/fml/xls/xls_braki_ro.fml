:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_braki_ro.fml
:: Utworzony: 11.05.2022
:: Autor: AKUL
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu rodzajów braków
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='BRAKI_RO';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='ZWS_PAR_TRBR';

_def.FILE:='produkcja.xlsx';
_def.SHEET:='Operacje do rodzajów braków'@+'=1,1';
_def.NAME:='Operacje do rodzajów braków'@;
_def.DESC:='Przypisane operacje do rodzajów braków'@;

_def.PREFIX:="BRAKI_RO.index('BRAKI_R'); BRAKI_RO.prefix()";
_def.TABLE:="BRAKI_RO";
_def.FIELDS:="exec('fields','xls_braki_ro',_a)";

_def.BEFORE:="BRAKI_RO.cntx_psh()";
_def.AFTER:="BRAKI_RO.cntx_pop()";
_def.SELECT:="exec('select','xls_braki_ro',_a)";

_def.EXPORT:="exec('export','xls_braki_ro',_a,_b)";
_def.VALIDATE:="exec('validate','xls_braki_ro',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_braki_ro',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('BRAKI_R','Rodzaj braku'@,0);
_def.define('TTOPER','Operacja wew.'@,0,,'Operacja wewnętrzna'@);
_def.define('TTOUT','Operacja zew.'@,0,,'Operacja zewnętrzna (kooperacja)'@);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
BRAKI_RO.prefix();
{? _validate.ACTION='add'
|| BRAKI_RO.blank();
   BRAKI_RO.BRAKI_R:=_validate.OBJ.BRAKI_R;
   BRAKI_RO.TTOPER:=_validate.OBJ.TTOPER;
   BRAKI_RO.TTOUT:=_validate.OBJ.TTOUT
?};
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.BRAKI_R.VALUE:=BRAKI_RO.BRAKI_R().KOD; _excel.write_async('BRAKI_R',BRAKI_RO.BRAKI_R);
_table.TTOPER.VALUE:=BRAKI_RO.TTOPER().KOD; _excel.write_async('TTOPER',BRAKI_RO.TTOPER);
_table.TTOUT.VALUE:=BRAKI_RO.TTOUT().KOD; _excel.write_async('TTOUT',BRAKI_RO.TTOUT);

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('BRAKI_R','TTOPER','TTOUT');
_result.OBJ.BRAKI_R:=exec('FindInSet','#table','BRAKI_R','KOD',_obj.BRAKI_R,,"BRAKI_R.ref()",1);
_result.OBJ.TTOPER:=exec('FindInSet','#table','TTOPER','KOD',_obj.TTOPER,,"TTOPER.ref()",1);
_result.OBJ.TTOUT:=exec('FindInSet','#table','TTOUT','KOD',_obj.TTOUT,,"TTOUT.ref()",1);

:: Błędy
{? _result.OBJ.BRAKI_R=null()
|| _result.msg_norec('BRAKI_R');
   _result.RESULT:=0
?};
{? _obj.TTOPER<>'' & _result.OBJ.TTOPER=null()
|| _result.msg_norec('TTOPER');
   _result.RESULT:=0
?};
{? _obj.TTOUT<>'' & _result.OBJ.TTOUT=null()
|| _result.msg_norec('TTOUT');
   _result.RESULT:=0
?};

:: OK
{? _result.RESULT>0
|| BRAKI_RO.index('BRAKI_R');
   BRAKI_RO.prefix(_result.OBJ.BRAKI_R,_result.OBJ.TTOPER,_result.OBJ.TTOUT);
   {? BRAKI_RO.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_braki_ro',_obj,_mode,_result);
         {? exec('braki_ro_chk','braki',1)<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_braki_ro',_obj,_mode,_result);
      {? exec('braki_ro_chk','braki',0)<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=BRAKI_RO.add(1)
   |? _validate.ACTION='put'
   || _result:=BRAKI_RO.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie operacji \'%1\' do rodzaju braku \'%2\' nie powiodło się.'@
         [{? _obj.TTOPER<>'' || _obj.TTOPER || _obj.TTOUT ?},_obj.BRAKI_R]
   || _validate.MSG:='Poprawa operacji \'%1\' do rodzaju braku \'%2\' nie powiodła się.'@
         [{? _obj.TTOPER<>'' || _obj.TTOPER || _obj.TTOUT ?},_obj.BRAKI_R]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [22.26]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,
   'BRAKI_R','STRING[20]','Rodzaj braku'
   ,'OPER','STRING[10]','Operacja'
   ,'ZEW','STRING[1]','Zewnętrzna?'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'BRAKI_R',,,'ZEW',,,'OPER',,);

BRAKI_RO.cntx_psh();
BRAKI_RO.index('BRAKI_R');
BRAKI_RO.prefix();
{? BRAKI_RO.first()
|| {!
   |?  _tab.blank();
       _tab.REF:=$BRAKI_RO.ref();
       _selected.prefix($BRAKI_RO.ref());
       {? _selected.first()
       || _tab.SELECTED:='T'
       || _tab.SELECTED:='N'
       ?};
       _tab.BRAKI_R:=BRAKI_RO.BRAKI_R().KOD;
       {? BRAKI_RO.TTOPER<>null()
       || _tab.OPER:=BRAKI_RO.TTOPER().KOD;
          _tab.ZEW:='N'
       || _tab.OPER:=BRAKI_RO.TTOUT().KOD;
          _tab.ZEW:='T'
       ?};
       _tab.add();
       BRAKI_RO.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'BRAKI_R,OPER,ZEW[TN]',20,
   'Wybór powiązań operacji do rodzajów braków do eksportu'@);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
BRAKI_RO.cntx_pop();
_result

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:41 57b8c0862d028468eb9ca727d441f812657f4bb8774e3d1511713648e08c26643b71374506593fb6011035eb0c2c5c9543dd63ef4c28b4baee9f1bd4fccf695b948ef54a7f9081ea144fcb2d299ea0f981a5dc46797ab4db7d8690aa99b41588b87f891179e810389bce5ac16dd68d93f0222354a6c5c99cbdb8aa217f297bc4
