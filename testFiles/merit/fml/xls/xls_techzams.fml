:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_techzams.fml
:: Utworzony: 12.08.2020
:: Autor: AKUL
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu zamienników stanowisk technologii
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TECHZAMS';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='TKTL';
_def.HIDDEN:='T';
_def.SKIP:='T';
_def.ADD_ROWS:=0;

_def.FILE:='produkcja_technologie.xlsx';
_def.SHEET:='Zamienniki stanowisk'@+'=1,1';
_def.NAME:='Zamienniki stanowisk w technologii'@;
_def.DESC:='Zamienniki stanowisk w technologii'@;

_def.PREFIX:="TECHZAMS.index('TTL'); TECHZAMS.prefix()";
_def.TABLE:="TECHZAMS";
_def.FIELDS:="exec('fields','xls_techzams',_a)";

_def.BEFORE:="TECHZAMS.cntx_psh()";
_def.AFTER:="{? _a.is_import() || exec('tktl_import_clear','tech_common',_a.excel) ?};TECHZAMS.cntx_pop()";
::_def.SELECT:="exec('select','xls_techzams',_a)";

_def.EXPORT:="exec('export','xls_techzams',_a,_b)";
_def.VALIDATE:="exec('validate','xls_techzams',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_techzams',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
::_dokl_czas:=exec('get','#params',500604,1);
_edit:=0;
_def.define('TKTL_NRK','Nr karty'@,_edit);
_def.define('TKTL_WER','Wersja karty'@,_edit);
_def.define('TOPER','Nr operacji'@,_edit,,'Unikalny numer operacji technologicznej');
_def.define('PLACE','Stanowisko'@,_edit);
_def.define('OPER','Operacja'@,_edit);
_def.define('LP','Lp'@,_edit,,,,0);
_def.define('NTIME','Norma czasowa'@,_edit,,,type_of(''));
_def.define('COEF','Współczynnik'@,_edit,,'Współczynnik PLN / godzinę',type_of(''));
_def.define('FCOEF','Formuła na COEF'@,_edit);
_def.define('FNTIME','Formuła na NTIME'@,_edit);
_def.define('MTIME','Czas maszynowy'@,_edit,,,type_of(''));
_def.define('FMTIME','Formuła na MTIME'@,_edit);
_def.define('KH','Koszt godz. stanow.'@,_edit,,'Koszt godziny pracy stanowiska',,4);
_def.define('KX','Koszt pracy stanowiska'@,_edit,,,,4);
_def.define('TTM','Czas odczekania'@,_edit,,'Czas o ile operacja będzie odsunięta od poprzedniej'
            ,type_of(''));
_def.define('FTTM','Formuła na TTM'@,_edit);
_def.define('NKO','Nakładkowanie operacji'@,_edit,,'O ile można nałożyć tą operację na poprzednią',type_of(''));
_def.define('FNKO','Formuła na NKO'@,_edit);
_def.define('PLNX','Płaca na XJM'@,_edit,,'Płaca na x jednostek miar wykonanego wyrobu',,4);
_def.define('OPIS','Opis'@,_edit);
_def.define('ACT','Aktualny'@,_edit,,'Znacznik aktualności elementu - [T]/[N]');
_def.define('CRE_TIME','Czas powołania elementu'@,_edit,,,type_of(''));
_def.define('MOD_TIME','Czas modyfikacji elementu'@,_edit,,,type_of(''));
_def.define('OD','Obowiązuje od'@,_edit);
_def.define('USER','Zmieniał'@,_edit,,'Operator, który zmieniał element');
_def.define('CAUSE','Powód zmiany'@,_edit);
_def.define('GRUPA','Gniazdo produkcyjne'@,_edit);
_def.define('TWRKPLG','Element domyślny gniazda'@,_edit);
_def.define('GRPOJ','Grupa/pojedyncze'@,_edit,,'Grupa stanowisk (gniazdo) - [G], pojedyncze stanowisko - [S]');
_def.define('PLNH','Płaca na godzinę'@,_edit,,,,4);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TECHZAMS.prefix();
{? _validate.ACTION='add'
|| TECHZAMS.blank();
   TECHZAMS.NRK:=_validate.OBJ.NRK;
   TECHZAMS.TOPER:=_validate.OBJ.TOPER;
   TECHZAMS.LP:=_obj.LP
?};
TECHZAMS.PLACE:=_validate.OBJ.PLACE;
TECHZAMS.OPER:=_validate.OBJ.OPER;
TECHZAMS.NTIME:=exec('str2real','#convert',_obj.NTIME);
TECHZAMS.COEF:=exec('str2real','#convert',_obj.COEF);
TECHZAMS.FCOEF:=_obj.FCOEF;
TECHZAMS.FNTIME:=_obj.FNTIME;
TECHZAMS.MTIME:=exec('str2real','#convert',_obj.MTIME);
TECHZAMS.FMTIME:=_obj.FMTIME;
TECHZAMS.KH:=_obj.KH;
TECHZAMS.KX:=_obj.KX;
TECHZAMS.TTM:=exec('str2real','#convert',_obj.TTM);
TECHZAMS.FTTM:=_obj.FTTM;
TECHZAMS.NKO:=exec('str2real','#convert',_obj.NKO);
TECHZAMS.FNKO:=_obj.FNKO;
TECHZAMS.PLNX:=_obj.PLNX;
TECHZAMS.OPIS:=_obj.OPIS;
TECHZAMS.ACT:=_obj.ACT;
TECHZAMS.CRE_TIME:=#_obj.CRE_TIME;
TECHZAMS.MOD_TIME:=#_obj.MOD_TIME;
TECHZAMS.OD:=_obj.OD;
TECHZAMS.USER:=_validate.OBJ.USER;
TECHZAMS.CAUSE:=_validate.OBJ.CAUSE;
TECHZAMS.GRUPA:=_validate.OBJ.GRUPA;
TECHZAMS.TWRKPLG:=_validate.OBJ.TWRKPLG;
TECHZAMS.GRPOJ:=_obj.GRPOJ;
TECHZAMS.PLNH:=_obj.PLNH;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;

_table.TKTL_NRK.VALUE:=TECHZAMS.NRK().NRK;
_table.TKTL_WER.VALUE:=TECHZAMS.NRK().WER;
:: Wyszukuje nowy nr operacji z tablicy mapującej
_table.TOPER.VALUE:={? __TOPER_MAP.find_key(TECHZAMS.TOPER().UNROP)
                    || $__TOPER_MAP.NEW
                    || ''
                    ?};
_table.PLACE.VALUE:=TECHZAMS.PLACE().KOD;
_table.OPER.VALUE:=TECHZAMS.OPER().KOD;
_table.LP.VALUE:=TECHZAMS.LP;
_table.NTIME.VALUE:=exec('to_string','#convert',TECHZAMS.NTIME);
_table.COEF.VALUE:=exec('to_string','#convert',TECHZAMS.COEF);
_table.FCOEF.VALUE:=TECHZAMS.FCOEF;
_table.FNTIME.VALUE:=TECHZAMS.FNTIME;
_table.MTIME.VALUE:=exec('to_string','#convert',TECHZAMS.MTIME);
_table.FMTIME.VALUE:=TECHZAMS.FMTIME;
_table.KH.VALUE:=TECHZAMS.KH;
_table.KX.VALUE:=TECHZAMS.KX;
_table.TTM.VALUE:=exec('to_string','#convert',TECHZAMS.TTM);
_table.FTTM.VALUE:=TECHZAMS.FTTM;
_table.NKO.VALUE:=exec('to_string','#convert',TECHZAMS.NKO);
_table.FNKO.VALUE:=TECHZAMS.FNKO;
_table.PLNX.VALUE:=TECHZAMS.PLNX;
_table.OPIS.VALUE:=TECHZAMS.OPIS;
_table.ACT.VALUE:=TECHZAMS.ACT;
_table.CRE_TIME.VALUE:=$TECHZAMS.CRE_TIME;
_table.MOD_TIME.VALUE:=$TECHZAMS.MOD_TIME;
_table.OD.VALUE:=TECHZAMS.OD;
_table.USER.VALUE:=TECHZAMS.USER().KOD;
_table.CAUSE.VALUE:=TECHZAMS.CAUSE().NAZ;
_table.GRUPA.VALUE:=TECHZAMS.GRUPA().SYMBOL;
_table.TWRKPLG.VALUE:=TECHZAMS.TWRKPLG().KOD_;
_table.GRPOJ.VALUE:=TECHZAMS.GRPOJ;
_table.PLNH.VALUE:=TECHZAMS.PLNH;

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('NRK','TOPER','OPER','PLACE','USER','CAUSE','GRUPA','TWRKPLG');
_imp_err:=0;
_check:=1;

:: Sprawdzam czy do karty zgłoszony został błąd
{? __TKTL_ERR.find_key(_obj.TKTL_NRK,_obj.TKTL_WER,)
|| _imp_err:=1
?};
:: Jeżeli wcześniej został zgłoszony błąd to wychodzę wcześniej bez dodatkowej walidacji
{? _imp_err>0
|| _result.RESULT:=0
||
:: Wyszukanie refów powiązanych rekordów
   _result.OBJ.NRK:={? _obj.TKTL_NRK='' | _obj.TKTL_WER=''
                    || null()
                    || exec('FindInSet','#table','TKTL','NRK',_obj.TKTL_WER,'T',,1,_obj.TKTL_NRK,null())
                    ?};
   _result.OBJ.TOPER:={? _obj.TOPER='' | _obj.TOPER='0'
                      || null()
                      || exec('FindInSet','#table','TOPER','UNROP',#_obj.TOPER,,,,,null())
                      ?};
   _result.OBJ.OPER:={? _obj.OPER=''
                     || null()
                     || exec('FindInSet','#table','TTOPER','KOD',_obj.OPER,,,1,,null())
                     ?};
   _result.OBJ.PLACE:={? _obj.PLACE=''
                      || null()
                      || exec('FindInSet','#table','TWRKPLC','KOD',_obj.PLACE,,,1,,null())
                      ?};
   _result.OBJ.USER:={? _obj.USER=''
                     || null()
                     || exec('FindInSet','#table','USERS','USR_KKOD',_obj.USER,,,1,,null())
                     ?};
   _result.OBJ.CAUSE:={? _obj.CAUSE=''
                      || null()
                      || exec('FindInSet','#table','TTXCAUSE','NAZ',_obj.CAUSE,,,1,,null())
                      ?};
   _result.OBJ.GRUPA:={? _obj.GRUPA=''
                      || null()
                      || exec('FindInSet','#table','TWRKZBR','SYM',_obj.GRUPA,,,1,,null())
                      ?};
   _result.OBJ.TWRKPLG:={? _obj.TWRKPLG='' | _result.OBJ.GRUPA=null()
                        || null()
                        || _place:=exec('FindInSet','#table','TWRKPLC','KOD',_obj.TWRKPLG,,,1,,null());
                           exec('FindInSet','#table','TWRKZPO','GRUPA',_place,_result.OBJ.GRUPA,,,,null())
                        ?};
:: Ostrzeżenia
   {? _obj.USER<>'' & _result.OBJ.USER=null()
   || _result.msg_norec('USER')
   ?};

:: Błędy
   {? _result.OBJ.NRK=null()
   || _result.msg_norec('TKTL_NRK');
      _result.RESULT:=0
   ?};
   {? _result.OBJ.TOPER=null()
   || _result.msg_norec('TOPER');
      _result.RESULT:=0
   ?};
   {? _obj.OPER<>'' & _result.OBJ.OPER=null()
   || _result.msg_norec('OPER');
      _result.RESULT:=0
   ?};
   {? _obj.PLACE<>'' & _result.OBJ.PLACE=null()
   || _result.msg_norec('PLACE');
      _result.RESULT:=0
   ?};
   {? _obj.CAUSE<>'' & _result.OBJ.CAUSE=null()
   || _result.msg_norec('CAUSE');
      _result.RESULT:=0
   ?};
   {? _obj.GRUPA<>'' & _result.OBJ.GRUPA=null()
   || _result.msg_norec('GRUPA');
      _result.RESULT:=0
   ?};
   {? _obj.TWRKPLG<>'' & _result.OBJ.TWRKPLG=null()
   || _result.msg_norec('TWRKPLG');
      _result.RESULT:=0
   ?};

   {? +_obj.ACT=0 | 'TN'*_obj.ACT=0
   || _result.msg_inset('ACT','T','N');
      _result.RESULT:=0
   ?};
   {? +_obj.GRPOJ=0 | 'GS'*_obj.GRPOJ=0
   || _result.msg_inset('GRPOJ','G','S');
      _result.RESULT:=0
   ?}
?};

:: OK
{? _result.RESULT>0
|| TECHZAMS.index('TTL');
   TECHZAMS.prefix(_result.OBJ.NRK,_result.OBJ.TOPER,_obj.LP);
   {? TECHZAMS.first()
   || {? _mode=0
      || _result.RESULT:=0;
         _check:=0;
         _result.MSG:='Technologia %1 (wer.%2) posiada już zamiennik stanowiska technologii o numerze %3 '
                      'przypisany do operacji %4.'@[_obj.TKTL_NRK,_obj.TKTL_WER,$_obj.LP,
                      exec('FindAndGet','#table',TOPER,_result.OBJ.TOPER,,"$TOPER.NROP+'. '+TOPER.OPER().NA",'')]
      || _result.ACTION:='put';
         exec('record','xls_techzams',_obj,_mode,_result);
         exec('start_tpar','tech_param',exec('FindAndGet','#table','TKTL',TECHZAMS.NRK,,"TKTL.KTM",null()));
         {? exec('chk_zam','tech_oper')<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_techzams',_obj,_mode,_result);
      exec('start_tpar','tech_param',exec('FindAndGet','#table','TKTL',TECHZAMS.NRK,,"TKTL.KTM",null()));
      {? exec('chk_zam','tech_oper')<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
{? _result.RESULT<=0 & _imp_err=0 & _check>0
||
:: Jak błąd to ustawiam znacznik błędu na karcie technologicznej
   {? _result.OBJ.NRK<>null()
   || TKTL.cntx_psh();
      TKTL.prefix();
      {? TKTL.seek(_result.OBJ.NRK)
      || TKTL.IMP_ERR:='T';
         TKTL.put();
         _result.MSG+='\nKarta %1 (wer. %2) oraz wszystkie jej elementy, które zostały do tej pory zaimportowane '
                      'zostaną usunięte.'@[TKTL.NRK,TKTL.WER];
::       Dodaję kartę do listy ignorowanych kart przy imporcie
         __TKTL_ERR.NRK:=_obj.TKTL_NRK;
         __TKTL_ERR.WER:=_obj.TKTL_WER;
         __TKTL_ERR.add()
      ?};
      TKTL.cntx_pop()
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| EXCEL_ENV.ID_GRP:=$TECHZAMS.NRK;
   {? _validate.ACTION='add'
   || _result:=TECHZAMS.add(1)
   |? _validate.ACTION='put'
   || _result:=TECHZAMS.put(1)
   ?}
|| EXCEL_ENV.ID_GRP:=''
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie zamiennika do operacji o numerze %3 dla karty technologicznej %1 (%2) nie powiodło się.'@
                     [_obj.TKTL_NRK,_obj.TKTL_WER,_obj.TOPER]
   || _validate.MSG:='Poprawa zamiennika do operacji o numerze %3 dla karty technologicznej %1 (%2) nie powiodła się.'@
                     [_obj.TKTL_NRK,_obj.TKTL_WER,_obj.TOPER]
   ?}

?};
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 bd56098b8a66bcf434c4683c630cd507908873cabcd916fec0fc15763569bdd98466f5516a6dc40b31779697b9d780aa2fe4104c5c8e21e9a9398c45ce82d4d23e94f1a41e4ef94fcb06dc66e6e473b79dc60ce19cf6273949da1fdb11db8a6984915394af269b1e4b46b560a53484b50da5c0a357dd2165e6239ac214d65725
