:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_pl_wzor.fml
:: Utworzony: 07.08.2018
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu widoków planu operacyjnego
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='PL_WZORU';
_def.DOMAIN:=exec('name','#b_domain','TPP');
_def.FUNPAR:='ZWS_PAR_TOWZ';

_def.FILE:='produkcja_planowanie.xlsx';
_def.SHEET:='Użytkownicy widoków planu'@+'=1,1';
_def.NAME:='Użytkownicy widoków planu'@;
_def.DESC:='Użytkownicy widoków planu'@;

_def.PREFIX:="PL_WZORU.index('USERS'); PL_WZORU.prefix()";
_def.TABLE:="PL_WZORU";
_def.FIELDS:="exec('fields','xls_pl_wzoru',_a)";

_def.BEFORE:="PL_WZORU.cntx_psh()";
_def.AFTER:="PL_WZORU.cntx_pop()";
_def.SELECT:="exec('select','xls_pl_wzoru',_a)";

_def.EXPORT:="exec('export','xls_pl_wzoru',_a,_b)";
_def.VALIDATE:="exec('validate','xls_pl_wzoru',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_pl_wzoru',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('PL_WZOR',MS.name(PL_WZORU,'PL_WZOR'),0,,
   MS.name(PL_WZORU,'PL_WZOR')+' '+'(max. %1 znaków)'@[$MS.fld_len(PL_WZOR,'NAZWA')]
);
_def.define('USERS',MS.name(PL_WZORU,'USERS'),0,,
   MS.name(PL_WZORU,'USERS')+' '+'(max. %1 znaków)'@[$MS.fld_len(USERS,'KOD')]
);
_def.define('UPR',MS.name(PL_WZORU,'UPR'),1,,'Uprawnienia do podglądu/redakcji [P/R]');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
PL_WZORU.prefix();
{? _validate.ACTION='add'
|| PL_WZORU.blank();
   PL_WZORU.USERS:=_validate.OBJ.USERS;
   PL_WZORU.PL_WZOR:=_validate.OBJ.PL_WZOR;
   PL_WZORU.UPR:=_obj.UPR
|? _validate.ACTION='put'
|| PL_WZORU.UPR:=_obj.UPR
?};
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.PL_WZOR.VALUE:=PL_WZORU.PL_WZOR().NAZWA;
_excel.write_async('PL_WZOR',PL_WZORU.PL_WZOR);
_table.USERS.VALUE:=PL_WZORU.USERS().KOD;
_excel.write_async('USERS',PL_WZORU.USERS);
_table.UPR.VALUE:=PL_WZORU.UPR;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('PL_WZOR','USERS');
_result.OBJ.PL_WZOR:=exec('FindInSet','#table','PL_WZOR','NAZWA',_obj.PL_WZOR,,"PL_WZOR.ref()",1);
_result.OBJ.USERS:=exec('FindInSet','#table','USERS','USR_KKOD',_obj.USERS,,"USERS.ref()",1);

:: Błędy
{? _result.OBJ.PL_WZOR=null()
|| _result.msg_norec('PL_WZOR');
   _result.RESULT:=0
?};
{? _result.OBJ.USERS=null()
|| _result.msg_norec('USERS');
   _result.RESULT:=0
?};
{? +_obj.UPR=0 | 'RP'*_obj.UPR=0
|| _result.msg_inset('UPR','R','P');
   _result.RESULT:=0
?};

_chk:="''";

:: OK
{? _result.RESULT>0
|| PL_WZORU.index('PL_WZOR');
   PL_WZORU.prefix(_result.OBJ.PL_WZOR,_result.OBJ.USERS);
   {? PL_WZORU.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_pl_wzoru',_obj,_mode,_result);
         {? exec('pl_wzoru_valid','po_param',1,_result)<>''
         || _result.RESULT:=0
         ?}
      ?};
      ~~
   || _result.ACTION:='add';
      exec('record','xls_pl_wzoru',_obj,_mode,_result);
      {? exec('pl_wzoru_valid','po_param',0,_result)<>''
      || _result.RESULT:=0
      ?};
      ~~
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=PL_WZORU.add(1)
   |? _validate.ACTION='put'
   || _result:=PL_WZORU.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.msg_insert('PL_WZOR')
   |? _validate.ACTION='put'
   || _validate.msg_update('PL_WZOR')
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [21.14]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,
   'NAZWA','STRING[15]','Widok'
   ,'USERS','STRING[15]','Użytkownik'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'NAZWA',,);

PL_WZORU.cntx_psh();
PL_WZORU.index('PL_WZOR');
PL_WZORU.prefix();
{? PL_WZORU.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$PL_WZORU.ref();
      _selected.prefix($PL_WZORU.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.NAZWA:=PL_WZORU.PL_WZOR().NAZWA;
      _tab.USERS:=PL_WZORU.USERS().KOD;
      _tab.add();
      PL_WZORU.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'NAZWA,USERS',15,'Wybór użytkowników widoków planu do eksportu'@);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
PL_WZORU.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2021/04/09 15:28:03 af40936bf86d843ec058555338fa5699f4dbc61c60318ab8fa480c2b6c7735c63e15f5c68134eb9ff6a2ff59c4d6abd518ab52594d49fb0e92e44ef4ad7cfd8791ec7f6eddb5d202638afa1cb7e438aafde140e2bac65e4af3e43be280f3891c27ad647133ddef78f9e6c5e0e47644efc57682d390340642ae3315777c1d5ce8
