:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_mjm.fml
:: Utworzony: 11.07.2018
:: Autor: Mario
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu standardowych przeliczników jednostek miar
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='MJM_STD';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_PAR_KDJM';
_def.MULTIFIR:='T';

_def.FILE:='parametryzacja.xlsx';
_def.SHEET:='Przeliczniki JM=1,1';
_def.NAME:='Standardowe przeliczniki Jednostek Miary'@;
_def.DESC:='Standardowe przeliczniki Jednostek Miary';

_def.PREFIX:="exec('prefix','xls_mjm')";
_def.TABLE:="exec('table','xls_mjm')";
_def.FIELDS:="exec('fields','xls_mjm',_a)";

_def.BEFORE:="MJM.cntx_psh()";
_def.AFTER:="MJM.cntx_pop()";
_def.SELECT:="exec('select','xls_mjm',_a)";

_def.EXPORT:="exec('export','xls_mjm',_a,_b)";
_def.IMPORT:="exec('import','xls_mjm',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_mjm',_a,_b,_c)";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
MJM.index('JM');
MJM.prefix(null);
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
MJM


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('JM','Kod jednostki miary',0,,'');
_def.define('PRZ','Przelicznik jednostki miary',1,,'');
_def.define('JP','Kod przeliczanej jednostki miary',0,,'');
_def.define('DOKL','Dokładność obliczeń',1,,'');
_def.define('MDOKL','Sposób przybliżenia',1,,
'(0) BANKERS - połówka do parzystej
 (1) FLOOR - zawsze w dół
 (2) CEIL - zawsze w górę
 (3) CHOP - dla ujemnych w górę, dla dodatnich w dół
 (4) DOWN - połówka w dół
 (5) ABSUP - [domyślna] połówka dla ujemnych w dół, dla dodatnich w górę
 (6) ABSDOWN - połówka dla ujemnych w górę, dla dodatnich w dół
 (7) UP - połówka w górę');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

MJM.index('JM');
MJM.prefix(null);
{? _validate.ACTION='add'
||
   MJM.blank();
   MJM.JM:=_validate.OBJ.JM;
   MJM.JP:=_validate.OBJ.JP
?};

MJM.PRZ:=_obj.PRZ;
MJM.DOKL:=_obj.DOKL;
MJM.MDOKL:=_obj.MDOKL;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.JM.VALUE:=MJM.JM().KOD;
_excel.write_async('JM',MJM.JM);

_table.JP.VALUE:=MJM.JP().KOD;
_excel.write_async('JM',MJM.JP);

_table.PRZ.VALUE:=MJM.PRZ;
_table.DOKL.VALUE:=MJM.DOKL;
_table.MDOKL.VALUE:=MJM.MDOKL;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('JM','JP');

_result.OBJ.JM:=exec('FindInSet','#table','JM','KOD',_obj.JM,,,1);
{? _result.OBJ.JM=null()
||
   _result.MSG:='Nie znaleziono jednostki miary o kodzie %1.'@[_obj.JM];
   _result.RESULT:=0
?};

_result.OBJ.JP:=exec('FindInSet','#table','JM','KOD',_obj.JP,,,1);
{? _result.OBJ.JP=null()
||
   _result.MSG:='Nie znaleziono jednostki miary o kodzie %1.'@[_obj.JP];
   _result.RESULT:=0
?};

{? _result.RESULT=1
||
   MJM.index('JM');
   MJM.prefix(null,_result.OBJ.JM,_result.OBJ.JP);
   {? MJM.first()
   ||
      {? _mode=0
      || _result.RESULT:=0
      ||
         _result.ACTION:='put';
         exec('record','xls_mjm',_obj,_mode,_result);
         {? exec('po_mjm','jm',,'put')<>''
         ||
            _result.RESULT:=0
         ?}
      ?}
   ||
      _result.ACTION:='add';
      exec('record','xls_mjm',_obj,_mode,_result);
      {? exec('po_mjm','jm',,'add')<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      _result:=MJM.add(1)
   |? _validate.ACTION='put'
   ||
      _result:=MJM.put(1)
   ?}
?};
{? _result=0
||
   _validate.MSG:='Dodanie przelicznika jednostki miary dla jednostki %1 dla jednostki przelicznikowej %2 nie powiodło się.'@
   [MJM.JM().KOD,MJM.JP().KOD]
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'JM','STRING[10]','Z jednostki'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'JP','STRING[10]','Na jednostkę'
   ,'PRZ','REAL','Przelicznik'
   ,'DOKL','INTEGER','Dokładność');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'JM',,);
JM.cntx_psh();
MJM.cntx_psh();
MJM.index('JM');
MJM.prefix(null());
{? MJM.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$MJM.ref();
      _selected.prefix($MJM.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.JM:=MJM.JM().KOD;
      _tab.JP:=MJM.JP().KOD;
      _tab.PRZ:=MJM.PRZ;
      _tab.DOKL:=MJM.DOKL;
      _tab.add();
      MJM.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'JM,PRZ,JP,DOKL',20,'Wybór przeliczników jednostek miar do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
JM.cntx_pop();
MJM.cntx_pop();

_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 9c701fede19371b4d43b9c220364cfa9e3cef70159eea5449f616e6ac25acd7764d1d33fdb214066ba66ed9dbb3defd9a48469e039a5d90ac9485c78dffeaf3d205288e6acafa9500d79e43e00452557ef68f6c56fc70816f25c74af027a13aa742080d2129d3d968289b247bb816845f32af8eaf0f3704c138b593ab07e22a1
