:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_abs.fml
:: Utworzony: 02.03.2020
:: Autor: DG
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu definicji pól dodatkowych dla HR Portal
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='PORTALK';
_def.DOMAIN:=exec('name','#b_domain','POR');
_def.FUNPAR:='ZWS_PAR_PORTAK';
_def.FILE:='parametryzacja.xlsx';
_def.SHEET:='ABS Pola dodatkowe=1,1';
_def.NAME:='ABS Pola dodatkowe'@;
_def.DESC:='ABS Pola dodatkowe';

_def.PREFIX:="PORTALK.index('FLD');PORTALK.prefix()";
_def.TABLE:="PORTALK";
_def.FIELDS:="exec('fields','xls_abs',_a)";

_def.BEFORE:="PORTALK.cntx_psh()";
_def.AFTER:="PORTALK.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('export','xls_abs',_a,_b)";
_def.VALIDATE:="exec('validate','xls_abs',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_abs',_a,_b,_c)";
_def.SELECT:="exec('select','xls_abs',_a)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
::Wymagane
_def.define('ENTITY','Encja',1,,'50 znakowa nazwa encji');
_def.define('FLD','Pole',1,,'50 znakowa nazwa pola');
_def.define('DESC','Opis',1,,'100 znakowy opis');
_def.define('GRIDDESC','Opis w gridzie',1,,'100 znakowy opis w gridzie');
_def.define('HINT','Podpowiedź',1,,'100 znakowa podpowiedź');
_def.define('FLDTYPE','Typ danych',1,,'Typ danych');
_def.define('GRIDWDTH','Szerokość kolumny',1,,'Szerokość kolumny');
::opcjonalne
_def.define('ENABLED','Włączone',1,,'Czy włączone pole');
_def.define('FORMWDTH','Szerokość pola na formularzu',1,,'Szerokość pola na formularzu');
_def.define('CAPTWDTH','Szerokość etykiety',1,,'Szerokość etykiety');
_def.define('MINVALUE','Wartość minimalna',1,,'Wartość minimalna');
_def.define('MAXVALUE','Wartość maksymalna',1,,'Wartość maksymalna');
_def.define('FORMSTR','Szerokość etykiety',1,,'Format tekstu');
_def.define('LKUPTYPE','Typ listy wartości',1,,'Typ listy wartości');
_def.define('LKUPFLD','Pole, na którym działa lista wartości',1,,'Pole, na którym działa lista wartości');
_def.define('LKUPCODE','Kod listy wartości',1,,'Kod listy wartości');
_def.define('REQUIRED','Wymagane',1,,'Wymagane');
_def.define('READONLY','Tylko do odczytu',1,,'Tylko do odczytu');
_def.define('VDEFAULT','Domyślnie widoczne',1,,'Domyślnie widoczne');
_def.define('PRIORITY','Priorytet przetwarzania',1,,'Priorytet przetwarzania');
_def.define('FORMULA','Formuła',1,,'255 znakowy kod formuły');
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
::Wymagane
_table.ENTITY.VALUE:=PORTALK.ENTITY;
_table.FLD.VALUE:=PORTALK.FLD;
_table.DESC.VALUE:=PORTALK.DESC;
_table.GRIDDESC.VALUE:=PORTALK.GRIDDESC;
_table.HINT.VALUE:=PORTALK.HINT;
_table.FLDTYPE.VALUE:=PORTALK.FLDTYPE;
_table.GRIDWDTH.VALUE:=PORTALK.GRIDWDTH;

::opcjonalne
_table.ENABLED.VALUE:=PORTALK.ENABLED;
_table.FORMWDTH.VALUE:=PORTALK.FORMWDTH;
_table.CAPTWDTH.VALUE:=PORTALK.CAPTWDTH;
_table.MINVALUE.VALUE:=PORTALK.MINVALUE;
_table.MAXVALUE.VALUE:=PORTALK.MAXVALUE;
_table.FORMSTR.VALUE:=PORTALK.FORMSTR;
_table.LKUPTYPE.VALUE:=PORTALK.LKUPTYPE;
_table.LKUPFLD.VALUE:=PORTALK.LKUPFLD;
_table.LKUPCODE.VALUE:=PORTALK.LKUPCODE;
_table.REQUIRED.VALUE:=PORTALK.REQUIRED;
_table.READONLY.VALUE:=PORTALK.READONLY;
_table.VDEFAULT.VALUE:=PORTALK.VDEFAULT;
_table.PRIORITY.VALUE:=PORTALK.PRIORITY;
_table.FORMULA.VALUE:=PORTALK.FORMULA;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

:: wychwyć błędy krytyczne
_fld:=
   {? _buf.ENTITY=''   || 'ENTITY'
   |? _buf.FLD=''      || 'FLD'
   |? _buf.DESC=''     || 'DESC'
   |? _buf.GRIDDESC='' || 'GRIDDESC'
   |? _buf.HINT=''     || 'HINT'
   |? _buf.FLDTYPE=''  || 'FLDTYPE'
   |? _buf.GRIDWDTH=0  || 'GRIDWDTH'
   || ''
   ?};
{? _fld<>''
::  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

:: błędne wartości
{? ('TN'*_buf.ENABLED)=0
|| _val.msg_inset('ENABLED','T','N');
   _val.RESULT:=0;
   return()
?};

:: wartość poniżej 0
{? _buf.GRIDWDTH < 0
|| _val.msg_range('GRIDWDTH',0);
   _val.RESULT:=0;
   return()
?};
{? _buf.FORMWDTH < 0
|| _val.msg_range('FORMWDTH',0);
   _val.RESULT:=0;
   return()
?};
{? _buf.CAPTWDTH < 0
|| _val.msg_range('CAPTWDTH',0);
   _val.RESULT:=0;
   return()
?};

:: ostrzeżenia
_max:=MS.fld_len(PORTALK,'ENTITY');
{? +_buf.ENTITY>_max
|| _val.msg_length('ENTITY',_max);
   _buf.ENTITY:=_max+_buf.ENTITY
?};
_max:=MS.fld_len(PORTALK,'FLD');
{? +_buf.FLD>_max
|| _val.msg_length('FLD',_max);
   _buf.FLD:=_max+_buf.FLD
?};
_max:=MS.fld_len(PORTALK,'DESC');
{? +_buf.DESC>_max
|| _val.msg_length('DESC',_max);
   _buf.DESC:=_max+_buf.DESC
?};
_max:=MS.fld_len(PORTALK,'GRIDDESC');
{? +_buf.GRIDDESC>_max
|| _val.msg_length('GRIDDESC',_max);
   _buf.GRIDDESC:=_max+_buf.GRIDDESC
?};
_max:=MS.fld_len(PORTALK,'HINT');
{? +_buf.HINT>_max
|| _val.msg_length('HINT',_max);
   _buf.HINT:=_max+_buf.HINT
?};
_max:=MS.fld_len(PORTALK,'FLDTYPE');
{? +_buf.FLDTYPE>_max
|| _val.msg_length('FLDTYPE',_max);
   _buf.FLDTYPE:=_max+_buf.FLDTYPE
?};


::opcjonalne
_max:=MS.fld_len(PORTALK,'ENABLED');
{? +_buf.ENABLED>_max
|| _val.msg_length('ENABLED',_max);
   _buf.ENABLED:=_max+_buf.ENABLED
?};
_max:=MS.fld_len(PORTALK,'MINVALUE');
{? +_buf.MINVALUE>_max
|| _val.msg_length('MINVALUE',_max);
   _buf.MINVALUE:=_max+_buf.MINVALUE
?};
_max:=MS.fld_len(PORTALK,'MAXVALUE');
{? +_buf.MAXVALUE>_max
|| _val.msg_length('MAXVALUE',_max);
   _buf.MAXVALUE:=_max+_buf.MAXVALUE
?};
_max:=MS.fld_len(PORTALK,'FORMSTR');
{? +_buf.FORMSTR>_max
|| _val.msg_length('FORMSTR',_max);
   _buf.FORMSTR:=_max+_buf.FORMSTR
?};
_max:=MS.fld_len(PORTALK,'LKUPTYPE');
{? +_buf.LKUPTYPE>_max
|| _val.msg_length('LKUPTYPE',_max);
   _buf.LKUPTYPE:=_max+_buf.LKUPTYPE
?};
_max:=MS.fld_len(PORTALK,'LKUPFLD');
{? +_buf.LKUPFLD>_max
|| _val.msg_length('LKUPFLD',_max);
   _buf.LKUPFLD:=_max+_buf.LKUPFLD
?};
_max:=MS.fld_len(PORTALK,'LKUPCODE');
{? +_buf.LKUPCODE>_max
|| _val.msg_length('LKUPCODE',_max);
   _buf.LKUPCODE:=_max+_buf.LKUPCODE
?};
_max:=MS.fld_len(PORTALK,'REQUIRED');
{? +_buf.REQUIRED>_max
|| _val.msg_length('REQUIRED',_max);
   _buf.REQUIRED:=_max+_buf.REQUIRED
?};
_max:=MS.fld_len(PORTALK,'READONLY');
{? +_buf.READONLY>_max
|| _val.msg_length('READONLY',_max);
   _buf.READONLY:=_max+_buf.READONLY
?};
_max:=MS.fld_len(PORTALK,'VDEFAULT');
{? +_buf.VDEFAULT>_max
|| _val.msg_length('VDEFAULT',_max);
   _buf.VDEFAULT:=_max+_buf.VDEFAULT
?};
_max:=MS.fld_len(PORTALK,'FORMULA');
{? +_buf.FORMULA>_max
|| _val.msg_length('FORMULA',_max);
   _buf.FORMULA:=_max+_buf.FORMULA
?};

_ref:=null;
{? PORTALK.find_tab(,'FLD',,'=',_buf.FLD)
|| _ref:=PORTALK.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

:: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 %2 %3 %4'[_a.ENTITY,_a.FLD,_a.DESC,_a.GRIDDESC]"
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,PORTALK,"

::Wymagane
   _a.ENTITY:=_b.ENTITY;
   _a.FLD:=_b.FLD;
   _a.DESC:=_b.DESC;
   _a.GRIDDESC:=_b.GRIDDESC;
   _a.HINT:=_b.HINT;
   _a.FLDTYPE:=_b.FLDTYPE;
   _a.GRIDWDTH:=_b.GRIDWDTH;

::opcjonalne
   _a.ENABLED:=_b.ENABLED;
   _a.FORMWDTH:=_b.FORMWDTH;
   _a.CAPTWDTH:=_b.CAPTWDTH;
   _a.MINVALUE:=_b.MINVALUE;
   _a.MAXVALUE:=_b.MAXVALUE;
   _a.FORMSTR:=_b.FORMSTR;
   _a.LKUPTYPE:=_b.LKUPTYPE;
   _a.LKUPFLD:=_b.LKUPFLD;
   _a.LKUPCODE:=_b.LKUPCODE;
   _a.REQUIRED:=_b.REQUIRED;
   _a.READONLY:=_b.READONLY;
   _a.VDEFAULT:=_b.VDEFAULT;
   _a.PRIORITY:=_b.PRIORITY;
   _a.FORMULA:=_b.FORMULA;
   ~~
");
~~


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [20.14]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'ENTITY','STRING[50]','Encja'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'FLD','STRING[50]','Pole'
   ,'DESC','STRING[100]','Opis');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'FLD',,);

PORTALK.cntx_psh();
PORTALK.index('FLD');
PORTALK.prefix();
{? PORTALK.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$PORTALK.ref();
      _selected.prefix($PORTALK.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.ENTITY:=PORTALK.ENTITY;
      _tab.FLD:=PORTALK.FLD;
      _tab.DESC:=PORTALK.DESC;
      _tab.add();
      PORTALK.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'ENTITY,FLD,DESC',20,'Wybór pól dodatkowych do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
PORTALK.cntx_pop();

_result

:Sign Version 2.0 jowisz:1045 2023/12/08 12:28:41 81d4884a13fc0127e9015b13b84fee5e5eb93a1a520d6fa58bcb518d6fb03ed51067abcfd9b0e0363b18152e2dff931ca92c33c038bbebda67dc8a036314146bd35d85a378b8a35f3e3f4ad59aaed7d8c90e38d320e7f16b790b27aef79740c6b17411d21a3cbcc7a1bae3955be203e6f66e4b668743095d5a02628778142a93
