:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_rek.fml
:: Utworzony: 24.02.2021
:: Autor: Mario
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu słowników dotyczących reklamacji
::======================================================================================================================


\init_r_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
exec('init_r','xls_rek',_a,'S')


\init_r_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
exec('init_r','xls_rek',_a,'Z')


\init_a_s
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
exec('init_a','xls_rek',_a,'S')


\init_a_z
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
exec('init_a','xls_rek',_a,'Z')


\init_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - S,Z (S - reklamacja klienta, Z - reklamacja do dostawcy)
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_rodz:=_b;

{? _rodz='Z'
|| _def.ID:='REKR_Z';
   _def.DOMAIN:=exec('name','#b_domain','LZK');
   _def.FUNPAR:='ZWS_PAR_LRRD';
   _def.FILE:='zakupy.xlsx'
|| _def.ID:='REKR_S';
   _def.DOMAIN:=exec('name','#b_domain','LSP');
   _def.FUNPAR:='ZWS_PAR_LRRK';
   _def.FILE:='sprzedaz.xlsx'
?};

_def.SHEET:='Rodzaje reklamacji=1,1';
_def.NAME:='Rodzaje reklamacji'@;
_def.DESC:='Rodzaje reklamacji';

_def.PREFIX:=$("exec('prefix_r','xls_rek',"+'\''+_rodz+'\''+")");
_def.TABLE:="REK_R";
_def.FIELDS:="exec('fields_r','xls_rek',_a)";

_def.BEFORE:="REK_R.cntx_psh()";
_def.AFTER:="REK_R.cntx_pop()";

_def.SELECT:=$("exec('select_r','xls_rek',_a,"+'\''+_rodz+'\''+")");
_def.EXPORT:=$("exec('export_r','xls_rek',_a,_b,"+'\''+_rodz+'\''+")");

_def.VALIDATE:=$("exec('validate_r','xls_rek',_a,_b,_c,"+'\''+_rodz+'\''+")");
_def.IMPORT:="exec('import_r','xls_rek',_a,_b,_c)";
~~


\prefix_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Określa zakres eksportowanych danych
::   WE: _a - S,Z (S - reklamacja klienta, Z - reklamacja do dostawcy)
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_rodz:=_a;
REK_R.index('KOD');
REK_R.prefix(_rodz,);
~~


\fields_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('KOD','Kod',1,,'Kod rodzaju reklamacji');
_def.define('OPIS','Opis',1,,'Opis rodzaju reklamacji');
_def.define('ILDNI','Ilość dni',1,,'Ilość dni na rozpatrzenie reklamacji',1,0);
_def.define('OP','Treść reklamacji',1,,'Domyślna treść reklamacji');
~~


\record_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::       _d - S,Z (S - reklamacja klienta, Z - reklamacja do dostawcy)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
_rodz:=_d;

{? _validate.ACTION='add'
|| REK_R.blank();
   REK_R.SZ:=_rodz;
   REK_R.KOD:=_obj.KOD
?};
REK_R.OPIS:=_obj.OPIS;
REK_R.ILDNI:=_obj.ILDNI;
REK_R.OP:=_obj.OP;
~~


\validate_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::       _d - S,Z (S - reklamacja klienta, Z - reklamacja do dostawcy)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;
_rodz:=_d;

BEER.SZ:=_rodz;

_result.RESULT:=1;

REK_R.index('KOD');
REK_R.prefix(_rodz,_obj.KOD,);
{? REK_R.first()
|| {? _mode=0
   || _result.RESULT:=0
   || _result.ACTION:='put';
      exec('record_r','xls_rek',_obj,_mode,_result,_rodz);
      {? exec('rek_r_chk_core','reklamacje',1)<>''
      || _result.RESULT:=0
      ?}
   ?}
|| _result.ACTION:='add';
   exec('record_r','xls_rek',_obj,_mode,_result,_rodz);
   {? exec('rek_r_chk_core','reklamacje',0)<>''
   || _result.RESULT:=0
   ?}
?};
~~


\import_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [21.14]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   || _result:=REK_R.add(1)
   |? _validate.ACTION='put'
   || _result:=REK_R.put(1)
   ?}
?};
{? _result=0
||
   {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie rodzaju reklamacji %1 nie powiodło się.'@[_obj.KOD]
   || _validate.MSG:='Modyfikacja rodzaju reklamacji %1 nie powiodła się.'@[_obj.KOD]
   ?}
?};
_result


\export_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [21.14]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::       _c - S,Z (S - reklamacja klienta, Z - reklamacja do dostawcy)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_rodz:=_c;

_result:=1;

_table.KOD.VALUE:=REK_R.KOD;
_table.OPIS.VALUE:=REK_R.OPIS;
_table.ILDNI.VALUE:=REK_R.ILDNI;
_table.OP.VALUE:=REK_R.OP;

_result


\select_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [21.14]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::       _b - S,Z (S - reklamacja klienta, Z - reklamacja do dostawcy)
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;
_rodz:=_b;

_result:=0;

_tab:=tab_tmp(1,'KOD','STRING[10]','Kod'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'OPIS','STRING[100]','Opis');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

REK_R.cntx_psh();
REK_R.index('KOD');
REK_R.prefix(_rodz);
{? REK_R.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$REK_R.ref();
      _selected.prefix($REK_R.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:=REK_R.KOD;
      _tab.OPIS:=REK_R.OPIS;
      _tab.add();
      REK_R.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'KOD,OPIS',20,'Wybór rodzajów reklamacji do eksportu'@,1);
{? _result>0
|| _selected.erase();
   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
REK_R.cntx_pop();
_result


\init_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - S,Z (S - reklamacja klienta, Z - reklamacja do dostawcy)
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_rodz:=_b;

{? _rodz='Z'
|| _def.ID:='REKA_Z';
   _def.DOMAIN:=exec('name','#b_domain','LZK');
   _def.FUNPAR:='ZWS_PAR_LRAD';
   _def.FILE:='zakupy.xlsx'
|| _def.ID:='REKA_S';
   _def.DOMAIN:=exec('name','#b_domain','LSP');
   _def.FUNPAR:='ZWS_PAR_LRAK';
   _def.FILE:='sprzedaz.xlsx'
?};

_def.SHEET:='Działania dla reklamacji=1,1';
_def.NAME:='Działania dla reklamacji'@;
_def.DESC:='Działania dla reklamacji';

_def.PREFIX:=$("exec('prefix_a','xls_rek',"+'\''+_rodz+'\''+")");
_def.TABLE:="REK_A";
_def.FIELDS:="exec('fields_a','xls_rek',_a)";

_def.BEFORE:="REK_A.cntx_psh()";
_def.AFTER:="REK_A.cntx_pop()";

_def.SELECT:=$("exec('select_a','xls_rek',_a,"+'\''+_rodz+'\''+")");
_def.EXPORT:=$("exec('export_a','xls_rek',_a,_b,"+'\''+_rodz+'\''+")");

_def.VALIDATE:=$("exec('validate_a','xls_rek',_a,_b,_c,"+'\''+_rodz+'\''+")");
_def.IMPORT:="exec('import_a','xls_rek',_a,_b,_c)";
~~


\prefix_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Określa zakres eksportowanych danych
::   WE: _a - S,Z (S - reklamacja klienta, Z - reklamacja do dostawcy)
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_rodz:=_a;
REK_A.index('KOD');
REK_A.prefix(_rodz,);
~~


\fields_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('KOD','Kod',1,,'Kod rodzaju reklamacji');
_def.define('OPIS','Opis',1,,'Opis rodzaju reklamacji');
_def.define('ST','Status reklamacji',1,,'Status reklamacji po wykonaniu działania');
~~


\record_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::       _d - S,Z (S - reklamacja klienta, Z - reklamacja do dostawcy)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
_rodz:=_d;

{? _validate.ACTION='add'
|| REK_A.blank();
   REK_A.SZ:=_rodz;
   REK_A.KOD:=_obj.KOD
?};
REK_A.OPIS:=_obj.OPIS;
REK_A.ST:=_obj.ST;

~~


\validate_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [21.14]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::       _d - S,Z (S - reklamacja klienta, Z - reklamacja do dostawcy)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;
_rodz:=_d;

BEER.SZ:=_rodz;

_result.RESULT:=1;

REK_A.index('KOD');
REK_A.prefix(_rodz,_obj.KOD,);
{? REK_A.first()
|| {? _mode=0
   || _result.RESULT:=0
   || _result.ACTION:='put';
      exec('record_a','xls_rek',_obj,_mode,_result,_rodz);
      {? exec('rek_a_chk_core','reklamacje',1)<>''
      || _result.RESULT:=0
      ?}
   ?}
|| _result.ACTION:='add';
   exec('record_a','xls_rek',_obj,_mode,_result,_rodz);
   {? exec('rek_a_chk_core','reklamacje',0)<>''
   || _result.RESULT:=0
   ?}
?};
~~


\import_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [21.14]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   || _result:=REK_A.add(1)
   |? _validate.ACTION='put'
   || _result:=REK_A.put(1)
   ?}
?};
{? _result=0
||
   {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie działania dla reklamacji %1 nie powiodło się.'@[_obj.KOD]
   || _validate.MSG:='Modyfikacja działania dla reklamacji %1 nie powiodła się.'@[_obj.KOD]
   ?}
?};
_result


\export_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [21.14]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::       _c - S,Z (S - reklamacja klienta, Z - reklamacja do dostawcy)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_rodz:=_c;

_result:=1;

_table.KOD.VALUE:=REK_A.KOD;
_table.OPIS.VALUE:=REK_A.OPIS;
_table.ST.VALUE:=REK_A.ST;

_result


\select_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [21.14]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::       _b - S,Z (S - reklamacja klienta, Z - reklamacja do dostawcy)
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;
_rodz:=_b;

_result:=0;

_tab:=tab_tmp(1,'KOD','STRING[10]','Kod'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'OPIS','STRING[100]','Opis');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

REK_A.cntx_psh();
REK_A.index('KOD');
REK_A.prefix(_rodz);
{? REK_A.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$REK_A.ref();
      _selected.prefix($REK_A.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:=REK_A.KOD;
      _tab.OPIS:=REK_A.OPIS;
      _tab.add();
      REK_A.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'KOD,OPIS',20,'Wybór działań dla reklamacji do eksportu'@,1);
{? _result>0
|| _selected.erase();
   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
REK_A.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2021/04/09 15:28:03 b7158932ac2baaade74e5cb923b1a80c412e96327ba9871e8b4b764c9e6c86eb485bb2126a476179fc6da3187caefae9411f8589c0e793a81bf3f58db9862dcb84fdd3eb68d7044dfa8007784869166037585fceafef4f80ce41e091afaaa7aa2c3b6c318ae672f18e3bc589e17488330cad36d15d426ad2fa4375ab320ee14a
