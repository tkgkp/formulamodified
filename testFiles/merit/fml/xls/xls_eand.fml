:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_eand.fml
:: Utworzony: 27.01.2021
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu definicji kodów GS1
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='EAND';
_def.DOMAIN:=exec('name','#b_domain','LMO');
_def.FUNPAR:='ZWS_KGS1_DEF';

_def.FILE:='magazyn_mobilny.xlsx';
_def.SHEET:='Kody GS1=1,1';
_def.NAME:='Urządzenia mobilne'@;
_def.DESC:='Urządzenia mobilne';

_def.PREFIX:="exec('prefix','xls_eand')";
_def.TABLE:="exec('table','xls_eand')";
_def.FIELDS:="exec('fields','xls_eand',_a)";

_def.BEFORE:="EAND.cntx_psh()";
_def.AFTER:="EAND.cntx_pop()";
_def.SELECT:="exec('select','xls_eand',_a)";

_def.EXPORT:="exec('export','xls_eand',_a,_b)";
_def.IMPORT:="exec('import','xls_eand',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_eand',_a,_b,_c)";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
EAND.index('KOD');
EAND.prefix();
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
EAND


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('KOD','Kod GS1',0,,'Kod wartości GS1.');
_def.define('OPIS','Opis',1,,'Opis wartości.');
_def.define('OENG','Opis (eng.)',1,,'Opis wartości w j.angielskim.');
_def.define('FORMAT','Format danych',1,,'Specyfikacja formatu');
_def.define('FNC1','FNC1',1,,'Czy dostępne FNC1 [T/N]');
_def.define('RODZ','Rodzaj danych',0,,'Rodzaj danych');
_def.define('A','Aktywny',1,,'Czy kod jest aktywny/obsługiwany [T/N]');
_def.define('R','Miejsce wykorzystania',1,,
'Miejsce wykorzystania kodu:
A - atrybuty dostawy
D - wg formuły
U - urządzenia mobilne
N - brak danych
');
_def.define('FORM','Formuła obsługi',1,,'Formuła obsługi kodu GS1');
_def.define('EANF','Formuła formatu',1,,'Formuła formatu dla tworzenia kodu GS1');
_def.define('LEN','Długość kodu',1,,'Maksymalna długość kodu');
_def.define('DIGIT','Cyfra kontrolna',1,,'Czy ostatni znak to cyfra kontrolna [T/N]');
_def.define('ONLY','Rodzaj znaków',1,,'Czy tylko cyfry [T/N]');
_def.define('JM','Jednostka miary',1,,'Jednostka miary danych');
_def.define('JMO','Jednostka wg definicji',1,,'Jednostka miary danych wg definicji');
_def.define('WSP','Współczynnik przeliczenia',1,,'Współczynnik przeliczenia jednostki',,6);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

EAND.index('KOD');
EAND.prefix();
{? _validate.ACTION='add'
||
   EAND.blank();
   EAND.KOD:=_obj.KOD
?};

EAND.OPIS:=_obj.OPIS;
EAND.OENG:=_obj.OENG;
EAND.FORMAT:=_obj.FORMAT;
EAND.FNC1:=_obj.FNC1;
EAND.RODZ:=_obj.RODZ;
EAND.A:=_obj.A;
EAND.R:=_obj.R;
EAND.FORM:=_validate.OBJ.FORM;
EAND.EANF:=_obj.EANF;
EAND.LEN:=_obj.LEN;
EAND.DIGIT:=_obj.DIGIT;
EAND.ONLY:=_obj.ONLY;
EAND.JM:=_validate.OBJ.JM;
EAND.JMO:=_obj.JMO;
EAND.WSP:=_obj.WSP;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.KOD.VALUE:=EAND.KOD;
_table.OPIS.VALUE:=EAND.OPIS;
_table.OENG.VALUE:=EAND.OENG;
_table.FORMAT.VALUE:=EAND.FORMAT;
_table.FNC1.VALUE:=EAND.FNC1;
_table.A.VALUE:=EAND.A;
_table.R.VALUE:=EAND.R;
_table.RODZ.VALUE:=EAND.RODZ;
_table.FORM.VALUE:=EAND.FORM().SKROT; _excel.write_async('FORMULA',EAND.FORM);
_table.EANF.VALUE:=EAND.EANF;
_table.LEN.VALUE:=EAND.LEN;
_table.DIGIT.VALUE:=EAND.DIGIT;
_table.ONLY.VALUE:=EAND.ONLY;
_table.JM.VALUE:=EAND.JM().KOD; _excel.write_async('JM',EAND.JM);
_table.JMO.VALUE:=EAND.JMO;
_table.WSP.VALUE:=EAND.WSP;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('FORM','JM');

{? _obj.FORM<>''
|| _result.OBJ.FORM:=exec('FindInSet','#table','FORMULA','FORMULA4',_obj.FORM,'g',,1);
   {? _result.OBJ.FORM=null()
   || _result.MSG:='Nie znaleziono formuły obsługi kodu GS1 %1.'@[_obj.FORM];
      _result.RESULT:=0
   ?}
|| _result.OBJ.FORM:=null()
?};

{? _obj.JM<>''
|| _result.OBJ.JM:=exec('FindInSet','#table','JM','KOD',_obj.JM,,,1);
   {? _result.OBJ.JM=null()
   || _result.MSG:='Nie znaleziono jednostki miary dla danych kodu GS1 %1.'@[_obj.JM];
      _result.RESULT:=0
   ?}
|| _result.OBJ.JM:=null()
?};

{? _result.RESULT=1
|| EAND.index('KOD');
   EAND.prefix(_obj.KOD,);
   {? EAND.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_eand',_obj,_mode,_result)
      ?}
   || _result.ACTION:='add';
      exec('record','xls_eand',_obj,_mode,_result)
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=EAND.add(1)
   |? _validate.ACTION='put'
   || _result:=EAND.put(1)
   ?}
?};
{? _result=0
|| _validate.MSG:={? _validate.ACTION='add'
                  || 'Dodanie kodu struktury GS1 o kodzie %1 nie powiodło się.'@[EAND.KOD]
                  || 'Modyfikacja kodu struktury GS1 o kodzie %1 nie powiodła się.'@[EAND.KOD]
                  ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.14]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'KOD','STRING[20]','Kod GS1'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'OPIS','STRING[100]','Opis');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

EAND.cntx_psh();
EAND.index('KOD');
EAND.prefix();
{? EAND.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$EAND.ref();
      _selected.prefix($EAND.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:=EAND.KOD;
      _tab.OPIS:=EAND.OPIS;
      _tab.add();
      EAND.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'KOD,OPIS',30,'Wybór definicji kodów GS1 do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
EAND.cntx_pop();
_result


\init_eans
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='EANS';
_def.DOMAIN:=exec('name','#b_domain','LMO');
_def.FUNPAR:='ZWS_EANT_DEF';

_def.FILE:='magazyn_mobilny.xlsx';
_def.SHEET:='Powiązanie miejsc i kodów GS1=1,1';
_def.NAME:='Urządzenia mobilne'@;
_def.DESC:='Urządzenia mobilne';

_def.PREFIX:="exec('prefix_eans','xls_eand')";
_def.TABLE:="exec('table_eans','xls_eand')";
_def.FIELDS:="exec('fields_eans','xls_eand',_a)";

_def.BEFORE:="EANS.cntx_psh()";
_def.AFTER:="EANS.cntx_pop()";
_def.SELECT:="exec('select_eans','xls_eand',_a)";

_def.EXPORT:="exec('export_eans','xls_eand',_a,_b)";
_def.IMPORT:="exec('import_eans','xls_eand',_a,_b,_c)";
_def.VALIDATE:="exec('validate_eans','xls_eand',_a,_b,_c)";
~~


\prefix_eans
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
EANS.index('GS1');
EANS.prefix();
~~


\table_eans
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
EANS


\fields_eans
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('GS1','Kod GS1',0,,'Kod GS1.');
_def.define('KOD','Kod miejsca wywołania',0,,'Kod miejsca wywołania dla GS1.');
_def.define('R','Rodzaj danych',0,,'Rodzaj danych: F-formuła, C-Stała.');
_def.define('VALUE','Wartość',0,,'Przekazywana wartość do utworzenia kodu.');
~~


\record_eans
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

EANS.index('GS1');
EANS.prefix();
{? _validate.ACTION='add'
||
   EANS.blank();
   EANS.EAND:=_validate.OBJ.EAND;
   EANS.EANT:=_obj.KOD
?};

EANS.R:=_obj.R;
EANS.VALUE:=_obj.VALUE;
~~


\export_eans
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.GS1.VALUE:=EANS.EAND().KOD; _excel.write_async('EAND',EANS.EAND);
_table.KOD.VALUE:=EANS.EANT;
_table.R.VALUE:=EANS.R;
_table.VALUE.VALUE:=EANS.VALUE;
_result


\validate_eans
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('EAND');

{? _obj.GS1<>''
|| _result.OBJ.EAND:=exec('FindInSet','#table','EAND','KOD',_obj.GS1,,,1);
   {? _result.OBJ.EAND=null()
   || _result.MSG:='Nie znaleziono kodu GS1: %1.'@[_obj.GS1];
      _result.RESULT:=0
   ?}
|| _result.OBJ.EAND:=null();
   _result.MSG:='Nie podano kodu GS1 do powiązania.'@;
   _result.RESULT:=0
?};

{? _result.RESULT
|| {? _obj.KOD='' | exec('FindInSet','#table','EANT','KOD',_obj.KOD,,,1)=null()
   || _result.MSG:='Brak miejsca wywołania %1dla kodu GS1 %1.'@[{? _obj.KOD='' || '' || '(%1) '[_obj.KOD] ?}];
      _result.RESULT:=0
   ?}
?};

{? _result.RESULT & ~((';FC'*_obj.R)>1)
|| _result.MSG:='Nieprawidłowa wartość rodzaju danych.'@;
   _result.RESULT:=0
?};

{? _result.RESULT & _obj.VALUE=''
|| _result.MSG:='Nie podano wartości.'@;
   _result.RESULT:=0
?};

{? _result.RESULT=1
|| EANS.index('GS1');
   EANS.prefix(_result.OBJ.EAND,_obj.KOD);
   {? EANS.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record_eans','xls_eand',_obj,_mode,_result)
      ?}
   || _result.ACTION:='add';
      exec('record_eans','xls_eand',_obj,_mode,_result)
   ?}
?};
~~


\import_eans
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=EANS.add(1)
   |? _validate.ACTION='put'
   || _result:=EANS.put(1)
   ?}
?};
{? _result=0
|| _validate.MSG:={? _validate.ACTION='add'
                  || 'Dodanie powiązań miejsca wywołania %2 z kodem GS1 %1 nie powiodło się.'@[EANS.EAND().KOD,EANS.EANT]
                  || 'Modyfikacja powiązań miejsca wywołania %2 z kodem GS1 %1 nie powiodła się.'@[EANS.EAND().KOD,EANS.EANT]
                  ?}
?};
_result


\select_eans
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'KOD','STRING[20]','GS1 i miejsce wywołania'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'OPIS','STRING[100]','Opis');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

EANS.cntx_psh();
EANS.index('GS1');
EANS.prefix();
{? EANS.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$EANS.ref();
      _selected.prefix($EANS.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:='%1 - %2'[EANS.EAND().KOD,EANS.EANT];
      _tab.OPIS:=EANS.VALUE;
      _tab.add();
      EANS.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'KOD,OPIS',30,'Wybór powiązań miejsc wywołania z kodami GS1 do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
EANS.cntx_pop();
_result


\init_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='EANT';
_def.DOMAIN:=exec('name','#b_domain','LMO');
_def.FUNPAR:='ZWS_EANT_DEF';

_def.FILE:='magazyn_mobilny.xlsx';
_def.SHEET:='Miejsca wywołania=1,1';
_def.NAME:='Urządzenia mobilne'@;
_def.DESC:='Urządzenia mobilne';

_def.PREFIX:="exec('prefix_eant','xls_eand')";
_def.TABLE:="exec('table_eant','xls_eand')";
_def.FIELDS:="exec('fields_eant','xls_eand',_a)";

_def.BEFORE:="EANT.cntx_psh()";
_def.AFTER:="exec('eant','%etykiety');EANT.cntx_pop()";
_def.SELECT:="exec('select_eant','xls_eand',_a)";

_def.EXPORT:="exec('export_eant','xls_eand',_a,_b)";
_def.IMPORT:="exec('import_eant','xls_eand',_a,_b,_c)";
_def.VALIDATE:="exec('validate_eant','xls_eand',_a,_b,_c)";
~~


\prefix_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
EANT.index('KOD');
EANT.prefix();
~~


\table_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
EANT


\fields_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('KOD','Kod miejsca wywoałania',0,,'Kod miejsca wywołania dla GS1.');
_def.define('TAB','Tabela',0,,'Tabela.');
_def.define('SUB','Powiązana tabela',1,,'Powiązana tabela.');
_def.define('IND','Indeks powiązania',1,,'Akronim indeksu dla powiązania.');
_def.define('OPIS','Opis',1,,'Opis miejsca wywołania.');
_def.define('LOG','Warunek dostępności',1,,'Warunek dostępności.');
~~


\record_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

EANT.index('KOD');
EANT.prefix();
{? _validate.ACTION='add'
||
   EANT.blank();
   EANT.SYS:='N';
   EANT.KOD:=_obj.KOD
?};

EANT.TAB:=_obj.TAB;
EANT.SUB:=_obj.SUB;
EANT.IND:=_obj.IND;
EANT.OPIS:=_obj.OPIS;
EANT.LOG:=_obj.LOG;
~~


\export_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.KOD.VALUE:=EANT.KOD;
_table.TAB.VALUE:=EANT.TAB;
_table.SUB.VALUE:=EANT.SUB;
_table.IND.VALUE:=EANT.IND;
_table.OPIS.VALUE:=EANT.OPIS;
_table.LOG.VALUE:=EANT.LOG;
_result


\validate_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_beertab:=BEER.TAB;

{? _obj.KOD=''
|| _result.MSG:='Nie podano kodu wywołania dla obsługi kodu GS1.'@;
   _result.RESULT:=0
?};

{? _result.RESULT
|| {? _obj.TAB=''
   || _result.MSG:='Nie podano tabeli dla miejsca wywołania.'@;
      _result.RESULT:=0
   || BEER.TAB:=_obj.TAB;
      {? BEER.TAB<>'@' & exec('Struct','libfml',,'BEER.TAB',1)=''
      || _result.MSG:='Nie znaleziono podanej tabeli %1 w definicji systemu.'@[_obj.TAB];
         _result.RESULT:=0
      ?}
   ?}
?};

{? _result.RESULT
|| {? _obj.SUB<>''
   || BEER.TAB:=_obj.SUB;
      {? exec('Struct','libfml',,'BEER.TAB',1)=''
      || _result.MSG:='Nie znaleziono podanej powiązanej tabeli %1 w definicji systemu.'@[_obj.SUB];
         _result.RESULT:=0
      || {? _obj.TAB<>'@' & exec('Struct','libfml',_obj.TAB,'BEER.TAB',1)='' & {? var_pres(_obj.SUB)>117 || 0 || 1 ?}
         || _result.MSG:='Tabela %1 nie jest powiązana z tabelą %2 w definicji systemu.'@[_obj.SUB,_obj.TAB];
            _result.RESULT:=0
         ?}
      ?}
   |? _obj.TAB='@'
   || _result.MSG:='Dla tabeli @ wymagane podanie powiązanej tabeli.'@;
      _result.RESULT:=0
   ?}
?};

{? _result.RESULT & _obj.SUB<>'' & _obj.TAB<>'@'
|| {? _obj.IND=''
   || _result.MSG:='Nie podano indeksu dla powiązanej tabeli %1.'@[_obj.SUB];
      _result.RESULT:=0
   || BEER.TAB:=_obj.IND;
      {? exec('Struct','libfml',_obj.SUB,'BEER.TAB',3)=''
      || _result.MSG:='Indeks %1 dla tabeli %2 nie został znaleziony w definicji systemu.'@[_obj.IND,_obj.SUB];
         _result.RESULT:=0
      ?}
   ?}
?};

{? _result.RESULT & _obj.SUB<>'' & _obj.TAB='@' & _obj.LOG=''
|| _result.MSG:='Nie podano warunku dostępności dla powiązanej tabeli %1.'@[_obj.SUB];
   _result.RESULT:=0
?};

{? _result.RESULT || _obj.KOD:=(8+(_obj.TAB+(8*'_')))+(8+(_obj.SUB+(8*'_'))) ?};

{? _result.RESULT=1
|| EANT.index('KOD');
   EANT.prefix(_obj.KOD,);
   {? EANT.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record_eant','xls_eand',_obj,_mode,_result)
      ?}
   || _result.ACTION:='add';
      exec('record_eant','xls_eand',_obj,_mode,_result)
   ?}
?};
BEER.TAB:=_beertab;
~~


\import_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=EANT.add(1)
   |? _validate.ACTION='put'
   || _result:=EANT.put(1)
   ?}
?};
{? _result=0
|| _validate.MSG:={? _validate.ACTION='add'
                  || 'Dodanie miejsca wywołania o kodzie %1 nie powiodło się.'@[EANT.KOD]
                  || 'Modyfikacja miejsca wywołania o kodzie %1 nie powiodła się.'@[EANT.KOD]
                  ?}
?};
_result


\select_eant
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'KOD','STRING[20]','Kod GS1'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'OPIS','STRING[100]','Opis');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

EANT.cntx_psh();
EANT.index('KOD');
EANT.prefix();
{? EANT.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$EANT.ref();
      _selected.prefix($EANT.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:=EANT.KOD;
      _tab.OPIS:=EANT.TAB+{? EANT.SUB<>'' || ' [Powiązana tabela: %1]'[EANT.SUB] || '' ?}+' %1'[EANT.OPIS];
      _tab.add();
      EANT.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'KOD,OPIS',30,'Wybór miejsc wywołania dla obsługi kodów GS1 do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
EANT.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 88a9b689e72d06afd8cffb6dafb79aa59b344cfef5fdbb6dd87affc3a8a1fc07398d6162d05172f00d3edfc37156e58d0958d512b49fa6796b4dc92324c7f4754258055159e759bda3b3e3878b01d2de7ad8f5f1808fae76a784cb95590d51f570a055571d94eff1977dce71bb88f6f90ccc3e03f71628a08ea7f1aa19811fc2
