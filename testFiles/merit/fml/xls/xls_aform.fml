:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_aform.fml
:: Utworzony: 23.07.2018
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu formuł kalkulacji/analiz zleceń
::======================================================================================================================


\init_0
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='AFORM0';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='ZWS_PAR_TZLE';

_def.FILE:='produkcja_kalkulacje.xlsx';
_def.SHEET:='Formuły kalkulacji zleceń'@+'=1,1';
_def.NAME:='Formuły kalkulacji zleceń'@;
_def.DESC:='Formuły kalkulacyjne do wyliczania TKW na podstawie zleceń'@;

_def.PREFIX:="AFORM.index('AOR'); AFORM.prefix('0')";
_def.TABLE:="AFORM";
_def.FIELDS:="exec('fields','xls_aform',_a,'0')";

_def.BEFORE:="AFORM.cntx_psh()";
_def.AFTER:="AFORM.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('export','xls_aform',_a,_b,'0')";
_def.VALIDATE:="exec('validate','xls_aform',_a,_b,_c,'0')";
_def.IMPORT:="exec('import','xls_aform',_a,_b,_c,'0')";
~~


\init_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='AFORM1';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='ZWS_PAR_TZLE';

_def.FILE:='produkcja_kalkulacje.xlsx';
_def.SHEET:='Formuły analizy zleceń'@+'=1,1';
_def.NAME:='Formuły analizy zleceń'@;
_def.DESC:='Formuły analizy do wyliczania TKW na podstawie zleceń'@;

_def.PREFIX:="AFORM.index('AOR'); AFORM.prefix('1')";
_def.TABLE:="AFORM";
_def.FIELDS:="exec('fields','xls_aform',_a,'1')";

_def.BEFORE:="AFORM.cntx_psh()";
_def.AFTER:="AFORM.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('export','xls_aform',_a,_b,'1')";
_def.VALIDATE:="exec('validate','xls_aform',_a,_b,_c,'1')";
_def.IMPORT:="exec('import','xls_aform',_a,_b,_c,'1')";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::       _b - '0'/'1' - kalkulacja/analiza
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_a01:=_b;

_def.define('OPC',{? _a01='0' || 'Wariant kalkulacji'@ || 'Wariant analizy'@ ?},0,,
   MS.comment(AFORM,'OPC')+' '+'(max. %1 znaków)'@[$MS.fld_len(ANWAR,'NA')]
);
_def.define('RUBR','Rubryka'@,0,,MS.comment(AFORM,'RUBR')+' '+'(liczba naturalna)'@,type_of(0),0);
{? _a01='1' || _def.define('DSP','Czy wyświetlać w analizie porównawczej'@,1,,'[T]/[N]') ?};
_def.define('FRM','Wyliczanie wartości pozycji'@,1,,'Treść formuły (max. %1 znaków)'@['255']);
_def.define('FRS','Wyświetlanie szczegółów pozycji'@,1,,'Treść formuły (max. %1 znaków)'@['255']);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
AFORM.prefix();
{? _validate.ACTION='add'
|| AFORM.blank();
   AFORM.OPC:=_validate.OBJ.ANWAR;
   AFORM.RUBR:=_validate.OBJ.ANRUB
?};
{? _validate.OBJ.A01='1' || AFORM.DSP:=_obj.DSP ?};
AFORM.FRM:=_obj.FRM;
AFORM.FRS:=_obj.FRS;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::       _c - '0'/'1' - kalkulacja/analiza
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_a01:=_c;

_result:=1;
_table.OPC.VALUE:=AFORM.OPC().NA; _excel.write_async('ANWAR'+_a01,AFORM.OPC);
_table.RUBR.VALUE:=AFORM.RUBR().NR; _excel.write_async('ANRUB',AFORM.RUBR);
{? _a01='1' || _table.DSP.VALUE:=AFORM.DSP ?};
_table.FRM.VALUE:=AFORM.FRM;
_table.FRS.VALUE:=AFORM.FRS;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::       _d - '0'/'1' - kalkulacja/analiza
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;
_a01:=_d;

_result.RESULT:=1;

_result.OBJ:=obj_new('A01','ANWAR','ANRUB');
_result.OBJ.A01:=_a01;
_result.OBJ.ANWAR:=exec('FindInSet','#table','ANWAR','NA',_obj.OPC,_a01,"ANWAR.ref()",1);
_result.OBJ.ANRUB:=exec('FindInSet','#table','ANRUB','RUBR',_obj.RUBR,,"ANRUB.ref()");

:: Błędy
{? _result.OBJ.ANWAR=null()
|| _result.msg_norec('OPC');
   _result.RESULT:=0
?};
{? _result.OBJ.ANRUB=null()
|| _result.msg_norec('RUBR');
   _result.RESULT:=0
?};
{? +_obj.FRM>255
|| _result.msg_length('FRM',255);
   _result.RESULT:=0
?};
{? +_obj.FRS>255
|| _result.msg_length('FRS',255);
   _result.RESULT:=0
?};
{? _a01='1' & _obj.DSP<>'T' & _obj.DSP<>'N'
|| _result.msg_inset('DSP','T','N');
   _result.RESULT:=0
?};

:: OK
{? _result.RESULT>0
|| AFORM.index('OR');
   AFORM.prefix(_result.OBJ.ANWAR,_obj.RUBR);
   {? AFORM.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_aform',_obj,_mode,_result);
         {? exec('chk_aform','zl_kalk',1)<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_aform',_obj,_mode,_result);
      {? exec('chk_aform','zl_kalk',0)<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::       _d - '0'/'1' - kalkulacja/analiza
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
_a01:=_d;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=AFORM.add(1)
   |? _validate.ACTION='put'
   || _result:=AFORM.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || {? _a01='0'
      || _validate.MSG:='Dodanie formuły kalkulacji dla rubryki %1 wariantu %2 nie powiodło się.'@[_obj.NRUB,_obj.OPC]
      || _validate.MSG:='Dodanie formuły analizy dla rubryki %1 wariantu %2 nie powiodło się.'@[_obj.NRUB,_obj.OPC]
      ?}
   || {? _a01='0'
      || _validate.MSG:='Poprawa formuły kalkulacji dla rubryki %1 wariantu %2 nie powiodła się.'@[_obj.NRUB,_obj.OPC]
      || _validate.MSG:='Poprawa formuły analizy dla rubryki %1 wariantu %2 nie powiodła się.'@[_obj.NRUB,_obj.OPC]
      ?}
   ?}
?};
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 579485a3cbfa2974168226a1d63ff84d799b7766b8be1428fb1dca047d79a26e6ff218fa031dc7a53ce069cfc4fae7abb593b659c721bad2dd405283e61e2ce2be19eb9d768c93133e9ee20d2825994295f2839a0c0c4a4a11354ed76c42558cae1cd0aab4b40cf1f4d583a77f38538b9993d708729c7ba7f71c6a9c11bafcf8
