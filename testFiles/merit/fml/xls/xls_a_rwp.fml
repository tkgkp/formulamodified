:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_a_rwp.fml
:: Utworzony: 21.09.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu szczegółowego planu tygodnia
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='A_RWP';
_def.FUNPAR:='ZWS_PAR_PGRC';
_def.DOMAIN:=exec('name','#b_domain','PRC');
_def.FILE:=exec('def_per_prc_xlsx','xls__init');
_def.SHEET:='Szczegółowy plan tygodnia=1,1';
_def.NAME:='Szczegółowy plan tygodnia'@;
_def.DESC:='Szczegółowy plan tygodnia';

: źródło danych
_def.TABLE:="A_RWP";

: prolog
_def.BEFORE:="
   _env:=_a;
   A_RWN.cntx_psh();
   A_RWN.prefix();
   A_RWP.cntx_psh();
   A_RWP.f_clear();
   {? _env.is_export()
   || A_RWP.index(A_RWP.ndx_tmp(,,
         'A_RWN','F',,
         'A_RWN','OPIS',,
         'A_RWN','OD',,
         'ND',,
      ));
      A_RWP.prefix('T')
   || A_RWP.index('A_RWP');
      A_RWP.prefix()
   ?};
   ~~
";

: epilog
_def.AFTER:="
   A_RWP.cntx_pop();
   A_RWP.ndx_drop();
   A_RWN.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('OD',  MS.name(A_RWN,'OD'),  1,,MS.comment(A_RWN,'OD'),type_of(date));
   _env.define('OPIS',MS.name(A_RWN,'OPIS'),1,,MS.comment(A_RWN,'OPIS'),type_of(''));
   _env.define('ND',  MS.name(A_RWP,'ND'),  1,,MS.comment(A_RWP,'ND'),,0);
   _env.define('W',   MS.name(A_RWP,'W'),   1,,MS.comment(A_RWP,'W'));
   _env.define('GOD', MS.name(A_RWP,'GOD'), 1,,MS.comment(A_RWP,'GOD'));
   _env.define('GDO', MS.name(A_RWP,'GDO'), 1,,MS.comment(A_RWP,'GDO'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.OD.VALUE:=A_RWP.A_RWN().OD;
   _buf.OPIS.VALUE:=A_RWP.A_RWN().OPIS;
   _buf.ND.VALUE:=A_RWP.ND;
   _buf.W.VALUE:=A_RWP.W;
   _buf.GOD.VALUE:=A_RWP.GOD;
   _buf.GDO.VALUE:=A_RWP.GDO;
   _env.write_async('A_RWN',A_RWP.A_RWN);
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_a_rwp',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_a_rwp',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.OD=date(0,0,0) || 'OD'
   |? _buf.OPIS=''        || 'OPIS'
   |? _buf.W=''           || 'W'
   |? _buf.ND=0           || 'ND'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(A_RWN,'OPIS');
{? +_buf.OPIS>_max
|| _val.msg_length('OPIS',_max);
   _buf.OPIS:=_max+_buf.OPIS
?};
{? +_buf.W>1
|| _val.msg_length('W',1);
   _buf.W:=_max+_buf.W
?};

: błędne wartości
{? ('TN'*_buf.W)=0
|| _val.msg_inset('W','T','N');
   _val.RESULT:=0;
   return()

|? _buf.ND<0 | _buf.ND>7
|| _val.msg_range('ND','1','7');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_ztime:=time(0,0,0);
{? _buf.W='T' & (_buf.GOD=_ztime | _buf.GDO=_ztime)
|| _val.MSG:='Godziny "%1" i "%2" powinny być podane.'[MS.name(A_RWP,'GOD'),MS.name(A_RWP,'GDO')]
?};

{? ~A_RWN.find_tab(,
      'P',,'=',null,
      'OD',,'=',_buf.OD,
      'WP',,'=','N',
      'OPIS',,'=',_buf.OPIS
   )
|| _val.msg_norec('OPIS');
   _val.RESULT:=0;
   return()
?};

_ref:=null;
{? A_RWP.find_tab(,
      'A_RWN',,'=',A_RWN.ref(),
      'ND',,'=',_buf.ND
   )
|| _ref:=A_RWP.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 - %2: %3'[$_a.OD,_a.OPIS,$_a.ND]",
   'A_RWN',A_RWN.ref()
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,A_RWP,"
   _a.A_RWN:=_c.A_RWN;
   _a.W:=_b.W;
   _a.ND:=_b.ND;
   _a.GOD:=_b.GOD;
   _a.GDO:=_b.GDO;
   ~~
");
~~

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:46 7b8d988d527d268105942cb05756959b69f5bfc79a93815ee50e32c34b49721843f59a1208ab1fa957994c42d3781d8f63c76f58907f1c162dcfec965f7dbbc0b94ebbca130c636acd6035eb9da247f13c7307d76a777f9c412ad93d9a531db970896ab05c914fa258bae5f1ff494e4698a81435a3eda7d14e3fb827f0c52cc1
