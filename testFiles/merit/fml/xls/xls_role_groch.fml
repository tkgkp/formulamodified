:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_users.fml
:: Utworzony: 02.07.2018
:: Autor: WH
:: Systemy:
::======================================================================================================================
:: Zawartość:
::======================================================================================================================

\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - obiekt z definicją, który należy zasilić - wynik działania exec('args_init','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='B_PROTRO';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_USERS';
_def.FILE:='users.xlsx';
_def.SHEET:='Grupy ochron dla ról=1,3';
_def.NAME:='Grupy ochron dla ról'@;
_def.DESC:='Grupy ochron dla ról'@;

_def.PREFIX:="B_PROTRO.index('FIRMA');B_PROTRO.prefix(REF.FIRMA)";
_def.TABLE:="B_PROTRO";
_def.FIELDS:="exec('fields','xls_role_groch',_a)";

_def.BEFORE:="exec('before','xls_role_groch',_a)";
_def.AFTER:="exec('after','xls_role_groch',_a)";
_def.SELECT:="exec('select','xls_role_groch',_a)";

_def.EXPORT:="exec('export','xls_role_groch',_a,_b)";
_def.VALIDATE:="exec('validate','xls_role_groch',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_role_groch',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Zwraca eksportowane pola tabeli i ich atrybuty w excel
::   WE: _a - obiekt z definicją pól który należy zasilić - wynik działania exec('args_fields','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_tooltip:='Max. %1 znaków. '@[$MS.fld_len(B_ROLE,'NAME')];
_tooltip+='Wymagane.'@;
_def.define('B_ROLE','Rola'@,1,,_tooltip);
_tooltip:='Max. %1 znaków. '@[$MS.fld_len(B_PROT,'PROT_KEY')];
_tooltip+='Wymagane.'@;
_def.define('B_PROT','Grupa ochron'@,1,,_tooltip);
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól tabeli MacroBASE
::                      każdy obiekt ma taką strukturę:
::                        _obj_bridge.NAZWA_POLA.VALUE - wartość która będzie zapisana w EXCEL
::                        _obj_bridge.NAZWA_POLA.EDITABLE - czy komórka będzie edytowalna
::                        _obj_bridge.NAZWA_POLA.COLOR - kolor w formacie html czyli #ffffff
::                      Aktualny wewnętrzny obiekt można podejrzeć tu: exec('filler_obj_core','#excel_imex')
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_obj_bridge:=_b;
_result:=1;
_obj_bridge.B_ROLE.VALUE:=B_PROTRO.B_ROLE().NAME; _excel.write_async('B_ROLE',B_PROTRO.B_ROLE);
_obj_bridge.B_PROT.VALUE:=B_PROTRO.B_PROT().PROT_KEY;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER   - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obj_new() - obiekt z resultem, wynik działania exec('args_valid','#excel_imex').
::                        Obiekt ten jest przekazywany do formuły na IMPORT. Pole RESULT decyduje czy formuła
::                        na import się wykona. Pole MSG służy to odpisania komunikatu
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_can_continue:=1;

:: Walidacja wartości z Excel, czy są w nim pola których się spodziewam i czy mają dobre wartości
{? _can_continue>0 & _obj.B_ROLE=''
|| _can_continue:=0;
   _result.msg_empty('B_ROLE')
?};
{? _can_continue>0 & _obj.B_PROT=''
|| _can_continue:=0;
   _result.msg_empty('B_PROT')
?};
{? _can_continue>0
|| _max:=MS.fld_len(B_ROLE,'NAME');
   {? +_obj.B_ROLE>_max
   || _result.msg_length('B_ROLE',_max);
      _obj.B_ROLE:=_max+_obj.B_ROLE
   ?}
?};
{? _can_continue>0
|| _max:=MS.fld_len(B_PROT,'PROT_KEY');
   {? +_obj.B_PROT>_max
   || _result.msg_length('B_PROT',_max);
      _obj.B_PROT:=_max+_obj.B_PROT
   ?}
?};

_b_role:=null();
{? _can_continue>0
|| _b_role:=exec('FindInSet','#table','B_ROLE','UNIK',_obj.B_ROLE,REF.FIRMA,,1);
   {? _b_role=null()
   || _can_continue:=0;
      _result.msg_norec('B_ROLE')
   ?}
?};
_b_prot:=null();
{? _can_continue>0
|| _b_prot:=exec('FindInSet','#table','B_PROT','UNIK',_obj.B_PROT,,,1);
   {? _b_prot=null()
   || _can_continue:=0;
      _result.msg_norec('B_PROT')
   ?}
?};

{? _can_continue>0
||
   B_PROTRO.index('UNIK');
   B_PROTRO.prefix(_b_role,_b_prot);
   {? B_PROTRO.first()=0
   || _result.ACTION:='add'
   ?}
?};
{? _can_continue=0
|| _result.RESULT:=0
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt z resultem walidatora i resultem importu, wynik działania exec('args_valid','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_can_continue:=1;
{? _result.ACTION='add'
||
   {? OPERATOR.USER().KOD<>'admin' | 4+username()='html'
   || _can_continue:=0;
      _result.MSG:='Import grup ochron jest możliwy tylko dla użytkownika: %1'@['admin']
   ?};
   {? _can_continue>0
   || _list:=_obj.B_PROT+',';
      _b_role:=exec('FindInSet','#table','B_ROLE','UNIK',_obj.B_ROLE,REF.FIRMA,,1);
      _result.RESULT:=exec('b_protro_add','#b_role',_b_role,_list,0,0);
      {? _result.RESULT=0
      || _result.msg_insert('Grupa ochron: %1 dla roli: %2'@[_obj.B_PROT,_obj.B_ROLE])
      ?}
   ?}
?};
~~


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,
   'ROLE','STRING[255]','Rola'
   ,'PROT','STRING[255]','Grupa ochron'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'ROLE',,,'PROT',,);

B_PROTRO.cntx_psh();
B_PROTRO.index('UNIK');
B_PROTRO.prefix();
{? B_PROTRO.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$B_PROTRO.ref();
      _selected.prefix($B_PROTRO.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.ROLE:=B_PROTRO.B_ROLE().NAME;
      _tab.PROT:=B_PROTRO.B_PROT().PROT_KEY;
      _tab.add();
      B_PROTRO.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'ROLE,PROT',30,'Wybór grup ochron do eksportu'@);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
B_PROTRO.cntx_pop();
_result


\before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [18.42]
:: OPIS: Formuła przed importem/exportem
::   WE: _a - obj_new - tablica nazwana z argumentami. Wynik działania exec('args_after','#excel_imex')
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_args:=_a;
B_PROTRO.cntx_psh();
{? _args.is_import() & OPERATOR.USER().KOD='admin'
||
   B_PROT.cntx_psh();
   exec('b_prot_update','#b_role');
   B_PROT.cntx_pop()
?};
~~


\after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Formuła po imporcie/exporcie
::   WE: _a - obj_new - tablica nazwana z argumentami. Wynik działania exec('args_after','#excel_imex')
::   WY:
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_args:=_a;
B_PROTRO.cntx_pop();
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:12 c2cce46ff13d521b78f21784392b6d2da78280ae159a6c53ae98faf778029f39857dd7c949812d11051fe3f66229c6e62295fcb99ebd9037b01f7eae4663cf1c0233c86657a03348fd024f0d08443414471b14400b35a822204564352c8c4583919856b3fe440ca3dece72fb8aa757cbcb41f92c8b0b46a6a4f29d8e460987b1
