:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_ztpf.fml
:: Utworzony: 20.07.2018
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu wariantów kalkulacji dla typów zleceń
::======================================================================================================================


\init_0
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='ZTPF0';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='ZWS_PAR_TZLE';

_def.FILE:='produkcja_kalkulacje.xlsx';
_def.SHEET:='Warianty kalk. dla typów zlec.'@+'=1,1';
_def.NAME:='Warianty kalkulacji dla typów zleceń'@;
_def.DESC:='Przypisanie wariantów kalkulacji do typów zleceń'@;

_def.PREFIX:="ZTPF.index('TW'); ZTPF.prefix('0')";
_def.TABLE:="ZTPF";
_def.FIELDS:="exec('fields','xls_ztpf',_a)";

_def.BEFORE:="ZTPF.cntx_psh()";
_def.AFTER:="ZTPF.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('export','xls_ztpf',_a,_b,'0')";
_def.VALIDATE:="exec('validate','xls_ztpf',_a,_b,_c,'0')";
_def.IMPORT:="exec('import','xls_ztpf',_a,_b,_c)";
~~


\init_1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='ZTPF1';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='ZWS_PAR_TZLE';

_def.FILE:='produkcja_kalkulacje.xlsx';
_def.SHEET:='Warianty an. dla typów zlec.'@+'=1,1';
_def.NAME:='Warianty analiz dla typów zleceń'@;
_def.DESC:='Przypisanie wariantów analiz do typów zleceń'@;

_def.PREFIX:="ZTPF.index('TW'); ZTPF.prefix('1')";
_def.TABLE:="ZTPF";
_def.FIELDS:="exec('fields','xls_ztpf',_a)";

_def.BEFORE:="ZTPF.cntx_psh()";
_def.AFTER:="ZTPF.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('export','xls_ztpf',_a,_b,'1')";
_def.VALIDATE:="exec('validate','xls_ztpf',_a,_b,_c,'1')";
_def.IMPORT:="exec('import','xls_ztpf',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('TYP','Typ'@,1,,MS.comment(ZTPF,'TYP')+' '+'(max. %1 znaków)'@[$MS.fld_len(ZTP,'TYP')]);
_def.define('OPC','Wariant'@,1,,MS.comment(ZTPF,'OPC')+' '+'(max. %1 znaków)'@[$MS.fld_len(ANWAR,'NA')]);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

ZTPF.prefix();
{? _validate.ACTION='add'
|| ZTPF.blank();
   ZTPF.TYP:=_validate.OBJ.ZTP;
   ZTPF.OPC:=_validate.OBJ.ANWAR
?};
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::       _c - '0'/'1' - kalkulacja/analiza
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_a01:=_c;

_result:=1;
_table.TYP.VALUE:=ZTPF.TYP().TYP; _excel.write_async('ZTP',ZTPF.TYP);
_table.OPC.VALUE:=ZTPF.OPC().NA; _excel.write_async('ANWAR'+_a01,ZTPF.OPC);
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::       _d - '0'/'1' - kalkulacja/analiza
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;
_a01:=_d;

_result.RESULT:=1;
_result.OBJ:=obj_new('ZTP','ANWAR');
_result.OBJ.ZTP:=exec('FindInSet','#table','ZTP','TP',_obj.TYP,,"ZTP.ref()",1);
_result.OBJ.ANWAR:=exec('FindInSet','#table','ANWAR','NA',_obj.OPC,_a01,"ANWAR.ref()",1);

:: Błędy
{? _result.OBJ.ZTP=null()
|| _result.msg_norec('TYP');
   _result.RESULT:=0
?};
{? _result.OBJ.ANWAR=null()
|| _result.msg_norec('OPC');
   _result.RESULT:=0
?};

:: OK
{? _result.RESULT>0
|| ZTPF.index('TO');
   ZTPF.prefix(_result.OBJ.ZTP,_result.OBJ.ANWAR);
   {? ZTPF.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_ztpf',_obj,_mode,_result);
         {? exec('chk_ztpf','zl_common',1)<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_ztpf',_obj,_mode,_result);
      {? exec('chk_ztpf','zl_common',0)<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=ZTPF.add(1)
   |? _validate.ACTION='put'
   || _result:=ZTPF.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie wariantu %1 dla typu %2 nie powiodło się.'@[_obj.OPC,_obj.TYP]
   || _validate.MSG:='Poprawa wariantu %1 dla typu %2 nie powiodła się.'@[_obj.OPC,_obj.TYP]
   ?}
?};
_result

:Sign Version 2.0 jowisz:1028 2019/10/14 09:22:02 1621cc5e7ab55c685f8eabdf99b531cc5b7a88313a7943646f5acf6eebbf35eb527481a6554bc2916b4c59810540f61e9daf3ea4ce55884f7940affe749322a62118230ab4415e02c01b1f546342c88bab9cf1ef7d4addae67c96b7dfd518640b51ab0b819e3a2332ec2a7e180766f3df5198ae9ba8d1bf87f36cb7b178df377
