:!UTF-8
:: (c) Asseco Business Solutions S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_xfl_def.fml
:: Utworzony: 03.02.2021
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu konfiguracji
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_def:=_a;

_def.ID:='XFL_DEF';
_def.FUNPAR:='ZWS_PAR_XFL';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_xfl_xlsx','xls__init');
_def.SHEET:='Definicje filtrów=1,1';
_def.NAME:='Definicje filtrów'@;
_def.DESC:='Definicje filtrów';
_def.ADD_ROWS:=0;
_def.HIDDEN:='N';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="XFL_DEF";

: prolog
_def.BEFORE:="
   XFL_DEF.cntx_psh();
   XFL_DEF.f_clear();
   XFL_DEF.clear();
   XFL_DEF.index('KOD');
   ~~
";

: epilog
_def.AFTER:="
   XFL_DEF.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('SYSTEM',  MS.name(XFL_DEF,'SYSTEM'),0,,  MS.comment(XFL_DEF,'SYSTEM'));
   _env.define('KOD',     MS.name(XFL_DEF,'KOD'),0,,     MS.comment(XFL_DEF,'KOD'),type_of(''));
   _env.define('SYMBOL',  MS.name(XFL_DEF,'SYMBOL'),0,,  MS.comment(XFL_DEF,'SYMBOL'));
   _env.define('NAZWA',   MS.name(XFL_DEF,'NAZWA'),0,,   MS.comment(XFL_DEF,'NAZWA'));
   _env.define('OPIS',    MS.name(XFL_DEF,'OPIS'),0,,    MS.comment(XFL_DEF,'OPIS'));
   _env.define('TABELA',  MS.name(XFL_DEF,'TABELA'),0,,  MS.comment(XFL_DEF,'TABELA'));
   _env.define('FL_SORT', MS.name(XFL_DEF,'FL_SORT'),0,, MS.comment(XFL_DEF,'FL_SORT'));
   _env.define('FL_JOIN', MS.name(XFL_DEF,'FL_JOIN'),0,, MS.comment(XFL_DEF,'FL_JOIN'));
   _env.define('FL_WHERE',MS.name(XFL_DEF,'FL_WHERE'),0,,MS.comment(XFL_DEF,'FL_WHERE'));
   _env.define('DOSTEPNY',MS.name(XFL_DEF,'DOSTEPNY'),0,,MS.comment(XFL_DEF,'DOSTEPNY'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="exec('export','xls_xfl_def',_a,_b)";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_xfl_def',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_xfl_def',_a,_b,_c)";
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Ustawia wartości w polach bufora danych i asynchronicznie zapisuje powiązane dane.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_env:=_a;
_buf:=_b;

_buf.SYSTEM.VALUE:=XFL_DEF.SYSTEM;
_buf.KOD.VALUE:=XFL_DEF.KOD;
_buf.SYMBOL.VALUE:=XFL_DEF.SYMBOL;
_buf.NAZWA.VALUE:=XFL_DEF.NAZWA;
_buf.OPIS.VALUE:=XFL_DEF.memo_txt(,1,'OPIS');
_buf.TABELA.VALUE:=XFL_DEF.TABELA;
_buf.FL_SORT.VALUE:=XFL_DEF.memo_txt(,1,'FL_SORT');
_buf.FL_JOIN.VALUE:=XFL_DEF.memo_txt(,1,'FL_JOIN');
_buf.FL_WHERE.VALUE:=XFL_DEF.memo_txt(,1,'FL_WHERE');
_buf.DOSTEPNY.VALUE:=XFL_DEF.DOSTEPNY;

1


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.SYSTEM=''   || 'SYSTEM'
   |? _buf.KOD=''      || 'KOD'
   |? _buf.SYMBOL=''   || 'SYMBOL'
   |? _buf.NAZWA=''    || 'NAZWA'
   |? _buf.TABELA=''   || 'TABELA'
   |? _buf.DOSTEPNY='' || 'DOSTEPNY'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

:: błędne wartości
{? ('TN'*(1+_buf.SYSTEM))=0
|| _val.msg_inset('SYSTEM','T','N');
   _val.RESULT:=0;
   return()
|? ('TN'*(1+_buf.DOSTEPNY))=0
|| _val.msg_inset('DOSTEPNY','T','N');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(XFL_DEF,'SYSTEM');
{? +_buf.SYSTEM>_max
|| _val.msg_length('SYSTEM',_max);
   _buf.SYSTEM:=_max+_buf.SYSTEM
?};
_max:=MS.fld_len(XFL_DEF,'KOD');
{? +_buf.KOD>_max
|| _val.msg_length('KOD',_max);
   _buf.KOD:=_max+_buf.KOD
?};
_max:=MS.fld_len(XFL_DEF,'SYMBOL');
{? +_buf.SYMBOL>_max
|| _val.msg_length('SYMBOL',_max);
   _buf.SYMBOL:=_max+_buf.SYMBOL
?};
_max:=MS.fld_len(XFL_DEF,'NAZWA');
{? +_buf.NAZWA>_max
|| _val.msg_length('NAZWA',_max);
   _buf.NAZWA:=_max+_buf.NAZWA
?};
_max:=MS.fld_len(XFL_DEF,'TABELA');
{? +_buf.TABELA>_max
|| _val.msg_length('TABELA',_max);
   _buf.TABELA:=_max+_buf.TABELA
?};
_max:=MS.fld_len(XFL_DEF,'DOSTEPNY');
{? +_buf.DOSTEPNY>_max
|| _val.msg_length('DOSTEPNY',_max);
   _buf.DOSTEPNY:=_max+_buf.DOSTEPNY
?};

_ref:=null;
{? XFL_DEF.find_key(_buf.KOD,)
|| _ref:=XFL_DEF.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 - %2'[_a.KOD,_a.NAZWA]"
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,XFL_DEF,"
   _a.SYSTEM:=_b.SYSTEM;
   _a.KOD:=_b.KOD;
   _a.SYMBOL:=_b.SYMBOL;
   _a.NAZWA:=_b.NAZWA;
   _a.memo_set(_b.OPIS,'OPIS');
   _a.TABELA:=_b.TABELA;
   _a.memo_set(_b.FL_SORT,'FL_SORT');
   _a.memo_set(_b.FL_JOIN,'FL_JOIN');
   _a.memo_set(_b.FL_WHERE,'FL_WHERE');
   _a.DOSTEPNY:=_b.DOSTEPNY;
   ~~
",'OPIS,FL_SORT,FL_JOIN,FL_WHERE');
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:12 56553ae891c446ece8503d4772b3e5dbac27a60110904dea251a913a6f120260a565ffb135dd9084d92fb8d4c4a9f1f215073a65b3069812b1f71bd458ed1e3470880514af8e5f50e7a7a2ac962b3637e6fe3b36728beacc2ee4e606e310c82fb33b575d3c9ab4743d5fca397a8d8bfdc6f7f9fb66edf160656a0b0740052f7e
