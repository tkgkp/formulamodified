:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_users.fml
:: Utworzony: 02.07.2018
:: Autor: WH
:: Systemy:
::======================================================================================================================
:: Zawartość:
::======================================================================================================================

\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - obiekt z definicją, który należy zasilić - wynik działania exec('args_init','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='USERS';
_def.LOCK:=0;
_def.DOMAIN:=exec('name','#b_domain','ZWS');

_def.FUNPAR:='ZWS_USERS';
_def.MULTIFIR:='T';

_def.FILE:='users.xlsx';
_def.SHEET:='Użytkownicy'@+'=1,3';
_def.NAME:='Użytkownicy (aktywni)'@;
_def.DESC:='Użytkownicy systemu';

_def.PREFIX:="USERS.index('USR_AKOD');USERS.prefix('T')";
_def.TABLE:="USERS";
_def.FIELDS:="exec('fields','xls_users',_a)";

_def.BEFORE:="exec('before','xls_users',_a)";
_def.AFTER:="exec('after','xls_users',_a)";
_def.SELECT:="exec('select','xls_users',_a)";

_def.EXPORT:="exec('export','xls_users',_a,_b)";
_def.VALIDATE:="exec('validate','xls_users',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_users',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Zwraca eksportowane pola tabeli i ich atrybuty w excel
::   WE: _a - obiekt z definicją pól który należy zasilić - wynik działania exec('args_fields','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_tooltip:=MS.name(USERS,'AKT')+' '+'(max. %1 znaków). '@[$MS.fld_len(USERS,'AKT')];
_tooltip+='Dozwolone wartości: T/N'@;
_def.define('AKT','Aktywny'@,1,,_tooltip);

_tooltip:=MS.name(USERS,'KOD')+' '+'(max. %1 znaków). '@[$MS.fld_len(USERS,'KOD')];
_tooltip+='Wymagane jeżeli Login WWW pusty.'@;
_def.define('KOD','Login'@,1,,_tooltip);

_tooltip:=MS.name(USERS,'WEBLOGIN')+' '+'(max. %1 znaków). '@[$MS.fld_len(USERS,'WEBLOGIN')];
_tooltip+='Wymagane jeżeli Login pusty.'@;
_def.define('WEBLOGIN','Login WWW'@,1,,_tooltip);

_tooltip:=MS.name(USERS,'DANE')+' '+'(max. %1 znaków)'@[$MS.fld_len(USERS,'DANE')];
_def.define('DANE','Nazwa'@,1,,_tooltip);

_tooltip:=MS.name(USERS,'EMAIL')+' '+'(max. %1 znaków)'@[$MS.fld_len(USERS,'EMAIL')];
_def.define('EMAIL','Email'@,1,,_tooltip);

_tooltip:=MS.name(USERS,'TEL')+' '+'(max. %1 znaków)'@[$MS.fld_len(USERS,'TEL')];
_def.define('TEL','Telefon'@,1,,_tooltip);

_tooltip:='Czy użytkownik jest użytkownikiem specjalnym? '@;
_tooltip+='Dozwolone wartości: T/N'@;
_def.define('SUPER','Użytkownik specjalny?'@,0,,_tooltip);

_tooltip:='Zaszyfrowane hasło do JTerm (max. %1 znaków)'@['40'];
_def.define('PASSWORD','Hasło'@,0,,_tooltip);

_tooltip:='Zaszyfrowane hasło do WWW (max. %1 znaków)'@['40'];
_def.define('WEBPASS','Hasło WWW'@,0,,_tooltip);

_def.define('DESC','Opis użytkownika'@,1,,'Opis użytkownika'@);

_tooltip:='Dostępne logowanie Active Directory. '@;
_tooltip+='Dozwolone wartości: T/N'@;
_def.define('AD_AKT','Logowanie AD'@,1,,_tooltip);

_tooltip:='Dostępne logowanie web Active Directory. '@;
_tooltip+='Dozwolone wartości: T/N'@;
_def.define('AD_AKTW','Logowanie web AD'@,1,,_tooltip);

_tooltip:='Identyfikator na serwerze Active Directory'@;
_def.define('AD_GUID','Identyfikator AD'@,0,,_tooltip);

_tooltip:='Login na serwerze Active Directory'@;
_def.define('AD_LOGIN','Login AD'@,0,,_tooltip);

_tooltip:='Opis na serwerze Active Directory'@;
_def.define('AD_CNAME','Opis AD'@,0,,_tooltip);

_tooltip:='Lokalny identyfikator Active Directory'@;
_def.define('AD_SID','Lokalny identyfikator AD'@,0,,_tooltip);

_tooltip:='Dostępne logowanie E-kiosk. '@;
_tooltip+='Dozwolone wartości: T/N'@;
_def.define('EKIOSK','Logowanie E-kiosk'@,1,,_tooltip);

_tooltip:='Dostępne logowanie - Mobilny magazyn. '@;
_tooltip+='Dozwolone wartości: T/N'@;
_def.define('MOBIL','Operator mobilny'@,1,,_tooltip);

_tooltip:='Zaszyfrowane hasło do urządzenia mobilnego (4-cyfrowy kod PIN)'@;
_def.define('PASS','Hasło mob.'@,0,,_tooltip);

_tooltip:='Identyfikator pracownika (kod kreskowy)'@;
_def.define('IP','Identyfikator pracownika'@,0,,_tooltip);

_def.define('OSOBA','Identyfikator osoby'@,0);

_tooltip:='Logowanie przez Office 365 do Portalu HR'@;
_tooltip+='Dozwolone wartości: T/N'@;
_def.define('OF365','Portal HR - logowanie Office 365'@,1,,_tooltip);

_tooltip:='Logowanie 2-składnikowe do Portalu HR'@;
_tooltip+='Dozwolone wartości: T/N'@;
_def.define('LOG2','Portal HR - logowanie 2-składnikowe'@,1,,_tooltip);

~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól tabeli MacroBASE
::                      każdy obiekt ma taką strukturę:
::                        _obj_bridge.NAZWA_POLA.VALUE - wartość która będzie zapisana w EXCEL
::                        _obj_bridge.NAZWA_POLA.EDITABLE - czy komórka będzie edytowalna
::                        _obj_bridge.NAZWA_POLA.COLOR - kolor w formacie html czyli #ffffff
::                      Aktualny wewnętrzny obiekt można podejrzeć tu: exec('filler_obj_core','#excel_imex')
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_obj_bridge:=_b;
_result:=1;
_obj_bridge.AKT.VALUE:=USERS.AKT;
_obj_bridge.KOD.VALUE:=USERS.KOD;
_obj_bridge.WEBLOGIN.VALUE:=USERS.WEBLOGIN;
_obj_bridge.DANE.VALUE:=USERS.DANE;
_obj_bridge.EMAIL.VALUE:=USERS.EMAIL;
_obj_bridge.TEL.VALUE:=USERS.TEL;
_obj_bridge.DESC.VALUE:=USERS.memo_txt(,1,'DESC');
_obj_bridge.EKIOSK.VALUE:=USERS.EKIOSK;
_obj_bridge.MOBIL.VALUE:=USERS.MOBIL;
_obj_bridge.OF365.VALUE:=USERS.OF365;
_obj_bridge.LOG2.VALUE:=USERS.LOG2;
_obj_bridge.PASS.VALUE:={? USERS.PASS<>''
                        || exec('pwd_encode','#string',USERS.PASS,exec('encode_key','magazyn_mob'))
                        || ''
                        ?};
_obj_bridge.IP.VALUE:=USERS.IP;
_osoba:='';
{? USERS.OSOBA<>null()
|| OSOBA.cntx_psh();
   USERS.OSOBA();
   _txt:=OSOBA.NAZWISKO+';'+OSOBA.PIERWSZE+';'+OSOBA.OBCY+';'+OSOBA.IDENTYF;
   _osoba:=exec('pwd_encode','#string',_txt,exec('encode_key','ekioski'));
   OSOBA.cntx_pop()
?};
_obj_bridge.OSOBA.VALUE:=_osoba;

_sysobj:=exec(,'__sysusr');
SYSSUSER.cntx_psh();
{? USERS.GUID<>'' & exec('find_syssuser','users',USERS.GUID)>0
|| {? USERS.KOD<>'admin'
   ||
::    Każdemu oprócz admina eksportujemy hasła
      _obj_bridge.PASSWORD.VALUE:=SYSSUSER.PASSWORD;
      _obj_bridge.WEBPASS.VALUE:=SYSSUSER.WEBPASS
   ?};
   {? SYSSUSER.SUPER>0
   || _obj_bridge.SUPER.VALUE:='T'
   || _obj_bridge.SUPER.VALUE:='N'
   ?};
   _sysusr:=_sysobj.getUser(SYSSUSER.ref());
   {? var_pres('_sysusr')>100 & _sysusr.Auth.Ldap.Guid<>''
   || _obj_bridge.AD_GUID.VALUE:=_sysusr.Auth.Ldap.Guid;
      {? _sysusr.Auth.Ldap.Active
      || _obj_bridge.AD_AKT.VALUE:='T'
      || _obj_bridge.AD_AKT.VALUE:='N'
      ?};
      {? _sysusr.Auth.Ldap.WebActive
      || _obj_bridge.AD_AKTW.VALUE:='T'
      || _obj_bridge.AD_AKTW.VALUE:='N'
      ?};
      _obj_bridge.AD_LOGIN.VALUE:=_sysusr.Auth.Ldap.Login;
      _obj_bridge.AD_CNAME.VALUE:=_sysusr.Auth.Ldap.Cname;
      _obj_bridge.AD_SID.VALUE:=_sysusr.Auth.Ldap.Sid
   ?};
   ~~
?};
SYSSUSER.cntx_pop();
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER   - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obj_new() - obiekt z resultem, wynik działania exec('args_valid','#excel_imex').
::                        Obiekt ten jest przekazywany do formuły na IMPORT. Pole RESULT decyduje czy formuła
::                        na import się wykona. Pole MSG służy to odpisania komunikatu
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;


_can_continue:=1;
:: Walidacja wartości z Excel, czy są w nim pola których się spodziewam i czy mają dobre wartości
{? _obj.KOD='' & _obj.WEBLOGIN=''
|| _can_continue:=0;
   _result.MSG:='Brak wartości w kolumnach: %1 i %2'@[_result.name('KOD'),_result.name('WEBLOGIN')]
?};

{? _obj.AKT<>'' & 'TN'*_obj.AKT=0
|| _can_continue:=0;
   _result.msg_inset('AKT','T','N')
?};

{? _can_continue>0
|| _max:=MS.fld_len(USERS,'KOD');
   {? +_obj.KOD>_max
   || _result.msg_length('KOD',_max);
      _obj.KOD:=_max+_obj.KOD
   ?}
?};

{? _can_continue>0
|| _max:=MS.fld_len(USERS,'DANE');
   {? +_obj.DANE>_max
   || _result.msg_length('DANE',_max);
      _obj.DANE:=_max+_obj.DANE
   ?}
?};

_sysobj:=exec(,'__sysusr');

{? _can_continue>0
|| USERS.index('USR_KKOD');
   {? _obj.KOD='' & _obj.WEBLOGIN<>''
   ||
::    Jeżeli jest podany tylko WEBLOGIN to generuję login metodą systemową
      _login:=_sysobj.__createLogin(_obj.WEBLOGIN,'web');
      {? _login<>''
      || _obj.KOD:=_login
      ?};
      ~~
::    LOSOWANIE - STARA METODA
::    Jest podany tylko WEBLOGIN. Kod dla użytkownika trzeba wylosować
::      _nru:=0;
::      _login:='';
::      {!
::      |? _nru+=1;
::         _login:='web_'+form(_nru,-6,0,'9.');
::         USERS.find_key(_login,)
::      !};
::      {? _login<>''
::      || _obj.KOD:=_login
::      ?}
   ?}
?};

{? _can_continue>0
|| _lower_kod:=-(_obj.KOD);
   {? _lower_kod<>_obj.KOD
   || _can_continue:=0;
      _result.MSG:='Nieprawidłowa wartość w kolumnie: %1. Dozwolone są tylko małe litery.'@[_result.name('KOD')]
   ?}
?};


{? _can_continue>0
|| _max:=MS.fld_len(USERS,'EMAIL');
   {? +_obj.EMAIL>_max
   || _result.msg_length('EMAIL',_max);
      _obj.EMAIL:=_max+_obj.EMAIL
   ?}
?};

{? _can_continue>0
|| _max:=MS.fld_len('USERS','TEL');
   {? +_obj.TEL>_max
   || _result.msg_length('TEL',_max);
      _obj.TEL:=_max+_obj.TEL
   ?}
?};

{? _can_continue>0
|| {? _obj.AD_AKT<>'' & 'TN'*_obj.AD_AKT=0
   || _can_continue:=0;
      _result.msg_inset('AD_AKT','T','N')
   ?}
?};

{? _can_continue>0
|| {? _obj.AD_AKTW<>'' & 'TN'*_obj.AD_AKTW=0
   || _can_continue:=0;
      _result.msg_inset('AD_AKTW','T','N')
   ?}
?};

{? _can_continue>0
|| {? _obj.EKIOSK<>'' & 'TN'*_obj.EKIOSK=0
   || _can_continue:=0;
      _result.msg_inset('EKIOSK','T','N')
   ?}
?};

{? _can_continue>0
|| {? _obj.MOBIL<>'' & 'TN'*_obj.MOBIL=0
   || _can_continue:=0;
      _result.msg_inset('MOBIL','T','N')
   ?}
?};

{? _can_continue>0
|| {? _obj.OF365<>'' & 'TN'*_obj.OF365=0
   || _can_continue:=0;
      _result.msg_inset('OF365','T','N')
   || {? _obj.OF365='T' & (_obj.WEBLOGIN='' | ~exec('mail_ok','#email',_obj.WEBLOGIN))
      || _obj.OF365:='N';
         _result.MSG:='Użytkownik nie ma loginu webowego w postaci adresu e-mail. '+
                      'Nie może logować się przez Office 365 do Portalu HR.'
      ?}
   ?}
?};

{? _can_continue>0
|| {? _obj.LOG2<>'' & 'TN'*_obj.LOG2=0
   || _can_continue:=0;
      _result.msg_inset('LOG','T','N')
   || {? _obj.LOG2='T' & (_obj.WEBLOGIN='' | ~exec('mail_ok','#email',_obj.WEBLOGIN))
      || _obj.LOG2:='N';
         _result.MSG:='Użytkownik nie ma loginu webowego w postaci adresu e-mail. '+
                      'Nie może logować się 2-składnikowo do Portalu HR.'
      |? _obj.LOG2='T' & _obj.OF365='T'
      || _obj.LOG2:='N';
         _result.MSG:='Użytkownik loguje się przez Office 365 do Portalu HR. '+
                      'Nie może logować się 2-składnikowo do Portalu HR.'
      ?}
   ?}
?};

::{? _can_continue>0
::||  _ip_size:=exec('get','#params',500641);
::   {? _obj.IP<>'' & _ip_size<>+_obj.IP
::   || _can_continue:=0;
::      _result.MSG:='Nieprawidłowa długość identyfikatora pracownika. Wymagana długość: %1 znaków.'@[$_ip_size]
::   ?}
::?};

{? _can_continue>0
|| _pass:='';
   {? _obj.PASS<>''
   || _pass:=exec('pwd_decode','#string',_obj.PASS,exec('encode_key','magazyn_mob'));
      {? +_pass<>4
      || _can_continue:=0;
         _result.MSG:='Nieprawidłowa długość hasła do urządzenia mobilnego. Wymagany 4-cyfrowy kod PIN.'@
      ?}
   ?}
?};

{? _can_continue>0
|| _osoba:=null();
   {? _obj.OSOBA<>''
   || _txt:=exec('pwd_decode','#string',_obj.OSOBA,exec('encode_key','ekioski'));
      _tmp:=spli_str(_txt,';');
      {? obj_len(_tmp)=4
      || OSOBA.cntx_psh();
         OSOBA.index('OSOBA');
         OSOBA.prefix(_tmp[1],_tmp[2],_tmp[3],_tmp[4],);
         {? OSOBA.first()
         || _osoba:=OSOBA.ref()
         ?};
         OSOBA.cntx_pop()
      ?};
      VAR_DEL.delete('_tmp');
      {? _osoba=null()
      || _result.MSG:='Nie znaleziono osoby powiązanej z podanym identyfikatorem.'@;
         _result.RESULT:=0
      ?}
   ?}
?};

{? _can_continue>0
||
   _exist:=0;
   _desc:='';
   USERS.cntx_psh();
   USERS.index('USR_KKOD');
   USERS.prefix(_obj.KOD,);
   {? USERS.first()
   || _exist:=1;
      _desc:=USERS.memo_txt(,1,'DESC')
   ||
      {? _obj.WEBLOGIN<>''
      ||
::       Jeżeli nie znalazłem po kodzie to szukam po weblogin
         USERS.index('WEBLOGIN');
         USERS.prefix(_obj.WEBLOGIN,);
         {? USERS.first()
         || _exist:=1
         ?}
      ?}
   ?};
:: Sprawdzenie unikalności przypisanej osoby i id pracownika
   {? _exist>0
   || {? _mode>0
      || {? _osoba<>null() & exec('_osoba_unique','users',_osoba,USERS.ref())=0
         || _result.MSG:='Wskazana osoba [%1] jest już przypisana do innego użytkownika.'@
                         [exec('record','#to_string',_osoba)];
            _can_continue:=0
         ?};
         {? _can_continue>0 & _obj.IP<>'' & exec('ip_unique','users',_obj.IP,USERS.ref())=0
         || _result.MSG:='Dany identyfikator pracownika jest już przypisany do innego użytkownika.'@;
            _can_continue:=0
         ?}
      ?}
   || {? _osoba<>null() & exec('_osoba_unique','users',_osoba,null())=0
      || _result.MSG:='Wskazana osoba [%1] jest już przypisana do innego użytkownika.'@
                      [exec('record','#to_string',_osoba)];
         _can_continue:=0
      ?};
      {? _can_continue>0 & _obj.IP<>'' & exec('ip_unique','users',_obj.IP,null())=0
      || _result.MSG:='Dany identyfikator pracownika jest już przypisany do innego użytkownika.'@;
         _can_continue:=0
      ?}
   ?};

   {? _can_continue>0
   ||
      _jpass:='';
      _wpass:='';
      _super:='';
      _ad_guid:='';
      _ad_akt:='';
      _ad_aktw:='';
      _ad_login:='';
      _ad_cname:='';
      _ad_sid:='';
      SYSSUSER.cntx_psh();
      {? USERS.GUID<>'' & exec('find_syssuser','users',USERS.GUID)>0
      || _jpass:=SYSSUSER.PASSWORD;
         _wpass:=SYSSUSER.WEBPASS;
         {? SYSSUSER.SUPER>0
         || _super:='T'
         || _super:='N'
         ?};
         _sysusr:=_sysobj.getUser(SYSSUSER.ref());
         {? var_pres('_sysusr')>100
         || _ad_guid:=_sysusr.Auth.Ldap.Guid;
            {? _sysusr.Auth.Ldap.Active
            || _ad_akt:='T'
            || _ad_akt:='N'
            ?};
            {? _sysusr.Auth.Ldap.WebActive
            || _ad_aktw:='T'
            || _ad_aktw='N'
            ?};
            _ad_login:=_sysusr.Auth.Ldap.Login;
            _ad_cname:=_sysusr.Auth.Ldap.Cname;
            _ad_sid:=_sysusr.Auth.Ldap.Sid
         ?};
         ~~
      ?};
      SYSSUSER.cntx_pop();

      _result.OBJ:=exec('buffer','users');
      {? _exist>0
      || _result.OBJ.get();
         {? _mode>0
         ||
            {? _obj.DANE<>USERS.DANE |
               _obj.AKT<>USERS.AKT |
               _obj.EMAIL<>USERS.EMAIL |
               _obj.TEL<>USERS.TEL |
               _obj.WEBLOGIN<>USERS.WEBLOGIN |
               _obj.EKIOSK<>USERS.EKIOSK |
               _obj.MOBIL<>USERS.MOBIL |
               _obj.OF365<>USERS.OF365 |
               _obj.LOG2<>USERS.LOG2 |
               _obj.IP<>USERS.IP |
               _pass<>USERS.PASS |
               _osoba<>USERS.OSOBA |
               (_obj.PASSWORD<>'' & _obj.PASSWORD<>_jpass) |
               (_obj.WEBPASS<>'' & _obj.WEBPASS<>_wpass) |
               (1+_jpass)='!' |
               (1+_wpass)='!' |
               _obj.SUPER<>_super |
               _obj.DESC<>_desc |
               (_obj.AD_GUID<>'' & _obj.AD_GUID<>_ad_guid) |
               (_obj.AD_AKT<>'' & _obj.AD_AKT<>_ad_akt) |
               (_obj.AD_AKTW<>'' & _obj.AD_AKTW<>_ad_aktw) |
               (_obj.AD_LOGIN<>'' & _obj.AD_LOGIN<>_ad_login) |
               (_obj.AD_CNAME<>'' & _obj.AD_CNAME<>_ad_cname) |
               (_obj.AD_SID<>'' & _obj.AD_SID<>_ad_sid)
            ||
               _result.OBJ.DANE:=_obj.DANE;
               _result.OBJ.WEBLOGIN:=_obj.WEBLOGIN;
               _result.OBJ.AKT:=_obj.AKT;
               _result.OBJ.EMAIL:=_obj.EMAIL;
               _result.OBJ.TEL:=_obj.TEL;
               _result.OBJ.DESC:=_obj.DESC;
               _result.OBJ.EKIOSK:=_obj.EKIOSK;
               _result.OBJ.MOBIL:=_obj.MOBIL;
               _result.OBJ.OF365:=_obj.OF365;
               _result.OBJ.LOG2:=_obj.LOG2;
               _result.OBJ.IP:=_obj.IP;
               _result.OBJ.PASS:=_pass;
               _result.OBJ.OSOBA:=_osoba;
               _result.ACTION:='put'
            ?}
         ?}
      ||
         _result.OBJ.blank();
         _result.OBJ.KOD:=_obj.KOD;
         _result.OBJ.WEBLOGIN:=_obj.WEBLOGIN;
         _result.OBJ.DANE:=_obj.DANE;
         _result.OBJ.AKT:=_obj.AKT;
         _result.OBJ.EMAIL:=_obj.EMAIL;
         _result.OBJ.TEL:=_obj.TEL;
         _result.OBJ.DESC:=_obj.DESC;
         _result.OBJ.EKIOSK:=_obj.EKIOSK;
         _result.OBJ.MOBIL:=_obj.MOBIL;
         _result.OBJ.OF365:=_obj.OF365;
         _result.OBJ.LOG2:=_obj.LOG2;
         _result.OBJ.IP:=_obj.IP;
         _result.OBJ.PASS:=_pass;
         _result.OBJ.OSOBA:=_osoba;
         _result.ACTION:='add'
      ?}
   ?};
   USERS.cntx_pop();
   ~~
?};
{? _can_continue=0
|| _result.RESULT:=0
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt z resultem walidatora i resultem importu, wynik działania exec('args_valid','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;
_can_continue:=1;
USERS.prefix();
_sysobj:=exec(,'__sysusr');
:: Wyłączenie komunikatów
_msg_bef:=_sysobj.showMessages(0);

{? _result.ACTION='put'
||
   _pass_change:=0;
   _jpass:='';
   _wpass:='';
   _super_change:=0;
   _super:='N';

   _ad_change:=0;
   _ad_guid:='';
   _ad_akt:='';
   _ad_aktw:='';
   _ad_login:='';
   _ad_cname:='';
   _ad_sid:='';

   SYSSUSER.cntx_psh();

   {? _result.OBJ.GUID<>'' & exec('find_syssuser','users',_result.OBJ.GUID)>0
   || _jpass:=SYSSUSER.PASSWORD;
      _wpass:=SYSSUSER.WEBPASS;
      {? SYSSUSER.SUPER>0
      || _super:='T'
      || _super:='N'
      ?};
      _sysusr:=_sysobj.getUser(SYSSUSER.ref());
      {? var_pres('_sysusr')>100
      || _ad_guid:=_sysusr.Auth.Ldap.Guid;
         {? _sysusr.Auth.Ldap.Active
         || _ad_akt:='T'
         || _ad_akt:='N'
         ?};
         {? _sysusr.Auth.Ldap.WebActive
         || _ad_aktw:='T'
         || _ad_aktw:='N'
         ?};
         _ad_login:=_sysusr.Auth.Ldap.Login;
         _ad_cname:=_sysusr.Auth.Ldap.Cname;
         _ad_sid:=_sysusr.Auth.Ldap.Sid
      ?};
      ~~
   ?};
   {? (_obj.PASSWORD<>'' & _jpass<>_obj.PASSWORD) | (_obj.WEBPASS<>'' & _wpass<>_obj.WEBPASS)
      | (1+_jpass)='!' | (1+_wpass)='!'
   || _pass_change:=1
   ?};
   {? _obj.SUPER<>_super
   || _super_change:=1
   ?};
   {? (_obj.AD_GUID<>'' & _obj.AD_GUID<>_ad_guid) | (_obj.AD_AKT<>'' & _obj.AD_AKT<>_ad_akt) |
      (_obj.AD_AKTW<>'' & _obj.AD_AKTW<>_ad_aktw) | (_obj.AD_LOGIN<>'' & _obj.AD_LOGIN<>_ad_login) |
      (_obj.AD_CNAME<>'' & _obj.AD_CNAME<>_ad_cname) | (_obj.AD_SID<>'' & _obj.AD_SID<>_ad_sid)
   || _ad_change:=1
   ?};

   _akt_before:=exec('FindAndGet','#table',USERS,_result.OBJ.Ref,,"AKT",'');
   _can_continue:=exec('put','users',_result.OBJ,_result.OBJ.Ref);
   {? _can_continue=0
   || _result.MSG:='Nie udało się poprawić danych użytkownika: %1 %2'@[_result.OBJ.KOD,_result.OBJ.WEBLOGIN]
   ?};
   {? _can_continue>0
   || {? _result.OBJ.AKT='N' & _akt_before<>_result.OBJ.AKT
      ||
::       Deaktywacja użytkownika
         _can_continue:=exec('deactivate','users',_result.OBJ.Ref);
         {? _can_continue=0
         || _result.MSG:='Nie udało się dezaktywować użytkownika: %1'@[_result.OBJ.KOD]
         ?};

         {? _can_continue>0
         ||
::          Jesli użytkownik znajduje się w SYSSUSER to najpierw usuwam go stamtąd a następnie robię synchro
            SYSSUSER.cntx_psh();
            _sysusr:=_sysobj.getUser(_result.OBJ.GUID);
            {? var_pres('_sysusr')>100
            || _can_continue:=_sysobj.delUser(_sysusr)
            ?};
            {? _can_continue=0
            || _result.MSG:='Nie udało się usunąć użytkownika: %1 z serwera aplikacji'@[_result.OBJ.KOD]
            ?};

            {? _can_continue<>0
               & exec('find_syssuser','users',_result.OBJ.GUID)=0
            ||  _can_continue:=exec('clean','#users',_result.OBJ.Ref);
               {? _can_continue=0
               || _result.MSG:='Nie udało się usunąć powiązań dla użytkownika: %1'@[_result.OBJ.KOD]
               ?};
               {? _can_continue>0
               || _can_continue:=exec('delete','#users',_result.OBJ.Ref)
               ?}
            ?};
            SYSSUSER.cntx_pop();
            ~~
         ?}
      ?};
      {? _result.OBJ.AKT='T' & _akt_before<>_result.OBJ.AKT
      ||
::       Aktywacja użytkownika
         _can_continue:=exec('resurrection','users',_result.OBJ.Ref,0,USERS,0,0);
         {? _can_continue=0
         || _result.MSG:='Nie udało się aktywować użytkownika: %1'@[_result.OBJ.KOD]
         ?}
      ?}
   ?};

   {? _can_continue>0 & _result.OBJ.AKT='T' & (_pass_change>0 | _super_change)
   ||
      {? _obj.KOD<>'admin'
      ||
::       Zmiana hasła dla aktywnego użytkownikas
         {? _pass_change
         || _auth:=exec('auth','xls_users',_result.OBJ,_obj,_obj.PASSWORD,_obj.WEBPASS,_sysobj)
         || _auth:=exec('auth','xls_users',_result.OBJ,_obj,'','',_sysobj)
         ?};
         _msg:='';
         {? _auth=1
         || {? _pass_change & ~_super_change
            || _msg:= 'Zmodyfikowano hasło użytkownika %1.'[_result.OBJ.KOD]
            |? ~_pass_change & _super_change
            || _msg:='Zmodyfikowano znacznik "użytkownik specjalny" ("%1") użytkownika %2.'[_obj.SUPER,_result.OBJ.KOD]
            || _msg:='Zmodyfikowano hasło i znacznik "użytkownik specjalny" ("%1") użytkownika %2.'[_obj.SUPER,_result.OBJ.KOD]
            ?}
         |? _auth=-1
         || {? _pass_change & ~_super_change
            || _msg:='Nie udało się ustawienie hasła dla użytkownika: %1 (błąd systemowy nr %2)'@[_result.OBJ.KOD,_sysobj.LastError]
            |? ~_pass_change & _super_change
            || _msg:='Nie udało się ustawienie znacznika "użytkownik specjalny" dla użytkownika: %1 (błąd systemowy nr %2)'@[_result.OBJ.KOD,_sysobj.LastError]
            || _msg:='Nie udało się ustawienie hasła lub znacznika "użytkownik specjalny" dla użytkownika: %1 (błąd systemowy nr %2)'@[_result.OBJ.KOD,_sysobj.LastError]
            ?}
         |? _auth=-2
         || _msg:='Nie udało się ustawienie hasła lub znacznika "użytkownik specjalny" dla użytkownika: %1 (import powinien przeprowadzić administrator systemu)'@[_result.OBJ.KOD]
         ?};
         {? _msg<>''
         || _result.MSG:=_msg
         ?}
      || _can_continue:=0;
         _result.MSG:='Zabronione modyfikowanie hasła i znacznika "użytkownik specjalny" dla użytkownika: admin'@
      ?}   ?};
   {? _can_continue>0 & _result.OBJ.AKT='T' & _ad_change>0
::       Zmiana logowania Active Directory
   || _auth_ad:=exec('auth_ad','xls_users',_result.OBJ,_obj,_sysobj);
      {? _auth_ad=1
      || _msg:='Zmieniono dane logowania Active Directory użytkownika %1.'[_result.OBJ.KOD]
      |? _auth_ad=-1
      || _msg:='Nie udała się zmiana logowania Active Directory dla użytkownika: %1 (błąd systemowy nr %2)'@[_result.OBJ.KOD,$_sysobj.LastError]
      |? _auth_ad=-2
      || _msg:='Nie udała się zmiana logowania Active Directory dla użytkownika: %1 (import powinien przeprowadzić administrator systemu)'@[_result.OBJ.KOD]
      || _msg:='Nie udała się zmiana logowania Active Directory dla użytkownika: %1'@[_result.OBJ.KOD]
      ?};
      {? _result.MSG<>''
      || _msg:=_result.MSG+' '+_msg
      ?};
      _result.MSG:=_msg
   ?};
   SYSSUSER.cntx_pop()
|? _result.ACTION='add'
||
:: Dodawanie nowego użytkownika
   _can_continue:=exec('add','users',_result.OBJ);
   {? _can_continue=0
   || _result.MSG:='Nie udało się dodanie użytkownika: %1'@[_obj.KOD]
   ||
      _can_continue:=exec('resurrection','users',_result.OBJ.Ref,0,USERS,0,0);
      {? _can_continue=0
      || _result.MSG:='Nie udało się dodanie użytkownika %1'@[_obj.KOD]
      ?};
      ~~
   ?};
   {? _can_continue>0
   ||
::    Ustawienie hasła dla nowego użytkownika
      _auth:=exec('auth','xls_users',_result.OBJ,_obj,_obj.PASSWORD,_obj.WEBPASS,_sysobj);
::      {? _auth=0
::      || _result.MSG:='W czasie importu dodano użytkownika %1. Należy ustawić mu dane uwierzytelniające w obszarze roboczym Użytkownicy, role, uprawnienia'@[_obj.KOD]
      {? _auth=-1
      || _can_continue:=0;
         _result.MSG:='Nie udało się ustawienie hasła dla użytkownika: %1 (błąd systemowy nr %2)'@[_result.OBJ.KOD,$_sysobj.LastError]
      |? _auth=-2
      || _can_continue:=0;
         _result.MSG:='Nie udało się ustawienie hasła dla użytkownika: %1 (import powinien przeprowadzić administrator systemu)'@[_result.OBJ.KOD]
      ?};
      _auth_ad:=exec('auth_ad','xls_users',_result.OBJ,_obj,_sysobj);
      {? _auth_ad=1
      || _msg:='Zmieniono dane logowania Active Directory użytkownika %1.'[_result.OBJ.KOD]
      |? _auth_ad=-1
      || _msg:='Nie udała się zmiana logowania Active Directory dla użytkownika: %1 (błąd systemowy nr %2)'@[_result.OBJ.KOD,$_sysobj.LastError]
      |? _auth_ad=-2
      || _msg:='Nie udała się zmiana logowania Active Directory dla użytkownika: %1 (import powinien przeprowadzić administrator systemu)'@[_result.OBJ.KOD]
      || _msg:=''
      ?};
      {? _msg<>''
      || {? _result.MSG<>''
         || _msg:=_result.MSG+' '+_msg
         ?}
      ?};
      _result.MSG:=_msg
   ?}
?};
_sysobj.showMessages(_msg_bef);

{? _can_continue=0
|| _result.RESULT:=0
?};
~~


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,
   'KOD','STRING[20]','Login'@
   ,'WEBLOGIN','STRING[255]','Login WWW'@
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'DANE','STRING[50]','Dane'@
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

USERS.cntx_psh();
USERS.index('USR_AKOD');
USERS.prefix('T');
{? USERS.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$USERS.ref();
      _selected.prefix($USERS.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:=USERS.KOD;
      _tab.DANE:=USERS.DANE;
      _tab.WEBLOGIN:=USERS.WEBLOGIN;
      _tab.add();
      USERS.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'KOD,WEBLOGIN,DANE',30,'Wybór użytkowników do eksportu'@);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
USERS.cntx_pop();
_result


\before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Formuła przed importem/eksportem
::   WE: _a - obj_new - argumenty wejściowe - wynik działania exec('args_after','#excel_imex')
::   WY: 1
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_args:=_a;

USERS.cntx_psh();

{? _args.is_import()
|| USERS.trig_off('add po','');
   USERS.trig_off('put po','');
   ~~
?};

1


\after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Formuła po imporcie/eksporcie
::   WE: _a - obj_new - argumenty wejściowe - wynik działania exec('args_after','#excel_imex')
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_args:=_a;

_can_continue:=1;

{? _args.is_import()
|| exec('synchronize','users');

   USERS.trig_on('add po','');
   USERS.trig_on('put po','');

   UDB_UPR.cntx_psh();
   USERS.index('USR_AKOD');
   USERS.prefix('T');
   _loop:=USERS.first();
   {!
   |? _loop
   |! {? USERS.JTERM='T' | USERS.EKIOSK='T'
      || UDB_UPR.index('FK_USR');
         UDB_UPR.prefix(USERS.ref());
         {? UDB_UPR.size()=0
         || _key:=$USERS.ref();
::          ustaw semafor operacji hurtowej
            exec('add','#bulk',USERS,'add',_key);
::          uzupełnij domyślne uprawnienia z wyłączoną aktualizacją
            exec('upr_usr_add','schemat',USERS.ref());
::          usuń semafor hurtowego przetwarzania
            exec('del','#bulk',USERS,'add',_key);
            {? UDB_UPR.first()<>0
::             aktualizuj redundantne informacje
            || exec('udb_upr_zmien','schemat')
            ?}
         ?}
      ?};
      _loop:=USERS.next()
   !};
   UDB_UPR.cntx_pop();
   ~~
?};
USERS.cntx_pop();
~~


\auth
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Włącza autoryzację dla użytkownika, jeżeli hasło podane i się da
::   WE: _a - obj_new - bufor tabeli USERS
::       _b - obj_new - wiersz EXCEL
::       _c - STRING - zaszyfrowane hasło JTERM
::       _d - STRING - zaszyfrowane hasło WEBTERM
::       _e - obj_new - obiekt do obsługi SYSSUSER
::   WY: 0 - autoryzacja nie zmieniła się
::       1 - poprawnie zmieniono autoryzację
::      -1 - wystąpił błąd systemowy zmieniania autoryzacji
::      -2
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_buffer:=_a;
_ref:=_buffer.Ref;
{? var_pres('_a')=type_of(USERS.ref())
|| _ref:=_a
?};
_obj:=_b;

_jpass:='';
{? var_pres('_c')=type_of('')
|| _jpass:=_c
?};

_wpass:='';
{? var_pres('_d')=type_of('')
|| _wpass:=_d
?};
_sysobj:=_e;

_result:=0;
_can_continue:=1;

{? _can_continue>0
||
   USERS.cntx_psh();
   {? _ref<>null()
   || USERS.prefix();
      {? USERS.seek(_ref)
      || _can_continue:=1
      || _can_continue:=0
      ?}
   ?};

   {? _can_continue>0
   ||
      {? USERS.AKT='T'
      ||
         SYSSUSER.cntx_psh();

         {? USERS.GUID<>''
         || {? exec('find_syssuser','users',USERS.GUID)>0
            || _userid:=SYSSUSER.ref();
               _sysusr:=_sysobj.getUser(_userid);
               _change:=0;
               {? (_obj.SUPER='T' & ~_sysusr.Superuser) | (_obj.SUPER='N' & _sysusr.Superuser)
               || _change:=1;
                  {? _obj.SUPER='T'
                  || _sysusr.Superuser:=1
                  || _sysusr.Superuser:=0
                  ?}
               ?};
               {? _jpass<>'' & _obj.KOD<>''
               || _change:=1;
                  _sysusr.Auth.Pass.Active:=1;
                  _sysusr.Auth.Pass.Password:=_jpass
               ?};
               {? _wpass<>'' & _obj.WEBLOGIN<>''
               || _change:=1;
                  _sysusr.Auth.Web.Login:=_obj.WEBLOGIN;
                  _sysusr.Auth.Web.Active:=1;
                  _sysusr.Auth.Web.Password:=_wpass
               ?};

               {? _change>0
               || {? OPERATOR.USER().KOD<>'admin'
                  ||
::                   Funkcje systemowe do ustawiania autoryzacji wymagają wbudowanego konta admin
::                   jeżeli użytkownik nie jest adminem, to nic nie zmieniamy
                     _change:=0;
                     _result:=-2
                  ?}
               ?};

               {? _change>0
               ||
                  _jfix:=1+_jpass='!';
                  _wfix:=1+_wpass='!';
                  {? _jfix>0 | _wfix>0
                  || _sysfix:=exec('fix_user','xls_users',_sysobj,_sysusr,_jpass,_wpass);
                     {? _sysfix<>0
                     || _result:=1
                     || _result:=-1
                     ?}
                  ||
                     _sysput:=_sysobj.__putUserNoCrypt(_sysusr);
                     {? _sysput>0
                     || _result:=1
                     || _result:=-1
                     ?}
                  ?}
               ?}
            ?}
         ?};
         SYSSUSER.cntx_pop()
      ?}
   ?};
   USERS.cntx_pop()
?};
_result


\fix_user
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [19.22]
:: OPIS: Naprawia użytkownika z hasłem niezaszyfrowanym czyli takim które zaczyna się od '!'
::   WE: _a - obj_new - obiekt systemowy
::       _b - obj_new - struktura użytkownika
::       _c - STRING - hasło jterm
::       _d - STRING - hasło webterm
::   WY: 0/1/-1
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_su:=_a;
_user:=_b;
_jpass:=_c;
_wpass:=_d;

_jfix:=1+_jpass='!';
_wfix:=1+_wpass='!';
{? _jfix>0
|| _user.Auth.Pass.Password:=1-_jpass
?};
{? _wfix>0
|| _user.Auth.Web.Password:=1-_wpass
?};
_su.putUser(_user,1)


\auth_ad
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Zapis logowania Active Directory
::   WE: _a - obj_new - bufor tabeli USERS
::       _b - obj_new - wiersz EXCEL
::       _e - obj_new - obiekt do obsługi SYSSUSER
::   WY: 0 - autoryzacja nie zmieniła się
::       1 - poprawnie zmieniono autoryzację
::      -1 - wystąpił błąd systemowy zmieniania autoryzacji
::      -2
::  TAG: <PRYWATNA>
::----------------------------------------------------------------------------------------------------------------------
_buffer:=_a;
_ref:=_buffer.Ref;
{? var_pres('_a')=type_of(USERS.ref())
|| _ref:=_a
?};
_obj:=_b;

_sysobj:=_c;

_ad_guid:=_obj.AD_GUID;
_ad_akt:=_obj.AD_AKT;
_ad_aktw:=_obj.AD_AKTW;
_ad_login:=_obj.AD_LOGIN;
_ad_cname:=_obj.AD_CNAME;
_ad_sid:=_obj.AD_SID;

_result:=0;
_can_continue:=1;

{? _can_continue>0
||
   USERS.cntx_psh();
   {? _ref<>null()
   || USERS.prefix();
      {? USERS.seek(_ref)
      || _can_continue:=1
      || _can_continue:=0
      ?}
   ?};

   {? _can_continue>0
   ||
      {? USERS.AKT='T'
      ||
         SYSSUSER.cntx_psh();

         {? USERS.GUID<>''
         || {? exec('find_syssuser','users',USERS.GUID)>0
            || _userid:=SYSSUSER.ref();
               _sysusr:=_sysobj.getUser(_userid);
               _change:=0;
               {? _ad_guid<>'' & _sysusr.Auth.Ldap.Guid<>_ad_guid
               || _change:=1;
                  _sysusr.Auth.Ldap.Guid:=_ad_guid
               ?};
               {? _ad_akt<>'' & _sysusr.Auth.Ldap.Active<>(_ad_akt='T')
               || _change:=1;
                  {? _ad_akt='T'
                  || _sysusr.Auth.Ldap.Active:=1
                  || _sysusr.Auth.Ldap.Active:=0
                  ?}
               ?};
               {? _ad_aktw<>'' & _sysusr.Auth.Ldap.WebActive<>(_ad_aktw='T')
               || _change:=1;
                  {? _ad_aktw='T'
                  || _sysusr.Auth.Ldap.WebActive:=1
                  || _sysusr.Auth.Ldap.WebActive:=0
                  ?}
               ?};
               {? _ad_login<>'' & _sysusr.Auth.Ldap.Login<>_ad_login
               || _change:=1;
                  _sysusr.Auth.Ldap.Login:=_ad_login
               ?};
               {? _ad_cname<>'' & _sysusr.Auth.Ldap.Cname<>_ad_cname
               || _change:=1;
                  _sysusr.Auth.Ldap.Cname:=_ad_cname
               ?};
               {? _ad_sid<>'' & _sysusr.Auth.Ldap.Sid<>_ad_sid
               || _change:=1;
                  _sysusr.Auth.Ldap.Sid:=_ad_sid
               ?};

               {? _change>0
               || {? OPERATOR.USER().KOD<>'admin'
                  ||
::                   Funkcje systemowe do ustawiania autoryzacji wymagają wbudowanego konta admin
::                   jeżeli użytkownik nie jest adminem, to nic nie zmieniamy
                     _change:=0;
                     _result:=-2
                  ?}
               ?};

               {? _change>0
               || _sysput:=_sysobj.putUser(_sysusr,1);
                  {? _sysput>0
                  || _result:=1
                  || _result:=-1
                  ?}
               ?}
            ?}
         ?};
         SYSSUSER.cntx_pop()
      ?}
   ?};
   USERS.cntx_pop()
?};
_result


\ad_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - obiekt z definicją, który należy zasilić - wynik działania exec('args_init','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='AD';
_def.TAB_IMP:="USERS";

_def.LOCK:=0;
_def.DOMAIN:=exec('name','#b_domain','ZWS');

_def.FUNPAR:='ZWS_USRAD';
_def.MULTIFIR:='T';

_def.FILE:='users.xlsx';
_def.SHEET:='Active Directory'@+'=1,1';
_def.NAME:='Active Directory'@;
_def.DESC:='Active Directory';

_def.PREFIX:="";
_def.TABLE:="exec('ad_table','xls_users')";
_def.FIELDS:="exec('ad_fields','xls_users',_a)";

_def.BEFORE:="";
_def.AFTER:="";
_def.SELECT:="";

_def.EXPORT:="exec('ad_export','xls_users',_a,_b)";
_def.VALIDATE:="exec('ad_validate','xls_users',_a,_b,_c)";
_def.IMPORT:="exec('ad_import','xls_users',_a,_b,_c)";
~~


\ad_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_sysobj:=exec(,'__sysusr');

_wyn:=tab_tmp(1
   ,'AD_ADRES','STRING[255]','Adres serwera Active Directory'
   ,'UIDREF','STRING[48]','Identyfikator rekordu');

_wyn.AD_ADRES:=_sysobj.getLdapUri();
_wyn.add(1);

_wyn


\ad_fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Zwraca eksportowane pola tabeli i ich atrybuty w excel
::   WE: _a - obiekt z definicją pól który należy zasilić - wynik działania exec('args_fields','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_tooltip:='Adres serwera Active Directory'@;
_def.define('AD_ADRES','Serwer Active Directory'@,1,,_tooltip);

~~


\ad_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól tabeli MacroBASE
::                      każdy obiekt ma taką strukturę:
::                        _obj_bridge.NAZWA_POLA.VALUE - wartość która będzie zapisana w EXCEL
::                        _obj_bridge.NAZWA_POLA.EDITABLE - czy komórka będzie edytowalna
::                        _obj_bridge.NAZWA_POLA.COLOR - kolor w formacie html czyli #ffffff
::                      Aktualny wewnętrzny obiekt można podejrzeć tu: exec('filler_obj_core','#excel_imex')
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_obj_bridge:=_b;
_tab:=_excel.table();
_result:=1;

_obj_bridge.AD_ADRES.VALUE:=_tab.AD_ADRES;

_result


\ad_validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER   - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obj_new() - obiekt z resultem, wynik działania exec('args_valid','#excel_imex').
::                        Obiekt ten jest przekazywany do formuły na IMPORT. Pole RESULT decyduje czy formuła
::                        na import się wykona. Pole MSG służy to odpisania komunikatu
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_can_continue:=1;
:: Walidacja wartości z Excel, czy są w nim pola których się spodziewam i czy mają dobre wartości
{? _obj.AD_ADRES=''
|| _can_continue:=0;
   _result.MSG:='Brak wartości w kolumnie: %1'@[_result.name('AD_ADRES')]
?};

{? _can_continue
|| {? _mode=1
   || _result.ACTION:='put'
   || _sysobj:=exec(,'__sysusr');
      {? _sysobj.getLdapUri()=''
      || _result.ACTION:='put'
      ?}
   ?}
?};

{? _can_continue=0
|| _result.RESULT:=0
?};
~~


\ad_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [20.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt z resultem walidatora i resultem importu, wynik działania exec('args_valid','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;
_can_continue:=1;

{? _result.RESULT=1
|| {? _result.ACTION='put'
   || {? OPERATOR.USER().KOD<>'admin'
      || _result.MSG:='Nie udała się zmiana adresu serwera Active Directory (import powinien przeprowadzić administrator systemu).'@
      || _sysobj:=exec(,'__sysusr');
         {? _sysobj.getLdapUri()<>_obj.AD_ADRES
         || {? _sysobj.setLdapUri(_obj.AD_ADRES) = 1
            || _result.MSG:='Zmieniono adres serwera Active Directory: %1.'@[_obj.AD_ADRES]
            || _result.MSG:='Nie udała się zmiana adresu serwera Active Directory (błąd systemowy nr %1).'@[$_sysobj.LastError]
            ?}
         ?}
      ?}
   ?}
?};
_result


:Sign Version 2.0 jowisz:1045 2024/01/02 08:04:40 645c3d86bc8d201ec32f5e3c2754433f4632b22b99db9aad14d7d817551998e0e8dae0c6d1a1a98ee1b2649c370a6c94b152cfdca36aa712904e67480619d070cd1cdd5aa3bfa5c306a461f3dd1d9afce5bea3d7daa2078584e14a1f2bddf35c4be1ea95a712aa7031389503bb242a1c325ccc0e27540f02e589039afeba64c4
