:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_sd_dok.fml
:: Utworzony: 11.03.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu konfiguracji
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='SD_DOK';
_def.FUNPAR:='ZWS_PAR_ASDD';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_sd_def_xlsx','xls__init');
_def.SHEET:='Szablony dokumentów=1,1';
_def.NAME:='Szablony dokumentów'@;
_def.DESC:='Szablony dokumentów';
_def.ADD_ROWS:=0;
_def.HIDDEN:='T';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="SD_DOK";

: prolog
_def.BEFORE:="
   SD_DOK.cntx_psh();
   SD_DOK.f_clear();
   SD_DOK.index('KOD');
   SD_DOK.clear();
   SD_DEF.cntx_psh();
   SD_DEF.index('KOD');
   SD_DEF.prefix();
   ~~
";

: epilog
_def.AFTER:="
   SD_DOK.cntx_pop();
   SD_DEF.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('SD_DEF',  MS.name(SD_DOK,'SD_DEF'),0,,  MS.comment(SD_DOK,'SD_DEF'));
   _env.define('SD_DOK',  MS.name(SD_DOK,'SD_DOK'),0,,  MS.comment(SD_DOK,'SD_DOK'),type_of(''));
   _env.define('SYSTEM',  MS.name(SD_DOK,'SYSTEM'),0,,  MS.comment(SD_DOK,'SYSTEM'));
   _env.define('KOD',     MS.name(SD_DOK,'KOD'),0,,     MS.comment(SD_DOK,'KOD'));
   _env.define('SYMBOL',  MS.name(SD_DOK,'SYMBOL'),0,,  MS.comment(SD_DOK,'SYMBOL'));
   _env.define('NAZWA',   MS.name(SD_DOK,'NAZWA'),0,,   MS.comment(SD_DOK,'NAZWA'));
   _env.define('OPIS',    MS.name(SD_DOK,'OPIS'),0,,    MS.comment(SD_DOK,'OPIS'));
   _env.define('AUTOR',   MS.name(SD_DOK,'AUTOR'),0,,   MS.comment(SD_DOK,'AUTOR'));
   _env.define('GRUPA',   MS.name(SD_DOK,'GRUPA'),0,,   MS.comment(SD_DOK,'GRUPA'));
   _env.define('DOSTEPNY',MS.name(SD_DOK,'DOSTEPNY'),0,,MS.comment(SD_DOK,'DOSTEPNY'));
   _env.define('DOCX',    MS.name(SD_DOK,'DOCX'),0,,    MS.comment(SD_DOK,'DOCX'),type_of(''));
   ~~
";

: zawartość wiersza
_def.EXPORT:="exec('export','xls_sd_dok',_a,_b)";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_sd_dok',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_sd_dok',_a,_b,_c)";
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Ustawia wartości w polach bufora danych i asynchronicznie zapisuje powiązane dane.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_buf:=_b;

{? SD_DOK.DOCX=null
:: brak szablonu
|| return(0)
?};

_buf.SD_DEF.VALUE:=SD_DOK.SD_DEF().KOD;
_buf.SD_DOK.VALUE:='';
{? SD_DOK.SD_DOK<>0
|| _ref:=SD_DOK.ref();
   {? SD_DOK.seek(SD_DOK.SD_DOK,,1)
   || _env.write_async('SD_DOK',SD_DOK.ref());
      _buf.SD_DOK.VALUE:=SD_DOK.KOD
   ?};
   SD_DOK.seek(_ref)
?};
_buf.SYSTEM.VALUE:=SD_DOK.SYSTEM;
_buf.KOD.VALUE:=SD_DOK.KOD;
_buf.SYMBOL.VALUE:=SD_DOK.SYMBOL;
_buf.NAZWA.VALUE:=SD_DOK.NAZWA;
_buf.OPIS.VALUE:=SD_DOK.memo_txt(,1,'OPIS');
_buf.AUTOR.VALUE:=SD_DOK.AUTOR;
_buf.GRUPA.VALUE:=SD_DOK.GRUPA;
_buf.DOSTEPNY.VALUE:=SD_DOK.DOSTEPNY;
_buf.DOCX.VALUE:='sd_%1.docx'[-SD_DOK.KOD];
_loc:={? ~_env.DIR_ON_SERVER || '@' || '' ?};
SD_DOK.bl_get('DOCX','%1%2%3%4'[_loc,_env.DIR,_env.SEP,_buf.DOCX.VALUE],0);

:: zestawy danych
SD_REK.cntx_psh();
SD_REK.index('NUMER');
SD_REK.prefix(SD_DOK.ref());
_loop:=SD_REK.first();
{!
|? _loop
|! _env.write_async('SD_REK',SD_REK.ref());
   _loop:=SD_REK.next()
!};
SD_REK.cntx_pop();

:: parametry szablonów
SD_PAR.cntx_psh();
SD_PAR.index('NUMER');
SD_PAR.prefix(SD_DOK.ref());
_loop:=SD_PAR.first();
{!
|? _loop
|! _env.write_async('SD_PAR',SD_PAR.ref());
   _loop:=SD_PAR.next()
!};
SD_PAR.cntx_pop();

:: połączenie parametrów
SD_MAP.cntx_psh();
SD_MAP.index('NUMER');
SD_MAP.prefix(SD_DOK.ref());
_loop:=SD_MAP.first();
{!
|? _loop
|! _env.write_async('SD_MAP',SD_MAP.ref());
   _loop:=SD_MAP.next()
!};
SD_MAP.cntx_pop();
1


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.SYSTEM=''   || 'SYSTEM'
   |? _buf.KOD=''      || 'KOD'
   |? _buf.SD_DEF=''   || 'SD_DEF'
   |? _buf.SYMBOL=''   || 'SYMBOL'
   |? _buf.NAZWA=''    || 'NAZWA'
   |? _buf.DOCX=''     || 'DOCX'
   |? _buf.GRUPA=''    || 'GRUPA'
   |? _buf.DOSTEPNY='' || 'DOSTEPNY'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

:: błędne wartości
{? ('TN'*(1+_buf.SYSTEM))=0
|| _val.msg_inset('SYSTEM','T','N');
   _val.RESULT:=0;
   return()
|? ('TN'*(1+_buf.GRUPA))=0
|| _val.msg_inset('GRUPA','T','N');
   _val.RESULT:=0;
   return()
|? ('TN'*(1+_buf.DOSTEPNY))=0
|| _val.msg_inset('DOSTEPNY','T','N');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(SD_DEF,'KOD');
{? +_buf.SD_DEF>_max
|| _val.msg_length('SD_DEF',_max);
   _buf.SD_DEF:=_max+_buf.SD_DEF
?};
_max:=MS.fld_len(SD_DOK,'KOD');
{? +_buf.SD_DEF>_max
|| _val.msg_length('SD_DEF',_max);
   _buf.SD_DEF:=_max+_buf.SD_DEF
?};
_max:=MS.fld_len(SD_DOK,'SYSTEM');
{? +_buf.SYSTEM>_max
|| _val.msg_length('SYSTEM',_max);
   _buf.SYSTEM:=_max+_buf.SYSTEM
?};
_max:=MS.fld_len(SD_DOK,'KOD');
{? +_buf.KOD>_max
|| _val.msg_length('KOD',_max);
   _buf.KOD:=_max+_buf.KOD
?};
_max:=MS.fld_len(SD_DOK,'SYMBOL');
{? +_buf.SYMBOL>_max
|| _val.msg_length('SYMBOL',_max);
   _buf.SYMBOL:=_max+_buf.SYMBOL
?};
_max:=MS.fld_len(SD_DOK,'NAZWA');
{? +_buf.NAZWA>_max
|| _val.msg_length('NAZWA',_max);
   _buf.NAZWA:=_max+_buf.NAZWA
?};
_max:=MS.fld_len(SD_DOK,'AUTOR');
{? +_buf.AUTOR>_max
|| _val.msg_length('AUTOR',_max);
   _buf.AUTOR:=_max+_buf.AUTOR
?};
_max:=MS.fld_len(SD_DOK,'GRUPA');
{? +_buf.GRUPA>_max
|| _val.msg_length('GRUPA',_max);
   _buf.GRUPA:=_max+_buf.GRUPA
?};
_max:=MS.fld_len(SD_DEF,'DOSTEPNY');
{? +_buf.DOSTEPNY>_max
|| _val.msg_length('DOSTEPNY',_max);
   _buf.DOSTEPNY:=_max+_buf.DOSTEPNY
?};

: weryfikacja spójności referencyjnej
_def:=null;
{? SD_DEF.find_key(_buf.SD_DEF,)
|| _def:=SD_DEF.ref()
|| _val.msg_norec('SD_DEF');
   _val.RESULT:=0;
   return()
?};
_dok:=null;
SD_DOK.index('KOD');
{? SD_DOK.find_key(_buf.SD_DOK,)
|| _dok:=#SD_DOK.ref()
|? _buf.SD_DOK<>''
|| _val.msg_norec('SD_DOK');
   _val.RESULT:=0;
   return()
?};

_ref:=null;
{? (SD_DOK.index('KOD'); SD_DOK.find_key(_buf.KOD,)) |
   (SD_DOK.index('SYMBOL'); SD_DOK.find_key(_def,_buf.SYMBOL,))
|| _ref:=SD_DOK.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1'[_a.KOD]",
   'SD_DEF',_def,
   'SD_DOK',_dok
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_env:=_val.env;

exec('write','xls__util',_buf,_mod,_val,SD_DOK,"
   _a.SYSTEM:=_b.SYSTEM;
   _a.KOD:=_b.KOD;
   _a.SD_DEF:=_c.SD_DEF;
   _a.SD_DOK:=_c.SD_DOK;
   _a.NAZWA:=_b.NAZWA;
   _a.SYMBOL:=_b.SYMBOL;
   _a.memo_set(_b.OPIS,'OPIS');
   _a.AUTOR:=_b.AUTOR;
   _a.GRUPA:=_b.GRUPA;
   _a.DOSTEPNY:=_b.DOSTEPNY;
   ~~
",'OPIS');

{? _val.RESULT<>0
:: dołącz do wiersza plik szablonu
|| _loc:={? ~_env.DIR_ON_SERVER || '@' || '' ?};
   _name:='%1%2%3%4'[_loc,_env.DIR,_env.SEP,_buf.DOCX];
   {? fexists(_name,0)
   || SD_DOK.bl_put('DOCX',_name,0)
   || _val.MSG:='Brak pliku "%1" lub nieprawidłowa ścieżka.'[_name]
   ?}
?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 c6081cf443b78281bdee4b32e68685883030a5f3bfbdcc0bfb0e2bd55754f49d5a986f6daea5d621809286298b4137a75fb842efb7df583f6419a217d356942746b64ee0d984348fc499e75d989c31c7619c8110f1d7e069818b0869b79cc3e23246826adfc093b43901980b5441421e33993b862a8848a652ea4b97a52ce2fd
