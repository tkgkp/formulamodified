:!UTF-8
:: (c) Asseco Business Solutions S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_ppk_krd.fml
:: Utworzony: 28.06.2019
:: Autor: areKc
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu słownika rodzajów komunikatów PPK.
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='PPK_KRD';
_def.FUNPAR:='ZWS_PAR_PKRD';
_def.DOMAIN:=exec('name','#b_domain','PPK');
_def.FILE:=exec('def_per_ppk_xlsx','xls__init');
_def.SHEET:='Rodzaje komunikatów PPK=1,1';
_def.NAME:='Rodzaje komunikatów PPK'@;
_def.DESC:='Rodzaje komunikatów PPK';
_def.ADD_ROWS:=0;

: źródło danych
_def.TABLE:="PPK_KRD";

: prolog
_def.BEFORE:=
   "  PPK_KRD.cntx_psh();
      PPK_KRD.index('SYMBOL');
      PPK_KRD.prefix();
      ~~
   ";

: epilog
_def.AFTER:=
   "  PPK_KRD.cntx_pop();
      ~~
   ";

: definicja kolumn
_def.FIELDS:=
   "  _env:=_a;
      _env.define('RODZAJ', MS.name(PPK_KRD,'RODZAJ'), 0,,MS.comment(PPK_KRD,'RODZAJ'));
      _env.define('SYMBOL', MS.name(PPK_KRD,'SYMBOL'), 0,,MS.comment(PPK_KRD,'SYMBOL'));
      _env.define('OPIS',   MS.name(PPK_KRD,'OPIS'),   1,,MS.comment(PPK_KRD,'OPIS'));
      _env.define('PORTAL', MS.name(PPK_KRD,'PORTAL'), 1,,MS.comment(PPK_KRD,'PORTAL'));
      _env.define('EDYCJA', MS.name(PPK_KRD,'EDYCJA') ,1,,MS.comment(PPK_KRD,'EDYCJA'));
      _env.define('FORMULA',MS.name(PPK_KRD,'FORMULA'),1,,MS.comment(PPK_KRD,'FORMULA'));
      _env.define('TRESC',  MS.name(PPK_KRD,'TRESC')  ,1,,MS.comment(PPK_KRD,'TRESC'));
      _env.define('SYSTEM', MS.name(PPK_KRD,'SYSTEM'), 0,,MS.comment(PPK_KRD,'SYSTEM'));
      ~~
   ";

: zawartość wiersza
_def.EXPORT:=
   "   _env:=_a;
      _buf:=_b;
      _buf.RODZAJ.VALUE:=PPK_KRD.RODZAJ;
      _buf.SYMBOL.VALUE:=PPK_KRD.SYMBOL;
      _buf.OPIS.VALUE:=PPK_KRD.OPIS;
      _buf.PORTAL.VALUE:=PPK_KRD.PORTAL;
      _buf.EDYCJA.VALUE:=PPK_KRD.EDYCJA;
      _buf.FORMULA.VALUE:=PPK_KRD.FORMULA;
      _buf.TRESC.VALUE:=PPK_KRD.memo_txt(0,1,'TRESC');
      _buf.SYSTEM.VALUE:=PPK_KRD.SYSTEM;
      1
   ";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_ppk_krd',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_ppk_krd',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: błędy krytyczne
_fld:=
   {? _buf.SYMBOL='' || 'SYMBOL'
   |? _buf.OPIS='' || 'OPIS'
   || ''
   ?};
{? _fld<>''
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? ('OU'*_buf.RODZAJ)=0
|| _val.msg_inset('RODZAJ','O','U');
   _val.RESULT:=0;
   return()
|? ('TN'*_buf.PORTAL)=0
|| _val.msg_inset('PORTAL','T','N');
   _val.RESULT:=0;
   return()
|? ('TN'*_buf.EDYCJA)=0
|| _val.msg_inset('EDYCJA','T','N');
   _val.RESULT:=0;
   return()
|? ('TN'*_buf.FORMULA)=0
|| _val.msg_inset('FORMULA','T','N');
   _val.RESULT:=0;
   return()
|? ('TN'*_buf.SYSTEM)=0
|| _val.msg_inset('SYSTEM','T','N');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(PPK_KRD,'SYMBOL');
{? +_buf.SYMBOL>_max
|| _val.msg_length('SYMBOL',_max);
   _buf.SYMBOL:=_max+_buf.SYMBOL
?};
_max:=MS.fld_len(PPK_KRD,'OPIS');
{? +_buf.OPIS>_max
|| _val.msg_length('OPIS',_max);
   _buf.OPIS:=_max+_buf.OPIS
?};

_ref:=null();
{? PPK_KRD.find_tab(,'RODZAJ',,'=',_buf.RODZAJ,'SYMBOL',,'=',_buf.SYMBOL)
|| _ref:=PPK_KRD.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,"'%1: %2 - %3'[_a.RODZAJ,_a.SYMBOL,_a.OPIS]");
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [19.22]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,PPK_KRD,
   "  _a.RODZAJ:=_b.RODZAJ;
      _a.SYMBOL:=_b.SYMBOL;
      _a.OPIS:=_b.OPIS;
      _a.PORTAL:=_b.PORTAL;
      _a.EDYCJA:=_b.EDYCJA;
      _a.FORMULA:=_b.FORMULA;
      _a.SYSTEM:=_b.SYSTEM;
      _a.memo_set(_b.TRESC,'TRESC');
      ~~
   ",'TRESC'
);
~~

:Sign Version 2.0 jowisz:1048 2020/10/16 15:26:06 c8d4fd3ed27d94cc1502a0cdcb7ac789f3a05db2c3e316a668c8781a687285afbb76062827a3ccd9538a616ec6f25ad93c708b22bde5ec32172d22ea1aec167a8e1347bb663f9700d6b349d734d8163fad8dd57b6f3bd4a3b1ae1524d25fc0165677984e07ef4370be72a4ccdcea3e3c6df81526e53109982af68608e789c992
