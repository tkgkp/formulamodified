:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_tmat.fml
:: Utworzony: 12.08.2020
:: Autor: AKUL
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu surowców kart technologicznych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TMAT';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='TKTL';
_def.HIDDEN:='T';
_def.SKIP:='T';
_def.ADD_ROWS:=0;

_def.FILE:='produkcja_technologie.xlsx';
_def.SHEET:='Surowce'@+'=1,1';
_def.NAME:='Surowce technologiczne'@;
_def.DESC:='Surowce potrzebne w procesie technologicznym'@;

_def.PREFIX:="TMAT.index('NNL'); TMAT.prefix()";
_def.TABLE:="TMAT";
_def.FIELDS:="exec('fields','xls_tmat',_a)";

_def.BEFORE:="TMAT.cntx_psh();DK_C.cntx_psh()";
_def.AFTER:="{? _a.is_import() || exec('tktl_import_clear','tech_common',_a.excel) ?};TMAT.cntx_pop();DK_C.cntx_pop()";
::_def.SELECT:="exec('select','xls_tmat',_a)";

_def.EXPORT:="exec('export','xls_tmat',_a,_b)";
_def.VALIDATE:="exec('validate','xls_tmat',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_tmat',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_edit:=0;
_def.define('TKTL_NRK','Nr karty'@,_edit);
_def.define('TKTL_WER','Wersja karty'@,_edit);
_def.define('NROP','Nr operacji'@,_edit);
_def.define('LP','Lp'@,_edit,,,,0);
_def.define('GRKTM','Grupa/KTM'@,_edit,,'Znacznik, czy grupa technologiczna (G), czy pojedynczy surowiec (K)');
_def.define('TGRP','Grupa technologiczna'@,_edit);
_def.define('TGDFLT','Domyślny KTM'@,_edit,,'Element grupy technologicznej');
_def.define('PT','Produkt'@,_edit);
_def.define('WARN','Norma materiałowa netto'@,_edit,,,,ST.DOKL);
_def.define('WARB','Norma materiałowa brutto'@,_edit,,,,ST.DOKL);
_def.define('KTL_NRK','Nr karty dla półfabrykatu'@,_edit);
_def.define('KTL_WER','Wersja karty dla półfabrykatu'@,_edit);
_def.define('PODST','Podstawowy'@,_edit,,'[T]/[N]');
_def.define('EXIST','Występowanie'@,_edit,,'Formuła określająca wystąpienie surowca w procesie');
_def.define('FORMN','Formuła normy netto'@,_edit);
_def.define('FORMB','Formuła normy brutto'@,_edit);
_def.define('LIMIT','Limitowany'@,_edit,,'Znacznik, czy surowiec limitowany (T), czy nielimitowany (N)');
_def.define('PFAZ','Faza produkcji'@,_edit);
_def.define('DJM','Dodatkowa jednostka miary'@,_edit);
_def.define('DWARN','Dodatkowa norma netto'@,_edit,,,,ST.DOKL);
_def.define('DWARB','Dodatkowa norma brutto'@,_edit,,,,ST.DOKL);
_def.define('DFORMN','Formuła na dodatkową normę netto'@,_edit);
_def.define('DFORMB','Formuła na  dodatkową normę brutto'@,_edit);
_def.define('SO','Surowiec/Odpad'@,_edit,,'Znacznik, czy surowiec (S), czy odpad/koprodukt (O)');
_def.define('POW','Powierzony'@,_edit,,'Znacznik, czy surowiec powierzony (T) czy własny (N)');
_def.define('COEF','Przelicznik jednostek miary'@,_edit,,,type_of(''));
_def.define('UNB','Uzysk'@,_edit,,'Uzysk (netto / brutto)',type_of(''));
_def.define('OPIS','Opis'@,_edit);
_def.define('PARTIA','Partiowany'@,_edit,,'Czy będzie obowiązywała identyfikacja partii w wyrobie - [T]/[N]');
_def.define('WYD','Wydział'@,_edit);
_def.define('ACT','Aktualny'@,_edit,,'Znacznik aktualności elementu - [T]/[N]');
_def.define('CRE_TIME','Czas powołania elementu'@,_edit,,,type_of(''));
_def.define('OD','Obowiązuje od'@,_edit);
_def.define('USER','Zmieniał'@,_edit,,'Operator, który zmieniał element');
_def.define('CAUSE','Powód zmiany'@,_edit);
_def.define('MAG','Z magazynu'@,_edit,,'Czy pobierany z magazynu: Niepobierany z magazynu, generowane podzlecenie - [N],
   Pobierany z magazynu, nie jest generowane podzlecenie - [T], Pobierany z magazynu, generowane podzlecenie - [P]');
_def.define('DFLT_KTL','Domyślna technologia'@,_edit,,'Domyślna technologia na półfabrykat - [T]/[N]');
_def.define('DK_C','Symbol cechy'@,_edit);
_def.define('ATR_MASK','Maska atrybutów'@,_edit);
_def.define('MODE_DST','Tryb śledzenia dostaw'@,_edit,,'Śledzenie dostaw: możliwy automat (A), ręczne (R)');
_def.define('MOD_TIME','Czas modyfikacji elementu'@,_edit,,,type_of(''));
_def.define('PRZ','Przelicznik'@,_edit,,'Przelicznik jednostek miary',type_of(''));
_def.define('ROZ','Rozliczany z operacją'@,_edit,,'Czy surowiec rozliczany podczas rejestracji operacji - [T]/[N]');
_def.define('XJMP','Procentowa zawartość'@,_edit,,'Procentowa zawartość surowca',type_of(''));
_def.define('DXJMP','Dod. procentowa zawartość'@,_edit,,'Dodatkowa procentowa zawartość surowca',type_of(''));
_def.define('MG','Magazyn'@,_edit);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TMAT.prefix();
{? _validate.ACTION='add'
|| TMAT.blank();
   TMAT.NRK:=_validate.OBJ.NRK;
   TMAT.NROP:=_validate.OBJ.NROP;
   TMAT.LP:=_obj.LP
?};
TMAT.GRKTM:=_obj.GRKTM;
TMAT.TGRP:=_validate.OBJ.TGRP;
TMAT.TGDFLT:=_validate.OBJ.TGDFLT;
TMAT.PT:=_validate.OBJ.PT;
TMAT.WARN:=_obj.WARN;
TMAT.WARB:=_obj.WARB;
TMAT.KTL:=_validate.OBJ.KTL;
TMAT.PODST:=_obj.PODST;
TMAT.EXIST:=_obj.EXIST;
TMAT.FORMN:=_obj.FORMN;
TMAT.FORMB:=_obj.FORMB;
TMAT.LIMIT:=_obj.LIMIT;
TMAT.PFAZ:=_validate.OBJ.PFAZ;
TMAT.DJM:=_validate.OBJ.DJM;
TMAT.DWARN:=_obj.DWARN;
TMAT.DWARB:=_obj.DWARB;
TMAT.DFORMN:=_obj.DFORMN;
TMAT.DFORMB:=_obj.DFORMB;
TMAT.SO:=_obj.SO;
TMAT.POW:=_obj.POW;
TMAT.COEF:=exec('str2real','#convert',_obj.COEF);
TMAT.UNB:=exec('str2real','#convert',_obj.UNB);
TMAT.OPIS:=_obj.OPIS;
TMAT.PARTIA:=_obj.PARTIA;
TMAT.WYD:=_validate.OBJ.WYD;
TMAT.ACT:=_obj.ACT;
TMAT.CRE_TIME:=#_obj.CRE_TIME;
TMAT.OD:=_obj.OD;
TMAT.USER:=_validate.OBJ.USER;
TMAT.CAUSE:=_validate.OBJ.CAUSE;
TMAT.MAG:=_obj.MAG;
TMAT.DFLT_KTL:=_obj.DFLT_KTL;
TMAT.DK_C:=_validate.OBJ.DK_C;
TMAT.RDKC:={? TMAT.DK_C<>null() || $TMAT.DK_C || '' ?};
TMAT.ATR_MASK:=_obj.ATR_MASK;
TMAT.MODE_DST:=_obj.MODE_DST;
TMAT.RKTL:={? TMAT.KTL<>null() || $TMAT.KTL || '' ?};
TMAT.MOD_TIME:=#_obj.MOD_TIME;
TMAT.PRZ:=exec('str2real','#convert',_obj.PRZ);
TMAT.ROZ:=_obj.ROZ;
TMAT.XJMP:=exec('str2real','#convert',_obj.XJMP);
TMAT.DXJMP:=exec('str2real','#convert',_obj.DXJMP);
TMAT.TKTL_KTM:=exec('FindAndGet','#table',TKTL,TMAT.NRK,,"KTM",null());
TMAT.MG:=_validate.OBJ.MG;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;

_table.TKTL_NRK.VALUE:=TMAT.NRK().NRK;
_table.TKTL_WER.VALUE:=TMAT.NRK().WER;
:: Wyszukuje nowy nr operacji z tablicy mapującej
_table.NROP.VALUE:={? __TOPER_MAP.find_key(TMAT.NROP().UNROP)
                   || $__TOPER_MAP.NEW
                   || ''
                   ?};
_table.LP.VALUE:=TMAT.LP;
_table.GRKTM.VALUE:=TMAT.GRKTM;
_table.TGRP.VALUE:=TMAT.TGRP().GR;_excel.write_async('TTG',TMAT.TGRP);
_table.TGDFLT.VALUE:=TMAT.TGDFLT().PT().KTM;_excel.write_async('TTGP',TMAT.TGDFLT);
_table.PT.VALUE:=TMAT.PT().KTM;
_table.WARN.VALUE:=TMAT.WARN;
_table.WARB.VALUE:=TMAT.WARB;
_table.KTL_NRK.VALUE:=TMAT.KTL().NRK;
_table.KTL_WER.VALUE:=TMAT.KTL().WER;
_table.PODST.VALUE:=TMAT.PODST;
_table.EXIST.VALUE:=TMAT.EXIST;
_table.FORMN.VALUE:=TMAT.FORMN;
_table.FORMB.VALUE:=TMAT.FORMB;
_table.LIMIT.VALUE:=TMAT.LIMIT;
_table.PFAZ.VALUE:=TMAT.PFAZ().KOD;
_table.DJM.VALUE:=TMAT.DJM().KOD;
_table.DWARN.VALUE:=TMAT.DWARN;
_table.DWARB.VALUE:=TMAT.DWARB;
_table.DFORMN.VALUE:=TMAT.DFORMN;
_table.DFORMB.VALUE:=TMAT.DFORMB;
_table.SO.VALUE:=TMAT.SO;
_table.POW.VALUE:=TMAT.POW;
_table.COEF.VALUE:=exec('to_string','#convert',TMAT.COEF);
_table.UNB.VALUE:=exec('to_string','#convert',TMAT.UNB);
_table.OPIS.VALUE:=TMAT.OPIS;
_table.PARTIA.VALUE:=TMAT.PARTIA;
_table.WYD.VALUE:=TMAT.WYD().KOD;
_table.ACT.VALUE:=TMAT.ACT;
_table.CRE_TIME.VALUE:=$TMAT.CRE_TIME;
_table.OD.VALUE:=TMAT.OD;
_table.USER.VALUE:=TMAT.USER().KOD;
_table.CAUSE.VALUE:=TMAT.CAUSE().NAZ;
_table.MAG.VALUE:=TMAT.MAG;
_table.DFLT_KTL.VALUE:=TMAT.DFLT_KTL;
{? TMAT.DK_C<>null()
|| DK_C.use(ref_name(TMAT.DK_C));
   _table.DK_C.VALUE:=TMAT.DK_C().SYM;
   _excel.write_async('TDK_C',TMAT.DK_C)
|| _table.DK_C.VALUE:=''
?};
_table.ATR_MASK.VALUE:=TMAT.ATR_MASK;
_table.MODE_DST.VALUE:=TMAT.MODE_DST;
_table.MOD_TIME.VALUE:=$TMAT.MOD_TIME;
_table.PRZ.VALUE:=exec('to_string','#convert',TMAT.PRZ);
_table.ROZ.VALUE:=TMAT.ROZ;
_table.XJMP.VALUE:=exec('to_string','#convert',TMAT.XJMP);
_table.DXJMP.VALUE:=exec('to_string','#convert',TMAT.DXJMP);
_table.MG.VALUE:=TMAT.MG().SYM;

:: Zamienniki surowca
TMAT.cntx_psh();
TCHMAT.cntx_psh();
TCHMAT.use('txmac___');
TCHMAT.cntx_psh();
TCHMAT.index('NSL');
TCHMAT.prefix(TMAT.NRK,TMAT.ref);
{? TCHMAT.first()
||
   {!
   |?
      {? TCHMAT.ACT='T' || _excel.write_async('TCHMAT',TCHMAT.ref()) ?};
      TCHMAT.next()
   !}
?};
TCHMAT.cntx_pop();
TCHMAT.cntx_pop();
TMAT.cntx_pop();
:: Translacje parametrów dla półproduktu
TMAT.cntx_psh();
TPARTRA.cntx_psh();
TPARTRA.use('txptr___');
TPARTRA.cntx_psh();
TPARTRA.index('SUR');
TPARTRA.prefix(TMAT.ref());
{? TPARTRA.first()
||
   {!
   |?
      _excel.write_async('TPARTRA',TPARTRA.ref());
      TPARTRA.next()
   !}
?};
TPARTRA.cntx_pop();
TPARTRA.cntx_pop();
TMAT.cntx_pop();

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('NRK','NROP','TGRP','TGDFLT','PT','KTL','PFAZ','DJM','WYD','USER','CAUSE','DK_C','MG');
_imp_err:=0;
_check:=1;
_msg:='';
:: Sprawdzam czy do karty zgłoszony został błąd
{? __TKTL_ERR.find_key(_obj.TKTL_NRK,_obj.TKTL_WER,)
|| _imp_err:=1
|? __TKTL_ERR.find_key(_obj.KTL_NRK,_obj.KTL_WER,)
|| _imp_err:=1;
   _msg:=''@
?};
:: Jeżeli wcześniej został zgłoszony błąd to wychodzę wcześniej bez dodatkowej walidacji
{? _imp_err>0
|| _result.RESULT:=0
||
:: Wyszukanie refów powiązanych rekordów
   _result.OBJ.NRK:={? _obj.TKTL_NRK='' | _obj.TKTL_WER=''
                    || null()
                    || exec('FindInSet','#table','TKTL','NRK',_obj.TKTL_WER,'T',,1,_obj.TKTL_NRK,null())
                    ?};
   _result.OBJ.NROP:={? _obj.NROP='' | _obj.NROP='0'
                     || null()
                     || exec('FindInSet','#table','TOPER','UNROP',#_obj.NROP,,,,,null())
                     ?};
   _result.OBJ.TGRP:={? _obj.TGRP=''
                     || null()
                     || exec('FindInSet','#table','TTG','GR',_obj.TGRP,,,1,,null())
                     ?};
   _result.OBJ.TGDFLT:={? _obj.TGDFLT='' | _result.OBJ.TGRP=null()
                       || null()
                       || _pt:=exec('FindInSet','#table','M','MATKTM',_obj.TGDFLT,,,1,,null());
                          exec('FindInSet','#table','TTGP','GRS',_pt,_result.OBJ.TGRP,,,,null())
                       ?};
   _result.OBJ.PT:={? _obj.PT=''
                   || null()
                   || exec('FindInSet','#table','M','MATKTM',_obj.PT,,,1,,null())
                   ?};
   _result.OBJ.KTL:={? _obj.KTL_NRK='' | _obj.KTL_WER=''
                    || null()
                    || exec('FindInSet','#table','TKTL','NRK',_obj.KTL_WER,'T',,1,_obj.KTL_NRK,null())
                    ?};
   _result.OBJ.PFAZ:={? _obj.PFAZ=''
                     || null()
                     || exec('FindInSet','#table','PFAZ','KOD',_obj.PFAZ,,,1,,null())
                     ?};
   _result.OBJ.DJM:={? _obj.DJM=''
                    || null()
                    || exec('FindInSet','#table','JM','KOD',_obj.DJM,,,1,,null())
                    ?};
   _result.OBJ.WYD:={? _obj.WYD='' | XINFO.SLWYDZIA=null()
                    || null()
                    || exec('FindInSet','#table','SLO','SL',_obj.WYD,XINFO.SLWYDZIA,,1,,null())
                    ?};
   _result.OBJ.USER:={? _obj.USER=''
                     || null()
                     || exec('FindInSet','#table','USERS','USR_KKOD',_obj.USER,,,1,,null())
                     ?};
   _result.OBJ.CAUSE:={? _obj.CAUSE=''
                      || null()
                      || exec('FindInSet','#table','TTXCAUSE','NAZ',_obj.CAUSE,,,1,,null())
                      ?};
   _result.OBJ.DK_C:={? _obj.DK_C=''
                     || null()
                     ||
::                      Sprawdzam czy symbol cechy znajduje się w tabeli mapującej
                        {? __DK_C_MAP.find_key(_obj.DK_C,)
                        || exec('FindAndGet','#table','DK_C',__DK_C_MAP.REF,,,null())
                        || null()
                        ?}
                     ?};
   _result.OBJ.MG:={? _obj.MG=''
                   || null()
                   || exec('FindInSet','#table','MG','MAGAZYNY',_obj.MG,,,1,,null())
                   ?};
:: Ostrzeżenia
   {? _obj.USER<>'' & _result.OBJ.USER=null()
   || _result.msg_norec('USER')
   ?};

:: Błędy
   {? _result.OBJ.NRK=null()
   || _result.msg_norec('TKTL_NRK');
      _result.RESULT:=0
   ?};
   {? _obj.NROP<>'' & _obj.NROP<>'0' & _result.OBJ.NROP=null()
   || _result.msg_norec('NROP');
      _result.RESULT:=0
   ?};
   {? _obj.TGRP<>'' & _result.OBJ.TGRP=null()
   || _result.msg_norec('TGRP');
      _result.RESULT:=0
   ?};
   {? _obj.TGDFLT<>'' & _result.OBJ.TGDFLT=null()
   || _result.msg_norec('TGDFLT');
      _result.RESULT:=0
   ?};
   {? _obj.PT<>'' & _result.OBJ.PT=null()
   || _result.msg_norec('PT');
      _result.RESULT:=0
   ?};
   {? _obj.KTL_NRK<>'' & _obj.KTL_WER<>'' & _result.OBJ.KTL=null()
   || _result.msg_norec('KTL');
      _result.RESULT:=0
   ?};
   {? _obj.PFAZ<>'' & _result.OBJ.PFAZ=null()
   || _result.msg_norec('PFAZ');
      _result.RESULT:=0
   ?};
   {? _obj.DJM<>'' & _result.OBJ.DJM=null()
   || _result.msg_norec('DJM');
      _result.RESULT:=0
   ?};
   {? _obj.WYD<>'' & _result.OBJ.WYD=null()
   || _result.msg_norec('WYD');
      _result.RESULT:=0
   ?};
   {? _obj.CAUSE<>'' & _result.OBJ.CAUSE=null()
   || _result.msg_norec('CAUSE');
      _result.RESULT:=0
   ?};
   {? _obj.DK_C<>'' & _result.OBJ.DK_C=null()
   || _result.msg_norec('DK_C');
      _result.RESULT:=0
   ?};
   {? _obj.MG<>'' & _result.OBJ.MG=null()
   || _result.msg_norec('MG');
      _result.RESULT:=0
   ?};

   {? +_obj.GRKTM=0 | 'GK'*_obj.GRKTM=0
   || _result.msg_inset('GK','G','K');
      _result.RESULT:=0
   ?};
   {? +_obj.PODST=0 | 'TN'*_obj.PODST=0
   || _result.msg_inset('PODST','T','N');
      _result.RESULT:=0
   ?};
   {? +_obj.LIMIT=0 | 'TN'*_obj.LIMIT=0
   || _result.msg_inset('LIMIT','T','N');
      _result.RESULT:=0
   ?};
   {? +_obj.SO=0 | 'SO'*_obj.SO=0
   || _result.msg_inset('SO','S','O');
      _result.RESULT:=0
   ?};
   {? +_obj.POW=0 | 'TN'*_obj.POW=0
   || _result.msg_inset('POW','T','N');
      _result.RESULT:=0
   ?};
   {? +_obj.PARTIA=0 | 'TN'*_obj.PARTIA=0
   || _result.msg_inset('PARTIA','T','N');
      _result.RESULT:=0
   ?};
   {? +_obj.ACT=0 | 'TN'*_obj.ACT=0
   || _result.msg_inset('ACT','N','T');
      _result.RESULT:=0
   ?};
   {? +_obj.MAG=0 | 'TNP'*_obj.MAG=0
   || _result.msg_inset('MAG','T','N','P');
      _result.RESULT:=0
   ?};
   {? +_obj.DFLT_KTL=0 | 'TN'*_obj.DFLT_KTL=0
   || _result.msg_inset('DFLT_KTL','T','N');
      _result.RESULT:=0
   ?};
   {? +_obj.MODE_DST=0 | 'AR'*_obj.MODE_DST=0
   || _result.msg_inset('MODE_DST','A','R');
      _result.RESULT:=0
   ?};
   {? +_obj.ROZ=0 | 'TN'*_obj.ROZ=0
   || _result.msg_inset('ROZ','T','N');
      _result.RESULT:=0
   ?}
?};

:: OK
{? _result.RESULT>0
|| TMAT.index('NNL');
   TMAT.prefix(_result.OBJ.NRK,_result.OBJ.NROP,_obj.LP);
   {? TMAT.first()
   || {? _mode=0
      || _result.RESULT:=0;
         _check:=0;
         _result.MSG:='Technologia %1 (wer.%2) posiada już surowiec technologiczny o numerze %3 %4.'@
            [_obj.TKTL_NRK,_obj.TKTL_WER,$_obj.LP,
            {? _result.OBJ.NROP<>null()
            || 'przypisany do operacji '@+exec('FindAndGet','#table',TOPER,_result.OBJ.NROP,,"$TOPER.NROP+'. '+
                TOPER.OPER().NA",'')
            || ''
            ?}]
      || _result.ACTION:='put';
         exec('record','xls_tmat',_obj,_mode,_result);
         exec('start_tpar','tech_param',exec('FindAndGet','#table','TKTL',TMAT.NRK,,"TKTL.KTM",null()));
         {? exec('tchm_edt','tech_mater',TMAT,0,1)<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_tmat',_obj,_mode,_result);
      exec('start_tpar','tech_param',exec('FindAndGet','#table','TKTL',TMAT.NRK,,"TKTL.KTM",null()));
      {? exec('tchm_edt','tech_mater',TMAT,1,1)<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
{? _result.RESULT<=0 & _check>0 & _imp_err=0
||
:: Jak błąd to ustawiam znacznik błędu na karcie technologicznej
   {? _result.OBJ.NRK<>null()
   || TKTL.cntx_psh();
      TKTL.prefix();
      {? TKTL.seek(_result.OBJ.NRK)
      || TKTL.IMP_ERR:='T';
         TKTL.put();
         _result.MSG+='\nKarta %1 (wer. %2) oraz wszystkie jej elementy, które zostały do tej pory zaimportowane '
                      'zostaną usunięte.'@[TKTL.NRK,TKTL.WER];
::       Dodaję kartę do listy ignorowanych kart przy imporcie
         __TKTL_ERR.NRK:=_obj.TKTL_NRK;
         __TKTL_ERR.WER:=_obj.TKTL_WER;
         __TKTL_ERR.add()
      ?};
      TKTL.cntx_pop()
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| EXCEL_ENV.ID_GRP:=$TMAT.NRK;
   {? _validate.ACTION='add'
   || _result:=TMAT.add(1)
   |? _validate.ACTION='put'
   || _result:=TMAT.put(1)
   ?}
|| EXCEL_ENV.ID_GRP:=''
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie surowca %3 do karty technologicznej %1 (%2) nie powiodło się.'@
                     [_obj.TKTL_NRK,_obj.TKTL_WER,_obj.PT]
   || _validate.MSG:='Poprawa surowce %3 do karty technologicznej %1 (%2) nie powiodła się.'@
                     [_obj.TKTL_NRK,_obj.TKTL_WER,_obj.PT]
   ?}
?};
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 90823256193349f8d7b2874e17b24aaa99b3dcc9283373e4144b9193c827efba9eea0936ccf468342625a1a33a1435369b8d1c34efb9ae17e0f3c189aa89b89274e05aa2a9a1d3fd4ab6d830890d093beafa1e9487448c5ec7914c60d48a75177dea24ad9adb9e21c82b2e9c6a16fd455d6ee3c224081d5fb98a846ffb62d388
