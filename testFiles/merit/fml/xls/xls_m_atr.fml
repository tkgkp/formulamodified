:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_m_atr.fml
:: Utworzony: 24.07.2018
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu definicji atrybutów indeksów / atrybutów cech dostaw
::======================================================================================================================


\init_m
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='M_ATR_M';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_DEF_ATR_MAT';
_def.MULTIFIR:='T';

_def.FILE:='parametryzacja.xlsx';
_def.SHEET:='Atrybuty indeksów materiałowych=1,1';
_def.NAME:='Wzorce atrybutów indeksów'@;
_def.DESC:='Wzorce atrybutów indeksów';

_def.PREFIX:="exec('prefix','xls_m_atr','B')";
_def.TABLE:="exec('table','xls_m_atr','B')";
_def.FIELDS:="exec('fields','xls_m_atr',_a,'B')";

_def.BEFORE:="M_ATR.cntx_psh()";
_def.AFTER:="M_ATR.cntx_pop()";
_def.SELECT:="exec('select','xls_m_atr',_a,'B')";

_def.EXPORT:="exec('export','xls_m_atr',_a,_b,'B')";
_def.IMPORT:="exec('import','xls_m_atr',_a,_b,_c,'B')";
_def.VALIDATE:="exec('validate','xls_m_atr',_a,_b,_c,'B')";
~~


\init_sc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='M_ATR_SC';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_DEF_ATR_DST';
_def.MULTIFIR:='T';

_def.FILE:='parametryzacja.xlsx';
_def.SHEET:='Atrybuty dostaw w magazynie=1,1';
_def.NAME:='Wzorce atrybutów dostaw'@;
_def.DESC:='Wzorce atrybutów dostaw';

_def.PREFIX:="exec('prefix','xls_m_atr','C')";
_def.TABLE:="exec('table','xls_m_atr','C')";
_def.FIELDS:="exec('fields','xls_m_atr',_a,'C')";

_def.BEFORE:="M_ATR.cntx_psh()";
_def.AFTER:="M_ATR.cntx_pop()";
_def.SELECT:="exec('select','xls_m_atr',_a,'C')";

_def.EXPORT:="exec('export','xls_m_atr',_a,_b,'C')";
_def.IMPORT:="exec('import','xls_m_atr',_a,_b,_c,'C')";
_def.VALIDATE:="exec('validate','xls_m_atr',_a,_b,_c,'C')";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa zakres eksportowanych danych
::   WE: _a - typ atrybutów: 'B'-indeksu, 'C'-dostaw
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
M_ATR.index('TYP');
M_ATR.prefix(_a);
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
M_ATR


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::       _b - typ atrybutów: 'B'-indeksu, 'C'-dostaw
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

{? _b='B'
|| _def.define('SYM','Symbol',0,,'');
   _def.define('NAZ','Nazwa',1,,'');
   {! _i:=1..10
   |! _snum:=form(_i,-2,0,'99');
      _def.define('SL_'+_snum,'Atrybut '+_snum,1,,'Typ atrybutu '+_snum)
   !};
   _def.define('MGR_KOD','Domyślna grupa',1,,
   'Domyślna grupa - wyszukiwana wg kodu,
    jeżeli nie zostanie znaleziona, to zostanie zapis w histori i zostanie uzupełniona po jej dodaniu
   ');
   _def.define('M_ATR','Atrybut dostawy',1,,
   'Symbol atrybutu dostawy - wyszukiwana wg symbolu,
    jeżeli nie zostanie znaleziony to zostanie pominięty
   ');
   _def.define('ARCH','Podlega archiwizacji',1,,'Czy archiwizować cechę: (T)-tak, (N)-nie');
   _def.define('AUTONR','Autonumeracja',1,,
   'Automatyczne nadawanie numerów:
    (0)-nie,
    (1)-tak z uzupełnianiem luk,
    (2)-tak bez uzupełniania luk
   ');
   _def.define('AUTODL','Długość numeru',1,,'Długość numeru przy autonumeracji (wartość większa od zera)');
   _def.define('WZ','Wzorzec kodu',1,,'Wzorzec tworzonego kodu KTM indeksu');
   _def.define('WZN','Wzorzec nazwy',1,,'Wzorzec tworzonej nazwy indeksu');
   _def.define('ADD','Edycja indeksu',1,,
   'Tworzenie indeksu:
    (1) - Automatycznie (bez edycji ręcznej)
    (2) - Automatycznie (możliwość poprawy ręcznej)
    (3) - Brak generacji (możliwość edycji atrybutów)
   ');
   _def.define('EDIT','Edycja atrybutu',1,,'Bezpośrednia edycja: (T)-tak, (N)-nie')
|| _def.define('SYM','Symbol',0,,'');
   _def.define('NAZ','Nazwa',1,,'');
   {! _i:=1..10
   |! _snum:=form(_i,-2,0,'99');
      _def.define('SL_'+_snum,'Atrybut '+_snum,1,,'Typ atrybutu '+_snum)
   !};
   _def.define('ARCH','Podlega archiwizacji',1,,'Czy archiwizować cechę: (T)-tak, (N)-nie');
   _def.define('WZ','Wzorzec kodu',1,,'Wzorzec kodu cechy dostawy');
   _def.define('EDIT','Edycja wartości atrybutów',1,,'Bezpośrednia edycja: (T)-tak, (N)-nie');
   _def.define('ADD','Tworzenie nowego zestawu',1,,
   '(1) - Automatycznie tworzenie nowego zestawu
    (0) - Nie - wymaga potwierdzenia
   ');
   {! _i:=1..10
   |! _snum:=form(_i,-2,0,'99');
      _def.define('MOD'+_snum,'Czy atrybut do zmiany '+_snum,1,,'Czy atrybut można zmieniać: (0)-nie (1)-tak',1)
   !};
   {! _i:=1..10
   |! _snum:=form(_i,-2,0,'99');
      _def.define('GS1'+_snum,'Atrybut dla kodu GS1 '+_snum,1,
       ,'Atrybut dla kodu GS1: numer kodu GS1',2)
   !};
   {! _i:=1..10
   |! _snum:=form(_i,-2,0,'99');
      _def.define('MOB'+_snum,'Czy atrybut na dostępny na urządzeniu mobilnym '+_snum,1,
       ,'Czy atrybut jest dostępny na urządzeniu mobilnym: (0)-nie (1)-tak',1)
   !}
?};
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::       _d - typ atrybutów: 'B'-indeksu, 'C'-dostaw
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

M_ATR.index('TYP');
M_ATR.prefix(_d);
{? _validate.ACTION='add'
||
   M_ATR.blank();
   M_ATR.TYP:=_d;
   M_ATR.SYM:=_obj.SYM
?};

M_ATR.NAZ:=_obj.NAZ;
M_ATR.SL_01:=_validate.OBJ.SL_01;
M_ATR.SL_02:=_validate.OBJ.SL_02;
M_ATR.SL_03:=_validate.OBJ.SL_03;
M_ATR.SL_04:=_validate.OBJ.SL_04;
M_ATR.SL_05:=_validate.OBJ.SL_05;
M_ATR.SL_06:=_validate.OBJ.SL_06;
M_ATR.SL_07:=_validate.OBJ.SL_07;
M_ATR.SL_08:=_validate.OBJ.SL_08;
M_ATR.SL_09:=_validate.OBJ.SL_09;
M_ATR.SL_10:=_validate.OBJ.SL_10;

M_ATR.WZ:=_obj.WZ;
M_ATR.ADD:=_obj.ADD;
M_ATR.EDIT:=_obj.EDIT;

{? _d='B'
|| M_ATR.M_ATR:=_obj.M_ATR;
   M_ATR.AUTONR:=_obj.AUTONR;
   M_ATR.AUTODL:=_obj.AUTODL;
   M_ATR.WZN:=_obj.WZN;
   M_ATR.MGR_KOD:=_obj.MGR_KOD;
   {? M_ATR.MGR_KOD<>''
   || _mgr:=exec('FindInSet','#table','MGR','KOD',M_ATR.MGR_KOD,'T',,1);
      {? _mgr<>null()
      || M_ATR.MGR:=_mgr;
         M_ATR.MGR_KOD:=''
      ?}
   |? M_ATR.MGR<>null()
   || M_ATR.MGR:=null()
   ?}
|| M_ATR.MOD01:=_obj.MOD01;
   M_ATR.MOD02:=_obj.MOD02;
   M_ATR.MOD03:=_obj.MOD03;
   M_ATR.MOD04:=_obj.MOD04;
   M_ATR.MOD05:=_obj.MOD05;
   M_ATR.MOD06:=_obj.MOD06;
   M_ATR.MOD07:=_obj.MOD07;
   M_ATR.MOD08:=_obj.MOD08;
   M_ATR.MOD09:=_obj.MOD09;
   M_ATR.MOD10:=_obj.MOD10;
   M_ATR.GS101:=_obj.GS101;
   M_ATR.GS102:=_obj.GS102;
   M_ATR.GS103:=_obj.GS103;
   M_ATR.GS104:=_obj.GS104;
   M_ATR.GS105:=_obj.GS105;
   M_ATR.GS106:=_obj.GS106;
   M_ATR.GS107:=_obj.GS107;
   M_ATR.GS108:=_obj.GS108;
   M_ATR.GS109:=_obj.GS109;
   M_ATR.GS110:=_obj.GS110;
   M_ATR.MOB01:=_obj.MOB01;
   M_ATR.MOB02:=_obj.MOB02;
   M_ATR.MOB03:=_obj.MOB03;
   M_ATR.MOB04:=_obj.MOB04;
   M_ATR.MOB05:=_obj.MOB05;
   M_ATR.MOB06:=_obj.MOB06;
   M_ATR.MOB07:=_obj.MOB07;
   M_ATR.MOB08:=_obj.MOB08;
   M_ATR.MOB09:=_obj.MOB09;
   M_ATR.MOB10:=_obj.MOB10
?};
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::       _c - typ atrybutów: 'B'-indeksu, 'C'-dostaw
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.SYM.VALUE:=M_ATR.SYM;
_table.NAZ.VALUE:=M_ATR.NAZ;
_table.SL_01.VALUE:=M_ATR.SL_01().NA;
_table.SL_02.VALUE:=M_ATR.SL_02().NA;
_table.SL_03.VALUE:=M_ATR.SL_03().NA;
_table.SL_04.VALUE:=M_ATR.SL_04().NA;
_table.SL_05.VALUE:=M_ATR.SL_05().NA;
_table.SL_06.VALUE:=M_ATR.SL_06().NA;
_table.SL_07.VALUE:=M_ATR.SL_07().NA;
_table.SL_08.VALUE:=M_ATR.SL_08().NA;
_table.SL_09.VALUE:=M_ATR.SL_09().NA;
_table.SL_10.VALUE:=M_ATR.SL_10().NA;
_table.ARCH.VALUE:=M_ATR.ARCH;
_table.WZ.VALUE:=M_ATR.WZ;
_table.ADD.VALUE:=M_ATR.ADD;
_table.EDIT.VALUE:=M_ATR.EDIT;
{? _c='B'
|| _table.MGR_KOD.VALUE:=M_ATR.MGR().KOD;
   _table.M_ATR.VALUE:=M_ATR.M_ATR;
   _table.AUTONR.VALUE:=M_ATR.AUTONR;
   _table.AUTODL.VALUE:=M_ATR.AUTODL;
   _table.WZN.VALUE:=M_ATR.WZN
|| _table.MOD01.VALUE:=M_ATR.MOD01;
   _table.MOD02.VALUE:=M_ATR.MOD02;
   _table.MOD03.VALUE:=M_ATR.MOD03;
   _table.MOD04.VALUE:=M_ATR.MOD04;
   _table.MOD05.VALUE:=M_ATR.MOD05;
   _table.MOD06.VALUE:=M_ATR.MOD06;
   _table.MOD07.VALUE:=M_ATR.MOD07;
   _table.MOD08.VALUE:=M_ATR.MOD08;
   _table.MOD09.VALUE:=M_ATR.MOD09;
   _table.MOD10.VALUE:=M_ATR.MOD10;
   _table.GS101.VALUE:=M_ATR.GS101;
   _table.GS102.VALUE:=M_ATR.GS102;
   _table.GS103.VALUE:=M_ATR.GS103;
   _table.GS104.VALUE:=M_ATR.GS104;
   _table.GS105.VALUE:=M_ATR.GS105;
   _table.GS106.VALUE:=M_ATR.GS106;
   _table.GS107.VALUE:=M_ATR.GS107;
   _table.GS108.VALUE:=M_ATR.GS108;
   _table.GS109.VALUE:=M_ATR.GS109;
   _table.GS110.VALUE:=M_ATR.GS110;
   _table.MOB01.VALUE:=M_ATR.MOB01;
   _table.MOB02.VALUE:=M_ATR.MOB02;
   _table.MOB03.VALUE:=M_ATR.MOB03;
   _table.MOB04.VALUE:=M_ATR.MOB04;
   _table.MOB05.VALUE:=M_ATR.MOB05;
   _table.MOB06.VALUE:=M_ATR.MOB06;
   _table.MOB07.VALUE:=M_ATR.MOB07;
   _table.MOB08.VALUE:=M_ATR.MOB08;
   _table.MOB09.VALUE:=M_ATR.MOB09;
   _table.MOB10.VALUE:=M_ATR.MOB10
?};
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::       _d - typ atrybutów: 'B'-indeksu, 'C'-dostaw
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('SL_01','SL_02','SL_03','SL_04','SL_05','SL_06','SL_07','SL_08','SL_09','SL_10');

_res:=1;
_result.OBJ.SL_01:={? _obj.SL_01='' || null() || _res:=0; exec('FindInSet','#table','TAT','NA',_obj.SL_01,,,1) ?};
{? ~_res & _result.OBJ.SL_01=null()
|| _result.MSG:='Nie znaleziono typu atrybutu %2 dla wzorca atrybutów %1.'@[_obj.SYM,_obj.SL_01];
   _result.RESULT:=0
?};
_res:=1;
_result.OBJ.SL_02:={? _obj.SL_02='' || null() || _res:=0; exec('FindInSet','#table','TAT','NA',_obj.SL_02,,,1) ?};
{? ~_res & _result.OBJ.SL_02=null()
|| _result.MSG:='Nie znaleziono typu atrybutu %2 dla wzorca atrybutów %1.'@[_obj.SYM,_obj.SL_02];
   _result.RESULT:=0
?};
_res:=1;
_result.OBJ.SL_03:={? _obj.SL_03='' || null() || _res:=0; exec('FindInSet','#table','TAT','NA',_obj.SL_03,,,1) ?};
{? ~_res & _result.OBJ.SL_03=null()
|| _result.MSG:='Nie znaleziono typu atrybutu %2 dla wzorca atrybutów %1.'@[_obj.SYM,_obj.SL_03];
   _result.RESULT:=0
?};
_res:=1;
_result.OBJ.SL_04:={? _obj.SL_04='' || null() || _res:=0; exec('FindInSet','#table','TAT','NA',_obj.SL_04,,,1) ?};
{? ~_res & _result.OBJ.SL_01=null()
|| _result.MSG:='Nie znaleziono typu atrybutu %2 dla wzorca atrybutów %1.'@[_obj.SYM,_obj.SL_04];
   _result.RESULT:=0
?};
_res:=1;
_result.OBJ.SL_05:={? _obj.SL_05='' || null() || _res:=0; exec('FindInSet','#table','TAT','NA',_obj.SL_05,,,1) ?};
{? ~_res & _result.OBJ.SL_05=null()
|| _result.MSG:='Nie znaleziono typu atrybutu %2 dla wzorca atrybutów %1.'@[_obj.SYM,_obj.SL_05];
   _result.RESULT:=0
?};
_res:=1;
_result.OBJ.SL_06:={? _obj.SL_06='' || null() || _res:=0; exec('FindInSet','#table','TAT','NA',_obj.SL_06,,,1) ?};
{? ~_res & _result.OBJ.SL_06=null()
|| _result.MSG:='Nie znaleziono typu atrybutu %2 dla wzorca atrybutów %1.'@[_obj.SYM,_obj.SL_01];
   _result.RESULT:=0
?};
_res:=1;
_result.OBJ.SL_07:={? _obj.SL_07='' || null() || _res:=0; exec('FindInSet','#table','TAT','NA',_obj.SL_07,,,1) ?};
{? ~_res & _result.OBJ.SL_07=null()
|| _result.MSG:='Nie znaleziono typu atrybutu %2 dla wzorca atrybutów %1.'@[_obj.SYM,_obj.SL_02];
   _result.RESULT:=0
?};
_res:=1;
_result.OBJ.SL_08:={? _obj.SL_08='' || null() || _res:=0; exec('FindInSet','#table','TAT','NA',_obj.SL_08,,,1) ?};
{? ~_res & _result.OBJ.SL_08=null()
|| _result.MSG:='Nie znaleziono typu atrybutu %2 dla wzorca atrybutów %1.'@[_obj.SYM,_obj.SL_03];
   _result.RESULT:=0
?};
_res:=1;
_result.OBJ.SL_09:={? _obj.SL_09='' || null() || _res:=0; exec('FindInSet','#table','TAT','NA',_obj.SL_09,,,1) ?};
{? ~_res & _result.OBJ.SL_09=null()
|| _result.MSG:='Nie znaleziono typu atrybutu %2 dla wzorca atrybutów %1.'@[_obj.SYM,_obj.SL_04];
   _result.RESULT:=0
?};
_res:=1;
_result.OBJ.SL_10:={? _obj.SL_10='' || null() || _res:=0; exec('FindInSet','#table','TAT','NA',_obj.SL_10,,,1) ?};
{? ~_res & _result.OBJ.SL_10=null()
|| _result.MSG:='Nie znaleziono typu atrybutu %2 dla wzorca atrybutów %1.'@[_obj.SYM,_obj.SL_10];
   _result.RESULT:=0
?};

{? _result.RESULT=1
||
   M_ATR.index('SYM');
   M_ATR.prefix(_obj.SYM,);
   {? M_ATR.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_m_atr',_obj,_mode,_result,_d);
         {? exec('rpom_atr','mat_atr',_result.ACTION)<>'' || _result.RESULT:=0 ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_m_atr',_obj,_mode,_result,_d);
      {? exec('rpom_atr','mat_atr',_result.ACTION)<>'' || _result.RESULT:=0 ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::       _d - typ atrybutów: 'B'-indeksu, 'C'-dostaw
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=M_ATR.add(1)
   |? _validate.ACTION='put'
   || _result:=M_ATR.put(1)
   ?}
?};
:: Do weryfikacji przez RR
:: przeniosłem to tu z validate, bo tam dla ścieżki 'add' jeszcze nie ma rekordu na którym ma być put robiony
:: tutaj kontekst jest już jasno określony
{? _result>0
|| _mod:='N';
   _ll:=exec('il_atr','mat_atr');
   _ii:=0;
   {!
   |? _ii+=1;
      {? ($('M_ATR.MOD%1'[form(_ii,-2,0,'99')]))() || _mod:='T' ?};
      _mod='N' & _ii<_ll
   !};
   M_ATR.MOD:=_mod;
   _result:=M_ATR.put(1)
?};

{? _result=0
|| _validate.MSG:='Dodanie wzorca atrybutów %2 %1 nie powiodło się.'@[M_ATR.SYM,{? _d='B' || 'indeksu'@ || 'dostawy'@ ?}]
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::       _b - typ atrybutów: 'B'-indeksu, 'C'-dostaw
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'SYM','STRING[20]','Symbol'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'NAZ','STRING[255]','Nazwa'
   ,'SL_01','STRING[20]','Atrybut 01'
   ,'SL_02','STRING[20]','Atrybut 02'
   ,'SL_03','STRING[20]','Atrybut 03'
   ,'SL_04','STRING[20]','Atrybut 04'
   ,'SL_05','STRING[20]','Atrybut 05'
   ,'SL_06','STRING[20]','Atrybut 06'
   ,'SL_07','STRING[20]','Atrybut 07'
   ,'SL_08','STRING[20]','Atrybut 08'
   ,'SL_09','STRING[20]','Atrybut 09'
   ,'SL_10','STRING[20]','Atrybut 10');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'SYM',,);

M_ATR.cntx_psh();
M_ATR.index('TYP');
M_ATR.prefix(_b);
{? M_ATR.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$M_ATR.ref();
      _selected.prefix($M_ATR.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.SYM:=M_ATR.SYM;
      _tab.NAZ:=M_ATR.NAZ;
      _tab.SL_01:=M_ATR.SL_01().NA;
      _tab.SL_02:=M_ATR.SL_02().NA;
      _tab.SL_03:=M_ATR.SL_03().NA;
      _tab.SL_04:=M_ATR.SL_04().NA;
      _tab.SL_05:=M_ATR.SL_05().NA;
      _tab.SL_06:=M_ATR.SL_06().NA;
      _tab.SL_07:=M_ATR.SL_07().NA;
      _tab.SL_08:=M_ATR.SL_08().NA;
      _tab.SL_09:=M_ATR.SL_09().NA;
      _tab.SL_10:=M_ATR.SL_10().NA;
      _tab.add();
      M_ATR.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'SYM,NAZ,SL_01,SL_02,SL_03,SL_04,SL_05,SL_06,SL_07,SL_08,SL_09,SL_10',10,'Wybór typów atrybutów do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
M_ATR.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:12 c559a7294eb8e17ccc13acea13fd7b913f95fd659f69225856f8adb0d0dd448490c03c7dd9bbd9c068e0bebfce92a7f5a0bb85c5deee04df72cb74b16c9c479f7b9f1d2b0629c3493e3e5ba5e2feb53087f40bcc9005ac1181c7c3d29aae146a5eb79c993bb8613b18c04626e8e6f290b8c0d43c5dbc9b25e437b616b98070db
