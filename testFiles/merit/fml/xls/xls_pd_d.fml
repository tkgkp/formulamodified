:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_pd_d.fml
:: Utworzony: 19.07.2018
:: Autor: Markus
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu formuł planu dostaw
::======================================================================================================================


\init_asm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='PD_D_asm';
_def.DOMAIN:=exec('name','#b_domain','LZK');
_def.FUNPAR:='ZWS_PLAN_DST';

_def.FILE:='plan_dostaw.xlsx';
_def.SHEET:='Analiza stanu magazynowego=1,1';
_def.NAME:='Analiza stanu magazynowego'@;
_def.DESC:='Analiza stanu magazynowego';
_def.TABLE:="PD_D";
_def.FIELDS:="exec('fields','xls_pd_d',_a)";
_def.EXPORT:="exec('export','xls_pd_d',_a,_b)";
_def.IMPORT:="exec('import','xls_pd_d',_a,_b,_c)";
_def.VALIDATE:="_c.OBJ:=obj_new('FORMULA', 'TYP'); _c.OBJ.TYP:='S'; exec('validate','xls_pd_d',_a,_b,_c)";
_def.SELECT:="exec('select','xls_pd_d',_a,'S')";
_def.PREFIX:="PD_D.index('TYP1'); PD_D.prefix('S')";
_def.BEFORE:="PD_D.cntx_psh()";
_def.AFTER:="PD_D.cntx_pop()";
~~


\init_acs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='PD_D_acs';
_def.DOMAIN:=exec('name','#b_domain','LZK');
_def.FUNPAR:='ZWS_PLAN_DST';

_def.FILE:='plan_dostaw.xlsx';
_def.SHEET:='Analizy cech stanu=1,1';
_def.NAME:='Analizy cech stanu'@;
_def.DESC:='Analizy cech stanu';
_def.TABLE:="PD_D";
_def.FIELDS:="exec('fields','xls_pd_d',_a)";
_def.EXPORT:="exec('export','xls_pd_d',_a,_b)";
_def.IMPORT:="exec('import','xls_pd_d',_a,_b,_c)";
_def.VALIDATE:="_c.OBJ:=obj_new('FORMULA', 'TYP'); _c.OBJ.TYP:='C'; exec('validate','xls_pd_d',_a,_b,_c)";
_def.SELECT:="exec('select','xls_pd_d',_a,'C')";
_def.PREFIX:="PD_D.index('TYP1'); PD_D.prefix('C')";
_def.BEFORE:="PD_D.cntx_psh()";
_def.AFTER:="PD_D.cntx_pop()";
~~


\init_us
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='PD_D_us';
_def.DOMAIN:=exec('name','#b_domain','LZK');
_def.FUNPAR:='ZWS_PLAN_DST';

_def.FILE:='plan_dostaw.xlsx';
_def.SHEET:='Uzupełnienie stanu=1,1';
_def.NAME:='Uzupełnienie stanu'@;
_def.DESC:='Uzupełnienie stanu';
_def.TABLE:="PD_D";
_def.FIELDS:="exec('fields','xls_pd_d',_a)";
_def.EXPORT:="exec('export','xls_pd_d',_a,_b)";
_def.IMPORT:="exec('import','xls_pd_d',_a,_b,_c)";
_def.VALIDATE:="_c.OBJ:=obj_new('FORMULA', 'TYP'); _c.OBJ.TYP:='U'; exec('validate','xls_pd_d',_a,_b,_c)";
_def.SELECT:="exec('select','xls_pd_d',_a,'U')";
_def.PREFIX:="PD_D.index('TYP1'); PD_D.prefix('U')";
_def.BEFORE:="PD_D.cntx_psh()";
_def.AFTER:="PD_D.cntx_pop()";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

::_def.define('TYP','Typ',0,,'[S]tan magazynowy/[C]echa stanu/[U]zupełnienie stanu');
_def.define('SORT','Kolejność',1,,'Kolejność - 10 znaków');
_def.define('KOD','Kod',0,,'Kod - 10 znaków');
_def.define('FORMULA','Formuła',0,,'Formuła');
_def.define('A','Aktywna',1,,'Aktywność formuł [T/N]');
_def.define('OPIS','Opis algorytmu',1,,'Opis algorytmu formuły planu dostaw - do 30 znaków');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
PD_D.prefix();
{? _validate.ACTION='add'
||
   PD_D.blank();
   PD_D.FORMULA:=_validate.OBJ.FORMULA
?};

PD_D.TYP:=_validate.OBJ.TYP;

PD_D.SORT:=_obj.SORT;
PD_D.KOD:=_obj.KOD;
PD_D.A:=_obj.A;

::PD_D.memo_set(_obj.OPIS, 'OPIS');
::PD_D.memo_put;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;

_table.FORMULA.VALUE:=PD_D.FORMULA().SKROT;
_excel.write_async('FORMULA',PD_D.FORMULA);

::_table.TYP.VALUE:=PD_D.TYP;
_table.SORT.VALUE:=PD_D.SORT;
_table.KOD.VALUE:=PD_D.KOD;
_table.A.VALUE:=PD_D.A;

_table.OPIS.VALUE:=PD_D.memo_txt(0,1,'OPIS');

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

::_result.OBJ:=obj_new('FORMULA');

_result.OBJ.FORMULA:=exec('FindInSet','#table','FORMULA','FORMULA4',_obj.FORMULA,'3',,1);
{? _result.OBJ.FORMULA=null()
||
   _result.MSG:='Nie znaleziono formuły o skrócie %1.'@[_obj.FORMULA];
   _result.RESULT:=0;
   return(~~)
?};

{? _result.RESULT = 1
||
   PD_D.index('KOD');
   PD_D.prefix(_obj.KOD,);
   {? PD_D.first()
   ||
      {? _mode=0
      || _result.RESULT:=0
      ||
         _result.ACTION:='put';
         exec('record','xls_pd_d',_obj,_mode,_result);
         {? __CHK.record(PD_D,,'KOD','FORMULA')<>''
         ||
            _result.RESULT:=0
         ?}
      ?}
   ||
      _result.ACTION:='add';
      exec('record','xls_pd_d',_obj,_mode,_result);
      {? __CHK.record(PD_D,,'KOD','FORMULA')<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
_result


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      _result:=PD_D.add(1)
   |? _validate.ACTION='put'
   ||
      _result:=PD_D.put(1)
   ?};
   PD_D.memo_set(_obj.OPIS, 'OPIS');
   PD_D.memo_put()
?};
{? _result=0
||
   {? _validate.ACTION='add'
   ||
      FUN.info('Dodanie pozycji o kodzie %1 nie powiodło się.'@[$_obj.KOD])
   ||
      FUN.info('Poprawa pozycji o kodzie %1 nie powiodła się.'@[$_obj.KOD])
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::       _b - 'S' - Analiza stanu magazynowego 'C' - Analizy cech stanu 'U' - Uzupełnienie stanu
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'KOD','STRING[10]','Kod'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

_b_string := 'Analiza stanu magazynoweg';
{? _ > 1
||
   {? _b = 'C'
   ||
      _b_string := 'Analizy cech stanu'
   |? _b = 'U'
   ||
      _b_string := 'Uzupełnienie stanu'
   ?}
||
   _b := 'S'
?};

PD_D.cntx_psh();
PD_D.index('TYP1');
PD_D.prefix(_b);
{? PD_D.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$PD_D.ref();
      _selected.prefix($PD_D.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:=PD_D.KOD;
      _tab.add();
      PD_D.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'KOD',20,'Wybór formuł planu dostaw (%1) do eksportu'@[_b_string],1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
PD_D.cntx_pop();

_result

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:49 b0df5f16a123eba080177569e70e9d84e62f3ac1c3687fed2ef8d25fabf195c2ecd6fa519ecc4bbb19cf94dfe87aba8d85dcde649401b3f0f964d330dc47fce1344302ad20b6b399b54acaf59836576f32610bef2647fda698ebe2e91add12e89e311a9210c080aef5778f4e89820681c07db8b83a14419911fa919a434020ef
