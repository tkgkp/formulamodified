:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_f_zatr.fml
:: Utworzony: 09.08.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu form współpracy
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='F_ZATR';
_def.FUNPAR:='ZWS_PKD_FZATR';
_def.DOMAIN:=exec('name','#b_domain','PKD');
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.SHEET:='Formy współpracy=1,1';
_def.NAME:='Formy współpracy'@;
_def.DESC:='Formy współpracy';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="F_ZATR";

: prolog
_def.BEFORE:="
   F_ZATR.cntx_psh();
   F_ZATR.f_clear();
   F_ZATR.index('KOD');
   F_ZATR.prefix()
";

: epilog
_def.AFTER:="
   F_ZATR.cntx_pop()
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('KOD',     MS.name(F_ZATR,'KOD'),     0,,MS.comment(F_ZATR,'KOD'));
   _env.define('OPIS',    MS.name(F_ZATR,'OPIS'),    1,,MS.comment(F_ZATR,'OPIS'));
   _env.define('TYP',     MS.name(F_ZATR,'TYP'),     0,,MS.comment(F_ZATR,'TYP'));
   _env.define('DOCELOWA',MS.name(F_ZATR,'DOCELOWA'),0,,MS.comment(F_ZATR,'DOCELOWA'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.KOD.VALUE:=F_ZATR.KOD;
   _buf.OPIS.VALUE:=F_ZATR.OPIS;
   _buf.TYP.VALUE:=F_ZATR.TYP;
   _buf.DOCELOWA.VALUE:=F_ZATR.DOCELOWA;
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_f_zatr',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_f_zatr',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.KOD=''      || 'KOD'
   |? _buf.OPIS=''     || 'OPIS'
   |? _buf.TYP=''      || 'TYP'
   |? _buf.DOCELOWA='' || 'DOCELOWA'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? ('kprtz'*-_buf.KOD)=0
|| _val.msg_inset('KOD','k','p','r','t','z','K','P','R','T','Z');
   _val.RESULT:=0;
   return()

|? ('kprtz'*-_buf.TYP)=0
|| _val.msg_inset('TYP','k','p','r','t','z','K','P','R','T','Z');
   _val.RESULT:=0;
   return()

|? ('TN'*_buf.DOCELOWA)=0
|| _val.msg_inset('DOCELOWA','T','N');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(F_ZATR,'KOD');
{? +_buf.KOD>_max
|| _val.msg_length('KOD',_max);
   _buf.KOD:=_max+_buf.KOD
?};
_max:=MS.fld_len(F_ZATR,'OPIS');
{? +_buf.OPIS>_max
|| _val.msg_length('OPIS',_max);
   _buf.OPIS:=_max+_buf.OPIS
?};
_max:=MS.fld_len(F_ZATR,'TYP');
{? +_buf.TYP>_max
|| _val.msg_length('TYP',_max);
   _buf.TYP:=_max+_buf.TYP
?};
_max:=MS.fld_len(F_ZATR,'DOCELOWA');
{? +_buf.DOCELOWA>_max
|| _val.msg_length('DOCELOWA',_max);
   _buf.DOCELOWA:=_max+_buf.DOCELOWA
?};

_ref:=null;
{? F_ZATR.find_tab(,'KOD',,'=',_buf.KOD)
|| _ref:=F_ZATR.ref()
?};

: optymalizacja importu i standaryzacja kodu
_obj:=_val.OBJ:=obj_new('F_ZATR','to_str');
_obj.to_str:="'%1 - %2'[_a.KOD,_a.OPIS]";
_obj.F_ZATR:=_ref;

{? _ref=null
|| _val.ACTION:='add'
|| _val.ACTION:='put'
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;

_set:="
   _a.KOD:=_b.KOD;
   _a.OPIS:=_b.OPIS;
   _a.TYP:=_b.TYP;
   _a.DOCELOWA:=_b.DOCELOWA;
   ~~
";

{? _val.ACTION='put' & _mod
:  włączono tryb nadpisywania
|| {? F_ZATR.seek(_obj.F_ZATR)
   || _set(F_ZATR,_buf);
      {? ~F_ZATR.put(1)
      || _val.msg_update(_obj.to_str(_buf));
         _val.RESULT:=0
      ?}
   || _val.msg_norec(,F_ZATR.comment());
      _val.RESULT:=0
   ?}

|? _val.ACTION='add'
:  brak ograniczeń
|| F_ZATR.blank();
   _set(F_ZATR,_buf);
   {? ~F_ZATR.add(1)
   || _val.msg_insert(_obj.to_str(_buf));
      _val.RESULT:=0
   ?}
?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 b579ef2ff99b91ad9d49b527dc308d41232cbc61e14cda24834c63ec01a87b0de5a18b23158498f325796e7120b624badec141d40708be27ba203148d84624c1c18b29a04d7d0813099152585674759e67fffb9f9d148d1a76e6c260811952e6559f63e9e940efb76852384a74c80e7b2dd0f91d8be6d478de7a1b2a7e8ac370
