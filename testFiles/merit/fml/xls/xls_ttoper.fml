:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_ttoper.fml
:: Utworzony: 25.07.2018
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu taryfikatora operacji
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TTOPER';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='ZWS_PAR_TTAR';

_def.FILE:='produkcja.xlsx';
_def.SHEET:='Taryfikator operacji'@+'=1,1';
_def.NAME:='Taryfikator operacji'@;
_def.DESC:='Taryfikator operacji (wykonywanych na stanowiskach)'@;

_def.PREFIX:="TTOPER.index('KOD'); TTOPER.prefix()";
_def.TABLE:="TTOPER";
_def.FIELDS:="exec('fields','xls_ttoper',_a)";

_def.BEFORE:="TTOPER.cntx_psh()";
_def.AFTER:="TTOPER.cntx_pop()";
_def.SELECT:="exec('select','xls_ttoper',_a)";

_def.EXPORT:="exec('export','xls_ttoper',_a,_b)";
_def.VALIDATE:="exec('validate','xls_ttoper',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_ttoper',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_define:=$(
   '_a.define(_b,'
   '{? var_pres(\'_d\')=type_of(\'\') || _d || exec(\'fldLabel\',\'#field\',TTOPER,_b) ?},_c,,'
   '{? var_pres(\'_e\')=type_of(\'\') || _e || exec(\'fldComment\',\'#field\',TTOPER,_b) ?})'
);
_define(_def,'KOD',0,,'Kod (max. 10 znaków)'@);
_define(_def,'NA',1,,'Nazwa (max. 50 znaków)'@);
_def.define('STAWKA',exec('fldLabel','#field',TTOPER,'STAWKA'),1,,exec('fldComment','#field',TTOPER,'STAWKA')
   ,type_of(0),4);
_define(_def,'ZAWOD',1);
_def.define('TKAT',exec('fldLabel','#field',TTOPER,'TKAT'),1,,exec('fldComment','#field',TTOPER,'TKAT'),type_of(0),0);
_define(_def,'PLATNE',1);
_define(_def,'KAT',1);
_define(_def,'GRPOJ',1);
_define(_def,'PLACE',1);
_define(_def,'GRUPA',1);
_define(_def,'TWRKPLG',1);
_define(_def,'KOLOR',1);
_def.define('KONTROLA','Kontrola jakości'@,1,,'Czy operacja jest kontrolą jakości - [T]/[N]');
_define(_def,'KJ_BAD',1);
_define(_def,'BADSEH',1);
_def.define('FIX_NORM','Stała norma czasowa'@,1,,'Czy stała norma czasowa niezależna od ilości - [T]/[N]');
_def.define('BRYG','Brygada'@,1,,'Znacznik czy operację wykonuje brygada - [T]/[N]');
_def.define('PL_GRP','Grupowe planowanie'@,1,,'Operacja może być planowana grupowo - [T]/[N]');
_def.define('WYK_FAST','Szybka rejestracja'@,1,,'Operacja będzie rejestrowana w szybki sposób - [T]/[N]');
_def.define('NO_START','Pomiń start'@,1,,'Operacja na e-kiosku będzie rejestrowana bez startowania - [T]/[N]');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TTOPER.prefix();
{? _validate.ACTION='add'
|| TTOPER.blank();
   TTOPER.KOD:=_obj.KOD
?};
TTOPER.NA:=_obj.NA;
TTOPER.STAWKA:=_obj.STAWKA;
TTOPER.ZAWOD:=_validate.OBJ.ZAWOD;
TTOPER.TKAT:=_validate.OBJ.TKAT;
TTOPER.PLATNE:=_obj.PLATNE;
TTOPER.KAT:=_obj.KAT;
TTOPER.GRPOJ:=_obj.GRPOJ;
TTOPER.PLACE:=_validate.OBJ.PLACE;
TTOPER.GRUPA:=_validate.OBJ.GRUPA;
TTOPER.TWRKPLG:=_validate.OBJ.TWRKPLG;
TTOPER.KOLOR:=_obj.KOLOR;
TTOPER.KONTROLA:=_obj.KONTROLA;
TTOPER.KJ_BAD:=_obj.KJ_BAD;
TTOPER.BAD_NAZ:=_obj.BADSEH;
{? TTOPER.BAD_NAZ<>''
|| _badseh:=exec('FindInSet','#table','BADSEH','NN',TTOPER.BAD_NAZ,,"BADSEH.ref()",1);
   {? _badseh<>null()
   || TTOPER.BADSEH:=_badseh;
      TTOPER.BAD_NAZ:=''
   ?}
|? TTOPER.BADSEH<>null()
|| TTOPER.BADSEH:=null()
?};
{? TTOPER.KJ_BAD='B' & TTOPER.BADSEH=null()
|| TTOPER.KJ_BAD:='N'
?};
TTOPER.BRYG:=_obj.BRYG;
TTOPER.PL_GRP:=_obj.PL_GRP;
TTOPER.WYK_FAST:=_obj.WYK_FAST;
TTOPER.NO_START:=_obj.NO_START;
TTOPER.FIX_NORM:=_obj.FIX_NORM;
::TTOPER.BADSEH:=_validate.OBJ.BADSEH;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.KOD.VALUE:=TTOPER.KOD;
_table.NA.VALUE:=TTOPER.NA;
_table.STAWKA.VALUE:=TTOPER.STAWKA;
_table.ZAWOD.VALUE:=TTOPER.ZAWOD().ZD; _excel.write_async('ZAW',TTOPER.ZAWOD);
_table.TKAT.VALUE:=TTOPER.TKAT().KAT; _excel.write_async('TKAT',TTOPER.TKAT);
_table.PLATNE.VALUE:=TTOPER.PLATNE;
_table.KAT.VALUE:=TTOPER.KAT;
_table.GRPOJ.VALUE:=TTOPER.GRPOJ;
_table.PLACE.VALUE:=TTOPER.PLACE().KOD; _excel.write_async('TWRKPLC',TTOPER.PLACE);
_table.GRUPA.VALUE:=TTOPER.GRUPA().SYMBOL; _excel.write_async('TWRKZBR',TTOPER.GRUPA);
_table.TWRKPLG.VALUE:=TTOPER.TWRKPLG().ELEMENT().KOD; _excel.write_async('TWRKZPO',TTOPER.TWRKPLG);
_table.KOLOR.VALUE:=TTOPER.KOLOR;
_table.KONTROLA.VALUE:=TTOPER.KONTROLA;
_table.KJ_BAD.VALUE:=TTOPER.KJ_BAD;
_table.BADSEH.VALUE:=TTOPER.BADSEH().N; _excel.write_async('BADSEH',TTOPER.BADSEH);
_table.BRYG.VALUE:=TTOPER.BRYG;
_table.PL_GRP.VALUE:=TTOPER.PL_GRP;
_table.WYK_FAST.VALUE:=TTOPER.WYK_FAST;
_table.NO_START.VALUE:=TTOPER.NO_START;
_table.FIX_NORM.VALUE:=TTOPER.FIX_NORM;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('ZAWOD','TKAT','PLACE','GRUPA','TWRKPLG');
_result.OBJ.ZAWOD:=exec('FindInSet','#table','ZAW','ZAWODNAZ',_obj.ZAWOD,,"ZAW.ref()",1);
_result.OBJ.TKAT:=exec('FindInSet','#table','TKAT','K',_obj.TKAT,,"TKAT.ref()");
_result.OBJ.PLACE:=exec('FindInSet','#table','TWRKPLC','KOD',_obj.PLACE,,"TWRKPLC.ref()",1);
_result.OBJ.GRUPA:=exec('FindInSet','#table','TWRKZBR','SYM',_obj.GRUPA,,"TWRKZBR.ref()",1);
_result.OBJ.TWRKPLG:=exec('FindInSet','#table','TWRKZPO','GRSTAN',_obj.TWRKPLG,_result.OBJ.GRUPA,"TWRKZPO.ref()",1);
::_result.OBJ.BADSEH:=exec('FindInSet','#table','BADSEH','NN',_obj.BADSEH,,"BADSEH.ref()",1);

:: Ostrzeżenia
{? +_obj.KOD>10
|| _result.msg_length('KOD',10)
?};
{? +_obj.NA>50
|| _result.msg_length('NA',50)
?};

:: Błędy
{? _obj.ZAWOD<>'' & _result.OBJ.ZAWOD=null()
|| _result.msg_norec('ZAWOD');
   _result.RESULT:=0
?};
{? _obj.TKAT<>0 & _result.OBJ.TKAT=null()
|| _result.msg_norec('TKAT');
   _result.RESULT:=0
?};
{? _obj.PLACE<>'' & _result.OBJ.PLACE=null()
|| _result.msg_norec('PLACE');
   _result.RESULT:=0
?};
{? _obj.GRUPA<>'' & _result.OBJ.GRUPA=null()
|| _result.msg_norec('GRUPA');
   _result.RESULT:=0
?};
{? _obj.TWRKPLG<>'' & _result.OBJ.TWRKPLG=null()
|| _result.msg_norec('TWRKPLG');
   _result.RESULT:=0
?};
::{? _obj.BADSEH<>'' & _result.OBJ.BADSEH=null()
::|| _result.msg_norec('BADSEH');
::   _result.RESULT:=0
::?};

{? +_obj.BRYG=0 | 'TN'*_obj.BRYG=0
|| _result.msg_inset('BRYG','T','N');
   _result.RESULT:=0
?};
{? +_obj.PL_GRP=0 | 'TN'*_obj.PL_GRP=0
|| _result.msg_inset('PL_GRP','T','N');
   _result.RESULT:=0
?};
{? +_obj.KONTROLA=0 | 'TN'*_obj.KONTROLA=0
|| _result.msg_inset('KONTROLA','T','N');
   _result.RESULT:=0
?};
{? +_obj.FIX_NORM=0 | 'TN'*_obj.FIX_NORM=0
|| _result.msg_inset('FIX_NORM','T','N');
   _result.RESULT:=0
?};
{? +_obj.WYK_FAST=0 | 'TN'*_obj.WYK_FAST=0
|| _result.msg_inset('WYK_FAST','T','N');
   _result.RESULT:=0
?};
{? +_obj.NO_START=0 | 'TN'*_obj.NO_START=0
|| _result.msg_inset('NO_START','T','N');
   _result.RESULT:=0
?};

:: OK
{? _result.RESULT>0
|| TTOPER.index('KOD');
   TTOPER.prefix(_obj.KOD,);
   {? TTOPER.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_ttoper',_obj,_mode,_result);
         {? exec('chk_ttoper','prod_tar',1)<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_ttoper',_obj,_mode,_result);
      {? exec('chk_ttoper','prod_tar',0)<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=TTOPER.add(1)
   |? _validate.ACTION='put'
   || _result:=TTOPER.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie pozycji taryfikatora o kodzie %1 nie powiodło się.'@[_obj.KOD]
   || _validate.MSG:='Poprawa pozycji taryfikatora o kodzie %1 nie powiodła się.'@[_obj.KOD]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,
   'KOD','STRING[10]','Kod'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'NA','STRING[50]','Nazwa'
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

TTOPER.cntx_psh();
TTOPER.index('KOD');
TTOPER.prefix();
{? TTOPER.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$TTOPER.ref();
      _selected.prefix($TTOPER.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:=TTOPER.KOD;
      _tab.NA:=TTOPER.NA;
      _tab.add();
      TTOPER.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'KOD,NA',20,'Wybór pozycji taryfikatora do eksportu'@);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
TTOPER.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 68b568e3d0ff6e8313db120ca86849123f04be3843e3ceabe1a0740b1c984738127f17c57075c4efc077984825ea64af7276063655e34a2d367d600e4d0c65c6c035699982b4d6363261d2083db696961d267abe98b1d2f6b6f704dd86316b235be10ea1bc85e59ab888732ada87d105885519174124125d5bf2dc4f7f2ebc14
