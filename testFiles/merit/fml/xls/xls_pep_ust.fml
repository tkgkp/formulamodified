:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_pep_ust.fml
:: Utworzony: 20.05.2021
:: Autor: MicKoc [21.37]
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu ustawień zestawów dokumentów Paperless
::======================================================================================================================


\init_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='BP_ZEST';
_def.FUNPAR:='PEP_PAR_ZEST';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_xlsx','xls__init');
_def.SHEET:='Zestaw dokumentów'@+'=1,1';
_def.NAME:='Zestaw dokumentów'@;
_def.DESC:='Zestaw dokumentów'@;
_def.ADD_ROWS:=0;

: źródło danych
_def.TABLE:="BP_ZEST";

: prolog
_def.BEFORE:="
   Cntx.psh(BP_ZEST,SLO_NAZ);
   Cntx.clr(BP_ZEST,SLO_NAZ);
   BP_ZEST.index('UNIQ');
   SLO_NAZ.index('NAZWA');
   ~~
";

: epilog
_def.AFTER:="
   Cntx.pop(BP_ZEST,SLO_NAZ);
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _fl:='MS.name(_a,_b)';
   _fc:='MS.comment(_a,_b)';
   _env:=_a;
   _env.define(_fld:='NAZWA',($(_fl))(SLO_NAZ,_fld),0,,($(_fc))(SLO_NAZ,_fld));
   _env.define(_fld:='KOD',($(_fl))(BP_ZEST,_fld),0,,($(_fc))(BP_ZEST,_fld));
   _env.define(_fld:='NAZ',($(_fl))(BP_ZEST,_fld),0,,($(_fc))(BP_ZEST,_fld));
   _env.define(_fld:='B_PROC',($(_fl))(BP_ZEST,_fld),0,,($(_fc))(BP_ZEST,_fld));
   _env.define(_fld:='VER',($(_fl))(BP_ZEST,_fld),0,,($(_fc))(BP_ZEST,_fld));
   _env.define(_fld:='SYSTEM',($(_fl))(BP_ZEST,_fld),0,,($(_fc))(BP_ZEST,_fld));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.NAZWA.VALUE:=BP_ZEST.SLO_NAZ().NAZWA;
   _buf.KOD.VALUE:=BP_ZEST.KOD;
   _buf.NAZ.VALUE:=BP_ZEST.NAZ;
   _buf.B_PROC.VALUE:=BP_ZEST.B_PROC;
   _buf.VER.VALUE:=BP_ZEST.VER;
   _buf.SYSTEM.VALUE:=BP_ZEST.SYSTEM;
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate_zest','xls_pep_ust',_a,_b,_c)";
_def.IMPORT:="exec('import_zest','xls_pep_ust',_a,_b,_c)";
~~


\init_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='BP_DEF';
_def.FUNPAR:='PEP_PAR_ZEST';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_xlsx','xls__init');
_def.SHEET:='Definicja zestawu dokumentów'@+'=1,1';
_def.NAME:='Definicja zestawu dokumentów'@;
_def.DESC:='Definicja zestawu dokumentów'@;
_def.ADD_ROWS:=0;

: źródło danych
_def.TABLE:="BP_DEF";

: prolog
_def.BEFORE:="
   Cntx.psh(BP_DEF,BP_ZEST,SLO_NAZ);
   Cntx.clr(BP_DEF,BP_ZEST,SLO_NAZ);
   BP_ZEST.index('UNIQ');
   BP_DEF.index('UNIQ');
   SLO_NAZ.index('NAZWA');
   ~~
";

: epilog
_def.AFTER:="
   Cntx.pop(BP_DEF,BP_ZEST,SLO_NAZ);
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _fl:='MS.name(_a,_b)';
   _fc:='MS.comment(_a,_b)';
   _env:=_a;
   _env.define(_fld:='NAZWA',($(_fl))(SLO_NAZ,_fld),0,,($(_fc))(SLO_NAZ,_fld));
   _env.define(_fld:='KOD',($(_fl))(BP_ZEST,_fld),0,,($(_fc))(BP_ZEST,_fld));
   _env.define(_fld:='SLO_NAZ',($(_fl))(BP_DEF,_fld),0,,($(_fc))(BP_DEF,_fld));
   _env.define(_fld:='W',($(_fl))(BP_DEF,_fld),0,,($(_fc))(BP_DEF,_fld));
   _env.define(_fld:='PODPIS',($(_fl))(BP_DEF,_fld),0,,($(_fc))(BP_DEF,_fld));
   _env.define(_fld:='IND',($(_fl))(BP_DEF,_fld),0,,($(_fc))(BP_DEF,_fld));
   _env.define(_fld:='FORM',($(_fl))(BP_DEF,_fld),0,,($(_fc))(BP_DEF,_fld));
   _env.define(_fld:='SYSTEM',($(_fl))(BP_DEF,_fld),0,,($(_fc))(BP_DEF,_fld));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.NAZWA.VALUE:=BP_DEF.BP_ZEST().SLO_NAZ().NAZWA;
   _buf.KOD.VALUE:=BP_ZEST.KOD;
   _buf.SLO_NAZ.VALUE:=BP_DEF.SLO_NAZ().NAZWA;
   _buf.W.VALUE:=BP_DEF.W;
   _buf.PODPIS.VALUE:=BP_DEF.PODPIS;
   _buf.IND.VALUE:=BP_DEF.IND;
   _buf.FORM.VALUE:=BP_DEF.FORM;
   _buf.SYSTEM.VALUE:=BP_DEF.SYSTEM;
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate_def','xls_pep_ust',_a,_b,_c)";
_def.IMPORT:="exec('import_def','xls_pep_ust',_a,_b,_c)";
~~


\validate_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.KOD='' || 'KOD'
   |? _buf.NAZ='' || 'NAZ'
   |? _buf.B_PROC='' || 'B_PROC'
   |? _buf.VER='' || 'VER'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

{? ~('TN'*_buf.SYSTEM) | ~+|_buf.SYSTEM
|| _val.MSG:='Nieprawidłowa wartość pola "%1".'@[_buf.SYSTEM];
   _val.RESULT:=0;
   return()
?};

_ref:=exec('slo_naz','ext_slo','ZAL',_buf.NAZWA,1);
{? ~_ref
|| _val.msg_empty('SLO_NAZ');
   _val.RESULT:=0;
   return()
?};

:: Wybór akcji
{? BP_ZEST.find_key(_ref,_buf.KOD,)
|| {? _mod
   || exec('dane_zest','xls_pep_ust','put',_buf);
      _val.ACTION:='put'
   || _val.RESULT:=0
   ?}
|| exec('dane_zest','xls_pep_ust','add',_buf);
   _val.ACTION:='add'
?};
~~


\validate_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.KOD='' || 'KOD'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

{? ~('TN'*_buf.SYSTEM) | ~+|_buf.SYSTEM
|| _val.MSG:='Nieprawidłowa wartość pola "%1".'@[_buf.SYSTEM];
   _val.RESULT:=0;
   return()
?};

{? ~('TN'*_buf.W) | ~+|_buf.W
|| _val.MSG:='Nieprawidłowa wartość pola "%1".'@[_buf.W];
   _val.RESULT:=0;
   return()
?};

{? ~('TN'*_buf.PODPIS) | ~+|_buf.PODPIS
|| _val.MSG:='Nieprawidłowa wartość pola "%1".'@[_buf.PODPIS];
   _val.RESULT:=0;
   return()
?};

{? ~('TN'*_buf.IND) | ~+|_buf.IND
|| _val.MSG:='Nieprawidłowa wartość pola "%1".'@[_buf.IND];
   _val.RESULT:=0;
   return()
?};

_ref:=exec('slo_naz','ext_slo','ZAL',_buf.NAZWA,1);
{? ~_ref
|| _val.msg_empty('NAZWA');
   _val.RESULT:=0;
   return()
?};

_slo:=exec('slo_naz','ext_slo','ZAL',_buf.SLO_NAZ,1);
{? ~_slo
|| _val.msg_empty('SLO_NAZ');
   _val.RESULT:=0;
   return()
?};

{? ~BP_ZEST.find_key(_ref,_buf.KOD,)
|| _val.MSG:='Brak wartości %1 w słowniku "%2"'@[_buf.KOD,'BP_ZEST'];
   _val.RESULT:=0;
   return()
|| _zest:=BP_ZEST.ref()
?};

:: Wybór akcji
{? BP_DEF.find_key(_zest,_slo)
|| {? _mod
   || exec('dane_def','xls_pep_ust','put',_buf);
      _val.ACTION:='put'
   || _val.RESULT:=0
   ?}
|| exec('dane_def','xls_pep_ust','add',_buf);
   _val.ACTION:='add'
?};
~~


\import_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_buf:=_a;
_mod:=_b;
_val:=_c;

_result:=0;
{? _val.RESULT=1
|| {? _val.ACTION='add'
   || _result:=BP_ZEST.add(1)
   |? _val.ACTION='put'
   || _result:=BP_ZEST.put(1)
   ?}
?};
{? ~_result
|| {? _val.ACTION='add'
   || _val.MSG:='Dodanie zestawu dokumentów %1 %2 nie powiodło się.'@[_buf.KOD,_buf.NAZ]
   || _val.MSG:='Poprawa zestawu dokumentów %1 %2 nie powiodło się.'@[_buf.KOD,_buf.NAZ]
   ?}
?};
_result


\import_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_buf:=_a;
_mod:=_b;
_val:=_c;

_result:=0;
{? _val.RESULT=1
|| {? _val.ACTION='add'
   || _result:=BP_DEF.add(1)
   |? _val.ACTION='put'
   || _result:=BP_DEF.put(1)
   ?}
?};
{? ~_result
|| {? _val.ACTION='add'
   || _val.MSG:='Dodanie pozycji %3 zestawu dokumentów %1 %2 nie powiodło się.'@[_buf.KOD,_buf.NAZWA,_buf.SLO_NAZ]
   || _val.MSG:='Poprawa pozycji %3 zestawu dokumentów %1 %2 nie powiodło się.'@[_buf.KOD,_buf.NAZWA,_buf.SLO_NAZ]
   ?}
?};
_result


\dane_zest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Wypełnienie bufora danymi
::   WE: _a [STRING] - identyfikator akcji 'add' lub 'put'
::       _b [OBJEKT] - bufor danych
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a='add' || BP_ZEST.blank() ?};
BP_ZEST.KOD:=_b.KOD;
BP_ZEST.NAZ:=_b.NAZ;
BP_ZEST.SLO_NAZ:=exec('slo_naz','ext_slo','ZAL',_b.NAZWA,1);
BP_ZEST.B_PROC:=_b.B_PROC;
BP_ZEST.VER:=_b.VER;
BP_ZEST.SYSTEM:=_b.SYSTEM


\dane_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [21.37]
:: OPIS: Wypełnienie bufora danymi
::   WE: _a [STRING] - identyfikator akcji 'add' lub 'put'
::       _b [OBJEKT] - bufor danych
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a='add' || BP_DEF.blank() ?};
_ref:=exec('slo_naz','ext_slo','ZAL',_b.NAZWA,1);
_slo:=exec('slo_naz','ext_slo','ZAL',_b.SLO_NAZ,1);
_zest:={? BP_ZEST.find_key(_ref,_b.KOD,) || BP_ZEST.ref() || null() ?};
BP_DEF.BP_ZEST:=_zest;
BP_DEF.SLO_NAZ:=_slo;
BP_DEF.W:=_b.W;
BP_DEF.PODPIS:=_b.PODPIS;
BP_DEF.IND:=_b.IND;
BP_DEF.FORM:=_b.FORM;
BP_DEF.SYSTEM:=_b.SYSTEM

:Sign Version 2.0 jowisz:1045 2021/09/17 15:17:15 e24f63e4da77125041d4acce3e70ca435bd6e72eb5bf5a952c5d34680efd8cb3a0798689ac76a2a616f3b08a02324b4b06b3ab0e02b338add299dccf888d2e08e12c0eacd1c3e3127d78befeb170f12601c456829924ccaacfd3ec09f7ecc206b7433d5fd4bc3faf0d14f2b0cd0e8d27f970401e19be9ae4a7ffd8cf16b0a7d3
