:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_sd_bdef.fml
:: Utworzony: 11.03.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu konfiguracji
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='SD_BDEF';
_def.FUNPAR:='ZWS_PAR_ASDD';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_sd_def_xlsx','xls__init');
_def.SHEET:='Dziedziny definicji=1,1';
_def.NAME:='Dziedziny definicji szablonów'@;
_def.DESC:='Dziedziny definicji szablonów';
_def.ADD_ROWS:=0;
_def.HIDDEN:='T';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="SD_BDEF";

: prolog
_def.BEFORE:="
   SD_BDEF.cntx_psh();
   SD_BDEF.f_clear();
   SD_BDEF.index('KOD');
   SD_BDEF.prefix();
   SD_DEF.cntx_psh();
   SD_DEF.index('KOD');
   SD_DEF.prefix();
   ~~
";

: epilog
_def.AFTER:="
   SD_BDEF.cntx_pop();
   SD_DEF.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('SYSTEM',  MS.name(SD_BDEF,'SYSTEM'),0,,  MS.comment(SD_BDEF,'SYSTEM'));
   _env.define('KOD',     MS.name(SD_BDEF,'KOD'),0,,     MS.comment(SD_BDEF,'KOD'));
   _env.define('SD_DEF',  MS.name(SD_BDEF,'SD_DEF'),0,,  MS.comment(SD_BDEF,'SD_DEF'),type_of(''));
   _env.define('B_DOMAIN',MS.name(SD_BDEF,'B_DOMAIN'),0,,MS.comment(SD_BDEF,'B_DOMAIN'),type_of(''));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.SYSTEM.VALUE:=SD_BDEF.SYSTEM;
   _buf.KOD.VALUE:=SD_BDEF.KOD;
   _buf.SD_DEF.VALUE:=SD_BDEF.SD_DEF().KOD;
   _buf.B_DOMAIN.VALUE:=SD_BDEF.B_DOMAIN().SYMBOL;
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_sd_bdef',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_sd_bdef',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.SYSTEM=''   || 'SYSTEM'
   |? _buf.KOD=''      || 'KOD'
   |? _buf.SD_DEF=''   || 'SD_DEF'
   |? _buf.B_DOMAIN='' || 'B_DOMAIN'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

:: błędne wartości
{? ('TN'*(1+_buf.SYSTEM))=0
|| _val.msg_inset('SYSTEM','T','N');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(SD_BDEF,'SYSTEM');
{? +_buf.SYSTEM>_max
|| _val.msg_length('SYSTEM',_max);
   _buf.SYSTEM:=_max+_buf.SYSTEM
?};
_max:=MS.fld_len(SD_BDEF,'KOD');
{? +_buf.KOD>_max
|| _val.msg_length('KOD',_max);
   _buf.KOD:=_max+_buf.KOD
?};
_max:=MS.fld_len(SD_DEF,'KOD');
{? +_buf.SD_DEF>_max
|| _val.msg_length('SD_DEF',_max);
   _buf.SD_DEF:=_max+_buf.SD_DEF
?};
_max:=MS.fld_len(B_DOMAIN,'SYMBOL');
{? +_buf.B_DOMAIN>_max
|| _val.msg_length('B_DOMAIN',_max);
   _buf.B_DOMAIN:=_max+_buf.B_DOMAIN
?};

: weryfikacja spójności referencyjnej
_def:=null;
{? SD_DEF.find_key(_buf.SD_DEF,)
|| _def:=SD_DEF.ref()
|| _val.msg_norec('SD_DEF');
   _val.RESULT:=0;
   return()
?};

_dom:=exec('domain_ref','#b_domain',_buf.B_DOMAIN);
{? _dom=null
|| _val.msg_norec('B_DOMAIN');
   _val.RESULT:=0;
   return()
?};

_ref:=null;
{? (SD_BDEF.index('KOD'); SD_BDEF.find_key(_buf.KOD)) |
   (SD_BDEF.index('UNIQUE'); SD_BDEF.find_key(_dom,_def))
|| _ref:=SD_BDEF.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 - %2'[_a.SD_DEF,_a.B_DOMAIN]",
   'SD_DEF',_def,
   'B_DOMAIN',_dom
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,SD_BDEF,"
   _a.SYSTEM:=_b.SYSTEM;
   _a.KOD:=_b.KOD;
   _a.SD_DEF:=_c.SD_DEF;
   _a.B_DOMAIN:=_c.B_DOMAIN;
   ~~
");
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 75d33fbbb107f756482bdbb9333f43f0fb0d210107ec9ba9e763b7b39f0028f4cf500ac3de5dc7126a371f497d4356d4a75f67ff956e3a9e32e618157b92b3e438b0cdce5cb0902e94cb396fdc3eae0d38d6cfe26ac511f660d98fa899fa4fdcce12647a4b8c49fc8f5b728f3407a0410b3dea0d902b2b77c77b7227ec1a86fe
