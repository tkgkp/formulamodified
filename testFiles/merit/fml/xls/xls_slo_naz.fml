:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_slo_naz.fml
:: Utworzony: 02.08.2018
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu słowników kadrowych - nazwy.
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Inicjowanie mechanizmu.
::   WE:  _a [OBJECT]  - Środowisko mechanizmu.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='SLO_NAZ';
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.NAME:='Słowniki nazw'@;
_def.DOMAIN:=exec('name','#b_domain','PKD');
_def.FUNPAR:='ZWS_PAR_PTSL';
_def.SHEET:='Słowniki nazw'@+'=1,1';
_def.DESC:='Słowniki nazw'@;
_def.MULTIFIR:='T';

_def.TABLE:="SLO_NAZ";
_def.BEFORE:="
   SLO_NAZ.cntx_psh();
   SLO_NAZ.f_clear();
   SLO_NAZ.index('NAZWA');
   SLO_NAZ.prefix();
   SLO_TYP.cntx_psh();
   SLO_TYP.index('SYMBOL');
   SLO_TYP.prefix()
";
_def.AFTER:="
   SLO_TYP.cntx_pop();
   SLO_NAZ.cntx_pop()
";

_def.FIELDS:="
   _fld:=_a;
   _fl:=""MS.name(SLO_NAZ,_a)"";
   _fc:=""MS.comment(SLO_NAZ,_a)"";

   _fld.define('SLO_TYP',_fl('SLO_TYP'),0,,_fc('SLO_TYP')+' (max. %1 zn.)' [$MS.fld_len(SLO_TYP,'SYMBOL')]);
   _fld.define('NAZWA',_fl('NAZWA'),1,,_fc('NAZWA')+' (max. %1 zn.)' [$MS.fld_len(SLO_NAZ,'NAZWA')]);
   _fld.define('SYSTEM',_fl('SYSTEM'),1,,_fc('SYSTEM')+' (max. %1 zn.)' [$MS.fld_len(SLO_NAZ,'SYSTEM')]);
   _fld.define('MEMO_R','Deklaracja dla podpisu odręcznego',1,,'Treść deklaracja dla podpisu odręcznego załącznika wniosku paperless');
   _fld.define('MEMO_Z','Deklaracja dla podpisu zwykłego',1,,'Treść deklaracja dla podpisu zwykłego załącznika wniosku paperless');
   ~~
";

_def.EXPORT:="
   _excel:=_a;
   _buf:=_b;

   _buf.SLO_TYP.VALUE:=SLO_NAZ.SLO_TYP().SYMBOL;   _excel.write_async('SLO_TYP',SLO_NAZ.SLO_TYP);
   _buf.NAZWA.VALUE:=SLO_NAZ.NAZWA;
   _buf.SYSTEM.VALUE:=SLO_NAZ.SYSTEM;
   _buf.MEMO_R.VALUE:=SLO_NAZ.memo_txt(,1,'MEMO_R');
   _buf.MEMO_Z.VALUE:=SLO_NAZ.memo_txt(,1,'MEMO_Z');
   1
";

_def.VALIDATE:="exec('validate','xls_slo_naz',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_slo_naz',_a,_b,_c)";

~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła sprawdza, czy można poprawić/dodać rekord.
::   WE: _a [OBJECT] - Obiekt z polami odczytami z Excela.
::       _b [NUMBER] - Tryb aktualizacji: 0 - nie (dodawane są tylko nowe rekordy) / 1 - tak.
::       _c [OBJECT] - Obiekt (RESULT, ACTION, OBJ) - wynik walidacji.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_buf:=_a;
_update:=_b;
_validate:=_c;

_validate.OBJ:=obj_new('SLO_TYP','DL_NAZ','MEMO_R_CH','MEMO_Z_CH');
_validate.OBJ.SLO_TYP:=null();
_validate.OBJ.DL_NAZ:=_validate.OBJ.MEMO_R_CH:=_validate.OBJ.MEMO_Z_CH:=0;

:: Błędy krytyczne
{? _buf.SLO_TYP=''
|| _validate.msg_empty('SLO_TYP');
   _validate.RESULT:=0;
   return()
?};
{? SLO_TYP.find_key(_buf.SLO_TYP,)
|| _validate.OBJ.SLO_TYP:=SLO_TYP.ref();
   _validate.OBJ.DL_NAZ:=SLO_TYP.DL_NAZ
|| _validate.msg_norec('SLO_TYP');
   _validate.RESULT:=0;
   return()
?};
{? _buf.NAZWA=''
|| _validate.msg_empty('NAZWA');
   _validate.RESULT:=0;
   return()
?};
{? _buf.SYSTEM=''
|| _validate.msg_empty('SYSTEM');
   _validate.RESULT:=0;
   return()
?};
_dl:=MS.fld_len(SLO_NAZ,'SYSTEM');
{? +_buf.SYSTEM>_dl
|| _validate.msg_length('SYSTEM',_dl);
   _validate.RESULT:=0;
   return()
?};
{? ~(',T,N,'*',%1,'[_buf.SYSTEM])
|| _validate.msg_value('SYSTEM','Pole "%1" może przyjmować wyłącznie wartośći "T" lub "N".'[MS.name(SLO_NAZ,'SYSTEM')]);
   _validate.RESULT:=0;
   return()
?};

{? _buf.MEMO_R<>'' & _buf.SLO_TYP<>'ZAL'
|| _validate.msg_value('MEMO_R','Pole "%1" dostępne tylko dla typu "%2".'['Deklaracja dla podpisu odręcznego','ZAL']);
   _validate.RESULT:=0;
   return()
?};
{? _buf.MEMO_Z<>'' & _buf.SLO_TYP<>'ZAL'
|| _validate.msg_value('MEMO_Z','Pole "%1" dostępne tylko dla typu "%2".'['Deklaracja dla podpisu zwykłego','ZAL']);
   _validate.RESULT:=0;
   return()
?};

:: Ostrzeżenia
_dl:={? _validate.OBJ.DL_NAZ>0 || _validate.OBJ.DL_NAZ || MS.fld_len(SLO_NAZ,'NAZWA') ?};
{? +_buf.NAZWA>_dl
|| _validate.msg_length('NAZWA',_dl);
   _buf.NAZWA:=_dl+_buf.NAZWA
?};

:: Wybór akcji
{? ~SLO_NAZ.find_key(_validate.OBJ.SLO_TYP,_buf.NAZWA,)
|| _validate.OBJ.MEMO_R_CH:=(_buf.MEMO_R<>'');
   _validate.OBJ.MEMO_Z_CH:=(_buf.MEMO_Z<>'');
   _validate.ACTION:='add'
|? _validate.OBJ.MEMO_R_CH:=(_buf.MEMO_R<>SLO_NAZ.memo_txt(,1,'MEMO_R'));
   _validate.OBJ.MEMO_Z_CH:=(_buf.MEMO_Z<>SLO_NAZ.memo_txt(,1,'MEMO_Z'));
   _update & (_validate.OBJ.MEMO_R_CH | _validate.OBJ.MEMO_Z_CH | SLO_NAZ.SYSTEM<>_buf.SYSTEM)
|| _validate.ACTION:='put'
?};

~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła odpowiedzialna za utworzenie lub aktualizację rekordu.
::   WE: _a [OBJECT] - Obiekt z polami odczytami z Excela.
::       _b [NUMBER] - Tryb aktualizacji: 0 - nie (dodawane są tylko nowe rekordy) / 1 - tak.
::       _c [OBJECT] - Obiekt (RESULT, ACTION, OBJ) - wynik walidacji.
::   WY: Status operacji: 0/1
::----------------------------------------------------------------------------------------------------------------------
_buf:=_a;
_update:=_b;
_validate:=_c;

_przypisz:="
   _buf:=_a;
   _update:=_b;
   _validate:=_c;

   SLO_NAZ.SLO_TYP:=_validate.OBJ.SLO_TYP;
   SLO_NAZ.NAZWA:=_buf.NAZWA;
   SLO_NAZ.SYSTEM:=_buf.SYSTEM;

   ~~
";

_memo:="
   _buf:=_a;
   _validate:=_b;
   {? _validate.OBJ.MEMO_R_CH
   || SLO_NAZ.memo_set(_buf.MEMO_R,'MEMO_R');
      SLO_NAZ.memo_put(,'MEMO_R')
   ?};
   {? _validate.OBJ.MEMO_Z_CH
   || SLO_NAZ.memo_set(_buf.MEMO_Z,'MEMO_Z');
      SLO_NAZ.memo_put(,'MEMO_Z')
   ?}
";

_key:=_buf.SLO_TYP+'/'+_buf.NAZWA;

_ret:=1;

{? _validate.ACTION='add'
|| SLO_NAZ.blank();
   _przypisz(_buf,_update,_validate);
   {? SLO_NAZ.add(1)
   || _memo(_buf,_validate)
   || _ret:=0;
      _validate.msg_insert(_key)
   ?}
|? _validate.ACTION='put'
|| {? SLO_NAZ.SYSTEM<>_buf.SYSTEM
   || SLO_NAZ.SYSTEM:=_buf.SYSTEM;
      {? ~SLO_NAZ.put(1)
      || _ret:=0;
         _validate.msg_update(_key)
      ?}
   ?};
   {? _ret
   || _memo(_buf,_validate)
   ?}
?};

_ret

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 bf8ab43977277111f0d46ca5525befbd826ae4874d46caf6cc386cf53603ca0c4d5a232b289cc702357cace26802b8a5a69c321ed4ae56d6ff859da4d9c8a9437bfef802094670d1130250e55105455e45482ed4a9054154962f47ffafd76c540e090f81d7cdc885ba9d1dc013a9dca0b5a532bf0dc702639fbf98b7004b656c
