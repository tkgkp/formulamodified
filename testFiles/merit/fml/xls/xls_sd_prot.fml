:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_sd_prot.fml
:: Utworzony: MicKoc 17.12.2021
:: Autor: MicKoc
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu konfiguracji danych chronionych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='SD_PROT';
_def.FUNPAR:='ZWS_PAR_ASDZ';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_sd_zes_xlsx','xls__init');
_def.SHEET:='Dane chronione=1,1';
_def.NAME:='Dane chronione'@;
_def.DESC:='Dane chronione';
_def.ADD_ROWS:=0;
_def.HIDDEN:='T';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="SD_PROT";

: prolog
_def.BEFORE:="
   SD_PROT.cntx_psh();
   SD_PROT.f_clear();
   SD_PROT.index('UNIQ');
   SD_WREK.prefix();
   SD_WREK.cntx_psh();
   SD_WREK.index('KOD');
   SD_WREK.prefix();
   ~~
";

: epilog
_def.AFTER:="
   SD_PROT.cntx_pop();
   SD_WREK.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('SD_WREK', MS.name(SD_PROT,'SD_WREK'),0,, MS.comment(SD_PROT,'SD_WREK'),type_of(''));
   _env.define('TAB_A',   MS.name(SD_PROT,'TAB_A'),0,,   MS.comment(SD_PROT,'TAB_A'));
   _env.define('TAB_O',   MS.name(SD_PROT,'TAB_O'),0,,   MS.comment(SD_PROT,'TAB_O'));
   _env.define('FLD_A',   MS.name(SD_PROT,'FLD_A'),0,,   MS.comment(SD_PROT,'FLD_A'));
   _env.define('FLD_O',   MS.name(SD_PROT,'FLD_O'),0,,   MS.comment(SD_PROT,'FLD_O'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.SD_WREK.VALUE:=SD_PROT.SD_WREK().KOD;
   _buf.TAB_A.VALUE:=SD_PROT.TAB_A;
   _buf.TAB_O.VALUE:=SD_PROT.TAB_O;
   _buf.FLD_A.VALUE:=SD_PROT.FLD_A;
   _buf.FLD_O.VALUE:=SD_PROT.FLD_O;
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_sd_prot',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_sd_prot',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.SD_WREK=''   || 'SD_WREK'
   |? _buf.TAB_A=''     || 'TAB_A'
   |? _buf.TAB_O=''     || 'TAB_O'
   |? _buf.FLD_A=''     || 'FLD_A'
   |? _buf.FLD_O=''     || 'FLD_O'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

:: brak w definicji
{? var_pres(_buf.TAB_A)<>type_of(SYSLOG)
|| _val.msg_value(_buf.TAB_A,'"%1" nie jest akronimem tabeli.'[_buf.TAB_A]);
   _val.RESULT:=0;
   return()
?};
{? var_pres(_buf.FLD_A,($(_buf.TAB_A))())<0
|| _val.msg_value(_buf.TAB_A+'.'+_buf.FLD_A,'"%1" nie jest polem tabeli "%2".'@[_buf.FLD_A,_buf.TAB_A]);
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(SD_WREK,'KOD');
{? +_buf.SD_WREK>_max
|| _val.msg_length('SD_WREK',_max);
   _buf.SD_WREK:=_max+_buf.SD_WREK
?};
_max:=MS.fld_len(SD_PROT,'TAB_A');
{? +_buf.TAB_A>_max
|| _val.msg_length('TAB_A',_max);
   _buf.TAB_A:=_max+_buf.TAB_A
?};
_max:=MS.fld_len(SD_PROT,'TAB_O');
{? +_buf.TAB_O>_max
|| _val.msg_length('TAB_O',_max);
   _buf.TAB_O:=_max+_buf.TAB_O
?};
_max:=MS.fld_len(SD_PROT,'FLD_A');
{? +_buf.FLD_A>_max
|| _val.msg_length('FLD_A',_max);
   _buf.FLD_A:=_max+_buf.FLD_A
?};
_max:=MS.fld_len(SD_PROT,'FLD_O');
{? +_buf.FLD_O>_max
|| _val.msg_length('FLD_O',_max);
   _buf.FLD_O:=_max+_buf.FLD_O
?};

: weryfikacja spójności referencyjnej
_rek:=null;
{? SD_WREK.find_key(_buf.SD_WREK,)
|| _rek:=SD_WREK.ref()
|| _val.msg_norec('SD_WREK');
   _val.RESULT:=0;
   return()
?};

_ref:=null;
SD_PROT.index('UNIQ');
{? SD_PROT.find_key(_rek,_buf.TAB_A,_buf.FLD_A,)
|| _ref:=SD_PROT.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 - %2.%3'[_a.SD_WREK,_a.TAB_A,_a.FLD_A]",
   'SD_WREK',_rek
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [22.26]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,SD_PROT,"
   _a.SD_WREK:=_c.SD_WREK;
   _a.TAB_A:=_b.TAB_A;
   _a.TAB_O:=_b.TAB_O;
   _a.FLD_A:=_b.FLD_A;
   _a.FLD_O:=_b.FLD_O;
   ~~
");
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 5f6998d0f794e5ae9944e9ea7c52327da03a40b29c9c0e01ee2f8dc90eae4a15c5f80dccfda35d6b318263dc6070146540ba03fa5ad09328b58e7cb503d19c25c71fa4ad350d34b84c6c13160d11454905a1fe0cc8b29cd4db549a5f9e6ac23bc91b89eb0586dcb5c9b530f519a35c5e5fd34ec234645dbeef4f57abd2ff2a09
