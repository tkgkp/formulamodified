:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_kot_jm.fml
:: Utworzony: 20.04.2023
:: Autor: IS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu pozycji Kontrola trzeźwości - Jednostki miary
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='KOT_JM';
_def.FUNPAR:='ZWS_PAR_PKJM';
_def.DOMAIN:=exec('name','#b_domain','PKD');
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.SHEET:='Jednostki miary kontroli trzeź.=1,1';
_def.NAME:='Jednostki miary kontroli trzeź.'@;
_def.DESC:='Jednostki miary kontroli trzeźwości';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="KOT_JM";

: prolog
_def.BEFORE:="
   JM.cntx_psh();
   JM.prefix();
   SLO_KOD.cntx_psh();
   SLO_KOD.prefix();
   KOT_JM.cntx_psh();
   KOT_JM.index('NUMER');
   KOT_JM.prefix();
   ~~
";

: epilog
_def.AFTER:="
   KOT_JM.cntx_pop();
   SLO_KOD.cntx_pop();
   JM.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _tStr:=type_of('');
   _tInt:=type_of(0);
   _env.define('LP',       MS.name(KOT_JM,'LP'),1,,       MS.comment(KOT_JM,'LP'),       _tInt,0);
   _env.define('KOT_RODZ', MS.name(KOT_JM,'KOT_RODZ'),1,, MS.comment(KOT_JM,'KOT_RODZ'), _tStr);
   _env.define('JM',       MS.name(KOT_JM,'JM'),1,,       MS.comment(KOT_JM,'JM'),       _tStr);
   _env.define('SJM',      MS.name(KOT_JM,'SJM'),1,,      MS.comment(KOT_JM,'SJM'),      _tStr);
   _env.define('TYP',      MS.name(KOT_JM,'TYP'),1,,      MS.comment(KOT_JM,'TYP'),      _tStr);
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.LP.VALUE:=KOT_JM.LP;
   _buf.KOT_RODZ.VALUE:=KOT_JM.KOT_RODZ().KOD;
   _buf.JM.VALUE:=KOT_JM.JM().KOD;
   _buf.SJM.VALUE:=KOT_JM.SJM;
   _buf.TYP.VALUE:=KOT_JM.TYP;
   _env.write_async('SLO_KOD',KOT_JM.KOT_RODZ);
   _env.write_async('JM',KOT_JM.JM);
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_kot_jm',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_kot_jm',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.KOT_RODZ='' || 'KOT_RODZ'
   |? _buf.JM=''       || 'JM'
   |? _buf.TYP=''      || 'TYP'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? ('NT'*_buf.TYP)=0
|| _val.msg_inset('TYP','N','T');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(KOT_JM,'SJM');
{? +_buf.SJM>_max
|| _val.msg_length('SJM',_max);
   _buf.SJM:=_max+_buf.SJM
?};
_max:=MS.fld_len(SLO_KOD,'KOD');
{? +_buf.KOT_RODZ>_max
|| _val.msg_length('KOT_RODZ',_max);
   _buf.KOT_RODZ:=_max+_buf.KOT_RODZ
?};
_max:=MS.fld_len(JM,'KOD');
{? +_buf.JM>_max
|| _val.msg_length('JM',_max);
   _buf.JM:=_max+_buf.JM
?};

{? (_kotRodz:=exec('kod','ext_slo','KOT_RODZ',_buf.KOT_RODZ))=null
|| _val.msg_norec('KOT_RODZ');
   _val.RESULT:=0;
   return()
?};

_jm:=null();
{? _buf.JM<>''
|| {? ~JM.find_tab(,
         'KOD',,'=',_buf.JM
      )
   || _val.msg_norec('JM');
      _val.RESULT:=0;
      return()
   || _jm:=JM.ref()
   ?}
?};
{? KOT_JM.find_tab(,'LP',,'=',_buf.LP,'JM',,'<>',_jm) |
   KOT_JM.find_tab(,'LP',,'<>',_buf.LP,'JM',,'=',_jm)
|| _val.msg_unique();
   _val.RESULT:=0;
   return()
?};

: weryfikacja spójności referencyjnej
_ref:=null;
{? KOT_JM.find_tab(,
      'LP',,'=',_buf.LP
   )
|| _ref:=KOT_JM.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 %2'[$_a.LP,_a.JM]",
   'JM',_jm,
   'KOT_RODZ',_kotRodz
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,KOT_JM,"
   _a.LP:=_b.LP;
   _a.KOT_RODZ:=_c.KOT_RODZ;
   _a.JM:=_c.JM;
   _a.SJM:=_b.SJM;
   _a.TYP:=_b.TYP;
   ~~
");
~~

:Sign Version 2.0 jowisz:1045 2023/07/21 13:25:34 b9a8c9a8e6eda513ba119be7ceb23c65edb7908ee8e7703e371a9cdfcc339c0d487c8410f085edc490498e5e8c2c80f3f9875f97d2ac23df77fb5384196d4d327b8912fdab6701fb669fd504f13b655c010b32a82f3d8d4142a17581b6ad5a78edc359f1d1ee3b75b39f22c048fb9697a1de7874baaca916741e084f775ae070
