:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_sd_wpar.fml
:: Utworzony: 12.03.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu konfiguracji
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='SD_WPAR';
_def.FUNPAR:='ZWS_PAR_ASDZ';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_sd_zes_xlsx','xls__init');
_def.SHEET:='Parametry zestawów=1,1';
_def.NAME:='Parametry zestawów danych'@;
_def.DESC:='Paramatry zestawów danych';
_def.ADD_ROWS:=0;
_def.HIDDEN:='T';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="SD_WPAR";

: prolog
_def.BEFORE:="
   SD_WPAR.cntx_psh();
   SD_WPAR.f_clear();
   SD_WPAR.index('KOD');
   SD_WPAR.clear();
   SD_WREK.cntx_psh();
   SD_WREK.index('KOD');
   SD_WREK.prefix();
   ~~
";

: epilog
_def.AFTER:="
   SD_WREK.cntx_pop();
   SD_WPAR.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('SYSTEM',  MS.name(SD_WPAR,'SYSTEM'),0,,  MS.comment(SD_WPAR,'SYSTEM'));
   _env.define('KOD',     MS.name(SD_WPAR,'KOD'),0,,     MS.comment(SD_WPAR,'KOD'));
   _env.define('SD_WREK', MS.name(SD_WPAR,'SD_WREK'),0,, MS.comment(SD_WPAR,'SD_WREK'),type_of(''));
   _env.define('NUMER',   MS.name(SD_WPAR,'NUMER'),0,,   MS.comment(SD_WPAR,'NUMER'),,0);
   _env.define('SYMBOL',  MS.name(SD_WPAR,'SYMBOL'),0,,  MS.comment(SD_WPAR,'SYMBOL'));
   _env.define('NAZWA',   MS.name(SD_WPAR,'NAZWA'),0,,   MS.comment(SD_WPAR,'NAZWA'));
   _env.define('OPIS',    MS.name(SD_WPAR,'OPIS'),0,,    MS.comment(SD_WPAR,'OPIS'));
   _env.define('WIDOCZNY',MS.name(SD_WPAR,'WIDOCZNY'),0,,MS.comment(SD_WPAR,'WIDOCZNY'));
   _env.define('WYMAGANY',MS.name(SD_WPAR,'WYMAGANY'),0,,MS.comment(SD_WPAR,'WYMAGANY'));
   _env.define('TYP',     MS.name(SD_WPAR,'TYP'),0,,     MS.comment(SD_WPAR,'TYP'));
   _env.define('DLUGOSC', MS.name(SD_WPAR,'DLUGOSC'),0,, MS.comment(SD_WPAR,'DLUGOSC'),,0);
   _env.define('PRECYZJA',MS.name(SD_WPAR,'PRECYZJA'),0,,MS.comment(SD_WPAR,'PRECYZJA'),,0);
   _env.define('OKIENKO', MS.name(SD_WPAR,'OKIENKO'),0,, MS.comment(SD_WPAR,'OKIENKO'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="exec('export','xls_sd_wpar',_a,_b)";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_sd_wpar',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_sd_wpar',_a,_b,_c)";
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Ustawia wartości w polach bufora danych i asynchronicznie zapisuje powiązane dane.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_buf:=_b;
_buf.SYSTEM.VALUE:=SD_WPAR.SYSTEM;
_buf.KOD.VALUE:=SD_WPAR.KOD;
_buf.SD_WREK.VALUE:=SD_WPAR.SD_WREK().KOD;
_buf.NUMER.VALUE:=SD_WPAR.NUMER;
_buf.SYMBOL.VALUE:=SD_WPAR.SYMBOL;
_buf.NAZWA.VALUE:=SD_WPAR.NAZWA;
_buf.OPIS.VALUE:=SD_WPAR.memo_txt(,1,'OPIS');
_buf.WIDOCZNY.VALUE:=SD_WPAR.WIDOCZNY;
_buf.WYMAGANY.VALUE:=SD_WPAR.WYMAGANY;
_buf.TYP.VALUE:=SD_WPAR.TYP;
_buf.DLUGOSC.VALUE:=SD_WPAR.DLUGOSC;
_buf.PRECYZJA.VALUE:=SD_WPAR.PRECYZJA;
_buf.OKIENKO.VALUE:=SD_WPAR.memo_txt(,1,'OKIENKO');

:: formuły parametru
SD_WFML.cntx_psh();
SD_WFML.index('NUMER');
SD_WFML.prefix(SD_WPAR.ref());
_loop:=SD_WFML.first();
{!
|? _loop
|! _env.write_async('SD_WFML',SD_WFML.ref());
   _loop:=SD_WFML.next()
!};
SD_WFML.cntx_pop();
1


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.SYSTEM=''   || 'SYSTEM'
   |? _buf.KOD=''      || 'KOD'
   |? _buf.SD_WREK=''  || 'SD_WREK'
   |? _buf.SYMBOL=''   || 'SYMBOL'
   |? _buf.NAZWA=''    || 'NAZWA'
   |? _buf.WIDOCZNY='' || 'WIDOCZNY'
   |? _buf.WYMAGANY='' || 'WYMAGANY'
   |? _buf.TYP=''      || 'NAZWA'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

:: błędne wartości
{? ('TN'*(1+_buf.SYSTEM))=0
|| _val.msg_inset('SYSTEM','T','N');
   _val.RESULT:=0;
   return()
?};
{? ('TN'*(1+_buf.WIDOCZNY))=0
|| _val.msg_inset('WIDOCZNY','T','N');
   _val.RESULT:=0;
   return()
?};
{? ('TN'*(1+_buf.WYMAGANY))=0
|| _val.msg_inset('WYMAGANY','T','N');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(SD_WPAR,'SYSTEM');
{? +_buf.SYSTEM>_max
|| _val.msg_length('SYSTEM',_max);
   _buf.SYSTEM:=_max+_buf.SYSTEM
?};
_max:=MS.fld_len(SD_WPAR,'KOD');
{? +_buf.KOD>_max
|| _val.msg_length('KOD',_max);
   _buf.KOD:=_max+_buf.KOD
?};
_max:=MS.fld_len(SD_WREK,'KOD');
{? +_buf.SD_WREK>_max
|| _val.msg_length('SD_WREK',_max);
   _buf.SD_WREK:=_max+_buf.SD_WREK
?};
_max:=MS.fld_len(SD_WPAR,'SYMBOL');
{? +_buf.SYMBOL>_max
|| _val.msg_length('SYMBOL',_max);
   _buf.SYMBOL:=_max+_buf.SYMBOL
?};
_max:=MS.fld_len(SD_WPAR,'NAZWA');
{? +_buf.NAZWA>_max
|| _val.msg_length('NAZWA',_max);
   _buf.NAZWA:=_max+_buf.NAZWA
?};
_max:=MS.fld_len(SD_WPAR,'WIDOCZNY');
{? +_buf.WIDOCZNY>_max
|| _val.msg_length('WIDOCZNY',_max);
   _buf.WIDOCZNY:=_max+_buf.WIDOCZNY
?};
_max:=MS.fld_len(SD_WPAR,'WYMAGANY');
{? +_buf.WYMAGANY>_max
|| _val.msg_length('WYMAGANY',_max);
   _buf.WYMAGANY:=_max+_buf.WYMAGANY
?};

: weryfikacja spójności referencyjnej
_rek:=null;
{? SD_WREK.find_key(_buf.SD_WREK,)
|| _rek:=SD_WREK.ref()
|| _val.msg_norec('SD_WREK');
   _val.RESULT:=0;
   return()
?};

_ref:=null;
{? (SD_WPAR.index('KOD'); SD_WPAR.find_key(_buf.KOD,)) |
   (SD_WPAR.index('SYMBOL'); SD_WPAR.find_key(_rek,_buf.SYMBOL,))
|| _ref:=SD_WPAR.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1'[_a.KOD]",
   'SD_WREK',_rek
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,SD_WPAR,"
   _a.SYSTEM:=_b.SYSTEM;
   _a.KOD:=_b.KOD;
   _a.SD_WREK:=_c.SD_WREK;
   _a.NUMER:=_b.NUMER;
   _a.SYMBOL:=_b.SYMBOL;
   _a.NAZWA:=_b.NAZWA;
   _a.memo_set(_b.OPIS,'OPIS');
   _a.WIDOCZNY:=_b.WIDOCZNY;
   _a.WYMAGANY:=_b.WYMAGANY;
   _a.TYP:=_b.TYP;
   _a.DLUGOSC:=_b.DLUGOSC;
   _a.PRECYZJA:=_b.PRECYZJA;
   _a.memo_set(_b.OKIENKO,'OKIENKO');
   ~~
",'OPIS,OKIENKO');
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 d33cebb87c85999934f7451429d036b2fcce91d856ab460236688569fda046c35566acf35d2dd0a6eb93871822e6b3ee3f94bb19da00c2cd0e2887c730a8852df21d2bbe9e206cf50da42d6b9d31d9f79f111e6104204ecd2364492015e71e822bc6c870999e8d60ee9c7b40760ed9db6074fec0c5a2f1da0e654ad9fa0d0eda
