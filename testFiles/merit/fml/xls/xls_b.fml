:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_b.fml
:: Utworzony: 30.08.2018
:: Autor: IFZ
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu tabel wspólnych: banków i ich oddziałów oraz rachunków bankowych lic.
::======================================================================================================================


\filename
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Nazwa pliku do eksportu struktur księgowych
::  OLD: \filename/xls_b.fml
::----------------------------------------------------------------------------------------------------------------------
'banki i oddziały banków.xlsx'


\B
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  OLD: \B/xls_b.fml
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='B';
_def.DOMAIN:=exec('name','#b_domain','ZWS');

_def.FILE:=exec('filename','xls_b');
_def.SHEET:='Oddziały banków=1,1';
_def.NAME:='Oddziały banków';
_def.DESC:='Oddziały banków';
_def.FUNPAR:='ZWS_PAR_KBAN';
_def.MULTIFIR:='T';

_def.PREFIX:="B.index('BANKID');B.prefix()";
_def.TABLE:="B";
_def.FIELDS:="exec('B_fld','xls_b',_a)";

_def.BEFORE:="B.cntx_psh()";
_def.AFTER:="B.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('B_exp','xls_b',_a,_b)";
_def.VALIDATE:="exec('B_valid','xls_b',_a,_b,_c)";
_def.IMPORT:="exec('B_imp','xls_b',_a,_b,_c)";
~~


\B_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  OLD: \B_fld/xls_b.fml
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('KOD','Kod księgowy',1,,'Kod oddziału banku dla potrzeb systemu FK',2);
_def.define('NB','Nazwa oddziału banku',1,,'Pełna nazwa oddziału banku',2);
_def.define('K','Kod',1,,'Adres oddziału banku - kod pocztowy',2);
_def.define('UL','Ulica',1,,'Adres oddziału banku - ulica',2);
_def.define('M','Miasto',1,,'Adres oddziału banku - miejscowość',2);
_def.define('NUMER','Numer',1,,'Numer rozliczeniowy oddziału banku',2);
_def.define('SWIFT','Kod SWIFT (BIC) banku zagranicznego',1,,'Kod SWIFT (BIC) dla przelewów walutowych',2);
_def.define('KODISO','Kraj oddziału banku',1,,'Wskazanie na kraj oddziału banku na potrzeby IBAN',2);
_def.define('STATUS','Status',1,,'Status oddziału: A - archiwalny, B - bieżący (aktywny)',2);
_def.define('BANORG','Bank',1,,'Bank (kapitałowa grupa bankowa)',1,0);
~~


\B_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::  OLD: \B_exp/xls_b.fml
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_tab:=_excel.table();

_result:=0;
B.prefix();
_table.KOD.VALUE:=B.KOD;
_table.NB.VALUE:=B.NB;
_table.K.VALUE:=B.K;
_table.UL.VALUE:=B.UL;
_table.M.VALUE:=B.M;
_table.NUMER.VALUE:=B.NUMER;
_table.SWIFT.VALUE:=B.SWIFT;
_table.KODISO.VALUE:=B.KODISO().SYM;
_table.STATUS.VALUE:=B.STATUS;
_table.BANORG.VALUE:=B.BANORG().ID; _excel.write_async('BANORG',B.BANORG);
_result:=1;
_result


\B_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
{? type_of(_table.BANORG)=type_of('') || _tbanorg:=#_table.BANORG || _tbanorg:=_table.BANORG ?};
_banorg:=exec('FindInSet','#table','BANORG','NDX1',_tbanorg,,,);
{? _banorg=null()
|| _result.MSG:={? _tbanorg=0
                || 'Nie podano identyfikatora banku '@
                || 'Nie znaleziono banku o identyfikatorze %1.'@[$_tbanorg]
                ?};
   _result.RESULT:=0
?};
_kraj:=exec('FindInSet','#table','KRAJE','KRAJE',_table.KODISO,,,1);
{? _kraj=null()
|| _result.MSG:={? _table.KODISO=''
                || 'Nie podano symbolu kraju '@
                || 'Nie znaleziono kraju o symbolu %1.'@[_table.KODISO]
                ?};
   _result.RESULT:=0
?};
_result.RESULT:=1;
B.index('BANK');
B.prefix(_table.NB, _table.NUMER);
{? B.first()
|| {? _mode=0
   || _result.RESULT:=0
   || _result.ACTION:='put'
   ?}
|| _result.ACTION:='add'
?};
 {? _result.RESULT=1
 || {? _result.ACTION='add' || B.blank(1) ?};
    B.KOD:=_table.KOD;
    B.NB:=_table.NB;
    B.K:=_table.K;
    B.UL:=_table.UL;
    B.M:=_table.M;
    B.NUMER:=_table.NUMER;
    B.SWIFT:=_table.SWIFT;
    B.KODISO:=_kraj;
    B.STATUS:=_table.STATUS;
    B.BANORG:=_banorg;
    {? exec('spr_b','hbn')<>'' || _result.RESULT:=0 ?}
?};
~~


\B_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukcess
::  OLD: \B_imp/xls_b.fml
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=B.add(1)
   |? _validate.ACTION='put'
   || _result:=B.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie oddziału banku nie powiodło się.'@
   || _validate.MSG:='Poprawa oddziału banku nie powiodła się.'@
   ?}
?};
_result


\BANORG
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  OLD: \BANORG/xls_b.fml
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='BANORG';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('filename','xls_b');
_def.SHEET:='Banki=1,1';
_def.NAME:='Banki krajowe i oddziały instytucji kredytowych';
_def.DESC:='Banki krajowe i oddziały instytucji kredytowych';
_def.FUNPAR:='ZWS_PAR_KBAN';
_def.MULTIFIR:='T';

_def.PREFIX:="BANORG.index('NDX1');BANORG.prefix()";
_def.TABLE:="BANORG";
_def.FIELDS:="exec('BANORG_fld','xls_b',_a)";

_def.BEFORE:="BANORG.cntx_psh()";
_def.AFTER:="BANORG.cntx_pop()";
_def.SELECT:="exec('BANORG_select','xls_b',_a)";

_def.EXPORT:="exec('BANORG_exp','xls_b',_a,_b)";
_def.VALIDATE:="exec('BANORG_valid','xls_b',_a,_b,_c)";
_def.IMPORT:="exec('BANORG_imp','xls_b',_a,_b,_c)";
~~


\BANORG_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::  OLD: \SEZ_select/xls_st.fml
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'ID','INTEGER','Identyfikator'
               ,'REF','STRING[16]','SQL ref'
               ,'SELECTED','STRING[1]','Czy wybrano'
               ,'NAZ','STRING[40]','Pełna nazwa banku');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'NAZ',,);

BANORG.cntx_psh();
BANORG.index('NDX1');
BANORG.prefix();
{? BANORG.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$BANORG.ref();
      _selected.prefix($BANORG.ref());
      {? _selected.first() || _tab.SELECTED:='T' || _tab.SELECTED:='N' ?};
      _tab.ID:=BANORG.ID;
      _tab.NAZ:=BANORG.NAZ;
      _tab.add();
      BANORG.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'ID[6],NAZ[40]',20,'Wybór organizacji bankowych do eksportu'@,1);
{? _result>0
|| _selected.erase();
   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {! |? _selected.prefix(_tab.REF);
            {? _selected.first()=0
            || _selected.blank();
               _selected.REF:=_tab.REF;
               _selected.add()
            ?};
            _tab.next()
      !}
   ?}
?};
BANORG.cntx_pop();

_result


\BANORG_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  OLD: \BANORG_fld/xls_b.fml
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('NAZ','Pełna nazwa banku',1,,'Pełna nazwa banku',2);
_def.define('KOD','Kod',1,,'Literowy symbol banku',2);
_def.define('KODZ','Bank zrzeszający',1,,'Kod banku zrzeszającego',2);
_def.define('ID','Identyfikator banku',1,,'Unikalny Identyfikator banku',1,0);
_def.define('NRCB','Numer rozliczeniowy centrali banku',1,,'Numer rozliczeniowy centrali banku będący jego jednozn. ide',2);
_def.define('AKTYWNY','Aktywny',1,,'status: T- aktywny, N - nieaktywny',2);
~~


\BANORG_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async()l
::  OLD: \BANORG_exp/xls_b.fml
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_tab:=_excel.table();

_result:=0;
BANORG.prefix();
_table.KOD.VALUE:=BANORG.KOD;
_table.NAZ.VALUE:=BANORG.NAZ;
_table.KOD.VALUE:=BANORG.KOD;
_table.KODZ.VALUE:=BANORG.KODZ;
_table.ID.VALUE:=BANORG.ID;
_table.NRCB.VALUE:=BANORG.NRCB;
_table.AKTYWNY.VALUE:=BANORG.AKTYWNY;

:: eksport oddziałów banków związanych z bieżącą organizacją bankową
B.cntx_psh();
B.index('BANKST2');
B.prefix(BANORG.ref());
{? B.first()
|| {!
   |? _excel.write_async('B',B.ref());
      B.next()
   !}
?};
B.cntx_pop();

_result:=1;
_result


\BANORG_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukcml
::  OLD: \BANORG_imp/xls_b.fml
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=BANORG.add(1)
   |? _validate.ACTION='put'
   || _result:=BANORG.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie banku nie powiodło się.'@
   || _validate.MSG:='Poprawa banku nie powiodła się.'@
   ?}
?};
_result


\BANORG_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IFZ [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  OLD: \B_valid/xls_b.fml
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;
BANORG.index('NDX1');
{? type_of(_table.ID)=type_of('') || _id:=#_table.ID || _id:=_table.ID ?};
BANORG.prefix(_id);
{? BANORG.first()
|| {? _mode=0
   || _result.RESULT:=0
   || _result.ACTION:='put'
   ?}
|| _result.ACTION:='add'
?};
{? _result.RESULT=1
|| {? _result.ACTION='add' || BANORG.blank(1) ?};
    BANORG.NAZ:=_table.NAZ;
    BANORG.KOD:=_table.KOD;
    BANORG.KODZ:=_table.KODZ;
    BANORG.ID:=_id;
    BANORG.NRCB:=_table.NRCB;
    BANORG.AKTYWNY:=_table.AKTYWNY;
    {? __CHK.record(BANORG,,'KOD','NAZ')<>'' || _result.RESULT:=0 ?}
?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 73c0b4c7dfb7b3eb53aeb8387535f780e12481f642fba7d406c897a4cb6dd78b37b75618fbfa464db34231caa34b83317a014b3ba72b477e7a394b8a168b792c419f72df6e39cc64e43097842309d6de050edd4fe4517700b8424986620697b30e1c3b82996624846ab0eab325605d08b0ed49fa6b9cec61d5a0063eeedd6afb
