:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_b_actrop.fml
:: Utworzony: 22.11.2018
:: Autor: MW
:: Systemy:
::======================================================================================================================
:: Zawartość:
::======================================================================================================================

\typ_uprawnienia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Wartość pola "TYP" (RUNMICRO / TAKOVER)
::   WE: _a - R / T
::----------------------------------------------------------------------------------------------------------------------
{? _> 0 & _a = 'T'
||
   exec('typ_takeover','#b_action')
||
   exec('typ_runmicro','#b_action')
?}


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - obiekt z definicją, który należy zasilić - wynik działania exec('args_init','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.DOMAIN:=exec('name','#b_domain','ZPR');
_def.FUNPAR:='';
_def.FILE:='procesy.xlsx';

_def.TABLE:="exec('table','xls_b_actrop')";
_def.FIELDS:="exec('fields','xls_b_actrop',_a)";

_def.BEFORE:="__TASK:=app_info('task');B_ACTROP.cntx_psh()";
_def.AFTER:="VAR_DEL.delete('__TASK');B_ACTROP.cntx_pop()";

_def.IMPORT:="exec('import','xls_b_actrop',_a,_b,_c)";
~~


\init_r
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - obiekt z definicją, który należy zasilić - wynik działania exec('args_init','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
exec('init','xls_b_actrop',_def);
_def.ID:='B_ACTROP_R';
_def.SHEET:='Czynności,konfig.-role (1)'@+'=1,3';
_def.NAME:='Konfiguracja czynności (uruchamianie nieprocesowe) - role'@;
_def.DESC:='Konfiguracja czynności (uruchamianie nieprocesowe) - role'@;
_def.PREFIX:="exec('prefix','xls_b_actrop','R')";
_def.SELECT:="exec('select','xls_b_actrop',_a,'R')";
_def.EXPORT:="exec('export','xls_b_actrop',_a,_b,'R')";
_def.VALIDATE:="exec('validate','xls_b_actrop',_a,_b,_c,'R')";
~~


\init_t
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - obiekt z definicją, który należy zasilić - wynik działania exec('args_init','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
exec('init','xls_b_actrop',_def);
_def.ID:='B_ACTROP_T';
_def.SHEET:='Czynności,konfig.-role (2)'@+'=1,3';
_def.NAME:='Konfiguracja czynności (przejmowanie zadania) - role'@;
_def.DESC:='Konfiguracja czynności (przejmowanie zadania) - role'@;
_def.PREFIX:="exec('prefix','xls_b_actrop','T')";
_def.SELECT:="exec('select','xls_b_actrop',_a,'T')";
_def.EXPORT:="exec('export','xls_b_actrop',_a,_b,'T')";
_def.VALIDATE:="exec('validate','xls_b_actrop',_a,_b,_c,'T')";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Określa zakres eksportowanych danych
::   WE: _a - typ uprawnienia do czyności - R / T (RUNMICRO / TAKOVER)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_rodz:=exec('typ_uprawnienia','xls_b_actrop',_a);
B_ACTROP.index('UNIK');
B_ACTROP.prefix(_rodz,REF.FIRMA);
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
B_ACTROP


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Zwraca eksportowane pola tabeli i ich atrybuty w excel
::   WE: _a - obiekt z definicją pól który należy zasilić - wynik działania exec('args_fields','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('B_ROLE','Rola'@,1,,'Rola. Wymagane.'@);
_def.define('B_ACTION','Czynność'@,1,,'Czynność. Wymagane.'@);
_tooltip:='Nieredagowalne. Dla nowych wierszy może być puste'@;
_def.define('STARTD','Obowiązuje od (data)'@,0,,_tooltip,type_of(date()));
_def.define('STARTT','Obowiązuje od (czas)'@,0,,_tooltip,type_of(time()));
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól tabeli MacroBASE
::                      każdy obiekt ma taką strukturę:
::                        _obj_bridge.NAZWA_POLA.VALUE - wartość która będzie zapisana w EXCEL
::                        _obj_bridge.NAZWA_POLA.EDITABLE - czy komórka będzie edytowalna
::                        _obj_bridge.NAZWA_POLA.COLOR - kolor w formacie html czyli #ffffff
::                      Aktualny wewnętrzny obiekt można podejrzeć tu: exec('filler_obj_core','#excel_imex')
::       _c - typ uprawnienia do czyności - R / T (RUNMICRO / TAKOVER)
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_obj_bridge:=_b;
_result:=0;
{? B_ACTROP.FIRMA <> null() & B_ACTROP.B_ACTION<>null() & B_ACTROP.B_ROLE<>null()
|| _uid:=B_ACTROP.B_ACTION().UID;
   {? exec('is_def','#b_action',_uid,__TASK)>0
   || _result:=1;
      _obj_bridge.B_ROLE.VALUE:=B_ACTROP.B_ROLE().NAME;
      _excel.write_async('B_ROLE',B_ACTROP.B_ROLE);
      _obj_bridge.B_ACTION.VALUE:=_uid;
      _obj_bridge.STARTD.VALUE:=B_ACTROP.STARTD;
      _obj_bridge.STARTT.VALUE:=B_ACTROP.STARTT
   ?}
?};
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER   - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obj_new() - obiekt z resultem, wynik działania exec('args_valid','#excel_imex').
::                        Obiekt ten jest przekazywany do formuły na IMPORT. Pole RESULT decyduje czy formuła
::                        na import się wykona. Pole MSG służy to odpisania komunikatu
::       _d - typ uprawnienia do czyności - R / T (RUNMICRO / TAKOVER)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;
_rodz:=exec('typ_uprawnienia','xls_b_actrop',_d);

_can_continue:=1;
:: Walidacja wartości z Excel, czy są w nim pola których się spodziewam i czy mają dobre wartości
{? _obj.B_ROLE=''
|| _can_continue:=0;
   _result.msg_empty('B_ROLE')
?};
{? _obj.B_ACTION=''
|| _can_continue:=0;
   _result.msg_empty('B_ACTION')
?};

_firma:=REF.FIRMA;

_b_role:=null();
{? _can_continue>0
|| _b_role:=exec('FindInSet','#table','B_ROLE','UNIK',_obj.B_ROLE,_firma,,1);
   {? _b_role=null()
   || _can_continue:=0;
      _result.msg_norec('B_ROLE')
   ?}
?};

_b_action:=null();
{? _can_continue>0
|| _b_action:=exec('FindInSet','#table','B_ACTION','UNIK',_obj.B_ACTION,,,1);
   {? _b_action=null()
   || _can_continue:=0;
      _result.msg_norec('B_ACTION')
   ?}
?};

{? _can_continue>0
||
   B_ACTROP.index('UNIK');
   B_ACTROP.prefix(_rodz,_firma,_b_action,_b_role);
   {? B_ACTROP.first()=0
   || B_ACTROP.blank();
      B_ACTROP.TYP := _rodz;
      B_ACTROP.FIRMA:=_firma;
      B_ACTROP.B_ROLE:=_b_role;
      B_ACTROP.B_ACTION:=_b_action;
      B_ACTROP.STARTT:=_obj.STARTT;
      {? _obj.STARTD<>date(0,0,0)
      || B_ACTROP.STARTD:=_obj.STARTD
      || B_ACTROP.STARTD:=date();
         B_ACTROP.STARTT:=time()
      ?};
      B_ACTROP.TM_START:=exec('create','#tm_stamp',B_ACTROP.STARTD,B_ACTROP.STARTT);
      _result.ACTION:='add'
   ||
      {? _mode = 1
      || B_ACTROP.STARTT:=_obj.STARTT;
         {? _obj.STARTD<>date(0,0,0)
         || B_ACTROP.STARTD:=_obj.STARTD
         || B_ACTROP.STARTD:=date();
            B_ACTROP.STARTT:=time()
         ?}
      || _result.RESULT:=0
      ?};
      B_ACTROP.TM_START:=exec('create','#tm_stamp',B_ACTROP.STARTD,B_ACTROP.STARTT);
      _result.ACTION:='put'
   ?}
?};
{? _can_continue=0
|| _result.RESULT:=0
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt z resultem walidatora i resultem importu, wynik działania exec('args_valid','#excel_imex')
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

{? _result.ACTION='add'
||
   _result.RESULT:=B_ACTROP.add(1);
   {? _result.RESULT=0
   || _result.msg_insert('Firma %1, czynność %2, rola %3'@[_obj.FIRMA,_obj.B_ACTION,_obj.B_ROLE])
   ?}
|? _result.ACTION='put'
|| _result.RESULT:=B_ACTROP.put();
   {? _result.RESULT=0
   || _result.msg_update('Firma %1, czynność %2, rola %3'@[_obj.FIRMA,_obj.B_ACTION,_obj.B_ROLE])
   ?}
?};
~~


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::       _b - typ uprawnienia do czyności - R / T (RUNMICRO / TAKOVER)
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;
_rodz:=exec('typ_uprawnienia','xls_b_actrop',_b);

_result:=0;

_tab:=tab_tmp(1,
   'B_ROLE','STRING[255]','Rola'@
   ,'B_ACTION','STRING[255]','Czynność'@
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'@
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'B_ROLE',,,'B_ACTION',,);

B_ACTROP.cntx_psh();
B_ACTROP.index('UNIK');
B_ACTROP.prefix(_rodz,REF.FIRMA);
{? B_ACTROP.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$B_ACTROP.ref();
      _selected.prefix($B_ACTROP.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.B_ROLE:=B_ACTROP.B_ROLE().NAME;
      _tab.B_ACTION:=B_ACTROP.B_ACTION().UID;
      _tab.add();
      B_ACTROP.next()
   !}
?};

_nap := '';
{? _b = 'T'
|| _tyt := 'przejmowanie zadania'@
|| _tyt := 'uruchamianie nieprocesowe'@
?};
_result:=exec('select_action','#table',_tab,'B_ROLE,B_ACTION',30,
         'Wybór czynności i roli do eksportu'@ + ' - ' + _tyt);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
B_ACTROP.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 7280ef2572c0e6dde4441d2cabff4696e5609964e5c9a384e30b2fb17210e69e4fb238bfa33468d9c3cc702a494992312d9bb3dc032740b2b9e97e13c09fd8ddae408888677bcd4bed0c26fcb7e731017af21fd40b80bcc24fa8b0bbc223690ad929c0fcf48c889eb78a32b9a8679fa486f4a471ebf94a3b07c71f9bbdfd6d24
