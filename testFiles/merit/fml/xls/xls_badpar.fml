:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_badpar.fml
:: Utworzony: 27.07.2018
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu definicji parametrów badań
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='BADPAR';
_def.DOMAIN:=exec('name','#b_domain','LMG');
_def.FUNPAR:='ZWS_PAR_KBAD';

_def.FILE:='logistyka_badania.xlsx';
_def.SHEET:='Parametry badań=1,1';
_def.NAME:='Parametry badań'@;
_def.DESC:='Parametry badań';

_def.PREFIX:="exec('prefix','xls_badpar')";
_def.TABLE:="exec('table','xls_badpar')";
_def.FIELDS:="exec('fields','xls_badpar',_a)";

_def.BEFORE:="BADPAR.cntx_psh()";
_def.AFTER:="BADPAR.cntx_pop()";
_def.SELECT:="exec('select','xls_badpar',_a)";

_def.EXPORT:="exec('export','xls_badpar',_a,_b)";
_def.IMPORT:="exec('import','xls_badpar',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_badpar',_a,_b,_c)";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
BADPAR.index('N');
BADPAR.prefix();
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
BADPAR


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('N','Nazwa',0,,'Nazwa parametru badania - 60 znaków.');
_def.define('TYP','Typ parametru:',1,,
'Typ parametru:
(R) - liczba
(D) - data
(S) - tekst
(P) - procent
(W) - tak/nie
');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

BADPAR.index('N');
BADPAR.prefix();
{? _validate.ACTION='add'
||
   BADPAR.blank();
   BADPAR.N:=_obj.N
?};

BADPAR.TYP:=_obj.TYP;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.N.VALUE:=BADPAR.N;
_table.TYP.VALUE:=BADPAR.TYP;
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

{? (+form(_obj.N))=0        || _result.msg_empty('TYP'); _result.RESULT:=0
|? (+form(_obj.TYP))<>1     || _result.msg_empty('TYP'); _result.RESULT:=0
|? ~((';RDSPW'*_obj.TYP)>1) || _result.msg_inset('TYP','R','D','S','P','W'); _result.RESULT:=0
?};

{? _result.RESULT=1
||
   BADPAR.index('N');
   BADPAR.prefix(_obj.N,);
   {? BADPAR.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_badpar',_obj,_mode,_result)
      ?}
   || _result.ACTION:='add';
      exec('record','xls_badpar',_obj,_mode,_result)
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=BADPAR.add(1)
   |? _validate.ACTION='put'
   || _result:=BADPAR.put(1)
   ?}
?};
{? _result=0
|| _validate.MSG:={? _validate.ACTION='add'
                  || 'Dodanie parametru badań %1 nie powiodło się.'@[BADPAR.N]
                  || 'Modyfikacja parametru badań %1 nie powiodła się.'@[BADPAR.N]
                  ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'N','STRING[60]','Nazwa'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'TYP','STRING[1]','Typ');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'N',,);

BADPAR.cntx_psh();
BADPAR.index('N');
BADPAR.prefix();
{? BADPAR.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$BADPAR.ref();
      _selected.prefix($BADPAR.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.N:=BADPAR.N;
      _tab.TYP:=BADPAR.TYP;
      _tab.add();
      BADPAR.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'N,TYP',20,'Wybór parametrów badań do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
BADPAR.cntx_pop();
_result

:Sign Version 2.0 jowisz:1045 2020/04/03 17:14:07 da96a84d6c04a9c9063a1951044eb656fecc2909c90e21cacc190282791fb9f7874d1039fcf0c58170fe3ea8ebd40cf735cd2d82cb5e4f0d42fe606c74a41c6080cd73c6c06a62273a8e12999780a00db6e940477df79d483327e547a2ae869008bab6612e2010c9ef971df463f996c534a37f63abaa7dfe7488c410c7261680
