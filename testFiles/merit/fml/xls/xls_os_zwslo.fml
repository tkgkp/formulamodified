:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_os_zwslo.fml
:: Utworzony: 17.12.2021
:: Autor: DG
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu typów zwolnionego przychodu
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='OS_ZWSLO';
_def.FUNPAR:='ZWS_PAR_PZPT';
_def.DOMAIN:=exec('name','#b_domain','PKD');
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.SHEET:='Typy zwolnionego przychodu=1,1';
_def.NAME:='Typy zwolnionego przychodu'@;
_def.DESC:='Typy zwolnionego przychodu';

: źródło danych
_def.TABLE:="OS_ZWSLO";

: prolog
_def.BEFORE:="
   RA_DEF.cntx_psh();
   RA_DEF.index('SYMBOL');
   RA_DEF.prefix();
   OS_ZWSLO.cntx_psh();
   OS_ZWSLO.index('RODZAJ');
   OS_ZWSLO.prefix(exec('ref_firma','ustawienia'));
   ~~
";

: epilog
_def.AFTER:="
   OS_ZWSLO.cntx_pop();
   RA_DEF.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _tStr:=type_of('');
   _tInt:=type_of(0);
   _tDat:=type_of(date());
   _env.define('RODZAJ',  MS.name(OS_ZWSLO,'RODZAJ'),1,,  MS.comment(OS_ZWSLO,'RODZAJ'),_tStr);
   _env.define('KOD',     MS.name(OS_ZWSLO,'KOD'),1,,     MS.comment(OS_ZWSLO,'KOD'),_tStr);
   _env.define('ZDR',     MS.name(OS_ZWSLO,'ZDR'),1,,     MS.comment(OS_ZWSLO,'ZDR'),_tStr);
   _env.define('ROCZNE',  MS.name(OS_ZWSLO,'ROCZNE'),1,,  MS.comment(OS_ZWSLO,'ROCZNE'),_tStr);
   _env.define('TYP',     MS.name(OS_ZWSLO,'TYP'),1,,     MS.comment(OS_ZWSLO,'TYP'),_tStr);
   _env.define('DO_OB',   MS.name(OS_ZWSLO,'DO_OB'),1,,   MS.comment(OS_ZWSLO,'DO_OB'),_tDat);
   _env.define('PODATNIK',MS.name(OS_ZWSLO,'PODATNIK'),1,,MS.comment(OS_ZWSLO,'PODATNIK'),_tStr);
   _env.define('ROZLICZ', MS.name(OS_ZWSLO,'ROZLICZ'),1,, MS.comment(OS_ZWSLO,'ROZLICZ'),_tStr);
   _env.define('PO',      MS.name(OS_ZWSLO,'PO'),1,,      MS.comment(OS_ZWSLO,'PO'),_tStr);
   _env.define('RA_DEF',  MS.name(OS_ZWSLO,'RA_DEF'),1,,  'Unikalny symbol atrybutu',_tInt,0);
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.RODZAJ.VALUE:=OS_ZWSLO.RODZAJ;
   _buf.KOD.VALUE:=OS_ZWSLO.KOD;
   _buf.ZDR.VALUE:=OS_ZWSLO.ZDR;
   _buf.ROCZNE.VALUE:=OS_ZWSLO.ROCZNE;
   _buf.TYP.VALUE:=OS_ZWSLO.TYP;
   _buf.DO_OB.VALUE:=OS_ZWSLO.DO_OB;
   _buf.PODATNIK.VALUE:=OS_ZWSLO.PODATNIK;
   _buf.ROZLICZ.VALUE:=OS_ZWSLO.ROZLICZ;
   _buf.PO.VALUE:=OS_ZWSLO.PO;
   _buf.RA_DEF.VALUE:=OS_ZWSLO.RA_DEF().SYMBOL;
   _env.write_async('RA_DEF',exec('ra_def','xls__util'));
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_os_zwslo',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_os_zwslo',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.RODZAJ='' || 'RODZAJ'
   |? _buf.KOD=''    || 'KOD'
   |? _buf.ZDR=''    || 'ZDR'
   |? _buf.ROCZNE='' || 'ROCZNE'
   |? _buf.TYP=''      || 'TYP'
   |? _buf.PODATNIK='' || 'PODATNIK'
   |? _buf.ROZLICZ=''  || 'ROZLICZ'
   |? _buf.PO=''       || 'PO'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? ('NT'*_buf.ZDR)=0
|| _val.msg_inset('ZDR','N','T');
   _val.RESULT:=0;
   return()
|? ('NT'*_buf.ROCZNE)=0
|| _val.msg_inset('ROCZNE','N','T');
   _val.RESULT:=0;
   return()
|? ('OW'*_buf.TYP)=0
|| _val.msg_inset('TYP','O','W');
   _val.RESULT:=0;
   return()
|? ('NT'*_buf.PODATNIK)=0
|| _val.msg_inset('PODATNIK','N','T');
   _val.RESULT:=0;
   return()
|? ('NT'*_buf.ROZLICZ)=0
|| _val.msg_inset('ROZLICZ','N','T');
   _val.RESULT:=0;
   return()
|? ('NT'*_buf.PO)=0
|| _val.msg_inset('PO','N','T');
   _val.RESULT:=0;
   return()
?};

_ra_def:=null();
{? _buf.RA_DEF<>0
|| {? RA_DEF.find_key(_buf.RA_DEF,'S')
   || _ra_def:=RA_DEF.ref()
   || _val.msg_value('RA_DEF','Nie znaleziono systemowego atrybutu o symbolu %1.' [$_buf.RA_DEF]);
      _val.RESULT:=0;
      return()
   ?}
?};

: ostrzeżenia
_max:=MS.fld_len(OS_ZWSLO,'RODZAJ');
{? +_buf.RODZAJ>_max
|| _val.msg_length('RODZAJ',_max);
   _buf.RODZAJ:=_max+_buf.RODZAJ
?};
_max:=MS.fld_len(OS_ZWSLO,'KOD');
{? +_buf.KOD>_max
|| _val.msg_length('KOD',_max);
   _buf.KOD:=_max+_buf.KOD
?};

: weryfikacja spójności referencyjnej
_ref:=null;
{? OS_ZWSLO.find_tab(,
      'KOD',,'=',_buf.KOD
   )
|| _ref:=OS_ZWSLO.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 - %2'[_a.KOD,_a.RODZAJ]",
   'RA_DEF',_ra_def
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,OS_ZWSLO,"
   _a.RODZAJ:=_b.RODZAJ;
   _a.KOD:=_b.KOD;
   _a.ZDR:=_b.ZDR;
   _a.ROCZNE:=_b.ROCZNE;
   _a.TYP:=_b.TYP;
   _a.DO_OB:=_b.DO_OB;
   _a.PODATNIK:=_b.PODATNIK;
   _a.ROZLICZ:=_b.ROZLICZ;
   _a.PO:=_b.PO;
   _a.RA_DEF:=_c.RA_DEF;
   ~~
");
~~

:Sign Version 2.0 jowisz:1045 2023/07/21 13:25:34 d4ec3e402e9f8b1d6873ee4000929f9d20c7e44ff9d7fdce6c79f98fa65fdc36f5e0a974198c22cd940b243cefdd8ff11a45bec29172ae2c2a74b6b9b22405fd8a2b62c336f6303668fa5eefd73f95ded7b14b25b9489f13147d0822658749f95aff0579e2e8cc690d9ccf062fc6318a387eb946d738a43e90e5a3c87211d383
