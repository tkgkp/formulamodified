:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_tpar.fml
:: Utworzony: 12.08.2020
:: Autor: AKUL
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu parametrów kart technologicznych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TPAR';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='TKTL';
_def.HIDDEN:='T';
_def.SKIP:='T';
_def.ADD_ROWS:=0;

_def.FILE:='produkcja_technologie.xlsx';
_def.SHEET:='Parametry karty'@+'=1,1';
_def.NAME:='Parametry karty technologicznej'@;
_def.DESC:='Parametry karty technologicznej'@;

_def.PREFIX:="TPAR.index('NN'); TPAR.prefix()";
_def.TABLE:="TPAR";
_def.FIELDS:="exec('fields','xls_tpar',_a)";

_def.BEFORE:="TPAR.cntx_psh()";
_def.AFTER:="{? _a.is_import() || exec('tktl_import_clear','tech_common',_a.excel) ?};TPAR.cntx_pop()";

_def.EXPORT:="exec('export','xls_tpar',_a,_b)";
_def.VALIDATE:="exec('validate','xls_tpar',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_tpar',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_edit:=0;
_def.define('TKTL_NRK','Nr karty'@,_edit);
_def.define('TKTL_WER','Wersja karty'@,_edit);
_def.define('NRP','Numer'@,_edit,,,,0);
_def.define('OPIS','Opis'@,_edit);
_def.define('DEFAULT1','Wartość domyślna'@,_edit,,'Wartość domyślna parametru');
_def.define('SLU','Nazwa słownika'@,_edit,,'Nazwa powiązanego słownika użytkownika');
_def.define('SLO','Pozycja słownika'@,_edit,,'Kod pozycji słownika użytkownika');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TPAR.prefix();
{? _validate.ACTION='add'
|| TPAR.blank();
   TPAR.NRK:=_validate.OBJ.NRK;
   TPAR.NRP:=_obj.NRP
?};
TPAR.OPIS:=_obj.OPIS;
TPAR.DEFAULT1:=_obj.DEFAULT1;
TPAR.SLU:=_validate.OBJ.SLU;
TPAR.SLO:=_validate.OBJ.SLO;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.TKTL_NRK.VALUE:=TPAR.NRK().NRK;
_table.TKTL_WER.VALUE:=TPAR.NRK().WER;
_table.NRP.VALUE:=TPAR.NRP;
_table.OPIS.VALUE:=TPAR.OPIS;
_table.DEFAULT1.VALUE:=TPAR.DEFAULT1;
_table.SLU.VALUE:=TPAR.SLU().NAZ;
{? TPAR.SLU<>null() || _excel.write_async('SLU',TPAR.SLU) ?};
_table.SLO.VALUE:=TPAR.SLO().KOD;

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('NRK','SLU','SLO');
_imp_err:=0;
_check:=1;

:: Sprawdzam czy do karty zgłoszony został błąd
{? __TKTL_ERR.find_key(_obj.TKTL_NRK,_obj.TKTL_WER,)
|| _imp_err:=1
?};
:: Jeżeli wcześniej został zgłoszony błąd to wychodzę wcześniej bez dodatkowej walidacji
{? _imp_err>0
|| _result.RESULT:=0
||
:: Wyszukanie refów powiązanych rekordów
   _result.OBJ.NRK:={? _obj.TKTL_NRK='' | _obj.TKTL_WER=''
                    || null()
                    || exec('FindInSet','#table','TKTL','NRK',_obj.TKTL_WER,'T',,1,_obj.TKTL_NRK,null())
                    ?};
   _result.OBJ.SLU:={? _obj.SLU=''
                    || null()
                    || exec('FindInSet','#table','SLU','NAZ',_obj.SLU,,,1,,null())
                    ?};
   _result.OBJ.SLO:={? _obj.SLO=''
                    || null()
                    || exec('FindInSet','#table','SLO','SL',_obj.SLO,_result.OBJ.SLU,,1,,null())
                    ?};
:: Błędy
   {? _result.OBJ.NRK=null()
   || _result.msg_norec('TKTL_NRK');
      _result.RESULT:=0
   ?};
   {? _obj.SLU<>'' & _result.OBJ.SLU=null()
   || _result.msg_norec('SLU');
      _result.RESULT:=0
   ?};
   {? _obj.SLO<>'' & _result.OBJ.SLO=null()
   || _result.msg_norec('SLO');
      _result.RESULT:=0
   ?}
?};

:: OK
{? _result.RESULT>0
||
   _valid:="
      _res:=__CHK.record2(TPAR,,'OPIS');
      {? _res=''
      || {? TPAR.NRP<0
         || FUN.emsg('Numer musi być większy lub równy zeru.'@);
            _res:='NRP'
         ?}
      ?};
      {? _res=''
      || _res:=exec('tpar_arec','tech_param')
      ?};
      _res
   ";

   TPAR.index('NN');
   TPAR.prefix(_result.OBJ.NRK,_obj.NRP);
   {? TPAR.first()
   || {? _mode=0
      || _result.RESULT:=0;
         _check:=0;
         _result.MSG:='Technologia %1 (wer.%2) posiada już parametr technologiczny o numerze %3.'@
                      [_obj.TKTL_NRK,_obj.TKTL_WER,$_obj.NRP]
      || _result.ACTION:='put';
         exec('record','xls_tpar',_obj,_mode,_result);
         {? _valid()<>''
         || _result.RESULT:=0
         ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_tpar',_obj,_mode,_result);
      {? _valid()<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
{? _result.RESULT<=0 & _check>0 & _imp_err=0
||
:: Jak błąd to ustawiam znacznik błędu na karcie technologicznej
   {? _result.OBJ.NRK<>null()
   || TKTL.cntx_psh();
      TKTL.prefix();
      {? TKTL.seek(_result.OBJ.NRK)
      || TKTL.IMP_ERR:='T';
         TKTL.put();
         _result.MSG+='\nKarta %1 (wer. %2) oraz wszystkie jej elementy, które zostały do tej pory zaimportowane '
                      'zostaną usunięte.'@[TKTL.NRK,TKTL.WER];
::       Dodaję kartę do listy ignorowanych kart przy imporcie
         __TKTL_ERR.NRK:=_obj.TKTL_NRK;
         __TKTL_ERR.WER:=_obj.TKTL_WER;
         __TKTL_ERR.add()
      ?};
      TKTL.cntx_pop()
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| EXCEL_ENV.ID_GRP:=$TPAR.NRK;
   {? _validate.ACTION='add'
   || _result:=TPAR.add(1)
   |? _validate.ACTION='put'
   || _result:=TPAR.put(1)
   ?}
|| EXCEL_ENV.ID_GRP:=''
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie parametru \'%3\' do karty technologicznej %1 (%2) nie powiodło się.'@
                     [_obj.TKTL_NRK,_obj.TKTL_WER,_obj.OPIS]
   || _validate.MSG:='Poprawa parametru \'%3\' do karty technologicznej %1 (%2) nie powiodła się.'@
                     [_obj.TKTL_NRK,_obj.TKTL_WER,_obj.OPIS]
   ?}
?};
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 5712e04d58bb90b88387b57d8e9ba0c84b9a3708e2e0e34db8c6b416ea544fd1d73a9aab7204ed3bec02689c46478de967a43fa0087cbc98a12259ffc9e7932a0bf773cf1b1e11df73282411c48733682a17cf51c462eca14c5b16a9a1132435b4149453d03c87b4f36e8ebb071c883b3300d47c499ffa5233cd11f5e5f78443
