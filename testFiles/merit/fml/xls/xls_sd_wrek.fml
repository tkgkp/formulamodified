:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_sd_wrek.fml
:: Utworzony: 11.03.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu konfiguracji
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='SD_WREK';
_def.FUNPAR:='ZWS_PAR_ASDZ';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_sd_zes_xlsx','xls__init');
_def.SHEET:='Zestawy danych=1,1';
_def.NAME:='Zestawy danych'@;
_def.DESC:='Zestawy danych';
_def.ADD_ROWS:=0;
_def.HIDDEN:='N';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="SD_WREK";

: prolog
_def.BEFORE:="
   SD_WREK.cntx_psh();
   SD_WREK.f_clear();
   {? _a.is_export()
   || SD_WREK.index('NAZWA')
   || exec('_xslo','szablon_std');
      SD_WREK.index('KOD')
   ?};
   SD_WREK.clear();
   ~~
";

: epilog
_def.AFTER:="
   SD_WREK.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('SYSTEM',MS.name(SD_WREK,'SYSTEM'),0,,MS.comment(SD_WREK,'SYSTEM'));
   _env.define('KOD',   MS.name(SD_WREK,'KOD'),0,,   MS.comment(SD_WREK,'KOD'));
   _env.define('SYMBOL',MS.name(SD_WREK,'SYMBOL'),0,,MS.comment(SD_WREK,'SYMBOL'));
   _env.define('NAZWA', MS.name(SD_WREK,'NAZWA'),0,, MS.comment(SD_WREK,'NAZWA'));
   _env.define('OPIS',  MS.name(SD_WREK,'OPIS'),0,,  MS.comment(SD_WREK,'OPIS'));
   _env.define('AUTOR', MS.name(SD_WREK,'AUTOR'),0,, MS.comment(SD_WREK,'AUTOR'));
   _env.define('GRUPA', MS.name(SD_WREK,'GRUPA'),0,, MS.comment(SD_WREK,'GRUPA'));
   _env.define('LISTA', MS.name(SD_WREK,'LISTA'),0,, MS.comment(SD_WREK,'LISTA'));
   _env.define('PROLOG',MS.name(SD_WREK,'PROLOG'),0,,MS.comment(SD_WREK,'PROLOG'));
   _env.define('TABELA',MS.name(SD_WREK,'TABELA'),0,,MS.comment(SD_WREK,'TABELA'));
   _env.define('EPILOG',MS.name(SD_WREK,'EPILOG'),0,,MS.comment(SD_WREK,'EPILOG'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="exec('export','xls_sd_wrek',_a,_b)";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_sd_wrek',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_sd_wrek',_a,_b,_c)";
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Ustawia wartości w polach bufora danych i asynchronicznie zapisuje powiązane dane.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_env:=_a;
_buf:=_b;
_buf.SYSTEM.VALUE:=SD_WREK.SYSTEM;
_buf.KOD.VALUE:=SD_WREK.KOD;
_buf.SYMBOL.VALUE:=SD_WREK.SYMBOL;
_buf.NAZWA.VALUE:=SD_WREK.NAZWA;
_buf.OPIS.VALUE:=SD_WREK.memo_txt(,1,'OPIS');
_buf.AUTOR.VALUE:=SD_WREK.AUTOR;
_buf.GRUPA.VALUE:=SD_WREK.GRUPA;
_buf.LISTA.VALUE:=SD_WREK.LISTA;
_buf.PROLOG.VALUE:=SD_WREK.memo_txt(,1,'PROLOG');
_buf.TABELA.VALUE:=SD_WREK.memo_txt(,1,'TABELA');
_buf.EPILOG.VALUE:=SD_WREK.memo_txt(,1,'EPILOG');

:: kolumny zestawu
SD_WKOL.cntx_psh();
SD_WKOL.index('NUMER');
SD_WKOL.prefix(SD_WREK.ref());
_loop:=SD_WKOL.first();
{!
|? _loop
|! _env.write_async('SD_WKOL',SD_WKOL.ref());
   _loop:=SD_WKOL.next()
!};
SD_WKOL.cntx_pop();

:: dziedziny zestawu
SD_BREK.cntx_psh();
SD_BREK.index('SYM_DOM');
SD_BREK.prefix(SD_WREK.ref());
_loop:=SD_BREK.first();
{!
|? _loop
|! _env.write_async('SD_BREK',SD_BREK.ref());
   _loop:=SD_BREK.next()
!};
SD_BREK.cntx_pop();

:: parametry zestawu
SD_WPAR.cntx_psh();
SD_WPAR.index('NUMER');
SD_WPAR.prefix(SD_WREK.ref());
_loop:=SD_WPAR.first();
{!
|? _loop
|! _env.write_async('SD_WPAR',SD_WPAR.ref());
   _loop:=SD_WPAR.next()
!};
SD_WPAR.cntx_pop();

:: parametry Dane chronione
SD_PROT.cntx_psh();
SD_PROT.index('UNIQ');
SD_PROT.prefix(SD_WREK.ref());
_loop:=SD_PROT.first();
{!
|? _loop
|! _env.write_async('SD_PROT',SD_PROT.ref());
   _loop:=SD_PROT.next()
!};
SD_PROT.cntx_pop();
1


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.SYSTEM='' || 'SYSTEM'
   |? _buf.KOD=''    || 'KOD'
   |? _buf.SYMBOL='' || 'SYMBOL'
   |? _buf.NAZWA=''  || 'NAZWA'
   |? _buf.GRUPA=''  || 'GRUPA'
   |? _buf.LISTA=''  || 'LISTA'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

:: błędne wartości
{? ('TN'*(1+_buf.SYSTEM))=0
|| _val.msg_inset('SYSTEM','T','N');
   _val.RESULT:=0;
   return()
|? ('TN'*(1+_buf.GRUPA))=0
|| _val.msg_inset('GRUPA','T','N');
   _val.RESULT:=0;
   return()
|? ('TN'*(1+_buf.LISTA))=0
|| _val.msg_inset('LISTA','T','N');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(SD_WREK,'SYSTEM');
{? +_buf.SYSTEM>_max
|| _val.msg_length('SYSTEM',_max);
   _buf.SYSTEM:=_max+_buf.SYSTEM
?};
_max:=MS.fld_len(SD_WREK,'KOD');
{? +_buf.KOD>_max
|| _val.msg_length('KOD',_max);
   _buf.KOD:=_max+_buf.KOD
?};
_max:=MS.fld_len(SD_WREK,'SYMBOL');
{? +_buf.SYMBOL>_max
|| _val.msg_length('SYMBOL',_max);
   _buf.SYMBOL:=_max+_buf.SYMBOL
?};
_max:=MS.fld_len(SD_WREK,'NAZWA');
{? +_buf.NAZWA>_max
|| _val.msg_length('NAZWA',_max);
   _buf.NAZWA:=_max+_buf.NAZWA
?};
_max:=MS.fld_len(SD_WREK,'AUTOR');
{? +_buf.AUTOR>_max
|| _val.msg_length('AUTOR',_max);
   _buf.AUTOR:=_max+_buf.AUTOR
?};
_max:=MS.fld_len(SD_WREK,'GRUPA');
{? +_buf.GRUPA>_max
|| _val.msg_length('GRUPA',_max);
   _buf.GRUPA:=_max+_buf.GRUPA
?};
_max:=MS.fld_len(SD_WREK,'LISTA');
{? +_buf.LISTA>_max
|| _val.msg_length('LISTA',_max);
   _buf.LISTA:=_max+_buf.LISTA
?};

_ref:=null;
{? (SD_WREK.index('KOD'); SD_WREK.find_key(_buf.KOD,)) |
   (SD_WREK.index('SYMBOL'); SD_WREK.find_key(_buf.SYMBOL,))
|| _ref:=SD_WREK.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1'[_a.KOD]"
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [20.14]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,SD_WREK,"
   _a.SYSTEM:=_b.SYSTEM;
   _a.KOD:=_b.KOD;
   _a.SYMBOL:=_b.SYMBOL;
   _a.NAZWA:=_b.NAZWA;
   _a.memo_set(_b.OPIS,'OPIS');
   _a.AUTOR:=_b.AUTOR;
   _a.GRUPA:=_b.GRUPA;
   _a.LISTA:=_b.LISTA;
   _a.memo_set(_b.PROLOG,'PROLOG');
   _a.memo_set(_b.TABELA,'TABELA');
   _a.memo_set(_b.EPILOG,'EPILOG');
   ~~
",'OPIS,PROLOG,TABELA,EPILOG');
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 66f1a7d4c9ee256837906a87596f0fe1ebbced8a83612e864ebc230d6d01568d0cda9315616b3095961c8c160df96c7729dc71a76f6f0a1ada09826bd7f71c5cd5a745c3a5bbc777216753a3907d1dd89314fd7b76e4a8d6e9f7acf265aa5dffda0eea01a3df99a5746925542fbca8460788f031c1ab89d50bc2de061ad26419
