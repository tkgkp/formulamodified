:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_kot_urza.fml
:: Utworzony: 20.04.2023
:: Autor: IS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu pozycji Kontrola trzeźwości - Urządzenia
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='KOT_URZA';
_def.FUNPAR:='ZWS_PAR_PKTU';
_def.DOMAIN:=exec('name','#b_domain','PKD');
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.SHEET:='Urządzenia kontroli trzeźwości=1,1';
_def.NAME:='Urządzenia kontroli trzeźwości'@;
_def.DESC:='Urządzenia kontroli trzeźwości';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="KOT_URZA";

: prolog
_def.BEFORE:="
   SLO_KOD.cntx_psh();
   SLO_KOD.prefix();
   KOT_JM.cntx_psh();
   KOT_JM.prefix();
   KOT_URZA.cntx_psh();
   KOT_URZA.index('UNIQ');
   KOT_URZA.prefix();
   ~~
";

: epilog
_def.AFTER:="
   KOT_URZA.cntx_pop();
   KOT_JM.cntx_pop();
   SLO_KOD.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _tStr:=type_of('');
   _tInt:=type_of(0);
   _tDat:=type_of(date());
   _env.define('KOT_JM',   MS.name(KOT_URZA,'KOT_JM'),1,,   MS.comment(KOT_URZA,'KOT_JM'),   _tInt,0);
   _env.define('DATA',     MS.name(KOT_URZA,'DATA'),1,,     MS.comment(KOT_URZA,'DATA'),     _tDat);
   _env.define('KOT_URZA', MS.name(KOT_URZA,'KOT_URZA'),1,, MS.comment(KOT_URZA,'KOT_URZA'), _tStr);
   _env.define('NAZ',      MS.name(KOT_URZA,'NAZ'),1,,      MS.comment(KOT_URZA,'NAZ'),      _tStr);
   _env.define('SN',       MS.name(KOT_URZA,'SN'),1,,       MS.comment(KOT_URZA,'SN'),       _tStr);
   _env.define('A',        MS.name(KOT_URZA,'A'),1,,        MS.comment(KOT_URZA,'A'),        _tStr);
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.KOT_JM.VALUE:=KOT_URZA.KOT_JM().LP;
   _buf.DATA.VALUE:=KOT_URZA.DATA;
   _buf.KOT_URZA.VALUE:=KOT_URZA.KOT_URZA().KOD;
   _buf.NAZ.VALUE:=KOT_URZA.NAZ;
   _buf.SN.VALUE:=KOT_URZA.SN;
   _buf.A.VALUE:=KOT_URZA.A;
   _env.write_async('KOT_JM',KOT_URZA.KOT_JM);
   _env.write_async('SLO_KOD',KOT_URZA.KOT_URZA);
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_kot_urza',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_kot_urza',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.KOT_URZA=''      || 'KOT_URZA'
   |? _buf.NAZ=''           || 'NAZ'
   |? _buf.A=''             || 'A'
   |? _buf.DATA=date(0,0,0) || 'DATA'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? ('NT'*_buf.A)=0
|| _val.msg_inset('A','N','T');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(SLO_KOD,'KOD');
{? +_buf.KOT_URZA>_max
|| _val.msg_length('KOT_URZA',_max);
   _buf.KOT_URZA:=_max+_buf.KOT_URZA
?};

{? (_kotUrza:=exec('kod','ext_slo','KOT_URZA',_buf.KOT_URZA))=null
|| _val.msg_norec('KOT_URZA');
   _val.RESULT:=0;
   return()
?};

_kotJm:=_jm:=null();
{? ~KOT_JM.find_tab(,
      'LP',,'=',_buf.KOT_JM
   )
|| _val.msg_norec('KOT_JM');
   _val.RESULT:=0;
   return()
|| _kotJm:=KOT_JM.ref();
   _jm:=KOT_JM.JM
?};

: weryfikacja spójności referencyjnej
_ref:=null;
{? KOT_URZA.find_tab(,
      'NAZ',,'=',_buf.NAZ,
      'KOT_JM',,'=',_kotJm,
      'DATA',,'=',_buf.DATA
   )
|| _ref:=KOT_URZA.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 %2'[$_a.DATA,_a.JM]",
   'KOT_JM',_kotJm,
   'KOT_URZA',_kotUrza
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,KOT_URZA,"
   _a.DATA:=_b.DATA;
   _a.KOT_URZA:=_c.KOT_URZA;
   _a.KOT_JM:=_c.KOT_JM;
   _a.NAZ:=_b.NAZ;
   _a.SN:=_b.SN;
   _a.A:=_b.A;
   ~~
");
~~

:Sign Version 2.0 jowisz:1045 2023/07/21 13:25:34 df3dba77e9f26062afea62a9653028fce9212a5976e67da7a08e951ee1803d549d466d8deeaad1f804db81a5f1df93f8e28472d5f6333734e38b49bd019e1c30c4d2299a61949d458bce9658f6fc92fc765e3196da64b3ce2a2f92782639d2b775f7a0c1a4e1407752deaf403388437935352cf1c9c5e77816e22b26a6898410
