:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_typysp.fml
:: Utworzony: 12.07.2018
:: Autor: Mario
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu typów dokumentów sprzedaży
::======================================================================================================================


\init_spr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TYPYSP';
_def.DOMAIN:=exec('name','#b_domain','LSP');
_def.FUNPAR:='ZWS_PAR_LTDS';

_def.FILE:='sprzedaz.xlsx';
_def.SHEET:='Typy dokumentów sprzedaży=1,1';
_def.NAME:='Typy dokumentów sprzedaży'@;
_def.DESC:='Typy dokumentów sprzedaży';

_def.PREFIX:="exec('prefix','xls_typysp','S')";
_def.TABLE:="TYPYSP";
_def.FIELDS:="exec('fields','xls_typysp',_a,'S')";

_def.BEFORE:="TYPYSP.cntx_psh()";
_def.AFTER:="TYPYSP.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('export','xls_typysp',_a,_b,'S')";
_def.VALIDATE:="exec('validate','xls_typysp',_a,_b,_c,'S')";
_def.IMPORT:="exec('import','xls_typysp',_a,_b,_c)";
_def.SELECT:="exec('select','xls_typysp',_a,'S')";
~~


\init_zak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TYPYZAK';
_def.DOMAIN:=exec('name','#b_domain','LZK');
_def.FUNPAR:='ZWS_PAR_LTDZ';

_def.FILE:='zakupy.xlsx';
_def.SHEET:='Typy dokumentów zakupu=1,1';
_def.NAME:='Typy dokumentów zakupu'@;
_def.DESC:='Typy dokumentów zakupu';

_def.PREFIX:="exec('prefix','xls_typysp','Z')";
_def.TABLE:="TYPYSP";
_def.FIELDS:="exec('fields','xls_typysp',_a,'Z')";

_def.BEFORE:="TYPYSP.cntx_psh()";
_def.AFTER:="TYPYSP.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('export','xls_typysp',_a,_b,'Z')";
_def.VALIDATE:="exec('validate','xls_typysp',_a,_b,_c,'Z')";
_def.IMPORT:="exec('import','xls_typysp',_a,_b,_c)";
_def.SELECT:="exec('select','xls_typysp',_a,'Z')";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Określa zakres eksportowanych danych
::   WE: S/Z - sprzedaż, zakup
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
TYPYSP.index('SPRZAK');
{? _a='S'
|| TYPYSP.prefix('N')
|| TYPYSP.prefix('T')
?};
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::       _b -  S/Z - sprzedaż, zakup
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_spza:=_b;

_def.define('T','Typ',1,,'');
_def.define('NAZ','Nazwa dokumentu',1,,'');
_def.define('FIS','Czy przeliczać od brutto?',1,,'[T]/[N]');
_def.define('WZ','Domyślny wzorzec wydruku',1,,'');
_def.define('KOR','Czy korekta?',1,,'[T]/[N]');
_def.define('KOD','Kod numeracji',0,,'');
_def.define('UE','Czy unijny?',1,,'[T]/[N]');
_def.define('PAR','Czy paragon?',1,,'[T]/[N]');
_def.define('DOKSP','Typ tworzonego dokumentu',1,,'');
_def.define('KH','Kod kontrahenta na paragonie',1,,'');
_def.define('DRPAR','Czy drukować paragon',1,,'[T]/[N]');
_def.define('ZEST','Czy uwzględniać w zestawieniach?',1,,'[T]/[N]');
_def.define('ZAL','Czy dokument zaliczkowy?',1,,'[T]/[N]');
_def.define('SPP','Sposób przeliczania dokumentu',1,,'');
_def.define('HIS','Czy korekta historyczna?',1,,'[T]/[N]');
_def.define('ZAL_ROZ','Czy rozlicza zaliczki?',1,,'[T]/[N]');
_def.define('RTRANSAK','Rodzaj transakcji intrastat',1,,'');
_def.define('NRT','Kod numeracji tymczasowej',1,,'');
_def.define('VATZPOZ','Czy VAT liczony wg pozycji dokumentu?',1,,'[T]/[N]');
_def.define('EXPORT','Czy dokument eksportowy?',1,,'[T]/[N]');
_def.define('KK','Domyślne konto kosztów',1,,'35 znakowy symbol konta kosztowego');
_def.define('KK_R','Rok konta kosztów',1,,'Nazwa roku dla konta kosztowego');
_def.define('JPK','Czy dotyczy JPK?',1,,'[T]/[N]');
_def.define('PROJZAKR','Zakres projektów',1,,'');
_def.define('PROJZKH','Zakres projektów dla kontrahenta',1,,'');
_def.define('VALIDATE','Formuła walidacji zakończ',0,,'');
_def.define('VALACC','Formuła walidacji akceptuj',0,,'');
_def.define('VALREC','Formuła walidacji wycofaj',0,,'');
_def.define('NDVAT','Czy nie dotyczy VAT',1,,'[T]-nie dotyczy VAT, [N]-dotyczy VAT, [O]-podatek rozl. nab.');
_def.define('SPPK','Sposób przeliczania dokumentu na korekcie',1,,'');
_def.define('TOW_USL','Domyślnie dla pozycji: Materiał / Usługa',1,,'[T]/[U]');
{? _spza='S'
|| _def.define('WAL','Waluta'@,1,,'Waluta - Kod');
   _def.define('UE_WSU','Czy wewnątrzwspólnotowa sprzedaż usług?',1,,'[T]/[N]')
?};
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

TYPYSP.index('SPRZAK');
TYPYSP.prefix(_validate.OBJ.SPZA);
{? _validate.ACTION='add'
||
   TYPYSP.blank();
   TYPYSP.T:=_obj.T;
   TYPYSP.ZAK:=_validate.OBJ.SPZA
?};

TYPYSP.NAZ:=_obj.NAZ;
TYPYSP.FIS:=_obj.FIS;
TYPYSP.KOD:=_obj.KOD;
TYPYSP.KOR:=_obj.KOR;
TYPYSP.KOD:=_obj.KOD;
TYPYSP.UE:=_obj.UE;
TYPYSP.PAR:=_obj.PAR;
TYPYSP.DOKSP:=_obj.DOKSP;
TYPYSP.KH:=_validate.OBJ.KH;
TYPYSP.DRPAR:=_obj.DRPAR;
TYPYSP.ZAL:=_obj.ZAL;
TYPYSP.SPP:=_obj.SPP;
TYPYSP.HIS:=_obj.HIS;
TYPYSP.ZAL_ROZ:=_obj.ZAL_ROZ;
TYPYSP.RTRANSAK:=_obj.RTRANSAK;
TYPYSP.NRT:=_obj.NRT;
TYPYSP.VATZPOZ:=_obj.VATZPOZ;
TYPYSP.EXPORT:=_obj.EXPORT;
TYPYSP.WZ:=_obj.WZ;
TYPYSP.ZEST:=_obj.ZEST;
TYPYSP.JPK:=_obj.JPK;
TYPYSP.PROJZAKR:=_obj.PROJZAKR;
TYPYSP.PROJZKH:=_obj.PROJZKH;
TYPYSP.VALIDATE:=_validate.OBJ.VALIDATE;
TYPYSP.VALACC:=_validate.OBJ.VALACC;
TYPYSP.VALREC:=_validate.OBJ.VALREC;
TYPYSP.NDVAT:=_obj.NDVAT;
TYPYSP.KK:=_validate.OBJ.KK;
TYPYSP.SPPK:=_obj.SPPK;
TYPYSP.TOW_USL:=_obj.TOW_USL;
{? _validate.OBJ.SPZA='N'
|| TYPYSP.WAL:=_validate.OBJ.WAL;
   TYPYSP.UE_WSU:=_obj.UE_WSU
?};
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::       _c -  S/Z - sprzedaż, zakup
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_spza:=_c;

_result:=1;

_table.T.VALUE:=TYPYSP.T;
_table.NAZ.VALUE:=TYPYSP.NAZ;
_table.FIS.VALUE:=TYPYSP.FIS;
_table.WZ.VALUE:=TYPYSP.WZ;
_table.KOR.VALUE:=TYPYSP.KOR;
_table.KOD.VALUE:=TYPYSP.KOD;
_excel.write_async('NRDOK',exec('FindInSet','#table','NRDOK','NRDOK',TYPYSP.KOD,,,1,,null()));
_table.UE.VALUE:=TYPYSP.UE;
_table.PAR.VALUE:=TYPYSP.PAR;
_table.DOKSP.VALUE:=TYPYSP.DOKSP;
_table.KH.VALUE:=TYPYSP.KH().KOD;
_table.DRPAR.VALUE:=TYPYSP.DRPAR;
_table.ZEST.VALUE:=TYPYSP.ZEST;
_table.ZAL.VALUE:=TYPYSP.ZAL;
_table.SPP.VALUE:=TYPYSP.SPP;
_table.HIS.VALUE:=TYPYSP.HIS;
_table.ZAL_ROZ.VALUE:=TYPYSP.ZAL_ROZ;
_table.RTRANSAK.VALUE:=TYPYSP.RTRANSAK;
_table.NRT.VALUE:=TYPYSP.NRT;
_table.VATZPOZ.VALUE:=TYPYSP.VATZPOZ;
_table.EXPORT.VALUE:=TYPYSP.EXPORT;
_table.KK.VALUE:=TYPYSP.KK().SYM;
_excel.write_async('KK',TYPYSP.KK);
_table.KK_R.VALUE:=TYPYSP.KK().ROK_F().NAZ;
_table.JPK.VALUE:=TYPYSP.JPK;
_table.PROJZAKR.VALUE:=TYPYSP.PROJZAKR;
_table.PROJZKH.VALUE:=TYPYSP.PROJZKH;
_table.VALIDATE.VALUE:=TYPYSP.VALIDATE().SKROT;
_table.VALACC.VALUE:=TYPYSP.VALACC().SKROT;
_table.VALREC.VALUE:=TYPYSP.VALREC().SKROT;
_table.NDVAT.VALUE:=TYPYSP.NDVAT;
_table.SPPK.VALUE:=TYPYSP.SPPK;
_table.TOW_USL.VALUE:=TYPYSP.TOW_USL;
{? _spza='S'
|| _table.WAL.VALUE:=TYPYSP.WAL().KOD;
   _table.UE_WSU.VALUE:=TYPYSP.UE_WSU
?};

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::       _d -  S/Z - sprzedaż, zakup
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;
_spza:=_d;

_result.RESULT:=1;
_result.OBJ:=obj_new('KH','SPZA','VALIDATE','VALACC','VALREC','KK','WAL');

{? (+form(_obj.KOD))<>3     || _result.msg_range('KOD','długości 3 znaków','długości 3 znaków'); _result.RESULT:=0 ?};

_res:=0;
_result.OBJ.KH:={? _obj.KH='' || null() || _res:=1; exec('FindInSet','#table','KH','KOD',_obj.KH,2,,1,,null()) ?};
{? _res & _result.OBJ.KH=null() & _obj.PAR='T'
|| _result.MSG:='Uwaga. Brak kontrahenta o kodzie %1 dla typu dokumentu %2. Pole należy uzupełnić.'@[_obj.KH,_obj.T];
   _result.RESULT:=1
?};

_result.OBJ.SPZA:={? _spza='S' || 'N' || 'T' ?};
_txt:={? _spza='S' || 'sprzedaży'@ || 'zakupu'@ ?};

{? _obj.VALIDATE<>''
|| _result.OBJ.VALIDATE:=exec('FindInSet','#table','FORMULA','FORMULA4',_obj.VALIDATE,'v',,1);
   {? _result.OBJ.VALIDATE=null()
   || _result.MSG:='Nie znaleziono formuły walidacji dla typów dokumentów %2 %1.'@[_obj.VALIDATE,_txt];
      _result.RESULT:=0
   ?}
|| _result.OBJ.VALIDATE:=null()
?};

{? _obj.VALACC<>''
|| _result.OBJ.VALACC:=exec('FindInSet','#table','FORMULA','FORMULA4',_obj.VALACC,'a',,1);
   {? _result.OBJ.VALACC=null()
   || _result.MSG:='Nie znaleziono formuły akceptacji dla typów dokumentów %2 %1.'@[_obj.VALACC,_txt];
      _result.RESULT:=0
   ?}
|| _result.OBJ.VALACC:=null()
?};

{? _obj.VALREC<>''
|| _result.OBJ.VALREC:=exec('FindInSet','#table','FORMULA','FORMULA4',_obj.VALREC,'r',,1);
   {? _result.OBJ.VALREC=null()
   || _result.MSG:='Nie znaleziono formuły wycofania dla typów dokumentów %2 %1.'@[_obj.VALREC,_txt];
      _result.RESULT:=0
   ?}
|| _result.OBJ.VALREC:=null()
?};

_result.OBJ.KK:=null();
{? _obj.KK_R<>'' & _obj.KK<>''
|| _rok_f:=exec('FindInSet','#table','ROK_F','NAZWA',_obj.KK_R,REF.FIRMA,,1);
   {? _rok_f<>null()
   || KK.cntx_psh();
      KK.index('UNIK');
      KK.prefix(REF.FIRMA,'',_rok_f,_obj.KK);
      {? KK.first() || _result.OBJ.KK:=KK.ref() ?};
      KK.cntx_pop()
   ?}
?};

{? _obj.TOW_USL<>'' & _obj.TOW_USL<>'T' & _obj.TOW_USL<>'U'
|| _result.msg_inset('TOW_USL','T','U');
   _result.RESULT:=0
?};

_result.OBJ.WAL:=null();
{? _spza='S' & _obj.WAL<>''
|| _result.OBJ.WAL:=exec('FindInSet','#table','SLO','KOD',_obj.WAL,,,1,,null());
   {? _result.OBJ.WAL=null()
   || _result.MSG:='Nie znaleziono waluty o kodzie %1 dla typu dokumentu %2.'@[_obj.WAL,_obj.T]
   ?}
?};

{? _spza='S'
|| {? _obj.UE<>'T' & _obj.UE_WSU='T'
   || _obj.UE_WSU:='N'
   ?}
?};

{? _result.RESULT=1
|| TYPYSP.index('SPRZAK');
   TYPYSP.prefix(_result.OBJ.SPZA,_obj.T,);
   {? TYPYSP.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         {? TYPYSP.KOD<>_obj.KOD
         || {? ~exec('sp_count_core','typysp',1,1)
            || _obj.KOD:=TYPYSP.KOD;
               {? _result.MSG<>''
               || _result.MSG+=' '
               ?};
               _result.MSG+='Nie można zmienić numeracji typu dokumentu %1'@[TYPYSP.T]
            ?}
         ?};
         exec('record','xls_typysp',_obj,_mode,_result);
         {? exec('chk_typs','typysp',_result.ACTION)<>'' || _result.RESULT:=0 ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_typysp',_obj,_mode,_result);
      {? exec('chk_typs','typysp',_result.ACTION)<>'' || _result.RESULT:=0 ?}
   ?}
?};

_result


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      _result:=TYPYSP.add(1)
   |? _validate.ACTION='put'
   ||
      _result:=TYPYSP.put(1)
   ?}
?};
{? _result=0
||

   {? _validate.ACTION='add'
   ||
      _validate.MSG:='Dodanie typu dokumentu %1 nie powiodło się.'@[_obj.T]
   ||
      _validate.MSG:='Poprawa typu dokumentu %1 nie powiodła się.'@[_obj.T]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::       _b - 'S'-sprzedaż 'Z'-zakupy
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'T','STRING[8]','Typ'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'NAZ','STRING[40]','Nazwa dokumentu');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'T',,);

TYPYSP.cntx_psh();
TYPYSP.index('SPRZAK');
exec('prefix','xls_typysp',_b);
{? TYPYSP.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$TYPYSP.ref();
      _selected.prefix($TYPYSP.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.T:=TYPYSP.T;
      _tab.NAZ:=TYPYSP.NAZ;
      _tab.add();
      TYPYSP.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'T,NAZ',20,'Wybór stanowiska %1 do eksportu'@[{? _b='S' || 'sprzedaży'@ || 'zakupu'@ ?}],1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
TYPYSP.cntx_pop();

_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 63e16f367f155e35f2e6b4b63babdbd2e36aff934b67855a3802f9b9ae1b7e0db516e34eb9c6de87f39be007ddd4ed9f0b31a60f884143ed91241016cc9dba264f7ecca54800fcda70bd399ba655f05a674638b09e1d4e932a5a6e1dc184bfcc26b7ef121702e7eeac1dc315a9957540ae60b916920286bde865f02a9909902d
