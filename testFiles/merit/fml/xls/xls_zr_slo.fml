:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_zr_slo.fml
:: Utworzony: 18.12.2018
:: Autor: MW
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu dodatkowych parametrów dla słowników użytkownika
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='ZR_SLO';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_PAR_KSLO';
_def.HIDDEN:='T';

_def.FILE:='slowniki_uzytkownika.xlsx';
_def.SHEET:='Słowniki - dodatkowe parametry'@+'=1,1';
_def.NAME:='Słownik użytkownika - dodatkowe parametry'@;
_def.DESC:='Słowniki użytkownika - dodatkowe parametry'@;
_def.MULTIFIR:='T';

_def.PREFIX:="exec('prefix','xls_zr_slo')";
_def.TABLE:="exec('table','xls_zr_slo')";
_def.FIELDS:="exec('fields','xls_zr_slo',_a)";

_def.BEFORE:="ZR_SLO.cntx_psh()";
_def.AFTER:="ZR_SLO.cntx_pop()";
_def.SELECT:="";

_def.EXPORT:="exec('export','xls_zr_slo',_a,_b)";
_def.VALIDATE:="exec('validate','xls_zr_slo',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_zr_slo',_a,_b,_c)";
~~

\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
ZR_SLO.index('SLO_NR');
ZR_SLO.prefix();
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
ZR_SLO


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('SLU','Słownik użytkownika'@,1);
_def.define('SLO','Kod'@,1);
_def.define('NR','Numer parametru'@,0,,'Numer parametru'@,type_of(0));
_def.define('WAR','Zawartość parametru'@,1,,'Zawartość parametru (max. 60 znaków)'@);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

ZR_SLO.prefix();
{? _validate.ACTION='add'
|| ZR_SLO.blank()
?};
ZR_SLO.NR:=_obj.NR;
ZR_SLO.WAR:=_obj.WAR;
ZR_SLO.SLO:=_validate.OBJ.SLO;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.NR.VALUE:=ZR_SLO.NR;
_table.WAR.VALUE:=ZR_SLO.WAR;
_table.SLO.VALUE:=ZR_SLO.SLO().KOD;
_table.SLU.VALUE:=ZR_SLO.SLO().SLU().NAZ;
_excel.write_async('SLU',ZR_SLO.SLO().SLU);
_excel.write_async('SLO',ZR_SLO.SLO);
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('SLU','SLO');

:: Błędy krytyczne
{? _obj.SLU=''
|| _result.msg_empty('SLU');
   _result.RESULT:=0;
   return()
?};
{? _obj.SLO=''
|| _result.msg_empty('SLO');
   _result.RESULT:=0;
   return()
?};

:: Szukanie słownik i pozycji słownika
_result.OBJ.SLU:=exec('FindInSet','#table','SLU','NAZ',_obj.SLU,,1);
{? _result.OBJ.SLU=null()
||
   _result.OBJ.SLO:=null()
||
   _result.OBJ.SLO:=exec('FindInSet','#table','SLO','SL',_obj.SLO,_result.OBJ.SLU,,1)
?};

:: Błędy
{? _result.OBJ.SLU=null()
|| _result.msg_norec('SLU');
   _result.RESULT:=0
||
  {? _result.OBJ.SLO=null()
  || _result.msg_norec('SLO');
     _result.RESULT:=0
  ?}
?};

{? (+_obj.WAR)>60
||
  _result.msg_length('WAR',60);
  _result.RESULT:=0
?};

:: OK
{? _result.RESULT>0
|| ZR_SLO.index('SLO_NR');
   ZR_SLO.prefix(_result.OBJ.SLO,_obj.NR);
   {? ZR_SLO.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_zr_slo',_obj,_mode,_result);
        {? exec('chk_zr_slo_nr','slo_slu')<>''
        || _result.RESULT:=0
        ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_zr_slo',_obj,_mode,_result);
      {? exec('chk_zr_slo_nr','slo_slu')<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [19.02]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=ZR_SLO.add(1)
   |? _validate.ACTION='put'
   || _result:=ZR_SLO.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie parametru dodatkowego słownika nie powiodło się - %1, %2, %3.'@[_obj.SLU,_obj.SLO,$_obj.NR]
   || _validate.MSG:='Poprawa parametru dodatkowego słownika nie powiodła się - %1, %2, %3.'@[_obj.SLU,_obj.SLO,$_obj.NR]
   ?}
?};
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:12 95c6d1b0557f4556623a2b0b09f3007c03b8219b87b4e2b14a737ce751b88de70dc07089193bcb37b310b9f3d92d568bc33fc47bea6626fb6dcb1c721b409238d1785ef3a9827578de43d75be4049431e4a2975d890a9c39ef40262f1f2a813170b2bdc90ce9bc8c3f5dfe713582b39302bfdab250740f3099f0d2401322cc06
