:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_h_oddr.fml
:: Utworzony: 28.09.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu rodzajów rozliczeń oddelegowań
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='H_ODDR';
_def.FUNPAR:='ZWS_PAR_PRPO';
_def.DOMAIN:=exec('name','#b_domain','PKD');
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.SHEET:='Rodzaje rozliczeń oddelegowań=1,1';
_def.NAME:='Rodzaje rozliczeń oddelegowań'@;
_def.DESC:='Rodzaje rozliczeń oddelegowań';

: źródło danych
_def.TABLE:="H_ODDR";

: prolog
_def.BEFORE:="
   R.cntx_psh();
   R.prefix();
   H_ODDR.cntx_psh();
   H_ODDR.f_clear();
   H_ODDR.index('H_ODDR');
   H_ODDR.prefix(REF.FIRMA);
   ~~
";

: epilog
_def.AFTER:="
   H_ODDR.cntx_pop();
   R.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('RODZ', MS.name(H_ODDR,'RODZ'), 0,,MS.comment(H_ODDR,'RODZ'));
   _env.define('OPIS', MS.name(H_ODDR,'OPIS'), 1,,MS.comment(H_ODDR,'OPIS'));
   _env.define('DIETA',MS.name(H_ODDR,'DIETA'),0,,MS.comment(H_ODDR,'DIETA'));
   _env.define('NOC',  MS.name(H_ODDR,'NOC'),  0,,MS.comment(H_ODDR,'NOC'));
   _env.define('R',    MS.name(H_ODDR,'R'),    1,,MS.comment(H_ODDR,'R'),type_of(0),0);
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.RODZ.VALUE:=H_ODDR.RODZ;
   _buf.OPIS.VALUE:=H_ODDR.OPIS;
   _buf.DIETA.VALUE:=H_ODDR.DIETA;
   _buf.NOC.VALUE:=H_ODDR.NOC;
   _buf.R.VALUE:=H_ODDR.R().RN;
   _env.write_async('RUBRYKI',exec('r','xls__util'));
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_h_oddr',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_h_oddr',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.RODZ=''  || 'RODZ'
   |? _buf.DIETA='' || 'DIETA'
   |? _buf.NOC=''   || 'NOC'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? 'TN'*_buf.DIETA=0
|| _val.msg_inset('DIETA','T','N');
   _val.RESULT:=0;
   return()
?};
{? 'TN'*_buf.NOC=0
|| _val.msg_inset('NOC','T','N');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_fld:=spli_str('RODZ,OPIS',',');
{! _ii:=1..obj_len(_fld)
|! _acr:=_fld[_ii];
   _max:=MS.fld_len(H_ODDR,_acr);
   {? ($('+_a.%1>_b'[_acr]))(_buf,_max)
   || _val.msg_length(_acr,_max);
      ($('_a.%1:=_b+_a.%1'[_acr]))(_buf,_max)
   ?}
!};
obj_del(_fld);

: weryfikacja spójności referencyjnej
_rub:=null;
{? _buf.R<>0
|| {? ~R.find_tab(,'RN',,'=',_buf.R)
   || _val.msg_norec('R');
      _val.RESULT:=0;
      return()
   || _rub:=R.ref()
   ?}
?};

_ref:=null;
{? H_ODDR.find_tab(,'RODZ',,'=',_buf.RODZ)
|| _ref:=H_ODDR.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 - %2'[_a.RODZ,_a.OPIS]",
   'R',_rub
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,H_ODDR,"
   _a.FIRMA:=REF.FIRMA;
   _a.RODZ:=_b.RODZ;
   _a.OPIS:=_b.OPIS;
   _a.DIETA:=_b.DIETA;
   _a.NOC:=_b.NOC;
   _a.R:=_c.R;
   ~~
");
~~

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:42 98107de388d2cba5c42cc1068a9dfadb21376b336a8c121c967c0ac1ab6a646ad9ecd009fdddf9a2f437d11a217b6947cc0766b04d1cb0cfc877bee954eed5403b26a02a9939c28920d2a2f0b13dfbdd6e17aef8b17c02f634c76a002a22a8ff01ef22dcbf44ead4592da5cf2421b6c3a811313bf781b729ee380cb1bf158ec2
