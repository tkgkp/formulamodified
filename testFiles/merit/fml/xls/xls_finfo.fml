:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_finfo.fml
:: Utworzony: 10.09.2018
:: Autor: JK
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu wartości stałych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::       _b [STRING] - identyfikator
::       _c [STRING] - opis w języku polskim
::       _d [STRING] - symbol dziedziny produktowej
::       _e [STRING] - symbol funkcji parametryzacji
::       _f [STRING] - nazwa pliku
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_def:=_a;
_uid:=-_b;
_txt:=_c;
_dom:=_d;
_fun:=_e;

_def.ID:=~_uid;
_def.FUNPAR:=_fun;
_def.DOMAIN:=exec('name','#b_domain',_dom);
_def.NAME:=_def.env.LANG_PARAMS.translate(_txt);
_def.FILE:={? var_press('_f')=2 || _f || exec('def_kst_xlsx','xls__init')?};
_def.SHEET:='%1=1,1'[_txt];
_def.DESC:=_txt;
_def.ADD_ROWS:=0;

: źródło danych, prolog, epilog
_def.TABLE:=$('exec(\'%1_table\',\'xls_finfo\',_a)'[_uid]);
_def.TAB_IMP:="KST_WAR";
_def.BEFORE:=$('exec(\'%1_before\',\'xls_finfo\',_a)'[_uid]);
_def.AFTER:=$('exec(\'%1_after\',\'xls_finfo\',_a)'[_uid]);

: definicja kolumn, zawartość wiersza
_def.FIELDS:=$(
   '_a.define(\'DATE\',\'Data zmiany\',0);'
   'exec(\'%1_fields\',\'xls_finfo\',_a)'[_uid]
);
_def.EXPORT:=$(
   '_date:=_a.table().DATE;'
   '_b.DATE.VALUE:=_date;'
   'exec(\'%1_export\',\'xls_finfo\',_a,_b,_date)'[_uid]
);

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:=$('exec(\'%1_validate\',\'xls_finfo\',_a,_b,_c)'[_uid]);
_def.IMPORT:=$('exec(\'%1_import\',\'xls_finfo\',_a,_b,_c,{? _a.DATE<>date(0,0,0) || _a.DATE || null ?})'[_uid]);
~~


\druk_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Zwraca alias tabeli tymczasowej zawierającej daty zmian wybranych stałych systemu (kolumna DATE).
::   WE: _a [INTEGER] - tryb wykonywania formuły
::   WY: alias tabeli
::----------------------------------------------------------------------------------------------------------------------
_TAB:=exec('daty_zmian','#stalesys',,
   FINFO, 'W_PRN', 'SZ_PRN'
);

_TAB


\druk_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Prolog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
~~


\druk_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Epilog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
~~


\druk_fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Definicja kolumn akrusza Excel.
::   WE: _a [OBJECT] - obiekt definiujący pola
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_xls:=_a;

_xls.define('W_PRN',MS.name(FINFO,'W_PRN'),1,,MS.comment(FINFO,'W_PRN'));
_xls.define('SZ_PRN',MS.name(FINFO,'SZ_PRN'),1,,MS.comment(FINFO,'SZ_PRN'));
~~


\druk_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia tablicę wartościami, które będą zapisane w arkuszu Excel.
::       Użycie: export
::   WE: _a [OBJECT] - środowisko mechanizmu
::       _b [OBJECT] - tablica nazwana z wartościami pól
::       _c [DATA] - data, na którą mają być ustalone wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_env:=_a;
_buf:=_b;
_date:=_c;

: niezbędne podczytanie wartości stałych
exec('czytaj','#stalesys',_date,FINFO);

: wartości stałych do zapisania
_buf.W_PRN.VALUE:=FINFO.W_PRN;
_buf.SZ_PRN.VALUE:=FINFO.SZ_PRN;
1


\druk_validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: ostrzeżenia
_max:=MS.fld_len(FINFO,'W_PRN');
{? +_buf.W_PRN>_max
|| _val.msg_length('W_PRN',_max);
   _buf.W_PRN:=_max+_buf.W_PRN
?};
_max:=MS.fld_len(FINFO,'SZ_PRN');
{? +_buf.SZ_PRN>_max
|| _val.msg_length('SZ_PRN',_max);
   _buf.SZ_PRN:=_max+_buf.SZ_PRN
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',null,
   "'%1'[$_a.DATE]"
);
~~


\druk_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje stałych na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::       _d [DATA] - data, na którą mają być zapisane wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;
_date:=_d;

: ustaw wartości stałych
FINFO.W_PRN:=_buf.W_PRN;
FINFO.SZ_PRN:=_buf.SZ_PRN;

: zapisz zmianę stałych z właściwą datą
exec('zapisz','#stalesys',_date,
   FINFO, 'W_PRN', 'SZ_PRN'
);
~~


\kontrola_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Zwraca alias tabeli tymczasowej zawierającej daty zmian wybranych stałych systemu (kolumna DATE).
::   WE: _a [INTEGER] - tryb wykonywania formuły
::   WY: alias tabeli
::----------------------------------------------------------------------------------------------------------------------
_TAB:=exec('daty_zmian','#stalesys',,FINFO,
   'KBUDZET','KWERBUD','KZAPOT','KFAKTURY','KDOKKS',
   'KWTYPW','KWW_PROC','KWW_WART','KWTYPI','KWI_PROC',
   'KWI_WART','KBTYPW','KBW_PROC','KBW_WART','KBTYPI',
   'KBI_PROC','KBI_WART'
);
::exec('daty_zmian','#stalesys',_TAB,FINFO,
::   'PFZPCCZY','PFZPCDEC','PFZPCPP','PFZPCDAT','PFZPCZNA','PFZPCDST',
::   'PFFORPRP','PFFORWLA','PFWIEFIR','PFFORPR','PFTYPFIR','PFR_LIST',
::   'PFR_R_L','PFR_R_U','PFR_R_Z'
::);
_TAB


\kontrola_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Prolog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
K_WERSJE.cntx_psh();
K_WERSJE.prefix();
~~


\kontrola_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Epilog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
K_WERSJE.cntx_pop();
~~


\kontrola_fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Definicja kolumn akrusza Excel.
::   WE: _a [OBJECT] - obiekt definiujący pola
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_xls:=_a;

_xls.define('KBUDZET',MS.name(FINFO,'KBUDZET'),1,,MS.comment(FINFO,'KBUDZET'));
_xls.define('KWERBUD',MS.name(FINFO,'KWERBUD'),1,,MS.comment(FINFO,'KWERBUD'));
_xls.define('KZAPOT',MS.name(FINFO,'KZAPOT'),1,,MS.comment(FINFO,'KZAPOT'));
_xls.define('KFAKTURY',MS.name(FINFO,'KFAKTURY'),1,,MS.comment(FINFO,'KFAKTURY'));
_xls.define('KDOKKS',MS.name(FINFO,'KDOKKS'),1,,MS.comment(FINFO,'KDOKKS'));
_xls.define('KWTYPW',MS.name(FINFO,'KWTYPW'),1,,MS.comment(FINFO,'KWTYPW'));
_xls.define('KWW_PROC',MS.name(FINFO,'KWW_PROC'),1,,MS.comment(FINFO,'KWW_PROC'),type_of(0),2);
_xls.define('KWW_WART',MS.name(FINFO,'KWW_WART'),1,,MS.comment(FINFO,'KWW_WART'),type_of(0),2);
_xls.define('KWTYPI',MS.name(FINFO,'KWTYPI'),1,,MS.comment(FINFO,'KWTYPI'));
_xls.define('KWI_PROC',MS.name(FINFO,'KWI_PROC'),1,,MS.comment(FINFO,'KWI_PROC'),type_of(0),2);
_xls.define('KWI_WART',MS.name(FINFO,'KWI_WART'),1,,MS.comment(FINFO,'KWI_WART'),type_of(0),2);
_xls.define('KBTYPW',MS.name(FINFO,'KBTYPW'),1,,MS.comment(FINFO,'KBTYPW'));
_xls.define('KBW_PROC',MS.name(FINFO,'KBW_PROC'),1,,MS.comment(FINFO,'KBW_PROC'),type_of(0),2);
_xls.define('KBW_WART',MS.name(FINFO,'KBW_WART'),1,,MS.comment(FINFO,'KBW_WART'),type_of(0),2);
_xls.define('KBTYPI',MS.name(FINFO,'KBTYPI'),1,,MS.comment(FINFO,'KBTYPI'));
_xls.define('KBI_PROC',MS.name(FINFO,'KBI_PROC'),1,,MS.comment(FINFO,'KBI_PROC'),type_of(0),2);
_xls.define('KBI_WART',MS.name(FINFO,'KBI_WART'),1,,MS.comment(FINFO,'KBI_WART'),type_of(0),2);
~~


\kontrola_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia tablicę wartościami, które będą zapisane w arkuszu Excel.
::       Użycie: export
::   WE: _a [OBJECT] - środowisko mechanizmu
::       _b [OBJECT] - tablica nazwana z wartościami pól
::       _c [DATA] - data, na którą mają być ustalone wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_env:=_a;
_buf:=_b;
_date:=_c;

: niezbędne podczytanie wartości stałych
exec('czytaj','#stalesys',_date,FINFO);

: wartości stałych do zapisania
_buf.KBUDZET.VALUE:=FINFO.KBUDZET;
_buf.KWERBUD.VALUE:=FINFO.KWERBUD().SYM;
_buf.KZAPOT.VALUE:=FINFO.KZAPOT;
_buf.KFAKTURY.VALUE:=FINFO.KFAKTURY;
_buf.KDOKKS.VALUE:=FINFO.KDOKKS;
_buf.KWTYPW.VALUE:=FINFO.KWTYPW;
_buf.KWW_PROC.VALUE:=FINFO.KWW_PROC;
_buf.KWW_WART.VALUE:=FINFO.KWW_WART;
_buf.KWTYPI.VALUE:=FINFO.KWTYPI;
_buf.KWI_PROC.VALUE:=FINFO.KWI_PROC;
_buf.KWI_WART.VALUE:=FINFO.KWI_WART;
_buf.KBTYPW.VALUE:=FINFO.KBTYPW;
_buf.KBW_PROC.VALUE:=FINFO.KBW_PROC;
_buf.KBW_WART.VALUE:=FINFO.KBW_WART;
_buf.KBTYPI.VALUE:=FINFO.KBTYPI;
_buf.KBI_PROC.VALUE:=FINFO.KBI_PROC;
_buf.KBI_WART.VALUE:=FINFO.KBI_WART;

: uzupełnij arkusz o powiązane wiersze
_env.write_async('K_WERSJE',FINFO.KWERBUD);

1


\kontrola_validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.KBUDZET='T' & _buf.KWERBUD=''
   || 'KWERBUD'
   || ''
   ?};
{? _fld<>''
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

::: błędy
::_fld:=spli_str('KWW_PROC,KWW_WART,KWI_PROC,KWI_WART,KBW_PROC,KBW_WART,KBI_PROC,KBI_WART',',');
::{! _ii:=1..obj_len(_fld)
::|! _acr:=_fld[_ii];
::   {? ($('_a.%1<0'[_acr]))(_buf)
::   || _val.msg_range(_acr,0);
::      return(0)
::   ?}
::!};
::obj_del(_fld);

: ostrzeżenia
_fld:=spli_str(
   'KBUDZET,KZAPOT,KFAKTURY,KDOKKS,KWTYPW,KWTYPI,'
   'KBTYPW,KBTYPI',
   ','
);
{! _ii:=1..obj_len(_fld)
|! _acr:=_fld[_ii];
   _max:=MS.fld_len(FINFO,_acr);
   {? ($('+_a.%1>_b'[_acr]))(_buf,_max)
   || _val.msg_length(_acr,_max);
      ($('_a.%1:=_b+_a.%1'[_acr]))(_buf,_max)
   ?}
!};
obj_del(_fld);

: weryfikacja spójności referencyjnej
{? _buf.KWERBUD<>''
|| {? K_WERSJE.find_tab(,'SYM',,'=',_buf.KWERBUD)
   || _kwerbud:=K_WERSJE.ref()
   || _val.msg_norec('KWERBUD');
      _val.RESULT:=0;
      return()
   ?}
|| _kwerbud:=null
?};


: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',null,
   "'%1'[$_a.DATE]"
   ,'KWERBUD',_kwerbud
);

~~


\kontrola_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje stałych na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::       _d [DATA] - data, na którą mają być zapisane wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;
_date:=_d;

FINFO.KBUDZET:=_buf.KBUDZET;
{? _buf.KWERBUD<>''
|| FINFO.KWERBUD:=_obj.KWERBUD
|| FINFO.KWERBUD:=null
?};
FINFO.KZAPOT:=_buf.KZAPOT;
FINFO.KFAKTURY:=_buf.KFAKTURY;
FINFO.KDOKKS:=_buf.KDOKKS;
FINFO.KWTYPW:=_buf.KWTYPW;
FINFO.KWW_PROC:=_buf.KWW_PROC;
FINFO.KWW_WART:=_buf.KWW_WART;
FINFO.KWTYPI:=_buf.KWTYPI;
FINFO.KWI_PROC:=_buf.KWI_PROC;
FINFO.KWI_WART:=_buf.KWI_WART;
FINFO.KBTYPW:=_buf.KBTYPW;
FINFO.KBW_PROC:=_buf.KBW_PROC;
FINFO.KBW_WART:=_buf.KBW_WART;
FINFO.KBTYPI:=_buf.KBTYPI;
FINFO.KBI_PROC:=_buf.KBI_PROC;
FINFO.KBI_WART:=_buf.KBI_WART;

: zapisz zmianę stałych z właściwą datą
exec('zapisz','#stalesys',_date,FINFO,
   'KBUDZET','KWERBUD','KZAPOT','KFAKTURY','KDOKKS','KWTYPW','KWW_PROC',
   'KWW_WART','KWTYPI','KWI_PROC','KWI_WART','KBTYPW','KBW_PROC','KBW_WART','KBTYPI','KBI_PROC',
   'KBI_WART'
);
~~


\fstp_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Zwraca alias tabeli tymczasowej zawierającej daty zmian wybranych stałych systemu (kolumna DATE).
::   WE: _a [INTEGER] - tryb wykonywania formuły
::   WY: alias tabeli
::----------------------------------------------------------------------------------------------------------------------
_TAB:=exec('daty_zmian','#stalesys',,FINFO,
   'DOKL','W','LIMIT_EU','LIMIT_OE','LIMIT_OS','TOR_D','SPR_GRP','AMOR',
   'NRI_T','NRI_N','NRI_T_S','NRI_N_S','NRI_REDP','SRST_MET',
   'SRST_MET','SRXI_LT','SRXI_MT','SRXI_LT','SRXI_MT',
   'ZAS_MT','ZAS_MT','KST_MT','KST_MT','AMO_RODZ'
);
_TAB


\fstp_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Prolog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
SRDT.cntx_psh();
SRDT.use('srdtr'+REF.FIRMA().SYMBOL);
SRDT.prefix();
~~


\fstp_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Epilog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
SRDT.cntx_pop();
~~


\fstp_fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Definicja kolumn akrusza Excel.
::   WE: _a [OBJECT] - obiekt definiujący pola
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_xls:=_a;


_xls.define('DOKL',MS.name(FINFO,'DOKL'),1,,MS.comment(FINFO,'DOKL'),type_of(0),0);
_xls.define('W',MS.name(FINFO,'W'),1,,MS.comment(FINFO,'W'),type_of(0),2);
_xls.define('LIMIT_EU',MS.name(FINFO,'LIMIT_EU'),1,,MS.comment(FINFO,'LIMIT_EU'),type_of(0),2);
_xls.define('LIMIT_OE',MS.name(FINFO,'LIMIT_OE'),1,,MS.comment(FINFO,'LIMIT_OE'),type_of(0),2);
_xls.define('LIMIT_OS',MS.name(FINFO,'LIMIT_OS'),1,,MS.comment(FINFO,'LIMIT_OS'),type_of(0),2);
_xls.define('TOR_D',MS.name(FINFO,'TOR_D'),1,,MS.comment(FINFO,'TOR_D'));
_xls.define('SPR_GRP',MS.name(FINFO,'SPR_GRP'),1,,MS.comment(FINFO,'SPR_GRP'));
_xls.define('AMOR',MS.name(FINFO,'AMOR'),1,,MS.comment(FINFO,'AMOR'));

_xls.define('NRI_T',MS.name(FINFO,'NRI_T'),1,,MS.comment(FINFO,'NRI_T'));
_xls.define('NRI_N',MS.name(FINFO,'NRI_N'),1,,MS.comment(FINFO,'NRI_N'));
_xls.define('NRI_T_S',MS.name(FINFO,'NRI_T_S'),1,,MS.comment(FINFO,'NRI_T_S'));
_xls.define('NRI_N_S',MS.name(FINFO,'NRI_N_S'),1,,MS.comment(FINFO,'NRI_N_S'));
_xls.define('NRI_REDP',MS.name(FINFO,'NRI_REDP'),1,,MS.comment(FINFO,'NRI_REDP'));

_xls.define('SRSTMETT',MS.name(FINFO,'SRST_MET'),1,,MS.comment(FINFO,'SRST_MET'));
_xls.define('SRST_MET',MS.name(FINFO,'SRST_MET'),1,,MS.comment(FINFO,'SRST_MET'));
_xls.define('SRXI_LTT',MS.name(FINFO,'SRXI_LT'),1,,MS.comment(FINFO,'SRXI_LT'));
_xls.define('SRXI_MTT',MS.name(FINFO,'SRXI_MT'),1,,MS.comment(FINFO,'SRXI_MT'));
_xls.define('SRXI_LT',MS.name(FINFO,'SRXI_LT'),1,,MS.comment(FINFO,'SRXI_LT'));
_xls.define('SRXI_MT',MS.name(FINFO,'SRXI_MT'),1,,MS.comment(FINFO,'SRXI_MT'));
_xls.define('ZAS_MTT',MS.name(FINFO,'ZAS_MT'),1,,MS.comment(FINFO,'ZAS_MT'));
_xls.define('ZAS_MT',MS.name(FINFO,'ZAS_MT'),1,,MS.comment(FINFO,'ZAS_MT'));
_xls.define('KST_MTT',MS.name(FINFO,'KST_MT'),1,,MS.comment(FINFO,'KST_MT'));
_xls.define('KST_MT',MS.name(FINFO,'KST_MT'),1,,MS.comment(FINFO,'KST_MT'));
_xls.define('AMO_RODZ',MS.name(FINFO,'AMO_RODZ'),1,,MS.comment(FINFO,'AMO_RODZ'));
~~


\fstp_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia tablicę wartościami, które będą zapisane w arkuszu Excel.
::       Użycie: export
::   WE: _a [OBJECT] - środowisko mechanizmu
::       _b [OBJECT] - tablica nazwana z wartościami pól
::       _c [DATA] - data, na którą mają być ustalone wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_env:=_a;
_buf:=_b;
_date:=_c;

: niezbędne podczytanie wartości stałych
exec('czytaj','#stalesys',_date,FINFO);

: wartości stałych do zapisania
_buf.DOKL.VALUE:=FINFO.DOKL;
_buf.W.VALUE:=FINFO.W;
_buf.LIMIT_EU.VALUE:=FINFO.LIMIT_EU;
_buf.LIMIT_OE.VALUE:=FINFO.LIMIT_OE;
_buf.LIMIT_OS.VALUE:=FINFO.LIMIT_OS;
_buf.TOR_D.VALUE:=FINFO.TOR_D;
_buf.SPR_GRP.VALUE:=FINFO.SPR_GRP;
_buf.AMOR.VALUE:=FINFO.AMOR;

_buf.NRI_T.VALUE:=FINFO.NRI_T;
_buf.NRI_N.VALUE:=FINFO.NRI_N;
_buf.NRI_T_S.VALUE:=FINFO.NRI_T_S;
_buf.NRI_N_S.VALUE:=FINFO.NRI_N_S;
_buf.NRI_REDP.VALUE:=FINFO.NRI_REDP;

_buf.SRSTMETT.VALUE:=FINFO.SRST_MET().TYP;
_buf.SRST_MET.VALUE:=FINFO.SRST_MET().NAZWA;
_buf.SRXI_LTT.VALUE:=FINFO.SRXI_LT().TYP;
_buf.SRXI_MTT.VALUE:=FINFO.SRXI_MT().TYP;
_buf.SRXI_LT.VALUE:=FINFO.SRXI_LT().NAZWA;
_buf.SRXI_MT.VALUE:=FINFO.SRXI_MT().NAZWA;
_buf.ZAS_MTT.VALUE:=FINFO.ZAS_MT().TYP;
_buf.ZAS_MT.VALUE:=FINFO.ZAS_MT().NAZWA;
_buf.KST_MTT.VALUE:=FINFO.KST_MT().TYP;
_buf.KST_MT.VALUE:=FINFO.KST_MT().NAZWA;

_buf.AMO_RODZ.VALUE:=FINFO.AMO_RODZ;

: uzupełnij arkusz o powiązane wiersze
_env.write_async('SRDT',FINFO.SRST_MET);
_env.write_async('SRDT',FINFO.SRXI_LT);
_env.write_async('SRDT',FINFO.SRXI_MT);
_env.write_async('SRDT',FINFO.ZAS_MT);
_env.write_async('SRDT',FINFO.KST_MT);

1


\fstp_validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;


: weryfikacja spójności referencyjnej
{? _buf.SRSTMETT<>''
|| {? SRDT.find_tab(,'TYP',,'=',_buf.SRSTMETT)
   || _srstmet:=SRDT.ref()
   || _val.msg_norec('SRST_MET');
      _val.RESULT:=0;
      return()
   ?}
|| _srstmet:=null
?};

{? _buf.SRXI_LTT<>''
|| {?  SRDT.find_tab(,'TYP',,'=',_buf.SRXI_LTT)
   || _srxilt:=SRDT.ref()
   || _val.msg_norec('SRXI_LT');
      _val.RESULT:=0;
      return()
   ?}
|| _srxilt:=null
?};

{? _buf.SRXI_MTT<>''
|| {?  SRDT.find_tab(,'TYP',,'=',_buf.SRXI_MTT)
   || _srximt:=SRDT.ref()
   || _val.msg_norec('SRXI_MT');
      _val.RESULT:=0;
      return()
   ?}
|| _srximt:=null
?};

{? _buf.ZAS_MTT<>''
|| {?  SRDT.find_tab(,'TYP',,'=',_buf.ZAS_MTT)
   || _zasmt:=SRDT.ref()
   || _val.msg_norec('ZAS_MT');
      _val.RESULT:=0;
      return()
   ?}
|| _zasmt:=null
?};

{? _buf.KST_MTT<>''
|| {?  SRDT.find_tab(,'TYP',,'=',_buf.KST_MTT)
   || _kstmt:=SRDT.ref()
   || _val.msg_norec('KST_MT');
      _val.RESULT:=0;
      return()
   ?}
|| _kstmt:=null
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',null,
   "'%1'[$_a.DATE]",
   'SRSTMETT',_srstmet,
   'SRXI_LTT',_srxilt,
   'SRXI_MTT',_srximt,
   'ZAS_MTT',_zasmt,
   'KST_MTT',_kstmt
);

~~


\fstp_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje stałych na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::       _d [DATA] - data, na którą mają być zapisane wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;
_date:=_d;

: ustaw wartości stałych
FINFO.DOKL:=_buf.DOKL;

FINFO.LIMIT_EU:=_buf.LIMIT_EU;
FINFO.LIMIT_OS:=_buf.LIMIT_OS;
FINFO.LIMIT_OE:=_buf.LIMIT_OE;
FINFO.TOR_D:=_buf.TOR_D;
FINFO.SPR_GRP:=_buf.SPR_GRP;
FINFO.AMOR:=_buf.AMOR;
FINFO.W:=_buf.W;

FINFO.NRI_T:=_buf.NRI_T;
FINFO.NRI_N:=_buf.NRI_N;
FINFO.NRI_T_S:=_buf.NRI_T_S;
FINFO.NRI_N_S:=_buf.NRI_N_S;
FINFO.NRI_REDP:=_buf.NRI_REDP;

FINFO.SRST_MET:=_obj.SRSTMETT;
FINFO.SRXI_LT:=_obj.SRXI_LTT;
FINFO.SRXI_MT:=_obj.SRXI_MTT;
FINFO.ZAS_MT:=_obj.ZAS_MTT;
FINFO.KST_MT:=_obj.KST_MTT;

FINFO.AMO_RODZ:=_buf.AMO_RODZ;


: zapisz zmianę stałych z właściwą datą
exec('zapisz','#stalesys',_date,FINFO,
   'DOKL','W','LIMIT_EU','LIMIT_OS','LIMIT_OE','TOR_D','SPR_GRP','AMOR',
   'NRI_T','NRI_N','NRI_T_S','NRI_N_S','NRI_REDP','SRST_MET',
   'SRST_MET','SRXI_LT','SRXI_MT','SRXI_LT','SRXI_MT',
   'ZAS_MT','ZAS_MT','KST_MT','KST_MT','AMO_RODZ'
);
~~


\edek_red_table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Zwraca alias tabeli tymczasowej zawierającej daty zmian wybranych stałych systemu (kolumna DATE).
::   WE: _a [INTEGER] - tryb wykonywania formuły
::   WY: alias tabeli
::----------------------------------------------------------------------------------------------------------------------
_TAB:=exec('daty_zmian','#stalesys',,XINFO,
   'HTTPPATH','EDEK_DLL','EDEKGATE','EDEKPRXN','EDEKPRXP','JPKGATE','JPKPRXS','JPKLOG'
);
_TAB


\edek_red_before
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Prolog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
~~


\edek_red_after
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Epilog iteracji po tabeli zawierającej daty zmian wybranych stałych systemu.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
~~


\edek_red_fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Definicja kolumn akrusza Excel.
::   WE: _a [OBJECT] - obiekt definiujący pola
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_xls:=_a;

_xls.define('HTTPPATH',MS.name(XINFO,'HTTPPATH'),1,,MS.comment(XINFO,'HTTPPATH'));
_xls.define('EDEK_DLL',MS.name(XINFO,'EDEK_DLL'),1,,MS.comment(XINFO,'EDEK_DLL'));
_xls.define('EDEKGATE',MS.name(XINFO,'EDEKGATE'),1,,MS.comment(XINFO,'EDEKGATE'));
_xls.define('EDEKPRXN',MS.name(XINFO,'EDEKPRXN'),1,,MS.comment(XINFO,'EDEKPRXN'));
_xls.define('EDEKPRXP',MS.name(XINFO,'EDEKPRXP'),1,,MS.comment(XINFO,'EDEKPRXP'),type_of(0),0);
_xls.define('JPKGATE',MS.name(XINFO,'JPKGATE'),1,,MS.comment(XINFO,'JPKGATE'));
_xls.define('JPKPRXS',MS.name(XINFO,'JPKPRXS'),1,,MS.comment(XINFO,'JPKPRXS'));
_xls.define('JPKLOG',MS.name(XINFO,'JPKLOG'),1,,MS.comment(XINFO,'JPKLOG'));

~~


\edek_red_export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Wypełnia tablicę wartościami, które będą zapisane w arkuszu Excel.
::       Użycie: export
::   WE: _a [OBJECT] - środowisko mechanizmu
::       _b [OBJECT] - tablica nazwana z wartościami pól
::       _c [DATA] - data, na którą mają być ustalone wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_env:=_a;
_buf:=_b;
_date:=_c;

: niezbędne podczytanie wartości stałych
exec('czytaj','#stalesys',_date,XINFO);

: wartości stałych do zapisania
_buf.HTTPPATH.VALUE:=XINFO.HTTPPATH;
_buf.EDEK_DLL.VALUE:=XINFO.EDEK_DLL;
_buf.EDEKGATE.VALUE:=XINFO.EDEKGATE;
_buf.EDEKPRXN.VALUE:=XINFO.EDEKPRXN;
_buf.EDEKPRXP.VALUE:=XINFO.EDEKPRXP;
_buf.JPKGATE.VALUE:=XINFO.JPKGATE;
_buf.JPKPRXS.VALUE:=XINFO.JPKPRXS;
_buf.JPKLOG.VALUE:=XINFO.JPKLOG;

: uzupełnij arkusz o powiązane wiersze
1


\edek_red_validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: błędne wartości
{? _buf.EDEKPRXP<0
|| _val.msg_range('EDEKPRXP',0);
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(XINFO,'JPKLOG');
{? +_buf.JPKLOG>_max
|| _val.msg_length('JPKLOG',_max);
   _buf.JPKLOG:=_max+_buf.JPKLOG
?};

_max:=MS.fld_len(XINFO,'JPKPRXS');
{? +_buf.JPKPRXS>_max
|| _val.msg_length('JPKPRXS',_max);
   _buf.JPKPRXS:=_max+_buf.JPKPRXS
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',null,
   "'%1'[$_a.DATE]",
);

~~


\edek_red_import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [18.42]
:: OPIS: Tworzy lub modyfikuje stałych na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące (ignorowany)
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::       _d [DATA] - data, na którą mają być zapisane wartości pól
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;
_date:=_d;

: ustaw wartości stałych
XINFO.HTTPPATH:=_buf.HTTPPATH;
XINFO.EDEK_DLL:=_buf.EDEK_DLL;
XINFO.EDEKGATE:=_buf.EDEKGATE;
XINFO.EDEKPRXN:=_buf.EDEKPRXN;
XINFO.EDEKPRXP:=_buf.EDEKPRXP;
XINFO.JPKGATE:=_buf.JPKGATE;
XINFO.JPKPRXS:=_buf.JPKPRXS;
XINFO.JPKLOG:=_buf.JPKLOG;


: zapisz zmianę stałych z właściwą datą
exec('zapisz','#stalesys',_date,
   XINFO,'HTTPPATH','EDEK_DLL','EDEKGATE','EDEKPRXN','EDEKPRXP','JPKGATE','JPKPRXS','JPKLOG'
);
~~

:Sign Version 2.0 jowisz:1028 2019/10/14 09:22:00 3e5ff271890201469f663f3f2abc2a3da29b1e36941fca117991934f6a4456c48728c5bcaa46bb19ff2514b5b45cd054593a84fe54df9003ae2348d0765db01e3f4f0164ee82b8277f0d143c1931028be933c1724ff3716b41aadbc034ae4216d8f4bb8d48635ce8cf7e78b699e36c05caef27fdfdaabc37ef1fc5fcab26c464
