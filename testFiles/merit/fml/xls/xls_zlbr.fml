:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_zlbr.fml
:: Utworzony: 27.07.2018
:: Autor: TS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu brygad
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='ZLBR';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='ZWS_PAR_TBRG';

_def.FILE:='parametryzacja.xlsx';
_def.SHEET:='Brygady'@+'=1,1';
_def.NAME:='Brygady'@;
_def.DESC:='Brygady'@;

:: Eskportuje tylko brygady aktywne i niedynamiczne
_def.PREFIX:="ZLBR.index('AKT_DYN'); ZLBR.prefix('T','N')";
_def.TABLE:="ZLBR";
_def.FIELDS:="exec('fields','xls_zlbr',_a)";

_def.BEFORE:="ZLBR.cntx_psh()";
_def.AFTER:="ZLBR.cntx_pop()";
_def.SELECT:="exec('select','xls_zlbr',_a)";

_def.EXPORT:="exec('export','xls_zlbr',_a,_b)";
_def.VALIDATE:="exec('validate','xls_zlbr',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_zlbr',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('KOD','Kod'@,0,,'Kod (max. %1 znaków)'@['20']);
_def.define('NAZ','Nazwa'@,0,,'Nazwa (max. %1 znaków)'@['40']);
_def.define('OD','Od dnia'@,1);
_def.define('DO','Do dnia'@,1);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
ZLBR.prefix();
{? _validate.ACTION='add'
|| ZLBR.blank();
   ZLBR.KOD:=_obj.KOD;
   ZLBR.ODDZ:='';
   ZLBR.H:=''
?};
ZLBR.NAZ:=_obj.NAZ;
ZLBR.OD:=_obj.OD;
ZLBR.DO:=_obj.DO;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;

_table.KOD.VALUE:=ZLBR.KOD;
_table.NAZ.VALUE:=ZLBR.NAZ;
_table.OD.VALUE:=ZLBR.OD;
_table.DO.VALUE:=ZLBR.DO;

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

:: walidacja w imporcie nie sprawdza pola 'brygadzista', bo nie jest importowana kartoteka pracowników
_chk:="
   _chk:=__CHK.record(ZLBR,,'KOD','NAZ');
   {? _chk=''
   || _chk:=__CHK.index(ZLBR,_a)
   ?};
   _chk
";

_result.RESULT:=1;

:: Ostrzeżenia
{? +_obj.NAZ>60
|| _result.msg_length('NAZ',60)
?};
{? +_obj.KOD>20
|| _result.msg_length('KOD',20)
?};

:: OK
ZLBR.index('KOD');
ZLBR.prefix(_obj.KOD,);
{? ZLBR.first()
|| {? _mode=0
   || _result.RESULT:=0
   || _result.ACTION:='put';
      exec('record','xls_zlbr',_obj,_mode,_result);
      {? _chk(1)<>''
      || _result.RESULT:=0
      ?}
   ?}
|| _result.ACTION:='add';
   exec('record','xls_zlbr',_obj,_mode,_result);
   {? _chk(0)<>''
   || _result.RESULT:=0
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=ZLBR.add(1);
::    Przypisuje kalendarz cząstkowy
      _nazwa:=%255+$ZLBR.ref();
      KAL_NAZW.cntx_psh();
      KAL_NAZW.index('KAL_NAZW');
      KAL_NAZW.prefix(exec('ref_firma','ustawienia'));
      {? KAL_NAZW.find_key(_nazwa,_nazwa)
      || ZLBR.KAL:=KAL_NAZW.ref();
         ZLBR.put()
      || KAL_NAZW.blank();
         KAL_NAZW.NAZWA:=_nazwa;
         KAL_NAZW.CZESC:='T';
         {? KAL_NAZW.add(1)
         || ZLBR.KAL:=KAL_NAZW.ref();
            ZLBR.put()
         ?}
      ?};
      KAL_NAZW.cntx_pop()
   |? _validate.ACTION='put'
   || _result:=ZLBR.put(1)
   ?};
   {? _result>0 & ZLBR.KAL=null()
   || R_WZCZ.index('R_WZWND');
      R_WZCZ.prefix(ZLBR.name(),ZLBR.ref(),'N','N');
      {? ~R_WZCZ.size()
      || exec('dod_kal_czesc','kaledit',ZLBR)
      ?}
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie brygady %1 nie powiodło się.'@[$_obj.KOD]
   || _validate.MSG:='Poprawa brygady %1 nie powiodła się.'@[$_obj.KOD]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,
   'KOD','STRING[20]','Kod'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'NAZ','STRING[40]','Nazwa'
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

ZLBR.cntx_psh();
ZLBR.index('KOD');
ZLBR.prefix();
{? ZLBR.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$ZLBR.ref();
      _selected.prefix($ZLBR.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:=ZLBR.KOD;
      _tab.NAZ:=ZLBR.NAZ;
      _tab.add();
      ZLBR.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'KOD,NAZ',20,'Wybór brygad do eksportu'@);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
ZLBR.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2021/04/09 15:28:03 a422fd1779c6f20385b79b2d10c7f64417519c6a43715f90c245c9bc4de172b0f35291c99673cff95d9650145475927c2e16b8672b510a8e7b2fab407919eb8b844bf0e8dbd5aeda7140940ff1d9acf13b1e0b502b3a8be783b17dbd61433adb5cfdfc0d4ad6698d0bafb80cfc9bfbd67cf37b972e67e261c8b61d1ba6b6f896
