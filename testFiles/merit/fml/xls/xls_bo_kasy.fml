:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_bo_kasy.fml
:: Utworzony: 19.07.2018
:: Autor: Markus
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu bilansu otwarcia stanowiska
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='BO_KASY';
_def.DOMAIN:=exec('name','#b_domain','KAS');
_def.FUNPAR:='ZWS_IMPORTY_KAS';

_def.FILE:='kasa.xlsx';
_def.SHEET:='Bilans otwarcia stanowiska=1,1';
_def.NAME:='Bilans otwarcia stanowiska kasowego'@;
_def.DESC:='Bilans otwarcia stanowiska kasowego';
_def.TABLE:="exec('table','xls_bo_kasy')";
_def.FIELDS:="exec('fields','xls_bo_kasy',_a)";
_def.EXPORT:="exec('export','xls_bo_kasy',_a,_b)";
_def.IMPORT:="exec('import','xls_bo_kasy',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_bo_kasy',_a,_b,_c)";
_def.SELECT:="exec('select','xls_bo_kasy',_a)";
_def.PREFIX:="BO_KASY.index('STANKAS'); BO_KASY.prefix()";
_def.BEFORE:="BO_KASY.cntx_psh()";
_def.AFTER:="BO_KASY.cntx_pop()";
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Określa zakres eksportowanych danych
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
BO_KASY


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('STANKAS','Stanowisko kasowe',0,,'Wskazanie na stanowisko kasowe',type_of(''));
_def.define('WAL','Waluta',0,,'Wskazanie na walutę pozycji bilansu otwarcia',type_of(''));
_def.define('BO_WAL','Kwota w walucie',1,,'Kwota w walucie pozycji bilansu otwarcia stanowiska kasowego',type_of(0),2);
_def.define('BO_PLN','Kwota w PLN',1,,'Kwota w PLN pozycji bilansu otwarcia stanowiska kasowego',type_of(0),2);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
BO_KASY.prefix();
{? _validate.ACTION='add'
||
   BO_KASY.blank();
   BO_KASY.STANKAS:=_validate.OBJ.STANKAS;
   BO_KASY.WAL:=_validate.OBJ.WAL
?};

BO_KASY.BO_WAL:=_obj.BO_WAL$2;
BO_KASY.BO_PLN:=_obj.BO_PLN$2;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;

_table.STANKAS.VALUE:=form(BO_KASY.STANKAS().KOD,,,'99');
_excel.write_async('STANKAS',BO_KASY.STANKAS);

_table.WAL.VALUE:=BO_KASY.WAL().SYM;
_excel.write_async('WAL',BO_KASY.WAL);

_table.BO_WAL.VALUE:=BO_KASY.BO_WAL;
_table.BO_PLN.VALUE:=BO_KASY.BO_PLN;

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('STANKAS', 'WAL');

_result.OBJ.STANKAS:=exec('FindInSet','#table','STANKAS','KOD',#_obj.STANKAS);
{? _result.OBJ.STANKAS=null()
||
   _result.MSG:='Nie znaleziono stanowiska o kodzie %1.'@[_obj.STANKAS];
   _result.RESULT:=0;
   return(~~)
?};

_result.OBJ.WAL:=exec('FindInSet','#table','WAL','WAL_SYM',_obj.WAL,,,1);
{? _result.OBJ.WAL=null()
||
   _result.MSG:='Nie znaleziono waluty o kodzie %1.'@[_obj.WAL];
   _result.RESULT:=0;
   return(~~)
?};

{? +$fabs(frac(_obj.BO_PLN))>4
||
   _result.msg_value('BO_PLN','Należy podać wartość z dokładnością nie większą niż dwa miejsca po przecinku.');
   return(~~)
?};

exec('czytaj','#stalesys',,KINFO,'NAROD');
{? +$fabs(frac(_obj.BO_WAL))>4
||
   _result.msg_value('BO_WAL','Należy podać wartość z dokładnością nie większą niż dwa miejsca po przecinku.');
   return(~~)

|? _obj.BO_WAL & _result.OBJ.WAL=exec('wal_nar','kasa_wspolne')
||
   _result.msg_value('BO_WAL','Stanowisko kasowe niewalutowe. Kwota w walucie została pominięta.');
   _obj.BO_WAL:=_obj.BO_PLN
?};

{? _result.RESULT = 1
||
   BO_KASY.index('STANKAS');
   BO_KASY.prefix(_result.OBJ.STANKAS, _obj.WAL);
   {? BO_KASY.first()
   ||
      {? _mode=0
      || _result.RESULT:=0
      ||
         _result.ACTION:='put';
         exec('record','xls_bo_kasy',_obj,_mode,_result);
         {? exec('bo_kasy_chk','kasa_wspolne') <>''
         ||
            _result.RESULT:=0
         ?}
      ?}
   ||
      _result.ACTION:='add';
      exec('record','xls_bo_kasy',_obj,_mode,_result);
      {? exec('bo_kasy_chk','kasa_wspolne') <>''
      || _result.RESULT:=0
      ?}
   ?}
?};
_result


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      _result:=BO_KASY.add(1)
   |? _validate.ACTION='put'
   ||
      _result:=BO_KASY.put(1)
   ?}
?};
{? _result=0
||
   {? _validate.ACTION='add'
   ||
      FUN.info('Dodanie bilansu otwarcia stanowiska kasowego nie powiodło się.'@)
   ||
      FUN.info('Poprawa bilansu otwarcia stanowiska kasowego nie powiodła się.'@)
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'STANKAS','STRING[30]','Stanowisko kasowe'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'WAL','STRING[20]','Waluta');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'STANKAS',,);

BO_KASY.cntx_psh();
BO_KASY.index('STANKAS');
BO_KASY.prefix();
{? BO_KASY.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$BO_KASY.ref();
      _selected.prefix($BO_KASY.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.STANKAS:=BO_KASY.STANKAS().NAZWA;
      _tab.WAL:=BO_KASY.WAL().NAZ;
      _tab.add();
      BO_KASY.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'STANKAS,WAL',20,'Wybór bilansu otwarcia stanowiska do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
BO_KASY.cntx_pop();

_result

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:47 791f7b93de68c8fbfaa5ee97682d40b4b49775127b58a3884885040d75e5ecd051736d9c4b5e59579d00b0b6e5c904506a258f90b9213e6df0ff6ebdbe1bb0694451f02c5a49ed5107ee8e31cdb9618cb89334017b74c37affdb2c6d38cfe37ec3d3152e43b5dd62163d423ad78eca98446daa938009d1e6a6dbd74887a07f49
