:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_kalendarz.fml
:: Utworzony: 02.08.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu kalendarzy
::======================================================================================================================


\def_xlsx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Zwraca domyślną nazwę pliku wymiany danych.
::   WE:
::   WY: nazwa pliku z rozszerzeniem
::----------------------------------------------------------------------------------------------------------------------
'kalendarze.xlsx'


\init_nazw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='KAL_NAZW';
_def.FUNPAR:='ZWS_PAR_PKAL';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_xlsx','xls_kalendarz');
_def.SHEET:='Kalendarze=1,1';
_def.NAME:='Kalendarze - nazwy kalendarzy'@;
_def.DESC:='Kalendarze - nazwy kalendarzy';
_def.HIDDEN:='T';

: źródło danych
_def.TABLE:="KAL_NAZW";

: prolog i epilog
_def.BEFORE:="exec('before_nazw','xls_kalendarz',_a)";
_def.AFTER:="exec('after_nazw','xls_kalendarz',_a)";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('NAZWA',MS.name(KAL_NAZW,'NAZWA'),0,,'Unikalna nazwa identyfikująca kalendarz');
   _env.define('NORMA',MS.name(KAL_NAZW,'NORMA'),1,,MS.comment(KAL_NAZW,'NORMA'));
   _env.define('WE',   MS.name(KAL_NAZW,'WE'),   1,,MS.comment(KAL_NAZW,'WE'));
   _env.define('WY',   MS.name(KAL_NAZW,'WY'),   1,,MS.comment(KAL_NAZW,'WY'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.NAZWA.VALUE:=KAL_NAZW.NAZWA;
   _buf.NORMA.VALUE:=KAL_NAZW.NORMA;
   _buf.WE.VALUE:=KAL_NAZW.WE;
   _buf.WY.VALUE:=KAL_NAZW.WY;
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate_nazw','xls_kalendarz',_a,_b,_c)";
_def.IMPORT:="exec('import_nazw','xls_kalendarz',_a,_b,_c)";
~~


\before_nazw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Przed rozpoczęciem iteracji po zestawie danych.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
KAL_NAZW.cntx_psh();
KAL_NAZW.f_clear();
KAL_NAZW.prefix();
exec('__KAL','object');
~~


\after_nazw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Po zakończeniu iteracji po zestawie danych.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
KAL_NAZW.cntx_pop();
~~


\validate_nazw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.NAZWA='' || 'NAZWA'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(KAL_NAZW,'NAZWA');
{? +_buf.NAZWA>_max
|| _val.msg_length('NAZWA',_max);
   _buf.NAZWA:=_max+_buf.NAZWA
?};

_ref:=null;
{? KAL_NAZW.find_tab(,
      'FIRMA',,'=',REF.FIRMA,
      'NAZWA',,'=',_buf.NAZWA
   )
|| _ref:=KAL_NAZW.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,"_a.NAZWA");
~~


\import_nazw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,KAL_NAZW,"
   _a.NAZWA:=_b.NAZWA;
   _a.NORMA:=_b.NORMA;
   _a.WE:=_b.WE;
   _a.WY:=_b.WY;
   _a.FIRMA:=REF.FIRMA;
   _a.OPIS:=_a.NAZWA;
   _a.CZESC:='N';
   _a.GRAFIK:='N';
   ~~
");
~~


\init_wzor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='KAL_WZOR';
_def.FUNPAR:='ZWS_PAR_PKAL';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_xlsx','xls_kalendarz');
_def.SHEET:='Wzorce=1,1';
_def.NAME:='Kalendarze - nazwy wzorców'@;
_def.DESC:='Kalendarze - nazwy wzorców';
_def.HIDDEN:='T';

: źródło danych
_def.TABLE:="KAL_WZOR";

: prolog i epilog
_def.BEFORE:="exec('before_wzor','xls_kalendarz',_a)";
_def.AFTER:="exec('after_wzor','xls_kalendarz',_a)";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('NAZWA',MS.name(KAL_WZOR,'NAZWA'),0,,'Unikalna nazwa identyfikująca wzorzec');
   _env.define('H_MOD',MS.name(KAL_WZOR,'H_MOD'),0,,'Czy możliwa jest modyfikacja świąt w definicji wzorca');
   ~~
";

: eksport, weryfikacja i import
_def.EXPORT:="exec('export_wzor','xls_kalendarz',_a,_b)";
_def.VALIDATE:="exec('validate_wzor','xls_kalendarz',_a,_b,_c)";
_def.IMPORT:="exec('import_wzor','xls_kalendarz',_a,_b,_c)";
~~


\before_wzor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Przed rozpoczęciem iteracji po zestawie danych.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: zapis asynchroniczny ukrytej funkcji
{? _a.is_export()
|| return()
?};

KAL_WZOR.cntx_psh();
KAL_WZOR.f_clear();
KAL_WZOR.prefix();
~~


\after_wzor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Po zakończeniu iteracji po zestawie danych.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: zapis asynchroniczny ukrytej funkcji
{? _a.is_export()
|| return()
?};

KAL_WZOR.cntx_pop();
~~


\export_wzor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Zwraca informacje do zapisania w arkuszu Excel.
::   WE: _a [OBJECT] - środowisko mechanizmu
::       _b [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::   WY: 0/1 - pomiń/zapisz wiersz
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_env:=_a;
_buf:=_b;

_buf.NAZWA.VALUE:=KAL_WZOR.NAZWA;
_buf.H_MOD.VALUE:=KAL_WZOR.H_MOD;

1


\validate_wzor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.NAZWA='' || 'NAZWA'
   |? _buf.H_MOD='' || 'H_MOD'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? ('TN'*_buf.H_MOD)=0
|| _val.msg_inset('H_MOD','T','N');
   _val.RESULT:=0;
   return()
?};
{? _buf.H_MOD='T' & _buf.NAZWA='standard'
|| _val.msg_value('H_MOD','Dla wzorca \'standard\' jedyną dopuszczalną wartością jest \'N\'');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(KAL_WZOR,'NAZWA');
{? +_buf.NAZWA>_max
|| _val.msg_length('NAZWA',_max);
   _buf.NAZWA:=_max+_buf.NAZWA
?};
_max:=MS.fld_len(KAL_WZOR,'H_MOD');
{? +_buf.H_MOD>_max
|| _val.msg_length('H_MOD',_max);
   _buf.H_MOD:=_max+_buf.H_MOD
?};

_ref:=null;
{? KAL_WZOR.find_tab(,
      'FIRMA',,'=',REF.FIRMA,
      'NAZWA',,'=',_buf.NAZWA
   )
|| _ref:=KAL_WZOR.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,"_a.NAZWA");
~~


\import_wzor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,KAL_WZOR,"
   _a.NAZWA:=_b.NAZWA;
   _a.H_MOD:=_b.H_MOD;
   _a.FIRMA:=REF.FIRMA;
   ~~
");
~~


\init_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='KAL_OPIS';
_def.FUNPAR:='ZWS_PAR_PKAL';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_xlsx','xls_kalendarz');
_def.SHEET:='Definicje wzorców=1,1';
_def.NAME:='Kalendarze - definicje wzorców'@;
_def.DESC:='Kalendarze - definicje wzorców';
_def.HIDDEN:='T';

: źródło danych
_def.TABLE:="KAL_OPIS";

: prolog i epilog
_def.BEFORE:="exec('before_opis','xls_kalendarz',_a)";
_def.AFTER:="exec('after_opis','xls_kalendarz',_a)";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('WZORZEC', MS.name(KAL_OPIS,'WZORZEC'), 0,,MS.comment(KAL_OPIS,'WZORZEC'));
   _env.define('ROK',     MS.name(KAL_OPIS,'ROK'),     0,,MS.comment(KAL_OPIS,'ROK'),,0);
   _env.define('NUMER',   MS.name(KAL_OPIS,'NUMER'),   0,,MS.comment(KAL_OPIS,'NUMER'),,0);
   _env.define('DZIEŃ',   MS.name(KAL_OPIS,'DZIEŃ'),   1,,MS.comment(KAL_OPIS,'DZIEŃ'));
   _env.define('TYP',     MS.name(KAL_OPIS,'TYP'),     1,,MS.comment(KAL_OPIS,'TYP'));
   _env.define('RODZAJ',  MS.name(KAL_OPIS,'RODZAJ'),  1,,MS.comment(KAL_OPIS,'RODZAJ'));
   _env.define('POCZATEK',MS.name(KAL_OPIS,'POCZATEK'),1,,MS.comment(KAL_OPIS,'POCZATEK'));
   _env.define('KONIEC',  MS.name(KAL_OPIS,'KONIEC'),  1,,MS.comment(KAL_OPIS,'KONIEC'));
   _env.define('DNI',     MS.name(KAL_OPIS,'DNI'),     1,,MS.comment(KAL_OPIS,'DNI'),,0);
   _env.define('DATA',    MS.name(KAL_OPIS,'DATA'),    1,,MS.comment(KAL_OPIS,'DATA'));
   _env.define('OPIS',    MS.name(KAL_OPIS,'OPIS'),    1,,MS.comment(KAL_OPIS,'OPIS'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.WZORZEC.VALUE:=KAL_OPIS.WZORZEC().NAZWA;
   _buf.ROK.VALUE:=KAL_OPIS.ROK;
   _buf.NUMER.VALUE:=KAL_OPIS.NUMER;
   _buf.DZIEŃ.VALUE:=KAL_OPIS.DZIEŃ;
   _buf.TYP.VALUE:=KAL_OPIS.TYP;
   _buf.RODZAJ.VALUE:=KAL_OPIS.RODZAJ;
   _buf.POCZATEK.VALUE:=KAL_OPIS.POCZATEK;
   _buf.KONIEC.VALUE:=KAL_OPIS.KONIEC;
   _buf.OPIS.VALUE:=KAL_OPIS.OPIS;
   _buf.DATA.VALUE:=KAL_OPIS.DATA;
   _buf.DNI.VALUE:=KAL_OPIS.DNI;
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate_opis','xls_kalendarz',_a,_b,_c)";
_def.IMPORT:="exec('import_opis','xls_kalendarz',_a,_b,_c)";
~~


\before_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Przed rozpoczęciem iteracji po zestawie danych.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: zapis asynchroniczny ukrytej funkcji
{? _a.is_export()
|| return()
?};

KAL_OPIS.cntx_psh();
KAL_OPIS.f_clear();
KAL_OPIS.prefix();
~~


\after_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Po zakończeniu iteracji po zestawie danych.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: zapis asynchroniczny ukrytej funkcji
{? _a.is_export()
|| return()
?};

KAL_OPIS.cntx_pop();
~~


\validate_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.WZORZEC='' || 'WZORZEC'
   |? _buf.ROK<=0     || 'ROK'
   |? _buf.NUMER<=0   || 'NUMER'
   |? _buf.DZIEŃ=''   || 'DZIEŃ'
   |? _buf.TYP=''     || 'TYP'
   |? _buf.RODZAJ=''  || 'RODZAJ'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? ('RWS'*_buf.TYP)=0
|| _val.msg_inset('TYP','R','W','S');
   _val.RESULT:=0;
   return()

|? ('GW'*_buf.RODZAJ)=0
|| _val.msg_inset('RODZAJ','G','W');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(KAL_WZOR,'NAZWA');
{? +_buf.WZORZEC>_max
|| _val.msg_length('WZORZEC',_max);
   _buf.WZORZEC:=_max+_buf.WZORZEC
?};

: weryfikacja spójności referencyjnej
{? ~KAL_WZOR.find_tab(,
      'FIRMA',,'=',REF.FIRMA,
      'NAZWA',,'=',_buf.WZORZEC
   )
|| _val.msg_norec('WZORZEC');
   _val.RESULT:=0;
   return()
|| _wzo:=KAL_WZOR.ref()
?};

_ref:=null;
{? KAL_OPIS.find_tab(,
      'WZORZEC',,'=',_wzo,
      'ROK',,'=',_buf.ROK,
      'NUMER',,'=',_buf.NUMER
   )
|| _ref:=KAL_OPIS.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1/%2: %3 - %4'[_a.NAZWA,$_a.ROK,$_a.NUMER,_a.DZIEŃ]",
   'KAL_WZOR',_wzo
);
~~


\import_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~l
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,KAL_OPIS,"
   _a.WZORZEC:=_c.KAL_WZOR;
   _a.ROK:=_b.ROK;
   _a.NUMER:=_b.NUMER;
   _a.DZIEŃ:=_b.DZIEŃ;
   _a.TYP:=_b.TYP;
   _a.RODZAJ:=_b.RODZAJ;
   _a.POCZATEK:=_b.POCZATEK;
   _a.KONIEC:=_b.KONIEC;
   _a.OPIS:=_b.OPIS;
   _a.DATA:=_b.DATA;
   _a.DNI:=_b.DNI;

   {? _a.TYP='R'
   || {? _a.POCZATEK<=_a.KONIEC
      || _a.CZAS:=_a.KONIEC-_a.POCZATEK;
         _a.CZAS+=*(_a.DNI*60*24)
      || {? _a.DNI=0
         || _a.DNI:=1
         ?};
         _a.CZAS:=*(_a.DNI*60*24);
         _a.CZAS-=_a.POCZATEK-_a.KONIEC
      ?}
   || _a.POCZATEK:=_a.KONIEC:=_a.CZAS:=time(0,0,0);
      _a.DNI:=0
   ?};
   ~~
");
~~


\init_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='KAL_ROK';
_def.FUNPAR:='ZWS_PAR_PKAL';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_xlsx','xls_kalendarz');
_def.SHEET:='Lata kalendarzy=1,1';
_def.NAME:='Kalendarze - lata kalendarzy'@;
_def.DESC:='Kalendarze - lata kalendarzy';

: źródło danych
_def.TABLE:="KAL_ROK";

: prolog i epilog
_def.BEFORE:="exec('before_rok','xls_kalendarz',_a)";
_def.AFTER:="exec('after_rok','xls_kalendarz',_a)";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('NAZWA',  MS.name(KAL_ROK,'NAZWA'),  0,,MS.comment(KAL_ROK,'NAZWA'));
   _env.define('ROK',    MS.name(KAL_ROK,'ROK'),    1,,MS.comment(KAL_ROK,'ROK'),,0);
   _env.define('WZORZEC',MS.name(KAL_ROK,'WZORZEC'),1,,MS.comment(KAL_ROK,'WZORZEC'));
   _env.define('MAXTIME',MS.name(KAL_ROK,'MAXTIME'),1,,MS.comment(KAL_ROK,'MAXTIME'));
   ~~
";

: eksport, weryfikacja, zapis i wybór danych
_def.EXPORT:="exec('export_rok','xls_kalendarz',_a,_b)";
_def.VALIDATE:="exec('validate_rok','xls_kalendarz',_a,_b,_c)";
_def.IMPORT:="exec('import_rok','xls_kalendarz',_a,_b,_c)";
_def.SELECT:="exec('select_rok','xls_kalendarz',_a)";
~~


\before_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Przed rozpoczęciem iteracji po zestawie danych.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_env:=_a;

KAL_DEF.cntx_psh();
{? var_pres('__KAL')<100
|| exec('__KAL','object',1)
|| __KAL.no_err(1)
?};
KAL_DEF.cntx_pop();

KAL_NAZW.cntx_psh();
KAL_NAZW.f_clear();
KAL_NAZW.index('KAL_NAZW');
KAL_NAZW.prefix();

KAL_WZOR.cntx_psh();
KAL_WZOR.f_clear();
KAL_WZOR.index('KAL_WZOR');
KAL_WZOR.prefix();

KAL_ROK.cntx_psh();
KAL_ROK.f_clear();
{? _env.is_export()
|| KAL_ROK.index(KAL_ROK.ndx_tmp(,,
      'NAZWA','FIRMA',,
      'NAZWA','GRAFIK',,
      'NAZWA','CZESC',,
      'NAZWA','NAZWA',,
      'ROK',,
   ));
   KAL_ROK.prefix(REF.FIRMA,'N','N')
|| KAL_ROK.index('KAL_CZES');
   KAL_ROK.prefix()
?};

KAL_ROK.trig_off('add po');
KAL_ROK.trig_off('put po');
~~


\after_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Po zakończeniu iteracji po zestawie danych.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
KAL_ROK.trig_on('add po');
KAL_ROK.trig_on('put po');
KAL_ROK.cntx_pop();
KAL_ROK.ndx_drop();
KAL_WZOR.cntx_pop();
KAL_NAZW.cntx_pop();
__KAL.no_err(0);
~~


\export_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Zwraca informacje do zapisania w arkuszu Excel.
::   WE: _a [OBJECT] - środowisko mechanizmu
::       _b [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::   WY: 0/1 - pomiń/zapisz wiersz
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_env:=_a;
_buf:=_b;

: informacje podstawowe
_buf.NAZWA.VALUE:=KAL_ROK.NAZWA().NAZWA;
_buf.ROK.VALUE:=KAL_ROK.ROK;
_buf.WZORZEC.VALUE:=KAL_ROK.WZORZEC;
_buf.MAXTIME.VALUE:=KAL_ROK.MAXTIME;

: definicja kalendarza
KAL_DEF.cntx_psh();
KAL_DEF.index('KAL_DEF');
KAL_DEF.prefix(KAL_ROK.ref());
{? ~KAL_DEF.first()
|| KAL_DEF.cntx_pop();
   return(0)
?};
_od:=#date(KAL_ROK.ROK,1,1);
_do:=#date(KAL_ROK.ROK,12,0);
{! _dd:=_od.._do
|! {? KAL_DEF.find_key(#_dd)
   || _env.write_async('KAL_DEF',KAL_DEF.ref())
   ?}
!};
KAL_DEF.cntx_pop();

: powiązana nazwa kalendarza
_env.write_async('KAL_NAZW',KAL_ROK.NAZWA);
: wzorzec kalendarza
KAL_WZOR.cntx_psh();
KAL_WZOR.f_clear();
KAL_WZOR.index('KAL_WZOR');
KAL_WZOR.prefix(KAL_NAZW.FIRMA);
{? KAL_WZOR.find_key(KAL_ROK.WZORZEC,KAL_ROK.WZORZEC)
|| _env.write_async('KAL_WZOR',KAL_WZOR.ref());
:  definicja wzorca dla roku kalendarza
   KAL_OPIS.cntx_psh();
   KAL_OPIS.index('KAL_OPIS');
   KAL_OPIS.prefix(KAL_WZOR.ref(),KAL_ROK.ROK);
   _loop:=KAL_OPIS.first();
   {!
   |? _loop
   |! _env.write_async('KAL_OPIS',KAL_OPIS.ref());
      _loop:=KAL_OPIS.next()
   !};
   KAL_OPIS.cntx_pop()
?};
KAL_WZOR.cntx_pop();

1


\validate_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.NAZWA=''   || 'NAZWA'
   |? _buf.ROK<=0     || 'ROK'
   |? _buf.WZORZEC='' || 'WZORZEC'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(KAL_NAZW,'NAZWA');
{? +_buf.NAZWA>_max
|| _val.msg_length('NAZWA',_max);
   _buf.NAZWA:=_max+_buf.NAZWA
?};

: weryfikacja spójności referencyjnej
_kal:=null;
{? ~KAL_NAZW.find_tab(,
      'FIRMA',,'=',REF.FIRMA,
      'NAZWA',,'=',_buf.NAZWA,
      'GRAFIK',,'=','N',
      'CZESC',,'=','N'
   )
|| _val.msg_norec('NAZWA');
   _val.RESULT:=0;
   return()
|| _kal:=KAL_NAZW.ref()
?};

_ref:=null;
{? KAL_ROK.find_tab(,
      'NAZWA',,'=',_kal,
      'ROK',,'=',_a.ROK
   )
|| _ref:=KAL_ROK.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1: %2'[_a.NAZWA,$_a.ROK]",
   'KAL_NAZW',_kal
);
~~


\import_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,KAL_ROK,"
   _a.NAZWA:=_c.KAL_NAZW;
   _a.ROK:=_b.ROK;
   _a.WZORZEC:=_b.WZORZEC;
   _a.MAXTIME:=_b.MAXTIME;
   ~~
");
~~


\select_rok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu.
::   WE: _a [TABLE] - tabela tymczasowa z kolumną REF, którą należy wypełnić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_SEL:=_a;

_ROK:=tab_tmp(2,
   'NAZWA','STRING[%1]'[$MS.fld_len(KAL_NAZW,'NAZWA')],'Kalendarz',
   'ROK','INTEGER','Rok',
   'SELECTED','STRING[1]','Wybrany',
   'REF','STRING[16]','SQL ref'
);

KAL_ROK.cntx_psh();
KAL_ROK.index('KAL_CZES');
KAL_ROK.prefix(REF.FIRMA,'N');
_loop:=KAL_ROK.first();
{!
|? _loop
|! KAL_ROK.NAZWA();
   {? KAL_NAZW.GRAFIK='N'
   || _ROK.blank();
      _ROK.NAZWA:=KAL_NAZW.NAZWA;
      _ROK.ROK:=KAL_ROK.ROK;
      _ROK.SELECTED:='N';
      _ROK.REF:=$KAL_ROK.ref();
      _ROK.add()
   ?};
   _loop:=KAL_ROK.next()
!};
KAL_ROK.cntx_pop();

{? exec('select_action','#table',_ROK,'NAZWA,ROK',20,'Wybór kalendarzy do eksportu'@,1)>0
|| _key:=_ROK.ndx_tmp(,,'SELECTED',,,'NAZWA',,,'ROK',,);
   _SEL.erase();
   _ROK.index(_key);
   _ROK.prefix('T');
   _loop:=_ROK.first();
   {!
   |? _loop
   |! _SEL.blank();
      _SEL.REF:=_ROK.REF;
      _SEL.add();
      _loop:=_ROK.next()
   !};
   1
?}


\init_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='KAL_DEF';
_def.FUNPAR:='ZWS_PAR_PKAL';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('def_xlsx','xls_kalendarz');
_def.SHEET:='Definicje kalendarzy=1,1';
_def.NAME:='Kalendarze - definicje kalendarzy'@;
_def.DESC:='Kalendarze - definicje kalendarzy';
_def.HIDDEN:='T';

: źródło danych
_def.TABLE:="KAL_DEF";

: prolog i epilog
_def.BEFORE:="exec('before_def','xls_kalendarz',_a)";
_def.AFTER:="exec('after_def','xls_kalendarz',_a)";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('NAZWA',   MS.name(KAL_ROK,'NAZWA'),   0,,MS.comment(KAL_ROK,'NAZWA'));
   _env.define('ROK',     MS.name(KAL_DEF,'ROK'),     0,,MS.comment(KAL_DEF,'ROK'),type_of(0),0);
   _env.define('DATA',    MS.name(KAL_DEF,'DATA'),    0,,MS.comment(KAL_DEF,'DATA'));
   _env.define('TYPWS',   MS.name(KAL_DEF,'TYPWS'),   1,,MS.comment(KAL_DEF,'TYPWS'));
   _env.define('TYP',     MS.name(KAL_DEF,'TYP'),     1,,MS.comment(KAL_DEF,'TYP'));
   _env.define('RODZAJ',  MS.name(KAL_DEF,'RODZAJ'),  1,,MS.comment(KAL_DEF,'RODZAJ'));
   _env.define('POCZATEK',MS.name(KAL_DEF,'POCZATEK'),1,,MS.comment(KAL_DEF,'POCZATEK'));
   _env.define('KONIEC',  MS.name(KAL_DEF,'KONIEC'),  1,,MS.comment(KAL_DEF,'KONIEC'));
   _env.define('DATAW',   MS.name(KAL_DEF,'DATAW'),   1,,MS.comment(KAL_DEF,'DATAW'));
   _env.define('OPIS',    MS.name(KAL_DEF,'OPIS'),    1,,MS.comment(KAL_DEF,'OPIS'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.NAZWA.VALUE:=KAL_DEF.ROK().NAZWA().NAZWA;
   _buf.ROK.VALUE:=KAL_DEF.ROK().ROK;
   _buf.DATA.VALUE:=KAL_DEF.DATA;
   _buf.TYPWS.VALUE:=KAL_DEF.TYPWS;
   _buf.TYP.VALUE:=KAL_DEF.TYP;
   _buf.RODZAJ.VALUE:=KAL_DEF.RODZAJ;
   _buf.POCZATEK.VALUE:=KAL_DEF.POCZATEK;
   _buf.KONIEC.VALUE:=KAL_DEF.KONIEC;
   _buf.DATAW.VALUE:=KAL_DEF.DATAW;
   _buf.OPIS.VALUE:=KAL_DEF.OPIS;
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate_def','xls_kalendarz',_a,_b,_c)";
_def.IMPORT:="exec('import_def','xls_kalendarz',_a,_b,_c)";
~~


\before_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Przed rozpoczęciem iteracji po zestawie danych.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: Przypadku eksportu definicja kalendarza jest zapisywana asynchronicznie.
: Dziedzina jest ograniczona dokładnie do tego dnia, który ma być zapisany.
: Ze względów wydajnościowych można zapomnieć o zachowaniu kontekstu.
{? _a.is_export()
|| return()
?};

KAL_NAZW.cntx_psh();
KAL_NAZW.f_clear();
KAL_NAZW.prefix();

KAL_ROK.cntx_psh();
KAL_ROK.f_clear();
KAL_ROK.prefix();

KAL_DEF.cntx_psh();
KAL_DEF.f_clear();
KAL_DEF.index('KAL_DATA');
KAL_DEF.prefix();
~~


\after_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Po zakończeniu iteracji po zestawie danych.
::   WE: _a [OBJECT] - środowisko uruchomienia i parametry wykonywanej formuły
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: Patrz \before_def/xls_kalendarz.fml
{? _a.is_export()
|| return()
?};

KAL_ROK.index('KAL_CZES');
KAL_ROK.prefix(REF.FIRMA,'N');
_loop:=KAL_ROK.first();
{!
|? _loop
|! {? KAL_ROK.NAZWA().GRAFIK='N'
   || exec('akt_rok','kaledit',KAL_ROK.NAZWA,KAL_ROK.ROK)
   ?};
   _loop:=KAL_ROK.next()
!};
KAL_DEF.f_clear();
KAL_DEF.cntx_pop();
KAL_ROK.cntx_pop();
KAL_NAZW.cntx_pop();
~~


\validate_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.NAZWA=''  || 'NAZWA'
   |? _buf.ROK<=0    || 'ROK'
   |? _buf.TYP=''    || 'TYP'
   |? _buf.RODZAJ='' || 'RODZAJ'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? |_buf.TYPWS<>'' & ('NSW5H'*_buf.TYPWS)=0
|| _val.msg_inset('TYPWS','N','S','W','5','H');
   _val.RESULT:=0;
   return()

|? ('RWS'*_buf.TYP)=0
|| _val.msg_inset('TYP','R','W','S');
   _val.RESULT:=0;
   return()

|? ('GW'*_buf.RODZAJ)=0
|| _val.msg_inset('RODZAJ','G','W');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(KAL_NAZW,'NAZWA');
{? +_buf.NAZWA>_max
|| _val.msg_length(KAL_NAZW,'NAZWA',_max);
   _buf.NAZWA:=_max+_buf.NAZWA
?};
_max:=MS.fld_len(KAL_DEF,'OPIS');
{? +_buf.OPIS>_max
|| _val.msg_length(KAL_DEF,'OPIS',_max);
   _buf.OPIS:=_max+_buf.OPIS
?};

: weryfikacja spójności referencyjnej
{? ~KAL_ROK.find_tab(,
      'NAZWA','FIRMA','=',REF.FIRMA,
      'NAZWA','NAZWA','=',_buf.NAZWA,
      'NAZWA','GRAFIK','=','N',
      'NAZWA','CZESC','=','N',
      'ROK',,'=',_buf.ROK
   )
|| _val.msg_norec('ROK');
   _val.RESULT:=0;
   return()
|| _rok:=KAL_ROK.ref()
?};

_ref:=null;
{? KAL_DEF.find_tab(,
      'ROK',,'=',_rok,
      'DATA',,'=',_buf.DATA
   )
|| _ref:=KAL_DEF.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1/%2: %3'[_a.NAZWA,form(_a.ROK,,,'99'),$_a.DATA]",
   'KAL_ROK',_rok
);
~~


\import_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~l
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,KAL_DEF,"
   _a.ROK:=_c.KAL_ROK;
   _a.DATA:=_b.DATA;
   _a.TYPWS:=_b.TYPWS;
   _a.TYP:=_b.TYP;
   _a.RODZAJ:=_b.RODZAJ;
   _a.POCZATEK:=_b.POCZATEK;
   _a.KONIEC:=_b.KONIEC;
   _a.DATAW:=_b.DATAW;
   _a.OPIS:=_b.OPIS;

   _start:=exec('create','#tm_stamp',_a.DATA,_a.POCZATEK);
   _end:=exec('create','#tm_stamp',_a.DATAW,_a.KONIEC);
   _czas:=_end-_start;
   {? _czas>0
   || _a.CZAS:=_a.KONIEC-_a.POCZATEK;
      _a.CZAS+=*((_a.DATAW-_a.DATA)*60*24)
   || _a.CZAS:=time(0,0,0)
   ?};
   ~~
");
~~

:Sign Version 2.0 jowisz:1045 2020/04/03 17:14:08 bdc82839ea5fbc836b4d49066fec9223843cab0ad5bd30e2ede9c10f7ee6e48b40dcdcb2726d8e16c763e6f0824dc9befa62f68a381cbd8fe276d43011dbc3cf8cd090fdc6008ab540cfc1b5c4a2900f4162b9b2034de182b5796692d6d8df74bd940ff90aeaa11f7144f4b8b83a0cb78ea4da85917f9b2989a327ad61fd53df
