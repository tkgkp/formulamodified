:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_fm.fml
:: Utworzony: 31.07.2018
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu formuł płacowych.
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Inicjowanie mechanizmu.
::   WE:  _a [OBJECT]  - Środowisko mechanizmu.
::       [_b] [NUMBER] - Formuły globalne [0*/1].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_global:=var_pres('_b')=type_of(0) & _b;

_def.ID:='FM_'+{? _global || 'G' || 'L' ?};
_def.FILE:='personel_place.xlsx';
_def.FUNPAR:='ZWS_PAR_PFPL';
_def.DOMAIN:=exec('name','#b_domain','PPL');
{? _global
|| _def.NAME:='Formuły płacowe (globalne)'@;
   _def.SHEET:='Formuły płacowe (globalne)'@+'=1,1';
   _def.DESC:='Definicja globalnych formuł płacowych'@
|| _def.NAME:='Formuły płacowe (lokalne)'@;
   _def.SHEET:='Formuły płacowe (lokalne)'@+'=1,1';
   _def.DESC:='Definicja lokalnych formuł płacowych'@
?};

_def.TABLE:="FM";
_def.BEFORE:=$("
   FM.cntx_psh();
   FM.f_clear();
   FM.index('FORMNAZ');
   {? _a.is_export()
   || FM.prefix("+{? _global || 'REF.GRUPA' || 'REF.FIRMA' ?}+")
   || FM.prefix()
   ?};
   R.cntx_psh();
   R.index('RUBKOD');
   R.prefix()
");
_def.AFTER:="
   R.cntx_pop();
   FM.cntx_pop();
   {? _a.is_export()
   || exec('synch_fm','rubryki')
   ?}
";
_def.PREFIX:="";

_def.FIELDS:=$("exec('fields','xls_fm',_a,"+$_global+")");

_def.SELECT:="";

_def.EXPORT:=$("exec('export','xls_fm',_a,_b,"+$_global+")");

_def.VALIDATE:=$("exec('validate','xls_fm',_a,_b,_c,"+$_global+")");
_def.IMPORT:=$("exec('import','xls_fm',_a,_b,_c,"+$_global+")");

~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła definiuje eksportowane/importowane pola.
::   WE: _a [OBJECT] - Obiekt do obsługi pól.
::       _b [NUMBER] - Formuły globalne [0/1].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_fld:=_a;
_global:=_b;

_fl:="MS.name(FM,_a)";
_fc:="MS.comment(FM,_a)";

_fld.define('TP',_fl('TP'),0,,_fc('TP'));
_fld.define('RN',_fl('R'),0,,_fc('R'),type_of(0),0);
_fld.define('W',_fl('W'),0,,_fc('W'));
_fld.define('FNL',_fl('FNL'),0,,_fc('FNL'));
{? ~_global
|| _fld.define('FMF',_fl('FM'),0,,_fc('FM'))
?};
_fld.define('F',_fl('F'),0,,_fc('F'));
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła wypełnia bufor, na podstawie które wykonany zostanie zapis danych w arkuszu.
::   WE: _a [OBJECT] - Środowisko mechanizmu.
::       _b [OBJECT] - Obiekt bufora.
::       _c [NUMBER] - Formuły globalne [0/1].
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_buf:=_b;
_global:=_c;


_buf.TP.VALUE:={? FM.TP=%255 || '[WSPÓLNE]' || FM.TP ?};
SLO_KOD.cntx_psh();
_excel.write_async('SLO_KOD',exec('kod','ext_slo','TYP_FORM',FM.TP));
SLO_KOD.cntx_pop();
_buf.RN.VALUE:=FM.R().RN; _excel.write_async('RUBRYKI',exec('r','xls__util'));
_buf.W.VALUE:=FM.W;
_buf.FNL.VALUE:=FM.FNL;
{? ~_global
|| _buf.FMF.VALUE:='N';
   {? FM.FM
   || FM.cntx_psh();
      FM.prefix();
      {? FM.seek(FM.FM,)
      || _buf.FMF.VALUE:='T';
         _excel.write_async('FM_G',FM.ref())
      ?};
      FM.cntx_pop()
   ?}
?};
_buf.F.VALUE:=FM.memo_txt(,1,'F');
1


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła sprawdza, czy można poprawić/dodać rekord.
::   WE: _a [OBJECT] - Obiekt z polami odczytami z Excela.
::       _b [NUMBER] - Tryb aktualizacji: 0 - nie (dodawane są tylko nowe rekordy) / 1 - tak.
::       _c [OBJECT] - Obiekt (RESULT, ACTION, OBJ) - wynik walidacji.
::       _d [NUMBER] - Formuły globalne [0/1].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_buf:=_a;
_update:=_b;
_validate:=_c;
_global:=_d;

_validate.OBJ:=obj_new('FIRMA','R','FM');
_validate.OBJ.FIRMA:={? _global || REF.GRUPA || REF.FIRMA ?};
_validate.OBJ.R:=null();
_validate.OBJ.FM:=0;

{? _buf.TP='[WSPÓLNE]'
|| _buf.TP:=%255
?};

{? +_buf.TP<>1
|| _validate.msg_length('TP',1);
   _validate.RESULT:=0
|? SLO_KOD.cntx_psh();
   _kod:=exec('kod','ext_slo','TYP_FORM',_buf.TP);
   SLO_KOD.cntx_pop();
   _kod=null()
|| _validate.msg_norec('TP');
   _validate.RESULT:=0
|? {? R.find_key(_buf.RN)
   || _validate.OBJ.R:=R.ref();
      0
   || 1
   ?}
|| _validate.msg_norec('RN');
   _validate.RESULT:=0
|? _buf.W<>'' & _buf.W<>'T' & _buf.W<>'N'
|| _validate.msg_inset('W',' ','T','N');
   _validate.RESULT:=0
|? _buf.FNL<>'' & _buf.FNL<>'T' & _buf.FNL<>'N'
|| _validate.msg_inset('FNL',' ','T','N');
   _validate.RESULT:=0

|? ~_global & _buf.FMF<>'T' & _buf.FMF<>'N'
|| _validate.msg_inset('FMF','T','N');
   _validate.RESULT:=0
|? ~_global & _buf.FMF='T' &
   {? FM.find_key(REF.GRUPA,_buf.TP,_buf.RN)
   || _validate.OBJ.FM:=#FM.ref();
      0
   || 1
   ?}
|| _validate.msg_norec('FMF');
   _validate.RESULT:=0

|| {? int(_buf.RN)<>_buf.RN
   || _validate.msg_int('RN')
   ?};

   {? FM.find_key(_validate.OBJ.FIRMA,_buf.TP,_buf.RN)
   || {? _update
      || {? FM.W<>_buf.W | FM.FNL<>_buf.FNL | FM.memo_txt(,1,'F')<>form(_buf.F) |
            (~_global & _validate.OBJ.FM<>FM.FM)
         || _validate.ACTION:='put'
         || _validate.ACTION:='~put'
         ?}
      || _validate.RESULT:=0
      ?}
   || _validate.ACTION:='add'
   ?}

?};

~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.42]
:: OPIS: Formuła odpowiedzialna za utworzenie lub aktualizację rekordu.
::   WE: _a [OBJECT] - Obiekt z polami odczytami z Excela.
::       _b [NUMBER] - Tryb aktualizacji: 0 - nie (dodawane są tylko nowe rekordy) / 1 - tak.
::       _c [OBJECT] - Obiekt (RESULT, ACTION, OBJ) - wynik walidacji.
::       _d [NUMBER] - Formuły globalne [0/1].
::   WY: Status operacji: 0/1
::----------------------------------------------------------------------------------------------------------------------
_buf:=_a;
_update:=_b;
_validate:=_c;
_global:=_d;

_przypisz:="
   _buf:=_a;
   _update:=_b;
   _validate:=_c;
   _global:=_d;

   FM.FIRMA:=_validate.OBJ.FIRMA;
   FM.TP:=_buf.TP;
   FM.R:=_validate.OBJ.R;
   FM.W:=_buf.W;
   FM.FNL:=_buf.FNL;
   {? ~_global
   || FM.FM:=_validate.OBJ.FM
   ?};
   FM.memo_set(_buf.F,'F')
";

_key:='Globalna: %1 | Typ: %2 | Składnik: %3'@ [{? _global || 'Tak'@ || 'Nie'@ ?},_buf.TP,$_buf.RN];

_ret:=1;

{? _validate.ACTION='add'
|| FM.blank();
   _przypisz(_buf,_update,_validate,_global);
   {? ~(FM.add(1) & FM.memo_put(,'F'))
   || _ret:=0;
      _validate.msg_insert(_key)
   ?}
|? _validate.ACTION='put'
|| _przypisz(_buf,_update,_validate,_global);
   {? ~(FM.put(1) & FM.memo_put(,'F'))
   || _ret:=0;
      _validate.msg_update(_key)
   ?}
?};

_ret

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:42 bb26321b2903770e654a2c5ae059cfa0c14c4c6fd05b12132540bf42be1e3979d27b5410ea73aec99f5c28c5f557181f2bb5d9db726f5a7c702b9d98c9a904ec1525e0e05a16b1a69d45a217133e1fc30ed2c4935286bfc8847d6db696948c5a0666956491cf3528951e94396acccbf1177cae1cca2adaec8604f75e592a677e
