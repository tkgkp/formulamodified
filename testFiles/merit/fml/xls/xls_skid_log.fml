:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_skid_log.fml
:: Utworzony: 26.09.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu ustawień rejestru zmian
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='SKID_LOG';
_def.FUNPAR:='ZWS_PAR_RLOG';
_def.DOMAIN:=exec('name','#b_domain','PPL');
_def.FILE:=exec('def_xlsx','xls__init');
_def.SHEET:='Ustawienia rejestru zmian=1,1';
_def.NAME:='Ustawienia rejestru zmian'@;
_def.DESC:='Ustawienia rejestru zmian';
_def.ADD_ROWS:=0;
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="SKID_LOG";

: prolog
_def.BEFORE:="
   SKID_LOG.cntx_psh();
   SKID_LOG.f_clear();
   SKID_LOG.index('STATUS');
   {? _a.is_export()
   || SKID_LOG.prefix('L')
   || exec('update','%1_%2_%3'['!zws','par','rlog'],1,1);
      SKID_LOG.prefix()
   ?};
   ~~
";

: epilog
_def.AFTER:="
   SKID_LOG.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('REKORD', MS.name(SKID_LOG,'REKORD'), 0,,MS.comment(SKID_LOG,'REKORD'),type_of(''));
   _env.define('SYMBOL', MS.name(SKID_LOG,'SYMBOL'), 0,,MS.comment(SKID_LOG,'SYMBOL'));
   _env.define('OPIS',   MS.name(SKID_LOG,'OPIS'),   0,,MS.comment(SKID_LOG,'OPIS'));
   _env.define('TYP',    MS.name(SKID_LOG,'TYP'),    0,,MS.comment(SKID_LOG,'TYP'));
   _env.define('GRUPA',  MS.name(SKID_LOG,'GRUPA'),  0,,MS.comment(SKID_LOG,'GRUPA'));
   _env.define('STATUS', MS.name(SKID_LOG,'STATUS'), 0,,MS.comment(SKID_LOG,'STATUS'));
   _env.define('MODKTO', MS.name(SKID_LOG,'MODKTO'), 0,,MS.comment(SKID_LOG,'MODKTO'));
   _env.define('MODDATA',MS.name(SKID_LOG,'MODDATA'),0,,MS.comment(SKID_LOG,'MODDATA'));
   _env.define('MODCZAS',MS.name(SKID_LOG,'MODCZAS'),0,,MS.comment(SKID_LOG,'MODCZAS'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   {? SKID_LOG.STATUS='-'
   || return(0)
   ?};
   {? SKID_LOG.REKORD<>0
   || SKID_LOG.cntx_psh();
      _sym:=SKID_LOG.SYMBOL;
      SKID_LOG.index('REKSYM');
      SKID_LOG.prefix(SKID_LOG.REKORD);
      {? SKID_LOG.find_key(_sym,) & SKID_LOG.prev()
      || SKID_LOG.cntx_pop();
         return(0)
      ?};
      SKID_LOG.prefix();
      {!
      |? SKID_LOG.seek(SKID_LOG.REKORD,)
      |! {? SKID_LOG.STATUS='-'
         || SKID_LOG.cntx_pop();
            return(0)
         ?};
         _buf.REKORD.VALUE:=
            SKID_LOG.SYMBOL+
            {? _buf.REKORD.VALUE<>'' || '.' || '' ?}+
            _buf.REKORD.VALUE
      !};
      SKID_LOG.cntx_pop()
   ?};

   _id:=spli_str(_buf.REKORD.VALUE,'.');
   {? var_pres(_id[1])<>type_of(SYSLOG) |
      var_pres(_id[2],($_id[1])())<0
   || return(0)
   ?};

   _buf.SYMBOL.VALUE:=SKID_LOG.SYMBOL;
   _buf.OPIS.VALUE:=SKID_LOG.OPIS;
   _buf.TYP.VALUE:=SKID_LOG.TYP;
   _buf.GRUPA.VALUE:=SKID_LOG.GRUPA;
   _buf.STATUS.VALUE:=SKID_LOG.STATUS;
   _buf.MODKTO.VALUE:=SKID_LOG.MODKTO;
   _buf.MODDATA.VALUE:=SKID_LOG.MODDATA;
   _buf.MODCZAS.VALUE:=SKID_LOG.MODCZAS;
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_skid_log',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_skid_log',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: weryfikacja spójności referencyjnej
_id:=spli_str(_buf.REKORD,'.');
_log:=0;

: sprawdź istnienie tabeli i pola
{? var_pres(_id[1])<>type_of(SYSLOG)
|| _val.MSG:='Tabela "%1" nie istnieje.'[_id[1]];
   _val.RESULT:=0;
   return()

|? var_pres(_id[2],($_id[1])())<0
|| _val.MSG:='Kolumna "%1" nie występuje w tabeli "%2".'[_id[2],_id[1]];
   _val.RESULT:=0;
   return()
?};

SKID_LOG.cntx_psh();
{? ~SKID_LOG.find_tab(,'REKORD',,'=',0,'SYMBOL',,'=',_id[1],'TYP',,'=','T') |
   ~SKID_LOG.find_tab(,'REKORD',,'=',#SKID_LOG.ref(),'SYMBOL',,'=',_id[2],'TYP',,'=','F')
|| SKID_LOG.cntx_pop();
   _val.msg_norec('REKORD');
   _val.RESULT:=0;
   return()
?};
_ref:=#SKID_LOG.ref();
SKID_LOG.cntx_pop();
_val.ACTION:='put';

: optymalizacja importu i standaryzacja kodu
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 - %2'[_a.REKORD,_a.OPIS]"
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
SKID_LOG.cntx_psh();
SKID_LOG.prefix();
{? SKID_LOG.seek(_c.OBJ.REF)
|| SKID_LOG.STATUS:=_a.STATUS;
   SKID_LOG.put()
?};
SKID_LOG.cntx_pop();
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 81dd51e6b8251bec8acb5346d4e51191f42c0f392c54e04bf7fe9c698df1a4cefc530a15f7e0477d4ea8592668b930aeef921ed0c77917d6284d13fb07f369a9596839df107578b681e49172efa2b415ad4cb80c050622c7dedc110255d7566a6090a8696f32d906dd64889e7b21f7d38f30f6927ceac3ae18b4e500d5606c78
