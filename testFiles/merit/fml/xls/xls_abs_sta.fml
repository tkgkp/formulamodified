:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_abs_sta.fml
:: Utworzony: 21.08.2020
:: Autor: PD
:: Systemy:
::======================================================================================================================
:: Zawartość:
::======================================================================================================================
\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='ABS_STA';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FUNPAR:='ZWS_PAR_BASL';

_def.FILE:='parametryzacja.xlsx';
_def.SHEET:='Statusy zamówień online=1,1';
_def.NAME:='Statusy zamówień online'@;
_def.DESC:='Statusy zamówień online';

_def.PREFIX:="exec('prefix','xls_abs_sta')";
_def.TABLE:="exec('table','xls_abs_sta')";
_def.FIELDS:="exec('fields','xls_abs_sta',_a)";

_def.BEFORE:="ABS_STA.cntx_psh()";
_def.AFTER:="ABS_STA.cntx_pop()";
_def.SELECT:="exec('select','xls_abs_sta',_a)";

_def.EXPORT:="exec('export','xls_abs_sta',_a,_b)";
_def.VALIDATE:="exec('validate','xls_abs_sta',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_abs_sta',_a,_b,_c)";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
ABS_STA.prefix();
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
ABS_STA


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('ID','ID',1,,'20 znakowy identyfikator');
_def.define('NR','Numer',1,,'Numer statusu');
_def.define('TRANSL','Tłumaczenie',1,,'100 znakowe tłumaczenie');
_def.define('STATUS','Status',1,,'100 znakowy status');
_def.define('TYPE','Typ',1,,'A/B czy AbStore czy BaseLinker');
_def.define('NR_A','Numer po',1,,'Numer kolejnego statusu');
_def.define('NR_B','Numer przed',1,,'Numer poprzedniego statusu');
_def.define('LAST','Ostatni',1,,'1/0 czy status jest ostateczny');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
ABS_STA.prefix();
{? _validate.ACTION='add'
||
   ABS_STA.blank()
?};

ABS_STA.ID:=_obj.ID;
ABS_STA.NR:=_obj.NR;
ABS_STA.TRANSL:=_obj.TRANSL;
ABS_STA.STATUS:=_obj.STATUS;
ABS_STA.NR_A:=_obj.NR_A;
ABS_STA.NR_B:=_obj.NR_B;
ABS_STA.LAST:=_obj.LAST;
ABS_STA.TYPE:=_obj.TYPE;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.ID.VALUE:=ABS_STA.ID;
_table.NR.VALUE:=ABS_STA.NR;
_table.TRANSL.VALUE:=ABS_STA.TRANSL;
_table.STATUS.VALUE:=ABS_STA.STATUS;
_table.NR_A.VALUE:=ABS_STA.NR_A;
_table.NR_B.VALUE:=ABS_STA.NR_B;
_table.LAST.VALUE:=ABS_STA.LAST;
_table.TYPE.VALUE:=ABS_STA.TYPE;

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

{? (+_obj.ID)>20 || _result.msg_length('ID',20); _result.RESULT:=0 ?};
{? _obj.NR=0 || _result.msg_value('NR'); _result.RESULT:=0 ?};
{? (+_obj.ID)>20 || _result.msg_length('ID',20); _result.RESULT:=0 ?};
{? (+_obj.TRANSL)>100 || _result.msg_length('TRANSL',100); _result.RESULT:=0 ?};
{? (+_obj.STATUS)>100 || _result.msg_length('STATUS',100); _result.RESULT:=0 ?};
{? _obj.TYPE<>'A' & _obj.TYPE<>'B' || _result.msg_inset('TYPE','A','B');_result.RESULT:=0 ?};
{? _obj.NR_A<>1 & _obj.NR_A<>0 || _result.msg_inset('NR_A',1,0);_result.RESULT:=0 ?};
{? _obj.NR_B<>1 & _obj.NR_B<>0 || _result.msg_inset('NR_B',1,0);_result.RESULT:=0 ?};
{? _obj.LAST<>1 & _obj.LAST<>0 || _result.msg_inset('LAST',1,0);_result.RESULT:=0 ?};

{? _obj.STATUS='' || _result.msg_empty('STATUS'); _result.RESULT:=0 ?};

ABS_STA.index('STA');
ABS_STA.prefix(_obj.TYPE,_obj.STATUS,);
{? ABS_STA.first()
||
   {? _mode=0
   || _result.RESULT:=0
   ||
      _result.ACTION:='put';
      exec('record','xls_abs_sta',_obj,_mode,_result)
   ?}
||
   _result.ACTION:='add';
   exec('record','xls_abs_sta',_obj,_mode,_result)
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      ABS_STA.prefix();
      _result:=ABS_STA.add(1)
   |? _validate.ACTION='put'
   ||
      ABS_STA.prefix();
      _result:=ABS_STA.put(1)
   ?}
?};
{? _result=0
||

   {? _validate.ACTION='add'
   ||
      _validate.MSG:='Dodanie statusu %1 nie powiodło się.'@[_obj.STATUS]
   ||
      _validate.MSG:='Poprawa statusu %1 nie powiodła się.'@[_obj.STATUS]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(2,'STATUS','STRING[100]','Status'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'TYPE','STRING[1]','Typ'
   );

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'STATUS',,);

ABS_STA.cntx_psh();
ABS_STA.index('STA');
ABS_STA.prefix();
{? ABS_STA.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$ABS_STA.ref();
      _selected.prefix($ABS_STA.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.STATUS:=ABS_STA.STATUS;
      _tab.TYPE:=ABS_STA.TYPE;
      _tab.add();
      ABS_STA.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'STATUS',100,'Wybór kanłów sprzedaży i źródeł zamówień do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
ABS_STA.cntx_pop();

_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:12 00cd3012618d20706af546e5fca572c5adc1410f72b080bace7d37b14c9bc3935a49abc13e26fc436676ea955dd9eb0434aec81b77c60b1e0f9bcd1a0a83fd4ade1bc9af3fc3322290dd7bec979d5bee9568a2eecc57cb17be094d3e401a90337436fcab01c346b6947271f136093e41e7bd6347afcb08eef207a8d5a9cc08bc
