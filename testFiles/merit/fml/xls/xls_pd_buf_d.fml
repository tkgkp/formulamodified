:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_pd_buf_d.fml
:: Utworzony: 19.07.2018
:: Autor: Markus
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu formuł planu dostaw
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='PD_BUF_D';
_def.DOMAIN:=exec('name','#b_domain','LZK');
_def.FUNPAR:='ZWS_PLAN_DST';

_def.FILE:='plan_dostaw.xlsx';
_def.SHEET:='Bufor danych=1,1';
_def.NAME:='Bufor danych'@;
_def.DESC:='Bufor danych';
_def.TABLE:="exec('table','xls_pd_buf_d')";
_def.FIELDS:="exec('fields','xls_pd_buf_d',_a)";
_def.EXPORT:="exec('export','xls_pd_buf_d',_a,_b)";
_def.IMPORT:="exec('import','xls_pd_buf_d',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_pd_buf_d',_a,_b,_c)";
_def.SELECT:="exec('select','xls_pd_buf_d',_a)";
_def.PREFIX:="PD_BUF_D.index('KOD'); PD_BUF_D.prefix()";
_def.BEFORE:="PD_BUF_D.cntx_psh()";
_def.AFTER:="PD_BUF_D.cntx_pop()";
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Określa zakres eksportowanych danych
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
PD_BUF_D


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('KOD','Kod',0,,'Kod - 10 znaków');
_def.define('FORMULA','Formuła',0,,'Formuła');
_def.define('A','Aktywna',1,,'Aktywność formuł [T/N]');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
PD_BUF_D.prefix();
{? _validate.ACTION='add'
||
   PD_BUF_D.blank();
   PD_BUF_D.FORMULA:=_validate.OBJ.FORMULA
?};

PD_BUF_D.KOD:=_obj.KOD;
PD_BUF_D.A:=_obj.A;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;

_table.FORMULA.VALUE:=PD_BUF_D.FORMULA().SKROT;
_excel.write_async('FORMULA',PD_BUF_D.FORMULA);

_table.KOD.VALUE:=PD_BUF_D.KOD;
_table.A.VALUE:=PD_BUF_D.A;

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('FORMULA');

_result.OBJ.FORMULA:=exec('FindInSet','#table','FORMULA','FORMULA4',_obj.FORMULA,'2',,1);
{? _result.OBJ.FORMULA=null()
||
   _result.MSG:='Nie znaleziono formuły o skrócie %1.'@[_obj.FORMULA];
   _result.RESULT:=0;
   return(~~)
?};

{? _result.RESULT = 1
||
   PD_BUF_D.index('KOD');
   PD_BUF_D.prefix(_obj.KOD);
   {? PD_BUF_D.first()
   ||
      {? _mode=0
      || _result.RESULT:=0
      ||
         _result.ACTION:='put';
         exec('record','xls_pd_buf_d',_obj,_mode,_result)
::         {? exec('spr_slo','slo_slu')<>''
::         ||
::            _result.RESULT:=0
::         ?}
      ?}
   ||
      _result.ACTION:='add';
      exec('record','xls_pd_buf_d',_obj,_mode,_result)
::      {? exec('spr_slo','slo_slu')<>''
::      || _result.RESULT:=0
::      ?}
   ?}
?};
_result


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      _result:=PD_BUF_D.add(1)
   |? _validate.ACTION='put'
   ||
      _result:=PD_BUF_D.put(1)
   ?}
?};
{? _result=0
||
   {? _validate.ACTION='add'
   ||
      FUN.info('Dodanie pozycji o kodzie %1 nie powiodło się.'@[$_obj.KOD])
   ||
      FUN.info('Poprawa pozycji o kodzie %1 nie powiodła się.'@[$_obj.KOD])
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'KOD','STRING[10]','Kod'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

PD_BUF_D.cntx_psh();
PD_BUF_D.index('KOD');
PD_BUF_D.prefix();
{? PD_BUF_D.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$PD_BUF_D.ref();
      _selected.prefix($PD_BUF_D.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:=PD_BUF_D.KOD;
      _tab.add();
      PD_BUF_D.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'KOD',20,'Wybór formuł planu dostaw (formuły bufora) do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
PD_BUF_D.cntx_pop();

_result

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:49 bf0267ccc0852590a7e7e8ecb315591682f4e6dc06f982ef75fc7e68246d6b20164c6e53bf44860a3bbbb07bde1a95f224cccfc340a0a525fe4ef330fee83021127e540fa8a0d95fd09d91170c830079449c38d8e145f133aa532c9038a1e34ebb474c758857e6cda566391abe2c9d0c1c3e4388f63eec57d082b9c899dc95bd
