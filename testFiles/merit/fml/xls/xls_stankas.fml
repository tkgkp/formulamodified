:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_stankas.fml
:: Utworzony: 19.07.2018
:: Autor: Markus
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu stanowisk kasowych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='STANKAS';
_def.DOMAIN:=exec('name','#b_domain','KAS');
_def.FUNPAR:='ZWS_PAR_FKST';

_def.FILE:='kasa.xlsx';
_def.SHEET:='Stanowiska kasowe=1,1';
_def.NAME:='Stanowiska kasowe'@;
_def.DESC:='Definicja stanowisk kasowych';
_def.TABLE:="exec('table','xls_stankas')";
_def.FIELDS:="exec('fields','xls_stankas',_a)";
_def.EXPORT:="exec('export','xls_stankas',_a,_b)";
_def.IMPORT:="exec('import','xls_stankas',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_stankas',_a,_b,_c)";
_def.SELECT:="exec('select','xls_stankas',_a)";
_def.PREFIX:="STANKAS.index('KOD'); STANKAS.prefix()";
_def.BEFORE:="STANKAS.cntx_psh()";
_def.AFTER:="STANKAS.cntx_pop()";
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Określa zakres eksportowanych danych
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
STANKAS


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('KOD','Kod stanowiska',0,,'Kod stanowiska');
_def.define('NAZWA','Nazwa stanowiska',1,,'30 znakowa nazwa stanowiska kasowego');
_def.define('WALUTA','Waluta kasy',0,,'Kod waluty kasy');
_def.define('CZY_KASA','Stanowisko kasowe?',1,,'Znacznik, czy stanowisko jest kasowe');
_def.define('CZY_OTW','Czy wolno otw. nast?',1,,'Czy wolno otwierać kolejny raport przed zamkn. poprzedniego?');
_def.define('CZY_SMIN','Dozwolone saldo',1,,'Znacznik, czy dozwolone saldo ujemne?');
_def.define('CZY_KILK','Czy kilka rap. dz.?',1,,'Znacznik, czy dozwolonych kilka raportów dziennych?');
_def.define('CZY_KDNI','Czy rap.kilkudniowe?',1,,'Znacznik, czy dozwolone raporty kilkudniowe   ');
_def.define('CZY_KTIP','Czy podpowiedź kursu',1,,'Znacznik, czy kurs ma być podpowiadany?');
_def.define('B_NB','Nazwa oddziału banku',0,,'Bank do tabeli kursów',type_of(''));
_def.define('B_NUMER','Numer oddziału banku',0,,'Bank do tabeli kursów',type_of(''));
_def.define('RODZ_KUR','Rodzaj kursu',1,,'Rodzaj kursu (K - Kupna, S - Sprzedaży, R - śRedni)');
_def.define('CZY_ZMKU','Dozwolona zm. kursu',1,,'Znacznik, czy operator może zmieniać podpowiedziany kurs');
_def.define('F_NUMER','Numeracja raportów',0,,'Formuła na numer raportu kasowego');
_def.define('R_NUMER','Numer raportu',1,,'Numer raportu zwiekszany po każdym kolejnym raporcie');
_def.define('F_KP','Numeracja KP',0,,'Formuła na kolejny numer KP');
_def.define('F_KW','Numeracja KW',0,,'Formuła na kolejny numer KW');
_def.define('F_INNY','Numeracja innych dokumentów',0,,'Formuła do numeracji innych dokumentów niż KP i KW');
_def.define('ODD','Jednostka księgowa',0,,'Wskazanie na jednostkę księgową');
::_def.define('F_KWT','Numeracja KWT',0,,'[ML] Numeracja kwitariuszy');
_def.define('CZY_ZDEP','Czy słowniki wspólne z Depozytem?',1,,'[ML] Czy słowniki wspólne z Depozytem?');
_def.define('ILDNI','Ilość dni',1,,'[ML] Ilość dni raportu');
_def.define('PGPP','Paragraf/Pozycja',1,,'[ML] określenie paragraf czy pozycja');
_def.define('MIN','Stan minimalny',1,,'[ML] Kwota pogotowia kasowego');
_def.define('SYM','Symbol',1,,'[ML] Symbol stanowiska kasowego');
_def.define('DAN','Dozwolone anulowanie dokumentów',1,,'[ML] Czy dozwolone anulowanie dokumentu?');
_def.define('ZNAKI','Znaki',1,,'Czy na stanowisku mogą występować dokumenty znaków');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
STANKAS.prefix();
{? _validate.ACTION='add' || STANKAS.blank() ?};
STANKAS.WALUTA:=_validate.OBJ.WALUTA;
STANKAS.TAB_KURS:=_validate.OBJ.TAB_KURS;
STANKAS.F_NUMER:=_validate.OBJ.F_NUMER;
STANKAS.F_KP:=_validate.OBJ.F_KP;
STANKAS.F_KW:=_validate.OBJ.F_KW;
STANKAS.F_INNY:=_validate.OBJ.F_INNY;
STANKAS.ODD:=_validate.OBJ.ODD;
:: STANKAS.F_KWT:=_validate.OBJ.F_KWT;
STANKAS.KOD:=_obj.KOD;
STANKAS.NAZWA:=_obj.NAZWA;
STANKAS.CZY_KASA:=_obj.CZY_KASA;
STANKAS.CZY_OTW:=_obj.CZY_OTW;
STANKAS.CZY_SMIN:=_obj.CZY_SMIN;
STANKAS.CZY_KILK:=_obj.CZY_KILK;
STANKAS.CZY_KDNI:=_obj.CZY_KDNI;
STANKAS.CZY_KTIP:=_obj.CZY_KTIP;
STANKAS.RODZ_KUR:=_obj.RODZ_KUR;
STANKAS.CZY_ZMKU:=_obj.CZY_ZMKU;
STANKAS.R_NUMER:=_obj.R_NUMER;
STANKAS.CZY_ZDEP:=_obj.CZY_ZDEP;
STANKAS.ILDNI:=_obj.ILDNI;
STANKAS.PGPP:=_obj.PGPP;
STANKAS.MIN:=_obj.MIN;
STANKAS.SYM:=_obj.SYM;
STANKAS.DAN:=_obj.DAN;
STANKAS.ZNAKI:=_obj.ZNAKI;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;

_table.WALUTA.VALUE:=STANKAS.WALUTA().SYM;
_excel.write_async('WAL',STANKAS.WALUTA);

_table.B_NB.VALUE:=STANKAS.TAB_KURS().NB;
_table.B_NUMER.VALUE:=STANKAS.TAB_KURS().NUMER;
_excel.write_async('B',STANKAS.TAB_KURS);

_table.F_NUMER.VALUE:=STANKAS.F_NUMER().SKROT;
_excel.write_async('FORMULA',STANKAS.F_NUMER);

_table.F_KP.VALUE:=STANKAS.F_KP().SKROT;
_excel.write_async('FORMULA',STANKAS.F_KP);

_table.F_KW.VALUE:=STANKAS.F_KW().SKROT;
_excel.write_async('FORMULA',STANKAS.F_KW);

_table.F_INNY.VALUE:=STANKAS.F_INNY().SKROT;
_excel.write_async('FORMULA',STANKAS.F_INNY);

_table.ODD.VALUE:=STANKAS.ODD().OD;
::_excel.write_async('ODD',STANKAS.ODD);

::_table.F_KWT.VALUE:=STANKAS.F_KWT().SKROT;
::_excel.write_async('FORMULA',STANKAS.F_KWT);

_table.KOD.VALUE:=STANKAS.KOD;
_table.NAZWA.VALUE:=STANKAS.NAZWA;
_table.CZY_KASA.VALUE:=STANKAS.CZY_KASA;
_table.CZY_OTW.VALUE:=STANKAS.CZY_OTW;
_table.CZY_SMIN.VALUE:=STANKAS.CZY_SMIN;
_table.CZY_KILK.VALUE:=STANKAS.CZY_KILK;
_table.CZY_KDNI.VALUE:=STANKAS.CZY_KDNI;
_table.CZY_KTIP.VALUE:=STANKAS.CZY_KTIP;
_table.RODZ_KUR.VALUE:=STANKAS.RODZ_KUR;
_table.CZY_ZMKU.VALUE:=STANKAS.CZY_ZMKU;
_table.R_NUMER.VALUE:=STANKAS.R_NUMER;
_table.CZY_ZDEP.VALUE:=STANKAS.CZY_ZDEP;
_table.ILDNI.VALUE:=STANKAS.ILDNI;
_table.PGPP.VALUE:=STANKAS.PGPP;
_table.MIN.VALUE:=STANKAS.MIN;
_table.SYM.VALUE:=STANKAS.SYM;
_table.DAN.VALUE:=STANKAS.DAN;
_table.ZNAKI.VALUE:=STANKAS.ZNAKI;

BO_KASY.cntx_psh();
BO_KASY.index('STANKAS');
BO_KASY.prefix(STANKAS.ref(),);
{? BO_KASY.first()
|| {!
   |?
      _excel.write_async('BO_KASY',BO_KASY.ref());
      BO_KASY.next()
   !}
?};
BO_KASY.cntx_pop();

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::   WY: 0 - porażka
::       1 - sukces
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

_result.OBJ:=obj_new('WALUTA', 'F_NUMER', 'F_KW', 'F_INNY', 'F_KWT', 'F_KP', 'ODD','TAB_KURS');

{? _obj.WALUTA=''
||
   _result.OBJ.WALUTA:=null()
||
   _result.OBJ.WALUTA:=exec('FindInSet','#table','WAL','WAL_SYM',_obj.WALUTA,,,1);
   {? _result.OBJ.WALUTA=null()
   ||
      _result.MSG:='Nie znaleziono waluty o kodzie %1.'@[_obj.WALUTA];
      _result.RESULT:=0;
      return(~~)
   ?}
?};

{? _obj.B_NB='' & _obj.B_NUMER=''
||
   _result.OBJ.TAB_KURS:=null()
||
   _result.OBJ.TAB_KURS:=exec('FindInSet','#table','B','BANK',_obj.B_NUMER,_obj.B_NB,,1,,null());
   {? _result.OBJ.TAB_KURS=null()
   ||
      _result.MSG:='Nie znaleziono oddziału banku o nazwie %1 i numerze %2.'@[_obj.B_NB,_obj.B_NUMER];
      _result.RESULT:=0;
      return(~~)
   ?}
?};

_result.OBJ.F_NUMER:=exec('FindInSet','#table','FORMULA','FORMULA4',_obj.F_NUMER,'N',,1);
{? _result.OBJ.F_NUMER=null()
||
   _result.MSG:='Nie znaleziono formuły o skrócie %1.'@[_obj.F_NUMER];
   _result.RESULT:=0;
   return(~~)
?};

_result.OBJ.F_KW:=exec('FindInSet','#table','FORMULA','FORMULA4',_obj.F_KW,'N',,1);
{? _result.OBJ.F_KW=null()
||
   _result.MSG:='Nie znaleziono formuły o skrócie %1.'@[_obj.F_KW];
   _result.RESULT:=0;
   return(~~)
?};

_result.OBJ.F_INNY:=exec('FindInSet','#table','FORMULA','FORMULA4',_obj.F_INNY,'N',,1);
{? _result.OBJ.F_INNY=null()
||
   _result.MSG:='Nie znaleziono formuły o skrócie %1.'@[_obj.F_INNY];
   _result.RESULT:=0;
   return(~~)
?};
::_result.OBJ.F_KWT:=exec('FindInSet','#table','FORMULA','FORMULA4',_obj.F_KWT,'N',,1);
::{? _result.OBJ.F_KWT=null()
::||
::   _result.MSG:='Nie znaleziono formuły o skrócie %1.'@[_obj.F_KWT];
::   _result.RESULT:=0
::?};

_result.OBJ.F_KP:=exec('FindInSet','#table','FORMULA','FORMULA4',_obj.F_KP,'N',,1);
{? _result.OBJ.F_KP=null()
||
   _result.MSG:='Nie znaleziono formuły o skrócie %1.'@[_obj.F_KP];
   _result.RESULT:=0;
   return(~~)
?};

_result.OBJ.ODD:=exec('FindInSet','#table','ODD','ODDZIALY',_obj.ODD,REF.FIRMA,,1);
{? _result.OBJ.ODD=null()
||
   _result.MSG:='Nie znaleziono oddziału o kodzie %1.'@[_obj.ODD];
   _result.RESULT:=0;
   return(~~)
?};

{? _result.RESULT = 1
||
   STANKAS.index('KOD');
   STANKAS.prefix(_obj.KOD);
   {? STANKAS.first() & STANKAS.KOD = _obj.KOD
   ||
      {? _mode=0
      || _result.RESULT:=0
      ||
         _result.ACTION:='put';
         exec('record','xls_stankas',_obj,_mode,_result);
         {? exec('stankas_chk','kasa_wspolne') <>''
         ||
            _result.RESULT:=0
         ?}
      ?}
   ||
      _result.ACTION:='add';
      exec('record','xls_stankas',_obj,_mode,_result);
      {? exec('stankas_chk','kasa_wspolne') <>''
      ||
         _result.RESULT:=0
      ?}
   ?}
?};

_result


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
||
   {? _validate.ACTION='add'
   ||
      _result:=STANKAS.add(1)
   |? _validate.ACTION='put'
   ||
      _result:=STANKAS.put(1)
   ?}
?};
{? _result=0
||
   {? _validate.ACTION='add'
   ||
      FUN.info('Dodanie stanowiska kasowego o kodzie %1 nie powiodło się.'@[$_obj.KOD])
   ||
      FUN.info('Poprawa stanowiska kasowego o kodzie %1 nie powiodła się.'@[$_obj.KOD])
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'KOD','INTEGER','Kod'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'ODDZ','STRING[1]','Oddział'
   ,'NAZWA','STRING[30]','Nazwa');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KOD',,);

STANKAS.cntx_psh();
STANKAS.index('KOD');
STANKAS.prefix();
{? STANKAS.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$STANKAS.ref();
      _selected.prefix($STANKAS.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KOD:=STANKAS.KOD;
      _tab.NAZWA:=STANKAS.NAZWA;
      _tab.add();
      STANKAS.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'KOD,NAZWA',20,'Wybór stanowiska kasowego do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
STANKAS.cntx_pop();

_result

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:43 3b28d1c8068aa01ab49a7996d17db259bac11f62bf06e20b8fba1c7ee14ef089f3b87cbd2faf062553db721262f78acc6c95609994d6ee32aad434e3db1c7bd26d87a6a55ead26e90e480abf2d5038d6b7a56cb1face83471a20eaa57b1fa89d64150747bda237d74452793e499bf3ba54aaaf2f763072475e4af44e4c53baca
