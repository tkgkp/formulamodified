:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_users_fz.fml
:: Utworzony: 10.08.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu uprawnienia do form współpracy
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='USERS_FZ';
_def.FUNPAR:='ZWS_UPR_RUFZ';
_def.DOMAIN:=exec('name','#b_domain','PKD');
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.SHEET:='Uprawnienia do form współpracy=1,1';
_def.NAME:='Uprawnienia do form współpracy'@;
_def.DESC:='Uprawnienia do form współpracy';

: źródło danych
_def.TABLE:="USERS_FZ";

: prolog
_def.BEFORE:="
   USERS.cntx_psh();
   USERS.prefix();
   F_ZATR.cntx_psh();
   F_ZATR.prefix();
   USERS_FZ.cntx_psh();
   USERS_FZ.f_clear();
   USERS_FZ.index('W_USR');
   USERS_FZ.prefix(REF.FIRMA)
";

: epilog
_def.AFTER:="
   USERS_FZ.cntx_pop();
   F_ZATR.cntx_pop();
   USERS.cntx_pop()
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('USERS', MS.name(USERS_FZ,'USERS'), 0,,MS.comment(USERS_FZ,'USERS'));
   _env.define('F_ZATR',MS.name(USERS_FZ,'F_ZATR'),0,,MS.comment(USERS_FZ,'F_ZATR'));
   _env.define('DOSTEP',MS.name(USERS_FZ,'DOSTEP'),1,,MS.comment(USERS_FZ,'DOSTEP'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.USERS.VALUE:=USERS_FZ.USERS().KOD;
   _buf.F_ZATR.VALUE:=USERS_FZ.F_ZATR().KOD;
   _buf.DOSTEP.VALUE:=USERS_FZ.DOSTEP;
   _env.write_async('F_ZATR',USERS_FZ.F_ZATR);
   _env.write_async('USERS',USERS_FZ.USERS);
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_users_fz',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_users_fz',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.USERS=''  || 'USERS'
   |? _buf.F_ZATR='' || 'F_ZATR'
   |? _buf.DOSTEP='' || 'DOSTEP'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? ('TN?'*_buf.DOSTEP)=0
|| _val.msg_inset('DOSTEP','T','N');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(F_ZATR,'KOD');
{? +_buf.F_ZATR>_max
|| _val.msg_length('F_ZATR',_max);
   _buf.F_ZATR:=_max+_buf.F_ZATR
?};
_max:=MS.fld_len(USERS,'KOD');
{? +_buf.USERS>_max
|| _val.msg_length('USERS',_max);
   _buf.USERS:=_max+_buf.USERS
?};

: weryfikacja spójności referencyjnej
{? ~USERS.find_tab(,'KOD',,'=',_buf.USERS)
|| _val.msg_norec('USERS');
   _val.RESULT:=0;
   return()
|| _users:=USERS.ref()
?};
{? ~F_ZATR.find_tab(,'KOD',,'=',_buf.F_ZATR)
|| _val.msg_norec('F_ZATR');
   _val.RESULT:=0;
   return()
|| _f_zatr:=F_ZATR.ref()
?};

_ref:=null;
{? USERS_FZ.find_tab(,'USERS',,'=',_users,'F_ZATR',,'=',_f_zatr)
|| _ref:=USERS_FZ.ref()
?};

: optymalizacja importu i standaryzacja kodu
_obj:=_val.OBJ:=obj_new('USERS_FZ','USERS','F_ZATR','to_str');
_obj.to_str:="'%1: %2'[_a.USERS,_a.F_ZATR]";
_obj.USERS_FZ:=_ref;
_obj.USERS:=_users;
_obj.F_ZATR:=_f_zatr;

{? _ref=null
|| _val.ACTION:='add'
|| _val.ACTION:='put'
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;

_set:="
   _a.FIRMA:=REF.FIRMA;
   _a.USERS:=_c.USERS;
   _a.F_ZATR:=_c.F_ZATR;
   _a.DOSTEP:=_b.DOSTEP;
   ~~
";

{? _val.ACTION='put' & _mod
:  włączono tryb nadpisywania
|| {? USERS_FZ.seek(_obj.USERS_FZ)
   || _set(USERS_FZ,_buf,_obj);
      {? ~USERS_FZ.put(1)
      || _val.msg_update(_obj.to_str(_buf));
         _val.RESULT:=0
      ?}
   || _val.msg_norec(,USERS_FZ.comment());
      _val.RESULT:=0
   ?}

|? _val.ACTION='add'
:  brak ograniczeń
|| USERS_FZ.blank();
   _set(USERS_FZ,_buf,_obj);
   {? ~USERS_FZ.add(1)
   || _val.msg_insert(_obj.to_str(_buf));
      _val.RESULT:=0
   ?}
?};
~~

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:51 5dbee0a52dacf8b81d2cac9c4c49360d338066b88703dc384097fd9f82c491a0a7b47b41a7a0bd2e11d38a8ec9c3207478af207bfc523514763faddd306983e3466e6cc0210d76cb2505e97ef8563d9446f0ab58eb6cef6856c73837cbe892f06bed0fb612c0617ecfaaffded5a0e7a091501d14a06a45610a2f02a31b1531ef
