:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_tuat.fml
:: Utworzony: 12.08.2020
:: Autor: AKUL
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu atrybutów technologii
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TUAT';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='TKTL';
_def.HIDDEN:='T';
_def.SKIP:='T';
_def.ADD_ROWS:=0;

_def.FILE:='produkcja_technologie.xlsx';
_def.SHEET:='Atrybuty'@+'=1,1';
_def.NAME:='Atrybuty technologii'@;
_def.DESC:='Atrybuty technologii'@;

_def.PREFIX:="UAT.index('TR'); UAT.prefix()";
_def.TABLE:="UAT";
_def.FIELDS:="exec('fields','xls_tuat',_a)";

_def.BEFORE:="UAT.cntx_psh()";
_def.AFTER:="{? _a.is_import() || exec('tktl_import_clear','tech_common',_a.excel) ?};UAT.cntx_pop()";

_def.EXPORT:="exec('export','xls_tuat',_a,_b)";
_def.VALIDATE:="exec('validate','xls_tuat',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_tuat',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_edit:=0;
_def.define('TAB','Tabela'@,_edit);
_def.define('TKTL_NRK','Nr karty'@,_edit);
_def.define('TKTL_WER','Wersja karty'@,_edit);
_def.define('NROP','Nr operacji'@,_edit);
_def.define('MSK','Maska'@,_edit);
_def.define('TYP','Typ'@,_edit);
_def.define('WAR','Wartość'@,_edit);
_def.define('LP','Lp'@,_edit);
_def.define('ACT','Aktywny'@,_edit,'Znacznik aktywności elementu - [T]/[N]');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
UAT.prefix();
{? _validate.ACTION='add'
|| UAT.blank();
   UAT.TAB:=_obj.TAB;
   UAT.REF:=_validate.OBJ.REF;
   UAT.MSK:=_obj.MSK;
   UAT.LP:=_obj.LP
?};
UAT.TYP:=_validate.OBJ.TYP;
UAT.WAR:=_obj.WAR;
UAT.ACT:=_obj.ACT;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.TAB.VALUE:=UAT.TAB;
_table.TKTL_NRK.VALUE:={? UAT.TAB='TKTL*' || exec('FindAndGet','#table','TKTL',UAT.REF,UAT.MSK,"TKTL.NRK",'') || '' ?};
_table.TKTL_WER.VALUE:={? UAT.TAB='TKTL*' || exec('FindAndGet','#table','TKTL',UAT.REF,UAT.MSK,"TKTL.WER",'') || '' ?};
:: Wyszukuje nowy nr operacji z tablicy mapującej
_table.NROP.VALUE:={? UAT.TAB='TOPER*'
                   || _unrop:=exec('FindAndGet','#table','TOPER',UAT.REF,UAT.MSK,"TOPER.UNROP",0);
                      {? __TOPER_MAP.find_key(_unrop)
                      || $__TOPER_MAP.NEW
                      || ''
                      ?}
                   || ''
                   ?};
_table.MSK.VALUE:=UAT.MSK;
_table.TYP.VALUE:=UAT.TYP().NA;
_table.WAR.VALUE:=UAT.WAR;
_table.LP.VALUE:=UAT.LP;
_table.ACT.VALUE:=UAT.ACT;

_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('TYP','NRK','NROP','REF');
_imp_err:=0;
_check:=1;

_tktl:=null();_nrk:='';_wer:='';
{? _obj.TAB='TKTL*'
|| _tktl:=exec('FindInSet','#table','TKTL','NRK',_obj.TKTL_WER,'T',"TKTL.ref()",1,_obj.TKTL_NRK,null());
   _nrk:=_obj.TKTL_NRK;
   _wer:=_obj.TKTL_WER
|? _obj.TAB='TOPER*'
|| _tktl:=exec('FindInSet','#table','TOPER','UNROP',#_obj.NROP,,"TOPER.NRK",,,null());
   _nrk:=exec('FindAndGet','#table','TKTL',_tktl,,"TKTL.NRK",'');
   _wer:=exec('FindAndGet','#table','TKTL',_tktl,,"TKTL.WER",'')
?};

:: Sprawdzam czy do karty zgłoszony został błąd
{? _tktl=null() | __TKTL_ERR.find_key(_nrk,_wer,)
|| _imp_err:=1
?};
:: Jeżeli wcześniej został zgłoszony błąd to wychodzę wcześniej bez dodatkowej walidacji
{? _imp_err>0
|| _result.RESULT:=0
||
:: Wyszukanie refów powiązanych rekordów
   _result.OBJ.TYP:={? _obj.TYP=''
                    || null()
                    || exec('FindInSet','#table','TAT','NA',_obj.TYP,,,1,,null())
                    ?};
   _result.OBJ.NRK:={? _obj.TKTL_NRK='' | _obj.TKTL_WER=''
                    || 0
                    || exec('FindInSet','#table','TKTL','NRK',_obj.TKTL_WER,'T',"#TKTL.ref()",1,_obj.TKTL_NRK,0)
                    ?};
   _result.OBJ.NROP:={? _obj.NROP='' | _obj.NROP='0'
                     || 0
                     || exec('FindInSet','#table','TOPER','UNROP',#_obj.NROP,,"#TOPER.ref()",,,0)
                     ?};
:: Błędy
   {? _result.OBJ.TYP=null()
   || _result.msg_norec('TYP');
      _result.RESULT:=0
   ?};
   {? _obj.TKTL_NRK<>'' & _obj.TKTL_WER<>'' & _result.OBJ.NRK=0
   || _result.msg_norec('TKTL_NRK');
      _result.RESULT:=0
   ?};
   {? _obj.NROP<>'' & _obj.NROP<>'0' & _result.OBJ.NROP=0
   || _result.msg_norec('NROP');
      _result.RESULT:=0
   ?};
   {? +_obj.ACT=0 | 'TN'*_obj.ACT=0
   || _result.msg_inset('ACT','N','T');
      _result.RESULT:=0
   ?}
?};
:: OK
{? _result.RESULT>0
||
   _result.OBJ.REF:={? _result.OBJ.NRK<>0 || _result.OBJ.NRK |?  _result.OBJ.NROP<>0 || _result.OBJ.NROP || 0 ?};
   {? _result.OBJ.REF<>0
   || UAT.index('TR');
      UAT.prefix(_obj.TAB,_result.OBJ.REF,_obj.MSK,_obj.LP);
      {? UAT.first()
      || {? _mode=0
         || _result.RESULT:=0;
            _check:=0;
            {? _obj.TAB='TKTL*'
            || _result.MSG:='Technologia %1 (wer. %2) posiada już atrybut o numerze %3.'@
                            [_obj.TKTL_NRK,_obj.TKTL_WER,$_obj.LP]
            || _result.MSG:='Operacja \'%1\' technologii %2 (wer. %3) posiada już atrybut o numerze %4.'@
                  [exec('FindAndGet','#table',TOPER,_result.OBJ.REF,_obj.MSK,"$TOPER.NROP+'. '+TOPER.OPER().NA",'')
                  ,_nrk,_wer,$_obj.LP]
            ?}
         || _result.ACTION:='put';
            exec('record','xls_tuat',_obj,_mode,_result)
         ?}
      || _result.ACTION:='add';
         exec('record','xls_tuat',_obj,_mode,_result)
      ?}
   ?}
?};
{? _result.RESULT<=0 & _check>0 & _imp_err=0
||
:: Jak błąd to ustawiam znacznik błędu na karcie technologicznej
   {? _tktl<>null()
   || TKTL.cntx_psh();
      TKTL.prefix();
      {? TKTL.seek(_tktl)
      || TKTL.IMP_ERR:='T';
         TKTL.put();
         _result.MSG+='\nKarta %1 (wer. %2) oraz wszystkie jej elementy, które zostały do tej pory zaimportowane '
                      'zostaną usunięte.'[TKTL.NRK,TKTL.WER];
::       Dodaję kartę do listy ignorowanych kart przy imporcie
         __TKTL_ERR.NRK:=TKTL.NRK;
         __TKTL_ERR.WER:=TKTL.WER;
         __TKTL_ERR.add()
      ?};
      TKTL.cntx_pop()
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| _tktl:={? _obj.TAB='TKTL*'
          || exec('FindAndGet','#table','TKTL',UAT.REF,UAT.MSK,"$TKTL.ref()",'')
          |? _obj.TAB='TOPER*'
          || exec('FindAndGet','#table','TOPER',UAT.REF,UAT.MSK,"$TOPER.NRK",'')
         ?};
   EXCEL_ENV.ID_GRP:=_tktl;
   {? _validate.ACTION='add'
   || _result:=UAT.add(1)
   |? _validate.ACTION='put'
   || _result:=UAT.put(1)
   ?}
|| EXCEL_ENV.ID_GRP:=''
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie atrybutu \'%1\' nie powiodło się.'@[_obj.TYP]
   || _validate.MSG:='Poprawa atrybutu \'%1\' nie powiodła się.'@[_obj.TYP]
   ?}
?};
_result

:Sign Version 2.0 jowisz:1048 2020/10/16 15:26:06 dc22c16d903aa7006951375dd9ee84f4cfd2d0fcc916b3d3b53195faec9ae44acca97216ab7f1896b79ad9ff8fd86af61a0a4f82130557352db02d2d60fe29dec7b981c491735a857f40c7c48aae4f0e2579af046dbe22a3d74fe00e5f1f667677752d5f4b1ebaded8febce85a3c912c01cb71012a62de129e7bc878e172fd78
