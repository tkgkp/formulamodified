:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_tktl.fml
:: Utworzony: 10.08.2020
:: Autor: AKUL
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu kart technologicznych
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TKTL';
_def.DOMAIN:=exec('name','#b_domain','TTE');
_def.FUNPAR:='TKTL';
_def.HIDDEN:='T';
_def.SKIP:='T';
_def.ADD_ROWS:=0;

_def.FILE:='produkcja_technologie.xlsx';
_def.SHEET:='Karty technologiczne'@+'=1,1';
_def.NAME:='Karty technologiczne'@;
_def.DESC:='Karty technologiczne'@;

_def.PREFIX:="TKTL.index('ASTN'); TKTL.prefix('T','N')
";
_def.TABLE:="TKTL";
_def.FIELDS:="exec('fields','xls_tktl',_a)";

_def.BEFORE:="{? _a.is_export() || TKTL.f_clear() ?}; TKTL.cntx_psh(); TKTL.use('txktl___')";
_def.AFTER:="{? _a.is_import() || exec('tktl_import_clear','tech_common',_a.excel) ?};TKTL.cntx_pop()";
_def.SELECT:="exec('select','xls_tktl',_a)";

_def.EXPORT:="exec('export','xls_tktl',_a,_b)";
_def.VALIDATE:="exec('validate','xls_tktl',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_tktl',_a,_b,_c)";
~~


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_edit:=0;
_def.define('TYP','Typ'@,_edit,,'Typ (max. 3 znaki)');
_def.define('XJM','Karta na XJM'@,_edit,,,,ST.DOKL);
_def.define('NRK','Nr karty'@,_edit);
_def.define('WER','Wersja'@,_edit);
_def.define('KTM','Produkt'@,_edit);
_def.define('JM','Jednostka miary'@,_edit);
_def.define('STAN','Stan'@,_edit,,'Znacznik stanu karty: [T] - zakończona, [P] - w przygotowaniu, [N] - nowa');
_def.define('OPIS','Opis'@,_edit);
_def.define('DEF_OPCK','Domyślny wariant'@,_edit,,'Domyślny wariant kalkulacji technologii');
_def.define('RYS_NR','Nr rysunku'@,_edit);
_def.define('GKTL','Grupa'@,_edit,,'Grupa technologii (max. 10 znaków)');
_def.define('DEFAULT','Domyślna'@,_edit,,'[T]/[N]/[P]');
_def.define('SERIA','Wielkość optymalnej serii wyrobu'@,_edit,,,,ST.DOKL);
_def.define('JORG','Wydział'@,_edit);
_def.define('PRZEL','Wartość przeliczeniowa'@,_edit,
            ,'Przelicznik: ile zje mocy w planowaniu produkcja 1 jednostki',,ST.DOKL);
_def.define('STAT_N','Status rejestracji nagłówka'@,_edit,,'[T] - zakończony, [N] - niezakończony');
_def.define('STAT_O','Status rejestracji operacji'@,_edit,,'[T] - zakończone, [N] - niezakończone');
_def.define('STAT_S','Status rejestracji surowców'@,_edit,,'[T] - zakończone, [N] - niezakończone');
_def.define('STAT_P','Status rejestracji pozostałych danych'@,_edit,,'[T] - zakończone, [N] - niezakończone');
_def.define('TERM_OD','Data ważności - od'@,_edit,,'Termin obowiązywania - od daty');
_def.define('TERM_DO','Data ważności - do'@,_edit,,'Termin obowiązywania - do daty');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TKTL.prefix();
{? _validate.ACTION='add'
|| TKTL.blank();
   TKTL.NRK:=_obj.NRK;
   TKTL.WER:=_obj.WER;
   TKTL.TORW:='T';
   TKTL.ARCH:='N';
   TKTL.TYP:=_validate.OBJ.TYP;
   TKTL.XJM:=_obj.XJM;
   TKTL.KTM:=_validate.OBJ.KTM;
   TKTL.JM:=_validate.OBJ.JM;
   TKTL.STAN:=_obj.STAN;
   TKTL.OPIS:=_obj.OPIS;
   TKTL.DEF_OPCK:=_validate.OBJ.DEF_OPCK;
   TKTL.RYS_NR:=_obj.RYS_NR;
   TKTL.DEFAULT:=_obj.DEFAULT;
   TKTL.SERIA:=_obj.SERIA;
   TKTL.JORG:=_validate.OBJ.JORG;
   TKTL.PRZEL:=_obj.PRZEL;
   TKTL.STAT_N:=_obj.STAT_N;
   TKTL.STAT_O:=_obj.STAT_O;
   TKTL.STAT_S:=_obj.STAT_S;
   TKTL.STAT_P:=_obj.STAT_P;
   TKTL.TERM_OD:=_obj.TERM_OD;
   TKTL.TERM_DO:=_obj.TERM_DO;
   TKTL.GKTL:=_validate.OBJ.GKTL
::   TKTL.IMP_ERR:='X'
?};
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.TYP.VALUE:=TKTL.TYP().TYP;
_table.XJM.VALUE:=TKTL.XJM;
_table.NRK.VALUE:=TKTL.NRK;
_table.WER.VALUE:=TKTL.WER;
_table.KTM.VALUE:=TKTL.KTM().KTM;
_table.JM.VALUE:=TKTL.JM().KOD;
_table.STAN.VALUE:=TKTL.STAN;
_table.OPIS.VALUE:=TKTL.OPIS;
_table.DEF_OPCK.VALUE:=TKTL.DEF_OPCK().NAZ;
_table.RYS_NR.VALUE:=TKTL.RYS_NR;
_table.DEFAULT.VALUE:=TKTL.DEFAULT;
_table.SERIA.VALUE:=TKTL.SERIA;
_table.JORG.VALUE:=TKTL.JORG().KOD;
_table.PRZEL.VALUE:=TKTL.PRZEL;
_table.STAT_N.VALUE:=TKTL.STAT_N;
_table.STAT_O.VALUE:=TKTL.STAT_O;
_table.STAT_S.VALUE:=TKTL.STAT_S;
_table.STAT_P.VALUE:=TKTL.STAT_P;
_table.TERM_OD.VALUE:=TKTL.TERM_OD;
_table.TERM_DO.VALUE:=TKTL.TERM_DO;
_table.GKTL.VALUE:=TKTL.GKTL().GR;
TKTL.cntx_psh();
:: Parametry karty
TPAR.cntx_psh();
TPAR.use('txpar___');
TPAR.cntx_psh();
TPAR.index('NN');
TPAR.prefix(TKTL.ref);
{? TPAR.first()
||
   {!
   |?
      _excel.write_async('TPAR',TPAR.ref());
      TPAR.next()
   !}
?};
TPAR.cntx_pop();
TPAR.cntx_pop();
TKTL.cntx_pop();
TKTL.cntx_psh();
:: Produkty karty
TKTLW.cntx_psh();
TKTLW.use('txktw___');
TKTLW.cntx_psh();
TKTLW.index('REF');
TKTLW.prefix(TKTL.ref);
{? TKTLW.first()
||
   {!
   |?
      _excel.write_async('TKTLW',TKTLW.ref());
      TKTLW.next()
   !}
?};
TKTLW.cntx_pop();
TKTLW.cntx_pop();
TKTL.cntx_pop();
TKTL.cntx_psh();
:: Operacje technologiczne
TOPER.cntx_psh();
TOPER.use('txope___');
TOPER.cntx_psh();
TOPER.index('NNN');
TOPER.prefix(TKTL.ref);
{? TOPER.first()
||
   {!
   |?
      {? TOPER.ACT='T' || _excel.write_async('TOPER',TOPER.ref()) ?};
      TOPER.next()
   !}
?};
TOPER.cntx_pop();
TOPER.cntx_pop();
TKTL.cntx_pop();
TKTL.cntx_psh();
:: Surowce technologiczne
TMAT.cntx_psh();
TMAT.use('txmat___');
TMAT.cntx_psh();
TMAT.index('ANL');
TMAT.prefix('T',TKTL.ref);
{? TMAT.first()
||
   {!
   |?
      _excel.write_async('TMAT',TMAT.ref());
      TMAT.next()
   !}
?};
TMAT.cntx_pop();
TMAT.cntx_pop();
TKTL.cntx_pop();
TKTL.cntx_psh();
:: N-P-U
TACTTLS.cntx_psh();
TACTTLS.use('txtls___');
TACTTLS.cntx_psh();
TACTTLS.index('AKNROP');
TACTTLS.prefix('T',TKTL.ref);
{? TACTTLS.first()
||
   {!
   |?
      _excel.write_async('TACTTLS',TACTTLS.ref());
      TACTTLS.next()
   !}
?};
TACTTLS.cntx_pop();
TACTTLS.cntx_pop();
TKTL.cntx_pop();
TKTL.cntx_psh();
:: Atrybuty karty
UAT.cntx_psh();
UAT.index('TR');
UAT.prefix('TKTL*',#TKTL.ref,'txktl___');
{? UAT.first()
||
   {!
   |?
      {? UAT.ACT='T' || _excel.write_async('TUAT',UAT.ref()) ?};
      UAT.next()
   !}
?};
UAT.cntx_pop();
TKTL.cntx_pop();
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('TYP','KTM','JM','DEF_OPCK','JORG','GKTL');

_result.OBJ.TYP:={? _obj.TYP=''
                 || null()
                 || exec('FindInSet','#table','TPKTL','TYP',_obj.TYP,,,1,,null())
                 ?};
_result.OBJ.KTM:={? _obj.KTM=''
                 || null()
                 || exec('FindInSet','#table','M','MATKTM',_obj.KTM,,,1,,null())
                 ?};
_result.OBJ.JM:={? _obj.JM=''
                || null()
                || exec('FindInSet','#table','JM','KOD',_obj.JM,,,1,,null())
                ?};
_result.OBJ.DEF_OPCK:={? _obj.DEF_OPCK=''
                      || null()
                      || exec('FindInSet','#table','KWAR','NA',_obj.DEF_OPCK,,,1,,null())
                      ?};
_result.OBJ.JORG:={? _obj.JORG='' | XINFO.SLWYDZIA=null()
                  || null()
                  || exec('FindInSet','#table','SLO','SL',_obj.JORG,XINFO.SLWYDZIA,,1,,null())
                  ?};
_result.OBJ.GKTL:={? _obj.GKTL=''
                  || null()
                  || exec('FindInSet','#table','GKTL','GR',_obj.GKTL,,,1,,null())
                  ?};

:: Błędy
{? _result.OBJ.TYP=null()
|| _result.msg_norec('TYP');
   _result.RESULT:=0
?};
{?  _obj.KTM<>'' & _result.OBJ.KTM=null()
|| _result.msg_norec('KTM');
   _result.RESULT:=0
?};
{? _result.OBJ.JM=null()
|| _result.msg_norec('JM');
   _result.RESULT:=0
?};
{? _obj.DEF_OPCK<>'' & _result.OBJ.DEF_OPCK=null()
|| _result.msg_norec('DEF_OPCK');
   _result.RESULT:=0
?};
{? _obj.JORG<>'' & _result.OBJ.JORG=null()
|| _result.msg_norec('JORG');
   _result.RESULT:=0
?};
{? _obj.GKTL<>'' & _result.OBJ.GKTL=null()
|| _result.msg_norec('GKTL');
   _result.RESULT:=0
?};
{? +_obj.STAN=0 | 'TPN'*_obj.STAN=0
|| _result.msg_inset('STAN','T','P','N');
   _result.RESULT:=0
?};
{? +_obj.DEFAULT=0 | 'TNP'*_obj.DEFAULT=0
|| _result.msg_inset('DEFAULT','T','N','P');
   _result.RESULT:=0
?};
{? +_obj.STAT_N=0 | 'TN'*_obj.STAT_N=0
|| _result.msg_inset('STAT_N','T','N');
   _result.RESULT:=0
?};
{? +_obj.STAT_O=0 | 'TN'*_obj.STAT_O=0
|| _result.msg_inset('STAT_O','T','N');
   _result.RESULT:=0
?};
{? +_obj.STAT_S=0 | 'TN'*_obj.STAT_S=0
|| _result.msg_inset('STAT_S','T','N');
   _result.RESULT:=0
?};
{? +_obj.STAT_P=0 | 'TN'*_obj.STAT_P=0
|| _result.msg_inset('STAT_P','T','N');
   _result.RESULT:=0
?};
:: OK
{? _result.RESULT>0
|| _valid:="
      _chk:=__CHK.record2(TKTL,'TYP',,'NRK','Numer karty','WER',,'OPIS','Opis karty','JM','Jednostka miary');
      {? _chk=''
      || {? TKTL.XJM<=0
         || FUN.emsg('Ilość musi być większa od zera.'@);
            'XJM'
         |? TKTL.SERIA<=0
         || FUN.emsg('Seria musi być większa od zera.'@);
            'SERIA'
         ?}
      ?};
      _chk
   ";
:: Sprawdzenie, czy karta o podanych numerze i wersji już instnieje
   _ok:=exec('chk_symbol','tech_head','T',_obj.NRK,_obj.WER);
   {? ~_ok
   ||
::    Sprawdzenie czy istniejąca karta jest w bieżącej masce (niearchiwalnej)
      TKTL.index('NRK');
      TKTL.prefix('T',_obj.NRK,_obj.WER,);
      {? TKTL.first()
      || {? _mode=0
         || _result.RESULT:=0;
            _result.MSG:='Karta technologiczna o numerze \'%1\' i wersji \'%2\' już istnieje.'@[_obj.NRK,_obj.WER];
            __TKTL_ERR.NRK:=_obj.NRK;
            __TKTL_ERR.WER:=_obj.WER;
            __TKTL_ERR.add()
         || _result.ACTION:='put';
            exec('record','xls_tktl',_obj,_mode,_result);
            {? _valid()<>''
            || _result.RESULT:=0
            ?}
         ?}
      ||
::       Technologia znajduje się w archiwum
         _result.RESULT:=0;
         _result.MSG:='Karta technologiczna o numerze \'%1\' i wersji \'%2\' już istnieje.'@[_obj.NRK,_obj.WER];
         __TKTL_ERR.NRK:=_obj.NRK;
         __TKTL_ERR.WER:=_obj.WER;
         __TKTL_ERR.add()
      ?}
   || _result.ACTION:='add';
      exec('record','xls_tktl',_obj,_mode,_result);
      {? _valid()<>''
      || _result.RESULT:=0
      ?}
   ?}
||
:: Jak błąd to dodaję kartę do listy ignorowanych kart przy imporcie
   __TKTL_ERR.NRK:=_obj.NRK;
   __TKTL_ERR.WER:=_obj.WER;
   __TKTL_ERR.add()
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| EXCEL_ENV.ID_GRP:=TKTL.NRK+'-'+TKTL.WER;
   {? _validate.ACTION='add'
   || _result:=TKTL.add(1)
   |? _validate.ACTION='put'
   || _result:=TKTL.put(1)
   ?}
|| EXCEL_ENV.ID_GRP:=''
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie karty %1 (%2) nie powiodło się.'@[_obj.NRK,_obj.WER]
   || _validate.MSG:='Poprawa karty %1 (%2) nie powiodła się.'@[_obj.NRK,_obj.WER]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AKUL [20.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,
   'NRK','STRING[50]','Nr karty'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'WER','STRING[6]','Wersja'
   ,'TYP','STRING[3]','Typ'
   ,'OPIS','STRING[60]','Opis'
::   ,'KTM','STRING[60]','Opis'
   ,'STAN','STRING[1]','Stan'
);
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'NRK',,);

TKTL.cntx_psh();
TKTL.index('NRK');
TKTL.prefix('T');
{? TKTL.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$TKTL.ref();
      _selected.prefix($TKTL.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.NRK:=TKTL.NRK;
      _tab.WER:=TKTL.WER;
      _tab.TYP:=TKTL.TYP().TYP;
      _tab.OPIS:=TKTL.OPIS;
      _tab.STAN:=TKTL.STAN;
      _tab.add();
      TKTL.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'NRK,WER,TYP,OPIS,STAN',20,'Wybór kart technologicznych do eksportu'@);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |? _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
TKTL.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:12 6eb4814aa9d80f4ecd4f8f00137617413fb543f8ff7082813a8823dc40fdcc782665581b0a8f195e82cf84c8d156517deef76e68745ca310c03f8d0eac12d92681e51134237ef096da526cebcb504de0327e5c7e31ce70f0a5afe0b859f22029e684230b289fcbfa8fbbf08e13cc6ab4c2ea2b11d100c5c085a4071278fe8037
