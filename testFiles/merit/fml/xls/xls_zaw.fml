:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_zaw.fml
:: Utworzony: 09.08.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu zawodów
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='ZAW';
_def.FUNPAR:='ZWS_PAR_PZAW';
_def.DOMAIN:=exec('name','#b_domain','PKD');
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.SHEET:='Zawody=1,1';
_def.NAME:='Zawody'@;
_def.DESC:='Zawody';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="ZAW";

: prolog
_def.BEFORE:="
   ZAW.cntx_psh();
   ZAW.f_clear();
   ZAW.index('ZAWODNAZ');
   ZAW.prefix()
";

: epilog
_def.AFTER:="
   ZAW.cntx_pop()
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('ZD', MS.name(ZAW,'ZD'), 1,,MS.comment(ZAW,'ZD'));
   _env.define('KOD',MS.name(ZAW,'KOD'),1,,MS.comment(ZAW,'KOD'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.ZD.VALUE:=ZAW.ZD;
   _buf.KOD.VALUE:=ZAW.KOD;
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_zaw',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_zaw',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.ZD='' || 'ZD'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(ZAW,'ZD');
{? +_buf.ZD>_max
|| _val.msg_length('ZD',_max);
   _buf.ZD:=_max+_buf.ZD
?};
_max:=MS.fld_len(ZAW,'KOD');
{? +_buf.KOD>_max
|| _val.msg_length('KOD',_max);
   _buf.KOD:=_max+_buf.KOD
?};

_ref:=null;
{? ZAW.find_tab(,'ZD',,'=',_buf.ZD)
|| _ref:=ZAW.ref()
?};

: optymalizacja importu i standaryzacja kodu
_obj:=_val.OBJ:=obj_new('ZAW','to_str');
_obj.to_str:="'%1'[_a.ZD]";
_obj.ZAW:=_ref;

{? _ref=null
|| _val.ACTION:='add'
|| _val.ACTION:='put'
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;

_set:="
   _a.ZD:=_b.ZD;
   _a.KOD:=_b.KOD;
   ~~
";

{? _val.ACTION='put' & _mod
:  włączono tryb nadpisywania
|| {? ZAW.seek(_obj.ZAW)
   || _set(ZAW,_buf);
      {? ~ZAW.put(1)
      || _val.msg_update(_obj.to_str(_buf));
         _val.RESULT:=0
      ?}
   || _val.msg_norec(,ZAW.comment());
      _val.RESULT:=0
   ?}

|? _val.ACTION='add'
:  brak ograniczeń
|| ZAW.blank();
   _set(ZAW,_buf);
   {? ~ZAW.add(1)
   || _val.msg_insert(_obj.to_str(_buf));
      _val.RESULT:=0
   ?}
?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 6937fe35f106accc5ba56270470a1529a90057ae3302dc7169184bc094b81a48b6247a70179be17cf4733338b2fcd6c6a9057f5de23b395459a1d8a4c7139e4698df96719bfe1ddac47e49b88364517e918073643e6365af55db03291279949b83607a24fd43d223f5e35c93f154064f87583c1847c3ef42ad3813d0e939e5af
