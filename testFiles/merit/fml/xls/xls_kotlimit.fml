:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_kotlimit.fml
:: Utworzony: 20.04.2023
:: Autor: IS
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu pozycji Kontrola trzeźwości - Limity
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='KOTLIMIT';
_def.FUNPAR:='ZWS_PAR_PKTL';
_def.DOMAIN:=exec('name','#b_domain','PKD');
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.SHEET:='Limity kontroli trzeźwości=1,1';
_def.NAME:='Limity kontroli trzeźwości'@;
_def.DESC:='Limity kontroli trzeźwości';
_def.MULTIFIR:='T';

: źródło danych
_def.TABLE:="KOTLIMIT";

: prolog
_def.BEFORE:="
   SLO_KOD.cntx_psh();
   SLO_KOD.prefix();
   KOT_JM.cntx_psh();
   KOT_JM.prefix();
   KOTLIMIT.cntx_psh();
   KOTLIMIT.index('UNIQ');
   KOTLIMIT.prefix();
   ~~
";

: epilog
_def.AFTER:="
   KOTLIMIT.cntx_pop();
   KOT_JM.cntx_pop();
   SLO_KOD.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _tStr:=type_of('');
   _tInt:=type_of(0);
   _env.define('KOT_JM', MS.name(KOTLIMIT,'KOT_JM'),1,, MS.comment(KOTLIMIT,'KOT_JM'), _tInt,0);
   _env.define('WYNIK',  MS.name(KOTLIMIT,'WYNIK'),1,,  MS.comment(KOTLIMIT,'WYNIK'),  _tInt,4);
   _env.define('STAN',   MS.name(KOTLIMIT,'STAN'),1,,   MS.comment(KOTLIMIT,'STAN'),   _tStr);
   _env.define('TEST',   MS.name(KOTLIMIT,'TEST'),1,,   MS.comment(KOTLIMIT,'TEST'),   _tStr);
   _env.define('OK',     MS.name(KOTLIMIT,'OK'),1,,     MS.comment(KOTLIMIT,'OK'),     _tStr);
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.KOT_JM.VALUE:=KOTLIMIT.KOT_JM().LP;
   _buf.WYNIK.VALUE:=KOTLIMIT.WYNIK;
   _buf.STAN.VALUE:=KOTLIMIT.STAN().KOD;
   _buf.TEST.VALUE:=KOTLIMIT.TEST;
   _buf.OK.VALUE:=KOTLIMIT.OK;
   _env.write_async('KOT_JM',KOTLIMIT.KOT_JM);
   _env.write_async('SLO_KOD',KOTLIMIT.STAN);
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_kotlimit',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_kotlimit',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

: wychwyć błędy krytyczne
_fld:=
   {? _buf.STAN=''   || 'STAN'
   |? _buf.OK=''     || 'OK'
   || ''
   ?};
{? _fld<>''
:  katastrofa
|| _val.msg_empty(_fld);
   _val.RESULT:=0;
   return()
?};

: błędne wartości
{? ('NT'*_buf.OK)=0
|| _val.msg_inset('OK','N','T');
   _val.RESULT:=0;
   return()
?};

: ostrzeżenia
_max:=MS.fld_len(SLO_KOD,'KOD');
{? +_buf.STAN>_max
|| _val.msg_length('STAN',_max);
   _buf.STAN:=_max+_buf.STAN
?};

{? (_stan:=exec('kod','ext_slo','KOTLIMIT',_buf.STAN))=null
|| _val.msg_norec('STAN');
   _val.RESULT:=0;
   return()
?};

_kotJm:=_jm:=null();
{? ~KOT_JM.find_tab(,
      'LP',,'=',_buf.KOT_JM
   )
|| _val.msg_norec('KOT_JM');
   _val.RESULT:=0;
   return()
|| _kotJm:=KOT_JM.ref();
   _jm:=KOT_JM.JM
?};

: weryfikacja spójności referencyjnej
_ref:=null;
{? KOTLIMIT.find_tab(,
      'STAN',,'=',_stan,
      'JM',,'=',_jm
   )
|| _ref:=KOTLIMIT.ref();
   _val.ACTION:='put'
|| _val.ACTION:='add'
?};

: optymalizacja importu i standaryzacja
_val.OBJ:=exec('write_obj','xls__util',_ref,
   "'%1 %2'[$_a.WYNIK,_a.JM]",
   'KOT_JM',_kotJm,
   'STAN',_stan
);
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [22.26]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
exec('write','xls__util',_a,_b,_c,KOTLIMIT,"
   _a.WYNIK:=_b.WYNIK;
   _a.STAN:=_c.STAN;
   _a.KOT_JM:=_c.KOT_JM;
   _a.TEST:=_b.TEST;
   _a.OK:=_b.OK;
   ~~
");
~~

:Sign Version 2.0 jowisz:1045 2023/07/21 13:25:34 d7ff7565a51d083cbbe9907799828974a9ceb6a477e7ffaef29dfe2ff196f7341f3376a88461d226d2f3ebeed5ab4f34adb9e72b291340aa18594b19e403ba149314ca0e9b9699b5b62175669edbc4b8cb4a3fb1a082b1934ec55fa16f29949aa040a0b15b96357c7d070c5c1667a29110832a7b0ba9293d663fc6c489bc6e36
