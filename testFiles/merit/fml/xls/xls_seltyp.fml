:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_seltyp.fml
:: Utworzony: 23.04.2019
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu definicji typów selekcji
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='SELTYP';
_def.DOMAIN:=exec('name','#b_domain','LUM');
_def.FUNPAR:='ZWS_LUM_TSEL';

_def.FILE:='umowy_cykliczne.xlsx';
_def.SHEET:='Typy selekcji=1,1';
_def.NAME:='Typy selekcji'@;
_def.DESC:='Typy selekcji';

_def.PREFIX:="exec('prefix','xls_seltyp')";
_def.TABLE:="exec('table','xls_seltyp')";
_def.FIELDS:="exec('fields','xls_seltyp',_a)";

_def.BEFORE:="SELTYP.cntx_psh()";
_def.AFTER:="SELTYP.cntx_pop()";
_def.SELECT:="exec('select','xls_seltyp',_a)";

_def.EXPORT:="exec('export','xls_seltyp',_a,_b)";
_def.IMPORT:="exec('import','xls_seltyp',_a,_b,_c)";
_def.VALIDATE:="exec('validate','xls_seltyp',_a,_b,_c)";
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
SELTYP.index('OPIS');
SELTYP.prefix();
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
SELTYP


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('ODDZ','Oddział',1,,'1-znakowy kod oddziału'@);
_def.define('R','Rodzaj zabudowy',0,,
'Rodzaj zabudowy:
(J) - jednorodzinna
(W) - wielorodzinna
'@);
_def.define('POJ','Pojemnik',0,,'Selekcja w pojemnikach? [T/N].'@);
_def.define('CZYDRUK','Formuła przed',0,,'Czy drukować? [T/N].'@);
_def.define('OP','Opis typu',1,,'Opis typu selekcji - maksymalnie 80 znaków.'@);
_def.define('DR','Tekst drukowany',0,,'Tekst drukowany'@);
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

SELTYP.index('OPIS');
SELTYP.prefix();
{? _validate.ACTION='add'
||
   SELTYP.blank();
   SELTYP.ODDZ:=_obj.ODDZ;
   SELTYP.OP:=_obj.OP
?};

SELTYP.R:=_obj.R;
SELTYP.POJ:=_obj.POJ;
SELTYP.CZYDRUK:=_obj.CZYDRUK;
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.ODDZ.VALUE:=SELTYP.ODDZ; _excel.write_async('ODDZ',exec('FindInSet','#table','ODDZ','KOD',SELTYP.ODDZ,,,1));
_table.R.VALUE:=SELTYP.R;
_table.POJ.VALUE:=SELTYP.POJ;
_table.CZYDRUK.VALUE:=SELTYP.CZYDRUK;
_table.OP.VALUE:=SELTYP.OP;
_table.DR.VALUE:=SELTYP.memo_txt(0,1,'DR');
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;

{? form(_obj.OP)=''
|| _result.msg_empty('OP');
   _result.RESULT:=0
|? (+_obj.ODDZ)<>1 | ~(exec('isLetter','#string',_obj.ODDZ,1) | exec('isDigit','#string',_obj.ODDZ))
|| _result.msg_inset('ODDZ','mała litera','cyfra');
   _result.RESULT:=0
|? ~((';WJ'*_obj.R)>1)
|| _result.msg_inset('R','W','J');
   _result.RESULT:=0
|? ~((';TN'*_obj.POJ)>1)
|| _result.msg_inset('POJ','T','N');
   _result.RESULT:=0
|? ~((';TN'*_obj.CZYDRUK)>1)
|| _result.msg_inset('CZYDRUK','T','N');
   _result.RESULT:=0
?};

{? _result.RESULT=1
||
   SELTYP.index('OPIS');
   SELTYP.prefix(_obj.ODDZ,_obj.OP,);
   {? SELTYP.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put';
         exec('record','xls_seltyp',_obj,_mode,_result)
      ?}
   || _result.ACTION:='add';
      exec('record','xls_seltyp',_obj,_mode,_result)
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=SELTYP.add(1)
   |? _validate.ACTION='put'
   || _result:=SELTYP.put(1)
   ?};
   SELTYP.memo_set(_obj.DR,'DR');
   SELTYP.memo_put()
?};
{? _result=0
|| _validate.MSG:={? _validate.ACTION='add'
                  || 'Dodanie typu selekcji %1 nie powiodło się.'@[SELTYP.OP]
                  || 'Modyfikacja typu selekcji %1 nie powiodła się.'@[SELTYP.OP]
                  ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [19.22]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(2,'ODDZ','STRING[1]','Oddział'
   ,'OP','STRING[80]','Opis'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'R','STRING[30]','Rodzaj zabudowy'
   ,'POJ','STRING[1]','Czy selekcja pojemnikowa?'
   ,'CZYDRUK','STRING[1]','Czy drukować');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'ODDZ',,,'OP',,);

SELTYP.cntx_psh();
SELTYP.index('OPIS');
SELTYP.prefix();
{? SELTYP.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$SELTYP.ref();
      _selected.prefix($SELTYP.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.OP:=SELTYP.OP;
      _tab.ODDZ:=SELTYP.ODDZ;
      _tab.R:=SELTYP.R;
      _tab.POJ:=SELTYP.POJ;
      _tab.CZYDRUK:=SELTYP.CZYDRUK;
      _tab.add();
      SELTYP.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'ODDZ,OP,R,POJ,CZYDRUK',20,'Wybór typów selekcji do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
SELTYP.cntx_pop();
_result

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:50 31722fb74995535104133ba519828cae250b2aba131f0dff504e6ba006c18cf27d2730514d758512b9ff446419a82c729aa192fbe810628842c4f851458b73924978cf393238604bda98543bc96e6090d99d2480f456598d8fc7e6d1798e267cb82ced150031f68c4a7d2c69c4b1db3f94ab237c28bec1900ec107da0a0ccfb8
