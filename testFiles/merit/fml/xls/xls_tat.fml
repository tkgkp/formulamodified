:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_tat.fml
:: Utworzony: 24.07.2018
:: Autor: [rr]
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu typów atrybutów
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TAT';
_def.SHEET:='Typy atrybutów=1,1';
_def.NAME:='Typy atrybutów'@;
_def.DESC:='Typy atrybutów';
_def.EXPORT:="exec('export','xls_tat',_a,_b)";
exec('init0','xls_tat',_def);
~~


\prefix
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa zakres eksportowanych danych
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
TAT.index('W_PORTAL');
TAT.prefix('N');
~~


\table
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa uchwyt do tabeli
::   WY: uchwyt do eksportowanej tabeli
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
TAT


\fields
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.define('NA','Nazwa',0,,'20 znakowy kod');
_def.define('TYP','Typ',0,,
'(L) - liczba
 (D) - data
 (C) - czas
 (T) - tekst
 (S) - słownik
 (P) - partia produkcyjna
 (B) - Tak/Nie
 (U) - schemat struktury
 (X) - słownik tymczasowy
 (O) - nagłówek
');
_def.define('OPIS','Opis',1,,'80 znakowy kod');
_def.define('SLU','Słownik użytkownika',1,,'Nazwa słownika - należy podać dla TYPU słownik');
_def.define('UD_TYP','Typ schematu danych',1,,'8 znaków');
_def.define('UD_SCH','Schemat danych',1,,'8 znaków');
_def.define('WYMCZ','Dotyczy osoby',1,,'Czy należy do wymagań osób - T/N');
_def.define('PREC','Liczba miejsc po przecinku',1,,'Liczba miejsc po przecinku prezentowanych wartości');
_def.define('TSEP','Separator tysięcy',1,,'Sposób wyświetlania - czy separator tysięcy?');
_def.define('MIEJSCE','Miejsce użycia',1,,'Znacznik miejsca użycja: W-wnioski, L-logistyka, P-produkcja');
~~


\record
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Uzupełnia bufor tabeli wartościami obiektu
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;
TAT.prefix();
{? _validate.ACTION='add'
||
   TAT.blank();
   TAT.NA:=_obj.NA
?};

TAT.TYP:=_obj.TYP;
TAT.OPIS:=_obj.OPIS;
TAT.SLU:=_validate.OBJ.SLU;
TAT.WYMCZ:=_obj.WYMCZ;
TAT.PREC:=_obj.PREC;
TAT.TSEP:=_obj.TSEP;
TAT.UD_SCH:=_validate.OBJ.UD_SCH;
TAT.MIEJSCE:=_obj.MIEJSCE;
ZNORMAT.ATROSO:={? TAT.WYMCZ='T' || 'T' || 'N' ?};
~~


\export
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::       _c - rodzaj MAT, DST, pusty - wszystko (domyślnie)
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_c')<>type_of('') | (_c<>'MAT' & _c<>'DST')
|| _c:=''
?};
_excel:=_a;
_table:=_b;
_rodz:=_c;

_result:=1;
{? _rodz<>''
|| _result:=exec('tat_uzyty','xls_tat',TAT.ref(),_rodz)
?};
{? _result
|| _table.NA.VALUE:=TAT.NA;
   _table.TYP.VALUE:=TAT.TYP;
   _table.OPIS.VALUE:=TAT.OPIS;
   _table.SLU.VALUE:=TAT.SLU().NAZ;
   _excel.write_async('SLU',TAT.SLU);
   _table.UD_TYP.VALUE:={? TAT.UD_SCH<>null() || TAT.UD_SCH().UD_TYP().SYMBOL || '' ?};
   _excel.write_async('UD_TYP',TAT.UD_SCH().UD_TYP);
   _table.UD_SCH.VALUE:={? TAT.UD_SCH<>null() || TAT.UD_SCH().SYMBOL || '' ?};
   _excel.write_async('UD_SCH',TAT.UD_SCH);
   _table.WYMCZ.VALUE:=TAT.WYMCZ;
   _table.PREC.VALUE:=TAT.PREC;
   _table.TSEP.VALUE:=TAT.TSEP;
   _table.MIEJSCE.VALUE:=TAT.MIEJSCE
?};
_result


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_result:=_c;

_result.RESULT:=1;
_result.OBJ:=obj_new('SLU','UD_SCH','UD_TYP');

{? _obj.SLU<>''
|| _result.OBJ.SLU:=exec('FindInSet','#table','SLU','NAZ',_obj.SLU,,,1);
   {? _result.OBJ.SLU=null()
   || _result.MSG:='Nie znaleziono słownika użytkownika %1.'@[_obj.SLU];
      _result.RESULT:=0
   ?}
|| _result.OBJ.SLU:=null()
?};

_result.OBJ.UD_TYP:=null();
_result.OBJ.UD_SCH:=null();

{? _obj.UD_TYP<>'' & _obj.UD_SCH<>''
|| _result.OBJ.UD_TYP:=exec('FindInSet','#table','UD_TYP','SYMBOL',_obj.UD_TYP,,,1);
   {? _result.OBJ.UD_TYP=null()
   || _result.MSG:='Nieznaleziony typ schematu danych %1.'@[_obj.UD_TYP];
      _result.RESULT:=0
   || _result.OBJ.UD_SCH:=exec('FindInSet','#table','UD_SCH','SYMBOL',_obj.UD_SCH,_result.OBJ.UD_TYP,,1);
      {? _result.OBJ.UD_SCH=null()
      || _result.MSG:='Nie znaleziono schematu danych %1.'@[_obj.UD_SCH];
         _result.RESULT:=0
      ?}
   ?}
|? _obj.UD_TYP<>''
|| _result.MSG:='Nie podano symbolu schematu danych dla typu %1.'@[_obj.UD_TYP];
   _result.RESULT:=0
|? _obj.UD_SCH<>''
|| _result.MSG:='Nie podano typu schematu danych %1.'@[_obj.UD_SCH];
   _result.RESULT:=0
?};

{? _result.RESULT=1
||
   TAT.index('NA');
   TAT.prefix(_obj.NA,);
   {? TAT.first()
   || {? _mode=0
      || _result.RESULT:=0
      ||
         _result.ACTION:='put';
         exec('record','xls_tat',_obj,_mode,_result);
         {? exec('tat_rkpo','mat_atr',_result.ACTION)<>'' || _result.RESULT:=0 ?}
      ?}
   || _result.ACTION:='add';
      exec('record','xls_tat',_obj,_mode,_result);
      {? exec('tat_rkpo','mat_atr',_result.ACTION)<>'' || _result.RESULT:=0 ?}
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_mode:=_b;
_validate:=_c;

_result:=0;
{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=TAT.add(1)
   |? _validate.ACTION='put'
   || _result:=TAT.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie typu atrybutu o symbolu %1 nie powiodła się.'@[_obj.NA]
   || _validate.MSG:='Poprawa typu atrybutu o symbolu %1 nie powiodła się.'@[_obj.NA]
   ?}
?};
_result


\select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;

_result:=0;

_tab:=tab_tmp(1,'NA','STRING[20]','Nazwa'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'OPIS','STRING[60]','Opis'
   ,'TYP','STRING[1]','Typ'
   ,'SLU','STRING[20]','Słownik użytkownika'
   ,'UD_SCH','STRING[20]','Schemat danych'
   ,'MIEJSCE','STRING[1]','Miejsce użycia');
_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'NA',,);

TAT.cntx_psh();
TAT.index('W_PORTAL');
TAT.prefix('N');
{? TAT.first()
|| {!
   |?
      _tab.blank();
      _tab.REF:=$TAT.ref();
      _selected.prefix($TAT.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.NA:=TAT.NA;
      _tab.OPIS:=TAT.OPIS;
      _tab.TYP:=TAT.TYP;
      _tab.SLU:=TAT.SLU().NAZ;
      _tab.UD_SCH:={? TAT.UD_SCH<>null() || TAT.UD_SCH().UD_TYP().SYMBOL+'/'+TAT.UD_SCH().SYMBOL || '' ?};
      _tab.MIEJSCE:=TAT.MIEJSCE;
      _tab.add();
      TAT.next()
   !}
?};
_result:=exec('select_action','#table',_tab,'NA,OPIS,TYP,SLU,UD_SCH',20,'Wybór typów atrybutów do eksportu'@,1);
{? _result>0
||
   _selected.erase();

   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
TAT.cntx_pop();
_result


\init0
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:='parametryzacja.xlsx';
_def.MULTIFIR:='T';

_def.PREFIX:="exec('prefix','xls_tat')";
_def.TABLE:="exec('table','xls_tat')";
_def.FIELDS:="exec('fields','xls_tat',_a)";

_def.BEFORE:="TAT.cntx_psh()";
_def.AFTER:="TAT.cntx_pop()";
_def.SELECT:="exec('select','xls_tat',_a)";

_def.VALIDATE:="exec('validate','xls_tat',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_tat',_a,_b,_c)";
~~


\init_mat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TAT_MAT';
_def.FUNPAR:='ZWS_DEF_ATR_MAT';
_def.MULTIFIR:='T';

_def.SHEET:='Typy atrybutów (indeksy)=1,1';
_def.NAME:='Typy atrybutów (indeksy)'@;
_def.DESC:='Typy atrybutów (indeksy)';
_def.EXPORT:="exec('export','xls_tat',_a,_b,'MAT')";
exec('init0','xls_tat',_def);
~~


\init_dsc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='TAT_DST';
_def.FUNPAR:='ZWS_DEF_ATR_DST';
_def.MULTIFIR:='T';

_def.SHEET:='Typy atrybutów (dostawy)=1,1';
_def.NAME:='Typy atrybutów (dostawy)'@;
_def.DESC:='Typy atrybutów (dostawy)';
_def.EXPORT:="exec('export','xls_tat',_a,_b,'DST')";
exec('init0','xls_tat',_def);
~~


\tat_uzyty
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [22.26]
:: OPIS: sprawdza, czy podany TAT.ref() był użyty jako atrybut indeksu (MAT) albo dostawy (DST)
::   WE: _a - TAT.ref()
::       _b - rodzaj MAT, DST
::----------------------------------------------------------------------------------------------------------------------
_tat_ref:=_a;
_typ:='B';
{? _b='DST'
|| _typ:='C'
?};

_sql:='';
{! _nn:=1..10
|! {? _nn>=2
   || _sql+='\n union '
   ?};
   _sql+='select sl_'+form(_nn,-2)+' as tat from m_atr where typ = \''+_typ+'\''
!};
_tab:=sql(_sql);
_ndx:=_tab.ndx_tmp(,,'TAT',,);
_tab.index(_ndx);
_tab.prefix($_tat_ref);
_jest:=_tab.first();

_jest

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:12 2af83fc3815a3c6b4a68a64f923c9334c12a190413d29a226a3e3bff5a2e49a14fb79790a36391423367f1acafffb20d85360b88bdf1115c7cc2e08097aeb482e2f5de95f3642ca8bcf086f73b22a96fdf164962a454c878099d14dbd97f3b8cd85f3ddd5ab9db2ae488cd2170241cf643051dedc2e787492cbb3afa106be253
