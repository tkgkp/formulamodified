:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_rd_nb.fml
:: Utworzony: 22.08.2018
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu słownika nieobecności do urlopu rodzicielskiego
::======================================================================================================================


\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu.
::   WE: _a [OBJECT] - środowisko mechanizmu
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;

_def.ID:='RD_NB';
_def.FUNPAR:='ZWS_PAR_PRNB';
_def.DOMAIN:=exec('name','#b_domain','PKD');
_def.FILE:=exec('def_per_dict_xlsx','xls__init');
_def.SHEET:='Nieobecności rodzicielskie=1,1';
_def.NAME:='Nieobecności rodzicielskie do świadectwa pracy'@;
_def.DESC:='Nieobecności rodzicielskie do świadectwa pracy';

: źródło danych
_def.TABLE:="RD_NB";

: prolog
_def.BEFORE:="
   RD_PPRAW.cntx_psh();
   RD_PPRAW.prefix();
   RD_NB.cntx_psh();
   RD_NB.f_clear();
   RD_NB.index('RD_NB');
   RD_NB.prefix();
   ~~
";

: epilog
_def.AFTER:="
   RD_NB.cntx_pop();
   RD_PPRAW.cntx_pop();
   ~~
";

: definicja kolumn
_def.FIELDS:="
   _env:=_a;
   _env.define('RT',      MS.name(RD_NB,'RT'),         1,,MS.comment(RD_NB,'RT'));
   _env.define('ATR',     MS.name(RD_NB,'ATR'),        1,,MS.comment(RD_NB,'ATR'));
   _env.define('ARTYKUL', MS.name(RD_PPRAW,'ARTYKUL'), 1,,MS.comment(RD_PPRAW,'ARTYKUL'));
   _env.define('ART_NDX', MS.name(RD_PPRAW,'ART_NDX'), 1,,MS.comment(RD_PPRAW,'ART_NDX'));
   _env.define('PARAGRAF',MS.name(RD_PPRAW,'PARAGRAF'),1,,MS.comment(RD_PPRAW,'PARAGRAF'));
   _env.define('PUNKT',   MS.name(RD_PPRAW,'PUNKT'),   1,,MS.comment(RD_PPRAW,'PUNKT'));
   ~~
";

: zawartość wiersza
_def.EXPORT:="
   _env:=_a;
   _buf:=_b;
   _buf.RT.VALUE:=RD_NB.RT;
   _buf.ATR.VALUE:=RD_NB.ATR;
   _buf.ARTYKUL.VALUE:=RD_NB.RD_PPRAW().ARTYKUL;
   _buf.ART_NDX.VALUE:=RD_NB.RD_PPRAW().ART_NDX;
   _buf.PARAGRAF.VALUE:=RD_NB.RD_PPRAW().PARAGRAF;
   _buf.PUNKT.VALUE:=RD_NB.RD_PPRAW().PUNKT;
   _env.write_async('RD_PPRAW',RD_NB.RD_PPRAW);
   1
";

: weryfikacja i zapis wiersza odczytanego z pliku wymiany
_def.VALIDATE:="exec('validate','xls_rd_nb',_a,_b,_c)";
_def.IMPORT:="exec('import','xls_rd_nb',_a,_b,_c)";
~~


\validate
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Weryfikuje poprawność wiersza odczytanego z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - obiekt z resultem, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;

_rdp:=null;
{? _buf.ARTYKUL<>'' | _buf.ART_NDX<>'' | _buf.PARAGRAF<>'' | _buf.PUNKT<>''
|| {? ~RD_PPRAW.find_tab(,
         'ARTYKUL',,'=',_buf.ARTYKUL,
         'ART_NDX',,'=',_buf.ART_NDX,
         'PARAGRAF',,'=',_buf.PARAGRAF,
         'PUNKT',,'=',_buf.PUNKT
      )
   || _val.MSG:='Nie udało się odnaleźć opisu podstawy prawnej.'@;
      _val.RESULT:=0;
      return()
   || _rdp:=RD_PPRAW.ref()
   ?}
?};

_ref:=null;
{? RD_NB.find_tab(,'RT',,'=',_buf.RT)
|| _ref:=RD_NB.ref()
?};

_rzR:={? RD_NB.find_tab(,'RT',,'=',_buf.RT) || RD_NB.ref() || null ?};
_rzA:={? RD_NB.find_tab(,'ATR',,'=',_buf.ATR) || RD_NB.ref() || null ?};


: optymalizacja importu i standaryzacja kodu
_obj:=_val.OBJ:=obj_new('RD_NB','RD_PPRAW','to_str');
_obj.to_str:="'%1'[_a.RT]";
_obj.RD_PPRAW:=_rdp;
_obj.RD_NB:=_ref;

{? _rzR=null
|| {? _rzA=null
   || _val.ACTION:='add'
   || _val.msg_unique(_obj.to_str(_buf));
      _val.RESULT:=0
   ?}
|| {? _rzA=null | _rzA=_rzR
   || _val.ACTION:='put'
   || _val.msg_unique(_obj.to_str(_buf));
      _val.RESULT:=0
   ?}
?};
~~


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.42]
:: OPIS: Tworzy lub modyfikuje wiersze na podstawie wartości odczytanych z pliku wymiany.
::   WE: _a [OBJECT] - tablica nazwana z wartościami pól wiersza pliku wymiany
::       _b [INTEGER] - tryb pracy: 0 - zachowaj istniejące, 1 - nadpisywać istniejące
::       _c [OBJECT] - rezultat walidacji i importu, patrz exec('args_valid','#excel_imex')
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
: mapa argumentów
_buf:=_a;
_mod:=_b;
_val:=_c;
_obj:=_c.OBJ;

_set:="
   _a.RT:=_b.RT;
   _a.ATR:=_b.ATR;
   _a.RD_PPRAW:=_c.RD_PPRAW;
   ~~
";

{? _val.ACTION='put' & _mod
:  włączono tryb nadpisywania
|| {? RD_NB.seek(_obj.RD_NB)
   || _set(RD_NB,_buf,_obj);
      {? ~RD_NB.put(1)
      || _val.msg_update(_obj.to_str(_buf));
         _val.RESULT:=0
      ?}
   || _val.msg_norec(,RD_NB.comment());
      _val.RESULT:=0
   ?}

|? _val.ACTION='add'
:  brak ograniczeń
|| RD_NB.blank();
   _set(RD_NB,_buf,_obj);
   {? ~RD_NB.add(1)
   || _val.msg_insert(_obj.to_str(_buf));
      _val.RESULT:=0
   ?}
?};
~~

:Sign Version 2.0 jowisz:1028 2019/06/07 16:01:49 14d97a885be68cdbe4f9c4aefd9d4cdf8bb85c9804f0c69077a96201c499e7f1f4282075629771f8ff098a99e7f9f52e23fc8770cbdde3c6e3cae717cf5cfab139a8e8127569af2f877d9e0e42e4265fd5cd5ece0fdc0cee9fc15987a4a8740317dc5a17a520bb2366e06af4ae87a52e3775048d62b249baa68c850099e4a688
