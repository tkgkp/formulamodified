:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: xls_urz.fml
:: Utworzony: 03.09.2018
:: Autor: AF
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi eksportu/importu urządzeń
::======================================================================================================================


\filename
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Nazwa pliku do eksportu
::----------------------------------------------------------------------------------------------------------------------
'zasoby.xlsx'


\KART_ZAS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='KART_ZAS';
_def.FUNPAR:='ZWS_PAR_DFPF';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('filename','xls_zasoby');
_def.SHEET:='Lista zasobów'@+'=1,1';
_def.NAME:='Zasób'@;
_def.DESC:='Zasób'@;
_def.MULTIFIR:='T';

_def.PREFIX:="KART_ZAS.index('UNIK'); KART_ZAS.prefix()";
_def.TABLE:="KART_ZAS";
_def.FIELDS:="exec('KART_ZAS_fld','xls_zasoby',_a)";

_def.BEFORE:="KART_ZAS.cntx_psh()";
_def.AFTER:="KART_ZAS.cntx_pop()";
_def.SELECT:="exec('KART_ZAS_select','xls_zasoby',_a)";

_def.EXPORT:="exec('KART_ZAS_exp','xls_zasoby',_a,_b)";
_def.VALIDATE:="exec('KART_ZAS_valid','xls_zasoby',_a,_b,_c)";
_def.IMPORT:="exec('KART_ZAS_imp','xls_zasoby',_a,_b,_c)";
~~


\KART_ZAS_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('KH','Kontrahent',1,,'10 znakowy skrót kontrahenta');
_def.define('P','Potencjalny',1,,'1 znakowy 1 - Potencjalny 2 - Rzeczywisty');
_def.define('KART','Typ kartoteki',1,,'1 znakowa P - Pojazd S - Karta SIM');
_def.define('POZF','Pozycja faktury',1,,'100 znakowy rodzaj pozycji faktury');
_def.define('OBC','Obciążająca',1,,'1 znakowy czy pozycja obciąża obowiązujący limit T - Tak N - Nie');
_def.define('SLU','Słownik użytkownika',1,,'20 znakowa nazwa słownika');
_def.define('GRPOD','Grupa podatkowa',1,,'8 znakowy kod pozycji w słowniku');
~~


\KART_ZAS_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNA>
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;
_result:=0;

_tab:=tab_tmp(1,'KH','STRING[30]','Kontrahent'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'KART','STRING[100]','Typ kartoteki'
   ,'POZF','STRING[30]','Pozycja faktury'
   ,'OBC','STRING[30]','Obciążająca'
   ,'GRPOD','STRING[100]','Grupa podatkowa');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'KH',,,'KART',,,'POZF',,,'OBC',,,'GRPOD',,);

KART_ZAS.cntx_psh();
KART_ZAS.index('UNIK');
KART_ZAS.prefix();
{? KART_ZAS.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$KART_ZAS.ref();
      _selected.prefix($KART_ZAS.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.KH:=KART_ZAS.KH().SKR;
      _tab.KART:=KART_ZAS.KART;
      _tab.POZF:=KART_ZAS.POZF;
      _tab.OBC:=KART_ZAS.OBC;
      _tab.GRPOD:=KART_ZAS.GRPOD().KOD;
      _tab.add();

      KART_ZAS.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'KH,KART,POZF,OBC,GRPOD',40,'Wybór zasobów do eksportu'@,1);
{? _result>0
|| _selected.erase();
   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
KART_ZAS.cntx_pop();
_result


\KART_ZAS_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;

_result:=1;
_table.KH.VALUE:=KART_ZAS.KH().SKR;
:: _excel.write_async('KH',KART_ZAS.KH);
::_table.P.VALUE:=KART_ZAS.KH().P;
_table.SLU.VALUE:=KART_ZAS.GRPOD().SLU().NAZ; _excel.write_async('SLU',KART_ZAS.GRPOD().SLU);
_table.GRPOD.VALUE:=KART_ZAS.GRPOD().KOD; _excel.write_async('SLO',KART_ZAS.GRPOD);

_table.KART.VALUE:=KART_ZAS.KART;
_table.POZF.VALUE:=KART_ZAS.POZF;
_table.OBC.VALUE:=KART_ZAS.OBC;

_result


\KART_ZAS_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;

{? _table.SLU <> ''
|| _slu:=exec('FindInSet','#table','SLU','NAZ',_table.SLU,,,1);
   {? _slu=null
   || _result.MSG:='Nie odnaleziono słownika użytkownika'@;
      _result.RESULT:=0
   ?};
   {? _table.GRPOD <> ''
   || _slo:=exec('FindInSet','#table','SLO','SL',_table.GRPOD,_slu,,1);
      {? _slo=null
      || _result.MSG:='Nie odnaleziono pozycji w słowniku użytkownika'@;
         _result.RESULT:=0
      ?}
   ?}
|| _slu:=null;
   _slo:=null
?};

{? (_kh:=exec('FindInSet','#table','KH','SKR',_table.KH,#_table.P,,1,_table.KH))=null
|| _result.MSG:='Nie znaleziono kontrahenta: %1.'@[_table.KH];_result.RESULT:=0
|| KART_ZAS.index('UNIK');
   KART_ZAS.prefix(_kh,_table.KART,_table.POZF,_table.OBC,);
   {? KART_ZAS.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || KART_ZAS.blank() ?};
      KART_ZAS.KH:=_kh;
      KART_ZAS.KART:=_table.KART;
      KART_ZAS.POZF:=_table.POZF;
      KART_ZAS.OBC:=_table.OBC;
      KART_ZAS.GRPOD:=_slo;
      KART_ZAS.GRPOD().SLU:=_slu
   ?}
?};
~~


\KART_ZAS_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;

{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=KART_ZAS.add(1)
   |? _validate.ACTION='put'
   || _result:=KART_ZAS.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie zasobu dla grupy podatkowej %1 nie powiodło się.'@[_table.GRPOD]
   || _validate.MSG:='Poprawa zasobu dla grupy podatkowej %1 nie powiodła się.'@[_table.GRPOD]
   ?}
?};
_result


\AN_ZAS
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='AN_ZAS';
_def.FUNPAR:='ZWS_AN_ZAS';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('filename','xls_zasoby');
_def.SHEET:='Analizy zasobów'@+'=1,1';
_def.NAME:='Analiza zasobu'@;
_def.DESC:='Analiza zasobu'@;

_def.PREFIX:="AN_ZAS.index('DISP'); AN_ZAS.prefix()";
_def.TABLE:="AN_ZAS";
_def.FIELDS:="exec('AN_ZAS_fld','xls_zasoby',_a)";

_def.BEFORE:="AN_ZAS.cntx_psh()";
_def.AFTER:="AN_ZAS.cntx_pop()";
_def.SELECT:="exec('AN_ZAS_select','xls_zasoby',_a)";

_def.EXPORT:="exec('AN_ZAS_exp','xls_zasoby',_a,_b)";
_def.VALIDATE:="exec('AN_ZAS_valid','xls_zasoby',_a,_b,_c)";
_def.IMPORT:="exec('AN_ZAS_imp','xls_zasoby',_a,_b,_c)";
~~


\AN_ZAS_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('RODZZAS','Rodzaj zasobu',1,,'2 rodzaj zasobu P - Pojazd S - ANa SIM');
_def.define('NAZ','Nazwa analizy',1,,'100 znakowy nazwa analizy');
_def.define('FORMULAP','Formuła początkowa',1,,'8 znakowy skrót formuły zwracającą formułę początkową');
_def.define('FORMULAK','Formuła końcowa',1,,'8 znakowy skrót formuły zwracającą formułę końcową');
_def.define('A','Aktywna',1,,'1 znakowy czy analiza jest aktywna T - Tak, N - Nie');
_def.define('WYK_POTR','Aktywna wykorzystywana do potrąceń pracowniczych',1,,'1 znakowy czy wykorzystywana do potrąceń pracowniczych T - Tak, N - Nie');
_def.define('FIRMA','Firma',1,,'Wskazanie na firmę');
~~


\AN_ZAS_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNAl
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;
_result:=0;

_tab:=tab_tmp(1,'RODZZAS','STRING[2]','Rodzaj zasobu'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'NAZ','STRING[100]','Nazwa analizy'
   ,'FORMULAP','STRING[255]','Formuła początkowa'
   ,'FORMULAK','STRING[255]','Formuła końcowa');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'RODZZAS',,,'NAZ',,);

AN_ZAS.cntx_psh();
AN_ZAS.index('DISP');
AN_ZAS.prefix();
{? AN_ZAS.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$AN_ZAS.ref();
      _selected.prefix($AN_ZAS.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.RODZZAS:=AN_ZAS.RODZZAS;
      _tab.NAZ:=AN_ZAS.NAZ;
      _tab.FORMULAP:=AN_ZAS.FORMULAP().SKROT;
      _tab.FORMULAK:=AN_ZAS.FORMULAK().SKROT;
      _tab.add();

      AN_ZAS.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'RODZZAS,NAZ,FORMULAP,FORMULAK',40,'Wybór zasobów do eksportu'@,1);
{? _result>0
|| _selected.erase();
   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
AN_ZAS.cntx_pop();
_result


\AN_ZAS_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;

_table.FIRMA.VALUE:=AN_ZAS.FIRMA().SYMBOL;
_table.RODZZAS.VALUE:=AN_ZAS.RODZZAS;
_table.NAZ.VALUE:=AN_ZAS.NAZ;
_table.A.VALUE:=AN_ZAS.A;
_table.WYK_POTR.VALUE:=AN_ZAS.WYK_POTR;

_table.FORMULAP.VALUE:=AN_ZAS.FORMULAP().SKROT;
_table.FORMULAK.VALUE:=AN_ZAS.FORMULAK().SKROT;

_result


\AN_ZAS_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;

_formp:=null;
_formk:=null;

{? _table.FIRMA<>''
|| _firma:=exec('FindInSet','#table','FIRMA','SYMBOL',_table.FIRMA,,,1)
|| _firma:=null
?};

{? _table.FORMULAP<>'' & (_formp:=exec('FindInSet','#table','FORMULA','FORMULA4',_table.FORMULAP,'v',,1))=null
|| _result.MSG:='Nie znaleziono formuły początkowej: %1'@[_table.FORMULAP];
   _result.RESULT:=0
|? _table.FORMULAK<>'' &  (_formk:=exec('FindInSet','#table','FORMULA','FORMULA4',_table.FORMULAK,'v',,1))=null()
|| _result.MSG:='Nie znaleziono formuły końcowej: %1'@[_table.FORMULAK];
   _result.RESULT:=0
|| AN_ZAS.index('DISP');
   AN_ZAS.prefix(_firma,_table.NAZ,);
   {? AN_ZAS.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || AN_ZAS.blank() ?};
      AN_ZAS.FIRMA:=_firma;
      AN_ZAS.RODZZAS:=_table.RODZZAS;
      AN_ZAS.NAZ:=_table.NAZ;
      AN_ZAS.A:=_table.A;
      AN_ZAS.WYK_POTR:=_table.WYK_POTR;
      AN_ZAS.FORMULAP:=_formp;
      AN_ZAS.FORMULAK:=_formk;
      {? exec('spr_an_zas','zasoby_wspolne')<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\AN_ZAS_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;

{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=AN_ZAS.add(1)
   |? _validate.ACTION='put'
   || _result:=AN_ZAS.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie definicji analiz zasobów %1 nie powiodło się.'@[_table.NAZ]
   || _validate.MSG:='Poprawa definicji analiz zasobów %1 nie powiodła się.'@[_table.NAZ]
   ?}
?};
_result


\AN_ZASP
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='AN_ZASP';
_def.FUNPAR:='ZWS_AN_ZAS';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('filename','xls_zasoby');
_def.SHEET:='Kolumny analizy'@+'=1,1';
_def.NAME:='Kolumna analizy'@;
_def.DESC:='Kolumna analizy'@;

_def.PREFIX:="AN_ZASP.index('DISP'); AN_ZASP.prefix()";
_def.TABLE:="AN_ZASP";
_def.FIELDS:="exec('AN_ZASP_fld','xls_zasoby',_a)";

_def.BEFORE:="AN_ZASP.cntx_psh()";
_def.AFTER:="AN_ZASP.cntx_pop()";
_def.SELECT:="exec('AN_ZASP_select','xls_zasoby',_a)";

_def.EXPORT:="exec('AN_ZASP_exp','xls_zasoby',_a,_b)";
_def.VALIDATE:="exec('AN_ZASP_valid','xls_zasoby',_a,_b,_c)";
_def.IMPORT:="exec('AN_ZASP_imp','xls_zasoby',_a,_b,_c)";
~~


\AN_ZASP_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('NAG','Wskazanie na nagłówek',1,,'Wskazanie na nagłówek analizy zasobu');
_def.define('LP','Liczba prządkowa',1,,'11 znakowa liczba porządkowa kolumny analizy',type_of(0),0);
_def.define('OPISKOL','Opis kolumny',1,,'20 znakowy opis kolumny');
_def.define('FORMULA','Formuła na wartość kolumny',1,,'8 znakowy skrót formuły zwracającą formułę na wartość kolumny');
_def.define('A','Aktywna',1,,'1 znakowy czy kolumna jest aktywna T - Tak, N - Nie');
_def.define('POTR','Potrącenie',1,,'1 znakowy czy kolumna jest potrąceniem T - Tak, N - Nie');
_def.define('RODZ_ZWR','Rodzaj zwracanej wartości',1,,'11 znakowy rodzaj zwracanej wartości',type_of(0),0);
_def.define('SZER','Szerokość kolumny',1,,'11 znakowa szerokość kolumny',type_of(0),0);
_def.define('LICZ','Liczba miejsc',1,,'1 znakowa liczba miejsc po przecinku',type_of(0),0);
_def.define('FIRMA','Firma',1,,'Wskazanie na firmę');
~~


\AN_ZASP_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNAl
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;
_result:=0;

_tab:=tab_tmp(1,'LP','STRING[11]','Liczba porządkowa'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'OPISKOL','STRING[20]','Opis kolumny'
   ,'FORMULA','STRING[11]','Formuła na wartość kolumny'
   ,'RODZ_ZWR','STRING[11]','Rodzaj zwracanej wartości');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'LP',,,'OPISKOL',,,'FORMULA',,,'RODZ_ZWR',,);

AN_ZASP.cntx_psh();
AN_ZASP.index('DISP');
AN_ZASP.prefix();
{? AN_ZASP.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$AN_ZASP.ref();
      _selected.prefix($AN_ZASP.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.LP:=$AN_ZASP.LP;
      _tab.OPISKOL:=AN_ZASP.OPISKOL;
      _tab.FORMULA:=AN_ZASP.FORMULA().SKROT;
      _tab.RODZ_ZWR:=$AN_ZASP.RODZ_ZWR;
      _tab.add();

      AN_ZASP.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'LP,OPISKOL,FORMULA,RODZ_ZWR',40,'Wybór zasobów do eksportu'@,1);
{? _result>0
|| _selected.erase();
   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
AN_ZASP.cntx_pop();
_result


\AN_ZASP_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;

_table.FIRMA.VALUE:=AN_ZASP.NAG().FIRMA().SYMBOL;
_table.NAG.VALUE:=AN_ZASP.NAG().NAZ; _excel.write_async('AN_ZAS',AN_ZASP.NAG);
_table.LP.VALUE:=AN_ZASP.LP;
_table.OPISKOL.VALUE:=AN_ZASP.OPISKOL;
_table.FORMULA.VALUE:=AN_ZASP.FORMULA().SKROT;
_table.A.VALUE:=AN_ZASP.A;
_table.POTR.VALUE:=AN_ZASP.POTR;
_table.RODZ_ZWR.VALUE:=AN_ZASP.RODZ_ZWR;
_table.SZER.VALUE:=AN_ZASP.SZER;
_table.LICZ.VALUE:=AN_ZASP.LICZ;

_result


\AN_ZASP_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;

_formkol:=null;
_nag:=null;

{? _table.FIRMA<>''
|| _firma:=exec('FindInSet','#table','FIRMA','SYMBOL',_table.FIRMA,,,1)
|| _firma:=null
?};

{? _table.FORMULA<>'' & (_formkol:=exec('FindInSet','#table','FORMULA','FORMULA4',_table.FORMULA,'v',,0))=null
|| _result.MSG:='Nie znaleziono formuły na wartość kolumny: %1'@[_table.FORMULA];
   _result.RESULT:=0
|? _table.NAG<>'' &  (_nag:=exec('FindInSet','#table','AN_ZAS','DISP',_table.NAG,_firma,,1))=null()
|| _result.MSG:='Nie znaleziono nagłówka definicji analizy: %1'@[_table.NAG];
   _result.RESULT:=0
|| AN_ZASP.index('DISP');
   AN_ZASP.prefix(_nag,_table.LP);
   {? AN_ZASP.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || AN_ZASP.blank() ?};
      AN_ZASP.NAG().FIRMA:=_firma;
      AN_ZASP.NAG:=_nag;
      AN_ZASP.LP:=_table.LP;
      AN_ZASP.OPISKOL:=_table.OPISKOL;
      AN_ZASP.FORMULA:=_formkol;
      AN_ZASP.A:=_table.A;
      AN_ZASP.POTR:=_table.POTR;
      AN_ZASP.RODZ_ZWR:=_table.RODZ_ZWR;
      AN_ZASP.SZER:=_table.SZER;
      AN_ZASP.LICZ:=_table.LICZ;
      {? exec('spr_an_zasp','zasoby_wspolne')<>''
      || _result.RESULT:=0
      ?}
   ?}
?};
~~


\AN_ZASP_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;

{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=AN_ZASP.add(1)
   |? _validate.ACTION='put'
   || _result:=AN_ZASP.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie kolumny analizy %1 nie powiodło się.'@[_table.OPISKOL]
   || _validate.MSG:='Poprawa kolumny analizy %1 nie powiodła się.'@[_table.OPISKOL]
   ?}
?};
_result


\AN_ZASW
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Inicjalizuje mechanizm importu/eksportu do Excel
::   WE: _a - obj_new - środowisko mechanizmu
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.ID:='AN_ZASW';
_def.FUNPAR:='ZWS_AN_ZAS';
_def.DOMAIN:=exec('name','#b_domain','ZWS');
_def.FILE:=exec('filename','xls_zasoby');
_def.SHEET:='Wydruki analizy'@+'=1,1';
_def.NAME:='Wydruk analizy'@;
_def.DESC:='Wydruk analizy'@;

_def.PREFIX:="AN_ZASW.index('UNIK'); AN_ZASW.prefix()";
_def.TABLE:="AN_ZASW";
_def.FIELDS:="exec('AN_ZASW_fld','xls_zasoby',_a)";

_def.BEFORE:="AN_ZASW.cntx_psh()";
_def.AFTER:="AN_ZASW.cntx_pop()";
_def.SELECT:="exec('AN_ZASW_select','xls_zasoby',_a)";

_def.EXPORT:="exec('AN_ZASW_exp','xls_zasoby',_a,_b)";
_def.VALIDATE:="exec('AN_ZASW_valid','xls_zasoby',_a,_b,_c)";
_def.IMPORT:="exec('AN_ZASW_imp','xls_zasoby',_a,_b,_c)";
~~


\AN_ZASW_fld
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Określa pola tabeli
::   WE: _a - obiekt z definicją pól który należy zasilić
::----------------------------------------------------------------------------------------------------------------------
_def:=_a;
_def.define('AN_ZAS','Analiza zasobu',1,,'Wskazanie na nagłówek analizy zasobu');
_def.define('WYDRUK','Wydruk',1,,'8 znakowy wzorzec wydruku');
_def.define('OPIS','Opis wydruku',1,,'100 znakowy opis wydruku');
_def.define('FIRMA','Firma',1,,'Wskazanie na firmę');
~~


\AN_ZASW_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Umożliwia wybór rekordów do eksportu
::   WE: _a - tab_tmp - tabela tymczasowa z polem REF którą należy zasilić
::   WY: 0 - użytkownik zrezygnował z wyboru
::       1 - użytkownik potwierdził wybór
::  TAG: <PUBLICZNAl
::----------------------------------------------------------------------------------------------------------------------
_selected:=_a;
_result:=0;

_tab:=tab_tmp(1,'WYDRUK','STRING[11]','Wydruk'
   ,'REF','STRING[16]','SQL ref'
   ,'SELECTED','STRING[1]','Czy wybrano'
   ,'OPIS','STRING[20]','Opis wydruku');

_ndx:=_tab.ndx_tmp(,,'SELECTED',,,'WYDRUK',,,'OPIS',,);

AN_ZASW.cntx_psh();
AN_ZASW.index('UNIK');
AN_ZASW.prefix();
{? AN_ZASW.first()
|| {!
   |? _tab.blank();
      _tab.REF:=$AN_ZASW.ref();
      _selected.prefix($AN_ZASW.ref());
      {? _selected.first()
      || _tab.SELECTED:='T'
      || _tab.SELECTED:='N'
      ?};
      _tab.WYDRUK:=AN_ZASW.WYDRUK;
      _tab.OPIS:=AN_ZASW.OPIS;
      _tab.add();

      AN_ZASW.next()
   !}
?};
_result:=exec('select_action','#table',_tab
 ,'WYDRUK,OPIS',40,'Wybór zasobów do eksportu'@,1);
{? _result>0
|| _selected.erase();
   _tab.index(_ndx);
   _tab.prefix('T');
   {? _tab.first()
   || {!
      |?
         _selected.prefix(_tab.REF);
         {? _selected.first()=0
         || _selected.blank();
            _selected.REF:=_tab.REF;
            _selected.add()
         ?};
         _tab.next()
      !}
   ?}
?};
AN_ZASW.cntx_pop();
_result


\AN_ZASW_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.42]
:: OPIS: Wypełnia obiekt który zapisze w Excel wiersz danymi z rekordu
::       Użycie: export
::   WE: _a - obj_new - środowisko mechanizmu
::       _b - obj_new - obiekt który zasilić wartościami z pól
::   WY: ANY - dowolny wynik (zwracany przez _excel.write_async())
::----------------------------------------------------------------------------------------------------------------------
_excel:=_a;
_table:=_b;
_result:=1;

_table.FIRMA.VALUE:=AN_ZASW.AN_ZAS().FIRMA().SYMBOL;
_table.AN_ZAS.VALUE:=AN_ZASW.AN_ZAS().NAZ; _excel.write_async('AN_ZAS',AN_ZASW.AN_ZAS);
_table.WYDRUK.VALUE:=AN_ZASW.WYDRUK;
_table.OPIS.VALUE:=AN_ZASW.OPIS;

_result


\AN_ZASW_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Waliduje czy można poprawić/dodać rekord
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów do przekazania dla import)
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_result:=_c;
_result.RESULT:=1;

{? _table.FIRMA<>''
|| _firma:=exec('FindInSet','#table','FIRMA','SYMBOL',_table.FIRMA,,,1)
|| _firma:=null
?};

{? _table.AN_ZAS<>'' &  (_nag:=exec('FindInSet','#table','AN_ZAS','DISP',_table.AN_ZAS,_firma,,1))=null
|| _result.MSG:='Nie znaleziono nagłówka definicji analizy: %1'@[_table.AN_ZAS];
   _result.RESULT:=0
|| AN_ZASW.index('UNIK');
   AN_ZASW.prefix(_nag,_table.OPIS);
   {? AN_ZASW.first()
   || {? _mode=0
      || _result.RESULT:=0
      || _result.ACTION:='put'
      ?}
   || _result.ACTION:='add'
   ?};
   {? _result.RESULT=1
   || {? _result.ACTION='add' || AN_ZASW.blank() ?};
      AN_ZASW.AN_ZAS().FIRMA:=_firma;
      AN_ZASW.AN_ZAS:=_nag;
      AN_ZASW.WYDRUK:=_table.WYDRUK;
      AN_ZASW.OPIS:=_table.OPIS
   ?}
?};
~~


\AN_ZASW_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AF [18.42]
:: OPIS: Tworzy lub modyfikuje rekord na podstawie wartości odczytanych z Excel
::       Użycie: import
::   WE: _a - obj_new() - tablica nazwana z polami odczytanymi z excel
::       _b - INTEGER - tryb pracy: 0 - nie zastępować istniejących wartości, 1 - zastępować istniejące
::       _c - obiekt Result, zawiera .RESULT, .ACTION, .OBJ (własna tablica parametrów)
::   WY: 0 - porażka
::       1 - sukces
::----------------------------------------------------------------------------------------------------------------------
_table:=_a;
_mode:=_b;
_validate:=_c;
_result:=0;

{? _validate.RESULT=1
|| {? _validate.ACTION='add'
   || _result:=AN_ZASW.add(1)
   |? _validate.ACTION='put'
   || _result:=AN_ZASW.put(1)
   ?}
?};
{? _result=0
|| {? _validate.ACTION='add'
   || _validate.MSG:='Dodanie wydruku analizy %1 nie powiodło się.'@[_table.OPIS]
   || _validate.MSG:='Poprawa wydruku analizy %1 nie powiodła się.'@[_table.OPIS]
   ?}
?};
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:17:11 18a0791bc537b1e50497a905afbfc7d31ff2256804adea95204a6c21675922d2cd9b7c1a384f55710ebb15713781d6a0ae038b69e35bcf6f360ecec4a0851b0599cffb5dd021bb9756fbcaf3231d763a97b0af821ebb60e1899c0578adc7c0f69b396ac187b815f69ad0f6c33cd70639236130cc0b2c457185d2b91c7a181627
