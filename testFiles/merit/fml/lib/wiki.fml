:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: wiki.fml
:: Utworzony: 30.07.2015
:: Autor: PJ
::======================================================================================================================
:: Zawartość: Formuły eksportujące dokumentację techniczną systemu na podstawie definicji, danych i plików fml
::======================================================================================================================


\main
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Główna formuła tworząca dokumentację techniczną na podstawie definicji systemu i plików !*.fml
::   WE: _a - rodzaj eksportu (obecnie obsługiwane tylko: 'WIKI') - dokuwiki, domyślnie 'WIKI'
::       [_b] = 1 - eksport wg pth, 0 - ekport do wskazanego katalogu lokalnego
::       [_c] = jeśli podano to ścieżka do lokalnego eksportu, jeśli nie podano formuła wyświetla dialog z możliwością
::              wskazania katalogu
:: ~OST: INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
{? exec('interm','#system')
|| FUN.emsg(exec('interm_nacc_msg','#system'));
   return(0)
?};
{? _=0 || _a:='WIKI' ?};
{? _<2 || _b:=1 ?};
{? _<3 || _c:='' ?};
{? _b=0 & _c=''
|| _c:=exec('filechooser','#file','Wybór katalogu'@,0,,,,'DIRECTORIES_ONLY')
?};
{? _b=0 & _c='' || return(0) ?};
exec('odbc_create','wiki');
exec('clear_data','wiki');
exec('get_data','wiki');
{? -_a='wiki' || exec('export_wiki','wiki',_b,_c) ?};
exec('odbc_delete','wiki');
exec('clear_data','wiki')


\get_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Tworzenie zmiennych globalnych i pobieranie informacji z definicji i plików
::       __WIKI_D - dziedziny
::       __WIKI_C - czynności
::       __WIKI_O - obszary robocze
::       __WIKI_Z - czynności w obszarach
::       __WIKI_P - parametry wejścia i wyjścia dla czynności
::       __WIKI_U - wymagane uprawnienia do danych dla czynności
::       __WIKI_F - baza plików źródeł czynności (!*.fml)
::       __WNDX_Z - dodatkowy indeks do bazy __WIKI_Z
::----------------------------------------------------------------------------------------------------------------------
:: Pobranie danych z defincji
__WIKI_D:=app_info('domain');
__WIKI_C:=app_info('task');
__WIKI_O:=app_info('area');
__WIKI_Z:=app_info('area_task');
__WNDX_Z:=__WIKI_Z.ndx_tmp(,1,'B_TASK',,,'B_CALL',,);

:: parametry, uprawnienia i właściwości z plików
__WIKI_P:=tab_tmp(2,'SYMBOL','STRING[12]','Symbol',
                    'RODZAJ','STRING[2]','Rodzaj',
                    'PAR','STRING[255]','Parametry');
__WIKI_U:=tab_tmp(1,'SYMBOL','STRING[12]','Symbol',
                    'UPR','STRING[255]','Uprawnienia');
__WIKI_W:=tab_tmp(1,'SYMBOL','STRING[12]','Symbol',
                    'PAR','STRING[255]','Właściwości');
__WIKI_F:=files('!*.fml');
{? __WIKI_F.first()
|| {! |?
      _start:=0;
      _p:=fopen(__WIKI_F.FILENAME,'ur',1);
      {? _p
      || {! |? (_wiersz:=fread(_p))<>'\n' |!
            _wiersz:=|_wiersz;
            {? 5+_wiersz='\\main' & +(|_wiersz)=5 || _start:=1
            |? 1+_wiersz='\\' &  (5+_wiersz<>'\\main' | (5+_wiersz='\\main' & +(|_wiersz)>5)) || _start:=0
            ?};
            {? _start=1
            || _ttag:=0;
               _tag:='permissions=';
               {? _ttag=0 & _wiersz*_tag
               || __WIKI_U.SYMBOL:=~-((1-__WIKI_F.FILENAME)-4);
                  __WIKI_U.UPR:=|(((_wiersz*_tag)+(+_tag)-1)-_wiersz);
                  __WIKI_U.add();
                  _ttag:=1
               ?};
               _tag:='properties=';
               {? _ttag=0 & _wiersz*_tag
               || __WIKI_W.SYMBOL:=~-((1-__WIKI_F.FILENAME)-4);
                  __WIKI_W.PAR:=|(((_wiersz*_tag)+(+_tag)-1)-_wiersz);
                  __WIKI_W.add();
                  _ttag:=1
               ?};
               _tag:='# kind=WEW';
               {? _ttag=0 & _wiersz*_tag
               || __WIKI_P.SYMBOL:=~-((1-__WIKI_F.FILENAME)-4);
                  __WIKI_P.RODZAJ:='WW';
                  _wiersz:=((_wiersz*_tag)+(+_tag))-_wiersz;
                  __WIKI_P.PAR:=_wiersz;
                  __WIKI_P.PAR:=exec('nowiki','wiki',__WIKI_P.PAR,'symbol=');
                  __WIKI_P.PAR:=exec('nowiki','wiki',__WIKI_P.PAR,'type=');
                  __WIKI_P.add();
                  _ttag:=1
               ?};
               _tag:='# kind=WE';
               {? _ttag=0 & _wiersz*_tag
               || __WIKI_P.SYMBOL:=~-((1-__WIKI_F.FILENAME)-4);
                  __WIKI_P.RODZAJ:='WE';
                  _wiersz:=((_wiersz*_tag)+(+_tag))-_wiersz;
                  __WIKI_P.PAR:=_wiersz;
                  __WIKI_P.PAR:=exec('nowiki','wiki',__WIKI_P.PAR,'symbol=');
                  __WIKI_P.PAR:=exec('nowiki','wiki',__WIKI_P.PAR,'type=');
                  __WIKI_P.add();
                  _ttag:=1
               ?};
               _tag:='# kind=WY';
               {? _ttag=0 & _wiersz*_tag
               || __WIKI_P.SYMBOL:=~-((1-__WIKI_F.FILENAME)-4);
                  __WIKI_P.RODZAJ:='WY';
                  _wiersz:=((_wiersz*_tag)+(+_tag))-_wiersz;
                  __WIKI_P.PAR:=_wiersz;
                  __WIKI_P.PAR:=exec('nowiki','wiki',__WIKI_P.PAR,'symbol=');
                  __WIKI_P.PAR:=exec('nowiki','wiki',__WIKI_P.PAR,'type=');
                  __WIKI_P.add();
                  _ttag:=1
               ?};
               _ttag:=0
            ?}
         !};
         fclose(_p)
      ?};
      __WIKI_F.next()
   !}
?}


\clear_data
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Usuwanie zmiennych globalnych po eksporcie
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__WIKI_D','__WIKI_C','__WIKI_O','__WIKI_Z','__WIKI_P','__WIKI_U','__WIKI_W','__WIKI_F','__WNDX_Z')


\export_wiki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Eksport dokumentacji do formatu dokuwiki
::   WE: _a = 1 - eksport wg pth, 0 - ekport do katalogu lokalnego
::       _b - jeśli _a=0 to ścieżka do katalogu lokalnego
::----------------------------------------------------------------------------------------------------------------------
:: przetwarzanie parametrów formuły
_path:=_a;
_folder:={? _>1 || _b || '' ?};
{? sys_name(0)='WINDOWS' || _sep:='\\'
|? sys_name(0)='U_LINUX' || _sep:='/'
?};
{? _path=1
|| _lok:=''
|? _path=0
|| {? exec('cli_functions','#system')>0
   || {? _folder+1<>_sep || _folder+=_sep ?};
      _lok:='@'
   || FUN.emsg(exec('indevice_nacc_msg','#system'));
      return()
   ?}
?};

_fmain:='techniczna.txt';
_faction:='czynnosci.txt';
_farea:='obszary.txt';
_flista:='lista.txt';
_fproces:='procesy.txt';
{? _path=0
|| _fmain:=_lok+_folder+_fmain;
   _faction:=_lok+_folder+_faction;
   _farea:=_lok+_folder+_farea;
   _flista:=_lok+_folder+_flista;
   _fproces:=_lok+_folder+_fproces
?};

_box:='<WRAP round box>';
_box_end:='</WRAP>';

_f:=fopen(_fmain,'uw',_path);
{? _f
|| fwrite(_f,'====== Dokumentacja techniczna ======');
   fwrite(_f,'');
   _txt:='Dokumentacja techniczna wygenerowana automatycznie na podstawie definicji systemu '
        +'i źródeł czynności w plikach *.fml.';
   fwrite(_f,_txt);
   fwrite(_f,'');
   fwrite(_f,'[[:techniczna:czynnosci|Dziedziny i czynności]]');
   fwrite(_f,'');
   fwrite(_f,'[[:techniczna:obszary|Czynności w obszarach]]');
   fwrite(_f,'');
   fwrite(_f,'[[:techniczna:lista|Lista czynności]]');
   fwrite(_f,'');
   fwrite(_f,'[[:techniczna:serwisy|Lista serwisów (MacroWebAPI)]]');
   fwrite(_f,'');
   fwrite(_f,'====== Instalacja i konfiguracja ======');
   fwrite(_f,'');
   fwrite(_f,'[[:instalacja:pakiety|Dostępne pakiety instalacyjne i ich zawartość]]');
   fwrite(_f,'');
   fwrite(_f,'[[:instalacja:scenariusze|Typowe scenariusze instalacji]]');
   fwrite(_f,'');
   fwrite(_f,'[[:instalacja:usuwanie|Usuwanie programów]]');
   fwrite(_f,'');
   fwrite(_f,'[[:instalacja:startowe|Opcje startowe pakietów instalacyjnych]]');
   fwrite(_f,'');
   fwrite(_f,'[[:instalacja:linux|Instalacja pakietów - Linux]]');
   fwrite(_f,'');
   fwrite(_f,'[[instalacja:formdefi|Formuła po wczytaniu definicji - wdrożeniowa modyfikacja okienek]]');
   fwrite(_f,'');
   fclose(_f)
?};
&_f;

_f:=fopen(_faction,'uw',_path);
{? _f
|| fwrite(_f,'====== Dziedziny ======');
   {? __WIKI_D.first()
   || {! |?
         __WIKI_C.prefix(__WIKI_D.SYMBOL);
         {? __WIKI_C.first()
         || "_line:=_box";
            "fwrite(_f,_line)";
            _line:='[[:techniczna:'+(-__WIKI_D.SYMBOL)+'|'+__WIKI_D.SYMBOL+' - '+__WIKI_D.NAME+']]';
            fwrite(_f,_line);
            _line:='|Kolor|'+{? +__WIKI_D.COLOR || '<nowiki>'+__WIKI_D.COLOR+'</nowiki>' || ' ' ?}+'|';
            fwrite(_f,_line);
            _line:='|Ikona|'+{? +__WIKI_D.ICON || '<nowiki>'+__WIKI_D.ICON+'</nowiki>' || ' ' ?}+'|';
            fwrite(_f,_line);
            _line:='|Formuła|'+{? +__WIKI_D.FM || '<nowiki>'+__WIKI_D.FM+'</nowiki>' || ' ' ?}+'|';
            fwrite(_f,_line);
            {? __WIKI_D.TCALL='M' || _dtcall:='jTerm'
            |? __WIKI_D.TCALL='W' || _dtcall:='webTerm'
            |? __WIKI_D.TCALL='B' || _dtcall:='jTerm+webTerm'
            ?};
            _line:='|Przeznaczenie|'+{? +_dtcall || _dtcall || ' ' ?}+'|';
            fwrite(_f,_line);
            _line:='|Podpowiedź|'+{? +__WIKI_D.AH || '<nowiki>'+__WIKI_D.AH+'</nowiki>' || ' ' ?}+'|';
            fwrite(_f,_line);
            "fwrite(_f,_box_end)";
            fwrite(_f,'')
         ?};
         __WIKI_D.next()
      !}
   ?};
   fclose(_f)
?};
&_f;

{? __WIKI_D.first()
|| {! |?
      __WIKI_C.prefix(__WIKI_D.SYMBOL);
      {? __WIKI_C.first()
      || _fdomain:=(-__WIKI_D.SYMBOL)+'.txt';
         {? _path=0 || _fdomain:=_lok+_folder+_fdomain ?};
         _f:=fopen(_fdomain,'uw',_path);

         {? _f
         || _line:='====== Czynności dziedziny '+__WIKI_D.SYMBOL+' - '+__WIKI_D.NAME+' ======';
            fwrite(_f,_line);
            fwrite(_f,'');

            {! |?
               _line:=_box;
               fwrite(_f,_line);
               _line:='===== '+__WIKI_C.SYMBOL+' =====';
               fwrite(_f,_line);
               fwrite(_f,'');

               _tab:='|Nazwa|'+__WIKI_C.NAME+'|';
               fwrite(_f,_tab);
               _tab:='|Automatyczna|'+{? __WIKI_C.AUTOMAT='T' || 'TAK' || 'NIE' ?}+'|';
               fwrite(_f,_tab);
               _tab:='|Procesowa|'+{? __WIKI_C.PROC='T' || 'TAK' || 'NIE' ?}+'|';
               fwrite(_f,_tab);
               {? __WIKI_C.B_CAN='M' || _b_can:='jTerm'
               |? __WIKI_C.B_CAN='W' || _b_can:='webTerm'
               |? __WIKI_C.B_CAN='O' || _b_can:='OLAP'
               |? __WIKI_C.B_CAN='Q' || _b_can:='QlikView'
               ?};
               _tab:='|Wywołanie|'+_b_can+'|';
               fwrite(_f,_tab);
               {? +__WIKI_C.FMMAIN || _wyw:=exec('odbc_get_formula','wiki',__WIKI_C.FMMAIN) || _wyw:='' ?};
               _tab:='|Formuła główna|'+{? +__WIKI_C.FMMAIN
                                        || __WIKI_C.FMMAIN
                                        || ' '
                                        ?}+'|';
               fwrite(_f,_tab);
               {? +_wyw
               || _tab:='| |'+' <nowiki>'+_wyw+'</nowiki>' + '|';
                  fwrite(_f,_tab)
               ?};
               {? +__WIKI_C.FMTODO || _wyw:=exec('odbc_get_formula','wiki',__WIKI_C.FMTODO) || _wyw:='' ?};
               _tab:='|Formuła TODO|'+{? +__WIKI_C.FMTODO
                                      || __WIKI_C.FMTODO
                                      || ' '
                                      ?}+'|';
               fwrite(_f,_tab);
               {? +_wyw
               || _tab:='| |'+' <nowiki>'+_wyw+'</nowiki>' + '|';
                  fwrite(_f,_tab)
               ?};
               _tab:='|Ikona czynności|'+{? +__WIKI_C.ICON || __WIKI_C.ICON || ' ' ?}+'|';
               fwrite(_f,_tab);
               _tab:='|Podpowiedź|'+{? +__WIKI_C.AH || __WIKI_C.AH || ' ' ?}+'|';
               fwrite(_f,_tab);
               _tab:='|Raportująca|'+{? __WIKI_C.REP=1 || 'TAK' || 'NIE' ?}+'|';
               fwrite(_f,_tab);
               fwrite(_f,'');

               _dziedzina:=(3+(-__WIKI_C.SYMBOL))+':'+(-__WIKI_C.SYMBOL);
               _link:='[[dziedziny:'+_dziedzina+'|'+__WIKI_C.NAME+']]';
               _line:='Opis dla użytkownika: '+_link;
               fwrite(_f,_line);
               fwrite(_f,'');

:: ---------------- parametry wejścia ----------------------------------------------

               _line:='== Parametry wejścia ==';
               fwrite(_f,_line);
               fwrite(_f,'');

               __WIKI_P.prefix(__WIKI_C.SYMBOL,'WE');
               {? __WIKI_P.first()
               || {! |?
                     __WIKI_P.PAR:=exec('par_sub','wiki',__WIKI_P.PAR);
                     _line:=exec('par_format','wiki',__WIKI_P.PAR);
                     {? _line<>'' || fwrite(_f,_line) ?};
                     fwrite(_f,'');
                     __WIKI_P.next()
                  !}
               || fwrite(_f,'  * Brak');
                  fwrite(_f,'')
               ?};

:: ---------------- parametry wyjścia ----------------------------------------------

               _line:='== Parametry wyjścia ==';
               fwrite(_f,_line);
               fwrite(_f,'');

               __WIKI_P.prefix(__WIKI_C.SYMBOL,'WY');
               {? __WIKI_P.first()
               || {! |?
                     __WIKI_P.PAR:=exec('par_sub','wiki',__WIKI_P.PAR);
                     _line:=exec('par_format','wiki',__WIKI_P.PAR);
                     {? _line<>'' || fwrite(_f,_line) ?};
                     fwrite(_f,'');
                     __WIKI_P.next()
                  !}
               || fwrite(_f,'  * Brak');
                  fwrite(_f,'')
               ?};

:: ---------------- parametry wewnętrzne ----------------------------------------------

               _line:='== Parametry wewnętrzne ==';
               fwrite(_f,_line);
               fwrite(_f,'');

               __WIKI_P.prefix(__WIKI_C.SYMBOL,'WW');
               {? __WIKI_P.first()
               || {! |?
                     __WIKI_P.PAR:=exec('par_sub','wiki',__WIKI_P.PAR);
                     _line:=exec('par_format','wiki',__WIKI_P.PAR);
                     {? _line<>'' || fwrite(_f,_line) ?};
                     fwrite(_f,'');
                     __WIKI_P.next()
                  !}
               || fwrite(_f,'  * Brak');
                  fwrite(_f,'')
               ?};

:: ---------------- uprawnienia do danych ----------------------------------------------

               _line:='== Uprawnienia ==';
               fwrite(_f,_line);
               fwrite(_f,'');

               __WIKI_U.prefix(__WIKI_C.SYMBOL);
               {? __WIKI_U.first()
               || {! |?
                     _t_upr:=spli_str(__WIKI_U.UPR,',');
                     _max:=obj_len(_t_upr);
                     {! _i:=1.._max |!
                        {? |_t_upr[_i]<>''
                        || _opis:=exec('get_perm_desc','wiki',|_t_upr[_i]);
                           _line:='  * '+(|_t_upr[_i])+' ('+_opis+')';
                           fwrite(_f,_line)
                        ?}
                     !};
                     &_t_upr;
                     __WIKI_U.next()
                  !};
                  fwrite(_f,'')
               || fwrite(_f,'  * Brak');
                  fwrite(_f,'')
               ?};

:: ---------------- właściwości ----------------------------------------------

               _line:='== Właściwości ==';
               fwrite(_f,_line);
               fwrite(_f,'');

               __WIKI_W.prefix(__WIKI_C.SYMBOL);
               {? __WIKI_W.first()
               || {! |?
                     _t_para:=spli_str(__WIKI_W.PAR,',');
                     _max:=obj_len(_t_para);
                     {! _i:=1.._max |!
                        {? |_t_para[_i]<>''
                        || _opis:=exec('get_para_desc','wiki',|_t_para[_i]);
                           _line:='  * '+(|_t_para[_i])+' ('+_opis+')';
                           fwrite(_f,_line)
                        ?}
                     !};
                     &_t_para;
                     __WIKI_W.next()
                  !};
                  fwrite(_f,'')
               || fwrite(_f,'  * Brak');
                  fwrite(_f,'')
               ?};

:: ------------ wykorzystanie w obszarach roboczych -------------------------------------

               _line:='== Wykorzystanie w obszarach roboczych ==';
               fwrite(_f,_line);
               fwrite(_f,'');

               _ndx:=__WIKI_Z.index('?');
               __WIKI_Z.index(__WNDX_Z);
               __WIKI_Z.prefix(__WIKI_C.SYMBOL);
               {? __WIKI_Z.first()
               || {! |?
                     _link:='[[:techniczna:obszary#'+(-__WIKI_Z.B_CALL)+'|'+__WIKI_Z.B_CALL+']]';
                     _line:='  * '+_link+' ('+exec('get_area_desc','wiki',__WIKI_Z.B_CALL)+')';
                     fwrite(_f,_line);
                     __WIKI_Z.next()
                  !};
                  fwrite(_f,'')
               || fwrite(_f,'  * Brak');
                  fwrite(_f,'')
               ?};
               __WIKI_Z.index(_ndx);
:: --------------------------------------------------------------------------------------

               fwrite(_f,_box_end);
               fwrite(_f,'');
               __WIKI_C.next()
            !};
            fclose(_f);
            &_f
         ?}
      ?};
      __WIKI_D.next()
   !}
?};


_f:=fopen(_farea,'uw',_path);
{? _f
|| fwrite(_f,'====== Obszary robocze i czynności ======');
   fwrite(_f,'');

   {? __WIKI_O.first()
   || {! |?
         __WIKI_Z.prefix(__WIKI_O.SYMBOL);
         {? __WIKI_Z.first()
         || _line:=_box;
            fwrite(_f,_line);
            _line:='===== '+__WIKI_O.SYMBOL+' =====';
            fwrite(_f,_line);

            _line:='|Nazwa obszaru|'+{? +__WIKI_O.NAME || __WIKI_O.NAME || ' ' ?}+'|';
            fwrite(_f,_line);
            _line:='|Formuła obszaru|'+{? +__WIKI_O.FM || __WIKI_O.FM || ' ' ?}+'|';
            fwrite(_f,_line);
            _line:='|Podpowiedź|'+{? +__WIKI_O.AH || __WIKI_O.AH || ' ' ?}+'|';
            fwrite(_f,_line);
            _line:='|Ikona|'+{? +__WIKI_O.ICON || '<nowiki>'+__WIKI_O.ICON+'</nowiki>' || ' ' ?}+'|';
            fwrite(_f,_line);
            {? __WIKI_O.TCALL='M' || _tcall:='jTerm'
            |? __WIKI_O.TCALL='W' || _tcall:='webTerm'
            ?};
            _line:='|Przeznaczenie|'+{? +_tcall || _tcall || '' ?}+'|';
            fwrite(_f,_line);
            fwrite(_f,'');

            _link_o:='[['+':dziedziny:'+(3+(-__WIKI_O.SYMBOL))+':'+(-__WIKI_O.SYMBOL)+'|'+__WIKI_O.NAME+']]';
            _line:='Opis obszaru dla użytkownika: '+_link_o;
            fwrite(_f,_line);
            fwrite(_f,'');

            fwrite(_f,'Czynności przypisane do obszaru:');
            fwrite(_f,'');
            {! |?
               __WIKI_C.prefix(3+__WIKI_Z.B_TASK,__WIKI_Z.B_TASK);
               {? __WIKI_C.first()
               || _dziedzina:=(3+(-__WIKI_C.SYMBOL))+':'+(-__WIKI_C.SYMBOL);
                  _opis:='[[dziedziny:'+_dziedzina+'|'+__WIKI_C.NAME+']]';
                  _tech:='[[techniczna:'+(3+(-__WIKI_C.SYMBOL))+'#'+(-__WIKI_C.SYMBOL)+'|'+__WIKI_Z.B_TASK+']]'
               || _opis:='';
                  _tech:=__WIKI_Z.B_TASK
               ?};

               _line:='  * '+_tech+', opis: '+_opis;
               fwrite(_f,_line);

               __WIKI_Z.next()
            !};
            fwrite(_f,_box_end);
            fwrite(_f,'')
         ?};
         __WIKI_O.next()
      !}
   ?};
   fclose(_f);
   &_f
?};

:: -----------------------------------------------------------------------------
:: lista czynności
_f:=fopen(_flista,'uw',_path);
{? _f
|| fwrite(_f,'====== Lista czynności ======');
   fwrite(_f,'');
   __WIKI_C.prefix();
   {? __WIKI_C.first()
   || {! |?
         _line:=__WIKI_C.SYMBOL;
         _dziedzina:=(3+(-__WIKI_C.SYMBOL))+':'+(-__WIKI_C.SYMBOL);
         _link:='[[dziedziny:'+_dziedzina+'|'+__WIKI_C.NAME+']]';
         _line+=' - Opis dla użytkownika: '+_link;
         fwrite(_f,_line);
         fwrite(_f,'');
         __WIKI_C.next()
      !}
   ?};
   fclose(_f);
   &_f
?};

:: -----------------------------------------------------------------------------
:: lista procesów
_f:=fopen(_fproces,'uw',_path);
{? _f
|| fwrite(_f,'====== Lista procesów ======');
   fwrite(_f,'');
   B_PROC.cntx_psh();
   B_PROC.index('FIRMA');
   B_PROC.prefix(REF.FIRMA,'T');
   {? B_PROC.first()
   || _grupa:='';
      {! |?
         {? 1+B_PROC.SYMBOL<>'!'
         || {? 3+B_PROC.SYMBOL<>_grupa
            || _grupa:=3+B_PROC.SYMBOL;
               _line:=exec('proc_grupa','wiki',_grupa);
               fwrite(_f,_line);
               fwrite(_f,'')
            ?};
            _link:='[[techniczna:procesy:'+(-B_PROC.SYMBOL)+'|'+B_PROC.SYMBOL+']]';
            _line:=_link+' - '+B_PROC.NAME;
            fwrite(_f,_line);
            fwrite(_f,'')
         ?};
         B_PROC.next()
      !}
   ?};
   B_PROC.cntx_pop();
   fclose(_f);
   &_f
?};

:: -----------------------------------------------------------------------------
:: szczegóły procesów
{? ~fexists(_lok+_folder+'procesy',0) || fmkdir(_lok+_folder,'procesy') ?};

B_PROC.cntx_psh();
B_PROC.index('FIRMA');
B_PROC.prefix(REF.FIRMA,'T');
{? B_PROC.first()
|| {! |?
      {? 1+B_PROC.SYMBOL<>'!'
      || _fname:=_lok+_folder+'procesy'+_sep+(-B_PROC.SYMBOL)+'.txt';
         _f:=fopen(_fname,'uw',_path);
         {? _f
         || fwrite(_f,'~~NOTOC~~');
            fwrite(_f,'====== '+B_PROC.SYMBOL+' - '+B_PROC.NAME+' ======');
            fwrite(_f,'');
            fwrite(_f,'Wersja: '+B_PROC.VER);
            fwrite(_f,'');

::          cel procesu
            _target:=B_PROC.memo_txt(,1,'TARGET');
            {? _target<>''
            || fwrite(_f,_box);
               _line:='===== CEL =====';
               fwrite(_f,_line);
               fwrite(_f,'');
               fwrite(_f,_target);
               fwrite(_f,_box_end);
               fwrite(_f,'')
            ?};

::          opis procesu
            _desc:=B_PROC.memo_txt(,1,'DESC');
            {? _desc<>''
            || fwrite(_f,_box);
               _line:='===== OPIS =====';
               fwrite(_f,_line);
               fwrite(_f,'');
               fwrite(_f,_desc);
               fwrite(_f,_box_end);
               fwrite(_f,'')
            ?};

::          diagram
            {? ~fexists(_lok+_folder+'image',0) || fmkdir(_lok+_folder,'image') ?};
            _sname:=_lok+_folder+'image'+_sep+(-B_PROC.SYMBOL)+'.svg';
            {? B_PROC.bl_info('SVG', 'SIZE')>0
            || B_PROC.bl_get('SVG',_sname,_path)
            ?};
            fwrite(_f,'{{techniczna:procesy:'+(-B_PROC.SYMBOL)+'.svg}}');
            fwrite(_f,'');

::          lista ról w procesie
            B_PREL.cntx_psh(); B_ROLE.cntx_psh(); B_ELE.cntx_psh();
            B_PREL.prefix(B_PROC.ref());
            _tab_role:=tab_tmp(2
                            ,'PARENT','TREE_REF'    ,'Parent'
                            ,'SYMBOL','STRING[45]' ,'Rola'
                           );
            {? B_PREL.first()
            || {!
               |? {? ~(_tab_role.find_key(0, B_PREL.B_ROLE().NAME))
                  || _tab_role.PARENT:=0;
                     _tab_role.SYMBOL:=B_PREL.B_ROLE().NAME;
                     _tab_role.add()
                  ?};
                  B_PREL.next()
               !}
            ?};

::          lista czynności w procesie
            _tab_act:=tab_tmp(2
                              ,'KOD'   ,'STRING[12]'  ,'Kod czynności'
                              ,'SYMBOL','STRING[45]' ,'Czynność'
                              );
            {? B_PREL.first()
            || {!
               |? {? B_PREL.CLASS='B_ACTION'
                  || {? ~_tab_act.find_key(B_PREL.B_ELE().SYMBOL, gsub(gsub(B_PREL.SYMBOL,'\n',' '),'  ',' '))
                     || _tab_act.SYMBOL:=gsub(gsub(B_PREL.SYMBOL,'\n',' '),'  ',' ');
                        _tab_act.KOD:=B_PREL.B_ELE().SYMBOL;
                        _tab_act.add()
                     ?};

                     {? _tab_role.find_key(0, B_PREL.B_ROLE().NAME)
                     || _tab_role.PARENT:=_tab_role.ref();
                        _tab_role.SYMBOL:=_tab_act.SYMBOL;
                        _tab_role.add()
                     ?}
                  ?};
                  B_PREL.next()
               !}
            ?};

            B_PREL.cntx_pop(); B_ROLE.cntx_pop(); B_ELE.cntx_pop();

            _line:='===== Czynności w procesie =====';
            fwrite(_f,_line);
            fwrite(_f,'');

            {? _tab_act.first()
            || {! |?
                  _line:='[[techniczna:'+(3+(-_tab_act.KOD))+'#'+(-_tab_act.KOD)+'|'+_tab_act.KOD+']]';
                  _dziedzina:=(3+(-_tab_act.KOD))+':'+(-_tab_act.KOD);
                  _link:='[[dziedziny:'+_dziedzina+'|'+_tab_act.SYMBOL+']]';
                  _line+=' - Opis dla użytkownika: '+_link;
                  fwrite(_f,_line);
                  fwrite(_f,'');
                  _tab_act.next()
               !}
            ?};

            _line:='===== Role w procesie =====';
            fwrite(_f,_line);
            fwrite(_f,'');
            fwrite(_f,'W podpunktach wymieniono elementy procesu związane z daną rolą.');
            fwrite(_f,'');

            {? _tab_role.first()
            || {! |?
                  {? _tab_role.PARENT=0
                  || _line:=_tab_role.SYMBOL;
                     fwrite(_f,_line);
                     fwrite(_f,'');
                     _tab_role.cntx_psh();
                     _tab_role.prefix(_tab_role.ref());
                     {? _tab_role.first()
                     || {! |?
                           _line:='  * '+_tab_role.SYMBOL;
                           fwrite(_f,_line);
                           _tab_role.next()
                        !};
                        fwrite(_f,'')
                     ?};
                     _tab_role.cntx_pop()
                  ?};
                  _tab_role.next()
               !}
            ?};

            fclose(_f);
            &_f;
            obj_del(_tab_role); obj_del(_tab_act)
         ?}
      ?};
      B_PROC.next()
   !}
?};
B_PROC.cntx_pop();
:: -----------------------------------------------------------------------------
:: webserwisy
exec('macrowebapi','wiki',_lok+_folder,_path);
:: rubryki
exec('eksport_rubryk','wiki',_lok+_folder,_path);
:: wtyczki
exec('eksport_wtyczek','wiki',_lok+_folder,_path);
1


\par_sub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formatowanie opisu parametrów
::   WE: _a - Tekst do sformatowania
::   WY: sformatowany tekst
::----------------------------------------------------------------------------------------------------------------------
_a:=gsub(_a,'symbol=','//Symbol//: ');
_a:=gsub(_a,'type=','//Typ//: ');
_a:=gsub(_a,'name=','//Nazwa//: ');
_a:=gsub(_a,'required=T','//Wymagany//: TAK');
_a:=gsub(_a,'required=N','//Wymagany//: NIE');
_a:=gsub(_a,'keyref=T','//Tworzenie rekordu kluczowego//: TAK');
_a:=gsub(_a,'keyref=N','//Tworzenie rekordu kluczowego//: NIE');
_a


\get_perm_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca opis uprawnienia do danych
::   WE: _a - nazwa uprawnienia
::   WY: opis uprawnienia
::----------------------------------------------------------------------------------------------------------------------
_opis:='';
B_PERM.cntx_psh();
B_PERM.index('NAME');
B_PERM.prefix(|_a);
{? B_PERM.first() || _opis:=B_PERM.DESC ?};
B_PERM.cntx_pop();
_opis


\get_para_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca opis właściwości czynności
::   WE: _a - nazwa właściwości
::   WY: opis właściwości
::----------------------------------------------------------------------------------------------------------------------
_opis:='';
{? |_a='LOOP' || _opis:='Czynność może być wykonywana wielokrotnie w pętli'
|? |_a='SERVICE' || _opis:='Czynność jest czynnością usługową'
|? |_a='GRP_FIRM' || _opis:='Czynność dostępna będzie w firmie zerowej, grupującej'
|? |_a='~USER' || _opis:='Czynność nie może być wywołana przez użytkownika'
|? |_a='TODOTRIG' || _opis:='Czynność obsługuje triggery tabeli BI_TODO'
|? |_a='SEND' || _opis:='Czynność wysłania komunikatu'
?};
_opis


\get_area_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca nazwę obszaru
::   WE: _a - symbol obszaru
::   WY: nazwa obszaru
::----------------------------------------------------------------------------------------------------------------------
_nazwa:='';
__WIKI_O.cntx_psh();
__WIKI_O.prefix(_a);
{? __WIKI_O.first() || _nazwa:=__WIKI_O.NAME ?};
__WIKI_O.cntx_pop();
_nazwa


\par_format
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła zwraca sformatowany opis parametrów
::   WE: _a - niesformatowany opis parametrów
::   WY: sformatowany opis parametrów
::----------------------------------------------------------------------------------------------------------------------
_fml_exp:='';
{? _a*'fml_exp='
|| _tmp:=|(((_a*'fml_exp=')+(+'fml_exp=')-1)-_a);
   _a:=|(((_a*'fml_exp=')-1)+_a);
   _start:=_tmp*'"';
   {? _start>1 || _tmp:=(_start-1)-_tmp ?};
   _stop:=((1-_tmp)*'"')+1;
   _fml_exp:=_stop+_tmp;
   _tmp:=_stop-_tmp;
   {? |_tmp<>'' || _a+','+_tmp ?}
?};

_fml_val:='';
{? _a*'fml_val='
|| _tmp:=|(((_a*'fml_val=')+(+'fml_val=')-1)-_a);
   _a:=|(((_a*'fml_val=')-1)+_a);
   _start:=_tmp*'"';
   {? _start>1 || _tmp:=(_start-1)-_tmp ?};
   _stop:=((1-_tmp)*'"')+1;
   _fml_val:=_stop+_tmp;
   _tmp:=_stop-_tmp;
   {? |_tmp<>'' || _a+','+_tmp ?}
?};

_t_par:=spli_str(_a,',');
_max:=obj_len(_t_par);
_line:='';
{! _i:=1.._max |!
   {? |_t_par[_i]<>''
   || {? _i=1
      || _line+='  * '+(|_t_par[_i])
      || _line+=(|_t_par[_i])
      ?};
      {? (_i<_max) | (_i=_max & _fml_val<>'') || _line+='\\\\ ' ?}
   ?}
!};
{? _fml_val<>'' || _line+='//Formuła ręcznego redagowania//: %%'+_fml_val+'%%' ?};
{? _fml_exp<>'' || _line+={? _fml_val<>'' || ' \\\\ ' || ' ' ?}+'//Formuła exportu wartości parametru//: %%'+_fml_exp+'%%' ?};
&_t_par;
_line


\odbc_create
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Tworzy obiekt odbc, nazwa połączenia ODBC musi być prawidłowa!
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('myODBC');
myODBC:=odbc_con('mb1922')


\odbc_delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Usuwa obiekt odbc
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('myODBC')


\odbc_get_formula
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: zwraca treść wywołania formuły MB
::   WE: akronim formuły MB
::   WY: wywołanie formuły
::----------------------------------------------------------------------------------------------------------------------
_wy:='';
_query:='select FM.REFERENCE as REF, FILE, PROC from FM where FM.NM='''+_a+'\'';
_rset:=myODBC.exec_cur(_query);
_buf:=myODBC.mk_buf();
{? myODBC.fetch(_buf)
|| _ref:=_buf.REF;
   _file:=_buf.FILE;
   _proc:=_buf.PROC;
   _wyw:='exec(\''+_proc+'\',\''+_file+'\''
?};
myODBC.clos_cur();
{? _ref<>''
|| _query_p:='select NR, PAR from FM_P where FM_P.FORM=\''+_ref+'\' order by NR';
   _rset_p:=myODBC.exec_cur(_query_p);
   _buf_p:=myODBC.mk_buf();
   {! |? myODBC.fetch(_buf_p) |!
      _nr:=_buf_p.NR;
      _par:=_buf_p.PAR;
      _wyw+=','+_par
   !};
   _wyw+=')';
   myODBC.clos_cur()
?};
_wyw


\proc_grupa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Zwraca nazwę grupy procesów
::   WE: _a - symbol grupy procesów
::----------------------------------------------------------------------------------------------------------------------
{? _=0 | type_of(_a)<>type_of('') | _a='' || return('') ?};

_linia:='';

{? _a='PER' || _linia:='===== Zasoby ludzkie ====='
|? _a='FIN' || _linia:='===== Finanse ====='
|? _a='RPO' || _linia:='===== Produkcja ====='
|? _a='RZC' || _linia:='===== Zasoby rzeczowe ====='
|? _a='SPR' || _linia:='===== Sprzedaż ====='
|? _a='ZKM' || _linia:='===== Zakupy i magazyn ====='
|? _a='ZWS' || _linia:='===== Wspólne ====='
?};
_linia


\nowiki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.42]
:: OPIS: Formuła wstawia tagi <nowiki> otaczające symbole parametrów
::   WE: _a - wiersz z parametrami, _b = czego szukać
::   WY: wiersz z wstawionymi tagami <nowiki>
::----------------------------------------------------------------------------------------------------------------------
{? _=0 | type_of(_a)<>type_of('') | _a='' || return('') ?};
_wy:=_a;
_poz:=_a*_b;
{? _poz
|| _poz+=(+_b);
   _przed:=(_poz-1)+_a;
   _loop:=1;
   _symbol:='';
   {! |?
      _znak:=exec('mid','#string',_a,_poz,1);
      {? _znak=','
      || _po:=_a+(+_a-_poz+1);
         _loop:=0
      |? _poz>+_a
      || _loop:=0
      || _poz+=1;
         _symbol+=_znak
      ?};
      _loop
   !};
   _symbol:='<nowiki>'+_symbol+'</nowiki>';
   _wy:=_przed+_symbol+_po
?};
_wy


\macrowebapi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [19.22]
:: OPIS: Informacje o webserwisach
::   WE: _a - ściezka do katalogu
::       _b - wg pth?
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__MWA_');
_fmwa:='serwisy.txt';
_NewLine:='\\\\';
_f:=fopen(_a+_fmwa,'uw',_b);
{? _f
|| fwrite(_f,'====== MacroWebAPI (usługi integracyjne) ======');
   fwrite(_f,'');
   fwrite(_f,'Lista dostępnych serwisów (API), z opisem metod i parametrów.');
   fwrite(_f,'');

   {? ~exec('manager_init', '__mwa') || return ?};

   {? __MWA__.Fml.Definition.read()
   || __MWA__.Services.Tab.index(__MWA__.Services.Ndx.NAME);
      __MWA__.Services.Tab.prefix();
      {? __MWA__.Services.Tab.first()
      || {! |?

            _txt:='===== '+__MWA__.Services.Tab.NAME+' =====';
            fwrite(_f,_txt);
            fwrite(_f,'');
            fwrite(_f,__MWA__.Services.Tab.DESCR+_NewLine);
            fwrite(_f,'');

            _tab:='^ Publiczna ^ REST ^ SOAP ^ WERSJA ^';
            fwrite(_f,_tab);
            _public:={? __MWA__.Services.Tab.PUBLIC || 'TAK' || 'NIE' ?};
            _rest:={? __MWA__.Services.Tab.REST || 'TAK' || 'NIE' ?};
            _soap:={? __MWA__.Services.Tab.SOAP || 'TAK' || 'NIE' ?};
            __MWA__.Versions.Tab.cntx_psh();
            __MWA__.Versions.Tab.index(__MWA__.Versions.Ndx.ID);
            __MWA__.Versions.Tab.prefix(__MWA__.Services.Tab.VERSION);
            {? __MWA__.Versions.Tab.first()
            || _wersja:=__MWA__.Versions.Tab.NAME
            ?};
            __MWA__.Versions.Tab.cntx_pop();
            _tab:='| '+_public+' | '+_rest+' | '+_soap+' | '+_wersja+' |';
            fwrite(_f,_tab);

            fwrite(_f,'');

            fwrite(_f,'**Metody serwisu:**');
            fwrite(_f,'');

            __MWA__.Methods.Tab.cntx_psh();
            __MWA__.Methods.Tab.index(__MWA__.Methods.Ndx.SERVICE);
            __MWA__.Methods.Tab.prefix(__MWA__.Services.Tab.ID);
            {? __MWA__.Methods.Tab.first()
            || {! |?

                  _pre:='<html><span style="color:navy; font-weight: bold; font-size:125%;">';
                  _pre2:='<html><span style="font-size:125%;">';
                  _post:='</span></html>';
                  _tab:='| '+_pre+__MWA__.Methods.Tab.NAME+_post+' | '+_pre2+__MWA__.Methods.Tab.DESCR+_post+' ||';
                  fwrite(_f,_tab);
                  __MWA__.Params.Tab.cntx_psh();
                  __MWA__.Params.Tab.index(__MWA__.Params.Ndx.METHOD_ORDER);
                  __MWA__.Params.Tab.prefix(__MWA__.Methods.Tab.ID, __MWA__.Const.PARAM.DIR.IN,);
                  {? __MWA__.Params.Tab.first()
                  || _tab:='| __Parametry wejściowe__: |||';
                     fwrite(_f,_tab);
                     _tab:='| **Nazwa** | **Typ** | **Opis** |';
                     fwrite(_f,_tab);
                     {! |?
                        _typ:='';
                        _simple:=1;
                        __MWA__.Types.Tab.cntx_psh();
                        __MWA__.Types.Tab.index(__MWA__.Types.Ndx.ID);
                        __MWA__.Types.Tab.prefix(__MWA__.Params.Tab.TYPE);
                        {? __MWA__.Types.Tab.first()
                        || _typ:=__MWA__.Types.Tab.NAME;
                           _simple:=__MWA__.Types.Tab.SIMPLE
                        ?};
                        __MWA__.Types.Tab.cntx_pop();
                        _tab:='| '+__MWA__.Params.Tab.NAME+' | '+_typ+' | '+__MWA__.Params.Tab.DESCR+' |';
                        fwrite(_f,_tab);
:: jeżeli parametr wejściowy złożony:
                        {? ~_simple
                        || _tab:='| |'+'__Struktura typu złożonego__: '+_typ+'||';
                           fwrite(_f,_tab);
                           _tab:='| | //Pole// | //Typ// | ';
                           fwrite(_f,_tab);
                           __MWA__.Props.Tab.cntx_psh();
                           __MWA__.Props.Tab.index(__MWA__.Props.Ndx.PARENT_ORDER);
                           __MWA__.Props.Tab.prefix(__MWA__.Types.Tab.ID);
                           {? __MWA__.Props.Tab.first()
                           || {! |?
                                 _field:=__MWA__.Props.Tab.FIELD;
                                 _name:=__MWA__.Props.Tab.NAME;
                                 _typ:='';
                                 __MWA__.Types.Tab.cntx_psh();
                                 __MWA__.Types.Tab.index(__MWA__.Types.Ndx.ID);
                                 __MWA__.Types.Tab.prefix(__MWA__.Props.Tab.TYPE);
                                 {? __MWA__.Types.Tab.first()
                                 || _typ:=__MWA__.Types.Tab.NAME
                                 ?};
                                 __MWA__.Types.Tab.cntx_pop();
                                 _tab:='| | '+_name+' | '+_typ+' |';
                                 fwrite(_f,_tab);
                                 __MWA__.Props.Tab.next()
                              !}
                           ?};
                           __MWA__.Props.Tab.cntx_pop()
                        ?};
                        __MWA__.Params.Tab.next()
                     !}
                  || _tab:='| __Parametry wejściowe__: brak |||';
                     fwrite(_f,_tab)
                  ?};

                  __MWA__.Params.Tab.index(__MWA__.Params.Ndx.METHOD_ORDER);
                  __MWA__.Params.Tab.prefix(__MWA__.Methods.Tab.ID, __MWA__.Const.PARAM.DIR.OUT,);
                  {? __MWA__.Params.Tab.first()
                  || _tab:='| __Dane wyjściowe__: |||';
                     fwrite(_f,_tab);
                     _tab:='| **Nazwa** | **Typ** | **Opis** |';
                     fwrite(_f,_tab);
                     {! |?
                        _typ:='';
                        _simple:=1;
                        __MWA__.Types.Tab.cntx_psh();
                        __MWA__.Types.Tab.index(__MWA__.Types.Ndx.ID);
                        __MWA__.Types.Tab.prefix(__MWA__.Params.Tab.TYPE);
                        {? __MWA__.Types.Tab.first()
                        || _typ:=__MWA__.Types.Tab.NAME;
                           _simple:=__MWA__.Types.Tab.SIMPLE
                        ?};
                        __MWA__.Types.Tab.cntx_pop();
                        _tab:='| '+__MWA__.Params.Tab.NAME+' | '+_typ+' | '+__MWA__.Params.Tab.DESCR+' |';
:: jeżeli typ wyjściowy złożony:
                        fwrite(_f,_tab);
                        {? ~_simple
                        || _tab:='| |'+'__Struktura typu złożonego__: '+_typ+'||';
                           fwrite(_f,_tab);
                           _tab:='| | //Pole// | //Typ// | ';
                           fwrite(_f,_tab);
                           __MWA__.Props.Tab.cntx_psh();
                           __MWA__.Props.Tab.index(__MWA__.Props.Ndx.PARENT_ORDER);
                           __MWA__.Props.Tab.prefix(__MWA__.Types.Tab.ID);
                           {? __MWA__.Props.Tab.first()
                           || {! |?
                                 _field:=__MWA__.Props.Tab.FIELD;
                                 _name:=__MWA__.Props.Tab.NAME;
                                 _typ:='';
                                 __MWA__.Types.Tab.cntx_psh();
                                 __MWA__.Types.Tab.index(__MWA__.Types.Ndx.ID);
                                 __MWA__.Types.Tab.prefix(__MWA__.Props.Tab.TYPE);
                                 {? __MWA__.Types.Tab.first()
                                 || _typ:=__MWA__.Types.Tab.NAME;
                                    _simple:=__MWA__.Types.Tab.SIMPLE
                                 ?};
                                 {? ~_simple
                                 || _tab:='| | '+_name+' | [[:techniczna:serwisytypy#'+(-_typ)+'|'+_typ+']] |'
                                 || _tab:='| | '+_name+' | '+_typ+' |'
                                 ?};
                                 fwrite(_f,_tab);

                                 _tab:='| |'+'__Struktura typu złożonego__: '+_typ+'||';
                                 __MWA__.Types.Tab.cntx_pop();
                                 __MWA__.Props.Tab.next()
                              !}
                           ?};
                           __MWA__.Props.Tab.cntx_pop()
                        ?};
                        __MWA__.Params.Tab.next()
                     !}
                  || _tab:='| __Dane wyjściowe:__ brak |||';
                     fwrite(_f,_tab)
                  ?};
                  __MWA__.Params.Tab.cntx_pop();
                  __MWA__.Methods.Tab.next()
               !}
            ?};
            __MWA__.Methods.Tab.cntx_pop();
            __MWA__.Services.Tab.next()
         !}
      ?}
   ?};

   fclose(_f);

   _ftypy:='serwisytypy.txt';
   _t:=fopen(_a+_ftypy,'uw',_b);
   {? _t
   || fwrite(_t,'====== MacroWebAPI (usługi integracyjne) - złożone typy danych ======');
      fwrite(_t,'');
      fwrite(_t,'Lista złożonych typów danych');
      fwrite(_t,'');

      __MWA__.Types.Tab.cntx_psh();
      __MWA__.Types.Tab.index(__MWA__.Types.Ndx.NAME);
      __MWA__.Types.Tab.prefix();
      {? __MWA__.Types.Tab.first()
      ||
         {! |?
            _typ:=__MWA__.Types.Tab.NAME;
            _simple:=__MWA__.Types.Tab.SIMPLE;

            {? ~_simple
            || _tab:='====== '+_typ+' ======';
               fwrite(_t,_tab);
               _tab:='__Struktura typu złożonego__:';
               fwrite(_t,_tab);
               _tab:='| //Pole// | //Typ// | //Rodzaj// |';
               fwrite(_t,_tab);

               __MWA__.Types.Tab.cntx_psh();
               __MWA__.Props.Tab.index(__MWA__.Props.Ndx.PARENT_ORDER);
               __MWA__.Props.Tab.prefix(__MWA__.Types.Tab.ID);
               {? __MWA__.Props.Tab.first()
               || {! |?
                     _field:=__MWA__.Props.Tab.FIELD;
                     _name:=__MWA__.Props.Tab.NAME;
                     _typ:='';
                     _simple:=1;
                     _rodzaj:='prosty';
                     __MWA__.Types.Tab.cntx_psh();
                     __MWA__.Types.Tab.index(__MWA__.Types.Ndx.ID);
                     __MWA__.Types.Tab.prefix(__MWA__.Props.Tab.TYPE);
                     {? __MWA__.Types.Tab.first()
                     || _typ:=__MWA__.Types.Tab.NAME;
                        _simple:=__MWA__.Types.Tab.SIMPLE
                     ?};
                     _rodzaj:={? _simple || 'prosty' || 'złożony' ?};
                     _tab:='| '+_name+' | '
                           +{? ~_simple || '[[:techniczna:serwisytypy#'+(-_typ)+'|'+_typ+']]' || _typ ?}
                           +' | '+_rodzaj+' |';
                     fwrite(_f,_tab);
                     __MWA__.Types.Tab.cntx_pop();
                     __MWA__.Props.Tab.next()
                  !}
               ?};
               fwrite(_t,'');
               __MWA__.Types.Tab.cntx_pop()
            ?};
            __MWA__.Types.Tab.next()
         !}
      ?};

      __MWA__.Types.Tab.cntx_pop();
      fclose(_t)
   ?};

   VAR_DEL.delete('__MWA_')
?}


\eksport_rubryk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [20.14]
:: OPIS: Eksport do wiki tabeli rubryk płacowych
::   WE: _a - ściezka do katalogu
::       _b - wg pth?
::----------------------------------------------------------------------------------------------------------------------
_frub:='tab_rubryki.txt';
_NewLine:='\\\\';
_f:=fopen(_a+_frub,'uw',_b);
{? _f
|| fwrite(_f,'====== Opis rubryk płacowych ======');
   fwrite(_f,'');
   fwrite(_f,'W kolumnie **Nr** podana jest kolejność wyliczania składników na listach płac oraz składników '
             'rachunku od umowy cywilnoprawnej.');
   fwrite(_f,'');
   R.index('RUBLP');
   R.prefix();
   {? R.first()
   || _tab:='^ Nr ^ Kod ^ Nazwa ^ Klasa ^ Komentarz ^';
      fwrite(_f,_tab);
      {! |?
            _numer:=$R.LP;
            _kod:=$R.RN;
            _nazwa:=R.RT;
            _klasa:=R.RK;
            _koment:=form(R.OPIS);
            _opis:=form(R.memo_txt(,1,'NOTA'));
            _tab:='| **'+_numer+'** | **'+_kod+'** | **'+_nazwa+'** | **'+_klasa+'** | **'+_koment+'** |';
            fwrite(_f,_tab);
            {? _opis<>''
            || _topis:=spli_str(_opis,'\n');
               _max:= obj_len(_topis);
               _opis:='';
               {! _i:=3.._max |!
                  _opis+=_topis[_i]+'\\\\ '
               !};
               _tab:='| ::: | ::: | '+_opis+' |||';
               fwrite(_f,_tab);
               obj_del(_topis);
               &_topis
            ?};
            R.next()
      !}
   ?};
   fwrite(_f,'');
   fclose(_f)
?}


\eksport_wtyczek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: mako [20.14]
:: OPIS: Eksport do wiki wtyczek wdrożeniowych
::   WE: _a - ściezka do katalogu
::       _b - wg pth?
::----------------------------------------------------------------------------------------------------------------------
_frub:='tab_wtyczki.txt';
_NewLine:='\\\\';
_f:=fopen(_a+_frub,'uw',_b);
{? _f
|| fwrite(_f,'======Wtyczki dostępne w standardowej wersji programu ======');
   fwrite(_f,'');
   fwrite(_f,'');
   PLUGINS.index('KOD');
   PLUGINS.prefix();
   {? PLUGINS.first()
   || _tab:='^ Kod ^ Nazwa ^ ';
      fwrite(_f,_tab);
      {! |?
            _numer:=PLUGINS.KOD;
            _nazwa:=PLUGINS.NAME;
            _tab:='| '+_numer+' | '+_nazwa+' |';
            fwrite(_f,_tab);
            PLUGINS.next()
      !}
   ?};
   fwrite(_f,'');
   fclose(_f)
?}


:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:25 5cfdccb201374ef7b025f89f9796ba9908cc9e9e1fd8aade538dfb64d8dacfe3dc13881b8fccfffe81763d6e93ddae3a66f8c33be8e1c9c935a482eec466229dab7ae87abf02c83b9521c542783cacd310d8662c56044061d41ea4b96fa6010c24e97c3826606990677b04020e49832fe324761731556fab40fb3450b7d90c1b
