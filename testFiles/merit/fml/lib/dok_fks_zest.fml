:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: dok_fks_zest.fml
:: Utworzony: 17.04.2015 [17.00]
:: Autor: MB
::======================================================================================================================
:: Zawartość: Formuły do obsługi dokumentów księgowych - zestawienia
::======================================================================================================================


\wyp_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41] 18.04.2001
:: OPIS: Wypelnia dla danego wydruku pola tabeli KOL_WYDR
::       danymi standardowymi.
::   WE: _a - nazwa pliku wydruku
::  OLD: \wyp_kol/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a='DZWDOKZE'
|| KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=1;
   KOL_WYDR.KOL:='Rejestr'; KOL_WYDR.SZER:=11; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=2;
   KOL_WYDR.KOL:='Nr w rejestrze'; KOL_WYDR.SZER:=10; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:=''; KOL_WYDR.LP:=3;
   KOL_WYDR.KOL:='Typ dokumentu'; KOL_WYDR.SZER:=33; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=4;
   KOL_WYDR.KOL:='Symbol dokumentu'; KOL_WYDR.SZER:=23; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:=''; KOL_WYDR.LP:=5;
   KOL_WYDR.KOL:='Data wystawienia'; KOL_WYDR.SZER:=13; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=6;
   KOL_WYDR.KOL:='Data operacji'; KOL_WYDR.SZER:=13; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=7;
   KOL_WYDR.KOL:='Data zapisu'; KOL_WYDR.SZER:=13; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=8;
   KOL_WYDR.KOL:='Data otrzymania'; KOL_WYDR.SZER:=13; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=9;
   KOL_WYDR.KOL:='Data akceptacji'; KOL_WYDR.SZER:=13; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=10;
   KOL_WYDR.KOL:='Termin płatności'; KOL_WYDR.SZER:=13; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=11;
   KOL_WYDR.KOL:='Data odprawy celnej'; KOL_WYDR.SZER:=13; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=12;
   KOL_WYDR.KOL:='Wystawca (słownik)'; KOL_WYDR.SZER:=23; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=13;
   KOL_WYDR.KOL:='Wystawca (kod)'; KOL_WYDR.SZER:=11; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=14;
   KOL_WYDR.KOL:='Wystawca (nazwa)'; KOL_WYDR.SZER:=33; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X';  KOL_WYDR.LP:=15;
   KOL_WYDR.KOL:='Rejestr VAT'; KOL_WYDR.SZER:=11; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=16;
   KOL_WYDR.KOL:='Kontrahent'; KOL_WYDR.SZER:=33; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=17;
   KOL_WYDR.KOL:='NIP wystawcy'; KOL_WYDR.SZER:=22

   ; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=18;
   KOL_WYDR.KOL:='Okres VAT'; KOL_WYDR.SZER:=23; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=19;
   KOL_WYDR.KOL:='Opis dokumentu'; KOL_WYDR.SZER:=33; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=20;
   KOL_WYDR.KOL:='Dodatkowy słownik'; KOL_WYDR.SZER:=23; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=21;
   KOL_WYDR.KOL:='Kod'; KOL_WYDR.SZER:=11; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=22;
   KOL_WYDR.KOL:='Dokument źródłowy'; KOL_WYDR.SZER:=18; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:=''; KOL_WYDR.LP:=23;
   KOL_WYDR.KOL:='Jednostka księgowa'; KOL_WYDR.SZER:=11; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:=''; KOL_WYDR.LP:=24;
   KOL_WYDR.KOL:='Zarejestrował'; KOL_WYDR.SZER:=23; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=25;
   KOL_WYDR.KOL:='Lp'; KOL_WYDR.SZER:=10; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=26;
   KOL_WYDR.KOL:='Konto'; KOL_WYDR.SZER:=23; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=27;
   KOL_WYDR.KOL:='Kwota Wn'; KOL_WYDR.SZER:=21; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=28;
   KOL_WYDR.KOL:='Kwota Ma'; KOL_WYDR.SZER:=21; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=29;
   KOL_WYDR.KOL:='Waluta'; KOL_WYDR.SZER:=7; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=30;
   KOL_WYDR.KOL:='Kurs waluty'; KOL_WYDR.SZER:=10; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=31;
   KOL_WYDR.KOL:='Kwota w walucie'; KOL_WYDR.SZER:=21; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:=''; KOL_WYDR.LP:=32;
   KOL_WYDR.KOL:='Treść zapisu'; KOL_WYDR.SZER:=33; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:=''; KOL_WYDR.LP:=33;
   KOL_WYDR.KOL:='Identyfikator rozrachunku'; KOL_WYDR.SZER:=23; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=34;
   KOL_WYDR.KOL:='Typ rozrachunku'; KOL_WYDR.SZER:=6; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=35;
   KOL_WYDR.KOL:='Data otwarcia'; KOL_WYDR.SZER:=13; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:=''; KOL_WYDR.LP:=36;
   KOL_WYDR.KOL:='Termin płatności rozrachunku'; KOL_WYDR.SZER:=13; KOL_WYDR.add()
|? _a='K_KAZAPK'
|| KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='D'; KOL_WYDR.LP:=1;
   KOL_WYDR.KOL:='Konto'; KOL_WYDR.SZER:=35; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=2;
   KOL_WYDR.KOL:='Jednostka księgowa'; KOL_WYDR.SZER:=9; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=3;
   KOL_WYDR.KOL:='Zarejestrował'; KOL_WYDR.SZER:=21; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=4;
   KOL_WYDR.KOL:='Data operacji'; KOL_WYDR.SZER:=11; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='W'; KOL_WYDR.LP:=5;
   KOL_WYDR.KOL:='Data zapisu'; KOL_WYDR.SZER:=11; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=6;
   KOL_WYDR.KOL:='Nr w dzienniku'; KOL_WYDR.SZER:=9; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=7;
   KOL_WYDR.KOL:='Rejestr/nr'; KOL_WYDR.SZER:=16; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:={? type_of(czy_w) & czy_w || '' || 'X' ?};  KOL_WYDR.LP:=8;
   KOL_WYDR.KOL:='Symbol dokumentu'; KOL_WYDR.SZER:=21; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=9;
   KOL_WYDR.KOL:='Opis dokumentu'; KOL_WYDR.SZER:=31; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=10;
   KOL_WYDR.KOL:='Rodzaj dokumentu'; KOL_WYDR.SZER:=31; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=11;
   KOL_WYDR.KOL:='Data wystawienia'; KOL_WYDR.SZER:=11; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=12;
   KOL_WYDR.KOL:='Data otrzymania'; KOL_WYDR.SZER:=11; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=13;
   KOL_WYDR.KOL:='Data akceptacji'; KOL_WYDR.SZER:=11; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=14;
   KOL_WYDR.KOL:='Korekta dokumentu'; KOL_WYDR.SZER:=21; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=15;
   KOL_WYDR.KOL:='Rejestr VAT'; KOL_WYDR.SZER:=9; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=16;
   KOL_WYDR.KOL:='Okres VAT'; KOL_WYDR.SZER:=21; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=17;
   KOL_WYDR.KOL:='Źródło pochodzenia'; KOL_WYDR.SZER:=21; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=18;
   KOL_WYDR.KOL:='Kod'; KOL_WYDR.SZER:=9; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=19;
   KOL_WYDR.KOL:='Dodatkowy słownik'; KOL_WYDR.SZER:=21; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=20;
   KOL_WYDR.KOL:='Kod'; KOL_WYDR.SZER:=9; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='';  KOL_WYDR.LP:=21;
   KOL_WYDR.KOL:='Dokument źródłowy'; KOL_WYDR.SZER:=16; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=22;
   KOL_WYDR.KOL:='Nr pozycji'; KOL_WYDR.SZER:=6; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='W'; KOL_WYDR.LP:=23;
   KOL_WYDR.KOL:='Treść zapisu'; KOL_WYDR.SZER:=28; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='W'; KOL_WYDR.LP:=24;
   KOL_WYDR.KOL:='WN ('+(3+FINFO.NAROD().KOD)+')'; KOL_WYDR.SZER:=17; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='W'; KOL_WYDR.LP:=25;
   KOL_WYDR.KOL:='MA ('+(3+FINFO.NAROD().KOD)+')'; KOL_WYDR.SZER:=17; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:={? type_of(czy_w) & czy_w || 'X' || '' ?}; KOL_WYDR.LP:=26;
   KOL_WYDR.KOL:='Waluta'; KOL_WYDR.SZER:=4; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:={? type_of(czy_w) & czy_w || 'X' || '' ?}; KOL_WYDR.LP:=27;
   KOL_WYDR.KOL:='Kurs'; KOL_WYDR.SZER:=9; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:={? type_of(czy_w) & czy_w || 'X' || '' ?}; KOL_WYDR.LP:=28;
   KOL_WYDR.KOL:='Wn (waluta)'; KOL_WYDR.SZER:=16; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:={? type_of(czy_w) & czy_w || 'X' || '' ?}; KOL_WYDR.LP:=29;
   KOL_WYDR.KOL:='Ma (waluta)'; KOL_WYDR.SZER:=16; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=30;
   KOL_WYDR.KOL:='(Typ) Symbol rozrachunku'; KOL_WYDR.SZER:=27;KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=31;
   KOL_WYDR.KOL:='Data otwarcia'; KOL_WYDR.SZER:=11; KOL_WYDR.add();
   KOL_WYDR.USER:=OPERATOR.USER; KOL_WYDR.WYDRUK:=_a; KOL_WYDR.WSK_DRUK:='X'; KOL_WYDR.LP:=32;
   KOL_WYDR.KOL:='Termin płatności'; KOL_WYDR.SZER:=11; KOL_WYDR.add()
?};
1


\licz_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41] 05.06.2001
:: OPIS: Oblicza rozmiar kolumn wydruku, ktore maja byc drukowane.
::   WE: nazwa pliku wydruku
::   WY: liczba znakow
::  OLD: \licz_kol/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
_i:=0;
KOL_WYDR.cntx_psh();
KOL_WYDR.clear(); KOL_WYDR.index('DRUK'); KOL_WYDR.prefix(OPERATOR.USER,_a);
{? KOL_WYDR.first()
|| {!
   |? {? KOL_WYDR.WSK_DRUK='X' | KOL_WYDR.WSK_DRUK='W' || _i+=KOL_WYDR.SZER ?};
      KOL_WYDR.next()
   !}
?};
KOL_WYDR.cntx_pop();
_i


\rb_kwydr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41] 06.06.2001
:: OPIS: Sprawdza, czy wybrano kolumne do drukowania.
::   WY: 0 - nie wybrano, 1 - wybrano
::  OLD: \rb_kwydr/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
_v2:=0;
KOL_WYDR.cntx_psh();
{? KOL_WYDR.first()
|| {!
   |? {? KOL_WYDR.WSK_DRUK='X' | KOL_WYDR.WSK_DRUK='W' || _v2+=KOL_WYDR.SZER ?};
      KOL_WYDR.next()
   !}
?};
KOL_WYDR.cntx_pop();
PAR_WYDR.LASTKOL:=_v2;
exec('rekprzed','color','KOL_WYDR#01#')


\bm_kwydr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41] 05.06.2001
:: OPIS: Przed akcja Zmien okienka WER tabeli KOL_WYDR.
::  OLD: \bm_kwydr/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
{? KOL_WYDR.WSK_DRUK='X'
|| KOL_WYDR.WSK_DRUK:=''
|? KOL_WYDR.WSK_DRUK='W' | KOL_WYDR.WSK_DRUK='D'
|| FUN.info('Kolumna wymagana na wydruku.'@)
|| KOL_WYDR.WSK_DRUK:='X'
?};
KOL_WYDR.put();
0


\pd_kwydr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41] 26.07.2001
:: OPIS: Przywraca domyślne ustawienia kolumn dla wydruku
::  OLD: \pd_kwydr/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
KOL_WYDR.index('USER'); KOL_WYDR.prefix(OPERATOR.USER,PAR_WYDR.WYDRUK);
{? KOL_WYDR.first() || {! |? KOL_WYDR.del !} ?};
exec('wyp_kol','dok_fks_zest',PAR_WYDR.WYDRUK);
KOL_WYDR.first();
1


\fb_kwsz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.60]
:: OPIS: Obsluguje zmiane szerokosci kolumny na wydruku DZWDOKZE
::  OLD: \fb_kwsz/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
undefine();
define('SZER',KOL_WYDR.SZER,'Szerokość kolumny'@);
{? def_edit("
      {? DEFINE.SZER<=3
      || FUN.info('Należy wprowadzić wartość większą od 3!'@); 0
      || {? frac(DEFINE.SZER)<>0
         || FUN.info('Należy wprowadzić wartość całkowitą'@); 0
         || 1
         ?}
      ?}
   ",'Kolumny zestawienia'@)
|| KOL_WYDR.SZER:=DEFINE.SZER; KOL_WYDR.put()
?}


\f3_zar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41] 14.08.2001
:: OPIS: Obsluga na F3 pola POCH zmiennej PAR_WYDR
::  OLD: \f3_zar/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
USERS.win_sel('SLO');
USERS.hdr_sel(''); USERS.index('USR_KKOD'); USERS.prefix();
{? USERS.select() || USERS.KOD || '' ?}


\f3_zakrd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41] 06.06.2001
:: OPIS: Obsluga na F3 pola ZAKR zmiennej PAR_WYDR
::   WY: Znak identyfikujacy zakres
::  OLD: \f3_zakrd/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
vf:='';
popup(0,'Zakres dokumentów','(N) Niezakończona rejestracja',,"vf:='N'",
      '(A) Zakończona rejestracja',,"vf:='A'",
      '(P) Zaksięgowane próbnie',,"vf:='P'",
      '(K) Zaksięgowane końcowo',,"vf:='K'");
_a:=vf; &vf; _a


\f3_pochd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41] 11.06.2001
:: OPIS: Obsluga na F3 pola POCH zmiennej PAR_WYDR
::   WY: Znak identyfikujacy pochodzenie dokumentow
::  OLD: \f3_pochd/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
vf:='';
popup(0,'Pochodzenie dokumentów',
      '(FKS) Finanse i księgowość',,"vf:='FKS'",
      '(LSP) Sprzedaż',,"vf:='LSP'",
      '(LZK) Zakupy',,"vf:='LZK'",
      '(PKD) Kadry i płace',,"vf:='PKD'",
      '(FST) Środki trwałe',,"vf:='FST'",
      '(TTE) Produkcja',,"vf:='TTE'",
      '(KAS) Kasa',,"vf:='KAS'");
_a:=vf; &vf; _a


\be_pwodd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41] 07.08.2001
:: OPIS: Blokuje pole jednostka ksiegowa do redakcji w przypadku pracy w
::       trybie wybranej jednostki ksiegowej.
::  OLD: \be_pwodd/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
{? OPERATOR.DEPT<>null
|| _wy:=0
|? cur_tab()=PAR_WYDR
|| {? ~(var_pres('SRD')>0 & SRD.PAR_WYDR='T')
   || {? PAR_WYDR.REJ=null || _wy:=1 || PAR_WYDR.ODD:=PAR_WYDR.REJ().ODD; _wy:=0 ?}
   || {? PAR_WYDR.JORG<>null || _wy:=0 || _wy:=1 ?}
   ?};
   {? cur_win()='ETYKIETY' || __CURODD:=PAR_WYDR.ODD ?}
|| {? UD_POM.JORG<>'' || _wy:=0 || _wy:=1 ?}
?};
_wy


\ae_pwodd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [17.00]
:: OPIS: Formuła po redakcji pola PAR_WYDR.ODD
::----------------------------------------------------------------------------------------------------------------------
{? cur_win()='ETYKIETY'
|| {? var_pres('__CURODD')>0 & __CURODD<>PAR_WYDR.ODD & (PAR_WYDR.OD_NRI<>'' | PAR_WYDR.DO_NRI<>'')
   || PAR_WYDR.OD_NRI:=PAR_WYDR.DO_NRI:=''
   ?}
?};
1


\be_dp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [2010]
:: OPIS: Przed redakcja pola PAR_WYDR.DPAR1
::  OLD: \be_dp/przelew.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.OMASKA<>4


\wyp_wvr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BZ [12.41]
:: OPIS: Formula wypelnia pole TAB_SQL.WVR uzywane w wydrukach. Pole jest znacznikiem czy dla danego dokumentu DOK
::       przypisano wiele rejestrow VAT
::  OLD: \wyp_wvr/vat.fml
::----------------------------------------------------------------------------------------------------------------------
{? type_of(TAB_SQL)>100 & TAB_SQL.first()
|| TAB_SQL.cntx_psh();
   _ndx_dok:=TAB_SQL.ndx_tmp(,,'F0',,0);
   TAB_SQL.index(_ndx_dok);
   {? TAB_SQL.first()
   || DOK.cntx_psh(); VPOZ.cntx_psh();
      _ref:=''; _jeden:=1;
      {!|?
         {? _ref<>TAB_SQL.F0
         || DOK.use(8+TAB_SQL.F0); VPOZ.use('pozv'+((8+TAB_SQL.F0)+4));
            DOK.prefix();
            {? DOK.seek(BB.sqlint(TAB_SQL.F0),8+TAB_SQL.F0)
            || _ref:=TAB_SQL.F0;
               _jeden:=exec('spr_one_rvat','dok_fks');
               {? ~_jeden || TAB_SQL.WVR:='T'; TAB_SQL.put ?}
            ?}
         |? _ref=TAB_SQL.F0
         || {? ~_jeden || TAB_SQL.WVR:='T'; TAB_SQL.put() ?}
         ?};
         TAB_SQL.next()
      !};
      DOK.cntx_pop(); VPOZ.cntx_pop()
   ?};
   TAB_SQL.cntx_pop()
?}


\nsystem
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Zwraca nazwe obszaru
::   WE: _a - napis z symbolem obszaru
::----------------------------------------------------------------------------------------------------------------------
B_DOMAIN.index('SYMBOL');
{? B_DOMAIN.first()
|| {!
   |? {? _a*B_DOMAIN.SYMBOL
      || return(B_DOMAIN.NAME)
      ?};
      B_DOMAIN.next()
   !}
?};
''


\be_index
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41] 06.06.2001
:: OPIS: Udostepnia lub blokuje do redakcji pola IPAR1, IPAR2, IPAR3, IPAR4
::  OLD: \be_index/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.PAR1=3 || 1 || 0 ?}


\f3_kwydr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41] 06.06.2001
:: OPIS: Wyswietla okno z lista dostepnych pol do budowy indeksu.
::  OLD: \f3_kwydr/par_wydr.fml
::-----------------------------------------------------------------------------------------------------------------------
vf:='';
popup(0,'Lista pól','Rejestr',,"vf:='Rejestr'",
      'Nr w rejestrze',,"vf:='Nr'",
      'Data operacji',,"vf:='Data oper.'",
      'Data zapisu',,"vf:='Data zap.'",
      'Kontrahent',,"vf:='Kontrahent'",
      'Rejestr VAT',,"vf:='Rej. VAT'",
      'Zarejestrował',,"vf:='Zarejestr.'");
_a:=vf; &vf; _a


\ae_indkw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41] 06.06.2001
:: OPIS: Sprawdza poprawnosc wypelnienia pol indeksu.
::   WE: Akronim sprawdzanego pola
::   WY: 1 - poprawnie 0 - blednie
::  OLD: \ae_indkw/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.PAR14:=1;
_v:='PAR_WYDR.'+_a;
_f:='{? '+_v+'<>\'\' || ';
_f+='{? '+_v+'<>\'Rejestr\' & '+_v+'<>\'Nr\' & '+_v+'<>\'Data oper.\' & '+_v+'<>\'Data zap.\' & '
   +_v+'<>\'Kontrahent\' & '+_v+'<>\'Rej. VAT\' & '+_v+'<>\'Zarejestr.\' || ';
_f+='PAR_WYDR.PAR14:=0 ?} ?}';
($(_f))();
{? PAR_WYDR.PAR14=0
   || FUN.indo('Nieprawidłowa nazwa.\n Proszę wybrać nazwę pola z listy.');
      0
   || 1
?}


\rodz_kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Wybor koloru dla rekordu tabeli KOL_WYDR
::  OLD: \rodz_kol/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
{? KOL_WYDR.WSK_DRUK='X' || 'KOL_WYDR#01#01'
|? KOL_WYDR.WSK_DRUK='W' | KOL_WYDR.WSK_DRUK='D' || 'KOL_WYDR#01#02'
|| ''
?}


\wyd_selk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.60]
:: OPIS: Obsluguje selekcje kolumn dla potrzeb wydruku wskazanego w parametrze
::   WE: _a - nazwa wydruku
::  OLD: \wyd_selk/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
PAR_WYDR.WYDRUK:=_a;
KOL_WYDR.clear(); KOL_WYDR.index('USER'); KOL_WYDR.prefix(OPERATOR.USER,_a);
{? ~KOL_WYDR.first() || exec('wyp_kol','dok_fks_zest',_a) ?};
_i:=exec('licz_kol','dok_fks_zest',_a);
{? PAR_WYDR.PAR2=1 | _i>PAR_WYDR.MAXKOL | _i=0
|| {? PAR_WYDR.PAR2=1
   || v:=1; _w:=1
   || {? _i>PAR_WYDR.MAXKOL ||
         v:=FUN.choice('Wybrany zestaw kolumn nie zmieści się na stronie.'
                                '\nLiczba znaków możliwych do wydrukowania: %1'
                                '; wybrano %2.'@[$PAR_WYDR.MAXKOL,$_i],,'Redagowanie kolumn'@);
         _w:=1
      ?};
      {? _i=0
      ||  v:=FUN.choice('Należy wybrać przynajmniej jedną kolumnę.'@,1,'Redagowanie kolumn'@);
          _w:=1
      ?}
   ?};
   {? v
   || {! |?
         KOL_WYDR.select();
         _i:=exec('licz_kol','dok_fks_zest',_a);
         {? _i>PAR_WYDR.MAXKOL
         || v:=FUN.choice('Wybrany zestaw kolumn nie zmieści się na stronie.'
                          '\nLiczba znaków możliwych do wydrukowania: %1'
                          '; wybrano %2.'@[$PAR_WYDR.MAXKOL,$_i],,'Redagowanie kolumn'@);
            _w:=1
         |? _i=0
         || v:=FUN.choice('Należy wybrać przynajmniej jedną kolumnę.'@,1,'Rezygnacja'@,'Redagowanie kolumn'@);
            _w:=1
         || _w:=0; v:=1
         ?};
         _w & v
      !}
   ?}
?}


\initmpks
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: Stworzenie okienka tymczasowego dla tabeli KS i tymczasowych danych
::       w tabeli TMPSIK, musi byc ustawiona zmienna tuser (znacznik czasowy)
::  OLD: \initmpks/konta.fml
::----------------------------------------------------------------------------------------------------------------------
TMPSIK.index('TEXT1'); TMPSIK.prefix('K',tuser);
{? TMPSIK.first()|| {!|?TMPSIK.del()!} ?};
KS.index('SYM'); KS.prefix(SSTALE.AR);
_wer:=KS.mk_sel('Wybierz konta'@,'P',,'ks_wer',,,,,'U');
KS.win_fld(_wer,,'SYM',,,6);
KS.win_fld(_wer,,'NAZ',,,60);
KS.win_act(_wer,0,'Rekord',,,,"
   _gray:='';
   _mark:='';
   _sel:=_jest:=TMPSIK.find_key(KS.SYM);
   {? ~_sel || _sel:=TMPSIK.first()  ?};
   _win:=KS.win_sel('?');
   {? KS.sel_size()
   || _mark:=':'
   |? _jest
   || _gray:='Z';
      _mark:='O'
   || _gray:='O';
      _mark:='Z'
   ?};
   {? ~_sel || _gray+='T' ?};
   KS.actions_grayed(_win,_gray);
   KS.actions(_win,,_mark,1);
   {? _jest
   || exec('findtmp','#color')
   || ''
   ?}
");
KS.win_act(_wer,0,'Formuła','&Zaznacz'@@,,,,"
   {? ~TMPSIK.find_key(KS.SYM)
   || TMPSIK.ID:='K'; TMPSIK.T1:=tuser; TMPSIK.T2:=KS.SYM;
      TMPSIK.T3:=KS.TYP+KS.SALDO; TMPSIK.add()
   ?}
",,1,,,'Z');
KS.win_btn(_wer,'text='+'&Zaznacz'@+',btn_label_align=center,panel=right,align=begin','menu:Z');
KS.win_act(_wer,0,'Formuła','&Odznacz'@@,,,,"
   {? TMPSIK.find_key(KS.SYM)
   || TMPSIK.del()
   ?}
",,1,,,'O');
KS.win_btn(_wer,'text='+'&Odznacz'@+',btn_label_align=center,panel=right,align=begin','menu:O');
KS.win_act(_wer,0,'Formuła','Odznacz wszys&tkie'@@,,,,"{? TMPSIK.first() || {!|? TMPSIK.del()!} ?}",,,,,'T');
KS.win_act(_wer,0,'Szukaj');
KS.win_sel(_wer)


\initmpan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [$8.60E]
:: OPIS: Stworzenie okienka tymczasowego dla tabeli AN i tymczasowych danych
::       w tabeli TMPSIK, musi byc ustawiona zmienna tuser (znacznik czasowy)
::  OLD: \initmpan/konta.fml
::----------------------------------------------------------------------------------------------------------------------
TMPSIK.index('TEXT1'); TMPSIK.prefix('K',tuser);
{? TMPSIK.first()|| {!|?TMPSIK.del()!} ?};
KS.index('SYM');
KS.prefix(BILANSP.AROK);
pa:=SSTALE.WAL;
AN.index('WALSYM');
AN.prefix(pa);
_wer:=AN.mk_sel('Wybierz konta'@,,,'an_wer');
AN.win_fld(_wer,,'SYM',,,20);
AN.win_fld(_wer,KOMPEN,'OPIS',,,51);
AN.win_fld(_wer,,'STAN',,,1);
AN.win_act(_wer,0,'Rekord',,,,"{? TMPSIK.find_key(AN.SYM) || exec('findtmp','#color') ?}");
AN.win_act(_wer,0,'Formuła','&Zaznacz'@@,,,,"{? ~TMPSIK.find_key(AN.SYM)
                                                  || TMPSIK.ID:='K'; TMPSIK.T1:=tuser; TMPSIK.T2:=AN.SYM;
                                                     TMPSIK.T3:=AN.KS().TYP+AN.KS().SALDO; TMPSIK.add()
                                                  ?};
                                                  AN.next() ",,1,,,'Z');
AN.win_btn(_wer,'text='+'&Zaznacz'@+',btn_label_align=center,panel=right,align=begin','menu:Z');
AN.win_act(_wer,0,'Formuła','&Odznacz'@@,,,,"{? TMPSIK.find_key(AN.SYM)
                                             || TMPSIK.del()
                                             ?}",,1,,,'O');
AN.win_btn(_wer,'text='+'&Odznacz'@+',btn_label_align=center,panel=right,align=begin','menu:O');
AN.win_act(_wer,0,'Formuła','Odznacz wszys&tkie'@@,,,,"{? TMPSIK.first() || {!|? TMPSIK.del()!} ?}",,,,,'T');
AN.win_act(_wer,0,'Szukaj');
AN.win_sel(_wer)


\konta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: zwraca tabele kont wchodzacych do wskazanej parametrami dziedziny
::   WE: _a - ROK_F.KOD
::       _b - waluta (ref SLO)
::       _c - typ: (1)pozabilansowe, (2)bilansowe, (3)wszystkie, (4)wynikowe, (5)wszystkie bez pozabilansowych
::       _d - (S)yntetyka/(A)nalityka
::       _e - zakres: (0) prefix, (2) maska, (3) lista,
::                    (4) zakres, (5) schemat, (6) lista kont analitycznych
::       _f - maska lub prefix lub zakres od
::       _g - zakres do
::       _h - ref schematu kont
::       _i - USER tm_stamp
::   WY: 0 brak zdefiniownych kont
::       1 konta zostaly zdefiniowane
::  OLD: \konta/konta.fml
::----------------------------------------------------------------------------------------------------------------------
_w:={? _>=5
    || {? _e=3 | _e=6
       || _f:=_g:=exec('str_sql','#sql',''); _f:='\''+_f+'\''; _g:='\''+_g+'\''; 1
       |? (_e=0 | _e=2) & _>=6
       || _f:=exec('str_sql','#sql',_f); _f:='\''+_f+'\'';
          _g:=exec('str_sql','#sql',''); _g:='\''+_g+'\''; 1
       |? _e=4 & _>=7
       || _f:='\''+_f+'\''; _g:='\''+_g+%255+'\''; 1
       |? _e=5 & _>=8 & _h<>null
       || 1
       || 0
       ?}
    || 0
    ?};
{? _w
|| VAR_DEL.delete('TABK','TABK_IA','TABK_IS');
   {? _e<>3 & _e<>6 & _e<>5
   || TABK:=sql('select /*+MASK_FILTER(AN,:_a) */ KS.SYM as KSSYM,'+
                'AN.SYM as ANSYM, 0 as SCAL, KS.SALDO as KSSALDO, 0 as POZ from @AN '+
                'join KS using(AN.KS, KS.REFERENCE) '+
                'where AN.WAL=:_e and KS.TYP like :_f and'+
                {? _e=0 | _e=2
                || ' AN.SYM like :_c '
                || ' AN.SYM between :_c and :_d '
                ?}+
                'order by 1, 2, 4','\'koan\_\_'+_a+'\'',_e,_f,_g,_b,{? _c=1 || '\'P%\''
                                                                           |? _c=2 || '\'BL\''
                                                                           |? _c=3 || '\'%\''
                                                                           |? _c=4 || '\'BW\''
                                                                           || '\'B%\''
                                                                           ?});
      TABK_IS:=TABK.ndx_tmp('',1,'KSSYM',,0,'ANSYM',,0,'POZ',,0);
      TABK.index(TABK_IS);
      {? _d='S' & (_kon:='';TABK.first())
      || {!|? {? TABK.KSSYM=TABK.ANSYM
              || _kon:=TABK.KSSYM; TABK.next()
              |? _kon=TABK.KSSYM
              || {? TABK.next() || TABK.prev(); TABK.del() || TABK.del(); 0?}
              || _kon:=TABK.KSSYM; TABK.ANSYM:=_kon; TABK.put(); TABK.next()
              ?} !}
      ?}
   |? _e=3 | _e=6
   || TABK:=sql('select /*+MASK_FILTER(AN,:_a) */ KS.SYM as KSSYM,'+
                'AN.SYM as ANSYM, 0 as SCAL, KS.SALDO as KSSALDO, 0 as POZ '+
                'from @AN join KS using (AN.KS, KS.REFERENCE) '+
                'where AN.REFERENCE=\'-1\'', '\'koan\_\_'+_a+'\'');
      AN.cntx_psh();
      {? (ROK_F.index('KOD'); ROK_F.prefix(REF.FIRMA); ROK_F.find_key(_a)) &
         (KS.index('SYM'); KS.prefix(ROK_F.ref()); AN.use('koan__'+_a);
          AN.index('WALSYM'); KS.first())
      || TABK_IS:=TABK.ndx_tmp('',1,'KSSYM',,0,'ANSYM',,0,'POZ',,0);
         TABK.index(TABK_IS);
         TMPSIK.index('TEXT1'); TMPSIK.prefix('K',_i);
         {? TMPSIK.first()
         || {!|? {? ~TABK.find_key(TMPSIK.T2) & ( (_c=1 & 1+TMPSIK.T3='P' )
                                                  | (_c=2 & 2+TMPSIK.T3='BL')
                                                  | ( _c=4 & 2+TMPSIK.T3='BW')
                                                  | (_c=5 & 1+TMPSIK.T3='B')
                                                  | _c=3 )
                 || {? AN.prefix(_b,TMPSIK.T2); AN.first()
                    || _k:=1; {!|? TABK.KSSYM:=AN.KS().SYM;
                                   TABK.KSSALDO:=TMPSIK.T3+1;
                                   TABK.ANSYM:={? _d='S' || _k:=0; KS.SYM || AN.SYM ?};
                                   TABK.POZ:=0;
                                   TABK.add(); _k & AN.next() !}
                    ?}
                 ?}; TMPSIK.next()
            !};
            TMPSIK.first(); {!|? TMPSIK.del()!}
         ?}
      ?};
      AN.cntx_pop()
   |? _e=5
   || TABK:=sql('select /*+MASK_FILTER(AN,:_a) */ KON_SCH.LP as LP, KON_SCH.MZ, KON_SCH.MASKA,'+
                'KON_SCH.ZOD, KON_SCH.ZDO,'+
                'KS.SYM as KSSYM, AN.SYM as ANSYM, 0 as SCAL, KS.SALDO as KSSALDO, KON_SCH.POZ as POZ '+
                'from KON_SCH '+
                'join KON_WYDR using (KON_SCH.KON_WYDR,KON_WYDR.REFERENCE), '+
                '@AN join KS using (AN.KS,KS.REFERENCE) '+
                'where KON_WYDR.REFERENCE=:_b '+
                'and AN.WAL=:_c and KS.TYP like :_d',
                '\'koan\_\_'+_a+'\'','\''+BB.refsql(_h)+'\'',_b, {? _c=1 || '\'P%\''
                                                                |? _c=2 || '\'BL\''
                                                                |? _c=3 || '\'%\''
                                                                |? _c=4 || '\'BW\''
                                                                || '\'B%\''
                                                                ?});
      TABK_IA:=TABK.ndx_tmp('',1,'ANSYM',,0);
      TABK.index(TABK_IA);
      {? TABK.first
      || TABK_IA:=TABK.ndx_tmp('',1,'ANSYM',,0,'LP',,0); TABK.index(TABK_IA); TABK.first(); _kon:='';
         {!|? {? (TABK.MZ='M' & ~exec('wmasce','konto',TABK.MASKA,TABK.ANSYM,BILANSP.ASEP) ) |
                 (TABK.MZ='Z' & ~(TABK.ANSYM>=TABK.ZOD & TABK.ANSYM<=TABK.ZDO+(35-+TABK.ZDO)*'Z'))
              ||  _kon:='';
                 {? TABK.next() || TABK.prev(); TABK.del() || TABK.del(); 0?}
              || {? TABK.ANSYM=_kon
                 || {? TABK.next() || TABK.prev(); TABK.del() || TABK.del();0 ?}
                 || _kon:=TABK.ANSYM; TABK.next()
                 ?}
              ?} !}
      ?};
      {? _d='S' & TABK.first()
      || {? var_pres('TABK_IS')<=0
         || TABK_IS:=TABK.ndx_tmp('',1,'KSSYM',,0,'ANSYM',,0,'POZ',,0)
         ?}; TABK.index(TABK_IS); TABK.first();
         _kon:=''; _poz:=-1;
         {!|? {? _kon=TABK.KSSYM
              || {? _poz<>0 & (TABK.POZ>_poz | TABK.POZ=0)
                 || _poz:=TABK.POZ; TABK.cntx_psh();
                    {? TABK.find_key(_kon)
                    ||  TABK.POZ:=_poz; TABK.put()
                    ?}; TABK.cntx_pop()
                 ?};
                 {? TABK.next() || TABK.prev(); TABK.del() || TABK.del();0 ?}
              || _kon:=TABK.KSSYM; _poz:=TABK.POZ; TABK.ANSYM:=_kon;
                 TABK.put(); TABK.next()
              ?} !}
     ?}
   ?}
?};
{? _w & TABK.first()
|| {? var_pres('TABK_IA')<=0 || TABK_IA:=TABK.ndx_tmp('',1,'ANSYM',,0) ?};
   {? var_pres('TABK_IS')<=0 || TABK_IS:=TABK.ndx_tmp('',1,'KSSYM',,0,'ANSYM',,0) ?}; 1
|| 0
?}


\op_konta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: podaje opis konta dla wskazanego poziomu analityki
::   WE: _a - symbol konta
::       _b - ref tabeli ROK_F
::       (_c) - poziom analityki (dla 0 ostatni poziom)
::       (_d) - jesli podany zwaraca kod (2) albo opis(1) lub il.poziomow(3)
::       (_e) - dlugosc syntetyki
::       (_f) - podac opis dla nieistniejacego AN (1/0)
::   WY: opis i kod konta syntetycznego lub poziomu analityki, ilosc poziomow
::  OLD: \op_konta/konta.fml
::----------------------------------------------------------------------------------------------------------------------
_w:=obj_new(3);_w[1]:=_w[2]:='';_w[3]:=0; {? _<5 | _[5]=~~||_e:=BILANSP.ASYNT?};
{? _>=2
|| KS.index('SYM'); KS.prefix(_b,_e+_a);
   {? KS.first()
   || {? +_a=_e | _c=-1
      || _w[1]:=KS.NAZ; _w[2]:=_e+_a;
         exec('opis','konto',_a,KS.ref)
      || BUD.index('KS'); BUD.prefix(KS.ref());
         _r:={? BUD.last() || _w[3]:=BUD.POZ; BUD.ref() || null ?};
         {? _=2 || _c:=0 ?};
         {? _c>_w[3] || _c:=0 ?};
         {? (( _c>0 & (BUD.prefix(KS.ref , _c); {? BUD.first() || _r:=BUD.ref; 1 ?})) |
             _c=0 )
         || AN.index('SYM'); AN.prefix();
            {? {? AN.find_key(_a)
               || _a=(+_a+AN.SYM)
               || {? _r<>null || AN.find_key(_a-BUD.SLU().SLU().DL)  || 0 ?}
               ?} |
               (_>=6 & _[6]<>~~ & _f & _r<>null)
            || exec('opis','konto',_a,KS.ref);
                {? _r<>null
                || BUD.seek(_r); _w[1]:=($('KA.O'+$(BUD.POZ+1)))();
                   _w[2]:=($('KA.P'+$(BUD.POZ)+'().KOD'))()
                ?}
            || _w[1]:=KS.NAZ; _w[2]:=_a
            ?}
         || _w[1]:=KS.NAZ; _w[2]:=_a
         ?}
      ?}
   ?}
?};
{? _>=4 & _[4]<>~~
|| {?_d=1 || _w[1] |? _d=2 || _w[2] || _w[3] ?}
|| _w
?}


\anal_kon
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MM [8.60]
:: OPIS: tablica kont wchodzacych do wskazanego prefixu lub tabeli TABK z wartosciami wskazanymi
::       w parametrach
::   WE: _a - ROK_F.ref
::       _b - od daty otwarcia
::       _c - do daty otwarcia
::       _d - BO (S)aldo/(O)broty
::       _e - obroty narastajaco z BO (1/0)
::       _f - SLO.ref - waluta
::       _g - SLO.ref - kod waluty narodowej
::       _h - ODD.ref - jednostka ksiegowa
::       _i - BZ (T/N)
::       [_j - saldo rozwarte dla konta aktywno pasywnego 1/0]
::       [_k - prefiks konta lub zakres do w parze z TABK]
::       [_l - prefix lub maska konta lub zakres od w parze z TABK]
::  OLD: \anal_kon/konta.fml
::----------------------------------------------------------------------------------------------------------------------
OKRO_F.cntx_psh();
OKRO_F.index('ROK');
OKRO_F.prefix(_a);
AN.cntx_psh();
OBR.cntx_psh();
_wdl:=_wdp:='';_wo1:=_wo2:=_wn:=okl:=okp:=0;
_ok:={? {? OKRO_F.last() || OKRO_F.prev() || 0 ?} || OKRO_F.KON || date(0,0,0) ?};
_okd:=date(0,0,0);
_lok:=OKRO_F.size();
{? _ok<>date(0,0,0) & (OKRO_F.first() & OKRO_F.next())
|| _o:=_on:=OKRO_F.POCZ; _it:=0; _itd:=0;
   {!
   |? _it+=1;
      {? OKRO_F.POCZ=_o & OKRO_F.KON<=_c & OKRO_F.POCZ=_b
      || _wo1:=_wo2:=OKRO_F.NR
      |? (OKRO_F.POCZ~1=_b~1 & OKRO_F.POCZ~2=_b~2 & _b~3>=1)
         | (OKRO_F.KON~1=_c~1 & OKRO_F.KON~2=_c~2 & OKRO_F.KON>=_c)
      || _itd:={? OKRO_F.POCZ~1=_b~1 & OKRO_F.POCZ~2=_b~2 || 'l' || 'p' ?};
         _okd:=OKRO_F.KON;
         ($('ok'+_itd))():=OKRO_F.NR;
         {? _itd='l'
         || _wdl:='(DOK.DTW>=to_date(\''+$(_b~1)+'-'+$(_b~2)+'-'+$(1)+'\')'
                 +' and DOK.DTW<=to_date(\''+
                 {? OKRO_F.KON>_c
                 || $(_c~1)+'-'+$(_c~2)+'-'+$(_c~3)
                 || $(OKRO_F.KON~1)+'-'+$(OKRO_F.KON~2)+'-'+$(date(OKRO_F.KON~1,OKRO_F.KON~2,0)~3)
                 ?}
                 +'\'))'
         || _wdp:='(DOK.DTW>=to_date(\''+$(OKRO_F.POCZ~1)+'-'+$(OKRO_F.POCZ~2)+'-1\')'
                 +' and DOK.DTW<=to_date(\''+$(_c~1)+'-'+$(_c~2)+'-'+$(_c~3)+'\'))'
         ?}
      |? OKRO_F.POCZ>=_b & OKRO_F.KON<=_c
      || {? ~_wo1 || _wo1:=_wo2:=OKRO_F.NR || _wo2:=OKRO_F.NR ?}
      ?};
      {? OKRO_F.KON<=_c & OKRO_F.POCZ<>date(0,0,0)
      || _wn:=OKRO_F.NR; _on:=OKRO_F.KON+1
      ?};
      OKRO_F.next()
   !}
|| _o:=_on:=date(0,0,0)
?};
OKRO_F.cntx_pop();
{? _ok<>date(0,0,0) & ((_>10 & +_k & ~+_l) | (var_pres('TABK')>100 & TABK.first()))
|| _tab:=tab_tmp(1,'KON','STRING[35]','Konto',
                   'BOWN','REAL','BO wn',
                   'BOMA','REAL','BO ma',
                   'OBWN','REAL','Obroty wn',
                   'OBMA','REAL','Obroty ma',
                   'ONWN','REAL','Narastająco wn',
                   'ONMA','REAL','Narastająco ma',
                   'SWN','REAL','Saldo wn',
                   'SMA','REAL','Saldo ma');
:  'obliczenia dla okresow pelnych i BO';
:  'podstawienie SSTALE.WAL, OPERATOR.DEPT, otwarcie tabel AN i OBR';
   _waluta:=SSTALE.WAL;
   _jk:=OPERATOR.DEPT;
   SSTALE.WAL:=_f;
   OPERATOR.DEPT:=_h;
   {? {? SSTALE.AR<>_a & (ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA); ROK_F.seek(_a))
      || AN.use('koan__'+ROK_F.KOD) & OBR.use('obroty'+ROK_F.KOD)
      || 1
      ?}
   || AN.index('SYM');
      {!|? _kon:={? _>10 & +_k & ~+_l || _k || TABK.ANSYM ?};
           echo('Obliczenia dla pełnych okresów, konta: %1'@[_kon]);
           _tab.blank();
           _tab.KON:=_kon;
           {? _>10 & +_k & ~+_l & _j & _d='S' & (AN.prefix(_kon); AN.first() & AN.KS().SALDO='D' & AN.size>1)
           || {!
              |?
:               'naliczenie BO --->';
                 F.Obr(AN.SYM,0,0);
                 _tab.BOWN+=_bown:={? _d='S' || F.SWn(F.wn,F.ma) || F.wn ?};
                 _tab.BOMA+=_boma:={? _d='S' || F.SMa(F.wn,F.ma) || F.ma ?};
:                'okres sprawozdawczy --->';
                 {? _wo1>0
                 || F.Obr(AN.SYM,_wo1, _wo2);
                    _tab.OBWN+=_obwn:=F.wn;
                    _tab.OBMA+=_obma:=F.ma
                 ?};
:               'okres narastajaco --->';
                 {? _wn>0
                 || F.Obr(AN.SYM,1, {? _wn=(_lok-2) & _i='T' || _wn+1 || _wn ?});
                    _tab.ONWN+=_onwn:=F.wn;
                    _tab.ONMA+=_onma:=F.ma;
                    {? _e
                    || _tab.ONWN+=_bown;
                       _onwn+=_bown;
                       _tab.ONMA+=_boma;
                       _onma+=_boma
                    ?}
                 || _tab.ONWN+=_onwn:={? _e || _bown || 0 ?}+_obwn;
                    _tab.ONMA+=_onma:={? _e || _boma || 0 ?}+_obma
                 ?};
:                'saldo --->';
                 _tab.SWN+=F.SWn({? _e || _onwn || _onwn+_bown ?},
                                 {? _e || _onma || _onma+_boma ?});
                 _tab.SMA+=F.SMa({? _e || _onwn || _onwn+_bown ?},
                                 {? _e || _onma || _onma+_boma ?});
                 AN.next()
              !}
           ||
:             'naliczenie BO --->';
              F.Obr(_kon,0,0);
              {? _d='S'
              || _tab.BOWN:=F.SWn(F.wn,F.ma);
                 _tab.BOMA:=F.SMa(F.wn,F.ma)
              || _tab.BOWN:=F.wn;
                 _tab.BOMA:=F.ma
              ?};
:             'okres sprawozdawczy --->';
              {? _wo1>0
              || F.Obr(_kon,_wo1, _wo2);
                 _tab.OBWN:=F.wn;
                 _tab.OBMA:=F.ma
              ?};
:             'okres narastajaco --->';
              {? _wn>0
              || F.Obr(_kon,1, {? _wn=(_lok-2) & _i='T' || _wn+1 || _wn ?});
                 _tab.ONWN:=F.wn;
                 _tab.ONMA:=F.ma;
                 {? _e
                 || _tab.ONWN+=_tab.BOWN;
                    _tab.ONMA+=_tab.BOMA
                 ?}
              || _tab.ONWN:={? _e || _tab.BOWN || 0 ?}+_tab.OBWN;
                 _tab.ONMA:={? _e || _tab.BOMA || 0 ?}+_tab.OBMA
              ?};
:             'saldo --->';
              _tab.SWN:=F.SWn({? _e || _tab.ONWN || _tab.ONWN+_tab.BOWN ?},
                              {? _e || _tab.ONMA || _tab.ONMA+_tab.BOMA ?});
              _tab.SMA:=F.SMa({? _e || _tab.ONWN || _tab.ONWN+_tab.BOWN ?},
                              {? _e || _tab.ONMA || _tab.ONMA+_tab.BOMA ?})
           ?};
           _tab.add();
           {? _>10 & +_k & ~+_l || 0 || TABK.next() ?}
      !};
      echo();
:    'podstawienie SSTALE.WAL, OPERATOR.DEPT, otwrcie tabel AN i OBR';
      SSTALE.WAL:=_waluta;
      OPERATOR.DEPT:=_jk;
:    'obliczenia dla okresow niepelnych i/lub bilansu zamkniecia';
     _isbz:={? _i='T'
            || _wy:=0;
               POZ.cntx_psh();
               POZ.use('pozy'+ROK_F.KOD+form(_lok-1,-2));
               POZ.index('SYMKON');
               POZ.prefix('T','T');
               _wy:=POZ.first();
               POZ.cntx_pop();
               _wy
            ?};
     {? okl | okp |
        ( _isbz & (_wn<(_lok-2) | (( ~okl & ~okp) | (okl & okp))))
     || echo({? okl | okp
             || 'Obliczenia dla niepełnych okresów, zapytanie sql...'
             || 'Obliczenia dla bilansu zamknięcia, zapytanie sql...'
             ?});
        _tab1:=sql('select /*+MASK_FILTER(POZ,:_f) MASK_FILTER(DOK,:_g) */ KON,'+
                   {? okl
                   || 'sum(case when STR=:_d and DTW>=to_date(:_h) and DTW<=to_date(:_'+{? okp || 'i' || 'k' ?}+') '+
                               'then case :_a when :_b then POZ.SUM else SUMW end else 0 end) as OBWNL,'+
                      'sum(case when STR=:_e and DTW>=to_date(:_h) and DTW<=to_date(:_'+{? okp || 'i' || 'k' ?}+') '+
                               'then case :_a when :_b then POZ.SUM else SUMW end else 0 end) as OBMAL '
                   || ''
                   ?}+
                   {? okp
                   || {? okl || ',' || '' ?}+
                      'sum(case when STR=:_d and DTW>=to_date(:_'+{? okl || 'j' || 'h' ?}+') and DTW<=to_date(:_k) '+
                               'then case :_a when :_b then POZ.SUM else SUMW end else 0 end) as OBWNP,'+
                      'sum(case when STR=:_e and DTW>=to_date(:_'+{? okl || 'j' || 'h' ?}+') and DTW<=to_date(:_k) '+
                               'then case :_a when :_b then POZ.SUM else SUMW end else 0 end) as OBMAP '
                   || ''
                   ?}+
                   {? _wn<(_lok-2) & (_on<=_c | _isbz | _wn=0 & _on=_c)
                   || {? okl | okp || ',' || '' ?}+
                      'sum(case when STR=:_d and '+
                                {? _on<=_c | _wn=0 & _on=_c
                                || '((DTW>=to_date(:_n) and DTW<=to_date(:_k) and POZ.REFERENCE not like :_m) '
                                || ''
                                ?}+
                                {? _isbz
                                || {? _on<=_c || 'or ' || '' ?}+
                                    '(DTW>=to_date(:_l) and DTW<=to_date(:_k) and POZ.REFERENCE like :_m) '
                                || ''
                                ?}+
                                {?_on<=_c | _wn=0 & _on=_c || ')' || '' ?}+
                                'then case :_a when :_b then POZ.SUM else SUMW end else 0 end) as NWN,'+
                      'sum(case when STR=:_e and '+
                               {? _on<=_c | _wn=0 & _on=_c
                               || '((DTW>=to_date(:_n) and DTW<=to_date(:_k) and POZ.REFERENCE not like :_m) '
                               || ''
                               ?}+
                               {? _isbz
                               || {? _on<=_c || 'or ' || '' ?}+
                                  '(DTW>=to_date(:_l) and DTW<=to_date(:_k) and POZ.REFERENCE like :_m) '
                               || ''
                               ?}+
                               {?_on<=_c | _wn=0 & _on=_c || ')' || '' ?}+
                               'then case :_a when :_b then POZ.SUM else SUMW end else 0 end) as NMA '
                   || ''
                   ?}+
                   {? _isbz & (~okl & ~okp)
                   || {? _wn<(_lok-2) || ',' || '' ?}+
                      'sum(case when STR=:_d and DTW>=to_date(:_h) and DTW<=to_date(:_k) and POZ.REFERENCE like :_m '+
                               'then  case :_a when :_b then POZ.SUM else SUMW end else 0 end) as OBZWN,'+
                      'sum(case when STR=:_e and DTW>=to_date(:_h) and DTW<=to_date(:_k) and POZ.REFERENCE like :_m '+
                               'then  case :_a when :_b then POZ.SUM else SUMW end else 0 end) as OBZMA '
                   |? _isbz & (okl & okp)
                   || {? _wn<(_lok-2) | okl | okp || ',' || '' ?}+
                      'sum(case when STR=:_d and DTW>=to_date(:_'+{? okp || 'i' || 'k' ?}+
                                          ') and DTW<=to_date(:_'+{? okl || 'j' || 'h' ?}+') and POZ.REFERENCE like :_m '+
                               'then  case :_a when :_b then POZ.SUM else SUMW end else 0 end) as OBZWN,'+
                      'sum(case when STR=:_e and DTW>=to_date(:_'+{? okp || 'i' || 'k' ?}+
                                          ') and DTW<=to_date(:_'+{? okl || 'j' || 'h' ?}+') and POZ.REFERENCE like :_m '+
                               'then  case :_a when :_b then POZ.SUM else SUMW end else 0 end) as OBZMA '
                   || ''
                   ?}
                   +'from @POZ '+
                   {? _<11 || 'join :_c using(POZ.KON,:_c.ANSYM) ' || '' ?}+
                   'join @DOK using (POZ.DOK,DOK.REFERENCE) where POZ.ZP=\'T\' '+
                   {? _>10
                   || {? _k<>''
                      || ' and KON between :_o and :_c'
                      |? type_of(_c)=2
                      || ' and KON like :_c||\'%\''
                      || ''
                      ?}
                   || ''
                   ?}+
                   {? _h || ' and DOK.ODD='+'\''+BB.refsql(_h)+'\'' || '' ?}+
                   {? _f<>_g || ' and POZ.WAL=:_a'|| '' ?}+
                   {? (_wn=0 | (_wn>0 & _on<=_c))
                   || ' and DTW>=to_date(:_'+{? _on>_b & _wn=(_lok-2) || 'h' || 'l' ?}+') and DTW<=to_date(:_k)'
                   || {? okl | okp
                      || ' and ('+
                         {? okl
                         || _wdl
                         || ''
                         ?}+
                         {? okp
                         || {? okl || ' or ' || '' ?}+_wdp
                         || ''
                         ?}+
                         ')'
                      || ''
                      ?}
                   ?}+
                   ' group by KON order by KON, KON',
                   '\''+BB.refsql(_f)+'\'','\''+BB.refsql(_g)+'\'',
                   {? _=11 || '\''+_k+'\'' |? _=12 || '\''+_l+'\'' || TABK ?},
                   '\'Wn\'','\'Ma\'',
                   {? okl
                   || exec('getmaskf','dok_fks',0,ROK_F.ref(),0,0,_b,date(_b~1,_b~2,0),POZ)
                      +{? _isbz || ',\'pozy'+ROK_F.KOD+form(_lok-1,-2)+'\'' || '' ?}
                   || ''
                   ?}+
                   {? okp
                  || {? okl || ',' || '' ?}+
                      exec('getmaskf','dok_fks',0,ROK_F.ref(),0,0,date(_c~1,_c~2,1),_c,POZ)
                      +{? _isbz || ',\'pozy'+ROK_F.KOD+form(_lok-1,-2)+'\'' || '' ?}
                   || ''
                   ?}+
                   {? _isbz & ~okl & ~okp
                   || '\'pozy'+ROK_F.KOD+form(_lok-1,-2)+'\''
                   || ''
                   ?},
                   {? okl
                   || exec('getmaskf','dok_fks',0,ROK_F.ref(),0,0,_b,date(_b~1,_b~2,0),DOK)
                      +{? _isbz || ',\'doku'+ROK_F.KOD+form(_lok-1,-2)+'\'' || '' ?}
                   || ''
                   ?}+
                   {? okp
                   || {? okl || ',' || '' ?}+
                      exec('getmaskf','dok_fks',0,ROK_F.ref(),0,0,date(_c~1,_c~2,1),_c,DOK)
                      +{? _isbz || ',\'doku'+ROK_F.KOD+form(_lok-1,-2)+'\'' || '' ?}
                   || ''
                   ?}+
                   {? _isbz & ~okl & ~okp
                   || '\'doku'+ROK_F.KOD+form(_lok-1,-2)+'\''
                   || ''
                   ?}, _b,date(_b~1,_b~2,0),date(_c~1,_c~2,1),_c, _o,'\'pozy'+ROK_F.KOD+form(_lok-1,-2)+'%\'', _on,
                   {? _=12 || '\''+_k+'\'' || '' ?});
        {? _tab.first() & _tab1.first()
        || {!
           |? echo('Zapisanie wyników zapytania SQL....%1'@[_tab.KON]);
              {? _tab1.find_key(_tab.KON, _tab.KON)
              || {? okl
                 || _tab.OBWN+=_tab1.OBWNL;
                    _tab.OBMA+=_tab1.OBMAL
                 ?};
                 {? okp
                 || _tab.OBWN+=_tab1.OBWNP;
                    _tab.OBMA+=_tab1.OBMAP
                 ?};
                 {? _isbz & (~okl & ~okp)
                 || _tab.OBWN+=_tab1.OBZWN;
                    _tab.OBMA+=_tab1.OBZMA
                 ?};
                 {? _wn<(_lok-2) & (_on<=_c | _isbz | _wn=0 & _on=_c)
                 || _tab.ONWN+=_tab1.NWN;
                    _tab.ONMA+=_tab1.NMA
                 ?}
              ?};
              _tab.SWN:=F.SWn({? _e || _tab.ONWN || _tab.ONWN+_tab.BOWN ?},
                              {? _e || _tab.ONMA || _tab.ONMA+_tab.BOMA ?});
              _tab.SMA:=F.SMa({? _e || _tab.ONWN || _tab.ONWN+_tab.BOWN ?},
                              {? _e || _tab.ONMA || _tab.ONMA+_tab.BOMA ?});
              _tab.put();
              _tab.next()
           !}
        ?}
     ?}
   ?}
?};
&okl; &okp;
AN.cntx_pop();
OBR.cntx_pop();
{? var_pres('_tab')>100
|| _tab
|| 0
?}


\pw_opan
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS:
::   WE:
::   WY:
::  OLD: \pw_opan/obr_an.fml
::----------------------------------------------------------------------------------------------------------------------
KS.index('SYM'); KS.prefix(SSTALE.AR);
BUD.index('KS');
SLO.index('SL');
SLO.prefix;
SLU.prefix;
BUD.prefix(AN.KS);
exec('zer_anal','konto');
{? (_ &  ~BUD.find_key(_a)) | (~_ & ~BUD.last)
|| {? KS.seek(AN.KS)
   || KOMPEN.OPIS:=KA.O1:=KS.NAZ
   || KOMPEN.OPIS:=KA.O1:=35*'?';
      FUN.info('W planie kont brak konta o symbolu %1.'@[AN.SYM])
   ?}
|| {? SLU.seek(BUD.SLU().SLU)
   || {? (~_ & SLO.find_key(BUD.SLU().SLU,|(AN.SYM+SLU.DL))) | (_ &  SLO.find_key(BUD.SLU().SLU,|((_b+_c)+SLU.DL)))
      || KOMPEN.OPIS:=SLO.TR
      || KOMPEN.OPIS:=''
      ?};
      KA.O1:=AN.KS().NAZ;
      {? ~_ || exec('ust_anal1','konto',AN.SYM,AN.KS) ?}
   || KOMPEN.OPIS:=35*'?';
      FUN.info('W planie kont brak konta o symbolu %1.'@[AN.SYM])
   ?}
?};
1


\end_msg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [8.70]
:: OPIS: Komunikat w sekcji END podsumowuj grupowe drukowanie dokumentow
::  OLD: \end_msg/dok_zest.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('czy_druk')>-1 & czy_druk
||  {? l_size<>l_druk
    ||  FUN.info('Liczba zaznaczonych dokumentów: %1.'
       '\nLiczba drukowanych dokumentów: %2.'
       '\nLiczba nie wydrukowanych dokumentów \n(w tym bez pozycji): %3.'@[$l_size,$l_druk,$(l_size-l_druk)])
     ||  FUN.info('Liczba zaznaczonych dokumentów: %1.'
       '\nLiczba drukowanych dokumentów: %2.'@[$l_size,$l_druk])
   ?}
?}


\ae_omask
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [AMA] [7.41] 18.04.2001
:: OPIS: Wypelnia lub czysci pole maski konta.
::  OLD: \ae_omask/par_wydr.fml
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.OMASKA=2
|| {? PAR_WYDR.MASKA='' || PAR_WYDR.MASKA:=35*'?' ?}
|| PAR_WYDR.MASKA:=''
?};
exec('omask_enable','dok_fks_zest')


\omask_enable
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Ustawia dostępność pola PAR_WYDR.MASKA do redakcji
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab()=PAR_WYDR & PAR_WYDR.win_edit('?')='RWZOBOW'
|| PAR_WYDR.efld_opt('RWZOBOW','enable='+$(PAR_WYDR.OMASKA=2),PAR_WYDR,'MASKA')
?};
1


\k_kazapk_zest1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła pomocnicza dla wydruku rocznej kartoteki księgowań w przypadku zestawu kont
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
{? ROZNE.PAR4=5 || _ref:=ROZNE.KON_WYDR || return(~~) ?};
{? ~(var_pres('TABK')>0 & var_pres('TAB_SQL')>0) || return(~~) ?};
{? var_pres('TABK_IA')<=0 || TABK_IA:=TABK.ndx_tmp('',1,'ANSYM',,0) ?};
TABK.cntx_psh(); TABK.index(TABK_IA);
TAB_SQL.cntx_psh(); TAB_SQL.prefix();
_fml1:="_ansym:=TAB_SQL.F1;
        _poz:=0; _new:='';
        TABK.prefix(_ansym,);
        {? TABK.first()
        || _poz:=TABK.POZ
        ?};
        {? _poz>=1
        || STR.split(_ansym,BILANSP.ASEP);
           _new+=STR.get_word();
           {! _i:=1.._poz |! {? STR.next() || _new+=(BILANSP.ASEP+STR.get_word()) ?} !}
        |? _poz=-1
        || STR.split(_ansym,BILANSP.ASEP);
           _new+=STR.get_word()
        || _new:=_ansym
        ?};
        TAB_SQL.F1:=_new;
        TAB_SQL.put()
        ";
TAB_SQL.for_each(_fml1);
TABK.prefix();
_fml2:="_ansym:=TABK.ANSYM;
        _new:='';
        _poz:=TABK.POZ;
        {? _poz>=1
        || STR.split(_ansym,BILANSP.ASEP);
           _new+=STR.get_word();
           {! _i:=1.._poz |! {? STR.next() || _new+=(BILANSP.ASEP+STR.get_word()) ?} !}
        |? _poz=-1
        || STR.split(_ansym,BILANSP.ASEP);
           _new+=STR.get_word()
        || _new:=_ansym
        ?};
        TABK.ANSYM:=_new;
        TABK.put()
        ";
TABK.for_each(_fml2);
_fml3:="_ansym:=TABK.ANSYM;
        TABK.prefix(_ansym,);
        {? TABK.size>1
        || {? TABK.first()
           || {! |?
                 {? TABK.size>=2
                 || TABK.del()
                 || 0
                 ?}
              !}
           ?}
        ?}
        ";
TABK.for_each(_fml3);
TAB_SQL.cntx_pop();
TABK.cntx_pop()


\k_kazapk_zest2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła pomocnicza dla wydruku rocznej kartoteki księgowań w przypadku zestawu kont
::----------------------------------------------------------------------------------------------------------------------
_ref:=null;
{? ROZNE.PAR4=5 || _ref:=ROZNE.KON_WYDR || return(~~) ?};
{? ~(var_pres('TABN')>0) || return(~~) ?};
{? var_pres('TABK_IA')<=0 || TABK_IA:=TABK.ndx_tmp('',1,'ANSYM',,0) ?};
TABK.cntx_psh(); TABK.index(TABK_IA);
TABN.cntx_psh();TABN.prefix();
_fml1:="_ansym:=TABN.PKON;
        _poz:=0; _new:='';
        TABK.prefix(_ansym,);
        {? TABK.first()
        || _poz:=TABK.POZ
        ?};
        {? _poz>=1
        || STR.split(_ansym,BILANSP.ASEP);
           _new+=STR.get_word();
           {! _i:=1.._poz |! {? STR.next() || _new+=(BILANSP.ASEP+STR.get_word()) ?} !}
        |? _poz=-1
        || STR.split(_ansym,BILANSP.ASEP);
           _new+=STR.get_word()
        || _new:=_ansym
        ?};
        TABN.PKON:=_new;
        TABN.put()
        ";
TABN.for_each(_fml1);
TABN.cntx_pop();
TABK.cntx_pop()

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 26f457cb0915f5f25509d1d8c7bd288cfefa096f9154ceaa70851a7149f391555c5ea48678db4e940dd95418d4a39864fab4aafcc1aef027f999567dc12821f33d8791e39089a5cb6208651bd7c961015289989207505125d21110c12746fc7564cc4293a8e8c9099fe3cdc249d408fd86348e3e9b87b71297aabe98e562d926
