:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: rozrach_ods.fml
:: Utworzony: 30.06.2015
:: Autor: MB
::======================================================================================================================
:: Zawartość: Procedury do obsługi odsetek dla rozrachunków
::======================================================================================================================


\tmp_ods
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Tworzy tabele tymczasowa - komunikaty o usterkach
::  OLD: \tmp_ods/odsetki.fml
::----------------------------------------------------------------------------------------------------------------------
lp_brak:=lp_error:=1;
ODS_TMP1:=tab_tmp(,'TREE','TREE_REF','',
                   'TR','STRING[118]','Treść komunikatu',
                   'POZIOM','INTEGER','Poziom',
                   'PELWART','STRING[236]','',
                   'WID','INTEGER','Widoczna pozycja',
                   'DISP','STRING[118]','Treść komunikatu');
ndx_kom1:=ODS_TMP1.ndx_tmp('',1,'TREE',,0,'TR',,0,'TR',,0);
_wer:=ODS_TMP1.mk_sel('Komunikaty o usterkach'@,'N',0,'ods_tmp1_wer',,,,1);
ODS_TMP1.win_fld(_wer,,'TR');
ODS_TMP1.win_act(_wer,,'Formuła','zwiń/&rozwiń całość'@@,,'Zwijanie/rozwijanie całości'@,
                 "exec('zwrw_all','#tree','ODS_TMP1','TREE')",,1,,,,'R');
ODS_TMP1.win_fml(_wer,,'TR',,'ICON_BEFORE',
                 "ODS_TMP1.cntx_psh();
                  ODS_TMP1.index(ndx_kom1); ODS_TMP1.prefix(ODS_TMP1.ref());
                  _zwrot:={? ODS_TMP1.first()
                          || ODS_TMP1.cntx_pop();
                             {? ODS_TMP1.tr_state()=1
                             || 'xwin16.png:75'
                             || 'xwin16.png:74'
                             ?}
                          || ODS_TMP1.cntx_pop(); 'xwin16.png:76'
                          ?}; _zwrot");
ODS_TMP1.win_sel(_wer)


\pyt_pok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Pokazanie komunikatow o usterkach
::  OLD: \pyt_pok/odsetki.fml
::----------------------------------------------------------------------------------------------------------------------
_pyt:=FUN.ask('Wykryto usterki związane z naliczaniem odsetek.\nPokazać?'@);
{? _pyt
|| ODS_TMP1.index(ndx_kom1);
   ODS_TMP1.prefix();
   ODS_TMP1.select()
?}


\del_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Skasowanie tabeli tymczasowej i zmiennych dla komunikatow o usterkach
::  OLD: \del_tmp/odsetki.fml
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('ODS_TMP1','lp_brak','lp_error','ndx_kom1','ndx_kom2')


\sprtdods
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [7.62]
:: OPIS: Sprawdzanie czy domyslna tabela odsetek jest wypelniona i ma wartosc na dany dzien
::   WE: _a - data na ktora ma byc wartosc w tabeli odsetek
::  OLD: \sprtdods/kor_ser2.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? FINFO.TODS_DOM<>null
|| ODS.cntx_psh(); ODS.index('DATA'); ODS.prefix(FINFO.TODS_DOM);
   {? ~(ODS.first() & _a>=ODS.ZM)
   || FUN.info('Domyślna tabela odsetek\nna datę %1 nie ma wartości.'@[$_a]); _zwrot:=0
   ?};
   ODS.cntx_pop()
|| FUN.info('W parametrach programu nie ustawiono\n domyślnej tabeli odsetek.'@); _zwrot:=0
?};
_zwrot


\odsetki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK
:: OPIS: Liczy odsetki dla danego rozrachunku
::   WE: _a - ref rekordu tabeli OP
::       _b - data sporządzenia sprawozdania
::       _c - niezadeklarowane lub = 0 - dla domyslnej tabeli odsetek (FINFO.TODS_DOM)
::                                   1 - dla tabeli odsetek ze zmiennej SER_KOR.TAB_ODS
::  OLD: \odsetki/odsetki.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_c')<=0 || _c:=0 ?}; _sum:=0; data_na:=date(0,0,0); splaty:=0;
OP.cntx_psh;
{? OP.seek(_a)
|| data_na:={? exec('get_par', '#parametr',26)='T'
            || exec('dzienRob','kalendarz',OP.TZ,1,1)
            || OP.TZ
            ?};
   {? data_na=date(0,0,0) || data_na:=OP.TZ ?};
   exec('czy_spl','rozrach_ods',OP.ref(),data_na+1,_b);
   {? splaty<>-1 & splaty<>-2 & splaty<>-3
   || {? data_na<>date(0,0,0) & data_na<_b
      || F.RObr(_a,data_na);
         _swn:=F.SWn(F.rwn,F.rma); _sma:=F.SMa(F.rwn,F.rma);
         {? OP.TYP='NAL' | OP.TYP='ZOB'
         || _sum:={? OP.ZM$4<>0
                  || exec('liczod','rozrach_ods',_swn,_sma,OP.TYP,_b)
                  || exec('liczod1','rozrach_ods',_swn,_sma,OP.TYP,_b,_c,OP.WAL)
                  ?}
         ?}
      ?}
   ?}
?};
{? var_pres('ilepo')>0 || ilepo:=splaty ?};
{? var_pres('dpo')>0 & data_na<>date(0,0,0) || dpo:=data_na ?};
{? var_pres('blad_roz')
|| {?  splaty=-1 || blad_roz:=1 |? splaty=-3 || blad_roz:=2 ?}
?};
OP.cntx_pop; &data_na; &splaty;
_sum


\czy_spl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Formula sprawdza, czy w podanym przedziale dat byla jakas splata dla rozrachunku
::   WE: _a - ref rekordu tabeli OP,
::       _b - data od
::       _c - data do
::   WY: >0 - sa splaty, 0 - nie ma, -1 - blad
::  OLD: \czy_spl/odsetki.fml
::----------------------------------------------------------------------------------------------------------------------
splaty:=0;
{? OP.seek(_a)
|| {? (OP.TYP='NAL' | OP.TYP='ZOB')
   || {? _c>=_b
      || ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref);
         {? ZAP_OP.first()
         || {! |?
                {? ZAP_OP.DATA>=_b & ZAP_OP.DATA<=_c
                || {? (OP.TYP='NAL' & (ZAP_OP.MA>0 | ZAP_OP.WN<0)) |
                      (OP.TYP='ZOB' & (ZAP_OP.WN>0 | ZAP_OP.MA<0))
                   || splaty+=1
                   || exec('add_tmp','rozrach_ods',OP.SYM); splaty:=-3
                   ?}
                ?};
                splaty<>-3 & ZAP_OP.next()
            !}
         ?}
      ?}
   || splaty:=-2
   ?}
|| splaty:=-1
?};
splaty


\add_tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.40]
:: OPIS: Dodaje rekord do tabeli tymczasowej
::   WE: _a - ref waluty, _b - data, _c - ref tabeli odsetek
::       lub _a - symbol rozrachunku
::  OLD: \add_tmp/odsetki.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ODS_TMP1')>0
|| {? _=3
   || SLO.cntx_psh(); SLO.prefix();
      {? SLO.seek(_c)
      || _tab_ods:=SLO.KOD;
         {? SLO.seek(_a)
         || _ref_nad:=null;
            _typ:='Braki w tabelach odsetek';
            ODS_TMP1.index(ndx_kom1); ODS_TMP1.prefix();
            {? ~ODS_TMP1.find_key(0,_typ,_typ)
            || ODS_TMP1.TREE:=0; ODS_TMP1.TR:=_typ;
               {? ODS_TMP1.add() || _ref_nad:=ODS_TMP1.ref() ?}
            || _ref_nad:=ODS_TMP1.ref()
            ?};
            {? _ref_nad<>null
            || _tresc:='Waluta: '+SLO.KOD+' ('+SLO.TR+'), tabela odsetek: '+_tab_ods+', na dzień: '+$_b;
               ODS_TMP1.index(ndx_kom1); ODS_TMP1.prefix();
               {? ~ODS_TMP1.find_key(_ref_nad,_tresc,_tresc)
               || ODS_TMP1.TREE:=_ref_nad; ODS_TMP1.TR:=_tresc; ODS_TMP1.add()
               ?}
            ?}
         ?}
      ?};
      SLO.cntx_pop()
   || _typ:='Rozrachunki korygowane po terminie płatności';
      ODS_TMP1.index(ndx_kom1); ODS_TMP1.prefix();
      {? ~ODS_TMP1.find_key(0,_typ,_typ)
      || ODS_TMP1.TREE:=0; ODS_TMP1.TR:=_typ;
         {? ODS_TMP1.add() || _ref_nad:=ODS_TMP1.ref() ?}
      || _ref_nad:=ODS_TMP1.ref()
      ?};
      {? _ref_nad<>null
      || SLO.cntx_psh();
         _tresc:='Kontrahent: '+OP.KH().SKR+', waluta: '+OP.WAL().KOD+', jedn. ks.: '+OP.ODD().OD+', konto: '+OP.AN+', symbol: '+OP.SYM;
         ODS_TMP1.index(ndx_kom1); ODS_TMP1.prefix();
         {? ~ODS_TMP1.find_key(_ref_nad,_tresc,_tresc)
         || ODS_TMP1.TREE:=_ref_nad; ODS_TMP1.TR:=_tresc; ODS_TMP1.add()
         ?};
         SLO.cntx_pop()
      ?}
   ?}
?}


\liczod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [?????]
:: OPIS: Liczy odsetki dla danego rozrachunku na podstawie umownych stawek określonych w naglowku rozrachunku
::   WE: _a - saldo Winien na dzien bedacy terminem zaplaty
::       _b - saldo Ma na dzien bedacy terminem zaplaty
::       _c - NAL naleznosc  ZOB zobowiazanie
::       _d - data sporzadzenia sprawozdania
::  OLD: \liczod/odsetki.fml
::----------------------------------------------------------------------------------------------------------------------
_ods:=_tymwn:=_tymma:=_licz:=_licz1:=0; _op_tz:=data_na;
{? _d>data_na
|| ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref);
   {? ZAP_OP.first
   || _licz:=0;
      {! |?
        {? ZAP_OP.DATA>_op_tz & ZAP_OP.DATA<=_d
        || {? (_c='NAL' & (ZAP_OP.WN>0 | ZAP_OP.MA<0)) | (_c='ZOB' & (ZAP_OP.MA>0 | ZAP_OP.WN<0))
           || _licz:=-1
           || _licz+=1
           ?}
        ?};
        _licz<>-1 & ZAP_OP.next()
      !}
   ?};
   {? _licz>0
   || {? ZAP_OP.first()
      || _first:=0; _licz1:=0;
         {! |?
            {? ZAP_OP.DATA>data_na & ZAP_OP.DATA<=_d
            || _licz1+=1;
               {? _first=0
               || _ile:=ZAP_OP.DATA-data_na;
                  _ods:={? _c='NAL'
                        || _a*OP.ZM/100*_ile
                        || _b*OP.ZM/100*_ile
                        ?}; _first:=1; _dat:=ZAP_OP.DATA;
                  {? _licz1=_licz
                  || _tymwn+=ZAP_OP.WN;  _tymma+=ZAP_OP.MA;
                     _tymswn:=F.SWn(_tymwn,_tymma); _tymsma:=F.SMa(_tymwn,_tymma);
                     _ods+={? _c='NAL'
                           || _tymswn*OP.ZM/100*(_d-ZAP_OP.DATA)
                           || _tymsma*OP.ZM/100*(_d-ZAP_OP.DATA)
                           ?}
                  ?}
               || _ile:=ZAP_OP.DATA-_dat;
                  _ods+={? _c='NAL'
                        || _tymswn*OP.ZM/100*_ile
                        || _tymsma*OP.ZM/100*_ile
                        ?}; _dat:=ZAP_OP.DATA;
                  {? _licz1=_licz
                  || _tymwn+=ZAP_OP.WN;  _tymma+=ZAP_OP.MA;
                     _tymswn:=F.SWn(_tymwn,_tymma); _tymsma:=F.SMa(_tymwn,_tymma);
                     _ods+={? _c='NAL'
                           || _tymswn*OP.ZM/100*(_d-ZAP_OP.DATA)
                           || _tymsma*OP.ZM/100*(_d-ZAP_OP.DATA)
                           ?}
                  ?}
               ?}
            ?};
            _tymwn+=ZAP_OP.WN;  _tymma+=ZAP_OP.MA; _tymswn:=F.SWn(_tymwn,_tymma); _tymsma:=F.SMa(_tymwn,_tymma);
            ZAP_OP.next()
         !}
      ?}
   || _ile:=_d-data_na;
      _ods:={? _c='NAL'
            || _a*OP.ZM/100*_ile
            || _b*OP.ZM/100*_ile
            ?}
   ?}
|| _ods:=0
?}; _ods


\liczod1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [?????]
:: OPIS: Liczy odsetki dla danego rozrachunku na podstawie stop odsetek z tabeli
::   WE: _a - saldo Winien na dzien bedacy terminem zaplaty
::       _b - saldo Ma na dzien bedacy terminem zaplaty
::       _c - NAL naleznosc  ZOB zobowiazanie
::       _d - data sporzadzenia sprawozdania
::       _e -  0 - dla domyslnej tabeli odsetek (FINFO.TODS_DOM)
::             1 - dla tabeli odsetek ze zmiennej SER_KOR.TAB_ODS
::       _f - waluta
::  OLD: \liczod1/odsetki.fml
::----------------------------------------------------------------------------------------------------------------------
_ods:=_tymwn:=_tymma:=_pierw:=_licz:=0;
_licz1:=splaty; _op_tz:=data_na;
{? _op_tz<>date(0,0,0) & _d>_op_tz & _licz1>=0
|| {? _licz1>0
   || {? ZAP_OP.first
      || _licz:=0;
         {! |?
            {? ZAP_OP.DATA>_op_tz & ZAP_OP.DATA<=_d
            || _licz+=1;
               {? _pierw=0
               || _ods+={? _c='NAL'
                        || exec('ods','rozrach_ods',_op_tz+1,ZAP_OP.DATA ,_a,_e,_f)
                        || exec('ods','rozrach_ods',_op_tz+1,ZAP_OP.DATA ,_b,_e,_f)
                        ?}; _data:=ZAP_OP.DATA; _pierw:=1;
                  {? _licz1=_licz
                  || _tymwn+=ZAP_OP.WN;  _tymma+=ZAP_OP.MA;
                     _tymswn:=F.SWn(_tymwn,_tymma); _tymsma:=F.SMa(_tymwn,_tymma);
                     _ods+={? _c='NAL'
                           || exec('ods','rozrach_ods',_data+1,_d,_tymswn,_e,_f)
                           || exec('ods','rozrach_ods',_data+1,_d,_tymsma,_e,_f)
                           ?}
                  ?}
               || _ods+={? _c='NAL'
                        || exec('ods','rozrach_ods',_data+1,ZAP_OP.DATA,_tymswn,_e,_f)
                        || exec('ods','rozrach_ods',_data+1,ZAP_OP.DATA,_tymsma,_e,_f)
                        ?}; _data:=ZAP_OP.DATA;
                        {?_licz1=_licz
                        || _tymwn+=ZAP_OP.WN; _tymma+=ZAP_OP.MA;
                           _tymswn:=F.SWn(_tymwn,_tymma); _tymsma:=F.SMa(_tymwn,_tymma);
                           _ods+={? _c='NAL'
                                 || exec('ods','rozrach_ods',_data+1,_d,_tymswn,_e,_f)
                                 || exec('ods','rozrach_ods',_data+1,_d,_tymsma,_e,_f)
                                 ?}
                        ?}
               ?}
            ?};
            _tymwn+=ZAP_OP.WN;  _tymma+=ZAP_OP.MA;
            _tymswn:=F.SWn(_tymwn,_tymma); _tymsma:=F.SMa(_tymwn,_tymma); ZAP_OP.next()
         !}
      ?}
   || _ods:={? _c='NAL'
            || exec('ods','rozrach_ods',_op_tz+1,_d,_a,_e,_f)
            || exec('ods','rozrach_ods',_op_tz+1,_d,_b,_e,_f)
            ?}
   ?}
|| _ods:=0
?};
_ods


\ods
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [?????]
:: OPIS: Liczy odsetki dla zadanego okresu biorąc pod uwage zmiany stop procentowych uwzględnionych w tabeli odsetek ODS
::   WE: _a - data od ktorej będą liczone odsetki  (np. ter. pl.+1 lub ZAP_OP.DATA+1 !!!)
::       _b - data do ktorej będą liczone odsetki  (np. ZAP_OP.DATA)
::       _c - kwota od ktorej będą liczone odsetki
::       _d - niezadeklarowane lub = 0 - dla domyslnej tabeli odsetek (FINFO.TODS_DOM)
::                                   1 - dla tabeli odsetek ze zmiennej SER_KOR.TAB_ODS
::       _e - waluta (niezadeklarowane to narodowa)
::  OLD: \ods/odsetki.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_d')<=0 || _d:=0 ?};
{? var_pres('_e')<=0 || _e:=FINFO.NAROD ?};
_t_ods:={? _d=0 || FINFO.TODS_DOM || SER_KOR.TAB_ODS ?};
_wsk:=_ods:=_mian:=0;
_leczniczy:={? var_pres('WSK_PL',ODS)>0
            || {? 1-OP.TYP='Z'
               || {? XINFO.WIELKOSC='leczniczy' || 1 || 0 ?}
               || {? OP.KH().WIELKOSC='leczniczy' || 1 || 0 ?}
               ?}
            || 0
            ?};
ODS.blank(1);
ODS.index('DATA'); ODS.prefix(_t_ods,_e);
{? ODS.find_le(_a)
   & {? _leczniczy
     || {? ODS.WSK_PL>0 || 1 || {! |? ODS.prev() & ODS.WSK_PL=0 !}; {? ODS.WSK_PL>0 || 1 || 0 ?} ?}
     || {? ODS.WSK>0 || 1 || {! |? ODS.prev() & ODS.WSK=0 !}; {? ODS.WSK>0 || 1 || 0 ?} ?}
     ?}
   & _a<=_b
|| _wsk:={? _leczniczy || ODS.WSK_PL || ODS.WSK ?}; _mian:=ODS.MIAN;
   {! |?
      {? ODS.ZM<_a
      || _wsk:={? _leczniczy || ODS.WSK_PL || ODS.WSK ?}; _mian:=ODS.MIAN;
         {? ODS.next()
         || 1
         || _ods:=_c*(({? _leczniczy || ODS.WSK_PL || ODS.WSK ?}/ODS.MIAN)*(_b-_a+1)/100); 0
         ?}
      |? ODS.ZM=_a
      || _ods:=_c*(({? _leczniczy || ODS.WSK_PL || ODS.WSK ?}/ODS.MIAN)/100)+exec('ods','rozrach_ods',ODS.ZM+1,_b,_c,_d,_e); 0
      |? ODS.ZM>_a & ODS.ZM>_b
      || _ods:=_c*((_wsk/_mian)*(_b-_a+1)/100); 0
      |? ODS.ZM>_a & ODS.ZM<= _b
      || _ods:=_c*((_wsk/_mian)*(ODS.ZM-_a)/100)+exec('ods','rozrach_ods',ODS.ZM,_b,_c,_d,_e); 0
      || 0
      ?}
   !}
|? ODS.ZM>_a | ODS.ZM=date(0,0,0)
|| exec('add_tmp','rozrach_ods',_e,_a,_t_ods);  0
?};
_ods


\odsetki1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Naliczanie odsetek przed terminem płatności
::   WE: _a - ref rekordu tabeli OP
::  OLD: \odsetki1/odsetki.fml
::----------------------------------------------------------------------------------------------------------------------
_sum:=0; OP.cntx_psh; data_na:=date(0,0,0); splaty:=0;
{? OP.seek(_a) & FINFO.TODS_UST<>null
|| ZAP_OP.cntx_psh();
   ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref);
   {? ZAP_OP.first()
   || _d_zaplaty:=ZAP_OP.DATA+{? var_press('DNI_KH',SER_KOR)>0
                              || {? SER_KOR.DNI_KH
                                 || exec('ile_dni','rozrach_ods',{? 1+OP.TYP='Z'|| XINFO.WIELKOSC || OP.KH().WIELKOSC ?})
                                 || SER_KOR.DNI_TP
                                 ?}
                              || 30
                              ?};
      exec('czy_spl','rozrach_ods',OP.ref(),_d_zaplaty,{? SER_KOR.TYP='N'
                                                       || OP.TZ
                                                       || {? SER_KOR.DATA<OP.TZ || SER_KOR.DATA || OP.TZ ?}
                                                       ?});
      data_na:={? exec('get_par','#parametr',26)='T' || exec('dzienRob','kalendarz',_d_zaplaty,1,1) || _d_zaplaty ?};
      {? data_na=date(0,0,0) || data_na:=_d_zaplaty ?};
      {? splaty<>-1 & splaty<>-2 & splaty<>-3
      || {? data_na<>date(0,0,0) &
            {? SER_KOR.TYP='N'
            || data_na<OP.TZ
            || {? SER_KOR.DATA<OP.TZ || data_na<SER_KOR.DATA || data_na<OP.TZ ?}
            ?}
         || F.RObr(_a,data_na);

            _swn:=F.SWn(F.rwn,F.rma); _sma:=F.SMa(F.rwn,F.rma);
            _dat_gen:={? SER_KOR.DATA<OP.TZ || SER_KOR.DATA || OP.TZ ?};
            zwlprter:={? SER_KOR.TYP='W'
                      || _dat_gen-data_na
                      |? _d_sp:=exec('dat_spl','rozrach_ods'); _d_sp<>date(0,0,0)
                      || _d_sp-data_na
                      || _dat_gen-data_na
                      ?};
            {? zwlprter<0 || zwlprter:=0 ?};
            _sum:=exec('liczod1','rozrach_ods',_swn,_sma,OP.TYP,_dat_gen,FINFO.TODS_UST,OP.WAL)
         ?}
      ?}
   ?};
   ZAP_OP.cntx_pop()
?};
{? var_pres('ileprzed')>0 || ileprzed:=splaty ?};
{? var_pres('dprzed')>0 & data_na<>date(0,0,0) || dprzed:=data_na ?};
OP.cntx_pop; &data_na; &splaty;
_sum


\dat_spl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.50]
:: OPIS: Znajduje date splaty rozrachunku (naleznosci)
::   WY: data (zerowa, gdy nie ma splaty)
::  OLD: \dat_spl/odsetki.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=date(0,0,0); _ilebylo:=F.ROw(OP.ref,OP.TZ); _ilespl:=0;
ZAP_OP.cntx_psh();
{? ZAP_OP.first()
|| {! |?
      {? (ZAP_OP.WN<ZAP_OP.MA) & ZAP_OP.DATA<=OP.TZ
      || _ilespl+=F.SMa(ZAP_OP.WN,ZAP_OP.MA);
         {? _ilespl$2>=_ilebylo$2 || _zwrot:=ZAP_OP.DATA ?}
      ?};
      _zwrot=date(0,0,0) & ZAP_OP.next()
   !}
?};
ZAP_OP.cntx_pop();
_zwrot


\ods_rat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.70]
:: OPIS: Nalicza odsetki dla rozrachunku ratalnego (OP ustawiony w biezacym buforze)
::   WE: _a - data (stan na dzien)
::  OLD: \ods_rat/odsetki.fml
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=0; last_rat:=obj_new(2); last_rat[1]:=1; last_rat[2]:=0; _splaci:=0;
ZAP_OP.cntx_psh(); ZAP_OP.index('OP'); ZAP_OP.prefix(OP.ref); _typ:=(1+OP.TYP);
{? ZAP_OP.first()
|| {!|?
     {? ZAP_OP.DATA<=_a
     || {? _typ='N' & ZAP_OP.WN<ZAP_OP.MA
        || _splaci+=ZAP_OP.MA
        |? _typ='Z' & ZAP_OP.MA<ZAP_OP.WN
        || _splaci+=ZAP_OP.WN
        ?}
     ?};
     ZAP_OP.next()
   !}
?};
{? ZAP_OP.first()
|| {!|?
     {? ((_typ='N' & ZAP_OP.WN=0) | (_typ='Z' & ZAP_OP.MA=0)) & ZAP_OP.DATA<=_a
     || _splata:={? _typ='N'
                 || F.SMa(ZAP_OP.WN,ZAP_OP.MA)
                 || F.SWn(ZAP_OP.WN,ZAP_OP.MA)
                 ?};
        ZAP_OP.cntx_psh(); ZAP_OP.prefix(OP.ref,ZAP_OP.DATA);
        _ref:=ZAP_OP.ref();
        {? ZAP_OP.size()>1
        || ZAP_OP.next();
           {! |?
              {? _typ='N' & ZAP_OP.WN<ZAP_OP.MA
              || _splata+=F.SMa(ZAP_OP.WN,ZAP_OP.MA)
              |? _typ='Z' & ZAP_OP.MA<ZAP_OP.WN
              || _splata+=F.SWn(ZAP_OP.WN,ZAP_OP.MA)
              ?};
              ZAP_OP.next()
           !}; _ref:=ZAP_OP.ref()
        ?};
        ZAP_OP.cntx_pop(); ZAP_OP.seek(_ref);
        {! _i:=last_rat[1]..DRB.LRAT
        |? _splata>0
        |! _iledosp:=t_drb[_i][1]-last_rat[2];
           _w6:={? _iledosp>_splata || _splata || _iledosp ?}; _splata-=_w6; _gen:=0;
           {? _iledosp=_w6
           || last_rat[1]+=1; last_rat[2]:=0
           || last_rat[2]+=_w6;  {? _splaci<_iledosp || _gen:=1 ?}
           ?}; _splaci-=_w6;
           _w3:={? exec('get_par','#parametr',26)='T'
                || exec('dzienRob','kalendarz',t_drb[_i][3],1,1)
                || t_drb[_i][3]
                ?};
           {? _w3=date(0,0,0) || _w3:=t_drb[_i][3] ?};
           _w5:=ZAP_OP.DATA;  _w7:=_w5-_w3;
           {? _gen & _w3<>date(0,0,0) & _w7>0 & _a>_w3
           || _zwrot+={? OP.ZM$4<>0
                      || ((_w7*_w6*OP.ZM)/100)$2
                      || exec('ods','rozrach_ods',_w3+1,ZAP_OP.DATA,_w6,1,OP.WAL)
                      ?}
           ?}
        !}
     ?};
     ZAP_OP.next()
   !};
   {! _i:=last_rat[1]..DRB.LRAT
   |! _w3:={? exec('get_par','#parametr',26)='T'
           || exec('dzienRob','kalendarz',t_drb[_i][3],1,1)
           || t_drb[_i][3]
           ?};
      {? _w3=date(0,0,0) || _w3:=t_drb[_i][3] ?};
      {? _w3<>date(0,0,0) & _a>_w3
      || _iledosp:=t_drb[_i][1]-last_rat[2];
         _w6:=_iledosp; last_rat[2]:=0;
         {? _iledosp>0
         || _w5:=date(0,0,0); _w7:=_a-_w3;
            _zwrot+={? _w3<>date(0,0,0)
                    || {? OP.ZM$4<>0
                       || ((_w7*_w6*OP.ZM)/100)$2
                       || exec('ods','rozrach_ods',_w3+1,SER_KOR.DATA,_w6,1,OP.WAL)
                       ?}
                    || 0
                    ?}
         ?}
      ?}
   !}
?};
obj_del(last_rat); ZAP_OP.cntx_pop();
{? _zwrot$2<0 || _zwrot:=0 ?}; _zwrot


\ile_dni
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [12.51]
:: OPIS: sprawdza, ile dni na zapłatę
::   WE: _a - wielkość przedsiębiorstwa
::   WY: termin zapłaty
::----------------------------------------------------------------------------------------------------------------------
_ile_dni:=0;
_ile_dni:={? var_pres('WIELKOSC',XINFO)>0
          || {? -_a='publiczny'
             || XINFO.L_D_PUB
             || XINFO.L_D_POZ
             ?}
          || 30
          ?};
_ile_dni

:Sign Version 2.0 jowisz:1048 2020/10/16 15:22:57 8b427ff3ca34780cbcc8d1d24a9bcf99f35b1ebcca79de62f505bfb6a8ca9b8d69fd119b6eef554a422f0045590edf55a818c3e98c4dd8030ba7bada1ca641eb84c5559fe39c11aa3871ab5b2744442854d2780984d1b71946c6a7756d23326c51ef5fe1df4ecdf601cbf769ddf12c5479fa4d15a1e613fe6ba58d8c689e750d
