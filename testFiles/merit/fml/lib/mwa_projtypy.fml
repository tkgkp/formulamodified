:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: mwa_projtypy.fml
:: Utworzony: 13.02.2019
:: Autor: Markus
:: Systemy:
::======================================================================================================================
:: Zawartość: Formuły do obsługi typów projektu przez MacroWebAPI
::======================================================================================================================


\serialize_projtypy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: Formuła pomocnicza do serializacji rekordów z tabeli PROJTYPY.
::       Kontekst wywołania: ustawiona dziedzina tabeli PROJTYPY
::   WE: _a - FILE - obiekt plikowy przeznaczony do zapisu wynikowego JSONa
::   WY: 0 / 1 - czy udało się wygenerować wynikowego JSONa do pliku
::----------------------------------------------------------------------------------------------------------------------
_resp:=fopen(null,'Uw',,1,1);

_data:="
   PROJTYPY.xml_records(params_get().resp,,'data','p',,'noheader=1,norecord=0,nodata=1,indentation=1'
      ,'REFERENCE',,'IDADD',,'T',,'NAZ',,'KOD',,'R',,'SJO',
   );
''
";
_tab:=tab_tmp(,'STATUS','STRING[20]','');
_tab.STATUS:='OK'; _tab.add();
params_set('resp',_resp);
_tab.xml_records(_resp,_a.METHOD+'Response',,'p',_a.OUTNSPC,'norecord=1'
   ,'STATUS:status',
   ,'',_data
);

_resp


\read_projtypy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Markus [19.22]
:: OPIS: Odczytuje wszystkie typy projektów.
::   WE: _a [FILE]   - Obiekt plikowy przeznaczony do zapisu wynikowego JSONa.
::       _b [STRING] - Opcje wywołania.
::   WY: STRING - JSON z błędami w przypadku niepowodzenia
::       0 / 1 - czy udało się wygenerować wynikowego JSONa do pliku
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
PROJTYPY.cntx_psh();
PROJTYPY.index('T');
PROJTYPY.prefix();
{? PROJTYPY.first()
||
   _result:=exec('serialize_projtypy','mwa_projtypy',_par)
||
   _wsenv:=exec('wsenv','#mwapi');
   _wsenv.erase();
   _wsenv.add_error('Brak typów projektu w systemie.'@);
   _resp:=_wsenv.to_json();
   _result:=exec('serialize_res','mwapi',_par,_resp)
?};
PROJTYPY.cntx_pop();
_result


\prolog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Formuła startowa usługi sieciowej
::----------------------------------------------------------------------------------------------------------------------
_par:=params_get();
exec('prolog','mwapi',_par);
~~


\epilog
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TS [19.22]
:: OPIS: Fomuła końcowa usługi sieciowej
::----------------------------------------------------------------------------------------------------------------------
exec('epilog','mwapi');
~~

:Sign Version 2.0 jowisz:1028 2019/06/07 15:59:55 93e447810263fce8de73c81e2d7f4300035d7a2df029957be1f8730f43fe3ab39f21e56dff27a7a6f7ba3fed77064eb9be715553c4509d8f32995bdfb15e73cbc997c9f0430f8df794ad8f773ba2e8ee5ad731ad7e2454aaa3a8782ead1cfc66aa02f93638da90f9dfb35ef2c1df752f2fd3b5c5d70809029487d5417cc8ec42
