:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: plob_l.fml
:: Utworzony: 18.04.2018
:: Autor: TMR
::======================================================================================================================
:: Zawartość: Formuły do obsługi tabeli obiektów lokalizacji
::======================================================================================================================

\mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.42]
:: OPIS: Funkcja dodająca/aktualizująca obiekty lokalizacji
::   WE: _a [NUMBER] - czy wyświetlać komunikaty?
::       _b [STRING] - tryb pracy: 'add' - dodaje obiekty; 'update' - aktualizuje obiekty o wybrane
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
 _msg:={? var_pres('_a')=type_of(0)  || _a || 0  ?};
_tryb:={? var_pres('_b')=type_of('') || _b || '' ?};

:: tabela przechowująca brakujące rekordy z tabeli źródłowej
_tab:=tab_tmp(1,
   'SYMBOL','STRING[50]','Symbol',
   'OPIS','STRING[100]','Opis',
   'SEL','STRING[1]','Wybrany?',
   'REF','STRING[16]','Ref'
);

_win:=_tab.mk_sel('Nowe lokalizacje'@,,0,'#modplob_p20181',,,,,'U');
_tab.win_fld(_win,,'SYMBOL',,,20,,,,,'Symbol lokalizacji'@);
_tab.win_fld(_win,,'OPIS',,,50,,,,,'Opis lokalizacji'@);
_tab.win_fld(_win,,'SEL',,,,,,,,'Czy uwzględniać lokalizację podczas aktualizacji?'@,2,,"'T'","'N'");
_tab.win_act(_win,,'Formuła','Uwzględnij'@@,,,"cur_tab(1,1).SEL:='T';cur_tab(1,1).put()",,1,1);
_tab.win_act(_win,,'Formuła','Pomiń'@@,,,"cur_tab(1,1).SEL:='N';cur_tab(1,1).put()",,,1);
_tab.win_act(_win,,'Formuła','Dalej'@@,,,"sel_exit()",,,1,,,'D',,'target=window');
_tab.win_btn(_win,'text=%1,icon=xwin16.png:22,panel=bottom,align=end'['Dalej'@],'menu:D');
_tab.fld_attr('REF',2);
_tab.win_sel(_win);

_result:=0;
_firma:=exec('ref_firma','#firma');
PLOB_L.cntx_psh();
PLOB_L.index('UNIQUE');
UD_DEF.cntx_psh();
UD_DEF.index('SYMBOL');
UD_SCH.cntx_psh();
UD_SCH.index('SYMBOL');
UD_TYP.cntx_psh();
UD_TYP.index('SYMBOL');
UD_TYP.prefix();
PLOB_OL.cntx_psh();
PLOB_OL.index('AKT');
PLOB_OL.prefix(_firma,'T');
{? PLOB_OL.first() & PLOB_OL.TAB='UD_SKL'
|| PLOB_L.prefix(_firma,PLOB_OL.ref());
   _ud_skl_firma:=exec('ud_skl_firma','schemat','PODZORG');
   {? _ud_skl_firma<>null()
   || {? UD_TYP.find_key('PODZORG','PODZORG')
      || UD_SCH.prefix(UD_TYP.ref());
         {? UD_SCH.find_key('STRORG','STRORG')
         || UD_DEF.prefix(UD_SCH.ref());
            {? UD_DEF.first()
            || UD_SKL.cntx_psh();
               {? _msg || PROGRESS.set(UD_DEF.size(),'Aktualizacja obiektów lokalizacji...') ?};
               {!
               |? {? (UD_DEF.UD_SKL().SCIEZKA*($_ud_skl_firma+8)>0)
                  || _not_exist:=~PLOB_L.find_key($UD_DEF.UD_SKL);
                     {? _not_exist | _tryb='add'
                     || _tab.blank();
                        _tab.REF:=$UD_DEF.ref();
                        _tab.SYMBOL:=UD_DEF.UD_SKL().SYMBOL;
                        _tab.OPIS:=UD_DEF.UD_SKL().OPIS;
                        _tab.SEL:={? _tryb='add' || 'T' || 'N' ?};
                        _tab.add()
                     ?}
                  ?};
                  {? _msg || PROGRESS.next() ?};
                  UD_DEF.next()
               !};
               {? _msg || PROGRESS.close() ?};
               UD_SKL.cntx_pop()
            ?}
         ?}
      ?};

:: dodanie wybranych rekordów
      {? _tryb='update' || _tab.select() ?};
      {? _tab.first()
      || UD_SKL.cntx_psh();
         UD_DEF.cntx_psh();
         UD_DEF.prefix();
         {!
         |? {? _tab.SEL='T' & UD_DEF.seek(_tab.REF)
            || _add:=0;
               {? ~PLOB_L.find_key($UD_DEF.UD_SKL)
               || _add:=1;
                  PLOB_L.blank();
                  PLOB_L.FIRMA:=_firma;
                  PLOB_L.PLOB_OL:=PLOB_OL.ref()
               ?};
               PLOB_L.REF:=$UD_DEF.UD_SKL;
               PLOB_L.SYMBOL:=UD_DEF.UD_SKL().SYMBOL;
               PLOB_L.OPIS:=UD_DEF.UD_SKL().OPIS;
               _result+={? _add
                        || PLOB_L.AKT:=PLOB_OL.AKT;
                           PLOB_L.add()
                        || PLOB_L.put()
                        ?}
            ?};
            _tab.next()
         !};
         UD_DEF.cntx_pop();
         UD_SKL.cntx_pop()
      ?}
   ?}

|| {? _msg || FUN.emsg('Brak aktywnej definicji obiektu lokalizacji.'@) ?}
?};
PLOB_OL.cntx_pop();
UD_TYP.cntx_pop();
UD_SCH.cntx_pop();
UD_DEF.cntx_pop();
PLOB_L.cntx_pop();
_result


\dodaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Funkcja aktualizująca bazę danych powiązanych obiektów
::   WE: _a [NUMBER] - czy wyświetlać komunikaty?
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_msg:={? var_pres('_a')=type_of(0) || _a || 0 ?};
exec('mod','plob_l',_msg,'add')


\aktualizuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Funkcja aktualizująca bazę danych powiązanych obiektów
::   WE: _a [NUMBER] - czy wyświetlać komunikaty?
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_msg:={? var_pres('_a')=type_of(0) || _a || 0 ?};
exec('mod','plob_l',_msg,'update')


\domyslny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Funkcja na obiekt domyślny
::   WE: _a [REFERENCE] - wskazanie na pracownika
::       _b [DATE]      - data badania
::   WY: ''/napis z refem konta kosztowego i procentem podziału przypadającym na to konto
::----------------------------------------------------------------------------------------------------------------------
_result:='';
_p_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};
 _data:={? var_pres('_b')=type_of(date) || _b || return(_result) ?};
::
_sep:='@';
Cntx.psh(P_KK,P_KK_P);
P_KK.index('OD');
P_KK.prefix(_p_ref);
P_KK_P.index('KONTO');
{? P_KK.find_le(_data) | P_KK.last()
|| P_KK_P.prefix(P_KK.ref());
   {? P_KK_P.first()
   || {!
      |? _result+=$P_KK_P.KK+_sep+form(P_KK_P.PR,,2,'9.')+_sep;
         P_KK_P.next()
      !}
   || _result:=$P_KK.KK+_sep+'100.00'+_sep
   ?}
?};
Cntx.pop(P_KK,P_KK_P);
_result


\pracownicy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Pracownicy w obiekcie lokalizacji
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:=exec('tab_zal','stanprac');
 _plob_h:={? var_pres('_a')=7 || _a   || return(_tab) ?};
_warstwa:={? var_pres('_b')=2 || ~-_b || return(_tab) ?};
    _beg:={? var_pres('_c')=4 || _c   || return(_tab) ?};
    _end:={? var_pres('_d')=4 || _d   || return(_tab) ?};
  _lokal:={? var_pres('_e')=7 || _e   || null         ?};

_ref:=exec('getSourceRef','plob',_plob_h);

UD_SKL.cntx_psh();
UD_SKL.prefix();
_ref_sql:=exec('FindAndGet','#table',PLOB_L,_lokal,,"PLOB_L.REF",'');
_jedn:={? _lokal || {? UD_SKL.seek(_ref_sql) || UD_SKL.ref() || null() ?} || ~~ ?};
UD_SKL.cntx_pop();

P.cntx_psh();
P.prefix();
:: wyszukujemy zatrudnionych pracowników w zakresie dat
_tabPrac:=exec('getPracZatr','plob',_beg,_end);
{? _tabPrac.first()
|| {!
   |? {? P.seek(_tabPrac.P)
      || _p_ref:=P.ref();
         _lokal_ok:={? var_pres('_jedn')=type_of(null()) || P.WYDZIAL=_jedn || 1 ?};
         {? _lokal_ok &
            (_plob_h=null | exec('isPracaNaOb','plob',_p_ref,_plob_h,_warstwa,_beg,_end,_ref))
         || exec('add_zal','stanprac',_tab,_p_ref,'',1,,,,,,'N')
         ?}
      ?};
      _tabPrac.next()
   !}
?};
P.cntx_pop();
_tab


\aktywuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Funkcja aktywująca obiekty lokalizacji dla wskazanej definicji
::   WE: _a [REFERENCE] - wskazanie na obiekt lokalizacji PLOB_L
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};
exec('aktywuj_dezaktywuj','plob_l',_ref,'T')


\dezaktywuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Funkcja dezaktywująca obiekty lokalizacji dla wskazanej definicji
::   WE: _a [REFERENCE] - wskazanie na obiekt lokalizacji PLOB_L
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};
exec('aktywuj_dezaktywuj','plob_l',_ref,'N')


\aktywuj_dezaktywuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Dezaktywuje/Aktywuje definicję obiektu lokalizacji
::   WE: _a [REFERENCE] - wskazanie na obiekt lokalizacji - PLOB_L
::       _b [STRING]    - akcja: 'T' - aktywuje, 'N' - dezaktywuje obiekt lokalizacji
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
  _ref:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};
_akcja:={? var_pres('_b')=type_of('')     || _b || return(_result) ?};

{? _akcja<>'T' & _akcja<>'N' || return(_result) ?};

PLOB_OL.cntx_psh();
PLOB_L.cntx_psh();
PLOB_L.index('UNIQUE');
PLOB_L.prefix();
{? PLOB_L.seek(_ref)
|| PLOB_H.cntx_psh();
   PLOB_H.index('OD');
   {? PLOB_L.AKT<>_akcja & (_akcja='N' | (_akcja='T' & PLOB_L.PLOB_OL().AKT='T'))
   || PLOB_L.AKT:=_akcja;
      _result:=PLOB_L.put();
      {? _result & _akcja='N'
      || exec('dezaktywuj','plob_h',PLOB_L.ref())
      ?}
   ?};
   PLOB_H.cntx_pop()
?};
PLOB_L.cntx_pop();
PLOB_OL.cntx_pop();
_result


\plob_l_aktualizuj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Akcja "Aktualizuj" okna wertowania WER
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('spr_par','plob',353,1)
|| {? exec('existActiv','plob_ol')
   || {? FUN.ask('Czy wykonać aktualizację obiektów lokalizacji na podstawie aktywnej definicji?'@)
      || {? (_fml:=exec('getForm4Acr','plob_ol','F_AKT'))<>''
         || {? ($_fml)()
            || FUN.emsg('Zakończono aktualizację obiektów lokalizacji.'@)
            || FUN.emsg('Nie zaktualizowano obiektów lokalizacji.'@)
            ?}
         ?}
      ?}
   || FUN.emsg('Brak aktywnej definicji obiektu lokalizacji.'@)
   ?}
?}


\plob_l_aktywuj_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Przed "Aktywuj" dla grupy rekordów tabeli PLOB_L
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FUN.ask('Czy aktywować zaznaczone lokalizacje?'@)


\plob_l_aktywuj_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Przed "Aktywuj" dla rekordu tabeli PLOB_L
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
_grupowa:=PLOB_L.sel_size();
{? _grupowa | FUN.ask('Czy aktywować wybraną lokalizację?'@)
|| _ok:=1;
   PLOB_OL.cntx_psh();
   {? PLOB_L.PLOB_OL().AKT='N'
   || _ok:=0;
      {? ~_grupowa
      || FUN.info('Nie można aktywować wskazanej lokalizacji.\n'
                  'Definicja obiektu lokalizacji nie jest aktywna.'@)
      ?}
   ?};
   PLOB_OL.cntx_pop();
   {? _ok || _result:=exec('aktywuj','plob_l',PLOB_L.ref()) ?}
?};
_result


\plob_l_dezakt_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Przed "Dezaktywuj" dla grupy rekordów tabeli PLOB_L
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FUN.ask('Czy dezaktywować zaznaczone lokalizacje?'@)


\plob_l_dezakt_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Przed "Dezaktywuj" dla rekordu tabeli PLOB_L
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
{? PLOB_L.sel_size() | FUN.ask('Czy dezaktywować wybraną lokalizację?'@)
|| _result:=exec('dezaktywuj','plob_l',PLOB_L.ref())
?};
_result


\plob_l_usun_bg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Przed "Usuń" dla grupy rekordów tabeli PLOB_L
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
FUN.ask('Czy usunąć zaznaczone lokalizacje?'@)


\plob_l_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Przed "Usuń" dla rekordu tabeli PLOB_L
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_result:=1;
{? PLOB_L.sel_size() | FUN.ask('Czy usunąć wybraną lokalizację?'@)
|| _result:=exec('delete','plob_l',PLOB_L.ref())
?};
_result


\plob_l_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: "Po odświeżeniu" okienka WER tabeli PLONB_L w oknie grupowym GRP tabeli PLOB_OL
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
grp_disp(PLOB_H,'WER')


\plob_l_wer_rb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.42]
:: OPIS: Rekord przed dla okna wertowania WER tabeli PLOB_L
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_akc:='';
{? PLOB_L.sel_size()=0
|| _akc:={? PLOB_L.AKT='T' || 'A' || 'E' ?}
?};
PLOB_L.actions_grayed('WER',_akc);
''


\delete4
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Kasuje rekordy tabeli PLOB_L (wykonywane w transakcji!!!) dla wskaznego rekordu _ref
::   WE: _a - PLOB_OL.ref()
::   WY: >0 -wyczyszczone,
::      <=0 -niewyczyszczone
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};

_can_continue:=1;

:: powrot w przypadku zerwanej transakcji
{? do_state()=2 || return(-100) ?};

:: zalozenie transakcji
_mydo:=do_state()=0;
{? _mydo || do() ?};

_firma:=exec('ref_firma','#firma');

PLOB_L.cntx_psh();
PLOB_L.index('UNIQUE');
PLOB_L.prefix(_firma,_ref);
{? PLOB_L.first()
|| {!
   |? _can_continue:=exec('delete','plob_l',PLOB_L.ref());
      _can_continue>0 & PLOB_L.first()
   !}
?};
PLOB_L.cntx_pop();

{? _can_continue>0
|| _result:=1
|| undo()
?};
{? _mydo || end() ?};
_result


\delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Kasuje podany rekord tabeli PLOB_L (wykonywane w transakcji!!!)
::   WE: _a - PLOB_L.ref()
::   WY: >0 -wyczyszczone,
::      <=0 -niewyczyszczone
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};

:: jeżeli transakcja została zerwana, to nie ma sensu przetwarzać formuły
{? do_state()=2 || return(-100) ?};

_can_continue:=1;

:: założenie transakcji
_mydo:=do_state()=0;
{? _mydo || do() ?};

PLOB_L.cntx_psh(); PLOB_L.clear();
{? PLOB_L.seek(_ref)
|| {? exec('clean','plob_l',_ref)>0
   || {? PLOB_L.del(,1)>0
      || _result:=1
      || undo();
         _result:=-3
      ?}
   || _result:=-2
   ?}
|| _result:=0
?};
PLOB_L.cntx_pop();

{? _result<0
|| undo()
?};
{? _mydo || end() ?};
_result


\clean
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Czysci powiazania do rekordu tabeli PLOB_L
::   WE: _a - PLOB_L.ref()
::   WY: >0 -wyczyszczone,
::       <=0 -niewyczyszczone
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_ref:={? var_pres('_a')=type_of(null) || _a || return(_result) ?};

{? do_state()=2 || return(-100) ?};

_can_continue:=1;
:: założenie transakcji
_mydo:=do_state()=0;
{? _mydo || do() ?};

:: --- powiązania do PLOB_L---
_can_continue:=exec('delete4','plob_h',_ref);

:: --- wszystkie powiazania usuniete? ---
{? _can_continue>0
|| _result:=1
|| undo()
?};

{? _mydo || end() ?};
_result


\lokalizacje
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Lista lokalizacji
::   WE: _a [NUMBER] - minimalny poziom od którego będą pobierane lokalizacje
::----------------------------------------------------------------------------------------------------------------------
_min_poziom:={? var_pres('_a')=type_of(0) || _a || 0 ?};

_firma:=exec('ref_firma','#firma');

_sql:=''+"
   select
      PLOB_L.REFERENCE as REF,
      PLOB_L.SYMBOL as LOK_SYM,
      PLOB_L.OPIS as LOK_OPIS,
      PLOB_L.REF as UD_SKL,
      0 POZIOM
   from
      PLOB_L
   where
      PLOB_L.AKT like 'T'
      and
      PLOB_L.FIRMA=:_a
   order by 5,2,3
";
_RS:=sql(_sql,_firma);

UD_SKL.cntx_psh();
UD_SKL.index('SYMBOL');
UD_SKL.prefix();
{!
|? _RS.find_key(0)
|! {? UD_SKL.seek(_RS.UD_SKL)
   || _path:=gsub(UD_SKL.SCIEZKA,'|','');
      _nr:=((+_path)/8)-1;
      _nr:={? _nr>0 || _nr || 0 ?};
      _RS.POZIOM:={? _nr || _nr || 9999 ?}
   || _RS.POZIOM:=9999
   ?};
   {? _RS.POZIOM>=_min_poziom
   || _RS.put()
   || _RS.del()
   ?}
!};
UD_SKL.cntx_pop();
_RS


\plob_l_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [18.22]
:: OPIS: Pobiera dane o aktywnych obiektach do planowania i przypisanych im wg daty MPK
::   WE: _a [REFERENCE] - wskazanie na pracownika
::       _b [DATE]      - data, na którą pobierane sa aktywne powiązania
::----------------------------------------------------------------------------------------------------------------------
_p_ref:={? var_pres('_a')=type_of(null) || _a || null() ?};
 _data:={? var_pres('_b')=type_of(date) || _b || date() ?};

_z_date:=date(0,0,0);
_firma:=exec('ref_firma','#firma');

_sql:=''+"
   select
      0 as POZIOM,
      'N' as OB_DOM,
      space(10) OD,
      space(10) DO,
      space(16) as REF,
      space(16) as OB_REF,
      space(16) as OB_SYM,
      space(90) as OB_OPIS,
      space(16) as KK_REF,
      space(35) KK_SYM,
      space(60) KK_NAZWA,
      space(16) KK_DOM,
      space(10) PR_DOM
   from
      syslog
   where 2=1
   order by 3,4
";
_RS:=sql(_sql);

P.cntx_psh();
P.index('OSOBA');
P.prefix();
_ob_dom:={? P.seek(_p_ref) || exec('ob_dom','plob',P.ref(),_data) || '' ?};
P.cntx_pop();

PLOB_L.cntx_psh();
PLOB_L.index('UNIQUE');
PLOB_H.cntx_psh();
PLOB_H.index('OD');
PLOB_OL.cntx_psh();
PLOB_OL.index('AKT');
PLOB_OL.prefix(_firma,'T');
Cntx.psh(UD_SKL,UD_DEF,UD_SCH);
{? PLOB_OL.first()
|| PLOB_L.prefix(_firma,PLOB_OL.ref());
   {? PLOB_L.first()
   || _ok:=1;
      {!
      |? PLOB_H.prefix(_firma,PLOB_L.REF);
         {? PLOB_H.first()
         || {!
            |? {? (PLOB_H.DATA_OD<=_data & (#PLOB_H.DATA_DO=0 | _data<=PLOB_H.DATA_DO)) | (_data=_z_date)
               || _is_in_ob_dom:=_ob_dom<>'' & _ob_dom*($PLOB_H.KK+'@');
                  _RS.blank(1);
                  _RS.REF:=$PLOB_H.ref();
                  _RS.OB_REF:=PLOB_L.REF;
                  _RS.OB_SYM:=PLOB_L.SYMBOL;
                  _RS.OB_OPIS:=PLOB_L.OPIS;
                  _RS.KK_REF:=$PLOB_H.KK;
                  _RS.KK_SYM:=PLOB_H.KK().SYM;
                  _RS.KK_NAZWA:=KK.NAZWA;
                  _RS.OB_DOM:={? _ok || {? _is_in_ob_dom || _ok:=0; 'T' || 'N' ?} || 'N' ?};
                  _RS.OD:=$PLOB_H.DATA_OD;
                  _RS.DO:=$PLOB_H.DATA_DO;
                  _RS.KK_DOM:={? _is_in_ob_dom || $PLOB_H.KK || '' ?};
                  _RS.PR_DOM:={? _is_in_ob_dom
                              || {? var_press('_spl')>0 || &_spl ?};
                                 _spl:=spli_str(_ob_dom,($PLOB_H.KK+'@'));
                                 (_spl[2]*'@')-1+_spl[2]
                              || ''
                              ?};
                  _RS.add()
               ?};
               PLOB_H.next()
            !}
         ?};
         PLOB_L.next()
      !}
   ?}
?};
PLOB_OL.cntx_pop;
PLOB_H.cntx_pop;
PLOB_L.cntx_pop;
Cntx.pop(UD_SKL,UD_DEF,UD_SCH);
_RS

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:21 2b0437d288fd7a2e6e99d5f8adddbaf97ed144809f387605f68f61e98f0a4c8bdd3639c968507d2b59620b1f321febf895d9d35cce1c2908a3fb004ecd35afc1d6e029f6d33a46740a43ef02c13eaac5e9ba6e5973dbc204e1c124ccdf3b1d611b59772f7c656c13c6cfdd1794866c4f1efce5ca6589ba8c5e29697bea1c9ef9
