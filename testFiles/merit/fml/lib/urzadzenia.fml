:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: urzadzenia.fml (dawniej skid_uz.fml)
:: Utworzony: 2008-10-26
:: Autor: PJ
::======================================================================================================================
:: Zawartość: Formuły do obsługi urządzeń zewnętrznych, arkuszy danych do inwentaryzacji itp.
::======================================================================================================================


\be_etykieta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła przed redakcją pola Etykieta w oknie parametrów wydruku
::----------------------------------------------------------------------------------------------------------------------
{? PARWYD.TYPDR<>null
|| URZ_KOM.prefix(); URZ_KOM.seek(PARWYD.TYPDR().URZ_KOM);
   1
|| 0
?}


\be_katal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [PJ] [8.60]
:: OPIS: Przed redakcją pola KATALOG tabeli PARWYD, jeśli pliki na serwerze to
::       edycja katalogu lokalnego niedostępna
::----------------------------------------------------------------------------------------------------------------------
{? PARWYD.FILEFIND = 1 || 0 || 1 ?}


\be_czytnik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Przed redakcją pola PARWD.TYPKOL
::----------------------------------------------------------------------------------------------------------------------
URZ_KAT.cntx_psh();
URZ_KAT.index('NAZWA');
URZ_KAT.prefix('CZYTNIK','CZYTNIK');
{? URZ_KAT.first()
|| ZM.KAT:=URZ_KAT.ref()
|| ZM.KAT:=null
?};
URZ_KAT.cntx_pop();
1


\be_drukarka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Przed redakcją pola PARWD.TYPDR
::----------------------------------------------------------------------------------------------------------------------
URZ_KAT.cntx_psh();
URZ_KAT.index('NAZWA');
URZ_KAT.prefix('DRUKARKA','DRUKARKA');
{? URZ_KAT.first()
|| ZM.KAT:=URZ_KAT.ref()
|| ZM.KAT:=null
?};
URZ_KAT.cntx_pop();
1


\ae_drukarka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła po redakcji pola Drukarka w oknie parametrów wydruku
::----------------------------------------------------------------------------------------------------------------------
{? PARWYD.TYPDR<>null
|| URZ_KOM.prefix();
   URZ_KOM.seek(PARWYD.TYPDR().URZ_KOM);
   {? PARWYD.URZ_LAB<>null
   || {? PARWYD.TYPDR().URZ_KOM<>PARWYD.URZ_LAB().URZ_KOM
      || PARWYD.URZ_LAB:=null
      ?}
   ?}
|| PARWYD.URZ_LAB:=null
?};
1


\be_port
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła przed redakcją pola URZ.PORT
::----------------------------------------------------------------------------------------------------------------------
{? URZ.TYPPODL='B' || 1 || 0 ?}


\f3_port
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła na F3 w polu PORT tabeli URZ
::----------------------------------------------------------------------------------------------------------------------
URZ_PORT.index('NAZWA');
URZ_PORT.prefix();
{? URZ.PORT<>''
|| URZ_PORT.find_key(URZ.PORT, URZ.PORT)
?};
{? URZ_PORT.select(,1)
|| URZ.PORT:=URZ_PORT.NAZWA
?};
0


\be_rodzpodl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła przed redakcją pola URZ.RODZPODL
::----------------------------------------------------------------------------------------------------------------------
{? URZ.TYPPODL='B' || 1 || 0 ?}


\ae_typ_podl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła po redakcji typu podłączenia w oknie redagowania parametrów urządzenia zewnętrznego
::----------------------------------------------------------------------------------------------------------------------
_win:=URZ.win_edit('?');
{? URZ.TYPPODL='B'
|| {? URZ.DRIVER<>'' || URZ.DRIVER:='' ?};
   URZ.efld_opt(_win, 'mark=0',,'DRIVER');
   URZ.efld_opt(_win, 'mark=1',,'PORT')
|? URZ.TYPPODL='S'
|| {? URZ.PORT<>'' || URZ.PORT:='' ?};
   URZ.efld_opt(_win, 'mark=1',,'DRIVER');
   URZ.efld_opt(_win, 'mark=0',,'PORT')
?};
1


\ae_urz_r_plik
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła po redakcji typu pliku (R_PLIK) w oknie redagowania formatów plików
::----------------------------------------------------------------------------------------------------------------------
_win:=FILE_FRM.win_edit('?');
{? FILE_FRM.R_PLIK='TXT'
|| FILE_FRM.efld_opt(_win, 'mark=1',,'SEP')
|| FILE_FRM.efld_opt(_win, 'mark=0',,'SEP')
?};
1


\be_driver
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła przed redakcją pola URZ.DRIVER
::----------------------------------------------------------------------------------------------------------------------
{? URZ.TYPPODL='S' || 1 || 0 ?}


\f3_drukarki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła na F3 w polu URZ.DRIVER, wyświetla liste zainstalowancyh sterowników drukarek
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('TMP_DRV');
_lista:=myDPRINT.Drukarki();
{? _lista<>''
|| STR.split(_lista,';');
   TMP_DRV:=tab_tmp(1,'DRIVER','STRING[60]','Nazwa sterownika');
   _sel:=TMP_DRV.mk_sel('Sterowniki drukarek'@,,1);
   TMP_DRV.win_sel(_sel);
   TMP_DRV.win_act(_sel,,'Formuła','Wybierz'@@,,,"","sel_exit()",1);
   {! |?
      TMP_DRV.DRIVER:=STR.get_word();
      TMP_DRV.add();
      STR.next()
   !};
   {? TMP_DRV.select()
   || URZ.DRIVER:=TMP_DRV.DRIVER
   ?}
|| FUN.emsg('W systemie brak zainstalowanych sterowników drukarek.'@)
?};
VAR_DEL.delete('TMP_DRV');
0


\urz_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła dodaje nowe urządzenie zewnętrzne (drukarke)
::----------------------------------------------------------------------------------------------------------------------
URZ_KAT.index('NAZWA');
URZ_KAT.prefix('DRUKARKA','DRUKARKA');
{? URZ_KAT.first()
|| {? ~(ZM.KAT<>null & ZM.KAT<>URZ_KAT.ref())
   || URZ.cntx_psh;
      URZ.prefix;
      URZ.blank();
      URZ.URZ_KAT:=URZ_KAT.ref();
      URZ.win_edit('RED');
      {? URZ.edit("exec('chk_urz','urzadzenia','D')")
      || URZ.add()
      ?};
      URZ.cntx_pop
   || FUN.emsg('Nie można dodać drukarki podczas przeglądania listy czytników.'@)
   ?}
|| FUN.error('Błąd konfiguracji programu - brak kategorii urządzeń DRUKARKA.'@)
?}


\urz_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła do edycji danych urządzenia zewnętrznego
::----------------------------------------------------------------------------------------------------------------------
{? URZ.edit("exec('chk_urz','urzadzenia','P')")
|| URZ.put()
?}


\urz_new_czyt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła dodaje nowe urządzenie zewnętrzne (czytnik)
::----------------------------------------------------------------------------------------------------------------------
URZ_KAT.index('NAZWA');
URZ_KAT.prefix('CZYTNIK','CZYTNIK');
{? URZ_KAT.first()
|| {? ~(ZM.KAT<>null & ZM.KAT<>URZ_KAT.ref())
   || URZ_PORT.win_sel('WER');
      URZ.blank();
      URZ.URZ_KAT:=URZ_KAT.ref();
      URZ.win_edit('RED_CZYT');
      {? URZ.edit("exec('chk_urz','urzadzenia','D')")
      || URZ.add()
      ?}
   || FUN.emsg('Nie można dodać czytnika podczas przeglądania listy drukarek.'@)
   ?}
|| FUN.error('Błąd konfiguracji programu - brak kategorii urządzeń CZYTNIK.'@)
?}


\rp_urz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła na rekord przed dla tabeli URZ
::----------------------------------------------------------------------------------------------------------------------
_wer:=URZ.win_sel('?');
{? URZ.URZ_KAT().NAZWA='DRUKARKA'
|| URZ.actions(_wer,,'E',1);
   URZ.win_edit('RED')
|| URZ.actions(_wer,'ET','p',1);
   URZ.win_edit('RED_CZYT')
?};
Color.rekprzed('URZ#01')


\chk_urz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Weryfikacja danych w oknie redagowania urządzeń
::   WE: _a = 'D' = Dolacz, _a = 'P' = Popraw
::----------------------------------------------------------------------------------------------------------------------
_dalej:='';
{? URZ.NAZWA=''
|| FUN.emsg('Niewypełniono obowiązkowego pola Nazwa urządzenia.'@);
   _dalej:='NAZWA'
?};
{? _dalej=''
|| {? URZ.TYPPODL='B' & URZ.PORT=''
   || FUN.emsg('Niewypełniono obowiązkowego pola Port urządzenia.'@);
      _dalej:='PORT'
   ?}
?};
{? _dalej=''
|| {? URZ.TYPPODL='S' & URZ.DRIVER=''
   || FUN.emsg('Niewypełniono obowiązkowego pola Nazwa sterownika.'@);
      _dalej:='DRIVER'
   ?}
?};
{? _dalej=''
|| {? URZ.URZ_KOM=null
   || FUN.emsg('Niewypełniono obowiązkowego pola Metoda komunikacji (z urządzeniem).'@);
      _dalej:='URZ_KOM'
   ?}
?};

{? _dalej=''
|| {? _a='D'
   || _kat:=URZ.URZ_KAT;
      _jezyk:=URZ.URZ_KOM;
      _nazwa:=URZ.NAZWA;
      URZ.cntx_psh();
      URZ.index('URZ');
      URZ.prefix(_kat,_jezyk,_nazwa,_nazwa);
      {? URZ.first()
      || FUN.emsg('Urządzenie o podanej nazwie, języku (protokole) komunikacji\n'
                  'i kategorii już istnieje w bazie urządzeń.'@);
         _dalej:='NAZWA'
      ?};
      URZ.cntx_pop()
   |? _a='P'
   || _ref:=URZ.ref();
      _kat:=URZ.URZ_KAT;
      _jezyk:=URZ.URZ_KOM;
      _nazwa:=URZ.NAZWA;
      URZ.cntx_psh();
      URZ.index('URZ');
      URZ.prefix(_kat,_jezyk,_nazwa,_nazwa);
      {? URZ.first() & URZ.ref()<>_ref
      || FUN.emsg('Urządzenie o podanej nazwie, języku (protokole) komunikacji\n'
                  'i kategorii już istnieje w bazie urządzeń.'@);
         _dalej:='NAZWA'
      ?};
      URZ.cntx_pop()
   ?}
?};
_dalej


\urz_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła usuwa urządzenie z listy
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.TYPKOL=URZ.ref() | PAR_WYDR.TYPDR=URZ.ref()
|| FUN.emsg('Urządzenie jest ustawione jako obowiązujace dla systemu\n'
            'w parametrach wydruków i nie można go usunąć.'@)
|| {? FUN.ask('Usunąć bieżące urządzenie (%1)?'@[URZ.NAZWA])
   || {? URZ.count()=0
      || URZ.del()
      || FUN.emsg('Urządzenie jest wykorzystywane w systemie i nie można go usunąć.'@)
      ?}
   ?}
?}


\chk_urz_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Weryfikacja danych w oknie redagowania metody komunikacji
::----------------------------------------------------------------------------------------------------------------------
_dalej:='';
{? URZ_KOM.KOD=''
|| FUN.emsg('Niewypełniono pola Kod metody komunikacji.'@);
   _dalej:='KOD'
?};
{? _dalej=''
|| {? URZ_KOM.OPIS=''
   || FUN.emsg('Niewypełniono pola Opis metody komunikacji.'@);
      _dalej:='OPIS'
   ?}
?};
_dalej


\rp_hlp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła na rekord przed w oknie wertowania podpowiedzi
::----------------------------------------------------------------------------------------------------------------------
URZ_HTMP.index('URZ_HTMP');
URZ_HTMP.prefix($OPERATOR.USER);
{? URZ_HTMP.first()
|| {! |?
      URZ_HTMP.del()
   !}
?};
_tresc:=URZ_HLP.memo_txt(0,1,'TRESC');
STR.split(_tresc,'\n');
_i:=1;
{! |?
    _txt:=STR.get_word();
    {? _txt<>'\n'
    || URZ_HTMP.USER:=$OPERATOR.USER;
       URZ_HTMP.LP:=_i;
       URZ_HTMP.WIERSZ:=_txt;
       URZ_HTMP.add();
       _i+=1
    ?};
    STR.next()
!};
URZ_HTMP.first();
grp_disp(URZ_HTMP,'WER');
0


\rp_kat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła na rekord przed w oknie wertowania tabeli URZ_KAT
::----------------------------------------------------------------------------------------------------------------------
_wer:=URZ_KAT.win_sel('?');
{? URZ_KAT.NAZWA='DRUKARKA'
|| URZ_KAT.actions(_wer,,,1)
|| URZ_KAT.actions(_wer,'T',,1)
?}


\urz_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Wyświetlanie metod komunikacji dla danej kategorii urządzeń
::----------------------------------------------------------------------------------------------------------------------
URZ_KOM.index('KATKOD');
URZ_KOM.prefix(URZ_KAT.ref());
URZ_KOM.win_sel('WER');
URZ_KOM.select()


\chk_file_frm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła weryfikuje dane po oknie redagowania tabeli FILE_FRM
::   WE: _a='D' przy dołączaniu, 'P' - przy poprawianiu
::----------------------------------------------------------------------------------------------------------------------
_dalej:='';
{? FILE_FRM.KOD=''
|| FUN.emsg('Pole KOD powinno być wypełnione.'@);
   _dalej:='KOD'
?};
{? _dalej=''
|| {? FILE_FRM.R_PLIK='TXT' & FILE_FRM.SEP=''
   || FUN.emsg('Dla plików tekstowych należy wskazać seperator.'@);
      _dalej:='SEP'
   ?}
?};
{? _dalej=''
|| {? _a='D'
   || _kod:=FILE_FRM.KOD;
      FILE_FRM.cntx_psh();
      FILE_FRM.index('KOD');
      FILE_FRM.prefix(_kod,_kod);
      {? FILE_FRM.first()
      || FUN.emsg('Format o podanym kodzie już istnieje.'@);
         _dalej:='KOD'
      ?};
      FILE_FRM.cntx_pop()
   |? _a='P'
   || _ref:=FILE_FRM.ref();
      _kod:=FILE_FRM.KOD;
      FILE_FRM.cntx_psh();
      FILE_FRM.index('KOD');
      FILE_FRM.prefix(_kod,_kod);
      {? FILE_FRM.first() & FILE_FRM.ref()<>_ref
      || FUN.emsg('Format o podanym kodzie już istnieje.'@);
         _dalej:='KOD'
      ?};
      FILE_FRM.cntx_pop()
   ?}
?};
_dalej


\plik_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Usuwanie formatu pliku
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.FILE_FRM=FILE_FRM.ref()
|| FUN.emsg('Format nie może być usunięty gdyż jest wykorzystywany w systemie.'@)
|| {? FUN.ask('Usunąć format wraz z parametrami?'@)
   || do();
         FILE_PAR.index('FRMKOD');
         FILE_PAR.prefix(FILE_FRM.ref());
         {? FILE_PAR.first()
         || {! |?
               FILE_PAR.del()
            !}
         ?};
         FILE_FRM.del();
      end()
   ?}
?}


\frm_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Edycja formatu pliku
::----------------------------------------------------------------------------------------------------------------------
FILE_FRM.win_edit('RED');
{? FILE_FRM.edit("exec('chk_file_frm','urzadzenia','P')")
|| FILE_FRM.put()
?}


\file_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła dołącza nagłówek nowego formatu pliku z czytnika/kolektora danych
::----------------------------------------------------------------------------------------------------------------------
FILE_FRM.win_edit('RED');
FILE_FRM.blank();
{? FILE_FRM.edit("exec('chk_file_frm','urzadzenia','D')")
|| FILE_FRM.add()
?}


\urz_tag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Wyświetlanie tabeli ze słownikiem tagów
::----------------------------------------------------------------------------------------------------------------------
URZ_TAG.index('URZ_TAG');
URZ_TAG.prefix();
URZ_TAG.win_sel('WER');
URZ_TAG.select()


\urz_port
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Wyświetlanie tabeli ze słownikiem pomocniczym portów
::----------------------------------------------------------------------------------------------------------------------
URZ_PORT.index('NAZWA');
URZ_PORT.prefix();
URZ_PORT.win_sel('SELECT');
URZ_PORT.select()


\urz_kom_hlp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Wyświetlanie podpowiedzi i objasnień dla języka drukarki
::----------------------------------------------------------------------------------------------------------------------
URZ_HLP.index('URZ_HLP');
URZ_HLP.prefix(URZ_KOM.ref());
URZ_HLP.win_sel('WERG');
URZ_HLP.hdr_sel();
URZ_HTMP.erase();
URZ_HLP.hdr_sel(': język %1'@[URZ_KOM.KOD]);
URZ_HLP.select()


\grp_hlp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła wypełniejąca dla okna grupowego tabeli URZ_HLP
::----------------------------------------------------------------------------------------------------------------------
URZ_HLP.index('URZ_HLP');
URZ_HLP.prefix(URZ_KOM.ref());
URZ_HLP.first();
grp_disp(URZ_HLP,'WER');
grp_disp(URZ_HTMP,'WER')


\urz_lab_zmia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła zmienia obowiązujacą definicje etykiety
::----------------------------------------------------------------------------------------------------------------------
_r_user:=exec('user_ref','param_wydr',app_info('app_user'));
PARWYD.win_edit('LAB_ZMIA');
PARWYD.index('USER'); PARWYD.prefix(_r_user);
{? ~PARWYD.first() || exec('addpus','param_wydr',_r_user) ?};
{? PARWYD.edit() || PARWYD.put(); exec('set_var','param_wydr') ?}


\hlp_akt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła do aktualizacji podpowiedzi
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Aktualizować objaśnienia dla języka: %1?'@[URZ_KOM.KOD])
|| URZ_HTMP.erase();
   URZ_HLP.prefix(URZ_KOM.ref());
   {? URZ_HLP.first()
   || {! |?
         URZ_HLP.del()
      !}
   ?};
   _plik:=-URZ_KOM.KOD+'.txt';
   exec('imp_hlp','urzadzenia',URZ_KOM.ref(),_plik);
   URZ_HLP.first()
?}


\imp_hlp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Import pomocy dla języka drukarki, plik tekstowy z polskimi znakami w standarcie WIN1250,
::        podczas importu następuje konwersja na Mazovię.
::   WE: _a = ref języka poleceń drukarki (ref tabeli URZ_KOM)
::        _b = nazwa pliku z zawartością pomocy do importu
::  OLD: \imp_hlp/skid_uz.fml
::----------------------------------------------------------------------------------------------------------------------
_hf:=fopen(_b,'ur',1);
:: _tryb = 0 - początek dopisywania
:: _tryb = 1 - dopisz nowe polecenie
:: _tryb = 2 - początek dopisywania treści objaśnień
:: _tryb = 3 - w trakcie dopisywania treści objaśnień
{? _hf
|| _tryb:=0;
   _dalej:=1;
   _line:='';
   {! |? (_wiersz:=fread(_hf))<>'\n' & _dalej |!
      _wiersz:=form(_wiersz);
      _wiersz:=STR.w952maz(_wiersz);
      {? _wiersz='[COMMAND]'
      || {? _tryb=3 || URZ_HLP.memo_set(_line,'TRESC'); URZ_HLP.memo_put(,'TRESC') ?};
         _tryb:=1
      |? _wiersz='[DESCRIPTION]'
      || _tryb:=2
      || {? _tryb=1
         || URZ_HLP.blank();
            URZ_HLP.URZ_KOM:=_a;
            URZ_HLP.KOD:=_wiersz;
            {? URZ_HLP.add(1)
            || _ref:=URZ_HLP.ref()
            || _dalej:=0
            ?}
         |? _tryb=2
         || _line:=_wiersz+'\n';
            _tryb:=3
         |? _tryb=3
         || _line+=_wiersz+'\n'
         ?}
      ?}
   !};
   {? _tryb=3 || URZ_HLP.memo_set(_line,'TRESC'); URZ_HLP.memo_put(,'TRESC') ?};
   fclose(_hf)
|| URZ_KOM.seek(_a);
   FUN.emsg('Błąd przy próbie odczytania pliku %1 z pomocą dla języka drukarki %2.'@[_b,URZ_KOM.KOD])
?}


\frm_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Dołączanie nowego parametru do formatu pliku
::----------------------------------------------------------------------------------------------------------------------
_wy:=0;
{? FILE_DPR.select()
|| _nazwa:=FILE_DPR.NAZWA;
   FILE_PAR.cntx_psh();
   FILE_PAR.index('FRMKOD');
   {? FILE_PAR.find_key(_nazwa)
   || FUN.emsg('Parametr %1 już został dodany do bieżącego formatu.'@[_nazwa]);
      _wy:=1
   ?};
   FILE_PAR.index('LP');
   {? _wy=0
   || {? FILE_PAR.size()>0
      || FILE_PAR.last();
         _lp:=FILE_PAR.LP+1
      || _lp:=1
      ?}
   ?};
   FILE_PAR.cntx_pop();
   {? _wy=0
   || FILE_PAR.blank();
      FILE_PAR.LP:=_lp;
      FILE_PAR.KOD:=_nazwa;
      FILE_PAR.FILE_FRM:=FILE_FRM.ref();
      {? FILE_PAR.edit()
      || FILE_PAR.add()
      ?}
   ?}
?}


\frm_par_g
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła przesuwa parametr formatu pliku w góre
::----------------------------------------------------------------------------------------------------------------------
{? FILE_PAR.size()=0 || return(0) ?};
_ref:=FILE_PAR.ref();
FILE_PAR.cntx_psh();
FILE_PAR.first();
_lp:=FILE_PAR.LP;
FILE_PAR.cntx_pop();
{? FILE_PAR.LP=_lp
|| return(0)
|| _old_lp:=FILE_PAR.LP;
   FILE_PAR.prev();
   _new_lp:=FILE_PAR.LP;
   FILE_PAR.LP:=0;
   FILE_PAR.put();
   FILE_PAR.seek(_ref);
   FILE_PAR.LP:=_new_lp;
   FILE_PAR.put();
   FILE_PAR.first();
   FILE_PAR.LP:=_old_lp;
   FILE_PAR.put();
   FILE_PAR.seek(_ref)
?}


\frm_par_d
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuóa przesuwa parametr formatu pliku w dół
::----------------------------------------------------------------------------------------------------------------------
{? FILE_PAR.size()=0 || return(0) ?};
_ref:=FILE_PAR.ref();
FILE_PAR.cntx_psh();
FILE_PAR.last();
_lp:=FILE_PAR.LP;
FILE_PAR.cntx_pop();
{? FILE_PAR.LP=_lp
|| return(0)
|| _old_lp:=FILE_PAR.LP;
   FILE_PAR.next();
   _new_lp:=FILE_PAR.LP;
   FILE_PAR.LP:=0;
   FILE_PAR.put();
   FILE_PAR.seek(_ref);
   FILE_PAR.LP:=_new_lp;
   FILE_PAR.put();
   FILE_PAR.first();
   FILE_PAR.LP:=_old_lp;
   FILE_PAR.put();
   FILE_PAR.seek(_ref)
?}


\chk_urz_tag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2011]
:: OPIS: Formuła po rekordzie dla tabeli URZ_TAG, kontrola wypełnienia pól
::----------------------------------------------------------------------------------------------------------------------
__CHK.record(URZ_TAG,,'KOD')


\chk_urz_port
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2011]
:: OPIS: Formuła po rekordzie dla tabeli URZ_PORT, kontrola wypełnienia pól
::----------------------------------------------------------------------------------------------------------------------
__CHK.record(URZ_PORT,,'NAZWA')


\rp_lab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła na rekord przed w oknie wertowania etykiet
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.URZ_LAB<>null & URZ_LAB.ref()=PAR_WYDR.URZ_LAB
|| 'URZ_LAB#01#01'
|| ''
?}


\urz_lab_imp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła importuje definicje bieżącej etykiety
::----------------------------------------------------------------------------------------------------------------------
_tmpdir:=fmk_tmp_dir(0);
{? type_of(_tmpdir) <> type_of(~~)
|| _fdir:=_tmpdir.get_path
|| FUN.emsg('Nie udało się utworzyć katalogu tymczasowego po stronie serwera.'@);
   return()
?};
{? _fdir<>''
|| _uploaded:=dlg_upload(_fdir,0,'.lab');
   _sep:=exec('sep','#file');
   _file:='';
   {? _uploaded<>''
   || _file:=_fdir+_sep+_uploaded
   ?}
?};
{? _file<>''
|| _hf:=fopen(_file,'r',0);
   {? _hf
   || _head:=_body:=0; _dalej:=1;
      URZ_LABZ.prefix(); URZ_LABP.prefix();
      {! |? (_wiersz:=fread(_hf))<>'\n' & _dalej
      |!
         _wiersz:=form(_wiersz);
         {? _wiersz='[HEAD]'
         || _head:=1
         |? _wiersz='[BODY]'
         || _body:=1; _head:=0;
            {? ~URZ_LAB.add(1)
            || FUN.emsg('Etykieta o podanym kodzie już istnieje.'@);
               _dalej:=0
            || {? URZ_LAB.TRYB='P' || URZ_LABP.blank() ?}
            ?}
         || {? _head=1
            || _poz:=_wiersz*'=';
               _kod:=(_poz-1)+(form(_wiersz));
               _wartosc:=_poz-_wiersz;
               {? _kod='KOM'
               || URZ_KAT.index('NAZWA');
                  URZ_KAT.prefix('DRUKARKA','DRUKARKA');
                  {? URZ_KAT.first() || _kat:=URZ_KAT.ref() || _kat:=null ?};
                  {? _kat
                  || URZ_KOM.index('KATKOD');
                     URZ_KOM.prefix(_kat,_wartosc,_wartosc);
                     {? URZ_KOM.first()
                     || URZ_LAB.URZ_KOM:=URZ_KOM.ref()
                     || FUN.emsg('W systemie nie odnaleziono języka: %1'@[_wartosc]);
                        _dalej:=0
                     ?}
                  || _dalej:=0
                  ?}
               |? _kod='KOD'
               || URZ_LAB.KOD:=_wartosc
               |? _kod='TRYB'
               || URZ_LAB.TRYB:=_wartosc
               |? _kod='OPIS'
               || URZ_LAB.OPIS:=_wartosc
               |? _kod='ROZM_X'
               || URZ_LAB.ROZM_X:=#_wartosc
               |? _kod='ROZM_Y'
               || URZ_LAB.ROZM_Y:=#_wartosc
               |? _kod='ODSTEP'
               || URZ_LAB.ODSTEP:=#_wartosc
               |? _kod='TEMPERATURA'
               || URZ_LAB.TEMPERAT:=#_wartosc
               ?}
            |? _body=1
            || {? URZ_LAB.TRYB='Z'
               || _poz:=_wiersz*'|';
                  _lp:=#((_poz-1)+form(_wiersz));
                  _wartosc:=_poz-_wiersz;
                  URZ_LABZ.blank();
                  URZ_LABZ.URZ_LAB:=URZ_LAB.ref();
                  URZ_LABZ.LP:=_lp;
                  URZ_LABZ.POZ:=_wartosc;
                  URZ_LABZ.add()
               |? URZ_LAB.TRYB='P'
               || {? _wiersz<>'---'
                  || _poz:=_wiersz*'=';
                     _kod:=((_poz-1)+form(_wiersz));
                     _wartosc:=_poz-_wiersz;
                     {? _wartosc<>''
                     || {? _kod='TYP'
                        || URZ_LABT.index('URZ_LABT');
                           URZ_LABT.prefix(_wartosc,_wartosc);
                           {? URZ_LABT.first()
                           || URZ_LABP.URZ_LABT:=URZ_LABT.ref()
                           || FUN.emsg('W systemie brak typu pola o oczekiwanej nazwie.'@);
                              _dalej:=0
                           ?}
                        |? _kod='ROTACJA'
                        || URZ_LABP.ROTACJA:=_wartosc
                        |? _kod='POZ_X'
                        || URZ_LABP.POZ_X:=#_wartosc
                        |? _kod='POZ_Y'
                        || URZ_LABP.POZ_Y:=#_wartosc
                        |? _kod='TXT_RODZ'
                        || URZ_LABP.TXT_RODZ:=_wartosc
                        |? _kod='TEKST'
                        || URZ_LABP.TEKST:=_wartosc
                        |? _kod='TAG'
                        || URZ_TAG.index('URZ_TAG');
                           URZ_TAG.prefix(_wartosc,_wartosc);
                           {? URZ_TAG.first()
                           || URZ_LABP.URZ_TAG:=URZ_TAG.ref()
                           || FUN.emsg('W systemie brak tagu o oczekiwanej nazwie: %1'@[_wartosc]);
                              _dalej:=0
                           ?}
                        |? _kod='FONTSIZE'
                        || URZ_FONT.index('URZ_KOD');
                           URZ_FONT.prefix(URZ_LAB.URZ_KOM,_wartosc,_wartosc);
                           {? URZ_FONT.first()
                           || URZ_LABP.FONTSIZE:=URZ_FONT.ref()
                           || FUN.emsg('W systemie nie znaleziono oczekiwanej\n wielkości fontu: %1'@[_wartosc]);
                              _dalej:=0
                           ?}
                        |? _kod='BARCODE'
                        || URZ_BAR.index('URZ_BAR');
                           URZ_BAR.prefix(URZ_LAB.URZ_KOM,_wartosc,_wartosc);
                           {? URZ_BAR.first()
                           || URZ_LABP.BARCODE:=URZ_BAR.ref()
                           || FUN.emsg('W systemie nie odnaleziono oczekiwanego typu\n'
                                       'kodu kreskowego: %1'@[_wartosc]);
                              _dalej:=0
                           ?}
                        |? _kod='BARH'
                        || URZ_BARH.index('URZ_BARH');
                           URZ_BARH.prefix(URZ_LAB.URZ_KOM,_wartosc,_wartosc);
                           {? URZ_BARH.first()
                           || URZ_LABP.URZ_BARH:=URZ_BARH.ref()
                           || FUN.emsg('W sytemie nie odnaleziono oczekiwanej wysokości czcionki: %1'@[_wartosc]);
                              _dalej:=0
                           ?}
                        |? _kod='PODPIS'
                        || URZ_LABP.PODPIS:=_wartosc;
                           URZ_LABP.add()
                        ?}
                     ?}
                  || URZ_LABP.blank()
                  ?}
               ?}
            ?}
         ?}
      !};
      fclose(_hf)
   ?}
?}


\urz_lab_exp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła eksportuje definicje bieżącej etykiety
::----------------------------------------------------------------------------------------------------------------------
_tmpdir:=fmk_tmp_dir(0);
{? type_of(_tmpdir) <> type_of(~~)
|| _fdir:=_tmpdir.get_path
|| return(0)
?};
_file:=_fdir+'//'+URZ_LAB.KOD+'.lab';
_ret:=
{? _file<>''
|| {? (-_file)+4<>'.lab' || _file+='.lab' ?};
   _hf:=fopen(_file,'w',0);
   {? _hf
   || fwrite(_hf,'[HEAD]');
      fwrite(_hf,'KOM='+URZ_LAB.URZ_KOM().KOD);
      fwrite(_hf,'KOD='+URZ_LAB.KOD);
      fwrite(_hf,'TRYB='+URZ_LAB.TRYB);
      fwrite(_hf,'OPIS='+URZ_LAB.OPIS);
      fwrite(_hf,'ROZM_X='+$URZ_LAB.ROZM_X);
      fwrite(_hf,'ROZM_Y='+$URZ_LAB.ROZM_Y);
      fwrite(_hf,'ODSTEP='+$URZ_LAB.ODSTEP);
      fwrite(_hf,'TEMPERATURA='+$URZ_LAB.TEMPERAT);
      fwrite(_hf,'[BODY]');
      {? URZ_LAB.TRYB='Z'
      || URZ_LABZ.index('URZ_LABZ');
         URZ_LABZ.prefix(URZ_LAB.ref());
         {? URZ_LABZ.first()
         || {! |?
               fwrite(_hf,$URZ_LABZ.LP+'|'+URZ_LABZ.POZ);
               URZ_LABZ.next()
            !}
         ?}
      |? URZ_LAB.TRYB='P'
      || {? URZ_LAB.URZ_KOM().KOD='DPL'
         || URZ_LABP.index('URZ_LABP')
         || URZ_LABP.index('URZ_LABE')
         ?};
         URZ_LABP.prefix(URZ_LAB.ref());
         {? URZ_LABP.first()
         || {! |?
               fwrite(_hf,'TYP='+URZ_LABP.URZ_LABT().TYP);
               fwrite(_hf,'ROTACJA='+URZ_LABP.ROTACJA);
               fwrite(_hf,'POZ_X='+$URZ_LABP.POZ_X);
               fwrite(_hf,'POZ_Y='+$URZ_LABP.POZ_Y);
               fwrite(_hf,'TXT_RODZ='+URZ_LABP.TXT_RODZ);
               fwrite(_hf,'TEKST='+URZ_LABP.TEKST);
               fwrite(_hf,'TAG='+URZ_LABP.URZ_TAG().KOD);
               fwrite(_hf,'FONTSIZE='+URZ_LABP.FONTSIZE().KOD);
               fwrite(_hf,'BARCODE='+URZ_LABP.BARCODE().KOD);
               fwrite(_hf,'BARH='+URZ_LABP.URZ_BARH().KOD);
               fwrite(_hf,'PODPIS='+URZ_LABP.PODPIS);
               {? URZ_LABP.next()
               || fwrite(_hf,'---'); 1
               || 0
               ?}
            !}
         ?}
      ?};
      fclose(_hf)
   ?}
?};
dlg_save(_file);
_ret


\urz_labz_sza
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Dołączanie szablonu definicji etykiety w trybie zaawansowanym
::----------------------------------------------------------------------------------------------------------------------
_urz_lab:=URZ_LAB.ref();

_add:="URZ_LABZ.cntx_psh();
       URZ_LABZ.blank();
       URZ_LABZ.LP:=_a;
       URZ_LABZ.POZ:=_b;
       URZ_LABZ.LOG:={? var_pres('_c')=type_of('') || _c || '' ?};
       URZ_LABZ.add(1);
       URZ_LABZ.cntx_pop()";

_opc:=FUN.choice('Wybierz typ szablonu'@,,'&Finansowy'@,'&Logistyczny'@,'&Techniczny'@);

{? URZ_KOM.KOD='DPL'
|| {? _opc=1
   || _add(1,'<STX>L<CR>');
      _add(2,'H20<CR>');
      _add(3,'D11<CR>');
      _add(4,'191100000680016<FIRMA><CR>');
      _add(5,'1E0004000100016<NRI><CR>');
      _add(6,'E<CR>')
   |? _opc=2
   || _add(1,'<STX>L<CR>');
      _add(2,'H20<CR>');
      _add(3,'D11<CR>');
      _add(4,'191100000680016<KTM><CR>');
      _add(5,'1E0004000100016<KODK><CR>');
      _add(6,'E<CR>')
   |? _opc=3
   || _add(1,'<STX>L<CR>');
      _add(2,'H20<CR>');
      _add(3,'D11<CR>');
      _add(4,'E<CR>')
   ?}
|? URZ_KOM.KOD='EPL2'
|| {? _opc=1
   || _add(1,'<LF>N<LF>');
      _add(2,'Q<HEIGHT>,<HOLE><LF>');
      _add(3,'q<WIDTH><LF>');
      _add(4,'I8,B<LF>');
      _add(5,'A24,10,0,1,1,2,N,"<FIRMA>"<LF>');
      _add(6,'B24,50,0,1A,2,3,80,B,"<NRI>"<LF>');
      _add(7,'P1<LF>')
   |? _opc=2
   || _add(1,'<LF>N<LF>');
      _add(2,'Q<HEIGHT>,<HOLE><LF>');
      _add(3,'q<WIDTH><LF>');
      _add(4,'I8,B<LF>');
      _add(5,'A24,10,0,1,1,2,N,"<KTM>"<LF>');
      _add(6,'B24,50,0,1A,2,3,80,B,"<KODK>"<LF>');
      _add(7,'P1<LF>')
   || _add(1,'<LF>N<LF>');
      _add(2,'Q<HEIGHT>,<HOLE><LF>');
      _add(3,'q<WIDTH><LF>');
      _add(4,'I8,B<LF>');
      _add(5,'P1<LF>')
   ?}
|? URZ_KOM.KOD='TSPL'
|| {? _opc=1
   || _add(1,'CODEPAGE 852<CR><LF>');
      _add(2,'SIZE <WIDTH_MM> mm,<HEIGHT_MM> mm<CR><LF>');
      _add(3,'SPEED 2<CR><LF>');
      _add(4,'DENSITY 11<CR><LF>');
      _add(5,'SET CUTTER OFF<CR><LF>');
      _add(6,'DIRECTION 0<CR><LF>');
      _add(7,'REFERENCE 0,0<CR><LF>');
      _add(8,'CLS<CR><LF>');
      _add(9,'GAP <HOLE_MM> mm,0<CR><LF>');
      _add(10,'SET COM1 96,N,8,1<CR><LF>');
      _add(11,'TEXT 90,40,"3",0,1,1,"<FIRMA>"<CR><LF>');
      _add(12,'BARCODE 40,80,"128",65,1,0,2,2,"<NRI>"<CR><LF>');
      _add(13,'TEXT 10,130,"3",270,1,1,"<GRUPA>"<CR><LF>');
      _add(14,'PRINT 1<CR><LF>')
   |? _opc=2
   || _add(1,'CODEPAGE 852<CR><LF>');
      _add(2,'SIZE <WIDTH_MM> mm,<HEIGHT_MM> mm<CR><LF>');
      _add(3,'SPEED 2<CR><LF>');
      _add(4,'DENSITY 11<CR><LF>');
      _add(5,'SET CUTTER OFF<CR><LF>');
      _add(6,'DIRECTION 0<CR><LF>');
      _add(7,'REFERENCE 0,0<CR><LF>');
      _add(8,'CLS<CR><LF>');
      _add(9,'GAP <HOLE_MM> mm,0<CR><LF>');
      _add(10,'SET COM1 96,N,8,1<CR><LF>');
      _add(11,'TEXT 90,40,"3",0,1,1,"<KTM>"<CR><LF>');
      _add(12,'BARCODE 40,80,"128",65,1,0,2,2,"<KODK>"<CR><LF>');
      _add(13,'PRINT 1<CR><LF>')
   |? _opc=3
   || _add(1,'CODEPAGE 852<CR><LF>');
      _add(2,'SIZE <WIDTH_MM> mm,<HEIGHT_MM> mm<CR><LF>');
      _add(3,'SPEED 2<CR><LF>');
      _add(4,'DENSITY 11<CR><LF>');
      _add(5,'SET CUTTER OFF<CR><LF>');
      _add(6,'DIRECTION 0<CR><LF>');
      _add(7,'REFERENCE 0,0<CR><LF>');
      _add(8,'CLS<CR><LF>');
      _add(9,'GAP <HOLE_MM> mm,0<CR><LF>');
      _add(10,'SET COM1 96,N,8,1<CR><LF>');
      _add(11,'PRINT 1<CR><LF>')
   ?}
|? URZ_KOM.KOD='ZPL'
|| {? _opc=1
   || _add(1,'^XA');
      _add(2,'^CFA,40');
      _add(3,'^FO20,20^FD<FIRMA>^FS');
      _add(4,'^BY3,2,80');
      _add(5,'^FO20,90^BC^FD<NRI>^FS');
      _add(6,'^XZ')
   |? _opc=2
   || {? (_nag:=exec('szablonyZPL','%etykiety'); _nag<>'')
      || __szapzpl.clear();
         __szapzpl.prefix(_nag,);
         {? __szapzpl.first()
         || {!
            |? _add(__szapzpl.LP,__szapzpl.POZ,__szapzpl.LOG);
               __szapzpl.next()
            !}
         ?}
      ?};
      VAR_DEL.delete('__szanzpl','__szapzpl')
   |? _opc=3
   || _add(1,'^XA');
      _add(2,'^CFA,40');
      _add(3,'^XZ')
   ?}
?};
exec('labline2LABMEMO','kody_kresk',_urz_lab);
URZ_LABZ.first()


\urz_labz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Wyświetla okno edycji definiji etykiety w trybie zaawansowanym
::----------------------------------------------------------------------------------------------------------------------
URZ_HLP.win_edit('RED');
URZ_HLP.hdr_sel();
_txt:=' '+URZ_KOM.KOD;
URZ_HLP.hdr_sel(_txt);
URZ_TAG.win_edit('RED');
URZ_LABZ.win_sel('WERG');
URZ_LABZ.dnd_sel('WER',,'records.URZ_LABZ',"URZ_LABZ.cntx_psh();
                                             _ref:=dnd_info('dest_record');
                                             {? URZ_LABZ.seek(_ref)
                                             || exec('zmien_lp','#dragdrop','LP','URZ_LABZ')
                                             ?};
                                             URZ_LABZ.cntx_pop()");
URZ_LABZ.hdr_sel(': %1 (język %2)'@[URZ_LAB.KOD,URZ_KOM.KOD]);
URZ_LABZ.select()


\rp_htmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła na rekord przed w oknie wertowania treści podpowiedzi
::----------------------------------------------------------------------------------------------------------------------
'0:0:0,230:230:230'


\grp_labz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła wypełniejąca dla okna grupowego
::----------------------------------------------------------------------------------------------------------------------
URZ_HLP.index('URZ_HLP');
URZ_HLP.prefix(URZ_KOM.ref());
URZ_HLP.first();
URZ_TAG.index('URZ_TAG');
URZ_TAG.prefix();
URZ_TAG.first();
URZ_HTMP.index('URZ_HTMP');
URZ_HTMP.prefix($OPERATOR.USER);
{? URZ_HTMP.first()
|| {! |?
      URZ_HTMP.del()
   !}
?};
URZ_LABZ.index('URZ_LABZ');
URZ_LABZ.prefix(URZ_LAB.ref());
URZ_LABZ.first();
grp_disp(URZ_HLP,'WER');
grp_disp(URZ_LABZ,'WER');
grp_disp(URZ_TAG,'WER2');
grp_disp(URZ_HTMP,'WER')


\labp_add_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła dodaje pozycje typu pole tekstowe do definicji etykiety w trybie prostym
::----------------------------------------------------------------------------------------------------------------------
URZ_LABT.index('URZ_LABT');
URZ_LABT.prefix('TEKST','TEKST');
URZ_LABT.first();
URZ_LABP.win_edit('RED_TXT');
URZ_LABP.blank();
URZ_LABP.URZ_LABT:=URZ_LABT.ref();
{? URZ_LABP.edit("exec('chk_labp_txt','urzadzenia')")
|| URZ_LABP.add()
?}


\chk_labp_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Weryfikacja danych w oknie redagowania parametrów pola tekstowego etykiety
::----------------------------------------------------------------------------------------------------------------------
_dalej:='';
{? URZ_LABP.FONTSIZE=null
|| FUN.emsg('Nie podano wielkości fontu.'@);
   _dalej:='FONTSIZE'
?};
_dalej


\labp_add_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła dodaje pozycje typu kod kreskowy do definicji etykiety w trybie prostym
::----------------------------------------------------------------------------------------------------------------------
URZ_LABT.index('URZ_LABT');
URZ_LABT.prefix('KOD KRESKOWY','KOD KRESKOWY');
URZ_LABT.first();
{? URZ_KOM.KOD='DPL'
|| URZ_LABP.win_edit('RED_KK')
|? URZ_KOM.KOD='EPL2'
|| URZ_LABP.win_edit('RED_KK_Z')
|? URZ_KOM.KOD='TSPL'
|| URZ_LABP.win_edit('RED_KK')
?};
URZ_LABP.blank();
URZ_LABP.URZ_LABT:=URZ_LABT.ref();
{? URZ_LABP.edit("exec('chk_labp_kk','urzadzenia')")
|| URZ_LABP.add()
?}


\chk_labp_kk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Weryfikacja danych w oknie redagowania parametrów pola tekstowego etykiety
::----------------------------------------------------------------------------------------------------------------------
_dalej:='';
{? URZ_LABP.BARCODE=null
|| FUN.emsg('Nie podano rodzaju kodu kreskowego.'@);
   _dalej:='BARCODE'
?};
{? _dalej=''
|| {? URZ_LABP.BARCODE=null
   || FUN.emsg('Nie podano rodzaju wysokości kodu kreskowego.'@);
      _dalej:='URZ_BARH'
   ?}
?};
_dalej


\be_tekst
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła przed redakcją pola URZ_LABP.TEKST
::----------------------------------------------------------------------------------------------------------------------
{? URZ_LABP.TXT_RODZ='W'
|| 1
|? URZ_LABP.TXT_RODZ='T'
|| 0
?}


\be_urz_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła przed redakcją pola URZ_LABP.URZ_TAG
::----------------------------------------------------------------------------------------------------------------------
{? URZ_LABP.TXT_RODZ='W'
|| 0
|? URZ_LABP.TXT_RODZ='T'
|| 1
?}


\ae_txt_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła po redakcji pola URZ_LABP.TXT_RODZ
::----------------------------------------------------------------------------------------------------------------------
{? URZ_LABP.TXT_RODZ='W'
|| URZ_LABP.URZ_TAG:=null
|? URZ_LABP.TXT_RODZ='T'
|| URZ_LABP.TEKST:=''
?}


\rp_labp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła na rekord przed w tabeli URZ_LABP, okno wertowania WER
::----------------------------------------------------------------------------------------------------------------------
{? URZ_LABP.TXT_RODZ='W'
|| VAR.WARTOSC:=URZ_LABP.TEKST
|? URZ_LABP.TXT_RODZ='T'
|| VAR.WARTOSC:=URZ_LABP.URZ_TAG().KOD
?}


\urz_labp_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Edycja pozycji etykiety w trybie prostym
::----------------------------------------------------------------------------------------------------------------------
{? URZ_LABP.URZ_LABT().TYP='TEKST'
|| URZ_LABP.win_edit('RED_TXT');
   {? URZ_LABP.edit("exec('chk_labp_txt','urzadzenia')") || URZ_LABP.put() ?}
|? URZ_LABP.URZ_LABT().TYP='KOD KRESKOWY'
|| {? URZ_KOM.KOD='DPL'
   || URZ_LABP.win_edit('RED_KK')
   |? URZ_KOM.KOD='EPL2'
   || URZ_LABP.win_edit('RED_KK_Z')
   |? URZ_KOM.KOD='TSPL'
   || URZ_LABP.win_edit('RED_KK')
   ?};
   {? URZ_LABP.edit("exec('chk_labp_kk','urzadzenia')") || URZ_LABP.put() ?}
?}


\urz_labp_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Wyświetlanie informacji o pozycji etykiety
::----------------------------------------------------------------------------------------------------------------------
{? URZ_LABP.URZ_LABT().TYP='TEKST'
|| URZ_LABP.win_edit('RED_TXT')
|? URZ_LABP.URZ_LABT().TYP='KOD KRESKOWY'
|| URZ_LABP.win_edit('RED_KK')
?};
URZ_LABP.display()


\urz_lab_wys
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Wyświetlanie informacji o etykiecie
::----------------------------------------------------------------------------------------------------------------------
{? URZ_KOM.KOD='DPL'
|| URZ_LAB.win_edit('RED_DPL')
|? URZ_KOM.KOD='TSPL'
|| URZ_LAB.win_edit('RED_TSP')
|? URZ_KOM.KOD='EPL2'
|| URZ_LAB.win_edit('RED_EPL')
?};
URZ_LAB.display()


\urz_zam
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła wyświetla liste zdefiniowanych w systemie tagów
::----------------------------------------------------------------------------------------------------------------------
VAR.RTAG:='';
URZ_TAG.win_sel('WER');
URZ_TAG.win_edit('RED');
URZ_TAG.index('URZ_TAG');
URZ_TAG.prefix();
URZ_TAG.select()


\urz_lab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Wyświetlanie definicji etykiet dla drukarek kodów kreskowych.
::        Wyświetlanie z poziomu tabeli języków komunikacji z drukarka
::----------------------------------------------------------------------------------------------------------------------
URZ_LAB.index('URZ_LAB');
URZ_LAB.prefix(URZ_KOM.ref());
URZ_LAB.win_sel('WER');
URZ_LAB.hdr_sel();
URZ_LAB.hdr_sel(': język %1'@[URZ_KOM.KOD]);
{? URZ_KOM.KOD='DPL'
|| URZ_LAB.win_edit('RED_DPL')
|? URZ_KOM.KOD='TSPL'
|| URZ_LAB.win_edit('RED_TSP')
|? URZ_KOM.KOD='EPL2'
|| URZ_LAB.win_edit('RED_EPL')
?};
URZ_LAB.select()


\rp_urz_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła na rekord przed w oknie wertowania metod (języków) komunikacji z urządzeniami
::----------------------------------------------------------------------------------------------------------------------
{? URZ_KOM.URZ_KAT().NAZWA='DRUKARKA'
|| URZ_KOM.actions('WER',,,1)
|| URZ_KOM.actions('WER','EO',,1)
?}


\urz_lab_urz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Wyświetlanie definicji etykiet dla drukarek kodów kreskowych.
::        Wyświetlanie z poziomu tabeli urządzeń
::----------------------------------------------------------------------------------------------------------------------
URZ_KOM.prefix();
URZ_KOM.seek(URZ.URZ_KOM);
URZ_LAB.index('URZ_LAB');
URZ_LAB.prefix(URZ.URZ_KOM);
URZ_LAB.win_sel('WER');
URZ_LAB.hdr_sel();
URZ_LAB.hdr_sel(': język %1'@[URZ_KOM.KOD]);
{? URZ.URZ_KOM().KOD='DPL'
|| URZ_LAB.win_edit('RED_DPL')
|? URZ.URZ_KOM().KOD='TSPL'
|| URZ_LAB.win_edit('RED_TSP')
|? URZ.URZ_KOM().KOD='EPL2'
|| URZ_LAB.win_edit('RED_EPL')
?};
URZ_LAB.select()


\set_kol_urz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2010]
:: OPIS: Ustawienie koloru dla rekordu urządzenia
::   WY: Symbol miejsca wykorzystania koloru lub pusty string
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.TYPDR<>null & URZ.ref()=PAR_WYDR.TYPDR
|| 'URZ#01#01'
|? PAR_WYDR.TYPKOL<>null & URZ.ref()=PAR_WYDR.TYPKOL
|| 'URZ#01#02'
|| ''
?}


\urz_kom_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła dołącza nową metodę komunikacji
::----------------------------------------------------------------------------------------------------------------------
URZ_KOM.win_edit('RED');
URZ_KOM.blank();
{? URZ_KOM.edit("exec('chk_urz_kom','urzadzenia')")
|| URZ_KOM.add()
?}


\urz_kom_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Edycja parametrów metody komunikacji
::----------------------------------------------------------------------------------------------------------------------
URZ_KOM.win_edit('RED');
{? URZ_KOM.edit("exec('chk_urz_kom','urzadzenia')")
|| URZ_KOM.put()
?}


\urz_kom_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Usuwanie metody komunikacji
::----------------------------------------------------------------------------------------------------------------------
{? URZ_KOM.count()>0
|| FUN.emsg('Bieżąca metoda komunikacji jest wykorzystywana\n'
            'w systemie i nie można jej usunąć.'@)
|| {? FUN.ask('Usunąć bieżącą metodę komunikacji - %1?'@[URZ_KOM.KOD])
   || URZ_KOM.del()
   ?}
?}


\urz_lab_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła dodaje nowa definicje etykiety dla drukarek kodów kreskowych
::----------------------------------------------------------------------------------------------------------------------
{? URZ_KOM.KOD='DPL'
|| URZ_LAB.win_edit('REDN_DPL')
|? URZ_KOM.KOD='TSPL'
|| URZ_LAB.win_edit('REDN_TSP')
|? URZ_KOM.KOD='EPL2'
|| URZ_LAB.win_edit('REDN_EPL')
?};
URZ_LAB.blank();
{? URZ_LAB.edit("exec('chk_urz_lab','urzadzenia','D')")
|| URZ_LAB.add()
?}


\urz_lab_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Edycja parametrów definicji etykiety dla drukarek kodów kreskowych
::----------------------------------------------------------------------------------------------------------------------
{? URZ_KOM.KOD='DPL'
|| URZ_LAB.win_edit('RED_DPL')
|? URZ_KOM.KOD='TSPL'
|| URZ_LAB.win_edit('RED_TSP')
|? URZ_KOM.KOD='EPL2'
|| URZ_LAB.win_edit('RED_EPL')
?};
{? URZ_LAB.edit("exec('chk_urz_lab','urzadzenia','P')")
|| URZ_LAB.put()
?}


\urz_lab_usu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła usuwa definicje etykiety dla drukarek kodów kreskowych
::----------------------------------------------------------------------------------------------------------------------
{? PAR_WYDR.URZ_LAB=URZ_LAB.ref()
|| FUN.emsg('Etykieta jest ustawiona jako obowiązujaca dla systemu\n'
            'w parametrach wydruków i nie można jej usunąć.'@)
|? exec('FindInSet','#table','URZ_MJS','URZ_LAB',URZ_LAB.ref())<>null()
|| FUN.emsg('Etykieta jest przypisana do miejsc wywołania.\n'
            'Aktualnie nie można jej usunąć.'@)
|? exec('FindInSet','#table','URZ_DOM','URZ_LAB',URZ_LAB.ref())<>null()
|| FUN.emsg('Dla etykiety ustawiono kryteria wydruku.\n'
            'Aktualnie nie można jej usunąć.'@)
|? exec('FindInSet','#table','URZ_URZ','URZ_LAB',URZ_LAB.ref())<>null()
|| FUN.emsg('Etykieta wykorzystywana jest w definicji urządzeń mobilnych.\n'
            'Aktualnie nie można jej usunąć.'@)
|| {? FUN.ask('Usunąć etykietę %1?'@[URZ_LAB.KOD])
   || do();
         {? URZ_LAB.TRYB='Z'
         || URZ_LABZ.index('URZ_LABZ');
            URZ_LABZ.prefix(URZ_LAB.ref());
            {? URZ_LABZ.first()
            || {! |?
                  URZ_LABZ.del()
               !}
            ?}
         |? URZ_LAB.TRYB='P'
         || URZ_LABP.index('URZ_LABP');
            URZ_LABP.prefix(URZ_LAB.ref());
            {? URZ_LABP.first()
            || {! |?
                  URZ_LABP.del()
               !}
            ?}
         ?};
         URZ_LABM.index('URZ_LAB');
         URZ_LABM.prefix(URZ_LAB.ref());
         {? URZ_LABM.first() || URZ_LABM.del() ?};
         URZ_LAB.del();
      end()
   ?}
?}


\chk_urz_lab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Weryfikacja danych w oknie redagowania etykiet
::   WE: _a = 'D' = Dolacz, _a = 'P' = Popraw
::----------------------------------------------------------------------------------------------------------------------
_dalej:='';
{? URZ_LAB.KOD=''
|| FUN.emsg('Niewypełniono pola Kod etykiety.'@);
   _dalej:='KOD'
?};
{? _dalej=''
|| {? URZ_LAB.OPIS=''
   || FUN.emsg('Niewypełniono pola Opis etykiety.'@);
      _dalej:='OPIS'
   ?}
?};
{? _dalej=''
|| {? URZ_LAB.ROZM_X=0
   || FUN.emsg('Niewypełniono pola Szerokość etykiety.'@);
      _dalej:='ROZM_X'
   ?}
?};
{? _dalej=''
|| {? URZ_LAB.ROZM_Y=0
   || FUN.emsg('Niewypełniono pola Wysokość etykiety.'@);
      _dalej:='ROZM_Y'
   ?}
?};
{? _dalej=''
|| {? URZ_LAB.ODSTEP=0
   || FUN.emsg('Niewypełniono pola Odstęp.'@);
      _dalej:='ODSTEP'
   ?}
?};
{? _dalej=''
|| {? _a='D'
   || _jezyk:=URZ_LAB.URZ_KOM;
      _kod:=URZ_LAB.KOD;
      URZ_LAB.cntx_psh();
      URZ_LAB.index('URZ_LAB');
      URZ_LAB.prefix(_jezyk,_kod,_kod);
      {? URZ_LAB.first()
      || FUN.emsg('Etykieta o podanym kodzie już istnieje\n'
                  'dla języka drukarki: %1'@[URZ_LAB.URZ_KOM().KOD]);
         _dalej:='KOD'
      ?};
      URZ_LAB.cntx_pop()
   |? _a='P'
   || _ref:=URZ_LAB.ref();
      _jezyk:=URZ_LAB.URZ_KOM;
      _kod:=URZ_LAB.KOD;
      URZ_LAB.cntx_psh();
      URZ_LAB.index('URZ_LAB');
      URZ_LAB.prefix(_jezyk,_kod,_kod);
      {? URZ_LAB.first() & URZ_LAB.ref()<>_ref
      || FUN.emsg('Etykieta o podanym kodzie już istnieje\n'
                  'dla języka drukarki: %1'@[URZ_LAB.URZ_KOM().KOD]);
         _dalej:='KOD'
      ?};
      URZ_LAB.cntx_pop()
   ?}
?};
_dalej


\urz_lab_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła wyświetla definicję etykiety
::----------------------------------------------------------------------------------------------------------------------
{? URZ_LAB.TRYB='P'
|| {? URZ_LAB.URZ_KOM().KOD='DPL'
   || URZ_LABP.index('URZ_LABP')
   || URZ_LABP.index('URZ_LABE')
   ?};
   URZ_LABP.prefix(URZ_LAB.ref());
   URZ_LABP.win_sel('WER');
   URZ_LABP.hdr_sel();
   URZ_LABP.hdr_sel(': %1 (język %2)'@[URZ_LAB.KOD,URZ_KOM.KOD]);
   VAR.RTAG:='D';
   URZ_TAG.win_dict('WER3');
   {? URZ_LABP.lock(1)
   || URZ_LABP.select();
      URZ_LABP.unlock()
   || FUN.info('Inny użytkownik pracuje już z definicją etykiety,'
               'definicja będzie wyświetlona tylko do odczytu.'@);
      URZ_LABP.select(,,,'DUPGW:D')
   ?};
   VAR.RTAG:=''
|? URZ_LAB.TRYB='Z'
|| URZ_LABZ.index('URZ_LABZ');
   URZ_LABZ.prefix(URZ_LAB.ref());
   URZ_LABZ.win_sel('WER');
   {? URZ_LABZ.lock(1)
   || exec('urz_labz','urzadzenia');
      URZ_LABZ.unlock()
   || FUN.info('Inny użytkownik pracuje już z defnicją etykiety,'
               'definicja będzie wyświetlona tylko do odczytu.'@);
      URZ_LABZ.select(,,,'DUPGW:D')
   ?}
?}


\urz_labz_new
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła dodaje nową pozycje definicji etykiety w trybie zaawansowanym
::----------------------------------------------------------------------------------------------------------------------
URZ_LABZ.cntx_psh();
URZ_LABZ.index('URZ_LABZ');
URZ_LABZ.prefix(URZ_LAB.ref());
{? URZ_LABZ.last()
|| _lp:=URZ_LABZ.LP+1
|| _lp:=1
?};
URZ_LABZ.cntx_pop();
URZ_LABZ.blank();
URZ_LABZ.LP:=_lp;
{? URZ_LABZ.edit("exec('chk_urz_labz','urzadzenia')")
|| {? URZ_LABZ.add() || exec('labline2LABMEMO','kody_kresk',URZ_LABZ.URZ_LAB) ?}
?}


\urz_labz_edi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła do edycji pozycji definicji etykiety w trybie zaawansowanym
::----------------------------------------------------------------------------------------------------------------------
{? URZ_LABZ.edit("exec('chk_urz_labz','urzadzenia')")
|| {? URZ_LABZ.put() || exec('labline2LABMEMO','kody_kresk',URZ_LABZ.URZ_LAB) ?}
?}


\urz_labz_gor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła przesuwa pozycje definicji etykiety w góre w trybie zaawansowanym
::----------------------------------------------------------------------------------------------------------------------
{? URZ_LABZ.size()=0 || return(0) ?};
_ref:=URZ_LABZ.ref();
_urz_lab:=URZ_LABZ.URZ_LAB;
URZ_LABZ.cntx_psh();
URZ_LABZ.first();
_lp:=URZ_LABZ.LP;
URZ_LABZ.cntx_pop();
{? URZ_LABZ.LP=_lp
|| return(0)
|| _old_lp:=URZ_LABZ.LP;
   URZ_LABZ.prev();
   _new_lp:=URZ_LABZ.LP;
   URZ_LABZ.LP:=0;
   URZ_LABZ.put();
   URZ_LABZ.seek(_ref);
   URZ_LABZ.LP:=_new_lp;
   URZ_LABZ.put();
   URZ_LABZ.first();
   URZ_LABZ.LP:=_old_lp;
   URZ_LABZ.put();
   URZ_LABZ.seek(_ref);
   exec('labline2LABMEMO','kody_kresk',_urz_lab)
?}


\urz_labz_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła przesuwa pozycje definicji etykiety w dól w trybie zaawansowanym
::----------------------------------------------------------------------------------------------------------------------
{? URZ_LABZ.size()=0 || return(0) ?};
_ref:=URZ_LABZ.ref();
_urz_lab:=URZ_LABZ.URZ_LAB;
URZ_LABZ.cntx_psh();
URZ_LABZ.last();
_lp:=URZ_LABZ.LP;
URZ_LABZ.cntx_pop();
{? URZ_LABZ.LP=_lp
|| return(0)
|| _old_lp:=URZ_LABZ.LP;
   URZ_LABZ.next();
   _new_lp:=URZ_LABZ.LP;
   URZ_LABZ.LP:=0;
   URZ_LABZ.put();
   URZ_LABZ.seek(_ref);
   URZ_LABZ.LP:=_new_lp;
   URZ_LABZ.put();
   URZ_LABZ.first();
   URZ_LABZ.LP:=_old_lp;
   URZ_LABZ.put();
   URZ_LABZ.seek(_ref);
   exec('labline2LABMEMO','kody_kresk',_urz_lab)
?}


\chk_urz_labz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Weryfikacja danych po redakcji pozycji definicji etykiety w trybie
::        zaawansowanym
::----------------------------------------------------------------------------------------------------------------------
_dalej:='';
{? URZ_LABZ.POZ=''
|| FUN.emsg('Pozycja definicji nie może być pusta.'@);
   _dalej:='POZ'
?};
_dalej


\file_frm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła wyświetla listę formatów plików
::----------------------------------------------------------------------------------------------------------------------
FILE_FRM.index('KOD');
FILE_FRM.prefix();
FILE_FRM.win_sel('WER');
FILE_FRM.win_edit('RED');
FILE_FRM.select()


\file_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła wyświetla parametry bieżącego formatu pliku
::----------------------------------------------------------------------------------------------------------------------
FILE_PAR.index('FRMKOD');
FILE_PAR.prefix(FILE_FRM.ref());
FILE_PAR.index('LP');
FILE_PAR.prefix(FILE_FRM.ref());
FILE_PAR.win_sel('WER');
FILE_PAR.select()


\file_par_bin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła wczytuje parametry dla wskazanego formatu pliku BIN z tabeli parametrów plików
::----------------------------------------------------------------------------------------------------------------------
kol_nri:=kol_pom:=kol_sum:=kol_wyd:=kol_pra:=kol_odd:=kol_prz:=kol_ilo:=0;
plik_zam:='';
{? FILE_FRM.PLIK_ZAM<>'' || plik_zam:=FILE_FRM.PLIK_ZAM ?};
{? FILE_PAR.first()
|| {! |?
      kol_sum+=FILE_PAR.WARTOSC;
      FILE_PAR.next()
   !}
?}


\file_par_txt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła wczytuje parametry dla wskazanego formatu pliku TXT z tabeli parametrów plików
::----------------------------------------------------------------------------------------------------------------------
kol_nri:=0;
kol_odd:=0;
kol_wyd:=0;
kol_pom:=0;
kol_pra:=0;
kol_prz:=0;
kol_ilo:=0;
plik_zam:='';
{? FILE_FRM.PLIK_ZAM<>'' || plik_zam:=FILE_FRM.PLIK_ZAM ?};
FILE_PAR.index('FRMKOD');
FILE_PAR.prefix(FILE_FRM.ref());
{? FILE_PAR.first()
|| {? FILE_PAR.find_key('NUMER INWENTARZOWY','NUMER INWENTARZOWY')
   || kol_nri:=FILE_PAR.WARTOSC
   ?};
   {? FILE_PAR.find_key('JEDNOSTKA KSIĘGOWA','JEDNOSTKA KSIĘGOWA')
   || kol_odd:=FILE_PAR.WARTOSC
   ?};
   {? FILE_PAR.find_key('JEDNOSTKA ORGANIZACYJNA','JEDNOSTKA ORGANIZACYJNA')
   || kol_wyd:=FILE_PAR.WARTOSC
   ?};
   {? FILE_PAR.find_key('POMIESZCZENIE','POMIESZCZENIE')
   || kol_pom:=FILE_PAR.WARTOSC
   ?};
   {? FILE_PAR.find_key('PRACOWNIK','PRACOWNIK')
   || kol_pra:=FILE_PAR.WARTOSC
   ?};
   {? FILE_PAR.find_key('PRZEWODNIK/POZYCJA','PRZEWODNIK/POZYCJA')
   || kol_prz:=FILE_PAR.WARTOSC
   ?};
   {? FILE_PAR.find_key('ILOŚĆ','ILOŚĆ')
   || kol_ilo:=FILE_PAR.WARTOSC
   ?}
?}


\urz_kat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2009+]
:: OPIS: Formuła wyświetla liste kategorii urządzen
::----------------------------------------------------------------------------------------------------------------------
URZ_KAT.index('NAZWA');
URZ_KAT.prefix();
URZ_KAT.win_sel('WER');
URZ_KAT.select()


\bl_lab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS:
::  OLD: \bl_lab/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
URZ_LAB.ref()


\bl_kom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS:
::  OLD: \bl_kom/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
URZ_KOM.ref()


\user_sql
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Wartość początkowa pola URZ_HTMP.USER
::  OLD: \user_sql/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
$OPERATOR.USER


\bl_kat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Wartość początkowa pola URZ_KOM.URZ_KAT
::  OLD: \bl_kat/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
URZ_KAT.ref()


\vatrtag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS: Wartość początkowa pola URZ_TAG.RODZAJ
::  OLD: \vatrtag/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.RTAG


\zmkat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [2010]
:: OPIS:
::  OLD: \zmkat/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
ZM.KAT


\urzadzenia
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ  [8.50]
:: OPIS: lista urzadzen specjalnych, np. drukarek kodów kreskowych i czytników
::  OLD: \urzadzen/skid_kkr.fml
::----------------------------------------------------------------------------------------------------------------------
exec('myDPRINT','object');
ZM.KAT:=null;
URZ.win_sel('RAZEM');
URZ.select()


\obiegi_etyk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.41]
:: OPIS: Etykieta dla kodow kreskowych dla skanowanych pierwszych stron
::  OLD: \obiegi_etyk/skid_kkr.fml
::----------------------------------------------------------------------------------------------------------------------
_lab:=$PARWYD.tm_stamp();
'MCL'+REF.FIRMA().SYMBOL+(10+_lab)+(_lab+3)


\dprint_decl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PJ [2008]
:: OPIS: Deklaracja klasy DPRINT
::       myDPRINT.PrintText(label, printer, jobname) - wysyla string z definicja
::       etykiety w jezyku danej drukarki do sterownika tej drukarki. Sterownik powinien
::       pracowac w trybie 'druk bezposredni'.
::       parametry : label(string) - tekst z programem drukujacym etykiete
::                    printer(string) - nazwa sterownika drukarki
::                    jobname(string) - nazwa dokumentu w kolejce druku
::  OLD: \dprint_decl/skid_uz.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('DPRINT', @.CLASS) < 0
|| obj_decl('DPRINT',

   obj_fld('LIB',   "PRIVATE: uchwyt do biblioteki dll";0),
   obj_fld('hPrintText', "PRIVATE: uchwyt funkcji przesylajacej tekst na drukarke";0),
   obj_fld('hDrukarki', "PRIVATE: uchwyt funkcji pobierajacej liste drukarek";0),

   obj_meth('__init',"
   {? cli_ver()='jterm' | cli_ver()='mbasic'
   || _t1:='Nie udało się poprawnie zadeklarować funkcji '@;
      _t2:='Nie udało się poprawnie zainicjować biblioteki dprint.dll.'@;

      _a.LIB:=lib_load('dprint.dll',1);
      {? _a.LIB<>0
      || _a.hPrintText:=lib_decl(_a.LIB,,'int','PrintText','char *','char *','char *');
         _a.hDrukarki:=lib_decl(_a.LIB,,'char *','Drukarki')
      || FUN.emsg(_t2)
      ?}
   ?}
   "),

   obj_meth('__done',"
     {? cli_ver()='jterm' | cli_ver()='mbasic' ||
         {? .LIB<>0 || lib_free(.LIB) ?}
     ?}
     "),

   obj_meth('PrintText',"PUBLIC";"
     {? cli_ver()='jterm' | cli_ver()='mbasic' | exec('interm','#system')
     || {? _<3 | (_a='' | _b='' | _c='')
        || FUN.emsg('Błędne wywołanie metody PrintText.'@)
        || prn_text(_a,_b,_c)
        ?}
     || FUN.emsg('Metoda dotępna tylko dla systemu Windows.'@); ''
     ?}
     "),

     obj_meth('Drukarki',"PUBLIC";"
     {? cli_ver()='jterm' | cli_ver()='mbasic' | exec('interm','#system')
     || {? exec('cli_functions','#system')=0
        || FUN.emsg(exec('indevice_nacc_msg','#system'));
           _ret:=''
        || _json:=prn_list;
           _J:=json_tparse(_json, 20, 60, 0);
           _T:=sql('select VAL Drukarka from :_a where VAL <> ''''', _J);
           _ret:='';
           {? _T.first()
           || _ret:=_T.DRUKARKA;
              {? _T.next()
              || {!
                 |? _ret+=';'+_T.DRUKARKA;
                    _T.next()
                 !}
              ?}
           ?};
           _ret
        ?}
     || FUN.emsg('Metoda dotępna tylko dla systemu Windows'@); ''
     ?}
     ")
   )
?}


\f3_tag_urz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Umożliwia przypisania tag-u ze słownika
::----------------------------------------------------------------------------------------------------------------------
_fld:=URZ_LABZ.POZ;
_pos:=get_cpos();
URZ_TAG.cntx_psh();
_sel:=URZ_TAG.win_sel('?');
URZ_TAG.win_sel('SELGRP');
URZ_TAG.index('RODZ_TAG');
URZ_TAG.prefix();
{? URZ_TAG.select()
|| _tag:=URZ_TAG.KOD;
   {? URZ_TAG.KOD='<GS1code:??>' | URZ_TAG.KOD='<GS1name:??>' | URZ_TAG.KOD='<GS1desc:??>'
   || EAND.cntx_psh();
      _seg:=EAND.win_sel('?');
      EAND.win_sel('SEL');
      EAND.index('KOD');
      EAND.prefix();
      {? EAND.first() & EAND.select() || _tag:=gsub(_tag,'??',EAND.KOD) ?};
      EAND.win_sel(_sel);
      EAND.cntx_pop()
   ?};
   _wsk:=_pos-1;
   URZ_LABZ.POZ:='%1%2%3'[_wsk+_fld,_tag,_wsk-_fld];
   _pos+=+_tag;
   _fld:=URZ_LABZ.POZ
?};
URZ_TAG.cntx_pop();
set_cpos(_pos);
~~


\tagGS1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Formuła do obsługi tag-ów dla kodów GS1
::   WE: _a - kod GS1
::       _b - rodzaj zwracanego wyniku 0(domyślny)-kod alfanumeryczny, 1-napis kodu, 2-wartość wg danych
::   WY: wartość string lub pusta
::----------------------------------------------------------------------------------------------------------------------
_gs1:={? var_pres('_a')=type_of('') || _a || '??' ?};
_typ:={? var_pres('_b')=type_of(0)  || _b || 0 ?};

_res:='';
{? _gs1='??'
|| _res:='error'
|| _res:='Podano kod: %1 i zostanie on przetworzony wg miejsca wywołania.'[_gs1];
   _eand:=exec('FindInSet','#table','EAND','KOD',_gs1,,,1,,null());
   _kod:=16+(EANX.EAND+(16*'_'));
   {? _eand<>null()
   || _eanf:=exec('FindAndGet','#table',EAND,_eand,,"EANF",'');
      _form:={? _eanf<>''
             || exec('FindInSet','#table','EANF','KOD',_eanf,,"@.EANF.FORM",1,,'')
             || ''
             ?};
      {? _form<>''
      || _len:=exec('FindAndGet','#table',EAND,_eand,,"LEN",0);
         EANS.cntx_psh();
         EANS.index('GS1');
         EANS.prefix(_eand,_kod);
         {? EANS.first()
         || _value:={? EANS.R='C' || EANS.VALUE || ($EANS.VALUE)() ?};
            _res:={? _typ=0
                  || ($_form)(_gs1,_value,_len)
                  |? _typ=1
                  || ($_form)(_gs1,_value,-_len)
                  |? _typ=2
                  || exec('to_string','#convert',_value,,,,,,1)
                  || ''
                  ?}
         ?};
         EANS.cntx_pop()
     ?}
   ?}
?};

_res


\urz_mjs_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wyświetla listę miejsc wywołania dla danej etykiety
::----------------------------------------------------------------------------------------------------------------------
URZ_MJS.index('URZ_LAB');
URZ_MJS.prefix(URZ_LAB.ref());
URZ_MJS.select();
~~


\bl_urz_lab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wartość początkowa pola URZ_MJS.URZ_LAB
::----------------------------------------------------------------------------------------------------------------------
URZ_LAB.ref()


\rek_urz_mjs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Rekord przed dla rekordów URZ_MJS
::----------------------------------------------------------------------------------------------------------------------
EANT.index('KOD');
EANT.prefix(URZ_MJS.EANT,);
EANT.first();
''


\chk_urz_mjs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Kontrola porawności wprowadzonych danych
::   WY: ''-ok lub pole
::----------------------------------------------------------------------------------------------------------------------
_res:='';
_ref:={? (1+menu_txt())='P' || URZ_MJS.ref() || null() ?};
{? URZ_MJS.EANT=''
|| FUN.info('Należy wskazać miejsce wywołania.'@);
   _res:='EANT'
|? (_buf:=exec('FindInSet','#table','URZ_MJS','URZ_LAB',URZ_MJS.EANT,URZ_MJS.URZ_LAB,,1,,null());
    _buf<>null() & _buf<>_ref)
|| FUN.info('Podano już miejsce wywołania o kodzie %1 dla wskazanej etykiety.'@[URZ_MJS.EANT]);
   _res:='EANT'
?};
_res


\f3_eant_urz_mjs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Klawisz F3 dla pola URZ_MJS.EANT
::----------------------------------------------------------------------------------------------------------------------
_sel:=EANT.win_sel('?');
EANT.win_sel('SEL');
EANT.index('KOD');
EANT.prefix();
{? EANT.select() || URZ_MJS.EANT:=EANT.KOD ?};
EANT.win_sel(_sel);
URZ_MJS.EANT


\po_eant_urz_mjs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Po redakcji pola URZ_MJS.EANT
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_fld:=URZ_MJS.EANT;

{? _fld=''
|| FUN.info('Należy podać miejsce wywołania.'@);
   _res:=0
|? exec('FindInSet','#table','EANT','KOD',_fld,,,1,,null())=null()
|| {? exec('FindInSet','#table','EANT','KOD',_fld,,,,,null())<>null()
   || URZ_MJS.EANT:=exec('FindInSet','#table','EANT','KOD',_fld,,"@.EANT.KOD",,,'')
   || FUN.info('Nie znaleziono miejsca wywołania o kodzie: %1.'@[_fld]);
      _res:=0
   ?}
?};
{? _res || EANT.OPIS:=exec('FindInSet','#table','EANT','KOD',URZ_MJS.EANT,,"@.EANT.OPIS",1,,'') ?};
_res


\bl_urz_lab_dom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wartość początkowa pola URZ_LAB
::----------------------------------------------------------------------------------------------------------------------
EANX.URZ_LAB


\bl_tab_dom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wartość początkowa pola TAB
::----------------------------------------------------------------------------------------------------------------------
EANX.TAB


\urz_dom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wyświetla listę przypisań danej etykiety do kartotek
::----------------------------------------------------------------------------------------------------------------------
EANX.URZ_LAB:=URZ_LAB.ref();
_fb:="";
_win_grp:=URZ_DOM.grp_make('Powiązane kartoteki z etykietą'@,_fb,'#urz_domgrp',,,);
_fb:="";
_fa:="";
_fr:="exec('refresh','urzadzenia','KH')";
URZ_DOM.grp_sel(_win_grp,,'WER','Kontrahenci'@,_fr,,,,_fb,_fa,,,'maximized');
_fb:="";
_fa:="";
_fr:="exec('refresh','urzadzenia','MGR')";
URZ_DOM.grp_sel(_win_grp,,'WER','Grupy materiałowe'@,_fr,,,,_fb,_fa,,,'maximized');
_fb:="";
_fa:="";
_fr:="exec('refresh','urzadzenia','M')";
URZ_DOM.grp_sel(_win_grp,,'WER','Indeksy materiałowe'@,_fr,,,,_fb,_fa,,,'maximized');
_fb:="";
_fa:="";
_fr:="exec('refresh','urzadzenia','URZ')";
URZ_DOM.grp_sel(_win_grp,,'WER','Urządzenia'@,_fr,,,,_fb,_fa,,,'maximized');

URZ_DOM.win_sel(_win_grp);
URZ_DOM.select()


\refresh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Odświeża listę przypisań danej etykiety do kartotek
::   WE: _a - akronim tabeli
::----------------------------------------------------------------------------------------------------------------------
EANX.TAB:=_a;
URZ_DOM.index('URZ_LAB');
URZ_DOM.prefix(EANX.URZ_LAB,EANX.TAB,);
grp_disp(URZ_DOM,'WER');
~~


\add_urz_dom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Dodaje przypisanie danej etykiety do kartotek
::----------------------------------------------------------------------------------------------------------------------
ZAKR.ACCESS:='N';
VAR_DEL.delete('__zazn');
__zazn:=tab_tmp(1,'UID','STRING[48]','','OPIS','STRING[255]','');
_res:=0;

URZ_DOM.cntx_psh();
URZ_DOM.index('URZ_LAB');
URZ_DOM.prefix(EANX.URZ_LAB,EANX.TAB,);
{? URZ_DOM.first()
|| {!
   |? __zazn.prefix();
      __zazn.blank();
      __zazn.UID:=URZ_DOM.UID;
      __zazn.OPIS:=URZ_DOM.OPIS;
      __zazn.add();
      URZ_DOM.next()
   !}
?};
URZ_DOM.cntx_pop();

{? EANX.TAB='KH'
|| _old_sel:=KH.win_sel('?');
   _acr_sel:=KH.mk_sel('Kontrahenci'@,'P',0,'#urz_dom_kh',,,,,'U');
   KH.win_fld(_acr_sel,ZAKR,'ACCESS',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
   KH.win_fld(_acr_sel,,'KOD',,,10,,0,'Kod'@);
   KH.win_fld(_acr_sel,,'SKR',,,10,,0,'Skrót'@);
   KH.win_fld(_acr_sel,,'NAZ',,,50,,0,'Nazwa'@);
   KH.win_act(_acr_sel,0,'Formuła','Wybierz'@@,,'Wybór pozycji'@,"exec('sel_udom','urzadzenia',1)",,1,1);
   KH.win_act(_acr_sel,0,'Formuła','Zrezygnuj'@@,,'Rezygnacja z wybór pozycji'@,"exec('sel_udom','urzadzenia',0)",,,1);
   KH.win_act(_acr_sel,0,'Formuła','Akceptuj'@@,,'Akceptacja wyboru pozycji'@,"sel_exit()",,);
   KH.win_act(_acr_sel,0,'Kolejność');
   KH.win_act(_acr_sel,0,'Rekord',,,,"exec('rek_udom','urzadzenia')");
   KH.win_sel(_acr_sel);

   KH.cntx_psh();
   KH.index('KOD');
   KH.prefix(2);
   {? KH.first()
   || {? KH.select()
      || _res:=1
      ?}
   ?};
   KH.cntx_pop();
   KH.win_sel(_old_sel)
|? EANX.TAB='MGR'
|| _old_sel:=MGR.win_sel('?');
   _acr_sel:=MGR.mk_sel('Grupy materiałowe'@,'P',0,'#urz_dom_mgr',,,,,'U');
   MGR.win_fld(_acr_sel,ZAKR,'ACCESS',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
   MGR.win_fld(_acr_sel,,'KOD',,,8,,0,'Kod'@);
   MGR.win_fld(_acr_sel,,'NAZ',,,30,,0,'Nazwa'@);
   MGR.win_act(_acr_sel,0,'Formuła','Wybierz'@@,,'Wybór pozycji'@,"exec('sel_udom','urzadzenia',1)",,1,1);
   MGR.win_act(_acr_sel,0,'Formuła','Zrezygnuj'@@,,'Rezygnacja z wybór pozycji'@,"exec('sel_udom','urzadzenia',0)",,,1);
   MGR.win_act(_acr_sel,0,'Formuła','Akceptuj'@@,,'Akceptacja wyboru pozycji'@,"sel_exit()",,);
   MGR.win_act(_acr_sel,0,'Kolejność');
   MGR.win_act(_acr_sel,0,'Rekord',,,,"exec('rek_udom','urzadzenia')");
   MGR.win_sel(_acr_sel);

   MGR.cntx_psh();
   MGR.index('KOD');
   MGR.prefix('T');
   {? MGR.first()
   || {? MGR.select()
      || _res:=1
      ?}
   ?};
   MGR.cntx_pop();
   MGR.win_sel(_old_sel)
|? EANX.TAB='M'
|| _old_sel:=M.win_sel('?');
   _acr_sel:=M.mk_sel('Indeksy materiałowe'@,'P',0,'#urz_dom_m',,,,,'U');
   M.win_fld(_acr_sel,ZAKR,'ACCESS',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
   M.win_fld(_acr_sel,,'KTM',,,50,,0,'Kod'@);
   M.win_fld(_acr_sel,,'N',,,50,,0,'Nazwa'@);
   M.win_act(_acr_sel,0,'Formuła','Wybierz'@@,,'Wybór pozycji'@,"exec('sel_udom','urzadzenia',1)",,1,1);
   M.win_act(_acr_sel,0,'Formuła','Zrezygnuj'@@,,'Rezygnacja z wybór pozycji'@,"exec('sel_udom','urzadzenia',0)",,,1);
   M.win_act(_acr_sel,0,'Formuła','Akceptuj'@@,,'Akceptacja wyboru pozycji'@,"sel_exit()",,);
   M.win_act(_acr_sel,0,'Kolejność');
   M.win_act(_acr_sel,0,'Rekord',,,,"exec('rek_udom','urzadzenia')");
   M.win_sel(_acr_sel);

   M.cntx_psh();
   M.index('ARODZ');
   M.prefix('T','T');
   {? M.first()
   || {? M.select()
      || _res:=1
      ?}
   ?};
   M.cntx_pop();
   M.win_sel(_old_sel)
|? EANX.TAB='URZ'
|| _old_sel:=URZ.win_sel('?');
   _acr_sel:=URZ.mk_sel('Urządzenia'@,'P',0,'#urz_dom_urz',,,,,'U');
   URZ.win_fld(_acr_sel,ZAKR,'ACCESS',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
   URZ.win_fld(_acr_sel,,'NAZWA',,,50,,0,'Kod'@);
   URZ.win_fld(_acr_sel,,'URZ_KOM','KOD',,50,,0,'Język/protokół komunikacji'@);
   URZ.win_act(_acr_sel,0,'Formuła','Wybierz'@@,,'Wybór pozycji'@,"exec('sel_udom','urzadzenia',1)",,1,1);
   URZ.win_act(_acr_sel,0,'Formuła','Zrezygnuj'@@,,'Rezygnacja z wybór pozycji'@,"exec('sel_udom','urzadzenia',0)",,,1);
   URZ.win_act(_acr_sel,0,'Formuła','Akceptuj'@@,,'Akceptacja wyboru pozycji'@,"sel_exit()",,);
   URZ.win_act(_acr_sel,0,'Kolejność');
   URZ.win_act(_acr_sel,0,'Rekord',,,,"exec('rek_udom','urzadzenia')");
   URZ.win_sel(_acr_sel);

   _urz_kat:=exec('FindInSet','#table','URZ_KAT','NAZWA','DRUKARKA',,,1,,null());
   _urz_kom:=EANX.URZ_LAB().URZ_KOM;
   URZ.cntx_psh();
   URZ.index('URZ');
   URZ.prefix(_urz_kat,_urz_kom);
   {? URZ.first()
   || {? URZ.select()
      || _res:=1
      ?}
   ?};
   URZ.cntx_pop();
   URZ.win_sel(_old_sel)
?};

URZ_DOM.cntx_psh();
{? _res
|| URZ_DOM.index('URZ_LAB');
   URZ_DOM.prefix(EANX.URZ_LAB,EANX.TAB,);
   {? URZ_DOM.first() || {! |? URZ_DOM.del() !} ?};
   __zazn.prefix();
   {? __zazn.first()
   || {!
      |? URZ_DOM.prefix();
         URZ_DOM.blank();
         URZ_DOM.UID:=__zazn.UID;
         URZ_DOM.OPIS:=__zazn.OPIS;
         URZ_DOM.add(1);
         __zazn.next()
      !}
   ?}
?};
URZ_DOM.cntx_pop();

VAR_DEL.delete('__zazn');
~~


\sel_udom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Zaznaczenie lub rezygnacja z zaznaczenia przypisanie danej etykiety do kartotek
::   WE: [_a] - 1(domyślnie)-wybór, 0-rezygnacja
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_a')=type_of(0) || _a || 1 ?};

__zazn.prefix();
{? _tryb & ~__zazn.find_key(cur_tab.uidref())
|| __zazn.blank();
   __zazn.UID:=cur_tab.uidref();
   __zazn.OPIS:=exec('descudom','urzadzenia');
   __zazn.add()
|? ~_tryb & __zazn.find_key(cur_tab.uidref())
|| __zazn.del()
?}


\rek_udom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Ustawienie zmiennej ZAKR.ACCESS
::----------------------------------------------------------------------------------------------------------------------
__zazn.prefix();
ZAKR.ACCESS:={? __zazn.find_key(cur_tab.uidref()) || 'T' || 'N' ?};
exec('actions','kontrahent');
~~


\descudom
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Zwraca opis
::----------------------------------------------------------------------------------------------------------------------
{? EANX.TAB='MGR' || '%1 - %2'[MGR.KOD,MGR.NAZ]
|? EANX.TAB='M'   || '%1 - %2'[M.KTM,M.N]
|? EANX.TAB='URZ' || '%1 [Język: %2], [Port: %3], [Driver: %4]'[URZ.NAZWA,URZ.URZ_KOM().KOD,URZ.PORT,URZ.DRIVER]
|? EANX.TAB='KH'  || '%1 - [%2] - %3'[KH.KOD,KH.SKR,KH.NAZ]
|| ''
?}


\pr_urz_tag
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Ustawia prefix dla TAG-ów
::   WE: _a - rodzaj TAG-u
::----------------------------------------------------------------------------------------------------------------------
_rodz:={? var_pres('_a')=type_of('') || _a || 'T' ?};
URZ_TAG.index('RODZ_TAG');
URZ_TAG.prefix(_rodz);
~~


\del_urz_labz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Formuła usuwa pozycje definicji etykiety w trybie zaawansowanym
::----------------------------------------------------------------------------------------------------------------------
_urz_lab:=URZ_LAB.ref();

_sel:=URZ_LABZ.sel_aget();
URZ_LABZ.sel_adel();
URZ_LABZ.cntx_psh();
{? _sel.size()
|| {? FUN.ask('Usunąć zaznaczone pozycje definicji etykiety?'@) & _sel.first()
   || {!
      |? {? (URZ_LABZ.prefix(); URZ_LABZ.seek(_sel.REF,))
         || URZ_LABZ.del();
            exec('ren_urz_labz','urzadzenia',_urz_lab)
         ?};
         _sel.next()
      !}
   ?}
|? FUN.ask('Usunąć pozycje definicji etykiety?'@)
|| URZ_LABZ.del();
   exec('ren_urz_labz','urzadzenia',_urz_lab)
?};
URZ_LABZ.cntx_pop();
~~


\ren_urz_labz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Formuła zmienia numeracje pozycji etykiety po usunięciu
::   WE: _a - ref URZ_LABZ
::----------------------------------------------------------------------------------------------------------------------
URZ_LABZ.cntx_psh();
URZ_LABZ.index('URZ_LABZ');
URZ_LABZ.prefix(_a);
_lp:=0;
{? URZ_LABZ.first()
|| {!
   |? {? URZ_LABZ.LP-_lp>1
      || URZ_LABZ.LP:=_lp+1;
         URZ_LABZ.put()
      ?};
      _lp:=URZ_LABZ.LP;
      URZ_LABZ.next()
   !};
   URZ_LABZ.last();
   {? URZ_LABZ.LP<>URZ_LABZ.size()
   || FUN.error('Niezgodność LP w tabeli URZ_LABZ.'@)
   ?}
?};
URZ_LABZ.cntx_pop();
exec('labline2LABMEMO','kody_kresk',_a)


\grp_urz_mjs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Grupowe dołączenie miejsc wywołania
::----------------------------------------------------------------------------------------------------------------------
_urz_lab:=URZ_LAB.ref();

URZ_MJS.cntx_psh();
VAR_DEL.delete('__zatw');
__zatw:=0;
_tab:=tab_tmp(1,'KOD','STRING[16]','Kod miejsca'
      ,'OPIS','STRING[60]','Opis'
      ,'ACCESS','STRING[1]','Uprawnienie'
      ,'REF','STRING[16]','Ref SQL'
      ,'GRP','STRING[10]','Grupa');
EANT.cntx_psh();
EANT.index('KOD');
EANT.prefix();
{? EANT.first()
|| {!
   |? _tab.blank();
      _tab.KOD:=EANT.KOD;
      _tab.OPIS:=EANT.OPIS;
      _tab.REF:=$EANT.ref();
      _tab.ACCESS:={? exec('FindInSet','#table','URZ_MJS','URZ_LAB',EANT.KOD,_urz_lab)<>null() || 'T' || 'N' ?};
      _tab.GRP:=EANT.GRP;
      _tab.add(1);
      EANT.next()
   !}
?};
EANT.cntx_pop();

_sel:=_tab.mk_sel('Wybór miejsc wywołania dla etykiety'@,'P',,'#urz_mjs_grp',,,,,'U');
_tab.win_fld(_sel,,'ACCESS',,,,,,,,'Czy wybrano [T/N]?'@,2,,"'T'","'N'");
_tab.win_fld(_sel,,'OPIS');
_tab.win_fld(_sel,,'KOD');

_formula:="_tab:=cur_tab();
           _tab.ACCESS:='T';
           {? _tab.put(1) & _tab.GRP<>''
           || _grp:=_tab.GRP;
              _tab.cntx_psh();
              _tab.prefix();
              {? _tab.first() || {! |? {? _tab.GRP=_grp || _tab.ACCESS:='T'; _tab.put(1) ?}; _tab.next() !} ?};
              _tab.cntx_pop()
           ?}";
_tab.win_act(_sel,,'Formuła','&Wybierz'@@,,,_formula,,1,1,"sel_nchk()",,'W');
_tab.win_btn(_sel,'text='+'&Wybierz'@+',panel=right,align=begin','menu:W',,,,,,'noempty');

_formula:="_tab:=cur_tab();
           _tab.ACCESS:='N';
           {? _tab.put(1) & _tab.GRP<>''
           || _grp:=_tab.GRP;
              _tab.cntx_psh();
              _tab.prefix();
              {? _tab.first() || {! |? {? _tab.GRP=_grp || _tab.ACCESS:='N'; _tab.put(1) ?}; _tab.next() !} ?};
              _tab.cntx_pop()
           ?}";
_tab.win_act(_sel,,'Formuła','&Odbierz'@@,,,_formula,,,1,"sel_nchk()",,'O');
_tab.win_btn(_sel,'text='+'&Odbierz'@+',panel=right,align=begin','menu:O',,,,,,'noempty');

_formula:="__zatw:=1; sel_exit()";
_tab.win_act(_sel,,'Formuła','&Akceptuj'@@,,,_formula,,,,,,'A');
_tab.win_btn(_sel,'text='+'&Akceptuj'@+',btn_label_align=center,panel=bottom,align=end','menu:A',,,,,,'noempty');

_tab.win_btn(_sel,'text='+'A&nuluj'@+',btn_label_align=center,panel=bottom,align=end','key:Esc');
_tab.win_act(_sel,,'Kolejność',);

:: Takie czary, żeby zadziałały tłumaczenia poniżej (teksty MUSZĄ być identyczne)
'Czy zakończyć wybór miejsc wywołania dla etykiety?'@; 'Uwaga. Wprowadzone zmiany nie zostaną uwzględnione.'@;
_tab.win_act(_sel,,'Okienko',,,,,"
   {? ~__zatw
   || FUN.ask('Czy zakończyć wybór miejsc wywołania dla etykiety?'@+
              '\n'+
              'Uwaga. Wprowadzone zmiany nie zostaną uwzględnione.'@)
   || 1
   ?}");
_tab.win_act(_sel,,'Rekord',,,,"
      _tab:=cur_tab();
      {? _tab.ACCESS='T' | _tab.sel_size()
      || _tab.actions(_tab.win_sel('?'),,'O',1)
      || _tab.actions(_tab.win_sel('?'),,'W',1)
      ?}
   ");
_tab.win_sel(_sel);
{? _tab.select()
|| URZ_MJS.index('URZ_LAB');
   URZ_MJS.prefix(_urz_lab);
   {? URZ_MJS.first() || {! |? URZ_MJS.del() !} ?};
   _tab.clear();
   {? _tab.first()
   || {!
      |? {? _tab.ACCESS='T'
         || URZ_MJS.blank();
            URZ_MJS.URZ_LAB:=_urz_lab;
            URZ_MJS.EANT:=_tab.KOD;
            URZ_MJS.add(1)
         ?};
         _tab.next()
      !}
   ?}
?};
VAR_DEL.delete('__zatw');
URZ_MJS.cntx_pop();
~~


\add_urz_mjs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Dołączenie miejsca wywołania
::----------------------------------------------------------------------------------------------------------------------
URZ_MJS.blank();
EANT.blank();
{? URZ_MJS.edit("exec('chk_urz_mjs','urzadzenia')")
|| {? URZ_MJS.add(1)
   || _eant:=URZ_MJS.EANT;
      _grp:=exec('FindInSet','#table','EANT','KOD',_eant,,"@.EANT.GRP",1,,'');
      {? _grp<>''
      || EANT.cntx_psh();
         EANT.index('AGRP');
         EANT.prefix('T',_grp,);
         {? EANT.first()
         || {!
            |? {? _eant<>EANT.KOD
               || URZ_MJS.EANT:=EANT.KOD;
                  URZ_MJS.add(1)
               ?};
               EANT.next()
            !}
         ?};
         EANT.cntx_pop()
      ?}
   ?}
?}


\mod_urz_mjs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Dołączenie miejsca wywołania
::----------------------------------------------------------------------------------------------------------------------
_eant:=URZ_MJS.EANT;
_grp:=exec('FindInSet','#table','EANT','KOD',_eant,,"@.EANT.GRP",1,,'');
{? URZ_MJS.edit("exec('chk_urz_mjs','urzadzenia')")
|| {? URZ_MJS.put(1)
   || _urz_lab:=URZ_MJS.URZ_LAB;
      _ref:=URZ_MJS.ref();
      URZ_MJS.cntx_psh();
      {? _eant<>URZ_MJS.EANT & _grp<>''
      || URZ_MJS.index('URZ_LAB');
         URZ_MJS.prefix(_urz_lab);
         {? URZ_MJS.first()
         || {!
            |? {? _ref<>URZ_MJS.ref()
               || _buf:=exec('FindInSet','#table','EANT','KOD',URZ_MJS.EANT,,"@.EANT.GRP",1,,'');
                  {? _buf=_grp || URZ_MJS.del() || URZ_MJS.next() ?}
               || URZ_MJS.next()
               ?}
            !}
         ?}
      ?};
      URZ_MJS.cntx_pop();
      _eant:=URZ_MJS.EANT;
      _grp:=exec('FindInSet','#table','EANT','KOD',_eant,,"@.EANT.GRP",1,,'');
      {? _grp<>''
      || EANT.cntx_psh();
         EANT.index('AGRP');
         EANT.prefix('T',_grp,);
         {? EANT.first()
         || {!
            |? {? _eant<>EANT.KOD
               || URZ_MJS.EANT:=EANT.KOD;
                  URZ_MJS.add(1)
               ?};
               EANT.next()
            !}
         ?};
         EANT.cntx_pop()
      ?}
   ?}
?}


\bl_fnc1
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [23.25]
:: OPIS: Wartość początkowa dla kodu FNC1
::----------------------------------------------------------------------------------------------------------------------
'>8'

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 dc26a69ad9c218b09a526ff2d49f3aebf70de475d297bd53c509059bc44474f2cae192c6b47b626c41fab3e8a43d21f981d770370ae772c41caad5e29400187301f87942afa39ff1bd0fe42ead11a33a6b3f6201a2e2e85129c6471de97871d403f95ea022079940c808a4ae5959004041e1a9ca89edebb3d6f9313955f91add
