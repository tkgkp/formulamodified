:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: aktp1251.fml
:: Utworzony: 11.12.2019
:: Autor: ARTSLO
:: Systemy:
::======================================================================================================================
:: Zawartość:
::======================================================================================================================
\kali_81
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DAROKR i ATA [12.51]
:: OPIS: Dodanie nowej rubryki (7108) z pliku rubryki.dfg oraz przesunięcie kolejności naliczania istniejących
::       dla których zastosowano koszty uzyskania w wysokości 50%
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
R.clear();
exec('rubobj','rubobj');
{? var_pres('RUB')<0
|| RUB:=obj_new(CLASS.RUB)
?};
RUB.fill();
RA_DEF.cntx_psh();
RA_DEF.index('RODZAJ');
RA_DEF.prefix('S',901);
{? RA_DEF.first()
|| RA_DEF.prefix();
   exec('add_attr','rubobj',901,9017,'ZP: składki zdrowotne od zwolnionego przychodu',1,
      'Składki zdrowotne od zwolnionego przychodu płacone przez pracownika',,7108);
   RA_DEF.index('RODZAJ');
   RA_DEF.prefix('S');
   {? RA_DEF.find_key(9011)
   || RA_USE.index('RA_USE');
      RA_USE.prefix(RA_DEF.ref,RUB.ref[7002]);
      {? RA_USE.first() || RA_USE.del() ?}
   ?}
?};
RA_DEF.cntx_pop();


exec('rubobj','rubobj');
{? var_pres('RUB')<0
|| RUB:=obj_new(CLASS.RUB)
?};
RUB.fill();
R.cntx_psh();
R.index('RUBKOD');
{? R.find_key(780)
|| _lp:=R.LP
|| _lp:=0
?};
{? _lp & R.find_key(7002)
|| R.LP:=_lp;
   R.put();
   exec('r_pop_po','formuly')
?};
{? R.find_key(7002)
|| _lp:=R.LP
|| _lp:=0
?};
{? _lp & R.find_key(7003)
|| R.LP:=_lp;
   R.put();
   exec('r_pop_po','formuly')
?};
R.cntx_pop();
1


\akt_1251_37
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ARSLOMA [19.42_01]
:: OPIS: Zmodyfikowa formuła Aktualizacji 12.51_37 - eTeczka.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SLO_NAZ.cntx_psh();
SLO_TYP.cntx_psh();

:: najpierw sprawdźmy czy są odpowiednie słowniki dla załączników / ewentualnie je dodajmy
_add:="SLO_NAZ.NAZWA:=_a; SLO_NAZ.add(1)";
SLO_NAZ.clear;
SLO_TYP.index('SYMBOL');
SLO_TYP.prefix;
{? SLO_TYP.find_key('ZAL','ZAL')
|| _ref:=SLO_TYP.ref()
|| _ref:=null()
?};
{? _ref<>null()
||
   _typ1:=exec('slo_naz','ext_slo',exec('slo_typ','ext_slo','ZAL'),'Oświadczenie PIT-12');
   {? _typ1=null()
   || SLO_NAZ.clear;
      SLO_NAZ.SLO_TYP:=_ref;
      _add('Oświadczenie PIT-12')
   ?};
   _typ2:=exec('slo_naz','ext_slo',exec('slo_typ','ext_slo','ZAL'),'Oświadczenie dotyczące kosztów z praw autorskich');
   {? _typ2=null()
   || SLO_NAZ.clear;
      SLO_NAZ.SLO_TYP:=_ref;
      _add('Oświadczenie dotyczące kosztów z praw autorskich')
   ?};
   _typ3:=exec('slo_naz','ext_slo',exec('slo_typ','ext_slo','ZAL'),'Wniosek o stosowanie ruchomego czasu pracy');
   {? _typ3=null()
   || SLO_NAZ.clear;
      SLO_NAZ.SLO_TYP:=_ref;
      _add('Wniosek o stosowanie ruchomego czasu pracy')
   ?};
   _typ4:=exec('slo_naz','ext_slo',exec('slo_typ','ext_slo','ZAL'),'Wniosek o udzielenie czasu wolnego');
   {? _typ4=null()
   || SLO_NAZ.clear;
      SLO_NAZ.SLO_TYP:=_ref;
      _add('Wniosek o udzielenie czasu wolnego')
   ?}
?};

:: Dla pewności wyłączmy trigery
ZALACZ.trig_off('*','*');
exec('map','util');
exec('zalacz_to_dokum','napraw_p',KZP_E);
exec('zalacz_to_dokum','napraw_p',KZP_K);
:: Unifikacja miejsca przechowywania załączników.
:: Załączniki osobowe, które do tej pory przechowywane były w DOKUM przenosimy do ZALACZ.
exec('dokum_to_zalacz','aktp1251',PIT12O,'Oświadczenie PIT-12');
exec('dokum_to_zalacz','aktp1251',OS_PAB,'Oświadczenie dotyczące kosztów z praw autorskich');
exec('dokum_to_zalacz','aktp1251',A_RWN,'Wniosek o stosowanie ruchomego czasu pracy');
exec('dokum_to_zalacz','aktp1251',R_ODN,'Wniosek o udzielenie czasu wolnego');
ZALACZ.cntx_psh();
ZALACZ.prefix();
ZALACZ.for_each("{? ZALACZ.ZAL=null() || ZALACZ.del() ?}",1);
ZALACZ.cntx_pop();
:: Przywracamy trigery
ZALACZ.trig_on('*','*');

&_add;
SLO_NAZ.cntx_pop();
SLO_TYP.cntx_pop()


\dokum_to_zalacz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.51]
:: OPIS: Formuła transferująca wybrane załączniki personelowe z tabeli DOKUM do tabeli ZALACZ.
::       Formuła wewnętrzna - poprawność parametrów nie jest weryfikowana.
::       Wersja do transferu bez komunikatów
::   WE:  _a  [TABLE]  - Uchwyt tabeli, z którą związane są załączniki.
::        _b  [STRING] - Nazwa typu załącznika.
::       [_c] [STRING] - Akronim pola w tabeli _a typu _OSOBA [domyślnie: 'OSOBA'].
::       [_d] [STRING] - Akronim pola w tabeli _a typu _P [domyślnie: 'P'].
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_TAB:=_a;
_nazwa:=_b;
_ao:={? var_pres('_c')=type_of('') || _c || 'OSOBA' ?};
_ap:={? var_pres('_d')=type_of('') || _d || 'P' ?};

_typ:=exec('slo_naz','ext_slo',exec('slo_typ','ext_slo','ZAL'),_nazwa);
{? _typ=null()
|| return(0)
?};

_fmlp:=
   {? var_pres(_ap,_TAB)=26
   || $('ZALACZ.P:='+!_TAB+'.'+_ap)
   || ""
   ?};
_fmlo:=
   {? var_pres(_ao,_TAB)=26
   || $('{? ZALACZ.P=null() || ZALACZ.OSOBA:='+!_TAB+'.'+_ao+' ?}')
   || ""
   ?};

_TAB.cntx_psh();
_TAB.prefix();
{? _TAB.first()
|| OSOBA.cntx_psh();
   OSOBA.prefix();
   ZALACZ.cntx_psh();
   ZALACZ.index('SQLREF');
   ZALACZ.clear();
   DOKUM.cntx_psh();
   DOKUM.index('DOKUM');
   {!
   |? DOKUM.prefix(REF.FIRMA,$_TAB.ref(),);
      {? DOKUM.first()
      || do();
         {!
         |? ZALACZ.blank();
            ZALACZ.ZAL:=DOKUM.DOKUM;
            ZALACZ.DATA:=DOKUM.DATA;
            ZALACZ.TYP_ZAL:=_typ;
            ZALACZ.RODZAJ:=2-!_TAB;
            _fmlp();
            _fmlo();
            ZALACZ.SQLREF:=DOKUM.REFSQL;
            {? ZALACZ.OSOBA<>null() | ZALACZ.P<>null()
            || ZALACZ.add();
               {? var_pres('IDADD',DOKUM)=39
               || _uid:=DOKUM.uidref(); _rr:=DOKUM.del(); exec('dokumlog_del','zbl_dok',_uid)
               || _rr:=DOKUM.del()
               ?};
               _rr
            || DOKUM.next()
            ?}
         !};
         end()
      ?};
      _TAB.next()
   !};
   DOKUM.cntx_pop();
   ZALACZ.cntx_pop();
   OSOBA.cntx_pop()
?};
_TAB.cntx_pop();

1


\akt_1251_55
::----------------------------------------------------------------------------------------------------------------------
::  UTW: pk [12.51]
:: OPIS: Aktualizacja "Zmiana w sposobie obliczania podatku od osób fizycznych"
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
R.clear();
exec('rubobj','rubobj');
{? var_pres('RUB')<0
|| RUB:=obj_new(CLASS.RUB)
?};
RUB.fill();
exec('add_attr','rubobj',9,901,'ZP: zwolnienie przychodu z art.21 ust.1 pkt 148',1,
   'Atrybuty obsługujące zwolnienie przychodu z art.21 ust.1 pkt 148'
);
exec('add_attr','rubobj',901,9011,'ZP: brak zwolnienia przychodu art.21 ust.1 pkt 148',1,
   'Składniki płacowe niebędące przychodem podlegającym zwolnieniu od podatku zgodnie z art.21 ust.1 pkt 148 ustawy',,
   7002,650
);
exec('add_attr','rubobj',901,9012,'ZP: przychód podlegający zwolnieniu',1,
   'Przychód podlegający zwolnieniu od podatku',,7094
);
exec('add_attr','rubobj',901,9013,'ZP: nominalny podatek',1,
   'Nominalny podatek wyliczony z przychodu zwolnionego od podatku z art.21 ust.1 pkt 148',,7095
);
exec('add_attr','rubobj',901,9014,'ZP: koszty uzyskania przychodu do wyliczeń',1,
   'Specjalne koszty uzyskania przychodu do wyliczeń zwolnienia od podatku',,7096
);
exec('add_attr','rubobj',901,9015,'ZP: ulga podatkowa do wyliczeń',1,
   'Specjalna ulga podatkowa dla wyliczeń zwolnienia od podatku',,7097
);

:: Uzupełnienie pola ZWPOD w tabeli RU.
{? var_pres('ZWPOD',RU)>0
|| RU.cntx_psh();
   RU.prefix();
   RU.for_each(
      "  {? RU.K='1'
         || RU.ZWPOD:='T'
         || RU.ZWPOD:='N'
         ?};
         RU.put(1)
      "
   );
   RU.cntx_pop()
?};
1


\jest_a65
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Sprawdza, czy definicja zawiera elementy aktualizacji 12.51_65.
::   WE:
::   WY: 0 - brak aktualizacji, 1 - definicja zaktualizowana
::----------------------------------------------------------------------------------------------------------------------
var_pres('PPK_POD')=type_of(SYSLOG)


\akt_1251_65
::----------------------------------------------------------------------------------------------------------------------
::  UTW: pk [12.51]
:: OPIS: Aktualizacja zbiorcza.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: uzupełnienie stałych systemu
:: wartości nie zmieniające działania systemu
exec('init_zes','stalesys',KST_PPK);
KST_PPK.POD_WMW:='T';
KST_PPK.D_PRZWPL:=0;
KST_PPK.PPKEMAIL:='S';
exec('zapisz_zes','stalesys',date(0,0,0),KST_PPK,'POD_WMW','D_PRZWPL','PPKEMAIL');
:: ustawienia dla zgodności z wytycznymi odnośnie naliczania podatku
_ok:=0;
KST_PPK.POD_WMW:='N';
KST_PPK.D_PRZWPL:=15;
EDIT_VAR.DATA:=date(date()~1,date()~2,0)+1;
_wnd:=KST_PPK.mk_edit('Wyliczenie przychodu z tytułu wpłat PPK',0);
KST_PPK.win_efld(_wnd,EDIT_VAR,'DATA',,,,,,'Data wprowadzenia zmiany');
KST_PPK.win_efld(_wnd,KST_PPK,'D_PRZWPL');

KST_PPK.cntx_psh();
KST_PPK.win_edit(_wnd);
{!
|? {? KST_PPK.edit("
         {? EDIT_VAR.DATA=date(0,0,0)
         || FUN.emsg('""Data wprowadzenia zmiany"" musi być podana.');
            return('DATA')
         |? KST_PPK.D_PRZWPL<0 | KST_PPK.D_PRZWPL>31
         || FUN.emsg('Błędna wartość pola ""'+MS.name(KST_PPK,'D_PRZWPL')+'"".');
            return('D_PRZWPL')
         ?};
         1
      ")
   || _ok:=1;
      0
   || ~FUN.ask('Czy na pewno zrezygnować z wprowadzenia zmian?')
   ?}
!};
{? _ok
|| exec('zapisz_zes','stalesys',EDIT_VAR.DATA,KST_PPK,'POD_WMW','D_PRZWPL')
?};
KST_PPK.cntx_pop();
KST_PPK.win_edel(_wnd);

:: poprawa nazw zadania i powiadomienia
_pe:=spli_str('E,Z',',');
_st_1:='Informacja o wznowieniu naliczania wpłat';
_st_2:='Przypomnienie o przekazaniu deklaracji wypłaty tra';
_txt:='Przypomnienie o przekazaniu dekl. wypłaty transf.';
_kod:='PPK_DWT';
POCZTA.cntx_psh();
POCZTA.index('KOD');
{! _ii:=1..obj_len(_pe)
|! POCZTA.prefix(REF.FIRMA,_pe[_ii],FL.SYSTEM,FL.SYSTEM,_kod,_kod);
   {? POCZTA.first() & (POCZTA.OPIS=_st_1 | POCZTA.OPIS=_st_2)
   || POCZTA.OPIS:=_txt;
      POCZTA.put()
   ?}
!};
obj_del(_pe);
POCZTA.cntx_pop();

:: dodanie nowego typu załącznika
exec('links','links');
1


\jest
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Sprawdza, czy w definicji znajduje się podstawowy element PPK.
::   WE:
::   WY: 0 - w definicji brak KST_PPK, 1 - KST_PPK istnieje
::----------------------------------------------------------------------------------------------------------------------
var_pres('KST_PPK')=type_of(SYSLOG)


\akt_1251_90
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Aktualizacja: Tarcza antykryzysowa - wsparcie w ewidencji.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
R.clear();
exec('rubobj','rubobj');
{? var_pres('RUB')<0
|| RUB:=obj_new(CLASS.RUB)
?};
RUB.fill();

exec('kali_1251_90','aktp1251');
exec('ppk_1251_90','aktp1251');

1


\kali_1251_90
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Aktualizacja: Tarcza antykryzysowa - wsparcie w ewidencji - Kadry i płace.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_typ:=exec('slo_typ','ext_slo','H_STAT');
exec('kod_ref','ext_slo',_typ,'T_ZM_WYM','Tarcza antykryzysowa - zmiana wymiaru zatrudnienia');
exec('kod_ref','ext_slo',_typ,'T_ZM_WAR','Tarcza antykryzysowa - zmiana stawki wynagrodzenia');
1


\ppk_1251_90
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Aktualizacja: Tarcza antykryzysowa - wsparcie w ewidencji - PPK.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
{? exec('jest','aktp1251')=0
:: brak aplikacji PPK
|| return(1)
?};

{? RUB.sys_rub(7).size()=0
:: brak aktualizacji
|| return(1)
?};

_ref:=exec('dodaj','ppk_wrd','U','WB25B','Blokada wpłat na podstawie art. 25',,'N','N');
{? _ref<>null
|| exec('dodaj','ppk_wst',_ref,RUB.sys_kod(710),'T');
   exec('dodaj','ppk_wst',_ref,RUB.sys_kod(711),'T');
   exec('dodaj','ppk_wst',_ref,RUB.sys_kod(712),'T');
   exec('dodaj','ppk_wst',_ref,RUB.sys_kod(713),'T')
?};

_ref:=exec('dodaj','ppk_wrd','U','WB25W','Wznowienie wpłat na podstawie art. 25',,'N','N');

_ref:=exec('dodaj','ppk_wrd','U','DOWU25','Deklaracja opłacania wpłat uczestnika art. 25',,'N','T');
{? _ref<>null
|| exec('dodaj','ppk_wst',_ref,RUB.sys_kod(712),,'N');
   exec('dodaj','ppk_wst',_ref,RUB.sys_kod(713),,'N')
?};

1


\jest_a96
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Sprawdza, czy definicja zawiera elementy aktualizacji 12.51_96.
::   WE:
::   WY: 0 - brak aktualizacji, 1 - definicja zaktualizowana
::----------------------------------------------------------------------------------------------------------------------
var_pres('DWT_OKR',KST_PPK)=22


\imex_rep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Ustala unikalne wartości pola IMEX w tabeli OSOBA jeżeli wykryje brak unikalności.
::   WE:
::   WY:  1 - operacja powiodła się
::        0 - operacje niepowiodła się
::----------------------------------------------------------------------------------------------------------------------
:: Sprawdzenie wypełnienia pola IMEX w tabeli osoba:
OSOBA.cntx_psh();
OSOBA.index('IMEX');
OSOBA.prefix();
_repeat:=0;
_ret:=1;

{? OSOBA.first()
|| {!
   |? _prvImex:=OSOBA.IMEX;
      OSOBA.cntx_psh();
      {? OSOBA.next() & OSOBA.IMEX=_prvImex
      || _repeat:=1
      ?};
      OSOBA.cntx_pop();

      ~_repeat & OSOBA.next()
   !}
?};
:: Jeśli znalazłem błąd w polu IMEX, zmieniam we wszystkich:
{? _repeat
|| OSOBA.trig_off('*','*');
   OSOBA.index('OSOBA');
   OSOBA.prefix();
   do();
   {? OSOBA.first()
   || {!
      |? OSOBA.IMEX:=#OSOBA.ref();
         _ret:=OSOBA.put(1);

         _ret & OSOBA.next()
      !}
   ?};
   end();
   OSOBA.trig_on('*','*')
?};
OSOBA.cntx_pop();

_ret


\ppk_1251_108
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Aktualizacja PPK 12.51_108
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
:: Uzupełnienie widoków stałych systemu o nowe pole KST_PPK.PRZEJ_DO:
exec('init_zes','stalesys',KST_PPK);
KST_WID.cntx_psh();
KST_WID.prefix();
KST_WID.f_set(
   'NUMER',
   'join KST_SYS using(KST_WID.KST_SYS,KST_SYS.REFERENCE) '
   'join KST_MAP using(KST_WID.KST_MAP,KST_MAP.REFERENCE) '
   'join KST_ZES using(KST_MAP.KST_ZES,KST_ZES.REFERENCE) ',
   'KST_SYS.SYSTEM=\'PPK\' and KST_ZES.SYMBOL=\'KST_PPK\''
);
{? KST_WID.f_last()
|| _num:=KST_WID.NUMER;
   _sys:=KST_WID.KST_SYS;
   KST_MAP.cntx_psh();
   KST_MAP.index('KST_MAP');
   KST_MAP.prefix('KST_PPK','KST_PPK');
   {? KST_MAP.find_key('PRZEJ_DO','PRZEJ_DO')
:: Znajdź pole w zmiennej reprezentujące stałą:
   || {? ~KST_WID.find_tab(,'KST_SYS',,'=',_sys,'KST_MAP',,'=',KST_MAP.ref())
::    Uzupełnij widok o pole:
      || KST_WID.KST_MAP:=KST_MAP.ref();
         KST_WID.NUMER:=_num+1;
         KST_WID.add()
      ?}
   ?};
   KST_MAP.cntx_pop()
?};
KST_WID.f_clear();
KST_WID.cntx_pop();

1


\jest_a108
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Sprawdza, czy definicja zawiera elementy aktualizacji 12.51_108.
::   WE:
::   WY: 0 - brak aktualizacji, 1 - definicja zaktualizowana
::----------------------------------------------------------------------------------------------------------------------
var_pres('PRZEJ_DO',KST_PPK)=21


\kali_97
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: ER/WRT/XP/12.51/2010/0035 - modyfikuje wartość pola KAL_OPIS.RODZAJ, KAL_DEF.RODZAJ i KAL_BUFF.RODZAJ na 'G'
::       Obecnie jedynie wartość 'G' jest poprawnie kwalifikowana w systemie.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: we wzorcach zmieniamy wszystkie zapisy
KAL_OPIS.cntx_psh();
KAL_OPIS.prefix();
KAL_OPIS.for_each("
   {? KAL_OPIS.RODZAJ='W'
   || KAL_OPIS.RODZAJ:='G';
      KAL_OPIS.put()
   ?}
",1);
KAL_OPIS.cntx_pop();

:: w kalendarzach zmieniamy wszystkie zapisy
KAL_DEF.cntx_psh();
KAL_DEF.prefix();
KAL_DEF.for_each("
   {? KAL_DEF.DATA>=#0 & KAL_DEF.RODZAJ='W'
   || KAL_DEF.RODZAJ:='G';
      KAL_DEF.put()
   ?}
",1);
KAL_DEF.cntx_pop();

:: w buforach zmieniamy wszystkie zapisy
KAL_BUFF.cntx_psh();
KAL_BUFF.prefix();
KAL_BUFF.for_each("
   {? KAL_BUFF.DATA>=#0 & KAL_BUFF.RODZAJ='W'
   || KAL_BUFF.RODZAJ:='G';
      KAL_BUFF.put()
   ?}
",1);
KAL_BUFF.cntx_pop();
1


\is_por
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [12.51]
:: OPIS: Funkcja sprawdza czy zastosowano aktualizację 12.51_121 (Xpertis Portal HR).
::       Zakładamy, że jeżeli w DEF-ie są odpowiednie zmiany, to pliki formuł również zostały zaaktualizowane.
::   WE: [_a] [NUMBER] - Tryb wsadowy (bez komunikatów): 0*/1.
::   WY: 1/0
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;
_msg:=~_batch;

_ret:=0;
{? ~exec('runtime','system',20.32,'P.80',_batch)
|| ~~

|? ~exec('lic','system','POR')
|| {? _msg
   || FUN.info('Brak licencji na moduł Portal HR.\nOpcja niedostępna.')
   ?}

|? var_pres('BNFTT')<>type_of(P)
|| {? _msg
   || FUN.info('Brak aktualizacji w definicji systemu.\nOpcja niedostępna.')
   ?}

|? fexists('porbenef.fml',1)<>1
|| {? _msg
   || FUN.info('Brak kompletu plików wymaganych przez aktualizację.\nOpcja niedostępna.')
   ?}

|| _ret:=1
?};
_ret


\akt_1251_154
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Aktualizacja PPK 12.51_108
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
:: Uzupełnienie widoków stałych systemu o nowe pola KST.PRGWYN oraz KST.PDBP:
exec('init_zes','stalesys',KST);
KST_WID.cntx_psh();
KST_WID.prefix();
KST_WID.f_set(
   'NUMER',
   'join KST_SYS using(KST_WID.KST_SYS,KST_SYS.REFERENCE) '
   'join KST_MAP using(KST_WID.KST_MAP,KST_MAP.REFERENCE) '
   'join KST_ZES using(KST_MAP.KST_ZES,KST_ZES.REFERENCE) ',
   'KST_SYS.SYSTEM=\'KALI\' and KST_ZES.SYMBOL=\'KST\''
);
{? KST_WID.f_last()
|| _pola:=spli_str('PRGWYN,PDBP',',');
   _num:=KST_WID.NUMER;
   _sys:=KST_WID.KST_SYS;
   KST_MAP.cntx_psh();
   KST_MAP.index('KST_MAP');
   KST_MAP.prefix('KST','KST');
   {! _ii:=1..obj_len(_pola)
   |! {? KST_MAP.find_key(_pola[_ii],_pola[_ii])
::    Znajdź pole w zmiennej reprezentujące stałą:
      || {? ~KST_WID.find_tab(,'KST_SYS',,'=',_sys,'KST_MAP',,'=',KST_MAP.ref())
::       Uzupełnij widok o pole:
         || KST_WID.KST_MAP:=KST_MAP.ref();
            KST_WID.NUMER:=_num+_ii;
            KST_WID.add()
         ?}
      ?}
   !};
   KST_MAP.cntx_pop()
?};
KST_WID.f_clear();
KST_WID.cntx_pop();

1


\jest_a154
::----------------------------------------------------------------------------------------------------------------------
::  UTW: IS [12.51]
:: OPIS: Sprawdza, czy definicja zawiera elementy aktualizacji 12.51_108.
::   WE:
::   WY: 0 - brak aktualizacji, 1 - definicja zaktualizowana
::----------------------------------------------------------------------------------------------------------------------
var_pres('PRGWYN',KST)=20 & var_pres('PDBP',KST)=20


\akt_1251_83
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ATA [12.51]
:: OPIS: Aktualizacja: Dodatkowy zasilek opiekunczy, przestój, kwarantanna
::   WY:
::----------------------------------------------------------------------------------------------------------------------
R.clear();
exec('rubobj','rubobj');
{? var_pres('RUB')<0
|| RUB:=obj_new(CLASS.RUB)
?};
RUB.fill();
:: aktualizacja aktrybutów rubryk
exec('add_attr','rubobj',1225,12253,'Zasiłek dodatkowy',1,,,7118);
exec('add_uses','rubobj',7118,14,15,16,19,123,129,151,162,191,192,195);
exec('add_uses','rubobj',7118,196,1223,1293,1922,12231,14312);
exec('add_attr','rubobj',131,1314,'Przestój',1,,,7119);
exec('add_attr','rubobj',45,453,'Przestój',1,,,7120,7121);
   exec('add_attr','rubobj',453,4531,'Wynagrodzenie za przestój',1,,,7120);
   exec('add_attr','rubobj',453,4532,'Korekta wynagrodzenia za przestój',1,,,7121);

exec('add_attr','rubobj',3,34,'Stałe składn. wyn. wypłacane podczas przestoju',1,
   'Stałe składniki wynagrodzenia z przebiegu zatrudnienia wypłacane podczas przestoju.');

exec('add_attr','rubobj',45,454,'Stałe składniki wynagrodzenia',1);
   exec('add_attr','rubobj',454,4541,'Dodatki funkcyjne',1);
      exec('add_attr','rubobj',4541,45411,'Dodatek funkcyjny',1,,,101);
      exec('add_attr','rubobj',4541,45412,'Dodatek brygadzistowski',1,,,102);
   exec('add_attr','rubobj',454,4542,'Dodatki stałe',1);
      exec('add_attr','rubobj',4542,45421,'Dodatek stały',1,,,110);

exec('add_attr','rubobj',13,137,'Nieobecności niestanowiące obniżenia min. wyn.',1,
   'Nieobecności niestanowiące obniżenia minimalnego wynagrodzenia',,7119);
exec('add_uses','rubobj',7119,14,152,161,192,199,1923,19421,14350);
exec('add_uses','rubobj',7120,6313107,48);
exec('add_uses','rubobj',7121,6313107,48);


:: aktualizacja aktrybutów rubryk
exec('add_attr','rubobj',1211,12113,'Kwarantanna',1,,,7123);
exec('add_uses','rubobj',7122,14,15,16,19,123,126,129,151,162,191,192);
exec('add_uses','rubobj',7122,195,196,1223,1293,1921,12231,14313);

exec('add_attr','rubobj',12211,122113,'Kwarantanna',1,,,7122);
exec('add_uses','rubobj',7123,14,15,16,19,100,126,129,151,161,191,192);
exec('add_uses','rubobj',7123,195,196,1001,1293,1921,10011,14331,100112);

:: usuniecie nieprawidlowych atrybutow
RA_DEF.index('RODZAJ');
RA_DEF.prefix('S');
{? RA_DEF.find_key(1213)
|| exec('cascadel','util',RA_DEF)
?};
{? RA_DEF.find_key(1213)
|| exec('cascadel','util',RA_DEF)
?};
{? RA_DEF.find_key(12214)
|| exec('cascadel','util',RA_DEF)
?};

_wyn:=_zas:=null;
R.cntx_psh;
R.index('RUBKOD');
R.prefix;
{? R.find_key(7122)
|| _zas:=R.ref
?};
{? R.find_key(7123)
|| _wyn:=R.ref
?};
R.cntx_pop;

RA_USE.index('RA_USE');
{? RA_DEF.find_key(12111) & _wyn
|| RA_USE.prefix(RA_DEF.ref,_wyn);
  {? RA_USE.first || {! |? RA_USE.del !} ?}
?};
{? RA_DEF.find_key(122111) & _zas
|| RA_USE.prefix(RA_DEF.ref,_zas);
  {? RA_USE.first || {! |? RA_USE.del !} ?}
?};

:: Aktualizacja tabeli kodow nieobecnosci chorobowych
KST_CHOR.cntx_psh;
KST_CHOR.index('KST_CHOR');
KST_CHOR.prefix();
{? _wyn & _zas & ~KST_CHOR.find_key(7123)
|| KST_CHOR.WYN:=_wyn;
   KST_CHOR.ZAS:=_zas;
   KST_CHOR.add()
?};
KST_CHOR.cntx_pop;
1


\akt_71
:----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.41]
:: OPIS: Rejestrowanie urlopów rodzicielskich wykorzystanych u poprzednich pracodawców.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('RD_OKR')>0 & var_pres('PRAC',@.RD_OKR)>0
|| RD_OKR.clear;
   RD_OKR.for_each("{? RD_OKR.PRAC='' || RD_OKR.PRAC:='T'; RD_OKR.put(1) ?}",1)
?};
1


\upgrade1251_nru01
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Sprawdza, czy została naniesiona definicja aktualizacji systemu do 12.51_NRU01
::----------------------------------------------------------------------------------------------------------------------
var_pres('DS_EXCEL',XR_TMP)>0 & var_pres('NWOPO')>0


\e_xr_ds_excel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: 12.51_NRU01 Nowe rodzaje urlopów  - formuła naprawcza.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_wynik:=0;

:: wyszukujemy tylko "szablon uniwersalny" dla wydruków "Informacja o warunkach pracy" i "Umowa o pracę"
:: oraz "Umowa o pracę z premią comiesięczną" dla wydruku "Umowa o pracę"
_szUniw:=exec('def_tmp','skid_xr');
_szablony:=spli_str('%1,%2,%3'['zaswwarp','zaswumpr','zaswumpr'],',');
_nazwy_sz:=spli_str('%1,%2,%3'[_szUniw,   _szUniw,   'Umowa o pracę z premią comiesięczn'],',');
_def:=obj_new(obj_len(_szablony));
{! _ii:=1..obj_len(_def)
|! _def[_ii]:=exec('get_def','skid_xr',_szablony[_ii])
!};
obj_del(_szablony);

XR_TMP.cntx_psh();
XR_TMP.index('OPIS');
{! _ii:=1..obj_len(_def)
|! XR_TMP.prefix(_def[_ii],_nazwy_sz[_ii]);
   {? XR_TMP.first()
   || {!
      |? {? XR_TMP.DS_EXCEL<>'T'
         || XR_TMP.DS_EXCEL:='T';
            _wynik+=XR_TMP.put()
         || _wynik+=1
         ?};
         XR_TMP.next()
      !};
      _wynik:=_wynik>=1
   ?}
!};
XR_TMP.cntx_pop();
obj_del(_nazwy_sz);
obj_del(_def);
_wynik

:Sign Version 2.0 jowisz:1045 2023/07/21 13:25:28 779634f05226764dfd0219cdbe827bba0ee4c58f06d36363cac0b540e8dc73c58927903f909ecfaafa8733ace66aa255102229c54e4d292ec0d9eba55ca4ccc5923a3fa8400ca8443e41d523ea225695ab68f58ffc53ea3bcff0642e6a3429035eeec33d08897749de32139ac5d86cf99cabf00b15e5e18939fa16afd80ab88e
