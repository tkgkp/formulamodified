:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: base_linker.fml
:: Utworzony: 15.07.2022
:: Autor: PD
:: Systemy:
::======================================================================================================================
:: Zawartość: Obsługa portalu baselinker.com
::======================================================================================================================
:: zasilenie danymi
\addInventoryWarehouse
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS:  pobranie statusów zamówienia
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='addInventoryWarehouse';
_par:=exec('json_addInventoryWarehouse','base_linker');
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? var_pres('warehouse_id', json_parse(_wyn_obj.WYN))=1
|| $json_parse(_wyn_obj.WYN).warehouse_id
|? var_pres('warehouse_id', json_parse(_wyn_obj.WYN))=2
|| json_parse(_wyn_obj.WYN).warehouse_id
|| ''
?}

\json_addInventoryWarehouse
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie nowego magazynu
::   WE:
::----------------------------------------------------------------------------------------------------------------------
MG.cntx_psh();
MG.prefix();
{? ~MG.seek(SYNC_ID.REK) || MG.cntx_pop(); return('') ?};

_json:='{
    %1
    "name": "%2",
    "description": "%3",
    "stock_edition": false
}'[
::warehouse_id
{? SYNC_ID.ID<>'brak' || '"warehouse_id":"%1",'[ SYNC_ID.ID] || '' ?},
::name
MG.SYM,
::description
BASLIN_K.NAME+' - '+MG.NAZ
];
MG.cntx_pop();
_json


\deleteInventoryWarehouse
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS:  usunięcie grupy cenowej
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='deleteInventoryWarehouse';
_par:=exec('json_deleteInventoryWarehouse','base_linker');
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
var_pres('error_message', json_parse(_wyn_obj.WYN))=2


\json_deleteInventoryWarehouse
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie nowego katalogu
::   WE:
::----------------------------------------------------------------------------------------------------------------------
_json:='{
    "warehouse_id": "%1"
}'[
::warehouse_id
SYNC_ID.ID
];
_json


\addInventoryPriceGroup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS:  pobranie statusów zamówienia
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='addInventoryPriceGroup';
_par:=exec('json_addInventoryPriceGroup','base_linker');
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? var_pres('price_group_id', json_parse(_wyn_obj.WYN))=1
|| $json_parse(_wyn_obj.WYN).price_group_id
|? var_pres('price_group_id', json_parse(_wyn_obj.WYN))=2
|| json_parse(_wyn_obj.WYN).price_group_id
|| ''
?}


\json_addInventoryPriceGroup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie nowej grupy cenowej
::   WE:
::----------------------------------------------------------------------------------------------------------------------
TAR.cntx_psh();
TAR.prefix();
{? ~TAR.seek(SYNC_ID.REK) || TAR.cntx_pop(); return('') ?};

_json:='{
    %1
    "name": "%2",
    "description": "%3",
    "currency": "PLN"
}'[
::price_group_id
{? SYNC_ID.ID<>'brak' || '"price_group_id":"%1",'[SYNC_ID.ID] || '' ?},
::name
TAR.KOD,
::description
BASLIN_K.NAME+' - '+TAR.NAZ
];
TAR.cntx_pop();
_json


\deleteInventoryPriceGroup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS:  usunięcie grupy cenowej
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='deleteInventoryPriceGroup';
_par:=exec('json_deleteInventoryPriceGroup','base_linker');
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
var_pres('error_message', json_parse(_wyn_obj.WYN))=2


\json_deleteInventoryPriceGroup
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie nowego katalogu
::   WE:
::----------------------------------------------------------------------------------------------------------------------
_json:='{
    "price_group_id": "%1"
}'[
::price_group_id
SYNC_ID.ID
];
_json


\addInventory
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS:  pobranie statusów zamówienia
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='addInventory';
_par:=exec('json_addInventory','base_linker');
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? var_pres('inventory_id', json_parse(_wyn_obj.WYN))=1
|| $json_parse(_wyn_obj.WYN).inventory_id
|? var_pres('inventory_id', json_parse(_wyn_obj.WYN))=2
|| json_parse(_wyn_obj.WYN).inventory_id
|| ''
?}

\json_addInventory
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie nowego katalogu
::   WE:
::----------------------------------------------------------------------------------------------------------------------
_json:='{
    %1
    "name": "%2",
    "description": "%3",
    "languages": ["pl"],
    "default_language": "pl",
    "price_groups": [%4],
    "default_price_group": %5,
    "warehouses": [%6],
    "default_warehouse": %7,
    "reservations": false
}'[
::inventory_id
{? BASLIN_K.ID<>'' || '"inventory_id":"%1",'[BASLIN_K.ID] || '' ?},
::name
BASLIN_K.NAME,
::description
BASLIN_K.DESC,
::price_groups
_mask:=exec('get_mask','!zws_par_basl',BASLIN_K.NAME+'_TAR');
_wyn:='';
SYNC_ID.cntx_psh();
{? _mask<>'' & SYNC_ID.use(_mask) & (SYNC_ID.prefix();SYNC_ID.first())
|| {!|?
      {? SYNC_ID.ID<>'' &  SYNC_ID.ID<>'brak'|| _wyn+=SYNC_ID.ID+', ' ?};
      SYNC_ID.next()
   !}
?};
SYNC_ID.cntx_pop();
_wyn:=_wyn-2,
::default_price_group
BASLIN_K.TAR_ID,
::warehouses
_mask:=exec('get_mask','!zws_par_basl',BASLIN_K.NAME+'_MG');
_wyn:='';
SYNC_ID.cntx_psh();
{? _mask<>'' & SYNC_ID.use(_mask) & (SYNC_ID.prefix();SYNC_ID.first())
|| {!|?
      {? SYNC_ID.ID<>'' &  SYNC_ID.ID<>'brak'|| _wyn+='"bl_%1"'[SYNC_ID.ID]+', ' ?};
      SYNC_ID.next()
   !}
?};
SYNC_ID.cntx_pop();
_wyn:=_wyn-2,
::default_warehouse
'"bl_%1"'[BASLIN_K.MG_ID]
];
_json


\deleteInventory
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS:  pobranie statusów zamówienia
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='deleteInventory';
_par:=exec('json_deleteInventory','base_linker');
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
var_pres('error_message', json_parse(_wyn_obj.WYN))=2


\json_deleteInventory
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie nowego katalogu
::   WE:
::----------------------------------------------------------------------------------------------------------------------
_json:='{
    "inventory_id": "%1"
}'[
::inventory_id
BASLIN_K.ID
];
_json


\addInventoryCategory
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie grup materiałowych
::   WE: _a - 1- podgrupa / 0- grupa
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_mgrp:={? var_pres('_a')=type_of(1) || _a || 0 ?};
_token:=exec('get','#params',700808,2);
_method:='addInventoryCategory';
_par:=exec('json_addInventoryCategory','base_linker',_mgrp);
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? var_pres('category_id', json_parse(_wyn_obj.WYN))=1
|| $json_parse(_wyn_obj.WYN).category_id
|? var_pres('category_id', json_parse(_wyn_obj.WYN))=2
|| json_parse(_wyn_obj.WYN).category_id
|| ''
?}

\json_addInventoryCategory
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie nowego magazynu
::   WE: _a - 1- podgrupa / 0- grupa
::----------------------------------------------------------------------------------------------------------------------
_mgrp:={? var_pres('_a')=type_of(1) || _a || 0 ?};
{? _mgrp
||
   MGRP.cntx_psh();
   MGRP.prefix();
   {? ~MGRP.seek(SYNC_ID.REK) || MGRP.cntx_pop(); return('') ?}
||
   MGR.cntx_psh();
   MGR.prefix();
   {? ~MGR.seek(SYNC_ID.REK) || MGR.cntx_pop(); return('') ?}
?};
_json:='{
    "inventory_id":"%1",
    %2
    "name": "%3",
    "parent_id": %4
}'[
::inventory_id
BASLIN_K.ID,
::category_id
{? SYNC_ID.ID<>'brak' || '"category_id":"%1",'[SYNC_ID.ID] || '' ?},
::name
{? _mgrp || MGRP.NAZ || MGR.NAZ ?},
::parent_id
{? _mgrp
||
   _wyn:=exec('get_id','#sync_id',BASLIN_K.NAME+'_MGR',$MGRP.MGR);
   {? var_pres('ID',_wyn) || _wyn.ID || '0' ?}
|| '0'
?}
];
{? _mgrp ||  MGRP.cntx_pop() ||  MGR.cntx_pop() ?};
_json


\deleteInventoryCategory
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS:  usunięcie grupy cenowej
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='deleteInventoryCategory';
_par:=exec('json_deleteInventoryCategory','base_linker');
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
var_pres('error_message', json_parse(_wyn_obj.WYN))=2


\json_deleteInventoryCategory
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie nowego katalogu
::   WE:
::----------------------------------------------------------------------------------------------------------------------
_json:='{
    "category_id": "%1"
}'[
::category_id
SYNC_ID.ID
];
_json


\addInventoryProduct
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie produktów
::   WE: [_a] -bez zdjęć
::----------------------------------------------------------------------------------------------------------------------
_nopict:={? var_pres('_a')=type_of(1) || _a || 0 ?};
_url:='https://api.baselinker.com/connector.php';
_http:=inet_get(_url);
_token:=exec('get','#params',700808,2);
_method:='addInventoryProduct';
_file:=fopen('addInventoryProduct.txt','w',,,1);
_url_file:=fopen(null,'bw',,,1);
{? ~_file.is_open() || return('') ?};
{? ~_url_file.is_open() || return('') ?};
fwrite(_url_file, 'method='+_method+'&parameters=');

exec('json_addInventoryProduct','base_linker',_file,_nopict);
{? _file.is_open() || _file.fclose() ?};
{? var_press('_file')>100 || obj_del(_file) ?};
_file:=fopen('addInventoryProduct.txt','r',,,1);
{? ~_file.is_open() || return('') ?};

_read:=fread(_file,500);
{? _read<>'\n'
||
   {!|?
      fwrite(_url_file, _http.url_encode(_read));
      _read:=fread(_file,500);
      _read<>'\n'
   !}
?};
_wyn_obj:=exec('http_send','firm_kur',_url_file,_method,1,1,_file,_token);
{? _file.is_open() || _file.fclose() ?};
{? _url_file.is_open() || _url_file.fclose() ?};
{? var_press('_file')>100 || obj_del(_file) ?};
{? var_press('_url_file')>100 || obj_del(_url_file) ?};
{? var_pres('product_id', json_parse(_wyn_obj.WYN))=1
|| $json_parse(_wyn_obj.WYN).product_id
|? var_pres('product_id', json_parse(_wyn_obj.WYN))=2
|| json_parse(_wyn_obj.WYN).product_id
|| ''
?}


\json_addInventoryProduct
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie nowego produktu
::   WE: _a -_file
::       _b - bez zdjęć
::----------------------------------------------------------------------------------------------------------------------
_nopict:={? var_pres('_b')=type_of(1) || _b || 0 ?};
M.cntx_psh();
M.prefix();
{? ~M.seek(SYNC_ID.REK) || M.cntx_pop(); return(~~) ?};
_file:=_a;
_json:='{
    "inventory_id": "%1",
    %2
    "is_bundle": false,
    "ean": "%3",
    "sku": "",
    "tax_rate": %4,
    "weight": %5,
    "height": %6,
    "width": %7,
    "length": %8,
    "star": 0,
    "category_id": %9,
    "prices": {%10},
    "stock": {%11},
    "locations": {},
    "text_fields": {
        "name": "%12",
        "description": "%13"
    }
}'[
::inventory_id
BASLIN_K.ID,
::product_id
{? SYNC_ID.ID<>'' & SYNC_ID.ID<>'brak' || '"product_id":"%1",'[SYNC_ID.ID] || '' ?},
::ean
M.KODK,
::tax_rate
SLO.cntx_psh();
_wyn:=gsub(M.VAT().KOD-1,' ','');
SLO.cntx_pop();
_wyn,
::weight
gsub($M.WN,',','.'),
::height
gsub($M.WYS,',','.'),
::width
gsub($M.SZER,',','.'),
::length
gsub($M.DLUG,',','.'),
::category_id
_wyn:='';
{? M.MGRP<>null()
||
   _sync_id:=exec('get_id','#sync_id',BASLIN_K.NAME+'_MGRP',$M.MGRP);
   {? var_pres('ID',_sync_id) || _wyn:=_sync_id.ID; obj_del(_sync_id) ?}
?};
{? _wyn=''
||
   _sync_id:=exec('get_id','#sync_id',BASLIN_K.NAME+'_MGR',$M.MGR);
   {? var_pres('ID',_sync_id) || _wyn:=_sync_id.ID; obj_del(_sync_id) ?}
?};
_wyn,
::prices
exec('prices','base_linker'),
::stock
exec('stock','base_linker'),
::text_fields-name
M.KTM+' - '+M.N,
::text_fields-description
M.memo_txt(,1,'OPIS')
];
::images
exec('images','base_linker',_json, _file, _nopict);
M.cntx_pop();
~~


\deleteInventoryProduct
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS:  usunięcie grupy cenowej
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='deleteInventoryProduct';
_par:=exec('json_deleteInventoryProduct','base_linker');
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
var_pres('error_message', json_parse(_wyn_obj.WYN))=2


\json_deleteInventoryProduct
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Usunięcie produktu
::   WE:
::----------------------------------------------------------------------------------------------------------------------
_json:='{
    "product_id": "%1"
}'[
::product_id
SYNC_ID.ID
];
_json


::odczytywanie danych
\getOrderSources
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Aktualizacja źródeł zamówień
::   WE: _a - 1- podgrupa / 0- grupa
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='getOrderSources';
_par:='{}';
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
_int:=0;
_wyn:=_wyn_obj.WYN;
{!|?
   _wyn:=gsub(_wyn,'"%1'[$_int],'"t%1'[$_int]);
   _int+=1;
   _int<=9
!};
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
_tab_wyn:=json_parse(_wyn);
{? type_of(_tab_wyn)=117
& var_pres('sources', _tab_wyn)>0
& (_sources_size:=obj_len(_tab_wyn.sources))>0
||
   _sources_int:=1;
   {!|?
      {? (_size:=obj_len(_tab_wyn.sources[_sources_int]))>0
      ||
         _int:=1;
         BASLIN_K.cntx_psh();
         BASLIN_K.index('ID');
         {!|?
            _id:= {? (1+obj_ntab_names(_tab_wyn.sources[_sources_int])[_int])='t'
                  || 1-obj_ntab_names(_tab_wyn.sources[_sources_int])[_int]
                  || obj_ntab_names(_tab_wyn.sources[_sources_int])[_int]
                  ?};

            BASLIN_K.prefix('Z',_id,obj_ntab_names(_tab_wyn.sources)[_sources_int]);
            {? ~BASLIN_K.first
            ||
               BASLIN_K.blank();
               BASLIN_K.TYPE:='Z';
               BASLIN_K.DESC:=_tab_wyn.sources[_sources_int][_int];
               BASLIN_K.NAME:=obj_ntab_names(_tab_wyn.sources)[_sources_int];
               BASLIN_K.ID:=_id;
               BASLIN_K.add()
            ?};
            _int+=1;
            _int<=_size
         !};
         BASLIN_K.cntx_pop()
      ?};
      _sources_int+=1;
      _sources_int<=_sources_size
   !};
   FUN.info('Zaktualizowano źródła zamówień.'@)
||
   FUN.info('Nie udało się zaktualizować źródeł zamówień.'@)
?};
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
~~


\getOrders
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Pobranie zamówień
::   WE: _a - BASLIN_K.ID,
::       _b - BASLIN_K.NAME,
::       _c - BASLIN_K.ZK_N_ID
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='getOrders';
_par:=exec('json_getOrders','base_linker',_a,_b,_c);
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
_wsenv:=exec('wsenv','#mwapi');
_ok:=1;

{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
_tab_wyn:=json_parse(_wyn_obj.WYN);
{? type_of(_tab_wyn)=117
& var_pres('orders', _tab_wyn)>0
& (_orders_size:=obj_len(_tab_wyn.orders))>0
||
   _orders_int:=1;
   {!|?
      _wsenv.erase();
      _products:=1;
      _order:=1;
      {? var_pres('_buffers')>100 || obj_del(_buffers) ?};
      _buffers:=obj_new('ZK_N','POZ');
      _buffers.ZK_N:=exec('ZK_N','buffer');
      _buffers.ZK_N.blank();
::identyfikatory
      _buffers.ZK_N.BASLIN_O:={? type_of(_tab_wyn.orders[_orders_int].order_id)=type_of(0)
                              || _tab_wyn.orders[_orders_int].order_id
                              || 0
                              ?};
      _buffers.ZK_N.BASLIN_H:={? type_of(_tab_wyn.orders[_orders_int].shop_order_id)=type_of(0)
                              || _tab_wyn.orders[_orders_int].shop_order_id
                              || 0
                              ?};
      _buffers.ZK_N.BASLIN_E:=_tab_wyn.orders[_orders_int].external_order_id;
::źródło zamówienia
      BASLIN_K.cntx_psh();
      BASLIN_K.index('ID');
      BASLIN_K.prefix('Z',$_tab_wyn.orders[_orders_int].order_source_id,_tab_wyn.orders[_orders_int].order_source);
      {? BASLIN_K.first()
      ||
         _buffers.ZK_N.BASLIN_K:=BASLIN_K.ref();
         _buffers.ZK_N.T:=BASLIN_K.TYPYZAM
      || _wsenv.add_error('Brak Źródła %1 w synchronizacji'@[$_tab_wyn.orders[_orders_int].order_source_id]);_ok:=0
      ?};
      BASLIN_K.cntx_pop();
::status zamówienia
      ABS_STA.cntx_psh();
      ABS_STA.index('ID');
      ABS_STA.prefix('B',$_tab_wyn.orders[_orders_int].order_status_id,);
      {? ABS_STA.first() || _buffers.ZK_N.ABS_STA:=ABS_STA.ref() ?};
      ABS_STA.cntx_pop();
::daty
      _tmform:=tm_form(#($_tab_wyn.orders[_orders_int].date_confirmed+'000000'));
      _buffers.ZK_N.DT:=_buffers.ZK_N.DP:=date(#(4 + _tmform),#(2 + (5-_tmform)),#(2 + (8-_tmform)));
::pozycje
      _oddz:='';
      {? var_pres('products', _tab_wyn.orders[_orders_int])>0 &
      (_prod_size:=obj_len(_tab_wyn.orders[_orders_int].products))>0 & _ok
      ||
          _buffers.POZ:=obj_new(_prod_size);
          _prod_int:=1;
         {!|?
            {? var_pres('_poz')>100 || obj_del(_poz) ?};
            _poz:=_tab_wyn.orders[_orders_int].products[_prod_int];
            _buffers.POZ[_prod_int]:=exec('ZK_P','buffer');
            _buffers.POZ[_prod_int].blank();
            BASLIN_K.cntx_psh();
            BASLIN_K.index('ID');
            BASLIN_K.prefix('K',$_poz.storage_id);
            _baslin_k:={? BASLIN_K.first()
                       || BASLIN_K.ref()
                       || _products:=0;
                          null()
                       ?};
            {? _products
            ||
               M.cntx_psh();
               M.prefix();
               _mat:='';
               _mat_rek:=exec('get_rek','#sync_id',BASLIN_K.NAME+'_M',_poz.product_id);
               {? var_pres('_mat_rek')>100 & var_pres('REK',_mat_rek) || _mat:=_mat_rek.REK; obj_del(_mat_rek) ?};
               {? _mat<>'' & M.seek(_mat)
               || _buffers.POZ[_prod_int].M:=M.ref()
               || _wsenv.add_error('Brak produktu %1 w synchronizacji'@[_poz.product_id]);_ok:=0
               ?};
               M.cntx_pop();

               MG.cntx_psh();
               MG.prefix();
               _mg:='';
               _mg_rek:=exec('get_rek','#sync_id',BASLIN_K.NAME+'_MG',$_poz.warehouse_id);
               {? var_pres('_mg_rek')>100 & var_pres('REK',_mg_rek) || _mg:=_mg_rek.REK; obj_del(_mg_rek) ?};
               {? _mg<>'' & MG.seek(_mg)
               || _buffers.POZ[_prod_int].MG:=MG.ref();
                  {? _oddz='' || _oddz:=MG.ODDZ ?}
               || _wsenv.add_error('Brak magazynu %1 w synchronizacji'@[$_poz.warehouse_id]);_ok:=0
               ?};
               MG.cntx_pop();
               _buffers.POZ[_prod_int].POZ:=_prod_int;
               _buffers.POZ[_prod_int].CENA:=_poz.price_brutto;
               _buffers.POZ[_prod_int].ILZ:=_buffers.POZ[_prod_int].ILP:=_buffers.POZ[_prod_int].IL2:=_poz.quantity;
               _buffers.POZ[_prod_int].WS2:=1;
               _buffers.POZ[_prod_int].J2:=exec('FindAndGet','#table',M,_buffers.POZ[_prod_int].M,,"M.J",'')
            ?};
            BASLIN_K.cntx_pop();
            _prod_int+=1;
            _prod_int<=_prod_size & _products
         !}
      || _products:=0
      ?};
      {? _products & _oddz='' || _wsenv.add_error('Nie udało się ustawić oddziału'@);_ok:=0  ?};
      _buffers.ZK_N.ODDZ:=_oddz;
      _mask:='zknag'+_oddz+'__';
::sprawdzenie czy zamówienie już jest w systemie
      {? _products & _ok
      ||
         ZK_N.cntx_psh();
         ZK_N.use(_mask);
         ZK_N.index('ORDID');
         ZK_N.prefix(_buffers.ZK_N.BASLIN_O);
         {? ZK_N.first() | _buffers.ZK_N.BASLIN_O=0 || _order:=0 ?};
         ZK_N.cntx_pop()
      ?};
::kontrahent
      {? _ok & _products & _order
      ||
         KH.cntx_psh();
         KH.index('EM');
         KH.prefix(2,_tab_wyn.orders[_orders_int].email);
         {? _tab_wyn.orders[_orders_int].email<>'' & KH.first()
         || _buffers.ZK_N.KH:=KH.ref()
         || KH.blank();
            KH.EM:=_tab_wyn.orders[_orders_int].email;
            KH.TYP:='I';
:: Zakładamy że email jest unikalny ale jeżeli nie jest podany to tworzymy kh jako nr zamówienia lub znacznik czasowy
            {? KH.NAZ_P='' || KH.NAZ_P:=KH.EM ?};
            {? KH.NAZ_P='' & type_of(_tab_wyn.orders[_orders_int].order_id)=type_of(0)
            & _tab_wyn.orders[_orders_int].order_id<>0
            || KH.NAZ_P:=$_tab_wyn.orders[_orders_int].order_id
            ?};
            {? KH.NAZ_P='' || KH.NAZ_P:=tm_stamp() ?};
            KH.NAZ:=60+_tab_wyn.orders[_orders_int].user_login;
            {? KH.NAZ='' || KH.NAZ:=60+KH.NAZ_P ?};
            KH.TEL:=_tab_wyn.orders[_orders_int].phone;
            KH.WIELKOSC:='nieustalony';
            _params:=exec('mp_run_a','#b__box');
            _params.ACT_UID:='ZWS_PAR_KKHR';
            _params.AKCJA:='Dołącz';
            _params.PROC_START:='T';
            _params.QUIET:='T';
            exec('mp_run','#b__box',_params);
            {? var_pres('_params')>100 || obj_del(_params) ?};
            KH.index('IDADD');
            KH.prefix(_wsenv.IDADD);
            {? _wsenv.IDADD<>'' & KH.first()
            || _buffers.ZK_N.KH:=KH.ref()
            || _ok:=0
            ?}
         ?};
         KH.cntx_pop()
      ?};
::dodanie ewentualnego transportu
      {? _ok & _products & _order
      & (_tab_wyn.orders[_orders_int].delivery_package_module<>'' | _tab_wyn.orders[_orders_int].delivery_method<>'')
      || exec('add_kh_msc','base_linker',_tab_wyn.orders[_orders_int],_wsenv,_buffers.ZK_N)
      ?};
::dodanie ewentualnych danych odbiorcy
      {? _ok & _products & _order & _tab_wyn.orders[_orders_int].want_invoice='1'
      || exec('add_kh_odb','base_linker',_tab_wyn.orders[_orders_int],_wsenv,_buffers.ZK_N)
      ?};
::parametry pracy dla czynności
      {? ~_wsenv.has_errors() & _ok & _products & _order
      ||
         __PARSES.setVal('OddzialLogProd',_buffers.ZK_N.ODDZ);
         _args:=__PARSES.args('OkresRok');
         _args.OBSZAR:='LZK';
         _args.AR:=_buffers.ZK_N.DP~1;
         _args.AM:=_buffers.ZK_N.DP~2;
         __PARSES.setVal('OkresRok',_args);
         obj_del(_args);
::uruchomienie czynności, czynność jest kończona
         _args:=exec('mp_run_a','#b__box');
         _args.ACT_UID:='LSP_ZKN_DRZK';
         _args.AKCJA:='DołączMWA';
         _args.PROC_START:='T';
         _args.QUIET:='T';
         _context:=obj_new('PARAMS','BUFFERS');
         _context.PARAMS:=obj_new('NAME_CONF');
         _context.PARAMS.NAME_CONF:='BASELINKER';
         _context.BUFFERS:=_buffers;
         _args.CONTEXT:=_context;
         exec('mp_run','#b__box',_args)
      ?};
      {? _wsenv.has_errors()
      ||
         _json_error:=_wsenv.to_json();
         {? _wyn_obj.REF<>''
         || exec('mwac_log_app','#mwac',_wyn_obj.REF,'P:0|',_json_error,0)
         ?};
         _ok:=0
      ?};
      {? _ok & _products & _order
      ||
         ZK_N.cntx_psh();
         ZK_N.use(_mask);
         ZK_N.index('IDADD');
         ZK_N.prefix(_wsenv.IDADD);
         BASLIN_K.cntx_psh();
         BASLIN_K.prefix();
         {? _wsenv.IDADD<>'' & ZK_N.first() & ZK_N.BASLIN_K
         || ZK_N.BASLIN_K().ZK_N_ID:=$ZK_N.BASLIN_O;
            _ok:=BASLIN_K.put(1)
         || _ok:=0
         ?};
         BASLIN_K.cntx_pop();
         ZK_N.cntx_pop()
      ?};

      _orders_int+=1;
      _orders_int<=_orders_size & _ok
   !}
?};
{? var_pres('_wsenv')>100 || obj_del(_wsenv) ?};
_ok


\json_getOrders
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie nowego produktu
::   WE:
::----------------------------------------------------------------------------------------------------------------------
_json:='{
   "date_confirmed_from": %1,
   "id_from": "%4",
   "get_unconfirmed_orders": false,
   "filter_order_source":"%3",
   "filter_order_source_id":"%2"
}'[
::date_confirmed_from - analizujemy tylko zamówienia nie starsze niż tydzień
10+$tm_stamp((date()-7)~1,(date()-7)~2,(date()-7)~3),
::filter_order_source_id
_a,
::filter_order_source
_b,
::id_from
_c
];
_json


\add_kh_msc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie tranportu dla usrawionego zamówienia
::   WE: _a - order
::       _b - _wsenv
::       _c - buffer ZK_N
::----------------------------------------------------------------------------------------------------------------------
_order:=_a;
_wsenv:=_b;
_ZK_N:=_c;
_delivery:={? _order.delivery_package_module<>'' || _order.delivery_package_module || _order.delivery_method ?};

TR_ZEWN.cntx_psh();
TR_ZEWN.index('API');
TR_ZEWN.prefix('T',_delivery);
{? ~TR_ZEWN.first()
||
   TR_ZEWN.index('KOD');
   TR_ZEWN.prefix(20+_order.delivery_method);
   {? ~TR_ZEWN.first()
   || TR_ZEWN.blank();
      TR_ZEWN.KOD:=TR_ZEWN.NAZ:=TR_ZEWN.COURIER:=20+_order.delivery_method;
      TR_ZEWN.API:='N';
      TR_ZEWN.prefix();
      {? ~TR_ZEWN.add(1) || _wsenv.add_error('Nie udało się dodać typu dostawy.'@);TR_ZEWN.cntx_pop();return(~~) ?}
   ?}
?};
_ZK_N.TR_ZEWN:=TR_ZEWN.ref();
_ZK_N.TRN:='T';
TR_ZEWN.cntx_pop();

KH_MSC.cntx_psh();
:: dostawa do punktu
{? _order.delivery_point_id<>''
||
   KH_MSC.index('TR_ZEWN');
   KH_MSC.prefix(_ZK_N.TR_ZEWN,_order.delivery_point_id,);
   {? ~KH_MSC.first()
   || KH_MSC.blank();
      KH_MSC.KOD:=_order.delivery_point_id;
      KH_MSC.NAZ:=_order.delivery_point_name;
      KH_MSC.UL:=_order.delivery_point_address;
      KH_MSC.KPOCZ:=_order.delivery_point_postcode;
      KH_MSC.MIASTO:=_order.delivery_point_city;
      KH_MSC.TR_ZEWN:=_ZK_N.TR_ZEWN;
      KH_MSC.prefix();
      {? ~KH_MSC.add(1) || _wsenv.add_error('Nie udało się dodać miejsca dostawy.'@);KH_MSC.cntx_pop();return(~~) ?}
   ?}
:: dostawa na adres kontrahenta
||
   KH_MSC.index('KH_UL');
   _nazwa:={? _order.delivery_fullname=_order.delivery_company
           || _order.delivery_fullname
           || _order.delivery_fullname+' '+_order.delivery_company
           ?};
   KH_MSC.prefix(_ZK_N.KH,_nazwa,_order.delivery_point_address,_order.delivery_point_postcode);
   {? ~KH_MSC.first()
   || KH_MSC.blank();
      KH_MSC.NAZ:=_nazwa;
      KH_MSC.UL:=_order.delivery_address;
      KH_MSC.KPOCZ:=_order.delivery_postcode;
      KH_MSC.MIASTO:=_order.delivery_city;
      KH_MSC.KRAJ:=_order.delivery_country_code;
      KH_MSC.KH:=_ZK_N.KH;
      KH_MSC.prefix();
      {? ~KH_MSC.add(1) || _wsenv.add_error('Nie udało się dodać miejsca dostawy.'@);KH_MSC.cntx_pop();return(~~) ?}
   ?}
?};
_ZK_N.KH_MSC:=KH_MSC.ref();
KH_MSC.cntx_pop();
~~


\add_kh_odb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie odbiorcy dla usrawionego zamówienia
::   WE: _a - order
::       _b - _wsenv
::       _c - buffer ZK_N
::----------------------------------------------------------------------------------------------------------------------
_order:=_a;
_wsenv:=_b;
_ZK_N:=_c;

_nazwa:={? _order.invoice_fullname=_order.invoice_company
           || _order.delivery_fullname
           || _order.invoice_company+' '+_order.invoice_fullname
           ?};

KH_ODB.cntx_psh();
KH_ODB.index('KH_ODB');
KH_ODB.prefix(_ZK_N.KH,8+_order.invoice_company,);
{? ~KH_ODB.first()
||
   KH_ODB.prefix();
   KH_ODB.blank();
   KH_ODB.KH:=_ZK_N.KH;
   KH_ODB.NAZ:=150+_nazwa;
   KH_ODB.SKR:=10+_order.invoice_company;
   KH_ODB.KOD:=8+_order.invoice_company;
   KH_ODB.NIP:=_order.invoice_nip;
   KH_ODB.UL:=_order.invoice_address;
   KH_ODB.MIASTO:=KH_ODB.POCZ:=_order.invoice_city;
   KH_ODB.KPOCZ:=_order.invoice_postcode;
   KH_ODB.KRAJ:=_order.invoice_country_code;
   {? ~KH_ODB.add(1) || _wsenv.add_error('Nie udało się dodać odbiorcy.'@);KH_ODB.cntx_pop();return(~~) ?}
?};
_ZK_N.ODB:=KH_ODB.ref();
KH_ODB.cntx_pop();
~~


::aktualizacja danych
\updateInventoryProductsPrices
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie grup materiałowych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_url:='https://api.baselinker.com/connector.php';
_http:=inet_get(_url);
_token:=exec('get','#params',700808,2);
_method:='updateInventoryProductsPrices';
_file:=fopen('updateInventoryProductsPrices.txt','w',,,1);
_url_file:=fopen(null,'bw',,,1);
{? ~_file.is_open() || return('') ?};
{? ~_url_file.is_open() || return('') ?};
fwrite(_url_file, 'method='+_method+'&parameters=');

_products:=exec('json_uInvProductsPrices','base_linker',_file);
{? _file.is_open() || _file.fclose() ?};
{? var_press('_file')>100 || obj_del(_file) ?};
_file:=fopen('updateInventoryProductsPrices.txt','r',,,1);
{? ~_file.is_open() || return('') ?};

_read:=fread(_file,500);
{? _read<>'\n'
||
   {!|?
      fwrite(_url_file, _http.url_encode(_read));
      _read:=fread(_file,500);
      _read<>'\n'
   !}
?};
_wyn_obj:={? _products || exec('http_send','firm_kur',_url_file,_method,1,1,_file,_token) || '' ?};
{? _file.is_open() || _file.fclose() ?};
{? _url_file.is_open() || _url_file.fclose() ?};
{? var_press('_file')>100 || obj_del(_file) ?};
{? var_press('_url_file')>100 || obj_del(_url_file) ?};
(type_of(_wyn_obj.WYN)=type_of('') & _wyn_obj.WYN='') |
(type_of(json_parse(_wyn_obj.WYN))=117 & var_pres('error_message', json_parse(_wyn_obj.WYN))<0)


\json_uInvProductsPrices
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: updateInventoryProductsPrices - Aktualizacja cen
::   WE: _a - _file
::       _b - BASLIN_K.ID,
::       _b - BASLIN_K.ref()
::----------------------------------------------------------------------------------------------------------------------
_file:=_a;
_wyn:=1;
_json:='{
    "inventory_id": "%1",
    "products": {}}'[
::inventory_id
BASLIN_K.ID
];
_mask:=exec('get_mask','!zws_par_basl',BASLIN_K.NAME+'_M');
SYNC_ID.cntx_psh();
SYNC_ID.use(_mask);
SYNC_ID.prefix();
M.cntx_psh();
M.prefix();
{? SYNC_ID.first()
||
   fwrite(_file, _json-2);
   {!|?
      {? SYNC_ID.ID<>'' & SYNC_ID.ID<>'brak' & M.seek(SYNC_ID.REK)
      ||
         fwrite(_file, '"%1":{'[SYNC_ID.ID]);
         fwrite(_file,exec('prices','base_linker'))
      ?};
      _next:=SYNC_ID.next();
      {? _next || fwrite(_file,'},') || fwrite(_file,'}}}') ?};
      _next
   !}
|| _wyn:=0
?};
M.cntx_pop();
SYNC_ID.cntx_pop();
_wyn


\updateInventoryProductsStock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie grup materiałowych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_url:='https://api.baselinker.com/connector.php';
_http:=inet_get(_url);
_token:=exec('get','#params',700808,2);
_method:='updateInventoryProductsStock';
_file:=fopen('updateInventoryProductsStock.txt','w',,,1);
_url_file:=fopen(null,'bw',,,1);
{? ~_file.is_open() || return('') ?};
{? ~_url_file.is_open() || return('') ?};
fwrite(_url_file, 'method='+_method+'&parameters=');

_products:=exec('json_uInvProductsStock','base_linker',_file);
{? _file.is_open() || _file.fclose() ?};
{? var_press('_file')>100 || obj_del(_file) ?};
_file:=fopen('updateInventoryProductsStock.txt','r',,,1);
{? ~_file.is_open() || return('') ?};

_read:=fread(_file,500);
{? _read<>'\n'
||
   {!|?
      fwrite(_url_file, _http.url_encode(_read));
      _read:=fread(_file,500);
      _read<>'\n'
   !}
?};
_wyn_obj:={? _products || exec('http_send','firm_kur',_url_file,_method,1,1,_file,_token) || '' ?};
{? _file.is_open() || _file.fclose() ?};
{? _url_file.is_open() || _url_file.fclose() ?};
{? var_press('_file')>100 || obj_del(_file) ?};
{? var_press('_url_file')>100 || obj_del(_url_file) ?};
(type_of(_wyn_obj.WYN)=type_of('') & _wyn_obj.WYN='') |
(type_of(json_parse(_wyn_obj.WYN))=117 & var_pres('error_message', json_parse(_wyn_obj.WYN))<0)


\json_uInvProductsStock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: updateInventoryProductsStock - Aktualizacja stanów magazynowych
::   WE:
::----------------------------------------------------------------------------------------------------------------------
_file:=_a;
_wyn:=1;
_json:='{
    "inventory_id": "%1",
    "products": {}}'[
::inventory_id
BASLIN_K.ID
];
_mask:=exec('get_mask','!zws_par_basl',BASLIN_K.NAME+'_M');
SYNC_ID.cntx_psh();
SYNC_ID.use(_mask);
SYNC_ID.prefix();
M.cntx_psh();
M.prefix();
{? SYNC_ID.first()
||
   fwrite(_file, _json-2);
   {!|?
      {? SYNC_ID.ID<>'' & SYNC_ID.ID<>'brak' & M.seek(SYNC_ID.REK)
      ||
         fwrite(_file, '"%1":{'[SYNC_ID.ID]);
         fwrite(_file,exec('stock','base_linker'))
      ?};
      _next:=SYNC_ID.next();
      {? _next || fwrite(_file,'},') || fwrite(_file,'}}}') ?};
      _next
   !}
|| _wyn:=0
?};
M.cntx_pop();
SYNC_ID.cntx_pop();
_wyn



\setOrderStatus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wysyłka nowego statusu
::   WE: _a - BASLIN_K.ID,
::       _b - BASLIN_K.ref()
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='setOrderStatus';
_par:=exec('json_setOrderStatus','base_linker',_a);
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
(type_of(_wyn_obj.WYN)=type_of('') & _wyn_obj.WYN='') |
(type_of(json_parse(_wyn_obj.WYN))=117 & var_pres('error_message', json_parse(_wyn_obj.WYN))<0)


\json_setOrderStatus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wysyłka nowego statusu
::   WE: _a - ZK_N.ref()
::----------------------------------------------------------------------------------------------------------------------
ZK_N.cntx_psh();
ZK_N.use(ref_name(_a));
ZK_N.prefix();
{? ~ZK_N.seek(_a) || ZK_N.cntx_pop();return('') ?};
ABS_STA.cntx_psh();

_json:='{
    "order_id": %1,
    "status_id": %2
}'[
::order_id
$ZK_N.BASLIN_O,
::status_id
ZK_N.ABS_STA().ID
];
ZK_N.cntx_pop();
ABS_STA.cntx_pop();
_json


:: obsługa pól i okienek
\baslin_k_rec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: BASLIN_K rekord przed
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| _actions:={? BASLIN_K.ID<>'' || 'AU' || 'ET' ?};
   _actions+={? BASLIN_K.ODDZ=null() || 'CMG' || '' ?};
   BASLIN_K.actions_grayed(cur_win(1),_actions)
?}


\act_getOrderStatusList
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS:  pobranie statusów zamówienia
::----------------------------------------------------------------------------------------------------------------------
{? exec('get','#params',700808,2)='' || FUN.info('Niewypełniony parametr 700808(Token BaseLinker)'@); return('') ?};
exec('getOrderStatusList','base_linker')


\getOrderStatusList
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS:  pobranie statusów zamówienia
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='getOrderStatusList';
_par:='[]';
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
_tab_wyn:=json_parse(_wyn_obj.WYN);
{? type_of(_tab_wyn)=117
& var_pres('statuses', _tab_wyn)>0
& (_size:=obj_len(_tab_wyn.statuses))>0
||
   _int:=1;
   ABS_STA.cntx_psh();

   {!|?
      {? (var_pres('id', _tab_wyn.statuses[_int])=1)
      & (var_pres('name', _tab_wyn.statuses[_int])=2)
      & (var_pres('name_for_customer', _tab_wyn.statuses[_int])=2)
      ||
         {? (ABS_STA.index('STA'); ABS_STA.prefix('B',_tab_wyn.statuses[_int].name); ABS_STA.first())
         ||
            ABS_STA.ID:=$_tab_wyn.statuses[_int].id;
            ABS_STA.STATUS:=_tab_wyn.statuses[_int].name;
            ABS_STA.TRANSL:=_tab_wyn.statuses[_int].name_for_customer;
            ABS_STA.prefix();
            ABS_STA.put()
         ||
            ABS_STA.blank();
            ABS_STA.NR:=exec('abs_sta_nr','abstore_fun','B');
            ABS_STA.TYPE:='B';
            ABS_STA.ID:=$_tab_wyn.statuses[_int].id;
            ABS_STA.STATUS:=_tab_wyn.statuses[_int].name;
            ABS_STA.TRANSL:=_tab_wyn.statuses[_int].name_for_customer;
            ABS_STA.prefix();
            ABS_STA.add()
         ?}
      ?};
      _int+=1;
      _int<=_size
   !};
   ABS_STA.cntx_pop();
   FUN.info('Zaktualizowano statusy BaseLinker'@)
||
   FUN.info('Nie udało się zaktualizować statusów'@)
?};
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
1


\ten_sta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Wybór statusu
::----------------------------------------------------------------------------------------------------------------------
_nr:=ABS_STA.NR;
_nr_a:=ABS_STA.NR_A;
_nr_b:=ABS_STA.NR_B;
ABS_STA.cntx_psh();
{? ZK_N.ABS_STA<>null()
||
   {? ZK_N.ABS_STA().LAST
   || FUN.info('Status zamówienia jest ostateczny.\nStatus nie został zmieniony.'@); ABS_STA.cntx_pop(); return(~~)
   |? ZK_N.ABS_STA().NR_A<>0 & ZK_N.ABS_STA().NR_A<>_nr
   || FUN.info('Nieprawidłowa kolejność statusów.\nStatus nie został zmieniony.'@); ABS_STA.cntx_pop(); return(~~)
   |? _nr_b<>0 & _nr_b<>ZK_N.ABS_STA().NR
   || FUN.info('Nieprawidłowa kolejność statusów.\nStatus nie został zmieniony.'@); ABS_STA.cntx_pop(); return(~~)
   ?}
?};
ABS_STA.cntx_pop();
ZK_N.ABS_STA:=ABS_STA.ref();
ZK_N.put();
sel_exit()


\prices
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Ceny produktu
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,XINFO);
_wal:=exec('FindInSet','#table','SLO','SL','PLN',XINFO.SLWAL,,1);
_wyn:='';
TAP.cntx_psh();
TAP.index('TM');
TAR.cntx_psh();
TAR.prefix();
_mask:=exec('get_mask','!zws_par_basl',BASLIN_K.NAME+'_TAR');
_wyn:='';
SYNC_ID.cntx_psh();
{? _mask<>'' & SYNC_ID.use(_mask) & (SYNC_ID.prefix();SYNC_ID.first())
||
   {!|?
      _tap_cenb:=0;
      {? TAR.seek(SYNC_ID.REK) &  SYNC_ID.ID<>'' &  SYNC_ID.ID<>'brak'
      ||
         TAP.prefix(TAR.ref(),M.ref(),_wal);
         {? TAP.first()
         ||
            {!|?
               {? TAP.CENB<>0 & TAP.OD<=date() & (TAP.DO>=date() | TAP.DO=date(0,0,0))
               & (_tap_cenb>TAP.CENB | _tap_cenb=0) & M.VAT=TAP.SV
               || _tap_cenb:=TAP.CENB
               ?};
               TAP.next()
            !}
         ?};
         {? _tap_cenb<>0 || _wyn+='"%1":%2,'[SYNC_ID.ID,form(_tap_cenb,,2,'9.')] ?}
      ?};
      SYNC_ID.next()
   !}
?};
SYNC_ID.cntx_pop();
TAP.cntx_pop();
TAR.cntx_pop();
_wyn-1


\stock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Ceny produktu
::----------------------------------------------------------------------------------------------------------------------
MG.cntx_psh();
MG.prefix();
SM.cntx_psh();
SYNC_ID.cntx_psh();
_mask:=exec('get_mask','!zws_par_basl',BASLIN_K.NAME+'_MG');
_wyn:='';
{? _mask<>'' & SYNC_ID.use(_mask) & (SYNC_ID.prefix();SYNC_ID.first())
||
   {!|?
      {? MG.seek(SYNC_ID.REK) &  SYNC_ID.ID<>'' &  SYNC_ID.ID<>'brak'
      ||
         SM.use('stm__'+MG.ODDZ+'zb');
         SM.index('SM');
         SM.prefix(MG.ref(),M.ref());
         {? SM.first()
         || _wyn+='"bl_%1":%2,'[SYNC_ID.ID,$SM.SD]
         ?}
      ?};
      SYNC_ID.next()
   !}
?};
SYNC_ID.cntx_pop();
MG.cntx_pop();
SM.cntx_pop();
_wyn-1


\images
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Ceny produktu
::   WE: _a - json
::       _b - file
::       _c - bez zdjęć
::----------------------------------------------------------------------------------------------------------------------
_url:='https://api.baselinker.com/connector.php';
_http:=inet_get(_url);
_json:=_a;
_file:=_b;
_img_nr:=0;
_nopict:={? var_pres('_c')=type_of(1) || _c || 0 ?};
:: obrazek główny przypisany do M.RYS
{? M.RYS & ~_nopict
|| fwrite(_file, _json-1);
   fwrite(_file, ',"images":{"0":"data:');
   base64('encode',fopen(M.RYS,'br',,,1),_file);
   fwrite(_file, '"');
   _img_nr:=1
?};
M_IMG.cntx_psh();
M_IMG.index('M');
M_IMG.prefix(M.ref());
{? M_IMG.first() & ~_nopict
||
   {? ~_img_nr || fwrite(_file, _json-1); fwrite(_file, ',"images":{') ?};
   {!|?
      {? _img_nr || fwrite(_file, ',') ?};
      fwrite(_file, '"%1":"data:'[$_img_nr]);
      base64('encode',fopen(M_IMG.IMG,'br',,,1),_file);
      fwrite(_file, '"');
      _img_nr+=1;
      M_IMG.next() & _img_nr<=15
   !};
   {? _img_nr<=15
   ||
      {!|?
         fwrite(_file, ',"%1":""'[$_img_nr]);
         _img_nr+=1;
         _img_nr<=15
      !}
   ?}
?};
{? _img_nr || fwrite(_file, '}}') || fwrite(_file, _json) ?};
M_IMG.cntx_pop();
_file

::obsługa synchro
\sync_war
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Warunek definicji
::   WE: _a - tabela
::       _b - ref
::----------------------------------------------------------------------------------------------------------------------
_ref:=null();
_wyn_sync:=0;
_tab_acr:=(($_a)());
{? _a='M' | _a='MGR' | _a='MGRP' | _a='TAR'
||
   _tab_acr.cntx_psh();
   _tab_acr.prefix();
   {? _tab_acr.seek(_b) || _ref:=_tab_acr.ref() ?};
   BASLIN_K.cntx_psh();
   BASLIN_K.prefix();
   {? BASLIN_K.first() & _ref<>null()
   ||
      {!|?
         {? BASLIN_K.ID<>''
         ||
            _mask:=exec('get_mask','!zws_par_basl',BASLIN_K.NAME+'_'+_a);
            {? _mask<>''
            ||
               SYNC_ID.cntx_psh();
               SYNC_ID.use(_mask);
               SYNC_ID.index('REK');
               SYNC_ID.prefix($_ref);
               {? SYNC_ID.first() & SYNC_ID.ID<>'' & SYNC_ID.ID<>'brak' || _wyn_sync:=1 ?};
               SYNC_ID.cntx_pop()
            ?}
         ?};
         BASLIN_K.next()
      !}
   ?};
   BASLIN_K.cntx_pop();
   _tab_acr.cntx_pop()
?};
{? _a='M_IMG' | _a='SM' | _a='TAP'
||
   {? _a='SM' & (ref_name(_b)+2)<>'zb' || return(0) ?};
   _ref:=null();
   _tab_acr.cntx_psh();
   _tab_acr.prefix();
   {? _tab_acr.seek(_b) || _ref:=_tab_acr.M ?};
   BASLIN_K.cntx_psh();
   BASLIN_K.prefix();
   {? BASLIN_K.first() & _ref<>null()
   ||
      {!|?
         {? BASLIN_K.ID<>''
         ||
            _mask:=exec('get_mask','!zws_par_basl',BASLIN_K.NAME+'_M');
            {? _mask<>''
            ||
               SYNC_ID.cntx_psh();
               SYNC_ID.use(_mask);
               SYNC_ID.index('REK');
               SYNC_ID.prefix($_ref);
               {? SYNC_ID.first() & SYNC_ID.ID<>'' & SYNC_ID.ID<>'brak' || _wyn_sync:=1 ?};
               SYNC_ID.cntx_pop()
            ?}
         ?};
         BASLIN_K.next()
      !}
   ?};
   BASLIN_K.cntx_pop();
   _tab_acr.cntx_pop()
?};
{? _a='FAKS' | _a='DOKUM'
||
   _cntx:="FAKS.cntx_pop();ZK_RN.cntx_pop();ZK_N.cntx_pop()";
   FAKS.cntx_psh();
   ZK_RN.cntx_psh();
   ZK_N.cntx_psh();
   {? _a='DOKUM'
   || {? ~(DOKUM.REFSQL * 'faktuc') || _cntx();return(0) ?};
      FAKS.prefix();
      {? ~FAKS.seek(DOKUM.REFSQL,ref_name(DOKUM.REFSQL)) || _cntx();return(0) ?}
   ?};
   ZK_RN.use('zkhin'+FAKS.ODDZ+'__');
   ZK_RN.index('FK');
   ZK_RN.prefix($FAKS.ref(),);
   {? ~ZK_RN.first() || _cntx();return(0) ?};
   {?  ZK_RN.N<>null() & ZK_N.use(ref_name(ZK_RN.N)) & ZK_RN.N().BASLIN_O=0 || _cntx();return(0) || _wyn_sync:=1 ?};
   _cntx()
?};

_wyn_sync


::obsługa faktur
\getSeries
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Aktualizacja źródeł zamówień
::   WE: _a - 1- podgrupa / 0- grupa
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='getSeries';
_par:='{}';
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
_int:=0;
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
_tab_wyn:=json_parse(_wyn_obj.WYN);
_wyn:=0;
{? type_of(_tab_wyn)=117
& var_pres('series', _tab_wyn)>0
& (_series_size:=obj_len(_tab_wyn.series))>0
||
   _series_int:=1;
   {!|?
      {? var_pres('type', _tab_wyn.series[_series_int])>0 & _tab_wyn.series[_series_int].type='INVOICE'
      & var_pres('id', _tab_wyn.series[_series_int])>0
      || _wyn:=_tab_wyn.series[_series_int].id
      ?};
      _series_int+=1;
      _wyn=0 & _series_int<=_series_size
   !}
||
   FUN.info('Nie udało się zaktualizować źródeł zamówień.'@)
?};
{? var_press('_tab_wyn')>0 || obj_del(_tab_wyn) ?};
_wyn


\addInvoice
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Aktualizacja źródeł zamówień
::   WE: _a - 1- podgrupa / 0- grupa
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='addInvoice';
_par:=exec('json_addInvoice','base_linker',_a,_b);
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? var_pres('invoice_id', json_parse(_wyn_obj.WYN))=1
|| $json_parse(_wyn_obj.WYN).invoice_id
|? var_pres('invoice_id', json_parse(_wyn_obj.WYN))=2
|| json_parse(_wyn_obj.WYN).invoice_id
|| ''
?}


\json_addInvoice
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie nowej faktury
::   WE: _a - order_id
::       _b - series_id
::----------------------------------------------------------------------------------------------------------------------
_json:='{
    "order_id": %1,
    "series_id": %2
}'[
::order_id
_a,
::series_id
_b
];
_json


\getInvoices
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Sprawdzenie czy zamówienie ma wystawioną już fakturę
::   WE: _a - order_id
::----------------------------------------------------------------------------------------------------------------------
_token:=exec('get','#params',700808,2);
_method:='getInvoices';
_par:=exec('json_getInvoices','base_linker',_a);
_json:='method='+_method+'&parameters='+_par;
_wyn_obj:=exec('http_send','firm_kur',_json,_method,1,1,_par,_token);
{? var_pres('invoices', json_parse(_wyn_obj.WYN))=0
|| 1
|? var_pres('invoices', json_parse(_wyn_obj.WYN))<0
|| -1
|| 0
?}


\json_getInvoices
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie nowej faktury
::   WE: _a - order_id
::----------------------------------------------------------------------------------------------------------------------
_json:='{
    "order_id": %1
}'[
::order_id
_a
];
_json


\addOrderInvoiceFile
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie produktów
::   WE: _a - invoice_id
::       _b - DOKUM.DOKUM
::       _c - external_invoice_number
::----------------------------------------------------------------------------------------------------------------------
_nopict:={? var_pres('_a')=type_of(1) || _a || 0 ?};
_url:='https://api.baselinker.com/connector.php';
_http:=inet_get(_url);
_token:=exec('get','#params',700808,2);
_method:='addOrderInvoiceFile';
_file:=fopen('addOrderInvoiceFile.txt','w',,,1);
_url_file:=fopen(null,'bw',,,1);
{? ~_file.is_open() || return('') ?};
{? ~_url_file.is_open() || return('') ?};
fwrite(_url_file, 'method='+_method+'&parameters=');

exec('json_addOrderInvoiceFile','base_linker',_a, _b, _c, _file);
{? _file.is_open() || _file.fclose() ?};
{? var_press('_file')>100 || obj_del(_file) ?};
_file:=fopen('addOrderInvoiceFile.txt','r',,,1);
{? ~_file.is_open() || return('') ?};

_read:=fread(_file,500);
{? _read<>'\n'
||
   {!|?
      fwrite(_url_file, _http.url_encode(_read));
      _read:=fread(_file,500);
      _read<>'\n'
   !}
?};
_wyn_obj:=exec('http_send','firm_kur',_url_file,_method,1,1,_file,_token);
{? _file.is_open() || _file.fclose() ?};
{? _url_file.is_open() || _url_file.fclose() ?};
{? var_press('_file')>100 || obj_del(_file) ?};
{? var_press('_url_file')>100 || obj_del(_url_file) ?};
(type_of(_wyn_obj.WYN)=type_of('') & _wyn_obj.WYN='') |
(type_of(json_parse(_wyn_obj.WYN))=117 & var_pres('error_message', json_parse(_wyn_obj.WYN))<0)


\json_addOrderInvoiceFile
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [23.25]
:: OPIS: Dodanie pliku faktury
::   WE: _a - invoice_id
::       _b - DOKUM.DOKUM
::       _c - external_invoice_number
::----------------------------------------------------------------------------------------------------------------------
_file:=_d;
_json:='{"invoice_id": %1,
        "file": "data:'[_a];
fwrite(_file, _json);
base64('encode',fopen(_b,'br',,,1),_file);
_json:='",
    "external_invoice_number": "%1"
}'[_c];
fwrite(_file, _json);
~~

:Sign Version 2.0 jowisz:1045 2024/01/23 10:33:51 785b2e333505862b325a7a07a6491f6feede668c4fc7cdf9a2157ccef13a5601cf0c6a45adcbb259baef93285ccc93703d4e20621fcdf5af8ea7ed9523b42cb493600677bcd76805275aaaa696c7d11a2a7ceca9b9faf51605f17e19d6a31a2af6dd13fc7dc3b4300743e4f804df539ede244bc75091b157b566891afdff3c93
