:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: rodo.fml
:: Utworzony: 16.01.2018
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Obsługa aplikacji dla administratora danych osobowych (RODO).
::======================================================================================================================


\is_aip
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Czy dostępny AIP
::   WE: [_a] [NUMBER] - Czy brak współpracy sygnalizować komunikatem:
::                         0 - Nie [domyślnie];
::                         1 - Tak.
::----------------------------------------------------------------------------------------------------------------------
PAR_SKID.get(500)='T'


\call
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Formuła obsługująca żądania.
::   WE: _a [STRING] - Klucz żądania.
::       _b [OBJECT] - Obiekt klasy RODO.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')=type_of('')
|| _rkey:=_a
|| return()
?};
_RODO:=_b;

: przygotuj zapytanie do wykonania
RO_REQN.cntx_psh();
RO_REQN.prefix();
RO_REQN.blank();
RO_REQN.DATE:=date();
RO_REQN.DATA_REJ:=RO_REQN.DATE;
RO_REQN.RO_REQT:=exec('find_ro_reqt','ro_req',_rkey);
: oznacz jako pomijane przy przetwarzaniu automatycznym
RO_REQN.STATUS:='X';
{? RO_REQN.add() & _RODO.write(RO_REQN.ref())
:  utworzono zapytanie i zapisano parametry
|| RO_CFG.cntx_psh();
   RO_CFG.index('NUMER');
   RO_CFG.prefix();
   _loop:=RO_CFG.first();
   {!
   |? _loop
   |! {? ~exec('set_ro_reqr','ro_req',RO_REQN.ref(),RO_CFG.RO_REQC,-1)
      || FUN.error('Wystąpił błąd podczas tworzenia wyniku.'@);
         RO_REQN.cntx_pop();
         RO_CFG.cntx_pop();
         return()
      || _loop:=RO_CFG.next()
      ?}
   !};
   RO_CFG.cntx_pop();

:  przetwarzaj zapytanie
   _ret:=exec('process','ro_req',RO_REQN.ref());
   _err:=1;
   {? _ret.INFO<>''
   || {? _ret.STATUS<0
      || FUN.error(_ret.INFO)
      || FUN.info(_ret.INFO)
      ?}

   |? _ret.STATUS<0
   || FUN.error('Wystąpił błąd podczas realizacji żądania.'@)

   || exec('show','rodo',RO_REQN.ref())
   ?};

:  nie pozostawiaj śladu danych osobowych
   exec('ro_reqn_del','ro_req',RO_REQN.ref())
?};
RO_REQN.cntx_pop();
~~


\show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Prezentacja wyników zapytania.
::   WE: _a [RO_REQN] - wskazanie nagłówka zapytania
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(null) | _a=null
|| return()
?};
_inTerm:=exec('interm','#system');

RO_REQN.cntx_psh();
RO_REQN.prefix();
{? ~RO_REQN.seek(_a)
|| RO_REQN.cntx_pop();
   return()
?};

_id:='#ro_reqx';
_del_act:="";
__RO_WND:=obj_new('has_del');
__RO_WND.has_del:=0;

: przeniesienie ze względu na potrzebny akronim okna
_wr:=RO_REQR.mk_sel('Wynik działania'@,'P',0,_id+'_wr');

{? RO_REQN.RO_REQT().KEY='PERSONAL_DATA_REMOVE'
:  obsługa drugiego etapu usuwania danych
|| __RO_WND.has_del:=1;
   _id:=(_id-1)+'d';
   _del_act:=$("
      _txt:='Kontynuuj usuwanie danych'@;
      _fml:=$(
         'RO_REQN.cntx_psh();'+
         '{? ~exec(\\'do_del\\',\\'rodo\\',RO_REQN.ref())'+
         '|| __RO_WND.has_del:=0'+
         '?};'+
         'RO_REQN.cntx_pop();'+
         'grp_disp(RO_REQR,\\'"+_wr+"\\',1);'+
         '~~'
      );
      _a.win_act(_b,0,'Formuła',_txt,,,_fml);
      _a.win_act(_b,1,'Formuła',_txt,,,_fml)
   ")
?};

: lista parametrów
_PARAM:=sql(
   'select RO_REQI.DESC, RO_REQP.VAL '+
   'from RO_REQP join RO_REQI using (RO_REQP.RO_REQI,RO_REQI.REFERENCE) '+
   'where RO_REQP.RO_REQN=:_a and RO_REQP.RO_REQC is null',
   RO_REQN.ref()
);
_wp:=_PARAM.mk_sel('Parametry wywołania'@,'P',0,_id+'_wp');
_PARAM.win_fld(_wp,,'DESC',,,20,,,'Klucz'@);
_PARAM.win_fld(_wp,,'VAL',,,50,,,'Wartość'@);
_we:=_PARAM.mk_edit('Parametr wywołania'@,,_id+'_we');
_PARAM.win_efld(_we,,'DESC',,,30,,,'Klucz'@);
_PARAM.win_efld(_we,,'VAL',,,30,,,'Wartość'@);
_PARAM.win_edit(_we);
_del_act(_PARAM,_wp);

: wartości zwracane
: _wr:=RO_REQR.mk_sel('Wynik działania'@,'P',0,_id+'_wr');
RO_REQR.win_fld(_wr,,'RO_REQC','CODE',,-4,,,'Cel'@);
RO_REQR.win_fld(_wr,,'RO_REQC','DESC',,30,,,'Opis celu'@);
RO_REQR.win_fld(_wr,,'RES_CODE',,,-4);
RO_REQR.win_fld(_wr,,'RES_DESC',,,32);
_del_act(RO_REQR,_wr);

: lista identyfikatorów
_wi:=RO_REQP.mk_sel('Dane identyfikujące'@,'P',0,_id+'_wi');
RO_REQP.win_fld(_wi,,'RO_REQI','DESC',,20,,,'Klucz'@);
RO_REQP.win_fld(_wi,,'VAL',,,50,,,'Wartość'@);
_del_act(RO_REQP,_wi);

: załączniki
_wz:=RO_REQZ.mk_sel('Dokumenty'@,'P',0,_id+'_wz');
RO_REQZ.win_fld(_wz,,'DESC',,,43,,,'Opis'@);
RO_REQZ.win_fld(_wz,,'TECH',,,-2,,,'Techniczny'@);
RO_REQZ.win_fld(_wz,,'FILE',,,25,,,'Plik'@);
RO_REQZ.win_act(_wz,,'Formuła','Otwórz'@,,,"exec('ro_reqz_show','rodo')",,1);
RO_REQZ.win_act(_wz,,'Formuła','Zapisz'@,,,"exec('ro_reqz_save','rodo')");
_del_act(RO_REQZ,_wz);

_mode:='maximized_with_title';
_wg:=_PARAM.grp_make(,
:  przed otwarciem
   $( 'RO_REQP.cntx_psh();'+
      'RO_REQP.index(\'KEY\');'+
      'RO_REQR.cntx_psh();'+
      'RO_REQR.index(\'RO_REQN\');'+
      'RO_REQR.prefix(RO_REQN.ref());'+
      'RO_REQR.first();'+
      'RO_REQZ.cntx_psh();'+
      'RO_REQZ.index(\'RO_REQR\');'+
      'grp_disp(RO_REQR,\''+_wr+'\',1,1);'+
      '1'
   ),
:  identyfikator, położenie
   _id,,,
:  przy zamykaniu
   "  RO_REQP.cntx_pop();
      RO_REQR.cntx_pop();
      RO_REQZ.cntx_pop();
      1
   "
);
: lista parametrów
_PARAM.grp_sel(_wg,_PARAM,_wp,,
:  po odświeżeniu
   $( '{? __RO_WND.has_del=0'+
      '|| cur_tab(1,1).actions(\''+_wp+'\',\'K:K\',,1)'+
      '?};'+
      'grp_disp(RO_REQR,\''+_wr+'\',1)'
   ),
:  położenie i wysokość
   ,,5,
:  przed obsługą
   "",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);
: wartości zwracane
_PARAM.grp_splt(_wg,,'horizontal','middle',',33%');
_PARAM.grp_sel(_wg,RO_REQR,_wr,,
:  po odświeżeniu
   $( '{? __RO_WND.has_del=0 | '+$_inTerm+
      '|| RO_REQR.actions(\''+_wr+'\',\'K:K\',,1)'+
      '?};'+
      'grp_disp(RO_REQP,\''+_wi+'\',1);'+
      'grp_disp(RO_REQZ,\''+_wz+'\',1)'
   ),
:  położenie i wysokość
   ,,8,
:  przed obsługą
   "RO_REQR.prefix(RO_REQN.ref())",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);
: znalezione identyfikatory
_PARAM.grp_splt(_wg,'middle','horizontal','bottom');
_PARAM.grp_sel(_wg,RO_REQP,_wi,'Identyfikatory'@,
:  po odświeżeniu
   $( '{? __RO_WND.has_del=0 | '+$_inTerm+
      '|| RO_REQP.actions(\''+_wi+'\',\'K:K\',,1)'+
      '?}'
   ),
:  położenie i wysokość
   ,,,
:  przed obsługą
   "RO_REQP.prefix(RO_REQR.RO_REQN,RO_REQR.RO_REQC)",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);
: utworzone załączniki
_PARAM.grp_sel(_wg,RO_REQZ,_wz,'Załączniki'@,
:  po odświeżeniu
   $( '{? __RO_WND.has_del=0 | '+$_inTerm+
      '|| RO_REQZ.actions(\''+_wz+'\',\'K:K\',,1)'+
      '?}'
   ),
:  położenie i wysokość
   ,,,
:  przed obsługą
   "RO_REQZ.prefix(RO_REQR.ref())",
:  po obsłudze
   "",
:  utrwalenie, aktywacja, wypełnienie
   ,,_mode
);

_PARAM.win_sel(_wg);
_PARAM.hdr_sel(RO_REQN.RO_REQT().NAME);
_PARAM.select();

obj_del(_PARAM);
obj_del(__RO_WND);
RO_REQN.cntx_pop();
RO_REQR.win_del(_wr);
RO_REQP.win_del(_wi);
RO_REQZ.win_del(_wz);
~~


\ro_perm_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Wyświetla zgody na przetwarzanie danych.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
RO_PERM.cntx_psh();
RO_PERM.index('ID');
RO_PERM.prefix();
RO_PERM.first();

RO_PERM.win_sel('WER');
RO_PERM.win_edit('RED');
RO_PERM.actions('WER',{? exec('is_aip','rodo') || 'u' || '' ?},,1);

RO_PERM.select();

RO_PERM.actions('WER');
RO_PERM.cntx_pop();
~~


\ro_perm_szcz_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Akcja "Szczegóły" okienka WER tabeli RO_PERM
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
:  exec('show','rodo',RO_PERM.RO_REQN);

_id:='#ro_perm';

: lista identyfikatorów
_wi:=RO_REQP.mk_sel('Dane identyfikujące'@,'P',0,_id+'_wi');
RO_REQP.win_fld(_wi,,'RO_REQI','DESC',,20,,,'Klucz'@);
RO_REQP.win_fld(_wi,,'VAL',,,50);

: załączniki
_wz:=RO_REQZ.mk_sel('Dokumenty'@,'P',0,_id+'_wz');
RO_REQZ.win_fld(_wz,,'DESC',,,43,,,'Opis'@);
RO_REQZ.win_fld(_wz,,'TECH',,,-2,,,'Techniczny'@);
RO_REQZ.win_fld(_wz,,'FILE',,,25,,,'Plik'@);
RO_REQZ.win_act(_wz,,'Formuła','Otwórz'@,,,"exec('ro_reqz_show','rodo')",,1);
RO_REQZ.win_act(_wz,,'Formuła','Zapisz'@,,,"exec('ro_reqz_save','rodo')");

_mode:='maximized_with_title';
: ograniczona prezentacja wyniku: identyfikatory, załączniki
_wg:=RO_REQP.grp_make(RO_PERM.RO_REQN().SUBJECT,,_id);
RO_REQP.grp_sel(_wg,RO_REQP,_wi,'Identyfikatory'@,,,,10,,,,,_mode);
RO_REQP.grp_sel(_wg,RO_REQZ,_wz,'Załączniki'@,,,,10,,,,,_mode);

_tkey:=RO_REQZ.ndx_tmp(,,'RO_REQR','RO_REQN',,'RO_REQR','RO_REQC',);

RO_REQP.cntx_psh();
RO_REQP.index('ID_DESC');
RO_REQP.prefix(RO_PERM.RO_REQN,RO_PERM.RO_REQC);
RO_REQZ.cntx_psh();
RO_REQZ.index(_tkey);
RO_REQZ.prefix(RO_PERM.RO_REQN,RO_PERM.RO_REQC);

RO_REQP.win_sel(_wg);
RO_REQP.select();

RO_REQZ.cntx_pop();
RO_REQP.cntx_pop();

RO_REQZ.ndx_drop(_tkey);
RO_REQP.win_del(_wg);
RO_REQP.win_del(_wi);
RO_REQZ.win_del(_wz);
~~


\ro_perm_wycof_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Akcja "Wycofaj" okienka WER tabeli RO_PERM.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_org:=RO_PERM.win_edit('WYCOFAJ');
_finish:=RO_PERM.FINISH_D;
_reason:=RO_PERM.F_REASON;
{? RO_PERM.edit("__CHK.record(RO_PERM,,'FINISH_D','F_REASON')") & RO_PERM.put()
|| {? ~exec('wycofaj','rodo',RO_PERM.ref())
   || RO_PERM.FINISH_D:=_finish;
      RO_PERM.F_REASON:=_reason;
      RO_PERM.put()
   ?}
?};
RO_PERM.win_edit(_org);
~~


\wycofaj_rek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Wycofanie zgody na przetwarzanie danych osobowych.
::   WE: _a [TABLE] - alias tabeli dla której wiersza będzie wycofywana zgoda
::       _b [REFERENCE] - wskazanie wiersza tabeli _a
::       _c [STRING] - kod celu przetwarzania danych
::       _d [STRING] - kod opisu zgody
::   WY: 1 - sukces, 0 - porażka
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;

RO_PERM.cntx_psh();
RO_PERM.index('RO_PERM');
RO_PERM.prefix(2-!_a,_a.name(),#_b,_c,_d);
: czy jest "ostatnia" zgoda?
{? RO_PERM.last()
|| RO_PERM.win_edit('WYCOFAJ');
:  ustaw wartości domyślne
   {? RO_PERM.FINISH_D=date(0,0,0)
   || RO_PERM.FINISH_D:=date()
   ?};
   {? RO_PERM.F_REASON=''
   || RO_PERM.F_REASON:='Żądanie podmiotu'
   ?};
:  pobierz informacje
   {? RO_PERM.edit()
   || _finish:=RO_PERM.FINISH_D;
      _reason:=RO_PERM.F_REASON;
:     wycofaj wszystkie pozostałe zgody
      {!
      |? {? RO_PERM.FINISH_D=_finish
         || RO_PERM.FINISH_D:=_finish
         ?};
         {? RO_PERM.F_REASON=_reason
         || RO_PERM.F_REASON:=_reason
         ?};
         {? RO_PERM.put()
         || _ret:=exec('wycofaj','rodo',RO_PERM.ref())
         ?};
         RO_PERM.prev()
      !}
   ?}
|| _ret:=1
?};
RO_PERM.cntx_pop();
_ret


\wycofaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Wycofanie zgody na przetwarzanie danych osobowych.
::   WE: _a [_RO_PERM] - wskazanie wiersza tabeli RO_PERM
::   WY: 1 - sukces, 0 - porażka
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(null) | _a=null
|| return(0)
?};

_done:=0;

_epilog:="
   RO_PERM.cntx_pop();
   RO_REQN.cntx_pop();
   ~~
";

RO_REQN.cntx_psh();
RO_REQN.prefix();
RO_PERM.cntx_psh();
RO_PERM.prefix();

{? RO_PERM.seek(_a)
|| RO_PERM.RO_REQN();
   {? RO_PERM.STATE<>'T'
   || _epilog();
      return(1)
   ?}
|| _epilog();
   return(0)
?};

_MAP:=exec('fml_map','ro_wycz');
{? RO_PERM.TABLE<>'' & _MAP.find_key(RO_PERM.TABLE,RO_PERM.RO_PERD().CODE,)
|| {? var_pres(RO_PERM.TABLE)=type_of(SYSLOG)
   || _TAB:=($RO_PERM.TABLE)();
      _TAB.cntx_psh();
      _TAB.use(RO_PERM.MASK);
      _TAB.prefix();
      {? _TAB.seek(RO_PERM.RECORD,)
      || exec('init','rod');
         _RODO:=obj_new(@.CLASS.RODO);
         _arg:=exec('wycofaj_arg','rodo',_RODO,_TAB,,RO_PERM.ref());
:        sprawdź warunek wykonania formuły wycofującej zgodę
         _cond:=($_MAP.PRE_COND)(_arg);
         {? type_of(_cond)<>type_of(0) | _cond
         || _my_do:=(do_state()=0);
            {? _my_do
            || do()
            ?};
            RO_PERM.STATE:='N';
            {? RO_PERM.put()
            ||
:              wykonaj formułę odpowiedzialną za wycofanie zgody
               _done:=($_MAP.FORMULA)(_arg)
            ?};
            {? _my_do
            || {? _done=0
               || undo()
               ?};
               end()
            ?}
         ?};
         obj_del(_arg)
      ?};
      _TAB.cntx_pop();
      &_TAB
   ?}
?};

_epilog();

_done


\wycofaj_arg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Tworzy tablicę parametrów dla forumł wycofujących zgody.
::   WE: _a [OBJECT] - Wskazanie obiektu klasy RODO.
::       _b [TABLE] - Alias tabeli, z której pochodzi zapis i dla którego będzie wycofana zgoda
::       _c [REFERENCE] - Wskazanie wiersza tabeli _a
::       _d [_RO_PERM] - Wskazanie wiersza tabeli RO_PERM
::   WY: Tablica z argumentami formuł
::----------------------------------------------------------------------------------------------------------------------
_arg:=obj_new('RODO','SRC_TAB','SRC_REF','RO_PERM','RO_REQN','CODE','RET');
{! _ni:=1..obj_len(_arg)
|! _arg[_ni]:=~~
!};

: obiekt klasy RODO
{? var_pres('_a')>100
|| _arg.RODO:=_a
?};

: parametry
_arg.SRC_TAB:=_b;
_arg.SRC_REF:=
   {? var_pres('_c')<>type_of(null) | _c=null
   || _b.ref()
   || _c
   ?};

{? var_pres('_d')=type_of(null) & _d<>null
|| RO_REQN.cntx_psh();
   RO_PERM.cntx_psh();
   RO_PERM.prefix();
   {? RO_PERM.seek(_d)
   || _arg.RO_PERM:=_d;
      _arg.RO_REQN:=RO_PERM.RO_REQN;
      _arg.CODE:=RO_PERM.RO_PERD().CODE
   ?};
   RO_PERM.cntx_pop();
   RO_REQN.cntx_pop()
?};

: wynik działania formuły
_arg.RET:=exec('ret_val','ro_cfg');

_arg


\do_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Uruchomienie drugiego etapu usuwania danych.
::   WE: _a [RO_REQN] - wskazanie nagłówka zapytania
::   WY: 0 - operacja nie może być wykonana
::       1 - można kontynuować
::----------------------------------------------------------------------------------------------------------------------
_reqn:=_a;
_process:=0;

RO_REQR.cntx_psh();
RO_REQR.index('RO_REQN');
RO_REQR.prefix(_reqn);
_loop:=RO_REQR.first();
{!
|? _loop
|! _process+=(RO_REQR.RES_CODE=0 & RO_REQR.RECEIVED=0);
   _loop:=RO_REQR.next()
!};
RO_REQR.cntx_pop();

{? _process=0
|| FUN.info(
      'Nie zostały spełnione warunki pozwalające na zaprzestanie przetwarzania danych\n'+
      '(jednoznaczna identyfikacja podmiotu, zakończenie okresu retencji, ...).'@
   );
   0

|? FUN.ask('Czy zaprzestać przetwarzania danych?'@)
:  zasadnicze zaprzestanie przetwarzania danych
|| RO_REQR.cntx_psh();
   RO_REQR.index('RO_REQN');
   RO_REQR.prefix(_reqn);
   _loop:=RO_REQR.first();
   {!
   |? _loop
   |! {? RO_REQR.RES_CODE=0 & RO_REQR.RECEIVED=0
      || RO_REQR.RECEIVED:=1;
         RO_REQR.put()
      ?};
      _loop:=RO_REQR.next()
   !};
   RO_REQR.cntx_pop();
   exec('process','ro_req',_reqn);
   0

|| 1
?}


\szuk_arg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Tworzy tablicę parametrów dla forumł wyszukujących dane.
::   WE: _a [OBJECT] - Wskazanie obiektu klasy RODO.
::       _b [TABLE] - Alias tabeli zawierającej wskazania wyszukanych rekordów (patrz \get_recb/ro_cfg.fml).
::       _c [ARRAY] - Tabela parametrów działania (_a.ORG - wartości oryginalne, _a.UNI - wartości zunifikowane,
::                    _a.IDS - znalezione informacje identyfikujące).
::   WY: Tablica z argumentami formuł
::----------------------------------------------------------------------------------------------------------------------
_arg:=obj_new('RODO','ORG','UNI','IDS','RECB','AUTO','AUTO_TAB','AUTO_REF','RET','isAuto','lookFor','next');
{! _ni:=1..obj_len(_arg)
|! _arg[_ni]:=~~
!};

: obiekt klasy RODO
{? var_pres('_a')>100
|| _arg.RODO:=_a
?};

: parametry zapytania
{? var_pres('_c')>100
|| _arg.ORG:=_c.ORG;
   _arg.UNI:=_c.UNI;
   _arg.IDS:=_c.IDS

|? type_of(_arg.RODO)>100
|| _arg.RODO.TBUF.blank(1);
   _arg.RODO.TEDIT.blank(1);
   _par:=_arg.RODO.getPar();
   _arg.ORG:=_par.ORG;
   _arg.UNI:=_par.UNI;
   _arg.IDS:=_par.IDS
?};

: tabela wyniku
_arg.RECB:=
   {? var_pres('_b')<>type_of(SYSLOG)
   || exec('get_recb','ro_cfg')
   || _b
   ?};

: dla realizacji PERSONAL_DATA_REMOVE_RET i PROCESSING_PERMIT
_arg.AUTO:=0;
_arg.AUTO_TAB:='';
_arg.AUTO_REF:=0;

: wynik działania formuły
_arg.RET:=exec('ret_val','ro_cfg');

: sprawdzenie trybu dla PERSONAL_DATA_REMOVE_RET
_arg.isAuto:="
   .AUTO<>0 | .AUTO_REF>0
";
: formuła dla początku iteracji
_arg.lookFor:="
   {? .AUTO_REF>0
   || {? (2-!_a)=.AUTO_TAB
      || _a.seek(.AUTO_REF,)
      ?}
   || _a.first()
   ?}
";
: formuła dla kontynuowania iteracji
_arg.next:="
   {? .AUTO_REF=0
   || _a.next()
   ?}
";

_arg


\szuk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Przeglądanie tabel w poszukiwaniu danych osobowych.
::       UWAGA: poprawność argumentów wywołania nie jest weryfikowana.
::   WE: _a [OBJECT] - Wskazanie obiektu klasy RODO.
::       _b [TABLE] - Alias tabeli zawierającej wskazania wyszukanych rekordów (patrz \get_recb/ro_cfg.fml).
::       _c [ARRAY] - Tabela parametrów działania (_a.ORG wartości oryginalne, _a.UNI wartości zunifikowane, _a.IDS
::          znalezione informacje identyfikujące).
::       _d [REFERENCE] - Wskazanie wiersza w tabeli nagłówków rządań RODO.
::   WY: wskazanie tablicy wyniku (patrz \ret_val/ro_cfg.fml)
::UWAGA: przed wywołaniem należy zweryfikować konfigurację (patrz \validate/ro_cfg.fml)
::----------------------------------------------------------------------------------------------------------------------
_RODO:=_a;
_arg:=exec('szuk_arg','rodo',_a,,_c);
_RECB:=_b;
_reqn:=_d;

_ret:=exec('ret_val','ro_cfg');

_copy:=exec('copy_recb','ro_cfg',_RECB);

_epilog:="
   RO_CFG.cntx_pop();
   RO_FML.cntx_pop();
   on_error();
   ~~
";

RO_FML.cntx_psh();
RO_FML.prefix();
RO_CFG.cntx_psh();
RO_CFG.index('NUMER');
RO_CFG.prefix();
_loop:=RO_CFG.first();
{!
|? _loop
|!
:  wyszukuj dane przetwarzane w celach określonych w zapytaniu
   {? exec('find_ro_reqr','ro_req',_reqn,RO_CFG.RO_REQC)
   || exec('set_recb','ro_cfg',_arg.RECB,#RO_CFG.ref(),#RO_CFG.RO_REQC);
      _cel:=RO_CFG.RO_REQC;
      _arg.RECB.erase();
      _arg.RET.clear();

:     dla różnych celów mogą być zgromadzone różne identyfikatory
:     funkcje wyszukujące muszą odpowiednio wypełniać tablicę IDS
      exec('blank_ids','ro_req',_arg.IDS);

:     wykonaj formułę wyszukującą
      on_error(2);
      RO_CFG.FML_SZUK();
      ($RO_FML.memo_txt(,1,'FORMULA'))(_arg);
      {? in_error() | _arg.RET.STATUS<0
:        katastrofa!
      || _epilog();
         _ret.STATUS:=-1;
         _ret.INFO:='Wystąpił błąd w formule wyszukiwania danych.';
         {? _arg.RET.INFO<>'' || _ret.INFO+=' '+_arg.RET.INFO ?};
         return(_ret)

      || {? _arg.RET.STATUS=0 & _arg.RET.INFO=''
         || _loop:=_arg.RECB.first();
            {!
            |? _loop
            |! _test:=0;
               _TAB:=($_arg.RECB.TABELA)();
               _TAB.cntx_psh();
               _TAB.use(_arg.RECB.MASKA);
               _TAB.prefix();
               {? _TAB.seek(_arg.RECB.REKORD,)
:                 to powinno się udać...
               || RO_CFG.FML_WCEL();
:                 test zgodności z celem przetwarzania
                  _test:=($RO_FML.memo_txt(,1,'FORMULA'))();
                  {? in_error()
:                    katastrofa!
                  || _epilog();
                     _TAB.cntx_pop();
                     _ret.STATUS:=-1;
                     _ret.INFO:='Wystąpił błąd w formule.';
                     {? _arg.RET.INFO<>'' || _ret.INFO+=' '+_arg.RET.INFO ?};
                     return(_ret)
                  ?}
               || _epilog();
                  _TAB.cntx_pop();
                  _ret.STATUS:=-1;
                  _ret.INFO:='Nie znaleziono rekordu.';
                  {? _arg.RET.INFO<>'' || _ret.INFO+=' '+_arg.RET.INFO ?};
                  return(_ret)
               ?};
               _TAB.cntx_pop();
               &_TAB;
               _loop:={? _test<>0 || _arg.RECB.next() || _arg.RECB.del() ?}
            !};
            {? _arg.RECB.size()>1
:              podejrzenie niejednoznacznego wyszukania dla tabeli
            || _MRT:=sql('select count(*) as CNT from :_a group by :_a.TABELA',_arg.RECB);
               _loop:=_MRT.first();
               {!
               |? _loop
               |! {? _MRT.CNT>1
                  || _loop:=0;
                     exec('set_ro_reqr','ro_req',_reqn,_cel,3)
                  || _loop:=_MRT.next()
                  ?}
               !};
               obj_del(_MRT)

            |? _arg.RECB.size()=1
:              jednoznaczne wyszukanie w obrębie celu i kategorii
            || exec('save_ids','ro_req',_RODO,_arg.IDS,_reqn,_cel);
               exec('create_tid','ro_cfg',_reqn,_cel,_arg.RECB);
               _copy(_arg.RECB,_RECB)
            ?}
         ?};
         on_error()
      ?}
   ?};
   _loop:=RO_CFG.next()
!};
_epilog();

: interpretacja wyniku, test jednoznaczności
: (z uwzględnieniem tabeli)
_MRT:=sql(
   'select :_a.RO_REQC, :_a.TABELA, count(*) as CNT '+
   'from :_a '+
   'group by :_a.RO_REQC, :_a.TABELA ',
   _RECB
);
_loop:=_MRT.first();
{!
|? _loop
|! {? RO_REQC.seek(_MRT.RO_REQC,)
   || _cel:=RO_REQC.ref();
      {? _MRT.CNT<>1
      || exec('set_ro_reqr','ro_req',_reqn,_cel,3)
      |? exec('find_ro_reqr','ro_req',_reqn,_cel) & RO_REQR.RES_CODE<0
      || exec('set_ro_reqr','ro_req',_reqn,_cel,0)
      ?}
   ?};
   _loop:=_MRT.next()
!};
obj_del(_MRT);
: realizacja zalecenia:
: Jeśli znaleziono podmiot w więcej niż jednej kartotece, to ma to odzwierciedlenie w załączniku z kategoriami danych
: osobowych (html i csv), nie są wtedy wypełniane parametry identyfikacyjne w odpowiedzi.
_MRT:=sql(
   'select :_a.RO_REQC, count(*) as CNT '+
   'from :_a '+
   'group by :_a.RO_REQC',
   _RECB
);
{!
|? _loop
|! {? RO_REQC.seek(_MRT.RO_REQC,)
   || _cel:=RO_REQC.ref();
      {? _MRT.CNT<>1
:        niejednoznaczność wyszukania dla celu
:        usunięcie parametrów identyfikujących
      || exec('clear_ids','ro_req',_reqn,_cel)
      ?}
   ?};
   _loop:=_MRT.next()
!};
obj_del(_MRT);
: dla odpowiedzi nieobsłużonych do tej pory
: ustal wynik na "Podmiot nie został odnaleziony"
RO_REQR.cntx_psh();
RO_REQR.index('RO_REQN');
RO_REQR.prefix(_reqn);
_loop:=RO_REQR.first();
{!
|? _loop
|! {? RO_REQR.RES_CODE<0
   || exec('set_ro_reqr','ro_req',_reqn,RO_REQR.RO_REQC,2)
   ?};
   _loop:=RO_REQR.next()
!};
RO_REQR.cntx_pop();

: usuń formuły na wartość początkową
exec('set_recb','ro_cfg',_RECB);

_ret


\info
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Formuła realizująca żądanie o podanie zakresu przetwarzanych danych.
::       UWAGA: poprawność argumentów wywołania nie jest weryfikowana.
::   WE: _a [OBJECT] - Wskazanie obiektu klasy RODO.
::       _b [TABLE] - Alias tabeli ze znalezionymi rekordami do przetworzenia.
::       _c [TABLE] - Alias tabeli zawierającej odpowiedź na pytanie o zakres przetwarzanych danych.
::       _d [REFERENCE] - Wskazanie wiersza w tabeli nagłówków żądań RODO.
::   WY: wskazanie tablicy wyniku (patrz \ret_val/ro_cfg.fml)
::UWAGA: przed wywołaniem należy zweryfikować konfigurację (patrz \validate/ro_cfg.fml)
::----------------------------------------------------------------------------------------------------------------------
_RODO:=_a;
_RECB:=_b;
_INFB:=_c;
_reqn:=_d;
_RCEL:=~~;

:: Tablica _arg jest nieco szersza niż powinna - na potrzeby specjalnej obsługi PERSONAL_DATA_REMOVE_RET.
_arg:=exec('zap_arg','rodo',_RODO,_INFB);

_ret:=exec('ret_val','ro_cfg');

_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

_epilog:="
   RO_CFG.cntx_pop();
   RO_FML.cntx_pop();
   RO_REQC.cntx_pop();
   RO_REQN.cntx_pop();
   on_error();
   ~~
";

RO_REQN.cntx_psh();
RO_REQN.prefix();
RO_REQC.cntx_psh();
RO_REQC.prefix();
RO_FML.cntx_psh();
RO_FML.prefix();
RO_CFG.cntx_psh();
RO_CFG.prefix();
RO_CFG.index('NUMER');

: ustal nagłówek
{? ~RO_REQN.seek(_reqn)
|| _epilog();
   _ret.STATUS:=-1;
   _ret.INFO:='Odnalezienie żądania nie powiodło się.';
   return(_ret)
?};

: ustaw parametry
_arg.REQT_KEY:=RO_REQN.RO_REQT().KEY;
_arg.AUTO:=_arg.REQT_KEY='PERSONAL_DATA_REMOVE_RET';

: przygotuj wiersze nagłówkowe dla celów przetwarzania
_RCEL:=exec('inf_prep','rodo',_RECB,_INFB,_reqn);

: pobierz informacje o zakresie przetwarzanych danych dla każdego znalezionego zapisu
_loop:=_RECB.first();
{!
|? _loop
|!
:  wykonaj tylko dla danych jednoznacznie zidentyfikowanych
   {? _RECB.STATUS=0
   ||
:     ustal konfigurację dla danych
      {? ~RO_CFG.seek(_RECB.RO_CFG,)
      || _epilog();
         _ret.STATUS:=-1;
         _ret.INFO:='Odnalezienie konfiguracji nie powiodło się.';
         return(_ret)
      ?};

:     ustal kontekst dla uzyskania informacji
      exec('set_infb','ro_cfg',_INFB,#RO_CFG.RO_REQC);
      _arg.SRC:=exec('ref_arg','ro_cfg',_RECB.TABELA,_RECB.SQL_REF);
      _arg.RET.clear();

:     pobierz informacje o zakresie
      on_error(2);
      RO_CFG.FML_INFO();
      ($RO_FML.memo_txt(,1,'FORMULA'))(_arg);
      {? in_error() | _arg.RET.STATUS<0
:        katastrofa!
      || _epilog();
         _ret.STATUS:=-1;
         _ret.INFO:='Wystąpił błąd w formule zakresu przetwarzania.';
         {? _arg.RET.INFO<>'' || _ret.INFO+=' '+_arg.RET.INFO ?};
         return(_ret)

      |? type_of(_arg.APP)>100
:        są pliki csv do zapisania
      || _jest:=0;
:        sprawdź, czy jest jakikolwiek załącznik
         {! _ai:=1..obj_len(_arg.APP)
         |? _jest=0
         |! {? type_of(_arg.APP[_ai])>100 &
               var_pres('DATA',_arg.APP[_ai])=type_of(SYSLOG) &
               _arg.APP[_ai].DATA.size()>0
            || _jest:=1
            ?}
         !};
         {? _jest<>0
:           dopisz tekst, jeśli znaleziono jakiekolwiek dodatkowe informacje
         || _ins(_INFB,'[INFO]','Inne dane dotyczące podmiotu danych przetwarzane w systemie:')
         ?};
         {! _ai:=1..obj_len(_arg.APP)
         |! {? type_of(_arg.APP[_ai])>100 &
               var_pres('DATA',_arg.APP[_ai])=type_of(SYSLOG) &
               _arg.APP[_ai].DATA.size()>0
:              są jakiekolwiek dane
            || _ref:=null;
               _fh:=fopen(null,'uw',,,1);
:              tymczasowy plik csv dodaj jako załącznik
               {? _fh.is_open()
               || exec('tab2csv','rodo',_arg.APP[_ai].DATA,_fh);
                  _noaf:=RO_CFG.RO_REQC().CODE+'-'+_arg.APP[_ai].NAME;
                  _reqr:=exec('set_ro_reqr','ro_req',_reqn,RO_CFG.RO_REQC,0);
                  _ref:=exec('add_ro_reqz','ro_req',_reqr,_fh,_noaf,_arg.APP[_ai].DESC);
                  _fh.fclose()
               ?};
               obj_del(_fh);
:              dane z załącznika dopisz do dokumentu głównego
               {? _arg.APP[_ai].VIEW=0
               ||
:                 orientacja pionowa
:                 każdy wiersz jako odzielna tabelka
                  _loop:=_arg.APP[_ai].DATA.first();
                  {!
                  |? _loop
                  |! _ins(_INFB,'[TABELA]',_arg.APP[_ai].DESC);
                     {! _fi:=1.._arg.APP[_ai].DATA.fld_num()
                     |! _fld:=_arg.APP[_ai].DATA.fld_acr(_fi);
:                       pomijaj pola techniczne
                        {? 4+_fld<>'F000'
                        || _val:=
                              {? var_pres(_fld,_arg.APP[_ai].DATA)=36
                              || _arg.APP[_ai].DATA.memo_txt(0,1,_fld)
                              || _arg.APP[_ai].DATA[_fi]
                              ?};
                           _ins(_INFB,_arg.APP[_ai].DATA.fld_name(_fi),_val)
                        ?}
                     !};
                     _loop:=_arg.APP[_ai].DATA.next()
                  !}
               ||
:                 orientacja pozioma
:                 wszystkie wiersze w jednej tabeli
                  _tabela:=_arg.APP[_ai].DATA.name();
                  _INFB.blank();
                  _INFB.TABELA:=_tabela;
                  _INFB.ETYKIETA:='[DANE]';
                  _INFB.WARTOSC:=_arg.APP[_ai].DESC;
                  _INFB.add();
:                 zapisz informacje o nagłówku
                  {! _fi:=1.._arg.APP[_ai].DATA.fld_num()
                  |! _fld:=_arg.APP[_ai].DATA.fld_acr(_fi);
:                    pomijaj pola techniczne
                     {? 4+_fld<>'F000'
                     || _INFB.blank();
                        _INFB.TABELA:=_tabela;
                        _INFB.ETYKIETA:='[NAGLOWEK]';
                        _INFB.WARTOSC:=_arg.APP[_ai].DATA.fld_name(_fi);
                        _INFB.add()
                     ?}
                  !};
                  _loop:=_arg.APP[_ai].DATA.first();
                  {!
                  |? _loop
                  |! {! _fi:=1.._arg.APP[_ai].DATA.fld_num()
                     |! _fld:=_arg.APP[_ai].DATA.fld_acr(_fi);
:                       pomijaj pola techniczne
                        {? 4+_fld<>'F000'
                        || _val:=
                              {? var_pres(_fld,_arg.APP[_ai].DATA)=36
                              || _arg.APP[_ai].DATA.memo_txt(0,1,_fld)
                              || _arg.APP[_ai].DATA[_fi]
                              ?};
                           _INFB.blank();
                           _INFB.TABELA:=_tabela;
                           _INFB.ETYKIETA:='[KOLUMNA]';
                           _INFB.WARTOSC:=form(_val);
                           _INFB.add()
                        ?}
                     !};
                     _loop:=_arg.APP[_ai].DATA.next()
                  !}
               ?}
            ?}
         !};
         obj_del(_arg.APP)
      ?};

      {? _arg.AUTO
::       Szczególna dogrywka dla autoretencji
      || RO_CFG.FML_RET();
         ($RO_FML.memo_txt(,1,'FORMULA'))(_arg);

         {? in_error() | _arg.RET.STATUS<0
:           katastrofa!
         || _epilog();
            _ret.STATUS:=-1;
            _ret.INFO:='Wystąpił błąd w formule retencji.';
            {? _arg.RET.INFO<>'' || _ret.INFO+=' '+_arg.RET.INFO ?};
            return(_ret)
         ?}

      ?};

      on_error();
      obj_del(_arg.SRC)
   ?};
   _loop:=_RECB.next()
!};

: zachowaj załączniki do odpowiedzi na zapytanie
exec('inf2reqz','rodo',_INFB,_RCEL,_reqn,'html,csv');

_epilog();
_ret


\zap_arg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Tworzy tablicę parametrów dla forumł usuwających dane.
::   WE: _a [OBJECT] - Wskazanie obiektu klasy RODO.
::       _b [TABLE] - Alias tabeli zawierającej odpowiedź na pytanie o zakres przetwarzanych danych.
::   WY: Tablica z argumentami formuł
::----------------------------------------------------------------------------------------------------------------------
_arg:=obj_new('RODO','SRC','NEW','DATA','PROB','INFB','REQT_KEY','APP','AUTO','RET');
{! _ni:=1..obj_len(_arg)
|! _arg[_ni]:=~~
!};

: obiekt klasy RODO
{? var_pres('_a')>100
|| _arg.RODO:=_a
?};

: tabela odpowiedzi
_arg.INFB:=
   {? var_pres('_b')<>type_of(SYSLOG)
   || exec('get_infb','ro_cfg')
   || _b
   ?};

: parametry
_arg.DATA:=date();
_arg.PROB:=10;
_arg.REQT_KEY:='';

: dla realizacji PERSONAL_DATA_REMOVE_RET
_arg.AUTO:=0;

: wynik działania formuły
_arg.RET:=exec('ret_val','ro_cfg');

_arg


\zap
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Formuła realizuje żądanie zapomnienia danych osobowych.
::       UWAGA: poprawność argumentów wywołania nie jest weryfikowana.
::   WE: _a [OBJECT] - Wskazanie obiektu klasy RODO.
::       _b [TABLE] - Alias tabeli ze znalezionymi rekordami do przetworzenia.
::       _c [TABLE] - Alias tabeli zawierającej odpowiedź na pytanie o zakres przetwarzanych danych.
::       _d [REFERENCE] - Wskazanie wiersza w tabeli nagłówków rządań RODO.
::   WY: wskazanie tablicy wyniku (patrz \ret_val/ro_cfg.fml)
::UWAGA: przed wywołaniem należy zweryfikować konfigurację (patrz \validate/ro_cfg.fml)
::----------------------------------------------------------------------------------------------------------------------
_RODO:=_a;
_RECB:=_b;
_INFB:=_c;
_reqn:=_d;
_RCEL:=~~;

_arg:=exec('zap_arg','rodo',_RODO,_INFB);
_ret:=exec('ret_val','ro_cfg');

_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

_epilog:="
   RO_CFG.cntx_pop();
   RO_FML.cntx_pop();
   RO_REQN.cntx_pop();
   on_error();
   {? do_state()<>0
   || undo();
      end()
   ?};
   ~~
";

RO_REQN.cntx_psh();
RO_REQN.prefix();
RO_FML.cntx_psh();
RO_FML.prefix();
RO_CFG.cntx_psh();
RO_CFG.prefix();

: ustal nagłówek
{? RO_REQN.seek(_reqn)
|| _arg.AUTO:=(RO_REQN.RO_REQT().KEY='PERSONAL_DATA_REMOVE_RET')
|| _epilog();
   _ret.STATUS:=-1;
   _ret.INFO:='Odnalezienie zapytania nie powiodło się.';
   return(_ret)
?};

: ustaw parametry
_arg.DATA:={? _arg.AUTO || RO_REQN.DATE || date() ?};
_arg.REQT_KEY:=RO_REQN.RO_REQT().KEY;

: przygotuj wiersze nagłówkowe dla celów przetwarzania
_RCEL:=exec('inf_prep','rodo',_RECB,_INFB,_reqn);

: sprawdź możliwość usunięcia i jeśli jest to możliwe usuń znalezione dane
_loop:=_RECB.first();
{!
|? _loop
|!
:  wykonaj tylko dla danych jednoznacznie zidentyfikowanych
   {? _RECB.STATUS=0
   ||
:     ustal konfigurację dla danych
      {? ~RO_CFG.seek(_RECB.RO_CFG,)
      || _epilog();
         _ret.STATUS:=-1;
         _ret.INFO:='Odnalezienie konfiguracji nie powiodło się.';
         return(_ret)
      ?};
:     cel przetwarzania
      _cel:=RO_CFG.RO_REQC;

:     ustal kontekst dla uzyskania informacji
      exec('set_infb','ro_cfg',_INFB,#RO_CFG.RO_REQC);
:     ustal rekord źródłowy, docelowy i kontekst działania
      _arg.SRC:=exec('ref_arg','ro_cfg',_RECB.TABELA,_RECB.SQL_REF);
      _arg.NEW:=exec('ref_arg','ro_cfg');
      _arg.RET.clear();

:     rekord docelowy na podstawie źródłowego
      {? 0 & exec('find_org','ro_map','U',_RECB.SQL_REF)
:        wykorzystanie mapy powiązań wyłączone decyzją szefa projektu
      || exec('ref_set','ro_cfg',_arg.NEW,_RECB.TABELA,_RECB.SQL_REF)
      ?};

:     pobierz informacje o zakresie
      on_error(2);
      RO_CFG.FML_INFO();
      ($RO_FML.memo_txt(,1,'FORMULA'))(_arg);
      {? in_error() | _arg.RET.STATUS<0
:        katastrofa!
      || _epilog();
         _ret.STATUS:=-1;
         _ret.INFO:='Wystąpił błąd w formule zakresu przetwarzania.';
         {? _arg.RET.INFO<>'' || _ret.INFO+=' '+_arg.RET.INFO ?};
         return(_ret)
      || _ins(_INFB,'[INFO]',
            'Raport retencji danych osobowych dotyczący wymaganych prawnie '+
            'okresów przechowywania danych w systemie:'
         )
      ?};

:     przeprowadź test retencji danych
      on_error(2);
      RO_CFG.FML_RET();
      ($RO_FML.memo_txt(,1,'FORMULA'))(_arg);
      {? in_error() | _arg.RET.STATUS<0
:        katastrofa!
      || _epilog();
         _ret.STATUS:=-1;
         _ret.INFO:='Wystąpił błąd w formule ustalenia okresu retencji.';
         {? _arg.RET.INFO<>'' || _ret.INFO+=' '+_arg.RET.INFO ?};
         return(_ret)

      |? _arg.RET.STATUS<>0
:        każda inna sytuacja niż możliwość usunięcia danych
      || exec('set_ro_reqr','ro_req',_reqn,_cel,_arg.RET.STATUS,_arg.RET.INFO)

      || _arg.RET.INFO:='';
:        żądanie przetwarzane etapowo
         {? exec('find_ro_reqr','ro_req',_reqn,_cel) & RO_REQR.RECEIVED<>0
:           znaleziono potwierdzenie żądania zaprzestania przetwarzania
         ||
:           okres retencji upłynął, usuń dane
:           Uwaga: formuła może wycofać transakcję!
            do();
            RO_CFG.FML_ZAP();
            ($RO_FML.memo_txt(,1,'FORMULA'))(_arg);
            {? in_error() | do_state()<>1 | _arg.RET.STATUS<0
:              katastrofa!
            || _epilog();
               _arg.RET.STATUS:=-1;
               _arg.RET.INFO:='Wystąpił błąd w formule usuwania danych.';
               {? _arg.RET.INFO<>'' || _ret.INFO+=' '+_arg.RET.INFO ?};
               return(_ret)
            ||
:              dane zostały "zapomniane"
               _TAB:=_arg.SRC.TABELA;
               _TAB.cntx_psh();
               _TAB.use(_arg.SRC.MASKA);
               _TAB.prefix();
               {? _TAB.seek(_arg.SRC.REF)
               ||
:                 blokada ponownego wysyłania zgłoszenia autoretencji
                  {? exec('find_org','ro_map','Z',_TAB.ref(),REF.FIRMA)
                  || RO_MAP.STATUS:='T';
                     RO_MAP.put()
                  ?}
               ||
:                 zatrzyj ślad, jeśli usunięto rekord
                  exec('del_org_all','ro_map',_arg.SRC.REF,REF.FIRMA)
               ?};
               _TAB.cntx_pop();
               &_TAB;
:              zatwierdzenie
               {? ~end()
               || _epilog();
                  _arg.RET.STATUS:=-1;
                  _arg.RET.INFO:='Wystąpił błąd w formule usuwania danych.';
                  return(_ret)
               ?};
:              ustaw odpowiedź ze statusem wykonania formuły anonimizującej
               exec('set_ro_reqr','ro_req',_reqn,_cel,_arg.RET.STATUS);
:              usuń zgody wymagane do przetwarzania danych osobowych
               exec('remove_perms','ro_req',_arg.SRC);
:              usuń zgromadzone dane identyfikacyjne
               exec('clear_ids','ro_req',_reqn,_cel)
            ?}
         ?}
      ?};
      on_error();
      obj_del(_arg.SRC);
      obj_del(_arg.NEW)
   ?};
   _loop:=_RECB.next()
!};

{? RO_REQR.RECEIVED=0
:  załączniki do odpowiedzi na "pierwotne" zapytanie
|| exec('inf2reqz','rodo',_INFB,_RCEL,_reqn,'html')
?};

_epilog();
_ret


\zgoda_arg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Tworzy tablicę parametrów dla forumł tworzących dokumenty zgód.
::   WE: _a [OBJECT] - Wskazanie obiektu klasy RODO.
::       _b [TABLE] - Alias tabeli, z której pochodzi zapis i dla którego będzie rejestrowana zgoda
::       _c [REFERENCE] - Wskazanie wiersza tabeli _a
::   WY: Tablica z argumentami formuł
::----------------------------------------------------------------------------------------------------------------------
_arg:=obj_new('RODO','SRC_TAB','SRC_REF','APP','RET');
{! _ni:=1..obj_len(_arg)
|! _arg[_ni]:=~~
!};

: obiekt klasy RODO
{? var_pres('_a')>100
|| _arg.RODO:=_a
?};

: parametry
_arg.SRC_TAB:=_b;
_arg.SRC_REF:=
   {? var_pres('_c')<>type_of(null) | _c=null
   || _b.ref()
   || _c
   ?};
_arg.APP:=~~;

: wynik działania formuły
_arg.RET:=exec('ret_val','ro_cfg');

_arg


\zgoda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Tworzy informacje o zgodzie na przetwarzanie danych osobowych.
::   WE: _a [TABLE] - alias tabeli, z której pochodzi zapis i dla którego będzie rejestrowana zgoda
::       _b [REFERENCE] - wskazanie wiersza tabeli _a, jeśli pominięty to przyjęty zostanie _a.ref()
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_TAB:=_a;
_ref:={? var_pres('_b')=type_of(null) & _b<>null || _b || _TAB.ref() ?};
_mdb:=form(8+$_ref);
_ret:=exec('ret_val','ro_cfg');
_reqn:=null;
_resp:=null;

: przygotuj środowisko
exec('init','rod');
_RODO:=obj_new(@.CLASS.RODO);
_arg:=exec('szuk_arg','rodo',_RODO);
_arg.AUTO_TAB:=2-!_TAB;
_arg.AUTO_REF:=#_ref;

_epilog:="
   RO_CFG.cntx_pop();
   RO_FML.cntx_pop();
   on_error();
   ~~
";

: zbierz informacje o podmiocie
RO_FML.cntx_psh();
RO_FML.prefix();
RO_CFG.cntx_psh();
RO_CFG.index('NUMER');
RO_CFG.prefix();
_loop:=RO_CFG.first();
{!
|? _loop
:  wyszukuj dane właściwe dla wskazanego rekordu
|! _cel:=RO_CFG.RO_REQC;
   _arg.RECB.erase();
   _arg.RET.clear();

:  dla różnych celów mogą być zgromadzone różne identyfikatory
:  funkcje wyszukujące muszą odpowiednio wypełniać tablicę IDS
   exec('blank_ids','ro_req',_arg.IDS);

:  wykonaj formułę wyszukującą dla określonego rekordu w celu
:  uzyskania wszystkich identyfikatrów i danych osoby
   on_error(2);
   RO_CFG.FML_SZUK();
   ($RO_FML.memo_txt(,1,'FORMULA'))(_arg);
   {? in_error() | _arg.RET.STATUS<0
:     katastrofa!
   || _epilog();
      _ret.STATUS:=-1;
      _ret.INFO:='Wystąpił błąd w formule wyszukiwania danych.';
      {? _arg.RET.INFO<>'' || _ret.INFO+=' '+_arg.RET.INFO ?};
      return(_ret)

   |? _arg.RECB.size()=1 & _arg.RET.STATUS=0 & _arg.RET.INFO=''
:     wyszukanie zakończone sukcesem
   || _test:=0;
      _TAB.cntx_psh();
      _TAB.use(_mdb);
      _TAB.prefix();
      {? _TAB.seek(_ref)
:        to powinno się udać...
      || RO_CFG.FML_WCEL();
:        test zgodności z celem przetwarzania
         _test:=($RO_FML.memo_txt(,1,'FORMULA'))();
         {? in_error()
:           katastrofa!
         || _epilog();
            _TAB.cntx_pop();
            _ret.STATUS:=-1;
            _ret.INFO:='Wystąpił błąd w formule.';
            {? _arg.RET.INFO<>'' || _ret.INFO+=' '+_arg.RET.INFO ?};
            return(_ret)
         ?}
      || _epilog();
         _TAB.cntx_pop();
         _ret.STATUS:=-1;
         _ret.INFO:='Nie znaleziono rekordu.';
         {? _arg.RET.INFO<>'' || _ret.INFO+=' '+_arg.RET.INFO ?};
         return(_ret)
      ?};
      _TAB.cntx_pop();

      {? _test
      ||
:        tworzenie załączników z dokumentami zgody
         _dok:=exec('zgoda_arg','rodo',_RODO,_TAB);
         RO_CFG.FML_ZGO();
         ($RO_FML.memo_txt(,1,'FORMULA'))(_dok);
         {? in_error() | _dok.RET.STATUS<0
:           katastrofa!
         || _epilog();
            _ret.STATUS:=-1;
            _ret.INFO:='Wystąpił błąd w formule tworzącej dokument.';
            {? _arg.RET.INFO<>'' || _ret.INFO+=' '+_arg.RET.INFO ?};
            return(_ret)

         |? type_of(_dok.APP)>100
         || {! _ai:=1..obj_len(_dok.APP)
            |! {? type_of(_dok.APP[_ai])>100
               || {? fexists(_dok.APP[_ai].NAME)
                  || {? (_fh:=fopen(_dok.APP[_ai].NAME,'r'))>0
                     ||
:                       utwórz nagłówek
                        RO_REQN.cntx_psh();
                        RO_REQN.clear();
                        RO_REQN.blank();
                        RO_REQN.USER:=OPERATOR.USER().KOD;
                        RO_REQN.TIME:=time();
                        RO_REQN.DATE:=date();
                        RO_REQN.DATA_REJ:=date();
                        RO_REQN.TM_STAMP:=$RO_REQN.tm_stamp();
                        RO_REQN.RO_REQT:=exec('find_ro_reqt','ro_req','PROCESSING_PERMIT');
                        RO_REQN.STATUS:='P';
                        _reqn:=null;
                        _resp:=null;
                        {? RO_REQN.add(1)
                        || _reqn:=RO_REQN.ref();
:                          jednoznaczna identyfikacja w obrębie celu i kategorii
                           exec('save_ids','ro_req',_RODO,_arg.IDS,_reqn,null);
                           exec('save_ids','ro_req',_RODO,_arg.IDS,_reqn,_cel);
                           exec('set_ro_reqr','ro_req',_reqn,_cel,0);
:                          dla każdego celu przetwarzania utwórz odpowiedź
                           _resp:=exec('set_ro_reqr','ro_req',_reqn,_cel,2)
                        ?};
                        RO_REQN.cntx_pop();

                        {? _resp=null
:                          błąd przy tworzeniu nagłówka i odpowiedzi
                        || exec('ro_reqn_del','ro_req',_reqn,1)

                        |? exec('add_ro_reqz','ro_req',_resp,_fh,'zgoda.pdf',_dok.APP[_ai].DESC)<>null
:                          utworzono załącznik
                        || RO_PERM.cntx_psh();
                           RO_PERM.clear();
                           RO_PERM.index('RO_PERM');
                           RO_PERM.prefix(2-!_TAB,_mdb,_ref,RO_CFG.RO_REQC().CODE,_dok.APP[_ai].CODE);
:                          uwzględnij istniejące zgody
                           {? RO_PERM.last() & RO_PERM.STATE='T'
:                             zgoda danego typu już istnieje
                           || exec('ro_reqn_del','ro_req',_reqn,1)

                           |? ~RO_PERM.last() | RO_PERM.STATE<>'T'
:                             nie znaleziono aktywnej zgody
                           || RO_PERM.blank();
                              RO_PERM.ID:=$RO_PERM.tm_stamp();
                              RO_PERM.RO_REQN:=_reqn;
                              RO_PERM.RO_REQC:=_cel;
                              RO_PERM.RO_PERD:=exec('find_ro_perd','ro_req',_dok.APP[_ai].CODE);
                              RO_PERM.TABLE:=2-!_TAB;
                              RO_PERM.MASK:=_mdb;
                              RO_PERM.RECORD:=_ref;
                              RO_PERM.AGREE_D:=date();
                              RO_PERM.STATE:='T';
                              {? ~RO_PERM.add()
:                                coś poszło nie tak...
                              || exec('ro_reqn_del','ro_req',_reqn,1)
                              ?}
                           ?};
                           RO_PERM.cntx_pop()
                        ||
:                          załącznika nie udało się utworzyć, usuń nagłówek
                           exec('ro_reqn_del','ro_req',_reqn,1)
                        ?};
                        fclose(_fh)
                     ?};
                     ferase(_dok.APP[_ai].NAME)
                  ?}
               ?}
            !}
         ?};
         obj_del(_dok)
      ?};
      on_error()
   ?};
   _loop:=RO_CFG.next()
!};
RO_CFG.cntx_pop();
RO_FML.cntx_pop();
~~


\inf_prep
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Przygotowuje tabelę z informacjami do uzupełnienia.
::   WE: _a [TABLE] - Alias tabeli ze znalezionymi rekordami do przetworzenia.
::       _b [TABLE] - Alias tabeli zawierającej odpowiedź na pytanie o zakres przetwarzanych danych.
::       _c [REFERENCE] - Wskazanie wiersza w tabeli nagłówków rządań RODO.
::   WY: Alias tabeli zawierającej wskazania celów, dla których udało sie odnaleźć przetwarzane dane.
::----------------------------------------------------------------------------------------------------------------------
_RECB:=_a;
_INFB:=_b;
_reqn:=_c;

_ins:="exec('ins_infb','ro_cfg',_a,_b,_c)";

RO_REQN.cntx_psh();
RO_REQN.prefix();
RO_REQC.cntx_psh();
RO_REQC.prefix();

: przygotuj wiersze nagłówkowe dla poszczególnych celów przetwarzania
_RCEL:=sql('select distinct :_a.RO_REQC as RO_REQC from :_a',_RECB);
_loop:=RO_REQN.seek(_reqn) & _RCEL.first();
{!
|? _loop
|! {? RO_REQC.seek(_RCEL.RO_REQC,)
   || exec('set_infb','ro_cfg',_INFB,#RO_REQC.ref());
      _ins(_INFB,'[TABELA]','Informacje ogólne odpowiedzi na żądanie');
      _ins(_INFB,'Odpowiedź na żądanie typu',{? var_press('RoTypNaz')=type_of('') || RoTypNaz || RO_REQN.RO_REQT().NAME ?});
      _ins(_INFB,'z dnia',$RO_REQN.DATE);
      _ins(_INFB,'Cel przetwarzania danych',RO_REQC.DESC);
      _ins(_INFB,'System przetwarzający',exec('nazwa','#system'));
      _ins(_INFB,'[INFO]','Zidentyfikowane w systemie dane podstawowe podmiotu danych:');
      ~~
   ?};
   _loop:=_RCEL.next()
!};

RO_REQC.cntx_pop();
RO_REQN.cntx_pop();

_RCEL


\inf_ret
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Dodaje standaryzowane wiersze w odpowiedzi na zapytanie o retencję.
::   WE:  _a  [TABLE] - Alias tabeli zawierającej odpowiedź na zapytanie.
::        _b  [DATE] - Data, po której dane mogą być usunięte.
::       [_c] [INTEGER] - Określenie możliwości usunięcia danych:
::          0 - usunięcie niemożliwe
::          <>0 - można usunąć dane
::   WY: ~~
::UWAGA: poprawność argumentów wywołania nie jest weryfikowana
::----------------------------------------------------------------------------------------------------------------------
exec('ins_infb','ro_cfg',_a,'[TEKST]',
   'Planowana data usunięcia danych: '+{? _b<>date(0,0,0) || $_b || 'nieokreślona' ?}
);
{? var_pres('_c')=type_of(0)
|| exec('ins_infb','ro_cfg',_a,'[TEKST]','Wynik: '+{? _c<>0 || 'Możliwe' || 'Niemożliwe' ?}+' usunięcie danych')
?};
~~


\inf_ret_sm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Dodaje standaryzowane wiersze w odpowiedzi na zapytanie o retencję.
::   WE: _a [OBJECT] - argument _a wywołania formuły na retencję.
::   WY: ~~
::UWAGA: poprawność argumentów wywołania nie jest weryfikowana
::----------------------------------------------------------------------------------------------------------------------
exec('inf_ret','rodo',_a.INFB,_a.RET.DATA,_a.RET.STATUS=0)


\inf2reqz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Zamieszcza w tabeli RO_REQZ pliki załączników.
::   WE: _a [TABLE] - Alias tabeli zawierającej odpowiedź na pytanie o zakres przetwarzanych danych.
::       _b [TABLE] - Alias tabeli zawierającej wskazania celów, dla których udało sie odnaleźć przetwarzane dane.
::       _c [REFERENCE] - Wskazanie wiersza w tabeli nagłówków rządań RODO.
::       _d [STRING] - Wyspecyfikowane załączniki do utworzenia: html,csv.
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_INFB:=_a;
_RCEL:=_b;
_reqn:=_c;
_file:=_d;

RO_REQC.cntx_psh();
: zachowaj załączniki do odpowiedzi
_loop:=_RCEL.first();
_reqc:=null;
{!
|? _loop
|! RO_REQC.prefix();
   {? RO_REQC.seek(_RCEL.RO_REQC,) & _reqc<>RO_REQC.ref()
   || _reqc:=RO_REQC.ref();
      _BUF:=sql(
            'select :_a.NUMER, :_a.TABELA, :_a.ETYKIETA, :_a.WARTOSC '+
            'from :_a '+
            'where :_a.RO_REQC=:_b '+
            'order by :_a.NUMER',
            _INFB,
            #RO_REQC.ref()
         );
:     załącznik w postaci html (czytelna) i csv (techniczna)
      {? type_of(_BUF)=type_of(SYSLOG) & _BUF.size()>1
      || _reqr:=
            {? ~exec('find_ro_reqr','ro_req',_reqn,_reqc)
            || exec('set_ro_reqr','ro_req',_reqn,_reqc,0)
            || RO_REQR.ref()
            ?};
         {? _file*'html'
         || _fh:=fopen(null,'Uw',,,1);
            {? _fh.is_open()>0
:              tymczasowy plik html dodaj jako załącznik
            || exec('inf2html','rodo',_BUF,_fh);
               _noaf:=RO_REQC.CODE+'-informacja.html';
               exec('add_ro_reqz','ro_req',_reqr,_fh,_noaf,'Informacja o zakresie przetwarzania danych');
               _fh.fclose()
            ?};
            obj_del(_fh)
         ?};
         {? _file*'csv'
         || _fh:=fopen(null,'uw',,,1);
            {? _fh.is_open()>0
:              tymczasowy plik csv dodaj jako załącznik
            || exec('inf2csv','rodo',_BUF,_fh,RO_REQC.DESC);
               _noaf:=RO_REQC.CODE+'-dane.csv';
               exec('add_ro_reqz','ro_req',_reqr,_fh,_noaf,'Dane dla zakresu przetwarzania');
               _fh.fclose()
            ?};
            obj_del(_fh)
         ?}
      ?};
      obj_del(_BUF)
   ?};
   _loop:=_RCEL.next()
!};
RO_REQC.cntx_pop();
~~


\inf2html
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [18.22]
:: OPIS: Formuła tworząca kod HTML na podstawie tabelki (parametru) z polami napisowymi ETYKIETA i WARTOSC.
::   WE: _a [TABLE] - Tabela z danymi.
::       _b [FILE]  - Uchwyt do pliku, w którym zapisany zostanie wynik.
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_TAB:=_a;
_fh:=_b;

_tkey:=_TAB.ndx_tmp(,,'TABELA',,,'NUMER',,);

:: HTML special (reserved) characters.
_patt:=obj_new(5);
_repl:=obj_new(5);
_patt[1]:='&';    _repl[1]:='&amp;';
_patt[2]:='<';    _repl[2]:='&lt;';
_patt[3]:='>';    _repl[3]:='&gt;';
_patt[4]:='"';    _repl[4]:='&quot;';
_patt[5]:='\'';   _repl[5]:='&apos;';

_fh.fwrite('<!DOCTYPE html>');
_fh.fwrite('<html lang="pl">');
_fh.fwrite('<head>');
_fh.fwrite('<meta charset="UTF-8">');
_fh.fwrite(
'<style>'+
'  body {'+
'    font-family: "Roboto", sans-serif;'+
'  }'+
'  table {'+
'     width: 640px;'+
'     margin: auto;'+
'     margin-top: 50px;'+
'     border: solid 1px lightgray;'+
'     border-spacing: 0px;'+
'  }'+
'  table.thoriz {'+
'     width: 1024px;'+
'  }'+
'  tr.header {'+
'     font-weight: bold;'+
'     background-color: #5bc199;'+
'     color: white;'+
'  }'+
'  tr.header td {'+
'     padding: 1em;'+
'     font-size: 1.3em;'+
'  }'+
'  td.caption {'+
'     text-align: right;'+
'     padding: 5px;'+
'     padding-right: 2em;'+
'     font-weight: bold;'+
'     width: 10em;'+
'  }'+
'  .horiz {'+
'     text-align: left;'+
'     border-right: solid 1px lightgray;'+
'     padding-right: 5px;'+
'     padding-left: 5px;'+
'  }'+
'  .tcent {'+
'     text-align: center !important;'+
'  }'+
'  .trig {'+
'     text-align: right !important;'+
'  }
'+
'  p.info {'+
'     width: 640px;'+
'     margin: auto;'+
'     margin-top: 50px;'+
'     font-weight: bold; '+
'     font-size: 1.3em; '+
'     color: #5bc199'+
'  }'+
'  p.stamp {'+
'     text-align: right; font-size: 0.8em'+
'  }'+
'</style>'
);
_fh.fwrite('<title>Zakres przetwarzania danych osobowych</title>');

:: Czy znacznik <table> jest otwarty?
_tIsOpen:=0;
_loop:=_TAB.first();
{!
|? _loop
|! {? _tIsOpen=0 & _TAB.ETYKIETA='[TABELA]'
   || _tIsOpen:=1;
      _fh.fwrite('<table>')
   ?};
   {? _TAB.ETYKIETA='[DANE]'
   || _fh.fwrite('<table class="thoriz">');
:     zlicz kolumny
      _col:=0;
      _acr:=_TAB.TABELA;
      _TAB.cntx_psh();
      _TAB.index(_tkey);
      _TAB.prefix(_acr);
      _loop:=_TAB.first();
      {!
      |? _loop
      |! _col+=(_TAB.ETYKIETA='[NAGLOWEK]');
         _loop:=_TAB.next()
      !};
      _TAB.cntx_pop();
:     dodaj tytuł tabelki
      _fh.fwrite('<tr class="header">');
      _fh.fwrite('<td align="center" colspan="'+$_col+'">'+gsub(_TAB.WARTOSC,_patt,_repl)+'</td>');
      _fh.fwrite('</tr>');
      _TAB.del();
      _TAB.cntx_psh();
      _TAB.index(_tkey);
      _TAB.prefix(_acr);
:     dodaj nagłówki kolumn
      {? _TAB.first()
      || _fh.fwrite('<tr>');
         {!
         |? {? _TAB.ETYKIETA='[NAGLOWEK]'
            || _fh.fwrite('<th class="horiz tcent">');
               _fh.fwrite(gsub(_TAB.WARTOSC,_patt,_repl));
               _fh.fwrite('</th>');
               _TAB.del()
            || _TAB.next()
            ?}
         !};
         _fh.fwrite('</tr>')
      ?};
:     wiersze tabeli
      {? _TAB.first()
      || _cnt:=0;
         {!
         |? {? _TAB.ETYKIETA='[KOLUMNA]'
            || {? _cnt=0
               || _fh.fwrite('<tr>')
               ?};
               _cnt+=1;
               _fh.fwrite('<td nowrap class="horiz tcent">');
               _fh.fwrite(gsub(_TAB.WARTOSC,_patt,_repl));
               _fh.fwrite('</td>');
               {? _cnt=_col
               || _fh.fwrite('</tr>');
                  _cnt:=0
               ?};
               _TAB.del()
            || _TAB.next()
            ?}
         !}
      ?};
      _TAB.cntx_pop();
:     koniec wykazu danych
      _fh.fwrite('</table>')

   |? _TAB.ETYKIETA='[INFO]'
   || _fh.fwrite('<p class="info">'+gsub(_TAB.WARTOSC,_patt,_repl)+'</p>')

   |? _TAB.ETYKIETA='[TABELA]'
   || _fh.fwrite('<tr class="header">');
      _fh.fwrite('<td align="center" colspan="2">'+gsub(_TAB.WARTOSC,_patt,_repl)+'</td>');
      _fh.fwrite('</tr>')

   |? _TAB.ETYKIETA='[TEKST]'
   || _fh.fwrite('<tr">');
      _fh.fwrite('<td class="wartosc" colspan="2">'+gsub(_TAB.WARTOSC,_patt,_repl)+'</td>');
      _fh.fwrite('</tr>')

   || _fh.fwrite('<tr>');
      _fh.fwrite('<td class="caption">'+gsub(_TAB.ETYKIETA,_patt,_repl)+'</td>');
      _fh.fwrite('<td>'+gsub(_TAB.WARTOSC,_patt,_repl)+'</td>');
      _fh.fwrite('</tr>')
   ?};
   _loop:=_TAB.next();
   {? _tIsOpen & (~_loop | '[INFO][TABELA][DANE]'*_TAB.ETYKIETA)
::    Jeżeli to był ostatni element lub nowy jest sekcją i był znacznik <table>, to go domknijmy.
   || _tIsOpen:=0;
      _fh.fwrite('</table>')
   ?}
!};

_fh.fwrite('<p class="stamp">');
_fh.fwrite('Data i czas sporządzenia: '+$date()+' '+time()$3);
_fh.fwrite('</p>');
_fh.fwrite('</body>');
_fh.fwrite('</html>');

~~


\inf2csv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Formuła zapisująca dane do pliku.
::   WE: _a [TABLE] - alias tabeli z danymi
::       _b [FILE] - wskazanie obiektu reprezentującego plik
::       _c [STRING] - cel przetwarzania danych
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_TAB:=_a;
_sep:=';';
_fh:=_b;
_cel:=_c;
_kategoria:='';

: wiersz nagłówka
_fh.fwrite(
   'Cel przetwarzania'+_sep+
   'Kategoria'+_sep+
   'Zbiór'+_sep+
   'Etykieta'+_sep+
   'Wartość'+_sep
);
_pomin:='[DANE][NAGLOWEK][KOLUMNA][INFO][TEKST]';

_TAB.cntx_psh();
_loop:=_TAB.first();
{!
|? _loop
|! {? _TAB.ETYKIETA='[TABELA]'
   || _kategoria:=_TAB.WARTOSC
   |? _pomin*_TAB.ETYKIETA
   || 'te wiersze pomijaj'
   |? _TAB.TABELA<>''
   || _fh.fwrite(
         '"'+_cel+'"'+_sep+
         '"'+_kategoria+'"'+_sep+
         '"'+($(_TAB.TABELA+'.comment()'))()+'"'+_sep+
         '"'+_TAB.ETYKIETA+'"'+_sep+
         {? #_TAB.WARTOSC=0
         || '"'+gsub(_TAB.WARTOSC,'"','""')+'"'
         || _TAB.WARTOSC
         ?}+_sep
      )
   ?};
   _loop:=_TAB.next()
!};
_TAB.cntx_pop();
~~


\tab2csv
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Formuła zapisująca dane do pliku.
::   WE: _a [TABLE] - alias tabeli z danymi
::       _b [FILE] - wskazanie obiektu reprezentującego plik
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_TAB:=_a;
_fh:=_b;

_TAB.cntx_psh();
{? ~_TAB.first()
|| _TAB.cntx_pop();
   return()
?};

_header:='';
_line:="_TAB:=_a;''";
{! _fi:=1.._TAB.fld_num()
|! _acr:=_TAB.fld_acr(_fi);
   {? 4+_acr<>'F000'
   || _type:=var_pres(_TAB.fld_acr(_fi),_TAB);
:     uwaga: nie ma potrzeby "uzdatniania" napisów poprzez zamianę znaków specjalnych
:     wyjątek stanowi cudzysłów, który zostanie zamieniony na podwójny cudzysłów
      _line+=
         {? _type=20 | _type=21 | _type=22 | _type=29
         || '+form_sys(_TAB.'+_acr+')'
         |? _type=27
         || '+\'"\'+form(gsub(_TAB.'+_acr+',\'"\',\'""\'))+\'"\''
         |? _type=36
         || '+\'"\'+form(gsub(_TAB.memo_txt(,1,\''+_acr+'\'),\'"\',\'""\'))+\'"\''
         || '+form(_TAB.'+_acr+')'
         ?}+'+\';\'';
      _header+=_TAB.fld_name(_fi)+';'
   ?}
!};
_line:=$_line;

_fh.fwrite(_header);
{!
|? _fh.fwrite(_line(_TAB));
   _TAB.next()
!};
_TAB.cntx_pop();
~~


\ro_reqn_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Wyświetla żądania do obsługi
::   WE: [_a] - 2-retencja 1-obsłużone [0]-do obsługi
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('is_aip','rodo')
|| FUN.info('Opcja niedostępna. Wymagana współpraca z RODO Utility.'@);
   return()
?};
{? var_press('_a')<=0 || _a:=0 ?};
{? _a=1 & exec('save_served','rodo')=0
|| FUN.info('System nie przechowuje żądań obsłużonych.'@);
   return()
?};
RO_REQN.actions('WER',{? _a=0 || '' || 'ZA:Z' ?});
RO_REQR.win_edit('RED');
_grp:=RO_REQN.grp_make(
   {? _a=0
   || 'Żądania do odpowiedzi'@
   |? _a=1
   || 'Żądania obsłużone'@
   || 'Żądania retencji'@
   ?}
   ,,'#roreqnsel'
);
RO_REQN.grp_sel(_grp,,'WER',,"
   _hide:='';
   RO_REQR.index('RO_REQN');
   {? RO_REQN.get()
   || RO_REQR.prefix(RO_REQN.ref());
      {? RO_REQN.STATUS<>'N'
      || _hide:='P'
      ?}
   || RO_REQR.prefix(null)
   ?};
   RO_REQR.actions('WER',_hide,,1);
   grp_disp(RO_REQR,'WER')
",,,,,,,,'maximized_with_title');
RO_REQN.grp_splt(_grp,,'horizontal','bottom',10);
RO_REQN.grp_sel(_grp,RO_REQR,'WER',,,,,,,,,,'maximized_with_title');
RO_REQN.win_sel(_grp);
ron_zak:={? _a || _a+1 || 1 ?};
exec('ro_reqn_prfx','rodo');
RO_REQN.select();
VAR_DEL.delete('ron_zak')


\ro_reqn_prfx
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.52]
:: OPIS: Ustawia zakres zapytań
::----------------------------------------------------------------------------------------------------------------------
{? var_press('ron_zak')<=0
|| ron_zak:=1
?};
RO_REQN.hdr_sel();
{? ron_zak=1
|| RO_REQN.index('SUPPORT'); RO_REQN.prefix('N','N');
   RO_REQN.hdr_sel('Żądania do obsługi - do wykonania'@)
|? ron_zak=0
|| RO_REQN.index('SUPPORT'); RO_REQN.prefix('N','T');
   RO_REQN.hdr_sel('Żądania do obsługi - wykonane'@)
|? ron_zak=2
|| RO_REQN.index('STATUS'); RO_REQN.prefix('S')
|| RO_REQN.index('RO_REQT'); RO_REQN.prefix(exec('find_ro_reqt','ro_req','PERSONAL_DATA_REMOVE_RET'))
?}


\ro_reqp_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Przed wyświetleniem tabeli RO_REQN
::----------------------------------------------------------------------------------------------------------------------
_cel:={? cur_tab(1)=RO_REQN || null || RO_REQR.RO_REQC ?};
RO_REQP.index('ID_DESC'); RO_REQP.prefix(RO_REQN.ref(),_cel);
_win:={? _cel=null & RO_REQN.RO_REQT().KEY='PERSONAL_DATA_CORRECT' || '_NEW' || '' ?};
RO_REQP.win_sel('WER'+_win);
RO_REQP.win_edit('RED'+_win);
RO_REQP.hdr_sel();
RO_REQP.hdr_sel(' '+{? _cel=null || 'żądania'@ || 'odpowiedzi'@ ?});
RO_REQP.select(,,,{? _cel=null | RO_REQN.STATUS<>'N' || 'dpuO:dO' || '' ?})


\ro_reqp_copy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Kopia parametrów z żądania na odpowiedź
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Czy skopiować pozycje żądania do odpowiedzi?'@)
|| RO_REQP.cntx_psh();
   RO_REQP.index('UNIQUE'); RO_REQP.prefix(RO_REQN.ref(),null);
   {? RO_REQP.first()
   || {!
      |? _val:=RO_REQP.VAL;
         _new:=RO_REQP.memo_txt(,1,'NEW_VAL');
         RO_REQP.cntx_psh();
         RO_REQP.prefix(RO_REQN.ref(),RO_REQR.RO_REQC,RO_REQP.RO_REQI);
         {? RO_REQP.first()
         || RO_REQP.VAL:={? _new<>'' || _new || _val ?};
            RO_REQP.put()
         || RO_REQP.RO_REQN:=RO_REQN.ref();
            RO_REQP.RO_REQC:=RO_REQR.RO_REQC;
            RO_REQP.RO_REQI:=RO_REQP.RO_REQI;
            RO_REQP.VAL:={? _new<>'' || _new || _val ?};
            RO_REQP.add()
         ?};
         RO_REQP.cntx_pop();
         RO_REQP.next()
      !}
   ?};
   RO_REQP.cntx_pop()
?}


\ar_ro_reqp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Rekord po okna WER tabeli RO_REQP
::----------------------------------------------------------------------------------------------------------------------
_ret:='';
_ref:=RO_REQP.ref();
RO_REQP.cntx_psh();
RO_REQP.index('UNIQUE'); RO_REQP.prefix(RO_REQR.RO_REQN,RO_REQR.RO_REQC,RO_REQP.RO_REQI);
{? RO_REQP.first() & (-menu_txt()<>'popraw' | RO_REQP.ref()<>_ref)
|| FUN.info('Istnieje pozycja dla identyfikatora: %1.'@ [RO_REQP.RO_REQI().DESC]);
   _ret:='RO_REQI'
?};
RO_REQP.cntx_pop();
_ret


\ro_reqn_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Akceptacja korekty wprowadzonych danych
::   WE: _a - 1-akceptacja 0-anulowanie akceptacji
::----------------------------------------------------------------------------------------------------------------------
RO_REQN.get();
{? 'NT'*RO_REQN.STATUS<=0
|| FUN.info('Nie można już zmienić statusu odpowiedzi.'@)
|| _ok:=1;
   {? RO_REQN.STATUS='N'
   || RO_REQR.cntx_psh();
      RO_REQR.index('RO_REQN'); RO_REQR.prefix(RO_REQN.ref());
      {? RO_REQR.first()
      || {!
         |? _ok:=RO_REQR.RES_DESC<>'';
            _ok & RO_REQR.next()
         !}
      ?};
      RO_REQR.cntx_pop()
   ?};
   {? _ok=0
   || FUN.info('Nie udzielono odpowiedzi dla wszystkich celów.'@)
   |? RO_REQN.STATUS='N' &
      (_pyt:=FUN.choice('Wybierz rodzaj czynności?'@,1,'Akceptuj'@,'Aktualizuj odpowiedź'@))
      |
      RO_REQN.STATUS='T' &
      (_pyt:=FUN.ask('Czy wycofać akceptację odpowiedzi?'@))
   || {? _pyt=1
      || RO_REQN.cntx_psh();
         _ref:={? RO_REQN.STATUS='N' & (RO_REQN.next() | RO_REQN.prev()) || RO_REQN.ref() || null ?};
         RO_REQN.cntx_pop();
         RO_REQN.get();
         RO_REQN.cntx_psh();
         RO_REQN.prefix();
         RO_REQN.STATUS:={? RO_REQN.STATUS='N' || 'T' || 'N' ?};
         {? RO_REQN.STATUS='T'
         || RO_REQN.DATA_EXE:=date();
            RO_REQN.TIME_EXE:=time();
            RO_REQN.USER_EXE:=OPERATOR.USER().KOD
         || RO_REQN.DATA_EXE:=date(0,0,0);
            RO_REQN.TIME_EXE:=time(0,0,0);
            RO_REQN.USER_EXE:=''
         ?};
         RO_REQN.put();
         RO_REQN.cntx_pop();
         {? _ref<>null || RO_REQN.seek(_ref) ?}
      |? _pyt=2
      || RO_REQP.cntx_psh();
         RO_REQP.index('UNIQUE');
         RO_REQZ.cntx_psh();
         RO_REQZ.index('RO_REQR');
         RO_REQR.cntx_psh();
         RO_REQR.index('RO_REQN'); RO_REQR.prefix(RO_REQN.ref());
         {? RO_REQR.first()
         || {!
            |? RO_REQP.prefix(RO_REQN.ref(),RO_REQR.ref());
               {? RO_REQP.first() || {! |? RO_REQP.del !} ?};
               RO_REQZ.prefix(RO_REQR.ref());
               {? RO_REQZ.first() || {! |? RO_REQZ.del !} ?};
               RO_REQR.next()
            !}
         ?};
         RO_REQR.cntx_pop();
         RO_REQZ.cntx_pop();
         RO_REQP.cntx_pop();
         _typ_info:=exec('find_ro_reqt','ro_req','PERSONAL_DATA_INFO');
         exec('ws_proc1','ro_ws',_typ_info)
      ?}
   ?}
?}


\bm_ro_reqr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Przed popraw okna RO_REQR
::----------------------------------------------------------------------------------------------------------------------
{? RO_REQN.STATUS<>'N'
|| FUN.info('Nie można poprawić zaakeptowanej odpowiedzi.'@)
|? RO_REQR.sel_size()
|| {? var_press('gr_reqr')>0
   || RO_REQR.RES_CODE:=gr_reqr.RES_CODE;
      RO_REQR.RES_DESC:=gr_reqr.RES_DESC;
      RO_REQR.put()
   ?}
|| {? RO_REQR.edit("exec('ar_ro_reqr','rodo')")
   || RO_REQR.put()
   ?}
?}


\ar_ro_reqr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.52]
:: OPIS: Rekord po tabeli RO_REQR
::----------------------------------------------------------------------------------------------------------------------
{? RO_REQR.RES_DESC=''
|| FUN.info('Nie podano opisu.'@); 'RES_DESC'
|| ''
?}


\gbm_ro_reqr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Przed akcją grupową poprawiania odpowiedzi
::----------------------------------------------------------------------------------------------------------------------
{? RO_REQN.STATUS<>'N'
|| FUN.info('Nie można poprawić zaakeptowanej odpowiedzi.'@)
|| RO_REQR.win_edit('RED');
   {? RO_REQR.edit("exec('ar_ro_reqr','rodo')")
   || gr_reqr:=obj_new('RES_CODE','RES_DESC');
      gr_reqr.RES_CODE:=RO_REQR.RES_CODE;
      gr_reqr.RES_DESC:=RO_REQR.RES_DESC;
      1
   ?}
?}


\gam_ro_reqr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Po akcji grupowej poprawiania odpowiedzi
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('gr_reqr')


\ro_reqn_zakres
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Akcja Zakres okna WER tabeli RO_REQN
::----------------------------------------------------------------------------------------------------------------------
ron_zak:=~ron_zak;
exec('ro_reqn_prfx','rodo')


\br_ro_reqr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Rekord przed okna WER tabeli RO_REQR
::----------------------------------------------------------------------------------------------------------------------
{? RO_REQR.RES_CODE=-1
|| ''
|| Color.fnd_kol('RO_REQR#01#'+(('000'+$RO_REQR.RES_CODE)+3))
?}


\ro_reqz_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Akcja załączniki okna WER tabeli RO_REQR
::----------------------------------------------------------------------------------------------------------------------
RO_REQZ.index('RO_REQR'); RO_REQZ.prefix(RO_REQR.ref());
RO_REQZ.win_sel('WER');
RO_REQZ.select(,,,{? RO_REQN.STATUS<>'N' || 'd:d' || '' ?})


\ro_reqz_show
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Prezentuje załącznik
::----------------------------------------------------------------------------------------------------------------------
exec('bl_view','#blob',RO_REQZ,'FILE')


\ro_reqz_save
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Zapisuje załącznik
::----------------------------------------------------------------------------------------------------------------------
exec('bl_save','#blob',RO_REQZ,'FILE')


\save_served
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.52]
:: OPIS: Czy zapisywać obsłużone żądania z RODO Utility?
::   WY: 1-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
0


\br_ro_reqn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [18.22]
:: OPIS: Rekord przed okna tabeli RO_REQN
::----------------------------------------------------------------------------------------------------------------------
{? ron_zak=2
|| RO_REQN.actions_grayed('WER','ZAN:Z')
|| _gray:='';
   {? 'TN'*RO_REQN.STATUS=0
   || _gray:='AN'
   |? RO_REQN.STATUS='N'
   || _gray:='N'
   || _gray:='A'
   ?};
   RO_REQN.actions_grayed('WER',_gray)
?};
~~


\import_cfg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [18.22]
:: OPIS: Formuła importu konfiguracji.
::   WE: [_a] [NUMBER] - Przetwarzanie wsadowe (bez dialogów i komunikatów): [0*/1]
::   WY: Wynik importu: 0/1.
::  OLD: \ro_cfg_czytaj_b/ro_cfg.fml
::----------------------------------------------------------------------------------------------------------------------
_batch:=var_pres('_a')=type_of(0) & _a;

{? ~_batch & ~FUN.ask('Czy na pewno odtworzyć zawartość na podstawie archiwum i ustawień domyślnych?'@)
|| return(0)
?};

_ok:=1;
: domyślna konfiguracja
exec('init_slo','ro_req',1);
: odczyt formuł
_name:=RO_FML.name()+'.txt';
{? fexists(_name,1)<>0
|| RO_FML.cntx_psh();
   RO_FML.clear();
   RO_FML.index('SYMBOL');
   _ok:=RO_FML.import(_name,1,,,,,
      'RODZAJ',,1,,
      'SYMBOL',,2,,
      'OPIS',,3,,
      'UWAGI',,4,,
      'FORMULA',,5,
   );
   RO_FML.cntx_pop()
|? ~_batch
|| FUN.emsg('Plik "%1" nie istnieje.'@[_name])
?};
{? _ok<=0
|| return(0)
?};
: odczyt konfiguracji
_name:=RO_CFG.name()+'.txt';
{? fexists(_name,1)<>0
|| RO_FML.cntx_psh();
   RO_FML.index('SYMBOL');
   RO_FML.prefix();
   RO_CFG.clear();
   RO_CFG.erase();
   RO_CFG.index('NUMER');
   _ok:=RO_CFG.import(_name,1,,,,,
      'RO_REQC','CODE',1,,
      'KAT',,2,,
      'KOMENT',,3,,
      'FML_WCEL','SYMBOL',4,,
      'FML_SZUK','SYMBOL',5,,
      'FML_INFO','SYMBOL',6,,
      'FML_RET','SYMBOL',7,,
      'FML_ZAP','SYMBOL',8,,
      'FML_ZGO','SYMBOL',9,
   );
   _fnum:=RO_CFG.fld_num();
   _loop:=RO_CFG.first();
   {!
   |? _loop
   |! _mod:=0;
      {! _fi:=1.._fnum
      |! {? RO_CFG.fld_join(_fi)='RO_FML'
         || _acr:=RO_CFG.fld_acr(_fi);
            {? ($('RO_CFG.'+_acr+'().RODZAJ'))()<>_acr
            || {? RO_FML.find_key(_acr,($('RO_CFG.'+_acr+'().SYMBOL'))())
               || ($('RO_CFG.'+_acr+':=_a'))(RO_FML.ref());
                  _mod+=1
               ?}
            ?}
         ?}
      !};
      {? _mod<>0
      || RO_CFG.put()
      ?};
      _loop:=RO_CFG.next()
   !};
   RO_CFG.first();
   RO_FML.cntx_pop()
|? ~_batch
|| FUN.emsg('Plik "%1" nie istnieje.'@[_name])
?};

{? ~_batch
|| FUN.info('Zakończono odczyt archiwum.'@)
?};

_ok

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 4d9ad652fab4c42a974f2399a1ac1d34137ea29be185081084643ed13bba52bacb8aaef59097517ac324de570ff75a917bb556a54cb582e4bf38691e351c0d37f1a905c1e0d700c467514459b56a189e99ed80f6c471383e0739922a2178e6a6c49c939c9898246d31629f2f77eb156f9b8ed3657eec97d057f780aa3e8d54e4
