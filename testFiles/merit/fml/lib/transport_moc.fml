:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: transport_moc.fml
:: Utworzony: 06.09.2019
:: Autor: AWI
:: Systemy:
::======================================================================================================================
:: Zawartość:
::======================================================================================================================


\tr_moc_generuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: generuje moce tranportowe
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
TR_Z.NOSAT:=TR_Z.NOSUN:=TR_Z.NOHOL:=0;
TR_MOC.cntx_psh();
TR_MOC.index('OD');
TR_MOC.prefix();
TR_MOC.win_edit('GEN');
{? TR_MOC.edit("exec('tr_moc_gen_chk','transport_moc')")
||
:: zmienne pomocnicze
   exec('declare','kalendarz');
   _kalend:=obj_new(@.CLASS.KALEND);
:: parametry
   _oddz:=TR_MOC.ODDZ;
   _rr:=TR_MOC.RR;
   _rm:=TR_MOC.RM;
   _rt:=TR_MOC.RT;
   _data:=TR_MOC.D;
   _tr_rodz:=TR_MOC.TR_RODZ;
   _pil_szt:=TR_MOC.PIL_SZT;
:: ustalenie okresu od do
   _od:=date(0,0,0);
   _do:=date(0,0,0);
   {? _data<>date(0,0,0)
   ||
      _od:=_data;
      _do:=_data

   |? _rt<>0
   ||
      _dc:=date(_rr,12,31);
      _ty:=exec('NumberOfWeek','#datetime',_dc);
      {!
      |? _ty=1
      |!
         _dc-=1;
         _ty:=exec('NumberOfWeek','#datetime',_dc)
      !};
      _dc:=date(_rr-1,12,31)+((_rt/_ty)*(_dc-date(_rr-1,12,31)))$0;
      _ty:=exec('NumberOfWeek','#datetime',_dc);
      _od:=_dc;
      {!
      |? _ty=_rt
      |!
         _od-=1;
         _ty:=exec('NumberOfWeek','#datetime',_od)
      !};
      _do:=_od+7;
      _od+=1

   |? _rm<>0
   ||
      _od:=date(_rr,_rm,1);
      _do:=date(_rr,_rm,0)

   |? _rr<>0
   ||
      _od:=date(_rr,1,1);
      _do:=date(_rr,12,0)
   ?};
   {? _kalend.set_cal('standard',_rr)=0
   ||
      ~~

   |? _od<>date(0,0,0) & _do<>date(0,0,0)
   ||
      _dc:=_od;
      {!
      |? _dc<=_do
      |!
         _prgs:=int(100*((_dc-_od+1)/(_do-_od+1)));
         progress(_prgs,'\nTrwa przetwarzanie (%1\%)\n'@[$_prgs],'Generowanie mocy przerobowych'@);
         _czy_il:=1;
         {? TR_MOC.find_key(_oddz,_dc,_tr_rodz)
         ||
            ~~
         ||
            TR_MOC.blank();
            TR_MOC.ODDZ:=_oddz;
            TR_MOC.TR_RODZ:=_tr_rodz;
            TR_MOC.D:=_dc;
            exec('tr_moc_d_ae','transport_moc',_dc,_kalend);
            {? _czy_il
            ||
               TR_MOC.PIL_SZT:={? TR_MOC.D_RODZ='S' & TR_Z.NOSAT || 0
                               |? TR_MOC.D_RODZ='N' & TR_Z.NOSUN || 0
                               |? TR_MOC.D_RODZ='Ś' & TR_Z.NOHOL || 0
                               || _pil_szt
                               ?}
            ?};
            {? TR_MOC.add()
            ||
:: aktualizacja wykonania
               exec('use','transport_moc')
            ?}
         ?};
         _dc+=1
      !};
      prgs_clr()
   ?}
?};
TR_MOC.cntx_pop()


\tr_moc_gen_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: sprawdza poprawność wypełnienia parametrów generowania mocy transportowych
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TR_MOC.ODDZ=''
||
   FUN.info('Podaj oddział.'@);
   'ODDZ'

|? 1999>TR_MOC.RR
||
   FUN.info('Podaj rok (nie mniejszy niż 1999).'@);
   'RR'

|? 0>TR_MOC.RM | TR_MOC.RM>12
||
   FUN.info('Podaj numer miesiąca lub 0 jeśli moc\ngenerowana jest na okres inny niż miesiąc.'@);
   'RM'

|? (_ty:=exec('lastWeekOfYear','transport_moc',TR_MOC.RR); 0>TR_MOC.RT | _ty & TR_MOC.RT>_ty)
||
   FUN.info('Tydzień w roku %1 nie może być mniejszy od 1 i większy od %2.'
      '\nNależy wpisać 0 jeśli moc generowana jest na okres inny niż tydzień.'@[form(TR_MOC.RR,,,'99'),form(_ty,,,'99')]);
   'RT'

|? TR_MOC.RR=0 & TR_MOC.RT
||
   FUN.info('Podano tydzień realizacji.'@+'\n'+'Należy dodatkowo podać rok realizacji.'@);
   'RR'

|? TR_MOC.RR=0 & TR_MOC.RM
||
   FUN.info('Podano miesiąc realizacji.'@+'\n'+'Należy dodatkowo podać rok realizacji.'@);
   'RR'

|? TR_MOC.TR_RODZ=null()
||
   FUN.info('Należy podać kategorię transportu.'@);
   'TR_RODZ'

|? TR_MOC.RR=0 & TR_MOC.RM=0 & TR_MOC.RT=0 & TR_MOC.D=date(0,0,0)
||
   FUN.info('Należy podać okres generacji mocy transportowych.'@);
   'RR'
||
   ''
?}


\tr_moc_d_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: po redakcji TR_MOC.D
::   WE: [_a] - data
::       [_b] - kalendarz
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_dc:={? var_pres('_a')=type_of(date()) || _a || fld() ?};
_kalend:=
   {? var_pres('_b')>0 & var_pres('_b')=var_pres('KALEND',@.CLASS)
   || _b
   || exec('declare','kalendarz');
      obj_new(@.CLASS.KALEND)
   ?};
{? _dc<>date(0,0,0)
||
   _rr:=_dc~1;
   _d_naz:=TR_MOC.D$7;
   _d_naz:=_d_naz*','+_d_naz-1;
   _d_rodz:='R';
   _kalend.set_cal('standard',_rr);
   _work:=_kalend.w_days(_dc,_dc);
   {? _dc~4=6  || _czy_il:=0; _d_rodz:='S'
   |? _dc~4=7  || _czy_il:=0; _d_rodz:='N'
   |? _work=0  || _czy_il:=0; _d_rodz:='Ś'
   ?};
   TR_MOC.D_RODZ:=_d_rodz;
   TR_MOC.D_NAZ:=_d_naz;
   TR_MOC.RR:=_rr;
   TR_MOC.RM:=_dc~2;
   TR_MOC.RT:=exec('NumberOfWeek','#datetime',_dc);
   TR_MOC.RD:=_dc~3
?};
1


\tr_moc_d_rodz_bd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: przed wyświetleniem TR_MOD.D_RODZ
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TR_MOC.D_RODZ='N' |  TR_MOC.D_RODZ='S'
|| '0:0:0,192:192:192'
|? TR_MOC.D_RODZ='Ś'
|| '0:0:0,255:128:128'
|| ''
?}


\use
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: nalicza wykorzystanie mocy transportowych
::   WE: _a - uchwyt do tabeli wykorzystania mocy transportowych
::       _b - 0/1 - aktualizować pola w tabeli TR_MOC
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Tab:={? var_pres('_a')=type_of(FIRMA) || _a || ~~ ?};
_put:={? var_pres('_b')=type_of(0) || _b || 1 ?};

_zil_szt:=TR_MOC.ZIL_SZT;
_wil_szt:=TR_MOC.WIL_SZT;
_status:='';
TR_MOC.ZIL_SZT:=exec('tr_nzl_count_moc','transport_zlec',TR_MOC.ref(),_status,_Tab);
TR_MOC.ZIL_SZT+=exec('tr_log_count_moc','transport_zlec',TR_MOC.ref(),_Tab);
_status:=exec('tr_nzl_status_zrealizowane','transport_zlec');
TR_MOC.WIL_SZT:=exec('tr_nzl_count_moc','transport_zlec',TR_MOC.ref(),_status,_Tab);
{? _put
      &
   (
   _zil_szt<>TR_MOC.ZIL_SZT
      |
   _wil_szt<>TR_MOC.WIL_SZT
   )
||
   TR_MOC.put()
?}


\use_update
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: aktualizuje wykorzystanie mocy transportowych od daty bieżącej do ostatniej daty w TR_MOC
::   WE: _a - oddział
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_oddz:=_a;
TR_MOC.cntx_psh();
TR_MOC.index('OD');
TR_MOC.prefix(_oddz,);
_loop:=TR_MOC.find_key(date());
{!
|? _loop
|!
   exec('use','transport_moc');
   _loop:=TR_MOC.next()
!};
TR_MOC.cntx_pop()


\jest_moc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: sprawdza czy są moce transportowe dla _c
::   WE: _a - kategoria transportu
::       _b - data
::       _c - ilość w szt do transportu
::       _d - oddział
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_tr_rodz:=_a;
_date:=_b;
_il_szt:=_c;
_oddz:=_d;

_result:=1;

TR_MOC.cntx_psh();
TR_MOC.index('OTR_RODZ');
TR_MOC.prefix(_oddz,_tr_rodz,_date);
{? TR_MOC.first() & {? TR_MOC.TR_RODZ<>null() || TR_MOC.TR_RODZ().CTRL='T' || 1 ?}
||
   exec('use','transport_moc');
   _result:=TR_MOC.PIL_SZT>=(TR_MOC.ZIL_SZT+_il_szt)
?};
TR_MOC.cntx_pop();
_result


\tr_moc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: zwraca TR_MOC.ref jeśli są wystarczające moce transportowe
::   WE: _a - kategoria transportu
::       _b - data
::       _c - ilość w szt do transportu
::       _d - oddział
::   WY: null()/TR_MOC.ref()
::----------------------------------------------------------------------------------------------------------------------
_tr_rodz:=_a;
_date:=_b;
_il_szt:=_c;
_oddz:=_d;

_result:=null();

TR_MOC.cntx_psh();
TR_MOC.index('OTR_RODZ');
TR_MOC.prefix(_oddz,_tr_rodz,_date);
{? TR_MOC.first()
||
   exec('use','transport_moc');
   {? TR_MOC.PIL_SZT>=(TR_MOC.ZIL_SZT+_il_szt)
   ||
      _result:=TR_MOC.ref()
   ?}
?};
TR_MOC.cntx_pop();
_result


\tr_moc_il
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: zwraca dostępną moc przerobową w szt
::   WE: _a - kategoria transportu
::       _b - data
::       _c - oddział
::   WY: ilość
::----------------------------------------------------------------------------------------------------------------------
_tr_rodz:=_a;
_date:=_b;
_oddz:=_c;

_result:=0;

TR_MOC.cntx_psh();
TR_MOC.index('OTR_RODZ');
TR_MOC.prefix(_oddz,_tr_rodz,_date);
{? TR_MOC.first()
||
   _result:=TR_MOC.PIL_SZT-TR_MOC.ZIL_SZT
?};
TR_MOC.cntx_pop();
_result


\data_transportu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: wybór daty transportu
::   WE: _a - formuła
::       _b - kategoria transportu
::       _c - oddział
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ff:=_a;
_tr_rodz:=_b;
_oddz:=_c;

_date:=($_ff)();
{? var_pres('_date')<>type_of(date()) | _date=date(0,0,0) || _date:=date() ?};

_result:=-1;
{? Plugin.exists('TRANSPORT_MOC_001')
||
   _result:=Plugin.run('TRANSPORT_MOC_001',_ff)
?};

{? _tr_rodz & exec('FindAndGet','#table',TR_RODZ,_tr_rodz,,"CTRL='N'",0) || _tr_rodz:=null() ?};

{? _result=-1
||
   _result:=0;
:: domyślne działanie bo wtyczka nie ma formuły
   exec('use_update','transport_moc',_oddz);

   TR_MOC.cntx_psh();
   {? _tr_rodz
   ||
      TR_MOC.index('OTR_RODZ');
      TR_MOC.prefix(_oddz,_tr_rodz)
   ||
      TR_MOC.index('OD');
      TR_MOC.prefix(_oddz,)
   ?};
   TR_MOC.find_key(_date);
   TR_MOC.win_sel('SLO');
   {? TR_MOC.select(,1,1)
   ||
      ($(_ff+':=_a'))(TR_MOC.D);
      _result:=1
   ?};
   TR_MOC.cntx_pop();
   _result

|? _result=1
||
:: wtyczka zwróciła 1
   ($_ff)()
?}


\tr_moc_generuj_wywo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [19.42]
:: OPIS: Generowanie mocy przerobowych transportu
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LTR_MOC_DMOC';
_params.AKCJA:='Generuj';
_params.PROC_START:='T';
exec('mp_run','#b__box',_params);
~~


\use_tab
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: tabela wykorzystania mocy transportowych
::   WE:
::   WY: uchwyt do tabeli
::----------------------------------------------------------------------------------------------------------------------
tab_tmp(3
   ,'STATUS'   ,'STRING[1]'   ,'Status'
   ,'TR_RODZ'  ,'STRING[20]'  ,'Kategoria transportu'
   ,'SYM'      ,'STRING[20]'  ,'Symbol'
   ,'DOK'      ,'STRING[100]' ,'Dokument'
   ,'NAZ_P'    ,'STRING[150]' ,'Kontrahent'
   ,'MIASTO'   ,'STRING[30]'  ,'Miasto'
   ,'UL'       ,'STRING[150]' ,'Ulica'
   ,'NUMER'    ,'STRING[40]'  ,'Numer'
   ,'RODZ'     ,'STRING[1]'   ,'Rodzaj'
   ,'KTM'      ,'STRING[50]'  ,'Indeks'
   ,'IL_SZT'   ,'REAL','Sztuki'
   ,'LOG'      ,'STRING[255]','Log')


\use_tab_erase
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: usuwa zawartość tabeli wykorzystania mocy transporotwych
::   WE: _a - uchwyt do tabeli wykorzystania mocy transportowych
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Tab:=_a;
_Tab.erase();
~~


\use_tab_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: dodaje zapis w tabeli wykorzystania mocy transporotwych
::       UWAGA: przed wywołaniem funkcji należy podczytać TR_NZL i dodatkowo TR_LOG jeśli w _b=TR_LOG.ref()
::   WE: _a - uchwyt do tabeli wykorzystania mocy transportowych
::       _b - TR_NZL.ref()/TR_LOG.ref() - źródłowy zapis
::       _c - status dyspozycji
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_Tab:=_a;
_src:=_b;
_status:=_c;

_Tab_src:=ref_tab(_src);
_log:='';
_il_szt:=TR_NZL.IL_SZT;

{? _Tab_src=TR_LOG
||
   _log:=TR_LOG.OPIS;
   _il_szt:=TR_LOG.IL_SZT
?};
_Tab.blank();
_Tab.STATUS:={? TR_NZL.STATUS=_status || 'W' || 'Z' ?};
_Tab.TR_RODZ:=TR_NZL.TR_RODZ().KOD;
_Tab.SYM:=TR_NZL.SYM;
_Tab.DOK:=TR_NZL.DOK;
_Tab.NAZ_P:=TR_NZL.KH().NAZ_P;
_Tab.MIASTO:=TR_NZL.MIASTO;
_Tab.UL:=TR_NZL.UL;
_Tab.NUMER:=TR_NZL.NUMER;
{? var_pres('LOKAL',_Tab)>0
|| _Tab.LOKAL:=TR_NZL.LOKAL
?};
_Tab.RODZ:=TR_NZL.RODZ;
_Tab.KTM:=TR_NZL.KTM;
_Tab.IL_SZT:=_il_szt;
_Tab.LOG:=_log;
_Tab.add();
~~


\use_tab_refresh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: aktualizuje zawartość tabeli wykorzystania mocy transportowych
::   WE: _a - uchwyt do tabeli wykorzystania mocy transportowych
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Tab:=_a;
exec('use_tab_erase','transport_moc',_Tab);
exec('use','transport_moc',_Tab,0);
~~


\use_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: definiuje okno wertowania tabeli wykorzystania mocy transportowych
::   WE: _a - uchwyt do tabeli wykorzystania mocy transportowych
::       _b - tytuł okienka
::       _c - identyfikator okienka
::   WY: akronim okna
::----------------------------------------------------------------------------------------------------------------------
_Tab:=_a;
_title:=_b;
_ident:=_c;

_wer:=_Tab.mk_sel(_title,,,_ident,,,,,'U');
_Tab.win_fld(_wer,,'TR_RODZ',,,10,,,'Kategoria transportu'@);
_Tab.win_fld(_wer,,'SYM',,,15,,,'Symbol'@);
_Tab.win_fld(_wer,,'DOK',,,10,,,'Dokument'@);
_Tab.win_fld(_wer,,'NAZ_P',,,10,,,'Kontrahent'@);
_Tab.win_fld(_wer,,'MIASTO',,,10,,,'Miasto'@);
_Tab.win_fld(_wer,,'UL',,,10,,,'Ulica'@);
_Tab.win_fld(_wer,,'NUMER',,,10,,,'Numer'@);
_Tab.win_fld(_wer,,'RODZ',,,10,,,'Załadunek'@,,,2,,"'Z'","'R'");
_Tab.win_fld(_wer,,'KTM',,,10,,,'Indeks'@);
_Tab.win_fld(_wer,,'IL_SZT',,,12,,,'Sztuki'@);
_Tab.win_fld(_wer,,'LOG',,,24,,,'Log'@);
:: DRO_TODO_AWI: dodać akcję zwalniania mocy
_wer


\use_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: zwraca uchwyt do zmiennej z tabelę i oknami wertowania wykorzystania mocy transportowych
::   WE:
::   WY: uchwyt do zmiennej nazwanej
::----------------------------------------------------------------------------------------------------------------------
_Tab:=exec('use_tab','transport_moc');

_wer_z:=exec('use_wer','transport_moc',_Tab,'Zlecony transport'@,'tr_wykon_z');
_wer_w:=exec('use_wer','transport_moc',_Tab,'Wykonany transport'@,'tr_wykon_z');

_result:=obj_new('TAB','WER_Z','WER_W');
_result.TAB:=_Tab;
_result.WER_Z:=_wer_z;
_result.WER_W:=_wer_w;

_result


\lastWeekOfYear
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: ostatni tydzień roku _a
::   WE: _a - rok
::   WY: 0/ostatni tydzień roku
::----------------------------------------------------------------------------------------------------------------------
_rok:=_a;
{? _rok=0 || return(0) ?};
_dc:=date(_rok,12,31);
_ty:=exec('NumberOfWeek','#datetime',_dc);
{!
|? _ty=1
|!
   _dc-=1;
   _ty:=exec('NumberOfWeek','#datetime',_dc)
!};
_ty



\chk_tr_moc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [MW] [19.42]
:: OPIS: kontrola poprawności danych dla TR_MOC przy poprawianiu
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
_wyn:=__CHK.record(TR_MOC,,'PIL_SZT');
{? _wyn=''
|| {? TR_MOC.PIL_SZT<0
   || FUN.info('Planowana ilość nie może być ujemna.'@);
   _wyn:='PIL_SZT'
   |? TR_MOC.PIL_SZT<TR_MOC.ZIL_SZT
   || FUN.info('Planowana ilość nie może mniejsza od zleconej ilości.'@);
   _wyn:='PIL_SZT'
   ?}
?};
_ret:=(_wyn='');
_ret


\tr_moc_oddz_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: przed redakcją oddziału dla dyspozycji transportu
::----------------------------------------------------------------------------------------------------------------------
{? exec('sel_upr','users','ODDZ','KOD') || TR_MOC.ODDZ:=ODDZ.KOD ?};
~~


\tr_moc_oddz_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [19.42]
:: OPIS: po redakcji oddziału dla dyspozycji transportu
::----------------------------------------------------------------------------------------------------------------------
{? form(TR_MOC.ODDZ)=''
||
   FUN.info('Należy wskazać odział, którego dotyczy dana dyspozycja transportu.'@);
   0

|? form(TR_MOC.ODDZ)<>'' & exec('FindInSet','#table','ODDZ','KOD2',TR_MOC.ODDZ,TR_MOC.ODDZ)=null()
||
   FUN.info('Nie ma odziału o kodzie %1.'@[TR_MOC.ODDZ]);
   0
||
   1
?}


\plan_tran
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Wybór dat dla transportu wg aktualnego jego stanu
::   WE: _a - oddział
::----------------------------------------------------------------------------------------------------------------------
_oddz:=_a;
VAR_DEL.delete('__dttr','__zttr','__wdtr','__wztr','__maxton','__sday','__wday');

__maxton:=0;
__sday:=tab_tmp(1,'DT','DATE','','SUM','REAL','','IL_TR','INTEGER','');
__zttr:=exec('genZas','transport_moc');
__dttr:=exec('genWeek','transport_moc',_oddz,date(),__zttr);

__wdtr:=__dttr.mk_sel('Zajętość zasobów'@,'P',0,'#pltr_zaj',,,,,'U','T');
__dttr.win_fld(__wdtr,,'DT',,,10,,1,'Data'@);
__dttr.win_fld(__wdtr,,'RT',,,-4,,1,'Tydzień'@);
__dttr.win_fld(__wdtr,,'OBCY',,,,,,'Obcy'@,,'Obcy'@,2,,"'T'","'N'");
__dttr.win_fld(__wdtr,,'KOD',,,10,,1,'Kod zasobu'@);
__dttr.win_fld(__wdtr,,'NAZ',,,20,,1,'Opis zasobu'@);
__dttr.win_fld(__wdtr,,'IL_T',,,10,3,1,'Waga [t]'@);
__dttr.win_fld(__wdtr,,'IL_M3',,,10,3,1,'Objętość [m3]'@);
__dttr.win_fld(__wdtr,,'IL_SZT',,,6,,1,'Sztuki'@);
__dttr.win_fld(__wdtr,,'IL_TR',,,4,,1,'Tras'@);

__dttr.win_act(__wdtr,0,'Formuła','&Wybierz'@@,,'Wybór daty i zasobu'@,"sel_exit()",,1,,,,'W');
__dttr.win_btn(__wdtr,'text=%1, panel=right, align=begin'['&Wybierz'@],'menu:W',,,0,,,'noempty');
__dttr.win_act(__wdtr,0,'Formuła','&Poprzedni'@@,,'Poprzedni tydzień'@,"exec('prevWeek','transport_moc')",,,,,,'P');
__dttr.win_btn(__wdtr,'text=%1, panel=bottom, align=begin'['&Poprzedni'@],'menu:P',,,0,,,'noempty');
__dttr.win_act(__wdtr,0,'Formuła','&Następny'@@,,'Następny tydzień'@,"exec('nextWeek','transport_moc')",,,,,,'N');
__dttr.win_btn(__wdtr,'text=%1, panel=bottom, align=begin'['&Następny'@],'menu:N',,,0,,,'noempty');
__dttr.win_act(__wdtr,0,'Formuła','&Legenda'@@,,,"exec('legenda','color','__dttr#01')",,,,,,'L');
__dttr.win_act(__wdtr,0,'Rekord',,,,"exec('rekprzed','color','__dttr#01')");
__dttr.win_act(__wdtr,0,'Szukaj');
__dttr.win_act(__wdtr,0,'Kolejność');
__dttr.win_sel(__wdtr);

__wztr:=__zttr.mk_sel('Zasoby'@,'P',0,'#pltr_zas',,,,,'U','T');
__zttr.win_fld(__wztr,,'OBCY',,,,,,'Obcy'@,,'Obcy'@,2,,"'T'","'N'");
__zttr.win_fld(__wztr,,'KOD',,,10,,1,'Kod zasobu'@);
__zttr.win_fld(__wztr,,'NAZ',,,20,,1,'Opis zasobu'@);
__zttr.win_act(__wztr,0,'Szukaj');
__zttr.win_act(__wztr,0,'Kolejność');
__zttr.win_sel(__wztr);

__wday:=__sday.mk_sel('Zajętość wg dni [t]'@,'P',0,'#pltr_day',,,,,'U','T');
__sday.win_fld(__wday,,'DT',,,10,,1,'Data'@);
__sday.win_fld(__wday,,'SUM',,,14,3,1,'Suma waga [t]'@);
__sday.win_fld(__wday,,'IL_TR',,,10,,1,'Ilość tras'@);
__sday.win_act(__wday,0,'Szukaj');
__sday.win_act(__wday,0,'Kolejność');
__sday.win_sel(__wday);

_win_grp:=__dttr.grp_make('Aktualna zajętość zasobów transportowych'@,"exec('init_dttr','transport_moc')",'#pltr_all');
__dttr.grp_sel(_win_grp,__dttr,__wdtr,
    ,"exec('pd_dttr','transport_moc')",,,15
    ,"exec('pr_dttr','transport_moc')",,,,'maximized_with_title','DTTR',1);
__dttr.grp_splt(_win_grp,'panel0','vertical','zasoby',',60%');
__dttr.grp_sel(_win_grp,__zttr,__wztr,
    ,"exec('pd_zttr','transport_moc')",,,20
    ,"exec('pr_zttr','transport_moc')",,,,'maximized_with_title','ZTTR');
__dttr.grp_splt(_win_grp,'zasoby','horizontal','sumton');
__dttr.grp_sel(_win_grp,__sday,__wday,
    ,"",,,7
    ,"",,,,'maximized_with_title','SDAY');

__dttr.win_sel(_win_grp);
__dttr.prefix();
__dttr.first();
{? __dttr.select()
|| __dttr.get();
   TR_NZL.DT:=__dttr.DT;
   {? __dttr.OBCY='N'
   || TR_NZL.WLASNY:='T';
      TR_NZL.TR_ZEWN:=null();
      TR_NZL.POJAZD:=exec('FindAndGet','#table',POJAZDY,__dttr.SQL,,,null())
   |? __dttr.OBCY='T'
   || TR_NZL.WLASNY:='N';
      TR_NZL.TR_ZEWN:=exec('FindAndGet','#table',TR_ZEWN,__dttr.SQL,,,null());
      TR_NZL.POJAZD:=null()
   ?}
?};
VAR_DEL.delete('__dttr','__zttr','__wdtr','__wztr','__maxton','__sday','__wday');
''


\genZas
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Analiza danych dla transportu - pobranie zasobów
::   WY: tablica zasobów
::----------------------------------------------------------------------------------------------------------------------
_res:=tab_tmp(2,'OBCY','STRING[1]',''
       ,'KOD','STRING[20]',''
       ,'NAZ','STRING[60]',''
       ,'SQL','STRING[16]','');
:: zasoby obce
TR_ZEWN.cntx_psh();
TR_ZEWN.index('KOD');
{? TR_ZEWN.first()
|| {!
   |? _res.prefix();
      _res.blank();
      _res.OBCY:='T';
      _res.KOD:=TR_ZEWN.KOD;
      _res.NAZ:=TR_ZEWN.NAZ;
      _res.SQL:=$TR_ZEWN.ref();
      _res.add(1);
      TR_ZEWN.next()
   !}
?};
TR_ZEWN.cntx_pop();
:: zasoby własne
POJAZDY.cntx_psh();
POJAZDY.index('NAZ');
POJAZDY.prefix(REF.FIRMA,'T');
{? POJAZDY.first()
|| {!
   |? _res.prefix();
      _res.blank();
      _res.OBCY:='N';
      _res.KOD:=POJAZDY.NRREJ;
      _res.NAZ:=POJAZDY.NAZ;
      _res.SQL:=$POJAZDY.ref();
      _res.add(1);
      __maxton+=POJAZDY.DOPL;
      POJAZDY.next()
   !}
?};
POJAZDY.cntx_pop();
_res.prefix();
{? _res.size()
|| _res.prefix();
   _res.blank();
   _res.OBCY:='A';
   _res.KOD:='..';
   _res.NAZ:='<Wszystkie>';
   _res.SQL:='';
   _res.add(1);
   _res.prefix();
   _res.blank();
   _res.OBCY:='B';
   _res.KOD:='[Do planowania]';
   _res.NAZ:='<Niezaplanowane dyspozycje>';
   _res.SQL:='tr_nzl';
   _res.add(1)
?};
_res


\genWeek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Analiza danych dla transportu
::   WE: [_a] - oddział
::       [_b] - od daty
::       [_c] - tabela zasobów
::       [_d] - tabela zajętości
::   WY: tabela danych
::----------------------------------------------------------------------------------------------------------------------
_oddz:=_a;
_oddaty:={? var_pres('_b')=type_of(date(0,0,0)) & _b>=date() || _b || date() ?};
_dodaty:=_oddaty+6;
_rr:=_oddaty~1;
{? (_dodaty~1)<>_rr || _dodaty:=date(_rr,12,31) ?};
_tab:=_c;

{? var_pres('__sday')=type_of(FIRMA)
|| __sday.prefix();
   {? __sday.first() || {! |? __sday.del() !} ?}
?};
{? var_pres('_d')=type_of(FIRMA)
|| _res:=_d;
   _res.f_clear();
   _res.prefix();
   {? _res.first() || {! |? _res.del() !} ?}
|| _res:=tab_tmp(4,'DT','DATE',''
          ,'OBCY','STRING[1]',''
          ,'KOD','STRING[20]',''
          ,'SQL','STRING[16]',''
          ,'NAZ','STRING[40]',''
          ,'RR','INTEGER',''
          ,'RM','INTEGER',''
          ,'RT','INTEGER',''
          ,'RD','INTEGER',''
          ,'D_RODZ','STRING[1]',''
          ,'D_NAZ','STRING[20]',''
          ,'IL_SZT','INTEGER',''
          ,'IL_T','REAL',''
          ,'IL_M3','REAL',''
          ,'IL_TR','INTEGER',''
          ,'DOPL','REAL','')
?};

:: zmienne pomocnicze
exec('declare','kalendarz');
_kalend:=obj_new(@.CLASS.KALEND);

{? _kalend.set_cal('standard',_rr)=0
|| ~~
|| TR_NZL.cntx_psh();
   _ll:=_dodaty-_oddaty;
   {! _ii:=0.._ll
   |! _dt:=_oddaty+_ii;
      _d_naz:=_dt$7;
      _d_naz:=_d_naz*','+_d_naz-1;
      _d_rodz:='R';
      _kalend.set_cal('standard',_rr);
      _work:=_kalend.w_days(_dt,_dt);
      {? _dt~4=6  || _d_rodz:='S'
      |? _dt~4=7  || _d_rodz:='N'
      |? _work=0  || _d_rodz:='Ś'
      ?};
      _rm:=_dt~2;
      _rt:=exec('NumberOfWeek','#datetime',_dt);
      _rd:=_dt~3;
      _tab.clear();
      {? _tab.first()
      || {!
         |? {? _tab.OBCY<>'A'
            || _res.prefix();
               _res.blank();
               _res.DT:=_dt;
               _res.OBCY:=_tab.OBCY;
               _res.KOD:=_tab.KOD;
               _res.NAZ:=_tab.NAZ;
               _res.SQL:=_tab.SQL;
               _res.D_RODZ:=_d_rodz;
               _res.D_NAZ:=_d_naz;
               _res.RR:=_rr;
               _res.RM:=_rm;
               _res.RT:=_rt;
               _res.RD:=_rd;
               _res.IL_SZT:=0;
               _res.IL_T:=0;
               _res.IL_M3:=0;
               _res.add(1)
            ?};
            _tab.next()
         !}
      ?};
      TR_NZL.index('ODDZDP');
      TR_NZL.prefix(_oddz,_dt);
      {? TR_NZL.first()
      || {!
         |? {? TR_NZL.POJAZD<>null()
            || _obcy:='N';
               _kod:=TR_NZL.POJAZD().NRREJ;
               _naz:=TR_NZL.POJAZD().NAZ;
               _sql:=$TR_NZL.POJAZD;
               _lad:=TR_NZL.POJAZD().DOPL
            || _obcy:='T';
               _kod:=TR_NZL.TR_ZEWN().KOD;
               _naz:=TR_NZL.TR_ZEWN().NAZ;
               _sql:=$TR_NZL.TR_ZEWN;
               _lad:=0
            ?};
            _res.clear();
            _res.prefix(_dt,_obcy,_kod,_sql);
            {? _res.first()
            || _res.IL_SZT+=TR_NZL.IL_SZT;
               _res.IL_T+=TR_NZL.IL_T;
               _res.IL_M3+=TR_NZL.IL_M3;
               _res.IL_TR+=1;
               _res.DOPL:=_lad;
               _res.put(1)
            || _res.blank();
               _res.DT:=_dt;
               _res.OBCY:=_obcy;
               _res.KOD:=_kod;
               _res.NAZ:=_naz;
               _res.SQL:=_sql;
               _res.D_RODZ:=_d_rodz;
               _res.D_NAZ:=_d_naz;
               _res.RR:=_rr;
               _res.RM:=_rm;
               _res.RT:=_rt;
               _res.RD:=_rd;
               _res.IL_SZT:=TR_NZL.IL_SZT;
               _res.IL_T:=TR_NZL.IL_T;
               _res.IL_M3:=TR_NZL.IL_M3;
               _res.DOPL:=_lad;
               _res.IL_TR:=1;
               _res.add(1)
            ?};
            {? _obcy='N'
            || __sday.clear();
               __sday.prefix(_dt);
               {? ~__sday.first()
               || __sday.blank();
                  __sday.DT:=_dt;
                  __sday.SUM:=TR_NZL.IL_T;
                  __sday.IL_TR:=1;
                  __sday.add()
               || __sday.SUM+=TR_NZL.IL_T;
                  __sday.IL_TR+=1;
                  __sday.put()
               ?}
            ?};
            TR_NZL.next()
         !}
      ?};
      TR_NZL.index('ODDZDT');
      TR_NZL.prefix(_oddz,_dt);
      {? TR_NZL.first()
      || {!
         |? {? TR_NZL.TR_NAG=null()
            || {? TR_NZL.POJAZD<>null()
               || _obcy:='N';
                  _kod:=TR_NZL.POJAZD().NRREJ;
                  _naz:=TR_NZL.POJAZD().NAZ;
                  _sql:=$TR_NZL.POJAZD;
                  _lad:=TR_NZL.POJAZD().DOPL
               |? TR_NZL.TR_ZEWN<>null()
               || _obcy:='T';
                  _kod:=TR_NZL.TR_ZEWN().KOD;
                  _naz:=TR_NZL.TR_ZEWN().NAZ;
                  _sql:=$TR_NZL.TR_ZEWN;
                  _lad:=0
               || _obcy:='B';
                  _kod:='[Do planowania]';
                  _naz:='<Niezaplanowane dyspozycje>';
                  _sql:='tr_nzl';
                  _lad:=0
               ?};
               _res.clear();
               _res.prefix(_dt,_obcy,_kod,_sql);
               {? _res.first()
               || _res.IL_SZT+=TR_NZL.IL_SZT;
                  _res.IL_T+=TR_NZL.IL_T;
                  _res.IL_M3+=TR_NZL.IL_M3;
                  _res.IL_TR+=1;
                  _res.DOPL:=_lad;
                  _res.put(1)
               || _res.blank();
                  _res.DT:=_dt;
                  _res.OBCY:=_obcy;
                  _res.KOD:=_kod;
                  _res.NAZ:=_naz;
                  _res.SQL:=_sql;
                  _res.D_RODZ:=_d_rodz;
                  _res.D_NAZ:=_d_naz;
                  _res.RR:=_rr;
                  _res.RM:=_rm;
                  _res.RT:=_rt;
                  _res.RD:=_rd;
                  _res.IL_SZT:=TR_NZL.IL_SZT;
                  _res.IL_T:=TR_NZL.IL_T;
                  _res.IL_M3:=TR_NZL.IL_M3;
                  _res.IL_TR:=1;
                  _res.add(1)
               ?};
               {? _obcy='N' | _obcy='B'
               || __sday.clear();
                  __sday.prefix(_dt);
                  {? ~__sday.first()
                  || __sday.blank();
                     __sday.DT:=_dt;
                     __sday.SUM:=TR_NZL.IL_T;
                     __sday.IL_TR:=1;
                     __sday.add()
                  || __sday.SUM+=TR_NZL.IL_T;
                     __sday.IL_TR+=1;
                     __sday.put()
                  ?}
               ?}
            ?};
            TR_NZL.next()
         !}
      ?}
   !};
   TR_NZL.cntx_pop()
?};
obj_del(_kalend);
obj_del(_tab);
_res


\init_dttr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: wczytanie okienka zasobów
::----------------------------------------------------------------------------------------------------------------------
__zttr.prefix();
__zttr.first();
exec('refresh_dttr','transport_moc',1);
grp_disp(__zttr,__wztr);
~~


\pd_dttr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Przed odświeżeniem okienko dla __dttr
::----------------------------------------------------------------------------------------------------------------------
1


\pr_dttr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Przed obsługą okienko dla __dttr
::----------------------------------------------------------------------------------------------------------------------
1


\pd_zttr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Przed odświeżeniem okienko dla __zttr
::----------------------------------------------------------------------------------------------------------------------
exec('refresh_dttr','transport_moc');
1


\pr_zttr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Przed obsługą okienko dla __zttr
::----------------------------------------------------------------------------------------------------------------------
1


\refresh_dttr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [18.42]
:: OPIS: Odświeża okienko dla __dttr
::   WE: [_a] - pierwsze wejście 1-tak 0-domyślnie nie
::----------------------------------------------------------------------------------------------------------------------
_first:={? var_pres('_a')=type_of(0) || _a || 0 ?};

__dttr.f_clear();
__zttr.get();
{? __zttr.OBCY<>'A'
|| __dttr.f_set('DT,OBCY,KOD',,'SQL=\':_a\'',__zttr.SQL)
|| __dttr.f_set('DT,OBCY,KOD',,'')
?};
{? _first || __dttr.f_first() ?};
grp_disp(__dttr,__wdtr);
__sday.prefix();
__sday.first();
grp_disp(__sday,__wday);
~~


\nextWeek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Następny tydzień
::----------------------------------------------------------------------------------------------------------------------
{? __dttr.last()
|| _data:=__dttr.DT+1;
   _ref:=__zttr.ref();
   exec('genWeek','transport_moc',TR_NZL.ODDZ,_data,__zttr,__dttr);
   __zttr.seek(_ref);
   exec('refresh_dttr','transport_moc',1);
   grp_disp(__zttr,__wztr)
?};
~~


\prevWeek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: Poprzedni tydzień
::----------------------------------------------------------------------------------------------------------------------
{? __dttr.first()
|| _data:=__dttr.DT-6;
   {? _data<date() || _data:=date() ?};
   _ref:=__zttr.ref();
   exec('genWeek','transport_moc',TR_NZL.ODDZ,_data,__zttr,__dttr);
   __zttr.seek(_ref);
   exec('refresh_dttr','transport_moc',1);
   grp_disp(__zttr,__wztr)
?};
~~


\rektrmoc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.14]
:: OPIS: podświetlenie rekordu dla dat
::----------------------------------------------------------------------------------------------------------------------
_noplan:=0;
{? __dttr.SQL='tr_nzl'
|| __sday.cntx_psh();
   __sday.clear();
   __sday.prefix(__dttr.DT);
   _sum:=__dttr.IL_T+{? __sday.first() || __sday.SUM || 0 ?};
   _noplan:=_sum>=__maxton;
   __sday.cntx_pop()
?};
{? ~__dttr.IL_TR & ~__dttr.IL_T
|| '__dttr#01#01'
|? _noplan | (__dttr.IL_T>0 & __dttr.DOPL>0 & __dttr.IL_T>=__dttr.DOPL)
|| '__dttr#01#02'
|| '__dttr#01#03'
?}


\prmtr_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Przed redakcją kategorii transportu dla mocy
::----------------------------------------------------------------------------------------------------------------------
exec('pr_tr_rodz','transport_wspolne',TR_MOC.TR_RODZ);
1


\pomtr_rodz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Po redakcji kategorii transportu dla mocy
::----------------------------------------------------------------------------------------------------------------------
_res:=exec('po_tr_rodz','transport_wspolne',TR_MOC.TR_RODZ);
_res


\tr_moc_mod
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [21.37]
:: OPIS: Przed akcją Popraw dla mocy
::----------------------------------------------------------------------------------------------------------------------
_res:=exec('tr_rodz_mod','transport_wspolne',TR_MOC.TR_RODZ,'Moc transportowa'@);
_res

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:24 34afbc99e2e3ddd6d310e560228734ea35daf7200aaa1471aedf5110978b83d95b8ea57754407d6a2304356720e957b1b93b47fe1d1a5fcaffe56101b56ed5420d1ff125e633dfe554fcd0540d3f40347054983a1ce3ff453881e0a53c897c4cccd82ce042137cd917fbc6ce2ae5ac02aa204834fb76730b8cfe0b03d964b107
