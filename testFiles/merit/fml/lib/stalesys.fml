:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: stalesys.fml
:: Utworzony: 26.03.2015
:: Autor: RWR
::======================================================================================================================
:: Zawartość: Plik zawiera formuły obsługujące stałe systemu.
::======================================================================================================================


\ulica
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS
:: OPIS: Na podstawie bieżącego adresu firmy tworzy tekst zawierający nazwę ulicy z numerem domu i lokalu.
::----------------------------------------------------------------------------------------------------------------------
{? +KST.ULICA || KST.ULICA || KST.MIASTO ?}+' '+ KST.DOM+{? |KST.LOKAL='' || '' || ' m. '+KST.LOKAL ?}


\poczta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS
:: OPIS: Na podstawie bieżącego adresu firmy tworzy tekst zawierający kod pocztowy i nazwę urzędu pocztowego.
::----------------------------------------------------------------------------------------------------------------------
KST.KOD+' '+{? |KST.POCZTA='' || KST.MIASTO || KST.POCZTA ?}


\kst_par_urlxxx_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Formuła sprawdza, czy dla podanego kodu (oczekiwany kod nieobecności) istnieje już wprowadzona jakakolwiek
::       nieobecność. Jeżeli tak - kod nie może zostać zmieniony.
::   WE: _a [INTEGER] - Numwer składnika płacowego.
::   WY: 0 - Kod nie może być zmieniony (istnieje nieobecność).
::       1 - Kod może być zmieniony (brak wprowadzonych nieobecności).
::----------------------------------------------------------------------------------------------------------------------
_rn:=_a;
_CanMod:=1;
N.cntx_psh();
N.index('NIPRACNB');
P.cntx_psh();
P.prefix();
_again:=P.first();
{!
|? _CanMod & _again
|! N.prefix('N',P.ref(),_rn);
   {? N.first()
   || _CanMod:=0
   || _again:=P.next()
   ?}
!};
P.cntx_pop();
N.cntx_pop();
_CanMod


\kst_par_urlop_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WH [2010]
:: OPIS: Blokowanie edycji pola URLOP w tabeli parametrów pracy programu. Jeżeli istnieje już jakakolwiek nieobecność
::       określona jako urlop wypoczynkowy, modyfikacja pola nie jest dozwolona.
::   WY: Pole KST_PAR.URLOP może być modyfikowane? [0/1]
::  OLD: \zab_url/kali.fml
::----------------------------------------------------------------------------------------------------------------------
VAR.KLASA:='N';
{? KST_PAR.URLOP
|| exec('kst_par_urlxxx_be','stalesys',KST_PAR.URLOP().RN)
|| 1
?}


\kst_par_url_chor_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Blokowanie edycji pola URL_CHOR w tabeli parametrów pracy programu. Jeżeli istnieje już jakakolwiek nieobecność
::       określona jako urlop na żądanie, modyfikacja pola nie jest dozwolona.
::   WE:
::   WY: Pole KST_PAR.URL_CHOR może być modyfikowane? [0/1]
::----------------------------------------------------------------------------------------------------------------------
VAR.KLASA:='N';
{? KST_PAR.URL_CHOR
|| exec('kst_par_urlxxx_be','stalesys',KST_PAR.URL_CHOR().RN)
|| 1
?}


\kst_ae_com01
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Rekord - po" dla tabeli KST. Część wspólna dla obszaru PKD i PPL.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? (_chk:=__CHK.record(KST_PAR,,'URLOP','URL_CHOR'))<>''
|| return(_chk)

:: Dz. U. 1997 nr 2 poz. 14 - Rozporządzenie MPiPS z dnia 8.01.1997 r. w sprawie (...) ekwiwalentu pieniężnego za urlop.
:: § 19.2 Współczynnik ustala się odejmując od liczby dni w danym roku (366) łączną liczbę niedziel i świąt, a otrzymany
:: wynik dzieląc przez 12 (m-cy).
:: Przyjmijmy jednynie 52 niedziele.
:: (366 - 52)/12 = 26.17
|? ~exec('in_interval','#field',0,26.17,KST,'EKW')
|| return('EKW')

|? (_chk:=__CHK.record(KST_PAR,,'CHOROBA','WALORYZ'))<>''
|| return(_chk)

|? (_chk:={? KST.NR_ZC_AU='I' || __CHK.record(KST,,'NR_ZC_FM') || '' ?})<>''
|| return(_chk)

|? (_chk:={? KST.NR_RH_AU='I' || __CHK.record(KST,,'NR_RH_FM') || '' ?})<>''
|| return(_chk)
?};

''


\kst_ae_prn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [17.00]
:: OPIS: Obsługa akcji "Rekord - po" dla tabeli KST. Część wspólna dla obszaru PKD i PPL.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
__CHK.record(KST,,'W_PRN','SZ_PRN')


\kst_projzakr_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.14]
:: OPIS: Funkcja po redakcji pola PROJZAKR zmiennej KST
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? KST.PROJZAKR='Nie dotyczy' & KST.PROJKK || KST.PROJKK:=null() ?};
exec('kst_efld_opt','stalesys');
~~


\kst_projkk_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.14]
:: OPIS: Funkcja przed redakcją pola PROJKK zmiennej KST
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
ZMIENNE.RODZAJ:='Q'


\kst_efld_opt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.14]
:: OPIS: Funkcja do zmiany ustawienia właściwości pola w oknie redagowania.
::   WE: [_a] [TABLE]  - Uchwyt do tabeli, w której mają być ustawione właściwości pola.
::       [_b] [STRING] - Akronim okna, w którym mają być ustawione właściwości pola.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:={? var_pres('_a')=type_of(KST) || _a || cur_tab(1,1) ?};
_red:={? var_pres('_b')=type_of('') || _b || cur_win(1,1) ?};

_tab.efld_opt(_red,'enable='+$(KST.PROJZAKR<>'Nie dotyczy'),,'PROJKK','SKROT');
_tab.efld_opt(_red,'enable='+$(PAR_SKID.get(261)='T'),,'LKZ');
_tab.efld_opt(_red,'enable='+$(PAR_SKID.get(261)='T'),,'PDBP');
~~


\dla_listy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.28]
:: OPIS: Wczytuje wartości wszystkich stałych systemu zgodnie z listą płac.
::   WE: _a [_O] - wskazanie listy płac, jeśli pominięty, to przyjęta zostanie bieżąca
::  OLD: \stalesys/stalesys.fml
::----------------------------------------------------------------------------------------------------------------------
_d1:=_d2:=_d3:=date();

{? var_pres('_a')=type_of(null) & _a<>null & ref_tab(_a)=O
|| O.cntx_psh();
   SEEK.O:=_a;
   _d1:=date(O.R,O.M,0);
   _d2:=date(O.RP,O.MP,0);
   _d3:=date(O.RU,O.MU,0);
   O.cntx_pop()
|? VAR.JESTLIST
|| _d1:=date(O.R,O.M,0);
   _d2:=date(O.RP,O.MP,0);
   _d3:=date(O.RU,O.MU,0)
?};

exec('czytaj','#stalesys',_d1);

{? _d2<>_d1
:  stałe wg miesiąca rozliczenia podatkowego
|| exec('czytaj','#stalesys',_d2,KST,
      'KU','KUZ','UL','UL2','UL3','RC','UL_ROK',
      'ZWPOD','ZWPODW','ZWPODE','ZWPODD','ZWPODP',
      'ULGA_KS1','ULGA_KS2','ULGA_KS3','KW_W',
      'LKZ','PDBP','PZ_LP'
   )
?};
{? _d3<>_d1
:  stałe wg miesiąca ubezpieczeniowego
|| exec('czytaj','#stalesys',_d3,KST,
      'ZUS','PRFE','PRFR','PRFW','PRFC','PRKC','PRKO','PRFRP','PRFRF',
      'FP','FGSP','PPE','WSODBR','FEP',
      'SK','Z5','PRZWYN','PRGWYN'
   )
?}


\kst_par_nr_zc_au_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MK [17.42]
:: OPIS: Formula po redkacji pola NR_ZC_AU, zmiennej KST
::   WE: [_a] [TABLE]  - Uchwyt do tabeli, w której mają być ustawione właściwości pola.
::       [_b] [STRING] - Akronim okna, w którym mają być ustawione właściwości pola.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:={? var_pres('_a')=type_of(KST) || _a || cur_tab(1,1) ?};
_red:={? var_pres('_b')=type_of('') || _b || cur_win(1,1) ?};
_tab.efld_opt(_red,'enable=%1'[$(KST.NR_ZC_AU='I')],KST,'NR_ZC_FM')


\kst_par_nr_rh_au_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MicKoc [20.42]
:: OPIS: Formula po redkacji pola NR_RH_AU, zmiennej KST
::   WE: [_a] [TABLE]  - Uchwyt do tabeli, w której mają być ustawione właściwości pola.
::       [_b] [STRING] - Akronim okna, w którym mają być ustawione właściwości pola.
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_tab:={? var_pres('_a')=type_of(KST) || _a || cur_tab(1,1) ?};
_red:={? var_pres('_b')=type_of('') || _b || cur_win(1,1) ?};
_tab.efld_opt(_red,'enable=%1'[$(KST.NR_RH_AU='I')],KST,'NR_RH_FM')


\kst_status_p_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Przed redakcją KST.STATUS_P
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
DPOZ.WPR_S:=fld(); 1


\kst_status_p_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: F3 KST.STATUS_P
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_res:=exec('kst_status_p_select','edi_fo_ksef',fld());
{? _res.RESULT
|| fld(_res.FLD)
|| 0
?}


\kst_status_p_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [21.37]
:: OPIS: Po redakcji KST.STATUS_P
::   WE:
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_fld:=fld();
{? DPOZ.WPR_S=_fld
||
   1
||
   _Tab:=exec('kst_status_p_slo','edi_fo_ksef');
   {? _Tab.find_key(_fld,)
   ||
      1
   ||
      {? FUN.ask('Nie znaleziono statusu podatnika w słowniku.\nCzy chcesz wybrać status ze słownika?'@)
      ||
         _res:=exec('kst_status_p_select','edi_fo_ksef',_fld);
         {? _res.RESULT
         || fld(_res.FLD); 1
         || 0
         ?}
      || 1
      ?}
   ?}
?}


\ezlamail_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Po redakcji pól POLA_GRP.TXT1 i POLA_GRP.TXT2 (powiązane z KST_PAR.EZLAPASS i KST_PAR.EZLAPZIP)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('kst_efld_opt','!zws_par_ppkd','1',KST,'PKD','EZLAMAIL');
1


\ezlapass_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Po redakcji pól POLA_GRP.TXT1 i POLA_GRP.TXT2 (powiązane z KST_PAR.EZLAPASS i KST_PAR.EZLAPZIP)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
POLA_GRP.TXT_3:=POLA_GRP.TXT_4:='';
POLA_GRP.TXT_5:={? cur_afld()='TXT_1' || POLA_GRP.TXT_1 || POLA_GRP.TXT_2 ?};
1


\ezlapass_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DG [22.26]
:: OPIS: Po redakcji pól POLA_GRP.TXT1 i POLA_GRP.TXT2 (powiązane z KST_PAR.EZLAPASS i KST_PAR.EZLAPZIP)
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::{? +form(KST_PAR.EZLAMAIL)=0 || return(0) ?};
{? cur_afld()='TXT_1'
|| {? POLA_GRP.TXT_1='' | POLA_GRP.TXT_1=POLA_GRP.TXT_5 || return(1) ?}
|? cur_afld()='TXT_2'
|| {? POLA_GRP.TXT_2='' | POLA_GRP.TXT_2=POLA_GRP.TXT_5 || return(1) ?}
?};
POLA_GRP.TXT_3:={? cur_afld()='TXT_1' || POLA_GRP.TXT_1 || POLA_GRP.TXT_2 ?};
_wnd:=POLA_GRP.mk_edit('Zmiana hasła'@);
POLA_GRP.win_edit(_wnd);
POLA_GRP.win_efld(_wnd,,'TXT_3',,,34,,,'Nowe hasło'@,,,'password');
POLA_GRP.win_efld(_wnd,,'TXT_4',,,34,,,'Powtórzone nowe hasło'@,,,'password');
POLA_GRP.efld_opt(_wnd,'mark=1',, 'TXT_3');
POLA_GRP.efld_opt(_wnd,'mark=1',, 'TXT_4');
exec('ok_esc','#window',POLA_GRP,_wnd);
_res:=POLA_GRP.edit("exec('chk_pass','stalesys')",,'TXT_4');
{? cur_afld()='TXT_1'
|| POLA_GRP.TXT_1:={? _res || POLA_GRP.TXT_3 || '' ?}
|? cur_afld()='TXT_2'
|| POLA_GRP.TXT_2:={? _res || POLA_GRP.TXT_3 || '' ?}
?};
POLA_GRP.TXT_3:=POLA_GRP.TXT_4:=POLA_GRP.TXT_5:='';

1


\chk_pass
::----------------------------------------------------------------------------------------------------------------------
::   UTW: DG [22.26]
::  OPIS: Formula sprawdza poprawność wprowadzonego hasła oraz czy nowe hasło i powtórzone hasło jest zgodne
::    WY: ''     - prawidłowo wprowadzone hasła
::        'HASLO1' lub 'HASLO2' - błędnie wprowadzone hasło
::----------------------------------------------------------------------------------------------------------------------
_chk:='';
{? +POLA_GRP.TXT_3=0
|| FUN.info('Pole "Nowe hasło" nie może być puste.'@);
   return('TXT_3')
?};
{? +POLA_GRP.TXT_4=0
|| FUN.info('Pole "Powtórz nowe hasło" nie może być puste.'@);
   return('TXT_4')
?};
{? POLA_GRP.TXT_3<>POLA_GRP.TXT_4
|| FUN.info('Powtórzone hasło jest niepoprawne.'@);
   return('TXT_4')
?};
return(_chk)


\kst_grvat_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Formuła przed redagowaniem KST.GRVAT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KH.win_sel('WERHOME2');
KH.actions('WERHOME2','A',,1);
KH.prefix();
KH.f_clear();
{? KST.JST='T'
|| KH.f_set('SKR')
|| KH.f_set('SKR',,'GRVAT=\'T\'')
?};
1


\kst_grvat_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: WHAN [23.25]
:: OPIS: Formuła po redagowaniu KST.GRVAT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
KH.f_clear()


\bekapzak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła przed redagowaniem XINFO.KAP_ZAK
::----------------------------------------------------------------------------------------------------------------------
PAR_SKID.get(34)<>'P'


\aekapzak
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła po redagowaniu XINFO.KAP_ZAK
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? XINFO.KAP_ZAK$2<0
|| FUN.info('Wartość kapitału zakładowego licencjobiorcy\n'+
            'nie może być mniejsza od zera.'@); _zwrot:=0
|? XINFO.KAP_WPL>XINFO.KAP_ZAK
|| FUN.info('Wartość kapitału wpłaconego nie może być większa\n'+
            'od kapitału zakładowego licencjobiorcy.'@); _zwrot:=0
?};
_zwrot


\bekapwpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła przed redagowaniem XINFO.KAP_WPL
::----------------------------------------------------------------------------------------------------------------------
XINFO.KAP_ZAK$2>0 & PAR_SKID.get(34)='A'


\aekapwpl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Formuła po redagowaniu XINFO.KAP.WPL
::----------------------------------------------------------------------------------------------------------------------
_zwrot:=1;
{? XINFO.KAP_WPL$2<0
|| FUN.info('Wartość kapitału wpłaconego licencjobiorcy\n'+
            'nie może być mniejsza od zera.'@); _zwrot:=0
|? XINFO.KAP_WPL>XINFO.KAP_ZAK
|| FUN.info('Wartość kapitału wpłaconego nie może być większa\n'+
            'od kapitału zakładowego licencjobiorcy.'@); _zwrot:=0
?};
_zwrot



:Sign Version 2.0 jowisz:1045 2024/01/29 14:27:18 2aebee2b15306148e656fb84ef288cd083c4ce4f69c4f051b4eabda1824724d8cf127b8ab1582eac1ffec744550efd259471747301099c7df9f0213b6c35598f22e3fe221856d25cc5731322358e610895030fe6841e55c2d1bc38f1172d01a3bac18354de268957cb072b914a77600155a8d15de76c8d7bc4d4c56ebaeccfc0
