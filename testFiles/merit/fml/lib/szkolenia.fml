:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: szkolenia.fml
:: Utworzony: 2016/06/07
:: Autor: DRO
::======================================================================================================================
:: Zawartość: Definicje funkcji odpowiedzialnych za obsługę kartoteki ewidencji szkoleń pracowników.
::======================================================================================================================


\szk_prac_szkol_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Wartość początkowa pola SZKOL w tabeli SZK_PRAC.
::   WE:
::   WY:
::  OLD: \szkop_bl/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
null()


\szk_prac_szkol_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [21.14]
:: OPIS: Po edycji pola SZKOL tabeli SZK_PRAC
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
exec('szk_opis_bd','psz');
1


\szk_prac_suma_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Wyliczenie sumy potrąceń dla uczestnika szkolenia.
::   WE:
::   WY:
::  OLD: \szk_suma/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
SZK_PRAC.SUMA:=SZK_PRAC.DYD+SZK_PRAC.ZAKW+SZK_PRAC.WYZ+SZK_PRAC.DEL;
1


\oblicz_potw
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.30]
:: OPIS: Oblicza liczbę potwierdzeń uczestnictwa w szkoleniu
::       UWAGA!!! Musi być ustawiony rekord szkolenia SZK_OPIS
::   WE:
::   WY:
::  OLD: \wyl_potw/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
_sum:=0;
SZK_PRAC.cntx_psh();
SZK_PRAC.index('SZK_PRAC');
SZK_PRAC.prefix(SZK_OPIS.ref());
{? SZK_PRAC.first()
|| {!
   |? _sum+=(SZK_PRAC.EMAIL_PO='T');
      SZK_PRAC.next()
   !}
?};
SZK_PRAC.cntx_pop();
_sum


\oblicz_do_opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Obliczenie w opisie szkolenia wartości pól, które wynikają z innych pól tej tabeli lub z danych o uczestnikach
::       szkolenia.
::   WE:
::   WY:
::  OLD: \wyl_opis/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
: aktualizacja pól, których wartości wynikają z informacji o uczestnikach szkolenia
SZK_PRAC.cntx_psh();
SZK_PRAC.index('SZK_PRAC');
SZK_PRAC.prefix(SZK_PRAC.SZKOL);
: liczba uczestnikow szkolenia
SZK_OPIS.LU:=SZK_PRAC.size();
: potwierdzenia uczestnictwa
SZK_OPIS.LU_POTW:=0;
: koszty rzeczywiste
: dydaktyka
SZK_OPIS.DYD_R:=0;
: zakwaterowanie
SZK_OPIS.ZAKW_R:=0;
: wyzywienie
SZK_OPIS.WYZ_R:=0;
: delegacje
SZK_OPIS.DEL_R:=0;
: razem
SZK_OPIS.KR:=0;
: liczba dni szkolenia
{? SZK_OPIS.OD<>#0 & SZK_OPIS.DO<>#0
|| SZK_OPIS.ILE:={? SZK_OPIS.OD<=SZK_OPIS.DO || (SZK_OPIS.DO-SZK_OPIS.OD)+1 ?}
?};
: zliczenie z uczestnikow
_loop:=SZK_PRAC.first();
{!
|? _loop
|! SZK_OPIS.LU_POTW+=(SZK_PRAC.EMAIL_PO='T');
   {? SZK_PRAC.U_KOSZT='T'
   || SZK_OPIS.DYD_R+=SZK_PRAC.DYD;
      SZK_OPIS.ZAKW_R+=SZK_PRAC.ZAKW;
      SZK_OPIS.WYZ_R+=SZK_PRAC.WYZ;
      SZK_OPIS.DEL_R+=SZK_PRAC.DEL;
      SZK_OPIS.KR+=SZK_PRAC.SUMA
   ?};
   _loop:=SZK_PRAC.next()
!};
SZK_PRAC.cntx_pop();
exec('szk_opis_suma','szkolenia')


\szk_opis_suma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Formuła sumująca koszty szkolenia.
::   WE:
::   WY:
::  OLD: \obecn_pr/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
SZK_OPIS.SUMA:=
   {? SZK_OPIS.DYD_U='T'  || SZK_OPIS.DYD  || {? SZK_OPIS.LU || SZK_OPIS.DYD/SZK_OPIS.LU ?}$2 ?}+
   {? SZK_OPIS.ZAKW_U='T' || SZK_OPIS.ZAKW || {? SZK_OPIS.LU || SZK_OPIS.ZAKW/SZK_OPIS.LU ?}$2 ?} +
   {? SZK_OPIS.WYZ_U='T'  || SZK_OPIS.WYZ  || {? SZK_OPIS.LU || SZK_OPIS.WYZ/SZK_OPIS.LU ?}$2 ?} +
   {? SZK_OPIS.DEL_U='T'  || SZK_OPIS.DEL  || {? SZK_OPIS.LU || SZK_OPIS.DEL/SZK_OPIS.LU ?}$2 ?};

SZK_OPIS.KO:=
   {? SZK_OPIS.DYD_U='T'  || SZK_OPIS.LU || 1 ?}*SZK_OPIS.DYD+
   {? SZK_OPIS.ZAKW_U='T' || SZK_OPIS.LU || 1 ?}*SZK_OPIS.ZAKW+
   {? SZK_OPIS.WYZ_U='T'  || SZK_OPIS.LU || 1 ?}*SZK_OPIS.WYZ+
   {? SZK_OPIS.DEL_U='T'  || SZK_OPIS.LU || 1 ?}*SZK_OPIS.DEL;

1


\szk_prac_obecnb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Formuła przed akcją "obeCność" w okienku tabeli SZK_PRAC.
::   WE:
::   WY:
::  OLD: \obecn_pr/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
{? -menu_txt()='obecny'
|| SZK_PRAC.OBECNY:='T'
|| SZK_PRAC.OBECNY:='N'
?}


\szk_prac_obecna
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Formuła po akcji "obeCność" w okienku tabeli SZK_PRAC.
::   WE:
::   WY:
::  OLD: \obecn_po/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
SZK_PRAC.put()


\szk_prac_reka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Sprawdzenie wymaganych informacji.
::   WE:
::   WY:
::  OLD: \PRrekpo/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
_chk:=__CHK.table(SZK_PRAC,-menu_txt='popraw',,'SZKOL','P');
{? type_of(_chk)=type_of(0) & ~_chk
|| return(0)
?};
{? type_of(_chk)=type_of('') & _chk<>''
|| return({? _chk<>'P' || _chk || 0 ?})
?};

{? ~exec('szk_prac_umlojn_chk','szkolenia')
|| return('KOSZT')
?};

''


\szk_opis_org_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: darokr [2010]
:: OPIS: Formuła na wartość początkową pola ORG w tabeli SZK_OPIS.
::   WE:
::   WY:
::  OLD: \SZK_ORG/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
{? +SZK_ORG.NAZWA || SZK_ORG.ref() || null() ?}


\szk_opis_oddo_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Formuła na wartość początkową pola OD i DO w tabeli SZK_OPIS.
::   WE:
::   WY:
::  OLD: \SZKILE/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
SZK_OPIS.ILE:={? SZK_OPIS.OD<>#0 & SZK_OPIS.DO<>#0 || {? SZK_OPIS.OD<=SZK_OPIS.DO || (SZK_OPIS.DO-SZK_OPIS.OD)+1 ?} ?};
1


\szk_org_xxx_ob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formuła "okienko przed" okienek tabeli SZK_ORG.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_wnd:=cur_win(1,1);
{? _wnd='PSZ_OC'
|| exec('zz_pom_psh','phr_widok','PSZ_SDO_PDOS');
   exec('setup_icon','phr_widok','NAZWA')
?};
SZK_ORG.win_edit('RED');
1


\szk_org_xxx_oa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Formuła "okienko po" okienek tabeli SZK_ORG.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_wnd:=cur_win(1,1);
{? _wnd='PSZ_OC'
|| exec('zz_pom_pop','phr_widok')
?};
1


\szk_org_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Formuła "rekord po" okienek tabeli SZK_ORG - sprawdzenie poprawności danych.
::   WE:
::   WY:
::  OLD: \ORGrekpo/war_tech.fml
::----------------------------------------------------------------------------------------------------------------------
exec('szk_org_chk','phr_sz_tab',-menu_txt()='popraw')


\szk_org_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Formuła wykonywana przed akcją Usuń w tabeli SZK_OPIS.
::   WE:
::   WY:
::  OLD: \menu_pr/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_conf','#table')


\szk_org_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Formuła wykonywana po akcji Usuń w tabeli SZK_OPIS.
::   WE:
::   WY:
::  OLD: \menu_po/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
SZK_OPIS.del()


\szk_org_repb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: darokr [2010]
:: OPIS: Formuła Wydruki dla tabeli SZK_ORG okno WER
::   WE:
::   WY:
::  OLD: \szkdrakt/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
exec('rep_exec','#b_report','PKD_GRP_ARSZ','pkd_szkolenia*',,1)


\szk_opis_reka
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Formuła po redakcji opisu szkolenia. Sprawdzenie uzupełnionych informacji.
::   WE:
::   WY:
::  OLD: \OPrekpo/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
exec('szk_opis_ae','psz')


\szk_org_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2006]
:: OPIS: Formuła po odświeżeniu w oknie WER tabeli SZK_ORG w oknie grupowym GRP tabeli SZK_ORG
::   WE:
::   WY:
::  OLD: \wyb_org/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
exec('czy_usun_org','szkolenia');
SZK_OPIS.index('ORG_DATA');
SZK_OPIS.prefix(SZK_ORG.ref());
SZK_OPIS.actions('WER',{? ~SZK_ORG.size() || ':d' || '' ?},,1);
grp_disp(SZK_OPIS,'WER',1)


\szk_org_grpc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2006]
:: OPIS: Zamknięcie okienka grupowego prezentującego dane według organizatorów
::   WE:
::   WY:
::  OLD: \zam_org/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
SZK_PRAC.fld_fml('P','BLANK',"*");
SZK_PRAC.fld_fml('SZKOL','BLANK',"*");
1


\szk_opis_wer_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2006]
:: OPIS: Formuła po odświeżeniu w oknie WER tabeli SZK_OPIS w oknie grupowym GRP tabeli SZK_ORG
::   WE:
::   WY:
::  OLD: \wyb_opis/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
SZK_PRAC.index('SZK_PRAC');
SZK_PRAC.prefix({? SZK_OPIS.size() || SZK_OPIS.ref() || null() ?});
SZK_PRAC.actions('UCZ',{? ~SZK_OPIS.size() || ':D' || '' ?},,1);
grp_disp(SZK_PRAC,'UCZ',1)


\szk_prac_ucz_br
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [12.41]
:: OPIS: Formuła przed obsługą w oknie UCZ tabeli SZK_PRAC w oknie grupowym GRP tabeli SZK_ORG
::   WE:
::   WY:
::  OLD: \obs_ucz/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
SZK_PRAC.win_edit('OPIS');
SZK_PRAC.fld_fml('P','BLANK',"null()");
SZK_PRAC.fld_fml('SZKOL','BLANK',"SZK_OPIS.ref()")


\szk_prac_ucz_ar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2006]
:: OPIS: Formuła po odświeżeniu w oknie UCZ tabeli SZK_PRAC w oknie grupowym GRP tabeli SZK_ORG
::   WE:
::   WY:
::  OLD: \wyb_ucz/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
SZK_PRAC.actions('UCZ',{? SZK_OPIS.size() || {? ~REF.P || 'puw' || '' ?} || 'd' ?},,1)


\szk_prac_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: GS [2006]
:: OPIS: Przed dołączeniem uczestnika szkolenia.
::   WE:
::   WY:
::  OLD: \SZPRwypr/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
{? -menu_txt<>'popraw' & SZK_OPIS.LIMIT>0 & SZK_OPIS.LIMIT<=SZK_PRAC.size()
|| {? ~FUN.ask('Limit miejsc został wykorzystany.'@+'\n'+'Czy na pewno zapisać uczestnika?'@)
   || return(0)
   ?}
?};
SZK_PRAC.blank();
SZK_PRAC.win_edit('OPIS');
SZK_PRAC.P:=null();
SZK_PRAC.SZKOL:=SZK_OPIS.ref();
{? SZK_PRAC.edit("exec('szk_prac_reka','szkolenia')")
|| SZK_PRAC.add()
?};
1


\szk_prac_rekb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Przed dołączeniem uczestnika szkolenia.
::   WE: _a [NUMBER] - Rekord bieżący? [0 - nie / 1 - tak]
::   WY:
::  OLD: \SZPRrepr/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
exec('szk_prac_xxx_rb','psz');
{? _a
|| _wer:=SZK_PRAC.win_sel('?');
   _grey:={? SZK_PRAC.OBECNY='T' || 'O' || 'N' ?};
   SZK_PRAC.actions_grayed(_wer,_grey)
?};
grp_disp(SZK_OPIS,'WER')


\szk_prac_p
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Wybór uczestnika szkolenia.
::   WE: _a [STRING] - opcjonalnie podany symbol dziedziny (domyślnie 'PKD')
::   WY:
::  OLD: \szk_prac_p/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
_args:=exec('wybierz_args','pracownik');
_args.WIELU:=0;
_args.UD_SCH:=exec('domyslny','schemat','PODZORG');
{? var_pres('_a')=type_of('') & (',PBA,POC,PSZ,'*(','+_a+','))
|| _args.DOMAIN:=_a;
   _args.F_ZATR:='*'
|| _args.DOMAIN:={? var_pres('_a')=type_of('') & _a<>'' || _a || 'PKD' ?};
   _args.UD_SKL:=__PARSES.getVal('JednostkaOrganizacyjna').REF;
   _args.F_ZATR:=__PARSES.getVal('F_ZATR').KOD;
   _args.VIEW:=__PARSES.getVal('ZakresDanych')
?};

_prac:=exec('wybierz','pracownik',_args);
{? _prac.STATUS<>''
|| FUN.emsg(_prac.STATUS);
   return('')
?};

_prac.P.first();
{? _prac.P.size()=1
|| {? P.seek(_prac.P.SQL,,1) & SZK_PRAC.P<>P.ref()
   || SZK_PRAC.P:=P.ref();
      {? SZK_PRAC.UMLOJN
      || F_ZATR.cntx_psh();
         F_ZATR.prefix();
         {? SZK_PRAC.P().F_ZATR().KOD='P'
         || UMLOJN.cntx_psh();
            UMLOJN.prefix();
            {? SZK_PRAC.P<>SZK_PRAC.UMLOJN().P
            || SZK_PRAC.UMLOJN:=null()
            ?};
            UMLOJN.cntx_pop()
         || SZK_PRAC.UMLOJN:=null()
         ?};
         F_ZATR.cntx_pop()
      || SZK_PRAC.UMLOJN:=null()
      ?}
   ?}
|? _prac.P.size()>1
|| FUN.emsg('Należy wybrać jednego pracownika z listy.'@)
|| SZK_PRAC.P().OSOBA()
?};
''


\szkolenia_org
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: Okno z parametrami wydruku organizatorów szkoleń
::   WE: _a - objekt przechowujący parametry pracy
::   WY: tabela z wybranyni organizatorami szkoleń
::----------------------------------------------------------------------------------------------------------------------
_tab:=tab_tmp(1
   ,'REF','STRING[16]','Organizator szkolenia'
   ,'LP','INTEGER','Kolejność'
);
_tabo:=_tab.ndx_tmp(,1,'REF',,);
_tablp:=_tab.ndx_tmp(,1,'LP',,);

_param:=tab_tmp(1
   ,'ZAK','INTEGER','Których organizatorów uwzględniać'
   ,'OD','DATE','Data od'
   ,'DO','DATE','Data do'
   ,'INF','INTEGER','Czy uwzględniać dane o szkoleniach'
);
_param.fld_fml('ZAK','AFTER_EDIT',
   "  _par:=params_get();
      _par.param.efld_opt(_par.redpar,'enable='+$(_par.param.ZAK),,'OD');
      _par.param.efld_opt(_par.redpar,'enable='+$_par.param.ZAK,,'DO');
      {? _par.param.ZAK
      || {? _par.param.DO=#0 || _par.param.DO:=date() ?}
      || _par.param.OD:=_par.param.DO:=#0
      ?}; 1
    "
);
_param.fld_fml('OD','AFTER_EDIT',
   "  _tab:=cur_tab(1,1);
      {? _tab.OD>_tab.DO
      || FUN.emsg(\'Data początku okresu nie może być większa od daty końcowej.\');
         _tab.OD:=_tab.DO; 0
      || 1
      ?}
"
);
_param.fld_fml('DO','AFTER_EDIT',
   "  _tab:=cur_tab(1,1);
      {? _tab.DO<_tab.OD
      || FUN.emsg(\'Data końca okresu nie może być mniejsza od daty początkowej.\');
        _tab.DO:=_tab.OD; 0
      || 1
      ?}
   "
);
_param.ZAK:=_param.INF:=0;
_param.OD:=_param.DO:=#0;
_param.add();

_wero:=SZK_ORG.mk_sel('Organizatorzy szkoleń'@,,,'listaorgszk',0,0,30,,'U',,,,,'maximized');
_redpar:=_param.mk_edit('Parametry wydruku'@,0,'redlistaorgszk',,,'maximized');

SZK_ORG.win_fld(_wero,,'NAZWA',,,37,,1,'Nazwa organizatora'@);
SZK_ORG.win_fld(_wero,,'MIASTO',,,25,,1,'Miasto'@);
SZK_ORG.win_fld(_wero,,'ULICA',,,30,,1,'Ulica'@);
SZK_ORG.win_fld(_wero,,'TEL',,,15,,1,'Telefon'@);
SZK_ORG.win_fld(_wero,,'RODZAJ','NAZWA',,'10,13',,1,'Rodzaj'@);
SZK_ORG.win_act(_wero,,'Formuła','Wybierz'@@,,,
   "  _par:=params_get();
      _par.tab.index(_par.tabo);
      {? _par.tab.find_key($SZK_ORG.ref())
      || _par.tab.del()
      || _par.tab.REF:=$SZK_ORG.ref();
         _par.tab.LP:=_par.tab.size()+1;
         _par.tab.add()
      ?};
      _grey:={? _par.tab.size() || '' || 'D' ?};
      SZK_ORG.actions_grayed(_par.wero,_grey)
   ",,1,1
);
SZK_ORG.win_act(_wero,,'Formuła','Wybierz ws&zystkich'@@,,,
   "  _par:=params_get();
      _par.tab.index(_par.tabo);
      {? SZK_ORG.f_first()
      || {!
         |? {? ~_par.tab.find_key($SZK_ORG.ref())
            || _par.tab.REF:=$SZK_ORG.ref();
               _par.tab.LP:=_par.tab.size()+1;
               _par.tab.add()
            ?};
            SZK_ORG.f_next()
         !};
         SZK_ORG.f_first()
      ?};
      SZK_ORG.actions_grayed(_par.wero,'')
   ",,,1
);
SZK_ORG.win_act(_wero,,'Formuła','Drukuj'@@,,,"sel_exit()",,,,,,,,'target=window,icon=print');
SZK_ORG.win_act(_wero,,'Kolejność');
SZK_ORG.win_act(_wero,,'Szukaj');
SZK_ORG.win_act(_wero,,'Rekord',,,,
   "  _par:=params_get();
      _par.tab.index(_par.tabo);
      _par.tab.find_key($SZK_ORG.ref())
   "
);
SZK_ORG.win_act(_wero,,'Okienko',,,,"win_set('cur_row_pos=-1',SZK_ORG,params_get().wero)");
_btn:=obj_new('D','A');
_btn.D:=SZK_ORG.win_btn(_wero,'text=%1,panel=bottom,align=end'['Drukuj'@],'menu:D');
_btn.A:=SZK_ORG.win_btn(_wero,'text=%1,panel=bottom,align=end'['Anuluj'@],'key:Esc');

_param.win_esep(_redpar,'Organizatorzy szkoleń'@);
_param.win_efld(
   _redpar,,
   'ZAK',,,,,,
   'Których organizatorów uwzględniać?'@,,,
   'radio-buttons',,
   'Wszyscy'@,
   "0",
   'Z okresu'@,
   "1"
);
_param.win_esep(_redpar,'Analizowany okres'@);
_param.win_efld(_redpar,,'OD',,,11,,,'Od daty'@);
_param.win_efld(_redpar,,'DO',,,11,,,'Do daty'@);
_param.win_esep(_redpar,'Dane o szkoleniach'@);
_param.win_efld(
   _redpar,,
   'INF',,,,,,
   'Czy uwzględniać dane o szkoleniach?'@,,,
   'radio-buttons',,
   'Nie'@,
   "1",
   'Skrócone'@,
   "2",
   'Pełne'@,
   "3"
);
exec('ok_esc','#window',_param,_redpar);
_param.efld_opt(_redpar,'enable='+$_param.ZAK,,'OD');
_param.efld_opt(_redpar,'enable='+$_param.ZAK,,'DO');

_grpo:=SZK_ORG.grp_make('Organizatorzy szkoleń'@,
   "  params_set(_par:=params_get());
      exec('filtruj_org','szkolenia',_par.param.OD,_par.param.DO);
      SZK_ORG.actions_grayed(_par.wero,'D');
      grp_disp(SZK_ORG,_par.wero);
      win_activate('grporgszk')
   ",'grpzaswprzep',,,,,'maximized'
);
SZK_ORG.win_sel(_grpo);
SZK_ORG.grp_edit(_grpo,_param,_redpar,,,
   "  params_set(_par:=params_get());
      SZK_ORG.btn_sopt(_par.wero,_par.btn.D,'state=grayed');
      SZK_ORG.btn_sopt(_par.wero,_par.btn.A,'state=grayed');
      {? edit_start()
      || _par.param.put();
         _par.tab.erase();
         exec('filtruj_org','szkolenia',_par.param.OD,_par.param.DO);
         SZK_ORG.btn_sopt(_par.wero,_par.btn.A,'state=normal');
         SZK_ORG.btn_sopt(_par.wero,_par.btn.D,'state=normal');
         SZK_ORG.actions_grayed(_par.wero,'D');
         grp_disp(SZK_ORG,_par.wero);
         win_activate('grporgszk')
      || sel_exit();
         _par.tab.erase()
      ?}
   ",,,'maximized');
SZK_ORG.grp_splt(_grpo,,'vertical','orgszk',',30%');
SZK_ORG.grp_sel(_grpo,SZK_ORG,_wero,,,20,,30,,,,,'maximized','grporgszk');

params_set('tab',_tab,'tabo',_tabo,'wero',_wero,'param',_param,'redpar',_redpar,'btn',_btn);

{? ~SZK_ORG.select()
   & _tab.size()
   & FUN.ask('Niektórzy organizatorzy zostali wybrani do wydruku.'@+'\n'+'Czy na pewno zrezygnować?'@)
|| _tab.erase()
|| _a.ZAK:=_param.ZAK;
   _a.INF:=_param.INF;
   _a.OD:=_param.OD;
   _a.DO:=_param.DO
?};
{? SZK_ORG.f_active() || SZK_ORG.f_clear() ?};
_tab.index(_tablp);
_tab


\filtruj_org
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: ograniczenie listy organizatorów szkoleń w zakresie podanych dat
::   WE: _a - data od
::       _b - data do
::   WY: tabela z wybranyni organizatorami szkoleń
::----------------------------------------------------------------------------------------------------------------------
{? SZK_ORG.f_active() || SZK_ORG.f_clear() ?};
SZK_ORG.f_set(,
   'join SZK_OPIS using (SZK_OPIS.ORG,SZK_ORG.REFERENCE) join SZK_PRAC using (SZK_PRAC.SZKOL,SZK_OPIS.REFERENCE) '
   'join P using (SZK_PRAC.P,P.REFERENCE)',
   '(SZK_OPIS.OD>=to_date(:_a) or to_date(:_a) is null) and (SZK_OPIS.DO<=to_date(:_b) or to_date(:_b) is null) '
   'and P.FIRMA=:_c',
   _a,_b,exec('ref_firma','ustawienia'));
SZK_ORG.f_first()


\czy_usun_org
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: sprawdzenie czy dla organizatora szkolenia jest dostępna akcja usuń
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
SZK_PRAC.cntx_psh();
SZK_PRAC.clear();
{? SZK_PRAC.f_active() || SZK_PRAC.f_clear() ?};
SZK_PRAC.f_set(,
   'join SZK_OPIS join P',
   'P.FIRMA=:_b and SZK_PRAC.SZKOL in (select SZK_OPIS.REFERENCE from SZK_OPIS where SZK_OPIS.ORG=:_a)',
   SZK_ORG.ref(),exec('ref_firma','ustawienia'));
SZK_ORG.actions_grayed('WER',{? SZK_PRAC.f_first() || 'U'|| '' ?});
SZK_PRAC.f_clear();
SZK_PRAC.cntx_pop();
grp_disp(SZK_ORG,'WER')


\szk_prac_prc_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: sprawdzenie czy procent obciążenia kosztami szkolenia zawiera się w przedziale od 0 do 100
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? SZK_PRAC.PRC<0
|| FUN.emsg('Procent obciążenia kosztami szkolenia nie może być liczbą mniejszą od 0'@);
   SZK_PRAC.PRC:=0;
   0
|? SZK_PRAC.PRC>100
|| FUN.emsg('Procent obciążenia kosztami szkolenia nie może być liczbą większą od 100'@);
   SZK_PRAC.PRC:=100;
   0
|| SZK_PRAC.KOSZT:=(SZK_PRAC.PRC/100)*SZK_OPIS.SUMA$2;
   1
?}


\szk_prac_koszt_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [17.00]
:: OPIS: sprawdzenie czy koszt szkolenia dla współpracownika jest różny od 0 w celu udostępnienia pola z symbolem
::       listy płac, na której mają być rozliczone koszty
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
{? SZK_PRAC.KOSZT>SZK_OPIS.SUMA
|| {? ~FUN.ask('Kwota kosztów szkolenia dla współpracownika\nnie powinna być większa od kosztów dla uczestnika'@+
         '\n'+'Czy pozostawić wpisaną kwotę?'
      )
   || SZK_PRAC.KOSZT:=SZK_OPIS.SUMA
   ?};
   _wyn:=1
|? SZK_PRAC.KOSZT<0
|| FUN.emsg('Kwota obciążenia współpracownika kosztami szkolenia nie może być mniejsza od 0'@);
   SZK_PRAC.KOSZT:=0
|| SZK_PRAC.PRC:={? SZK_OPIS.SUMA || (SZK_PRAC.KOSZT/SZK_OPIS.SUMA)*100 || 0 ?};
   _wyn:=1
?};
SZK_PRAC.efld_opt(SZK_PRAC.win_edit('?'),'enable='+$(SZK_PRAC.KOSZT>0),,'LISTA');
_wyn


\szk_prac_lt_f3
::----------------------------------------------------------------------------------------------------------------------
::  UTW: DRO [17.00]
:: OPIS: Obsługa akcji "Wybór F3" dla pola lista płac w szkoleniach.
::   WE: [_a] [STRING] - status nagłówków:
::            'T' - zamknięte
::            'N' - otwarte
::            wpp - wszystkie
::   WY: Symbol wybranej listy płac lub ~~ jeżeli wyboru nie dokonano.
::  OLD: \nazwlist/kart_pla.fml
::----------------------------------------------------------------------------------------------------------------------
O.cntx_psh();
_ret:=exec('select','lista_plac','PPL',SZK_PRAC.P().F_ZATR().KOD,{? var_pres('_a')=type_of('') || _a || '' ?},,'R');
O.cntx_pop();

{? _ret.OK
|| _ret.LT
|| ~~
?}


\pobierz_wd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KO [12.30]
:: OPIS: Sprawdzenie waznosci
::   WE: _a [_P] - wskazanie wiersza tabeli P
::       _b [_SZK_WZO] - wskazanie wiersza tabeli SZK_WZO
::   WY: data ważności szkolenia zgodnego ze wzorcem lub data zerowa
::  OLD: \spr_waznosc/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
_zdate:=date(0,0,0);

{? var_pres('_a')<>type_of(null) | _a=null |
   var_pres('_b')<>type_of(null) | _b=null |
   ref_tab(_a)<>P | ref_tab(_b)<>SZK_WZO
|| return(_zdate)
?};

_ret:=_zdate;
SZK_PRAC.cntx_psh();
SZK_PRAC.index('PRAC_WZO');
SZK_PRAC.prefix(_a,_b);
{? SZK_PRAC.last()
|| {? SZK_PRAC.OBECNY='T'
   || _ret:=SZK_PRAC.WD
   || _ret:=date(0,0,0)
   ?}
?};
SZK_PRAC.cntx_pop();
_ret


\ustal_wd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KO [12.30]
:: OPIS: Ustala termin ważności szkolenia
::   WE: _a - wskazanie pracownika
::       _b - wskazanie wzorca szkolenia
::       _c - wskazanie uczestnika szkolenia
::  OLD: \ustal_wd/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
:: KO [12.30] - jeśli szkolony pracownik pochodzi z zapotrzebowania, które zostało utworzone z matrycy, to wtedy data
:: ważności powinna wynikać z ilości lat ważności z matrycy i daty szkolenia, jeśli nie wypełnione na matrycy to
:: wszystko zostaje po staremu
{? SZK_PRAC.AUTO_WD='T'
|| _wazne:=0;
   _waznosc:=SZK_PRAC.WD;
   _szkol_do:=SZK_PRAC.SZKOL().DO;
   _szkol_wd:=SZK_PRAC.SZKOL().WD;

   SZK_ZAP.cntx_psh();
   SZK_ZAP.index('UNIQUE');
   SZK_ZAP.prefix(_b);
   {? SZK_ZAP.find_key(_c,_a)
   || _skl:=SZK_ZAP.UD_SKL;
      _stn:=SZK_ZAP.STN;
      _wzo:=SZK_ZAP.SZK_WZO;
      {? SZK_ZAP.TYP().KOD='M'
      || _wazne:=exec('mtr_wazne','szkolenia',_skl,_stn,_wzo)
      ?};
      {? _wazne<>0
      || SZK_PRAC.WD:=exec('oblicz_wd','szkolenia',_szkol_do,_wazne)
      || SZK_PRAC.WD:=_szkol_wd
      ?}
   ?};
   SZK_ZAP.cntx_pop()
?}


\wyl_prac
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PK [12.30]
:: OPIS: Wylicza koszty szkolenia dla konkretnego szkolenia pracownika
::   WE: _a - zwiększenie liczby uczestnikow
::       [_b] - wskazanie na pomijanego uczestnika szkolenia
::   WY: 0/1 w zależności, czy zawartości pól kosztów uległy zmianie
::  OLD: \wyl_prac/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
_cnt:=_a;
_prac:={? var_pres('_b')=type_of(null) || _b  || null ?};

SZK_PRAC.cntx_psh();
SZK_PRAC.index('SZK_PRAC');
SZK_PRAC.prefix(SZK_PRAC.SZKOL);
{? SZK_PRAC.first()
|| {!
   |? {? SZK_PRAC.ref()<>_prac & SZK_PRAC.U_KOSZT='T'
      || _cnt+=1
      ?};
      SZK_PRAC.next()
   !}
?};
SZK_PRAC.cntx_pop();

_dyd:=SZK_PRAC.DYD;
_zakw:=SZK_PRAC.ZAKW;
_wyz:=SZK_PRAC.WYZ;
_del:=SZK_PRAC.DEL;

{? SZK_PRAC.U_KOSZT='T'
|| {? SZK_PRAC.AUTO='T' & _cnt
   || SZK_PRAC.DYD:={? SZK_OPIS.DYD_U='T' || SZK_OPIS.DYD || SZK_OPIS.DYD/_cnt ?};
      SZK_PRAC.ZAKW:={? SZK_OPIS.ZAKW_U='T' || SZK_OPIS.ZAKW || SZK_OPIS.ZAKW/_cnt ?};
      SZK_PRAC.WYZ:={? SZK_OPIS.WYZ_U='T' || SZK_OPIS.WYZ || SZK_OPIS.WYZ/_cnt ?};
      SZK_PRAC.DEL:={? SZK_OPIS.DEL_U='T' || SZK_OPIS.DEL || SZK_OPIS.DEL/_cnt ?};
      SZK_PRAC.SUMA:=SZK_PRAC.DYD+SZK_PRAC.ZAKW+SZK_PRAC.WYZ+SZK_PRAC.DEL
   ?}
|| SZK_PRAC.DYD:=SZK_PRAC.ZAKW:=SZK_PRAC.WYZ:=SZK_PRAC.DEL:=SZK_PRAC.SUMA:=0
?};

_del<>SZK_PRAC.DEL | _dyd<>SZK_PRAC.DYD | _wyz<>SZK_PRAC.WYZ | _zakw<>SZK_PRAC.ZAKW


\oblicz_wd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KO [12.30]
:: OPIS: Obliczenie ważności szkolenia na podstawie miesięcy ważności i daty końcowej szkolenia.
::   WE: _a - SZK_OPIS.DO
::       _b - miesiące ważności
::  OLD: \oblicz_wd/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(date)
|| return(date(0,0,0))
?};
{? var_pres('_b')<>type_of(0)
|| _b:=0
?};
_rok:=_a~1;
_miesiac:=_a~2;
_dzien:=_a~3;
_sum_mies:=_miesiac+_b;
_l:=_sum_mies/12;

{? _l<=1
|| _ost_dzien:=date(_rok,_sum_mies,0)~3;
   {!
   |? _dzien>_ost_dzien
   |! _dzien-=1
   !};
   return(date(_rok,_sum_mies,_dzien))

|? _l>1
|| _lata:=_sum_mies%12;
   _miesiac:=_sum_mies%*12;
   _rok+=_lata;
   _ost_dzien:=date(_rok,_miesiac,0)~3;
   {!
   |? _dzien>_ost_dzien
   |! _dzien-=1
   !};
   return(date(_rok,_miesiac,_dzien))
?};

date(0,0,0)


\mtr_wazne
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KO [12.30]
:: OPIS: Pobranie ilości lat ważności szkolenia z matrycy szkoleń
::   WE: _a - ref UD_SKL
::       _b - ref STN
::       _c - ref SZK_WZO
::  OLD: \mtr_wazne/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
STO.index('UNIQUE');
STO.prefix();
{? STO.find_key(_a,_b)
|| _sto:=STO.ref();
   SZK_STN.index('UNIQUE');
   SZK_STN.prefix();
   {? SZK_STN.find_key(_sto,null,_c)
   || SZK_STN.WAZNE
   ?}
?}


\szk_zap_utworz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KO [12.30]
:: OPIS: Utworzenie zapotrzebowania
::   WE: _a [_SZK_WZO] - wskazanie wiersza tabeli SZK_WZO
::       _b [_P] - wskazanie wiersza tabeli P
::       _c [DATE] - data zapotrzebowania
::       _d [STRING] - temat szkolenia
::       _e [INTEGER] - rok
::       _f [INTEGER] - kwartal
::       _g [INTEGER] - miesiac
::       _h [_UD_SKL] - wskazanie wiersza tabeli UD_SKL
::       _i [_STN] - wskazanie wiersza tabeli STN
::       _j [STRING] - czy stanowisko kierownicze?
::       _k [_KK] - wskazanie wiersza tabeli KK
::       _l [_SZK_DAT] - wskazanie wiersza tabeli SZK_DAT
::  OLD: \utw_zap/szk_prac.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
SZK_ZAP.cntx_psh();
SZK_ZAP.index('SZK_ZAPD');
SZK_ZAP.prefix('M',_a,_b,_c);
{? ~SZK_ZAP.first()
|| SZK_ZAP.clear();
   SZK_ZAP.blank();
   SZK_ZAP.SZK_WZO:=_a;
   SZK_ZAP.DATA:=date();
   SZK_ZAP.P:=_b;
   SZK_ZAP.ZGL_TYP:=exec('kod','ext_slo','ZGL_TYP','M');
   SZK_ZAP.TEMAT:=_d;
   SZK_ZAP.ROK:=_e;
   SZK_ZAP.KWARTAL:=_f;
   SZK_ZAP.MC:=_g;
   SZK_ZAP.TYP:=exec('kod','ext_slo','TYP_ZAP','A');
   SZK_ZAP.POD_REAL:=exec('kod','ext_slo','POD_REAL','M');
   SZK_ZAP.UD_SKL:=_h;
   SZK_ZAP.STN:=_i;
   SZK_ZAP.KK:=_k;
   SZK_ZAP.KADRA:=_j;
   SZK_ZAP.OD:=_c;
   SZK_ZAP.DO:=date(0,0,0);
   SZK_ZAP.SZK_DAT:=_l;
   {? SZK_ZAP.add(1)
   || _wyn:=1
   ?}
?};
SZK_ZAP.cntx_pop();
_wyn


\szk_prac_umlojn_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Przed redagowaniem pola SZK_PRAC.UMLOJN
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ret:=0;
{? SZK_PRAC.P
|| P.cntx_psh();
   P.prefix();
   F_ZATR.cntx_psh();
   F_ZATR.prefix();
   {? SZK_PRAC.P().F_ZATR().KOD='P'
   || UMLOJN.prefix();
      UMLOJN.f_set('NU,DTU',,'"UMLOJN"."TYP"=\'L\' and "UMLOJN"."P"=:_a',SZK_PRAC.P);
      UMLOJN.win_dict('SLO');
      _ret:=1
   ?};
   F_ZATR.cntx_pop();
   P.cntx_pop()
?};
_ret


\szk_prac_umlojn_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła sprawdzająca czy kwota ewentualnej umowy lojalnościowej jest mniejsza niż koszt szkolenia.
::   WE:
::   WY: 1 - Ok:
::             - brak umowy lub
::             - kwota ewentualnej umowy lojalnościowej jest mniejsza niż koszt szkolenia lub
::             - użytkownik zaakceptował sytuację.
::       0 - Kwota umowy lojalnościowej jest większa niż koszt szkolenia.
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
{? SZK_PRAC.UMLOJN
|| UMLOJN.cntx_psh();
   UMLOJN.prefix();
   SZK_PRAC.UMLOJN();
   SZK_OPIS.cntx_psh();
   SZK_OPIS.prefix();
   SZK_PRAC.SZKOL();

   _fk:="form(_a,,2)";
   _uml:=UMLOJN.KW;
   _szk:=SZK_OPIS.SUMA;
   _koszt:=SZK_PRAC.KOSZT;

   {? _szk-_koszt<_uml
   || _ret:=FUN.ask(
         'Wartość umowy lojalnościowej (%1) jest większa niż\n'
         'koszt szkolenia (%2) pomniejszony o kwotę obciążenia pracownika (%3).'@
         [_fk(_uml),_fk(_szk),_fk(_koszt)]+'\n'+
         'Czy na pewno chcesz kontynuować?'@
      )
   ?};
   SZK_OPIS.cntx_pop();
   UMLOJN.cntx_pop()
?};
_ret


\szk_prac_szb_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [21.14]
:: OPIS: Formuła sprawdza, czy dla jednostki organizacyjnej uczestnika zapisywanego na szkolenie, został
::       uwzględniony budżet (o ile do szkolenia podpięty jest budżet)
::   WE: _a - P.ref()
::   WY: 1 - został uwzględniony, 0 - nie został uwzględniony
::----------------------------------------------------------------------------------------------------------------------
_ret:=1;
{? SZK_OPIS.SZB_OKR<>null()
|| _okr:=SZK_OPIS.SZB_OKR;
   _udskl:=null();
   P.cntx_psh();
   P.prefix();
   {? P.seek(_a)
   || _udskl:=P.WYDZIAL
   ?};
   P.cntx_pop();
   SZB_POZ.cntx_psh();
   SZB_POZ.index('UNIQUE');
   SZB_POZ.prefix(_okr,_udskl);
   {? ~SZB_POZ.first()
   || _ret:=0
   ?};
   SZB_POZ.cntx_pop()
?};
_ret


:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 54f54e394a6a6b067ecc5d01a30c1b1f0ca3060eea4007228fbeb97e59066323f8ab61b0fd3caf43f1772f4db4087d2806763b5ed4d08c71ba49a0b111a1d20c44f2f1ec3901951b4580b66b699db84ba9445c637f87e9f8b163e2e2c215012a01f6d24545d16b872b725630c5babcd2f9c591f8c2d4df7e665b2e0a1a98e51d
