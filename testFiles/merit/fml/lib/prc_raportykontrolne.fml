:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: prc_raportykontrolne.fml
:: Utworzony: 18.12.2017
:: Autor: areKc
::======================================================================================================================
:: Zawartość: Formuły do obsługi raportów kontrolnych.
::======================================================================================================================


\ad_hoc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.02]
:: OPIS: Przeglądanie nieobecności ad-hoc.
::   WE:
::   WY:
::  OLD: \rap_nieo/rap_kont.fml
::----------------------------------------------------------------------------------------------------------------------
A_OKR.cntx_psh();
{? __HARM.WYBRANY
|| A_OKR.seek(__HARM.OKR_REF,,1);
   VAR_EDIT.D_OD:=A_OKR.OD;
   VAR_EDIT.D_DO:=A_OKR.DO
|| VAR_EDIT.D_OD:=VAR_EDIT.D_DO:=date()
?};
A_OKR.cntx_pop();
VAR_EDIT.efld_opt('ZAKR_DAT','mark=1',,'D_OD');
VAR_EDIT.efld_opt('ZAKR_DAT','mark=1',,'D_DO');

:: Tabela z danymi.
_TAB:=exec('tab_ad_hoc','prc_raportykontrolne');

:: Okno wertowania.
_mode:='maximized';
_wer:=_TAB.mk_sel('Raport nieobecności ad-hoc'@,,0,'nb_ad_hoc',,,,,'U',,,,,_mode);
_TAB.win_fld(_wer,,'T',,,10,,1,'Nr teczki'@,,'Nr teczki współpracownika'@);
_TAB.win_fld(_wer,,'NAZW',,,15,,1,'Nazwisko'@,,'Nazwisko współpracownika'@);
_TAB.win_fld(_wer,,'IMIE',,,15,,1,'Imię'@,,'Imię współpracownika'@);
_TAB.win_fld(_wer,,'WYDZIAL',,,10,,1,'Jednostka organizacyjna'@,,'Jednostka organizacyjna współpracownika'@);
_TAB.win_fld(_wer,,'STN',,,25,,1,'Stanowisko'@,,'Stanowisko współpracownika'@);
_TAB.win_fld(_wer,,'DATA',,,10,,1,'Data'@,,'Data nieobecności ad-hoc'@);
_TAB.win_fld(_wer,,'NB',,,20,,1,'Rodzaj nieobecności'@,,'Rodzaj nieobecności ad-hoc'@);
_TAB.win_fld(_wer,,'KTO',,,50,,1,'Zarejestrował'@,,'Dane osoby, która zarejestrowała nieobecność'@);
_TAB.win_btn(_wer,'text=%1,icon=xwin16.png:14,panel=bottom'['Anuluj'@],'key:Esc');

:: Okno grupowe.
_wnd:=_TAB.grp_make('Raport nieobecności ad-hoc'@);
_TAB.grp_edit(_wnd,VAR_EDIT,'ZAKR_DAT',,,
   "  {? edit_start(\"exec(\'chk_VAR_EDIT_ZAKR_DAT\',\'prc\')\")
      || params_set(_cfg:=params_get());
         exec('generuj_ad_hoc','prc_raportykontrolne',VAR_EDIT.D_OD,VAR_EDIT.D_DO);
         grp_disp(_cfg.TAB,_cfg.WIN);
         win_activate('wer_ad_hoc')
      || sel_exit()
      ?}
   ",,,_mode,'vareditadhoc'
);
_TAB.grp_splt(_wnd,,'vertical','ad_hoc',',20%');
_TAB.grp_sel(_wnd,,_wer,,,,,,,,,,_mode,'wer_ad_hoc');
_TAB.win_sel(_wnd);
params_set('TAB',_TAB,'WIN',_wer);
_TAB.select();

VAR_EDIT.efld_opt('ZAKR_DAT','mark=0',,'D_OD');
VAR_EDIT.efld_opt('ZAKR_DAT','mark=0',,'D_DO');
''


\tab_ad_hoc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.02]
:: OPIS: Utworzenie tabeli z danymi do wyświetlenia nieobecności ad-hoc.
::   WE:
::   WY: Tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
_TAB:=tab_tmp(3,
   'NAZW','STRING[30]','Nazwisko',
   'IMIE','STRING[30]','Imię',
   'DATA','DATE','Data',
   'T','STRING[9]','Nr teczki',
   'STN','STRING[110]','Stanowisko',
   'WYDZIAL','STRING[16]','Jednostka org.',
   'NB','STRING[40]','Rodzaj nieobecności',
   'KTO','STRING[51]','Kto zarejestrował'
)


\generuj_ad_hoc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MJ [2014]
:: OPIS: Raport nieobecności (ad-hoc jest, brak nieobecności w obszarze Personel)
::   WE: _a - [DATE] Data od
::       _b - [DATE] Data do
::   WY:
::  OLD: \gen_nieo/rap_kont.fml
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of(#0) | var_pres('_b')<>type_of(#0) || return(0) ?};

_TAB:=params_get().TAB;
_TAB.erase();

_podzorg:=
   "  H.prefix(P.ref(),'Z');
      {? H.find_le(_b) || ($('H.'+_a))() || '' ?}
   ";

_nieob:=
   "  N.prefix('N',P.ref());
      N.find_le(_a) & N.DO>=_a
   ";

P.cntx_psh();
OSOBA.cntx_psh();
N.cntx_psh();
N.index('NIEOBECN');
R.cntx_psh();
R.index('RUBKOD');
R.prefix();
N_AH.cntx_psh();
N_AH.index(N_AH.ndx_tmp(,,'DATA',,));
H.cntx_psh();
H.index('_HISTKOD');
{? N_AH.find_ge(_a)
|| {!
   |? N_AH.P();
      {? N_AH.DATA<=_b & ~_nieob(N_AH.DATA)
      || _TAB.blank();
         _TAB.T:=P.T;
         _TAB.NAZW:=P.OSOBA().NAZWISKO;
         _TAB.IMIE:=OSOBA.PIERWSZE;
         _TAB.WYDZIAL:=_podzorg('WYDZIAL().SYMBOL',N_AH.DATA);
         _TAB.STN:=_podzorg('ST().ST',N_AH.DATA);
         _TAB.NB:=$N_AH.TYP().RN+' '+R.RT;
         _TAB.DATA:=N_AH.DATA;
         _TAB.KTO:=N_AH.KTO().OSOBA().NAZWISKO+' '+N_AH.KTO().OSOBA().PIERWSZE;
         _TAB.add()
      ?};
      N_AH.next()
   !}
?};

H.cntx_pop();
N_AH.ndx_drop();
N_AH.cntx_pop();
R.cntx_pop();
N.cntx_pop();
OSOBA.cntx_pop();
P.cntx_pop();
_TAB.first()


\nadmiary
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.02]
:: OPIS: Przeglądanie nadmiarów w czasie pracy.
::   WE:
::   WY:
::  OLD: \rap_nadm/rap_kont.fml
::----------------------------------------------------------------------------------------------------------------------
A_OKR.cntx_psh();
{? __HARM.WYBRANY
|| A_OKR.seek(__HARM.OKR_REF,,1);
   VAR_EDIT.D_OD:=A_OKR.OD;
   VAR_EDIT.D_DO:=A_OKR.DO
|| VAR_EDIT.D_OD:=VAR_EDIT.D_DO:=date()
?};
A_OKR.cntx_pop();
VAR_EDIT.efld_opt('ZAKR_DAT','mark=1',,'D_OD');
VAR_EDIT.efld_opt('ZAKR_DAT','mark=1',,'D_DO');

:: Tabela z danymi.
_TAB:=exec('tab_nadmiar','prc_raportykontrolne',VAR_EDIT.D_OD,VAR_EDIT.D_DO);

:: Okno wertowania
_mode:='maximized';
_wer:=_TAB.mk_sel('Raport nadmiarów w czasie pracy'@,,0,'gen_nadmiar',,,,,'U',,,,,_mode);
_TAB.win_fld(_wer,,'T',,,10,,1,'Nr teczki'@,,'Nr teczki współpracownika'@);
_TAB.win_fld(_wer,,'NAZW',,,15,,1,'Nazwisko'@,,'Nazwisko współpracownika'@);
_TAB.win_fld(_wer,,'IMIE',,,15,,1,'Imię'@,,'Imię współpracownika'@);
_TAB.win_fld(_wer,,'WYDZIAL',,,10,,1,'Jednostka organizacyjna'@,,'Jednostka organizacyjna współpracownika'@);
_TAB.win_fld(_wer,,'STN',,,25,,1,'Stanowisko'@,,'Stanowisko współpracownika'@);
_TAB.win_fld(_wer,,'DATA',,,10,,1,'Data'@,,'Data nadmiaru'@);
_TAB.win_fld(_wer,,'CZAS',,,10,,1,'Grafik'@,,'Czas pracy wg grafiku'@);
_TAB.win_fld(_wer,,'WW_CZAS',,,10,,1,'Wykonanie'@,,'Czas pracy wg zarejestrowanego wykonania'@);
_TAB.win_fld(_wer,,'ZATW',,,4,,1,'Zatwierdzone'@,,'Zatwierdzenie czasu pracy'@);
_TAB.win_fld(_wer,,'KIEROW',,,20,,1,'Kierownik'@,,'Dane osoby, która zatwierdza'@);
_TAB.win_btn(_wer,'text=%1,icon=xwin16.png:14,panel=bottom'['Anuluj'@],'key:Esc');

:: Okno grupowe
_wnd:=_TAB.grp_make('Raport nadmiarów w czasie pracy'@);
_TAB.grp_edit(_wnd,VAR_EDIT,'ZAKR_DAT',,,
   "  {? edit_start(\"exec(\'chk_VAR_EDIT_ZAKR_DAT\',\'prc\')\")
      || params_set(_cfg:=params_get());
         exec('generuj_nadmiar','prc_raportykontrolne',VAR_EDIT.D_OD,VAR_EDIT.D_DO);
         grp_disp(_cfg.TAB,_cfg.WIN);
         win_activate('wer_nadmiar')
      || sel_exit()
      ?}
   ",,,_mode,'vareditnadmiar'
);
_TAB.grp_splt(_wnd,,'vertical','nadmiar',',20%');
_TAB.grp_sel(_wnd,,_wer,,,,,,,,,,_mode,'wer_nadmiar');
_TAB.win_sel(_wnd);
params_set('TAB',_TAB,'WIN',_wer);
_TAB.select();

VAR_EDIT.efld_opt('ZAKR_DAT','mark=0',,'D_OD');
VAR_EDIT.efld_opt('ZAKR_DAT','mark=0',,'D_DO');
''


\tab_nadmiar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.02]
:: OPIS: Utworzenie tabeli z danymi do wyświetlenia nadmiarów wykonania względem grafików.
::   WE: _a - [DATE] Data od
::       _b - [DATE] Data do
::   WY: Tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
sql('
   select T T,
      OSOBA.NAZWISKO NAZW,
      OSOBA.PIERWSZE IMIE,
      \'                \' WYDZIAL,
      STN.ST STN,
      P,
      KAL_BUFF.TYP,
      \' \' ZATW,
      KAL_BUFF.DATA,
      KAL_BUFF.CZAS,
      KAL_BUFF.DATAW,
      KAL_BUFF.CZAS as WW_CZAS,
      \'                                                                      \' KIEROW
   from KAL_BUFF join P join OSOBA join STN using(P.ST,STN.reference)
   where KAL_BUFF.CZY_OKR=\'T\' and KAL_BUFF.GPW=\'G\' and KAL_BUFF.DATA>=to_date(:_a) and KAL_BUFF.DATA<=to_date(:_b)
   order by 2,3,9',
   VAR_EDIT.D_OD,VAR_EDIT.D_DO
)


\generuj_nadmiar
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MJ [2014]
:: OPIS: Raport nadmiarów wykonania względem grafiku.
::   WE: _a - [DATE] Data od
::       _b - [DATE] Data do
::   WY:
::  OLD: \gen_nadm/rap_kont.fml
::----------------------------------------------------------------------------------------------------------------------
_TAB:=params_get().TAB;

:: Uzupełnienie tabeli nowymi danymi
_TAB.erase();
_tab:=exec('tab_nadmiar','prc_raportykontrolne',_a,_b);
{? _tab.first()
|| {!
   |? {! _ii:=1.._tab.fld_num()
      |! _acr:=_tab.fld_acr(_ii);
         ($('_a.'+_acr+':=_b.'+_acr))(_TAB,_tab)
      !};
      _TAB.add();
      _tab.next()
   !}
?};
obj_del(_tab);

P.cntx_psh();
P.use('pracowni');
KAL_BUFF.cntx_psh();
KAL_BUFF.index('PRZNODT');
H.cntx_psh();
H.index('_HISTKOD');
_podzorg:=
   "  H.prefix(P.ref(),'Z');
      {? H.find_le(_b) || ($('H.'+_a))() || '' ?}
   ";
{? _TAB.first()
|| PROGRESS.set(_TAB.size(),'Poszukiwanie rozbieżności pomiędzy grafikiem a wykonaniem.'@);
   R_ODN.cntx_psh();
   R_ODN.index('PRAC');
   {!
   |? _del:=0;
      {? P.seek(_TAB.P,,1)
      || KAL_BUFF.prefix(P.ref(),'W','T',_TAB.DATA);
         _jest_buf:=KAL_BUFF.first();
         _wewy:=exec('get_wewy','prc_wewy',_TAB.DATA,P.ref());
         _jest_wewy:=_wewy.first();

         R_ODN.prefix(P.ref(),_TAB.DATA);
         {? R_ODN.first()
         || {!
            |? _TAB.CZAS-=R_ODN.G;
               R_ODN.next()
            !};
            _TAB.put()
         ?};
         _TAB.CZAS+=*(exec('get_r_odp_czas','prc',P.ref(),_TAB.DATA,null(),'G')/1000/60);
         {? _jest_wewy & ~_jest_buf
         || _TAB.ZATW:={? _wewy.TYP<>'' || 'T' || 'N' ?};
            _TAB.WW_CZAS:=exec('calc_wewy','prc_raportykontrolne',P.ref(),_TAB.DATA)
         || {? KAL_BUFF.first()
            || _TAB.ZATW:='N';
               _TAB.WW_CZAS:=KAL_BUFF.CZAS
            || _del:=1
            ?}
         ?};
         _TAB.put();
:: jeśli przepracowano mniej, niż grafikowany czas, usuwam rekord z listy do wyświetlenia
         {? _TAB.CZAS>=_TAB.WW_CZAS
         || _del:=1
         ?};
         {? ~_del
         || _szef:=exec('prac_nad','stanprac',P.ref(),,'TYPPOZ','PLANCZP',,1,'KPRT',0);
            _TAB.KIEROW:={? _szef.first() || _szef.IMIE+ ' ' +_szef.NAZWISKO || '' ?};
            obj_del(_szef);
            _TAB.WYDZIAL:=_podzorg('WYDZIAL().SYMBOL',_TAB.DATA);
            _TAB.STN:=_podzorg('ST().ST',_TAB.DATA);
            _TAB.put()
         ?};
         obj_del(_wewy)
      || _del:=1
      ?};
      PROGRESS.next();
      {? _del || _TAB.del(,1)=2 || _TAB.next() ?}
   !};
   R_ODN.cntx_pop();
   PROGRESS.close()
?};
H.cntx_pop();
KAL_BUFF.cntx_pop();
P.cntx_pop();
_TAB.first()


\odpracowania
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MJ [2014]
:: OPIS: Raport odpracowań do korekty.
::   WE:
::   WY:
::  OLD: \rap_odpr/rap_kont.fml
::----------------------------------------------------------------------------------------------------------------------
A_OKR.cntx_psh();
{? __HARM.WYBRANY
|| A_OKR.seek(__HARM.OKR_REF,,1);
   VAR_EDIT.D_OD:=A_OKR.OD;
   VAR_EDIT.D_DO:=A_OKR.DO
|| VAR_EDIT.D_OD:=VAR_EDIT.D_DO:=date()
?};
A_OKR.cntx_pop();
VAR_EDIT.efld_opt('ZAKR_DAT','mark=1',,'D_OD');
VAR_EDIT.efld_opt('ZAKR_DAT','mark=1',,'D_DO');

:: Tabela z danymi
_TAB:=exec('tab_odpracowania','prc_raportykontrolne',VAR_EDIT.D_OD,VAR_EDIT.D_DO);

:: Definicja okna wertowania
_mode:='maximized';
_wer:=_TAB.mk_sel('Raport odpracowań do korekty'@,,0,'gen_odprac',,,,,'U',,,,,_mode);
_TAB.win_fld(_wer,,'T',,,10,,1,'Nr teczki'@,,'Nr teczki współpracownika'@);
_TAB.win_fld(_wer,,'NAZW',,,15,,1,'Nazwisko'@,,'Nazwisko współpracownika'@);
_TAB.win_fld(_wer,,'IMIE',,,15,,1,'Imię'@,,'Imię współpracownika'@);
_TAB.win_fld(_wer,,'WYDZIAL',,,10,,1,'Jednostka organizacyjna'@,,'Jednostka organizacyjna współpracownika'@);
_TAB.win_fld(_wer,,'STN',,,25,,1,'Stanowisko'@,,'Stanowisko współpracownika'@);
_TAB.win_fld(_wer,,'DATA',,,10,,1,'Data'@,,''@);
_TAB.win_fld(_wer,,'CW',,,10,,1,'Do odpracowania'@,,'Czas do odpracowania'@);
_TAB.win_fld(_wer,,'ODP',,,10,,1,'Odpracowanie'@,,'Czas odpracowany'@);
_TAB.win_act(_wer,,'Formuła','Wnioski'@@,,,
   "  _TAB:=params_get().TAB;
      P.cntx_psh();
      {? P.seek(_TAB.REF,,1)
      || exec('wnioski_odprac','prc_view',P.ref(),_TAB.DATA,0)
      ?};
      P.cntx_pop()
   ",,1,,,,'W'
);
_TAB.win_btn(_wer,'text=%1,icon=xwin16.png:14,panel=bottom'['Anuluj'@],'key:Esc');

:: Definicja okna grupowego
_wnd:=_TAB.grp_make('Raport odpracowań do korekty'@);
_TAB.grp_edit(_wnd,VAR_EDIT,'ZAKR_DAT',,,
   "  {? edit_start(\"exec(\'chk_VAR_EDIT_ZAKR_DAT\',\'prc\')\")
      || params_set(_cfg:=params_get());
         exec('generuj_odpracowania','prc_raportykontrolne',VAR_EDIT.D_OD,VAR_EDIT.D_DO);
         grp_disp(_cfg.TAB,_cfg.WIN);
         win_activate('wer_odpracowania')
      || sel_exit()
      ?}
   ",,,_mode,'vareditodpacowania'
);
_TAB.grp_splt(_wnd,,'vertical','odpracowania',',20%');
_TAB.grp_sel(_wnd,,_wer,,,,,,,,,,_mode,'wer_odpracowania');
_TAB.win_sel(_wnd);
params_set('TAB',_TAB,'WIN',_wer);
_TAB.select();

VAR_EDIT.efld_opt('ZAKR_DAT','mark=0',,'D_OD');
VAR_EDIT.efld_opt('ZAKR_DAT','mark=0',,'D_DO');
''


\tab_odpracowania
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.02]
:: OPIS: Utworzenie tabeli odpracowań do korekty.
::   WE:
::   WY: Tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
_TAB:=tab_tmp(3,
   'NAZW','STRING[30]','Nazwisko',
   'IMIE','STRING[30]','Imię',
   'DATA','DATE','Data',
   'T','STRING[9]','Nr teczki',
   'ID','INTEGER','ID',
   'REF','STRING[16]','SQL ref',
   'STN','STRING[110]','Stanowisko',
   'WYDZIAL','STRING[16]','Jednostka org.',
   'CW','TIME','Do odpracowania',
   'ODP','TIME','Odpracowanie w tym dniu',
   'NADG','TIME','Nadmiar'
)


\generuj_odpracowania
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MJ [2014]
:: OPIS: Raport odpracowań do korekty.
::   WE: _a - [DATE] Data od
::       _b - [DATE] Data do
::   WY: Tabela tymczasowa
::  OLD: \gen_odpr/rap_kont.fml
::----------------------------------------------------------------------------------------------------------------------
_data_od:={? var_pres('_a')=type_of(date) || _a || return(0) ?};
_data_do:={? var_pres('_b')=type_of(date) || _b || return(0) ?};

_TAB:=params_get().TAB;
_TAB.erase();

_podzorg:=
   "  H.prefix(P.ref(),'Z');
      {? H.find_le(_b) || ($('H.'+_a))() || '' ?}
   ";

P.cntx_psh();
P.index('PRACOSOB');
P.prefix(exec('ref_firma','ustawienia'),__F_ZATR.O);
OSOBA.cntx_psh();
H.cntx_psh();
H.index('_HISTKOD');
R_ODP.cntx_psh();
R_ODP.index('PRAC');
KAL_BUFF.cntx_psh();
KAL_BUFF.index('PRZNODT');
{? P.first()
|| {!
   |? R_ODP.prefix();
      {? R_ODP.f_active() || R_ODP.f_clear() ?};
      R_ODP.f_set(,,'R_ODP.P=:_a and R_ODP.DW>=to_date(:_b) and R_ODP.DW<=to_date(:_c)',P.ref(),_data_od,_data_do);
      {? R_ODP.f_first()
      || {!
         |? _praca:=_norma:=*0;
:: ustawienie kalendarza
            {? P.KAL
            || __KAL.set_cal(P.KAL().NAZWA,R_ODP.DW~1)
            || __KAL.set_cal('standard')
            ?};
            KAL_BUFF.prefix(P.ref(),'G','T',R_ODP.DW);
            _norma:=
               {? KAL_BUFF.first()
               || KAL_BUFF.CZAS
               || *(__KAL.w_hours(R_ODP.DW,R_ODP.DW,,1)*60)
               ?};
            _norma-={? R_ODP.DW=R_ODP.R_ODN().DW || R_ODP.R_ODN().G || *0 ?};
            KAL_BUFF.prefix(P.ref(),'W','T',R_ODP.DW);
            _jest_buf:=KAL_BUFF.first();
            _wewy:=exec('get_wewy','prc_wewy',R_ODP.DW,P.ref());
            _jest_wewy:=_wewy.first();
            obj_del(_wewy);
            {? _jest_wewy & ~_jest_buf
            || _praca:=exec('calc_wewy','prc_raportykontrolne',P.ref(),R_ODP.DW)
            || {? KAL_BUFF.first()
               || _praca:=KAL_BUFF.CZAS
               || N.cntx_psh();
                  N.index('NIEOBECN');
                  N.prefix();
                  {? N.f_active() || N.f_clear() ?};
                  N.f_set(,,'N.KOR=\'N\' and N.P=:_a and N.OD<=to_date(:_b) and N.DO>=to_date(:_b)',P.ref(),R_ODP.DW);
                  {? N.f_first()
                  || {!
                     |? _praca+=*({? N.OD=N.DO
                               || roundmet(1);
:: jeśli godziny nieobecności posiadają część ułamkową, to trzeba z niego zrobić ułamek
:: okresowy, żeby macrobaseowe mechanizmy zaokrąglania nie myliły się w sekundach
                                  _ulamek:=N.NG-N.NG$0;
                                  {? _ulamek=0
                                  || N.NG
                                  || _ile:=(1/_ulamek)$0;
                                     N.NG$0+1/_ile
                                  ?}
                               || __KAL.w_hours(R_ODP.DW,R_ODP.DW,,1)
                                  ?}*60);
                        N.f_next()
                     !}
                  ?};
                  {? N.f_active() || N.f_clear() ?};
                  N.cntx_pop()
               ?}
            ?};
            _doOdpr:=*(exec('get_r_odp_czas','prc',P.ref(),R_ODP.DW,null(),'G')/1000/60);
            _nadg:=_praca-_norma-_doOdpr;
            {?  _praca>=_norma & (_praca-_norma)<_doOdpr
            || _TAB.blank();
               _TAB.T:=P.T;
               _TAB.ID:=P.IP;
               _TAB.REF:=$P.ref();
               _TAB.DATA:=R_ODP.DW;
               _TAB.NAZW:=P.OSOBA().NAZWISKO;
               _TAB.IMIE:=OSOBA.PIERWSZE;
               _TAB.WYDZIAL:=_podzorg('WYDZIAL().SYMBOL',_TAB.DATA);
               _TAB.STN:=_podzorg('ST().ST',_TAB.DATA);
               _TAB.CW:=_doOdpr;
               _TAB.ODP:=_praca-_norma;
               _TAB.add()
            ?};
            R_ODP.f_next()
         !}
      ?};
      {? R_ODP.f_active() || R_ODP.f_clear() ?};
      P.next()
   !}
?};
KAL_BUFF.cntx_pop();
R_ODP.cntx_pop();
H.cntx_pop();
OSOBA.cntx_pop();
P.cntx_pop();
_TAB.first()


\niedobory
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [2014]
:: OPIS: Przeglądanie niedoborów w czasie pracy.
::   WE:
::   WY
::  OLD: \rap_ndb/rap_kont.fml
::----------------------------------------------------------------------------------------------------------------------
A_OKR.cntx_psh();
{? __HARM.WYBRANY
|| A_OKR.seek(__HARM.OKR_REF,,1);
   VAR_EDIT.D_OD:=A_OKR.OD;
   VAR_EDIT.D_DO:=A_OKR.DO
|| VAR_EDIT.D_OD:=VAR_EDIT.D_DO:=date()
?};
A_OKR.cntx_pop();
VAR_EDIT.efld_opt('ZAKR_DAT','mark=1',,'D_OD');
VAR_EDIT.efld_opt('ZAKR_DAT','mark=1',,'D_DO');

:: Tabela z danymi.
_TAB:=exec('tab_niedobor','prc_raportykontrolne',VAR_EDIT.D_OD,VAR_EDIT.D_DO);

:: Okno wertowania.
_mode:='maximized';
_wer:=_TAB.mk_sel('Raport niedoborów w czasie pracy'@,,0,'gen_niedobor',,,,,'U',,,,,_mode);
_TAB.win_fld(_wer,,'T',,,10,,1,'Nr teczki'@,,'Nr teczki współpracownika'@);
_TAB.win_fld(_wer,,'NAZW',,,15,,1,'Nazwisko'@,,'Nazwisko współpracownika'@);
_TAB.win_fld(_wer,,'IMIE',,,15,,1,'Imię'@,,'Imię współpracownika'@);
_TAB.win_fld(_wer,,'WYDZIAL',,,10,,1,'Jednostka organizacyjna'@,,'Jednostka organizacyjna współpracownika'@);
_TAB.win_fld(_wer,,'STN',,,25,,1,'Stanowisko'@,,'Stanowisko współpracownika'@);
_TAB.win_fld(_wer,,'DATA',,,10,,1,'Data'@,,'Data niedoboru'@);
_TAB.win_fld(_wer,,'CZAS',,,10,,1,'Grafik'@,,'Czas pracy wg grafiku'@);
_TAB.win_fld(_wer,,'WW_CZAS',,,10,,1,'Wykonanie'@,,'Czas pracy wg zarejestrowanego wykonania'@);
_TAB.win_fld(_wer,,'WW_NB',,,10,,1,'Nieobecność'@,,'Czas trwania nieobecności'@);
_TAB.win_fld(_wer,,'ZATW',,,4,,1,'Zatwierdzone'@,,'Zatwierdzenie czasu pracy'@);
_TAB.win_fld(_wer,,'KIEROW',,,20,,1,'Kierownik'@,,'Dane osoby, która zatwierdza'@);
_TAB.win_btn(_wer,'text=%1,icon=xwin16.png:14,panel=bottom'['Anuluj'@],'key:Esc');

:: Okno grupowe.
_wnd:=_TAB.grp_make('Raport niedoborów w czasie pracy'@);
_TAB.grp_edit(_wnd,VAR_EDIT,'ZAKR_DAT',,,
   "  {? edit_start(\"exec(\'chk_VAR_EDIT_ZAKR_DAT\',\'prc\')\")
      || params_set(_cfg:=params_get());
         exec('generuj_niedobor','prc_raportykontrolne',VAR_EDIT.D_OD,VAR_EDIT.D_DO);
         grp_disp(_cfg.TAB,_cfg.WIN);
         win_activate('wer_niedobor')
      || sel_exit()
      ?}
   ",,,_mode,'vareditnadmiar'
);
_TAB.grp_splt(_wnd,,'vertical','niedobor',',20%');
_TAB.grp_sel(_wnd,,_wer,,,,,,,,,,_mode,'wer_niedobor');
_TAB.win_sel(_wnd);
params_set('TAB',_TAB,'WIN',_wer);
_TAB.select();

VAR_EDIT.efld_opt('ZAKR_DAT','mark=0',,'D_OD');
VAR_EDIT.efld_opt('ZAKR_DAT','mark=0',,'D_DO');
''


\tab_niedobor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: areKc [18.02]
:: OPIS: Utworzenie tabeli z danymi do wyświetlenia niedoborów wykonania względem grafików.
::   WE: _a - [DATE] Data od
::       _b - [DATE] Data do
::   WY: Tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
sql('
   select T T,
      OSOBA.NAZWISKO NAZW,
      OSOBA.PIERWSZE IMIE,
      \'                \' WYDZIAL,
      STN.ST STN,
      P,
      KAL_BUFF.TYP,
      \' \' ZATW,
      KAL_BUFF.DATA,
      KAL_BUFF.CZAS,
      KAL_BUFF.DATAW,
      CAST (0 as TIME_TYPE) as WW_CZAS,
      CAST (0 as TIME_TYPE) as WW_NB,
      \'                                                                      \' KIEROW
   from KAL_BUFF join P join OSOBA join STN using(P.ST,STN.reference)
   where KAL_BUFF.CZY_OKR=\'T\' and KAL_BUFF.GPW=\'G\' and KAL_BUFF.DATA>=to_date(:_a) and KAL_BUFF.DATA<=to_date(:_b)
   order by 2,3,9',
   _a,_b
)


\generuj_niedobor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PM [2014]
:: OPIS: Raport niedoborów.
::   WE: _a - [DATE] Data od
::       _b - [DATE] Data do
::   WY:
::  OLD: \gen_ndb/rap_kont.fml
::----------------------------------------------------------------------------------------------------------------------
_TAB:=params_get().TAB;

:: Uzupełnienie tabeli nowymi danymi
_TAB.erase();
_tab:=exec('tab_niedobor','prc_raportykontrolne',_a,_b);
{? _tab.first()
|| {!
   |? {! _ii:=1.._tab.fld_num()
      |! _acr:=_tab.fld_acr(_ii);
         ($('_a.'+_acr+':=_b.'+_acr))(_TAB,_tab)
      !};
      _TAB.add();
      _tab.next()
   !}
?};
obj_del(_tab);

P.cntx_psh();
P.use('pracowni');
KAL_BUFF.cntx_psh();
KAL_BUFF.index('PRZNODT');
H.cntx_psh();
H.index('_HISTKOD');
N.cntx_psh;
N.index('NIEOBECN');
_podzorg:=
   "  H.prefix(P.ref(),'Z');
      {? H.find_le(_b) || ($('H.'+_a))() || '' ?}
   ";

_prac:=sql('select distinct P,DATA from :_a',_TAB);
_rub:=__RUB.sys_sql(112)+','+__RUB.sys_sql(1323)+','+__RUB.sys_sql(133)+','+__RUB.sys_sql(1227);
_NB:=sql('
   select N.OD, N.DO, N.REFERENCE as REF , N.P
   from N join R using (N.NB,R.REFERENCE) join :_c using (N.P,:_c.P)
   where N.KOR=\'N\' and R.RN in ('+_rub+') and N.OD<=to_date(:_b) and to_date(:_a)<=N.DO
   order by P, OD, DO',
   _a,_b,_prac
);

{? _TAB.first()
|| PROGRESS.set(_TAB.size(),'Poszukiwanie niedoborów w wykonaniu.'@);
   R_ODN.cntx_psh();
   R_ODN.index('PRAC');
   R_WYK.cntx_psh();
   R_WYK.index('R_WYKDO');
   {!
   |? _del:=0;
      _NB.prefix(_TAB.P);
      {? P.seek(_TAB.P,,1)
         &
         P.GRAFIK='T'
         &
         ~(_NB.find_le(_a) & _NB.DO>=_b)
         &
         ~(_NB.find_le(_TAB.DATA) & _NB.DO>=_TAB.DATA)
      || exec('kal_prac','personel',_TAB.DATA~1);
         N.prefix('N',P.ref());
         {? N.find_le(_TAB.DATA) & N.DO>=_TAB.DATA
         || _TAB.WW_NB:=*({? N.OD=N.DO || N.NG || __KAL.w_hours(_TAB.DATA,_TAB.DATA) ?}*60)
         ?};
         R_ODN.prefix(P.ref(),_TAB.DATA);
         {? R_ODN.first()
         || _jest:=1;
            {!
            |? _TAB.CZAS-=R_ODN.G;
               R_ODN.next()
            !};
            _TAB.put
         ?};
:: do czasu grafikowanego doliczam czas, jaki został zadeklarowany do dopracowania w danym dniu
         _TAB.CZAS+=*(exec('get_r_odp_czas','prc',P.ref(),_TAB.DATA,null(),'G')/1000/60);
         _TAB.put();
         R_WYK.prefix(P.ref(),_TAB.DATA);
         {? R_WYK.first()
         || {!
            |? _TAB.CZAS-=R_WYK.GO;
               R_WYK.next()
            !};
            _TAB.put()
         ?};
         KAL_BUFF.prefix(P.ref(),'W','T',_TAB.DATA);
         _jest_buf:=KAL_BUFF.first();
         _wewy:=exec('get_wewy','prc_wewy',_TAB.DATA,P.ref());
         _jest_wewy:=_wewy.first();

         {? _jest_wewy & ~_jest_buf
         || _TAB.ZATW:={? _wewy.TYP<>'' || 'T' || 'N' ?};
            _TAB.WW_CZAS:=exec('calc_wewy','prc_raportykontrolne',P.ref(),_TAB.DATA)
         || _TAB.ZATW:='N';
             {? KAL_BUFF.first()
             || _TAB.WW_CZAS:=KAL_BUFF.CZAS
             ?}
         ?};
         _TAB.put();
:: jeśli grafikowany czas był mniejszy niż (czas przepracowany + czas nieobecności), to niedobór nie występuje
         {? _TAB.CZAS<=_TAB.WW_CZAS+_TAB.WW_NB
         || _del:=1
         ?};
         {? ~_del
         || _szef:=exec('prac_nad','stanprac',P.ref(),,'TYPPOZ','PLANCZP',,1,'KPRT',0);
            _TAB.KIEROW:={? _szef.first() || _szef.IMIE+ ' ' +_szef.NAZWISKO || '' ?};
            obj_del(_szef);
            _TAB.WYDZIAL:=_podzorg('WYDZIAL().SYMBOL',_TAB.DATA);
            _TAB.STN:=_podzorg('ST().ST',_TAB.DATA);
            _TAB.put()
         ?};
         obj_del(_wewy)
      || _del:=1
      ?};
      PROGRESS.next();
      {? _del
      || _TAB.del(,1)=2
      || _TAB.next()
      ?}
   !};
   R_WYK.cntx_pop();
   R_ODN.cntx_pop();
   PROGRESS.close()
?};
N.cntx_pop();
H.cntx_pop();
KAL_BUFF.cntx_pop();
P.cntx_pop();
_TAB.first()


\calc_wewy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MhL
:: OPIS: Na podstawie kartoteki WeWy (R_REJ_WW) wylicza przepracowany czas dla podanej daty kwalifikacji.
::   WE: _a - [REFERENCE] P.ref
::       _b - [DATE] Data kwalifikacji
::  OLD: \calc_wewy/rap_kont.fml
::----------------------------------------------------------------------------------------------------------------------
_p_ref:={? var_pres('_a')=type_of(null()) || _a || null() ?};
_data:={? var_pres('_b')=type_of(#0) || _b || date(0,0,0) ?};
{? _p_ref<>null() & _data<>#0
|| R_REJ_WW.cntx_psh();
   _suma:=*0;
   {! _ind:=-1..1
   |! _data_p:=_data+_ind;
      {? _data_p~2<>_data~2 | _data_p=_data
      || MASK.Use('R_REJ_WW',_data_p~1,_data_p~2);
         R_REJ_WW.index('R_REJ_WX');
         R_REJ_WW.prefix(P.ref(),_data);

         {? R_REJ_WW.last()
         || _foundLastExit:=_prevData:=0;
            _prevTyp:='';
            {!
            |? {? ~_foundLastExit & R_REJ_WW.TP='WYJŚCIE'
               || _prevData:=R_REJ_WW.DZ;
                  _prevGodz:=R_REJ_WW.GD;
                  _prevTyp:=R_REJ_WW.TP;
                  _foundLastExit:=1
               ?};
               _foundLastExit=0 & R_REJ_WW.prev()
            !};
            {? _foundLastExit
            || {!
               |? {? R_REJ_WW.TP='WYJŚCIE'
                  || _prevGodz:=R_REJ_WW.GD;
                     _prevData:=R_REJ_WW.DZ;
                     _prevTyp:=R_REJ_WW.TP;
                     R_REJ_WW.prev()
                  || _suma+=
                        {? R_REJ_WW.DZ < _prevData
                        || _prevGodz+time(24,0,0)-R_REJ_WW.GD
                        || _prevGodz-R_REJ_WW.GD
                        ?};
                     _prevGodz:=R_REJ_WW.GD;
                     _prevData:=R_REJ_WW.DZ;
                     _prevTyp:=R_REJ_WW.TP;
                     R_REJ_WW.prev()
                  ?}
               !}
            ?}
         ?}
      ?}
   !};
   R_REJ_WW.cntx_pop();
   _suma
|| *0
?}

:Sign Version 2.0 jowisz:1045 2023/08/02 14:23:19 5b054ab9875dd8baf96ec4d83162f0aa5a070b6c1fceebda552b338847fbfd015df9f957258c73aa18e480f957039aa946276a51d9cfc32745d192b0747e12b546e31b8bd7e6dbd998aa75a2765b3412f1b55862b1ddf67b6a407d1aca263208e3b5dc8a9e76a3c0fa344ac35562092f536e00ccc566b20c4c2689a12fe867d8
