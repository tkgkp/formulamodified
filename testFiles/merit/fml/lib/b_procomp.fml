:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: b_proc_comp.fml
:: Utworzony: 20.09.2022
:: Autor: AWI
::======================================================================================================================
:: Zawartość:
::======================================================================================================================


\procomp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Porównaj definicje
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=exec('env','b_procomp');
params_set('env',_env);

{? _env.init() || _env.select() ?}


\env
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Środowisko porównania procesów
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::UWAGA: _fld, i _mth to formułki pomocnicze, żeby wygodniej tworzyć tablice i komentować poszczególne jej elementy
::       powiedzmy, że to bedzie pole
         _fld:="31+form(_a)";
::       powiedzmy, że to bedzie metoda
         _mth:="31+form(_a)";

_env:=obj_new
(
:: pola
    _fld('TMP',                  'Porównanie tymczasowe')
   ,_fld('OBJ2CMP',              'Objekty do porównania')
   ,_fld('LIST',                 'Lista elementów procesu')
   ,_fld('PROP',                 'Własności elementów procesu')
   ,_fld('PROP_GRP',             'Grupy własności elementów procesu')
   ,_fld('SRC',                  'Proces źródłowy')
   ,_fld('DST',                  'Proces docelowy')
   ,_fld('DIFF',                 'Różnice')
   ,_fld('B_CONN_FROM',          'Powiązanie - element z')
:: metody
   ,_mth('init',                 'Init')
   ,_mth('select',               'Wyświetlenie prównania')
);
:: Porównanie tymczasowe
_env.TMP:='N';
:: OBJ2CMP
_env.OBJ2CMP:=obj_new('TAB','NDX_UNIK','NDX_SEL');
_Obj2cmp:=_env.OBJ2CMP.TAB:=tab_tmp(
   2
   ,'DESC1','STRING[150]','Opis 1'@
   ,'DESC2','STRING[150]','Opis 2'@
   ,'DESC3','STRING[150]','Opis 3'@
   ,'DESC4','STRING[150]','Opis 4'@
   ,'SEL','STRING[1]','Wybrany'@
   ,'REF','STRING[16]','Reference'@
   );
_env.OBJ2CMP.NDX_UNIK:=_Obj2cmp.index('?');
_env.OBJ2CMP.NDX_SEL:=_Obj2cmp.ndx_tmp(,,'SEL',,);
:: LIST
_env.LIST:=obj_new('TAB','NDX_UNIK','NDX_DIFF','NDX_REF','NDX_COMP','NDX_COMPARE');
_List:=_env.LIST.TAB:=tab_tmp
(
   1
   ,'LEVEL','INTEGER','Poziom'@
   ,'SSYMBOL','STRING[100]','Symbol elementu w procesie źródłowym'@
   ,'SESYMBOL','STRING[100]','Symbol ogólny elementu w procesie źródłowym'@
   ,'SROLE','STRING[100]','Rola w procesie źródłowym'@
   ,'SCLASS','STRING[30]','Klasa elementu w procesie źródłowym'@
   ,'SREF','STRING[16]','$B_PREL.ref() w procesie źródłowym'@
   ,'COMPARE','STRING[2]','Porównanie'
   ,'DSYMBOL','STRING[100]','Symbol elementu w procesie w procesie docelowym'@
   ,'DESYMBOL','STRING[100]','Symbol ogólny elementu w procesie docelowym'@
   ,'DROLE','STRING[100]','Rola w procesie docelowym'@
   ,'DCLASS','STRING[30]','Klasa elementu w procesie docelowym'@
   ,'DREF','STRING[16]','$B_PREL.ref() w procesie docelowym'@
   ,'DIFF','STRING[1]','Różne'@
   ,'LEVELS','STRING[100]','Poziomy'@
   ,'VCLASS','STRING[30]','Klasa elementu'@
   ,'VESYMBOL','STRING[100]','Symbol ogólny elementu'@
);
_env.LIST.NDX_UNIK:=_List.ndx_tmp(,,'LEVEL',,,'SSYMBOL',,,'SESYMBOL',,,'DSYMBOL',,,'DESYMBOL',,);
_env.LIST.NDX_DIFF:=_List.ndx_tmp(,,'DIFF',,,'LEVEL',,,'SSYMBOL',,,'SESYMBOL',,,'DSYMBOL',,,'DESYMBOL',,);
_env.LIST.NDX_REF:=_List.ndx_tmp(,,'SREF',,,'DREF',,,'LEVEL',,);
_env.LIST.NDX_COMP:=_List.ndx_tmp(,,'LEVEL',,,'SESYMBOL',,,'SCLASS',,);
_env.LIST.NDX_COMPARE:=_List.ndx_tmp(,,'COMPARE',,);
:: PROP
_env.PROP:=obj_new('TAB','NDX_UNIK','NDX_DIFF','NDX_COMP','NDX_CMP1','NDX_TYP');
_Prop:=_env.PROP.TAB:=tab_tmp(
   6
   ,'TMP','STRING[1]','Tymczasowe porównanie'
   ,'LIST','STRING[16]','Element z listy'@
   ,'TYP','STRING[8]','Typ właściwości'@
   ,'GRP','STRING[200]','Grupa'@
   ,'PGRP','STRING[200]','Podgrupa'@
   ,'NR','INTEGER','Nr'@
   ,'NAME','STRING[255]','Nazwa'@
   ,'CMP','STRING[1]','Porównywać'@
   ,'VAL_SRC','STRING[255]','Wartość w procesie źródłowym'@
   ,'COMPARE','STRING[2]','Porównanie'
   ,'VAL_DST','STRING[255]','Wartość w procesie docelowym'@
   ,'DIFF','STRING[1]','Różne'@
);
_env.PROP.NDX_UNIK:=_Prop.index('?');
_env.PROP.NDX_DIFF:=_Prop.ndx_tmp(,,'TMP',,,'DIFF',,,'LIST',,,'TYP',,,'GRP',,,'PGRP',,,'NR',,);
_env.PROP.NDX_COMP:=_Prop.ndx_tmp(,,'TMP',,,'LIST',,,'TYP',,,'COMPARE',,,'NR',,);
_env.PROP.NDX_CMP1:=_Prop.ndx_tmp(,,'TMP',,,'LIST',,,'COMPARE',,,'TYP',,,'NR',,);
_env.PROP.NDX_TYP:=_Prop.ndx_tmp(,,'TMP',,,'TYP',,);
:: PROP
_env.PROP_GRP:=obj_new('TAB','NDX_UNIK','NDX_DIFF','NDX_COMP');
_Prop_grp:=_env.PROP_GRP.TAB:=tab_tmp(
   5
   ,'TMP','STRING[1]','Tymczasowe porównanie'
   ,'LIST','STRING[16]','Element z listy'@
   ,'TYP','STRING[8]','Typ właściwości'@
   ,'GRP','STRING[200]','Grupa'@
   ,'PGRP','STRING[200]','Podgrupa'@
   ,'COMPARE','STRING[2]','Porównanie'
   ,'DIFF','STRING[1]','Różne'@
);
_env.PROP_GRP.NDX_UNIK:=_Prop_grp.index('?');
_env.PROP_GRP.NDX_DIFF:=_Prop_grp.ndx_tmp(,,'TMP',,,'DIFF',,,'LIST',,,'TYP',,,'GRP',,,'PGRP',,);
_env.PROP_GRP.NDX_COMP:=_Prop_grp.ndx_tmp(,,'TMP',,,'LIST',,,'TYP',,,'GRP',,,'PGRP',,,'COMPARE',,);
:: DIFF
_env.DIFF:='N';
_env.B_CONN_FROM:=null();
_env.init:="params_exec('env_init','b_procomp')";
_env.select:="params_exec('list_select','b_procomp')";
_env


\env_init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Środowisko porównania procesów - init
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? params_exec('procomp_select','b_procomp')
||
   VAR_DEL.delete('__ASOC');
   params_exec('procomp_anal','b_procomp');
   VAR_DEL.delete('__ASOC')
?}


\procomp_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Wybór procesów do porównania
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_Obj2cmp:=_env.OBJ2CMP.TAB;
_ndx_unik:=_env.OBJ2CMP.NDX_UNIK;

B_PROC.cntx_psh();
B_PROC.index('SYM');
B_PROC.prefix('N',REF.FIRMA);
_loop:=B_PROC.first();
{!
|? _loop
|!
   _Obj2cmp.blank();
   _Obj2cmp.DESC1:=B_PROC.SYMBOL;
   _Obj2cmp.DESC2:=B_PROC.VER;
   _Obj2cmp.DESC3:=B_PROC.NAME;
   _Obj2cmp.REF:=$B_PROC.ref();
   _loop:=_Obj2cmp.add() & B_PROC.next()
!};
B_PROC.cntx_pop();

_Obj2cmp.index(_ndx_unik);
_Obj2cmp.prefix('');
{? _Obj2cmp.find_key(B_PROC.SYMBOL,B_PROC.VER,) || _Obj2cmp.SEL:='T'; _Obj2cmp.put() ?};
_wer:=_Obj2cmp.mk_sel('Procesy'@,,,'procomp',,,,,'U');
_Obj2cmp.win_fld(_wer,,'SEL',,,3,,,,,,2,,"'T'","'N'");
_Obj2cmp.win_fld(_wer,,'DESC1',,,30,,,'Symbol'@);
_Obj2cmp.win_fld(_wer,,'DESC2',,,5,,,'Wersja'@);
_Obj2cmp.win_fld(_wer,,'DESC3',,,30,,,'Nazwa'@);
_fb:="
   _env:=params_get().env;
   _Obj2cmp:=_env.OBJ2CMP.TAB;
   _ndx_sel:=_env.OBJ2CMP.NDX_SEL;
   _ref:=_Obj2cmp.ref();
   _Obj2cmp.cntx_psh();
   _Obj2cmp.index(_ndx_sel);
   _Obj2cmp.prefix('T');
   _loop:=_Obj2cmp.first();
   {!
   |? _loop
   |!
      {? _Obj2cmp.ref()= _ref
      ||
         _Obj2cmp.cntx_psh(); _Obj2cmp.prefix(); _Obj2cmp.SEL:='N'; _Obj2cmp.put(); _Obj2cmp.cntx_pop()
      ?};
      _loop:=_Obj2cmp.next()
   !};
   _size:=_Obj2cmp.size();
   _Obj2cmp.cntx_pop();
   {? _size=2
   ||
      FUN.info('Należy zaznaczyć dwa procesy do porównania.'@)
   ||
      _Obj2cmp.SEL:='T';
      _Obj2cmp.put()
   ?}
";
_Obj2cmp.win_act(_wer,,'Formuła','Wybierz'@@,,,_fb,,1,1,,,'W');
_Obj2cmp.win_btn(_wer,'text=%1, panel=right'['Wybierz'@@],'menu:W');
_fb:="_tab:=cur_tab(); _tab.SEL:='N'; _tab.put()";
_Obj2cmp.win_act(_wer,,'Formuła','Odbierz'@@,,,_fb,,,1,,,'O');
_Obj2cmp.win_btn(_wer,'text=%1, panel=right'['Odbierz'@@],'menu:O');
_fb:="
   _env:=params_get().env;
   _Obj2cmp:=_env.OBJ2CMP.TAB;
   _ndx_sel:=_env.OBJ2CMP.NDX_SEL;
   _ref:=_Obj2cmp.ref();
   _Obj2cmp.cntx_psh();
   _Obj2cmp.index(_ndx_sel);
   _Obj2cmp.prefix('T');
   _loop:=_Obj2cmp.first();
   _size:=_Obj2cmp.size();
   _Obj2cmp.cntx_pop();
   {? _size=2 || sel_exit() || FUN.info('Należy zaznaczyć dwa procesy do porównania.'@) ?}
";
_Obj2cmp.win_act(_wer,,'Formuła','Porównaj'@@,,,_fb,,,,,,'P');
_Obj2cmp.win_btn(_wer,'text=%1, panel=bottom'['Porównaj'@@],'menu:P');
_Obj2cmp.win_btn(_wer,'text=%1, panel=bottom'['Anuluj'@@],'key:Esc');
_Obj2cmp.win_sel(_wer);
params_set(params_get());
_Obj2cmp.select(,1)


\procomp_anal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Analiza porównywanych procesów
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_Obj2cmp:=_env.OBJ2CMP.TAB;
_ndx_sel:=_env.OBJ2CMP.NDX_SEL;
_Prop:=_env.PROP.TAB;
_ndx_typ:=_env.PROP.NDX_TYP;

_src:=dst:='';
:: progress
_argsprog:=exec('init','#progress');
_argsprog.gl_smode('#');
_bconnprog:=tab_tmp(1,'REF','STRING[16]','$B_CONN.ref()');
_Obj2cmp.cntx_psh();
_Obj2cmp.index(_ndx_sel);
_Obj2cmp.prefix('T');
_loop:=_Obj2cmp.first();
_ii:=0;
{!
|? _loop
|!
   _ii+=1;
   _bconnprog.erase();
   B_CONN.cntx_psh();
   B_CONN.index('ORDER');
   B_CONN.prefix(ref_num(_Obj2cmp.REF));
   _size:=B_CONN.size();
   B_CONN.cntx_pop();
   _argsprog.add_progress('Przygotowanie elementów procesu %1'@[$_ii],_size);
   _loop:=_Obj2cmp.next()
!};
_size:=1;
_argsprog.add_progress('Porównanie własności elemetnów'@,_size);
_argsprog.HEIGHT:=10;
exec('start','#progress',_argsprog);
::
:: przygotowanie elementów
::
_loop:=_Obj2cmp.first();
_ii:=0;
{!
|? _loop
|!
   _ii+=1;
   _sym:=exec('FindAndGet','#table',B_PROC,_Obj2cmp.REF,,"'%1 (%2)'[B_PROC.SYMBOL,B_PROC.VER]",'');
   {? _ii=1 || _src:=_Obj2cmp.REF; _env.SRC:=_sym || _dst:=_Obj2cmp.REF; _env.DST:=_sym ?};
:: progress
   _argsprog.next_phase();
   _bconnprog.erase();
   B_CONN.cntx_psh();
   B_CONN.index('ORDER');
   B_CONN.prefix(ref_num(_Obj2cmp.REF));
   _loop:=B_CONN.first();
   {!
   |? _loop
   |!
      _bconnprog.REF:=$B_CONN.ref();
      _loop:=_bconnprog.add() & B_CONN.next()
   !};
   B_CONN.cntx_pop();
   _argsprog.ph_ssize(_ii,_bconnprog.size());
:: właściowości nagłówka procesu
   params_exec('prop_b_proc','b_procomp',_ii,_Obj2cmp.REF);
:: przygotowanie elementów
   params_exec('list','b_procomp',_ii,_Obj2cmp.REF,,,,_argsprog,_bconnprog);
   _argsprog.ph_sname(_ii,'Przygotowanie elementów procesu %1: %2'@[$_ii,'OK']);
   _loop:=_Obj2cmp.next()
!};
_Obj2cmp.cntx_pop();
::
:: porównanie własności elementów
::
:: progress
_List:=_env.LIST.TAB;
_ndx_ref:=_env.LIST.NDX_REF;
_List.cntx_psh();
_List.index(_ndx_ref);
_List.prefix($null(),);
_size:=_List.size();
_List.cntx_pop();
{? _src<>'' & _dst<>'' || _size+=1 ?};
_argsprog.ph_ssize(3,_size);
_argsprog.next_phase();
{? _src<>'' & _dst<>''
||
   exec('prop_compare','b_procomp',_src,_dst);
   exec('next_step','#progress',_argsprog,3)
?};
_Prop.cntx_psh();
_Prop.index(_ndx_typ);
_Prop.prefix('N','B_PROC',);
_loop:=_Prop.first();
{!
|? _loop
|!
   _Prop.LIST:='';
   _loop:=_Prop.put() & _Prop.next()
!};
_Prop.cntx_pop();
params_exec('list_compare','b_procomp',_argsprog,_size);
:: progress
_argsprog.ph_sname(3,'Porównanie własności elemetnów: %1'@['OK']);
_argsprog.ctr_stop();

1


\list
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Przygotowanie listy elementów
::   WE: _a - 1/2 - źródłowy/docelowy
::       _b - B_PROC.ref() - proces
::       _c - B_PREL.ref() - przetwarzany element
::       _d - poziom
::       _e - lista już przetworzonych elementów
::       _f - progress
::       _g - progress - b_conn
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_src_dst:=_a;
_src:=_src_dst=1;
_b_proc:=exec('FindAndGet','#table',B_PROC,_b,,,null());
_b_prel:=null();
_level:=0;
_visited:='';
_argsprog:=_f;
_bconnprog:=_g;

{? var_pres('_c')=type_of(null())
||
   _b_prel:=_c;
   _level:=_d;
   _visited:=_e
?};
_env:=params_get().env;
_List:=_env.LIST.TAB;
_ndx_ref:=_env.LIST.NDX_REF;

_visited_on:=1;

_return:=0;
{? _visited_on
||
   _return:=$_b_prel<>'' & _visited*($_b_prel)
||
   _List.cntx_psh();
   _List.index(_ndx_ref);
   {? _src
   ||
      _List.prefix($_b_prel,$null,)
   ||
      _List.prefix($null,$_b_prel,)
   ?};
   _return:=_List.first();
   _List.cntx_pop()
?};
{? _return
||
:: element był już analizowany
   return()
?};
_visited+=$_b_prel;
B_PREL.cntx_psh();
B_PREL.index('PROCSTAR');
_loop:=
   {? _level=0
   ||
:: przetwarzanie zdarzeń startowych
      B_PREL.prefix(_b_proc,'T');
      B_PREL.first()
   ||
:: przetwarzanie kolejnego elementu
      B_PREL.prefix();
      B_PREL.seek(_b_prel)
   ?};
{!
|? _loop
|!
   _b_prel:=B_PREL.ref();
:: dodanie _b_prel do _List
   _List.cntx_psh();
   _List.index(_ndx_ref);
   _List.blank();
   {? _src
   ||
      _nfind:=_visited_on=0 | ~_List.find_key($_b_prel,$null,_level);
      {? _nfind
      ||
         _List.LEVEL:=_level;
         _List.LEVELS:=$_List.LEVEL;
         _List.SSYMBOL:=B_PREL.SYMBOL;
         _List.SESYMBOL:=_List.VESYMBOL:=params_exec('FindAndGet','#table',B_ELE,B_PREL.B_ELE,,"B_ELE.SYMBOL",'');
         _List.SCLASS:=_List.VCLASS:=B_PREL.CLASS;
         _List.SROLE:=B_PREL.B_ROLE().NAME;
         _List.SREF:=$_b_prel;
         _List.COMPARE:='<<';
         _List.DIFF:='T'
      ?}
   ||
      _nfind:=_visited_on=0 | ~_List.find_key($null,$_b_prel,_level);
      {? _nfind
      ||
         _List.LEVEL:=_level;
         _List.LEVELS:=$_List.LEVEL;
         _List.DSYMBOL:=B_PREL.SYMBOL;
         _List.DESYMBOL:=_List.VESYMBOL:=params_exec('FindAndGet','#table',B_ELE,B_PREL.B_ELE,,"B_ELE.SYMBOL",'');
         _List.DCLASS:=_List.VCLASS:=B_PREL.CLASS;
         _List.DROLE:=B_PREL.B_ROLE().NAME;
         _List.DREF:=$_b_prel;
         _List.COMPARE:='>>';
         _List.DIFF:='T'
      ?}
   ?};
   {? _nfind
   ||
      {? _List.add() || exec('prop','b_procomp',_a) ?}
   ||
      params_exec('prop_b_conn','b_procomp',_a)
   ?};
   _List.cntx_pop();
:: wyjścia z _b_prel
   B_CONN.cntx_psh();
   B_CONN.index('ORDER');
   B_CONN.prefix(_b_proc,B_PREL.ref());
   _loop:=B_CONN.first();
   {!
   |? _loop
   |!
:: rekurencja dla każdego elementu powiązanego z wyjściem (B_CONN.TO)
      _env.B_CONN_FROM:=B_CONN.FROM;
      params_exec('list','b_procomp',_a,_b,B_CONN.TO,_level+1,_visited,_argsprog,_bconnprog);
      {? _bconnprog.find_key($B_CONN.ref()) || _bconnprog.del(); exec('next_step','#progress',_argsprog,_src_dst) ?};
      _loop:=B_CONN.next()
   !};
   B_CONN.cntx_pop();
   _loop:={? _level=0 || B_PREL.next() || 0 ?}
!};
B_PREL.cntx_pop()


\list_compare
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Porównanie elementów
::   WE: _a - progress
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_argsprog:=_a;
_env:=params_get().env;
_List:=_env.LIST.TAB;
_ndx_ref:=_env.LIST.NDX_REF;
_ndx_comp:=_env.LIST.NDX_COMP;
_List.cntx_psh();
_List.index(_ndx_ref);
_List.prefix($null(),);
_loop:=_List.first();
{!
|? _loop
|!
   _list_src:='';
   _list_dst:=_List.DREF;
   _del:=0;
   _dsymbol:=_List.DSYMBOL;
   _desymbol:=_List.DESYMBOL;
   _drole:=_List.DROLE;
   _dclass:=_List.DCLASS;
   _dref:=_List.DREF;
   _List.cntx_psh();
   _List.index(_ndx_comp);
   _List.prefix(_List.LEVEL,_List.DESYMBOL,_List.DCLASS,);
   _loop:=_List.first();
   {!
   |? _loop
   |!
      {? _List.DREF='' & _List.SSYMBOL=_dsymbol
      ||
         _level:=$_List.LEVEL;
         _list_src:=_List.SREF;
         _List.cntx_psh();
         _List.index(_ndx_ref);
         _List.prefix(_list_src,_list_dst,);
         _was_compare:=_List.first;
         {? _was_compare
         ||
            _List.LEVELS+=','+_level;
            _List.put()
         ?};
         _List.cntx_pop();
         {? _was_compare
         ||
            _List.del();
            _del:=1
         ||
            _prop_compare:=exec('prop_compare','b_procomp',_list_src,_list_dst);
            {? _prop_compare>0
            ||
:: powiązanie elementów
               _List.DSYMBOL:=_dsymbol;
               _List.DESYMBOL:=_List.VESYMBOL:=_desymbol;
               _List.DCLASS:=_List.VCLASS:=_dclass;
               _List.DROLE:=_drole;
               _List.DREF:=_dref;
               _List.COMPARE:={? _prop_compare=1 || '==' || '<>' ?};
               _List.DIFF:={? _List.COMPARE='==' || 'N' || 'T' ?};
               _del:=_List.put()
            ?}
         ?}
      ?};
      _loop:=_del=0 & _List.next()
   !};
   _List.cntx_pop();

   {? 1& _del=0
   ||
:: sklejenie pozycji o tym samym B_PREL.ref() w procesie docelowym, których nie znaleziono w procesie źródłowym
      _level:=$_List.LEVEL;
      _list_ref:=_List.ref();
      _List.cntx_psh();
      _List.index(_ndx_ref);
      _List.prefix('',_list_dst);
      _del:=0;
      {? _List.first() & _List.ref()<>_list_ref
      ||
         _del:=1;
         _List.LEVELS+=','+_level;
         _List.put()
      ?};
      _List.cntx_pop()
   ?};

   exec('next_step','#progress',_argsprog,3);
   _loop:={? _del || _List.del(,1)=2 || _List.next() ?}
!};

:: sklejenie pozycji o tym samym B_PREL.ref() w procesie źródłowym, których nie znaleziono w procesie docelowym
_List.index(_ndx_ref);
_List.prefix();
_loop:=1& _List.first();
{!
|? _loop
|!
   _del:=0;
   _level:=$_List.LEVEL;
   _list_ref:=_List.ref();
   {? _List.DREF=''
   ||
      _List.cntx_psh();
      _List.prefix(_List.SREF,'');
      _del:=0;
      {? _List.first() & _List.ref()<>_list_ref
      ||
         _del:=1;
         _List.LEVELS+=','+_level;
         _List.put()
      ?};
      _List.cntx_pop()
   ?};
   _loop:={? _del || _List.del(,1)=2 || _List.next() ?}
!};

:: powiązanie elementów wg roli z porównaniem poziomów
_env.TMP:='X';
_List.index(_ndx_ref);
_List.prefix($null(),);
_loop:=1& _List.first();
_ndx:=_List.ndx_tmp(,,'SESYMBOL',,,'SSYMBOL',,,'SROLE',,,'SCLASS',,);
{!
|? _loop
|!
   _list_src:='';
   _list_dst:=_List.DREF;
   _del:=0;
   _dsymbol:=_List.DSYMBOL;
   _desymbol:=_List.DESYMBOL;
   _dclass:=_List.DCLASS;
   _drole:=_List.DROLE;
   _dref:=_List.DREF;
   _levels:=_List.LEVELS;
   _List.cntx_psh();
   _List.index(_ndx);
   _List.prefix(_List.DESYMBOL,_List.DSYMBOL,_List.DROLE,_List.DCLASS,);
   _loop:=_List.first();
   {!
   |? _loop
   |!
      {? _List.DREF='' & (_levels+',')*($_List.LEVEL+',')
      ||
         _level:=$_List.LEVEL;
         _list_src:=_List.SREF;
         _List.cntx_psh();
         _List.index(_ndx_ref);
         _List.prefix(_list_src,_list_dst,);
         _was_compare:=_List.first;
         {? _was_compare
         ||
            _List.LEVELS+=','+_level;
            _List.put()
         ?};
         _List.cntx_pop();
         {? _was_compare
         ||
            _List.del();
            _del:=1
         ||
            _prop_compare:=exec('prop_compare','b_procomp',_list_src,_list_dst);
            {? _prop_compare>0
            ||
:: powiązanie elementów
               _List.DSYMBOL:=_dsymbol;
               _List.DESYMBOL:=_List.VESYMBOL:=_desymbol;
               _List.DCLASS:=_List.VCLASS:=_dclass;
               _List.DROLE:=_drole;
               _List.DREF:=_dref;
               _List.COMPARE:={? _prop_compare=1 || '==' || '<>' ?};
               _List.DIFF:={? _List.COMPARE='==' || 'N' || 'T' ?};
               _List.LEVELS+=' (%1)'[_levels];
               _del:=_List.put()
            ?}
         ?}
      ?};
      _loop:=_del=0 & _List.next()
   !};
   _List.cntx_pop();
   _loop:={? _del || _List.del(,1)=2 || _List.next() ?}
!};
:: powiązanie elementów wg roli
_env.TMP:='X';
_List.index(_ndx_ref);
_List.prefix($null(),);
_loop:=1& _List.first();
_ndx:=_List.ndx_tmp(,,'SESYMBOL',,,'SSYMBOL',,,'SROLE',,,'SCLASS',,);
{!
|? _loop
|!
   _list_src:='';
   _list_dst:=_List.DREF;
   _del:=0;
   _dsymbol:=_List.DSYMBOL;
   _desymbol:=_List.DESYMBOL;
   _dclass:=_List.DCLASS;
   _drole:=_List.DROLE;
   _dref:=_List.DREF;
   _levels:=_List.LEVELS;
   _List.cntx_psh();
   _List.index(_ndx);
   _List.prefix(_List.DESYMBOL,_List.DSYMBOL,_List.DROLE,_List.DCLASS,);
   _loop:=_List.first();
   {!
   |? _loop
   |!
      {? _List.DREF=''
      ||

      _level:=$_List.LEVEL;
      _list_src:=_List.SREF;
      _List.cntx_psh();
      _List.index(_ndx_ref);
      _List.prefix(_list_src,_list_dst,);
      _was_compare:=_List.first;
      {? _was_compare
      ||
         _List.LEVELS+=','+_level;
         _List.put()
      ?};
      _List.cntx_pop();
      {? _was_compare
      ||
         _List.del();
         _del:=1
      ||
         _prop_compare:=exec('prop_compare','b_procomp',_list_src,_list_dst);
         {? _prop_compare>0
         ||
:: powiązanie elementów
            _List.DSYMBOL:=_dsymbol;
            _List.DESYMBOL:=_List.VESYMBOL:=_desymbol;
            _List.DCLASS:=_List.VCLASS:=_dclass;
            _List.DROLE:=_drole;
            _List.DREF:=_dref;
            _List.COMPARE:={? _prop_compare=1 || '==' || '<>' ?};
            _List.DIFF:={? _List.COMPARE='==' || 'N' || 'T' ?};
            _List.LEVELS+=' (%1)'[_levels];
            _del:=_List.put()
         ?}
      ?}

      ?};
      _loop:=_del=0 & _List.next()
   !};
   _List.cntx_pop();
   _loop:={? _del || _List.del(,1)=2 || _List.next() ?}
!};
:: powiązanie elementów wg nazwy
_env.TMP:='X';
_List.index(_ndx_ref);
_List.prefix($null(),);
_loop:=1& _List.first();
_ndx:=_List.ndx_tmp(,,'SESYMBOL',,,'SSYMBOL',,,'SCLASS',,);
{!
|? _loop
|!
   _list_src:='';
   _list_dst:=_List.DREF;
   _del:=0;
   _dsymbol:=_List.DSYMBOL;
   _desymbol:=_List.DESYMBOL;
   _dclass:=_List.DCLASS;
   _drole:=_List.DROLE;
   _dref:=_List.DREF;
   _levels:=_List.LEVELS;
   _List.cntx_psh();
   _List.index(_ndx);
   _List.prefix(_List.DESYMBOL,_List.DSYMBOL,_List.DCLASS,);
   _loop:=_List.first();
   {!
   |? _loop
   |!
      {? _List.DREF=''
      ||

      _level:=$_List.LEVEL;
      _list_src:=_List.SREF;
      _List.cntx_psh();
      _List.index(_ndx_ref);
      _List.prefix(_list_src,_list_dst,);
      _was_compare:=_List.first;
      {? _was_compare
      ||
         _List.LEVELS+=','+_level;
         _List.put()
      ?};
      _List.cntx_pop();
      {? _was_compare
      ||
         _List.del();
         _del:=1
      ||
         _prop_compare:=exec('prop_compare','b_procomp',_list_src,_list_dst);
         {? _prop_compare>0
         ||
:: powiązanie elementów
            _List.DSYMBOL:=_dsymbol;
            _List.DESYMBOL:=_List.VESYMBOL:=_desymbol;
            _List.DCLASS:=_List.VCLASS:=_dclass;
            _List.DROLE:=_drole;
            _List.DREF:=_dref;
            _List.COMPARE:={? _prop_compare=1 || '==' || '<>' ?};
            _List.DIFF:={? _List.COMPARE='==' || 'N' || 'T' ?};
            _List.LEVELS+=' (%1)'[_levels];
            _del:=_List.put()
         ?}
      ?}

      ?};
      _loop:=_del=0 & _List.next()
   !};
   _List.cntx_pop();
   _loop:={? _del || _List.del(,1)=2 || _List.next() ?}
!};
_env.TMP:='N';

_List.cntx_pop()


\list_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Środowisko porównania procesów - select
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_List:=_env.LIST.TAB;
_ndx_unik:=_env.LIST.NDX_UNIK;
_Prop:=_env.PROP.TAB;

:: Własności
_wer_prop:=_Prop.mk_sel('Własności'@,,,'procomprop',,,,,'U');
_Prop.win_fld(_wer_prop,,'NR',,,8,,,'Nr'@);
_Prop.win_fld(_wer_prop,,'NAME',,,50,,,'Nazwa'@);
_Prop.win_fld(_wer_prop,,'VAL_SRC',,,50,,,'Wartość w %1'@[_env.SRC]);
_Prop.win_fld(_wer_prop,,'COMPARE',,,2,,,'Porównanie'@);
_Prop.win_fld(_wer_prop,,'VAL_DST',,,50,,,'Wartość w %1'@[_env.DST]);
_fb:="exec('legenda','color','B_PROCOMP#01')";
_Prop.win_act(_wer_prop,,'Formuła','Legenda'@,,,_fb);
_fb:="params_exec('rekprzed','color','B_PROCOMP#01')";
_Prop.win_act(_wer_prop,,'Rekord',,,,_fb);
:: Elementy
_wer_list:=_List.mk_sel('Elementy'@,,,'procomplist',,,,,'U');
_List.win_fld(_wer_list,,'LEVEL',,,3,,,'Poziom'@);
_List.win_fld(_wer_list,,'VCLASS',,,10,,,'Klasa'@);
_List.win_fld(_wer_list,,'VESYMBOL',,,40,,,'Symbol ogólny'@);
_List.win_fld(_wer_list,,'SSYMBOL',,,30,,,'Symbol w %1'@[_env.SRC]);
_List.win_fld(_wer_list,,'SROLE',,,20,,,'Rola'@);
_List.win_fld(_wer_list,,'COMPARE',,,2,,,'Porównanie'@);
_List.win_fld(_wer_list,,'DROLE',,,20,,,'Rola'@);
_List.win_fld(_wer_list,,'DSYMBOL',,,30,,,'Symbol w %1'@[_env.DST]);
_List.win_fld(_wer_list,,'LEVELS',,,20,,,'Poziomy'@);
_fb:="params_exec('prop_disp','b_procomp')";
_List.win_act(_wer_list,,'Formuła','Własności'@,,,_fb,,1);
_fb:="params_exec('ele_compare','b_procomp')";
_List.win_act(_wer_list,,'Formuła','Porównaj elementy'@,,,_fb);
_fb:="
   _env:=params_get().env;
   {? _env.DIFF='T'
   || {? FUN.ask('Czy wyświetlić wszystkie własności?'@) || _env.DIFF:='N' ?}
   || {? FUN.ask('Czy wyświetlić tylko różniące się własności?'@) || _env.DIFF:='T' ?}
   ?};
   _List:=_env.LIST.TAB;
   {? _env.DIFF='T'
   || _List.index(_env.LIST.NDX_DIFF); _List.prefix('T')
   || _List.index(_env.LIST.NDX_UNIK); _List.prefix()
   ?}
";
_List.win_act(_wer_list,,'Formuła','Zmień zakres'@,,,_fb);
_fb:="exec('legenda','color','B_PROCOMP#01')";
_List.win_act(_wer_list,,'Formuła','Legenda'@,,,_fb);
_fb:="
   {? _a=1
   ||
      _List:=cur_tab(1,1);
      _compare:=_List.COMPARE;
      _List.actions_grayed(cur_win(1),{? _compare='<<' | _compare='>>' || '' || 'P' ?})
   ?};
   params_exec('rekprzed','color','B_PROCOMP#01')
";
_List.win_act(_wer_list,,'Rekord',,,,_fb);
:: Wynik porównania
_wer_grp:=_Prop.grp_make('Wynik porównania'@,,'procompcmp');
   _fb:="
      _env:=params_get().env;
      _Prop:=_env.PROP.TAB;
      {? _env.DIFF='T'
      || _Prop.index(_env.PROP.NDX_DIFF); _Prop.prefix('N','T','','B_PROC',)
      || _Prop.index(_env.PROP.NDX_UNIK); _Prop.prefix('N','','B_PROC',)
      ?};
      _Prop.first()
   ";
   _Prop.grp_sel(_wer_grp,,_wer_prop,'Własności'@,,,,,_fb,,,,'maximized');
   _fb:="
      _env:=params_get().env;
      _List:=_env.LIST.TAB;
      {? _env.DIFF='T'
      || _List.index(_env.LIST.NDX_DIFF); _List.prefix('T')
      || _List.index(_env.LIST.NDX_UNIK); _List.prefix()
      ?}
   ";
   _Prop.grp_sel(_wer_grp,_List,_wer_list,'Elementy'@,,,,,_fb,,,,'maximized');
_Prop.win_sel(_wer_grp);
params_set(params_get());
_Prop.select()


\prop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Własności elementu
::   WE: _a - 1/2 - źródłowy/docelowy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
params_exec('prop_b_prel','b_procomp',_a);
params_exec('prop_b_choice','b_procomp',_a);
params_exec('prop_b_conn','b_procomp',_a);
params_exec('prop_b_port','b_procomp',_a);
params_exec('prop_b_sigprt','b_procomp',_a);
params_exec('prop_b_timer','b_procomp',_a)


\prop_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Dodanie właściwości tabeli _b
::   WE: _a - 1/2 - źródłowy/docelowy
::       _b - akronim tabeli
::       _c - grupa
::       _d - podgrupa
::       _e - 0/1 dodawać grupę
::       [_f] - LIST
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_src:=_a=1;
_tab_acr:=_b;
_grp:=_c;
_pgrp:=_d;
_grp_add:=_e;
_list:={? var_pres('_f')=type_of('') || _f || '' ?};

_env:=params_get().env;
_List:=_env.LIST.TAB;
_list:={? _list<>'' || _list |? _List.SREF<>'' || _List.SREF || _List.DREF  ?};
_Prop:=_env.PROP.TAB;
_prop_ndx_unik:=_env.PROP.NDX_UNIK;
_Prop_grp:=_env.PROP_GRP.TAB;
_prop_grp_ndx_unik:=_env.PROP_GRP.NDX_UNIK;

_Prop.index(_prop_ndx_unik);
_Prop.prefix('N');

{? _Prop.find_key(_list,_tab_acr,_grp,_pgrp,) || return() ?};

_Tab:=($_tab_acr)();
_fld_num:=_Tab.fld_num();
{! _ii:=1.._fld_num
|!
   _Prop.blank();
   _Prop.TMP:='N';
   _Prop.LIST:=_list;
   _Prop.TYP:=_tab_acr;
   _Prop.GRP:=_grp;
   _Prop.PGRP:=_pgrp;
   _Prop.NR:=_ii;
   _Prop.NAME:=_Tab.fld_name(_ii);
   _Prop.CMP:={? (4+_Tab.fld_comm(_ii))='NCMP' || 'N' || 'T' ?};
   _Prop.COMPARE:={? _src || '<<' || '>>' ?};
   _Prop.DIFF:='T';
   _fld_acr:=_Tab.fld_acr(_ii);
   _val:=($'%1.%2'[_tab_acr,_fld_acr])();
   _typ:=var_pres('_val');
   {? _src
   ||
      _Prop.VAL_SRC:=exec('val','b_procomp',_val)
   ||
      _Prop.VAL_DST:=exec('val','b_procomp',_val)
   ?};
   {? _Prop.add() & _grp_add
   ||
      _Prop_grp.cntx_psh();
      _Prop_grp.index(_prop_grp_ndx_unik);
      _Prop_grp.prefix('N',_Prop.LIST,_Prop.TYP,_Prop.GRP,_Prop.PGRP,);
      {? ~_Prop_grp.first()
      ||
         _Prop_grp.blank();
         _Prop_grp.TMP:='N';
         _Prop_grp.LIST:=_Prop.LIST;
         _Prop_grp.TYP:=_Prop.TYP;
         _Prop_grp.GRP:=_Prop.GRP;
         _Prop_grp.PGRP:=_Prop.PGRP;
         _Prop_grp.add()
      ?};
      _Prop_grp.cntx_pop()
   ?}
!}


\prop_b_choice
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Własności B_CONN
::   WE: _a - 1/2 - źródłowy/docelowy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_src:=_a=1;

_env:=params_get().env;
_List:=_env.LIST.TAB;

_b_prel:={? _src || _List.SREF || _List.DREF ?};
_b_prel:=exec('FindAndGet','#table',B_PREL,_b_prel,,,null());
_b_proc:=exec('FindAndGet','#table',B_PREL,_b_prel,,"B_PREL.B_PROC",null());
:: wyjścia z _b_prel
B_CHOICE.cntx_psh();
B_CHOICE.index('B_PREL');
B_CHOICE.prefix(_b_prel);
_loop:=B_CHOICE.first();
{!
|? _loop
|!
   _b_ele:=exec('FindAndGet','#table',B_PREL,B_CHOICE.PREL_DST,,"B_PREL.B_ELE",null());
   _grp:=exec('FindAndGet','#table',B_ELE,_b_ele,,"B_ELE.SYMBOL",'');
   _class:=exec('FindAndGet','#table',B_PREL,B_CHOICE.PREL_DST,,"B_PREL.CLASS",null());
   _grp_suffix:=exec('FindAndGet','#table',B_PREL,B_CHOICE.PREL_DST,,"B_PREL.SYMBOL",'');
   {? _grp_suffix=''
   ||
      {? _class='B_EVENT'
      || _grp_suffix:=exec('FindAndGet','#table',B_PREL,B_CHOICE.PREL_DST,,"exec('val','b_procomp',B_PREL.B_SIGNAL)",'')
      ?}
   ?};
   {? _grp_suffix<>'' || _grp+=' - '+_grp_suffix ?};
   {? _grp<>''
   ||
      _pgrp:='';
      _grp_add:=1;
      params_exec('prop_add','b_procomp',_src,'B_CHOICE',_grp,_pgrp,_grp_add)
   ?};
   _loop:=B_CHOICE.next()
!};
B_CHOICE.cntx_pop()


\prop_b_conn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Własności B_CONN
::   WE: _a - 1/2 - źródłowy/docelowy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_src:=_a=1;

_env:=params_get().env;
_List:=_env.LIST.TAB;

_grp_suffixes:=tab_tmp(1,'SUFFIX','STRING[255]',,'COUNT','REAL',);

_b_prel:={? _src || _List.SREF || _List.DREF ?};
_b_prel:=exec('FindAndGet','#table',B_PREL,_b_prel,,,null());
_b_proc:=exec('FindAndGet','#table',B_PREL,_b_prel,,"B_PREL.B_PROC",null());
:: wyjścia z _b_prel
B_CONN.cntx_psh();
{! _jj:=1..2
|!
   {? _jj=1
   || B_CONN.index('ORDER')
   || B_CONN.index('TO')
   ?};
   _lp:=0;
   _b_conn:=null();
   B_CONN.prefix(_b_proc,_b_prel);
   _loop:=B_CONN.first();
   {!
   |? _loop
   |!
      _lp+=1;
      _prel_link:={? _jj=1 || B_CONN.TO || B_CONN.FROM ?};
      _grp_suffix1:=exec('FindAndGet','#table',B_PREL,_prel_link,,"B_PREL.SYMBOL",'');
      _class:=exec('FindAndGet','#table',B_PREL,_prel_link,,"B_PREL.CLASS",null());
      {? _grp_suffix1=''
      ||
         {? _class='B_EVENT'
         || _grp_suffix1:=exec('FindAndGet','#table',B_PREL,_prel_link,,"exec('val','b_procomp',B_PREL.B_SIGNAL)",'')
         ?}
      ?};
      {? _grp_suffixes.find_key(_grp_suffix1,)
      || _grp_suffixes.COUNT+=1;
         _grp_suffixes.put()
      || _grp_suffixes.SUFFIX:=_grp_suffix1;
         _grp_suffixes.COUNT:=1;
         _grp_suffixes.add()
      ?};
      {? _jj=1 | _env.B_CONN_FROM=B_CONN.FROM
      ||
         _b_ele:=exec('FindAndGet','#table',B_PREL,_prel_link,,"B_PREL.B_ELE",null());
         _grp:=exec('FindAndGet','#table',B_ELE,_b_ele,,"B_ELE.SYMBOL",'');
         _grp_suffix:=_grp_suffixes.SUFFIX;
         {? _grp_suffix<>'' || _grp+=' - '+_grp_suffix ?};
         _grp:={? _jj=1 || 'WY - ' || 'WE - ' ?}+_grp;
         {? _grp<>''
         ||
            _pgrp:='';
            {? _jj=2 || _pgrp:={? _class='B_GATE' || $B_CONN.ORDER || $_lp ?} ?};
            _grp_add:=1;
            _b_conn:=B_CONN.ref()
         ?}
      ?};
      _loop:=B_CONN.next()
   !};
   {? B_CONN.seek(_b_conn)
   ||
      {? _jj=2 & _grp_suffixes.find_key(_grp_suffix) & _grp_suffixes.COUNT=1 || _pgrp:=_grp_suffix ?};
      params_exec('prop_add','b_procomp',_src,'B_CONN',_grp,_pgrp,_grp_add)
   ?}
!};
B_CONN.cntx_pop()


\prop_b_port
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Własności B_PORT
::   WE: _a - 1/2 - źródłowy/docelowy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_src:=_a=1;

_env:=params_get().env;
_List:=_env.LIST.TAB;

_b_prel:={? _src || _List.SREF || _List.DREF ?};
_b_prel:=exec('FindAndGet','#table',B_PREL,_b_prel,,,null());
_b_proc:=exec('FindAndGet','#table',B_PREL,_b_prel,,"B_PREL.B_PROC",null());
_b_ele:=exec('FindAndGet','#table',B_PREL,_b_prel,,"B_PREL.B_ELE",null());
:: wyjścia z _b_prel
B_PORT.cntx_psh();
B_PORT.index('UNIK');
{! _jj:=1..2
|!
   {? _jj=1
   ||
      B_PORT.prefix(_b_ele,null)
   ||
      B_PORT.prefix(null(),_b_prel)
   ?};
   _loop:=B_PORT.first();
   {!
   |? _loop
   |!
      _grp:='%1 - %2 - %3'[B_PORT.KIND,{? _jj=1 || 'ACT' || 'DYN' ?},B_PORT.SYMBOL];
      {? _grp<>''
      ||
:: B_PORT - porty
         _pgrp:='';
         _grp_add:=1;
         params_exec('prop_add','b_procomp',_src,'B_PORT',_grp,_pgrp,_grp_add);
:: B_VALPRT - Wartości
         B_VALPRT.cntx_psh();
         B_VALPRT.index('UNIK');
         B_VALPRT.prefix(_b_prel,B_PORT.ref());
         {? B_VALPRT.first()
         ||
            _pgrp:='';
            _grp_add:=0;
            params_exec('prop_add','b_procomp',_src,'B_VALPRT',_grp,_pgrp,_grp_add)
         ?};
         B_VALPRT.cntx_pop();
:: B_POCONN - Powiązania portów
         B_POCONN.cntx_psh();
         B_POCONN.index('TO');
         B_POCONN.prefix(B_PORT.ref(),_b_proc,_b_prel);
         _loop:=B_POCONN.first();
         {!
         |? _loop
         |!
            _from_conn:=exec('FindAndGet','#table',B_CONN,B_POCONN.B_CONN,,"exec('val','b_procomp',B_CONN.FROM)",'');
            _from_prel:=exec('val','b_procomp',B_POCONN.PREL_SRC);
            _from_port:=exec('FindAndGet','#table',B_PORT,B_POCONN.FROM,,"B_PORT.SYMBOL",'');
            _pgrp:='%1. Port:[%2].%3'[_from_conn,_from_prel,_from_port];
            _grp_add:=1;
            params_exec('prop_add','b_procomp',_src,'B_POCONN',_grp,_pgrp,_grp_add);
            _loop:=B_POCONN.next()
         !};
         B_POCONN.cntx_pop()
      ?};
      _loop:=B_PORT.next()
   !}
!};
B_PORT.cntx_pop()


\prop_b_proc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Własności B_PROC
::   WE: _a - 1/2 - źródłowy/docelowy
::       _b - $B_PROC.ref()
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_src:=_a=1;
_list:=_b;

B_PROC.cntx_psh();
B_PROC.prefix();
{? B_PROC.seek(_b)
||
   _grp:='';
   _pgrp:='';
   _grp_add:=0;
   params_exec('prop_add','b_procomp',_src,'B_PROC',_grp,_pgrp,_grp_add,_list)
?};
B_PROC.cntx_pop()


\prop_b_prel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Własności B_PREL
::   WE: _a - 1/2 - źródłowy/docelowy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_src:=_a=1;

_grp:='';
_pgrp:='';
_grp_add:=0;
params_exec('prop_add','b_procomp',_src,'B_PREL',_grp,_pgrp,_grp_add)


\prop_b_sigprt
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Własności B_SIGPRT
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_src:=_a=1;

_env:=params_get().env;
_List:=_env.LIST.TAB;

_b_prel:={? _src || _List.SREF || _List.DREF ?};
_b_prel:=exec('FindAndGet','#table',B_PREL,_b_prel,,,null());
_b_ele:=exec('FindAndGet','#table',B_PREL,_b_prel,,"B_PREL.B_ELE",null());
:: wyjścia z _b_prel
B_SIGPRT.cntx_psh();
B_SIGPRT.index('PRELTYP');
B_SIGPRT.prefix(_b_prel);
_loop:=B_SIGPRT.first();
{!
|? _loop
|!
   _grp:='%1'[B_SIGPRT.B_SIGTYP().PARAMETR];
   {? _grp<>''
   ||
      _pgrp:='';
      _grp_add:=1;
      params_exec('prop_add','b_procomp',_src,'B_SIGPRT',_grp,_pgrp,_grp_add)
   ?};
   _loop:=B_SIGPRT.next()
!};
B_SIGPRT.cntx_pop()


\prop_b_timer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Własności B_TIMER
::   WE: _a - 1/2 - źródłowy/docelowy
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_src:=_a=1;

_env:=params_get().env;
_List:=_env.LIST.TAB;

_b_prel:={? _src || _List.SREF || _List.DREF ?};
_b_prel:=exec('FindAndGet','#table',B_PREL,_b_prel,,,null());

B_TIMER.cntx_psh();
B_TIMER.index('B_PREL');
B_TIMER.prefix(_b_prel);
{? B_TIMER.first()
||
   _grp:='';
   _pgrp:='';
   _grp_add:=0;
   params_exec('prop_add','b_procomp',_src,'B_TIMER',_grp,_pgrp,_grp_add)
?};
B_TIMER.cntx_pop()


\prop_compare
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Porównanie własności
::   WE: _a - element źródłowy
::       _b - element docelowy
::   WY: 0 - różne elementy
::       1 - równe elementy
::       2 - nierówne elementy
::----------------------------------------------------------------------------------------------------------------------
_src:=_a;
_dst:=_b;

_result:=1;

_env:=params_get().env;
_tmp_org:=_env.TMP;
_tmp:={? _env.TMP='X' || 'N' || _tmp_org ?};
_Prop:=_env.PROP.TAB;
_prop_ndx_unik:=_env.PROP.NDX_UNIK;
_prop_ndx_cmp1:=_env.PROP.NDX_CMP1;
_Prop_grp:=_env.PROP_GRP.TAB;
_prop_grp_ndx_unik:=_env.PROP_GRP.NDX_UNIK;

do();
_Prop.index(_prop_ndx_unik);
_Prop.prefix(_tmp,_dst,);
_loop:=_Prop.first();
{? ~_loop || _result:=0 ?};
{!
|? _loop
|!
   _del:=0;
   _val_dst:=_Prop.VAL_DST;
   _Prop.cntx_psh();
   _next:={? _Prop.next() || _Prop.ref() || null() ?};
   _Prop.cntx_pop();
   _Prop.cntx_psh();
   _Prop.prefix(_tmp,_src,_Prop.TYP,_Prop.GRP,_Prop.PGRP,_Prop.NR);
   _find1:=_find2:=0;
   _loop:=_Prop.first();
   {!
   |? _loop
   |!
::      {? _Prop.TYP='B_POCONN'
::         & _Prop.GRP='IN - ACT - EDOKUM'
::         &  _Prop.VAL_SRC='Akceptacja merytoryczna B_ACTION' || debug() ?};
      {? _find1=null() & _Prop.COMPARE='<<' & _Prop.VAL_SRC=_val_dst || _find1:=_Prop.ref() ?};
      {? _find2=null() & _Prop.COMPARE='<<' || _find2:=_Prop.ref() ?};
      _loop:=(_find1=null() | _find2=null()) & _Prop.next()
   !};
   {? _Prop.seek(_find1) | _Prop.seek(_find2)
   ||
      _Prop.prefix(_tmp,_src,);
      _Prop.VAL_DST:=_val_dst;
      _Prop.COMPARE:='nn';
      {? _Prop.CMP='T'
      ||
         _Prop.COMPARE:={? _Prop.VAL_SRC=_Prop.VAL_DST || '==' || '<>' ?};
         {? _Prop.COMPARE='<>' || _result:=2 ?}
      ?};
      _Prop.DIFF:={? _Prop.COMPARE='==' | _Prop.COMPARE='nn' || 'N' || 'T' ?};
      _del:=_Prop.put();
      _typ:={? _Prop.TYP='B_VALPRT' | _Prop.TYP='B_POCONN' || 'B_PORT' || _Prop.TYP ?};
      _Prop_grp.cntx_psh();
      _Prop_grp.index(_prop_grp_ndx_unik);
      {? _Prop.TYP='B_POCONN' | _Prop.TYP='B_CONN'
      ||
         _Prop_grp.prefix(_tmp,_Prop.LIST,_Prop.TYP,_Prop.GRP,_Prop.PGRP,);
         {? _Prop_grp.first()
            & _Prop.COMPARE<>'nn'
            & (_Prop_grp.COMPARE='' | _Prop_grp.COMPARE='==')
         ||
            _Prop_grp.COMPARE:=_Prop.COMPARE;
            _Prop_grp.DIFF:={? _Prop_grp.COMPARE='==' | _Prop.COMPARE='nn' || 'N' || 'T' ?};
            _Prop_grp.put()
         ?}
      ?};
      _Prop_grp.prefix(_tmp,_Prop.LIST,_typ,_Prop.GRP,);
      {? _Prop_grp.first()
         & _Prop.COMPARE<>'nn'
         & (_Prop_grp.COMPARE='' | _Prop_grp.COMPARE='==' | _tmp_org='T' | _tmp_org='X' & _Prop_grp.COMPARE='<<')
      ||
         _Prop_grp.COMPARE:=_Prop.COMPARE;
         _Prop_grp.DIFF:={? _Prop_grp.COMPARE='==' | _Prop.COMPARE='nn' || 'N' || 'T' ?};
         _Prop_grp.put()
      ?};
      _Prop_grp.cntx_pop()

   |? _Prop.TYP='B_PORT' | _Prop.TYP='B_VALPRT' | _Prop.TYP='B_POCONN'
         |
      _tmp_org='T' | _tmp_org='X'
   ||
      _Prop.LIST:=_src;
      _result:=2;
      _Prop.put();
      _typ:={? _Prop.TYP='B_VALPRT' | _Prop.TYP='B_POCONN' || 'B_PORT' || _Prop.TYP ?};
      _Prop_grp.cntx_psh();
      _Prop_grp.index(_prop_grp_ndx_unik);
      {? _Prop.TYP='B_POCONN'
      ||
         _Prop_grp.prefix(_tmp,_Prop.LIST,_Prop.TYP,_Prop.GRP,_Prop.PGRP,);
         {? _Prop_grp.first()
         ||
            _Prop_grp.COMPARE:=_Prop.COMPARE;
            _Prop_grp.DIFF:={? _Prop_grp.COMPARE='==' || 'N' || 'T' ?};
            _Prop_grp.put()
         ||
            _Prop_grp.blank();
            _Prop_grp.TMP:=_tmp;
            _Prop_grp.LIST:=_Prop.LIST;
            _Prop_grp.TYP:=_Prop.TYP;
            _Prop_grp.GRP:=_Prop.GRP;
            _Prop_grp.PGRP:=_Prop.PGRP;
            _Prop_grp.COMPARE:=_Prop.COMPARE;
            _Prop_grp.DIFF:={? _Prop_grp.COMPARE='==' || 'N' || 'T' ?};
            _Prop_grp.add()
         ?}
      ?};
      _pgrp:={? _typ='B_CONN' || _Prop.PGRP || '' ?};
      _Prop_grp.prefix(_tmp,_Prop.LIST,_typ,_Prop.GRP,_pgrp,);
      {? _Prop_grp.first()
      ||
         _Prop_grp.COMPARE:=_Prop.COMPARE;
         _Prop_grp.DIFF:={? _Prop_grp.COMPARE='==' || 'N' || 'T' ?};
         _Prop_grp.put()
      ||
         _Prop_grp.blank();
         _Prop_grp.TMP:=_tmp;
         _Prop_grp.LIST:=_Prop.LIST;
         _Prop_grp.TYP:=_typ;
         _Prop_grp.GRP:=_Prop.GRP;
         _Prop_grp.PGRP:=_pgrp;
         _Prop_grp.COMPARE:=_Prop.COMPARE;
         _Prop_grp.DIFF:={? _Prop_grp.COMPARE='==' || 'N' || 'T' ?};
         _Prop_grp.add()
      ?};
      _Prop_grp.cntx_pop()
   ?};
   _Prop.cntx_pop();
   _loop:={? _del || _Prop.del(,1)=2 || _Prop.seek(_next) ?}
!};
{? _result=0
||
   ~~

|? _Prop.first()
||
   _result:=0; undo()
||
   _Prop.cntx_psh();
   _Prop.index(_prop_ndx_cmp1);
   _Prop.prefix(_tmp,_src,'<<');
   _loop:=_Prop.first();
   {!
   |? _loop
   |!
      _result:=2;
      _Prop_grp.cntx_psh();
      _Prop_grp.index(_prop_grp_ndx_unik);
      _Prop_grp.prefix(_tmp,_Prop.LIST,_Prop.TYP,_Prop.GRP,_Prop.PGRP,);
      {? _Prop_grp.first()
      ||
         _Prop_grp.COMPARE:=_Prop.COMPARE;
         _Prop_grp.DIFF:={? _Prop_grp.COMPARE='==' || 'N' || 'T' ?};
         _Prop_grp.put()
      ||
         _Prop_grp.blank();
         _Prop_grp.TMP:=_tmp;
         _Prop_grp.LIST:=_Prop.LIST;
         _Prop_grp.TYP:=_Prop.TYP;
         _Prop_grp.GRP:=_Prop.GRP;
         _Prop_grp.COMPARE:=_Prop.COMPARE;
         _Prop_grp.DIFF:={? _Prop_grp.COMPARE='==' || 'N' || 'T' ?};
         _Prop_grp.add()
      ?};
      {? _Prop.PGRP<>''
      ||
         _typ:={? _Prop.TYP='B_VALPRT' | _Prop.TYP='B_POCONN' || 'B_PORT' || _Prop.TYP ?};
         _Prop_grp.prefix(_tmp,_Prop.LIST,_typ,_Prop.GRP,'',);
         {? _Prop_grp.first()
         ||
            _Prop_grp.COMPARE:=_Prop.COMPARE;
            _Prop_grp.DIFF:={? _Prop_grp.COMPARE='==' || 'N' || 'T' ?};
            _Prop_grp.put()
         ?}
      ?};

      _Prop_grp.cntx_pop();
      _loop:=_Prop.next()
   !};
   _Prop.cntx_pop()
?};
end();
_result


\prop_disp_grp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Własności połączenia - wyświetl
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_tmp:=_env.TMP;
_List:=_env.LIST.TAB;
_Prop:=_env.PROP.TAB;
_ndx_unik:=_env.PROP.NDX_UNIK;
_Prop_grp:=_env.PROP_GRP.TAB;

_typ:=_Prop_grp.TYP;

:: Własności
_wer_prop:=_Prop.mk_sel('Własności'@,,,'procomprop',,,,,'U');
_Prop.win_fld(_wer_prop,,'NR',,,8,,,'Nr'@);
_Prop.win_fld(_wer_prop,,'NAME',,,50,,,'Nazwa'@);
_Prop.win_fld(_wer_prop,,'VAL_SRC',,,50,,,'Wartość w %1'@[_env.SRC]);
_Prop.win_fld(_wer_prop,,'COMPARE',,,2,,,'Porównanie'@);
_Prop.win_fld(_wer_prop,,'VAL_DST',,,50,,,'Wartość w %1'@[_env.DST]);
_fb:="exec('legenda','color','B_PROCOMP#01')";
_Prop.win_act(_wer_prop,,'Formuła','Legenda'@,,,_fb);
_fb:="params_exec('rekprzed','color','B_PROCOMP#01')";
_Prop.win_act(_wer_prop,,'Rekord',,,,_fb);
:: Grupy własności
_wer_prop_gr:=_Prop_grp.mk_sel('Grupy własności'@,,,'procompropgr',,,,,'U');
_Prop_grp.win_fld(_wer_prop_gr,,'GRP',,,100,,,'Grupa'@);
_Prop_grp.win_fld(_wer_prop_gr,,'COMPARE',,,2,,,'Porównanie'@);
_fb:="params_exec('prop_disp_grp','b_procomp')";
_Prop_grp.win_act(_wer_prop_gr,,'Formuła','Własności'@,,,_fb,,1);
_fb:="exec('legenda','color','B_PROCOMP#01')";
_Prop_grp.win_act(_wer_prop_gr,,'Formuła','Legenda'@,,,_fb);
_fb:="params_exec('rekprzed','color','B_PROCOMP#01')";
_Prop_grp.win_act(_wer_prop_gr,,'Rekord',,,,_fb);
:: Podgrupy własności
_wer_prop_pgr:=_Prop_grp.mk_sel('Podgrupy własności'@,,,'procomproppgr',,,,,'U');
_Prop_grp.win_fld(_wer_prop_pgr,,'PGRP',,,100,,,'Podgrupa'@);
_Prop_grp.win_fld(_wer_prop_pgr,,'COMPARE',,,2,,,'Porównanie'@);
_fb:="params_exec('prop_disp_grp','b_procomp')";
_Prop_grp.win_act(_wer_prop_pgr,,'Formuła','Własności'@,,,_fb,,1);
_fb:="exec('legenda','color','B_PROCOMP#01')";
_Prop_grp.win_act(_wer_prop_pgr,,'Formuła','Legenda'@,,,_fb);
_fb:="params_exec('rekprzed','color','B_PROCOMP#01')";
_Prop_grp.win_act(_wer_prop_pgr,,'Rekord',,,,_fb);

_Prop.cntx_psh();
_Prop.index(_ndx_unik);
_Prop_grp.cntx_psh();

_list:={? _List.SREF<>'' || _List.SREF || _List.DREF ?};

_grp:=
      _typ<>'B_PORT' & _typ<>'B_POCONN'
   |  (_Prop.prefix(_tmp,_list,'B_VALPRT',_Prop_grp.GRP); _typ='B_PORT' & _Prop.first())
   |  (_Prop.prefix(_tmp,_list,'B_POCONN',_Prop_grp.GRP); _typ='B_PORT' & _Prop.first());

{? ~_grp
||
   _Prop.index(_ndx_unik);
   _Prop.prefix(_tmp,_list,_Prop_grp.TYP,_Prop_grp.GRP,_Prop_grp.PGRP,);
:: Własności
   _Prop.win_sel(_wer_prop)
||
:: Własności
   _wer_grp:=_Prop.grp_make('Własności'@,,'procomprop');
   _fb:="
      _env:=params_get().env;
      _Prop_grp:=_env.PROP_GRP.TAB;
      params_exec('prop_sel_fb','b_procomp',_Prop_grp.TYP,1)
   ";
   _fa:="params_exec('prop_sel_fa','b_procomp')";
   _Prop.grp_sel(_wer_grp,,_wer_prop,'Własności'@,,,,,_fb,_fa,,,'maximized');
:: Wartości
   _Prop.index(_ndx_unik);
   _Prop.prefix(_tmp,_list,'B_VALPRT',_Prop_grp.GRP,);
   {? _Prop.first()
   ||
      _fb:="params_exec('prop_sel_fb','b_procomp','B_VALPRT',1)";
      _fa:="params_exec('prop_sel_fa','b_procomp')";
      _Prop.grp_sel(_wer_grp,,_wer_prop,'Wartości'@,,,,,_fb,_fa,,,'maximized')
   ?};
:: Powiązania portu
   _Prop.index(_ndx_unik);
   _Prop.prefix(_tmp,_list,'B_POCONN',_Prop_grp.GRP,);
   {? _Prop.first()
   ||
      _fb:="params_exec('prop_grp_sel_fb','b_procomp','B_POCONN',1)";
      _fa:="params_exec('prop_grp_sel_fa','b_procomp')";
      _Prop.grp_sel(_wer_grp,_Prop_grp,_wer_prop_pgr,'Powiązania portu'@,,,,,_fb,_fa,,,'maximized')
   ?};
   _Prop.win_sel(_wer_grp)
?};
params_set(params_get());
_Prop.select();
_Prop_grp.cntx_pop();
_Prop.cntx_pop()


\prop_disp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Własności elementu - wyświetl
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_tmp:=_env.TMP;
_List:=_env.LIST.TAB;
_Prop:=_env.PROP.TAB;
_ndx_unik:=_env.PROP.NDX_UNIK;
_Prop_grp:=_env.PROP_GRP.TAB;
_list:={? _List.SREF<>'' || _List.SREF || _List.DREF ?};

:: Własności
_wer_prop:=_Prop.mk_sel('Własności'@,,,'procomprop',,,,,'U');
_Prop.win_fld(_wer_prop,,'NR',,,8,,,'Nr'@);
_Prop.win_fld(_wer_prop,,'NAME',,,50,,,'Nazwa'@);
_Prop.win_fld(_wer_prop,,'VAL_SRC',,,50,,,'Wartość w %1'@[_env.SRC]);
_Prop.win_fld(_wer_prop,,'COMPARE',,,2,,,'Porównanie'@);
_Prop.win_fld(_wer_prop,,'VAL_DST',,,50,,,'Wartość w %1'@[_env.DST]);
_fb:="exec('legenda','color','B_PROCOMP#01')";
_Prop.win_act(_wer_prop,,'Formuła','Legenda'@,,,_fb);
_fb:="params_exec('rekprzed','color','B_PROCOMP#01')";
_Prop.win_act(_wer_prop,,'Rekord',,,,_fb);
:: Grupy własności
_wer_prop_gr:=_Prop_grp.mk_sel('Grupy własności'@,,,'procompropgr',,,,,'U');
_Prop_grp.win_fld(_wer_prop_gr,,'GRP',,,100,,,'Grupa'@);
_Prop_grp.win_fld(_wer_prop_gr,,'COMPARE',,,2,,,'Porównanie'@);
_fb:="params_exec('prop_disp_grp','b_procomp')";
_Prop_grp.win_act(_wer_prop_gr,,'Formuła','Własności'@,,,_fb,,1);
_fb:="exec('legenda','color','B_PROCOMP#01')";
_Prop_grp.win_act(_wer_prop_gr,,'Formuła','Legenda'@,,,_fb);
_fb:="params_exec('rekprzed','color','B_PROCOMP#01')";
_Prop_grp.win_act(_wer_prop_gr,,'Rekord',,,,_fb);

:: Własności
_wer_grp:=_Prop.grp_make('Własności'@,,'procomprop');
_fb:="params_exec('prop_sel_fb','b_procomp','B_PREL',0)";
_fa:="params_exec('prop_sel_fa','b_procomp')";
_Prop.grp_sel(_wer_grp,,_wer_prop,'Własności'@,,,,,_fb,_fa,,,'maximized');
:: Timer
_Prop.index(_ndx_unik);
_Prop.prefix(_tmp,_list,'B_TIMER');
{? _Prop.first()
||
   _fb:="params_exec('prop_sel_fb','b_procomp','B_TIMER',0)";
   _fa:="params_exec('prop_sel_fa','b_procomp')";
   _Prop.grp_sel(_wer_grp,,_wer_prop,'Timer'@,,,,,_fb,_fa,,,'maximized')
?};
:: Porty sygnału
_Prop.index(_ndx_unik);
_Prop.prefix(_tmp,_list,'B_SIGPRT',);
{? _Prop.first()
||
   _fb:="params_exec('prop_grp_sel_fb','b_procomp','B_SIGPRT',0)";
   _fa:="params_exec('prop_grp_sel_fa','b_procomp')";
   _Prop.grp_sel(_wer_grp,_Prop_grp,_wer_prop_gr,'Porty sygnału'@,,,,,_fb,_fa,,,'maximized')
?};
:: Połączenia
_Prop.index(_ndx_unik);
_Prop.prefix(_tmp,_list,'B_CONN');
{? _Prop.first()
||
   _fb:="params_exec('prop_grp_sel_fb','b_procomp','B_CONN',0)";
   _fa:="params_exec('prop_grp_sel_fa','b_procomp')";
   _Prop.grp_sel(_wer_grp,_Prop_grp,_wer_prop_gr,'Połączenia'@,,,,,_fb,_fa,,,'maximized')
?};
:: Warunki na bramie
_Prop.prefix(_tmp,_list,'B_CHOICE');
{? _Prop.first()
||
   _fb:="params_exec('prop_grp_sel_fb','b_procomp','B_CHOICE',0)";
   _fa:="params_exec('prop_grp_sel_fa','b_procomp')";
   _Prop.grp_sel(_wer_grp,_Prop_grp,_wer_prop_gr,'Warunki na bramie'@,,,,,_fb,_fa,,,'maximized')
?};
:: Porty
_Prop.prefix(_tmp,_list,'B_PORT');
{? _Prop.first()
||
   _fb:="params_exec('prop_grp_sel_fb','b_procomp','B_PORT',0)";
   _fa:="params_exec('prop_grp_sel_fa','b_procomp')";
   _Prop.grp_sel(_wer_grp,_Prop_grp,_wer_prop_gr,'Porty'@,,,,,_fb,_fa,,,'maximized')
?};
{? 0
||
:: Powiązania portu
   _Prop.index(_ndx_unik);
   _Prop.prefix(_tmp,_list,'B_POCONN');
   {? _Prop.first()
   ||
      _fb:="params_exec('prop_grp_sel_fb','b_procomp','B_POCONN',0)";
      _fa:="params_exec('prop_grp_sel_fa','b_procomp')";
      _Prop.grp_sel(_wer_grp,_Prop_grp,_wer_prop_gr,'Powiązania portu'@,,,,,_fb,_fa,,,'maximized')
   ?}
?};
_Prop.win_sel(_wer_grp);
params_set(params_get());
_Prop.select()


\prop_sel_fb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Przed obsługą okienka tabeli _Prop
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
_grp:=_b;
_env:=params_get().env;
_tmp:=_env.TMP;
_List:=_env.LIST.TAB;
_Prop:=_env.PROP.TAB;
_Prop_grp:=_env.PROP_GRP.TAB;
_list:={? _List.SREF<>'' || _List.SREF || _List.DREF ?};
_Prop.cntx_psh();
{? _grp
||
   {? _env.DIFF='T'
   || _Prop.index(_env.PROP.NDX_DIFF); _Prop.prefix(_tmp,'T',_list,_typ,_Prop_grp.GRP,_Prop_grp.PGRP)
   || _Prop.index(_env.PROP.NDX_UNIK); _Prop.prefix(_tmp,_list,_typ,_Prop_grp.GRP,_Prop_grp.PGRP)
   ?}
||
   {? _env.DIFF='T'
   || _Prop.index(_env.PROP.NDX_DIFF); _Prop.prefix(_tmp,'T',_list,_typ,)
   || _Prop.index(_env.PROP.NDX_UNIK); _Prop.prefix(_tmp,_list,_typ,)
   ?}
?};
_Prop.first()


\prop_sel_fa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Po obsłudze okienka tabeli _Prop
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_Prop:=_env.PROP.TAB;
_Prop.cntx_pop()


\prop_grp_sel_fb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Przed obsługą okienka tabeli _Prop_grp
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_typ:=_a;
_grp:=_b;
_env:=params_get().env;
_tmp:=_env.TMP;
_List:=_env.LIST.TAB;
_Prop_grp:=_env.PROP_GRP.TAB;
_list:={? _List.SREF<>'' || _List.SREF || _List.DREF ?};
_Prop_grp.cntx_psh();
{? _grp
||
   {? _env.DIFF='T'
   || _Prop_grp.index(_env.PROP_GRP.NDX_DIFF); _Prop_grp.prefix(_tmp,'T',_list,_typ,_Prop_grp.GRP,)
   || _Prop_grp.index(_env.PROP_GRP.NDX_UNIK); _Prop_grp.prefix(_tmp,_list,_typ,_Prop_grp.GRP,)
   ?}
||
   {? _env.DIFF='T'
   || _Prop_grp.index(_env.PROP_GRP.NDX_DIFF); _Prop_grp.prefix(_tmp,'T',_list,_typ,)
   || _Prop_grp.index(_env.PROP_GRP.NDX_UNIK); _Prop_grp.prefix(_tmp,_list,_typ,)
   ?}
?};
_Prop_grp.first()


\prop_grp_sel_fa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Po obsłudze okienka tabeli _Prop_grp
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_Prop_grp:=_env.PROP_GRP.TAB;
_Prop_grp.cntx_pop()


\val
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_val:=_a;
{? var_pres('__ASOC')<0 || __ASOC:=tab_tmp(1,'REF','STRING[16]',,'VAL','STRING[255]',) ?};
{? type_of(_val)=7
|| {? ~__ASOC.find_key($_val,) || __ASOC.REF:=$_val; __ASOC.VAL:=exec('record','#to_string',_val); __ASOC.add() ?};
   __ASOC.VAL
|? type_of(_val)=2 || _val
|| $_val
?}


\color
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Kolory
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_Tab:=cur_tab(1,1);
{? _Tab.COMPARE='==' || 'B_PROCOMP#01#01'
|? _Tab.COMPARE='<>' || 'B_PROCOMP#01#02'
|? _Tab.COMPARE='<<' || 'B_PROCOMP#01#03'
|? _Tab.COMPARE='>>' || 'B_PROCOMP#01#04'
|? _Tab.COMPARE='nn' || 'B_PROCOMP#01#05'
|| ''
?}


\ele_compare
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Porównanie elementów do porównania
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? params_exec('ele_select','b_procomp')
||
   params_exec('ele_anal','b_procomp')
?}


\ele_select
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Wybór elementów do porówania
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_Obj2cmp:=_env.OBJ2CMP.TAB;
_ndx_unik:=_env.OBJ2CMP.NDX_UNIK;
_List:=_env.LIST.TAB;
_ndx_compare:=_env.LIST.NDX_COMPARE;

_Obj2cmp.erase();
_Obj2cmp.index(_ndx_unik);
_Obj2cmp.prefix();

_esymbol:={? _List.SESYMBOL='' || _List.DESYMBOL || _List.SESYMBOL ?};
_List.cntx_psh();
_List.index(_ndx_compare);
_List.prefix({? _List.COMPARE='<<' || '>>' || '<<' ?});
_loop:=_List.first();
{!
|? _loop
|!
   {? _esymbol={? _List.SESYMBOL='' || _List.DESYMBOL || _List.SESYMBOL ?}
   ||
      _Obj2cmp.blank();
      _Obj2cmp.SEL:='N';
      {? _List.SCLASS=''
      ||
         _Obj2cmp.DESC1:=_List.DCLASS;
         _Obj2cmp.DESC2:=_List.DESYMBOL;
         _Obj2cmp.DESC3:=_List.DSYMBOL
      ||
         _Obj2cmp.DESC1:=_List.SCLASS;
         _Obj2cmp.DESC2:=_List.SESYMBOL;
         _Obj2cmp.DESC3:=_List.SSYMBOL
      ?};
      _Obj2cmp.DESC4:=_List.COMPARE;
      _Obj2cmp.REF:=$_List.ref();
      _Obj2cmp.add()
   ?};
   _loop:=_List.next()
!};
_List.cntx_pop();
_Obj2cmp.blank();
_Obj2cmp.SEL:='T';
{? _List.SCLASS=''
||
   _Obj2cmp.DESC1:=_List.DCLASS;
   _Obj2cmp.DESC2:=_List.DESYMBOL;
   _Obj2cmp.DESC3:=_List.DSYMBOL
||
   _Obj2cmp.DESC1:=_List.SCLASS;
   _Obj2cmp.DESC2:=_List.SESYMBOL;
   _Obj2cmp.DESC3:=_List.SSYMBOL
?};
_Obj2cmp.DESC4:=_List.COMPARE;
_Obj2cmp.REF:=$_List.ref();
_Obj2cmp.add();

_Obj2cmp.index(_ndx_unik);
_Obj2cmp.prefix('');
{? _Obj2cmp.find_key(B_PROC.SYMBOL,B_PROC.VER,) || _Obj2cmp.SEL:='T'; _Obj2cmp.put() ?};
_wer:=_Obj2cmp.mk_sel('Elementy'@,,,'procomp',,,,,'U');
_Obj2cmp.win_fld(_wer,,'SEL',,,3,,,,,,2,,"'T'","'N'");
_Obj2cmp.win_fld(_wer,,'DESC1',,,30,,,'Klasa'@);
_Obj2cmp.win_fld(_wer,,'DESC2',,,5,,,'Symbol ogólny'@);
_Obj2cmp.win_fld(_wer,,'DESC3',,,30,,,'Symbol'@);
_Obj2cmp.win_fld(_wer,,'DESC4',,,2,,,'Porównanie'@);
_fb:="
   _env:=params_get().env;
   _Obj2cmp:=_env.OBJ2CMP.TAB;
   _ndx_sel:=_env.OBJ2CMP.NDX_SEL;
   _ref:=_Obj2cmp.ref();
   _Obj2cmp.cntx_psh();
   _Obj2cmp.index(_ndx_sel);
   _Obj2cmp.prefix('T');
   _loop:=_Obj2cmp.first();
   {!
   |? _loop
   |!
      {? _Obj2cmp.ref()= _ref
      ||
         _Obj2cmp.cntx_psh(); _Obj2cmp.prefix(); _Obj2cmp.SEL:='N'; _Obj2cmp.put(); _Obj2cmp.cntx_pop()
      ?};
      _loop:=_Obj2cmp.next()
   !};
   _size:=_Obj2cmp.size();
   _Obj2cmp.cntx_pop();
   {? _size=2
   ||
      FUN.info('Należy zaznaczyć dwa elementy do porównania.'@)
   ||
      _Obj2cmp.SEL:='T';
      _Obj2cmp.put()
   ?}
";
_Obj2cmp.win_act(_wer,,'Formuła','Wybierz'@@,,,_fb,,1,1,,,'W');
_Obj2cmp.win_btn(_wer,'text=%1, panel=right'['Wybierz'@@],'menu:W');
_fb:="_tab:=cur_tab(); _tab.SEL:='N'; _tab.put()";
_Obj2cmp.win_act(_wer,,'Formuła','Odbierz'@@,,,_fb,,,1,,,'O');
_Obj2cmp.win_btn(_wer,'text=%1, panel=right'['Odbierz'@@],'menu:O');
_fb:="
   _env:=params_get().env;
   _Obj2cmp:=_env.OBJ2CMP.TAB;
   _ndx_sel:=_env.OBJ2CMP.NDX_SEL;
   _ref:=_Obj2cmp.ref();
   _Obj2cmp.cntx_psh();
   _Obj2cmp.index(_ndx_sel);
   _Obj2cmp.prefix('T');
   _loop:=_Obj2cmp.first();
   _size:=_Obj2cmp.size();
   _Obj2cmp.cntx_pop();
   {? _size=2 || sel_exit() || FUN.info('Należy zaznaczyć dwa elementy do porównania.'@) ?}
";
_Obj2cmp.win_act(_wer,,'Formuła','Porównaj'@@,,,_fb,,,,,,'P');
_Obj2cmp.win_btn(_wer,'text=%1, panel=bottom'['Porównaj'@@],'menu:P');
_Obj2cmp.win_btn(_wer,'text=%1, panel=bottom'['Anuluj'@@],'key:Esc');
_Obj2cmp.win_sel(_wer);
params_set(params_get());
_Obj2cmp.select(,1)


\ele_anal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [23.25]
:: OPIS: Analiza elementów
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_env:=params_get().env;
_env.TMP:='T';
_Obj2cmp:=_env.OBJ2CMP.TAB;
_ndx_sel:=_env.OBJ2CMP.NDX_SEL;
_List:=_env.LIST.TAB;
_Prop:=_env.PROP.TAB;
_prop_ndx_unik:=_env.PROP.NDX_UNIK;
_Prop_grp:=_env.PROP_GRP.TAB;
_prop_grp_ndx_unik:=_env.PROP_GRP.NDX_UNIK;

_list_src:=_list_dst:='';

_Prop.cntx_psh();
_Prop.index(_prop_ndx_unik);
_Prop.prefix('T',);
_loop:=_Prop.first();
{!
|? _loop
|!
   _loop:=_Prop.del()
!};

_Prop_grp.cntx_psh();
_Prop_grp.index(_prop_grp_ndx_unik);
_Prop_grp.prefix('T',);
_loop:=_Prop_grp.first();
{!
|? _loop
|!
   _loop:=_Prop_grp.del()
!};

_Obj2cmp.index(_ndx_sel);
_Obj2cmp.prefix('T');
_loop:=_Obj2cmp.first();
{!
|? _loop
|!
   {? exec('FindAndGet','#table',_List,_Obj2cmp.REF,,"SCLASS",'')=''
   ||
      _ref:=_list_dst:=exec('FindAndGet','#table',_List,_Obj2cmp.REF,,"DREF",'')
   ||
      _ref:=_list_src:=exec('FindAndGet','#table',_List,_Obj2cmp.REF,,"SREF",'');
      _list:=_Obj2cmp.REF
   ?};
   _Prop.prefix('N',_ref);
   _loop:=_Prop.first();
   {!
   |? _loop
   |!
      _Prop.cntx_psh();
      _Prop.prefix();
      _Prop.TMP:='T';
      _Prop.add();
      _Prop.cntx_pop();
      _loop:=_Prop.next()
   !};
   _Prop_grp.prefix('N',_ref);
   _loop:=_Prop_grp.first();
   {!
   |? _loop
   |!
      _Prop_grp.cntx_psh();
      _Prop_grp.prefix();
      _Prop_grp.TMP:='T';
      _Prop_grp.add();
      _Prop_grp.cntx_pop();
      _loop:=_Prop_grp.next()
   !};
   _loop:=_Obj2cmp.next()
!};
_Prop_grp.cntx_pop();
_Prop.cntx_pop();

{? _list_src='' | _list_dst=''
||
   FUN.info('Problem'@)
||
   params_exec('prop_compare','b_procomp',_list_src,_list_dst);
   _List.cntx_psh();
   {? _List.seek(_list)
   ||
      params_exec('prop_disp','b_procomp')
   ?};
   _List.cntx_pop()
?};

_env.TMP:='N'

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 52b8b4925cd2a3a30a900051d6a978bf0b8f28e91410edd7007f6fed86a5e2a23ec1b090a662d328489a55ff26cf974e58cbcb3314f0c8a2840eef1e9911c096a77665abbfd0db866d9d968b4a5947ccdf1f206f2001163ee075192f735d2357b35c80fa5684472ed88019024d59c4ba49dd5f26e2ee57966bdee05d7151275a
