:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: phr_zz_tab.fml
:: Utworzony: 09.03.2017
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły wyzwalaczy dla tabel obszarów POC, PSZ, PRE, PBA.
::======================================================================================================================


\modul
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Wartość początkowa dla póla TYP tabel ZZ_TYP i ZO_PROG
::   WY: wartość przechowywana w polu MODUL zmiennej ZZ_POM
::----------------------------------------------------------------------------------------------------------------------
ZZ_POM.MODUL


\zz_asys_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_ASYS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_asys_chk','phr_zz_tab',0)


\zz_asys_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_ASYS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_ASYS*'PUTB|'
|| return(1)
?};
exec('zz_asys_chk','phr_zz_tab',1)


\zz_asys_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_ASYS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_asys_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_tmp','#table',ZZ_ASYST,'ZZ_ASYS',ZZ_ASYS.ref())


\zz_asys_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_ASYS.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_asys_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_ASYS.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_ASYS*'PUTA|'
|| return()
?};
~~


\zz_asys_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_ASYS.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_asys_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_asys_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_ASYS*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_ASYS,
   $("_a.table(_b,"+$_mode+",,'KOD','NAZWA')")
)


\zz_asyst_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_ASYST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_asyst_chk','phr_zz_tab',0)


\zz_asyst_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_ASYST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_ASYST*'PUTB|'
|| return(1)
?};
exec('zz_asyst_chk','phr_zz_tab',1)


\zz_asyst_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_ASYST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_asyst_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_tmp','#table',ZZ_ASYST,'ZZ_ASYST',ZZ_ASYST.ref())


\zz_asyst_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_ASYST.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_asyst_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_ASYST.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_ASYST*'PUTA|'
|| return()
?};
~~


\zz_asyst_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_ASYST.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_asyst_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_asyst_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_ASYST*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_ASYST,
   $("_a.table(_b,"+$_mode+",,'ELEMENT','NUMER','ZZ_ASYS')")
)


\zz_dok_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_DOK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_dok_chk','phr_zz_tab',0)


\zz_dok_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_DOK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_DOK*'PUTB|'
|| return(1)
?};
exec('zz_dok_chk','phr_zz_tab',1)


\zz_dok_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_DOK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_dok_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZZ_DOKZ,'ISD',ref_name(ZZ_DOK.ref()),ZZ_DOK.ref()) &
exec('del_ndx','#table',ZZ_POW,'LR',ref_name(ZZ_DOK.ref()),ZZ_DOK.ref()) &
exec('del_ndx','#table',ZZ_POW,'RL',ref_name(ZZ_DOK.ref()),ZZ_DOK.ref())


\zz_dok_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_DOK.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_dok_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_DOK.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_DOK*'PUTA|'
|| return()
?};
~~


\zz_dok_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_DOK.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_dok_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_dok_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_DOK*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_DOK,
   $("_a.table(_b,"+$_mode+",,'KLASA','ID','DATA','GODZ')"),
   "exec('chk_class','phr_tab',_b.KLASA)"
)


\zz_dokz_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_DOKZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZZ_DOKZ) & exec('zz_dokz_chk','phr_zz_tab',0) & exec('zz_dokz_modb','phr_zz_tab')


\zz_dokz_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_DOKZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_DOKZ*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_DOKZ) & exec('zz_dokz_chk','phr_zz_tab',1) & exec('zz_dokz_modb','phr_zz_tab')


\zz_dokz_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_DOKZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_dokz_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_DOKZ.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};
exec('dok_adda','phr_tab',ZZ_DOKZ,_a);
exec('zz_dokz_moda','phr_zz_tab',ZZ_DOKZ.ZZ_LINK);
~~


\zz_dokz_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_DOKZ.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};

{? TRIG_OFF.ZZ_DOKZ*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_DOKZ,_a);
exec('zz_dokz_moda','phr_zz_tab',ZZ_DOKZ.ZZ_LINK);
~~


\zz_dokz_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_DOKZ.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ~_a | do_state()<>1
|| return()
?};
exec('dok_dela','phr_tab',_a);
exec('zz_dokz_moda','phr_zz_tab',bfld('ZZ_LINK'));
~~


\zz_dokz_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_dokz_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_DOKZ*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_DOKZ,
   "{? _b.ZZ_DOK || _a.record(ZZ_DOK,,'TYTUL') || 1 ?}",
   $("_a.table(_b,"+$_mode+",,'ZZ_LINK','UD_SKL')"),
   {? _mode || "_a.record(_b,,'PLIK')" || "1" ?}
)


\zz_dokz_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Przed modyfikacją rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - przed" i "Popraw - przed" dla tabeli ZZ_DOKZ.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? ZZ_DOKZ.PLIK
|| ZZ_DOKZ.SIZE:=ZZ_DOKZ.bl_info('PLIK','SIZE');
   ZZ_DOKZ.HASH:=exec('hash','#blob',ZZ_DOKZ.PLIK)
|| ZZ_DOKZ.SIZE:=0;
::      hash('')='da39a3ee5e6b4b0d3255bfef95601890afd80709'
   ZZ_DOKZ.HASH:='da39a3ee5e6b4b0d3255bfef95601890afd80709'
?};
1


\zz_dokz_moda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Po modyfikacji rekordu.
::       Formuła wywoływana z wyzwalaczy "Dołącz - po" i "Popraw - po" dla tabeli ZZ_DOKZ.
::   WE: _a [REFERENCE] - Wskazanie na rekord właściciela (ZZ_DOK.ref()).
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_zz_dok:=_a;

_np_dok:=ref_name(_zz_dok);

_klasa:=exec('FindAndGet','#table',ZZ_DOK,_zz_dok,,"KLASA",'');

{? _klasa='BIPNAG' | _klasa='BNFTT' | _klasa='BIPULP'
|| _hash:='';
   ZZ_DOKZ.cntx_psh();
   ZZ_DOKZ.index('CZAS');
   ZZ_DOKZ.prefix(_np_dok,_zz_dok);
   {? ZZ_DOKZ.first()
   || {!
      |? _hash+=ZZ_DOKZ.HASH;
         ZZ_DOKZ.next()
      !}
   ?};
   ZZ_DOKZ.cntx_pop();

   _NAG:=($_klasa)();
   _NAG.cntx_psh();
   _NAG.index('ZZ_DOK');
   _NAG.prefix(_np_dok,_zz_dok);
   {? _NAG.first()
   || {? _klasa='BIPULP'
::       Podczytanie pola SYS_MEMO w celu poprawnej walidacji wypełnienia pola BIPULP.OPIS:
      || _NAG.memo_get(,'OPIS')
      ?};
      _NAG.HASH:=hash(_hash);
      _NAG.put(,1)
   ?};
   _NAG.cntx_pop()
?};
~~


\zz_fml_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_FML.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZZ_FML) & exec('zz_fml_chk','phr_zz_tab',0)


\zz_fml_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_FML.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_FML*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_FML) & exec('zz_fml_chk','phr_zz_tab',1)


\zz_fml_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_FML.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_fml_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZZ_KRYTF,'REKORD',ZZ_FML.ref())


\zz_fml_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_FML.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_FML,_a);
~~


\zz_fml_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_FML.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_FML*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_FML,_a);
~~


\zz_fml_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_FML.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_fml_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \init_table/zz_setup.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_FML*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_FML,
   $("_a.table(_b,"+$_mode+",,'RODZAJ','KOD','NAZWA','FORMULA','SYSTEM')"),
   "_a.in_set(_b,'RODZAJ',,'K')",
   "_a.in_set(_b,'SYSTEM',,'T','N')"
)


\zz_got_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_GOT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZZ_GOT) & exec('zz_got_chk','phr_zz_tab',0)


\zz_got_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_GOT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_GOT*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_GOT) & exec('zz_got_chk','phr_zz_tab',1)


\zz_got_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_GOT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_got_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_GOT.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_GOT,_a);
~~


\zz_got_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_GOT.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_GOT*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_GOT,_a);
~~


\zz_got_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_GOT.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_got_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \init_table/zz_setup.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_GOT*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_GOT,
   $("_a.table(_b,"+$_mode+",,'OPIS')"),
   "  {? _b.MIN<0
      || _a.err_fld(_b,'MIN',1,'Wartość nie może być ujemna.'@)
      || ''
      ?}
    ",
    " {? _b.MAX<>0 & _b.MAX<_b.MIN
      || _a.err_fld(_b,'MAX',1,'Wartość nie może być mniejsza niż \"%1\" (%2).'@ [MS.name(_b,'MIN'),$_b.MIN])
      || ''
      ?}
    "
)


\zz_gotw_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_GOTW.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZZ_GOTW) & exec('zz_gotw_chk','phr_zz_tab',0)


\zz_gotw_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_GOTW.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_GOTW*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_GOTW) & exec('zz_gotw_chk','phr_zz_tab',1)


\zz_gotw_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_GOTW.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_gotw_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_GOTW.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_GOTW,_a);
~~


\zz_gotw_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_GOTW.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_GOTW*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_GOTW,_a);
~~


\zz_gotw_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_GOTW.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_gotw_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \init_table/zz_setup.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_GOTW*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_GOTW,
   $("_a.table(_b,"+$_mode+",,'OPIS')")
)


\zz_hist_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_HIST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZZ_HIST) & exec('zz_hist_chk','phr_zz_tab',0)


\zz_hist_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_HIST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_HIST*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_HIST) & exec('zz_hist_chk','phr_zz_tab',1)


\zz_hist_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_HIST.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_hist_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZZ_PROF,'NAZWA',ZZ_HIST.ref()) &
exec('del_ndx','#table',ZZ_KOMP,'NAZWA',ZZ_HIST.ref()) &
exec('del_ndx','#table',ZZ_PROFT,'UNIQUE',ZZ_HIST.NP_DOK,ZZ_HIST.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPK,'WARTOSC',ZZ_HIST.NP_DOK,ZZ_HIST.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPS,'WARTOSC',ZZ_HIST.NP_DOK,ZZ_HIST.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPZ,'UNIQUE',ZZ_HIST.NP_DOK,ZZ_HIST.ZZ_DOK)


\zz_hist_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_HIST.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_HIST,_a);
exec('copy_hist','phr_dane',ZZ_HIST.ref());
~~


\zz_hist_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_HIST.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_HIST*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_HIST,_a);
~~


\zz_hist_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_HIST.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_hist_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_hist_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_HIST*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_HIST,
   $("_a.table(_b,"+$_mode+",,'OPIS')")
)


\zz_komp_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_KOMP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_komp_modb','phr_zz_tab');
exec('dok_addb','phr_tab',ZZ_KOMP) & exec('zz_komp_chk','phr_zz_tab',0)


\zz_komp_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_KOMP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KOMP*'PUTB|'
|| return(1)
?};
exec('zz_komp_modb','phr_zz_tab');
exec('dok_putb','phr_tab',ZZ_KOMP) & exec('zz_komp_chk','phr_zz_tab',1)


\zz_komp_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_KOMP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_komp_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZZ_KOMP,'ZZ_KOMP',ZZ_KOMP.ref()) &
exec('del_ndx','#table',ZZ_KOMPK,'ZZ_KOMP',ZZ_KOMP.ref()) &
exec('del_ndx','#table',ZZ_KOMPS,'ZZ_KOMP',ZZ_KOMP.ref()) &
exec('del_ndx','#table',ZZ_KOMPZ,'ZZ_KOMP',ZZ_KOMP.ref()) &
exec('del_ndx','#table',ZZ_PROFK,'ZZ_KOMP',ZZ_KOMP.ref()) &
exec('del_ndx','#table',ZO_KOMP,'ZZ_KOMP',ZZ_KOMP.ref()) &
exec('del_ndx','#table',ZO_OCENA,'ZZ_KOMP',ZZ_KOMP.ref()) &
: usuń powiązania przez dokument własciwy dla kompetencji
exec('del_ndx','#table',ZZ_PROFT,'UNIQUE',ZZ_KOMP.NP_DOK,ZZ_KOMP.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KRYT,'UNIQUE',ZZ_KOMP.NP_DOK,ZZ_KOMP.ZZ_DOK)


\zz_komp_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_KOMP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_adda','phr_tab',ZZ_KOMP,_a)
|| exec('zz_komp_moda','phr_zz_tab');
   _dok:=ZZ_KOMP.ZZ_HIST().ZZ_DOK;
   exec('copy_kompk','phr_dane',_dok,ZZ_KOMP.ZZ_DOK,ZZ_KOMP.ref());
   exec('copy_komps','phr_dane',_dok,ZZ_KOMP.ZZ_DOK,ZZ_KOMP.ref());
   exec('copy_kompz','phr_dane',_dok,ZZ_KOMP.ZZ_DOK,ZZ_KOMP.ref());
:  przepisz typy ocen
   ZZ_PROFT.cntx_psh();
   ZZ_PROFT.index('KOD');
   ZZ_PROFT.prefix(ref_name(_dok),_dok);
   _loop:=ZZ_PROFT.first();
   {!
   |? _loop
   |! exec('get_proft','phr_dane',ZZ_KOMP.ZZ_DOK,ZZ_PROFT.ZZ_TYP);
      _loop:=ZZ_PROFT.next()
   !};
   ZZ_PROFT.cntx_pop()
?};
~~


\zz_komp_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_KOMP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KOMP*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_KOMP,_a);
{? do_state()=1 & _a
|| exec('zz_komp_moda','phr_zz_tab')
?};
~~


\zz_komp_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_KOMP.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_komp_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Wywoływana z wyzwalaczy przed dołącz i popraw, przed przeprowadzeniem testow poprawnosci rekordu.
::  OLD: \zz_komp_bw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZZ_KOMP.WAGA<=0
|| ZZ_KOMP.WAGA:=1
?}


\zz_komp_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_komp_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KOMP*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_KOMP,
   $("_a.table(_b,"+$_mode+",,'ZZ_HIST','NAZWA','WAGA')")
)


\zz_komp_moda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Wywoływana z wyzwalaczy po dołącz i popraw.
::  OLD: \zz_komp_aw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
exec('get_proft','phr_dane',ZZ_KOMP.ZZ_DOK,exec('typ_op','phr_dane'));
exec('get_profk','phr_dane',ZZ_KOMP.ZZ_DOK,ZZ_KOMP.ref())


\zz_kompk_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_KOMPK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_addb','phr_tab',ZZ_KOMPK) & exec('zz_kompk_chk','phr_zz_tab',0)
|| exec('zz_kompx_addb','phr_zz_tab',ZZ_KOMPK)
?}


\zz_kompk_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_KOMPK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KOMPK*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_KOMPK) & exec('zz_kompk_chk','phr_zz_tab',1)


\zz_kompk_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_KOMPK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_kompk_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_tmp','#table',ZO_NOTAK,'ZZ_KOMPK',ZZ_KOMPK.ref())


\zz_kompk_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_KOMPK.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_adda','phr_tab',ZZ_KOMPK,_a)
|| exec('zz_kompx_adda','phr_zz_tab',ZZ_KOMPK)
?};
~~


\zz_kompk_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_KOMPK.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KOMPK*'PUTA|'
|| return()
?};
{? exec('dok_puta','phr_tab',ZZ_KOMPK,_a)
|| exec('zz_kompx_puta','phr_zz_tab',ZZ_KOMPK)
?};
~~


\zz_kompk_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_KOMPK.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_dela','phr_tab',_a)
|| exec('zz_kompx_dela','phr_zz_tab',ZZ_KOMPK)
?};
~~


\zz_kompk_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.30]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_kompk_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KOMPK*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

ZZ_DOK.cntx_psh();
_klasa:='@.'+ZZ_KOMPK.ZZ_LINK().KLASA;
ZZ_DOK.cntx_pop();

__CHK.validate(ZZ_KOMPK,
   $("_a.table(_b,"+$_mode+",,'ZZ_LINK','WARTOSC','KOD','OPIS')"),
   "{? _b.WARTOSC<=0 || _a.err_fld(_b,'WARTOSC',1,'Wartość musi być większa od 0.'@) || 1 ?}",
   {? _klasa<>!ZZ_HIST & _klasa<>!ZA_ZEST & _klasa<>!ZA_TEST & _klasa<>!ZF_SKL
   || "_a.record(_b,,'ZZ_KOMP')"
   || "1"
   ?}
)


\zz_komps_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_KOMPS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_addb','phr_tab',ZZ_KOMPS) & exec('zz_komps_chk','phr_zz_tab',0)
|| exec('zz_kompx_addb','phr_zz_tab',ZZ_KOMPS)
?}


\zz_komps_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_KOMPS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KOMPS*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_KOMPS) & exec('zz_komps_chk','phr_zz_tab',1)


\zz_komps_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_KOMPS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_komps_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_tmp','#table',ZO_NOTAS,'ZZ_KOMPS',ZZ_KOMPS.ref())


\zz_komps_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_KOMPS.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_adda','phr_tab',ZZ_KOMPS,_a)
|| exec('zz_kompx_adda','phr_zz_tab',ZZ_KOMPS)
?};
~~


\zz_komps_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_KOMPS.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KOMPS*'PUTA|'
|| return()
?};
{? exec('dok_puta','phr_tab',ZZ_KOMPS,_a)
|| exec('zz_kompx_puta','phr_zz_tab',ZZ_KOMPS)
?};
~~


\zz_komps_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_KOMPS.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_dela','phr_tab',_a)
|| exec('zz_kompx_dela','phr_zz_tab',ZZ_KOMPS)
?};
~~


\zz_komps_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_komps_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KOMPS*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

ZZ_DOK.cntx_psh();
_klasa:='@.'+ZZ_KOMPS.ZZ_LINK().KLASA;
ZZ_DOK.cntx_pop();

__CHK.validate(ZZ_KOMPS,
   $("_a.table(_b,"+$_mode+",,'ZZ_LINK','WARTOSC','OPIS')"),
   "{? _b.WARTOSC<=0 || _a.err_fld(_b,'WARTOSC',1,'Wartość musi być większa od 0.'@) || 1 ?}",
   {? _klasa<>!ZZ_HIST & _klasa<>!ZA_ZEST & _klasa<>!ZA_TEST & _klasa<>!ZF_SKL
   || "_a.record(_b,,'ZZ_KOMP')"
   || "1"
   ?}
)


\zz_kompx_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Przed dołączeniem wiersza tabel ZZ_KOMPK i ZZ_KOMPS.
::   WE: _a [TABLE] - alias tabeli
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
_a.cntx_psh();
_a.index('WARTOSC');
_a.prefix(_a.NP_DOK,_a.ZZ_LINK,_a.ZZ_KOMP);
_size:=_a.size();
_a.cntx_pop();

{? _size=0
|| _a.POZIOM:='T'
?};
1


\zz_kompx_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Po dołączeniu wiersza tabel ZZ_KOMPK i ZZ_KOMPS.
::   WE: _a [TABLE] - alias tabeli
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_a.cntx_psh();
_a.index('WARTOSC');
_a.prefix(_a.NP_DOK,_a.ZZ_LINK,_a.ZZ_KOMP);
{? _a.POZIOM<>'T'
|| _a.cntx_pop();
   return()
?};

_ref:=_a.ref();
_loop:=_a.first();
{!
|? _loop
|! {? _a.POZIOM='T' & _a.ref()<>_ref
   || _a.POZIOM:='N';
      _a.put()
   ?};
   _loop:=_a.next()
!};

_a.cntx_pop();
~~


\zz_kompx_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Po poprawieniu wiersza tabel ZZ_KOMPK i ZZ_KOMPS.
::   WE: _a [TABLE] - alias tabeli
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
{? ($('TRIG_OFF.'+(2-!_a)))()*'PUTA|'
|| return()
?};
_a.cntx_psh();
_a.index('WARTOSC');
_a.prefix(_a.NP_DOK,_a.ZZ_LINK,_a.ZZ_KOMP);
{? bfld('POZIOM')=_a.POZIOM | _a.POZIOM='N'
|| _a.cntx_pop();
   return()
?};

_ref:=_a.ref();
_loop:=_a.first();
{!
|? _loop
|! {? _a.POZIOM='T' & _a.ref()<>_ref
   || _a.POZIOM:='N';
      _a.put()
   ?};
   _loop:=_a.next()
!};

_a.cntx_pop();
~~


\zz_kompx_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.42]
:: OPIS: Po usunięciu wiersza tabel ZZ_KOMPK i ZZ_KOMPS.
::   WE: _a [TABLE] - alias tabeli
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
_a.cntx_psh();
_a.index('WARTOSC');
_a.prefix(_a.NP_DOK,_a.ZZ_LINK,_a.ZZ_KOMP);
{? ~_a.size() | bfld('POZIOM')<>'T'
|| _a.cntx_pop();
   return()
?};

{? _a.find_ge(bfld('WARTOSC')) | _a.find_le(bfld('WARTOSC'))
|| _a.POZIOM:='T';
   _a.put()
?};

_a.cntx_pop();
~~


\zz_kompz_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_KOMPZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZZ_KOMPZ) & exec('zz_kompz_chk','phr_zz_tab',0)


\zz_kompz_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_KOMPZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KOMPZ*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_KOMPZ) & exec('zz_kompz_chk','phr_zz_tab',1)


\zz_kompz_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_KOMPZ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_kompz_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_KOMPZ.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_KOMPZ,_a);
~~


\zz_kompz_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_KOMPZ.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KOMPZ*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_KOMPZ,_a);
~~


\zz_kompz_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_KOMPZ.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_kompz_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_kompz_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KOMPZ*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

ZZ_DOK.cntx_psh();
_klasa:='@.'+ZZ_KOMPZ.ZZ_LINK().KLASA;
ZZ_DOK.cntx_pop();

__CHK.validate(ZZ_KOMPZ,
   $("_a.table(_b,"+$_mode+",,'ZZ_LINK','MIN','MAKS','POZIOM')"),
   "{? _b.MIN<=0 || _a.err_fld(_b,'MIN',1,'Wartość musi być większa od 0.'@) || 1 ?}",
   "{? _b.MAKS<=0 || _a.err_fld(_b,'MAKS',1,'Wartość musi być większa od 0.'@) || 1 ?}",
   "{? _b.POZIOM<=0 || _a.err_fld(_b,'POZIOM',1,'Wartość musi być większa od 0.'@) || 1 ?}",
   "{? _b.POZIOM<_b.MIN | _b.MAKS<_b.POZIOM
    || _a.err_fld(_b,'POZIOM',1,'Wartość musi być z zakresu od %1 do %2.'@[$_b.MIN,$_b.MAKS])
    || 1
    ?}",
   {? _klasa<>!ZZ_HIST & _klasa<>!ZA_ZEST & _klasa<>!ZA_TEST & _klasa<>!ZF_SKL
   || "_a.record(_b,,'ZZ_KOMP')"
   || "1"
   ?}
)


\zz_kryt_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_KRYT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_kryt_ba/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~(exec('dok_addb','phr_tab',ZZ_KRYT) & exec('zz_kryt_chk','phr_zz_tab',0))
|| return(0)
?};

_nr:=1;
ZZ_KRYT.cntx_psh();
ZZ_KRYT.f_clear();
ZZ_KRYT.f_set('NUMER',,'ZZ_LINK=:_a and ZZ_TYP=:_b',ZZ_KRYT.ZZ_LINK,ZZ_KRYT.ZZ_TYP);
_nr:={? ZZ_KRYT.f_last() || ZZ_KRYT.NUMER ?}+1;
ZZ_KRYT.f_clear();
ZZ_KRYT.cntx_pop();
ZZ_KRYT.NUMER:=_nr;
ZZ_KRYT.DOBOR:=(ZZ_KRYT.TRYB<>'~');
1


\zz_kryt_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_KRYT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_kryt_bp/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KRYT*'PUTB|'
|| return(1)
?};
ZZ_KRYT.DOBOR:=(ZZ_KRYT.TRYB<>'~');
_childs:=0;
ZZ_KRYT.cntx_psh();
ZZ_KRYT.index('ZZ_KRYT');
ZZ_KRYT.prefix(ZZ_KRYT.ref());
_childs:=ZZ_KRYT.size();
ZZ_KRYT.cntx_pop();
{? _childs
|| ZZ_KRYT.DOBOR:=0
?};

exec('dok_putb','phr_tab',ZZ_KRYT) & exec('zz_kryt_chk','phr_zz_tab',1)


\zz_kryt_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_KRYT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZZ_KRYT,'ZZ_KRYT',ZZ_KRYT.ref()) &
exec('del_ndx','#table',ZZ_KRYTF,'ZZ_KRYT',ZZ_KRYT.ref()) &
exec('del_ndx','#table',ZZ_KRYTJ,'ZZ_KRYT',ZZ_KRYT.ref()) &
exec('del_ndx','#table',ZZ_KRYTP,'ZZ_KRYT',ZZ_KRYT.ref()) &
exec('del_ndx','#table',ZZ_KRYTS,'ZZ_KRYT',ZZ_KRYT.ref()) &
: usuń powiązania przez dokument właściwy dla kryterium
exec('del_ndx','#table',ZZ_PROFT,'UNIQUE',ZZ_KRYT.NP_DOK,ZZ_KRYT.ZZ_DOK) &
exec('del_ndx','#table',ZZ_PROFK,'UNIQUE',ZZ_KRYT.NP_DOK,ZZ_KRYT.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPK,'WARTOSC',ZZ_KRYT.NP_DOK,ZZ_KRYT.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPS,'WARTOSC',ZZ_KRYT.NP_DOK,ZZ_KRYT.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPZ,'UNIQUE',ZZ_KRYT.NP_DOK,ZZ_KRYT.ZZ_DOK)


\zz_kryt_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_KRYT.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \zz_kryt_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_adda','phr_tab',ZZ_KRYT,_a)
|| return()
?};

: kryterium nadrzędne nie może być liściem
: wyłącz znacznik, jeśli jest on ustawiony
{? ZZ_KRYT.ZZ_KRYT
|| ZZ_KRYT.cntx_psh();
   ZZ_KRYT.clear();
   {? ZZ_KRYT.seek(ZZ_KRYT.ZZ_KRYT,) & ZZ_KRYT.DOBOR
   || ZZ_KRYT.put()
   ?};
   ZZ_KRYT.cntx_pop()
?};
~~


\zz_kryt_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_KRYT.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \zz_kryt_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KRYT*'PUTA|'
|| return()
?};
{? ~exec('dok_puta','phr_tab',ZZ_KRYT,_a)
|| return()
?};

_curr:=ZZ_KRYT.ZZ_KRYT;
_prev:=bfld('ZZ_KRYT');

{? ZZ_KRYT.KLASA<>bfld('KLASA')
|| ZZ_KRYT.KLASA:=bfld('KLASA');
   ZZ_KRYT.put()
?};

{? _curr<>_prev
|| ZZ_KRYT.cntx_psh();
   ZZ_KRYT.clear();
   {? ZZ_KRYT.seek(_prev,)
   || ZZ_KRYT.put()
   ?};
   {? ZZ_KRYT.seek(_curr,) & ZZ_KRYT.DOBOR
   || ZZ_KRYT.put()
   ?};
   ZZ_KRYT.cntx_pop()
?};
~~


\zz_kryt_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_KRYT.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \zz_kryt_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_dela','phr_tab',_a)
|| return()
?};

ZZ_KRYT.cntx_psh;
ZZ_KRYT.index('UNIQUE');
ZZ_KRYT.prefix(bfld('NP_DOK'),bfld('ZZ_LINK'),bfld('ZZ_TYP'));
{? ZZ_KRYT.find_ge(bfld('NUMER')+1)
|| ZZ_KRYT.NUMER-=1;
   ZZ_KRYT.put()
?};
: sprawdź, czy kryterium nadrzędne jest teraz liściem
: jeśli tak, to zmień znacznik zależnie od jego trybu
_ref:=bfld('ZZ_KRYT');
{? _ref
|| ZZ_KRYT.index('ZZ_KRYT');
   ZZ_KRYT.prefix(_ref);
   {? ~ZZ_KRYT.first()
   || ZZ_KRYT.clear();
      {? ZZ_KRYT.seek(_ref,) & ZZ_KRYT.DOBOR<>(ZZ_KRYT.TRYB<>'~')
      || ZZ_KRYT.DOBOR:=(ZZ_KRYT.TRYB<>'~');
         ZZ_KRYT.put()
      ?}
   ?}
?};
ZZ_KRYT.cntx_pop();
~~


\zz_kryt_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_kryt_nn/zz_table.fml
::  OLD: \zz_kryt_ck/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KRYT*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_KRYT,
   $("_a.table(_b,"+$_mode+",,'ZZ_LINK','ZZ_TYP','TRYB')"),
   "{? ~exec('is_kryt','phr_tab',($ZZ_KRYT.KLASA)())
    || _a.err_fld(_b,'KLASA',1,'Niedozwolona klasa wartości kryterium doboru.'@)
    || 1
    ?}
   ",
   "_a.in_set(_b,'TRYB',,'&','|','~')"
)


\zz_krytf_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_KRYTF.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_krytx_addb','phr_zz_tab',ZZ_KRYTF)


\zz_krytf_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_KRYTF.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KRYTF*'PUTB|'
|| return(1)
?};
exec('zz_krytx_putb','phr_zz_tab',ZZ_KRYTF)


\zz_krytf_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_KRYTF.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_krytf_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_KRYTF.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zz_krytx_adda','phr_zz_tab',ZZ_KRYTF,_a)


\zz_krytf_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_KRYTF.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KRYTF*'PUTA|'
|| return()
?};
exec('zz_krytx_puta','phr_zz_tab',ZZ_KRYTF,_a)


\zz_krytf_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_KRYTF.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_krytj_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_KRYTJ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_krytx_addb','phr_zz_tab',ZZ_KRYTJ)


\zz_krytj_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_KRYTJ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KRYTJ*'PUTB|'
|| return(1)
?};
exec('zz_krytx_putb','phr_zz_tab',ZZ_KRYTJ)


\zz_krytj_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_KRYTJ.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_krytj_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_KRYTJ.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zz_krytx_adda','phr_zz_tab',ZZ_KRYTJ,_a)


\zz_krytj_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_KRYTJ.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KRYTJ*'PUTA|'
|| return()
?};
exec('zz_krytx_puta','phr_zz_tab',ZZ_KRYTJ,_a)


\zz_krytj_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_KRYTJ.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_krytp_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_KRYTP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_krytx_addb','phr_zz_tab',ZZ_KRYTP)


\zz_krytp_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_KRYTP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KRYTP*'PUTB|'
|| return(1)
?};
exec('zz_krytx_putb','phr_zz_tab',ZZ_KRYTP)


\zz_krytp_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_KRYTP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_krytp_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_KRYTP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zz_krytx_adda','phr_zz_tab',ZZ_KRYTP,_a)


\zz_krytp_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_KRYTP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KRYTP*'PUTA|'
|| return()
?};
exec('zz_krytx_puta','phr_zz_tab',ZZ_KRYTP,_a)


\zz_krytp_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_KRYTP.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_kryts_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_KRYTS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_krytx_addb','phr_zz_tab',ZZ_KRYTS)


\zz_kryts_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_KRYTS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KRYTS*'PUTB|'
|| return(1)
?};
exec('zz_krytx_putb','phr_zz_tab',ZZ_KRYTS)


\zz_kryts_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_KRYTS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_kryts_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_KRYTS.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('zz_krytx_adda','phr_zz_tab',ZZ_KRYTS,_a)


\zz_kryts_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_KRYTS.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_KRYTS*'PUTA|'
|| return()
?};
exec('zz_krytx_puta','phr_zz_tab',ZZ_KRYTS,_a)


\zz_kryts_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_KRYTS.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_krytx_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Wyzwalacz przed dołączeniem dla tabel ZZ_KRYTF, ZZ_KRYTJ, ZZ_KRYTP, ZZ_KRYTS.
::   WE: _a - alias tabeli kryterium
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_krytx_chk','phr_zz_tab',_a,0)


\zz_krytx_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Wyzwalacz przed poprawieniem dla tabel ZZ_KRYTF, ZZ_KRYTJ, ZZ_KRYTP, ZZ_KRYTS.
::   WE: _a - alias tabeli kryterium
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? ($('TRIG_OFF.'+(2-!_a)))*'PUTB|'
|| return(1)
?};
exec('zz_krytx_chk','phr_zz_tab',_a,1)


\zz_krytx_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Wyzwalacz po dołączeniu dla tabel ZZ_KRYTF, ZZ_KRYTJ, ZZ_KRYTP, ZZ_KRYTS.
::   WE: _a - alias tabeli kryterium
::       _b - wartość przekazywana jako argument _a do formuł wyzwalaczy "po"
::  OLD: \zz_krytx_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~_b
|| return()
?};
exec('zz_kryt_norm','phr_zz_tab',_a);
exec('zz_kryt_komp','phr_zz_tab',_a);
~~


\zz_krytx_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Wyzwalacz po poprawieniu dla tabel ZZ_KRYTF, ZZ_KRYTJ, ZZ_KRYTP, ZZ_KRYTS.
::   WE: _a - alias tabeli kryterium
::       _b - wartość przekazywana jako argument _a do formuł wyzwalaczy "po"
::  OLD: \zz_krytx_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ($('TRIG_OFF.'+(2-!_a)))*'PUTA|'
|| return()
?};
{? ~_b
|| return()
?};
exec('zz_kryt_norm','phr_zz_tab',_a);
{? _a.ZZ_KRYT<>bfld('ZZ_KRYT')
|| _a.ZZ_KRYT:=bfld('ZZ_KRYT');
   _a.put()
?};
~~


\zz_krytx_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza poprawnść danych. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a - alias tabeli kryterium
::       _b [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_krytx_ck/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ($('TRIG_OFF.'+(2-!_a)))*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_b')=type_of(0) || _b<>0 ?};

ZZ_DOK.cntx_psh();
ZZ_KRYT.cntx_psh();
_ret:=__CHK.validate(_a,
   $("_a.table(_b,"+$_mode+")"),
   "{? ($_b.ZZ_KRYT().KLASA)()<>_b
    || _a.err_fld(_b,'ZZ_KRYT',1,'Niedozwolona klasa wartości kryterium doboru.'@)
    || 1
   ?}",
   {? _a=ZZ_KRYTS & _a.ZZ_KRYT().ZZ_LINK().KLASA='ZZ_KOMP'
   || $("_test:=1;"+
         {? _mode
         || "_ref:=_b.ref();"
         || "_ref:=null;"
         ?}+
        "_key:='LINK_REK';
         _b.cntx_psh();
         _b.index(_key);
         _b.prefix();
         {? _b.find_key(_b.ZZ_KRYT().ZZ_LINK,_b.REKORD)"+{? _mode || "& _b.ref()<>_ref" || "" ?}+
        "|| _a.err_ndx(_b,_key,"+$_mode+");
            _test:=0
         ?};
         _b.cntx_pop();
         _test
      ")
   || "1"
   ?}
);
ZZ_KRYT.cntx_pop();
ZZ_DOK.cntx_pop();

_ret


\zz_kryt_norm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Normalizuje kryterium.
::   WE: _a - alias tabeli kryterium
:: UWAGA! Poprawność argumentow wywołania nie jest weryfikowana
::  OLD: \norm_kryt/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
_typ:='typ';
_nazwa:='';
{? _a=ZZ_KRYTF
|| ZZ_FML.cntx_psh();
   _nazwa:=ZZ_KRYTF.REKORD().NAZWA;
   ZZ_FML.cntx_pop();
   _typ:='zz_fml'
|? _a=ZZ_KRYTJ
|| UD_SKL.cntx_psh();
   _nazwa:=ZZ_KRYTJ.REKORD().OPIS;
   UD_SKL.cntx_pop();
   _typ:='ud_skl'
|? _a=ZZ_KRYTS
|| STN.cntx_psh();
   _nazwa:=ZZ_KRYTS.REKORD().ST;
   STN.cntx_pop();
   _typ:='stn'
|? _a=ZZ_KRYTP
|| OSOBA.cntx_psh();
   OSOBA.prefix();
   P.cntx_psh();
   P.prefix();
   _nazwa:=form(ZZ_KRYTP.REKORD().OSOBA().NAZWISKO+' '+OSOBA.PIERWSZE+' '+OSOBA.PESEL);
   P.cntx_pop();
   OSOBA.cntx_pop();
   _typ:='p'
?};
_test:=
   "{? {| "+(2-!_a)+" |! index('ZZ_KRYT'); prefix(); find_key(@.ZZ_KRYT.ref()) |} "+
   "|| exec('test_"+_typ+"','phr_dane',_a,"+(!_a)+".REKORD,_b) "+
   "?}";

ZZ_KRYT.cntx_psh();
ZZ_KRYT.prefix();
{? _a.ZZ_KRYT().TEST<>_test | ZZ_KRYT.NAZWA<>_nazwa
|| ZZ_KRYT.TEST:=_test;
   ZZ_KRYT.NAZWA:=_nazwa;
   ZZ_KRYT.put()
?};
ZZ_KRYT.cntx_pop();

1


\zz_kryt_komp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Formuła wywoływana z wyzwalacza po dołączeniu szczegółu kryterium.
::   WE: _a - alias tabeli kryterium
:: UWAGA! Poprawność argumentóww wywołania nie jest weryfikowana
::  OLD: \auto_komp/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a.ZZ_KRYT().ZZ_TYP().KOD<>'OP' || return ?};

{? _a.ZZ_KRYT().ZZ_LINK().KLASA=2-!ZZ_PROFT
:  czy dodano dla profilu ocen?
|| _link:=_a.ZZ_KRYT().ZZ_DOK;
:  ustal klucz kryterium doboru
   _key:=exec('kryt_key','phr_dane',_a);
:  ustal wskazanie na typ oceny pracowniczej
   _typ:=exec('typ_op','phr_dane');

:  sprawdź, czy dodano do profilu ogólnego,
:  jeśli tak, to nie uzupełniaj kompetencji
:  z kryteriów kompetencji tylko z profilu
   _ogolny:=0;
   ZZ_PROF.cntx_psh();
   ZZ_PROFK.cntx_psh();
   ZZ_PROFT.cntx_psh();
   ZZ_PROFT.index('ZZ_DOK');
   ZZ_PROFT.prefix();
   {? ZZ_PROFT.find_key(ref_name(_a.ZZ_KRYT().ZZ_LINK),_a.ZZ_KRYT().ZZ_LINK)
   || ZZ_PROF.index('ZZ_DOK');
      ZZ_PROF.prefix();
      {? ZZ_PROF.find_key(ref_name(ZZ_PROFT.ZZ_LINK),ZZ_PROFT.ZZ_LINK)
      || _ogolny:=ZZ_PROF.RODZAJ().KOD='O'
      ?}
   ?};
   {? _ogolny
   || ZZ_PROFK.index('UNIQUE');
      ZZ_PROFK.prefix(ref_name(ZZ_PROF.ZZ_DOK),ZZ_PROF.ZZ_DOK);
      _loop:=ZZ_PROFK.first();
      {!
      |? _loop
      |! exec('get_profk','phr_dane',_link,ZZ_PROFK.ZZ_KOMP);
         _loop:=ZZ_PROFK.next()
      !}
   || ZZ_KRYT.cntx_psh();
      ZZ_KOMP.cntx_psh();
      ZZ_KOMP.index('NAZWA');
      ZZ_KOMP.prefix(ZZ_POM.ZZ_HIST);
:     przeglądaj kompetencje
      _komp_loop:=ZZ_KOMP.first();
      {!
      |? _komp_loop
      |! _komp:=ZZ_KOMP.ref();
         _dok:=ZZ_KOMP.ZZ_DOK;
         ZZ_KRYT.index('UNIQUE');
         ZZ_KRYT.prefix(ref_name(_dok),_dok,_typ);
:        przeglądaj kryteria doboru
         _kryt_loop:=ZZ_KRYT.first();
         {!
         |? _kryt_loop
         |! _tab:=($ZZ_KRYT.KLASA)();
            _tab.cntx_psh();
            _tab.index('ZZ_KRYT');
           {? _tab.find_key(ZZ_KRYT.ref())
            || {? _key*exec('kryt_key','phr_dane',_tab)
:              znaleziono zgodne kryterium doboru pracownika
:              dodaj kompetencje do kryterium jeśli jej nie ma
               || exec('get_profk','phr_dane',_link,_komp)
               ?}
            ?};
            _tab.cntx_pop();
            &_tab;
            _kryt_loop:=ZZ_KRYT.next()
         !};
         _komp_loop:=ZZ_KOMP.next()
      !};

:     porządki
      ZZ_KRYT.cntx_pop();
      ZZ_KOMP.cntx_pop()
   ?};
   ZZ_PROFK.cntx_pop();
   ZZ_PROFT.cntx_pop();
   ZZ_PROF.cntx_pop()

|? _a.ZZ_KRYT().ZZ_LINK().KLASA=2-!ZZ_KOMP
:  czy dodano dla kompetencji?
|| _dok:=_a.ZZ_KRYT().ZZ_LINK;
   _link:=_a.ZZ_KRYT().ZZ_DOK;
   {? _komp:=exec('dok2ref','phr_tab',_dok)
   || exec('copy_kompk','phr_dane',_dok,_link,_komp);
      exec('copy_komps','phr_dane',_dok,_link,_komp);
      exec('copy_kompz','phr_dane',_dok,_link,_komp)
   ?}
?}


\zz_met_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_MET.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZZ_MET) & exec('zz_met_chk','phr_zz_tab',0)


\zz_met_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_MET.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_MET*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_MET) & exec('zz_met_chk','phr_zz_tab',1)


\zz_met_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_MET.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_met_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_tmp','#table',ZO_NOTA,'ZZ_MET',ZZ_MET.ref()) &
exec('del_tmp','#table',ZZ_PROFO,'ZZ_MET',ZZ_MET.ref())


\zz_met_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_MET.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_MET,_a);
~~


\zz_met_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_MET.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_MET*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_MET,_a);
~~


\zz_met_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_MET.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_met_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza poprawność danych. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_met_nn/zz_table.fml
::  OLD: \zz_met_ck/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_MET*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_MET,
   $("_a.table(_b,"+$_mode+",,'KOD','NAZWA','RODZAJ','SYSTEM')"),
   "_a.in_set(_b,'RODZAJ',,'O','S')",
   "_a.in_set(_b,'SYSTEM',,'T','N')"
)


\zz_mobw_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_MOBW.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZZ_MOBW) & exec('zz_mobw_chk','phr_zz_tab',0)


\zz_mobw_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_MOBW.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_MOBW*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_MOBW) & exec('zz_mobw_chk','phr_zz_tab',1)


\zz_mobw_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_MOBW.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_mobw_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_MOBW.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_MOBW,_a);
~~


\zz_mobw_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_MOBW.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_MOBW*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_MOBW,_a);
~~


\zz_mobw_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_MOBW.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_mobw_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \init_table/zz_setup.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_MOBW*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_MOBW,
   $("_a.table(_b,"+$_mode+")")
)


\zz_osoba_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_OSOBA.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_addb','phr_tab',ZZ_OSOBA) & exec('zz_osoba_chk','phr_zz_tab',0)
|| {? ZZ_OSOBA.ZZ_LINK=null
   || ZZ_OSOBA.ZZ_LINK:=ZZ_OSOBA.ZZ_DOK;
      ZZ_OSOBA.ZZ_LINK<>null
   || 1
   ?}
?}


\zz_osoba_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_OSOBA.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_OSOBA*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_OSOBA) & exec('zz_osoba_chk','phr_zz_tab',1)


\zz_osoba_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_OSOBA.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_osoba_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZO_CEL,'ZO_CEL',ZZ_OSOBA.ref()) &
exec('del_tmp','#table',ZO_CEL,'KTO_Z',ZZ_OSOBA.ref()) &
exec('del_tmp','#table',ZO_CEL,'KTO_W',ZZ_OSOBA.ref()) &
exec('del_ndx','#table',ZZ_OSTYP,'UNIQUE',ZZ_OSOBA.ref()) &
exec('del_tmp','#table',ZO_OSOBA,'ZZ_OSOBA',ZZ_OSOBA.ref())


\zz_osoba_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_OSOBA.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_OSOBA,_a);
~~


\zz_osoba_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_OSOBA.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_OSOBA*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_OSOBA,_a);
~~


\zz_osoba_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_OSOBA.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_osoba_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_osoba_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_OSOBA*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_OSOBA,
   $("_a.table(_b,"+$_mode+",,'NAZWISKO','PIERWSZE')")
)


\zz_ostyp_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_OSTYP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_ostyp_chk','phr_zz_tab',0)


\zz_ostyp_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_OSTYP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_OSTYP*'PUTB|'
|| return(1)
?};
exec('zz_ostyp_chk','phr_zz_tab',1)


\zz_ostyp_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_OSTYP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_ostyp_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_OSTYP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_ostyp_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_OSTYP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_OSTYP*'PUTA|'
|| return()
?};
~~


\zz_ostyp_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_OSTYP.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_ostyp_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \init_table/zz_setup.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_OSTYP*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_OSTYP,
   $("_a.table(_b,"+$_mode+")")
)


\zz_pow_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_POW.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_pow_chk','phr_zz_tab',0)


\zz_pow_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_POW.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_POW*'PUTB|'
|| return(1)
?};
exec('zz_pow_chk','phr_zz_tab',1)


\zz_pow_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_POW.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_pow_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_POW.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_pow_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_POW.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_POW*'PUTA|'
|| return()
?};
~~


\zz_pow_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_POW.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_pow_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \init_table/zz_setup.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_POW*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_POW,
   $("_a.table(_b,"+$_mode+")")
)


\zz_prof_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_PROF.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZZ_PROF) & exec('zz_prof_chk','phr_zz_tab',0)


\zz_prof_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_PROF.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_PROF*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_PROF) & exec('zz_prof_chk','phr_zz_tab',1)


\zz_prof_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_PROF.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_prof_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
exec('del_tmp','#table',ZO_PROF,'ZZ_PROF',ZZ_PROF.ref()) &
: usuń powiązania przez dokument właściwy dla profilu
exec('del_ndx','#table',ZZ_PROFK,'NAZWA',ZZ_PROF.NP_DOK,ZZ_PROF.ZZ_DOK) &
exec('del_ndx','#table',ZZ_PROFT,'UNIQUE',ZZ_PROF.NP_DOK,ZZ_PROF.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KRYT,'UNIQUE',ZZ_PROF.NP_DOK,ZZ_PROF.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPS,'WARTOSC',ZZ_PROF.NP_DOK,ZZ_PROF.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPZ,'UNIQUE',ZZ_PROF.NP_DOK,ZZ_PROF.ZZ_DOK)


\zz_prof_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_PROF.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('dok_adda','phr_tab',ZZ_PROF,_a)
|| exec('get_proft','phr_dane',ZZ_PROF.ZZ_DOK,exec('typ_op','phr_dane'));
   {? ZZ_PROF.RODZAJ().KOD='O'
   || exec('copy_proft','phr_dane',ZZ_PROF.ZZ_HIST().ZZ_DOK,ZZ_PROF.ZZ_DOK)
   ?}
?};
~~


\zz_prof_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_PROF.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_PROF*'PUTA|'
|| return()
?};
{? exec('dok_puta','phr_tab',ZZ_PROF,_a)
|| exec('get_proft','phr_dane',ZZ_PROF.ZZ_DOK,exec('typ_op','phr_dane'))
?};
~~


\zz_prof_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_PROF.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_prof_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_prof_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_PROF*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_PROF,
   $("_a.table(_b,"+$_mode+",,'ZZ_HIST','NAZWA','RODZAJ')")
)


\zz_profk_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_PROFK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_profk_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
exec('zz_profk_modb','phr_zz_tab');

exec('dok_addb','phr_tab',ZZ_PROFK) & exec('zz_profk_chk','phr_zz_tab',0)


\zz_profk_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_PROFK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_profk_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_PROFK*'PUTB|'
|| return(1)
?};
exec('zz_profk_modb','phr_zz_tab');

exec('dok_putb','phr_tab',ZZ_PROFK) & exec('zz_profk_chk','phr_zz_tab',1)


\zz_profk_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_PROFK.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::  OLD: \zz_profk_bd/zz_link.fml
::  OLD: \zz_profk_del/zz_link.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZZ_PROFK.ZZ_LINK().KLASA=2-!ZZ_PROF
:  Profil ogólny
|| _komp:=ZZ_PROFK.ZZ_KOMP;
   _typ:=exec('typ_op','phr_dane');
   _dok:=exec('get_proft','phr_dane',ZZ_PROFK.ZZ_LINK,_typ,1,1);
   ZZ_KRYT.cntx_psh();
   ZZ_KRYT.index('DOBOR');
   ZZ_KRYT.prefix(ref_name(_dok),_dok,_typ,1);
   _loop:=ZZ_KRYT.first();
   {!
   |? _loop
   |! ZZ_PROFK.cntx_psh();
      ZZ_PROFK.index('UNIQUE');
      ZZ_PROFK.prefix(ref_name(ZZ_KRYT.ZZ_DOK),ZZ_KRYT.ZZ_DOK,_komp);
      {? ZZ_PROFK.first()
      || ZZ_PROFK.del()
      ?};
      ZZ_PROFK.cntx_pop();
      _loop:=ZZ_KRYT.next()
   !};
   ZZ_KRYT.cntx_pop()
?};

exec('del_ndx','#table',ZZ_PROFO,'UNIQUE',ZZ_PROFK.ref()) &
exec('del_ndx','#table',ZZ_PROFT,'UNIQUE',ZZ_PROFK.NP_DOK,ZZ_PROFK.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPK,'WARTOSC',ZZ_PROFK.NP_DOK,ZZ_PROFK.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPS,'WARTOSC',ZZ_PROFK.NP_DOK,ZZ_PROFK.ZZ_DOK) &
exec('del_ndx','#table',ZZ_KOMPZ,'UNIQUE',ZZ_PROFK.NP_DOK,ZZ_PROFK.ZZ_DOK)


\zz_profk_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_PROFK.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \zz_profk_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_adda','phr_tab',ZZ_PROFK,_a)
|| return()
?};

_klasa:='@.'+ZZ_PROFK.ZZ_LINK().KLASA;

{? _klasa=!ZO_TEST
|| return()

|? _klasa=!ZZ_PROF
:  obsługa profilu ogólnego
|| _dok:=ZZ_PROFK.ZZ_KOMP().ZZ_DOK;
   _komp:=ZZ_PROFK.ZZ_KOMP;
   _link:=ZZ_PROFK.ZZ_LINK;
   _ref:=ZZ_PROFK.ref();
   _typ_op:=exec('typ_op','phr_dane');
   _profk_ref:=exec('get_profk','phr_dane',_dok,_komp);
   _proft_dok:=exec('get_proft','phr_dane',_link,_typ_op,1);

:  uzupełnienie kompetencji dla wszystkich kryteriow
:  doboru kwalifikujących pracownika jako ocenianego
   ZZ_KRYT.cntx_psh();
   ZZ_KRYT.index('DOBOR');
   ZZ_KRYT.prefix(ref_name(_proft_dok),_proft_dok,_typ_op,1);
   _loop:=ZZ_KRYT.first();
   {!
   |? _loop
   |! exec('get_profk','phr_dane',ZZ_KRYT.ZZ_DOK,_komp);
      _loop:=ZZ_KRYT.next()
   !};
   ZZ_KRYT.cntx_pop();

   ZZ_PROF.cntx_psh();
   ZZ_PROF.index('ZZ_DOK');
   ZZ_PROF.prefix();
:  czy kompetencja jest dodawana do profilu ogólnego?
   {? ZZ_PROF.find_key(ref_name(_link),_link) & ZZ_PROF.RODZAJ().KOD='O'
   || _exc_typ:=exec('get_proft','phr_dane',_link,_typ_op);
      ZZ_PROFT.cntx_psh();
      ZZ_PROFT.index('UNIQUE');

:     przeglądaj metody oceny kompetencji
      ZZ_PROFT.prefix(ref_name(_dok),_dok);
      _loop:=ZZ_PROFT.first();
      {!
      |? _loop
      |! {? ZZ_PROFT.ref()<>_exc_typ
         || exec('get_proft','phr_dane',_link,ZZ_PROFT.ZZ_TYP)
         ?};
         _loop:=ZZ_PROFT.next()
      !};

:     przegladaj metody oceny profilu
      ZZ_PROFT.prefix(ref_name(_link),_link);
      _loop:=ZZ_PROFT.first();
      {!
      |? _loop
      |! {? ZZ_PROFT.ref()<>_exc_typ
         || _proft_ref:=exec('get_proft','phr_dane',_dok,ZZ_PROFT.ZZ_TYP,,1);
            _proft:=ZZ_PROFT.ref();
            ZZ_PROFO.cntx_psh();
            ZZ_PROFO.index('UNIQUE');
            ZZ_PROFO.prefix(_profk_ref,_proft_ref);
            {? ZZ_PROFO.first()
            || {!
               |? exec('get_profo','phr_dane',_ref,_proft,ZZ_PROFO.ZZ_MET);
                  ZZ_PROFO.next()
               !}
            || exec('get_profo','phr_dane',_ref,_proft,exec('met_find','phr_dane',ZZ_PAR.MET_XX));
               exec('get_profo','phr_dane',_ref,_proft,exec('met_find','phr_dane',{? ZZ_PAR.MET_OO='T' || 'OO' ?}))
            ?};
            ZZ_PROFO.cntx_pop()
         ?};
         _loop:=ZZ_PROFT.next()
      !};
      ZZ_PROFT.cntx_pop();

:     uzupelnij domyslne wartosci
      _def:=ZZ_POM.ZZ_HIST().ZZ_DOK;
      {? exec('copy_kompk','phr_dane',_dok,ZZ_PROFK.ZZ_DOK,_komp)=0
      || exec('copy_kompk','phr_dane',_def,ZZ_PROFK.ZZ_DOK,_komp)
      ?};
      {? exec('copy_komps','phr_dane',_dok,ZZ_PROFK.ZZ_DOK,_komp)=0
      || exec('copy_komps','phr_dane',_def,ZZ_PROFK.ZZ_DOK,_komp)
      ?};
      {? exec('copy_kompz','phr_dane',_dok,ZZ_PROFK.ZZ_DOK,_komp)=0
      || exec('copy_kompz','phr_dane',_def,ZZ_PROFK.ZZ_DOK,_komp)
      ?}
   ?};
   ZZ_PROF.cntx_pop()

|? _klasa=!ZZ_KRYT
:  Kryterium doboru
|| _link:=ZZ_PROFK.ZZ_LINK;
   _dst:=ZZ_PROFK.ZZ_DOK;
   ZZ_KRYT.cntx_psh();
   ZZ_KRYT.index('ZZ_DOK');
   ZZ_KRYT.prefix();
   {? ZZ_KRYT.find_key(ref_name(_link),_link)
   || ZZ_PROFT.cntx_psh();
      ZZ_PROFT.index('ZZ_DOK');
      ZZ_PROFT.prefix();
      {? ZZ_PROFT.find_key(ref_name(ZZ_KRYT.ZZ_LINK),ZZ_KRYT.ZZ_LINK)
      || {? ZZ_PROFT.ZZ_LINK().KLASA=2-!ZZ_PROF
         || ZZ_PROF.cntx_psh();
            ZZ_PROF.index('ZZ_DOK');
            {? {? ZZ_PROF.find_key(ref_name(ZZ_PROFT.ZZ_LINK),ZZ_PROFT.ZZ_LINK)
               || {? ZZ_PROF.RODZAJ().KOD='O'
                  || _dst:=ZZ_PROF.ZZ_DOK
                  ?}
               || 1
               ?}
            || {? ZZ_KRYT.DOBOR
               || _komp:=ZZ_PROFK.ZZ_KOMP;
                  _dok:=ZZ_PROFK.ZZ_KOMP().ZZ_DOK;
                  exec('copy_kompk','phr_dane',_dok,ZZ_PROFK.ZZ_DOK,_komp);
                  exec('copy_komps','phr_dane',_dok,ZZ_PROFK.ZZ_DOK,_komp);
                  exec('copy_kompz','phr_dane',_dok,ZZ_PROFK.ZZ_DOK,_komp)
               ?};
               ZZ_PROF.cntx_pop();
               ZZ_PROFT.cntx_pop();
               ZZ_KRYT.cntx_pop();
               return()
            ?};
            ZZ_PROF.cntx_pop()
         ?};
         _val:=exec('kryt_val','phr_dane')
      || ZZ_PROFT.cntx_pop();
         ZZ_KRYT.cntx_pop();
         return()
      ?}
   || ZZ_KRYT.cntx_pop();
      return()
   ?};

   _dok:=ZZ_PROFK.ZZ_DOK;
   _src:=ZZ_PROFK.ZZ_KOMP().ZZ_DOK;
   _komp:=ZZ_PROFK.ZZ_KOMP;

:  uzupełnienie metod oceny
   ZZ_PROFO.cntx_psh();
   ZZ_PROFO.index('ZZ_LINK');
   ZZ_PROFT.index('UNIQUE');
   ZZ_PROFT.prefix(ref_name(_src),_src);
   _loop:=ZZ_PROFT.first();
   {!
   |? _loop
   |! _typ:=ZZ_PROFT.ZZ_TYP;
      _proft:=exec('get_proft','phr_dane',_dst,_typ);
      ZZ_PROFO.prefix(ref_name(_src),_src,_typ);
      _loop:=ZZ_PROFO.first();
      {!
      |? _loop
      |! _met:=ZZ_PROFO.ZZ_MET;
         ZZ_PROFO.cntx_psh();
         ZZ_PROFO.index('UNIQUE');
         ZZ_PROFO.prefix(ZZ_PROFK.ref(),_proft);
         {? ~ZZ_PROFO.find_key(_met)
         || ZZ_PROFO.blank(1);
            ZZ_PROFO.ZZ_PROFK:=ZZ_PROFK.ref();
            ZZ_PROFO.ZZ_PROFT:=_proft;
            ZZ_PROFO.ZZ_MET:=_met;
            ZZ_PROFO.add()
         ?};
         ZZ_PROFO.cntx_pop();
         _loop:=ZZ_PROFO.next()
      !};
      _loop:=ZZ_PROFT.next()
   !};

:  uzupełnienie wartości oceny kompetencji
   ZZ_KRYT.index('UNIQUE');
   ZZ_KRYT.prefix(ref_name(_src),_src);
   _loop:=ZZ_KRYT.first();
   _jest:=0;
   {!
   |? _loop & ~_jest
   |! {? exec('kryt_val','phr_dane')<>_val
      || _loop:=ZZ_KRYT.next()
      || _jest:=1;
         exec('copy_kompk','phr_dane',ZZ_KRYT.ZZ_DOK,_dok,_komp);
         exec('copy_komps','phr_dane',ZZ_KRYT.ZZ_DOK,_dok,_komp);
         exec('copy_kompz','phr_dane',ZZ_KRYT.ZZ_DOK,_dok,_komp)
      ?}
   !};

:  uzupełnij zapisy z definicji kompetencji,
:  jeśli wartości nie wpisano z kryterium
   ZZ_KOMPK.cntx_psh();
   ZZ_KOMPK.index('WARTOSC');
   ZZ_KOMPK.prefix(ref_name(_dok),_dok,_komp);
   {? ~ZZ_KOMPK.first()
   || exec('copy_kompk','phr_dane',_src,_dok,_komp)
   ?};
   ZZ_KOMPK.cntx_pop();

:  uzupełnij zapisy z definicji kompetencji,
:  jeśli wartosci nie wpisano z kryterium
   ZZ_KOMPS.cntx_psh();
   ZZ_KOMPS.index('WARTOSC');
   ZZ_KOMPS.prefix(ref_name(_dok),_dok,_komp);
   {? ~ZZ_KOMPS.first()
   || exec('copy_komps','phr_dane',_src,_dok,_komp)
   ?};
   ZZ_KOMPS.cntx_pop();

:  uzupełnij zapisy z definicji kompetencji,
:  jeśli wartości nie wpisano z kryterium
   ZZ_KOMPZ.cntx_psh();
   ZZ_KOMPZ.index('UNIQUE');
   ZZ_KOMPZ.prefix(ref_name(_dok),_dok,_komp);
   {? ~ZZ_KOMPZ.first()
   || exec('copy_kompz','phr_dane',_src,_dok,_komp)
   ?};
   ZZ_KOMPZ.cntx_pop();

:  porządki
   ZZ_PROFT.cntx_pop();
   ZZ_PROFO.cntx_pop();
   ZZ_KRYT.cntx_pop()
?};
~~


\zz_profk_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_PROFK.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \zz_profk_ap/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_PROFK*'PUTA|'
|| return()
?};
{? ~exec('dok_puta','phr_tab',ZZ_PROFK,_a)
|| return()
?};

{? ZZ_PROFK.ZZ_LINK().KLASA=(2-!ZZ_PROF) & (
      ZZ_PROFK.ZZ_KOMP<>bfld('ZZ_KOMP') |
      ZZ_PROFK.WAGA<>bfld('WAGA') |
      ZZ_PROFK.OCENA<>bfld('OCENA') |
      ZZ_PROFK.WYMOG<>bfld('WYMOG')
   )
|| _link:=ZZ_PROFK.ZZ_LINK;
   ZZ_PROF.cntx_psh();
   ZZ_PROF.index('ZZ_DOK');
   ZZ_PROF.prefix();
:  czy poprawiana jest kompetencja profilu ogólnego?
   {? ZZ_PROF.find_key(ref_name(_link),_link) & ZZ_PROF.RODZAJ().KOD='O'
   || _komp:=ZZ_PROFK.ZZ_KOMP;
      _waga:=ZZ_PROFK.WAGA;
      _ocena:=ZZ_PROFK.OCENA;
      _wymog:=ZZ_PROFK.WYMOG;
      _typ_op:=exec('typ_op','phr_dane');
      _proft_dok:=exec('get_proft','phr_dane',_link,_typ_op,1);

:     aktualizacja kompetencji dla wszystkich kryteriow
:     doboru kwalifikujacych pracownika jako ocenianego
      ZZ_PROFK.cntx_psh();
      ZZ_KRYT.cntx_psh();
      ZZ_KRYT.index('DOBOR');
      ZZ_KRYT.prefix(ref_name(_proft_dok),_proft_dok,_typ_op,1);
      _loop:=ZZ_KRYT.first();
      {!
      |? _loop
      |! ZZ_PROFK.index('UNIQUE');
         ZZ_PROFK.prefix(ref_name(ZZ_KRYT.ZZ_DOK),ZZ_KRYT.ZZ_DOK);
         {? ZZ_PROFK.find_key(bfld('ZZ_KOMP'))
         || ZZ_PROFK.ZZ_KOMP:=_komp;
            ZZ_PROFK.WAGA:=_waga;
            ZZ_PROFK.OCENA:=_ocena;
            ZZ_PROFK.WYMOG:=_wymog;
            ZZ_PROFK.put()
         ?};
         _loop:=ZZ_KRYT.next()
      !};
      ZZ_KRYT.cntx_pop();
      ZZ_PROFK.cntx_pop()
   ?};
   ZZ_PROF.cntx_pop()
?};
~~


\zz_profk_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_PROFK.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_profk_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Wywoływana z wyzwalaczy przed dołącz i popraw, przed przeprowadzeniem testow poprawnosci rekordu.
::  OLD: \zz_profk_bw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZZ_PROFK.WAGA<=0
|| ZZ_PROFK.WAGA:=ZZ_PROFK.ZZ_KOMP().WAGA;
   {? ZZ_PROFK.WAGA<=0
   || ZZ_PROFK.WAGA:=1
   ?}
?}


\zz_profk_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_profk_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_PROFK*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_PROFK,
   $("_a.table(_b,"+$_mode+",,'ZZ_LINK','ZZ_KOMP','WAGA')")
)


\zz_profo_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_PROFO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZZ_PROFO) & exec('zz_profo_chk','phr_zz_tab',0)


\zz_profo_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_PROFO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_PROFO*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_PROFO) & exec('zz_profo_chk','phr_zz_tab',1)


\zz_profo_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_PROFO.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_profo_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_PROFO.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_PROFO,_a);
~~


\zz_profo_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_PROFO.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_PROFO*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_PROFO,_a);
~~


\zz_profo_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_PROFO.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_profo_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_profo_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_PROFO*'CHK|'
|| return(1)
?};
_put:=var_pres('_a')=type_of(0) & _a;

__CHK.validate(ZZ_PROFO,
   $("_a.table(_b,"+$_put+",'ZZ_PROFK','ZZ_PROFT','ZZ_MET')"),
   $("_unique:=1;
      _ref:="+{? _put || "ZZ_PROFO.ref()" || "null()" ?}+";
      ZZ_MET.cntx_psh();
      ZZ_PROFO.cntx_psh();
      ZZ_PROFO.index('RODZAJ');
      ZZ_PROFO.prefix(ZZ_PROFO.ZZ_PROFK,ZZ_PROFO.ZZ_PROFT,ZZ_PROFO.ZZ_MET().RODZAJ);
      {? ZZ_PROFO.first()
      || {!
         |? {? ZZ_PROFO.ref()=_ref
            || ZZ_PROFO.next()
            || _unique:=0
            ?}
         !}
      ?};
      ZZ_PROFO.cntx_pop();
      ZZ_MET.cntx_pop();

      {? ~_unique
      || __CHK.err_fld(ZZ_PROFO,'ZZ_MET',1,'(powielony rodzaj metody oceny)');
         return('ZZ_MET')
      ?};
      ''
   ")
)


\zz_proft_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_PROFT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_proft_modb','phr_zz_tab');

exec('dok_addb','phr_tab',ZZ_PROFT) & exec('zz_proft_chk','phr_zz_tab',0)


\zz_proft_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_PROFT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_PROFT*'PUTB|'
|| return(1)
?};
exec('zz_proft_modb','phr_zz_tab');

exec('dok_putb','phr_tab',ZZ_PROFT) & exec('zz_proft_chk','phr_zz_tab',1)


\zz_proft_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_PROFT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('del_tmp','#table',ZZ_PROFO,'ZZ_PROFT',ZZ_PROFT.ref()) &
exec('del_ndx','#table',ZZ_KRYT,'NAZWA',ZZ_PROFT.NP_DOK,ZZ_PROFT.ZZ_DOK)


\zz_proft_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_PROFT.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::  OLD: \zz_proft_aa/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_adda','phr_tab',ZZ_PROFT,_a)
|| return()
?};

_klasa:='@.'+ZZ_PROFT.ZZ_LINK().KLASA;

{? _klasa=!ZO_TEST
|| return

|? _klasa=!ZZ_KOMP
|| {? (_ref:=exec('dok2ref','phr_tab',ZZ_PROFT.ZZ_LINK))<>null &
      (_komp:=exec('get_profk','phr_dane',ZZ_PROFT.ZZ_LINK,_ref))<>null
   || ZZ_PROFO.cntx_psh();
      ZZ_PROFO.index('UNIQUE');
      ZZ_PROFO.prefix(_komp,ZZ_PROFT.ref());
      exec('get_profo','phr_dane',_komp,ZZ_PROFT.ref(),exec('met_find','phr_dane',ZZ_PAR.MET_XX));
      exec('get_profo','phr_dane',_komp,ZZ_PROFT.ref(),exec('met_find','phr_dane',{? ZZ_PAR.MET_OO='T' || 'OO' ?}));
      ZZ_PROFO.cntx_pop()
   ?}

|? _klasa=!ZZ_PROF & ZZ_PROFT.ZZ_TYP().KOD<>'OP'
|| ZZ_PROF.cntx_psh();
   ZZ_PROF.index('ZZ_DOK');
   ZZ_PROF.prefix(ref_name(ZZ_PROFT.ZZ_LINK));
   {? ZZ_PROF.find_key(ZZ_PROFT.ZZ_LINK) & ZZ_PROF.RODZAJ().KOD='O'
:     obsługa dla profilu ogólnego
   ||
:     domyślne metody oceny
      exec('init_pars','phr_tab');
      {? ZZ_PAR.MET_XX<>''
      || ZZ_PROFO.blank();
         ~~

      ?};
      {? ZZ_PAR.MET_OO='T'
      || ZZ_PROFO.blank();
         ~~
      ?};
:     aktualizacja w tle części "szczegółowej" profilu
      _typ_op:=exec('typ_op','phr_dane');
      ZZ_PROFK.cntx_psh();
      ZZ_PROFK.index('UNIQUE');
      ZZ_PROFK.prefix(ref_name(ZZ_PROFT.ZZ_LINK),ZZ_PROFT.ZZ_LINK);
      _loop:=ZZ_PROFK.first();
      {!
      |? _loop
      |! _profk:=ZZ_PROFK.ref();
         _komp:=ZZ_PROFK.ZZ_KOMP;
         _dok:=ZZ_PROFK.ZZ_KOMP().ZZ_DOK;
         _def:=exec('get_profk','phr_dane',_dok,_komp);
         _exc:=exec('get_proft','phr_dane',_dok,_typ_op);
         _typ:=exec('get_proft','phr_dane',_dok,ZZ_PROFT.ZZ_TYP,,1);
         ZZ_PROFO.cntx_psh();
         ZZ_PROFO.index('UNIQUE');
         ZZ_PROFO.prefix(_def,_typ);
         {? ZZ_PROFO.first()
         || {!
            |? {? ZZ_PROFO.ZZ_PROFT<>_exc
               || exec('get_profo','phr_dane',_profk,ZZ_PROFT.ref(),ZZ_PROFO.ZZ_MET)
               ?};
               ZZ_PROFO.next()
            !}
         || exec('get_profo','phr_dane',_profk,ZZ_PROFT.ref(),exec('met_find','phr_dane',ZZ_PAR.MET_XX));
            {? ZZ_PAR.MET_OO='T'
            || exec('get_profo','phr_dane',_profk,ZZ_PROFT.ref(),exec('met_find','phr_dane','OO'))
            ?}
         ?};
         ZZ_PROFO.cntx_pop();
         _loop:=ZZ_PROFK.next()
      !};
      ZZ_PROFK.cntx_pop()
   ?};
   ZZ_PROF.cntx_pop()
?};
~~


\zz_proft_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_PROFT.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_PROFT*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_PROFT,_a);
~~


\zz_proft_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_PROFT.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_proft_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Wywoływana z wyzwalaczy przed dołącz i popraw, przed przeprowadzeniem testów poprawności rekordu.
::  OLD: \zz_proft_bw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZZ_PROFT.WAGA<=0
|| ZZ_PROFT.WAGA:=ZZ_PROFT.ZZ_TYP().WAGA;
   {? ZZ_PROFT.WAGA<=0
   || ZZ_PROFT.WAGA:=1
   ?}
?}


\zz_proft_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: [_a] [NUMBER] - Specyfikacja testu:
::             0 - Dołącz [domyślnie];
::             1 - Popraw
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_proft_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_PROFT*'CHK|'
|| return(1)
?};
_put:=var_pres('_a')=type_of(0) & _a;
__CHK.validate(ZZ_PROFT,$("_a.table(_b,"+$_put+",,'ZZ_LINK','ZZ_TYP','WAGA')"))


\zz_stan_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_STAN.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZZ_STAN) & exec('zz_stan_chk','phr_zz_tab',0)


\zz_stan_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_STAN.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_STAN*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_STAN) & exec('zz_stan_chk','phr_zz_tab',1)


\zz_stan_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_STAN.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_stan_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_STAN.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_STAN,_a);
~~


\zz_stan_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_STAN.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_STAN*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_STAN,_a);
~~


\zz_stan_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_STAN.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_stan_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KO [12.30]
:: OPIS: Sprawdza wypelnienie wymaganych pol. Wykorzystywana w wyzwalaczach przed dolacz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_stan_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_STAN*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_STAN,
   $("_a.table(_b,"+$_mode+",,'NAZWA')")
)


\zz_stanp_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_STANP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_stanp_modb','phr_zz_tab');

exec('dok_addb','phr_tab',ZZ_STANP) & exec('zz_stanp_chk','phr_zz_tab',0)


\zz_stanp_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_STANP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_STANP*'PUTB|'
|| return(1)
?};
exec('zz_stanp_modb','phr_zz_tab');

exec('dok_putb','phr_tab',ZZ_STANP) & exec('zz_stanp_chk','phr_zz_tab',1)


\zz_stanp_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_STANP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_stanp_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_STANP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_STANP,_a);
~~


\zz_stanp_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_STANP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_STANP*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_STANP,_a);
~~


\zz_stanp_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_STANP.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \zz_stanp_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_dela','phr_tab',_a)
|| return()
?};
ZZ_STANP.cntx_psh();
ZZ_STANP.index('ELEMENT');
ZZ_STANP.prefix(bfld('PRAC'));
_numer:=0;
_loop:=ZZ_STANP.first();
{!
|? _loop
|! _numer+=1;
   {? ZZ_STANP.P<>_numer
   || ZZ_STANP.P:=_numer;
      ZZ_STANP.put()
   ?};
   _loop:=ZZ_STANP.next()
!};
ZZ_STANP.cntx_pop();
~~


\zz_stanp_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KO [12.30]
:: OPIS: Wywoływana z wyzwalaczy przed dołącz i popraw, przed przeprowadzeniem testow poprawności rekordu.
::  OLD: \zz_stanp_bw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZZ_STANP.DRUK<>'N' & ZZ_STANP.DRUK<>'T'
|| ZZ_STANP.DRUK:='T'
?};
{? ZZ_STANP.W<>'N' & ZZ_STANP.W<>'T'
|| ZZ_STANP.W:='T'
?}


\zz_stanp_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KO [12.30]
:: OPIS: Sprawdza wypelnienie wymaganych pol. Wykorzystywana w wyzwalaczach przed dolacz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_stanp_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_STANP*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_STANP,
   $("_a.table(_b,"+$_mode+",,'PRAC','ZZ_STAN','DRUK','W')")
)


\zz_stans_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_STANS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_stans_modb','phr_zz_tab');

exec('dok_addb','phr_tab',ZZ_STANS) & exec('zz_stans_chk','phr_zz_tab',0)


\zz_stans_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_STANS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_STANS*'PUTB|'
|| return(1)
?};
exec('zz_stans_modb','phr_zz_tab');

exec('dok_putb','phr_tab',ZZ_STANS) & exec('zz_stans_chk','phr_zz_tab',1)


\zz_stans_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_STANS.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_stans_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_STANS.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_STANS,_a);
~~


\zz_stans_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_STANS.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_STANS*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_STANS,_a);
~~


\zz_stans_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_STANS.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::  OLD: \zz_stans_ad/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('dok_dela','phr_tab',_a)
|| return()
?};
ZZ_STANS.cntx_psh();
ZZ_STANS.index('ZZ_STANS');
ZZ_STANS.prefix(bfld('STO'));
_numer:=0;
_loop:=ZZ_STANS.first();
{!
|? _loop
|! _numer+=1;
   {? ZZ_STANS.P<>_numer
   || ZZ_STANS.P:=_numer;
      ZZ_STANS.put()
   ?};
   _loop:=ZZ_STANS.next()
!};
ZZ_STANS.cntx_pop();
~~


\zz_stans_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KO [12.30]
:: OPIS: Wywoływana z wyzwalaczy przed dołącz i popraw, przed przeprowadzeniem testów poprawności rekordu.
::  OLD: \zz_stans_bw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZZ_STANS.DRUK<>'N' & ZZ_STANS.DRUK<>'T'
|| ZZ_STANS.DRUK:='T'
?};
{? ZZ_STANS.W<>'N' & ZZ_STANS.W<>'T'
|| ZZ_STANS.W:='T'
?}


\zz_stans_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: KO [12.30]
:: OPIS: Sprawdza wypelnienie wymaganych pol. Wykorzystywana w wyzwalaczach przed dolacz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_stans_nn/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_STANS*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_STANS,
   $("_a.table(_b,"+$_mode+",,'ZZ_STAN','DRUK','W')")
)


\zz_temp_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_TEMP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZZ_TEMP) & exec('zz_temp_chk','phr_zz_tab',0)


\zz_temp_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_TEMP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_TEMP*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_TEMP) & exec('zz_temp_chk','phr_zz_tab',1)


\zz_temp_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_TEMP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_temp_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_TEMP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_TEMP,_a);
~~


\zz_temp_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_TEMP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_TEMP*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_TEMP,_a);
~~


\zz_temp_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_TEMP.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_temp_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \init_table/zz_setup.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_TEMP*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_TEMP,
   $("_a.table(_b,"+$_mode+")")
)


\zz_tmpt_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_TMPT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('dok_addb','phr_tab',ZZ_TMPT) & exec('zz_tmpt_chk','phr_zz_tab',0)


\zz_tmpt_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_TMPT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_TMPT*'PUTB|'
|| return(1)
?};
exec('dok_putb','phr_tab',ZZ_TMPT) & exec('zz_tmpt_chk','phr_zz_tab',1)


\zz_tmpt_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_TMPT.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZZ_TEMP,'NAZWA',ZZ_TMPT.ref())


\zz_tmpt_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_TMPT.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_TMPT,_a);
~~


\zz_tmpt_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_TMPT.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_TMPT*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_TMPT,_a);
~~


\zz_tmpt_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_TMPT.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_tmpt_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \init_table/zz_setup.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_TMPT*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_TMPT,
   $("_a.table(_b,"+$_mode+",,'SYMBOL','NAZWA')")
)


\zz_typ_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_TYP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_typ_modb','phr_zz_tab');

exec('dok_addb','phr_tab',ZZ_TYP) & exec('zz_typ_chk','phr_zz_tab',0)


\zz_typ_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_TYP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_TYP*'PUTB|'
|| return(1)
?};
exec('zz_typ_modb','phr_zz_tab');

exec('dok_putb','phr_tab',ZZ_TYP) & exec('zz_typ_chk','phr_zz_tab',1)


\zz_typ_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_TYP.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('del_ndx','#table',ZO_OSTYP,'OSOBA',ZZ_TYP.ref()) &
exec('del_ndx','#table',ZZ_OSTYP,'OSOBA',ZZ_TYP.ref()) &
exec('del_tmp','#table',ZZ_KRYT,'ZZ_TYP',ZZ_TYP.ref()) &
exec('del_tmp','#table',ZZ_PROFT,'ZZ_TYP',ZZ_TYP.ref())


\zz_typ_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_TYP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_adda','phr_tab',ZZ_TYP,_a);
~~


\zz_typ_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_TYP.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_TYP*'PUTA|'
|| return()
?};
exec('dok_puta','phr_tab',ZZ_TYP,_a);
~~


\zz_typ_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_TYP.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('dok_dela','phr_tab',_a);
~~


\zz_typ_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Wywolywana z wyzwalaczy przed dolacz i popraw, przed przeprowadzeniem testow poprawnosci rekordu.
::  OLD: \zz_typ_bw/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? ZZ_TYP.WAGA<=0
|| ZZ_TYP.WAGA:=1
?}


\zz_typ_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypelnienie wymaganych pol. Wykorzystywana w wyzwalaczach przed dolacz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \zz_typ_nn/zz_table.fml
::  OLD: \zz_typ_ck/zz_table.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_TYP*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_TYP,
   $("_a.table(_b,"+$_mode+",,'TYP','KOD','NAZWA','SYSTEM','WAGA')"),
   "_a.in_set(_b,'TYP',,'O','R','A','P')",
   "_a.in_set(_b,'SYSTEM',,'T','N')"
)


\zz_wikon_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz przed" tabeli ZZ_WIKON.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('zz_wikon_chk','phr_zz_tab',0)


\zz_wikon_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw przed" tabeli ZZ_WIKON.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_WIKON*'PUTB|'
|| return(1)
?};
exec('zz_wikon_chk','phr_zz_tab',1)


\zz_wikon_delb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń przed" tabeli ZZ_WIKON.
::   WE:
::   WY: zgodna ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
1


\zz_wikon_adda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "dołącz po" tabeli ZZ_WIKON.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_wikon_puta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "popraw po" tabeli ZZ_WIKON.
::   WE: zgodne ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_WIKON*'PUTA|'
|| return()
?};
~~


\zz_wikon_dela
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.14]
:: OPIS: Formuła wyzwalacza "usuń po" tabeli ZZ_WIKON.
::   WE: zgodna ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
~~


\zz_wikon_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [2011]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::  OLD: \init_table/zz_setup.fml
::----------------------------------------------------------------------------------------------------------------------
{? TRIG_OFF.ZZ_WIKON*'CHK|'
|| return(1)
?};
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(ZZ_WIKON,
   $("_a.table(_b,"+$_mode+")")
)

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:37 b624ccb7f51e3bf09143ecaa1746fc191c2abdfb4e8d1b55b8e020201ff2216f355f7a7a43203bcb6ef9bd3d2531ec953c581a129e343ad31a72c819beefb29d78f3b87a1e0dec9c075ed367f90aae9d6be76cb2e02c6abe8e829059f4f4a118551a56a8106c3f36606e81b79ebf1de30779eac3cbeb01c64b97dd551ef9d5f3
