:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: portal_wnioski.fml
:: Utworzony: 28.05.2020
:: Autor: TMR
::======================================================================================================================
:: Zawartość: Plik zawiera formuły wykorzystywane do obsługi wniosków na portalu.
::======================================================================================================================


\rq_bt_create
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Tworzy obiekt nazwany do obsługi typów bazowych wniosków
::   WE: _a [NUMBER] - tryb develop?
::   WY: Obiekt
:: ~OST: INEXPORT
::----------------------------------------------------------------------------------------------------------------------
_develop:={? var_pres('_a')=type_of(0) || _a || 0 ?};

::UWAGA: _fld, i _mth to formulki pomocnicze, zeby wygodniej tworzyc tablice i komentowac poszczegolne jej elementy
_fld:="31+form(_a)";
_mth:="31+form(_a)";
::tworze tablice nazwana do przechowywania zmiennych
_bt:=obj_new(
                _fld('file'     ,'Plik z listą typów bazowych')
               ,_fld('TAB'      ,'Tabela przechowująca definicję typów bazowych')
               ,_fld('develop'  ,'Tryb develop')

::             metody PRYWATNE / TECHNICZNE
               ,_mth('init'     ,'Inicjuje obiekt')
               ,_mth('initTab'  ,'Zasila tabelę typów bazowych')

::             metody PUBLICZNE
               ,_mth('select'   ,'Wyświetla okno z typami bazowymi')
               ,_mth('f3'       ,'Do zastosowania w formule "F3"')
               ,_mth('exists'   ,'Sprawdza czy istnieje taki typ bazowy')
               ,_mth('isEmpty'  ,'Sprawdza czy tabela typów bazowych jest pusta')
               ,_mth('export'   ,'Eksportuje typy bazowe do pliku')
             );
::usuwamy zbedne zmienne
&_mth; &_fld;

:: inicjowanie pól i metod
_bt.init:="
   .develop:=_a;
   .file:='person_request_base_type.dfg';
   .initTab()

";

:: inicjowanie tabeli tymczasowej
_bt.initTab:=$("
   {? var_pres('TAB',.)>100 || obj_del(.TAB) ?};
   .TAB:=tab_tmp(1,'ID_WP','STRING[50]','"+'Identyfikator typu'@+"','NAZWA','STRING[50]','"+'Nazwa typu'@+"');
   {? fexists(.file,1)=1
   || .TAB.import(.file,0,0,,'UTF-8,header',,'ID_WP',,1,,'NAZWA',,2,)
   ?};
   _ws:=.TAB.mk_sel('"+'Typy bazowe'@+"',,,,,,,,'U');
   .TAB.win_fld(_ws,,'ID_WP',,,,,,'"+'Identyfikator'@+"',,'"+'Identyfikator typu bazowego'@+"');
   .TAB.win_fld(_ws,,'NAZWA',,,,,,'"+'Nazwa'@+"',,'"+'Nazwa typu bazowego'@+"');
   {? .develop
   || {! _ind:=0 .. 1
      |! .TAB.win_act(_ws,_ind,'Dołącz')
      !};
      .TAB.win_act(_ws,,'Popraw');
      .TAB.win_act(_ws,,'Usuń');
      _fml:=\"_this:=params_get().this; _this.export()\";
      .TAB.win_act(_ws,,'Formuła','Eksportuj',,,_fml)
   ?};
   .TAB.win_act(_ws,,'Formuła','"+'Wybierz'@@+"',,,\"sel_exit()\",,1,,,,'W');
   .TAB.win_sel(_ws)
");

:: metoda do wyświetlenia tabeli z typami bazowymi
_bt.select:="
   params_set('this',(.));
   .TAB.select()
";

:: metoda do obsługi F3
_bt.f3:="
   params_set('this',(.));
   .TAB.prefix();
   {? fld()=''
   || .TAB.first()
   || .TAB.find_key(fld())
   ?};
   {? .TAB.select(,1,5)
   || .TAB.ID_WP
   ?}
";

:: metoda zwraca informację, czy istnieje wskazany typ bazowy
_bt.exists:="
   _id_wp:={? var_pres('_a')=type_of('') & +_a || _a || return(0) ?};
   .TAB.prefix(_id_wp,);
   .TAB.first()
";

:: metoda zwraca informację, czy tabela typów bazowych jest pusta
_bt.isEmpty:="
   .TAB.size()=0
";

_bt.export:="
   _filtr:='Pliki'@+' (*.dfg)|*.dfg';
   _sep:=exec('sep','#file',2);
   _file:='person_request_base_type.dfg';
   _path:=pth_dir(_file)+_sep+_file;
   _path:=dlg_save(_path,0,'person_request_base_type.dfg');
   _a:='UTF-8,header,nopth';
   {? +_path
   || .TAB.cntx_psh();
      .TAB.export('@%1'[_path],1,,_a,,'ID_WP',,1,,'NAZWA',,2,);
      .TAB.cntx_pop()
   ?}
";

_bt.init(_develop);
_bt


\rq_gr_create
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Tworzy obiekt nazwany do obsługi grup wniosków
::   WE: _a [NUMBER] - tryb develop?
::   WY: Obiekt
::----------------------------------------------------------------------------------------------------------------------
_develop:={? var_pres('_a')=type_of(0) || _a || 0 ?};

::UWAGA: _fld, i _mth to formulki pomocnicze, zeby wygodniej tworzyc tablice i komentowac poszczegolne jej elementy
_fld:="31+form(_a)";
_mth:="31+form(_a)";
::tworze tablice nazwana do przechowywania zmiennych
_gr:=obj_new(
                _fld('file'     ,'Plik z listą grup wniosków')
               ,_fld('TAB'      ,'Tabela przechowująca definicję grup wniosków')
               ,_fld('develop'  ,'Tryb develop')
               ,_fld('Icon'     ,'Obiekt Icon z #icon')

::             metody PRYWATNE / TECHNICZNE
               ,_mth('init'     ,'Inicjuje obiekt')
               ,_mth('initTab'  ,'Zasila tabelę grup wniosków')
               ,_mth('aktEtyp'  ,'Aktualizuje rekordy tabeli ETYP')

::             metody PUBLICZNE
               ,_mth('select'   ,'Wyświetla okno z grupami wniosków')
               ,_mth('exists'   ,'Sprawdza czy istnieje grupa wniosków')
               ,_mth('f3'       ,'Do zastosowania w formule "F3"')
               ,_mth('isEmpty'  ,'Sprawdza czy tabela grup wniosków jest pusta')
               ,_mth('export'   ,'Eksportuje grupy wniosków do pliku')
               ,_mth('getIcon'  ,'Pobiera ikonę dla grupy wniosku')
             );
::usuwamy zbedne zmienne
&_mth; &_fld;

:: inicjowanie pól i metod
_gr.init:="
   .develop:=_a;
   .file:='person_request_group.dfg';
   .Icon:=exec('Icon','#object');
   .initTab()
";

:: inicjowanie tabeli tymczasowej
_gr.initTab:=$("
:: lock potrzebny aby skolejkować zakładanie tabeli na serwerze
   {? ETYPY.lock(1,,1)
   || _ident:='portal_rq_gr';
      _STLIST:=st_list(_ident,0);
      .TAB:={? _STLIST.first() || st_open(_STLIST.IDENT) || ~~ ?};
      {? type_of(.TAB)=type_of(~~)
      || .TAB:=st_create(1,'NAZWA','STRING[50]','"+'Nazwa'@+"','ICON','STRING[64]','"+'Nazwa ikony'@+"');
         .TAB.st_id_make(ETYPY.name(0),_ident,3600);
         {? fexists(.file,1)=1
         || .TAB.import(.file,0,0,,'UTF-8,header',,'NAZWA',,1,,'ICON',,2,)
         ?}
      ?};

::  okno wertowania
      _ws:=.TAB.mk_sel('"+'Grupy wniosków'@+"',,0,'#etypy_grupa_wp',,,6,,'U');
      .TAB.win_fld(_ws,,'NAZWA',,,30,,,'"+'Nazwa'@+"',,'"+'Nazwa grupy wniosków'@+"');
      .TAB.win_fld(_ws,,'ICON',,,30,,,'"+'Ikona'@+"',,'"+'Ikona dla grupy wniosków'@+"',,,,,,);
      _fml_ic_f3:=\"_this:=params_get().this; _this.Icon.f3()\";
      .TAB.fld_fml('ICON','F3',_fml_ic_f3);
      _fml_ic_be:=\"_this:=params_get().this; _this.Icon.before_edit()\";
      .TAB.fld_fml('ICON','BEFORE_EDIT',_fml_ic_be);
      _fml_ic_before:=\"_this:=params_get().this; _this.Icon.icon_before(cur_tab(1,1).ICON)\";
      .TAB.win_fml(_ws,,'ICON',,'ICON_BEFORE',_fml_ic_before);
      {? .develop
      || {! _ind:=0 .. 1
         |! .TAB.win_act(_ws,_ind,'Dołącz')
         !};
         .TAB.win_act(_ws,,'Popraw');
         .TAB.win_act(_ws,,'Usuń');
         _export:=_fml:=\"_this:=params_get().this; _this.export()\";
         .TAB.win_act(_ws,,'Formuła','Eksportuj',,,_export)
      || _popraw:=\"_this:=params_get().this; _this.aktEtyp(cur_tab(1,1).NAZWA); _this.export()\";
         .TAB.win_act(_ws,,'Popraw',,,,,_popraw)
      ?};
      .TAB.win_act(_ws,,'Formuła','"+'Wybierz'@@+"',,,\"sel_exit()\",,1,,,,'W');
      .TAB.win_sel(_ws);

::  okno redagowania
      _we:=.TAB.mk_edit('"+'Grupa wniosków'@+"',0,'#etypy_grupa_ed',,,'normal');
      .TAB.win_efld(_we,,'NAZWA',,,50,,~.develop);
      .TAB.efld_opt(_we,'mark=1');
      .TAB.win_efld(_we,,'ICON',,,47,,,,,,,'F3_button=1');
      exec('ok_esc','#window',.TAB,_we);
      .TAB.win_edit(_we)
   ?};
   ETYPY.unlock()
");

:: metoda do wyświetlenia tabeli z grupami wniosków
_gr.select:="
   params_set('this',(.));
   .TAB.prefix();
   .TAB.select()
";

:: metoda do obsługi F3
_gr.f3:="
   params_set('this',(.));
   .TAB.prefix();
   {? fld()=''
   || .TAB.first()
   || .TAB.find_key(fld())
   ?};
   {? .TAB.select(,1,6) || .TAB.NAZWA || '' ?}
";

:: metoda zwraca informację, czy istnieje wskazany typ bazowy
_gr.getIcon:="
   _icon:='';
   _nazwa:={? var_pres('_a')=type_of('') & +_a || _a || return(_icon) ?};
   .TAB.cntx_psh();
   .TAB.prefix(_nazwa,);
   {? .TAB.first()
   || _icon:=.TAB.ICON
   ?};
   .TAB.cntx_pop();
   _icon
";

:: metoda wymusza put-a dla rekordów tabeli ETYPY, które są zgodne z nazwą grupy wniosków
:: (potrzebne do synchronizacji z portalem)
_gr.aktEtyp:="
   _nazwa:={? var_pres('_a')=type_of('') & +_a || _a || return(0) ?};
   ETYPY.cntx_psh();
   ETYPY.index('GRUPA_WP');
   ETYPY.prefix('T',_nazwa,);
   {? ETYPY.first()
   || {!
      |? ETYPY.put(,1);
         ETYPY.next()
      !}
   ?};
   ETYPY.cntx_pop()
";

:: metoda zwraca informację, czy istnieje wskazana grupa wniosków
_gr.exists:="
   _nazwa:={? var_pres('_a')=type_of('') & +_a || _a || return(0) ?};
   .TAB.prefix(_nazwa,);
   .TAB.first()
";

:: metoda zwraca informację, czy tabela typów bazowych jest pusta
_gr.isEmpty:="
   .TAB.size()=0
";

_gr.export:="
   _sep:=exec('sep','#file',2);
   _path:=pth_dir(.file)+_sep+.file;
   {? .develop
   || _path:=dlg_save(_path,0,.file)
   ?};
   _at:={? .develop || '@' || '' ?};
   _std:='UTF-8,header,nopth';
   {? +_path
   || .TAB.cntx_psh();
      .TAB.prefix();
      .TAB.export('%1%2'[_at,_path],.develop,,_std,,'NAZWA',,1,,'ICON',,2,);
      .TAB.cntx_pop()
   ?}
";

_gr.init(_develop);
_gr

::======================================================================================================================
:: Formuły pomocnicze do realizacji obiegu wniosków na HR Portal
::======================================================================================================================


\EDOKOS_status
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Zwraca status
::   WE: _a - status
::----------------------------------------------------------------------------------------------------------------------
{? +_a=1
|| {? _a='R' || 'WPROWADZONY'
   |? -_a='s' | _a='V' || 'WYSŁANY'
   |? _a='P' || 'DO POPRAWY'
   |? _a='Y' || 'ZAAKCEPTOWANY'
   |? _a='D' || 'ODRZUCONY'
   |? _a='C' || 'OCZEKUJE'
   |? _a='E' || 'ZAMKNIETY'
   || '?'
   ?}
|| {? _a='WPROWADZONY' || 'R'
   |? _a='WYSŁANY' || 'S'
   |? _a='DO POPRAWY' || 'P'
   |? _a='ZAAKCEPTOWANY' || 'Y'
   |? _a='ODRZUCONY' || 'D'
   |? _a='OCZEKUJE' || 'C'
   |? _a='ZAMKNIETY' || 'E'
   || '?'
   ?}
?}


\EDOKOS_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Dodanie informacji o obiegu wniosku
::   WE:  _a  - wniosek - EDOKUM.ref()
::        _b  - użytkownik -  USERS.ref()
::        _c  - operacja: Y-akceptacj D-odrzucenie P-do poprawy/wycofanie
::       [_d] - powód odrzucenia
::       [_e] - typ: [P]-statusy, S-scieżka akceptacji
::       [_f] - nazwa akcji
::       [_g] - status akceptacji
::       [_h] - identyfikator (B_PREL)
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_edokum:={? type_of(_a)=type_of('') || exec('FindAndGet','#table',EDOKUM,_a,,,null) || _a ?};
_users:=_b;
_operacja:=_c;
_powod:={? var_pres('_d')>0 || _d || '' ?};
_typ:={? var_pres('_e')>0 || _e || 'P' ?};
_akcja:={? var_pres('_f')>0 || _f || '' ?};
_status:={? var_pres('_g')>0 || _g || '' ?};
_b_prel:={? var_pres('_h')>0 || _h || '' ?};
EDOKOS.cntx_psh();
{? EDOKOS.name()+2<>ref_name(_edokum)+2
|| EDOKOS.use('skid_y'+(ref_name(_edokum)+2))
?};
EDOKOS.prefix();
EDOKOS.blank(1);
EDOKOS.EDOKUM:=_edokum;
EDOKOS.USERS:=_users;
EDOKOS.OPERACJA:=_operacja;
EDOKOS.DATA:=date();
EDOKOS.TIME:=time();
EDOKOS.WID:=_typ;
{? _typ='S'
|| EDOKOS.cntx_psh();
   EDOKOS.index('DISP'); EDOKOS.prefix('S',_edokum,);
   _numer:={? EDOKOS.last() || EDOKOS.OPER_NUM+1 || 1 ?};
   EDOKOS.cntx_pop();
   EDOKOS.OPER_NUM:=_numer;
   EDOKOS.B_PREL:={? _b_prel='' || 'R'+$_numer || _b_prel ?};
   EDOKOS.B_PRELS:=_akcja;
   EDOKOS.STATUS:=_status
?};
{? EDOKOS.add() & (_operacja='D' | _typ='S') & _powod<>''
|| EDOKOS.memo_set(_powod,'UW_DL');
   EDOKOS.memo_put(,'UW_DL');
   EDOKOS.put()
?};
EDOKOS.cntx_pop();
~~


\EDOKOS_time_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [21.14]
:: OPIS: Czy nie ma nowszych danych w ERP na temat operacji wykonywanych przez użytkowników
::   WE: _a - data
::       _b - czas
::       _c - id czynności (B_PREL)
::----------------------------------------------------------------------------------------------------------------------
_date:=_a;
_time:=_b;
_b_prel:=_c;
_ok:=1;
EDOKOS.cntx_psh();
EDOKOS.use('skid_y'+(EDOKUM.name()+2));
EDOKOS.index('SZUK2');
EDOKOS.prefix(EDOKUM.ref(),'Y');
{? EDOKOS.last()
|| _date_add_str:=10+EDOKOS.IDADD;
   _time_add_str:=8+(11-EDOKOS.IDADD);
   _date_add:=date(#(4+_date_add_str),#(2+(5-_date_add_str)),#(_date_add_str+2));
   _time_add:=time(#(2+_time_add_str),#(2+(3-_time_add_str)),#(_time_add_str+2));
   _ok:=EDOKOS.B_PREL=_b_prel & EDOKOS.DATA=_date_add & EDOKOS.TIME=_time_add |
        EDOKOS.DATA<_date | EDOKOS.TIME<=_time;
   {? ~_ok
   || KOMM.add(
         'Zmiany w ERP (%1) późniejsze niż na portalu (%2). '
         'Operacja z portalu została pominięta.'@[$EDOKOS.DATA+' '+EDOKOS.TIME$3,$_date+' '+_time$3]
      )
   ?}
?};
EDOKOS.cntx_pop();
_ok


\EDOKUM_parse
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Ustawienie atrybutów i statusów wniosku na podstawie danych z portalu
::   WE: _a - tablica JSON
::----------------------------------------------------------------------------------------------------------------------
_json:=_a;
_wp:=EDOKUM.TYP().W_PORTAL;
_in_por:=ETYPY.IN_POR;

:: Atrybuty (pola wniosku)
{? var_pres('Parameters',_json)>0 & _wp<>'N'
|| _user:=OPERATOR.USER;
   EDOK_ATR.cntx_psh();
   EDOK_ATR.use('edokat'+(EDOKUM.name()+2));
   EDOK_ATR.index('REKTAT'); EDOK_ATR.prefix(EDOKUM.ref(),null,'',);
   {? EDOK_ATR.first() || {! |? EDOK_ATR.del !} ?};
   ETYP_ATR.cntx_psh();
   ETYP_ATR.index('ID_WP');
   ETYP_ATR.prefix(EDOKUM.TYP);
   {! _ii:=1..obj_len(_json.Parameters)
   |! _name:=_json.Parameters[_ii].Name;
      {? 22+_name='SLO\\chr_PersonRequest\\'
      || _tab:=spli_str(_name,'\\');
         {? obj_len(_tab)=4
         || _name:=_tab[4]
         || _name:=22-_name
         ?};
         &_tab
      ?};
      {? ETYP_ATR.find_key(_name,)
      || _value:=_json.Parameters[_ii].Value;
         _typ:=ETYP_ATR.TAT().TYP;
         {? _typ='B'
         || _value:={? _value='1' || 'Tak' || 'Nie' ?}
         |? _typ='D'
         || _value:=(4+_value)+'-'+(2+(5-_value))+'-'+(2+(8-_value))
         |? _typ='C'
         || _value:=_value+8
         |? _typ='I'
         || _value:=(4+_value)+'-'+(2+(5-_value))+'-'+(2+(8-_value))+' '+(_value+8)
         ?};
         {? EDOK_ATR.find_key(ETYP_ATR.TAT,1)
         || {? _typ='W'
            || EDOK_ATR.memo_set(_value,'WAR_W');
               EDOK_ATR.memo_put(,'WAR_W')
            || EDOK_ATR.WAR:=_value
            ?};
            EDOK_ATR.put()
         || EDOK_ATR.blank(1);
            EDOK_ATR.EDOKUM:=EDOKUM.ref();
            EDOK_ATR.TAT:=ETYP_ATR.TAT;
            EDOK_ATR.KOL:=ETYP_ATR.KOL;
            EDOK_ATR.REKORD:=1;
            EDOK_ATR.USERS:=EDOKUM.USERS;
            {? _typ<>'W'
            || EDOK_ATR.WAR:=_value
            ?};
            {? EDOK_ATR.add() & _typ='W'
            || EDOK_ATR.memo_set(_value,'WAR_W');
               EDOK_ATR.memo_put(,'WAR_W');
               EDOK_ATR.put()
            ?}
         ?}
      || KOMM.add('Nie znaleziono atrybutu: %1 dla typu wniosku o id: %2'@[_name,EDOKUM.TYP().ID_WP])
      ?};
      1
   !};
   ETYP_ATR.cntx_pop();
   EDOK_ATR.cntx_pop();
   OPERATOR.USER:=_user
?};
:: Statusy wniosku
{? var_pres('Statuses',_json)>0
|| EDOKOS.cntx_psh();
   EDOKOS.use('skid_y'+(EDOKUM.name()+2));
   EDOKOS.index('DATA'); EDOKOS.prefix(EDOKUM.ref());
   {? EDOKOS.first() || {! |? {? EDOKOS.WID='P' || EDOKOS.del() || EDOKOS.next() ?} !} ?};
   {! _ii:=1..obj_len(_json.Statuses)
   |! _status:=_json.Statuses[_ii];
      {? var_pres('_status')>0
      || EDOKOS.blank(1);
         EDOKOS.EDOKUM:=EDOKUM.ref();
         EDOKOS.USERS:=EDOKUM.USERS;
         EDOKOS.OPERACJA:=exec('EDOKOS_status','portal_wnioski',_status.RequestStatus);
         EDOKOS.DATA:=exec('str2date','#convert',10+_status.ModifyDate);
         EDOKOS.TIME:=exec('str2time','#convert',8+(11-_status.ModifyDate));
         EDOKOS.WID:='P';
         {? EDOKOS.add() & var_pres('Comment',_status)>0
         || EDOKOS.memo_set(_status.Comment,'UW_DL');
            EDOKOS.memo_put(,'UW_DL');
            EDOKOS.put()
         ?}
      ?};
      &_status
   !};
   EDOKOS.cntx_pop()
?};
:: Podziały dla controllingu
{? _wp='s' | _wp='N' & _in_por
|| exec('EPODZ_parse','portal_seod',_json)
?};
:: Akceptujący użytkownicy
exec('EDOKUSER_parse','portal_seod','OBE_FAW_DARP','OBE_FAW_DARP',_json)


\EDOKUM_atr_json
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Zwraca wartości pól wniosku oraz jego statusy w postaci JSON
::----------------------------------------------------------------------------------------------------------------------
_jman:=exec('json_man','__jsonm','{}');
_jman.setObject(_path:=_jman.addChildElement('','Parameters'),'[]');
{? EDOKUM.TYP().W_PORTAL='N'
|| _typ_id:=ETYPY.ID_WP;
   {! _ii:=1..3
   |! _jman.setObject(_path2:=_jman.addChildElement(_path,''),'{}');
      _name:='par'+$_ii;
      _jman.setValue(_jman.addChildElement(_path2,'Name'),'SLO\\chr_PersonRequest\\'+_typ_id+'\\'+_name);
      _value:='';
      {? _ii=1
      || _value:=EDOKUM.ID
      |? _ii=2
      || EDOKUM.memo_get(,'UW_OPDL');
         _value:=EDOKUM.memo_txt(,,'UW_OPDL')
      |? _ii=3
      || _value:=exec('EDOKUM_opis','portal_interm')
      ?};
      _jman.setValue(_jman.addChildElement(_path2,'Value'),_value)
   !};
   _jman.setObject(_path2:=_jman.addChildElement(_path,''),'{}');
   _jman.setValue(_jman.addChildElement(_path2,'Name'),'SLO\\chr_PersonRequest\\'+_typ_id+'\\__RemoteDashboardLink__');
   _jman.setValue(_jman.addChildElement(_path2,'Value'),exec('EDOKUM_link','portal_interm'))
|| EDOK_ATR.cntx_psh();
   EDOK_ATR.use('edokat'+(EDOKUM.name()+2));
   EDOK_ATR.index('REKTAT'); EDOK_ATR.prefix(EDOKUM.ref(),null,'',);
   ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ');
   ETYP_ATR.prefix(EDOKUM.TYP,null);
   {? EDOK_ATR.first()
   || _typ_id:=EDOKUM.TYP().ID_WP;
      {!
      |? _jman.setObject(_path2:=_jman.addChildElement(_path,''),'{}');
         _name:={? ETYP_ATR.find_key(EDOK_ATR.KOL) || ETYP_ATR.ID_WP || '' ?};
         _jman.setValue(_jman.addChildElement(_path2,'Name'),'SLO\\chr_PersonRequest\\'+_typ_id+'\\'+_name);
         _typ:=ETYP_ATR.TAT().TYP;
         _value:={? _typ='W'
                 || EDOK_ATR.memo_txt(,1,'WAR_W')
                 || EDOK_ATR.WAR
                 ?};
         {? _typ='B'
         || _value:={? 1+_value='T' || '1' || '0' ?}
         |? _typ='D'
         || _value:=_value+'T00:00:00'
         |? _typ='C'
         || _value:=gsub($date(),'/','-')+'T'+_value
         |? _typ='I'
         || _value:=(10+_value)+'T'+(_value+8)
         ?};
         _jman.setValue(_jman.addChildElement(_path2,'Value'),_value);
         EDOK_ATR.next()
      !}
   ?};
   ETYP_ATR.cntx_pop();
   EDOK_ATR.cntx_pop()
?};

EDOKOS.cntx_psh();
EDOKOS.use('skid_y'+(EDOKUM.name()+2));
EDOKOS.index('DATA'); EDOKOS.prefix(EDOKUM.ref());
{? EDOKOS.first()
|| _jman.setObject(_path:=_jman.addChildElement('','Statuses'),'[]');
   {!
   |? {? EDOKOS.WID='P'
      || _jman.setObject(_path2:=_jman.addChildElement(_path,''),'{}');
         _jman.setValue(_jman.addChildElement(_path2,'RequestStatus'), exec('EDOKOS_status','portal_wnioski',EDOKOS.OPERACJA) );
         _jman.setValue(_jman.addChildElement(_path2,'ModifyDate'),exec('date2iso8601','#convert',EDOKOS.DATA,EDOKOS.TIME));
         {? EDOKOS.UW_DL
         || _jman.setValue(_jman.addChildElement(_path2,'Comment'),EDOKOS.memo_txt(,1,'UW_DL'))
         ?}
      ?};
      EDOKOS.next()
   !}
?};
EDOKOS.cntx_pop();

{? EDOKUM.TYP().W_PORTAL='s'
|| _jman.setObject(_path:=_jman.addChildElement('','TenantUser'),'{}');
   _jman.setValue(_jman.addChildElement(_path,'LoginName'), EDOKUM.USERS().WEBLOGIN);
   _jman.setValue(_jman.addChildElement(_path,'LoginNameDesc'), EDOKUM.USERS().DANE);

   exec('EPODZ_json','portal_seod',_jman)
?};

_json:=_jman.getJSON();
::KH.memo_set(_json,'OPIS');
::KH.memo_view(,'OPIS');
_json


\EDOKUM_akc_json
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Zwraca wartości scieżki akceptacji procesu obiegu wniosków w postaci JSON
::----------------------------------------------------------------------------------------------------------------------
_jman:=exec('json_man','__jsonm','{}');

_maska:=EDOKUM.name();
EDOKOS.cntx_psh();
EDOKOS.use('skid_y'+(_maska+2));
EDOKOS.index('DISP'); EDOKOS.prefix('S',EDOKUM.ref());
_last:={? EDOKOS.last() || EDOKOS.OPER_NUM || 0 ?};
{? EDOKOS.first()
|| _nwu:=_maska=exec('nwu_edokum_mask','portal_method_chr');
   _lp:=100;
   _seod:=-EDOKUM.TYP().W_PORTAL='s';
   _par:={? _seod || 465 || 390 ?};
   _obj:=exec('obj_par','portal_wnioski',~-PAR_SKID.get(_par));
   _allowRevoke:=0;
   _wn_adm:=exec('FindAndGet','#table',EDOKUM,EDOKUM.ref(),,"TYP().RODZ_WP=3",0);
   _p_ret:=0;
   _p_rev:=0;
   _user:=exec('obj_akc_json_usr','portal_wnioski');
   _jman.setObject(_path:=_jman.addChildElement('','Acceptance'),'[]');
   {!
   |? EDOKOS.prefix('S',EDOKUM.ref(),EDOKOS.OPER_NUM,);
      {? EDOKOS.first()
      || _rej:=0;
         _stage:=EDOKOS.B_PRELS;
         {? 'AR'*(1+EDOKOS.B_PREL)=0
         || B_PREL.cntx_psh();
            B_PREL.prefix();
            B_PREL.blank(1);
            B_PREL.IDADD:=EDOKOS.B_PREL;
            {? B_PREL.find_rec()
            || _rej:=B_PREL.B_ELE().SYMBOL='OBE_FAW_DARP' | B_ELE.SYMBOL='OBG_FZO_DARK' |
                     B_ELE.SYMBOL='OBG_FZO_CPRZ' | B_ELE.SYMBOL='OBE_FDL_DBRP';
               B_ROLE.cntx_psh();
               B_ROLE.prefix();
               _roleName:=B_PREL.B_ROLE().NAME;
               B_ROLE.cntx_pop();
               _stage:='%1: %2'[_roleName,EDOKOS.B_PRELS]
            ?};
            B_PREL.cntx_pop()
         |? 1+EDOKOS.B_PREL='R'
         || _rej:=1
         ?};
         _jman.setObject(_path2:=_jman.addChildElement(_path,''),'{}');
         _jman.setValue(_jman.addChildElement(_path2,'AcceptOrder'), $_lp);
         _jman.setValue(_jman.addChildElement(_path2,'AcceptStage'), _stage);
         _jman.setValue(_jman.addChildElement(_path2,'AcceptDate'), exec('date2iso8601','#convert',EDOKOS.DATA,EDOKOS.TIME));
         _jman.setValue(_jman.addChildElement(_path2,'AcceptStatus'),
            {? EDOKOS.STATUS='T' | EDOKOS.STATUS='x' || 1
            |? EDOKOS.STATUS='O' || -1
            |? EDOKOS.STATUS='E' || -2
            |? EDOKOS.STATUS='W' || -3
            ?}
         );
         _jman.setValue(_jman.addChildElement(_path2,'AllowAccept'), {? _rej || 0 || _obj.PA ?});
         _jman.setValue(_jman.addChildElement(_path2,'AllowReject'), {? _rej | EDOKUM.PAPERLES || 0 || _obj.PO ?});
         _jman.setValue(_jman.addChildElement(_path2,'AllowClose'), {? _nwu | _rej || 0 || _obj.PZ ?});
         {? _allowRevoke=0 | 'EDY'*EDOKUM.STATUS | _wn_adm>0 | _p_ret | _p_rev | _nwu |
            EDOKOS.USERS=null & EDOKOS.B_PRELS=exec('proc_stop_bprels','portal_wnioski')
         || _jman.setValue(_jman.addChildElement(_path2,'AllowRevoke'), 0);
            _allowRevoke:=1
         ?};
         _jman.setObject(_path3:=_jman.addChildElement(_path2,'AcceptOperator'),'[]');
         _p_ret:=0;
         _p_rev:=0;
         {!
         |? _jman.setObject(_path4:=_jman.addChildElement(_path3,''),'{}');
            _jman.setValue(_jman.addChildElement(_path4,'AcceptGroup'), EDOKOS.B_PREL);
            _jman.setValue(_jman.addChildElement(_path4,'TenantUserId__id_erp'),
               {? EDOKOS.USERS=null || 'system' || EDOKOS.USERS().WEBLOGIN ?}
            );
            _jman.setValue(_jman.addChildElement(_path4,'AcceptRole'), _stage);
            _jman.setValue(_jman.addChildElement(_path4,'OrderedAction'),
               {? EDOKOS.STATUS='T' || 'ACCEPT'
               |? EDOKOS.STATUS='O' || 'REJECT'
               |? EDOKOS.STATUS='E' || 'CLOSE'
               |? EDOKOS.STATUS='W' || 'REVOKE'
               || ~~
               ?}
            );
            _jman.setValue(_jman.addChildElement(_path4,'canDoAccept'), {? _rej || 0 || 1 ?});
            {? EDOKOS.UW_DL
            || _jman.setObject(_path5:=_jman.addChildElement(_path4,'AcceptActnParam'),'{}');
               _jman.setValue(_jman.addChildElement(_path5,'ParamName'), 'comment');
               _jman.setValue(_jman.addChildElement(_path5,'ParamValue'),EDOKOS.memo_txt(,1,'UW_DL'))
            ?};
            {? EDOKOS.STATUS='O' || _p_ret:=1 ?};
            {? EDOKOS.STATUS='W' || _p_rev:=1 ?};
            {? EDOKOS.OPER_NUM=_last & EDOKOS.USERS || _user.exists(EDOKOS.USERS) ?};
            EDOKOS.next()
         !};
::       Super użytkownicy przeglądający dokumenty
         {? EDOKOS.OPER_NUM=_last
         || _typ:=EDOKUM.TYPOBIEG().NAZWA;
            _nr:={? _typ*'faktur' || 1 |? _typ*'wniosków' || 2 || 3 ?};
            PORTALSU.cntx_psh();
            PORTALSU.index('TYP');
            PORTALSU.prefix(EDOKUM.FIRMA,_nr);
            {? PORTALSU.first()
            || {!
               |? {? ~_user.exists(PORTALSU.USERS)
                  || _jman.setObject(_path4:=_jman.addChildElement(_path3,''),'{}');
                     _jman.setValue(_jman.addChildElement(_path4,'AcceptGroup'), EDOKOS.B_PREL);
                     _jman.setValue(_jman.addChildElement(_path4,'TenantUserId__id_erp'),PORTALSU.USERS().WEBLOGIN);
                     _jman.setValue(_jman.addChildElement(_path4,'AcceptRole'), _stage);
                     _jman.setValue(_jman.addChildElement(_path4,'OrderedAction'),~~);
                     _jman.setValue(_jman.addChildElement(_path4,'canDoAccept'), 0);
                     _jman.setValue(_jman.addChildElement(_path4,'canSendMail'), 0)
                  ?};
                  PORTALSU.next()
               !}
            ?};
            PORTALSU.cntx_pop()
         ?};
         _path2a:='';
         {? EDOKUM.PAPERLES
         || _zal:=exec('typy_zal_act','portal_paperless',EDOKOS.B_PREL);
            {? _zal.first()
            || _jman.setObject(_path2a:=_jman.addChildElement(_path2,'AcceptanceCondition'),'[]');
               _jman.setObject(_pathACE:=_jman.addChildElement(_path2a,''),'{}');
               exec('akc_json','portal_paperless',_jman,_zal,_pathACE)
            ?};
            &_zal
         ?};
         exec('akc_json','portal_seod',_jman,_path2,_path2a)
      ?};
      _lp+=1;
      EDOKOS.prefix('S',EDOKUM.ref());
      EDOKOS.next()
   !}
?};
EDOKOS.cntx_pop();
_json:=_jman.getJSON();
_json


\EDOKUM_att_json
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Zwraca załączniki wniosku w postaci json
::   WE: [_a] - pomijać jeśli zbędna wysyłka? [1]-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_skip:={? var_pres('_a')=type_of(1) || _a || 1 ?};
{? EDOKUM.PAPERLES | _skip=2
|| _id:=exec('get_id_cloud','portal_core','PORTAL_EDOKUM_ID',EDOKUM.uidref());
   {? _id=0
   || _skip:=0
   || EDOKUMZ.cntx_psh();
      EDOKUMZ.use('skid_n'+(ref_name(EDOKUM.ref())+2));
      EDOKUMZ.index('IDPUT');
      EDOKUMZ.prefix(EDOKUM.ref());
      {? EDOKUMZ.first()
      || _jest_hash:=var_pres('HASH',EDOKUMZ)>0;
         {!
         |? _hash:=exec('hash','#blob',EDOKUMZ.EDOKUM);
            _skip*={? _jest_hash || _hash=EDOKUMZ.HASH || 0 ?};
            _skip & EDOKUMZ.next()
         !}
      ?};
      EDOKUMZ.cntx_pop()
   ?}
?};
_jman:=exec('json_man','__jsonm','{}');
{? _skip
|| _jman.setObject(_path:=_jman.addChildElement('','Attachments'),'{}');
   _jman.setValue(_jman.addChildElement(_path,'SkipAttachment'), 1);
   _json:=_jman.getJSON()
|| _jman.setObject(_path:=_jman.addChildElement('','Attachments'),'[]');
   EDOKUMZ.cntx_psh();
   _mask:=ref_name(EDOKUM.ref())+2;
   EDOKUMZ.use('skid_n'+_mask);
   EDOKUMZ.index('DISP');
   EDOKUMZ.prefix(EDOKUM.ref());
   {? EDOKUMZ.first()
   || EDOKUMZS.cntx_psh();
      EDOKUMZS.use('skids_'+_mask);
      EDOKUMZS.index('EDOKUMZ');
      {!
      |? _jman.setObject(_pathA:=_jman.addChildElement(_path,''),'{}');
         _jman.setValue(_jman.addChildElement(_pathA,'FileName'), EDOKUMZ.bl_info('EDOKUM','NAME'));
         _jman.setValue(_jman.addChildElement(_pathA,'Body'),fopen(EDOKUMZ.EDOKUM,'br',,,1),'gzip+encode');
         _jman.setValue(_jman.addChildElement(_pathA,'__id_erp'), EDOKUMZ.uidref());
         _jman.setValue(_jman.addChildElement(_pathA,'AttachmentKind'), EDOKUMZ.TYP_ZAL().NAZWA);
         EDOKUMZS.prefix(EDOKUMZ.ref());
         {? EDOKUMZS.first()
         || _jman.setObject(_pathAS0:=_jman.addChildElement(_pathA,'__JSON'),'{}');
            _jman.setObject(_pathAS1:=_jman.addChildElement(_pathAS0,'signatures'),'[]');
            {!
            |? _jman.setObject(_pathAS:=_jman.addChildElement(_pathAS1,''),'{}');
               _jman.setValue(_jman.addChildElement(_pathAS,'SignDate'),
                  exec('date2iso8601','#convert',EDOKUMZS.SIGNDATE,EDOKUMZS.SIGNTIME)
               );
               {? 'KN'*EDOKUMZS.TYPE
               || _jman.setValue(_jman.addChildElement(_pathAS,'FingerPrint'),EDOKUMZS.FINGER);
                  _jman.setValue(_jman.addChildElement(_pathAS,'Issuer'),EDOKUMZS.memo_txt(,1,'ISSUER'));
                  _jman.setValue(_jman.addChildElement(_pathAS,'CertValidFrom'),
                     exec('date2iso8601','#convert',EDOKUMZS.FROM_VD,EDOKUMZS.FROM_VT)
                  );
                  _jman.setValue(_jman.addChildElement(_pathAS,'CertValidTo'),
                     exec('date2iso8601','#convert',EDOKUMZS.TO_VD,EDOKUMZS.TO_VT)
                  )
               ?};
               _jman.setValue(_jman.addChildElement(_pathAS,'SignatureName'),EDOKUMZS.NAME);
               _jman.setValue(_jman.addChildElement(_pathAS,'IsValid'),1);
               _jman.setValue(_jman.addChildElement(_pathAS,'IsQualified'),EDOKUMZS.TYPE='K');
               _jman.setValue(_jman.addChildElement(_pathAS,'IsNotQualified'),EDOKUMZS.TYPE='N');
               _jman.setValue(_jman.addChildElement(_pathAS,'IsSimply'),EDOKUMZS.TYPE='Z');
               _jman.setValue(_jman.addChildElement(_pathAS,'IsHandWritten'),EDOKUMZS.TYPE='R');
               _jman.setValue(_jman.addChildElement(_pathAS,'Signer'),EDOKUMZS.SIGNER);
               _jman.setValue(_jman.addChildElement(_pathAS,'BelongsToOperator'),-EDOKUMZS.USER().WEBLOGIN);
               {? 'RZ'*EDOKUMZS.TYPE
               || _jman.setValue(_jman.addChildElement(_pathAS,'Declaration'),EDOKUMZS.memo_txt(,1,'DECLAR'));
                  _jman.setValue(_jman.addChildElement(_pathAS,'DeclarationAccept'),EDOKUMZS.AKC)
               ?};
               EDOKUMZS.next()
            !}
         ?};
         EDOKUMZ.next()
      !};
      EDOKUMZS.cntx_pop()
   ?};
   EDOKUMZ.cntx_pop();
   _file:=fopen(null(),'Uw',,1,1);
   _json:={? _jman.getJSON(_file) || _file || ~~ ?}
?};
::KH.memo_set(_json,'OPIS');
::KH.memo_view(,'OPIS');
_json


\EDOKUM_start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Uruchamia proces związany z wniosekim
::----------------------------------------------------------------------------------------------------------------------
EDOKUM.cntx_psh();
_ref:=EDOKUM.ref();
_ref_uid:=EDOKUM.uidref();
_copy:=EDOKUM.name()+2='_1';
_nref:={? _copy || exec('EDOKUM_copy','portal_wnioski') || _ref ?};
VAR_DEL.delete('no_us');
_usr:=OPERATOR.USER;
no_us:=OPERATOR.USER:=EDOKUM.USERS;
_sym:=''; _ver:='';
EDOKUM.cntx_psh(); ETYPY.cntx_psh(); ETYPPROC.cntx_psh();
{? EDOKUM.seek(_ref)
|| {? ETYPY.seek(EDOKUM.TYP)
   || ETYPPROC.index('DISP');
      ETYPPROC.prefix(ETYPY.ref());
      {? ETYPPROC.first()
      || _sym:=ETYPPROC.PROC_SYM;
         _ver:=ETYPPROC.PROC_VER
      ?}
   ?}
?};
EDOKUM.cntx_pop(); ETYPY.cntx_pop(); ETYPPROC.cntx_pop();
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:={? exec('EDOKUM_typ','portal_seod','W') || 'OBE_FAW_DARP' || 'OBE_FDL_DBRP' ?};
_params.AKCJA:='Portal';
::_params.UIDREF:=DOK.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'EDOKUM',_nref);
_typ:=EDOKUM.TYP().NAZWA;
{? _typ<>''
|| {? ETYPY.W_PORTAL<>'' & ETYPY.W_PORTAL<>'N'
   || _typ+=';'+ETYPY.W_PORTAL
   ?}
?};
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'TYP_DOK',_typ);
_params.PROC_START:='T';
_params.CONTEXT:=obj_new('STATUS','START','B_PREL');
_params.CONTEXT.STATUS:=0;
_params.CONTEXT.START:=1;
_params.CONTEXT.B_PREL:='';
{? _sym<>'' & _ver<>''
|| _params.PROC_SYM:=_sym;
   _params.PROC_VER:=_ver
?};
VAR_DEL.delete('StartProc');
StartProc:=1;
exec('mp_run','#b__box',_params);
_akc:=StartProc=2;
VAR_DEL.delete('StartProc');
OPERATOR.USER:=_usr;
VAR_DEL.delete('no_us');
_ret:=~~;
{? _params.CONTEXT.STATUS
|| EDOKUM.cntx_psh();
   EDOKUM.use(ref_name(_nref));
   EDOKUM.prefix();
   {? EDOKUM.seek(_nref)
   || _nref_uid:=EDOKUM.uidref();
      EDOKOS.cntx_psh();
      EDOKOS.use('skid_y'+(EDOKUM.name()+2));
      EDOKOS.index('PORTAL'); EDOKOS.prefix(EDOKUM.ref(),'S',_params.CONTEXT.B_PREL,EDOKUM.USERS,'N');
      {? EDOKOS.first()
      || EDOKOS.prefix();
         EDOKOS.B_PREL:='A'+$EDOKOS.OPER_NUM;
         EDOKOS.STATUS:='T';
         EDOKOS.put()
      ?};
      {? ~_akc || exec('EDOKOS_add','portal_wnioski',EDOKUM.ref(),EDOKUM.USERS,'Y') ?};
      EDOKOS.cntx_pop();
      {? EDOKUM.get()
      || {? _akc
         || EDOKUM.put(,1)
         || EDOKUM.STATUS:='Y';
            EDOKUM.put(1)
         ?}
      ?};
      {? _copy
      ||
         exec('change_rek','#sync_id','PORTAL_EDOKUM_ID',_ref_uid,_nref_uid);
         exec('change_rek','#sync_id','PORTAL_EDOKUM_PTH_ID',_ref_uid,_nref_uid);
         exec('change_rek','#sync_id','PORTAL_EDOKUM_AKC_ID',_ref_uid,_nref_uid);
         exec('EDOKUM_del','portal_wnioski',_ref,0)
      ?};
      _ret:=_nref_uid
   ?};
   EDOKUM.cntx_pop()
|? EDOKUM.get()
|| EDOKUM.B_PREL:=EDOKUM.B_PRELS:='';
   EDOKUM.put();
   {? _copy || exec('EDOKUM_del','portal_wnioski',_nref,0) ?}
?};
EDOKUM.cntx_pop();
_ret


\EDOKUM_wpr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Uruchamia czynność wprowadzenia wniosku
::   WE: _a - wskazanie na użytkownika
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of('')
|| USERS.cntx_psh();
   USERS.index('USR_KKOD'); USERS.prefix(_a,);
   _user:={? USERS.first() || USERS.ref() || null ?};
   USERS.cntx_pop()
|| _user:=_a
?};
EDOKUM.cntx_psh();
_usr:=OPERATOR.USER;
VAR_DEL.delete('no_us');
no_us:=OPERATOR.USER:=_user;
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:={? exec('EDOKUM_typ','portal_seod','W') || 'OBE_FAW_DARP' || 'OBE_FDL_DBRP' ?};
_params.AKCJA:='Portal';
_params.UIDREF:=EDOKUM.uidref();
_params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'EDOKUM',EDOKUM.ref());
_params.PROC_START:='N';
_params.CONTEXT:=obj_new('STATUS','START','B_PREL');
_params.CONTEXT.STATUS:=0;
_params.CONTEXT.START:=0;
_params.CONTEXT.B_PREL:='';
exec('mp_run','#b__box',_params);
OPERATOR.USER:=_usr;
{? _params.CONTEXT.STATUS
|| EDOKOS.cntx_psh();
   EDOKOS.use('skid_y'+(EDOKUM.name()+2));
   EDOKOS.index('PORTAL'); EDOKOS.prefix(EDOKUM.ref(),'S',_params.CONTEXT.B_PREL,EDOKUM.USERS,'N');
   {? EDOKOS.first()
   || EDOKOS.prefix();
      EDOKOS.B_PREL:='A'+$EDOKOS.OPER_NUM;
      EDOKOS.STATUS:='T';
      EDOKOS.put()
   ?};
   EDOKOS.cntx_pop();
   {? EDOKUM.get()
   || EDOKUM.put(,1)
   ?}
?};
EDOKUM.cntx_pop();
VAR_DEL.delete('no_us')


\EDOKUM_akc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Uruchamia czynność akceptacji wniosku
::   WE:  _a  - wskazanie na użytkownika
::        _b  - status
::       [_c] - B_PREL.IDADD
::----------------------------------------------------------------------------------------------------------------------
{? type_of(_a)=type_of('')
|| USERS.cntx_psh();
   USERS.index('USR_KKOD'); USERS.prefix(_a,);
   _user:={? USERS.first() || USERS.ref() || null ?};
   USERS.cntx_pop()
|| _user:=_a
?};
_status:={? var_pres('_b')=type_of('') || _b || '' ?};
_b_prel:={? var_pres('_c')=type_of('') || _c || '' ?};
_wp:=EDOKUM.TYP().W_PORTAL;
_valid:=1;

:: Walidacja przy akcjeptacji faktur SEOD
{? _wp='S' & _status='Y'
|| EDOKUM.cntx_psh();
   _usr:=OPERATOR.USER;
   OPERATOR.USER:=_user;
   _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:='OBG_FZO_EAKC';
   _params.AKCJA:='PortalWalidacja';
   _params.UIDREF:=EDOKUM.uidref();
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'EDOKUM',EDOKUM.ref());
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'USERS',OPERATOR.USER);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'STATUS',_status);
   _params.PROC_START:='N';
   _params.CONTEXT:=obj_new('RET','B_PREL');
   _params.CONTEXT.RET:=~~;
   _params.CONTEXT.B_PREL:='';
   exec('mp_run','#b__box',_params);
   OPERATOR.USER:=_usr;
   EDOKUM.cntx_pop();
   _str:='';
   {? var_pres('RET',_params.CONTEXT)=type_of(SYSLOG)
   || _tab:=_params.CONTEXT.RET;
      {? _tab.first()
      || _str:='';
         {!
         |? _str+=_tab.OPIS+'\n';
            _tab.next()
         !};
         _str:=_str-1
      ?}
   |? var_pres('RET',_params.CONTEXT)=type_of('')
   || _str:=_params.CONTEXT.RET
   ?};
   {? _str<>''
   || _valid:=0;
      exec('EDOKOS_repeat','portal_wnioski',_params.CONTEXT.B_PREL,'Walidacja po akceptacji',_str)
   ?};
   &_params
?};

:: Kończenie czynności akceptacji
{? _valid
|| EDOKUM.cntx_psh();
   _usr:=OPERATOR.USER;
   OPERATOR.USER:=_user;
   _params:=exec('mp_run_a','#b__box');
   _params.ACT_UID:={? _wp='S' || 'OBG_FZO_EAKC'
                    |? _wp='D' || 'OBE_FDL_EBKP'
                    |? _wp='N' || exec('EDOKUM_action','portal_interm')
                    || 'OBE_FAW_EAKP'
                    ?};
   _params.AKCJA:='Portal';
   _params.UIDREF:=EDOKUM.uidref();
   _params.PORTS_IN:=exec('portsIn','#b__box',_params.ACT_UID);
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'EDOKUM',EDOKUM.ref());
   {? _params.ACT_UID<>'OBE_FAW_CPRZ'
   || exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'USERS',OPERATOR.USER)
   ?};
   exec('portsInSet','#b__box',_params.PORTS_IN,_params.ACT_UID,'STATUS',_status);
   _params.PROC_START:='N';
   _params.CONTEXT:=obj_new('DONE','B_PREL');
   _params.CONTEXT.DONE:=0;
   _params.CONTEXT.B_PREL:='';
   exec('mp_run','#b__box',_params);
   OPERATOR.USER:=_usr;
   {? _params.CONTEXT.DONE=0
   || exec('EDOKOS_repeat','portal_wnioski',
         _b_prel,
         'Akceptacja w ERP',
         'Akceptacja w ERP zakończyła się niepowodzeniem.\nSkontaktuj się z administratorem.'
      )
   ?};
   exec('EDOKUM_proc_stop','portal_wnioski',_params.UIDREF);
   EDOKUM.cntx_pop()
?}


\EDOKOS_repeat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Dodaje informacje o niepowodzeniu i przywraca ostatni etap na ścieżce akceptacji
::   WE: _a - b_prel
::       _b - Opis etapu
::       _c - treść komunikat o niepowodzeniu
::----------------------------------------------------------------------------------------------------------------------
_b_prel:=_a;
_etap:=_b;
_text:=_c;
EDOKOS.cntx_psh();
EDOKOS.use('skid_y'+((ref_name(EDOKUM.ref()))+2));
EDOKOS.index('DISP'); EDOKOS.prefix('S',EDOKUM.ref());
{? EDOKOS.last()
|| _nr:=EDOKOS.OPER_NUM;
   exec('EDOKOS_add','portal_wnioski',EDOKUM.ref(),null,'S',_text);
   exec('EDOKOS_add','portal_wnioski',EDOKUM.ref(),null,'Y',_text,'S',_etap,'O');
   EDOKOS.prefix('S',EDOKUM.ref(),_nr);
   {? EDOKOS.first()
   || {!
      |? EDOKOS.cntx_psh();
         EDOKOS.OPER_NUM:=_nr+2;
         EDOKOS.STATUS:='N';
         EDOKOS.DATA:=date();
         EDOKOS.TIME:=time();
         EDOKOS.B_PREL:=_b_prel;
         EDOKOS.prefix();
         EDOKOS.add();
         EDOKOS.cntx_pop();
         EDOKOS.next()
      !}
   ?}
?};
EDOKOS.cntx_pop();
EDOKUM.STATUS:='s';
EDOKUM.put()


\EDOKUM_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Walidacja wniosku
::   WE: _a - Wskazanie na wniosek
::   WY: Tablica w wynikiem walidacji
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new('OK','MSG');
_obj.OK:=1;
_obj.MSG:='';

EDOKUM.cntx_psh();
EDOKUM.use(ref_name(_a));
EDOKUM.prefix();
{? EDOKUM.seek(_a)
|| EDOK_ATR.cntx_psh();
   EDOK_ATR.use('edokat'+(EDOKUM.name()+2));
   EDOK_ATR.index('REKKOLED'); EDOK_ATR.prefix(EDOKUM.ref(),null,'',);
   ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ');
   ETYP_ATR.prefix(EDOKUM.TYP,null);
   {? EDOK_ATR.first()
   || {!
      |? {? ETYP_ATR.find_key(EDOK_ATR.KOL)
         || {? ETYP_ATR.WYMAG='T' &
               (ETYP_ATR.TAT().TYP<>'W' & EDOK_ATR.WAR='' | TAT.TYP='W' & EDOK_ATR.memo_txt(,1,'WAR_W')='')
            || _obj.MSG:='Nie uzupełniono pola: %1'[ETYP_ATR.TAT().OPIS]
            ?}
         ?};
         _obj.MSG='' & EDOK_ATR.next()
      !}
   ?};
   {? EDOKUM.PAPERLES
   || _obj.MSG:=exec('EDOKUM_valid','portal_paperless')
   ?};
   {? _obj.MSG='' & EDOKUM.TYP().FORM_WAL
   || _tab:=($EDOKUM.TYP().FORM_WAL().TRESC)();
      {? var_pres('_tab')>0
      || {? type_of(_tab)=type_of('')
         || _obj.MSG:=_tab
         |? type_of(_tab)=type_of(SYSLOG) & var_pres('OPIS',_tab)>0
         || {? _tab.first()
            || {!
               |? _obj.MSG+=_tab.OPIS+'\n';
                  _tab.next()
               !};
               _obj.MSG:=_obj.MSG-1
            ?}
         ?}
      ?}
   ?};
   ETYP_ATR.cntx_pop();
   EDOK_ATR.cntx_pop()
?};
EDOKUM.cntx_pop();
{? _obj.MSG<>''
|| _obj.OK:=0
?};
_obj


\EDOKUM_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Dodaje wniosek na wspólnym portalu do bieżącej maski tabeli EDOKUM
::   WY: EDOKUM.uidref() lub ~~ gdy nie udało się utworzyć
::----------------------------------------------------------------------------------------------------------------------
_ref:=~~;
{? ~EDOKUM.FIRMA & 7+EDOKUM.OSOBAWWW='pracown'
|| P.cntx_psh();
   P.use(8+EDOKUM.OSOBAWWW);
   P.prefix();
   {? P.seek(EDOKUM.OSOBAWWW)
   || EDOKUM.FIRMA:=P.FIRMA
   ?};
   P.cntx_pop()
?};
{? ~EDOKUM.FIRMA || EDOKUM.FIRMA:=REF.FIRMA ?};
{? EDOKUM.DATAW=date(0,0,0) || EDOKUM.DATAW:=date() ?};
{? EDOKUM.DOP=date(0,0,0) || EDOKUM.DOP:=EDOKUM.DATAW ?};
{? ~EDOKUM.USERS || EDOKUM.USERS:=OPERATOR.USER ?};
{? ~EDOKUM.DOSTAWCA || EDOKUM.DOSTAWCA:=EDOKUM.USERS().OSOBA ?};
{? ~EDOKUM.ROK_F
|| ROK_F.cntx_psh();
   ROK_F.index('ROKPOCZ'); ROK_F.prefix(EDOKUM.FIRMA);
   {? ROK_F.find_le(date(EDOKUM.DATAW~1,1,1))
   || EDOKUM.ROK_F:=ROK_F.ref()
   ?};
   ROK_F.cntx_pop()
?};
EDOKUM.TYPOBIEG:=EDOKUM.TYP().TYPOBIEG;
EDOKUM.TR:=EDOKUM.TYP().NAZWA;
VAR_DEL.delete('no_us'); no_us:=1;
{? EDOKUM.TYP & EDOKUM.add()
|| _ref:=EDOKUM.uidref();
   exec('ustal_numer','obiegi',2,EDOKUM.ROK_F,1,0);
   {? var_pres('id_edok')>0
   || EDOKUM.ID:=id_edok;
      EDOKUM.put()
   ?}
?};
VAR_DEL.delete('no_us');
_ref


\EDOKUM_put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Poprawia bieżący wniosek na wspólnym portalu do bieżącej maski tabeli EDOKUM
::   WY: '' lub ~~ gdy nie udało się poprawić
::----------------------------------------------------------------------------------------------------------------------
_ref:=~~;
{? EDOKUM.TYP & EDOKUM.put()
|| _ref:=''
?};
_ref


\EDOKUM_del
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Usuwa dokument na wspólnym portalu
::   WE: [_a] - wskazanie na dokument w obiegu (EDOKUM.ref)
::       [_b] - usuwać numerację: [1]-usuwa 0-nie usuwa
::----------------------------------------------------------------------------------------------------------------------
_ref:={? var_pres('_a')>0 || _a || EDOKUM.ref() ?};
_del_num:={? var_pres('_b')>0 || _b || 1 ?};
_del:=0;
{? _ref
|| _kod:=ref_name(_ref)+2;
   EDOKUM.cntx_psh();
   EDOKUM.use('skid_v'+_kod);
   EDOKUM.prefix();
   _ds:=do_state();
   {? _ds=0
   || do()
   ?};
   {? _ds<>2 & EDOKUM.seek(_ref)
   || EDOK_ATR.cntx_psh();
      EDOK_ATR.use('edokat'+_kod);
      EDOK_ATR.index('REKKOLED');
      EDOK_ATR.prefix(EDOKUM.ref(),null,'',);
      {? EDOK_ATR.first() || {! |? EDOK_ATR.del !} ?};
      EDOK_ATR.cntx_pop();

      EDOK_ATK.cntx_psh();
      EDOK_ATK.use('edoknt'+_kod);
      EDOK_ATK.index('EDOKUM');
      EDOK_ATK.prefix(EDOKUM.ref());
      {? EDOK_ATK.first() || {! |? EDOK_ATK.del !} ?};
      EDOK_ATK.cntx_pop();

      EDOKOS.cntx_psh();
      EDOKOS.use('skid_y'+_kod);
      EDOKOS.index('DATA');
      EDOKOS.prefix(EDOKUM.ref());
      {? EDOKOS.first() || {! |? EDOKOS.del !} ?};
      EDOKOS.cntx_pop();

      EDOKPAR.cntx_psh();
      EDOKPAR.use('skidh_'+_kod);
      EDOKPAR.index('UNIK');
      EDOKPAR.prefix(EDOKUM.ref());
      {? EDOKPAR.first() || {! |? EDOKPAR.del !} ?};
      EDOKPAR.cntx_pop();

      EDOKLOG.cntx_psh();
      EDOKLOG.use('skid_d'+_kod);
      EDOKLOG.index('DISP');
      EDOKLOG.prefix(EDOKUM.ref());
      {? EDOKLOG.first() || {! |? EDOKLOG.del !} ?};
      EDOKLOG.cntx_pop();

      EDOKUMZ.cntx_psh();
      EDOKUMZ.use('skid_n'+_kod);
      EDOKUMZ.index('DISP');
      EDOKUMZ.prefix(EDOKUM.ref());
      {? EDOKUMZ.first()
      || EDOKUMZS.cntx_psh();
         EDOKUMZS.use('skids_'+_kod);
         EDOKUMZS.index('EDOKUMZ');
         {!
         |? EDOKUMZS.prefix(EDOKUMZ.ref());
            {? EDOKUMZS.first() || {! |? EDOKUMZS.del() !} ?};
            EDOKUMZ.del()
         !};
         EDOKUMZS.cntx_pop()
      ?};
      EDOKUMZ.cntx_pop();

      EDOKUSER.cntx_psh();
      EDOKUSER.use('skidk_'+_kod);
      EDOKUSER.index('UNIK');
      EDOKUSER.prefix(EDOKUM.ref());
      {? EDOKUSER.first() || {! |? EDOKUSER.del !} ?};
      EDOKUSER.cntx_pop();

      EPODZ.cntx_psh();
      EPODZ.use('skid_j'+_kod);
      EPODZ.index('EDOKUM');
      EPODZ.prefix(EDOKUM.ref());
      {? EPODZ.first() || {! |? EPODZ.del !} ?};
      EPODZ.cntx_pop();

      EVAT.cntx_psh();
      EVAT.use('skid_a'+_kod);
      EVAT.index('EDOKUM');
      EVAT.prefix(EDOKUM.ref());
      {? EVAT.first() || {! |? EVAT.del !} ?};
      EVAT.cntx_pop();

      POZF.cntx_psh();
      POZF.use('pozf__'+_kod);
      POZF.index('EDOKUM');
      POZF.prefix(EDOKUM.ref());
      {? POZF.first() || {! |? POZF.del !} ?};
      POZF.cntx_pop();

      EDOKUMP.cntx_psh();
      EDOKUMP.use('skidpu'+_kod);
      EDOKUMP.index('CHRONO');
      EDOKUMP.prefix(EDOKUM.ref());
      {? EDOKUMP.first() || {! |? EDOKUMP.del !} ?};
      EDOKUMP.cntx_pop();

      EDOKUMD.cntx_psh();
      EDOKUMD.use('bdiety'+_kod);
      EDOKUMD.index('DELEG');
      EDOKUMD.prefix(EDOKUM.ref());
      {? EDOKUMD.first() || {! |? EDOKUMD.del !} ?};
      EDOKUMD.cntx_pop();

      EDOK_ZAL.cntx_psh();
      EDOK_ZAL.use('edokzl'+_kod);
      EDOK_ZAL.index('WYDATKI');
      EDOK_ZAL.prefix(EDOKUM.ref());
      {? EDOK_ZAL.first() || {! |? EDOK_ZAL.del !} ?};
      EDOK_ZAL.cntx_pop();

      EDOKRZAP.cntx_psh();
      EDOKRZAP.use('skid_q'+_kod);
      EDOKRZAP.index('EDOKUM');
      EDOKRZAP.prefix(EDOKUM.ref());
      {? EDOKRZAP.first() || {! |? EDOKRZAP.del !} ?};
      EDOKRZAP.index('EZAPOT');
      EDOKRZAP.prefix(EDOKUM.ref());
      {? EDOKRZAP.first() || {! |? EDOKRZAP.del !} ?};
      EDOKRZAP.cntx_pop();

      {? _del_num || exec('ustal_numer','obiegi',2,null,2) ?};
      EDOKUM.del()
   ?};
   _del:={? _ds=0 || end() || do_state()=1 ?};
   EDOKUM.cntx_pop()
?};
_del


\EDOKUM_to_valid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Przekazuje do walidacji
::   WE: _a - poprzedni status wniosku
::----------------------------------------------------------------------------------------------------------------------
_b_status:=_a;
{? EDOKUM.STATUS='S' & -_b_status<>'s'
|| EDOKUM.STATUS:='V';
   EDOKUM.put()
?}


\process
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Walidacja wniosków w obiegu i uruchamianie procesów dla wniosków - formuła serwisowa
::   WE: [_a] - lat wstecz lub maska wniosków do przetworzenia
::       [_b] - komunikaty? [1]-tak 0-nie
::----------------------------------------------------------------------------------------------------------------------
_par:={? var_pres('_a')>0 || _a || 1 ?};
_komm:={? var_pres('_b')>0 || _b || 1 ?};
_m_nwu:=exec('nwu_edokum_mask','portal_method_chr');
{? type_of(_par)=type_of('')
|| _maski:=obj_new(1);
   _maski[1]:={? +_par=2 || 'skid_v'+_par || _par ?}
|| _lat:=_par;
   _maski:=obj_new(_lat+2);
   ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
   {? ROK_F.last()
   || _nr:=1;
      _maski[_nr]:='skid_v_1';
      _nr+=1;
      _maski[_nr]:=_m_nwu;
      {? _lat>0
      || {!
         |? _lat-=1;
            _nr+=1;
            _maski[_nr]:='skid_v'+(($(ROK_F.POCZ_ROK~1))+2);
            _lat>0 & ROK_F.prev()
         !}
      ?}
   ?}
?};
_typ:=exec('bl_typ','obiegi',2);
_typ3:=exec('bl_typ','obiegi',3);
_mf:='/*+MASK_FILTER(EDOKUM';
{! _ii:=1..obj_len(_maski)
|! _mf+=','+_maski[_ii]
!};
_mf+=')*/';
_tab:=sql(
   'select '+_mf+' EDOKUM.REFERENCE as REF, 2 as TYP '+
   'from @EDOKUM join ETYPY using(EDOKUM.TYP,ETYPY.REFERENCE) '+
   'where EDOKUM.FIRMA=:_a and EDOKUM.TYPOBIEG=:_b and '+
   '(EDOKUM.STATUS=\'V\' or EDOKUM.STATUS=\'s\' and EDOKUM.B_PREL=\'\') and '+
   '(ETYPY.W_PORTAL=\'T\' or ETYPY.W_PORTAL=\'X\' or ETYPY.W_PORTAL=\'P\' or ETYPY.W_PORTAL=\'s\' or '+
   '(ETYPY.W_PORTAL=\'N\' and ETYPY.IN_POR=1)) '+

   'UNION ALL '+

   'select '+_mf+' EDOKUM.REFERENCE as REF, 3 as TYP '+
   'from @EDOKUM join ETYPY using(EDOKUM.TYP,ETYPY.REFERENCE) '+
   'where EDOKUM.FIRMA=:_a and EDOKUM.TYPOBIEG=:_c and '+
   '(EDOKUM.STATUS=\'V\' or EDOKUM.STATUS=\'s\' and EDOKUM.B_PREL=\'\') and '+
   '(ETYPY.W_PORTAL=\'D\') '
   ,REF.FIRMA,_typ,_typ3
);
{? _komm
|| _komm+=var_pres('KOMM')>0;
   exec('KOMM','#object');
   KOMM.init(,,'Walidacja wniosków i uruchomienie procesów')
?};
{? _tab.first()
|| _user:=OPERATOR.USER;
   {!
   |? EDOKUM.cntx_psh();
      EDOKUM.use(8+_tab.REF);
      EDOKUM.prefix();
      {? EDOKUM.seek(_tab.REF,)
      || _typ_str:={? _tab.TYP=2 || 'wniosek' || 'delegację' ?};
         {? _komm
         || KOMM.sect_beg('Przetworzono %1: %2'[_typ_str,exec('record','#to_string',EDOKUM.ref())])
         ?};
         exec('EDOKUM_process','portal_wnioski');
         {? _komm
         || KOMM.sect_end()
         ?}
      ?};
      EDOKUM.cntx_pop();
      _tab.next()
   !};
   OPERATOR.USER:=_user
?};
exec('proc_super_user','portal_wnioski',_komm);
{? _komm
|| KOMM.select();
   {? _komm=1
   || VAR_DEL.delete('KOMM')
   ?}
?}


\EDOKUM_process
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Przetwarza wniosek walidując go i startując proces
::----------------------------------------------------------------------------------------------------------------------
_ref:=~~;
{? EDOKUM.STATUS='V'
|| _valid:=exec('EDOKUM_valid','portal_wnioski',EDOKUM.ref());
   {? _valid.OK=0
   || EDOKOS.cntx_psh();
      EDOKOS.use('skid_y'+(EDOKUM.name()+2));
      EDOKOS.index('DATA'); EDOKOS.prefix(EDOKUM.ref());

      EDOKOS.blank(1);
      EDOKOS.EDOKUM:=EDOKUM.ref();
      EDOKOS.USERS:=EDOKUM.USERS;
      EDOKOS.OPERACJA:='P';
      EDOKOS.DATA:=date();
      EDOKOS.TIME:=time();
      EDOKOS.WID:='P';
      EDOKOS.add();
      EDOKOS.memo_set(_valid.MSG,'UW_DL');
      EDOKOS.memo_put();
      EDOKOS.put();

      EDOKOS.cntx_pop();
      EDOKUM.STATUS:='P';
      EDOKUM.memo_set(_valid.MSG,'UW_OPDL');
      EDOKUM.memo_put(,'UW_OPDL');
      EDOKUM.put();

:: dodanie informacji z walidacji do scieżki akceptacji
      EDOKOS.index('SZUK11'); EDOKOS.prefix(EDOKUM.ref(),'S',);
      {? EDOKOS.last()
      || {? EDOKOS.STATUS='N' & EDOKOS.USERS=EDOKUM.USERS
         || EDOKOS.STATUS:='T';
            EDOKOS.put()
         ?}
      || exec('EDOKOS_add','portal_wnioski',EDOKUM.ref(),EDOKUM.USERS,'Y',,'S','Rejestracja wniosku','T')
      ?};
      exec('EDOKOS_add','portal_wnioski',EDOKUM.ref(),null,'Y',_valid.MSG,'S','Walidacja wniosku','O');
      exec('EDOKOS_add','portal_wnioski',EDOKUM.ref(),EDOKUM.USERS,'Y',,'S','Rejestracja wniosku','N');

      _ref:=EDOKUM.uidref()
   || EDOKUM.STATUS:='s';
      EDOKUM.memo_set('','UW_OPDL');
      EDOKUM.memo_put(,'UW_OPDL');
      EDOKUM.put();

::    Akceptacja wprowadzającego
      EDOKOS.cntx_psh();
      EDOKOS.use('skid_y'+(EDOKUM.name()+2));
      EDOKOS.index('DATA'); EDOKOS.prefix(EDOKUM.ref());

::      EDOKOS.cntx_psh();
::      EDOKOS.index('SZUK12');
::      EDOKOS.prefix(EDOKUM.ref(),'Y',);
::      _jest:=EDOKOS.first();
::      EDOKOS.cntx_pop();
      _jest:=EDOKUM.B_PRELS<>'';
      EDOKOS.cntx_pop();
      {? _jest
      || exec('EDOKUM_wpr','portal_wnioski',EDOKUM.USERS)
      ?}
   ?}
?};
{? -EDOKUM.STATUS='s' & EDOKUM.B_PREL=''
|| _ref:=exec('EDOKUM_start','portal_wnioski');
   {? _ref=~~
   || {? var_pres('KOMM')>0
      || KOMM.error('Nie uruchomiono procesu obiegu wniosku o typie: %1.'@[EDOKUM.TYP().NAZWA],0)
      ?}
   || exec('EDOKUM_proc_stop','portal_wnioski',_ref)
   ?}
?};
_ref


\EDOKUM_sel
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Techniczna prezentacja wniosków z portalu
::   WE: [_a] - Maska (suffix) tabeli EDOKUM i powiazanych [domyślnie: '_1'].
::       [_b] - typ wniosku na portalu [domyślnie: 'T'-wnioski HR]
::----------------------------------------------------------------------------------------------------------------------
_kod:={? var_pres('_a')=type_of('') & +_a=2 || _a || '_1' ?};
_w_portal:={? var_pres('_b')=type_of('') & +_b=1 & 'NTXPsDn'*_b || _b || 'T' ?};
_rodz:={? var_pres('_c')=type_of('') & +_c=1 & 'WD'*_c || _c || 'W' ?};
_wniosek:=_rodz='W';
params_set('wniosek',_wniosek);
{? _wniosek
|| _tw:={? _w_portal='T' || 'kadrowe'
        |? _w_portal='X' || 'urlopowe'
        |? _w_portal='P' || 'paperless'
        |? _w_portal='n' || 'inTerm'
        || 'pozostałe'
        ?};
   _tp:={? _w_portal='s' || 'SEOD' || 'Portal HR' ?};
   _tyt:='Wnioski %1 - %2'[_tw,_tp]; _id:='01'
|| _tyt:='Delegacje - SEOD'; _id:='02'
?};
_wedok:=_o:=EDOKUM.mk_sel(_tyt,'P',,'edokumtmp'+_id,,,,,'U');
{? _wniosek
|| EDOKUM.win_fld(_o,,'DATAW',,,,,,'Data rejestracji');
   EDOKUM.win_fld(_o,,'USERS','KOD',,20,,,'Użytkownik');
   EDOKUM.win_fld(_o,,'TYP','NAZWA',,118,,,'Typ wniosku');
   EDOKUM.win_fld(_o,,'ID',,,,,,'Identyfikator');
   EDOKUM.win_fld(_o,,'STATUS')
|| EDOKUM.win_fld(_o,,'DATAW',,,,,,'Data wystawienia');
   EDOKUM.win_fld(_o,,'USERS','KOD',,20,,,'Rejestrujący');
   EDOKUM.win_fld(_o,,'DOSTAWCA','NAZWISKO',,20,,,'Delegowany');
   EDOKUM.win_fld(_o,,'DATA_OD',,,,,,'Od daty');
   EDOKUM.win_fld(_o,,'DATA_DO',,,,,,'Do daty');
   EDOKUM.win_fld(_o,,'ID',,,,,,'Identyfikator');
   EDOKUM.win_fld(_o,,'DEL_CEL','TR',,12,,,'Cel delegacji');
   EDOKUM.win_fld(_o,,'DEL_MIE',,,40,,,'Miejsce delegacji');
   EDOKUM.win_fld(_o,,'KHKH','SKR',,,,,'Kontrahent');
   EDOKUM.win_fld(_o,,'ZAM',,,,,,'Zamknięta',,,2,,"'T'","'N'");
   EDOKUM.win_fld(_o,,'STATUS',,,,,,'Status')
?};

EDOKUM.win_act(_o,,'Formuła','Usuń',,,"
   _akc_grp:=EDOKUM.sel_size();
   {? _akc_grp | FUN.ask('Czy usunąć wiosek?')
   || _next:=null;
      EDOKUM.cntx_psh();
      {? EDOKUM.next() | EDOKUM.prev()
      || _next:=EDOKUM.ref()
      ?};
      EDOKUM.cntx_pop();
      {? exec('EDOKUM_del','portal_wnioski') & _next
      || EDOKUM.seek(_next)
      ?}
   ?}
",,,1,"
   FUN.ask('Czy usunąć zaznaczone wnioski?')
");
{? _wniosek
|| EDOKUM.win_act(_o,,'Formuła','Walidacja',,,"
      _obj:=exec('EDOKUM_valid','portal_wnioski',EDOKUM.ref());
      {? _obj.OK
      || FUN.info(
            'Walidacja zakończona sukcesem.\nBrak komunikatów.'@+
            {? EDOKUM.TYP().FORM_WAL=null
            || '\n\n'+'(W typie wniosku nie wskazano formuły walidacyjnej).'@
            || ''
            ?}
         )
      || KH.memo_set(_obj.MSG,'OPIS');
         KH.memo_view(,'OPIS')
      ?}
   ",,)
?};
{! _empty:=0 .. 1
|! EDOKUM.win_act(_o,_empty,'Formuła','Testuj od&bieranie',,,"
      _wniosek:=params_get().wniosek;
      _typ:='PORTAL_'+{? _wniosek || 'WNIOSKI' || 'SEOD' ?};
      EDOKUM.cntx_psh();
      exec('process_receive','sync_mwa',_typ);
      EDOKUM.cntx_pop()
   ",,);
   EDOKUM.win_act(_o,_empty,'Formuła','Testuj &przetwarzanie',,,"
      EDOKUM.cntx_psh();
      exec('process','portal_wnioski',EDOKUM.name());
      EDOKUM.cntx_pop()
   ",,);
   EDOKUM.win_act(_o,_empty,'Formuła','Testuj wy&syłanie',,,"
      _wniosek:=params_get().wniosek;
      _typ:='PORTAL_'+{? _wniosek || 'WNIOSKI' || 'SEOD' ?};
      EDOKUM.cntx_psh();
      exec('process_send','sync_mwa',_typ);
      EDOKUM.cntx_pop()
   ",,)
!};
EDOKUM.win_act(_o,,'Formuła','Zadania',,,"exec('todo_select','#b__box',EDOKUM.uidref())",,);
EDOKUM.win_act(_o,,'Formuła','Zmian&y'@@,,,"mb_exec('ZMIANY()')",,,,,,'Y');

EDOKUM.win_btn(_o,'text=%1,btn_label_align=center,panel=bottom,align=begin'['Testuj od&bieranie'],'menu:B');
EDOKUM.win_btn(_o,'text=%1,btn_label_align=center,panel=bottom,align=begin'['Testuj &przetwarzanie'],'menu:P');
EDOKUM.win_btn(_o,'text=%1,btn_label_align=center,panel=bottom,align=begin'['Testuj wy&syłanie'],'menu:S');

_menu:='Json';
EDOKUM.win_act(_o,,'Menu',_menu);
{? _wniosek
|| EDOKUM.win_act(_o,,'Formuła','Atrybuty',_menu,,"
      _json:=exec('EDOKUM_atr_json','portal_wnioski');
      KH.memo_set(_json,'OPIS');
      KH.memo_view(,'OPIS')
   ",,)
|| EDOKUM.win_act(_o,,'Formuła','Atrybuty',_menu,,"
      _json:=exec('EDOKUM_json','portal_seod');
      KH.memo_set(_json,'OPIS');
      KH.memo_view(,'OPIS')
   ",,)
?};
EDOKUM.win_act(_o,,'Formuła','Załącz&niki',_menu,,"
   _json:=exec('EDOKUM_att_json','portal_wnioski');
   KH.memo_set(_json,'OPIS');
   KH.memo_view(,'OPIS')
",,);
EDOKUM.win_act(_o,,'Formuła','Scieżka',_menu,,"
   _json:=exec('EDOKUM_akc_json','portal_wnioski');
   KH.memo_set(_json,'OPIS');
   KH.memo_view(,'OPIS')
",,);
{? _wniosek
|| EDOKUM.win_act(_o,,'Formuła','Typy załączników',_menu,,"
      ETYPY.cntx_psh();
      ETYPY.prefix();
      EDOKUM.TYP();
      _json:=exec('ETYPY_akc_json','portal_paperless');
      KH.memo_set(_json,'OPIS');
      KH.memo_view(,'OPIS');
      ETYPY.cntx_pop()
   ",,)
?};
::EDOKUM.win_act(_o,,'Formuła','A&kceptacja procesu',,,"
::   exec('EDOKUM_akc','portal_wnioski','jchmurowy','Y')
::",,);
::EDOKUM.win_act(_o,,'Formuła','Powiąz&ania',,,"
::   _tab:=EDOKUM.testlink();
::   _tab.win_sel(_tab.mk_sel(,,1));
::   _tab.select()
::",,);
EDOKUM.win_act(_o,,'Formuła','Status &procesu',_menu,,"
   _info:=exec('EDOKUM_proc_ok','portal_wnioski',EDOKUM.uidref());
   {? _info=''
   || FUN.info('Proces przebiega poprawnie.')
   || FUN.info(_info)
   ?}
",,);
EDOKUM.win_act(_o,,'Formuła','Dodatkowe parametry'@@,_menu,,"
   _params:=EDOKUM.memo_txt(,1,'PARAMS');
   {? _params=''
   || FUN.info('Brak dodatkowych parametrów.'@)
   || KH.memo_set(_params,'OPIS');
      KH.memo_view(,'OPIS')
   ?}
",,);
EDOKUM.win_act(_o,,'Formuła','Wyślij',_menu,,"
   exec('EDOKUM_send','portal_interm')
",,);
EDOKUM.win_act(_o,,'Formuła','Link',_menu,,"
   _link:=exec('EDOKUM_link','portal_interm');
   KH.memo_set(_link,'OPIS');
   KH.memo_view(,'OPIS')
",,);
EDOKUM.win_act(_o,,'Wyświetl',,,,"exec('akc_display','obe_faw')",,);
EDOKUM.win_act(_o,,'Formuła','Do wysyłk&i',,,"EDOKUM.put(,1)",,,1);
::EDOKUM.win_act(_o,,'Formuła','Przełożny',,,"
::   _tab:=exec('przelozony','form_ob',EDOKUM.USERS().OSOBA,,2);
::   _tab.win_sel(_tab.mk_sel(,,1));
::   _tab.select()
::",,);
::EDOKUM.win_act(_o,,'Formuła','Kop&ia',,,"
::   exec('EDOKUM_copy','portal_wnioski')
::",,);
::_fml:="
::   _to:=exec('bl_typ','obiegi',2);
::   ETYPY.index('UNIK_WP');
::   ETYPY.prefix(_to,'T');
::   _sel:=ETYPY.mk_sel(,'P',,,,,,,'U');
::   ETYPY.win_fld(_sel,,'NAZWA');
::   ETYPY.win_act(_sel,,'Formuła','Wybierz',,,\"sel_exit()\",,1);
::   ETYPY.win_sel(_sel);
::   {? ETYPY.select()
::   || EDOKUM.blank(1);
::      EDOKUM.TYP:=ETYPY.ref();
::      _usr:='jchmurowy';
::      USERS.cntx_psh();
::      USERS.index('USR_KKOD'); USERS.prefix(_usr,);
::      {? USERS.first()
::      || EDOKUM.USERS:=USERS.ref()
::      ?};
::      USERS.cntx_pop();
::      _ref:=exec('EDOKUM_add','portal_wnioski')
::   ?}
::";
::EDOKUM.win_act(_o,,'Formuła','Nowy',,,_fml,,);
::EDOKUM.win_act(_o,1,'Formuła','Nowy',,,_fml,,);
::EDOKUM.win_act(_o,,'Formuła','Start procesu',,,"
::   VAR_DEL.delete('no_us');
::   no_us:=EDOKUM.USERS;
::   exec('EDOKUM_start','portal_wnioski');
::   VAR_DEL.delete('no_us')
::",,);
EDOKUM.win_act(_o,,'Kolejność');

{? _wniosek
|| _watr:=_o:=EDOK_ATR.mk_sel('Inne dane','P',,'#edokatrt',,,,,'U');
   EDOK_ATR.win_fld(_o,,'KOL');
   EDOK_ATR.win_fld(_o,,'TAT','OPIS',,80);
   EDOK_ATR.win_fld(_o,,'WAR',,,50);
   EDOK_ATR.win_fld(_o,,'WAR_W',,,50);
   EDOK_ATR.win_act(_o,,'Kolejność');
   EDOK_ATR.win_sel(_o)
|| _wdiet:=_wer:=EDOKUMD.mk_sel('Diety','P',,'#edokumdsel',,,,,'U');
   EDOKUMD.win_fld(_wer,,'DATA_OD',,,,,,'Od daty');
   EDOKUMD.win_fld(_wer,,'DATA_DO',,,,,,'Do daty');
   EDOKUMD.win_fld(_wer,,'KRAJ','NAZ',,,,,'Kraj');
   EDOKUMD.win_fld(_wer,,'WAL','SYM',,,,,'Waluta');
   EDOKUMD.win_fld(_wer,OBIEGI,'DIETKWOT',,,,,,'Kwota');
   EDOKUMD.win_fld(_wer,,'UWAGI',,,96,,,'Uwagi');
:: EDOKUMD.win_act(_wer,,'Formuła','Nazwa_akcji',,,"przed","po",1);
   EDOKUMD.win_sel(_wer);
   OBIEGI.fld_fml('DIETKWOT','BEFORE_DISPLAY',"exec('kwota_refresh','diety');~~");

   _wprze:=_wer:=EDOKUMP.mk_sel('Przejazdy','P',,'#edokumpsel',,,,,'U');
   EDOKUMP.win_fld(_wer,,'DATA_WYJ',,,,,,'Wyjazd');
   EDOKUMP.win_fld(_wer,,'GODZ_WYJ',,,,,,'Godzina');
   EDOKUMP.win_fld(_wer,,'KRAJ_WYJ','NAZ',,30,,,'Kraj');
   EDOKUMP.win_fld(_wer,,'MIE_WYJ',,,30,,,'Miejsce');
   EDOKUMP.win_fld(_wer,,'DATA_PRZ',,,,,,'Przyjazd');
   EDOKUMP.win_fld(_wer,,'GODZ_PRZ',,,,,,'Godzina');
   EDOKUMP.win_fld(_wer,,'KRAJ_PRZ','NAZ',,30,,,'Kraj');
   EDOKUMP.win_fld(_wer,,'MIE_PRZ',,,30,,,'Miejsce');
   EDOKUMP.win_fld(_wer,,'LICZ_KM',,,,,,'Km');
   EDOKUMP.win_fld(_wer,OBIEGI,'SRODT',,,20,,,'');
   EDOKUMP.win_sel(_wer);

   _wwyd:=_wer:=EDOK_ZAL.mk_sel('Wydatki','P',,'#edokzalsel',,,,,'U');
   EDOK_ZAL.win_fld(_wer,,'ETYPWYD','NAZWA',,40,,,'Typ wydatku');
   EDOK_ZAL.win_fld(_wer,,'WAL','KOD',,,,,'Waluta');
   EDOK_ZAL.win_fld(_wer,,'NETTO',,,,,,'Netto');
   EDOK_ZAL.win_fld(_wer,,'BRUTTO',,,,,,'Brutto');
   EDOK_ZAL.win_fld(_wer,,'OPIS',,,88,,,'Opis');
   EDOK_ZAL.win_sel(_wer)
?};

_wos:=_o:=EDOKOS.mk_sel('Obieg','P',,'edokumymp02',,,,,'U');
EDOKOS.win_fld(_o,,'DATA',,,-10);
EDOKOS.win_fld(_o,,'TIME',,,-8);
EDOKOS.win_fld(_o,,'USERS','KOD',,,,,'Użytkownik');
EDOKOS.win_fld(_o,,'OPERACJA');
EDOKOS.win_fld(_o,,'UW_DL',,,50);
EDOKOS.win_fld(_o,,'WID');
EDOKOS.win_fld(_o,,'B_PREL',,,20);
EDOKOS.win_fld(_o,,'B_PRELS',,,20);
EDOKOS.win_fld(_o,,'STATUS',,,20);
EDOKOS.win_fld(_o,,'OPER_NUM');
EDOKOS.win_act(_o,,'Usuń');
EDOKOS.win_act(_o,,'Wyświetl',,,,"FUN.info(EDOKOS.uidref())",,);
EDOKOS.win_act(_o,,'Formuła','Parametry czynności',,,"
   EDOKPAR.cntx_psh();
   EDOKPAR.use('skidh_'+( (ref_name(EDOKUM.ref()))+2 ));
   EDOKPAR.index('UNIK');
   EDOKPAR.prefix(EDOKUM.ref(),EDOKOS.B_PREL,);
   {? EDOKPAR.first()
   || _red:=EDOKPAR.mk_edit(,);
      EDOKPAR.win_efld(_red,,'B_PREL');
      EDOKPAR.win_efld(_red,,'B_PRELS');
      EDOKPAR.win_efld(_red,,'FORM_PRZ','TRESC',,100,,,'Przy akceptacji');
      EDOKPAR.win_efld(_red,,'FORM_ODR','TRESC',,100,,,'Przy odrzuceniu');
      EDOKPAR.win_edit(_red);
      EDOKPAR.display()
   || FUN.info('Nie znaleziono parametrów czynności.')
   ?};
   EDOKPAR.cntx_pop()
",,);
EDOKOS.win_act(_o,,'Kolejność');
EDOKOS.win_sel(_o);

_wz:=_o:=EDOKUMZ.mk_sel('Załaczniki','P',,'edokumymp03',,,,,'U');
EDOKUMZ.win_fld(_o,,'DATE');
EDOKUMZ.win_fld(_o,,'TIME');
EDOKUMZ.win_fld(_o,,'USER',,,,,,'Użytkownik');
EDOKUMZ.win_fld(_o,,'TYP_ZAL','NAZWA',,30,,,'Typ');
EDOKUMZ.win_fld(_o,,'KR_OP',,,80);
EDOKUMZ.win_fld(_o,,'EDOKUM',,,50);
EDOKUMZ.win_act(_o,,'Wyświetl',,,,"FUN.info(EDOKUMZ.uidref())",,);
EDOKUMZ.win_act(_o,,'Kolejność');
EDOKUMZ.win_sel(_o);

_ws:=EDOKUMZS.mk_sel('Podpisy','P',,'#edokumzs04',,,,,'U');
EDOKUMZS.win_fld(_ws,,'SIGNDATE',,,,,,'Data');
EDOKUMZS.win_fld(_ws,,'SIGNTIME',,,,,,'Czas');
EDOKUMZS.win_fld(_ws,,'TYPEDESC',,,20,,,'Typ');
EDOKUMZS.win_fld(_ws,,'SIGNER',,,156,,,'Sygnatariusz');

EDOKUMZS.win_act(_ws,,'Kolejność');
:EDOKUMZS.win_act(_ws,,'Formuła','Nazwa_akcji',,,"przed","po",1);
EDOKUMZS.win_sel(_ws);

:: Okno EPODZ
_wpodz:=EPODZ.mk_sel('Podziały','P',,'#epodzseod',,,,,'U');
EPODZ.win_fld(_wpodz,,'SKID_MB','KOD',,,,,'Model');
EPODZ.win_fld(_wpodz,,'PBUD','SYMBOL',,13,,,'Wymiar 1');
EPODZ.win_fld(_wpodz,,'PBUD','OPIS',,13,,,,1);
EPODZ.win_fld(_wpodz,,'JORG','SYMBOL',,13,,,'Wymiar 2');
EPODZ.win_fld(_wpodz,,'JORG','OPIS',,13,,,,1);
EPODZ.win_fld(_wpodz,,'OKOSZ','SYMBOL',,13,,,'Wymiar 3');
EPODZ.win_fld(_wpodz,,'OKOSZ','OPIS',,13,,,,1);
EPODZ.win_fld(_wpodz,,'WYM4','SYMBOL',,13,,,'Wymiar 4');
EPODZ.win_fld(_wpodz,,'WYM4','OPIS',,13,,,,1);
EPODZ.win_fld(_wpodz,,'WYM5','SYMBOL',,13,,,'Wymiar 5');
EPODZ.win_fld(_wpodz,,'WYM5','OPIS',,13,,,,1);
EPODZ.win_fld(_wpodz,,'WART',,,25,2,,'Wartość');
EPODZ.win_fld(_wpodz,,'WAL','KOD',,,,,'Waluta');
EPODZ.win_fld(_wpodz,,'JM','KOD',,,,,'Jednostka');
::EPODZ.win_act(_wpodz,,'Formuła','Nazwa_akcji',,,"przed","po",1);
EPODZ.win_sel(_wpodz);

_grp:=EDOKUM.grp_make(_tyt,"",'edokumwp'+_id);
EDOKUM.grp_sel(_grp,,_wedok,,"
   _wniosek:=params_get().wniosek;
   _kod:=EDOKUM.name()+2;
   {? _wniosek
   || EDOK_ATR.use('edokat'+_kod);
      EDOK_ATR.index('REKKOLED');
      EDOK_ATR.prefix(EDOKUM.ref(),null,'',); EDOK_ATR.first();
      grp_disp(EDOK_ATR,EDOK_ATR.win_sel('?'))
   || EDOKUMD.use('bdiety'+_kod);
      EDOKUMD.index('DELEG');
      EDOKUMD.prefix(EDOKUM.ref()); EDOKUMD.first();
      grp_disp(EDOKUMD,EDOKUMD.win_sel('?'));

      EDOKUMP.use('skidpu'+_kod);
      EDOKUMP.index('CHRONO');
      EDOKUMP.prefix(EDOKUM.ref()); EDOKUMP.first();
      grp_disp(EDOKUMP,EDOKUMP.win_sel('?'));

      EDOK_ZAL.use('edokzl'+_kod);
      EDOK_ZAL.index('WYDATKI');
      EDOK_ZAL.prefix(EDOKUM.ref()); EDOK_ZAL.first();
      grp_disp(EDOK_ZAL,EDOK_ZAL.win_sel('?'))
   ?};

   EDOKOS.use('skid_y'+_kod);
   EDOKOS.index('DATA');
   EDOKOS.prefix(EDOKUM.ref()); EDOKOS.first();
   grp_disp(EDOKOS,EDOKOS.win_sel('?'));

   EDOKUMZ.use('skid_n'+_kod);
   EDOKUMZ.index('DISP');
   EDOKUMZ.prefix(EDOKUM.ref()); EDOKUMZ.first();
   grp_disp(EDOKUMZ,EDOKUMZ.win_sel('?'),1);

   EPODZ.use('skid_j'+_kod);
   EPODZ.index('EDOKUMDS');
   {? EDOKUM.get() & EDOKUM.TYP().W_PORTAL='s'
   || EPODZ.prefix(EDOKUM.ref())
   || EPODZ.prefix(null)
   ?};
   EPODZ.first();
   grp_disp(EPODZ,EPODZ.win_sel('?'))
");
EDOKUM.grp_splt(_grp,,'horizontal','bottom',15);
{? _wniosek
|| EDOKUM.grp_sel(_grp,EDOK_ATR,_watr,'Inne dane')
|| EDOKUM.grp_sel(_grp,EDOKUMD,_wdiet,'Diety');
   EDOKUM.grp_sel(_grp,EDOKUMP,_wprze,'Przejazdy');
   EDOKUM.grp_sel(_grp,EDOK_ZAL,_wwyd,'Wydatki')
?};
EDOKUM.grp_sel(_grp,EDOKOS,_wos,'Obieg');
_pep:=exec('lic','#b_domain','PEP');
_arws:="";
{? _pep
|| _arws:="
      _kod:=EDOKUM.name()+2;
      EDOKUMZS.use('skids_'+_kod);
      EDOKUMZS.index('EDOKUMZ');
      {? EDOKUMZ.get()
      || EDOKUMZS.prefix(EDOKUMZ.ref())
      || EDOKUMZS.prefix(null)
      ?};
      EDOKUMZS.first();
      grp_disp(EDOKUMZS,EDOKUMZS.win_sel('?'))
   "
?};
EDOKUM.grp_sel(_grp,EDOKUMZ,_wz,'Załączniki',_arws);
{? _pep
|| EDOKUM.tab_splt(_grp,,'horizontal','bottom',7);
   EDOKUM.grp_sel(_grp,EDOKUMZS,_ws)
?};
EDOKUM.grp_sel(_grp,EPODZ,_wpodz,'Podziały');
EDOKUM.cntx_psh();
EDOKUM.use('skid_v'+_kod);
EDOKUM.cntx_psh();
{? _w_portal='n'
|| EDOKUM.index('IN_POR');
   EDOKUM.prefix(REF.FIRMA,exec('bl_typ','obiegi',{? _wniosek || 2 || 3 ?}),'N',1)
|| EDOKUM.index('W_PORTAL');
   EDOKUM.prefix(REF.FIRMA,exec('bl_typ','obiegi',{? _wniosek || 2 || 3 ?}),_w_portal)
?};
EDOK_ATR.cntx_psh();
EDOKOS.cntx_psh();
EDOKUMZ.cntx_psh();
EPODZ.cntx_psh();
EDOKUM.win_sel(_grp);
typobi:=2;
EPODZ.fld_fml('SKID_MB','BEFORE_DISPLAY',"");
EDOKUM.select();
EDOKUM.cntx_pop();
EPODZ.fld_fml('SKID_MB','BEFORE_DISPLAY',"*");
{? ~_wniosek
|| OBIEGI.fld_fml('DIETKWOT','BEFORE_DISPLAY',"*")
?};
EPODZ.cntx_pop();
EDOKUMZ.cntx_pop();
EDOKOS.cntx_pop();
EDOK_ATR.cntx_pop();
EDOKUM.cntx_pop()


\EDOKUM_clear
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Usuwa wszystkie wnioski na wspólnym portalu
::       Funkcja techniczna
::   WE: Maska (suffix) tabeli EDOKUM i powiazanych [domyślnie: '_1'].
::----------------------------------------------------------------------------------------------------------------------
_kod:={? var_pres('_a')=type_of('') & +_a=2 || _a || '_1' ?};

EDOKUM.cntx_psh();
EDOKUM.use('skid_v'+_kod);
EDOKUM.prefix();
EDOK_ATR.cntx_psh();
EDOK_ATR.use('edokat'+_kod);
EDOK_ATR.index('REKKOLED');
EDOKOS.cntx_psh();
EDOKOS.use('skid_y'+_kod);
EDOKOS.index('DATA');
EDOKPAR.cntx_psh();
EDOKPAR.use('skidh_'+_kod);
EDOKPAR.index('UNIK');
{? EDOKUM.first()
|| {!
   |? EDOK_ATR.prefix(EDOKUM.ref(),null,'',);
      {? EDOK_ATR.first() || {! |? EDOK_ATR.del !} ?};
      EDOKOS.prefix(EDOKUM.ref());
      {? EDOKOS.first() || {! |? EDOKOS.del !} ?};
      EDOKPAR.prefix(EDOKUM.ref());
      {? EDOKPAR.first() || {! |? EDOKPAR.del !} ?};
      _tab:=EDOKUM.testlink();
      {? _tab.first()
      || _win:=_tab.mk_sel(,,1);
         _tab.win_act(_win,,'Formuła','Usuń',,,"
            {? FUN.ask('Usunąć?')
            || _tab:=cur_tab();
               ($(_tab.TABELA+'.cntx_psh()'))();
               ($(_tab.TABELA+'.use(_a)'))(_tab.MASKA);
               ($(_tab.TABELA+'.prefix()'))();
               {? ($(_tab.TABELA+'.seek(_a,)'))(_tab.REF)
               || ($(_tab.TABELA+'.del()'))()
               ?};
               ($(_tab.TABELA+'.cntx_pop()'))();
               _tab.del()
            ?}
         ");
         _tab.win_sel(_win);
         _tab.select()
      ?};
      &_tab;
      EDOKUM.del()
   !}
?};
EDOKPAR.cntx_pop();
EDOKOS.cntx_pop();
EDOK_ATR.cntx_pop();
EDOKUM.cntx_pop()


\t_etypy_wp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Triger przed put dla tabeli ETYPY
::----------------------------------------------------------------------------------------------------------------------
{? 'NSD'*ETYPY.W_PORTAL=0
|| TAT.cntx_psh();
   TAT.prefix();
   ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ'); ETYP_ATR.prefix(ETYPY.ref(),null);
   {? ETYP_ATR.first()
   || {!
      |? {? ETYP_ATR.TAT & TAT.seek(ETYP_ATR.TAT)
         || _id_wp:=ETYPY.ID_WP+ETYP_ATR.ID_WP;
            {? _id_wp<>TAT.ID_WP
            || TAT.ID_WP:=_id_wp;
               TAT.trig_off('*','*');
               TAT.put();
               TAT.trig_on('*','*')
            ?}
         ?};
::       putujemy ETYP_ATR bo inaczej nie usuniemy parametrów wniosków przed usunięciem definicji wniosku
         ETYP_ATR.trig_off('*','*');
         ETYP_ATR.put(,1);
         ETYP_ATR.trig_on('*','*');
         ETYP_ATR.next()
      !}
   ?};
   ETYP_ATR.cntx_pop();
   TAT.cntx_pop()
?};
{? ETYPY.W_PORTAL='s'
|| ETYPY.IDINHEAD:=1;
   ETYPY.ATR_ONE:=1
?};
{? ETYPY.W_PORTAL='D'
|| {? ETYPY.DEL_ZAGR
   || ETYPY.ID_WP:='SEODREQUEST#DELZ'
   || ETYPY.ID_WP:='SEODREQUEST#DELK'
   ?};
   ETYPY.WID_WP:=ETYPY.AKTYWNY
?};
{? ETYPY.ZAPOT
|| ETYPY.CZ_ZAPOT:=1
|| ETYPY.CZ_ZAPOT:=0
?};
1


\t_etypy_wa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PBS [23.25]
:: OPIS: Trigger przed add dla tabeli ETYPY
::----------------------------------------------------------------------------------------------------------------------
{? ETYPY.ZAPOT
|| ETYPY.CZ_ZAPOT:=1
|| ETYPY.CZ_ZAPOT:=0
?};
1


\t_etyp_atr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Triger po add tabeli EDOK_ATR
::   WE: _a - czy operacja się udała
::----------------------------------------------------------------------------------------------------------------------
{? _a=1
|| ETYPY.cntx_psh();
   {? 'NS'*ETYP_ATR.ETYPY().W_PORTAL=0
   || TAT.cntx_psh();
      TAT.prefix();
      {? ETYP_ATR.TAT & TAT.seek(ETYP_ATR.TAT)
      || _id_wp:=ETYPY.ID_WP+ETYP_ATR.ID_WP;
         {? _id_wp<>TAT.ID_WP
         || TAT.ID_WP:=_id_wp;
            TAT.trig_off('*','*');
            TAT.put();
            TAT.trig_on('*','*')
         ?}
      ?};
      TAT.cntx_pop()
   |? ETYP_ATR.ETYPY().W_PORTAL='S'
   || exec('t_etyp_atr','portal_seod')
   ?};
   ETYPY.cntx_pop()
?};
~~


\EDOKUM_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Czy istnieje wniosek powiązany ze wskazanym
::   WE: _a - uidref rekordu powiązanego
::----------------------------------------------------------------------------------------------------------------------
_pow:=_a;
_ret:=0;
_maski:=obj_new(2);
_maski[1]:=~~;
_maski[2]:=~~;
ROK_F.cntx_psh();
ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
{? ROK_F.find_le(date(date~1,1,1))
|| _maski[1]:=($(ROK_F.POCZ_ROK~1)+2);
   {? ROK_F.prev()
   || _maski[2]:=($(ROK_F.POCZ_ROK~1)+2)
   ?}
?};
ROK_F.cntx_pop();
EDOKUM.cntx_psh();
{! _ii:=1..2
|? _ret=0
|! {? var_pres('['+$_ii+']',_maski)=type_of('')
   || EDOKUM.use('skid_v'+_maski[_ii]);
      EDOKUM.index('DOK_POW');
      EDOKUM.prefix();
      _ret:=EDOKUM.find_key(_pow,)
   ?}
!};
EDOKUM.cntx_pop();
_ret


\EDOKUM_copy
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Kopiowanie bieżącego wniosku w obiegu z maski technicznej do standardowej (rocznej)
::----------------------------------------------------------------------------------------------------------------------
_nref:=null;
_uidref:=EDOKUM.uidref();
_maska:=EDOKUM.name()+2;
EDOKUM.cntx_psh();
{? EDOKUM.ROK_F
|| _nmaska:=($(EDOKUM.ROK_F().POCZ_ROK~1)+2);
   {? EDOKUM.name()+2<>_nmaska
   || EDOKUM.use('skid_v'+_nmaska);
      EDOKUM.prefix();
      VAR_DEL.delete('no_us');
      no_us:=1;
      EDOKUM.DOK_POW:=_uidref;
      {? EDOKUM.add()
      || _nref:=EDOKUM.ref()
      ?};
      VAR_DEL.delete('no_us')
   ?}
?};
EDOKUM.cntx_pop();
{? _nref
|| _pm:='skid_y';
   EDOKOS.cntx_psh();
   EDOKOS.use(_pm+_maska);
   EDOKOS.index('DATA'); EDOKOS.prefix(EDOKUM.ref());
   exec('EDOKUM_copy2','portal_wnioski',EDOKOS,_pm+_nmaska,_nref);
   EDOKOS.cntx_pop();

   _pm:='edokat';
   EDOK_ATR.cntx_psh();
   EDOK_ATR.use(_pm+_maska);
   EDOK_ATR.index('REKKOLED'); EDOK_ATR.prefix(EDOKUM.ref(),null,'',);
   exec('EDOKUM_copy2','portal_wnioski',EDOK_ATR,_pm+_nmaska,_nref);
   EDOK_ATR.cntx_pop();

   _pm:='skid_n';
   EDOKUMZ.cntx_psh();
   EDOKUMZ.use(_pm+_maska);
   EDOKUMZ.index('DISP'); EDOKUMZ.prefix(EDOKUM.ref());
:: exec('EDOKUM_copy2','portal_wnioski',EDOKUMZ,_pm+_nmaska,_nref);
   {? EDOKUMZ.first()
   || EDOKUMZS.cntx_psh();
      EDOKUMZS.use('skids_'+_maska);
      EDOKUMZS.index('EDOKUMZ');
      {!
      |? _zref:=null;
         EDOKUMZ.cntx_psh();
         EDOKUMZ.use(_pm+_nmaska);
         EDOKUMZ.prefix();
         EDOKUMZ.DOKUM:=_nref;
         {? EDOKUMZ.add()
         || _zref:=EDOKUMZ.ref()
         ?};
         EDOKUMZ.cntx_pop();
         {? _zref
         || EDOKUMZS.prefix(EDOKUMZ.ref());
            {? EDOKUMZS.first()
            || {!
               |? EDOKUMZS.cntx_psh();
                  EDOKUMZS.use('skids_'+_nmaska);
                  EDOKUMZS.prefix();
                  EDOKUMZS.EDOKUMZ:=_zref;
                  EDOKUMZS.add();
                  EDOKUMZS.cntx_pop();
                  EDOKUMZS.next()
               !}
            ?}
         ?};
         EDOKUMZ.next()
      !};
      EDOKUMZS.cntx_pop()
   ?};
   EDOKUMZ.cntx_pop();

   {? EDOKUM.TYP().W_PORTAL='s'
   || _pm:='skid_j';
      EPODZ.cntx_psh();
      EPODZ.use(_pm+_maska);
      EPODZ.index('EDOKUMPR'); EPODZ.prefix(EDOKUM.ref(),null);
      exec('EDOKUM_copy2','portal_wnioski',EPODZ,_pm+_nmaska,_nref);
      EPODZ.cntx_pop()
   ?};

   _pm:='skidk_';
   EDOKUSER.cntx_psh();
   EDOKUSER.use(_pm+_maska);
   EDOKUSER.index('UNIK'); EDOKUSER.prefix(EDOKUM.ref());
   exec('EDOKUM_copy2','portal_wnioski',EDOKUSER,_pm+_nmaska,_nref);
   EDOKUSER.cntx_pop()

?};
_nref


\EDOKUM_copy2
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Kopiowanie powiązanych tabel z EDOKUM
::   WE: _a - kopiowana tabela
::       _b - nowa maska
::       _c - EDOKUM ref
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_maska:=_b;
_edokum:=_c;
{? _tab.first()
|| {!
   |? {? _tab=EDOK_ATR
      || _memo:=EDOK_ATR.memo_txt(,1,'WAR_W')
      |? _tab=EDOKOS
      || _memo:=EDOKOS.memo_txt(,1,'UW_DL')
      ?};
      _tab.cntx_psh();
      _tab.use(_maska);
      _tab.prefix();
      {? _tab=EDOKUMZ
      || _tab.DOKUM:=_edokum
      || _tab.EDOKUM:=_edokum
      ?};
      _add:=_tab.add();
      {? _add & var_pres('_memo')>0 & _memo<>''
      || {? _tab=EDOK_ATR
         || EDOK_ATR.memo_set(_memo,'WAR_W');
            EDOK_ATR.memo_put(,'WAR_W');
            EDOK_ATR.put()
         |? _tab=EDOKOS
         || EDOKOS.memo_set(_memo,'UW_DL');
            EDOKOS.memo_put(,'UW_DL');
            EDOKOS.put()
         ?}
      ?};
      _tab.cntx_pop();
      _tab.next()
   !}
?}


\get_users
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Zwraca użytkownika na podstawie adresu e-mail
::   WE: _a - adres e-mail
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_email:=_a;
_guid:='';
SYSSUSER.cntx_psh();
SYSSUSER.index('WEBLOGIN');
SYSSUSER.prefix();
{? SYSSUSER.find_key(_email,) | SYSSUSER.find_tab(1,'WEBLOGIN',,':-',_email) & -SYSSUSER.WEBLOGIN=-_email
|| _guid:=SYSSUSER.GUID
?};
SYSSUSER.cntx_pop();
_ref:=null;
{? _guid<>''
|| USERS.cntx_psh();
   USERS.index('USR_GUID');
   USERS.prefix(_guid,);
   {? USERS.first()
   || _ref:=USERS.ref()
   ?};
   USERS.cntx_pop()
?};
_ref


\t_edokos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Triger po put tabeli EDOKOS
::   WE: _a - wynik operacji put
::----------------------------------------------------------------------------------------------------------------------
{? _a=1 & var_pres('ObeNoT')<=0
|| {? bfld('STATUS')<>EDOKOS.STATUS | bfld('WID')<>EDOKOS.WID
   || _wp:=EDOKUM.TYP().W_PORTAL;
      {? ('A'*EDOKOS.OPERACJA |
          'W'*EDOKOS.OPERACJA & (EDOKUM.PAPERLES | -_wp='s' | _wp='D' | _wp='N' & ETYPY.IN_POR) |
          'P'*EDOKOS.OPERACJA & (-_wp='s' | _wp='N' & ETYPY.IN_POR)
         ) & 'TN'*EDOKOS.WID
      || _ref:=EDOKUM.ref();
         _oper:=EDOKOS.OPERACJA;
         EDOKUM.cntx_psh();
         EDOKUM.use(ref_name(EDOKOS.EDOKUM));
         EDOKUM.prefix();
         {? EDOKUM.seek(EDOKOS.EDOKUM) & (_wp<>'N' | ETYPY.IN_POR)
         || _dalej:=0;
            _status:=EDOKOS.STATUS;
            {? EDOKOS.WID='N' || _status:='O' ?};
            {? EDOKUM.WYCOFAJ<>'' || _status:='x' ?};
            _txt:=EDOKOS.memo_txt(,1,'UW_DL');
            {? EDOKOS.UW_KR<>''
            || {? _txt<>''
               || _txt:='\n'+_txt
               ?};
               _txt:=EDOKOS.UW_KR+_txt
            ?};
            EDOKOS.cntx_psh();
            EDOKOS.index('PORTAL');
            EDOKOS.prefix(EDOKOS.EDOKUM,'S',EDOKOS.B_PREL,EDOKOS.USERS);
            {? EDOKOS.first()
            || _b_prel:=EDOKOS.B_PREL;
               {? EDOKOS.STATUS<>_status
               || EDOKOS.STATUS:=_status;
                  EDOKOS.B_PREL:={? _oper='A' || 'A' || 'R' ?}+$EDOKOS.OPER_NUM;
                  EDOKOS.prefix();
                  {? _txt<>''
                  || EDOKOS.memo_set(_txt,'UW_DL');
                     EDOKOS.memo_put(,'UW_DL')
                  ?};
                  EDOKOS.DATA:=date();
                  EDOKOS.TIME:=time();
                  EDOKOS.put()
               ?};
               _dalej:=1;
               EDOKOS.prefix(EDOKOS.EDOKUM,'S',_b_prel,);
               {? EDOKOS.first()
               || {!
                  |? EDOKOS.cntx_psh();
                     EDOKOS.prefix();
                     EDOKOS.B_PREL:='A'+$EDOKOS.OPER_NUM;
                     EDOKOS.STATUS:='x';
                     EDOKOS.DATA:=date();
                     EDOKOS.TIME:=time();
                     EDOKOS.put();
                     EDOKOS.cntx_pop();
                     EDOKOS.first()
                  !}
               ?}
            |? -_wp='s'
            || {? EDOKOS.OPERACJA='W' & EDOKOS.STATUS='O' | EDOKOS.OPERACJA='P'
               || _st:=EDOKOS.STATUS;
                  {? _st='O' || _st:='N' ?};
                  _b_p:=EDOKOS.B_PREL;
                  {? _st='T'
                  || _b_p:=~~
                  ?};
                  exec('EDOKOS_add','portal_wnioski',EDOKUM.ref(),EDOKUM.USERS,'Y',,'S',EDOKOS.B_PRELS,_st,_b_p)
               ?}
            ?};
            {? _dalej
            || _oper:={? _status='T' || 'Y' |? _status='E' || 'E' || 'D' ?};
               exec('EDOKOS_add','portal_wnioski',EDOKOS.EDOKUM,EDOKOS.USERS,_oper,_txt);
               EDOKUM.STATUS:=_oper;
               EDOKUM.put()
            ?};
            EDOKOS.cntx_pop()
         ?};
         EDOKUM.cntx_pop();
         {? _ref=EDOKOS.EDOKUM || EDOKUM.seek(_ref) ?}
      ?}
   ?}
?};
~~


\EDOKUM_att
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Dodaje załaczniki do wniosku
::   WE: _a - obiekt z komunikatem
::----------------------------------------------------------------------------------------------------------------------
_obj:=_a;
_obj_att:=exec('get_attachments','portal_engine',_obj);
_att:=_obj_att.ATT;
_sig:=_obj_att.ATT_SIGN;
{? _att.first()
|| _kod:=ref_name(EDOKUM.ref())+2;
   EDOKUMZ.cntx_psh();
   EDOKUMZ.use('skid_n'+_kod);
   EDOKUMZ.index('NAZWA');
   EDOKUMZ.prefix(EDOKUM.ref());
   EDOKUMZS.cntx_psh();
   EDOKUMZS.use('skids_'+_kod);
   EDOKUMZS.index('NAME');
   EDOKUMZS.prefix();
   {!
   |? _kind:={? var_pres('KIND',_att)>0 & _att.KIND<>'' || exec('slo_naz','ext_slo','ZAL',_att.KIND,1) || null ?};
      _naz:=_att.bl_info('BLOB','NAME');
      {? EDOKUMZ.find_key(_naz,)
      || _jest_hash:=var_pres('HASH',EDOKUMZ)>0;
         _hash:=exec('hash','#blob',_att.BLOB);
         {? (_jest_hash & _hash<>EDOKUMZ.HASH) | _kind<>EDOKUMZ.TYP_ZAL
         || EDOKUMZ.EDOKUM:=_att.BLOB;
            EDOKUMZ.TYP_ZAL:=_kind;
            {? _jest_hash || EDOKUMZ.HASH:=_hash ?};
            EDOKUMZ.put()
         ?};
         _ref:=EDOKUMZ.ref()
      || EDOKUMZ.cntx_psh();
         EDOKUMZ.prefix();
         EDOKUMZ.blank(1);
         EDOKUMZ.DOKUM:=EDOKUM.ref();
         EDOKUMZ.DATE:={? _att.DATE=date(0,0,0) || date() || _att.DATE ?};
         EDOKUMZ.TIME:={? _att.TIME=time(0,0,0) || time() || _att.TIME ?};
         EDOKUMZ.KR_OP:=_att.OPIS;
         EDOKUMZ.USER:=EDOKUM.USERS().KOD;
         EDOKUMZ.EDOKUM:=_att.BLOB;
         EDOKUMZ.NAZWA:=_naz;
         EDOKUMZ.TYP_ZAL:=_kind;
::       Załącznik z portalu. NIE zapamiętujemy skrótu (hash-a), aby odesłać go na portal wraz z __id_erp.
::         EDOKUMZ.HASH:='';
         EDOKUMZ.add();
         _ref:=EDOKUMZ.ref();
         EDOKUMZ.cntx_pop()
      ?};
      _sig.prefix(#_att.ref());
      {? _sig.first()
      || {!
         |? {? ~EDOKUMZS.find_key(_ref,_sig.NAME,)
            || EDOKUMZS.blank(1);
               EDOKUMZS.EDOKUMZ:=_ref;
               EDOKUMZS.NAME:=_sig.NAME;
               EDOKUMZS.USER:=exec('FindInSet','#table','USERS','WEBLOGIN',_sig.USER,,,1);
               {? EDOKUMZS.USER=null
               || _sql:=sql('select REFERENCE as REF from USERS where UPPER(WEBLOGIN)=\':_a\'',~-_sig.USER);
                  {? _sql.first()
                  || USERS.cntx_psh();
                     USERS.prefix();
                     {? USERS.seek(_sql.REF)
                     || EDOKUMZS.USER:=USERS.ref()
                     ?};
                     USERS.cntx_pop()
                  ?};
                  &_sql
               ?};
               EDOKUMZS.SIGNER:=_sig.SIGNER;
               EDOKUMZS.SIGNDATE:=_sig.SIGNDATE;
               EDOKUMZS.SIGNTIME:=_sig.SIGNTIME;
               EDOKUMZS.TYPE:=_sig.TYPE;
               EDOKUMZS.TYPEDESC:=exec('EDOKUMZS_type_desc','portal_paperless',EDOKUMZS.TYPE);
               EDOKUMZS.FINGER:=_sig.FINGER;
               EDOKUMZS.FROM_VD:=_sig.FROM_VD;
               EDOKUMZS.FROM_VT:=_sig.FROM_VT;
               EDOKUMZS.TO_VD:=_sig.TO_VD;
               EDOKUMZS.TO_VT:=_sig.TO_VT;
               {? (EDOKUMZS.FROM_VD=date(0,0,0) | EDOKUMZS.TO_VD=date(0,0,0)) & EDOKUMZS.FINGER<>''
               || USR_SIGN.cntx_psh();
                  USR_SIGN.index('FINGER2'); USR_SIGN.prefix(EDOKUMZS.FINGER,);
                  {? USR_SIGN.first()
                  || EDOKUMZS.FROM_VD:=USR_SIGN.DATE_B;
                     EDOKUMZS.TO_VD:=USR_SIGN.DATE_E
                  ?};
                  USR_SIGN.cntx_pop()
               ?};
               EDOKUMZS.AKC:=_sig.AKC;
               {? EDOKUMZS.add()
               || _str:=_sig.memo_txt(,1,'ISSUER');
                  {? _str<>''
                  || EDOKUMZS.memo_set(_str,'ISSUER');
                     EDOKUMZS.memo_put(,'ISSUER')
                  ?};
                  _str:=_sig.memo_txt(,1,'DECLAR');
                  {? _str<>''
                  || EDOKUMZS.memo_set(_str,'DECLAR');
                     EDOKUMZS.memo_put(,'DECLAR')
                  ?};
                  EDOKUMZS.put()
               ?}
            ?};
            _sig.next()
         !}
      ?};
      _att.next()
   !};
   EDOKUMZS.cntx_pop();
   EDOKUMZ.cntx_pop()
?}


\obj_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Obiekt do obsługi parametru 390
::   WE: [_a] - wartość parametru
::   WY: obiekt
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new(
   'A','O','Z','PA','PO','PZ',
   'get','value'
);
_obj.get:="
   .A:={? 'NTW'*.A || .A || 'N' ?};
   .O:={? 'NTW'*.O || .O || 'N' ?};
   .Z:={? 'NTW'*.Z || .Z || 'N' ?};
   .A+.O+.Z
";
_obj.value:="
   {? _a='N' || 1
   |? _a='T' || 2
   |? _a='W' || 3
   || 0
   ?}
";
_wart:={? var_pres('_a')>0 || ~-_a || ~-PAR_SKID.get(390) ?};
_obj.A:=(1+_wart);
_obj.PA:=_obj.value(_obj.A);
_obj.O:=(2+_wart+1);
_obj.PO:=_obj.value(_obj.O);
_obj.Z:=(_wart+1);
_obj.PZ:=_obj.value(_obj.Z);
_obj


\f3_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: F3 dla parametru 390 - Komentarz w akceptacji, odrzuceniu i wycofaniu
::----------------------------------------------------------------------------------------------------------------------
_wart:=~-PARAMETR.TRESC;
_obj:=exec('obj_par','portal_wnioski',_wart);
_tab:=tab_tmp(1,
   'A','STRING[1]','Akceptacja',
   'O','STRING[1]','Odrzucenie',
   'Z','STRING[1]','Zamknięcie'
);
_tab.blank(1);
_tab.A:=_obj.A;
_tab.O:=_obj.O;
_tab.Z:=_obj.Z;
_tab.add();
_win:=_tab.mk_edit('Komentarz',,'par390');
_tab.win_esep(_win,'Akceptacja'@);
_tab.win_efld(_win,,'A',,,,,,'Komentarz',,,'radio-buttons',,'Brak',"'N'",'Z komentarzem',"'T'",'Z wymaganym komentarzem',"'W'");
_tab.win_esep(_win,'Odrzucenie'@);
_tab.win_efld(_win,,'O',,,,,,'Komentarz',,,'radio-buttons',,'Brak',"'N'",'Z komentarzem',"'T'",'Z wymaganym komentarzem',"'W'");
_tab.win_esep(_win,'Zamknięcie'@);
_tab.win_efld(_win,,'Z',,,,,,'Komentarz',,,'radio-buttons',,'Brak',"'N'",'Z komentarzem',"'T'",'Z wymaganym komentarzem',"'W'");
exec('ok_esc','#window',_tab,_win);
_tab.win_edit(_win);
{? _tab.edit()
|| _obj.A:=_tab.A;
   _obj.O:=_tab.O;
   _obj.Z:=_tab.Z;
   _wart:=_obj.get()
?};
_wart


\ae_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Po redakci parametru 390 - Komentarz w akceptacji, odrzuceniu i wycofaniu
::----------------------------------------------------------------------------------------------------------------------
_wart:=~-(3+PARAMETR.TRESC);
_obj:=exec('obj_par','portal_wnioski',_wart);
PARAMETR.TRESC:=_obj.get();
1


\process_params
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [20.42]
:: OPIS: Blokuje lub kontynuuje przetwarzanie schematu informacji dodatkowych.
::   WE:
::   WY: 1 - pozwala na przetwarzanie podanego atrybutu, 0 - blokuje przetwarzanie atrybutu
::----------------------------------------------------------------------------------------------------------------------
_atr:={? var_pres('_a')=type_of(null) & #_a || _a || return(0) ?};
_result:=0;
ETYP_ATR.cntx_psh();
ETYPY.cntx_psh();
{? ETYP_ATR.seek(_atr,,1)
|| _id:=ETYP_ATR.ETYPY().ID_WP;
   _kol:=ETYP_ATR.KOL;
   _result:=
      ~(
           (_id=exec('_duplikat','portal_walidacja').id            & _kol>1)
         | (_id=exec('_erp7','portal_walidacja').id                & _kol>1)
         | (_id=exec('_ppk_wodw','portal_walidacja').id            & _kol>2)
         | (_id=exec('_ppk_drwd','portal_walidacja').id            & _kol>2)
         | (_id=exec('_edp','portal_walidacja').id                 & _kol>1)
         | (_id=exec('_ppk_wou','portal_walidacja').id             & _kol>2)
         | (_id=exec('_wn_zzal','portal_walidacja').id             & _kol>2)
         | (_id=exec('_rekrutacja','portal_walidacja').id          & _kol>2)
         | (_id=exec('_rachunek','portal_walidacja').id            & _kol>2)
         | (_id=exec('_zmiana_us','portal_walidacja').id           & _kol>2)
         | (_id=exec('_zmiana_wdo','portal_walidacja').id          & _kol>1)
         | (_id=exec('_ppk_dowu25','portal_walidacja').id          & _kol>2)
         | (_id=exec('_zmiana_pesel','portal_walidacja').id        & _kol>1)
         | (_id=exec('_zmiana_nip','portal_walidacja').id          & _kol>2)
         | (_id=exec('_zmiana_obywatelstwa','portal_walidacja').id & _kol>2)
         | (_id=exec('_czw','portal_walidacja').id                 & _kol>2)
         | (_id=exec('_njo','portal_walidacja').id                 & _kol>1)
         | (_id=exec('_dofs','portal_walidacja').id                & _kol>1)
         | (_id=exec('_opiekun','portal_walidacja').id             & _kol>2)
         | (_id=exec('_zod','portal_walidacja').id                 & _kol>1)
         | (_id=exec('_zoc','portal_walidacja').id                 & _kol>1)
         | (_id=exec('_wydanie_zasw','portal_walidacja').id        & _kol>2)
         | (_id=exec('_zlozenie_dok','portal_walidacja').id        & _kol>1)
         | (_id=exec('_pzd_osw','portal_walidacja').id             &  ',3,5,'*',%1,'[$_kol]=0)
   )
?};
ETYPY.cntx_pop();
ETYP_ATR.cntx_pop();
_result


\obe_faw_darp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.42]
:: OPIS: Formuła na opis czynności na liście ToDo dla wniosku HR Portal.
::       Czynności OBE_FAW_DARP - Rejestracja wniosku w obiegu.
::       Ustawiony jest kontekst tabeli EDOKUM
::   WE:
::----------------------------------------------------------------------------------------------------------------------
_nazwa:=EDOKUM.TYP().NAZWA;
_rodzaj:=EDOKUM.TYP().RODZ_WP;

{? _rodzaj=1 | _rodzaj=2
:: wnioski pracownika i managera
|| 'Zakończ rejestrację %1'@@[exec('opis','portal_wnioski')]
|| 'Zakończ rejestrację %1: %2 data operacji %3'@@[(-_nazwa),EDOKUM.ID,$EDOKUM.DOP]
?}


\obe_faw_eakp_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: JK [20.42]
:: OPIS: Formuła na opis czynności na liście ToDo dla wniosku HR Portal.
::       Czynności OBE_FAW_EAKP - Akceptacja wniosku w obiegu.
::       Ustawiony jest kontekst tabeli EDOKUM
::   WE:
::----------------------------------------------------------------------------------------------------------------------
_nazwa:=EDOKUM.TYP().NAZWA;
_rodzaj:=EDOKUM.TYP().RODZ_WP;
_wportal:=EDOKUM.TYP().W_PORTAL;
_idwp:=EDOKUM.TYP().ID_WP;

{? _rodzaj=1 | _rodzaj=2 | _rodzaj=7
:: wnioski pracownika i managera (Portal HR oraz Paperless HR)
|| 'Zaakceptuj %1'@@[exec('opis','portal_wnioski')]
|? _wportal='X' & _idwp='WniosekUrlopowy'
|| _ret:='Zweryfikuj wniosek o urlop %1, data operacji %2'@@ [EDOKUM.ID,$EDOKUM.DOP];
   _nwu:=exec('edokum2nwu','portal_nieobecnosci',EDOKUM.ref());
   {? type_of(_nwu)=type_of(null()) & _nwu<>null()
   || NWU.cntx_psh();
      NWU.prefix();
      {? NWU.seek(_nwu)
      || P.cntx_psh();
         P.prefix();
         NWU.P();
         OSOBA.cntx_psh();
         OSOBA.prefix();
         P.OSOBA();
         UD_SKL.cntx_psh();
         UD_SKL.prefix();
         P.WYDZIAL();
         STN.cntx_psh();
         STN.prefix();
         P.ST();
         R.cntx_psh();
         R.prefix();
         NWU.R();
         _ret:='Zweryfikuj wniosek o urlop: '
            '%1 %2, Numer teczki - %3, Jednostka - %4, Stanowisko - %5 | %6 - %7 (%8 - %9)'@@
            [OSOBA.NAZWISKO,OSOBA.PIERWSZE,P.T,UD_SKL.SYMBOL,STN.ST,NWU.OD$1,NWU.DO$1,$R.RN,R.RT];
         R.cntx_pop();
         STN.cntx_pop();
         UD_SKL.cntx_pop();
         OSOBA.cntx_pop();
         P.cntx_pop()
      ?};
      NWU.cntx_pop()
   ?};
   _ret
|| 'Zaakceptuj %1: %2, data operacji %3'@@[(-_nazwa),EDOKUM.ID,$EDOKUM.DOP]
?}


\opis
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [20.42]
:: OPIS: Obiekt pomocniczy do obsługi formuł na opis czynności dla wniosków HR Portal
::       Ustawiony jest kontekst tabeli EDOKUM
::   WE: _a [STRING] - nazwa wniosku
::   WY: częściowy opis dla wniosku
::----------------------------------------------------------------------------------------------------------------------
_nazwa:=EDOKUM.TYP().NAZWA;
_opis:=_prac:=_wydz:=_nr_t:='';

{? exec('open_edk_atr', 'obiegi', EDOKUM.ref())
|| _p_uidref:=exec('atr_get','portal_walidacja','PracownikIdERP');
   {? +form(_p_uidref)=0 || _p_uidref:=EDOKUM.OSOBAWWW ?};
   P.cntx_psh();
   P.prefix();
   {? _nazwa=exec('_woz','portal_walidacja').name
   || _prac:='%1 %2'[exec('atr_get','portal_walidacja','Nazwisko'), exec('atr_get','portal_walidacja','Imie')];
      _wydz:=exec('atr_get','portal_walidacja','DzialNazwa');
      _stn:=exec('atr_get','portal_walidacja','StanowiskoNazwa');
      _opis:='%1: %2 - %3, %4 - %5 data operacji %6'[(-_nazwa),_prac,_stn,_wydz,EDOKUM.ID,$EDOKUM.DOP]
   |? P.seek(_p_uidref)
   || _prac:='%1 %2'[P.OSOBA().NAZWISKO, OSOBA.PIERWSZE];
      _wydz:=P.WYDZIAL().SYMBOL;
      _nr_t:=form(P.T);
      _opis:='%1: %2 (%3) - %4, %5 data operacji %6'[(-_nazwa),_prac,_nr_t,_wydz,EDOKUM.ID,$EDOKUM.DOP]
   ?};
   P.cntx_pop()
?};
::{? _nazwa=exec('nazwa_pruo_abs','obiegi')
::|| _obj.nazwa:=exec('atr_get_abs','form_ob','DecyzjaPersonalna')
::?};
_opis


\EDOKUM_details
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Informacje szczegółowe dotyczące wniosków
::----------------------------------------------------------------------------------------------------------------------
_caption:=_a;
_value:=_b;
_obj:=obj_new(3);
{! _ii:=1..obj_len(_obj)
|! _obj[_ii]:=obj_new('C','V')
!};
_lp:=1;
{? EDOKUM.PAPERLES
|| {? +EDOKUM.REFPRAC=16 & ref_num(EDOKUM.REFPRAC) & ref_tab(EDOKUM.REFPRAC)=P
   || _obj[2].C:='Dotyczy pracownika';
      _obj[2].V:=exec('FindAndGet','#table',P,EDOKUM.REFPRAC,,"OSOBA().NAZWISKO+' '+OSOBA().PIERWSZE",'');
      _obj[3].C:='Stanowisko i wydział';
      _obj[3].V:=exec('FindAndGet','#table',P,EDOKUM.REFPRAC,,"ST().ST+' ('+WYDZIAL().SYMBOL+')'",'')
   ?}
|? EDOKUM.TYP().W_PORTAL<>'N'
|| ETYP_ATR.cntx_psh();
   ETYP_ATR.index('KOLZ'); ETYP_ATR.prefix(EDOKUM.TYP,null);
   EDOK_ATR.cntx_psh();
   EDOK_ATR.use('edokat'+(ref_name(EDOKUM.ref())+2));
   EDOK_ATR.index('REKKOLED'); EDOK_ATR.prefix(EDOKUM.ref(),null,'',);
   {? EDOK_ATR.first()
   || {!
      |? {? ETYP_ATR.find_key(EDOK_ATR.KOL) & exec('process_params','portal_wnioski',ETYP_ATR.ref())
         || _obj[_lp].C:=ETYP_ATR.TAT().OPIS;
            _obj[_lp].V:=EDOK_ATR.WAR;
            _lp+=1
         ?};
         _lp<=obj_len(_obj) & EDOK_ATR.next()
      !}
   ?};
   EDOK_ATR.cntx_pop();
   ETYP_ATR.cntx_pop()
|? ETYPY.IN_POR
|| _obj[2].C:='Id';
   _obj[2].V:=EDOKUM.ID;
   _obj[3].C:='Opis';
   _obj[3].V:=exec('EDOKUM_opis','portal_interm')
?};

_caption[1][1]:=_obj[1].C;
_value[1][1]:=_obj[1].V;
_caption[1][2]:=_obj[2].C;
_value[1][2]:=_obj[2].V;
_caption[2][1]:=_obj[3].C;
_value[2][1]:=_obj[3].V;
_caption[2][2]:='Data wprowadzenia';
_value[2][2]:=gsub(form(EDOKUM.DATAW,,1),'/','-');
~~


\edokos2tmp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [20.42]
:: OPIS: Zapisuje EDOKOS do tabeli tymczasowej TmpToDo
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('TmpToDo')>0
|| TmpToDo.blank(1);
   TmpToDo.B_PREL:=EDOKOS.B_PREL;
   TmpToDo.USERS:=EDOKOS.USERS;
   TmpToDo.DATE:=EDOKOS.DATA;
   TmpToDo.TIME:=EDOKOS.TIME;
   TmpToDo.add()
?};
~~


\back_to
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [22.26]
:: OPIS: Formuła używana na bramkach (el. procesu) - sprawdza, czy wycofać do danego etapu obiegu dla danej roli.
::       Należy wywołać dla bramek, sprawdzających czy wniosek został wycofany.
::       Bramka taka obowiązkowo musi przyjmować jako parametr wejściowy parametr typu _EDOKUM.
::       Miejsce na liście parametrów nie ma znaczenia (pXX) - formuła sama znajdzie parametr typu _EDOKUM jeśli został
::       dowiązany do bramy jako parametr wejściowy.
::   WE: _a [STRING] - nazwa czynności w procesie, dla której sprawdzane jest czy należy wycofać
::       _b [STRING] - nazwa roli w procesie, dla której sprawdzane jest czy należy wycofać
::   WY: Wycofanie do bieżącego etapu - 1, wpp. 0
::----------------------------------------------------------------------------------------------------------------------
_result:=0;

_mp:=params_get().mp;
_params:=_mp.load(exec('kind_in','#b_port'));
_b_prel:=_mp.b_prel;

_edokum:=null;
_search:=obj_new('continue','index','finalIndex');
_search.continue:=1;
_search.index:=1;
_search.finalIndex:=obj_len(_params);
{!
|? _search.continue
|! {? var_pres('[%1]'[$_search.index],_params)=type_of(null) & ref_tab(_params[_search.index])=EDOKUM
   || _edokum:=_params[_search.index];
      _search.continue*=0
   ?};
   _search.index+=1;
   _search.continue*=(_search.index<=_search.finalIndex)
!};

{? _edokum=null || return(_result) ?};

_action:={? var_pres('_a')=type_of('') & _a<>'' || _a || return(_result) ?};
_role:={? var_pres('_b')=type_of('') & _b<>'' || _b || return(_result) ?};

EDOKUM.cntx_psh();
EDOKUM.use(ref_name(_edokum));
EDOKUM.prefix();
{? EDOKUM.seek(_edokum,,1)
|| B_PREL.cntx_psh();
   B_PREL.prefix();
   {? B_PREL.seek(_b_prel,,1)
   ||
::    Sprawdzenie czy zgadza się nazwa roli, do której wycofanie
      B_ROLE.cntx_psh();
      B_ROLE.prefix();
      _result+=(B_PREL.B_ROLE().NAME=_role);
      B_ROLE.cntx_pop();
::    Sprawdzenie czy zgadza się nazwa czynności, do której wycofanie
      _result*=(EDOKUM.WYCOF_DO=_action)
   ?};
   B_PREL.cntx_pop()
?};
EDOKUM.cntx_pop();

_result


\types
::----------------------------------------------------------------------------------------------------------------------
::  UTW: achol [22.26]
:: OPIS: Formuła zwraca obiekt z dostępnymi znacznikami określającymi typ portalowy dla wniosków.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_types:=obj_new(
:: Znacznik określający wniosek typu "regularnego" z Portal HR
   'portal',
:: Znacznik określający wniosek typu "nieobecność" z Portal HR
   'absence',
:: Znacznik określający wniosek typu "paperless" z Portal HR
   'paperless',
:: Znacznik określający wniosek typu "SEOD" z Portal HR
   'seod'
);

_types.portal:='T';
_types.absence:='X';
_types.paperless:='P';
_types.seod:='S';

_types


\check_upr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [21.37]
:: OPIS: Zwraca informację, czy we wskazanym procesie, roli i czynności mają być sprawdzane uprawnienia do danych
::   WE: _a [STRING] - symbol procesu
::       _b [STRING] - nazwa roli
::       _c [STRING] - symbol czynności w procesie
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_proc_symbol:={? var_pres('_a')=type_of('') || _a || return(_result) ?};
_role_symbol:={? var_pres('_b')=type_of('') || _b || return(_result) ?};
 _act_symbol:={? var_pres('_c')=type_of('') || _c || return(_result) ?};

:: - - - - poniżej przykładowa implementacja formuły na wtyczkę - - - -

:: sprawdzamy uprawnienia do danych tylko dla czynności akceptacji w roli 'Specjalista ds. kadr' w poniższych procesach
_akc_kadrowa:=_role_symbol='Specjalista ds. kadr' & _act_symbol='OBE_FAW_EAKP';

_lista_procesow:=',PER_WZ1_WWW,PER_WZ2_WWW,PER_WAD_WWW,PER_WOG_WWW,PER_WRH_WWW,PER_WZ1_WWW,PER_WZ2_WWW,';
_result:=_akc_kadrowa & (_lista_procesow*',%1,'[_proc_symbol]);
_result


\EDOKUM_proc_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Czy manager procesów nie nappotkał problemów z proces związany z dokumentem
::   WE: [_a] - uidref EDOKUM, domyślnie EDOKUM.uidref()
::----------------------------------------------------------------------------------------------------------------------
_info:='';
EDOKUM.cntx_psh();
_uidref:={? var_pres('_a')=type_of('') & +_a=48 || _a || EDOKUM.uidref() ?};
EDOKUM.cntx_pop();

B_KEYREF.cntx_psh();
B_KEYREF.index('KEYREF'); B_KEYREF.prefix(_uidref);
{? B_KEYREF.first()
|| BI_PROC.cntx_psh();
   BI_PROC.use(ref_name(B_KEYREF.BI_PROC));
   BI_PROC.prefix();
   {? BI_PROC.seek(B_KEYREF.BI_PROC) & BI_PROC.BI_STAT=exec('ZAWIESZONY','#bi_stat')
   || _info:='Proces: %1 (%2) został zawieszony.'[BI_PROC.B_PROC().SYMBOL,B_PROC.VER];
      BI_MSG.cntx_psh();
      {? BI_MSG.name()='' || BI_MSG.use('bi_m____') ?};
      BI_MSG.index('BI_PROC');
      BI_MSG.prefix(BI_PROC.ref(),'T');
      {? BI_MSG.last()
      || _info+='\n'+BI_MSG.memo_txt(,1,'TR_ERR')
      ?};
      BI_MSG.cntx_pop();
      _info+='\nSkontaktuj się z administratorem.'
   ?};
   BI_PROC.cntx_pop()
?};
B_KEYREF.cntx_pop();
_info


\EDOKUM_proc_stop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Obsługa zatrzymanego procesu
::   WE: _a - uidref EDOKUM
::       _b - typ operacji
::----------------------------------------------------------------------------------------------------------------------
_ref:=_a;
_info:=exec('EDOKUM_proc_ok','portal_wnioski',_ref);
{? _info<>''
|| EDOKUM.cntx_psh();
   EDOKUM.use(ref_name(_ref));
   EDOKUM.prefix();
   {? EDOKUM.seek(_ref)
   || exec('EDOKOS_add','portal_wnioski',EDOKUM.ref(),null,'Y',
         _info,'S',
         exec('proc_stop_bprels','portal_wnioski'),'O'
      );
::    exec('EDOKOS_add','portal_wnioski',EDOKUM.ref(),EDOKUM.USERS,'Y',,'S','Rejestracja wniosku','N',EDOKUM.B_PREL);
      EDOKUM.STATUS:='S';
      EDOKUM.put()
   ?};
   EDOKUM.cntx_pop();
   {? var_pres('KOMM')>0
   || KOMM.error(_info,0)
   ?}
?}


\proc_stop_bprels
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [22.26]
:: OPIS: Nazwa etapu gdy proces jest zawieszony
::----------------------------------------------------------------------------------------------------------------------
'Zawieszony proces'


\EDOKUM_ok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [12.51]
:: OPIS: Czy odpisywać EDOKUM do przetworzenia i wysłania na portal HR
::   WE: _a [STRING]    - akcja put/del
::       _b [STRING]    - symbol firmy
::       _c [REFERENCE] - wskazanie na firmę
::----------------------------------------------------------------------------------------------------------------------
_akc:={? var_pres('_a')=type_of('') || _a || '' ?};
{? _akc='del' || return(1) ?};

_tak:=REF.FIRMA=EDOKUM.FIRMA;
{? _tak
|| ETYPY.cntx_psh();
   _tak:=EDOKUM.TYP().W_PORTAL<>'N' | ETYPY.IN_POR;
   ETYPY.cntx_pop()
?};
_tak


\B_PROC_chg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [23.25]
:: OPIS: Zmiana w procesie wymagająca zmiany w typie wniosku
::----------------------------------------------------------------------------------------------------------------------
ETYPPROC.cntx_psh();
ETYPPROC.index('PROC');
ETYPPROC.prefix(B_PROC.SYMBOL,B_PROC.VER,);
{? ETYPPROC.first()
|| ETYPY.cntx_psh();
   ETYPY.prefix();
   {!
   |? {? ETYPY.seek(ETYPPROC.ETYPY)
      || ETYPY.put(,1)
      ?};
      ETYPPROC.next()
   !};
   ETYPY.cntx_pop()
?};
ETYPPROC.cntx_pop()


\obj_super_user
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [23.25]
:: OPIS: Zwraca obiekt do obsługi super użytkowników przeglądających wnioski,delegacj i faktury
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('objSUSR')<=0
|| _obj:=obj_new(
      'EMAIL',
      'prefix','first','next','erase'
   );
   _obj.prefix:="
      _tab:=.TAB;
      _tab.prefix();
      {? ~_tab.find_key(0)
      || .create()
      ?};
      _typ:=EDOKUM.TYPOBIEG().NAZWA;
      _nr:={? _typ*'faktur' || 1 |? _typ*'wniosków' || 2 || 3 ?};
      _tab.prefix(_nr);
      ~~
   ";
   _obj.first:="
      _tab:=.TAB;
      {? _tab.first()
      || .EMAIL:=_tab.EMAIL;
         1
      ?}
   ";
   _obj.next:="
      _tab:=.TAB;
      {? _tab.next()
      || .EMAIL:=_tab.EMAIL;
         1
      ?}
   ";
   _obj.erase:="
      _tab:=.TAB;
      _tab.erase()
   ";
   objSUSR:=_obj
?};
objSUSR


\upd_super_user
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [23.25]
:: OPIS: Aktualizacja danych o super użytkownikach portalu ABS
::   WE: _a - akronim zmienianej tabeli
::       _b - 1-dodawanie 0-usuwanie
::----------------------------------------------------------------------------------------------------------------------
_tab:=_a;
_add:=_b;
_data:=obj_new(3);
_data[1]:='OBG_FZO_SUSR';
_data[2]:='OBE_FAW_SUSR';
_data[3]:='OBE_FDL_SUSR';
_zmiany:=obj_new(3);
{! _ii:=1..obj_len(_zmiany) |! _zmiany[_ii]:=0 !};
_firma:=null;
{? _tab='B_USRROL'
|| {? _add
   || _firma:=B_USRROL.FIRMA;
      B_ACTROL.cntx_psh();
      B_ACTROL.index('MICRO');
      B_ACTROL.prefix(_firma,B_USRROL.B_ROLE);
      {! _ii:=1..obj_len(_data)
      |! {? B_ACTROL.find_key(_data[_ii],)
         || PORTALSU.cntx_psh();
            PORTALSU.index('TYP'); PORTALSU.prefix();
            {? ~PORTALSU.find_key(_firma,_ii,B_USRROL.USERS)
            || PORTALSU.blank(1);
               PORTALSU.FIRMA:=_firma;
               PORTALSU.TYP:=_ii;
               PORTALSU.USERS:=B_USRROL.USERS;
               PORTALSU.add();
               _zmiany[_ii]:=1
            ?};
            PORTALSU.cntx_pop()
         ?}
      !};
      B_ACTROL.cntx_pop()
   || _firma:=bfld('FIRMA');
      _brole:=bfld('B_ROLE');
      _user:=bfld('USERS');
      B_ACTROL.cntx_psh();
      B_ACTROL.index('MICRO');
      B_ACTROL.prefix(_firma,_brole);
      {! _ii:=1..obj_len(_data)
      |! {? B_ACTROL.find_key(_data[_ii],)
         || PORTALSU.cntx_psh();
            PORTALSU.index('TYP'); PORTALSU.prefix();
            {? PORTALSU.find_key(_firma,_ii,_user)
            || _jest:=0;
               _act:=exec('FindInSet','#table','B_ACTION','UNIK',_data[_ii],,,1,,null);
               {? _act
               || B_ACTROL.cntx_psh();
                  B_ACTROL.index('DISP2');
                  B_ACTROL.prefix(_firma,_act);
                  {? B_ACTROL.first()
                  || {!
                     |? B_USRROL.cntx_psh();
                        B_USRROL.index('UNIK'); B_USRROL.prefix(_firma,B_ACTROL.B_ROLE,_user);
                        _jest:=B_USRROL.first();
                        B_USRROL.cntx_pop();
                        _jest=0 & B_ACTROL.next()
                     !}
                  ?};
                  B_ACTROL.cntx_pop()
               ?};
               {? _jest=0
               || PORTALSU.del();
                  _zmiany[_ii]:=1
               ?}
            ?};
            PORTALSU.cntx_pop()
         ?}
      !};
      B_ACTROL.cntx_pop()
   ?}
|? _tab='B_ACTROL'
|| {? _add
   || _firma:=B_ACTROL.FIRMA;
      {! _ii:=1..obj_len(_data)
      |! {? B_ACTROL.B_ACTION().UID=_data[_ii]
         || B_USRROL.cntx_psh();
            B_USRROL.index('UNIK'); B_USRROL.prefix(_firma,B_ACTROL.B_ROLE);
            {? B_USRROL.first()
            || PORTALSU.cntx_psh();
               PORTALSU.index('TYP'); PORTALSU.prefix();
               {!
               |? {? ~PORTALSU.find_key(_firma,_ii,B_USRROL.USERS)
                  || PORTALSU.blank(1);
                     PORTALSU.FIRMA:=_firma;
                     PORTALSU.TYP:=_ii;
                     PORTALSU.USERS:=B_USRROL.USERS;
                     PORTALSU.add();
                     _zmiany[_ii]:=1
                  ?};
                  B_USRROL.next()
               !};
               PORTALSU.cntx_pop()
            ?};
            B_USRROL.cntx_pop()
         ?}
      !}
   || _firma:=bfld('FIRMA');
      _b_role:=bfld('B_ROLE');
      _b_action:=bfld('B_ACTION');
      {! _ii:=1..obj_len(_data)
      |! _act:=exec('FindInSet','#table','B_ACTION','UNIK',_data[_ii],,,1,,null);
         {? _b_action=_act
         || B_USRROL.cntx_psh();
            B_USRROL.index('UNIK'); B_USRROL.prefix(_firma,_b_role);
            {? B_USRROL.first()
            || PORTALSU.cntx_psh();
               PORTALSU.index('TYP'); PORTALSU.prefix();
               {!
               |? {? PORTALSU.find_key(_firma,_ii,B_USRROL.USERS)
                  || _jest:=0;
                     _user:=B_USRROL.USERS;
                     B_ACTROL.cntx_psh();
                     B_ACTROL.index('DISP2'); B_ACTROL.prefix(_firma,_act);
                     {? B_ACTROL.first()
                     || B_USRROL.cntx_psh();
                        {!
                        |? B_USRROL.index('UNIK'); B_USRROL.prefix();
                           _jest:=B_USRROL.find_key(_firma,B_ACTROL.B_ROLE,_user);
                           _jest=0 & B_ACTROL.next()
                        !};
                        B_USRROL.cntx_pop()
                     ?};
                     B_ACTROL.cntx_pop();
                     {? _jest=0
                     || PORTALSU.del();
                        _zmiany[_ii]:=1
                     ?}
                  ?};
                  B_USRROL.next()
               !};
               PORTALSU.cntx_pop()
            ?};
            B_USRROL.cntx_pop()
         ?}
      !}
   ?}
?};
{? _firma & (_zmiany[1] | _zmiany[2] | _zmiany[3])
|| PORTALSU.cntx_psh();
   PORTALSU.index('TYP'); PORTALSU.prefix();
   {! _ii:=1..obj_len(_zmiany)
   |! {? _zmiany[_ii]
      || {? ~PORTALSU.find_key(_firma,_ii+3)
         || PORTALSU.blank(1);
            PORTALSU.FIRMA:=_firma;
            PORTALSU.TYP:=_ii+3;
            PORTALSU.USERS:=null;
            PORTALSU.add()
         ?}
      ?}
   !};
   PORTALSU.cntx_pop()
?};
~~


\proc_super_user
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [23.25]
:: OPIS: Przygotowanie dokumentów do wysłania na portal po zmianie super użytkowników
::   WE: [_a] - czy obsługa komunikatów? 1-tak, [0]-nie
::----------------------------------------------------------------------------------------------------------------------
_kom:={? var_pres('_a')=type_of(1) || _a ?};
_str_sql:='';
_mf:='';
PORTALSU.cntx_psh();
PORTALSU.index('TYP');
PORTALSU.prefix(REF.FIRMA);
{! _ii:=1..3
|! {? PORTALSU.find_key(_ii+3)
   || {? _mf=''
      || ROK_F.cntx_psh();
         ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
         {? ROK_F.last()
         || _mf+='/*+MASK_FILTER(EDOKUM';
            _mf+=',skid_v'+(($(ROK_F.POCZ_ROK~1))+2);
            {? ROK_F.prev()
            || _mf+=',skid_v'+(($(ROK_F.POCZ_ROK~1))+2)
            ?};
            _mf+=')*/'
         ?};
         ROK_F.cntx_pop()
      ?};
      {? _str_sql<>'' || _str_sql+=' union all ' ?};
      _str_sql+='
         select '+_mf+' EDOKUM.REFERENCE as REF
         from @EDOKUM join ETYPY
      ';
      {? _ii=1
      || _str_sql+='where ETYPY.W_PORTAL=\'S\''
      |? _ii=2
      || _str_sql+='where (ETYPY.W_PORTAL=\'T\' or ETYPY.W_PORTAL=\'P\' or ETYPY.W_PORTAL=\'X\' or ETYPY.W_PORTAL=\'s\')'
      || _str_sql+='where ETYPY.W_PORTAL=\'D\''
      ?};
      _str_sql+=' and (EDOKUM.STATUS=\'s\' or EDOKUM.STATUS=\'S\')';
      PORTALSU.del()
   ?}
!};
PORTALSU.cntx_pop();
{? _str_sql<>''
|| _sql:=sql(_str_sql);
   {? _sql.first()
   || {? _kom
      || KOMM.sect_beg('Uaktualnienie ścieżki akceptacji na potrzeby przeglądania w centrum akceptacji')
      ?};
      {!
      |? EDOKUM.use(8+_sql.REF);
         EDOKUM.prefix();
         {? EDOKUM.seek(_sql.REF)
         || EDOKUM.put(,1);
            {? _kom
            || KOMM.add('Przetworzono %1'[exec('record','#to_string',EDOKUM.ref())])
            ?}
         ?};
         _sql.next()
      !};
      {? _kom
      || KOMM.sect_end()
      ?}
   ?}
?}


\obj_akc_json_usr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [23.25]
:: OPIS: Obiekt do kontroli powielenia użytkowników na ścieżce akceptacji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('ObjAkcJUsr')<=0
|| _obj:=obj_new(
      'TAB',
      'clear','exists'
   );
   _obj.TAB:=tab_tmp(1,
      'USER','INTEGER','REF'
   );
   _obj.clear:="
      _tab:=.TAB;
      _tab.erase()
   ";
   _obj.exists:="
      _tab:=.TAB;
      _user:=_a;
      {? ~_tab.find_key(_user)
      || _tab.blank(1);
         _tab.USER:=_user;
         _tab.add();
         0
      || 1
      ?}
   ";
   ObjAkcJUsr:=_obj
?};
ObjAkcJUsr.clear();
ObjAkcJUsr

:Sign Version 2.0 jowisz:1045 2023/12/08 07:41:16 b32f7280adc6e6be9eb5b1b341115e91bcec4d37783eed564a7ce195384e355eb0be0c61033c5e8a3c9f9d405d119f4688972cca2df7c076166121d29c26bb9b28ce973515363c54512fb202a340edb4c4eb6a4c286c58801e8f8aa61b330d6b1772de3968f9716f6e8854157b5ea3746438273d47098a9117b7c8c304ee2c17
