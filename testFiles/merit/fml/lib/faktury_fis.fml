:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: faktury_fis.fml
:: Utworzony: 25.07.2016
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Drukarka fiskalna
::======================================================================================================================


\gen_parg
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: drukuje paragon dla biezacego naglowka faktury
::   WY: 1 - odpowiedz drukarki fiskalnej wydrukowano paragon
::       0 - wydruk niemozliwy lub blad drukarki
::      -1 rezygnacja z wydruku (uruchamia rep_exec() dla dokumentu)
::  OLD: \gen_parg/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? FAKS.T().DRPAR='T'
|| {? FAKS.STAT_REJ='A'
   || FUN.info('Wydruk paragonu na drukarce fiskalnej nie jest możliwy dla anulowanego dokumentu.'@);
      _wyn:=-1
   |? FAKS.STAT_REJ<>'T'
   || FUN.info('Wydruk paragonu na drukarce fiskalnej możliwy po akceptacji dokumentu.'@);
      _wyn:=-1
   || {? FAKS.PAR<>''
      || FUN.info('Paragon fiskalny był już drukowany.\nNumer paragonu: %1.'@[FAKS.PAR]);
         {? FAKS.T().PAR='N' || _wyn:=-1 ?}
      || {? {? FAKS.D=date()
            || {? OZ.ASKDRPAR='T' || FUN.ask('Czy wydrukować dokument na drukarce fiskalnej?'@) || 1 ?}
            || FUN.ask('Niezgodność daty sprzedaży na Paragonie: %1\n'
                  'i daty obecnej (daty systemowej): %2\n\n'
                  'Czy wydrukować dokument na drukarce fiskalnej?'@[form(FAKS.D),form(date())])
            ?}
         || {? exec('set_prt','fis')
            || _fmoz:=exec('fis_begin','faktury_fis');
               _wyn:=_fmoz[1] & exec('drukuj','faktury_fis');
               exec('fis_end','faktury_fis',_fmoz)
            ?}
         || {? FAKS.T().PAR='N' || _wyn:=-1 || _wyn:=0 ?}
         ?}
      ?}
   ?}
?};
_wyn


\drukuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: wydruk paragonu
::   WE:
::   WY:
::  OLD: \drukuj/prt_fisk.fml
::----------------------------------------------------------------------------------------------------------------------
KH.cntx_psh();
KH.index('KOD');
KH.prefix(2,FAKS.KH().KOD);
_n:='';
_u:='';
_m:='';
{? KH.first()
||
  _n:=KH.NAZ;
  _u:=KH.UL;
  _m:=KH.MIASTO
?};
KH.cntx_pop();

_ok:=0;
_drukuj:=1;
_roz_zal:=0;

:: gdy wymagana uproszczona forma paragonu sprawdza czy dokument rozlicza zaliczki
{? exec('get','#params',300160,2)='T'
||
   FAPOW.index('END_K');
   FAPOW.prefix($FAKS.ref());
   _roz_zal:=FAPOW.first()
?};
:: sprawdza czy mozliwe drukowanie paragonu
{? FAKS.WHERE<>'L' & _roz_zal=1
||
:: faktura koncowa rozliczajaca zaliczki & uproszczona forma paragonu
   FAKSV.index('FF_SV');
   FAKSV.prefix('',$FAKS.ref());
   {? FAKSV.first()
   ||
      {!
      |?
         {? FAKSV.WB-FAKSV.WB_Z<0
         ||
            FUN.info('Niezgodne stawki VAT dla zaliczki i faktury rozliczającej.\n\n'
               'Pozycje paragonu muszą mieć wartość większą od zera.\nWydruk paragonu niemożliwy.'@);
            _drukuj:=0
         ?};
         _drukuj=1 & FAKSV.next()
      !}
   ?}
?};

{? _drukuj
||
:: drukowanie na paragonie dodatkowych linii po transakcji
   _linefoot:=obj_new('FORMULA','PRT','FAKS','ERROR','TAB','add');
   _linefoot.FORMULA:=PRT_FISK.p_300165();
   _linefoot.PRT:=0;
   _linefoot.FAKS:=FAKS.ref();
   _linefoot.ERROR:=0;
   _linefoot.TAB:=
      tab_tmp(1
         ,'LP' ,'INTEGER'     ,'Kolejność na wydruku'
         ,'ID' ,'INTEGER'     ,'Identyfikator linii'
         ,'NA' ,'STRING[40]'  ,'Treść linii');
   _linefoot.add:="
      {? ~.PRT || return(0) ?};
      .TAB.LP:={? .TAB.last() || .TAB.LP+1 || 1 ?};
      _txt1:='Definiowanie dodatkowej linii w stopce po transakcji.\n'@;
      _txt2:='\nDotyczy definicji linii nr %1.'@[$.TAB.LP];
      {? ~PRT_FISK.lchkfoot(_a,_b,_txt1,_txt2)
      ||
         .PRT:=0; .ERROR:=1;
         return(0)
      ?};
      {? .TAB.size()>=PRT_FISK.sizefoot()
      ||
         .PRT:=0; .ERROR:=2;
         FUN.info(_txt1+'Nie można dodawać kolejnych linii informacyjnych.'@+_txt2);
         return(0)
      ?};
      .TAB.ID:=_a;
      .TAB.NA:=_b;
      {? .TAB.add() || 1 || .PRT:=0; .ERROR:=3; 0 ?}
   ";
   params_set('linefoot',_linefoot);
   {? _linefoot.FORMULA<>"" || _linefoot.PRT:=1; _linefoot.FORMULA() ?};
   {? _linefoot.ERROR
   ||
      _linefoot.PRT:=0;
      _drukuj:=
         FUN.ask('Wystąpiły błędy podczas definiowania dodatkowych linii w stopce po transakcji.'
            '\nDodatkowe linie nie będą drukowane na paragonie.'
            '\n\nCzy wydrukować dokument na drukarce fiskalnej?'@)

   ||
      _LinesFoot:=_linefoot.TAB;
      _linefoot.PRT:=_LinesFoot.first();
      {? _linefoot.PRT=0
      ||
         _linefoot.PRT:=PRT_FISK.PROTO='ELZAB' & exec('get','#params',300166)='T' & FAKS.WAL=INFO.NAROD
      ?}
   ?}
?};

{? _drukuj
   & exec('chck_err','fis',
      {? OZ.TYPFISK=exec('str_posnet_','#blank')
      || PRT_FISK.beg_par(OZ.HEADER,OZ.FOOTER,,FAKS.SPOBLRAB)
      || PRT_FISK.beg_par(OZ.K1,OZ.K2,OZ.K3,FAKS.SPOBLRAB)
      ?})
||
:: suma wartosci brutto - kontrola danych przeslanych do drukarki
   _wrt_brt:=0;
   _poz:=0;

   {? FAKS.WHERE='L'
   ||
::    zaliczka - wartosci PLN w pozycjach VAT - tab. FAKSV
      FAKSV.index('FF_SV');
      FAKSV.prefix('',$FAKS.ref());
      {? FAKSV.first()
      ||
         {!
         |?
            _poz+=1;
            _opis:='Zaliczka '+FAKSV.SV().KOD;
            _ilosc:=1;
            _sv_kod:=FAKSV.SV().KOD;
            _c_brt:=FAKSV.WB_Z;
            _w_brt:=FAKSV.WB_Z;

            _ok:=PRT_FISK.line_par(_poz,_opis,_ilosc,_sv_kod,_c_brt,_w_brt,'');

::          suma wartosci brutto - kontrola danych przeslanych do drukarki
            _wrt_brt+=FAKSV.WB_Z;

            _ok & FAKSV.next()
         !}
      ?}
   ||
::    dokument sprzedazy
      {? _roz_zal=1
      ||
::       faktura koncowa rozliczajaca zaliczki & uproszczona forma paragonu
         FAKSV.index('FF_SV');
         FAKSV.prefix('',$FAKS.ref());
         {? FAKSV.first()
         ||
            {!
            |?
               {? FAKSV.WB-FAKSV.WB_Z>0
               || _poz+=1;
                  _opis:='Rozliczenie zaliczki '+FAKSV.SV().KOD;
                  _ilosc:=1;
                  _sv_kod:=FAKSV.SV().KOD;
                  _c_brt:=FAKSV.WB-FAKSV.WB_Z;
                  _w_brt:=FAKSV.WB-FAKSV.WB_Z;
                  _ok:=PRT_FISK.line_par(_poz,_opis,_ilosc,_sv_kod,_c_brt,_w_brt,'');

::                suma wartosci brutto - kontrola danych przeslanych do drukarki
                  _wrt_brt+=FAKSV.WB-FAKSV.WB_Z
               ?};

               _ok & FAKSV.next()
            !}
         ?}
      ||
::       wszystkie pozycje dokumentu sprzedazy
         FAP.index('FAP');
         FAP.prefix(FAKS.ref());
         {? FAP.first()
         ||
            {!
            |?
               _dokl:=exec('jaka_dok_m','jm',FAP.M);
               _poz:=FAP.POZ;
               _opis:=exec('cur_fis_ktm','fis',FAP.M,FAKS.AR,FAKS.AM);
               {? _opis='' || _opis:=FAP.M().KTM+' '+FAP.M().N ?};
               _dl:=exec('get','#params',300161,1);
               {? _dl<=0 || _dl:=28 ?};
               {? +_opis>_dl
               || _opis:=_dl+_opis
               ?};
               _ilosc:=FAP.IL$_dokl;
               _jm:=4+FAP.JM().KOD;
               _sv_kod:=FAP.SV().KOD;
               _c_brt:=FAP.CB;
               _w_brt:=FAP.WB;
               _rab:=
                  {? FAKS.RAB_TYP='P'
                  || exec('rab_proc','ceny',FAKS.RAB,FAP.RAB,'P')
                  |? FAKS.RAB_TYP='S'
                  || exec('rab_proc','ceny',FAKS.RAB,FAP.RAB,'S')
                  |? FAKS.RAB_TYP='K'
                  || (_ilosc*FAP.CPR)$2-FAP.BWAL_P
                  |? FAKS.RAB_TYP='W'
                  || (_ilosc*FAP.CPR)$2-FAP.BWAL_P
                  ?};

               {? FAKS.SPOBLRAB='W' & _rab & exec('czyrabp','ceny',FAKS.RAB_TYP)
               ||
                  _c_brt:=FAP.CPR;
                  _w_brt:=(_ilosc*_c_brt)$2;
                  _ok:=PRT_FISK.line_par(_poz,_opis,_ilosc,_sv_kod,_c_brt,_w_brt,_jm,_rab,1)
               |? FAKS.SPOBLRAB='W' & _rab
               ||
                  _c_brt:=FAP.CPR;
                  _w_brt:=(_ilosc*_c_brt)$2;
                  _ok:=PRT_FISK.line_par(_poz,_opis,_ilosc,_sv_kod,_c_brt,_w_brt,_jm,_rab,0)
               ||
                  _ok:=PRT_FISK.line_par(_poz,_opis,_ilosc,_sv_kod,_c_brt,_w_brt,_jm)
               ?};


::             suma wartosci brutto - kontrola danych przeslanych do drukarki
               _wrt_brt+=FAP.WB;

               _ok & FAP.next()
            !}
         ?}
      ?}
   ?};

:: nip nabywcy
   {? _ok
      &  FAKS.NIP<>''
      &  (
         ST.FIS & exec('get','#params',300164)*('|'+ST.FIS().KOD+'|')
         | exec('get','#params',2160,2,OPERATOR.USER)='T'
         )
   ||
      _ok:=PRT_FISK.nip_nab(FAKS.NIP)
   ?};

:: płatności
   _payment_war:=0;
   {? exec('get','#params',300166)='T' & FAKS.WAL=INFO.NAROD
   ||
      FAKSPL.cntx_psh();
      FAKSPL.index('TERM');
      FAKSPL.prefix(FAKS.ref());
      _loop:=FAKSPL.first();
      {!
      |? _loop
      |!
         _payment_war+=FAKSPL.WAR;
         PRT_FISK.payment(FAKSPL.PL,FAKSPL.WAR);
         _loop:=FAKSPL.next()
      !};
      FAKSPL.cntx_pop()
   ?};

:: koniec paragonu w części fiskalnej
   {? _ok:=exec('chck_err','fis',PRT_FISK.end_par(_wrt_brt,{? _ok || 'ok' || 'anul' ?},'01'+(1+username()),_payment_war
         ,_linefoot.PRT))
   ||
::    drukowanie na paragonie dodatkowych linii po transakcji
      {? _linefoot.PRT
      ||
         _loop:=_LinesFoot.first();
         {!
         |? _loop
         |!
            _id:=_LinesFoot.ID;
            _na:=_LinesFoot.NA;
            PRT_FISK.linefoot(_id,_na);
            _loop:=_LinesFoot.next()
         !};
         PRT_FISK.end_foot()
      ?};
::    pobranie numeru paragonu z drukarki i zapisanie go w tabeli FAKS
      _num:=0;
      _numdr:='';
      {! _ile:=0
      |? _num<=0
      |!
         _num:=PRT_FISK.par_num();
         _numdr:=PRT_FISK.get_nrdr();
         {? _num>0 || FAKS.PAR:=$_num; FAKS.NRUNIKAT:=_numdr; FAKS.put()
         || _ile+=1;
            exec('chck_err','fis',0);
            FUN.info('Paragon został wydrukowany, ale nie można pobrać jego numeru.'
               '\nJeśli nie ma papieru w drukarce to zmień rolkę.'@);
            {? _ile>1
               & FUN.ask('Czy chcesz ręcznie wpisać numer wydrukowanego paragonu?'@)
            ||
               undefine();
               define('NUM',0,'Numer fiskalny'@,'Numer fiskalny ostatnio wydrukowanego paragonu'@,,,0);
               define('NRUNIKAT','','Numer unikatowy drukarki'@,'Unikatowy numer drukarki fiskalnej'@,,,);
               {? def_edit("DEFINE.NUM>0",'Sprawdź i podaj numer fiskalny wydrukowanego paragonu'@)
               ||
                  _num:=DEFINE.NUM; FAKS.PAR:=$_num; FAKS.NRUNIKAT:=DEFINE.NRUNIKAT; FAKS.put()
               ?};
               undefine()
            ?}
         ?}
      !}
   ?}
?};
_ok


\fisdr_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Blokada rekordu FIS_DR, czyli drukarki fiskalnej
::   WE: _a - FIS_DR.ref()
::       _b - FIS_DR.NAZ
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_msg:='';
{? _b<>''
|| _msg:='Drukarka fiskalna %1 jest używana'@[_b]
?};
_lock:=exec('blk_lock','#table','FIS_DR',_a);

{? ~_lock
|| _wait:=1;
   {!
   |? progress(,'Proszę czekać.'@,'Drukarka fiskalna'@,1);
      _tm_start:=utc_get();
      {!
      |? delay(1);
         _lock:=exec('blk_lock','#table','FIS_DR',_a,,,_msg,,2);
         ~_lock & utc_get()<_tm_start+5
      !};
      prgs_clr();
      {? ~_lock
      || _wait:=FUN.ask(VAR.MESSAGE+'\n'+'Czy spróbować ponownie?'@)
      ?};
      ~_lock & _wait
   !}
?};

_lock


\fisdr_unlock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Odblokowanie rekordu FIS_DR, czyli drukarki fiskalnej
::   WE: _a - FIS_DR.ref()
::----------------------------------------------------------------------------------------------------------------------
exec('blk_unlock','#table','FIS_DR',_a);
~~


\fis_begin
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Przed wykonaniem czegoś na drukarce fiskalne - ewentualna blokada
::   WE: [_a] - tabela z parametrami fiskalnymi 0 - OZ (domyślnie), 1 - FIS
::   WY: [_a,_b]
::       _a - 0/1 - czy się powiodło
::       _b - ew. FIS_DR.ref() zablokowanej drukarki
::----------------------------------------------------------------------------------------------------------------------
_tab:=OZ;
{? var_pres('_a')=type_of(0) & _a<>0
|| obj_del(_tab);
   _tab:=FIS
?};
_wyn:=obj_new(2);
_wyn[1]:=1;
_wyn[2]:=null();
_fisdr:=_tab.FIS_DR;
{? _fisdr<>null()
|| _fisdr_naz:=_tab.FIS_DR().NAZ+' ('+_tab.FIS_DR().NRUNIKAT+')';
   _wyn[2]:=_fisdr;
   _wyn[1]:=exec('fisdr_lock','faktury_fis',_fisdr,_fisdr_naz)
?};
_wyn


\fis_end
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MW [23.25]
:: OPIS: Po wykonaniu czegoś na drukarce fiskalne - ewentualnie odblokowanie
::   WE: _a - wynik fis_begin
::----------------------------------------------------------------------------------------------------------------------
{? _a[1] & _a[2]<>null()
|| exec('fisdr_unlock','faktury_fis',_a[2])
?};
~~

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 a0c01d842944616598512a89812e42ce37ab07c734cb21e7424e9b994bb4a204fc78d76130bc2d33ffa62425083df02ca944965474c07712cc9d122344e349dfe0165d18375dbfae0350cd579b420181a4be2d88f999ebfdb6579106b820b53e5490b57d3030187a28e5abe9cf5834e1b9abbfa82ac012897566f677f9470911
