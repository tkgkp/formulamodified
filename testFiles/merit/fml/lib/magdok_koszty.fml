:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: magdok_koszty.fml
:: Utworzony: 23.07.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Dokumenty magazynowe - koszty
::======================================================================================================================


\nal_kos
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: nalicza koszty celne w dokumentach rozchodowych z dostaw wskazanych w pozycjach dokumentu
::   WY: ~~
::  OLD: \nal_kos/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
{? ND.MAG().SKL='T' & ND.TYP().P='N'
||
   DK.cntx_psh();
   DK.index('DOKMAG'); DK.prefix(ND.ref());
:: analiza pozycj dokumentu rozchodowego
   {? DK.first()
   ||
      {!
      |? _il:=DK.IL;
         _dkk_mb:=FAP_K.name();
         _nd_b:=ND.ref();
         _nd_i:=ND.IDADD;
         _dk_b:=DK.ref();
         DK.cntx_psh();
         DK.use(DK.NDK); DK.prefix();
::       dostawa z ktorej nastepuje rozchod
         {? DK.seek(DK.RDK,)
         || FAKS_K.cntx_psh(); FAP_K.cntx_psh();
            FAKS_K.use('fakkk'+(DK.NDK+3));
            FAP_K.use('fapkk'+(DK.NDK+3)); FAP_K.index('DKSQL'); FAP_K.prefix($DK.ref());
::          koszty dla dostawy
            {? FAP_K.first()
            || {!
               |? {? FAP_K.FAKS_K().SC='T'
                  ||
                     _dk_k:=$FAP_K.ref();
::                   _kosztp - koszt pozostaly do rozliczenia
                     _kosztp:=FAP_K.WB-FAP_K.W_R;
::                   _ilp - ilosc pozostala do rozliczenia
                     _ilp:=DK.IL-FAP_K.IL_R;
                     _koszt:={? _ilp=_il  || _kosztp || {? _ilp>0 || ((_kosztp/_ilp)*_il)$2 || 0 ?} ?};
::                   aktualizacja wartosci rozliczenia kosztu w dostawie
                     {? _koszt>0 || FAP_K.W_R+=_koszt; FAP_K.IL_R+=_il; FAP_K.put() ?};
                     _op:=FAP_K.FAKS_K().OPIS;
::                   dodanie kosztu w dokumencie rozchodowym
                     FAKS_K.cntx_psh(); FAP_K.cntx_psh();
                     FAKS_K.use('fakkk'+(_dkk_mb+3)); FAKS_K.index('N'); FAKS_K.prefix('N',_nd_i,'N',1);
                     FAP_K.use(_dkk_mb); FAP_K.prefix();
                     _n_k:=null;
                     {? FAKS_K.first()
                     || {!
                        |? {? FAKS_K.OPIS=_op || _n_k:=FAKS_K.ref() ?};
                           _n_k=null & FAKS_K.next
                        !}
                     ?};
                     {? _n_k=null
                     || FAKS_K.blank(1);
                        FAKS_K.IDND:=_nd_i;
                        FAKS_K.ROZLICZ:='N';
                        FAKS_K.INMG:=1;
                        FAKS_K.OPIS:=_op;
                        FAKS_K.WB:=FAKS_K.ROZL:=_koszt;
                        FAKS_K.SC:='T';
                        FAKS_K.add(1)
                     ||
                        FAKS_K.WB+=_koszt;
                        FAKS_K.ROZL+=_koszt;
                        FAKS_K.put(1)
                     ?};
                     FAP_K.DKSQL:=$_dk_b;
                     FAP_K.DK_KSQL:=_dk_k;
                     FAP_K.WB:=_koszt;
                     FAP_K.IL_R:=_ilp;
                     FAP_K.W_R:=_koszt;
                     FAP_K.FAKS_K:=FAKS_K.ref();
                     FAP_K.add();
                     FAKS_K.cntx_pop(); FAP_K.cntx_pop()
                  ?};
                  FAP_K.next()
               !}
            ?};
            FAKS_K.cntx_pop(); FAP_K.cntx_pop()
         ?};
         DK.cntx_pop();
         DK.next()
      !}
   ?};
   DK.cntx_pop()
?};
~~


\koszt_n
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wyswietla koszty dla naglowka dokumentu oraz dok powiazanych
::   WE:  _a - ND.ref()
::        _b - ref SQL-owy ZK_RN
::   WY: zmienne globalne
::       wart_m  - suma DK.WAR
::       wart_s  - suma DK.WN
::  OLD: \koszt_n/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
DISP.N_P:=DISP.N_R:=DISP.N_S:=0;
VAR_DEL.delete('wart_m','wart_s');
_dk_fap:=tab_tmp(1,'DK_FAP','STRING[16]',);
wart_m:=0;
wart_s:=0;
ND.cntx_psh();
DK.cntx_psh();
ND.prefix();
{? ND.seek(_a)
||
   DK.use('dokma'+(ND.name+3));
   DK.index('DOKMAG');
   DK.prefix(ND.ref());
   {? DK.first()
   ||
      {!
      |?
         {? DK.ZAM_RN=_b
         || exec('dk_k_pow','magdok_koszty',DK.ref());
            _koszt:=exec('koszt','magdok_poz');
            {? DK.PLUS='N' || DISP.N_R+=_koszt || DISP.N_P+=_koszt ?};
            DISP.N_P+=DISP.DK_P;
            wart_m+=DK.WAR;

            _wars:=0;
            _dk_fap.prefix(DK.FAP);
            {? ~_dk_fap.first()
            ||
               _wn:=exec('FindAndGet','#table',FAP,DK.FAP,,"FAP.WN",0);
               _il:=exec('FindAndGet','#table',FAP,DK.FAP,,"FAP.IL",0);
               _wars:={? _il & DK.IL<_il || ((DK.IL/_il)*_wn)$2 || _wn ?};
               {? _wars>0
               ||
                  _dk_fap.blank();
                  _dk_fap.DK_FAP:=DK.FAP;
                  _dk_fap.add()
               ||
                  _wars:=DK.WN
               ?}
            ?};
            {? _wars>0 || wart_s+=_wars ?};

            DISP.N_S+=_koszt+DISP.DK_P
         ?};
         DK.next()
      !}
   ?}
?};
DK.cntx_pop();
ND.cntx_pop();
''


\dk_k_pow
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: oblicza koszty dla dokumnetow powiazanych (PZ) z dana pozycja dokumentu
::   WE: _a - DK.ref()
::  OLD: \dk_k_pow/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
DISP.DK_P:=0;

ND.cntx_psh();
DK.cntx_psh();

DK.prefix();

{? DK.seek(_a) & DK.PLUS='N'
||
   _rdk:=DK.RDK;
   _ndk:=DK.NDK;
   _mag:=DK.N().MAG;
   _mat:=DK.M;

   _il_dk:=DK.IL;

   _ilo:=0;
   _war:=0;

   DK.index('DOST3');
   DK.prefix(_mag,_mat,_rdk,_ndk,'T');
   {? DK.first()
   || DISP.DOST:=DK.N().KH().KOD+' '+DK.N().TYP().T+' - '+$DK.N().NR+' poz.'+$DK.P;
      {!
      |?
         _ilo+=DK.IL;
         _war+=exec('koszt','magdok_poz');
         DK.next()
      !}
   ?};
   DISP.DK_P:={? _ilo>0 || (((_war*_il_dk)/_ilo))$2 || 0 ?}

?};
DK.cntx_pop();
ND.cntx_pop();
''


\mgkosz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: koszty dla dokumentow magazynowych
::   WE: [_a] - 1 bez blokad sam podgląd 0(domyślnie)-nie
::   WY: ~~
::  OLD: \mgkosz/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
ND.cntx_psh();
{? _a | exec('blok_nd','magdok_nag','T') || exec('rozpkosz','magdok_koszty',_a); {? ~_a || ND.r_unlock() ?} ?};
ND.cntx_pop();
~~


\rozpkosz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: wyswietla i aktualizuje koszty
::   WE: [_a] - 1 bez blokad sam podgląd 0(domyślnie)-nie
::   WY: ~~
::  OLD: \rozpkosz/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
VAR_DEL.delete('__mgkos','__mgknx1','__mgknx2','__mgknx3');
__mgkos:=tab_tmp(3,
   'TREE'   ,'TREE_REF',''
   ,'LAB'   ,'STRING[200]',''
   ,'REF'   ,'STRING[20]',''
   ,'WAR'   ,'REAL',''
   ,'D'     ,'DATE',''
   ,'KK'    ,'STRING[20]',''
   ,'KKSQL' ,'STRING[16]',''
   ,'NKSQL' ,'STRING[16]',''
   ,'SC'    ,'STRING[1]',''
   ,'WK'    ,'REAL',''
   ,'ROZ'   ,'REAL',''
   ,'KROZ'  ,'REAL',''
   ,'FIL'   ,'REAL',''
   ,'FWB'   ,'REAL',''
   ,'N_K'   ,'STRING[16]',''
   ,'DK_K'  ,'STRING[16]','');

__mgknx1:=__mgkos.index('?');
__mgknx2:=__mgkos.ndx_tmp(,,'LAB',,,'LAB',,);
__mgknx3:=__mgkos.ndx_tmp(,,'TREE',,,'REF',,);

__mgksel:=__mgkos.mk_sel('Koszty dla dokumentu: %1'
   ' (waluta %2)'@[ND.SYM,{? ND.MAG().SKL='T' || ND.SCWAL().KOD || INFO.NAROD().KOD ?}],'P',,'mgkos_sel',,,,1);
__mgkos.win_sel(__mgksel);

__mgkos.win_fld(__mgksel,,'LAB',,,35,,1,'');
__mgkos.win_fld(__mgksel,FZ,'KK','SYM','KONTAKOD',12,,0,'Konto'@);
__mgkos.win_fld(__mgksel,,'D',,,10,,0,'Data'@);
__mgkos.win_fld(__mgksel,,'WAR',,,-12,2,1,'Wartość magazynowa'@);
__mgkos.win_fld(__mgksel,,'WK',,,12,2,1,'Koszt'@);
__mgkos.win_fld(__mgksel,,'ROZ',,,-12,2,0,'Koszt rozpisany'@);
{? ND.MAG().SKL='T'
||
   __mgkos.win_fld(__mgksel,,'SC',,,3,,1,'Celny'@,,,2,,"'T'","'N'");
   __mgkos.win_fld(__mgksel,,'KROZ',,,-12,2,1,'Koszt rozliczony'@)
?};

:: __mgkos.win_act(__mgksel,0,'Formuła','Zwiń/&rozwiń całość'@@,,,,"exec('zwrw_all','#tree','__mgkos','TREE')",,,,,'R');
{? ~_a
|| __mgkos.win_act(__mgksel,1,'Formuła','&Dołącz'@@,,,
    "exec('dol_mgk','magdok_koszty')","exec('roz_mgk','magdok_koszty',__mgkos.TREE)",1,,,,'D');
   __mgkos.win_act(__mgksel,0,'Popraw',,,,"exec('pop_mgk','magdok_koszty')",
   "exec('roz_mgk','magdok_koszty',__mgkos.TREE)",1,,,,);
::   __mgkos.win_act(__mgksel,0,'Formuła','&Usuń'@@,,,"exec('usu_mgk','magdok_koszty')",
::    "exec('roz_mgk','magdok_koszty',__mgkos.TREE)",0,,,,'U');
   __mgkos.win_act(__mgksel,0,'Formuła','Ro&zpisz automatycznie'@@,,,"exec('automgk','magdok_koszty',0)",,0,1,
    "exec('automgk','magdok_koszty',0)",,'Z');
   __mgkos.win_act(__mgksel,0,'Formuła','&Akceptuj'@@,,,,"exec('akc_mgk','magdok_koszty')",,0,,,'A');
   __mgkos.win_act(__mgksel,0,'Okienko',,,,,"exec('ok2mgk','magdok_koszty')",0)
?};
__mgkos.win_act(__mgksel,0,'Formuła','Legenda'@@,,
   'Opis znaczenia kolorów wierszy i ikon'@,"exec('legenda','color','MGKOS#01')",,0,,,,'L');
__mgkos.win_act(__mgksel,0,'Rekord',,,,"exec('rek1mgk','magdok_koszty')","exec('rek2mgk','magdok_koszty')",0);


__mgkos.tr_fml(__mgksel,,"{? _a=-1 || 1 || _a ?}");
__mgkos.win_fml(__mgksel,,'LAB',,'ICON_BEFORE',
"
   {? __mgkos.TREE=0
   ||
      {? __mgkos.tr_state()=1
      || 'xwin16.png:75'
      || 'xwin16.png:74'
      ?}
   || 'xwin16.png:76'
   ?}
");

FAKS_K.cntx_psh();
FAKS_K.index('N');
FAKS_K.prefix('N',ND.IDADD,'N',1);
{? FAKS_K.first()
||
   _skl:=ND.MAG().SKL='T';
   {!
   |? __mgkos.clear();
      __mgkos.blank();
      __mgkos.TREE:=0;
      __mgkos.LAB:=FAKS_K.OPIS;
      __mgkos.WAR:=0;
      __mgkos.D:=FAKS_K.D;
      __mgkos.KK:=FAKS_K.KK().SYM;
      __mgkos.KKSQL:=$FAKS_K.KK;
      __mgkos.WK:=FAKS_K.WB;
      __mgkos.ROZ:=FAKS_K.ROZL;
      __mgkos.REF:=$ND.ref();
      __mgkos.FIL:=0;
      __mgkos.FWB:=0;
      __mgkos.N_K:=$FAKS_K.ref();
      __mgkos.SC:=FAKS_K.SC;
      _korzen:={? __mgkos.add(1) || #__mgkos.ref || 0 ?};
      _ali:=0;
      _alw:=0;
      _alr:=0;
      _faks_k:=FAKS_K.ref();
      FAKS_K.cntx_psh();
      DK.cntx_psh();
      DK.index('DOKMAG');
      DK.prefix(ND.ref);
      {? DK.first()
      || {!
         |? {? DK.M().RODZ<>'U' | DK.N().TYP().WYR='U'
            || FAP_K.index('DK');
               FAP_K.prefix(_faks_k);
               {? FAP_K.find_key($DK.ref())
               || _dkwar:={? _skl=1 || DK.SCWAR || DK.WAR ?};
                  __mgkos.clear;
                  __mgkos.blank;
                  __mgkos.LAB:=form(DK.P,4,0,'99')+'. '+DK.M().KTM+' - '+DK.M().N;
                  __mgkos.TREE:=_korzen;
                  __mgkos.WAR:=_dkwar;
                  __mgkos.D:=FAP_K.D;
                  __mgkos.KK:=FAP_K.KK().SYM;
                  __mgkos.KKSQL:=$FAP_K.KK;
                  __mgkos.NKSQL:=$FAP_K.FAKS_K().KK;
                  __mgkos.WK:=FAP_K.WB;
                  __mgkos.KROZ:=FAP_K.W_R;
                  __mgkos.ROZ:=FAP_K.WB;
                  __mgkos.FIL:=DK.IL;
                  __mgkos.FWB:=_dkwar;
                  __mgkos.REF:=$DK.ref;
                  __mgkos.N_K:=$FAKS_K.ref;
                  __mgkos.DK_K:=$FAP_K.ref;
                  __mgkos.SC:=FAP_K.FAKS_K().SC;
                  _ali+=DK.IL;
                  _alw+=_dkwar;
                  _alr+=FAP_K.W_R;
                  __mgkos.add(1)
               || _dkwar:={? _skl=1 || DK.SCWAR || DK.WAR ?};
                  __mgkos.clear;
                  __mgkos.blank;
                  __mgkos.LAB:=form(DK.P,4,0,'99')+'. '+DK.M().KTM+' - '+DK.M().N;
                  __mgkos.TREE:=_korzen;
                  __mgkos.WAR:=_dkwar;
                  __mgkos.D:=FAKS_K.D;
                  __mgkos.KK:=FAKS_K.KK().SYM;
                  __mgkos.KKSQL:=$FAKS_K.KK;
                  __mgkos.NKSQL:=$FAKS_K.KK;
                  __mgkos.WK:=FAKS_K.WB;
                  __mgkos.KROZ:=0;
                  __mgkos.ROZ:=0;
                  __mgkos.FIL:=DK.IL;
                  __mgkos.FWB:=_dkwar;
                  __mgkos.REF:=$DK.ref;
                  __mgkos.N_K:=$FAKS_K.ref;
                  __mgkos.DK_K:='';
                  __mgkos.SC:=FAKS_K.SC;
                  _ali+=DK.IL;
                  _alw+=_dkwar;
                  _alr+=0;
                  __mgkos.add(1)
               ?}
            ?};
            DK.next
         !}
      ?};
      DK.cntx_pop();
      FAKS_K.cntx_pop();
      __mgkos.clear;
      {? __mgkos.seek(_korzen,)
      || __mgkos.WAR:=_alw;
         __mgkos.KROZ:=_alr;
         __mgkos.FIL:=_ali;
         __mgkos.FWB:=_alw;
         __mgkos.put(1);
         exec('roz_mgk','magdok_koszty',_korzen)
      ?};
      FAKS_K.next()
   !}
?};

__mgkos.index(__mgknx1);
__mgkos.clear();
__mgkos.select();

VAR_DEL.delete('__mgkos','__mgknx1','__mgknx2','__mgknx3');
FAKS_K.cntx_pop();
~~


\dks_suma
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: Formula przed na akcje Rekord okna FAP_K.WER
::  OLD: \dks_suma/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
ND.cntx_psh();
DK.cntx_psh();
FAP_K.cntx_psh();
exec('dk_k_pow','magdok_koszty',DK.ref());
FAP_K.cntx_pop();
DK.cntx_pop();
ND.cntx_pop();
''


\dol_mgk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: dolaczenie kosztu dla dokumentu magazynowego
::   WY: 1
::  OLD: \dol_mgk/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
FAKS_K.cntx_psh;
FAKS_K.prefix();

_ed_poz:=1;
{? _ed_poz=1
||
   _tree:={? ~__mgkos.TREE || __mgkos.ref() || __mgkos.TREE ?};
   _skl:=ND.MAG().SKL='T';
   VAR_DEL.delete('__dk','__dksel','__sel');
   __dk:=tab_tmp(1,
      'P'   ,'INTEGER'     ,'Poz.'
      ,'KTM','STRING[50]'  ,'Indeks'
      ,'N'  ,'STRING[100]' ,'Nazwa'
      ,'WAR','REAL'        ,'Wartość'
      ,'REF','STRING[16]'  ,'Ref DK');
   DK.cntx_psh();
   DK.index('DOKMAG'); DK.prefix(ND.ref());
   {? DK.first()
   ||
      __mgkos.cntx_psh();
      __mgkos.index(__mgknx3); __mgkos.prefix(_tree);
      {!
      |? {? ~__mgkos.find_key($DK.ref()) & DK.M().RODZ<>'U'
         ||
            __dk.P:=DK.P;
            __dk.KTM:=M.KTM;
            __dk.N:=M.N;
            __dk.WAR:={? _skl=1 || DK.SCWAR || DK.WAR ?};
            __dk.REF:=$DK.ref();
            __dk.add()
         ?};
         DK.next()
      !};
      __mgkos.cntx_pop()
   ?};
   DK.cntx_pop();

   {? __dk.first
   || _dk_wer:=__dk.mk_sel('Pozycje dokumentu: %1'@[ND.SYM],'P',,'dk_koszt_sel',,,,,'U');
      __dk.win_sel(_dk_wer);

      __dk.win_fld(_dk_wer,,'P',,,-5,,1,'Pozycja'@);
      __dk.win_fld(_dk_wer,,'KTM',,,20,,1,'Indeks'@);
      __dk.win_fld(_dk_wer,,'N',,,20,,1,'Nazwa'@);
      __dk.win_fld(_dk_wer,,'WAR',,,20,2,1,'Wartość'@);

      __dk.win_act(_dk_wer,0,'Formuła','&Wybierz'@@,,,"{? __sel=0 || sel_exit() ?}",,1,1,
         "__sel:=__dk.sel_size(); __dksel:=__dk.sel_aget(); sel_exit()",,'W')
   || FUN.info('Brak pozycji do dodania.'@); _ed_poz:=0
   ?};

   __sel:=0;
   {? _ed_poz=1 & __dk.select()
   ||
      {? __sel=0
      ||
         __dksel:=tab_tmp(1,'REF','INTEGER',);
         __dksel.REF:=#__dk.ref();
         __dksel.add()
      ?};
::    dodanie pozycji kosztu
      _korzen:=_tree;
      __mgkos.cntx_psh();
      __mgkos.prefix();
      {? __mgkos.seek(_tree,)
      ||
         _op:=__mgkos.LAB;
         _dd:=__mgkos.D;
         _kk:=__mgkos.KK;
         _kksql:=__mgkos.KKSQL;
         _n_k:=__mgkos.N_K;
         _sc:=__mgkos.SC
      ?};
      __mgkos.cntx_pop();

      {? __dksel.first()
      ||
         _ali:=_alw:=0;
         {!
         |?
            FAP_K.cntx_psh();
            FAP_K.prefix();
            FAP_K.blank();
            FAP_K.DKSQL:={? __dk.seek(__dksel.REF,)
                         || $exec('FindAndGet','#table',DK,__dk.REF,,,null())
                         || null()
                         ?};
            _ile:=exec('FindAndGet','#table',DK,__dk.REF,,"IL",0);
            FAP_K.D:=_dd;
            FAP_K.KK:=exec('FindAndGet','#table',KK,_kksql,,,null());
            FAP_K.FAKS_K:=exec('FindAndGet','#table',FAKS_K,_n_k,,,null());
            {? FAP_K.add()
            ||
               __mgkos.clear;
               __mgkos.blank;
               __mgkos.TREE:=_korzen;
               __mgkos.LAB:=form(__dk.P,4,0,'99')+'. '+__dk.KTM+' - '+__dk.N;
               __mgkos.WAR:=__dk.WAR;
               __mgkos.D:=_dd;
               __mgkos.KK:=_kk;
               __mgkos.KKSQL:=_kksql;
               __mgkos.FIL:=_ile;
               __mgkos.FWB:=__dk.WAR;
               __mgkos.REF:=__dk.REF;
               __mgkos.N_K:=_n_k;
               __mgkos.DK_K:=$FAP_K.ref;
               __mgkos.SC:=_sc;
               __mgkos.add(1);
               _ali+=_ile;
               _alw+=__dk.WAR
            ?};
            FAP_K.cntx_pop;
            __dksel.next
         !};
         __mgkos.clear;
         {? __mgkos.seek(_korzen,)
         || __mgkos.WAR+=_alw;
            __mgkos.FIL+=_ali;
            __mgkos.FWB+=_alw;
            __mgkos.put(1);
            exec('roz_mgk','magdok_koszty',_korzen)
         ?};
         exec('automgk','magdok_koszty',1)
      ?}
   ?}
?};
FAKS_K.cntx_pop();
1


\chk_mgk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: sprawdzenie poprawnosci wypelnianie pol dla dodawanego kosztu - naglowek
::   WE: 0-dolacz, 1-popraw
::   WY: akronim blednie wypelnionego pola, ''-wpp
::  OLD: \chk_mgk/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=
   {? form(FAKS_K.OPIS)=''
   || FUN.info('Należy podać opis kosztu.'@); 'OP'
   |? FAKS_K.WB<=0
   || FUN.info('Należy podać wartość większą od zera.'@); 'WB'
   || ''
   ?};
{? _wyn=''
||
   _cur:={? _a=1 || __mgkos.ref() || null ?};
   __mgkos.cntx_psh();
   __mgkos.index(__mgknx2); __mgkos.prefix();
   {? __mgkos.find_key(FAKS_K.OPIS,FAKS_K.OPIS) & _cur<>__mgkos.ref()
   || FUN.info('Koszt %1 dodano wcześniej.'@[50+FAKS_K.OPIS]);
      _wyn:='OP'
   ?};
   __mgkos.cntx_pop()
?};
_wyn


\roz_mgk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: aktualizuje wartosc rozliczona
::   WY: _a - __mgkos.TREE
::  OLD: \roz_mgk/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a<>0
|| _roz:=0;
   __mgkos.cntx_psh;
   __mgkos.prefix(_a);
   {? __mgkos.first || {! |? _roz+=__mgkos.ROZ; __mgkos.next !} ?};
   __mgkos.clear;
   {? __mgkos.seek(_a,) || __mgkos.ROZ:=_roz; __mgkos.put(1) ?};
   __mgkos.cntx_pop
?};
1


\automgk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: automatyczna rozpiska kosztow
::   WE: _a=0-wszystkie koszty, 1-biezacy koszt w buforze __mgkos
::  OLD: \automgk/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=__mgkos.sel_aget();  __mgkos.sel_adel();

{? _tab.size & FUN.ask('Rozpisanie kosztów dotyczyć będzie zaznaczonych rekordów.\nCzy kontynuować?'@)
||
:: rozpiska automatyczna wg zaznaczonych rekordow
   _rozp:=tab_tmp(2,'TREE','INTEGER',''
           ,'REF','INTEGER',''
           ,'ALW','REAL',''
           ,'ROZ','REAL','');

   __mgkos.cntx_psh;

   _tab.clear;
   {? _tab.first
   || {!
      |? {? (__mgkos.clear; __mgkos.seek(_tab.REF,))
         || {? __mgkos.SC='N' | __mgkos.SC='T' & ND.Z='N'
            ||
               {? __mgkos.TREE=0
               || _ref:=#__mgkos.ref;
                  __mgkos.clear;
                  __mgkos.prefix(_ref);
                  {? __mgkos.first
                  || {!
                     |? _rozp.clear;
                        _rozp.blank;
                        _rozp.TREE:=_ref;
                        _rozp.REF:=#__mgkos.ref;
                        _rozp.ALW:=__mgkos.FWB;
                        _rozp.ROZ:=__mgkos.WK;
                        _rozp.add(1);
                        __mgkos.next
                     !}
                  ?}
               |? (_rozp.clear; _rozp.prefix(__mgkos.TREE); ~_rozp.find_key(#__mgkos.ref))
               || _rozp.clear;
                  _rozp.blank;
                  _rozp.TREE:=__mgkos.TREE;
                  _rozp.REF:=#__mgkos.ref;
                  _rozp.ALW:=__mgkos.FWB;
                  _rozp.ROZ:=__mgkos.WK;
                  _rozp.add(1)
               || ''
               ?}
            ?}
         ?};
         _tab.next
      !}
   ?};
   obj_del(_tab);

   _pozp:=sql('select distinct :_a.TREE TREE, sum(:_a.ALW) ALW, sum(:_a.ROZ) ROZ from :_a '+
           ' group by :_a.TREE order by 1 ',_rozp);
   _pozp.clear;
   {? _pozp.first
   || {!
      |? {? (__mgkos.clear; __mgkos.seek(_pozp.TREE,); __mgkos.WAR-__mgkos.ROZ+_pozp.ROZ>0)
         || _alw:=_pozp.ALW;
            _roz:=__mgkos.WK-__mgkos.ROZ+_pozp.ROZ;
            _rok:=__mgkos.WK-__mgkos.ROZ+_pozp.ROZ;
            _max:=0;
            _rgr:=null;
            _rozp.clear;
            _rozp.prefix(_pozp.TREE);
            {? _rozp.first
            || {!
               |? {? (__mgkos.clear; __mgkos.seek(_rozp.REF,))
                  || __mgkos.ROZ:={? _alw>0 || _roz*(__mgkos.FWB/_alw) $2 || 0 ?};
                     __mgkos.put(1);
                     {? __mgkos.FWB>_max || _max:=__mgkos.FWB; _rgr:=__mgkos.ref ?};
                     _rok-=__mgkos.ROZ
                  ?};
                  _rozp.next
               !}
            ?};
            {? _rok<>0 & _rgr<>null & (__mgkos.clear; __mgkos.seek(_rgr))
            || __mgkos.ROZ+=_rok;
               __mgkos.put
            ?}
         ?};
         exec('roz_mgk','magdok_koszty',_pozp.TREE);
         _pozp.next
      !}
   ?};
   __mgkos.cntx_pop;
   obj_del(_rozp);
   obj_del(_pozp)
||
:: rozpiska automatyczna dla wszystkich rekordow
   __mgkos.cntx_psh;
   __mgkos.clear;
   {? _a=1
   || __mgkos.prefix(0,__mgkos.LAB,__mgkos.REF)
   || __mgkos.prefix(0)
   ?};
   {? __mgkos.first
   || {!
      |? {? __mgkos.SC='N' | __mgkos.SC='T' & ND.Z='N'
         ||
            _alw:=__mgkos.FWB;
            _ali:=__mgkos.FIL;
            _roz:=__mgkos.WK;
            _rok:=__mgkos.WK;
            _ref:=#__mgkos.ref;
            _max:=0;
            _rgr:=null;
            __mgkos.cntx_psh;
            __mgkos.clear;
            __mgkos.prefix(_ref);
            {? __mgkos.first
            || {!
               |? __mgkos.ROZ:={? _alw<>0 || _roz*(__mgkos.FWB/_alw) $2 || 0 ?};
                  __mgkos.put(1);
                  {? __mgkos.FWB>_max || _max:=__mgkos.FWB; _rgr:=__mgkos.ref ?};
                  _rok-=__mgkos.ROZ;
                  __mgkos.next
               !}
            ?};
            {? _rok<>0 & _rgr<>null & (__mgkos.clear; __mgkos.seek(_rgr))
            || __mgkos.ROZ+=_rok;
               __mgkos.put
            ?};
            __mgkos.cntx_pop;
            exec('roz_mgk','magdok_koszty',#__mgkos.ref)
         ?};
         __mgkos.next
      !}
   ?};
   __mgkos.cntx_pop
?};
1


\pop_mgk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: przed akcja popraw = sprawdzamy czy pozostalo cos do rozpisania
::  OLD: \pop_mgk/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
__mgkos.TREE


\chkp_mgk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: sprawdzenie poprawnosci wypelnianie pol dla dodawanego kosztu - pozycja
::   WY: akronim blednie wypelnionego pola, ''-wpp
::  OLD: \chkp_mgk/koszt.fml
::----------------------------------------------------------------------------------------------------------------------
{? FAP_K.WB<=0 || FUN.info('Należy podać wartość większą od zera.'@); 'WB'
|| ''
?}


\usu_mgk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: usuwanie kosztu
::   WY: 1
::  OLD: \usu_mgk/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Usunąć pozycję?'@)
||
   {? __mgkos.TREE=0
   ||
      FAKS_K.cntx_psh();
      FAKS_K.prefix();
      {? FAKS_K.seek(__mgkos.N_K)
      ||
         FAP_K.index('DK'); FAP_K.prefix(FAKS_K.ref());
         {? FAP_K.first() || {! |? exec('dk_k_del','magdok_poz') !} ?};
         FAKS_K.del()
      ?};
      FAKS_K.cntx_pop();
      __mgkos.cntx_psh(); __mgkos.prefix(#__mgkos.ref());
      {? __mgkos.first() || {! |? __mgkos.del() !} ?};
      __mgkos.cntx_pop();
      __mgkos.del()
   ||
      _tree:=__mgkos.TREE;
      FAP_K.cntx_psh();
      FAP_K.prefix();
      {? FAP_K.seek(__mgkos.DK_K)
      || exec('dk_k_del','magdok_poz');
         _war:=__mgkos.WAR;
         __mgkos.cntx_psh();
         {? __mgkos.seek(__mgkos.TREE,)
         || __mgkos.WAR-=_war;
            __mgkos.put()
         ?};
         __mgkos.cntx_pop();
         __mgkos.del()
      ?};
      FAP_K.cntx_pop();
      __mgkos.cntx_psh(); __mgkos.prefix(_tree);
      {? ~__mgkos.first()
      || __mgkos.prefix();
         {? __mgkos.seek(_tree,)
         || FAKS_K.cntx_psh();
            FAKS_K.prefix();
            {? FAKS_K.seek(__mgkos.N_K) || FAKS_K.del(); __mgkos.del() ?};
            FAKS_K.cntx_pop()
         ?}
      ?};
      __mgkos.cntx_pop()
   ?}
?};
1


\akc_mgk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: akceptacja rozpiski kosztow
::  OLD: \akc_mgk/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
{? FUN.ask('Zaakceptować rozpisane wartości kosztów?'@)
|| sel_exit;

   __mgkos.clear;
   {? __mgkos.first
   || _op:='';
      {!
      |? {? __mgkos.TREE & __mgkos.ROZ>0
         || _n_k:=exec('FindAndGet','#table',FAKS_K,__mgkos.N_K,,,null());
            _dk:=$exec('FindAndGet','#table',DK,__mgkos.REF,,,null());

            FAP_K.index('DK');
            FAP_K.prefix(_n_k);
            {? FAP_K.find_key(_dk)
            || FAP_K.WB:=__mgkos.ROZ;
               FAP_K.KK:={? __mgkos.KKSQL='' || null() || exec('FindAndGet','#table',KK,__mgkos.KKSQL,,,null()) ?};
               FAP_K.put(1)
            || FAP_K.blank;
               FAP_K.FAKS_K:=_n_k;
               FAP_K.DKSQL:=_dk;
               FAP_K.WB:=__mgkos.ROZ;
               __mgkos.cntx_psh();
               {? __mgkos.seek(__mgkos.TREE,)
               || FAP_K.D:=__mgkos.D;
                  FAP_K.KK:={? __mgkos.KKSQL='' || null() || exec('FindAndGet','#table',KK,__mgkos.KKSQL,,,null()) ?}
               ?};
               __mgkos.cntx_pop();
               FAP_K.KK:={? __mgkos.KKSQL='' || null() || exec('FindAndGet','#table',KK,__mgkos.KKSQL,,,null()) ?};
               FAP_K.add(1)
            ?};
            __mgkos.WK:=__mgkos.ROZ;
            __mgkos.put()
         ?};
         __mgkos.next
      !}
   ?}
?}


\rek1mgk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: rekord przed
::  OLD: \rek1mgk/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
:: jesli koszty byly rozliczane to modyfikacja rozpisania kosztow na pozycje niemozliwa _mod=0
_mod:=1;
{? 5+__mgkos.N_K='fakkk'
||
   FAKS_K.prefix();
   {? FAKS_K.seek(__mgkos.N_K)
   || FAP_K.index('DK');
      FAP_K.prefix(FAKS_K.ref());
      {? FAP_K.first()
      ||
         {!
         |? {? FAP_K.IL_R<>0 | FAP_K.W_R<>0 || _mod:=0 ?};
            FAP_K.next()
         !}
      ?}
   ?}
?};
ND.cntx_psh();
{? _mod=0
|| __mgkos.actions(__mgksel,'UP',,1)
|? exec('FindAndGet','#table',ND,FAKS_K.IDND,,"TYP().P='T' & Z='T'",0) & __mgkos.SC='T'
|| __mgkos.actions(__mgksel,'UP',,1)
|| __mgkos.actions(__mgksel,'',,1)
?};
ND.cntx_pop();
FZ.KK:={? __mgkos.KKSQL<>'' || exec('FindAndGet','#table',KK,__mgkos.KKSQL,,,null()) || null() ?};

exec('rekprzed','color','MGKOS#01')


\rek2mgk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: rekord po
::  OLD: \rek2mgk/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=__mgkos.TREE;
_poz:=#__mgkos.ref;
_all:=0;
_roz:=0;
__mgkos.cntx_psh;
__mgkos.clear;
_all:={? __mgkos.seek(_ref,) || __mgkos.WK || 0 ?};
__mgkos.prefix(_ref);
{? __mgkos.first || {! |? _roz+={? (#__mgkos.ref)<>_poz || __mgkos.ROZ || 0 ?}; __mgkos.next !} ?};
__mgkos.cntx_pop;
{? __mgkos.ROZ>(_all-_roz)
|| FUN.info('Zbyt duża ilość.'@);
   __mgkos.ROZ:=(_all-_roz);
   0
|| 1
?}


\kol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: kolory dla kosztow magazynowych
::   WY: kolor
::  OLD: \kol/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
_kol:='';
{? __mgkos.TREE=0
|| _kol:='MGKOS#01#04'
||
   {? __mgkos.TREE & __mgkos.SC='T'
   || _faks_k:=exec('FindAndGet','#table',FAKS_K,__mgkos.N_K,,,null());
      FAP_K.index('DK');
      FAP_K.prefix(_faks_k);
      {? FAP_K.first()
      || _kol:={? FAP_K.WB<>0 & FAP_K.W_R=FAP_K.WB || 'MGKOS#01#03' |? FAP_K.WB<>0 || 'MGKOS#01#02' || '' ?}
      ?}
   ?};

   {? _kol=''
   ||
      _kol:={? __mgkos.ROZ<>0 & __mgkos.TREE || 'MGKOS#01#01' ?}
   ?}
?};
_kol


\ok2mgk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009]
:: OPIS: okienko po kosztow magazynowych, sprawdza czy koszt ogolny wynika z kosztow pozycji, jesli nie pozwala
::       ustalic koszt okolny na wartosc z pozycji
::   WY:
::  OLD: \ok2mgk/koszty.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
__mgkos.cntx_psh();
__mgkos.prefix(0);
{? __mgkos.first()
||
   {!
   |? __mgkos.cntx_psh();
      __mgkos.prefix(__mgkos.ref());
      _kosp:=0;
      {? __mgkos.first()
      ||
         {!
         |? _kosp+=__mgkos.WK;
            __mgkos.next()
         !}
      ?};
      __mgkos.cntx_pop();
      {? 0 & _kosp<>__mgkos.WK
      ||
         _wyb:=FUN.choice('Wartość ogólna kosztu %1 (%2)\n'
            'jest różna od sumy kosztów z pozycji (%3).\n\n'
            'Zmienić ogólną wartość kosztu na %3?'@[__mgkos.LAB,$__mgkos.WK,$_kosp],,'Tak'@,'Nie'@);
         {? _wyb=1
         ||
            FAKS_K.cntx_psh();
            FAKS_K.prefix();
            {? FAKS_K.seek(__mgkos.N_K) || FAKS_K.WB:=_kosp; FAKS_K.put() ?};
            FAKS_K.cntx_pop()
         |? _wyb=0
         || _wyn:=0
         ?}
      ?};
      _wyn=1 & __mgkos.next()
   !}
?};
__mgkos.cntx_pop();
_wyn

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 2bc87f9e52867cb74bf9a60f0e7ba89b6fca1bd3b2989197fbe42947c7d4a1b6e270529fdc752b4f6d92a6e0211c57b9de652b214742240eff77ea03e2085df135b9a4e1cf0cff967b23dafeff1d9f9b746c9bd6a0ff759d065b9ceab553d7a0e65a6e4fa8c6a2f00b33c18e8cd007a8b8668f8023de2bc4e01e9cef0aaf3748
