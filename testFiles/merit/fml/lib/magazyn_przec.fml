:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: magazyn_przec.fml
:: Utworzony: 02.10.2015
:: Autor: AWI
::======================================================================================================================
:: Zawartość: Magazyn - przecena
::======================================================================================================================


\sprprzec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy na danym magazynie otwarty jest arkusz przecen
::       parametr _c decyduje o tym czy na danym arkuszu jest dany indeks
::   WE: _a - magazyn
::       _b - data
::       [_c] - indeks materialowy
::       [_d] - godzina dokumentu
::       [_e] - ref dokumentu przeceny
::   WY: 1-jest 0-brak 2-jest otwarta przecena 3-indeks na przecenie 4-indeks na zamknietej przecenie
::  OLD: \sprprzec/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>7 || _c:=null ?} || _c:=null ?};
_time:={? var_pres('_d')=type_of(time()) || _d || time(0,0,0) ?};
_nprc:={? var_pres('_e')=type_of('') || _e || '' ?};

_wyn:=0;
INN.cntx_psh();
INP.cntx_psh();
INN.use('inw_nwyc');
INP.use('inw_pwyc');
INN.index('INN');
INN.prefix(_a);
{? INN.last()
|| {!
   |? _dokprc:=_nprc<>'' & (INN.INP_R=_nprc | INN.INR_R=_nprc);
      _akcprc:={? INN.INP_R<>''
               || exec('FindAndGet','#table',ND,INN.INP_R,,"(';ZT'*STAT_REJ)>1",0)
               || INN.D<>date(0,0,0)
               ?};
      _akcprc:=_akcprc & {? INN.INR_R<>''
                         || exec('FindAndGet','#table',ND,INN.INR_R,,"(';ZT'*STAT_REJ)>1",0)
                         || INN.D<>date(0,0,0)
                         ?};
      {? (INN.D=date(0,0,0) & (_b<INN.DI | (_b=INN.DI & (INN.TI=time(0,0,0) | _time<=INN.TI))))
       | (INN.D<>date(0,0,0) & ~_akcprc & ~_dokprc)
      || {? exec('FindInSet','#table','INP','KOD',_c,INN.ref)<>null
         || _wyn:=3
         || _wyn:=2
         ?}
      |? {? _c=null
         || _b<INN.D | (_b=INN.D & ~_dokprc & (INN.T=time(0,0,0) | _time<INN.T))
         || _b<INN.D | (_b=INN.D & ~_dokprc & (INN.T=time(0,0,0) | _time<=INN.T))
         ?}
      || {? exec('FindInSet','#table','INP','KOD',_c,INN.ref)<>null
         || _wyn:=4
         || _wyn:=1
         ?}
      ?};
      ~_wyn & INN.prev()
   !}
?};
INN.cntx_pop();
INP.cntx_pop();
_wyn


\innw_add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [Mario] [2008]
:: OPIS: dodanie naglowka inwentaryzacji oraz przejscie do redakcji pozycji
::   WE: [_a] - magazyn domyslnie ST.MAG
::       [_b] - data generacji
::   WY: 1-dolaczono 0-nie dolaczono
::  OLD: \innw_add/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
_st_mag:=ST.MAG;
_byl:=0;
{? _>=1 || {? type_of(_a)<>7 || _a:=ST.MAG || _byl:=1 ?} || _a:=ST.MAG ?};
{? _>=2 || {? type_of(_b)<>4 || _b:=date(0,0,0) ?} || _b:=date(0,0,0) ?};

ST.MAG:=_a;
_symmag:=ST.MAG().SYM;
_wyn:=0;

{? ~exec('czy_z_ok','okresy',1)
|| 1
|? ~(ST.MAG().TYP*'EWI')
|| FUN.info('Przecena dostępna jest w magazynach ewidencyjnych.'@)
|? exec('openprz','magazyn_przec')
|| FUN.info('W magazynie %1 istnieje otwarty arkusz przecen.\n'
    'Niemożliwe wprowadzenie nowej przeceny dla magazynu.'@[_symmag])
|? exec('openinw','magazyn_inw',0)
|| FUN.info('W magazynie %1 istnieje otwarty arkusz inwentaryzacyjny.\n'
    'Niemożliwe wprowadzenie nowej przeceny dla magazynu.'@[_symmag])
|? exec('dokiprin','magdok_wspolne',1)
|| FUN.info('W magazynie %1 istnieją niezaakceptowane dokumenty przecen.\n'
    'Niemożliwe wprowadzenie nowej przeceny dla magazynu.'@[_symmag])
|? exec('dokiprin','magdok_wspolne',0)
|| FUN.info('W magazynie %1 istnieją niezaakceptowane dokumenty różnic inwentaryzacyjnych.\n'
    'Niemożliwe wprowadzenie przeceny dla magazynu.'@[_symmag])
|| {? _byl || INN.clear() ?};
   INN.blank();
   INN.DI:=_b;
   INN.ODDZ:=ST.ODDZ;
   INN.MG:=ST.MAG;
   INN.AR:=ST.AR;
   INN.RODZ:='P';
   POM.TYPDOK:='INN'; POM.TAB:='INN';
   {? _byl
   ||
      INN.NR:=exec('numer_new','numery','PACZKA');
      exec('znak','numery','INN',0)
   ?};

   {? INN.add()
   ||
      _var_innpop:=exec('var_innpop','magazyn_inw');
      _var_innpop.PO_FIRST:=1;

::    Parametr 'context' wykorzystywany w:
::    - exec('inn_pozycje_red','magazyn_przec')
::    - exec('inn_zakoncz_red','magazyn_przec')
::    Parametr 'var_innpop' wykorzystywany w:
::    - exec('inn_pozycje_red','magazyn_przec')
::    - exec('inn_zakoncz_red','magazyn_przec')
      params_set('context',params_get(),'var_innpop',_var_innpop);

      exec('inn_win_edit_set','magazyn_przec');
      {? _byl | INN.edit("exec('check_inn','magazyn_przec')")
      ||
         _wyn:=INN.put();
         {? _wyn & _var_innpop.PO_FIRST=1
         || _brakPoz:=exec('FindInSet','#table','INP','INP',INN.ref())=null();
            exec('obl_prwr','magazyn_przec',1);
            {? _brakPoz
            || BPMN.END:=1;
               exec('inp_ark','magazyn_przec');
               {? BPMN.END=2 & exec('FindInSet','#table','INP','INP',INN.ref())<>null()
               || exec('inn_zakoncz_wer','magazyn_przec')
               ?}
            ?}
         ?}
      ||
         _brakPoz:=exec('FindInSet','#table','INP','INP',INN.ref())=null();
         exec('delprzec','magazyn_przec',_brakPoz);
         _wyn:=0
      ?}
   ?}
?};
ST.MAG:=_st_mag;
_wyn


\openprz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: sprawdza czy na danym magazynie otwarta jest przecena
::   WY: 0-jest 1-nie jest
::  OLD: \openprin/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
INN.cntx_psh();
INN.use('inw_nwyc');
INN.index('INDP');
INN.prefix(ST.MAG,date(0,0,0));
_wyn:=INN.last;
INN.cntx_pop();
_wyn


\check_inn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: Sprawdzanie daty rozpoczecia przeceny
::   WY: '' lub akronim pola do poprawy
::  OLD: \spr_inn/inweko.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:='';
{? INN.STAT_REJ='T'
|| 1
|? INN.DI=date(0,0,0)
|| FUN.info('Podaj datę rozpoczęcia.'@); _wyn:='DI'
|? ~(INN.DI>=date(ST.AR,ST.AM,1) & INN.DI<=date(ST.AR,ST.AM,0))
|| FUN.info('Data rozpoczęcia przeceny'
      '\nmusi zawierać się w danym okresie.'@); _wyn:='DI'
|? ~exec('po_di','magazyn_przec')
|| _wyn:='DI'
|? (_ok:=1;
   {? INN.TYP_P=null() || _ok:=0; _wyn:='TYP_P'; _txt:='przychodu' ?};
   {? INN.TYP_M=null() || _ok:=0; _wyn:='TYP_M'; _txt:='rozchodu' ?};
   _ok=0)
|| FUN.info('Niewypełniony typ dokumentu %1.'@[_txt])
|? (_tab:=obj_new(1); _tab[1]:=ST.MAG; _tmg:=1+ST.MAG().TYP; _ok:=1;
   _typy_upr:=exec('typ_dok','lmg','TYPYDOK.INW=\'E\'',,,1,_tab);
   {? _typy_upr*INN.TYP_P().T=0 || _ok:=0; _wyn:='TYP_P'; _txt:=INN.TYP_P().T ?};
   {? _typy_upr*INN.TYP_M().T=0 || _ok:=0; _wyn:='TYP_M'; _txt:=INN.TYP_M().T ?};
   _ok=0)
|| FUN.info('Brak uprawnień do dokumentów przeceny typu: %1.'@[_txt])
|| 1
?};
_wyn


\po_di
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: sprawdzanie po edycji daty przeceny
::   WE: [_a] - czy sprawdzenie tylko daty 0-nie(domyslnie) 1-tak(bez komunikatow) 2-tak(tabela komunikatow)
::       [_b] - sprawdzana data INN.DI(domyslnie)
::       [_c] - ref magazynu
::       [_d] -godzina IIN.TI
::   WY: 1-jest OK 0-nie jest to dopieszczone ...
::  OLD: \po_di/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=1 || {? type_of(_a)<>1 || _a:=0 ?} || _a:=0 ?};
{? _>=2 || {? type_of(_b)<>4 || _b:=INN.DI ?} || _b:=INN.DI ?};
{? _>=3 || {? type_of(_c)<>7 || _c:=MG.ref() ?} || _c:=MG.ref() ?};
_tim:={? var_pres('_d')=type_of(time()) || _d || INN.TI ?};

_wyn:=1;

_dat:=_b; _typ:={? ~_a || INN.TYP || 'P' ?}; _mag:=_c; _ref:={? ~_a || INN.ref() || null ?};

INN.cntx_psh;
INN.index('INN');
INN.prefix(_mag);
{? INN.last
|| _prev:=0;
   {? _ref=INN.ref || _prev:=INN.prev() || _prev:=1 ?};
   {!
   |? {? _prev
      ||
         {? INN.DI>_dat
         || {? ~_a
            || FUN.info('Ostatnia data rozpoczęcia przeceny to: %1.\n'
                'Niemożliwe wprowadzenie przeceny z datą wcześniejszą.'@[form(INN.DI,,2)])
            |? _a=2
            || exec('add_kom','#message','W magazynie: %1'
                ' ostatnia data rozpoczęcia przeceny to: %2'@[MG.SYM,form(INN.DI)],4);
               exec('add_kom','#message','- niemożliwe wprowadzenie przeceny z datą wcześniejszą lub równą'@,110)
            ?};
            _wyn:=0; 0
         || {? INN.DI=_dat & (_tim=time(0,0,0) | _tim<=INN.TI)
            || {? ~_a
               || FUN.info('Ostatnia data rozpoczęcia przeceny to: %1.\n'
                   'Niemożliwe wprowadzenie przeceny z datą wcześniejszą lub równą.'@[form(INN.DI,,2)])
               |? _a=2
               || exec('add_kom','#message','W magazynie: %1'
                   ' ostatnia data rozpoczęcia przeceny to: %2'@[MG.SYM,form(INN.DI)],4);
                  exec('add_kom','#message','- niemożliwe wprowadzenie przeceny z datą wcześniejszą lub równą'@,110)
               ?};
               _wyn:=0; 0
            || 0
            ?}
         ?}
      || 0
      ?}
   !}
?};
INN.cntx_pop;
{? _wyn & ~_a & (_opi:=exec('spr_znag','magazyn_inw',_dat,3,,,,,_tim))>0
|| {? (_opi=1
     & FUN.ask('Istnieją dokumenty niezaakceptowane w magazynie.'
        '\nNiemożliwe wprowadzenie przeceny dla magazynu.'
        '\n\nWyświetlić niezaakcepowane dokumenty?'@))
     | (_opi=2
     & FUN.ask('Od danej daty istnieją dokumenty.'
        '\nNiemożliwe wprowadzenie przeceny dla magazynu.'
        '\n\nWyświetlić wystawione dokumenty?'@))
     | (_opi=3
     & FUN.ask('Do danej daty istnieją dokumenty z nieuzupełnioną ceną dostawy.'
        '\nNiemożliwe wprowadzenie przeceny dla magazynu.'
        '\n\nWyświetlić wystawione dokumenty?'@))
   || X_Xc.select
   ?};
   _wyn:=0
?};
_wyn


\innw_pop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: Poprawianie naglowka przeceny
::  OLD: \innw_pop/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('czy_z_ok','okresy',1) || return('') ?};

_var_innpop:=exec('var_innpop','magazyn_inw');
_var_innpop.PO_FIRST:=0;

:: Parametr 'context' wykorzystywany w:
:: - exec('inn_pozycje_red','magazyn_przec')
:: - exec('inn_zakoncz_red','magazyn_przec')
:: Parametr 'var_innpop' wykorzystywany w:
:: - exec('inn_pozycje_red','magazyn_przec')
:: - exec('inn_zakoncz_red','magazyn_przec')
params_set('context',params_get(),'var_innpop',_var_innpop);

exec('inn_win_edit_set','magazyn_przec');
{? exec('be_inn','magazyn_przec')
|| {? ~INN.r_lock(1,1)
   || FUN.info('Arkusz jest w trakcie edycji przez innego użytkownika.'
         '\nPoprawa arkusza niemożliwa.'@)
   || {? INN.edit("exec('check_inn','magazyn_przec')")
      || INN.put(1);
         exec('obl_prwr','magazyn_przec',0)
      ?};
      INN.r_unlock()
   ?}
?};
''


\be_inn
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [Mario] [2008]
:: OPIS: formula przed dla usun, popraw
::   WY: 1- jest OK 0- nie jest dobrze
::  OLD: \be_inn/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=1;
{? INN.D<>date(0,0,0)
|| FUN.info('Przecena zaakceptowana.\nModyfikacja niemożliwa.'@);
   _wyn:=0
?};
_wyn


\delprzec
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: Usuwanie calego arkusza
::   WE: [_a] - bez pytania
::  OLD: \delprzec/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
_bezPytania:={? var_pres('_a')=type_of(0) || _a || 0 ?};

{? exec('be_inn','magazyn_przec')
|| {? ~INN.INP & ~INN.INR
   || {? ~exec('spr_blok','magazyn_inw',INN.ref)
      || FUN.info('Arkusz jest w trakcie edycji przez innego użytkownika.\n'
            'Usunięcie niemożliwe.'@)
      |? _bezPytania
         | FUN.ask('Czy usunąć cały arkusz?'@)
      ||
         do();
         INP.index('INP');
         INP.prefix(INN.ref);
         {? INP.first()
         || {!
            |? exec('usu_inpd','magazyn_inw',INP.ref);
               INP.del()
            !}
         ?};
         {? ~INN.count
         || POM.TYPDOK:='INN'; POM.TAB:='INN';
            numer:=INN.NR; oldnumer:=1;
            exec('nr_old','numery');
            INN.del()
         || undo()
         ?};
         end
      ?}
   || FUN.info('Usunięcie arkusza dostępne\n'
       'po uprzednim usunięciu dokumentów różnicowych\n'
       'oraz anulacji zakończenia przeceny.'@)
   ?}
?};
''


\inp_ark
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [Mario] [2008]
:: OPIS: wyswietla arkusz z cenami
::  OLD: \inp_ark/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
INP.win_sel('WYC');
INP.win_edit('WYC');
INP.win_patt('WYC');
INP.index('MGR');
INP.prefix(INN.ref);
exec('inp_actions','magazyn_przec');
params_set(params_get());
{? INN.D<>date(0,0,0)
|| _result:=INP.select(,,,'ZDUPCG:DG')
|| _result:=INP.select();
   exec('obl_prwr','magazyn_przec',1)
?};
_result


\obl_prwr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: oblicza wartosci na plus i minus i wypelnia odpowiednie pola na INN
::   WE: _a - 1-wołać INN.r_lock(), 0-wpp
::  OLD: \obl_prwr/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
_ref:=INN.ref(); _wrp:=0; _wrm:=0; _dat:={? INN.D<>date(0,0,0) || INN.D || INN.DI ?};
INP.cntx_psh();
INP.index('MGR');
INP.prefix(_ref);
{? INP.first
|| {!
   |? exec('obl_stan','magazyn_stan',INP.M,1,,,,_dat);
      {? INP.C>INP.SE
      || _wrm+=(INP.C-INP.SE)*BEER.SD $2
      || _wrp+=(INP.SE-INP.C)*BEER.SD $2
   ?};
      INP.next()
   !}
?};
INP.prefix();
INP.cntx_pop();
INN.WRP:=_wrp; INN.WRM:=_wrm;
{? _a=0 | INN.r_lock(1,1)
|| INN.put(1);
   {? _a || INN.r_unlock() ?}
?};
1


\akc_i_ce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: akceptaja przeceny
::   WE: [_a] 0(domyślnie) nie, 1-auto akceptacja
::  OLD: \akc_i_ce/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
_autoakc:={? var_pres('_a')=type_of(0) || _a || 0 ?};
_ref:=INN.ref;
_czyp:=(exec('FindInSet','#table','INP','INP',_ref)<>null);
_inwp:=INN.TYP_P;
_inwm:=INN.TYP_M;

_ok:=1;
_tab:=obj_new(1); _tab[1]:=ST.MAG;
_txt:='';
_typy_upr:=exec('typ_dok','lmg','TYPYDOK.INW=\'E\'',,,1,_tab);
{? _typy_upr*INN.TYP_P().T=0 || _ok:=0; _txt+=INN.TYP_P().T ?};
{? _typy_upr*INN.TYP_M().T=0 || _ok:=0; _txt+=INN.TYP_M().T ?};

{? ~_ok
|| FUN.info('Brak uprawnień do dokumentów przeceny typu: %1.'@[_txt])
|? ~_czyp
|| FUN.info('Brak pozycji na arkuszu.'@); _ok:=0
|? INN.DI~1<>ST.AR
|| FUN.info('Przecenę rozpoczęto w roku %1'
      '.\nNależy zmienić okres obrachunkowy na zgodny z rozpoczęciem przeceny.'@[$(INN.DI~1)]);
   _ok:=0
|? ~exec('spr_akci','magazyn_inw')
|| FUN.info('Poprzednia przecena nie została zakończona.'@); _ok:=0
|? _inwp=null
|| FUN.info('Niewypełnione pole dokumenty przychodu.'@); _ok:=0
|? _inwm=null
|| FUN.info('Niewypełnione pole dokumenty rozchodu.'@); _ok:=0
|? INN.D=date(0,0,0) & exec('spr_znag','magazyn_inw',INN.DI,0,,,,INN.ref())>0
|| _ok:=0;
   {? FUN.ask('Do daty rozpoczęcia przeceny nadal niezaakceptowano'
           '\nwszystkich dokumentów.'
           '\nNiemożliwe zakończenie przeceny.'
           '\n\nWyświetlić niezzakcepowane dokumenty?'@)
   || X_Xc.select
   ?}
|? INN.D=date(0,0,0) & exec('spr_znag','magazyn_inw',INN.DI,2,,,,INN.ref(),INN.TI)>0
|| _ok:=0;
   {? FUN.ask('Od daty rozpoczęcia przeceny istnieją'
           '\ndokumenty zaakceptowane.'
           '\nNiemożliwe zakończenie przeceny.'
           '\n\nWyświetlić dokumenty?'@)
   || X_Xc.select
   ?}
|? exec('dokiprin','magdok_wspolne',0)
|| FUN.info('W magazynie istnieją niezaakceptowane dokumenty różnic inwentaryzacyjnych.\n'
    'Niemożliwe zakończenie przeceny dla magazynu.'@);
   _ok:=0
|? INN.D=date(0,0,0)
|| _ok:=FUN.ask('Czy zakończyć rejestrację przeceny?'@); {? _ok || INN.D:=INN.DI; INN.T:=INN.TI; INN.STAT_REJ:='T' ?}
|| _ok:=0
?};

{? _ok=1
|| {? INN.TYP='C' || exec('aktualse','magazyn_stan') ?};
   _refm:=null;
   _refp:=null;
   _dat:=INN.D;
   _tim:=INN.T;
   _tip:={? _tim<>time(0,0,0) || _tim+(1/60) || _tim ?};
   _tran:=0;

   INP.index('INP');
   INP.prefix(_ref);
   {? INP.first
   || {!
      |?
         SM.index('SM');
         SM.prefix(INP.IN().MG,INP.M);
         {? SM.first & SM.S>0
         || _wgdst:=SM.MAG().TYP='DOSTEWI' & (SM.M().M_ATR<>null() | (';DAPZ'*SM.M().IDMOB)>1);
            {? INP.SE<>0 & INP.C<>INP.SE
            ||
::             rozchod
               {? ~_tran & _refm=null
               ||
::                naglowki dokumentow
                  _refm:=exec('addnag','magdok_nag',INP.IN().MG,_dat~1,_dat~2,_inwm,'N',,_dat,,,,,,,,,,,,,_tip,,'T');
                  _refp:=exec('addnag','magdok_nag',INP.IN().MG,_dat~1,_dat~2,_inwp,'N',,_dat,,,,,,,,,,,,,_tip,,'T');
                  do();
                  _tran:=1;
                  {? _refm=null | _refp=null || undo() ?}
               ?};
               _cena:=exec('biez_cen','ceny_dok',SM.M,SM.MAG,_dat,,_tim);
               {? ~_wgdst
               || ND.clear; ND.seek(_refm);
                  _dk:=exec('adddk','magdok_poz',_refm,INP.M,SM.S,_cena,_dat,,,,,,,,7);
                  DK.cntx_psh();
                  DK.prefix();
                  {? DK.seek(_dk)
                  || exec('aktmil2','magdok_poz');
                     DK.put;
                     exec('update','rezerwacje','DK',DK.ref(),ND.MAG,DK.M,DK.IL,DK.SRDK);
                     exec('obl_stan','magazyn_stan',DK.M,1,DK.N().MAG)
                  ?};
                  DK.cntx_pop()
               ?}
            ?};
            {? INP.SE<>0 & INP.C<>INP.SE
            ||
::             przychod
               ND.clear; ND.seek(_refp);
               OKR.cntx_psh();
               OKR.index('MC');
               OKR.prefix(REF.FIRMA,1);
               {? OKR.first()
               ||
                  SC.cntx_psh();
                  {!
                  |?
                     SC.use('stc__'+ST.ODDZ+($OKR.ROK+2));

                     SC.index('SC');
                     SC.prefix(INN.MG,INP.M);
                     {? SC.first
                     ||
                        _cen_ewi:=SC.C;
                        {!
                        |?
                           {? SC.S>0
                           ||
                              _dk:=exec('adddk','magdok_poz',_refp,INP.M,SC.S,INP.SE,SC.D,,,,,,,,7,SC.RDK,SC.NDK,
                                 ,SC.SRDK,SC.PRDK,,,,,,SC.STATS,SC.SCEAN);
                              DK.cntx_psh();
                              DK.prefix();
                              {? DK.seek(_dk)
                              || exec('aktmil2','magdok_poz');
                                 DK.WARZ:=DK.WAR;
                                 DK.put;
                                 exec('obl_stan','magazyn_stan',DK.M,1,DK.N().MAG)
                              ?};
                              DK.cntx_pop();
                              {? _wgdst
                              || ND.cntx_psh();
                                 ND.clear; ND.seek(_refm);
                                 _dk:=exec('adddk','magdok_poz',_refm,INP.M,SC.S,_cena,_dat,,,,,,,,7,SC.RDK,SC.NDK,
                                   SC.DK_C,SC.SRDK,SC.PRDK,,,,,,,SC.SCEAN);
                                 DK.cntx_psh();
                                 DK.prefix();
                                 {? DK.seek(_dk)
                                 || exec('aktmil2','magdok_poz');
                                    DK.put;
                                    exec('update','rezerwacje','DK',DK.ref(),ND.MAG,DK.M,DK.IL,DK.SRDK);
                                    exec('obl_stan','magazyn_stan',DK.M,1,DK.N().MAG)
                                 ?};
                                 DK.cntx_pop();
                                 ND.cntx_pop()
                              ?}
                           ?};
                           SC.next
                        !}
                     ?};
                     OKR.next
                  !};
                  SC.cntx_pop()
               ?};
               OKR.cntx_pop()
            ?}
         ?};
         INP.next
      !}
   ?};

   {? _refm<>null
   || exec('dk_sum','magdok_wspolne',_refm);
      ND.clear();
      {? ND.seek(_refm) || INN.INR:=ND.NR; INN.INR_S:=ND.SYM; INN.INR_R:=BB.refsql(ND.ref) ?}
   ?};
   {? _refp<>null
   || exec('dk_sum','magdok_wspolne',_refp);
      ND.clear();
      {? ND.seek(_refp) || INN.INP:=ND.NR; INN.INP_S:=ND.SYM; INN.INP_R:=BB.refsql(ND.ref) ?}
   ?};

   INN.D:=_dat;
   INN.T:=_tim;
   INN.STAT_REJ:='T';
   INN.put(1);
   {? _tran || end() ?};
   {? _autoakc & _refm<>null()
   || ND.prefix();
      {? ND.seek(_refm) || exec('nd_zakoncz','magdok_nag',1,,1) ?}
   ?};
   {? _autoakc & _refp<>null()
   || ND.prefix();
      {? ND.seek(_refp) || exec('nd_zakoncz','magdok_nag',1,,1) ?}
   ?}
|? INN.D<>date(0,0,0)
|| FUN.info('Arkusz jest zaakceptowany.'@)
||
:: rezygnacja
   1
?};
''


\wyc_i_ce
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2008]
:: OPIS: wycofanie akceptacji przeceny
::  OLD: \wyc_i_ce/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('czy_z_ok','okresy',1)
|| return()
|? INN.D=date(0,0,0)
|| FUN.info('Przecena nie jest zaakceptowana.'@);
   return
?};
_ref:=INN.ref;
{? exec('openprz','magazyn_przec')
|| FUN.info('W magazynie istnieje otwarty arkusz przecen.\n'
    'Niemożliwe wycofanie akceptacji przeceny.'@)
|? exec('dokiprin','magdok_wspolne',1,INN.INP_R,INN.INR_R)
|| FUN.info('W magazynie istnieją niezaakceptowane dokumenty przecen.\n'
    'Niemożliwe wycofanie akceptacji przeceny dla magazynu.'@)
|? exec('spr_znag','magazyn_inw',INN.D,2,INN.INP_R,INN.INR_R,,INN.ref(),INN.T)>0
|| {? FUN.ask('Od daty rozpoczęcia przeceny wystawiono dokumenty.'
           '\nNiemożliwe wycofanie akceptacji przeceny.'
           '\n\nWyświetlić wystawione dokumenty?'@)
   || X_Xc.select
   ?}
|? INN.D<>date(0,0,0) & exec('spr_akdd','magazyn_inw')
 & FUN.ask('Czy anulować przecenę\nz jednoczesnym usunięciem dokumentów przeceny?'@)
||
:: anulowanie akceptacji
   _ok:=1;
   exec('ini_kom','#message','Wycofanie przeceny'@);

   __PARSES.pushEnv();
   __PARSES.setVal('OddzialLogProd',INN.ODDZ);
   _args:=__PARSES.args('OkresRok');
   _args.OBSZAR:='LMG';
   _args.AR:=INN.DI~1;
   _args.AM:=INN.DI~2;
   __PARSES.setVal('OkresRok',_args);
   __PARSES.setEnv('LMG_MAG');

   do();
   _mag:=INN.MG; _ar:=INN.D~1; _am:=INN.D~2;

   {! _i:=1..2 |!
      {? _i=1
      || _nr:=INN.INP;_n_ref:=INN.INP_R;_type:=INN.TYP_P
      |? _i=2
      || _nr:=INN.INR;_n_ref:=INN.INR_R;_type:=INN.TYP_M
      ?};

      _find:=0;
      ND.clear();
      {? _n_ref<>''
      ||
         _ref:=_n_ref;
         _find:=ND.seek(_ref,(8+_n_ref))
      ||
         ND.index('NAGDOK');
         {? _nr & ND.find_key(_ar,_am,_mag,_type,_nr)
         || _find:=1
         ?}
      ?};

      {? _find=1
      ||
         {? ND.Z='T'
         || _ok:=0;
            undo();
            FUN.info('Anulowanie przeceny niemożliwe.\n\n'
             'Należy najpierw wycofać zakończnie dokumentu %1.'@[ND.SYM])
         ||
            {? exec('n_usun','magdok_nag',0,0)=0 || _ok:=0; undo() ?}
         ?}
      || _ok:=1
      ?}
   !};

   _ok:=do_state()=1;

   {? _ok
   || __PARSES.popEnv();
      INN.D:=date(0,0,0); INN.T:=time(0,0,0); INN.INP:=0; INN.INR:=0; INN.INP_S:=INN.INR_S:=''; INN.INP_R:='';INN.INR_R:='';
      INN.STAT_REJ:='N';
      {? ~INN.put(1)
      || _ok:=0; undo()
      ?};
      end()
   || end();
      __PARSES.popEnv()
   ?};
   exec('end_kom','#message')
?}


\wyc_dr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [2009+]
:: OPIS: drukowanie przeceny
::  OLD: \wyc_dr/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
_wydr:=exec('rep_exec','#b_report','','lmg_prze0001','Przecena',2,,,,,,'W')


\adwycpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: akcja Dolacz dla przeceny
::  OLD: \adwycpoz/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
M.cntx_psh();
M.win_dict('NL_WERST');
M.actions('NL_WERST','W');
INP.blank;
{? INP.edit("exec('spr_inpm','magazyn_inw')")
|| INP.MGR:=INP.M().MGR;
   INP.add(1);
   exec('poinpedi','magazyn_przec')
?};
M.cntx_pop()


\poinpedi
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: po dolaczeniu, poprawie dla przeceny
::  OLD: \poinpedi/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
INP.KTM:=INP.M().KTM;
INP.NKTM:=INP.M().N;
INP.MGR:=INP.M().MGR;
INP.put(1);
1


\powycpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: akcja Popraw dla przeceny
::  OLD: \powycpoz/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
{? INP.r_lock(1,1)
|| {? INP.edit("exec('spr_inpm','magazyn_inw')")
   || INP.put;
      exec('poinpedi','magazyn_przec')
   ?};
   INP.r_unlock
|| FUN.info('Pozycja zablokowana przez innego użytkownika.'@)
?}


\dewycpoz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: akcja Usun dla przeceny
::  OLD: \dewycpoz/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=INP.sel_aget(); INP.sel_adel();
{? _tab.size()
|| {? FUN.ask('Czy usunąć zaznaczone rekordy?'@)
   || do();
      _tab.clear();
      {? _tab.first()
      ||
         INP.cntx_psh();
         {!
         |?
            {? (INP.clear; INP.seek(_tab.REF,INP.name))
            || {? INP.r_lock(1,1) || INP.del() || undo() ?}
            || undo()
            ?};
            _tab.next()
         !};
         INP.cntx_pop()
      ?};
      end()
   ?}
|| {? INP.r_lock(1,1)
   || {? FUN.ask('Czy usunąć daną pozycję?'@) || INP.del ?}
   || FUN.info('Pozycja zablokowana przez innego użytkownika.'@)
   ?}
?}


\przec_kr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [Mario] [2008]
:: OPIS: przecena wg kryterium
::  OLD: \przec_kr/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
{? INP.IN().D=date(0,0,0)
||
   _error:=0;
   _dalej:=1;
   _choice:=FUN.choice('Wybierz jedną z opcji'@,1,'Indeks: %1'@[INP.M().KTM],'Grupa: %1'@[INP.M().MGR().KOD],'Wszystkie'@);
   _choice2:={? _choice || FUN.choice('Wybierz jedną z opcji'@,1,'Procent'@,'Przepisz &cenę'@) || 0 ?};
   {? ~_choice2 || _choice:=0 ?};

   {? _choice & _choice2=1
   ||
      undefine();
      define('PRC',-10,'Podaj procentową zmianę'@);
      _dalej:=def_edit("{? DEFINE.PRC<=-100
                        || FUN.info('Należy podać wartość większą od -100.'@);
                           0
                        || 1
                        ?}")
   ?};

   {? _dalej=1
   ||
::    [rr] formulka blokuje poprawiane rekordy + zwraca wynik 1-nie poprawiono 0-poprawiono
      _form:="{? INP.r_lock(1,1)
              || {? _a=1 || _cen:=(INP.C*(DEFINE.PRC))/100; INP.SE:=(INP.C+_cen)$INP.M().DOKL_C;
                            {? INP.SE=0 & INP.C<>0 || INP.SE:=0.01 ?}
                 |? _a=2 || INP.SE:=INP.C
                 ?};
                 {? INP.SE<0 || INP.SE:=0.01 ?};
                 INP.put();
                 INP.r_unlock;
                 0
              || 1
              ?}
              ";

      INP.cntx_psh;
      {? _choice=1
      ||
         _nag:=INP.IN; _ktm:=INP.M;
         INP.index('KOD');
         INP.prefix(_nag,_ktm);
         {? INP.first || {!|? _error+=_form(_choice2); INP.next !} ?}
      |? _choice=2
      ||
         _nag:=INP.IN; _mgr:=INP.M().MGR;
         INP.index('MGR');
         INP.prefix(_nag,_mgr);
         {? INP.first || {!|? _error+=_form(_choice2); INP.next !} ?}
      |? _choice=3
      ||
         _nag:=INP.IN;
         INP.index('INP');
         INP.prefix(_nag);
         {? INP.first || {!|? _error+=_form(_choice2); INP.next !} ?}
      ?};
      INP.cntx_pop;
      {? _error
      || FUN.info('Z powodu edycji niektórych pozycji arkusza przez innych\n'
          'użytkowników pominięto pozycje blokowane przez nich.\n'
          'Liczba zablokowanych pozycji: %1.'@[form(_error)])
      ?}
   ?}
|| FUN.info('Przecena jest zaakceptowana.\nModyfikacja ceny niemożliwa.'@)
?};
''


\gen_ark
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [Mario] [2008]
:: OPIS: generacja arkusza przecen
::  OLD: \gen_ark/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~INN.r_lock(1,1)
|| FUN.info('Arkusz jest w trakcie edycji przez innego użytkownika.\n'
      'Wprowadzenie nowej generacji arkusza niemożliwe.'@)
||
   INN.get;
   {? exec('FindInSet','#table','INP','INP',INN.ref())<>null
   || {? ~exec('spr_blok','magazyn_inw',INN.ref)
      || FUN.info('Arkusz jest w trakcie edycji przez innego użytkownika.\n'
            'Wprowadzenie nowej generacji arkusza niemożliwe.'@);
         _oki:=0
      |? (_oki:=FUN.ask('Wygenerowano już arkusz.\nCzy go usunąć?'@))
      || INP.index('INP');
         INP.prefix(INN.ref);
         {? INP.first()
         || {!
            |? {? INP.r_lock(1,1)
               || _ok:=INP.del()
               || _ok:=INP.next
               ?};
               _ok
            !}
         ?}
      ?}
   || _oki:=1
   ?};

   {? _oki
   ||
      _choice:=FUN.choice('Wybierz sposób generowania arkusza'@,1,'Wg &stanów'@,'Zakres od.. do..'@
                          ,'Wg &maski'@,'Z &wyborem'@)
   ?};

   {? _oki & _choice=1
   ||
      SM.index('SA');
      SM.prefix(ST.MAG);
      {? SM.first
      ||
         _size:=SM.size;
         _licz:=0;
         _time:=time();
         {!
         |?
            _licz+=1; progress(_licz/_size*100,SM.M().KTM,'Generacja przeceny'@);
            {? SM.S>0 & exec('sprm_ndz','magdok_wspolne',INN.MG,SM.M,INN.DI,INN.TI)>0
            || exec('add_one','magazyn_przec',INN.ref,SM.M)
            ?};
            SM.next
         !}
      ?}
   |? _oki & _choice=2
   || POMOC.RODZ:='T';
      MGR.index('KOD');
      MGR.prefix('T');
      {? MGR.first() || BEER.ODG:=MGR.ref ?}; {? MGR.last()  || BEER.DOG:=MGR.ref ?};
      M.index('RODZ');
      M.prefix('T');
      {? M.first() || BEER.ODM:=M.ref ?}; {? M.last()  || BEER.DOM:=M.ref ?};
      BEER.win_edit('ODDO');
      {? BEER.edit()
      || {? BEER.T='G'
         ||
            MGR.index('KOD');
            MGR.prefix('T');
            {? MGR.first
            ||
               _size:=MGR.size;
               _licz:=0;
               _time:=time();
               {!
               |?
                  _kod:=MGR.KOD;
                  _licz+=1; progress(_licz/_size*100,MGR.KOD,'Generacja przeceny'@);
                  MGR.cntx_psh; _oki:=(_kod<=BEER.DOG().KOD & _kod>=BEER.ODG().KOD); MGR.cntx_pop;
                  {? _oki
                  ||
                     M.index('MGR');
                     M.prefix(MGR.ref,'T');
                     {? M.first
                     ||
                        {!
                        |?
                           {? exec('sprm_ndz','magdok_wspolne',INN.MG,M.ref(),INN.DI,INN.TI)>0
                           || exec('add_one','magazyn_przec',INN.ref,M.ref)
                           ?};
                           M.next
                        !}
                     ?}
                  ?};
                  MGR.next
               !}
            ?}
         ||
            M.index('RODZ');
            M.prefix('T');
            {? M.first
            ||
               _size:=M.size;
               _licz:=0;
               _time:=time();
               {!
               |?
                  _licz+=1; progress(_licz/_size*100,M.KTM,'Generacja przeceny'@);
                  _kod:=M.KTM;
                  M.cntx_psh; _oki:=(_kod<=BEER.DOM().KTM & _kod>=BEER.ODM().KTM); M.cntx_pop;
                  {? _oki
                  || {? exec('sprm_ndz','magdok_wspolne',INN.MG,M.ref(),INN.DI,INN.TI)>0
                     || exec('add_one','magazyn_przec',INN.ref,M.ref)
                     ?}
                  ?};
                  M.next
               !}
            ?}
         ?}
      ?}
   |? _oki & _choice=3
   || BEER.win_edit('MASK');
      {? BEER.edit()
      || {? form(BEER.MSK)='' || BEER.MSK:='*' ?};
         M.index('RODZ');
         M.prefix('T');
         {? M.first
         ||
            _size:=M.size;
            _licz:=0;
            _time:=time();
            {!
            |?
               _licz+=1; progress(_licz/_size*100,M.KTM,'Generacja przeceny'@);
               {? exec('analmask','magazyn_inw',@.BEER.MSK,{? @.BEER.T='G' || M.MGR().KOD || M.KTM ?})
               || {? exec('sprm_ndz','magdok_wspolne',INN.MG,M.ref(),INN.DI,INN.TI)>0
                  || exec('add_one','magazyn_przec',INN.ref,M.ref)
                  ?}
               ?};
               M.next()
            !}
         ?}
      ?}
   |? _oki & _choice=4
   ||
      _acr_sel:=M.mk_sel('Materiały'@,'P',0,'gen_ark_acrsel');
      M.win_fld(_acr_sel,,'MGR','KOD',,8,,1,'Grupa'@);
      M.win_fld(_acr_sel,,'KTM',,,20,,1,'Indeks'@);
      M.win_fld(_acr_sel,,'N',,,40,,1,'Nazwa'@);
      M.win_act(_acr_sel,0,'Formuła','Akceptuj'@@,,,"exec('akcmprc','magazyn_przec')",,1
         ,1,"exec('akcmprc','magazyn_przec')");
      M.win_act(_acr_sel,0,'Szukaj');
      M.win_act(_acr_sel,0,'Kolejność');
      M.win_sel(_acr_sel);
      M.index('ARODZ');
      M.prefix('T','T');
      M.select
   ?};
   exec('obl_prwr','magazyn_przec',0);
   INN.r_unlock();
   echo()
?};
echo();
prgs_clr();
''


\add_one
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [Mario] [2008]
:: OPIS: dodanie jednej pozycji do arkusza
::   WE: _a - ref naglowka arkusza
::       _b - indeks materialowy
::       [_c] - nowiuska cena
::   WY: ref dodanej pozycji lub null
::  OLD: \add_one/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
{? _>=3 || {? type_of(_c)<>1 || _c:=0 ?} || _c:=0 ?};

_wyn:=null;
INP.cntx_psh;
INP.index('MGR');
INP.prefix();
{? ~INP.find_key(_a,_b)
||
   INP.blank();
   INP.IN:=_a;
   INP.M:=_b;
   INP.KTM:=INP.M().KTM;
   INP.NKTM:=INP.M().N;
   INP.MGR:=INP.M().MGR;
   _wyn:={? INP.add(1)
         || INP.C:=INP.SE:=exec('biez_cen','ceny_dok',INP.M,ST.MAG,INP.IN().DI,,INP.IN().TI);
            INP.SE:=_c;
            INP.put;
            INP.ref
         || INP.null
         ?}
?};
INP.cntx_pop;
_wyn


\akcmprc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2008]
:: OPIS: akceptacja zaznaczonych pozycji = przepisanie ich na arkusz wg kartoteki materialowej
::  OLD: \akcmprc/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
_tab:=M.sel_aget();
M.sel_adel();
sel_exit;
{? _tab.size
||
:: zaznaczonych kilka pozycji
   _tab.clear;
   {? _tab.first
   || _size:=_tab.size;
      _licz:=0;
      _time:=time();
      {!
      |? {? (M.clear; M.seek(_tab.REF,))
         || _licz+=1;
            progress(_licz/_size*100,M.KTM,'Wybór materiałów'@);
            {? exec('sprm_ndz','magdok_wspolne',INN.MG,M.ref(),INN.DI,INN.TI)>0
            || exec('add_one','magazyn_przec',INN.ref,M.ref)
            ?}
         ?};
         _tab.next
      !}
   ?}

||
:: jedna pozycja
   {? (_err:=exec('sprm_ndz','magdok_wspolne',INN.MG,M.ref(),INN.DI,INN.TI);_err>0)
   || exec('add_one','magazyn_przec',INN.ref,M.ref)
   || {? ~_err
      || FUN.info('Indeks na niezaakceptowanym dokumencie przyjęcia.\nDołączenie do arkusza niemożliwe.'@)
      || FUN.info('Indeks na zaakceptowanym dokumencie przyjęcia (data i godzina powyżej daty i godziny przeceny).\n'
                  'Dołączenie do arkusza niemożliwe.'@)
      ?}
   ?}
?}


\jmdlainp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: ustawia jednostke miary dla INP
::  OLD: \jmdlainp/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
{? (INP.name='inw_pwyc' | ~INP.C) & INN.D=date(0,0,0) & INP.r_lock(1,1)
|| INP.C:=exec('biez_cen','ceny_dok',INP.M,INN.MG,INN.DI,,INN.TI);
   INP.put(1);
   INP.r_unlock()
?};
BEER.INPJM:=INP.M().J;
''


\inn_win_edit_set
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Ustawia okno redakcji tabeli INN, wymagane pola, okna słowników
::   WE: [_a] - akronim okna
::----------------------------------------------------------------------------------------------------------------------
_win_red:=exec('inn_win_edit','magazyn_przec');
{? INN.D=date(0,0,0)
|| _ff:="params_exec('inn_pozycje_red','magazyn_przec')";
   INN.win_ebtn(_win_red,'text=%1,btn_label_align=center,panel=bottom,align=begin'['Poz&ycje'@],_ff);
   _ff:="params_exec('inn_zakoncz_red','magazyn_przec')";
   exec('zakoncz','#window',INN,_win_red,1,_ff,0, exec('help_red_zakoncz','#window','PRC'),
      exec('text_red_zakoncz','#window','INN'))
?};
exec('ok_esc','#window',INN,_win_red,1,,,,,exec('help_red_ok','#window','Z'),exec('text_red_ok','#window'),
exec('help_red_esc','#window','A'));
INN.win_edit(_win_red);
exec('set_efld_opt','magazyn_inw',_win_red)


\inn_win_edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zwraca okno redakcji tabeli INN
::   WE: [_a] - akronim okna
::   WY: akronim okna redakcji
::----------------------------------------------------------------------------------------------------------------------
{? var_pres('_a')<>type_of('') || _a:='' ?};

_win_akr:=
   {? _a<>''   || _a
               || 'DAT'
   ?};

{? _win_akr='DAT'
:: Tymczasowe okno redakcji
|| _win_red:=INN.mk_edit('Przecena'@);
   INN.win_ewin(_win_red,,_win_akr);
   _win_red
:: Okno redkacji
|| _win_akr
?}


\inn_pozycje_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Przecena - Pozycje - okno redagowania
::   WE: params_get()   - ustawiane w exec('zdnag_pop','zamdst_nag')
::                      - ustawiane w exec('zddol','zamdst_nag')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_btnRuleResult:='';

_fld:=params_exec('inn_edit_finisher','magazyn_przec',INN.ref());
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| {? params_exec('inp_ark','magazyn_przec')
   || _btnRuleResult:='key:F2';
      _mp:=params_get().context.mp;
      _mp.done()
   ?}
?};

_btnRuleResult


\inn_zakoncz_red
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Przecena - Zakończ - okno redagowania
::   WE: params_get()   - ustawiane w exec('zdnag_pop','zamdst_nag')
::                      - ustawiane w exec('zddol','zamdst_nag')
::   WY: 'key:F2' - jeśli pola nagłówka dokumentu sprzedażyprawidłowo wypełnione
::       'edit:ACRONYM' - akronim niewłaściwie wypełnionego pola nagłówka dokumentu sprzedaży
::       '' - wartość domyślna jeśli main nie zmieni na powyższe
::----------------------------------------------------------------------------------------------------------------------
_mp:=params_get().context.mp;
_autoakc:=exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_DWYD')
        & exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_DAPZ')
        & exec('autoAkc','#b__box',_mp,600580,'LMG_MAG_EAMG');

_btnRuleResult:='';

_fld:=params_exec('inn_edit_finisher','magazyn_przec',INN.ref());
{? _fld<>''
|| _btnRuleResult:='edit:'+_fld
|| {? exec('inn_zakoncz','magazyn_przec',_autoakc)
   || _btnRuleResult:='key:F2';
      _mp.done()
   ?}
?};

_btnRuleResult


\inn_edit_finisher
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Kod wykańczający po INN.edit() w różnych kontekstach
::   WE: _a - INN.ref()
::   WE: params_get()   - ustawiane w exec('innw_add','magazyn_przec')
::                      - ustawiane w exec('innw_pop','magazyn_przec')
::----------------------------------------------------------------------------------------------------------------------
:: Sprawdzenie poprawności wypełnienia pól nagłówka dokumentu sprzedaży
_fld:=params_exec('check_inn','magazyn_przec');
{? _fld<>''
|| _fld
|| _inn:=_a;
   _out:=params_get().context.out;
   _mp:=params_get().context.mp;
   _akcja:=params_get().context.akcja;
   _var_innpop:=params_get().var_innpop;

   {? _akcja='Dołącz' | _akcja='START_TODO' | _mp.pathProc()
   || _wyn:=INN.put();
      {? _var_innpop.PO_FIRST=1 & _wyn & INN.TYP='A'
      || exec('ark_inn','magazyn_inw',0,0);
         exec('aktzamst','magazyn_inw')
      ?};
      _var_innpop.PO_FIRST:=2
   |? _akcja='Popraw' | _mp.pathTodo()
   || 1
   ?};
   ''
?}


\inn_zakoncz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Zakonczenie rejestracji inwentaryzacji - zmiana statusu
::   WE: [_a] 0(domyślnie) nie, 1-auto akceptacja
::   WY: 0 - nie zakończono redakcji dokumentu, 1 - zakończono redakcję dokumentu
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
_autoakc:={? var_pres('_a')=type_of(0) || _a || 0 ?};

{? ~exec('czy_z_ok','okresy',1)
|| 1
|? INN.STAT_REJ='T'
|| FUN.info('Zakończono rejestrację przeceny.\nZadanie zostanie zakończone.'@);
   _wyn:=1
|? INN.STAT_REJ='N'
|| INN.cntx_psh();
   exec('akc_i_ce','magazyn_przec',_autoakc);
   INN.cntx_pop();
   {? INN.get() || _wyn:=INN.STAT_REJ='T' ?}
?};
_wyn


\inn_zakoncz_poz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Przecena - Zakończ - okno wertowania pozycji
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? {? type_of(params_get())=type_of(obj_new('obj')) & var_pres('var_innpop',params_get())>0
   || _mp:=params_get().context.mp;
      _autoakc:=exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_DWYD')
              & exec('chk_role','#b__box',OPERATOR.USER,'LMG_MAG_DAPZ')
              & exec('autoAkc','#b__box',_mp,600580,'LMG_MAG_EAMG');
      {? exec('inn_zakoncz','magazyn_przec',_autoakc)  || _mp.done(); 1 ?}
   || exec('inn_zakoncz_wer','magazyn_przec');
      {? INN.get() || INN.STAT_REJ='T' ?}
   ?}
|| sel_exit()
?}


\inn_actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Przecena nagłówki - zarządzanie dostępem do akcji
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_wer:=INN.win_sel('?');

_grayed:='';
{? exec('upr_cm','ceny')
|| _grayed+={? INN.STAT_REJ='N' || 'W' |? INN.STAT_REJ='T' || 'PUGZT' || '' ?}
|| _grayed+='DPUGZTW'
?};
_grayed+={? INN.INP_R='' & INN.INR_R='' & INN.DK_LN_R='' || 'I' || '' ?};
INN.actions_grayed(_wer,_grayed)


\inp_actions
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Przecena pozycje - zarządzanie dostępem do akcji
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_wer:=INP.win_sel('?');
{? INN.STAT_REJ='T'
|| _grayed:='O'
|| _grayed:=''
?};
{? ~exec('upr_cm','ceny')
|| _grayed+='ZDPUCG:DG'
?};
INP.actions_grayed(_wer,_grayed)


\inp_brek
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
exec('inp_actions','magazyn_przec');
exec('jmdlainp','magazyn_przec')


\inp_se_be
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AWI [17.00]
:: OPIS: Przed redakcją INP.SE
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? INP.name()+3='wyc'
|| exec('upr_cm','ceny')
|| 1
?}


\inn_zakoncz_wer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [17.00]
:: OPIS: Przecena - Zakończ
::       Obsługa w formule main
::----------------------------------------------------------------------------------------------------------------------
_params:=exec('mp_run_a','#b__box');
_params.ACT_UID:='LMG_MAG_DPRZ';
_params.UIDREF:=INN.uidref();
_params.AKCJA:='Zakończ_wer';

exec('mp_run','#b__box',_params);
:: Ustawienie masek tabel przeceny
exec('prz_open','open_tab')


\spr_dttm
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [20.42]
:: OPIS: sprawdza podana date wg daty ostatniej inwentury
::   WE: _a - magazyn
::       _b - data
::       [_c] - 1-zwróć czas 0-(domyslnie)-tylko kontrola 2-kontrola czasu
::       [_d] - podany czas
::   WY: _c=0: 1-można zmieniać czas 0-nie można
::       _c=1: czas
::       _c=2: ''-ok 'A'-pełna 'C'-ciągła
::----------------------------------------------------------------------------------------------------------------------
_tryb:={? var_pres('_c')=type_of(0) || _c || 0 ?};
_time:={? var_pres('_d')=type_of(time()) || _d || time(0,0,0) ?};
_res:={? _tryb=1 || time(0,0,0) |? _tryb=2 || '' || 0 ?};

INN.cntx_psh();
INP.cntx_psh();
INN.use('inw_nwyc');
INP.use('inw_pwyc');
INN.index('INN');
INN.prefix(_a);
{? INN.last()
|| {? INN.D<>date(0,0,0)
   || _din:=INN.D;
      _tin:=INN.T;
      _typ:='P'
   || _din:=INN.DI;
      _tin:=INN.TI;
      _typ:='P'
   ?}
|| _din:=date(0,0,0);
   _tin:=time(0,0,0);
   _typ:=''
?};
{? _din=date(0,0,0)
|| _res:={? _tryb=1 || time(0,0,0) |? _tryb=2 || _typ:='' || 1 ?}
|? _b>_din
|| _res:={? _tryb=1 || time(0,0,0) |? _tryb=2 || '' || 1 ?}
|? (_b=_din & _tin<>time(0,0,0))
|| {? _tryb=2
   || _res:={? _time<=_tin || _typ || '' ?}
   || _res:={? _tryb=1 || _tin+=1 || 1 ?}
   ?}
?};
INN.cntx_pop();
INP.cntx_pop();
_res


\sprakcminus
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [22.26]
:: OPIS: sprawdzenie czy zaakceptowano dokument PRC-
::   WE: _a - magazyn
::   WY: 1-tak lub go nie ma 0-jest i niezaakceptowano
::  OLD: \sprakcmi/pomoc.fml
::----------------------------------------------------------------------------------------------------------------------
_res:=1;
_mag:=_a;
INN.cntx_psh();
INP.cntx_psh();
INX.cntx_psh();
INY.cntx_psh();
INN.use('inw_nwyc');
INP.use('inw_pwyc');
INX.use('inw_xwyc');
INY.use('inw_ywyc');
INN.index('INDP');
INN.prefix(_mag);
{? INN.last() || {? INN.INR_R<>'' || _res:=exec('FindAndGet','#table',ND,INN.INR_R,,"ND.Z")='T' ?} ?};
INN.cntx_pop();
INP.cntx_pop();
INX.cntx_pop();
INY.cntx_pop();
_res

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:35 8248aa83dacd1e7162920d929efacec3acce1a04df9577903b0ff839c98babfa9c64fd860210e30792f6e92af4fbae78653adb81286362e5757a6c82310e19da181e1474630770f5c69a7dfa620eeca810139b79c80e053f86c847823d82d4e3826ce2e1b415e4711d2a888d0f4b9d23368b52c757faff4ac4226676da191a02
