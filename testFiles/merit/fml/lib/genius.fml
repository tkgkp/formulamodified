:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: genius.fml
:: Utworzony: 25.01.2022
:: Autor: bryQ
:: Systemy:
::======================================================================================================================
:: Zawartość: Obsługa ChatBot powered by Genius
:: uzywanie:   exec('start','genius');
:: zwraca obiekt DialogFlow
::======================================================================================================================
:: Opis obiektu erp
:: {
::      "sessionId": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXX",  -GUID obsługiwany automatycznie
::      "display_message": "Odpowiedź z MERIT", - tekst, który zostanie wyświetlony w chacie
::      "data": [                               - tablica obiektów zwróconych jako lista elementów
::         {
::            "type": "choice", - typ listy, doswolone wartości: link/google/choice/wiki/label *
::            "values": [
::               {
::                  "desc": "opis",                        - opis wyświetlany przy elemencie listy
::                  "display_name": "FK/0002/00011",       - nazwa linku
::                  "link": "mbase://test123/test123/t",   - link, który jest uruchamiany po kliknięciu
::                  "icon": "bi bi-file-text icon-size-lg" - icona zgodnie z: https://icons.getbootstrap.com
::                                                               domyślnie ikona dokumentu
::               }
::            ]
::         }
::      ]
::   }
:: * link - każdy element listy będzie wyświetlał opis(desc) oraz nazwę linka(display_name) i będzie prowadził do (link)
::   google - służy do wyświetlania wyniku wyszukiwarki google, wyświetlany jako opis(desc), display_name oraz link
::   choice - wyświetlenie listy wyboru w postaci elementów do klikania, po kliknięcu zostanie wywołany exe zdefiniowany
::            w link, przykładowo: "link": "exec('test','genius_zws','p1',2)"
::   wiki   - służy do wyświetlenia wyników wyszukiwań w dokuwiki
::   label  - wyświetla jedynie display_name i desc - nie tworzy linka
::
:: exec('test1','genius_zws') - Przykład tworzenia listy linków i dostępu do parametrów
:: exec('test2','genius_zws') - Przykład interakcji Merit - chat (tylko na poziomie merit, bez DF)
:: exec('test3','genius_zws') - Przykład wyboru z Merit - chat (tylko na poziomie merit, bez DF)
:: exec('test4','genius_zws') - Przykład pobierania i ustawiania dodatkowych parametrów ERP
::======================================================================================================================



\start
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [22.26]
:: OPIS: klasa do obsługi DialogFlow
::   WE:
::   WY: __dialogflow
:: ~OST: INENVGET,INFOPEN
::----------------------------------------------------------------------------------------------------------------------
_fld:="31+form(_a)";
_mth:="31+form(_a)";
{? ~exec('check','genius')
||
   __dialogflow:=obj_new(
::POLA
         _fld('RECO','Włączona opcja rozpoznawania mowy true/false'),
         _fld('SPEECHON','Włączona odpowiedź głosowa true/false'),
         _fld('AUTOSEND','Automatyczne wysyłanie true/false'),
         _fld('VOICE','Dźwięk odpowiedzi: Google polski, Microsoft Paulina, Microsoft Adam'),
         _fld('PITCH', 'Wysokość dźwięku zakres: 0 - 2'),
         _fld('RATE','Szybkość odtwarzania zakres: 0.5 - 2'),
         _fld('READMSG','Czy odpowiedź ma być czytana: ifVoiceUsed, never, always'),
         _fld('JAR','Uchwyt do dialog.jar-jar-with-dependencies.jar'),
         _fld('TALK_DECL','Deklaracja metody talk'),
         _fld('RECO_DECL','Deklaracja metody speech2txt'),
         _fld('RESPONSE_RAW','Odpowiedź DialogFlow'),
         _fld('RESPONSE','Obiekt odpowiedzi'),
         _fld('SAVELOG','Czy zapisywać wynik zapytań'),
         _fld('LOGTAB','tabela logów'),
         _fld('LOGFILE','Plik log'),
         _fld('SESSIONID','Id sesji DialogFlow'),
         _fld('ALLOK','Status DialogFlow'),
         _fld('W_WER','Wersja Dokuwiki'),
::DialogFlow
         _fld('QUERY','Wpisany dialog'),
         _fld('ANSWER','Odpowiedź z DialogFlow'),
         _fld('INTENT','Intencja'),
         _fld('PARAMETERS','Parametry zwrócone'),
         _fld('RESPONSEID','ID odpowiedzi'),
         _fld('ALLPARAMETERS','Czy wszystkie wymagane parametry są obecne'),
         _fld('INTERACT','Obiekt interakcji erp'),
::METODY
         _mth('init','inicjalizacja'),
         _mth('talk','wysyła treśc do DialogFlow'),
         _mth('log','zapisuje log'),
         _mth('parameters','pobiera parametry zwrócone przez DialogFlow'),
         _mth('setErpPar','ustawia wartość parametru dla przekazanej nazwy parametru ERP'),
         _mth('getErpPar','pobiera wartość parametru dla przekazanej nazwy parametru ERP'),
         _mth('getPar','pobiera wartość parametru dla przekazanej nazwy parametru'),
         _mth('getParCount','zwraca ilość wystąpień parametru o przekazanej nazwie'),
         _mth('getAnswer','Wysyła wiadomość i zwraca całość w strukturze dla web'),
         _mth('recognize','dla przekazanego dźwięku zwraca text'),
         _mth('config','zwraca konfigurację AI'),
         _mth('isnoerror','Sprawdza czy wystąpił błąd'),
         _mth('checkenv','Sprawdza czy ustawiona jest zmienna środowiskowa GOOGLE_APPLICATION_CREDENTIALS i czy jest plik'),
         _mth('authjson','Tworzy plik autoryzacyjny google'),
         _mth('getjson','zwraca jsona autoryzacyjnego dla google'),
         _mth('getgooglesearch','wyszukuje w internecie przekazana frazę'),
		 _mth('openAI','Wyświetla odpowiedź z chatGpt'),
		 _mth('chatPDF','Wyświetla odpowiedź z chatPdf'),
         _mth('set_interact','ustawia obiekt interact'),
         _mth('set_internal_interact','ustawia obiekt interact'),
         _mth('run','uruchamia formułę przekazaną z chatu'),
         _mth('dokuwikisearch','Wyszukuje w dokuwiki'),
         _mth('elasticsearch','Wyszukuje w ES')
         );


__dialogflow.elasticsearch:="

   _erp:=exec('erp_obj','genius',1,_max);
   _erp
";


__dialogflow.run:="
   _ret:=obj_new('response');
   _response:=obj_new('raw','erp');
   _raw:=obj_new('responseId','queryResult');
   _queryResult:=obj_new('queryText','languageCode','fulfillmentText','intentDisplayName','outputAudio', 'parameters');
   _queryResult.fulfillmentText:='';
   _raw.queryResult:=_queryResult;
   _response.raw:=_raw;
   _response.erp:=($_a)();
   .set_interact(_response.erp.interact);
   _ret.response:=_response;
   json_obj(_ret)
";




__dialogflow.chatPDF:="

	_all:='';
	_pdfs:= exec('pdfs','genius');
	_max:=3;
	_erp:=exec('erp_obj','genius',1,_max);
	_conn:=inet_get('https://api.chatpdf.com/v1/chats/message');
    _conn.append_header('Content-Type:application/json');
	_conn.append_header('x-api-key:sec_cx2Krcp9LsY9bZybaPoQT5YisU1GlI3M');
	_resp :='';
	_data:=obj_new(1);
	_cont:=obj_new(1);
	{! _i := 1 .. obj_len(_pdfs) |!
		_fn:=$(int((time~3)*rand))+$(int((time~3)*rand))+ '_ai.cpdf';
		_resfile:=fopen( _fn,'bw',1,,1);
		obj_del(_data);
		_data:=obj_new('sourceId','messages','referenceSources');
		_data.referenceSources:='false';
		_data.messages:=obj_new(1);
		_data.messages[1]:=obj_new('role','content');
		_data.messages[1].role:='user';
		_data.messages[1].content:=_a;
		_data.sourceId:=_pdfs[_i].id;
		_c:=json_obj(_data);
		_c:=gsub(_c,'\"true\"','true');
		_c:=gsub(_c,'\"false\"','false');
		_conn.http_post(_resfile,_c);
		_resfile.fclose(); &_resfile;
		_resfile:=fopen(_fn,'r',1,,1);
		_resp:='';
		{! |? (_part:=_resfile.fread())<>'\n' |!
			_resp+=utf8_maz(_part)
		!};
		_resfile.fclose(); &_resfile;
		ferase(_fn,1);
		obj_del(_cont);
		_cont:=json_parse(_resp);
		{? _cont.content * 'The source does not contain' = 0 & _cont.content * 'm sorry, but the information' = 0 & _cont.content * 'find relevant' = 0 & _cont.content * 'sorry' = 0 & _cont.content * 'Unfortunately' = 0 ||
			_all +='<h4>'+_pdfs[_i].name+'</h4>';
			_all += _cont.content
		?}
	!};
	_erp.display_message:='ChatPDF<hr/>'+_all;
	_erp
";

__dialogflow.openAI:="
    _max:=3;
	_erp:=exec('erp_obj','genius',1,_max);
	_wyn:= fopen(_a, 'r');
	_odp:='';
	{? _wyn
	||
	   {!|? (_wiersz:= fread(_wyn)) <> '\n' |!
			_odp:= _odp+utf8_maz(_wiersz)
		!};
		fclose(_wyn);
        ferase(_a,0)
	?};
    _erp.display_message:='OpenAI (gpt-3.5-turbo-0613) <hr/>'+gsub(_odp,'\n','<br>');
	_erp
";

__dialogflow.getgooglesearch:="
    _max:=3;
    _erp:=exec('erp_obj','genius',1,_max);
    _data:=obj_new(1);
    _data[1]:=obj_new('type','values');
    _data[1].type:='google';
    _data[1].values:=obj_new(_max);
    _erp.display_message:='Oto co znalazłem w internecie... <hr/>';
    _h:=inet_get('http://encode');
    _a:=_h.url_encode(_a);
    _q:=gsub(_a,' ','+');
   _ht:=inet_get('https://www.googleapis.com/customsearch/v1?q='+_q+'&key=AIzaSyCDe_uI9KxMEOhRONbVrwfjkIuB7OJp5Mc&cx=df0fd17ef5a3075d0');
   _get:=_ht.http_get();
   {? _get = 200 ||
      _body:=json_parse(_ht.get_data());
      {? _body.searchInformation.totalResults <> '0' ||
         {! _i:=1 .. obj_len(_body.items) |!
            {? _i <= _max ||
               _data[1].values[_i]:=obj_new('type','display_name','link');
               _data[1].values[_i].type:='google';
               _data[1].values[_i].display_name:='<h5>'+_body.items[_i].htmlTitle+'</h5>'+_body.items[_i].htmlSnippet +exec('get_image','genius', _body.items[_i]);
               _data[1].values[_i].link:=_body.items[_i].formattedUrl
            ?}
         !}
      ||    _erp.display_message:='Przeszukałem czeluście internetu, ale niczego ciekawego nie znalazłem';
            obj_del(_data);
            _data:=obj_new(1)
      ?}
   ?};
   obj_del(_erp.data);
   _erp.data:=_data;
   _erp
";


__dialogflow.dokuwikisearch:="
   _max:=5;
   _i:=1;
   _erp:=exec('erp_obj','genius',1,_max);
   _erp.display_message:='Oto co znalazłem w DokuWiki ('+exec('wersja','#system')+')... <hr/>';
   _erp.data[1].type:='wiki';
    _h:=inet_get('http://encode');
    _a:=_h.url_encode(_a);
    _q:=gsub(_a,' ','+');
   _ht:=inet_get('https://dokuwiki.macrologic.pl/dokuwiki/'+ AI.W_WER +'/doku.php?do=searchjs&id=start&q='+_q+'&st='+exec('gen_token','#help')+'&xrd=no');
   _get:=_ht.http_get();

   {? _get = 200 ||
      _body:=_ht.get_data();
      _json:=((_body * 'DATAJSON')+7) - _body - ((+_body) + 1 - (_body * 'ENDDATAJSON')  );
      _data:=json_parse(_json);


      {? (type_of(_data) <> type_of(~~)) & (obj_len(_data.data))  ||
         {! _i:=2 .. obj_len(_data.data) |!
            {? _i <= _max ||
               _erp.data[1].values[_i].display_name:='<h5>'+ gsub(gsub(_data.data[_i].resultHeader[1],'href=\"','href=\"https://dokuwiki.macrologic.pl'),'\" class','&st='+exec('gen_token','#help')+'\" target=_blank class') +'</h5>'+_data.data[_i].resultBody.snippet;
               _erp.data[1].values[_i].link:='test'
            ?}
         !}

      ||    _erp.display_message:='Przeszukałem czeluście Dokuwiki, ale niczego nie znalazłem'
      ?}
   ?};
   _erp
";

__dialogflow.setErpPar:="
_c:=_d:=0;
{! _i:=1 .. obj_len(.INTERACT.par)
|? _d=0 |!
   {? .INTERACT.par[_i].id = _a || _d:=_i ?};
   {? .INTERACT.par[_i].id =~~ & _c=0 || _c:=_i ?}
!};
{? _d > 0 || _c:=_d ?};
{? _c > 0 ||
   .INTERACT.par[_c].id:=_a;
   .INTERACT.par[_c].value:=_b
?};
~~
";

__dialogflow.getErpPar:="
_r:=~~;
{! _i:=1 .. obj_len(.INTERACT.par) |!
      {? .INTERACT.par[_i].id = _a || _r:=.INTERACT.par[_i].value ?}
!};
_r
";

__dialogflow.getPar:="

   _lip:=1;
   _val:='';
   _pars:=.parameters();
   _li:= obj_len(_pars);
  {? _li > 0 || _li:=_pars[1].count.cnt ?};
   {! _i:=1 .. _li |!
      {? -_pars[_i].name * -_a ||
         {? _=2
            || {? _lip = _b || _val:=_pars[_i].value ?}; _lip+=1
            || _val:=_pars[_i].value
         ?}
      ?}
   !};
   _val
";

__dialogflow.getParCount:="
   _val:=0;
   _pars:=.parameters();
   _li:= obj_len(_pars);
   {? _li > 0 || _li:=_pars[1].count.cnt ?};
   {! _i:=1 .. _li |!
      {? -_pars[_i].name * -_a || _val += 1?}
   !};
   _val
";


__dialogflow.checkenv:="
    _r:=1;
   {? envget('GOOGLE_APPLICATION_CREDENTIALS') = '' ||
      msg('Brak zmiennej środowiskowej GOOGLE_APPLICATION_CREDENTIALS. \nUstaw tą zmienną w systemie i wskaż w niej ścieżkę pliku autoryzacji genius.json (dysk:\\\\..\\\\merit\\\\bot\\\\genius.json)','Uwaga');
      _r:=0
    ||
      _f:=fopen(envget('GOOGLE_APPLICATION_CREDENTIALS'),'r');
       {? _f || fclose(_f) ||
         msg('Brak pliku '+envget('GOOGLE_APPLICATION_CREDENTIALS')+' wskazanego w zmiennej środowiskowej \nGOOGLE_APPLICATION_CREDENTIALS','Uwaga');
         _r:=0
       ?}
   ?};
   _r
";

__dialogflow.authjson:="

   _tmp:=envget('TEMP')+'/'+'gaut.dat';
::   _file:=fopen('@'+_tmp,'w');
	_file:=fopen(_tmp,'w');
     {? _file
      ||
        fwrite(_file,.getjson());
      fclose(_file)
     ?};
    _tmp
";

__dialogflow.init:="
     exec('init','genius');
     exec('import_def','genius','','genius_def.json',1);
     .RECO:={? XINFO.GEN_RECO = 'T' || 'true' || 'false' ?};
	 .SPEECHON:={? XINFO.GEN_SPON = 'T' || 'true' || 'false' ?};
     .AUTOSEND:={? XINFO.GEN_AUTO = 'T' || 'true' || 'false' ?};
	 .READMSG:=XINFO.GEN_AUTO;

     .VOICE:={? XINFO.GEN_VCE = 0 || 'Google polski' |? XINFO.GEN_VCE = 1 || 'Microsoft Paulina' ?};
     .LOGFILE:='dialogFlow.log';
     .SAVELOG:=1;
     .PITCH:=XINFO.GEN_PTCH;
     .RATE:=XINFO.GEN_RATE;
     .SESSIONID:='';
     .INTERACT:=exec('erp_interact','genius');
     .W_WER:=exec('mwer','genius');
::     .JAR:=lib_load('dialog.jar-jar-with-dependencies.dll',1,,'reverseClassLoader=1');
     .JAR:=lib_load_srv_jar('dialog.jar-jar-with-dependencies.jar');
     {? .JAR=0 ||
       .ALLOK:=0
      ||
          .TALK_DECL:=lib_decl(.JAR,,'String','talk','String', 'String', 'String');
::        .RECO_DECL:=lib_decl(.JAR,,'String','s2t','String');
        .ALLOK:=1
      ?};
    1
";

__dialogflow.parameters:="

   _t1 :=json_parse(.RESPONSE_RAW);
   _t2 :=_t1.qs.Parameters;
   _wyn:=obj_new(obj_len(_t2)*2);
   _par:=obj_new(3);
   _licz:=obj_new('cnt');
   _licz.cnt:=0;
   {? type_of(_t2) = 117 ||
      _list:=obj_ntab_names(_t2);
      {! _i:=1 .. obj_len(_list) |!
         {? _t2[_i].kindCase_ = 3 ||
            {? type_of(_par) = 117 || obj_del(_par) ?};
            _licz.cnt:=_licz.cnt+1;
            _par:=obj_new('name', 'value', 'kind', 'count');
            _par.name:=_list[_i];
            _par.value:=_t2[_i].kind_;
            _par.kind:=_t2[_i].kindCase_;
            _par.count:=_licz;
            _wyn[_licz.cnt] :=_par
         |? _t2[_i].kindCase_ = 5 ||
             _t3:=_t2[_i].kind_.fields_.mapData;
               _list1:=obj_ntab_names(_t3);
            {! _i1:=1 .. obj_len(_list1) |!
                _licz.cnt:=_licz.cnt+1;
               {? type_of(_par) = 117 || obj_del(_par) ?};
               _par:=obj_new('name', 'value', 'kind', 'count');
               _par.name:=_list1[_i1];
               _par.value:=_t3[_i1].kind_;
               _par.kind:=_t3[_i1].kindCase_;
               _par.count:=_licz;
               _wyn[_licz.cnt] :=_par
            !}
            |? _t2[_i].kindCase_ = 6 ||
            _t4:=_t2[_i].kind_.values_;
            {? type_of(_t4) <> 0 ||
               {! _i1a:=1 .. obj_len(_t4) |!
                  _list1:=obj_ntab_names(_t4[_i1a].kind_.fields_.mapData);
                  {! _i1:=1 .. obj_len(_list1) |!
                  _licz.cnt:=_licz.cnt+1;
                  {? type_of(_par) = 117 || obj_del(_par) ?};
                  _par:=obj_new('name', 'value', 'kind', 'count');
                  _par.name:=_list1[_i1];
                  _par.value:=_t4[_i1a].kind_.fields_.mapData[_i1].kind_;
                  _par.kind:=_t4[_i1a].kind_.fields_.mapData[_i1].kindCase_;
                  _par.count:=_licz;
                  _wyn[_licz.cnt] :=_par
                  !}
               !}
            ?}
            ?}
      !}
   ?};
   _wyn
";

__dialogflow.recognize:="
    _p:=obj_new(2);
    _r:=obj_new(2);
    _p[1]:='.'; _p[2]:=':';
    _r[1]:=''; _r[2]:='';
::   _tmp:='@'+envget('@TEMP')+'\\\\'+gsub(form(date,,2)+form(time,0)+($(rand)+5)+($(rand)+5),_p,_r)+'.ai';
_tmp:=envget('TEMP')+'\\\\'+gsub(form(date,,2)+form(time,0)+($(rand)+5)+($(rand)+5),_p,_r)+'.ai';
   _plik:=fopen(_tmp, 'w');
    {? _plik ||
      fwrite(_plik, maz_utf8(_a));
      fclose(_plik)
   ?};
   lib_call(.RECO_DECL, 1-_tmp)
";

__dialogflow.set_interact:="
   _c:=0;
   .INTERACT.status:=_a.status;
   {? _a.status = 0
   ||
      {! _i:=1 .. obj_len(.INTERACT.par) |!
         .INTERACT.par[_i].id:=~~;
         .INTERACT.par[_i].for:= ~~;
         .INTERACT.par[_i].value:=~~
      !}
    ||
      {! _i:=1 .. obj_len(.INTERACT.par) |!
         {? .INTERACT.par[_i].id =~~ & _c=0 || _c:=_i ?}
      !};
      .INTERACT.par[_c].id:=_a.par[1].id;
      .INTERACT.par[_c].for:=_a.par[1].for;
      .INTERACT.par[_c].value:=_a.par[1].value
   ?}
";

__dialogflow.set_internal_interact:="
    {! _i:=1 .. obj_len(.INTERACT.par) |!
      {? .INTERACT.par[_i].id <> ~~ & .INTERACT.par[_i].value=~~
         ||    .INTERACT.par[_i].value:=_a
      ?}
    !}
";

__dialogflow.getAnswer:="
   {? .INTERACT.status = 0
      || .talk(_a)
      || .set_internal_interact(_a)
   ?};
   _ret:=obj_new('response');
   _response:=obj_new('raw','erp');
   _raw:=obj_new('responseId','queryResult');
   _queryResult:=obj_new('queryText','languageCode','fulfillmentText','intentDisplayName','outputAudio', 'parameters');
   _queryResult.parameters:=.parameters();
   _queryResult.queryText:=.QUERY;
   _queryResult.languageCode:='pl';
   _queryResult.fulfillmentText:=.ANSWER;
   _queryResult.intentDisplayName:=.INTENT;
    {? .INTENT = 'znajdz.w.internecie'
    || _erp:=.getgooglesearch(.getPar('query'))
    |? .INTENT = 'openAI'
	|| _erp:=.openAI(.ANSWER);
	   _queryResult.fulfillmentText:=''
	|? .INTENT = 'chatpdf'
	|| _erp:=.chatPDF(.getPar('any'));
	   _queryResult.fulfillmentText:=''
	|| {? .ALLPARAMETERS
       || _erp:=exec('erp','genius',.INTENT,_queryResult.parameters);
:         {? var_press('erp.interact')>-1 || .set_interact(_erp.interact) ?}
          .set_interact(_erp.interact)
       || _erp:=exec('erp_obj','genius')
       ?}
    ?};

:   _erp.display_message:=.RESPONSE_RAW;
   _erp.sessionId:=.SESSIONID;
    _response.erp:=_erp;

   _raw.responseId:=.RESPONSEID;
   _raw.queryResult:=_queryResult;

   _response.raw:=_raw;
   _ret.response:=_response;
   json_obj(_ret)
";

__dialogflow.config:="
   _config:=obj_new('general','speech','chat');
   _chat:=obj_new('features');
   _chat.features:=exec('get_desc_agent','genius');
   _general:=obj_new('isErp','interm','enabled','group','ident','server');
   _general.group:=app_info('cluster_group');
   _general.ident:=app_info('app_ident');
   _general.isErp:='true';
   _general.interm:=exec('interm','#system');
   exec('czytaj','#stalesys',,XINFO);
   _server:=exec('server','#system');
   _general.server:='%1:%2'[_server.address,_server.port];
   _general.enabled:=XINFO.GEN_PO;
   _speech:=obj_new('useSpeechRecognition','speechOn','autosend','readMessage','voice','pitch','rate','mobile');
   _speech.useSpeechRecognition:= .RECO;
   _speech.speechOn:=.SPEECHON;
   _speech.autosend:=.AUTOSEND;
   _speech.readMessage:=.READMSG;
   _speech.voice:=.VOICE;
   _speech.pitch:=.PITCH;
   _speech.rate:=.RATE;
   _speech.mobile:=app_info('html_mobile');
   _config.general:=_general;
   _config.speech:=_speech;
   _config.chat:=_chat;
   _config
";

__dialogflow.isnoerror:="
   _ans:=json_parse(_a);
   _ret:=1;
   {? _ans.status.error = 1 ||
        _ret:=0
   ?};
   _ret
";


__dialogflow.talk:="

   {? +_a > 255 || _a:=255+_a ?};
   _a:=exec('df_date','genius',_a);
   _t1:=lib_call(.TALK_DECL, .SESSIONID, _a, .authjson());
   _e1:=.isnoerror(_t1);
   {? _e1 ||
      .RESPONSE_RAW:=_t1;
      _t2:=json_parse(.RESPONSE_RAW);
      .SESSIONID:=_t2.status.sessionId;
      .QUERY:=_t2.qs.Query;
      .ANSWER:=_t2.qs.FulfillmentText;
      .INTENT:=_t2.qs.Intent;
      {? .INTENT <> 'default.fallback.intent' & .INTENT <> 'rutynowe.powitanie' || exec('stat_add','st_common','A_GENIUS',.INTENT) ?};
      .ALLPARAMETERS:=_t2.qs.AllParameters;
      .RESPONSEID:=_t2.qs.ResponseId;
      {? .SAVELOG = 1 || .log(_t1) ?};
      .ANSWER
   ?};
   _e1
";

__dialogflow.getjson:="
   '
   {
     ""type"": ""service_account"",
     ""project_id"": ""wer2325-tbnr"",
     ""private_key_id"": ""425965317dac84118e2b2f6ebb51c4b789919c3b"",
     ""private_key"": ""-----BEGIN PRIVATE KEY-----\\\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCqeeXLOHA9Bsfj\\\\nhAglImeoKqkwPxDJcMx5BKb1Z+lgewd7SRrofE519nwoRkftR7PLPLX3t0J2q11R\\\\nyvMYMpOyfMWiqeigTKRzRnbheyMoUWWqarFPWFQfk9v1CdjqJYF2EGxWIKuPkENm\\\\nvkrCeQWnC3PcnRciIZP/LuxxM/AXDmlvCC4iZHeh7VGIGKmuD5k5FykICUFLJy8e\\\\nz/NnXc4sWFgSqDxmwGKCjvOeagSMXFMSxkVZTK88VIqFf1rliH/gd56J18DoOLqC\\\\nrAzFQvlbWdx3uP1S4X2YwSJzDy+w5INVdL/QvXGrypdm/nf4ASOFY8Y5BFqf2EXM\\\\nORNLBerfAgMBAAECggEAOYv6mVZM9RzT3yaTxU1O5oK4KDQxy35LV9LNNWxFaK8/\\\\nQEvWTIKhzcpN8R6Aa0XYGJQ+7Qcs5XhFgTXcR9/S4d6irJ1kjLAyl0NDICx8GsEX\\\\na6amgh1UEHDOQHJ5idjtUdiLaauPnl/ZkNZN0EYgNVp1WxSgWYIyPmMtp60br/w9\\\\nSe881MlOOszRZoUg7Zw3oS+n5vYBe91Tlz2ToqJIWUekNq9XPZVat1ZX9F+oRL8W\\\\nUMcZvr3M3dY26mMC7rU6COUb8MCo3Yvh54R8fjlcgvtcl99WYWSJVVhSih7c79yM\\\\nB3zu99ZIUsnF2jXZmSPXZb55N6L0XRglySDrO74NuQKBgQDZ+27LFZHjk+epyka5\\\\n5IR5bhZ3Q2nzcmOnbIDrzj6wqFHtM+QcR0tjLh/HP1PV1vBpa/vyRUJq3929jSKm\\\\nUE3gzpAvmAGj7Swe/9j8nBqNQyFvxbXU91U0pTEGjEiQ+nsZN7Lp/R45R5Ft+Lh8\\\\nKFr84DaSBgkjNPIgua3bq9Ou1QKBgQDINWU2haQJcrfbShL5z7WfyFOL6PVYils6\\\\ntxjx9OixplLXtaJNZ1hL0nXqjhhinVBKWI+ggZI6ItMcWEfQmebwI77yLjjS7mGV\\\\nprEuYLQeVDuH3OjIa4eIPP04NlOP7Vk0MR3zuAs0iY1oYX141N/UWjGUFKlbxnK4\\\\nBJGT1yRU4wKBgBqRnut58ZI/kNkNIpm91LfIR0y6FsvpgWQCwaP8O3/kxDeZP5CC\\\\n0BmCobTzbxB9ZkgzNT5OWs4UAz77WOHUn+lqxABJEsocOmh83sHLdSEKsaSiAIu4\\\\nqdYE3Hjj2GRzY1WriE8k3u40XvF8g1/+uzhfS8d4nNyBs5FxkFNaGi8RAoGAVcjT\\\\nOl5e4BGAh/ygTtvaFcGvUqaZ4bs+xdTIYnwu7Fe47WaNSZ87bRmbnsoN1stTKNfz\\\\nirGaJ0Detil5c/9NvZ2DZp+5h1/O/mFzT8ztwIUVEOzt7Vpts0l2soxMl8H6U+ur\\\\nys8UNgmuRohnS8visEmJLsr/mixY4VJL0k3/6kMCgYEAw6W/7Vv9FUF+Dr3JV6Vf\\\\navrz6ZPdNRy1x8PILmm0MS6PQABkw4Mv6lE6u/LEp9TKIljGGIu5hbpnzkTLoqJF\\\\nT+acENTPs4P55FA4+3DnVqphoEa5+BIz8iXU9/0amczu01HviELggRrfJydlQnwV\\\\nZvDOPWvAsOH4b2l34tU2IDM=\\\\n-----END PRIVATE KEY-----\\\\n"",
     ""client_email"": ""macrobot@wer2325-tbnr.iam.gserviceaccount.com"",
     ""client_id"": ""113462633061233871155"",
     ""auth_uri"": ""https://accounts.google.com/o/oauth2/auth"",
     ""token_uri"": ""https://oauth2.googleapis.com/token"",
     ""auth_provider_x509_cert_url"": ""https://www.googleapis.com/oauth2/v1/certs"",
     ""client_x509_cert_url"": ""https://www.googleapis.com/robot/v1/metadata/x509/macrobot%40wer2325-tbnr.iam.gserviceaccount.com"",
     ""universe_domain"": ""googleapis.com""

   }
   '
";

__dialogflow.log:="
     _file:=fopen(.LOGFILE,'uw',1,,1);
     {? _file.is_open
      ||
        fwrite(_file, _a);
      fclose(_file)
     ?}
"

?};
__dialogflow.init();
__dialogflow


\pdfs
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Bryq [rr.xx]
:: OPIS: zwraca listę pdf do przetworzenia
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
::src_IFEWIFVjOGvOVCbwIEW3A - zakres_podstawowy_dla_dziedziny_sprzedaz.pdf
::src_XErTDsmiitGXAiOHL5DEU - zakres_podstawowy_dla_dziedziny_magazyny.pdf
::src_Cs1BlWsNn4S7QRrNZDng2 - zakres_podstawowy_dla_dziedziny_zakupy.pdf
::src_yl1jooaq9AthH49xo0P3A - zakres_podstawowy_dla_dziedziny_plan_produkcji.pdf
::src_4YxXDtAWLuTjPCeRrUgyh - zakres_podstawowy_dla_dziedziny_produkcja.pdf
::src_hfd8gYwt0daR29kOPEtZR - zakres_podstawowy_dla_dziedziny_finanse.pdf
::src_jfQlNd7TukWQFKC2Gg2NX - zakres_podstawowy_dla_dziedziny_srodki_trwale.pdf
::src_13yTGMNHZ8PiRGC0BNIWf - zakres_podstawowy_dla_dziedziny_platnosci_elektroniczne.pdf

_p := obj_new(8);
{! _a := 1 .. obj_len(_p) |!
	_p[_a]:= obj_new('id','name')
!};
_p[1].id:='src_IFEWIFVjOGvOVCbwIEW3A';
_p[1].name:= 'Zakres podstawowy Sprzedaż';
_p[2].id:='src_XErTDsmiitGXAiOHL5DEU';
_p[2].name:= 'Zakres podstawowy Magazyn';
_p[3].id:='src_Cs1BlWsNn4S7QRrNZDng2';
_p[3].name:= 'Zakres podstawowy Zakupy';
_p[4].id:='src_yl1jooaq9AthH49xo0P3A';
_p[4].name:= 'Zakres podstawowy Plan Produkcji';
_p[5].id:='src_4YxXDtAWLuTjPCeRrUgyh';
_p[5].name:= 'Zakres podstawowy Produkcja';
_p[6].id:='src_hfd8gYwt0daR29kOPEtZR';
_p[6].name:= 'Zakres podstawowy Finanse';
_p[7].id:='src_jfQlNd7TukWQFKC2Gg2NX';
_p[7].name:= 'Zakres podstawowy Środki Trwałe';
_p[8].id:='src_13yTGMNHZ8PiRGC0BNIWf';
_p[8].name:= 'Zakres podstawowy Płatności Elektroniczne';
_p

\mwer
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Bryq [23.25]
:: OPIS: pobieranie wersji dla
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
'!'+STR.gsub(exec('wersja','#system'),'.','')



\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [22.26]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
:: sprawdzenie zmiennej środowiskowej dla administratora
_web_sesid:=app_info('web_sesid');
OPERATOR.USER:={? _web_sesid=''
               || exec('users','#users',exec('operatorKod','#users'))
               || exec('users','#users',app_info('web_user'))
               ?};
__develop:=
         {? var_pres('__develop')=type_of(0) || __develop
         || exec('is_develop','#var')
         ?};
:: obiekty standardowe - ustawienie niezależne od sposobu uruchomienia
exec(,'#libfml');
exec(,'class');
exec(,'_declall');
exec('__CHK','#object');
exec('VAR_DEL','#object');
exec('STR','#object');
exec('BIT','#object');
exec('MS','#object'); MS.conv:='UTF-8';
exec('PROGRESS','#object');
exec('FUN','#object');
exec('KOMM','#object');
exec('__FileLayer','#object');
exec('Plugin','#object');
REF.FIRMA:=exec('firma_ref','#firma',app_info('app_ident'));
exec('czytaj','#stalesys',,XINFO,'GEN_RECO','GEN_SPON','GEN_AUTO','GEN_PTCH','GEN_RATE','GEN_VCE');
~~


\check
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [22.26]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
var_press('__dialogflow')>0


\get_image
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [22.26]
:: OPIS: jeśli obiekt zawiera informacje nt obrazka, zwraca html z utworzonym tagiem img
::   WE: obiekt body szukania
::   WY: tag img lub ''
::----------------------------------------------------------------------------------------------------------------------
_r:='';
_is_pagemap:=0;
_glob:=obj_ntab_names(_a);
{! _i:=1 .. obj_len(_glob) |!
   {? _glob[_i] = 'pagemap' || _is_pagemap:=1 ?}
!};
{? _is_pagemap ||
_list:=obj_ntab_names(_a.pagemap);
   {! _i:=1 .. obj_len(_list) |!
      {? _list[_i] = 'cse_image'  ||
         {? ~(_a.pagemap.cse_image[1].src*'x-raw-image') ||  _r:='<br /><p><img src='+_a.pagemap.cse_image[1].src +' width="100%" style="width:100%; height:100%;" class="goo_img"></p>' ?}
      ?}
   !}
 ?};
 {? exec('interm','#system')>0 ||
	_r:=''
 ?};
_r


\erp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [22.26]
:: OPIS: Zwraca obiekt erp z wynikiem dzialania formuły intencji z ERP
::   WE: _a - intencja, _b - obiekt z parametrami
::   WY: obiekt _erp
::----------------------------------------------------------------------------------------------------------------------
_answer:=exec('find_intent','genius',_a,_b);
{? var_pres('_answer')<>type_of('')
|| _answer
|| _erp:=exec('erp_obj','genius');
   _erp.display_message:=_answer;
   _erp
?}


\erp_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [22.26]
:: OPIS: Okno definiowania intencji dla ChatBot-a
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
GEN_INT.index('LP');

: grupowe okienko modułu asystenta
_wnd:=GEN_INT.grp_make(,
   "
      GEN_ADD.index('GEN_INT')
   ",
   'genius',,,,
);
GEN_INT.grp_sel(_wnd,GEN_INT,'WER','Definicje'@,
   "
      grp_disp(GEN_ADD,'WER')
   ",,,
   15,,,,,
   'maximized'
);
GEN_INT.tab_splt(_wnd,,'horizontal','bottom');
GEN_INT.grp_sel(_wnd,GEN_ADD,'WER',,,,,,
   "
      {? grp_empty(GEN_INT,'WER')
      || '#disable'
      || GEN_ADD.prefix(GEN_INT.ref())
      ?}
   ",,,,
   'maximized_with_title'
);

_title:='Definicja asystenta Genius'@;
title('%1: %2'[exec('nazwa','#system'),_title],'title_bar',1);
title(_title,'tab',1);
GEN_INT.win_sel(_wnd);
GEN_INT.select(,1);
AreaTitle.setArea('ZWS_ADM');
AreaTitle.setTitle();
''


\gen_add_gen_int_bl
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [22.26]
:: OPIS: Wartość początkowa pola GEN_ADD.GEN_INT
::----------------------------------------------------------------------------------------------------------------------
GEN_INT.ref()


\edit_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [22.26]
:: OPIS: Fomuła wyświetlania okienka redagowania
::----------------------------------------------------------------------------------------------------------------------
exec('edytuj','#stalesys',XINFO,'GENIUS',,1);
~~


\find_intent
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [22.26]
:: OPIS: Wyszukuje intencje w definicji i zwraca przypisaną odpowiedź.
::   WE: _a - intencja
::   WY: Odpowiedź opisowa lub obiekt 'erp'
::----------------------------------------------------------------------------------------------------------------------
_val:='';
_sql:=sql('select GEN_ADD.NAME, GEN_ADD.GEN_INT as REF from GEN_ADD join GEN_INT where GEN_ADD.NAME=\':_a\'',_a);
_jest:=0;
GEN_INT.cntx_psh();
GEN_INT.prefix();
{? GEN_INT.seek(_sql.REF)
|| _val:=GEN_INT.FM;
   _jest:=1
?};
GEN_INT.cntx_pop();
{? _jest
|| ($_val)()
|| _erp:=exec('erp_obj','genius');
   _erp
?}


\get_kh
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [22.26]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_erp:=exec('erp_obj','genius',1,_max);
_data:=obj_new(1);
:_data[1]:=obj_new('type','values');
:_data[1].type:='link';
:_data[1].values:=obj_new(2);

:_data[1].values[1]:=obj_new('type','display_name','link');
:_data[1].values[1].type:='invoice';
:_data[1].values[1].display_name:='FK/0002/00011';
:_data[1].values[1].link:='mbase://test123/test123/t';

:_data[1].values[2]:=obj_new('type','display_name','link');
:_data[1].values[2].type:='invoice';
:_data[1].values[2].display_name:='FK/0002/00011';
:_data[1].values[2].link:='mbase://test123/test123/t';
:_erp.data:=_data;

_erp
:'Znalazłem kontrahentów o których prosiłeś!'


\eksport
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [22.26]
:: OPIS: Eksport definicji asystenta do pliku json.
:: ~OST: INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
_ret:=~~;

ctr_set('!application','filechooser','reset');
ctr_set('!application','filechooser','addDefaultFilter','Pliki json','json');
_ctrl:=ctr_call('!application', 'filechooser','showSaveDialog');
{? _ctrl
|| _l:=ctr_call('!application', 'filechooser','getSelectedFiles');
   _w:=_l.mk_sel(,,,'aaa',,,,,,,,);
   _l.win_fld(_w,,'DIR',,,30,,,,,,,,,,,);
   _l.win_fld(_w,,'FILENAME',,,64,,,,,,,,,,,);
   _l.win_fld(_w,,'I___NR',,,8,,,,,,,,,,,);
   {? _l.first()
   || _filename:='@'+_l.DIR+'/'+_l.FILENAME;
      _out:=fopen(_filename, 'Uw!', 0, 1, 1);
      {? ~_out.is_open() || return(_ret) ?};
      GEN_INT.cntx_psh();
      GEN_INT.clear();
      GEN_INT.prefix();
      GEN_INT.first();
      GEN_ADD.cntx_psh();
      GEN_ADD.index('GEN_INT');

      GEN_INT.json_records(_out,'NAME',,'B_DOMAIN','SYMBOL','FM',,'PAR',,'OPIS',,'CONTEXT',,'LP',,'GEN_ADD',"
         GEN_ADD.prefix(GEN_INT.ref());
         GEN_ADD.json_records(,'NAME',)
      ");
      GEN_ADD.cntx_pop();
      GEN_INT.cntx_pop();
      FUN.info('Eksport definicji zakończony sukcesem!'@,'Eksport definicji asystenta')
   || FUN.info('Nie wybrano żadnego pliku do eksportu definicji!'@,'Eksport definicji asystenta')
   ?}
|| _ret
?}


\import
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [22.26]
:: OPIS: Import definicji asystenta z pliku json.
:: ~OST: INFILECHOOSER
::----------------------------------------------------------------------------------------------------------------------
:{? var_press('__load')>0 || obj_del(__load) ?};
ctr_set('!application', 'filechooser','reset');
ctr_set('!application', 'filechooser','addDefaultFilter','Pliki *.json','json');
_ctrl:=ctr_call('!application', 'filechooser','showOpenDialog');
{? _ctrl
||
   _load:=ctr_call('!application', 'filechooser','getSelectedFiles');
   _w:=_load.mk_sel(,,,'definition',,,,,,,,);
   _load.win_fld(_w,,'DIR',,,30,,,,,,,,,,,);
   _load.win_fld(_w,,'FILENAME',,,64,,,,,,,,,,,);
   _load.win_fld(_w,,'I___NR',,,8,,,,,,,,,,,);
   {? _load.first()
   || exec('import_def','genius',_load.DIR,_load.FILENAME);
      FUN.info('Import definicji zakończony sukcesem!'@,'Import definicji asystenta')
   || FUN.info('Brak wskazanego pliku z definicją. Import definicji nie powiódł się!'@,'Import definicji asystenta')
   ?}
?}


\import_def
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [22.26]
:: OPIS: Mechanizm importu definicji asystenta - na podstawie tabeli pobranej ze wskazanego pliku json.
::   WE: _a - nazwa wskazanego pliku z definicją
:: ~OST: INFOPEN
::----------------------------------------------------------------------------------------------------------------------
{? _a='' ||
   _json:=fopen(_b,'Ur',1,1,1) ||
   _json:=fopen('@'+_a+'/'+_b,'Ur',,1,1)
?};

{? ~_json.is_open()
|| msg('Błąd otwarcia pliku %1.'[_a]);
   return(0)
|| _def:=json_tparse(_json,,,1,0);
   GEN_INT.cntx_psh();
   GEN_INT.index('AREA');
   _lp:=GEN_INT.size();
   B_DOMAIN.cntx_psh();
   B_DOMAIN.index('SYMBOL');
   _def.cntx_psh();
   _ndx:=_def.ndx_tmp(,,'TREE',,);
   _def.index(_ndx);
   {? _def.first()
   || _def.prefix(_def.ref());
      _loop:=_def.first();
      {!
      |? _loop
      |! _ref:=_def.ref();
         _def.cntx_psh();
         _ndx:=_def.ndx_tmp(,,'TREE',,);
         _def.index(_ndx);
         _def.prefix(_ref);
         _dom:={? _def.find_tab(1,'NAME',,'=','B_DOMAIN.SYMBOL') || _def.VAL || '' ?};
         B_DOMAIN.prefix(_dom);
         {? B_DOMAIN.first()
         || _domain:=B_DOMAIN.ref()
         || _domain:=null()
         ?};
         _name:={? _def.find_tab(1,'NAME',,'=','NAME') || _def.VAL || '' ?};
         {? ~GEN_INT.find_tab(1,'NAME',,'=',_name)
         || GEN_INT.B_DOMAIN:=_domain;
            GEN_INT.NAME:=_name;
            GEN_INT.FM:={? _def.find_tab(1,'NAME',,'=','FM') || _def.VAL || '' ?};
            GEN_INT.PAR:={? _def.find_tab(1,'NAME',,'=','PAR') || _def.VAL || '' ?};
            GEN_INT.OPIS:={? _def.find_tab(1,'NAME',,'=','OPIS') || _def.VAL || '' ?};
            GEN_INT.CONTEXT:={? _def.find_tab(1,'NAME',,'=','CONTEXT') || _def.VAL || '' ?};
            GEN_INT.LP:={? _def.find_tab(1,'NAME',,'=','LP') || #_def.VAL || 0 ?};
            _gen_int:={? _def.find_tab(1,'NAME',,'=','GEN_ADD') || _def.ref() || null() ?};
            {? GEN_INT.add()
            || _ref:=GEN_INT.ref();
               GEN_ADD.cntx_psh();
               GEN_ADD.index('GEN_INT');
               GEN_ADD.prefix(_ref);
               _def.cntx_psh();
               _ndx:=_def.ndx_tmp(,,'TREE',,);
               _def.index(_ndx);
               _def.prefix(_gen_int);
               _loop:=_def.first();
               {!
               |? _loop
               |! _def.cntx_psh();
                  _def.prefix(_def.ref());
                  _loop:=_def.first();
                  {!
                  |? _loop
                  |! _name:=_def.VAL;
                     GEN_ADD.NAME:=_name;
                     GEN_ADD.GEN_INT:=_ref;
                     GEN_ADD.add();
                     _loop:=_def.next()
                  !};
                   _def.cntx_pop();
                   _loop:=_def.next()
               !};
               _def.cntx_pop();
               GEN_ADD.cntx_pop();
               _def.ndx_drop(_ndx)
            ?}
         || GEN_INT.NAME:=_name;
            GEN_INT.B_DOMAIN:=_domain;
            GEN_INT.FM:={? _def.find_tab(1,'NAME',,'=','FM') || _def.VAL || '' ?};
            GEN_INT.PAR:={? _def.find_tab(1,'NAME',,'=','PAR') || _def.VAL || '' ?};
            GEN_INT.OPIS:={? _def.find_tab(1,'NAME',,'=','OPIS') || _def.VAL || '' ?};
            GEN_INT.CONTEXT:={? _def.find_tab(1,'NAME',,'=','CONTEXT') || _def.VAL || '' ?};
            GEN_INT.LP:={? _def.find_tab(1,'NAME',,'=','LP') || #_def.VAL || 0 ?};
            _gen_int:={? _def.find_tab(1,'NAME',,'=','GEN_ADD') || _def.ref() || null() ?};
            {? GEN_INT.put()
            || _ref:=GEN_INT.ref();
               GEN_ADD.cntx_psh();
               GEN_ADD.index('GEN_INT');
               GEN_ADD.prefix(_ref);
               _ndx:=_def.ndx_tmp(,,'TREE',,);
               _def.cntx_psh();
               _def.index(_ndx);
               _def.prefix(_gen_int);
               _loop:=_def.first();
               {!
               |? _loop
               |! _def.cntx_psh();
                  _def.prefix(_def.ref());
                  _loop:=_def.first();
                  {!
                  |? _loop
                  |! {? GEN_ADD.find_tab(1,'NAME',,'=',_def.VAL)
                     || GEN_ADD.NAME:=_def.VAL;
                        GEN_ADD.put()
                     || GEN_ADD.NAME:=_def.VAL;
                        GEN_ADD.GEN_INT:=_ref;
                        GEN_ADD.add()
                     ?};
                     _loop:=_def.next()
                  !};
                  _def.cntx_pop();
                  _loop:=_def.next()
               !};
               _def.cntx_pop();
               _def.ndx_drop(_ndx);
               GEN_ADD.cntx_pop()
            ?}
         ?};
         _def.cntx_pop();
         _loop:=_def.next()
      !}
   ?};
   _def.cntx_pop();
   B_DOMAIN.cntx_pop();
   GEN_INT.cntx_pop()
?}


\erp_obj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [22.26]
:: OPIS: Zwraca pusty obiekt erp
::   WE: _a - rozmiar tablicy data (obsługa listy danych), _b,_c,_d... - rozmiar tablicy values dla każdego kolejnego
::       elementu tablicy data
::   WY: obiekt erp
::----------------------------------------------------------------------------------------------------------------------
_erp:=obj_new('sessionId','display_message','data','interact');
_erp.interact:=exec('erp_interact','genius');
{? _ > 0 & _a > 0 ||
   _data:=obj_new(_a);
    {! _i:=1 .. _a |!
       _data[_i]:=obj_new('type','values');
      {? _a > (_)-1 ||
         _data[_i].values:=exec('erp_values','genius', _b)
      |? _ > 1 & _[_i] > 0||
         _data[_i].values:=exec('erp_values','genius', _[_i+1])
      ?}
    !};
   _erp.data:=_data
?};
_erp


\erp_interact
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [22.26]
:: OPIS: Zwraca pustą listę erp_interact
::   WE:
::   WY: obiekt interact
::----------------------------------------------------------------------------------------------------------------------
_interact:=obj_new('status','par');
_interact.status:=0;
_interact.par:=exec('erp_par','genius');
_interact


\erp_values
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [22.26]
:: OPIS: Zwraca pustą listę erp_values
::   WE: _a - rozmiar tablicy values dla każdego elementu tablicy data
::   WY: obiekt values
::----------------------------------------------------------------------------------------------------------------------
_values:=obj_new(_a);
{! _i:=1 .. _a |!
   _values[_i]:=obj_new('icon','display_name','link','desc')
!};
_values


\erp_par
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [22.26]
:: OPIS: Zwraca pustą listę erp_par
::   WE:
::   WY: obiekt lista 10 lub _a parametrów interakcji poziomu erp
::----------------------------------------------------------------------------------------------------------------------
{? _=0 || _a:=10?};
_par:=obj_new(_a);
{! _i:=1 .. _a |!
   _par[_i]:=obj_new('id','for', 'value')
!};
_par


\wiki
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [22.26]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
AI.dokuwikisearch(AI.getPar('query'))


\get_desc
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [22.26]
:: OPIS: jeśli w opisie jest link do png dokleja token utoryzacyjny
::   WE: opis z linkiem
::   WY: link z tokenem
::----------------------------------------------------------------------------------------------------------------------
{? _a*'img' & _a*'.png"' || gsub(_a,'.png"','.png'+'&st='+exec('gen_token','#help')+'"') || _a ?}


\gen_int_usun_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [22.26]
:: OPIS: Usuwanie powiązanych intencji.
::----------------------------------------------------------------------------------------------------------------------
GEN_ADD.cntx_psh();
GEN_ADD.index('GEN_INT');
GEN_ADD.prefix(GEN_INT.ref());
_loop:=GEN_ADD.first();
{!
|? _loop
|! _loop:=GEN_ADD.del()
!};
GEN_ADD.cntx_pop()


\last_par_val
::----------------------------------------------------------------------------------------------------------------------
::  UTW: PD [22.26]
:: OPIS: Ostania wartość parametru o określonym id
::   WE: _a - AI.INTERACT.par
::       _b - id parametru
::----------------------------------------------------------------------------------------------------------------------
_size:=obj_len(_a);
_check_id:={? var_press('_b')=type_of('') || 1 || 0 ?};
_wyn:='';
{!|?
   {? type_of(_a[_size].id)=type_of('') & type_of(_a[_size].value)>0
   & {? _check_id || _a[_size].id=_b || 1 ?}
   ||
      _wyn:=_a[_size].value
   ?};
   _size-=1;
   _wyn='' & _size>0
!};
_wyn


\features
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [22.26]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_r:='';
_f:=exec('get_desc_agent','genius');
{! _i:=1 .. obj_len(_f) |!
   _r+='<li>'+_f[_i]
!};
_r


\get_desc_agent
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [22.26]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_ops:=sql('select OPIS, LP from GEN_INT where OPIS <> \'\' order by 2');
{? _ops.first() ||
   _ret:=obj_new(_ops.size);
   _i:=1;
   {!|?
      _ret[_i]:=_ops.OPIS;
      _i+=1;
      _ops.next()
   !}
?};
_ret


\es_search
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [22.26]
:: OPIS:
::   WE:
::   WY:
:: ~OST: INFORK
::----------------------------------------------------------------------------------------------------------------------

_es:=exec('elastic','elastic');
_es.info();

{? _es.ESERROR=0
||
	_q:=AI.getPar('query');
	_count:=AI.getParCount('startDate');
	_query:={? _count>0 ||' +(' || '' ?};
	{! _i:=1 .. _count |!
		_s:=AI.getPar('startDate',_i);
		_sd:=date(#(4+_s),#((7+_s)+2),#((10+_s)+2));
		_e:=AI.getPar('endDate',_i);
		_ed:=date(#(4+_e),#((7+_e)+2),#((10+_e)+2));
		{!	_Count:=(#_sd)..(#_ed)
		|!
			_query += $(#_Count)+' | '
		!}
	!};
	_query:= {? _count>0 || (_query-3) + ')' || _query ?};
	_erp:=exec('erp_obj','genius');
	_erp.display_message:='Otworzyłem nową zakładkę z wynikami wyszukiwania.';
	_q:=gsub(_q,' ',' ____');
	{? exec('interm','#system')>0
	||
		_h:=inet_get('http://encode');
		_par:= obj_new('Q','p1');
		_par.Q:= _h.url_encode(_q);
		_par.p1:='%'+app_info('app_ident');
		_lnk:=link_uri(_par)+'&_f=SEARCH&_t='+REF.FIRMA().OPIS;
		ctr_set('!application',,'openWebBrowser',_lnk)
	||
		fork(, 'start_p', '#search',_q,_query)
	?}
||
	_erp:=exec('erp_obj','genius');
	_erp.display_message:='W Twoim systemie nie jest skonfigurowany mechanizm wyszukiwania danych ElasticSearch.'
?};
_erp


\reset
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [22.26]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? exec('check','genius') ||
   obj_del(__dialogflow);
   obj_del(AI)
?};
AI:=exec('start','genius');
AI.talk(username);
AI.SESSIONID

\df_date
::----------------------------------------------------------------------------------------------------------------------
::  UTW: bryQ [RR.xx,]
:: OPIS: konwertuje daty występujące w zapytaniu na format DF
::   WE: zdanie
::   WY: zdanie
::----------------------------------------------------------------------------------------------------------------------
_ret:='';
_tab:=spli_str(_a,' ');
{! _i:=1 .. obj_len(_tab) |!
   {? +_tab[_i] = 10 ||
     _d:=exec('str2date','#convert',_tab[_i]);
     {? _d = date(0,0,0)
      || _ret+=_tab[_i]+' '
      || _ret+=form(_d,,4)+' ';
         {? _i+1 <= obj_len(_tab) & _tab[_i+1] = '-' || _tab[_i+1] := 'do' ?}
     ?}
   || _ret+=_tab[_i]+' '
   ?}
!};

_ret

\gen_int_lp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [RR.xx,]
:: OPIS: Wartość początkowa dla pola LP.
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
GEN_INT.cntx_psh();
GEN_INT.index('AREA');
GEN_INT.prefix();
_lp:=GEN_INT.size();
GEN_INT.cntx_pop();
_val:=_lp+1;
_val


\xinfo_gen_ptch_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [23.25]
:: OPIS: Po redakcji pola GEN_PTCH zmiennej XINFO.
::----------------------------------------------------------------------------------------------------------------------
{? XINFO.GEN_PTCH>2 || FUN.info('Wysokość dźwięku nie może przekraczać 2'@); 0 || 1 ?}


\xinfo_gen_rate_ae
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RO [23.25]
:: OPIS: Po redakcji pola GEN_RATE zmiennej XINFO.
{? XINFO.GEN_RATE<0.5 | XINFO.GEN_RATE>2
|| FUN.info('Szybkość odtwarzania musi zawierać się w zakresie 0.5-2'@); 0
|| 1
?}

:Sign Version 2.0 jowisz:1045 2023/11/13 11:03:30 0a8c6fb92c18acc13280d076afd5d3c7b6f64f3e172091aaa8b47ba5a912ecfd71d50ec03040da30cf7ba6a170c5a5d7a721c746f3a11f026fe5577b7d6fb5d3726e3fe4f3a0175dd1883eafbff4da59a8784fb78d8e180cebf2085d7b1c2ba0c2da8ccacae9c7001c52e4725af5f9cf8c90996c0c77fe1eab3559816e57af54
