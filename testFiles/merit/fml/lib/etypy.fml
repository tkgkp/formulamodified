:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: etypy.fml
:: Utworzony: 27.01.2015
:: Autor: TMR
::======================================================================================================================
:: Zawartosc: Formuly do obslugi typow dokumentow w obiegu
::======================================================================================================================


\buffer
::----------------------------------------------------------------------------------------------------------------------
::  UTW:  []
:: OPIS: tablica buforowa dla tabeli ETYPY
::   WE: FORMULA [_a] - dodatkowe pola do obiektu - umieszczane na końcu - nie obsługiwane przez standardowe metody [""]
::   WY: tablica buforowa o następującej strukturze
::----------------------------------------------------------------------------------------------------------------------
exec('obj_new','#buf','ETYPY')


\exist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.50]
:: OPIS: Funkcja sprawdza czy istnieje typ dokumentu w obiegu
::   WE: _a - [REFERENCE]  - wskazanie na typ obiegu
::       _b - [STRING]     - nazwa
::   WY: null lub wskazanie na ETYPY
::----------------------------------------------------------------------------------------------------------------------
_typ_ob:={? var_pres('_a')=type_of(null) || _a || return(null) ?};
 _nazwa:={? var_pres('_b')=type_of('')   || _b || return(null) ?};

:: powrot w przypadku zerwanej transakcji
{? do_state()=2 || return(null) ?};

_res:=null();
ETYPY.cntx_psh();
ETYPY.index('UNIK');
ETYPY.prefix(_typ_ob,_nazwa,_nazwa);
{? ETYPY.first()
|| _res:=ETYPY.ref()
?};
ETYPY.cntx_pop();
_res


\add
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.50]
:: OPIS: Funkcja dodaje typ dokumentu dla wnioskow w obiegu
::   WE: _a   - [OBJECT]  - obiekt bufora tabeli ETYPY
::       [_b] - [OBJECT]  - obiekt komunikatow
::       [_c] - [INTEGER] - wymus dodanie/nadpisanie nowymi wartosciami
::   WY: null lub wskazanie na ETYPY
::----------------------------------------------------------------------------------------------------------------------
_buffer:={? var_pres('_a')=117        || _a || return(null) ?};
  _KOMM:={? var_pres('_b')>100        || _b || ~~           ?};
 _force:={? var_pres('_c')=type_of(0) || _c || 0            ?};

:: powrot w przypadku zerwanej transakcji
{? do_state()=2 || return(null) ?};

_mydo:=do_state()=0;

_res:=exec('exist','etypy',_buffer.TYPOBIEG,_buffer.NAZWA);
{? _res=null()
|| ETYPY.prefix();
   ETYPY.blank(1);
   _buffer.set();
   {? ETYPY.add(~_mydo)
   || _buffer.memo_put();
      _res:=ETYPY.ref()
   || {? var_pres('_KOMM')>100
      || _KOMM.add('Nie udało się dodać typu dokumentu: '+_buffer.NAZWA,3,,1)
      ?}
   ?}
|| {? _force
   || _buffer.Ref:=_res;
      exec('put','etypy',_buffer,_KOMM)
   ?}
?};
_res


\put
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.50]
:: OPIS: Funkcja nadpisuje typ dokumentu dla wnioskow w obiegu
::   WE: _a   - [OBJECT] - obiekt bufora tabeli ETYP_ATR
::       [_b] - [OBJECT] - obiekt komunikatow
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_buffer:={? var_pres('_a')=117 || _a || return(null) ?};
  _KOMM:={? var_pres('_b')>100 || _b || ~~           ?};

:: powrot w przypadku zerwanej transakcji
{? do_state()=2 || return(null) ?};

_mydo:=do_state()=0;

_res:=0;
ETYPY.cntx_psh();
ETYPY.prefix();
{? ETYPY.seek(_buffer.Ref)
|| _buffer.set();
   {? ETYPY.put(~_mydo)
   || _buffer.memo_put();
      _res:=1
   || {? var_pres('_KOMM')>100
      || _KOMM.add('Nie udało się nadpisać typu dokumentu : '+_buffer.NAZWA,3,,1)
      ?}
   ?}
?};
ETYPY.cntx_pop();
_res


\aktywny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [17.28]
:: OPIS: Funkcja sprawdza czy istnieje typ dokumentu w obiegu
::   WE: _a - [REFERENCE]  - wskazanie na typ obiegu
::       _b - [STRING]     - nazwa
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_typ_ob:={? var_pres('_a')=type_of(null) || _a || return(null) ?};
 _nazwa:={? var_pres('_b')=type_of('')   || _b || return(null) ?};

:: powrot w przypadku zerwanej transakcji
{? do_state()=2 || return(null) ?};

_res:=0;
ETYPY.cntx_psh();
ETYPY.index('UNIK');
ETYPY.prefix(_typ_ob,_nazwa,_nazwa);
{? ETYPY.first()
|| _res:=ETYPY.AKTYWNY='T'
?};
ETYPY.cntx_pop();
_res


\def_wu_ogolny
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [20.42]
:: OPIS: Formuła zwraca wskazanie typu wniosku w obiegu do obsługi ogólnego wniosku o urlop.
::   WE: [_a] [NUMBER] - Czy utworzyć definicję typu w przypadku jej braku? [0*/1].
::   WY: Wskazanie typu lub null().
::----------------------------------------------------------------------------------------------------------------------
_force:=var_pres('_a')=type_of(0) & _a;

:: Formuła walidacyjna użytkownika akceptującego (przełożonego).
_typ:='E';
_system:='T';
_skrot:='portal_nwu_access';
_nazwa:='HR Portal: Wyszukanie przełożonego (akceptanta)';
_tresc:=''+"exec('przelozony','form_ob',,,,'AKCWNIO')";

{? exec('sch_form_exists','sch_imp',_typ,_skrot)=null()
|| exec('sch_form_add','sch_imp',_typ,_system,_skrot,_nazwa,_tresc)
?};

:: Formuła weryfikująca poprawność wniosku urlopowego.
_typ:='E';
_system:='T';
_skrot:='portal_nwu_valid';
_nazwa:='HR Portal: Walidacja wniosku urlopowego';
_tresc:=''+"exec('nwu_check','portal_nieobecnosci')";

_form_wal:=exec('sch_form_exists','sch_imp',_typ,_skrot);
{? _form_wal=null() & exec('sch_form_add','sch_imp',_typ,_system,_skrot,_nazwa,_tresc)=1
|| _form_wal:=exec('sch_form_exists','sch_imp',_typ,_skrot)
?};

:: Definicja wniosku w obiegu wykorzystywanego do obsługi wniosku urlopowego.
_buffer:=exec('buffer','etypy');
_buffer.bl_table();
_buffer.NAZWA:='Wniosek urlopowy (HR Portal)';
_buffer.ID_WP:='WniosekUrlopowy';
_buffer.TYPOBIEG:=exec('add','typ_ob','Obieg wniosków');
_buffer.AKTYWNY:=
   {? exec('exist','etypy',_buffer.TYPOBIEG,_buffer.NAZWA) & ~exec('aktywny','etypy',_buffer.TYPOBIEG,_buffer.NAZWA)
   || 'N'
   || 'T'
   ?};
_buffer.AUT_ID:='T';
_buffer.ATR_ONE:=1;
_buffer.CZY_DOPE:='N';
_buffer.DEKR:='N';
_buffer.ED_ID:='N';
_buffer.ED_PODZ:='N';
_buffer.ED_TEMAT:='N';
_buffer.ZAP_REAL:='N';
_buffer.W_PORTAL:='X';
_buffer.FORM_WAL:=_form_wal;

exec('add','etypy',_buffer,,_force)


\def_wu_ojcowski
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RWR [22.26]
:: OPIS: Formuła zwraca wskazanie typu wniosku w obiegu do obsługi wniosku o urlop ojcowski.
::   WE: [_a] [NUMBER] - Czy utworzyć definicję typu w przypadku jej braku? [0*/1].
::   WY: Wskazanie typu lub null().
::----------------------------------------------------------------------------------------------------------------------
_force:=var_pres('_a')=type_of(0) & _a;

:: Formuła weryfikująca poprawność wniosku urlopowego.
_typ:='E';
_system:='T';
_skrot:='portal_nwu_valid';
_nazwa:='HR Portal: Walidacja wniosku urlopowego';
_tresc:=''+"exec('nwu_check','portal_nieobecnosci')";

_form_wal:=exec('sch_form_exists','sch_imp',_typ,_skrot);
{? _form_wal=null() & exec('sch_form_add','sch_imp',_typ,_system,_skrot,_nazwa,_tresc)=1
|| _form_wal:=exec('sch_form_exists','sch_imp',_typ,_skrot)
?};

:: Definicja wniosku w obiegu wykorzystywanego do obsługi wniosku o urlop ojcowski.
_buffer:=exec('buffer','etypy');
_buffer.bl_table();
_buffer.NAZWA:='Wniosek o urlop ojcowski (HR Portal)';
_buffer.ID_WP:='ABSPersonRequestOjcowski';
_buffer.ID_WP_B:='ABSPersonRequestOjcowski';
_buffer.TYPOBIEG:=exec('add','typ_ob','Obieg wniosków');
_buffer.AKTYWNY:=
   {? exec('exist','etypy',_buffer.TYPOBIEG,_buffer.NAZWA) & ~exec('aktywny','etypy',_buffer.TYPOBIEG,_buffer.NAZWA)
   || 'N'
   || 'T'
   ?};
_buffer.AUT_ID:='T';
_buffer.ATR_ONE:=1;
_buffer.CZY_DOPE:='N';
_buffer.DEKR:='N';
_buffer.ED_ID:='N';
_buffer.ED_PODZ:='N';
_buffer.ED_TEMAT:='N';
_buffer.ZAP_REAL:='N';
_buffer.W_PORTAL:='X';
_buffer.RODZ_WP:=7;
_buffer.FORM_WAL:=_form_wal;
_buffer.ZAL_WP:=1;

_etypy:=exec('add','etypy',_buffer,,_force);
{? _etypy
|| exec('add','etypyatt',_etypy,'Akt urodzenia dziecka');
   exec('add','etypyatt',_etypy,'Postanowienie sądu o przysposobieniu dziecka');
   exec('add','etypyatt',_etypy,'Oświadczenie o (nie)korzystaniu z urlopu ojcowskiego','K');
   exec('add','etypyatt',_etypy,'Decyzja o odroczeniu obowiązku szkolnego')
?};
_etypy

:Sign Version 2.0 jowisz:1045 2022/08/24 08:20:56 396e4bd944cd880c0718c86c9edcc714e769f93fcfc3b43f5e23208c2145fe26cfdc89d6f9c2fdaa1602350d8b1e381204f8a9d7d510b68ba626c4db2285626d0d3f4e3a60d9b06ef83953ebc8977e00bc416ca27463e5c355129cdb42ad9c3b733e807c463a2f927ba00450380cb94613627a434ca5f1ef15bb61b7c286dbdc
