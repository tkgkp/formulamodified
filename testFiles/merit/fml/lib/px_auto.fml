:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzezone
::======================================================================================================================
:: Nazwa pliku: px_auto.fml [12.30]
:: Utworzony: 2011-12-10
:: Autor: jerry
::======================================================================================================================
:: Zawartosc: Automaty dla WPP
::======================================================================================================================


\PX_TEX_autoupd
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.30]
:: OPIS: Aktualizuje automatyczny przepis
::   WE: PX_TEX.ref()
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
PX_TEX.cntx_psh(); PX_TEX.clear();
{? PX_TEX.seek(_a)
||
:: mamy do czynienia z automatycznym przepisem dla zlecenia/zadania?
::   {? PX_TEX.ZL<>null()
::   ||
::    typowe zadanie projektowe?
::      {? PX_TEX.ZL().PROJEKTY<>null()
::       & PX_TEX.ZL().TYP().WP<>'P'
::      || exec('PROJRMS2PX_OPER','px_auto',PX_TEX.ZL,PX_TEX.ref())
::      ?}
::   ?};
   ~~
?};
PX_TEX.cntx_pop();
~~


\WPP2PROJHARM
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.30]
:: OPIS: Aktualizuje harmonogram projektu na podstawie danych w WPP
::   WE: _a - PROJEKTY.ref()
::----------------------------------------------------------------------------------------------------------------------
return();

_PROJEKTY:=_a;
PROJEKTY.cntx_psh(); PROJEKTY.clear();
PROJWERH.cntx_psh(); PROJWERH.clear();
PROJHARM.cntx_psh(); PROJHARM.clear();

{? PROJEKTY.seek(_PROJEKTY)
|| PROJWERH.index('AKTYWNA');
   PROJWERH.prefix(PROJEKTY.ref(),'T');
   {? PROJWERH.first()
   || PROJHARM.index('UNIK');
      PROJWERH.prefix(PROJWERH.ref());
      {? PROJHARM.first()
      ||
         _pxpoz:=exec('where_in_plan_a','px_obj');
         _mainver:=exec('get_mainversion','px_ver');
         {!
         |?
            exec('where_in_plan','px_obj',PROJHARM.ZL,_mainver,_pxpoz);
            {? _pxpoz.state>0
            || PROJHARM.DATE_R:=_pxpoz.STARTD;
               PROJHARM.TIME_R:=_pxpoz.STARTT;
               PROJHARM.DATE_Z:=_pxpoz.ENDD;
               PROJHARM.TIME_Z:=_pxpoz.ENDT;
               ~~
            ||
               PROJHARM.DATE_R:=date(0,0,0);
               PROJHARM.TIME_R:=time(0,0,0);
               PROJHARM.DATE_Z:=date(0,0,0);
               PROJHARM.TIME_Z:=time(0,0,0);
               ~~
            ?};
            PROJHARM.put();
            PROJHARM.next()
         !}
      ?}
   ?}
?};

PROJHARM.cntx_pop();
PROJWERH.cntx_pop();
PROJEKTY.cntx_pop();
~~


\AutoPX4PX_OBJ
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jerry [12.30]
:: OPIS: Tworzy Przepis "AutoPX" dla podanego PX_OBJa
::   WE:  _a  - PX_OBJ.ref() - ref do przedmiotu planowania
::       [_b] - INTEGER - 0/[1] - czy aktualizować przepis planistyczny
::   WY: 1 - ok/ -<nr_bledu>
::UWAGA: Parametry bez [] sa wymagane, formula moze nie sprawdzac czy zostaly podane i moze wystapic blad.
::----------------------------------------------------------------------------------------------------------------------
_PX_OBJ:=_a;
_result:=1;

_px_update:=1;
{? var_pres('_b')=type_of(0)
|| _px_update:=_b
?};

PX_OBJ.cntx_psh(); PX_OBJ.clear();
PX_TEX.cntx_psh(); PX_TEX.clear();
ZL.cntx_psh();
:: jesli nie ma psotka to go tworze
exec('PXoTEX_chk','px_tex');

{? PX_OBJ.seek(_PX_OBJ)
|| {? PX_OBJ.KIND=exec('kind_proj_zad','px_obj')
   || PX_TEX.index('ZLASYM');
      PX_TEX.prefix(PX_OBJ.ZL,'T');
::    jezeli nie ma przepisu, to tworzymy
      {? PX_TEX.size()=0
      || PX_TEX.blank(1);
         PX_TEX.AKT:='T';
         PX_TEX.ZL:=PX_OBJ.ZL;
         PX_TEX.SYMBOL:=exec('gen_px_tex_sym','px_tex');
         PX_TEX.VER:=exec('get_ver_nxt','px_tex',PX_TEX.SYMBOL);
         PX_TEX.KIND:=PXoTEX.kind.auto('ZL');
         PX_TEX.PX_RULES:=PXoTEX.Rules.tex_own;
         PX_TEX.XJM:=1;
         _result:=PX_TEX.add()
      ?};
::    jezeli przepis jest to analizujemy czy sa etapy
      {? PX_TEX.first()
      || PX_STAGE.index('TEX_NR');
         PX_STAGE.prefix(PX_TEX.ref());
         {? ~PX_STAGE.first()
         || PX_STAGE.blank();
            PX_STAGE.PX_TEX:=PX_TEX.ref();
            PX_STAGE.NR:=1;
            PX_STAGE.NAZWA:=PX_OBJ.ZL().OPIS;
            PX_STAGE.add()
         ?}
      ?}
   |? PX_OBJ.KIND=exec('kind_zl_prod','px_obj') | PX_OBJ.KIND=exec('kind_zl_warszt','px_obj')
   || PX_TEX.index('ZLASYM');
      PX_TEX.prefix(PX_OBJ.ZL,'T');
::    jezeli nie ma przepisu, to tworzymy
      {? PX_TEX.size()=0
      || PX_TEX.blank(1);
         PX_TEX.AKT:='T';
         PX_TEX.ZL:=PX_OBJ.ZL;
         PX_TEX.SYMBOL:='Przepis zlecenia: '+PX_OBJ.ZL().SYM;
         PX_TEX.VER:=exec('get_ver_nxt','px_tex',PX_TEX.SYMBOL);
         PX_TEX.KIND:=PXoTEX.kind.table('ZL');
         PX_TEX.PX_RULES:=PXoTEX.Rules.tex_own;
         {? PX_OBJ.KIND=exec('kind_zl_warszt','px_obj')
         ||
::          Zlecenie warsztatowe traktujemy jako jedna sztuke wiec XJM tez jeden
            PX_TEX.XJM:=1
         || PX_TEX.XJM:=PX_OBJ.ZL().IL
         ?};
         _result:=PX_TEX.add();

::       Wypelniam przepis jesli pusty
         {? _result>0 & _px_update>0
         || _is_empty:=exec('is_empty','px_tex',PX_TEX.ref());
            {? _is_empty>0
            || _result:=exec('zl_tex_update','px_tex',PX_TEX.ZL)
            ?}
         ?}
      ?}
   ?}
|| _result:=-1
?};
PX_TEX.cntx_pop();
PX_OBJ.cntx_pop();
ZL.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:38 ae9df57fe2b91c8df7d5ebc9c41cff60e48a01f13f33f1ebb8410600f7451da8e4cc055b3c02d906dcdf98bd22365e84b099a2bd899583a76e7540da4a54e9ab4c5d4f9f7bdc1e54447fa5f2917b6b0bda4860c0fdd9978e5066b9045a35d97db3d6f999c9e2a5d4616576fb2d881a6119b088477fba528f6e3de6776b0dc3fe
