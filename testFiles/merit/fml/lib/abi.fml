:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: Nowy1.fml
:: Utworzony: 20.11.2020
:: Autor: trocek
:: Systemy: MERIT
::======================================================================================================================
:: Zawartość: obsługa użytkowników QLIK
::======================================================================================================================

\init
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: inicjalizacja tabel tymczasowych
::----------------------------------------------------------------------------------------------------------------------
VAR_DEL.delete('__qlictab','__qinfotab');
__qlictab:=tab_tmp(5,'USERNAME','STRING[60]','Nazwa',
'QLIKDOM','STRING[60]','Domena Qlik',
'LICENSE','STRING[20]','Licencja',
'APP','STRING[20]','Aplikacja',
'LASTUSED','STRING[30]','Data użycia',
'STATUS','STRING[20]','Status',
'ID','STRING[40]','ID',
'USERID','STRING[40]','USERID',
'LOGIN','STRING[40]','Id',
'USERDIR','STRING[20]','USERDIR');
__qlictab.ndx_tmp('',0,'USERID',,);
__qlictab.ndx_tmp('',0,'LASTUSED',,);
__qlictab.ndx_tmp('',0,'QLIKDOM',,);
__qlictab.index(__qlictab.ndx_tmp('',0,'LOGIN',,));
__qinfotab:=tab_tmp(1,'PRO','INTEGER','Licencje Pro',
               'ANA','INTEGER','Licencje Analyzer',
               'DOK','INTEGER','Licencje do jednego dokumentu',
               'PRO_D','INTEGER','Professional',
               'ANA_D','INTEGER','Analyzer',
               'DOK_D','INTEGER','Pojedyncze')


\load
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: pobiera dane z qlika
::   WE: _a - 1 - pelny reload, 0 - tylko informacje o wykorzystaniu licencji)
::----------------------------------------------------------------------------------------------------------------------
__qlictab.erase();
__qinfotab.erase();
_wyn:=exec('get_proaccessusers','abi');
{? type_of(_wyn)=2 & _wyn<>'' || return('') ?};
_wyn2:=exec('get_analyzeraccessusers','abi');
{? type_of(_wyn2)=2 & _wyn2<>'' || return('') ?};
::{? _x:=errno()<>0 || FUN.error('Błąd nr %1'[$_x]); return('') ?};
__qlictab.first();
exec('count_lic','abi');
exec('update_btns','abi')


\update_btns
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS:
::   WE:
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_act:='';
{? __qinfotab.PRO_D>0
||
   __qlictab.btn_sopt(__win,__btnDodajPro,'state=normal')
||
   __qlictab.btn_sopt(__win,__btnDodajPro,'state=grayed');
   _act+='P'
?};
{? __qinfotab.ANA_D>0
||
  __qlictab.btn_sopt(__win,__btnDodajAn,'state=normal')
||
   __qlictab.btn_sopt(__win,__btnDodajAn,'state=grayed');
   _act+='A'
?};
{? __qinfotab.DOK_D>0
||
   __qlictab.btn_sopt(__win,__btnDodajDok,'state=normal')
||
   __qlictab.btn_sopt(__win,__btnDodajDok,'state=grayed');
  _act+='o'
?};
{? __qlictab.size()>0
||
   __qlictab.btn_sopt(__win,__btnUsun,'state=normal')
||
   __qlictab.btn_sopt(__win,__btnUsun,'state=grayed');
   _act+='U'
?};
__qlictab.actions_grayed(__win,_act)


\count_lic
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: oblicza ilosc ilosc uzytych / dostępnych licencji do dokumentu
::----------------------------------------------------------------------------------------------------------------------
exec('get_accessinfo','abi');
_sql:='select count(*) as CNT from :_a where APP<>\'\' and APP<>\'ALL\'';
_tab:=sql(_sql,__qlictab);
{? _tab.first() || _licDok:=_tab.CNT || _licDok:=0 ?};
&_tab;
_sql:='select LICENSE, count(*) as CNT from :_a group by LICENSE order by 1';
_tab:=sql(_sql,__qlictab);
{? _tab.first()
||
   {! |?
   {? _tab.LICENSE='Analyzer' || __qinfotab.ANA_D:=__qinfotab.ANA-_tab.CNT ?};
   {? _tab.LICENSE='Professional' || __qinfotab.PRO_D:=__qinfotab.PRO-_tab.CNT ?};
   _tab.next()
   !}
?};
__qinfotab.DOK_D:=__qinfotab.DOK - _licDok;
__qinfotab.put()


\okno
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: główna formuła do obsługi użytkowników qlik
::----------------------------------------------------------------------------------------------------------------------
_constAvail:=(var_pres('XINFO')>0 & var_pres('ANBI_AM',XINFO)>0 & var_pres('ANBI_URL',XINFO)>0
   & var_pres('ANBI_QUD',XINFO)>0 & var_pres('ANBI_CER',XINFO)>0 & var_pres('ANBI_PSW',XINFO)>0);

{? ~_constAvail
||
   return(~~)
?};
exec('czytaj','#stalesys',,XINFO,'ANBI_AM','ANBI_URL','ANBI_QUD','ANBI_CER','ANBI_PSW','ANBI_DKL');

exec('init','abi');
VAR_DEL.delete('__wingrp','__win','__wInfo','__btnDodajAn','__btnDodajPro','__btnDodajDok');
__win:=__qlictab.mk_sel('qlik',,0,'#__qlictab',,,30,,'U','T',,,,,'auto');
_t:=__qlictab;
_t.win_fld(__win,,'LOGIN',,,20,,,'Id'@);
_t.win_fld(__win,,'USERNAME',,,20,,,'Użytkownik'@);
_t.win_fld(__win,,'QLIKDOM',,,20,,,'Domena QLIK'@);
_t.win_fld(__win,,'LICENSE',,,20,,,'Rodzaj licencji'@);
_t.win_fld(__win,,'APP',,,20,,,'Aplikacja'@);
_t.win_fld(__win,,'STATUS',,,20,,,'Status'@);
_t.win_fld(__win,,'LASTUSED',,,20,,,'Ostatnio używana'@);


_t.win_act(__win,,'Formuła','Dodaj &Professional',,,"exec('edit','abi', 1)",,,,,,,1);
_t.win_act(__win,,'Formuła','Dodaj &Analyzer',,,"exec('edit','abi', 2)",,,,,,,1);
_t.win_act(__win,,'Formuła','Dodaj Analyzer do d&okumentu',,,"exec('edit','abi', 3)",,,,,,,1);
_t.win_act(__win,,'Formuła','&Usuń',,,"exec('delete','abi', cur_tab.ID)",,,,,,,1);
_t.win_act(__win,,'Formuła','Odśwież &tabelę',,,"exec('load','abi');grp_edisp(__qinfotab,__wInfo);''",,,,,,,1);


__btnDodajPro:=_t.win_btn(__win,'text='+'Dodaj &Professional'@+',panel=right','menu:P');
_t.btn_sopt(__win,__btnDodajPro,'state=grayed');
__btnDodajAn:=_t.win_btn(__win,'text='+'Dodaj &Analyzer'@+',panel=right','menu:A');
_t.btn_sopt(__win,__btnDodajAn,'state=grayed');
__btnDodajDok:=_t.win_btn(__win,'text='+'Dodaj Analyzer do d&okumentu'@+',panel=right','menu:O');
_t.btn_sopt(__win,__btnDodajDok,'state=grayed');
__btnUsun:=_t.win_btn(__win,'text='+'&Usuń'@+',panel=right','menu:U');
_t.btn_sopt(__win,__btnUsun,'state=grayed');
_t.win_btn(__win,'text='+'Odśwież tabelę'@+',panel=right','menu:T');



_t.win_act(__win,,'Szukaj');
_t.win_act(__win,,'Rekord',,,,"exec('kolor','abi', __qlictab.QLIKDOM)");
_t.win_act(__win,,'Kolejność');
_result:=_t.actions_grayed(__win,'PAoU');

__wInfo:=__qinfotab.mk_edit(,0);
__qinfotab.win_esep(__wInfo,'Liczba licencji QLIK');
__qinfotab.win_efld(__wInfo,,'PRO',,,10,,1,'Professional'@);
__qinfotab.win_efld(__wInfo,,'ANA',,,10,,1,'Analyzer'@);
__qinfotab.win_efld(__wInfo,,'DOK',,,10,,0,'W tym do dokumentu'@);
__qinfotab.win_ebtn(__wInfo,'text=%1,display=1,edit=0,panel=top,align=begin'['Zmień'@],"edit_start();''");
__qinfotab.win_ebtn(__wInfo,'text=%1,display=0,edit=1,panel=top,align=begin'['Zapisz'@],
   "
   {? __qinfotab.DOK<=__qinfotab.ANA_D
   ||
      XINFO.ANBI_DKL:=__qinfotab.DOK;
      exec('zapisz','#stalesys',1,XINFO,'ANBI_DKL');
::obliczenie ilosci licencji i wyłączenie akcji
      exec('count_lic','abi');
      exec('update_btns','abi');
      'key:F2'
   ||
       FUN.error('Maksymalna wartość to: %1'[$(__qinfotab.ANA_D)]);
      'key:Esc'
   ?}
");
_dokvalidate:="
   _x:=__qinfotab.ANA_D;
   {? __qinfotab.DOK>__qinfotab.ANA_D
   ||
      FUN.error('Maksymalna wartość to: %1'[$(__qinfotab.ANA_D)]);
      0
   ||
      1
   ?}
";
__qinfotab.fld_fml('DOK','AFTER_EDIT',_dokvalidate);
__qinfotab.win_esep(__wInfo,'Dostępne licencje');
__qinfotab.win_efld(__wInfo,,'PRO_D',,,10,,1,'Professional'@);
__qinfotab.win_efld(__wInfo,,'ANA_D',,,10,,1,'Analyzer'@);
__qinfotab.win_efld(__wInfo,,'DOK_D',,,10,,1,'W tym do dokumentu'@);
:__qinfotab.win_edit(__wInfo);

__wingrp:=__qlictab.grp_make('Zarządzanie licencjami QLIK',"exec('load','abi')",,,,,);
__qlictab.grp_sel(__wingrp,_t,__win,,"",,,,"grp_edisp(__qinfotab,__wInfo)",,,,'maximized',,1);
__qlictab.grp_splt(__wingrp,,'vertical','dół',);
__qlictab.grp_edit(__wingrp,__qinfotab,__wInfo,,,"","",,'maximized',,);
__qlictab.win_sel(__wingrp);
::__qlictab.win_edit(__wInfo);
__qlictab.select()


\edit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: okno redagowania licencji
::      _a:  1 = dodaj PRO, 2 = dodaj ANALYZER, 3 = dodaj ANALYZER do dok
::----------------------------------------------------------------------------------------------------------------------
exec('get_applist','abi');
{? _a=3
||
  {? __qapplist.find_tab(,'APP',,'=','ALL') || __qapplist.del() ?}
?};
{? var_press('__qlikusers')>0 || &__qlikusers ?};
__qlikusers:=exec('get_userlistmerit','abi');
{? type_of(__qlikusers)=0 || return('') ?};
_t:=__qlictab;
_t.USERNAME:='';
_t.QLIKDOM:=XINFO.ANBI_QUD;
_t.APP:='';
{? _a=1
||
   _t.LICENSE:='Professional';
   _t.APP:='ALL'
|? _a=2 | _a=3
||
   _t.LICENSE:='Analyzer';
   _t.APP:={? _a=2 || 'ALL' || '' ?}
?};
__qlikUserSave:=1;
_win:= _t.mk_edit(,0,'#__qlictabedit',,,,'wrapped');
_t.win_efld(_win,,'USERNAME',,,40,,,,,,,'F3_button=1');
_t.win_efld(_win,,'QLIKDOM',,,20,,1,,,,,);
_t.win_efld(_win,,'LICENSE',,,20,,1,,,,,);
_t.win_efld(_win,,'APP',,,20,,_a<>3,,,,,'F3_button=1');
_t.win_ebtn(_win,'text=%1,panel=bottom,align=end'['Zapisz'@],"'key:F2'");
_t.win_ebtn(_win,'text=%1,panel=bottom,align=end'['Anuluj'@],"'key:Esc'");
:_t.win_eact(__win,'Formuła','&Zapisz'@@,,,"exec('savelic','abi')",,);
_t.win_edit(_win);
{? _a=3
|| 0
|| cur_tab().APP:='ALL'
?};
_t.fld_fml('USERNAME','F3',"
   _user:=exec('sel_user','abi',fld());
   {? _user<>'' || cur_tab().USERID:=__qlikusers.ID; cur_tab.LOGIN:=__qlikusers.USERID; fld(_user) ?};
   1    ");

_t.fld_fml('APP','F3',"
   _app:=exec('sel_app','abi');
   {? _app<>'' || fld(_app) ?};
   1    ");

_valid:="
   _result:='';
   {?  __qlikusers.find_tab(,'NAME',,'=',cur_tab.USERNAME)
   || 1
   ||
      {? __qlikusers.find_tab(,'NAME',,':-',cur_tab.USERNAME)
      ||
         _user:=exec('sel_user','abi',cur_tab.USERNAME);
         {? _user<>'' || cur_tab().USERID:=__qlikusers.ID; cur_tab.LOGIN:=__qlikusers.USERID; cur_tab.USERNAME:=_user; 1  || _result:='USERNAME' ?}
      ||
         FUN.info('Nie znaleziono użytkownika');
         _result:='USERNAME'
      ?}
   ?};
   {? _result=''
   ||
      {? __qapplist.find_tab(,'APP',,'=',cur_tab.APP)
      || _result:=''
      || FUN.info('Nieprawidłowa wartość w polu Aplikacja'); _result:='APP'
      ?}
   ?};
   _result
";
{? _t.edit(_valid)
||
   exec('savelic','abi')
?}


\savelic
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: wysłanie licencji do qlika
::----------------------------------------------------------------------------------------------------------------------
_userObj:=obj_new('user');
_userObj.user:=obj_new('id','userId','userDirectory');
_userObj.user.id:=cur_tab().USERID;
_userObj.user.userId:=cur_tab().LOGIN;
_userObj.user.userDirectory:=cur_tab().QLIKDOM;

_qlikUsr:=exec('get_userbyid','abi', cur_tab().LOGIN);
{? _qlikUsr.size()=0
||
   _wyn:=exec('add_user','abi',cur_tab().LOGIN);
   &_qlikUsr;
   _qlikUsr:=exec('get_userbyid','abi', cur_tab().LOGIN);
::obsługa pustego _qlikUsr
   _user:=exec('qlik_send','abi','GET','/User/'+_qlikUsr.ID,'',,1);
   {? var_press('_user')>0
   ||
::aktualizacja danych zalozonego uzytkownika
      _user.setValue('name',cur_tab.USERNAME);
      exec('qlik_send','abi','PUT','/User/'+_qlikUsr.ID,'',_user.getJSON(),1)
   ?}
?};
{? _qlikUsr.size()=0 || FUN.error('Błąd dodawania użytkownika'@); return('') ?};
_userObj.user.id:=_qlikUsr.ID;
cur_tab.USERID:=_qlikUsr.ID;
_json:=json_obj(_userObj);
_url:='/License/'+cur_tab().LICENSE+'AccessType';
_wynuser:=exec('update_user','abi',_userObj.user.id, cur_tab().APP);
{? type_of(_wynuser)=117
||
   _wyn:=exec('qlik_send','abi','POST',_url,'',_json);
   {? type_of(_wyn)=117
   ||
      exec('load','abi');
:      cur_tab().ID:=_wyn.id;
:      cur_tab().add;
:      exec('count_lic','abi');
:      exec('update_btns','abi');
      grp_edisp(__qinfotab,__wInfo);
:   'key:F2'
   1
   ||
:   'key:ESC'
   0
   ?}
||
   FUN.error('Błąd zapisu licencji'@)
?}


\sel_user
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: wybor uzytkownika z listy
::----------------------------------------------------------------------------------------------------------------------
_tab:=__qlikusers;
_win_sel:=_tab.mk_sel('Lista użytkowników'@,'N',0,'#kloitdnappawsf',,,,,'U','N',,,,);
_tab.win_fld(_win_sel,,'USERID',,,10,,,'Id'@);
_tab.win_fld(_win_sel,,'NAME',,,30,,,'Użytkownik'@);
_tab.win_act(_win_sel,0,'Formuła','&Wybierz'@@,,,"sel_exit();1",,1,,,,'W');
_tab.win_act(_win_sel,0,'Szukaj');
_tab.win_sel(_win_sel);
:{? var_press(_a)>0 || _tab.f_set(,,'NAME>=\''+_a +'\''); _ta ?};
{? _tab.select(,1,10)
|| _tab.NAME
|| ''
?}


\delete
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: odpiecie licencji
::   WE: _a - ID licencji do usunięcia
::----------------------------------------------------------------------------------------------------------------------
{? cur_tab.STATUS<>'Allocated'
||
   FUN.info('Licencja na kwarantannie.\nNie można usunąć.'@);
   return('')
?};
{? ask('Usunąć licencję użytkownika\n%1'@[cur_tab.USERNAME],'Pytanie',,'TAK','NIE')=1 || return('') ?};
_lic:=cur_tab().ID;
_type:=cur_tab.LICENSE;
_userid:=cur_tab.USERID;
_wyn:=exec('qlik_send','abi','GET','/User/'+_userid,'',,1);
_zzz:=_wyn.countChildren('customProperties');
_i:=1;
_found:=0;
{! |?
   {? _wyn.getValue('customProperties[%1].definition.name'[$_i])='Access'
   ||
      _found:=1;
      _wyn.deleteElement('customProperties[%1]'[$_i])
   ?};
   _i+=1;
   _i<=_zzz & ~_found
!};
_str:=_wyn.getJSON();
&_wyn;
_wyn:=exec('qlik_send','abi','PUT','/User/'+_userid,'',_str,1);
&_wyn;
_url:='/License/'+_type+'AccessType/'+_lic;
_wyn:=exec('qlik_send','abi','DELETE',_url,'');
{? _wyn=''
||
   __qlictab.del();
   exec('load','abi');
:   exec('count_lic','abi');
:   exec('update_btns','abi');
   grp_edisp(__qinfotab,__wInfo)
:   FUN.info('Licencja usunięta'@)
?}


\get_applist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: lista aplikacji pobierana z CustomProperty
::----------------------------------------------------------------------------------------------------------------------
_url:='/CustomPropertyDefinition/table';
_params:='filter=(name eq \'Access\')';
_body:='{"columns":[{"name":"id","columnType":"Property","definition":"id"},
                     {"name":"choiceValues","columnType":"Property","definition":"choiceValues"},
                    {"name":"name","columnType":"Property","definition":"name"}]}';
_wyn:=exec('qlik_send','abi','POST',_url,_params,_body);
_tab:=tab_tmp(1,'APP','STRING[20]','APP');
_apps:=_wyn.rows[1][2];
{! _i:=1..obj_len(_apps) |!
  _tab.APP:=_apps[_i];
  _tab.add()
!};
{? var_press('__qapplist')>0
||
   &__qapplist
?};
__qapplist:=_tab;
__qapplist


\sel_app
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: okienko wyboru aplikacji
::   WE: _a - id uzytkownika
::----------------------------------------------------------------------------------------------------------------------
_tab:=__qapplist;
_win_sel:=_tab.mk_sel('Lista aplikacji'@,'N',0,'#kloitdnappawsf',,,,,'U','N',,,,);
_tab.win_fld(_win_sel,,'APP',,,10,,,'Aplikacje'@);
_tab.win_act(_win_sel,0,'Formuła','&Wybierz'@@,,,"sel_exit();1",,1,,,,'W');
_tab.win_act(_win_sel,0,'Szukaj');
_tab.win_sel(_win_sel);
{? _tab.select(,1,10)
|| _tab.APP
|| ''
?}


\kolor
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: kolor wiersza
::----------------------------------------------------------------------------------------------------------------------
{? _a<>XINFO.ANBI_QUD || '100:100:100,0'
:'0:0:0,200:200:200'
:|? _a='' || '0:0:0,150:150:220'
||   0
?}


\get_accessinfo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: pobiera informację z QLIK o wykorzystaniu licencji
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('qlik_send','abi','GET','/License/accesstypeoverview');
__qinfotab.erase();
_i:=XINFO.ANBI_DKL;
{? type_of(_wyn)<>117 || return(~~) ?};
_proTotal:=_wyn.professionalAccess.total;
_proAlloc:=_wyn.professionalAccess.allocated;
_analyzerTotal:=_wyn.analyzerAccess.total;
_analyzerAlloc:=_wyn.analyzerAccess.allocated;
__qinfotab.PRO:=_proTotal;
__qinfotab.ANA:=_analyzerTotal;
__qinfotab.DOK:=_i;
__qinfotab.PRO_D:=_wyn.professionalAccess.available;
__qinfotab.ANA_D:=_wyn.analyzerAccess.available;
__qinfotab.DOK_D:=0;
__qinfotab.add();
_wyn


\get_userlist
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: lista uzytkownikow Merita z Qlika
::   WY: tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
_url:='/User/table';
_params:='filter=(userDirectory eq \'%1\' and inactive eq false)'[XINFO.ANBI_QUD];
_params+='&skip=0&take=200';
::TODO: jesli potrzeba to dodac stronicowanie pobierania wynikow
_body:='{"entity":"User","columns":[
{"name":"id","columnType":"Property","definition":"id"},
{"name":"name","columnType":"Property","definition":"name"},
{"name":"userDirectory","columnType":"Property","definition":"userDirectory"},
{"name":"userId","columnType":"Property","definition":"userId"},
{"name":"inactive","columnType":"Property","definition":"inactive"},
{"name":"blacklisted","columnType":"Property","definition":"blacklisted"},
{"name":"removedExternally","columnType":"Property","definition":"removedExternally"}
]}';
_wyn:=exec('qlik_send','abi','POST',_url,_params,_body);
{? type_of(_wyn)<>117 || return(~~) ?};
_tab:=tab_tmp(1,'ID','STRING[40]','ID',
             'NAME','STRING[60]','NAME',
             'USERID','STRING[40]','USERID');
{! _i:=1..obj_len(_wyn.rows)
|!
   _tab.ID:=_wyn.rows[_i][1];
   _tab.NAME:=_wyn.rows[_i][2];
   _tab.USERID:=_wyn.rows[_i][4];
   _tab.add
!};
_tab


\get_userbyid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: pobiera uzytkownika po id
::   WE: _a - kod uzytkownika
::   WY: tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
_url:='/User/table';
_params:='filter=(userDirectory eq \'%1\' and userId eq \'%2\')'[XINFO.ANBI_QUD, _a];
_params+='&skip=0&take=200';
::TODO: jesli potrzeba to dodac stronicowanie pobierania wynikow
_body:='{"entity":"User","columns":[
{"name":"id","columnType":"Property","definition":"id"},
{"name":"name","columnType":"Property","definition":"name"},
{"name":"userDirectory","columnType":"Property","definition":"userDirectory"},
{"name":"userId","columnType":"Property","definition":"userId"},
{"name":"inactive","columnType":"Property","definition":"inactive"},
{"name":"blacklisted","columnType":"Property","definition":"blacklisted"},
{"name":"removedExternally","columnType":"Property","definition":"removedExternally"}
]}';
_wyn:=exec('qlik_send','abi','POST',_url,_params,_body,1);
{? type_of(_wyn)<117 || return(~~) ?};
_tab:=tab_tmp(1,'ID','STRING[40]','ID',
             'NAME','STRING[60]','NAME',
             'USERID','STRING[40]','USERID');
{! _i:=1.._wyn.countChildren('rows')
|!
   _tab.ID:=_wyn.getValue('rows[%1][1]'[$_i]);
   _tab.NAME:=_wyn.getValue('rows[%1][2]'[$_i]);
   _tab.USERID:=_wyn.getValue('rows[%1][4]'[$_i]);
   _tab.add
!};
_tab


\get_userlistmerit
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: lista uzytkownikow z merita
::   WY: tabela tymczasowa
::----------------------------------------------------------------------------------------------------------------------
_sql:='select \'\' as ID, KOD as USERID, DANE as NAME from USERS where AKT=\'T\' order by 2';
_tab:=sql(_sql);
_tab


\acc_body
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: lista zwracanych kolumn dla /License/____AccessType/table
::   WY: string
::----------------------------------------------------------------------------------------------------------------------
_body:='{"entity":"License.ProfessionalAccessType","columns":
        [{"name":"id","columnType":"Property","definition":"id"},
        {"name":"privileges","columnType":"Privileges","definition":"privileges"},
        {"name":"user.name","columnType":"Property","definition":"user.name"},
        {"name":"user.id","columnType":"Property","definition":"user.id"},
        {"name":"user.userDirectory","columnType":"Property","definition":"user.userDirectory"},
        {"name":"excess","columnType":"Property","definition":"excess"},
        {"name":"lastUsed","columnType":"Property","definition":"lastUsed"},
        {"name":"user.userId","columnType":"Property","definition":"user.userId"},
        {"name":"user.customProperties","columnType":"Property","definition":"user.customProperties"},
        {name: "quarantined", columnType: "Property", definition: "quarantined"}
        ]}';
_body


\get_proaccessusers
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: zwraca listę użytkowników z licencją Pro
::----------------------------------------------------------------------------------------------------------------------
_url:='/License/ProfessionalAccessType/table';
_body:=exec('acc_body','abi');
_params:='orderAscending=true&skip=0&sortColumn=user.name';
_wyn:=exec('qlik_send','abi','POST',_url,_params,_body);
{? type_of(_wyn)<>117 || return(_wyn) ?};
_tab:=__qlictab;
_rows:=_wyn.rows;
{? type_of(_rows)=0 || return(_tab) ?};
_i:=1;
{! _i:=1..obj_len(_rows) |!
   _tab.LICENSE:='Professional';
   _tab.ID:=_rows[_i][1];
   _tab.USERNAME:=_rows[_i][3];
   _tab.USERID:=_rows[_i][4];
   _tab.QLIKDOM:=_rows[_i][5];
   _tab.LASTUSED:={? _rows[_i][7]*'1753' || '' || _rows[_i][7] ?};
   _tab.LOGIN:=_rows[_i][8];
   _user:=exec('get_userapp','abi',_rows[_i][9]);
   _tab.STATUS:={? _rows[_i][10] || 'Quarantined' || 'Allocated' ?};
   _tab.APP:=_user.app;
   &_user;
   _tab.add()
!};
''


\get_analyzeraccessusers
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: zwraca listę użytkowników z licencją Analyzer
::----------------------------------------------------------------------------------------------------------------------
_url:='/License/AnalyzerAccessType/table';
_body:=exec('acc_body','abi');
_params:='orderAscending=true&sortColumn=user.name';
_wyn:=exec('qlik_send','abi','POST',_url,_params,_body);
{? type_of(_wyn)<>117 || return(_wyn) ?};
_tab:=__qlictab;
_rows:=_wyn.rows;
_i:=1;
{? type_of(_rows)=0 || return(_tab) ?};
{! _i:=1..obj_len(_rows) |!
   _tab.LICENSE:='Analyzer';
   _tab.ID:=_rows[_i][1];
   _tab.USERNAME:=_rows[_i][3];
   _tab.USERID:=_rows[_i][4];
   _tab.QLIKDOM:=_rows[_i][5];
   _tab.LASTUSED:={? _rows[_i][7]*'1753' || '' || _rows[_i][7] ?};
   _tab.LOGIN:=_rows[_i][8];
   _tab.STATUS:={? _rows[_i][10] || 'Quarantined' || 'Allocated' ?};
   _user:=exec('get_userapp','abi',_rows[_i][9]);
   _tab.APP:=_user.app;
   &_user;
   _tab.add()
!};
''


\get_userinfo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: pobiera informacje o użytkowniku
::   WE: _a - guid usera
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('qlik_send','abi','GET','/User/'+_a,'');
{? type_of(_wyn)<>117 || return(~~) ?};
_obj:=obj_new('userId','userDirectory','name','app','access','applist');
_obj.userId:=_wyn.userId;
_obj.userDirectory:=_wyn.userDirectory;
_obj.name:=_wyn.name;
_obj.app:='';
_arrProps:=_wyn.customProperties;
_i:=1;
_found:=0;
{? var_press('_arrProps')=0 || return(_obj) ?};
{! |?
   _xxx:=_arrProps[_i];
   {? _xxx.definition.name='Access'
   ||
      _found:=1;
::    lista aplikacji zdefiniowanych w customattribute
      _apps:=_xxx.definition.choiceValues;
      _obj.applist:='';
      {! _x:=1..obj_len(_apps)
      |! _obj.applist+=_apps[_x]+','
      !};
      _obj.app:=_xxx.value
   ?};
   &_xxx;
   _i+=1;
   _i<=obj_len(_arrProps) & ~_found
!};
_obj


\update_user
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: aktualizacja aplikacji użytkownika
::   WE: _a - guid usera
::       _b - aplikacja
::   WY:
::----------------------------------------------------------------------------------------------------------------------
_wyn:=exec('qlik_send','abi','GET','/User/'+_a,'','',1);
_i:=1;
_found:=0;
_addprop:=0;
_noprops:=0;
_zzz:=0;
{? _wyn.typeOf('customProperties')='A'
||
   _zzz:=_wyn.countChildren('customProperties')
||
   _noprops:=1
?};
{? _zzz>0
||
   {! |?
      {? _wyn.getValue('customProperties[%1].definition.name'[$_i])='Access'
      ||
         _found:=1;
         _wyn.setValue('customProperties[%1].value'[$_i],_b)
      ?};
      _i+=1;
      _i<=_zzz & ~_found
   !}
?};
{? ~_found ||  _addprop:=1   ?};
{? _addprop
||
   _propid:=exec('get_propertyid','abi');
   _objprop:=obj_new('value','definition');
   _objprop.definition:=obj_new('id');
   _objprop.definition.id:=_propid;
   _objprop.value:=_b;
  {? _noprops
  ||
      _wyn.setObject('customProperties','[]')
  ?};
  _wyn.setObject(_path := _wyn.addChildElement('customProperties'), json_obj(_objprop))
?};
_str:=_wyn.getJSON();
_wyn2:=exec('qlik_send','abi','PUT','/User/'+_a,'',_str)


\get_propertyid
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: zwraca id property Access
::   WY: string
::----------------------------------------------------------------------------------------------------------------------
_params:='filter=(name eq \'Access\')';
_body:='{"columns":[ {"name":"id","columnType":"Property","definition":"id"},
        {"name":"name","columnType":"Property","definition":"name"}]}';
_wyn:=exec('qlik_send','abi','POST','/CustomPropertyDefinition/table',_params,_body);
{? type_of(_wyn)=117 || _wyn.rows[1][1] || '' ?}


\get_userapp
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: lista aplikacji użytkownika z customattribute "Access"
::   WE: _a - customProperties usera
::   WY: object
::----------------------------------------------------------------------------------------------------------------------
_obj:=obj_new('userId','userDirectory','name','app','access','applist');
_obj.app:='';
_arrProps:=_a;
_i:=1;
_found:=0;
{? var_press('_arrProps')=0 || return(_obj) ?};
{! |?
   _xxx:=_arrProps[_i];
   {? _xxx.definition.name='Access'
   ||
      _found:=1;
::    lista aplikacji zdefiniowanych w customattribute
      _apps:=_xxx.definition.choiceValues;
      _obj.applist:='';
      {! _x:=1..obj_len(_apps)
      |! _obj.applist+=_apps[_x]+','
      !};
      _obj.app:=_xxx.value
   ?};
   &_xxx;
   _i+=1;
   _i<=obj_len(_arrProps) & ~_found
!};
_obj


\qlik_send
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: wysyła request do qlika
::   WE: _a [STRING] - metoda GET/POST/PUT/DELETE
::       _b [STRING] - adres
::       _c [STRING] - parametry
::       _d [STRING] - body requesta (post/put)
::       _e [INT] - (0) - zwraca json_parse, 1 - json_man
::   WY: json
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_e')<0 || _e:=0 ?};
_wynik:='';
_xrfkey:=exec('get_random_str','analizy_bi',16);
_http:=inet_get('https://'+XINFO.ANBI_URL+':4242/qrs');

_http.append_header('X-Qlik-xrfkey:'+_xrfkey);
_http.append_header('X-Qlik-User:UserDirectory=INTERNAL;UserId=sa_repository');
_http.append_header('Content-Type:application/json');
_http.append_header('Accept:application/json');

_http.set_opt('SSL_VERIFYPEER',0);
_http.set_opt('SSL_CERT', XINFO.ANBI_CER);
_http.set_opt('SSL_KEYPASSWD',pass_get(XINFO.ANBI_PSW));
::_http.set_verbose('abi_http.log');

_http.url_append(_b);
_http.url_add_param('xrfkey',_xrfkey);
{? var_press('_c')>0 & _c<>''
||
  _params:=spli_str(_c,'&');
  {!  _i:=1..obj_len(_params)  |!
     _ppp:=spli_str(_params[_i],'=');
     _http.url_add_param(_ppp[1],_ppp[2]);
     &_ppp
  !}
?};
{? var_press('_d')>0 || _body:=_d || _body:='' ?};
{? _a='GET'
||
:   _http.url_append(_c)
   _http_odp:=_http.http_get()
|? _a='POST'
||
   _http_odp:=_http.http_post(,_body)
|? _a='PUT'
||
   _http_odp:=_http.http_put(,_body)
|? _a='DELETE'
||
   _http_odp:=_http.http_del()
?};
{? _http_odp = 200 | _http_odp=201
||
  {? _e=0
  ||
    _wynik:=json_parse(_http.get_data())
  ||
    _wynik:=exec('json_man', '__jsonm', _http.get_data())
  ?}
|? _http_odp = 204
||
   _wynik:=''
||
   _wynik:=_http.get_data()
?};
{? _http_odp=200 | _http_odp=201 | _http_odp=204
||
   0
|?
   _http_odp=403
||
   _wynik:='Dostęp zabroniony (403).\nProszę sprawdzić certyfikat.'@;
   FUN.error(_wynik)
|? _http_odp>=400
||
   FUN.error('Błąd %1:\n%2'@[$_http_odp,_wynik])
?};
_wynik


\qlik_hub
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: wysyła request do qlika
::   WE: _a [STRING] - metoda, GET,POST...
::       _b [STRING] - url
::       _c
::       _d
::       _e [INT] - (0) - zwraca json_parse, 1 - json_man
::       _f - referer
::   WY: json
::----------------------------------------------------------------------------------------------------------------------
{? var_press('_e')=-1 || _e:=0 ?};
_wynik:='';
_xrfkey:=exec('get_random_str','analizy_bi',16);
_http:=inet_get('https://'+XINFO.ANBI_URL+_b);

:_http.append_header('X-Qlik-xrfkey:'+_xrfkey);
:_http.append_header('X-Qlik-User:UserDirectory=INTERNAL;UserId=sa_repository');
:_http.append_header('Content-Type:application/json');
:_http.append_header('Accept:application/json');
{? var_press('_f')>0
||
   _http.append_header('Referer: '+ 'https://'+XINFO.ANBI_URL+_f)
?};
_http.set_opt('SSL_VERIFYPEER',0);
:_http.set_opt('SSL_CERT', XINFO.ANBI_CER);
:_http.set_opt('SSL_KEYPASSWD',pass_get(XINFO.ANBI_PSW));
_http.set_verbose('abi_http.log');

{? _a='GET'
||
:   _http.url_append(_c)
   _http_odp:=_http.http_get()
|? _a='POST'
||
   _http_odp:=_http.http_post(,_body)
|? _a='PUT'
||
   _http_odp:=_http.http_put(,_body)
|? _a='DELETE'
||
   _http_odp:=_http.http_del()
?};
{? _http_odp = 200 | _http_odp=201
||
  {? _e=0
  ||
    _wynik:=json_parse(_http.get_data())
  |? _e=1 ||
    _wynik:=exec('json_man', '__jsonm', _http.get_data())
  |? _e=2 ||
     _http.get_data()
  ?}
|? _http_odp = 204
||
   _wynik:=''
||
   _wynik:=_http.get_data()
?};
{? _http_odp=200 | _http_odp=201 | _http_odp=204
||
   0
|? _http_odp>=400 ||
   FUN.error('Błąd %1:\n%2'@[$_http_odp,_wynik])
?};
_wynik


\add_user
::----------------------------------------------------------------------------------------------------------------------
::  UTW: trocek [21.14]
:: OPIS: dodaje uzytkownika w Qlik
::   WE: _a - kod usera z merit
::----------------------------------------------------------------------------------------------------------------------
_wynik:='';
_xrfkey:=exec('get_random_str','analizy_bi',16);
_http:=inet_get('https://'+XINFO.ANBI_URL+':4243/qps/ticket?xrfkey='+_xrfkey);
_http.append_header('X-Qlik-xrfkey:'+_xrfkey);
_http.append_header('X-Qlik-User:UserDirectory=internal;UserId=sa_repository');
_http.append_header('Content-Type:application/json');
_http.append_header('Accept:application/json');
_http.set_opt('SSL_VERIFYPEER',0);
_http.set_opt('SSL_CERT',XINFO.ANBI_CER);
_http.set_opt('SSL_KEYPASSWD',pass_get(XINFO.ANBI_PSW));
_body:='{\"UserDirectory\":\"'+XINFO.ANBI_QUD+'\",\"UserId\":\"'+_a+'\",\"Attributes\":[]}';
_http_odp:=_http.http_post(,_body);
{? _http_odp = 201 ||
  _tab:=json_parse(_http.get_data());
  _wynik:='QlikTicket='+_tab.Ticket
?};
_qlikTicket:=_wynik;
{? _qlikTicket<>''
||
   _urlref:='/hub/?'+_qlikTicket;
   _res:=exec('qlik_hub','abi','GET',_urlref,,,2);
   _res:=exec('qlik_hub','abi','GET','/api/hub/v1/user/info',,,2,_urlref);
   ''
?}

\chkLic
::----------------------------------------------------------------------------------------------------------------------
::  UTW: BF [23.25]
:: OPIS: Funkcja sprawdza czy biezący użytkownik ma licencje Qlik
::   WY: 1 - ma licencje, 0 nie ma licencji
::----------------------------------------------------------------------------------------------------------------------
exec('czytaj','#stalesys',,XINFO,'ANBI_AM','ANBI_URL','ANBI_QUD','ANBI_CER','ANBI_PSW','ANBI_DKL');
{?XINFO.ANBI_AM<>'T' | XINFO.ANBI_URL='' | XINFO.ANBI_CER='' || return(0) ?};
exec('init','abi');
__qlictab.erase();
__qinfotab.erase();
_wyn:=exec('get_proaccessusers','abi');
{? type_of(_wyn)=2 & _wyn<>'' || return(0) ?};
_wyn2:=exec('get_analyzeraccessusers','abi');
{? type_of(_wyn2)=2 & _wyn2<>'' || return(0) ?};
__qlictab.find_key(app_info('app_user'))



:Sign Version 2.0 jowisz:1048 2023/06/23 14:14:36 ca76682ca505c949abea0bb2f14b30755056136e8640f1d16a38d3102b12ec14ad1a712a486cc7b015398ee6be77db9574d3bdcc90bfd066c878d6c134226967df1dcb3a15ac368baad05faf7824ca450d7651b99b7385c22ea3a1e2b31fa4f5a0a9e15b472049e2cc3e32e7199acd160fd887113ebab3624cddbbe92c7f6fc2
