:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: ppk_wif.fml [12.51]
:: Utworzony: 2019/05/27
:: Autor: jaws
:: Systemy: PPK
::======================================================================================================================
:: Zawartość: Formuły odpowiedzialne za obsługę kartoteki instytucji finansowych uczestnika.
::======================================================================================================================


\_modb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Przed modyfikacją (dołączenie/poprawienie) wiersza tabeli PPK_WIF.
::   WE:
::   WY: zgodny ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
{? PPK_WIF.PPK_WNU<>null
|| PPK_WNU.cntx_psh();
   PPK_WIF.PPK_UCZ:=PPK_WIF.PPK_WNU().PPK_UCZ;
   PPK_WNU.cntx_pop()
?};
PPK_WIF.BLOKADA:={? PPK_WIF.WNU_BLT<>null || 'T' || 'N' ?};
1


\_chk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Sprawdza wypełnienie wymaganych pól. Wykorzystywana w wyzwalaczach przed dołącz i popraw.
::   WE: _a [INTEGER] - Tryb modyfikacji danych
::          0 - dołączanie (domyślnie)
::          1 - poprawianie
::   WY: wynik testu poprawności danych zależny od kontekstu wywołania:
::       - jako formuła "rekord po"
::          - akronim niewypełnionego pola
::          - akronim pola o błędnej wartości
::          - 0 w przypadku powielenia unikalnego klucza
::       - jako formuła sprawdzająca dla wyzwalaczy "dołącz przed" i "popraw przed"
::          - 1 wiersz poprawny
::          - 0 niewypełnione wymagane pole, błędna wartość pola, powielony unikalny klucz
::----------------------------------------------------------------------------------------------------------------------
:: mapa argumentów
_mode:={? var_pres('_a')=type_of(0) || _a<>0 ?};

__CHK.validate(PPK_WIF,
   $("_a.table(_b,"+$_mode+",,'ADRES','NR_RACH')"),
   "  {? ~exec('jest_a11','ppk')
      || return(1)
      ?};
      _b.ADRES();
      {? _a.record(ADRES,,'NIP')<>''
      || 'ADRES'
      || 1
      ?}
   "
)


\_addb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyzwalacz "przed dołącz" tabeli PPK_WIF.
::   WE:
::   WY: zgodny ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('_modb','ppk_wif') & exec('_chk','ppk_wif',0)


\_putb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Wyzwalacz "przed popraw" tabeli PPK_WIF.
::   WE:
::   WY: zgodny ze specyfikacją narzędzi
::----------------------------------------------------------------------------------------------------------------------
exec('_modb','ppk_wif') & exec('_chk','ppk_wif',1)


\zab_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Akcja "Zablokuj" okienek tabeli PPK_WIF.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
PPK_WIF.WNU_BLT:=__WNU_BL;
PPK_WIF.put();
~~


\odb_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Akcja "Odblokuj" okienek tabeli PPK_WIF.
::   WE:
::   WY: ~~
::----------------------------------------------------------------------------------------------------------------------
PPK_WIF.WNU_BLT:=null;
PPK_WIF.put();
~~


\wb_rek_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [19.22]
:: OPIS: Akcja "rekord przed" okienka WERWB tabeli PPK_WIF.
::   WE: _a INTEGER - zgodny ze specyfikacją narzędzi
::   WY:
::----------------------------------------------------------------------------------------------------------------------
{? _a
|| PPK_WIF.actions_grayed(cur_win(1,1),{? PPK_WIF.BLOKADA='T' || 'Z' || 'O' ?})
?};
0


\rek_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Po edycji wiersza tabeli PPK_WIF.
::   WE: _a INTEGER - rodzaj edycji: 0/1 - dołączenie/poprawianie
::   WY: 1 w przypadku gdy rekord jest poprawny, akronim wymaganego pola lub 0 gdy doszło do powielenia klucza.
::----------------------------------------------------------------------------------------------------------------------
exec('_modb','ppk_wif');
exec('_chk','ppk_wif',-menu_txt()='popraw')


\wnd_b
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Przed wyświetleniem okienka tabeli PPK_WIF.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
__WNU_BL:=PPK_WNU.ref();
1


\wnd_a
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [12.51]
:: OPIS: Przy zamknięciu okienka tabeli PPK_WIF.
::   WE:
::   WY: 1
::----------------------------------------------------------------------------------------------------------------------
__WNU_BL:=PPK_WNU.ref();
1


\dodaj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: TMR [12.51]
:: OPIS: Funkcja dodająca zapis w tabeli PPK_WIF na podstawie podanych parametrów
::   WE: _a [REFERENCE] - wskazanie na deklarację/wniosek PPK (PPK_WNU)
::       _b [REFERENCE] - wskazanie na instytucję finansową (ADRES)
::       _c [STRING]    - numer rachunku uczestnika w instytucji finansowej
::   WY: null / ref
::----------------------------------------------------------------------------------------------------------------------
_result:=null();
_ppk_wnu:={? var_pres('_a')=type_of(null()) || _a || return(_result) ?};
  _adres:={? var_pres('_b')=type_of(null()) || _b || return(_result) ?};
_nr_rach:={? var_pres('_c')=type_of('')     || _c || return(_result) ?};


PPK_WIF.cntx_psh();
PPK_WIF.index('UNIQUE');
PPK_WIF.prefix(_ppk_wnu,_adres,_nr_rach,);
{? PPK_WIF.first()
|| _result:=PPK_WIF.ref()
|| PPK_WIF.blank(1);
   PPK_WIF.PPK_WNU:=_ppk_wnu;
   PPK_WIF.ADRES:=_adres;
   PPK_WIF.NR_RACH:=_nr_rach;
   {? PPK_WIF.add() || _result:=PPK_WIF.ref() ?}
?};
PPK_WIF.cntx_pop();
_result

:Sign Version 2.0 jowisz:1048 2020/10/16 15:22:56 d5c746695f423d27a880a1c28ae52f0280717d46fe6d31fa862b83fd4801853422f8556fe2bba80b1ff3609016b1932540975a410aa61d9f1ad950fe9d0f2d1d592054b3b50a2b5748f8e9a921d046de0584d83fea419ef60d89c06f01ea7250ae2fab9ce568a0dec82c892dd7a1893279b5fceb736d99131da52ff307ea8df3
