:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: kasa_raport.fml
:: Utworzony: 22.05.2015 [17.00]
:: Autor: AMK
::======================================================================================================================
:: Zawartość: Formuły do obsługi raportów kasowych
::======================================================================================================================


\rap_code
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: Zwraca numer w zaleznosci od parametru - statusu raportu
::  OLD: \rap_code/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
_m:=-1;
{! _n:=0..5
|? {? _a <> exec('rap_stat','kasa_raport',_n)
   || 1
   || _m:=_n; 0
   ?}
!};
_m


\rap_stat
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: Znakowy status raportu
::  OLD: \rap_stat/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
{? _a=0 || 'otwarty'
|? _a=1 || 'zakończony'
|? _a=2 || 'zamknięty'
|? _a=3 || '->dekretowany'
|? _a=4 || 'zadekretowany'
|? _a=5 || 'zadekretowany częściowo'
|| 'BŁĄD'
?}


\set_lock
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: Blokowanie raportu
::  OLD: \set_lock/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
{? RAPORT.r_lock(1,1,1)
||
:: raport na status _a
   RAPORT.STATUS:=exec('rap_stat','kasa_raport',_a);
   RAPORT.put;
   RAPORT.r_unlock();
   1
?}


\kas_open
::----------------------------------------------------------------------------------------------------------------------
::  UTW: Mario [2009]
:: OPIS: otwarcie tabel maskowalnych systemu KASA
::   WE: _a - numer raportu kasowego
::       _b - rok
::  OLD: \kas_open/kasa_wsp.fml
::----------------------------------------------------------------------------------------------------------------------
RAPORT.use('krp'+form(_a,-3)+(form(_b)+2));
DOKUMENT.use('kdo'+form(_a,-3)+(form(_b)+2));
POZDOK.use('kpd'+form(_a,-3)+(form(_b)+2));
VPD.use('vpd'+form(_a,-3)+(form(_b)+2));
OBROTY.use('kob'+form(_a,-3)+(form(_b)+2));
''


\rap_num
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: Wartość początkowa RAPORT.NUM_RAP
::   WE:
::   WY:
::  OLD: \rap_num/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
{? RAPORT.NUM_RAP=0 & -menu_txt<>'wydruki'
|| USRCONST.STANKAS(); KUSERUPR.STANKAS();
   STANKAS.F_NUMER();
   {? STANKAS.F_NUMER<>0
   || _numer:=FL.run();
      {? _numer<=0
      || _numer:=1
      ?};
      RAPORT.cntx_psh();
      {? _numer<>1 & ~RAPORT.first()
      || _zwrot:=FUN.choice('Dołączany raport jest pierwszym w bieżącym roku obrachunkowym\n'
            'dla wybranego stanowiska. Jaki mu nadać numer?'@,2,$1,$_numer+' - obliczony'@);
         _numer:={? _zwrot=1 || 1 || _numer ?}
      ?};
      RAPORT.cntx_pop();
      _numer
   ?}
?}


\rap_numb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: Przed redagowaniem RAPORT.NUM_RAP
::   WE:
::   WY:
::  OLD: \rap_numb/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
0


\rap_numa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: Po redagowaniem RAPORT.NUM_RAP
::   WE:
::   WY:
::  OLD: \rap_numa/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
1


\rap_dodb
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: Przed redagowaniem RAPORT.DATA_OD
::   WE:
::   WY:
::  OLD: \rap_dodb/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
{? ~exec('is_dok','kasa_raport')
|| _a:=date;
   RAPORT.cntx_psh();
   RAPORT.index('NUMER');
   {? RAPORT.find_le(RAPORT.NUM_RAP)
   || _a:=RAPORT.DATA_DO;
      {? _a=date(0,0,0) || _a:=date ?}
   ?};
   RAPORT.cntx_pop();
   USRCONST.ROK();
   {? _a > exec('data_okr','kasa_wspolne',USRCONST.ROK,1)
    | _a < exec('data_okr','kasa_wspolne',USRCONST.ROK,0)
   || RAPORT.DATA_OD:=exec('data_okr','kasa_wspolne',USRCONST.ROK,0)
   || {? RAPORT.DATA_OD=date(0,0,0) || RAPORT.DATA_OD:={? RAPORT.size() ||  _a+1 || _a ?} ?}
   ?};
   1
?}


\is_dok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: Sprawdza czy jest dokument w raporcie kasowym
::   WE:
::   WY: 0-nie, 1-tak
::  OLD: \is_dok/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
{? Popraw=1
:: tryb poprawiania
|| DOKUMENT.index('RAPORT');
   DOKUMENT.prefix(RAPORT.ref);
   DOKUMENT.first()
:: tryb poprawiania
|| 0
?}


\rap_doda
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: Po redagowaniem RAPORT.DATA_OD
::   WE:
::   WY:
::  OLD: \rap_doda/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
::   date(#ROK_F.NAZ,1,1)
::   date(#ROK_F.NAZ,12,31)  <--- to było wcześniej
USRCONST.ROK();
{? RAPORT.DATA_OD >= exec('data_okr','kasa_wspolne',USRCONST.ROK,0)
 & RAPORT.DATA_OD <= exec('data_okr','kasa_wspolne',USRCONST.ROK,1)
||
   _a:=date-1;
:: _b równe jeden oznacza że jest wcześniej raport
   _b:=0;
   RAPORT.cntx_psh();
   RAPORT.index('NUMER');
   RAPORT.clear();
:: sprawdzamy czy jest raport o numerze wczesniejszym';
   {? RAPORT.find_le(RAPORT.NUM_RAP-1)
    || _a:=RAPORT.DATA_DO; _b:=1
   ?};
   _c:=_a; _d:=0;
:: _d rowne 1 oznacza ze byl pozniej raport
:: sprawdamy czy jest raport o numerze pozniejszym
   {? RAPORT.find_ge(RAPORT.NUM_RAP+1)
   || _c:=RAPORT.DATA_DO; _d:=1
   ?};
   RAPORT.cntx_pop();

   {? RAPORT.DATA_DO=date(0,0,0)
   || RAPORT.DATA_DO:=
      {? _d = 1
::    byl wczesniejszy raport - data do to daqta 0 jeden mniejsza
      || _c - 1
::    raportu pozniej nie ma
      ||
:: Poczatek modyfikacji MacLex 02-01-2010 WS [1110]
          _ild:=
            {? (RAPORT.DATA_OD + STANKAS.ILDNI)~1=RAPORT.DATA_OD~1
            || STANKAS.ILDNI
            || date(RAPORT.DATA_OD~1,12,0)-RAPORT.DATA_OD
            ?};
         RAPORT.DATA_OD +
         {? (RAPORT.DATA_OD + _ild)~1=RAPORT.DATA_OD~1
::       jesli kolejny dzien zawiera sie w roku
         || USRCONST.STANKAS();
            KUSERUPR.STANKAS();
            {? STANKAS.CZY_KDNI = 'T'
::          jesli jest dopuszczalny raport kilkudniowy
::          do data do jest dniem kolejnym
::          dodano z Maclexa dodatkowe pole przechowujace il.dni raportu
            ||
               _ild
:: Koniec modyfikacji MacLex
::          wpp to data otwarcia raportu
            ||
               0
            ?}
::       kolejny dzien nie zawiera sie w roku
         || 0
         ?}
      ?}
   ?};
   {? RAPORT.DATA_OD = _a & _b=1
   ||
::    data początkowa taka sama jak data końcowa raportu poprzedniego
::    badamy czy taki stan jest dozwolony
      {? STANKAS.CZY_KILK = 'T'
      || 1
      || exec('msg_wart','kasa_raport','Data od', 'Parametry stanowiska nie pozwalają na'
         '\nwprowadzanie kilku raportów dziennie.'@);
         0
      ?}
   |? RAPORT.DATA_OD < _a & _b=1
   || exec('msg_wart','kasa_raport','Data od','Raporty zachodzą na siebie.'@);
      0
   || 1
   ?}
|| exec('msg_wart','kasa_raport','Data od','Data musi pochodzić z bieżącego roku: %1.'@[ROK_F.NAZ]);
   0
?}


\rap_ddob
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: Przed redakcją pola RAPORT.DATA_DO badanie czy dopuszczalna jest zmiana
::   WE:
::   WY: 0/1 - zmiana niedopuszczalna/dopuszczalna
::  OLD: \rap_ddob/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
{? RAPORT.DATA_OD=date(0,0,0)
|| 0
|| {? RAPORT.DATA_DO=date(0,0,0)
   ||
::    raport nie może być kilkudniowy - data końcowa musi
::    być taka jak początkowa
      USRCONST.STANKAS();
      KUSERUPR.STANKAS();
      {? STANKAS.CZY_KDNI = 'T'
      || RAPORT.DATA_DO:=RAPORT.DATA_OD; 1
      || RAPORT.DATA_DO:=RAPORT.DATA_OD; 0
      ?}
   || 1
   ?}
?}


\rap_ddoa
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: Po redakcji pola RAPORT.DATA_DO badanie dopuszczalnych dla raportu zakresów dat
::   WE:
::   WY: 0/1 - nieprawidłowa/prawidłowa wartość
::  OLD: \rap_ddoa/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
:: raport może być tylko kilkudniowy - badamy czy data końcowa jest>=od pocz
{? RAPORT.DATA_OD < RAPORT.DATA_DO & STANKAS.CZY_KDNI='N'
|| RAPORT.DATA_DO:=RAPORT.DATA_OD;
   exec('msg_wart','kasa_raport','Data do','Parametry stanowiska nie pozwalają na '
   '\nwprowadzanie raportów kilkudniowych.'@);
   0
   |? RAPORT.DATA_DO>=RAPORT.DATA_OD
||
:: czy data końcowa nie zachodzi na następny miesiąc?
:: badamy i rok i miesiac
   {? (RAPORT.DATA_DO~1)*100+RAPORT.DATA_DO~2
      <>(RAPORT.DATA_OD~1)*100+RAPORT.DATA_OD~2
   || exec('msg_wart','kasa_raport','Data do','Raport nie może zachodzić na inny miesiąc.'@);
      0
   ||
::    badamy czy data_do raportu nie zachodzi na następny raport
      RAPORT.cntx_psh();
      RAPORT.index('NUMER');
      RAPORT.clear();
::    sprawdzamy czy jest raport o numerze pozniejszym
      _b:=0;
      {? RAPORT.find_ge(RAPORT.NUM_RAP+1)
      || _a:=RAPORT.DATA_OD; _b:=1
      ?};
      RAPORT.cntx_pop();
      _noerror:=
         {? _b
         || {? _a < RAPORT.DATA_DO
            || exec('msg_wart','kasa_raport','"Data do"','"Data do" '
                  'późniejsza od daty otwarcia następnego raportu.'@);
              0
            |? _a = RAPORT.DATA_DO
            || USRCONST.STANKAS();
               KUSERUPR.STANKAS();
               {? STANKAS.CZY_KILK = 'T'
               || 1
               || exec('msg_wart','kasa_raport','Data do','"Data do" taka'
                  ' jak data otwarcia następnego raportu.\n'
                  '\nParametry stanowiska nie pozwalają na '
                  '\nwprowadzanie kilku raportów dziennie.'@);
                  0
               ?}
            || 1
            ?}
         || 1
         ?};
::    jesli nie bylo wykrytych innych bledow to sprawdzamy czy dokumenty
::    czy dokumenty zawierają sie w zakresie dat raportu
      {? _noerror=1
      || DOKUMENT.index('RAPORT');
         DOKUMENT.prefix(RAPORT.ref());
         {? DOKUMENT.last()
         || {? DOKUMENT.DATA<=RAPORT.DATA_DO
            || 1
            || exec('msg_wart','kasa_raport','Data do','Zakres dat raportu\n'
               'musi obejmować wszystkie dokumenty.\n\n'
               'Data ostatniego dokumentu: %1\n'@[$DOKUMENT.DATA]);
               RAPORT.DATA_DO:=DOKUMENT.DATA;
               0
            ?}
         || 1
         ?}
      || 0
      ?}
   ?}
|| exec('msg_wart','kasa_raport','Data do','"Data do" nie może być mniejsza od "Daty od".'@);
   0
?}


\msg_wart
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: Ogólny komunikat
::   WE: _a - nazwa pola
::       _b - opis
::   WY:
::  OLD: \msg_wart/pom.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('\nNiepoprawna wartość pola "%1".\n\n%2'@[_a,_b])


\o_rapdol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: Raport - dołącz
::   WE:
::   WY:
::  OLD: \o_rapdol/okna.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('rap_dol','kasa_raport')
|| Popraw:=0;
   1
?}


\rap_dol
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: sprawdzenie czy można dołączyć raport
::   WE:
::   WY:
::  OLD: \rap_dol/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=1;
{? USRCONST.ROK().ZAM='N'
|| USRCONST.STANKAS();
   {? exec('czy_euro','waluty',STANKAS.WALUTA().SYM,0)
   || {? STANKAS.CZY_OTW='N'
      || RAPORT.cntx_psh();
         {? RAPORT.last()
         || _a:=(exec('rap_code','kasa_raport',RAPORT.STATUS)>=2)
         || _a:=exec('prev_yea','kasa_raport');
            {? _a=-1 || 1 || _a>=2 ?}
         ?};
         RAPORT.cntx_pop();
         {? _a=0
         || FUN.info('\nRaportu nie można dołączyć.\n'
                '\nParametry stanowiska nie pozwalają na otwieranie'
                '\nnowego raportu przed zamknięciem poprzedniego.'@)
         ?}
      ?};
      {? _a=1
      || {? STANKAS.CZY_KILK='N'
         || RAPORT.cntx_psh();
            {? RAPORT.last()
            || USRCONST.ROK();
               _a:=RAPORT.DATA_DO < exec('data_okr','kasa_wspolne',USRCONST.ROK,1)
            ?};
            RAPORT.cntx_pop();
            {? _a=0 || FUN.info('\nRaportu nie można dołączyć w danym roku obrachunkowym.'@) ?}
         ?}
      ?}
   || FUN.info('Raport nie może być dołączony.\n\n'
         'Domyślna waluta stanowiska należy\n'
         'do zabronionych walut unii walutowej.'@); _a:=0
   ?}
|| FUN.info('Raport nie może być dołączony.\n\n'
      'Rok %1 jest zamknięty.'@[ROK_F.NAZ]); _a:=0
?};
_a


\prev_yea
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: zwraca status ostatniego raportu w poprzednim roku
::   WE:
::   WY:
::  OLD: \prev_yea/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
_a:=-1;
USRCONST.ROK();
{? exec('rap_prev','kasa_wspolne')
|| RAPORT.index('NUMER');
   {? RAPORT.last()
   || _a:=exec('rap_code','kasa_raport',RAPORT.STATUS)
   ?};
   exec('rap_biez','kasa_wspolne')
?};
USRCONST.ROK();
_a


\o_rapdpo
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS:  wywolywana na akcje po dolacz w okienku raportow
::  OLD: \o_rapdpo/okna.fml
::----------------------------------------------------------------------------------------------------------------------
STANKAS.R_NUMER:=RAPORT.NUM_RAP+1;
STANKAS.put()


\o_rapdok
::----------------------------------------------------------------------------------------------------------------------
::  UTW: [rr] [2011]
:: OPIS: wywolywana na akcje pozycje w okienku raportow
::   WY: 0
::  OLD: \o_rapdok/okna.fml
::----------------------------------------------------------------------------------------------------------------------
USERS.cntx_psh();
WAL.cntx_psh();
USRCONST.STANKAS();
KUSERUPR.STANKAS();
ROZNE.BLOK_RAP:=0;
{? ROZNE.BLOK_RAP:=exec('dost_dok','kasa_dokument'); ROZNE.BLOK_RAP<>0
|| DOKUMENT.index('RAPORT'); DOKUMENT.prefix(RAPORT.ref);
   exec('bo_rap','kasa_wspolne');
   exec('dok_suma','kasa_wspolne');
   MLKAS.MIN:=STANKAS.MIN;
   {? KPARAM.CZY_B='T' & KPARAM.D<>'C' & STANKAS.ZNAKI='T'
   || _act:=':'
   || _act:='F:'
   ?};
   {? STANKAS.WALUTA<>null()
   || _act:='I'+_act
   ?};
   {? KUSERUPR.UPR<>'T'
      | (exec('rap_code','kasa_raport',RAPORT.STATUS)<>0 & exec('rap_code','kasa_raport',RAPORT.STATUS)<>1)
   || _act:='DPUZKA'+_act+'ADW'
   ?};
   {? +_act=1 || _act:='' ?};
   DOKUMENT.actions(DOKUMENT.win_sel('?'),_act);
   DOKUMENT.select();
   exec('rap_suma','kasa_wspolne');
   {? ROZNE.BLOK_RAP=1 || RAPORT.r_unlock() ?}
?};
WAL.cntx_pop();
USERS.cntx_pop();
0


\o_rappop
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: na akcje popraw raport w tabeli raport
::  OLD: \o_rappop/okna.fml
::----------------------------------------------------------------------------------------------------------------------
{? exec('rap_code','kasa_raport',RAPORT.STATUS)=0
|| {? RAPORT.r_lock(1,1)
   || Popraw:=1; 1
   || FUN.info('Nie można poprawiać raportu.'
         '\nObsługiwany przez innego użytkownika.'@); 0
   ?}
|| FUN.info('Raportu nie można poprawiać.'
      '\n\nStatus raportu jest "%1".'@[RAPORT.STATUS]); 0
?}


\o_rapusu
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: wywoływana na akcję usuń w okienku raportów
::   WE:
::   WY:
::  OLD: \o_rapusu/okna.fml
::----------------------------------------------------------------------------------------------------------------------
:: założenie blokady na raport - znacznik zmieniany
{? exec('dost_dok','kasa_dokument')
|| DOKUMENT.index('RAPORT');
   DOKUMENT.prefix(RAPORT.ref);
   {? ~DOKUMENT.first()
   || {? FUN.ask('Na pewno usunąć raport?'@)
      || do();
         OBROTY.index('RAPORTR'); OBROTY.prefix(RAPORT.ref());
         {? OBROTY.first() || {! |? OBROTY.del() !} ?};
         USRCONST.STANKAS(); KUSERUPR.STANKAS();

         RAPORT.r_unlock();
         RAPORT.del();
         RAPORT.cntx_psh(); RAPORT.prefix();
         {? RAPORT.last()
         || STANKAS.R_NUMER:=RAPORT.NUM_RAP+1; STANKAS.put()
         || ROK_F.cntx_psh(); ROK_F.index('ROKPOCZ'); ROK_F.prefix(REF.FIRMA);
            USRCONST.ROK(); _numer:=1;
            {? ROK_F.prev()
            || {! |?
                  {? RAPORT.use('krp'+form(STANKAS.KOD,-3)+(form(ROK_F.KOD)+2))
                  || RAPORT.index('NUMER'); RAPORT.prefix();
                     {? RAPORT.last() || _numer:=RAPORT.NUM_RAP+1 ?}
                  ?};
                  _numer=1 & ROK_F.prev()
               !}
            ?};
            STANKAS.R_NUMER:=_numer; STANKAS.put();
            ROK_F.cntx_pop()
         ?};
         RAPORT.cntx_pop();
         end()
      || RAPORT.r_unlock()
      ?}
   || RAPORT.r_unlock();
      FUN.info('Raport zawiera dokumenty.\n'
         'Raportu nie można usunąć.'@)
   ?}
|| FUN.info('Brak dostępu, niewłaściwy status bądź użytkownik\n nie ma uprawnień do tej operacji.\n'
      'Raportu nie można usunąć.'); 0
?};
0


\rap_wyr
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL  [8.40]
:: OPIS: Formula Rekord przed dla okienek wertowania tabeli RAPORT
::  OLD: \rap_wyr/okna.fml
::----------------------------------------------------------------------------------------------------------------------
_code:=exec('rap_code','kasa_raport',RAPORT.STATUS);
_zmien:={? _code>1 | ~_code || 'R' || '' ?}+{? _code<>1 & _code<>2 & _code<>3 || 'M' || '' ?};
{? RAPORT.STATUS<>exec('rap_stat','kasa_raport',0)
|| RAPORT.actions_grayed('WER','PZ'+_zmien)
|| RAPORT.actions_grayed('WER',''+_zmien)
?};
{? RAPORT.STATUS=exec('rap_stat','kasa_raport',2) || 'RAPORT#01#01'
|? RAPORT.STATUS=exec('rap_stat','kasa_raport',4) || 'RAPORT#01#02'
|? RAPORT.STATUS=exec('rap_stat','kasa_raport',5) || 'RAPORT#01#03'
|| ''
?}


\o_rapchk
::----------------------------------------------------------------------------------------------------------------------
::  UTW: - [--.--]
:: OPIS: dodatkowa walidacja dat w raporcie
::   WE:
::   WY:
::  OLD: \o_rapchk/okna.fml
::----------------------------------------------------------------------------------------------------------------------
{? RAPORT.DATA_OD>RAPORT.DATA_DO
|| FUN.info('\nNieprawidłowy zakres dat.'@);
   'DATA_OD'
|| ''
?}


\chk_sal
::----------------------------------------------------------------------------------------------------------------------
::  UTW: RL,RF [7.22]
:: OPIS: Funkcja sprawdza, czy aktualny raport wykazuje saldo
::       ujemne dla operacji kasowych.
::   WY: 0/1
::  OLD: \chk_sal/poz_pola.fml
::----------------------------------------------------------------------------------------------------------------------
_ok:=1;
POZDOK.cntx_psh();
DOKUMENT.cntx_psh();
WAL.cntx_psh();
DOKUMENT.index('WALUTA');
WAL.index('WAL_SYM'); WAL.prefix();
{? WAL.first()
|| {!|? DOKUMENT.prefix(RAPORT.ref, WAL.SYM);
        {? DOKUMENT.first()
        || BO.PR_WAL:=0;
           _saldo:=exec('srodki','kasa_wspolne', WAL.SYM);
           {? (_saldo<0) & (-USRCONST.STANKAS().STANKAS().CZY_SMIN<>'t')
           || {? ~_a || FUN.info('Saldo kasy ujemne.\n %1 %2.'@[WAL.SYM,form(_saldo,,2)]) ?};
              _ok:=0
           ?}
        ?};
        _ok & WAL.next()
   !}
?};
DOKUMENT.cntx_pop();
POZDOK.cntx_pop();
WAL.cntx_pop();
_ok


\sta_prev
::----------------------------------------------------------------------------------------------------------------------
::  UTW: ?? [--.--]
:: OPIS: zwraca statuc poprzedniego raportu
::   WY: 0/1/2/3/4/5 - statusy raportów patrz w \rap_stat/kasa_raport.fml
::  OLD: \sta_prev/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
_wyn:=0;
RAPORT.cntx_psh();
{? RAPORT.prev()
|| _wyn:=exec('rap_code','kasa_raport',RAPORT.STATUS)
|| _wyn:=exec('prev_yea','kasa_raport');
:: jesli -1 to nie ma raportów w poprz. roku
   {? _wyn=-1 || _wyn:=2 ?}
?};
RAPORT.cntx_pop();
_wyn


\parses
::----------------------------------------------------------------------------------------------------------------------
::  UTW: MB [17.00]
:: OPIS: Formuła ustala PARSES dla czynności na podstawie parametru, wskazanie na rekord tabeli RAPORT
::       UWAGA. Do pobrania parametrów stosować params_get() = tablica nazwana:
::       in  - [obj_new] - parametry wejściowe czynności
::   WY: 0/1
::----------------------------------------------------------------------------------------------------------------------
_result:=0;
_in:=params_get().in;
_out:=params_get().out;
{? var_pres('RAPORT',_in) & var_pres('RAPORT',_in)=type_of(null()) & _in.RAPORT<>null
|| _name:=ref_name(_in.RAPORT);
   _rk:=#(3-_name-2);
   STANKAS.index('KOD'); STANKAS.prefix();
   {? STANKAS.find_key(_rk)
   || __PARSES.setVal('StKasowe',STANKAS.ref());
      _result:=1
   || FUN.emsg('Nie znaleziono raportu kasowego.'@)
   ?};
   RAPORT.cntx_psh();
   RAPORT.use(_name);
   RAPORT.index('DATA'); RAPORT.prefix();
   {? RAPORT.seek(_in.RAPORT)
   || OKRO_F.cntx_psh();
      OKRO_F.index('KON'); OKRO_F.prefix(REF.FIRMA);
      {? OKRO_F.find_ge(RAPORT.DATA_OD)
      || _okro:=OKRO_F.ref()
      || _okro:=SSTALE.AO
      ?};
      OKRO_F.cntx_pop();
      _args:=__PARSES.args('OkresRok');
      _args.OBSZAR:='KAS';
      _args.OKRO_F:=_okro;
      __PARSES.setVal('OkresRok',_args)
   ?};
   RAPORT.cntx_pop()
|| _result:=1
?};
_result


\o_rapdru
::----------------------------------------------------------------------------------------------------------------------
::  UTW: -- [--.--]
:: OPIS: Drukuj dla raportu kasowego
::  OLD: \o_rapdru/okna.fml
::----------------------------------------------------------------------------------------------------------------------
{? STANKAS.WALUTA=exec('wal_nar','kasa_wspolne')
|| WYDRUKI.win_edit('RAPKAS1'); wal:=0
|| WYDRUKI.win_edit('RAPKAS'); wal:=1
?};
WYDRUKI.PAR1:=WYDRUKI.PAR2:='T';WYDRUKI.PAR3:=WYDRUKI.PAR4:='N';
{? MLEX.RAP_ZB='' || MLEX.RAP_ZB:='T' ?};
{? KPARAM.CZY_B='T'
|| _a:=FUN.choice('Wydruk raportu'@,1,'&Rodzajowego'@,'&Paragrafowego'@,'&Znakowy'@);
   {? _a=1
   || {? WYDRUKI.edit() || rep_exec('kas_rapkas'+{? WYDRUKI.PAR3='T' | WYDRUKI.PAR4='T' || '2' || '1' ?} ) ?}
   |? _a=2
   ||  rep_exec('kas_raprodz2')
   |? _a=3
   ||  rep_exec('kas_raprodz')
   ?}
|| {? WYDRUKI.edit() || rep_exec('kas_rapkas'+{? WYDRUKI.PAR3='T' | WYDRUKI.PAR4='T' || '2' || '1' ?} ) ?}
?};
&wal; 1


\begzmsta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula poczatkowa dla grupowej zmiany statusu raportow kasowych
::  OLD: \begzmsta/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
licz_gr:=0; zazn_rap:=RAPORT.sel_size();
_ask:=FUN.ask('Czy zmienić status w zaznaczonych raportach?'@);
{? ~_ask || &zazn_rap; &licz_gr ?};
_ask


\aegzmsta
::----------------------------------------------------------------------------------------------------------------------
::  UTW: AMK [8.60]
:: OPIS: Formula koncowa dla grupowej zmiany statusu raportow kasowych
::  OLD: \aegzmsta/rap_pola.fml
::----------------------------------------------------------------------------------------------------------------------
FUN.info('Liczba zaznaczonych raportów: %1\nLiczba raportów ze zmienionym statusem: %2.'@[$zazn_rap,$licz_gr]);
&zazn_rap; &licz_gr;
1

:Sign Version 2.0 jowisz:1045 2022/06/30 14:23:18 affac96bf0bb0899f5fb67ade7f7b16549cd2f415ba1b9232a162481638df2c2f7848a99fe4b045d2ef18c1b6121e32917e3f0d0fac5b0ec78710573be8d37a4f8e4fc21873a78ba3a59cc56d81a05e733031f9cf33b69265eb49279bdb099d69fc02e8364ebb15119eeeb727b92bd1d6cc393652b4c1ddadb1e61a9889d858f
