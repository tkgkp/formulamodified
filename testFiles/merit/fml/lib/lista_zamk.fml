:!UTF-8
:: (c) Macrologic S.A. Wszelkie prawa zastrzeżone
::======================================================================================================================
:: Nazwa pliku: lista_zamk.fml
:: Utworzony: 2016/03/15
:: Autor: jaws
::======================================================================================================================
:: Zawartość: Formuły bibioteczne dla zamknięcia listy płac.
::======================================================================================================================


\kzup_licz
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Oblicza wartości w karcie płacowej pracownika/osoby.
::   WE: _a [_O] - wskazanie zamykaniej/otwieranej listy płac
::       _b [INTEGER] - czy pozostawić blokady rekordów?
::          dowolna liczba różna od 0 - tak
::          wpp - nie
::   WY: wynik aktualizacji kart
::----------------------------------------------------------------------------------------------------------------------
_unlock:='';

{? O.r_lock(1,1,1,_a)
|| _unlock+={? var_pres('_b')<>type_of(0) | _b=0 || 'O.r_unlock()' || '~~' ?}
|| return(0)
?};

_P:=tab_tmp(1,'REF','INTEGER',);
_OSOBA:=tab_tmp(1,'REF','INTEGER',);

{? type_of(_P)<>type_of(SYSLOG) | type_of(_OSOBA)<>type_of(SYSLOG)
|| return(0)
?};

_prolog:="
   O.cntx_psh();
   P.cntx_psh();
   O_P.cntx_psh()
";

_epilog:=$(_unlock+";
   O_P.cntx_pop();
   P.cntx_pop();
   O.cntx_pop()
");

_prolog();
O_P.index('UNIQUE');
O_P.prefix(_a);
_loop:=O_P.first();
{!
|? _loop
|! {? O_P.LS='T'
   || _osoba:=#O_P.P().OSOBA;
      {? ~_OSOBA.find_key(_osoba)
      || _OSOBA.REF:=_osoba;
         {? ~_OSOBA.add()
         || _epilog();
            return(0)
         ?}
      ?};
      _P.REF:=#O_P.P;
      {? ~_P.add()
      || _epilog();
         return(0)
      ?}
   ?};
   _loop:=O_P.next()
!};

{? _OSOBA.size()=0
|| _epilog();
   return(1)
?};

_result:=
   exec('kzup_sumuj','lista_zamk',_P,KZ,O.R,O.M) &
   exec('kzup_sumuj','lista_zamk',_P,KP,O.RP,O.MP) &
   exec('kzup_sumuj','lista_zamk',_OSOBA,KU,O.RU,O.MU);

_epilog();

_result


\kzup_licz_konf
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Przygotowuje tablicę zawierającą parametry aktualizacji kart płacowych.
::   WE: _a [TABLE] - alias tabeli karty płacowej (KZ/KP/KU)
::   WY: referencja tablicy nazwanej
::----------------------------------------------------------------------------------------------------------------------
_cfg:=obj_new(
   'NFO',
   'KEY',
   'MAP',
   'SUM',
   'CHK',
   'ERR'
);

: ustal kontekst obsługi karty
_cfg.NFO:=exec('kzup_info','kart_pla',_a);
_cfg.ERR:=1;

: klucz przeglądania tabeli O_P
_cfg.KEY:=
   {? _a=KZ || 'P_RMK'
   |? _a=KP || 'P_RMP'
   |? _a=KU || 'OS_RMU'
   ?};

_r_fld:=('R.'+_cfg.NFO.R_FLD);
_r_fld_chk:=$(_r_fld+'<>0');
_r_fld_val:=$(_r_fld);

R.cntx_psh();
R.index(_cfg.NFO.R_KEY);
R.prefix();
: określ największą warość wskazania
_loop:=R.find_ge(1);
_size:=0;
{!
|? _loop
|! {? _size<#R.ref()
   || _size:=#R.ref()
   ?};
   _loop:=R.next()
!};
: fatalny przypadek
{? _size=0
|| R.cntx_pop();
   return(_cfg)
?};
: utwórz i uzupełnij mapę
_map:=obj_new(_size);
_sum:=obj_new(_size);
_chk:='';
{! _ndx:=1.._size
|! _map[_ndx]:=0;
   _sum[_ndx]:=""
!};
_loop:=R.find_ge(1);
{!
|? _loop & _r_fld_chk()
|! _k_fld:=(2-!_a)+'.S'+$_r_fld_val();
   _map[#R.ref()]:=_r_fld_val();
   _sum[#R.ref()]:=$(_k_fld+'+=_a');
   {? _chk*(_k_fld+'<>0')=0
   || _chk+=(_k_fld+'<>0 |')
   ?};
   _loop:=R.next()
!};
: mapa gotowa
_cfg.MAP:=_map;
_cfg.SUM:=_sum;
_cfg.CHK:=$(_chk-2);
R.cntx_pop();

_cfg.ERR:=0;
_cfg


\kzup_sumuj
::----------------------------------------------------------------------------------------------------------------------
::  UTW: jaws [17.00]
:: OPIS: Aktualizuje kartę płacową.
::   WE: _a [TABLE] - alias do tabeli zawierającej numery wierszy pracowników/osób
::       _b [TABLE] - alias tabeli karty płacowej (KZ/KP/KU)
::       _c [INTEGER] - rok karty
::       _d [INTEGER] - miesiąc karty
::   WY: 1 - zaktualizowano karty lub nie było co aktualizować
::       0 - wystąpił błąd
::  OLD: \akt_kz/funkcje.fml
::  OLD: \akt_kpu/funkcje.fml
::----------------------------------------------------------------------------------------------------------------------
_cfg:=exec('kzup_licz_konf','lista_zamk',_b);
: błąd w konfiguracji
{? _cfg.ERR<>0
|| return(0)
?};

: oczekujemy sukcesu
_ok:=1;

_prolog:="
   _vjl:=VAR.JESTLIST;
   VAR.JESTLIST:=1;
   O_P.cntx_psh();
   O.cntx_psh();
   P.cntx_psh();
   OSOBA.cntx_psh();
   LS.cntx_psh();
   _a.cntx_psh();
   _a.clear();
   _a.index(_b);
   {? _a=KU
   || _a.prefix(exec('ref_firma','ustawienia'))
   ?};
   _vjl
";

_epilog:="
   VAR.JESTLIST:=_a;
   O_P.cntx_pop();
   O.cntx_pop();
   P.cntx_pop();
   OSOBA.cntx_pop();
   LS.cntx_pop();
   _b.cntx_pop()
";

_firma:=exec('ref_firma','ustawienia');
_key:='PRAC_'+(2-!_b);

_ref:={? _b=KU || "OSOBA.ref()" || "P.ref()" ?};
_vjl:=_prolog(_b,_cfg.NFO.KEY);
O_P.index(_cfg.KEY);
_loop:=_a.first();
{!
|? _loop & _ok
|! {? _b=KU
   || O_P.prefix(_firma,'T',_a.REF,_c,_d)
   || O_P.prefix('T',_a.REF,_c,_d)
   ?};
   _loop:=O_P.first();
   _mod:='';
   {? _loop
   || O_P.P().OSOBA();
      O_P.O();
      _b.blank();
      _mod:='add';
      {? _b.find_key(_ref(),_c,_d)
      || _mod:='put';
         _b.blank()
      ?}
   ?};
   {!
   |? _loop
   |! {? O_P.O().Z='T'
      || LS.use(-O.LT);
         LS.index(_key);
         LS.prefix(O_P.P);
         _loop:=LS.find_ge(1);
         {!
         |? _loop
         |! _cfg.SUM[#LS.RB](LS.KW);
            _loop:=LS.next()
         !}
      ?};
      _loop:=O_P.next()
   !};
:  aktualizacja zawartości karty
   _b.R:=_c;
   _b.M:=_d;
   {? _mod='add' & _cfg.CHK()
   || _ok:=_b.add()
   |? _mod='put'
   || {? _cfg.CHK()
      || _ok:=_b.put()
      || _ok:=_b.del(,1)
      ?}
   ?};
   _loop:=_a.next()
!};

_epilog(_vjl,_b);

_ok

:Sign Version 2.0 jowisz:1028 2019/06/07 15:59:53 118404fb83ef1fd2088a1d55b86b460d50dd4a48f5d74c566de5c8bfc57f0a626d29f3646016106470fbac6dba11d0ee3f9cc2eae66a1371022ff797a2b0d2296c21d8040d045b76dd02dbd9949a5f77a516f885dd731a2e16d75b78f76f55c63bcd0d641078613ca0f6edb7d2bfe1619bd85c40354a8ac5583a054a3303ac8d
